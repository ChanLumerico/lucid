on:
  workflow_dispatch: # Allow manual triggering via GitHub Actions UI

jobs:
  pypi-publish:
    name: Upload release to PyPI
    runs-on: ubuntu-latest
    environment: release
    permissions:
      id-token: write
    steps:
      - name: Check out the code
        uses: actions/checkout@v3

      # Extract the commit message
      - name: Get commit message
        id: get-commit-message
        run: echo "::set-output name=COMMIT_MESSAGE::$(git log -1 --pretty=%B)"

      # Extract version from commit message
      - name: Extract version from commit message
        id: extract-version
        run: |
          COMMIT_MESSAGE=${{ steps.get-commit-message.outputs.COMMIT_MESSAGE }}
          if [[ "$COMMIT_MESSAGE" =~ release-([0-9]+\.[0-9]+\.[0-9]+) ]]; then
            VERSION="${BASH_REMATCH[1]}"
            echo "::set-output name=VERSION::$VERSION"
          else
            echo "Commit message does not match the release pattern. Exiting."
            exit 1
          fi

      - name: Set up Python
        uses: actions/setup-python@v3
        with:
          python-version: '3.12'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          python -m pip install setuptools wheel twine

      - name: Update version in setup.py
        run: |
          VERSION=${{ steps.extract-version.outputs.VERSION }}
          sed -i "s/{{VERSION_PLACEHOLDER}}/$VERSION/g" setup.py

      - name: Build the package
        run: |
          python setup.py sdist bdist_wheel

      - name: Publish package distributions to PyPI
        env:
          PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
        run: |
          python -m twine upload dist/* -u __token__ -p $PYPI_TOKEN