from typing import Self

from lucid.types import _Scalar


class _TensorOps:
    def __add__(self, _: Self) -> Self: ...

    def __radd__(self, _: Self) -> Self: ...

    def __sub__(self, _: Self) -> Self: ...

    def __rsub__(self, _: Self) -> Self: ...

    def __mul__(self, _: Self) -> Self: ...

    def __rmul__(self, _: Self) -> Self: ...

    def __truediv__(self, _: Self) -> Self: ...

    def __rtrudiv__(self, _: Self) -> Self: ...

    def __matmul__(self, _: Self) -> Self: ...

    def __eq__(self, _: Self) -> Self: ...

    def __gt__(self, _: Self) -> Self: ...

    def __lt__(self, _: Self) -> Self: ...

    def __pow__(self, _: _Scalar) -> Self: ...

    def __neg__(self) -> Self: ...

    @property
    def T(self) -> Self: ...

    def dot(self, _: Self) -> Self: ...

    def inner(self, _: Self) -> Self: ...

    def outer(self, _: Self) -> Self: ...

    def matmul(self, _: Self) -> Self: ...
