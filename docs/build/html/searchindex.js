Search.setIndex({"alltitles": {"@ Operator": [[248, "operator"]], "Activation Functions": [[102, null]], "Activation Layers": [[176, null], [187, null]], "Additional Details": [[17, "additional-details"]], "Admonitions and Usage Guidelines": [[235, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[113, "advanced-example-with-dilation"]], "Advanced Features": [[316, "advanced-features"]], "AlexNet": [[21, null]], "Algorithm": [[219, "algorithm"], [220, "algorithm"], [221, "algorithm"], [222, "algorithm"], [223, "algorithm"], [224, "algorithm"], [225, "algorithm"], [226, "algorithm"], [227, "algorithm"], [228, "algorithm"], [229, "algorithm"]], "Architecture": [[21, "architecture"], [37, "architecture"], [38, "architecture"], [39, "architecture"], [87, "architecture"]], "Architecture Details": [[56, "architecture-details"], [57, "architecture-details"]], "Attention Mechanism": [[154, "attention-mechanism"]], "Attributes": [[5, "attributes"], [6, "attributes"], [21, "attributes"], [32, "attributes"], [36, "attributes"], [47, "attributes"], [58, "attributes"], [65, "attributes"], [75, "attributes"], [80, "attributes"], [85, "attributes"], [87, "attributes"], [91, "attributes"], [93, "attributes"], [94, "attributes"], [95, "attributes"], [96, "attributes"], [97, "attributes"], [98, "attributes"], [147, "attributes"], [148, "attributes"], [149, "attributes"], [150, "attributes"], [151, "attributes"], [152, "attributes"], [153, "attributes"], [164, "attributes"], [165, "attributes"], [168, "attributes"], [169, "attributes"], [171, "attributes"], [172, "attributes"], [173, "attributes"], [175, "attributes"], [177, "attributes"], [178, "attributes"], [179, "attributes"], [181, "attributes"], [182, "attributes"], [183, "attributes"], [184, "attributes"], [185, "attributes"], [188, "attributes"], [189, "attributes"], [190, "attributes"], [192, "attributes"], [193, "attributes"], [194, "attributes"], [195, "attributes"], [196, "attributes"], [198, "attributes"], [199, "attributes"], [200, "attributes"], [201, "attributes"], [202, "attributes"], [203, "attributes"], [204, "attributes"], [206, "attributes"], [207, "attributes"], [208, "attributes"], [209, "attributes"], [210, "attributes"], [211, "attributes"], [212, "attributes"], [213, "attributes"], [214, "attributes"], [243, "attributes"], [307, "attributes"], [308, "attributes"], [309, "attributes"], [310, "attributes"], [311, "attributes"], [312, "attributes"], [313, "attributes"], [314, "attributes"]], "Backward Gradient Calculation": [[10, "backward-gradient-calculation"], [11, "backward-gradient-calculation"], [12, "backward-gradient-calculation"], [14, "backward-gradient-calculation"], [15, "backward-gradient-calculation"], [16, "backward-gradient-calculation"], [17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [20, "backward-gradient-calculation"], [94, "backward-gradient-calculation"], [95, "backward-gradient-calculation"], [96, "backward-gradient-calculation"], [97, "backward-gradient-calculation"], [98, "backward-gradient-calculation"], [100, "backward-gradient-calculation"], [101, "backward-gradient-calculation"], [103, "backward-gradient-calculation"], [104, "backward-gradient-calculation"], [105, "backward-gradient-calculation"], [106, "backward-gradient-calculation"], [107, "backward-gradient-calculation"], [108, "backward-gradient-calculation"], [121, "backward-gradient-calculation"], [123, "backward-gradient-calculation"], [145, "backward-gradient-calculation"], [153, "backward-gradient-calculation"], [163, "backward-gradient-calculation"], [164, "backward-gradient-calculation"], [165, "backward-gradient-calculation"], [166, "backward-gradient-calculation"], [167, "backward-gradient-calculation"], [168, "backward-gradient-calculation"], [169, "backward-gradient-calculation"], [171, "backward-gradient-calculation"], [172, "backward-gradient-calculation"], [173, "backward-gradient-calculation"], [174, "backward-gradient-calculation"], [175, "backward-gradient-calculation"], [177, "backward-gradient-calculation"], [178, "backward-gradient-calculation"], [179, "backward-gradient-calculation"], [181, "backward-gradient-calculation"], [182, "backward-gradient-calculation"], [183, "backward-gradient-calculation"], [184, "backward-gradient-calculation"], [185, "backward-gradient-calculation"], [188, "backward-gradient-calculation"], [189, "backward-gradient-calculation"], [190, "backward-gradient-calculation"], [192, "backward-gradient-calculation"], [193, "backward-gradient-calculation"], [194, "backward-gradient-calculation"], [195, "backward-gradient-calculation"], [196, "backward-gradient-calculation"], [198, "backward-gradient-calculation"], [199, "backward-gradient-calculation"], [200, "backward-gradient-calculation"], [201, "backward-gradient-calculation"], [202, "backward-gradient-calculation"], [203, "backward-gradient-calculation"], [204, "backward-gradient-calculation"], [209, "backward-gradient-calculation"], [210, "backward-gradient-calculation"], [211, "backward-gradient-calculation"], [212, "backward-gradient-calculation"], [213, "backward-gradient-calculation"], [214, "backward-gradient-calculation"], [244, "backward-gradient-calculation"], [245, "backward-gradient-calculation"], [246, "backward-gradient-calculation"], [247, "backward-gradient-calculation"], [248, "backward-gradient-calculation"], [249, "backward-gradient-calculation"], [250, "backward-gradient-calculation"], [251, "backward-gradient-calculation"], [252, "backward-gradient-calculation"], [253, "backward-gradient-calculation"], [254, "backward-gradient-calculation"], [265, "backward-gradient-calculation"], [266, "backward-gradient-calculation"], [267, "backward-gradient-calculation"], [268, "backward-gradient-calculation"], [269, "backward-gradient-calculation"], [270, "backward-gradient-calculation"], [271, "backward-gradient-calculation"], [272, "backward-gradient-calculation"], [273, "backward-gradient-calculation"], [274, "backward-gradient-calculation"], [275, "backward-gradient-calculation"], [276, "backward-gradient-calculation"], [277, "backward-gradient-calculation"], [278, "backward-gradient-calculation"], [279, "backward-gradient-calculation"], [280, "backward-gradient-calculation"], [281, "backward-gradient-calculation"], [282, "backward-gradient-calculation"], [283, "backward-gradient-calculation"], [284, "backward-gradient-calculation"], [285, "backward-gradient-calculation"], [286, "backward-gradient-calculation"], [287, "backward-gradient-calculation"], [288, "backward-gradient-calculation"], [289, "backward-gradient-calculation"], [291, "backward-gradient-calculation"], [293, "backward-gradient-calculation"], [295, "backward-gradient-calculation"], [296, "backward-gradient-calculation"], [297, "backward-gradient-calculation"], [298, "backward-gradient-calculation"], [299, "backward-gradient-calculation"], [300, "backward-gradient-calculation"], [301, "backward-gradient-calculation"], [302, "backward-gradient-calculation"], [303, "backward-gradient-calculation"], [304, "backward-gradient-calculation"]], "Behavior": [[134, "behavior"], [135, "behavior"], [136, "behavior"], [206, "behavior"], [207, "behavior"], [208, "behavior"]], "Benefits": [[233, "benefits"]], "Binary Functions": [[264, null]], "Bottleneck Configuration": [[45, "bottleneck-configuration"], [46, "bottleneck-configuration"]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [6, "class-signature"], [21, "class-signature"], [23, "class-signature"], [28, "class-signature"], [32, "class-signature"], [36, "class-signature"], [40, "class-signature"], [41, "class-signature"], [42, "class-signature"], [47, "class-signature"], [58, "class-signature"], [65, "class-signature"], [75, "class-signature"], [80, "class-signature"], [85, "class-signature"], [87, "class-signature"], [91, "class-signature"], [92, "class-signature"], [93, "class-signature"], [94, "class-signature"], [95, "class-signature"], [96, "class-signature"], [97, "class-signature"], [98, "class-signature"], [147, "class-signature"], [148, "class-signature"], [149, "class-signature"], [150, "class-signature"], [151, "class-signature"], [152, "class-signature"], [153, "class-signature"], [154, "class-signature"], [164, "class-signature"], [165, "class-signature"], [166, "class-signature"], [167, "class-signature"], [168, "class-signature"], [169, "class-signature"], [170, "class-signature"], [171, "class-signature"], [172, "class-signature"], [173, "class-signature"], [174, "class-signature"], [175, "class-signature"], [177, "class-signature"], [178, "class-signature"], [179, "class-signature"], [181, "class-signature"], [182, "class-signature"], [183, "class-signature"], [184, "class-signature"], [185, "class-signature"], [188, "class-signature"], [189, "class-signature"], [190, "class-signature"], [192, "class-signature"], [193, "class-signature"], [194, "class-signature"], [195, "class-signature"], [196, "class-signature"], [198, "class-signature"], [199, "class-signature"], [200, "class-signature"], [201, "class-signature"], [202, "class-signature"], [203, "class-signature"], [204, "class-signature"], [206, "class-signature"], [207, "class-signature"], [208, "class-signature"], [209, "class-signature"], [210, "class-signature"], [211, "class-signature"], [212, "class-signature"], [213, "class-signature"], [214, "class-signature"], [217, "class-signature"], [219, "class-signature"], [220, "class-signature"], [221, "class-signature"], [222, "class-signature"], [223, "class-signature"], [224, "class-signature"], [225, "class-signature"], [226, "class-signature"], [227, "class-signature"], [228, "class-signature"], [229, "class-signature"], [243, "class-signature"], [305, "class-signature"], [306, "class-signature"], [307, "class-signature"], [308, "class-signature"], [309, "class-signature"], [310, "class-signature"], [311, "class-signature"], [312, "class-signature"], [313, "class-signature"], [314, "class-signature"]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [8, "conclusion"], [216, "conclusion"], [231, "conclusion"], [232, "conclusion"], [233, "conclusion"], [242, "conclusion"], [306, "conclusion"], [316, "conclusion"]], "Containers": [[99, null]], "Conv-BatchNorm-ReLU": [[155, null]], "ConvNets": [[35, null], [89, "convnets"]], "Convolution Functions": [[112, null], [120, null]], "Convolution Layers": [[180, null], [187, null]], "Core Components": [[8, "core-components"]], "Create a Tensor from a list": [[290, null]], "Creating a Parameter": [[93, null]], "Creating a tensor with gradient tracking": [[243, null]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[316, "custom-pipelines"]], "Defining a Custom Optimizer": [[218, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[92, null]], "Defining a custom optimizer": [[217, null]], "DenseNet": [[23, null]], "Depthwise Separable Convolution": [[155, null]], "Description": [[59, "description"], [60, "description"], [61, "description"], [62, "description"], [63, "description"], [64, "description"], [76, "description"], [77, "description"], [78, "description"], [234, "description"]], "Dropout Functions": [[119, null], [120, null]], "Dropout Layers": [[186, null], [187, null]], "Example": [[3, null], [3, null], [3, null], [10, "example"], [11, "example"], [12, "example"], [14, "example"], [15, "example"], [16, "example"], [17, "example"], [18, "example"], [19, "example"], [20, "example"], [43, "example"], [44, "example"], [113, "example"], [216, null], [216, null], [216, null], [231, "example"], [233, "example"], [237, "example"], [238, "example"], [239, "example"], [240, "example"], [241, "example"], [242, null], [242, null], [242, null], [255, "example"], [256, "example"], [257, "example"], [258, "example"], [259, "example"], [260, "example"], [261, "example"], [262, "example"], [263, "example"], [265, "example"], [266, "example"], [267, "example"], [268, "example"], [269, "example"], [270, "example"], [271, "example"], [272, "example"], [274, "example"], [276, "example"], [278, "example"], [279, "example"], [280, "example"], [281, "example"], [282, "example"], [283, "example"], [284, "example"], [285, "example"], [286, "example"], [287, "example"], [288, "example"], [289, "example"], [291, "example"], [293, "example"], [297, "example"], [299, "example"], [300, "example"], [301, "example"], [303, "example"], [304, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[232, null]], "Example 2: Adding a new axis to a 2D tensor": [[232, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[232, null]], "Example Usage": [[8, "example-usage"], [29, "example-usage"], [30, "example-usage"], [31, "example-usage"], [33, "example-usage"], [34, "example-usage"], [36, "example-usage"], [37, "example-usage"], [38, "example-usage"], [39, "example-usage"], [71, "example-usage"], [72, "example-usage"], [73, "example-usage"], [74, "example-usage"], [79, "example-usage"], [146, "example-usage"], [305, "example-usage"], [306, "example-usage"], [316, "example-usage"]], "Example Use Cases": [[235, "example-use-cases"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [6, "examples"], [9, "examples"], [21, "examples"], [22, "examples"], [23, "examples"], [24, "examples"], [25, "examples"], [26, "examples"], [27, "examples"], [42, "examples"], [45, "examples"], [46, "examples"], [47, "examples"], [48, "examples"], [49, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [53, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [59, "examples"], [60, "examples"], [61, "examples"], [62, "examples"], [63, "examples"], [64, "examples"], [66, "examples"], [67, "examples"], [68, "examples"], [69, "examples"], [70, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [80, "examples"], [81, "examples"], [82, "examples"], [83, "examples"], [84, "examples"], [85, "examples"], [86, "examples"], [87, "examples"], [88, "examples"], [90, "examples"], [91, "examples"], [92, "examples"], [93, "examples"], [94, "examples"], [95, "examples"], [96, "examples"], [97, "examples"], [98, "examples"], [100, "examples"], [101, "examples"], [103, "examples"], [104, "examples"], [105, "examples"], [106, "examples"], [107, "examples"], [108, "examples"], [109, "examples"], [110, "examples"], [111, "examples"], [114, "examples"], [115, "examples"], [116, "examples"], [117, "examples"], [118, "examples"], [121, "examples"], [123, "examples"], [124, "examples"], [125, "examples"], [126, "examples"], [128, "examples"], [129, "examples"], [130, "examples"], [132, "examples"], [133, "examples"], [134, "examples"], [135, "examples"], [136, "examples"], [137, "examples"], [138, "examples"], [139, "examples"], [141, "examples"], [142, "examples"], [143, "examples"], [145, "examples"], [147, "examples"], [148, "examples"], [149, "examples"], [150, "examples"], [151, "examples"], [152, "examples"], [153, "examples"], [154, "examples"], [156, "examples"], [158, "examples"], [159, "examples"], [160, "examples"], [161, "examples"], [162, "examples"], [163, "examples"], [164, "examples"], [165, "examples"], [166, "examples"], [167, "examples"], [168, "examples"], [169, "examples"], [170, "examples"], [171, "examples"], [172, "examples"], [173, "examples"], [174, "examples"], [175, "examples"], [177, "examples"], [178, "examples"], [179, "examples"], [181, "examples"], [182, "examples"], [183, "examples"], [184, "examples"], [185, "examples"], [188, "examples"], [189, "examples"], [190, "examples"], [192, "examples"], [193, "examples"], [194, "examples"], [195, "examples"], [196, "examples"], [198, "examples"], [199, "examples"], [200, "examples"], [201, "examples"], [202, "examples"], [203, "examples"], [204, "examples"], [206, "examples"], [207, "examples"], [208, "examples"], [209, "examples"], [210, "examples"], [211, "examples"], [212, "examples"], [213, "examples"], [214, "examples"], [217, "examples"], [218, "examples"], [219, "examples"], [220, "examples"], [221, "examples"], [222, "examples"], [223, "examples"], [224, "examples"], [225, "examples"], [226, "examples"], [227, "examples"], [228, "examples"], [229, "examples"], [234, "examples"], [243, "examples"], [244, "examples"], [245, "examples"], [246, "examples"], [247, "examples"], [249, "examples"], [250, "examples"], [251, "examples"], [252, "examples"], [253, "examples"], [254, "examples"], [273, "examples"], [275, "examples"], [277, "examples"], [290, "examples"], [292, "examples"], [295, "examples"], [296, "examples"], [298, "examples"], [302, "examples"], [307, "examples"], [308, "examples"], [309, "examples"], [310, "examples"], [311, "examples"], [312, "examples"], [313, "examples"], [314, "examples"]], "FashionMNIST": [[5, null]], "Features": [[9, "features"]], "Forward Calculation": [[10, "forward-calculation"], [11, "forward-calculation"], [12, "forward-calculation"], [14, "forward-calculation"], [15, "forward-calculation"], [16, "forward-calculation"], [17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [20, "forward-calculation"], [47, "forward-calculation"], [58, "forward-calculation"], [65, "forward-calculation"], [75, "forward-calculation"], [94, "forward-calculation"], [95, "forward-calculation"], [96, "forward-calculation"], [97, "forward-calculation"], [98, "forward-calculation"], [100, "forward-calculation"], [101, "forward-calculation"], [103, "forward-calculation"], [104, "forward-calculation"], [105, "forward-calculation"], [106, "forward-calculation"], [107, "forward-calculation"], [108, "forward-calculation"], [113, "forward-calculation"], [121, "forward-calculation"], [123, "forward-calculation"], [134, "forward-calculation"], [135, "forward-calculation"], [136, "forward-calculation"], [145, "forward-calculation"], [147, "forward-calculation"], [148, "forward-calculation"], [149, "forward-calculation"], [150, "forward-calculation"], [151, "forward-calculation"], [152, "forward-calculation"], [153, "forward-calculation"], [154, "forward-calculation"], [158, "forward-calculation"], [159, "forward-calculation"], [162, "forward-calculation"], [163, "forward-calculation"], [164, "forward-calculation"], [165, "forward-calculation"], [166, "forward-calculation"], [167, "forward-calculation"], [168, "forward-calculation"], [169, "forward-calculation"], [170, "forward-calculation"], [171, "forward-calculation"], [172, "forward-calculation"], [173, "forward-calculation"], [174, "forward-calculation"], [175, "forward-calculation"], [177, "forward-calculation"], [178, "forward-calculation"], [179, "forward-calculation"], [181, "forward-calculation"], [182, "forward-calculation"], [183, "forward-calculation"], [184, "forward-calculation"], [185, "forward-calculation"], [188, "forward-calculation"], [189, "forward-calculation"], [190, "forward-calculation"], [192, "forward-calculation"], [193, "forward-calculation"], [194, "forward-calculation"], [195, "forward-calculation"], [196, "forward-calculation"], [198, "forward-calculation"], [199, "forward-calculation"], [200, "forward-calculation"], [201, "forward-calculation"], [202, "forward-calculation"], [203, "forward-calculation"], [204, "forward-calculation"], [206, "forward-calculation"], [207, "forward-calculation"], [208, "forward-calculation"], [209, "forward-calculation"], [210, "forward-calculation"], [211, "forward-calculation"], [212, "forward-calculation"], [213, "forward-calculation"], [214, "forward-calculation"], [244, "forward-calculation"], [245, "forward-calculation"], [246, "forward-calculation"], [247, "forward-calculation"], [248, "forward-calculation"], [249, "forward-calculation"], [250, "forward-calculation"], [251, "forward-calculation"], [252, "forward-calculation"], [253, "forward-calculation"], [254, "forward-calculation"], [265, "forward-calculation"], [266, "forward-calculation"], [267, "forward-calculation"], [268, "forward-calculation"], [269, "forward-calculation"], [270, "forward-calculation"], [271, "forward-calculation"], [272, "forward-calculation"], [273, "forward-calculation"], [274, "forward-calculation"], [275, "forward-calculation"], [276, "forward-calculation"], [277, "forward-calculation"], [278, "forward-calculation"], [279, "forward-calculation"], [280, "forward-calculation"], [281, "forward-calculation"], [282, "forward-calculation"], [283, "forward-calculation"], [284, "forward-calculation"], [285, "forward-calculation"], [286, "forward-calculation"], [287, "forward-calculation"], [288, "forward-calculation"], [289, "forward-calculation"], [291, "forward-calculation"], [293, "forward-calculation"], [295, "forward-calculation"], [296, "forward-calculation"], [297, "forward-calculation"], [298, "forward-calculation"], [299, "forward-calculation"], [300, "forward-calculation"], [301, "forward-calculation"], [302, "forward-calculation"], [303, "forward-calculation"], [304, "forward-calculation"], [307, "forward-calculation"], [308, "forward-calculation"], [309, "forward-calculation"], [310, "forward-calculation"], [311, "forward-calculation"], [312, "forward-calculation"], [313, "forward-calculation"], [314, "forward-calculation"]], "Forward Pass": [[85, "forward-pass"]], "Function Signature": [[10, "function-signature"], [11, "function-signature"], [12, "function-signature"], [14, "function-signature"], [15, "function-signature"], [16, "function-signature"], [17, "function-signature"], [18, "function-signature"], [19, "function-signature"], [20, "function-signature"], [22, "function-signature"], [24, "function-signature"], [25, "function-signature"], [26, "function-signature"], [27, "function-signature"], [29, "function-signature"], [30, "function-signature"], [31, "function-signature"], [33, "function-signature"], [34, "function-signature"], [37, "function-signature"], [38, "function-signature"], [39, "function-signature"], [43, "function-signature"], [44, "function-signature"], [45, "function-signature"], [46, "function-signature"], [48, "function-signature"], [49, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [53, "function-signature"], [54, "function-signature"], [55, "function-signature"], [56, "function-signature"], [57, "function-signature"], [59, "function-signature"], [60, "function-signature"], [61, "function-signature"], [62, "function-signature"], [63, "function-signature"], [64, "function-signature"], [66, "function-signature"], [67, "function-signature"], [68, "function-signature"], [69, "function-signature"], [70, "function-signature"], [71, "function-signature"], [72, "function-signature"], [73, "function-signature"], [74, "function-signature"], [76, "function-signature"], [77, "function-signature"], [78, "function-signature"], [79, "function-signature"], [81, "function-signature"], [82, "function-signature"], [83, "function-signature"], [84, "function-signature"], [86, "function-signature"], [88, "function-signature"], [90, "function-signature"], [100, "function-signature"], [101, "function-signature"], [103, "function-signature"], [104, "function-signature"], [105, "function-signature"], [106, "function-signature"], [107, "function-signature"], [108, "function-signature"], [109, "function-signature"], [110, "function-signature"], [111, "function-signature"], [113, "function-signature"], [114, "function-signature"], [115, "function-signature"], [116, "function-signature"], [117, "function-signature"], [118, "function-signature"], [121, "function-signature"], [123, "function-signature"], [124, "function-signature"], [125, "function-signature"], [126, "function-signature"], [128, "function-signature"], [129, "function-signature"], [130, "function-signature"], [132, "function-signature"], [133, "function-signature"], [134, "function-signature"], [135, "function-signature"], [136, "function-signature"], [137, "function-signature"], [138, "function-signature"], [139, "function-signature"], [141, "function-signature"], [142, "function-signature"], [143, "function-signature"], [145, "function-signature"], [146, "function-signature"], [156, "function-signature"], [158, "function-signature"], [159, "function-signature"], [160, "function-signature"], [161, "function-signature"], [162, "function-signature"], [163, "function-signature"], [231, "function-signature"], [233, "function-signature"], [234, "function-signature"], [237, "function-signature"], [238, "function-signature"], [239, "function-signature"], [240, "function-signature"], [241, "function-signature"], [244, "function-signature"], [245, "function-signature"], [246, "function-signature"], [247, "function-signature"], [248, "function-signature"], [249, "function-signature"], [250, "function-signature"], [251, "function-signature"], [252, "function-signature"], [253, "function-signature"], [254, "function-signature"], [255, "function-signature"], [256, "function-signature"], [257, "function-signature"], [258, "function-signature"], [259, "function-signature"], [260, "function-signature"], [261, "function-signature"], [262, "function-signature"], [263, "function-signature"], [265, "function-signature"], [266, "function-signature"], [267, "function-signature"], [268, "function-signature"], [269, "function-signature"], [270, "function-signature"], [271, "function-signature"], [272, "function-signature"], [273, "function-signature"], [274, "function-signature"], [275, "function-signature"], [276, "function-signature"], [277, "function-signature"], [278, "function-signature"], [279, "function-signature"], [280, "function-signature"], [281, "function-signature"], [282, "function-signature"], [283, "function-signature"], [284, "function-signature"], [285, "function-signature"], [286, "function-signature"], [287, "function-signature"], [288, "function-signature"], [289, "function-signature"], [290, "function-signature"], [291, "function-signature"], [292, "function-signature"], [293, "function-signature"], [295, "function-signature"], [296, "function-signature"], [297, "function-signature"], [298, "function-signature"], [299, "function-signature"], [300, "function-signature"], [301, "function-signature"], [302, "function-signature"], [303, "function-signature"], [304, "function-signature"]], "Fused Layers": [[155, null]], "Future Work": [[4, "future-work"]], "Getting Started": [[218, "getting-started"]], "How It Works": [[231, "how-it-works"], [233, "how-it-works"]], "Image Datasets": [[7, null]], "Image Transformations": [[315, null]], "Inception": [[28, null]], "InceptionResNet": [[32, null]], "Indexing and slicing": [[243, null]], "Inspecting Optimizer State": [[218, null], [219, null], [220, null], [221, null], [222, null], [223, null], [224, null], [225, null], [226, null], [227, null], [228, null], [229, null]], "Integration with lucid": [[3, "integration-with-lucid"], [216, "integration-with-lucid"], [242, "integration-with-lucid"], [316, "integration-with-lucid"]], "Iterating through a tensor": [[243, null]], "Key Components": [[3, "key-components"], [216, "key-components"]], "Key Features": [[4, "key-features"], [8, "key-features"], [71, "key-features"], [72, "key-features"], [73, "key-features"], [74, "key-features"], [79, "key-features"], [218, "key-features"], [242, "key-features"]], "Key Transformations": [[316, "key-transformations"]], "LeNet": [[36, null]], "Learn More": [[242, null]], "Limitations": [[8, "limitations"]], "Linear Algebra Operations": [[13, null]], "Linear Functions": [[120, null], [122, null]], "Linear Layers": [[187, null], [191, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[120, null], [127, null]], "Loss Layers": [[187, null], [197, null]], "Lucid": [[8, null]], "MNIST": [[6, null]], "Matrix Multiplication Rules": [[248, "matrix-multiplication-rules"]], "Metadata Captured": [[234, "metadata-captured"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [6, "methods"], [32, "methods"], [36, "methods"], [80, "methods"], [92, "methods"], [93, "methods"], [217, "methods"], [243, "methods"]], "MobileNet": [[40, null]], "MobileNet_V2": [[41, null]], "MobileNet_V3": [[42, null]], "Modules": [[187, null]], "Normalization Functions": [[120, null], [131, null]], "Normalization Layers": [[187, null], [205, null]], "Notes": [[8, "notes"]], "Optimizers": [[230, null]], "Organizing Models": [[216, "organizing-models"]], "Overview": [[3, "overview"], [4, "overview"], [8, "overview"], [28, "overview"], [29, "overview"], [30, "overview"], [31, "overview"], [32, "overview"], [33, "overview"], [34, "overview"], [36, "overview"], [37, "overview"], [38, "overview"], [39, "overview"], [40, "overview"], [41, "overview"], [42, "overview"], [48, "overview"], [49, "overview"], [50, "overview"], [51, "overview"], [52, "overview"], [53, "overview"], [54, "overview"], [55, "overview"], [66, "overview"], [67, "overview"], [68, "overview"], [69, "overview"], [70, "overview"], [216, "overview"], [218, "overview"], [242, "overview"], [316, "overview"]], "Parameters": [[1, "parameters"], [5, "parameters"], [6, "parameters"], [10, "parameters"], [11, "parameters"], [12, "parameters"], [14, "parameters"], [15, "parameters"], [16, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [20, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [36, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [87, "parameters"], [88, "parameters"], [90, "parameters"], [91, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [100, "parameters"], [101, "parameters"], [103, "parameters"], [104, "parameters"], [105, "parameters"], [106, "parameters"], [107, "parameters"], [108, "parameters"], [109, "parameters"], [110, "parameters"], [111, "parameters"], [113, "parameters"], [114, "parameters"], [115, "parameters"], [116, "parameters"], [117, "parameters"], [118, "parameters"], [121, "parameters"], [123, "parameters"], [124, "parameters"], [125, "parameters"], [126, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [154, "parameters"], [156, "parameters"], [158, "parameters"], [159, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [163, "parameters"], [164, "parameters"], [165, "parameters"], [168, "parameters"], [169, "parameters"], [171, "parameters"], [172, "parameters"], [173, "parameters"], [175, "parameters"], [177, "parameters"], [178, "parameters"], [179, "parameters"], [181, "parameters"], [182, "parameters"], [183, "parameters"], [184, "parameters"], [185, "parameters"], [188, "parameters"], [189, "parameters"], [190, "parameters"], [192, "parameters"], [193, "parameters"], [194, "parameters"], [195, "parameters"], [196, "parameters"], [198, "parameters"], [199, "parameters"], [200, "parameters"], [201, "parameters"], [202, "parameters"], [203, "parameters"], [204, "parameters"], [206, "parameters"], [207, "parameters"], [208, "parameters"], [209, "parameters"], [210, "parameters"], [211, "parameters"], [212, "parameters"], [213, "parameters"], [214, "parameters"], [219, "parameters"], [220, "parameters"], [221, "parameters"], [222, "parameters"], [223, "parameters"], [224, "parameters"], [225, "parameters"], [226, "parameters"], [227, "parameters"], [228, "parameters"], [229, "parameters"], [233, "parameters"], [234, "parameters"], [237, "parameters"], [238, "parameters"], [239, "parameters"], [240, "parameters"], [241, "parameters"], [243, "parameters"], [244, "parameters"], [245, "parameters"], [246, "parameters"], [247, "parameters"], [248, "parameters"], [249, "parameters"], [250, "parameters"], [251, "parameters"], [252, "parameters"], [253, "parameters"], [254, "parameters"], [255, "parameters"], [256, "parameters"], [257, "parameters"], [258, "parameters"], [259, "parameters"], [260, "parameters"], [261, "parameters"], [262, "parameters"], [263, "parameters"], [265, "parameters"], [266, "parameters"], [267, "parameters"], [268, "parameters"], [269, "parameters"], [270, "parameters"], [271, "parameters"], [272, "parameters"], [273, "parameters"], [274, "parameters"], [275, "parameters"], [276, "parameters"], [277, "parameters"], [278, "parameters"], [279, "parameters"], [280, "parameters"], [281, "parameters"], [282, "parameters"], [283, "parameters"], [284, "parameters"], [285, "parameters"], [286, "parameters"], [287, "parameters"], [288, "parameters"], [289, "parameters"], [290, "parameters"], [291, "parameters"], [292, "parameters"], [293, "parameters"], [295, "parameters"], [296, "parameters"], [297, "parameters"], [298, "parameters"], [299, "parameters"], [300, "parameters"], [301, "parameters"], [302, "parameters"], [303, "parameters"], [304, "parameters"], [305, "parameters"], [306, "parameters"], [307, "parameters"], [308, "parameters"], [309, "parameters"], [310, "parameters"], [311, "parameters"], [312, "parameters"], [313, "parameters"], [314, "parameters"]], "Performing backpropagation": [[243, null]], "Pooling Functions": [[120, null], [140, null]], "Pooling Layers": [[187, null], [215, null]], "Potential Pitfalls": [[231, "potential-pitfalls"], [233, "potential-pitfalls"]], "Properties": [[93, "properties"], [243, "properties"]], "Raises": [[10, "raises"], [11, "raises"], [12, "raises"], [14, "raises"], [15, "raises"], [16, "raises"], [17, "raises"], [18, "raises"], [19, "raises"], [20, "raises"]], "Random Number Generations": [[236, null]], "References": [[5, "references"], [6, "references"], [153, "references"], [218, "references"]], "ResNeXt": [[58, null]], "ResNet": [[47, null]], "Returns": [[10, "returns"], [11, "returns"], [12, "returns"], [14, "returns"], [15, "returns"], [16, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [20, "returns"], [22, "returns"], [24, "returns"], [25, "returns"], [26, "returns"], [27, "returns"], [29, "returns"], [30, "returns"], [31, "returns"], [33, "returns"], [34, "returns"], [37, "returns"], [38, "returns"], [39, "returns"], [43, "returns"], [44, "returns"], [45, "returns"], [46, "returns"], [48, "returns"], [49, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [53, "returns"], [54, "returns"], [55, "returns"], [56, "returns"], [57, "returns"], [59, "returns"], [60, "returns"], [61, "returns"], [62, "returns"], [63, "returns"], [64, "returns"], [66, "returns"], [67, "returns"], [68, "returns"], [69, "returns"], [70, "returns"], [71, "returns"], [72, "returns"], [73, "returns"], [74, "returns"], [76, "returns"], [77, "returns"], [78, "returns"], [79, "returns"], [81, "returns"], [82, "returns"], [83, "returns"], [84, "returns"], [86, "returns"], [88, "returns"], [90, "returns"], [100, "returns"], [101, "returns"], [103, "returns"], [104, "returns"], [105, "returns"], [106, "returns"], [107, "returns"], [108, "returns"], [109, "returns"], [110, "returns"], [111, "returns"], [113, "returns"], [114, "returns"], [115, "returns"], [116, "returns"], [117, "returns"], [118, "returns"], [121, "returns"], [123, "returns"], [124, "returns"], [125, "returns"], [126, "returns"], [128, "returns"], [129, "returns"], [130, "returns"], [132, "returns"], [133, "returns"], [134, "returns"], [135, "returns"], [136, "returns"], [137, "returns"], [138, "returns"], [139, "returns"], [141, "returns"], [142, "returns"], [143, "returns"], [145, "returns"], [146, "returns"], [154, "returns"], [156, "returns"], [158, "returns"], [159, "returns"], [160, "returns"], [161, "returns"], [162, "returns"], [163, "returns"], [170, "returns"], [231, "returns"], [233, "returns"], [237, "returns"], [238, "returns"], [239, "returns"], [240, "returns"], [241, "returns"], [244, "returns"], [245, "returns"], [246, "returns"], [247, "returns"], [248, "returns"], [249, "returns"], [250, "returns"], [251, "returns"], [252, "returns"], [253, "returns"], [254, "returns"], [255, "returns"], [256, "returns"], [257, "returns"], [258, "returns"], [259, "returns"], [260, "returns"], [261, "returns"], [262, "returns"], [263, "returns"], [265, "returns"], [266, "returns"], [267, "returns"], [268, "returns"], [269, "returns"], [270, "returns"], [271, "returns"], [272, "returns"], [273, "returns"], [274, "returns"], [275, "returns"], [276, "returns"], [277, "returns"], [278, "returns"], [279, "returns"], [280, "returns"], [281, "returns"], [282, "returns"], [283, "returns"], [284, "returns"], [285, "returns"], [286, "returns"], [287, "returns"], [288, "returns"], [289, "returns"], [290, "returns"], [291, "returns"], [292, "returns"], [293, "returns"], [295, "returns"], [296, "returns"], [297, "returns"], [298, "returns"], [299, "returns"], [300, "returns"], [301, "returns"], [302, "returns"], [303, "returns"], [304, "returns"]], "SENet": [[65, null]], "SKNet": [[75, null]], "See Also": [[218, "see-also"]], "Selective Kernel": [[155, null]], "Squeeze-and-Excitation": [[155, null]], "Summary Table": [[90, "summary-table"]], "Tensor Generating Functions": [[264, null]], "Tensor Operations": [[264, null]], "Tensor Utilites": [[294, null]], "Type Definitions": [[235, "type-definitions"]], "Unary Functions": [[264, null]], "Usage": [[4, "usage"], [91, "usage"], [146, "usage"], [231, "usage"], [232, "usage"], [233, "usage"], [295, "usage"], [305, "usage"], [306, "usage"], [316, "usage"]], "Use another Tensor as input": [[290, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using the ASGD Optimizer": [[219, null]], "Using the Adadelta Optimizer": [[220, null]], "Using the Adagrad Optimizer": [[221, null]], "Using the Adam Optimizer": [[222, null]], "Using the AdamW Optimizer": [[223, null]], "Using the Adamax Optimizer": [[224, null]], "Using the NAdam Optimizer": [[225, null]], "Using the RAdam Optimizer": [[226, null]], "Using the RMSprop Optimizer": [[227, null]], "Using the Rprop Optimizer": [[228, null]], "Using the SGD Optimizer": [[229, null]], "Utility Functions": [[120, null], [144, null]], "VGGNet": [[80, null]], "Weight Initializations": [[157, null]], "Why Use Type Aliases?": [[235, null]], "Xception": [[85, null]], "ZFNet": [[87, null]], "activation Functions": [[120, null]], "alexnet": [[22, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "densenet_121": [[24, null]], "densenet_169": [[25, null]], "densenet_201": [[26, null]], "densenet_264": [[27, null]], "inception_resnet_v1": [[33, null]], "inception_resnet_v2": [[34, null]], "inception_v1": [[29, null]], "inception_v3": [[30, null]], "inception_v4": [[31, null]], "lenet_1": [[37, null]], "lenet_4": [[38, null]], "lenet_5": [[39, null]], "lucid.Tensor": [[243, null]], "lucid.abs": [[265, null]], "lucid.add": [[244, null]], "lucid.arange": [[255, null]], "lucid.arccos": [[266, null]], "lucid.arcsin": [[267, null]], "lucid.arctan": [[268, null]], "lucid.clip": [[269, null]], "lucid.concatenate": [[291, null]], "lucid.cos": [[270, null]], "lucid.cosh": [[271, null]], "lucid.cube": [[272, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[256, null]], "lucid.div": [[245, null]], "lucid.dot": [[246, null]], "lucid.empty": [[257, null]], "lucid.empty_like": [[258, null]], "lucid.exp": [[273, null]], "lucid.eye": [[259, null]], "lucid.flatten": [[292, null]], "lucid.grad_enabled": [[231, null]], "lucid.hstack": [[293, null]], "lucid.inner": [[247, null]], "lucid.linalg": [[9, null]], "lucid.linalg.cholesky": [[10, null]], "lucid.linalg.det": [[11, null]], "lucid.linalg.eig": [[12, null]], "lucid.linalg.inv": [[14, null]], "lucid.linalg.matrix_power": [[15, null]], "lucid.linalg.norm": [[16, null]], "lucid.linalg.pinv": [[17, null]], "lucid.linalg.qr": [[18, null]], "lucid.linalg.solve": [[19, null]], "lucid.linalg.svd": [[20, null]], "lucid.log": [[274, null]], "lucid.matmul": [[248, null]], "lucid.max": [[275, null]], "lucid.maximum": [[249, null]], "lucid.mean": [[276, null]], "lucid.meshgrid": [[295, null]], "lucid.min": [[277, null]], "lucid.minimum": [[250, null]], "lucid.models": [[89, null]], "lucid.mul": [[251, null]], "lucid.newaxis": [[232, null]], "lucid.nn": [[216, null]], "lucid.nn.functional": [[120, null]], "lucid.no_grad": [[233, null]], "lucid.ones": [[260, null]], "lucid.ones_like": [[261, null]], "lucid.optim": [[218, null]], "lucid.outer": [[252, null]], "lucid.pad": [[296, null]], "lucid.power": [[253, null]], "lucid.random": [[242, null]], "lucid.random.rand": [[237, null]], "lucid.random.randint": [[238, null]], "lucid.random.randn": [[239, null]], "lucid.random.seed": [[240, null]], "lucid.random.uniform": [[241, null]], "lucid.ravel": [[297, null]], "lucid.reciprocal": [[278, null]], "lucid.register_model": [[234, null]], "lucid.repeat": [[298, null]], "lucid.reshape": [[299, null]], "lucid.sign": [[279, null]], "lucid.sin": [[280, null]], "lucid.sinh": [[281, null]], "lucid.sqrt": [[282, null]], "lucid.square": [[283, null]], "lucid.squeeze": [[300, null]], "lucid.stack": [[301, null]], "lucid.sub": [[254, null]], "lucid.sum": [[284, null]], "lucid.tan": [[285, null]], "lucid.tanh": [[286, null]], "lucid.tensor": [[290, null]], "lucid.tile": [[302, null]], "lucid.trace": [[287, null]], "lucid.transforms": [[316, null]], "lucid.transpose": [[288, null]], "lucid.types": [[235, null]], "lucid.unsqueeze": [[303, null]], "lucid.var": [[289, null]], "lucid.vstack": [[304, null]], "lucid.zeros": [[262, null]], "lucid.zeros_like": [[263, null]], "mobilenet": [[43, null]], "mobilenet_v2": [[44, null]], "mobilenet_v3_large": [[45, null]], "mobilenet_v3_small": [[46, null]], "models.summarize": [[90, null]], "nn.AdaptiveAvgPool1d": [[206, null]], "nn.AdaptiveAvgPool2d": [[207, null]], "nn.AdaptiveAvgPool3d": [[208, null]], "nn.AlphaDropout": [[181, null]], "nn.AvgPool1d": [[209, null]], "nn.AvgPool2d": [[210, null]], "nn.AvgPool3d": [[211, null]], "nn.BCELoss": [[192, null]], "nn.BatchNorm1d": [[198, null]], "nn.BatchNorm2d": [[199, null]], "nn.BatchNorm3d": [[200, null]], "nn.Bilinear": [[188, null]], "nn.Buffer": [[91, null]], "nn.Conv1d": [[177, null]], "nn.Conv2d": [[178, null]], "nn.Conv3d": [[179, null]], "nn.ConvBNReLU1d": [[147, null]], "nn.ConvBNReLU2d": [[148, null]], "nn.ConvBNReLU3d": [[149, null]], "nn.CrossEntropyLoss": [[193, null]], "nn.DepthSeparableConv1d": [[150, null]], "nn.DepthSeparableConv2d": [[151, null]], "nn.DepthSeparableConv3d": [[152, null]], "nn.Dropout": [[182, null]], "nn.Dropout1d": [[183, null]], "nn.Dropout2d": [[184, null]], "nn.Dropout3d": [[185, null]], "nn.ELU": [[164, null]], "nn.GELU": [[165, null]], "nn.HardSigmoid": [[166, null]], "nn.HardSwish": [[167, null]], "nn.HuberLoss": [[194, null]], "nn.Identity": [[189, null]], "nn.InstanceNorm1d": [[201, null]], "nn.InstanceNorm2d": [[202, null]], "nn.InstanceNorm3d": [[203, null]], "nn.LayerNorm": [[204, null]], "nn.LeakyReLU": [[168, null]], "nn.Linear": [[190, null]], "nn.MSELoss": [[195, null]], "nn.MaxPool1d": [[212, null]], "nn.MaxPool2d": [[213, null]], "nn.MaxPool3d": [[214, null]], "nn.Module": [[92, null]], "nn.ModuleDict": [[94, null]], "nn.ModuleList": [[95, null]], "nn.NLLLoss": [[196, null]], "nn.Parameter": [[93, null]], "nn.ParameterDict": [[96, null]], "nn.ParameterList": [[97, null]], "nn.ReLU": [[169, null]], "nn.ReLU6": [[170, null]], "nn.SELU": [[171, null]], "nn.SEModule": [[153, null]], "nn.SelectiveKernel": [[154, null]], "nn.Sequential": [[98, null]], "nn.Sigmoid": [[172, null]], "nn.Softmax": [[173, null]], "nn.Swish": [[174, null]], "nn.Tanh": [[175, null]], "nn.functional.adaptive_avg_pool1d": [[134, null]], "nn.functional.adaptive_avg_pool2d": [[135, null]], "nn.functional.adaptive_avg_pool3d": [[136, null]], "nn.functional.alpha_dropout": [[114, null]], "nn.functional.avg_pool1d": [[137, null]], "nn.functional.avg_pool2d": [[138, null]], "nn.functional.avg_pool3d": [[139, null]], "nn.functional.batch_norm": [[130, null]], "nn.functional.bilinear": [[121, null]], "nn.functional.binary_cross_entropy": [[124, null]], "nn.functional.conv1d": [[109, null]], "nn.functional.conv2d": [[110, null]], "nn.functional.conv3d": [[111, null]], "nn.functional.cross_entropy": [[125, null]], "nn.functional.dropout": [[115, null]], "nn.functional.dropout1d": [[116, null]], "nn.functional.dropout2d": [[117, null]], "nn.functional.dropout3d": [[118, null]], "nn.functional.elu": [[100, null]], "nn.functional.gelu": [[101, null]], "nn.functional.huber_loss": [[126, null]], "nn.functional.instance_norm": [[132, null]], "nn.functional.interpolate": [[145, null]], "nn.functional.layer_norm": [[133, null]], "nn.functional.leaky_relu": [[103, null]], "nn.functional.linear": [[123, null]], "nn.functional.max_pool1d": [[141, null]], "nn.functional.max_pool2d": [[142, null]], "nn.functional.max_pool3d": [[143, null]], "nn.functional.mse_loss": [[128, null]], "nn.functional.nll_loss": [[129, null]], "nn.functional.relu": [[104, null]], "nn.functional.rotate": [[146, null]], "nn.functional.selu": [[105, null]], "nn.functional.sigmoid": [[106, null]], "nn.functional.softmax": [[107, null]], "nn.functional.tanh": [[108, null]], "nn.functional.unfold": [[113, null]], "nn.init.constant": [[156, null]], "nn.init.kaiming_normal": [[158, null]], "nn.init.kaiming_uniform": [[159, null]], "nn.init.normal": [[160, null]], "nn.init.uniform": [[161, null]], "nn.init.xavier_normal": [[162, null]], "nn.init.xavier_uniform": [[163, null]], "optim.ASGD": [[219, null]], "optim.Adadelta": [[220, null]], "optim.Adagrad": [[221, null]], "optim.Adam": [[222, null]], "optim.AdamW": [[223, null]], "optim.Adamax": [[224, null]], "optim.NAdam": [[225, null]], "optim.Optimizer": [[217, null]], "optim.RAdam": [[226, null]], "optim.RMSprop": [[227, null]], "optim.Rprop": [[228, null]], "optim.SGD": [[229, null]], "resnet_1001": [[48, null]], "resnet_101": [[49, null]], "resnet_152": [[50, null]], "resnet_18": [[51, null]], "resnet_200": [[52, null]], "resnet_269": [[53, null]], "resnet_34": [[54, null]], "resnet_50": [[55, null]], "resnext_101_32x16d": [[59, null]], "resnext_101_32x32d": [[60, null]], "resnext_101_32x4d": [[61, null]], "resnext_101_32x8d": [[62, null]], "resnext_101_64x4d": [[63, null]], "resnext_50_32x4d": [[64, null]], "se_resnet_101": [[66, null]], "se_resnet_152": [[67, null]], "se_resnet_18": [[68, null]], "se_resnet_34": [[69, null]], "se_resnet_50": [[70, null]], "se_resnext_101_32x4d": [[71, null]], "se_resnext_101_32x8d": [[72, null]], "se_resnext_101_64x4d": [[73, null]], "se_resnext_50_32x4d": [[74, null]], "sk_resnet_18": [[76, null]], "sk_resnet_34": [[77, null]], "sk_resnet_50": [[78, null]], "sk_resnext_50_32x4d": [[79, null]], "transforms.CenterCrop": [[307, null]], "transforms.Compose": [[305, null]], "transforms.Normalize": [[308, null]], "transforms.RandomCrop": [[309, null]], "transforms.RandomGrayscale": [[310, null]], "transforms.RandomHorizontalFlip": [[311, null]], "transforms.RandomRotation": [[312, null]], "transforms.RandomVerticalFlip": [[313, null]], "transforms.Resize": [[314, null]], "transforms.ToTensor": [[306, null]], "vggnet_11": [[81, null]], "vggnet_13": [[82, null]], "vggnet_16": [[83, null]], "vggnet_19": [[84, null]], "wide_resnet_101": [[56, null]], "wide_resnet_50": [[57, null]], "xception": [[86, null]], "zfnet": [[88, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/FashionMNIST", "datasets/image/MNIST", "datasets/image/index", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/conv/alex/AlexNet", "models/conv/alex/alexnet", "models/conv/dense/DenseNet", "models/conv/dense/densenet_121", "models/conv/dense/densenet_169", "models/conv/dense/densenet_201", "models/conv/dense/densenet_264", "models/conv/inception/Inception", "models/conv/inception/inception_v1", "models/conv/inception/inception_v3", "models/conv/inception/inception_v4", "models/conv/inception_res/InceptionResNet", "models/conv/inception_res/inception_resnet_v1", "models/conv/inception_res/inception_resnet_v2", "models/conv/index", "models/conv/lenet/LeNet", "models/conv/lenet/lenet_1", "models/conv/lenet/lenet_4", "models/conv/lenet/lenet_5", "models/conv/mobile/MobileNet", "models/conv/mobile/MobileNet_V2", "models/conv/mobile/MobileNet_V3", "models/conv/mobile/mobilenet", "models/conv/mobile/mobilenet_v2", "models/conv/mobile/mobilenet_v3_large", "models/conv/mobile/mobilenet_v3_small", "models/conv/resnet/ResNet", "models/conv/resnet/resnet_1001", "models/conv/resnet/resnet_101", "models/conv/resnet/resnet_152", "models/conv/resnet/resnet_18", "models/conv/resnet/resnet_200", "models/conv/resnet/resnet_269", "models/conv/resnet/resnet_34", "models/conv/resnet/resnet_50", "models/conv/resnet/wide_resnet_101", "models/conv/resnet/wide_resnet_50", "models/conv/resnext/ResNeXt", "models/conv/resnext/resnext_101_32x16d", "models/conv/resnext/resnext_101_32x32d", "models/conv/resnext/resnext_101_32x4d", "models/conv/resnext/resnext_101_32x8d", "models/conv/resnext/resnext_101_64x4d", "models/conv/resnext/resnext_50_32x4d", "models/conv/senet/SENet", "models/conv/senet/se_resnet_101", "models/conv/senet/se_resnet_152", "models/conv/senet/se_resnet_18", "models/conv/senet/se_resnet_34", "models/conv/senet/se_resnet_50", "models/conv/senet/se_resnext_101_32x4d", "models/conv/senet/se_resnext_101_32x8d", "models/conv/senet/se_resnext_101_64x4d", "models/conv/senet/se_resnext_50_32x4d", "models/conv/sknet/SKNet", "models/conv/sknet/sk_resnet_18", "models/conv/sknet/sk_resnet_34", "models/conv/sknet/sk_resnet_50", "models/conv/sknet/sk_resnext_50_32x4d", "models/conv/vgg/VGGNet", "models/conv/vgg/vggnet_11", "models/conv/vgg/vggnet_13", "models/conv/vgg/vggnet_16", "models/conv/vgg/vggnet_19", "models/conv/xception/Xception", "models/conv/xception/xception", "models/conv/zfnet/ZFNet", "models/conv/zfnet/zfnet", "models/models", "models/summarize", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/fused/ConvBNReLU1d", "nn/fused/ConvBNReLU2d", "nn/fused/ConvBNReLU3d", "nn/fused/DepthSeparableConv1d", "nn/fused/DepthSeparableConv2d", "nn/fused/DepthSeparableConv3d", "nn/fused/SEModule", "nn/fused/SelectiveKernel", "nn/fused/index", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/HardSigmoid", "nn/modules/activation/HardSwish", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/ReLU6", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Swish", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/nn", "optim/Optimizer", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "others/types", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/meshgrid", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/FashionMNIST.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/conv/alex/AlexNet.rst", "models/conv/alex/alexnet.rst", "models/conv/dense/DenseNet.rst", "models/conv/dense/densenet_121.rst", "models/conv/dense/densenet_169.rst", "models/conv/dense/densenet_201.rst", "models/conv/dense/densenet_264.rst", "models/conv/inception/Inception.rst", "models/conv/inception/inception_v1.rst", "models/conv/inception/inception_v3.rst", "models/conv/inception/inception_v4.rst", "models/conv/inception_res/InceptionResNet.rst", "models/conv/inception_res/inception_resnet_v1.rst", "models/conv/inception_res/inception_resnet_v2.rst", "models/conv/index.rst", "models/conv/lenet/LeNet.rst", "models/conv/lenet/lenet_1.rst", "models/conv/lenet/lenet_4.rst", "models/conv/lenet/lenet_5.rst", "models/conv/mobile/MobileNet.rst", "models/conv/mobile/MobileNet_V2.rst", "models/conv/mobile/MobileNet_V3.rst", "models/conv/mobile/mobilenet.rst", "models/conv/mobile/mobilenet_v2.rst", "models/conv/mobile/mobilenet_v3_large.rst", "models/conv/mobile/mobilenet_v3_small.rst", "models/conv/resnet/ResNet.rst", "models/conv/resnet/resnet_1001.rst", "models/conv/resnet/resnet_101.rst", "models/conv/resnet/resnet_152.rst", "models/conv/resnet/resnet_18.rst", "models/conv/resnet/resnet_200.rst", "models/conv/resnet/resnet_269.rst", "models/conv/resnet/resnet_34.rst", "models/conv/resnet/resnet_50.rst", "models/conv/resnet/wide_resnet_101.rst", "models/conv/resnet/wide_resnet_50.rst", "models/conv/resnext/ResNeXt.rst", "models/conv/resnext/resnext_101_32x16d.rst", "models/conv/resnext/resnext_101_32x32d.rst", "models/conv/resnext/resnext_101_32x4d.rst", "models/conv/resnext/resnext_101_32x8d.rst", "models/conv/resnext/resnext_101_64x4d.rst", "models/conv/resnext/resnext_50_32x4d.rst", "models/conv/senet/SENet.rst", "models/conv/senet/se_resnet_101.rst", "models/conv/senet/se_resnet_152.rst", "models/conv/senet/se_resnet_18.rst", "models/conv/senet/se_resnet_34.rst", "models/conv/senet/se_resnet_50.rst", "models/conv/senet/se_resnext_101_32x4d.rst", "models/conv/senet/se_resnext_101_32x8d.rst", "models/conv/senet/se_resnext_101_64x4d.rst", "models/conv/senet/se_resnext_50_32x4d.rst", "models/conv/sknet/SKNet.rst", "models/conv/sknet/sk_resnet_18.rst", "models/conv/sknet/sk_resnet_34.rst", "models/conv/sknet/sk_resnet_50.rst", "models/conv/sknet/sk_resnext_50_32x4d.rst", "models/conv/vgg/VGGNet.rst", "models/conv/vgg/vggnet_11.rst", "models/conv/vgg/vggnet_13.rst", "models/conv/vgg/vggnet_16.rst", "models/conv/vgg/vggnet_19.rst", "models/conv/xception/Xception.rst", "models/conv/xception/xception.rst", "models/conv/zfnet/ZFNet.rst", "models/conv/zfnet/zfnet.rst", "models/models.rst", "models/summarize.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/fused/ConvBNReLU1d.rst", "nn/fused/ConvBNReLU2d.rst", "nn/fused/ConvBNReLU3d.rst", "nn/fused/DepthSeparableConv1d.rst", "nn/fused/DepthSeparableConv2d.rst", "nn/fused/DepthSeparableConv3d.rst", "nn/fused/SEModule.rst", "nn/fused/SelectiveKernel.rst", "nn/fused/index.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/HardSigmoid.rst", "nn/modules/activation/HardSwish.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/ReLU6.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Swish.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "others/types.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"abs() (in module lucid)": [[265, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[220, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[221, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[222, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[224, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[223, "lucid.optim.AdamW", false]], "adaptive_avg_pool1d() (in module lucid.nn.functional)": [[134, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[135, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[136, "lucid.nn.functional.adaptive_avg_pool3d", false]], "adaptiveavgpool1d (class in lucid.nn)": [[206, "lucid.nn.AdaptiveAvgPool1d", false]], "adaptiveavgpool2d (class in lucid.nn)": [[207, "lucid.nn.AdaptiveAvgPool2d", false]], "adaptiveavgpool3d (class in lucid.nn)": [[208, "lucid.nn.AdaptiveAvgPool3d", false]], "add() (in module lucid)": [[244, "lucid.add", false]], "alexnet (class in lucid.models)": [[21, "lucid.models.AlexNet", false]], "alexnet() (in module lucid.models)": [[22, "lucid.models.alexnet", false]], "alpha_dropout() (in module lucid.nn.functional)": [[114, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[181, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[255, "lucid.arange", false]], "arccos() (in module lucid)": [[266, "lucid.arccos", false]], "arcsin() (in module lucid)": [[267, "lucid.arcsin", false]], "arctan() (in module lucid)": [[268, "lucid.arctan", false]], "asgd (class in lucid.optim)": [[219, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[137, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[138, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[139, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[209, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[210, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[211, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[130, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[198, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[199, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[200, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[192, "lucid.nn.BCELoss", false]], "bilinear (class in lucid.nn)": [[188, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[121, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[124, "lucid.nn.functional.binary_cross_entropy", false]], "buffer (class in lucid.nn)": [[91, "lucid.nn.Buffer", false]], "centercrop (class in lucid.transforms)": [[307, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[10, "lucid.linalg.cholesky", false]], "clip() (in module lucid)": [[269, "lucid.clip", false]], "compose (class in lucid.transforms)": [[305, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[291, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[156, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[177, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[109, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[178, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[110, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[179, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[111, "lucid.nn.functional.conv3d", false]], "convbnrelu1d (class in lucid.nn)": [[147, "lucid.nn.ConvBNReLU1d", false]], "convbnrelu2d (class in lucid.nn)": [[148, "lucid.nn.ConvBNReLU2d", false]], "convbnrelu3d (class in lucid.nn)": [[149, "lucid.nn.ConvBNReLU3d", false]], "cos() (in module lucid)": [[270, "lucid.cos", false]], "cosh() (in module lucid)": [[271, "lucid.cosh", false]], "cross_entropy() (in module lucid.nn.functional)": [[125, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[193, "lucid.nn.CrossEntropyLoss", false]], "cube() (in module lucid)": [[272, "lucid.cube", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "densenet (class in lucid.models)": [[23, "lucid.models.DenseNet", false]], "densenet_121() (in module lucid.models)": [[24, "lucid.models.densenet_121", false]], "densenet_169() (in module lucid.models)": [[25, "lucid.models.densenet_169", false]], "densenet_201() (in module lucid.models)": [[26, "lucid.models.densenet_201", false]], "densenet_264() (in module lucid.models)": [[27, "lucid.models.densenet_264", false]], "depthseparableconv1d (class in lucid.nn)": [[150, "lucid.nn.DepthSeparableConv1d", false]], "depthseparableconv2d (class in lucid.nn)": [[151, "lucid.nn.DepthSeparableConv2d", false]], "depthseparableconv3d (class in lucid.nn)": [[152, "lucid.nn.DepthSeparableConv3d", false]], "det() (in module lucid.linalg)": [[11, "lucid.linalg.det", false]], "diag() (in module lucid)": [[256, "lucid.diag", false]], "div() (in module lucid)": [[245, "lucid.div", false]], "dot() (in module lucid)": [[246, "lucid.dot", false]], "dropout (class in lucid.nn)": [[182, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[115, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[183, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[116, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[184, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[117, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[185, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[118, "lucid.nn.functional.dropout3d", false]], "eig() (in module lucid.linalg)": [[12, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[164, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[100, "lucid.nn.functional.elu", false]], "empty() (in module lucid)": [[257, "lucid.empty", false]], "empty_like() (in module lucid)": [[258, "lucid.empty_like", false]], "exp() (in module lucid)": [[273, "lucid.exp", false]], "eye() (in module lucid)": [[259, "lucid.eye", false]], "fashionmnist (class in lucid.datasets)": [[5, "lucid.datasets.FashionMNIST", false]], "flatten() (in module lucid)": [[292, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[165, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[101, "lucid.nn.functional.gelu", false]], "grad_enabled() (in module lucid)": [[231, "lucid.grad_enabled", false]], "hardsigmoid (class in lucid.nn)": [[166, "lucid.nn.HardSigmoid", false]], "hardswish (class in lucid.nn)": [[167, "lucid.nn.HardSwish", false]], "hstack() (in module lucid)": [[293, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[126, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[194, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[189, "lucid.nn.Identity", false]], "inception (class in lucid.models)": [[28, "lucid.models.Inception", false]], "inception_resnet_v1() (in module lucid.models)": [[33, "lucid.models.inception_resnet_v1", false]], "inception_resnet_v2() (in module lucid.models)": [[34, "lucid.models.inception_resnet_v2", false]], "inception_v1() (in module lucid.models)": [[29, "lucid.models.inception_v1", false]], "inception_v3() (in module lucid.models)": [[30, "lucid.models.inception_v3", false]], "inception_v4() (in module lucid.models)": [[31, "lucid.models.inception_v4", false]], "inceptionresnet (class in lucid.models)": [[32, "lucid.models.InceptionResNet", false]], "inner() (in module lucid)": [[247, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[132, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[201, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[202, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[203, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[145, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[14, "lucid.linalg.inv", false]], "kaiming_normal() (in module lucid.nn.init)": [[158, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[159, "lucid.nn.init.kaiming_uniform", false]], "layer_norm() (in module lucid.nn.functional)": [[133, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[204, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[103, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[168, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[36, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[37, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[38, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[39, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[190, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[123, "lucid.nn.functional.linear", false]], "log() (in module lucid)": [[274, "lucid.log", false]], "lucid": [[8, "module-lucid", false]], "matmul() (in module lucid)": [[248, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[15, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[275, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[141, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[142, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[143, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[249, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[212, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[213, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[214, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[276, "lucid.mean", false]], "meshgrid() (in module lucid)": [[295, "lucid.meshgrid", false]], "min() (in module lucid)": [[277, "lucid.min", false]], "minimum() (in module lucid)": [[250, "lucid.minimum", false]], "mnist (class in lucid.datasets)": [[6, "lucid.datasets.MNIST", false]], "mobilenet (class in lucid.models)": [[40, "lucid.models.MobileNet", false]], "mobilenet() (in module lucid.models)": [[43, "lucid.models.mobilenet", false]], "mobilenet_v2 (class in lucid.models)": [[41, "lucid.models.MobileNet_V2", false]], "mobilenet_v2() (in module lucid.models)": [[44, "lucid.models.mobilenet_v2", false]], "mobilenet_v3 (class in lucid.models)": [[42, "lucid.models.MobileNet_V3", false]], "mobilenet_v3_large() (in module lucid.models)": [[45, "lucid.models.mobilenet_v3_large", false]], "mobilenet_v3_small() (in module lucid.models)": [[46, "lucid.models.mobilenet_v3_small", false]], "module": [[8, "module-lucid", false]], "module (class in lucid.nn)": [[92, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[94, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[95, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[128, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[195, "lucid.nn.MSELoss", false]], "mul() (in module lucid)": [[251, "lucid.mul", false]], "nadam (class in lucid.optim)": [[225, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[129, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[196, "lucid.nn.NLLLoss", false]], "no_grad() (in module lucid)": [[233, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[16, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[160, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[308, "lucid.transforms.Normalize", false]], "ones() (in module lucid)": [[260, "lucid.ones", false]], "ones_like() (in module lucid)": [[261, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[217, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[252, "lucid.outer", false]], "pad() (in module lucid)": [[296, "lucid.pad", false]], "parameter (class in lucid.nn)": [[93, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[96, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[97, "lucid.nn.ParameterList", false]], "pinv() (in module lucid.linalg)": [[17, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[253, "lucid.power", false]], "qr() (in module lucid.linalg)": [[18, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[226, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[237, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[238, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[239, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[309, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[310, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[311, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[312, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[313, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[297, "lucid.ravel", false]], "reciprocal() (in module lucid)": [[278, "lucid.reciprocal", false]], "register_model() (in module lucid)": [[234, "lucid.register_model", false]], "relu (class in lucid.nn)": [[169, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[104, "lucid.nn.functional.relu", false]], "relu6 (class in lucid.nn)": [[170, "lucid.nn.ReLU6", false]], "repeat() (in module lucid)": [[298, "lucid.repeat", false]], "reshape() (in module lucid)": [[299, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[314, "lucid.transforms.Resize", false]], "resnet (class in lucid.models)": [[47, "lucid.models.ResNet", false]], "resnet_1001() (in module lucid.models)": [[48, "lucid.models.resnet_1001", false]], "resnet_101() (in module lucid.models)": [[49, "lucid.models.resnet_101", false]], "resnet_152() (in module lucid.models)": [[50, "lucid.models.resnet_152", false]], "resnet_18() (in module lucid.models)": [[51, "lucid.models.resnet_18", false]], "resnet_200() (in module lucid.models)": [[52, "lucid.models.resnet_200", false]], "resnet_269() (in module lucid.models)": [[53, "lucid.models.resnet_269", false]], "resnet_34() (in module lucid.models)": [[54, "lucid.models.resnet_34", false]], "resnet_50() (in module lucid.models)": [[55, "lucid.models.resnet_50", false]], "resnext (class in lucid.models)": [[58, "lucid.models.ResNeXt", false]], "resnext_101_32x16d() (in module lucid.models)": [[59, "lucid.models.resnext_101_32x16d", false]], "resnext_101_32x32d() (in module lucid.models)": [[60, "lucid.models.resnext_101_32x32d", false]], "resnext_101_32x4d() (in module lucid.models)": [[61, "lucid.models.resnext_101_32x4d", false]], "resnext_101_32x8d() (in module lucid.models)": [[62, "lucid.models.resnext_101_32x8d", false]], "resnext_101_64x4d() (in module lucid.models)": [[63, "lucid.models.resnext_101_64x4d", false]], "resnext_50_32x4d() (in module lucid.models)": [[64, "lucid.models.resnext_50_32x4d", false]], "rmsprop (class in lucid.optim)": [[227, "lucid.optim.RMSprop", false]], "rotate() (in module lucid.nn.functional)": [[146, "lucid.nn.functional.rotate", false]], "rprop (class in lucid.optim)": [[228, "lucid.optim.Rprop", false]], "se_resnet_101() (in module lucid.models)": [[66, "lucid.models.se_resnet_101", false]], "se_resnet_152() (in module lucid.models)": [[67, "lucid.models.se_resnet_152", false]], "se_resnet_18() (in module lucid.models)": [[68, "lucid.models.se_resnet_18", false]], "se_resnet_34() (in module lucid.models)": [[69, "lucid.models.se_resnet_34", false]], "se_resnet_50() (in module lucid.models)": [[70, "lucid.models.se_resnet_50", false]], "se_resnext_101_32x4d() (in module lucid.models)": [[71, "lucid.models.se_resnext_101_32x4d", false]], "se_resnext_101_32x8d() (in module lucid.models)": [[72, "lucid.models.se_resnext_101_32x8d", false]], "se_resnext_101_64x4d() (in module lucid.models)": [[73, "lucid.models.se_resnext_101_64x4d", false]], "se_resnext_50_32x4d() (in module lucid.models)": [[74, "lucid.models.se_resnext_50_32x4d", false]], "seed() (in module lucid.random)": [[240, "lucid.random.seed", false]], "selectivekernel (class in lucid.nn)": [[154, "lucid.nn.SelectiveKernel", false]], "selu (class in lucid.nn)": [[171, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[105, "lucid.nn.functional.selu", false]], "semodule (class in lucid.nn)": [[153, "lucid.nn.SEModule", false]], "senet (class in lucid.models)": [[65, "lucid.models.SENet", false]], "sequential (class in lucid.nn)": [[98, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[229, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[172, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[106, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[279, "lucid.sign", false]], "sin() (in module lucid)": [[280, "lucid.sin", false]], "sinh() (in module lucid)": [[281, "lucid.sinh", false]], "sk_resnet_18() (in module lucid.models)": [[76, "lucid.models.sk_resnet_18", false]], "sk_resnet_34() (in module lucid.models)": [[77, "lucid.models.sk_resnet_34", false]], "sk_resnet_50() (in module lucid.models)": [[78, "lucid.models.sk_resnet_50", false]], "sk_resnext_50_32x4d() (in module lucid.models)": [[79, "lucid.models.sk_resnext_50_32x4d", false]], "sknet (class in lucid.models)": [[75, "lucid.models.SKNet", false]], "softmax (class in lucid.nn)": [[173, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[107, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[19, "lucid.linalg.solve", false]], "sqrt() (in module lucid)": [[282, "lucid.sqrt", false]], "square() (in module lucid)": [[283, "lucid.square", false]], "squeeze() (in module lucid)": [[300, "lucid.squeeze", false]], "stack() (in module lucid)": [[301, "lucid.stack", false]], "sub() (in module lucid)": [[254, "lucid.sub", false]], "sum() (in module lucid)": [[284, "lucid.sum", false]], "summarize() (in module lucid.models)": [[90, "lucid.models.summarize", false]], "svd() (in module lucid.linalg)": [[20, "lucid.linalg.svd", false]], "swish (class in lucid.nn)": [[174, "lucid.nn.Swish", false]], "tan() (in module lucid)": [[285, "lucid.tan", false]], "tanh (class in lucid.nn)": [[175, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[286, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[108, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[243, "lucid.Tensor", false]], "tensor() (in module lucid)": [[290, "lucid.tensor", false]], "tile() (in module lucid)": [[302, "lucid.tile", false]], "totensor (class in lucid.transforms)": [[306, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[287, "lucid.trace", false]], "transpose() (in module lucid)": [[288, "lucid.transpose", false]], "unfold() (in module lucid.nn.functional)": [[113, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[161, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[241, "lucid.random.uniform", false]], "unsqueeze() (in module lucid)": [[303, "lucid.unsqueeze", false]], "var() (in module lucid)": [[289, "lucid.var", false]], "vggnet (class in lucid.models)": [[80, "lucid.models.VGGNet", false]], "vggnet_11() (in module lucid.models)": [[81, "lucid.models.vggnet_11", false]], "vggnet_13() (in module lucid.models)": [[82, "lucid.models.vggnet_13", false]], "vggnet_16() (in module lucid.models)": [[83, "lucid.models.vggnet_16", false]], "vggnet_19() (in module lucid.models)": [[84, "lucid.models.vggnet_19", false]], "vstack() (in module lucid)": [[304, "lucid.vstack", false]], "wide_resnet_101() (in module lucid.models)": [[56, "lucid.models.wide_resnet_101", false]], "wide_resnet_50() (in module lucid.models)": [[57, "lucid.models.wide_resnet_50", false]], "xavier_normal() (in module lucid.nn.init)": [[162, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[163, "lucid.nn.init.xavier_uniform", false]], "xception (class in lucid.models)": [[85, "lucid.models.Xception", false]], "xception() (in module lucid.models)": [[86, "lucid.models.xception", false]], "zeros() (in module lucid)": [[262, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[263, "lucid.zeros_like", false]], "zfnet (class in lucid.models)": [[87, "lucid.models.ZFNet", false]], "zfnet() (in module lucid.models)": [[88, "lucid.models.zfnet", false]]}, "objects": {"": [[8, 0, 0, "-", "lucid"]], "lucid": [[243, 1, 1, "", "Tensor"], [265, 2, 1, "", "abs"], [244, 2, 1, "", "add"], [255, 2, 1, "", "arange"], [266, 2, 1, "", "arccos"], [267, 2, 1, "", "arcsin"], [268, 2, 1, "", "arctan"], [269, 2, 1, "", "clip"], [291, 2, 1, "", "concatenate"], [270, 2, 1, "", "cos"], [271, 2, 1, "", "cosh"], [272, 2, 1, "", "cube"], [256, 2, 1, "", "diag"], [245, 2, 1, "", "div"], [246, 2, 1, "", "dot"], [257, 2, 1, "", "empty"], [258, 2, 1, "", "empty_like"], [273, 2, 1, "", "exp"], [259, 2, 1, "", "eye"], [292, 2, 1, "", "flatten"], [231, 2, 1, "", "grad_enabled"], [293, 2, 1, "", "hstack"], [247, 2, 1, "", "inner"], [274, 2, 1, "", "log"], [248, 2, 1, "", "matmul"], [275, 2, 1, "", "max"], [249, 2, 1, "", "maximum"], [276, 2, 1, "", "mean"], [295, 2, 1, "", "meshgrid"], [277, 2, 1, "", "min"], [250, 2, 1, "", "minimum"], [251, 2, 1, "", "mul"], [233, 2, 1, "", "no_grad"], [260, 2, 1, "", "ones"], [261, 2, 1, "", "ones_like"], [252, 2, 1, "", "outer"], [296, 2, 1, "", "pad"], [253, 2, 1, "", "power"], [297, 2, 1, "", "ravel"], [278, 2, 1, "", "reciprocal"], [234, 2, 1, "", "register_model"], [298, 2, 1, "", "repeat"], [299, 2, 1, "", "reshape"], [279, 2, 1, "", "sign"], [280, 2, 1, "", "sin"], [281, 2, 1, "", "sinh"], [282, 2, 1, "", "sqrt"], [283, 2, 1, "", "square"], [300, 2, 1, "", "squeeze"], [301, 2, 1, "", "stack"], [254, 2, 1, "", "sub"], [284, 2, 1, "", "sum"], [285, 2, 1, "", "tan"], [286, 2, 1, "", "tanh"], [290, 2, 1, "", "tensor"], [302, 2, 1, "", "tile"], [287, 2, 1, "", "trace"], [288, 2, 1, "", "transpose"], [303, 2, 1, "", "unsqueeze"], [289, 2, 1, "", "var"], [304, 2, 1, "", "vstack"], [262, 2, 1, "", "zeros"], [263, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "FashionMNIST"], [6, 1, 1, "", "MNIST"]], "lucid.linalg": [[10, 2, 1, "", "cholesky"], [11, 2, 1, "", "det"], [12, 2, 1, "", "eig"], [14, 2, 1, "", "inv"], [15, 2, 1, "", "matrix_power"], [16, 2, 1, "", "norm"], [17, 2, 1, "", "pinv"], [18, 2, 1, "", "qr"], [19, 2, 1, "", "solve"], [20, 2, 1, "", "svd"]], "lucid.models": [[21, 1, 1, "", "AlexNet"], [23, 1, 1, "", "DenseNet"], [28, 1, 1, "", "Inception"], [32, 1, 1, "", "InceptionResNet"], [36, 1, 1, "", "LeNet"], [40, 1, 1, "", "MobileNet"], [41, 1, 1, "", "MobileNet_V2"], [42, 1, 1, "", "MobileNet_V3"], [58, 1, 1, "", "ResNeXt"], [47, 1, 1, "", "ResNet"], [65, 1, 1, "", "SENet"], [75, 1, 1, "", "SKNet"], [80, 1, 1, "", "VGGNet"], [85, 1, 1, "", "Xception"], [87, 1, 1, "", "ZFNet"], [22, 2, 1, "", "alexnet"], [24, 2, 1, "", "densenet_121"], [25, 2, 1, "", "densenet_169"], [26, 2, 1, "", "densenet_201"], [27, 2, 1, "", "densenet_264"], [33, 2, 1, "", "inception_resnet_v1"], [34, 2, 1, "", "inception_resnet_v2"], [29, 2, 1, "", "inception_v1"], [30, 2, 1, "", "inception_v3"], [31, 2, 1, "", "inception_v4"], [37, 2, 1, "", "lenet_1"], [38, 2, 1, "", "lenet_4"], [39, 2, 1, "", "lenet_5"], [43, 2, 1, "", "mobilenet"], [44, 2, 1, "", "mobilenet_v2"], [45, 2, 1, "", "mobilenet_v3_large"], [46, 2, 1, "", "mobilenet_v3_small"], [48, 2, 1, "", "resnet_1001"], [49, 2, 1, "", "resnet_101"], [50, 2, 1, "", "resnet_152"], [51, 2, 1, "", "resnet_18"], [52, 2, 1, "", "resnet_200"], [53, 2, 1, "", "resnet_269"], [54, 2, 1, "", "resnet_34"], [55, 2, 1, "", "resnet_50"], [59, 2, 1, "", "resnext_101_32x16d"], [60, 2, 1, "", "resnext_101_32x32d"], [61, 2, 1, "", "resnext_101_32x4d"], [62, 2, 1, "", "resnext_101_32x8d"], [63, 2, 1, "", "resnext_101_64x4d"], [64, 2, 1, "", "resnext_50_32x4d"], [66, 2, 1, "", "se_resnet_101"], [67, 2, 1, "", "se_resnet_152"], [68, 2, 1, "", "se_resnet_18"], [69, 2, 1, "", "se_resnet_34"], [70, 2, 1, "", "se_resnet_50"], [71, 2, 1, "", "se_resnext_101_32x4d"], [72, 2, 1, "", "se_resnext_101_32x8d"], [73, 2, 1, "", "se_resnext_101_64x4d"], [74, 2, 1, "", "se_resnext_50_32x4d"], [76, 2, 1, "", "sk_resnet_18"], [77, 2, 1, "", "sk_resnet_34"], [78, 2, 1, "", "sk_resnet_50"], [79, 2, 1, "", "sk_resnext_50_32x4d"], [90, 2, 1, "", "summarize"], [81, 2, 1, "", "vggnet_11"], [82, 2, 1, "", "vggnet_13"], [83, 2, 1, "", "vggnet_16"], [84, 2, 1, "", "vggnet_19"], [56, 2, 1, "", "wide_resnet_101"], [57, 2, 1, "", "wide_resnet_50"], [86, 2, 1, "", "xception"], [88, 2, 1, "", "zfnet"]], "lucid.nn": [[206, 1, 1, "", "AdaptiveAvgPool1d"], [207, 1, 1, "", "AdaptiveAvgPool2d"], [208, 1, 1, "", "AdaptiveAvgPool3d"], [181, 1, 1, "", "AlphaDropout"], [209, 1, 1, "", "AvgPool1d"], [210, 1, 1, "", "AvgPool2d"], [211, 1, 1, "", "AvgPool3d"], [192, 1, 1, "", "BCELoss"], [198, 1, 1, "", "BatchNorm1d"], [199, 1, 1, "", "BatchNorm2d"], [200, 1, 1, "", "BatchNorm3d"], [188, 1, 1, "", "Bilinear"], [91, 1, 1, "", "Buffer"], [177, 1, 1, "", "Conv1d"], [178, 1, 1, "", "Conv2d"], [179, 1, 1, "", "Conv3d"], [147, 1, 1, "", "ConvBNReLU1d"], [148, 1, 1, "", "ConvBNReLU2d"], [149, 1, 1, "", "ConvBNReLU3d"], [193, 1, 1, "", "CrossEntropyLoss"], [150, 1, 1, "", "DepthSeparableConv1d"], [151, 1, 1, "", "DepthSeparableConv2d"], [152, 1, 1, "", "DepthSeparableConv3d"], [182, 1, 1, "", "Dropout"], [183, 1, 1, "", "Dropout1d"], [184, 1, 1, "", "Dropout2d"], [185, 1, 1, "", "Dropout3d"], [164, 1, 1, "", "ELU"], [165, 1, 1, "", "GELU"], [166, 1, 1, "", "HardSigmoid"], [167, 1, 1, "", "HardSwish"], [194, 1, 1, "", "HuberLoss"], [189, 1, 1, "", "Identity"], [201, 1, 1, "", "InstanceNorm1d"], [202, 1, 1, "", "InstanceNorm2d"], [203, 1, 1, "", "InstanceNorm3d"], [204, 1, 1, "", "LayerNorm"], [168, 1, 1, "", "LeakyReLU"], [190, 1, 1, "", "Linear"], [195, 1, 1, "", "MSELoss"], [212, 1, 1, "", "MaxPool1d"], [213, 1, 1, "", "MaxPool2d"], [214, 1, 1, "", "MaxPool3d"], [92, 1, 1, "", "Module"], [94, 1, 1, "", "ModuleDict"], [95, 1, 1, "", "ModuleList"], [196, 1, 1, "", "NLLLoss"], [93, 1, 1, "", "Parameter"], [96, 1, 1, "", "ParameterDict"], [97, 1, 1, "", "ParameterList"], [169, 1, 1, "", "ReLU"], [170, 1, 1, "", "ReLU6"], [171, 1, 1, "", "SELU"], [153, 1, 1, "", "SEModule"], [154, 1, 1, "", "SelectiveKernel"], [98, 1, 1, "", "Sequential"], [172, 1, 1, "", "Sigmoid"], [173, 1, 1, "", "Softmax"], [174, 1, 1, "", "Swish"], [175, 1, 1, "", "Tanh"]], "lucid.nn.functional": [[134, 2, 1, "", "adaptive_avg_pool1d"], [135, 2, 1, "", "adaptive_avg_pool2d"], [136, 2, 1, "", "adaptive_avg_pool3d"], [114, 2, 1, "", "alpha_dropout"], [137, 2, 1, "", "avg_pool1d"], [138, 2, 1, "", "avg_pool2d"], [139, 2, 1, "", "avg_pool3d"], [130, 2, 1, "", "batch_norm"], [121, 2, 1, "", "bilinear"], [124, 2, 1, "", "binary_cross_entropy"], [109, 2, 1, "", "conv1d"], [110, 2, 1, "", "conv2d"], [111, 2, 1, "", "conv3d"], [125, 2, 1, "", "cross_entropy"], [115, 2, 1, "", "dropout"], [116, 2, 1, "", "dropout1d"], [117, 2, 1, "", "dropout2d"], [118, 2, 1, "", "dropout3d"], [100, 2, 1, "", "elu"], [101, 2, 1, "", "gelu"], [126, 2, 1, "", "huber_loss"], [132, 2, 1, "", "instance_norm"], [145, 2, 1, "", "interpolate"], [133, 2, 1, "", "layer_norm"], [103, 2, 1, "", "leaky_relu"], [123, 2, 1, "", "linear"], [141, 2, 1, "", "max_pool1d"], [142, 2, 1, "", "max_pool2d"], [143, 2, 1, "", "max_pool3d"], [128, 2, 1, "", "mse_loss"], [129, 2, 1, "", "nll_loss"], [104, 2, 1, "", "relu"], [146, 2, 1, "", "rotate"], [105, 2, 1, "", "selu"], [106, 2, 1, "", "sigmoid"], [107, 2, 1, "", "softmax"], [108, 2, 1, "", "tanh"], [113, 2, 1, "", "unfold"]], "lucid.nn.init": [[156, 2, 1, "", "constant"], [158, 2, 1, "", "kaiming_normal"], [159, 2, 1, "", "kaiming_uniform"], [160, 2, 1, "", "normal"], [161, 2, 1, "", "uniform"], [162, 2, 1, "", "xavier_normal"], [163, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[219, 1, 1, "", "ASGD"], [220, 1, 1, "", "Adadelta"], [221, 1, 1, "", "Adagrad"], [222, 1, 1, "", "Adam"], [223, 1, 1, "", "AdamW"], [224, 1, 1, "", "Adamax"], [225, 1, 1, "", "NAdam"], [217, 1, 1, "", "Optimizer"], [226, 1, 1, "", "RAdam"], [227, 1, 1, "", "RMSprop"], [228, 1, 1, "", "Rprop"], [229, 1, 1, "", "SGD"]], "lucid.random": [[237, 2, 1, "", "rand"], [238, 2, 1, "", "randint"], [239, 2, 1, "", "randn"], [240, 2, 1, "", "seed"], [241, 2, 1, "", "uniform"]], "lucid.transforms": [[307, 1, 1, "", "CenterCrop"], [305, 1, 1, "", "Compose"], [308, 1, 1, "", "Normalize"], [309, 1, 1, "", "RandomCrop"], [310, 1, 1, "", "RandomGrayscale"], [311, 1, 1, "", "RandomHorizontalFlip"], [312, 1, 1, "", "RandomRotation"], [313, 1, 1, "", "RandomVerticalFlip"], [314, 1, 1, "", "Resize"], [306, 1, 1, "", "ToTensor"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [3, 8, 9, 15, 17, 20, 45, 46, 89, 90, 91, 92, 93, 94, 96, 97, 98, 134, 135, 136, 154, 193, 196, 206, 207, 208, 209, 212, 213, 216, 217, 218, 232, 234, 248, 256, 274, 276, 284, 287, 289, 290, 300, 306, 308, 316], "0": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 30, 32, 36, 43, 65, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 284, 285, 286, 288, 289, 290, 291, 293, 296, 297, 298, 300, 301, 303, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 316], "000": [5, 6, 257, 258], "0000": [193, 194, 196], "0001": 219, "000e": [257, 258], "001": [219, 222, 223, 225, 226, 229], "002": [224, 225], "004": 225, "005": 168, "008": [43, 89], "01": [103, 168, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229], "01051757": 239, "013": [26, 89], "016": [48, 89], "0205": 193, "0217": 193, "0227": 193, "024": [70, 89], "026": [59, 89], "028": [64, 89], "0299": 193, "032": [55, 89], "044715": [101, 165], "0450": 193, "0451": 193, "047": [82, 89], "04719755": 266, "0474259": 106, "048": [72, 89], "0480": 193, "04861": 89, "05": [130, 132, 133, 147, 148, 149, 168, 198, 199, 200, 201, 202, 203, 204], "0507": [105, 171], "06": [220, 228], "069": [53, 89], "07": [124, 125, 192, 193], "0700": 193, "0706508": 175, "071": [48, 89], "0721": 193, "073": [78, 89], "07722396": 174, "0794": 196, "08": [222, 223, 224, 225, 226, 227], "0802": 196, "08333333": 17, "085537": 273, "088": [70, 89], "0900": [173, 193], "096": [86, 89], "0986": [107, 173], "09861229": 274, "0992": 193, "1": [0, 1, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 32, 36, 37, 38, 39, 42, 43, 44, 45, 46, 65, 71, 72, 73, 74, 75, 79, 80, 85, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 235, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316], "10": [0, 1, 2, 3, 5, 21, 22, 23, 36, 37, 38, 39, 80, 87, 88, 89, 90, 94, 95, 98, 110, 111, 121, 123, 134, 177, 178, 179, 184, 185, 188, 190, 199, 200, 202, 206, 210, 211, 213, 221, 234, 238, 241, 242, 245, 248, 251, 252, 268, 284, 307, 309, 310, 312], "100": [22, 81, 82, 83, 84, 89, 234, 316], "1000": [21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88], "1000000": 219, "1001": [48, 89, 193], "1003": 193, "1007": 89, "101": [49, 56, 59, 60, 61, 62, 63, 66, 71, 72, 73, 89], "1014": 105, "102": [53, 89], "1025": [95, 98], "1026": [95, 98], "1027": [95, 98], "10499": 106, "1050": 172, "1054": 196, "1056": [95, 98], "10590": 89, "1097": 89, "11": [51, 68, 80, 81, 89, 121, 177, 178, 179, 184, 188, 199, 200, 202, 210, 211, 213, 248, 307, 308, 309, 310, 312], "1105": 89, "1109": 89, "1111": 192, "112": 45, "1134": 121, "114b": 310, "119": 121, "1192": [106, 107, 173], "12": [23, 24, 25, 26, 27, 37, 38, 96, 121, 136, 177, 178, 179, 184, 185, 188, 199, 200, 202, 208, 210, 211, 213, 248, 252, 253, 307, 309, 310, 312], "120": [36, 39, 45, 46], "121": [23, 24, 89], "123": [158, 159, 160, 161, 162, 163, 240, 241], "124": [158, 159, 162, 163], "125": 211, "1250": 194, "1251": 89, "1258": 89, "126": [56, 89], "128": [33, 47, 56, 57, 80, 89, 98, 154, 305, 316], "1280": 42, "128x128": [305, 316], "13": [29, 80, 82, 89, 121, 177, 178, 179, 188, 200, 210, 211, 213, 248, 307, 309, 310, 312], "1314": 89, "132": [81, 89], "1324": 89, "133": [82, 89], "138": [83, 89], "14": [25, 89, 177, 178, 179, 184, 185, 188, 200, 210, 211, 213, 235, 248, 252, 307, 309, 310, 312], "1409": 89, "143": [84, 89], "144": 46, "145": 121, "149": [25, 48, 89], "15": [0, 121, 177, 178, 179, 188, 200, 210, 211, 213, 248, 252, 287, 307, 309, 310, 312, 316], "1513": 196, "152": [50, 67, 89], "155": 248, "1556": 89, "1588": [101, 165], "16": [23, 24, 36, 39, 42, 45, 46, 59, 65, 80, 83, 89, 95, 96, 98, 135, 136, 147, 148, 149, 153, 154, 177, 178, 179, 184, 185, 188, 199, 200, 207, 208, 210, 211, 213, 216, 248, 252, 282, 307, 309, 310, 312], "160": [45, 49, 89], "16227766": 18, "16425": 196, "1643": 192, "166": 248, "167": 167, "169": [23, 25, 89], "17": [177, 178, 179, 188, 200, 211, 247, 307, 309, 310, 312], "170": 121, "1704": 89, "17520119": 281, "177": [61, 89], "18": [38, 51, 68, 76, 89, 177, 178, 179, 184, 188, 200, 211, 251, 252, 307, 309, 310, 312], "1800": 193, "184": 45, "18877099": 174, "19": [80, 84, 89, 110, 111, 121, 178, 179, 200, 246, 248], "192": [37, 38, 50, 89], "194": [59, 89], "1966": [107, 172, 173], "198": [45, 89], "1998": [89, 193], "1_53": 89, "1d": [109, 134, 137, 141, 147, 150, 198, 201, 206, 241, 248, 256, 287, 295, 296, 297, 298, 302], "1e": [124, 125, 130, 132, 133, 147, 148, 149, 192, 193, 198, 199, 200, 201, 202, 203, 204, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "1e6": 219, "1st": [21, 87], "2": [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 37, 38, 39, 42, 45, 46, 51, 68, 76, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 154, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 235, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316], "20": [0, 5, 6, 26, 89, 94, 95, 98, 178, 179, 184, 200, 252, 273], "200": [45, 52, 89], "201": [26, 89], "2011": 153, "2012": 89, "2014": 89, "2015": 89, "2016": 89, "2017": 89, "2018": [89, 153], "2019": 89, "2023": 153, "2039": 196, "204": 179, "21": [54, 69, 89, 96, 121, 178, 179, 200, 252], "211": 248, "22": [33, 86, 89, 121, 178, 179, 184, 200, 246, 248], "2231": [193, 196], "224": [21, 23, 24, 25, 26, 27, 43, 44, 47, 57, 59, 60, 61, 62, 63, 64, 71, 72, 73, 74, 76, 77, 78, 79, 80, 87, 89], "2247": [198, 199, 200, 201, 202, 203, 204], "224x224": [29, 71, 72, 73, 74, 79], "226": 248, "22752314": 239, "2278": 89, "23": [49, 56, 59, 60, 61, 62, 63, 66, 178, 179, 200], "232": [43, 73, 89], "2324": [89, 171], "234": [158, 159, 160, 161, 162, 163, 241], "238": [46, 89], "23840584": 174, "24": [23, 24, 42, 45, 46, 52, 121, 135, 178, 179, 184, 200, 207, 252], "240": [45, 46, 84, 89], "2424": [107, 173], "2447": 173, "246": [37, 89], "25": [0, 55, 64, 76, 89, 106, 172, 179, 195, 200, 210, 211, 245, 278, 289], "2500": [192, 194, 196], "2512": 164, "2547": 171, "256": [47, 80], "26": [96, 123, 179, 190, 200, 252], "26325684": 239, "264": [27, 89], "2689": [107, 172, 173], "26894142": 174, "269": [53, 89], "27": [74, 89, 121, 177, 179, 200, 272], "272": [63, 89], "274": [79, 89], "276": [158, 159, 162, 163], "28": [37, 38, 70, 89, 121, 179, 252], "288": 46, "28x28": [5, 6, 37, 38], "29": [79, 89, 179], "299": [85, 89], "299r": 310, "299x299": [30, 31, 33, 34], "2_i": [201, 202, 203], "2d": [110, 117, 135, 138, 142, 148, 151, 199, 202, 207, 248, 256, 259, 287, 292, 295, 296, 298, 302, 312], "2e": 224, "2nd": [21, 87], "2x2": [113, 307, 309], "3": [1, 2, 3, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 37, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 85, 87, 89, 91, 92, 93, 95, 96, 97, 98, 101, 106, 107, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 123, 126, 128, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 269, 271, 272, 273, 274, 275, 276, 277, 281, 282, 283, 284, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314], "30": [30, 53, 89, 95, 146, 179, 312], "3026": 196, "30823025": 174, "31": [121, 179, 248], "310": [257, 258], "31622777": 18, "319": 89, "32": [23, 25, 26, 39, 59, 60, 61, 62, 64, 89, 95, 98, 121, 123, 135, 147, 148, 149, 153, 154, 178, 179, 190, 207, 216, 246, 247, 252], "321": [158, 159, 162, 163], "326": [66, 89], "32x16d": 89, "32x32": [36, 39], "32x32d": 89, "32x4d": [71, 74, 79, 89], "32x8d": [72, 89], "33": [27, 89, 95, 98, 123, 179, 190], "33333333": 17, "336": [62, 81, 89], "337": [27, 89], "34": [54, 69, 77, 89, 95, 98, 121, 179, 248, 252], "342": [158, 159, 162, 163], "345": [158, 159, 160, 161, 162, 163, 241], "35": [34, 89, 95, 98, 179], "352": [29, 89], "3567": [192, 196], "357": [83, 88, 89], "36": [50, 52, 67, 179], "3679": [100, 105, 164], "368": [76, 78, 89], "37": 177, "372": 121, "375": 195, "3750": 194, "37754067": 174, "378": [38, 89], "38344152": 237, "38629436": 274, "389056": 273, "392": [30, 89], "393": [29, 89], "3935": 164, "3d": [111, 118, 136, 139, 143, 149, 152, 179, 200, 203, 208], "3x3": [89, 242], "4": [0, 1, 2, 3, 9, 10, 11, 12, 14, 16, 17, 18, 23, 36, 37, 38, 43, 47, 49, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 69, 70, 77, 78, 89, 90, 96, 98, 109, 110, 111, 113, 116, 117, 118, 121, 123, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 150, 151, 152, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 219, 222, 226, 227, 229, 232, 235, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 261, 263, 269, 274, 275, 276, 277, 278, 280, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 301, 302, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314], "40": [31, 42, 45, 46, 89], "400": 39, "4044": 192, "4076": 193, "4096": [21, 87], "41421356": 10, "416": [53, 71, 89], "41666667": 17, "41808962": 239, "419974": 108, "4199743": 175, "42": [121, 153, 235, 242], "421": [158, 159, 162, 163], "423": [158, 159, 160, 161], "42718872": 18, "4278": 89, "4284": 89, "4286": 192, "43": [246, 248], "4323": 164, "4375": 194, "43758721": 237, "44": [49, 61, 89], "4472136": 12, "4495": [200, 203], "45": [77, 89, 121, 146, 312], "4510": 89, "4520": 89, "4545": 181, "455": [63, 89], "468": [60, 89], "4700": 89, "4708": 89, "47112767": 268, "472": [60, 89], "48": [23, 26, 27, 46, 53, 71, 89, 123, 190], "480": [25, 45, 89], "481": [45, 89], "49": [66, 89], "4979": 164, "4x4": 314, "5": [1, 2, 8, 9, 14, 15, 16, 17, 21, 30, 36, 37, 38, 39, 42, 45, 46, 75, 76, 77, 78, 87, 89, 90, 92, 93, 94, 95, 96, 98, 101, 106, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 123, 126, 128, 130, 132, 133, 134, 137, 138, 145, 147, 148, 149, 154, 156, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 209, 210, 211, 213, 214, 228, 232, 235, 238, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 261, 263, 265, 266, 267, 275, 276, 277, 278, 279, 284, 287, 288, 289, 290, 293, 295, 299, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316], "50": [47, 55, 57, 64, 70, 74, 78, 79, 89, 123, 190, 228, 246, 248, 310, 311, 313, 316], "5000": [192, 194, 196], "504": [44, 89], "510": 89, "5108": 196, "512": [34, 47, 51, 77, 89], "519": 89, "52359878": 267, "53": [121, 247], "530": [60, 89], "537": [46, 89], "543": [158, 159, 160, 161, 162, 163, 241], "54308063": 271, "544": [83, 89], "545": 253, "5455": 181, "549": [49, 89], "557": [55, 89], "559": [74, 89], "563": [158, 159, 162, 163], "569": [72, 89], "57": [78, 89, 121], "57079633": [266, 267], "57366333": 240, "576": 46, "586": [31, 89], "587g": 310, "592": [68, 89], "5987": 89, "5995": 89, "5th": [21, 87], "6": [9, 17, 21, 23, 24, 25, 26, 27, 36, 39, 47, 54, 55, 57, 64, 69, 70, 77, 78, 87, 96, 97, 109, 110, 111, 113, 118, 121, 123, 134, 159, 163, 166, 170, 177, 178, 179, 182, 183, 184, 185, 188, 190, 192, 198, 199, 200, 201, 202, 203, 204, 206, 210, 211, 213, 214, 220, 228, 232, 235, 241, 244, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 258, 261, 263, 275, 276, 277, 284, 287, 288, 289, 290, 293, 298, 299, 304, 306, 307, 308, 309, 310, 312, 314], "60": [50, 89], "6052": 196, "6065": 164, "608": [88, 89], "61": [22, 39, 89], "6124": [198, 199, 200, 201, 202, 203, 204], "62": [88, 89, 121], "62686041": 281, "630": 89, "6321": [100, 164], "63245553": 18, "64": [23, 27, 42, 45, 47, 52, 63, 75, 80, 89, 95, 98, 121, 153, 154], "645": 89, "64589411": 237, "647": [76, 89], "64x4d": [73, 89], "654": [158, 159, 160, 161, 162, 163, 241], "657": [158, 159, 162, 163], "6590": [107, 173], "66": [67, 89], "6652": 173, "66666667": 17, "6667": 192, "667": [84, 89], "6682": 192, "669": [52, 89], "67": 248, "672": [45, 54, 89], "67326": 171, "6733": 105, "678": [158, 159, 160, 161, 162, 163], "68811989": 239, "689": [51, 89], "69314718": 274, "696": [56, 89], "7": [16, 24, 80, 89, 96, 109, 110, 111, 113, 118, 121, 123, 124, 125, 134, 154, 165, 170, 171, 172, 175, 177, 178, 179, 184, 185, 188, 190, 192, 193, 195, 199, 200, 202, 203, 206, 210, 211, 213, 214, 235, 238, 241, 244, 246, 247, 248, 252, 254, 256, 273, 276, 284, 287, 288, 289, 302, 306, 307, 308, 309, 310, 312, 314], "70": [5, 6], "7001": 193, "704": [27, 61, 89], "706": [39, 89], "70710678": [12, 280], "7132": 89, "7141": 89, "7147": 196, "7182818": 273, "72": [42, 45, 46], "726791": 89, "7311": [107, 172, 173], "739": [33, 89], "74": 248, "75": [123, 190, 195, 219], "7581": 105, "760": [79, 89], "76159416": [174, 286], "7616": [108, 175], "76219569": 271, "7635": 171, "770": 89, "772": 253, "778": [68, 89], "78": [57, 89], "78357324": 239, "78539816": 268, "791": [62, 89], "79172504": 237, "792": [59, 89], "797": [54, 89], "7x7": 87, "8": [15, 19, 23, 47, 50, 53, 59, 60, 61, 62, 63, 64, 67, 76, 77, 78, 90, 95, 96, 98, 109, 110, 111, 113, 118, 121, 123, 124, 134, 135, 136, 147, 148, 149, 153, 165, 166, 171, 172, 175, 177, 178, 179, 182, 183, 184, 185, 188, 190, 192, 195, 199, 200, 202, 203, 206, 207, 208, 210, 211, 213, 214, 222, 223, 224, 225, 226, 227, 235, 238, 245, 246, 247, 248, 252, 253, 255, 256, 272, 276, 284, 287, 288, 289, 306, 307, 308, 309, 310, 312, 314], "80": [5, 6, 45], "8005": 193, "808": [50, 89], "817": [30, 89], "818": 89, "8182": 181, "82": 121, "821": [67, 89], "83": [63, 89], "833": 89, "84": [36, 38, 39], "840": [22, 89], "8413": [101, 165], "847": [34, 89], "848": [67, 82, 89], "856": [24, 89], "85772238": 174, "8584": 171, "86": 89, "862": [86, 89], "863": [81, 89], "864": [52, 89], "868": [69, 89], "872": [44, 66, 89], "876": [158, 159, 162, 163, 241], "88": [46, 62, 73, 89], "8808": [107, 172, 173], "886": [56, 89], "887": 253, "891773": 237, "89442719": 12, "895": [77, 89], "896": [74, 89], "9": [0, 1, 3, 6, 19, 89, 110, 113, 121, 123, 134, 177, 178, 179, 184, 188, 190, 192, 199, 200, 202, 206, 210, 211, 213, 219, 220, 222, 223, 224, 225, 226, 227, 229, 235, 238, 241, 244, 248, 252, 253, 254, 256, 282, 283, 306, 307, 308, 309, 310, 312], "904": [64, 89], "90709145": 240, "9091": 181, "9120": 196, "9163": 196, "928": [26, 89], "93": [72, 89], "94": 48, "9486833": 18, "949e": [257, 258], "9526": 106, "9545": 165, "955": [71, 89], "958": [69, 89], "96": 46, "960": 45, "96366276": 237, "9640": 175, "96402758": 286, "973": [57, 89], "978": [24, 89], "984": [31, 73, 89], "99": 227, "9957": 196, "99734545": 240, "999": [0, 222, 223, 224, 225, 226], "A": [1, 3, 5, 6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 32, 36, 40, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 75, 76, 77, 78, 80, 81, 82, 83, 84, 89, 92, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 121, 123, 124, 125, 129, 130, 132, 133, 145, 154, 181, 182, 183, 184, 185, 192, 193, 196, 198, 199, 200, 201, 202, 203, 204, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 235, 237, 238, 239, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 312], "As": 240, "Be": 0, "By": [0, 2, 3, 8, 48, 49, 50, 51, 52, 53, 54, 55, 93, 146, 216, 226, 232, 237, 238, 239, 241, 306, 316], "For": [2, 3, 4, 8, 10, 11, 12, 14, 15, 16, 17, 19, 98, 100, 101, 103, 104, 105, 106, 108, 121, 123, 145, 158, 159, 162, 163, 171, 177, 178, 179, 188, 190, 198, 199, 200, 201, 202, 203, 216, 218, 240, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 273, 274, 275, 276, 277, 280, 282, 284, 287, 288, 289, 296, 298, 300, 302, 303, 316], "If": [0, 1, 2, 5, 6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 47, 90, 92, 94, 95, 96, 97, 100, 101, 103, 104, 105, 106, 108, 109, 110, 111, 118, 121, 123, 130, 132, 135, 136, 145, 146, 147, 148, 149, 150, 151, 152, 154, 158, 159, 177, 178, 179, 188, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 217, 222, 223, 227, 228, 234, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 310, 311, 313, 314], "In": [3, 8, 17, 109, 110, 111, 193, 196, 231, 232, 233, 305, 316], "It": [1, 2, 3, 5, 8, 17, 18, 19, 21, 24, 25, 26, 27, 28, 29, 30, 36, 37, 38, 39, 41, 42, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 68, 80, 86, 89, 92, 94, 95, 96, 97, 98, 118, 121, 145, 146, 147, 148, 149, 153, 165, 166, 169, 170, 175, 188, 189, 192, 193, 194, 195, 196, 206, 207, 208, 216, 217, 218, 219, 225, 227, 228, 229, 232, 240, 244, 245, 246, 249, 250, 251, 253, 254, 275, 277, 291, 293, 295, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306], "Its": [19, 242], "Near": 17, "No": 113, "Not": 189, "One": [37, 316], "The": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316], "There": 299, "These": [4, 8, 9, 12, 15, 18, 20, 56, 57, 76, 77, 78, 86, 89, 181, 182, 183, 184, 185, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 228, 235, 242, 316], "To": [3, 89, 218, 239, 242, 257, 258, 295, 316], "With": [3, 113, 306, 316], "_": [15, 94, 95, 97, 98, 100, 101, 103, 104, 105, 106, 108, 123, 145, 199, 200, 201, 202, 203, 209, 210, 211, 212, 213, 214, 219, 220, 222, 223, 224, 225, 227, 229, 246, 247, 248, 252, 287, 288, 307, 308, 309, 311, 312, 313], "_1": [12, 94, 95, 96, 97, 98, 121, 188, 252, 291, 293, 304], "_2": [12, 94, 95, 96, 97, 98, 121, 188, 252, 291, 293, 304], "__call__": [1, 92], "__getitem__": [0, 2, 3, 5, 6], "__init__": [0, 1, 2, 3, 8, 21, 28, 32, 36, 40, 41, 42, 80, 87, 90, 91, 92, 93, 94, 95, 96, 97, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 188, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 234, 243, 305, 306], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5, 6], "__repr__": 217, "__setattr__": 92, "_activ": 107, "_arraylik": [235, 256, 258, 261, 263], "_arraylikeint": 296, "_arrayorscalar": [91, 93, 235, 243, 290], "_base_activ": 36, "_base_dtyp": [255, 257, 260, 262], "_c": 308, "_decai": 225, "_fanmod": [158, 159], "_grad_en": [231, 233], "_i": [12, 16, 107, 121, 173, 195, 198, 204, 209, 212, 246, 247, 249, 250, 252, 253, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 298, 300, 303, 304], "_in": [158, 159, 162, 163], "_j": [107, 173, 209, 212, 252, 276, 284, 288, 289], "_k": 301, "_left": 145, "_make_lay": 80, "_modul": 92, "_n": [12, 94, 95, 96, 97, 98, 291, 293, 304], "_numpyarrai": 235, "_out": [158, 159, 162, 163, 298, 302], "_p": 16, "_pad": 296, "_paddingstr": [147, 148, 149, 150, 151, 152, 177, 178, 179], "_paramet": 92, "_reductiontyp": [124, 125, 126, 128, 129, 192, 193, 194, 195, 196], "_right": 145, "_scalar": [156, 160, 161, 162, 163, 235, 255, 269], "_seresnetbottleneck": [66, 67, 70], "_seresnetmodul": [68, 69], "_shapelik": [90, 133, 204, 235, 238, 260, 262, 299, 300, 303], "_size": [134, 135, 136], "_skresnetmodul": [76, 77, 78], "_slope": 168, "_statedict": 217, "_t": [226, 227], "_tensor": [91, 93, 256, 290], "_tensorop": 243, "_u": 17, "_v": 17, "_valu": [269, 296], "_width": 296, "a_i": [249, 250, 253], "aaai": 89, "ab": 264, "abc": [2, 217], "abil": [8, 89, 316], "about": [8, 90], "abov": [8, 231, 233, 240, 256, 259], "absolut": [15, 16, 126, 224, 265], "abstract": [2, 3, 216, 217, 218, 219, 227, 229], "abstractmethod": 217, "acceler": [89, 171, 198, 199, 200, 219, 225, 227, 229], "accept": [189, 237, 243], "access": [0, 2, 3, 4, 5, 6, 59, 60, 61, 62, 63, 64, 91, 93, 94, 95, 96, 97, 98, 299], "accord": [145, 177, 178, 179, 188, 190, 193, 196, 220, 221, 222, 223, 224, 225, 226, 288], "accordingli": 11, "account": [15, 17, 18, 174], "accumul": [219, 220, 221, 244, 245, 249, 250, 251, 254], "accur": 67, "accuraci": [40, 41, 42, 70, 89], "achiev": [58, 59, 60, 61, 62, 63, 64, 89, 109, 110, 111, 134, 206, 207, 208, 225, 311, 313], "across": [0, 43, 91, 95, 98, 133, 134, 135, 136, 162, 163, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 235, 237, 238, 239, 240, 241, 242, 257, 258, 276, 289], "act": 223, "activ": [8, 21, 36, 45, 46, 48, 52, 53, 65, 80, 87, 89, 94, 98, 100, 101, 103, 104, 105, 106, 107, 108, 114, 147, 148, 149, 153, 154, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 181, 182, 183, 184, 185, 192, 193, 196, 198, 199, 200, 204, 275, 277], "actual": [93, 192, 193, 195, 196, 243, 309], "ad": [23, 42, 47, 92, 94, 95, 96, 97, 98, 109, 110, 111, 121, 123, 124, 125, 130, 132, 133, 137, 138, 139, 141, 142, 143, 147, 148, 149, 177, 178, 179, 192, 193, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211, 212, 213, 214, 220, 221, 222, 223, 224, 225, 226, 227, 234, 303, 316], "adadelta": 230, "adagrad": [220, 230], "adam": [89, 223, 224, 225, 226, 230], "adamax": 230, "adamw": 230, "adapt": [21, 28, 36, 66, 68, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 87, 89, 134, 135, 136, 153, 154, 206, 207, 208, 220, 221, 222, 225, 226, 227, 228], "adaptive_avg_pool1d": [120, 140, 206], "adaptive_avg_pool2d": [120, 140, 207], "adaptive_avg_pool3d": [120, 140, 208], "adaptiveavgpool1d": [187, 215], "adaptiveavgpool2d": [21, 65, 80, 87, 187, 215], "adaptiveavgpool3d": [187, 215], "add": [4, 92, 94, 95, 98, 121, 123, 177, 178, 179, 188, 190, 204, 217, 219, 222, 227, 229, 232, 264, 296, 303], "add_modul": [92, 98], "add_param_group": 217, "addit": [4, 8, 15, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 88, 92, 95, 98, 121, 123, 130, 132, 188, 190, 198, 199, 200, 201, 202, 203, 219, 225, 232, 242, 244, 301], "addition": 225, "address": [193, 196, 222, 223, 226], "adjust": [33, 40, 42, 43, 71, 72, 73, 74, 75, 79, 134, 135, 136, 154, 181, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 218, 222, 226, 227, 228, 293, 304], "advanc": [3, 17, 41, 52, 89, 95, 98, 109, 110, 111, 134, 135, 136, 206, 207, 208, 216, 219], "advantag": [34, 233], "affect": [231, 297, 300, 305], "affin": [147, 148, 149, 198, 199, 200, 201, 202, 203, 204, 312], "after": [15, 21, 45, 46, 87, 93, 94, 95, 96, 97, 98, 118, 153, 154, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 178, 179, 181, 182, 183, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 204, 209, 210, 211, 212, 213, 214, 223, 233, 243, 244, 245, 249, 250, 251, 253, 254, 296, 306], "afterward": 233, "aggreg": [89, 154, 252, 298, 302], "aim": [4, 8], "al": [29, 89], "alex": 89, "alexnet": [35, 87, 89], "algebra": [8, 9, 259], "algorithm": [5, 8, 15, 17, 18, 217, 218, 242], "align": [19, 145, 247, 248], "align_corn": 145, "all": [0, 3, 4, 8, 18, 89, 92, 94, 95, 96, 97, 98, 110, 111, 134, 135, 136, 138, 139, 142, 143, 145, 148, 149, 154, 168, 169, 179, 206, 207, 208, 210, 211, 214, 216, 217, 218, 219, 222, 227, 228, 229, 253, 275, 276, 277, 284, 287, 289, 291, 292, 293, 298, 300, 301, 302, 304, 307, 308, 316], "allevi": [89, 100], "alloc": [257, 258], "allow": [0, 1, 3, 4, 8, 17, 18, 34, 36, 45, 46, 47, 58, 71, 72, 73, 74, 75, 79, 89, 93, 94, 95, 96, 97, 98, 100, 103, 104, 107, 111, 113, 146, 154, 164, 165, 168, 171, 172, 173, 175, 177, 178, 179, 216, 220, 221, 232, 255, 260, 262, 263, 288, 290, 295, 305, 306, 316], "along": [107, 145, 154, 173, 247, 248, 252, 275, 276, 277, 284, 287, 289, 291, 293, 295, 298, 301, 302, 303, 304, 311, 313], "alongsid": 91, "alpha": [100, 103, 105, 114, 164, 171, 181, 219, 227], "alpha_dropout": [119, 120, 181], "alphadropout": [186, 187], "alphadropoutmodel": 181, "alreadi": 234, "also": [90, 100, 101, 103, 104, 105, 106, 108, 121, 123, 145, 225, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 258, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 285, 286, 291, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304], "alter": [98, 299], "altern": [1, 165, 220, 248], "alwai": [93, 297, 310, 311, 313], "among": [30, 154], "amount": [109, 110, 111, 137, 138, 139, 141, 142, 143, 150, 151, 152, 225], "amsgrad": [222, 223], "an": [0, 1, 3, 8, 12, 14, 15, 17, 18, 20, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 86, 87, 88, 89, 90, 92, 94, 95, 96, 97, 98, 101, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 135, 136, 145, 146, 150, 151, 152, 154, 162, 163, 164, 170, 172, 177, 178, 179, 181, 182, 183, 184, 185, 188, 190, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 218, 219, 222, 225, 227, 233, 234, 235, 243, 248, 256, 259, 269, 276, 284, 289, 291, 298, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316], "analog": [298, 302], "analysi": [4, 153, 177, 178, 179, 203, 209, 211, 212, 214], "andreetto": 89, "andrew": 89, "angl": [146, 312], "ani": [0, 1, 2, 3, 15, 17, 22, 47, 75, 86, 88, 91, 92, 93, 94, 96, 97, 100, 101, 103, 104, 105, 106, 108, 114, 115, 121, 123, 130, 132, 172, 204, 216, 217, 231, 233, 234, 240, 243, 255, 256, 257, 259, 260, 261, 262, 263, 275, 277, 288, 290, 291, 292, 293, 296, 298, 301, 302, 303, 304, 305, 316], "anoth": [97, 254, 261, 263, 306, 316], "api": [4, 206, 207, 208, 316], "appear": 217, "append": [95, 97, 98], "appli": [2, 4, 5, 6, 8, 15, 21, 58, 75, 85, 87, 89, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 111, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 128, 129, 147, 148, 149, 153, 154, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 181, 182, 183, 184, 185, 188, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 219, 220, 221, 223, 224, 225, 226, 248, 296, 298, 305, 308, 310, 311, 312, 313, 314, 316], "applic": [4, 17, 23, 33, 34, 40, 41, 42, 44, 45, 46, 89, 109, 132, 177, 178, 179, 188, 190, 242, 255, 262, 296, 314], "approach": [3, 32, 98, 223], "appropri": [17, 42, 45, 46, 89, 92, 96, 98, 177, 178, 179, 181, 182, 183, 193, 210, 211, 231, 233], "approx": 105, "approxim": [17, 101, 165, 166, 167, 210, 213], "ar": [1, 2, 3, 4, 8, 11, 12, 14, 15, 17, 18, 19, 20, 28, 29, 30, 89, 91, 92, 93, 94, 95, 96, 97, 98, 107, 109, 110, 111, 113, 121, 123, 135, 136, 145, 150, 151, 152, 153, 154, 158, 159, 161, 162, 163, 166, 173, 177, 178, 179, 181, 182, 183, 184, 185, 188, 190, 193, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 219, 222, 223, 225, 226, 227, 228, 229, 231, 233, 234, 235, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 265, 269, 273, 275, 276, 277, 278, 279, 284, 287, 288, 291, 295, 298, 299, 302, 305, 306, 307, 309, 310, 314, 316], "arang": 264, "arbitrari": [95, 189, 257, 258, 269, 274, 276, 280, 282, 284, 288, 289], "arcco": 264, "arch": 234, "architectur": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 40, 41, 42, 44, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 65, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 94, 95, 96, 97, 98, 101, 153, 166, 167, 169, 174, 188, 189, 216, 234], "arcsin": 264, "arctan": 264, "area": 145, "arg": [92, 189, 234, 257], "argument": [3, 4, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 88, 92, 98, 189, 237, 257, 288], "around": [12, 146, 175], "arr": [235, 291, 293, 301, 304], "arrai": [8, 91, 93, 232, 235, 243, 248, 256, 261, 263, 290, 297, 298, 306, 316], "art": 89, "artifici": 89, "arxiv": 89, "asarrai": 235, "asgd": 230, "aspect": 314, "assign": [92, 94, 96, 98, 145, 193, 196], "assist": [28, 29, 30], "associ": [96, 97], "assum": [0, 1, 217, 218, 231], "attempt": [94, 98], "attent": [75, 97, 121, 153], "attribut": 92, "audio": 177, "augment": [3, 4, 68, 146, 242, 298, 302, 305, 309, 310, 311, 312, 313, 316], "autodiff": 8, "autograd": 216, "automat": [4, 8, 93, 94, 95, 96, 97, 216, 237, 238, 239, 241, 243, 257, 258, 263, 295, 306], "auxiliari": [28, 29, 30, 91], "avail": [4, 5, 6, 8], "averag": [21, 37, 38, 39, 47, 58, 65, 75, 80, 87, 91, 134, 135, 136, 137, 138, 139, 145, 153, 154, 195, 206, 207, 208, 209, 210, 211, 219, 220, 222, 227, 276], "avg_down": 47, "avg_pool": [209, 210, 211], "avg_pool1d": [120, 140], "avg_pool2d": [120, 140], "avg_pool3d": [120, 140], "avgpool": [21, 65, 80, 87, 154], "avgpool1d": [187, 215], "avgpool1dmodel": 209, "avgpool2d": [187, 215], "avgpool2dmodel": 210, "avgpool3d": [187, 215], "avgpool3dmodel": 211, "avoid": [2, 3, 17, 96, 233], "ax": [9, 232, 275, 276, 277, 284, 288, 289, 298, 300, 302], "axi": [107, 173, 247, 248, 275, 276, 277, 284, 289, 291, 293, 295, 296, 298, 300, 301, 302, 303, 304, 311, 313], "b": [9, 19, 89, 121, 123, 161, 177, 178, 179, 188, 190, 232, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 291, 293, 301, 304, 310], "b_i": [249, 250, 253], "back": [145, 210, 211, 234, 247, 252, 298, 302], "backbon": [76, 77, 78], "backpropag": [8, 11, 12, 14, 15, 17, 18, 20, 89, 91, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 121, 123, 145, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211, 212, 213, 214, 216, 233, 239, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 273, 275, 277, 290, 296, 298, 302, 306], "backward": [8, 91, 93, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 243, 306], "balanc": [42, 59, 60, 61, 62, 63, 64, 194], "bar": 219, "base": [3, 9, 14, 15, 18, 19, 23, 28, 29, 30, 31, 32, 33, 34, 36, 58, 59, 60, 61, 62, 63, 64, 75, 80, 85, 89, 92, 94, 95, 96, 97, 113, 121, 134, 135, 136, 154, 181, 193, 194, 206, 207, 208, 216, 217, 218, 219, 223, 227, 228, 229, 244, 245, 249, 250, 251, 253, 254, 263, 273, 274, 275, 277, 288, 295, 296, 309, 310, 311, 312, 313], "base_width": [56, 57, 58, 75], "basic": [8, 21, 47, 59, 60, 61, 62, 63, 64, 76, 77, 78, 85, 87, 90, 109, 110, 111, 134, 135, 136, 147, 148, 149, 150, 151, 152, 153, 158, 159, 162, 163, 206, 207, 208, 307, 308, 309, 310, 311, 312, 313, 314], "basicblock": [47, 51, 54], "batch": [1, 2, 3, 9, 15, 18, 20, 29, 30, 31, 33, 34, 65, 71, 72, 73, 74, 79, 109, 110, 111, 113, 116, 117, 118, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 177, 178, 179, 188, 190, 192, 193, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 214, 226, 248, 307, 308, 309, 310, 312, 314], "batch_norm": [120, 131, 198, 199, 200], "batch_norm1": 98, "batch_norm2": 98, "batch_siz": [1, 2, 3, 85, 154], "batchnorm": [147, 148, 149], "batchnorm1d": [147, 187, 205], "batchnorm1dmodel": 198, "batchnorm2d": [98, 148, 187, 205], "batchnorm2dmodel": 199, "batchnorm3d": [149, 187, 205], "batchnorm3dmodel": 200, "bceloss": [187, 197], "becaus": [2, 238], "becom": [16, 92, 220, 228], "been": 174, "befor": [15, 65, 90, 93, 219, 225, 233, 240, 296, 308, 316], "begin": [1, 16, 100, 103, 104, 105, 164, 166, 167, 168, 169, 171, 194, 195, 196, 209, 210, 211, 212, 213, 214, 226, 228, 232, 242, 249, 250, 252, 265, 269, 275, 277, 279, 296], "behav": [194, 287], "behavior": [89, 95, 98, 231, 242, 248, 258, 316], "being": [97, 146, 181, 182, 183, 184, 185, 226, 231, 233, 291, 293, 304], "belong": 0, "below": [18, 29, 30, 31, 33, 34, 36, 37, 38, 39, 248, 256, 259], "benchmark": [5, 6], "benefici": 98, "benefit": [100, 216, 225, 235], "bernoulli": [181, 182, 183, 184, 185], "best": [158, 159, 162, 163], "beta": [198, 199, 200, 201, 202, 203, 204, 222, 223, 224, 225, 226], "beta1": [222, 223, 224, 225, 226], "beta2": [222, 223, 224, 225, 226], "beta_1": [222, 223, 224, 225, 226], "beta_2": [222, 223, 224, 225, 226], "better": [14, 87, 89, 101, 158, 159, 162, 163, 174, 201, 202, 203, 216, 223, 225, 227, 308], "between": [59, 60, 61, 62, 63, 64, 89, 92, 109, 110, 111, 113, 121, 126, 147, 148, 149, 150, 151, 152, 154, 170, 177, 178, 179, 181, 182, 183, 184, 185, 188, 192, 193, 194, 195, 196, 219, 227, 228, 229, 242, 244, 245, 248, 251, 254, 255, 289, 310, 311, 313, 314], "beyond": [8, 95], "bia": [109, 110, 111, 121, 123, 130, 132, 133, 147, 148, 149, 150, 151, 152, 177, 178, 179, 188, 190, 198, 199, 200, 201, 202, 203, 204, 222, 223, 224, 225, 226], "bias": [177, 178, 179, 190, 204, 216], "bias1": 96, "bias2": 96, "big": [150, 151, 152], "bilinear": [120, 122, 145, 187, 191], "bilinearmodel": 188, "binari": [106, 124, 172, 181, 182, 183, 184, 185, 192], "binary_cross_entropi": [120, 127], "block": [23, 24, 25, 26, 27, 32, 41, 42, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 89, 92, 113, 147, 148, 149, 154, 177, 178, 179, 233], "block1": [90, 216], "block2": [90, 216], "block_arg": [47, 65], "block_config": 23, "blue": 310, "bmatrix": 252, "bn": [147, 148, 149], "bn_affin": [147, 148, 149], "bool": [1, 5, 6, 20, 28, 29, 30, 47, 90, 92, 93, 114, 115, 116, 117, 118, 130, 132, 145, 147, 148, 149, 150, 151, 152, 177, 178, 179, 188, 190, 198, 199, 200, 201, 202, 203, 204, 222, 223, 227, 231, 237, 238, 239, 241, 243, 255, 256, 257, 258, 259, 260, 261, 262, 263, 275, 276, 277, 284, 289, 290, 306], "both": [109, 123, 135, 137, 141, 147, 165, 174, 177, 178, 207, 209, 210, 212, 213, 246, 247, 248, 252, 256, 295, 314], "bottleneck": [23, 41, 42, 44, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 89, 153], "bottleneck_cfg": 42, "bottom": 145, "bound": [159, 161, 163, 228, 241], "box": 4, "branch": [28, 29, 30, 89, 154], "break": 216, "brief": 316, "bright": 316, "broadcast": [184, 185, 276, 284, 289, 299, 303], "buffer": [219, 225, 227, 229], "build": [8, 34, 42, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 75, 76, 77, 78, 89, 92, 95, 98, 216, 316], "built": [3, 8, 48, 52, 53, 98, 216], "burg": 6, "c": [6, 47, 59, 60, 61, 62, 63, 64, 76, 77, 78, 89, 113, 116, 117, 118, 125, 129, 130, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 153, 184, 185, 193, 196, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 232, 293, 304, 308], "c_": [177, 178, 179], "c_in": [109, 110, 111, 147, 148, 149], "c_out": [109, 110, 111], "calcul": [0, 1, 8, 9, 93, 220, 221, 224, 225, 226, 233, 238, 243], "calculu": [10, 17], "call": [1, 92, 231, 234, 244, 245, 248, 249, 250, 251, 253, 254], "callabl": [217, 234, 305], "can": [0, 2, 3, 4, 8, 10, 12, 14, 15, 17, 18, 20, 42, 47, 56, 57, 71, 72, 73, 74, 85, 86, 89, 90, 91, 93, 94, 95, 96, 97, 98, 103, 109, 110, 111, 146, 154, 165, 168, 170, 175, 177, 178, 179, 201, 202, 203, 210, 211, 212, 213, 214, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 232, 233, 235, 241, 242, 243, 248, 257, 258, 259, 260, 262, 263, 276, 284, 289, 293, 295, 296, 298, 299, 302, 303, 304, 305, 306, 309, 311, 312, 313, 316], "cannot": [11, 12, 14, 15, 18, 19, 20], "cap": 170, "capabl": [8, 255, 256, 259, 260, 261, 262, 263], "capac": [40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 71, 72, 73, 74, 79, 89], "captur": [75, 89, 113, 177, 178, 179, 188], "cardin": [58, 59, 60, 61, 62, 63, 64, 75, 89], "care": 233, "cartesian": 295, "case": [3, 16, 36, 42, 43, 100, 103, 104, 105, 164, 166, 167, 168, 169, 171, 194, 195, 196, 209, 210, 211, 212, 213, 214, 216, 221, 226, 228, 232, 249, 250, 265, 269, 275, 277, 279, 296, 316], "categori": [5, 48, 49, 50, 51, 52, 53, 54, 55], "caus": [3, 17, 219, 227, 229], "cautiou": 0, "cdot": [10, 11, 14, 15, 16, 19, 100, 101, 103, 105, 106, 109, 110, 111, 121, 123, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 153, 162, 163, 165, 166, 167, 172, 174, 181, 188, 190, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 220, 221, 222, 223, 224, 225, 226, 228, 246, 247, 248, 251, 253], "center": [146, 175, 227, 307, 316], "centercrop": [315, 316], "central": 235, "certain": [11, 101, 121, 174, 188, 222, 223, 231, 275, 277], "cfg": [45, 46], "chain": [14, 15, 98, 305, 316], "challeng": [5, 89], "cham": 89, "chanc": [310, 311, 313], "chang": [126, 194, 228, 232, 233, 234, 297, 299, 303, 310, 316], "channel": [23, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 69, 71, 72, 73, 74, 79, 80, 85, 89, 109, 110, 111, 113, 116, 117, 118, 130, 132, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 177, 178, 179, 184, 185, 198, 199, 200, 201, 202, 203, 206, 209, 210, 211, 212, 213, 214, 308, 310, 314], "character": [56, 57], "check": [231, 307, 309], "checkpoint": 218, "chen": 89, "choic": 295, "choleski": 13, "chollet": 89, "choos": 89, "chosen": 181, "christian": 89, "christoph": 6, "chu": 89, "clariti": 235, "class": [3, 4, 8, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 88, 90, 107, 125, 129, 216, 218, 234, 256, 259, 290, 316], "classic": 39, "classif": [4, 5, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 106, 107, 124, 125, 129, 172, 173, 192, 193, 196], "classifi": [21, 28, 29, 30, 36, 37, 38, 39, 47, 58, 75, 80, 85, 87], "cleaner": [1, 233, 248], "clear": [93, 243, 257, 258], "clearli": 235, "clf_in_featur": 36, "clf_layer": 36, "clip": [146, 166, 170, 228, 264], "clockwis": 146, "close": [14, 17, 171, 192, 227], "closer": 164, "closur": [217, 218], "cloth": 5, "cnn": 89, "co": [264, 280], "code": [15, 94, 96, 98, 231, 233, 235, 242], "coeffici": [19, 145, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229], "col": 113, "collect": [4, 9, 89, 94, 95, 97, 98, 218], "color": [310, 316], "colorjitt": 316, "column": [11, 12, 14, 18, 19, 20, 90, 113, 259, 293, 295], "com": [5, 6], "combin": [1, 3, 31, 32, 33, 79, 89, 95, 98, 100, 101, 147, 148, 149, 153, 154, 165, 193, 216, 225, 226, 276, 284, 289, 291, 316], "combined_dataset": [0, 1], "common": [113, 146, 218, 316], "commonli": [8, 40, 41, 42, 43, 44, 45, 46, 101, 106, 107, 108, 109, 111, 121, 128, 130, 132, 146, 153, 162, 163, 166, 167, 170, 173, 179, 192, 195, 196, 209, 210, 211, 212, 213, 214, 232, 235, 260, 300, 306, 307, 308, 309, 311, 312, 313, 316], "compar": [56, 57, 87, 242, 301], "compat": [4, 9, 75, 189, 204, 216, 232, 242, 306, 316], "complex": [2, 3, 8, 12, 34, 47, 50, 53, 54, 67, 69, 90, 94, 95, 98, 104, 169, 212, 214, 216, 218, 316], "compon": [17, 28, 29, 30, 31, 32, 33, 34, 92, 95, 218, 243, 316], "compos": [5, 6, 85, 177, 178, 179, 209, 210, 211, 212, 213, 214, 216, 316], "comprehens": 3, "compris": [56, 57], "comput": [8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 40, 42, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 65, 71, 72, 73, 74, 79, 89, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 113, 121, 123, 124, 125, 126, 128, 129, 130, 132, 134, 135, 136, 145, 147, 148, 149, 150, 151, 152, 153, 154, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 227, 231, 232, 233, 235, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 262, 263, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 295, 296, 298, 302, 306, 316], "computation": [3, 17, 48, 166, 167], "compute_loss": [218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "concaten": [0, 109, 110, 111, 293, 294, 301, 304], "concept": [8, 17, 41, 89], "condit": [10, 11, 14], "confer": 89, "config": 80, "configur": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 86, 88, 97, 147, 148, 149], "conjunct": [113, 196], "connect": [21, 23, 24, 25, 26, 27, 31, 32, 33, 34, 36, 37, 38, 39, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 75, 76, 77, 78, 80, 85, 87, 89, 123, 153, 154, 177, 178, 179, 190], "consecut": 80, "consid": [3, 14, 17, 23, 98, 158, 159, 162, 163, 216, 228, 231, 257, 258, 316], "consider": 17, "consist": [2, 4, 5, 21, 37, 38, 39, 47, 91, 134, 135, 136, 154, 206, 207, 208, 235, 240, 242, 296, 307, 314, 316], "consistent_tensor": 242, "consol": 90, "constant": [124, 125, 130, 132, 133, 157, 171, 192, 193, 198, 199, 200, 201, 202, 203, 204, 220, 221, 222, 223, 224, 225, 226, 227, 235, 296], "constant_pad": 296, "constraint": [1, 40, 42, 154], "construct": [8, 24, 25, 26, 27, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 76, 77, 78, 81, 82, 83, 84, 95, 216, 256, 298, 302], "constructor": [24, 25, 26, 27, 43, 44, 45, 46, 56, 57, 71, 72, 73, 74, 79, 81, 82, 83, 84], "contain": [1, 5, 6, 11, 12, 17, 18, 19, 20, 32, 36, 47, 58, 59, 60, 61, 62, 63, 64, 65, 75, 80, 90, 92, 94, 95, 96, 97, 98, 107, 113, 121, 123, 124, 125, 129, 145, 192, 193, 196, 217, 244, 245, 246, 247, 249, 250, 251, 252, 254, 255, 258, 265, 266, 267, 268, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 292, 295], "content": 146, "context": [231, 233], "contextmanag": 233, "contigu": 297, "continu": [168, 239], "contrast": [201, 202, 203, 316], "contribut": [145, 181, 182, 183, 184, 185, 209, 212, 213, 214, 219, 225, 287], "control": [58, 154, 164, 194, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 242, 306, 316], "conv": [32, 65, 147, 148, 149, 199, 200], "conv1": [37, 38, 39, 98, 177, 178, 179, 209, 210, 211, 212, 213, 214], "conv1d": [112, 120, 147, 150, 180, 187, 209, 212], "conv1dmodel": 177, "conv2": [37, 38, 39, 98, 177, 178, 179], "conv2d": [95, 98, 112, 120, 148, 151, 180, 187, 199, 210, 213, 216], "conv2dmodel": 178, "conv3d": [112, 120, 149, 152, 180, 187, 200, 211, 214], "conv3dmodel": 179, "conv_bia": [147, 148, 149], "conv_config": 80, "conv_lay": [36, 95], "convblock": 216, "convbnrelu1d": 155, "convbnrelu2d": 155, "convbnrelu3d": 155, "conveni": [4, 22, 88], "convent": 248, "converg": [17, 175, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 308], "convers": [193, 196, 310, 316], "convert": [5, 6, 80, 91, 93, 107, 173, 243, 295, 305, 306, 310, 316], "convnetwork": 95, "convolut": [21, 22, 23, 29, 30, 32, 36, 37, 38, 39, 40, 42, 45, 46, 47, 58, 59, 60, 61, 62, 63, 64, 65, 71, 72, 73, 74, 75, 79, 80, 85, 87, 88, 89, 95, 109, 110, 111, 113, 147, 148, 149, 150, 151, 152, 153, 154, 177, 178, 179, 210, 211, 213, 214, 296], "convolv": [109, 110, 111, 177, 178, 179], "coordin": 295, "core": [0, 1, 2, 3, 92, 216, 217, 243, 316], "corinna": 6, "corner": [145, 307, 309], "correct": [94, 193, 196, 222, 223, 224, 225, 226, 306], "correctli": [17, 92, 94, 95, 96, 97, 98, 193, 196, 242], "correspond": [0, 1, 2, 5, 6, 12, 43, 45, 46, 56, 57, 76, 77, 78, 94, 96, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 121, 123, 145, 166, 169, 173, 188, 190, 198, 199, 200, 201, 202, 203, 210, 211, 219, 227, 229, 246, 247, 249, 250, 253, 273, 274, 280, 282, 293, 296, 298, 302, 304], "cort": 6, "cosh": [264, 281, 286], "cosin": [266, 270, 271, 280], "cost": [40, 42, 58, 89, 150, 151, 152], "could": 92, "count": [89, 90, 291], "counterclockwis": [146, 312], "cover": [9, 109, 110, 111], "coverag": [134, 135, 136], "creat": [2, 3, 8, 21, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 91, 92, 95, 98, 154, 170, 216, 232, 234, 242, 255, 259, 260, 261, 262, 263, 295, 301, 305, 316], "creation": [95, 98, 316], "criterion": [192, 193, 194, 195, 196], "critic": [17, 218, 242], "crop": [307, 309, 316], "cross": [124, 125, 192, 193], "cross_entropi": [120, 127], "crossentropyloss": [187, 197], "cube": 264, "cumul": [101, 165], "current": [92, 219, 222, 228, 231], "custom": [4, 8, 21, 22, 23, 33, 34, 36, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 66, 67, 68, 69, 70, 71, 72, 73, 74, 79, 80, 86, 87, 88, 91, 94, 95, 96, 97, 98, 146, 147, 148, 149, 164, 168, 216, 242, 259], "custom_config": 80, "custom_lenet": 36, "customiz": 316, "custommodul": 91, "customnetwork": 94, "customparametermodel": [96, 97], "cvpr": 89, "d": [89, 111, 118, 136, 139, 143, 149, 200, 203, 204, 208, 211, 214, 232, 256, 312], "d_": [111, 136, 139, 143, 179, 208, 211, 214], "d_1": 204, "d_2": 204, "d_n": 204, "d_out": [111, 139, 143], "dampen": [219, 227, 229], "data": [4, 5, 6, 8, 15, 91, 93, 97, 108, 109, 111, 113, 117, 118, 123, 146, 147, 148, 149, 154, 169, 175, 177, 178, 179, 190, 203, 209, 211, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 235, 242, 243, 244, 245, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 290, 296, 297, 298, 299, 300, 302, 305, 306, 309, 310, 311, 312, 313, 316], "databas": 6, "dataload": [2, 3], "dataset": [3, 5, 6, 37, 38, 39, 40, 47, 48, 49, 50, 51, 52, 53, 54, 55, 146, 221, 233, 305, 307, 316], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 252, "debug": [90, 98, 231, 240, 316], "decai": [219, 220, 221, 222, 223, 224, 225, 226, 227, 229], "decompos": [10, 18, 20], "decomposit": [9, 10, 14, 17, 18, 20], "decor": [59, 60, 61, 62, 63, 64, 234], "decoupl": [89, 220, 221, 223, 224, 225, 226], "decreas": [222, 223, 228], "deep": [1, 3, 4, 8, 32, 47, 48, 49, 50, 52, 53, 59, 60, 61, 62, 63, 64, 66, 67, 70, 89, 130, 165, 171, 216, 242, 305, 306, 316], "deeper": [8, 29, 31, 34, 47, 54, 89, 171], "def": [0, 1, 2, 3, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 188, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306], "default": [1, 5, 6, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 100, 103, 107, 109, 110, 111, 114, 115, 116, 117, 118, 124, 125, 126, 128, 129, 130, 132, 133, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 158, 159, 160, 161, 162, 163, 164, 168, 173, 177, 178, 179, 181, 182, 183, 184, 185, 188, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211, 212, 213, 214, 217, 218, 225, 231, 237, 238, 239, 241, 243, 255, 256, 257, 258, 259, 260, 261, 262, 263, 275, 276, 277, 284, 288, 289, 290, 291, 293, 295, 296, 298, 301, 304, 306, 310, 311, 313], "defin": [1, 3, 4, 8, 23, 28, 29, 30, 31, 32, 33, 34, 36, 42, 47, 65, 76, 77, 78, 80, 94, 95, 96, 97, 98, 165, 167, 170, 174, 192, 193, 194, 195, 196, 209, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 235, 238, 239, 253, 258, 269, 288, 305, 316], "definit": [8, 10, 147, 148, 149, 316], "degre": [146, 312, 316], "delai": 219, "delta": [107, 126, 173, 194, 220], "delta_": [107, 173], "demonstr": [8, 9, 71, 72, 73, 74, 79, 89, 216, 235], "denomin": [130, 132, 133, 147, 148, 149, 198, 199, 200, 201, 202, 203, 204, 220, 221, 222, 223, 224, 225, 226, 227, 245], "denot": [15, 172, 177, 178, 179, 181, 182, 183, 184, 185, 288], "dens": [8, 23, 24, 25, 26, 27, 89, 221], "dense1": 8, "dense2": 8, "densenet": [24, 25, 26, 27, 35, 89, 153], "densenet_121": 89, "densenet_169": 89, "densenet_201": 89, "densenet_264": 89, "densiti": [101, 165], "depend": [8, 15, 16, 42, 97, 124, 125, 126, 128, 129, 145, 177, 246, 256, 275, 277, 298, 302, 309, 310, 314], "depth": [95, 111, 118, 136, 139, 143, 179, 200, 203, 208, 211, 214], "depthseparableconv1d": 155, "depthseparableconv2d": 155, "depthseparableconv3d": 155, "depthwis": [40, 85, 89, 109, 110, 111, 150, 151, 152], "depthwise_separ": [150, 151, 152], "der": 89, "deriv": [17, 18, 107, 134, 135, 136, 165, 173, 175, 177, 178, 179, 188, 190, 234], "descend": 20, "descent": [8, 219, 229], "describ": [11, 12], "descript": 316, "deseri": 91, "design": [3, 4, 8, 9, 21, 22, 29, 30, 31, 37, 38, 39, 42, 48, 49, 50, 51, 52, 53, 54, 55, 66, 69, 85, 88, 89, 93, 95, 96, 97, 98, 100, 105, 171, 181, 216, 235, 316], "desir": [86, 91, 134, 135, 136, 206, 207, 208, 288, 290], "destin": 92, "det": [9, 13], "det_a": 11, "detail": [8, 90, 218, 242, 248], "detect": 89, "determin": [0, 8, 9, 10, 11, 36, 56, 57, 134, 135, 136, 158, 159, 162, 163, 177, 178, 179, 206, 207, 208, 210, 211, 213, 214, 227, 231, 237, 238, 239, 241, 257, 258, 307, 309], "determinist": 146, "develop": [8, 216, 242, 316], "deviat": [158, 160, 162, 305, 308, 316], "devic": [41, 42], "diag": [17, 264], "diagon": [17, 18, 20, 256, 259, 287], "diagonaliz": 12, "dict": [22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 43, 44, 45, 46, 47, 56, 57, 59, 60, 61, 62, 63, 64, 65, 71, 72, 73, 74, 76, 77, 78, 79, 86, 88, 92, 94, 96, 189, 217], "dictionari": [36, 92, 93, 94, 96, 98, 217], "differ": [0, 15, 28, 36, 42, 71, 72, 73, 74, 79, 95, 98, 107, 121, 145, 154, 173, 188, 195, 218, 232, 240, 242, 254, 263, 289, 300, 316], "differenti": [8, 10, 19, 165, 216, 237, 238, 239, 241, 243, 255, 257, 258, 260, 262], "digit": [5, 6, 39, 89], "dilat": [109, 110, 111, 147, 148, 149, 150, 151, 152, 177, 178, 179], "dilation_height": 113, "dilation_width": 113, "dim": [193, 196], "dimens": [11, 12, 14, 15, 18, 19, 20, 21, 47, 58, 75, 80, 87, 89, 93, 107, 121, 123, 130, 132, 133, 135, 136, 145, 153, 154, 173, 177, 178, 179, 198, 199, 200, 201, 202, 203, 204, 207, 208, 210, 211, 212, 213, 214, 232, 235, 237, 241, 243, 247, 257, 275, 276, 277, 284, 287, 288, 289, 291, 293, 296, 298, 300, 301, 302, 303, 304, 307, 309, 314], "dimension": [15, 17, 18, 20, 109, 110, 111, 137, 138, 139, 141, 142, 143, 154, 177, 178, 179, 183, 184, 185, 198, 199, 200, 201, 202, 203, 209, 210, 211, 212, 213, 214, 232, 247, 248, 252, 256, 273, 276, 284, 287, 289, 292, 297, 298, 300, 302], "diminish": 221, "direct": [12, 192, 193, 194, 195, 196, 219, 227, 228, 229], "directli": [89, 94, 95, 96, 97, 145, 220, 221, 223, 224, 225, 226, 240, 242, 290, 316], "directori": [3, 4, 5, 6], "disabl": [231, 233], "discontinu": 279, "discrep": [192, 193, 196], "discret": [238, 242], "disk": 3, "displai": [22, 88, 90], "distribut": [101, 107, 145, 158, 159, 160, 161, 162, 163, 165, 173, 177, 178, 179, 181, 182, 183, 184, 185, 188, 190, 193, 196, 209, 210, 211, 237, 238, 239, 241, 242, 276, 284, 287, 289, 301, 308, 310, 311, 312, 313], "div": 264, "divers": [146, 311, 313, 316], "diversifi": 316, "divid": [1, 17, 95, 98, 107, 109, 110, 111, 173, 192, 193, 194, 195, 196, 245, 308], "divis": [8, 17, 109, 110, 111, 181, 182, 183, 184, 185, 220, 221, 222, 223, 224, 225, 226, 227, 245], "do": [17, 19, 91, 94, 95, 96, 97, 114, 115, 116, 117, 216, 226, 231, 263, 287, 296], "document": [4, 8, 89, 218, 235, 242], "doe": [8, 15, 16, 17, 18, 20, 90, 91, 94, 95, 96, 97, 98, 163, 222, 223, 228, 231, 233, 237, 238, 239, 240, 241, 255, 256, 257, 258, 259, 260, 261, 262, 263, 299], "doesn": 233, "doi": 89, "domain": 4, "don": 233, "dot": [12, 15, 94, 95, 96, 97, 98, 204, 212, 213, 214, 247, 252, 264, 291, 293, 301, 304], "down": [3, 216, 314], "download": [4, 5, 6], "drawback": 100, "drawn": [237, 238, 239, 241, 242, 312], "drop": [181, 182, 183, 184, 185], "dropout": [21, 30, 80, 87, 89, 101, 114, 116, 117, 118, 181, 183, 184, 185], "dropout1d": [119, 120, 186, 187], "dropout1dmodel": 183, "dropout2d": [119, 120, 186, 187], "dropout3d": [119, 120, 186, 187], "dropout_prob": 30, "dropoutmodel": 182, "dtype": [91, 93, 243, 255, 256, 257, 258, 259, 260, 261, 262, 263, 290, 306], "due": [15, 17, 23, 109, 110, 169, 312], "dummi": 90, "duplic": [94, 96], "dure": [3, 8, 11, 12, 14, 17, 18, 20, 28, 29, 30, 47, 89, 91, 92, 93, 94, 95, 96, 97, 98, 107, 114, 115, 116, 117, 118, 130, 132, 146, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211, 212, 213, 214, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 233, 243, 244, 275, 276, 277, 284, 289, 306, 309, 312, 316], "dy": [103, 168], "dynam": [0, 2, 3, 75, 79, 89, 92, 95, 96, 97, 98, 134, 135, 136, 154, 204, 206, 207, 208, 221, 226, 231], "dynamicnetwork": 95, "e": [0, 11, 12, 14, 15, 18, 20, 29, 30, 31, 33, 34, 36, 37, 38, 39, 80, 91, 107, 154, 172, 173, 174, 181, 193, 217, 220, 227, 228, 259, 271, 273, 274, 281, 286, 287, 291, 310], "each": [1, 2, 3, 4, 12, 15, 17, 18, 20, 21, 23, 36, 40, 42, 43, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 75, 76, 77, 78, 80, 87, 89, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 121, 123, 130, 132, 134, 135, 136, 153, 154, 166, 169, 173, 177, 178, 179, 181, 182, 183, 184, 185, 188, 190, 192, 193, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 220, 221, 222, 223, 224, 225, 226, 227, 228, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 293, 295, 296, 298, 301, 302, 304, 305, 306, 307, 308, 309, 310, 312, 314, 316], "earli": 226, "eas": [4, 8], "easi": [2, 3, 4, 8, 59, 60, 61, 62, 63, 64, 93, 94, 96], "easier": [3, 94, 95, 98], "easili": [4, 93, 97, 316], "eccv": 89, "economi": 20, "edg": [42, 296], "educ": [8, 89], "effect": [89, 94, 95, 96, 97, 98, 107, 109, 110, 111, 113, 164, 165, 169, 172, 173, 175, 198, 199, 200, 201, 202, 203, 204, 231, 232, 233, 293, 304], "effici": [1, 2, 3, 5, 6, 8, 9, 14, 19, 33, 34, 41, 42, 44, 45, 46, 58, 59, 60, 61, 62, 63, 64, 71, 72, 73, 74, 79, 85, 89, 113, 150, 151, 152, 166, 167, 170, 193, 216, 233], "eig": 13, "eigenvalu": [12, 18], "eigenvector": 12, "eigval": 12, "eigvec": 12, "either": [123, 235, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 290, 295], "element": [0, 17, 18, 30, 93, 97, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 147, 148, 149, 150, 151, 152, 153, 166, 167, 169, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 192, 193, 194, 195, 196, 204, 209, 210, 211, 212, 213, 214, 232, 243, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 292, 295, 296, 298, 299, 300, 302], "elementwise_affin": 204, "elsewher": [212, 213, 214, 259], "elu": [102, 120, 176, 187], "elumodel": 164, "embed": [40, 41, 42, 44, 45, 46], "empti": [92, 98, 264], "empty_lik": 264, "enabl": [0, 1, 2, 3, 8, 15, 20, 33, 75, 76, 77, 78, 89, 92, 93, 94, 95, 96, 97, 169, 177, 178, 179, 188, 190, 216, 218, 231, 233, 237, 238, 239, 241, 243, 305], "encapsul": [216, 243], "encod": [193, 196], "encourag": [182, 183, 184, 185, 192, 193, 196, 222], "end": [16, 100, 103, 104, 105, 164, 166, 167, 168, 169, 171, 194, 195, 196, 209, 210, 211, 212, 213, 214, 226, 228, 249, 250, 252, 255, 265, 269, 275, 277, 279, 291, 296, 316], "enforc": [92, 94, 96], "engin": 17, "enhanc": [30, 31, 33, 34, 38, 41, 56, 57, 71, 72, 73, 74, 79, 87, 88, 89, 94, 96, 154, 170, 316], "ensur": [3, 5, 6, 17, 18, 19, 91, 92, 93, 94, 95, 96, 97, 98, 107, 134, 135, 136, 147, 148, 149, 168, 173, 181, 182, 183, 184, 185, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 214, 216, 217, 219, 220, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 253, 276, 284, 289, 296, 306, 307, 308, 309, 310, 314, 316], "enter": 233, "entir": [3, 116, 117, 118, 184, 185, 242], "entri": [36, 45, 46, 300], "entropi": [124, 125, 192, 193], "environ": [8, 45, 46], "ep": [124, 125, 130, 132, 133, 147, 148, 149, 192, 193, 198, 199, 200, 201, 202, 203, 204, 220, 221, 222, 223, 224, 225, 226, 227], "epoch": [1, 3], "epsilon": [192, 193, 198, 199, 200, 201, 202, 203, 204, 220, 221, 222, 223, 224, 225, 226, 227], "equal": [15, 145, 209, 210, 211, 307, 309], "equat": [12, 17, 19], "equival": [248, 287, 297], "error": [0, 3, 12, 14, 92, 95, 96, 97, 98, 101, 126, 128, 165, 192, 193, 194, 195, 216, 217, 233, 235], "especi": [3, 94, 96, 97, 172, 232, 233, 235, 240, 305, 306, 310, 316], "essenti": [1, 3, 8, 9, 15, 17, 32, 110, 113, 216, 240, 242, 275, 305, 306, 310, 316], "estim": [195, 222, 223, 224, 225, 226, 227], "et": [29, 89], "eta": 228, "eta_": 228, "etc": [23, 192, 306], "euclidean": 16, "european": 89, "evalu": [92, 130, 132, 181, 182, 183, 184, 185, 198, 199, 200, 201, 202, 203, 316], "even": [220, 233, 255, 256, 259, 260, 261, 262, 263], "evenli": [134, 135, 136, 206, 207, 208, 255], "everi": [1, 316], "everywher": 279, "exact": [92, 95, 288, 310, 312], "exactli": 98, "exampl": [4, 248], "excel": 31, "except": [0, 279, 291, 293, 304], "excit": [42, 45, 46, 65, 68, 71, 72, 73, 74, 89, 153], "exclus": [238, 241, 255], "exdb": 6, "execut": [95, 233], "exist": [19, 94, 96, 98, 234, 291], "exit": 233, "exp": [100, 105, 106, 108, 164, 171, 264], "expand": [4, 113, 298, 302], "expans": [45, 46], "expansion_factor": 42, "expect": [10, 95, 98, 181, 182, 183, 184, 185, 204, 216, 235], "expens": 3, "experi": [8, 240, 242, 316], "experiment": 242, "explan": [15, 17, 21, 80, 87, 134, 135, 136, 206, 207, 208, 219], "explicit": 98, "explicitli": [89, 94, 96], "explod": [171, 198, 199, 200], "explor": [216, 242], "expon": [15, 253], "exponenti": [100, 105, 107, 164, 171, 173, 181, 222, 223, 224, 225, 226, 273], "extend": [4, 58, 75], "extens": [89, 218], "extern": [4, 8], "extract": [28, 32, 47, 58, 75, 85, 89, 113, 179, 209, 211, 234, 256, 275, 277, 307, 309], "extractor": [36, 37, 38, 39, 85], "extrem": [17, 48, 89], "ey": 264, "f": [1, 4, 5, 6, 8, 89, 96, 97, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 170, 173], "f_1": 153, "f_2": 153, "facilit": [28, 94, 98, 107, 173, 177, 178, 179, 216, 218, 308, 316], "factor": [30, 100, 109, 110, 111, 113, 153, 162, 163, 219, 226, 227, 228, 229, 235], "factori": 86, "failur": [94, 95, 96, 97, 216], "fals": [1, 5, 6, 20, 45, 46, 47, 90, 91, 92, 93, 114, 115, 116, 117, 118, 130, 132, 145, 156, 158, 159, 160, 161, 162, 163, 177, 178, 179, 188, 190, 222, 223, 227, 231, 237, 238, 239, 241, 243, 255, 256, 257, 258, 259, 260, 261, 262, 263, 275, 276, 277, 284, 289, 290, 306], "famili": 234, "fan": [158, 159, 162, 163], "fan_in": [158, 159], "fan_out": [158, 159], "fashion": 5, "fashion_train": 5, "fashionmnist": 7, "fast": 226, "faster": [221, 225, 233], "fc": [32, 47, 58, 65, 75, 95, 153, 178, 179, 209, 210, 211, 212, 213, 214], "fc1": [38, 39, 90, 94, 98, 165, 166, 167, 169, 170, 171, 172, 174, 175, 190], "fc2": [38, 39, 90, 94, 98, 165, 166, 167, 169, 171, 172, 174, 175, 190], "fc3": 39, "featur": [3, 21, 23, 28, 31, 32, 36, 37, 38, 39, 47, 58, 59, 60, 61, 62, 63, 64, 66, 68, 69, 75, 76, 77, 78, 80, 85, 87, 88, 89, 121, 123, 130, 147, 148, 149, 153, 154, 179, 182, 183, 184, 185, 188, 190, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211, 212, 213, 214, 216, 221], "feature_extractor": 36, "fed": [3, 316], "feed": [3, 243, 316], "feedforward": 90, "fergu": [87, 89], "fetch": 0, "few": 90, "fewer": 1, "field": [6, 75, 79, 89, 154], "file": [3, 234], "fill": [156, 160, 161, 237, 238, 239, 241, 260, 261, 262, 263], "filter": [87, 89, 109, 110, 111, 113, 147, 148, 149, 178, 179], "filter_height": 113, "filter_s": 113, "filter_width": 113, "final": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 42, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 75, 76, 77, 78, 94, 95, 96, 97, 98, 154, 305, 316], "find": [19, 275, 277], "fine": [153, 316], "finish": 233, "first": [5, 6, 12, 36, 87, 90, 95, 96, 121, 153, 188, 222, 223, 224, 225, 226, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 295, 304, 305, 306, 316], "fit": 216, "fix": [95, 296], "flatten": [32, 36, 98, 113, 252, 294, 297, 298], "flexibl": [1, 3, 4, 8, 28, 32, 33, 34, 36, 43, 47, 71, 72, 73, 74, 79, 80, 85, 89, 94, 95, 96, 97, 98, 216, 218, 235, 260, 261, 306, 316], "flip": [311, 313, 316], "float": [2, 5, 6, 30, 40, 43, 91, 93, 100, 103, 114, 115, 116, 117, 118, 124, 125, 126, 130, 132, 133, 146, 147, 148, 149, 156, 160, 161, 162, 163, 164, 168, 181, 182, 183, 184, 185, 192, 193, 194, 198, 199, 200, 201, 202, 203, 204, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 235, 241, 243, 255, 258, 269, 290, 308, 310, 311, 312, 313], "float32": [91, 93, 243, 255, 256, 259, 260, 262, 290, 306], "float64": [263, 290, 306], "flow": [31, 32, 65, 89, 98, 163, 165, 172, 175, 177, 178, 179, 188, 190, 231], "fly": [2, 3], "fname": 3, "focu": 8, "focus": 8, "follow": [0, 8, 9, 12, 18, 19, 20, 21, 24, 25, 26, 27, 45, 46, 71, 72, 73, 74, 79, 80, 85, 87, 90, 100, 101, 103, 104, 105, 106, 107, 108, 121, 123, 145, 147, 148, 149, 150, 151, 152, 153, 154, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 234, 235, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 275, 277, 295, 299, 307, 308, 309, 310, 311, 312, 313, 316], "form": [18, 154, 252, 295, 298, 302, 316], "format": [2, 3, 5, 6, 90, 193, 196, 306], "formul": 101, "formula": [12, 20, 107, 134, 135, 136, 173, 174, 194, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 248, 289, 310], "forward": [8, 21, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 42, 43, 44, 45, 46, 59, 60, 61, 62, 63, 64, 71, 72, 73, 74, 76, 77, 78, 79, 80, 87, 90, 91, 92, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "found": 8, "foundat": [32, 65, 92, 216, 218, 243], "four": [24, 25, 26, 27, 296], "frac": [10, 11, 12, 14, 15, 16, 17, 19, 20, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 121, 123, 134, 135, 136, 137, 138, 139, 141, 142, 143, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211, 212, 213, 214, 220, 221, 222, 223, 224, 225, 226, 227, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 308], "frame": 118, "framework": [4, 8, 89, 193, 196, 198, 199, 200, 201, 202, 203, 217, 218, 316], "frequent": [193, 196], "from": [0, 1, 2, 3, 4, 5, 6, 8, 15, 17, 23, 24, 25, 26, 27, 32, 42, 43, 44, 45, 46, 47, 59, 60, 61, 62, 63, 64, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 90, 91, 92, 93, 94, 95, 96, 97, 98, 113, 121, 130, 132, 145, 147, 148, 149, 153, 154, 156, 158, 159, 160, 161, 162, 163, 170, 177, 178, 179, 181, 182, 183, 184, 185, 188, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 237, 238, 239, 241, 242, 243, 248, 249, 250, 254, 256, 275, 276, 277, 284, 289, 291, 293, 295, 298, 300, 301, 302, 304, 307, 308, 309, 310, 311, 312, 313, 316], "full": [20, 43, 45, 46], "full_matric": 20, "fulli": [4, 9, 21, 23, 24, 25, 26, 27, 32, 36, 37, 38, 39, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 75, 76, 77, 78, 80, 85, 87, 89, 123, 153, 154, 190, 242], "func": 234, "function": [3, 4, 5, 6, 8, 9, 92, 94, 95, 96, 97, 98, 147, 148, 149, 153, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 181, 182, 183, 184, 185, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 216, 218, 235, 242, 305, 316], "fundament": [8, 123, 190, 306], "further": [8, 42, 43, 44, 45, 46, 242, 276, 284, 289], "fuse": 75, "fusion": [76, 77, 78], "futur": 189, "g": [0, 11, 12, 15, 18, 20, 29, 30, 31, 33, 34, 36, 37, 38, 39, 80, 89, 153, 154, 181, 217, 220, 227, 291, 310], "g_": 221, "g_t": 227, "gain": [162, 163], "gamma": [198, 199, 200, 201, 202, 203, 204], "gap": [47, 58, 75, 153], "gaussian": [101, 165], "gelu": [102, 120, 176, 187], "gelunetwork": 165, "gener": [17, 90, 146, 181, 182, 183, 184, 185, 202, 223, 225, 226, 233, 237, 238, 239, 240, 241, 242, 247, 255, 257, 258, 295, 309, 310, 311, 313, 316], "get": [5, 6], "github": 5, "give": [8, 219, 227], "given": [11, 12, 15, 17, 18, 20, 113, 192, 193, 196, 217, 231, 261, 263, 305, 310, 311, 313, 316], "global": [0, 47, 58, 65, 75, 153, 231, 233, 240, 242], "go": [29, 89], "goal": [192, 193, 196], "googlenet": [29, 89], "gpu": 89, "grad": [91, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 113, 121, 123, 145, 150, 151, 152, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211, 212, 213, 214, 217, 218, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304, 307, 308, 309, 311, 313, 314], "grad_output": 15, "gradient": [8, 9, 31, 32, 89, 91, 93, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 237, 238, 239, 241, 255, 256, 257, 258, 259, 260, 261, 262, 263, 290, 306], "grain": 153, "graph": [8, 163, 243, 255, 256, 259, 260, 261, 262, 263, 306], "grayscal": [5, 6, 36, 37, 38, 39, 310, 316], "greater": 269, "green": 310, "grid": 295, "groundbreak": 89, "group": [58, 59, 60, 61, 62, 63, 64, 71, 72, 73, 74, 75, 79, 89, 95, 109, 110, 111, 147, 148, 149, 154, 177, 178, 179, 217, 218], "group1": 95, "group2": 95, "groupedconvblock": 58, "growth_rat": [23, 24, 25, 26, 27], "guarante": 240, "h": [47, 59, 60, 61, 62, 63, 64, 76, 77, 78, 89, 110, 111, 113, 117, 118, 135, 136, 138, 139, 142, 143, 145, 146, 148, 149, 153, 199, 200, 202, 203, 207, 208, 211, 214, 307, 309], "h_": [110, 111, 135, 136, 138, 139, 142, 143, 145, 178, 179, 207, 208, 210, 211, 213, 214], "h_out": [110, 111, 138, 139, 142, 143], "h_stack": 293, "ha": [0, 12, 90, 98, 109, 110, 111, 147, 148, 149, 170, 174, 192, 193, 198, 199, 200, 201, 202, 203, 204, 217, 218, 248, 287, 291, 293, 301, 304, 310], "half": 282, "han": 5, "hand": 19, "handl": [0, 3, 8, 17, 92, 94, 95, 96, 97, 98, 193, 196, 216, 218, 233], "handwritten": [5, 6, 39], "hard": [45, 46, 167], "hard_sigmoid": 166, "hardsigmoid": [167, 176, 187], "hardswish": [176, 187], "hardwar": 8, "hat": [222, 223, 224, 225, 226], "have": [0, 1, 11, 12, 14, 17, 18, 20, 93, 95, 97, 98, 110, 111, 163, 216, 259, 260, 261, 262, 263, 275, 277, 291, 293, 295, 300, 301, 304, 308, 314], "he": 89, "head": [42, 85], "height": [85, 110, 111, 113, 117, 118, 135, 136, 138, 139, 142, 143, 145, 146, 154, 178, 179, 199, 200, 202, 203, 207, 208, 210, 211, 213, 214, 307, 309, 314], "help": [8, 30, 103, 105, 118, 164, 168, 170, 171, 175, 198, 199, 200, 209, 210, 212, 213, 219, 222, 223, 225, 231, 232, 233, 235], "henc": 299, "here": [3, 10, 92, 121, 216, 218, 232, 233, 235, 242, 305, 306, 316], "hidden": [21, 87, 95], "hidden_s": 95, "hierarch": [95, 98, 216], "hierarchi": 178, "hierarchicalnetwork": 95, "high": [8, 42, 55, 70, 79, 238, 241], "higher": [40, 58, 193, 196, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 247, 248, 252, 273], "highest": 238, "highli": [44, 89], "highlight": [153, 212, 213, 214], "hint": 235, "histor": 221, "histori": [237, 238, 239, 241, 255, 256, 257, 258, 259, 260, 261, 262, 263], "hold": [94, 95, 96, 97], "horizont": [293, 301, 311, 316], "hot": [193, 196], "how": [2, 3, 8, 71, 72, 73, 74, 79, 95, 98, 216, 235, 316], "howard": 89, "howev": [91, 163], "hstack": 294, "http": [5, 6], "hu": [89, 153], "huang": 89, "huber": [126, 194], "huber_loss": [120, 127], "huberloss": [187, 197], "huberregressionmodel": 194, "hue": 316, "hyperbol": [108, 175, 271, 281, 286], "hyperparamet": [47, 58, 86, 217, 219], "i": [0, 1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316], "iccv": 89, "idea": 89, "ideal": [8, 40, 98], "ident": [14, 15, 89, 146, 187, 191, 240, 242, 259, 299], "identifi": 96, "idx": [2, 3], "ieee": [89, 153], "ii": 287, "ij": [107, 145, 173, 246, 247, 248, 252, 295], "ik": [246, 247, 248], "ill": [11, 17], "ilsvrc": 89, "imag": [3, 4, 5, 6, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 47, 48, 49, 50, 51, 52, 53, 54, 55, 66, 67, 68, 69, 70, 71, 72, 73, 74, 79, 88, 89, 110, 132, 146, 148, 153, 178, 202, 295, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316], "image_dir": 3, "image_path": 3, "imagedataset": 3, "imageio": 3, "imagenet": [24, 25, 26, 27, 40, 41, 42, 43, 44, 45, 46, 56, 57, 71, 72, 73, 74, 79, 89], "imbal": [193, 196], "impact": [89, 225], "implement": [2, 3, 8, 17, 21, 23, 28, 29, 30, 31, 33, 34, 36, 40, 41, 42, 47, 56, 57, 59, 60, 61, 62, 63, 64, 65, 85, 87, 89, 92, 113, 150, 151, 152, 154, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 293, 304, 310], "impli": [177, 178], "import": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 56, 57, 59, 60, 61, 62, 63, 64, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 118, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316], "improp": [95, 98, 242], "improv": [29, 30, 31, 32, 34, 47, 58, 71, 72, 73, 74, 75, 87, 89, 130, 146, 153, 165, 171, 175, 219, 220, 221, 222, 223, 224, 225, 226, 227, 235, 309, 312, 316], "imread": 3, "in1_featur": [121, 188], "in2_featur": [121, 188], "in_channel": [47, 95, 98, 147, 148, 149, 150, 151, 152, 153, 154, 177, 178, 179, 199, 200, 209, 210, 211, 212, 213, 214, 216], "in_featur": [94, 95, 98, 123, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 178, 179, 181, 182, 183, 188, 190, 192, 193, 194, 195, 196, 198, 201, 204, 209, 210, 211, 212, 213, 214], "incept": [29, 30, 31, 32, 33, 34, 35, 89], "inception_resnet_v1": 89, "inception_resnet_v2": 89, "inception_v1": 89, "inception_v3": 89, "inception_v4": 89, "inceptionresnet": [33, 34], "includ": [3, 4, 5, 8, 9, 15, 16, 21, 28, 29, 30, 33, 36, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 75, 80, 86, 87, 90, 92, 93, 95, 97, 98, 145, 147, 148, 149, 150, 151, 152, 216, 217, 218, 225, 235, 242, 248, 296], "inclus": [93, 96, 238, 241], "incom": [123, 190], "incomplet": 2, "incompletedataset": 2, "incorpor": [20, 44, 58, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 89, 165], "increas": [40, 58, 59, 60, 61, 62, 63, 64, 75, 109, 110, 111, 113, 146, 221, 228, 232, 293, 304, 310, 311, 313, 316], "independ": [95, 109, 110, 111, 181, 182, 183, 184, 185, 204, 248, 258, 308, 310, 312, 314], "index": [0, 2, 5, 6, 232, 255, 256, 259, 295, 299], "indexerror": 0, "indic": [0, 1, 80, 90, 93, 95, 97, 98, 125, 129, 193, 196, 209, 231, 243, 307, 309], "individu": [3, 95, 98, 194, 204, 218, 221, 228], "induc": [105, 171], "inf": 285, "infer": [71, 72, 73, 74, 79, 95, 98, 233], "infin": [18, 20, 224], "inform": [8, 89, 90, 91, 153, 218, 220, 233], "infti": [16, 226], "inherit": [1, 219, 227, 229], "init": 157, "initi": [1, 23, 32, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 75, 76, 77, 78, 81, 82, 83, 84, 86, 91, 93, 94, 95, 96, 97, 98, 154, 156, 158, 159, 160, 161, 162, 163, 177, 178, 179, 188, 190, 192, 193, 194, 195, 196, 198, 199, 200, 204, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 237, 240, 241, 242, 255, 259, 260, 261, 262, 263, 290], "initial_accumulator_valu": 221, "inner": [8, 246, 264], "innov": 42, "input": [8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 58, 71, 72, 73, 74, 75, 79, 85, 87, 89, 90, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 235, 242, 243, 244, 246, 247, 248, 252, 256, 258, 261, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316], "input1": 188, "input2": 188, "input_": [21, 87, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 206, 207, 208], "input_1": 121, "input_2": 121, "input_data": [164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 204, 209, 210, 211, 212, 213, 214], "input_s": [95, 97, 173, 193, 196], "input_shap": 90, "input_tensor": [8, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 59, 60, 61, 62, 63, 64, 71, 72, 73, 74, 76, 77, 78, 79, 80, 85, 91, 94, 95, 96, 97, 98, 107, 150, 151, 152, 153, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211, 212, 213, 214, 216, 307, 308, 309, 310, 311, 312, 313, 314], "insid": [3, 231, 233], "insight": [8, 89], "inspect": [92, 93, 98, 217], "instabl": [17, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229], "instal": 8, "instanc": [0, 1, 8, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 86, 88, 90, 92, 93, 94, 96, 97, 98, 132, 170, 201, 202, 203, 204, 217, 234, 290, 298, 302, 316], "instance_norm": [120, 131, 201, 202, 203], "instancenorm1d": [187, 205], "instancenorm1dmodel": 201, "instancenorm2d": [187, 205], "instancenorm3d": [187, 205], "instanti": [2, 71, 72, 73, 74, 79, 234], "instead": [8, 90, 94, 95, 96, 97, 98, 158, 159, 162, 163, 222, 223, 224, 233, 235, 257, 258], "int": [0, 1, 2, 5, 6, 15, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 107, 109, 110, 111, 113, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 160, 161, 162, 163, 173, 177, 178, 179, 188, 190, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 222, 223, 224, 225, 226, 228, 234, 237, 238, 239, 240, 241, 243, 255, 256, 257, 259, 260, 262, 269, 275, 276, 277, 284, 288, 289, 290, 291, 296, 298, 299, 300, 301, 302, 303, 307, 309, 314], "integ": [1, 3, 15, 65, 80, 109, 110, 111, 135, 136, 177, 178, 179, 204, 207, 208, 210, 211, 212, 213, 214, 235, 238, 239, 241, 242, 257, 260, 262, 276, 284, 288, 289, 296, 298, 299, 302], "integr": [1, 2, 4, 5, 6, 9, 89, 93, 95, 97, 98, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 188, 190, 209, 210, 211, 212, 213, 214], "intellig": [89, 153], "intend": [91, 96, 97], "intens": [17, 23, 48, 308, 310], "intent": 235, "interact": [121, 188, 216, 242], "interdepend": 89, "interfac": [2, 92, 95, 218], "interfer": [231, 233], "intermedi": [17, 153], "intern": [48, 49, 50, 51, 52, 53, 54, 55, 66, 67, 68, 69, 70, 89, 94, 95, 96, 97, 98, 193, 196, 216, 307, 308, 309, 310, 311, 312, 313, 314], "interpol": [120, 144, 314], "interpret": [89, 107, 173, 235, 291], "interv": [237, 241, 255], "introduc": [29, 30, 40, 41, 42, 58, 89, 104, 153, 165, 169, 170, 172, 175, 181, 182, 183, 184, 185, 309, 312, 316], "introspect": 98, "intuit": [8, 94, 96, 216, 316], "inv": 13, "inv_a": 14, "invari": [210, 213], "invers": [8, 11, 14, 15, 17, 221, 266, 267, 268], "invert": [11, 14, 15, 19, 41, 42, 44, 89], "invok": 234, "involv": [10, 11, 12, 14, 17, 18, 20, 75, 100, 101, 103, 104, 105, 106, 108, 121, 123, 145, 177, 178, 179, 188, 190, 235, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 263, 273, 274, 275, 277, 280, 282, 295, 296, 298, 302], "is_leaf": 243, "issu": [3, 171, 198, 199, 200, 222, 223], "item": [5, 195], "iter": [0, 1, 2, 3, 91, 92, 95, 97, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 255], "ith": [107, 173], "its": [4, 15, 17, 21, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 66, 67, 68, 69, 70, 76, 77, 78, 87, 89, 90, 91, 94, 95, 96, 97, 109, 110, 111, 113, 146, 154, 163, 165, 169, 174, 212, 213, 214, 216, 217, 220, 228, 231, 232, 233, 234, 255, 257, 258, 262, 275, 277, 290, 299, 308, 311, 313, 316], "itself": [10, 15, 94, 95, 96, 97], "j": [6, 107, 153, 173, 198, 199, 200, 201, 202, 203, 209, 210, 212, 213, 295, 301, 307, 309], "jie": 89, "jk": 247, "join": [3, 291], "json": 234, "k": [15, 89, 109, 177, 193, 199, 200, 202, 203, 209, 212, 213, 246, 247, 256, 259, 291], "k_d": [111, 179, 211, 214], "k_h": [110, 111, 178, 179, 210, 211, 214], "k_w": [110, 111, 178, 179, 210, 211, 214], "kaim": [89, 158, 159, 162, 163], "kaiming_norm": 157, "kaiming_uniform": 157, "kalenichenko": 89, "karen": 89, "kashif": 5, "keep": [92, 169, 220, 233, 299], "keep_grad": [93, 237, 238, 239, 241, 243, 255, 256, 257, 258, 259, 260, 261, 262, 263, 290, 306], "keep_var": 92, "keepdim": [275, 276, 277, 284, 289], "kei": [89, 92, 94, 96, 98, 217], "kept": [276, 284, 289], "kernel": [36, 37, 38, 39, 45, 46, 75, 76, 77, 78, 79, 87, 89, 109, 110, 111, 113, 134, 135, 136, 137, 138, 139, 141, 142, 143, 147, 148, 149, 150, 151, 152, 154, 177, 178, 179, 206, 207, 208, 210, 211, 214], "kernel_s": [42, 45, 46, 75, 76, 77, 78, 95, 98, 137, 138, 139, 141, 142, 143, 147, 148, 149, 150, 151, 152, 154, 177, 178, 179, 199, 200, 209, 210, 211, 212, 213, 214], "keyerror": 92, "keyword": [22, 24, 25, 26, 27, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 88, 92, 189], "kj": [246, 248], "known": 89, "krizhevski": 89, "kroneck": [107, 173], "kwarg": [22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 88, 92, 189, 234], "l": [10, 17, 89, 109, 116, 134, 137, 141, 147, 153, 181, 182, 183, 184, 185, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206], "l2": [219, 220, 221, 222, 223, 224, 225, 226, 227, 229], "l_": [109, 134, 137, 141, 177, 206, 209, 212], "l_out": [109, 137, 141], "label": [4, 5, 6, 30, 192, 193, 196], "lambd": 219, "lambda": [12, 105, 171, 219, 223], "lambda_1": 12, "lambda_2": 12, "lambda_i": 12, "lambda_n": 12, "languag": [4, 177, 188, 209, 212], "larg": [0, 3, 17, 23, 42, 45, 48, 49, 50, 53, 66, 67, 89, 150, 151, 152, 170, 194, 216, 219, 222, 223, 224, 227, 228, 229, 233], "larger": [47, 75, 94, 96, 109, 110, 111, 113, 219, 249, 296, 307, 309, 314], "largest": 275, "last": [1, 107, 133, 173, 247, 248, 291, 311, 313], "last_channel": 42, "latest": 4, "layer": [8, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 75, 76, 77, 78, 80, 81, 82, 83, 84, 87, 89, 90, 92, 94, 95, 98, 107, 123, 130, 132, 133, 147, 148, 149, 150, 151, 152, 153, 154, 158, 159, 162, 163, 173, 177, 178, 179, 188, 189, 190, 196, 204, 209, 210, 211, 212, 213, 214, 216, 242, 296, 306], "layer1": 234, "layer2": 234, "layer_group": 95, "layer_norm": [120, 131, 204], "layer_sequ": [95, 98], "layernorm": [187, 205], "layernormmodel": 204, "le": 89, "lead": [95, 98, 165, 201, 202, 203, 204, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 242], "leaf": 243, "leaki": [103, 168], "leaky_relu": [102, 120, 168], "leakyrelu": [176, 187], "learn": [1, 3, 4, 5, 6, 8, 15, 17, 58, 59, 60, 61, 62, 63, 64, 87, 88, 89, 94, 95, 96, 97, 104, 107, 153, 164, 168, 169, 173, 177, 178, 179, 182, 183, 184, 185, 188, 190, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 240, 305, 306, 316], "learnabl": [91, 92, 93, 130, 132, 133, 147, 148, 149, 177, 178, 179, 188, 190, 198, 199, 200, 201, 202, 203, 204, 216], "least": [17, 18, 20, 287], "lecun": [6, 89], "left": [15, 16, 17, 20, 101, 107, 165, 173, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 212, 213, 214, 307, 309], "leftarrow": 225, "len": [0, 1, 2, 3, 295], "lenet": [35, 37, 38, 39, 89], "lenet_1": 89, "lenet_4": 89, "lenet_5": 89, "length": [95, 109, 116, 134, 137, 141, 177, 189, 198, 201, 206, 209, 212, 296, 308], "leq": [166, 167, 194, 226, 253, 269], "lerp": 145, "less": [0, 100, 103, 126, 164, 168, 193, 194, 196, 269], "let": 12, "level": [8, 32], "leverag": [19, 31, 34, 59, 60, 61, 62, 63, 64, 85, 89, 154, 216], "li": 89, "librari": [3, 8, 9, 92, 216, 217, 218, 234, 235, 242, 243, 316], "lightweight": [8, 41, 45, 46, 51, 68, 154, 167, 170], "like": [8, 32, 59, 60, 61, 62, 63, 64, 76, 77, 78, 89, 91, 92, 95, 98, 109, 162, 163, 171, 181, 198, 199, 200, 201, 202, 203, 231, 232, 235, 290, 306, 316], "likelihood": [129, 193, 196], "limit": [45, 46, 90, 170, 220, 269], "linalg": [8, 13], "linalgerror": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20], "linear": [8, 9, 10, 17, 18, 19, 41, 44, 65, 89, 90, 94, 95, 96, 98, 100, 101, 103, 104, 105, 158, 159, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 181, 182, 183, 188, 189, 192, 193, 194, 195, 196, 198, 201, 204, 209, 210, 211, 212, 213, 214, 234, 259], "linearli": 194, "list": [0, 1, 36, 42, 47, 58, 65, 75, 80, 90, 91, 93, 94, 95, 96, 97, 133, 154, 189, 204, 217, 235, 237, 238, 239, 241, 243, 256, 257, 258, 260, 261, 262, 263, 288, 299, 300, 303, 305], "listdir": 3, "liter": [47, 124, 125, 126, 128, 129, 145, 147, 148, 149, 150, 151, 152, 154, 158, 159, 177, 178, 179, 192, 193, 194, 195, 196, 295], "liu": 89, "ln": 253, "load": [3, 4, 5, 6, 91, 92, 93, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 234], "load_state_dict": [92, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "loader": [1, 2, 3], "local": [89, 113, 177], "locat": [89, 145], "log": [129, 192, 193, 196, 264], "log_softmax": 196, "logarithm": [253, 273, 274], "logic": [3, 206, 207, 208, 216, 217], "logit": [21, 87, 107, 173, 193], "logsoftmax": [193, 196], "long": [225, 288], "loop": [1, 95, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "loss": [8, 17, 94, 95, 96, 97, 98, 107, 124, 125, 126, 128, 129, 164, 165, 168, 169, 171, 172, 173, 175, 181, 182, 183, 184, 185, 189, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "low": [8, 32, 41, 45, 46, 238, 241], "lower": [10, 40, 161, 219, 227, 228, 229, 241], "lowest": 238, "lr": [217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "lu": 14, "lucid": [0, 1, 2, 5, 6, 13, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 236, 264, 294, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "m": [80, 89, 94, 95, 98, 210, 211, 213, 214, 222, 223, 224, 225, 226, 259], "m_": [222, 223, 224, 225, 226], "m_t": [225, 226], "maaten": 89, "machin": [3, 5, 6, 8, 17, 153, 222, 232, 240], "magnitud": [227, 228, 316], "mai": [3, 8, 12, 14, 17, 95, 97, 146, 194, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 233, 242, 310, 316], "main": [8, 18, 32, 95, 256, 259], "maintain": [17, 40, 58, 59, 60, 61, 62, 63, 64, 71, 72, 73, 74, 79, 89, 91, 92, 94, 95, 96, 98, 105, 158, 159, 162, 163, 164, 165, 171, 181, 182, 183, 184, 185, 198, 199, 200, 201, 202, 203, 222, 227, 307, 310, 314], "make": [1, 3, 8, 28, 32, 36, 41, 44, 45, 46, 47, 89, 95, 98, 172, 193, 194, 204, 210, 213, 216, 221, 222, 223, 224, 232, 234, 242, 243, 248, 295, 305, 316], "manag": [8, 92, 94, 95, 96, 97, 98, 216, 218, 231, 233, 234, 242], "manhattan": 16, "mani": 90, "manipul": [8, 94, 96, 316], "manner": [95, 98], "manual": [124, 125, 129, 192, 193, 196, 233], "map": [47, 58, 68, 75, 89, 92, 106, 108, 153, 172, 175], "mask": [91, 181, 182, 183, 184, 185], "match": [19, 92, 95, 98, 124, 126, 128, 133, 147, 148, 149, 217, 273, 298, 299, 302, 303, 308, 316], "math": [270, 280, 285], "mathbf": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 85, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 121, 123, 145, 150, 151, 152, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211, 212, 213, 214, 246, 247, 248, 252, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304, 307, 308, 309, 310, 311, 312, 313, 314], "mathcal": [158, 160, 162, 181, 182, 183, 184, 185, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204], "mathemat": [14, 147, 148, 149, 309, 311, 312, 313], "mathrm": 17, "matmul": 264, "matric": [9, 11, 12, 14, 17, 19, 20, 246, 247, 248, 259, 295], "matrix": [8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 113, 121, 189, 190, 216, 246, 295], "matrix_pow": 13, "matthew": 89, "max": [16, 65, 80, 104, 141, 142, 143, 166, 167, 169, 170, 212, 213, 214, 224, 249, 264, 269], "max_pool": [212, 213, 214], "max_pool1d": [120, 140], "max_pool2d": [120, 140], "max_pool3d": [120, 140], "max_valu": 269, "maxim": 3, "maximum": [16, 169, 170, 212, 213, 214, 222, 224, 264, 269, 275, 312], "maxpool": [21, 87], "maxpool1d": [187, 215], "maxpool1dmodel": 212, "maxpool2d": [95, 98, 178, 187, 215], "maxpool2dmodel": 213, "maxpool3d": [179, 187, 215], "maxpool3dmodel": 214, "mean": [5, 6, 18, 90, 91, 105, 109, 110, 111, 114, 124, 125, 126, 128, 129, 130, 132, 147, 148, 149, 160, 164, 165, 166, 168, 169, 171, 172, 175, 179, 181, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 222, 223, 224, 225, 226, 227, 231, 239, 264, 269, 273, 274, 275, 277, 280, 282, 284, 287, 288, 289, 305, 308, 316], "meaning": [98, 235], "measur": [192, 193, 195, 196], "mechan": [8, 65, 75, 79, 97, 121], "membership": 192, "memori": [2, 3, 23, 233, 257, 258], "meshgrid": 294, "method": [3, 8, 9, 14, 65, 85, 86, 94, 95, 96, 97, 98, 124, 125, 126, 128, 129, 158, 159, 162, 163, 192, 193, 194, 195, 196, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 242], "mid_channel": [45, 46], "middl": 232, "might": 216, "min": [166, 167, 170, 250, 264, 269], "min_valu": 269, "mind": [0, 3, 8, 95, 98, 233], "mini": 1, "minim": [4, 8, 42, 98, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 218], "minimalist": 8, "minimum": [264, 269, 277], "minu": 172, "mirror": [261, 263], "mismatch": [92, 216, 217], "miss": [92, 216], "mitig": [103, 164, 168, 171, 198, 199, 200], "mlp": 154, "mnist": [4, 5, 7, 37, 38], "mnist_train": [4, 6], "mobil": [40, 41, 42, 44, 45, 46, 89], "mobilenet": [35, 41, 42, 44, 45, 46, 89, 170], "mobilenet_v2": 89, "mobilenet_v3": [45, 46], "mobilenet_v3_larg": 89, "mobilenet_v3_smal": 89, "mobilenetv2": [41, 89], "mobilenetv3": [42, 45, 46, 89], "mode": [8, 118, 130, 132, 145, 158, 159, 181, 182, 183, 184, 185, 296], "model": [1, 3, 4, 8, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 93, 94, 95, 96, 97, 98, 107, 146, 147, 148, 149, 154, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 204, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 242, 305, 306, 316], "moder": 69, "modern": 89, "modif": [86, 98, 233], "modifi": [22, 47, 85, 88, 94, 95, 96, 97, 156, 158, 159, 160, 161, 162, 163, 181, 231, 233, 240, 293, 304], "modul": [5, 6, 8, 21, 22, 28, 31, 32, 33, 34, 36, 40, 41, 42, 47, 58, 65, 75, 80, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 147, 148, 149, 150, 151, 152, 153, 154, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 234, 235, 242, 306, 316], "modular": [3, 8, 89, 92, 95, 98, 216, 316], "moduledict": [95, 96, 98, 99], "modulelist": [97, 98, 99], "moment": [222, 223, 224, 225, 226], "momentum": [130, 132, 147, 148, 149, 198, 199, 200, 201, 202, 203, 219, 225, 227, 229], "momentum_decai": 225, "monoton": 174, "moor": 17, "more": [3, 4, 5, 8, 12, 47, 54, 94, 95, 98, 150, 151, 152, 164, 182, 183, 184, 185, 216, 217, 218, 219, 220, 223, 224, 227, 228, 229, 239, 248, 287, 301, 316], "most": [9, 89, 213, 306, 307, 316], "move": [219, 227], "mse": [126, 128, 194, 195], "mse_loss": [120, 127], "mseloss": [187, 197], "mu": [160, 198, 199, 200, 201, 202, 203, 204, 289], "mu_c": 308, "mu_i": [201, 202, 203], "much": 316, "mul": 264, "multi": [3, 4, 33, 75, 76, 77, 78, 89, 107, 125, 129, 154, 173, 193, 196, 276, 284, 289], "multidimension": [237, 241, 257], "multipl": [1, 3, 8, 9, 15, 19, 21, 47, 65, 79, 96, 97, 98, 113, 145, 146, 153, 154, 181, 182, 183, 184, 185, 193, 196, 216, 232, 237, 238, 239, 241, 246, 251, 257, 258, 305, 310, 316], "multipli": [15, 43, 97, 123, 190, 228, 251, 252], "must": [0, 1, 3, 10, 11, 12, 14, 15, 18, 19, 20, 90, 92, 94, 95, 96, 97, 98, 133, 181, 182, 183, 184, 185, 196, 217, 233, 287, 291, 293, 296, 298, 299, 301, 302, 304, 307, 308, 309, 310, 311, 313], "my_simple_model": 234, "mymodel": [92, 93, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "myoptim": [217, 218], "n": [15, 16, 47, 59, 60, 61, 62, 63, 64, 76, 77, 78, 89, 94, 95, 98, 109, 110, 111, 113, 116, 117, 118, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 153, 158, 160, 162, 177, 178, 179, 184, 185, 188, 190, 192, 193, 195, 196, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 259, 276, 287, 289], "n1": 16, "nabla_": [220, 221, 222, 223, 224, 225, 226, 228], "nabla_t": 226, "nadam": 230, "name": [89, 90, 92, 94, 96, 98, 234, 235], "nan": [18, 20], "natur": [17, 89, 177, 188, 209, 212, 253, 273, 274], "ndarrai": [91, 93, 235, 243, 256, 258, 261, 263, 290], "ndim": [18, 20, 93, 243], "ne": 15, "nearest": 145, "necessari": [4, 5, 6, 17, 233, 293, 304], "need": [2, 4, 95, 96, 97, 107, 188, 216, 233, 257, 258, 305, 306, 316], "neg": [15, 17, 20, 100, 129, 146, 164, 168, 169, 171, 193, 196, 228, 291], "negative_slop": [103, 168], "neglect": 97, "neighbor": 145, "neq": 16, "nest": [90, 95, 98, 216], "nestedmodel": 90, "nesterov": 225, "net": [87, 89], "network": [3, 4, 8, 21, 22, 23, 31, 32, 39, 40, 43, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 65, 66, 67, 68, 69, 70, 75, 80, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 104, 105, 106, 107, 108, 109, 110, 111, 121, 123, 130, 146, 153, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 204, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 227, 229, 241, 242, 243, 255, 260, 262, 275, 277, 296, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316], "neural": [3, 4, 8, 21, 22, 32, 39, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 101, 104, 105, 106, 107, 108, 109, 110, 111, 121, 123, 130, 146, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 204, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 227, 229, 241, 242, 243, 255, 260, 262, 275, 277, 296, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316], "neuralnetwork": [166, 167, 169, 174], "neuron": 168, "never": 310, "new": [92, 93, 100, 101, 103, 104, 105, 106, 108, 121, 123, 145, 154, 158, 159, 160, 161, 162, 163, 217, 234, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 258, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 290, 291, 293, 296, 298, 299, 301, 302, 303, 304], "next": [98, 305], "nll": 129, "nll_loss": [120, 127], "nllloss": [187, 197], "nn": [5, 6, 8, 21, 23, 28, 32, 36, 40, 41, 42, 47, 58, 65, 71, 72, 73, 74, 75, 79, 80, 87, 90, 99, 102, 112, 119, 122, 127, 131, 140, 144, 155, 157, 176, 180, 186, 187, 191, 197, 205, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 234, 306, 316], "no_grad": 231, "node": 243, "nois": [20, 242], "non": [12, 15, 17, 20, 97, 101, 103, 104, 158, 159, 164, 165, 166, 168, 169, 170, 171, 172, 174, 175, 181, 182, 183, 184, 185, 222, 223, 233, 253, 269], "none": [0, 1, 2, 5, 6, 28, 32, 36, 40, 41, 42, 47, 85, 90, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 146, 147, 148, 149, 150, 151, 152, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 257, 258, 259, 261, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 311, 313, 314], "norm": [9, 13, 224], "normal": [5, 6, 65, 101, 105, 107, 108, 130, 132, 133, 147, 148, 149, 157, 158, 162, 165, 171, 173, 181, 198, 199, 200, 201, 202, 203, 204, 227, 239, 242, 305, 315, 316], "normalized_shap": [133, 204], "note": [109, 181], "noth": [114, 115, 116, 117], "notimplementederror": [2, 92, 217], "notin": 269, "nov": 89, "novel": [5, 89], "np": [47, 59, 60, 61, 62, 63, 64, 76, 77, 78, 91, 93, 153, 193, 196, 235, 243, 248, 255, 256, 259, 260, 262, 263, 274, 290, 306], "npy": [5, 6], "num_class": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 173, 193, 196], "num_featur": [98, 147, 148, 149, 198, 199, 200, 201, 202, 203], "num_init_featur": [23, 24, 25, 26, 27], "num_paramet": 97, "number": [0, 1, 2, 5, 6, 11, 12, 14, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 95, 97, 98, 109, 110, 111, 113, 116, 117, 118, 121, 123, 125, 129, 130, 132, 134, 135, 136, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 158, 159, 162, 163, 172, 177, 178, 179, 188, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 210, 211, 212, 213, 214, 219, 237, 240, 241, 243, 253, 255, 257, 259, 275, 276, 277, 288, 289, 291, 293, 296, 298, 299, 300, 302, 304, 308, 310, 311, 313, 316], "numer": [14, 17, 124, 125, 130, 132, 133, 147, 148, 149, 170, 192, 193, 198, 199, 200, 201, 202, 203, 204, 220, 221, 222, 223, 224, 225, 226, 227, 235, 245, 255, 260, 262], "numpi": [8, 91, 93, 193, 196, 235, 243, 248, 256, 259, 274, 287, 290, 296, 298, 302, 306, 316], "o": [3, 211, 214, 260, 261], "object": [1, 3, 9, 75, 89, 92, 96, 97, 195, 216, 233, 244, 245, 249, 250, 251, 254, 290], "observ": 222, "obtain": 1, "occur": [146, 233, 234, 291], "occurr": 15, "odot": [181, 182, 183, 184, 185], "off": 231, "offer": [4, 8, 216, 218, 242, 316], "offset": 259, "often": [15, 56, 57, 109, 110, 111, 113, 193, 196, 255, 262, 306, 310, 314, 316], "older": 225, "onc": 233, "one": [0, 71, 72, 73, 74, 79, 97, 98, 107, 109, 123, 137, 141, 147, 148, 149, 171, 172, 173, 177, 183, 193, 196, 198, 201, 209, 212, 217, 232, 235, 239, 254, 261, 275, 277, 292, 297, 301, 306], "ones": [121, 123, 177, 178, 179, 190, 198, 199, 200, 201, 202, 203, 204, 216, 259, 261, 264], "ones_lik": 264, "onli": [8, 90, 145, 166, 169, 181, 182, 183, 184, 185, 192, 193, 196, 198, 199, 200, 201, 202, 203, 204, 212, 213, 214, 228, 231, 255, 269, 275, 277, 287, 296, 297, 299, 300], "onto": [18, 20], "openml": [5, 6], "oper": [3, 8, 9, 14, 17, 65, 66, 67, 68, 69, 70, 91, 92, 95, 100, 101, 103, 104, 105, 106, 108, 109, 110, 111, 113, 118, 121, 123, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 231, 232, 233, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 257, 258, 260, 262, 273, 274, 275, 276, 277, 280, 282, 284, 287, 289, 291, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 308, 314], "operatornam": [15, 17], "opposit": 219, "optim": [3, 8, 9, 15, 17, 18, 20, 23, 28, 29, 30, 31, 32, 33, 34, 41, 42, 45, 46, 91, 93, 96, 97, 113, 177, 178, 179, 216, 233], "optimizer_st": [217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "option": [1, 5, 6, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 100, 103, 107, 110, 111, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 158, 159, 160, 161, 162, 163, 164, 168, 173, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211, 212, 213, 214, 217, 219, 227, 229, 237, 238, 239, 241, 243, 255, 256, 257, 258, 259, 260, 261, 262, 263, 275, 276, 277, 284, 288, 289, 290, 291, 295, 298, 300, 301, 306, 310, 311, 313], "ord": 16, "order": [1, 3, 16, 20, 94, 95, 96, 97, 98, 288, 305], "ordered_dict": 98, "ordereddict": [92, 94, 95, 98], "organ": [94, 95, 96, 98, 234], "orient": 316, "origin": [30, 39, 114, 146, 153, 175, 296, 297, 298, 299, 302, 303, 314], "orthogon": [17, 18, 20], "orthonorm": 18, "oscil": [219, 227, 229], "other": [2, 3, 8, 14, 30, 34, 36, 39, 91, 92, 95, 98, 158, 159, 181, 216, 217, 231, 233, 242, 243, 255, 257, 260, 262, 287, 295, 316], "otherwis": [48, 49, 50, 51, 52, 53, 54, 55, 66, 67, 68, 69, 70, 100, 103, 104, 105, 107, 164, 166, 167, 168, 169, 171, 173, 182, 183, 184, 185, 194, 209, 210, 211, 212, 213, 214, 217, 228, 234, 249, 250, 275, 277], "otim": [17, 121, 188], "out": [0, 3, 4, 100, 101, 103, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 123, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 158, 159, 162, 163, 177, 178, 179, 181, 182, 183, 184, 185, 206, 207, 208, 209, 210, 211, 212, 213, 214, 219, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304], "out_channel": [36, 42, 45, 46, 95, 98, 147, 148, 149, 150, 151, 152, 154, 177, 178, 179, 199, 200, 209, 210, 211, 212, 213, 214, 216], "out_featur": [94, 95, 98, 121, 123, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 178, 179, 181, 182, 183, 188, 190, 192, 193, 194, 195, 196, 198, 201, 204, 209, 210, 211, 212, 213, 214], "outcom": [310, 311, 313], "outer": 264, "outlier": [126, 194], "output": [0, 1, 2, 8, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 121, 123, 134, 135, 136, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 235, 238, 239, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256, 258, 259, 260, 262, 263, 273, 274, 275, 276, 277, 280, 282, 284, 287, 288, 289, 295, 296, 298, 302, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "output_height": 113, "output_lay": [95, 98], "output_s": [95, 134, 135, 136, 206, 207, 208], "output_width": 113, "outsid": 0, "over": [0, 1, 2, 3, 9, 41, 75, 87, 92, 95, 97, 107, 134, 135, 136, 153, 173, 177, 178, 179, 193, 196, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 219, 220, 221, 222, 223, 237, 241, 275, 276, 277, 284, 287, 289, 310, 311, 313], "overal": 85, "overdetermin": 17, "overfit": [1, 21, 87, 115, 118, 182, 183, 184, 185, 219, 222, 227, 229], "overhead": [42, 153], "overli": 170, "overrid": [2, 3], "overridden": [92, 217], "overwrit": [94, 96], "own": [4, 94, 95, 96, 97, 109, 110, 111, 163, 216, 308], "p": [16, 17, 93, 96, 97, 114, 115, 116, 117, 118, 181, 182, 183, 184, 185, 209, 212, 213, 310, 311, 313, 316], "p_d": [211, 214], "p_h": [210, 211, 214], "p_w": [210, 211, 214], "packag": [2, 3, 4, 9, 89, 216, 218, 234, 240, 242, 306, 316], "pad": [36, 95, 98, 109, 110, 111, 113, 134, 135, 136, 137, 138, 139, 141, 142, 143, 147, 148, 149, 150, 151, 152, 154, 177, 178, 179, 199, 200, 206, 207, 208, 209, 210, 211, 212, 213, 214, 294], "pad_after_dim1": 296, "pad_after_dim2": 296, "pad_before_dim1": 296, "pad_before_dim2": 296, "pad_width": 296, "padding_height": 113, "padding_width": 113, "pair": 121, "pang": 89, "paper": 29, "parallel": [1, 3, 75, 89], "param": [92, 93, 96, 97, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "param1": 92, "param_dict": 96, "param_group": [217, 218], "param_groups_setup": 217, "param_list": 97, "param_s": 234, "paramet": [0, 2, 8, 37, 38, 39, 89, 92, 216, 217, 218, 235, 242, 316], "parameterdict": 99, "parameterlist": 99, "parent": 216, "part": [91, 92, 163, 216, 231, 233, 242, 255, 256, 259, 260, 261, 262, 263, 306, 316], "partial": [10, 11, 12, 14, 15, 16, 17, 19, 20, 100, 101, 103, 104, 105, 106, 107, 108, 121, 123, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211, 212, 213, 214, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304], "particip": [93, 306], "particular": [94, 96], "particularli": [8, 17, 41, 59, 60, 61, 62, 63, 64, 95, 96, 97, 98, 107, 123, 147, 148, 149, 150, 151, 152, 173, 190, 193, 196, 201, 202, 203, 204, 223, 231, 234, 305], "pass": [2, 8, 17, 21, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 90, 92, 93, 94, 95, 96, 97, 98, 145, 147, 148, 149, 153, 154, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 204, 209, 210, 211, 212, 213, 214, 216, 235, 243, 276, 284, 287, 288, 289, 291, 293, 297, 299, 300, 304, 306, 316], "past": [219, 220, 222, 227], "patch": [113, 210], "path": [3, 5, 6], "pathwai": 89, "pattern": [89, 104, 153, 169, 177, 178, 179], "penal": [219, 227, 229], "penalti": [220, 221, 222, 223, 224, 225, 226], "penros": 17, "per": [1, 42, 59, 60, 61, 62, 63, 64, 76, 77, 78, 134, 201, 202, 203, 204, 206], "perform": [3, 8, 9, 10, 17, 21, 32, 33, 34, 36, 37, 38, 39, 42, 43, 44, 55, 71, 72, 73, 74, 75, 80, 87, 89, 92, 93, 97, 101, 109, 110, 111, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 150, 151, 152, 153, 154, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 231, 233, 240, 242, 244, 245, 248, 251, 254, 273, 275, 277, 284, 288, 305, 307, 309, 314, 316], "permut": 288, "persist": [91, 237, 238, 239, 241, 257, 258], "perturb": [12, 19, 20, 316], "phi": [101, 165], "pi": [101, 165, 270, 280, 285], "piecewis": [166, 167], "pil": [306, 316], "pinv": 13, "pioneer": 89, "pipelin": [5, 6, 242, 305, 306, 308], "pixel": [5, 6, 145, 308, 310], "place": [156, 158, 159, 160, 161, 162, 163], "placehold": [92, 189], "plai": [235, 242], "plot": 295, "point": [4, 146, 231], "pointwis": [150, 151, 152], "pool": [21, 36, 37, 38, 39, 47, 58, 65, 75, 80, 87, 89, 134, 135, 136, 137, 138, 139, 141, 142, 143, 153, 154, 178, 179, 206, 207, 208, 209, 210, 211, 212, 213, 214, 275, 277], "pool1": 98, "pool2": 98, "poorli": 14, "popul": 92, "popular": [4, 89], "portion": 316, "pose": 17, "posit": [1, 10, 15, 92, 98, 146, 164, 168, 169, 171, 209, 210, 211, 212, 213, 214, 228, 232, 253, 298, 302, 309], "possibl": [8, 316], "potenti": [17, 189, 227, 300], "power": [8, 15, 41, 45, 46, 89, 153, 232, 233, 264, 305, 306, 316], "pp": 89, "practic": [17, 193, 196], "practition": 316, "pre": [48, 52, 53], "preactbottleneck": [48, 52, 53], "preced": [89, 93, 243], "preconfigur": [33, 34], "predefin": [4, 89, 95, 171], "predict": [85, 192, 193, 195, 196], "prefix": [92, 234], "prepar": [3, 232, 296, 298, 302, 306, 316], "prepend": 92, "preprint": 89, "preprocess": [3, 4, 113, 146, 242, 305, 306, 316], "present": [192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 210], "preserv": [114, 146, 181, 255, 256, 259, 260, 261, 262, 263, 276, 284, 289], "preset": 4, "prevent": [1, 94, 95, 96, 97, 98, 115, 118, 170, 182, 183, 184, 185, 192, 193, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 233], "previou": [219, 228, 233], "previous": 222, "primari": [8, 235], "primarili": 98, "print": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 231, 232, 233, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314], "priorit": [45, 46, 154, 166], "probabilist": 242, "probabl": [30, 101, 107, 114, 115, 116, 117, 118, 124, 165, 173, 181, 182, 183, 184, 185, 192, 193, 196, 310, 311, 313, 316], "problem": [17, 18, 20, 89, 103, 164, 168, 226], "proceed": 89, "process": [2, 3, 4, 15, 18, 20, 21, 33, 47, 75, 86, 87, 89, 97, 109, 110, 111, 132, 146, 147, 148, 149, 153, 154, 171, 175, 177, 179, 188, 198, 199, 200, 201, 202, 203, 204, 209, 211, 212, 214, 219, 235, 295, 306, 307, 308, 309, 314, 316], "produc": [21, 87, 90, 134, 135, 136, 153, 177, 178, 179, 206, 207, 208, 240, 242], "product": [8, 18, 20, 167, 172, 174, 188, 204, 216, 246, 247, 251, 252], "program": [231, 242], "progress": 221, "project": [18, 20], "projector": 17, "promin": [209, 211, 212, 213, 214], "promot": [98, 193, 196, 216], "propag": [11, 12, 14, 17, 18, 19, 20, 89, 92, 98, 121, 123, 145, 153, 210, 211, 227, 228, 246, 247, 248, 252, 275, 277, 295, 296, 299, 303], "properli": [0, 97, 107, 173, 216], "properti": [9, 11, 14, 15, 101, 105, 114, 165, 171, 181, 221, 226], "proport": [5, 6, 289], "proportion": 314, "provid": [0, 1, 2, 3, 4, 5, 6, 8, 9, 22, 28, 29, 30, 32, 36, 47, 80, 85, 86, 88, 89, 92, 94, 95, 96, 97, 101, 123, 135, 136, 146, 192, 193, 194, 196, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 227, 229, 231, 233, 235, 240, 242, 243, 248, 255, 261, 275, 277, 288, 290, 298, 300, 302, 316], "pseudo": [14, 17], "purpos": [237, 241, 255, 260, 262], "python": 235, "pytorch": 290, "q": [18, 89], "qr": 13, "quad": [17, 192, 193, 194, 195, 196, 212, 213, 214, 244, 245, 249, 250, 251, 254, 307], "quadrat": 194, "quotient": 245, "r": [18, 89, 310, 311, 312, 313], "r_t": 226, "radam": 230, "rais": [0, 1, 2, 92, 216, 217, 253], "rand": [236, 242], "randint": [236, 242], "randn": [21, 23, 24, 25, 26, 27, 43, 44, 47, 59, 60, 61, 62, 63, 64, 71, 72, 73, 74, 76, 77, 78, 79, 80, 85, 87, 150, 151, 152, 153, 154, 216, 236, 240, 242], "random": [1, 2, 3, 23, 24, 25, 26, 27, 43, 44, 47, 59, 60, 61, 62, 63, 64, 71, 72, 73, 74, 76, 77, 78, 79, 85, 150, 151, 152, 153, 154, 309, 310, 311, 312, 313, 316], "random_integ": 242, "random_tensor": 242, "randomcrop": [315, 316], "randomgrayscal": [315, 316], "randomhorizontalflip": [315, 316], "randomli": [1, 114, 115, 116, 117, 118, 146, 181, 182, 183, 184, 185, 309, 310, 311, 312, 313, 316], "randomnoisedataset": [0, 1, 2], "randomrot": [315, 316], "randomverticalflip": 315, "rang": [0, 1, 9, 47, 55, 89, 97, 106, 108, 109, 110, 125, 129, 163, 170, 172, 175, 219, 227, 229, 238, 266, 267, 269, 308, 312, 316], "rank": 17, "rasul": 5, "rate": [217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "rather": [5, 96, 97, 223, 299], "ratio": [65, 153, 154, 314], "ravel": 294, "raw": [107, 173, 193, 235], "re": [93, 233], "readabl": [94, 95, 96, 98, 216, 235], "readi": [3, 8, 71, 72, 73, 74, 79, 89], "real": [17, 20, 41, 172], "rearrang": 113, "recalibr": [66, 68, 69, 71, 72, 73, 74, 89, 153], "receiv": [212, 213, 214, 296], "recent": 227, "recept": [75, 79, 89, 154], "reciproc": [17, 264, 274, 282], "recognit": [39, 89, 178], "rectangular": 259, "rectif": 226, "rectifi": [103, 104, 168, 169, 226], "recurr": [95, 204], "recurs": [90, 92], "red": 310, "reduc": [21, 40, 47, 58, 75, 80, 87, 89, 150, 151, 152, 153, 198, 199, 200, 201, 202, 203, 209, 210, 211, 212, 213, 214, 225, 228, 233, 235, 275, 276, 277, 284, 289, 310], "reduct": [20, 65, 124, 125, 126, 128, 129, 153, 154, 192, 193, 194, 195, 196, 275, 277], "reevalu": 217, "refer": [4, 8, 92, 242, 256, 259, 291], "reflect": 231, "regardless": [17, 297], "region": [111, 134, 135, 136, 145, 166, 207, 208, 296, 307, 316], "regist": [56, 57, 59, 60, 61, 62, 63, 64, 86, 91, 92, 93, 97, 216, 234], "register_buff": 91, "register_model": [22, 29, 30, 31, 33, 34, 37, 38, 39, 43, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 76, 77, 78, 81, 82, 83, 84, 86, 88], "register_paramet": 92, "registr": [92, 216], "registri": [59, 60, 61, 62, 63, 64, 234], "registry_path": 234, "regress": [4, 128, 194, 195], "regular": [17, 21, 30, 87, 118, 182, 183, 184, 185, 219, 220, 221, 224, 225, 226, 227, 229], "relat": [233, 259, 260], "relationship": 314, "relev": [145, 219, 227, 229], "reli": 233, "reliabl": [5, 6], "reliant": [182, 183, 184, 185], "relu": [8, 21, 65, 80, 87, 89, 90, 94, 95, 96, 98, 100, 102, 103, 120, 147, 148, 149, 153, 154, 158, 159, 162, 163, 164, 168, 170, 174, 176, 177, 178, 179, 187, 188, 189, 190], "relu1": 98, "relu2": 98, "relu3": 98, "relu6": [176, 187], "remain": [5, 6, 91, 133, 181, 182, 183, 184, 185, 228], "rememb": 242, "remov": [234, 300], "rep": 302, "repeat": [294, 295, 302], "repetit": [298, 302], "replac": [5, 242, 310], "repres": [5, 14, 16, 20, 36, 92, 93, 98, 121, 123, 130, 132, 133, 177, 178, 179, 188, 190, 193, 196, 204, 217, 218, 219, 225, 226, 227, 228, 229, 235, 244, 245, 251, 254, 256, 276, 287, 288, 289, 295, 307, 309, 311, 312, 313, 314], "represent": [56, 57, 59, 60, 61, 62, 63, 64, 71, 72, 73, 74, 75, 79, 89, 153, 210, 213, 217], "reproduc": [237, 238, 239, 240, 241, 242, 316], "requir": [2, 3, 4, 8, 42, 59, 60, 61, 62, 63, 64, 75, 91, 94, 98, 100, 101, 103, 104, 105, 106, 108, 121, 123, 145, 153, 154, 163, 189, 193, 196, 216, 231, 233, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 285, 286, 291, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 314], "requires_grad": [91, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 113, 121, 123, 145, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211, 212, 213, 214, 216, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306], "rescal": [124, 125, 129, 192, 193, 196], "research": 216, "reset": [93, 240, 243], "reshap": [8, 65, 123, 178, 179, 232, 235, 294, 297], "residu": [31, 32, 33, 34, 41, 42, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 66, 67, 68, 69, 70, 89], "residualblock": 47, "resili": 228, "resiz": [145, 305, 315, 316], "resnet": [32, 33, 34, 35, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 66, 67, 68, 69, 70, 75, 76, 77, 78, 89, 153], "resnet_1001": 89, "resnet_101": 89, "resnet_152": 89, "resnet_18": 89, "resnet_200": 89, "resnet_269": 89, "resnet_34": 89, "resnet_50": 89, "resnet_arg": 75, "resnext": [35, 59, 60, 61, 62, 63, 64, 71, 72, 73, 74, 79, 89], "resnext_101_32x16d": 89, "resnext_101_32x32d": 89, "resnext_101_32x4d": 89, "resnext_101_32x8d": 89, "resnext_101_64x4d": 89, "resnext_50_32x4d": 89, "resolut": [71, 72, 73, 74, 79], "resourc": [42, 45, 46, 233], "respect": [10, 11, 12, 14, 15, 16, 17, 18, 20, 36, 80, 91, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 121, 123, 145, 154, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211, 212, 213, 214, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 269, 273, 274, 275, 276, 277, 280, 282, 284, 287, 288, 289, 295, 296, 298, 302, 310], "respons": [71, 72, 73, 74, 89, 94, 218], "restor": [153, 233], "restructur": 299, "result": [10, 14, 15, 17, 89, 92, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 121, 123, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 154, 166, 170, 173, 216, 217, 231, 233, 237, 238, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 290, 291, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 309, 310, 316], "resum": 218, "retain": [93, 243, 255, 262, 275, 276, 277, 284, 289, 306], "retent": 306, "retriev": [0, 2, 94, 96, 97], "return": [0, 1, 2, 3, 5, 6, 8, 32, 36, 65, 91, 92, 94, 95, 96, 97, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 204, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 234, 235, 305, 316], "reus": [89, 306], "reusabl": [98, 216, 305], "revers": [8, 98, 288, 311, 313], "revert": 233, "revolution": 89, "rgb": [29, 30, 31, 33, 34], "rho": 220, "rho_": 226, "rho_t": 226, "right": [15, 16, 17, 19, 20, 101, 107, 165, 173, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 212, 213, 214, 307], "risk": 235, "rmsprop": 230, "rob": 89, "robust": [146, 181, 182, 183, 184, 185, 194, 216, 220, 309, 310, 312, 316], "roland": 5, "role": [235, 242, 316], "root": [4, 5, 6, 221, 227, 282], "rotat": [120, 144, 312, 316], "rotated_imag": 146, "rout": [212, 213, 214], "routin": 8, "row": [11, 12, 14, 19, 123, 259, 295, 304], "rprop": 230, "rule": [14, 15, 232, 244, 245, 249, 250, 251, 253, 254], "run": [8, 91, 130, 132, 147, 148, 149, 198, 199, 200, 201, 202, 203, 220, 233, 240, 242], "running_mean": [91, 130, 132, 198, 199, 200, 201, 202, 203], "running_var": [130, 132, 198, 199, 200, 201, 202, 203], "runtim": [95, 98, 216], "s_": 228, "s_d": [211, 214], "s_h": [210, 211, 214], "s_w": [210, 211, 214], "sain": 89, "same": [11, 12, 14, 15, 19, 107, 114, 115, 116, 117, 118, 130, 132, 133, 135, 136, 146, 147, 148, 149, 150, 151, 152, 154, 170, 177, 178, 179, 181, 182, 183, 184, 185, 189, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 228, 240, 242, 248, 258, 261, 263, 273, 275, 276, 277, 291, 293, 297, 299, 300, 301, 304, 308], "sampl": [0, 1, 2, 3, 5, 6, 8, 29, 30, 31, 33, 34, 36, 37, 38, 39, 43, 44, 71, 72, 73, 74, 79, 134, 135, 136, 158, 159, 160, 161, 162, 163, 181, 182, 183, 184, 185, 188, 190, 193, 196, 204, 206, 207, 208, 239, 242, 307, 309, 311, 312, 313, 314], "sandler": 89, "satisfi": [10, 12, 19], "satur": [164, 316], "save": [2, 91, 93, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234], "scalabl": [3, 59, 60, 61, 62, 63, 64, 85, 89, 216], "scalar": [11, 16, 124, 125, 126, 128, 129, 235], "scale": [12, 17, 23, 33, 37, 38, 39, 40, 43, 48, 49, 50, 53, 66, 67, 75, 76, 77, 78, 89, 100, 105, 107, 130, 132, 133, 153, 154, 162, 163, 164, 166, 168, 171, 172, 173, 175, 181, 182, 183, 184, 185, 193, 198, 199, 200, 201, 202, 203, 204, 219, 221, 222, 223, 235, 242, 289, 314], "scenario": [96, 97, 204, 223, 224, 306, 310], "schedul": 219, "scientif": 232, "score": [47, 58, 75, 107, 193], "scratch": 8, "script": 242, "se": [66, 67, 68, 69, 70, 71, 72, 73, 74, 89], "se_resnet_101": 89, "se_resnet_152": 89, "se_resnet_18": 89, "se_resnet_34": 89, "se_resnet_50": 89, "se_resnext_101_32x4d": 89, "se_resnext_101_32x8d": 89, "se_resnext_101_64x4d": 89, "se_resnext_50_32x4d": 89, "seamless": [0, 1, 3, 4, 216, 242], "seamlessli": [3, 4, 9, 93, 95, 98, 216, 235, 316], "search": 89, "second": [12, 95, 96, 121, 153, 188, 222, 223, 224, 225, 226, 232, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 293, 295, 313], "section": 248, "see": [8, 248], "seed": [236, 237, 238, 239, 241, 242, 316], "seen": 220, "select": [75, 76, 77, 78, 79, 89, 145, 153, 154, 212, 214, 284], "selectivekernel": 155, "self": [0, 1, 2, 3, 8, 21, 28, 32, 36, 40, 41, 42, 65, 80, 87, 90, 91, 92, 93, 94, 95, 96, 97, 105, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 188, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 234, 295, 305, 306], "selu": [102, 114, 120, 176, 181, 187], "selunetwork": 171, "semodul": 155, "senet": [35, 66, 67, 68, 69, 70, 71, 72, 73, 74, 89], "sensit": [126, 194, 198, 199, 200], "sentiment": 4, "separ": [0, 40, 85, 89, 109, 110, 111, 150, 151, 152, 201, 202, 203], "sequenc": [15, 47, 58, 75, 94, 96, 109, 255, 291, 293, 296, 298, 301, 302, 304, 305], "sequenti": [21, 32, 36, 65, 80, 85, 87, 90, 94, 95, 99, 109, 147, 148, 149, 189, 305, 316], "seri": [28, 37, 38, 75, 109, 147, 177, 209, 212], "serial": [91, 92, 218], "serv": [3, 5, 23, 32, 65, 80, 92, 94, 95, 96, 97, 98, 216, 228, 306], "set": [3, 4, 5, 6, 56, 57, 71, 72, 73, 74, 79, 90, 93, 97, 109, 110, 111, 168, 169, 171, 177, 178, 179, 181, 184, 185, 188, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 217, 222, 223, 227, 237, 238, 239, 240, 241, 242, 243, 255, 257, 258, 262, 263, 269, 275, 277, 290, 306, 310, 316], "setup": [4, 8, 59, 60, 61, 62, 63, 64], "sever": [17, 177, 178, 179, 209, 210, 211, 212, 213, 214, 233, 305, 316], "sgd": [8, 219, 226, 230], "sgn": 16, "shape": [3, 4, 5, 6, 8, 11, 12, 14, 15, 17, 21, 23, 24, 25, 26, 27, 32, 36, 42, 45, 46, 47, 59, 60, 61, 62, 63, 64, 65, 71, 72, 73, 74, 76, 77, 78, 79, 80, 85, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 153, 154, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 232, 235, 237, 238, 239, 241, 242, 243, 246, 257, 258, 259, 260, 261, 262, 263, 269, 274, 275, 276, 277, 280, 282, 284, 288, 289, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 304, 307, 308, 309, 310, 311, 312, 313, 314, 316], "shapelik": 238, "share": 89, "shen": 153, "shift": [130, 132, 133, 166, 198, 199, 200, 201, 202, 203, 204], "shorthand": 248, "should": [36, 91, 233, 237, 238, 239, 241, 257, 258, 266, 267, 287, 296, 305], "show": [231, 234], "showcas": 8, "shown": [174, 240], "shrink": 220, "shuffl": [1, 2, 3], "side": [19, 95, 98, 109, 110, 111, 137, 138, 139, 141, 142, 143, 147, 148, 149, 177, 178, 179, 209, 210, 211, 212, 213, 214, 233], "sigma": [17, 153, 158, 160, 162, 172, 174, 198, 199, 200, 201, 202, 203, 204, 288], "sigma_c": 308, "sigma_i": 17, "sigmoid": [102, 120, 153, 158, 159, 162, 163, 166, 167, 174, 176, 187, 192], "sigmoidnetwork": 172, "sign": [15, 194, 228, 264], "signal": [147, 177, 178, 179, 198, 201, 209, 210, 211, 212, 213, 214], "signific": 233, "significantli": [41, 58, 89, 153, 305], "sim": [181, 182, 183, 184, 185], "similar": [8, 158, 159, 248, 274, 290, 296], "similarli": [20, 287], "simonyan": 89, "simpl": [3, 4, 8, 90, 98, 109, 110, 111, 121, 123, 137, 138, 139, 141, 142, 143, 165, 166, 167, 169, 170, 171, 172, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 246, 247, 252, 305], "simplebinaryclassificationmodel": 192, "simpleclassificationmodel": [193, 196], "simplegelumodel": 165, "simplehardsigmoidmodel": 166, "simplehardswishmodel": 167, "simpleleakyrelumodel": 168, "simplemodel": [8, 90, 170, 190, 234], "simpleregressionmodel": 195, "simplerelumodel": 169, "simpleselumodel": 171, "simplesigmoidmodel": 172, "simpleswishmodel": 174, "simpletanhmodel": 175, "simpli": [231, 287, 288, 299], "simplic": [89, 166, 169], "simplifi": [4, 37, 86, 98, 147, 148, 149], "simul": [90, 316], "simultan": 146, "sin": [264, 270], "sinc": [15, 18, 94, 95, 96, 97, 109, 110, 111, 163, 231, 233, 239, 295, 316], "sine": [267, 280, 281], "singl": [0, 4, 15, 18, 20, 47, 107, 147, 148, 149, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 193, 204, 210, 211, 212, 213, 214, 217, 235, 241, 257, 291, 300, 308, 310, 316], "singleton": 204, "singular": [11, 14, 15, 17, 19, 20], "sinh": [264, 271, 286], "size": [0, 1, 2, 3, 20, 36, 37, 38, 39, 43, 45, 46, 47, 75, 87, 89, 90, 93, 95, 109, 110, 111, 113, 116, 117, 118, 124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 177, 178, 179, 188, 190, 192, 193, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 234, 238, 241, 242, 243, 275, 276, 277, 284, 289, 291, 293, 300, 303, 304, 307, 309, 314, 316], "sk": [75, 76, 77, 78, 79, 89, 154], "sk_resnet_18": 89, "sk_resnet_34": 89, "sk_resnet_50": 89, "sk_resnext_50_32x4d": 89, "skblock": 75, "skip": [89, 233], "sknet": [35, 76, 77, 78, 79, 89], "slice": [121, 287], "slide": [113, 209, 211, 212, 214], "slight": 153, "slightli": 316, "slope": [103, 164, 168], "slow": [3, 226], "small": [17, 37, 38, 39, 42, 45, 46, 89, 103, 124, 125, 130, 132, 133, 168, 171, 192, 193, 194, 198, 199, 200, 201, 202, 203, 204, 210, 213, 220, 221, 222, 223, 224, 225, 226, 227, 228], "smaller": [87, 89, 95, 98, 216, 221, 222, 250, 307, 309, 314], "smallest": 277, "smooth": [30, 101, 164, 165, 174, 219, 227, 316], "smoother": 219, "so": [94, 95, 96, 97, 146, 216, 226, 257, 258, 305], "softmax": [102, 120, 154, 176, 187, 193], "softmaxmodel": 173, "solut": [17, 19], "solv": [9, 10, 13, 17, 18, 20], "solver": 9, "some": [100, 115, 146, 181, 182, 183, 198, 199, 200, 201, 202, 203, 221, 222, 223, 233, 235], "sometim": 232, "sophist": [95, 98], "sourc": 242, "space": [12, 18, 20, 109, 110, 111, 113, 134, 135, 136, 147, 148, 149, 150, 151, 152, 177, 178, 179, 206, 207, 208, 255, 316], "span": 4, "spars": [221, 222], "spatial": [21, 47, 58, 75, 80, 87, 89, 148, 153, 178, 179, 198, 199, 200, 201, 202, 203, 204, 210, 211, 212, 213, 214, 295], "spatial_dim": 153, "spatio": 179, "special": [0, 1, 8, 17, 91, 92, 93, 181, 242], "specif": [4, 8, 24, 25, 26, 27, 32, 40, 56, 57, 94, 95, 96, 97, 98, 154, 163, 181, 182, 183, 184, 185, 201, 202, 203, 216, 217, 231, 242, 257, 275, 277, 298, 302], "specifi": [0, 1, 2, 3, 4, 5, 6, 8, 16, 22, 23, 36, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 75, 77, 78, 80, 81, 82, 83, 84, 86, 88, 90, 95, 107, 113, 118, 124, 125, 126, 128, 129, 133, 134, 135, 136, 145, 146, 153, 173, 177, 178, 179, 192, 193, 194, 195, 196, 204, 206, 207, 208, 210, 211, 212, 213, 214, 217, 235, 237, 238, 239, 240, 241, 253, 255, 256, 257, 258, 259, 260, 262, 263, 269, 275, 276, 277, 284, 288, 289, 290, 291, 293, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 312, 314, 316], "speech": 201, "speed": [45, 46, 166, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229], "split": [4, 291, 293, 304], "springer": 89, "sqrt": [101, 158, 159, 162, 163, 165, 198, 199, 200, 201, 202, 203, 204, 220, 221, 222, 223, 225, 226, 227, 264, 266, 267], "squar": [1, 3, 10, 11, 12, 14, 15, 17, 18, 19, 20, 126, 128, 194, 195, 220, 221, 222, 227, 264, 282], "squaredataset": [0, 1, 2, 3], "squeez": [42, 45, 46, 65, 68, 71, 72, 73, 74, 89, 153, 294], "stabil": [14, 17, 89, 124, 125, 130, 132, 133, 147, 148, 149, 170, 192, 193, 198, 199, 200, 201, 202, 203, 204, 219, 220, 221, 222, 223, 224, 225, 226, 227, 308], "stabl": [158, 159, 162, 163, 181, 193, 219, 223, 224, 227, 228, 229], "stack": [98, 154, 293, 294, 304, 316], "stage": [47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 75, 76, 77, 78], "stage1": 65, "stage2": 65, "stage3": 65, "stage4": 65, "standalon": 170, "standard": [47, 56, 57, 101, 103, 150, 151, 152, 158, 160, 162, 164, 165, 168, 181, 228, 239, 242, 248, 305, 308, 316], "start": [1, 3, 219, 221, 228, 255, 307, 309], "state": [89, 91, 92, 93, 95, 98, 217, 231, 233, 240], "state_dict": [92, 93, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "static": 98, "statist": [17, 114, 130, 132], "std": [5, 6, 160, 305, 308, 316], "stem": [32, 47, 58, 75], "stem_typ": 47, "stem_width": 47, "step": [93, 113, 154, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 255, 305, 306], "step_siz": 228, "still": 220, "stochast": [8, 219, 229], "stop": 255, "storag": [94, 96, 243], "store": [2, 4, 5, 6, 47, 58, 75, 91, 92, 93, 94, 95, 96, 97, 153, 206, 207, 208, 233, 243, 307, 308, 309, 310, 311, 312, 313, 314], "str": [5, 6, 47, 80, 92, 94, 96, 98, 124, 125, 126, 128, 129, 145, 217, 234, 295], "straightforward": [229, 231, 244], "strategi": 218, "streamlin": [2, 3], "strict": [92, 217], "stride": [36, 37, 38, 39, 42, 45, 46, 95, 98, 109, 110, 111, 113, 134, 135, 136, 137, 138, 139, 141, 142, 143, 147, 148, 149, 150, 151, 152, 154, 177, 178, 179, 206, 207, 208, 209, 210, 211, 212, 213, 214], "stride_height": 113, "stride_width": 113, "string": [92, 94, 96, 98, 177, 178, 179, 217], "structur": [0, 8, 18, 42, 85, 91, 92, 95, 216, 217, 234, 235, 259, 306], "style": [32, 132, 201, 202, 295], "sub": [94, 95, 96, 97, 98, 216, 264, 307, 309], "sub_tensor": 243, "subclass": [1, 2, 3, 8, 92, 93, 94, 216, 217], "sublay": 90, "submodul": [90, 92, 216], "subsequ": [95, 98, 163, 242], "subset": [182, 183], "subtract": [8, 254, 308], "suffer": 221, "suit": [24, 25, 26, 27, 30, 40, 75, 158, 159, 162, 163], "suitabl": [32, 37, 38, 39, 41, 45, 46, 47, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 67, 68, 70, 89, 194, 221, 222, 237], "sum": [16, 94, 95, 96, 97, 98, 107, 124, 125, 126, 128, 129, 154, 173, 192, 193, 194, 195, 196, 221, 244, 247, 252, 264, 287, 289, 291, 293, 295, 298, 302, 304], "sum_": [15, 107, 173, 192, 193, 195, 196, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211, 246, 247, 276, 284, 287, 289, 295, 298], "sum_i": [16, 252], "sum_j": 252, "sum_k": 248, "summar": [56, 57, 85, 209, 210, 211], "summari": [56, 57, 71, 72, 73, 74, 79], "summat": 15, "sun": 153, "super": [8, 90, 91, 92, 93, 94, 95, 96, 97, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 188, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 204, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 234], "support": [1, 3, 4, 8, 9, 15, 16, 17, 18, 20, 43, 47, 94, 95, 96, 97, 98, 145, 146, 216, 218, 225, 242, 243, 244, 245, 248, 249, 250, 251, 253, 254, 256, 259, 269, 274, 276, 280, 282, 284, 287, 288, 289, 291, 295, 299, 306, 316], "suppos": 316, "sure": [216, 316], "svd": [13, 17], "swish": [45, 46, 176, 187], "symmetr": [10, 134, 135, 136, 162, 163, 175], "syntax": [1, 248], "system": [9, 10, 17, 18, 19, 89, 231, 295], "systemat": 316, "szegedi": [29, 89], "t": [17, 89, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 243, 248, 290, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316], "t0": 219, "t1": 290, "t2": 290, "tabular": 4, "tailor": [4, 42, 216, 316], "take": [18, 209, 210, 211, 212, 213, 214, 233, 305], "taken": 287, "tan": [89, 264], "tangent": [108, 175, 268, 285, 286], "tanh": [36, 95, 98, 101, 102, 120, 158, 159, 162, 163, 165, 176, 187, 264], "tanhnetwork": 175, "target": [5, 6, 98, 124, 125, 126, 128, 129, 134, 135, 136, 145, 192, 193, 194, 195, 196, 206, 207, 208, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 307, 309, 314], "target_tensor": [192, 193, 194, 195, 196], "target_transform": [5, 6], "task": [4, 8, 9, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 79, 85, 89, 106, 107, 110, 121, 124, 125, 128, 129, 153, 154, 172, 173, 177, 178, 179, 192, 193, 194, 195, 196, 201, 202, 203, 209, 211, 212, 214, 222, 232, 242, 259, 316], "techniqu": [10, 14, 87, 130, 181, 182, 183, 184, 185, 201, 202, 203, 218, 314, 316], "tempor": [177, 179, 211, 214], "temporarili": 233, "tensor": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 59, 60, 61, 62, 63, 64, 65, 76, 77, 78, 80, 85, 87, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 231, 233, 235, 237, 238, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316], "term": [17, 121, 147, 148, 149, 150, 151, 152, 219, 223, 225, 226, 227, 229], "test": [4, 5, 6], "test_backward": 90, "test_siz": [5, 6], "text": [4, 11, 15, 16, 47, 58, 75, 76, 77, 78, 85, 94, 100, 103, 104, 105, 107, 109, 110, 111, 134, 135, 136, 137, 138, 139, 141, 142, 143, 147, 148, 149, 150, 151, 152, 153, 154, 158, 159, 162, 163, 164, 166, 167, 168, 169, 170, 171, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 192, 193, 194, 195, 196, 209, 210, 211, 212, 213, 214, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 238, 244, 245, 247, 249, 250, 251, 253, 254, 265, 269, 275, 276, 277, 279, 284, 289, 291, 293, 296, 297, 298, 299, 300, 302, 303, 304, 307, 308, 309, 311, 312, 313], "th": [121, 192, 193, 195, 196, 201, 202, 203, 249, 250, 253], "than": [0, 1, 5, 96, 97, 100, 103, 126, 150, 151, 152, 164, 168, 174, 194, 217, 223, 269, 287, 296, 301, 307, 309, 314], "thei": [0, 8, 20, 89, 91, 95, 97, 98, 235, 295, 299, 307, 309, 316], "them": [3, 92, 97, 113, 219, 232, 291, 301, 305, 308, 316], "therebi": [181, 210, 211, 213, 214], "theta": [219, 220, 312], "theta_": [219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "theta_t": [226, 227], "thi": [0, 1, 2, 3, 5, 6, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 40, 41, 42, 44, 45, 46, 47, 56, 57, 58, 59, 60, 61, 62, 63, 64, 71, 72, 73, 74, 75, 76, 77, 78, 79, 85, 89, 90, 91, 93, 95, 96, 97, 98, 104, 106, 107, 108, 109, 110, 111, 113, 121, 123, 134, 145, 146, 150, 151, 152, 153, 154, 158, 159, 162, 163, 164, 165, 166, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 206, 209, 210, 211, 212, 213, 214, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 238, 239, 240, 242, 243, 247, 248, 252, 255, 257, 260, 261, 262, 263, 269, 273, 274, 275, 276, 277, 280, 282, 284, 287, 288, 289, 290, 296, 298, 299, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316], "thing": 233, "those": [8, 37, 38, 39, 97, 163], "three": [20, 39, 111, 136, 139, 143, 147, 148, 149, 179, 185, 200, 203, 208, 211, 214], "threshold": [17, 126, 194], "through": [0, 3, 4, 8, 12, 17, 18, 20, 21, 28, 32, 36, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 76, 77, 78, 86, 87, 94, 95, 98, 121, 123, 145, 153, 154, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 198, 199, 200, 201, 204, 209, 210, 211, 212, 213, 214, 239, 246, 247, 252, 295, 297, 299, 300, 303, 316], "throughout": [105, 306], "tile": 294, "time": [0, 3, 15, 37, 38, 39, 41, 109, 147, 168, 171, 177, 209, 210, 211, 212, 213, 214, 219, 220, 221, 222, 223, 227, 229, 233, 298, 302], "to_tensor": [5, 6], "togeth": [98, 305, 316], "too": 228, "tool": [3, 8, 216, 232, 242, 305, 316], "top": [10, 11, 12, 18, 20, 121, 123, 145, 177, 178, 179, 188, 190, 307, 309], "torch": [80, 290], "total": [0, 1, 2, 5, 6, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 88, 90, 93, 243, 299], "totensor": [305, 316], "trace": [9, 264], "track": [8, 147, 148, 149, 198, 199, 200, 201, 202, 203, 216, 231, 233, 237, 238, 239, 241, 255, 256, 257, 258, 259, 260, 261, 262, 263, 290, 306], "track_running_stat": [147, 148, 149, 198, 199, 200, 201, 202, 203], "tradit": [5, 220, 221, 224, 225, 226], "trail": 133, "train": [1, 2, 3, 4, 5, 6, 8, 28, 29, 30, 71, 72, 73, 74, 79, 89, 90, 91, 92, 95, 97, 98, 107, 114, 115, 116, 117, 118, 130, 132, 146, 165, 168, 171, 172, 173, 175, 181, 182, 183, 184, 185, 198, 199, 200, 201, 202, 203, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 305, 308, 309, 310, 311, 312, 313, 316], "trainabl": [90, 198, 199, 200, 201, 202, 203, 216], "transact": 153, "transfer": [132, 201, 202], "transform": [2, 4, 5, 6, 8, 12, 89, 96, 121, 123, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 232, 295], "transform_pipelin": [305, 316], "transformed_imag": [305, 316], "transit": [23, 194], "translat": [210, 213], "transpos": [8, 10, 264], "treat": [0, 91, 204, 216], "triangular": [10, 18], "true": [1, 2, 3, 4, 5, 6, 20, 28, 29, 30, 45, 46, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 113, 114, 115, 116, 117, 118, 121, 123, 130, 132, 145, 147, 148, 149, 150, 151, 152, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211, 212, 213, 214, 216, 217, 222, 223, 227, 231, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306], "truncat": 90, "truncate_from": 90, "try": 0, "tune": 316, "tupl": [2, 3, 5, 6, 12, 18, 20, 23, 47, 90, 92, 93, 109, 110, 111, 113, 133, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 177, 178, 179, 189, 204, 207, 208, 209, 210, 211, 212, 213, 214, 222, 223, 224, 225, 226, 228, 235, 237, 238, 239, 241, 243, 257, 260, 262, 275, 276, 277, 284, 289, 291, 293, 295, 296, 299, 300, 301, 303, 304, 307, 308, 309, 314], "twice": 296, "two": [8, 11, 12, 14, 15, 17, 18, 20, 37, 38, 39, 42, 76, 80, 109, 110, 111, 121, 138, 142, 153, 154, 178, 184, 188, 199, 202, 210, 213, 222, 223, 224, 225, 226, 228, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 287, 295], "type": [36, 47, 65, 75, 91, 92, 93, 121, 188, 243, 255, 256, 257, 258, 259, 260, 261, 262, 263, 290, 295, 306], "typeerror": [0, 1, 2, 92, 217], "typic": [9, 47, 58, 75, 91, 107, 114, 146, 153, 170, 171, 173, 196, 198, 199, 200, 201, 202, 203, 218, 219, 227, 229, 233, 235, 303, 306, 308, 312, 314, 316], "u": [17, 20, 159, 161, 163], "u_": 224, "ultra": 53, "unchang": [91, 118, 164, 168, 169, 171, 181, 182, 183, 184, 185, 189, 297, 300], "undefin": 253, "under": [59, 60, 61, 62, 63, 64, 216], "underbrac": 15, "underdetermin": 17, "undergo": 316, "underli": [0, 8, 29, 30, 31, 33, 34, 290, 293, 297, 299, 304], "understand": [8, 87, 89, 90, 98, 316], "unexpect": [92, 95, 98, 242], "unfold": [112, 120], "unifi": 0, "uniform": [157, 159, 163, 177, 178, 179, 188, 190, 236, 237, 238, 242, 310, 311, 312, 313], "uniformli": [237, 241], "uniniti": [257, 258], "unintend": 233, "union": 80, "uniqu": [10, 17, 19, 94, 96], "unit": [21, 36, 87, 100, 101, 103, 104, 105, 158, 159, 162, 163, 164, 165, 168, 169, 171, 181], "unless": [48, 49, 50, 51, 52, 53, 54, 55, 66, 67, 68, 69, 70, 243], "unlik": [91, 94, 95, 96, 97, 103, 164, 168, 181, 204, 220, 221, 223, 224, 225, 226, 228], "unnecessari": 233, "unpad": 296, "unseen": 316, "unsqueez": 294, "unstabl": 14, "up": [217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 312, 314], "updat": [4, 91, 97, 98, 181, 182, 183, 184, 185, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233], "upon": [30, 42, 89, 94, 95, 96, 97], "upper": [18, 161, 228, 241], "us": [0, 2, 3, 4, 5, 6, 8, 9, 10, 12, 14, 15, 17, 18, 20, 23, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 65, 66, 67, 68, 69, 70, 75, 76, 77, 78, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 121, 123, 128, 130, 132, 135, 136, 145, 146, 147, 148, 149, 153, 154, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 231, 232, 233, 234, 237, 238, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 273, 275, 276, 277, 284, 289, 295, 296, 298, 300, 302, 303, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316], "usag": [3, 9, 23, 85, 95, 98, 150, 151, 152, 217, 218, 307, 308, 309, 310, 311, 312, 313, 314], "use_aux": [28, 29, 30], "use_h": [45, 46], "use_s": [45, 46], "user": [1, 2, 3, 4, 8, 94, 95, 96, 97, 216, 221, 305, 306, 316], "usual": 193, "util": [3, 8, 9, 76, 77, 78, 96, 97, 216, 242], "v": [12, 17, 20, 89, 222, 223, 225, 226, 256], "v1": [28, 29, 32, 33, 34, 40, 41, 89], "v2": [32, 34, 35, 41, 42, 44, 89], "v3": [28, 30, 31, 35, 42, 45, 46, 89], "v4": [28, 31, 89], "v_": [219, 222, 223, 225, 226, 227, 229], "v_stack": 304, "v_t": [226, 227], "val": 156, "valid": [147, 148, 149, 150, 151, 152, 154, 177, 178, 179, 288], "valu": [8, 11, 15, 16, 17, 20, 40, 56, 57, 90, 92, 94, 96, 98, 100, 103, 106, 107, 108, 109, 110, 111, 113, 124, 125, 126, 128, 129, 130, 132, 133, 134, 145, 146, 147, 148, 149, 153, 156, 158, 159, 160, 161, 162, 163, 164, 168, 169, 170, 171, 172, 175, 181, 182, 183, 184, 185, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 209, 210, 211, 212, 213, 214, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 235, 237, 238, 239, 240, 241, 242, 255, 256, 257, 258, 259, 265, 266, 267, 269, 272, 273, 274, 275, 277, 279, 280, 282, 283, 291, 296, 297, 299, 303, 308, 310, 311, 313], "valuabl": 242, "valueerror": [1, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 217], "van": 89, "vanish": [89, 164, 171, 198, 199, 200], "var": 264, "vari": [75, 95, 97, 134, 145, 206, 312], "variabl": [92, 98, 134, 135, 136, 189, 206, 207, 208, 216, 231, 233, 237, 257, 309, 312], "varianc": [105, 114, 130, 132, 147, 148, 149, 158, 159, 162, 163, 171, 181, 198, 199, 200, 201, 202, 203, 204, 222, 223, 224, 225, 226, 239, 289, 312, 316], "variant": [23, 24, 25, 26, 27, 42, 45, 46, 56, 57, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 222, 223, 224], "variat": [150, 151, 152, 201, 202, 203, 309, 316], "varieti": [4, 32, 242, 316], "variou": [5, 23, 28, 33, 34, 36, 43, 89, 169, 218, 242, 275, 277, 296, 306], "vasudevan": 89, "vdot": 252, "vector": [12, 17, 18, 19, 20, 121, 123, 188, 190, 246, 247, 248, 252], "veloc": [219, 227, 229], "veri": [17, 50, 52, 89, 220], "versa": 228, "versatil": [242, 295], "version": [20, 28, 32, 36, 37, 38, 227, 252, 310], "vertic": [301, 304, 313], "vgg": 80, "vggnet": [35, 81, 82, 83, 84, 89], "vggnet_11": 89, "vggnet_13": 89, "vggnet_16": 89, "vggnet_19": 89, "via": [3, 4, 75], "vice": 228, "video": [111, 118, 149, 179, 203, 211, 214], "view": [32, 36, 95, 210, 211, 212, 213, 214, 299], "vision": [40, 41, 44, 47, 89, 110, 178, 188, 316], "visual": [87, 89], "vol": 89, "vollgraf": 5, "volumetr": [111, 118, 149, 179, 203, 211, 214], "vstack": 294, "w": [47, 59, 60, 61, 62, 63, 64, 76, 77, 78, 89, 110, 111, 113, 117, 118, 121, 123, 135, 136, 138, 139, 142, 143, 145, 146, 148, 149, 153, 177, 178, 179, 188, 190, 199, 200, 202, 203, 207, 208, 211, 214, 307, 309], "w_": [110, 111, 135, 136, 138, 139, 142, 143, 145, 178, 179, 207, 208, 210, 211, 213, 214], "w_out": [110, 111, 138, 139, 142, 143], "wa": [29, 181, 182, 183, 184, 185, 233], "wai": [1, 22, 88, 231, 233, 299], "wang": 89, "want": [0, 8, 305, 307], "warn": [94, 96], "we": [3, 8, 232, 295], "weight": [48, 49, 50, 51, 52, 53, 54, 55, 66, 67, 68, 69, 70, 89, 109, 110, 111, 121, 123, 124, 125, 129, 130, 132, 133, 145, 153, 154, 158, 159, 162, 163, 177, 178, 179, 181, 182, 183, 184, 185, 188, 190, 192, 193, 196, 198, 199, 200, 201, 202, 203, 204, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 237, 242], "weight1": 96, "weight2": 96, "weight_decai": [219, 220, 221, 222, 223, 224, 225, 226, 227, 229], "weinberg": 89, "well": [24, 25, 26, 27, 30, 75, 158, 159], "were": 98, "weyand": 89, "what": 233, "when": [0, 1, 3, 8, 15, 92, 95, 97, 98, 100, 103, 109, 110, 111, 164, 189, 198, 199, 200, 201, 202, 203, 217, 220, 228, 231, 233, 234, 235, 242, 253, 305, 307], "where": [3, 4, 5, 6, 11, 12, 14, 15, 16, 17, 18, 20, 45, 46, 85, 89, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 116, 117, 118, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 153, 154, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211, 212, 213, 214, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 235, 242, 244, 245, 249, 250, 251, 253, 254, 257, 258, 269, 273, 274, 275, 276, 277, 280, 282, 284, 287, 288, 289, 291, 296, 298, 302, 305, 306, 307, 308, 309, 310, 311, 312, 313], "whether": [1, 11, 28, 29, 30, 45, 46, 92, 93, 158, 159, 227, 231, 237, 238, 239, 241, 243, 257, 258, 275, 276, 277, 284, 289], "which": [0, 5, 8, 11, 12, 14, 15, 16, 17, 18, 20, 31, 34, 40, 41, 43, 71, 72, 73, 74, 75, 79, 81, 82, 83, 84, 89, 92, 94, 96, 98, 103, 107, 126, 146, 150, 151, 152, 154, 164, 165, 168, 170, 173, 175, 181, 194, 196, 198, 199, 200, 201, 202, 203, 204, 222, 223, 225, 227, 231, 233, 235, 237, 238, 241, 266, 267, 268, 269, 270, 271, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 289, 291, 298, 299, 301, 303, 306, 307, 309, 310, 311, 312, 313, 314, 316], "while": [8, 34, 40, 58, 59, 60, 61, 62, 63, 64, 71, 72, 73, 74, 79, 89, 95, 98, 114, 165, 169, 170, 216, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 233, 299, 301, 310, 316], "who": [8, 94, 95, 96, 97], "whose": [20, 258, 261, 263, 265, 269, 273, 279], "wide": [4, 6, 9, 17, 47, 55, 56, 57, 89, 104, 169, 177, 178, 193], "wide_resnet_101": 89, "wide_resnet_50": 89, "wider": [56, 57, 109, 110], "wideresnet": 89, "width": [40, 43, 56, 57, 58, 59, 60, 61, 62, 63, 64, 75, 85, 110, 111, 113, 117, 118, 135, 136, 138, 139, 142, 143, 145, 146, 154, 178, 179, 199, 200, 202, 203, 207, 208, 210, 211, 213, 214, 307, 309, 314], "width_multipli": [40, 43], "window": [137, 138, 139, 141, 142, 143, 209, 210, 211, 212, 213, 214, 220, 275, 277], "wise": [69, 71, 72, 73, 74, 89, 100, 101, 103, 104, 105, 106, 107, 108, 147, 148, 149, 153, 167, 173, 174, 181, 182, 183, 184, 185, 216, 232, 244, 245, 248, 249, 250, 251, 253, 254, 265, 266, 267, 268, 269, 270, 271, 272, 274, 278, 279, 280, 281, 282, 283, 285, 286, 287, 293, 304], "within": [2, 89, 90, 91, 94, 95, 96, 97, 98, 108, 145, 146, 163, 165, 166, 167, 169, 171, 172, 174, 175, 177, 178, 179, 181, 182, 183, 189, 192, 193, 194, 195, 196, 198, 199, 200, 201, 204, 209, 210, 211, 212, 213, 214, 218, 233, 255, 269, 312, 316], "without": [8, 58, 94, 95, 96, 121, 123, 177, 178, 179, 188, 190, 231, 234, 275, 297, 299, 303], "won": 233, "work": [1, 2, 3, 8, 10, 232, 235], "workflow": [242, 316], "workload": 8, "wrap": [3, 216, 233, 290], "wrapper": 216, "x": [8, 9, 19, 32, 36, 65, 80, 85, 89, 90, 91, 92, 94, 95, 96, 97, 98, 107, 121, 123, 146, 150, 151, 152, 154, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 237, 238, 239, 241, 257, 258, 273, 295, 307, 308, 309, 310, 311, 312, 313, 314], "x1": 188, "x2": 188, "x_": [193, 196, 295], "x_c": [193, 196], "x_i": 192, "x_k": 193, "xavier": [158, 159, 162, 163], "xavier_norm": 157, "xavier_uniform": 157, "xception": [35, 89], "xiao": 5, "xie": 89, "xy": 295, "x\u2081": 188, "x\u2082": 188, "y": [85, 89, 94, 95, 96, 97, 98, 146, 150, 151, 152, 164, 165, 166, 167, 168, 169, 171, 172, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211, 212, 213, 214, 237, 238, 239, 241, 257, 258, 295, 310], "y_": [193, 196, 295], "y_c": [193, 196], "y_i": 192, "yann": [6, 89], "yet": [8, 232], "yield": [0, 1, 92, 233], "you": [0, 42, 90, 95, 97, 98, 216, 218, 231, 233, 242, 257, 258, 259, 263, 288, 290, 305, 307, 316], "your": [42, 216, 218, 231, 233, 242, 316], "z": [89, 258, 262, 263], "zalandoresearch": 5, "zeiler": [87, 89], "zero": [15, 17, 18, 30, 90, 100, 103, 109, 110, 111, 114, 115, 116, 117, 118, 137, 138, 139, 141, 142, 143, 156, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 171, 177, 178, 179, 181, 182, 183, 184, 185, 204, 209, 210, 211, 212, 213, 214, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 257, 258, 259, 263, 264, 269, 279, 296], "zero_grad": [93, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 243], "zeros_lik": [258, 264], "zfnet": [35, 89], "zhang": 89, "zhmoginov": 89, "zhu": 89, "zisserman": 89, "\u03c3\u1d62": 17}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "FashionMNIST", "MNIST", "Image Datasets", "Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "alexnet", "DenseNet", "densenet_121", "densenet_169", "densenet_201", "densenet_264", "Inception", "inception_v1", "inception_v3", "inception_v4", "InceptionResNet", "inception_resnet_v1", "inception_resnet_v2", "ConvNets", "LeNet", "lenet_1", "lenet_4", "lenet_5", "MobileNet", "MobileNet_V2", "MobileNet_V3", "mobilenet", "mobilenet_v2", "mobilenet_v3_large", "mobilenet_v3_small", "ResNet", "resnet_1001", "resnet_101", "resnet_152", "resnet_18", "resnet_200", "resnet_269", "resnet_34", "resnet_50", "wide_resnet_101", "wide_resnet_50", "ResNeXt", "resnext_101_32x16d", "resnext_101_32x32d", "resnext_101_32x4d", "resnext_101_32x8d", "resnext_101_64x4d", "resnext_50_32x4d", "SENet", "se_resnet_101", "se_resnet_152", "se_resnet_18", "se_resnet_34", "se_resnet_50", "se_resnext_101_32x4d", "se_resnext_101_32x8d", "se_resnext_101_64x4d", "se_resnext_50_32x4d", "SKNet", "sk_resnet_18", "sk_resnet_34", "sk_resnet_50", "sk_resnext_50_32x4d", "VGGNet", "vggnet_11", "vggnet_13", "vggnet_16", "vggnet_19", "Xception", "xception", "ZFNet", "zfnet", "lucid.models", "models.summarize", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "nn.DepthSeparableConv1d", "nn.DepthSeparableConv2d", "nn.DepthSeparableConv3d", "nn.SEModule", "nn.SelectiveKernel", "Fused Layers", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.HardSigmoid", "nn.HardSwish", "nn.LeakyReLU", "nn.ReLU", "nn.ReLU6", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Swish", "nn.Tanh", "Activation Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "lucid.nn", "optim.Optimizer", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.types", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.meshgrid", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.unsqueeze", "lucid.vstack", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": 232, "1d": 232, "2": 232, "2d": 232, "3": 232, "It": [231, 233], "ab": 265, "activ": [102, 120, 176, 187], "ad": 232, "adadelta": 220, "adagrad": 221, "adam": 222, "adamax": 224, "adamw": 223, "adaptive_avg_pool1d": 134, "adaptive_avg_pool2d": 135, "adaptive_avg_pool3d": 136, "adaptiveavgpool1d": 206, "adaptiveavgpool2d": 207, "adaptiveavgpool3d": 208, "add": 244, "addit": 17, "admonit": 235, "advanc": [113, 316], "alexnet": [21, 22], "algebra": 13, "algorithm": [219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "alias": 235, "align": 232, "alpha_dropout": 114, "alphadropout": 181, "also": 218, "anoth": 290, "arang": 255, "arcco": 266, "architectur": [21, 37, 38, 39, 56, 57, 87], "arcsin": 267, "arctan": 268, "asgd": 219, "attent": 154, "attribut": [5, 6, 21, 32, 36, 47, 58, 65, 75, 80, 85, 87, 91, 93, 94, 95, 96, 97, 98, 147, 148, 149, 150, 151, 152, 153, 164, 165, 168, 169, 171, 172, 173, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 243, 307, 308, 309, 310, 311, 312, 313, 314], "avg_pool1d": 137, "avg_pool2d": 138, "avg_pool3d": 139, "avgpool1d": 209, "avgpool2d": 210, "avgpool3d": 211, "axi": 232, "backpropag": 243, "backward": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 121, 123, 145, 153, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211, 212, 213, 214, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304], "batch_norm": 130, "batchnorm": 155, "batchnorm1d": 198, "batchnorm2d": 199, "batchnorm3d": 200, "bceloss": 192, "behavior": [134, 135, 136, 206, 207, 208], "benefit": 233, "bilinear": [121, 188], "binari": 264, "binary_cross_entropi": 124, "bottleneck": [45, 46], "broadcast": 232, "buffer": 91, "calcul": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 47, 58, 65, 75, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 113, 121, 123, 134, 135, 136, 145, 147, 148, 149, 150, 151, 152, 153, 154, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 307, 308, 309, 310, 311, 312, 313, 314], "captur": 234, "case": 235, "centercrop": 307, "choleski": 10, "class": [0, 1, 2, 5, 6, 21, 23, 28, 32, 36, 40, 41, 42, 47, 58, 65, 75, 80, 85, 87, 91, 92, 93, 94, 95, 96, 97, 98, 147, 148, 149, 150, 151, 152, 153, 154, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 243, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "clip": 269, "co": 270, "combin": 0, "compon": [3, 8, 216], "compos": 305, "concatdataset": [0, 1], "concaten": 291, "conclus": [3, 8, 216, 231, 232, 233, 242, 306, 316], "configur": [45, 46], "constant": 156, "contain": 99, "conv": 155, "conv1d": [109, 177], "conv2d": [110, 178], "conv3d": [111, 179], "convbnrelu1d": 147, "convbnrelu2d": 148, "convbnrelu3d": 149, "convnet": [35, 89], "convolut": [112, 120, 155, 180, 187], "core": 8, "cosh": 271, "creat": [93, 243, 290], "cross_entropi": 125, "crossentropyloss": 193, "cube": 272, "custom": [1, 2, 3, 92, 217, 218, 316], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 7], "defin": [2, 92, 217, 218], "definit": 235, "densenet": 23, "densenet_121": 24, "densenet_169": 25, "densenet_201": 26, "densenet_264": 27, "depthseparableconv1d": 150, "depthseparableconv2d": 151, "depthseparableconv3d": 152, "depthwis": 155, "descript": [59, 60, 61, 62, 63, 64, 76, 77, 78, 234], "det": 11, "detail": [17, 56, 57], "diag": 256, "dilat": 113, "div": 245, "dot": 246, "dropout": [115, 119, 120, 182, 186, 187], "dropout1d": [116, 183], "dropout2d": [117, 184], "dropout3d": [118, 185], "eig": 12, "elu": [100, 164], "empti": 257, "empty_lik": 258, "exampl": [0, 1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 316], "excit": 155, "exp": 273, "ey": 259, "fashionmnist": 5, "featur": [4, 8, 9, 71, 72, 73, 74, 79, 218, 242, 316], "flatten": 292, "forward": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 47, 58, 65, 75, 85, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 113, 121, 123, 134, 135, 136, 145, 147, 148, 149, 150, 151, 152, 153, 154, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 307, 308, 309, 310, 311, 312, 313, 314], "from": 290, "function": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 88, 90, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 156, 158, 159, 160, 161, 162, 163, 231, 233, 234, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304], "fuse": 155, "futur": 4, "gelu": [101, 165], "gener": [236, 264], "get": 218, "grad_en": 231, "gradient": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 121, 123, 145, 153, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211, 212, 213, 214, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304], "guidelin": 235, "hardsigmoid": 166, "hardswish": 167, "how": [231, 233], "hstack": 293, "huber_loss": 126, "huberloss": 194, "ident": 189, "imag": [7, 315], "incept": 28, "inception_resnet_v1": 33, "inception_resnet_v2": 34, "inception_v1": 29, "inception_v3": 30, "inception_v4": 31, "inceptionresnet": 32, "index": 243, "init": [156, 158, 159, 160, 161, 162, 163], "initi": 157, "inner": 247, "input": 290, "inspect": [218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "instance_norm": 132, "instancenorm1d": 201, "instancenorm2d": 202, "instancenorm3d": 203, "integr": [3, 216, 242, 316], "interpol": 145, "inv": 14, "iter": 243, "kaiming_norm": 158, "kaiming_uniform": 159, "kei": [3, 4, 8, 71, 72, 73, 74, 79, 216, 218, 242, 316], "kernel": 155, "layer": [155, 176, 180, 186, 187, 191, 197, 205, 215], "layer_norm": 133, "layernorm": 204, "leaky_relu": 103, "leakyrelu": 168, "learn": 242, "lenet": 36, "lenet_1": 37, "lenet_4": 38, "lenet_5": 39, "limit": 8, "linalg": [9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20], "linear": [13, 120, 122, 123, 187, 190, 191], "list": 290, "load": 1, "log": 274, "loss": [120, 127, 187, 197], "lucid": [3, 4, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 89, 120, 216, 218, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 316], "matmul": 248, "matrix": 248, "matrix_pow": 15, "max": 275, "max_pool1d": 141, "max_pool2d": 142, "max_pool3d": 143, "maximum": 249, "maxpool1d": 212, "maxpool2d": 213, "maxpool3d": 214, "mean": 276, "mechan": 154, "meshgrid": 295, "metadata": 234, "method": [0, 1, 2, 5, 6, 32, 36, 80, 92, 93, 217, 243], "min": 277, "minimum": 250, "mnist": 6, "mobilenet": [40, 43], "mobilenet_v2": [41, 44], "mobilenet_v3": 42, "mobilenet_v3_larg": 45, "mobilenet_v3_smal": 46, "model": [89, 90, 216], "modul": [92, 187], "moduledict": 94, "modulelist": 95, "more": 242, "mse_loss": 128, "mseloss": 195, "mul": 251, "multipl": [0, 248], "nadam": 225, "new": 232, "newaxi": 232, "nll_loss": 129, "nllloss": 196, "nn": [91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216], "no_grad": 233, "norm": 16, "normal": [120, 131, 160, 187, 205, 308], "note": 8, "number": 236, "ones": 260, "ones_lik": 261, "oper": [13, 248, 264], "optim": [217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230], "organ": 216, "outer": 252, "overview": [3, 4, 8, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 48, 49, 50, 51, 52, 53, 54, 55, 66, 67, 68, 69, 70, 216, 218, 242, 316], "pad": 296, "paramet": [1, 5, 6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 168, 169, 171, 172, 173, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "parameterdict": 96, "parameterlist": 97, "pass": 85, "perform": 243, "pinv": 17, "pipelin": [3, 316], "pitfal": [231, 233], "pool": [120, 140, 187, 215], "potenti": [231, 233], "power": 253, "properti": [93, 243], "qr": 18, "radam": 226, "rais": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20], "rand": 237, "randint": 238, "randn": 239, "random": [236, 237, 238, 239, 240, 241, 242], "randomcrop": 309, "randomgrayscal": 310, "randomhorizontalflip": 311, "randomrot": 312, "randomverticalflip": 313, "ravel": 297, "reciproc": 278, "refer": [5, 6, 153, 218], "register_model": 234, "relu": [104, 155, 169], "relu6": 170, "repeat": 298, "reshap": 299, "resiz": 314, "resnet": 47, "resnet_1001": 48, "resnet_101": 49, "resnet_152": 50, "resnet_18": 51, "resnet_200": 52, "resnet_269": 53, "resnet_34": 54, "resnet_50": 55, "resnext": 58, "resnext_101_32x16d": 59, "resnext_101_32x32d": 60, "resnext_101_32x4d": 61, "resnext_101_32x8d": 62, "resnext_101_64x4d": 63, "resnext_50_32x4d": 64, "return": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 88, 90, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 154, 156, 158, 159, 160, 161, 162, 163, 170, 231, 233, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304], "rmsprop": 227, "rotat": 146, "rprop": 228, "rule": 248, "se_resnet_101": 66, "se_resnet_152": 67, "se_resnet_18": 68, "se_resnet_34": 69, "se_resnet_50": 70, "se_resnext_101_32x4d": 71, "se_resnext_101_32x8d": 72, "se_resnext_101_64x4d": 73, "se_resnext_50_32x4d": 74, "see": 218, "seed": 240, "select": 155, "selectivekernel": 154, "selu": [105, 171], "semodul": 153, "senet": 65, "separ": 155, "sequenti": 98, "sgd": 229, "sigmoid": [106, 172], "sign": 279, "signatur": [0, 1, 2, 5, 6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314], "sin": 280, "sinh": 281, "sk_resnet_18": 76, "sk_resnet_34": 77, "sk_resnet_50": 78, "sk_resnext_50_32x4d": 79, "sknet": 75, "slice": 243, "softmax": [107, 173], "solv": 19, "sqrt": 282, "squar": 283, "squeez": [155, 300], "stack": 301, "start": 218, "state": [218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "sub": 254, "sum": 284, "summar": 90, "summari": 90, "svd": 20, "swish": 174, "tabl": 90, "tan": 285, "tanh": [108, 175, 286], "tensor": [232, 243, 264, 290, 294], "through": 243, "tile": 302, "totensor": 306, "trace": 287, "track": 243, "transform": [305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316], "transpos": 288, "type": 235, "unari": 264, "unfold": 113, "uniform": [161, 241], "unsqueez": 303, "us": [1, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 235, 290], "usag": [4, 8, 29, 30, 31, 33, 34, 36, 37, 38, 39, 71, 72, 73, 74, 79, 91, 146, 231, 232, 233, 235, 295, 305, 306, 316], "util": [120, 144], "utilit": 294, "var": 289, "vggnet": 80, "vggnet_11": 81, "vggnet_13": 82, "vggnet_16": 83, "vggnet_19": 84, "vstack": 304, "weight": 157, "why": 235, "wide_resnet_101": 56, "wide_resnet_50": 57, "work": [4, 231, 233], "xavier_norm": 162, "xavier_uniform": 163, "xception": [85, 86], "zero": 262, "zeros_lik": 263, "zfnet": [87, 88]}})