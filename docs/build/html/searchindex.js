Search.setIndex({"alltitles": {"@ Operator": [[169, "operator"]], "Activation Functions": [[37, null]], "Activation Layers": [[98, null], [109, null]], "Additional Details": [[16, "additional-details"]], "Admonitions and Usage Guidelines": [[156, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[48, "advanced-example-with-dilation"]], "Advanced Features": [[237, "advanced-features"]], "Algorithm": [[141, "algorithm"], [142, "algorithm"], [143, "algorithm"], [144, "algorithm"], [145, "algorithm"], [146, "algorithm"], [147, "algorithm"], [148, "algorithm"], [149, "algorithm"], [150, "algorithm"], [151, "algorithm"]], "Architecture": [[22, "architecture"], [23, "architecture"], [24, "architecture"]], "Attributes": [[5, "attributes"], [21, "attributes"], [26, "attributes"], [28, "attributes"], [29, "attributes"], [30, "attributes"], [31, "attributes"], [32, "attributes"], [33, "attributes"], [90, "attributes"], [91, "attributes"], [92, "attributes"], [93, "attributes"], [94, "attributes"], [95, "attributes"], [96, "attributes"], [97, "attributes"], [99, "attributes"], [100, "attributes"], [101, "attributes"], [103, "attributes"], [104, "attributes"], [105, "attributes"], [106, "attributes"], [107, "attributes"], [110, "attributes"], [111, "attributes"], [112, "attributes"], [114, "attributes"], [115, "attributes"], [116, "attributes"], [117, "attributes"], [118, "attributes"], [120, "attributes"], [121, "attributes"], [122, "attributes"], [123, "attributes"], [124, "attributes"], [125, "attributes"], [126, "attributes"], [128, "attributes"], [129, "attributes"], [130, "attributes"], [131, "attributes"], [132, "attributes"], [133, "attributes"], [134, "attributes"], [135, "attributes"], [136, "attributes"], [164, "attributes"], [228, "attributes"], [229, "attributes"], [230, "attributes"], [231, "attributes"], [232, "attributes"], [233, "attributes"], [234, "attributes"], [235, "attributes"]], "Backward Gradient Calculation": [[9, "backward-gradient-calculation"], [10, "backward-gradient-calculation"], [11, "backward-gradient-calculation"], [13, "backward-gradient-calculation"], [14, "backward-gradient-calculation"], [15, "backward-gradient-calculation"], [16, "backward-gradient-calculation"], [17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [29, "backward-gradient-calculation"], [30, "backward-gradient-calculation"], [31, "backward-gradient-calculation"], [32, "backward-gradient-calculation"], [33, "backward-gradient-calculation"], [35, "backward-gradient-calculation"], [36, "backward-gradient-calculation"], [38, "backward-gradient-calculation"], [39, "backward-gradient-calculation"], [40, "backward-gradient-calculation"], [41, "backward-gradient-calculation"], [42, "backward-gradient-calculation"], [43, "backward-gradient-calculation"], [56, "backward-gradient-calculation"], [58, "backward-gradient-calculation"], [80, "backward-gradient-calculation"], [89, "backward-gradient-calculation"], [90, "backward-gradient-calculation"], [91, "backward-gradient-calculation"], [92, "backward-gradient-calculation"], [93, "backward-gradient-calculation"], [94, "backward-gradient-calculation"], [95, "backward-gradient-calculation"], [96, "backward-gradient-calculation"], [97, "backward-gradient-calculation"], [99, "backward-gradient-calculation"], [100, "backward-gradient-calculation"], [101, "backward-gradient-calculation"], [103, "backward-gradient-calculation"], [104, "backward-gradient-calculation"], [105, "backward-gradient-calculation"], [106, "backward-gradient-calculation"], [107, "backward-gradient-calculation"], [110, "backward-gradient-calculation"], [111, "backward-gradient-calculation"], [112, "backward-gradient-calculation"], [114, "backward-gradient-calculation"], [115, "backward-gradient-calculation"], [116, "backward-gradient-calculation"], [117, "backward-gradient-calculation"], [118, "backward-gradient-calculation"], [120, "backward-gradient-calculation"], [121, "backward-gradient-calculation"], [122, "backward-gradient-calculation"], [123, "backward-gradient-calculation"], [124, "backward-gradient-calculation"], [125, "backward-gradient-calculation"], [126, "backward-gradient-calculation"], [131, "backward-gradient-calculation"], [132, "backward-gradient-calculation"], [133, "backward-gradient-calculation"], [134, "backward-gradient-calculation"], [135, "backward-gradient-calculation"], [136, "backward-gradient-calculation"], [165, "backward-gradient-calculation"], [166, "backward-gradient-calculation"], [167, "backward-gradient-calculation"], [168, "backward-gradient-calculation"], [169, "backward-gradient-calculation"], [170, "backward-gradient-calculation"], [171, "backward-gradient-calculation"], [172, "backward-gradient-calculation"], [173, "backward-gradient-calculation"], [174, "backward-gradient-calculation"], [175, "backward-gradient-calculation"], [186, "backward-gradient-calculation"], [187, "backward-gradient-calculation"], [188, "backward-gradient-calculation"], [189, "backward-gradient-calculation"], [190, "backward-gradient-calculation"], [191, "backward-gradient-calculation"], [192, "backward-gradient-calculation"], [193, "backward-gradient-calculation"], [194, "backward-gradient-calculation"], [195, "backward-gradient-calculation"], [196, "backward-gradient-calculation"], [197, "backward-gradient-calculation"], [198, "backward-gradient-calculation"], [199, "backward-gradient-calculation"], [200, "backward-gradient-calculation"], [201, "backward-gradient-calculation"], [202, "backward-gradient-calculation"], [203, "backward-gradient-calculation"], [204, "backward-gradient-calculation"], [205, "backward-gradient-calculation"], [206, "backward-gradient-calculation"], [207, "backward-gradient-calculation"], [208, "backward-gradient-calculation"], [209, "backward-gradient-calculation"], [210, "backward-gradient-calculation"], [212, "backward-gradient-calculation"], [214, "backward-gradient-calculation"], [216, "backward-gradient-calculation"], [217, "backward-gradient-calculation"], [218, "backward-gradient-calculation"], [219, "backward-gradient-calculation"], [220, "backward-gradient-calculation"], [221, "backward-gradient-calculation"], [222, "backward-gradient-calculation"], [223, "backward-gradient-calculation"], [224, "backward-gradient-calculation"], [225, "backward-gradient-calculation"]], "Behavior": [[69, "behavior"], [70, "behavior"], [71, "behavior"], [128, "behavior"], [129, "behavior"], [130, "behavior"]], "Benefits": [[155, "benefits"]], "Binary Functions": [[185, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [21, "class-signature"], [26, "class-signature"], [27, "class-signature"], [28, "class-signature"], [29, "class-signature"], [30, "class-signature"], [31, "class-signature"], [32, "class-signature"], [33, "class-signature"], [90, "class-signature"], [91, "class-signature"], [92, "class-signature"], [93, "class-signature"], [94, "class-signature"], [95, "class-signature"], [96, "class-signature"], [97, "class-signature"], [99, "class-signature"], [100, "class-signature"], [101, "class-signature"], [103, "class-signature"], [104, "class-signature"], [105, "class-signature"], [106, "class-signature"], [107, "class-signature"], [110, "class-signature"], [111, "class-signature"], [112, "class-signature"], [114, "class-signature"], [115, "class-signature"], [116, "class-signature"], [117, "class-signature"], [118, "class-signature"], [120, "class-signature"], [121, "class-signature"], [122, "class-signature"], [123, "class-signature"], [124, "class-signature"], [125, "class-signature"], [126, "class-signature"], [128, "class-signature"], [129, "class-signature"], [130, "class-signature"], [131, "class-signature"], [132, "class-signature"], [133, "class-signature"], [134, "class-signature"], [135, "class-signature"], [136, "class-signature"], [139, "class-signature"], [141, "class-signature"], [142, "class-signature"], [143, "class-signature"], [144, "class-signature"], [145, "class-signature"], [146, "class-signature"], [147, "class-signature"], [148, "class-signature"], [149, "class-signature"], [150, "class-signature"], [151, "class-signature"], [164, "class-signature"], [226, "class-signature"], [227, "class-signature"], [228, "class-signature"], [229, "class-signature"], [230, "class-signature"], [231, "class-signature"], [232, "class-signature"], [233, "class-signature"], [234, "class-signature"], [235, "class-signature"]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [7, "conclusion"], [138, "conclusion"], [153, "conclusion"], [154, "conclusion"], [155, "conclusion"], [163, "conclusion"], [227, "conclusion"], [237, "conclusion"]], "Containers": [[34, null]], "ConvNets": [[20, null], [25, "convnets"]], "Convolution Functions": [[47, null], [55, null]], "Convolution Layers": [[102, null], [109, null]], "Core Components": [[7, "core-components"]], "Create a Tensor from a list": [[211, null]], "Creating a Parameter": [[28, null]], "Creating a tensor with gradient tracking": [[164, null]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[237, "custom-pipelines"]], "Defining a Custom Optimizer": [[140, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[27, null]], "Defining a custom optimizer": [[139, null]], "Dropout Functions": [[54, null], [55, null]], "Dropout Layers": [[108, null], [109, null]], "Example": [[3, null], [3, null], [3, null], [9, "example"], [10, "example"], [11, "example"], [13, "example"], [14, "example"], [15, "example"], [16, "example"], [17, "example"], [18, "example"], [19, "example"], [48, "example"], [138, null], [138, null], [138, null], [153, "example"], [155, "example"], [158, "example"], [159, "example"], [160, "example"], [161, "example"], [162, "example"], [163, null], [163, null], [163, null], [176, "example"], [177, "example"], [178, "example"], [179, "example"], [180, "example"], [181, "example"], [182, "example"], [183, "example"], [184, "example"], [186, "example"], [187, "example"], [188, "example"], [189, "example"], [190, "example"], [191, "example"], [192, "example"], [193, "example"], [195, "example"], [197, "example"], [199, "example"], [200, "example"], [201, "example"], [202, "example"], [203, "example"], [204, "example"], [205, "example"], [206, "example"], [207, "example"], [208, "example"], [209, "example"], [210, "example"], [212, "example"], [214, "example"], [218, "example"], [220, "example"], [221, "example"], [222, "example"], [224, "example"], [225, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[154, null]], "Example 2: Adding a new axis to a 2D tensor": [[154, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[154, null]], "Example Usage": [[7, "example-usage"], [21, "example-usage"], [22, "example-usage"], [23, "example-usage"], [24, "example-usage"], [81, "example-usage"], [226, "example-usage"], [227, "example-usage"], [237, "example-usage"]], "Example Use Cases": [[156, "example-use-cases"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [8, "examples"], [26, "examples"], [27, "examples"], [28, "examples"], [29, "examples"], [30, "examples"], [31, "examples"], [32, "examples"], [33, "examples"], [35, "examples"], [36, "examples"], [38, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [49, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [53, "examples"], [56, "examples"], [58, "examples"], [59, "examples"], [60, "examples"], [61, "examples"], [63, "examples"], [64, "examples"], [65, "examples"], [67, "examples"], [68, "examples"], [69, "examples"], [70, "examples"], [71, "examples"], [72, "examples"], [73, "examples"], [74, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [80, "examples"], [82, "examples"], [84, "examples"], [85, "examples"], [86, "examples"], [87, "examples"], [88, "examples"], [89, "examples"], [90, "examples"], [91, "examples"], [92, "examples"], [93, "examples"], [94, "examples"], [95, "examples"], [96, "examples"], [97, "examples"], [99, "examples"], [100, "examples"], [101, "examples"], [103, "examples"], [104, "examples"], [105, "examples"], [106, "examples"], [107, "examples"], [110, "examples"], [111, "examples"], [112, "examples"], [114, "examples"], [115, "examples"], [116, "examples"], [117, "examples"], [118, "examples"], [120, "examples"], [121, "examples"], [122, "examples"], [123, "examples"], [124, "examples"], [125, "examples"], [126, "examples"], [128, "examples"], [129, "examples"], [130, "examples"], [131, "examples"], [132, "examples"], [133, "examples"], [134, "examples"], [135, "examples"], [136, "examples"], [139, "examples"], [140, "examples"], [141, "examples"], [142, "examples"], [143, "examples"], [144, "examples"], [145, "examples"], [146, "examples"], [147, "examples"], [148, "examples"], [149, "examples"], [150, "examples"], [151, "examples"], [164, "examples"], [165, "examples"], [166, "examples"], [167, "examples"], [168, "examples"], [170, "examples"], [171, "examples"], [172, "examples"], [173, "examples"], [174, "examples"], [175, "examples"], [194, "examples"], [196, "examples"], [198, "examples"], [211, "examples"], [213, "examples"], [216, "examples"], [217, "examples"], [219, "examples"], [223, "examples"], [228, "examples"], [229, "examples"], [230, "examples"], [231, "examples"], [232, "examples"], [233, "examples"], [234, "examples"], [235, "examples"]], "Features": [[8, "features"]], "Forward Calculation": [[9, "forward-calculation"], [10, "forward-calculation"], [11, "forward-calculation"], [13, "forward-calculation"], [14, "forward-calculation"], [15, "forward-calculation"], [16, "forward-calculation"], [17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [29, "forward-calculation"], [30, "forward-calculation"], [31, "forward-calculation"], [32, "forward-calculation"], [33, "forward-calculation"], [35, "forward-calculation"], [36, "forward-calculation"], [38, "forward-calculation"], [39, "forward-calculation"], [40, "forward-calculation"], [41, "forward-calculation"], [42, "forward-calculation"], [43, "forward-calculation"], [48, "forward-calculation"], [56, "forward-calculation"], [58, "forward-calculation"], [69, "forward-calculation"], [70, "forward-calculation"], [71, "forward-calculation"], [80, "forward-calculation"], [84, "forward-calculation"], [85, "forward-calculation"], [88, "forward-calculation"], [89, "forward-calculation"], [90, "forward-calculation"], [91, "forward-calculation"], [92, "forward-calculation"], [93, "forward-calculation"], [94, "forward-calculation"], [95, "forward-calculation"], [96, "forward-calculation"], [97, "forward-calculation"], [99, "forward-calculation"], [100, "forward-calculation"], [101, "forward-calculation"], [103, "forward-calculation"], [104, "forward-calculation"], [105, "forward-calculation"], [106, "forward-calculation"], [107, "forward-calculation"], [110, "forward-calculation"], [111, "forward-calculation"], [112, "forward-calculation"], [114, "forward-calculation"], [115, "forward-calculation"], [116, "forward-calculation"], [117, "forward-calculation"], [118, "forward-calculation"], [120, "forward-calculation"], [121, "forward-calculation"], [122, "forward-calculation"], [123, "forward-calculation"], [124, "forward-calculation"], [125, "forward-calculation"], [126, "forward-calculation"], [128, "forward-calculation"], [129, "forward-calculation"], [130, "forward-calculation"], [131, "forward-calculation"], [132, "forward-calculation"], [133, "forward-calculation"], [134, "forward-calculation"], [135, "forward-calculation"], [136, "forward-calculation"], [165, "forward-calculation"], [166, "forward-calculation"], [167, "forward-calculation"], [168, "forward-calculation"], [169, "forward-calculation"], [170, "forward-calculation"], [171, "forward-calculation"], [172, "forward-calculation"], [173, "forward-calculation"], [174, "forward-calculation"], [175, "forward-calculation"], [186, "forward-calculation"], [187, "forward-calculation"], [188, "forward-calculation"], [189, "forward-calculation"], [190, "forward-calculation"], [191, "forward-calculation"], [192, "forward-calculation"], [193, "forward-calculation"], [194, "forward-calculation"], [195, "forward-calculation"], [196, "forward-calculation"], [197, "forward-calculation"], [198, "forward-calculation"], [199, "forward-calculation"], [200, "forward-calculation"], [201, "forward-calculation"], [202, "forward-calculation"], [203, "forward-calculation"], [204, "forward-calculation"], [205, "forward-calculation"], [206, "forward-calculation"], [207, "forward-calculation"], [208, "forward-calculation"], [209, "forward-calculation"], [210, "forward-calculation"], [212, "forward-calculation"], [214, "forward-calculation"], [216, "forward-calculation"], [217, "forward-calculation"], [218, "forward-calculation"], [219, "forward-calculation"], [220, "forward-calculation"], [221, "forward-calculation"], [222, "forward-calculation"], [223, "forward-calculation"], [224, "forward-calculation"], [225, "forward-calculation"], [228, "forward-calculation"], [229, "forward-calculation"], [230, "forward-calculation"], [231, "forward-calculation"], [232, "forward-calculation"], [233, "forward-calculation"], [234, "forward-calculation"], [235, "forward-calculation"]], "Function Signature": [[9, "function-signature"], [10, "function-signature"], [11, "function-signature"], [13, "function-signature"], [14, "function-signature"], [15, "function-signature"], [16, "function-signature"], [17, "function-signature"], [18, "function-signature"], [19, "function-signature"], [22, "function-signature"], [23, "function-signature"], [24, "function-signature"], [35, "function-signature"], [36, "function-signature"], [38, "function-signature"], [39, "function-signature"], [40, "function-signature"], [41, "function-signature"], [42, "function-signature"], [43, "function-signature"], [44, "function-signature"], [45, "function-signature"], [46, "function-signature"], [48, "function-signature"], [49, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [53, "function-signature"], [56, "function-signature"], [58, "function-signature"], [59, "function-signature"], [60, "function-signature"], [61, "function-signature"], [63, "function-signature"], [64, "function-signature"], [65, "function-signature"], [67, "function-signature"], [68, "function-signature"], [69, "function-signature"], [70, "function-signature"], [71, "function-signature"], [72, "function-signature"], [73, "function-signature"], [74, "function-signature"], [76, "function-signature"], [77, "function-signature"], [78, "function-signature"], [80, "function-signature"], [81, "function-signature"], [82, "function-signature"], [84, "function-signature"], [85, "function-signature"], [86, "function-signature"], [87, "function-signature"], [88, "function-signature"], [89, "function-signature"], [153, "function-signature"], [155, "function-signature"], [158, "function-signature"], [159, "function-signature"], [160, "function-signature"], [161, "function-signature"], [162, "function-signature"], [165, "function-signature"], [166, "function-signature"], [167, "function-signature"], [168, "function-signature"], [169, "function-signature"], [170, "function-signature"], [171, "function-signature"], [172, "function-signature"], [173, "function-signature"], [174, "function-signature"], [175, "function-signature"], [176, "function-signature"], [177, "function-signature"], [178, "function-signature"], [179, "function-signature"], [180, "function-signature"], [181, "function-signature"], [182, "function-signature"], [183, "function-signature"], [184, "function-signature"], [186, "function-signature"], [187, "function-signature"], [188, "function-signature"], [189, "function-signature"], [190, "function-signature"], [191, "function-signature"], [192, "function-signature"], [193, "function-signature"], [194, "function-signature"], [195, "function-signature"], [196, "function-signature"], [197, "function-signature"], [198, "function-signature"], [199, "function-signature"], [200, "function-signature"], [201, "function-signature"], [202, "function-signature"], [203, "function-signature"], [204, "function-signature"], [205, "function-signature"], [206, "function-signature"], [207, "function-signature"], [208, "function-signature"], [209, "function-signature"], [210, "function-signature"], [211, "function-signature"], [212, "function-signature"], [213, "function-signature"], [214, "function-signature"], [216, "function-signature"], [217, "function-signature"], [218, "function-signature"], [219, "function-signature"], [220, "function-signature"], [221, "function-signature"], [222, "function-signature"], [223, "function-signature"], [224, "function-signature"], [225, "function-signature"]], "Future Work": [[4, "future-work"]], "Getting Started": [[140, "getting-started"]], "How It Works": [[153, "how-it-works"], [155, "how-it-works"]], "Image Datasets": [[6, null]], "Image Transformations": [[236, null]], "Indexing and slicing": [[164, null]], "Inspecting Optimizer State": [[140, null], [141, null], [142, null], [143, null], [144, null], [145, null], [146, null], [147, null], [148, null], [149, null], [150, null], [151, null]], "Integration with lucid": [[3, "integration-with-lucid"], [138, "integration-with-lucid"], [163, "integration-with-lucid"], [237, "integration-with-lucid"]], "Iterating through a tensor": [[164, null]], "Key Components": [[3, "key-components"], [138, "key-components"]], "Key Features": [[4, "key-features"], [7, "key-features"], [140, "key-features"], [163, "key-features"]], "Key Transformations": [[237, "key-transformations"]], "LeNet": [[20, null], [21, null]], "Learn More": [[163, null]], "Limitations": [[7, "limitations"]], "Linear Algebra Operations": [[12, null]], "Linear Functions": [[55, null], [57, null]], "Linear Layers": [[109, null], [113, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[55, null], [62, null]], "Loss Layers": [[109, null], [119, null]], "Lucid": [[7, null]], "Matrix Multiplication Rules": [[169, "matrix-multiplication-rules"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [21, "methods"], [27, "methods"], [28, "methods"], [139, "methods"], [164, "methods"]], "Modules": [[109, null]], "Normalization Functions": [[55, null], [66, null]], "Normalization Layers": [[109, null], [127, null]], "Notes": [[7, "notes"]], "Optimizers": [[152, null]], "Organizing Models": [[138, "organizing-models"]], "Overview": [[3, "overview"], [4, "overview"], [7, "overview"], [21, "overview"], [22, "overview"], [23, "overview"], [24, "overview"], [138, "overview"], [140, "overview"], [163, "overview"], [237, "overview"]], "Parameters": [[1, "parameters"], [5, "parameters"], [9, "parameters"], [10, "parameters"], [11, "parameters"], [13, "parameters"], [14, "parameters"], [15, "parameters"], [16, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [21, "parameters"], [26, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [35, "parameters"], [36, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [56, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [87, "parameters"], [88, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [103, "parameters"], [104, "parameters"], [105, "parameters"], [106, "parameters"], [107, "parameters"], [110, "parameters"], [111, "parameters"], [112, "parameters"], [114, "parameters"], [115, "parameters"], [116, "parameters"], [117, "parameters"], [118, "parameters"], [120, "parameters"], [121, "parameters"], [122, "parameters"], [123, "parameters"], [124, "parameters"], [125, "parameters"], [126, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [155, "parameters"], [158, "parameters"], [159, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [164, "parameters"], [165, "parameters"], [166, "parameters"], [167, "parameters"], [168, "parameters"], [169, "parameters"], [170, "parameters"], [171, "parameters"], [172, "parameters"], [173, "parameters"], [174, "parameters"], [175, "parameters"], [176, "parameters"], [177, "parameters"], [178, "parameters"], [179, "parameters"], [180, "parameters"], [181, "parameters"], [182, "parameters"], [183, "parameters"], [184, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [189, "parameters"], [190, "parameters"], [191, "parameters"], [192, "parameters"], [193, "parameters"], [194, "parameters"], [195, "parameters"], [196, "parameters"], [197, "parameters"], [198, "parameters"], [199, "parameters"], [200, "parameters"], [201, "parameters"], [202, "parameters"], [203, "parameters"], [204, "parameters"], [205, "parameters"], [206, "parameters"], [207, "parameters"], [208, "parameters"], [209, "parameters"], [210, "parameters"], [211, "parameters"], [212, "parameters"], [213, "parameters"], [214, "parameters"], [216, "parameters"], [217, "parameters"], [218, "parameters"], [219, "parameters"], [220, "parameters"], [221, "parameters"], [222, "parameters"], [223, "parameters"], [224, "parameters"], [225, "parameters"], [226, "parameters"], [227, "parameters"], [228, "parameters"], [229, "parameters"], [230, "parameters"], [231, "parameters"], [232, "parameters"], [233, "parameters"], [234, "parameters"], [235, "parameters"]], "Performing backpropagation": [[164, null]], "Pooling Functions": [[55, null], [75, null]], "Pooling Layers": [[109, null], [137, null]], "Potential Pitfalls": [[153, "potential-pitfalls"], [155, "potential-pitfalls"]], "Properties": [[28, "properties"], [164, "properties"]], "Raises": [[9, "raises"], [10, "raises"], [11, "raises"], [13, "raises"], [14, "raises"], [15, "raises"], [16, "raises"], [17, "raises"], [18, "raises"], [19, "raises"]], "Random Number Generations": [[157, null]], "References": [[5, "references"], [140, "references"]], "Returns": [[9, "returns"], [10, "returns"], [11, "returns"], [13, "returns"], [14, "returns"], [15, "returns"], [16, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [22, "returns"], [23, "returns"], [24, "returns"], [35, "returns"], [36, "returns"], [38, "returns"], [39, "returns"], [40, "returns"], [41, "returns"], [42, "returns"], [43, "returns"], [44, "returns"], [45, "returns"], [46, "returns"], [48, "returns"], [49, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [53, "returns"], [56, "returns"], [58, "returns"], [59, "returns"], [60, "returns"], [61, "returns"], [63, "returns"], [64, "returns"], [65, "returns"], [67, "returns"], [68, "returns"], [69, "returns"], [70, "returns"], [71, "returns"], [72, "returns"], [73, "returns"], [74, "returns"], [76, "returns"], [77, "returns"], [78, "returns"], [80, "returns"], [81, "returns"], [82, "returns"], [84, "returns"], [85, "returns"], [86, "returns"], [87, "returns"], [88, "returns"], [89, "returns"], [153, "returns"], [155, "returns"], [158, "returns"], [159, "returns"], [160, "returns"], [161, "returns"], [162, "returns"], [165, "returns"], [166, "returns"], [167, "returns"], [168, "returns"], [169, "returns"], [170, "returns"], [171, "returns"], [172, "returns"], [173, "returns"], [174, "returns"], [175, "returns"], [176, "returns"], [177, "returns"], [178, "returns"], [179, "returns"], [180, "returns"], [181, "returns"], [182, "returns"], [183, "returns"], [184, "returns"], [186, "returns"], [187, "returns"], [188, "returns"], [189, "returns"], [190, "returns"], [191, "returns"], [192, "returns"], [193, "returns"], [194, "returns"], [195, "returns"], [196, "returns"], [197, "returns"], [198, "returns"], [199, "returns"], [200, "returns"], [201, "returns"], [202, "returns"], [203, "returns"], [204, "returns"], [205, "returns"], [206, "returns"], [207, "returns"], [208, "returns"], [209, "returns"], [210, "returns"], [211, "returns"], [212, "returns"], [213, "returns"], [214, "returns"], [216, "returns"], [217, "returns"], [218, "returns"], [219, "returns"], [220, "returns"], [221, "returns"], [222, "returns"], [223, "returns"], [224, "returns"], [225, "returns"]], "See Also": [[140, "see-also"]], "Tensor Generating Functions": [[185, null]], "Tensor Operations": [[185, null]], "Tensor Utilites": [[215, null]], "Type Definitions": [[156, "type-definitions"]], "Unary Functions": [[185, null]], "Usage": [[4, "usage"], [26, "usage"], [81, "usage"], [153, "usage"], [154, "usage"], [155, "usage"], [216, "usage"], [226, "usage"], [227, "usage"], [237, "usage"]], "Use another Tensor as input": [[211, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using the ASGD Optimizer": [[141, null]], "Using the Adadelta Optimizer": [[142, null]], "Using the Adagrad Optimizer": [[143, null]], "Using the Adam Optimizer": [[144, null]], "Using the AdamW Optimizer": [[145, null]], "Using the Adamax Optimizer": [[146, null]], "Using the NAdam Optimizer": [[147, null]], "Using the RAdam Optimizer": [[148, null]], "Using the RMSprop Optimizer": [[149, null]], "Using the Rprop Optimizer": [[150, null]], "Using the SGD Optimizer": [[151, null]], "Utility Functions": [[55, null], [79, null]], "Weight Initializations": [[83, null]], "Why Use Type Aliases?": [[156, null]], "activation Functions": [[55, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "datasets.MNIST": [[5, null]], "lucid.Tensor": [[164, null]], "lucid.abs": [[186, null]], "lucid.add": [[165, null]], "lucid.arange": [[176, null]], "lucid.arccos": [[187, null]], "lucid.arcsin": [[188, null]], "lucid.arctan": [[189, null]], "lucid.clip": [[190, null]], "lucid.concatenate": [[212, null]], "lucid.cos": [[191, null]], "lucid.cosh": [[192, null]], "lucid.cube": [[193, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[177, null]], "lucid.div": [[166, null]], "lucid.dot": [[167, null]], "lucid.empty": [[178, null]], "lucid.empty_like": [[179, null]], "lucid.exp": [[194, null]], "lucid.eye": [[180, null]], "lucid.flatten": [[213, null]], "lucid.grad_enabled": [[153, null]], "lucid.hstack": [[214, null]], "lucid.inner": [[168, null]], "lucid.linalg": [[8, null]], "lucid.linalg.cholesky": [[9, null]], "lucid.linalg.det": [[10, null]], "lucid.linalg.eig": [[11, null]], "lucid.linalg.inv": [[13, null]], "lucid.linalg.matrix_power": [[14, null]], "lucid.linalg.norm": [[15, null]], "lucid.linalg.pinv": [[16, null]], "lucid.linalg.qr": [[17, null]], "lucid.linalg.solve": [[18, null]], "lucid.linalg.svd": [[19, null]], "lucid.log": [[195, null]], "lucid.matmul": [[169, null]], "lucid.max": [[196, null]], "lucid.maximum": [[170, null]], "lucid.mean": [[197, null]], "lucid.meshgrid": [[216, null]], "lucid.min": [[198, null]], "lucid.minimum": [[171, null]], "lucid.models": [[25, null]], "lucid.mul": [[172, null]], "lucid.newaxis": [[154, null]], "lucid.nn": [[138, null]], "lucid.nn.functional": [[55, null]], "lucid.no_grad": [[155, null]], "lucid.ones": [[181, null]], "lucid.ones_like": [[182, null]], "lucid.optim": [[140, null]], "lucid.outer": [[173, null]], "lucid.pad": [[217, null]], "lucid.power": [[174, null]], "lucid.random": [[163, null]], "lucid.random.rand": [[158, null]], "lucid.random.randint": [[159, null]], "lucid.random.randn": [[160, null]], "lucid.random.seed": [[161, null]], "lucid.random.uniform": [[162, null]], "lucid.ravel": [[218, null]], "lucid.reciprocal": [[199, null]], "lucid.repeat": [[219, null]], "lucid.reshape": [[220, null]], "lucid.sign": [[200, null]], "lucid.sin": [[201, null]], "lucid.sinh": [[202, null]], "lucid.sqrt": [[203, null]], "lucid.square": [[204, null]], "lucid.squeeze": [[221, null]], "lucid.stack": [[222, null]], "lucid.sub": [[175, null]], "lucid.sum": [[205, null]], "lucid.tan": [[206, null]], "lucid.tanh": [[207, null]], "lucid.tensor": [[211, null]], "lucid.tile": [[223, null]], "lucid.trace": [[208, null]], "lucid.transforms": [[237, null]], "lucid.transpose": [[209, null]], "lucid.types": [[156, null]], "lucid.unsqueeze": [[224, null]], "lucid.var": [[210, null]], "lucid.vstack": [[225, null]], "lucid.zeros": [[183, null]], "lucid.zeros_like": [[184, null]], "models.lenet_1": [[22, null]], "models.lenet_4": [[23, null]], "models.lenet_5": [[24, null]], "nn.AdaptiveAvgPool1d": [[128, null]], "nn.AdaptiveAvgPool2d": [[129, null]], "nn.AdaptiveAvgPool3d": [[130, null]], "nn.AlphaDropout": [[103, null]], "nn.AvgPool1d": [[131, null]], "nn.AvgPool2d": [[132, null]], "nn.AvgPool3d": [[133, null]], "nn.BCELoss": [[114, null]], "nn.BatchNorm1d": [[120, null]], "nn.BatchNorm2d": [[121, null]], "nn.BatchNorm3d": [[122, null]], "nn.Bilinear": [[110, null]], "nn.Buffer": [[26, null]], "nn.Conv1d": [[99, null]], "nn.Conv2d": [[100, null]], "nn.Conv3d": [[101, null]], "nn.CrossEntropyLoss": [[115, null]], "nn.Dropout": [[104, null]], "nn.Dropout1d": [[105, null]], "nn.Dropout2d": [[106, null]], "nn.Dropout3d": [[107, null]], "nn.ELU": [[90, null]], "nn.GELU": [[91, null]], "nn.HuberLoss": [[116, null]], "nn.Identity": [[111, null]], "nn.InstanceNorm1d": [[123, null]], "nn.InstanceNorm2d": [[124, null]], "nn.InstanceNorm3d": [[125, null]], "nn.LayerNorm": [[126, null]], "nn.LeakyReLU": [[92, null]], "nn.Linear": [[112, null]], "nn.MSELoss": [[117, null]], "nn.MaxPool1d": [[134, null]], "nn.MaxPool2d": [[135, null]], "nn.MaxPool3d": [[136, null]], "nn.Module": [[27, null]], "nn.ModuleDict": [[29, null]], "nn.ModuleList": [[30, null]], "nn.NLLLoss": [[118, null]], "nn.Parameter": [[28, null]], "nn.ParameterDict": [[31, null]], "nn.ParameterList": [[32, null]], "nn.ReLU": [[93, null]], "nn.SELU": [[94, null]], "nn.Sequential": [[33, null]], "nn.Sigmoid": [[95, null]], "nn.Softmax": [[96, null]], "nn.Tanh": [[97, null]], "nn.functional.adaptive_avg_pool1d": [[69, null]], "nn.functional.adaptive_avg_pool2d": [[70, null]], "nn.functional.adaptive_avg_pool3d": [[71, null]], "nn.functional.alpha_dropout": [[49, null]], "nn.functional.avg_pool1d": [[72, null]], "nn.functional.avg_pool2d": [[73, null]], "nn.functional.avg_pool3d": [[74, null]], "nn.functional.batch_norm": [[65, null]], "nn.functional.bilinear": [[56, null]], "nn.functional.binary_cross_entropy": [[59, null]], "nn.functional.conv1d": [[44, null]], "nn.functional.conv2d": [[45, null]], "nn.functional.conv3d": [[46, null]], "nn.functional.cross_entropy": [[60, null]], "nn.functional.dropout": [[50, null]], "nn.functional.dropout1d": [[51, null]], "nn.functional.dropout2d": [[52, null]], "nn.functional.dropout3d": [[53, null]], "nn.functional.elu": [[35, null]], "nn.functional.gelu": [[36, null]], "nn.functional.huber_loss": [[61, null]], "nn.functional.instance_norm": [[67, null]], "nn.functional.interpolate": [[80, null]], "nn.functional.layer_norm": [[68, null]], "nn.functional.leaky_relu": [[38, null]], "nn.functional.linear": [[58, null]], "nn.functional.max_pool1d": [[76, null]], "nn.functional.max_pool2d": [[77, null]], "nn.functional.max_pool3d": [[78, null]], "nn.functional.mse_loss": [[63, null]], "nn.functional.nll_loss": [[64, null]], "nn.functional.relu": [[39, null]], "nn.functional.rotate": [[81, null]], "nn.functional.selu": [[40, null]], "nn.functional.sigmoid": [[41, null]], "nn.functional.softmax": [[42, null]], "nn.functional.tanh": [[43, null]], "nn.functional.unfold": [[48, null]], "nn.init.constant": [[82, null]], "nn.init.kaiming_normal": [[84, null]], "nn.init.kaiming_uniform": [[85, null]], "nn.init.normal": [[86, null]], "nn.init.uniform": [[87, null]], "nn.init.xavier_normal": [[88, null]], "nn.init.xavier_uniform": [[89, null]], "optim.ASGD": [[141, null]], "optim.Adadelta": [[142, null]], "optim.Adagrad": [[143, null]], "optim.Adam": [[144, null]], "optim.AdamW": [[145, null]], "optim.Adamax": [[146, null]], "optim.NAdam": [[147, null]], "optim.Optimizer": [[139, null]], "optim.RAdam": [[148, null]], "optim.RMSprop": [[149, null]], "optim.Rprop": [[150, null]], "optim.SGD": [[151, null]], "transforms.CenterCrop": [[228, null]], "transforms.Compose": [[226, null]], "transforms.Normalize": [[229, null]], "transforms.RandomCrop": [[230, null]], "transforms.RandomGrayscale": [[231, null]], "transforms.RandomHorizontalFlip": [[232, null]], "transforms.RandomRotation": [[233, null]], "transforms.RandomVerticalFlip": [[234, null]], "transforms.Resize": [[235, null]], "transforms.ToTensor": [[227, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/MNIST", "datasets/image/index", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/convnets/index", "models/convnets/lenet/LeNet", "models/convnets/lenet/lenet_1", "models/convnets/lenet/lenet_4", "models/convnets/lenet/lenet_5", "models/models", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/nn", "optim/Optimizer", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/types", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/meshgrid", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/convnets/index.rst", "models/convnets/lenet/LeNet.rst", "models/convnets/lenet/lenet_1.rst", "models/convnets/lenet/lenet_4.rst", "models/convnets/lenet/lenet_5.rst", "models/models.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/types.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"abs() (in module lucid)": [[186, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[142, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[143, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[144, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[146, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[145, "lucid.optim.AdamW", false]], "adaptive_avg_pool1d() (in module lucid.nn.functional)": [[69, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[70, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[71, "lucid.nn.functional.adaptive_avg_pool3d", false]], "adaptiveavgpool1d (class in lucid.nn)": [[128, "lucid.nn.AdaptiveAvgPool1d", false]], "adaptiveavgpool2d (class in lucid.nn)": [[129, "lucid.nn.AdaptiveAvgPool2d", false]], "adaptiveavgpool3d (class in lucid.nn)": [[130, "lucid.nn.AdaptiveAvgPool3d", false]], "add() (in module lucid)": [[165, "lucid.add", false]], "alpha_dropout() (in module lucid.nn.functional)": [[49, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[103, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[176, "lucid.arange", false]], "arccos() (in module lucid)": [[187, "lucid.arccos", false]], "arcsin() (in module lucid)": [[188, "lucid.arcsin", false]], "arctan() (in module lucid)": [[189, "lucid.arctan", false]], "asgd (class in lucid.optim)": [[141, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[72, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[73, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[74, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[131, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[132, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[133, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[65, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[120, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[121, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[122, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[114, "lucid.nn.BCELoss", false]], "bilinear (class in lucid.nn)": [[110, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[56, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[59, "lucid.nn.functional.binary_cross_entropy", false]], "buffer (class in lucid.nn)": [[26, "lucid.nn.Buffer", false]], "centercrop (class in lucid.transforms)": [[228, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[9, "lucid.linalg.cholesky", false]], "clip() (in module lucid)": [[190, "lucid.clip", false]], "compose (class in lucid.transforms)": [[226, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[212, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[82, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[99, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[44, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[100, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[45, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[101, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[46, "lucid.nn.functional.conv3d", false]], "cos() (in module lucid)": [[191, "lucid.cos", false]], "cosh() (in module lucid)": [[192, "lucid.cosh", false]], "cross_entropy() (in module lucid.nn.functional)": [[60, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[115, "lucid.nn.CrossEntropyLoss", false]], "cube() (in module lucid)": [[193, "lucid.cube", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "det() (in module lucid.linalg)": [[10, "lucid.linalg.det", false]], "diag() (in module lucid)": [[177, "lucid.diag", false]], "div() (in module lucid)": [[166, "lucid.div", false]], "dot() (in module lucid)": [[167, "lucid.dot", false]], "dropout (class in lucid.nn)": [[104, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[50, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[105, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[51, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[106, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[52, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[107, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[53, "lucid.nn.functional.dropout3d", false]], "eig() (in module lucid.linalg)": [[11, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[90, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[35, "lucid.nn.functional.elu", false]], "empty() (in module lucid)": [[178, "lucid.empty", false]], "empty_like() (in module lucid)": [[179, "lucid.empty_like", false]], "exp() (in module lucid)": [[194, "lucid.exp", false]], "eye() (in module lucid)": [[180, "lucid.eye", false]], "flatten() (in module lucid)": [[213, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[91, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[36, "lucid.nn.functional.gelu", false]], "grad_enabled() (in module lucid)": [[153, "lucid.grad_enabled", false]], "hstack() (in module lucid)": [[214, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[61, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[116, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[111, "lucid.nn.Identity", false]], "inner() (in module lucid)": [[168, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[67, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[123, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[124, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[125, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[80, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[13, "lucid.linalg.inv", false]], "kaiming_normal() (in module lucid.nn.init)": [[84, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[85, "lucid.nn.init.kaiming_uniform", false]], "layer_norm() (in module lucid.nn.functional)": [[68, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[126, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[38, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[92, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[21, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[22, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[23, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[24, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[112, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[58, "lucid.nn.functional.linear", false]], "log() (in module lucid)": [[195, "lucid.log", false]], "lucid": [[7, "module-lucid", false]], "matmul() (in module lucid)": [[169, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[14, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[196, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[76, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[77, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[78, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[170, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[134, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[135, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[136, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[197, "lucid.mean", false]], "meshgrid() (in module lucid)": [[216, "lucid.meshgrid", false]], "min() (in module lucid)": [[198, "lucid.min", false]], "minimum() (in module lucid)": [[171, "lucid.minimum", false]], "mnist (class in lucid.datasets)": [[5, "lucid.datasets.MNIST", false]], "module": [[7, "module-lucid", false]], "module (class in lucid.nn)": [[27, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[29, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[30, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[63, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[117, "lucid.nn.MSELoss", false]], "mul() (in module lucid)": [[172, "lucid.mul", false]], "nadam (class in lucid.optim)": [[147, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[64, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[118, "lucid.nn.NLLLoss", false]], "no_grad() (in module lucid)": [[155, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[15, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[86, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[229, "lucid.transforms.Normalize", false]], "ones() (in module lucid)": [[181, "lucid.ones", false]], "ones_like() (in module lucid)": [[182, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[139, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[173, "lucid.outer", false]], "pad() (in module lucid)": [[217, "lucid.pad", false]], "parameter (class in lucid.nn)": [[28, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[31, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[32, "lucid.nn.ParameterList", false]], "pinv() (in module lucid.linalg)": [[16, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[174, "lucid.power", false]], "qr() (in module lucid.linalg)": [[17, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[148, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[158, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[159, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[160, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[230, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[231, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[232, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[233, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[234, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[218, "lucid.ravel", false]], "reciprocal() (in module lucid)": [[199, "lucid.reciprocal", false]], "relu (class in lucid.nn)": [[93, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[39, "lucid.nn.functional.relu", false]], "repeat() (in module lucid)": [[219, "lucid.repeat", false]], "reshape() (in module lucid)": [[220, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[235, "lucid.transforms.Resize", false]], "rmsprop (class in lucid.optim)": [[149, "lucid.optim.RMSprop", false]], "rotate() (in module lucid.nn.functional)": [[81, "lucid.nn.functional.rotate", false]], "rprop (class in lucid.optim)": [[150, "lucid.optim.Rprop", false]], "seed() (in module lucid.random)": [[161, "lucid.random.seed", false]], "selu (class in lucid.nn)": [[94, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[40, "lucid.nn.functional.selu", false]], "sequential (class in lucid.nn)": [[33, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[151, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[95, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[41, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[200, "lucid.sign", false]], "sin() (in module lucid)": [[201, "lucid.sin", false]], "sinh() (in module lucid)": [[202, "lucid.sinh", false]], "softmax (class in lucid.nn)": [[96, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[42, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[18, "lucid.linalg.solve", false]], "sqrt() (in module lucid)": [[203, "lucid.sqrt", false]], "square() (in module lucid)": [[204, "lucid.square", false]], "squeeze() (in module lucid)": [[221, "lucid.squeeze", false]], "stack() (in module lucid)": [[222, "lucid.stack", false]], "sub() (in module lucid)": [[175, "lucid.sub", false]], "sum() (in module lucid)": [[205, "lucid.sum", false]], "svd() (in module lucid.linalg)": [[19, "lucid.linalg.svd", false]], "tan() (in module lucid)": [[206, "lucid.tan", false]], "tanh (class in lucid.nn)": [[97, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[207, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[43, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[164, "lucid.Tensor", false]], "tensor() (in module lucid)": [[211, "lucid.tensor", false]], "tile() (in module lucid)": [[223, "lucid.tile", false]], "totensor (class in lucid.transforms)": [[227, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[208, "lucid.trace", false]], "transpose() (in module lucid)": [[209, "lucid.transpose", false]], "unfold() (in module lucid.nn.functional)": [[48, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[87, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[162, "lucid.random.uniform", false]], "unsqueeze() (in module lucid)": [[224, "lucid.unsqueeze", false]], "var() (in module lucid)": [[210, "lucid.var", false]], "vstack() (in module lucid)": [[225, "lucid.vstack", false]], "xavier_normal() (in module lucid.nn.init)": [[88, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[89, "lucid.nn.init.xavier_uniform", false]], "zeros() (in module lucid)": [[183, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[184, "lucid.zeros_like", false]]}, "objects": {"": [[7, 0, 0, "-", "lucid"]], "lucid": [[164, 1, 1, "", "Tensor"], [186, 2, 1, "", "abs"], [165, 2, 1, "", "add"], [176, 2, 1, "", "arange"], [187, 2, 1, "", "arccos"], [188, 2, 1, "", "arcsin"], [189, 2, 1, "", "arctan"], [190, 2, 1, "", "clip"], [212, 2, 1, "", "concatenate"], [191, 2, 1, "", "cos"], [192, 2, 1, "", "cosh"], [193, 2, 1, "", "cube"], [177, 2, 1, "", "diag"], [166, 2, 1, "", "div"], [167, 2, 1, "", "dot"], [178, 2, 1, "", "empty"], [179, 2, 1, "", "empty_like"], [194, 2, 1, "", "exp"], [180, 2, 1, "", "eye"], [213, 2, 1, "", "flatten"], [153, 2, 1, "", "grad_enabled"], [214, 2, 1, "", "hstack"], [168, 2, 1, "", "inner"], [195, 2, 1, "", "log"], [169, 2, 1, "", "matmul"], [196, 2, 1, "", "max"], [170, 2, 1, "", "maximum"], [197, 2, 1, "", "mean"], [216, 2, 1, "", "meshgrid"], [198, 2, 1, "", "min"], [171, 2, 1, "", "minimum"], [172, 2, 1, "", "mul"], [155, 2, 1, "", "no_grad"], [181, 2, 1, "", "ones"], [182, 2, 1, "", "ones_like"], [173, 2, 1, "", "outer"], [217, 2, 1, "", "pad"], [174, 2, 1, "", "power"], [218, 2, 1, "", "ravel"], [199, 2, 1, "", "reciprocal"], [219, 2, 1, "", "repeat"], [220, 2, 1, "", "reshape"], [200, 2, 1, "", "sign"], [201, 2, 1, "", "sin"], [202, 2, 1, "", "sinh"], [203, 2, 1, "", "sqrt"], [204, 2, 1, "", "square"], [221, 2, 1, "", "squeeze"], [222, 2, 1, "", "stack"], [175, 2, 1, "", "sub"], [205, 2, 1, "", "sum"], [206, 2, 1, "", "tan"], [207, 2, 1, "", "tanh"], [211, 2, 1, "", "tensor"], [223, 2, 1, "", "tile"], [208, 2, 1, "", "trace"], [209, 2, 1, "", "transpose"], [224, 2, 1, "", "unsqueeze"], [210, 2, 1, "", "var"], [225, 2, 1, "", "vstack"], [183, 2, 1, "", "zeros"], [184, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "MNIST"]], "lucid.linalg": [[9, 2, 1, "", "cholesky"], [10, 2, 1, "", "det"], [11, 2, 1, "", "eig"], [13, 2, 1, "", "inv"], [14, 2, 1, "", "matrix_power"], [15, 2, 1, "", "norm"], [16, 2, 1, "", "pinv"], [17, 2, 1, "", "qr"], [18, 2, 1, "", "solve"], [19, 2, 1, "", "svd"]], "lucid.models": [[21, 1, 1, "", "LeNet"], [22, 2, 1, "", "lenet_1"], [23, 2, 1, "", "lenet_4"], [24, 2, 1, "", "lenet_5"]], "lucid.nn": [[128, 1, 1, "", "AdaptiveAvgPool1d"], [129, 1, 1, "", "AdaptiveAvgPool2d"], [130, 1, 1, "", "AdaptiveAvgPool3d"], [103, 1, 1, "", "AlphaDropout"], [131, 1, 1, "", "AvgPool1d"], [132, 1, 1, "", "AvgPool2d"], [133, 1, 1, "", "AvgPool3d"], [114, 1, 1, "", "BCELoss"], [120, 1, 1, "", "BatchNorm1d"], [121, 1, 1, "", "BatchNorm2d"], [122, 1, 1, "", "BatchNorm3d"], [110, 1, 1, "", "Bilinear"], [26, 1, 1, "", "Buffer"], [99, 1, 1, "", "Conv1d"], [100, 1, 1, "", "Conv2d"], [101, 1, 1, "", "Conv3d"], [115, 1, 1, "", "CrossEntropyLoss"], [104, 1, 1, "", "Dropout"], [105, 1, 1, "", "Dropout1d"], [106, 1, 1, "", "Dropout2d"], [107, 1, 1, "", "Dropout3d"], [90, 1, 1, "", "ELU"], [91, 1, 1, "", "GELU"], [116, 1, 1, "", "HuberLoss"], [111, 1, 1, "", "Identity"], [123, 1, 1, "", "InstanceNorm1d"], [124, 1, 1, "", "InstanceNorm2d"], [125, 1, 1, "", "InstanceNorm3d"], [126, 1, 1, "", "LayerNorm"], [92, 1, 1, "", "LeakyReLU"], [112, 1, 1, "", "Linear"], [117, 1, 1, "", "MSELoss"], [134, 1, 1, "", "MaxPool1d"], [135, 1, 1, "", "MaxPool2d"], [136, 1, 1, "", "MaxPool3d"], [27, 1, 1, "", "Module"], [29, 1, 1, "", "ModuleDict"], [30, 1, 1, "", "ModuleList"], [118, 1, 1, "", "NLLLoss"], [28, 1, 1, "", "Parameter"], [31, 1, 1, "", "ParameterDict"], [32, 1, 1, "", "ParameterList"], [93, 1, 1, "", "ReLU"], [94, 1, 1, "", "SELU"], [33, 1, 1, "", "Sequential"], [95, 1, 1, "", "Sigmoid"], [96, 1, 1, "", "Softmax"], [97, 1, 1, "", "Tanh"]], "lucid.nn.functional": [[69, 2, 1, "", "adaptive_avg_pool1d"], [70, 2, 1, "", "adaptive_avg_pool2d"], [71, 2, 1, "", "adaptive_avg_pool3d"], [49, 2, 1, "", "alpha_dropout"], [72, 2, 1, "", "avg_pool1d"], [73, 2, 1, "", "avg_pool2d"], [74, 2, 1, "", "avg_pool3d"], [65, 2, 1, "", "batch_norm"], [56, 2, 1, "", "bilinear"], [59, 2, 1, "", "binary_cross_entropy"], [44, 2, 1, "", "conv1d"], [45, 2, 1, "", "conv2d"], [46, 2, 1, "", "conv3d"], [60, 2, 1, "", "cross_entropy"], [50, 2, 1, "", "dropout"], [51, 2, 1, "", "dropout1d"], [52, 2, 1, "", "dropout2d"], [53, 2, 1, "", "dropout3d"], [35, 2, 1, "", "elu"], [36, 2, 1, "", "gelu"], [61, 2, 1, "", "huber_loss"], [67, 2, 1, "", "instance_norm"], [80, 2, 1, "", "interpolate"], [68, 2, 1, "", "layer_norm"], [38, 2, 1, "", "leaky_relu"], [58, 2, 1, "", "linear"], [76, 2, 1, "", "max_pool1d"], [77, 2, 1, "", "max_pool2d"], [78, 2, 1, "", "max_pool3d"], [63, 2, 1, "", "mse_loss"], [64, 2, 1, "", "nll_loss"], [39, 2, 1, "", "relu"], [81, 2, 1, "", "rotate"], [40, 2, 1, "", "selu"], [41, 2, 1, "", "sigmoid"], [42, 2, 1, "", "softmax"], [43, 2, 1, "", "tanh"], [48, 2, 1, "", "unfold"]], "lucid.nn.init": [[82, 2, 1, "", "constant"], [84, 2, 1, "", "kaiming_normal"], [85, 2, 1, "", "kaiming_uniform"], [86, 2, 1, "", "normal"], [87, 2, 1, "", "uniform"], [88, 2, 1, "", "xavier_normal"], [89, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[141, 1, 1, "", "ASGD"], [142, 1, 1, "", "Adadelta"], [143, 1, 1, "", "Adagrad"], [144, 1, 1, "", "Adam"], [145, 1, 1, "", "AdamW"], [146, 1, 1, "", "Adamax"], [147, 1, 1, "", "NAdam"], [139, 1, 1, "", "Optimizer"], [148, 1, 1, "", "RAdam"], [149, 1, 1, "", "RMSprop"], [150, 1, 1, "", "Rprop"], [151, 1, 1, "", "SGD"]], "lucid.random": [[158, 2, 1, "", "rand"], [159, 2, 1, "", "randint"], [160, 2, 1, "", "randn"], [161, 2, 1, "", "seed"], [162, 2, 1, "", "uniform"]], "lucid.transforms": [[228, 1, 1, "", "CenterCrop"], [226, 1, 1, "", "Compose"], [229, 1, 1, "", "Normalize"], [230, 1, 1, "", "RandomCrop"], [231, 1, 1, "", "RandomGrayscale"], [232, 1, 1, "", "RandomHorizontalFlip"], [233, 1, 1, "", "RandomRotation"], [234, 1, 1, "", "RandomVerticalFlip"], [235, 1, 1, "", "Resize"], [227, 1, 1, "", "ToTensor"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [3, 7, 8, 14, 16, 19, 26, 27, 28, 29, 31, 32, 33, 69, 70, 71, 115, 118, 128, 129, 130, 131, 134, 135, 138, 139, 140, 154, 169, 177, 195, 197, 205, 208, 210, 211, 221, 227, 229, 237], "0": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 209, 210, 211, 212, 214, 217, 218, 219, 221, 222, 224, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 237], "000": [5, 178, 179], "0000": [115, 116, 118], "0001": 141, "000e": [178, 179], "001": [141, 144, 145, 147, 148, 151], "002": [146, 147], "004": 147, "005": 92, "01": [38, 92, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151], "01051757": 160, "0205": 115, "0217": 115, "0227": 115, "0299": 115, "044715": [36, 91], "0450": 115, "0451": 115, "04719755": 187, "0474259": 41, "0480": 115, "05": [65, 67, 68, 92, 120, 121, 122, 123, 124, 125, 126], "0507": [40, 94], "06": [142, 150], "07": [59, 60, 114, 115], "0700": 115, "0706508": 97, "0721": 115, "0794": 118, "08": [144, 145, 146, 147, 148, 149], "0802": 118, "08333333": 16, "085537": 194, "0900": [96, 115], "0986": [42, 96], "09861229": 195, "0992": 115, "1": [0, 1, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 156, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237], "10": [0, 1, 2, 3, 21, 22, 23, 24, 29, 30, 33, 45, 46, 56, 58, 69, 99, 100, 101, 106, 107, 110, 112, 121, 122, 124, 128, 132, 133, 135, 143, 159, 162, 163, 166, 169, 172, 173, 189, 205, 228, 230, 231, 233], "100": 237, "1000000": 141, "1001": 115, "1003": 115, "1014": 40, "1025": [30, 33], "1026": [30, 33], "1027": [30, 33], "10499": 41, "1050": 95, "1054": 118, "1056": [30, 33], "11": [56, 99, 100, 101, 106, 110, 121, 122, 124, 132, 133, 135, 169, 228, 229, 230, 231, 233], "1111": 114, "1134": 56, "114b": 231, "119": 56, "1192": [41, 42, 96], "12": [22, 23, 31, 56, 71, 99, 100, 101, 106, 107, 110, 121, 122, 124, 130, 132, 133, 135, 169, 173, 174, 228, 230, 231, 233], "120": [21, 24], "123": [84, 85, 86, 87, 88, 89, 161, 162], "124": [84, 85, 88, 89], "125": 133, "1250": 116, "128": [33, 226, 237], "128x128": [226, 237], "13": [56, 99, 100, 101, 110, 122, 132, 133, 135, 169, 228, 230, 231, 233], "14": [99, 100, 101, 106, 107, 110, 122, 132, 133, 135, 156, 169, 173, 228, 230, 231, 233], "145": 56, "15": [0, 56, 99, 100, 101, 110, 122, 132, 133, 135, 169, 173, 208, 228, 230, 231, 233, 237], "1513": 118, "155": 169, "1588": [36, 91], "16": [21, 24, 30, 31, 33, 70, 71, 99, 100, 101, 106, 107, 110, 121, 122, 129, 130, 132, 133, 135, 138, 169, 173, 203, 228, 230, 231, 233], "16227766": 17, "16425": 118, "1643": 114, "166": 169, "17": [99, 100, 101, 110, 122, 133, 168, 228, 230, 231, 233], "170": 56, "17520119": 202, "18": [23, 25, 99, 100, 101, 106, 110, 122, 133, 172, 173, 228, 230, 231, 233], "1800": 115, "19": [45, 46, 56, 100, 101, 122, 167, 169], "192": [22, 23], "1966": [42, 95, 96], "1998": 115, "1d": [44, 69, 72, 76, 120, 123, 128, 162, 169, 177, 208, 216, 217, 218, 219, 223], "1e": [59, 60, 65, 67, 68, 114, 115, 120, 121, 122, 123, 124, 125, 126, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], "1e6": 141, "2": [1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 156, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237], "20": [0, 5, 29, 30, 33, 100, 101, 106, 122, 173, 194], "2039": 118, "204": 101, "21": [31, 56, 100, 101, 122, 173], "211": 169, "22": [56, 100, 101, 106, 122, 167, 169], "2231": [115, 118], "2247": [120, 121, 122, 123, 124, 125, 126], "226": 169, "22752314": 160, "23": [100, 101, 122], "2324": 94, "234": [84, 85, 86, 87, 88, 89, 162], "24": [56, 70, 100, 101, 106, 122, 129, 173], "2424": [42, 96], "2447": 96, "246": [22, 25], "25": [0, 41, 95, 101, 117, 122, 132, 133, 166, 199, 210], "2500": [114, 116, 118], "2512": 90, "2547": 94, "26": [31, 58, 101, 112, 122, 173], "26325684": 160, "2689": [42, 95, 96], "27": [56, 99, 101, 122, 193], "276": [84, 85, 88, 89], "28": [22, 23, 25, 56, 101, 173], "28x28": [5, 22, 23], "29": 101, "299r": 231, "2_i": [123, 124, 125], "2d": [45, 52, 70, 73, 77, 121, 124, 129, 169, 177, 180, 208, 213, 216, 217, 219, 223, 233], "2e": 146, "2x2": [48, 228, 230], "3": [1, 2, 3, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 22, 25, 26, 27, 28, 30, 31, 32, 33, 36, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 61, 63, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 190, 192, 193, 194, 195, 196, 197, 198, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235], "30": [30, 81, 101, 233], "3026": 118, "31": [56, 101, 169], "310": [178, 179], "31622777": 17, "32": [24, 25, 30, 33, 56, 58, 70, 100, 101, 112, 129, 138, 167, 168, 173], "321": [84, 85, 88, 89], "32x32": [21, 24], "33": [30, 33, 58, 101, 112], "33333333": 16, "34": [30, 33, 56, 101, 169, 173], "342": [84, 85, 88, 89], "345": [84, 85, 86, 87, 88, 89, 162], "35": [30, 33, 101], "3567": [114, 118], "36": 101, "3679": [35, 40, 90], "37": 99, "372": 56, "375": 117, "3750": 116, "378": [23, 25], "38344152": 158, "38629436": 195, "389056": 194, "3935": 90, "3d": [46, 53, 71, 74, 78, 101, 122, 125, 130], "3x3": 163, "4": [0, 1, 2, 3, 8, 9, 10, 11, 13, 15, 16, 17, 21, 22, 23, 25, 31, 33, 44, 45, 46, 48, 51, 52, 53, 56, 58, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 141, 144, 148, 149, 151, 154, 156, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 182, 184, 190, 195, 196, 197, 198, 199, 201, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235], "400": 24, "4044": 114, "4076": 115, "41421356": 9, "41666667": 16, "41808962": 160, "419974": 43, "4199743": 97, "42": [56, 156, 163], "421": [84, 85, 88, 89], "423": [84, 85, 86, 87], "42718872": 17, "4286": 114, "43": [167, 169], "4323": 90, "4375": 116, "43758721": 158, "4472136": 11, "4495": [122, 125], "45": [56, 81, 233], "4545": 103, "47112767": 189, "48": [58, 112], "4979": 90, "4x4": 235, "5": [1, 2, 7, 8, 13, 14, 15, 16, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 33, 36, 41, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 61, 63, 65, 67, 68, 69, 72, 73, 80, 82, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 131, 132, 133, 135, 136, 150, 154, 156, 159, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 182, 184, 186, 187, 188, 196, 197, 198, 199, 200, 205, 208, 209, 210, 211, 214, 216, 220, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237], "50": [58, 112, 150, 167, 169, 231, 232, 234, 237], "5000": [114, 116, 118], "5108": 118, "52359878": 188, "53": [56, 168], "543": [84, 85, 86, 87, 88, 89, 162], "54308063": 192, "545": 174, "5455": 103, "563": [84, 85, 88, 89], "57": 56, "57079633": [187, 188], "57366333": 161, "587g": 231, "6": [8, 16, 21, 24, 31, 32, 44, 45, 46, 48, 53, 56, 58, 69, 85, 89, 99, 100, 101, 104, 105, 106, 107, 110, 112, 114, 120, 121, 122, 123, 124, 125, 126, 128, 132, 133, 135, 136, 142, 150, 154, 156, 162, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 182, 184, 196, 197, 198, 205, 208, 209, 210, 211, 214, 219, 220, 225, 227, 228, 229, 230, 231, 233, 235], "6052": 118, "6065": 90, "61": [24, 25], "6124": [120, 121, 122, 123, 124, 125, 126], "62": 56, "62686041": 202, "6321": [35, 90], "63245553": 17, "64": [30, 33, 56], "64589411": 158, "654": [84, 85, 86, 87, 88, 89, 162], "657": [84, 85, 88, 89], "6590": [42, 96], "6652": 96, "66666667": 16, "6667": 114, "6682": 114, "67": 169, "67326": 94, "6733": 40, "678": [84, 85, 86, 87, 88, 89], "68811989": 160, "69314718": 195, "7": [15, 31, 44, 45, 46, 48, 53, 56, 58, 59, 60, 69, 91, 94, 95, 97, 99, 100, 101, 106, 107, 110, 112, 114, 115, 117, 121, 122, 124, 125, 128, 132, 133, 135, 136, 156, 159, 162, 165, 167, 168, 169, 173, 175, 177, 194, 197, 205, 208, 209, 210, 223, 227, 228, 229, 230, 231, 233, 235], "70": 5, "7001": 115, "706": [24, 25], "70710678": [11, 201], "7147": 118, "7182818": 194, "7311": [42, 95, 96], "74": 169, "75": [58, 112, 117, 141], "7581": 40, "76159416": 207, "7616": [43, 97], "76219569": 192, "7635": 94, "772": 174, "78357324": 160, "78539816": 189, "79172504": 158, "8": [14, 18, 30, 31, 33, 44, 45, 46, 48, 53, 56, 58, 59, 69, 70, 71, 91, 94, 95, 97, 99, 100, 101, 104, 105, 106, 107, 110, 112, 114, 117, 121, 122, 124, 125, 128, 129, 130, 132, 133, 135, 136, 144, 145, 146, 147, 148, 149, 156, 159, 166, 167, 168, 169, 173, 174, 176, 177, 193, 197, 205, 208, 209, 210, 227, 228, 229, 230, 231, 233, 235], "80": 5, "8005": 115, "8182": 103, "82": 56, "84": [21, 23, 24], "8413": [36, 91], "8584": 94, "876": [84, 85, 88, 89, 162], "8808": [42, 95, 96], "887": 174, "891773": 158, "89442719": 11, "9": [0, 1, 3, 5, 18, 45, 48, 56, 58, 69, 99, 100, 101, 106, 110, 112, 114, 121, 122, 124, 128, 132, 133, 135, 141, 142, 144, 145, 146, 147, 148, 149, 151, 156, 159, 162, 165, 169, 173, 174, 175, 177, 203, 204, 227, 228, 229, 230, 231, 233], "90709145": 161, "9091": 103, "9120": 118, "9163": 118, "9486833": 17, "949e": [178, 179], "9526": 41, "9545": 91, "96366276": 158, "9640": 97, "96402758": 207, "99": 149, "9957": 118, "99734545": 161, "999": [0, 144, 145, 146, 147, 148], "A": [1, 3, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 27, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 56, 58, 59, 60, 64, 65, 67, 68, 80, 103, 104, 105, 106, 107, 114, 115, 118, 120, 121, 122, 123, 124, 125, 126, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 156, 158, 159, 160, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 233], "As": 161, "Be": 0, "By": [0, 2, 3, 7, 28, 81, 138, 148, 154, 158, 159, 160, 162, 227, 237], "For": [2, 3, 4, 7, 9, 10, 11, 13, 14, 15, 16, 18, 33, 35, 36, 38, 39, 40, 41, 43, 56, 58, 80, 84, 85, 88, 89, 94, 99, 100, 101, 110, 112, 120, 121, 122, 123, 124, 125, 138, 140, 161, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 194, 195, 196, 197, 198, 201, 203, 205, 208, 209, 210, 217, 219, 221, 223, 224, 237], "If": [0, 1, 2, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 27, 29, 30, 31, 32, 35, 36, 38, 39, 40, 41, 43, 44, 45, 46, 53, 56, 58, 65, 67, 70, 71, 80, 81, 84, 85, 99, 100, 101, 110, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 139, 144, 145, 149, 150, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 231, 232, 234, 235], "In": [3, 7, 16, 44, 45, 46, 115, 118, 153, 154, 155, 226, 237], "It": [1, 2, 3, 7, 16, 17, 18, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 53, 56, 80, 81, 91, 93, 97, 110, 111, 114, 115, 116, 117, 118, 128, 129, 130, 138, 139, 140, 141, 147, 149, 150, 151, 154, 161, 165, 166, 167, 170, 171, 172, 174, 175, 196, 198, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227], "Its": [18, 163], "Near": 16, "No": 48, "Not": 111, "One": [22, 237], "The": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237], "There": 220, "These": [4, 7, 8, 11, 14, 17, 19, 25, 103, 104, 105, 106, 107, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 150, 156, 163, 237], "To": [3, 25, 140, 160, 163, 178, 179, 216, 237], "With": [3, 48, 227, 237], "_": [14, 29, 30, 32, 33, 35, 36, 38, 39, 40, 41, 43, 58, 80, 121, 122, 123, 124, 125, 131, 132, 133, 134, 135, 136, 141, 142, 144, 145, 146, 147, 149, 151, 167, 168, 169, 173, 208, 209, 228, 229, 230, 232, 233, 234], "_1": [11, 29, 30, 31, 32, 33, 56, 110, 173, 212, 214, 225], "_2": [11, 29, 30, 31, 32, 33, 56, 110, 173, 212, 214, 225], "__call__": [1, 27], "__getitem__": [0, 2, 3, 5], "__init__": [0, 1, 2, 3, 7, 21, 26, 27, 28, 29, 30, 31, 32, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 110, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 164, 226, 227], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5], "__repr__": 139, "__setattr__": 27, "_activ": 42, "_arraylik": [156, 177, 179, 182, 184], "_arraylikeint": 217, "_arrayorscalar": [26, 28, 156, 164, 211], "_base_dtyp": [176, 178, 181, 183], "_c": 229, "_decai": 147, "_fanmod": [84, 85], "_grad_en": [153, 155], "_i": [11, 15, 42, 56, 96, 117, 120, 126, 131, 134, 167, 168, 170, 171, 173, 174, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 219, 221, 224, 225], "_in": [84, 85, 88, 89], "_j": [42, 96, 131, 134, 173, 197, 205, 209, 210], "_k": 222, "_left": 80, "_modul": 27, "_n": [11, 29, 30, 31, 32, 33, 212, 214, 225], "_numpyarrai": 156, "_out": [84, 85, 88, 89, 219, 223], "_p": 15, "_pad": 217, "_paddingstr": [99, 100, 101], "_paramet": 27, "_reductiontyp": [59, 60, 61, 63, 64, 114, 115, 116, 117, 118], "_right": 80, "_scalar": [82, 86, 87, 88, 89, 156, 176, 190], "_shapelik": [68, 126, 156, 159, 181, 183, 220, 221, 224], "_size": [69, 70, 71], "_slope": 92, "_statedict": 139, "_t": [148, 149], "_tensor": [26, 28, 177, 211], "_tensorop": 164, "_u": 16, "_v": 16, "_valu": [190, 217], "_width": 217, "a_i": [170, 171, 174], "ab": 185, "abc": [2, 139], "abil": [7, 237], "about": 7, "abov": [7, 153, 155, 161, 177, 180], "absolut": [14, 15, 61, 146, 186], "abstract": [2, 3, 138, 139, 140, 141, 149, 151], "abstractmethod": 139, "acceler": [94, 120, 121, 122, 141, 147, 149, 151], "accept": [111, 158, 164], "access": [0, 2, 3, 4, 5, 26, 28, 29, 30, 31, 32, 33, 220], "accord": [80, 99, 100, 101, 110, 112, 115, 118, 142, 143, 144, 145, 146, 147, 148, 209], "accordingli": 10, "account": [14, 16, 17], "accumul": [141, 142, 143, 165, 166, 170, 171, 172, 175], "achiev": [44, 45, 46, 69, 128, 129, 130, 147, 232, 234], "across": [0, 26, 30, 33, 68, 69, 70, 71, 88, 89, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 156, 158, 159, 160, 161, 162, 163, 178, 179, 197, 210], "act": 145, "activ": [7, 29, 33, 35, 36, 38, 39, 40, 41, 42, 43, 49, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 103, 104, 105, 106, 107, 114, 115, 118, 120, 121, 122, 126, 196, 198], "actual": [28, 114, 115, 117, 118, 164, 230], "ad": [27, 29, 30, 31, 32, 33, 44, 45, 46, 56, 58, 59, 60, 65, 67, 68, 72, 73, 74, 76, 77, 78, 99, 100, 101, 114, 115, 120, 121, 122, 123, 124, 125, 126, 131, 132, 133, 134, 135, 136, 142, 143, 144, 145, 146, 147, 148, 149, 224, 237], "adadelta": 152, "adagrad": [142, 152], "adam": [145, 146, 147, 148, 152], "adamax": 152, "adamw": 152, "adapt": [21, 69, 70, 71, 128, 129, 130, 142, 143, 144, 147, 148, 149, 150], "adaptive_avg_pool1d": [55, 75, 128], "adaptive_avg_pool2d": [55, 75, 129], "adaptive_avg_pool3d": [55, 75, 130], "adaptiveavgpool1d": [109, 137], "adaptiveavgpool2d": [109, 137], "adaptiveavgpool3d": [109, 137], "add": [4, 27, 29, 30, 33, 56, 58, 99, 100, 101, 110, 112, 126, 139, 141, 144, 149, 151, 154, 185, 217, 224], "add_modul": [27, 33], "add_param_group": 139, "addit": [4, 7, 14, 27, 30, 33, 56, 58, 65, 67, 110, 112, 120, 121, 122, 123, 124, 125, 141, 147, 154, 163, 165, 222], "addition": 147, "address": [115, 118, 144, 145, 148], "adjust": [69, 70, 71, 103, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 140, 144, 148, 149, 150, 214, 225], "advanc": [3, 16, 30, 33, 44, 45, 46, 69, 70, 71, 128, 129, 130, 138, 141], "advantag": 155, "affect": [153, 218, 221, 226], "affin": [120, 121, 122, 123, 124, 125, 126, 233], "after": [14, 28, 29, 30, 31, 32, 33, 53, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 103, 104, 105, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 126, 131, 132, 133, 134, 135, 136, 145, 155, 164, 165, 166, 170, 171, 172, 174, 175, 217, 227], "afterward": 155, "aggreg": [173, 219, 223], "aim": [4, 7], "alexnet": 25, "algebra": [7, 8, 180], "algorithm": [7, 14, 16, 17, 139, 140, 163], "align": [18, 80, 168, 169], "align_corn": 80, "all": [0, 3, 4, 7, 17, 27, 29, 30, 31, 32, 33, 45, 46, 69, 70, 71, 73, 74, 77, 78, 80, 92, 93, 101, 128, 129, 130, 132, 133, 136, 138, 139, 140, 141, 144, 149, 150, 151, 174, 196, 197, 198, 205, 208, 210, 212, 213, 214, 219, 221, 222, 223, 225, 228, 229, 237], "allevi": 35, "alloc": [178, 179], "allow": [0, 1, 3, 4, 7, 16, 17, 21, 28, 29, 30, 31, 32, 33, 35, 38, 39, 42, 46, 48, 81, 90, 91, 92, 94, 95, 96, 97, 99, 100, 101, 138, 142, 143, 154, 176, 181, 183, 184, 209, 211, 216, 226, 227, 237], "along": [42, 80, 96, 168, 169, 173, 196, 197, 198, 205, 208, 210, 212, 214, 216, 219, 222, 223, 224, 225, 232, 234], "alongsid": 26, "alpha": [35, 38, 40, 49, 90, 94, 103, 141, 149], "alpha_dropout": [54, 55, 103], "alphadropout": [108, 109], "alphadropoutmodel": 103, "also": [35, 36, 38, 39, 40, 41, 43, 56, 58, 80, 147, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 179, 183, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 212, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225], "alter": [33, 220], "altern": [1, 91, 142, 169], "alwai": [28, 218, 231, 232, 234], "amount": [44, 45, 46, 72, 73, 74, 76, 77, 78, 147], "amsgrad": [144, 145], "an": [0, 1, 3, 7, 11, 13, 14, 16, 17, 19, 21, 22, 23, 24, 27, 29, 30, 31, 32, 33, 36, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 70, 71, 80, 81, 88, 89, 90, 95, 99, 100, 101, 103, 104, 105, 106, 107, 110, 112, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 144, 147, 149, 155, 156, 164, 169, 177, 180, 190, 197, 205, 210, 212, 219, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237], "analog": [219, 223], "analysi": [4, 99, 100, 101, 125, 131, 133, 134, 136], "angl": [81, 233], "ani": [0, 1, 2, 3, 14, 16, 26, 27, 28, 29, 31, 32, 35, 36, 38, 39, 40, 41, 43, 49, 50, 56, 58, 65, 67, 95, 126, 138, 139, 153, 155, 161, 164, 176, 177, 178, 180, 181, 182, 183, 184, 196, 198, 209, 211, 212, 213, 214, 217, 219, 222, 223, 224, 225, 226, 237], "anoth": [32, 175, 182, 184, 227, 237], "api": [4, 128, 129, 130, 237], "appear": 139, "append": [30, 32, 33], "appli": [2, 4, 5, 7, 14, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 46, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 103, 104, 105, 106, 107, 110, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 141, 142, 143, 145, 146, 147, 148, 169, 217, 219, 226, 229, 231, 232, 233, 234, 235, 237], "applic": [4, 16, 44, 67, 99, 100, 101, 110, 112, 163, 176, 183, 217, 235], "approach": [3, 33, 145], "appropri": [16, 27, 31, 33, 99, 100, 101, 103, 104, 105, 115, 132, 133, 153, 155], "approx": 40, "approxim": [16, 36, 91, 132, 135], "ar": [1, 2, 3, 4, 7, 10, 11, 13, 14, 16, 17, 18, 19, 25, 26, 27, 28, 29, 30, 31, 32, 33, 42, 44, 45, 46, 48, 56, 58, 70, 71, 80, 84, 85, 87, 88, 89, 96, 99, 100, 101, 103, 104, 105, 106, 107, 110, 112, 115, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 141, 144, 145, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 186, 190, 194, 196, 197, 198, 199, 200, 205, 208, 209, 212, 216, 219, 220, 223, 226, 227, 228, 230, 231, 235, 237], "arang": 185, "arbitrari": [30, 111, 178, 179, 190, 195, 197, 201, 203, 205, 209, 210], "arcco": 185, "architectur": [21, 25, 29, 30, 31, 32, 33, 36, 93, 110, 111, 138], "arcsin": 185, "arctan": 185, "area": 80, "arg": [27, 111, 178], "argument": [3, 4, 21, 27, 33, 111, 158, 178, 209], "around": [11, 81, 97], "arr": [156, 212, 214, 222, 225], "arrai": [7, 26, 28, 154, 156, 164, 169, 177, 182, 184, 211, 218, 219, 227, 237], "asarrai": 156, "asgd": 152, "aspect": 235, "assign": [27, 29, 31, 33, 80, 115, 118], "associ": [31, 32], "assum": [0, 1, 139, 140, 153], "attempt": [29, 33], "attent": [32, 56], "attribut": 27, "audio": 99, "augment": [3, 4, 81, 163, 219, 223, 226, 230, 231, 232, 233, 234, 237], "autodiff": 7, "autograd": 138, "automat": [4, 7, 28, 29, 30, 31, 32, 138, 158, 159, 160, 162, 164, 178, 179, 184, 216, 227], "auxiliari": 26, "avail": [4, 5, 7], "averag": [22, 23, 24, 26, 69, 70, 71, 72, 73, 74, 80, 117, 128, 129, 130, 131, 132, 133, 141, 142, 144, 149, 197], "avg_pool": [131, 132, 133], "avg_pool1d": [55, 75], "avg_pool2d": [55, 75], "avg_pool3d": [55, 75], "avgpool1d": [109, 137], "avgpool1dmodel": 131, "avgpool2d": [109, 137], "avgpool2dmodel": 132, "avgpool3d": [109, 137], "avgpool3dmodel": 133, "avoid": [2, 3, 16, 31, 155], "ax": [8, 154, 196, 197, 198, 205, 209, 210, 219, 221, 223], "axi": [42, 96, 168, 169, 196, 197, 198, 205, 210, 212, 214, 216, 217, 219, 221, 222, 223, 224, 225, 232, 234], "b": [8, 18, 56, 58, 87, 99, 100, 101, 110, 112, 154, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 212, 214, 222, 225, 231], "b_i": [170, 171, 174], "back": [80, 132, 133, 168, 173, 219, 223], "backpropag": [7, 10, 11, 13, 14, 16, 17, 19, 26, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 56, 58, 80, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 131, 132, 133, 134, 135, 136, 138, 155, 160, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 194, 196, 198, 211, 217, 219, 223, 227], "backward": [7, 26, 28, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 164, 227], "balanc": 116, "bar": 141, "base": [3, 8, 13, 14, 17, 18, 21, 27, 29, 30, 31, 32, 48, 56, 69, 70, 71, 103, 115, 116, 128, 129, 130, 138, 139, 140, 141, 145, 149, 150, 151, 165, 166, 170, 171, 172, 174, 175, 184, 194, 195, 196, 198, 209, 216, 217, 230, 231, 232, 233, 234], "basic": [7, 44, 45, 46, 69, 70, 71, 84, 85, 88, 89, 128, 129, 130, 228, 229, 230, 231, 232, 233, 234, 235], "batch": [1, 2, 3, 8, 14, 17, 19, 44, 45, 46, 48, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 99, 100, 101, 110, 112, 114, 115, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 148, 169, 228, 229, 230, 231, 233, 235], "batch_norm": [55, 66, 120, 121, 122], "batch_norm1": 33, "batch_norm2": 33, "batch_siz": [1, 2, 3], "batchnorm1d": [109, 127], "batchnorm1dmodel": 120, "batchnorm2d": [33, 109, 127], "batchnorm2dmodel": 121, "batchnorm3d": [109, 127], "batchnorm3dmodel": 122, "bceloss": [109, 119], "becaus": [2, 159], "becom": [15, 27, 142, 150], "befor": [14, 28, 141, 147, 155, 161, 217, 229, 237], "begin": [1, 15, 35, 38, 39, 40, 90, 92, 93, 94, 116, 117, 118, 131, 132, 133, 134, 135, 136, 148, 150, 154, 163, 170, 171, 173, 186, 190, 196, 198, 200, 217], "behav": [116, 208], "behavior": [30, 33, 153, 163, 169, 179, 237], "being": [32, 81, 103, 104, 105, 106, 107, 148, 153, 155, 212, 214, 225], "belong": 0, "below": [17, 21, 22, 23, 24, 169, 177, 180], "benchmark": 5, "benefici": 33, "benefit": [35, 138, 147, 156], "bernoulli": [103, 104, 105, 106, 107], "best": [84, 85, 88, 89], "beta": [120, 121, 122, 123, 124, 125, 126, 144, 145, 146, 147, 148], "beta1": [144, 145, 146, 147, 148], "beta2": [144, 145, 146, 147, 148], "beta_1": [144, 145, 146, 147, 148], "beta_2": [144, 145, 146, 147, 148], "better": [13, 36, 84, 85, 88, 89, 123, 124, 125, 138, 145, 147, 149, 229], "between": [27, 44, 45, 46, 48, 56, 61, 99, 100, 101, 103, 104, 105, 106, 107, 110, 114, 115, 116, 117, 118, 141, 149, 150, 151, 163, 165, 166, 169, 172, 175, 176, 210, 231, 232, 234, 235], "beyond": [7, 30], "bia": [44, 45, 46, 56, 58, 65, 67, 68, 99, 100, 101, 110, 112, 120, 121, 122, 123, 124, 125, 126, 144, 145, 146, 147, 148], "bias": [99, 100, 101, 112, 126, 138], "bias1": 31, "bias2": 31, "bilinear": [55, 57, 80, 109, 113], "bilinearmodel": 110, "binari": [41, 59, 95, 103, 104, 105, 106, 107, 114], "binary_cross_entropi": [55, 62], "block": [27, 48, 99, 100, 101, 155], "block1": 138, "block2": 138, "blue": 231, "bmatrix": 173, "bool": [1, 5, 19, 27, 28, 49, 50, 51, 52, 53, 65, 67, 80, 99, 100, 101, 110, 112, 120, 121, 122, 123, 124, 125, 126, 144, 145, 149, 153, 158, 159, 160, 162, 164, 176, 177, 178, 179, 180, 181, 182, 183, 184, 196, 197, 198, 205, 210, 211, 227], "both": [44, 58, 70, 72, 76, 91, 99, 100, 129, 131, 132, 134, 135, 167, 168, 169, 173, 177, 216, 235], "bottom": 80, "bound": [85, 87, 89, 150, 162], "box": 4, "break": 138, "brief": 237, "bright": 237, "broadcast": [106, 107, 197, 205, 210, 220, 224], "buffer": [141, 147, 149, 151], "build": [7, 27, 30, 33, 138, 237], "built": [3, 7, 33, 138], "burg": 5, "c": [5, 48, 51, 52, 53, 60, 64, 65, 67, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 106, 107, 115, 118, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 154, 214, 225, 229], "c_": [99, 100, 101], "c_in": [44, 45, 46], "c_out": [44, 45, 46], "calcul": [0, 1, 7, 8, 28, 142, 143, 146, 147, 148, 155, 159, 164], "calculu": [9, 16], "call": [1, 27, 153, 165, 166, 169, 170, 171, 172, 174, 175], "callabl": [139, 226], "can": [0, 2, 3, 4, 7, 9, 11, 13, 14, 16, 17, 19, 26, 28, 29, 30, 31, 32, 33, 38, 44, 45, 46, 81, 91, 92, 97, 99, 100, 101, 123, 124, 125, 132, 133, 134, 135, 136, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 162, 163, 164, 169, 178, 179, 180, 181, 183, 184, 197, 205, 210, 214, 216, 217, 219, 220, 223, 224, 225, 226, 227, 230, 232, 233, 234, 237], "cannot": [10, 11, 13, 14, 17, 18, 19], "capabl": [7, 176, 177, 180, 181, 182, 183, 184], "captur": [48, 99, 100, 101, 110], "care": 155, "cartesian": 216, "case": [3, 15, 21, 35, 38, 39, 40, 90, 92, 93, 94, 116, 117, 118, 131, 132, 133, 134, 135, 136, 138, 143, 148, 150, 154, 170, 171, 186, 190, 196, 198, 200, 217, 237], "caus": [3, 16, 141, 149, 151], "cautiou": 0, "cdot": [9, 10, 13, 14, 15, 18, 35, 36, 38, 40, 41, 44, 45, 46, 56, 58, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 88, 89, 91, 95, 103, 110, 112, 114, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 142, 143, 144, 145, 146, 147, 148, 150, 167, 168, 169, 172, 174], "center": [81, 97, 149, 228, 237], "centercrop": [236, 237], "central": 156, "certain": [10, 36, 56, 110, 144, 145, 153, 196, 198], "chain": [13, 14, 33, 226, 237], "chanc": [231, 232, 234], "chang": [61, 116, 150, 154, 155, 218, 220, 224, 231, 237], "channel": [21, 22, 23, 24, 44, 45, 46, 48, 51, 52, 53, 65, 67, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 99, 100, 101, 106, 107, 120, 121, 122, 123, 124, 125, 128, 131, 132, 133, 134, 135, 136, 229, 231, 235], "check": [153, 228, 230], "checkpoint": 140, "choic": 216, "choleski": 12, "chosen": 103, "christoph": 5, "clariti": 156, "class": [3, 4, 7, 22, 23, 24, 42, 60, 64, 138, 140, 177, 180, 211, 237], "classic": 24, "classif": [4, 22, 23, 24, 25, 41, 42, 59, 60, 64, 95, 96, 114, 115, 118], "classifi": [21, 22, 23, 24], "cleaner": [1, 155, 169], "clear": [28, 164, 178, 179], "clearli": 156, "clf_in_featur": 21, "clf_layer": 21, "clip": [81, 150, 185], "clockwis": 81, "close": [13, 16, 94, 114, 149], "closer": 90, "closur": [139, 140], "cnn": 25, "co": [185, 201], "code": [14, 29, 31, 33, 153, 155, 156, 163], "coeffici": [18, 80, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151], "col": 48, "collect": [4, 8, 25, 29, 30, 32, 33, 140], "color": [231, 237], "colorjitt": 237, "column": [10, 11, 13, 17, 18, 19, 48, 180, 214, 216], "com": 5, "combin": [1, 3, 25, 30, 33, 35, 36, 91, 115, 138, 147, 148, 197, 205, 210, 212, 237], "combined_dataset": [0, 1], "common": [48, 81, 140, 237], "commonli": [7, 36, 41, 42, 43, 44, 46, 56, 63, 65, 67, 81, 88, 89, 96, 101, 114, 117, 118, 131, 132, 133, 134, 135, 136, 154, 156, 181, 221, 227, 228, 229, 230, 232, 233, 234, 237], "compar": [163, 222], "compat": [4, 8, 111, 126, 138, 154, 163, 227, 237], "complex": [2, 3, 7, 11, 29, 30, 33, 39, 93, 134, 136, 138, 140, 237], "compon": [16, 27, 30, 140, 164, 237], "compos": [5, 99, 100, 101, 131, 132, 133, 134, 135, 136, 138, 237], "comprehens": 3, "comput": [7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 48, 56, 58, 59, 60, 61, 63, 64, 65, 67, 69, 70, 71, 80, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 149, 153, 154, 155, 156, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 216, 217, 219, 223, 227, 237], "computation": [3, 16], "compute_loss": [140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], "concaten": [0, 44, 45, 46, 214, 215, 222, 225], "concept": [7, 16, 25], "condit": [9, 10, 13], "configur": [21, 22, 23, 24, 32], "conjunct": [48, 118], "connect": [21, 22, 23, 24, 25, 58, 99, 100, 101, 112], "consid": [3, 13, 16, 33, 84, 85, 88, 89, 138, 150, 153, 178, 179, 237], "consider": 16, "consist": [2, 4, 22, 23, 24, 26, 69, 70, 71, 128, 129, 130, 156, 161, 163, 217, 228, 235, 237], "consistent_tensor": 163, "constant": [59, 60, 65, 67, 68, 83, 94, 114, 115, 120, 121, 122, 123, 124, 125, 126, 142, 143, 144, 145, 146, 147, 148, 149, 156, 217], "constant_pad": 217, "constraint": 1, "construct": [7, 30, 138, 177, 219, 223], "contain": [1, 5, 10, 11, 16, 17, 18, 19, 21, 27, 29, 30, 31, 32, 33, 42, 48, 56, 58, 59, 60, 64, 80, 114, 115, 118, 139, 165, 166, 167, 168, 170, 171, 172, 173, 175, 176, 179, 186, 187, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 213, 216], "content": 81, "context": [153, 155], "contextmanag": 155, "contigu": 218, "continu": [92, 160], "contrast": [123, 124, 125, 237], "contribut": [80, 103, 104, 105, 106, 107, 131, 134, 135, 136, 141, 147, 208], "control": [90, 116, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 163, 227, 237], "conv": [121, 122], "conv1": [22, 23, 24, 33, 99, 100, 101, 131, 132, 133, 134, 135, 136], "conv1d": [47, 55, 102, 109, 131, 134], "conv1dmodel": 99, "conv2": [22, 23, 24, 33, 99, 100, 101], "conv2d": [30, 33, 47, 55, 102, 109, 121, 132, 135, 138], "conv2dmodel": 100, "conv3d": [47, 55, 102, 109, 122, 133, 136], "conv3dmodel": 101, "conv_lay": [21, 30], "convblock": 138, "conveni": 4, "convent": 169, "converg": [16, 97, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 229], "convers": [115, 118, 231, 237], "convert": [5, 26, 28, 42, 96, 164, 216, 226, 227, 231, 237], "convnetwork": 30, "convolut": [21, 22, 23, 24, 25, 30, 44, 45, 46, 48, 99, 100, 101, 132, 133, 135, 136, 217], "convolv": [44, 45, 46, 99, 100, 101], "coordin": 216, "core": [0, 1, 2, 3, 27, 138, 139, 164, 237], "corinna": 5, "corner": [80, 228, 230], "correct": [29, 115, 118, 144, 145, 146, 147, 148, 227], "correctli": [16, 27, 29, 30, 31, 32, 33, 115, 118, 163], "correspond": [0, 1, 2, 5, 11, 29, 31, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 56, 58, 80, 93, 96, 110, 112, 120, 121, 122, 123, 124, 125, 132, 133, 141, 149, 151, 167, 168, 170, 171, 174, 194, 195, 201, 203, 214, 217, 219, 223, 225], "cort": 5, "cosh": [185, 202, 207], "cosin": [187, 191, 192, 201], "could": 27, "count": [25, 212], "counterclockwis": [81, 233], "cover": [8, 44, 45, 46], "coverag": [69, 70, 71], "creat": [2, 3, 7, 22, 23, 24, 26, 27, 30, 33, 138, 154, 163, 176, 180, 181, 182, 183, 184, 216, 222, 226, 237], "creation": [30, 33, 237], "criterion": [114, 115, 116, 117, 118], "critic": [16, 140, 163], "crop": [228, 230, 237], "cross": [59, 60, 114, 115], "cross_entropi": [55, 62], "crossentropyloss": [109, 119], "cube": 185, "cumul": [36, 91], "current": [27, 141, 144, 150, 153], "custom": [4, 7, 21, 26, 29, 30, 31, 32, 33, 81, 90, 92, 138, 163, 180], "custom_lenet": 21, "customiz": 237, "custommodul": 26, "customnetwork": 29, "customparametermodel": [31, 32], "d": [46, 53, 71, 74, 78, 122, 125, 126, 130, 133, 136, 154, 177, 233], "d_": [46, 71, 74, 78, 101, 130, 133, 136], "d_1": 126, "d_2": 126, "d_n": 126, "d_out": [46, 74, 78], "dampen": [141, 149, 151], "data": [4, 5, 7, 14, 26, 28, 32, 43, 44, 46, 48, 52, 53, 58, 81, 93, 97, 99, 100, 101, 112, 125, 131, 133, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 156, 163, 164, 165, 166, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 211, 217, 218, 219, 220, 221, 223, 226, 227, 230, 231, 232, 233, 234, 237], "databas": 5, "dataload": [2, 3], "dataset": [3, 22, 23, 24, 81, 143, 155, 226, 228, 237], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 173, "debug": [33, 153, 161, 237], "decai": [141, 142, 143, 144, 145, 146, 147, 148, 149, 151], "decompos": [9, 17, 19], "decomposit": [8, 9, 13, 16, 17, 19], "decoupl": [142, 143, 145, 146, 147, 148], "decreas": [144, 145, 150], "deep": [1, 3, 4, 7, 25, 65, 91, 94, 138, 163, 226, 227, 237], "deeper": [7, 94], "def": [0, 1, 2, 3, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 110, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227], "default": [1, 5, 15, 19, 26, 27, 28, 29, 30, 31, 32, 35, 38, 42, 44, 45, 46, 49, 50, 51, 52, 53, 59, 60, 61, 63, 64, 65, 67, 68, 72, 73, 74, 76, 77, 78, 80, 81, 84, 85, 86, 87, 88, 89, 90, 92, 96, 99, 100, 101, 103, 104, 105, 106, 107, 110, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 131, 132, 133, 134, 135, 136, 139, 140, 147, 153, 158, 159, 160, 162, 164, 176, 177, 178, 179, 180, 181, 182, 183, 184, 196, 197, 198, 205, 209, 210, 211, 212, 214, 216, 217, 219, 222, 225, 227, 231, 232, 234], "defin": [1, 3, 4, 7, 21, 29, 30, 31, 32, 33, 91, 114, 115, 116, 117, 118, 131, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 156, 159, 160, 174, 179, 190, 209, 226, 237], "definit": [7, 9, 237], "degre": [81, 233, 237], "delai": 141, "delta": [42, 61, 96, 116, 142], "delta_": [42, 96], "demonstr": [7, 8, 25, 138, 156], "denomin": [65, 67, 68, 120, 121, 122, 123, 124, 125, 126, 142, 143, 144, 145, 146, 147, 148, 149, 166], "denot": [14, 95, 99, 100, 101, 103, 104, 105, 106, 107, 209], "dens": [7, 143], "dense1": 7, "dense2": 7, "densiti": [36, 91], "depend": [7, 14, 15, 32, 59, 60, 61, 63, 64, 80, 99, 167, 177, 196, 198, 219, 223, 230, 231, 235], "depth": [30, 46, 53, 71, 74, 78, 101, 122, 125, 130, 133, 136], "depthwis": [44, 45, 46], "deriv": [16, 17, 42, 69, 70, 71, 91, 96, 97, 99, 100, 101, 110, 112], "descend": 19, "descent": [7, 141, 151], "describ": [10, 11], "descript": 237, "deseri": 26, "design": [3, 4, 7, 8, 22, 23, 24, 25, 28, 30, 31, 32, 33, 35, 40, 94, 103, 138, 156, 237], "desir": [26, 69, 70, 71, 128, 129, 130, 209, 211], "destin": 27, "det": [8, 12], "det_a": 10, "detail": [7, 140, 163, 169], "determin": [0, 7, 8, 9, 10, 21, 69, 70, 71, 84, 85, 88, 89, 99, 100, 101, 128, 129, 130, 132, 133, 135, 136, 149, 153, 158, 159, 160, 162, 178, 179, 228, 230], "determinist": 81, "develop": [7, 138, 163, 237], "deviat": [84, 86, 88, 226, 229, 237], "diag": [16, 185], "diagon": [16, 17, 19, 177, 180, 208], "diagonaliz": 11, "dict": [21, 27, 29, 31, 111, 139], "dictionari": [21, 27, 28, 29, 31, 33, 139], "differ": [0, 14, 21, 30, 33, 42, 56, 80, 96, 110, 117, 140, 154, 161, 163, 175, 184, 210, 221, 237], "differenti": [7, 9, 18, 91, 138, 158, 159, 160, 162, 164, 176, 178, 179, 181, 183], "digit": [5, 24, 25], "dilat": [44, 45, 46, 99, 100, 101], "dilation_height": 48, "dilation_width": 48, "dim": [115, 118], "dimens": [10, 11, 13, 14, 17, 18, 19, 28, 42, 56, 58, 65, 67, 68, 70, 71, 80, 96, 99, 100, 101, 120, 121, 122, 123, 124, 125, 126, 129, 130, 132, 133, 134, 135, 136, 154, 156, 158, 162, 164, 168, 178, 196, 197, 198, 205, 208, 209, 210, 212, 214, 217, 219, 221, 222, 223, 224, 225, 228, 230, 235], "dimension": [14, 16, 17, 19, 44, 45, 46, 72, 73, 74, 76, 77, 78, 99, 100, 101, 105, 106, 107, 120, 121, 122, 123, 124, 125, 131, 132, 133, 134, 135, 136, 154, 168, 169, 173, 177, 194, 197, 205, 208, 210, 213, 218, 219, 221, 223], "diminish": 143, "direct": [11, 114, 115, 116, 117, 118, 141, 149, 150, 151], "directli": [29, 30, 31, 32, 80, 142, 143, 145, 146, 147, 148, 161, 163, 211, 237], "directori": [3, 4, 5], "disabl": [153, 155], "discontinu": 200, "discrep": [114, 115, 118], "discret": [159, 163], "disk": 3, "distribut": [36, 42, 80, 84, 85, 86, 87, 88, 89, 91, 96, 99, 100, 101, 103, 104, 105, 106, 107, 110, 112, 115, 118, 131, 132, 133, 158, 159, 160, 162, 163, 197, 205, 208, 210, 222, 229, 231, 232, 233, 234], "div": 185, "divers": [81, 232, 234, 237], "diversifi": 237, "divid": [1, 16, 30, 33, 42, 44, 45, 46, 96, 114, 115, 116, 117, 118, 166, 229], "divis": [7, 16, 44, 45, 46, 103, 104, 105, 106, 107, 142, 143, 144, 145, 146, 147, 148, 149, 166], "do": [16, 18, 26, 29, 30, 31, 32, 49, 50, 51, 52, 138, 148, 153, 184, 208, 217], "document": [4, 7, 140, 156, 163], "doe": [7, 14, 15, 16, 17, 19, 26, 29, 30, 31, 32, 33, 89, 144, 145, 150, 153, 155, 158, 159, 160, 161, 162, 176, 177, 178, 179, 180, 181, 182, 183, 184, 220], "doesn": 155, "domain": 4, "don": 155, "dot": [11, 14, 29, 30, 31, 32, 33, 126, 134, 135, 136, 168, 173, 185, 212, 214, 222, 225], "down": [3, 138, 235], "download": [4, 5], "drawback": 35, "drawn": [158, 159, 160, 162, 163, 233], "drop": [103, 104, 105, 106, 107], "dropout": [36, 49, 51, 52, 53, 103, 105, 106, 107], "dropout1d": [54, 55, 108, 109], "dropout1dmodel": 105, "dropout2d": [54, 55, 108, 109], "dropout3d": [54, 55, 108, 109], "dropoutmodel": 104, "dtype": [26, 28, 164, 176, 177, 178, 179, 180, 181, 182, 183, 184, 211, 227], "due": [14, 16, 44, 45, 93, 233], "duplic": [29, 31], "dure": [3, 7, 10, 11, 13, 16, 17, 19, 26, 27, 28, 29, 30, 31, 32, 33, 42, 49, 50, 51, 52, 53, 65, 67, 81, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 131, 132, 133, 134, 135, 136, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 155, 164, 165, 196, 197, 198, 205, 210, 227, 230, 233, 237], "dy": [38, 92], "dynam": [0, 2, 3, 27, 30, 31, 32, 33, 69, 70, 71, 126, 128, 129, 130, 143, 148, 153], "dynamicnetwork": 30, "e": [0, 10, 11, 13, 14, 17, 19, 21, 22, 23, 24, 26, 42, 95, 96, 103, 115, 139, 142, 149, 150, 180, 192, 194, 195, 202, 207, 208, 212, 231], "each": [1, 2, 3, 4, 11, 14, 16, 17, 19, 21, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 56, 58, 65, 67, 69, 70, 71, 93, 96, 99, 100, 101, 103, 104, 105, 106, 107, 110, 112, 114, 115, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 142, 143, 144, 145, 146, 147, 148, 149, 150, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 214, 216, 217, 219, 222, 223, 225, 226, 227, 228, 229, 230, 231, 233, 235, 237], "earli": 148, "eas": [4, 7], "easi": [2, 3, 4, 7, 28, 29, 31], "easier": [3, 29, 30, 33], "easili": [4, 28, 32, 237], "economi": 19, "edg": 217, "educ": [7, 25], "effect": [29, 30, 31, 32, 33, 42, 44, 45, 46, 48, 90, 91, 93, 95, 96, 97, 120, 121, 122, 123, 124, 125, 126, 153, 154, 155, 214, 225], "effici": [1, 2, 3, 5, 7, 8, 13, 18, 48, 115, 138, 155], "eig": 12, "eigenvalu": [11, 17], "eigenvector": 11, "eigval": 11, "eigvec": 11, "either": [58, 156, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 211, 216], "element": [0, 16, 17, 28, 32, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 93, 96, 99, 100, 101, 103, 104, 105, 106, 107, 114, 115, 116, 117, 118, 126, 131, 132, 133, 134, 135, 136, 154, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 213, 216, 217, 219, 220, 221, 223], "elementwise_affin": 126, "elsewher": [134, 135, 136, 180], "elu": [37, 55, 98, 109], "elumodel": 90, "empti": [27, 33, 185], "empty_lik": 185, "enabl": [0, 1, 2, 3, 7, 14, 19, 27, 28, 29, 30, 31, 32, 93, 99, 100, 101, 110, 112, 138, 140, 153, 155, 158, 159, 160, 162, 164, 226], "encapsul": [138, 164], "encod": [115, 118], "encourag": [104, 105, 106, 107, 114, 115, 118, 144], "end": [15, 35, 38, 39, 40, 90, 92, 93, 94, 116, 117, 118, 131, 132, 133, 134, 135, 136, 148, 150, 170, 171, 173, 176, 186, 190, 196, 198, 200, 212, 217, 237], "enforc": [27, 29, 31], "engin": 16, "enhanc": [23, 29, 31, 237], "ensur": [3, 5, 16, 17, 18, 26, 27, 28, 29, 30, 31, 32, 33, 42, 69, 70, 71, 92, 96, 103, 104, 105, 106, 107, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 141, 142, 144, 145, 147, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 174, 197, 205, 210, 217, 227, 228, 229, 230, 231, 235, 237], "enter": 155, "entir": [3, 51, 52, 53, 106, 107, 163], "entri": [21, 221], "entropi": [59, 60, 114, 115], "environ": 7, "ep": [59, 60, 65, 67, 68, 114, 115, 120, 121, 122, 123, 124, 125, 126, 142, 143, 144, 145, 146, 147, 148, 149], "epoch": [1, 3], "epsilon": [114, 115, 120, 121, 122, 123, 124, 125, 126, 142, 143, 144, 145, 146, 147, 148, 149], "equal": [14, 80, 131, 132, 133, 228, 230], "equat": [11, 16, 18], "equival": [169, 208, 218], "error": [0, 3, 11, 13, 27, 30, 31, 32, 33, 36, 61, 63, 91, 114, 115, 116, 117, 138, 139, 155, 156], "especi": [3, 29, 31, 32, 95, 154, 155, 156, 161, 226, 227, 231, 237], "essenti": [1, 3, 7, 8, 14, 16, 45, 48, 138, 161, 163, 196, 226, 227, 231, 237], "estim": [117, 144, 145, 146, 147, 148, 149], "eta": 150, "eta_": 150, "etc": [114, 227], "euclidean": 15, "evalu": [27, 65, 67, 103, 104, 105, 106, 107, 120, 121, 122, 123, 124, 125, 237], "even": [142, 155, 176, 177, 180, 181, 182, 183, 184], "evenli": [69, 70, 71, 128, 129, 130, 176], "everi": [1, 237], "everywher": 200, "exact": [27, 30, 209, 231, 233], "exactli": 33, "exampl": [4, 169], "except": [0, 200, 212, 214, 225], "exclus": [159, 162, 176], "exdb": 5, "execut": [30, 155], "exist": [18, 29, 31, 33, 212], "exit": 155, "exp": [35, 40, 41, 43, 90, 94, 185], "expand": [4, 48, 219, 223], "expect": [9, 30, 33, 103, 104, 105, 106, 107, 126, 138, 156], "expens": 3, "experi": [7, 161, 163, 237], "experiment": 163, "explan": [14, 16, 69, 70, 71, 128, 129, 130, 141], "explicit": 33, "explicitli": [29, 31], "explod": [94, 120, 121, 122], "explor": [138, 163], "expon": [14, 174], "exponenti": [35, 40, 42, 90, 94, 96, 103, 144, 145, 146, 147, 148, 194], "extend": 4, "extens": 140, "extern": [4, 7], "extract": [25, 48, 101, 131, 133, 177, 196, 198, 228, 230], "extractor": [21, 22, 23, 24], "extrem": 16, "ey": 185, "f": [1, 4, 5, 7, 31, 32, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 96], "facilit": [29, 33, 42, 96, 99, 100, 101, 138, 140, 229, 237], "factor": [35, 44, 45, 46, 48, 88, 89, 141, 148, 149, 150, 151, 156], "failur": [29, 30, 31, 32, 138], "fals": [1, 5, 19, 26, 27, 28, 49, 50, 51, 52, 53, 65, 67, 80, 82, 84, 85, 86, 87, 88, 89, 99, 100, 101, 110, 112, 144, 145, 149, 153, 158, 159, 160, 162, 164, 176, 177, 178, 179, 180, 181, 182, 183, 184, 196, 197, 198, 205, 210, 211, 227], "fan": [84, 85, 88, 89], "fan_in": [84, 85], "fan_out": [84, 85], "fast": 148, "faster": [143, 147, 155], "fc": [30, 100, 101, 131, 132, 133, 134, 135, 136], "fc1": [23, 24, 29, 33, 91, 93, 94, 95, 97, 112], "fc2": [23, 24, 29, 33, 91, 93, 94, 95, 97, 112], "fc3": 24, "featur": [3, 21, 22, 23, 24, 25, 56, 58, 65, 101, 104, 105, 106, 107, 110, 112, 120, 121, 122, 123, 124, 125, 126, 131, 132, 133, 134, 135, 136, 138, 143], "feature_extractor": 21, "fed": [3, 237], "feed": [3, 164, 237], "fetch": 0, "fewer": 1, "field": [5, 25], "file": 3, "fill": [82, 86, 87, 158, 159, 160, 162, 181, 182, 183, 184], "filter": [44, 45, 46, 48, 100, 101], "filter_height": 48, "filter_s": 48, "filter_width": 48, "final": [29, 30, 31, 32, 33, 226, 237], "find": [18, 196, 198], "fine": 237, "finish": 155, "first": [5, 11, 21, 30, 31, 56, 110, 144, 145, 146, 147, 148, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 216, 225, 226, 227, 237], "fit": 138, "fix": [30, 217], "flatten": [21, 33, 48, 173, 215, 218, 219], "flexibl": [1, 3, 4, 7, 21, 29, 30, 31, 32, 33, 138, 140, 156, 181, 182, 227, 237], "flip": [232, 234, 237], "float": [2, 5, 26, 28, 35, 38, 49, 50, 51, 52, 53, 59, 60, 61, 65, 67, 68, 81, 82, 86, 87, 88, 89, 90, 92, 103, 104, 105, 106, 107, 114, 115, 116, 120, 121, 122, 123, 124, 125, 126, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 156, 162, 164, 176, 179, 190, 211, 229, 231, 232, 233, 234], "float32": [26, 28, 164, 176, 177, 180, 181, 183, 211, 227], "float64": [184, 211, 227], "flow": [33, 89, 91, 95, 97, 99, 100, 101, 110, 112, 153], "fly": [2, 3], "fname": 3, "focu": 7, "focus": 7, "follow": [0, 7, 8, 11, 17, 18, 19, 35, 36, 38, 39, 40, 41, 42, 43, 56, 58, 80, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 156, 163, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 196, 198, 216, 220, 228, 229, 230, 231, 232, 233, 234, 237], "form": [17, 173, 216, 219, 223, 237], "format": [2, 3, 5, 115, 118, 227], "formul": 36, "formula": [11, 19, 42, 69, 70, 71, 96, 116, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 169, 210, 231], "forward": [7, 21, 22, 23, 24, 26, 27, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], "found": 7, "foundat": [27, 138, 140, 164], "four": 217, "frac": [9, 10, 11, 13, 14, 15, 16, 18, 19, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 56, 58, 69, 70, 71, 72, 73, 74, 76, 77, 78, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 131, 132, 133, 134, 135, 136, 142, 143, 144, 145, 146, 147, 148, 149, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229], "frame": 53, "framework": [4, 7, 25, 115, 118, 120, 121, 122, 123, 124, 125, 139, 140, 237], "frequent": [115, 118], "from": [0, 1, 2, 3, 4, 5, 7, 14, 16, 26, 27, 28, 29, 30, 31, 32, 33, 48, 56, 65, 67, 80, 82, 84, 85, 86, 87, 88, 89, 99, 100, 101, 103, 104, 105, 106, 107, 110, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 131, 132, 133, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 162, 163, 164, 169, 170, 171, 175, 177, 196, 197, 198, 205, 210, 212, 214, 216, 219, 221, 222, 223, 225, 228, 229, 230, 231, 232, 233, 234, 237], "full": 19, "full_matric": 19, "fulli": [4, 8, 21, 22, 23, 24, 25, 58, 112, 163], "function": [3, 4, 5, 7, 8, 27, 29, 30, 31, 32, 33, 90, 91, 92, 93, 94, 95, 96, 97, 103, 104, 105, 106, 107, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 138, 140, 156, 163, 226, 237], "fundament": [7, 58, 112, 227], "further": [7, 163, 197, 205, 210], "futur": 111, "g": [0, 10, 11, 14, 17, 19, 21, 22, 23, 24, 103, 139, 142, 149, 212, 231], "g_": 143, "g_t": 149, "gain": [88, 89], "gamma": [120, 121, 122, 123, 124, 125, 126], "gaussian": [36, 91], "gelu": [37, 55, 98, 109], "gelunetwork": 91, "gener": [16, 81, 103, 104, 105, 106, 107, 124, 145, 147, 148, 155, 158, 159, 160, 161, 162, 163, 168, 176, 178, 179, 216, 230, 231, 232, 234, 237], "get": 5, "give": [7, 141, 149], "given": [10, 11, 14, 16, 17, 19, 48, 114, 115, 118, 139, 153, 182, 184, 226, 231, 232, 234, 237], "global": [0, 153, 155, 161, 163], "goal": [114, 115, 118], "grad": [26, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 48, 56, 58, 80, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 131, 132, 133, 134, 135, 136, 139, 140, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 232, 234, 235], "grad_output": 14, "gradient": [7, 8, 26, 28, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 158, 159, 160, 162, 176, 177, 178, 179, 180, 181, 182, 183, 184, 211, 227], "graph": [7, 89, 164, 176, 177, 180, 181, 182, 183, 184, 227], "grayscal": [5, 21, 22, 23, 24, 231, 237], "greater": 190, "green": 231, "grid": 216, "group": [30, 44, 45, 46, 99, 100, 101, 139, 140], "group1": 30, "group2": 30, "guarante": 161, "h": [45, 46, 48, 52, 53, 70, 71, 73, 74, 77, 78, 80, 81, 121, 122, 124, 125, 129, 130, 133, 136, 228, 230], "h_": [45, 46, 70, 71, 73, 74, 77, 78, 80, 100, 101, 129, 130, 132, 133, 135, 136], "h_out": [45, 46, 73, 74, 77, 78], "h_stack": 214, "ha": [0, 11, 33, 44, 45, 46, 114, 115, 120, 121, 122, 123, 124, 125, 126, 139, 140, 169, 208, 212, 214, 222, 225, 231], "half": 203, "hand": 18, "handl": [0, 3, 7, 16, 27, 29, 30, 31, 32, 33, 115, 118, 138, 140, 155], "handwritten": [5, 24], "hardwar": 7, "hat": [144, 145, 146, 147, 148], "have": [0, 1, 10, 11, 13, 16, 17, 19, 28, 30, 32, 33, 45, 46, 89, 138, 180, 181, 182, 183, 184, 196, 198, 212, 214, 216, 221, 222, 225, 229, 235], "height": [45, 46, 48, 52, 53, 70, 71, 73, 74, 77, 78, 80, 81, 100, 101, 121, 122, 124, 125, 129, 130, 132, 133, 135, 136, 228, 230, 235], "help": [7, 38, 40, 53, 90, 92, 94, 97, 120, 121, 122, 131, 132, 134, 135, 141, 144, 145, 147, 153, 154, 155, 156], "henc": 220, "here": [3, 9, 27, 56, 138, 140, 154, 155, 156, 163, 226, 227, 237], "hidden": 30, "hidden_s": 30, "hierarch": [30, 33, 138], "hierarchi": 100, "hierarchicalnetwork": 30, "high": [7, 159, 162], "higher": [115, 118, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 168, 169, 173, 194], "highest": 159, "highlight": [134, 135, 136], "hint": 156, "histor": 143, "histori": [158, 159, 160, 162, 176, 177, 178, 179, 180, 181, 182, 183, 184], "hold": [29, 30, 31, 32], "horizont": [214, 222, 232, 237], "hot": [115, 118], "how": [2, 3, 7, 30, 33, 138, 156, 237], "howev": [26, 89], "hstack": 215, "http": 5, "huber": [61, 116], "huber_loss": [55, 62], "huberloss": [109, 119], "huberregressionmodel": 116, "hue": 237, "hyperbol": [43, 97, 192, 202, 207], "hyperparamet": [139, 141], "i": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237], "ideal": [7, 33], "ident": [13, 14, 81, 109, 113, 161, 163, 180, 220], "identifi": 31, "idx": [2, 3], "ii": 208, "ij": [42, 80, 96, 167, 168, 169, 173, 216], "ik": [167, 168, 169], "ill": [10, 16], "imag": [3, 4, 5, 21, 22, 23, 24, 25, 45, 67, 81, 100, 124, 216, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237], "image_dir": 3, "image_path": 3, "imagedataset": 3, "imageio": 3, "imbal": [115, 118], "impact": 147, "implement": [2, 3, 7, 16, 21, 25, 27, 48, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 214, 225, 231], "impli": [99, 100], "import": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237], "improp": [30, 33, 163], "improv": [65, 81, 91, 94, 97, 141, 142, 143, 144, 145, 146, 147, 148, 149, 156, 230, 233, 237], "imread": 3, "in1_featur": [56, 110], "in2_featur": [56, 110], "in_channel": [30, 33, 99, 100, 101, 121, 122, 131, 132, 133, 134, 135, 136, 138], "in_featur": [29, 30, 33, 58, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 103, 104, 105, 110, 112, 114, 115, 116, 117, 118, 120, 123, 126, 131, 132, 133, 134, 135, 136], "includ": [3, 4, 7, 8, 14, 15, 21, 27, 28, 30, 32, 33, 80, 138, 139, 140, 147, 156, 163, 169, 217], "inclus": [28, 31, 159, 162], "incom": [58, 112], "incomplet": 2, "incompletedataset": 2, "incorpor": [19, 91], "increas": [44, 45, 46, 48, 81, 143, 150, 154, 214, 225, 231, 232, 234, 237], "independ": [30, 44, 45, 46, 103, 104, 105, 106, 107, 126, 169, 179, 229, 231, 233, 235], "index": [0, 2, 5, 154, 176, 177, 180, 216, 220], "indexerror": 0, "indic": [0, 1, 28, 30, 32, 33, 60, 64, 115, 118, 131, 153, 164, 228, 230], "individu": [3, 30, 33, 116, 126, 140, 143, 150], "induc": [40, 94], "inf": 206, "infer": [30, 33, 155], "infin": [17, 19, 146], "inform": [7, 26, 140, 142, 155], "infti": [15, 148], "inherit": [1, 141, 149, 151], "init": 83, "initi": [1, 26, 28, 29, 30, 31, 32, 33, 82, 84, 85, 86, 87, 88, 89, 99, 100, 101, 110, 112, 114, 115, 116, 117, 118, 120, 121, 122, 126, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 158, 161, 162, 163, 176, 180, 181, 182, 183, 184, 211], "initial_accumulator_valu": 143, "inner": [7, 167, 185], "input": [7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 156, 163, 164, 165, 167, 168, 169, 173, 177, 179, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237], "input1": 110, "input2": 110, "input_": [35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 128, 129, 130], "input_1": 56, "input_2": 56, "input_data": [90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 126, 131, 132, 133, 134, 135, 136], "input_s": [30, 32, 96, 115, 118], "input_tensor": [7, 21, 22, 23, 24, 26, 29, 30, 31, 32, 33, 42, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 131, 132, 133, 134, 135, 136, 138, 228, 229, 230, 231, 232, 233, 234, 235], "insid": [3, 153, 155], "insight": 7, "inspect": [27, 28, 33, 139], "instabl": [16, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151], "instal": 7, "instanc": [0, 1, 7, 22, 23, 24, 27, 28, 29, 31, 32, 33, 67, 123, 124, 125, 126, 139, 211, 219, 223, 237], "instance_norm": [55, 66, 123, 124, 125], "instancenorm1d": [109, 127], "instancenorm1dmodel": 123, "instancenorm2d": [109, 127], "instancenorm3d": [109, 127], "instanti": 2, "instead": [7, 29, 30, 31, 32, 33, 84, 85, 88, 89, 144, 145, 146, 155, 156, 178, 179], "int": [0, 1, 2, 5, 14, 15, 21, 26, 28, 42, 44, 45, 46, 48, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 86, 87, 88, 89, 96, 99, 100, 101, 110, 112, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 144, 145, 146, 147, 148, 150, 158, 159, 160, 161, 162, 164, 176, 177, 178, 180, 181, 183, 190, 196, 197, 198, 205, 209, 210, 211, 212, 217, 219, 220, 221, 222, 223, 224, 228, 230, 235], "integ": [1, 3, 14, 44, 45, 46, 70, 71, 99, 100, 101, 126, 129, 130, 132, 133, 134, 135, 136, 156, 159, 160, 162, 163, 178, 181, 183, 197, 205, 209, 210, 217, 219, 220, 223], "integr": [1, 2, 4, 5, 8, 28, 30, 32, 33, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 110, 112, 131, 132, 133, 134, 135, 136], "intend": [26, 31, 32], "intens": [16, 229, 231], "intent": 156, "interact": [56, 110, 138, 163], "interfac": [2, 27, 30, 140], "interfer": [153, 155], "intermedi": 16, "intern": [29, 30, 31, 32, 33, 115, 118, 138, 228, 229, 230, 231, 232, 233, 234, 235], "interpol": [55, 79, 235], "interpret": [42, 96, 156, 212], "interv": [158, 162, 176], "introduc": [25, 39, 91, 93, 95, 97, 103, 104, 105, 106, 107, 230, 233, 237], "introspect": 33, "intuit": [7, 29, 31, 138, 237], "inv": 12, "inv_a": 13, "invari": [132, 135], "invers": [7, 10, 13, 14, 16, 143, 187, 188, 189], "invert": [10, 13, 14, 18], "involv": [9, 10, 11, 13, 16, 17, 19, 35, 36, 38, 39, 40, 41, 43, 56, 58, 80, 99, 100, 101, 110, 112, 156, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 184, 194, 195, 196, 198, 201, 203, 216, 217, 219, 223], "is_leaf": 164, "issu": [3, 94, 120, 121, 122, 144, 145], "item": 117, "iter": [0, 1, 2, 3, 26, 27, 30, 32, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 176], "ith": [42, 96], "its": [4, 14, 16, 26, 29, 30, 31, 32, 44, 45, 46, 48, 81, 89, 91, 93, 134, 135, 136, 138, 139, 142, 150, 153, 154, 155, 176, 178, 179, 183, 196, 198, 211, 220, 229, 232, 234, 237], "itself": [9, 14, 29, 30, 31, 32], "j": [5, 42, 96, 120, 121, 122, 123, 124, 125, 131, 132, 134, 135, 216, 222, 228, 230], "jk": 168, "join": [3, 212], "k": [14, 44, 99, 115, 121, 122, 124, 125, 131, 134, 135, 167, 168, 177, 180, 212], "k_d": [46, 101, 133, 136], "k_h": [45, 46, 100, 101, 132, 133, 136], "k_w": [45, 46, 100, 101, 132, 133, 136], "kaim": [84, 85, 88, 89], "kaiming_norm": 83, "kaiming_uniform": 83, "keep": [27, 93, 142, 155, 220], "keep_grad": [28, 158, 159, 160, 162, 164, 176, 177, 178, 179, 180, 181, 182, 183, 184, 211, 227], "keep_var": 27, "keepdim": [196, 197, 198, 205, 210], "kei": [25, 27, 29, 31, 33, 139], "kept": [197, 205, 210], "kernel": [21, 22, 23, 24, 44, 45, 46, 48, 69, 70, 71, 72, 73, 74, 76, 77, 78, 99, 100, 101, 128, 129, 130, 132, 133, 136], "kernel_s": [30, 33, 72, 73, 74, 76, 77, 78, 99, 100, 101, 121, 122, 131, 132, 133, 134, 135, 136], "keyerror": 27, "keyword": [27, 111], "kj": [167, 169], "kroneck": [42, 96], "kwarg": [22, 23, 24, 27, 111], "l": [9, 16, 44, 51, 69, 72, 76, 103, 104, 105, 106, 107, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128], "l2": [141, 142, 143, 144, 145, 146, 147, 148, 149, 151], "l_": [44, 69, 72, 76, 99, 128, 131, 134], "l_out": [44, 72, 76], "label": [4, 5, 114, 115, 118], "lambd": 141, "lambda": [11, 40, 94, 141, 145], "lambda_1": 11, "lambda_2": 11, "lambda_i": 11, "lambda_n": 11, "languag": [4, 99, 110, 131, 134], "larg": [0, 3, 16, 116, 138, 141, 144, 145, 146, 149, 150, 151, 155], "larger": [29, 31, 44, 45, 46, 48, 141, 170, 217, 228, 230, 235], "largest": 196, "last": [1, 42, 68, 96, 168, 169, 212, 232, 234], "latest": 4, "layer": [7, 21, 22, 23, 24, 25, 27, 29, 30, 33, 42, 58, 65, 67, 68, 84, 85, 88, 89, 96, 99, 100, 101, 110, 111, 112, 118, 126, 131, 132, 133, 134, 135, 136, 138, 163, 217, 227], "layer_group": 30, "layer_norm": [55, 66, 126], "layer_sequ": [30, 33], "layernorm": [109, 127], "layernormmodel": 126, "lead": [30, 33, 91, 123, 124, 125, 126, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 163], "leaf": 164, "leaki": [38, 92], "leaky_relu": [37, 55, 92], "leakyrelu": [98, 109], "learn": [1, 3, 4, 5, 7, 14, 16, 25, 29, 30, 31, 32, 39, 42, 90, 92, 93, 96, 99, 100, 101, 104, 105, 106, 107, 110, 112, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 161, 226, 227, 237], "learnabl": [26, 27, 28, 65, 67, 68, 99, 100, 101, 110, 112, 120, 121, 122, 123, 124, 125, 126, 138], "least": [16, 17, 19, 208], "lecun": [5, 25], "left": [14, 15, 16, 19, 36, 42, 91, 96, 114, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 134, 135, 136, 228, 230], "leftarrow": 147, "len": [0, 1, 2, 3, 216], "lenet": [22, 23, 24, 25], "lenet_1": 25, "lenet_4": 25, "lenet_5": 25, "length": [30, 44, 51, 69, 72, 76, 99, 111, 120, 123, 128, 131, 134, 217, 229], "leq": [116, 148, 174, 190], "lerp": 80, "less": [0, 35, 38, 61, 90, 92, 115, 116, 118, 190], "let": 11, "level": 7, "leverag": [18, 25, 138], "librari": [3, 7, 8, 27, 138, 139, 140, 156, 163, 164, 237], "lightweight": 7, "like": [7, 25, 26, 27, 30, 33, 44, 88, 89, 94, 103, 120, 121, 122, 123, 124, 125, 153, 154, 156, 211, 227, 237], "likelihood": [64, 115, 118], "limit": [142, 190], "linalg": [7, 12], "linalgerror": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "linear": [7, 8, 9, 16, 17, 18, 29, 30, 31, 33, 35, 36, 38, 39, 40, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 103, 104, 105, 110, 111, 114, 115, 116, 117, 118, 120, 123, 126, 131, 132, 133, 134, 135, 136, 180], "linearli": 116, "list": [0, 1, 21, 26, 28, 29, 30, 31, 32, 68, 111, 126, 139, 156, 158, 159, 160, 162, 164, 177, 178, 179, 181, 182, 183, 184, 209, 220, 221, 224, 226], "listdir": 3, "liter": [59, 60, 61, 63, 64, 80, 84, 85, 99, 100, 101, 114, 115, 116, 117, 118, 216], "ln": 174, "load": [3, 4, 5, 26, 27, 28, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], "load_state_dict": [27, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], "loader": [1, 2, 3], "local": [25, 48, 99], "locat": 80, "log": [64, 114, 115, 118, 185], "log_softmax": 118, "logarithm": [174, 194, 195], "logic": [3, 128, 129, 130, 138, 139], "logit": [42, 96, 115], "logsoftmax": [115, 118], "long": [147, 209], "loop": [1, 30, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], "loss": [7, 16, 29, 30, 31, 32, 33, 42, 59, 60, 61, 63, 64, 90, 91, 92, 93, 94, 95, 96, 97, 103, 104, 105, 106, 107, 111, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], "low": [7, 159, 162], "lower": [9, 87, 141, 149, 150, 151, 162], "lowest": 159, "lr": [139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], "lu": 13, "lucid": [0, 1, 2, 5, 12, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 157, 185, 215, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235], "m": [29, 30, 33, 132, 133, 135, 136, 144, 145, 146, 147, 148, 180], "m_": [144, 145, 146, 147, 148], "m_t": [147, 148], "machin": [3, 5, 7, 16, 144, 154, 161], "magnitud": [149, 150, 237], "mai": [3, 7, 11, 13, 16, 30, 32, 81, 116, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 155, 163, 231, 237], "main": [7, 17, 30, 177, 180], "maintain": [16, 26, 27, 29, 30, 31, 33, 40, 84, 85, 88, 89, 90, 91, 94, 103, 104, 105, 106, 107, 120, 121, 122, 123, 124, 125, 144, 149, 228, 231, 235], "make": [1, 3, 7, 21, 30, 33, 95, 115, 116, 126, 132, 135, 138, 143, 144, 145, 146, 154, 163, 164, 169, 216, 226, 237], "manag": [7, 27, 29, 30, 31, 32, 33, 138, 140, 153, 155, 163], "manhattan": 15, "manipul": [7, 29, 31, 237], "manner": [30, 33], "manual": [59, 60, 64, 114, 115, 118, 155], "map": [27, 41, 43, 95, 97], "mask": [26, 103, 104, 105, 106, 107], "match": [18, 27, 30, 33, 59, 61, 63, 68, 139, 194, 219, 220, 223, 224, 229, 237], "math": [191, 201, 206], "mathbf": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 56, 58, 80, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 131, 132, 133, 134, 135, 136, 167, 168, 169, 173, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235], "mathcal": [84, 86, 88, 103, 104, 105, 106, 107, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126], "mathemat": [13, 230, 232, 233, 234], "mathrm": 16, "matmul": 185, "matric": [8, 10, 11, 13, 16, 18, 19, 167, 168, 169, 180, 216], "matrix": [7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 48, 56, 111, 112, 138, 167, 216], "matrix_pow": 12, "max": [15, 39, 76, 77, 78, 93, 134, 135, 136, 146, 170, 185, 190], "max_pool": [134, 135, 136], "max_pool1d": [55, 75], "max_pool2d": [55, 75], "max_pool3d": [55, 75], "max_valu": 190, "maxim": 3, "maximum": [15, 93, 134, 135, 136, 144, 146, 185, 190, 196, 233], "maxpool1d": [109, 137], "maxpool1dmodel": 134, "maxpool2d": [30, 33, 100, 109, 137], "maxpool2dmodel": 135, "maxpool3d": [101, 109, 137], "maxpool3dmodel": 136, "mean": [5, 17, 26, 40, 44, 45, 46, 49, 59, 60, 61, 63, 64, 65, 67, 86, 90, 91, 92, 93, 94, 95, 97, 101, 103, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 144, 145, 146, 147, 148, 149, 153, 160, 185, 190, 194, 195, 196, 198, 201, 203, 205, 208, 209, 210, 226, 229, 237], "meaning": [33, 156], "measur": [114, 115, 117, 118], "mechan": [7, 32, 56], "membership": 114, "memori": [2, 3, 155, 178, 179], "meshgrid": 215, "method": [3, 7, 8, 13, 29, 30, 31, 32, 33, 59, 60, 61, 63, 64, 84, 85, 88, 89, 114, 115, 116, 117, 118, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 163], "middl": 154, "might": 138, "min": [171, 185, 190], "min_valu": 190, "mind": [0, 3, 7, 30, 33, 155], "mini": 1, "minim": [4, 7, 33, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 140], "minimalist": 7, "minimum": [185, 190, 198], "minu": 95, "mirror": [182, 184], "mismatch": [27, 138, 139], "miss": [27, 138], "mitig": [38, 90, 92, 94, 120, 121, 122], "mnist": [4, 6, 22, 23], "mnist_train": [4, 5], "mode": [7, 53, 65, 67, 80, 84, 85, 103, 104, 105, 106, 107, 217], "model": [1, 3, 4, 7, 14, 17, 19, 21, 26, 27, 28, 29, 30, 31, 32, 33, 42, 81, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 126, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 163, 226, 227, 237], "modern": 25, "modif": [33, 155], "modifi": [29, 30, 31, 32, 82, 84, 85, 86, 87, 88, 89, 103, 153, 155, 161, 214, 225], "modul": [5, 7, 21, 26, 28, 29, 30, 31, 32, 33, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 156, 163, 227, 237], "modular": [3, 7, 25, 27, 30, 33, 138, 237], "moduledict": [30, 31, 33, 34], "modulelist": [32, 33, 34], "moment": [144, 145, 146, 147, 148], "momentum": [65, 67, 120, 121, 122, 123, 124, 125, 141, 147, 149, 151], "momentum_decai": 147, "moor": 16, "more": [3, 4, 7, 11, 29, 30, 33, 90, 104, 105, 106, 107, 138, 139, 140, 141, 142, 145, 146, 149, 150, 151, 160, 169, 208, 222, 237], "most": [8, 135, 227, 228, 237], "move": [141, 149], "mse": [61, 63, 116, 117], "mse_loss": [55, 62], "mseloss": [109, 119], "mu": [86, 120, 121, 122, 123, 124, 125, 126, 210], "mu_c": 229, "mu_i": [123, 124, 125], "much": 237, "mul": 185, "multi": [3, 4, 42, 60, 64, 96, 115, 118, 197, 205, 210], "multidimension": [158, 162, 178], "multipl": [1, 3, 7, 8, 14, 18, 31, 32, 33, 48, 80, 81, 103, 104, 105, 106, 107, 115, 118, 138, 154, 158, 159, 160, 162, 167, 172, 178, 179, 226, 231, 237], "multipli": [14, 32, 58, 112, 150, 172, 173], "must": [0, 1, 3, 9, 10, 11, 13, 14, 17, 18, 19, 27, 29, 30, 31, 32, 33, 68, 103, 104, 105, 106, 107, 118, 139, 155, 208, 212, 214, 217, 219, 220, 222, 223, 225, 228, 229, 230, 231, 232, 234], "mymodel": [27, 28, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], "myoptim": [139, 140], "n": [14, 15, 25, 29, 30, 33, 44, 45, 46, 48, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 84, 86, 88, 99, 100, 101, 106, 107, 110, 112, 114, 115, 117, 118, 120, 121, 122, 123, 124, 125, 128, 129, 130, 131, 132, 133, 134, 135, 136, 180, 197, 208, 210], "n1": 15, "nabla_": [142, 143, 144, 145, 146, 147, 148, 150], "nabla_t": 148, "nadam": 152, "name": [25, 27, 29, 31, 33, 156], "nan": [17, 19], "natur": [16, 25, 99, 110, 131, 134, 174, 194, 195], "ndarrai": [26, 28, 156, 164, 177, 179, 182, 184, 211], "ndim": [17, 19, 28, 164], "ne": 14, "nearest": 80, "necessari": [4, 5, 16, 155, 214, 225], "need": [2, 4, 30, 31, 32, 42, 110, 138, 155, 178, 179, 226, 227, 237], "neg": [14, 16, 19, 35, 64, 81, 90, 92, 93, 94, 115, 118, 150, 212], "negative_slop": [38, 92], "neglect": 32, "neighbor": 80, "neq": 15, "nest": [30, 33, 138], "nesterov": 147, "network": [3, 4, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 43, 44, 45, 46, 56, 58, 65, 81, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 126, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 149, 151, 162, 163, 164, 176, 181, 183, 196, 198, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237], "neural": [3, 4, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 43, 44, 45, 46, 56, 58, 65, 81, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 126, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 149, 151, 162, 163, 164, 176, 181, 183, 196, 198, 217, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237], "neuralnetwork": 93, "neuron": 92, "never": 231, "new": [27, 28, 35, 36, 38, 39, 40, 41, 43, 56, 58, 80, 84, 85, 86, 87, 88, 89, 139, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 211, 212, 214, 217, 219, 220, 222, 223, 224, 225], "next": [33, 226], "nll": 64, "nll_loss": [55, 62], "nllloss": [109, 119], "nn": [5, 7, 21, 34, 37, 47, 54, 57, 62, 66, 75, 79, 83, 98, 102, 108, 109, 113, 119, 127, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 227, 237], "no_grad": 153, "node": 164, "nois": [19, 163], "non": [11, 14, 16, 19, 32, 36, 38, 39, 84, 85, 90, 91, 92, 93, 94, 95, 97, 103, 104, 105, 106, 107, 144, 145, 155, 174, 190], "none": [0, 1, 2, 5, 21, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 131, 132, 133, 134, 135, 136, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 154, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 180, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235], "norm": [8, 12, 146], "normal": [5, 36, 40, 42, 43, 65, 67, 68, 83, 84, 88, 91, 94, 96, 103, 120, 121, 122, 123, 124, 125, 126, 149, 160, 163, 226, 236, 237], "normalized_shap": [68, 126], "note": [44, 103], "noth": [49, 50, 51, 52], "notimplementederror": [2, 27, 139], "notin": 190, "np": [26, 28, 115, 118, 156, 164, 169, 176, 177, 180, 181, 183, 184, 195, 211, 227], "npy": 5, "num_class": [96, 115, 118], "num_featur": [33, 120, 121, 122, 123, 124, 125], "num_paramet": 32, "number": [0, 1, 2, 5, 10, 11, 13, 16, 18, 19, 21, 22, 23, 24, 28, 30, 32, 33, 44, 45, 46, 48, 51, 52, 53, 56, 58, 60, 64, 65, 67, 69, 70, 71, 80, 81, 84, 85, 88, 89, 95, 99, 100, 101, 110, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 132, 133, 134, 135, 136, 141, 158, 161, 162, 164, 174, 176, 178, 180, 196, 197, 198, 209, 210, 212, 214, 217, 219, 220, 221, 223, 225, 229, 231, 232, 234, 237], "numer": [13, 16, 59, 60, 65, 67, 68, 114, 115, 120, 121, 122, 123, 124, 125, 126, 142, 143, 144, 145, 146, 147, 148, 149, 156, 166, 176, 181, 183], "numpi": [7, 26, 28, 115, 118, 156, 164, 169, 177, 180, 195, 208, 211, 217, 219, 223, 227, 237], "o": [3, 133, 136, 181, 182], "object": [1, 3, 8, 27, 31, 32, 117, 138, 155, 165, 166, 170, 171, 172, 175, 211], "observ": 144, "obtain": 1, "occur": [81, 155, 212], "occurr": 14, "odot": [103, 104, 105, 106, 107], "off": 153, "offer": [4, 7, 138, 140, 163, 237], "offset": 180, "often": [14, 44, 45, 46, 48, 115, 118, 176, 183, 227, 231, 235, 237], "older": 147, "onc": 155, "one": [0, 32, 33, 42, 44, 58, 72, 76, 94, 95, 96, 99, 105, 115, 118, 120, 123, 131, 134, 139, 154, 156, 160, 175, 182, 196, 198, 213, 218, 222, 227], "ones": [56, 58, 99, 100, 101, 112, 120, 121, 122, 123, 124, 125, 126, 138, 180, 182, 185], "ones_lik": 185, "onli": [7, 80, 93, 103, 104, 105, 106, 107, 114, 115, 118, 120, 121, 122, 123, 124, 125, 126, 134, 135, 136, 150, 153, 176, 190, 196, 198, 208, 217, 218, 220, 221], "onto": [17, 19], "openml": 5, "oper": [3, 7, 8, 13, 16, 26, 27, 30, 35, 36, 38, 39, 40, 41, 43, 44, 45, 46, 48, 53, 56, 58, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 153, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 178, 179, 181, 183, 194, 195, 196, 197, 198, 201, 203, 205, 208, 210, 212, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 235], "operatornam": [14, 16], "opposit": 141, "optim": [3, 7, 8, 14, 16, 17, 19, 26, 28, 31, 32, 48, 99, 100, 101, 138, 155], "optimizer_st": [139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], "option": [1, 5, 15, 19, 21, 26, 27, 28, 29, 30, 31, 32, 35, 38, 42, 45, 46, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 72, 73, 74, 76, 77, 78, 80, 81, 84, 85, 86, 87, 88, 89, 90, 92, 96, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 131, 132, 133, 134, 135, 136, 139, 141, 149, 151, 158, 159, 160, 162, 164, 176, 177, 178, 179, 180, 181, 182, 183, 184, 196, 197, 198, 205, 209, 210, 211, 212, 216, 219, 221, 222, 227, 231, 232, 234], "ord": 15, "order": [1, 3, 15, 19, 29, 30, 31, 32, 33, 209, 226], "ordered_dict": 33, "ordereddict": [27, 29, 30, 33], "organ": [29, 30, 31, 33], "orient": 237, "origin": [24, 49, 81, 97, 217, 218, 219, 220, 223, 224, 235], "orthogon": [16, 17, 19], "orthonorm": 17, "oscil": [141, 149, 151], "other": [2, 3, 7, 13, 21, 24, 26, 27, 30, 33, 84, 85, 103, 138, 139, 153, 155, 163, 164, 176, 178, 181, 183, 208, 216, 237], "otherwis": [35, 38, 39, 40, 42, 90, 92, 93, 94, 96, 104, 105, 106, 107, 116, 131, 132, 133, 134, 135, 136, 139, 150, 170, 171, 196, 198], "otim": [16, 56, 110], "out": [0, 3, 4, 35, 36, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 84, 85, 88, 89, 99, 100, 101, 103, 104, 105, 106, 107, 128, 129, 130, 131, 132, 133, 134, 135, 136, 141, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225], "out_channel": [21, 30, 33, 99, 100, 101, 121, 122, 131, 132, 133, 134, 135, 136, 138], "out_featur": [29, 30, 33, 56, 58, 90, 91, 92, 93, 94, 95, 96, 97, 100, 101, 103, 104, 105, 110, 112, 114, 115, 116, 117, 118, 120, 123, 126, 131, 132, 133, 134, 135, 136], "outcom": [231, 232, 234], "outer": 185, "outlier": [61, 116], "output": [0, 1, 2, 7, 14, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 56, 58, 69, 70, 71, 80, 81, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 159, 160, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 177, 179, 180, 181, 183, 184, 194, 195, 196, 197, 198, 201, 203, 205, 208, 209, 210, 216, 217, 219, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235], "output_height": 48, "output_lay": [30, 33], "output_s": [30, 69, 70, 71, 128, 129, 130], "output_width": 48, "outsid": 0, "over": [0, 1, 2, 3, 8, 27, 30, 32, 42, 69, 70, 71, 96, 99, 100, 101, 115, 118, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 141, 142, 143, 144, 145, 158, 162, 196, 197, 198, 205, 208, 210, 231, 232, 234], "overdetermin": 16, "overfit": [1, 50, 53, 104, 105, 106, 107, 141, 144, 149, 151], "overrid": [2, 3], "overridden": [27, 139], "overwrit": [29, 31], "own": [4, 29, 30, 31, 32, 44, 45, 46, 89, 138, 229], "p": [15, 16, 28, 31, 32, 49, 50, 51, 52, 53, 103, 104, 105, 106, 107, 131, 134, 135, 231, 232, 234, 237], "p_d": [133, 136], "p_h": [132, 133, 136], "p_w": [132, 133, 136], "packag": [2, 3, 4, 8, 25, 138, 140, 161, 163, 227, 237], "pad": [21, 30, 33, 44, 45, 46, 48, 69, 70, 71, 72, 73, 74, 76, 77, 78, 99, 100, 101, 121, 122, 128, 129, 130, 131, 132, 133, 134, 135, 136, 215], "pad_after_dim1": 217, "pad_after_dim2": 217, "pad_before_dim1": 217, "pad_before_dim2": 217, "pad_width": 217, "padding_height": 48, "padding_width": 48, "pair": 56, "parallel": [1, 3], "param": [27, 28, 31, 32, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], "param1": 27, "param_dict": 31, "param_group": [139, 140], "param_groups_setup": 139, "param_list": 32, "paramet": [0, 2, 7, 22, 23, 24, 25, 27, 138, 139, 140, 156, 163, 237], "parameterdict": 34, "parameterlist": 34, "parent": 138, "part": [26, 27, 89, 138, 153, 155, 163, 176, 177, 180, 181, 182, 183, 184, 227, 237], "partial": [9, 10, 11, 13, 14, 15, 16, 18, 19, 35, 36, 38, 39, 40, 41, 42, 43, 56, 58, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 131, 132, 133, 134, 135, 136, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225], "particip": [28, 227], "particular": [29, 31], "particularli": [7, 16, 30, 31, 32, 33, 42, 58, 96, 112, 115, 118, 123, 124, 125, 126, 145, 153, 226], "pass": [2, 7, 16, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 80, 90, 91, 92, 93, 94, 95, 97, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 126, 131, 132, 133, 134, 135, 136, 138, 156, 164, 197, 205, 208, 209, 210, 212, 214, 218, 220, 221, 225, 227, 237], "past": [141, 142, 144, 149], "patch": [48, 132], "path": [3, 5], "pattern": [39, 93, 99, 100, 101], "penal": [141, 149, 151], "penalti": [142, 143, 144, 145, 146, 147, 148], "penros": 16, "per": [1, 69, 123, 124, 125, 126, 128], "perform": [3, 7, 8, 9, 16, 21, 22, 23, 24, 27, 28, 32, 36, 44, 45, 46, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 153, 155, 161, 163, 165, 166, 169, 172, 175, 194, 196, 198, 205, 209, 226, 228, 230, 235, 237], "permut": 209, "persist": [26, 158, 159, 160, 162, 178, 179], "perturb": [11, 18, 19, 237], "phi": [36, 91], "pi": [36, 91, 191, 201, 206], "pil": [227, 237], "pinv": 12, "pioneer": 25, "pipelin": [5, 163, 226, 227, 229], "pixel": [5, 80, 229, 231], "place": [82, 84, 85, 86, 87, 88, 89], "placehold": [27, 111], "plai": [156, 163], "plot": 216, "point": [4, 81, 153], "pool": [21, 22, 23, 24, 25, 69, 70, 71, 72, 73, 74, 76, 77, 78, 100, 101, 128, 129, 130, 131, 132, 133, 134, 135, 136, 196, 198], "pool1": 33, "pool2": 33, "poorli": 13, "popul": 27, "popular": 4, "portion": 237, "pose": 16, "posit": [1, 9, 14, 27, 33, 81, 90, 92, 93, 94, 131, 132, 133, 134, 135, 136, 150, 154, 174, 219, 223, 230], "possibl": [7, 237], "potenti": [16, 111, 149, 221], "power": [7, 14, 154, 155, 185, 226, 227, 237], "practic": [16, 115, 118], "practition": 237, "preced": [28, 164], "predefin": [4, 25, 30, 94], "predict": [114, 115, 117, 118], "prefix": 27, "prepar": [3, 154, 217, 219, 223, 227, 237], "prepend": 27, "preprocess": [3, 4, 48, 81, 163, 226, 227, 237], "present": [114, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 132], "preserv": [49, 81, 103, 176, 177, 180, 181, 182, 183, 184, 197, 205, 210], "preset": 4, "prevent": [1, 29, 30, 31, 32, 33, 50, 53, 104, 105, 106, 107, 114, 115, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 155], "previou": [141, 150, 155], "previous": 144, "primari": [7, 156], "primarili": 33, "print": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235], "probabilist": 163, "probabl": [36, 42, 49, 50, 51, 52, 53, 59, 91, 96, 103, 104, 105, 106, 107, 114, 115, 118, 231, 232, 234, 237], "problem": [16, 17, 19, 38, 90, 92, 148], "process": [2, 3, 4, 14, 17, 19, 32, 44, 45, 46, 67, 81, 94, 97, 99, 101, 110, 120, 121, 122, 123, 124, 125, 126, 131, 133, 134, 136, 141, 156, 216, 227, 228, 229, 230, 235, 237], "produc": [69, 70, 71, 99, 100, 101, 128, 129, 130, 161, 163], "product": [7, 17, 19, 95, 110, 126, 138, 167, 168, 172, 173], "program": [153, 163], "progress": 143, "project": [17, 19], "projector": 16, "promin": [131, 133, 134, 135, 136], "promot": [33, 115, 118, 138], "propag": [10, 11, 13, 16, 17, 18, 19, 27, 33, 56, 58, 80, 132, 133, 149, 150, 167, 168, 169, 173, 196, 198, 216, 217, 220, 224], "properli": [0, 32, 42, 96, 138], "properti": [8, 10, 13, 14, 36, 40, 49, 91, 94, 103, 143, 148], "proport": [5, 210], "proportion": 235, "provid": [0, 1, 2, 3, 4, 5, 7, 8, 21, 25, 27, 29, 30, 31, 32, 36, 58, 70, 71, 81, 114, 115, 116, 118, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 149, 151, 153, 155, 156, 161, 163, 164, 169, 176, 182, 196, 198, 209, 211, 219, 221, 223, 237], "pseudo": [13, 16], "purpos": [158, 162, 176, 181, 183], "python": 156, "pytorch": 211, "q": 17, "qr": 12, "quad": [16, 114, 115, 116, 117, 118, 134, 135, 136, 165, 166, 170, 171, 172, 175, 228], "quadrat": 116, "quotient": 166, "r": [17, 231, 232, 233, 234], "r_t": 148, "radam": 152, "rais": [0, 1, 2, 27, 138, 139, 174], "rand": [157, 163], "randint": [157, 163], "randn": [138, 157, 161, 163], "random": [1, 2, 3, 230, 231, 232, 233, 234, 237], "random_integ": 163, "random_tensor": 163, "randomcrop": [236, 237], "randomgrayscal": [236, 237], "randomhorizontalflip": [236, 237], "randomli": [1, 49, 50, 51, 52, 53, 81, 103, 104, 105, 106, 107, 230, 231, 232, 233, 234, 237], "randomnoisedataset": [0, 1, 2], "randomrot": [236, 237], "randomverticalflip": 236, "rang": [0, 1, 8, 32, 41, 43, 44, 45, 60, 64, 89, 95, 97, 141, 149, 151, 159, 187, 188, 190, 229, 233, 237], "rank": 16, "rate": [139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], "rather": [31, 32, 145, 220], "ratio": 235, "ravel": 215, "raw": [42, 96, 115, 156], "re": [28, 155], "readabl": [29, 30, 31, 33, 138, 156], "readi": [3, 7, 25], "real": [16, 19, 95], "rearrang": 48, "receiv": [134, 135, 136, 217], "recent": 149, "recept": 25, "reciproc": [16, 185, 195, 203], "recognit": [24, 25, 100], "rectangular": 180, "rectif": 148, "rectifi": [38, 39, 92, 93, 148], "recurr": [30, 126], "recurs": 27, "red": 231, "reduc": [120, 121, 122, 123, 124, 125, 131, 132, 133, 134, 135, 136, 147, 150, 155, 156, 196, 197, 198, 205, 210, 231], "reduct": [19, 59, 60, 61, 63, 64, 114, 115, 116, 117, 118, 196, 198], "reevalu": 139, "refer": [4, 7, 27, 163, 177, 180, 212], "reflect": 153, "regardless": [16, 218], "region": [46, 69, 70, 71, 80, 129, 130, 217, 228, 237], "regist": [26, 27, 28, 32, 138], "register_buff": 26, "register_paramet": 27, "registr": [27, 138], "regress": [4, 63, 116, 117], "regular": [16, 53, 104, 105, 106, 107, 141, 142, 143, 146, 147, 148, 149, 151], "relat": [155, 180, 181], "relationship": 235, "relev": [80, 141, 149, 151], "reli": 155, "reliabl": 5, "reliant": [104, 105, 106, 107], "relu": [7, 29, 30, 31, 33, 35, 37, 38, 55, 84, 85, 88, 89, 90, 92, 98, 99, 100, 101, 109, 110, 111, 112], "relu1": 33, "relu2": 33, "relu3": 33, "remain": [5, 26, 68, 103, 104, 105, 106, 107, 150], "rememb": 163, "remov": 221, "rep": 223, "repeat": [215, 216, 223], "repetit": [219, 223], "replac": [163, 231], "repres": [13, 15, 19, 21, 27, 28, 33, 56, 58, 65, 67, 68, 99, 100, 101, 110, 112, 115, 118, 126, 139, 140, 141, 147, 148, 149, 150, 151, 156, 165, 166, 172, 175, 177, 197, 208, 209, 210, 216, 228, 230, 232, 233, 234, 235], "represent": [132, 135, 139], "reproduc": [158, 159, 160, 161, 162, 163, 237], "requir": [2, 3, 4, 7, 26, 29, 33, 35, 36, 38, 39, 40, 41, 43, 56, 58, 80, 89, 111, 115, 118, 138, 153, 155, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 235], "requires_grad": [26, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 48, 56, 58, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 131, 132, 133, 134, 135, 136, 138, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227], "rescal": [59, 60, 64, 114, 115, 118], "research": 138, "reset": [28, 161, 164], "reshap": [7, 58, 100, 101, 154, 156, 215, 218], "resili": 150, "resiz": [80, 226, 236, 237], "resourc": 155, "respect": [9, 10, 11, 13, 14, 15, 16, 17, 19, 21, 26, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 56, 58, 80, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 131, 132, 133, 134, 135, 136, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 190, 194, 195, 196, 197, 198, 201, 203, 205, 208, 209, 210, 216, 217, 219, 223, 231], "respons": [29, 140], "restor": 155, "restructur": 220, "result": [9, 13, 14, 16, 27, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 56, 58, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 96, 138, 139, 153, 155, 158, 159, 160, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 211, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 230, 231, 237], "resum": 140, "retain": [28, 164, 176, 183, 196, 197, 198, 205, 210, 227], "retent": 227, "retriev": [0, 2, 29, 31, 32], "return": [0, 1, 2, 3, 5, 7, 21, 26, 27, 29, 30, 31, 32, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 126, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 156, 226, 237], "reus": 227, "reusabl": [33, 138, 226], "revers": [7, 33, 209, 232, 234], "revert": 155, "rho": 142, "rho_": 148, "rho_t": 148, "right": [14, 15, 16, 18, 19, 36, 42, 91, 96, 114, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 134, 135, 136, 228], "risk": 156, "rmsprop": 152, "robust": [81, 103, 104, 105, 106, 107, 116, 138, 142, 230, 231, 233, 237], "role": [156, 163, 237], "root": [4, 5, 143, 149, 203], "rotat": [55, 79, 233, 237], "rotated_imag": 81, "rout": [134, 135, 136], "routin": 7, "row": [10, 11, 13, 18, 58, 180, 216, 225], "rprop": 152, "rule": [13, 14, 154, 165, 166, 170, 171, 172, 174, 175], "run": [7, 26, 65, 67, 120, 121, 122, 123, 124, 125, 142, 155, 161, 163], "running_mean": [26, 65, 67, 120, 121, 122, 123, 124, 125], "running_var": [65, 67, 120, 121, 122, 123, 124, 125], "runtim": [30, 33, 138], "s_": 150, "s_d": [133, 136], "s_h": [132, 133, 136], "s_w": [132, 133, 136], "same": [10, 11, 13, 14, 18, 42, 49, 50, 51, 52, 53, 65, 67, 68, 70, 71, 81, 99, 100, 101, 103, 104, 105, 106, 107, 111, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 150, 161, 163, 169, 179, 182, 184, 194, 196, 197, 198, 212, 214, 218, 220, 221, 222, 225, 229], "sampl": [0, 1, 2, 3, 5, 7, 21, 22, 23, 24, 69, 70, 71, 84, 85, 86, 87, 88, 89, 103, 104, 105, 106, 107, 110, 112, 115, 118, 126, 128, 129, 130, 160, 163, 228, 230, 232, 233, 234, 235], "satisfi": [9, 11, 18], "satur": [90, 237], "save": [2, 26, 28, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155], "scalabl": [3, 138], "scalar": [10, 15, 59, 60, 61, 63, 64, 156], "scale": [11, 16, 22, 23, 24, 35, 40, 42, 65, 67, 68, 88, 89, 90, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 115, 120, 121, 122, 123, 124, 125, 126, 141, 143, 144, 145, 156, 163, 210, 235], "scenario": [31, 32, 126, 145, 146, 227, 231], "schedul": 141, "scientif": 154, "score": [42, 115], "scratch": 7, "script": 163, "seamless": [0, 1, 3, 4, 138, 163], "seamlessli": [3, 4, 8, 28, 30, 33, 138, 156, 237], "second": [11, 30, 31, 56, 110, 144, 145, 146, 147, 148, 154, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 214, 216, 234], "section": 169, "see": [7, 169], "seed": [157, 158, 159, 160, 162, 163, 237], "seen": 142, "select": [80, 134, 136, 205], "self": [0, 1, 2, 3, 7, 21, 26, 27, 28, 29, 30, 31, 32, 40, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 110, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 216, 226, 227], "selu": [37, 49, 55, 98, 103, 109], "selunetwork": 94, "sensit": [61, 116, 120, 121, 122], "sentiment": 4, "separ": [0, 44, 45, 46, 123, 124, 125], "sequenc": [14, 29, 31, 44, 176, 212, 214, 217, 219, 222, 223, 225, 226], "sequenti": [21, 29, 30, 34, 44, 111, 226, 237], "seri": [22, 23, 44, 99, 131, 134], "serial": [26, 27, 140], "serv": [3, 27, 29, 30, 31, 32, 33, 138, 150, 227], "set": [3, 4, 5, 28, 32, 44, 45, 46, 92, 93, 94, 99, 100, 101, 103, 106, 107, 110, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 139, 144, 145, 149, 158, 159, 160, 161, 162, 163, 164, 176, 178, 179, 183, 184, 190, 196, 198, 211, 227, 231, 237], "setup": [4, 7], "sever": [16, 99, 100, 101, 131, 132, 133, 134, 135, 136, 155, 226, 237], "sgd": [7, 141, 148, 152], "sgn": 15, "shape": [3, 4, 5, 7, 10, 11, 13, 14, 16, 21, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 154, 156, 158, 159, 160, 162, 163, 164, 167, 178, 179, 180, 181, 182, 183, 184, 190, 195, 196, 197, 198, 201, 203, 205, 209, 210, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 225, 228, 229, 230, 231, 232, 233, 234, 235, 237], "shapelik": 159, "share": 25, "shift": [65, 67, 68, 120, 121, 122, 123, 124, 125, 126], "shorthand": 169, "should": [21, 26, 155, 158, 159, 160, 162, 178, 179, 187, 188, 208, 217, 226], "show": 153, "showcas": 7, "shown": 161, "shrink": 142, "shuffl": [1, 2, 3], "side": [18, 30, 33, 44, 45, 46, 72, 73, 74, 76, 77, 78, 99, 100, 101, 131, 132, 133, 134, 135, 136, 155], "sigma": [16, 84, 86, 88, 95, 120, 121, 122, 123, 124, 125, 126, 209], "sigma_c": 229, "sigma_i": 16, "sigmoid": [37, 55, 84, 85, 88, 89, 98, 109, 114], "sigmoidnetwork": 95, "sign": [14, 116, 150, 185], "signal": [99, 100, 101, 120, 123, 131, 132, 133, 134, 135, 136], "signific": 155, "significantli": 226, "sim": [103, 104, 105, 106, 107], "similar": [7, 84, 85, 169, 195, 211, 217], "similarli": [19, 208], "simpl": [3, 4, 7, 33, 44, 45, 46, 56, 58, 72, 73, 74, 76, 77, 78, 91, 93, 94, 95, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 167, 168, 173, 226], "simplebinaryclassificationmodel": 114, "simpleclassificationmodel": [115, 118], "simplegelumodel": 91, "simpleleakyrelumodel": 92, "simplemodel": [7, 112], "simpleregressionmodel": 117, "simplerelumodel": 93, "simpleselumodel": 94, "simplesigmoidmodel": 95, "simpletanhmodel": 97, "simpli": [153, 208, 209, 220], "simplic": 93, "simplifi": [4, 22, 33], "simul": 237, "simultan": 81, "sin": [185, 191], "sinc": [14, 17, 29, 30, 31, 32, 44, 45, 46, 89, 153, 155, 160, 216, 237], "sine": [188, 201, 202], "singl": [0, 4, 14, 17, 19, 42, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 115, 126, 132, 133, 134, 135, 136, 139, 156, 162, 178, 212, 221, 229, 231, 237], "singleton": 126, "singular": [10, 13, 14, 16, 18, 19], "sinh": [185, 192, 207], "size": [0, 1, 2, 3, 19, 21, 22, 23, 24, 28, 30, 44, 45, 46, 48, 51, 52, 53, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 99, 100, 101, 110, 112, 114, 115, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 159, 162, 163, 164, 196, 197, 198, 205, 210, 212, 214, 221, 224, 225, 228, 230, 235, 237], "skip": 155, "slice": [56, 208], "slide": [48, 131, 133, 134, 136], "slightli": 237, "slope": [38, 90, 92], "slow": [3, 148], "small": [16, 22, 23, 24, 38, 59, 60, 65, 67, 68, 92, 94, 114, 115, 116, 120, 121, 122, 123, 124, 125, 126, 132, 135, 142, 143, 144, 145, 146, 147, 148, 149, 150], "smaller": [30, 33, 138, 143, 144, 171, 228, 230, 235], "smallest": 198, "smooth": [36, 90, 91, 141, 149, 237], "smoother": 141, "so": [29, 30, 31, 32, 81, 138, 148, 178, 179, 226], "softmax": [37, 55, 98, 109, 115], "softmaxmodel": 96, "solut": [16, 18], "solv": [8, 9, 12, 16, 17, 19], "solver": 8, "some": [35, 50, 81, 103, 104, 105, 120, 121, 122, 123, 124, 125, 143, 144, 145, 155, 156], "sometim": 154, "sophist": [30, 33], "sourc": 163, "space": [11, 17, 19, 44, 45, 46, 48, 69, 70, 71, 99, 100, 101, 128, 129, 130, 176, 237], "span": 4, "spars": [143, 144], "spatial": [100, 101, 120, 121, 122, 123, 124, 125, 126, 132, 133, 134, 135, 136, 216], "spatio": 101, "special": [0, 1, 7, 16, 26, 27, 28, 103, 163], "specif": [4, 7, 29, 30, 31, 32, 33, 89, 103, 104, 105, 106, 107, 123, 124, 125, 138, 139, 153, 163, 178, 196, 198, 219, 223], "specifi": [0, 1, 2, 3, 4, 5, 7, 15, 21, 30, 42, 48, 53, 59, 60, 61, 63, 64, 68, 69, 70, 71, 80, 81, 96, 99, 100, 101, 114, 115, 116, 117, 118, 126, 128, 129, 130, 132, 133, 134, 135, 136, 139, 156, 158, 159, 160, 161, 162, 174, 176, 177, 178, 179, 180, 181, 183, 184, 190, 196, 197, 198, 205, 209, 210, 211, 212, 214, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 233, 235, 237], "speech": 123, "speed": [141, 142, 143, 144, 145, 146, 147, 148, 149, 151], "split": [4, 212, 214, 225], "sqrt": [36, 84, 85, 88, 89, 91, 120, 121, 122, 123, 124, 125, 126, 142, 143, 144, 145, 147, 148, 149, 185, 187, 188], "squar": [1, 3, 9, 10, 11, 13, 14, 16, 17, 18, 19, 61, 63, 116, 117, 142, 143, 144, 149, 185, 203], "squaredataset": [0, 1, 2, 3], "squeez": 215, "stabil": [13, 16, 59, 60, 65, 67, 68, 114, 115, 120, 121, 122, 123, 124, 125, 126, 141, 142, 143, 144, 145, 146, 147, 148, 149, 229], "stabl": [84, 85, 88, 89, 103, 115, 141, 145, 146, 149, 150, 151], "stack": [33, 214, 215, 225, 237], "standard": [36, 38, 84, 86, 88, 90, 91, 92, 103, 150, 160, 163, 169, 226, 229, 237], "start": [1, 3, 141, 143, 150, 176, 228, 230], "state": [26, 27, 28, 30, 33, 139, 153, 155, 161], "state_dict": [27, 28, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], "static": 33, "statist": [16, 49, 65, 67], "std": [5, 86, 226, 229, 237], "step": [28, 48, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 176, 226, 227], "step_siz": 150, "still": 142, "stochast": [7, 141, 151], "stop": 176, "storag": [29, 31, 164], "store": [2, 4, 5, 26, 27, 28, 29, 30, 31, 32, 128, 129, 130, 155, 164, 228, 229, 230, 231, 232, 233, 234, 235], "str": [5, 27, 29, 31, 33, 59, 60, 61, 63, 64, 80, 139, 216], "straightforward": [151, 153, 165], "strategi": 140, "streamlin": [2, 3], "strict": [27, 139], "stride": [21, 22, 23, 24, 30, 33, 44, 45, 46, 48, 69, 70, 71, 72, 73, 74, 76, 77, 78, 99, 100, 101, 128, 129, 130, 131, 132, 133, 134, 135, 136], "stride_height": 48, "stride_width": 48, "string": [27, 29, 31, 33, 99, 100, 101, 139], "structur": [0, 7, 17, 26, 27, 30, 138, 139, 156, 180, 227], "style": [67, 123, 124, 216], "sub": [29, 30, 31, 32, 33, 138, 185, 228, 230], "sub_tensor": 164, "subclass": [1, 2, 3, 7, 27, 28, 29, 138, 139], "submodul": [27, 138], "subsequ": [30, 33, 89, 163], "subset": [104, 105], "subtract": [7, 175, 229], "suffer": 143, "suit": [84, 85, 88, 89], "suitabl": [22, 23, 24, 116, 143, 144, 158], "sum": [15, 29, 30, 31, 32, 33, 42, 59, 60, 61, 63, 64, 96, 114, 115, 116, 117, 118, 143, 165, 168, 173, 185, 208, 210, 212, 214, 216, 219, 223, 225], "sum_": [14, 42, 96, 114, 115, 117, 118, 120, 121, 122, 123, 124, 125, 126, 131, 132, 133, 167, 168, 197, 205, 208, 210, 216, 219], "sum_i": [15, 173], "sum_j": 173, "sum_k": 169, "summar": [131, 132, 133], "summat": 14, "super": [7, 26, 27, 28, 29, 30, 31, 32, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 110, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 126, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], "support": [1, 3, 4, 7, 8, 14, 15, 16, 17, 19, 29, 30, 31, 32, 33, 80, 81, 138, 140, 147, 163, 164, 165, 166, 169, 170, 171, 172, 174, 175, 177, 180, 190, 195, 197, 201, 203, 205, 208, 209, 210, 212, 216, 220, 227, 237], "suppos": 237, "sure": [138, 237], "svd": [12, 16], "symmetr": [9, 69, 70, 71, 88, 89, 97], "syntax": [1, 169], "system": [8, 9, 16, 17, 18, 153, 216], "systemat": 237, "t": [16, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 164, 169, 211, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237], "t0": 141, "t1": 211, "t2": 211, "tabular": 4, "tailor": [4, 138, 237], "take": [17, 131, 132, 133, 134, 135, 136, 155, 226], "taken": 208, "tan": 185, "tangent": [43, 97, 189, 206, 207], "tanh": [30, 33, 36, 37, 55, 84, 85, 88, 89, 91, 98, 109, 185], "tanhnetwork": 97, "target": [5, 33, 59, 60, 61, 63, 64, 69, 70, 71, 80, 114, 115, 116, 117, 118, 128, 129, 130, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 228, 230, 235], "target_tensor": [114, 115, 116, 117, 118], "target_transform": 5, "task": [4, 7, 8, 22, 23, 24, 25, 41, 42, 45, 56, 59, 60, 63, 64, 95, 96, 99, 100, 101, 114, 115, 116, 117, 118, 123, 124, 125, 131, 133, 134, 136, 144, 154, 163, 180, 237], "techniqu": [9, 13, 65, 103, 104, 105, 106, 107, 123, 124, 125, 140, 235, 237], "tempor": [99, 101, 133, 136], "temporarili": 155, "tensor": [2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 153, 155, 156, 158, 159, 160, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237], "term": [16, 56, 141, 145, 147, 148, 149, 151], "test": [4, 5], "test_siz": 5, "text": [4, 10, 14, 15, 29, 35, 38, 39, 40, 42, 44, 45, 46, 69, 70, 71, 72, 73, 74, 76, 77, 78, 84, 85, 88, 89, 90, 92, 93, 94, 96, 99, 100, 101, 103, 104, 105, 106, 107, 114, 115, 116, 117, 118, 131, 132, 133, 134, 135, 136, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 159, 165, 166, 168, 170, 171, 172, 174, 175, 186, 190, 196, 197, 198, 200, 205, 210, 212, 214, 217, 218, 219, 220, 221, 223, 224, 225, 228, 229, 230, 232, 233, 234], "th": [56, 114, 115, 117, 118, 123, 124, 125, 170, 171, 174], "than": [0, 1, 31, 32, 35, 38, 61, 90, 92, 116, 139, 145, 190, 208, 217, 222, 228, 230, 235], "thei": [0, 7, 19, 26, 30, 32, 33, 156, 216, 220, 228, 230, 237], "them": [3, 27, 32, 48, 141, 154, 212, 222, 226, 229, 237], "therebi": [103, 132, 133, 135, 136], "theta": [141, 142, 233], "theta_": [141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], "theta_t": [148, 149], "thi": [0, 1, 2, 3, 5, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 26, 28, 30, 31, 32, 33, 39, 41, 42, 43, 44, 45, 46, 48, 56, 58, 69, 80, 81, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 128, 131, 132, 133, 134, 135, 136, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 159, 160, 161, 163, 164, 168, 169, 173, 176, 178, 181, 182, 183, 184, 190, 194, 195, 196, 197, 198, 201, 203, 205, 208, 209, 210, 211, 217, 219, 220, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237], "thing": 155, "those": [7, 22, 23, 24, 32, 89], "three": [19, 24, 46, 71, 74, 78, 101, 107, 122, 125, 130, 133, 136], "threshold": [16, 61, 116], "through": [0, 3, 4, 7, 11, 16, 17, 19, 21, 29, 30, 33, 56, 58, 80, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 120, 121, 122, 123, 126, 131, 132, 133, 134, 135, 136, 160, 167, 168, 173, 216, 218, 220, 221, 224, 237], "throughout": [40, 227], "tile": 215, "time": [0, 3, 14, 22, 23, 24, 44, 92, 94, 99, 131, 132, 133, 134, 135, 136, 141, 142, 143, 144, 145, 149, 151, 155, 219, 223], "to_tensor": 5, "togeth": [33, 226, 237], "too": 150, "tool": [3, 7, 138, 154, 163, 226, 237], "top": [9, 10, 11, 17, 19, 56, 58, 80, 99, 100, 101, 110, 112, 228, 230], "torch": 211, "total": [0, 1, 2, 5, 22, 23, 24, 28, 164, 220], "totensor": [226, 237], "trace": [8, 185], "track": [7, 120, 121, 122, 123, 124, 125, 138, 153, 155, 158, 159, 160, 162, 176, 177, 178, 179, 180, 181, 182, 183, 184, 211, 227], "track_running_stat": [120, 121, 122, 123, 124, 125], "tradit": [142, 143, 146, 147, 148], "trail": 68, "train": [1, 2, 3, 4, 5, 7, 26, 27, 30, 32, 33, 42, 49, 50, 51, 52, 53, 65, 67, 81, 91, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 120, 121, 122, 123, 124, 125, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 226, 229, 230, 231, 232, 233, 234, 237], "trainabl": [120, 121, 122, 123, 124, 125, 138], "transfer": [67, 123, 124], "transform": [2, 4, 5, 7, 11, 31, 56, 58, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 154, 216], "transform_pipelin": [226, 237], "transformed_imag": [226, 237], "transit": 116, "translat": [132, 135], "transpos": [7, 9, 185], "treat": [0, 26, 126, 138], "triangular": [9, 17], "true": [1, 2, 3, 4, 5, 19, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 56, 58, 65, 67, 80, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 131, 132, 133, 134, 135, 136, 138, 139, 144, 145, 149, 153, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227], "try": 0, "tune": 237, "tupl": [2, 3, 5, 11, 17, 19, 27, 28, 44, 45, 46, 48, 68, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 99, 100, 101, 111, 126, 129, 130, 131, 132, 133, 134, 135, 136, 144, 145, 146, 147, 148, 150, 156, 158, 159, 160, 162, 164, 178, 181, 183, 196, 197, 198, 205, 210, 212, 214, 216, 217, 220, 221, 222, 224, 225, 228, 229, 230, 235], "twice": 217, "two": [7, 10, 11, 13, 14, 16, 17, 19, 22, 23, 24, 44, 45, 46, 56, 73, 77, 100, 106, 110, 121, 124, 132, 135, 144, 145, 146, 147, 148, 150, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 208, 216], "type": [26, 27, 28, 56, 110, 164, 176, 177, 178, 179, 180, 181, 182, 183, 184, 211, 216, 227], "typeerror": [0, 1, 2, 27, 139], "typic": [8, 26, 42, 49, 81, 94, 96, 118, 120, 121, 122, 123, 124, 125, 140, 141, 149, 151, 155, 156, 224, 227, 229, 233, 235, 237], "u": [16, 19, 85, 87, 89], "u_": 146, "unchang": [26, 53, 90, 92, 93, 94, 103, 104, 105, 106, 107, 111, 218, 221], "undefin": 174, "under": 138, "underbrac": 14, "underdetermin": 16, "undergo": 237, "underli": [0, 7, 211, 214, 218, 220, 225], "understand": [7, 33, 237], "unexpect": [27, 30, 33, 163], "unfold": [47, 55], "unifi": 0, "uniform": [83, 85, 89, 99, 100, 101, 110, 112, 157, 158, 159, 163, 231, 232, 233, 234], "uniformli": [158, 162], "uniniti": [178, 179], "unintend": 155, "uniqu": [9, 16, 18, 29, 31], "unit": [21, 35, 36, 38, 39, 40, 84, 85, 88, 89, 90, 91, 92, 93, 94, 103], "unless": 164, "unlik": [26, 29, 30, 31, 32, 38, 90, 92, 103, 126, 142, 143, 145, 146, 147, 148, 150], "unnecessari": 155, "unpad": 217, "unseen": 237, "unsqueez": 215, "unstabl": 13, "up": [139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 233, 235], "updat": [4, 26, 32, 33, 103, 104, 105, 106, 107, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155], "upon": [29, 30, 31, 32], "upper": [17, 87, 150, 162], "us": [0, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 56, 58, 63, 65, 67, 70, 71, 80, 81, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 153, 154, 155, 158, 159, 160, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 194, 196, 197, 198, 205, 210, 216, 217, 219, 221, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237], "usag": [3, 8, 30, 33, 139, 140, 228, 229, 230, 231, 232, 233, 234, 235], "user": [1, 2, 3, 4, 7, 29, 30, 31, 32, 138, 143, 226, 227, 237], "usual": 115, "util": [3, 7, 8, 31, 32, 138, 163], "v": [11, 16, 19, 144, 145, 147, 148, 177], "v_": [141, 144, 145, 147, 148, 149, 151], "v_stack": 225, "v_t": [148, 149], "val": 82, "valid": [99, 100, 101, 209], "valu": [7, 10, 14, 15, 16, 19, 27, 29, 31, 33, 35, 38, 41, 42, 43, 44, 45, 46, 48, 59, 60, 61, 63, 64, 65, 67, 68, 69, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 103, 104, 105, 106, 107, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 131, 132, 133, 134, 135, 136, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 156, 158, 159, 160, 161, 162, 163, 176, 177, 178, 179, 180, 186, 187, 188, 190, 193, 194, 195, 196, 198, 200, 201, 203, 204, 212, 217, 218, 220, 224, 229, 231, 232, 234], "valuabl": 163, "valueerror": [1, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 139], "vanish": [90, 94, 120, 121, 122], "var": 185, "vari": [30, 32, 69, 80, 128, 233], "variabl": [27, 33, 69, 70, 71, 111, 128, 129, 130, 138, 153, 155, 158, 178, 230, 233], "varianc": [40, 49, 65, 67, 84, 85, 88, 89, 94, 103, 120, 121, 122, 123, 124, 125, 126, 144, 145, 146, 147, 148, 160, 210, 233, 237], "variant": [144, 145, 146], "variat": [123, 124, 125, 230, 237], "varieti": [4, 163, 237], "variou": [21, 25, 93, 140, 163, 196, 198, 217, 227], "vdot": 173, "vector": [11, 16, 17, 18, 19, 56, 58, 110, 112, 167, 168, 169, 173], "veloc": [141, 149, 151], "veri": [16, 142], "versa": 150, "versatil": [163, 216], "version": [19, 21, 22, 23, 149, 173, 231], "vertic": [222, 225, 234], "via": [3, 4], "vice": 150, "video": [46, 53, 101, 125, 133, 136], "view": [21, 30, 132, 133, 134, 135, 136, 220], "vision": [45, 100, 110, 237], "volumetr": [46, 53, 101, 125, 133, 136], "vstack": 215, "w": [45, 46, 48, 52, 53, 56, 58, 70, 71, 73, 74, 77, 78, 80, 81, 99, 100, 101, 110, 112, 121, 122, 124, 125, 129, 130, 133, 136, 228, 230], "w_": [45, 46, 70, 71, 73, 74, 77, 78, 80, 100, 101, 129, 130, 132, 133, 135, 136], "w_out": [45, 46, 73, 74, 77, 78], "wa": [103, 104, 105, 106, 107, 155], "wai": [1, 153, 155, 220], "want": [0, 7, 226, 228], "warn": [29, 31], "we": [3, 7, 154, 216], "weight": [25, 44, 45, 46, 56, 58, 59, 60, 64, 65, 67, 68, 80, 84, 85, 88, 89, 99, 100, 101, 103, 104, 105, 106, 107, 110, 112, 114, 115, 118, 120, 121, 122, 123, 124, 125, 126, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 158, 163], "weight1": 31, "weight2": 31, "weight_decai": [141, 142, 143, 144, 145, 146, 147, 148, 149, 151], "well": [84, 85], "were": 33, "what": 155, "when": [0, 1, 3, 7, 14, 27, 30, 32, 33, 35, 38, 44, 45, 46, 90, 111, 120, 121, 122, 123, 124, 125, 139, 142, 150, 153, 155, 156, 163, 174, 226, 228], "where": [3, 4, 5, 10, 11, 13, 14, 15, 16, 17, 19, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 131, 132, 133, 134, 135, 136, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 156, 163, 165, 166, 170, 171, 172, 174, 175, 178, 179, 190, 194, 195, 196, 197, 198, 201, 203, 205, 208, 209, 210, 212, 217, 219, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234], "whether": [1, 10, 27, 28, 84, 85, 149, 153, 158, 159, 160, 162, 164, 178, 179, 196, 197, 198, 205, 210], "which": [0, 7, 10, 11, 13, 14, 15, 16, 17, 19, 27, 29, 31, 33, 38, 42, 61, 81, 90, 91, 92, 96, 97, 103, 116, 118, 120, 121, 122, 123, 124, 125, 126, 144, 145, 147, 149, 153, 155, 156, 158, 159, 162, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 201, 202, 203, 205, 206, 207, 208, 210, 212, 219, 220, 222, 224, 227, 228, 230, 231, 232, 233, 234, 235, 237], "while": [7, 25, 30, 33, 49, 91, 93, 138, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 155, 220, 222, 231, 237], "who": [7, 29, 30, 31, 32], "whose": [19, 179, 182, 184, 186, 190, 194, 200], "wide": [4, 5, 8, 16, 39, 93, 99, 100, 115], "wider": [44, 45], "width": [45, 46, 48, 52, 53, 70, 71, 73, 74, 77, 78, 80, 81, 100, 101, 121, 122, 124, 125, 129, 130, 132, 133, 135, 136, 228, 230, 235], "window": [72, 73, 74, 76, 77, 78, 131, 132, 133, 134, 135, 136, 142, 196, 198], "wise": [35, 36, 38, 39, 40, 41, 42, 43, 96, 103, 104, 105, 106, 107, 138, 154, 165, 166, 169, 170, 171, 172, 174, 175, 186, 187, 188, 189, 190, 191, 192, 193, 195, 199, 200, 201, 202, 203, 204, 206, 207, 208, 214, 225], "within": [2, 26, 29, 30, 31, 32, 33, 43, 80, 81, 89, 91, 93, 94, 95, 97, 99, 100, 101, 103, 104, 105, 111, 114, 115, 116, 117, 118, 120, 121, 122, 123, 126, 131, 132, 133, 134, 135, 136, 140, 155, 176, 190, 233, 237], "without": [7, 29, 30, 31, 56, 58, 99, 100, 101, 110, 112, 153, 196, 218, 220, 224], "won": 155, "work": [1, 2, 3, 7, 9, 154, 156], "workflow": [163, 237], "workload": 7, "wrap": [3, 138, 155, 211], "wrapper": 138, "x": [7, 8, 18, 21, 26, 27, 29, 30, 31, 32, 33, 42, 56, 58, 81, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 158, 159, 160, 162, 178, 179, 194, 216, 228, 229, 230, 231, 232, 233, 234, 235], "x1": 110, "x2": 110, "x_": [115, 118, 216], "x_c": [115, 118], "x_i": 114, "x_k": 115, "xavier": [84, 85, 88, 89], "xavier_norm": 83, "xavier_uniform": 83, "xy": 216, "x\u2081": 110, "x\u2082": 110, "y": [29, 30, 31, 32, 33, 81, 90, 91, 92, 93, 94, 95, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 131, 132, 133, 134, 135, 136, 158, 159, 160, 162, 178, 179, 216, 231], "y_": [115, 118, 216], "y_c": [115, 118], "y_i": 114, "yann": [5, 25], "yet": [7, 154], "yield": [0, 1, 27, 155], "you": [0, 30, 32, 33, 138, 140, 153, 155, 163, 178, 179, 180, 184, 209, 211, 226, 228, 237], "your": [138, 140, 153, 155, 163, 237], "z": [179, 183, 184], "zero": [14, 16, 17, 35, 38, 44, 45, 46, 49, 50, 51, 52, 53, 72, 73, 74, 76, 77, 78, 82, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 99, 100, 101, 103, 104, 105, 106, 107, 126, 131, 132, 133, 134, 135, 136, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 178, 179, 180, 184, 185, 190, 200, 217], "zero_grad": [28, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 164], "zeros_lik": [179, 185], "\u03c3\u1d62": 16}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "datasets.MNIST", "Image Datasets", "Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "ConvNets", "LeNet", "models.lenet_1", "models.lenet_4", "models.lenet_5", "lucid.models", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.LeakyReLU", "nn.ReLU", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Tanh", "Activation Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "lucid.nn", "optim.Optimizer", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.types", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.meshgrid", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.unsqueeze", "lucid.vstack", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": 154, "1d": 154, "2": 154, "2d": 154, "3": 154, "It": [153, 155], "ab": 186, "activ": [37, 55, 98, 109], "ad": 154, "adadelta": 142, "adagrad": 143, "adam": 144, "adamax": 146, "adamw": 145, "adaptive_avg_pool1d": 69, "adaptive_avg_pool2d": 70, "adaptive_avg_pool3d": 71, "adaptiveavgpool1d": 128, "adaptiveavgpool2d": 129, "adaptiveavgpool3d": 130, "add": 165, "addit": 16, "admonit": 156, "advanc": [48, 237], "algebra": 12, "algorithm": [141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], "alias": 156, "align": 154, "alpha_dropout": 49, "alphadropout": 103, "also": 140, "anoth": 211, "arang": 176, "arcco": 187, "architectur": [22, 23, 24], "arcsin": 188, "arctan": 189, "asgd": 141, "attribut": [5, 21, 26, 28, 29, 30, 31, 32, 33, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 164, 228, 229, 230, 231, 232, 233, 234, 235], "avg_pool1d": 72, "avg_pool2d": 73, "avg_pool3d": 74, "avgpool1d": 131, "avgpool2d": 132, "avgpool3d": 133, "axi": 154, "backpropag": 164, "backward": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 56, 58, 80, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 131, 132, 133, 134, 135, 136, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225], "batch_norm": 65, "batchnorm1d": 120, "batchnorm2d": 121, "batchnorm3d": 122, "bceloss": 114, "behavior": [69, 70, 71, 128, 129, 130], "benefit": 155, "bilinear": [56, 110], "binari": 185, "binary_cross_entropi": 59, "broadcast": 154, "buffer": 26, "calcul": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 48, 56, 58, 69, 70, 71, 80, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235], "case": 156, "centercrop": 228, "choleski": 9, "class": [0, 1, 2, 5, 21, 26, 27, 28, 29, 30, 31, 32, 33, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 164, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235], "clip": 190, "co": 191, "combin": 0, "compon": [3, 7, 138], "compos": 226, "concatdataset": [0, 1], "concaten": 212, "conclus": [3, 7, 138, 153, 154, 155, 163, 227, 237], "constant": 82, "contain": 34, "conv1d": [44, 99], "conv2d": [45, 100], "conv3d": [46, 101], "convnet": [20, 25], "convolut": [47, 55, 102, 109], "core": 7, "cosh": 192, "creat": [28, 164, 211], "cross_entropi": 60, "crossentropyloss": 115, "cube": 193, "custom": [1, 2, 3, 27, 139, 140, 237], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 5, 6], "defin": [2, 27, 139, 140], "definit": 156, "det": 10, "detail": 16, "diag": 177, "dilat": 48, "div": 166, "dot": 167, "dropout": [50, 54, 55, 104, 108, 109], "dropout1d": [51, 105], "dropout2d": [52, 106], "dropout3d": [53, 107], "eig": 11, "elu": [35, 90], "empti": 178, "empty_lik": 179, "exampl": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237], "exp": 194, "ey": 180, "featur": [4, 7, 8, 140, 163, 237], "flatten": 213, "forward": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 48, 56, 58, 69, 70, 71, 80, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235], "from": 211, "function": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 153, 155, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225], "futur": 4, "gelu": [36, 91], "gener": [157, 185], "get": 140, "grad_en": 153, "gradient": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 56, 58, 80, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 131, 132, 133, 134, 135, 136, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225], "guidelin": 156, "how": [153, 155], "hstack": 214, "huber_loss": 61, "huberloss": 116, "ident": 111, "imag": [6, 236], "index": 164, "init": [82, 84, 85, 86, 87, 88, 89], "initi": 83, "inner": 168, "input": 211, "inspect": [140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], "instance_norm": 67, "instancenorm1d": 123, "instancenorm2d": 124, "instancenorm3d": 125, "integr": [3, 138, 163, 237], "interpol": 80, "inv": 13, "iter": 164, "kaiming_norm": 84, "kaiming_uniform": 85, "kei": [3, 4, 7, 138, 140, 163, 237], "layer": [98, 102, 108, 109, 113, 119, 127, 137], "layer_norm": 68, "layernorm": 126, "leaky_relu": 38, "leakyrelu": 92, "learn": 163, "lenet": [20, 21], "lenet_1": 22, "lenet_4": 23, "lenet_5": 24, "limit": 7, "linalg": [8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "linear": [12, 55, 57, 58, 109, 112, 113], "list": 211, "load": 1, "log": 195, "loss": [55, 62, 109, 119], "lucid": [3, 4, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 25, 55, 138, 140, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 237], "matmul": 169, "matrix": 169, "matrix_pow": 14, "max": 196, "max_pool1d": 76, "max_pool2d": 77, "max_pool3d": 78, "maximum": 170, "maxpool1d": 134, "maxpool2d": 135, "maxpool3d": 136, "mean": 197, "meshgrid": 216, "method": [0, 1, 2, 5, 21, 27, 28, 139, 164], "min": 198, "minimum": 171, "mnist": 5, "model": [22, 23, 24, 25, 138], "modul": [27, 109], "moduledict": 29, "modulelist": 30, "more": 163, "mse_loss": 63, "mseloss": 117, "mul": 172, "multipl": [0, 169], "nadam": 147, "new": 154, "newaxi": 154, "nll_loss": 64, "nllloss": 118, "nn": [26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138], "no_grad": 155, "norm": 15, "normal": [55, 66, 86, 109, 127, 229], "note": 7, "number": 157, "ones": 181, "ones_lik": 182, "oper": [12, 169, 185], "optim": [139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152], "organ": 138, "outer": 173, "overview": [3, 4, 7, 21, 22, 23, 24, 138, 140, 163, 237], "pad": 217, "paramet": [1, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 26, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235], "parameterdict": 31, "parameterlist": 32, "perform": 164, "pinv": 16, "pipelin": [3, 237], "pitfal": [153, 155], "pool": [55, 75, 109, 137], "potenti": [153, 155], "power": 174, "properti": [28, 164], "qr": 17, "radam": 148, "rais": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "rand": 158, "randint": 159, "randn": 160, "random": [157, 158, 159, 160, 161, 162, 163], "randomcrop": 230, "randomgrayscal": 231, "randomhorizontalflip": 232, "randomrot": 233, "randomverticalflip": 234, "ravel": 218, "reciproc": 199, "refer": [5, 140], "relu": [39, 93], "repeat": 219, "reshap": 220, "resiz": 235, "return": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 153, 155, 158, 159, 160, 161, 162, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225], "rmsprop": 149, "rotat": 81, "rprop": 150, "rule": 169, "see": 140, "seed": 161, "selu": [40, 94], "sequenti": 33, "sgd": 151, "sigmoid": [41, 95], "sign": 200, "signatur": [0, 1, 2, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235], "sin": 201, "sinh": 202, "slice": 164, "softmax": [42, 96], "solv": 18, "sqrt": 203, "squar": 204, "squeez": 221, "stack": 222, "start": 140, "state": [140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151], "sub": 175, "sum": 205, "svd": 19, "tan": 206, "tanh": [43, 97, 207], "tensor": [154, 164, 185, 211, 215], "through": 164, "tile": 223, "totensor": 227, "trace": 208, "track": 164, "transform": [226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237], "transpos": 209, "type": 156, "unari": 185, "unfold": 48, "uniform": [87, 162], "unsqueez": 224, "us": [1, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 156, 211], "usag": [4, 7, 21, 22, 23, 24, 26, 81, 153, 154, 155, 156, 216, 226, 227, 237], "util": [55, 79], "utilit": 215, "var": 210, "vstack": 225, "weight": 83, "why": 156, "work": [4, 153, 155], "xavier_norm": 88, "xavier_uniform": 89, "zero": 183, "zeros_lik": 184}})