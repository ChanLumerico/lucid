Search.setIndex({"alltitles": {"@ Operator": [[178, "operator"]], "Activation Functions": [[46, null]], "Activation Layers": [[107, null], [118, null]], "Additional Details": [[16, "additional-details"]], "Admonitions and Usage Guidelines": [[165, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[57, "advanced-example-with-dilation"]], "Advanced Features": [[246, "advanced-features"]], "AlexNet": [[20, null]], "Algorithm": [[150, "algorithm"], [151, "algorithm"], [152, "algorithm"], [153, "algorithm"], [154, "algorithm"], [155, "algorithm"], [156, "algorithm"], [157, "algorithm"], [158, "algorithm"], [159, "algorithm"], [160, "algorithm"]], "Architecture": [[20, "architecture"], [24, "architecture"], [25, "architecture"], [26, "architecture"], [32, "architecture"]], "Attributes": [[5, "attributes"], [20, "attributes"], [23, "attributes"], [27, "attributes"], [32, "attributes"], [35, "attributes"], [37, "attributes"], [38, "attributes"], [39, "attributes"], [40, "attributes"], [41, "attributes"], [42, "attributes"], [99, "attributes"], [100, "attributes"], [101, "attributes"], [102, "attributes"], [103, "attributes"], [104, "attributes"], [105, "attributes"], [106, "attributes"], [108, "attributes"], [109, "attributes"], [110, "attributes"], [112, "attributes"], [113, "attributes"], [114, "attributes"], [115, "attributes"], [116, "attributes"], [119, "attributes"], [120, "attributes"], [121, "attributes"], [123, "attributes"], [124, "attributes"], [125, "attributes"], [126, "attributes"], [127, "attributes"], [129, "attributes"], [130, "attributes"], [131, "attributes"], [132, "attributes"], [133, "attributes"], [134, "attributes"], [135, "attributes"], [137, "attributes"], [138, "attributes"], [139, "attributes"], [140, "attributes"], [141, "attributes"], [142, "attributes"], [143, "attributes"], [144, "attributes"], [145, "attributes"], [173, "attributes"], [237, "attributes"], [238, "attributes"], [239, "attributes"], [240, "attributes"], [241, "attributes"], [242, "attributes"], [243, "attributes"], [244, "attributes"]], "Backward Gradient Calculation": [[9, "backward-gradient-calculation"], [10, "backward-gradient-calculation"], [11, "backward-gradient-calculation"], [13, "backward-gradient-calculation"], [14, "backward-gradient-calculation"], [15, "backward-gradient-calculation"], [16, "backward-gradient-calculation"], [17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [38, "backward-gradient-calculation"], [39, "backward-gradient-calculation"], [40, "backward-gradient-calculation"], [41, "backward-gradient-calculation"], [42, "backward-gradient-calculation"], [44, "backward-gradient-calculation"], [45, "backward-gradient-calculation"], [47, "backward-gradient-calculation"], [48, "backward-gradient-calculation"], [49, "backward-gradient-calculation"], [50, "backward-gradient-calculation"], [51, "backward-gradient-calculation"], [52, "backward-gradient-calculation"], [65, "backward-gradient-calculation"], [67, "backward-gradient-calculation"], [89, "backward-gradient-calculation"], [98, "backward-gradient-calculation"], [99, "backward-gradient-calculation"], [100, "backward-gradient-calculation"], [101, "backward-gradient-calculation"], [102, "backward-gradient-calculation"], [103, "backward-gradient-calculation"], [104, "backward-gradient-calculation"], [105, "backward-gradient-calculation"], [106, "backward-gradient-calculation"], [108, "backward-gradient-calculation"], [109, "backward-gradient-calculation"], [110, "backward-gradient-calculation"], [112, "backward-gradient-calculation"], [113, "backward-gradient-calculation"], [114, "backward-gradient-calculation"], [115, "backward-gradient-calculation"], [116, "backward-gradient-calculation"], [119, "backward-gradient-calculation"], [120, "backward-gradient-calculation"], [121, "backward-gradient-calculation"], [123, "backward-gradient-calculation"], [124, "backward-gradient-calculation"], [125, "backward-gradient-calculation"], [126, "backward-gradient-calculation"], [127, "backward-gradient-calculation"], [129, "backward-gradient-calculation"], [130, "backward-gradient-calculation"], [131, "backward-gradient-calculation"], [132, "backward-gradient-calculation"], [133, "backward-gradient-calculation"], [134, "backward-gradient-calculation"], [135, "backward-gradient-calculation"], [140, "backward-gradient-calculation"], [141, "backward-gradient-calculation"], [142, "backward-gradient-calculation"], [143, "backward-gradient-calculation"], [144, "backward-gradient-calculation"], [145, "backward-gradient-calculation"], [174, "backward-gradient-calculation"], [175, "backward-gradient-calculation"], [176, "backward-gradient-calculation"], [177, "backward-gradient-calculation"], [178, "backward-gradient-calculation"], [179, "backward-gradient-calculation"], [180, "backward-gradient-calculation"], [181, "backward-gradient-calculation"], [182, "backward-gradient-calculation"], [183, "backward-gradient-calculation"], [184, "backward-gradient-calculation"], [195, "backward-gradient-calculation"], [196, "backward-gradient-calculation"], [197, "backward-gradient-calculation"], [198, "backward-gradient-calculation"], [199, "backward-gradient-calculation"], [200, "backward-gradient-calculation"], [201, "backward-gradient-calculation"], [202, "backward-gradient-calculation"], [203, "backward-gradient-calculation"], [204, "backward-gradient-calculation"], [205, "backward-gradient-calculation"], [206, "backward-gradient-calculation"], [207, "backward-gradient-calculation"], [208, "backward-gradient-calculation"], [209, "backward-gradient-calculation"], [210, "backward-gradient-calculation"], [211, "backward-gradient-calculation"], [212, "backward-gradient-calculation"], [213, "backward-gradient-calculation"], [214, "backward-gradient-calculation"], [215, "backward-gradient-calculation"], [216, "backward-gradient-calculation"], [217, "backward-gradient-calculation"], [218, "backward-gradient-calculation"], [219, "backward-gradient-calculation"], [221, "backward-gradient-calculation"], [223, "backward-gradient-calculation"], [225, "backward-gradient-calculation"], [226, "backward-gradient-calculation"], [227, "backward-gradient-calculation"], [228, "backward-gradient-calculation"], [229, "backward-gradient-calculation"], [230, "backward-gradient-calculation"], [231, "backward-gradient-calculation"], [232, "backward-gradient-calculation"], [233, "backward-gradient-calculation"], [234, "backward-gradient-calculation"]], "Behavior": [[78, "behavior"], [79, "behavior"], [80, "behavior"], [137, "behavior"], [138, "behavior"], [139, "behavior"]], "Benefits": [[164, "benefits"]], "Binary Functions": [[194, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [20, "class-signature"], [23, "class-signature"], [27, "class-signature"], [32, "class-signature"], [35, "class-signature"], [36, "class-signature"], [37, "class-signature"], [38, "class-signature"], [39, "class-signature"], [40, "class-signature"], [41, "class-signature"], [42, "class-signature"], [99, "class-signature"], [100, "class-signature"], [101, "class-signature"], [102, "class-signature"], [103, "class-signature"], [104, "class-signature"], [105, "class-signature"], [106, "class-signature"], [108, "class-signature"], [109, "class-signature"], [110, "class-signature"], [112, "class-signature"], [113, "class-signature"], [114, "class-signature"], [115, "class-signature"], [116, "class-signature"], [119, "class-signature"], [120, "class-signature"], [121, "class-signature"], [123, "class-signature"], [124, "class-signature"], [125, "class-signature"], [126, "class-signature"], [127, "class-signature"], [129, "class-signature"], [130, "class-signature"], [131, "class-signature"], [132, "class-signature"], [133, "class-signature"], [134, "class-signature"], [135, "class-signature"], [137, "class-signature"], [138, "class-signature"], [139, "class-signature"], [140, "class-signature"], [141, "class-signature"], [142, "class-signature"], [143, "class-signature"], [144, "class-signature"], [145, "class-signature"], [148, "class-signature"], [150, "class-signature"], [151, "class-signature"], [152, "class-signature"], [153, "class-signature"], [154, "class-signature"], [155, "class-signature"], [156, "class-signature"], [157, "class-signature"], [158, "class-signature"], [159, "class-signature"], [160, "class-signature"], [173, "class-signature"], [235, "class-signature"], [236, "class-signature"], [237, "class-signature"], [238, "class-signature"], [239, "class-signature"], [240, "class-signature"], [241, "class-signature"], [242, "class-signature"], [243, "class-signature"], [244, "class-signature"]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [7, "conclusion"], [147, "conclusion"], [162, "conclusion"], [163, "conclusion"], [164, "conclusion"], [172, "conclusion"], [236, "conclusion"], [246, "conclusion"]], "Containers": [[43, null]], "ConvNets": [[22, null], [34, "convnets"]], "Convolution Functions": [[56, null], [64, null]], "Convolution Layers": [[111, null], [118, null]], "Core Components": [[7, "core-components"]], "Create a Tensor from a list": [[220, null]], "Creating a Parameter": [[37, null]], "Creating a tensor with gradient tracking": [[173, null]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[246, "custom-pipelines"]], "Defining a Custom Optimizer": [[149, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[36, null]], "Defining a custom optimizer": [[148, null]], "Dropout Functions": [[63, null], [64, null]], "Dropout Layers": [[117, null], [118, null]], "Example": [[3, null], [3, null], [3, null], [9, "example"], [10, "example"], [11, "example"], [13, "example"], [14, "example"], [15, "example"], [16, "example"], [17, "example"], [18, "example"], [19, "example"], [57, "example"], [147, null], [147, null], [147, null], [162, "example"], [164, "example"], [167, "example"], [168, "example"], [169, "example"], [170, "example"], [171, "example"], [172, null], [172, null], [172, null], [185, "example"], [186, "example"], [187, "example"], [188, "example"], [189, "example"], [190, "example"], [191, "example"], [192, "example"], [193, "example"], [195, "example"], [196, "example"], [197, "example"], [198, "example"], [199, "example"], [200, "example"], [201, "example"], [202, "example"], [204, "example"], [206, "example"], [208, "example"], [209, "example"], [210, "example"], [211, "example"], [212, "example"], [213, "example"], [214, "example"], [215, "example"], [216, "example"], [217, "example"], [218, "example"], [219, "example"], [221, "example"], [223, "example"], [227, "example"], [229, "example"], [230, "example"], [231, "example"], [233, "example"], [234, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[163, null]], "Example 2: Adding a new axis to a 2D tensor": [[163, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[163, null]], "Example Usage": [[7, "example-usage"], [23, "example-usage"], [24, "example-usage"], [25, "example-usage"], [26, "example-usage"], [90, "example-usage"], [235, "example-usage"], [236, "example-usage"], [246, "example-usage"]], "Example Use Cases": [[165, "example-use-cases"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [8, "examples"], [20, "examples"], [21, "examples"], [27, "examples"], [28, "examples"], [29, "examples"], [30, "examples"], [31, "examples"], [32, "examples"], [33, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [44, "examples"], [45, "examples"], [47, "examples"], [48, "examples"], [49, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [53, "examples"], [54, "examples"], [55, "examples"], [58, "examples"], [59, "examples"], [60, "examples"], [61, "examples"], [62, "examples"], [65, "examples"], [67, "examples"], [68, "examples"], [69, "examples"], [70, "examples"], [72, "examples"], [73, "examples"], [74, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [79, "examples"], [80, "examples"], [81, "examples"], [82, "examples"], [83, "examples"], [85, "examples"], [86, "examples"], [87, "examples"], [89, "examples"], [91, "examples"], [93, "examples"], [94, "examples"], [95, "examples"], [96, "examples"], [97, "examples"], [98, "examples"], [99, "examples"], [100, "examples"], [101, "examples"], [102, "examples"], [103, "examples"], [104, "examples"], [105, "examples"], [106, "examples"], [108, "examples"], [109, "examples"], [110, "examples"], [112, "examples"], [113, "examples"], [114, "examples"], [115, "examples"], [116, "examples"], [119, "examples"], [120, "examples"], [121, "examples"], [123, "examples"], [124, "examples"], [125, "examples"], [126, "examples"], [127, "examples"], [129, "examples"], [130, "examples"], [131, "examples"], [132, "examples"], [133, "examples"], [134, "examples"], [135, "examples"], [137, "examples"], [138, "examples"], [139, "examples"], [140, "examples"], [141, "examples"], [142, "examples"], [143, "examples"], [144, "examples"], [145, "examples"], [148, "examples"], [149, "examples"], [150, "examples"], [151, "examples"], [152, "examples"], [153, "examples"], [154, "examples"], [155, "examples"], [156, "examples"], [157, "examples"], [158, "examples"], [159, "examples"], [160, "examples"], [173, "examples"], [174, "examples"], [175, "examples"], [176, "examples"], [177, "examples"], [179, "examples"], [180, "examples"], [181, "examples"], [182, "examples"], [183, "examples"], [184, "examples"], [203, "examples"], [205, "examples"], [207, "examples"], [220, "examples"], [222, "examples"], [225, "examples"], [226, "examples"], [228, "examples"], [232, "examples"], [237, "examples"], [238, "examples"], [239, "examples"], [240, "examples"], [241, "examples"], [242, "examples"], [243, "examples"], [244, "examples"]], "Features": [[8, "features"]], "Forward Calculation": [[9, "forward-calculation"], [10, "forward-calculation"], [11, "forward-calculation"], [13, "forward-calculation"], [14, "forward-calculation"], [15, "forward-calculation"], [16, "forward-calculation"], [17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [38, "forward-calculation"], [39, "forward-calculation"], [40, "forward-calculation"], [41, "forward-calculation"], [42, "forward-calculation"], [44, "forward-calculation"], [45, "forward-calculation"], [47, "forward-calculation"], [48, "forward-calculation"], [49, "forward-calculation"], [50, "forward-calculation"], [51, "forward-calculation"], [52, "forward-calculation"], [57, "forward-calculation"], [65, "forward-calculation"], [67, "forward-calculation"], [78, "forward-calculation"], [79, "forward-calculation"], [80, "forward-calculation"], [89, "forward-calculation"], [93, "forward-calculation"], [94, "forward-calculation"], [97, "forward-calculation"], [98, "forward-calculation"], [99, "forward-calculation"], [100, "forward-calculation"], [101, "forward-calculation"], [102, "forward-calculation"], [103, "forward-calculation"], [104, "forward-calculation"], [105, "forward-calculation"], [106, "forward-calculation"], [108, "forward-calculation"], [109, "forward-calculation"], [110, "forward-calculation"], [112, "forward-calculation"], [113, "forward-calculation"], [114, "forward-calculation"], [115, "forward-calculation"], [116, "forward-calculation"], [119, "forward-calculation"], [120, "forward-calculation"], [121, "forward-calculation"], [123, "forward-calculation"], [124, "forward-calculation"], [125, "forward-calculation"], [126, "forward-calculation"], [127, "forward-calculation"], [129, "forward-calculation"], [130, "forward-calculation"], [131, "forward-calculation"], [132, "forward-calculation"], [133, "forward-calculation"], [134, "forward-calculation"], [135, "forward-calculation"], [137, "forward-calculation"], [138, "forward-calculation"], [139, "forward-calculation"], [140, "forward-calculation"], [141, "forward-calculation"], [142, "forward-calculation"], [143, "forward-calculation"], [144, "forward-calculation"], [145, "forward-calculation"], [174, "forward-calculation"], [175, "forward-calculation"], [176, "forward-calculation"], [177, "forward-calculation"], [178, "forward-calculation"], [179, "forward-calculation"], [180, "forward-calculation"], [181, "forward-calculation"], [182, "forward-calculation"], [183, "forward-calculation"], [184, "forward-calculation"], [195, "forward-calculation"], [196, "forward-calculation"], [197, "forward-calculation"], [198, "forward-calculation"], [199, "forward-calculation"], [200, "forward-calculation"], [201, "forward-calculation"], [202, "forward-calculation"], [203, "forward-calculation"], [204, "forward-calculation"], [205, "forward-calculation"], [206, "forward-calculation"], [207, "forward-calculation"], [208, "forward-calculation"], [209, "forward-calculation"], [210, "forward-calculation"], [211, "forward-calculation"], [212, "forward-calculation"], [213, "forward-calculation"], [214, "forward-calculation"], [215, "forward-calculation"], [216, "forward-calculation"], [217, "forward-calculation"], [218, "forward-calculation"], [219, "forward-calculation"], [221, "forward-calculation"], [223, "forward-calculation"], [225, "forward-calculation"], [226, "forward-calculation"], [227, "forward-calculation"], [228, "forward-calculation"], [229, "forward-calculation"], [230, "forward-calculation"], [231, "forward-calculation"], [232, "forward-calculation"], [233, "forward-calculation"], [234, "forward-calculation"], [237, "forward-calculation"], [238, "forward-calculation"], [239, "forward-calculation"], [240, "forward-calculation"], [241, "forward-calculation"], [242, "forward-calculation"], [243, "forward-calculation"], [244, "forward-calculation"]], "Function Signature": [[9, "function-signature"], [10, "function-signature"], [11, "function-signature"], [13, "function-signature"], [14, "function-signature"], [15, "function-signature"], [16, "function-signature"], [17, "function-signature"], [18, "function-signature"], [19, "function-signature"], [21, "function-signature"], [24, "function-signature"], [25, "function-signature"], [26, "function-signature"], [28, "function-signature"], [29, "function-signature"], [30, "function-signature"], [31, "function-signature"], [33, "function-signature"], [44, "function-signature"], [45, "function-signature"], [47, "function-signature"], [48, "function-signature"], [49, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [53, "function-signature"], [54, "function-signature"], [55, "function-signature"], [57, "function-signature"], [58, "function-signature"], [59, "function-signature"], [60, "function-signature"], [61, "function-signature"], [62, "function-signature"], [65, "function-signature"], [67, "function-signature"], [68, "function-signature"], [69, "function-signature"], [70, "function-signature"], [72, "function-signature"], [73, "function-signature"], [74, "function-signature"], [76, "function-signature"], [77, "function-signature"], [78, "function-signature"], [79, "function-signature"], [80, "function-signature"], [81, "function-signature"], [82, "function-signature"], [83, "function-signature"], [85, "function-signature"], [86, "function-signature"], [87, "function-signature"], [89, "function-signature"], [90, "function-signature"], [91, "function-signature"], [93, "function-signature"], [94, "function-signature"], [95, "function-signature"], [96, "function-signature"], [97, "function-signature"], [98, "function-signature"], [162, "function-signature"], [164, "function-signature"], [167, "function-signature"], [168, "function-signature"], [169, "function-signature"], [170, "function-signature"], [171, "function-signature"], [174, "function-signature"], [175, "function-signature"], [176, "function-signature"], [177, "function-signature"], [178, "function-signature"], [179, "function-signature"], [180, "function-signature"], [181, "function-signature"], [182, "function-signature"], [183, "function-signature"], [184, "function-signature"], [185, "function-signature"], [186, "function-signature"], [187, "function-signature"], [188, "function-signature"], [189, "function-signature"], [190, "function-signature"], [191, "function-signature"], [192, "function-signature"], [193, "function-signature"], [195, "function-signature"], [196, "function-signature"], [197, "function-signature"], [198, "function-signature"], [199, "function-signature"], [200, "function-signature"], [201, "function-signature"], [202, "function-signature"], [203, "function-signature"], [204, "function-signature"], [205, "function-signature"], [206, "function-signature"], [207, "function-signature"], [208, "function-signature"], [209, "function-signature"], [210, "function-signature"], [211, "function-signature"], [212, "function-signature"], [213, "function-signature"], [214, "function-signature"], [215, "function-signature"], [216, "function-signature"], [217, "function-signature"], [218, "function-signature"], [219, "function-signature"], [220, "function-signature"], [221, "function-signature"], [222, "function-signature"], [223, "function-signature"], [225, "function-signature"], [226, "function-signature"], [227, "function-signature"], [228, "function-signature"], [229, "function-signature"], [230, "function-signature"], [231, "function-signature"], [232, "function-signature"], [233, "function-signature"], [234, "function-signature"]], "Future Work": [[4, "future-work"]], "Getting Started": [[149, "getting-started"]], "How It Works": [[162, "how-it-works"], [164, "how-it-works"]], "Image Datasets": [[6, null]], "Image Transformations": [[245, null]], "Indexing and slicing": [[173, null]], "Inspecting Optimizer State": [[149, null], [150, null], [151, null], [152, null], [153, null], [154, null], [155, null], [156, null], [157, null], [158, null], [159, null], [160, null]], "Integration with lucid": [[3, "integration-with-lucid"], [147, "integration-with-lucid"], [172, "integration-with-lucid"], [246, "integration-with-lucid"]], "Iterating through a tensor": [[173, null]], "Key Components": [[3, "key-components"], [147, "key-components"]], "Key Features": [[4, "key-features"], [7, "key-features"], [149, "key-features"], [172, "key-features"]], "Key Transformations": [[246, "key-transformations"]], "LeNet": [[23, null]], "Learn More": [[172, null]], "Limitations": [[7, "limitations"]], "Linear Algebra Operations": [[12, null]], "Linear Functions": [[64, null], [66, null]], "Linear Layers": [[118, null], [122, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[64, null], [71, null]], "Loss Layers": [[118, null], [128, null]], "Lucid": [[7, null]], "Matrix Multiplication Rules": [[178, "matrix-multiplication-rules"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [23, "methods"], [27, "methods"], [36, "methods"], [37, "methods"], [148, "methods"], [173, "methods"]], "Modules": [[118, null]], "Normalization Functions": [[64, null], [75, null]], "Normalization Layers": [[118, null], [136, null]], "Notes": [[7, "notes"]], "Optimizers": [[161, null]], "Organizing Models": [[147, "organizing-models"]], "Overview": [[3, "overview"], [4, "overview"], [7, "overview"], [23, "overview"], [24, "overview"], [25, "overview"], [26, "overview"], [147, "overview"], [149, "overview"], [172, "overview"], [246, "overview"]], "Parameters": [[1, "parameters"], [5, "parameters"], [9, "parameters"], [10, "parameters"], [11, "parameters"], [13, "parameters"], [14, "parameters"], [15, "parameters"], [16, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [20, "parameters"], [21, "parameters"], [23, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [35, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [44, "parameters"], [45, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [65, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [85, "parameters"], [86, "parameters"], [87, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [104, "parameters"], [105, "parameters"], [106, "parameters"], [108, "parameters"], [109, "parameters"], [110, "parameters"], [112, "parameters"], [113, "parameters"], [114, "parameters"], [115, "parameters"], [116, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [123, "parameters"], [124, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [135, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [154, "parameters"], [155, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"], [159, "parameters"], [160, "parameters"], [164, "parameters"], [167, "parameters"], [168, "parameters"], [169, "parameters"], [170, "parameters"], [171, "parameters"], [173, "parameters"], [174, "parameters"], [175, "parameters"], [176, "parameters"], [177, "parameters"], [178, "parameters"], [179, "parameters"], [180, "parameters"], [181, "parameters"], [182, "parameters"], [183, "parameters"], [184, "parameters"], [185, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [189, "parameters"], [190, "parameters"], [191, "parameters"], [192, "parameters"], [193, "parameters"], [195, "parameters"], [196, "parameters"], [197, "parameters"], [198, "parameters"], [199, "parameters"], [200, "parameters"], [201, "parameters"], [202, "parameters"], [203, "parameters"], [204, "parameters"], [205, "parameters"], [206, "parameters"], [207, "parameters"], [208, "parameters"], [209, "parameters"], [210, "parameters"], [211, "parameters"], [212, "parameters"], [213, "parameters"], [214, "parameters"], [215, "parameters"], [216, "parameters"], [217, "parameters"], [218, "parameters"], [219, "parameters"], [220, "parameters"], [221, "parameters"], [222, "parameters"], [223, "parameters"], [225, "parameters"], [226, "parameters"], [227, "parameters"], [228, "parameters"], [229, "parameters"], [230, "parameters"], [231, "parameters"], [232, "parameters"], [233, "parameters"], [234, "parameters"], [235, "parameters"], [236, "parameters"], [237, "parameters"], [238, "parameters"], [239, "parameters"], [240, "parameters"], [241, "parameters"], [242, "parameters"], [243, "parameters"], [244, "parameters"]], "Performing backpropagation": [[173, null]], "Pooling Functions": [[64, null], [84, null]], "Pooling Layers": [[118, null], [146, null]], "Potential Pitfalls": [[162, "potential-pitfalls"], [164, "potential-pitfalls"]], "Properties": [[37, "properties"], [173, "properties"]], "Raises": [[9, "raises"], [10, "raises"], [11, "raises"], [13, "raises"], [14, "raises"], [15, "raises"], [16, "raises"], [17, "raises"], [18, "raises"], [19, "raises"]], "Random Number Generations": [[166, null]], "References": [[5, "references"], [149, "references"]], "Returns": [[9, "returns"], [10, "returns"], [11, "returns"], [13, "returns"], [14, "returns"], [15, "returns"], [16, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [21, "returns"], [24, "returns"], [25, "returns"], [26, "returns"], [28, "returns"], [29, "returns"], [30, "returns"], [31, "returns"], [33, "returns"], [44, "returns"], [45, "returns"], [47, "returns"], [48, "returns"], [49, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [53, "returns"], [54, "returns"], [55, "returns"], [57, "returns"], [58, "returns"], [59, "returns"], [60, "returns"], [61, "returns"], [62, "returns"], [65, "returns"], [67, "returns"], [68, "returns"], [69, "returns"], [70, "returns"], [72, "returns"], [73, "returns"], [74, "returns"], [76, "returns"], [77, "returns"], [78, "returns"], [79, "returns"], [80, "returns"], [81, "returns"], [82, "returns"], [83, "returns"], [85, "returns"], [86, "returns"], [87, "returns"], [89, "returns"], [90, "returns"], [91, "returns"], [93, "returns"], [94, "returns"], [95, "returns"], [96, "returns"], [97, "returns"], [98, "returns"], [162, "returns"], [164, "returns"], [167, "returns"], [168, "returns"], [169, "returns"], [170, "returns"], [171, "returns"], [174, "returns"], [175, "returns"], [176, "returns"], [177, "returns"], [178, "returns"], [179, "returns"], [180, "returns"], [181, "returns"], [182, "returns"], [183, "returns"], [184, "returns"], [185, "returns"], [186, "returns"], [187, "returns"], [188, "returns"], [189, "returns"], [190, "returns"], [191, "returns"], [192, "returns"], [193, "returns"], [195, "returns"], [196, "returns"], [197, "returns"], [198, "returns"], [199, "returns"], [200, "returns"], [201, "returns"], [202, "returns"], [203, "returns"], [204, "returns"], [205, "returns"], [206, "returns"], [207, "returns"], [208, "returns"], [209, "returns"], [210, "returns"], [211, "returns"], [212, "returns"], [213, "returns"], [214, "returns"], [215, "returns"], [216, "returns"], [217, "returns"], [218, "returns"], [219, "returns"], [220, "returns"], [221, "returns"], [222, "returns"], [223, "returns"], [225, "returns"], [226, "returns"], [227, "returns"], [228, "returns"], [229, "returns"], [230, "returns"], [231, "returns"], [232, "returns"], [233, "returns"], [234, "returns"]], "See Also": [[149, "see-also"]], "Tensor Generating Functions": [[194, null]], "Tensor Operations": [[194, null]], "Tensor Utilites": [[224, null]], "Type Definitions": [[165, "type-definitions"]], "Unary Functions": [[194, null]], "Usage": [[4, "usage"], [35, "usage"], [90, "usage"], [162, "usage"], [163, "usage"], [164, "usage"], [225, "usage"], [235, "usage"], [236, "usage"], [246, "usage"]], "Use another Tensor as input": [[220, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using the ASGD Optimizer": [[150, null]], "Using the Adadelta Optimizer": [[151, null]], "Using the Adagrad Optimizer": [[152, null]], "Using the Adam Optimizer": [[153, null]], "Using the AdamW Optimizer": [[154, null]], "Using the Adamax Optimizer": [[155, null]], "Using the NAdam Optimizer": [[156, null]], "Using the RAdam Optimizer": [[157, null]], "Using the RMSprop Optimizer": [[158, null]], "Using the Rprop Optimizer": [[159, null]], "Using the SGD Optimizer": [[160, null]], "Utility Functions": [[64, null], [88, null]], "VGGNet": [[27, null]], "Weight Initializations": [[92, null]], "Why Use Type Aliases?": [[165, null]], "ZFNet": [[32, null]], "activation Functions": [[64, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "datasets.MNIST": [[5, null]], "lucid.Tensor": [[173, null]], "lucid.abs": [[195, null]], "lucid.add": [[174, null]], "lucid.arange": [[185, null]], "lucid.arccos": [[196, null]], "lucid.arcsin": [[197, null]], "lucid.arctan": [[198, null]], "lucid.clip": [[199, null]], "lucid.concatenate": [[221, null]], "lucid.cos": [[200, null]], "lucid.cosh": [[201, null]], "lucid.cube": [[202, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[186, null]], "lucid.div": [[175, null]], "lucid.dot": [[176, null]], "lucid.empty": [[187, null]], "lucid.empty_like": [[188, null]], "lucid.exp": [[203, null]], "lucid.eye": [[189, null]], "lucid.flatten": [[222, null]], "lucid.grad_enabled": [[162, null]], "lucid.hstack": [[223, null]], "lucid.inner": [[177, null]], "lucid.linalg": [[8, null]], "lucid.linalg.cholesky": [[9, null]], "lucid.linalg.det": [[10, null]], "lucid.linalg.eig": [[11, null]], "lucid.linalg.inv": [[13, null]], "lucid.linalg.matrix_power": [[14, null]], "lucid.linalg.norm": [[15, null]], "lucid.linalg.pinv": [[16, null]], "lucid.linalg.qr": [[17, null]], "lucid.linalg.solve": [[18, null]], "lucid.linalg.svd": [[19, null]], "lucid.log": [[204, null]], "lucid.matmul": [[178, null]], "lucid.max": [[205, null]], "lucid.maximum": [[179, null]], "lucid.mean": [[206, null]], "lucid.meshgrid": [[225, null]], "lucid.min": [[207, null]], "lucid.minimum": [[180, null]], "lucid.models": [[34, null]], "lucid.mul": [[181, null]], "lucid.newaxis": [[163, null]], "lucid.nn": [[147, null]], "lucid.nn.functional": [[64, null]], "lucid.no_grad": [[164, null]], "lucid.ones": [[190, null]], "lucid.ones_like": [[191, null]], "lucid.optim": [[149, null]], "lucid.outer": [[182, null]], "lucid.pad": [[226, null]], "lucid.power": [[183, null]], "lucid.random": [[172, null]], "lucid.random.rand": [[167, null]], "lucid.random.randint": [[168, null]], "lucid.random.randn": [[169, null]], "lucid.random.seed": [[170, null]], "lucid.random.uniform": [[171, null]], "lucid.ravel": [[227, null]], "lucid.reciprocal": [[208, null]], "lucid.repeat": [[228, null]], "lucid.reshape": [[229, null]], "lucid.sign": [[209, null]], "lucid.sin": [[210, null]], "lucid.sinh": [[211, null]], "lucid.sqrt": [[212, null]], "lucid.square": [[213, null]], "lucid.squeeze": [[230, null]], "lucid.stack": [[231, null]], "lucid.sub": [[184, null]], "lucid.sum": [[214, null]], "lucid.tan": [[215, null]], "lucid.tanh": [[216, null]], "lucid.tensor": [[220, null]], "lucid.tile": [[232, null]], "lucid.trace": [[217, null]], "lucid.transforms": [[246, null]], "lucid.transpose": [[218, null]], "lucid.types": [[165, null]], "lucid.unsqueeze": [[233, null]], "lucid.var": [[219, null]], "lucid.vstack": [[234, null]], "lucid.zeros": [[192, null]], "lucid.zeros_like": [[193, null]], "models.alexnet": [[21, null]], "models.lenet_1": [[24, null]], "models.lenet_4": [[25, null]], "models.lenet_5": [[26, null]], "models.vggnet_11": [[28, null]], "models.vggnet_13": [[29, null]], "models.vggnet_16": [[30, null]], "models.vggnet_19": [[31, null]], "models.zfnet": [[33, null]], "nn.AdaptiveAvgPool1d": [[137, null]], "nn.AdaptiveAvgPool2d": [[138, null]], "nn.AdaptiveAvgPool3d": [[139, null]], "nn.AlphaDropout": [[112, null]], "nn.AvgPool1d": [[140, null]], "nn.AvgPool2d": [[141, null]], "nn.AvgPool3d": [[142, null]], "nn.BCELoss": [[123, null]], "nn.BatchNorm1d": [[129, null]], "nn.BatchNorm2d": [[130, null]], "nn.BatchNorm3d": [[131, null]], "nn.Bilinear": [[119, null]], "nn.Buffer": [[35, null]], "nn.Conv1d": [[108, null]], "nn.Conv2d": [[109, null]], "nn.Conv3d": [[110, null]], "nn.CrossEntropyLoss": [[124, null]], "nn.Dropout": [[113, null]], "nn.Dropout1d": [[114, null]], "nn.Dropout2d": [[115, null]], "nn.Dropout3d": [[116, null]], "nn.ELU": [[99, null]], "nn.GELU": [[100, null]], "nn.HuberLoss": [[125, null]], "nn.Identity": [[120, null]], "nn.InstanceNorm1d": [[132, null]], "nn.InstanceNorm2d": [[133, null]], "nn.InstanceNorm3d": [[134, null]], "nn.LayerNorm": [[135, null]], "nn.LeakyReLU": [[101, null]], "nn.Linear": [[121, null]], "nn.MSELoss": [[126, null]], "nn.MaxPool1d": [[143, null]], "nn.MaxPool2d": [[144, null]], "nn.MaxPool3d": [[145, null]], "nn.Module": [[36, null]], "nn.ModuleDict": [[38, null]], "nn.ModuleList": [[39, null]], "nn.NLLLoss": [[127, null]], "nn.Parameter": [[37, null]], "nn.ParameterDict": [[40, null]], "nn.ParameterList": [[41, null]], "nn.ReLU": [[102, null]], "nn.SELU": [[103, null]], "nn.Sequential": [[42, null]], "nn.Sigmoid": [[104, null]], "nn.Softmax": [[105, null]], "nn.Tanh": [[106, null]], "nn.functional.adaptive_avg_pool1d": [[78, null]], "nn.functional.adaptive_avg_pool2d": [[79, null]], "nn.functional.adaptive_avg_pool3d": [[80, null]], "nn.functional.alpha_dropout": [[58, null]], "nn.functional.avg_pool1d": [[81, null]], "nn.functional.avg_pool2d": [[82, null]], "nn.functional.avg_pool3d": [[83, null]], "nn.functional.batch_norm": [[74, null]], "nn.functional.bilinear": [[65, null]], "nn.functional.binary_cross_entropy": [[68, null]], "nn.functional.conv1d": [[53, null]], "nn.functional.conv2d": [[54, null]], "nn.functional.conv3d": [[55, null]], "nn.functional.cross_entropy": [[69, null]], "nn.functional.dropout": [[59, null]], "nn.functional.dropout1d": [[60, null]], "nn.functional.dropout2d": [[61, null]], "nn.functional.dropout3d": [[62, null]], "nn.functional.elu": [[44, null]], "nn.functional.gelu": [[45, null]], "nn.functional.huber_loss": [[70, null]], "nn.functional.instance_norm": [[76, null]], "nn.functional.interpolate": [[89, null]], "nn.functional.layer_norm": [[77, null]], "nn.functional.leaky_relu": [[47, null]], "nn.functional.linear": [[67, null]], "nn.functional.max_pool1d": [[85, null]], "nn.functional.max_pool2d": [[86, null]], "nn.functional.max_pool3d": [[87, null]], "nn.functional.mse_loss": [[72, null]], "nn.functional.nll_loss": [[73, null]], "nn.functional.relu": [[48, null]], "nn.functional.rotate": [[90, null]], "nn.functional.selu": [[49, null]], "nn.functional.sigmoid": [[50, null]], "nn.functional.softmax": [[51, null]], "nn.functional.tanh": [[52, null]], "nn.functional.unfold": [[57, null]], "nn.init.constant": [[91, null]], "nn.init.kaiming_normal": [[93, null]], "nn.init.kaiming_uniform": [[94, null]], "nn.init.normal": [[95, null]], "nn.init.uniform": [[96, null]], "nn.init.xavier_normal": [[97, null]], "nn.init.xavier_uniform": [[98, null]], "optim.ASGD": [[150, null]], "optim.Adadelta": [[151, null]], "optim.Adagrad": [[152, null]], "optim.Adam": [[153, null]], "optim.AdamW": [[154, null]], "optim.Adamax": [[155, null]], "optim.NAdam": [[156, null]], "optim.Optimizer": [[148, null]], "optim.RAdam": [[157, null]], "optim.RMSprop": [[158, null]], "optim.Rprop": [[159, null]], "optim.SGD": [[160, null]], "transforms.CenterCrop": [[237, null]], "transforms.Compose": [[235, null]], "transforms.Normalize": [[238, null]], "transforms.RandomCrop": [[239, null]], "transforms.RandomGrayscale": [[240, null]], "transforms.RandomHorizontalFlip": [[241, null]], "transforms.RandomRotation": [[242, null]], "transforms.RandomVerticalFlip": [[243, null]], "transforms.Resize": [[244, null]], "transforms.ToTensor": [[236, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/MNIST", "datasets/image/index", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/convnets/alex/AlexNet", "models/convnets/alex/alexnet", "models/convnets/index", "models/convnets/lenet/LeNet", "models/convnets/lenet/lenet_1", "models/convnets/lenet/lenet_4", "models/convnets/lenet/lenet_5", "models/convnets/vgg/VGGNet", "models/convnets/vgg/vggnet_11", "models/convnets/vgg/vggnet_13", "models/convnets/vgg/vggnet_16", "models/convnets/vgg/vggnet_19", "models/convnets/zfnet/ZFNet", "models/convnets/zfnet/zfnet", "models/models", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/nn", "optim/Optimizer", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/types", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/meshgrid", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/convnets/alex/AlexNet.rst", "models/convnets/alex/alexnet.rst", "models/convnets/index.rst", "models/convnets/lenet/LeNet.rst", "models/convnets/lenet/lenet_1.rst", "models/convnets/lenet/lenet_4.rst", "models/convnets/lenet/lenet_5.rst", "models/convnets/vgg/VGGNet.rst", "models/convnets/vgg/vggnet_11.rst", "models/convnets/vgg/vggnet_13.rst", "models/convnets/vgg/vggnet_16.rst", "models/convnets/vgg/vggnet_19.rst", "models/convnets/zfnet/ZFNet.rst", "models/convnets/zfnet/zfnet.rst", "models/models.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/types.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"abs() (in module lucid)": [[195, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[151, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[152, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[153, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[155, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[154, "lucid.optim.AdamW", false]], "adaptive_avg_pool1d() (in module lucid.nn.functional)": [[78, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[79, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[80, "lucid.nn.functional.adaptive_avg_pool3d", false]], "adaptiveavgpool1d (class in lucid.nn)": [[137, "lucid.nn.AdaptiveAvgPool1d", false]], "adaptiveavgpool2d (class in lucid.nn)": [[138, "lucid.nn.AdaptiveAvgPool2d", false]], "adaptiveavgpool3d (class in lucid.nn)": [[139, "lucid.nn.AdaptiveAvgPool3d", false]], "add() (in module lucid)": [[174, "lucid.add", false]], "alexnet (class in lucid.models)": [[20, "lucid.models.AlexNet", false]], "alexnet() (in module lucid.models)": [[21, "lucid.models.alexnet", false]], "alpha_dropout() (in module lucid.nn.functional)": [[58, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[112, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[185, "lucid.arange", false]], "arccos() (in module lucid)": [[196, "lucid.arccos", false]], "arcsin() (in module lucid)": [[197, "lucid.arcsin", false]], "arctan() (in module lucid)": [[198, "lucid.arctan", false]], "asgd (class in lucid.optim)": [[150, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[81, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[82, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[83, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[140, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[141, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[142, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[74, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[129, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[130, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[131, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[123, "lucid.nn.BCELoss", false]], "bilinear (class in lucid.nn)": [[119, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[65, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[68, "lucid.nn.functional.binary_cross_entropy", false]], "buffer (class in lucid.nn)": [[35, "lucid.nn.Buffer", false]], "centercrop (class in lucid.transforms)": [[237, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[9, "lucid.linalg.cholesky", false]], "clip() (in module lucid)": [[199, "lucid.clip", false]], "compose (class in lucid.transforms)": [[235, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[221, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[91, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[108, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[53, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[109, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[54, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[110, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[55, "lucid.nn.functional.conv3d", false]], "cos() (in module lucid)": [[200, "lucid.cos", false]], "cosh() (in module lucid)": [[201, "lucid.cosh", false]], "cross_entropy() (in module lucid.nn.functional)": [[69, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[124, "lucid.nn.CrossEntropyLoss", false]], "cube() (in module lucid)": [[202, "lucid.cube", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "det() (in module lucid.linalg)": [[10, "lucid.linalg.det", false]], "diag() (in module lucid)": [[186, "lucid.diag", false]], "div() (in module lucid)": [[175, "lucid.div", false]], "dot() (in module lucid)": [[176, "lucid.dot", false]], "dropout (class in lucid.nn)": [[113, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[59, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[114, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[60, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[115, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[61, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[116, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[62, "lucid.nn.functional.dropout3d", false]], "eig() (in module lucid.linalg)": [[11, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[99, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[44, "lucid.nn.functional.elu", false]], "empty() (in module lucid)": [[187, "lucid.empty", false]], "empty_like() (in module lucid)": [[188, "lucid.empty_like", false]], "exp() (in module lucid)": [[203, "lucid.exp", false]], "eye() (in module lucid)": [[189, "lucid.eye", false]], "flatten() (in module lucid)": [[222, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[100, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[45, "lucid.nn.functional.gelu", false]], "grad_enabled() (in module lucid)": [[162, "lucid.grad_enabled", false]], "hstack() (in module lucid)": [[223, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[70, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[125, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[120, "lucid.nn.Identity", false]], "inner() (in module lucid)": [[177, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[76, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[132, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[133, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[134, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[89, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[13, "lucid.linalg.inv", false]], "kaiming_normal() (in module lucid.nn.init)": [[93, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[94, "lucid.nn.init.kaiming_uniform", false]], "layer_norm() (in module lucid.nn.functional)": [[77, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[135, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[47, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[101, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[23, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[24, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[25, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[26, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[121, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[67, "lucid.nn.functional.linear", false]], "log() (in module lucid)": [[204, "lucid.log", false]], "lucid": [[7, "module-lucid", false]], "matmul() (in module lucid)": [[178, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[14, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[205, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[85, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[86, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[87, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[179, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[143, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[144, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[145, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[206, "lucid.mean", false]], "meshgrid() (in module lucid)": [[225, "lucid.meshgrid", false]], "min() (in module lucid)": [[207, "lucid.min", false]], "minimum() (in module lucid)": [[180, "lucid.minimum", false]], "mnist (class in lucid.datasets)": [[5, "lucid.datasets.MNIST", false]], "module": [[7, "module-lucid", false]], "module (class in lucid.nn)": [[36, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[38, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[39, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[72, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[126, "lucid.nn.MSELoss", false]], "mul() (in module lucid)": [[181, "lucid.mul", false]], "nadam (class in lucid.optim)": [[156, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[73, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[127, "lucid.nn.NLLLoss", false]], "no_grad() (in module lucid)": [[164, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[15, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[95, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[238, "lucid.transforms.Normalize", false]], "ones() (in module lucid)": [[190, "lucid.ones", false]], "ones_like() (in module lucid)": [[191, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[148, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[182, "lucid.outer", false]], "pad() (in module lucid)": [[226, "lucid.pad", false]], "parameter (class in lucid.nn)": [[37, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[40, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[41, "lucid.nn.ParameterList", false]], "pinv() (in module lucid.linalg)": [[16, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[183, "lucid.power", false]], "qr() (in module lucid.linalg)": [[17, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[157, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[167, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[168, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[169, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[239, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[240, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[241, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[242, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[243, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[227, "lucid.ravel", false]], "reciprocal() (in module lucid)": [[208, "lucid.reciprocal", false]], "relu (class in lucid.nn)": [[102, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[48, "lucid.nn.functional.relu", false]], "repeat() (in module lucid)": [[228, "lucid.repeat", false]], "reshape() (in module lucid)": [[229, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[244, "lucid.transforms.Resize", false]], "rmsprop (class in lucid.optim)": [[158, "lucid.optim.RMSprop", false]], "rotate() (in module lucid.nn.functional)": [[90, "lucid.nn.functional.rotate", false]], "rprop (class in lucid.optim)": [[159, "lucid.optim.Rprop", false]], "seed() (in module lucid.random)": [[170, "lucid.random.seed", false]], "selu (class in lucid.nn)": [[103, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[49, "lucid.nn.functional.selu", false]], "sequential (class in lucid.nn)": [[42, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[160, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[104, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[50, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[209, "lucid.sign", false]], "sin() (in module lucid)": [[210, "lucid.sin", false]], "sinh() (in module lucid)": [[211, "lucid.sinh", false]], "softmax (class in lucid.nn)": [[105, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[51, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[18, "lucid.linalg.solve", false]], "sqrt() (in module lucid)": [[212, "lucid.sqrt", false]], "square() (in module lucid)": [[213, "lucid.square", false]], "squeeze() (in module lucid)": [[230, "lucid.squeeze", false]], "stack() (in module lucid)": [[231, "lucid.stack", false]], "sub() (in module lucid)": [[184, "lucid.sub", false]], "sum() (in module lucid)": [[214, "lucid.sum", false]], "svd() (in module lucid.linalg)": [[19, "lucid.linalg.svd", false]], "tan() (in module lucid)": [[215, "lucid.tan", false]], "tanh (class in lucid.nn)": [[106, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[216, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[52, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[173, "lucid.Tensor", false]], "tensor() (in module lucid)": [[220, "lucid.tensor", false]], "tile() (in module lucid)": [[232, "lucid.tile", false]], "totensor (class in lucid.transforms)": [[236, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[217, "lucid.trace", false]], "transpose() (in module lucid)": [[218, "lucid.transpose", false]], "unfold() (in module lucid.nn.functional)": [[57, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[96, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[171, "lucid.random.uniform", false]], "unsqueeze() (in module lucid)": [[233, "lucid.unsqueeze", false]], "var() (in module lucid)": [[219, "lucid.var", false]], "vggnet (class in lucid.models)": [[27, "lucid.models.VGGNet", false]], "vggnet_11() (in module lucid.models)": [[28, "lucid.models.vggnet_11", false]], "vggnet_13() (in module lucid.models)": [[29, "lucid.models.vggnet_13", false]], "vggnet_16() (in module lucid.models)": [[30, "lucid.models.vggnet_16", false]], "vggnet_19() (in module lucid.models)": [[31, "lucid.models.vggnet_19", false]], "vstack() (in module lucid)": [[234, "lucid.vstack", false]], "xavier_normal() (in module lucid.nn.init)": [[97, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[98, "lucid.nn.init.xavier_uniform", false]], "zeros() (in module lucid)": [[192, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[193, "lucid.zeros_like", false]], "zfnet (class in lucid.models)": [[32, "lucid.models.ZFNet", false]], "zfnet() (in module lucid.models)": [[33, "lucid.models.zfnet", false]]}, "objects": {"": [[7, 0, 0, "-", "lucid"]], "lucid": [[173, 1, 1, "", "Tensor"], [195, 2, 1, "", "abs"], [174, 2, 1, "", "add"], [185, 2, 1, "", "arange"], [196, 2, 1, "", "arccos"], [197, 2, 1, "", "arcsin"], [198, 2, 1, "", "arctan"], [199, 2, 1, "", "clip"], [221, 2, 1, "", "concatenate"], [200, 2, 1, "", "cos"], [201, 2, 1, "", "cosh"], [202, 2, 1, "", "cube"], [186, 2, 1, "", "diag"], [175, 2, 1, "", "div"], [176, 2, 1, "", "dot"], [187, 2, 1, "", "empty"], [188, 2, 1, "", "empty_like"], [203, 2, 1, "", "exp"], [189, 2, 1, "", "eye"], [222, 2, 1, "", "flatten"], [162, 2, 1, "", "grad_enabled"], [223, 2, 1, "", "hstack"], [177, 2, 1, "", "inner"], [204, 2, 1, "", "log"], [178, 2, 1, "", "matmul"], [205, 2, 1, "", "max"], [179, 2, 1, "", "maximum"], [206, 2, 1, "", "mean"], [225, 2, 1, "", "meshgrid"], [207, 2, 1, "", "min"], [180, 2, 1, "", "minimum"], [181, 2, 1, "", "mul"], [164, 2, 1, "", "no_grad"], [190, 2, 1, "", "ones"], [191, 2, 1, "", "ones_like"], [182, 2, 1, "", "outer"], [226, 2, 1, "", "pad"], [183, 2, 1, "", "power"], [227, 2, 1, "", "ravel"], [208, 2, 1, "", "reciprocal"], [228, 2, 1, "", "repeat"], [229, 2, 1, "", "reshape"], [209, 2, 1, "", "sign"], [210, 2, 1, "", "sin"], [211, 2, 1, "", "sinh"], [212, 2, 1, "", "sqrt"], [213, 2, 1, "", "square"], [230, 2, 1, "", "squeeze"], [231, 2, 1, "", "stack"], [184, 2, 1, "", "sub"], [214, 2, 1, "", "sum"], [215, 2, 1, "", "tan"], [216, 2, 1, "", "tanh"], [220, 2, 1, "", "tensor"], [232, 2, 1, "", "tile"], [217, 2, 1, "", "trace"], [218, 2, 1, "", "transpose"], [233, 2, 1, "", "unsqueeze"], [219, 2, 1, "", "var"], [234, 2, 1, "", "vstack"], [192, 2, 1, "", "zeros"], [193, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "MNIST"]], "lucid.linalg": [[9, 2, 1, "", "cholesky"], [10, 2, 1, "", "det"], [11, 2, 1, "", "eig"], [13, 2, 1, "", "inv"], [14, 2, 1, "", "matrix_power"], [15, 2, 1, "", "norm"], [16, 2, 1, "", "pinv"], [17, 2, 1, "", "qr"], [18, 2, 1, "", "solve"], [19, 2, 1, "", "svd"]], "lucid.models": [[20, 1, 1, "", "AlexNet"], [23, 1, 1, "", "LeNet"], [27, 1, 1, "", "VGGNet"], [32, 1, 1, "", "ZFNet"], [21, 2, 1, "", "alexnet"], [24, 2, 1, "", "lenet_1"], [25, 2, 1, "", "lenet_4"], [26, 2, 1, "", "lenet_5"], [28, 2, 1, "", "vggnet_11"], [29, 2, 1, "", "vggnet_13"], [30, 2, 1, "", "vggnet_16"], [31, 2, 1, "", "vggnet_19"], [33, 2, 1, "", "zfnet"]], "lucid.nn": [[137, 1, 1, "", "AdaptiveAvgPool1d"], [138, 1, 1, "", "AdaptiveAvgPool2d"], [139, 1, 1, "", "AdaptiveAvgPool3d"], [112, 1, 1, "", "AlphaDropout"], [140, 1, 1, "", "AvgPool1d"], [141, 1, 1, "", "AvgPool2d"], [142, 1, 1, "", "AvgPool3d"], [123, 1, 1, "", "BCELoss"], [129, 1, 1, "", "BatchNorm1d"], [130, 1, 1, "", "BatchNorm2d"], [131, 1, 1, "", "BatchNorm3d"], [119, 1, 1, "", "Bilinear"], [35, 1, 1, "", "Buffer"], [108, 1, 1, "", "Conv1d"], [109, 1, 1, "", "Conv2d"], [110, 1, 1, "", "Conv3d"], [124, 1, 1, "", "CrossEntropyLoss"], [113, 1, 1, "", "Dropout"], [114, 1, 1, "", "Dropout1d"], [115, 1, 1, "", "Dropout2d"], [116, 1, 1, "", "Dropout3d"], [99, 1, 1, "", "ELU"], [100, 1, 1, "", "GELU"], [125, 1, 1, "", "HuberLoss"], [120, 1, 1, "", "Identity"], [132, 1, 1, "", "InstanceNorm1d"], [133, 1, 1, "", "InstanceNorm2d"], [134, 1, 1, "", "InstanceNorm3d"], [135, 1, 1, "", "LayerNorm"], [101, 1, 1, "", "LeakyReLU"], [121, 1, 1, "", "Linear"], [126, 1, 1, "", "MSELoss"], [143, 1, 1, "", "MaxPool1d"], [144, 1, 1, "", "MaxPool2d"], [145, 1, 1, "", "MaxPool3d"], [36, 1, 1, "", "Module"], [38, 1, 1, "", "ModuleDict"], [39, 1, 1, "", "ModuleList"], [127, 1, 1, "", "NLLLoss"], [37, 1, 1, "", "Parameter"], [40, 1, 1, "", "ParameterDict"], [41, 1, 1, "", "ParameterList"], [102, 1, 1, "", "ReLU"], [103, 1, 1, "", "SELU"], [42, 1, 1, "", "Sequential"], [104, 1, 1, "", "Sigmoid"], [105, 1, 1, "", "Softmax"], [106, 1, 1, "", "Tanh"]], "lucid.nn.functional": [[78, 2, 1, "", "adaptive_avg_pool1d"], [79, 2, 1, "", "adaptive_avg_pool2d"], [80, 2, 1, "", "adaptive_avg_pool3d"], [58, 2, 1, "", "alpha_dropout"], [81, 2, 1, "", "avg_pool1d"], [82, 2, 1, "", "avg_pool2d"], [83, 2, 1, "", "avg_pool3d"], [74, 2, 1, "", "batch_norm"], [65, 2, 1, "", "bilinear"], [68, 2, 1, "", "binary_cross_entropy"], [53, 2, 1, "", "conv1d"], [54, 2, 1, "", "conv2d"], [55, 2, 1, "", "conv3d"], [69, 2, 1, "", "cross_entropy"], [59, 2, 1, "", "dropout"], [60, 2, 1, "", "dropout1d"], [61, 2, 1, "", "dropout2d"], [62, 2, 1, "", "dropout3d"], [44, 2, 1, "", "elu"], [45, 2, 1, "", "gelu"], [70, 2, 1, "", "huber_loss"], [76, 2, 1, "", "instance_norm"], [89, 2, 1, "", "interpolate"], [77, 2, 1, "", "layer_norm"], [47, 2, 1, "", "leaky_relu"], [67, 2, 1, "", "linear"], [85, 2, 1, "", "max_pool1d"], [86, 2, 1, "", "max_pool2d"], [87, 2, 1, "", "max_pool3d"], [72, 2, 1, "", "mse_loss"], [73, 2, 1, "", "nll_loss"], [48, 2, 1, "", "relu"], [90, 2, 1, "", "rotate"], [49, 2, 1, "", "selu"], [50, 2, 1, "", "sigmoid"], [51, 2, 1, "", "softmax"], [52, 2, 1, "", "tanh"], [57, 2, 1, "", "unfold"]], "lucid.nn.init": [[91, 2, 1, "", "constant"], [93, 2, 1, "", "kaiming_normal"], [94, 2, 1, "", "kaiming_uniform"], [95, 2, 1, "", "normal"], [96, 2, 1, "", "uniform"], [97, 2, 1, "", "xavier_normal"], [98, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[150, 1, 1, "", "ASGD"], [151, 1, 1, "", "Adadelta"], [152, 1, 1, "", "Adagrad"], [153, 1, 1, "", "Adam"], [154, 1, 1, "", "AdamW"], [155, 1, 1, "", "Adamax"], [156, 1, 1, "", "NAdam"], [148, 1, 1, "", "Optimizer"], [157, 1, 1, "", "RAdam"], [158, 1, 1, "", "RMSprop"], [159, 1, 1, "", "Rprop"], [160, 1, 1, "", "SGD"]], "lucid.random": [[167, 2, 1, "", "rand"], [168, 2, 1, "", "randint"], [169, 2, 1, "", "randn"], [170, 2, 1, "", "seed"], [171, 2, 1, "", "uniform"]], "lucid.transforms": [[237, 1, 1, "", "CenterCrop"], [235, 1, 1, "", "Compose"], [238, 1, 1, "", "Normalize"], [239, 1, 1, "", "RandomCrop"], [240, 1, 1, "", "RandomGrayscale"], [241, 1, 1, "", "RandomHorizontalFlip"], [242, 1, 1, "", "RandomRotation"], [243, 1, 1, "", "RandomVerticalFlip"], [244, 1, 1, "", "Resize"], [236, 1, 1, "", "ToTensor"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [3, 7, 8, 14, 16, 19, 35, 36, 37, 38, 40, 41, 42, 78, 79, 80, 124, 127, 137, 138, 139, 140, 143, 144, 147, 148, 149, 163, 178, 186, 204, 206, 214, 217, 219, 220, 230, 236, 238, 246], "0": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 23, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 218, 219, 220, 221, 223, 226, 227, 228, 230, 231, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 246], "000": [5, 187, 188], "0000": [124, 125, 127], "0001": 150, "000e": [187, 188], "001": [150, 153, 154, 156, 157, 160], "002": [155, 156], "004": 156, "005": 101, "01": [47, 101, 148, 149, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160], "01051757": 169, "0205": 124, "0217": 124, "0227": 124, "0299": 124, "044715": [45, 100], "0450": 124, "0451": 124, "047": [29, 34], "04719755": 196, "0474259": 50, "0480": 124, "05": [74, 76, 77, 101, 129, 130, 131, 132, 133, 134, 135], "0507": [49, 103], "06": [151, 159], "07": [68, 69, 123, 124], "0700": 124, "0706508": 106, "0721": 124, "0794": 127, "08": [153, 154, 155, 156, 157, 158], "0802": 127, "08333333": 16, "085537": 203, "0900": [105, 124], "0986": [51, 105], "09861229": 204, "0992": 124, "1": [0, 1, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 165, 167, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246], "10": [0, 1, 2, 3, 20, 21, 23, 24, 25, 26, 27, 32, 33, 34, 38, 39, 42, 54, 55, 65, 67, 78, 108, 109, 110, 115, 116, 119, 121, 130, 131, 133, 137, 141, 142, 144, 152, 168, 171, 172, 175, 178, 181, 182, 198, 214, 237, 239, 240, 242], "100": [21, 28, 29, 30, 31, 34, 246], "1000": [20, 21, 27, 28, 29, 30, 31, 32, 33], "1000000": 150, "1001": 124, "1003": 124, "1007": 34, "1014": 49, "1025": [39, 42], "1026": [39, 42], "1027": [39, 42], "10499": 50, "1050": 104, "1054": 127, "1056": [39, 42], "10590": 34, "1097": 34, "11": [27, 28, 34, 65, 108, 109, 110, 115, 119, 130, 131, 133, 141, 142, 144, 178, 237, 238, 239, 240, 242], "1105": 34, "1109": 34, "1111": 123, "1134": 65, "114b": 240, "119": 65, "1192": [50, 51, 105], "12": [24, 25, 40, 65, 80, 108, 109, 110, 115, 116, 119, 130, 131, 133, 139, 141, 142, 144, 178, 182, 183, 237, 239, 240, 242], "120": [23, 26], "123": [93, 94, 95, 96, 97, 98, 170, 171], "124": [93, 94, 97, 98], "125": 142, "1250": 125, "128": [27, 42, 235, 246], "128x128": [235, 246], "13": [27, 29, 34, 65, 108, 109, 110, 119, 131, 141, 142, 144, 178, 237, 239, 240, 242], "132": [28, 34], "133": [29, 34], "138": [30, 34], "14": [108, 109, 110, 115, 116, 119, 131, 141, 142, 144, 165, 178, 182, 237, 239, 240, 242], "1409": 34, "143": [31, 34], "145": 65, "15": [0, 65, 108, 109, 110, 119, 131, 141, 142, 144, 178, 182, 217, 237, 239, 240, 242, 246], "1513": 127, "155": 178, "1556": 34, "1588": [45, 100], "16": [23, 26, 27, 30, 34, 39, 40, 42, 79, 80, 108, 109, 110, 115, 116, 119, 130, 131, 138, 139, 141, 142, 144, 147, 178, 182, 212, 237, 239, 240, 242], "16227766": 17, "16425": 127, "1643": 123, "166": 178, "17": [108, 109, 110, 119, 131, 142, 177, 237, 239, 240, 242], "170": 65, "17520119": 211, "18": [25, 34, 108, 109, 110, 115, 119, 131, 142, 181, 182, 237, 239, 240, 242], "1800": 124, "19": [27, 31, 34, 54, 55, 65, 109, 110, 131, 176, 178], "192": [24, 25], "1966": [51, 104, 105], "1998": [34, 124], "1_53": 34, "1d": [53, 78, 81, 85, 129, 132, 137, 171, 178, 186, 217, 225, 226, 227, 228, 232], "1e": [68, 69, 74, 76, 77, 123, 124, 129, 130, 131, 132, 133, 134, 135, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "1e6": 150, "1st": [20, 32], "2": [1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 32, 35, 36, 37, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 165, 167, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246], "20": [0, 5, 38, 39, 42, 109, 110, 115, 131, 182, 203], "2012": 34, "2014": 34, "2039": 127, "204": 110, "21": [40, 65, 109, 110, 131, 182], "211": 178, "22": [65, 109, 110, 115, 131, 176, 178], "2231": [124, 127], "224": [20, 27, 32, 34], "2247": [129, 130, 131, 132, 133, 134, 135], "226": 178, "22752314": 169, "2278": 34, "23": [109, 110, 131], "2324": [34, 103], "234": [93, 94, 95, 96, 97, 98, 171], "24": [65, 79, 109, 110, 115, 131, 138, 182], "240": [31, 34], "2424": [51, 105], "2447": 105, "246": [24, 34], "25": [0, 34, 50, 104, 110, 126, 131, 141, 142, 175, 208, 219], "2500": [123, 125, 127], "2512": 99, "2547": 103, "256": 27, "26": [40, 67, 110, 121, 131, 182], "26325684": 169, "2689": [51, 104, 105], "27": [65, 108, 110, 131, 202], "276": [93, 94, 97, 98], "28": [24, 25, 34, 65, 110, 182], "28x28": [5, 24, 25], "29": 110, "299r": 240, "2_i": [132, 133, 134], "2d": [54, 61, 79, 82, 86, 130, 133, 138, 178, 186, 189, 217, 222, 225, 226, 228, 232, 242], "2e": 155, "2nd": [20, 32], "2x2": [57, 237, 239], "3": [1, 2, 3, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 24, 27, 32, 34, 35, 36, 37, 39, 40, 41, 42, 45, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 70, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 199, 201, 202, 203, 204, 205, 206, 207, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244], "30": [39, 90, 110, 242], "3026": 127, "31": [65, 110, 178], "310": [187, 188], "31622777": 17, "319": 34, "32": [26, 34, 39, 42, 65, 67, 79, 109, 110, 121, 138, 147, 176, 177, 182], "321": [93, 94, 97, 98], "32x32": [23, 26], "33": [39, 42, 67, 110, 121], "33333333": 16, "336": [28, 34], "34": [39, 42, 65, 110, 178, 182], "342": [93, 94, 97, 98], "345": [93, 94, 95, 96, 97, 98, 171], "35": [39, 42, 110], "3567": [123, 127], "357": [30, 33, 34], "36": 110, "3679": [44, 49, 99], "37": 108, "372": 65, "375": 126, "3750": 125, "378": [25, 34], "38344152": 167, "38629436": 204, "389056": 203, "3935": 99, "3d": [55, 62, 80, 83, 87, 110, 131, 134, 139], "3x3": [34, 172], "4": [0, 1, 2, 3, 8, 9, 10, 11, 13, 15, 16, 17, 23, 24, 25, 34, 40, 42, 53, 54, 55, 57, 60, 61, 62, 65, 67, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 153, 157, 158, 160, 163, 165, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 191, 193, 199, 204, 205, 206, 207, 208, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244], "400": 26, "4044": 123, "4076": 124, "4096": [20, 32], "41421356": 9, "41666667": 16, "41808962": 169, "419974": 52, "4199743": 106, "42": [65, 165, 172], "421": [93, 94, 97, 98], "423": [93, 94, 95, 96], "42718872": 17, "4286": 123, "43": [176, 178], "4323": 99, "4375": 125, "43758721": 167, "4472136": 11, "4495": [131, 134], "45": [65, 90, 242], "4545": 112, "47112767": 198, "48": [67, 121], "4979": 99, "4x4": 244, "5": [1, 2, 7, 8, 13, 14, 15, 16, 20, 23, 24, 25, 26, 32, 34, 36, 37, 38, 39, 40, 42, 45, 50, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 70, 72, 74, 76, 77, 78, 81, 82, 89, 91, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 140, 141, 142, 144, 145, 159, 163, 165, 168, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 191, 193, 195, 196, 197, 205, 206, 207, 208, 209, 214, 217, 218, 219, 220, 223, 225, 229, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246], "50": [67, 121, 159, 176, 178, 240, 241, 243, 246], "5000": [123, 125, 127], "5108": 127, "52359878": 197, "53": [65, 177], "543": [93, 94, 95, 96, 97, 98, 171], "54308063": 201, "544": [30, 34], "545": 183, "5455": 112, "563": [93, 94, 97, 98], "57": 65, "57079633": [196, 197], "57366333": 170, "587g": 240, "5th": [20, 32], "6": [8, 16, 20, 23, 26, 32, 40, 41, 53, 54, 55, 57, 62, 65, 67, 78, 94, 98, 108, 109, 110, 113, 114, 115, 116, 119, 121, 123, 129, 130, 131, 132, 133, 134, 135, 137, 141, 142, 144, 145, 151, 159, 163, 165, 171, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 191, 193, 205, 206, 207, 214, 217, 218, 219, 220, 223, 228, 229, 234, 236, 237, 238, 239, 240, 242, 244], "6052": 127, "6065": 99, "608": [33, 34], "61": [21, 26, 34], "6124": [129, 130, 131, 132, 133, 134, 135], "62": [33, 34, 65], "62686041": 211, "6321": [44, 99], "63245553": 17, "64": [27, 39, 42, 65], "64589411": 167, "654": [93, 94, 95, 96, 97, 98, 171], "657": [93, 94, 97, 98], "6590": [51, 105], "6652": 105, "66666667": 16, "6667": 123, "667": [31, 34], "6682": 123, "67": 178, "67326": 103, "6733": 49, "678": [93, 94, 95, 96, 97, 98], "68811989": 169, "69314718": 204, "7": [15, 27, 40, 53, 54, 55, 57, 62, 65, 67, 68, 69, 78, 100, 103, 104, 106, 108, 109, 110, 115, 116, 119, 121, 123, 124, 126, 130, 131, 133, 134, 137, 141, 142, 144, 145, 165, 168, 171, 174, 176, 177, 178, 182, 184, 186, 203, 206, 214, 217, 218, 219, 232, 236, 237, 238, 239, 240, 242, 244], "70": 5, "7001": 124, "706": [26, 34], "70710678": [11, 210], "7147": 127, "7182818": 203, "726791": 34, "7311": [51, 104, 105], "74": 178, "75": [67, 121, 126, 150], "7581": 49, "76159416": 216, "7616": [52, 106], "76219569": 201, "7635": 103, "772": 183, "78357324": 169, "78539816": 198, "79172504": 167, "7x7": 32, "8": [14, 18, 39, 40, 42, 53, 54, 55, 57, 62, 65, 67, 68, 78, 79, 80, 100, 103, 104, 106, 108, 109, 110, 113, 114, 115, 116, 119, 121, 123, 126, 130, 131, 133, 134, 137, 138, 139, 141, 142, 144, 145, 153, 154, 155, 156, 157, 158, 165, 168, 175, 176, 177, 178, 182, 183, 185, 186, 202, 206, 214, 217, 218, 219, 236, 237, 238, 239, 240, 242, 244], "80": 5, "8005": 124, "818": 34, "8182": 112, "82": 65, "833": 34, "84": [23, 25, 26], "840": [21, 34], "8413": [45, 100], "848": [29, 34], "8584": 103, "86": 34, "863": [28, 34], "876": [93, 94, 97, 98, 171], "8808": [51, 104, 105], "887": 183, "891773": 167, "89442719": 11, "9": [0, 1, 3, 5, 18, 54, 57, 65, 67, 78, 108, 109, 110, 115, 119, 121, 123, 130, 131, 133, 137, 141, 142, 144, 150, 151, 153, 154, 155, 156, 157, 158, 160, 165, 168, 171, 174, 178, 182, 183, 184, 186, 212, 213, 236, 237, 238, 239, 240, 242], "90709145": 170, "9091": 112, "9120": 127, "9163": 127, "9486833": 17, "949e": [187, 188], "9526": 50, "9545": 100, "96366276": 167, "9640": 106, "96402758": 216, "978": 34, "99": 158, "9957": 127, "99734545": 170, "999": [0, 153, 154, 155, 156, 157], "A": [1, 3, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 23, 27, 28, 29, 30, 31, 36, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 65, 67, 68, 69, 73, 74, 76, 77, 89, 112, 113, 114, 115, 116, 123, 124, 127, 129, 130, 131, 132, 133, 134, 135, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 165, 167, 168, 169, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 242], "As": 170, "Be": 0, "By": [0, 2, 3, 7, 37, 90, 147, 157, 163, 167, 168, 169, 171, 236, 246], "For": [2, 3, 4, 7, 9, 10, 11, 13, 14, 15, 16, 18, 42, 44, 45, 47, 48, 49, 50, 52, 65, 67, 89, 93, 94, 97, 98, 103, 108, 109, 110, 119, 121, 129, 130, 131, 132, 133, 134, 147, 149, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 203, 204, 205, 206, 207, 210, 212, 214, 217, 218, 219, 226, 228, 230, 232, 233, 246], "If": [0, 1, 2, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 36, 38, 39, 40, 41, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 62, 65, 67, 74, 76, 79, 80, 89, 90, 93, 94, 108, 109, 110, 119, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 148, 153, 154, 158, 159, 167, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 240, 241, 243, 244], "In": [3, 7, 16, 53, 54, 55, 124, 127, 162, 163, 164, 235, 246], "It": [1, 2, 3, 7, 16, 17, 18, 20, 23, 24, 25, 26, 27, 34, 36, 38, 39, 40, 41, 42, 62, 65, 89, 90, 100, 102, 106, 119, 120, 123, 124, 125, 126, 127, 137, 138, 139, 147, 148, 149, 150, 156, 158, 159, 160, 163, 170, 174, 175, 176, 179, 180, 181, 183, 184, 205, 207, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236], "Its": [18, 172], "Near": 16, "No": 57, "Not": 120, "One": [24, 246], "The": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246], "There": 229, "These": [4, 7, 8, 11, 14, 17, 19, 34, 112, 113, 114, 115, 116, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 159, 165, 172, 246], "To": [3, 34, 149, 169, 172, 187, 188, 225, 246], "With": [3, 57, 236, 246], "_": [14, 38, 39, 41, 42, 44, 45, 47, 48, 49, 50, 52, 67, 89, 130, 131, 132, 133, 134, 140, 141, 142, 143, 144, 145, 150, 151, 153, 154, 155, 156, 158, 160, 176, 177, 178, 182, 217, 218, 237, 238, 239, 241, 242, 243], "_1": [11, 38, 39, 40, 41, 42, 65, 119, 182, 221, 223, 234], "_2": [11, 38, 39, 40, 41, 42, 65, 119, 182, 221, 223, 234], "__call__": [1, 36], "__getitem__": [0, 2, 3, 5], "__init__": [0, 1, 2, 3, 7, 20, 23, 27, 32, 35, 36, 37, 38, 39, 40, 41, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 119, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 173, 235, 236], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5], "__repr__": 148, "__setattr__": 36, "_activ": 51, "_arraylik": [165, 186, 188, 191, 193], "_arraylikeint": 226, "_arrayorscalar": [35, 37, 165, 173, 220], "_base_dtyp": [185, 187, 190, 192], "_c": 238, "_decai": 156, "_fanmod": [93, 94], "_grad_en": [162, 164], "_i": [11, 15, 51, 65, 105, 126, 129, 135, 140, 143, 176, 177, 179, 180, 182, 183, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 223, 228, 230, 233, 234], "_in": [93, 94, 97, 98], "_j": [51, 105, 140, 143, 182, 206, 214, 218, 219], "_k": 231, "_left": 89, "_make_lay": 27, "_modul": 36, "_n": [11, 38, 39, 40, 41, 42, 221, 223, 234], "_numpyarrai": 165, "_out": [93, 94, 97, 98, 228, 232], "_p": 15, "_pad": 226, "_paddingstr": [108, 109, 110], "_paramet": 36, "_reductiontyp": [68, 69, 70, 72, 73, 123, 124, 125, 126, 127], "_right": 89, "_scalar": [91, 95, 96, 97, 98, 165, 185, 199], "_shapelik": [77, 135, 165, 168, 190, 192, 229, 230, 233], "_size": [78, 79, 80], "_slope": 101, "_statedict": 148, "_t": [157, 158], "_tensor": [35, 37, 186, 220], "_tensorop": 173, "_u": 16, "_v": 16, "_valu": [199, 226], "_width": 226, "a_i": [179, 180, 183], "ab": 194, "abc": [2, 148], "abil": [7, 246], "about": 7, "abov": [7, 162, 164, 170, 186, 189], "absolut": [14, 15, 70, 155, 195], "abstract": [2, 3, 147, 148, 149, 150, 158, 160], "abstractmethod": 148, "acceler": [34, 103, 129, 130, 131, 150, 156, 158, 160], "accept": [120, 167, 173], "access": [0, 2, 3, 4, 5, 35, 37, 38, 39, 40, 41, 42, 229], "accord": [89, 108, 109, 110, 119, 121, 124, 127, 151, 152, 153, 154, 155, 156, 157, 218], "accordingli": 10, "account": [14, 16, 17], "accumul": [150, 151, 152, 174, 175, 179, 180, 181, 184], "accuraci": 34, "achiev": [34, 53, 54, 55, 78, 137, 138, 139, 156, 241, 243], "across": [0, 35, 39, 42, 77, 78, 79, 80, 97, 98, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 165, 167, 168, 169, 170, 171, 172, 187, 188, 206, 219], "act": 154, "activ": [7, 20, 27, 32, 34, 38, 42, 44, 45, 47, 48, 49, 50, 51, 52, 58, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 112, 113, 114, 115, 116, 123, 124, 127, 129, 130, 131, 135, 205, 207], "actual": [37, 123, 124, 126, 127, 173, 239], "ad": [36, 38, 39, 40, 41, 42, 53, 54, 55, 65, 67, 68, 69, 74, 76, 77, 81, 82, 83, 85, 86, 87, 108, 109, 110, 123, 124, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 144, 145, 151, 152, 153, 154, 155, 156, 157, 158, 233, 246], "adadelta": 161, "adagrad": [151, 161], "adam": [154, 155, 156, 157, 161], "adamax": 161, "adamw": 161, "adapt": [20, 23, 27, 32, 78, 79, 80, 137, 138, 139, 151, 152, 153, 156, 157, 158, 159], "adaptive_avg_pool1d": [64, 84, 137], "adaptive_avg_pool2d": [64, 84, 138], "adaptive_avg_pool3d": [64, 84, 139], "adaptiveavgpool1d": [118, 146], "adaptiveavgpool2d": [20, 27, 32, 118, 146], "adaptiveavgpool3d": [118, 146], "add": [4, 36, 38, 39, 42, 65, 67, 108, 109, 110, 119, 121, 135, 148, 150, 153, 158, 160, 163, 194, 226, 233], "add_modul": [36, 42], "add_param_group": 148, "addit": [4, 7, 14, 21, 28, 29, 30, 31, 33, 36, 39, 42, 65, 67, 74, 76, 119, 121, 129, 130, 131, 132, 133, 134, 150, 156, 163, 172, 174, 231], "addition": 156, "address": [124, 127, 153, 154, 157], "adjust": [78, 79, 80, 112, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 149, 153, 157, 158, 159, 223, 234], "advanc": [3, 16, 34, 39, 42, 53, 54, 55, 78, 79, 80, 137, 138, 139, 147, 150], "advantag": 164, "affect": [162, 227, 230, 235], "affin": [129, 130, 131, 132, 133, 134, 135, 242], "after": [14, 20, 32, 37, 38, 39, 40, 41, 42, 62, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 112, 113, 114, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 135, 140, 141, 142, 143, 144, 145, 154, 164, 173, 174, 175, 179, 180, 181, 183, 184, 226, 236], "afterward": 164, "aggreg": [182, 228, 232], "aim": [4, 7], "al": 34, "alex": 34, "alexnet": [22, 32, 34], "algebra": [7, 8, 189], "algorithm": [7, 14, 16, 17, 148, 149, 172], "align": [18, 89, 177, 178], "align_corn": 89, "all": [0, 3, 4, 7, 17, 36, 38, 39, 40, 41, 42, 54, 55, 78, 79, 80, 82, 83, 86, 87, 89, 101, 102, 110, 137, 138, 139, 141, 142, 145, 147, 148, 149, 150, 153, 158, 159, 160, 183, 205, 206, 207, 214, 217, 219, 221, 222, 223, 228, 230, 231, 232, 234, 237, 238, 246], "allevi": 44, "alloc": [187, 188], "allow": [0, 1, 3, 4, 7, 16, 17, 23, 37, 38, 39, 40, 41, 42, 44, 47, 48, 51, 55, 57, 90, 99, 100, 101, 103, 104, 105, 106, 108, 109, 110, 147, 151, 152, 163, 185, 190, 192, 193, 218, 220, 225, 235, 236, 246], "along": [51, 89, 105, 177, 178, 182, 205, 206, 207, 214, 217, 219, 221, 223, 225, 228, 231, 232, 233, 234, 241, 243], "alongsid": 35, "alpha": [44, 47, 49, 58, 99, 103, 112, 150, 158], "alpha_dropout": [63, 64, 112], "alphadropout": [117, 118], "alphadropoutmodel": 112, "also": [44, 45, 47, 48, 49, 50, 52, 65, 67, 89, 156, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 188, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 215, 216, 221, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234], "alter": [42, 229], "altern": [1, 100, 151, 178], "alwai": [37, 227, 240, 241, 243], "amount": [53, 54, 55, 81, 82, 83, 85, 86, 87, 156], "amsgrad": [153, 154], "an": [0, 1, 3, 7, 11, 13, 14, 16, 17, 19, 21, 23, 24, 25, 26, 32, 33, 36, 38, 39, 40, 41, 42, 45, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 79, 80, 89, 90, 97, 98, 99, 104, 108, 109, 110, 112, 113, 114, 115, 116, 119, 121, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 153, 156, 158, 164, 165, 173, 178, 186, 189, 199, 206, 214, 219, 221, 228, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246], "analog": [228, 232], "analysi": [4, 108, 109, 110, 134, 140, 142, 143, 145], "andrew": 34, "angl": [90, 242], "ani": [0, 1, 2, 3, 14, 16, 21, 33, 35, 36, 37, 38, 40, 41, 44, 45, 47, 48, 49, 50, 52, 58, 59, 65, 67, 74, 76, 104, 135, 147, 148, 162, 164, 170, 173, 185, 186, 187, 189, 190, 191, 192, 193, 205, 207, 218, 220, 221, 222, 223, 226, 228, 231, 232, 233, 234, 235, 246], "anoth": [41, 184, 191, 193, 236, 246], "api": [4, 137, 138, 139, 246], "appear": 148, "append": [39, 41, 42], "appli": [2, 4, 5, 7, 14, 20, 32, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 112, 113, 114, 115, 116, 119, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 151, 152, 154, 155, 156, 157, 178, 226, 228, 235, 238, 240, 241, 242, 243, 244, 246], "applic": [4, 16, 53, 76, 108, 109, 110, 119, 121, 172, 185, 192, 226, 244], "approach": [3, 42, 154], "appropri": [16, 36, 40, 42, 108, 109, 110, 112, 113, 114, 124, 141, 142, 162, 164], "approx": 49, "approxim": [16, 45, 100, 141, 144], "ar": [1, 2, 3, 4, 7, 10, 11, 13, 14, 16, 17, 18, 19, 34, 35, 36, 37, 38, 39, 40, 41, 42, 51, 53, 54, 55, 57, 65, 67, 79, 80, 89, 93, 94, 96, 97, 98, 105, 108, 109, 110, 112, 113, 114, 115, 116, 119, 121, 124, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 150, 153, 154, 156, 157, 158, 159, 160, 162, 164, 165, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 195, 199, 203, 205, 206, 207, 208, 209, 214, 217, 218, 221, 225, 228, 229, 232, 235, 236, 237, 239, 240, 244, 246], "arang": 194, "arbitrari": [39, 120, 187, 188, 199, 204, 206, 210, 212, 214, 218, 219], "arcco": 194, "architectur": [21, 23, 27, 28, 29, 30, 31, 33, 34, 38, 39, 40, 41, 42, 45, 102, 119, 120, 147], "arcsin": 194, "arctan": 194, "area": 89, "arg": [36, 120, 187], "argument": [3, 4, 21, 23, 28, 29, 30, 31, 33, 36, 42, 120, 167, 187, 218], "around": [11, 90, 106], "arr": [165, 221, 223, 231, 234], "arrai": [7, 35, 37, 163, 165, 173, 178, 186, 191, 193, 220, 227, 228, 236, 246], "art": 34, "arxiv": 34, "asarrai": 165, "asgd": 161, "aspect": 244, "assign": [36, 38, 40, 42, 89, 124, 127], "associ": [40, 41], "assum": [0, 1, 148, 149, 162], "attempt": [38, 42], "attent": [41, 65], "attribut": 36, "audio": 108, "augment": [3, 4, 90, 172, 228, 232, 235, 239, 240, 241, 242, 243, 246], "autodiff": 7, "autograd": 147, "automat": [4, 7, 37, 38, 39, 40, 41, 147, 167, 168, 169, 171, 173, 187, 188, 193, 225, 236], "auxiliari": 35, "avail": [4, 5, 7], "averag": [20, 24, 25, 26, 27, 32, 35, 78, 79, 80, 81, 82, 83, 89, 126, 137, 138, 139, 140, 141, 142, 150, 151, 153, 158, 206], "avg_pool": [140, 141, 142], "avg_pool1d": [64, 84], "avg_pool2d": [64, 84], "avg_pool3d": [64, 84], "avgpool": [20, 27, 32], "avgpool1d": [118, 146], "avgpool1dmodel": 140, "avgpool2d": [118, 146], "avgpool2dmodel": 141, "avgpool3d": [118, 146], "avgpool3dmodel": 142, "avoid": [2, 3, 16, 40, 164], "ax": [8, 163, 205, 206, 207, 214, 218, 219, 228, 230, 232], "axi": [51, 105, 177, 178, 205, 206, 207, 214, 219, 221, 223, 225, 226, 228, 230, 231, 232, 233, 234, 241, 243], "b": [8, 18, 65, 67, 96, 108, 109, 110, 119, 121, 163, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 221, 223, 231, 234, 240], "b_i": [179, 180, 183], "back": [89, 141, 142, 177, 182, 228, 232], "backpropag": [7, 10, 11, 13, 14, 16, 17, 19, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 65, 67, 89, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 144, 145, 147, 164, 169, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 203, 205, 207, 220, 226, 228, 232, 236], "backward": [7, 35, 37, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 173, 236], "balanc": 125, "bar": 150, "base": [3, 8, 13, 14, 17, 18, 23, 27, 34, 36, 38, 39, 40, 41, 57, 65, 78, 79, 80, 112, 124, 125, 137, 138, 139, 147, 148, 149, 150, 154, 158, 159, 160, 174, 175, 179, 180, 181, 183, 184, 193, 203, 204, 205, 207, 218, 225, 226, 239, 240, 241, 242, 243], "basic": [7, 20, 32, 53, 54, 55, 78, 79, 80, 93, 94, 97, 98, 137, 138, 139, 237, 238, 239, 240, 241, 242, 243, 244], "batch": [1, 2, 3, 8, 14, 17, 19, 53, 54, 55, 57, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 108, 109, 110, 119, 121, 123, 124, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 157, 178, 237, 238, 239, 240, 242, 244], "batch_norm": [64, 75, 129, 130, 131], "batch_norm1": 42, "batch_norm2": 42, "batch_siz": [1, 2, 3], "batchnorm1d": [118, 136], "batchnorm1dmodel": 129, "batchnorm2d": [42, 118, 136], "batchnorm2dmodel": 130, "batchnorm3d": [118, 136], "batchnorm3dmodel": 131, "bceloss": [118, 128], "becaus": [2, 168], "becom": [15, 36, 151, 159], "befor": [14, 37, 150, 156, 164, 170, 226, 238, 246], "begin": [1, 15, 44, 47, 48, 49, 99, 101, 102, 103, 125, 126, 127, 140, 141, 142, 143, 144, 145, 157, 159, 163, 172, 179, 180, 182, 195, 199, 205, 207, 209, 226], "behav": [125, 217], "behavior": [34, 39, 42, 162, 172, 178, 188, 246], "being": [41, 90, 112, 113, 114, 115, 116, 157, 162, 164, 221, 223, 234], "belong": 0, "below": [17, 23, 24, 25, 26, 178, 186, 189], "benchmark": 5, "benefici": 42, "benefit": [44, 147, 156, 165], "bernoulli": [112, 113, 114, 115, 116], "best": [93, 94, 97, 98], "beta": [129, 130, 131, 132, 133, 134, 135, 153, 154, 155, 156, 157], "beta1": [153, 154, 155, 156, 157], "beta2": [153, 154, 155, 156, 157], "beta_1": [153, 154, 155, 156, 157], "beta_2": [153, 154, 155, 156, 157], "better": [13, 32, 34, 45, 93, 94, 97, 98, 132, 133, 134, 147, 154, 156, 158, 238], "between": [36, 53, 54, 55, 57, 65, 70, 108, 109, 110, 112, 113, 114, 115, 116, 119, 123, 124, 125, 126, 127, 150, 158, 159, 160, 172, 174, 175, 178, 181, 184, 185, 219, 240, 241, 243, 244], "beyond": [7, 39], "bia": [53, 54, 55, 65, 67, 74, 76, 77, 108, 109, 110, 119, 121, 129, 130, 131, 132, 133, 134, 135, 153, 154, 155, 156, 157], "bias": [108, 109, 110, 121, 135, 147], "bias1": 40, "bias2": 40, "bilinear": [64, 66, 89, 118, 122], "bilinearmodel": 119, "binari": [50, 68, 104, 112, 113, 114, 115, 116, 123], "binary_cross_entropi": [64, 71], "block": [36, 57, 108, 109, 110, 164], "block1": 147, "block2": 147, "blue": 240, "bmatrix": 182, "bool": [1, 5, 19, 36, 37, 58, 59, 60, 61, 62, 74, 76, 89, 108, 109, 110, 119, 121, 129, 130, 131, 132, 133, 134, 135, 153, 154, 158, 162, 167, 168, 169, 171, 173, 185, 186, 187, 188, 189, 190, 191, 192, 193, 205, 206, 207, 214, 219, 220, 236], "both": [53, 67, 79, 81, 85, 100, 108, 109, 138, 140, 141, 143, 144, 176, 177, 178, 182, 186, 225, 244], "bottom": 89, "bound": [94, 96, 98, 159, 171], "box": 4, "break": 147, "brief": 246, "bright": 246, "broadcast": [115, 116, 206, 214, 219, 229, 233], "buffer": [150, 156, 158, 160], "build": [7, 36, 39, 42, 147, 246], "built": [3, 7, 42, 147], "burg": 5, "c": [5, 57, 60, 61, 62, 69, 73, 74, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 115, 116, 124, 127, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 163, 223, 234, 238], "c_": [108, 109, 110], "c_in": [53, 54, 55], "c_out": [53, 54, 55], "calcul": [0, 1, 7, 8, 37, 151, 152, 155, 156, 157, 164, 168, 173], "calculu": [9, 16], "call": [1, 36, 162, 174, 175, 178, 179, 180, 181, 183, 184], "callabl": [148, 235], "can": [0, 2, 3, 4, 7, 9, 11, 13, 14, 16, 17, 19, 35, 37, 38, 39, 40, 41, 42, 47, 53, 54, 55, 90, 100, 101, 106, 108, 109, 110, 132, 133, 134, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 163, 164, 165, 171, 172, 173, 178, 187, 188, 189, 190, 192, 193, 206, 214, 219, 223, 225, 226, 228, 229, 232, 233, 234, 235, 236, 239, 241, 242, 243, 246], "cannot": [10, 11, 13, 14, 17, 18, 19], "capabl": [7, 185, 186, 189, 190, 191, 192, 193], "captur": [57, 108, 109, 110, 119], "care": 164, "cartesian": 225, "case": [3, 15, 23, 44, 47, 48, 49, 99, 101, 102, 103, 125, 126, 127, 140, 141, 142, 143, 144, 145, 147, 152, 157, 159, 163, 179, 180, 195, 199, 205, 207, 209, 226, 246], "caus": [3, 16, 150, 158, 160], "cautiou": 0, "cdot": [9, 10, 13, 14, 15, 18, 44, 45, 47, 49, 50, 53, 54, 55, 65, 67, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 97, 98, 100, 104, 112, 119, 121, 123, 124, 125, 127, 129, 130, 131, 132, 133, 134, 135, 151, 152, 153, 154, 155, 156, 157, 159, 176, 177, 178, 181, 183], "center": [90, 106, 158, 237, 246], "centercrop": [245, 246], "central": 165, "certain": [10, 45, 65, 119, 153, 154, 162, 205, 207], "chain": [13, 14, 42, 235, 246], "challeng": 34, "cham": 34, "chanc": [240, 241, 243], "chang": [70, 125, 159, 163, 164, 227, 229, 233, 240, 246], "channel": [23, 24, 25, 26, 27, 53, 54, 55, 57, 60, 61, 62, 74, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 108, 109, 110, 115, 116, 129, 130, 131, 132, 133, 134, 137, 140, 141, 142, 143, 144, 145, 238, 240, 244], "check": [162, 237, 239], "checkpoint": 149, "choic": 225, "choleski": 12, "chosen": 112, "christoph": 5, "clariti": 165, "class": [3, 4, 7, 21, 24, 25, 26, 28, 29, 30, 31, 33, 51, 69, 73, 147, 149, 186, 189, 220, 246], "classic": 26, "classif": [4, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 50, 51, 68, 69, 73, 104, 105, 123, 124, 127], "classifi": [20, 23, 24, 25, 26, 27, 32], "cleaner": [1, 164, 178], "clear": [37, 173, 187, 188], "clearli": 165, "clf_in_featur": 23, "clf_layer": 23, "clip": [90, 159, 194], "clockwis": 90, "close": [13, 16, 103, 123, 158], "closer": 99, "closur": [148, 149], "cnn": 34, "co": [194, 210], "code": [14, 38, 40, 42, 162, 164, 165, 172], "coeffici": [18, 89, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160], "col": 57, "collect": [4, 8, 34, 38, 39, 41, 42, 149], "color": [240, 246], "colorjitt": 246, "column": [10, 11, 13, 17, 18, 19, 57, 189, 223, 225], "com": 5, "combin": [1, 3, 34, 39, 42, 44, 45, 100, 124, 147, 156, 157, 206, 214, 219, 221, 246], "combined_dataset": [0, 1], "common": [57, 90, 149, 246], "commonli": [7, 45, 50, 51, 52, 53, 55, 65, 72, 74, 76, 90, 97, 98, 105, 110, 123, 126, 127, 140, 141, 142, 143, 144, 145, 163, 165, 190, 230, 236, 237, 238, 239, 241, 242, 243, 246], "compar": [32, 172, 231], "compat": [4, 8, 120, 135, 147, 163, 172, 236, 246], "complex": [2, 3, 7, 11, 38, 39, 42, 48, 102, 143, 145, 147, 149, 246], "compon": [16, 36, 39, 149, 173, 246], "compos": [5, 108, 109, 110, 140, 141, 142, 143, 144, 145, 147, 246], "comprehens": 3, "comput": [7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 34, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 57, 65, 67, 68, 69, 70, 72, 73, 74, 76, 78, 79, 80, 89, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 158, 162, 163, 164, 165, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 225, 226, 228, 232, 236, 246], "computation": [3, 16], "compute_loss": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "concaten": [0, 53, 54, 55, 223, 224, 231, 234], "concept": [7, 16, 34], "condit": [9, 10, 13], "confer": 34, "config": 27, "configur": [21, 23, 24, 25, 26, 27, 33, 41], "conjunct": [57, 127], "connect": [20, 23, 24, 25, 26, 27, 32, 34, 67, 108, 109, 110, 121], "consecut": 27, "consid": [3, 13, 16, 42, 93, 94, 97, 98, 147, 159, 162, 187, 188, 246], "consider": 16, "consist": [2, 4, 20, 24, 25, 26, 35, 78, 79, 80, 137, 138, 139, 165, 170, 172, 226, 237, 244, 246], "consistent_tensor": 172, "constant": [68, 69, 74, 76, 77, 92, 103, 123, 124, 129, 130, 131, 132, 133, 134, 135, 151, 152, 153, 154, 155, 156, 157, 158, 165, 226], "constant_pad": 226, "constraint": 1, "construct": [7, 28, 29, 30, 31, 39, 147, 186, 228, 232], "constructor": [28, 29, 30, 31], "contain": [1, 5, 10, 11, 16, 17, 18, 19, 23, 27, 36, 38, 39, 40, 41, 42, 51, 57, 65, 67, 68, 69, 73, 89, 123, 124, 127, 148, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 188, 195, 196, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 222, 225], "content": 90, "context": [162, 164], "contextmanag": 164, "contigu": 227, "continu": [101, 169], "contrast": [132, 133, 134, 246], "contribut": [89, 112, 113, 114, 115, 116, 140, 143, 144, 145, 150, 156, 217], "control": [99, 125, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 172, 236, 246], "conv": [130, 131], "conv1": [24, 25, 26, 42, 108, 109, 110, 140, 141, 142, 143, 144, 145], "conv1d": [56, 64, 111, 118, 140, 143], "conv1dmodel": 108, "conv2": [24, 25, 26, 42, 108, 109, 110], "conv2d": [39, 42, 56, 64, 111, 118, 130, 141, 144, 147], "conv2dmodel": 109, "conv3d": [56, 64, 111, 118, 131, 142, 145], "conv3dmodel": 110, "conv_config": 27, "conv_lay": [23, 39], "convblock": 147, "conveni": [4, 21, 33], "convent": 178, "converg": [16, 106, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 238], "convers": [124, 127, 240, 246], "convert": [5, 27, 35, 37, 51, 105, 173, 225, 235, 236, 240, 246], "convnetwork": 39, "convolut": [20, 21, 23, 24, 25, 26, 27, 32, 33, 34, 39, 53, 54, 55, 57, 108, 109, 110, 141, 142, 144, 145, 226], "convolv": [53, 54, 55, 108, 109, 110], "coordin": 225, "core": [0, 1, 2, 3, 36, 147, 148, 173, 246], "corinna": 5, "corner": [89, 237, 239], "correct": [38, 124, 127, 153, 154, 155, 156, 157, 236], "correctli": [16, 36, 38, 39, 40, 41, 42, 124, 127, 172], "correspond": [0, 1, 2, 5, 11, 38, 40, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 65, 67, 89, 102, 105, 119, 121, 129, 130, 131, 132, 133, 134, 141, 142, 150, 158, 160, 176, 177, 179, 180, 183, 203, 204, 210, 212, 223, 226, 228, 232, 234], "cort": 5, "cosh": [194, 211, 216], "cosin": [196, 200, 201, 210], "could": 36, "count": [34, 221], "counterclockwis": [90, 242], "cover": [8, 53, 54, 55], "coverag": [78, 79, 80], "creat": [2, 3, 7, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 39, 42, 147, 163, 172, 185, 189, 190, 191, 192, 193, 225, 231, 235, 246], "creation": [39, 42, 246], "criterion": [123, 124, 125, 126, 127], "critic": [16, 149, 172], "crop": [237, 239, 246], "cross": [68, 69, 123, 124], "cross_entropi": [64, 71], "crossentropyloss": [118, 128], "cube": 194, "cumul": [45, 100], "current": [36, 150, 153, 159, 162], "custom": [4, 7, 20, 21, 23, 27, 32, 33, 35, 38, 39, 40, 41, 42, 90, 99, 101, 147, 172, 189], "custom_config": 27, "custom_lenet": 23, "customiz": 246, "custommodul": 35, "customnetwork": 38, "customparametermodel": [40, 41], "d": [34, 55, 62, 80, 83, 87, 131, 134, 135, 139, 142, 145, 163, 186, 242], "d_": [55, 80, 83, 87, 110, 139, 142, 145], "d_1": 135, "d_2": 135, "d_n": 135, "d_out": [55, 83, 87], "dampen": [150, 158, 160], "data": [4, 5, 7, 14, 35, 37, 41, 52, 53, 55, 57, 61, 62, 67, 90, 102, 106, 108, 109, 110, 121, 134, 140, 142, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 165, 172, 173, 174, 175, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 220, 226, 227, 228, 229, 230, 232, 235, 236, 239, 240, 241, 242, 243, 246], "databas": 5, "dataload": [2, 3], "dataset": [3, 24, 25, 26, 90, 152, 164, 235, 237, 246], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 182, "debug": [42, 162, 170, 246], "decai": [150, 151, 152, 153, 154, 155, 156, 157, 158, 160], "decompos": [9, 17, 19], "decomposit": [8, 9, 13, 16, 17, 19], "decoupl": [151, 152, 154, 155, 156, 157], "decreas": [153, 154, 159], "deep": [1, 3, 4, 7, 34, 74, 100, 103, 147, 172, 235, 236, 246], "deeper": [7, 103], "def": [0, 1, 2, 3, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 119, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 165, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236], "default": [1, 5, 15, 19, 20, 21, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 44, 47, 51, 53, 54, 55, 58, 59, 60, 61, 62, 68, 69, 70, 72, 73, 74, 76, 77, 81, 82, 83, 85, 86, 87, 89, 90, 93, 94, 95, 96, 97, 98, 99, 101, 105, 108, 109, 110, 112, 113, 114, 115, 116, 119, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 144, 145, 148, 149, 156, 162, 167, 168, 169, 171, 173, 185, 186, 187, 188, 189, 190, 191, 192, 193, 205, 206, 207, 214, 218, 219, 220, 221, 223, 225, 226, 228, 231, 234, 236, 240, 241, 243], "defin": [1, 3, 4, 7, 23, 27, 38, 39, 40, 41, 42, 100, 123, 124, 125, 126, 127, 140, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 165, 168, 169, 183, 188, 199, 218, 235, 246], "definit": [7, 9, 246], "degre": [90, 242, 246], "delai": 150, "delta": [51, 70, 105, 125, 151], "delta_": [51, 105], "demonstr": [7, 8, 34, 147, 165], "denomin": [74, 76, 77, 129, 130, 131, 132, 133, 134, 135, 151, 152, 153, 154, 155, 156, 157, 158, 175], "denot": [14, 104, 108, 109, 110, 112, 113, 114, 115, 116, 218], "dens": [7, 152], "dense1": 7, "dense2": 7, "densiti": [45, 100], "depend": [7, 14, 15, 41, 68, 69, 70, 72, 73, 89, 108, 176, 186, 205, 207, 228, 232, 239, 240, 244], "depth": [39, 55, 62, 80, 83, 87, 110, 131, 134, 139, 142, 145], "depthwis": [53, 54, 55], "deriv": [16, 17, 51, 78, 79, 80, 100, 105, 106, 108, 109, 110, 119, 121], "descend": 19, "descent": [7, 150, 160], "describ": [10, 11], "descript": 246, "deseri": 35, "design": [3, 4, 7, 8, 20, 21, 24, 25, 26, 33, 34, 37, 39, 40, 41, 42, 44, 49, 103, 112, 147, 165, 246], "desir": [35, 78, 79, 80, 137, 138, 139, 218, 220], "destin": 36, "det": [8, 12], "det_a": 10, "detail": [7, 149, 172, 178], "determin": [0, 7, 8, 9, 10, 23, 78, 79, 80, 93, 94, 97, 98, 108, 109, 110, 137, 138, 139, 141, 142, 144, 145, 158, 162, 167, 168, 169, 171, 187, 188, 237, 239], "determinist": 90, "develop": [7, 147, 172, 246], "deviat": [93, 95, 97, 235, 238, 246], "diag": [16, 194], "diagon": [16, 17, 19, 186, 189, 217], "diagonaliz": 11, "dict": [21, 23, 33, 36, 38, 40, 120, 148], "dictionari": [23, 36, 37, 38, 40, 42, 148], "differ": [0, 14, 23, 39, 42, 51, 65, 89, 105, 119, 126, 149, 163, 170, 172, 184, 193, 219, 230, 246], "differenti": [7, 9, 18, 100, 147, 167, 168, 169, 171, 173, 185, 187, 188, 190, 192], "digit": [5, 26, 34], "dilat": [53, 54, 55, 108, 109, 110], "dilation_height": 57, "dilation_width": 57, "dim": [124, 127], "dimens": [10, 11, 13, 14, 17, 18, 19, 20, 27, 32, 37, 51, 65, 67, 74, 76, 77, 79, 80, 89, 105, 108, 109, 110, 129, 130, 131, 132, 133, 134, 135, 138, 139, 141, 142, 143, 144, 145, 163, 165, 167, 171, 173, 177, 187, 205, 206, 207, 214, 217, 218, 219, 221, 223, 226, 228, 230, 231, 232, 233, 234, 237, 239, 244], "dimension": [14, 16, 17, 19, 53, 54, 55, 81, 82, 83, 85, 86, 87, 108, 109, 110, 114, 115, 116, 129, 130, 131, 132, 133, 134, 140, 141, 142, 143, 144, 145, 163, 177, 178, 182, 186, 203, 206, 214, 217, 219, 222, 227, 228, 230, 232], "diminish": 152, "direct": [11, 123, 124, 125, 126, 127, 150, 158, 159, 160], "directli": [38, 39, 40, 41, 89, 151, 152, 154, 155, 156, 157, 170, 172, 220, 246], "directori": [3, 4, 5], "disabl": [162, 164], "discontinu": 209, "discrep": [123, 124, 127], "discret": [168, 172], "disk": 3, "displai": [21, 33], "distribut": [45, 51, 89, 93, 94, 95, 96, 97, 98, 100, 105, 108, 109, 110, 112, 113, 114, 115, 116, 119, 121, 124, 127, 140, 141, 142, 167, 168, 169, 171, 172, 206, 214, 217, 219, 231, 238, 240, 241, 242, 243], "div": 194, "divers": [90, 241, 243, 246], "diversifi": 246, "divid": [1, 16, 39, 42, 51, 53, 54, 55, 105, 123, 124, 125, 126, 127, 175, 238], "divis": [7, 16, 53, 54, 55, 112, 113, 114, 115, 116, 151, 152, 153, 154, 155, 156, 157, 158, 175], "do": [16, 18, 35, 38, 39, 40, 41, 58, 59, 60, 61, 147, 157, 162, 193, 217, 226], "document": [4, 7, 34, 149, 165, 172], "doe": [7, 14, 15, 16, 17, 19, 35, 38, 39, 40, 41, 42, 98, 153, 154, 159, 162, 164, 167, 168, 169, 170, 171, 185, 186, 187, 188, 189, 190, 191, 192, 193, 229], "doesn": 164, "doi": 34, "domain": 4, "don": 164, "dot": [11, 14, 38, 39, 40, 41, 42, 135, 143, 144, 145, 177, 182, 194, 221, 223, 231, 234], "down": [3, 147, 244], "download": [4, 5], "drawback": 44, "drawn": [167, 168, 169, 171, 172, 242], "drop": [112, 113, 114, 115, 116], "dropout": [20, 27, 32, 34, 45, 58, 60, 61, 62, 112, 114, 115, 116], "dropout1d": [63, 64, 117, 118], "dropout1dmodel": 114, "dropout2d": [63, 64, 117, 118], "dropout3d": [63, 64, 117, 118], "dropoutmodel": 113, "dtype": [35, 37, 173, 185, 186, 187, 188, 189, 190, 191, 192, 193, 220, 236], "due": [14, 16, 53, 54, 102, 242], "duplic": [38, 40], "dure": [3, 7, 10, 11, 13, 16, 17, 19, 35, 36, 37, 38, 39, 40, 41, 42, 51, 58, 59, 60, 61, 62, 74, 76, 90, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 162, 164, 173, 174, 205, 206, 207, 214, 219, 236, 239, 242, 246], "dy": [47, 101], "dynam": [0, 2, 3, 36, 39, 40, 41, 42, 78, 79, 80, 135, 137, 138, 139, 152, 157, 162], "dynamicnetwork": 39, "e": [0, 10, 11, 13, 14, 17, 19, 23, 24, 25, 26, 27, 35, 51, 104, 105, 112, 124, 148, 151, 158, 159, 189, 201, 203, 204, 211, 216, 217, 221, 240], "each": [1, 2, 3, 4, 11, 14, 16, 17, 19, 20, 23, 27, 32, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 65, 67, 74, 76, 78, 79, 80, 102, 105, 108, 109, 110, 112, 113, 114, 115, 116, 119, 121, 123, 124, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 223, 225, 226, 228, 231, 232, 234, 235, 236, 237, 238, 239, 240, 242, 244, 246], "earli": 157, "eas": [4, 7], "easi": [2, 3, 4, 7, 37, 38, 40], "easier": [3, 38, 39, 42], "easili": [4, 37, 41, 246], "eccv": 34, "economi": 19, "edg": 226, "educ": [7, 34], "effect": [38, 39, 40, 41, 42, 51, 53, 54, 55, 57, 99, 100, 102, 104, 105, 106, 129, 130, 131, 132, 133, 134, 135, 162, 163, 164, 223, 234], "effici": [1, 2, 3, 5, 7, 8, 13, 18, 57, 124, 147, 164], "eig": 12, "eigenvalu": [11, 17], "eigenvector": 11, "eigval": 11, "eigvec": 11, "either": [67, 165, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 220, 225], "element": [0, 16, 17, 37, 41, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 102, 105, 108, 109, 110, 112, 113, 114, 115, 116, 123, 124, 125, 126, 127, 135, 140, 141, 142, 143, 144, 145, 163, 173, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 222, 225, 226, 228, 229, 230, 232], "elementwise_affin": 135, "elsewher": [143, 144, 145, 189], "elu": [46, 64, 107, 118], "elumodel": 99, "empti": [36, 42, 194], "empty_lik": 194, "enabl": [0, 1, 2, 3, 7, 14, 19, 36, 37, 38, 39, 40, 41, 102, 108, 109, 110, 119, 121, 147, 149, 162, 164, 167, 168, 169, 171, 173, 235], "encapsul": [147, 173], "encod": [124, 127], "encourag": [113, 114, 115, 116, 123, 124, 127, 153], "end": [15, 44, 47, 48, 49, 99, 101, 102, 103, 125, 126, 127, 140, 141, 142, 143, 144, 145, 157, 159, 179, 180, 182, 185, 195, 199, 205, 207, 209, 221, 226, 246], "enforc": [36, 38, 40], "engin": 16, "enhanc": [25, 32, 33, 38, 40, 246], "ensur": [3, 5, 16, 17, 18, 35, 36, 37, 38, 39, 40, 41, 42, 51, 78, 79, 80, 101, 105, 112, 113, 114, 115, 116, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148, 150, 151, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 183, 206, 214, 219, 226, 236, 237, 238, 239, 240, 244, 246], "enter": 164, "entir": [3, 60, 61, 62, 115, 116, 172], "entri": [23, 230], "entropi": [68, 69, 123, 124], "environ": 7, "ep": [68, 69, 74, 76, 77, 123, 124, 129, 130, 131, 132, 133, 134, 135, 151, 152, 153, 154, 155, 156, 157, 158], "epoch": [1, 3], "epsilon": [123, 124, 129, 130, 131, 132, 133, 134, 135, 151, 152, 153, 154, 155, 156, 157, 158], "equal": [14, 89, 140, 141, 142, 237, 239], "equat": [11, 16, 18], "equival": [178, 217, 227], "error": [0, 3, 11, 13, 36, 39, 40, 41, 42, 45, 70, 72, 100, 123, 124, 125, 126, 147, 148, 164, 165], "especi": [3, 38, 40, 41, 104, 163, 164, 165, 170, 235, 236, 240, 246], "essenti": [1, 3, 7, 8, 14, 16, 54, 57, 147, 170, 172, 205, 235, 236, 240, 246], "estim": [126, 153, 154, 155, 156, 157, 158], "et": 34, "eta": 159, "eta_": 159, "etc": [123, 236], "euclidean": 15, "european": 34, "evalu": [36, 74, 76, 112, 113, 114, 115, 116, 129, 130, 131, 132, 133, 134, 246], "even": [151, 164, 185, 186, 189, 190, 191, 192, 193], "evenli": [78, 79, 80, 137, 138, 139, 185], "everi": [1, 246], "everywher": 209, "exact": [36, 39, 218, 240, 242], "exactli": 42, "exampl": [4, 178], "except": [0, 209, 221, 223, 234], "exclus": [168, 171, 185], "exdb": 5, "execut": [39, 164], "exist": [18, 38, 40, 42, 221], "exit": 164, "exp": [44, 49, 50, 52, 99, 103, 194], "expand": [4, 57, 228, 232], "expect": [9, 39, 42, 112, 113, 114, 115, 116, 135, 147, 165], "expens": 3, "experi": [7, 170, 172, 246], "experiment": 172, "explan": [14, 16, 20, 27, 32, 78, 79, 80, 137, 138, 139, 150], "explicit": 42, "explicitli": [38, 40], "explod": [103, 129, 130, 131], "explor": [147, 172], "expon": [14, 183], "exponenti": [44, 49, 51, 99, 103, 105, 112, 153, 154, 155, 156, 157, 203], "extend": 4, "extens": 149, "extern": [4, 7], "extract": [34, 57, 110, 140, 142, 186, 205, 207, 237, 239], "extractor": [23, 24, 25, 26], "extrem": 16, "ey": 194, "f": [1, 4, 5, 7, 40, 41, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 105], "facilit": [38, 42, 51, 105, 108, 109, 110, 147, 149, 238, 246], "factor": [44, 53, 54, 55, 57, 97, 98, 150, 157, 158, 159, 160, 165], "failur": [38, 39, 40, 41, 147], "fals": [1, 5, 19, 35, 36, 37, 58, 59, 60, 61, 62, 74, 76, 89, 91, 93, 94, 95, 96, 97, 98, 108, 109, 110, 119, 121, 153, 154, 158, 162, 167, 168, 169, 171, 173, 185, 186, 187, 188, 189, 190, 191, 192, 193, 205, 206, 207, 214, 219, 220, 236], "fan": [93, 94, 97, 98], "fan_in": [93, 94], "fan_out": [93, 94], "fast": 157, "faster": [152, 156, 164], "fc": [39, 109, 110, 140, 141, 142, 143, 144, 145], "fc1": [25, 26, 38, 42, 100, 102, 103, 104, 106, 121], "fc2": [25, 26, 38, 42, 100, 102, 103, 104, 106, 121], "fc3": 26, "featur": [3, 20, 23, 24, 25, 26, 27, 32, 33, 34, 65, 67, 74, 110, 113, 114, 115, 116, 119, 121, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 144, 145, 147, 152], "feature_extractor": 23, "fed": [3, 246], "feed": [3, 173, 246], "fergu": [32, 34], "fetch": 0, "fewer": 1, "field": [5, 34], "file": 3, "fill": [91, 95, 96, 167, 168, 169, 171, 190, 191, 192, 193], "filter": [32, 34, 53, 54, 55, 57, 109, 110], "filter_height": 57, "filter_s": 57, "filter_width": 57, "final": [38, 39, 40, 41, 42, 235, 246], "find": [18, 205, 207], "fine": 246, "finish": 164, "first": [5, 11, 23, 32, 39, 40, 65, 119, 153, 154, 155, 156, 157, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 225, 234, 235, 236, 246], "fit": 147, "fix": [39, 226], "flatten": [23, 42, 57, 182, 224, 227, 228], "flexibl": [1, 3, 4, 7, 23, 27, 38, 39, 40, 41, 42, 147, 149, 165, 190, 191, 236, 246], "flip": [241, 243, 246], "float": [2, 5, 35, 37, 44, 47, 58, 59, 60, 61, 62, 68, 69, 70, 74, 76, 77, 90, 91, 95, 96, 97, 98, 99, 101, 112, 113, 114, 115, 116, 123, 124, 125, 129, 130, 131, 132, 133, 134, 135, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 165, 171, 173, 185, 188, 199, 220, 238, 240, 241, 242, 243], "float32": [35, 37, 173, 185, 186, 189, 190, 192, 220, 236], "float64": [193, 220, 236], "flow": [42, 98, 100, 104, 106, 108, 109, 110, 119, 121, 162], "fly": [2, 3], "fname": 3, "focu": 7, "focus": 7, "follow": [0, 7, 8, 11, 17, 18, 19, 20, 27, 32, 44, 45, 47, 48, 49, 50, 51, 52, 65, 67, 89, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 165, 172, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 205, 207, 225, 229, 237, 238, 239, 240, 241, 242, 243, 246], "form": [17, 182, 225, 228, 232, 246], "format": [2, 3, 5, 124, 127, 236], "formul": 45, "formula": [11, 19, 51, 78, 79, 80, 105, 125, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 178, 219, 240], "forward": [7, 20, 23, 24, 25, 26, 27, 32, 35, 36, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "found": 7, "foundat": [36, 147, 149, 173], "four": 226, "frac": [9, 10, 11, 13, 14, 15, 16, 18, 19, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 65, 67, 78, 79, 80, 81, 82, 83, 85, 86, 87, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 144, 145, 151, 152, 153, 154, 155, 156, 157, 158, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 238], "frame": 62, "framework": [4, 7, 34, 124, 127, 129, 130, 131, 132, 133, 134, 148, 149, 246], "frequent": [124, 127], "from": [0, 1, 2, 3, 4, 5, 7, 14, 16, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 57, 65, 74, 76, 89, 91, 93, 94, 95, 96, 97, 98, 108, 109, 110, 112, 113, 114, 115, 116, 119, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 163, 164, 165, 167, 168, 169, 171, 172, 173, 178, 179, 180, 184, 186, 205, 206, 207, 214, 219, 221, 223, 225, 228, 230, 231, 232, 234, 237, 238, 239, 240, 241, 242, 243, 246], "full": 19, "full_matric": 19, "fulli": [4, 8, 20, 23, 24, 25, 26, 27, 32, 34, 67, 121, 172], "function": [3, 4, 5, 7, 8, 36, 38, 39, 40, 41, 42, 99, 100, 101, 102, 103, 104, 105, 106, 112, 113, 114, 115, 116, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 147, 149, 165, 172, 235, 246], "fundament": [7, 67, 121, 236], "further": [7, 172, 206, 214, 219], "futur": 120, "g": [0, 10, 11, 14, 17, 19, 23, 24, 25, 26, 27, 112, 148, 151, 158, 221, 240], "g_": 152, "g_t": 158, "gain": [97, 98], "gamma": [129, 130, 131, 132, 133, 134, 135], "gaussian": [45, 100], "gelu": [46, 64, 107, 118], "gelunetwork": 100, "gener": [16, 90, 112, 113, 114, 115, 116, 133, 154, 156, 157, 164, 167, 168, 169, 170, 171, 172, 177, 185, 187, 188, 225, 239, 240, 241, 243, 246], "get": 5, "give": [7, 150, 158], "given": [10, 11, 14, 16, 17, 19, 57, 123, 124, 127, 148, 162, 191, 193, 235, 240, 241, 243, 246], "global": [0, 162, 164, 170, 172], "goal": [123, 124, 127], "gpu": 34, "grad": [35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 57, 65, 67, 89, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 144, 145, 148, 149, 167, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 241, 243, 244], "grad_output": 14, "gradient": [7, 8, 34, 35, 37, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 167, 168, 169, 171, 185, 186, 187, 188, 189, 190, 191, 192, 193, 220, 236], "graph": [7, 98, 173, 185, 186, 189, 190, 191, 192, 193, 236], "grayscal": [5, 23, 24, 25, 26, 240, 246], "greater": 199, "green": 240, "grid": 225, "groundbreak": 34, "group": [39, 53, 54, 55, 108, 109, 110, 148, 149], "group1": 39, "group2": 39, "guarante": 170, "h": [54, 55, 57, 61, 62, 79, 80, 82, 83, 86, 87, 89, 90, 130, 131, 133, 134, 138, 139, 142, 145, 237, 239], "h_": [54, 55, 79, 80, 82, 83, 86, 87, 89, 109, 110, 138, 139, 141, 142, 144, 145], "h_out": [54, 55, 82, 83, 86, 87], "h_stack": 223, "ha": [0, 11, 42, 53, 54, 55, 123, 124, 129, 130, 131, 132, 133, 134, 135, 148, 149, 178, 217, 221, 223, 231, 234, 240], "half": 212, "hand": 18, "handl": [0, 3, 7, 16, 36, 38, 39, 40, 41, 42, 124, 127, 147, 149, 164], "handwritten": [5, 26], "hardwar": 7, "hat": [153, 154, 155, 156, 157], "have": [0, 1, 10, 11, 13, 16, 17, 19, 37, 39, 41, 42, 54, 55, 98, 147, 189, 190, 191, 192, 193, 205, 207, 221, 223, 225, 230, 231, 234, 238, 244], "height": [54, 55, 57, 61, 62, 79, 80, 82, 83, 86, 87, 89, 90, 109, 110, 130, 131, 133, 134, 138, 139, 141, 142, 144, 145, 237, 239, 244], "help": [7, 47, 49, 62, 99, 101, 103, 106, 129, 130, 131, 140, 141, 143, 144, 150, 153, 154, 156, 162, 163, 164, 165], "henc": 229, "here": [3, 9, 36, 65, 147, 149, 163, 164, 165, 172, 235, 236, 246], "hidden": [20, 32, 39], "hidden_s": 39, "hierarch": [39, 42, 147], "hierarchi": 109, "hierarchicalnetwork": 39, "high": [7, 168, 171], "higher": [124, 127, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 177, 178, 182, 203], "highest": 168, "highlight": [143, 144, 145], "hint": 165, "histor": 152, "histori": [167, 168, 169, 171, 185, 186, 187, 188, 189, 190, 191, 192, 193], "hold": [38, 39, 40, 41], "horizont": [223, 231, 241, 246], "hot": [124, 127], "how": [2, 3, 7, 39, 42, 147, 165, 246], "howev": [35, 98], "hstack": 224, "http": 5, "huber": [70, 125], "huber_loss": [64, 71], "huberloss": [118, 128], "huberregressionmodel": 125, "hue": 246, "hyperbol": [52, 106, 201, 211, 216], "hyperparamet": [148, 150], "i": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246], "ideal": [7, 42], "ident": [13, 14, 90, 118, 122, 170, 172, 189, 229], "identifi": 40, "idx": [2, 3], "ieee": 34, "ii": 217, "ij": [51, 89, 105, 176, 177, 178, 182, 225], "ik": [176, 177, 178], "ill": [10, 16], "ilsvrc": 34, "imag": [3, 4, 5, 20, 21, 23, 24, 25, 26, 33, 34, 54, 76, 90, 109, 133, 225, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246], "image_dir": 3, "image_path": 3, "imagedataset": 3, "imageio": 3, "imagenet": 34, "imbal": [124, 127], "impact": 156, "implement": [2, 3, 7, 16, 20, 23, 32, 34, 36, 57, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 223, 234, 240], "impli": [108, 109], "import": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246], "improp": [39, 42, 172], "improv": [32, 34, 74, 90, 100, 103, 106, 150, 151, 152, 153, 154, 155, 156, 157, 158, 165, 239, 242, 246], "imread": 3, "in1_featur": [65, 119], "in2_featur": [65, 119], "in_channel": [39, 42, 108, 109, 110, 130, 131, 140, 141, 142, 143, 144, 145, 147], "in_featur": [38, 39, 42, 67, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 112, 113, 114, 119, 121, 123, 124, 125, 126, 127, 129, 132, 135, 140, 141, 142, 143, 144, 145], "includ": [3, 4, 7, 8, 14, 15, 20, 23, 27, 32, 36, 37, 39, 41, 42, 89, 147, 148, 149, 156, 165, 172, 178, 226], "inclus": [37, 40, 168, 171], "incom": [67, 121], "incomplet": 2, "incompletedataset": 2, "incorpor": [19, 100], "increas": [53, 54, 55, 57, 90, 152, 159, 163, 223, 234, 240, 241, 243, 246], "independ": [39, 53, 54, 55, 112, 113, 114, 115, 116, 135, 178, 188, 238, 240, 242, 244], "index": [0, 2, 5, 163, 185, 186, 189, 225, 229], "indexerror": 0, "indic": [0, 1, 27, 37, 39, 41, 42, 69, 73, 124, 127, 140, 162, 173, 237, 239], "individu": [3, 39, 42, 125, 135, 149, 152, 159], "induc": [49, 103], "inf": 215, "infer": [39, 42, 164], "infin": [17, 19, 155], "inform": [7, 34, 35, 149, 151, 164], "infti": [15, 157], "inherit": [1, 150, 158, 160], "init": 92, "initi": [1, 28, 29, 30, 31, 35, 37, 38, 39, 40, 41, 42, 91, 93, 94, 95, 96, 97, 98, 108, 109, 110, 119, 121, 123, 124, 125, 126, 127, 129, 130, 131, 135, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 167, 170, 171, 172, 185, 189, 190, 191, 192, 193, 220], "initial_accumulator_valu": 152, "inner": [7, 176, 194], "input": [7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 32, 34, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 165, 172, 173, 174, 176, 177, 178, 182, 186, 188, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246], "input1": 119, "input2": 119, "input_": [20, 32, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 137, 138, 139], "input_1": 65, "input_2": 65, "input_data": [99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 135, 140, 141, 142, 143, 144, 145], "input_s": [39, 41, 105, 124, 127], "input_tensor": [7, 23, 24, 25, 26, 27, 35, 38, 39, 40, 41, 42, 51, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 144, 145, 147, 237, 238, 239, 240, 241, 242, 243, 244], "insid": [3, 162, 164], "insight": [7, 34], "inspect": [36, 37, 42, 148], "instabl": [16, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160], "instal": 7, "instanc": [0, 1, 7, 21, 24, 25, 26, 33, 36, 37, 38, 40, 41, 42, 76, 132, 133, 134, 135, 148, 220, 228, 232, 246], "instance_norm": [64, 75, 132, 133, 134], "instancenorm1d": [118, 136], "instancenorm1dmodel": 132, "instancenorm2d": [118, 136], "instancenorm3d": [118, 136], "instanti": 2, "instead": [7, 38, 39, 40, 41, 42, 93, 94, 97, 98, 153, 154, 155, 164, 165, 187, 188], "int": [0, 1, 2, 5, 14, 15, 20, 21, 23, 27, 28, 29, 30, 31, 32, 33, 35, 37, 51, 53, 54, 55, 57, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 95, 96, 97, 98, 105, 108, 109, 110, 119, 121, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 153, 154, 155, 156, 157, 159, 167, 168, 169, 170, 171, 173, 185, 186, 187, 189, 190, 192, 199, 205, 206, 207, 214, 218, 219, 220, 221, 226, 228, 229, 230, 231, 232, 233, 237, 239, 244], "integ": [1, 3, 14, 27, 53, 54, 55, 79, 80, 108, 109, 110, 135, 138, 139, 141, 142, 143, 144, 145, 165, 168, 169, 171, 172, 187, 190, 192, 206, 214, 218, 219, 226, 228, 229, 232], "integr": [1, 2, 4, 5, 8, 37, 39, 41, 42, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 119, 121, 140, 141, 142, 143, 144, 145], "intend": [35, 40, 41], "intens": [16, 238, 240], "intent": 165, "interact": [65, 119, 147, 172], "interfac": [2, 36, 39, 149], "interfer": [162, 164], "intermedi": 16, "intern": [38, 39, 40, 41, 42, 124, 127, 147, 237, 238, 239, 240, 241, 242, 243, 244], "interpol": [64, 88, 244], "interpret": [34, 51, 105, 165, 221], "interv": [167, 171, 185], "introduc": [34, 48, 100, 102, 104, 106, 112, 113, 114, 115, 116, 239, 242, 246], "introspect": 42, "intuit": [7, 38, 40, 147, 246], "inv": 12, "inv_a": 13, "invari": [141, 144], "invers": [7, 10, 13, 14, 16, 152, 196, 197, 198], "invert": [10, 13, 14, 18], "involv": [9, 10, 11, 13, 16, 17, 19, 44, 45, 47, 48, 49, 50, 52, 65, 67, 89, 108, 109, 110, 119, 121, 165, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 193, 203, 204, 205, 207, 210, 212, 225, 226, 228, 232], "is_leaf": 173, "issu": [3, 103, 129, 130, 131, 153, 154], "item": 126, "iter": [0, 1, 2, 3, 35, 36, 39, 41, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 185], "ith": [51, 105], "its": [4, 14, 16, 20, 32, 34, 35, 38, 39, 40, 41, 53, 54, 55, 57, 90, 98, 100, 102, 143, 144, 145, 147, 148, 151, 159, 162, 163, 164, 185, 187, 188, 192, 205, 207, 220, 229, 238, 241, 243, 246], "itself": [9, 14, 38, 39, 40, 41], "j": [5, 51, 105, 129, 130, 131, 132, 133, 134, 140, 141, 143, 144, 225, 231, 237, 239], "jk": 177, "join": [3, 221], "k": [14, 53, 108, 124, 130, 131, 133, 134, 140, 143, 144, 176, 177, 186, 189, 221], "k_d": [55, 110, 142, 145], "k_h": [54, 55, 109, 110, 141, 142, 145], "k_w": [54, 55, 109, 110, 141, 142, 145], "kaim": [93, 94, 97, 98], "kaiming_norm": 92, "kaiming_uniform": 92, "karen": 34, "keep": [36, 102, 151, 164, 229], "keep_grad": [37, 167, 168, 169, 171, 173, 185, 186, 187, 188, 189, 190, 191, 192, 193, 220, 236], "keep_var": 36, "keepdim": [205, 206, 207, 214, 219], "kei": [34, 36, 38, 40, 42, 148], "kept": [206, 214, 219], "kernel": [23, 24, 25, 26, 32, 53, 54, 55, 57, 78, 79, 80, 81, 82, 83, 85, 86, 87, 108, 109, 110, 137, 138, 139, 141, 142, 145], "kernel_s": [39, 42, 81, 82, 83, 85, 86, 87, 108, 109, 110, 130, 131, 140, 141, 142, 143, 144, 145], "keyerror": 36, "keyword": [21, 28, 29, 30, 31, 33, 36, 120], "kj": [176, 178], "known": 34, "krizhevski": 34, "kroneck": [51, 105], "kwarg": [21, 24, 25, 26, 28, 29, 30, 31, 33, 36, 120], "l": [9, 16, 53, 60, 78, 81, 85, 112, 113, 114, 115, 116, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137], "l2": [150, 151, 152, 153, 154, 155, 156, 157, 158, 160], "l_": [53, 78, 81, 85, 108, 137, 140, 143], "l_out": [53, 81, 85], "label": [4, 5, 123, 124, 127], "lambd": 150, "lambda": [11, 49, 103, 150, 154], "lambda_1": 11, "lambda_2": 11, "lambda_i": 11, "lambda_n": 11, "languag": [4, 108, 119, 140, 143], "larg": [0, 3, 16, 34, 125, 147, 150, 153, 154, 155, 158, 159, 160, 164], "larger": [38, 40, 53, 54, 55, 57, 150, 179, 226, 237, 239, 244], "largest": 205, "last": [1, 51, 77, 105, 177, 178, 221, 241, 243], "latest": 4, "layer": [7, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 38, 39, 42, 51, 67, 74, 76, 77, 93, 94, 97, 98, 105, 108, 109, 110, 119, 120, 121, 127, 135, 140, 141, 142, 143, 144, 145, 147, 172, 226, 236], "layer_group": 39, "layer_norm": [64, 75, 135], "layer_sequ": [39, 42], "layernorm": [118, 136], "layernormmodel": 135, "lead": [39, 42, 100, 132, 133, 134, 135, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 172], "leaf": 173, "leaki": [47, 101], "leaky_relu": [46, 64, 101], "leakyrelu": [107, 118], "learn": [1, 3, 4, 5, 7, 14, 16, 32, 33, 34, 38, 39, 40, 41, 48, 51, 99, 101, 102, 105, 108, 109, 110, 113, 114, 115, 116, 119, 121, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 170, 235, 236, 246], "learnabl": [35, 36, 37, 74, 76, 77, 108, 109, 110, 119, 121, 129, 130, 131, 132, 133, 134, 135, 147], "least": [16, 17, 19, 217], "lecun": [5, 34], "left": [14, 15, 16, 19, 45, 51, 100, 105, 123, 124, 125, 127, 129, 130, 131, 132, 133, 134, 135, 143, 144, 145, 237, 239], "leftarrow": 156, "len": [0, 1, 2, 3, 225], "lenet": [22, 24, 25, 26, 34], "lenet_1": 34, "lenet_4": 34, "lenet_5": 34, "length": [39, 53, 60, 78, 81, 85, 108, 120, 129, 132, 137, 140, 143, 226, 238], "leq": [125, 157, 183, 199], "lerp": 89, "less": [0, 44, 47, 70, 99, 101, 124, 125, 127, 199], "let": 11, "level": 7, "leverag": [18, 34, 147], "librari": [3, 7, 8, 36, 147, 148, 149, 165, 172, 173, 246], "lightweight": 7, "like": [7, 34, 35, 36, 39, 42, 53, 97, 98, 103, 112, 129, 130, 131, 132, 133, 134, 162, 163, 165, 220, 236, 246], "likelihood": [73, 124, 127], "limit": [151, 199], "linalg": [7, 12], "linalgerror": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "linear": [7, 8, 9, 16, 17, 18, 38, 39, 40, 42, 44, 45, 47, 48, 49, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 112, 113, 114, 119, 120, 123, 124, 125, 126, 127, 129, 132, 135, 140, 141, 142, 143, 144, 145, 189], "linearli": 125, "list": [0, 1, 23, 27, 35, 37, 38, 39, 40, 41, 77, 120, 135, 148, 165, 167, 168, 169, 171, 173, 186, 187, 188, 190, 191, 192, 193, 218, 229, 230, 233, 235], "listdir": 3, "liter": [68, 69, 70, 72, 73, 89, 93, 94, 108, 109, 110, 123, 124, 125, 126, 127, 225], "ln": 183, "load": [3, 4, 5, 35, 36, 37, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "load_state_dict": [36, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "loader": [1, 2, 3], "local": [34, 57, 108], "locat": 89, "log": [73, 123, 124, 127, 194], "log_softmax": 127, "logarithm": [183, 203, 204], "logic": [3, 137, 138, 139, 147, 148], "logit": [20, 32, 51, 105, 124], "logsoftmax": [124, 127], "long": [156, 218], "loop": [1, 39, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "loss": [7, 16, 38, 39, 40, 41, 42, 51, 68, 69, 70, 72, 73, 99, 100, 101, 102, 103, 104, 105, 106, 112, 113, 114, 115, 116, 120, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "low": [7, 168, 171], "lower": [9, 96, 150, 158, 159, 160, 171], "lowest": 168, "lr": [148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "lu": 13, "lucid": [0, 1, 2, 5, 12, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 166, 194, 224, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244], "m": [27, 38, 39, 42, 141, 142, 144, 145, 153, 154, 155, 156, 157, 189], "m_": [153, 154, 155, 156, 157], "m_t": [156, 157], "machin": [3, 5, 7, 16, 153, 163, 170], "magnitud": [158, 159, 246], "mai": [3, 7, 11, 13, 16, 39, 41, 90, 125, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 164, 172, 240, 246], "main": [7, 17, 39, 186, 189], "maintain": [16, 35, 36, 38, 39, 40, 42, 49, 93, 94, 97, 98, 99, 100, 103, 112, 113, 114, 115, 116, 129, 130, 131, 132, 133, 134, 153, 158, 237, 240, 244], "make": [1, 3, 7, 23, 39, 42, 104, 124, 125, 135, 141, 144, 147, 152, 153, 154, 155, 163, 172, 173, 178, 225, 235, 246], "manag": [7, 36, 38, 39, 40, 41, 42, 147, 149, 162, 164, 172], "manhattan": 15, "manipul": [7, 38, 40, 246], "manner": [39, 42], "manual": [68, 69, 73, 123, 124, 127, 164], "map": [36, 50, 52, 104, 106], "mask": [35, 112, 113, 114, 115, 116], "match": [18, 36, 39, 42, 68, 70, 72, 77, 148, 203, 228, 229, 232, 233, 238, 246], "math": [200, 210, 215], "mathbf": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 65, 67, 89, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 144, 145, 176, 177, 178, 182, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244], "mathcal": [93, 95, 97, 112, 113, 114, 115, 116, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135], "mathemat": [13, 239, 241, 242, 243], "mathrm": 16, "matmul": 194, "matric": [8, 10, 11, 13, 16, 18, 19, 176, 177, 178, 189, 225], "matrix": [7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 57, 65, 120, 121, 147, 176, 225], "matrix_pow": 12, "matthew": 34, "max": [15, 27, 48, 85, 86, 87, 102, 143, 144, 145, 155, 179, 194, 199], "max_pool": [143, 144, 145], "max_pool1d": [64, 84], "max_pool2d": [64, 84], "max_pool3d": [64, 84], "max_valu": 199, "maxim": 3, "maximum": [15, 102, 143, 144, 145, 153, 155, 194, 199, 205, 242], "maxpool": [20, 32], "maxpool1d": [118, 146], "maxpool1dmodel": 143, "maxpool2d": [39, 42, 109, 118, 146], "maxpool2dmodel": 144, "maxpool3d": [110, 118, 146], "maxpool3dmodel": 145, "mean": [5, 17, 35, 49, 53, 54, 55, 58, 68, 69, 70, 72, 73, 74, 76, 95, 99, 100, 101, 102, 103, 104, 106, 110, 112, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 153, 154, 155, 156, 157, 158, 162, 169, 194, 199, 203, 204, 205, 207, 210, 212, 214, 217, 218, 219, 235, 238, 246], "meaning": [42, 165], "measur": [123, 124, 126, 127], "mechan": [7, 41, 65], "membership": 123, "memori": [2, 3, 164, 187, 188], "meshgrid": 224, "method": [3, 7, 8, 13, 38, 39, 40, 41, 42, 68, 69, 70, 72, 73, 93, 94, 97, 98, 123, 124, 125, 126, 127, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 172], "middl": 163, "might": 147, "min": [180, 194, 199], "min_valu": 199, "mind": [0, 3, 7, 39, 42, 164], "mini": 1, "minim": [4, 7, 42, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 149], "minimalist": 7, "minimum": [194, 199, 207], "minu": 104, "mirror": [191, 193], "mismatch": [36, 147, 148], "miss": [36, 147], "mitig": [47, 99, 101, 103, 129, 130, 131], "mnist": [4, 6, 24, 25], "mnist_train": [4, 5], "mode": [7, 62, 74, 76, 89, 93, 94, 112, 113, 114, 115, 116, 226], "model": [1, 3, 4, 7, 14, 17, 19, 20, 23, 27, 32, 35, 36, 37, 38, 39, 40, 41, 42, 51, 90, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 135, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 172, 235, 236, 246], "modern": 34, "modif": [42, 164], "modifi": [21, 33, 38, 39, 40, 41, 91, 93, 94, 95, 96, 97, 98, 112, 162, 164, 170, 223, 234], "modul": [5, 7, 20, 21, 23, 27, 32, 33, 35, 37, 38, 39, 40, 41, 42, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 165, 172, 236, 246], "modular": [3, 7, 34, 36, 39, 42, 147, 246], "moduledict": [39, 40, 42, 43], "modulelist": [41, 42, 43], "moment": [153, 154, 155, 156, 157], "momentum": [74, 76, 129, 130, 131, 132, 133, 134, 150, 156, 158, 160], "momentum_decai": 156, "moor": 16, "more": [3, 4, 7, 11, 38, 39, 42, 99, 113, 114, 115, 116, 147, 148, 149, 150, 151, 154, 155, 158, 159, 160, 169, 178, 217, 231, 246], "most": [8, 144, 236, 237, 246], "move": [150, 158], "mse": [70, 72, 125, 126], "mse_loss": [64, 71], "mseloss": [118, 128], "mu": [95, 129, 130, 131, 132, 133, 134, 135, 219], "mu_c": 238, "mu_i": [132, 133, 134], "much": 246, "mul": 194, "multi": [3, 4, 51, 69, 73, 105, 124, 127, 206, 214, 219], "multidimension": [167, 171, 187], "multipl": [1, 3, 7, 8, 14, 18, 20, 40, 41, 42, 57, 89, 90, 112, 113, 114, 115, 116, 124, 127, 147, 163, 167, 168, 169, 171, 176, 181, 187, 188, 235, 240, 246], "multipli": [14, 41, 67, 121, 159, 181, 182], "must": [0, 1, 3, 9, 10, 11, 13, 14, 17, 18, 19, 36, 38, 39, 40, 41, 42, 77, 112, 113, 114, 115, 116, 127, 148, 164, 217, 221, 223, 226, 228, 229, 231, 232, 234, 237, 238, 239, 240, 241, 243], "mymodel": [36, 37, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "myoptim": [148, 149], "n": [14, 15, 34, 38, 39, 42, 53, 54, 55, 57, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 93, 95, 97, 108, 109, 110, 115, 116, 119, 121, 123, 124, 126, 127, 129, 130, 131, 132, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 145, 189, 206, 217, 219], "n1": 15, "nabla_": [151, 152, 153, 154, 155, 156, 157, 159], "nabla_t": 157, "nadam": 161, "name": [34, 36, 38, 40, 42, 165], "nan": [17, 19], "natur": [16, 34, 108, 119, 140, 143, 183, 203, 204], "ndarrai": [35, 37, 165, 173, 186, 188, 191, 193, 220], "ndim": [17, 19, 37, 173], "ne": 14, "nearest": 89, "necessari": [4, 5, 16, 164, 223, 234], "need": [2, 4, 39, 40, 41, 51, 119, 147, 164, 187, 188, 235, 236, 246], "neg": [14, 16, 19, 44, 73, 90, 99, 101, 102, 103, 124, 127, 159, 221], "negative_slop": [47, 101], "neglect": 41, "neighbor": 89, "neq": 15, "nest": [39, 42, 147], "nesterov": 156, "net": [32, 34], "network": [3, 4, 7, 20, 21, 26, 27, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 48, 49, 50, 51, 52, 53, 54, 55, 65, 67, 74, 90, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 135, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 158, 160, 171, 172, 173, 185, 190, 192, 205, 207, 226, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246], "neural": [3, 4, 7, 20, 21, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 48, 49, 50, 51, 52, 53, 54, 55, 65, 67, 74, 90, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 135, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 158, 160, 171, 172, 173, 185, 190, 192, 205, 207, 226, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246], "neuralnetwork": 102, "neuron": 101, "never": 240, "new": [36, 37, 44, 45, 47, 48, 49, 50, 52, 65, 67, 89, 93, 94, 95, 96, 97, 98, 148, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 188, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 223, 226, 228, 229, 231, 232, 233, 234], "next": [42, 235], "nll": 73, "nll_loss": [64, 71], "nllloss": [118, 128], "nn": [5, 7, 20, 23, 27, 32, 43, 46, 56, 63, 66, 71, 75, 84, 88, 92, 107, 111, 117, 118, 122, 128, 136, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 236, 246], "no_grad": 162, "node": 173, "nois": [19, 172], "non": [11, 14, 16, 19, 41, 45, 47, 48, 93, 94, 99, 100, 101, 102, 103, 104, 106, 112, 113, 114, 115, 116, 153, 154, 164, 183, 199], "none": [0, 1, 2, 5, 23, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 163, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 191, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244], "norm": [8, 12, 155], "normal": [5, 45, 49, 51, 52, 74, 76, 77, 92, 93, 97, 100, 103, 105, 112, 129, 130, 131, 132, 133, 134, 135, 158, 169, 172, 235, 245, 246], "normalized_shap": [77, 135], "note": [53, 112], "noth": [58, 59, 60, 61], "notimplementederror": [2, 36, 148], "notin": 199, "nov": 34, "np": [35, 37, 124, 127, 165, 173, 178, 185, 186, 189, 190, 192, 193, 204, 220, 236], "npy": 5, "num_class": [20, 21, 27, 28, 29, 30, 31, 32, 33, 105, 124, 127], "num_featur": [42, 129, 130, 131, 132, 133, 134], "num_paramet": 41, "number": [0, 1, 2, 5, 10, 11, 13, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 39, 41, 42, 53, 54, 55, 57, 60, 61, 62, 65, 67, 69, 73, 74, 76, 78, 79, 80, 89, 90, 93, 94, 97, 98, 104, 108, 109, 110, 119, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 141, 142, 143, 144, 145, 150, 167, 170, 171, 173, 183, 185, 187, 189, 205, 206, 207, 218, 219, 221, 223, 226, 228, 229, 230, 232, 234, 238, 240, 241, 243, 246], "numer": [13, 16, 68, 69, 74, 76, 77, 123, 124, 129, 130, 131, 132, 133, 134, 135, 151, 152, 153, 154, 155, 156, 157, 158, 165, 175, 185, 190, 192], "numpi": [7, 35, 37, 124, 127, 165, 173, 178, 186, 189, 204, 217, 220, 226, 228, 232, 236, 246], "o": [3, 142, 145, 190, 191], "object": [1, 3, 8, 34, 36, 40, 41, 126, 147, 164, 174, 175, 179, 180, 181, 184, 220], "observ": 153, "obtain": 1, "occur": [90, 164, 221], "occurr": 14, "odot": [112, 113, 114, 115, 116], "off": 162, "offer": [4, 7, 147, 149, 172, 246], "offset": 189, "often": [14, 53, 54, 55, 57, 124, 127, 185, 192, 236, 240, 244, 246], "older": 156, "onc": 164, "one": [0, 41, 42, 51, 53, 67, 81, 85, 103, 104, 105, 108, 114, 124, 127, 129, 132, 140, 143, 148, 163, 165, 169, 184, 191, 205, 207, 222, 227, 231, 236], "ones": [65, 67, 108, 109, 110, 121, 129, 130, 131, 132, 133, 134, 135, 147, 189, 191, 194], "ones_lik": 194, "onli": [7, 89, 102, 112, 113, 114, 115, 116, 123, 124, 127, 129, 130, 131, 132, 133, 134, 135, 143, 144, 145, 159, 162, 185, 199, 205, 207, 217, 226, 227, 229, 230], "onto": [17, 19], "openml": 5, "oper": [3, 7, 8, 13, 16, 35, 36, 39, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 57, 62, 65, 67, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 162, 163, 164, 165, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 187, 188, 190, 192, 203, 204, 205, 206, 207, 210, 212, 214, 217, 219, 221, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 244], "operatornam": [14, 16], "opposit": 150, "optim": [3, 7, 8, 14, 16, 17, 19, 35, 37, 40, 41, 57, 108, 109, 110, 147, 164], "optimizer_st": [148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "option": [1, 5, 15, 19, 20, 21, 23, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 44, 47, 51, 54, 55, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 81, 82, 83, 85, 86, 87, 89, 90, 93, 94, 95, 96, 97, 98, 99, 101, 105, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 144, 145, 148, 150, 158, 160, 167, 168, 169, 171, 173, 185, 186, 187, 188, 189, 190, 191, 192, 193, 205, 206, 207, 214, 218, 219, 220, 221, 225, 228, 230, 231, 236, 240, 241, 243], "ord": 15, "order": [1, 3, 15, 19, 38, 39, 40, 41, 42, 218, 235], "ordered_dict": 42, "ordereddict": [36, 38, 39, 42], "organ": [38, 39, 40, 42], "orient": 246, "origin": [26, 58, 90, 106, 226, 227, 228, 229, 232, 233, 244], "orthogon": [16, 17, 19], "orthonorm": 17, "oscil": [150, 158, 160], "other": [2, 3, 7, 13, 23, 26, 35, 36, 39, 42, 93, 94, 112, 147, 148, 162, 164, 172, 173, 185, 187, 190, 192, 217, 225, 246], "otherwis": [44, 47, 48, 49, 51, 99, 101, 102, 103, 105, 113, 114, 115, 116, 125, 140, 141, 142, 143, 144, 145, 148, 159, 179, 180, 205, 207], "otim": [16, 65, 119], "out": [0, 3, 4, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 93, 94, 97, 98, 108, 109, 110, 112, 113, 114, 115, 116, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234], "out_channel": [23, 39, 42, 108, 109, 110, 130, 131, 140, 141, 142, 143, 144, 145, 147], "out_featur": [38, 39, 42, 65, 67, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 112, 113, 114, 119, 121, 123, 124, 125, 126, 127, 129, 132, 135, 140, 141, 142, 143, 144, 145], "outcom": [240, 241, 243], "outer": 194, "outlier": [70, 125], "output": [0, 1, 2, 7, 14, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 65, 67, 78, 79, 80, 89, 90, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 168, 169, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 186, 188, 189, 190, 192, 193, 203, 204, 205, 206, 207, 210, 212, 214, 217, 218, 219, 225, 226, 228, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244], "output_height": 57, "output_lay": [39, 42], "output_s": [39, 78, 79, 80, 137, 138, 139], "output_width": 57, "outsid": 0, "over": [0, 1, 2, 3, 8, 32, 36, 39, 41, 51, 78, 79, 80, 105, 108, 109, 110, 124, 127, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 167, 171, 205, 206, 207, 214, 217, 219, 240, 241, 243], "overdetermin": 16, "overfit": [1, 20, 32, 59, 62, 113, 114, 115, 116, 150, 153, 158, 160], "overrid": [2, 3], "overridden": [36, 148], "overwrit": [38, 40], "own": [4, 38, 39, 40, 41, 53, 54, 55, 98, 147, 238], "p": [15, 16, 37, 40, 41, 58, 59, 60, 61, 62, 112, 113, 114, 115, 116, 140, 143, 144, 240, 241, 243, 246], "p_d": [142, 145], "p_h": [141, 142, 145], "p_w": [141, 142, 145], "packag": [2, 3, 4, 8, 34, 147, 149, 170, 172, 236, 246], "pad": [23, 39, 42, 53, 54, 55, 57, 78, 79, 80, 81, 82, 83, 85, 86, 87, 108, 109, 110, 130, 131, 137, 138, 139, 140, 141, 142, 143, 144, 145, 224], "pad_after_dim1": 226, "pad_after_dim2": 226, "pad_before_dim1": 226, "pad_before_dim2": 226, "pad_width": 226, "padding_height": 57, "padding_width": 57, "pair": 65, "parallel": [1, 3], "param": [36, 37, 40, 41, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "param1": 36, "param_dict": 40, "param_group": [148, 149], "param_groups_setup": 148, "param_list": 41, "paramet": [0, 2, 7, 24, 25, 26, 34, 36, 147, 148, 149, 165, 172, 246], "parameterdict": 43, "parameterlist": 43, "parent": 147, "part": [35, 36, 98, 147, 162, 164, 172, 185, 186, 189, 190, 191, 192, 193, 236, 246], "partial": [9, 10, 11, 13, 14, 15, 16, 18, 19, 44, 45, 47, 48, 49, 50, 51, 52, 65, 67, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 144, 145, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234], "particip": [37, 236], "particular": [38, 40], "particularli": [7, 16, 39, 40, 41, 42, 51, 67, 105, 121, 124, 127, 132, 133, 134, 135, 154, 162, 235], "pass": [2, 7, 16, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 38, 39, 40, 41, 42, 89, 99, 100, 101, 102, 103, 104, 106, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 135, 140, 141, 142, 143, 144, 145, 147, 165, 173, 206, 214, 217, 218, 219, 221, 223, 227, 229, 230, 234, 236, 246], "past": [150, 151, 153, 158], "patch": [57, 141], "path": [3, 5], "pattern": [48, 102, 108, 109, 110], "penal": [150, 158, 160], "penalti": [151, 152, 153, 154, 155, 156, 157], "penros": 16, "per": [1, 78, 132, 133, 134, 135, 137], "perform": [3, 7, 8, 9, 16, 20, 23, 24, 25, 26, 27, 32, 34, 36, 37, 41, 45, 53, 54, 55, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 162, 164, 170, 172, 174, 175, 178, 181, 184, 203, 205, 207, 214, 218, 235, 237, 239, 244, 246], "permut": 218, "persist": [35, 167, 168, 169, 171, 187, 188], "perturb": [11, 18, 19, 246], "phi": [45, 100], "pi": [45, 100, 200, 210, 215], "pil": [236, 246], "pinv": 12, "pioneer": 34, "pipelin": [5, 172, 235, 236, 238], "pixel": [5, 89, 238, 240], "place": [91, 93, 94, 95, 96, 97, 98], "placehold": [36, 120], "plai": [165, 172], "plot": 225, "point": [4, 90, 162], "pool": [20, 23, 24, 25, 26, 27, 32, 34, 78, 79, 80, 81, 82, 83, 85, 86, 87, 109, 110, 137, 138, 139, 140, 141, 142, 143, 144, 145, 205, 207], "pool1": 42, "pool2": 42, "poorli": 13, "popul": 36, "popular": [4, 34], "portion": 246, "pose": 16, "posit": [1, 9, 14, 36, 42, 90, 99, 101, 102, 103, 140, 141, 142, 143, 144, 145, 159, 163, 183, 228, 232, 239], "possibl": [7, 246], "potenti": [16, 120, 158, 230], "power": [7, 14, 163, 164, 194, 235, 236, 246], "pp": 34, "practic": [16, 124, 127], "practition": 246, "preced": [37, 173], "predefin": [4, 34, 39, 103], "predict": [123, 124, 126, 127], "prefix": 36, "prepar": [3, 163, 226, 228, 232, 236, 246], "prepend": 36, "preprint": 34, "preprocess": [3, 4, 57, 90, 172, 235, 236, 246], "present": [123, 124, 125, 127, 129, 130, 131, 132, 133, 134, 135, 141], "preserv": [58, 90, 112, 185, 186, 189, 190, 191, 192, 193, 206, 214, 219], "preset": 4, "prevent": [1, 38, 39, 40, 41, 42, 59, 62, 113, 114, 115, 116, 123, 124, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 164], "previou": [150, 159, 164], "previous": 153, "primari": [7, 165], "primarili": 42, "print": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244], "probabilist": 172, "probabl": [45, 51, 58, 59, 60, 61, 62, 68, 100, 105, 112, 113, 114, 115, 116, 123, 124, 127, 240, 241, 243, 246], "problem": [16, 17, 19, 47, 99, 101, 157], "proceed": 34, "process": [2, 3, 4, 14, 17, 19, 20, 32, 34, 41, 53, 54, 55, 76, 90, 103, 106, 108, 110, 119, 129, 130, 131, 132, 133, 134, 135, 140, 142, 143, 145, 150, 165, 225, 236, 237, 238, 239, 244, 246], "produc": [20, 32, 78, 79, 80, 108, 109, 110, 137, 138, 139, 170, 172], "product": [7, 17, 19, 104, 119, 135, 147, 176, 177, 181, 182], "program": [162, 172], "progress": 152, "project": [17, 19], "projector": 16, "promin": [140, 142, 143, 144, 145], "promot": [42, 124, 127, 147], "propag": [10, 11, 13, 16, 17, 18, 19, 36, 42, 65, 67, 89, 141, 142, 158, 159, 176, 177, 178, 182, 205, 207, 225, 226, 229, 233], "properli": [0, 41, 51, 105, 147], "properti": [8, 10, 13, 14, 45, 49, 58, 100, 103, 112, 152, 157], "proport": [5, 219], "proportion": 244, "provid": [0, 1, 2, 3, 4, 5, 7, 8, 21, 23, 27, 33, 34, 36, 38, 39, 40, 41, 45, 67, 79, 80, 90, 123, 124, 125, 127, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 158, 160, 162, 164, 165, 170, 172, 173, 178, 185, 191, 205, 207, 218, 220, 228, 230, 232, 246], "pseudo": [13, 16], "purpos": [167, 171, 185, 190, 192], "python": 165, "pytorch": 220, "q": 17, "qr": 12, "quad": [16, 123, 124, 125, 126, 127, 143, 144, 145, 174, 175, 179, 180, 181, 184, 237], "quadrat": 125, "quotient": 175, "r": [17, 240, 241, 242, 243], "r_t": 157, "radam": 161, "rais": [0, 1, 2, 36, 147, 148, 183], "rand": [166, 172], "randint": [166, 172], "randn": [20, 27, 32, 147, 166, 170, 172], "random": [1, 2, 3, 239, 240, 241, 242, 243, 246], "random_integ": 172, "random_tensor": 172, "randomcrop": [245, 246], "randomgrayscal": [245, 246], "randomhorizontalflip": [245, 246], "randomli": [1, 58, 59, 60, 61, 62, 90, 112, 113, 114, 115, 116, 239, 240, 241, 242, 243, 246], "randomnoisedataset": [0, 1, 2], "randomrot": [245, 246], "randomverticalflip": 245, "rang": [0, 1, 8, 41, 50, 52, 53, 54, 69, 73, 98, 104, 106, 150, 158, 160, 168, 196, 197, 199, 238, 242, 246], "rank": 16, "rate": [148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "rather": [40, 41, 154, 229], "ratio": 244, "ravel": 224, "raw": [51, 105, 124, 165], "re": [37, 164], "readabl": [38, 39, 40, 42, 147, 165], "readi": [3, 7, 34], "real": [16, 19, 104], "rearrang": 57, "receiv": [143, 144, 145, 226], "recent": 158, "recept": 34, "reciproc": [16, 194, 204, 212], "recognit": [26, 34, 109], "rectangular": 189, "rectif": 157, "rectifi": [47, 48, 101, 102, 157], "recurr": [39, 135], "recurs": 36, "red": 240, "reduc": [20, 27, 32, 129, 130, 131, 132, 133, 134, 140, 141, 142, 143, 144, 145, 156, 159, 164, 165, 205, 206, 207, 214, 219, 240], "reduct": [19, 68, 69, 70, 72, 73, 123, 124, 125, 126, 127, 205, 207], "reevalu": 148, "refer": [4, 7, 36, 172, 186, 189, 221], "reflect": 162, "regardless": [16, 227], "region": [55, 78, 79, 80, 89, 138, 139, 226, 237, 246], "regist": [35, 36, 37, 41, 147], "register_buff": 35, "register_paramet": 36, "registr": [36, 147], "regress": [4, 72, 125, 126], "regular": [16, 20, 32, 62, 113, 114, 115, 116, 150, 151, 152, 155, 156, 157, 158, 160], "relat": [164, 189, 190], "relationship": 244, "relev": [89, 150, 158, 160], "reli": 164, "reliabl": 5, "reliant": [113, 114, 115, 116], "relu": [7, 20, 27, 32, 34, 38, 39, 40, 42, 44, 46, 47, 64, 93, 94, 97, 98, 99, 101, 107, 108, 109, 110, 118, 119, 120, 121], "relu1": 42, "relu2": 42, "relu3": 42, "remain": [5, 35, 77, 112, 113, 114, 115, 116, 159], "rememb": 172, "remov": 230, "rep": 232, "repeat": [224, 225, 232], "repetit": [228, 232], "replac": [172, 240], "repres": [13, 15, 19, 23, 36, 37, 42, 65, 67, 74, 76, 77, 108, 109, 110, 119, 121, 124, 127, 135, 148, 149, 150, 156, 157, 158, 159, 160, 165, 174, 175, 181, 184, 186, 206, 217, 218, 219, 225, 237, 239, 241, 242, 243, 244], "represent": [141, 144, 148], "reproduc": [167, 168, 169, 170, 171, 172, 246], "requir": [2, 3, 4, 7, 35, 38, 42, 44, 45, 47, 48, 49, 50, 52, 65, 67, 89, 98, 120, 124, 127, 147, 162, 164, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 215, 216, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 244], "requires_grad": [35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 57, 65, 67, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 144, 145, 147, 167, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236], "rescal": [68, 69, 73, 123, 124, 127], "research": 147, "reset": [37, 170, 173], "reshap": [7, 67, 109, 110, 163, 165, 224, 227], "resili": 159, "resiz": [89, 235, 245, 246], "resourc": 164, "respect": [9, 10, 11, 13, 14, 15, 16, 17, 19, 23, 27, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 65, 67, 89, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 199, 203, 204, 205, 206, 207, 210, 212, 214, 217, 218, 219, 225, 226, 228, 232, 240], "respons": [38, 149], "restor": 164, "restructur": 229, "result": [9, 13, 14, 16, 34, 36, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 65, 67, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 105, 147, 148, 162, 164, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 220, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 239, 240, 246], "resum": 149, "retain": [37, 173, 185, 192, 205, 206, 207, 214, 219, 236], "retent": 236, "retriev": [0, 2, 38, 40, 41], "return": [0, 1, 2, 3, 5, 7, 23, 35, 36, 38, 39, 40, 41, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 135, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 165, 235, 246], "reus": 236, "reusabl": [42, 147, 235], "revers": [7, 42, 218, 241, 243], "revert": 164, "rho": 151, "rho_": 157, "rho_t": 157, "right": [14, 15, 16, 18, 19, 45, 51, 100, 105, 123, 124, 125, 127, 129, 130, 131, 132, 133, 134, 135, 143, 144, 145, 237], "risk": 165, "rmsprop": 161, "rob": 34, "robust": [90, 112, 113, 114, 115, 116, 125, 147, 151, 239, 240, 242, 246], "role": [165, 172, 246], "root": [4, 5, 152, 158, 212], "rotat": [64, 88, 242, 246], "rotated_imag": 90, "rout": [143, 144, 145], "routin": 7, "row": [10, 11, 13, 18, 67, 189, 225, 234], "rprop": 161, "rule": [13, 14, 163, 174, 175, 179, 180, 181, 183, 184], "run": [7, 35, 74, 76, 129, 130, 131, 132, 133, 134, 151, 164, 170, 172], "running_mean": [35, 74, 76, 129, 130, 131, 132, 133, 134], "running_var": [74, 76, 129, 130, 131, 132, 133, 134], "runtim": [39, 42, 147], "s_": 159, "s_d": [142, 145], "s_h": [141, 142, 145], "s_w": [141, 142, 145], "same": [10, 11, 13, 14, 18, 51, 58, 59, 60, 61, 62, 74, 76, 77, 79, 80, 90, 108, 109, 110, 112, 113, 114, 115, 116, 120, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 159, 170, 172, 178, 188, 191, 193, 203, 205, 206, 207, 221, 223, 227, 229, 230, 231, 234, 238], "sampl": [0, 1, 2, 3, 5, 7, 23, 24, 25, 26, 78, 79, 80, 93, 94, 95, 96, 97, 98, 112, 113, 114, 115, 116, 119, 121, 124, 127, 135, 137, 138, 139, 169, 172, 237, 239, 241, 242, 243, 244], "satisfi": [9, 11, 18], "satur": [99, 246], "save": [2, 35, 37, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164], "scalabl": [3, 147], "scalar": [10, 15, 68, 69, 70, 72, 73, 165], "scale": [11, 16, 24, 25, 26, 34, 44, 49, 51, 74, 76, 77, 97, 98, 99, 101, 103, 104, 105, 106, 112, 113, 114, 115, 116, 124, 129, 130, 131, 132, 133, 134, 135, 150, 152, 153, 154, 165, 172, 219, 244], "scenario": [40, 41, 135, 154, 155, 236, 240], "schedul": 150, "scientif": 163, "score": [51, 124], "scratch": 7, "script": 172, "seamless": [0, 1, 3, 4, 147, 172], "seamlessli": [3, 4, 8, 37, 39, 42, 147, 165, 246], "second": [11, 39, 40, 65, 119, 153, 154, 155, 156, 157, 163, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 223, 225, 243], "section": 178, "see": [7, 178], "seed": [166, 167, 168, 169, 171, 172, 246], "seen": 151, "select": [89, 143, 145, 214], "self": [0, 1, 2, 3, 7, 20, 23, 27, 32, 35, 36, 37, 38, 39, 40, 41, 49, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 119, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 225, 235, 236], "selu": [46, 58, 64, 107, 112, 118], "selunetwork": 103, "sensit": [70, 125, 129, 130, 131], "sentiment": 4, "separ": [0, 53, 54, 55, 132, 133, 134], "sequenc": [14, 38, 40, 53, 185, 221, 223, 226, 228, 231, 232, 234, 235], "sequenti": [20, 23, 27, 32, 38, 39, 43, 53, 120, 235, 246], "seri": [24, 25, 53, 108, 140, 143], "serial": [35, 36, 149], "serv": [3, 27, 36, 38, 39, 40, 41, 42, 147, 159, 236], "set": [3, 4, 5, 37, 41, 53, 54, 55, 101, 102, 103, 108, 109, 110, 112, 115, 116, 119, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 148, 153, 154, 158, 167, 168, 169, 170, 171, 172, 173, 185, 187, 188, 192, 193, 199, 205, 207, 220, 236, 240, 246], "setup": [4, 7], "sever": [16, 108, 109, 110, 140, 141, 142, 143, 144, 145, 164, 235, 246], "sgd": [7, 150, 157, 161], "sgn": 15, "shape": [3, 4, 5, 7, 10, 11, 13, 14, 16, 20, 23, 27, 32, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 163, 165, 167, 168, 169, 171, 172, 173, 176, 187, 188, 189, 190, 191, 192, 193, 199, 204, 205, 206, 207, 210, 212, 214, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 234, 237, 238, 239, 240, 241, 242, 243, 244, 246], "shapelik": 168, "share": 34, "shift": [74, 76, 77, 129, 130, 131, 132, 133, 134, 135], "shorthand": 178, "should": [23, 35, 164, 167, 168, 169, 171, 187, 188, 196, 197, 217, 226, 235], "show": 162, "showcas": 7, "shown": 170, "shrink": 151, "shuffl": [1, 2, 3], "side": [18, 39, 42, 53, 54, 55, 81, 82, 83, 85, 86, 87, 108, 109, 110, 140, 141, 142, 143, 144, 145, 164], "sigma": [16, 93, 95, 97, 104, 129, 130, 131, 132, 133, 134, 135, 218], "sigma_c": 238, "sigma_i": 16, "sigmoid": [46, 64, 93, 94, 97, 98, 107, 118, 123], "sigmoidnetwork": 104, "sign": [14, 125, 159, 194], "signal": [108, 109, 110, 129, 132, 140, 141, 142, 143, 144, 145], "signific": 164, "significantli": [34, 235], "sim": [112, 113, 114, 115, 116], "similar": [7, 93, 94, 178, 204, 220, 226], "similarli": [19, 217], "simonyan": 34, "simpl": [3, 4, 7, 42, 53, 54, 55, 65, 67, 81, 82, 83, 85, 86, 87, 100, 102, 103, 104, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 176, 177, 182, 235], "simplebinaryclassificationmodel": 123, "simpleclassificationmodel": [124, 127], "simplegelumodel": 100, "simpleleakyrelumodel": 101, "simplemodel": [7, 121], "simpleregressionmodel": 126, "simplerelumodel": 102, "simpleselumodel": 103, "simplesigmoidmodel": 104, "simpletanhmodel": 106, "simpli": [162, 217, 218, 229], "simplic": [34, 102], "simplifi": [4, 24, 42], "simul": 246, "simultan": 90, "sin": [194, 200], "sinc": [14, 17, 38, 39, 40, 41, 53, 54, 55, 98, 162, 164, 169, 225, 246], "sine": [197, 210, 211], "singl": [0, 4, 14, 17, 19, 51, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 124, 135, 141, 142, 143, 144, 145, 148, 165, 171, 187, 221, 230, 238, 240, 246], "singleton": 135, "singular": [10, 13, 14, 16, 18, 19], "sinh": [194, 201, 216], "size": [0, 1, 2, 3, 19, 23, 24, 25, 26, 32, 37, 39, 53, 54, 55, 57, 60, 61, 62, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 108, 109, 110, 119, 121, 123, 124, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 168, 171, 172, 173, 205, 206, 207, 214, 219, 221, 223, 230, 233, 234, 237, 239, 244, 246], "skip": 164, "slice": [65, 217], "slide": [57, 140, 142, 143, 145], "slightli": 246, "slope": [47, 99, 101], "slow": [3, 157], "small": [16, 24, 25, 26, 34, 47, 68, 69, 74, 76, 77, 101, 103, 123, 124, 125, 129, 130, 131, 132, 133, 134, 135, 141, 144, 151, 152, 153, 154, 155, 156, 157, 158, 159], "smaller": [32, 34, 39, 42, 147, 152, 153, 180, 237, 239, 244], "smallest": 207, "smooth": [45, 99, 100, 150, 158, 246], "smoother": 150, "so": [38, 39, 40, 41, 90, 147, 157, 187, 188, 235], "softmax": [46, 64, 107, 118, 124], "softmaxmodel": 105, "solut": [16, 18], "solv": [8, 9, 12, 16, 17, 19], "solver": 8, "some": [44, 59, 90, 112, 113, 114, 129, 130, 131, 132, 133, 134, 152, 153, 154, 164, 165], "sometim": 163, "sophist": [39, 42], "sourc": 172, "space": [11, 17, 19, 53, 54, 55, 57, 78, 79, 80, 108, 109, 110, 137, 138, 139, 185, 246], "span": 4, "spars": [152, 153], "spatial": [20, 27, 32, 109, 110, 129, 130, 131, 132, 133, 134, 135, 141, 142, 143, 144, 145, 225], "spatio": 110, "special": [0, 1, 7, 16, 35, 36, 37, 112, 172], "specif": [4, 7, 38, 39, 40, 41, 42, 98, 112, 113, 114, 115, 116, 132, 133, 134, 147, 148, 162, 172, 187, 205, 207, 228, 232], "specifi": [0, 1, 2, 3, 4, 5, 7, 15, 21, 23, 27, 28, 29, 30, 31, 33, 39, 51, 57, 62, 68, 69, 70, 72, 73, 77, 78, 79, 80, 89, 90, 105, 108, 109, 110, 123, 124, 125, 126, 127, 135, 137, 138, 139, 141, 142, 143, 144, 145, 148, 165, 167, 168, 169, 170, 171, 183, 185, 186, 187, 188, 189, 190, 192, 193, 199, 205, 206, 207, 214, 218, 219, 220, 221, 223, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 244, 246], "speech": 132, "speed": [150, 151, 152, 153, 154, 155, 156, 157, 158, 160], "split": [4, 221, 223, 234], "springer": 34, "sqrt": [45, 93, 94, 97, 98, 100, 129, 130, 131, 132, 133, 134, 135, 151, 152, 153, 154, 156, 157, 158, 194, 196, 197], "squar": [1, 3, 9, 10, 11, 13, 14, 16, 17, 18, 19, 70, 72, 125, 126, 151, 152, 153, 158, 194, 212], "squaredataset": [0, 1, 2, 3], "squeez": 224, "stabil": [13, 16, 68, 69, 74, 76, 77, 123, 124, 129, 130, 131, 132, 133, 134, 135, 150, 151, 152, 153, 154, 155, 156, 157, 158, 238], "stabl": [93, 94, 97, 98, 112, 124, 150, 154, 155, 158, 159, 160], "stack": [42, 223, 224, 234, 246], "standard": [45, 47, 93, 95, 97, 99, 100, 101, 112, 159, 169, 172, 178, 235, 238, 246], "start": [1, 3, 150, 152, 159, 185, 237, 239], "state": [34, 35, 36, 37, 39, 42, 148, 162, 164, 170], "state_dict": [36, 37, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "static": 42, "statist": [16, 58, 74, 76], "std": [5, 95, 235, 238, 246], "step": [37, 57, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 185, 235, 236], "step_siz": 159, "still": 151, "stochast": [7, 150, 160], "stop": 185, "storag": [38, 40, 173], "store": [2, 4, 5, 35, 36, 37, 38, 39, 40, 41, 137, 138, 139, 164, 173, 237, 238, 239, 240, 241, 242, 243, 244], "str": [5, 27, 36, 38, 40, 42, 68, 69, 70, 72, 73, 89, 148, 225], "straightforward": [160, 162, 174], "strategi": 149, "streamlin": [2, 3], "strict": [36, 148], "stride": [23, 24, 25, 26, 39, 42, 53, 54, 55, 57, 78, 79, 80, 81, 82, 83, 85, 86, 87, 108, 109, 110, 137, 138, 139, 140, 141, 142, 143, 144, 145], "stride_height": 57, "stride_width": 57, "string": [36, 38, 40, 42, 108, 109, 110, 148], "structur": [0, 7, 17, 35, 36, 39, 147, 148, 165, 189, 236], "style": [76, 132, 133, 225], "sub": [38, 39, 40, 41, 42, 147, 194, 237, 239], "sub_tensor": 173, "subclass": [1, 2, 3, 7, 36, 37, 38, 147, 148], "submodul": [36, 147], "subsequ": [39, 42, 98, 172], "subset": [113, 114], "subtract": [7, 184, 238], "suffer": 152, "suit": [93, 94, 97, 98], "suitabl": [24, 25, 26, 125, 152, 153, 167], "sum": [15, 38, 39, 40, 41, 42, 51, 68, 69, 70, 72, 73, 105, 123, 124, 125, 126, 127, 152, 174, 177, 182, 194, 217, 219, 221, 223, 225, 228, 232, 234], "sum_": [14, 51, 105, 123, 124, 126, 127, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 176, 177, 206, 214, 217, 219, 225, 228], "sum_i": [15, 182], "sum_j": 182, "sum_k": 178, "summar": [140, 141, 142], "summat": 14, "super": [7, 35, 36, 37, 38, 39, 40, 41, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 119, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 135, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "support": [1, 3, 4, 7, 8, 14, 15, 16, 17, 19, 38, 39, 40, 41, 42, 89, 90, 147, 149, 156, 172, 173, 174, 175, 178, 179, 180, 181, 183, 184, 186, 189, 199, 204, 206, 210, 212, 214, 217, 218, 219, 221, 225, 229, 236, 246], "suppos": 246, "sure": [147, 246], "svd": [12, 16], "symmetr": [9, 78, 79, 80, 97, 98, 106], "syntax": [1, 178], "system": [8, 9, 16, 17, 18, 34, 162, 225], "systemat": 246, "t": [16, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 173, 178, 220, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246], "t0": 150, "t1": 220, "t2": 220, "tabular": 4, "tailor": [4, 147, 246], "take": [17, 140, 141, 142, 143, 144, 145, 164, 235], "taken": 217, "tan": 194, "tangent": [52, 106, 198, 215, 216], "tanh": [39, 42, 45, 46, 64, 93, 94, 97, 98, 100, 107, 118, 194], "tanhnetwork": 106, "target": [5, 42, 68, 69, 70, 72, 73, 78, 79, 80, 89, 123, 124, 125, 126, 127, 137, 138, 139, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 237, 239, 244], "target_tensor": [123, 124, 125, 126, 127], "target_transform": 5, "task": [4, 7, 8, 20, 21, 24, 25, 26, 34, 50, 51, 54, 65, 68, 69, 72, 73, 104, 105, 108, 109, 110, 123, 124, 125, 126, 127, 132, 133, 134, 140, 142, 143, 145, 153, 163, 172, 189, 246], "techniqu": [9, 13, 32, 74, 112, 113, 114, 115, 116, 132, 133, 134, 149, 244, 246], "tempor": [108, 110, 142, 145], "temporarili": 164, "tensor": [2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 32, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 162, 164, 165, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246], "term": [16, 65, 150, 154, 156, 157, 158, 160], "test": [4, 5], "test_siz": 5, "text": [4, 10, 14, 15, 38, 44, 47, 48, 49, 51, 53, 54, 55, 78, 79, 80, 81, 82, 83, 85, 86, 87, 93, 94, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 112, 113, 114, 115, 116, 123, 124, 125, 126, 127, 140, 141, 142, 143, 144, 145, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 168, 174, 175, 177, 179, 180, 181, 183, 184, 195, 199, 205, 206, 207, 209, 214, 219, 221, 223, 226, 227, 228, 229, 230, 232, 233, 234, 237, 238, 239, 241, 242, 243], "th": [65, 123, 124, 126, 127, 132, 133, 134, 179, 180, 183], "than": [0, 1, 40, 41, 44, 47, 70, 99, 101, 125, 148, 154, 199, 217, 226, 231, 237, 239, 244], "thei": [0, 7, 19, 35, 39, 41, 42, 165, 225, 229, 237, 239, 246], "them": [3, 36, 41, 57, 150, 163, 221, 231, 235, 238, 246], "therebi": [112, 141, 142, 144, 145], "theta": [150, 151, 242], "theta_": [150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "theta_t": [157, 158], "thi": [0, 1, 2, 3, 5, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 23, 35, 37, 39, 40, 41, 42, 48, 50, 51, 52, 53, 54, 55, 57, 65, 67, 78, 89, 90, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 127, 129, 130, 131, 132, 133, 134, 135, 137, 140, 141, 142, 143, 144, 145, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 168, 169, 170, 172, 173, 177, 178, 182, 185, 187, 190, 191, 192, 193, 199, 203, 204, 205, 206, 207, 210, 212, 214, 217, 218, 219, 220, 226, 228, 229, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246], "thing": 164, "those": [7, 24, 25, 26, 41, 98], "three": [19, 26, 55, 80, 83, 87, 110, 116, 131, 134, 139, 142, 145], "threshold": [16, 70, 125], "through": [0, 3, 4, 7, 11, 16, 17, 19, 20, 23, 32, 38, 39, 42, 65, 67, 89, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 129, 130, 131, 132, 135, 140, 141, 142, 143, 144, 145, 169, 176, 177, 182, 225, 227, 229, 230, 233, 246], "throughout": [49, 236], "tile": 224, "time": [0, 3, 14, 24, 25, 26, 53, 101, 103, 108, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 158, 160, 164, 228, 232], "to_tensor": 5, "togeth": [42, 235, 246], "too": 159, "tool": [3, 7, 147, 163, 172, 235, 246], "top": [9, 10, 11, 17, 19, 65, 67, 89, 108, 109, 110, 119, 121, 237, 239], "torch": [27, 220], "total": [0, 1, 2, 5, 21, 24, 25, 26, 28, 29, 30, 31, 33, 37, 173, 229], "totensor": [235, 246], "trace": [8, 194], "track": [7, 129, 130, 131, 132, 133, 134, 147, 162, 164, 167, 168, 169, 171, 185, 186, 187, 188, 189, 190, 191, 192, 193, 220, 236], "track_running_stat": [129, 130, 131, 132, 133, 134], "tradit": [151, 152, 155, 156, 157], "trail": 77, "train": [1, 2, 3, 4, 5, 7, 35, 36, 39, 41, 42, 51, 58, 59, 60, 61, 62, 74, 76, 90, 100, 101, 103, 104, 105, 106, 112, 113, 114, 115, 116, 129, 130, 131, 132, 133, 134, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 235, 238, 239, 240, 241, 242, 243, 246], "trainabl": [129, 130, 131, 132, 133, 134, 147], "transfer": [76, 132, 133], "transform": [2, 4, 5, 7, 11, 40, 65, 67, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 163, 225], "transform_pipelin": [235, 246], "transformed_imag": [235, 246], "transit": 125, "translat": [141, 144], "transpos": [7, 9, 194], "treat": [0, 35, 135, 147], "triangular": [9, 17], "true": [1, 2, 3, 4, 5, 19, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 57, 58, 59, 60, 61, 62, 65, 67, 74, 76, 89, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 144, 145, 147, 148, 153, 154, 158, 162, 167, 168, 169, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236], "try": 0, "tune": 246, "tupl": [2, 3, 5, 11, 17, 19, 36, 37, 53, 54, 55, 57, 77, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 108, 109, 110, 120, 135, 138, 139, 140, 141, 142, 143, 144, 145, 153, 154, 155, 156, 157, 159, 165, 167, 168, 169, 171, 173, 187, 190, 192, 205, 206, 207, 214, 219, 221, 223, 225, 226, 229, 230, 231, 233, 234, 237, 238, 239, 244], "twice": 226, "two": [7, 10, 11, 13, 14, 16, 17, 19, 24, 25, 26, 27, 53, 54, 55, 65, 82, 86, 109, 115, 119, 130, 133, 141, 144, 153, 154, 155, 156, 157, 159, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 217, 225], "type": [35, 36, 37, 65, 119, 173, 185, 186, 187, 188, 189, 190, 191, 192, 193, 220, 225, 236], "typeerror": [0, 1, 2, 36, 148], "typic": [8, 35, 51, 58, 90, 103, 105, 127, 129, 130, 131, 132, 133, 134, 149, 150, 158, 160, 164, 165, 233, 236, 238, 242, 244, 246], "u": [16, 19, 94, 96, 98], "u_": 155, "unchang": [35, 62, 99, 101, 102, 103, 112, 113, 114, 115, 116, 120, 227, 230], "undefin": 183, "under": 147, "underbrac": 14, "underdetermin": 16, "undergo": 246, "underli": [0, 7, 220, 223, 227, 229, 234], "understand": [7, 32, 34, 42, 246], "unexpect": [36, 39, 42, 172], "unfold": [56, 64], "unifi": 0, "uniform": [92, 94, 98, 108, 109, 110, 119, 121, 166, 167, 168, 172, 240, 241, 242, 243], "uniformli": [167, 171], "uniniti": [187, 188], "unintend": 164, "union": 27, "uniqu": [9, 16, 18, 38, 40], "unit": [20, 23, 32, 44, 45, 47, 48, 49, 93, 94, 97, 98, 99, 100, 101, 102, 103, 112], "unless": 173, "unlik": [35, 38, 39, 40, 41, 47, 99, 101, 112, 135, 151, 152, 154, 155, 156, 157, 159], "unnecessari": 164, "unpad": 226, "unseen": 246, "unsqueez": 224, "unstabl": 13, "up": [148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 242, 244], "updat": [4, 35, 41, 42, 112, 113, 114, 115, 116, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164], "upon": [34, 38, 39, 40, 41], "upper": [17, 96, 159, 171], "us": [0, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 16, 17, 19, 23, 24, 25, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 65, 67, 72, 74, 76, 79, 80, 89, 90, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 162, 163, 164, 167, 168, 169, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 203, 205, 206, 207, 214, 219, 225, 226, 228, 230, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246], "usag": [3, 8, 39, 42, 148, 149, 237, 238, 239, 240, 241, 242, 243, 244], "user": [1, 2, 3, 4, 7, 38, 39, 40, 41, 147, 152, 235, 236, 246], "usual": 124, "util": [3, 7, 8, 40, 41, 147, 172], "v": [11, 16, 19, 153, 154, 156, 157, 186], "v_": [150, 153, 154, 156, 157, 158, 160], "v_stack": 234, "v_t": [157, 158], "val": 91, "valid": [108, 109, 110, 218], "valu": [7, 10, 14, 15, 16, 19, 36, 38, 40, 42, 44, 47, 50, 51, 52, 53, 54, 55, 57, 68, 69, 70, 72, 73, 74, 76, 77, 78, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 106, 112, 113, 114, 115, 116, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 165, 167, 168, 169, 170, 171, 172, 185, 186, 187, 188, 189, 195, 196, 197, 199, 202, 203, 204, 205, 207, 209, 210, 212, 213, 221, 226, 227, 229, 233, 238, 240, 241, 243], "valuabl": 172, "valueerror": [1, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 148], "vanish": [99, 103, 129, 130, 131], "var": 194, "vari": [39, 41, 78, 89, 137, 242], "variabl": [36, 42, 78, 79, 80, 120, 137, 138, 139, 147, 162, 164, 167, 187, 239, 242], "varianc": [49, 58, 74, 76, 93, 94, 97, 98, 103, 112, 129, 130, 131, 132, 133, 134, 135, 153, 154, 155, 156, 157, 169, 219, 242, 246], "variant": [27, 28, 29, 30, 31, 153, 154, 155], "variat": [132, 133, 134, 239, 246], "varieti": [4, 172, 246], "variou": [23, 34, 102, 149, 172, 205, 207, 226, 236], "vdot": 182, "vector": [11, 16, 17, 18, 19, 65, 67, 119, 121, 176, 177, 178, 182], "veloc": [150, 158, 160], "veri": [16, 34, 151], "versa": 159, "versatil": [172, 225], "version": [19, 23, 24, 25, 158, 182, 240], "vertic": [231, 234, 243], "vgg": 27, "vggnet": [22, 28, 29, 30, 31, 34], "vggnet_11": 34, "vggnet_13": 34, "vggnet_16": 34, "vggnet_19": 34, "via": [3, 4], "vice": 159, "video": [55, 62, 110, 134, 142, 145], "view": [23, 39, 141, 142, 143, 144, 145, 229], "vision": [34, 54, 109, 119, 246], "visual": [32, 34], "vol": 34, "volumetr": [55, 62, 110, 134, 142, 145], "vstack": 224, "w": [54, 55, 57, 61, 62, 65, 67, 79, 80, 82, 83, 86, 87, 89, 90, 108, 109, 110, 119, 121, 130, 131, 133, 134, 138, 139, 142, 145, 237, 239], "w_": [54, 55, 79, 80, 82, 83, 86, 87, 89, 109, 110, 138, 139, 141, 142, 144, 145], "w_out": [54, 55, 82, 83, 86, 87], "wa": [112, 113, 114, 115, 116, 164], "wai": [1, 21, 33, 162, 164, 229], "want": [0, 7, 235, 237], "warn": [38, 40], "we": [3, 7, 163, 225], "weight": [34, 53, 54, 55, 65, 67, 68, 69, 73, 74, 76, 77, 89, 93, 94, 97, 98, 108, 109, 110, 112, 113, 114, 115, 116, 119, 121, 123, 124, 127, 129, 130, 131, 132, 133, 134, 135, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 167, 172], "weight1": 40, "weight2": 40, "weight_decai": [150, 151, 152, 153, 154, 155, 156, 157, 158, 160], "well": [93, 94], "were": 42, "what": 164, "when": [0, 1, 3, 7, 14, 36, 39, 41, 42, 44, 47, 53, 54, 55, 99, 120, 129, 130, 131, 132, 133, 134, 148, 151, 159, 162, 164, 165, 172, 183, 235, 237], "where": [3, 4, 5, 10, 11, 13, 14, 15, 16, 17, 19, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 165, 172, 174, 175, 179, 180, 181, 183, 184, 187, 188, 199, 203, 204, 205, 206, 207, 210, 212, 214, 217, 218, 219, 221, 226, 228, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243], "whether": [1, 10, 36, 37, 93, 94, 158, 162, 167, 168, 169, 171, 173, 187, 188, 205, 206, 207, 214, 219], "which": [0, 7, 10, 11, 13, 14, 15, 16, 17, 19, 28, 29, 30, 31, 34, 36, 38, 40, 42, 47, 51, 70, 90, 99, 100, 101, 105, 106, 112, 125, 127, 129, 130, 131, 132, 133, 134, 135, 153, 154, 156, 158, 162, 164, 165, 167, 168, 171, 196, 197, 198, 199, 200, 201, 204, 205, 206, 207, 208, 210, 211, 212, 214, 215, 216, 217, 219, 221, 228, 229, 231, 233, 236, 237, 239, 240, 241, 242, 243, 244, 246], "while": [7, 34, 39, 42, 58, 100, 102, 147, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 164, 229, 231, 240, 246], "who": [7, 38, 39, 40, 41], "whose": [19, 188, 191, 193, 195, 199, 203, 209], "wide": [4, 5, 8, 16, 48, 102, 108, 109, 124], "wider": [53, 54], "width": [54, 55, 57, 61, 62, 79, 80, 82, 83, 86, 87, 89, 90, 109, 110, 130, 131, 133, 134, 138, 139, 141, 142, 144, 145, 237, 239, 244], "window": [81, 82, 83, 85, 86, 87, 140, 141, 142, 143, 144, 145, 151, 205, 207], "wise": [44, 45, 47, 48, 49, 50, 51, 52, 105, 112, 113, 114, 115, 116, 147, 163, 174, 175, 178, 179, 180, 181, 183, 184, 195, 196, 197, 198, 199, 200, 201, 202, 204, 208, 209, 210, 211, 212, 213, 215, 216, 217, 223, 234], "within": [2, 35, 38, 39, 40, 41, 42, 52, 89, 90, 98, 100, 102, 103, 104, 106, 108, 109, 110, 112, 113, 114, 120, 123, 124, 125, 126, 127, 129, 130, 131, 132, 135, 140, 141, 142, 143, 144, 145, 149, 164, 185, 199, 242, 246], "without": [7, 38, 39, 40, 65, 67, 108, 109, 110, 119, 121, 162, 205, 227, 229, 233], "won": 164, "work": [1, 2, 3, 7, 9, 163, 165], "workflow": [172, 246], "workload": 7, "wrap": [3, 147, 164, 220], "wrapper": 147, "x": [7, 8, 18, 23, 27, 35, 36, 38, 39, 40, 41, 42, 51, 65, 67, 90, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 144, 145, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 167, 168, 169, 171, 187, 188, 203, 225, 237, 238, 239, 240, 241, 242, 243, 244], "x1": 119, "x2": 119, "x_": [124, 127, 225], "x_c": [124, 127], "x_i": 123, "x_k": 124, "xavier": [93, 94, 97, 98], "xavier_norm": 92, "xavier_uniform": 92, "xy": 225, "x\u2081": 119, "x\u2082": 119, "y": [38, 39, 40, 41, 42, 90, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 144, 145, 167, 168, 169, 171, 187, 188, 225, 240], "y_": [124, 127, 225], "y_c": [124, 127], "y_i": 123, "yann": [5, 34], "yet": [7, 163], "yield": [0, 1, 36, 164], "you": [0, 39, 41, 42, 147, 149, 162, 164, 172, 187, 188, 189, 193, 218, 220, 235, 237, 246], "your": [147, 149, 162, 164, 172, 246], "z": [188, 192, 193], "zeiler": [32, 34], "zero": [14, 16, 17, 44, 47, 53, 54, 55, 58, 59, 60, 61, 62, 81, 82, 83, 85, 86, 87, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 108, 109, 110, 112, 113, 114, 115, 116, 135, 140, 141, 142, 143, 144, 145, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 187, 188, 189, 193, 194, 199, 209, 226], "zero_grad": [37, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 173], "zeros_lik": [188, 194], "zfnet": [22, 34], "zisserman": 34, "\u03c3\u1d62": 16}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "datasets.MNIST", "Image Datasets", "Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "models.alexnet", "ConvNets", "LeNet", "models.lenet_1", "models.lenet_4", "models.lenet_5", "VGGNet", "models.vggnet_11", "models.vggnet_13", "models.vggnet_16", "models.vggnet_19", "ZFNet", "models.zfnet", "lucid.models", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.LeakyReLU", "nn.ReLU", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Tanh", "Activation Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "lucid.nn", "optim.Optimizer", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.types", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.meshgrid", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.unsqueeze", "lucid.vstack", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": 163, "1d": 163, "2": 163, "2d": 163, "3": 163, "It": [162, 164], "ab": 195, "activ": [46, 64, 107, 118], "ad": 163, "adadelta": 151, "adagrad": 152, "adam": 153, "adamax": 155, "adamw": 154, "adaptive_avg_pool1d": 78, "adaptive_avg_pool2d": 79, "adaptive_avg_pool3d": 80, "adaptiveavgpool1d": 137, "adaptiveavgpool2d": 138, "adaptiveavgpool3d": 139, "add": 174, "addit": 16, "admonit": 165, "advanc": [57, 246], "alexnet": [20, 21], "algebra": 12, "algorithm": [150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "alias": 165, "align": 163, "alpha_dropout": 58, "alphadropout": 112, "also": 149, "anoth": 220, "arang": 185, "arcco": 196, "architectur": [20, 24, 25, 26, 32], "arcsin": 197, "arctan": 198, "asgd": 150, "attribut": [5, 20, 23, 27, 32, 35, 37, 38, 39, 40, 41, 42, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 173, 237, 238, 239, 240, 241, 242, 243, 244], "avg_pool1d": 81, "avg_pool2d": 82, "avg_pool3d": 83, "avgpool1d": 140, "avgpool2d": 141, "avgpool3d": 142, "axi": 163, "backpropag": 173, "backward": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 65, 67, 89, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 144, 145, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234], "batch_norm": 74, "batchnorm1d": 129, "batchnorm2d": 130, "batchnorm3d": 131, "bceloss": 123, "behavior": [78, 79, 80, 137, 138, 139], "benefit": 164, "bilinear": [65, 119], "binari": 194, "binary_cross_entropi": 68, "broadcast": 163, "buffer": 35, "calcul": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 57, 65, 67, 78, 79, 80, 89, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244], "case": 165, "centercrop": 237, "choleski": 9, "class": [0, 1, 2, 5, 20, 23, 27, 32, 35, 36, 37, 38, 39, 40, 41, 42, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 173, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244], "clip": 199, "co": 200, "combin": 0, "compon": [3, 7, 147], "compos": 235, "concatdataset": [0, 1], "concaten": 221, "conclus": [3, 7, 147, 162, 163, 164, 172, 236, 246], "constant": 91, "contain": 43, "conv1d": [53, 108], "conv2d": [54, 109], "conv3d": [55, 110], "convnet": [22, 34], "convolut": [56, 64, 111, 118], "core": 7, "cosh": 201, "creat": [37, 173, 220], "cross_entropi": 69, "crossentropyloss": 124, "cube": 202, "custom": [1, 2, 3, 36, 148, 149, 246], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 5, 6], "defin": [2, 36, 148, 149], "definit": 165, "det": 10, "detail": 16, "diag": 186, "dilat": 57, "div": 175, "dot": 176, "dropout": [59, 63, 64, 113, 117, 118], "dropout1d": [60, 114], "dropout2d": [61, 115], "dropout3d": [62, 116], "eig": 11, "elu": [44, 99], "empti": 187, "empty_lik": 188, "exampl": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246], "exp": 203, "ey": 189, "featur": [4, 7, 8, 149, 172, 246], "flatten": 222, "forward": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 57, 65, 67, 78, 79, 80, 89, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244], "from": 220, "function": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 24, 25, 26, 28, 29, 30, 31, 33, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 162, 164, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234], "futur": 4, "gelu": [45, 100], "gener": [166, 194], "get": 149, "grad_en": 162, "gradient": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 65, 67, 89, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 144, 145, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234], "guidelin": 165, "how": [162, 164], "hstack": 223, "huber_loss": 70, "huberloss": 125, "ident": 120, "imag": [6, 245], "index": 173, "init": [91, 93, 94, 95, 96, 97, 98], "initi": 92, "inner": 177, "input": 220, "inspect": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "instance_norm": 76, "instancenorm1d": 132, "instancenorm2d": 133, "instancenorm3d": 134, "integr": [3, 147, 172, 246], "interpol": 89, "inv": 13, "iter": 173, "kaiming_norm": 93, "kaiming_uniform": 94, "kei": [3, 4, 7, 147, 149, 172, 246], "layer": [107, 111, 117, 118, 122, 128, 136, 146], "layer_norm": 77, "layernorm": 135, "leaky_relu": 47, "leakyrelu": 101, "learn": 172, "lenet": 23, "lenet_1": 24, "lenet_4": 25, "lenet_5": 26, "limit": 7, "linalg": [8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "linear": [12, 64, 66, 67, 118, 121, 122], "list": 220, "load": 1, "log": 204, "loss": [64, 71, 118, 128], "lucid": [3, 4, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 34, 64, 147, 149, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 246], "matmul": 178, "matrix": 178, "matrix_pow": 14, "max": 205, "max_pool1d": 85, "max_pool2d": 86, "max_pool3d": 87, "maximum": 179, "maxpool1d": 143, "maxpool2d": 144, "maxpool3d": 145, "mean": 206, "meshgrid": 225, "method": [0, 1, 2, 5, 23, 27, 36, 37, 148, 173], "min": 207, "minimum": 180, "mnist": 5, "model": [21, 24, 25, 26, 28, 29, 30, 31, 33, 34, 147], "modul": [36, 118], "moduledict": 38, "modulelist": 39, "more": 172, "mse_loss": 72, "mseloss": 126, "mul": 181, "multipl": [0, 178], "nadam": 156, "new": 163, "newaxi": 163, "nll_loss": 73, "nllloss": 127, "nn": [35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147], "no_grad": 164, "norm": 15, "normal": [64, 75, 95, 118, 136, 238], "note": 7, "number": 166, "ones": 190, "ones_lik": 191, "oper": [12, 178, 194], "optim": [148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161], "organ": 147, "outer": 182, "overview": [3, 4, 7, 23, 24, 25, 26, 147, 149, 172, 246], "pad": 226, "paramet": [1, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 164, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244], "parameterdict": 40, "parameterlist": 41, "perform": 173, "pinv": 16, "pipelin": [3, 246], "pitfal": [162, 164], "pool": [64, 84, 118, 146], "potenti": [162, 164], "power": 183, "properti": [37, 173], "qr": 17, "radam": 157, "rais": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "rand": 167, "randint": 168, "randn": 169, "random": [166, 167, 168, 169, 170, 171, 172], "randomcrop": 239, "randomgrayscal": 240, "randomhorizontalflip": 241, "randomrot": 242, "randomverticalflip": 243, "ravel": 227, "reciproc": 208, "refer": [5, 149], "relu": [48, 102], "repeat": 228, "reshap": 229, "resiz": 244, "return": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 24, 25, 26, 28, 29, 30, 31, 33, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 162, 164, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234], "rmsprop": 158, "rotat": 90, "rprop": 159, "rule": 178, "see": 149, "seed": 170, "selu": [49, 103], "sequenti": 42, "sgd": 160, "sigmoid": [50, 104], "sign": 209, "signatur": [0, 1, 2, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 119, 120, 121, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 162, 164, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244], "sin": 210, "sinh": 211, "slice": 173, "softmax": [51, 105], "solv": 18, "sqrt": 212, "squar": 213, "squeez": 230, "stack": 231, "start": 149, "state": [149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160], "sub": 184, "sum": 214, "svd": 19, "tan": 215, "tanh": [52, 106, 216], "tensor": [163, 173, 194, 220, 224], "through": 173, "tile": 232, "totensor": 236, "trace": 217, "track": 173, "transform": [235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246], "transpos": 218, "type": 165, "unari": 194, "unfold": 57, "uniform": [96, 171], "unsqueez": 233, "us": [1, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 165, 220], "usag": [4, 7, 23, 24, 25, 26, 35, 90, 162, 163, 164, 165, 225, 235, 236, 246], "util": [64, 88], "utilit": 224, "var": 219, "vggnet": 27, "vggnet_11": 28, "vggnet_13": 29, "vggnet_16": 30, "vggnet_19": 31, "vstack": 234, "weight": 92, "why": 165, "work": [4, 162, 164], "xavier_norm": 97, "xavier_uniform": 98, "zero": 192, "zeros_lik": 193, "zfnet": [32, 33]}})