Search.setIndex({"alltitles": {"@ Operator": [[112, "operator"]], "Activation Functions": [[18, null]], "Activation Layers": [[65, null], [76, null]], "Additional Details": [[9, "additional-details"]], "Admonitions and Usage Guidelines": [[100, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[29, "advanced-example-with-dilation"]], "Attributes": [[13, "attributes"], [15, "attributes"], [57, "attributes"], [58, "attributes"], [59, "attributes"], [60, "attributes"], [61, "attributes"], [62, "attributes"], [63, "attributes"], [64, "attributes"], [66, "attributes"], [67, "attributes"], [68, "attributes"], [70, "attributes"], [71, "attributes"], [72, "attributes"], [73, "attributes"], [74, "attributes"], [77, "attributes"], [78, "attributes"], [79, "attributes"], [81, "attributes"], [82, "attributes"], [83, "attributes"], [84, "attributes"], [85, "attributes"], [86, "attributes"], [87, "attributes"], [89, "attributes"], [90, "attributes"], [91, "attributes"], [92, "attributes"], [93, "attributes"], [94, "attributes"], [107, "attributes"]], "Backward Gradient Calculation": [[2, "backward-gradient-calculation"], [3, "backward-gradient-calculation"], [4, "backward-gradient-calculation"], [6, "backward-gradient-calculation"], [7, "backward-gradient-calculation"], [8, "backward-gradient-calculation"], [9, "backward-gradient-calculation"], [10, "backward-gradient-calculation"], [11, "backward-gradient-calculation"], [12, "backward-gradient-calculation"], [16, "backward-gradient-calculation"], [17, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [20, "backward-gradient-calculation"], [21, "backward-gradient-calculation"], [22, "backward-gradient-calculation"], [23, "backward-gradient-calculation"], [24, "backward-gradient-calculation"], [37, "backward-gradient-calculation"], [39, "backward-gradient-calculation"], [57, "backward-gradient-calculation"], [58, "backward-gradient-calculation"], [59, "backward-gradient-calculation"], [60, "backward-gradient-calculation"], [61, "backward-gradient-calculation"], [62, "backward-gradient-calculation"], [63, "backward-gradient-calculation"], [64, "backward-gradient-calculation"], [66, "backward-gradient-calculation"], [67, "backward-gradient-calculation"], [68, "backward-gradient-calculation"], [70, "backward-gradient-calculation"], [71, "backward-gradient-calculation"], [72, "backward-gradient-calculation"], [73, "backward-gradient-calculation"], [74, "backward-gradient-calculation"], [77, "backward-gradient-calculation"], [78, "backward-gradient-calculation"], [79, "backward-gradient-calculation"], [81, "backward-gradient-calculation"], [82, "backward-gradient-calculation"], [83, "backward-gradient-calculation"], [84, "backward-gradient-calculation"], [85, "backward-gradient-calculation"], [86, "backward-gradient-calculation"], [87, "backward-gradient-calculation"], [89, "backward-gradient-calculation"], [90, "backward-gradient-calculation"], [91, "backward-gradient-calculation"], [92, "backward-gradient-calculation"], [93, "backward-gradient-calculation"], [94, "backward-gradient-calculation"], [108, "backward-gradient-calculation"], [109, "backward-gradient-calculation"], [110, "backward-gradient-calculation"], [111, "backward-gradient-calculation"], [112, "backward-gradient-calculation"], [113, "backward-gradient-calculation"], [114, "backward-gradient-calculation"], [115, "backward-gradient-calculation"], [116, "backward-gradient-calculation"], [117, "backward-gradient-calculation"], [118, "backward-gradient-calculation"], [126, "backward-gradient-calculation"], [127, "backward-gradient-calculation"], [128, "backward-gradient-calculation"], [129, "backward-gradient-calculation"], [130, "backward-gradient-calculation"], [131, "backward-gradient-calculation"], [132, "backward-gradient-calculation"], [133, "backward-gradient-calculation"], [134, "backward-gradient-calculation"], [135, "backward-gradient-calculation"], [136, "backward-gradient-calculation"], [137, "backward-gradient-calculation"], [138, "backward-gradient-calculation"], [139, "backward-gradient-calculation"], [140, "backward-gradient-calculation"], [141, "backward-gradient-calculation"], [142, "backward-gradient-calculation"], [143, "backward-gradient-calculation"], [144, "backward-gradient-calculation"], [145, "backward-gradient-calculation"], [146, "backward-gradient-calculation"], [147, "backward-gradient-calculation"], [148, "backward-gradient-calculation"], [149, "backward-gradient-calculation"], [150, "backward-gradient-calculation"], [152, "backward-gradient-calculation"], [154, "backward-gradient-calculation"], [156, "backward-gradient-calculation"], [157, "backward-gradient-calculation"], [158, "backward-gradient-calculation"], [159, "backward-gradient-calculation"], [160, "backward-gradient-calculation"], [161, "backward-gradient-calculation"], [162, "backward-gradient-calculation"], [163, "backward-gradient-calculation"], [164, "backward-gradient-calculation"]], "Benefits": [[99, "benefits"]], "Binary Functions": [[125, null]], "Class Signature": [[13, "class-signature"], [14, "class-signature"], [15, "class-signature"], [57, "class-signature"], [58, "class-signature"], [59, "class-signature"], [60, "class-signature"], [61, "class-signature"], [62, "class-signature"], [63, "class-signature"], [64, "class-signature"], [66, "class-signature"], [67, "class-signature"], [68, "class-signature"], [70, "class-signature"], [71, "class-signature"], [72, "class-signature"], [73, "class-signature"], [74, "class-signature"], [77, "class-signature"], [78, "class-signature"], [79, "class-signature"], [81, "class-signature"], [82, "class-signature"], [83, "class-signature"], [84, "class-signature"], [85, "class-signature"], [86, "class-signature"], [87, "class-signature"], [89, "class-signature"], [90, "class-signature"], [91, "class-signature"], [92, "class-signature"], [93, "class-signature"], [94, "class-signature"], [107, "class-signature"]], "Conclusion": [[0, "conclusion"], [96, "conclusion"], [97, "conclusion"], [98, "conclusion"], [99, "conclusion"], [106, "conclusion"]], "Convolution Functions": [[28, null], [36, null]], "Convolution Layers": [[69, null], [76, null]], "Core Components": [[0, "core-components"]], "Create a Tensor from a list": [[151, null]], "Creating a Parameter": [[15, null]], "Creating a tensor with gradient tracking": [[107, null]], "Defining a custom module": [[14, null]], "Dropout Functions": [[35, null], [36, null]], "Dropout Layers": [[75, null], [76, null]], "Example": [[2, "example"], [3, "example"], [4, "example"], [6, "example"], [7, "example"], [8, "example"], [9, "example"], [10, "example"], [11, "example"], [12, "example"], [29, "example"], [96, null], [96, null], [96, null], [97, "example"], [99, "example"], [102, "example"], [103, "example"], [104, "example"], [105, "example"], [106, null], [106, null], [106, null], [119, "example"], [120, "example"], [121, "example"], [122, "example"], [123, "example"], [124, "example"], [126, "example"], [127, "example"], [128, "example"], [129, "example"], [130, "example"], [131, "example"], [132, "example"], [133, "example"], [135, "example"], [137, "example"], [139, "example"], [140, "example"], [141, "example"], [142, "example"], [143, "example"], [144, "example"], [145, "example"], [146, "example"], [147, "example"], [148, "example"], [149, "example"], [150, "example"], [152, "example"], [154, "example"], [157, "example"], [159, "example"], [160, "example"], [161, "example"], [163, "example"], [164, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[98, null]], "Example 2: Adding a new axis to a 2D tensor": [[98, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[98, null]], "Example Usage": [[0, "example-usage"]], "Example Use Cases": [[100, "example-use-cases"]], "Examples": [[1, "examples"], [13, "examples"], [14, "examples"], [15, "examples"], [16, "examples"], [17, "examples"], [19, "examples"], [20, "examples"], [21, "examples"], [22, "examples"], [23, "examples"], [24, "examples"], [25, "examples"], [26, "examples"], [27, "examples"], [30, "examples"], [31, "examples"], [32, "examples"], [33, "examples"], [34, "examples"], [37, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [48, "examples"], [49, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [60, "examples"], [61, "examples"], [62, "examples"], [63, "examples"], [64, "examples"], [66, "examples"], [67, "examples"], [68, "examples"], [70, "examples"], [71, "examples"], [72, "examples"], [73, "examples"], [74, "examples"], [77, "examples"], [78, "examples"], [79, "examples"], [81, "examples"], [82, "examples"], [83, "examples"], [84, "examples"], [85, "examples"], [86, "examples"], [87, "examples"], [89, "examples"], [90, "examples"], [91, "examples"], [92, "examples"], [93, "examples"], [94, "examples"], [107, "examples"], [108, "examples"], [109, "examples"], [110, "examples"], [111, "examples"], [113, "examples"], [114, "examples"], [115, "examples"], [116, "examples"], [117, "examples"], [118, "examples"], [134, "examples"], [136, "examples"], [138, "examples"], [151, "examples"], [153, "examples"], [156, "examples"], [158, "examples"], [162, "examples"]], "Features": [[1, "features"]], "Forward Calculation": [[2, "forward-calculation"], [3, "forward-calculation"], [4, "forward-calculation"], [6, "forward-calculation"], [7, "forward-calculation"], [8, "forward-calculation"], [9, "forward-calculation"], [10, "forward-calculation"], [11, "forward-calculation"], [12, "forward-calculation"], [16, "forward-calculation"], [17, "forward-calculation"], [19, "forward-calculation"], [20, "forward-calculation"], [21, "forward-calculation"], [22, "forward-calculation"], [23, "forward-calculation"], [24, "forward-calculation"], [29, "forward-calculation"], [37, "forward-calculation"], [39, "forward-calculation"], [57, "forward-calculation"], [58, "forward-calculation"], [59, "forward-calculation"], [60, "forward-calculation"], [61, "forward-calculation"], [62, "forward-calculation"], [63, "forward-calculation"], [64, "forward-calculation"], [66, "forward-calculation"], [67, "forward-calculation"], [68, "forward-calculation"], [70, "forward-calculation"], [71, "forward-calculation"], [72, "forward-calculation"], [73, "forward-calculation"], [74, "forward-calculation"], [77, "forward-calculation"], [78, "forward-calculation"], [79, "forward-calculation"], [81, "forward-calculation"], [82, "forward-calculation"], [83, "forward-calculation"], [84, "forward-calculation"], [85, "forward-calculation"], [86, "forward-calculation"], [87, "forward-calculation"], [89, "forward-calculation"], [90, "forward-calculation"], [91, "forward-calculation"], [92, "forward-calculation"], [93, "forward-calculation"], [94, "forward-calculation"], [108, "forward-calculation"], [109, "forward-calculation"], [110, "forward-calculation"], [111, "forward-calculation"], [112, "forward-calculation"], [113, "forward-calculation"], [114, "forward-calculation"], [115, "forward-calculation"], [116, "forward-calculation"], [117, "forward-calculation"], [118, "forward-calculation"], [126, "forward-calculation"], [127, "forward-calculation"], [128, "forward-calculation"], [129, "forward-calculation"], [130, "forward-calculation"], [131, "forward-calculation"], [132, "forward-calculation"], [133, "forward-calculation"], [134, "forward-calculation"], [135, "forward-calculation"], [136, "forward-calculation"], [137, "forward-calculation"], [138, "forward-calculation"], [139, "forward-calculation"], [140, "forward-calculation"], [141, "forward-calculation"], [142, "forward-calculation"], [143, "forward-calculation"], [144, "forward-calculation"], [145, "forward-calculation"], [146, "forward-calculation"], [147, "forward-calculation"], [148, "forward-calculation"], [149, "forward-calculation"], [150, "forward-calculation"], [152, "forward-calculation"], [154, "forward-calculation"], [156, "forward-calculation"], [157, "forward-calculation"], [158, "forward-calculation"], [159, "forward-calculation"], [160, "forward-calculation"], [161, "forward-calculation"], [162, "forward-calculation"], [163, "forward-calculation"], [164, "forward-calculation"]], "Function Signature": [[2, "function-signature"], [3, "function-signature"], [4, "function-signature"], [6, "function-signature"], [7, "function-signature"], [8, "function-signature"], [9, "function-signature"], [10, "function-signature"], [11, "function-signature"], [12, "function-signature"], [16, "function-signature"], [17, "function-signature"], [19, "function-signature"], [20, "function-signature"], [21, "function-signature"], [22, "function-signature"], [23, "function-signature"], [24, "function-signature"], [25, "function-signature"], [26, "function-signature"], [27, "function-signature"], [29, "function-signature"], [30, "function-signature"], [31, "function-signature"], [32, "function-signature"], [33, "function-signature"], [34, "function-signature"], [37, "function-signature"], [39, "function-signature"], [40, "function-signature"], [41, "function-signature"], [42, "function-signature"], [44, "function-signature"], [45, "function-signature"], [46, "function-signature"], [48, "function-signature"], [49, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [54, "function-signature"], [55, "function-signature"], [56, "function-signature"], [97, "function-signature"], [99, "function-signature"], [102, "function-signature"], [103, "function-signature"], [104, "function-signature"], [105, "function-signature"], [108, "function-signature"], [109, "function-signature"], [110, "function-signature"], [111, "function-signature"], [112, "function-signature"], [113, "function-signature"], [114, "function-signature"], [115, "function-signature"], [116, "function-signature"], [117, "function-signature"], [118, "function-signature"], [119, "function-signature"], [120, "function-signature"], [121, "function-signature"], [122, "function-signature"], [123, "function-signature"], [124, "function-signature"], [126, "function-signature"], [127, "function-signature"], [128, "function-signature"], [129, "function-signature"], [130, "function-signature"], [131, "function-signature"], [132, "function-signature"], [133, "function-signature"], [134, "function-signature"], [135, "function-signature"], [136, "function-signature"], [137, "function-signature"], [138, "function-signature"], [139, "function-signature"], [140, "function-signature"], [141, "function-signature"], [142, "function-signature"], [143, "function-signature"], [144, "function-signature"], [145, "function-signature"], [146, "function-signature"], [147, "function-signature"], [148, "function-signature"], [149, "function-signature"], [150, "function-signature"], [151, "function-signature"], [152, "function-signature"], [153, "function-signature"], [154, "function-signature"], [156, "function-signature"], [157, "function-signature"], [158, "function-signature"], [159, "function-signature"], [160, "function-signature"], [161, "function-signature"], [162, "function-signature"], [163, "function-signature"], [164, "function-signature"]], "How It Works": [[97, "how-it-works"], [99, "how-it-works"]], "Indexing and slicing": [[107, null]], "Integration with lucid": [[96, "integration-with-lucid"], [106, "integration-with-lucid"]], "Iterating through a tensor": [[107, null]], "Key Components": [[96, "key-components"]], "Key Features": [[0, "key-features"], [106, "key-features"]], "Learn More": [[106, null]], "Limitations": [[0, "limitations"]], "Linear Algebra Operations": [[5, null]], "Linear Functions": [[36, null], [38, null]], "Linear Layers": [[76, null], [80, null]], "Loss Functions": [[36, null], [43, null]], "Lucid": [[0, null]], "Matrix Multiplication Rules": [[112, "matrix-multiplication-rules"]], "Methods": [[14, "methods"], [15, "methods"], [107, "methods"]], "Modules": [[76, null]], "Normalization Functions": [[36, null], [47, null]], "Normalization Layers": [[76, null], [88, null]], "Notes": [[0, "notes"]], "Organizing Models": [[96, "organizing-models"]], "Overview": [[0, "overview"], [96, "overview"], [106, "overview"]], "Parameters": [[2, "parameters"], [3, "parameters"], [4, "parameters"], [6, "parameters"], [7, "parameters"], [8, "parameters"], [9, "parameters"], [10, "parameters"], [11, "parameters"], [12, "parameters"], [13, "parameters"], [15, "parameters"], [16, "parameters"], [17, "parameters"], [19, "parameters"], [20, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [37, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [70, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [87, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [99, "parameters"], [102, "parameters"], [103, "parameters"], [104, "parameters"], [105, "parameters"], [107, "parameters"], [108, "parameters"], [109, "parameters"], [110, "parameters"], [111, "parameters"], [112, "parameters"], [113, "parameters"], [114, "parameters"], [115, "parameters"], [116, "parameters"], [117, "parameters"], [118, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [122, "parameters"], [123, "parameters"], [124, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [154, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"], [159, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [163, "parameters"], [164, "parameters"]], "Performing backpropagation": [[107, null]], "Pooling Functions": [[36, null], [53, null]], "Pooling Layers": [[76, null], [95, null]], "Potential Pitfalls": [[97, "potential-pitfalls"], [99, "potential-pitfalls"]], "Properties": [[15, "properties"], [107, "properties"]], "Raises": [[2, "raises"], [3, "raises"], [4, "raises"], [6, "raises"], [7, "raises"], [8, "raises"], [9, "raises"], [10, "raises"], [11, "raises"], [12, "raises"]], "Random Number Generations": [[101, null]], "Returns": [[2, "returns"], [3, "returns"], [4, "returns"], [6, "returns"], [7, "returns"], [8, "returns"], [9, "returns"], [10, "returns"], [11, "returns"], [12, "returns"], [16, "returns"], [17, "returns"], [19, "returns"], [20, "returns"], [21, "returns"], [22, "returns"], [23, "returns"], [24, "returns"], [25, "returns"], [26, "returns"], [27, "returns"], [29, "returns"], [30, "returns"], [31, "returns"], [32, "returns"], [33, "returns"], [34, "returns"], [37, "returns"], [39, "returns"], [40, "returns"], [41, "returns"], [42, "returns"], [44, "returns"], [45, "returns"], [46, "returns"], [48, "returns"], [49, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [54, "returns"], [55, "returns"], [56, "returns"], [97, "returns"], [99, "returns"], [102, "returns"], [103, "returns"], [104, "returns"], [105, "returns"], [108, "returns"], [109, "returns"], [110, "returns"], [111, "returns"], [112, "returns"], [113, "returns"], [114, "returns"], [115, "returns"], [116, "returns"], [117, "returns"], [118, "returns"], [119, "returns"], [120, "returns"], [121, "returns"], [122, "returns"], [123, "returns"], [124, "returns"], [126, "returns"], [127, "returns"], [128, "returns"], [129, "returns"], [130, "returns"], [131, "returns"], [132, "returns"], [133, "returns"], [134, "returns"], [135, "returns"], [136, "returns"], [137, "returns"], [138, "returns"], [139, "returns"], [140, "returns"], [141, "returns"], [142, "returns"], [143, "returns"], [144, "returns"], [145, "returns"], [146, "returns"], [147, "returns"], [148, "returns"], [149, "returns"], [150, "returns"], [151, "returns"], [152, "returns"], [153, "returns"], [154, "returns"], [156, "returns"], [157, "returns"], [158, "returns"], [159, "returns"], [160, "returns"], [161, "returns"], [162, "returns"], [163, "returns"], [164, "returns"]], "Tensor Generating Functions": [[125, null]], "Tensor Operations": [[125, null]], "Tensor Utilites": [[155, null]], "Type Definitions": [[100, "type-definitions"]], "Unary Functions": [[125, null]], "Usage": [[13, "usage"], [97, "usage"], [98, "usage"], [99, "usage"]], "Use another Tensor as input": [[151, null]], "Why Use Type Aliases?": [[100, null]], "activation Functions": [[36, null]], "lucid.Tensor": [[107, null]], "lucid.abs": [[126, null]], "lucid.add": [[108, null]], "lucid.arccos": [[127, null]], "lucid.arcsin": [[128, null]], "lucid.arctan": [[129, null]], "lucid.clip": [[130, null]], "lucid.concatenate": [[152, null]], "lucid.cos": [[131, null]], "lucid.cosh": [[132, null]], "lucid.cube": [[133, null]], "lucid.diag": [[119, null]], "lucid.div": [[109, null]], "lucid.dot": [[110, null]], "lucid.exp": [[134, null]], "lucid.eye": [[120, null]], "lucid.flatten": [[153, null]], "lucid.grad_enabled": [[97, null]], "lucid.hstack": [[154, null]], "lucid.inner": [[111, null]], "lucid.linalg": [[1, null]], "lucid.linalg.cholesky": [[2, null]], "lucid.linalg.det": [[3, null]], "lucid.linalg.eig": [[4, null]], "lucid.linalg.inv": [[6, null]], "lucid.linalg.matrix_power": [[7, null]], "lucid.linalg.norm": [[8, null]], "lucid.linalg.pinv": [[9, null]], "lucid.linalg.qr": [[10, null]], "lucid.linalg.solve": [[11, null]], "lucid.linalg.svd": [[12, null]], "lucid.log": [[135, null]], "lucid.matmul": [[112, null]], "lucid.max": [[136, null]], "lucid.maximum": [[113, null]], "lucid.mean": [[137, null]], "lucid.min": [[138, null]], "lucid.minimum": [[114, null]], "lucid.mul": [[115, null]], "lucid.newaxis": [[98, null]], "lucid.nn": [[96, null]], "lucid.nn.functional": [[36, null]], "lucid.no_grad": [[99, null]], "lucid.ones": [[121, null]], "lucid.ones_like": [[122, null]], "lucid.outer": [[116, null]], "lucid.pad": [[156, null]], "lucid.power": [[117, null]], "lucid.random": [[106, null]], "lucid.random.rand": [[102, null]], "lucid.random.randint": [[103, null]], "lucid.random.randn": [[104, null]], "lucid.random.seed": [[105, null]], "lucid.ravel": [[157, null]], "lucid.reciprocal": [[139, null]], "lucid.repeat": [[158, null]], "lucid.reshape": [[159, null]], "lucid.sign": [[140, null]], "lucid.sin": [[141, null]], "lucid.sinh": [[142, null]], "lucid.sqrt": [[143, null]], "lucid.square": [[144, null]], "lucid.squeeze": [[160, null]], "lucid.stack": [[161, null]], "lucid.sub": [[118, null]], "lucid.sum": [[145, null]], "lucid.tan": [[146, null]], "lucid.tanh": [[147, null]], "lucid.tensor": [[151, null]], "lucid.tile": [[162, null]], "lucid.trace": [[148, null]], "lucid.transpose": [[149, null]], "lucid.types": [[100, null]], "lucid.unsqueeze": [[163, null]], "lucid.var": [[150, null]], "lucid.vstack": [[164, null]], "lucid.zeros": [[123, null]], "lucid.zeros_like": [[124, null]], "nn.AlphaDropout": [[70, null]], "nn.AvgPool1d": [[89, null]], "nn.AvgPool2d": [[90, null]], "nn.AvgPool3d": [[91, null]], "nn.BatchNorm1d": [[81, null]], "nn.BatchNorm2d": [[82, null]], "nn.BatchNorm3d": [[83, null]], "nn.Bilinear": [[77, null]], "nn.Buffer": [[13, null]], "nn.Conv1d": [[66, null]], "nn.Conv2d": [[67, null]], "nn.Conv3d": [[68, null]], "nn.Dropout": [[71, null]], "nn.Dropout1d": [[72, null]], "nn.Dropout2d": [[73, null]], "nn.Dropout3d": [[74, null]], "nn.ELU": [[57, null]], "nn.GELU": [[58, null]], "nn.Identity": [[78, null]], "nn.InstanceNorm1d": [[84, null]], "nn.InstanceNorm2d": [[85, null]], "nn.InstanceNorm3d": [[86, null]], "nn.LayerNorm": [[87, null]], "nn.LeakyReLU": [[59, null]], "nn.Linear": [[79, null]], "nn.MaxPool1d": [[92, null]], "nn.MaxPool2d": [[93, null]], "nn.MaxPool3d": [[94, null]], "nn.Module": [[14, null]], "nn.Parameter": [[15, null]], "nn.ReLU": [[60, null]], "nn.SELU": [[61, null]], "nn.Sigmoid": [[62, null]], "nn.Softmax": [[63, null]], "nn.Tanh": [[64, null]], "nn.functional.alpha_dropout": [[30, null]], "nn.functional.avg_pool1d": [[50, null]], "nn.functional.avg_pool2d": [[51, null]], "nn.functional.avg_pool3d": [[52, null]], "nn.functional.batch_norm": [[46, null]], "nn.functional.bilinear": [[37, null]], "nn.functional.binary_cross_entropy": [[40, null]], "nn.functional.conv1d": [[25, null]], "nn.functional.conv2d": [[26, null]], "nn.functional.conv3d": [[27, null]], "nn.functional.cross_entropy": [[41, null]], "nn.functional.dropout": [[31, null]], "nn.functional.dropout1d": [[32, null]], "nn.functional.dropout2d": [[33, null]], "nn.functional.dropout3d": [[34, null]], "nn.functional.elu": [[16, null]], "nn.functional.gelu": [[17, null]], "nn.functional.huber_loss": [[42, null]], "nn.functional.instance_norm": [[48, null]], "nn.functional.layer_norm": [[49, null]], "nn.functional.leaky_relu": [[19, null]], "nn.functional.linear": [[39, null]], "nn.functional.max_pool1d": [[54, null]], "nn.functional.max_pool2d": [[55, null]], "nn.functional.max_pool3d": [[56, null]], "nn.functional.mse_loss": [[44, null]], "nn.functional.nll_loss": [[45, null]], "nn.functional.relu": [[20, null]], "nn.functional.selu": [[21, null]], "nn.functional.sigmoid": [[22, null]], "nn.functional.softmax": [[23, null]], "nn.functional.tanh": [[24, null]], "nn.functional.unfold": [[29, null]]}, "docnames": ["index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/nn", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/types", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/unsqueeze", "tensor/utilities/vstack"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/nn.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/types.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst"], "indexentries": {"abs() (in module lucid)": [[126, "lucid.abs", false]], "add() (in module lucid)": [[108, "lucid.add", false]], "alpha_dropout() (in module lucid.nn.functional)": [[30, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[70, "lucid.nn.AlphaDropout", false]], "arccos() (in module lucid)": [[127, "lucid.arccos", false]], "arcsin() (in module lucid)": [[128, "lucid.arcsin", false]], "arctan() (in module lucid)": [[129, "lucid.arctan", false]], "avg_pool1d() (in module lucid.nn.functional)": [[50, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[51, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[52, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[89, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[90, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[91, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[46, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[81, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[82, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[83, "lucid.nn.BatchNorm3d", false]], "bilinear (class in lucid.nn)": [[77, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[37, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[40, "lucid.nn.functional.binary_cross_entropy", false]], "buffer (class in lucid.nn)": [[13, "lucid.nn.Buffer", false]], "cholesky() (in module lucid.linalg)": [[2, "lucid.linalg.cholesky", false]], "clip() (in module lucid)": [[130, "lucid.clip", false]], "concatenate() (in module lucid)": [[152, "lucid.concatenate", false]], "conv1d (class in lucid.nn)": [[66, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[25, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[67, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[26, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[68, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[27, "lucid.nn.functional.conv3d", false]], "cos() (in module lucid)": [[131, "lucid.cos", false]], "cosh() (in module lucid)": [[132, "lucid.cosh", false]], "cross_entropy() (in module lucid.nn.functional)": [[41, "lucid.nn.functional.cross_entropy", false]], "cube() (in module lucid)": [[133, "lucid.cube", false]], "det() (in module lucid.linalg)": [[3, "lucid.linalg.det", false]], "diag() (in module lucid)": [[119, "lucid.diag", false]], "div() (in module lucid)": [[109, "lucid.div", false]], "dot() (in module lucid)": [[110, "lucid.dot", false]], "dropout (class in lucid.nn)": [[71, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[31, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[72, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[32, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[73, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[33, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[74, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[34, "lucid.nn.functional.dropout3d", false]], "eig() (in module lucid.linalg)": [[4, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[57, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[16, "lucid.nn.functional.elu", false]], "exp() (in module lucid)": [[134, "lucid.exp", false]], "eye() (in module lucid)": [[120, "lucid.eye", false]], "flatten() (in module lucid)": [[153, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[58, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[17, "lucid.nn.functional.gelu", false]], "grad_enabled() (in module lucid)": [[97, "lucid.grad_enabled", false]], "hstack() (in module lucid)": [[154, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[42, "lucid.nn.functional.huber_loss", false]], "identity (class in lucid.nn)": [[78, "lucid.nn.Identity", false]], "inner() (in module lucid)": [[111, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[48, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[84, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[85, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[86, "lucid.nn.InstanceNorm3d", false]], "inv() (in module lucid.linalg)": [[6, "lucid.linalg.inv", false]], "layer_norm() (in module lucid.nn.functional)": [[49, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[87, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[19, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[59, "lucid.nn.LeakyReLU", false]], "linear (class in lucid.nn)": [[79, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[39, "lucid.nn.functional.linear", false]], "log() (in module lucid)": [[135, "lucid.log", false]], "lucid": [[0, "module-lucid", false]], "matmul() (in module lucid)": [[112, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[7, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[136, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[54, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[55, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[56, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[113, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[92, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[93, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[94, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[137, "lucid.mean", false]], "min() (in module lucid)": [[138, "lucid.min", false]], "minimum() (in module lucid)": [[114, "lucid.minimum", false]], "module": [[0, "module-lucid", false]], "module (class in lucid.nn)": [[14, "lucid.nn.Module", false]], "mse_loss() (in module lucid.nn.functional)": [[44, "lucid.nn.functional.mse_loss", false]], "mul() (in module lucid)": [[115, "lucid.mul", false]], "nll_loss() (in module lucid.nn.functional)": [[45, "lucid.nn.functional.nll_loss", false]], "no_grad() (in module lucid)": [[99, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[8, "lucid.linalg.norm", false]], "ones() (in module lucid)": [[121, "lucid.ones", false]], "ones_like() (in module lucid)": [[122, "lucid.ones_like", false]], "outer() (in module lucid)": [[116, "lucid.outer", false]], "pad() (in module lucid)": [[156, "lucid.pad", false]], "parameter (class in lucid.nn)": [[15, "lucid.nn.Parameter", false]], "pinv() (in module lucid.linalg)": [[9, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[117, "lucid.power", false]], "qr() (in module lucid.linalg)": [[10, "lucid.linalg.qr", false]], "rand() (in module lucid.random)": [[102, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[103, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[104, "lucid.random.randn", false]], "ravel() (in module lucid)": [[157, "lucid.ravel", false]], "reciprocal() (in module lucid)": [[139, "lucid.reciprocal", false]], "relu (class in lucid.nn)": [[60, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[20, "lucid.nn.functional.relu", false]], "repeat() (in module lucid)": [[158, "lucid.repeat", false]], "reshape() (in module lucid)": [[159, "lucid.reshape", false]], "seed() (in module lucid.random)": [[105, "lucid.random.seed", false]], "selu (class in lucid.nn)": [[61, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[21, "lucid.nn.functional.selu", false]], "sigmoid (class in lucid.nn)": [[62, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[22, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[140, "lucid.sign", false]], "sin() (in module lucid)": [[141, "lucid.sin", false]], "sinh() (in module lucid)": [[142, "lucid.sinh", false]], "softmax (class in lucid.nn)": [[63, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[23, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[11, "lucid.linalg.solve", false]], "sqrt() (in module lucid)": [[143, "lucid.sqrt", false]], "square() (in module lucid)": [[144, "lucid.square", false]], "squeeze() (in module lucid)": [[160, "lucid.squeeze", false]], "stack() (in module lucid)": [[161, "lucid.stack", false]], "sub() (in module lucid)": [[118, "lucid.sub", false]], "sum() (in module lucid)": [[145, "lucid.sum", false]], "svd() (in module lucid.linalg)": [[12, "lucid.linalg.svd", false]], "tan() (in module lucid)": [[146, "lucid.tan", false]], "tanh (class in lucid.nn)": [[64, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[147, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[24, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[107, "lucid.Tensor", false]], "tensor() (in module lucid)": [[151, "lucid.tensor", false]], "tile() (in module lucid)": [[162, "lucid.tile", false]], "trace() (in module lucid)": [[148, "lucid.trace", false]], "transpose() (in module lucid)": [[149, "lucid.transpose", false]], "unfold() (in module lucid.nn.functional)": [[29, "lucid.nn.functional.unfold", false]], "unsqueeze() (in module lucid)": [[163, "lucid.unsqueeze", false]], "var() (in module lucid)": [[150, "lucid.var", false]], "vstack() (in module lucid)": [[164, "lucid.vstack", false]], "zeros() (in module lucid)": [[123, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[124, "lucid.zeros_like", false]]}, "objects": {"": [[0, 0, 0, "-", "lucid"]], "lucid": [[107, 1, 1, "", "Tensor"], [126, 2, 1, "", "abs"], [108, 2, 1, "", "add"], [127, 2, 1, "", "arccos"], [128, 2, 1, "", "arcsin"], [129, 2, 1, "", "arctan"], [130, 2, 1, "", "clip"], [152, 2, 1, "", "concatenate"], [131, 2, 1, "", "cos"], [132, 2, 1, "", "cosh"], [133, 2, 1, "", "cube"], [119, 2, 1, "", "diag"], [109, 2, 1, "", "div"], [110, 2, 1, "", "dot"], [134, 2, 1, "", "exp"], [120, 2, 1, "", "eye"], [153, 2, 1, "", "flatten"], [97, 2, 1, "", "grad_enabled"], [154, 2, 1, "", "hstack"], [111, 2, 1, "", "inner"], [135, 2, 1, "", "log"], [112, 2, 1, "", "matmul"], [136, 2, 1, "", "max"], [113, 2, 1, "", "maximum"], [137, 2, 1, "", "mean"], [138, 2, 1, "", "min"], [114, 2, 1, "", "minimum"], [115, 2, 1, "", "mul"], [99, 2, 1, "", "no_grad"], [121, 2, 1, "", "ones"], [122, 2, 1, "", "ones_like"], [116, 2, 1, "", "outer"], [156, 2, 1, "", "pad"], [117, 2, 1, "", "power"], [157, 2, 1, "", "ravel"], [139, 2, 1, "", "reciprocal"], [158, 2, 1, "", "repeat"], [159, 2, 1, "", "reshape"], [140, 2, 1, "", "sign"], [141, 2, 1, "", "sin"], [142, 2, 1, "", "sinh"], [143, 2, 1, "", "sqrt"], [144, 2, 1, "", "square"], [160, 2, 1, "", "squeeze"], [161, 2, 1, "", "stack"], [118, 2, 1, "", "sub"], [145, 2, 1, "", "sum"], [146, 2, 1, "", "tan"], [147, 2, 1, "", "tanh"], [151, 2, 1, "", "tensor"], [162, 2, 1, "", "tile"], [148, 2, 1, "", "trace"], [149, 2, 1, "", "transpose"], [163, 2, 1, "", "unsqueeze"], [150, 2, 1, "", "var"], [164, 2, 1, "", "vstack"], [123, 2, 1, "", "zeros"], [124, 2, 1, "", "zeros_like"]], "lucid.linalg": [[2, 2, 1, "", "cholesky"], [3, 2, 1, "", "det"], [4, 2, 1, "", "eig"], [6, 2, 1, "", "inv"], [7, 2, 1, "", "matrix_power"], [8, 2, 1, "", "norm"], [9, 2, 1, "", "pinv"], [10, 2, 1, "", "qr"], [11, 2, 1, "", "solve"], [12, 2, 1, "", "svd"]], "lucid.nn": [[70, 1, 1, "", "AlphaDropout"], [89, 1, 1, "", "AvgPool1d"], [90, 1, 1, "", "AvgPool2d"], [91, 1, 1, "", "AvgPool3d"], [81, 1, 1, "", "BatchNorm1d"], [82, 1, 1, "", "BatchNorm2d"], [83, 1, 1, "", "BatchNorm3d"], [77, 1, 1, "", "Bilinear"], [13, 1, 1, "", "Buffer"], [66, 1, 1, "", "Conv1d"], [67, 1, 1, "", "Conv2d"], [68, 1, 1, "", "Conv3d"], [71, 1, 1, "", "Dropout"], [72, 1, 1, "", "Dropout1d"], [73, 1, 1, "", "Dropout2d"], [74, 1, 1, "", "Dropout3d"], [57, 1, 1, "", "ELU"], [58, 1, 1, "", "GELU"], [78, 1, 1, "", "Identity"], [84, 1, 1, "", "InstanceNorm1d"], [85, 1, 1, "", "InstanceNorm2d"], [86, 1, 1, "", "InstanceNorm3d"], [87, 1, 1, "", "LayerNorm"], [59, 1, 1, "", "LeakyReLU"], [79, 1, 1, "", "Linear"], [92, 1, 1, "", "MaxPool1d"], [93, 1, 1, "", "MaxPool2d"], [94, 1, 1, "", "MaxPool3d"], [14, 1, 1, "", "Module"], [15, 1, 1, "", "Parameter"], [60, 1, 1, "", "ReLU"], [61, 1, 1, "", "SELU"], [62, 1, 1, "", "Sigmoid"], [63, 1, 1, "", "Softmax"], [64, 1, 1, "", "Tanh"]], "lucid.nn.functional": [[30, 2, 1, "", "alpha_dropout"], [50, 2, 1, "", "avg_pool1d"], [51, 2, 1, "", "avg_pool2d"], [52, 2, 1, "", "avg_pool3d"], [46, 2, 1, "", "batch_norm"], [37, 2, 1, "", "bilinear"], [40, 2, 1, "", "binary_cross_entropy"], [25, 2, 1, "", "conv1d"], [26, 2, 1, "", "conv2d"], [27, 2, 1, "", "conv3d"], [41, 2, 1, "", "cross_entropy"], [31, 2, 1, "", "dropout"], [32, 2, 1, "", "dropout1d"], [33, 2, 1, "", "dropout2d"], [34, 2, 1, "", "dropout3d"], [16, 2, 1, "", "elu"], [17, 2, 1, "", "gelu"], [42, 2, 1, "", "huber_loss"], [48, 2, 1, "", "instance_norm"], [49, 2, 1, "", "layer_norm"], [19, 2, 1, "", "leaky_relu"], [39, 2, 1, "", "linear"], [54, 2, 1, "", "max_pool1d"], [55, 2, 1, "", "max_pool2d"], [56, 2, 1, "", "max_pool3d"], [44, 2, 1, "", "mse_loss"], [45, 2, 1, "", "nll_loss"], [20, 2, 1, "", "relu"], [21, 2, 1, "", "selu"], [22, 2, 1, "", "sigmoid"], [23, 2, 1, "", "softmax"], [24, 2, 1, "", "tanh"], [29, 2, 1, "", "unfold"]], "lucid.random": [[102, 2, 1, "", "rand"], [103, 2, 1, "", "randint"], [104, 2, 1, "", "randn"], [105, 2, 1, "", "seed"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [0, 1, 7, 9, 12, 13, 14, 15, 89, 92, 93, 96, 98, 112, 119, 135, 137, 145, 148, 150, 151, 160], "0": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 149, 150, 151, 152, 154, 156, 157, 158, 160, 161, 163, 164], "005": 59, "01": [19, 59], "01051757": 104, "044715": [17, 58], "04719755": 127, "0474259": 22, "05": [46, 48, 49, 59, 81, 82, 83, 84, 85, 86, 87], "0507": [21, 61], "07": [40, 41], "0706508": 64, "08333333": 9, "085537": 134, "0900": 63, "0986": [23, 63], "09861229": 135, "1": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 100, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164], "10": [26, 27, 37, 39, 66, 67, 68, 73, 74, 77, 79, 82, 83, 85, 90, 91, 93, 103, 106, 109, 112, 115, 116, 129, 145], "1014": 21, "10499": 22, "1050": 62, "11": [37, 66, 67, 68, 73, 77, 82, 83, 85, 90, 91, 93, 112], "1134": 37, "119": 37, "1192": [22, 23, 63], "12": [37, 66, 67, 68, 73, 74, 77, 82, 83, 85, 90, 91, 93, 112, 116, 117], "123": 105, "125": 91, "13": [37, 66, 67, 68, 77, 83, 90, 91, 93, 112], "14": [66, 67, 68, 73, 74, 77, 83, 90, 91, 93, 100, 112, 116], "145": 37, "15": [37, 66, 67, 68, 77, 83, 90, 91, 93, 112, 116, 148], "155": 112, "1588": [17, 58], "16": [66, 67, 68, 73, 74, 77, 82, 83, 90, 91, 93, 96, 112, 116, 143], "16227766": 10, "166": 112, "17": [66, 67, 68, 77, 83, 91, 111], "170": 37, "17520119": 142, "18": [66, 67, 68, 73, 77, 83, 91, 115, 116], "19": [26, 27, 37, 67, 68, 83, 110, 112], "1966": [23, 62, 63], "1d": [25, 50, 54, 81, 84, 112, 119, 148, 156, 157, 158, 162], "1e": [40, 41, 46, 48, 49, 81, 82, 83, 84, 85, 86, 87], "2": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 100, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164], "20": [67, 68, 73, 83, 116, 134], "204": 68, "21": [37, 67, 68, 83, 116], "211": 112, "22": [37, 67, 68, 73, 83, 110, 112], "2247": [81, 82, 83, 84, 85, 86, 87], "226": 112, "22752314": 104, "23": [67, 68, 83], "2324": 61, "24": [37, 67, 68, 73, 83, 116], "2424": [23, 63], "2447": 63, "25": [22, 62, 68, 83, 90, 91, 109, 139, 150], "2512": 57, "2547": 61, "26": [39, 68, 79, 83, 116], "26325684": 104, "2689": [23, 62, 63], "27": [37, 66, 68, 83, 133], "28": [37, 68, 116], "29": 68, "2_i": [84, 85, 86], "2d": [26, 33, 51, 55, 82, 85, 112, 119, 120, 148, 153, 156, 158, 162], "2x2": 29, "3": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 42, 44, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 130, 132, 133, 134, 135, 136, 137, 138, 142, 143, 144, 145, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164], "30": 68, "31": [37, 68, 112], "31622777": 10, "32": [37, 39, 67, 68, 79, 96, 110, 111, 116], "33": [39, 68, 79], "33333333": 9, "34": [37, 68, 112, 116], "35": 68, "36": 68, "3679": [16, 21, 57], "37": 66, "372": 37, "38344152": 102, "38629436": 135, "389056": 134, "3935": 57, "3d": [27, 34, 52, 56, 68, 83, 86], "3x3": 106, "4": [1, 2, 3, 4, 6, 8, 9, 10, 25, 26, 27, 29, 32, 33, 34, 37, 39, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 98, 100, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 124, 130, 135, 136, 137, 138, 139, 141, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 161, 162, 164], "41421356": 2, "41666667": 9, "41808962": 104, "419974": 24, "4199743": 64, "42": [37, 100, 106], "42718872": 10, "43": [110, 112], "4323": 57, "43758721": 102, "4472136": 4, "4495": [83, 86], "45": 37, "4545": 70, "47112767": 129, "48": [39, 79], "4979": 57, "5": [0, 1, 6, 7, 8, 9, 14, 15, 17, 22, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 42, 44, 46, 48, 49, 50, 51, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 98, 100, 103, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 122, 124, 126, 127, 128, 136, 137, 138, 139, 140, 145, 148, 149, 150, 151, 154, 159, 164], "50": [39, 79, 110, 112], "52359878": 128, "53": [37, 111], "54308063": 132, "545": 117, "5455": 70, "57": 37, "57079633": [127, 128], "57366333": 105, "6": [1, 9, 25, 26, 27, 29, 34, 37, 39, 66, 67, 68, 71, 72, 73, 74, 77, 79, 81, 82, 83, 84, 85, 86, 87, 90, 91, 93, 94, 98, 100, 108, 109, 110, 111, 112, 115, 116, 117, 118, 119, 122, 124, 136, 137, 138, 145, 148, 149, 150, 151, 154, 158, 159, 164], "6065": 57, "6124": [81, 82, 83, 84, 85, 86, 87], "62": 37, "62686041": 142, "6321": [16, 57], "63245553": 10, "64": 37, "64589411": 102, "6590": [23, 63], "6652": 63, "66666667": 9, "67": 112, "67326": 61, "6733": 21, "68811989": 104, "69314718": 135, "7": [8, 25, 26, 27, 29, 34, 37, 39, 40, 41, 58, 61, 62, 64, 66, 67, 68, 73, 74, 77, 79, 82, 83, 85, 86, 90, 91, 93, 94, 100, 103, 108, 110, 111, 112, 116, 118, 119, 134, 137, 145, 148, 149, 150, 162], "70710678": [4, 141], "7182818": 134, "7311": [23, 62, 63], "74": 112, "75": [39, 79], "7581": 21, "76159416": 147, "7616": [24, 64], "76219569": 132, "7635": 61, "772": 117, "78357324": 104, "78539816": 129, "79172504": 102, "8": [7, 11, 25, 26, 27, 29, 34, 37, 39, 40, 58, 61, 62, 64, 66, 67, 68, 71, 72, 73, 74, 77, 79, 82, 83, 85, 86, 90, 91, 93, 94, 100, 103, 109, 110, 111, 112, 116, 117, 119, 133, 137, 145, 148, 149, 150], "8182": 70, "82": 37, "8413": [17, 58], "8584": 61, "8808": [23, 62, 63], "887": 117, "891773": 102, "89442719": 4, "9": [11, 26, 29, 37, 39, 66, 67, 68, 73, 77, 79, 82, 83, 85, 90, 91, 93, 100, 103, 108, 112, 116, 117, 118, 119, 143, 144], "90709145": 105, "9091": 70, "9486833": 10, "9526": 22, "9545": 58, "96366276": 102, "9640": 64, "96402758": 147, "99734545": 105, "A": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 37, 39, 40, 41, 45, 46, 48, 49, 70, 71, 72, 73, 74, 81, 82, 83, 84, 85, 86, 87, 96, 99, 100, 102, 103, 104, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164], "As": 105, "By": [0, 15, 96, 98, 102, 103, 104], "For": [0, 2, 3, 4, 6, 7, 8, 9, 11, 16, 17, 19, 20, 21, 22, 24, 37, 39, 61, 66, 67, 68, 77, 79, 81, 82, 83, 84, 85, 86, 96, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 134, 135, 136, 137, 138, 141, 143, 145, 148, 149, 150, 156, 158, 160, 162, 163], "If": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 34, 37, 39, 46, 48, 66, 67, 68, 77, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164], "In": [0, 9, 25, 26, 27, 97, 98, 99], "It": [0, 9, 10, 11, 14, 34, 37, 58, 60, 64, 77, 78, 96, 98, 105, 108, 109, 110, 113, 114, 115, 117, 118, 136, 138, 152, 154, 156, 157, 158, 159, 160, 161, 162, 164], "Its": [11, 106], "Near": 9, "No": 29, "Not": 78, "The": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164], "There": 159, "These": [0, 1, 4, 7, 10, 12, 70, 71, 72, 73, 74, 81, 82, 83, 84, 85, 86, 87, 100, 106], "To": [104, 106], "With": 29, "_": [7, 16, 17, 19, 20, 21, 22, 24, 39, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 110, 111, 112, 116, 148, 149], "_1": [4, 37, 77, 116, 152, 154, 164], "_2": [4, 37, 77, 116, 152, 154, 164], "__call__": 14, "__init__": [0, 13, 14, 15, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 77, 79, 81, 82, 83, 84, 87, 89, 90, 91, 92, 93, 94, 96, 107], "__setattr__": 14, "_activ": 23, "_arraylik": [100, 119, 122, 124], "_arraylikeint": 156, "_arrayorscalar": [13, 15, 100, 107, 151], "_grad_en": [97, 99], "_i": [4, 8, 23, 37, 63, 81, 87, 89, 92, 110, 111, 113, 114, 116, 117, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 158, 160, 163, 164], "_j": [23, 63, 89, 92, 116, 137, 145, 149, 150], "_k": 161, "_modul": 14, "_n": [4, 152, 154, 164], "_numpyarrai": 100, "_out": [158, 162], "_p": 8, "_pad": 156, "_paddingstr": [66, 67, 68], "_paramet": 14, "_reductiontyp": [40, 41, 42, 44, 45], "_scalar": [100, 130], "_shapelik": [49, 87, 100, 103, 121, 123, 159, 160, 163], "_slope": 59, "_tensor": [13, 15, 119, 151], "_tensorop": 107, "_u": 9, "_v": 9, "_valu": [130, 156], "_width": 156, "a_i": [113, 114, 117], "ab": 125, "abil": 0, "about": 0, "abov": [0, 97, 99, 105, 119, 120], "absolut": [7, 8, 42, 126], "abstract": 96, "acceler": [61, 81, 82, 83], "accept": [78, 102, 107], "access": [13, 15, 159], "accord": [66, 67, 68, 77, 79, 149], "accordingli": 3, "account": [7, 9, 10], "accumul": [108, 109, 113, 114, 115, 118], "achiev": [25, 26, 27], "across": [13, 49, 81, 82, 83, 84, 85, 86, 87, 100, 102, 103, 104, 105, 106, 137, 150], "activ": [0, 16, 17, 19, 20, 21, 22, 23, 24, 30, 57, 58, 59, 60, 61, 62, 63, 64, 70, 71, 72, 73, 74, 81, 82, 83, 87, 136, 138], "actual": [15, 107], "ad": [14, 25, 26, 27, 37, 39, 40, 41, 46, 48, 49, 50, 51, 52, 54, 55, 56, 66, 67, 68, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 163], "add": [14, 37, 39, 66, 67, 68, 77, 79, 87, 98, 125, 156, 163], "add_modul": 14, "addit": [0, 7, 14, 37, 39, 46, 48, 77, 79, 81, 82, 83, 84, 85, 86, 98, 106, 108, 161], "adjust": [70, 81, 82, 83, 84, 85, 86, 87, 154, 164], "advanc": [9, 25, 26, 27, 96], "advantag": 99, "affect": [97, 157, 160], "affin": [81, 82, 83, 84, 85, 86, 87], "after": [7, 15, 34, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 70, 71, 72, 77, 78, 79, 81, 82, 83, 84, 87, 89, 90, 91, 92, 93, 94, 99, 107, 108, 109, 113, 114, 115, 117, 118, 156], "afterward": 99, "aggreg": [116, 158, 162], "aim": 0, "algebra": [0, 1, 120], "algorithm": [0, 7, 9, 10, 106], "align": [11, 111, 112], "all": [0, 10, 14, 26, 27, 51, 52, 55, 56, 59, 60, 68, 90, 91, 94, 96, 117, 136, 137, 138, 145, 148, 150, 152, 153, 154, 158, 160, 161, 162, 164], "allevi": 16, "allow": [0, 9, 10, 15, 16, 19, 20, 23, 27, 29, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 96, 98, 121, 123, 124, 149, 151], "along": [23, 63, 111, 112, 116, 136, 137, 138, 145, 148, 150, 152, 154, 158, 161, 162, 163, 164], "alongsid": 13, "alpha": [16, 19, 21, 30, 57, 61, 70], "alpha_dropout": [35, 36, 70], "alphadropout": [75, 76], "alphadropoutmodel": 70, "also": [16, 17, 19, 20, 21, 22, 24, 37, 39, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164], "alter": 159, "altern": [58, 112], "alwai": [15, 157], "amount": [25, 26, 27, 50, 51, 52, 54, 55, 56], "an": [0, 4, 6, 7, 9, 10, 12, 14, 17, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 57, 62, 66, 67, 68, 70, 71, 72, 73, 74, 77, 79, 87, 89, 90, 91, 92, 93, 94, 99, 100, 107, 112, 119, 120, 130, 137, 145, 150, 152, 158, 162, 163], "analog": [158, 162], "analysi": [66, 67, 68, 86, 89, 91, 92, 94], "ani": [7, 9, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 30, 31, 37, 39, 46, 48, 62, 87, 96, 97, 99, 105, 107, 119, 120, 121, 122, 123, 124, 136, 138, 149, 151, 152, 153, 154, 156, 158, 161, 162, 163, 164], "anoth": [118, 122, 124], "appli": [0, 7, 16, 17, 19, 20, 21, 22, 23, 24, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 70, 71, 72, 73, 74, 77, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 112, 156, 158], "applic": [9, 25, 48, 66, 67, 68, 77, 79, 106, 123, 156], "appropri": [9, 14, 66, 67, 68, 70, 71, 72, 90, 91, 97, 99], "approx": 21, "approxim": [9, 17, 58, 90, 93], "ar": [0, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 23, 25, 26, 27, 29, 37, 39, 63, 66, 67, 68, 70, 71, 72, 73, 74, 77, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 126, 130, 134, 136, 137, 138, 139, 140, 145, 148, 149, 152, 158, 159, 162], "arbitrari": [78, 130, 135, 137, 141, 143, 145, 149, 150], "arcco": 125, "architectur": [17, 60, 77, 78, 96], "arcsin": 125, "arctan": 125, "arg": [14, 78], "argument": [14, 78, 102, 149], "around": [4, 64], "arr": [100, 152, 154, 161, 164], "arrai": [0, 13, 15, 98, 100, 107, 112, 119, 122, 124, 151, 157, 158], "asarrai": 100, "assign": 14, "assum": 97, "attent": 37, "attribut": 14, "audio": 66, "augment": [106, 158, 162], "autodiff": 0, "autograd": 96, "automat": [0, 15, 96, 102, 103, 104, 107, 124], "auxiliari": 13, "avail": 0, "averag": [13, 50, 51, 52, 89, 90, 91, 137], "avg_pool": [89, 90, 91], "avg_pool1d": [36, 53], "avg_pool2d": [36, 53], "avg_pool3d": [36, 53], "avgpool1d": [76, 95], "avgpool1dmodel": 89, "avgpool2d": [76, 95], "avgpool2dmodel": 90, "avgpool3d": [76, 95], "avgpool3dmodel": 91, "avoid": [9, 99], "ax": [1, 98, 136, 137, 138, 145, 149, 150, 158, 160, 162], "axi": [23, 63, 111, 112, 136, 137, 138, 145, 150, 152, 154, 156, 158, 160, 161, 162, 163, 164], "b": [1, 11, 37, 39, 66, 67, 68, 77, 79, 98, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 152, 154, 161, 164], "b_i": [113, 114, 117], "back": [90, 91, 111, 116, 158, 162], "backpropag": [0, 3, 4, 6, 7, 9, 10, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 37, 39, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 99, 104, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 134, 136, 138, 151, 156, 158, 162], "backward": [0, 13, 15, 107], "base": [1, 6, 7, 10, 11, 14, 29, 37, 70, 96, 108, 109, 113, 114, 115, 117, 118, 124, 134, 135, 136, 138, 149, 156], "basic": [0, 25, 26, 27], "batch": [1, 7, 10, 12, 25, 26, 27, 29, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 66, 67, 68, 77, 79, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 112], "batch_norm": [36, 47, 81, 82, 83], "batchnorm1d": [76, 88], "batchnorm1dmodel": 81, "batchnorm2d": [76, 88], "batchnorm2dmodel": 82, "batchnorm3d": [76, 88], "batchnorm3dmodel": 83, "becaus": 103, "becom": [8, 14], "befor": [7, 15, 99, 105, 156], "begin": [8, 16, 19, 20, 21, 57, 59, 60, 61, 89, 90, 91, 92, 93, 94, 98, 106, 113, 114, 116, 126, 130, 136, 138, 140, 156], "behav": 148, "behavior": [97, 106, 112], "being": [70, 71, 72, 73, 74, 97, 99, 152, 154, 164], "below": [10, 112, 119, 120], "benefit": [16, 96, 100], "bernoulli": [70, 71, 72, 73, 74], "beta": [81, 82, 83, 84, 85, 86, 87], "better": [6, 17, 84, 85, 86, 96], "between": [14, 25, 26, 27, 29, 37, 42, 66, 67, 68, 70, 71, 72, 73, 74, 77, 106, 108, 109, 112, 115, 118, 150], "beyond": 0, "bia": [25, 26, 27, 37, 39, 46, 48, 49, 66, 67, 68, 77, 79, 81, 82, 83, 84, 85, 86, 87], "bias": [66, 67, 68, 79, 87, 96], "bilinear": [36, 38, 76, 80], "bilinearmodel": 77, "binari": [22, 40, 62, 70, 71, 72, 73, 74], "binary_cross_entropi": [36, 43], "block": [14, 29, 66, 67, 68, 99], "block1": 96, "block2": 96, "bmatrix": 116, "bool": [12, 14, 15, 30, 31, 32, 33, 34, 46, 48, 66, 67, 68, 77, 79, 81, 82, 83, 84, 85, 86, 87, 97, 102, 103, 104, 107, 119, 120, 121, 122, 123, 124, 136, 137, 138, 145, 150, 151], "both": [25, 39, 50, 54, 58, 66, 67, 89, 90, 92, 93, 110, 111, 112, 116, 119], "break": 96, "broadcast": [73, 74, 137, 145, 150, 159, 163], "build": [0, 14, 96], "built": [0, 96], "c": [29, 32, 33, 34, 41, 45, 46, 48, 50, 51, 52, 54, 55, 56, 73, 74, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 98, 154, 164], "c_": [66, 67, 68], "c_in": [25, 26, 27], "c_out": [25, 26, 27], "calcul": [0, 1, 15, 99, 103, 107], "calculu": [2, 9], "call": [14, 97, 108, 109, 112, 113, 114, 115, 117, 118], "can": [0, 2, 4, 6, 7, 9, 10, 12, 13, 15, 19, 25, 26, 27, 58, 59, 64, 66, 67, 68, 84, 85, 86, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 106, 107, 112, 120, 121, 123, 124, 137, 145, 150, 154, 156, 158, 159, 162, 163, 164], "cannot": [3, 4, 6, 7, 10, 11, 12], "capabl": [0, 119, 120, 121, 122, 123, 124], "captur": [29, 66, 67, 68, 77], "care": 99, "case": [8, 16, 19, 20, 21, 57, 59, 60, 61, 89, 90, 91, 92, 93, 94, 96, 98, 113, 114, 126, 130, 136, 138, 140, 156], "caus": 9, "cdot": [2, 3, 6, 7, 8, 11, 16, 17, 19, 21, 22, 25, 26, 27, 37, 39, 50, 51, 52, 54, 55, 56, 58, 62, 70, 77, 79, 81, 82, 83, 84, 85, 86, 87, 110, 111, 112, 115, 117], "center": 64, "central": 100, "certain": [3, 17, 37, 77, 97, 136, 138], "chain": [6, 7], "chang": [42, 98, 99, 157, 159, 163], "channel": [25, 26, 27, 29, 32, 33, 34, 46, 48, 50, 51, 52, 54, 55, 56, 66, 67, 68, 73, 74, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94], "check": 97, "choleski": 5, "chosen": 70, "clariti": 100, "class": [0, 23, 41, 45, 96, 119, 120, 121, 123, 151], "classif": [22, 23, 40, 41, 45, 62, 63], "cleaner": [99, 112], "clear": [15, 107], "clearli": 100, "clip": 125, "close": [6, 9, 61], "closer": 57, "co": [125, 141], "code": [7, 97, 99, 100, 106], "coeffici": 11, "col": 29, "collect": 1, "column": [3, 4, 6, 10, 11, 12, 29, 120, 154], "combin": [16, 17, 58, 96, 137, 145, 150, 152], "common": 29, "commonli": [0, 17, 22, 23, 24, 25, 27, 37, 44, 46, 48, 63, 68, 89, 90, 91, 92, 93, 94, 98, 100, 121, 160], "compar": [106, 161], "compat": [1, 78, 87, 96, 98, 106], "complex": [0, 4, 20, 60, 92, 94, 96], "compon": [9, 14, 107], "compos": [66, 67, 68, 89, 90, 91, 92, 93, 94, 96], "comput": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 29, 37, 39, 40, 41, 42, 44, 45, 46, 48, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 156, 158, 162], "computation": 9, "concaten": [25, 26, 27, 154, 155, 161, 164], "concept": [0, 9], "condit": [2, 3, 6], "conjunct": 29, "connect": [39, 66, 67, 68, 79], "consid": [6, 9, 96, 97], "consider": 9, "consist": [13, 100, 105, 106, 156], "consistent_tensor": 106, "constant": [40, 41, 46, 48, 49, 61, 81, 82, 83, 84, 85, 86, 87, 100, 156], "constant_pad": 156, "construct": [0, 96, 119, 158, 162], "contain": [3, 4, 9, 10, 11, 12, 14, 23, 29, 37, 39, 40, 41, 45, 108, 109, 110, 111, 113, 114, 115, 116, 118, 126, 127, 128, 129, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 153], "context": [97, 99], "contextmanag": 99, "contigu": 157, "continu": [59, 104], "contrast": [84, 85, 86], "contribut": [70, 71, 72, 73, 74, 89, 92, 93, 94, 148], "control": [57, 97, 106], "conv": [82, 83], "conv1": [66, 67, 68, 89, 90, 91, 92, 93, 94], "conv1d": [28, 36, 69, 76, 89, 92], "conv1dmodel": 66, "conv2": [66, 67, 68], "conv2d": [28, 36, 69, 76, 82, 90, 93, 96], "conv2dmodel": 67, "conv3d": [28, 36, 69, 76, 83, 91, 94], "conv3dmodel": 68, "convblock": 96, "convent": 112, "converg": [9, 64], "convert": [13, 15, 23, 63, 107], "convolut": [25, 26, 27, 29, 66, 67, 68, 90, 91, 93, 94, 156], "convolv": [25, 26, 27, 66, 67, 68], "core": [14, 96, 107], "correctli": [9, 14, 106], "correspond": [4, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 37, 39, 60, 63, 77, 79, 81, 82, 83, 84, 85, 86, 90, 91, 110, 111, 113, 114, 117, 134, 135, 141, 143, 154, 156, 158, 162, 164], "cosh": [125, 142, 147], "cosin": [127, 131, 132, 141], "could": 14, "count": 152, "cover": [1, 25, 26, 27], "creat": [0, 13, 14, 96, 98, 106, 120, 121, 122, 123, 124, 161], "critic": [9, 106], "cross": [40, 41], "cross_entropi": [36, 43], "cube": 125, "cumul": [17, 58], "current": [14, 97], "custom": [0, 13, 57, 59, 96, 106, 120], "custommodul": 13, "d": [27, 34, 52, 56, 83, 86, 87, 91, 94, 98, 119], "d_": [27, 52, 56, 68, 91, 94], "d_1": 87, "d_2": 87, "d_n": 87, "d_out": [27, 52, 56], "data": [0, 7, 13, 15, 24, 25, 27, 29, 33, 34, 39, 60, 64, 66, 67, 68, 79, 86, 89, 91, 94, 98, 100, 106, 107, 108, 109, 115, 118, 119, 120, 121, 122, 123, 124, 151, 156, 157, 158, 159, 160, 162], "dataset": 99, "ddot": 116, "debug": [97, 105], "decompos": [2, 10, 12], "decomposit": [1, 2, 6, 9, 10, 12], "deep": [0, 46, 58, 61, 96, 106], "deeper": [0, 61], "def": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 77, 79, 81, 82, 83, 84, 87, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164], "default": [8, 12, 13, 14, 15, 16, 19, 23, 25, 26, 27, 30, 31, 32, 33, 34, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 63, 66, 67, 68, 70, 71, 72, 73, 74, 77, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 97, 102, 103, 104, 107, 119, 120, 121, 122, 123, 124, 136, 137, 138, 145, 149, 150, 151, 152, 154, 156, 158, 161, 164], "defin": [0, 58, 89, 96, 100, 103, 104, 117, 130, 149], "definit": [0, 2], "delta": [23, 42, 63], "delta_": [23, 63], "demonstr": [0, 1, 96, 100], "denomin": [46, 48, 49, 81, 82, 83, 84, 85, 86, 87, 109], "denot": [7, 62, 66, 67, 68, 70, 71, 72, 73, 74, 149], "dens": 0, "dense1": 0, "dense2": 0, "densiti": [17, 58], "depend": [0, 7, 8, 40, 41, 42, 44, 45, 66, 110, 119, 136, 138, 158, 162], "depth": [27, 34, 52, 56, 68, 83, 86, 91, 94], "depthwis": [25, 26, 27], "deriv": [9, 10, 23, 58, 63, 64, 66, 67, 68, 77, 79], "descend": 12, "descent": 0, "describ": [3, 4], "deseri": 13, "design": [0, 1, 15, 16, 21, 61, 70, 96, 100], "desir": [13, 149, 151], "destin": 14, "det": [1, 5], "det_a": 3, "detail": [0, 106, 112], "determin": [0, 1, 2, 3, 66, 67, 68, 90, 91, 93, 94, 97, 102, 103, 104], "develop": [0, 96, 106], "diag": [9, 125], "diagon": [9, 10, 12, 119, 120, 148], "diagonaliz": 4, "dict": [14, 78], "dictionari": [14, 15], "differ": [7, 23, 37, 63, 77, 98, 105, 106, 118, 124, 150, 160], "differenti": [0, 2, 11, 58, 96, 102, 103, 104, 107, 121, 123], "dilat": [25, 26, 27, 66, 67, 68], "dilation_height": 29, "dilation_width": 29, "dimens": [3, 4, 6, 7, 10, 11, 12, 15, 23, 37, 39, 46, 48, 49, 63, 66, 67, 68, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 98, 100, 102, 107, 111, 136, 137, 138, 145, 148, 149, 150, 152, 154, 156, 158, 160, 161, 162, 163, 164], "dimension": [7, 9, 10, 12, 25, 26, 27, 50, 51, 52, 54, 55, 56, 66, 67, 68, 72, 73, 74, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 98, 111, 112, 116, 119, 134, 137, 145, 148, 150, 153, 157, 158, 160, 162], "direct": 4, "directli": [105, 106, 151], "disabl": [97, 99], "discontinu": 140, "discret": [103, 106], "distribut": [17, 23, 58, 63, 66, 67, 68, 70, 71, 72, 73, 74, 77, 79, 89, 90, 91, 102, 103, 104, 106, 137, 145, 148, 150, 161], "div": 125, "divid": [9, 23, 25, 26, 27, 63, 109], "divis": [0, 9, 25, 26, 27, 70, 71, 72, 73, 74, 109], "do": [9, 11, 13, 30, 31, 32, 33, 96, 97, 124, 148, 156], "document": [0, 100, 106], "doe": [0, 7, 8, 9, 10, 12, 13, 97, 99, 102, 103, 104, 105, 119, 120, 121, 122, 123, 124, 159], "doesn": 99, "don": 99, "dot": [4, 7, 87, 92, 93, 94, 111, 116, 125, 152, 154, 161, 164], "down": 96, "drawback": 16, "drawn": [102, 103, 104, 106], "drop": [70, 71, 72, 73, 74], "dropout": [17, 30, 32, 33, 34, 70, 72, 73, 74], "dropout1d": [35, 36, 75, 76], "dropout1dmodel": 72, "dropout2d": [35, 36, 75, 76], "dropout3d": [35, 36, 75, 76], "dropoutmodel": 71, "dtype": [13, 15, 107, 119, 120, 121, 122, 123, 124, 151], "due": [7, 9, 25, 26, 60], "dure": [0, 3, 4, 6, 9, 10, 12, 13, 14, 15, 23, 30, 31, 32, 33, 34, 46, 48, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97, 99, 107, 108, 136, 137, 138, 145, 150], "dy": [19, 59], "dynam": [14, 87, 97], "e": [3, 4, 6, 7, 10, 12, 13, 23, 62, 63, 70, 120, 132, 134, 135, 142, 147, 148, 152], "each": [4, 7, 9, 10, 12, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 37, 39, 46, 48, 60, 63, 66, 67, 68, 70, 71, 72, 73, 74, 77, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 152, 154, 156, 158, 161, 162, 164], "eas": 0, "easi": [0, 15], "easili": 15, "economi": 12, "edg": 156, "educ": 0, "effect": [23, 25, 26, 27, 29, 57, 58, 60, 62, 63, 64, 81, 82, 83, 84, 85, 86, 87, 97, 98, 99, 154, 164], "effici": [0, 1, 6, 11, 29, 96, 99], "eig": 5, "eigenvalu": [4, 10], "eigenvector": 4, "eigval": 4, "eigvec": 4, "either": [39, 100, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 151], "element": [9, 10, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 60, 63, 66, 67, 68, 70, 71, 72, 73, 74, 87, 89, 90, 91, 92, 93, 94, 98, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 153, 156, 158, 159, 160, 162], "elementwise_affin": 87, "elsewher": [92, 93, 94, 120], "elu": [18, 36, 65, 76], "elumodel": 57, "empti": 14, "enabl": [0, 7, 12, 14, 15, 60, 66, 67, 68, 77, 79, 96, 97, 99, 102, 103, 104, 107], "encapsul": [96, 107], "encourag": [71, 72, 73, 74], "end": [8, 16, 19, 20, 21, 57, 59, 60, 61, 89, 90, 91, 92, 93, 94, 113, 114, 116, 126, 130, 136, 138, 140, 152, 156], "enforc": 14, "engin": 9, "ensur": [9, 10, 11, 13, 14, 15, 23, 59, 63, 70, 71, 72, 73, 74, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 117, 137, 145, 150, 156], "enter": 99, "entir": [32, 33, 34, 73, 74, 106], "entri": 160, "entropi": [40, 41], "environ": 0, "ep": [40, 41, 46, 48, 49, 81, 82, 83, 84, 85, 86, 87], "epsilon": [81, 82, 83, 84, 85, 86, 87], "equal": [7, 89, 90, 91], "equat": [4, 9, 11], "equival": [112, 148, 157], "error": [4, 6, 14, 17, 42, 44, 58, 96, 99, 100], "especi": [62, 98, 99, 100, 105], "essenti": [0, 1, 7, 9, 26, 29, 96, 105, 106, 136], "euclidean": 8, "evalu": [14, 46, 48, 70, 71, 72, 73, 74, 81, 82, 83, 84, 85, 86], "even": [99, 119, 120, 121, 122, 123, 124], "everywher": 140, "exact": [14, 149], "exampl": 112, "except": [140, 152, 154, 164], "exclus": 103, "execut": 99, "exist": [11, 152], "exit": 99, "exp": [16, 21, 22, 24, 57, 61, 125], "expand": [29, 158, 162], "expect": [2, 70, 71, 72, 73, 74, 87, 96, 100], "experi": [0, 105, 106], "experiment": 106, "explan": [7, 9], "explod": [61, 81, 82, 83], "explor": [96, 106], "expon": [7, 117], "exponenti": [16, 21, 23, 57, 61, 63, 70, 134], "extern": 0, "extract": [29, 68, 89, 91, 119, 136, 138], "extrem": 9, "ey": 125, "f": [0, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 63], "facilit": [23, 63, 66, 67, 68, 96], "factor": [16, 25, 26, 27, 29, 100], "failur": 96, "fals": [12, 13, 14, 15, 30, 31, 32, 33, 34, 46, 48, 66, 67, 68, 77, 79, 97, 102, 103, 104, 107, 119, 120, 121, 122, 123, 124, 136, 137, 138, 145, 150, 151], "faster": 99, "fc": [67, 68, 89, 90, 91, 92, 93, 94], "fc1": [58, 60, 61, 62, 64, 79], "fc2": [58, 60, 61, 62, 64, 79], "featur": [37, 39, 46, 68, 71, 72, 73, 74, 77, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96], "feed": 107, "fill": [102, 103, 104, 121, 122, 123, 124], "filter": [25, 26, 27, 29, 67, 68], "filter_height": 29, "filter_s": 29, "filter_width": 29, "find": [11, 136, 138], "finish": 99, "first": [4, 37, 77, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 164], "fit": 96, "fix": 156, "flatten": [29, 116, 155, 157, 158], "flexibl": [0, 96, 100, 121, 122], "float": [13, 15, 16, 19, 30, 31, 32, 33, 34, 40, 41, 42, 46, 48, 49, 57, 59, 70, 71, 72, 73, 74, 81, 82, 83, 84, 85, 86, 87, 100, 107, 130, 151], "float32": [13, 15, 107, 119, 120, 121, 123, 151], "float64": [124, 151], "flow": [58, 62, 64, 66, 67, 68, 77, 79, 97], "focu": 0, "focus": 0, "follow": [0, 1, 4, 10, 11, 12, 16, 17, 19, 20, 21, 22, 23, 24, 37, 39, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97, 100, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 136, 138, 159], "form": [10, 116, 158, 162], "formul": 17, "formula": [4, 12, 23, 63, 112, 150], "forward": [0, 13, 14, 96], "found": 0, "foundat": [14, 96, 107], "four": 156, "frac": [2, 3, 4, 6, 7, 8, 9, 11, 12, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 37, 39, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164], "frame": 34, "framework": [0, 81, 82, 83, 84, 85, 86], "from": [0, 7, 9, 13, 14, 15, 29, 37, 46, 48, 66, 67, 68, 70, 71, 72, 73, 74, 77, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 96, 98, 99, 100, 102, 103, 104, 106, 107, 112, 113, 114, 118, 119, 136, 137, 138, 145, 150, 152, 154, 158, 160, 161, 162, 164], "full": 12, "full_matric": 12, "fulli": [1, 39, 79, 106], "function": [0, 1, 14, 57, 58, 59, 60, 61, 62, 63, 64, 70, 71, 72, 73, 74, 81, 82, 83, 84, 85, 86, 87, 96, 100, 106], "fundament": [0, 39, 79], "further": [0, 106, 137, 145, 150], "futur": 78, "g": [3, 4, 7, 10, 12, 70, 152], "gamma": [81, 82, 83, 84, 85, 86, 87], "gaussian": [17, 58], "gelu": [18, 36, 65, 76], "gelunetwork": 58, "gener": [9, 70, 71, 72, 73, 74, 85, 99, 102, 103, 104, 105, 106, 111], "give": 0, "given": [3, 4, 7, 9, 10, 12, 29, 97, 122, 124], "global": [97, 99, 105, 106], "grad": [13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 29, 37, 39, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164], "grad_output": 7, "gradient": [0, 1, 13, 15, 96, 97, 99, 102, 103, 104, 119, 120, 121, 122, 123, 124, 151], "graph": [0, 107, 119, 120, 121, 122, 123, 124], "greater": 130, "group": [25, 26, 27, 66, 67, 68], "guarante": 105, "h": [26, 27, 29, 33, 34, 51, 52, 55, 56, 82, 83, 85, 86, 91, 94], "h_": [26, 27, 51, 52, 55, 56, 67, 68, 90, 91, 93, 94], "h_out": [26, 27, 51, 52, 55, 56], "h_stack": 154, "ha": [4, 25, 26, 27, 81, 82, 83, 84, 85, 86, 87, 112, 148, 152, 154, 161, 164], "half": 143, "hand": 11, "handl": [0, 9, 14, 96, 99], "hardwar": 0, "have": [3, 4, 6, 9, 10, 12, 15, 26, 27, 96, 120, 121, 122, 123, 124, 136, 138, 152, 154, 160, 161, 164], "height": [26, 27, 29, 33, 34, 51, 52, 55, 56, 67, 68, 82, 83, 85, 86, 90, 91, 93, 94], "help": [0, 19, 21, 34, 57, 59, 61, 64, 81, 82, 83, 89, 90, 92, 93, 97, 98, 99, 100], "henc": 159, "here": [2, 14, 37, 96, 98, 99, 100, 106], "hierarch": 96, "hierarchi": 67, "high": [0, 103], "higher": [111, 112, 116, 134], "highest": 103, "highlight": [92, 93, 94], "hint": 100, "histori": [102, 103, 104, 119, 120, 121, 122, 123, 124], "horizont": [154, 161], "how": [0, 96, 100], "howev": 13, "hstack": 155, "huber": 42, "huber_loss": [36, 43], "hyperbol": [24, 64, 132, 142, 147], "i": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164], "ideal": 0, "ident": [6, 7, 76, 80, 105, 106, 120, 159], "ii": 148, "ij": [23, 63, 110, 111, 112, 116], "ik": [110, 111, 112], "ill": [3, 9], "imag": [26, 48, 67, 85], "implement": [0, 9, 14, 29, 154, 164], "impli": [66, 67], "import": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164], "improp": 106, "improv": [46, 58, 61, 64, 100], "in1_featur": [37, 77], "in2_featur": [37, 77], "in_channel": [66, 67, 68, 82, 83, 89, 90, 91, 92, 93, 94, 96], "in_featur": [39, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 70, 71, 72, 77, 79, 81, 84, 87, 89, 90, 91, 92, 93, 94], "includ": [0, 1, 7, 8, 14, 15, 96, 100, 106, 112, 156], "inclus": [15, 103], "incom": [39, 79], "incorpor": [12, 58], "increas": [25, 26, 27, 29, 98, 154, 164], "independ": [25, 26, 27, 70, 71, 72, 73, 74, 87, 112], "index": [98, 119, 120, 159], "indic": [15, 41, 45, 89, 97, 107], "individu": 87, "induc": [21, 61], "inf": 146, "infer": 99, "infin": [10, 12], "inform": [0, 13, 99], "infti": 8, "initi": [13, 15, 66, 67, 68, 77, 79, 81, 82, 83, 87, 96, 102, 105, 106, 120, 121, 122, 123, 124, 151], "inner": [0, 110, 125], "input": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 99, 100, 106, 107, 108, 110, 111, 112, 116, 119, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164], "input1": 77, "input2": 77, "input_": [16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56], "input_1": 37, "input_2": 37, "input_data": [57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 78, 79, 81, 82, 83, 84, 87, 89, 90, 91, 92, 93, 94], "input_s": 63, "input_tensor": [0, 13, 23, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96], "insid": [97, 99], "insight": 0, "inspect": [14, 15], "instabl": 9, "instal": 0, "instanc": [0, 14, 15, 48, 84, 85, 86, 87, 151, 158, 162], "instance_norm": [36, 47, 84, 85, 86], "instancenorm1d": [76, 88], "instancenorm1dmodel": 84, "instancenorm2d": [76, 88], "instancenorm3d": [76, 88], "instead": [0, 99, 100], "int": [7, 8, 13, 15, 23, 25, 26, 27, 29, 49, 50, 51, 52, 54, 55, 56, 63, 66, 67, 68, 77, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 102, 103, 104, 105, 107, 119, 120, 121, 123, 130, 136, 137, 138, 145, 149, 150, 151, 152, 156, 158, 159, 160, 161, 162, 163], "integ": [7, 25, 26, 27, 66, 67, 68, 87, 90, 91, 92, 93, 94, 100, 103, 104, 106, 121, 123, 137, 145, 149, 150, 156, 158, 159, 162], "integr": [1, 15, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 77, 79, 89, 90, 91, 92, 93, 94], "intend": 13, "intens": 9, "intent": 100, "interact": [37, 77, 96, 106], "interfac": 14, "interfer": [97, 99], "intermedi": 9, "intern": 96, "interpret": [23, 63, 100, 152], "interv": 102, "introduc": [20, 58, 60, 62, 64, 70, 71, 72, 73, 74], "intuit": [0, 96], "inv": 5, "inv_a": 6, "invari": [90, 93], "invers": [0, 3, 6, 7, 9, 127, 128, 129], "invert": [3, 6, 7, 11], "involv": [2, 3, 4, 6, 9, 10, 12, 16, 17, 19, 20, 21, 22, 24, 37, 39, 66, 67, 68, 77, 79, 100, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 124, 134, 135, 136, 138, 141, 143, 156, 158, 162], "is_leaf": 107, "issu": [61, 81, 82, 83], "iter": [13, 14], "ith": [23, 63], "its": [7, 9, 13, 25, 26, 27, 29, 58, 60, 92, 93, 94, 96, 97, 98, 99, 123, 136, 138, 151, 159], "itself": [2, 7], "j": [23, 63, 81, 82, 83, 84, 85, 86, 89, 90, 92, 93, 161], "jk": 111, "join": 152, "k": [7, 25, 66, 82, 83, 85, 86, 89, 92, 93, 110, 111, 119, 120, 152], "k_d": [27, 68, 91, 94], "k_h": [26, 27, 67, 68, 90, 91, 94], "k_w": [26, 27, 67, 68, 90, 91, 94], "keep": [14, 60, 99, 159], "keep_grad": [15, 102, 103, 104, 107, 119, 120, 121, 122, 123, 124, 151], "keep_var": 14, "keepdim": [136, 137, 138, 145, 150], "kei": 14, "kept": [137, 145, 150], "kernel": [25, 26, 27, 29, 50, 51, 52, 54, 55, 56, 66, 67, 68, 90, 91, 94], "kernel_s": [50, 51, 52, 54, 55, 56, 66, 67, 68, 82, 83, 89, 90, 91, 92, 93, 94], "keyerror": 14, "keyword": [14, 78], "kj": [110, 112], "kroneck": [23, 63], "kwarg": [14, 78], "l": [2, 9, 25, 32, 50, 54, 70, 71, 72, 73, 74, 81, 82, 83, 84, 85, 86, 87], "l_": [25, 50, 54, 66, 89, 92], "l_out": [25, 50, 54], "lambda": [4, 21, 61], "lambda_1": 4, "lambda_2": 4, "lambda_i": 4, "lambda_n": 4, "languag": [66, 77, 89, 92], "larg": [9, 96, 99], "larger": [25, 26, 27, 29, 113, 156], "largest": 136, "last": [23, 49, 63, 111, 112, 152], "layer": [0, 14, 23, 39, 46, 48, 49, 63, 66, 67, 68, 77, 78, 79, 87, 89, 90, 91, 92, 93, 94, 96, 106, 156], "layer_norm": [36, 47, 87], "layernorm": [76, 88], "layernormmodel": 87, "lead": [58, 84, 85, 86, 87, 106], "leaf": 107, "leaki": [19, 59], "leaky_relu": [18, 36, 59], "leakyrelu": [65, 76], "learn": [0, 7, 9, 20, 23, 57, 59, 60, 63, 66, 67, 68, 71, 72, 73, 74, 77, 79, 96, 98, 105], "learnabl": [13, 14, 15, 46, 48, 49, 66, 67, 68, 77, 79, 81, 82, 83, 84, 85, 86, 87, 96], "least": [9, 10, 12, 148], "left": [7, 8, 9, 12, 17, 23, 58, 63, 81, 82, 83, 84, 85, 86, 87, 92, 93, 94], "length": [25, 32, 50, 54, 66, 78, 81, 84, 89, 92, 156], "leq": [117, 130], "less": [16, 19, 42, 57, 59, 130], "let": 4, "level": 0, "leverag": [11, 96], "librari": [0, 1, 14, 96, 100, 106, 107], "lightweight": 0, "like": [0, 13, 14, 25, 61, 70, 81, 82, 83, 84, 85, 86, 97, 98, 100, 151], "likelihood": 45, "limit": 130, "linalg": [0, 5], "linalgerror": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12], "linear": [0, 1, 2, 9, 10, 11, 16, 17, 19, 20, 21, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 70, 71, 72, 77, 78, 81, 84, 87, 89, 90, 91, 92, 93, 94, 120], "list": [13, 15, 49, 78, 87, 100, 103, 107, 119, 121, 122, 123, 124, 149, 159, 160, 163], "liter": [40, 41, 42, 44, 45, 66, 67, 68], "ln": 117, "load": [13, 14, 15], "load_state_dict": 14, "local": [29, 66], "log": [45, 125], "logarithm": [117, 134, 135], "logic": 96, "logit": [23, 63], "long": 149, "loss": [0, 9, 23, 40, 41, 42, 44, 45, 57, 58, 59, 60, 61, 62, 63, 64, 70, 71, 72, 73, 74, 78, 81, 82, 83, 84, 85, 86, 87], "low": [0, 103], "lower": 2, "lowest": 103, "lu": 6, "lucid": [5, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 101, 125, 155], "m": [90, 91, 93, 94, 120], "machin": [0, 9, 98, 105], "mai": [0, 4, 6, 9, 99, 106], "main": [0, 10, 119, 120], "maintain": [9, 13, 14, 21, 57, 58, 61, 70, 71, 72, 73, 74, 81, 82, 83, 84, 85, 86], "make": [0, 62, 87, 90, 93, 96, 98, 106, 107, 112], "manag": [0, 14, 96, 97, 99, 106], "manhattan": 8, "manipul": 0, "manual": [40, 41, 45, 99], "map": [14, 22, 24, 62, 64], "mask": [13, 70, 71, 72, 73, 74], "match": [11, 14, 40, 42, 44, 49, 134, 158, 159, 162, 163], "math": [131, 141, 146], "mathbf": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 17, 19, 20, 21, 22, 23, 24, 37, 39, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 110, 111, 112, 116, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164], "mathcal": [70, 71, 72, 73, 74, 81, 82, 83, 84, 85, 86, 87], "mathemat": 6, "mathrm": 9, "matmul": 125, "matric": [1, 3, 4, 6, 9, 11, 12, 110, 111, 112, 120], "matrix": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 29, 37, 78, 79, 96, 110], "matrix_pow": 5, "max": [8, 20, 54, 55, 56, 60, 92, 93, 94, 113, 125, 130], "max_pool": [92, 93, 94], "max_pool1d": [36, 53], "max_pool2d": [36, 53], "max_pool3d": [36, 53], "max_valu": 130, "maximum": [8, 60, 92, 93, 94, 125, 130, 136], "maxpool1d": [76, 95], "maxpool1dmodel": 92, "maxpool2d": [67, 76, 95], "maxpool2dmodel": 93, "maxpool3d": [68, 76, 95], "maxpool3dmodel": 94, "mean": [10, 13, 21, 25, 26, 27, 30, 40, 41, 42, 44, 45, 46, 48, 57, 58, 59, 60, 61, 62, 64, 68, 70, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 97, 104, 125, 130, 134, 135, 136, 138, 141, 143, 145, 148, 149, 150], "meaning": 100, "mechan": [0, 37], "memori": 99, "method": [0, 1, 6, 40, 41, 42, 44, 45, 106], "middl": 98, "might": 96, "min": [114, 125, 130], "min_valu": 130, "mind": [0, 99], "minim": [0, 81, 82, 83, 84, 85, 86, 87], "minimalist": 0, "minimum": [125, 130, 138], "minu": 62, "mirror": [122, 124], "mismatch": [14, 96], "miss": [14, 96], "mitig": [19, 57, 59, 61, 81, 82, 83], "mode": [0, 34, 46, 48, 70, 71, 72, 73, 74, 156], "model": [0, 7, 10, 12, 13, 14, 15, 23, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 77, 78, 79, 81, 82, 83, 84, 87, 89, 90, 91, 92, 93, 94, 99, 106], "modif": 99, "modifi": [70, 97, 99, 105, 154, 164], "modul": [0, 13, 15, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 100, 106], "modular": [0, 14, 96], "momentum": [46, 48, 81, 82, 83, 84, 85, 86], "moor": 9, "more": [0, 4, 57, 71, 72, 73, 74, 96, 104, 112, 148, 161], "most": [1, 93], "mse": [42, 44], "mse_loss": [36, 43], "mu": [81, 82, 83, 84, 85, 86, 87, 150], "mu_i": [84, 85, 86], "mul": 125, "multi": [23, 41, 45, 63, 137, 145, 150], "multidimension": 102, "multipl": [0, 1, 7, 11, 29, 70, 71, 72, 73, 74, 96, 98, 102, 103, 104, 110, 115], "multipli": [7, 39, 79, 115, 116], "must": [2, 3, 4, 6, 7, 10, 11, 12, 14, 49, 70, 71, 72, 73, 74, 99, 148, 152, 154, 156, 158, 159, 161, 162, 164], "mymodel": [14, 15, 96], "n": [7, 8, 25, 26, 27, 29, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 66, 67, 68, 73, 74, 77, 79, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 120, 137, 148, 150], "n1": 8, "name": [14, 100], "nan": [10, 12], "natur": [9, 66, 77, 89, 92, 117, 134, 135], "ndarrai": [13, 15, 100, 107, 119, 122, 124, 151], "ndim": [10, 12, 15, 107], "ne": 7, "necessari": [9, 99, 154, 164], "need": [23, 77, 96, 99], "neg": [7, 9, 12, 16, 45, 57, 59, 60, 61, 152], "negative_slop": [19, 59], "neq": 8, "nest": 96, "network": [0, 13, 14, 15, 17, 20, 21, 22, 23, 24, 25, 26, 27, 37, 39, 46, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 87, 89, 90, 91, 92, 93, 94, 96, 106, 107, 121, 123, 136, 138, 156], "neural": [0, 13, 14, 15, 17, 20, 21, 22, 23, 24, 25, 26, 27, 37, 39, 46, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 87, 89, 90, 91, 92, 93, 94, 96, 106, 107, 121, 123, 136, 138, 156], "neuralnetwork": 60, "neuron": 59, "new": [14, 15, 16, 17, 19, 20, 21, 22, 24, 37, 39, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 151, 152, 154, 156, 158, 159, 161, 162, 163, 164], "nll": 45, "nll_loss": [36, 43], "nn": [0, 18, 28, 35, 38, 43, 47, 53, 65, 69, 75, 76, 80, 88, 95], "no_grad": 97, "node": 107, "nois": [12, 106], "non": [4, 7, 9, 12, 17, 19, 20, 57, 58, 59, 60, 61, 62, 64, 70, 71, 72, 73, 74, 99, 117, 130], "none": [14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 98, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164], "norm": [1, 5], "normal": [17, 21, 23, 24, 46, 48, 49, 58, 61, 63, 70, 81, 82, 83, 84, 85, 86, 87, 104, 106], "normalized_shap": [49, 87], "note": [25, 70], "noth": [30, 31, 32, 33], "notimplementederror": 14, "notin": 130, "np": [13, 15, 100, 107, 112, 119, 120, 121, 123, 124, 135, 151], "num_class": 63, "num_featur": [81, 82, 83, 84, 85, 86], "number": [3, 4, 6, 9, 11, 12, 15, 25, 26, 27, 29, 32, 33, 34, 37, 39, 41, 45, 46, 48, 62, 66, 67, 68, 77, 79, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94, 102, 105, 107, 117, 120, 136, 137, 138, 149, 150, 152, 154, 156, 158, 159, 160, 162, 164], "numer": [6, 9, 40, 41, 46, 48, 49, 81, 82, 83, 84, 85, 86, 87, 100, 109, 121, 123], "numpi": [0, 13, 15, 100, 107, 112, 119, 120, 121, 123, 135, 148, 151, 156, 158, 162], "o": [91, 94, 121, 122], "object": [1, 14, 96, 99, 108, 109, 113, 114, 115, 118, 151], "occur": [99, 152], "occurr": 7, "odot": [70, 71, 72, 73, 74], "off": 97, "offer": [0, 96, 106], "offset": 120, "often": [7, 25, 26, 27, 29, 123], "onc": 99, "one": [23, 25, 39, 50, 54, 61, 62, 63, 66, 72, 81, 84, 89, 92, 98, 100, 104, 118, 122, 136, 138, 153, 157, 161], "ones": [37, 39, 66, 67, 68, 79, 81, 82, 83, 84, 85, 86, 87, 96, 120, 122, 125], "ones_lik": 125, "onli": [0, 60, 70, 71, 72, 73, 74, 81, 82, 83, 84, 85, 86, 87, 92, 93, 94, 97, 130, 136, 138, 148, 156, 157, 159, 160], "onto": [10, 12], "oper": [0, 1, 6, 9, 13, 14, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 29, 34, 37, 39, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 123, 134, 135, 136, 137, 138, 141, 143, 145, 148, 150, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164], "operatornam": [7, 9], "optim": [0, 1, 7, 9, 10, 12, 13, 15, 29, 66, 67, 68, 96, 99], "option": [8, 12, 13, 14, 15, 16, 19, 23, 26, 27, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 63, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 102, 103, 104, 107, 119, 120, 121, 122, 123, 124, 136, 137, 138, 145, 149, 150, 151, 152, 158, 160, 161], "ord": 8, "order": [8, 12, 149], "ordereddict": 14, "origin": [30, 64, 156, 157, 158, 159, 162, 163], "orthogon": [9, 10, 12], "orthonorm": 10, "other": [0, 6, 13, 14, 70, 96, 97, 99, 106, 107, 121, 123, 148], "otherwis": [16, 19, 20, 21, 23, 57, 59, 60, 61, 63, 71, 72, 73, 74, 89, 90, 91, 92, 93, 94, 113, 114, 136, 138], "otim": [9, 37, 77], "out": [16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 46, 48, 49, 50, 51, 52, 54, 55, 56, 66, 67, 68, 70, 71, 72, 73, 74, 89, 90, 91, 92, 93, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164], "out_channel": [66, 67, 68, 82, 83, 89, 90, 91, 92, 93, 94, 96], "out_featur": [37, 39, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 70, 71, 72, 77, 79, 81, 84, 87, 89, 90, 91, 92, 93, 94], "outer": 125, "outlier": 42, "output": [0, 7, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 37, 39, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 134, 135, 136, 137, 138, 141, 143, 145, 148, 149, 150, 156, 158, 162], "output_height": 29, "output_width": 29, "over": [1, 14, 23, 63, 66, 67, 68, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 102, 136, 137, 138, 145, 148, 150], "overdetermin": 9, "overfit": [31, 34, 71, 72, 73, 74], "overridden": 14, "own": [25, 26, 27, 96], "p": [8, 9, 15, 30, 31, 32, 33, 34, 70, 71, 72, 73, 74, 89, 92, 93], "p_d": [91, 94], "p_h": [90, 91, 94], "p_w": [90, 91, 94], "packag": [1, 96, 105, 106], "pad": [25, 26, 27, 29, 50, 51, 52, 54, 55, 56, 66, 67, 68, 82, 83, 89, 90, 91, 92, 93, 94, 155], "pad_after_dim1": 156, "pad_after_dim2": 156, "pad_before_dim1": 156, "pad_before_dim2": 156, "pad_width": 156, "padding_height": 29, "padding_width": 29, "pair": 37, "param": [14, 15], "param1": 14, "paramet": [0, 14, 96, 100, 106], "parent": 96, "part": [13, 14, 96, 97, 99, 106, 119, 120, 121, 122, 123, 124], "partial": [2, 3, 4, 6, 7, 8, 9, 11, 12, 16, 17, 19, 20, 21, 22, 23, 24, 37, 39, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164], "particip": 15, "particularli": [0, 9, 23, 39, 63, 79, 84, 85, 86, 87, 97], "pass": [0, 9, 14, 15, 57, 58, 59, 60, 61, 62, 64, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 87, 89, 90, 91, 92, 93, 94, 96, 100, 107, 137, 145, 148, 149, 150, 152, 154, 157, 159, 160, 164], "patch": [29, 90], "pattern": [20, 60, 66, 67, 68], "penros": 9, "per": [84, 85, 86, 87], "perform": [0, 1, 2, 9, 14, 15, 17, 25, 26, 27, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 97, 99, 105, 106, 108, 109, 112, 115, 118, 134, 136, 138, 145, 149], "permut": 149, "persist": [13, 102, 103, 104], "perturb": [4, 11, 12], "phi": [17, 58], "pi": [17, 58, 131, 141, 146], "pinv": 5, "pipelin": 106, "placehold": [14, 78], "plai": [100, 106], "point": 97, "pool": [50, 51, 52, 54, 55, 56, 67, 68, 89, 90, 91, 92, 93, 94, 136, 138], "poorli": 6, "popul": 14, "pose": 9, "posit": [2, 7, 14, 57, 59, 60, 61, 89, 90, 91, 92, 93, 94, 98, 117, 158, 162], "possibl": 0, "potenti": [9, 78, 160], "power": [0, 7, 98, 99, 125], "practic": 9, "preced": [15, 107], "predefin": 61, "prefix": 14, "prepar": [98, 156, 158, 162], "prepend": 14, "preprocess": [29, 106], "present": [81, 82, 83, 84, 85, 86, 87, 90], "preserv": [30, 70, 119, 120, 121, 122, 123, 124, 137, 145, 150], "prevent": [31, 34, 71, 72, 73, 74, 99], "previou": 99, "primari": [0, 100], "print": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164], "probabilist": 106, "probabl": [17, 23, 30, 31, 32, 33, 34, 40, 58, 63, 70, 71, 72, 73, 74], "problem": [9, 10, 12, 19, 57, 59], "process": [7, 10, 12, 25, 26, 27, 48, 61, 64, 66, 68, 77, 81, 82, 83, 84, 85, 86, 87, 89, 91, 92, 94, 100], "produc": [66, 67, 68, 105, 106], "product": [0, 10, 12, 62, 77, 87, 96, 110, 111, 115, 116], "program": [97, 106], "project": [10, 12], "projector": 9, "promin": [89, 91, 92, 93, 94], "promot": 96, "propag": [3, 4, 6, 9, 10, 11, 12, 14, 37, 39, 90, 91, 110, 111, 112, 116, 136, 138, 156, 159, 163], "properli": [23, 63, 96], "properti": [1, 3, 6, 7, 17, 21, 30, 58, 61, 70], "proport": 150, "provid": [0, 1, 14, 17, 39, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 105, 106, 107, 112, 122, 136, 138, 149, 151, 158, 160, 162], "pseudo": [6, 9], "purpos": [102, 121, 123], "python": 100, "pytorch": 151, "q": 10, "qr": 5, "quad": [9, 92, 93, 94, 108, 109, 113, 114, 115, 118], "quotient": 109, "r": 10, "rais": [14, 96, 117], "rand": [101, 106], "randint": [101, 106], "randn": [96, 101, 105, 106], "random_integ": 106, "random_tensor": 106, "randomli": [30, 31, 32, 33, 34, 70, 71, 72, 73, 74], "rang": [1, 22, 24, 25, 26, 41, 45, 62, 64, 103, 127, 128, 130], "rank": 9, "rather": 159, "ravel": 155, "raw": [23, 63, 100], "re": [15, 99], "readabl": [96, 100], "readi": 0, "real": [9, 12, 62], "rearrang": 29, "receiv": [92, 93, 94, 156], "reciproc": [9, 125, 135, 143], "recognit": 67, "rectangular": 120, "rectifi": [19, 20, 59, 60], "recurr": 87, "recurs": 14, "reduc": [81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 99, 100, 136, 137, 138, 145, 150], "reduct": [12, 40, 41, 42, 44, 45, 136, 138], "refer": [0, 14, 106, 119, 120, 152], "reflect": 97, "regardless": [9, 157], "region": [27, 156], "regist": [13, 14, 15, 96], "register_buff": 13, "register_paramet": 14, "registr": [14, 96], "regress": 44, "regular": [9, 34, 71, 72, 73, 74], "relat": [99, 120, 121], "reli": 99, "reliant": [71, 72, 73, 74], "relu": [0, 16, 18, 19, 36, 57, 59, 65, 66, 67, 68, 76, 77, 78, 79], "remain": [13, 49, 70, 71, 72, 73, 74], "rememb": 106, "remov": 160, "rep": 162, "repeat": [155, 162], "repetit": [158, 162], "replac": 106, "repres": [6, 8, 12, 14, 15, 37, 39, 46, 48, 49, 66, 67, 68, 77, 79, 87, 100, 108, 109, 115, 118, 119, 137, 148, 149, 150], "represent": [90, 93], "reproduc": [102, 103, 104, 105, 106], "requir": [0, 13, 16, 17, 19, 20, 21, 22, 24, 37, 39, 78, 96, 97, 99, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164], "requires_grad": [13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 29, 37, 39, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164], "rescal": [40, 41, 45], "research": 96, "reset": [15, 105, 107], "reshap": [0, 39, 67, 68, 98, 100, 155, 157], "resourc": 99, "respect": [2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 16, 17, 19, 20, 21, 22, 23, 24, 37, 39, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 130, 134, 135, 136, 137, 138, 141, 143, 145, 148, 149, 150, 156, 158, 162], "restor": 99, "restructur": 159, "result": [2, 6, 7, 9, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 37, 39, 50, 51, 52, 54, 55, 56, 63, 96, 97, 99, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164], "retain": [15, 107, 123, 136, 137, 138, 145, 150], "return": [0, 13, 14, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 77, 78, 79, 81, 82, 83, 84, 87, 89, 90, 91, 92, 93, 94, 96, 100], "reusabl": 96, "revers": [0, 149], "revert": 99, "right": [7, 8, 9, 11, 12, 17, 23, 58, 63, 81, 82, 83, 84, 85, 86, 87, 92, 93, 94], "risk": 100, "robust": [70, 71, 72, 73, 74, 96], "role": [100, 106], "root": 143, "rout": [92, 93, 94], "routin": 0, "row": [3, 4, 6, 11, 39, 120, 164], "rule": [6, 7, 98, 108, 109, 113, 114, 115, 117, 118], "run": [0, 13, 46, 48, 81, 82, 83, 84, 85, 86, 99, 105, 106], "running_mean": [13, 46, 48, 81, 82, 83, 84, 85, 86], "running_var": [46, 48, 81, 82, 83, 84, 85, 86], "runtim": 96, "s_d": [91, 94], "s_h": [90, 91, 94], "s_w": [90, 91, 94], "same": [3, 4, 6, 7, 11, 23, 30, 31, 32, 33, 34, 46, 48, 49, 66, 67, 68, 70, 71, 72, 73, 74, 78, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 105, 106, 112, 122, 124, 134, 136, 137, 138, 152, 154, 157, 159, 160, 161, 164], "sampl": [0, 70, 71, 72, 73, 74, 77, 79, 87, 104, 106], "satisfi": [2, 4, 11], "satur": 57, "save": [13, 15, 99], "scalabl": 96, "scalar": [3, 8, 40, 41, 42, 44, 45, 100], "scale": [4, 9, 16, 21, 23, 46, 48, 49, 57, 59, 61, 62, 63, 64, 70, 71, 72, 73, 74, 81, 82, 83, 84, 85, 86, 87, 100, 106, 150], "scenario": 87, "scientif": 98, "score": 23, "scratch": 0, "script": 106, "seamless": [96, 106], "seamlessli": [1, 15, 96, 100], "second": [4, 37, 77, 98, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 154], "section": 112, "see": [0, 112], "seed": [101, 102, 103, 104, 106], "select": [92, 94, 145], "self": [0, 13, 14, 15, 21, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 77, 79, 81, 82, 83, 84, 87, 89, 90, 91, 92, 93, 94, 96], "selu": [18, 30, 36, 65, 70, 76], "selunetwork": 61, "sensit": [42, 81, 82, 83], "separ": [25, 26, 27, 84, 85, 86], "sequenc": [7, 25, 152, 154, 156, 158, 161, 162, 164], "sequenti": [25, 78], "seri": [25, 66, 89, 92], "serial": [13, 14], "serv": [14, 96], "set": [15, 25, 26, 27, 59, 60, 61, 66, 67, 68, 70, 73, 74, 77, 79, 81, 82, 83, 84, 85, 86, 102, 103, 104, 105, 106, 107, 123, 124, 130, 136, 138, 151], "setup": 0, "sever": [9, 66, 67, 68, 89, 90, 91, 92, 93, 94, 99], "sgd": 0, "sgn": 8, "shape": [0, 3, 4, 6, 7, 9, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 98, 100, 102, 103, 104, 106, 107, 110, 120, 121, 122, 123, 124, 130, 135, 136, 137, 138, 141, 143, 145, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 164], "shapelik": 103, "shift": [46, 48, 49, 81, 82, 83, 84, 85, 86, 87], "shorthand": 112, "should": [13, 99, 102, 103, 104, 127, 128, 148, 156], "show": 97, "showcas": 0, "shown": 105, "side": [11, 25, 26, 27, 50, 51, 52, 54, 55, 56, 66, 67, 68, 89, 90, 91, 92, 93, 94, 99], "sigma": [9, 62, 81, 82, 83, 84, 85, 86, 87, 149], "sigma_i": 9, "sigmoid": [18, 36, 65, 76], "sigmoidnetwork": 62, "sign": [7, 125], "signal": [66, 67, 68, 81, 84, 89, 90, 91, 92, 93, 94], "signific": 99, "sim": [70, 71, 72, 73, 74], "similar": [0, 112, 135, 151, 156], "similarli": [12, 148], "simpl": [0, 25, 26, 27, 37, 39, 50, 51, 52, 54, 55, 56, 58, 60, 61, 62, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 110, 111, 116], "simplegelumodel": 58, "simpleleakyrelumodel": 59, "simplemodel": [0, 79], "simplerelumodel": 60, "simpleselumodel": 61, "simplesigmoidmodel": 62, "simpletanhmodel": 64, "simpli": [97, 148, 149, 159], "simplic": 60, "sin": [125, 131], "sinc": [7, 10, 25, 26, 27, 97, 99, 104], "sine": [128, 141, 142], "singl": [7, 10, 12, 23, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 87, 90, 91, 92, 93, 94, 100, 152, 160], "singleton": 87, "singular": [3, 6, 7, 9, 11, 12], "sinh": [125, 132, 147], "size": [12, 15, 25, 26, 27, 29, 32, 33, 34, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 66, 67, 68, 77, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 103, 106, 107, 136, 137, 138, 145, 150, 152, 154, 160, 163, 164], "skip": 99, "slice": [37, 148], "slide": [29, 89, 91, 92, 94], "slope": [19, 57, 59], "small": [9, 19, 40, 41, 46, 48, 49, 59, 61, 81, 82, 83, 84, 85, 86, 87, 90, 93], "smaller": [96, 114], "smallest": 138, "smooth": [17, 57, 58], "so": 96, "softmax": [18, 36, 65, 76], "softmaxmodel": 63, "solut": [9, 11], "solv": [1, 2, 5, 9, 10, 12], "solver": 1, "some": [16, 31, 70, 71, 72, 81, 82, 83, 84, 85, 86, 99, 100], "sometim": 98, "sourc": 106, "space": [4, 10, 12, 25, 26, 27, 29, 66, 67, 68], "spatial": [67, 68, 81, 82, 83, 84, 85, 86, 87, 90, 91, 92, 93, 94], "spatio": 68, "special": [0, 9, 13, 14, 15, 70, 106], "specif": [0, 70, 71, 72, 73, 74, 84, 85, 86, 96, 97, 106, 136, 138, 158, 162], "specifi": [0, 8, 23, 29, 34, 40, 41, 42, 44, 45, 49, 63, 66, 67, 68, 87, 90, 91, 92, 93, 94, 100, 102, 103, 104, 105, 117, 119, 120, 121, 123, 124, 130, 136, 137, 138, 145, 149, 150, 151, 152, 154, 156, 158, 159, 160, 161, 162, 163, 164], "speech": 84, "split": [152, 154, 164], "sqrt": [17, 58, 81, 82, 83, 84, 85, 86, 87, 125, 127, 128], "squar": [2, 3, 4, 6, 7, 9, 10, 11, 12, 42, 44, 125, 143], "squeez": 155, "stabil": [6, 9, 40, 41, 46, 48, 49, 81, 82, 83, 84, 85, 86, 87], "stabl": 70, "stack": [154, 155, 164], "standard": [17, 19, 57, 58, 59, 70, 104, 106, 112], "state": [13, 14, 15, 97, 99, 105], "state_dict": [14, 15], "statist": [9, 30, 46, 48], "step": [15, 29, 99], "stochast": 0, "storag": 107, "store": [13, 14, 15, 99, 107], "str": [14, 40, 41, 42, 44, 45], "straightforward": [97, 108], "strict": 14, "stride": [25, 26, 27, 29, 50, 51, 52, 54, 55, 56, 66, 67, 68, 89, 90, 91, 92, 93, 94], "stride_height": 29, "stride_width": 29, "string": [14, 66, 67, 68], "structur": [0, 10, 13, 14, 96, 100, 120], "style": [48, 84, 85], "sub": [96, 125], "sub_tensor": 107, "subclass": [0, 14, 15, 96], "submodul": [14, 96], "subsequ": 106, "subset": [71, 72], "subtract": [0, 118], "suitabl": 102, "sum": [8, 23, 40, 41, 42, 44, 45, 63, 108, 111, 116, 125, 148, 150, 152, 154, 158, 162, 164], "sum_": [7, 23, 63, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 110, 111, 137, 145, 148, 150, 158], "sum_i": [8, 116], "sum_j": 116, "sum_k": 112, "summar": [89, 90, 91], "summat": 7, "super": [0, 13, 14, 15, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 77, 79, 81, 82, 83, 84, 87, 89, 90, 91, 92, 93, 94, 96], "support": [0, 1, 7, 8, 9, 10, 12, 96, 106, 107, 108, 109, 112, 113, 114, 115, 117, 118, 119, 120, 130, 135, 137, 141, 143, 145, 148, 149, 150, 152, 159], "sure": 96, "svd": [5, 9], "symmetr": [2, 64], "syntax": 112, "system": [1, 2, 9, 10, 11, 97], "t": [9, 99, 107, 112, 151], "t1": 151, "t2": 151, "tailor": 96, "take": [10, 89, 90, 91, 92, 93, 94, 99], "taken": 148, "tan": 125, "tangent": [24, 64, 129, 146, 147], "tanh": [17, 18, 36, 58, 65, 76, 125], "tanhnetwork": 64, "target": [40, 41, 42, 44, 45], "task": [0, 1, 22, 23, 26, 37, 40, 41, 44, 45, 62, 63, 66, 67, 68, 84, 85, 86, 89, 91, 92, 94, 98, 106, 120], "techniqu": [2, 6, 46, 70, 71, 72, 73, 74, 84, 85, 86], "tempor": [66, 68, 91, 94], "temporarili": 99, "tensor": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97, 99, 100, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164], "term": [9, 37], "text": [3, 7, 8, 16, 19, 20, 21, 23, 25, 26, 27, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 63, 66, 67, 68, 70, 71, 72, 73, 74, 89, 90, 91, 92, 93, 94, 103, 108, 109, 111, 113, 114, 115, 117, 118, 126, 130, 136, 137, 138, 140, 145, 150, 152, 154, 156, 157, 158, 159, 160, 162, 163, 164], "th": [37, 84, 85, 86, 113, 114, 117], "than": [16, 19, 42, 57, 59, 130, 148, 156, 161], "thei": [0, 12, 13, 100, 159], "them": [14, 29, 98, 152, 161], "therebi": [70, 90, 91, 93, 94], "thi": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 20, 22, 23, 24, 25, 26, 27, 29, 37, 39, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 103, 104, 105, 106, 107, 111, 112, 116, 121, 122, 123, 124, 130, 134, 135, 136, 137, 138, 141, 143, 145, 148, 149, 150, 151, 156, 158, 159], "thing": 99, "those": 0, "three": [12, 27, 52, 56, 68, 74, 83, 86, 91, 94], "threshold": [9, 42], "through": [0, 4, 9, 10, 12, 37, 39, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 87, 89, 90, 91, 92, 93, 94, 104, 110, 111, 116, 157, 159, 160, 163], "throughout": 21, "tile": 155, "time": [7, 25, 59, 61, 66, 89, 90, 91, 92, 93, 94, 99, 158, 162], "tool": [0, 96, 98, 106], "top": [2, 3, 4, 10, 12, 37, 39, 66, 67, 68, 77, 79], "torch": 151, "total": [15, 107, 159], "trace": [1, 125], "track": [0, 81, 82, 83, 84, 85, 86, 96, 97, 99, 102, 103, 104, 119, 120, 121, 122, 123, 124, 151], "track_running_stat": [81, 82, 83, 84, 85, 86], "trail": 49, "train": [0, 13, 14, 23, 30, 31, 32, 33, 34, 46, 48, 58, 59, 61, 62, 63, 64, 70, 71, 72, 73, 74, 81, 82, 83, 84, 85, 86, 96, 99], "trainabl": [81, 82, 83, 84, 85, 86, 96], "transfer": [48, 84, 85], "transform": [0, 4, 37, 39, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 98], "translat": [90, 93], "transpos": [0, 2, 125], "treat": [13, 87, 96], "triangular": [2, 10], "true": [12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 29, 30, 31, 32, 33, 34, 37, 39, 46, 48, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164], "tupl": [4, 10, 12, 14, 15, 25, 26, 27, 29, 49, 50, 51, 52, 54, 55, 56, 66, 67, 68, 78, 87, 89, 90, 91, 92, 93, 94, 100, 103, 107, 121, 123, 136, 137, 138, 145, 150, 152, 154, 156, 159, 160, 161, 163, 164], "twice": 156, "two": [0, 3, 4, 6, 7, 9, 10, 12, 25, 26, 27, 37, 51, 55, 67, 73, 77, 82, 85, 90, 93, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 148], "type": [13, 14, 15, 37, 77, 107, 119, 120, 121, 122, 123, 124, 151], "typeerror": 14, "typic": [1, 13, 23, 30, 61, 63, 81, 82, 83, 84, 85, 86, 99, 100, 163], "u": [9, 12], "unchang": [13, 34, 57, 59, 60, 61, 70, 71, 72, 73, 74, 78, 157, 160], "undefin": 117, "under": 96, "underbrac": 7, "underdetermin": 9, "underli": [0, 151, 154, 157, 159, 164], "understand": 0, "unexpect": [14, 106], "unfold": [28, 36], "uniform": [66, 67, 68, 77, 79, 102, 103, 106], "uniformli": 102, "unintend": 99, "uniqu": [2, 9, 11], "unit": [16, 17, 19, 20, 21, 57, 58, 59, 60, 61, 70], "unless": 107, "unlik": [13, 19, 57, 59, 70, 87], "unnecessari": 99, "unpad": 156, "unsqueez": 155, "unstabl": 6, "updat": [13, 70, 71, 72, 73, 74, 81, 82, 83, 84, 85, 86, 96, 99], "upper": 10, "us": [0, 1, 2, 4, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 37, 39, 44, 46, 48, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 102, 103, 104, 106, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 134, 136, 137, 138, 145, 150, 156, 158, 160, 162, 163], "usag": 1, "user": [0, 96], "util": [0, 1, 96, 106], "v": [4, 9, 12, 119], "v_stack": 164, "valid": [66, 67, 68, 149], "valu": [0, 3, 7, 8, 9, 12, 14, 16, 19, 22, 23, 24, 25, 26, 27, 29, 40, 41, 42, 44, 45, 46, 48, 49, 57, 59, 60, 61, 62, 64, 70, 71, 72, 73, 74, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 97, 100, 102, 103, 104, 105, 106, 119, 120, 126, 127, 128, 130, 133, 134, 135, 136, 138, 140, 141, 143, 144, 152, 156, 157, 159, 163], "valuabl": 106, "valueerror": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12], "vanish": [57, 61, 81, 82, 83], "var": 125, "variabl": [14, 78, 96, 97, 99, 102], "varianc": [21, 30, 46, 48, 61, 70, 81, 82, 83, 84, 85, 86, 87, 104, 150], "variat": [84, 85, 86], "varieti": 106, "variou": [60, 106, 136, 138, 156], "vdot": 116, "vector": [4, 9, 10, 11, 12, 37, 39, 77, 79, 110, 111, 112, 116], "veri": 9, "versatil": 106, "version": [12, 116], "vertic": [161, 164], "video": [27, 34, 68, 86, 91, 94], "view": [90, 91, 92, 93, 94, 159], "vision": [26, 67, 77], "volumetr": [27, 34, 68, 86, 91, 94], "vstack": 155, "w": [26, 27, 29, 33, 34, 37, 39, 51, 52, 55, 56, 66, 67, 68, 77, 79, 82, 83, 85, 86, 91, 94], "w_": [26, 27, 51, 52, 55, 56, 67, 68, 90, 91, 93, 94], "w_out": [26, 27, 51, 52, 55, 56], "wa": [70, 71, 72, 73, 74, 99], "wai": [97, 99, 159], "want": 0, "we": [0, 98], "weight": [25, 26, 27, 37, 39, 40, 41, 45, 46, 48, 49, 66, 67, 68, 70, 71, 72, 73, 74, 77, 79, 81, 82, 83, 84, 85, 86, 87, 96, 102, 106], "what": 99, "when": [0, 7, 14, 16, 19, 25, 26, 27, 57, 78, 81, 82, 83, 84, 85, 86, 97, 99, 100, 106, 117], "where": [3, 4, 6, 7, 8, 9, 10, 12, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 99, 100, 106, 108, 109, 113, 114, 115, 117, 118, 130, 134, 135, 136, 137, 138, 141, 143, 145, 148, 149, 150, 152, 156, 158, 162], "whether": [3, 14, 15, 97, 102, 103, 104, 107, 136, 137, 138, 145, 150], "which": [0, 3, 4, 6, 7, 8, 9, 10, 12, 14, 19, 23, 42, 57, 58, 59, 63, 64, 70, 81, 82, 83, 84, 85, 86, 87, 97, 99, 100, 102, 103, 127, 128, 129, 130, 131, 132, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 150, 152, 158, 159, 161, 163], "while": [0, 30, 58, 60, 96, 99, 159, 161], "who": 0, "whose": [12, 122, 124, 126, 130, 134, 140], "wide": [1, 9, 20, 60, 66, 67], "wider": [25, 26], "width": [26, 27, 29, 33, 34, 51, 52, 55, 56, 67, 68, 82, 83, 85, 86, 90, 91, 93, 94], "window": [50, 51, 52, 54, 55, 56, 89, 90, 91, 92, 93, 94, 136, 138], "wise": [16, 17, 19, 20, 21, 22, 23, 24, 63, 70, 71, 72, 73, 74, 96, 98, 108, 109, 112, 113, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 135, 139, 140, 141, 142, 143, 144, 146, 147, 148, 154, 164], "within": [13, 24, 58, 60, 61, 62, 64, 66, 67, 68, 70, 71, 72, 78, 81, 82, 83, 84, 87, 89, 90, 91, 92, 93, 94, 99, 130], "without": [0, 37, 39, 66, 67, 68, 77, 79, 97, 136, 157, 159, 163], "won": 99, "work": [0, 2, 98, 100], "workflow": 106, "workload": 0, "wrap": [96, 99, 151], "wrapper": 96, "x": [0, 1, 11, 13, 14, 23, 37, 39, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 102, 103, 104, 134], "x1": 77, "x2": 77, "x\u2081": 77, "x\u2082": 77, "y": [57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 102, 103, 104], "yet": [0, 98], "yield": [14, 99], "you": [96, 97, 99, 106, 120, 124, 149, 151], "your": [96, 97, 99, 106], "z": [123, 124], "zero": [7, 9, 10, 16, 19, 25, 26, 27, 30, 31, 32, 33, 34, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 66, 67, 68, 70, 71, 72, 73, 74, 87, 89, 90, 91, 92, 93, 94, 96, 120, 124, 125, 130, 140, 156], "zero_grad": [15, 107], "zeros_lik": 125, "\u03c3\u1d62": 9}, "titles": ["Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "nn.ELU", "nn.GELU", "nn.LeakyReLU", "nn.ReLU", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Tanh", "Activation Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "lucid.nn", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.types", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.diag", "lucid.eye", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.unsqueeze", "lucid.vstack"], "titleterms": {"1": 98, "1d": 98, "2": 98, "2d": 98, "3": 98, "It": [97, 99], "ab": 126, "activ": [18, 36, 65, 76], "ad": 98, "add": 108, "addit": 9, "admonit": 100, "advanc": 29, "algebra": 5, "alias": 100, "align": 98, "alpha_dropout": 30, "alphadropout": 70, "anoth": 151, "arcco": 127, "arcsin": 128, "arctan": 129, "attribut": [13, 15, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 107], "avg_pool1d": 50, "avg_pool2d": 51, "avg_pool3d": 52, "avgpool1d": 89, "avgpool2d": 90, "avgpool3d": 91, "axi": 98, "backpropag": 107, "backward": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 17, 19, 20, 21, 22, 23, 24, 37, 39, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164], "batch_norm": 46, "batchnorm1d": 81, "batchnorm2d": 82, "batchnorm3d": 83, "benefit": 99, "bilinear": [37, 77], "binari": 125, "binary_cross_entropi": 40, "broadcast": 98, "buffer": 13, "calcul": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 17, 19, 20, 21, 22, 23, 24, 29, 37, 39, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164], "case": 100, "choleski": 2, "class": [13, 14, 15, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 107], "clip": 130, "co": 131, "compon": [0, 96], "concaten": 152, "conclus": [0, 96, 97, 98, 99, 106], "conv1d": [25, 66], "conv2d": [26, 67], "conv3d": [27, 68], "convolut": [28, 36, 69, 76], "core": 0, "cosh": 132, "creat": [15, 107, 151], "cross_entropi": 41, "cube": 133, "custom": 14, "defin": 14, "definit": 100, "det": 3, "detail": 9, "diag": 119, "dilat": 29, "div": 109, "dot": 110, "dropout": [31, 35, 36, 71, 75, 76], "dropout1d": [32, 72], "dropout2d": [33, 73], "dropout3d": [34, 74], "eig": 4, "elu": [16, 57], "exampl": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164], "exp": 134, "ey": 120, "featur": [0, 1, 106], "flatten": 153, "forward": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 17, 19, 20, 21, 22, 23, 24, 29, 37, 39, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164], "from": 151, "function": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 97, 99, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164], "gelu": [17, 58], "gener": [101, 125], "grad_en": 97, "gradient": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 17, 19, 20, 21, 22, 23, 24, 37, 39, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164], "guidelin": 100, "how": [97, 99], "hstack": 154, "huber_loss": 42, "ident": 78, "index": 107, "inner": 111, "input": 151, "instance_norm": 48, "instancenorm1d": 84, "instancenorm2d": 85, "instancenorm3d": 86, "integr": [96, 106], "inv": 6, "iter": 107, "kei": [0, 96, 106], "layer": [65, 69, 75, 76, 80, 88, 95], "layer_norm": 49, "layernorm": 87, "leaky_relu": 19, "leakyrelu": 59, "learn": 106, "limit": 0, "linalg": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12], "linear": [5, 36, 38, 39, 76, 79, 80], "list": 151, "log": 135, "loss": [36, 43], "lucid": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 36, 96, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164], "matmul": 112, "matrix": 112, "matrix_pow": 7, "max": 136, "max_pool1d": 54, "max_pool2d": 55, "max_pool3d": 56, "maximum": 113, "maxpool1d": 92, "maxpool2d": 93, "maxpool3d": 94, "mean": 137, "method": [14, 15, 107], "min": 138, "minimum": 114, "model": 96, "modul": [14, 76], "more": 106, "mse_loss": 44, "mul": 115, "multipl": 112, "new": 98, "newaxi": 98, "nll_loss": 45, "nn": [13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 96], "no_grad": 99, "norm": 8, "normal": [36, 47, 76, 88], "note": 0, "number": 101, "ones": 121, "ones_lik": 122, "oper": [5, 112, 125], "organ": 96, "outer": 116, "overview": [0, 96, 106], "pad": 156, "paramet": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 99, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164], "perform": 107, "pinv": 9, "pitfal": [97, 99], "pool": [36, 53, 76, 95], "potenti": [97, 99], "power": 117, "properti": [15, 107], "qr": 10, "rais": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12], "rand": 102, "randint": 103, "randn": 104, "random": [101, 102, 103, 104, 105, 106], "ravel": 157, "reciproc": 139, "relu": [20, 60], "repeat": 158, "reshap": 159, "return": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 97, 99, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164], "rule": 112, "seed": 105, "selu": [21, 61], "sigmoid": [22, 62], "sign": 140, "signatur": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 97, 99, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164], "sin": 141, "sinh": 142, "slice": 107, "softmax": [23, 63], "solv": 11, "sqrt": 143, "squar": 144, "squeez": 160, "stack": 161, "sub": 118, "sum": 145, "svd": 12, "tan": 146, "tanh": [24, 64, 147], "tensor": [98, 107, 125, 151, 155], "through": 107, "tile": 162, "trace": 148, "track": 107, "transpos": 149, "type": 100, "unari": 125, "unfold": 29, "unsqueez": 163, "us": [100, 151], "usag": [0, 13, 97, 98, 99, 100], "utilit": 155, "var": 150, "vstack": 164, "why": 100, "work": [97, 99], "zero": 123, "zeros_lik": 124}})