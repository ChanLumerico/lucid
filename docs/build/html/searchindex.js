Search.setIndex({"alltitles": {"@ Operator": [[262, "operator"]], "Activation Functions": [[113, null]], "Activation Layers": [[187, null], [198, null]], "Additional Details": [[19, "additional-details"]], "Admonitions and Usage Guidelines": [[248, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[124, "advanced-example-with-dilation"]], "Advanced Features": [[330, "advanced-features"]], "AlexNet": [[23, null]], "Algorithm": [[232, "algorithm"], [233, "algorithm"], [234, "algorithm"], [235, "algorithm"], [236, "algorithm"], [237, "algorithm"], [238, "algorithm"], [239, "algorithm"], [240, "algorithm"], [241, "algorithm"], [242, "algorithm"]], "Architecture": [[23, "architecture"], [48, "architecture"], [49, "architecture"], [50, "architecture"], [98, "architecture"]], "Architecture Details": [[67, "architecture-details"], [68, "architecture-details"]], "Attention Mechanism": [[165, "attention-mechanism"]], "Attributes": [[5, "attributes"], [6, "attributes"], [7, "attributes"], [8, "attributes"], [23, "attributes"], [43, "attributes"], [47, "attributes"], [58, "attributes"], [69, "attributes"], [76, "attributes"], [86, "attributes"], [91, "attributes"], [96, "attributes"], [98, "attributes"], [102, "attributes"], [104, "attributes"], [105, "attributes"], [106, "attributes"], [107, "attributes"], [108, "attributes"], [109, "attributes"], [158, "attributes"], [159, "attributes"], [160, "attributes"], [161, "attributes"], [162, "attributes"], [163, "attributes"], [164, "attributes"], [175, "attributes"], [176, "attributes"], [179, "attributes"], [180, "attributes"], [182, "attributes"], [183, "attributes"], [184, "attributes"], [186, "attributes"], [188, "attributes"], [189, "attributes"], [190, "attributes"], [192, "attributes"], [193, "attributes"], [194, "attributes"], [195, "attributes"], [196, "attributes"], [199, "attributes"], [200, "attributes"], [201, "attributes"], [203, "attributes"], [204, "attributes"], [205, "attributes"], [206, "attributes"], [207, "attributes"], [209, "attributes"], [210, "attributes"], [211, "attributes"], [212, "attributes"], [213, "attributes"], [214, "attributes"], [215, "attributes"], [217, "attributes"], [218, "attributes"], [219, "attributes"], [220, "attributes"], [221, "attributes"], [222, "attributes"], [223, "attributes"], [224, "attributes"], [225, "attributes"], [257, "attributes"], [321, "attributes"], [322, "attributes"], [323, "attributes"], [324, "attributes"], [325, "attributes"], [326, "attributes"], [327, "attributes"], [328, "attributes"]], "Backward Gradient Calculation": [[12, "backward-gradient-calculation"], [13, "backward-gradient-calculation"], [14, "backward-gradient-calculation"], [16, "backward-gradient-calculation"], [17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [20, "backward-gradient-calculation"], [21, "backward-gradient-calculation"], [22, "backward-gradient-calculation"], [105, "backward-gradient-calculation"], [106, "backward-gradient-calculation"], [107, "backward-gradient-calculation"], [108, "backward-gradient-calculation"], [109, "backward-gradient-calculation"], [111, "backward-gradient-calculation"], [112, "backward-gradient-calculation"], [114, "backward-gradient-calculation"], [115, "backward-gradient-calculation"], [116, "backward-gradient-calculation"], [117, "backward-gradient-calculation"], [118, "backward-gradient-calculation"], [119, "backward-gradient-calculation"], [132, "backward-gradient-calculation"], [134, "backward-gradient-calculation"], [156, "backward-gradient-calculation"], [164, "backward-gradient-calculation"], [174, "backward-gradient-calculation"], [175, "backward-gradient-calculation"], [176, "backward-gradient-calculation"], [177, "backward-gradient-calculation"], [178, "backward-gradient-calculation"], [179, "backward-gradient-calculation"], [180, "backward-gradient-calculation"], [182, "backward-gradient-calculation"], [183, "backward-gradient-calculation"], [184, "backward-gradient-calculation"], [185, "backward-gradient-calculation"], [186, "backward-gradient-calculation"], [188, "backward-gradient-calculation"], [189, "backward-gradient-calculation"], [190, "backward-gradient-calculation"], [192, "backward-gradient-calculation"], [193, "backward-gradient-calculation"], [194, "backward-gradient-calculation"], [195, "backward-gradient-calculation"], [196, "backward-gradient-calculation"], [199, "backward-gradient-calculation"], [200, "backward-gradient-calculation"], [201, "backward-gradient-calculation"], [203, "backward-gradient-calculation"], [204, "backward-gradient-calculation"], [205, "backward-gradient-calculation"], [206, "backward-gradient-calculation"], [207, "backward-gradient-calculation"], [209, "backward-gradient-calculation"], [210, "backward-gradient-calculation"], [211, "backward-gradient-calculation"], [212, "backward-gradient-calculation"], [213, "backward-gradient-calculation"], [214, "backward-gradient-calculation"], [215, "backward-gradient-calculation"], [220, "backward-gradient-calculation"], [221, "backward-gradient-calculation"], [222, "backward-gradient-calculation"], [223, "backward-gradient-calculation"], [224, "backward-gradient-calculation"], [225, "backward-gradient-calculation"], [258, "backward-gradient-calculation"], [259, "backward-gradient-calculation"], [260, "backward-gradient-calculation"], [261, "backward-gradient-calculation"], [262, "backward-gradient-calculation"], [263, "backward-gradient-calculation"], [264, "backward-gradient-calculation"], [265, "backward-gradient-calculation"], [266, "backward-gradient-calculation"], [267, "backward-gradient-calculation"], [268, "backward-gradient-calculation"], [279, "backward-gradient-calculation"], [280, "backward-gradient-calculation"], [281, "backward-gradient-calculation"], [282, "backward-gradient-calculation"], [283, "backward-gradient-calculation"], [284, "backward-gradient-calculation"], [285, "backward-gradient-calculation"], [286, "backward-gradient-calculation"], [287, "backward-gradient-calculation"], [288, "backward-gradient-calculation"], [289, "backward-gradient-calculation"], [290, "backward-gradient-calculation"], [291, "backward-gradient-calculation"], [292, "backward-gradient-calculation"], [293, "backward-gradient-calculation"], [294, "backward-gradient-calculation"], [295, "backward-gradient-calculation"], [296, "backward-gradient-calculation"], [297, "backward-gradient-calculation"], [298, "backward-gradient-calculation"], [299, "backward-gradient-calculation"], [300, "backward-gradient-calculation"], [301, "backward-gradient-calculation"], [302, "backward-gradient-calculation"], [303, "backward-gradient-calculation"], [305, "backward-gradient-calculation"], [307, "backward-gradient-calculation"], [309, "backward-gradient-calculation"], [310, "backward-gradient-calculation"], [311, "backward-gradient-calculation"], [312, "backward-gradient-calculation"], [313, "backward-gradient-calculation"], [314, "backward-gradient-calculation"], [315, "backward-gradient-calculation"], [316, "backward-gradient-calculation"], [317, "backward-gradient-calculation"], [318, "backward-gradient-calculation"]], "Behavior": [[145, "behavior"], [146, "behavior"], [147, "behavior"], [217, "behavior"], [218, "behavior"], [219, "behavior"]], "Benefits": [[246, "benefits"]], "Binary Functions": [[278, null]], "Bottleneck Configuration": [[56, "bottleneck-configuration"], [57, "bottleneck-configuration"]], "CIFAR10": [[5, null]], "CIFAR100": [[6, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [6, "class-signature"], [7, "class-signature"], [8, "class-signature"], [23, "class-signature"], [25, "class-signature"], [30, "class-signature"], [39, "class-signature"], [43, "class-signature"], [47, "class-signature"], [51, "class-signature"], [52, "class-signature"], [53, "class-signature"], [58, "class-signature"], [69, "class-signature"], [76, "class-signature"], [86, "class-signature"], [91, "class-signature"], [96, "class-signature"], [98, "class-signature"], [102, "class-signature"], [103, "class-signature"], [104, "class-signature"], [105, "class-signature"], [106, "class-signature"], [107, "class-signature"], [108, "class-signature"], [109, "class-signature"], [158, "class-signature"], [159, "class-signature"], [160, "class-signature"], [161, "class-signature"], [162, "class-signature"], [163, "class-signature"], [164, "class-signature"], [165, "class-signature"], [175, "class-signature"], [176, "class-signature"], [177, "class-signature"], [178, "class-signature"], [179, "class-signature"], [180, "class-signature"], [181, "class-signature"], [182, "class-signature"], [183, "class-signature"], [184, "class-signature"], [185, "class-signature"], [186, "class-signature"], [188, "class-signature"], [189, "class-signature"], [190, "class-signature"], [192, "class-signature"], [193, "class-signature"], [194, "class-signature"], [195, "class-signature"], [196, "class-signature"], [199, "class-signature"], [200, "class-signature"], [201, "class-signature"], [203, "class-signature"], [204, "class-signature"], [205, "class-signature"], [206, "class-signature"], [207, "class-signature"], [209, "class-signature"], [210, "class-signature"], [211, "class-signature"], [212, "class-signature"], [213, "class-signature"], [214, "class-signature"], [215, "class-signature"], [217, "class-signature"], [218, "class-signature"], [219, "class-signature"], [220, "class-signature"], [221, "class-signature"], [222, "class-signature"], [223, "class-signature"], [224, "class-signature"], [225, "class-signature"], [227, "class-signature"], [230, "class-signature"], [232, "class-signature"], [233, "class-signature"], [234, "class-signature"], [235, "class-signature"], [236, "class-signature"], [237, "class-signature"], [238, "class-signature"], [239, "class-signature"], [240, "class-signature"], [241, "class-signature"], [242, "class-signature"], [257, "class-signature"], [319, "class-signature"], [320, "class-signature"], [321, "class-signature"], [322, "class-signature"], [323, "class-signature"], [324, "class-signature"], [325, "class-signature"], [326, "class-signature"], [327, "class-signature"], [328, "class-signature"]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [10, "conclusion"], [229, "conclusion"], [244, "conclusion"], [245, "conclusion"], [246, "conclusion"], [256, "conclusion"], [320, "conclusion"], [330, "conclusion"]], "Configurations": [[30, "configurations"]], "Containers": [[110, null]], "Conv-BatchNorm-ReLU": [[166, null]], "ConvNets": [[46, null], [100, "convnets"]], "Convolution Functions": [[123, null], [131, null]], "Convolution Layers": [[191, null], [198, null]], "Core Components": [[10, "core-components"]], "Create a Tensor from a list": [[304, null]], "Creating a Parameter": [[104, null]], "Creating a tensor with gradient tracking": [[257, null]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[330, "custom-pipelines"]], "Defining a Custom Optimizer": [[231, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[103, null]], "Defining a custom optimizer": [[230, null]], "DenseNet": [[25, null]], "Depthwise Separable Convolution": [[166, null]], "Description": [[70, "description"], [71, "description"], [72, "description"], [73, "description"], [74, "description"], [75, "description"], [87, "description"], [88, "description"], [89, "description"], [247, "description"]], "Dropout Functions": [[130, null], [131, null]], "Dropout Layers": [[197, null], [198, null]], "EfficientNet": [[30, null]], "EfficientNet Configurations": [[30, "id1"]], "Example": [[3, null], [3, null], [3, null], [12, "example"], [13, "example"], [14, "example"], [16, "example"], [17, "example"], [18, "example"], [19, "example"], [20, "example"], [21, "example"], [22, "example"], [54, "example"], [55, "example"], [124, "example"], [229, null], [229, null], [229, null], [244, "example"], [246, "example"], [249, "example"], [251, "example"], [252, "example"], [253, "example"], [254, "example"], [255, "example"], [256, null], [256, null], [256, null], [269, "example"], [270, "example"], [271, "example"], [272, "example"], [273, "example"], [274, "example"], [275, "example"], [276, "example"], [277, "example"], [279, "example"], [280, "example"], [281, "example"], [282, "example"], [283, "example"], [284, "example"], [285, "example"], [286, "example"], [288, "example"], [290, "example"], [292, "example"], [293, "example"], [294, "example"], [295, "example"], [296, "example"], [297, "example"], [298, "example"], [299, "example"], [300, "example"], [301, "example"], [302, "example"], [303, "example"], [305, "example"], [307, "example"], [311, "example"], [313, "example"], [314, "example"], [315, "example"], [317, "example"], [318, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[245, null]], "Example 2: Adding a new axis to a 2D tensor": [[245, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[245, null]], "Example Usage": [[10, "example-usage"], [40, "example-usage"], [41, "example-usage"], [42, "example-usage"], [44, "example-usage"], [45, "example-usage"], [47, "example-usage"], [48, "example-usage"], [49, "example-usage"], [50, "example-usage"], [82, "example-usage"], [83, "example-usage"], [84, "example-usage"], [85, "example-usage"], [90, "example-usage"], [157, "example-usage"], [319, "example-usage"], [320, "example-usage"], [330, "example-usage"]], "Example Use Cases": [[248, "example-use-cases"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [6, "examples"], [7, "examples"], [8, "examples"], [11, "examples"], [23, "examples"], [24, "examples"], [25, "examples"], [26, "examples"], [27, "examples"], [28, "examples"], [29, "examples"], [30, "examples"], [31, "examples"], [32, "examples"], [33, "examples"], [34, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [53, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [60, "examples"], [61, "examples"], [62, "examples"], [63, "examples"], [64, "examples"], [65, "examples"], [66, "examples"], [67, "examples"], [68, "examples"], [70, "examples"], [71, "examples"], [72, "examples"], [73, "examples"], [74, "examples"], [75, "examples"], [77, "examples"], [78, "examples"], [79, "examples"], [80, "examples"], [81, "examples"], [87, "examples"], [88, "examples"], [89, "examples"], [91, "examples"], [92, "examples"], [93, "examples"], [94, "examples"], [95, "examples"], [96, "examples"], [97, "examples"], [98, "examples"], [99, "examples"], [101, "examples"], [102, "examples"], [103, "examples"], [104, "examples"], [105, "examples"], [106, "examples"], [107, "examples"], [108, "examples"], [109, "examples"], [111, "examples"], [112, "examples"], [114, "examples"], [115, "examples"], [116, "examples"], [117, "examples"], [118, "examples"], [119, "examples"], [120, "examples"], [121, "examples"], [122, "examples"], [125, "examples"], [126, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [132, "examples"], [134, "examples"], [135, "examples"], [136, "examples"], [137, "examples"], [139, "examples"], [140, "examples"], [141, "examples"], [143, "examples"], [144, "examples"], [145, "examples"], [146, "examples"], [147, "examples"], [148, "examples"], [149, "examples"], [150, "examples"], [152, "examples"], [153, "examples"], [154, "examples"], [156, "examples"], [158, "examples"], [159, "examples"], [160, "examples"], [161, "examples"], [162, "examples"], [163, "examples"], [164, "examples"], [165, "examples"], [167, "examples"], [169, "examples"], [170, "examples"], [171, "examples"], [172, "examples"], [173, "examples"], [174, "examples"], [175, "examples"], [176, "examples"], [177, "examples"], [178, "examples"], [179, "examples"], [180, "examples"], [181, "examples"], [182, "examples"], [183, "examples"], [184, "examples"], [185, "examples"], [186, "examples"], [188, "examples"], [189, "examples"], [190, "examples"], [192, "examples"], [193, "examples"], [194, "examples"], [195, "examples"], [196, "examples"], [199, "examples"], [200, "examples"], [201, "examples"], [203, "examples"], [204, "examples"], [205, "examples"], [206, "examples"], [207, "examples"], [209, "examples"], [210, "examples"], [211, "examples"], [212, "examples"], [213, "examples"], [214, "examples"], [215, "examples"], [217, "examples"], [218, "examples"], [219, "examples"], [220, "examples"], [221, "examples"], [222, "examples"], [223, "examples"], [224, "examples"], [225, "examples"], [227, "examples"], [230, "examples"], [231, "examples"], [232, "examples"], [233, "examples"], [234, "examples"], [235, "examples"], [236, "examples"], [237, "examples"], [238, "examples"], [239, "examples"], [240, "examples"], [241, "examples"], [242, "examples"], [247, "examples"], [257, "examples"], [258, "examples"], [259, "examples"], [260, "examples"], [261, "examples"], [263, "examples"], [264, "examples"], [265, "examples"], [266, "examples"], [267, "examples"], [268, "examples"], [287, "examples"], [289, "examples"], [291, "examples"], [304, "examples"], [306, "examples"], [309, "examples"], [310, "examples"], [312, "examples"], [316, "examples"], [321, "examples"], [322, "examples"], [323, "examples"], [324, "examples"], [325, "examples"], [326, "examples"], [327, "examples"], [328, "examples"]], "FashionMNIST": [[7, null]], "Features": [[11, "features"]], "Forward Calculation": [[12, "forward-calculation"], [13, "forward-calculation"], [14, "forward-calculation"], [16, "forward-calculation"], [17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [20, "forward-calculation"], [21, "forward-calculation"], [22, "forward-calculation"], [58, "forward-calculation"], [69, "forward-calculation"], [76, "forward-calculation"], [86, "forward-calculation"], [105, "forward-calculation"], [106, "forward-calculation"], [107, "forward-calculation"], [108, "forward-calculation"], [109, "forward-calculation"], [111, "forward-calculation"], [112, "forward-calculation"], [114, "forward-calculation"], [115, "forward-calculation"], [116, "forward-calculation"], [117, "forward-calculation"], [118, "forward-calculation"], [119, "forward-calculation"], [124, "forward-calculation"], [132, "forward-calculation"], [134, "forward-calculation"], [145, "forward-calculation"], [146, "forward-calculation"], [147, "forward-calculation"], [156, "forward-calculation"], [158, "forward-calculation"], [159, "forward-calculation"], [160, "forward-calculation"], [161, "forward-calculation"], [162, "forward-calculation"], [163, "forward-calculation"], [164, "forward-calculation"], [165, "forward-calculation"], [169, "forward-calculation"], [170, "forward-calculation"], [173, "forward-calculation"], [174, "forward-calculation"], [175, "forward-calculation"], [176, "forward-calculation"], [177, "forward-calculation"], [178, "forward-calculation"], [179, "forward-calculation"], [180, "forward-calculation"], [181, "forward-calculation"], [182, "forward-calculation"], [183, "forward-calculation"], [184, "forward-calculation"], [185, "forward-calculation"], [186, "forward-calculation"], [188, "forward-calculation"], [189, "forward-calculation"], [190, "forward-calculation"], [192, "forward-calculation"], [193, "forward-calculation"], [194, "forward-calculation"], [195, "forward-calculation"], [196, "forward-calculation"], [199, "forward-calculation"], [200, "forward-calculation"], [201, "forward-calculation"], [203, "forward-calculation"], [204, "forward-calculation"], [205, "forward-calculation"], [206, "forward-calculation"], [207, "forward-calculation"], [209, "forward-calculation"], [210, "forward-calculation"], [211, "forward-calculation"], [212, "forward-calculation"], [213, "forward-calculation"], [214, "forward-calculation"], [215, "forward-calculation"], [217, "forward-calculation"], [218, "forward-calculation"], [219, "forward-calculation"], [220, "forward-calculation"], [221, "forward-calculation"], [222, "forward-calculation"], [223, "forward-calculation"], [224, "forward-calculation"], [225, "forward-calculation"], [258, "forward-calculation"], [259, "forward-calculation"], [260, "forward-calculation"], [261, "forward-calculation"], [262, "forward-calculation"], [263, "forward-calculation"], [264, "forward-calculation"], [265, "forward-calculation"], [266, "forward-calculation"], [267, "forward-calculation"], [268, "forward-calculation"], [279, "forward-calculation"], [280, "forward-calculation"], [281, "forward-calculation"], [282, "forward-calculation"], [283, "forward-calculation"], [284, "forward-calculation"], [285, "forward-calculation"], [286, "forward-calculation"], [287, "forward-calculation"], [288, "forward-calculation"], [289, "forward-calculation"], [290, "forward-calculation"], [291, "forward-calculation"], [292, "forward-calculation"], [293, "forward-calculation"], [294, "forward-calculation"], [295, "forward-calculation"], [296, "forward-calculation"], [297, "forward-calculation"], [298, "forward-calculation"], [299, "forward-calculation"], [300, "forward-calculation"], [301, "forward-calculation"], [302, "forward-calculation"], [303, "forward-calculation"], [305, "forward-calculation"], [307, "forward-calculation"], [309, "forward-calculation"], [310, "forward-calculation"], [311, "forward-calculation"], [312, "forward-calculation"], [313, "forward-calculation"], [314, "forward-calculation"], [315, "forward-calculation"], [316, "forward-calculation"], [317, "forward-calculation"], [318, "forward-calculation"], [321, "forward-calculation"], [322, "forward-calculation"], [323, "forward-calculation"], [324, "forward-calculation"], [325, "forward-calculation"], [326, "forward-calculation"], [327, "forward-calculation"], [328, "forward-calculation"]], "Forward Pass": [[96, "forward-pass"]], "Function Signature": [[12, "function-signature"], [13, "function-signature"], [14, "function-signature"], [16, "function-signature"], [17, "function-signature"], [18, "function-signature"], [19, "function-signature"], [20, "function-signature"], [21, "function-signature"], [22, "function-signature"], [24, "function-signature"], [26, "function-signature"], [27, "function-signature"], [28, "function-signature"], [29, "function-signature"], [31, "function-signature"], [32, "function-signature"], [33, "function-signature"], [34, "function-signature"], [35, "function-signature"], [36, "function-signature"], [37, "function-signature"], [38, "function-signature"], [40, "function-signature"], [41, "function-signature"], [42, "function-signature"], [44, "function-signature"], [45, "function-signature"], [48, "function-signature"], [49, "function-signature"], [50, "function-signature"], [54, "function-signature"], [55, "function-signature"], [56, "function-signature"], [57, "function-signature"], [59, "function-signature"], [60, "function-signature"], [61, "function-signature"], [62, "function-signature"], [63, "function-signature"], [64, "function-signature"], [65, "function-signature"], [66, "function-signature"], [67, "function-signature"], [68, "function-signature"], [70, "function-signature"], [71, "function-signature"], [72, "function-signature"], [73, "function-signature"], [74, "function-signature"], [75, "function-signature"], [77, "function-signature"], [78, "function-signature"], [79, "function-signature"], [80, "function-signature"], [81, "function-signature"], [82, "function-signature"], [83, "function-signature"], [84, "function-signature"], [85, "function-signature"], [87, "function-signature"], [88, "function-signature"], [89, "function-signature"], [90, "function-signature"], [92, "function-signature"], [93, "function-signature"], [94, "function-signature"], [95, "function-signature"], [97, "function-signature"], [99, "function-signature"], [101, "function-signature"], [111, "function-signature"], [112, "function-signature"], [114, "function-signature"], [115, "function-signature"], [116, "function-signature"], [117, "function-signature"], [118, "function-signature"], [119, "function-signature"], [120, "function-signature"], [121, "function-signature"], [122, "function-signature"], [124, "function-signature"], [125, "function-signature"], [126, "function-signature"], [127, "function-signature"], [128, "function-signature"], [129, "function-signature"], [132, "function-signature"], [134, "function-signature"], [135, "function-signature"], [136, "function-signature"], [137, "function-signature"], [139, "function-signature"], [140, "function-signature"], [141, "function-signature"], [143, "function-signature"], [144, "function-signature"], [145, "function-signature"], [146, "function-signature"], [147, "function-signature"], [148, "function-signature"], [149, "function-signature"], [150, "function-signature"], [152, "function-signature"], [153, "function-signature"], [154, "function-signature"], [156, "function-signature"], [157, "function-signature"], [167, "function-signature"], [169, "function-signature"], [170, "function-signature"], [171, "function-signature"], [172, "function-signature"], [173, "function-signature"], [174, "function-signature"], [244, "function-signature"], [246, "function-signature"], [247, "function-signature"], [249, "function-signature"], [251, "function-signature"], [252, "function-signature"], [253, "function-signature"], [254, "function-signature"], [255, "function-signature"], [258, "function-signature"], [259, "function-signature"], [260, "function-signature"], [261, "function-signature"], [262, "function-signature"], [263, "function-signature"], [264, "function-signature"], [265, "function-signature"], [266, "function-signature"], [267, "function-signature"], [268, "function-signature"], [269, "function-signature"], [270, "function-signature"], [271, "function-signature"], [272, "function-signature"], [273, "function-signature"], [274, "function-signature"], [275, "function-signature"], [276, "function-signature"], [277, "function-signature"], [279, "function-signature"], [280, "function-signature"], [281, "function-signature"], [282, "function-signature"], [283, "function-signature"], [284, "function-signature"], [285, "function-signature"], [286, "function-signature"], [287, "function-signature"], [288, "function-signature"], [289, "function-signature"], [290, "function-signature"], [291, "function-signature"], [292, "function-signature"], [293, "function-signature"], [294, "function-signature"], [295, "function-signature"], [296, "function-signature"], [297, "function-signature"], [298, "function-signature"], [299, "function-signature"], [300, "function-signature"], [301, "function-signature"], [302, "function-signature"], [303, "function-signature"], [304, "function-signature"], [305, "function-signature"], [306, "function-signature"], [307, "function-signature"], [309, "function-signature"], [310, "function-signature"], [311, "function-signature"], [312, "function-signature"], [313, "function-signature"], [314, "function-signature"], [315, "function-signature"], [316, "function-signature"], [317, "function-signature"], [318, "function-signature"]], "Fused Layers": [[166, null]], "Future Work": [[4, "future-work"]], "Getting Started": [[231, "getting-started"]], "How It Works": [[244, "how-it-works"], [246, "how-it-works"]], "Image Datasets": [[9, null]], "Image Transformations": [[329, null]], "Inception": [[39, null]], "InceptionResNet": [[43, null]], "Indexing and slicing": [[257, null]], "Inspecting Optimizer State": [[231, null], [232, null], [233, null], [234, null], [235, null], [236, null], [237, null], [238, null], [239, null], [240, null], [241, null], [242, null]], "Integration with lucid": [[3, "integration-with-lucid"], [229, "integration-with-lucid"], [256, "integration-with-lucid"], [330, "integration-with-lucid"]], "Iterating through a tensor": [[257, null]], "Key Components": [[3, "key-components"], [229, "key-components"]], "Key Features": [[4, "key-features"], [10, "key-features"], [82, "key-features"], [83, "key-features"], [84, "key-features"], [85, "key-features"], [90, "key-features"], [231, "key-features"], [256, "key-features"]], "Key Transformations": [[330, "key-transformations"]], "LeNet": [[47, null]], "Learn More": [[256, null]], "Limitations": [[10, "limitations"]], "Linear Algebra Operations": [[15, null]], "Linear Functions": [[131, null], [133, null]], "Linear Layers": [[198, null], [202, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[131, null], [138, null]], "Loss Layers": [[198, null], [208, null]], "Lucid": [[10, null]], "MNIST": [[8, null]], "Matrix Multiplication Rules": [[262, "matrix-multiplication-rules"]], "Metadata Captured": [[247, "metadata-captured"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [6, "methods"], [7, "methods"], [8, "methods"], [43, "methods"], [47, "methods"], [91, "methods"], [103, "methods"], [104, "methods"], [230, "methods"], [257, "methods"]], "MobileNet": [[51, null]], "MobileNet_V2": [[52, null]], "MobileNet_V3": [[53, null]], "Modules": [[198, null]], "Normalization Functions": [[131, null], [142, null]], "Normalization Layers": [[198, null], [216, null]], "Notes": [[10, "notes"]], "Optimizers": [[243, null]], "Organizing Models": [[229, "organizing-models"]], "Overview": [[3, "overview"], [4, "overview"], [10, "overview"], [39, "overview"], [40, "overview"], [41, "overview"], [42, "overview"], [43, "overview"], [44, "overview"], [45, "overview"], [47, "overview"], [48, "overview"], [49, "overview"], [50, "overview"], [51, "overview"], [52, "overview"], [53, "overview"], [59, "overview"], [60, "overview"], [61, "overview"], [62, "overview"], [63, "overview"], [64, "overview"], [65, "overview"], [66, "overview"], [77, "overview"], [78, "overview"], [79, "overview"], [80, "overview"], [81, "overview"], [229, "overview"], [231, "overview"], [256, "overview"], [330, "overview"]], "Parameters": [[1, "parameters"], [5, "parameters"], [6, "parameters"], [7, "parameters"], [8, "parameters"], [12, "parameters"], [13, "parameters"], [14, "parameters"], [16, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [20, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [47, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [87, "parameters"], [88, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [101, "parameters"], [102, "parameters"], [104, "parameters"], [105, "parameters"], [106, "parameters"], [107, "parameters"], [108, "parameters"], [109, "parameters"], [111, "parameters"], [112, "parameters"], [114, "parameters"], [115, "parameters"], [116, "parameters"], [117, "parameters"], [118, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [122, "parameters"], [124, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [132, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"], [137, "parameters"], [139, "parameters"], [140, "parameters"], [141, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [152, "parameters"], [153, "parameters"], [154, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"], [159, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [163, "parameters"], [164, "parameters"], [165, "parameters"], [167, "parameters"], [169, "parameters"], [170, "parameters"], [171, "parameters"], [172, "parameters"], [173, "parameters"], [174, "parameters"], [175, "parameters"], [176, "parameters"], [179, "parameters"], [180, "parameters"], [182, "parameters"], [183, "parameters"], [184, "parameters"], [186, "parameters"], [188, "parameters"], [189, "parameters"], [190, "parameters"], [192, "parameters"], [193, "parameters"], [194, "parameters"], [195, "parameters"], [196, "parameters"], [199, "parameters"], [200, "parameters"], [201, "parameters"], [203, "parameters"], [204, "parameters"], [205, "parameters"], [206, "parameters"], [207, "parameters"], [209, "parameters"], [210, "parameters"], [211, "parameters"], [212, "parameters"], [213, "parameters"], [214, "parameters"], [215, "parameters"], [217, "parameters"], [218, "parameters"], [219, "parameters"], [220, "parameters"], [221, "parameters"], [222, "parameters"], [223, "parameters"], [224, "parameters"], [225, "parameters"], [227, "parameters"], [232, "parameters"], [233, "parameters"], [234, "parameters"], [235, "parameters"], [236, "parameters"], [237, "parameters"], [238, "parameters"], [239, "parameters"], [240, "parameters"], [241, "parameters"], [242, "parameters"], [246, "parameters"], [247, "parameters"], [249, "parameters"], [251, "parameters"], [252, "parameters"], [253, "parameters"], [254, "parameters"], [255, "parameters"], [257, "parameters"], [258, "parameters"], [259, "parameters"], [260, "parameters"], [261, "parameters"], [262, "parameters"], [263, "parameters"], [264, "parameters"], [265, "parameters"], [266, "parameters"], [267, "parameters"], [268, "parameters"], [269, "parameters"], [270, "parameters"], [271, "parameters"], [272, "parameters"], [273, "parameters"], [274, "parameters"], [275, "parameters"], [276, "parameters"], [277, "parameters"], [279, "parameters"], [280, "parameters"], [281, "parameters"], [282, "parameters"], [283, "parameters"], [284, "parameters"], [285, "parameters"], [286, "parameters"], [287, "parameters"], [288, "parameters"], [289, "parameters"], [290, "parameters"], [291, "parameters"], [292, "parameters"], [293, "parameters"], [294, "parameters"], [295, "parameters"], [296, "parameters"], [297, "parameters"], [298, "parameters"], [299, "parameters"], [300, "parameters"], [301, "parameters"], [302, "parameters"], [303, "parameters"], [304, "parameters"], [305, "parameters"], [306, "parameters"], [307, "parameters"], [309, "parameters"], [310, "parameters"], [311, "parameters"], [312, "parameters"], [313, "parameters"], [314, "parameters"], [315, "parameters"], [316, "parameters"], [317, "parameters"], [318, "parameters"], [319, "parameters"], [320, "parameters"], [321, "parameters"], [322, "parameters"], [323, "parameters"], [324, "parameters"], [325, "parameters"], [326, "parameters"], [327, "parameters"], [328, "parameters"]], "Performing backpropagation": [[257, null]], "Pooling Functions": [[131, null], [151, null]], "Pooling Layers": [[198, null], [226, null]], "Potential Pitfalls": [[244, "potential-pitfalls"], [246, "potential-pitfalls"]], "Properties": [[104, "properties"], [257, "properties"]], "Raises": [[12, "raises"], [13, "raises"], [14, "raises"], [16, "raises"], [17, "raises"], [18, "raises"], [19, "raises"], [20, "raises"], [21, "raises"], [22, "raises"]], "Random Number Generations": [[250, null]], "References": [[5, "references"], [6, "references"], [7, "references"], [8, "references"], [164, "references"], [231, "references"]], "ResNeXt": [[69, null]], "ResNet": [[58, null]], "Returns": [[12, "returns"], [13, "returns"], [14, "returns"], [16, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [20, "returns"], [21, "returns"], [22, "returns"], [24, "returns"], [26, "returns"], [27, "returns"], [28, "returns"], [29, "returns"], [31, "returns"], [32, "returns"], [33, "returns"], [34, "returns"], [35, "returns"], [36, "returns"], [37, "returns"], [38, "returns"], [40, "returns"], [41, "returns"], [42, "returns"], [44, "returns"], [45, "returns"], [48, "returns"], [49, "returns"], [50, "returns"], [54, "returns"], [55, "returns"], [56, "returns"], [57, "returns"], [59, "returns"], [60, "returns"], [61, "returns"], [62, "returns"], [63, "returns"], [64, "returns"], [65, "returns"], [66, "returns"], [67, "returns"], [68, "returns"], [70, "returns"], [71, "returns"], [72, "returns"], [73, "returns"], [74, "returns"], [75, "returns"], [77, "returns"], [78, "returns"], [79, "returns"], [80, "returns"], [81, "returns"], [82, "returns"], [83, "returns"], [84, "returns"], [85, "returns"], [87, "returns"], [88, "returns"], [89, "returns"], [90, "returns"], [92, "returns"], [93, "returns"], [94, "returns"], [95, "returns"], [97, "returns"], [99, "returns"], [101, "returns"], [111, "returns"], [112, "returns"], [114, "returns"], [115, "returns"], [116, "returns"], [117, "returns"], [118, "returns"], [119, "returns"], [120, "returns"], [121, "returns"], [122, "returns"], [124, "returns"], [125, "returns"], [126, "returns"], [127, "returns"], [128, "returns"], [129, "returns"], [132, "returns"], [134, "returns"], [135, "returns"], [136, "returns"], [137, "returns"], [139, "returns"], [140, "returns"], [141, "returns"], [143, "returns"], [144, "returns"], [145, "returns"], [146, "returns"], [147, "returns"], [148, "returns"], [149, "returns"], [150, "returns"], [152, "returns"], [153, "returns"], [154, "returns"], [156, "returns"], [157, "returns"], [165, "returns"], [167, "returns"], [169, "returns"], [170, "returns"], [171, "returns"], [172, "returns"], [173, "returns"], [174, "returns"], [181, "returns"], [244, "returns"], [246, "returns"], [249, "returns"], [251, "returns"], [252, "returns"], [253, "returns"], [254, "returns"], [255, "returns"], [258, "returns"], [259, "returns"], [260, "returns"], [261, "returns"], [262, "returns"], [263, "returns"], [264, "returns"], [265, "returns"], [266, "returns"], [267, "returns"], [268, "returns"], [269, "returns"], [270, "returns"], [271, "returns"], [272, "returns"], [273, "returns"], [274, "returns"], [275, "returns"], [276, "returns"], [277, "returns"], [279, "returns"], [280, "returns"], [281, "returns"], [282, "returns"], [283, "returns"], [284, "returns"], [285, "returns"], [286, "returns"], [287, "returns"], [288, "returns"], [289, "returns"], [290, "returns"], [291, "returns"], [292, "returns"], [293, "returns"], [294, "returns"], [295, "returns"], [296, "returns"], [297, "returns"], [298, "returns"], [299, "returns"], [300, "returns"], [301, "returns"], [302, "returns"], [303, "returns"], [304, "returns"], [305, "returns"], [306, "returns"], [307, "returns"], [309, "returns"], [310, "returns"], [311, "returns"], [312, "returns"], [313, "returns"], [314, "returns"], [315, "returns"], [316, "returns"], [317, "returns"], [318, "returns"]], "SENet": [[76, null]], "SKNet": [[86, null]], "See Also": [[231, "see-also"]], "Selective Kernel": [[166, null]], "Squeeze-and-Excitation": [[166, null]], "Summary Table": [[101, "summary-table"]], "Tensor Generating Functions": [[278, null]], "Tensor Operations": [[278, null]], "Tensor Utilites": [[308, null]], "Type Definitions": [[248, "type-definitions"]], "Unary Functions": [[278, null]], "Usage": [[4, "usage"], [102, "usage"], [157, "usage"], [244, "usage"], [245, "usage"], [246, "usage"], [309, "usage"], [319, "usage"], [320, "usage"], [330, "usage"]], "Use another Tensor as input": [[304, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using the ASGD Optimizer": [[232, null]], "Using the Adadelta Optimizer": [[233, null]], "Using the Adagrad Optimizer": [[234, null]], "Using the Adam Optimizer": [[235, null]], "Using the AdamW Optimizer": [[236, null]], "Using the Adamax Optimizer": [[237, null]], "Using the NAdam Optimizer": [[238, null]], "Using the RAdam Optimizer": [[239, null]], "Using the RMSprop Optimizer": [[240, null]], "Using the Rprop Optimizer": [[241, null]], "Using the SGD Optimizer": [[242, null]], "Utility Functions": [[131, null], [155, null]], "VGGNet": [[91, null]], "Vision Layers": [[198, null], [228, null]], "Weight Initializations": [[168, null]], "Why Use Type Aliases?": [[248, null]], "Xception": [[96, null]], "ZFNet": [[98, null]], "activation Functions": [[131, null]], "alexnet": [[24, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "densenet_121": [[26, null]], "densenet_169": [[27, null]], "densenet_201": [[28, null]], "densenet_264": [[29, null]], "efficientnet_b0": [[31, null]], "efficientnet_b1": [[32, null]], "efficientnet_b2": [[33, null]], "efficientnet_b3": [[34, null]], "efficientnet_b4": [[35, null]], "efficientnet_b5": [[36, null]], "efficientnet_b6": [[37, null]], "efficientnet_b7": [[38, null]], "inception_resnet_v1": [[44, null]], "inception_resnet_v2": [[45, null]], "inception_v1": [[40, null]], "inception_v3": [[41, null]], "inception_v4": [[42, null]], "lenet_1": [[48, null]], "lenet_4": [[49, null]], "lenet_5": [[50, null]], "lucid.Tensor": [[257, null]], "lucid.abs": [[279, null]], "lucid.add": [[258, null]], "lucid.arange": [[269, null]], "lucid.arccos": [[280, null]], "lucid.arcsin": [[281, null]], "lucid.arctan": [[282, null]], "lucid.clip": [[283, null]], "lucid.concatenate": [[305, null]], "lucid.cos": [[284, null]], "lucid.cosh": [[285, null]], "lucid.cube": [[286, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[270, null]], "lucid.div": [[259, null]], "lucid.dot": [[260, null]], "lucid.empty": [[271, null]], "lucid.empty_like": [[272, null]], "lucid.exp": [[287, null]], "lucid.eye": [[273, null]], "lucid.flatten": [[306, null]], "lucid.grad_enabled": [[244, null]], "lucid.hstack": [[307, null]], "lucid.inner": [[261, null]], "lucid.linalg": [[11, null]], "lucid.linalg.cholesky": [[12, null]], "lucid.linalg.det": [[13, null]], "lucid.linalg.eig": [[14, null]], "lucid.linalg.inv": [[16, null]], "lucid.linalg.matrix_power": [[17, null]], "lucid.linalg.norm": [[18, null]], "lucid.linalg.pinv": [[19, null]], "lucid.linalg.qr": [[20, null]], "lucid.linalg.solve": [[21, null]], "lucid.linalg.svd": [[22, null]], "lucid.log": [[288, null]], "lucid.matmul": [[262, null]], "lucid.max": [[289, null]], "lucid.maximum": [[263, null]], "lucid.mean": [[290, null]], "lucid.meshgrid": [[309, null]], "lucid.min": [[291, null]], "lucid.minimum": [[264, null]], "lucid.models": [[100, null]], "lucid.mul": [[265, null]], "lucid.newaxis": [[245, null]], "lucid.nn": [[229, null]], "lucid.nn.functional": [[131, null]], "lucid.no_grad": [[246, null]], "lucid.ones": [[274, null]], "lucid.ones_like": [[275, null]], "lucid.optim": [[231, null]], "lucid.outer": [[266, null]], "lucid.pad": [[310, null]], "lucid.power": [[267, null]], "lucid.random": [[256, null]], "lucid.random.bernoulli": [[249, null]], "lucid.random.rand": [[251, null]], "lucid.random.randint": [[252, null]], "lucid.random.randn": [[253, null]], "lucid.random.seed": [[254, null]], "lucid.random.uniform": [[255, null]], "lucid.ravel": [[311, null]], "lucid.reciprocal": [[292, null]], "lucid.register_model": [[247, null]], "lucid.repeat": [[312, null]], "lucid.reshape": [[313, null]], "lucid.sign": [[293, null]], "lucid.sin": [[294, null]], "lucid.sinh": [[295, null]], "lucid.sqrt": [[296, null]], "lucid.square": [[297, null]], "lucid.squeeze": [[314, null]], "lucid.stack": [[315, null]], "lucid.sub": [[268, null]], "lucid.sum": [[298, null]], "lucid.tan": [[299, null]], "lucid.tanh": [[300, null]], "lucid.tensor": [[304, null]], "lucid.tile": [[316, null]], "lucid.trace": [[301, null]], "lucid.transforms": [[330, null]], "lucid.transpose": [[302, null]], "lucid.types": [[248, null]], "lucid.unsqueeze": [[317, null]], "lucid.var": [[303, null]], "lucid.vstack": [[318, null]], "lucid.zeros": [[276, null]], "lucid.zeros_like": [[277, null]], "mobilenet": [[54, null]], "mobilenet_v2": [[55, null]], "mobilenet_v3_large": [[56, null]], "mobilenet_v3_small": [[57, null]], "models.summarize": [[101, null]], "nn.AdaptiveAvgPool1d": [[217, null]], "nn.AdaptiveAvgPool2d": [[218, null]], "nn.AdaptiveAvgPool3d": [[219, null]], "nn.AlphaDropout": [[192, null]], "nn.AvgPool1d": [[220, null]], "nn.AvgPool2d": [[221, null]], "nn.AvgPool3d": [[222, null]], "nn.BCELoss": [[203, null]], "nn.BatchNorm1d": [[209, null]], "nn.BatchNorm2d": [[210, null]], "nn.BatchNorm3d": [[211, null]], "nn.Bilinear": [[199, null]], "nn.Buffer": [[102, null]], "nn.Conv1d": [[188, null]], "nn.Conv2d": [[189, null]], "nn.Conv3d": [[190, null]], "nn.ConvBNReLU1d": [[158, null]], "nn.ConvBNReLU2d": [[159, null]], "nn.ConvBNReLU3d": [[160, null]], "nn.CrossEntropyLoss": [[204, null]], "nn.DepthSeparableConv1d": [[161, null]], "nn.DepthSeparableConv2d": [[162, null]], "nn.DepthSeparableConv3d": [[163, null]], "nn.Dropout": [[193, null]], "nn.Dropout1d": [[194, null]], "nn.Dropout2d": [[195, null]], "nn.Dropout3d": [[196, null]], "nn.ELU": [[175, null]], "nn.GELU": [[176, null]], "nn.HardSigmoid": [[177, null]], "nn.HardSwish": [[178, null]], "nn.HuberLoss": [[205, null]], "nn.Identity": [[200, null]], "nn.InstanceNorm1d": [[212, null]], "nn.InstanceNorm2d": [[213, null]], "nn.InstanceNorm3d": [[214, null]], "nn.LayerNorm": [[215, null]], "nn.LeakyReLU": [[179, null]], "nn.Linear": [[201, null]], "nn.MSELoss": [[206, null]], "nn.MaxPool1d": [[223, null]], "nn.MaxPool2d": [[224, null]], "nn.MaxPool3d": [[225, null]], "nn.Module": [[103, null]], "nn.ModuleDict": [[105, null]], "nn.ModuleList": [[106, null]], "nn.NLLLoss": [[207, null]], "nn.Parameter": [[104, null]], "nn.ParameterDict": [[107, null]], "nn.ParameterList": [[108, null]], "nn.ReLU": [[180, null]], "nn.ReLU6": [[181, null]], "nn.SELU": [[182, null]], "nn.SEModule": [[164, null]], "nn.SelectiveKernel": [[165, null]], "nn.Sequential": [[109, null]], "nn.Sigmoid": [[183, null]], "nn.Softmax": [[184, null]], "nn.Swish": [[185, null]], "nn.Tanh": [[186, null]], "nn.Upsample": [[227, null]], "nn.functional.adaptive_avg_pool1d": [[145, null]], "nn.functional.adaptive_avg_pool2d": [[146, null]], "nn.functional.adaptive_avg_pool3d": [[147, null]], "nn.functional.alpha_dropout": [[125, null]], "nn.functional.avg_pool1d": [[148, null]], "nn.functional.avg_pool2d": [[149, null]], "nn.functional.avg_pool3d": [[150, null]], "nn.functional.batch_norm": [[141, null]], "nn.functional.bilinear": [[132, null]], "nn.functional.binary_cross_entropy": [[135, null]], "nn.functional.conv1d": [[120, null]], "nn.functional.conv2d": [[121, null]], "nn.functional.conv3d": [[122, null]], "nn.functional.cross_entropy": [[136, null]], "nn.functional.dropout": [[126, null]], "nn.functional.dropout1d": [[127, null]], "nn.functional.dropout2d": [[128, null]], "nn.functional.dropout3d": [[129, null]], "nn.functional.elu": [[111, null]], "nn.functional.gelu": [[112, null]], "nn.functional.huber_loss": [[137, null]], "nn.functional.instance_norm": [[143, null]], "nn.functional.interpolate": [[156, null]], "nn.functional.layer_norm": [[144, null]], "nn.functional.leaky_relu": [[114, null]], "nn.functional.linear": [[134, null]], "nn.functional.max_pool1d": [[152, null]], "nn.functional.max_pool2d": [[153, null]], "nn.functional.max_pool3d": [[154, null]], "nn.functional.mse_loss": [[139, null]], "nn.functional.nll_loss": [[140, null]], "nn.functional.relu": [[115, null]], "nn.functional.rotate": [[157, null]], "nn.functional.selu": [[116, null]], "nn.functional.sigmoid": [[117, null]], "nn.functional.softmax": [[118, null]], "nn.functional.tanh": [[119, null]], "nn.functional.unfold": [[124, null]], "nn.init.constant": [[167, null]], "nn.init.kaiming_normal": [[169, null]], "nn.init.kaiming_uniform": [[170, null]], "nn.init.normal": [[171, null]], "nn.init.uniform": [[172, null]], "nn.init.xavier_normal": [[173, null]], "nn.init.xavier_uniform": [[174, null]], "optim.ASGD": [[232, null]], "optim.Adadelta": [[233, null]], "optim.Adagrad": [[234, null]], "optim.Adam": [[235, null]], "optim.AdamW": [[236, null]], "optim.Adamax": [[237, null]], "optim.NAdam": [[238, null]], "optim.Optimizer": [[230, null]], "optim.RAdam": [[239, null]], "optim.RMSprop": [[240, null]], "optim.Rprop": [[241, null]], "optim.SGD": [[242, null]], "resnet_1001": [[59, null]], "resnet_101": [[60, null]], "resnet_152": [[61, null]], "resnet_18": [[62, null]], "resnet_200": [[63, null]], "resnet_269": [[64, null]], "resnet_34": [[65, null]], "resnet_50": [[66, null]], "resnext_101_32x16d": [[70, null]], "resnext_101_32x32d": [[71, null]], "resnext_101_32x4d": [[72, null]], "resnext_101_32x8d": [[73, null]], "resnext_101_64x4d": [[74, null]], "resnext_50_32x4d": [[75, null]], "se_resnet_101": [[77, null]], "se_resnet_152": [[78, null]], "se_resnet_18": [[79, null]], "se_resnet_34": [[80, null]], "se_resnet_50": [[81, null]], "se_resnext_101_32x4d": [[82, null]], "se_resnext_101_32x8d": [[83, null]], "se_resnext_101_64x4d": [[84, null]], "se_resnext_50_32x4d": [[85, null]], "sk_resnet_18": [[87, null]], "sk_resnet_34": [[88, null]], "sk_resnet_50": [[89, null]], "sk_resnext_50_32x4d": [[90, null]], "transforms.CenterCrop": [[321, null]], "transforms.Compose": [[319, null]], "transforms.Normalize": [[322, null]], "transforms.RandomCrop": [[323, null]], "transforms.RandomGrayscale": [[324, null]], "transforms.RandomHorizontalFlip": [[325, null]], "transforms.RandomRotation": [[326, null]], "transforms.RandomVerticalFlip": [[327, null]], "transforms.Resize": [[328, null]], "transforms.ToTensor": [[320, null]], "vggnet_11": [[92, null]], "vggnet_13": [[93, null]], "vggnet_16": [[94, null]], "vggnet_19": [[95, null]], "wide_resnet_101": [[67, null]], "wide_resnet_50": [[68, null]], "xception": [[97, null]], "zfnet": [[99, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/CIFAR10", "datasets/image/CIFAR100", "datasets/image/FashionMNIST", "datasets/image/MNIST", "datasets/image/index", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/conv/alex/AlexNet", "models/conv/alex/alexnet", "models/conv/dense/DenseNet", "models/conv/dense/densenet_121", "models/conv/dense/densenet_169", "models/conv/dense/densenet_201", "models/conv/dense/densenet_264", "models/conv/efficient/EfficientNet", "models/conv/efficient/efficientnet_b0", "models/conv/efficient/efficientnet_b1", "models/conv/efficient/efficientnet_b2", "models/conv/efficient/efficientnet_b3", "models/conv/efficient/efficientnet_b4", "models/conv/efficient/efficientnet_b5", "models/conv/efficient/efficientnet_b6", "models/conv/efficient/efficientnet_b7", "models/conv/inception/Inception", "models/conv/inception/inception_v1", "models/conv/inception/inception_v3", "models/conv/inception/inception_v4", "models/conv/inception_res/InceptionResNet", "models/conv/inception_res/inception_resnet_v1", "models/conv/inception_res/inception_resnet_v2", "models/conv/index", "models/conv/lenet/LeNet", "models/conv/lenet/lenet_1", "models/conv/lenet/lenet_4", "models/conv/lenet/lenet_5", "models/conv/mobile/MobileNet", "models/conv/mobile/MobileNet_V2", "models/conv/mobile/MobileNet_V3", "models/conv/mobile/mobilenet", "models/conv/mobile/mobilenet_v2", "models/conv/mobile/mobilenet_v3_large", "models/conv/mobile/mobilenet_v3_small", "models/conv/resnet/ResNet", "models/conv/resnet/resnet_1001", "models/conv/resnet/resnet_101", "models/conv/resnet/resnet_152", "models/conv/resnet/resnet_18", "models/conv/resnet/resnet_200", "models/conv/resnet/resnet_269", "models/conv/resnet/resnet_34", "models/conv/resnet/resnet_50", "models/conv/resnet/wide_resnet_101", "models/conv/resnet/wide_resnet_50", "models/conv/resnext/ResNeXt", "models/conv/resnext/resnext_101_32x16d", "models/conv/resnext/resnext_101_32x32d", "models/conv/resnext/resnext_101_32x4d", "models/conv/resnext/resnext_101_32x8d", "models/conv/resnext/resnext_101_64x4d", "models/conv/resnext/resnext_50_32x4d", "models/conv/senet/SENet", "models/conv/senet/se_resnet_101", "models/conv/senet/se_resnet_152", "models/conv/senet/se_resnet_18", "models/conv/senet/se_resnet_34", "models/conv/senet/se_resnet_50", "models/conv/senet/se_resnext_101_32x4d", "models/conv/senet/se_resnext_101_32x8d", "models/conv/senet/se_resnext_101_64x4d", "models/conv/senet/se_resnext_50_32x4d", "models/conv/sknet/SKNet", "models/conv/sknet/sk_resnet_18", "models/conv/sknet/sk_resnet_34", "models/conv/sknet/sk_resnet_50", "models/conv/sknet/sk_resnext_50_32x4d", "models/conv/vgg/VGGNet", "models/conv/vgg/vggnet_11", "models/conv/vgg/vggnet_13", "models/conv/vgg/vggnet_16", "models/conv/vgg/vggnet_19", "models/conv/xception/Xception", "models/conv/xception/xception", "models/conv/zfnet/ZFNet", "models/conv/zfnet/zfnet", "models/models", "models/summarize", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/fused/ConvBNReLU1d", "nn/fused/ConvBNReLU2d", "nn/fused/ConvBNReLU3d", "nn/fused/DepthSeparableConv1d", "nn/fused/DepthSeparableConv2d", "nn/fused/DepthSeparableConv3d", "nn/fused/SEModule", "nn/fused/SelectiveKernel", "nn/fused/index", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/HardSigmoid", "nn/modules/activation/HardSwish", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/ReLU6", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Swish", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/modules/vision/Upsample", "nn/modules/vision/index", "nn/nn", "optim/Optimizer", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "others/types", "random/functions/bernoulli", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/meshgrid", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/CIFAR10.rst", "datasets/image/CIFAR100.rst", "datasets/image/FashionMNIST.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/conv/alex/AlexNet.rst", "models/conv/alex/alexnet.rst", "models/conv/dense/DenseNet.rst", "models/conv/dense/densenet_121.rst", "models/conv/dense/densenet_169.rst", "models/conv/dense/densenet_201.rst", "models/conv/dense/densenet_264.rst", "models/conv/efficient/EfficientNet.rst", "models/conv/efficient/efficientnet_b0.rst", "models/conv/efficient/efficientnet_b1.rst", "models/conv/efficient/efficientnet_b2.rst", "models/conv/efficient/efficientnet_b3.rst", "models/conv/efficient/efficientnet_b4.rst", "models/conv/efficient/efficientnet_b5.rst", "models/conv/efficient/efficientnet_b6.rst", "models/conv/efficient/efficientnet_b7.rst", "models/conv/inception/Inception.rst", "models/conv/inception/inception_v1.rst", "models/conv/inception/inception_v3.rst", "models/conv/inception/inception_v4.rst", "models/conv/inception_res/InceptionResNet.rst", "models/conv/inception_res/inception_resnet_v1.rst", "models/conv/inception_res/inception_resnet_v2.rst", "models/conv/index.rst", "models/conv/lenet/LeNet.rst", "models/conv/lenet/lenet_1.rst", "models/conv/lenet/lenet_4.rst", "models/conv/lenet/lenet_5.rst", "models/conv/mobile/MobileNet.rst", "models/conv/mobile/MobileNet_V2.rst", "models/conv/mobile/MobileNet_V3.rst", "models/conv/mobile/mobilenet.rst", "models/conv/mobile/mobilenet_v2.rst", "models/conv/mobile/mobilenet_v3_large.rst", "models/conv/mobile/mobilenet_v3_small.rst", "models/conv/resnet/ResNet.rst", "models/conv/resnet/resnet_1001.rst", "models/conv/resnet/resnet_101.rst", "models/conv/resnet/resnet_152.rst", "models/conv/resnet/resnet_18.rst", "models/conv/resnet/resnet_200.rst", "models/conv/resnet/resnet_269.rst", "models/conv/resnet/resnet_34.rst", "models/conv/resnet/resnet_50.rst", "models/conv/resnet/wide_resnet_101.rst", "models/conv/resnet/wide_resnet_50.rst", "models/conv/resnext/ResNeXt.rst", "models/conv/resnext/resnext_101_32x16d.rst", "models/conv/resnext/resnext_101_32x32d.rst", "models/conv/resnext/resnext_101_32x4d.rst", "models/conv/resnext/resnext_101_32x8d.rst", "models/conv/resnext/resnext_101_64x4d.rst", "models/conv/resnext/resnext_50_32x4d.rst", "models/conv/senet/SENet.rst", "models/conv/senet/se_resnet_101.rst", "models/conv/senet/se_resnet_152.rst", "models/conv/senet/se_resnet_18.rst", "models/conv/senet/se_resnet_34.rst", "models/conv/senet/se_resnet_50.rst", "models/conv/senet/se_resnext_101_32x4d.rst", "models/conv/senet/se_resnext_101_32x8d.rst", "models/conv/senet/se_resnext_101_64x4d.rst", "models/conv/senet/se_resnext_50_32x4d.rst", "models/conv/sknet/SKNet.rst", "models/conv/sknet/sk_resnet_18.rst", "models/conv/sknet/sk_resnet_34.rst", "models/conv/sknet/sk_resnet_50.rst", "models/conv/sknet/sk_resnext_50_32x4d.rst", "models/conv/vgg/VGGNet.rst", "models/conv/vgg/vggnet_11.rst", "models/conv/vgg/vggnet_13.rst", "models/conv/vgg/vggnet_16.rst", "models/conv/vgg/vggnet_19.rst", "models/conv/xception/Xception.rst", "models/conv/xception/xception.rst", "models/conv/zfnet/ZFNet.rst", "models/conv/zfnet/zfnet.rst", "models/models.rst", "models/summarize.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/fused/ConvBNReLU1d.rst", "nn/fused/ConvBNReLU2d.rst", "nn/fused/ConvBNReLU3d.rst", "nn/fused/DepthSeparableConv1d.rst", "nn/fused/DepthSeparableConv2d.rst", "nn/fused/DepthSeparableConv3d.rst", "nn/fused/SEModule.rst", "nn/fused/SelectiveKernel.rst", "nn/fused/index.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/HardSigmoid.rst", "nn/modules/activation/HardSwish.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/ReLU6.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Swish.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/modules/vision/Upsample.rst", "nn/modules/vision/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "others/types.rst", "random/functions/bernoulli.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"efficientnet (class in lucid.models)": [[30, "lucid.models.EfficientNet", false]], "efficientnet_b0() (in module lucid.models)": [[31, "lucid.models.efficientnet_b0", false]], "efficientnet_b1() (in module lucid.models)": [[32, "lucid.models.efficientnet_b1", false]], "efficientnet_b2() (in module lucid.models)": [[33, "lucid.models.efficientnet_b2", false]], "efficientnet_b3() (in module lucid.models)": [[34, "lucid.models.efficientnet_b3", false]], "efficientnet_b4() (in module lucid.models)": [[35, "lucid.models.efficientnet_b4", false]], "efficientnet_b5() (in module lucid.models)": [[36, "lucid.models.efficientnet_b5", false]], "efficientnet_b6() (in module lucid.models)": [[37, "lucid.models.efficientnet_b6", false]], "efficientnet_b7() (in module lucid.models)": [[38, "lucid.models.efficientnet_b7", false]], "lucid": [[10, "module-lucid", false]], "module": [[10, "module-lucid", false]]}, "objects": {"": [[10, 0, 0, "-", "lucid"]], "lucid": [[257, 1, 1, "", "Tensor"], [279, 2, 1, "", "abs"], [258, 2, 1, "", "add"], [269, 2, 1, "", "arange"], [280, 2, 1, "", "arccos"], [281, 2, 1, "", "arcsin"], [282, 2, 1, "", "arctan"], [283, 2, 1, "", "clip"], [305, 2, 1, "", "concatenate"], [284, 2, 1, "", "cos"], [285, 2, 1, "", "cosh"], [286, 2, 1, "", "cube"], [270, 2, 1, "", "diag"], [259, 2, 1, "", "div"], [260, 2, 1, "", "dot"], [271, 2, 1, "", "empty"], [272, 2, 1, "", "empty_like"], [287, 2, 1, "", "exp"], [273, 2, 1, "", "eye"], [306, 2, 1, "", "flatten"], [244, 2, 1, "", "grad_enabled"], [307, 2, 1, "", "hstack"], [261, 2, 1, "", "inner"], [288, 2, 1, "", "log"], [262, 2, 1, "", "matmul"], [289, 2, 1, "", "max"], [263, 2, 1, "", "maximum"], [290, 2, 1, "", "mean"], [309, 2, 1, "", "meshgrid"], [291, 2, 1, "", "min"], [264, 2, 1, "", "minimum"], [265, 2, 1, "", "mul"], [246, 2, 1, "", "no_grad"], [274, 2, 1, "", "ones"], [275, 2, 1, "", "ones_like"], [266, 2, 1, "", "outer"], [310, 2, 1, "", "pad"], [267, 2, 1, "", "power"], [311, 2, 1, "", "ravel"], [292, 2, 1, "", "reciprocal"], [247, 2, 1, "", "register_model"], [312, 2, 1, "", "repeat"], [313, 2, 1, "", "reshape"], [293, 2, 1, "", "sign"], [294, 2, 1, "", "sin"], [295, 2, 1, "", "sinh"], [296, 2, 1, "", "sqrt"], [297, 2, 1, "", "square"], [314, 2, 1, "", "squeeze"], [315, 2, 1, "", "stack"], [268, 2, 1, "", "sub"], [298, 2, 1, "", "sum"], [299, 2, 1, "", "tan"], [300, 2, 1, "", "tanh"], [304, 2, 1, "", "tensor"], [316, 2, 1, "", "tile"], [301, 2, 1, "", "trace"], [302, 2, 1, "", "transpose"], [317, 2, 1, "", "unsqueeze"], [303, 2, 1, "", "var"], [318, 2, 1, "", "vstack"], [276, 2, 1, "", "zeros"], [277, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "CIFAR10"], [6, 1, 1, "", "CIFAR100"], [7, 1, 1, "", "FashionMNIST"], [8, 1, 1, "", "MNIST"]], "lucid.linalg": [[12, 2, 1, "", "cholesky"], [13, 2, 1, "", "det"], [14, 2, 1, "", "eig"], [16, 2, 1, "", "inv"], [17, 2, 1, "", "matrix_power"], [18, 2, 1, "", "norm"], [19, 2, 1, "", "pinv"], [20, 2, 1, "", "qr"], [21, 2, 1, "", "solve"], [22, 2, 1, "", "svd"]], "lucid.models": [[23, 1, 1, "", "AlexNet"], [25, 1, 1, "", "DenseNet"], [30, 1, 1, "", "EfficientNet"], [39, 1, 1, "", "Inception"], [43, 1, 1, "", "InceptionResNet"], [47, 1, 1, "", "LeNet"], [51, 1, 1, "", "MobileNet"], [52, 1, 1, "", "MobileNet_V2"], [53, 1, 1, "", "MobileNet_V3"], [69, 1, 1, "", "ResNeXt"], [58, 1, 1, "", "ResNet"], [76, 1, 1, "", "SENet"], [86, 1, 1, "", "SKNet"], [91, 1, 1, "", "VGGNet"], [96, 1, 1, "", "Xception"], [98, 1, 1, "", "ZFNet"], [24, 2, 1, "", "alexnet"], [26, 2, 1, "", "densenet_121"], [27, 2, 1, "", "densenet_169"], [28, 2, 1, "", "densenet_201"], [29, 2, 1, "", "densenet_264"], [31, 2, 1, "", "efficientnet_b0"], [32, 2, 1, "", "efficientnet_b1"], [33, 2, 1, "", "efficientnet_b2"], [34, 2, 1, "", "efficientnet_b3"], [35, 2, 1, "", "efficientnet_b4"], [36, 2, 1, "", "efficientnet_b5"], [37, 2, 1, "", "efficientnet_b6"], [38, 2, 1, "", "efficientnet_b7"], [44, 2, 1, "", "inception_resnet_v1"], [45, 2, 1, "", "inception_resnet_v2"], [40, 2, 1, "", "inception_v1"], [41, 2, 1, "", "inception_v3"], [42, 2, 1, "", "inception_v4"], [48, 2, 1, "", "lenet_1"], [49, 2, 1, "", "lenet_4"], [50, 2, 1, "", "lenet_5"], [54, 2, 1, "", "mobilenet"], [55, 2, 1, "", "mobilenet_v2"], [56, 2, 1, "", "mobilenet_v3_large"], [57, 2, 1, "", "mobilenet_v3_small"], [59, 2, 1, "", "resnet_1001"], [60, 2, 1, "", "resnet_101"], [61, 2, 1, "", "resnet_152"], [62, 2, 1, "", "resnet_18"], [63, 2, 1, "", "resnet_200"], [64, 2, 1, "", "resnet_269"], [65, 2, 1, "", "resnet_34"], [66, 2, 1, "", "resnet_50"], [70, 2, 1, "", "resnext_101_32x16d"], [71, 2, 1, "", "resnext_101_32x32d"], [72, 2, 1, "", "resnext_101_32x4d"], [73, 2, 1, "", "resnext_101_32x8d"], [74, 2, 1, "", "resnext_101_64x4d"], [75, 2, 1, "", "resnext_50_32x4d"], [77, 2, 1, "", "se_resnet_101"], [78, 2, 1, "", "se_resnet_152"], [79, 2, 1, "", "se_resnet_18"], [80, 2, 1, "", "se_resnet_34"], [81, 2, 1, "", "se_resnet_50"], [82, 2, 1, "", "se_resnext_101_32x4d"], [83, 2, 1, "", "se_resnext_101_32x8d"], [84, 2, 1, "", "se_resnext_101_64x4d"], [85, 2, 1, "", "se_resnext_50_32x4d"], [87, 2, 1, "", "sk_resnet_18"], [88, 2, 1, "", "sk_resnet_34"], [89, 2, 1, "", "sk_resnet_50"], [90, 2, 1, "", "sk_resnext_50_32x4d"], [101, 2, 1, "", "summarize"], [92, 2, 1, "", "vggnet_11"], [93, 2, 1, "", "vggnet_13"], [94, 2, 1, "", "vggnet_16"], [95, 2, 1, "", "vggnet_19"], [67, 2, 1, "", "wide_resnet_101"], [68, 2, 1, "", "wide_resnet_50"], [97, 2, 1, "", "xception"], [99, 2, 1, "", "zfnet"]], "lucid.nn": [[217, 1, 1, "", "AdaptiveAvgPool1d"], [218, 1, 1, "", "AdaptiveAvgPool2d"], [219, 1, 1, "", "AdaptiveAvgPool3d"], [192, 1, 1, "", "AlphaDropout"], [220, 1, 1, "", "AvgPool1d"], [221, 1, 1, "", "AvgPool2d"], [222, 1, 1, "", "AvgPool3d"], [203, 1, 1, "", "BCELoss"], [209, 1, 1, "", "BatchNorm1d"], [210, 1, 1, "", "BatchNorm2d"], [211, 1, 1, "", "BatchNorm3d"], [199, 1, 1, "", "Bilinear"], [102, 1, 1, "", "Buffer"], [188, 1, 1, "", "Conv1d"], [189, 1, 1, "", "Conv2d"], [190, 1, 1, "", "Conv3d"], [158, 1, 1, "", "ConvBNReLU1d"], [159, 1, 1, "", "ConvBNReLU2d"], [160, 1, 1, "", "ConvBNReLU3d"], [204, 1, 1, "", "CrossEntropyLoss"], [161, 1, 1, "", "DepthSeparableConv1d"], [162, 1, 1, "", "DepthSeparableConv2d"], [163, 1, 1, "", "DepthSeparableConv3d"], [193, 1, 1, "", "Dropout"], [194, 1, 1, "", "Dropout1d"], [195, 1, 1, "", "Dropout2d"], [196, 1, 1, "", "Dropout3d"], [175, 1, 1, "", "ELU"], [176, 1, 1, "", "GELU"], [177, 1, 1, "", "HardSigmoid"], [178, 1, 1, "", "HardSwish"], [205, 1, 1, "", "HuberLoss"], [200, 1, 1, "", "Identity"], [212, 1, 1, "", "InstanceNorm1d"], [213, 1, 1, "", "InstanceNorm2d"], [214, 1, 1, "", "InstanceNorm3d"], [215, 1, 1, "", "LayerNorm"], [179, 1, 1, "", "LeakyReLU"], [201, 1, 1, "", "Linear"], [206, 1, 1, "", "MSELoss"], [223, 1, 1, "", "MaxPool1d"], [224, 1, 1, "", "MaxPool2d"], [225, 1, 1, "", "MaxPool3d"], [103, 1, 1, "", "Module"], [105, 1, 1, "", "ModuleDict"], [106, 1, 1, "", "ModuleList"], [207, 1, 1, "", "NLLLoss"], [104, 1, 1, "", "Parameter"], [107, 1, 1, "", "ParameterDict"], [108, 1, 1, "", "ParameterList"], [180, 1, 1, "", "ReLU"], [181, 1, 1, "", "ReLU6"], [182, 1, 1, "", "SELU"], [164, 1, 1, "", "SEModule"], [165, 1, 1, "", "SelectiveKernel"], [109, 1, 1, "", "Sequential"], [183, 1, 1, "", "Sigmoid"], [184, 1, 1, "", "Softmax"], [185, 1, 1, "", "Swish"], [186, 1, 1, "", "Tanh"], [227, 1, 1, "", "Upsample"]], "lucid.nn.functional": [[145, 2, 1, "", "adaptive_avg_pool1d"], [146, 2, 1, "", "adaptive_avg_pool2d"], [147, 2, 1, "", "adaptive_avg_pool3d"], [125, 2, 1, "", "alpha_dropout"], [148, 2, 1, "", "avg_pool1d"], [149, 2, 1, "", "avg_pool2d"], [150, 2, 1, "", "avg_pool3d"], [141, 2, 1, "", "batch_norm"], [132, 2, 1, "", "bilinear"], [135, 2, 1, "", "binary_cross_entropy"], [120, 2, 1, "", "conv1d"], [121, 2, 1, "", "conv2d"], [122, 2, 1, "", "conv3d"], [136, 2, 1, "", "cross_entropy"], [126, 2, 1, "", "dropout"], [127, 2, 1, "", "dropout1d"], [128, 2, 1, "", "dropout2d"], [129, 2, 1, "", "dropout3d"], [111, 2, 1, "", "elu"], [112, 2, 1, "", "gelu"], [137, 2, 1, "", "huber_loss"], [143, 2, 1, "", "instance_norm"], [156, 2, 1, "", "interpolate"], [144, 2, 1, "", "layer_norm"], [114, 2, 1, "", "leaky_relu"], [134, 2, 1, "", "linear"], [152, 2, 1, "", "max_pool1d"], [153, 2, 1, "", "max_pool2d"], [154, 2, 1, "", "max_pool3d"], [139, 2, 1, "", "mse_loss"], [140, 2, 1, "", "nll_loss"], [115, 2, 1, "", "relu"], [157, 2, 1, "", "rotate"], [116, 2, 1, "", "selu"], [117, 2, 1, "", "sigmoid"], [118, 2, 1, "", "softmax"], [119, 2, 1, "", "tanh"], [124, 2, 1, "", "unfold"]], "lucid.nn.init": [[167, 2, 1, "", "constant"], [169, 2, 1, "", "kaiming_normal"], [170, 2, 1, "", "kaiming_uniform"], [171, 2, 1, "", "normal"], [172, 2, 1, "", "uniform"], [173, 2, 1, "", "xavier_normal"], [174, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[232, 1, 1, "", "ASGD"], [233, 1, 1, "", "Adadelta"], [234, 1, 1, "", "Adagrad"], [235, 1, 1, "", "Adam"], [236, 1, 1, "", "AdamW"], [237, 1, 1, "", "Adamax"], [238, 1, 1, "", "NAdam"], [230, 1, 1, "", "Optimizer"], [239, 1, 1, "", "RAdam"], [240, 1, 1, "", "RMSprop"], [241, 1, 1, "", "Rprop"], [242, 1, 1, "", "SGD"]], "lucid.random": [[249, 2, 1, "", "bernoulli"], [251, 2, 1, "", "rand"], [252, 2, 1, "", "randint"], [253, 2, 1, "", "randn"], [254, 2, 1, "", "seed"], [255, 2, 1, "", "uniform"]], "lucid.transforms": [[321, 1, 1, "", "CenterCrop"], [319, 1, 1, "", "Compose"], [322, 1, 1, "", "Normalize"], [323, 1, 1, "", "RandomCrop"], [324, 1, 1, "", "RandomGrayscale"], [325, 1, 1, "", "RandomHorizontalFlip"], [326, 1, 1, "", "RandomRotation"], [327, 1, 1, "", "RandomVerticalFlip"], [328, 1, 1, "", "Resize"], [320, 1, 1, "", "ToTensor"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [3, 10, 11, 17, 19, 22, 56, 57, 100, 101, 102, 103, 104, 105, 107, 108, 109, 145, 146, 147, 165, 204, 207, 217, 218, 219, 220, 223, 224, 229, 230, 231, 245, 247, 262, 270, 288, 290, 298, 301, 303, 304, 314, 320, 322, 330], "0": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 30, 41, 43, 47, 54, 76, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 298, 299, 300, 302, 303, 304, 305, 307, 310, 311, 312, 314, 315, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 330], "000": [5, 6, 7, 8, 271, 272], "0000": [204, 205, 207], "0001": 232, "000e": [271, 272], "001": [232, 235, 236, 238, 239, 242], "002": [237, 238], "004": 238, "005": 179, "008": [54, 100], "01": [114, 179, 230, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242], "01051757": 253, "013": [28, 100], "016": [59, 100], "0205": 204, "0217": 204, "0227": 204, "024": [81, 100], "026": [70, 100], "028": [75, 100], "0299": 204, "032": [66, 100], "044715": [112, 176], "0450": 204, "0451": 204, "046": [37, 100], "047": [93, 100], "04719755": 280, "0474259": 117, "048": [83, 100], "0480": 204, "04861": 100, "05": [141, 143, 144, 158, 159, 160, 179, 209, 210, 211, 212, 213, 214, 215], "0507": [116, 182], "06": [233, 241], "069": [64, 100], "07": [135, 136, 203, 204], "0700": 204, "0706508": 186, "071": [59, 100], "0721": 204, "073": [89, 100], "07722396": 185, "0794": 207, "08": [235, 236, 237, 238, 239, 240], "0802": 207, "08333333": 19, "085537": 287, "088": [81, 100], "0900": [184, 204], "096": [97, 100], "0986": [118, 184], "09861229": 288, "0992": 204, "1": [0, 1, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 43, 47, 48, 49, 50, 53, 54, 55, 56, 57, 76, 82, 83, 84, 85, 86, 90, 91, 96, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 248, 249, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330], "10": [0, 1, 2, 3, 5, 6, 7, 23, 24, 25, 47, 48, 49, 50, 91, 98, 99, 100, 101, 105, 106, 109, 121, 122, 132, 134, 145, 188, 189, 190, 195, 196, 199, 201, 210, 211, 213, 217, 221, 222, 224, 234, 247, 252, 255, 256, 259, 262, 265, 266, 282, 298, 321, 323, 324, 326], "100": [6, 24, 92, 93, 94, 95, 100, 247, 330], "1000": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99], "1000000": 232, "1001": [59, 100, 204], "1003": 204, "1007": 100, "10096": 100, "101": [60, 67, 70, 71, 72, 73, 74, 77, 82, 83, 84, 100], "10106": 100, "1014": 116, "102": [64, 100], "1025": [106, 109], "1026": [106, 109], "1027": [106, 109], "10499": 117, "1050": 183, "1054": 207, "1056": [106, 109], "10590": 100, "1097": 100, "11": [62, 79, 91, 92, 100, 132, 188, 189, 190, 195, 199, 210, 211, 213, 221, 222, 224, 262, 321, 322, 323, 324, 326], "1105": 100, "1109": 100, "111": [33, 100], "1111": 203, "112": 56, "1134": 132, "114b": 324, "119": 132, "1192": [117, 118, 184], "12": [25, 26, 27, 28, 29, 34, 48, 49, 100, 107, 132, 147, 188, 189, 190, 195, 196, 199, 210, 211, 213, 219, 221, 222, 224, 262, 266, 267, 321, 323, 324, 326], "120": [47, 50, 56, 57], "121": [25, 26, 100], "123": [169, 170, 171, 172, 173, 174, 254, 255], "124": [169, 170, 173, 174], "125": 222, "1250": 205, "1251": 100, "1258": 100, "126": [67, 100], "128": [37, 44, 58, 67, 68, 91, 100, 109, 165, 319, 330], "1280": 53, "128x128": [319, 330], "13": [40, 91, 93, 100, 132, 188, 189, 190, 199, 211, 221, 222, 224, 262, 321, 323, 324, 326], "1314": 100, "132": [92, 100], "1324": 100, "133": [93, 100], "138": [94, 100], "14": [27, 100, 188, 189, 190, 195, 196, 199, 211, 221, 222, 224, 248, 262, 266, 321, 323, 324, 326], "1409": 100, "143": [95, 100], "144": 57, "145": 132, "149": [27, 59, 100], "15": [0, 132, 188, 189, 190, 199, 211, 221, 222, 224, 262, 266, 301, 321, 323, 324, 326, 330], "1513": 207, "152": [61, 78, 100], "155": 262, "1556": 100, "1588": [112, 176], "16": [25, 26, 47, 50, 53, 56, 57, 70, 76, 91, 94, 100, 106, 107, 109, 146, 147, 158, 159, 160, 164, 165, 188, 189, 190, 195, 196, 199, 210, 211, 218, 219, 221, 222, 224, 229, 262, 266, 296, 321, 323, 324, 326], "160": [56, 60, 100], "16227766": 20, "16425": 207, "1643": 203, "166": 262, "167": 178, "169": [25, 27, 100], "17": [188, 189, 190, 199, 211, 222, 261, 321, 323, 324, 326], "170": 132, "1704": 100, "17520119": 295, "177": [72, 100], "18": [49, 62, 79, 87, 100, 188, 189, 190, 195, 199, 211, 222, 265, 266, 321, 323, 324, 326], "1800": 204, "184": 56, "18877099": 185, "19": [35, 91, 95, 100, 121, 122, 132, 189, 190, 211, 260, 262], "192": [48, 49, 61, 100], "194": [70, 100], "1966": [118, 183, 184], "198": [56, 100], "1998": [100, 204], "1_53": 100, "1d": [120, 145, 148, 152, 158, 161, 209, 212, 217, 255, 262, 270, 301, 309, 310, 311, 312, 316], "1e": [135, 136, 141, 143, 144, 158, 159, 160, 203, 204, 209, 210, 211, 212, 213, 214, 215, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242], "1e6": 232, "1st": [23, 98], "2": [1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 30, 48, 49, 50, 53, 56, 57, 62, 79, 87, 98, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 248, 249, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330], "20": [0, 5, 6, 7, 8, 28, 100, 105, 106, 109, 189, 190, 195, 211, 266, 287], "200": [56, 63, 100], "201": [28, 100], "2011": 164, "2012": 100, "2014": 100, "2015": 100, "2016": 100, "2017": 100, "2018": [100, 164], "2019": 100, "2021": 100, "2023": 164, "2039": 207, "204": 190, "21": [65, 80, 100, 107, 132, 189, 190, 211, 266], "211": 262, "22": [44, 97, 100, 132, 189, 190, 195, 211, 260, 262], "2231": [204, 207], "224": [23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 54, 55, 58, 68, 70, 71, 72, 73, 74, 75, 82, 83, 84, 85, 87, 88, 89, 90, 91, 98, 100], "2247": [209, 210, 211, 212, 213, 214, 215], "224x224": [30, 40, 82, 83, 84, 85, 90], "226": 262, "22752314": 253, "2278": 100, "23": [60, 67, 70, 71, 72, 73, 74, 77, 189, 190, 211], "232": [54, 84, 100], "2324": [100, 182], "234": [169, 170, 171, 172, 173, 174, 255], "235": [34, 100], "238": [57, 100], "23840584": 185, "24": [25, 26, 53, 56, 57, 63, 132, 146, 189, 190, 195, 211, 218, 266], "240": [56, 57, 95, 100], "240x240": 30, "2424": [118, 184], "2447": 184, "246": [48, 100], "25": [0, 66, 75, 87, 100, 117, 183, 190, 206, 211, 221, 222, 259, 292, 303], "2500": [203, 205, 207], "2512": 175, "2547": 182, "256": [58, 91], "26": [107, 134, 190, 201, 211, 266], "260x260": 30, "26325684": 253, "264": [29, 100], "2689": [118, 183, 184], "26894142": 185, "269": [64, 100], "27": [85, 100, 132, 188, 190, 211, 286], "272": [74, 100], "274": [90, 100], "276": [169, 170, 173, 174], "28": [48, 49, 81, 100, 132, 190, 266], "288": 57, "289": [31, 100], "28x28": [7, 8, 48, 49], "29": [90, 100, 190], "299": [96, 100], "299r": 324, "299x299": [41, 42, 44, 45], "2_i": [212, 213, 214], "2d": [121, 128, 146, 149, 153, 159, 162, 210, 213, 218, 262, 270, 273, 301, 306, 309, 310, 312, 316, 326], "2e": 237, "2nd": [23, 98], "2x2": [124, 321, 323], "3": [1, 2, 3, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 48, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 98, 100, 102, 103, 104, 106, 107, 108, 109, 112, 117, 118, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 134, 137, 139, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 283, 285, 286, 287, 288, 289, 290, 291, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328], "30": [36, 41, 64, 100, 106, 157, 190, 326], "300x300": 30, "3026": 207, "30823025": 185, "31": [132, 190, 262], "310": [271, 272], "31622777": 20, "319": 100, "32": [25, 27, 28, 50, 70, 71, 72, 73, 75, 100, 106, 109, 132, 134, 146, 158, 159, 160, 164, 165, 189, 190, 201, 218, 229, 260, 261, 266], "321": [169, 170, 173, 174], "326": [77, 100], "32x16d": 100, "32x32": [5, 6, 47, 50], "32x32d": 100, "32x4d": [82, 85, 90, 100], "32x8d": [83, 100], "33": [29, 100, 106, 109, 134, 190, 201], "33333333": 19, "336": [73, 92, 100], "337": [29, 100], "34": [65, 80, 88, 100, 106, 109, 132, 190, 262, 266], "342": [169, 170, 173, 174], "344": [35, 100], "345": [169, 170, 171, 172, 173, 174, 255], "35": [45, 100, 106, 109, 190], "352": [40, 100], "355": [38, 100], "3567": [203, 207], "357": [94, 99, 100], "36": [61, 63, 78, 190], "3679": [111, 116, 175], "368": [87, 89, 100], "36th": 100, "37": 188, "370": [33, 100], "372": 132, "375": 206, "3750": 205, "37754067": 185, "378": [49, 100], "380x380": 30, "38344152": 251, "38629436": 288, "389056": 287, "38th": 100, "392": [41, 100], "393": [36, 40, 100], "3935": 175, "3d": [122, 129, 147, 150, 154, 160, 163, 190, 211, 214, 219], "3x3": [100, 256], "4": [0, 1, 2, 3, 11, 12, 13, 14, 16, 18, 19, 20, 25, 30, 47, 48, 49, 54, 58, 60, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 77, 80, 81, 88, 89, 100, 101, 107, 109, 120, 121, 122, 124, 127, 128, 129, 132, 134, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 161, 162, 163, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 232, 235, 239, 240, 242, 245, 248, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 275, 277, 283, 288, 289, 290, 291, 292, 294, 296, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 315, 316, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328], "40": [42, 53, 56, 57, 100], "400": 50, "4044": 203, "4076": 204, "4096": [23, 98], "41421356": 12, "416": [64, 82, 100], "41666667": 19, "41808962": 253, "419974": 119, "4199743": 186, "42": [132, 164, 248, 256], "421": [169, 170, 173, 174], "423": [169, 170, 171, 172], "42718872": 20, "4278": 100, "4284": 100, "4286": 203, "43": [37, 100, 260, 262], "432": [36, 100], "4323": 175, "4375": 205, "43758721": 251, "44": [60, 72, 100], "4472136": 14, "448": [38, 100], "4495": [211, 214], "45": [88, 100, 132, 157, 326], "4510": 100, "4520": 100, "4545": 192, "455": [74, 100], "456x456": 30, "468": [71, 100], "4700": 100, "4708": 100, "47112767": 282, "472": [71, 100], "48": [25, 28, 29, 57, 64, 82, 100, 134, 201], "480": [27, 56, 100], "481": [56, 100], "49": [77, 100], "4979": 175, "4x4": 328, "5": [1, 2, 10, 11, 16, 17, 18, 19, 23, 30, 31, 41, 47, 48, 49, 50, 53, 56, 57, 86, 87, 88, 89, 98, 100, 101, 103, 104, 105, 106, 107, 109, 112, 117, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 134, 137, 139, 141, 143, 144, 145, 148, 149, 156, 158, 159, 160, 165, 167, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 220, 221, 222, 224, 225, 241, 245, 248, 249, 252, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 275, 277, 279, 280, 281, 289, 290, 291, 292, 293, 298, 301, 302, 303, 304, 307, 309, 313, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330], "50": [5, 6, 58, 66, 68, 75, 81, 85, 89, 90, 100, 134, 201, 241, 260, 262, 324, 325, 327, 330], "5000": [203, 205, 207], "504": [55, 100], "510": 100, "5108": 207, "512": [45, 58, 62, 88, 100], "519": 100, "52359878": 281, "528x528": 30, "53": [132, 261], "530": [71, 100], "536": [34, 100], "537": [57, 100], "543": [169, 170, 171, 172, 173, 174, 255], "54308063": 285, "544": [94, 100], "545": 267, "5455": 192, "549": [60, 100], "557": [66, 100], "559": [85, 100], "560": [32, 100], "563": [169, 170, 173, 174], "569": [83, 100], "57": [89, 100, 132], "57079633": [280, 281], "57366333": 254, "576": 57, "586": [42, 100], "587g": 324, "592": [79, 100], "5987": 100, "5995": 100, "5th": [23, 98], "6": [11, 19, 23, 25, 26, 27, 28, 29, 30, 47, 50, 58, 65, 66, 68, 75, 80, 81, 88, 89, 98, 107, 108, 120, 121, 122, 124, 129, 132, 134, 145, 170, 174, 177, 181, 188, 189, 190, 193, 194, 195, 196, 199, 201, 203, 209, 210, 211, 212, 213, 214, 215, 217, 221, 222, 224, 225, 233, 241, 245, 248, 255, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 275, 277, 289, 290, 291, 298, 301, 302, 303, 304, 307, 312, 313, 318, 320, 321, 322, 323, 324, 326, 328], "60": [5, 6, 61, 100], "600": 30, "600x600": 30, "6052": 207, "6065": 175, "608": [99, 100], "61": [24, 50, 100], "6105": 100, "6114": 100, "6124": [209, 210, 211, 212, 213, 214, 215], "62": [99, 100, 132], "62686041": 295, "630": 100, "6321": [111, 175], "63245553": 20, "636": [31, 100], "64": [25, 29, 53, 56, 58, 63, 74, 86, 91, 100, 106, 109, 132, 164, 165], "640": [35, 100], "645": 100, "64589411": 251, "647": [87, 100], "64x4d": [84, 100], "654": [169, 170, 171, 172, 173, 174, 255], "657": [169, 170, 173, 174], "6590": [118, 184], "66": [38, 78, 100], "6652": 184, "66666667": 19, "6667": 203, "667": [95, 100], "6682": 203, "669": [63, 100], "67": 262, "672": [56, 65, 100], "67326": 182, "6733": 116, "678": [169, 170, 171, 172, 173, 174], "68811989": 253, "689": [62, 100], "69314718": 288, "696": [67, 100], "7": [18, 26, 32, 91, 100, 107, 120, 121, 122, 124, 129, 132, 134, 135, 136, 145, 165, 176, 181, 182, 183, 186, 188, 189, 190, 195, 196, 199, 201, 203, 204, 206, 210, 211, 213, 214, 217, 221, 222, 224, 225, 248, 249, 252, 255, 258, 260, 261, 262, 266, 268, 270, 287, 290, 298, 301, 302, 303, 316, 320, 321, 322, 323, 324, 326, 328], "70": [7, 8], "7001": 204, "704": [29, 72, 100], "706": [50, 100], "70710678": [14, 294], "7132": 100, "7141": 100, "7147": 207, "7182818": 287, "72": [53, 56, 57], "726791": 100, "7311": [118, 183, 184], "739": [44, 100], "74": 262, "75": [134, 201, 206, 232], "7581": 116, "760": [90, 100], "76159416": [185, 300], "7616": [119, 186], "76219569": 285, "7635": 182, "770": 100, "772": 267, "778": [79, 100], "78": [68, 100], "78357324": 253, "78539816": 282, "791": [73, 100], "79172504": 251, "792": [70, 100], "795": [32, 100], "797": [65, 100], "7x7": 98, "8": [17, 21, 25, 30, 58, 61, 64, 70, 71, 72, 73, 74, 75, 78, 87, 88, 89, 101, 106, 107, 109, 120, 121, 122, 124, 129, 132, 134, 135, 145, 146, 147, 158, 159, 160, 164, 176, 177, 182, 183, 186, 188, 189, 190, 193, 194, 195, 196, 199, 201, 203, 206, 210, 211, 213, 214, 217, 218, 219, 221, 222, 224, 225, 235, 236, 237, 238, 239, 240, 248, 249, 252, 259, 260, 261, 262, 266, 267, 269, 270, 286, 290, 298, 301, 302, 303, 320, 321, 322, 323, 324, 326, 328], "80": [5, 6, 7, 8, 56], "8005": 204, "808": [61, 100], "817": [41, 100], "818": 100, "8182": 192, "82": 132, "821": [78, 100], "83": [74, 100], "833": 100, "84": [47, 49, 50], "840": [24, 100], "8413": [112, 176], "847": [45, 100], "848": [78, 93, 100], "856": [26, 100], "85772238": 185, "8584": 182, "86": 100, "862": [97, 100], "863": [92, 100], "864": [63, 100], "868": [80, 100], "872": [55, 77, 100], "876": [169, 170, 173, 174, 255], "88": [57, 73, 84, 100], "8808": [118, 183, 184], "886": [67, 100], "887": 267, "891773": 251, "89442719": 14, "895": [88, 100], "896": [85, 100], "9": [0, 1, 3, 8, 21, 33, 100, 121, 124, 132, 134, 145, 188, 189, 190, 195, 199, 201, 203, 210, 211, 213, 217, 221, 222, 224, 232, 233, 235, 236, 237, 238, 239, 240, 242, 248, 249, 252, 255, 258, 262, 266, 267, 268, 270, 296, 297, 320, 321, 322, 323, 324, 326], "904": [75, 100], "90709145": 254, "9091": 192, "9120": 207, "9163": 207, "928": [28, 100], "93": [83, 100], "94": 59, "9486833": 20, "949e": [271, 272], "9526": 117, "9545": 176, "955": [82, 100], "958": [80, 100], "96": 57, "960": 56, "96366276": 251, "9640": 186, "96402758": 300, "973": [68, 100], "978": [26, 100], "984": [42, 84, 100], "99": 240, "9957": 207, "99734545": 254, "999": [0, 235, 236, 237, 238, 239], "A": [1, 3, 5, 6, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 43, 47, 51, 58, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 86, 87, 88, 89, 91, 92, 93, 94, 95, 100, 103, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 132, 134, 135, 136, 140, 141, 143, 144, 156, 165, 192, 193, 194, 195, 196, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 246, 248, 249, 251, 252, 253, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 326], "As": 254, "At": 227, "Be": 0, "By": [0, 2, 3, 10, 59, 60, 61, 62, 63, 64, 65, 66, 104, 157, 229, 239, 245, 249, 251, 252, 253, 255, 320, 330], "For": [2, 3, 4, 10, 12, 13, 14, 16, 17, 18, 19, 21, 109, 111, 112, 114, 115, 116, 117, 119, 132, 134, 156, 169, 170, 173, 174, 182, 188, 189, 190, 199, 201, 209, 210, 211, 212, 213, 214, 229, 231, 254, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 287, 288, 289, 290, 291, 294, 296, 298, 301, 302, 303, 310, 312, 314, 316, 317, 330], "If": [0, 1, 2, 5, 6, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 58, 101, 103, 105, 106, 107, 108, 111, 112, 114, 115, 116, 117, 119, 120, 121, 122, 129, 132, 134, 141, 143, 146, 147, 156, 157, 158, 159, 160, 161, 162, 163, 165, 169, 170, 188, 189, 190, 199, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 225, 227, 230, 235, 236, 240, 241, 247, 249, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 324, 325, 327, 328], "In": [3, 10, 19, 120, 121, 122, 204, 207, 244, 245, 246, 319, 330], "It": [1, 2, 3, 7, 10, 19, 20, 21, 23, 26, 27, 28, 29, 39, 40, 41, 47, 48, 49, 50, 52, 53, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 79, 91, 97, 100, 103, 105, 106, 107, 108, 109, 129, 132, 156, 157, 158, 159, 160, 164, 176, 177, 180, 181, 186, 199, 200, 203, 204, 205, 206, 207, 217, 218, 219, 227, 229, 230, 231, 232, 238, 240, 241, 242, 245, 254, 258, 259, 260, 263, 264, 265, 267, 268, 289, 291, 305, 307, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320], "Its": [21, 256], "Near": 19, "No": 124, "Not": 200, "One": [48, 330], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330], "There": 313, "These": [4, 10, 11, 14, 17, 20, 22, 67, 68, 87, 88, 89, 97, 100, 192, 193, 194, 195, 196, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 241, 248, 256, 330], "To": [3, 100, 231, 249, 253, 256, 271, 272, 309, 330], "With": [3, 124, 320, 330], "_": [17, 105, 106, 108, 109, 111, 112, 114, 115, 116, 117, 119, 134, 156, 210, 211, 212, 213, 214, 220, 221, 222, 223, 224, 225, 232, 233, 235, 236, 237, 238, 240, 242, 260, 261, 262, 266, 301, 302, 321, 322, 323, 325, 326, 327], "_1": [14, 105, 106, 107, 108, 109, 132, 199, 266, 305, 307, 318], "_2": [14, 105, 106, 107, 108, 109, 132, 199, 266, 305, 307, 318], "__call__": [1, 103], "__getitem__": [0, 2, 3, 5, 6, 7, 8], "__init__": [0, 1, 2, 3, 10, 23, 30, 39, 43, 47, 51, 52, 53, 91, 98, 101, 102, 103, 104, 105, 106, 107, 108, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 199, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 247, 257, 319, 320], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5, 6, 7, 8], "__repr__": 230, "__setattr__": 103, "_activ": 118, "_arraylik": [248, 270, 272, 275, 277], "_arraylikeint": 310, "_arrayorscalar": [102, 104, 248, 249, 257, 304], "_base_activ": 47, "_base_dtyp": [269, 271, 274, 276], "_c": 322, "_decai": 238, "_fanmod": [169, 170], "_grad_en": [244, 246], "_i": [14, 18, 118, 132, 184, 206, 209, 215, 220, 223, 260, 261, 263, 264, 266, 267, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 312, 314, 317, 318], "_in": [169, 170, 173, 174], "_interpolatetyp": 227, "_j": [118, 184, 220, 223, 266, 290, 298, 302, 303], "_k": 315, "_left": 156, "_make_lay": 91, "_modul": 103, "_n": [14, 105, 106, 107, 108, 109, 305, 307, 318], "_numpyarrai": 248, "_out": [169, 170, 173, 174, 312, 316], "_p": 18, "_pad": 310, "_paddingstr": [158, 159, 160, 161, 162, 163, 188, 189, 190], "_paramet": 103, "_reductiontyp": [135, 136, 137, 139, 140, 203, 204, 205, 206, 207], "_right": 156, "_scalar": [167, 171, 172, 173, 174, 248, 269, 283], "_seresnetbottleneck": [77, 78, 81], "_seresnetmodul": [79, 80], "_shapelik": [101, 144, 215, 248, 252, 274, 276, 313, 314, 317], "_size": [145, 146, 147], "_skresnetmodul": [87, 88, 89], "_slope": 179, "_statedict": 230, "_t": [239, 240], "_tensor": [102, 104, 270, 304], "_tensorop": 257, "_u": 19, "_v": 19, "_valu": [283, 310], "_width": 310, "a_i": [263, 264, 267], "aaai": 100, "ab": 278, "abc": [2, 230], "abil": [10, 100, 330], "about": [10, 101], "abov": [10, 244, 246, 254, 270, 273], "absolut": [17, 18, 137, 237, 279], "abstract": [2, 3, 229, 230, 231, 232, 240, 242], "abstractmethod": 230, "acceler": [100, 182, 209, 210, 211, 232, 238, 240, 242], "accept": [200, 251, 257], "access": [0, 2, 3, 4, 5, 6, 7, 8, 70, 71, 72, 73, 74, 75, 102, 104, 105, 106, 107, 108, 109, 313], "accord": [156, 188, 189, 190, 199, 201, 204, 207, 233, 234, 235, 236, 237, 238, 239, 302], "accordingli": 13, "account": [17, 19, 20, 185], "accumul": [232, 233, 234, 258, 259, 263, 264, 265, 268], "accur": 78, "accuraci": [51, 52, 53, 81, 100], "achiev": [69, 70, 71, 72, 73, 74, 75, 100, 120, 121, 122, 145, 217, 218, 219, 238, 325, 327], "across": [0, 5, 6, 54, 102, 106, 109, 144, 145, 146, 147, 173, 174, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 248, 249, 251, 252, 253, 254, 255, 256, 271, 272, 290, 303], "act": 236, "activ": [10, 23, 47, 56, 57, 59, 63, 64, 76, 91, 98, 100, 105, 109, 111, 112, 114, 115, 116, 117, 118, 119, 125, 158, 159, 160, 164, 165, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 203, 204, 207, 209, 210, 211, 215, 289, 291], "actual": [104, 203, 204, 206, 207, 257, 323], "ad": [25, 53, 58, 103, 105, 106, 107, 108, 109, 120, 121, 122, 132, 134, 135, 136, 141, 143, 144, 148, 149, 150, 152, 153, 154, 158, 159, 160, 188, 189, 190, 203, 204, 209, 210, 211, 212, 213, 214, 215, 220, 221, 222, 223, 224, 225, 233, 234, 235, 236, 237, 238, 239, 240, 247, 317, 330], "adadelta": 243, "adagrad": [233, 243], "adam": [100, 236, 237, 238, 239, 243], "adamax": 243, "adamw": 243, "adapt": [23, 39, 47, 77, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 98, 100, 145, 146, 147, 164, 165, 217, 218, 219, 233, 234, 235, 238, 239, 240, 241], "adaptive_avg_pool1d": [131, 151, 217], "adaptive_avg_pool2d": [131, 151, 218], "adaptive_avg_pool3d": [131, 151, 219], "adaptiveavgpool1d": [198, 226], "adaptiveavgpool2d": [23, 76, 91, 98, 198, 226], "adaptiveavgpool3d": [198, 226], "add": [4, 103, 105, 106, 109, 132, 134, 188, 189, 190, 199, 201, 215, 230, 232, 235, 240, 242, 245, 278, 310, 317], "add_modul": [103, 109], "add_param_group": 230, "addit": [4, 10, 17, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 95, 97, 99, 103, 106, 109, 132, 134, 141, 143, 199, 201, 209, 210, 211, 212, 213, 214, 232, 238, 245, 256, 258, 315], "addition": 238, "address": [204, 207, 235, 236, 239], "adjust": [44, 51, 53, 54, 82, 83, 84, 85, 86, 90, 145, 146, 147, 165, 192, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 231, 235, 239, 240, 241, 307, 318], "advanc": [3, 19, 52, 63, 100, 106, 109, 120, 121, 122, 145, 146, 147, 217, 218, 219, 229, 232], "advantag": [45, 246], "affect": [244, 311, 314, 319], "affin": [158, 159, 160, 209, 210, 211, 212, 213, 214, 215, 326], "after": [17, 23, 56, 57, 98, 104, 105, 106, 107, 108, 109, 129, 164, 165, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 189, 190, 192, 193, 194, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 215, 220, 221, 222, 223, 224, 225, 236, 246, 257, 258, 259, 263, 264, 265, 267, 268, 310, 320], "afterward": 246, "aggreg": [100, 165, 266, 312, 316], "aim": [4, 10], "al": [40, 100], "alex": [5, 6, 100], "alexnet": [46, 98, 100], "algebra": [10, 11, 273], "algorithm": [7, 10, 17, 19, 20, 230, 231, 256], "align": [21, 156, 227, 261, 262], "align_corn": [156, 227], "all": [0, 3, 4, 10, 20, 30, 100, 103, 105, 106, 107, 108, 109, 121, 122, 145, 146, 147, 149, 150, 153, 154, 156, 159, 160, 165, 179, 180, 190, 217, 218, 219, 221, 222, 225, 229, 230, 231, 232, 235, 240, 241, 242, 267, 289, 290, 291, 298, 301, 303, 305, 306, 307, 312, 314, 315, 316, 318, 321, 322, 330], "allevi": [100, 111], "alloc": [271, 272], "allow": [0, 1, 3, 4, 10, 19, 20, 45, 47, 56, 57, 58, 69, 82, 83, 84, 85, 86, 90, 100, 104, 105, 106, 107, 108, 109, 111, 114, 115, 118, 122, 124, 157, 165, 175, 176, 179, 182, 183, 184, 186, 188, 189, 190, 227, 229, 233, 234, 245, 269, 274, 276, 277, 302, 304, 309, 319, 320, 330], "along": [118, 156, 165, 184, 261, 262, 266, 289, 290, 291, 298, 301, 303, 305, 307, 309, 312, 315, 316, 317, 318, 325, 327], "alongsid": 102, "alpha": [111, 114, 116, 125, 175, 182, 192, 232, 240], "alpha_dropout": [130, 131, 192], "alphadropout": [197, 198], "alphadropoutmodel": 192, "alreadi": 247, "also": [101, 111, 112, 114, 115, 116, 117, 119, 132, 134, 156, 238, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 272, 276, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 299, 300, 305, 307, 310, 311, 312, 313, 314, 315, 316, 317, 318], "alter": [109, 313], "altern": [1, 176, 233, 262], "alwai": [104, 311, 324, 325, 327], "among": [41, 165], "amount": [120, 121, 122, 148, 149, 150, 152, 153, 154, 161, 162, 163, 238], "amsgrad": [235, 236], "an": [0, 1, 3, 10, 14, 16, 17, 19, 20, 22, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 49, 50, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 90, 97, 98, 99, 100, 101, 103, 105, 106, 107, 108, 109, 112, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 146, 147, 156, 157, 161, 162, 163, 165, 173, 174, 175, 181, 183, 188, 189, 190, 192, 193, 194, 195, 196, 199, 201, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 230, 231, 232, 235, 238, 240, 246, 247, 248, 257, 262, 270, 273, 283, 290, 298, 303, 305, 312, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330], "analog": [312, 316], "analysi": [4, 164, 188, 189, 190, 214, 220, 222, 223, 225], "andreetto": 100, "andrew": 100, "angl": [157, 326], "ani": [0, 1, 2, 3, 17, 19, 24, 58, 86, 97, 99, 102, 103, 104, 105, 107, 108, 111, 112, 114, 115, 116, 117, 119, 125, 126, 132, 134, 141, 143, 183, 215, 229, 230, 244, 246, 247, 254, 257, 269, 270, 271, 273, 274, 275, 276, 277, 289, 291, 302, 304, 305, 306, 307, 310, 312, 315, 316, 317, 318, 319, 330], "anoth": [108, 268, 275, 277, 320, 330], "api": [4, 217, 218, 219, 330], "appear": 230, "append": [106, 108, 109], "appli": [2, 4, 5, 6, 7, 8, 10, 17, 23, 30, 69, 86, 96, 98, 100, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 122, 124, 125, 126, 127, 128, 129, 132, 134, 135, 136, 137, 139, 140, 158, 159, 160, 164, 165, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 192, 193, 194, 195, 196, 199, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 232, 233, 234, 236, 237, 238, 239, 262, 310, 312, 319, 322, 324, 325, 326, 327, 328, 330], "applic": [4, 19, 25, 44, 45, 51, 52, 53, 55, 56, 57, 100, 120, 143, 188, 189, 190, 199, 201, 256, 269, 276, 310, 328], "approach": [3, 43, 109, 236], "appropri": [19, 53, 56, 57, 100, 103, 107, 109, 188, 189, 190, 192, 193, 194, 204, 221, 222, 244, 246], "approx": 116, "approxim": [19, 112, 176, 177, 178, 221, 224], "ar": [1, 2, 3, 4, 10, 13, 14, 16, 17, 19, 20, 21, 22, 39, 40, 41, 100, 102, 103, 104, 105, 106, 107, 108, 109, 118, 120, 121, 122, 124, 132, 134, 146, 147, 156, 161, 162, 163, 164, 165, 169, 170, 172, 173, 174, 177, 184, 188, 189, 190, 192, 193, 194, 195, 196, 199, 201, 204, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 232, 235, 236, 238, 239, 240, 241, 242, 244, 246, 247, 248, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 272, 279, 283, 287, 289, 290, 291, 292, 293, 298, 301, 302, 305, 309, 312, 313, 316, 319, 320, 321, 323, 324, 328, 330], "arang": 278, "arbitrari": [106, 200, 271, 272, 283, 288, 290, 294, 296, 298, 302, 303], "arcco": 278, "arch": 247, "architectur": [24, 25, 26, 27, 28, 29, 30, 39, 40, 41, 42, 43, 44, 45, 47, 51, 52, 53, 55, 56, 57, 58, 69, 70, 71, 72, 73, 74, 75, 76, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 105, 106, 107, 108, 109, 112, 164, 177, 178, 180, 185, 199, 200, 229, 247], "arcsin": 278, "arctan": 278, "area": [156, 227], "arg": [103, 200, 247, 271], "argument": [3, 4, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 95, 97, 99, 103, 109, 200, 251, 271, 302], "around": [14, 157, 186], "arr": [248, 305, 307, 315, 318], "arrai": [10, 102, 104, 245, 248, 257, 262, 270, 275, 277, 304, 311, 312, 320, 330], "art": 100, "artifici": 100, "arxiv": 100, "asarrai": 248, "asgd": 243, "aspect": 328, "assign": [103, 105, 107, 109, 156, 204, 207], "assist": [39, 40, 41], "associ": [107, 108], "assum": [0, 1, 230, 231, 244], "attempt": [105, 109], "attent": [86, 108, 132, 164], "attribut": 103, "audio": 188, "augment": [3, 4, 79, 157, 256, 312, 316, 319, 323, 324, 325, 326, 327, 330], "autodiff": 10, "autograd": 229, "automat": [4, 10, 104, 105, 106, 107, 108, 229, 249, 251, 252, 253, 255, 257, 271, 272, 277, 309, 320], "auxiliari": [39, 40, 41, 102], "avail": [4, 5, 6, 7, 8, 10], "averag": [23, 48, 49, 50, 58, 69, 76, 86, 91, 98, 102, 145, 146, 147, 148, 149, 150, 156, 164, 165, 206, 217, 218, 219, 220, 221, 222, 232, 233, 235, 240, 290], "avg_down": 58, "avg_pool": [220, 221, 222], "avg_pool1d": [131, 151], "avg_pool2d": [131, 151], "avg_pool3d": [131, 151], "avgpool": [23, 76, 91, 98, 165], "avgpool1d": [198, 226], "avgpool1dmodel": 220, "avgpool2d": [198, 226], "avgpool2dmodel": 221, "avgpool3d": [198, 226], "avgpool3dmodel": 222, "avoid": [2, 3, 19, 107, 246], "ax": [11, 245, 289, 290, 291, 298, 302, 303, 312, 314, 316], "axi": [118, 184, 261, 262, 289, 290, 291, 298, 303, 305, 307, 309, 310, 312, 314, 315, 316, 317, 318, 325, 327], "b": [11, 21, 100, 132, 134, 172, 188, 189, 190, 199, 201, 245, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 305, 307, 315, 318, 324], "b0": [30, 31, 100], "b1": [30, 32, 100], "b2": [30, 33, 100], "b3": [30, 34, 100], "b4": [30, 35, 100], "b5": [30, 36, 100], "b6": [30, 37, 100], "b7": [30, 38, 100], "b_i": [263, 264, 267], "back": [156, 221, 222, 247, 261, 266, 312, 316], "backbon": [87, 88, 89], "backpropag": [10, 13, 14, 16, 17, 19, 20, 22, 100, 102, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 132, 134, 156, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 220, 221, 222, 223, 224, 225, 229, 246, 253, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 287, 289, 291, 304, 310, 312, 316, 320], "backward": [10, 102, 104, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 257, 320], "balanc": [53, 70, 71, 72, 73, 74, 75, 100, 205], "bar": 232, "base": [3, 11, 16, 17, 20, 21, 25, 39, 40, 41, 42, 43, 44, 45, 47, 69, 70, 71, 72, 73, 74, 75, 86, 91, 96, 100, 103, 105, 106, 107, 108, 124, 132, 145, 146, 147, 165, 192, 204, 205, 217, 218, 219, 229, 230, 231, 232, 236, 240, 241, 242, 249, 258, 259, 263, 264, 265, 267, 268, 277, 287, 288, 289, 291, 302, 309, 310, 323, 324, 325, 326, 327], "base_width": [67, 68, 69, 86], "basic": [10, 23, 58, 70, 71, 72, 73, 74, 75, 87, 88, 89, 96, 98, 101, 120, 121, 122, 145, 146, 147, 158, 159, 160, 161, 162, 163, 164, 169, 170, 173, 174, 217, 218, 219, 321, 322, 323, 324, 325, 326, 327, 328], "basicblock": [58, 62, 65], "batch": [1, 2, 3, 11, 17, 20, 22, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 76, 82, 83, 84, 85, 90, 120, 121, 122, 124, 127, 128, 129, 132, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 188, 189, 190, 199, 201, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 225, 239, 262, 321, 322, 323, 324, 326, 328], "batch_norm": [131, 142, 209, 210, 211], "batch_norm1": 109, "batch_norm2": 109, "batch_siz": [1, 2, 3, 96, 165], "batchnorm": [158, 159, 160], "batchnorm1d": [158, 198, 216], "batchnorm1dmodel": 209, "batchnorm2d": [109, 159, 198, 216], "batchnorm2dmodel": 210, "batchnorm3d": [160, 198, 216], "batchnorm3dmodel": 211, "bceloss": [198, 208], "becaus": [2, 252], "becom": [18, 103, 233, 241], "been": 185, "befor": [17, 76, 101, 104, 232, 238, 246, 254, 310, 322, 330], "begin": [1, 18, 111, 114, 115, 116, 175, 177, 178, 179, 180, 182, 205, 206, 207, 220, 221, 222, 223, 224, 225, 239, 241, 245, 256, 263, 264, 266, 279, 283, 289, 291, 293, 310], "behav": [205, 301], "behavior": [100, 106, 109, 244, 256, 262, 272, 330], "being": [108, 157, 192, 193, 194, 195, 196, 239, 244, 246, 305, 307, 318], "belong": 0, "below": [20, 40, 41, 42, 44, 45, 47, 48, 49, 50, 262, 270, 273], "benchmark": [5, 6, 7, 8], "benefici": 109, "benefit": [111, 229, 238, 248], "bernoulli": [192, 193, 194, 195, 196, 250], "best": [169, 170, 173, 174], "beta": [209, 210, 211, 212, 213, 214, 215, 235, 236, 237, 238, 239], "beta1": [235, 236, 237, 238, 239], "beta2": [235, 236, 237, 238, 239], "beta_1": [235, 236, 237, 238, 239], "beta_2": [235, 236, 237, 238, 239], "better": [16, 98, 100, 112, 169, 170, 173, 174, 185, 212, 213, 214, 229, 236, 238, 240, 322], "between": [70, 71, 72, 73, 74, 75, 100, 103, 120, 121, 122, 124, 132, 137, 158, 159, 160, 161, 162, 163, 165, 181, 188, 189, 190, 192, 193, 194, 195, 196, 199, 203, 204, 205, 206, 207, 232, 240, 241, 242, 256, 258, 259, 262, 265, 268, 269, 303, 324, 325, 327, 328], "beyond": [10, 106], "bia": [120, 121, 122, 132, 134, 141, 143, 144, 158, 159, 160, 161, 162, 163, 188, 189, 190, 199, 201, 209, 210, 211, 212, 213, 214, 215, 235, 236, 237, 238, 239], "bias": [188, 189, 190, 201, 215, 229], "bias1": 107, "bias2": 107, "big": [161, 162, 163], "bilinear": [131, 133, 156, 198, 202, 227], "bilinearmodel": 199, "binari": [117, 135, 183, 192, 193, 194, 195, 196, 203], "binary_cross_entropi": [131, 138], "block": [25, 26, 27, 28, 29, 30, 43, 52, 53, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 100, 103, 124, 158, 159, 160, 165, 188, 189, 190, 246], "block1": [101, 229], "block2": [101, 229], "block_arg": [58, 76], "block_config": 25, "blue": 324, "bmatrix": 266, "bn": [158, 159, 160], "bn_affin": [158, 159, 160], "bool": [1, 5, 6, 7, 8, 22, 30, 39, 40, 41, 58, 101, 103, 104, 125, 126, 127, 128, 129, 141, 143, 156, 158, 159, 160, 161, 162, 163, 188, 189, 190, 199, 201, 209, 210, 211, 212, 213, 214, 215, 227, 235, 236, 240, 244, 249, 251, 252, 253, 255, 257, 269, 270, 271, 272, 273, 274, 275, 276, 277, 289, 290, 291, 298, 303, 304, 320], "both": [120, 134, 146, 148, 152, 158, 176, 185, 188, 189, 218, 220, 221, 223, 224, 227, 260, 261, 262, 266, 270, 309, 328], "bottleneck": [25, 52, 53, 55, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 100, 164], "bottleneck_cfg": 53, "bottom": 156, "bound": [170, 172, 174, 241, 255], "box": 4, "branch": [39, 40, 41, 100, 165], "break": 229, "brief": 330, "bright": 330, "broadcast": [195, 196, 290, 298, 303, 313, 317], "buffer": [232, 238, 240, 242], "build": [10, 45, 53, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 86, 87, 88, 89, 100, 103, 106, 109, 229, 330], "built": [3, 10, 59, 63, 64, 109, 229], "burg": 8, "c": [5, 6, 8, 58, 70, 71, 72, 73, 74, 75, 87, 88, 89, 100, 124, 127, 128, 129, 136, 140, 141, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 164, 195, 196, 204, 207, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 245, 307, 318, 322], "c_": [188, 189, 190], "c_in": [120, 121, 122, 158, 159, 160], "c_out": [120, 121, 122], "calcul": [0, 1, 10, 11, 104, 227, 233, 234, 237, 238, 239, 246, 252, 257], "calculu": [12, 19], "call": [1, 103, 244, 247, 258, 259, 262, 263, 264, 265, 267, 268], "callabl": [230, 247, 319], "can": [0, 2, 3, 4, 10, 12, 14, 16, 17, 19, 20, 22, 30, 53, 58, 67, 68, 82, 83, 84, 85, 96, 97, 100, 101, 102, 104, 105, 106, 107, 108, 109, 114, 120, 121, 122, 157, 165, 176, 179, 181, 186, 188, 189, 190, 212, 213, 214, 221, 222, 223, 224, 225, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 248, 255, 256, 257, 262, 271, 272, 273, 274, 276, 277, 290, 298, 303, 307, 309, 310, 312, 313, 316, 317, 318, 319, 320, 323, 325, 326, 327, 330], "cannot": [13, 14, 16, 17, 20, 21, 22, 249], "cap": 181, "capabl": [10, 269, 270, 273, 274, 275, 276, 277], "capac": [51, 67, 68, 69, 70, 71, 72, 73, 74, 75, 82, 83, 84, 85, 90, 100], "captur": [86, 100, 124, 188, 189, 190, 199], "cardin": [69, 70, 71, 72, 73, 74, 75, 86, 100], "care": 246, "cartesian": 309, "case": [3, 18, 47, 53, 54, 111, 114, 115, 116, 175, 177, 178, 179, 180, 182, 205, 206, 207, 220, 221, 222, 223, 224, 225, 229, 234, 239, 241, 245, 263, 264, 279, 283, 289, 291, 293, 310, 330], "categori": [7, 59, 60, 61, 62, 63, 64, 65, 66], "caus": [3, 19, 232, 240, 242], "cautiou": 0, "cdot": [12, 13, 16, 17, 18, 21, 111, 112, 114, 116, 117, 120, 121, 122, 132, 134, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 164, 173, 174, 176, 177, 178, 183, 185, 192, 199, 201, 203, 204, 205, 207, 209, 210, 211, 212, 213, 214, 215, 233, 234, 235, 236, 237, 238, 239, 241, 260, 261, 262, 265, 267], "center": [157, 186, 240, 321, 330], "centercrop": [329, 330], "central": 248, "certain": [13, 112, 132, 185, 199, 235, 236, 244, 289, 291], "cfg": [56, 57], "chain": [16, 17, 109, 319, 330], "challeng": [7, 100], "cham": 100, "chanc": [324, 325, 327], "chang": [137, 205, 241, 245, 246, 247, 311, 313, 317, 324, 330], "channel": [25, 30, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 69, 70, 71, 72, 73, 74, 75, 80, 82, 83, 84, 85, 90, 91, 96, 100, 120, 121, 122, 124, 127, 128, 129, 141, 143, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 188, 189, 190, 195, 196, 209, 210, 211, 212, 213, 214, 217, 220, 221, 222, 223, 224, 225, 322, 324, 328], "character": [67, 68], "check": [244, 321, 323], "checkpoint": 231, "chen": 100, "choic": 309, "choleski": 15, "chollet": 100, "choos": 100, "chosen": 192, "christian": 100, "christoph": 8, "chu": 100, "cifar": [5, 6], "cifar10": 9, "cifar100": 9, "cifar100_train": 6, "cifar10_train": 5, "clariti": 248, "class": [3, 4, 10, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 48, 49, 50, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 95, 97, 99, 101, 118, 136, 140, 229, 231, 247, 270, 273, 304, 330], "classic": 50, "classif": [4, 5, 6, 7, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 117, 118, 135, 136, 140, 183, 184, 203, 204, 207], "classifi": [23, 39, 40, 41, 47, 48, 49, 50, 58, 69, 86, 91, 96, 98], "cleaner": [1, 246, 262], "clear": [104, 257, 271, 272], "clearli": 248, "clf_in_featur": 47, "clf_layer": 47, "clip": [157, 177, 181, 241, 278], "clockwis": 157, "close": [16, 19, 182, 203, 240], "closer": 175, "closur": [230, 231], "cloth": 7, "cnn": 100, "co": [278, 294], "code": [17, 105, 107, 109, 244, 246, 248, 256], "coeffici": [21, 30, 156, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242], "col": 124, "collect": [4, 11, 100, 105, 106, 108, 109, 231], "color": [324, 330], "colorjitt": 330, "column": [13, 14, 16, 20, 21, 22, 101, 124, 273, 307, 309], "com": [7, 8], "combin": [1, 3, 42, 43, 44, 90, 100, 106, 109, 111, 112, 158, 159, 160, 164, 165, 176, 204, 229, 238, 239, 290, 298, 303, 305, 330], "combined_dataset": [0, 1], "common": [124, 157, 231, 330], "commonli": [10, 51, 52, 53, 54, 55, 56, 57, 112, 117, 118, 119, 120, 122, 132, 139, 141, 143, 157, 164, 173, 174, 177, 178, 181, 184, 190, 203, 206, 207, 220, 221, 222, 223, 224, 225, 245, 248, 274, 314, 320, 321, 322, 323, 325, 326, 327, 330], "compar": [67, 68, 98, 100, 256, 315], "compat": [4, 11, 86, 200, 215, 229, 245, 256, 320, 330], "complex": [2, 3, 10, 14, 45, 58, 61, 64, 65, 78, 80, 101, 105, 106, 109, 115, 180, 223, 225, 229, 231, 330], "compon": [19, 39, 40, 41, 42, 43, 44, 45, 103, 106, 231, 257, 330], "compos": [5, 6, 7, 8, 96, 188, 189, 190, 220, 221, 222, 223, 224, 225, 229, 330], "comprehens": 3, "compris": [67, 68], "comput": [10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 51, 53, 56, 57, 58, 69, 70, 71, 72, 73, 74, 75, 76, 82, 83, 84, 85, 90, 100, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 124, 132, 134, 135, 136, 137, 139, 140, 141, 143, 145, 146, 147, 156, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 240, 244, 245, 246, 248, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 309, 310, 312, 316, 320, 330], "computation": [3, 19, 59, 177, 178], "compute_loss": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242], "concaten": [0, 120, 121, 122, 307, 308, 315, 318], "concept": [10, 19, 52, 100], "condit": [12, 13, 16], "confer": 100, "config": 91, "configur": [24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 97, 99, 108, 158, 159, 160], "conjunct": [124, 207], "connect": [23, 25, 26, 27, 28, 29, 30, 42, 43, 44, 45, 47, 48, 49, 50, 58, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 86, 87, 88, 89, 91, 96, 98, 100, 134, 164, 165, 188, 189, 190, 201], "consecut": 91, "consid": [3, 16, 19, 25, 109, 169, 170, 173, 174, 229, 241, 244, 271, 272, 330], "consider": 19, "consist": [2, 4, 7, 23, 48, 49, 50, 58, 102, 145, 146, 147, 165, 217, 218, 219, 248, 254, 256, 310, 321, 328, 330], "consistent_tensor": 256, "consol": 101, "constant": [135, 136, 141, 143, 144, 168, 182, 203, 204, 209, 210, 211, 212, 213, 214, 215, 233, 234, 235, 236, 237, 238, 239, 240, 248, 310], "constant_pad": 310, "constraint": [1, 51, 53, 165], "construct": [10, 26, 27, 28, 29, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 87, 88, 89, 92, 93, 94, 95, 106, 229, 270, 312, 316], "constructor": [26, 27, 28, 29, 54, 55, 56, 57, 67, 68, 82, 83, 84, 85, 90, 92, 93, 94, 95], "contain": [1, 5, 6, 7, 8, 13, 14, 19, 20, 21, 22, 43, 47, 58, 69, 70, 71, 72, 73, 74, 75, 76, 86, 91, 101, 103, 105, 106, 107, 108, 109, 118, 124, 132, 134, 135, 136, 140, 156, 203, 204, 207, 230, 258, 259, 260, 261, 263, 264, 265, 266, 268, 269, 272, 279, 280, 281, 282, 284, 285, 286, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 306, 309], "content": 157, "context": [244, 246], "contextmanag": 246, "contigu": 311, "continu": [179, 253], "contrast": [212, 213, 214, 330], "contribut": [156, 192, 193, 194, 195, 196, 220, 223, 224, 225, 232, 238, 301], "control": [69, 165, 175, 205, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 256, 320, 330], "conv": [43, 76, 158, 159, 160, 210, 211], "conv1": [48, 49, 50, 109, 188, 189, 190, 220, 221, 222, 223, 224, 225], "conv1d": [123, 131, 158, 161, 191, 198, 220, 223], "conv1dmodel": 188, "conv2": [48, 49, 50, 109, 188, 189, 190], "conv2d": [106, 109, 123, 131, 159, 162, 191, 198, 210, 221, 224, 229], "conv2dmodel": 189, "conv3d": [123, 131, 160, 163, 191, 198, 211, 222, 225], "conv3dmodel": 190, "conv_bia": [158, 159, 160], "conv_config": 91, "conv_lay": [47, 106], "convblock": 229, "convbnrelu1d": 166, "convbnrelu2d": 166, "convbnrelu3d": 166, "conveni": [4, 24, 99], "convent": 262, "converg": [19, 186, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 322], "convers": [204, 207, 324, 330], "convert": [5, 6, 7, 8, 91, 102, 104, 118, 184, 257, 309, 319, 320, 324, 330], "convnetwork": 106, "convolut": [23, 24, 25, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43, 47, 48, 49, 50, 51, 53, 56, 57, 58, 69, 70, 71, 72, 73, 74, 75, 76, 82, 83, 84, 85, 86, 90, 91, 96, 98, 99, 100, 106, 120, 121, 122, 124, 158, 159, 160, 161, 162, 163, 164, 165, 188, 189, 190, 221, 222, 224, 225, 310], "convolv": [120, 121, 122, 188, 189, 190], "coordin": 309, "core": [0, 1, 2, 3, 103, 229, 230, 257, 330], "corinna": 8, "corner": [156, 227, 321, 323], "correct": [105, 204, 207, 235, 236, 237, 238, 239, 320], "correctli": [19, 103, 105, 106, 107, 108, 109, 204, 207, 256], "correspond": [0, 1, 2, 5, 6, 7, 8, 14, 54, 56, 57, 67, 68, 87, 88, 89, 105, 107, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 132, 134, 156, 177, 180, 184, 199, 201, 209, 210, 211, 212, 213, 214, 221, 222, 232, 240, 242, 249, 260, 261, 263, 264, 267, 287, 288, 294, 296, 307, 310, 312, 316, 318], "cort": 8, "cosh": [278, 295, 300], "cosin": [280, 284, 285, 294], "cost": [51, 53, 69, 100, 161, 162, 163], "could": 103, "count": [100, 101, 305], "counterclockwis": [157, 326], "cover": [11, 120, 121, 122], "coverag": [145, 146, 147], "creat": [2, 3, 10, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 48, 49, 50, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 106, 109, 165, 181, 229, 245, 247, 256, 269, 273, 274, 275, 276, 277, 309, 315, 319, 330], "creation": [106, 109, 330], "criterion": [203, 204, 205, 206, 207], "critic": [19, 231, 256], "crop": [321, 323, 330], "cross": [135, 136, 203, 204], "cross_entropi": [131, 138], "crossentropyloss": [198, 208], "cube": 278, "cumul": [112, 176], "current": [103, 232, 235, 241, 244], "custom": [4, 10, 23, 24, 25, 31, 32, 33, 34, 35, 36, 37, 38, 44, 45, 47, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 77, 78, 79, 80, 81, 82, 83, 84, 85, 90, 91, 97, 98, 99, 102, 105, 106, 107, 108, 109, 157, 158, 159, 160, 175, 179, 229, 256, 273], "custom_config": 91, "custom_lenet": 47, "customiz": 330, "custommodul": 102, "customnetwork": 105, "customparametermodel": [107, 108], "cvpr": 100, "d": [100, 122, 129, 147, 150, 154, 160, 211, 214, 215, 219, 222, 225, 245, 270, 326], "d_": [122, 147, 150, 154, 190, 219, 222, 225], "d_1": 215, "d_2": 215, "d_n": 215, "d_out": [122, 150, 154], "dampen": [232, 240, 242], "data": [4, 5, 6, 7, 8, 10, 17, 102, 104, 108, 119, 120, 122, 124, 128, 129, 134, 157, 158, 159, 160, 165, 180, 186, 188, 189, 190, 201, 214, 220, 222, 225, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 248, 256, 257, 258, 259, 265, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 304, 310, 311, 312, 313, 314, 316, 319, 320, 323, 324, 325, 326, 327, 330], "databas": 8, "dataload": [2, 3], "dataset": [3, 5, 6, 7, 8, 48, 49, 50, 51, 58, 59, 60, 61, 62, 63, 64, 65, 66, 157, 234, 246, 319, 321, 330], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 266, "debug": [101, 109, 244, 254, 330], "decai": [232, 233, 234, 235, 236, 237, 238, 239, 240, 242], "decompos": [12, 20, 22], "decomposit": [11, 12, 16, 19, 20, 22], "decor": [70, 71, 72, 73, 74, 75, 247], "decoupl": [100, 233, 234, 236, 237, 238, 239], "decreas": [235, 236, 241], "deep": [1, 3, 4, 10, 43, 58, 59, 60, 61, 63, 64, 70, 71, 72, 73, 74, 75, 77, 78, 81, 100, 141, 176, 182, 229, 256, 319, 320, 330], "deeper": [10, 40, 42, 45, 58, 65, 100, 182], "def": [0, 1, 2, 3, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 199, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 246, 247, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320], "default": [1, 5, 6, 7, 8, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 111, 114, 118, 120, 121, 122, 125, 126, 127, 128, 129, 135, 136, 137, 139, 140, 141, 143, 144, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 179, 184, 188, 189, 190, 192, 193, 194, 195, 196, 199, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 220, 221, 222, 223, 224, 225, 227, 230, 231, 238, 244, 249, 251, 252, 253, 255, 257, 269, 270, 271, 272, 273, 274, 275, 276, 277, 289, 290, 291, 298, 302, 303, 304, 305, 307, 309, 310, 312, 315, 318, 320, 324, 325, 327], "defin": [1, 3, 4, 10, 25, 39, 40, 41, 42, 43, 44, 45, 47, 53, 58, 76, 87, 88, 89, 91, 105, 106, 107, 108, 109, 176, 178, 181, 185, 203, 204, 205, 206, 207, 220, 227, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 248, 252, 253, 267, 272, 283, 302, 319, 330], "definit": [10, 12, 158, 159, 160, 330], "degre": [157, 326, 330], "delai": 232, "delta": [118, 137, 184, 205, 233], "delta_": [118, 184], "demonstr": [10, 11, 82, 83, 84, 85, 90, 100, 229, 248], "denomin": [141, 143, 144, 158, 159, 160, 209, 210, 211, 212, 213, 214, 215, 233, 234, 235, 236, 237, 238, 239, 240, 259], "denot": [17, 183, 188, 189, 190, 192, 193, 194, 195, 196, 302], "dens": [10, 25, 26, 27, 28, 29, 100, 234], "dense1": 10, "dense2": 10, "densenet": [26, 27, 28, 29, 46, 100, 164], "densenet_121": 100, "densenet_169": 100, "densenet_201": 100, "densenet_264": 100, "densiti": [112, 176], "depend": [10, 17, 18, 53, 108, 135, 136, 137, 139, 140, 156, 188, 260, 270, 289, 291, 312, 316, 323, 324, 328], "depth": [30, 100, 106, 122, 129, 147, 150, 154, 190, 211, 214, 219, 222, 225], "depth_coef": 30, "depthseparableconv1d": 166, "depthseparableconv2d": 166, "depthseparableconv3d": 166, "depthwis": [51, 96, 100, 120, 121, 122, 161, 162, 163], "depthwise_separ": [161, 162, 163], "der": 100, "deriv": [19, 20, 118, 145, 146, 147, 176, 184, 186, 188, 189, 190, 199, 201, 247], "descend": 22, "descent": [10, 232, 242], "describ": [13, 14], "descript": 330, "deseri": 102, "design": [3, 4, 10, 11, 23, 24, 40, 41, 42, 48, 49, 50, 53, 59, 60, 61, 62, 63, 64, 65, 66, 77, 80, 96, 99, 100, 104, 106, 107, 108, 109, 111, 116, 182, 192, 229, 248, 330], "desir": [97, 102, 145, 146, 147, 217, 218, 219, 227, 302, 304], "destin": 103, "det": [11, 15], "det_a": 13, "detail": [10, 101, 231, 256, 262], "detect": 100, "determin": [0, 10, 11, 12, 13, 47, 67, 68, 145, 146, 147, 169, 170, 173, 174, 188, 189, 190, 217, 218, 219, 221, 222, 224, 225, 240, 244, 249, 251, 252, 253, 255, 271, 272, 321, 323], "determinist": 157, "develop": [10, 229, 256, 330], "deviat": [169, 171, 173, 319, 322, 330], "devic": [52, 53], "diag": [19, 278], "diagon": [19, 20, 22, 270, 273, 301], "diagonaliz": 14, "dict": [24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 54, 55, 56, 57, 58, 67, 68, 70, 71, 72, 73, 74, 75, 76, 82, 83, 84, 85, 87, 88, 89, 90, 97, 99, 103, 105, 107, 200, 230], "dictionari": [47, 103, 104, 105, 107, 109, 230], "differ": [0, 17, 39, 47, 53, 82, 83, 84, 85, 90, 106, 109, 118, 132, 156, 165, 184, 199, 206, 231, 245, 254, 256, 268, 277, 303, 314, 330], "differenti": [10, 12, 21, 176, 229, 249, 251, 252, 253, 255, 257, 269, 271, 272, 274, 276], "digit": [7, 8, 50, 100], "dilat": [120, 121, 122, 158, 159, 160, 161, 162, 163, 188, 189, 190], "dilation_height": 124, "dilation_width": 124, "dim": [204, 207], "dimens": [13, 14, 16, 17, 20, 21, 22, 23, 58, 69, 86, 91, 98, 100, 104, 118, 132, 134, 141, 143, 144, 146, 147, 156, 164, 165, 184, 188, 189, 190, 209, 210, 211, 212, 213, 214, 215, 218, 219, 221, 222, 223, 224, 225, 227, 245, 248, 251, 255, 257, 261, 271, 289, 290, 291, 298, 301, 302, 303, 305, 307, 310, 312, 314, 315, 316, 317, 318, 321, 323, 328], "dimension": [17, 19, 20, 22, 120, 121, 122, 148, 149, 150, 152, 153, 154, 165, 188, 189, 190, 194, 195, 196, 209, 210, 211, 212, 213, 214, 220, 221, 222, 223, 224, 225, 245, 261, 262, 266, 270, 287, 290, 298, 301, 303, 306, 311, 312, 314, 316], "diminish": 234, "direct": [14, 203, 204, 205, 206, 207, 232, 240, 241, 242], "directli": [100, 105, 106, 107, 108, 156, 227, 233, 234, 236, 237, 238, 239, 254, 256, 304, 330], "directori": [3, 4, 5, 6, 7, 8], "disabl": [244, 246], "discontinu": 293, "discrep": [203, 204, 207], "discret": [249, 252, 256], "disk": 3, "displai": [24, 99, 101], "distribut": [112, 118, 156, 169, 170, 171, 172, 173, 174, 176, 184, 188, 189, 190, 192, 193, 194, 195, 196, 199, 201, 204, 207, 220, 221, 222, 249, 251, 252, 253, 255, 256, 290, 298, 301, 303, 315, 322, 324, 325, 326, 327], "div": 278, "divers": [157, 325, 327, 330], "diversifi": 330, "divid": [1, 19, 106, 109, 118, 120, 121, 122, 184, 203, 204, 205, 206, 207, 259, 322], "divis": [10, 19, 120, 121, 122, 192, 193, 194, 195, 196, 233, 234, 235, 236, 237, 238, 239, 240, 259], "do": [19, 21, 102, 105, 106, 107, 108, 125, 126, 127, 128, 229, 239, 244, 277, 301, 310], "document": [4, 10, 100, 231, 248, 256], "doe": [10, 17, 18, 19, 20, 22, 101, 102, 105, 106, 107, 108, 109, 174, 235, 236, 241, 244, 246, 249, 251, 252, 253, 254, 255, 269, 270, 271, 272, 273, 274, 275, 276, 277, 313], "doesn": 246, "doi": 100, "domain": 4, "don": 246, "dot": [14, 17, 105, 106, 107, 108, 109, 215, 223, 224, 225, 261, 266, 278, 305, 307, 315, 318], "down": [3, 229, 328], "download": [4, 5, 6, 7, 8], "drawback": 111, "drawn": [251, 252, 253, 255, 256, 326], "drop": [192, 193, 194, 195, 196], "dropout": [23, 30, 41, 91, 98, 100, 112, 125, 127, 128, 129, 192, 194, 195, 196], "dropout1d": [130, 131, 197, 198], "dropout1dmodel": 194, "dropout2d": [130, 131, 197, 198], "dropout3d": [130, 131, 197, 198], "dropout_prob": 41, "dropoutmodel": 193, "dtype": [102, 104, 257, 269, 270, 271, 272, 273, 274, 275, 276, 277, 304, 320], "due": [17, 19, 25, 120, 121, 180, 326], "dummi": 101, "duplic": [105, 107], "dure": [3, 10, 13, 14, 16, 19, 20, 22, 39, 40, 41, 58, 100, 102, 103, 104, 105, 106, 107, 108, 109, 118, 125, 126, 127, 128, 129, 141, 143, 157, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 220, 221, 222, 223, 224, 225, 227, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 246, 257, 258, 289, 290, 291, 298, 303, 320, 323, 326, 330], "dy": [114, 179], "dynam": [0, 2, 3, 86, 90, 100, 103, 106, 107, 108, 109, 145, 146, 147, 165, 215, 217, 218, 219, 234, 239, 244], "dynamicnetwork": 106, "e": [0, 13, 14, 16, 17, 20, 22, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 49, 50, 91, 102, 118, 165, 183, 184, 185, 192, 204, 230, 233, 240, 241, 273, 285, 287, 288, 295, 300, 301, 305, 324], "each": [1, 2, 3, 4, 14, 17, 19, 20, 22, 23, 25, 47, 51, 53, 54, 56, 57, 58, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 86, 87, 88, 89, 91, 98, 100, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 132, 134, 141, 143, 145, 146, 147, 164, 165, 177, 180, 184, 188, 189, 190, 192, 193, 194, 195, 196, 199, 201, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 233, 234, 235, 236, 237, 238, 239, 240, 241, 249, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 305, 307, 309, 310, 312, 315, 316, 318, 319, 320, 321, 322, 323, 324, 326, 328, 330], "earli": 239, "eas": [4, 10], "easi": [2, 3, 4, 10, 70, 71, 72, 73, 74, 75, 104, 105, 107], "easier": [3, 105, 106, 109], "easili": [4, 104, 108, 330], "eccv": 100, "economi": 22, "edg": [53, 310], "edu": [5, 6], "educ": [10, 100], "effect": [100, 105, 106, 107, 108, 109, 118, 120, 121, 122, 124, 175, 176, 180, 183, 184, 186, 209, 210, 211, 212, 213, 214, 215, 227, 244, 245, 246, 307, 318], "effici": [1, 2, 3, 5, 6, 7, 8, 10, 11, 16, 21, 30, 31, 32, 33, 34, 35, 36, 37, 38, 44, 45, 52, 53, 55, 56, 57, 69, 70, 71, 72, 73, 74, 75, 82, 83, 84, 85, 90, 96, 100, 124, 161, 162, 163, 177, 178, 181, 204, 229, 246], "efficientnet": [31, 32, 33, 34, 35, 36, 37, 38, 46, 100], "efficientnet_b0": 100, "efficientnet_b1": 100, "efficientnet_b2": 100, "efficientnet_b3": 100, "efficientnet_b4": 100, "efficientnet_b5": 100, "efficientnet_b6": 100, "efficientnet_b7": 100, "efficientnetv2": 100, "eig": 15, "eigenvalu": [14, 20], "eigenvector": 14, "eigval": 14, "eigvec": 14, "either": [134, 227, 248, 249, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 304, 309], "element": [0, 19, 20, 41, 104, 108, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 158, 159, 160, 161, 162, 163, 164, 177, 178, 180, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 203, 204, 205, 206, 207, 215, 220, 221, 222, 223, 224, 225, 245, 249, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 303, 306, 309, 310, 312, 313, 314, 316], "elementwise_affin": 215, "elsewher": [223, 224, 225, 273], "elu": [113, 131, 187, 198], "elumodel": 175, "embed": [51, 52, 53, 55, 56, 57], "empti": [103, 109, 278], "empty_lik": 278, "enabl": [0, 1, 2, 3, 10, 17, 22, 30, 44, 86, 87, 88, 89, 100, 103, 104, 105, 106, 107, 108, 180, 188, 189, 190, 199, 201, 229, 231, 244, 246, 249, 251, 252, 253, 255, 257, 319], "encapsul": [229, 257], "encod": [204, 207], "encompass": 30, "encourag": [193, 194, 195, 196, 203, 204, 207, 235], "end": [18, 111, 114, 115, 116, 175, 177, 178, 179, 180, 182, 205, 206, 207, 220, 221, 222, 223, 224, 225, 239, 241, 263, 264, 266, 269, 279, 283, 289, 291, 293, 305, 310, 330], "enforc": [103, 105, 107], "engin": 19, "enhanc": [41, 42, 44, 45, 49, 52, 67, 68, 82, 83, 84, 85, 90, 98, 99, 100, 105, 107, 165, 181, 330], "ensur": [3, 5, 6, 7, 8, 19, 20, 21, 102, 103, 104, 105, 106, 107, 108, 109, 118, 145, 146, 147, 158, 159, 160, 179, 184, 192, 193, 194, 195, 196, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 221, 222, 223, 224, 225, 229, 230, 232, 233, 235, 236, 238, 239, 240, 241, 242, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 256, 267, 290, 298, 303, 310, 320, 321, 322, 323, 324, 328, 330], "enter": 246, "entir": [3, 127, 128, 129, 195, 196, 256], "entri": [47, 56, 57, 314], "entropi": [135, 136, 203, 204], "environ": [10, 56, 57], "ep": [135, 136, 141, 143, 144, 158, 159, 160, 203, 204, 209, 210, 211, 212, 213, 214, 215, 233, 234, 235, 236, 237, 238, 239, 240], "epoch": [1, 3], "epsilon": [203, 204, 209, 210, 211, 212, 213, 214, 215, 233, 234, 235, 236, 237, 238, 239, 240], "equal": [17, 156, 220, 221, 222, 321, 323], "equat": [14, 19, 21], "equival": [262, 301, 311], "error": [0, 3, 14, 16, 103, 106, 107, 108, 109, 112, 137, 139, 176, 203, 204, 205, 206, 229, 230, 246, 248], "especi": [3, 105, 107, 108, 183, 245, 246, 248, 254, 319, 320, 324, 330], "essenti": [1, 3, 10, 11, 17, 19, 43, 121, 124, 229, 254, 256, 289, 319, 320, 324, 330], "estim": [206, 235, 236, 237, 238, 239, 240], "et": [40, 100], "eta": 241, "eta_": 241, "etc": [25, 203, 227, 320], "euclidean": 18, "european": 100, "evalu": [103, 141, 143, 192, 193, 194, 195, 196, 209, 210, 211, 212, 213, 214, 330], "even": [233, 246, 269, 270, 273, 274, 275, 276, 277], "evenli": [145, 146, 147, 217, 218, 219, 269], "everi": [1, 330], "everywher": 293, "exact": [103, 106, 302, 324, 326], "exactli": 109, "exampl": [4, 262], "excel": 42, "except": [0, 293, 305, 307, 318], "excit": [30, 53, 56, 57, 76, 79, 82, 83, 84, 85, 100, 164], "exclus": [252, 255, 269], "exdb": 8, "execut": [106, 246], "exist": [21, 105, 107, 109, 247, 305], "exit": 246, "exp": [111, 116, 117, 119, 175, 182, 278], "expand": [4, 124, 312, 316], "expans": [56, 57], "expansion_factor": 53, "expect": [12, 106, 109, 192, 193, 194, 195, 196, 215, 229, 248], "expens": 3, "experi": [10, 254, 256, 330], "experiment": 256, "explan": [17, 19, 23, 91, 98, 145, 146, 147, 217, 218, 219, 232], "explicit": 109, "explicitli": [100, 105, 107], "explod": [182, 209, 210, 211], "explor": [229, 256], "expon": [17, 267], "exponenti": [111, 116, 118, 175, 182, 184, 192, 235, 236, 237, 238, 239, 287], "extend": [4, 69, 86], "extens": [100, 231], "extern": [4, 10], "extract": [39, 43, 58, 69, 86, 96, 100, 124, 190, 220, 222, 247, 270, 289, 291, 321, 323], "extractor": [47, 48, 49, 50, 96], "extrem": [19, 59, 100], "ey": 278, "f": [1, 4, 5, 6, 7, 8, 10, 100, 107, 108, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 181, 184], "f_1": 164, "f_2": 164, "facilit": [39, 105, 109, 118, 184, 188, 189, 190, 229, 231, 322, 330], "factor": [30, 41, 111, 120, 121, 122, 124, 164, 173, 174, 227, 232, 239, 240, 241, 242, 248], "factori": 97, "failur": [105, 106, 107, 108, 229], "fals": [1, 5, 6, 7, 8, 22, 30, 56, 57, 58, 101, 102, 103, 104, 125, 126, 127, 128, 129, 141, 143, 156, 167, 169, 170, 171, 172, 173, 174, 188, 189, 190, 199, 201, 227, 235, 236, 240, 244, 249, 251, 252, 253, 255, 257, 269, 270, 271, 272, 273, 274, 275, 276, 277, 289, 290, 291, 298, 303, 304, 320], "famili": [100, 247], "fan": [169, 170, 173, 174], "fan_in": [169, 170], "fan_out": [169, 170], "fashion": 7, "fashion_train": 7, "fashionmnist": 9, "fast": 239, "faster": [100, 234, 238, 246], "fc": [43, 58, 69, 76, 86, 106, 164, 189, 190, 220, 221, 222, 223, 224, 225], "fc1": [49, 50, 101, 105, 109, 176, 177, 178, 180, 181, 182, 183, 185, 186, 201], "fc2": [49, 50, 101, 105, 109, 176, 177, 178, 180, 182, 183, 185, 186, 201], "fc3": 50, "featur": [3, 23, 25, 39, 42, 43, 47, 48, 49, 50, 58, 69, 70, 71, 72, 73, 74, 75, 77, 79, 80, 86, 87, 88, 89, 91, 96, 98, 99, 100, 132, 134, 141, 158, 159, 160, 164, 165, 190, 193, 194, 195, 196, 199, 201, 209, 210, 211, 212, 213, 214, 215, 220, 221, 222, 223, 224, 225, 229, 234], "feature_extractor": 47, "fed": [3, 330], "feed": [3, 257, 330], "feedforward": 101, "fergu": [98, 100], "fetch": 0, "few": 101, "fewer": [1, 100], "field": [5, 6, 8, 86, 90, 100, 165], "file": [3, 247], "fill": [167, 171, 172, 251, 252, 253, 255, 274, 275, 276, 277], "filter": [98, 100, 120, 121, 122, 124, 158, 159, 160, 189, 190], "filter_height": 124, "filter_s": 124, "filter_width": 124, "final": [25, 26, 27, 28, 29, 30, 39, 40, 41, 42, 43, 44, 45, 53, 58, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 86, 87, 88, 89, 105, 106, 107, 108, 109, 165, 319, 330], "find": [21, 289, 291], "fine": [164, 330], "finish": 246, "first": [5, 6, 7, 8, 14, 47, 98, 101, 106, 107, 132, 164, 199, 235, 236, 237, 238, 239, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 309, 318, 319, 320, 330], "fit": 229, "fix": [106, 310], "flatten": [43, 47, 109, 124, 266, 308, 311, 312], "flexibl": [1, 3, 4, 10, 39, 43, 44, 45, 47, 54, 58, 82, 83, 84, 85, 90, 91, 96, 100, 105, 106, 107, 108, 109, 227, 229, 231, 248, 274, 275, 320, 330], "flip": [325, 327, 330], "float": [2, 5, 6, 7, 8, 30, 41, 51, 54, 102, 104, 111, 114, 125, 126, 127, 128, 129, 135, 136, 137, 141, 143, 144, 157, 158, 159, 160, 167, 171, 172, 173, 174, 175, 179, 192, 193, 194, 195, 196, 203, 204, 205, 209, 210, 211, 212, 213, 214, 215, 227, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 248, 249, 255, 257, 269, 272, 283, 304, 322, 324, 325, 326, 327], "float32": [102, 104, 257, 269, 270, 273, 274, 276, 304, 320], "float64": [277, 304, 320], "flow": [42, 43, 76, 100, 109, 174, 176, 183, 186, 188, 189, 190, 199, 201, 244], "fly": [2, 3], "fname": 3, "focu": 10, "focus": 10, "follow": [0, 10, 11, 14, 20, 21, 22, 23, 26, 27, 28, 29, 30, 56, 57, 82, 83, 84, 85, 90, 91, 96, 98, 101, 111, 112, 114, 115, 116, 117, 118, 119, 132, 134, 156, 158, 159, 160, 161, 162, 163, 164, 165, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 247, 248, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 289, 291, 309, 313, 321, 322, 323, 324, 325, 326, 327, 330], "form": [20, 165, 266, 309, 312, 316, 330], "format": [2, 3, 5, 6, 7, 8, 101, 204, 207, 320], "formul": 112, "formula": [14, 22, 118, 145, 146, 147, 184, 185, 205, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 262, 303, 324], "forward": [10, 23, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 53, 54, 55, 56, 57, 70, 71, 72, 73, 74, 75, 82, 83, 84, 85, 87, 88, 89, 90, 91, 98, 101, 102, 103, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242], "found": 10, "foundat": [43, 76, 103, 229, 231, 257], "four": [26, 27, 28, 29, 310], "frac": [12, 13, 14, 16, 17, 18, 19, 21, 22, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 132, 134, 145, 146, 147, 148, 149, 150, 152, 153, 154, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 220, 221, 222, 223, 224, 225, 233, 234, 235, 236, 237, 238, 239, 240, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 322], "frame": 129, "framework": [4, 10, 100, 204, 207, 209, 210, 211, 212, 213, 214, 230, 231, 330], "frequent": [204, 207], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 17, 19, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 43, 53, 54, 55, 56, 57, 58, 70, 71, 72, 73, 74, 75, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 95, 101, 102, 103, 104, 105, 106, 107, 108, 109, 124, 132, 141, 143, 156, 158, 159, 160, 164, 165, 167, 169, 170, 171, 172, 173, 174, 181, 188, 189, 190, 192, 193, 194, 195, 196, 199, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 220, 221, 222, 229, 230, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 245, 246, 247, 248, 249, 251, 252, 253, 255, 256, 257, 262, 263, 264, 268, 270, 289, 290, 291, 298, 303, 305, 307, 309, 312, 314, 315, 316, 318, 321, 322, 323, 324, 325, 326, 327, 330], "full": [22, 54, 56, 57], "full_matric": 22, "fulli": [4, 11, 23, 25, 26, 27, 28, 29, 30, 43, 47, 48, 49, 50, 58, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 86, 87, 88, 89, 91, 96, 98, 100, 134, 164, 165, 201, 256], "func": 247, "function": [3, 4, 5, 6, 7, 8, 10, 11, 103, 105, 106, 107, 108, 109, 158, 159, 160, 164, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 229, 231, 248, 256, 319, 330], "fundament": [10, 134, 201, 320], "further": [10, 31, 32, 33, 34, 35, 36, 37, 38, 53, 54, 55, 56, 57, 256, 290, 298, 303], "fuse": 86, "fusion": [87, 88, 89], "futur": 200, "g": [0, 13, 14, 17, 20, 22, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 49, 50, 91, 100, 164, 165, 192, 230, 233, 240, 305, 324], "g_": 234, "g_t": 240, "gain": [173, 174], "gamma": [209, 210, 211, 212, 213, 214, 215], "gap": [58, 69, 86, 164], "gaussian": [112, 176], "gelu": [113, 131, 187, 198], "gelunetwork": 176, "gener": [19, 101, 157, 192, 193, 194, 195, 196, 213, 236, 238, 239, 246, 249, 251, 252, 253, 254, 255, 256, 261, 269, 271, 272, 309, 323, 324, 325, 327, 330], "geoffrei": [5, 6], "get": [5, 6, 7, 8], "github": 7, "give": [10, 232, 240], "given": [13, 14, 17, 19, 20, 22, 124, 203, 204, 207, 230, 244, 249, 275, 277, 319, 324, 325, 327, 330], "global": [0, 30, 58, 69, 76, 86, 164, 244, 246, 254, 256], "go": [40, 100], "goal": [203, 204, 207], "googlenet": [40, 100], "gpu": 100, "grad": [102, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 124, 132, 134, 156, 161, 162, 163, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 220, 221, 222, 223, 224, 225, 230, 231, 249, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 272, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 310, 311, 312, 313, 314, 315, 316, 317, 318, 321, 322, 323, 325, 327, 328], "grad_output": 17, "gradient": [10, 11, 42, 43, 100, 102, 104, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 246, 249, 251, 252, 253, 255, 269, 270, 271, 272, 273, 274, 275, 276, 277, 304, 320], "grain": 164, "graph": [10, 174, 257, 269, 270, 273, 274, 275, 276, 277, 320], "grayscal": [7, 8, 47, 48, 49, 50, 324, 330], "greater": 283, "green": 324, "grid": 309, "groundbreak": 100, "group": [69, 70, 71, 72, 73, 74, 75, 82, 83, 84, 85, 86, 90, 100, 106, 120, 121, 122, 158, 159, 160, 165, 188, 189, 190, 230, 231], "group1": 106, "group2": 106, "groupedconvblock": 69, "growth_rat": [25, 26, 27, 28, 29], "guarante": 254, "h": [58, 70, 71, 72, 73, 74, 75, 87, 88, 89, 100, 121, 122, 124, 128, 129, 146, 147, 149, 150, 153, 154, 156, 157, 159, 160, 164, 210, 211, 213, 214, 218, 219, 222, 225, 321, 323], "h_": [121, 122, 146, 147, 149, 150, 153, 154, 156, 189, 190, 218, 219, 221, 222, 224, 225], "h_out": [121, 122, 149, 150, 153, 154], "h_stack": 307, "ha": [0, 14, 101, 109, 120, 121, 122, 158, 159, 160, 181, 185, 203, 204, 209, 210, 211, 212, 213, 214, 215, 227, 230, 231, 262, 301, 305, 307, 315, 318, 324], "half": 296, "han": 7, "hand": 21, "handl": [0, 3, 10, 19, 103, 105, 106, 107, 108, 109, 204, 207, 229, 231, 246], "handwritten": [7, 8, 50], "hard": [56, 57, 178], "hard_sigmoid": 177, "hardsigmoid": [178, 187, 198], "hardswish": [187, 198], "hardwar": 10, "hat": [235, 236, 237, 238, 239], "have": [0, 1, 13, 14, 16, 19, 20, 22, 104, 106, 108, 109, 121, 122, 174, 229, 273, 274, 275, 276, 277, 289, 291, 305, 307, 309, 314, 315, 318, 322, 328], "he": 100, "head": [53, 96], "height": [96, 121, 122, 124, 128, 129, 146, 147, 149, 150, 153, 154, 156, 157, 165, 189, 190, 210, 211, 213, 214, 218, 219, 221, 222, 224, 225, 227, 321, 323, 328], "help": [10, 41, 114, 116, 129, 175, 179, 181, 182, 186, 209, 210, 211, 220, 221, 223, 224, 232, 235, 236, 238, 244, 245, 246, 248], "henc": 313, "here": [3, 12, 103, 132, 229, 231, 245, 246, 248, 256, 319, 320, 330], "hidden": [23, 98, 106], "hidden_s": 106, "hierarch": [106, 109, 229], "hierarchi": 189, "hierarchicalnetwork": 106, "high": [10, 53, 66, 81, 90, 252, 255], "higher": [51, 69, 204, 207, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 261, 262, 266, 287], "highest": 252, "highli": [55, 100], "highlight": [164, 223, 224, 225], "hint": 248, "hinton": [5, 6], "histor": 234, "histori": [249, 251, 252, 253, 255, 269, 270, 271, 272, 273, 274, 275, 276, 277], "hold": [105, 106, 107, 108], "horizont": [307, 315, 325, 330], "hot": [204, 207], "how": [2, 3, 10, 82, 83, 84, 85, 90, 106, 109, 229, 248, 330], "howard": 100, "howev": [102, 174], "hstack": 308, "html": [5, 6], "http": [5, 6, 7, 8], "hu": [100, 164], "huang": 100, "huber": [137, 205], "huber_loss": [131, 138], "huberloss": [198, 208], "huberregressionmodel": 205, "hue": 330, "hyperbol": [119, 186, 285, 295, 300], "hyperparamet": [58, 69, 97, 230, 232], "i": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 291, 293, 294, 295, 296, 298, 299, 300, 301, 302, 303, 304, 305, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330], "iccv": 100, "idea": 100, "ideal": [10, 51, 109], "ident": [16, 17, 100, 157, 198, 202, 254, 256, 273, 313], "identifi": 107, "idx": [2, 3], "ieee": [100, 164], "ii": 301, "ij": [118, 156, 184, 260, 261, 262, 266, 309], "ik": [260, 261, 262], "ill": [13, 19], "ilsvrc": 100, "imag": [3, 4, 5, 6, 7, 8, 23, 24, 26, 27, 28, 29, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 58, 59, 60, 61, 62, 63, 64, 65, 66, 77, 78, 79, 80, 81, 82, 83, 84, 85, 90, 99, 100, 121, 143, 157, 159, 164, 189, 213, 309, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330], "image_dir": 3, "image_path": 3, "imagedataset": 3, "imageio": 3, "imagenet": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 51, 52, 53, 54, 55, 56, 57, 67, 68, 82, 83, 84, 85, 90, 100], "imbal": [204, 207], "impact": [100, 238], "implement": [2, 3, 10, 19, 23, 25, 30, 39, 40, 41, 42, 44, 45, 47, 51, 52, 53, 58, 67, 68, 70, 71, 72, 73, 74, 75, 76, 96, 98, 100, 103, 124, 161, 162, 163, 165, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 307, 318, 324], "impli": [188, 189], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 67, 68, 70, 71, 72, 73, 74, 75, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 126, 129, 132, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330], "improp": [106, 109, 256], "improv": [40, 41, 42, 43, 45, 58, 69, 82, 83, 84, 85, 86, 98, 100, 141, 157, 164, 176, 182, 186, 232, 233, 234, 235, 236, 237, 238, 239, 240, 248, 323, 326, 330], "imread": 3, "in1_featur": [132, 199], "in2_featur": [132, 199], "in_channel": [58, 106, 109, 158, 159, 160, 161, 162, 163, 164, 165, 188, 189, 190, 210, 211, 220, 221, 222, 223, 224, 225, 229], "in_featur": [105, 106, 109, 134, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 189, 190, 192, 193, 194, 199, 201, 203, 204, 205, 206, 207, 209, 212, 215, 220, 221, 222, 223, 224, 225], "incept": [40, 41, 42, 43, 44, 45, 46, 100], "inception_resnet_v1": 100, "inception_resnet_v2": 100, "inception_v1": 100, "inception_v3": 100, "inception_v4": 100, "inceptionresnet": [44, 45], "includ": [3, 4, 7, 10, 11, 17, 18, 23, 39, 40, 41, 44, 47, 58, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 86, 91, 97, 98, 101, 103, 104, 106, 108, 109, 156, 158, 159, 160, 161, 162, 163, 227, 229, 230, 231, 238, 248, 256, 262, 310], "inclus": [104, 107, 252, 255], "incom": [134, 201], "incomplet": 2, "incompletedataset": 2, "incorpor": [22, 55, 69, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 90, 100, 176], "increas": [51, 69, 70, 71, 72, 73, 74, 75, 86, 120, 121, 122, 124, 157, 234, 241, 245, 307, 318, 324, 325, 327, 330], "independ": [106, 120, 121, 122, 192, 193, 194, 195, 196, 215, 262, 272, 322, 324, 326, 328], "index": [0, 2, 5, 6, 7, 8, 245, 269, 270, 273, 309, 313], "indexerror": 0, "indic": [0, 1, 91, 101, 104, 106, 108, 109, 136, 140, 204, 207, 220, 244, 257, 321, 323], "individu": [3, 106, 109, 205, 215, 231, 234, 241], "induc": [116, 182], "inf": 299, "infer": [82, 83, 84, 85, 90, 106, 109, 246], "infin": [20, 22, 237], "inform": [10, 100, 101, 102, 164, 231, 233, 246], "infti": [18, 239], "inherit": [1, 232, 240, 242], "init": 168, "initi": [1, 25, 43, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 92, 93, 94, 95, 97, 102, 104, 105, 106, 107, 108, 109, 165, 167, 169, 170, 171, 172, 173, 174, 188, 189, 190, 199, 201, 203, 204, 205, 206, 207, 209, 210, 211, 215, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 251, 254, 255, 256, 269, 273, 274, 275, 276, 277, 304], "initial_accumulator_valu": 234, "inner": [10, 260, 278], "innov": 53, "input": [10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 69, 82, 83, 84, 85, 86, 90, 96, 98, 100, 101, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 246, 248, 256, 257, 258, 260, 261, 262, 266, 270, 272, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330], "input1": 199, "input2": 199, "input_": [23, 98, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 217, 218, 219], "input_1": 132, "input_2": 132, "input_data": [175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 215, 220, 221, 222, 223, 224, 225], "input_s": [106, 108, 184, 204, 207], "input_shap": 101, "input_tensor": [10, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 70, 71, 72, 73, 74, 75, 82, 83, 84, 85, 87, 88, 89, 90, 91, 96, 102, 105, 106, 107, 108, 109, 118, 161, 162, 163, 164, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 220, 221, 222, 223, 224, 225, 227, 229, 321, 322, 323, 324, 325, 326, 327, 328], "insid": [3, 244, 246], "insight": [10, 100], "inspect": [103, 104, 109, 230], "instabl": [19, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242], "instal": 10, "instanc": [0, 1, 10, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 48, 49, 50, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 97, 99, 101, 103, 104, 105, 107, 108, 109, 143, 181, 212, 213, 214, 215, 230, 247, 304, 312, 316, 330], "instance_norm": [131, 142, 212, 213, 214], "instancenorm1d": [198, 216], "instancenorm1dmodel": 212, "instancenorm2d": [198, 216], "instancenorm3d": [198, 216], "instanti": [2, 30, 82, 83, 84, 85, 90, 247], "instead": [10, 101, 105, 106, 107, 108, 109, 169, 170, 173, 174, 235, 236, 237, 246, 248, 271, 272], "int": [0, 1, 2, 5, 6, 7, 8, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 104, 118, 120, 121, 122, 124, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 171, 172, 173, 174, 184, 188, 189, 190, 199, 201, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 235, 236, 237, 238, 239, 241, 247, 249, 251, 252, 253, 254, 255, 257, 269, 270, 271, 273, 274, 276, 283, 289, 290, 291, 298, 302, 303, 304, 305, 310, 312, 313, 314, 315, 316, 317, 321, 323, 328], "integ": [1, 3, 17, 76, 91, 120, 121, 122, 146, 147, 188, 189, 190, 215, 218, 219, 221, 222, 223, 224, 225, 248, 252, 253, 255, 256, 271, 274, 276, 290, 298, 302, 303, 310, 312, 313, 316], "integr": [1, 2, 4, 5, 6, 7, 8, 11, 100, 104, 106, 108, 109, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 190, 199, 201, 220, 221, 222, 223, 224, 225], "intellig": [100, 164], "intend": [102, 107, 108], "intens": [19, 25, 59, 322, 324], "intent": 248, "interact": [132, 199, 229, 256], "interdepend": 100, "interfac": [2, 103, 106, 231], "interfer": [244, 246], "intermedi": [19, 164], "intern": [59, 60, 61, 62, 63, 64, 65, 66, 77, 78, 79, 80, 81, 100, 105, 106, 107, 108, 109, 204, 207, 229, 321, 322, 323, 324, 325, 326, 327, 328], "interpol": [131, 155, 227, 328], "interpret": [100, 118, 184, 248, 305], "interv": [251, 255, 269], "introduc": [40, 41, 51, 52, 53, 69, 100, 115, 164, 176, 180, 181, 183, 186, 192, 193, 194, 195, 196, 323, 326, 330], "introspect": 109, "intuit": [10, 105, 107, 229, 330], "inv": 15, "inv_a": 16, "invari": [221, 224], "invers": [10, 13, 16, 17, 19, 234, 280, 281, 282], "invert": [13, 16, 17, 21, 52, 53, 55, 100], "invok": 247, "involv": [12, 13, 14, 16, 19, 20, 22, 86, 111, 112, 114, 115, 116, 117, 119, 132, 134, 156, 188, 189, 190, 199, 201, 248, 249, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 277, 287, 288, 289, 291, 294, 296, 309, 310, 312, 316], "is_leaf": 257, "issu": [3, 182, 209, 210, 211, 235, 236], "item": [7, 206], "iter": [0, 1, 2, 3, 102, 103, 106, 108, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 269], "ith": [118, 184], "its": [4, 17, 19, 23, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 77, 78, 79, 80, 81, 87, 88, 89, 98, 100, 101, 102, 105, 106, 107, 108, 120, 121, 122, 124, 157, 165, 174, 176, 180, 185, 223, 224, 225, 229, 230, 233, 241, 244, 245, 246, 247, 269, 271, 272, 276, 289, 291, 304, 313, 322, 325, 327, 330], "itself": [12, 17, 105, 106, 107, 108], "j": [8, 118, 164, 184, 209, 210, 211, 212, 213, 214, 220, 221, 223, 224, 309, 315, 321, 323], "jie": 100, "jk": 261, "join": [3, 305], "json": 247, "k": [17, 100, 120, 188, 204, 210, 211, 213, 214, 220, 223, 224, 260, 261, 270, 273, 305], "k_d": [122, 190, 222, 225], "k_h": [121, 122, 189, 190, 221, 222, 225], "k_w": [121, 122, 189, 190, 221, 222, 225], "kaim": [100, 169, 170, 173, 174], "kaiming_norm": 168, "kaiming_uniform": 168, "kalenichenko": 100, "karen": 100, "kashif": 7, "keep": [103, 180, 233, 246, 313], "keep_grad": [104, 249, 251, 252, 253, 255, 257, 269, 270, 271, 272, 273, 274, 275, 276, 277, 304, 320], "keep_var": 103, "keepdim": [289, 290, 291, 298, 303], "kei": [100, 103, 105, 107, 109, 230], "kept": [290, 298, 303], "kernel": [47, 48, 49, 50, 56, 57, 86, 87, 88, 89, 90, 98, 100, 120, 121, 122, 124, 145, 146, 147, 148, 149, 150, 152, 153, 154, 158, 159, 160, 161, 162, 163, 165, 188, 189, 190, 217, 218, 219, 221, 222, 225], "kernel_s": [53, 56, 57, 86, 87, 88, 89, 106, 109, 148, 149, 150, 152, 153, 154, 158, 159, 160, 161, 162, 163, 165, 188, 189, 190, 210, 211, 220, 221, 222, 223, 224, 225], "keyerror": 103, "keyword": [24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 95, 99, 103, 200], "kj": [260, 262], "known": 100, "kriz": [5, 6], "krizhevski": [5, 6, 100], "kroneck": [118, 184], "kwarg": [24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 48, 49, 50, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 95, 97, 99, 103, 200, 247], "l": [12, 19, 100, 120, 127, 145, 148, 152, 158, 164, 192, 193, 194, 195, 196, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217], "l2": [232, 233, 234, 235, 236, 237, 238, 239, 240, 242], "l_": [120, 145, 148, 152, 188, 217, 220, 223], "l_out": [120, 148, 152], "label": [4, 5, 6, 7, 8, 41, 203, 204, 207], "lambd": 232, "lambda": [14, 116, 182, 232, 236], "lambda_1": 14, "lambda_2": 14, "lambda_i": 14, "lambda_n": 14, "languag": [4, 188, 199, 220, 223], "larg": [0, 3, 19, 25, 53, 56, 59, 60, 61, 64, 77, 78, 100, 161, 162, 163, 181, 205, 229, 232, 235, 236, 237, 240, 241, 242, 246], "larger": [30, 58, 86, 105, 107, 120, 121, 122, 124, 232, 263, 310, 321, 323, 328], "largest": 289, "last": [1, 118, 144, 184, 261, 262, 305, 325, 327], "last_channel": 53, "latest": 4, "layer": [10, 23, 25, 26, 27, 28, 29, 30, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 91, 92, 93, 94, 95, 98, 100, 101, 103, 105, 106, 109, 118, 134, 141, 143, 144, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 173, 174, 184, 188, 189, 190, 199, 200, 201, 207, 215, 220, 221, 222, 223, 224, 225, 229, 256, 310, 320], "layer1": 247, "layer2": 247, "layer_group": 106, "layer_norm": [131, 142, 215], "layer_sequ": [106, 109], "layernorm": [198, 216], "layernormmodel": 215, "le": 100, "lead": [106, 109, 176, 212, 213, 214, 215, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 256], "leaf": 257, "leaki": [114, 179], "leaky_relu": [113, 131, 179], "leakyrelu": [187, 198], "learn": [1, 3, 4, 7, 8, 10, 17, 19, 69, 70, 71, 72, 73, 74, 75, 98, 99, 100, 105, 106, 107, 108, 115, 118, 164, 175, 179, 180, 184, 188, 189, 190, 193, 194, 195, 196, 199, 201, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 254, 319, 320, 330], "learnabl": [102, 103, 104, 141, 143, 144, 158, 159, 160, 188, 189, 190, 199, 201, 209, 210, 211, 212, 213, 214, 215, 229], "least": [19, 20, 22, 227, 301], "lecun": [8, 100], "left": [17, 18, 19, 22, 112, 118, 176, 184, 203, 204, 205, 207, 209, 210, 211, 212, 213, 214, 215, 223, 224, 225, 321, 323], "leftarrow": 238, "len": [0, 1, 2, 3, 309], "lenet": [46, 48, 49, 50, 100], "lenet_1": 100, "lenet_4": 100, "lenet_5": 100, "length": [106, 120, 127, 145, 148, 152, 188, 200, 209, 212, 217, 220, 223, 310, 322], "leq": [177, 178, 205, 239, 267, 283], "lerp": 156, "less": [0, 111, 114, 137, 175, 179, 204, 205, 207, 283], "let": 14, "level": [10, 43], "leverag": [21, 42, 45, 70, 71, 72, 73, 74, 75, 96, 100, 165, 229], "li": 100, "librari": [3, 10, 11, 103, 229, 230, 231, 247, 248, 256, 257, 330], "lie": 249, "lightweight": [10, 31, 32, 33, 34, 35, 36, 37, 38, 52, 56, 57, 62, 79, 165, 178, 181], "like": [10, 43, 70, 71, 72, 73, 74, 75, 87, 88, 89, 100, 102, 103, 106, 109, 120, 173, 174, 182, 192, 209, 210, 211, 212, 213, 214, 244, 245, 248, 304, 320, 330], "likelihood": [140, 204, 207], "limit": [56, 57, 101, 181, 233, 283], "linalg": [10, 15], "linalgerror": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22], "linear": [10, 11, 12, 19, 20, 21, 52, 55, 76, 100, 101, 105, 106, 107, 109, 111, 112, 114, 115, 116, 169, 170, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 189, 190, 192, 193, 194, 199, 200, 203, 204, 205, 206, 207, 209, 212, 215, 220, 221, 222, 223, 224, 225, 247, 273], "linearli": 205, "list": [0, 1, 47, 53, 58, 69, 76, 86, 91, 101, 102, 104, 105, 106, 107, 108, 144, 165, 200, 215, 230, 248, 249, 251, 252, 253, 255, 257, 270, 271, 272, 274, 275, 276, 277, 302, 313, 314, 317, 319], "listdir": 3, "liter": [58, 135, 136, 137, 139, 140, 156, 158, 159, 160, 161, 162, 163, 165, 169, 170, 188, 189, 190, 203, 204, 205, 206, 207, 227, 309], "liu": 100, "ln": 267, "load": [3, 4, 5, 6, 7, 8, 102, 103, 104, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 247], "load_state_dict": [103, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242], "loader": [1, 2, 3], "local": [100, 124, 188], "locat": [100, 156], "log": [140, 203, 204, 207, 278], "log_softmax": 207, "logarithm": [267, 287, 288], "logic": [3, 217, 218, 219, 229, 230], "logit": [23, 98, 118, 184, 204], "logsoftmax": [204, 207], "long": [238, 302], "loop": [1, 106, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242], "loss": [10, 19, 105, 106, 107, 108, 109, 118, 135, 136, 137, 139, 140, 175, 176, 179, 180, 182, 183, 184, 186, 192, 193, 194, 195, 196, 200, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242], "low": [10, 43, 52, 56, 57, 252, 255], "lower": [12, 51, 172, 232, 240, 241, 242, 255], "lowest": 252, "lr": [230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242], "lu": 16, "lucid": [0, 1, 2, 5, 6, 7, 8, 15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 250, 278, 308, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328], "m": [91, 100, 105, 106, 109, 221, 222, 224, 225, 235, 236, 237, 238, 239, 273], "m_": [235, 236, 237, 238, 239], "m_t": [238, 239], "maaten": 100, "machin": [3, 7, 8, 10, 19, 100, 164, 235, 245, 254], "magnitud": [240, 241, 330], "mai": [3, 10, 14, 16, 19, 106, 108, 157, 205, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 246, 256, 324, 330], "main": [10, 20, 43, 106, 270, 273], "maintain": [19, 51, 69, 70, 71, 72, 73, 74, 75, 82, 83, 84, 85, 90, 100, 102, 103, 105, 106, 107, 109, 116, 169, 170, 173, 174, 175, 176, 182, 192, 193, 194, 195, 196, 209, 210, 211, 212, 213, 214, 235, 240, 321, 324, 328], "make": [1, 3, 10, 39, 43, 47, 52, 55, 56, 57, 58, 100, 106, 109, 183, 204, 205, 215, 221, 224, 229, 234, 235, 236, 237, 245, 247, 256, 257, 262, 309, 319, 330], "manag": [10, 103, 105, 106, 107, 108, 109, 229, 231, 244, 246, 247, 256], "manhattan": 18, "mani": 101, "manipul": [10, 105, 107, 330], "manner": [106, 109], "manual": [135, 136, 140, 203, 204, 207, 246], "map": [58, 69, 79, 86, 100, 103, 117, 119, 164, 183, 186], "mask": [102, 192, 193, 194, 195, 196], "match": [21, 103, 106, 109, 135, 137, 139, 144, 158, 159, 160, 230, 287, 312, 313, 316, 317, 322, 330], "math": [284, 294, 299], "mathbf": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 96, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 132, 134, 156, 161, 162, 163, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 220, 221, 222, 223, 224, 225, 260, 261, 262, 266, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 310, 311, 312, 313, 314, 315, 316, 317, 318, 321, 322, 323, 324, 325, 326, 327, 328], "mathcal": [169, 171, 173, 192, 193, 194, 195, 196, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215], "mathemat": [16, 158, 159, 160, 323, 325, 326, 327], "mathrm": 19, "matmul": 278, "matric": [11, 13, 14, 16, 19, 21, 22, 260, 261, 262, 273, 309], "matrix": [10, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22, 124, 132, 200, 201, 229, 260, 309], "matrix_pow": 15, "matthew": 100, "max": [18, 76, 91, 115, 152, 153, 154, 177, 178, 180, 181, 223, 224, 225, 237, 263, 278, 283], "max_pool": [223, 224, 225], "max_pool1d": [131, 151], "max_pool2d": [131, 151], "max_pool3d": [131, 151], "max_valu": 283, "maxim": 3, "maximum": [18, 180, 181, 223, 224, 225, 235, 237, 278, 283, 289, 326], "maxpool": [23, 98], "maxpool1d": [198, 226], "maxpool1dmodel": 223, "maxpool2d": [106, 109, 189, 198, 226], "maxpool2dmodel": 224, "maxpool3d": [190, 198, 226], "maxpool3dmodel": 225, "mean": [5, 6, 7, 8, 20, 101, 102, 116, 120, 121, 122, 125, 135, 136, 137, 139, 140, 141, 143, 158, 159, 160, 171, 175, 176, 177, 179, 180, 182, 183, 186, 190, 192, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 235, 236, 237, 238, 239, 240, 244, 253, 278, 283, 287, 288, 289, 291, 294, 296, 298, 301, 302, 303, 319, 322, 330], "meaning": [109, 248], "measur": [203, 204, 206, 207], "mechan": [10, 76, 86, 90, 108, 132], "membership": 203, "memori": [2, 3, 25, 246, 271, 272], "meshgrid": 308, "method": [3, 10, 11, 16, 76, 96, 97, 105, 106, 107, 108, 109, 135, 136, 137, 139, 140, 169, 170, 173, 174, 203, 204, 205, 206, 207, 227, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 256], "mid_channel": [56, 57], "middl": 245, "might": 229, "min": [177, 178, 181, 264, 278, 283], "min_valu": 283, "mind": [0, 3, 10, 106, 109, 246], "mingx": 100, "mini": 1, "minim": [4, 10, 53, 109, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 231], "minimalist": 10, "minimum": [278, 283, 291], "minu": 183, "mirror": [275, 277], "mismatch": [103, 229, 230], "miss": [103, 229], "mitig": [114, 175, 179, 182, 209, 210, 211], "mlp": 165, "mnist": [4, 7, 9, 48, 49], "mnist_train": [4, 8], "mobil": [51, 52, 53, 55, 56, 57, 100], "mobilenet": [46, 52, 53, 55, 56, 57, 100, 181], "mobilenet_v2": 100, "mobilenet_v3": [56, 57], "mobilenet_v3_larg": 100, "mobilenet_v3_smal": 100, "mobilenetv2": [52, 100], "mobilenetv3": [53, 56, 57, 100], "mode": [10, 129, 141, 143, 156, 169, 170, 192, 193, 194, 195, 196, 227, 310], "model": [1, 3, 4, 10, 17, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 118, 157, 158, 159, 160, 165, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 215, 220, 221, 222, 223, 224, 225, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 246, 247, 256, 319, 320, 330], "model_b0": 30, "model_b7": 30, "moder": 80, "modern": 100, "modif": [97, 109, 246], "modifi": [24, 58, 96, 99, 105, 106, 107, 108, 167, 169, 170, 171, 172, 173, 174, 192, 244, 246, 254, 307, 318], "modul": [5, 6, 7, 8, 10, 23, 24, 30, 39, 42, 43, 44, 45, 47, 51, 52, 53, 58, 69, 76, 86, 91, 96, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 158, 159, 160, 161, 162, 163, 164, 165, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 247, 248, 256, 320, 330], "modular": [3, 10, 100, 103, 106, 109, 229, 330], "moduledict": [106, 107, 109, 110], "modulelist": [108, 109, 110], "moment": [235, 236, 237, 238, 239], "momentum": [141, 143, 158, 159, 160, 209, 210, 211, 212, 213, 214, 232, 238, 240, 242], "momentum_decai": 238, "monoton": 185, "moor": 19, "more": [3, 4, 7, 10, 14, 58, 65, 105, 106, 109, 161, 162, 163, 175, 193, 194, 195, 196, 229, 230, 231, 232, 233, 236, 237, 240, 241, 242, 253, 262, 301, 315, 330], "most": [11, 100, 224, 320, 321, 330], "move": [232, 240], "mse": [137, 139, 205, 206], "mse_loss": [131, 138], "mseloss": [198, 208], "mu": [171, 209, 210, 211, 212, 213, 214, 215, 303], "mu_c": 322, "mu_i": [212, 213, 214], "much": 330, "mul": 278, "multi": [3, 4, 44, 86, 87, 88, 89, 100, 118, 136, 140, 165, 184, 204, 207, 290, 298, 303], "multidimension": [251, 255, 271], "multipl": [1, 3, 10, 11, 17, 21, 23, 58, 76, 90, 107, 108, 109, 124, 156, 157, 164, 165, 192, 193, 194, 195, 196, 204, 207, 229, 245, 249, 251, 252, 253, 255, 260, 265, 271, 272, 319, 324, 330], "multipli": [17, 54, 108, 134, 201, 227, 241, 265, 266], "must": [0, 1, 3, 12, 13, 14, 16, 17, 20, 21, 22, 101, 103, 105, 106, 107, 108, 109, 144, 192, 193, 194, 195, 196, 207, 227, 230, 246, 249, 301, 305, 307, 310, 312, 313, 315, 316, 318, 321, 322, 323, 324, 325, 327], "my_simple_model": 247, "mymodel": [103, 104, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242], "myoptim": [230, 231], "n": [17, 18, 58, 70, 71, 72, 73, 74, 75, 87, 88, 89, 100, 105, 106, 109, 120, 121, 122, 124, 127, 128, 129, 132, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 164, 169, 171, 173, 188, 189, 190, 195, 196, 199, 201, 203, 204, 206, 207, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 225, 273, 290, 301, 303], "n1": 18, "nabla_": [233, 234, 235, 236, 237, 238, 239, 241], "nabla_t": 239, "nadam": 243, "nair": [5, 6], "name": [100, 101, 103, 105, 107, 109, 247, 248], "nan": [20, 22], "natur": [19, 100, 188, 199, 220, 223, 267, 287, 288], "ndarrai": [102, 104, 248, 249, 257, 270, 272, 275, 277, 304], "ndim": [20, 22, 104, 257], "ne": 17, "nearest": [156, 227], "necessari": [4, 5, 6, 7, 8, 19, 246, 307, 318], "need": [2, 4, 106, 107, 108, 118, 199, 229, 246, 271, 272, 319, 320, 330], "neg": [17, 19, 22, 111, 140, 157, 175, 179, 180, 182, 204, 207, 241, 305], "negative_slop": [114, 179], "neglect": 108, "neighbor": 156, "neq": 18, "nest": [101, 106, 109, 229], "nestedmodel": 101, "nesterov": 238, "net": [98, 100], "network": [3, 4, 10, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, 37, 38, 42, 43, 50, 51, 54, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 76, 77, 78, 79, 80, 81, 86, 91, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 115, 116, 117, 118, 119, 120, 121, 122, 132, 134, 141, 157, 164, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 215, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 240, 242, 255, 256, 257, 269, 274, 276, 289, 291, 310, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330], "neural": [3, 4, 10, 23, 24, 30, 31, 32, 33, 34, 35, 36, 37, 38, 43, 50, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 115, 116, 117, 118, 119, 120, 121, 122, 132, 134, 141, 157, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 215, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 240, 242, 255, 256, 257, 269, 274, 276, 289, 291, 310, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330], "neuralnetwork": [177, 178, 180, 185], "neuron": 179, "never": 324, "new": [103, 104, 111, 112, 114, 115, 116, 117, 119, 132, 134, 156, 165, 169, 170, 171, 172, 173, 174, 230, 247, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 272, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 304, 305, 307, 310, 312, 313, 315, 316, 317, 318], "next": [109, 319], "nll": 140, "nll_loss": [131, 138], "nllloss": [198, 208], "nn": [5, 6, 7, 8, 10, 23, 25, 30, 39, 43, 47, 51, 52, 53, 58, 69, 76, 82, 83, 84, 85, 86, 90, 91, 98, 101, 110, 113, 123, 130, 133, 138, 142, 151, 155, 166, 168, 187, 191, 197, 198, 202, 208, 216, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 247, 320, 330], "no_grad": 244, "node": 257, "nois": [22, 256], "non": [14, 17, 19, 22, 108, 112, 114, 115, 169, 170, 175, 176, 177, 179, 180, 181, 182, 183, 185, 186, 192, 193, 194, 195, 196, 235, 236, 246, 267, 283], "none": [0, 1, 2, 5, 6, 7, 8, 30, 39, 43, 47, 51, 52, 53, 58, 96, 101, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 132, 134, 135, 136, 137, 139, 140, 141, 143, 144, 157, 158, 159, 160, 161, 162, 163, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 220, 221, 222, 223, 224, 225, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 245, 249, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 327, 328], "norm": [11, 15, 237], "normal": [5, 6, 7, 8, 76, 112, 116, 118, 119, 141, 143, 144, 158, 159, 160, 168, 169, 173, 176, 182, 184, 192, 209, 210, 211, 212, 213, 214, 215, 240, 253, 256, 319, 329, 330], "normalized_shap": [144, 215], "note": [120, 192], "noth": [125, 126, 127, 128], "notimplementederror": [2, 103, 230], "notin": 283, "nov": 100, "novel": [7, 100], "np": [58, 70, 71, 72, 73, 74, 75, 87, 88, 89, 102, 104, 164, 204, 207, 248, 257, 262, 269, 270, 273, 274, 276, 277, 288, 304, 320], "npy": [5, 6, 7, 8], "num_class": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 184, 204, 207], "num_featur": [109, 158, 159, 160, 209, 210, 211, 212, 213, 214], "num_init_featur": [25, 26, 27, 28, 29], "num_paramet": 108, "number": [0, 1, 2, 5, 6, 7, 8, 13, 14, 16, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 106, 108, 109, 120, 121, 122, 124, 127, 128, 129, 132, 134, 136, 140, 141, 143, 145, 146, 147, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 173, 174, 183, 188, 189, 190, 199, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 221, 222, 223, 224, 225, 232, 251, 254, 255, 257, 267, 269, 271, 273, 289, 290, 291, 302, 303, 305, 307, 310, 312, 313, 314, 316, 318, 322, 324, 325, 327, 330], "numer": [16, 19, 135, 136, 141, 143, 144, 158, 159, 160, 181, 203, 204, 209, 210, 211, 212, 213, 214, 215, 233, 234, 235, 236, 237, 238, 239, 240, 248, 259, 269, 274, 276], "numpi": [10, 102, 104, 204, 207, 248, 257, 262, 270, 273, 288, 301, 304, 310, 312, 316, 320, 330], "o": [3, 222, 225, 274, 275], "object": [1, 3, 11, 86, 100, 103, 107, 108, 206, 229, 246, 258, 259, 263, 264, 265, 268, 304], "observ": 235, "obtain": 1, "occur": [157, 246, 247, 305], "occurr": 17, "odot": [192, 193, 194, 195, 196], "off": 244, "offer": [4, 10, 229, 231, 256, 330], "offset": 273, "often": [17, 67, 68, 120, 121, 122, 124, 204, 207, 269, 276, 320, 324, 328, 330], "older": 238, "onc": 246, "one": [0, 82, 83, 84, 85, 90, 108, 109, 118, 120, 134, 148, 152, 158, 159, 160, 182, 183, 184, 188, 194, 204, 207, 209, 212, 220, 223, 227, 230, 245, 248, 253, 268, 275, 289, 291, 306, 311, 315, 320], "ones": [132, 134, 188, 189, 190, 201, 209, 210, 211, 212, 213, 214, 215, 229, 273, 275, 278], "ones_lik": 278, "onli": [10, 101, 156, 177, 180, 192, 193, 194, 195, 196, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 223, 224, 225, 241, 244, 269, 283, 289, 291, 301, 310, 311, 313, 314], "onto": [20, 22], "openml": [5, 6, 7, 8], "oper": [3, 10, 11, 16, 19, 76, 77, 78, 79, 80, 81, 102, 103, 106, 111, 112, 114, 115, 116, 117, 119, 120, 121, 122, 124, 129, 132, 134, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 244, 245, 246, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 271, 272, 274, 276, 287, 288, 289, 290, 291, 294, 296, 298, 301, 303, 305, 307, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 322, 328], "operatornam": [17, 19], "opposit": 232, "optim": [3, 10, 11, 17, 19, 20, 22, 25, 39, 40, 41, 42, 43, 44, 45, 52, 53, 56, 57, 100, 102, 104, 107, 108, 124, 188, 189, 190, 229, 246], "optimizer_st": [230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242], "option": [1, 5, 6, 7, 8, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 111, 114, 118, 121, 122, 125, 126, 127, 128, 129, 132, 134, 135, 136, 137, 139, 140, 141, 143, 144, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 171, 172, 173, 174, 175, 179, 184, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 220, 221, 222, 223, 224, 225, 227, 230, 232, 240, 242, 249, 251, 252, 253, 255, 257, 269, 270, 271, 272, 273, 274, 275, 276, 277, 289, 290, 291, 298, 302, 303, 304, 305, 309, 312, 314, 315, 320, 324, 325, 327], "ord": 18, "order": [1, 3, 18, 22, 105, 106, 107, 108, 109, 302, 319], "ordered_dict": 109, "ordereddict": [103, 105, 106, 109], "organ": [105, 106, 107, 109, 247], "orient": 330, "origin": [41, 50, 125, 157, 164, 186, 310, 311, 312, 313, 316, 317, 328], "orthogon": [19, 20, 22], "orthonorm": 20, "oscil": [232, 240, 242], "other": [2, 3, 10, 16, 41, 45, 47, 50, 102, 103, 106, 109, 169, 170, 192, 229, 230, 244, 246, 256, 257, 269, 271, 274, 276, 301, 309, 330], "otherwis": [59, 60, 61, 62, 63, 64, 65, 66, 77, 78, 79, 80, 81, 111, 114, 115, 116, 118, 175, 177, 178, 179, 180, 182, 184, 193, 194, 195, 196, 205, 220, 221, 222, 223, 224, 225, 230, 241, 247, 263, 264, 289, 291], "otim": [19, 132, 199], "out": [0, 3, 4, 111, 112, 114, 115, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 134, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 169, 170, 173, 174, 188, 189, 190, 192, 193, 194, 195, 196, 217, 218, 219, 220, 221, 222, 223, 224, 225, 232, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 310, 311, 312, 313, 314, 315, 316, 317, 318], "out_channel": [47, 53, 56, 57, 106, 109, 158, 159, 160, 161, 162, 163, 165, 188, 189, 190, 210, 211, 220, 221, 222, 223, 224, 225, 229], "out_featur": [105, 106, 109, 132, 134, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 189, 190, 192, 193, 194, 199, 201, 203, 204, 205, 206, 207, 209, 212, 215, 220, 221, 222, 223, 224, 225], "outcom": [324, 325, 327], "outer": 278, "outlier": [137, 205], "output": [0, 1, 2, 10, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 132, 134, 145, 146, 147, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 248, 249, 252, 253, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 276, 277, 287, 288, 289, 290, 291, 294, 296, 298, 301, 302, 303, 309, 310, 312, 316, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328], "output_height": 124, "output_lay": [106, 109], "output_s": [106, 145, 146, 147, 217, 218, 219], "output_width": 124, "outsid": 0, "over": [0, 1, 2, 3, 11, 52, 86, 98, 103, 106, 108, 118, 145, 146, 147, 164, 184, 188, 189, 190, 204, 207, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 225, 232, 233, 234, 235, 236, 251, 255, 289, 290, 291, 298, 301, 303, 324, 325, 327], "overal": 96, "overdetermin": 19, "overfit": [1, 23, 98, 126, 129, 193, 194, 195, 196, 232, 235, 240, 242], "overhead": [53, 164], "overli": 181, "overrid": [2, 3], "overridden": [103, 230], "overwrit": [105, 107], "own": [4, 105, 106, 107, 108, 120, 121, 122, 174, 229, 322], "p": [18, 19, 30, 104, 107, 108, 125, 126, 127, 128, 129, 192, 193, 194, 195, 196, 220, 223, 224, 324, 325, 327, 330], "p_d": [222, 225], "p_h": [221, 222, 225], "p_w": [221, 222, 225], "packag": [2, 3, 4, 11, 100, 229, 231, 247, 254, 256, 320, 330], "pad": [47, 106, 109, 120, 121, 122, 124, 145, 146, 147, 148, 149, 150, 152, 153, 154, 158, 159, 160, 161, 162, 163, 165, 188, 189, 190, 210, 211, 217, 218, 219, 220, 221, 222, 223, 224, 225, 308], "pad_after_dim1": 310, "pad_after_dim2": 310, "pad_before_dim1": 310, "pad_before_dim2": 310, "pad_width": 310, "padding_height": 124, "padding_width": 124, "pair": 132, "pang": 100, "paper": 40, "parallel": [1, 3, 86, 100], "param": [103, 104, 107, 108, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242], "param1": 103, "param_dict": 107, "param_group": [230, 231], "param_groups_setup": 230, "param_list": 108, "param_s": 247, "paramet": [0, 2, 10, 48, 49, 50, 100, 103, 229, 230, 231, 248, 256, 330], "parameterdict": 110, "parameterlist": 110, "parent": 229, "part": [102, 103, 174, 229, 244, 246, 256, 269, 270, 273, 274, 275, 276, 277, 320, 330], "partial": [12, 13, 14, 16, 17, 18, 19, 21, 22, 111, 112, 114, 115, 116, 117, 118, 119, 132, 134, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 220, 221, 222, 223, 224, 225, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "particip": [104, 320], "particular": [105, 107], "particularli": [10, 19, 52, 70, 71, 72, 73, 74, 75, 106, 107, 108, 109, 118, 134, 158, 159, 160, 161, 162, 163, 184, 201, 204, 207, 212, 213, 214, 215, 236, 244, 247, 319], "pass": [2, 10, 19, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 67, 68, 69, 70, 71, 72, 73, 74, 75, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 101, 103, 104, 105, 106, 107, 108, 109, 156, 158, 159, 160, 164, 165, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 215, 220, 221, 222, 223, 224, 225, 229, 248, 257, 290, 298, 301, 302, 303, 305, 307, 311, 313, 314, 318, 320, 330], "past": [232, 233, 235, 240], "patch": [124, 221], "path": [3, 5, 6, 7, 8], "pathwai": 100, "pattern": [100, 115, 164, 180, 188, 189, 190], "penal": [232, 240, 242], "penalti": [233, 234, 235, 236, 237, 238, 239], "penros": 19, "per": [1, 53, 70, 71, 72, 73, 74, 75, 87, 88, 89, 145, 212, 213, 214, 215, 217], "perform": [3, 10, 11, 12, 19, 23, 43, 44, 45, 47, 48, 49, 50, 53, 54, 55, 66, 82, 83, 84, 85, 86, 91, 98, 100, 103, 104, 108, 112, 120, 121, 122, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 161, 162, 163, 164, 165, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 230, 244, 246, 254, 256, 258, 259, 262, 265, 268, 287, 289, 291, 298, 302, 319, 321, 323, 328, 330], "permut": 302, "persist": [102, 249, 251, 252, 253, 255, 271, 272], "perturb": [14, 21, 22, 330], "phi": [112, 176], "pi": [112, 176, 284, 294, 299], "piecewis": [177, 178], "pil": [320, 330], "pinv": 15, "pioneer": 100, "pipelin": [5, 6, 7, 8, 256, 319, 320, 322], "pixel": [5, 6, 7, 8, 156, 227, 322, 324], "place": [167, 169, 170, 171, 172, 173, 174], "placehold": [103, 200], "plai": [248, 256], "plot": 309, "point": [4, 157, 244], "pointwis": [161, 162, 163], "pool": [23, 47, 48, 49, 50, 58, 69, 76, 86, 91, 98, 100, 145, 146, 147, 148, 149, 150, 152, 153, 154, 164, 165, 189, 190, 217, 218, 219, 220, 221, 222, 223, 224, 225, 289, 291], "pool1": 109, "pool2": 109, "poorli": 16, "popul": 103, "popular": [4, 100], "portion": 330, "pose": 19, "posit": [1, 12, 17, 103, 109, 157, 175, 179, 180, 182, 220, 221, 222, 223, 224, 225, 241, 245, 267, 312, 316, 323], "possibl": [10, 330], "potenti": [19, 200, 240, 314], "power": [10, 17, 52, 56, 57, 100, 164, 245, 246, 278, 319, 320, 330], "pp": 100, "practic": [19, 204, 207], "practition": 330, "pre": [59, 63, 64], "preactbottleneck": [59, 63, 64], "preced": [100, 104, 227, 257], "preconfigur": [31, 32, 33, 34, 35, 36, 37, 38, 44, 45], "predefin": [4, 100, 106, 182], "predict": [96, 203, 204, 206, 207], "prefix": [103, 247], "prepar": [3, 245, 310, 312, 316, 320, 330], "prepend": 103, "preprint": 100, "preprocess": [3, 4, 124, 157, 256, 319, 320, 330], "present": [203, 204, 205, 207, 209, 210, 211, 212, 213, 214, 215, 221], "preserv": [125, 157, 192, 269, 270, 273, 274, 275, 276, 277, 290, 298, 303], "preset": 4, "prevent": [1, 105, 106, 107, 108, 109, 126, 129, 181, 193, 194, 195, 196, 203, 204, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 246], "previou": [100, 232, 241, 246], "previous": 235, "primari": [10, 248], "primarili": 109, "print": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 244, 245, 246, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328], "priorit": [56, 57, 165, 177], "prob": 249, "probabilist": 256, "probabl": [30, 41, 112, 118, 125, 126, 127, 128, 129, 135, 176, 184, 192, 193, 194, 195, 196, 203, 204, 207, 249, 324, 325, 327, 330], "problem": [19, 20, 22, 100, 114, 175, 179, 239], "proceed": 100, "process": [2, 3, 4, 17, 20, 22, 23, 44, 58, 86, 97, 98, 100, 108, 120, 121, 122, 143, 157, 158, 159, 160, 164, 165, 182, 186, 188, 190, 199, 209, 210, 211, 212, 213, 214, 215, 220, 222, 223, 225, 232, 248, 309, 320, 321, 322, 323, 328, 330], "produc": [23, 98, 101, 145, 146, 147, 164, 188, 189, 190, 217, 218, 219, 254, 256], "product": [10, 20, 22, 178, 183, 185, 199, 215, 229, 260, 261, 265, 266], "program": [244, 256], "progress": 234, "project": [20, 22], "projector": 19, "promin": [220, 222, 223, 224, 225], "promot": [109, 204, 207, 229], "propag": [13, 14, 16, 19, 20, 21, 22, 100, 103, 109, 132, 134, 156, 164, 221, 222, 240, 241, 249, 260, 261, 262, 266, 289, 291, 309, 310, 313, 317], "properli": [0, 108, 118, 184, 229], "properti": [11, 13, 16, 17, 112, 116, 125, 176, 182, 192, 234, 239], "proport": [5, 6, 7, 8, 303], "proportion": 328, "provid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 24, 39, 40, 41, 43, 47, 58, 91, 96, 97, 99, 100, 103, 105, 106, 107, 108, 112, 134, 146, 147, 157, 203, 204, 205, 207, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 232, 233, 240, 242, 244, 246, 248, 254, 256, 257, 262, 269, 275, 289, 291, 302, 304, 312, 314, 316, 330], "pseudo": [16, 19], "purpos": [251, 255, 269, 274, 276], "python": 248, "pytorch": 304, "q": [20, 100], "qr": 15, "quad": [19, 203, 204, 205, 206, 207, 223, 224, 225, 258, 259, 263, 264, 265, 268, 321], "quadrat": 205, "quoc": 100, "quotient": 259, "r": [20, 100, 324, 325, 326, 327], "r_t": 239, "radam": 243, "rais": [0, 1, 2, 103, 229, 230, 267], "rand": [250, 256], "randint": [250, 256], "randn": [23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 54, 55, 58, 70, 71, 72, 73, 74, 75, 82, 83, 84, 85, 87, 88, 89, 90, 91, 96, 98, 161, 162, 163, 164, 165, 229, 250, 254, 256], "random": [1, 2, 3, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 54, 55, 58, 70, 71, 72, 73, 74, 75, 82, 83, 84, 85, 87, 88, 89, 90, 96, 161, 162, 163, 164, 165, 323, 324, 325, 326, 327, 330], "random_integ": 256, "random_tensor": 256, "randomcrop": [329, 330], "randomgrayscal": [329, 330], "randomhorizontalflip": [329, 330], "randomli": [1, 125, 126, 127, 128, 129, 157, 192, 193, 194, 195, 196, 323, 324, 325, 326, 327, 330], "randomnoisedataset": [0, 1, 2], "randomrot": [329, 330], "randomverticalflip": 329, "rang": [0, 1, 11, 58, 66, 100, 108, 117, 119, 120, 121, 136, 140, 174, 181, 183, 186, 232, 240, 242, 249, 252, 280, 281, 283, 322, 326, 330], "rank": 19, "rasul": 7, "rate": [30, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242], "rather": [7, 107, 108, 236, 313], "ratio": [30, 76, 164, 165, 328], "ravel": 308, "raw": [118, 184, 204, 248], "re": [104, 246], "readabl": [105, 106, 107, 109, 229, 248], "readi": [3, 10, 82, 83, 84, 85, 90, 100], "real": [19, 22, 52, 183], "rearrang": 124, "recalibr": [77, 79, 80, 82, 83, 84, 85, 100, 164], "receiv": [223, 224, 225, 310], "recent": 240, "recept": [86, 90, 100, 165], "reciproc": [19, 278, 288, 296], "recognit": [50, 100, 189], "rectangular": 273, "rectif": 239, "rectifi": [114, 115, 179, 180, 239], "recurr": [106, 215], "recurs": [101, 103], "red": 324, "reduc": [23, 51, 58, 69, 86, 91, 98, 100, 161, 162, 163, 164, 209, 210, 211, 212, 213, 214, 220, 221, 222, 223, 224, 225, 238, 241, 246, 248, 289, 290, 291, 298, 303, 324], "reduct": [22, 30, 76, 135, 136, 137, 139, 140, 164, 165, 203, 204, 205, 206, 207, 289, 291], "reevalu": 230, "refer": [4, 10, 103, 256, 270, 273, 305], "reflect": 244, "regardless": [19, 311], "region": [122, 145, 146, 147, 156, 177, 218, 219, 310, 321, 330], "regist": [67, 68, 70, 71, 72, 73, 74, 75, 97, 102, 103, 104, 108, 229, 247], "register_buff": 102, "register_model": [24, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 48, 49, 50, 54, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 87, 88, 89, 92, 93, 94, 95, 97, 99], "register_paramet": 103, "registr": [103, 229], "registri": [70, 71, 72, 73, 74, 75, 247], "registry_path": 247, "regress": [4, 139, 205, 206], "regular": [19, 23, 30, 41, 98, 129, 193, 194, 195, 196, 232, 233, 234, 237, 238, 239, 240, 242], "relat": [246, 273, 274], "relationship": 328, "relev": [156, 232, 240, 242], "reli": 246, "reliabl": [5, 6, 7, 8], "reliant": [193, 194, 195, 196], "relu": [10, 23, 76, 91, 98, 100, 101, 105, 106, 107, 109, 111, 113, 114, 131, 158, 159, 160, 164, 165, 169, 170, 173, 174, 175, 179, 181, 185, 187, 188, 189, 190, 198, 199, 200, 201], "relu1": 109, "relu2": 109, "relu3": 109, "relu6": [187, 198], "remain": [5, 6, 7, 8, 102, 144, 192, 193, 194, 195, 196, 241], "rememb": 256, "remov": [247, 314], "rep": 316, "repeat": [308, 309, 316], "repetit": [312, 316], "replac": [7, 256, 324], "repres": [7, 16, 18, 22, 47, 103, 104, 109, 132, 134, 141, 143, 144, 188, 189, 190, 199, 201, 204, 207, 215, 230, 231, 232, 238, 239, 240, 241, 242, 248, 249, 258, 259, 265, 268, 270, 290, 301, 302, 303, 309, 321, 323, 325, 326, 327, 328], "represent": [67, 68, 70, 71, 72, 73, 74, 75, 82, 83, 84, 85, 86, 90, 100, 164, 221, 224, 230], "reproduc": [249, 251, 252, 253, 254, 255, 256, 330], "requir": [2, 3, 4, 10, 53, 70, 71, 72, 73, 74, 75, 86, 102, 105, 109, 111, 112, 114, 115, 116, 117, 119, 132, 134, 156, 164, 165, 174, 200, 204, 207, 229, 244, 246, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 299, 300, 305, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 321, 328], "requires_grad": [102, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 124, 132, 134, 156, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 220, 221, 222, 223, 224, 225, 227, 229, 249, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320], "rescal": [135, 136, 140, 203, 204, 207], "research": 229, "reset": [104, 254, 257], "reshap": [10, 76, 134, 189, 190, 227, 245, 248, 308, 311], "residu": [42, 43, 44, 45, 52, 53, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 77, 78, 79, 80, 81, 100], "residualblock": 58, "resili": 241, "resiz": [156, 319, 329, 330], "resnet": [43, 44, 45, 46, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 77, 78, 79, 80, 81, 86, 87, 88, 89, 100, 164], "resnet_1001": 100, "resnet_101": 100, "resnet_152": 100, "resnet_18": 100, "resnet_200": 100, "resnet_269": 100, "resnet_34": 100, "resnet_50": 100, "resnet_arg": 86, "resnext": [46, 70, 71, 72, 73, 74, 75, 82, 83, 84, 85, 90, 100], "resnext_101_32x16d": 100, "resnext_101_32x32d": 100, "resnext_101_32x4d": 100, "resnext_101_32x8d": 100, "resnext_101_64x4d": 100, "resnext_50_32x4d": 100, "resolut": [30, 31, 32, 33, 34, 35, 36, 37, 38, 82, 83, 84, 85, 90, 100], "resourc": [53, 56, 57, 100, 246], "respect": [12, 13, 14, 16, 17, 18, 19, 20, 22, 47, 91, 102, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 132, 134, 156, 165, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 220, 221, 222, 223, 224, 225, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 283, 287, 288, 289, 290, 291, 294, 296, 298, 301, 302, 303, 309, 310, 312, 316, 324], "respons": [82, 83, 84, 85, 100, 105, 231], "restor": [164, 246], "restructur": 313, "result": [12, 16, 17, 19, 100, 103, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 132, 134, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 165, 177, 181, 184, 229, 230, 244, 246, 249, 251, 252, 253, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 304, 305, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320, 323, 324, 330], "resum": 231, "retain": [104, 257, 269, 276, 289, 290, 291, 298, 303, 320], "retent": 320, "rethink": 100, "retriev": [0, 2, 105, 107, 108], "return": [0, 1, 2, 3, 5, 6, 7, 8, 10, 43, 47, 76, 102, 103, 105, 106, 107, 108, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 215, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 247, 248, 319, 330], "reus": [100, 320], "reusabl": [109, 229, 319], "revers": [10, 109, 302, 325, 327], "revert": 246, "revolution": 100, "rgb": [5, 6, 40, 41, 42, 44, 45], "rho": 233, "rho_": 239, "rho_t": 239, "right": [17, 18, 19, 21, 22, 112, 118, 176, 184, 203, 204, 205, 207, 209, 210, 211, 212, 213, 214, 215, 223, 224, 225, 321], "risk": 248, "rmsprop": 243, "rob": 100, "robust": [157, 192, 193, 194, 195, 196, 205, 229, 233, 323, 324, 326, 330], "roland": 7, "role": [248, 256, 330], "root": [4, 5, 6, 7, 8, 234, 240, 296], "rotat": [131, 155, 326, 330], "rotated_imag": 157, "rout": [223, 224, 225], "routin": 10, "row": [13, 14, 16, 21, 134, 273, 309, 318], "rprop": 243, "rule": [16, 17, 245, 258, 259, 263, 264, 265, 267, 268], "run": [10, 102, 141, 143, 158, 159, 160, 209, 210, 211, 212, 213, 214, 233, 246, 254, 256], "running_mean": [102, 141, 143, 209, 210, 211, 212, 213, 214], "running_var": [141, 143, 209, 210, 211, 212, 213, 214], "runtim": [106, 109, 229], "s_": 241, "s_d": [222, 225], "s_h": [221, 222, 225], "s_w": [221, 222, 225], "sain": 100, "same": [13, 14, 16, 17, 21, 118, 125, 126, 127, 128, 129, 141, 143, 144, 146, 147, 157, 158, 159, 160, 161, 162, 163, 165, 181, 188, 189, 190, 192, 193, 194, 195, 196, 200, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 241, 249, 254, 256, 262, 272, 275, 277, 287, 289, 290, 291, 305, 307, 311, 313, 314, 315, 318, 322], "sampl": [0, 1, 2, 3, 5, 6, 7, 8, 10, 40, 41, 42, 44, 45, 47, 48, 49, 50, 54, 55, 82, 83, 84, 85, 90, 145, 146, 147, 169, 170, 171, 172, 173, 174, 192, 193, 194, 195, 196, 199, 201, 204, 207, 215, 217, 218, 219, 249, 253, 256, 321, 323, 325, 326, 327, 328], "sandler": 100, "satisfi": [12, 14, 21], "satur": [175, 330], "save": [2, 102, 104, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 246, 247], "scalabl": [3, 30, 70, 71, 72, 73, 74, 75, 96, 100, 229], "scalar": [13, 18, 135, 136, 137, 139, 140, 248, 249], "scale": [14, 19, 25, 30, 44, 48, 49, 50, 51, 54, 59, 60, 61, 64, 77, 78, 86, 87, 88, 89, 100, 111, 116, 118, 141, 143, 144, 164, 165, 173, 174, 175, 177, 179, 182, 183, 184, 186, 192, 193, 194, 195, 196, 204, 209, 210, 211, 212, 213, 214, 215, 227, 232, 234, 235, 236, 248, 256, 303, 328], "scale_factor": 227, "scenario": [107, 108, 215, 236, 237, 320, 324], "schedul": 232, "scientif": 245, "score": [58, 69, 86, 118, 204], "scratch": 10, "script": 256, "se": [30, 77, 78, 79, 80, 81, 82, 83, 84, 85, 100], "se_resnet_101": 100, "se_resnet_152": 100, "se_resnet_18": 100, "se_resnet_34": 100, "se_resnet_50": 100, "se_resnext_101_32x4d": 100, "se_resnext_101_32x8d": 100, "se_resnext_101_64x4d": 100, "se_resnext_50_32x4d": 100, "se_scal": 30, "seamless": [0, 1, 3, 4, 229, 256], "seamlessli": [3, 4, 11, 104, 106, 109, 229, 248, 330], "search": 100, "second": [14, 106, 107, 132, 164, 199, 235, 236, 237, 238, 239, 245, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 307, 309, 327], "section": 262, "see": [10, 262], "seed": [249, 250, 251, 252, 253, 255, 256, 330], "seen": 233, "select": [86, 87, 88, 89, 90, 100, 156, 164, 165, 223, 225, 298], "selectivekernel": 166, "self": [0, 1, 2, 3, 10, 23, 30, 39, 43, 47, 51, 52, 53, 76, 91, 98, 101, 102, 103, 104, 105, 106, 107, 108, 116, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 199, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 247, 309, 319, 320], "selu": [113, 125, 131, 187, 192, 198], "selunetwork": 182, "semodul": 166, "senet": [46, 77, 78, 79, 80, 81, 82, 83, 84, 85, 100], "sensit": [137, 205, 209, 210, 211], "sentiment": 4, "separ": [0, 51, 96, 100, 120, 121, 122, 161, 162, 163, 212, 213, 214], "sequenc": [17, 58, 69, 86, 105, 107, 120, 269, 305, 307, 310, 312, 315, 316, 318, 319], "sequenti": [23, 43, 47, 76, 91, 96, 98, 101, 105, 106, 110, 120, 158, 159, 160, 200, 319, 330], "seri": [39, 48, 49, 86, 120, 158, 188, 220, 223], "serial": [102, 103, 231], "serv": [3, 7, 25, 43, 76, 91, 103, 105, 106, 107, 108, 109, 229, 241, 320], "set": [3, 4, 5, 6, 7, 8, 67, 68, 82, 83, 84, 85, 90, 101, 104, 108, 120, 121, 122, 179, 180, 182, 188, 189, 190, 192, 195, 196, 199, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 230, 235, 236, 240, 249, 251, 252, 253, 254, 255, 256, 257, 269, 271, 272, 276, 277, 283, 289, 291, 304, 320, 324, 330], "setup": [4, 10, 70, 71, 72, 73, 74, 75], "sever": [19, 188, 189, 190, 220, 221, 222, 223, 224, 225, 246, 319, 330], "sgd": [10, 232, 239, 243], "sgn": 18, "shape": [3, 4, 5, 6, 7, 8, 10, 13, 14, 16, 17, 19, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 43, 47, 53, 56, 57, 58, 70, 71, 72, 73, 74, 75, 76, 82, 83, 84, 85, 87, 88, 89, 90, 91, 96, 98, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 164, 165, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 229, 245, 248, 249, 251, 252, 253, 255, 256, 257, 260, 271, 272, 273, 274, 275, 276, 277, 283, 288, 289, 290, 291, 294, 296, 298, 302, 303, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 318, 321, 322, 323, 324, 325, 326, 327, 328, 330], "shapelik": 252, "share": 100, "shen": 164, "shift": [141, 143, 144, 177, 209, 210, 211, 212, 213, 214, 215], "shorthand": 262, "should": [47, 102, 246, 249, 251, 252, 253, 255, 271, 272, 280, 281, 301, 310, 319], "show": [244, 247], "showcas": 10, "shown": [185, 254], "shrink": 233, "shuffl": [1, 2, 3], "side": [21, 106, 109, 120, 121, 122, 148, 149, 150, 152, 153, 154, 158, 159, 160, 188, 189, 190, 220, 221, 222, 223, 224, 225, 246], "sigma": [19, 164, 169, 171, 173, 183, 185, 209, 210, 211, 212, 213, 214, 215, 302], "sigma_c": 322, "sigma_i": 19, "sigmoid": [113, 131, 164, 169, 170, 173, 174, 177, 178, 185, 187, 198, 203], "sigmoidnetwork": 183, "sign": [17, 205, 241, 278], "signal": [158, 188, 189, 190, 209, 212, 220, 221, 222, 223, 224, 225], "signific": 246, "significantli": [52, 69, 100, 164, 319], "sim": [192, 193, 194, 195, 196], "similar": [10, 169, 170, 262, 288, 304, 310], "similarli": [22, 301], "simonyan": 100, "simpl": [3, 4, 10, 101, 109, 120, 121, 122, 132, 134, 148, 149, 150, 152, 153, 154, 176, 177, 178, 180, 181, 182, 183, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 220, 221, 222, 223, 224, 225, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 260, 261, 266, 319], "simplebinaryclassificationmodel": 203, "simpleclassificationmodel": [204, 207], "simplegelumodel": 176, "simplehardsigmoidmodel": 177, "simplehardswishmodel": 178, "simpleleakyrelumodel": 179, "simplemodel": [10, 101, 181, 201, 247], "simpleregressionmodel": 206, "simplerelumodel": 180, "simpleselumodel": 182, "simplesigmoidmodel": 183, "simpleswishmodel": 185, "simpletanhmodel": 186, "simpli": [244, 301, 302, 313], "simplic": [100, 177, 180], "simplifi": [4, 48, 97, 109, 158, 159, 160], "simul": [101, 330], "simultan": 157, "sin": [278, 284], "sinc": [17, 20, 105, 106, 107, 108, 120, 121, 122, 174, 244, 246, 249, 253, 309, 330], "sine": [281, 294, 295], "singl": [0, 4, 17, 20, 22, 58, 118, 158, 159, 160, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 190, 204, 215, 221, 222, 223, 224, 225, 230, 248, 255, 271, 305, 314, 322, 324, 330], "singleton": 215, "singular": [13, 16, 17, 19, 21, 22], "sinh": [278, 285, 300], "size": [0, 1, 2, 3, 22, 30, 31, 32, 33, 34, 35, 36, 37, 38, 47, 48, 49, 50, 54, 56, 57, 58, 86, 98, 100, 101, 104, 106, 120, 121, 122, 124, 127, 128, 129, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 188, 189, 190, 199, 201, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 247, 252, 255, 256, 257, 289, 290, 291, 298, 303, 305, 307, 314, 317, 318, 321, 323, 328, 330], "sk": [86, 87, 88, 89, 90, 100, 165], "sk_resnet_18": 100, "sk_resnet_34": 100, "sk_resnet_50": 100, "sk_resnext_50_32x4d": 100, "skblock": 86, "skip": [100, 246], "sknet": [46, 87, 88, 89, 90, 100], "slice": [132, 301], "slide": [124, 220, 222, 223, 225], "slight": 164, "slightli": 330, "slope": [114, 175, 179], "slow": [3, 239], "small": [19, 48, 49, 50, 53, 56, 57, 100, 114, 135, 136, 141, 143, 144, 179, 182, 203, 204, 205, 209, 210, 211, 212, 213, 214, 215, 221, 224, 233, 234, 235, 236, 237, 238, 239, 240, 241], "smaller": [98, 100, 106, 109, 229, 234, 235, 264, 321, 323, 328], "smallest": 291, "smooth": [41, 112, 175, 176, 185, 232, 240, 330], "smoother": 232, "so": [105, 106, 107, 108, 157, 229, 239, 271, 272, 319], "softmax": [113, 131, 165, 187, 198, 204], "softmaxmodel": 184, "solut": [19, 21], "solv": [11, 12, 15, 19, 20, 22], "solver": 11, "some": [111, 126, 157, 192, 193, 194, 209, 210, 211, 212, 213, 214, 234, 235, 236, 246, 248], "sometim": 245, "sophist": [106, 109], "sourc": 256, "space": [14, 20, 22, 120, 121, 122, 124, 145, 146, 147, 158, 159, 160, 161, 162, 163, 188, 189, 190, 217, 218, 219, 269, 330], "span": 4, "spars": [234, 235], "spatial": [23, 58, 69, 86, 91, 98, 100, 159, 164, 189, 190, 209, 210, 211, 212, 213, 214, 215, 221, 222, 223, 224, 225, 227, 309], "spatial_dim": 164, "spatio": 190, "special": [0, 1, 10, 19, 102, 103, 104, 192, 256], "specif": [4, 10, 26, 27, 28, 29, 43, 51, 67, 68, 105, 106, 107, 108, 109, 165, 174, 192, 193, 194, 195, 196, 212, 213, 214, 229, 230, 244, 256, 271, 289, 291, 312, 316], "specifi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 18, 24, 25, 47, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 86, 88, 89, 91, 92, 93, 94, 95, 97, 99, 101, 106, 118, 124, 129, 135, 136, 137, 139, 140, 144, 145, 146, 147, 156, 157, 164, 184, 188, 189, 190, 203, 204, 205, 206, 207, 215, 217, 218, 219, 221, 222, 223, 224, 225, 227, 230, 248, 251, 252, 253, 254, 255, 267, 269, 270, 271, 272, 273, 274, 276, 277, 283, 289, 290, 291, 298, 302, 303, 304, 305, 307, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 328, 330], "speech": 212, "speed": [56, 57, 177, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242], "split": [4, 305, 307, 318], "springer": 100, "sqrt": [112, 169, 170, 173, 174, 176, 209, 210, 211, 212, 213, 214, 215, 233, 234, 235, 236, 238, 239, 240, 278, 280, 281], "squar": [1, 3, 12, 13, 14, 16, 17, 19, 20, 21, 22, 137, 139, 205, 206, 233, 234, 235, 240, 278, 296], "squaredataset": [0, 1, 2, 3], "squeez": [30, 53, 56, 57, 76, 79, 82, 83, 84, 85, 100, 164, 308], "stabil": [16, 19, 100, 135, 136, 141, 143, 144, 158, 159, 160, 181, 203, 204, 209, 210, 211, 212, 213, 214, 215, 232, 233, 234, 235, 236, 237, 238, 239, 240, 322], "stabl": [169, 170, 173, 174, 192, 204, 232, 236, 237, 240, 241, 242], "stack": [109, 165, 307, 308, 318, 330], "stage": [58, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 86, 87, 88, 89], "stage1": 76, "stage2": 76, "stage3": 76, "stage4": 76, "standalon": 181, "standard": [58, 67, 68, 112, 114, 161, 162, 163, 169, 171, 173, 175, 176, 179, 192, 241, 253, 256, 262, 319, 322, 330], "start": [1, 3, 232, 234, 241, 269, 321, 323], "state": [100, 102, 103, 104, 106, 109, 230, 244, 246, 254], "state_dict": [103, 104, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242], "static": 109, "statist": [19, 125, 141, 143], "std": [5, 6, 7, 8, 171, 319, 322, 330], "stem": [43, 58, 69, 86], "stem_typ": 58, "stem_width": 58, "step": [104, 124, 165, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 246, 269, 319, 320], "step_siz": 241, "still": 233, "stochast": [10, 30, 232, 242], "stochastic_depth": 30, "stop": 269, "storag": [105, 107, 257], "store": [2, 4, 5, 6, 7, 8, 58, 69, 86, 102, 103, 104, 105, 106, 107, 108, 164, 217, 218, 219, 246, 257, 321, 322, 323, 324, 325, 326, 327, 328], "str": [5, 6, 7, 8, 58, 91, 103, 105, 107, 109, 135, 136, 137, 139, 140, 156, 227, 230, 247, 309], "straightforward": [242, 244, 258], "strategi": 231, "streamlin": [2, 3], "strict": [103, 230], "stride": [47, 48, 49, 50, 53, 56, 57, 106, 109, 120, 121, 122, 124, 145, 146, 147, 148, 149, 150, 152, 153, 154, 158, 159, 160, 161, 162, 163, 165, 188, 189, 190, 217, 218, 219, 220, 221, 222, 223, 224, 225], "stride_height": 124, "stride_width": 124, "string": [103, 105, 107, 109, 188, 189, 190, 230], "structur": [0, 10, 20, 53, 96, 102, 103, 106, 229, 230, 247, 248, 273, 320], "style": [43, 143, 212, 213, 309], "sub": [105, 106, 107, 108, 109, 229, 278, 321, 323], "sub_tensor": 257, "subclass": [1, 2, 3, 10, 103, 104, 105, 229, 230], "sublay": 101, "submodul": [101, 103, 229], "subsequ": [106, 109, 174, 256], "subset": [193, 194], "subtract": [10, 268, 322], "suffer": 234, "suit": [26, 27, 28, 29, 41, 51, 86, 169, 170, 173, 174], "suitabl": [31, 32, 33, 34, 35, 36, 37, 38, 43, 48, 49, 50, 52, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 78, 79, 81, 100, 205, 234, 235, 251], "sum": [18, 105, 106, 107, 108, 109, 118, 135, 136, 137, 139, 140, 165, 184, 203, 204, 205, 206, 207, 234, 258, 261, 266, 278, 301, 303, 305, 307, 309, 312, 316, 318], "sum_": [17, 118, 184, 203, 204, 206, 207, 209, 210, 211, 212, 213, 214, 215, 220, 221, 222, 260, 261, 290, 298, 301, 303, 309, 312], "sum_i": [18, 266], "sum_j": 266, "sum_k": 262, "summar": [30, 67, 68, 96, 220, 221, 222], "summari": [67, 68, 82, 83, 84, 85, 90], "summat": 17, "sun": 164, "super": [10, 101, 102, 103, 104, 105, 106, 107, 108, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 199, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 215, 220, 221, 222, 223, 224, 225, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 247], "support": [1, 3, 4, 10, 11, 17, 18, 19, 20, 22, 54, 58, 105, 106, 107, 108, 109, 156, 157, 227, 229, 231, 238, 256, 257, 258, 259, 262, 263, 264, 265, 267, 268, 270, 273, 283, 288, 290, 294, 296, 298, 301, 302, 303, 305, 309, 313, 320, 330], "suppos": 330, "sure": [229, 330], "svd": [15, 19], "swish": [56, 57, 187, 198], "symmetr": [12, 145, 146, 147, 173, 174, 186], "syntax": [1, 262], "system": [11, 12, 19, 20, 21, 100, 244, 309], "systemat": [100, 330], "szegedi": [40, 100], "t": [19, 100, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 246, 257, 262, 304, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330], "t0": 232, "t1": 304, "t2": 304, "tabl": 30, "tabular": 4, "tailor": [4, 53, 229, 330], "take": [20, 220, 221, 222, 223, 224, 225, 227, 246, 319], "taken": 301, "tan": [100, 278], "tangent": [119, 186, 282, 299, 300], "tanh": [47, 106, 109, 112, 113, 131, 169, 170, 173, 174, 176, 187, 198, 278], "tanhnetwork": 186, "target": [5, 6, 7, 8, 109, 135, 136, 137, 139, 140, 145, 146, 147, 156, 203, 204, 205, 206, 207, 217, 218, 219, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 321, 323, 328], "target_tensor": [203, 204, 205, 206, 207], "target_transform": [5, 6, 7, 8], "task": [4, 10, 11, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 90, 96, 100, 117, 118, 121, 132, 135, 136, 139, 140, 164, 165, 183, 184, 188, 189, 190, 203, 204, 205, 206, 207, 212, 213, 214, 220, 222, 223, 225, 235, 245, 256, 273, 330], "techniqu": [12, 16, 98, 141, 192, 193, 194, 195, 196, 212, 213, 214, 231, 328, 330], "tempor": [188, 190, 222, 225], "temporarili": 246, "tensor": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 70, 71, 72, 73, 74, 75, 76, 87, 88, 89, 91, 96, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 244, 246, 248, 249, 251, 252, 253, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330], "term": [19, 132, 158, 159, 160, 161, 162, 163, 232, 236, 238, 239, 240, 242], "test": [4, 5, 6, 7, 8], "test_backward": 101, "test_siz": [5, 6, 7, 8], "text": [4, 13, 17, 18, 58, 69, 86, 87, 88, 89, 96, 105, 111, 114, 115, 116, 118, 120, 121, 122, 145, 146, 147, 148, 149, 150, 152, 153, 154, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 173, 174, 175, 177, 178, 179, 180, 181, 182, 184, 185, 188, 189, 190, 192, 193, 194, 195, 196, 203, 204, 205, 206, 207, 220, 221, 222, 223, 224, 225, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 252, 258, 259, 261, 263, 264, 265, 267, 268, 279, 283, 289, 290, 291, 293, 298, 303, 305, 307, 310, 311, 312, 313, 314, 316, 317, 318, 321, 322, 323, 325, 326, 327], "th": [132, 203, 204, 206, 207, 212, 213, 214, 263, 264, 267], "than": [0, 1, 7, 107, 108, 111, 114, 137, 161, 162, 163, 175, 179, 185, 205, 230, 236, 283, 301, 310, 315, 321, 323, 328], "thei": [0, 10, 22, 100, 102, 106, 108, 109, 248, 309, 313, 321, 323, 330], "them": [3, 103, 108, 124, 232, 245, 305, 315, 319, 322, 330], "therebi": [192, 221, 222, 224, 225], "theta": [232, 233, 326], "theta_": [232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242], "theta_t": [239, 240], "thi": [0, 1, 2, 3, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 40, 41, 42, 43, 44, 45, 47, 51, 52, 53, 55, 56, 57, 58, 67, 68, 69, 70, 71, 72, 73, 74, 75, 82, 83, 84, 85, 86, 87, 88, 89, 90, 96, 100, 101, 102, 104, 106, 107, 108, 109, 115, 117, 118, 119, 120, 121, 122, 124, 132, 134, 145, 156, 157, 161, 162, 163, 164, 165, 169, 170, 173, 174, 175, 176, 177, 179, 180, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 207, 209, 210, 211, 212, 213, 214, 215, 217, 220, 221, 222, 223, 224, 225, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 252, 253, 254, 256, 257, 261, 262, 266, 269, 271, 274, 275, 276, 277, 283, 287, 288, 289, 290, 291, 294, 296, 298, 301, 302, 303, 304, 310, 312, 313, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330], "thing": 246, "those": [10, 48, 49, 50, 108, 174], "three": [22, 50, 122, 147, 150, 154, 158, 159, 160, 190, 196, 211, 214, 219, 222, 225], "threshold": [19, 137, 205], "through": [0, 3, 4, 10, 14, 19, 20, 22, 23, 39, 43, 47, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 87, 88, 89, 97, 98, 105, 106, 109, 132, 134, 156, 164, 165, 175, 176, 177, 178, 179, 180, 182, 183, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 209, 210, 211, 212, 215, 220, 221, 222, 223, 224, 225, 249, 253, 260, 261, 266, 309, 311, 313, 314, 317, 330], "throughout": [116, 320], "tile": 308, "time": [0, 3, 17, 48, 49, 50, 52, 120, 158, 179, 182, 188, 220, 221, 222, 223, 224, 225, 232, 233, 234, 235, 236, 240, 242, 246, 312, 316], "to_tensor": [5, 6, 7, 8], "togeth": [109, 319, 330], "too": 241, "tool": [3, 10, 229, 245, 256, 319, 330], "top": [12, 13, 14, 20, 22, 132, 134, 156, 188, 189, 190, 199, 201, 321, 323], "torch": [91, 304], "toronto": [5, 6], "total": [0, 1, 2, 5, 6, 7, 8, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 48, 49, 50, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 95, 97, 99, 101, 104, 257, 313], "totensor": [319, 330], "trace": [11, 278], "track": [10, 158, 159, 160, 209, 210, 211, 212, 213, 214, 229, 244, 246, 249, 251, 252, 253, 255, 269, 270, 271, 272, 273, 274, 275, 276, 277, 304, 320], "track_running_stat": [158, 159, 160, 209, 210, 211, 212, 213, 214], "tradit": [7, 233, 234, 237, 238, 239], "trail": 144, "train": [1, 2, 3, 4, 5, 6, 7, 8, 10, 39, 40, 41, 82, 83, 84, 85, 90, 100, 101, 102, 103, 106, 108, 109, 118, 125, 126, 127, 128, 129, 141, 143, 157, 176, 179, 182, 183, 184, 186, 192, 193, 194, 195, 196, 209, 210, 211, 212, 213, 214, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 246, 319, 322, 323, 324, 325, 326, 327, 330], "trainabl": [101, 209, 210, 211, 212, 213, 214, 229], "transact": 164, "transfer": [143, 212, 213], "transform": [2, 4, 5, 6, 7, 8, 10, 14, 100, 107, 132, 134, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 245, 309], "transform_pipelin": [319, 330], "transformed_imag": [319, 330], "transit": [25, 205], "translat": [221, 224], "transpos": [10, 12, 278], "treat": [0, 102, 215, 229], "triangular": [12, 20], "true": [1, 2, 3, 4, 5, 6, 7, 8, 22, 39, 40, 41, 56, 57, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 124, 125, 126, 127, 128, 129, 132, 134, 141, 143, 156, 158, 159, 160, 161, 162, 163, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 220, 221, 222, 223, 224, 225, 227, 229, 230, 235, 236, 240, 244, 249, 251, 252, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 307, 310, 311, 312, 313, 314, 315, 316, 317, 318, 320], "truncat": 101, "truncate_from": 101, "try": 0, "tune": 330, "tupl": [2, 3, 5, 6, 7, 8, 14, 20, 22, 25, 58, 101, 103, 104, 120, 121, 122, 124, 144, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 188, 189, 190, 200, 215, 218, 219, 220, 221, 222, 223, 224, 225, 227, 235, 236, 237, 238, 239, 241, 248, 251, 252, 253, 255, 257, 271, 274, 276, 289, 290, 291, 298, 303, 305, 307, 309, 310, 313, 314, 315, 317, 318, 321, 322, 323, 328], "twice": 310, "two": [10, 13, 14, 16, 17, 19, 20, 22, 48, 49, 50, 53, 87, 91, 120, 121, 122, 132, 149, 153, 164, 165, 189, 195, 199, 210, 213, 221, 224, 235, 236, 237, 238, 239, 241, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 301, 309], "type": [47, 58, 76, 86, 102, 103, 104, 132, 199, 257, 269, 270, 271, 272, 273, 274, 275, 276, 277, 304, 309, 320], "typeerror": [0, 1, 2, 103, 230], "typic": [11, 58, 69, 86, 102, 118, 125, 157, 164, 181, 182, 184, 207, 209, 210, 211, 212, 213, 214, 231, 232, 240, 242, 246, 248, 317, 320, 322, 326, 328, 330], "u": [19, 22, 170, 172, 174], "u_": 237, "ultra": 64, "unchang": [102, 129, 175, 179, 180, 182, 192, 193, 194, 195, 196, 200, 311, 314], "undefin": 267, "under": [70, 71, 72, 73, 74, 75, 229], "underbrac": 17, "underdetermin": 19, "undergo": 330, "underli": [0, 10, 40, 41, 42, 44, 45, 304, 307, 311, 313, 318], "understand": [10, 98, 100, 101, 109, 330], "unexpect": [103, 106, 109, 256], "unfold": [123, 131], "unifi": 0, "uniform": [168, 170, 174, 188, 189, 190, 199, 201, 250, 251, 252, 256, 324, 325, 326, 327], "uniformli": [251, 255], "uniniti": [271, 272], "unintend": 246, "union": 91, "uniqu": [12, 19, 21, 105, 107], "unit": [23, 47, 98, 111, 112, 114, 115, 116, 169, 170, 173, 174, 175, 176, 179, 180, 182, 192], "unless": [59, 60, 61, 62, 63, 64, 65, 66, 77, 78, 79, 80, 81, 257], "unlik": [102, 105, 106, 107, 108, 114, 175, 179, 192, 215, 233, 234, 236, 237, 238, 239, 241], "unnecessari": 246, "unpad": 310, "unseen": 330, "unsqueez": 308, "unstabl": 16, "up": [230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 326, 328], "updat": [4, 102, 108, 109, 192, 193, 194, 195, 196, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 246], "upon": [41, 53, 100, 105, 106, 107, 108], "upper": [20, 172, 241, 255], "upsampl": [198, 228], "us": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 17, 19, 20, 22, 25, 30, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 132, 134, 139, 141, 143, 146, 147, 156, 157, 158, 159, 160, 164, 165, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 244, 245, 246, 247, 249, 251, 252, 253, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 287, 289, 290, 291, 298, 303, 309, 310, 312, 314, 316, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330], "usag": [3, 11, 25, 96, 106, 109, 161, 162, 163, 230, 231, 321, 322, 323, 324, 325, 326, 327, 328], "use_aux": [39, 40, 41], "use_h": [56, 57], "use_s": [56, 57], "user": [1, 2, 3, 4, 10, 105, 106, 107, 108, 229, 234, 319, 320, 330], "usual": 204, "util": [3, 10, 11, 87, 88, 89, 107, 108, 229, 256], "v": [14, 19, 22, 100, 235, 236, 238, 239, 270], "v1": [39, 40, 43, 44, 45, 51, 52, 100], "v2": [43, 45, 46, 52, 53, 55, 100], "v3": [39, 41, 42, 46, 53, 56, 57, 100], "v4": [39, 42, 100], "v_": [232, 235, 236, 238, 239, 240, 242], "v_stack": 318, "v_t": [239, 240], "val": 167, "valid": [158, 159, 160, 161, 162, 163, 165, 188, 189, 190, 302], "valu": [10, 13, 17, 18, 19, 22, 51, 67, 68, 101, 103, 105, 107, 109, 111, 114, 117, 118, 119, 120, 121, 122, 124, 135, 136, 137, 139, 140, 141, 143, 144, 145, 156, 157, 158, 159, 160, 164, 167, 169, 170, 171, 172, 173, 174, 175, 179, 180, 181, 182, 183, 186, 192, 193, 194, 195, 196, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 220, 221, 222, 223, 224, 225, 227, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 248, 249, 251, 252, 253, 254, 255, 256, 269, 270, 271, 272, 273, 279, 280, 281, 283, 286, 287, 288, 289, 291, 293, 294, 296, 297, 305, 310, 311, 313, 317, 322, 324, 325, 327], "valuabl": 256, "valueerror": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 230], "van": 100, "vanish": [100, 175, 182, 209, 210, 211], "var": 278, "vari": [86, 106, 108, 145, 156, 217, 326], "variabl": [103, 109, 145, 146, 147, 200, 217, 218, 219, 229, 244, 246, 251, 271, 323, 326], "varianc": [116, 125, 141, 143, 158, 159, 160, 169, 170, 173, 174, 182, 192, 209, 210, 211, 212, 213, 214, 215, 235, 236, 237, 238, 239, 253, 303, 326, 330], "variant": [25, 26, 27, 28, 29, 30, 53, 56, 57, 67, 68, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 235, 236, 237], "variat": [161, 162, 163, 212, 213, 214, 323, 330], "varieti": [4, 43, 256, 330], "variou": [7, 25, 39, 44, 45, 47, 54, 100, 180, 231, 256, 289, 291, 310, 320], "vasudevan": 100, "vdot": 266, "vector": [14, 19, 20, 21, 22, 132, 134, 199, 201, 260, 261, 262, 266], "veloc": [232, 240, 242], "veri": [19, 61, 63, 100, 233], "versa": 241, "versatil": [256, 309], "version": [22, 39, 43, 47, 48, 49, 240, 266, 324], "vertic": [315, 318, 327], "vgg": 91, "vggnet": [46, 92, 93, 94, 95, 100], "vggnet_11": 100, "vggnet_13": 100, "vggnet_16": 100, "vggnet_19": 100, "via": [3, 4, 86], "vice": 241, "video": [122, 129, 160, 190, 214, 222, 225], "view": [43, 47, 106, 221, 222, 223, 224, 225, 313], "vinod": [5, 6], "vision": [51, 52, 55, 58, 100, 121, 189, 199, 330], "visual": [98, 100], "vol": 100, "vollgraf": 7, "volumetr": [122, 129, 160, 190, 214, 222, 225], "vstack": 308, "w": [58, 70, 71, 72, 73, 74, 75, 87, 88, 89, 100, 121, 122, 124, 128, 129, 132, 134, 146, 147, 149, 150, 153, 154, 156, 157, 159, 160, 164, 188, 189, 190, 199, 201, 210, 211, 213, 214, 218, 219, 222, 225, 321, 323], "w_": [121, 122, 146, 147, 149, 150, 153, 154, 156, 189, 190, 218, 219, 221, 222, 224, 225], "w_out": [121, 122, 149, 150, 153, 154], "wa": [40, 192, 193, 194, 195, 196, 246], "wai": [1, 24, 99, 244, 246, 313], "wang": 100, "want": [0, 10, 319, 321], "warn": [105, 107], "we": [3, 10, 245, 309], "weight": [59, 60, 61, 62, 63, 64, 65, 66, 77, 78, 79, 80, 81, 100, 120, 121, 122, 132, 134, 135, 136, 140, 141, 143, 144, 156, 164, 165, 169, 170, 173, 174, 188, 189, 190, 192, 193, 194, 195, 196, 199, 201, 203, 204, 207, 209, 210, 211, 212, 213, 214, 215, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 251, 256], "weight1": 107, "weight2": 107, "weight_decai": [232, 233, 234, 235, 236, 237, 238, 239, 240, 242], "weinberg": 100, "well": [26, 27, 28, 29, 41, 86, 169, 170], "were": 109, "weyand": 100, "what": 246, "when": [0, 1, 3, 10, 17, 30, 103, 106, 108, 109, 111, 114, 120, 121, 122, 175, 200, 209, 210, 211, 212, 213, 214, 227, 230, 233, 241, 244, 246, 247, 248, 256, 267, 319, 321], "where": [3, 4, 5, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 22, 56, 57, 96, 100, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 127, 128, 129, 132, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 164, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 220, 221, 222, 223, 224, 225, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 246, 248, 256, 258, 259, 263, 264, 265, 267, 268, 271, 272, 283, 287, 288, 289, 290, 291, 294, 296, 298, 301, 302, 303, 305, 310, 312, 316, 319, 320, 321, 322, 323, 324, 325, 326, 327], "whether": [1, 13, 30, 39, 40, 41, 56, 57, 103, 104, 169, 170, 240, 244, 249, 251, 252, 253, 255, 257, 271, 272, 289, 290, 291, 298, 303], "which": [0, 7, 10, 13, 14, 16, 17, 18, 19, 20, 22, 42, 45, 51, 52, 54, 82, 83, 84, 85, 86, 90, 92, 93, 94, 95, 100, 103, 105, 107, 109, 114, 118, 137, 157, 161, 162, 163, 165, 175, 176, 179, 181, 184, 186, 192, 205, 207, 209, 210, 211, 212, 213, 214, 215, 235, 236, 238, 240, 244, 246, 248, 251, 252, 255, 280, 281, 282, 283, 284, 285, 288, 289, 290, 291, 292, 294, 295, 296, 298, 299, 300, 301, 303, 305, 312, 313, 315, 317, 320, 321, 323, 324, 325, 326, 327, 328, 330], "while": [10, 45, 51, 69, 70, 71, 72, 73, 74, 75, 82, 83, 84, 85, 90, 100, 106, 109, 125, 176, 180, 181, 229, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 246, 313, 315, 324, 330], "who": [10, 105, 106, 107, 108], "whose": [22, 272, 275, 277, 279, 283, 287, 293], "wide": [4, 5, 6, 8, 11, 19, 58, 66, 67, 68, 100, 115, 180, 188, 189, 204], "wide_resnet_101": 100, "wide_resnet_50": 100, "wider": [67, 68, 120, 121], "wideresnet": 100, "width": [30, 51, 54, 67, 68, 69, 70, 71, 72, 73, 74, 75, 86, 96, 100, 121, 122, 124, 128, 129, 146, 147, 149, 150, 153, 154, 156, 157, 165, 189, 190, 210, 211, 213, 214, 218, 219, 221, 222, 224, 225, 227, 321, 323, 328], "width_coef": 30, "width_multipli": [51, 54], "window": [148, 149, 150, 152, 153, 154, 220, 221, 222, 223, 224, 225, 233, 289, 291], "wise": [80, 82, 83, 84, 85, 100, 111, 112, 114, 115, 116, 117, 118, 119, 158, 159, 160, 164, 178, 184, 185, 192, 193, 194, 195, 196, 229, 245, 258, 259, 262, 263, 264, 265, 267, 268, 279, 280, 281, 282, 283, 284, 285, 286, 288, 292, 293, 294, 295, 296, 297, 299, 300, 301, 307, 318], "within": [2, 100, 101, 102, 105, 106, 107, 108, 109, 119, 156, 157, 174, 176, 177, 178, 180, 182, 183, 185, 186, 188, 189, 190, 192, 193, 194, 200, 203, 204, 205, 206, 207, 209, 210, 211, 212, 215, 220, 221, 222, 223, 224, 225, 231, 246, 269, 283, 326, 330], "without": [10, 69, 105, 106, 107, 132, 134, 188, 189, 190, 199, 201, 244, 247, 289, 311, 313, 317], "won": 246, "work": [1, 2, 3, 10, 12, 245, 248], "workflow": [256, 330], "workload": 10, "wrap": [3, 229, 246, 304], "wrapper": 229, "www": [5, 6], "x": [10, 11, 21, 43, 47, 76, 91, 96, 100, 101, 102, 103, 105, 106, 107, 108, 109, 118, 132, 134, 157, 161, 162, 163, 165, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 220, 221, 222, 223, 224, 225, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 249, 251, 252, 253, 255, 271, 272, 287, 309, 321, 322, 323, 324, 325, 326, 327, 328], "x1": 199, "x2": 199, "x_": [204, 207, 309], "x_c": [204, 207], "x_i": 203, "x_k": 204, "xavier": [169, 170, 173, 174], "xavier_norm": 168, "xavier_uniform": 168, "xception": [46, 100], "xiao": 7, "xie": 100, "xy": 309, "x\u2081": 199, "x\u2082": 199, "y": [96, 100, 105, 106, 107, 108, 109, 157, 161, 162, 163, 175, 176, 177, 178, 179, 180, 182, 183, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 220, 221, 222, 223, 224, 225, 249, 251, 252, 253, 255, 271, 272, 309, 324], "y_": [204, 207, 309], "y_c": [204, 207], "y_i": 203, "yann": [8, 100], "yet": [10, 245], "yield": [0, 1, 103, 246], "you": [0, 53, 101, 106, 108, 109, 229, 231, 244, 246, 256, 271, 272, 273, 277, 302, 304, 319, 321, 330], "your": [53, 229, 231, 244, 246, 256, 330], "z": [100, 272, 276, 277], "zalandoresearch": 7, "zeiler": [98, 100], "zero": [17, 19, 20, 41, 101, 111, 114, 120, 121, 122, 125, 126, 127, 128, 129, 148, 149, 150, 152, 153, 154, 167, 169, 170, 171, 172, 173, 174, 175, 177, 179, 180, 182, 188, 189, 190, 192, 193, 194, 195, 196, 215, 220, 221, 222, 223, 224, 225, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 271, 272, 273, 277, 278, 283, 293, 310], "zero_grad": [104, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 257], "zeros_lik": [272, 278], "zfnet": [46, 100], "zhang": 100, "zhmoginov": 100, "zhu": 100, "zisserman": 100, "\u03c3\u1d62": 19}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "CIFAR10", "CIFAR100", "FashionMNIST", "MNIST", "Image Datasets", "Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "alexnet", "DenseNet", "densenet_121", "densenet_169", "densenet_201", "densenet_264", "EfficientNet", "efficientnet_b0", "efficientnet_b1", "efficientnet_b2", "efficientnet_b3", "efficientnet_b4", "efficientnet_b5", "efficientnet_b6", "efficientnet_b7", "Inception", "inception_v1", "inception_v3", "inception_v4", "InceptionResNet", "inception_resnet_v1", "inception_resnet_v2", "ConvNets", "LeNet", "lenet_1", "lenet_4", "lenet_5", "MobileNet", "MobileNet_V2", "MobileNet_V3", "mobilenet", "mobilenet_v2", "mobilenet_v3_large", "mobilenet_v3_small", "ResNet", "resnet_1001", "resnet_101", "resnet_152", "resnet_18", "resnet_200", "resnet_269", "resnet_34", "resnet_50", "wide_resnet_101", "wide_resnet_50", "ResNeXt", "resnext_101_32x16d", "resnext_101_32x32d", "resnext_101_32x4d", "resnext_101_32x8d", "resnext_101_64x4d", "resnext_50_32x4d", "SENet", "se_resnet_101", "se_resnet_152", "se_resnet_18", "se_resnet_34", "se_resnet_50", "se_resnext_101_32x4d", "se_resnext_101_32x8d", "se_resnext_101_64x4d", "se_resnext_50_32x4d", "SKNet", "sk_resnet_18", "sk_resnet_34", "sk_resnet_50", "sk_resnext_50_32x4d", "VGGNet", "vggnet_11", "vggnet_13", "vggnet_16", "vggnet_19", "Xception", "xception", "ZFNet", "zfnet", "lucid.models", "models.summarize", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "nn.DepthSeparableConv1d", "nn.DepthSeparableConv2d", "nn.DepthSeparableConv3d", "nn.SEModule", "nn.SelectiveKernel", "Fused Layers", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.HardSigmoid", "nn.HardSwish", "nn.LeakyReLU", "nn.ReLU", "nn.ReLU6", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Swish", "nn.Tanh", "Activation Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "nn.Upsample", "Vision Layers", "lucid.nn", "optim.Optimizer", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.types", "lucid.random.bernoulli", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.meshgrid", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.unsqueeze", "lucid.vstack", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": 245, "1d": 245, "2": 245, "2d": 245, "3": 245, "It": [244, 246], "ab": 279, "activ": [113, 131, 187, 198], "ad": 245, "adadelta": 233, "adagrad": 234, "adam": 235, "adamax": 237, "adamw": 236, "adaptive_avg_pool1d": 145, "adaptive_avg_pool2d": 146, "adaptive_avg_pool3d": 147, "adaptiveavgpool1d": 217, "adaptiveavgpool2d": 218, "adaptiveavgpool3d": 219, "add": 258, "addit": 19, "admonit": 248, "advanc": [124, 330], "alexnet": [23, 24], "algebra": 15, "algorithm": [232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242], "alias": 248, "align": 245, "alpha_dropout": 125, "alphadropout": 192, "also": 231, "anoth": 304, "arang": 269, "arcco": 280, "architectur": [23, 48, 49, 50, 67, 68, 98], "arcsin": 281, "arctan": 282, "asgd": 232, "attent": 165, "attribut": [5, 6, 7, 8, 23, 43, 47, 58, 69, 76, 86, 91, 96, 98, 102, 104, 105, 106, 107, 108, 109, 158, 159, 160, 161, 162, 163, 164, 175, 176, 179, 180, 182, 183, 184, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 257, 321, 322, 323, 324, 325, 326, 327, 328], "avg_pool1d": 148, "avg_pool2d": 149, "avg_pool3d": 150, "avgpool1d": 220, "avgpool2d": 221, "avgpool3d": 222, "axi": 245, "backpropag": 257, "backwardbatch_norm": 141, "batchnorm": 166, "batchnorm1d": 209, "batchnorm2d": 210, "batchnorm3d": 211, "bceloss": 203, "behavior": [145, 146, 147, 217, 218, 219], "benefit": 246, "bernoulli": 249, "bilinear": [132, 199], "binari": 278, "binary_cross_entropi": 135, "bottleneck": [56, 57], "broadcast": 245, "buffer": 102, "calcul": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 58, 69, 76, 86, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 124, 132, 134, 145, 146, 147, 156, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 321, 322, 323, 324, 325, 326, 327, 328], "captur": 247, "case": 248, "centercrop": 321, "choleski": 12, "cifar10": 5, "cifar100": 6, "class": [0, 1, 2, 5, 6, 7, 8, 23, 25, 30, 39, 43, 47, 51, 52, 53, 58, 69, 76, 86, 91, 96, 98, 102, 103, 104, 105, 106, 107, 108, 109, 158, 159, 160, 161, 162, 163, 164, 165, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 257, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328], "clip": 283, "co": 284, "combin": 0, "compon": [3, 10, 229], "compos": 319, "concatdataset": [0, 1], "concaten": 305, "conclus": [3, 10, 229, 244, 245, 246, 256, 320, 330], "configur": [30, 56, 57], "constant": 167, "contain": 110, "conv": 166, "conv1d": [120, 188], "conv2d": [121, 189], "conv3d": [122, 190], "convbnrelu1d": 158, "convbnrelu2d": 159, "convbnrelu3d": 160, "convnet": [46, 100], "convolut": [123, 131, 166, 191, 198], "core": 10, "cosh": 285, "creat": [104, 257, 304], "cross_entropi": 136, "crossentropyloss": 204, "cube": 286, "custom": [1, 2, 3, 103, 230, 231, 330], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 9], "defin": [2, 103, 230, 231], "definit": 248, "densenet": 25, "densenet_121": 26, "densenet_169": 27, "densenet_201": 28, "densenet_264": 29, "depthseparableconv1d": 161, "depthseparableconv2d": 162, "depthseparableconv3d": 163, "depthwis": 166, "descript": [70, 71, 72, 73, 74, 75, 87, 88, 89, 247], "det": 13, "detail": [19, 67, 68], "diag": 270, "dilat": 124, "div": 259, "dot": 260, "dropout": [126, 130, 131, 193, 197, 198], "dropout1d": [127, 194], "dropout2d": [128, 195], "dropout3d": [129, 196], "efficientnet": 30, "efficientnet_b0": 31, "efficientnet_b1": 32, "efficientnet_b2": 33, "efficientnet_b3": 34, "efficientnet_b4": 35, "efficientnet_b5": 36, "efficientnet_b6": 37, "efficientnet_b7": 38, "eig": 14, "elu": [111, 175], "empti": 271, "empty_lik": 272, "exampl": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330], "excit": 166, "exp": 287, "ey": 273, "fashionmnist": 7, "featur": [4, 10, 11, 82, 83, 84, 85, 90, 231, 256, 330], "flatten": 306, "forward": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 58, 69, 76, 86, 96, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 124, 132, 134, 145, 146, 147, 156, 158, 159, 160, 161, 162, 163, 164, 165, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 321, 322, 323, 324, 325, 326, 327, 328], "from": 304, "function": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 48, 49, 50, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 95, 97, 99, 101, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 167, 169, 170, 171, 172, 173, 174, 244, 246, 247, 249, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "fuse": 166, "futur": 4, "gelu": [112, 176], "gener": [250, 278], "get": 231, "grad_en": 244, "gradient": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 132, 134, 156, 164, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 220, 221, 222, 223, 224, 225, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "guidelin": 248, "hardsigmoid": 177, "hardswish": 178, "how": [244, 246], "hstack": 307, "huber_loss": 137, "huberloss": 205, "ident": 200, "imag": [9, 329], "incept": 39, "inception_resnet_v1": 44, "inception_resnet_v2": 45, "inception_v1": 40, "inception_v3": 41, "inception_v4": 42, "inceptionresnet": 43, "index": 257, "init": [167, 169, 170, 171, 172, 173, 174], "initi": 168, "inner": 261, "input": 304, "inspect": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242], "instance_norm": 143, "instancenorm1d": 212, "instancenorm2d": 213, "instancenorm3d": 214, "integr": [3, 229, 256, 330], "interpol": 156, "inv": 16, "iter": 257, "kaiming_norm": 169, "kaiming_uniform": 170, "kei": [3, 4, 10, 82, 83, 84, 85, 90, 229, 231, 256, 330], "kernel": 166, "layer": [166, 187, 191, 197, 198, 202, 208, 216, 226, 228], "layer_norm": 144, "layernorm": 215, "leaky_relu": 114, "leakyrelu": 179, "learn": 256, "lenet": 47, "lenet_1": 48, "lenet_4": 49, "lenet_5": 50, "limit": 10, "linalg": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22], "linear": [15, 131, 133, 134, 198, 201, 202], "list": 304, "load": 1, "log": 288, "loss": [131, 138, 198, 208], "lucid": [3, 4, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 100, 131, 229, 231, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 330], "matmul": 262, "matrix": 262, "matrix_pow": 17, "max": 289, "max_pool1d": 152, "max_pool2d": 153, "max_pool3d": 154, "maximum": 263, "maxpool1d": 223, "maxpool2d": 224, "maxpool3d": 225, "mean": 290, "mechan": 165, "meshgrid": 309, "metadata": 247, "method": [0, 1, 2, 5, 6, 7, 8, 43, 47, 91, 103, 104, 230, 257], "min": 291, "minimum": 264, "mnist": 8, "mobilenet": [51, 54], "mobilenet_v2": [52, 55], "mobilenet_v3": 53, "mobilenet_v3_larg": 56, "mobilenet_v3_smal": 57, "model": [100, 101, 229], "modul": [103, 198], "moduledict": 105, "modulelist": 106, "more": 256, "mse_loss": 139, "mseloss": 206, "mul": 265, "multipl": [0, 262], "nadam": 238, "new": 245, "newaxi": 245, "nll_loss": 140, "nllloss": 207, "nn": [102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229], "no_grad": 246, "norm": 18, "normal": [131, 142, 171, 198, 216, 322], "note": 10, "number": 250, "ones": 274, "ones_lik": 275, "oper": [15, 262, 278], "optim": [230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "organ": 229, "outer": 266, "overview": [3, 4, 10, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 59, 60, 61, 62, 63, 64, 65, 66, 77, 78, 79, 80, 81, 229, 231, 256, 330], "pad": 310, "paramet": [1, 5, 6, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 179, 180, 182, 183, 184, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 246, 247, 249, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328], "parameterdict": 107, "parameterlist": 108, "pass": 96, "perform": 257, "pinv": 19, "pipelin": [3, 330], "pitfal": [244, 246], "pool": [131, 151, 198, 226], "potenti": [244, 246], "power": 267, "properti": [104, 257], "qr": 20, "radam": 239, "rais": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22], "rand": 251, "randint": 252, "randn": 253, "random": [249, 250, 251, 252, 253, 254, 255, 256], "randomcrop": 323, "randomgrayscal": 324, "randomhorizontalflip": 325, "randomrot": 326, "randomverticalflip": 327, "ravel": 311, "reciproc": 292, "refer": [5, 6, 7, 8, 164, 231], "register_model": 247, "relu": [115, 166, 180], "relu6": 181, "repeat": 312, "reshap": 313, "resiz": 328, "resnet": 58, "resnet_1001": 59, "resnet_101": 60, "resnet_152": 61, "resnet_18": 62, "resnet_200": 63, "resnet_269": 64, "resnet_34": 65, "resnet_50": 66, "resnext": 69, "resnext_101_32x16d": 70, "resnext_101_32x32d": 71, "resnext_101_32x4d": 72, "resnext_101_32x8d": 73, "resnext_101_64x4d": 74, "resnext_50_32x4d": 75, "return": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44, 45, 48, 49, 50, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 92, 93, 94, 95, 97, 99, 101, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 165, 167, 169, 170, 171, 172, 173, 174, 181, 244, 246, 249, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "rmsprop": 240, "rotat": 157, "rprop": 241, "rule": 262, "se_resnet_101": 77, "se_resnet_152": 78, "se_resnet_18": 79, "se_resnet_34": 80, "se_resnet_50": 81, "se_resnext_101_32x4d": 82, "se_resnext_101_32x8d": 83, "se_resnext_101_64x4d": 84, "se_resnext_50_32x4d": 85, "see": 231, "seed": 254, "select": 166, "selectivekernel": 165, "selu": [116, 182], "semodul": 164, "senet": 76, "separ": 166, "sequenti": 109, "sgd": 242, "sigmoid": [117, 183], "sign": 293, "signatur": [0, 1, 2, 5, 6, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 134, 135, 136, 137, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 246, 247, 249, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328], "sin": 294, "sinh": 295, "sk_resnet_18": 87, "sk_resnet_34": 88, "sk_resnet_50": 89, "sk_resnext_50_32x4d": 90, "sknet": 86, "slice": 257, "softmax": [118, 184], "solv": 21, "sqrt": 296, "squar": 297, "squeez": [166, 314], "stack": 315, "start": 231, "state": [231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242], "sub": 268, "sum": 298, "summar": 101, "summari": 101, "svd": 22, "swish": 185, "tabl": 101, "tan": 299, "tanh": [119, 186, 300], "tensor": [245, 257, 278, 304, 308], "through": 257, "tile": 316, "totensor": 320, "trace": 301, "track": 257, "transform": [319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330], "transpos": 302, "type": 248, "unari": 278, "unfold": 124, "uniform": [172, 255], "unsqueez": 317, "upsampl": 227, "us": [1, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 248, 304], "usag": [4, 10, 40, 41, 42, 44, 45, 47, 48, 49, 50, 82, 83, 84, 85, 90, 102, 157, 244, 245, 246, 248, 309, 319, 320, 330], "util": [131, 155], "utilit": 308, "var": 303, "vggnet": 91, "vggnet_11": 92, "vggnet_13": 93, "vggnet_16": 94, "vggnet_19": 95, "vision": [198, 228], "vstack": 318, "weight": 168, "why": 248, "wide_resnet_101": 67, "wide_resnet_50": 68, "work": [4, 244, 246], "xavier_norm": 173, "xavier_uniform": 174, "xception": [96, 97], "zero": 276, "zeros_lik": 277, "zfnet": [98, 99]}})