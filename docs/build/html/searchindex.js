Search.setIndex({"alltitles": {"@ Operator": [[242, "operator"]], "Activation Functions": [[99, null]], "Activation Layers": [[170, null], [181, null]], "Additional Details": [[17, "additional-details"]], "Admonitions and Usage Guidelines": [[229, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[110, "advanced-example-with-dilation"]], "Advanced Features": [[310, "advanced-features"]], "AlexNet": [[21, null]], "Algorithm": [[213, "algorithm"], [214, "algorithm"], [215, "algorithm"], [216, "algorithm"], [217, "algorithm"], [218, "algorithm"], [219, "algorithm"], [220, "algorithm"], [221, "algorithm"], [222, "algorithm"], [223, "algorithm"]], "Architecture": [[21, "architecture"], [37, "architecture"], [38, "architecture"], [39, "architecture"], [84, "architecture"]], "Architecture Details": [[53, "architecture-details"], [54, "architecture-details"]], "Attention Mechanism": [[151, "attention-mechanism"]], "Attributes": [[5, "attributes"], [6, "attributes"], [21, "attributes"], [32, "attributes"], [36, "attributes"], [44, "attributes"], [55, "attributes"], [62, "attributes"], [72, "attributes"], [77, "attributes"], [82, "attributes"], [84, "attributes"], [88, "attributes"], [90, "attributes"], [91, "attributes"], [92, "attributes"], [93, "attributes"], [94, "attributes"], [95, "attributes"], [144, "attributes"], [145, "attributes"], [146, "attributes"], [147, "attributes"], [148, "attributes"], [149, "attributes"], [150, "attributes"], [161, "attributes"], [162, "attributes"], [163, "attributes"], [164, "attributes"], [166, "attributes"], [167, "attributes"], [168, "attributes"], [169, "attributes"], [171, "attributes"], [172, "attributes"], [173, "attributes"], [175, "attributes"], [176, "attributes"], [177, "attributes"], [178, "attributes"], [179, "attributes"], [182, "attributes"], [183, "attributes"], [184, "attributes"], [186, "attributes"], [187, "attributes"], [188, "attributes"], [189, "attributes"], [190, "attributes"], [192, "attributes"], [193, "attributes"], [194, "attributes"], [195, "attributes"], [196, "attributes"], [197, "attributes"], [198, "attributes"], [200, "attributes"], [201, "attributes"], [202, "attributes"], [203, "attributes"], [204, "attributes"], [205, "attributes"], [206, "attributes"], [207, "attributes"], [208, "attributes"], [237, "attributes"], [301, "attributes"], [302, "attributes"], [303, "attributes"], [304, "attributes"], [305, "attributes"], [306, "attributes"], [307, "attributes"], [308, "attributes"]], "Backward Gradient Calculation": [[10, "backward-gradient-calculation"], [11, "backward-gradient-calculation"], [12, "backward-gradient-calculation"], [14, "backward-gradient-calculation"], [15, "backward-gradient-calculation"], [16, "backward-gradient-calculation"], [17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [20, "backward-gradient-calculation"], [91, "backward-gradient-calculation"], [92, "backward-gradient-calculation"], [93, "backward-gradient-calculation"], [94, "backward-gradient-calculation"], [95, "backward-gradient-calculation"], [97, "backward-gradient-calculation"], [98, "backward-gradient-calculation"], [100, "backward-gradient-calculation"], [101, "backward-gradient-calculation"], [102, "backward-gradient-calculation"], [103, "backward-gradient-calculation"], [104, "backward-gradient-calculation"], [105, "backward-gradient-calculation"], [118, "backward-gradient-calculation"], [120, "backward-gradient-calculation"], [142, "backward-gradient-calculation"], [150, "backward-gradient-calculation"], [160, "backward-gradient-calculation"], [161, "backward-gradient-calculation"], [162, "backward-gradient-calculation"], [163, "backward-gradient-calculation"], [164, "backward-gradient-calculation"], [166, "backward-gradient-calculation"], [167, "backward-gradient-calculation"], [168, "backward-gradient-calculation"], [169, "backward-gradient-calculation"], [171, "backward-gradient-calculation"], [172, "backward-gradient-calculation"], [173, "backward-gradient-calculation"], [175, "backward-gradient-calculation"], [176, "backward-gradient-calculation"], [177, "backward-gradient-calculation"], [178, "backward-gradient-calculation"], [179, "backward-gradient-calculation"], [182, "backward-gradient-calculation"], [183, "backward-gradient-calculation"], [184, "backward-gradient-calculation"], [186, "backward-gradient-calculation"], [187, "backward-gradient-calculation"], [188, "backward-gradient-calculation"], [189, "backward-gradient-calculation"], [190, "backward-gradient-calculation"], [192, "backward-gradient-calculation"], [193, "backward-gradient-calculation"], [194, "backward-gradient-calculation"], [195, "backward-gradient-calculation"], [196, "backward-gradient-calculation"], [197, "backward-gradient-calculation"], [198, "backward-gradient-calculation"], [203, "backward-gradient-calculation"], [204, "backward-gradient-calculation"], [205, "backward-gradient-calculation"], [206, "backward-gradient-calculation"], [207, "backward-gradient-calculation"], [208, "backward-gradient-calculation"], [238, "backward-gradient-calculation"], [239, "backward-gradient-calculation"], [240, "backward-gradient-calculation"], [241, "backward-gradient-calculation"], [242, "backward-gradient-calculation"], [243, "backward-gradient-calculation"], [244, "backward-gradient-calculation"], [245, "backward-gradient-calculation"], [246, "backward-gradient-calculation"], [247, "backward-gradient-calculation"], [248, "backward-gradient-calculation"], [259, "backward-gradient-calculation"], [260, "backward-gradient-calculation"], [261, "backward-gradient-calculation"], [262, "backward-gradient-calculation"], [263, "backward-gradient-calculation"], [264, "backward-gradient-calculation"], [265, "backward-gradient-calculation"], [266, "backward-gradient-calculation"], [267, "backward-gradient-calculation"], [268, "backward-gradient-calculation"], [269, "backward-gradient-calculation"], [270, "backward-gradient-calculation"], [271, "backward-gradient-calculation"], [272, "backward-gradient-calculation"], [273, "backward-gradient-calculation"], [274, "backward-gradient-calculation"], [275, "backward-gradient-calculation"], [276, "backward-gradient-calculation"], [277, "backward-gradient-calculation"], [278, "backward-gradient-calculation"], [279, "backward-gradient-calculation"], [280, "backward-gradient-calculation"], [281, "backward-gradient-calculation"], [282, "backward-gradient-calculation"], [283, "backward-gradient-calculation"], [285, "backward-gradient-calculation"], [287, "backward-gradient-calculation"], [289, "backward-gradient-calculation"], [290, "backward-gradient-calculation"], [291, "backward-gradient-calculation"], [292, "backward-gradient-calculation"], [293, "backward-gradient-calculation"], [294, "backward-gradient-calculation"], [295, "backward-gradient-calculation"], [296, "backward-gradient-calculation"], [297, "backward-gradient-calculation"], [298, "backward-gradient-calculation"]], "Behavior": [[131, "behavior"], [132, "behavior"], [133, "behavior"], [200, "behavior"], [201, "behavior"], [202, "behavior"]], "Benefits": [[227, "benefits"]], "Binary Functions": [[258, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [6, "class-signature"], [21, "class-signature"], [23, "class-signature"], [28, "class-signature"], [32, "class-signature"], [36, "class-signature"], [40, "class-signature"], [41, "class-signature"], [44, "class-signature"], [55, "class-signature"], [62, "class-signature"], [72, "class-signature"], [77, "class-signature"], [82, "class-signature"], [84, "class-signature"], [88, "class-signature"], [89, "class-signature"], [90, "class-signature"], [91, "class-signature"], [92, "class-signature"], [93, "class-signature"], [94, "class-signature"], [95, "class-signature"], [144, "class-signature"], [145, "class-signature"], [146, "class-signature"], [147, "class-signature"], [148, "class-signature"], [149, "class-signature"], [150, "class-signature"], [151, "class-signature"], [161, "class-signature"], [162, "class-signature"], [163, "class-signature"], [164, "class-signature"], [165, "class-signature"], [166, "class-signature"], [167, "class-signature"], [168, "class-signature"], [169, "class-signature"], [171, "class-signature"], [172, "class-signature"], [173, "class-signature"], [175, "class-signature"], [176, "class-signature"], [177, "class-signature"], [178, "class-signature"], [179, "class-signature"], [182, "class-signature"], [183, "class-signature"], [184, "class-signature"], [186, "class-signature"], [187, "class-signature"], [188, "class-signature"], [189, "class-signature"], [190, "class-signature"], [192, "class-signature"], [193, "class-signature"], [194, "class-signature"], [195, "class-signature"], [196, "class-signature"], [197, "class-signature"], [198, "class-signature"], [200, "class-signature"], [201, "class-signature"], [202, "class-signature"], [203, "class-signature"], [204, "class-signature"], [205, "class-signature"], [206, "class-signature"], [207, "class-signature"], [208, "class-signature"], [211, "class-signature"], [213, "class-signature"], [214, "class-signature"], [215, "class-signature"], [216, "class-signature"], [217, "class-signature"], [218, "class-signature"], [219, "class-signature"], [220, "class-signature"], [221, "class-signature"], [222, "class-signature"], [223, "class-signature"], [237, "class-signature"], [299, "class-signature"], [300, "class-signature"], [301, "class-signature"], [302, "class-signature"], [303, "class-signature"], [304, "class-signature"], [305, "class-signature"], [306, "class-signature"], [307, "class-signature"], [308, "class-signature"]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [8, "conclusion"], [210, "conclusion"], [225, "conclusion"], [226, "conclusion"], [227, "conclusion"], [236, "conclusion"], [300, "conclusion"], [310, "conclusion"]], "Containers": [[96, null]], "Conv-BatchNorm-ReLU": [[152, null]], "ConvNets": [[35, null], [86, "convnets"]], "Convolution Functions": [[109, null], [117, null]], "Convolution Layers": [[174, null], [181, null]], "Core Components": [[8, "core-components"]], "Create a Tensor from a list": [[284, null]], "Creating a Parameter": [[90, null]], "Creating a tensor with gradient tracking": [[237, null]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[310, "custom-pipelines"]], "Defining a Custom Optimizer": [[212, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[89, null]], "Defining a custom optimizer": [[211, null]], "DenseNet": [[23, null]], "Depthwise Separable Convolution": [[152, null]], "Description": [[56, "description"], [57, "description"], [58, "description"], [59, "description"], [60, "description"], [61, "description"], [73, "description"], [74, "description"], [75, "description"], [228, "description"]], "Dropout Functions": [[116, null], [117, null]], "Dropout Layers": [[180, null], [181, null]], "Example": [[3, null], [3, null], [3, null], [10, "example"], [11, "example"], [12, "example"], [14, "example"], [15, "example"], [16, "example"], [17, "example"], [18, "example"], [19, "example"], [20, "example"], [42, "example"], [43, "example"], [110, "example"], [210, null], [210, null], [210, null], [225, "example"], [227, "example"], [231, "example"], [232, "example"], [233, "example"], [234, "example"], [235, "example"], [236, null], [236, null], [236, null], [249, "example"], [250, "example"], [251, "example"], [252, "example"], [253, "example"], [254, "example"], [255, "example"], [256, "example"], [257, "example"], [259, "example"], [260, "example"], [261, "example"], [262, "example"], [263, "example"], [264, "example"], [265, "example"], [266, "example"], [268, "example"], [270, "example"], [272, "example"], [273, "example"], [274, "example"], [275, "example"], [276, "example"], [277, "example"], [278, "example"], [279, "example"], [280, "example"], [281, "example"], [282, "example"], [283, "example"], [285, "example"], [287, "example"], [291, "example"], [293, "example"], [294, "example"], [295, "example"], [297, "example"], [298, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[226, null]], "Example 2: Adding a new axis to a 2D tensor": [[226, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[226, null]], "Example Usage": [[8, "example-usage"], [29, "example-usage"], [30, "example-usage"], [31, "example-usage"], [33, "example-usage"], [34, "example-usage"], [36, "example-usage"], [37, "example-usage"], [38, "example-usage"], [39, "example-usage"], [68, "example-usage"], [69, "example-usage"], [70, "example-usage"], [71, "example-usage"], [76, "example-usage"], [143, "example-usage"], [299, "example-usage"], [300, "example-usage"], [310, "example-usage"]], "Example Use Cases": [[229, "example-use-cases"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [6, "examples"], [9, "examples"], [21, "examples"], [22, "examples"], [23, "examples"], [24, "examples"], [25, "examples"], [26, "examples"], [27, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [47, "examples"], [48, "examples"], [49, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [53, "examples"], [54, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [60, "examples"], [61, "examples"], [63, "examples"], [64, "examples"], [65, "examples"], [66, "examples"], [67, "examples"], [73, "examples"], [74, "examples"], [75, "examples"], [77, "examples"], [78, "examples"], [79, "examples"], [80, "examples"], [81, "examples"], [82, "examples"], [83, "examples"], [84, "examples"], [85, "examples"], [87, "examples"], [88, "examples"], [89, "examples"], [90, "examples"], [91, "examples"], [92, "examples"], [93, "examples"], [94, "examples"], [95, "examples"], [97, "examples"], [98, "examples"], [100, "examples"], [101, "examples"], [102, "examples"], [103, "examples"], [104, "examples"], [105, "examples"], [106, "examples"], [107, "examples"], [108, "examples"], [111, "examples"], [112, "examples"], [113, "examples"], [114, "examples"], [115, "examples"], [118, "examples"], [120, "examples"], [121, "examples"], [122, "examples"], [123, "examples"], [125, "examples"], [126, "examples"], [127, "examples"], [129, "examples"], [130, "examples"], [131, "examples"], [132, "examples"], [133, "examples"], [134, "examples"], [135, "examples"], [136, "examples"], [138, "examples"], [139, "examples"], [140, "examples"], [142, "examples"], [144, "examples"], [145, "examples"], [146, "examples"], [147, "examples"], [148, "examples"], [149, "examples"], [150, "examples"], [151, "examples"], [153, "examples"], [155, "examples"], [156, "examples"], [157, "examples"], [158, "examples"], [159, "examples"], [160, "examples"], [161, "examples"], [162, "examples"], [163, "examples"], [164, "examples"], [165, "examples"], [166, "examples"], [167, "examples"], [168, "examples"], [169, "examples"], [171, "examples"], [172, "examples"], [173, "examples"], [175, "examples"], [176, "examples"], [177, "examples"], [178, "examples"], [179, "examples"], [182, "examples"], [183, "examples"], [184, "examples"], [186, "examples"], [187, "examples"], [188, "examples"], [189, "examples"], [190, "examples"], [192, "examples"], [193, "examples"], [194, "examples"], [195, "examples"], [196, "examples"], [197, "examples"], [198, "examples"], [200, "examples"], [201, "examples"], [202, "examples"], [203, "examples"], [204, "examples"], [205, "examples"], [206, "examples"], [207, "examples"], [208, "examples"], [211, "examples"], [212, "examples"], [213, "examples"], [214, "examples"], [215, "examples"], [216, "examples"], [217, "examples"], [218, "examples"], [219, "examples"], [220, "examples"], [221, "examples"], [222, "examples"], [223, "examples"], [228, "examples"], [237, "examples"], [238, "examples"], [239, "examples"], [240, "examples"], [241, "examples"], [243, "examples"], [244, "examples"], [245, "examples"], [246, "examples"], [247, "examples"], [248, "examples"], [267, "examples"], [269, "examples"], [271, "examples"], [284, "examples"], [286, "examples"], [289, "examples"], [290, "examples"], [292, "examples"], [296, "examples"], [301, "examples"], [302, "examples"], [303, "examples"], [304, "examples"], [305, "examples"], [306, "examples"], [307, "examples"], [308, "examples"]], "FashionMNIST": [[5, null]], "Features": [[9, "features"]], "Forward Calculation": [[10, "forward-calculation"], [11, "forward-calculation"], [12, "forward-calculation"], [14, "forward-calculation"], [15, "forward-calculation"], [16, "forward-calculation"], [17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [20, "forward-calculation"], [44, "forward-calculation"], [55, "forward-calculation"], [62, "forward-calculation"], [72, "forward-calculation"], [91, "forward-calculation"], [92, "forward-calculation"], [93, "forward-calculation"], [94, "forward-calculation"], [95, "forward-calculation"], [97, "forward-calculation"], [98, "forward-calculation"], [100, "forward-calculation"], [101, "forward-calculation"], [102, "forward-calculation"], [103, "forward-calculation"], [104, "forward-calculation"], [105, "forward-calculation"], [110, "forward-calculation"], [118, "forward-calculation"], [120, "forward-calculation"], [131, "forward-calculation"], [132, "forward-calculation"], [133, "forward-calculation"], [142, "forward-calculation"], [144, "forward-calculation"], [145, "forward-calculation"], [146, "forward-calculation"], [147, "forward-calculation"], [148, "forward-calculation"], [149, "forward-calculation"], [150, "forward-calculation"], [151, "forward-calculation"], [155, "forward-calculation"], [156, "forward-calculation"], [159, "forward-calculation"], [160, "forward-calculation"], [161, "forward-calculation"], [162, "forward-calculation"], [163, "forward-calculation"], [164, "forward-calculation"], [165, "forward-calculation"], [166, "forward-calculation"], [167, "forward-calculation"], [168, "forward-calculation"], [169, "forward-calculation"], [171, "forward-calculation"], [172, "forward-calculation"], [173, "forward-calculation"], [175, "forward-calculation"], [176, "forward-calculation"], [177, "forward-calculation"], [178, "forward-calculation"], [179, "forward-calculation"], [182, "forward-calculation"], [183, "forward-calculation"], [184, "forward-calculation"], [186, "forward-calculation"], [187, "forward-calculation"], [188, "forward-calculation"], [189, "forward-calculation"], [190, "forward-calculation"], [192, "forward-calculation"], [193, "forward-calculation"], [194, "forward-calculation"], [195, "forward-calculation"], [196, "forward-calculation"], [197, "forward-calculation"], [198, "forward-calculation"], [200, "forward-calculation"], [201, "forward-calculation"], [202, "forward-calculation"], [203, "forward-calculation"], [204, "forward-calculation"], [205, "forward-calculation"], [206, "forward-calculation"], [207, "forward-calculation"], [208, "forward-calculation"], [238, "forward-calculation"], [239, "forward-calculation"], [240, "forward-calculation"], [241, "forward-calculation"], [242, "forward-calculation"], [243, "forward-calculation"], [244, "forward-calculation"], [245, "forward-calculation"], [246, "forward-calculation"], [247, "forward-calculation"], [248, "forward-calculation"], [259, "forward-calculation"], [260, "forward-calculation"], [261, "forward-calculation"], [262, "forward-calculation"], [263, "forward-calculation"], [264, "forward-calculation"], [265, "forward-calculation"], [266, "forward-calculation"], [267, "forward-calculation"], [268, "forward-calculation"], [269, "forward-calculation"], [270, "forward-calculation"], [271, "forward-calculation"], [272, "forward-calculation"], [273, "forward-calculation"], [274, "forward-calculation"], [275, "forward-calculation"], [276, "forward-calculation"], [277, "forward-calculation"], [278, "forward-calculation"], [279, "forward-calculation"], [280, "forward-calculation"], [281, "forward-calculation"], [282, "forward-calculation"], [283, "forward-calculation"], [285, "forward-calculation"], [287, "forward-calculation"], [289, "forward-calculation"], [290, "forward-calculation"], [291, "forward-calculation"], [292, "forward-calculation"], [293, "forward-calculation"], [294, "forward-calculation"], [295, "forward-calculation"], [296, "forward-calculation"], [297, "forward-calculation"], [298, "forward-calculation"], [301, "forward-calculation"], [302, "forward-calculation"], [303, "forward-calculation"], [304, "forward-calculation"], [305, "forward-calculation"], [306, "forward-calculation"], [307, "forward-calculation"], [308, "forward-calculation"]], "Forward Pass": [[82, "forward-pass"]], "Function Signature": [[10, "function-signature"], [11, "function-signature"], [12, "function-signature"], [14, "function-signature"], [15, "function-signature"], [16, "function-signature"], [17, "function-signature"], [18, "function-signature"], [19, "function-signature"], [20, "function-signature"], [22, "function-signature"], [24, "function-signature"], [25, "function-signature"], [26, "function-signature"], [27, "function-signature"], [29, "function-signature"], [30, "function-signature"], [31, "function-signature"], [33, "function-signature"], [34, "function-signature"], [37, "function-signature"], [38, "function-signature"], [39, "function-signature"], [42, "function-signature"], [43, "function-signature"], [45, "function-signature"], [46, "function-signature"], [47, "function-signature"], [48, "function-signature"], [49, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [53, "function-signature"], [54, "function-signature"], [56, "function-signature"], [57, "function-signature"], [58, "function-signature"], [59, "function-signature"], [60, "function-signature"], [61, "function-signature"], [63, "function-signature"], [64, "function-signature"], [65, "function-signature"], [66, "function-signature"], [67, "function-signature"], [68, "function-signature"], [69, "function-signature"], [70, "function-signature"], [71, "function-signature"], [73, "function-signature"], [74, "function-signature"], [75, "function-signature"], [76, "function-signature"], [78, "function-signature"], [79, "function-signature"], [80, "function-signature"], [81, "function-signature"], [83, "function-signature"], [85, "function-signature"], [87, "function-signature"], [97, "function-signature"], [98, "function-signature"], [100, "function-signature"], [101, "function-signature"], [102, "function-signature"], [103, "function-signature"], [104, "function-signature"], [105, "function-signature"], [106, "function-signature"], [107, "function-signature"], [108, "function-signature"], [110, "function-signature"], [111, "function-signature"], [112, "function-signature"], [113, "function-signature"], [114, "function-signature"], [115, "function-signature"], [118, "function-signature"], [120, "function-signature"], [121, "function-signature"], [122, "function-signature"], [123, "function-signature"], [125, "function-signature"], [126, "function-signature"], [127, "function-signature"], [129, "function-signature"], [130, "function-signature"], [131, "function-signature"], [132, "function-signature"], [133, "function-signature"], [134, "function-signature"], [135, "function-signature"], [136, "function-signature"], [138, "function-signature"], [139, "function-signature"], [140, "function-signature"], [142, "function-signature"], [143, "function-signature"], [153, "function-signature"], [155, "function-signature"], [156, "function-signature"], [157, "function-signature"], [158, "function-signature"], [159, "function-signature"], [160, "function-signature"], [225, "function-signature"], [227, "function-signature"], [228, "function-signature"], [231, "function-signature"], [232, "function-signature"], [233, "function-signature"], [234, "function-signature"], [235, "function-signature"], [238, "function-signature"], [239, "function-signature"], [240, "function-signature"], [241, "function-signature"], [242, "function-signature"], [243, "function-signature"], [244, "function-signature"], [245, "function-signature"], [246, "function-signature"], [247, "function-signature"], [248, "function-signature"], [249, "function-signature"], [250, "function-signature"], [251, "function-signature"], [252, "function-signature"], [253, "function-signature"], [254, "function-signature"], [255, "function-signature"], [256, "function-signature"], [257, "function-signature"], [259, "function-signature"], [260, "function-signature"], [261, "function-signature"], [262, "function-signature"], [263, "function-signature"], [264, "function-signature"], [265, "function-signature"], [266, "function-signature"], [267, "function-signature"], [268, "function-signature"], [269, "function-signature"], [270, "function-signature"], [271, "function-signature"], [272, "function-signature"], [273, "function-signature"], [274, "function-signature"], [275, "function-signature"], [276, "function-signature"], [277, "function-signature"], [278, "function-signature"], [279, "function-signature"], [280, "function-signature"], [281, "function-signature"], [282, "function-signature"], [283, "function-signature"], [284, "function-signature"], [285, "function-signature"], [286, "function-signature"], [287, "function-signature"], [289, "function-signature"], [290, "function-signature"], [291, "function-signature"], [292, "function-signature"], [293, "function-signature"], [294, "function-signature"], [295, "function-signature"], [296, "function-signature"], [297, "function-signature"], [298, "function-signature"]], "Fused Layers": [[152, null]], "Future Work": [[4, "future-work"]], "Getting Started": [[212, "getting-started"]], "How It Works": [[225, "how-it-works"], [227, "how-it-works"]], "Image Datasets": [[7, null]], "Image Transformations": [[309, null]], "Inception": [[28, null]], "InceptionResNet": [[32, null]], "Indexing and slicing": [[237, null]], "Inspecting Optimizer State": [[212, null], [213, null], [214, null], [215, null], [216, null], [217, null], [218, null], [219, null], [220, null], [221, null], [222, null], [223, null]], "Integration with lucid": [[3, "integration-with-lucid"], [210, "integration-with-lucid"], [236, "integration-with-lucid"], [310, "integration-with-lucid"]], "Iterating through a tensor": [[237, null]], "Key Components": [[3, "key-components"], [210, "key-components"]], "Key Features": [[4, "key-features"], [8, "key-features"], [68, "key-features"], [69, "key-features"], [70, "key-features"], [71, "key-features"], [76, "key-features"], [212, "key-features"], [236, "key-features"]], "Key Transformations": [[310, "key-transformations"]], "LeNet": [[36, null]], "Learn More": [[236, null]], "Limitations": [[8, "limitations"]], "Linear Algebra Operations": [[13, null]], "Linear Functions": [[117, null], [119, null]], "Linear Layers": [[181, null], [185, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[117, null], [124, null]], "Loss Layers": [[181, null], [191, null]], "Lucid": [[8, null]], "MNIST": [[6, null]], "Matrix Multiplication Rules": [[242, "matrix-multiplication-rules"]], "Metadata Captured": [[228, "metadata-captured"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [6, "methods"], [32, "methods"], [36, "methods"], [77, "methods"], [89, "methods"], [90, "methods"], [211, "methods"], [237, "methods"]], "MobileNet": [[40, null]], "MobileNet_V2": [[41, null]], "Modules": [[181, null]], "Normalization Functions": [[117, null], [128, null]], "Normalization Layers": [[181, null], [199, null]], "Notes": [[8, "notes"]], "Optimizers": [[224, null]], "Organizing Models": [[210, "organizing-models"]], "Overview": [[3, "overview"], [4, "overview"], [8, "overview"], [28, "overview"], [29, "overview"], [30, "overview"], [31, "overview"], [32, "overview"], [33, "overview"], [34, "overview"], [36, "overview"], [37, "overview"], [38, "overview"], [39, "overview"], [40, "overview"], [41, "overview"], [45, "overview"], [46, "overview"], [47, "overview"], [48, "overview"], [49, "overview"], [50, "overview"], [51, "overview"], [52, "overview"], [63, "overview"], [64, "overview"], [65, "overview"], [66, "overview"], [67, "overview"], [210, "overview"], [212, "overview"], [236, "overview"], [310, "overview"]], "Parameters": [[1, "parameters"], [5, "parameters"], [6, "parameters"], [10, "parameters"], [11, "parameters"], [12, "parameters"], [14, "parameters"], [15, "parameters"], [16, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [20, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [36, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [84, "parameters"], [85, "parameters"], [87, "parameters"], [88, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [97, "parameters"], [98, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [104, "parameters"], [105, "parameters"], [106, "parameters"], [107, "parameters"], [108, "parameters"], [110, "parameters"], [111, "parameters"], [112, "parameters"], [113, "parameters"], [114, "parameters"], [115, "parameters"], [118, "parameters"], [120, "parameters"], [121, "parameters"], [122, "parameters"], [123, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [153, "parameters"], [155, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"], [159, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [163, "parameters"], [164, "parameters"], [166, "parameters"], [167, "parameters"], [168, "parameters"], [169, "parameters"], [171, "parameters"], [172, "parameters"], [173, "parameters"], [175, "parameters"], [176, "parameters"], [177, "parameters"], [178, "parameters"], [179, "parameters"], [182, "parameters"], [183, "parameters"], [184, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [189, "parameters"], [190, "parameters"], [192, "parameters"], [193, "parameters"], [194, "parameters"], [195, "parameters"], [196, "parameters"], [197, "parameters"], [198, "parameters"], [200, "parameters"], [201, "parameters"], [202, "parameters"], [203, "parameters"], [204, "parameters"], [205, "parameters"], [206, "parameters"], [207, "parameters"], [208, "parameters"], [213, "parameters"], [214, "parameters"], [215, "parameters"], [216, "parameters"], [217, "parameters"], [218, "parameters"], [219, "parameters"], [220, "parameters"], [221, "parameters"], [222, "parameters"], [223, "parameters"], [227, "parameters"], [228, "parameters"], [231, "parameters"], [232, "parameters"], [233, "parameters"], [234, "parameters"], [235, "parameters"], [237, "parameters"], [238, "parameters"], [239, "parameters"], [240, "parameters"], [241, "parameters"], [242, "parameters"], [243, "parameters"], [244, "parameters"], [245, "parameters"], [246, "parameters"], [247, "parameters"], [248, "parameters"], [249, "parameters"], [250, "parameters"], [251, "parameters"], [252, "parameters"], [253, "parameters"], [254, "parameters"], [255, "parameters"], [256, "parameters"], [257, "parameters"], [259, "parameters"], [260, "parameters"], [261, "parameters"], [262, "parameters"], [263, "parameters"], [264, "parameters"], [265, "parameters"], [266, "parameters"], [267, "parameters"], [268, "parameters"], [269, "parameters"], [270, "parameters"], [271, "parameters"], [272, "parameters"], [273, "parameters"], [274, "parameters"], [275, "parameters"], [276, "parameters"], [277, "parameters"], [278, "parameters"], [279, "parameters"], [280, "parameters"], [281, "parameters"], [282, "parameters"], [283, "parameters"], [284, "parameters"], [285, "parameters"], [286, "parameters"], [287, "parameters"], [289, "parameters"], [290, "parameters"], [291, "parameters"], [292, "parameters"], [293, "parameters"], [294, "parameters"], [295, "parameters"], [296, "parameters"], [297, "parameters"], [298, "parameters"], [299, "parameters"], [300, "parameters"], [301, "parameters"], [302, "parameters"], [303, "parameters"], [304, "parameters"], [305, "parameters"], [306, "parameters"], [307, "parameters"], [308, "parameters"]], "Performing backpropagation": [[237, null]], "Pooling Functions": [[117, null], [137, null]], "Pooling Layers": [[181, null], [209, null]], "Potential Pitfalls": [[225, "potential-pitfalls"], [227, "potential-pitfalls"]], "Properties": [[90, "properties"], [237, "properties"]], "Raises": [[10, "raises"], [11, "raises"], [12, "raises"], [14, "raises"], [15, "raises"], [16, "raises"], [17, "raises"], [18, "raises"], [19, "raises"], [20, "raises"]], "Random Number Generations": [[230, null]], "References": [[5, "references"], [6, "references"], [150, "references"], [212, "references"]], "ResNeXt": [[55, null]], "ResNet": [[44, null]], "Returns": [[10, "returns"], [11, "returns"], [12, "returns"], [14, "returns"], [15, "returns"], [16, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [20, "returns"], [22, "returns"], [24, "returns"], [25, "returns"], [26, "returns"], [27, "returns"], [29, "returns"], [30, "returns"], [31, "returns"], [33, "returns"], [34, "returns"], [37, "returns"], [38, "returns"], [39, "returns"], [42, "returns"], [43, "returns"], [45, "returns"], [46, "returns"], [47, "returns"], [48, "returns"], [49, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [53, "returns"], [54, "returns"], [56, "returns"], [57, "returns"], [58, "returns"], [59, "returns"], [60, "returns"], [61, "returns"], [63, "returns"], [64, "returns"], [65, "returns"], [66, "returns"], [67, "returns"], [68, "returns"], [69, "returns"], [70, "returns"], [71, "returns"], [73, "returns"], [74, "returns"], [75, "returns"], [76, "returns"], [78, "returns"], [79, "returns"], [80, "returns"], [81, "returns"], [83, "returns"], [85, "returns"], [87, "returns"], [97, "returns"], [98, "returns"], [100, "returns"], [101, "returns"], [102, "returns"], [103, "returns"], [104, "returns"], [105, "returns"], [106, "returns"], [107, "returns"], [108, "returns"], [110, "returns"], [111, "returns"], [112, "returns"], [113, "returns"], [114, "returns"], [115, "returns"], [118, "returns"], [120, "returns"], [121, "returns"], [122, "returns"], [123, "returns"], [125, "returns"], [126, "returns"], [127, "returns"], [129, "returns"], [130, "returns"], [131, "returns"], [132, "returns"], [133, "returns"], [134, "returns"], [135, "returns"], [136, "returns"], [138, "returns"], [139, "returns"], [140, "returns"], [142, "returns"], [143, "returns"], [151, "returns"], [153, "returns"], [155, "returns"], [156, "returns"], [157, "returns"], [158, "returns"], [159, "returns"], [160, "returns"], [165, "returns"], [225, "returns"], [227, "returns"], [231, "returns"], [232, "returns"], [233, "returns"], [234, "returns"], [235, "returns"], [238, "returns"], [239, "returns"], [240, "returns"], [241, "returns"], [242, "returns"], [243, "returns"], [244, "returns"], [245, "returns"], [246, "returns"], [247, "returns"], [248, "returns"], [249, "returns"], [250, "returns"], [251, "returns"], [252, "returns"], [253, "returns"], [254, "returns"], [255, "returns"], [256, "returns"], [257, "returns"], [259, "returns"], [260, "returns"], [261, "returns"], [262, "returns"], [263, "returns"], [264, "returns"], [265, "returns"], [266, "returns"], [267, "returns"], [268, "returns"], [269, "returns"], [270, "returns"], [271, "returns"], [272, "returns"], [273, "returns"], [274, "returns"], [275, "returns"], [276, "returns"], [277, "returns"], [278, "returns"], [279, "returns"], [280, "returns"], [281, "returns"], [282, "returns"], [283, "returns"], [284, "returns"], [285, "returns"], [286, "returns"], [287, "returns"], [289, "returns"], [290, "returns"], [291, "returns"], [292, "returns"], [293, "returns"], [294, "returns"], [295, "returns"], [296, "returns"], [297, "returns"], [298, "returns"]], "SENet": [[62, null]], "SKNet": [[72, null]], "See Also": [[212, "see-also"]], "Selective Kernel": [[152, null]], "Squeeze-and-Excitation": [[152, null]], "Summary Table": [[87, "summary-table"]], "Tensor Generating Functions": [[258, null]], "Tensor Operations": [[258, null]], "Tensor Utilites": [[288, null]], "Type Definitions": [[229, "type-definitions"]], "Unary Functions": [[258, null]], "Usage": [[4, "usage"], [88, "usage"], [143, "usage"], [225, "usage"], [226, "usage"], [227, "usage"], [289, "usage"], [299, "usage"], [300, "usage"], [310, "usage"]], "Use another Tensor as input": [[284, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using the ASGD Optimizer": [[213, null]], "Using the Adadelta Optimizer": [[214, null]], "Using the Adagrad Optimizer": [[215, null]], "Using the Adam Optimizer": [[216, null]], "Using the AdamW Optimizer": [[217, null]], "Using the Adamax Optimizer": [[218, null]], "Using the NAdam Optimizer": [[219, null]], "Using the RAdam Optimizer": [[220, null]], "Using the RMSprop Optimizer": [[221, null]], "Using the Rprop Optimizer": [[222, null]], "Using the SGD Optimizer": [[223, null]], "Utility Functions": [[117, null], [141, null]], "VGGNet": [[77, null]], "Weight Initializations": [[154, null]], "Why Use Type Aliases?": [[229, null]], "Xception": [[82, null]], "ZFNet": [[84, null]], "activation Functions": [[117, null]], "alexnet": [[22, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "densenet_121": [[24, null]], "densenet_169": [[25, null]], "densenet_201": [[26, null]], "densenet_264": [[27, null]], "inception_resnet_v1": [[33, null]], "inception_resnet_v2": [[34, null]], "inception_v1": [[29, null]], "inception_v3": [[30, null]], "inception_v4": [[31, null]], "lenet_1": [[37, null]], "lenet_4": [[38, null]], "lenet_5": [[39, null]], "lucid.Tensor": [[237, null]], "lucid.abs": [[259, null]], "lucid.add": [[238, null]], "lucid.arange": [[249, null]], "lucid.arccos": [[260, null]], "lucid.arcsin": [[261, null]], "lucid.arctan": [[262, null]], "lucid.clip": [[263, null]], "lucid.concatenate": [[285, null]], "lucid.cos": [[264, null]], "lucid.cosh": [[265, null]], "lucid.cube": [[266, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[250, null]], "lucid.div": [[239, null]], "lucid.dot": [[240, null]], "lucid.empty": [[251, null]], "lucid.empty_like": [[252, null]], "lucid.exp": [[267, null]], "lucid.eye": [[253, null]], "lucid.flatten": [[286, null]], "lucid.grad_enabled": [[225, null]], "lucid.hstack": [[287, null]], "lucid.inner": [[241, null]], "lucid.linalg": [[9, null]], "lucid.linalg.cholesky": [[10, null]], "lucid.linalg.det": [[11, null]], "lucid.linalg.eig": [[12, null]], "lucid.linalg.inv": [[14, null]], "lucid.linalg.matrix_power": [[15, null]], "lucid.linalg.norm": [[16, null]], "lucid.linalg.pinv": [[17, null]], "lucid.linalg.qr": [[18, null]], "lucid.linalg.solve": [[19, null]], "lucid.linalg.svd": [[20, null]], "lucid.log": [[268, null]], "lucid.matmul": [[242, null]], "lucid.max": [[269, null]], "lucid.maximum": [[243, null]], "lucid.mean": [[270, null]], "lucid.meshgrid": [[289, null]], "lucid.min": [[271, null]], "lucid.minimum": [[244, null]], "lucid.models": [[86, null]], "lucid.mul": [[245, null]], "lucid.newaxis": [[226, null]], "lucid.nn": [[210, null]], "lucid.nn.functional": [[117, null]], "lucid.no_grad": [[227, null]], "lucid.ones": [[254, null]], "lucid.ones_like": [[255, null]], "lucid.optim": [[212, null]], "lucid.outer": [[246, null]], "lucid.pad": [[290, null]], "lucid.power": [[247, null]], "lucid.random": [[236, null]], "lucid.random.rand": [[231, null]], "lucid.random.randint": [[232, null]], "lucid.random.randn": [[233, null]], "lucid.random.seed": [[234, null]], "lucid.random.uniform": [[235, null]], "lucid.ravel": [[291, null]], "lucid.reciprocal": [[272, null]], "lucid.register_model": [[228, null]], "lucid.repeat": [[292, null]], "lucid.reshape": [[293, null]], "lucid.sign": [[273, null]], "lucid.sin": [[274, null]], "lucid.sinh": [[275, null]], "lucid.sqrt": [[276, null]], "lucid.square": [[277, null]], "lucid.squeeze": [[294, null]], "lucid.stack": [[295, null]], "lucid.sub": [[248, null]], "lucid.sum": [[278, null]], "lucid.tan": [[279, null]], "lucid.tanh": [[280, null]], "lucid.tensor": [[284, null]], "lucid.tile": [[296, null]], "lucid.trace": [[281, null]], "lucid.transforms": [[310, null]], "lucid.transpose": [[282, null]], "lucid.types": [[229, null]], "lucid.unsqueeze": [[297, null]], "lucid.var": [[283, null]], "lucid.vstack": [[298, null]], "lucid.zeros": [[256, null]], "lucid.zeros_like": [[257, null]], "mobilenet": [[42, null]], "mobilenet_v2": [[43, null]], "models.summarize": [[87, null]], "nn.AdaptiveAvgPool1d": [[200, null]], "nn.AdaptiveAvgPool2d": [[201, null]], "nn.AdaptiveAvgPool3d": [[202, null]], "nn.AlphaDropout": [[175, null]], "nn.AvgPool1d": [[203, null]], "nn.AvgPool2d": [[204, null]], "nn.AvgPool3d": [[205, null]], "nn.BCELoss": [[186, null]], "nn.BatchNorm1d": [[192, null]], "nn.BatchNorm2d": [[193, null]], "nn.BatchNorm3d": [[194, null]], "nn.Bilinear": [[182, null]], "nn.Buffer": [[88, null]], "nn.Conv1d": [[171, null]], "nn.Conv2d": [[172, null]], "nn.Conv3d": [[173, null]], "nn.ConvBNReLU1d": [[144, null]], "nn.ConvBNReLU2d": [[145, null]], "nn.ConvBNReLU3d": [[146, null]], "nn.CrossEntropyLoss": [[187, null]], "nn.DepthSeparableConv1d": [[147, null]], "nn.DepthSeparableConv2d": [[148, null]], "nn.DepthSeparableConv3d": [[149, null]], "nn.Dropout": [[176, null]], "nn.Dropout1d": [[177, null]], "nn.Dropout2d": [[178, null]], "nn.Dropout3d": [[179, null]], "nn.ELU": [[161, null]], "nn.GELU": [[162, null]], "nn.HuberLoss": [[188, null]], "nn.Identity": [[183, null]], "nn.InstanceNorm1d": [[195, null]], "nn.InstanceNorm2d": [[196, null]], "nn.InstanceNorm3d": [[197, null]], "nn.LayerNorm": [[198, null]], "nn.LeakyReLU": [[163, null]], "nn.Linear": [[184, null]], "nn.MSELoss": [[189, null]], "nn.MaxPool1d": [[206, null]], "nn.MaxPool2d": [[207, null]], "nn.MaxPool3d": [[208, null]], "nn.Module": [[89, null]], "nn.ModuleDict": [[91, null]], "nn.ModuleList": [[92, null]], "nn.NLLLoss": [[190, null]], "nn.Parameter": [[90, null]], "nn.ParameterDict": [[93, null]], "nn.ParameterList": [[94, null]], "nn.ReLU": [[164, null]], "nn.ReLU6": [[165, null]], "nn.SELU": [[166, null]], "nn.SEModule": [[150, null]], "nn.SelectiveKernel": [[151, null]], "nn.Sequential": [[95, null]], "nn.Sigmoid": [[167, null]], "nn.Softmax": [[168, null]], "nn.Tanh": [[169, null]], "nn.functional.adaptive_avg_pool1d": [[131, null]], "nn.functional.adaptive_avg_pool2d": [[132, null]], "nn.functional.adaptive_avg_pool3d": [[133, null]], "nn.functional.alpha_dropout": [[111, null]], "nn.functional.avg_pool1d": [[134, null]], "nn.functional.avg_pool2d": [[135, null]], "nn.functional.avg_pool3d": [[136, null]], "nn.functional.batch_norm": [[127, null]], "nn.functional.bilinear": [[118, null]], "nn.functional.binary_cross_entropy": [[121, null]], "nn.functional.conv1d": [[106, null]], "nn.functional.conv2d": [[107, null]], "nn.functional.conv3d": [[108, null]], "nn.functional.cross_entropy": [[122, null]], "nn.functional.dropout": [[112, null]], "nn.functional.dropout1d": [[113, null]], "nn.functional.dropout2d": [[114, null]], "nn.functional.dropout3d": [[115, null]], "nn.functional.elu": [[97, null]], "nn.functional.gelu": [[98, null]], "nn.functional.huber_loss": [[123, null]], "nn.functional.instance_norm": [[129, null]], "nn.functional.interpolate": [[142, null]], "nn.functional.layer_norm": [[130, null]], "nn.functional.leaky_relu": [[100, null]], "nn.functional.linear": [[120, null]], "nn.functional.max_pool1d": [[138, null]], "nn.functional.max_pool2d": [[139, null]], "nn.functional.max_pool3d": [[140, null]], "nn.functional.mse_loss": [[125, null]], "nn.functional.nll_loss": [[126, null]], "nn.functional.relu": [[101, null]], "nn.functional.rotate": [[143, null]], "nn.functional.selu": [[102, null]], "nn.functional.sigmoid": [[103, null]], "nn.functional.softmax": [[104, null]], "nn.functional.tanh": [[105, null]], "nn.functional.unfold": [[110, null]], "nn.init.constant": [[153, null]], "nn.init.kaiming_normal": [[155, null]], "nn.init.kaiming_uniform": [[156, null]], "nn.init.normal": [[157, null]], "nn.init.uniform": [[158, null]], "nn.init.xavier_normal": [[159, null]], "nn.init.xavier_uniform": [[160, null]], "optim.ASGD": [[213, null]], "optim.Adadelta": [[214, null]], "optim.Adagrad": [[215, null]], "optim.Adam": [[216, null]], "optim.AdamW": [[217, null]], "optim.Adamax": [[218, null]], "optim.NAdam": [[219, null]], "optim.Optimizer": [[211, null]], "optim.RAdam": [[220, null]], "optim.RMSprop": [[221, null]], "optim.Rprop": [[222, null]], "optim.SGD": [[223, null]], "resnet_1001": [[45, null]], "resnet_101": [[46, null]], "resnet_152": [[47, null]], "resnet_18": [[48, null]], "resnet_200": [[49, null]], "resnet_269": [[50, null]], "resnet_34": [[51, null]], "resnet_50": [[52, null]], "resnext_101_32x16d": [[56, null]], "resnext_101_32x32d": [[57, null]], "resnext_101_32x4d": [[58, null]], "resnext_101_32x8d": [[59, null]], "resnext_101_64x4d": [[60, null]], "resnext_50_32x4d": [[61, null]], "se_resnet_101": [[63, null]], "se_resnet_152": [[64, null]], "se_resnet_18": [[65, null]], "se_resnet_34": [[66, null]], "se_resnet_50": [[67, null]], "se_resnext_101_32x4d": [[68, null]], "se_resnext_101_32x8d": [[69, null]], "se_resnext_101_64x4d": [[70, null]], "se_resnext_50_32x4d": [[71, null]], "sk_resnet_18": [[73, null]], "sk_resnet_34": [[74, null]], "sk_resnet_50": [[75, null]], "sk_resnext_50_32x4d": [[76, null]], "transforms.CenterCrop": [[301, null]], "transforms.Compose": [[299, null]], "transforms.Normalize": [[302, null]], "transforms.RandomCrop": [[303, null]], "transforms.RandomGrayscale": [[304, null]], "transforms.RandomHorizontalFlip": [[305, null]], "transforms.RandomRotation": [[306, null]], "transforms.RandomVerticalFlip": [[307, null]], "transforms.Resize": [[308, null]], "transforms.ToTensor": [[300, null]], "vggnet_11": [[78, null]], "vggnet_13": [[79, null]], "vggnet_16": [[80, null]], "vggnet_19": [[81, null]], "wide_resnet_101": [[53, null]], "wide_resnet_50": [[54, null]], "xception": [[83, null]], "zfnet": [[85, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/FashionMNIST", "datasets/image/MNIST", "datasets/image/index", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/conv/alex/AlexNet", "models/conv/alex/alexnet", "models/conv/dense/DenseNet", "models/conv/dense/densenet_121", "models/conv/dense/densenet_169", "models/conv/dense/densenet_201", "models/conv/dense/densenet_264", "models/conv/inception/Inception", "models/conv/inception/inception_v1", "models/conv/inception/inception_v3", "models/conv/inception/inception_v4", "models/conv/inception_res/InceptionResNet", "models/conv/inception_res/inception_resnet_v1", "models/conv/inception_res/inception_resnet_v2", "models/conv/index", "models/conv/lenet/LeNet", "models/conv/lenet/lenet_1", "models/conv/lenet/lenet_4", "models/conv/lenet/lenet_5", "models/conv/mobile/MobileNet", "models/conv/mobile/MobileNet_V2", "models/conv/mobile/mobilenet", "models/conv/mobile/mobilenet_v2", "models/conv/resnet/ResNet", "models/conv/resnet/resnet_1001", "models/conv/resnet/resnet_101", "models/conv/resnet/resnet_152", "models/conv/resnet/resnet_18", "models/conv/resnet/resnet_200", "models/conv/resnet/resnet_269", "models/conv/resnet/resnet_34", "models/conv/resnet/resnet_50", "models/conv/resnet/wide_resnet_101", "models/conv/resnet/wide_resnet_50", "models/conv/resnext/ResNeXt", "models/conv/resnext/resnext_101_32x16d", "models/conv/resnext/resnext_101_32x32d", "models/conv/resnext/resnext_101_32x4d", "models/conv/resnext/resnext_101_32x8d", "models/conv/resnext/resnext_101_64x4d", "models/conv/resnext/resnext_50_32x4d", "models/conv/senet/SENet", "models/conv/senet/se_resnet_101", "models/conv/senet/se_resnet_152", "models/conv/senet/se_resnet_18", "models/conv/senet/se_resnet_34", "models/conv/senet/se_resnet_50", "models/conv/senet/se_resnext_101_32x4d", "models/conv/senet/se_resnext_101_32x8d", "models/conv/senet/se_resnext_101_64x4d", "models/conv/senet/se_resnext_50_32x4d", "models/conv/sknet/SKNet", "models/conv/sknet/sk_resnet_18", "models/conv/sknet/sk_resnet_34", "models/conv/sknet/sk_resnet_50", "models/conv/sknet/sk_resnext_50_32x4d", "models/conv/vgg/VGGNet", "models/conv/vgg/vggnet_11", "models/conv/vgg/vggnet_13", "models/conv/vgg/vggnet_16", "models/conv/vgg/vggnet_19", "models/conv/xception/Xception", "models/conv/xception/xception", "models/conv/zfnet/ZFNet", "models/conv/zfnet/zfnet", "models/models", "models/summarize", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/fused/ConvBNReLU1d", "nn/fused/ConvBNReLU2d", "nn/fused/ConvBNReLU3d", "nn/fused/DepthSeparableConv1d", "nn/fused/DepthSeparableConv2d", "nn/fused/DepthSeparableConv3d", "nn/fused/SEModule", "nn/fused/SelectiveKernel", "nn/fused/index", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/ReLU6", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/nn", "optim/Optimizer", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "others/types", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/meshgrid", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/FashionMNIST.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/conv/alex/AlexNet.rst", "models/conv/alex/alexnet.rst", "models/conv/dense/DenseNet.rst", "models/conv/dense/densenet_121.rst", "models/conv/dense/densenet_169.rst", "models/conv/dense/densenet_201.rst", "models/conv/dense/densenet_264.rst", "models/conv/inception/Inception.rst", "models/conv/inception/inception_v1.rst", "models/conv/inception/inception_v3.rst", "models/conv/inception/inception_v4.rst", "models/conv/inception_res/InceptionResNet.rst", "models/conv/inception_res/inception_resnet_v1.rst", "models/conv/inception_res/inception_resnet_v2.rst", "models/conv/index.rst", "models/conv/lenet/LeNet.rst", "models/conv/lenet/lenet_1.rst", "models/conv/lenet/lenet_4.rst", "models/conv/lenet/lenet_5.rst", "models/conv/mobile/MobileNet.rst", "models/conv/mobile/MobileNet_V2.rst", "models/conv/mobile/mobilenet.rst", "models/conv/mobile/mobilenet_v2.rst", "models/conv/resnet/ResNet.rst", "models/conv/resnet/resnet_1001.rst", "models/conv/resnet/resnet_101.rst", "models/conv/resnet/resnet_152.rst", "models/conv/resnet/resnet_18.rst", "models/conv/resnet/resnet_200.rst", "models/conv/resnet/resnet_269.rst", "models/conv/resnet/resnet_34.rst", "models/conv/resnet/resnet_50.rst", "models/conv/resnet/wide_resnet_101.rst", "models/conv/resnet/wide_resnet_50.rst", "models/conv/resnext/ResNeXt.rst", "models/conv/resnext/resnext_101_32x16d.rst", "models/conv/resnext/resnext_101_32x32d.rst", "models/conv/resnext/resnext_101_32x4d.rst", "models/conv/resnext/resnext_101_32x8d.rst", "models/conv/resnext/resnext_101_64x4d.rst", "models/conv/resnext/resnext_50_32x4d.rst", "models/conv/senet/SENet.rst", "models/conv/senet/se_resnet_101.rst", "models/conv/senet/se_resnet_152.rst", "models/conv/senet/se_resnet_18.rst", "models/conv/senet/se_resnet_34.rst", "models/conv/senet/se_resnet_50.rst", "models/conv/senet/se_resnext_101_32x4d.rst", "models/conv/senet/se_resnext_101_32x8d.rst", "models/conv/senet/se_resnext_101_64x4d.rst", "models/conv/senet/se_resnext_50_32x4d.rst", "models/conv/sknet/SKNet.rst", "models/conv/sknet/sk_resnet_18.rst", "models/conv/sknet/sk_resnet_34.rst", "models/conv/sknet/sk_resnet_50.rst", "models/conv/sknet/sk_resnext_50_32x4d.rst", "models/conv/vgg/VGGNet.rst", "models/conv/vgg/vggnet_11.rst", "models/conv/vgg/vggnet_13.rst", "models/conv/vgg/vggnet_16.rst", "models/conv/vgg/vggnet_19.rst", "models/conv/xception/Xception.rst", "models/conv/xception/xception.rst", "models/conv/zfnet/ZFNet.rst", "models/conv/zfnet/zfnet.rst", "models/models.rst", "models/summarize.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/fused/ConvBNReLU1d.rst", "nn/fused/ConvBNReLU2d.rst", "nn/fused/ConvBNReLU3d.rst", "nn/fused/DepthSeparableConv1d.rst", "nn/fused/DepthSeparableConv2d.rst", "nn/fused/DepthSeparableConv3d.rst", "nn/fused/SEModule.rst", "nn/fused/SelectiveKernel.rst", "nn/fused/index.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/ReLU6.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "others/types.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"lucid": [[8, "module-lucid", false]], "mobilenet (class in lucid.models)": [[40, "lucid.models.MobileNet", false]], "mobilenet() (in module lucid.models)": [[42, "lucid.models.mobilenet", false]], "mobilenet_v2 (class in lucid.models)": [[41, "lucid.models.MobileNet_V2", false]], "mobilenet_v2() (in module lucid.models)": [[43, "lucid.models.mobilenet_v2", false]], "module": [[8, "module-lucid", false]]}, "objects": {"": [[8, 0, 0, "-", "lucid"]], "lucid": [[237, 1, 1, "", "Tensor"], [259, 2, 1, "", "abs"], [238, 2, 1, "", "add"], [249, 2, 1, "", "arange"], [260, 2, 1, "", "arccos"], [261, 2, 1, "", "arcsin"], [262, 2, 1, "", "arctan"], [263, 2, 1, "", "clip"], [285, 2, 1, "", "concatenate"], [264, 2, 1, "", "cos"], [265, 2, 1, "", "cosh"], [266, 2, 1, "", "cube"], [250, 2, 1, "", "diag"], [239, 2, 1, "", "div"], [240, 2, 1, "", "dot"], [251, 2, 1, "", "empty"], [252, 2, 1, "", "empty_like"], [267, 2, 1, "", "exp"], [253, 2, 1, "", "eye"], [286, 2, 1, "", "flatten"], [225, 2, 1, "", "grad_enabled"], [287, 2, 1, "", "hstack"], [241, 2, 1, "", "inner"], [268, 2, 1, "", "log"], [242, 2, 1, "", "matmul"], [269, 2, 1, "", "max"], [243, 2, 1, "", "maximum"], [270, 2, 1, "", "mean"], [289, 2, 1, "", "meshgrid"], [271, 2, 1, "", "min"], [244, 2, 1, "", "minimum"], [245, 2, 1, "", "mul"], [227, 2, 1, "", "no_grad"], [254, 2, 1, "", "ones"], [255, 2, 1, "", "ones_like"], [246, 2, 1, "", "outer"], [290, 2, 1, "", "pad"], [247, 2, 1, "", "power"], [291, 2, 1, "", "ravel"], [272, 2, 1, "", "reciprocal"], [228, 2, 1, "", "register_model"], [292, 2, 1, "", "repeat"], [293, 2, 1, "", "reshape"], [273, 2, 1, "", "sign"], [274, 2, 1, "", "sin"], [275, 2, 1, "", "sinh"], [276, 2, 1, "", "sqrt"], [277, 2, 1, "", "square"], [294, 2, 1, "", "squeeze"], [295, 2, 1, "", "stack"], [248, 2, 1, "", "sub"], [278, 2, 1, "", "sum"], [279, 2, 1, "", "tan"], [280, 2, 1, "", "tanh"], [284, 2, 1, "", "tensor"], [296, 2, 1, "", "tile"], [281, 2, 1, "", "trace"], [282, 2, 1, "", "transpose"], [297, 2, 1, "", "unsqueeze"], [283, 2, 1, "", "var"], [298, 2, 1, "", "vstack"], [256, 2, 1, "", "zeros"], [257, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "FashionMNIST"], [6, 1, 1, "", "MNIST"]], "lucid.linalg": [[10, 2, 1, "", "cholesky"], [11, 2, 1, "", "det"], [12, 2, 1, "", "eig"], [14, 2, 1, "", "inv"], [15, 2, 1, "", "matrix_power"], [16, 2, 1, "", "norm"], [17, 2, 1, "", "pinv"], [18, 2, 1, "", "qr"], [19, 2, 1, "", "solve"], [20, 2, 1, "", "svd"]], "lucid.models": [[21, 1, 1, "", "AlexNet"], [23, 1, 1, "", "DenseNet"], [28, 1, 1, "", "Inception"], [32, 1, 1, "", "InceptionResNet"], [36, 1, 1, "", "LeNet"], [40, 1, 1, "", "MobileNet"], [41, 1, 1, "", "MobileNet_V2"], [55, 1, 1, "", "ResNeXt"], [44, 1, 1, "", "ResNet"], [62, 1, 1, "", "SENet"], [72, 1, 1, "", "SKNet"], [77, 1, 1, "", "VGGNet"], [82, 1, 1, "", "Xception"], [84, 1, 1, "", "ZFNet"], [22, 2, 1, "", "alexnet"], [24, 2, 1, "", "densenet_121"], [25, 2, 1, "", "densenet_169"], [26, 2, 1, "", "densenet_201"], [27, 2, 1, "", "densenet_264"], [33, 2, 1, "", "inception_resnet_v1"], [34, 2, 1, "", "inception_resnet_v2"], [29, 2, 1, "", "inception_v1"], [30, 2, 1, "", "inception_v3"], [31, 2, 1, "", "inception_v4"], [37, 2, 1, "", "lenet_1"], [38, 2, 1, "", "lenet_4"], [39, 2, 1, "", "lenet_5"], [42, 2, 1, "", "mobilenet"], [43, 2, 1, "", "mobilenet_v2"], [45, 2, 1, "", "resnet_1001"], [46, 2, 1, "", "resnet_101"], [47, 2, 1, "", "resnet_152"], [48, 2, 1, "", "resnet_18"], [49, 2, 1, "", "resnet_200"], [50, 2, 1, "", "resnet_269"], [51, 2, 1, "", "resnet_34"], [52, 2, 1, "", "resnet_50"], [56, 2, 1, "", "resnext_101_32x16d"], [57, 2, 1, "", "resnext_101_32x32d"], [58, 2, 1, "", "resnext_101_32x4d"], [59, 2, 1, "", "resnext_101_32x8d"], [60, 2, 1, "", "resnext_101_64x4d"], [61, 2, 1, "", "resnext_50_32x4d"], [63, 2, 1, "", "se_resnet_101"], [64, 2, 1, "", "se_resnet_152"], [65, 2, 1, "", "se_resnet_18"], [66, 2, 1, "", "se_resnet_34"], [67, 2, 1, "", "se_resnet_50"], [68, 2, 1, "", "se_resnext_101_32x4d"], [69, 2, 1, "", "se_resnext_101_32x8d"], [70, 2, 1, "", "se_resnext_101_64x4d"], [71, 2, 1, "", "se_resnext_50_32x4d"], [73, 2, 1, "", "sk_resnet_18"], [74, 2, 1, "", "sk_resnet_34"], [75, 2, 1, "", "sk_resnet_50"], [76, 2, 1, "", "sk_resnext_50_32x4d"], [87, 2, 1, "", "summarize"], [78, 2, 1, "", "vggnet_11"], [79, 2, 1, "", "vggnet_13"], [80, 2, 1, "", "vggnet_16"], [81, 2, 1, "", "vggnet_19"], [53, 2, 1, "", "wide_resnet_101"], [54, 2, 1, "", "wide_resnet_50"], [83, 2, 1, "", "xception"], [85, 2, 1, "", "zfnet"]], "lucid.nn": [[200, 1, 1, "", "AdaptiveAvgPool1d"], [201, 1, 1, "", "AdaptiveAvgPool2d"], [202, 1, 1, "", "AdaptiveAvgPool3d"], [175, 1, 1, "", "AlphaDropout"], [203, 1, 1, "", "AvgPool1d"], [204, 1, 1, "", "AvgPool2d"], [205, 1, 1, "", "AvgPool3d"], [186, 1, 1, "", "BCELoss"], [192, 1, 1, "", "BatchNorm1d"], [193, 1, 1, "", "BatchNorm2d"], [194, 1, 1, "", "BatchNorm3d"], [182, 1, 1, "", "Bilinear"], [88, 1, 1, "", "Buffer"], [171, 1, 1, "", "Conv1d"], [172, 1, 1, "", "Conv2d"], [173, 1, 1, "", "Conv3d"], [144, 1, 1, "", "ConvBNReLU1d"], [145, 1, 1, "", "ConvBNReLU2d"], [146, 1, 1, "", "ConvBNReLU3d"], [187, 1, 1, "", "CrossEntropyLoss"], [147, 1, 1, "", "DepthSeparableConv1d"], [148, 1, 1, "", "DepthSeparableConv2d"], [149, 1, 1, "", "DepthSeparableConv3d"], [176, 1, 1, "", "Dropout"], [177, 1, 1, "", "Dropout1d"], [178, 1, 1, "", "Dropout2d"], [179, 1, 1, "", "Dropout3d"], [161, 1, 1, "", "ELU"], [162, 1, 1, "", "GELU"], [188, 1, 1, "", "HuberLoss"], [183, 1, 1, "", "Identity"], [195, 1, 1, "", "InstanceNorm1d"], [196, 1, 1, "", "InstanceNorm2d"], [197, 1, 1, "", "InstanceNorm3d"], [198, 1, 1, "", "LayerNorm"], [163, 1, 1, "", "LeakyReLU"], [184, 1, 1, "", "Linear"], [189, 1, 1, "", "MSELoss"], [206, 1, 1, "", "MaxPool1d"], [207, 1, 1, "", "MaxPool2d"], [208, 1, 1, "", "MaxPool3d"], [89, 1, 1, "", "Module"], [91, 1, 1, "", "ModuleDict"], [92, 1, 1, "", "ModuleList"], [190, 1, 1, "", "NLLLoss"], [90, 1, 1, "", "Parameter"], [93, 1, 1, "", "ParameterDict"], [94, 1, 1, "", "ParameterList"], [164, 1, 1, "", "ReLU"], [165, 1, 1, "", "ReLU6"], [166, 1, 1, "", "SELU"], [150, 1, 1, "", "SEModule"], [151, 1, 1, "", "SelectiveKernel"], [95, 1, 1, "", "Sequential"], [167, 1, 1, "", "Sigmoid"], [168, 1, 1, "", "Softmax"], [169, 1, 1, "", "Tanh"]], "lucid.nn.functional": [[131, 2, 1, "", "adaptive_avg_pool1d"], [132, 2, 1, "", "adaptive_avg_pool2d"], [133, 2, 1, "", "adaptive_avg_pool3d"], [111, 2, 1, "", "alpha_dropout"], [134, 2, 1, "", "avg_pool1d"], [135, 2, 1, "", "avg_pool2d"], [136, 2, 1, "", "avg_pool3d"], [127, 2, 1, "", "batch_norm"], [118, 2, 1, "", "bilinear"], [121, 2, 1, "", "binary_cross_entropy"], [106, 2, 1, "", "conv1d"], [107, 2, 1, "", "conv2d"], [108, 2, 1, "", "conv3d"], [122, 2, 1, "", "cross_entropy"], [112, 2, 1, "", "dropout"], [113, 2, 1, "", "dropout1d"], [114, 2, 1, "", "dropout2d"], [115, 2, 1, "", "dropout3d"], [97, 2, 1, "", "elu"], [98, 2, 1, "", "gelu"], [123, 2, 1, "", "huber_loss"], [129, 2, 1, "", "instance_norm"], [142, 2, 1, "", "interpolate"], [130, 2, 1, "", "layer_norm"], [100, 2, 1, "", "leaky_relu"], [120, 2, 1, "", "linear"], [138, 2, 1, "", "max_pool1d"], [139, 2, 1, "", "max_pool2d"], [140, 2, 1, "", "max_pool3d"], [125, 2, 1, "", "mse_loss"], [126, 2, 1, "", "nll_loss"], [101, 2, 1, "", "relu"], [143, 2, 1, "", "rotate"], [102, 2, 1, "", "selu"], [103, 2, 1, "", "sigmoid"], [104, 2, 1, "", "softmax"], [105, 2, 1, "", "tanh"], [110, 2, 1, "", "unfold"]], "lucid.nn.init": [[153, 2, 1, "", "constant"], [155, 2, 1, "", "kaiming_normal"], [156, 2, 1, "", "kaiming_uniform"], [157, 2, 1, "", "normal"], [158, 2, 1, "", "uniform"], [159, 2, 1, "", "xavier_normal"], [160, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[213, 1, 1, "", "ASGD"], [214, 1, 1, "", "Adadelta"], [215, 1, 1, "", "Adagrad"], [216, 1, 1, "", "Adam"], [217, 1, 1, "", "AdamW"], [218, 1, 1, "", "Adamax"], [219, 1, 1, "", "NAdam"], [211, 1, 1, "", "Optimizer"], [220, 1, 1, "", "RAdam"], [221, 1, 1, "", "RMSprop"], [222, 1, 1, "", "Rprop"], [223, 1, 1, "", "SGD"]], "lucid.random": [[231, 2, 1, "", "rand"], [232, 2, 1, "", "randint"], [233, 2, 1, "", "randn"], [234, 2, 1, "", "seed"], [235, 2, 1, "", "uniform"]], "lucid.transforms": [[301, 1, 1, "", "CenterCrop"], [299, 1, 1, "", "Compose"], [302, 1, 1, "", "Normalize"], [303, 1, 1, "", "RandomCrop"], [304, 1, 1, "", "RandomGrayscale"], [305, 1, 1, "", "RandomHorizontalFlip"], [306, 1, 1, "", "RandomRotation"], [307, 1, 1, "", "RandomVerticalFlip"], [308, 1, 1, "", "Resize"], [300, 1, 1, "", "ToTensor"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [3, 8, 9, 15, 17, 20, 86, 87, 88, 89, 90, 91, 93, 94, 95, 131, 132, 133, 151, 187, 190, 200, 201, 202, 203, 206, 207, 210, 211, 212, 226, 228, 242, 250, 268, 270, 278, 281, 283, 284, 294, 300, 302, 310], "0": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 30, 32, 36, 42, 62, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 118, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 282, 283, 284, 285, 287, 290, 291, 292, 294, 295, 297, 298, 299, 301, 302, 303, 304, 305, 306, 307, 308, 310], "000": [5, 6, 251, 252], "0000": [187, 188, 190], "0001": 213, "000e": [251, 252], "001": [213, 216, 217, 219, 220, 223], "002": [218, 219], "004": 219, "005": 163, "008": [42, 86], "01": [100, 163, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223], "01051757": 233, "013": [26, 86], "016": [45, 86], "0205": 187, "0217": 187, "0227": 187, "024": [67, 86], "026": [56, 86], "028": [61, 86], "0299": 187, "032": [52, 86], "044715": [98, 162], "0450": 187, "0451": 187, "047": [79, 86], "04719755": 260, "0474259": 103, "048": [69, 86], "0480": 187, "04861": 86, "05": [127, 129, 130, 144, 145, 146, 163, 192, 193, 194, 195, 196, 197, 198], "0507": [102, 166], "06": [214, 222], "069": [50, 86], "07": [121, 122, 186, 187], "0700": 187, "0706508": 169, "071": [45, 86], "0721": 187, "073": [75, 86], "0794": 190, "08": [216, 217, 218, 219, 220, 221], "0802": 190, "08333333": 17, "085537": 267, "088": [67, 86], "0900": [168, 187], "096": [83, 86], "0986": [104, 168], "09861229": 268, "0992": 187, "1": [0, 1, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 32, 36, 37, 38, 39, 42, 43, 62, 68, 69, 70, 71, 72, 76, 77, 82, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 118, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 229, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310], "10": [0, 1, 2, 3, 5, 21, 22, 23, 36, 37, 38, 39, 77, 84, 85, 86, 87, 91, 92, 95, 107, 108, 118, 120, 131, 171, 172, 173, 178, 179, 182, 184, 193, 194, 196, 200, 204, 205, 207, 215, 228, 232, 235, 236, 239, 242, 245, 246, 262, 278, 301, 303, 304, 306], "100": [22, 78, 79, 80, 81, 86, 228, 310], "1000": [21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85], "1000000": 213, "1001": [45, 86, 187], "1003": 187, "1007": 86, "101": [46, 53, 56, 57, 58, 59, 60, 63, 68, 69, 70, 86], "1014": 102, "102": [50, 86], "1025": [92, 95], "1026": [92, 95], "1027": [92, 95], "10499": 103, "1050": 167, "1054": 190, "1056": [92, 95], "10590": 86, "1097": 86, "11": [48, 65, 77, 78, 86, 118, 171, 172, 173, 178, 182, 193, 194, 196, 204, 205, 207, 242, 301, 302, 303, 304, 306], "1105": 86, "1109": 86, "1111": 186, "1134": 118, "114b": 304, "119": 118, "1192": [103, 104, 168], "12": [23, 24, 25, 26, 27, 37, 38, 93, 118, 133, 171, 172, 173, 178, 179, 182, 193, 194, 196, 202, 204, 205, 207, 242, 246, 247, 301, 303, 304, 306], "120": [36, 39], "121": [23, 24, 86], "123": [155, 156, 157, 158, 159, 160, 234, 235], "124": [155, 156, 159, 160], "125": 205, "1250": 188, "1251": 86, "1258": 86, "126": [53, 86], "128": [33, 44, 53, 54, 77, 86, 95, 151, 299, 310], "128x128": [299, 310], "13": [29, 77, 79, 86, 118, 171, 172, 173, 182, 194, 204, 205, 207, 242, 301, 303, 304, 306], "1314": 86, "132": [78, 86], "1324": 86, "133": [79, 86], "138": [80, 86], "14": [25, 86, 171, 172, 173, 178, 179, 182, 194, 204, 205, 207, 229, 242, 246, 301, 303, 304, 306], "1409": 86, "143": [81, 86], "145": 118, "149": [25, 45, 86], "15": [0, 118, 171, 172, 173, 182, 194, 204, 205, 207, 242, 246, 281, 301, 303, 304, 306, 310], "1513": 190, "152": [47, 64, 86], "155": 242, "1556": 86, "1588": [98, 162], "16": [23, 24, 36, 39, 56, 62, 77, 80, 86, 92, 93, 95, 132, 133, 144, 145, 146, 150, 151, 171, 172, 173, 178, 179, 182, 193, 194, 201, 202, 204, 205, 207, 210, 242, 246, 276, 301, 303, 304, 306], "160": [46, 86], "16227766": 18, "16425": 190, "1643": 186, "166": 242, "169": [23, 25, 86], "17": [171, 172, 173, 182, 194, 205, 241, 301, 303, 304, 306], "170": 118, "1704": 86, "17520119": 275, "177": [58, 86], "18": [38, 48, 65, 73, 86, 171, 172, 173, 178, 182, 194, 205, 245, 246, 301, 303, 304, 306], "1800": 187, "19": [77, 81, 86, 107, 108, 118, 172, 173, 194, 240, 242], "192": [37, 38, 47, 86], "194": [56, 86], "1966": [104, 167, 168], "1998": [86, 187], "1_53": 86, "1d": [106, 131, 134, 138, 144, 147, 192, 195, 200, 235, 242, 250, 281, 289, 290, 291, 292, 296], "1e": [121, 122, 127, 129, 130, 144, 145, 146, 186, 187, 192, 193, 194, 195, 196, 197, 198, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "1e6": 213, "1st": [21, 84], "2": [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 37, 38, 39, 48, 65, 73, 84, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 118, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 229, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310], "20": [0, 5, 6, 26, 86, 91, 92, 95, 172, 173, 178, 194, 246, 267], "200": [49, 86], "201": [26, 86], "2011": 150, "2012": 86, "2014": 86, "2015": 86, "2016": 86, "2017": 86, "2018": [86, 150], "2019": 86, "2023": 150, "2039": 190, "204": 173, "21": [51, 66, 86, 93, 118, 172, 173, 194, 246], "211": 242, "22": [33, 83, 86, 118, 172, 173, 178, 194, 240, 242], "2231": [187, 190], "224": [21, 23, 24, 25, 26, 27, 42, 43, 44, 54, 56, 57, 58, 59, 60, 61, 68, 69, 70, 71, 73, 74, 75, 76, 77, 84, 86], "2247": [192, 193, 194, 195, 196, 197, 198], "224x224": [29, 68, 69, 70, 71, 76], "226": 242, "22752314": 233, "2278": 86, "23": [46, 53, 56, 57, 58, 59, 60, 63, 172, 173, 194], "232": [42, 70, 86], "2324": [86, 166], "234": [155, 156, 157, 158, 159, 160, 235], "24": [23, 24, 49, 118, 132, 172, 173, 178, 194, 201, 246], "240": [81, 86], "2424": [104, 168], "2447": 168, "246": [37, 86], "25": [0, 52, 61, 73, 86, 103, 167, 173, 189, 194, 204, 205, 239, 272, 283], "2500": [186, 188, 190], "2512": 161, "2547": 166, "256": [44, 77], "26": [93, 120, 173, 184, 194, 246], "26325684": 233, "264": [27, 86], "2689": [104, 167, 168], "269": [50, 86], "27": [71, 86, 118, 171, 173, 194, 266], "272": [60, 86], "274": [76, 86], "276": [155, 156, 159, 160], "28": [37, 38, 67, 86, 118, 173, 246], "28x28": [5, 6, 37, 38], "29": [76, 86, 173], "299": [82, 86], "299r": 304, "299x299": [30, 31, 33, 34], "2_i": [195, 196, 197], "2d": [107, 114, 132, 135, 139, 145, 148, 193, 196, 201, 242, 250, 253, 281, 286, 289, 290, 292, 296, 306], "2e": 218, "2nd": [21, 84], "2x2": [110, 301, 303], "3": [1, 2, 3, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 37, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 84, 86, 88, 89, 90, 92, 93, 94, 95, 98, 103, 104, 106, 107, 108, 110, 111, 112, 113, 114, 115, 118, 120, 123, 125, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 263, 265, 266, 267, 268, 269, 270, 271, 275, 276, 277, 278, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308], "30": [30, 50, 86, 92, 143, 173, 306], "3026": 190, "31": [118, 173, 242], "310": [251, 252], "31622777": 18, "319": 86, "32": [23, 25, 26, 39, 56, 57, 58, 59, 61, 86, 92, 95, 118, 120, 132, 144, 145, 146, 150, 151, 172, 173, 184, 201, 210, 240, 241, 246], "321": [155, 156, 159, 160], "326": [63, 86], "32x16d": 86, "32x32": [36, 39], "32x32d": 86, "32x4d": [68, 71, 76, 86], "32x8d": [69, 86], "33": [27, 86, 92, 95, 120, 173, 184], "33333333": 17, "336": [59, 78, 86], "337": [27, 86], "34": [51, 66, 74, 86, 92, 95, 118, 173, 242, 246], "342": [155, 156, 159, 160], "345": [155, 156, 157, 158, 159, 160, 235], "35": [34, 86, 92, 95, 173], "352": [29, 86], "3567": [186, 190], "357": [80, 85, 86], "36": [47, 49, 64, 173], "3679": [97, 102, 161], "368": [73, 75, 86], "37": 171, "372": 118, "375": 189, "3750": 188, "378": [38, 86], "38344152": 231, "38629436": 268, "389056": 267, "392": [30, 86], "393": [29, 86], "3935": 161, "3d": [108, 115, 133, 136, 140, 146, 149, 173, 194, 197, 202], "3x3": [86, 236], "4": [0, 1, 2, 3, 9, 10, 11, 12, 14, 16, 17, 18, 23, 36, 37, 38, 42, 44, 46, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 66, 67, 74, 75, 86, 87, 93, 95, 106, 107, 108, 110, 113, 114, 115, 118, 120, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 147, 148, 149, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213, 216, 220, 221, 223, 226, 229, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 255, 257, 263, 268, 269, 270, 271, 272, 274, 276, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 295, 296, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308], "40": [31, 86], "400": 39, "4044": 186, "4076": 187, "4096": [21, 84], "41421356": 10, "416": [50, 68, 86], "41666667": 17, "41808962": 233, "419974": 105, "4199743": 169, "42": [118, 150, 229, 236], "421": [155, 156, 159, 160], "423": [155, 156, 157, 158], "42718872": 18, "4278": 86, "4284": 86, "4286": 186, "43": [240, 242], "4323": 161, "4375": 188, "43758721": 231, "44": [46, 58, 86], "4472136": 12, "4495": [194, 197], "45": [74, 86, 118, 143, 306], "4510": 86, "4520": 86, "4545": 175, "455": [60, 86], "468": [57, 86], "4700": 86, "4708": 86, "47112767": 262, "472": [57, 86], "48": [23, 26, 27, 50, 68, 86, 120, 184], "480": [25, 86], "49": [63, 86], "4979": 161, "4x4": 308, "5": [1, 2, 8, 9, 14, 15, 16, 17, 21, 30, 36, 37, 38, 39, 72, 73, 74, 75, 84, 86, 87, 89, 90, 91, 92, 93, 95, 98, 103, 106, 107, 108, 110, 111, 112, 113, 114, 115, 118, 120, 123, 125, 127, 129, 130, 131, 134, 135, 142, 144, 145, 146, 151, 153, 161, 162, 163, 164, 165, 166, 167, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 203, 204, 205, 207, 208, 222, 226, 229, 232, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 255, 257, 259, 260, 261, 269, 270, 271, 272, 273, 278, 281, 282, 283, 284, 287, 289, 293, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310], "50": [44, 52, 54, 61, 67, 71, 75, 76, 86, 120, 184, 222, 240, 242, 304, 305, 307, 310], "5000": [186, 188, 190], "504": [43, 86], "510": 86, "5108": 190, "512": [34, 44, 48, 74, 86], "519": 86, "52359878": 261, "53": [118, 241], "530": [57, 86], "543": [155, 156, 157, 158, 159, 160, 235], "54308063": 265, "544": [80, 86], "545": 247, "5455": 175, "549": [46, 86], "557": [52, 86], "559": [71, 86], "563": [155, 156, 159, 160], "569": [69, 86], "57": [75, 86, 118], "57079633": [260, 261], "57366333": 234, "586": [31, 86], "587g": 304, "592": [65, 86], "5987": 86, "5995": 86, "5th": [21, 84], "6": [9, 17, 21, 23, 24, 25, 26, 27, 36, 39, 44, 51, 52, 54, 61, 66, 67, 74, 75, 84, 93, 94, 106, 107, 108, 110, 115, 118, 120, 131, 156, 160, 165, 171, 172, 173, 176, 177, 178, 179, 182, 184, 186, 192, 193, 194, 195, 196, 197, 198, 200, 204, 205, 207, 208, 214, 222, 226, 229, 235, 238, 239, 240, 241, 242, 245, 246, 247, 248, 249, 250, 251, 252, 255, 257, 269, 270, 271, 278, 281, 282, 283, 284, 287, 292, 293, 298, 300, 301, 302, 303, 304, 306, 308], "60": [47, 86], "6052": 190, "6065": 161, "608": [85, 86], "61": [22, 39, 86], "6124": [192, 193, 194, 195, 196, 197, 198], "62": [85, 86, 118], "62686041": 275, "630": 86, "6321": [97, 161], "63245553": 18, "64": [23, 27, 44, 49, 60, 72, 77, 86, 92, 95, 118, 150, 151], "645": 86, "64589411": 231, "647": [73, 86], "64x4d": [70, 86], "654": [155, 156, 157, 158, 159, 160, 235], "657": [155, 156, 159, 160], "6590": [104, 168], "66": [64, 86], "6652": 168, "66666667": 17, "6667": 186, "667": [81, 86], "6682": 186, "669": [49, 86], "67": 242, "672": [51, 86], "67326": 166, "6733": 102, "678": [155, 156, 157, 158, 159, 160], "68811989": 233, "689": [48, 86], "69314718": 268, "696": [53, 86], "7": [16, 24, 77, 86, 93, 106, 107, 108, 110, 115, 118, 120, 121, 122, 131, 151, 162, 165, 166, 167, 169, 171, 172, 173, 178, 179, 182, 184, 186, 187, 189, 193, 194, 196, 197, 200, 204, 205, 207, 208, 229, 232, 235, 238, 240, 241, 242, 246, 248, 250, 267, 270, 278, 281, 282, 283, 296, 300, 301, 302, 303, 304, 306, 308], "70": [5, 6], "7001": 187, "704": [27, 58, 86], "706": [39, 86], "70710678": [12, 274], "7132": 86, "7141": 86, "7147": 190, "7182818": 267, "726791": 86, "7311": [104, 167, 168], "739": [33, 86], "74": 242, "75": [120, 184, 189, 213], "7581": 102, "760": [76, 86], "76159416": 280, "7616": [105, 169], "76219569": 265, "7635": 166, "770": 86, "772": 247, "778": [65, 86], "78": [54, 86], "78357324": 233, "78539816": 262, "791": [59, 86], "79172504": 231, "792": [56, 86], "797": [51, 86], "7x7": 84, "8": [15, 19, 23, 44, 47, 50, 56, 57, 58, 59, 60, 61, 64, 73, 74, 75, 87, 92, 93, 95, 106, 107, 108, 110, 115, 118, 120, 121, 131, 132, 133, 144, 145, 146, 150, 162, 166, 167, 169, 171, 172, 173, 176, 177, 178, 179, 182, 184, 186, 189, 193, 194, 196, 197, 200, 201, 202, 204, 205, 207, 208, 216, 217, 218, 219, 220, 221, 229, 232, 239, 240, 241, 242, 246, 247, 249, 250, 266, 270, 278, 281, 282, 283, 300, 301, 302, 303, 304, 306, 308], "80": [5, 6], "8005": 187, "808": [47, 86], "817": [30, 86], "818": 86, "8182": 175, "82": 118, "821": [64, 86], "83": [60, 86], "833": 86, "84": [36, 38, 39], "840": [22, 86], "8413": [98, 162], "847": [34, 86], "848": [64, 79, 86], "856": [24, 86], "8584": 166, "86": 86, "862": [83, 86], "863": [78, 86], "864": [49, 86], "868": [66, 86], "872": [43, 63, 86], "876": [155, 156, 159, 160, 235], "88": [59, 70, 86], "8808": [104, 167, 168], "886": [53, 86], "887": 247, "891773": 231, "89442719": 12, "895": [74, 86], "896": [71, 86], "9": [0, 1, 3, 6, 19, 86, 107, 110, 118, 120, 131, 171, 172, 173, 178, 182, 184, 186, 193, 194, 196, 200, 204, 205, 207, 213, 214, 216, 217, 218, 219, 220, 221, 223, 229, 232, 235, 238, 242, 246, 247, 248, 250, 276, 277, 300, 301, 302, 303, 304, 306], "904": [61, 86], "90709145": 234, "9091": 175, "9120": 190, "9163": 190, "928": [26, 86], "93": [69, 86], "94": 45, "9486833": 18, "949e": [251, 252], "9526": 103, "9545": 162, "955": [68, 86], "958": [66, 86], "96366276": 231, "9640": 169, "96402758": 280, "973": [54, 86], "978": [24, 86], "984": [31, 70, 86], "99": 221, "9957": 190, "99734545": 234, "999": [0, 216, 217, 218, 219, 220], "A": [1, 3, 5, 6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 32, 36, 40, 44, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 72, 73, 74, 75, 77, 78, 79, 80, 81, 86, 89, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 118, 120, 121, 122, 126, 127, 129, 130, 142, 151, 175, 176, 177, 178, 179, 186, 187, 190, 192, 193, 194, 195, 196, 197, 198, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 229, 231, 232, 233, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 306], "As": 234, "Be": 0, "By": [0, 2, 3, 8, 45, 46, 47, 48, 49, 50, 51, 52, 90, 143, 210, 220, 226, 231, 232, 233, 235, 300, 310], "For": [2, 3, 4, 8, 10, 11, 12, 14, 15, 16, 17, 19, 95, 97, 98, 100, 101, 102, 103, 105, 118, 120, 142, 155, 156, 159, 160, 166, 171, 172, 173, 182, 184, 192, 193, 194, 195, 196, 197, 210, 212, 234, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 267, 268, 269, 270, 271, 274, 276, 278, 281, 282, 283, 290, 292, 294, 296, 297, 310], "If": [0, 1, 2, 5, 6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 44, 87, 89, 91, 92, 93, 94, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 115, 118, 120, 127, 129, 132, 133, 142, 143, 144, 145, 146, 147, 148, 149, 151, 155, 156, 171, 172, 173, 182, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 211, 216, 217, 221, 222, 228, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 304, 305, 307, 308], "In": [3, 8, 17, 106, 107, 108, 187, 190, 225, 226, 227, 299, 310], "It": [1, 2, 3, 5, 8, 17, 18, 19, 21, 24, 25, 26, 27, 28, 29, 30, 36, 37, 38, 39, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 65, 77, 83, 86, 89, 91, 92, 93, 94, 95, 115, 118, 142, 143, 144, 145, 146, 150, 162, 164, 165, 169, 182, 183, 186, 187, 188, 189, 190, 200, 201, 202, 210, 211, 212, 213, 219, 221, 222, 223, 226, 234, 238, 239, 240, 243, 244, 245, 247, 248, 269, 271, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300], "Its": [19, 236], "Near": 17, "No": 110, "Not": 183, "One": [37, 310], "The": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 118, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310], "There": 293, "These": [4, 8, 9, 12, 15, 18, 20, 53, 54, 73, 74, 75, 83, 86, 175, 176, 177, 178, 179, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 222, 229, 236, 310], "To": [3, 86, 212, 233, 236, 251, 252, 289, 310], "With": [3, 110, 300, 310], "_": [15, 91, 92, 94, 95, 97, 98, 100, 101, 102, 103, 105, 120, 142, 193, 194, 195, 196, 197, 203, 204, 205, 206, 207, 208, 213, 214, 216, 217, 218, 219, 221, 223, 240, 241, 242, 246, 281, 282, 301, 302, 303, 305, 306, 307], "_1": [12, 91, 92, 93, 94, 95, 118, 182, 246, 285, 287, 298], "_2": [12, 91, 92, 93, 94, 95, 118, 182, 246, 285, 287, 298], "__call__": [1, 89], "__getitem__": [0, 2, 3, 5, 6], "__init__": [0, 1, 2, 3, 8, 21, 28, 32, 36, 40, 41, 77, 84, 87, 88, 89, 90, 91, 92, 93, 94, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 182, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 228, 237, 299, 300], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5, 6], "__repr__": 211, "__setattr__": 89, "_activ": 104, "_arraylik": [229, 250, 252, 255, 257], "_arraylikeint": 290, "_arrayorscalar": [88, 90, 229, 237, 284], "_base_activ": 36, "_base_dtyp": [249, 251, 254, 256], "_c": 302, "_decai": 219, "_fanmod": [155, 156], "_grad_en": [225, 227], "_i": [12, 16, 104, 118, 168, 189, 192, 198, 203, 206, 240, 241, 243, 244, 246, 247, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 287, 292, 294, 297, 298], "_in": [155, 156, 159, 160], "_j": [104, 168, 203, 206, 246, 270, 278, 282, 283], "_k": 295, "_left": 142, "_make_lay": 77, "_modul": 89, "_n": [12, 91, 92, 93, 94, 95, 285, 287, 298], "_numpyarrai": 229, "_out": [155, 156, 159, 160, 292, 296], "_p": 16, "_pad": 290, "_paddingstr": [144, 145, 146, 147, 148, 149, 171, 172, 173], "_paramet": 89, "_reductiontyp": [121, 122, 123, 125, 126, 186, 187, 188, 189, 190], "_right": 142, "_scalar": [153, 157, 158, 159, 160, 229, 249, 263], "_seresnetbottleneck": [63, 64, 67], "_seresnetmodul": [65, 66], "_shapelik": [87, 130, 198, 229, 232, 254, 256, 293, 294, 297], "_size": [131, 132, 133], "_skresnetmodul": [73, 74, 75], "_slope": 163, "_statedict": 211, "_t": [220, 221], "_tensor": [88, 90, 250, 284], "_tensorop": 237, "_u": 17, "_v": 17, "_valu": [263, 290], "_width": 290, "a_i": [243, 244, 247], "aaai": 86, "ab": 258, "abc": [2, 211], "abil": [8, 86, 310], "about": [8, 87], "abov": [8, 225, 227, 234, 250, 253], "absolut": [15, 16, 123, 218, 259], "abstract": [2, 3, 210, 211, 212, 213, 221, 223], "abstractmethod": 211, "acceler": [86, 166, 192, 193, 194, 213, 219, 221, 223], "accept": [183, 231, 237], "access": [0, 2, 3, 4, 5, 6, 56, 57, 58, 59, 60, 61, 88, 90, 91, 92, 93, 94, 95, 293], "accord": [142, 171, 172, 173, 182, 184, 187, 190, 214, 215, 216, 217, 218, 219, 220, 282], "accordingli": 11, "account": [15, 17, 18], "accumul": [213, 214, 215, 238, 239, 243, 244, 245, 248], "accur": 64, "accuraci": [40, 41, 67, 86], "achiev": [55, 56, 57, 58, 59, 60, 61, 86, 106, 107, 108, 131, 200, 201, 202, 219, 305, 307], "across": [0, 42, 88, 92, 95, 130, 131, 132, 133, 159, 160, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 229, 231, 232, 233, 234, 235, 236, 251, 252, 270, 283], "act": 217, "activ": [8, 21, 36, 45, 49, 50, 62, 77, 84, 86, 91, 95, 97, 98, 100, 101, 102, 103, 104, 105, 111, 144, 145, 146, 150, 151, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 175, 176, 177, 178, 179, 186, 187, 190, 192, 193, 194, 198, 269, 271], "actual": [90, 186, 187, 189, 190, 237, 303], "ad": [23, 44, 89, 91, 92, 93, 94, 95, 106, 107, 108, 118, 120, 121, 122, 127, 129, 130, 134, 135, 136, 138, 139, 140, 144, 145, 146, 171, 172, 173, 186, 187, 192, 193, 194, 195, 196, 197, 198, 203, 204, 205, 206, 207, 208, 214, 215, 216, 217, 218, 219, 220, 221, 228, 297, 310], "adadelta": 224, "adagrad": [214, 224], "adam": [86, 217, 218, 219, 220, 224], "adamax": 224, "adamw": 224, "adapt": [21, 28, 36, 63, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 84, 86, 131, 132, 133, 150, 151, 200, 201, 202, 214, 215, 216, 219, 220, 221, 222], "adaptive_avg_pool1d": [117, 137, 200], "adaptive_avg_pool2d": [117, 137, 201], "adaptive_avg_pool3d": [117, 137, 202], "adaptiveavgpool1d": [181, 209], "adaptiveavgpool2d": [21, 62, 77, 84, 181, 209], "adaptiveavgpool3d": [181, 209], "add": [4, 89, 91, 92, 95, 118, 120, 171, 172, 173, 182, 184, 198, 211, 213, 216, 221, 223, 226, 258, 290, 297], "add_modul": [89, 95], "add_param_group": 211, "addit": [4, 8, 15, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, 85, 89, 92, 95, 118, 120, 127, 129, 182, 184, 192, 193, 194, 195, 196, 197, 213, 219, 226, 236, 238, 295], "addition": 219, "address": [187, 190, 216, 217, 220], "adjust": [33, 40, 42, 68, 69, 70, 71, 72, 76, 131, 132, 133, 151, 175, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 212, 216, 220, 221, 222, 287, 298], "advanc": [3, 17, 41, 49, 86, 92, 95, 106, 107, 108, 131, 132, 133, 200, 201, 202, 210, 213], "advantag": [34, 227], "affect": [225, 291, 294, 299], "affin": [144, 145, 146, 192, 193, 194, 195, 196, 197, 198, 306], "after": [15, 21, 84, 90, 91, 92, 93, 94, 95, 115, 150, 151, 161, 162, 163, 164, 166, 167, 168, 169, 172, 173, 175, 176, 177, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 203, 204, 205, 206, 207, 208, 217, 227, 237, 238, 239, 243, 244, 245, 247, 248, 290, 300], "afterward": 227, "aggreg": [86, 151, 246, 292, 296], "aim": [4, 8], "al": [29, 86], "alex": 86, "alexnet": [35, 84, 86], "algebra": [8, 9, 253], "algorithm": [5, 8, 15, 17, 18, 211, 212, 236], "align": [19, 142, 241, 242], "align_corn": 142, "all": [0, 3, 4, 8, 18, 86, 89, 91, 92, 93, 94, 95, 107, 108, 131, 132, 133, 135, 136, 139, 140, 142, 145, 146, 151, 163, 164, 173, 200, 201, 202, 204, 205, 208, 210, 211, 212, 213, 216, 221, 222, 223, 247, 269, 270, 271, 278, 281, 283, 285, 286, 287, 292, 294, 295, 296, 298, 301, 302, 310], "allevi": [86, 97], "alloc": [251, 252], "allow": [0, 1, 3, 4, 8, 17, 18, 34, 36, 44, 55, 68, 69, 70, 71, 72, 76, 86, 90, 91, 92, 93, 94, 95, 97, 100, 101, 104, 108, 110, 143, 151, 161, 162, 163, 166, 167, 168, 169, 171, 172, 173, 210, 214, 215, 226, 249, 254, 256, 257, 282, 284, 289, 299, 300, 310], "along": [104, 142, 151, 168, 241, 242, 246, 269, 270, 271, 278, 281, 283, 285, 287, 289, 292, 295, 296, 297, 298, 305, 307], "alongsid": 88, "alpha": [97, 100, 102, 111, 161, 166, 175, 213, 221], "alpha_dropout": [116, 117, 175], "alphadropout": [180, 181], "alphadropoutmodel": 175, "alreadi": 228, "also": [87, 97, 98, 100, 101, 102, 103, 105, 118, 120, 142, 219, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 256, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 279, 280, 285, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298], "alter": [95, 293], "altern": [1, 162, 214, 242], "alwai": [90, 291, 304, 305, 307], "among": [30, 151], "amount": [106, 107, 108, 134, 135, 136, 138, 139, 140, 147, 148, 149, 219], "amsgrad": [216, 217], "an": [0, 1, 3, 8, 12, 14, 15, 17, 18, 20, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 83, 84, 85, 86, 87, 89, 91, 92, 93, 94, 95, 98, 106, 107, 108, 110, 111, 112, 113, 114, 115, 118, 132, 133, 142, 143, 147, 148, 149, 151, 159, 160, 161, 165, 167, 171, 172, 173, 175, 176, 177, 178, 179, 182, 184, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 212, 213, 216, 219, 221, 227, 228, 229, 237, 242, 250, 253, 263, 270, 278, 283, 285, 292, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310], "analog": [292, 296], "analysi": [4, 150, 171, 172, 173, 197, 203, 205, 206, 208], "andreetto": 86, "andrew": 86, "angl": [143, 306], "ani": [0, 1, 2, 3, 15, 17, 22, 44, 72, 83, 85, 88, 89, 90, 91, 93, 94, 97, 98, 100, 101, 102, 103, 105, 111, 112, 118, 120, 127, 129, 167, 198, 210, 211, 225, 227, 228, 234, 237, 249, 250, 251, 253, 254, 255, 256, 257, 269, 271, 282, 284, 285, 286, 287, 290, 292, 295, 296, 297, 298, 299, 310], "anoth": [94, 248, 255, 257, 300, 310], "api": [4, 200, 201, 202, 310], "appear": 211, "append": [92, 94, 95], "appli": [2, 4, 5, 6, 8, 15, 21, 55, 72, 82, 84, 86, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 108, 110, 111, 112, 113, 114, 115, 118, 120, 121, 122, 123, 125, 126, 144, 145, 146, 150, 151, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 175, 176, 177, 178, 179, 182, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213, 214, 215, 217, 218, 219, 220, 242, 290, 292, 299, 302, 304, 305, 306, 307, 308, 310], "applic": [4, 17, 23, 33, 34, 40, 41, 43, 86, 106, 129, 171, 172, 173, 182, 184, 236, 249, 256, 290, 308], "approach": [3, 32, 95, 217], "appropri": [17, 86, 89, 93, 95, 171, 172, 173, 175, 176, 177, 187, 204, 205, 225, 227], "approx": 102, "approxim": [17, 98, 162, 204, 207], "ar": [1, 2, 3, 4, 8, 11, 12, 14, 15, 17, 18, 19, 20, 28, 29, 30, 86, 88, 89, 90, 91, 92, 93, 94, 95, 104, 106, 107, 108, 110, 118, 120, 132, 133, 142, 147, 148, 149, 150, 151, 155, 156, 158, 159, 160, 168, 171, 172, 173, 175, 176, 177, 178, 179, 182, 184, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 213, 216, 217, 219, 220, 221, 222, 223, 225, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 259, 263, 267, 269, 270, 271, 272, 273, 278, 281, 282, 285, 289, 292, 293, 296, 299, 300, 301, 303, 304, 308, 310], "arang": 258, "arbitrari": [92, 183, 251, 252, 263, 268, 270, 274, 276, 278, 282, 283], "arcco": 258, "arch": 228, "architectur": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 40, 41, 43, 44, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 91, 92, 93, 94, 95, 98, 150, 164, 182, 183, 210, 228], "arcsin": 258, "arctan": 258, "area": 142, "arg": [89, 183, 228, 251], "argument": [3, 4, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, 85, 89, 95, 183, 231, 251, 282], "around": [12, 143, 169], "arr": [229, 285, 287, 295, 298], "arrai": [8, 88, 90, 226, 229, 237, 242, 250, 255, 257, 284, 291, 292, 300, 310], "art": 86, "artifici": 86, "arxiv": 86, "asarrai": 229, "asgd": 224, "aspect": 308, "assign": [89, 91, 93, 95, 142, 187, 190], "assist": [28, 29, 30], "associ": [93, 94], "assum": [0, 1, 211, 212, 225], "attempt": [91, 95], "attent": [72, 94, 118, 150], "attribut": 89, "audio": 171, "augment": [3, 4, 65, 143, 236, 292, 296, 299, 303, 304, 305, 306, 307, 310], "autodiff": 8, "autograd": 210, "automat": [4, 8, 90, 91, 92, 93, 94, 210, 231, 232, 233, 235, 237, 251, 252, 257, 289, 300], "auxiliari": [28, 29, 30, 88], "avail": [4, 5, 6, 8], "averag": [21, 37, 38, 39, 44, 55, 62, 72, 77, 84, 88, 131, 132, 133, 134, 135, 136, 142, 150, 151, 189, 200, 201, 202, 203, 204, 205, 213, 214, 216, 221, 270], "avg_down": 44, "avg_pool": [203, 204, 205], "avg_pool1d": [117, 137], "avg_pool2d": [117, 137], "avg_pool3d": [117, 137], "avgpool": [21, 62, 77, 84, 151], "avgpool1d": [181, 209], "avgpool1dmodel": 203, "avgpool2d": [181, 209], "avgpool2dmodel": 204, "avgpool3d": [181, 209], "avgpool3dmodel": 205, "avoid": [2, 3, 17, 93, 227], "ax": [9, 226, 269, 270, 271, 278, 282, 283, 292, 294, 296], "axi": [104, 168, 241, 242, 269, 270, 271, 278, 283, 285, 287, 289, 290, 292, 294, 295, 296, 297, 298, 305, 307], "b": [9, 19, 86, 118, 120, 158, 171, 172, 173, 182, 184, 226, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 285, 287, 295, 298, 304], "b_i": [243, 244, 247], "back": [142, 204, 205, 228, 241, 246, 292, 296], "backbon": [73, 74, 75], "backpropag": [8, 11, 12, 14, 15, 17, 18, 20, 86, 88, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 118, 120, 142, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 203, 204, 205, 206, 207, 208, 210, 227, 233, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 267, 269, 271, 284, 290, 292, 296, 300], "backward": [8, 88, 90, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 237, 300], "balanc": [56, 57, 58, 59, 60, 61, 188], "bar": 213, "base": [3, 9, 14, 15, 18, 19, 23, 28, 29, 30, 31, 32, 33, 34, 36, 55, 56, 57, 58, 59, 60, 61, 72, 77, 82, 86, 89, 91, 92, 93, 94, 110, 118, 131, 132, 133, 151, 175, 187, 188, 200, 201, 202, 210, 211, 212, 213, 217, 221, 222, 223, 238, 239, 243, 244, 245, 247, 248, 257, 267, 268, 269, 271, 282, 289, 290, 303, 304, 305, 306, 307], "base_width": [53, 54, 55, 72], "basic": [8, 21, 44, 56, 57, 58, 59, 60, 61, 73, 74, 75, 82, 84, 87, 106, 107, 108, 131, 132, 133, 144, 145, 146, 147, 148, 149, 150, 155, 156, 159, 160, 200, 201, 202, 301, 302, 303, 304, 305, 306, 307, 308], "basicblock": [44, 48, 51], "batch": [1, 2, 3, 9, 15, 18, 20, 29, 30, 31, 33, 34, 62, 68, 69, 70, 71, 76, 106, 107, 108, 110, 113, 114, 115, 118, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 171, 172, 173, 182, 184, 186, 187, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 220, 242, 301, 302, 303, 304, 306, 308], "batch_norm": [117, 128, 192, 193, 194], "batch_norm1": 95, "batch_norm2": 95, "batch_siz": [1, 2, 3, 82, 151], "batchnorm": [144, 145, 146], "batchnorm1d": [144, 181, 199], "batchnorm1dmodel": 192, "batchnorm2d": [95, 145, 181, 199], "batchnorm2dmodel": 193, "batchnorm3d": [146, 181, 199], "batchnorm3dmodel": 194, "bceloss": [181, 191], "becaus": [2, 232], "becom": [16, 89, 214, 222], "befor": [15, 62, 87, 90, 213, 219, 227, 234, 290, 302, 310], "begin": [1, 16, 97, 100, 101, 102, 161, 163, 164, 166, 188, 189, 190, 203, 204, 205, 206, 207, 208, 220, 222, 226, 236, 243, 244, 246, 259, 263, 269, 271, 273, 290], "behav": [188, 281], "behavior": [86, 92, 95, 225, 236, 242, 252, 310], "being": [94, 143, 175, 176, 177, 178, 179, 220, 225, 227, 285, 287, 298], "belong": 0, "below": [18, 29, 30, 31, 33, 34, 36, 37, 38, 39, 242, 250, 253], "benchmark": [5, 6], "benefici": 95, "benefit": [97, 210, 219, 229], "bernoulli": [175, 176, 177, 178, 179], "best": [155, 156, 159, 160], "beta": [192, 193, 194, 195, 196, 197, 198, 216, 217, 218, 219, 220], "beta1": [216, 217, 218, 219, 220], "beta2": [216, 217, 218, 219, 220], "beta_1": [216, 217, 218, 219, 220], "beta_2": [216, 217, 218, 219, 220], "better": [14, 84, 86, 98, 155, 156, 159, 160, 195, 196, 197, 210, 217, 219, 221, 302], "between": [56, 57, 58, 59, 60, 61, 86, 89, 106, 107, 108, 110, 118, 123, 144, 145, 146, 147, 148, 149, 151, 165, 171, 172, 173, 175, 176, 177, 178, 179, 182, 186, 187, 188, 189, 190, 213, 221, 222, 223, 236, 238, 239, 242, 245, 248, 249, 283, 304, 305, 307, 308], "beyond": [8, 92], "bia": [106, 107, 108, 118, 120, 127, 129, 130, 144, 145, 146, 147, 148, 149, 171, 172, 173, 182, 184, 192, 193, 194, 195, 196, 197, 198, 216, 217, 218, 219, 220], "bias": [171, 172, 173, 184, 198, 210], "bias1": 93, "bias2": 93, "big": [147, 148, 149], "bilinear": [117, 119, 142, 181, 185], "bilinearmodel": 182, "binari": [103, 121, 167, 175, 176, 177, 178, 179, 186], "binary_cross_entropi": [117, 124], "block": [23, 24, 25, 26, 27, 32, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 86, 89, 110, 144, 145, 146, 151, 171, 172, 173, 227], "block1": [87, 210], "block2": [87, 210], "block_arg": [44, 62], "block_config": 23, "blue": 304, "bmatrix": 246, "bn": [144, 145, 146], "bn_affin": [144, 145, 146], "bool": [1, 5, 6, 20, 28, 29, 30, 44, 87, 89, 90, 111, 112, 113, 114, 115, 127, 129, 142, 144, 145, 146, 147, 148, 149, 171, 172, 173, 182, 184, 192, 193, 194, 195, 196, 197, 198, 216, 217, 221, 225, 231, 232, 233, 235, 237, 249, 250, 251, 252, 253, 254, 255, 256, 257, 269, 270, 271, 278, 283, 284, 300], "both": [106, 120, 132, 134, 138, 144, 162, 171, 172, 201, 203, 204, 206, 207, 240, 241, 242, 246, 250, 289, 308], "bottleneck": [23, 41, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 86, 150], "bottom": 142, "bound": [156, 158, 160, 222, 235], "box": 4, "branch": [28, 29, 30, 86, 151], "break": 210, "brief": 310, "bright": 310, "broadcast": [178, 179, 270, 278, 283, 293, 297], "buffer": [213, 219, 221, 223], "build": [8, 34, 44, 45, 46, 47, 48, 49, 50, 51, 52, 55, 72, 73, 74, 75, 86, 89, 92, 95, 210, 310], "built": [3, 8, 45, 49, 50, 95, 210], "burg": 6, "c": [6, 44, 56, 57, 58, 59, 60, 61, 73, 74, 75, 86, 110, 113, 114, 115, 122, 126, 127, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 150, 178, 179, 187, 190, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 226, 287, 298, 302], "c_": [171, 172, 173], "c_in": [106, 107, 108, 144, 145, 146], "c_out": [106, 107, 108], "calcul": [0, 1, 8, 9, 90, 214, 215, 218, 219, 220, 227, 232, 237], "calculu": [10, 17], "call": [1, 89, 225, 228, 238, 239, 242, 243, 244, 245, 247, 248], "callabl": [211, 228, 299], "can": [0, 2, 3, 4, 8, 10, 12, 14, 15, 17, 18, 20, 44, 53, 54, 68, 69, 70, 71, 82, 83, 86, 87, 88, 90, 91, 92, 93, 94, 95, 100, 106, 107, 108, 143, 151, 162, 163, 165, 169, 171, 172, 173, 195, 196, 197, 204, 205, 206, 207, 208, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 225, 226, 227, 229, 235, 236, 237, 242, 251, 252, 253, 254, 256, 257, 270, 278, 283, 287, 289, 290, 292, 293, 296, 297, 298, 299, 300, 303, 305, 306, 307, 310], "cannot": [11, 12, 14, 15, 18, 19, 20], "cap": 165, "capabl": [8, 249, 250, 253, 254, 255, 256, 257], "capac": [40, 53, 54, 55, 56, 57, 58, 59, 60, 61, 68, 69, 70, 71, 76, 86], "captur": [72, 86, 110, 171, 172, 173, 182], "cardin": [55, 56, 57, 58, 59, 60, 61, 72, 86], "care": 227, "cartesian": 289, "case": [3, 16, 36, 42, 97, 100, 101, 102, 161, 163, 164, 166, 188, 189, 190, 203, 204, 205, 206, 207, 208, 210, 215, 220, 222, 226, 243, 244, 259, 263, 269, 271, 273, 290, 310], "categori": [5, 45, 46, 47, 48, 49, 50, 51, 52], "caus": [3, 17, 213, 221, 223], "cautiou": 0, "cdot": [10, 11, 14, 15, 16, 19, 97, 98, 100, 102, 103, 106, 107, 108, 118, 120, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 150, 159, 160, 162, 167, 175, 182, 184, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 214, 215, 216, 217, 218, 219, 220, 222, 240, 241, 242, 245, 247], "center": [143, 169, 221, 301, 310], "centercrop": [309, 310], "central": 229, "certain": [11, 98, 118, 182, 216, 217, 225, 269, 271], "chain": [14, 15, 95, 299, 310], "challeng": [5, 86], "cham": 86, "chanc": [304, 305, 307], "chang": [123, 188, 222, 226, 227, 228, 291, 293, 297, 304, 310], "channel": [23, 36, 37, 38, 39, 40, 42, 44, 55, 56, 57, 58, 59, 60, 61, 66, 68, 69, 70, 71, 76, 77, 82, 86, 106, 107, 108, 110, 113, 114, 115, 127, 129, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 171, 172, 173, 178, 179, 192, 193, 194, 195, 196, 197, 200, 203, 204, 205, 206, 207, 208, 302, 304, 308], "character": [53, 54], "check": [225, 301, 303], "checkpoint": 212, "chen": 86, "choic": 289, "choleski": 13, "chollet": 86, "choos": 86, "chosen": 175, "christian": 86, "christoph": 6, "chu": 86, "clariti": 229, "class": [3, 4, 8, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, 85, 87, 104, 122, 126, 210, 212, 228, 250, 253, 284, 310], "classic": 39, "classif": [4, 5, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 103, 104, 121, 122, 126, 167, 168, 186, 187, 190], "classifi": [21, 28, 29, 30, 36, 37, 38, 39, 44, 55, 72, 77, 82, 84], "cleaner": [1, 227, 242], "clear": [90, 237, 251, 252], "clearli": 229, "clf_in_featur": 36, "clf_layer": 36, "clip": [143, 165, 222, 258], "clockwis": 143, "close": [14, 17, 166, 186, 221], "closer": 161, "closur": [211, 212], "cloth": 5, "cnn": 86, "co": [258, 274], "code": [15, 91, 93, 95, 225, 227, 229, 236], "coeffici": [19, 142, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223], "col": 110, "collect": [4, 9, 86, 91, 92, 94, 95, 212], "color": [304, 310], "colorjitt": 310, "column": [11, 12, 14, 18, 19, 20, 87, 110, 253, 287, 289], "com": [5, 6], "combin": [1, 3, 31, 32, 33, 76, 86, 92, 95, 97, 98, 144, 145, 146, 150, 151, 162, 187, 210, 219, 220, 270, 278, 283, 285, 310], "combined_dataset": [0, 1], "common": [110, 143, 212, 310], "commonli": [8, 40, 41, 42, 43, 98, 103, 104, 105, 106, 108, 118, 125, 127, 129, 143, 150, 159, 160, 165, 168, 173, 186, 189, 190, 203, 204, 205, 206, 207, 208, 226, 229, 254, 294, 300, 301, 302, 303, 305, 306, 307, 310], "compar": [53, 54, 84, 236, 295], "compat": [4, 9, 72, 183, 198, 210, 226, 236, 300, 310], "complex": [2, 3, 8, 12, 34, 44, 47, 50, 51, 64, 66, 87, 91, 92, 95, 101, 164, 206, 208, 210, 212, 310], "compon": [17, 28, 29, 30, 31, 32, 33, 34, 89, 92, 212, 237, 310], "compos": [5, 6, 82, 171, 172, 173, 203, 204, 205, 206, 207, 208, 210, 310], "comprehens": 3, "compris": [53, 54], "comput": [8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 40, 44, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 70, 71, 76, 86, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 110, 118, 120, 121, 122, 123, 125, 126, 127, 129, 131, 132, 133, 142, 144, 145, 146, 147, 148, 149, 150, 151, 155, 156, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 221, 225, 226, 227, 229, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 289, 290, 292, 296, 300, 310], "computation": [3, 17, 45], "compute_loss": [212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "concaten": [0, 106, 107, 108, 287, 288, 295, 298], "concept": [8, 17, 41, 86], "condit": [10, 11, 14], "confer": 86, "config": 77, "configur": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 83, 85, 94, 144, 145, 146], "conjunct": [110, 190], "connect": [21, 23, 24, 25, 26, 27, 31, 32, 33, 34, 36, 37, 38, 39, 44, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 72, 73, 74, 75, 77, 82, 84, 86, 120, 150, 151, 171, 172, 173, 184], "consecut": 77, "consid": [3, 14, 17, 23, 95, 155, 156, 159, 160, 210, 222, 225, 251, 252, 310], "consider": 17, "consist": [2, 4, 5, 21, 37, 38, 39, 44, 88, 131, 132, 133, 151, 200, 201, 202, 229, 234, 236, 290, 301, 308, 310], "consistent_tensor": 236, "consol": 87, "constant": [121, 122, 127, 129, 130, 154, 166, 186, 187, 192, 193, 194, 195, 196, 197, 198, 214, 215, 216, 217, 218, 219, 220, 221, 229, 290], "constant_pad": 290, "constraint": [1, 40, 151], "construct": [8, 24, 25, 26, 27, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 73, 74, 75, 78, 79, 80, 81, 92, 210, 250, 292, 296], "constructor": [24, 25, 26, 27, 42, 43, 53, 54, 68, 69, 70, 71, 76, 78, 79, 80, 81], "contain": [1, 5, 6, 11, 12, 17, 18, 19, 20, 32, 36, 44, 55, 56, 57, 58, 59, 60, 61, 62, 72, 77, 87, 89, 91, 92, 93, 94, 95, 104, 110, 118, 120, 121, 122, 126, 142, 186, 187, 190, 211, 238, 239, 240, 241, 243, 244, 245, 246, 248, 249, 252, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 286, 289], "content": 143, "context": [225, 227], "contextmanag": 227, "contigu": 291, "continu": [163, 233], "contrast": [195, 196, 197, 310], "contribut": [142, 175, 176, 177, 178, 179, 203, 206, 207, 208, 213, 219, 281], "control": [55, 151, 161, 188, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 236, 300, 310], "conv": [32, 62, 144, 145, 146, 193, 194], "conv1": [37, 38, 39, 95, 171, 172, 173, 203, 204, 205, 206, 207, 208], "conv1d": [109, 117, 144, 147, 174, 181, 203, 206], "conv1dmodel": 171, "conv2": [37, 38, 39, 95, 171, 172, 173], "conv2d": [92, 95, 109, 117, 145, 148, 174, 181, 193, 204, 207, 210], "conv2dmodel": 172, "conv3d": [109, 117, 146, 149, 174, 181, 194, 205, 208], "conv3dmodel": 173, "conv_bia": [144, 145, 146], "conv_config": 77, "conv_lay": [36, 92], "convblock": 210, "convbnrelu1d": 152, "convbnrelu2d": 152, "convbnrelu3d": 152, "conveni": [4, 22, 85], "convent": 242, "converg": [17, 169, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 302], "convers": [187, 190, 304, 310], "convert": [5, 6, 77, 88, 90, 104, 168, 237, 289, 299, 300, 304, 310], "convnetwork": 92, "convolut": [21, 22, 23, 29, 30, 32, 36, 37, 38, 39, 40, 44, 55, 56, 57, 58, 59, 60, 61, 62, 68, 69, 70, 71, 72, 76, 77, 82, 84, 85, 86, 92, 106, 107, 108, 110, 144, 145, 146, 147, 148, 149, 150, 151, 171, 172, 173, 204, 205, 207, 208, 290], "convolv": [106, 107, 108, 171, 172, 173], "coordin": 289, "core": [0, 1, 2, 3, 89, 210, 211, 237, 310], "corinna": 6, "corner": [142, 301, 303], "correct": [91, 187, 190, 216, 217, 218, 219, 220, 300], "correctli": [17, 89, 91, 92, 93, 94, 95, 187, 190, 236], "correspond": [0, 1, 2, 5, 6, 12, 42, 53, 54, 73, 74, 75, 91, 93, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 118, 120, 142, 164, 168, 182, 184, 192, 193, 194, 195, 196, 197, 204, 205, 213, 221, 223, 240, 241, 243, 244, 247, 267, 268, 274, 276, 287, 290, 292, 296, 298], "cort": 6, "cosh": [258, 275, 280], "cosin": [260, 264, 265, 274], "cost": [40, 55, 86, 147, 148, 149], "could": 89, "count": [86, 87, 285], "counterclockwis": [143, 306], "cover": [9, 106, 107, 108], "coverag": [131, 132, 133], "creat": [2, 3, 8, 21, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 89, 92, 95, 151, 165, 210, 226, 228, 236, 249, 253, 254, 255, 256, 257, 289, 295, 299, 310], "creation": [92, 95, 310], "criterion": [186, 187, 188, 189, 190], "critic": [17, 212, 236], "crop": [301, 303, 310], "cross": [121, 122, 186, 187], "cross_entropi": [117, 124], "crossentropyloss": [181, 191], "cube": 258, "cumul": [98, 162], "current": [89, 213, 216, 222, 225], "custom": [4, 8, 21, 22, 23, 33, 34, 36, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 77, 83, 84, 85, 88, 91, 92, 93, 94, 95, 143, 144, 145, 146, 161, 163, 210, 236, 253], "custom_config": 77, "custom_lenet": 36, "customiz": 310, "custommodul": 88, "customnetwork": 91, "customparametermodel": [93, 94], "cvpr": 86, "d": [86, 108, 115, 133, 136, 140, 146, 194, 197, 198, 202, 205, 208, 226, 250, 306], "d_": [108, 133, 136, 140, 173, 202, 205, 208], "d_1": 198, "d_2": 198, "d_n": 198, "d_out": [108, 136, 140], "dampen": [213, 221, 223], "data": [4, 5, 6, 8, 15, 88, 90, 94, 105, 106, 108, 110, 114, 115, 120, 143, 144, 145, 146, 151, 164, 169, 171, 172, 173, 184, 197, 203, 205, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 229, 236, 237, 238, 239, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 284, 290, 291, 292, 293, 294, 296, 299, 300, 303, 304, 305, 306, 307, 310], "databas": 6, "dataload": [2, 3], "dataset": [3, 5, 6, 37, 38, 39, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 143, 215, 227, 299, 301, 310], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 246, "debug": [87, 95, 225, 234, 310], "decai": [213, 214, 215, 216, 217, 218, 219, 220, 221, 223], "decompos": [10, 18, 20], "decomposit": [9, 10, 14, 17, 18, 20], "decor": [56, 57, 58, 59, 60, 61, 228], "decoupl": [86, 214, 215, 217, 218, 219, 220], "decreas": [216, 217, 222], "deep": [1, 3, 4, 8, 32, 44, 45, 46, 47, 49, 50, 56, 57, 58, 59, 60, 61, 63, 64, 67, 86, 127, 162, 166, 210, 236, 299, 300, 310], "deeper": [8, 29, 31, 34, 44, 51, 86, 166], "def": [0, 1, 2, 3, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 118, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 182, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 228, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300], "default": [1, 5, 6, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 97, 100, 104, 106, 107, 108, 111, 112, 113, 114, 115, 121, 122, 123, 125, 126, 127, 129, 130, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 163, 168, 171, 172, 173, 175, 176, 177, 178, 179, 182, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 203, 204, 205, 206, 207, 208, 211, 212, 219, 225, 231, 232, 233, 235, 237, 249, 250, 251, 252, 253, 254, 255, 256, 257, 269, 270, 271, 278, 282, 283, 284, 285, 287, 289, 290, 292, 295, 298, 300, 304, 305, 307], "defin": [1, 3, 4, 8, 23, 28, 29, 30, 31, 32, 33, 34, 36, 44, 62, 73, 74, 75, 77, 91, 92, 93, 94, 95, 162, 165, 186, 187, 188, 189, 190, 203, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 229, 232, 233, 247, 252, 263, 282, 299, 310], "definit": [8, 10, 144, 145, 146, 310], "degre": [143, 306, 310], "delai": 213, "delta": [104, 123, 168, 188, 214], "delta_": [104, 168], "demonstr": [8, 9, 68, 69, 70, 71, 76, 86, 210, 229], "denomin": [127, 129, 130, 144, 145, 146, 192, 193, 194, 195, 196, 197, 198, 214, 215, 216, 217, 218, 219, 220, 221, 239], "denot": [15, 167, 171, 172, 173, 175, 176, 177, 178, 179, 282], "dens": [8, 23, 24, 25, 26, 27, 86, 215], "dense1": 8, "dense2": 8, "densenet": [24, 25, 26, 27, 35, 86, 150], "densenet_121": 86, "densenet_169": 86, "densenet_201": 86, "densenet_264": 86, "densiti": [98, 162], "depend": [8, 15, 16, 94, 121, 122, 123, 125, 126, 142, 171, 240, 250, 269, 271, 292, 296, 303, 304, 308], "depth": [92, 108, 115, 133, 136, 140, 173, 194, 197, 202, 205, 208], "depthseparableconv1d": 152, "depthseparableconv2d": 152, "depthseparableconv3d": 152, "depthwis": [40, 82, 86, 106, 107, 108, 147, 148, 149], "depthwise_separ": [147, 148, 149], "der": 86, "deriv": [17, 18, 104, 131, 132, 133, 162, 168, 169, 171, 172, 173, 182, 184, 228], "descend": 20, "descent": [8, 213, 223], "describ": [11, 12], "descript": 310, "deseri": 88, "design": [3, 4, 8, 9, 21, 22, 29, 30, 31, 37, 38, 39, 45, 46, 47, 48, 49, 50, 51, 52, 63, 66, 82, 85, 86, 90, 92, 93, 94, 95, 97, 102, 166, 175, 210, 229, 310], "desir": [83, 88, 131, 132, 133, 200, 201, 202, 282, 284], "destin": 89, "det": [9, 13], "det_a": 11, "detail": [8, 87, 212, 236, 242], "detect": 86, "determin": [0, 8, 9, 10, 11, 36, 53, 54, 131, 132, 133, 155, 156, 159, 160, 171, 172, 173, 200, 201, 202, 204, 205, 207, 208, 221, 225, 231, 232, 233, 235, 251, 252, 301, 303], "determinist": 143, "develop": [8, 210, 236, 310], "deviat": [155, 157, 159, 299, 302, 310], "devic": 41, "diag": [17, 258], "diagon": [17, 18, 20, 250, 253, 281], "diagonaliz": 12, "dict": [22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 42, 43, 44, 53, 54, 56, 57, 58, 59, 60, 61, 62, 68, 69, 70, 71, 73, 74, 75, 76, 83, 85, 89, 91, 93, 183, 211], "dictionari": [36, 89, 90, 91, 93, 95, 211], "differ": [0, 15, 28, 36, 68, 69, 70, 71, 76, 92, 95, 104, 118, 142, 151, 168, 182, 189, 212, 226, 234, 236, 248, 257, 283, 294, 310], "differenti": [8, 10, 19, 162, 210, 231, 232, 233, 235, 237, 249, 251, 252, 254, 256], "digit": [5, 6, 39, 86], "dilat": [106, 107, 108, 144, 145, 146, 147, 148, 149, 171, 172, 173], "dilation_height": 110, "dilation_width": 110, "dim": [187, 190], "dimens": [11, 12, 14, 15, 18, 19, 20, 21, 44, 55, 72, 77, 84, 86, 90, 104, 118, 120, 127, 129, 130, 132, 133, 142, 150, 151, 168, 171, 172, 173, 192, 193, 194, 195, 196, 197, 198, 201, 202, 204, 205, 206, 207, 208, 226, 229, 231, 235, 237, 241, 251, 269, 270, 271, 278, 281, 282, 283, 285, 287, 290, 292, 294, 295, 296, 297, 298, 301, 303, 308], "dimension": [15, 17, 18, 20, 106, 107, 108, 134, 135, 136, 138, 139, 140, 151, 171, 172, 173, 177, 178, 179, 192, 193, 194, 195, 196, 197, 203, 204, 205, 206, 207, 208, 226, 241, 242, 246, 250, 267, 270, 278, 281, 283, 286, 291, 292, 294, 296], "diminish": 215, "direct": [12, 186, 187, 188, 189, 190, 213, 221, 222, 223], "directli": [86, 91, 92, 93, 94, 142, 214, 215, 217, 218, 219, 220, 234, 236, 284, 310], "directori": [3, 4, 5, 6], "disabl": [225, 227], "discontinu": 273, "discrep": [186, 187, 190], "discret": [232, 236], "disk": 3, "displai": [22, 85, 87], "distribut": [98, 104, 142, 155, 156, 157, 158, 159, 160, 162, 168, 171, 172, 173, 175, 176, 177, 178, 179, 182, 184, 187, 190, 203, 204, 205, 231, 232, 233, 235, 236, 270, 278, 281, 283, 295, 302, 304, 305, 306, 307], "div": 258, "divers": [143, 305, 307, 310], "diversifi": 310, "divid": [1, 17, 92, 95, 104, 106, 107, 108, 168, 186, 187, 188, 189, 190, 239, 302], "divis": [8, 17, 106, 107, 108, 175, 176, 177, 178, 179, 214, 215, 216, 217, 218, 219, 220, 221, 239], "do": [17, 19, 88, 91, 92, 93, 94, 111, 112, 113, 114, 210, 220, 225, 257, 281, 290], "document": [4, 8, 86, 212, 229, 236], "doe": [8, 15, 16, 17, 18, 20, 87, 88, 91, 92, 93, 94, 95, 160, 216, 217, 222, 225, 227, 231, 232, 233, 234, 235, 249, 250, 251, 252, 253, 254, 255, 256, 257, 293], "doesn": 227, "doi": 86, "domain": 4, "don": 227, "dot": [12, 15, 91, 92, 93, 94, 95, 198, 206, 207, 208, 241, 246, 258, 285, 287, 295, 298], "down": [3, 210, 308], "download": [4, 5, 6], "drawback": 97, "drawn": [231, 232, 233, 235, 236, 306], "drop": [175, 176, 177, 178, 179], "dropout": [21, 30, 77, 84, 86, 98, 111, 113, 114, 115, 175, 177, 178, 179], "dropout1d": [116, 117, 180, 181], "dropout1dmodel": 177, "dropout2d": [116, 117, 180, 181], "dropout3d": [116, 117, 180, 181], "dropout_prob": 30, "dropoutmodel": 176, "dtype": [88, 90, 237, 249, 250, 251, 252, 253, 254, 255, 256, 257, 284, 300], "due": [15, 17, 23, 106, 107, 164, 306], "dummi": 87, "duplic": [91, 93], "dure": [3, 8, 11, 12, 14, 17, 18, 20, 28, 29, 30, 44, 86, 88, 89, 90, 91, 92, 93, 94, 95, 104, 111, 112, 113, 114, 115, 127, 129, 143, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 203, 204, 205, 206, 207, 208, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 225, 227, 237, 238, 269, 270, 271, 278, 283, 300, 303, 306, 310], "dy": [100, 163], "dynam": [0, 2, 3, 72, 76, 86, 89, 92, 93, 94, 95, 131, 132, 133, 151, 198, 200, 201, 202, 215, 220, 225], "dynamicnetwork": 92, "e": [0, 11, 12, 14, 15, 18, 20, 29, 30, 31, 33, 34, 36, 37, 38, 39, 77, 88, 104, 151, 167, 168, 175, 187, 211, 214, 221, 222, 253, 265, 267, 268, 275, 280, 281, 285, 304], "each": [1, 2, 3, 4, 12, 15, 17, 18, 20, 21, 23, 36, 40, 42, 44, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 72, 73, 74, 75, 77, 84, 86, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 118, 120, 127, 129, 131, 132, 133, 150, 151, 164, 168, 171, 172, 173, 175, 176, 177, 178, 179, 182, 184, 186, 187, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 214, 215, 216, 217, 218, 219, 220, 221, 222, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 285, 287, 289, 290, 292, 295, 296, 298, 299, 300, 301, 302, 303, 304, 306, 308, 310], "earli": 220, "eas": [4, 8], "easi": [2, 3, 4, 8, 56, 57, 58, 59, 60, 61, 90, 91, 93], "easier": [3, 91, 92, 95], "easili": [4, 90, 94, 310], "eccv": 86, "economi": 20, "edg": 290, "educ": [8, 86], "effect": [86, 91, 92, 93, 94, 95, 104, 106, 107, 108, 110, 161, 162, 164, 167, 168, 169, 192, 193, 194, 195, 196, 197, 198, 225, 226, 227, 287, 298], "effici": [1, 2, 3, 5, 6, 8, 9, 14, 19, 33, 34, 41, 43, 55, 56, 57, 58, 59, 60, 61, 68, 69, 70, 71, 76, 82, 86, 110, 147, 148, 149, 165, 187, 210, 227], "eig": 13, "eigenvalu": [12, 18], "eigenvector": 12, "eigval": 12, "eigvec": 12, "either": [120, 229, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 284, 289], "element": [0, 17, 18, 30, 90, 94, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 144, 145, 146, 147, 148, 149, 150, 164, 168, 171, 172, 173, 175, 176, 177, 178, 179, 186, 187, 188, 189, 190, 198, 203, 204, 205, 206, 207, 208, 226, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 286, 289, 290, 292, 293, 294, 296], "elementwise_affin": 198, "elsewher": [206, 207, 208, 253], "elu": [99, 117, 170, 181], "elumodel": 161, "embed": [40, 41, 43], "empti": [89, 95, 258], "empty_lik": 258, "enabl": [0, 1, 2, 3, 8, 15, 20, 33, 72, 73, 74, 75, 86, 89, 90, 91, 92, 93, 94, 164, 171, 172, 173, 182, 184, 210, 212, 225, 227, 231, 232, 233, 235, 237, 299], "encapsul": [210, 237], "encod": [187, 190], "encourag": [176, 177, 178, 179, 186, 187, 190, 216], "end": [16, 97, 100, 101, 102, 161, 163, 164, 166, 188, 189, 190, 203, 204, 205, 206, 207, 208, 220, 222, 243, 244, 246, 249, 259, 263, 269, 271, 273, 285, 290, 310], "enforc": [89, 91, 93], "engin": 17, "enhanc": [30, 31, 33, 34, 38, 41, 53, 54, 68, 69, 70, 71, 76, 84, 85, 86, 91, 93, 151, 165, 310], "ensur": [3, 5, 6, 17, 18, 19, 88, 89, 90, 91, 92, 93, 94, 95, 104, 131, 132, 133, 144, 145, 146, 163, 168, 175, 176, 177, 178, 179, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 204, 205, 206, 207, 208, 210, 211, 213, 214, 216, 217, 219, 220, 221, 222, 223, 225, 226, 227, 229, 231, 232, 233, 234, 235, 236, 247, 270, 278, 283, 290, 300, 301, 302, 303, 304, 308, 310], "enter": 227, "entir": [3, 113, 114, 115, 178, 179, 236], "entri": [36, 294], "entropi": [121, 122, 186, 187], "environ": 8, "ep": [121, 122, 127, 129, 130, 144, 145, 146, 186, 187, 192, 193, 194, 195, 196, 197, 198, 214, 215, 216, 217, 218, 219, 220, 221], "epoch": [1, 3], "epsilon": [186, 187, 192, 193, 194, 195, 196, 197, 198, 214, 215, 216, 217, 218, 219, 220, 221], "equal": [15, 142, 203, 204, 205, 301, 303], "equat": [12, 17, 19], "equival": [242, 281, 291], "error": [0, 3, 12, 14, 89, 92, 93, 94, 95, 98, 123, 125, 162, 186, 187, 188, 189, 210, 211, 227, 229], "especi": [3, 91, 93, 94, 167, 226, 227, 229, 234, 299, 300, 304, 310], "essenti": [1, 3, 8, 9, 15, 17, 32, 107, 110, 210, 234, 236, 269, 299, 300, 304, 310], "estim": [189, 216, 217, 218, 219, 220, 221], "et": [29, 86], "eta": 222, "eta_": 222, "etc": [23, 186, 300], "euclidean": 16, "european": 86, "evalu": [89, 127, 129, 175, 176, 177, 178, 179, 192, 193, 194, 195, 196, 197, 310], "even": [214, 227, 249, 250, 253, 254, 255, 256, 257], "evenli": [131, 132, 133, 200, 201, 202, 249], "everi": [1, 310], "everywher": 273, "exact": [89, 92, 282, 304, 306], "exactli": 95, "exampl": [4, 242], "excel": 31, "except": [0, 273, 285, 287, 298], "excit": [62, 65, 68, 69, 70, 71, 86, 150], "exclus": [232, 235, 249], "exdb": 6, "execut": [92, 227], "exist": [19, 91, 93, 95, 228, 285], "exit": 227, "exp": [97, 102, 103, 105, 161, 166, 258], "expand": [4, 110, 292, 296], "expect": [10, 92, 95, 175, 176, 177, 178, 179, 198, 210, 229], "expens": 3, "experi": [8, 234, 236, 310], "experiment": 236, "explan": [15, 17, 21, 77, 84, 131, 132, 133, 200, 201, 202, 213], "explicit": 95, "explicitli": [86, 91, 93], "explod": [166, 192, 193, 194], "explor": [210, 236], "expon": [15, 247], "exponenti": [97, 102, 104, 161, 166, 168, 175, 216, 217, 218, 219, 220, 267], "extend": [4, 55, 72], "extens": [86, 212], "extern": [4, 8], "extract": [28, 32, 44, 55, 72, 82, 86, 110, 173, 203, 205, 228, 250, 269, 271, 301, 303], "extractor": [36, 37, 38, 39, 82], "extrem": [17, 45, 86], "ey": 258, "f": [1, 4, 5, 6, 8, 86, 93, 94, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 118, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 165, 168], "f_1": 150, "f_2": 150, "facilit": [28, 91, 95, 104, 168, 171, 172, 173, 210, 212, 302, 310], "factor": [30, 97, 106, 107, 108, 110, 150, 159, 160, 213, 220, 221, 222, 223, 229], "factori": 83, "failur": [91, 92, 93, 94, 210], "fals": [1, 5, 6, 20, 44, 87, 88, 89, 90, 111, 112, 113, 114, 115, 127, 129, 142, 153, 155, 156, 157, 158, 159, 160, 171, 172, 173, 182, 184, 216, 217, 221, 225, 231, 232, 233, 235, 237, 249, 250, 251, 252, 253, 254, 255, 256, 257, 269, 270, 271, 278, 283, 284, 300], "famili": 228, "fan": [155, 156, 159, 160], "fan_in": [155, 156], "fan_out": [155, 156], "fashion": 5, "fashion_train": 5, "fashionmnist": 7, "fast": 220, "faster": [215, 219, 227], "fc": [32, 44, 55, 62, 72, 92, 150, 172, 173, 203, 204, 205, 206, 207, 208], "fc1": [38, 39, 87, 91, 95, 162, 164, 165, 166, 167, 169, 184], "fc2": [38, 39, 87, 91, 95, 162, 164, 166, 167, 169, 184], "fc3": 39, "featur": [3, 21, 23, 28, 31, 32, 36, 37, 38, 39, 44, 55, 56, 57, 58, 59, 60, 61, 63, 65, 66, 72, 73, 74, 75, 77, 82, 84, 85, 86, 118, 120, 127, 144, 145, 146, 150, 151, 173, 176, 177, 178, 179, 182, 184, 192, 193, 194, 195, 196, 197, 198, 203, 204, 205, 206, 207, 208, 210, 215], "feature_extractor": 36, "fed": [3, 310], "feed": [3, 237, 310], "feedforward": 87, "fergu": [84, 86], "fetch": 0, "few": 87, "fewer": 1, "field": [6, 72, 76, 86, 151], "file": [3, 228], "fill": [153, 157, 158, 231, 232, 233, 235, 254, 255, 256, 257], "filter": [84, 86, 106, 107, 108, 110, 144, 145, 146, 172, 173], "filter_height": 110, "filter_s": 110, "filter_width": 110, "final": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 44, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 72, 73, 74, 75, 91, 92, 93, 94, 95, 151, 299, 310], "find": [19, 269, 271], "fine": [150, 310], "finish": 227, "first": [5, 6, 12, 36, 84, 87, 92, 93, 118, 150, 182, 216, 217, 218, 219, 220, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 289, 298, 299, 300, 310], "fit": 210, "fix": [92, 290], "flatten": [32, 36, 95, 110, 246, 288, 291, 292], "flexibl": [1, 3, 4, 8, 28, 32, 33, 34, 36, 42, 44, 68, 69, 70, 71, 76, 77, 82, 86, 91, 92, 93, 94, 95, 210, 212, 229, 254, 255, 300, 310], "flip": [305, 307, 310], "float": [2, 5, 6, 30, 40, 42, 88, 90, 97, 100, 111, 112, 113, 114, 115, 121, 122, 123, 127, 129, 130, 143, 144, 145, 146, 153, 157, 158, 159, 160, 161, 163, 175, 176, 177, 178, 179, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 229, 235, 237, 249, 252, 263, 284, 302, 304, 305, 306, 307], "float32": [88, 90, 237, 249, 250, 253, 254, 256, 284, 300], "float64": [257, 284, 300], "flow": [31, 32, 62, 86, 95, 160, 162, 167, 169, 171, 172, 173, 182, 184, 225], "fly": [2, 3], "fname": 3, "focu": 8, "focus": 8, "follow": [0, 8, 9, 12, 18, 19, 20, 21, 24, 25, 26, 27, 68, 69, 70, 71, 76, 77, 82, 84, 87, 97, 98, 100, 101, 102, 103, 104, 105, 118, 120, 142, 144, 145, 146, 147, 148, 149, 150, 151, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 228, 229, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 269, 271, 289, 293, 301, 302, 303, 304, 305, 306, 307, 310], "form": [18, 151, 246, 289, 292, 296, 310], "format": [2, 3, 5, 6, 87, 187, 190, 300], "formul": 98, "formula": [12, 20, 104, 131, 132, 133, 168, 188, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 242, 283, 304], "forward": [8, 21, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 42, 43, 56, 57, 58, 59, 60, 61, 68, 69, 70, 71, 73, 74, 75, 76, 77, 84, 87, 88, 89, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "found": 8, "foundat": [32, 62, 89, 210, 212, 237], "four": [24, 25, 26, 27, 290], "frac": [10, 11, 12, 14, 15, 16, 17, 19, 20, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 118, 120, 131, 132, 133, 134, 135, 136, 138, 139, 140, 155, 156, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 203, 204, 205, 206, 207, 208, 214, 215, 216, 217, 218, 219, 220, 221, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 302], "frame": 115, "framework": [4, 8, 86, 187, 190, 192, 193, 194, 195, 196, 197, 211, 212, 310], "frequent": [187, 190], "from": [0, 1, 2, 3, 4, 5, 6, 8, 15, 17, 23, 24, 25, 26, 27, 32, 42, 43, 44, 56, 57, 58, 59, 60, 61, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 87, 88, 89, 90, 91, 92, 93, 94, 95, 110, 118, 127, 129, 142, 144, 145, 146, 150, 151, 153, 155, 156, 157, 158, 159, 160, 165, 171, 172, 173, 175, 176, 177, 178, 179, 182, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 203, 204, 205, 210, 211, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237, 242, 243, 244, 248, 250, 269, 270, 271, 278, 283, 285, 287, 289, 292, 294, 295, 296, 298, 301, 302, 303, 304, 305, 306, 307, 310], "full": [20, 42], "full_matric": 20, "fulli": [4, 9, 21, 23, 24, 25, 26, 27, 32, 36, 37, 38, 39, 44, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 72, 73, 74, 75, 77, 82, 84, 86, 120, 150, 151, 184, 236], "func": 228, "function": [3, 4, 5, 6, 8, 9, 89, 91, 92, 93, 94, 95, 144, 145, 146, 150, 161, 162, 163, 164, 165, 166, 167, 168, 169, 175, 176, 177, 178, 179, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 210, 212, 229, 236, 299, 310], "fundament": [8, 120, 184, 300], "further": [8, 42, 43, 236, 270, 278, 283], "fuse": 72, "fusion": [73, 74, 75], "futur": 183, "g": [0, 11, 12, 15, 18, 20, 29, 30, 31, 33, 34, 36, 37, 38, 39, 77, 86, 150, 151, 175, 211, 214, 221, 285, 304], "g_": 215, "g_t": 221, "gain": [159, 160], "gamma": [192, 193, 194, 195, 196, 197, 198], "gap": [44, 55, 72, 150], "gaussian": [98, 162], "gelu": [99, 117, 170, 181], "gelunetwork": 162, "gener": [17, 87, 143, 175, 176, 177, 178, 179, 196, 217, 219, 220, 227, 231, 232, 233, 234, 235, 236, 241, 249, 251, 252, 289, 303, 304, 305, 307, 310], "get": [5, 6], "github": 5, "give": [8, 213, 221], "given": [11, 12, 15, 17, 18, 20, 110, 186, 187, 190, 211, 225, 255, 257, 299, 304, 305, 307, 310], "global": [0, 44, 55, 62, 72, 150, 225, 227, 234, 236], "go": [29, 86], "goal": [186, 187, 190], "googlenet": [29, 86], "gpu": 86, "grad": [88, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 110, 118, 120, 142, 147, 148, 149, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 203, 204, 205, 206, 207, 208, 211, 212, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 305, 307, 308], "grad_output": 15, "gradient": [8, 9, 31, 32, 86, 88, 90, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 231, 232, 233, 235, 249, 250, 251, 252, 253, 254, 255, 256, 257, 284, 300], "grain": 150, "graph": [8, 160, 237, 249, 250, 253, 254, 255, 256, 257, 300], "grayscal": [5, 6, 36, 37, 38, 39, 304, 310], "greater": 263, "green": 304, "grid": 289, "groundbreak": 86, "group": [55, 56, 57, 58, 59, 60, 61, 68, 69, 70, 71, 72, 76, 86, 92, 106, 107, 108, 144, 145, 146, 151, 171, 172, 173, 211, 212], "group1": 92, "group2": 92, "groupedconvblock": 55, "growth_rat": [23, 24, 25, 26, 27], "guarante": 234, "h": [44, 56, 57, 58, 59, 60, 61, 73, 74, 75, 86, 107, 108, 110, 114, 115, 132, 133, 135, 136, 139, 140, 142, 143, 145, 146, 150, 193, 194, 196, 197, 201, 202, 205, 208, 301, 303], "h_": [107, 108, 132, 133, 135, 136, 139, 140, 142, 172, 173, 201, 202, 204, 205, 207, 208], "h_out": [107, 108, 135, 136, 139, 140], "h_stack": 287, "ha": [0, 12, 87, 95, 106, 107, 108, 144, 145, 146, 165, 186, 187, 192, 193, 194, 195, 196, 197, 198, 211, 212, 242, 281, 285, 287, 295, 298, 304], "half": 276, "han": 5, "hand": 19, "handl": [0, 3, 8, 17, 89, 91, 92, 93, 94, 95, 187, 190, 210, 212, 227], "handwritten": [5, 6, 39], "hardwar": 8, "hat": [216, 217, 218, 219, 220], "have": [0, 1, 11, 12, 14, 17, 18, 20, 90, 92, 94, 95, 107, 108, 160, 210, 253, 254, 255, 256, 257, 269, 271, 285, 287, 289, 294, 295, 298, 302, 308], "he": 86, "head": 82, "height": [82, 107, 108, 110, 114, 115, 132, 133, 135, 136, 139, 140, 142, 143, 151, 172, 173, 193, 194, 196, 197, 201, 202, 204, 205, 207, 208, 301, 303, 308], "help": [8, 30, 100, 102, 115, 161, 163, 165, 166, 169, 192, 193, 194, 203, 204, 206, 207, 213, 216, 217, 219, 225, 226, 227, 229], "henc": 293, "here": [3, 10, 89, 118, 210, 212, 226, 227, 229, 236, 299, 300, 310], "hidden": [21, 84, 92], "hidden_s": 92, "hierarch": [92, 95, 210], "hierarchi": 172, "hierarchicalnetwork": 92, "high": [8, 52, 67, 76, 232, 235], "higher": [40, 55, 187, 190, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 241, 242, 246, 267], "highest": 232, "highli": [43, 86], "highlight": [150, 206, 207, 208], "hint": 229, "histor": 215, "histori": [231, 232, 233, 235, 249, 250, 251, 252, 253, 254, 255, 256, 257], "hold": [91, 92, 93, 94], "horizont": [287, 295, 305, 310], "hot": [187, 190], "how": [2, 3, 8, 68, 69, 70, 71, 76, 92, 95, 210, 229, 310], "howard": 86, "howev": [88, 160], "hstack": 288, "http": [5, 6], "hu": [86, 150], "huang": 86, "huber": [123, 188], "huber_loss": [117, 124], "huberloss": [181, 191], "huberregressionmodel": 188, "hue": 310, "hyperbol": [105, 169, 265, 275, 280], "hyperparamet": [44, 55, 83, 211, 213], "i": [0, 1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 118, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 282, 283, 284, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310], "iccv": 86, "idea": 86, "ideal": [8, 40, 95], "ident": [14, 15, 86, 143, 181, 185, 234, 236, 253, 293], "identifi": 93, "idx": [2, 3], "ieee": [86, 150], "ii": 281, "ij": [104, 142, 168, 240, 241, 242, 246, 289], "ik": [240, 241, 242], "ill": [11, 17], "ilsvrc": 86, "imag": [3, 4, 5, 6, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 44, 45, 46, 47, 48, 49, 50, 51, 52, 63, 64, 65, 66, 67, 68, 69, 70, 71, 76, 85, 86, 107, 129, 143, 145, 150, 172, 196, 289, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310], "image_dir": 3, "image_path": 3, "imagedataset": 3, "imageio": 3, "imagenet": [24, 25, 26, 27, 40, 41, 42, 43, 53, 54, 68, 69, 70, 71, 76, 86], "imbal": [187, 190], "impact": [86, 219], "implement": [2, 3, 8, 17, 21, 23, 28, 29, 30, 31, 33, 34, 36, 40, 41, 44, 53, 54, 56, 57, 58, 59, 60, 61, 62, 82, 84, 86, 89, 110, 147, 148, 149, 151, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 287, 298, 304], "impli": [171, 172], "import": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 42, 43, 44, 53, 54, 56, 57, 58, 59, 60, 61, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 115, 118, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310], "improp": [92, 95, 236], "improv": [29, 30, 31, 32, 34, 44, 55, 68, 69, 70, 71, 72, 84, 86, 127, 143, 150, 162, 166, 169, 213, 214, 215, 216, 217, 218, 219, 220, 221, 229, 303, 306, 310], "imread": 3, "in1_featur": [118, 182], "in2_featur": [118, 182], "in_channel": [44, 92, 95, 144, 145, 146, 147, 148, 149, 150, 151, 171, 172, 173, 193, 194, 203, 204, 205, 206, 207, 208, 210], "in_featur": [91, 92, 95, 120, 161, 162, 163, 164, 166, 167, 168, 169, 172, 173, 175, 176, 177, 182, 184, 186, 187, 188, 189, 190, 192, 195, 198, 203, 204, 205, 206, 207, 208], "incept": [29, 30, 31, 32, 33, 34, 35, 86], "inception_resnet_v1": 86, "inception_resnet_v2": 86, "inception_v1": 86, "inception_v3": 86, "inception_v4": 86, "inceptionresnet": [33, 34], "includ": [3, 4, 5, 8, 9, 15, 16, 21, 28, 29, 30, 33, 36, 44, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 72, 77, 83, 84, 87, 89, 90, 92, 94, 95, 142, 144, 145, 146, 147, 148, 149, 210, 211, 212, 219, 229, 236, 242, 290], "inclus": [90, 93, 232, 235], "incom": [120, 184], "incomplet": 2, "incompletedataset": 2, "incorpor": [20, 43, 55, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 86, 162], "increas": [40, 55, 56, 57, 58, 59, 60, 61, 72, 106, 107, 108, 110, 143, 215, 222, 226, 287, 298, 304, 305, 307, 310], "independ": [92, 106, 107, 108, 175, 176, 177, 178, 179, 198, 242, 252, 302, 304, 306, 308], "index": [0, 2, 5, 6, 226, 249, 250, 253, 289, 293], "indexerror": 0, "indic": [0, 1, 77, 87, 90, 92, 94, 95, 122, 126, 187, 190, 203, 225, 237, 301, 303], "individu": [3, 92, 95, 188, 198, 212, 215, 222], "induc": [102, 166], "inf": 279, "infer": [68, 69, 70, 71, 76, 92, 95, 227], "infin": [18, 20, 218], "inform": [8, 86, 87, 88, 150, 212, 214, 227], "infti": [16, 220], "inherit": [1, 213, 221, 223], "init": 154, "initi": [1, 23, 32, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 75, 78, 79, 80, 81, 83, 88, 90, 91, 92, 93, 94, 95, 151, 153, 155, 156, 157, 158, 159, 160, 171, 172, 173, 182, 184, 186, 187, 188, 189, 190, 192, 193, 194, 198, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 231, 234, 235, 236, 249, 253, 254, 255, 256, 257, 284], "initial_accumulator_valu": 215, "inner": [8, 240, 258], "input": [8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 42, 43, 44, 55, 68, 69, 70, 71, 72, 76, 82, 84, 86, 87, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 118, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 229, 236, 237, 238, 240, 241, 242, 246, 250, 252, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310], "input1": 182, "input2": 182, "input_": [21, 84, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 200, 201, 202], "input_1": 118, "input_2": 118, "input_data": [161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 203, 204, 205, 206, 207, 208], "input_s": [92, 94, 168, 187, 190], "input_shap": 87, "input_tensor": [8, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 42, 43, 44, 56, 57, 58, 59, 60, 61, 68, 69, 70, 71, 73, 74, 75, 76, 77, 82, 88, 91, 92, 93, 94, 95, 104, 147, 148, 149, 150, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 203, 204, 205, 206, 207, 208, 210, 301, 302, 303, 304, 305, 306, 307, 308], "insid": [3, 225, 227], "insight": [8, 86], "inspect": [89, 90, 95, 211], "instabl": [17, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223], "instal": 8, "instanc": [0, 1, 8, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 83, 85, 87, 89, 90, 91, 93, 94, 95, 129, 165, 195, 196, 197, 198, 211, 228, 284, 292, 296, 310], "instance_norm": [117, 128, 195, 196, 197], "instancenorm1d": [181, 199], "instancenorm1dmodel": 195, "instancenorm2d": [181, 199], "instancenorm3d": [181, 199], "instanti": [2, 68, 69, 70, 71, 76, 228], "instead": [8, 87, 91, 92, 93, 94, 95, 155, 156, 159, 160, 216, 217, 218, 227, 229, 251, 252], "int": [0, 1, 2, 5, 6, 15, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 104, 106, 107, 108, 110, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 157, 158, 159, 160, 168, 171, 172, 173, 182, 184, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 216, 217, 218, 219, 220, 222, 228, 231, 232, 233, 234, 235, 237, 249, 250, 251, 253, 254, 256, 263, 269, 270, 271, 278, 282, 283, 284, 285, 290, 292, 293, 294, 295, 296, 297, 301, 303, 308], "integ": [1, 3, 15, 62, 77, 106, 107, 108, 132, 133, 171, 172, 173, 198, 201, 202, 204, 205, 206, 207, 208, 229, 232, 233, 235, 236, 251, 254, 256, 270, 278, 282, 283, 290, 292, 293, 296], "integr": [1, 2, 4, 5, 6, 9, 86, 90, 92, 94, 95, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 182, 184, 203, 204, 205, 206, 207, 208], "intellig": [86, 150], "intend": [88, 93, 94], "intens": [17, 23, 45, 302, 304], "intent": 229, "interact": [118, 182, 210, 236], "interdepend": 86, "interfac": [2, 89, 92, 212], "interfer": [225, 227], "intermedi": [17, 150], "intern": [45, 46, 47, 48, 49, 50, 51, 52, 63, 64, 65, 66, 67, 86, 91, 92, 93, 94, 95, 187, 190, 210, 301, 302, 303, 304, 305, 306, 307, 308], "interpol": [117, 141, 308], "interpret": [86, 104, 168, 229, 285], "interv": [231, 235, 249], "introduc": [29, 30, 40, 41, 55, 86, 101, 150, 162, 164, 165, 167, 169, 175, 176, 177, 178, 179, 303, 306, 310], "introspect": 95, "intuit": [8, 91, 93, 210, 310], "inv": 13, "inv_a": 14, "invari": [204, 207], "invers": [8, 11, 14, 15, 17, 215, 260, 261, 262], "invert": [11, 14, 15, 19, 41, 43, 86], "invok": 228, "involv": [10, 11, 12, 14, 17, 18, 20, 72, 97, 98, 100, 101, 102, 103, 105, 118, 120, 142, 171, 172, 173, 182, 184, 229, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 257, 267, 268, 269, 271, 274, 276, 289, 290, 292, 296], "is_leaf": 237, "issu": [3, 166, 192, 193, 194, 216, 217], "item": [5, 189], "iter": [0, 1, 2, 3, 88, 89, 92, 94, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 249], "ith": [104, 168], "its": [4, 15, 17, 21, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 63, 64, 65, 66, 67, 73, 74, 75, 84, 86, 87, 88, 91, 92, 93, 94, 106, 107, 108, 110, 143, 151, 160, 162, 164, 206, 207, 208, 210, 211, 214, 222, 225, 226, 227, 228, 249, 251, 252, 256, 269, 271, 284, 293, 302, 305, 307, 310], "itself": [10, 15, 91, 92, 93, 94], "j": [6, 104, 150, 168, 192, 193, 194, 195, 196, 197, 203, 204, 206, 207, 289, 295, 301, 303], "jie": 86, "jk": 241, "join": [3, 285], "json": 228, "k": [15, 86, 106, 171, 187, 193, 194, 196, 197, 203, 206, 207, 240, 241, 250, 253, 285], "k_d": [108, 173, 205, 208], "k_h": [107, 108, 172, 173, 204, 205, 208], "k_w": [107, 108, 172, 173, 204, 205, 208], "kaim": [86, 155, 156, 159, 160], "kaiming_norm": 154, "kaiming_uniform": 154, "kalenichenko": 86, "karen": 86, "kashif": 5, "keep": [89, 164, 214, 227, 293], "keep_grad": [90, 231, 232, 233, 235, 237, 249, 250, 251, 252, 253, 254, 255, 256, 257, 284, 300], "keep_var": 89, "keepdim": [269, 270, 271, 278, 283], "kei": [86, 89, 91, 93, 95, 211], "kept": [270, 278, 283], "kernel": [36, 37, 38, 39, 72, 73, 74, 75, 76, 84, 86, 106, 107, 108, 110, 131, 132, 133, 134, 135, 136, 138, 139, 140, 144, 145, 146, 147, 148, 149, 151, 171, 172, 173, 200, 201, 202, 204, 205, 208], "kernel_s": [72, 73, 74, 75, 92, 95, 134, 135, 136, 138, 139, 140, 144, 145, 146, 147, 148, 149, 151, 171, 172, 173, 193, 194, 203, 204, 205, 206, 207, 208], "keyerror": 89, "keyword": [22, 24, 25, 26, 27, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 85, 89, 183], "kj": [240, 242], "known": 86, "krizhevski": 86, "kroneck": [104, 168], "kwarg": [22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, 85, 89, 183, 228], "l": [10, 17, 86, 106, 113, 131, 134, 138, 144, 150, 175, 176, 177, 178, 179, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200], "l2": [213, 214, 215, 216, 217, 218, 219, 220, 221, 223], "l_": [106, 131, 134, 138, 171, 200, 203, 206], "l_out": [106, 134, 138], "label": [4, 5, 6, 30, 186, 187, 190], "lambd": 213, "lambda": [12, 102, 166, 213, 217], "lambda_1": 12, "lambda_2": 12, "lambda_i": 12, "lambda_n": 12, "languag": [4, 171, 182, 203, 206], "larg": [0, 3, 17, 23, 45, 46, 47, 50, 63, 64, 86, 147, 148, 149, 165, 188, 210, 213, 216, 217, 218, 221, 222, 223, 227], "larger": [44, 72, 91, 93, 106, 107, 108, 110, 213, 243, 290, 301, 303, 308], "largest": 269, "last": [1, 104, 130, 168, 241, 242, 285, 305, 307], "latest": 4, "layer": [8, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 75, 77, 78, 79, 80, 81, 84, 86, 87, 89, 91, 92, 95, 104, 120, 127, 129, 130, 144, 145, 146, 147, 148, 149, 150, 151, 155, 156, 159, 160, 168, 171, 172, 173, 182, 183, 184, 190, 198, 203, 204, 205, 206, 207, 208, 210, 236, 290, 300], "layer1": 228, "layer2": 228, "layer_group": 92, "layer_norm": [117, 128, 198], "layer_sequ": [92, 95], "layernorm": [181, 199], "layernormmodel": 198, "le": 86, "lead": [92, 95, 162, 195, 196, 197, 198, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 236], "leaf": 237, "leaki": [100, 163], "leaky_relu": [99, 117, 163], "leakyrelu": [170, 181], "learn": [1, 3, 4, 5, 6, 8, 15, 17, 55, 56, 57, 58, 59, 60, 61, 84, 85, 86, 91, 92, 93, 94, 101, 104, 150, 161, 163, 164, 168, 171, 172, 173, 176, 177, 178, 179, 182, 184, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 234, 299, 300, 310], "learnabl": [88, 89, 90, 127, 129, 130, 144, 145, 146, 171, 172, 173, 182, 184, 192, 193, 194, 195, 196, 197, 198, 210], "least": [17, 18, 20, 281], "lecun": [6, 86], "left": [15, 16, 17, 20, 98, 104, 162, 168, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 206, 207, 208, 301, 303], "leftarrow": 219, "len": [0, 1, 2, 3, 289], "lenet": [35, 37, 38, 39, 86], "lenet_1": 86, "lenet_4": 86, "lenet_5": 86, "length": [92, 106, 113, 131, 134, 138, 171, 183, 192, 195, 200, 203, 206, 290, 302], "leq": [188, 220, 247, 263], "lerp": 142, "less": [0, 97, 100, 123, 161, 163, 187, 188, 190, 263], "let": 12, "level": [8, 32], "leverag": [19, 31, 34, 56, 57, 58, 59, 60, 61, 82, 86, 151, 210], "li": 86, "librari": [3, 8, 9, 89, 210, 211, 212, 228, 229, 236, 237, 310], "lightweight": [8, 41, 48, 65, 151, 165], "like": [8, 32, 56, 57, 58, 59, 60, 61, 73, 74, 75, 86, 88, 89, 92, 95, 106, 159, 160, 166, 175, 192, 193, 194, 195, 196, 197, 225, 226, 229, 284, 300, 310], "likelihood": [126, 187, 190], "limit": [87, 165, 214, 263], "linalg": [8, 13], "linalgerror": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20], "linear": [8, 9, 10, 17, 18, 19, 41, 43, 62, 86, 87, 91, 92, 93, 95, 97, 98, 100, 101, 102, 155, 156, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 175, 176, 177, 182, 183, 186, 187, 188, 189, 190, 192, 195, 198, 203, 204, 205, 206, 207, 208, 228, 253], "linearli": 188, "list": [0, 1, 36, 44, 55, 62, 72, 77, 87, 88, 90, 91, 92, 93, 94, 130, 151, 183, 198, 211, 229, 231, 232, 233, 235, 237, 250, 251, 252, 254, 255, 256, 257, 282, 293, 294, 297, 299], "listdir": 3, "liter": [44, 121, 122, 123, 125, 126, 142, 144, 145, 146, 147, 148, 149, 151, 155, 156, 171, 172, 173, 186, 187, 188, 189, 190, 289], "liu": 86, "ln": 247, "load": [3, 4, 5, 6, 88, 89, 90, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 228], "load_state_dict": [89, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "loader": [1, 2, 3], "local": [86, 110, 171], "locat": [86, 142], "log": [126, 186, 187, 190, 258], "log_softmax": 190, "logarithm": [247, 267, 268], "logic": [3, 200, 201, 202, 210, 211], "logit": [21, 84, 104, 168, 187], "logsoftmax": [187, 190], "long": [219, 282], "loop": [1, 92, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "loss": [8, 17, 91, 92, 93, 94, 95, 104, 121, 122, 123, 125, 126, 161, 162, 163, 164, 166, 167, 168, 169, 175, 176, 177, 178, 179, 183, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "low": [8, 32, 41, 232, 235], "lower": [10, 40, 158, 213, 221, 222, 223, 235], "lowest": 232, "lr": [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "lu": 14, "lucid": [0, 1, 2, 5, 6, 13, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 118, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 230, 258, 288, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308], "m": [77, 86, 91, 92, 95, 204, 205, 207, 208, 216, 217, 218, 219, 220, 253], "m_": [216, 217, 218, 219, 220], "m_t": [219, 220], "maaten": 86, "machin": [3, 5, 6, 8, 17, 150, 216, 226, 234], "magnitud": [221, 222, 310], "mai": [3, 8, 12, 14, 17, 92, 94, 143, 188, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 227, 236, 304, 310], "main": [8, 18, 32, 92, 250, 253], "maintain": [17, 40, 55, 56, 57, 58, 59, 60, 61, 68, 69, 70, 71, 76, 86, 88, 89, 91, 92, 93, 95, 102, 155, 156, 159, 160, 161, 162, 166, 175, 176, 177, 178, 179, 192, 193, 194, 195, 196, 197, 216, 221, 301, 304, 308], "make": [1, 3, 8, 28, 32, 36, 41, 43, 44, 86, 92, 95, 167, 187, 188, 198, 204, 207, 210, 215, 216, 217, 218, 226, 228, 236, 237, 242, 289, 299, 310], "manag": [8, 89, 91, 92, 93, 94, 95, 210, 212, 225, 227, 228, 236], "manhattan": 16, "mani": 87, "manipul": [8, 91, 93, 310], "manner": [92, 95], "manual": [121, 122, 126, 186, 187, 190, 227], "map": [44, 55, 65, 72, 86, 89, 103, 105, 150, 167, 169], "mask": [88, 175, 176, 177, 178, 179], "match": [19, 89, 92, 95, 121, 123, 125, 130, 144, 145, 146, 211, 267, 292, 293, 296, 297, 302, 310], "math": [264, 274, 279], "mathbf": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 82, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 118, 120, 142, 147, 148, 149, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 203, 204, 205, 206, 207, 208, 240, 241, 242, 246, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308], "mathcal": [155, 157, 159, 175, 176, 177, 178, 179, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198], "mathemat": [14, 144, 145, 146, 303, 305, 306, 307], "mathrm": 17, "matmul": 258, "matric": [9, 11, 12, 14, 17, 19, 20, 240, 241, 242, 253, 289], "matrix": [8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 110, 118, 183, 184, 210, 240, 289], "matrix_pow": 13, "matthew": 86, "max": [16, 62, 77, 101, 138, 139, 140, 164, 165, 206, 207, 208, 218, 243, 258, 263], "max_pool": [206, 207, 208], "max_pool1d": [117, 137], "max_pool2d": [117, 137], "max_pool3d": [117, 137], "max_valu": 263, "maxim": 3, "maximum": [16, 164, 165, 206, 207, 208, 216, 218, 258, 263, 269, 306], "maxpool": [21, 84], "maxpool1d": [181, 209], "maxpool1dmodel": 206, "maxpool2d": [92, 95, 172, 181, 209], "maxpool2dmodel": 207, "maxpool3d": [173, 181, 209], "maxpool3dmodel": 208, "mean": [5, 6, 18, 87, 88, 102, 106, 107, 108, 111, 121, 122, 123, 125, 126, 127, 129, 144, 145, 146, 157, 161, 162, 163, 164, 166, 167, 169, 173, 175, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 216, 217, 218, 219, 220, 221, 225, 233, 258, 263, 267, 268, 269, 271, 274, 276, 278, 281, 282, 283, 299, 302, 310], "meaning": [95, 229], "measur": [186, 187, 189, 190], "mechan": [8, 62, 72, 76, 94, 118], "membership": 186, "memori": [2, 3, 23, 227, 251, 252], "meshgrid": 288, "method": [3, 8, 9, 14, 62, 82, 83, 91, 92, 93, 94, 95, 121, 122, 123, 125, 126, 155, 156, 159, 160, 186, 187, 188, 189, 190, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 236], "middl": 226, "might": 210, "min": [165, 244, 258, 263], "min_valu": 263, "mind": [0, 3, 8, 92, 95, 227], "mini": 1, "minim": [4, 8, 95, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 212], "minimalist": 8, "minimum": [258, 263, 271], "minu": 167, "mirror": [255, 257], "mismatch": [89, 210, 211], "miss": [89, 210], "mitig": [100, 161, 163, 166, 192, 193, 194], "mlp": 151, "mnist": [4, 5, 7, 37, 38], "mnist_train": [4, 6], "mobil": [40, 41, 43, 86], "mobilenet": [35, 41, 43, 86, 165], "mobilenet_v2": 86, "mobilenetv2": [41, 86], "mobilenetv3": 86, "mode": [8, 115, 127, 129, 142, 155, 156, 175, 176, 177, 178, 179, 290], "model": [1, 3, 4, 8, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 104, 143, 144, 145, 146, 151, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 228, 236, 299, 300, 310], "moder": 66, "modern": 86, "modif": [83, 95, 227], "modifi": [22, 44, 82, 85, 91, 92, 93, 94, 153, 155, 156, 157, 158, 159, 160, 175, 225, 227, 234, 287, 298], "modul": [5, 6, 8, 21, 22, 28, 31, 32, 33, 34, 36, 40, 41, 44, 55, 62, 72, 77, 82, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 144, 145, 146, 147, 148, 149, 150, 151, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 228, 229, 236, 300, 310], "modular": [3, 8, 86, 89, 92, 95, 210, 310], "moduledict": [92, 93, 95, 96], "modulelist": [94, 95, 96], "moment": [216, 217, 218, 219, 220], "momentum": [127, 129, 144, 145, 146, 192, 193, 194, 195, 196, 197, 213, 219, 221, 223], "momentum_decai": 219, "moor": 17, "more": [3, 4, 5, 8, 12, 44, 51, 91, 92, 95, 147, 148, 149, 161, 176, 177, 178, 179, 210, 211, 212, 213, 214, 217, 218, 221, 222, 223, 233, 242, 281, 295, 310], "most": [9, 86, 207, 300, 301, 310], "move": [213, 221], "mse": [123, 125, 188, 189], "mse_loss": [117, 124], "mseloss": [181, 191], "mu": [157, 192, 193, 194, 195, 196, 197, 198, 283], "mu_c": 302, "mu_i": [195, 196, 197], "much": 310, "mul": 258, "multi": [3, 4, 33, 72, 73, 74, 75, 86, 104, 122, 126, 151, 168, 187, 190, 270, 278, 283], "multidimension": [231, 235, 251], "multipl": [1, 3, 8, 9, 15, 19, 21, 44, 62, 76, 93, 94, 95, 110, 142, 143, 150, 151, 175, 176, 177, 178, 179, 187, 190, 210, 226, 231, 232, 233, 235, 240, 245, 251, 252, 299, 304, 310], "multipli": [15, 42, 94, 120, 184, 222, 245, 246], "must": [0, 1, 3, 10, 11, 12, 14, 15, 18, 19, 20, 87, 89, 91, 92, 93, 94, 95, 130, 175, 176, 177, 178, 179, 190, 211, 227, 281, 285, 287, 290, 292, 293, 295, 296, 298, 301, 302, 303, 304, 305, 307], "my_simple_model": 228, "mymodel": [89, 90, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "myoptim": [211, 212], "n": [15, 16, 44, 56, 57, 58, 59, 60, 61, 73, 74, 75, 86, 91, 92, 95, 106, 107, 108, 110, 113, 114, 115, 118, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 150, 155, 157, 159, 171, 172, 173, 178, 179, 182, 184, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 253, 270, 281, 283], "n1": 16, "nabla_": [214, 215, 216, 217, 218, 219, 220, 222], "nabla_t": 220, "nadam": 224, "name": [86, 87, 89, 91, 93, 95, 228, 229], "nan": [18, 20], "natur": [17, 86, 171, 182, 203, 206, 247, 267, 268], "ndarrai": [88, 90, 229, 237, 250, 252, 255, 257, 284], "ndim": [18, 20, 90, 237], "ne": 15, "nearest": 142, "necessari": [4, 5, 6, 17, 227, 287, 298], "need": [2, 4, 92, 93, 94, 104, 182, 210, 227, 251, 252, 299, 300, 310], "neg": [15, 17, 20, 97, 126, 143, 161, 163, 164, 166, 187, 190, 222, 285], "negative_slop": [100, 163], "neglect": 94, "neighbor": 142, "neq": 16, "nest": [87, 92, 95, 210], "nestedmodel": 87, "nesterov": 219, "net": [84, 86], "network": [3, 4, 8, 21, 22, 23, 31, 32, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 62, 63, 64, 65, 66, 67, 72, 77, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 101, 102, 103, 104, 105, 106, 107, 108, 118, 120, 127, 143, 150, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 221, 223, 235, 236, 237, 249, 254, 256, 269, 271, 290, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310], "neural": [3, 4, 8, 21, 22, 32, 39, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 101, 102, 103, 104, 105, 106, 107, 108, 118, 120, 127, 143, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 221, 223, 235, 236, 237, 249, 254, 256, 269, 271, 290, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310], "neuralnetwork": 164, "neuron": 163, "never": 304, "new": [89, 90, 97, 98, 100, 101, 102, 103, 105, 118, 120, 142, 151, 155, 156, 157, 158, 159, 160, 211, 228, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 252, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 284, 285, 287, 290, 292, 293, 295, 296, 297, 298], "next": [95, 299], "nll": 126, "nll_loss": [117, 124], "nllloss": [181, 191], "nn": [5, 6, 8, 21, 23, 28, 32, 36, 40, 41, 44, 55, 62, 68, 69, 70, 71, 72, 76, 77, 84, 87, 96, 99, 109, 116, 119, 124, 128, 137, 141, 152, 154, 170, 174, 180, 181, 185, 191, 199, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 228, 300, 310], "no_grad": 225, "node": 237, "nois": [20, 236], "non": [12, 15, 17, 20, 94, 98, 100, 101, 155, 156, 161, 162, 163, 164, 165, 166, 167, 169, 175, 176, 177, 178, 179, 216, 217, 227, 247, 263], "none": [0, 1, 2, 5, 6, 28, 32, 36, 40, 41, 44, 82, 87, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 118, 120, 121, 122, 123, 125, 126, 127, 129, 130, 143, 144, 145, 146, 147, 148, 149, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 203, 204, 205, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 253, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305, 307, 308], "norm": [9, 13, 218], "normal": [5, 6, 62, 98, 102, 104, 105, 127, 129, 130, 144, 145, 146, 154, 155, 159, 162, 166, 168, 175, 192, 193, 194, 195, 196, 197, 198, 221, 233, 236, 299, 309, 310], "normalized_shap": [130, 198], "note": [106, 175], "noth": [111, 112, 113, 114], "notimplementederror": [2, 89, 211], "notin": 263, "nov": 86, "novel": [5, 86], "np": [44, 56, 57, 58, 59, 60, 61, 73, 74, 75, 88, 90, 150, 187, 190, 229, 237, 242, 249, 250, 253, 254, 256, 257, 268, 284, 300], "npy": [5, 6], "num_class": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 168, 187, 190], "num_featur": [95, 144, 145, 146, 192, 193, 194, 195, 196, 197], "num_init_featur": [23, 24, 25, 26, 27], "num_paramet": 94, "number": [0, 1, 2, 5, 6, 11, 12, 14, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 90, 92, 94, 95, 106, 107, 108, 110, 113, 114, 115, 118, 120, 122, 126, 127, 129, 131, 132, 133, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 156, 159, 160, 167, 171, 172, 173, 182, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 204, 205, 206, 207, 208, 213, 231, 234, 235, 237, 247, 249, 251, 253, 269, 270, 271, 282, 283, 285, 287, 290, 292, 293, 294, 296, 298, 302, 304, 305, 307, 310], "numer": [14, 17, 121, 122, 127, 129, 130, 144, 145, 146, 165, 186, 187, 192, 193, 194, 195, 196, 197, 198, 214, 215, 216, 217, 218, 219, 220, 221, 229, 239, 249, 254, 256], "numpi": [8, 88, 90, 187, 190, 229, 237, 242, 250, 253, 268, 281, 284, 290, 292, 296, 300, 310], "o": [3, 205, 208, 254, 255], "object": [1, 3, 9, 72, 86, 89, 93, 94, 189, 210, 227, 238, 239, 243, 244, 245, 248, 284], "observ": 216, "obtain": 1, "occur": [143, 227, 228, 285], "occurr": 15, "odot": [175, 176, 177, 178, 179], "off": 225, "offer": [4, 8, 210, 212, 236, 310], "offset": 253, "often": [15, 53, 54, 106, 107, 108, 110, 187, 190, 249, 256, 300, 304, 308, 310], "older": 219, "onc": 227, "one": [0, 68, 69, 70, 71, 76, 94, 95, 104, 106, 120, 134, 138, 144, 145, 146, 166, 167, 168, 171, 177, 187, 190, 192, 195, 203, 206, 211, 226, 229, 233, 248, 255, 269, 271, 286, 291, 295, 300], "ones": [118, 120, 171, 172, 173, 184, 192, 193, 194, 195, 196, 197, 198, 210, 253, 255, 258], "ones_lik": 258, "onli": [8, 87, 142, 164, 175, 176, 177, 178, 179, 186, 187, 190, 192, 193, 194, 195, 196, 197, 198, 206, 207, 208, 222, 225, 249, 263, 269, 271, 281, 290, 291, 293, 294], "onto": [18, 20], "openml": [5, 6], "oper": [3, 8, 9, 14, 17, 62, 63, 64, 65, 66, 67, 88, 89, 92, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 110, 115, 118, 120, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 160, 161, 162, 163, 164, 165, 166, 167, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 225, 226, 227, 229, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 252, 254, 256, 267, 268, 269, 270, 271, 274, 276, 278, 281, 283, 285, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 302, 308], "operatornam": [15, 17], "opposit": 213, "optim": [3, 8, 9, 15, 17, 18, 20, 23, 28, 29, 30, 31, 32, 33, 34, 41, 88, 90, 93, 94, 110, 171, 172, 173, 210, 227], "optimizer_st": [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "option": [1, 5, 6, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 97, 100, 104, 107, 108, 111, 112, 113, 114, 115, 118, 120, 121, 122, 123, 125, 126, 127, 129, 130, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 156, 157, 158, 159, 160, 161, 163, 168, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 203, 204, 205, 206, 207, 208, 211, 213, 221, 223, 231, 232, 233, 235, 237, 249, 250, 251, 252, 253, 254, 255, 256, 257, 269, 270, 271, 278, 282, 283, 284, 285, 289, 292, 294, 295, 300, 304, 305, 307], "ord": 16, "order": [1, 3, 16, 20, 91, 92, 93, 94, 95, 282, 299], "ordered_dict": 95, "ordereddict": [89, 91, 92, 95], "organ": [91, 92, 93, 95, 228], "orient": 310, "origin": [30, 39, 111, 143, 150, 169, 290, 291, 292, 293, 296, 297, 308], "orthogon": [17, 18, 20], "orthonorm": 18, "oscil": [213, 221, 223], "other": [2, 3, 8, 14, 30, 34, 36, 39, 88, 89, 92, 95, 155, 156, 175, 210, 211, 225, 227, 236, 237, 249, 251, 254, 256, 281, 289, 310], "otherwis": [45, 46, 47, 48, 49, 50, 51, 52, 63, 64, 65, 66, 67, 97, 100, 101, 102, 104, 161, 163, 164, 166, 168, 176, 177, 178, 179, 188, 203, 204, 205, 206, 207, 208, 211, 222, 228, 243, 244, 269, 271], "otim": [17, 118, 182], "out": [0, 3, 4, 97, 98, 100, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 118, 120, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 155, 156, 159, 160, 171, 172, 173, 175, 176, 177, 178, 179, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298], "out_channel": [36, 92, 95, 144, 145, 146, 147, 148, 149, 151, 171, 172, 173, 193, 194, 203, 204, 205, 206, 207, 208, 210], "out_featur": [91, 92, 95, 118, 120, 161, 162, 163, 164, 166, 167, 168, 169, 172, 173, 175, 176, 177, 182, 184, 186, 187, 188, 189, 190, 192, 195, 198, 203, 204, 205, 206, 207, 208], "outcom": [304, 305, 307], "outer": 258, "outlier": [123, 188], "output": [0, 1, 2, 8, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 111, 112, 113, 114, 115, 118, 120, 131, 132, 133, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 229, 232, 233, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253, 254, 256, 257, 267, 268, 269, 270, 271, 274, 276, 278, 281, 282, 283, 289, 290, 292, 296, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308], "output_height": 110, "output_lay": [92, 95], "output_s": [92, 131, 132, 133, 200, 201, 202], "output_width": 110, "outsid": 0, "over": [0, 1, 2, 3, 9, 41, 72, 84, 89, 92, 94, 104, 131, 132, 133, 150, 168, 171, 172, 173, 187, 190, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 217, 231, 235, 269, 270, 271, 278, 281, 283, 304, 305, 307], "overal": 82, "overdetermin": 17, "overfit": [1, 21, 84, 112, 115, 176, 177, 178, 179, 213, 216, 221, 223], "overhead": 150, "overli": 165, "overrid": [2, 3], "overridden": [89, 211], "overwrit": [91, 93], "own": [4, 91, 92, 93, 94, 106, 107, 108, 160, 210, 302], "p": [16, 17, 90, 93, 94, 111, 112, 113, 114, 115, 175, 176, 177, 178, 179, 203, 206, 207, 304, 305, 307, 310], "p_d": [205, 208], "p_h": [204, 205, 208], "p_w": [204, 205, 208], "packag": [2, 3, 4, 9, 86, 210, 212, 228, 234, 236, 300, 310], "pad": [36, 92, 95, 106, 107, 108, 110, 131, 132, 133, 134, 135, 136, 138, 139, 140, 144, 145, 146, 147, 148, 149, 151, 171, 172, 173, 193, 194, 200, 201, 202, 203, 204, 205, 206, 207, 208, 288], "pad_after_dim1": 290, "pad_after_dim2": 290, "pad_before_dim1": 290, "pad_before_dim2": 290, "pad_width": 290, "padding_height": 110, "padding_width": 110, "pair": 118, "pang": 86, "paper": 29, "parallel": [1, 3, 72, 86], "param": [89, 90, 93, 94, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "param1": 89, "param_dict": 93, "param_group": [211, 212], "param_groups_setup": 211, "param_list": 94, "param_s": 228, "paramet": [0, 2, 8, 37, 38, 39, 86, 89, 210, 211, 212, 229, 236, 310], "parameterdict": 96, "parameterlist": 96, "parent": 210, "part": [88, 89, 160, 210, 225, 227, 236, 249, 250, 253, 254, 255, 256, 257, 300, 310], "partial": [10, 11, 12, 14, 15, 16, 17, 19, 20, 97, 98, 100, 101, 102, 103, 104, 105, 118, 120, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 203, 204, 205, 206, 207, 208, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298], "particip": [90, 300], "particular": [91, 93], "particularli": [8, 17, 41, 56, 57, 58, 59, 60, 61, 92, 93, 94, 95, 104, 120, 144, 145, 146, 147, 148, 149, 168, 184, 187, 190, 195, 196, 197, 198, 217, 225, 228, 299], "pass": [2, 8, 17, 21, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 42, 43, 44, 53, 54, 55, 56, 57, 58, 59, 60, 61, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 87, 89, 90, 91, 92, 93, 94, 95, 142, 144, 145, 146, 150, 151, 161, 162, 163, 164, 165, 166, 167, 169, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 203, 204, 205, 206, 207, 208, 210, 229, 237, 270, 278, 281, 282, 283, 285, 287, 291, 293, 294, 298, 300, 310], "past": [213, 214, 216, 221], "patch": [110, 204], "path": [3, 5, 6], "pathwai": 86, "pattern": [86, 101, 150, 164, 171, 172, 173], "penal": [213, 221, 223], "penalti": [214, 215, 216, 217, 218, 219, 220], "penros": 17, "per": [1, 56, 57, 58, 59, 60, 61, 73, 74, 75, 131, 195, 196, 197, 198, 200], "perform": [3, 8, 9, 10, 17, 21, 32, 33, 34, 36, 37, 38, 39, 42, 43, 52, 68, 69, 70, 71, 72, 77, 84, 86, 89, 90, 94, 98, 106, 107, 108, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 147, 148, 149, 150, 151, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 225, 227, 234, 236, 238, 239, 242, 245, 248, 267, 269, 271, 278, 282, 299, 301, 303, 308, 310], "permut": 282, "persist": [88, 231, 232, 233, 235, 251, 252], "perturb": [12, 19, 20, 310], "phi": [98, 162], "pi": [98, 162, 264, 274, 279], "pil": [300, 310], "pinv": 13, "pioneer": 86, "pipelin": [5, 6, 236, 299, 300, 302], "pixel": [5, 6, 142, 302, 304], "place": [153, 155, 156, 157, 158, 159, 160], "placehold": [89, 183], "plai": [229, 236], "plot": 289, "point": [4, 143, 225], "pointwis": [147, 148, 149], "pool": [21, 36, 37, 38, 39, 44, 55, 62, 72, 77, 84, 86, 131, 132, 133, 134, 135, 136, 138, 139, 140, 150, 151, 172, 173, 200, 201, 202, 203, 204, 205, 206, 207, 208, 269, 271], "pool1": 95, "pool2": 95, "poorli": 14, "popul": 89, "popular": [4, 86], "portion": 310, "pose": 17, "posit": [1, 10, 15, 89, 95, 143, 161, 163, 164, 166, 203, 204, 205, 206, 207, 208, 222, 226, 247, 292, 296, 303], "possibl": [8, 310], "potenti": [17, 183, 221, 294], "power": [8, 15, 41, 86, 150, 226, 227, 258, 299, 300, 310], "pp": 86, "practic": [17, 187, 190], "practition": 310, "pre": [45, 49, 50], "preactbottleneck": [45, 49, 50], "preced": [86, 90, 237], "preconfigur": [33, 34], "predefin": [4, 86, 92, 166], "predict": [82, 186, 187, 189, 190], "prefix": [89, 228], "prepar": [3, 226, 290, 292, 296, 300, 310], "prepend": 89, "preprint": 86, "preprocess": [3, 4, 110, 143, 236, 299, 300, 310], "present": [186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 204], "preserv": [111, 143, 175, 249, 250, 253, 254, 255, 256, 257, 270, 278, 283], "preset": 4, "prevent": [1, 91, 92, 93, 94, 95, 112, 115, 165, 176, 177, 178, 179, 186, 187, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 227], "previou": [213, 222, 227], "previous": 216, "primari": [8, 229], "primarili": 95, "print": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 118, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 225, 226, 227, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308], "priorit": 151, "probabilist": 236, "probabl": [30, 98, 104, 111, 112, 113, 114, 115, 121, 162, 168, 175, 176, 177, 178, 179, 186, 187, 190, 304, 305, 307, 310], "problem": [17, 18, 20, 86, 100, 161, 163, 220], "proceed": 86, "process": [2, 3, 4, 15, 18, 20, 21, 33, 44, 72, 83, 84, 86, 94, 106, 107, 108, 129, 143, 144, 145, 146, 150, 151, 166, 169, 171, 173, 182, 192, 193, 194, 195, 196, 197, 198, 203, 205, 206, 208, 213, 229, 289, 300, 301, 302, 303, 308, 310], "produc": [21, 84, 87, 131, 132, 133, 150, 171, 172, 173, 200, 201, 202, 234, 236], "product": [8, 18, 20, 167, 182, 198, 210, 240, 241, 245, 246], "program": [225, 236], "progress": 215, "project": [18, 20], "projector": 17, "promin": [203, 205, 206, 207, 208], "promot": [95, 187, 190, 210], "propag": [11, 12, 14, 17, 18, 19, 20, 86, 89, 95, 118, 120, 142, 150, 204, 205, 221, 222, 240, 241, 242, 246, 269, 271, 289, 290, 293, 297], "properli": [0, 94, 104, 168, 210], "properti": [9, 11, 14, 15, 98, 102, 111, 162, 166, 175, 215, 220], "proport": [5, 6, 283], "proportion": 308, "provid": [0, 1, 2, 3, 4, 5, 6, 8, 9, 22, 28, 29, 30, 32, 36, 44, 77, 82, 83, 85, 86, 89, 91, 92, 93, 94, 98, 120, 132, 133, 143, 186, 187, 188, 190, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 221, 223, 225, 227, 229, 234, 236, 237, 242, 249, 255, 269, 271, 282, 284, 292, 294, 296, 310], "pseudo": [14, 17], "purpos": [231, 235, 249, 254, 256], "python": 229, "pytorch": 284, "q": [18, 86], "qr": 13, "quad": [17, 186, 187, 188, 189, 190, 206, 207, 208, 238, 239, 243, 244, 245, 248, 301], "quadrat": 188, "quotient": 239, "r": [18, 86, 304, 305, 306, 307], "r_t": 220, "radam": 224, "rais": [0, 1, 2, 89, 210, 211, 247], "rand": [230, 236], "randint": [230, 236], "randn": [21, 23, 24, 25, 26, 27, 42, 43, 44, 56, 57, 58, 59, 60, 61, 68, 69, 70, 71, 73, 74, 75, 76, 77, 82, 84, 147, 148, 149, 150, 151, 210, 230, 234, 236], "random": [1, 2, 3, 23, 24, 25, 26, 27, 42, 43, 44, 56, 57, 58, 59, 60, 61, 68, 69, 70, 71, 73, 74, 75, 76, 82, 147, 148, 149, 150, 151, 303, 304, 305, 306, 307, 310], "random_integ": 236, "random_tensor": 236, "randomcrop": [309, 310], "randomgrayscal": [309, 310], "randomhorizontalflip": [309, 310], "randomli": [1, 111, 112, 113, 114, 115, 143, 175, 176, 177, 178, 179, 303, 304, 305, 306, 307, 310], "randomnoisedataset": [0, 1, 2], "randomrot": [309, 310], "randomverticalflip": 309, "rang": [0, 1, 9, 44, 52, 86, 94, 103, 105, 106, 107, 122, 126, 160, 165, 167, 169, 213, 221, 223, 232, 260, 261, 263, 302, 306, 310], "rank": 17, "rasul": 5, "rate": [211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "rather": [5, 93, 94, 217, 293], "ratio": [62, 150, 151, 308], "ravel": 288, "raw": [104, 168, 187, 229], "re": [90, 227], "readabl": [91, 92, 93, 95, 210, 229], "readi": [3, 8, 68, 69, 70, 71, 76, 86], "real": [17, 20, 41, 167], "rearrang": 110, "recalibr": [63, 65, 66, 68, 69, 70, 71, 86, 150], "receiv": [206, 207, 208, 290], "recent": 221, "recept": [72, 76, 86, 151], "reciproc": [17, 258, 268, 276], "recognit": [39, 86, 172], "rectangular": 253, "rectif": 220, "rectifi": [100, 101, 163, 164, 220], "recurr": [92, 198], "recurs": [87, 89], "red": 304, "reduc": [21, 40, 44, 55, 72, 77, 84, 86, 147, 148, 149, 150, 192, 193, 194, 195, 196, 197, 203, 204, 205, 206, 207, 208, 219, 222, 227, 229, 269, 270, 271, 278, 283, 304], "reduct": [20, 62, 121, 122, 123, 125, 126, 150, 151, 186, 187, 188, 189, 190, 269, 271], "reevalu": 211, "refer": [4, 8, 89, 236, 250, 253, 285], "reflect": 225, "regardless": [17, 291], "region": [108, 131, 132, 133, 142, 201, 202, 290, 301, 310], "regist": [53, 54, 56, 57, 58, 59, 60, 61, 83, 88, 89, 90, 94, 210, 228], "register_buff": 88, "register_model": [22, 29, 30, 31, 33, 34, 37, 38, 39, 42, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 73, 74, 75, 78, 79, 80, 81, 83, 85], "register_paramet": 89, "registr": [89, 210], "registri": [56, 57, 58, 59, 60, 61, 228], "registry_path": 228, "regress": [4, 125, 188, 189], "regular": [17, 21, 30, 84, 115, 176, 177, 178, 179, 213, 214, 215, 218, 219, 220, 221, 223], "relat": [227, 253, 254], "relationship": 308, "relev": [142, 213, 221, 223], "reli": 227, "reliabl": [5, 6], "reliant": [176, 177, 178, 179], "relu": [8, 21, 62, 77, 84, 86, 87, 91, 92, 93, 95, 97, 99, 100, 117, 144, 145, 146, 150, 151, 155, 156, 159, 160, 161, 163, 165, 170, 171, 172, 173, 181, 182, 183, 184], "relu1": 95, "relu2": 95, "relu3": 95, "relu6": [170, 181], "remain": [5, 6, 88, 130, 175, 176, 177, 178, 179, 222], "rememb": 236, "remov": [228, 294], "rep": 296, "repeat": [288, 289, 296], "repetit": [292, 296], "replac": [5, 236, 304], "repres": [5, 14, 16, 20, 36, 89, 90, 95, 118, 120, 127, 129, 130, 171, 172, 173, 182, 184, 187, 190, 198, 211, 212, 213, 219, 220, 221, 222, 223, 229, 238, 239, 245, 248, 250, 270, 281, 282, 283, 289, 301, 303, 305, 306, 307, 308], "represent": [53, 54, 56, 57, 58, 59, 60, 61, 68, 69, 70, 71, 72, 76, 86, 150, 204, 207, 211], "reproduc": [231, 232, 233, 234, 235, 236, 310], "requir": [2, 3, 4, 8, 56, 57, 58, 59, 60, 61, 72, 88, 91, 95, 97, 98, 100, 101, 102, 103, 105, 118, 120, 142, 150, 151, 160, 183, 187, 190, 210, 225, 227, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 279, 280, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 308], "requires_grad": [88, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 110, 118, 120, 142, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 203, 204, 205, 206, 207, 208, 210, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300], "rescal": [121, 122, 126, 186, 187, 190], "research": 210, "reset": [90, 234, 237], "reshap": [8, 62, 120, 172, 173, 226, 229, 288, 291], "residu": [31, 32, 33, 34, 41, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 63, 64, 65, 66, 67, 86], "residualblock": 44, "resili": 222, "resiz": [142, 299, 309, 310], "resnet": [32, 33, 34, 35, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 63, 64, 65, 66, 67, 72, 73, 74, 75, 86, 150], "resnet_1001": 86, "resnet_101": 86, "resnet_152": 86, "resnet_18": 86, "resnet_200": 86, "resnet_269": 86, "resnet_34": 86, "resnet_50": 86, "resnet_arg": 72, "resnext": [35, 56, 57, 58, 59, 60, 61, 68, 69, 70, 71, 76, 86], "resnext_101_32x16d": 86, "resnext_101_32x32d": 86, "resnext_101_32x4d": 86, "resnext_101_32x8d": 86, "resnext_101_64x4d": 86, "resnext_50_32x4d": 86, "resolut": [68, 69, 70, 71, 76], "resourc": 227, "respect": [10, 11, 12, 14, 15, 16, 17, 18, 20, 36, 77, 88, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 118, 120, 142, 151, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 263, 267, 268, 269, 270, 271, 274, 276, 278, 281, 282, 283, 289, 290, 292, 296, 304], "respons": [68, 69, 70, 71, 86, 91, 212], "restor": [150, 227], "restructur": 293, "result": [10, 14, 15, 17, 86, 89, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 118, 120, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 151, 165, 168, 210, 211, 225, 227, 231, 232, 233, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 284, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 304, 310], "resum": 212, "retain": [90, 237, 249, 256, 269, 270, 271, 278, 283, 300], "retent": 300, "retriev": [0, 2, 91, 93, 94], "return": [0, 1, 2, 3, 5, 6, 8, 32, 36, 62, 88, 89, 91, 92, 93, 94, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 228, 229, 299, 310], "reus": [86, 300], "reusabl": [95, 210, 299], "revers": [8, 95, 282, 305, 307], "revert": 227, "revolution": 86, "rgb": [29, 30, 31, 33, 34], "rho": 214, "rho_": 220, "rho_t": 220, "right": [15, 16, 17, 19, 20, 98, 104, 162, 168, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 206, 207, 208, 301], "risk": 229, "rmsprop": 224, "rob": 86, "robust": [143, 175, 176, 177, 178, 179, 188, 210, 214, 303, 304, 306, 310], "roland": 5, "role": [229, 236, 310], "root": [4, 5, 6, 215, 221, 276], "rotat": [117, 141, 306, 310], "rotated_imag": 143, "rout": [206, 207, 208], "routin": 8, "row": [11, 12, 14, 19, 120, 253, 289, 298], "rprop": 224, "rule": [14, 15, 226, 238, 239, 243, 244, 245, 247, 248], "run": [8, 88, 127, 129, 144, 145, 146, 192, 193, 194, 195, 196, 197, 214, 227, 234, 236], "running_mean": [88, 127, 129, 192, 193, 194, 195, 196, 197], "running_var": [127, 129, 192, 193, 194, 195, 196, 197], "runtim": [92, 95, 210], "s_": 222, "s_d": [205, 208], "s_h": [204, 205, 208], "s_w": [204, 205, 208], "sain": 86, "same": [11, 12, 14, 15, 19, 104, 111, 112, 113, 114, 115, 127, 129, 130, 132, 133, 143, 144, 145, 146, 147, 148, 149, 151, 165, 171, 172, 173, 175, 176, 177, 178, 179, 183, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 222, 234, 236, 242, 252, 255, 257, 267, 269, 270, 271, 285, 287, 291, 293, 294, 295, 298, 302], "sampl": [0, 1, 2, 3, 5, 6, 8, 29, 30, 31, 33, 34, 36, 37, 38, 39, 42, 43, 68, 69, 70, 71, 76, 131, 132, 133, 155, 156, 157, 158, 159, 160, 175, 176, 177, 178, 179, 182, 184, 187, 190, 198, 200, 201, 202, 233, 236, 301, 303, 305, 306, 307, 308], "sandler": 86, "satisfi": [10, 12, 19], "satur": [161, 310], "save": [2, 88, 90, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 228], "scalabl": [3, 56, 57, 58, 59, 60, 61, 82, 86, 210], "scalar": [11, 16, 121, 122, 123, 125, 126, 229], "scale": [12, 17, 23, 33, 37, 38, 39, 40, 42, 45, 46, 47, 50, 63, 64, 72, 73, 74, 75, 86, 97, 102, 104, 127, 129, 130, 150, 151, 159, 160, 161, 163, 166, 167, 168, 169, 175, 176, 177, 178, 179, 187, 192, 193, 194, 195, 196, 197, 198, 213, 215, 216, 217, 229, 236, 283, 308], "scenario": [93, 94, 198, 217, 218, 300, 304], "schedul": 213, "scientif": 226, "score": [44, 55, 72, 104, 187], "scratch": 8, "script": 236, "se": [63, 64, 65, 66, 67, 68, 69, 70, 71, 86], "se_resnet_101": 86, "se_resnet_152": 86, "se_resnet_18": 86, "se_resnet_34": 86, "se_resnet_50": 86, "se_resnext_101_32x4d": 86, "se_resnext_101_32x8d": 86, "se_resnext_101_64x4d": 86, "se_resnext_50_32x4d": 86, "seamless": [0, 1, 3, 4, 210, 236], "seamlessli": [3, 4, 9, 90, 92, 95, 210, 229, 310], "search": 86, "second": [12, 92, 93, 118, 150, 182, 216, 217, 218, 219, 220, 226, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 287, 289, 307], "section": 242, "see": [8, 242], "seed": [230, 231, 232, 233, 235, 236, 310], "seen": 214, "select": [72, 73, 74, 75, 76, 86, 142, 150, 151, 206, 208, 278], "selectivekernel": 152, "self": [0, 1, 2, 3, 8, 21, 28, 32, 36, 40, 41, 62, 77, 84, 87, 88, 89, 90, 91, 92, 93, 94, 102, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 182, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 228, 289, 299, 300], "selu": [99, 111, 117, 170, 175, 181], "selunetwork": 166, "semodul": 152, "senet": [35, 63, 64, 65, 66, 67, 68, 69, 70, 71, 86], "sensit": [123, 188, 192, 193, 194], "sentiment": 4, "separ": [0, 40, 82, 86, 106, 107, 108, 147, 148, 149, 195, 196, 197], "sequenc": [15, 44, 55, 72, 91, 93, 106, 249, 285, 287, 290, 292, 295, 296, 298, 299], "sequenti": [21, 32, 36, 62, 77, 82, 84, 87, 91, 92, 96, 106, 144, 145, 146, 183, 299, 310], "seri": [28, 37, 38, 72, 106, 144, 171, 203, 206], "serial": [88, 89, 212], "serv": [3, 5, 23, 32, 62, 77, 89, 91, 92, 93, 94, 95, 210, 222, 300], "set": [3, 4, 5, 6, 53, 54, 68, 69, 70, 71, 76, 87, 90, 94, 106, 107, 108, 163, 164, 166, 171, 172, 173, 175, 178, 179, 182, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 211, 216, 217, 221, 231, 232, 233, 234, 235, 236, 237, 249, 251, 252, 256, 257, 263, 269, 271, 284, 300, 304, 310], "setup": [4, 8, 56, 57, 58, 59, 60, 61], "sever": [17, 171, 172, 173, 203, 204, 205, 206, 207, 208, 227, 299, 310], "sgd": [8, 213, 220, 224], "sgn": 16, "shape": [3, 4, 5, 6, 8, 11, 12, 14, 15, 17, 21, 23, 24, 25, 26, 27, 32, 36, 44, 56, 57, 58, 59, 60, 61, 62, 68, 69, 70, 71, 73, 74, 75, 76, 77, 82, 84, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 118, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 150, 151, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 226, 229, 231, 232, 233, 235, 236, 237, 240, 251, 252, 253, 254, 255, 256, 257, 263, 268, 269, 270, 271, 274, 276, 278, 282, 283, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 298, 301, 302, 303, 304, 305, 306, 307, 308, 310], "shapelik": 232, "share": 86, "shen": 150, "shift": [127, 129, 130, 192, 193, 194, 195, 196, 197, 198], "shorthand": 242, "should": [36, 88, 227, 231, 232, 233, 235, 251, 252, 260, 261, 281, 290, 299], "show": [225, 228], "showcas": 8, "shown": 234, "shrink": 214, "shuffl": [1, 2, 3], "side": [19, 92, 95, 106, 107, 108, 134, 135, 136, 138, 139, 140, 144, 145, 146, 171, 172, 173, 203, 204, 205, 206, 207, 208, 227], "sigma": [17, 150, 155, 157, 159, 167, 192, 193, 194, 195, 196, 197, 198, 282], "sigma_c": 302, "sigma_i": 17, "sigmoid": [99, 117, 150, 155, 156, 159, 160, 170, 181, 186], "sigmoidnetwork": 167, "sign": [15, 188, 222, 258], "signal": [144, 171, 172, 173, 192, 195, 203, 204, 205, 206, 207, 208], "signific": 227, "significantli": [41, 55, 86, 150, 299], "sim": [175, 176, 177, 178, 179], "similar": [8, 155, 156, 242, 268, 284, 290], "similarli": [20, 281], "simonyan": 86, "simpl": [3, 4, 8, 87, 95, 106, 107, 108, 118, 120, 134, 135, 136, 138, 139, 140, 162, 164, 165, 166, 167, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 203, 204, 205, 206, 207, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 240, 241, 246, 299], "simplebinaryclassificationmodel": 186, "simpleclassificationmodel": [187, 190], "simplegelumodel": 162, "simpleleakyrelumodel": 163, "simplemodel": [8, 87, 165, 184, 228], "simpleregressionmodel": 189, "simplerelumodel": 164, "simpleselumodel": 166, "simplesigmoidmodel": 167, "simpletanhmodel": 169, "simpli": [225, 281, 282, 293], "simplic": [86, 164], "simplifi": [4, 37, 83, 95, 144, 145, 146], "simul": [87, 310], "simultan": 143, "sin": [258, 264], "sinc": [15, 18, 91, 92, 93, 94, 106, 107, 108, 160, 225, 227, 233, 289, 310], "sine": [261, 274, 275], "singl": [0, 4, 15, 18, 20, 44, 104, 144, 145, 146, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 187, 198, 204, 205, 206, 207, 208, 211, 229, 235, 251, 285, 294, 302, 304, 310], "singleton": 198, "singular": [11, 14, 15, 17, 19, 20], "sinh": [258, 265, 280], "size": [0, 1, 2, 3, 20, 36, 37, 38, 39, 42, 44, 72, 84, 86, 87, 90, 92, 106, 107, 108, 110, 113, 114, 115, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 171, 172, 173, 182, 184, 186, 187, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 228, 232, 235, 236, 237, 269, 270, 271, 278, 283, 285, 287, 294, 297, 298, 301, 303, 308, 310], "sk": [72, 73, 74, 75, 76, 86, 151], "sk_resnet_18": 86, "sk_resnet_34": 86, "sk_resnet_50": 86, "sk_resnext_50_32x4d": 86, "skblock": 72, "skip": [86, 227], "sknet": [35, 73, 74, 75, 76, 86], "slice": [118, 281], "slide": [110, 203, 205, 206, 208], "slight": 150, "slightli": 310, "slope": [100, 161, 163], "slow": [3, 220], "small": [17, 37, 38, 39, 86, 100, 121, 122, 127, 129, 130, 163, 166, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 204, 207, 214, 215, 216, 217, 218, 219, 220, 221, 222], "smaller": [84, 86, 92, 95, 210, 215, 216, 244, 301, 303, 308], "smallest": 271, "smooth": [30, 98, 161, 162, 213, 221, 310], "smoother": 213, "so": [91, 92, 93, 94, 143, 210, 220, 251, 252, 299], "softmax": [99, 117, 151, 170, 181, 187], "softmaxmodel": 168, "solut": [17, 19], "solv": [9, 10, 13, 17, 18, 20], "solver": 9, "some": [97, 112, 143, 175, 176, 177, 192, 193, 194, 195, 196, 197, 215, 216, 217, 227, 229], "sometim": 226, "sophist": [92, 95], "sourc": 236, "space": [12, 18, 20, 106, 107, 108, 110, 131, 132, 133, 144, 145, 146, 147, 148, 149, 171, 172, 173, 200, 201, 202, 249, 310], "span": 4, "spars": [215, 216], "spatial": [21, 44, 55, 72, 77, 84, 86, 145, 150, 172, 173, 192, 193, 194, 195, 196, 197, 198, 204, 205, 206, 207, 208, 289], "spatial_dim": 150, "spatio": 173, "special": [0, 1, 8, 17, 88, 89, 90, 175, 236], "specif": [4, 8, 24, 25, 26, 27, 32, 40, 53, 54, 91, 92, 93, 94, 95, 151, 160, 175, 176, 177, 178, 179, 195, 196, 197, 210, 211, 225, 236, 251, 269, 271, 292, 296], "specifi": [0, 1, 2, 3, 4, 5, 6, 8, 16, 22, 23, 36, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 74, 75, 77, 78, 79, 80, 81, 83, 85, 87, 92, 104, 110, 115, 121, 122, 123, 125, 126, 130, 131, 132, 133, 142, 143, 150, 168, 171, 172, 173, 186, 187, 188, 189, 190, 198, 200, 201, 202, 204, 205, 206, 207, 208, 211, 229, 231, 232, 233, 234, 235, 247, 249, 250, 251, 252, 253, 254, 256, 257, 263, 269, 270, 271, 278, 282, 283, 284, 285, 287, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 306, 308, 310], "speech": 195, "speed": [213, 214, 215, 216, 217, 218, 219, 220, 221, 223], "split": [4, 285, 287, 298], "springer": 86, "sqrt": [98, 155, 156, 159, 160, 162, 192, 193, 194, 195, 196, 197, 198, 214, 215, 216, 217, 219, 220, 221, 258, 260, 261], "squar": [1, 3, 10, 11, 12, 14, 15, 17, 18, 19, 20, 123, 125, 188, 189, 214, 215, 216, 221, 258, 276], "squaredataset": [0, 1, 2, 3], "squeez": [62, 65, 68, 69, 70, 71, 86, 150, 288], "stabil": [14, 17, 86, 121, 122, 127, 129, 130, 144, 145, 146, 165, 186, 187, 192, 193, 194, 195, 196, 197, 198, 213, 214, 215, 216, 217, 218, 219, 220, 221, 302], "stabl": [155, 156, 159, 160, 175, 187, 213, 217, 218, 221, 222, 223], "stack": [95, 151, 287, 288, 298, 310], "stage": [44, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 72, 73, 74, 75], "stage1": 62, "stage2": 62, "stage3": 62, "stage4": 62, "standalon": 165, "standard": [44, 53, 54, 98, 100, 147, 148, 149, 155, 157, 159, 161, 162, 163, 175, 222, 233, 236, 242, 299, 302, 310], "start": [1, 3, 213, 215, 222, 249, 301, 303], "state": [86, 88, 89, 90, 92, 95, 211, 225, 227, 234], "state_dict": [89, 90, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "static": 95, "statist": [17, 111, 127, 129], "std": [5, 6, 157, 299, 302, 310], "stem": [32, 44, 55, 72], "stem_typ": 44, "stem_width": 44, "step": [90, 110, 151, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 249, 299, 300], "step_siz": 222, "still": 214, "stochast": [8, 213, 223], "stop": 249, "storag": [91, 93, 237], "store": [2, 4, 5, 6, 44, 55, 72, 88, 89, 90, 91, 92, 93, 94, 150, 200, 201, 202, 227, 237, 301, 302, 303, 304, 305, 306, 307, 308], "str": [5, 6, 44, 77, 89, 91, 93, 95, 121, 122, 123, 125, 126, 142, 211, 228, 289], "straightforward": [223, 225, 238], "strategi": 212, "streamlin": [2, 3], "strict": [89, 211], "stride": [36, 37, 38, 39, 92, 95, 106, 107, 108, 110, 131, 132, 133, 134, 135, 136, 138, 139, 140, 144, 145, 146, 147, 148, 149, 151, 171, 172, 173, 200, 201, 202, 203, 204, 205, 206, 207, 208], "stride_height": 110, "stride_width": 110, "string": [89, 91, 93, 95, 171, 172, 173, 211], "structur": [0, 8, 18, 82, 88, 89, 92, 210, 211, 228, 229, 253, 300], "style": [32, 129, 195, 196, 289], "sub": [91, 92, 93, 94, 95, 210, 258, 301, 303], "sub_tensor": 237, "subclass": [1, 2, 3, 8, 89, 90, 91, 210, 211], "sublay": 87, "submodul": [87, 89, 210], "subsequ": [92, 95, 160, 236], "subset": [176, 177], "subtract": [8, 248, 302], "suffer": 215, "suit": [24, 25, 26, 27, 30, 40, 72, 155, 156, 159, 160], "suitabl": [32, 37, 38, 39, 41, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 64, 65, 67, 86, 188, 215, 216, 231], "sum": [16, 91, 92, 93, 94, 95, 104, 121, 122, 123, 125, 126, 151, 168, 186, 187, 188, 189, 190, 215, 238, 241, 246, 258, 281, 283, 285, 287, 289, 292, 296, 298], "sum_": [15, 104, 168, 186, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 203, 204, 205, 240, 241, 270, 278, 281, 283, 289, 292], "sum_i": [16, 246], "sum_j": 246, "sum_k": 242, "summar": [53, 54, 82, 203, 204, 205], "summari": [53, 54, 68, 69, 70, 71, 76], "summat": 15, "sun": 150, "super": [8, 87, 88, 89, 90, 91, 92, 93, 94, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 182, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 228], "support": [1, 3, 4, 8, 9, 15, 16, 17, 18, 20, 42, 44, 91, 92, 93, 94, 95, 142, 143, 210, 212, 219, 236, 237, 238, 239, 242, 243, 244, 245, 247, 248, 250, 253, 263, 268, 270, 274, 276, 278, 281, 282, 283, 285, 289, 293, 300, 310], "suppos": 310, "sure": [210, 310], "svd": [13, 17], "symmetr": [10, 131, 132, 133, 159, 160, 169], "syntax": [1, 242], "system": [9, 10, 17, 18, 19, 86, 225, 289], "systemat": 310, "szegedi": [29, 86], "t": [17, 86, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 237, 242, 284, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310], "t0": 213, "t1": 284, "t2": 284, "tabular": 4, "tailor": [4, 210, 310], "take": [18, 203, 204, 205, 206, 207, 208, 227, 299], "taken": 281, "tan": [86, 258], "tangent": [105, 169, 262, 279, 280], "tanh": [36, 92, 95, 98, 99, 117, 155, 156, 159, 160, 162, 170, 181, 258], "tanhnetwork": 169, "target": [5, 6, 95, 121, 122, 123, 125, 126, 131, 132, 133, 142, 186, 187, 188, 189, 190, 200, 201, 202, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 301, 303, 308], "target_tensor": [186, 187, 188, 189, 190], "target_transform": [5, 6], "task": [4, 8, 9, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 76, 82, 86, 103, 104, 107, 118, 121, 122, 125, 126, 150, 151, 167, 168, 171, 172, 173, 186, 187, 188, 189, 190, 195, 196, 197, 203, 205, 206, 208, 216, 226, 236, 253, 310], "techniqu": [10, 14, 84, 127, 175, 176, 177, 178, 179, 195, 196, 197, 212, 308, 310], "tempor": [171, 173, 205, 208], "temporarili": 227, "tensor": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 42, 43, 44, 56, 57, 58, 59, 60, 61, 62, 73, 74, 75, 77, 82, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 118, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 225, 227, 229, 231, 232, 233, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310], "term": [17, 118, 144, 145, 146, 147, 148, 149, 213, 217, 219, 220, 221, 223], "test": [4, 5, 6], "test_backward": 87, "test_siz": [5, 6], "text": [4, 11, 15, 16, 44, 55, 72, 73, 74, 75, 82, 91, 97, 100, 101, 102, 104, 106, 107, 108, 131, 132, 133, 134, 135, 136, 138, 139, 140, 144, 145, 146, 147, 148, 149, 150, 151, 155, 156, 159, 160, 161, 163, 164, 165, 166, 168, 171, 172, 173, 175, 176, 177, 178, 179, 186, 187, 188, 189, 190, 203, 204, 205, 206, 207, 208, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 232, 238, 239, 241, 243, 244, 245, 247, 248, 259, 263, 269, 270, 271, 273, 278, 283, 285, 287, 290, 291, 292, 293, 294, 296, 297, 298, 301, 302, 303, 305, 306, 307], "th": [118, 186, 187, 189, 190, 195, 196, 197, 243, 244, 247], "than": [0, 1, 5, 93, 94, 97, 100, 123, 147, 148, 149, 161, 163, 188, 211, 217, 263, 281, 290, 295, 301, 303, 308], "thei": [0, 8, 20, 86, 88, 92, 94, 95, 229, 289, 293, 301, 303, 310], "them": [3, 89, 94, 110, 213, 226, 285, 295, 299, 302, 310], "therebi": [175, 204, 205, 207, 208], "theta": [213, 214, 306], "theta_": [213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "theta_t": [220, 221], "thi": [0, 1, 2, 3, 5, 6, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 40, 41, 43, 44, 53, 54, 55, 56, 57, 58, 59, 60, 61, 68, 69, 70, 71, 72, 73, 74, 75, 76, 82, 86, 87, 88, 90, 92, 93, 94, 95, 101, 103, 104, 105, 106, 107, 108, 110, 118, 120, 131, 142, 143, 147, 148, 149, 150, 151, 155, 156, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 200, 203, 204, 205, 206, 207, 208, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 232, 233, 234, 236, 237, 241, 242, 246, 249, 251, 254, 255, 256, 257, 263, 267, 268, 269, 270, 271, 274, 276, 278, 281, 282, 283, 284, 290, 292, 293, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310], "thing": 227, "those": [8, 37, 38, 39, 94, 160], "three": [20, 39, 108, 133, 136, 140, 144, 145, 146, 173, 179, 194, 197, 202, 205, 208], "threshold": [17, 123, 188], "through": [0, 3, 4, 8, 12, 17, 18, 20, 21, 28, 32, 36, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 73, 74, 75, 83, 84, 91, 92, 95, 118, 120, 142, 150, 151, 161, 162, 163, 164, 166, 167, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 192, 193, 194, 195, 198, 203, 204, 205, 206, 207, 208, 233, 240, 241, 246, 289, 291, 293, 294, 297, 310], "throughout": [102, 300], "tile": 288, "time": [0, 3, 15, 37, 38, 39, 41, 106, 144, 163, 166, 171, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 217, 221, 223, 227, 292, 296], "to_tensor": [5, 6], "togeth": [95, 299, 310], "too": 222, "tool": [3, 8, 210, 226, 236, 299, 310], "top": [10, 11, 12, 18, 20, 118, 120, 142, 171, 172, 173, 182, 184, 301, 303], "torch": [77, 284], "total": [0, 1, 2, 5, 6, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, 85, 87, 90, 237, 293], "totensor": [299, 310], "trace": [9, 258], "track": [8, 144, 145, 146, 192, 193, 194, 195, 196, 197, 210, 225, 227, 231, 232, 233, 235, 249, 250, 251, 252, 253, 254, 255, 256, 257, 284, 300], "track_running_stat": [144, 145, 146, 192, 193, 194, 195, 196, 197], "tradit": [5, 214, 215, 218, 219, 220], "trail": 130, "train": [1, 2, 3, 4, 5, 6, 8, 28, 29, 30, 68, 69, 70, 71, 76, 86, 87, 88, 89, 92, 94, 95, 104, 111, 112, 113, 114, 115, 127, 129, 143, 162, 163, 166, 167, 168, 169, 175, 176, 177, 178, 179, 192, 193, 194, 195, 196, 197, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 299, 302, 303, 304, 305, 306, 307, 310], "trainabl": [87, 192, 193, 194, 195, 196, 197, 210], "transact": 150, "transfer": [129, 195, 196], "transform": [2, 4, 5, 6, 8, 12, 86, 93, 118, 120, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 226, 289], "transform_pipelin": [299, 310], "transformed_imag": [299, 310], "transit": [23, 188], "translat": [204, 207], "transpos": [8, 10, 258], "treat": [0, 88, 198, 210], "triangular": [10, 18], "true": [1, 2, 3, 4, 5, 6, 20, 28, 29, 30, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 110, 111, 112, 113, 114, 115, 118, 120, 127, 129, 142, 144, 145, 146, 147, 148, 149, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 203, 204, 205, 206, 207, 208, 210, 211, 216, 217, 221, 225, 231, 232, 233, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 287, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300], "truncat": 87, "truncate_from": 87, "try": 0, "tune": 310, "tupl": [2, 3, 5, 6, 12, 18, 20, 23, 44, 87, 89, 90, 106, 107, 108, 110, 130, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 171, 172, 173, 183, 198, 201, 202, 203, 204, 205, 206, 207, 208, 216, 217, 218, 219, 220, 222, 229, 231, 232, 233, 235, 237, 251, 254, 256, 269, 270, 271, 278, 283, 285, 287, 289, 290, 293, 294, 295, 297, 298, 301, 302, 303, 308], "twice": 290, "two": [8, 11, 12, 14, 15, 17, 18, 20, 37, 38, 39, 73, 77, 106, 107, 108, 118, 135, 139, 150, 151, 172, 178, 182, 193, 196, 204, 207, 216, 217, 218, 219, 220, 222, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 281, 289], "type": [36, 44, 62, 72, 88, 89, 90, 118, 182, 237, 249, 250, 251, 252, 253, 254, 255, 256, 257, 284, 289, 300], "typeerror": [0, 1, 2, 89, 211], "typic": [9, 44, 55, 72, 88, 104, 111, 143, 150, 165, 166, 168, 190, 192, 193, 194, 195, 196, 197, 212, 213, 221, 223, 227, 229, 297, 300, 302, 306, 308, 310], "u": [17, 20, 156, 158, 160], "u_": 218, "ultra": 50, "unchang": [88, 115, 161, 163, 164, 166, 175, 176, 177, 178, 179, 183, 291, 294], "undefin": 247, "under": [56, 57, 58, 59, 60, 61, 210], "underbrac": 15, "underdetermin": 17, "undergo": 310, "underli": [0, 8, 29, 30, 31, 33, 34, 284, 287, 291, 293, 298], "understand": [8, 84, 86, 87, 95, 310], "unexpect": [89, 92, 95, 236], "unfold": [109, 117], "unifi": 0, "uniform": [154, 156, 160, 171, 172, 173, 182, 184, 230, 231, 232, 236, 304, 305, 306, 307], "uniformli": [231, 235], "uniniti": [251, 252], "unintend": 227, "union": 77, "uniqu": [10, 17, 19, 91, 93], "unit": [21, 36, 84, 97, 98, 100, 101, 102, 155, 156, 159, 160, 161, 162, 163, 164, 166, 175], "unless": [45, 46, 47, 48, 49, 50, 51, 52, 63, 64, 65, 66, 67, 237], "unlik": [88, 91, 92, 93, 94, 100, 161, 163, 175, 198, 214, 215, 217, 218, 219, 220, 222], "unnecessari": 227, "unpad": 290, "unseen": 310, "unsqueez": 288, "unstabl": 14, "up": [211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 306, 308], "updat": [4, 88, 94, 95, 175, 176, 177, 178, 179, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227], "upon": [30, 86, 91, 92, 93, 94], "upper": [18, 158, 222, 235], "us": [0, 2, 3, 4, 5, 6, 8, 9, 10, 12, 14, 15, 17, 18, 20, 23, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 62, 63, 64, 65, 66, 67, 72, 73, 74, 75, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 118, 120, 125, 127, 129, 132, 133, 142, 143, 144, 145, 146, 150, 151, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 225, 226, 227, 228, 231, 232, 233, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 267, 269, 270, 271, 278, 283, 289, 290, 292, 294, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310], "usag": [3, 9, 23, 82, 92, 95, 147, 148, 149, 211, 212, 301, 302, 303, 304, 305, 306, 307, 308], "use_aux": [28, 29, 30], "user": [1, 2, 3, 4, 8, 91, 92, 93, 94, 210, 215, 299, 300, 310], "usual": 187, "util": [3, 8, 9, 73, 74, 75, 93, 94, 210, 236], "v": [12, 17, 20, 86, 216, 217, 219, 220, 250], "v1": [28, 29, 32, 33, 34, 40, 41, 86], "v2": [32, 34, 35, 41, 43, 86], "v3": [28, 30, 31, 86], "v4": [28, 31, 86], "v_": [213, 216, 217, 219, 220, 221, 223], "v_stack": 298, "v_t": [220, 221], "val": 153, "valid": [144, 145, 146, 147, 148, 149, 151, 171, 172, 173, 282], "valu": [8, 11, 15, 16, 17, 20, 40, 53, 54, 87, 89, 91, 93, 95, 97, 100, 103, 104, 105, 106, 107, 108, 110, 121, 122, 123, 125, 126, 127, 129, 130, 131, 142, 143, 144, 145, 146, 150, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 169, 175, 176, 177, 178, 179, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 229, 231, 232, 233, 234, 235, 236, 249, 250, 251, 252, 253, 259, 260, 261, 263, 266, 267, 268, 269, 271, 273, 274, 276, 277, 285, 290, 291, 293, 297, 302, 304, 305, 307], "valuabl": 236, "valueerror": [1, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 211], "van": 86, "vanish": [86, 161, 166, 192, 193, 194], "var": 258, "vari": [72, 92, 94, 131, 142, 200, 306], "variabl": [89, 95, 131, 132, 133, 183, 200, 201, 202, 210, 225, 227, 231, 251, 303, 306], "varianc": [102, 111, 127, 129, 144, 145, 146, 155, 156, 159, 160, 166, 175, 192, 193, 194, 195, 196, 197, 198, 216, 217, 218, 219, 220, 233, 283, 306, 310], "variant": [23, 24, 25, 26, 27, 53, 54, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 216, 217, 218], "variat": [147, 148, 149, 195, 196, 197, 303, 310], "varieti": [4, 32, 236, 310], "variou": [5, 23, 28, 33, 34, 36, 42, 86, 164, 212, 236, 269, 271, 290, 300], "vasudevan": 86, "vdot": 246, "vector": [12, 17, 18, 19, 20, 118, 120, 182, 184, 240, 241, 242, 246], "veloc": [213, 221, 223], "veri": [17, 47, 49, 86, 214], "versa": 222, "versatil": [236, 289], "version": [20, 28, 32, 36, 37, 38, 221, 246, 304], "vertic": [295, 298, 307], "vgg": 77, "vggnet": [35, 78, 79, 80, 81, 86], "vggnet_11": 86, "vggnet_13": 86, "vggnet_16": 86, "vggnet_19": 86, "via": [3, 4, 72], "vice": 222, "video": [108, 115, 146, 173, 197, 205, 208], "view": [32, 36, 92, 204, 205, 206, 207, 208, 293], "vision": [40, 41, 43, 44, 86, 107, 172, 182, 310], "visual": [84, 86], "vol": 86, "vollgraf": 5, "volumetr": [108, 115, 146, 173, 197, 205, 208], "vstack": 288, "w": [44, 56, 57, 58, 59, 60, 61, 73, 74, 75, 86, 107, 108, 110, 114, 115, 118, 120, 132, 133, 135, 136, 139, 140, 142, 143, 145, 146, 150, 171, 172, 173, 182, 184, 193, 194, 196, 197, 201, 202, 205, 208, 301, 303], "w_": [107, 108, 132, 133, 135, 136, 139, 140, 142, 172, 173, 201, 202, 204, 205, 207, 208], "w_out": [107, 108, 135, 136, 139, 140], "wa": [29, 175, 176, 177, 178, 179, 227], "wai": [1, 22, 85, 225, 227, 293], "wang": 86, "want": [0, 8, 299, 301], "warn": [91, 93], "we": [3, 8, 226, 289], "weight": [45, 46, 47, 48, 49, 50, 51, 52, 63, 64, 65, 66, 67, 86, 106, 107, 108, 118, 120, 121, 122, 126, 127, 129, 130, 142, 150, 151, 155, 156, 159, 160, 171, 172, 173, 175, 176, 177, 178, 179, 182, 184, 186, 187, 190, 192, 193, 194, 195, 196, 197, 198, 210, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 231, 236], "weight1": 93, "weight2": 93, "weight_decai": [213, 214, 215, 216, 217, 218, 219, 220, 221, 223], "weinberg": 86, "well": [24, 25, 26, 27, 30, 72, 155, 156], "were": 95, "weyand": 86, "what": 227, "when": [0, 1, 3, 8, 15, 89, 92, 94, 95, 97, 100, 106, 107, 108, 161, 183, 192, 193, 194, 195, 196, 197, 211, 214, 222, 225, 227, 228, 229, 236, 247, 299, 301], "where": [3, 4, 5, 6, 11, 12, 14, 15, 16, 17, 18, 20, 82, 86, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 113, 114, 115, 118, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 150, 151, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 229, 236, 238, 239, 243, 244, 245, 247, 248, 251, 252, 263, 267, 268, 269, 270, 271, 274, 276, 278, 281, 282, 283, 285, 290, 292, 296, 299, 300, 301, 302, 303, 304, 305, 306, 307], "whether": [1, 11, 28, 29, 30, 89, 90, 155, 156, 221, 225, 231, 232, 233, 235, 237, 251, 252, 269, 270, 271, 278, 283], "which": [0, 5, 8, 11, 12, 14, 15, 16, 17, 18, 20, 31, 34, 40, 41, 42, 68, 69, 70, 71, 72, 76, 78, 79, 80, 81, 86, 89, 91, 93, 95, 100, 104, 123, 143, 147, 148, 149, 151, 161, 162, 163, 165, 168, 169, 175, 188, 190, 192, 193, 194, 195, 196, 197, 198, 216, 217, 219, 221, 225, 227, 229, 231, 232, 235, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 274, 275, 276, 278, 279, 280, 281, 283, 285, 292, 293, 295, 297, 300, 301, 303, 304, 305, 306, 307, 308, 310], "while": [8, 34, 40, 55, 56, 57, 58, 59, 60, 61, 68, 69, 70, 71, 76, 86, 92, 95, 111, 162, 164, 165, 210, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 227, 293, 295, 304, 310], "who": [8, 91, 92, 93, 94], "whose": [20, 252, 255, 257, 259, 263, 267, 273], "wide": [4, 6, 9, 17, 44, 52, 53, 54, 86, 101, 164, 171, 172, 187], "wide_resnet_101": 86, "wide_resnet_50": 86, "wider": [53, 54, 106, 107], "wideresnet": 86, "width": [40, 42, 53, 54, 55, 56, 57, 58, 59, 60, 61, 72, 82, 107, 108, 110, 114, 115, 132, 133, 135, 136, 139, 140, 142, 143, 151, 172, 173, 193, 194, 196, 197, 201, 202, 204, 205, 207, 208, 301, 303, 308], "width_multipli": [40, 42], "window": [134, 135, 136, 138, 139, 140, 203, 204, 205, 206, 207, 208, 214, 269, 271], "wise": [66, 68, 69, 70, 71, 86, 97, 98, 100, 101, 102, 103, 104, 105, 144, 145, 146, 150, 168, 175, 176, 177, 178, 179, 210, 226, 238, 239, 242, 243, 244, 245, 247, 248, 259, 260, 261, 262, 263, 264, 265, 266, 268, 272, 273, 274, 275, 276, 277, 279, 280, 281, 287, 298], "within": [2, 86, 87, 88, 91, 92, 93, 94, 95, 105, 142, 143, 160, 162, 164, 166, 167, 169, 171, 172, 173, 175, 176, 177, 183, 186, 187, 188, 189, 190, 192, 193, 194, 195, 198, 203, 204, 205, 206, 207, 208, 212, 227, 249, 263, 306, 310], "without": [8, 55, 91, 92, 93, 118, 120, 171, 172, 173, 182, 184, 225, 228, 269, 291, 293, 297], "won": 227, "work": [1, 2, 3, 8, 10, 226, 229], "workflow": [236, 310], "workload": 8, "wrap": [3, 210, 227, 284], "wrapper": 210, "x": [8, 9, 19, 32, 36, 62, 77, 82, 86, 87, 88, 89, 91, 92, 93, 94, 95, 104, 118, 120, 143, 147, 148, 149, 151, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 203, 204, 205, 206, 207, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 231, 232, 233, 235, 251, 252, 267, 289, 301, 302, 303, 304, 305, 306, 307, 308], "x1": 182, "x2": 182, "x_": [187, 190, 289], "x_c": [187, 190], "x_i": 186, "x_k": 187, "xavier": [155, 156, 159, 160], "xavier_norm": 154, "xavier_uniform": 154, "xception": [35, 86], "xiao": 5, "xie": 86, "xy": 289, "x\u2081": 182, "x\u2082": 182, "y": [82, 86, 91, 92, 93, 94, 95, 143, 147, 148, 149, 161, 162, 163, 164, 166, 167, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 203, 204, 205, 206, 207, 208, 231, 232, 233, 235, 251, 252, 289, 304], "y_": [187, 190, 289], "y_c": [187, 190], "y_i": 186, "yann": [6, 86], "yet": [8, 226], "yield": [0, 1, 89, 227], "you": [0, 87, 92, 94, 95, 210, 212, 225, 227, 236, 251, 252, 253, 257, 282, 284, 299, 301, 310], "your": [210, 212, 225, 227, 236, 310], "z": [86, 252, 256, 257], "zalandoresearch": 5, "zeiler": [84, 86], "zero": [15, 17, 18, 30, 87, 97, 100, 106, 107, 108, 111, 112, 113, 114, 115, 134, 135, 136, 138, 139, 140, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 166, 171, 172, 173, 175, 176, 177, 178, 179, 198, 203, 204, 205, 206, 207, 208, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 251, 252, 253, 257, 258, 263, 273, 290], "zero_grad": [90, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 237], "zeros_lik": [252, 258], "zfnet": [35, 86], "zhang": 86, "zhmoginov": 86, "zhu": 86, "zisserman": 86, "\u03c3\u1d62": 17}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "FashionMNIST", "MNIST", "Image Datasets", "Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "alexnet", "DenseNet", "densenet_121", "densenet_169", "densenet_201", "densenet_264", "Inception", "inception_v1", "inception_v3", "inception_v4", "InceptionResNet", "inception_resnet_v1", "inception_resnet_v2", "ConvNets", "LeNet", "lenet_1", "lenet_4", "lenet_5", "MobileNet", "MobileNet_V2", "mobilenet", "mobilenet_v2", "ResNet", "resnet_1001", "resnet_101", "resnet_152", "resnet_18", "resnet_200", "resnet_269", "resnet_34", "resnet_50", "wide_resnet_101", "wide_resnet_50", "ResNeXt", "resnext_101_32x16d", "resnext_101_32x32d", "resnext_101_32x4d", "resnext_101_32x8d", "resnext_101_64x4d", "resnext_50_32x4d", "SENet", "se_resnet_101", "se_resnet_152", "se_resnet_18", "se_resnet_34", "se_resnet_50", "se_resnext_101_32x4d", "se_resnext_101_32x8d", "se_resnext_101_64x4d", "se_resnext_50_32x4d", "SKNet", "sk_resnet_18", "sk_resnet_34", "sk_resnet_50", "sk_resnext_50_32x4d", "VGGNet", "vggnet_11", "vggnet_13", "vggnet_16", "vggnet_19", "Xception", "xception", "ZFNet", "zfnet", "lucid.models", "models.summarize", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "nn.DepthSeparableConv1d", "nn.DepthSeparableConv2d", "nn.DepthSeparableConv3d", "nn.SEModule", "nn.SelectiveKernel", "Fused Layers", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.LeakyReLU", "nn.ReLU", "nn.ReLU6", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Tanh", "Activation Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "lucid.nn", "optim.Optimizer", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.types", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.meshgrid", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.unsqueeze", "lucid.vstack", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": 226, "1d": 226, "2": 226, "2d": 226, "3": 226, "It": [225, 227], "ab": 259, "activ": [99, 117, 170, 181], "ad": 226, "adadelta": 214, "adagrad": 215, "adam": 216, "adamax": 218, "adamw": 217, "adaptive_avg_pool1d": 131, "adaptive_avg_pool2d": 132, "adaptive_avg_pool3d": 133, "adaptiveavgpool1d": 200, "adaptiveavgpool2d": 201, "adaptiveavgpool3d": 202, "add": 238, "addit": 17, "admonit": 229, "advanc": [110, 310], "alexnet": [21, 22], "algebra": 13, "algorithm": [213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "alias": 229, "align": 226, "alpha_dropout": 111, "alphadropout": 175, "also": 212, "anoth": 284, "arang": 249, "arcco": 260, "architectur": [21, 37, 38, 39, 53, 54, 84], "arcsin": 261, "arctan": 262, "asgd": 213, "attent": 151, "attribut": [5, 6, 21, 32, 36, 44, 55, 62, 72, 77, 82, 84, 88, 90, 91, 92, 93, 94, 95, 144, 145, 146, 147, 148, 149, 150, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 237, 301, 302, 303, 304, 305, 306, 307, 308], "avg_pool1d": 134, "avg_pool2d": 135, "avg_pool3d": 136, "avgpool1d": 203, "avgpool2d": 204, "avgpool3d": 205, "axi": 226, "backpropag": 237, "backward": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 118, 120, 142, 150, 160, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 203, 204, 205, 206, 207, 208, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298], "batch_norm": 127, "batchnorm": 152, "batchnorm1d": 192, "batchnorm2d": 193, "batchnorm3d": 194, "bceloss": 186, "behavior": [131, 132, 133, 200, 201, 202], "benefit": 227, "bilinear": [118, 182], "binari": 258, "binary_cross_entropi": 121, "broadcast": 226, "buffer": 88, "calcul": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 44, 55, 62, 72, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 110, 118, 120, 131, 132, 133, 142, 144, 145, 146, 147, 148, 149, 150, 151, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308], "captur": 228, "case": 229, "centercrop": 301, "choleski": 10, "class": [0, 1, 2, 5, 6, 21, 23, 28, 32, 36, 40, 41, 44, 55, 62, 72, 77, 82, 84, 88, 89, 90, 91, 92, 93, 94, 95, 144, 145, 146, 147, 148, 149, 150, 151, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 237, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308], "clip": 263, "co": 264, "combin": 0, "compon": [3, 8, 210], "compos": 299, "concatdataset": [0, 1], "concaten": 285, "conclus": [3, 8, 210, 225, 226, 227, 236, 300, 310], "constant": 153, "contain": 96, "conv": 152, "conv1d": [106, 171], "conv2d": [107, 172], "conv3d": [108, 173], "convbnrelu1d": 144, "convbnrelu2d": 145, "convbnrelu3d": 146, "convnet": [35, 86], "convolut": [109, 117, 152, 174, 181], "core": 8, "cosh": 265, "creat": [90, 237, 284], "cross_entropi": 122, "crossentropyloss": 187, "cube": 266, "custom": [1, 2, 3, 89, 211, 212, 310], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 7], "defin": [2, 89, 211, 212], "definit": 229, "densenet": 23, "densenet_121": 24, "densenet_169": 25, "densenet_201": 26, "densenet_264": 27, "depthseparableconv1d": 147, "depthseparableconv2d": 148, "depthseparableconv3d": 149, "depthwis": 152, "descript": [56, 57, 58, 59, 60, 61, 73, 74, 75, 228], "det": 11, "detail": [17, 53, 54], "diag": 250, "dilat": 110, "div": 239, "dot": 240, "dropout": [112, 116, 117, 176, 180, 181], "dropout1d": [113, 177], "dropout2d": [114, 178], "dropout3d": [115, 179], "eig": 12, "elu": [97, 161], "empti": 251, "empty_lik": 252, "exampl": [0, 1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 118, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310], "excit": 152, "exp": 267, "ey": 253, "fashionmnist": 5, "featur": [4, 8, 9, 68, 69, 70, 71, 76, 212, 236, 310], "flatten": 286, "forward": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 44, 55, 62, 72, 82, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 110, 118, 120, 131, 132, 133, 142, 144, 145, 146, 147, 148, 149, 150, 151, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308], "from": 284, "function": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, 85, 87, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 153, 155, 156, 157, 158, 159, 160, 225, 227, 228, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298], "fuse": 152, "futur": 4, "gelu": [98, 162], "gener": [230, 258], "get": 212, "grad_en": 225, "gradient": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 118, 120, 142, 150, 160, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 203, 204, 205, 206, 207, 208, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 285, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298], "guidelin": 229, "how": [225, 227], "hstack": 287, "huber_loss": 123, "huberloss": 188, "ident": 183, "imag": [7, 309], "incept": 28, "inception_resnet_v1": 33, "inception_resnet_v2": 34, "inception_v1": 29, "inception_v3": 30, "inception_v4": 31, "inceptionresnet": 32, "index": 237, "init": [153, 155, 156, 157, 158, 159, 160], "initi": 154, "inner": 241, "input": 284, "inspect": [212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "instance_norm": 129, "instancenorm1d": 195, "instancenorm2d": 196, "instancenorm3d": 197, "integr": [3, 210, 236, 310], "interpol": 142, "inv": 14, "iter": 237, "kaiming_norm": 155, "kaiming_uniform": 156, "kei": [3, 4, 8, 68, 69, 70, 71, 76, 210, 212, 236, 310], "kernel": 152, "layer": [152, 170, 174, 180, 181, 185, 191, 199, 209], "layer_norm": 130, "layernorm": 198, "leaky_relu": 100, "leakyrelu": 163, "learn": 236, "lenet": 36, "lenet_1": 37, "lenet_4": 38, "lenet_5": 39, "limit": 8, "linalg": [9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20], "linear": [13, 117, 119, 120, 181, 184, 185], "list": 284, "load": 1, "log": 268, "loss": [117, 124, 181, 191], "lucid": [3, 4, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 86, 117, 210, 212, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 310], "matmul": 242, "matrix": 242, "matrix_pow": 15, "max": 269, "max_pool1d": 138, "max_pool2d": 139, "max_pool3d": 140, "maximum": 243, "maxpool1d": 206, "maxpool2d": 207, "maxpool3d": 208, "mean": 270, "mechan": 151, "meshgrid": 289, "metadata": 228, "method": [0, 1, 2, 5, 6, 32, 36, 77, 89, 90, 211, 237], "min": 271, "minimum": 244, "mnist": 6, "mobilenet": [40, 42], "mobilenet_v2": [41, 43], "model": [86, 87, 210], "modul": [89, 181], "moduledict": 91, "modulelist": 92, "more": 236, "mse_loss": 125, "mseloss": 189, "mul": 245, "multipl": [0, 242], "nadam": 219, "new": 226, "newaxi": 226, "nll_loss": 126, "nllloss": 190, "nn": [88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210], "no_grad": 227, "norm": 16, "normal": [117, 128, 157, 181, 199, 302], "note": 8, "number": 230, "ones": 254, "ones_lik": 255, "oper": [13, 242, 258], "optim": [211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224], "organ": 210, "outer": 246, "overview": [3, 4, 8, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 63, 64, 65, 66, 67, 210, 212, 236, 310], "pad": 290, "paramet": [1, 5, 6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 118, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 227, 228, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308], "parameterdict": 93, "parameterlist": 94, "pass": 82, "perform": 237, "pinv": 17, "pipelin": [3, 310], "pitfal": [225, 227], "pool": [117, 137, 181, 209], "potenti": [225, 227], "power": 247, "properti": [90, 237], "qr": 18, "radam": 220, "rais": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20], "rand": 231, "randint": 232, "randn": 233, "random": [230, 231, 232, 233, 234, 235, 236], "randomcrop": 303, "randomgrayscal": 304, "randomhorizontalflip": 305, "randomrot": 306, "randomverticalflip": 307, "ravel": 291, "reciproc": 272, "refer": [5, 6, 150, 212], "register_model": 228, "relu": [101, 152, 164], "relu6": 165, "repeat": 292, "reshap": 293, "resiz": 308, "resnet": 44, "resnet_1001": 45, "resnet_101": 46, "resnet_152": 47, "resnet_18": 48, "resnet_200": 49, "resnet_269": 50, "resnet_34": 51, "resnet_50": 52, "resnext": 55, "resnext_101_32x16d": 56, "resnext_101_32x32d": 57, "resnext_101_32x4d": 58, "resnext_101_32x8d": 59, "resnext_101_64x4d": 60, "resnext_50_32x4d": 61, "return": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 42, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 76, 78, 79, 80, 81, 83, 85, 87, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 118, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 151, 153, 155, 156, 157, 158, 159, 160, 165, 225, 227, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298], "rmsprop": 221, "rotat": 143, "rprop": 222, "rule": 242, "se_resnet_101": 63, "se_resnet_152": 64, "se_resnet_18": 65, "se_resnet_34": 66, "se_resnet_50": 67, "se_resnext_101_32x4d": 68, "se_resnext_101_32x8d": 69, "se_resnext_101_64x4d": 70, "se_resnext_50_32x4d": 71, "see": 212, "seed": 234, "select": 152, "selectivekernel": 151, "selu": [102, 166], "semodul": 150, "senet": 62, "separ": 152, "sequenti": 95, "sgd": 223, "sigmoid": [103, 167], "sign": 273, "signatur": [0, 1, 2, 5, 6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 118, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 227, 228, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308], "sin": 274, "sinh": 275, "sk_resnet_18": 73, "sk_resnet_34": 74, "sk_resnet_50": 75, "sk_resnext_50_32x4d": 76, "sknet": 72, "slice": 237, "softmax": [104, 168], "solv": 19, "sqrt": 276, "squar": 277, "squeez": [152, 294], "stack": 295, "start": 212, "state": [212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223], "sub": 248, "sum": 278, "summar": 87, "summari": 87, "svd": 20, "tabl": 87, "tan": 279, "tanh": [105, 169, 280], "tensor": [226, 237, 258, 284, 288], "through": 237, "tile": 296, "totensor": 300, "trace": 281, "track": 237, "transform": [299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310], "transpos": 282, "type": 229, "unari": 258, "unfold": 110, "uniform": [158, 235], "unsqueez": 297, "us": [1, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 229, 284], "usag": [4, 8, 29, 30, 31, 33, 34, 36, 37, 38, 39, 68, 69, 70, 71, 76, 88, 143, 225, 226, 227, 229, 289, 299, 300, 310], "util": [117, 141], "utilit": 288, "var": 283, "vggnet": 77, "vggnet_11": 78, "vggnet_13": 79, "vggnet_16": 80, "vggnet_19": 81, "vstack": 298, "weight": 154, "why": 229, "wide_resnet_101": 53, "wide_resnet_50": 54, "work": [4, 225, 227], "xavier_norm": 159, "xavier_uniform": 160, "xception": [82, 83], "zero": 256, "zeros_lik": 257, "zfnet": [84, 85]}})