Search.setIndex({"alltitles": {"@ Operator": [[163, "operator"]], "Activation Functions": [[37, null]], "Activation Layers": [[95, null], [106, null]], "Additional Details": [[16, "additional-details"]], "Admonitions and Usage Guidelines": [[150, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[48, "advanced-example-with-dilation"]], "Advanced Features": [[231, "advanced-features"]], "Algorithm": [[135, "algorithm"], [136, "algorithm"], [137, "algorithm"], [138, "algorithm"], [139, "algorithm"], [140, "algorithm"], [141, "algorithm"], [142, "algorithm"], [143, "algorithm"], [144, "algorithm"], [145, "algorithm"]], "Architecture": [[22, "architecture"], [23, "architecture"], [24, "architecture"]], "Attributes": [[5, "attributes"], [21, "attributes"], [26, "attributes"], [28, "attributes"], [29, "attributes"], [30, "attributes"], [31, "attributes"], [32, "attributes"], [33, "attributes"], [87, "attributes"], [88, "attributes"], [89, "attributes"], [90, "attributes"], [91, "attributes"], [92, "attributes"], [93, "attributes"], [94, "attributes"], [96, "attributes"], [97, "attributes"], [98, "attributes"], [100, "attributes"], [101, "attributes"], [102, "attributes"], [103, "attributes"], [104, "attributes"], [107, "attributes"], [108, "attributes"], [109, "attributes"], [111, "attributes"], [112, "attributes"], [113, "attributes"], [114, "attributes"], [115, "attributes"], [117, "attributes"], [118, "attributes"], [119, "attributes"], [120, "attributes"], [121, "attributes"], [122, "attributes"], [123, "attributes"], [125, "attributes"], [126, "attributes"], [127, "attributes"], [128, "attributes"], [129, "attributes"], [130, "attributes"], [158, "attributes"], [222, "attributes"], [223, "attributes"], [224, "attributes"], [225, "attributes"], [226, "attributes"], [227, "attributes"], [228, "attributes"], [229, "attributes"]], "Backward Gradient Calculation": [[9, "backward-gradient-calculation"], [10, "backward-gradient-calculation"], [11, "backward-gradient-calculation"], [13, "backward-gradient-calculation"], [14, "backward-gradient-calculation"], [15, "backward-gradient-calculation"], [16, "backward-gradient-calculation"], [17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [29, "backward-gradient-calculation"], [30, "backward-gradient-calculation"], [31, "backward-gradient-calculation"], [32, "backward-gradient-calculation"], [33, "backward-gradient-calculation"], [35, "backward-gradient-calculation"], [36, "backward-gradient-calculation"], [38, "backward-gradient-calculation"], [39, "backward-gradient-calculation"], [40, "backward-gradient-calculation"], [41, "backward-gradient-calculation"], [42, "backward-gradient-calculation"], [43, "backward-gradient-calculation"], [56, "backward-gradient-calculation"], [58, "backward-gradient-calculation"], [77, "backward-gradient-calculation"], [86, "backward-gradient-calculation"], [87, "backward-gradient-calculation"], [88, "backward-gradient-calculation"], [89, "backward-gradient-calculation"], [90, "backward-gradient-calculation"], [91, "backward-gradient-calculation"], [92, "backward-gradient-calculation"], [93, "backward-gradient-calculation"], [94, "backward-gradient-calculation"], [96, "backward-gradient-calculation"], [97, "backward-gradient-calculation"], [98, "backward-gradient-calculation"], [100, "backward-gradient-calculation"], [101, "backward-gradient-calculation"], [102, "backward-gradient-calculation"], [103, "backward-gradient-calculation"], [104, "backward-gradient-calculation"], [107, "backward-gradient-calculation"], [108, "backward-gradient-calculation"], [109, "backward-gradient-calculation"], [111, "backward-gradient-calculation"], [112, "backward-gradient-calculation"], [113, "backward-gradient-calculation"], [114, "backward-gradient-calculation"], [115, "backward-gradient-calculation"], [117, "backward-gradient-calculation"], [118, "backward-gradient-calculation"], [119, "backward-gradient-calculation"], [120, "backward-gradient-calculation"], [121, "backward-gradient-calculation"], [122, "backward-gradient-calculation"], [123, "backward-gradient-calculation"], [125, "backward-gradient-calculation"], [126, "backward-gradient-calculation"], [127, "backward-gradient-calculation"], [128, "backward-gradient-calculation"], [129, "backward-gradient-calculation"], [130, "backward-gradient-calculation"], [159, "backward-gradient-calculation"], [160, "backward-gradient-calculation"], [161, "backward-gradient-calculation"], [162, "backward-gradient-calculation"], [163, "backward-gradient-calculation"], [164, "backward-gradient-calculation"], [165, "backward-gradient-calculation"], [166, "backward-gradient-calculation"], [167, "backward-gradient-calculation"], [168, "backward-gradient-calculation"], [169, "backward-gradient-calculation"], [180, "backward-gradient-calculation"], [181, "backward-gradient-calculation"], [182, "backward-gradient-calculation"], [183, "backward-gradient-calculation"], [184, "backward-gradient-calculation"], [185, "backward-gradient-calculation"], [186, "backward-gradient-calculation"], [187, "backward-gradient-calculation"], [188, "backward-gradient-calculation"], [189, "backward-gradient-calculation"], [190, "backward-gradient-calculation"], [191, "backward-gradient-calculation"], [192, "backward-gradient-calculation"], [193, "backward-gradient-calculation"], [194, "backward-gradient-calculation"], [195, "backward-gradient-calculation"], [196, "backward-gradient-calculation"], [197, "backward-gradient-calculation"], [198, "backward-gradient-calculation"], [199, "backward-gradient-calculation"], [200, "backward-gradient-calculation"], [201, "backward-gradient-calculation"], [202, "backward-gradient-calculation"], [203, "backward-gradient-calculation"], [204, "backward-gradient-calculation"], [206, "backward-gradient-calculation"], [208, "backward-gradient-calculation"], [210, "backward-gradient-calculation"], [211, "backward-gradient-calculation"], [212, "backward-gradient-calculation"], [213, "backward-gradient-calculation"], [214, "backward-gradient-calculation"], [215, "backward-gradient-calculation"], [216, "backward-gradient-calculation"], [217, "backward-gradient-calculation"], [218, "backward-gradient-calculation"], [219, "backward-gradient-calculation"]], "Benefits": [[149, "benefits"]], "Binary Functions": [[179, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [21, "class-signature"], [26, "class-signature"], [27, "class-signature"], [28, "class-signature"], [29, "class-signature"], [30, "class-signature"], [31, "class-signature"], [32, "class-signature"], [33, "class-signature"], [87, "class-signature"], [88, "class-signature"], [89, "class-signature"], [90, "class-signature"], [91, "class-signature"], [92, "class-signature"], [93, "class-signature"], [94, "class-signature"], [96, "class-signature"], [97, "class-signature"], [98, "class-signature"], [100, "class-signature"], [101, "class-signature"], [102, "class-signature"], [103, "class-signature"], [104, "class-signature"], [107, "class-signature"], [108, "class-signature"], [109, "class-signature"], [111, "class-signature"], [112, "class-signature"], [113, "class-signature"], [114, "class-signature"], [115, "class-signature"], [117, "class-signature"], [118, "class-signature"], [119, "class-signature"], [120, "class-signature"], [121, "class-signature"], [122, "class-signature"], [123, "class-signature"], [125, "class-signature"], [126, "class-signature"], [127, "class-signature"], [128, "class-signature"], [129, "class-signature"], [130, "class-signature"], [133, "class-signature"], [135, "class-signature"], [136, "class-signature"], [137, "class-signature"], [138, "class-signature"], [139, "class-signature"], [140, "class-signature"], [141, "class-signature"], [142, "class-signature"], [143, "class-signature"], [144, "class-signature"], [145, "class-signature"], [158, "class-signature"], [220, "class-signature"], [221, "class-signature"], [222, "class-signature"], [223, "class-signature"], [224, "class-signature"], [225, "class-signature"], [226, "class-signature"], [227, "class-signature"], [228, "class-signature"], [229, "class-signature"]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [7, "conclusion"], [132, "conclusion"], [147, "conclusion"], [148, "conclusion"], [149, "conclusion"], [157, "conclusion"], [221, "conclusion"], [231, "conclusion"]], "Containers": [[34, null]], "ConvNets": [[20, null], [25, "convnets"]], "Convolution Functions": [[47, null], [55, null]], "Convolution Layers": [[99, null], [106, null]], "Core Components": [[7, "core-components"]], "Create a Tensor from a list": [[205, null]], "Creating a Parameter": [[28, null]], "Creating a tensor with gradient tracking": [[158, null]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[231, "custom-pipelines"]], "Defining a Custom Optimizer": [[134, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[27, null]], "Defining a custom optimizer": [[133, null]], "Dropout Functions": [[54, null], [55, null]], "Dropout Layers": [[105, null], [106, null]], "Example": [[3, null], [3, null], [3, null], [9, "example"], [10, "example"], [11, "example"], [13, "example"], [14, "example"], [15, "example"], [16, "example"], [17, "example"], [18, "example"], [19, "example"], [48, "example"], [132, null], [132, null], [132, null], [147, "example"], [149, "example"], [152, "example"], [153, "example"], [154, "example"], [155, "example"], [156, "example"], [157, null], [157, null], [157, null], [170, "example"], [171, "example"], [172, "example"], [173, "example"], [174, "example"], [175, "example"], [176, "example"], [177, "example"], [178, "example"], [180, "example"], [181, "example"], [182, "example"], [183, "example"], [184, "example"], [185, "example"], [186, "example"], [187, "example"], [189, "example"], [191, "example"], [193, "example"], [194, "example"], [195, "example"], [196, "example"], [197, "example"], [198, "example"], [199, "example"], [200, "example"], [201, "example"], [202, "example"], [203, "example"], [204, "example"], [206, "example"], [208, "example"], [212, "example"], [214, "example"], [215, "example"], [216, "example"], [218, "example"], [219, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[148, null]], "Example 2: Adding a new axis to a 2D tensor": [[148, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[148, null]], "Example Usage": [[7, "example-usage"], [21, "example-usage"], [22, "example-usage"], [23, "example-usage"], [24, "example-usage"], [78, "example-usage"], [220, "example-usage"], [221, "example-usage"], [231, "example-usage"]], "Example Use Cases": [[150, "example-use-cases"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [8, "examples"], [26, "examples"], [27, "examples"], [28, "examples"], [29, "examples"], [30, "examples"], [31, "examples"], [32, "examples"], [33, "examples"], [35, "examples"], [36, "examples"], [38, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [49, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [53, "examples"], [56, "examples"], [58, "examples"], [59, "examples"], [60, "examples"], [61, "examples"], [63, "examples"], [64, "examples"], [65, "examples"], [67, "examples"], [68, "examples"], [69, "examples"], [70, "examples"], [71, "examples"], [73, "examples"], [74, "examples"], [75, "examples"], [77, "examples"], [79, "examples"], [81, "examples"], [82, "examples"], [83, "examples"], [84, "examples"], [85, "examples"], [86, "examples"], [87, "examples"], [88, "examples"], [89, "examples"], [90, "examples"], [91, "examples"], [92, "examples"], [93, "examples"], [94, "examples"], [96, "examples"], [97, "examples"], [98, "examples"], [100, "examples"], [101, "examples"], [102, "examples"], [103, "examples"], [104, "examples"], [107, "examples"], [108, "examples"], [109, "examples"], [111, "examples"], [112, "examples"], [113, "examples"], [114, "examples"], [115, "examples"], [117, "examples"], [118, "examples"], [119, "examples"], [120, "examples"], [121, "examples"], [122, "examples"], [123, "examples"], [125, "examples"], [126, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [130, "examples"], [133, "examples"], [134, "examples"], [135, "examples"], [136, "examples"], [137, "examples"], [138, "examples"], [139, "examples"], [140, "examples"], [141, "examples"], [142, "examples"], [143, "examples"], [144, "examples"], [145, "examples"], [158, "examples"], [159, "examples"], [160, "examples"], [161, "examples"], [162, "examples"], [164, "examples"], [165, "examples"], [166, "examples"], [167, "examples"], [168, "examples"], [169, "examples"], [188, "examples"], [190, "examples"], [192, "examples"], [205, "examples"], [207, "examples"], [210, "examples"], [211, "examples"], [213, "examples"], [217, "examples"], [222, "examples"], [223, "examples"], [224, "examples"], [225, "examples"], [226, "examples"], [227, "examples"], [228, "examples"], [229, "examples"]], "Features": [[8, "features"]], "Forward Calculation": [[9, "forward-calculation"], [10, "forward-calculation"], [11, "forward-calculation"], [13, "forward-calculation"], [14, "forward-calculation"], [15, "forward-calculation"], [16, "forward-calculation"], [17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [29, "forward-calculation"], [30, "forward-calculation"], [31, "forward-calculation"], [32, "forward-calculation"], [33, "forward-calculation"], [35, "forward-calculation"], [36, "forward-calculation"], [38, "forward-calculation"], [39, "forward-calculation"], [40, "forward-calculation"], [41, "forward-calculation"], [42, "forward-calculation"], [43, "forward-calculation"], [48, "forward-calculation"], [56, "forward-calculation"], [58, "forward-calculation"], [77, "forward-calculation"], [81, "forward-calculation"], [82, "forward-calculation"], [85, "forward-calculation"], [86, "forward-calculation"], [87, "forward-calculation"], [88, "forward-calculation"], [89, "forward-calculation"], [90, "forward-calculation"], [91, "forward-calculation"], [92, "forward-calculation"], [93, "forward-calculation"], [94, "forward-calculation"], [96, "forward-calculation"], [97, "forward-calculation"], [98, "forward-calculation"], [100, "forward-calculation"], [101, "forward-calculation"], [102, "forward-calculation"], [103, "forward-calculation"], [104, "forward-calculation"], [107, "forward-calculation"], [108, "forward-calculation"], [109, "forward-calculation"], [111, "forward-calculation"], [112, "forward-calculation"], [113, "forward-calculation"], [114, "forward-calculation"], [115, "forward-calculation"], [117, "forward-calculation"], [118, "forward-calculation"], [119, "forward-calculation"], [120, "forward-calculation"], [121, "forward-calculation"], [122, "forward-calculation"], [123, "forward-calculation"], [125, "forward-calculation"], [126, "forward-calculation"], [127, "forward-calculation"], [128, "forward-calculation"], [129, "forward-calculation"], [130, "forward-calculation"], [159, "forward-calculation"], [160, "forward-calculation"], [161, "forward-calculation"], [162, "forward-calculation"], [163, "forward-calculation"], [164, "forward-calculation"], [165, "forward-calculation"], [166, "forward-calculation"], [167, "forward-calculation"], [168, "forward-calculation"], [169, "forward-calculation"], [180, "forward-calculation"], [181, "forward-calculation"], [182, "forward-calculation"], [183, "forward-calculation"], [184, "forward-calculation"], [185, "forward-calculation"], [186, "forward-calculation"], [187, "forward-calculation"], [188, "forward-calculation"], [189, "forward-calculation"], [190, "forward-calculation"], [191, "forward-calculation"], [192, "forward-calculation"], [193, "forward-calculation"], [194, "forward-calculation"], [195, "forward-calculation"], [196, "forward-calculation"], [197, "forward-calculation"], [198, "forward-calculation"], [199, "forward-calculation"], [200, "forward-calculation"], [201, "forward-calculation"], [202, "forward-calculation"], [203, "forward-calculation"], [204, "forward-calculation"], [206, "forward-calculation"], [208, "forward-calculation"], [210, "forward-calculation"], [211, "forward-calculation"], [212, "forward-calculation"], [213, "forward-calculation"], [214, "forward-calculation"], [215, "forward-calculation"], [216, "forward-calculation"], [217, "forward-calculation"], [218, "forward-calculation"], [219, "forward-calculation"], [222, "forward-calculation"], [223, "forward-calculation"], [224, "forward-calculation"], [225, "forward-calculation"], [226, "forward-calculation"], [227, "forward-calculation"], [228, "forward-calculation"], [229, "forward-calculation"]], "Function Signature": [[9, "function-signature"], [10, "function-signature"], [11, "function-signature"], [13, "function-signature"], [14, "function-signature"], [15, "function-signature"], [16, "function-signature"], [17, "function-signature"], [18, "function-signature"], [19, "function-signature"], [22, "function-signature"], [23, "function-signature"], [24, "function-signature"], [35, "function-signature"], [36, "function-signature"], [38, "function-signature"], [39, "function-signature"], [40, "function-signature"], [41, "function-signature"], [42, "function-signature"], [43, "function-signature"], [44, "function-signature"], [45, "function-signature"], [46, "function-signature"], [48, "function-signature"], [49, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [53, "function-signature"], [56, "function-signature"], [58, "function-signature"], [59, "function-signature"], [60, "function-signature"], [61, "function-signature"], [63, "function-signature"], [64, "function-signature"], [65, "function-signature"], [67, "function-signature"], [68, "function-signature"], [69, "function-signature"], [70, "function-signature"], [71, "function-signature"], [73, "function-signature"], [74, "function-signature"], [75, "function-signature"], [77, "function-signature"], [78, "function-signature"], [79, "function-signature"], [81, "function-signature"], [82, "function-signature"], [83, "function-signature"], [84, "function-signature"], [85, "function-signature"], [86, "function-signature"], [147, "function-signature"], [149, "function-signature"], [152, "function-signature"], [153, "function-signature"], [154, "function-signature"], [155, "function-signature"], [156, "function-signature"], [159, "function-signature"], [160, "function-signature"], [161, "function-signature"], [162, "function-signature"], [163, "function-signature"], [164, "function-signature"], [165, "function-signature"], [166, "function-signature"], [167, "function-signature"], [168, "function-signature"], [169, "function-signature"], [170, "function-signature"], [171, "function-signature"], [172, "function-signature"], [173, "function-signature"], [174, "function-signature"], [175, "function-signature"], [176, "function-signature"], [177, "function-signature"], [178, "function-signature"], [180, "function-signature"], [181, "function-signature"], [182, "function-signature"], [183, "function-signature"], [184, "function-signature"], [185, "function-signature"], [186, "function-signature"], [187, "function-signature"], [188, "function-signature"], [189, "function-signature"], [190, "function-signature"], [191, "function-signature"], [192, "function-signature"], [193, "function-signature"], [194, "function-signature"], [195, "function-signature"], [196, "function-signature"], [197, "function-signature"], [198, "function-signature"], [199, "function-signature"], [200, "function-signature"], [201, "function-signature"], [202, "function-signature"], [203, "function-signature"], [204, "function-signature"], [205, "function-signature"], [206, "function-signature"], [207, "function-signature"], [208, "function-signature"], [210, "function-signature"], [211, "function-signature"], [212, "function-signature"], [213, "function-signature"], [214, "function-signature"], [215, "function-signature"], [216, "function-signature"], [217, "function-signature"], [218, "function-signature"], [219, "function-signature"]], "Future Work": [[4, "future-work"]], "Getting Started": [[134, "getting-started"]], "How It Works": [[147, "how-it-works"], [149, "how-it-works"]], "Image Datasets": [[6, null]], "Image Transformations": [[230, null]], "Indexing and slicing": [[158, null]], "Inspecting Optimizer State": [[134, null], [135, null], [136, null], [137, null], [138, null], [139, null], [140, null], [141, null], [142, null], [143, null], [144, null], [145, null]], "Integration with lucid": [[3, "integration-with-lucid"], [132, "integration-with-lucid"], [157, "integration-with-lucid"], [231, "integration-with-lucid"]], "Iterating through a tensor": [[158, null]], "Key Components": [[3, "key-components"], [132, "key-components"]], "Key Features": [[4, "key-features"], [7, "key-features"], [134, "key-features"], [157, "key-features"]], "Key Transformations": [[231, "key-transformations"]], "LeNet": [[21, null]], "Learn More": [[157, null]], "Limitations": [[7, "limitations"]], "Linear Algebra Operations": [[12, null]], "Linear Functions": [[55, null], [57, null]], "Linear Layers": [[106, null], [110, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[55, null], [62, null]], "Loss Layers": [[106, null], [116, null]], "Lucid": [[7, null]], "Matrix Multiplication Rules": [[163, "matrix-multiplication-rules"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [21, "methods"], [27, "methods"], [28, "methods"], [133, "methods"], [158, "methods"]], "Modules": [[106, null]], "Normalization Functions": [[55, null], [66, null]], "Normalization Layers": [[106, null], [124, null]], "Notes": [[7, "notes"]], "Optimizers": [[146, null]], "Organizing Models": [[132, "organizing-models"]], "Overview": [[3, "overview"], [4, "overview"], [7, "overview"], [21, "overview"], [22, "overview"], [23, "overview"], [24, "overview"], [132, "overview"], [134, "overview"], [157, "overview"], [231, "overview"]], "Parameters": [[1, "parameters"], [5, "parameters"], [9, "parameters"], [10, "parameters"], [11, "parameters"], [13, "parameters"], [14, "parameters"], [15, "parameters"], [16, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [21, "parameters"], [26, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [35, "parameters"], [36, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [56, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [71, "parameters"], [73, "parameters"], [74, "parameters"], [75, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [87, "parameters"], [88, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [104, "parameters"], [107, "parameters"], [108, "parameters"], [109, "parameters"], [111, "parameters"], [112, "parameters"], [113, "parameters"], [114, "parameters"], [115, "parameters"], [117, "parameters"], [118, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [122, "parameters"], [123, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [135, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [149, "parameters"], [152, "parameters"], [153, "parameters"], [154, "parameters"], [155, "parameters"], [156, "parameters"], [158, "parameters"], [159, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [163, "parameters"], [164, "parameters"], [165, "parameters"], [166, "parameters"], [167, "parameters"], [168, "parameters"], [169, "parameters"], [170, "parameters"], [171, "parameters"], [172, "parameters"], [173, "parameters"], [174, "parameters"], [175, "parameters"], [176, "parameters"], [177, "parameters"], [178, "parameters"], [180, "parameters"], [181, "parameters"], [182, "parameters"], [183, "parameters"], [184, "parameters"], [185, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [189, "parameters"], [190, "parameters"], [191, "parameters"], [192, "parameters"], [193, "parameters"], [194, "parameters"], [195, "parameters"], [196, "parameters"], [197, "parameters"], [198, "parameters"], [199, "parameters"], [200, "parameters"], [201, "parameters"], [202, "parameters"], [203, "parameters"], [204, "parameters"], [205, "parameters"], [206, "parameters"], [207, "parameters"], [208, "parameters"], [210, "parameters"], [211, "parameters"], [212, "parameters"], [213, "parameters"], [214, "parameters"], [215, "parameters"], [216, "parameters"], [217, "parameters"], [218, "parameters"], [219, "parameters"], [220, "parameters"], [221, "parameters"], [222, "parameters"], [223, "parameters"], [224, "parameters"], [225, "parameters"], [226, "parameters"], [227, "parameters"], [228, "parameters"], [229, "parameters"]], "Performing backpropagation": [[158, null]], "Pooling Functions": [[55, null], [72, null]], "Pooling Layers": [[106, null], [131, null]], "Potential Pitfalls": [[147, "potential-pitfalls"], [149, "potential-pitfalls"]], "Properties": [[28, "properties"], [158, "properties"]], "Raises": [[9, "raises"], [10, "raises"], [11, "raises"], [13, "raises"], [14, "raises"], [15, "raises"], [16, "raises"], [17, "raises"], [18, "raises"], [19, "raises"]], "Random Number Generations": [[151, null]], "References": [[5, "references"], [134, "references"]], "Returns": [[9, "returns"], [10, "returns"], [11, "returns"], [13, "returns"], [14, "returns"], [15, "returns"], [16, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [22, "returns"], [23, "returns"], [24, "returns"], [35, "returns"], [36, "returns"], [38, "returns"], [39, "returns"], [40, "returns"], [41, "returns"], [42, "returns"], [43, "returns"], [44, "returns"], [45, "returns"], [46, "returns"], [48, "returns"], [49, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [53, "returns"], [56, "returns"], [58, "returns"], [59, "returns"], [60, "returns"], [61, "returns"], [63, "returns"], [64, "returns"], [65, "returns"], [67, "returns"], [68, "returns"], [69, "returns"], [70, "returns"], [71, "returns"], [73, "returns"], [74, "returns"], [75, "returns"], [77, "returns"], [78, "returns"], [79, "returns"], [81, "returns"], [82, "returns"], [83, "returns"], [84, "returns"], [85, "returns"], [86, "returns"], [147, "returns"], [149, "returns"], [152, "returns"], [153, "returns"], [154, "returns"], [155, "returns"], [156, "returns"], [159, "returns"], [160, "returns"], [161, "returns"], [162, "returns"], [163, "returns"], [164, "returns"], [165, "returns"], [166, "returns"], [167, "returns"], [168, "returns"], [169, "returns"], [170, "returns"], [171, "returns"], [172, "returns"], [173, "returns"], [174, "returns"], [175, "returns"], [176, "returns"], [177, "returns"], [178, "returns"], [180, "returns"], [181, "returns"], [182, "returns"], [183, "returns"], [184, "returns"], [185, "returns"], [186, "returns"], [187, "returns"], [188, "returns"], [189, "returns"], [190, "returns"], [191, "returns"], [192, "returns"], [193, "returns"], [194, "returns"], [195, "returns"], [196, "returns"], [197, "returns"], [198, "returns"], [199, "returns"], [200, "returns"], [201, "returns"], [202, "returns"], [203, "returns"], [204, "returns"], [205, "returns"], [206, "returns"], [207, "returns"], [208, "returns"], [210, "returns"], [211, "returns"], [212, "returns"], [213, "returns"], [214, "returns"], [215, "returns"], [216, "returns"], [217, "returns"], [218, "returns"], [219, "returns"]], "See Also": [[134, "see-also"]], "Tensor Generating Functions": [[179, null]], "Tensor Operations": [[179, null]], "Tensor Utilites": [[209, null]], "Type Definitions": [[150, "type-definitions"]], "Unary Functions": [[179, null]], "Usage": [[4, "usage"], [26, "usage"], [78, "usage"], [147, "usage"], [148, "usage"], [149, "usage"], [210, "usage"], [220, "usage"], [221, "usage"], [231, "usage"]], "Use another Tensor as input": [[205, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using the ASGD Optimizer": [[135, null]], "Using the Adadelta Optimizer": [[136, null]], "Using the Adagrad Optimizer": [[137, null]], "Using the Adam Optimizer": [[138, null]], "Using the AdamW Optimizer": [[139, null]], "Using the Adamax Optimizer": [[140, null]], "Using the NAdam Optimizer": [[141, null]], "Using the RAdam Optimizer": [[142, null]], "Using the RMSprop Optimizer": [[143, null]], "Using the Rprop Optimizer": [[144, null]], "Using the SGD Optimizer": [[145, null]], "Utility Functions": [[55, null], [76, null]], "Weight Initializations": [[80, null]], "Why Use Type Aliases?": [[150, null]], "activation Functions": [[55, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "datasets.MNIST": [[5, null]], "lucid.Tensor": [[158, null]], "lucid.abs": [[180, null]], "lucid.add": [[159, null]], "lucid.arange": [[170, null]], "lucid.arccos": [[181, null]], "lucid.arcsin": [[182, null]], "lucid.arctan": [[183, null]], "lucid.clip": [[184, null]], "lucid.concatenate": [[206, null]], "lucid.cos": [[185, null]], "lucid.cosh": [[186, null]], "lucid.cube": [[187, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[171, null]], "lucid.div": [[160, null]], "lucid.dot": [[161, null]], "lucid.empty": [[172, null]], "lucid.empty_like": [[173, null]], "lucid.exp": [[188, null]], "lucid.eye": [[174, null]], "lucid.flatten": [[207, null]], "lucid.grad_enabled": [[147, null]], "lucid.hstack": [[208, null]], "lucid.inner": [[162, null]], "lucid.linalg": [[8, null]], "lucid.linalg.cholesky": [[9, null]], "lucid.linalg.det": [[10, null]], "lucid.linalg.eig": [[11, null]], "lucid.linalg.inv": [[13, null]], "lucid.linalg.matrix_power": [[14, null]], "lucid.linalg.norm": [[15, null]], "lucid.linalg.pinv": [[16, null]], "lucid.linalg.qr": [[17, null]], "lucid.linalg.solve": [[18, null]], "lucid.linalg.svd": [[19, null]], "lucid.log": [[189, null]], "lucid.matmul": [[163, null]], "lucid.max": [[190, null]], "lucid.maximum": [[164, null]], "lucid.mean": [[191, null]], "lucid.meshgrid": [[210, null]], "lucid.min": [[192, null]], "lucid.minimum": [[165, null]], "lucid.models": [[25, null]], "lucid.mul": [[166, null]], "lucid.newaxis": [[148, null]], "lucid.nn": [[132, null]], "lucid.nn.functional": [[55, null]], "lucid.no_grad": [[149, null]], "lucid.ones": [[175, null]], "lucid.ones_like": [[176, null]], "lucid.optim": [[134, null]], "lucid.outer": [[167, null]], "lucid.pad": [[211, null]], "lucid.power": [[168, null]], "lucid.random": [[157, null]], "lucid.random.rand": [[152, null]], "lucid.random.randint": [[153, null]], "lucid.random.randn": [[154, null]], "lucid.random.seed": [[155, null]], "lucid.random.uniform": [[156, null]], "lucid.ravel": [[212, null]], "lucid.reciprocal": [[193, null]], "lucid.repeat": [[213, null]], "lucid.reshape": [[214, null]], "lucid.sign": [[194, null]], "lucid.sin": [[195, null]], "lucid.sinh": [[196, null]], "lucid.sqrt": [[197, null]], "lucid.square": [[198, null]], "lucid.squeeze": [[215, null]], "lucid.stack": [[216, null]], "lucid.sub": [[169, null]], "lucid.sum": [[199, null]], "lucid.tan": [[200, null]], "lucid.tanh": [[201, null]], "lucid.tensor": [[205, null]], "lucid.tile": [[217, null]], "lucid.trace": [[202, null]], "lucid.transforms": [[231, null]], "lucid.transpose": [[203, null]], "lucid.types": [[150, null]], "lucid.unsqueeze": [[218, null]], "lucid.var": [[204, null]], "lucid.vstack": [[219, null]], "lucid.zeros": [[177, null]], "lucid.zeros_like": [[178, null]], "models.lenet_1": [[22, null]], "models.lenet_4": [[23, null]], "models.lenet_5": [[24, null]], "nn.AlphaDropout": [[100, null]], "nn.AvgPool1d": [[125, null]], "nn.AvgPool2d": [[126, null]], "nn.AvgPool3d": [[127, null]], "nn.BCELoss": [[111, null]], "nn.BatchNorm1d": [[117, null]], "nn.BatchNorm2d": [[118, null]], "nn.BatchNorm3d": [[119, null]], "nn.Bilinear": [[107, null]], "nn.Buffer": [[26, null]], "nn.Conv1d": [[96, null]], "nn.Conv2d": [[97, null]], "nn.Conv3d": [[98, null]], "nn.CrossEntropyLoss": [[112, null]], "nn.Dropout": [[101, null]], "nn.Dropout1d": [[102, null]], "nn.Dropout2d": [[103, null]], "nn.Dropout3d": [[104, null]], "nn.ELU": [[87, null]], "nn.GELU": [[88, null]], "nn.HuberLoss": [[113, null]], "nn.Identity": [[108, null]], "nn.InstanceNorm1d": [[120, null]], "nn.InstanceNorm2d": [[121, null]], "nn.InstanceNorm3d": [[122, null]], "nn.LayerNorm": [[123, null]], "nn.LeakyReLU": [[89, null]], "nn.Linear": [[109, null]], "nn.MSELoss": [[114, null]], "nn.MaxPool1d": [[128, null]], "nn.MaxPool2d": [[129, null]], "nn.MaxPool3d": [[130, null]], "nn.Module": [[27, null]], "nn.ModuleDict": [[29, null]], "nn.ModuleList": [[30, null]], "nn.NLLLoss": [[115, null]], "nn.Parameter": [[28, null]], "nn.ParameterDict": [[31, null]], "nn.ParameterList": [[32, null]], "nn.ReLU": [[90, null]], "nn.SELU": [[91, null]], "nn.Sequential": [[33, null]], "nn.Sigmoid": [[92, null]], "nn.Softmax": [[93, null]], "nn.Tanh": [[94, null]], "nn.functional.alpha_dropout": [[49, null]], "nn.functional.avg_pool1d": [[69, null]], "nn.functional.avg_pool2d": [[70, null]], "nn.functional.avg_pool3d": [[71, null]], "nn.functional.batch_norm": [[65, null]], "nn.functional.bilinear": [[56, null]], "nn.functional.binary_cross_entropy": [[59, null]], "nn.functional.conv1d": [[44, null]], "nn.functional.conv2d": [[45, null]], "nn.functional.conv3d": [[46, null]], "nn.functional.cross_entropy": [[60, null]], "nn.functional.dropout": [[50, null]], "nn.functional.dropout1d": [[51, null]], "nn.functional.dropout2d": [[52, null]], "nn.functional.dropout3d": [[53, null]], "nn.functional.elu": [[35, null]], "nn.functional.gelu": [[36, null]], "nn.functional.huber_loss": [[61, null]], "nn.functional.instance_norm": [[67, null]], "nn.functional.interpolate": [[77, null]], "nn.functional.layer_norm": [[68, null]], "nn.functional.leaky_relu": [[38, null]], "nn.functional.linear": [[58, null]], "nn.functional.max_pool1d": [[73, null]], "nn.functional.max_pool2d": [[74, null]], "nn.functional.max_pool3d": [[75, null]], "nn.functional.mse_loss": [[63, null]], "nn.functional.nll_loss": [[64, null]], "nn.functional.relu": [[39, null]], "nn.functional.rotate": [[78, null]], "nn.functional.selu": [[40, null]], "nn.functional.sigmoid": [[41, null]], "nn.functional.softmax": [[42, null]], "nn.functional.tanh": [[43, null]], "nn.functional.unfold": [[48, null]], "nn.init.constant": [[79, null]], "nn.init.kaiming_normal": [[81, null]], "nn.init.kaiming_uniform": [[82, null]], "nn.init.normal": [[83, null]], "nn.init.uniform": [[84, null]], "nn.init.xavier_normal": [[85, null]], "nn.init.xavier_uniform": [[86, null]], "optim.ASGD": [[135, null]], "optim.Adadelta": [[136, null]], "optim.Adagrad": [[137, null]], "optim.Adam": [[138, null]], "optim.AdamW": [[139, null]], "optim.Adamax": [[140, null]], "optim.NAdam": [[141, null]], "optim.Optimizer": [[133, null]], "optim.RAdam": [[142, null]], "optim.RMSprop": [[143, null]], "optim.Rprop": [[144, null]], "optim.SGD": [[145, null]], "transforms.CenterCrop": [[222, null]], "transforms.Compose": [[220, null]], "transforms.Normalize": [[223, null]], "transforms.RandomCrop": [[224, null]], "transforms.RandomGrayscale": [[225, null]], "transforms.RandomHorizontalFlip": [[226, null]], "transforms.RandomRotation": [[227, null]], "transforms.RandomVerticalFlip": [[228, null]], "transforms.Resize": [[229, null]], "transforms.ToTensor": [[221, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/MNIST", "datasets/image/index", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/convnets/index", "models/convnets/lenet/LeNet", "models/convnets/lenet/lenet_1", "models/convnets/lenet/lenet_4", "models/convnets/lenet/lenet_5", "models/models", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/nn", "optim/Optimizer", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/types", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/meshgrid", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/convnets/index.rst", "models/convnets/lenet/LeNet.rst", "models/convnets/lenet/lenet_1.rst", "models/convnets/lenet/lenet_4.rst", "models/convnets/lenet/lenet_5.rst", "models/models.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/types.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"abs() (in module lucid)": [[180, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[136, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[137, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[138, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[140, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[139, "lucid.optim.AdamW", false]], "add() (in module lucid)": [[159, "lucid.add", false]], "alpha_dropout() (in module lucid.nn.functional)": [[49, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[100, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[170, "lucid.arange", false]], "arccos() (in module lucid)": [[181, "lucid.arccos", false]], "arcsin() (in module lucid)": [[182, "lucid.arcsin", false]], "arctan() (in module lucid)": [[183, "lucid.arctan", false]], "asgd (class in lucid.optim)": [[135, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[69, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[70, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[71, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[125, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[126, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[127, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[65, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[117, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[118, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[119, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[111, "lucid.nn.BCELoss", false]], "bilinear (class in lucid.nn)": [[107, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[56, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[59, "lucid.nn.functional.binary_cross_entropy", false]], "buffer (class in lucid.nn)": [[26, "lucid.nn.Buffer", false]], "centercrop (class in lucid.transforms)": [[222, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[9, "lucid.linalg.cholesky", false]], "clip() (in module lucid)": [[184, "lucid.clip", false]], "compose (class in lucid.transforms)": [[220, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[206, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[79, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[96, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[44, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[97, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[45, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[98, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[46, "lucid.nn.functional.conv3d", false]], "cos() (in module lucid)": [[185, "lucid.cos", false]], "cosh() (in module lucid)": [[186, "lucid.cosh", false]], "cross_entropy() (in module lucid.nn.functional)": [[60, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[112, "lucid.nn.CrossEntropyLoss", false]], "cube() (in module lucid)": [[187, "lucid.cube", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "det() (in module lucid.linalg)": [[10, "lucid.linalg.det", false]], "diag() (in module lucid)": [[171, "lucid.diag", false]], "div() (in module lucid)": [[160, "lucid.div", false]], "dot() (in module lucid)": [[161, "lucid.dot", false]], "dropout (class in lucid.nn)": [[101, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[50, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[102, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[51, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[103, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[52, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[104, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[53, "lucid.nn.functional.dropout3d", false]], "eig() (in module lucid.linalg)": [[11, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[87, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[35, "lucid.nn.functional.elu", false]], "empty() (in module lucid)": [[172, "lucid.empty", false]], "empty_like() (in module lucid)": [[173, "lucid.empty_like", false]], "exp() (in module lucid)": [[188, "lucid.exp", false]], "eye() (in module lucid)": [[174, "lucid.eye", false]], "flatten() (in module lucid)": [[207, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[88, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[36, "lucid.nn.functional.gelu", false]], "grad_enabled() (in module lucid)": [[147, "lucid.grad_enabled", false]], "hstack() (in module lucid)": [[208, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[61, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[113, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[108, "lucid.nn.Identity", false]], "inner() (in module lucid)": [[162, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[67, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[120, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[121, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[122, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[77, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[13, "lucid.linalg.inv", false]], "kaiming_normal() (in module lucid.nn.init)": [[81, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[82, "lucid.nn.init.kaiming_uniform", false]], "layer_norm() (in module lucid.nn.functional)": [[68, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[123, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[38, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[89, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[21, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[22, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[23, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[24, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[109, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[58, "lucid.nn.functional.linear", false]], "log() (in module lucid)": [[189, "lucid.log", false]], "lucid": [[7, "module-lucid", false]], "matmul() (in module lucid)": [[163, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[14, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[190, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[73, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[74, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[75, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[164, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[128, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[129, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[130, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[191, "lucid.mean", false]], "meshgrid() (in module lucid)": [[210, "lucid.meshgrid", false]], "min() (in module lucid)": [[192, "lucid.min", false]], "minimum() (in module lucid)": [[165, "lucid.minimum", false]], "mnist (class in lucid.datasets)": [[5, "lucid.datasets.MNIST", false]], "module": [[7, "module-lucid", false]], "module (class in lucid.nn)": [[27, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[29, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[30, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[63, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[114, "lucid.nn.MSELoss", false]], "mul() (in module lucid)": [[166, "lucid.mul", false]], "nadam (class in lucid.optim)": [[141, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[64, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[115, "lucid.nn.NLLLoss", false]], "no_grad() (in module lucid)": [[149, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[15, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[83, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[223, "lucid.transforms.Normalize", false]], "ones() (in module lucid)": [[175, "lucid.ones", false]], "ones_like() (in module lucid)": [[176, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[133, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[167, "lucid.outer", false]], "pad() (in module lucid)": [[211, "lucid.pad", false]], "parameter (class in lucid.nn)": [[28, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[31, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[32, "lucid.nn.ParameterList", false]], "pinv() (in module lucid.linalg)": [[16, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[168, "lucid.power", false]], "qr() (in module lucid.linalg)": [[17, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[142, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[152, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[153, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[154, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[224, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[225, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[226, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[227, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[228, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[212, "lucid.ravel", false]], "reciprocal() (in module lucid)": [[193, "lucid.reciprocal", false]], "relu (class in lucid.nn)": [[90, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[39, "lucid.nn.functional.relu", false]], "repeat() (in module lucid)": [[213, "lucid.repeat", false]], "reshape() (in module lucid)": [[214, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[229, "lucid.transforms.Resize", false]], "rmsprop (class in lucid.optim)": [[143, "lucid.optim.RMSprop", false]], "rotate() (in module lucid.nn.functional)": [[78, "lucid.nn.functional.rotate", false]], "rprop (class in lucid.optim)": [[144, "lucid.optim.Rprop", false]], "seed() (in module lucid.random)": [[155, "lucid.random.seed", false]], "selu (class in lucid.nn)": [[91, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[40, "lucid.nn.functional.selu", false]], "sequential (class in lucid.nn)": [[33, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[145, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[92, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[41, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[194, "lucid.sign", false]], "sin() (in module lucid)": [[195, "lucid.sin", false]], "sinh() (in module lucid)": [[196, "lucid.sinh", false]], "softmax (class in lucid.nn)": [[93, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[42, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[18, "lucid.linalg.solve", false]], "sqrt() (in module lucid)": [[197, "lucid.sqrt", false]], "square() (in module lucid)": [[198, "lucid.square", false]], "squeeze() (in module lucid)": [[215, "lucid.squeeze", false]], "stack() (in module lucid)": [[216, "lucid.stack", false]], "sub() (in module lucid)": [[169, "lucid.sub", false]], "sum() (in module lucid)": [[199, "lucid.sum", false]], "svd() (in module lucid.linalg)": [[19, "lucid.linalg.svd", false]], "tan() (in module lucid)": [[200, "lucid.tan", false]], "tanh (class in lucid.nn)": [[94, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[201, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[43, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[158, "lucid.Tensor", false]], "tensor() (in module lucid)": [[205, "lucid.tensor", false]], "tile() (in module lucid)": [[217, "lucid.tile", false]], "totensor (class in lucid.transforms)": [[221, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[202, "lucid.trace", false]], "transpose() (in module lucid)": [[203, "lucid.transpose", false]], "unfold() (in module lucid.nn.functional)": [[48, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[84, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[156, "lucid.random.uniform", false]], "unsqueeze() (in module lucid)": [[218, "lucid.unsqueeze", false]], "var() (in module lucid)": [[204, "lucid.var", false]], "vstack() (in module lucid)": [[219, "lucid.vstack", false]], "xavier_normal() (in module lucid.nn.init)": [[85, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[86, "lucid.nn.init.xavier_uniform", false]], "zeros() (in module lucid)": [[177, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[178, "lucid.zeros_like", false]]}, "objects": {"": [[7, 0, 0, "-", "lucid"]], "lucid": [[158, 1, 1, "", "Tensor"], [180, 2, 1, "", "abs"], [159, 2, 1, "", "add"], [170, 2, 1, "", "arange"], [181, 2, 1, "", "arccos"], [182, 2, 1, "", "arcsin"], [183, 2, 1, "", "arctan"], [184, 2, 1, "", "clip"], [206, 2, 1, "", "concatenate"], [185, 2, 1, "", "cos"], [186, 2, 1, "", "cosh"], [187, 2, 1, "", "cube"], [171, 2, 1, "", "diag"], [160, 2, 1, "", "div"], [161, 2, 1, "", "dot"], [172, 2, 1, "", "empty"], [173, 2, 1, "", "empty_like"], [188, 2, 1, "", "exp"], [174, 2, 1, "", "eye"], [207, 2, 1, "", "flatten"], [147, 2, 1, "", "grad_enabled"], [208, 2, 1, "", "hstack"], [162, 2, 1, "", "inner"], [189, 2, 1, "", "log"], [163, 2, 1, "", "matmul"], [190, 2, 1, "", "max"], [164, 2, 1, "", "maximum"], [191, 2, 1, "", "mean"], [210, 2, 1, "", "meshgrid"], [192, 2, 1, "", "min"], [165, 2, 1, "", "minimum"], [166, 2, 1, "", "mul"], [149, 2, 1, "", "no_grad"], [175, 2, 1, "", "ones"], [176, 2, 1, "", "ones_like"], [167, 2, 1, "", "outer"], [211, 2, 1, "", "pad"], [168, 2, 1, "", "power"], [212, 2, 1, "", "ravel"], [193, 2, 1, "", "reciprocal"], [213, 2, 1, "", "repeat"], [214, 2, 1, "", "reshape"], [194, 2, 1, "", "sign"], [195, 2, 1, "", "sin"], [196, 2, 1, "", "sinh"], [197, 2, 1, "", "sqrt"], [198, 2, 1, "", "square"], [215, 2, 1, "", "squeeze"], [216, 2, 1, "", "stack"], [169, 2, 1, "", "sub"], [199, 2, 1, "", "sum"], [200, 2, 1, "", "tan"], [201, 2, 1, "", "tanh"], [205, 2, 1, "", "tensor"], [217, 2, 1, "", "tile"], [202, 2, 1, "", "trace"], [203, 2, 1, "", "transpose"], [218, 2, 1, "", "unsqueeze"], [204, 2, 1, "", "var"], [219, 2, 1, "", "vstack"], [177, 2, 1, "", "zeros"], [178, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "MNIST"]], "lucid.linalg": [[9, 2, 1, "", "cholesky"], [10, 2, 1, "", "det"], [11, 2, 1, "", "eig"], [13, 2, 1, "", "inv"], [14, 2, 1, "", "matrix_power"], [15, 2, 1, "", "norm"], [16, 2, 1, "", "pinv"], [17, 2, 1, "", "qr"], [18, 2, 1, "", "solve"], [19, 2, 1, "", "svd"]], "lucid.models": [[21, 1, 1, "", "LeNet"], [22, 2, 1, "", "lenet_1"], [23, 2, 1, "", "lenet_4"], [24, 2, 1, "", "lenet_5"]], "lucid.nn": [[100, 1, 1, "", "AlphaDropout"], [125, 1, 1, "", "AvgPool1d"], [126, 1, 1, "", "AvgPool2d"], [127, 1, 1, "", "AvgPool3d"], [111, 1, 1, "", "BCELoss"], [117, 1, 1, "", "BatchNorm1d"], [118, 1, 1, "", "BatchNorm2d"], [119, 1, 1, "", "BatchNorm3d"], [107, 1, 1, "", "Bilinear"], [26, 1, 1, "", "Buffer"], [96, 1, 1, "", "Conv1d"], [97, 1, 1, "", "Conv2d"], [98, 1, 1, "", "Conv3d"], [112, 1, 1, "", "CrossEntropyLoss"], [101, 1, 1, "", "Dropout"], [102, 1, 1, "", "Dropout1d"], [103, 1, 1, "", "Dropout2d"], [104, 1, 1, "", "Dropout3d"], [87, 1, 1, "", "ELU"], [88, 1, 1, "", "GELU"], [113, 1, 1, "", "HuberLoss"], [108, 1, 1, "", "Identity"], [120, 1, 1, "", "InstanceNorm1d"], [121, 1, 1, "", "InstanceNorm2d"], [122, 1, 1, "", "InstanceNorm3d"], [123, 1, 1, "", "LayerNorm"], [89, 1, 1, "", "LeakyReLU"], [109, 1, 1, "", "Linear"], [114, 1, 1, "", "MSELoss"], [128, 1, 1, "", "MaxPool1d"], [129, 1, 1, "", "MaxPool2d"], [130, 1, 1, "", "MaxPool3d"], [27, 1, 1, "", "Module"], [29, 1, 1, "", "ModuleDict"], [30, 1, 1, "", "ModuleList"], [115, 1, 1, "", "NLLLoss"], [28, 1, 1, "", "Parameter"], [31, 1, 1, "", "ParameterDict"], [32, 1, 1, "", "ParameterList"], [90, 1, 1, "", "ReLU"], [91, 1, 1, "", "SELU"], [33, 1, 1, "", "Sequential"], [92, 1, 1, "", "Sigmoid"], [93, 1, 1, "", "Softmax"], [94, 1, 1, "", "Tanh"]], "lucid.nn.functional": [[49, 2, 1, "", "alpha_dropout"], [69, 2, 1, "", "avg_pool1d"], [70, 2, 1, "", "avg_pool2d"], [71, 2, 1, "", "avg_pool3d"], [65, 2, 1, "", "batch_norm"], [56, 2, 1, "", "bilinear"], [59, 2, 1, "", "binary_cross_entropy"], [44, 2, 1, "", "conv1d"], [45, 2, 1, "", "conv2d"], [46, 2, 1, "", "conv3d"], [60, 2, 1, "", "cross_entropy"], [50, 2, 1, "", "dropout"], [51, 2, 1, "", "dropout1d"], [52, 2, 1, "", "dropout2d"], [53, 2, 1, "", "dropout3d"], [35, 2, 1, "", "elu"], [36, 2, 1, "", "gelu"], [61, 2, 1, "", "huber_loss"], [67, 2, 1, "", "instance_norm"], [77, 2, 1, "", "interpolate"], [68, 2, 1, "", "layer_norm"], [38, 2, 1, "", "leaky_relu"], [58, 2, 1, "", "linear"], [73, 2, 1, "", "max_pool1d"], [74, 2, 1, "", "max_pool2d"], [75, 2, 1, "", "max_pool3d"], [63, 2, 1, "", "mse_loss"], [64, 2, 1, "", "nll_loss"], [39, 2, 1, "", "relu"], [78, 2, 1, "", "rotate"], [40, 2, 1, "", "selu"], [41, 2, 1, "", "sigmoid"], [42, 2, 1, "", "softmax"], [43, 2, 1, "", "tanh"], [48, 2, 1, "", "unfold"]], "lucid.nn.init": [[79, 2, 1, "", "constant"], [81, 2, 1, "", "kaiming_normal"], [82, 2, 1, "", "kaiming_uniform"], [83, 2, 1, "", "normal"], [84, 2, 1, "", "uniform"], [85, 2, 1, "", "xavier_normal"], [86, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[135, 1, 1, "", "ASGD"], [136, 1, 1, "", "Adadelta"], [137, 1, 1, "", "Adagrad"], [138, 1, 1, "", "Adam"], [139, 1, 1, "", "AdamW"], [140, 1, 1, "", "Adamax"], [141, 1, 1, "", "NAdam"], [133, 1, 1, "", "Optimizer"], [142, 1, 1, "", "RAdam"], [143, 1, 1, "", "RMSprop"], [144, 1, 1, "", "Rprop"], [145, 1, 1, "", "SGD"]], "lucid.random": [[152, 2, 1, "", "rand"], [153, 2, 1, "", "randint"], [154, 2, 1, "", "randn"], [155, 2, 1, "", "seed"], [156, 2, 1, "", "uniform"]], "lucid.transforms": [[222, 1, 1, "", "CenterCrop"], [220, 1, 1, "", "Compose"], [223, 1, 1, "", "Normalize"], [224, 1, 1, "", "RandomCrop"], [225, 1, 1, "", "RandomGrayscale"], [226, 1, 1, "", "RandomHorizontalFlip"], [227, 1, 1, "", "RandomRotation"], [228, 1, 1, "", "RandomVerticalFlip"], [229, 1, 1, "", "Resize"], [221, 1, 1, "", "ToTensor"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [3, 7, 8, 14, 16, 19, 26, 27, 28, 29, 31, 32, 33, 112, 115, 125, 128, 129, 132, 133, 134, 148, 163, 171, 189, 191, 199, 202, 204, 205, 215, 221, 223, 231], "0": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 177, 178, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 203, 204, 205, 206, 208, 211, 212, 213, 215, 216, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 231], "000": [5, 172, 173], "0000": [112, 113, 115], "0001": 135, "000e": [172, 173], "001": [135, 138, 139, 141, 142, 145], "002": [140, 141], "004": 141, "005": 89, "01": [38, 89, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145], "01051757": 154, "0205": 112, "0217": 112, "0227": 112, "0299": 112, "044715": [36, 88], "0450": 112, "0451": 112, "04719755": 181, "0474259": 41, "0480": 112, "05": [65, 67, 68, 89, 117, 118, 119, 120, 121, 122, 123], "0507": [40, 91], "06": [136, 144], "07": [59, 60, 111, 112], "0700": 112, "0706508": 94, "0721": 112, "0794": 115, "08": [138, 139, 140, 141, 142, 143], "0802": 115, "08333333": 16, "085537": 188, "0900": [93, 112], "0986": [42, 93], "09861229": 189, "0992": 112, "1": [0, 1, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "10": [0, 1, 2, 3, 21, 22, 23, 24, 29, 30, 33, 45, 46, 56, 58, 96, 97, 98, 103, 104, 107, 109, 118, 119, 121, 126, 127, 129, 137, 153, 156, 157, 160, 163, 166, 167, 183, 199, 222, 224, 225, 227], "100": 231, "1000000": 135, "1001": 112, "1003": 112, "1014": 40, "1025": [30, 33], "1026": [30, 33], "1027": [30, 33], "10499": 41, "1050": 92, "1054": 115, "1056": [30, 33], "11": [56, 96, 97, 98, 103, 107, 118, 119, 121, 126, 127, 129, 163, 222, 223, 224, 225, 227], "1111": 111, "1134": 56, "114b": 225, "119": 56, "1192": [41, 42, 93], "12": [22, 23, 31, 56, 96, 97, 98, 103, 104, 107, 118, 119, 121, 126, 127, 129, 163, 167, 168, 222, 224, 225, 227], "120": [21, 24], "123": [81, 82, 83, 84, 85, 86, 155, 156], "124": [81, 82, 85, 86], "125": 127, "1250": 113, "128": [33, 220, 231], "128x128": [220, 231], "13": [56, 96, 97, 98, 107, 119, 126, 127, 129, 163, 222, 224, 225, 227], "14": [96, 97, 98, 103, 104, 107, 119, 126, 127, 129, 150, 163, 167, 222, 224, 225, 227], "145": 56, "15": [0, 56, 96, 97, 98, 107, 119, 126, 127, 129, 163, 167, 202, 222, 224, 225, 227, 231], "1513": 115, "155": 163, "1588": [36, 88], "16": [21, 24, 30, 31, 33, 96, 97, 98, 103, 104, 107, 118, 119, 126, 127, 129, 132, 163, 167, 197, 222, 224, 225, 227], "16227766": 17, "16425": 115, "1643": 111, "166": 163, "17": [96, 97, 98, 107, 119, 127, 162, 222, 224, 225, 227], "170": 56, "17520119": 196, "18": [23, 25, 96, 97, 98, 103, 107, 119, 127, 166, 167, 222, 224, 225, 227], "1800": 112, "19": [45, 46, 56, 97, 98, 119, 161, 163], "192": [22, 23], "1966": [42, 92, 93], "1998": 112, "1d": [44, 69, 73, 117, 120, 156, 163, 171, 202, 210, 211, 212, 213, 217], "1e": [59, 60, 65, 67, 68, 111, 112, 117, 118, 119, 120, 121, 122, 123, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "1e6": 135, "2": [1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 26, 27, 28, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "20": [0, 5, 29, 30, 33, 97, 98, 103, 119, 167, 188], "2039": 115, "204": 98, "21": [31, 56, 97, 98, 119, 167], "211": 163, "22": [56, 97, 98, 103, 119, 161, 163], "2231": [112, 115], "2247": [117, 118, 119, 120, 121, 122, 123], "226": 163, "22752314": 154, "23": [97, 98, 119], "2324": 91, "234": [81, 82, 83, 84, 85, 86, 156], "24": [56, 97, 98, 103, 119, 167], "2424": [42, 93], "2447": 93, "246": [22, 25], "25": [0, 41, 92, 98, 114, 119, 126, 127, 160, 193, 204], "2500": [111, 113, 115], "2512": 87, "2547": 91, "26": [31, 58, 98, 109, 119, 167], "26325684": 154, "2689": [42, 92, 93], "27": [56, 96, 98, 119, 187], "276": [81, 82, 85, 86], "28": [22, 23, 25, 56, 98, 167], "28x28": [5, 22, 23], "29": 98, "299r": 225, "2_i": [120, 121, 122], "2d": [45, 52, 70, 74, 118, 121, 163, 171, 174, 202, 207, 210, 211, 213, 217, 227], "2e": 140, "2x2": [48, 222, 224], "3": [1, 2, 3, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 22, 25, 26, 27, 28, 30, 31, 32, 33, 36, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 61, 63, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 184, 186, 187, 188, 189, 190, 191, 192, 196, 197, 198, 199, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229], "30": [30, 78, 98, 227], "3026": 115, "31": [56, 98, 163], "310": [172, 173], "31622777": 17, "32": [24, 25, 30, 33, 56, 58, 97, 98, 109, 132, 161, 162, 167], "321": [81, 82, 85, 86], "32x32": [21, 24], "33": [30, 33, 58, 98, 109], "33333333": 16, "34": [30, 33, 56, 98, 163, 167], "342": [81, 82, 85, 86], "345": [81, 82, 83, 84, 85, 86, 156], "35": [30, 33, 98], "3567": [111, 115], "36": 98, "3679": [35, 40, 87], "37": 96, "372": 56, "375": 114, "3750": 113, "378": [23, 25], "38344152": 152, "38629436": 189, "389056": 188, "3935": 87, "3d": [46, 53, 71, 75, 98, 119, 122], "3x3": 157, "4": [0, 1, 2, 3, 8, 9, 10, 11, 13, 15, 16, 17, 21, 22, 23, 31, 33, 44, 45, 46, 48, 51, 52, 53, 56, 58, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 135, 138, 142, 143, 145, 148, 150, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 176, 178, 184, 189, 190, 191, 192, 193, 195, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 216, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229], "400": 24, "4044": 111, "4076": 112, "41421356": 9, "41666667": 16, "41808962": 154, "419974": 43, "4199743": 94, "42": [56, 150, 157], "421": [81, 82, 85, 86], "423": [81, 82, 83, 84], "42718872": 17, "4286": 111, "43": [161, 163], "4323": 87, "4375": 113, "43758721": 152, "4472136": 11, "4495": [119, 122], "45": [56, 78, 227], "4545": 100, "47112767": 183, "48": [58, 109], "4979": 87, "4x4": 229, "5": [1, 2, 7, 8, 13, 14, 15, 16, 21, 22, 23, 24, 27, 28, 29, 30, 31, 33, 36, 41, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 61, 63, 65, 67, 68, 69, 70, 77, 79, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 129, 130, 144, 148, 150, 153, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 176, 178, 180, 181, 182, 190, 191, 192, 193, 194, 199, 202, 203, 204, 205, 208, 210, 214, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "50": [58, 109, 144, 161, 163, 225, 226, 228, 231], "5000": [111, 113, 115], "5108": 115, "52359878": 182, "53": [56, 162], "543": [81, 82, 83, 84, 85, 86, 156], "54308063": 186, "545": 168, "5455": 100, "563": [81, 82, 85, 86], "57": 56, "57079633": [181, 182], "57366333": 155, "587g": 225, "6": [8, 16, 21, 24, 31, 32, 44, 45, 46, 48, 53, 56, 58, 82, 86, 96, 97, 98, 101, 102, 103, 104, 107, 109, 111, 117, 118, 119, 120, 121, 122, 123, 126, 127, 129, 130, 136, 144, 148, 150, 156, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 173, 176, 178, 190, 191, 192, 199, 202, 203, 204, 205, 208, 213, 214, 219, 221, 222, 223, 224, 225, 227, 229], "6052": 115, "6065": 87, "61": [24, 25], "6124": [117, 118, 119, 120, 121, 122, 123], "62": 56, "62686041": 196, "6321": [35, 87], "63245553": 17, "64": [30, 33, 56], "64589411": 152, "654": [81, 82, 83, 84, 85, 86, 156], "657": [81, 82, 85, 86], "6590": [42, 93], "6652": 93, "66666667": 16, "6667": 111, "6682": 111, "67": 163, "67326": 91, "6733": 40, "678": [81, 82, 83, 84, 85, 86], "68811989": 154, "69314718": 189, "7": [15, 31, 44, 45, 46, 48, 53, 56, 58, 59, 60, 88, 91, 92, 94, 96, 97, 98, 103, 104, 107, 109, 111, 112, 114, 118, 119, 121, 122, 126, 127, 129, 130, 150, 153, 156, 159, 161, 162, 163, 167, 169, 171, 188, 191, 199, 202, 203, 204, 217, 221, 222, 223, 224, 225, 227, 229], "70": 5, "7001": 112, "706": [24, 25], "70710678": [11, 195], "7147": 115, "7182818": 188, "7311": [42, 92, 93], "74": 163, "75": [58, 109, 114, 135], "7581": 40, "76159416": 201, "7616": [43, 94], "76219569": 186, "7635": 91, "772": 168, "78357324": 154, "78539816": 183, "79172504": 152, "8": [14, 18, 30, 31, 33, 44, 45, 46, 48, 53, 56, 58, 59, 88, 91, 92, 94, 96, 97, 98, 101, 102, 103, 104, 107, 109, 111, 114, 118, 119, 121, 122, 126, 127, 129, 130, 138, 139, 140, 141, 142, 143, 150, 153, 160, 161, 162, 163, 167, 168, 170, 171, 187, 191, 199, 202, 203, 204, 221, 222, 223, 224, 225, 227, 229], "80": 5, "8005": 112, "8182": 100, "82": 56, "84": [21, 23, 24], "8413": [36, 88], "8584": 91, "876": [81, 82, 85, 86, 156], "8808": [42, 92, 93], "887": 168, "891773": 152, "89442719": 11, "9": [0, 1, 3, 5, 18, 45, 48, 56, 58, 96, 97, 98, 103, 107, 109, 111, 118, 119, 121, 126, 127, 129, 135, 136, 138, 139, 140, 141, 142, 143, 145, 150, 153, 156, 159, 163, 167, 168, 169, 171, 197, 198, 221, 222, 223, 224, 225, 227], "90709145": 155, "9091": 100, "9120": 115, "9163": 115, "9486833": 17, "949e": [172, 173], "9526": 41, "9545": 88, "96366276": 152, "9640": 94, "96402758": 201, "99": 143, "9957": 115, "99734545": 155, "999": [0, 138, 139, 140, 141, 142], "A": [1, 3, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 27, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 56, 58, 59, 60, 64, 65, 67, 68, 77, 100, 101, 102, 103, 104, 111, 112, 115, 117, 118, 119, 120, 121, 122, 123, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 152, 153, 154, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 227], "As": 155, "Be": 0, "By": [0, 2, 3, 7, 28, 78, 132, 142, 148, 152, 153, 154, 156, 221, 231], "For": [2, 3, 4, 7, 9, 10, 11, 13, 14, 15, 16, 18, 33, 35, 36, 38, 39, 40, 41, 43, 56, 58, 77, 81, 82, 85, 86, 91, 96, 97, 98, 107, 109, 117, 118, 119, 120, 121, 122, 132, 134, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 188, 189, 190, 191, 192, 195, 197, 199, 202, 203, 204, 211, 213, 215, 217, 218, 231], "If": [0, 1, 2, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 27, 29, 30, 31, 32, 35, 36, 38, 39, 40, 41, 43, 44, 45, 46, 53, 56, 58, 65, 67, 77, 78, 81, 82, 96, 97, 98, 107, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 133, 138, 139, 143, 144, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 225, 226, 228, 229], "In": [3, 7, 16, 44, 45, 46, 112, 115, 147, 148, 149, 220, 231], "It": [1, 2, 3, 7, 16, 17, 18, 21, 22, 23, 24, 25, 27, 29, 30, 31, 32, 33, 53, 56, 77, 78, 88, 90, 94, 107, 108, 111, 112, 113, 114, 115, 132, 133, 134, 135, 141, 143, 144, 145, 148, 155, 159, 160, 161, 164, 165, 166, 168, 169, 190, 192, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221], "Its": [18, 157], "Near": 16, "No": 48, "Not": 108, "One": [22, 231], "The": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "There": 214, "These": [4, 7, 8, 11, 14, 17, 19, 25, 100, 101, 102, 103, 104, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 144, 150, 157, 231], "To": [3, 134, 154, 157, 172, 173, 210, 231], "With": [3, 48, 221, 231], "_": [14, 29, 30, 32, 33, 35, 36, 38, 39, 40, 41, 43, 58, 77, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 135, 136, 138, 139, 140, 141, 143, 145, 161, 162, 163, 167, 202, 203, 222, 223, 224, 226, 227, 228], "_1": [11, 29, 30, 31, 32, 33, 56, 107, 167, 206, 208, 219], "_2": [11, 29, 30, 31, 32, 33, 56, 107, 167, 206, 208, 219], "__call__": [1, 27], "__getitem__": [0, 2, 3, 5], "__init__": [0, 1, 2, 3, 7, 21, 26, 27, 28, 29, 30, 31, 32, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 107, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 158, 220, 221], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5], "__repr__": 133, "__setattr__": 27, "_activ": 42, "_arraylik": [150, 171, 173, 176, 178], "_arraylikeint": 211, "_arrayorscalar": [26, 28, 150, 158, 205], "_base_dtyp": [170, 172, 175, 177], "_c": 223, "_decai": 141, "_fanmod": [81, 82], "_grad_en": [147, 149], "_i": [11, 15, 42, 56, 93, 114, 117, 123, 125, 128, 161, 162, 164, 165, 167, 168, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 213, 215, 218, 219], "_in": [81, 82, 85, 86], "_j": [42, 93, 125, 128, 167, 191, 199, 203, 204], "_k": 216, "_left": 77, "_modul": 27, "_n": [11, 29, 30, 31, 32, 33, 206, 208, 219], "_numpyarrai": 150, "_out": [81, 82, 85, 86, 213, 217], "_p": 15, "_pad": 211, "_paddingstr": [96, 97, 98], "_paramet": 27, "_reductiontyp": [59, 60, 61, 63, 64, 111, 112, 113, 114, 115], "_right": 77, "_scalar": [79, 83, 84, 85, 86, 150, 170, 184], "_shapelik": [68, 123, 150, 153, 175, 177, 214, 215, 218], "_slope": 89, "_statedict": 133, "_t": [142, 143], "_tensor": [26, 28, 171, 205], "_tensorop": 158, "_u": 16, "_v": 16, "_valu": [184, 211], "_width": 211, "a_i": [164, 165, 168], "ab": 179, "abc": [2, 133], "abil": [7, 231], "about": 7, "abov": [7, 147, 149, 155, 171, 174], "absolut": [14, 15, 61, 140, 180], "abstract": [2, 3, 132, 133, 134, 135, 143, 145], "abstractmethod": 133, "acceler": [91, 117, 118, 119, 135, 141, 143, 145], "accept": [108, 152, 158], "access": [0, 2, 3, 4, 5, 26, 28, 29, 30, 31, 32, 33, 214], "accord": [77, 96, 97, 98, 107, 109, 112, 115, 136, 137, 138, 139, 140, 141, 142, 203], "accordingli": 10, "account": [14, 16, 17], "accumul": [135, 136, 137, 159, 160, 164, 165, 166, 169], "achiev": [44, 45, 46, 141, 226, 228], "across": [0, 26, 30, 33, 68, 85, 86, 117, 118, 119, 120, 121, 122, 123, 150, 152, 153, 154, 155, 156, 157, 172, 173, 191, 204], "act": 139, "activ": [7, 29, 33, 35, 36, 38, 39, 40, 41, 42, 43, 49, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 100, 101, 102, 103, 104, 111, 112, 115, 117, 118, 119, 123, 190, 192], "actual": [28, 111, 112, 114, 115, 158, 224], "ad": [27, 29, 30, 31, 32, 33, 44, 45, 46, 56, 58, 59, 60, 65, 67, 68, 69, 70, 71, 73, 74, 75, 96, 97, 98, 111, 112, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 140, 141, 142, 143, 218, 231], "adadelta": 146, "adagrad": [136, 146], "adam": [139, 140, 141, 142, 146], "adamax": 146, "adamw": 146, "adapt": [21, 136, 137, 138, 141, 142, 143, 144], "add": [4, 27, 29, 30, 33, 56, 58, 96, 97, 98, 107, 109, 123, 133, 135, 138, 143, 145, 148, 179, 211, 218], "add_modul": [27, 33], "add_param_group": 133, "addit": [4, 7, 14, 27, 30, 33, 56, 58, 65, 67, 107, 109, 117, 118, 119, 120, 121, 122, 135, 141, 148, 157, 159, 216], "addition": 141, "address": [112, 115, 138, 139, 142], "adjust": [100, 117, 118, 119, 120, 121, 122, 123, 134, 138, 142, 143, 144, 208, 219], "advanc": [3, 16, 30, 33, 44, 45, 46, 132, 135], "advantag": 149, "affect": [147, 212, 215, 220], "affin": [117, 118, 119, 120, 121, 122, 123, 227], "after": [14, 28, 29, 30, 31, 32, 33, 53, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 100, 101, 102, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 123, 125, 126, 127, 128, 129, 130, 139, 149, 158, 159, 160, 164, 165, 166, 168, 169, 211, 221], "afterward": 149, "aggreg": [167, 213, 217], "aim": [4, 7], "algebra": [7, 8, 174], "algorithm": [7, 14, 16, 17, 133, 134, 157], "align": [18, 77, 162, 163], "align_corn": 77, "all": [0, 3, 4, 7, 17, 27, 29, 30, 31, 32, 33, 45, 46, 70, 71, 74, 75, 77, 89, 90, 98, 126, 127, 130, 132, 133, 134, 135, 138, 143, 144, 145, 168, 190, 191, 192, 199, 202, 204, 206, 207, 208, 213, 215, 216, 217, 219, 222, 223, 231], "allevi": 35, "alloc": [172, 173], "allow": [0, 1, 3, 4, 7, 16, 17, 21, 28, 29, 30, 31, 32, 33, 35, 38, 39, 42, 46, 48, 78, 87, 88, 89, 91, 92, 93, 94, 96, 97, 98, 132, 136, 137, 148, 170, 175, 177, 178, 203, 205, 210, 220, 221, 231], "along": [42, 77, 93, 162, 163, 167, 190, 191, 192, 199, 202, 204, 206, 208, 210, 213, 216, 217, 218, 219, 226, 228], "alongsid": 26, "alpha": [35, 38, 40, 49, 87, 91, 100, 135, 143], "alpha_dropout": [54, 55, 100], "alphadropout": [105, 106], "alphadropoutmodel": 100, "also": [35, 36, 38, 39, 40, 41, 43, 56, 58, 77, 141, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 206, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219], "alter": [33, 214], "altern": [1, 88, 136, 163], "alwai": [28, 212, 225, 226, 228], "amount": [44, 45, 46, 69, 70, 71, 73, 74, 75, 141], "amsgrad": [138, 139], "an": [0, 1, 3, 7, 11, 13, 14, 16, 17, 19, 21, 22, 23, 24, 27, 29, 30, 31, 32, 33, 36, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 77, 78, 85, 86, 87, 92, 96, 97, 98, 100, 101, 102, 103, 104, 107, 109, 123, 125, 126, 127, 128, 129, 130, 133, 134, 135, 138, 141, 143, 149, 150, 158, 163, 171, 174, 184, 191, 199, 204, 206, 213, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "analog": [213, 217], "analysi": [4, 96, 97, 98, 122, 125, 127, 128, 130], "angl": [78, 227], "ani": [0, 1, 2, 3, 14, 16, 26, 27, 28, 29, 31, 32, 35, 36, 38, 39, 40, 41, 43, 49, 50, 56, 58, 65, 67, 92, 123, 132, 133, 147, 149, 155, 158, 170, 171, 172, 174, 175, 176, 177, 178, 190, 192, 203, 205, 206, 207, 208, 211, 213, 216, 217, 218, 219, 220, 231], "anoth": [32, 169, 176, 178, 221, 231], "api": [4, 231], "appear": 133, "append": [30, 32, 33], "appli": [2, 4, 5, 7, 14, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 46, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 100, 101, 102, 103, 104, 107, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 135, 136, 137, 139, 140, 141, 142, 163, 211, 213, 220, 223, 225, 226, 227, 228, 229, 231], "applic": [4, 16, 44, 67, 96, 97, 98, 107, 109, 157, 170, 177, 211, 229], "approach": [3, 33, 139], "appropri": [16, 27, 31, 33, 96, 97, 98, 100, 101, 102, 112, 126, 127, 147, 149], "approx": 40, "approxim": [16, 36, 88, 126, 129], "ar": [1, 2, 3, 4, 7, 10, 11, 13, 14, 16, 17, 18, 19, 25, 26, 27, 28, 29, 30, 31, 32, 33, 42, 44, 45, 46, 48, 56, 58, 77, 81, 82, 84, 85, 86, 93, 96, 97, 98, 100, 101, 102, 103, 104, 107, 109, 112, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 135, 138, 139, 141, 142, 143, 144, 145, 147, 149, 150, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 180, 184, 188, 190, 191, 192, 193, 194, 199, 202, 203, 206, 210, 213, 214, 217, 220, 221, 222, 224, 225, 229, 231], "arang": 179, "arbitrari": [30, 108, 172, 173, 184, 189, 191, 195, 197, 199, 203, 204], "arcco": 179, "architectur": [21, 25, 29, 30, 31, 32, 33, 36, 90, 107, 108, 132], "arcsin": 179, "arctan": 179, "area": 77, "arg": [27, 108, 172], "argument": [3, 4, 21, 27, 33, 108, 152, 172, 203], "around": [11, 78, 94], "arr": [150, 206, 208, 216, 219], "arrai": [7, 26, 28, 148, 150, 158, 163, 171, 176, 178, 205, 212, 213, 221, 231], "asarrai": 150, "asgd": 146, "aspect": 229, "assign": [27, 29, 31, 33, 77, 112, 115], "associ": [31, 32], "assum": [0, 1, 133, 134, 147], "attempt": [29, 33], "attent": [32, 56], "attribut": [20, 27], "audio": 96, "augment": [3, 4, 78, 157, 213, 217, 220, 224, 225, 226, 227, 228, 231], "autodiff": 7, "autograd": 132, "automat": [4, 7, 28, 29, 30, 31, 32, 132, 152, 153, 154, 156, 158, 172, 173, 178, 210, 221], "auxiliari": 26, "avail": [4, 5, 7], "averag": [22, 23, 24, 26, 69, 70, 71, 77, 114, 125, 126, 127, 135, 136, 138, 143, 191], "avg_pool": [125, 126, 127], "avg_pool1d": [55, 72], "avg_pool2d": [55, 72], "avg_pool3d": [55, 72], "avgpool1d": [106, 131], "avgpool1dmodel": 125, "avgpool2d": [106, 131], "avgpool2dmodel": 126, "avgpool3d": [106, 131], "avgpool3dmodel": 127, "avoid": [2, 3, 16, 31, 149], "ax": [8, 148, 190, 191, 192, 199, 203, 204, 213, 215, 217], "axi": [42, 93, 162, 163, 190, 191, 192, 199, 204, 206, 208, 210, 211, 213, 215, 216, 217, 218, 219, 226, 228], "b": [8, 18, 56, 58, 84, 96, 97, 98, 107, 109, 148, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 206, 208, 216, 219, 225], "b_i": [164, 165, 168], "back": [77, 126, 127, 162, 167, 213, 217], "backpropag": [7, 10, 11, 13, 14, 16, 17, 19, 26, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 56, 58, 77, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 149, 154, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 188, 190, 192, 205, 211, 213, 217, 221], "backward": [7, 26, 28, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 158, 221], "balanc": 113, "bar": 135, "base": [3, 8, 13, 14, 17, 18, 21, 27, 29, 30, 31, 32, 48, 56, 100, 112, 113, 132, 133, 134, 135, 139, 143, 144, 145, 159, 160, 164, 165, 166, 168, 169, 178, 188, 189, 190, 192, 203, 210, 211, 224, 225, 226, 227, 228], "basic": [7, 44, 45, 46, 81, 82, 85, 86, 222, 223, 224, 225, 226, 227, 228, 229], "batch": [1, 2, 3, 8, 14, 17, 19, 44, 45, 46, 48, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 96, 97, 98, 107, 109, 111, 112, 115, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 142, 163, 222, 223, 224, 225, 227, 229], "batch_norm": [55, 66, 117, 118, 119], "batch_norm1": 33, "batch_norm2": 33, "batch_siz": [1, 2, 3], "batchnorm1d": [106, 124], "batchnorm1dmodel": 117, "batchnorm2d": [33, 106, 124], "batchnorm2dmodel": 118, "batchnorm3d": [106, 124], "batchnorm3dmodel": 119, "bceloss": [106, 116], "becaus": [2, 153], "becom": [15, 27, 136, 144], "befor": [14, 28, 135, 141, 149, 155, 211, 223, 231], "begin": [1, 15, 35, 38, 39, 40, 87, 89, 90, 91, 113, 114, 115, 125, 126, 127, 128, 129, 130, 142, 144, 148, 157, 164, 165, 167, 180, 184, 190, 192, 194, 211], "behav": [113, 202], "behavior": [30, 33, 147, 157, 163, 173, 231], "being": [32, 78, 100, 101, 102, 103, 104, 142, 147, 149, 206, 208, 219], "belong": 0, "below": [17, 21, 22, 23, 24, 163, 171, 174], "benchmark": 5, "benefici": 33, "benefit": [35, 132, 141, 150], "bernoulli": [100, 101, 102, 103, 104], "best": [81, 82, 85, 86], "beta": [117, 118, 119, 120, 121, 122, 123, 138, 139, 140, 141, 142], "beta1": [138, 139, 140, 141, 142], "beta2": [138, 139, 140, 141, 142], "beta_1": [138, 139, 140, 141, 142], "beta_2": [138, 139, 140, 141, 142], "better": [13, 36, 81, 82, 85, 86, 120, 121, 122, 132, 139, 141, 143, 223], "between": [27, 44, 45, 46, 48, 56, 61, 96, 97, 98, 100, 101, 102, 103, 104, 107, 111, 112, 113, 114, 115, 135, 143, 144, 145, 157, 159, 160, 163, 166, 169, 170, 204, 225, 226, 228, 229], "beyond": [7, 30], "bia": [44, 45, 46, 56, 58, 65, 67, 68, 96, 97, 98, 107, 109, 117, 118, 119, 120, 121, 122, 123, 138, 139, 140, 141, 142], "bias": [96, 97, 98, 109, 123, 132], "bias1": 31, "bias2": 31, "bilinear": [55, 57, 77, 106, 110], "bilinearmodel": 107, "binari": [41, 59, 92, 100, 101, 102, 103, 104, 111], "binary_cross_entropi": [55, 62], "block": [27, 48, 96, 97, 98, 149], "block1": 132, "block2": 132, "blue": 225, "bmatrix": 167, "bool": [1, 5, 19, 27, 28, 49, 50, 51, 52, 53, 65, 67, 77, 96, 97, 98, 107, 109, 117, 118, 119, 120, 121, 122, 123, 138, 139, 143, 147, 152, 153, 154, 156, 158, 170, 171, 172, 173, 174, 175, 176, 177, 178, 190, 191, 192, 199, 204, 205, 221], "both": [44, 58, 69, 73, 88, 96, 97, 125, 126, 128, 129, 161, 162, 163, 167, 171, 210, 229], "bottom": 77, "bound": [82, 84, 86, 144, 156], "box": 4, "break": 132, "brief": 231, "bright": 231, "broadcast": [103, 104, 191, 199, 204, 214, 218], "buffer": [135, 141, 143, 145], "build": [7, 27, 30, 33, 132, 231], "built": [3, 7, 33, 132], "burg": 5, "c": [5, 48, 51, 52, 53, 60, 64, 65, 67, 69, 70, 71, 73, 74, 75, 77, 78, 103, 104, 112, 115, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 148, 208, 219, 223], "c_": [96, 97, 98], "c_in": [44, 45, 46], "c_out": [44, 45, 46], "calcul": [0, 1, 7, 8, 28, 136, 137, 140, 141, 142, 149, 153, 158], "calculu": [9, 16], "call": [1, 27, 147, 159, 160, 163, 164, 165, 166, 168, 169], "callabl": [133, 220], "can": [0, 2, 3, 4, 7, 9, 11, 13, 14, 16, 17, 19, 26, 28, 29, 30, 31, 32, 33, 38, 44, 45, 46, 78, 88, 89, 94, 96, 97, 98, 120, 121, 122, 126, 127, 128, 129, 130, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 148, 149, 150, 156, 157, 158, 163, 172, 173, 174, 175, 177, 178, 191, 199, 204, 208, 210, 211, 213, 214, 217, 218, 219, 220, 221, 224, 226, 227, 228, 231], "cannot": [10, 11, 13, 14, 17, 18, 19], "capabl": [7, 170, 171, 174, 175, 176, 177, 178], "captur": [48, 96, 97, 98, 107], "care": 149, "cartesian": 210, "case": [3, 15, 21, 35, 38, 39, 40, 87, 89, 90, 91, 113, 114, 115, 125, 126, 127, 128, 129, 130, 132, 137, 142, 144, 148, 164, 165, 180, 184, 190, 192, 194, 211, 231], "caus": [3, 16, 135, 143, 145], "cautiou": 0, "cdot": [9, 10, 13, 14, 15, 18, 35, 36, 38, 40, 41, 44, 45, 46, 56, 58, 69, 70, 71, 73, 74, 75, 77, 85, 86, 88, 92, 100, 107, 109, 111, 112, 113, 115, 117, 118, 119, 120, 121, 122, 123, 136, 137, 138, 139, 140, 141, 142, 144, 161, 162, 163, 166, 168], "center": [78, 94, 143, 222, 231], "centercrop": [230, 231], "central": 150, "certain": [10, 36, 56, 107, 138, 139, 147, 190, 192], "chain": [13, 14, 33, 220, 231], "chanc": [225, 226, 228], "chang": [61, 113, 144, 148, 149, 212, 214, 218, 225, 231], "channel": [21, 22, 23, 24, 44, 45, 46, 48, 51, 52, 53, 65, 67, 69, 70, 71, 73, 74, 75, 77, 78, 96, 97, 98, 103, 104, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 223, 225, 229], "check": [147, 222, 224], "checkpoint": 134, "choic": 210, "choleski": 12, "chosen": 100, "christoph": 5, "clariti": 150, "class": [3, 4, 7, 20, 22, 23, 24, 42, 60, 64, 132, 134, 171, 174, 205, 231], "classic": 24, "classif": [4, 22, 23, 24, 25, 41, 42, 59, 60, 64, 92, 93, 111, 112, 115], "classifi": [21, 22, 23, 24], "cleaner": [1, 149, 163], "clear": [28, 158, 172, 173], "clearli": 150, "clf_in_featur": 21, "clf_layer": 21, "clip": [78, 144, 179], "clockwis": 78, "close": [13, 16, 91, 111, 143], "closer": 87, "closur": [133, 134], "cnn": 25, "co": [179, 195], "code": [14, 29, 31, 33, 147, 149, 150, 157], "coeffici": [18, 77, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145], "col": 48, "collect": [4, 8, 25, 29, 30, 32, 33, 134], "color": [225, 231], "colorjitt": 231, "column": [10, 11, 13, 17, 18, 19, 48, 174, 208, 210], "com": 5, "combin": [1, 3, 25, 30, 33, 35, 36, 88, 112, 132, 141, 142, 191, 199, 204, 206, 231], "combined_dataset": [0, 1], "common": [48, 78, 134, 231], "commonli": [7, 36, 41, 42, 43, 44, 46, 56, 63, 65, 67, 78, 85, 86, 93, 98, 111, 114, 115, 125, 126, 127, 128, 129, 130, 148, 150, 175, 215, 221, 222, 223, 224, 226, 227, 228, 231], "compar": [157, 216], "compat": [4, 8, 108, 123, 132, 148, 157, 221, 231], "complex": [2, 3, 7, 11, 29, 30, 33, 39, 90, 128, 130, 132, 134, 231], "compon": [16, 27, 30, 134, 158, 231], "compos": [5, 96, 97, 98, 125, 126, 127, 128, 129, 130, 132, 231], "comprehens": 3, "comput": [7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 48, 56, 58, 59, 60, 61, 63, 64, 65, 67, 77, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 143, 147, 148, 149, 150, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 180, 181, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 210, 211, 213, 217, 221, 231], "computation": [3, 16], "compute_loss": [134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "concaten": [0, 44, 45, 46, 208, 209, 216, 219], "concept": [7, 16, 25], "condit": [9, 10, 13], "configur": [21, 22, 23, 24, 32], "conjunct": [48, 115], "connect": [21, 22, 23, 24, 25, 58, 96, 97, 98, 109], "consid": [3, 13, 16, 33, 81, 82, 85, 86, 132, 144, 147, 172, 173, 231], "consider": 16, "consist": [2, 4, 22, 23, 24, 26, 150, 155, 157, 211, 222, 229, 231], "consistent_tensor": 157, "constant": [59, 60, 65, 67, 68, 80, 91, 111, 112, 117, 118, 119, 120, 121, 122, 123, 136, 137, 138, 139, 140, 141, 142, 143, 150, 211], "constant_pad": 211, "constraint": 1, "construct": [7, 30, 132, 171, 213, 217], "contain": [1, 5, 10, 11, 16, 17, 18, 19, 21, 27, 29, 30, 31, 32, 33, 42, 48, 56, 58, 59, 60, 64, 77, 111, 112, 115, 133, 159, 160, 161, 162, 164, 165, 166, 167, 169, 170, 173, 180, 181, 182, 183, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 207, 210], "content": 78, "context": [147, 149], "contextmanag": 149, "contigu": 212, "continu": [89, 154], "contrast": [120, 121, 122, 231], "contribut": [77, 100, 101, 102, 103, 104, 125, 128, 129, 130, 135, 141, 202], "control": [87, 113, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 157, 221, 231], "conv": [118, 119], "conv1": [22, 23, 24, 33, 96, 97, 98, 125, 126, 127, 128, 129, 130], "conv1d": [47, 55, 99, 106, 125, 128], "conv1dmodel": 96, "conv2": [22, 23, 24, 33, 96, 97, 98], "conv2d": [30, 33, 47, 55, 99, 106, 118, 126, 129, 132], "conv2dmodel": 97, "conv3d": [47, 55, 99, 106, 119, 127, 130], "conv3dmodel": 98, "conv_lay": [21, 30], "convblock": 132, "conveni": 4, "convent": 163, "converg": [16, 94, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 223], "convers": [112, 115, 225, 231], "convert": [5, 26, 28, 42, 93, 158, 210, 220, 221, 225, 231], "convnetwork": 30, "convolut": [21, 22, 23, 24, 25, 30, 44, 45, 46, 48, 96, 97, 98, 126, 127, 129, 130, 211], "convolv": [44, 45, 46, 96, 97, 98], "coordin": 210, "core": [0, 1, 2, 3, 27, 132, 133, 158, 231], "corinna": 5, "corner": [77, 222, 224], "correct": [29, 112, 115, 138, 139, 140, 141, 142, 221], "correctli": [16, 27, 29, 30, 31, 32, 33, 112, 115, 157], "correspond": [0, 1, 2, 5, 11, 29, 31, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 56, 58, 77, 90, 93, 107, 109, 117, 118, 119, 120, 121, 122, 126, 127, 135, 143, 145, 161, 162, 164, 165, 168, 188, 189, 195, 197, 208, 211, 213, 217, 219], "cort": 5, "cosh": [179, 196, 201], "cosin": [181, 185, 186, 195], "could": 27, "count": [25, 206], "counterclockwis": [78, 227], "cover": [8, 44, 45, 46], "creat": [2, 3, 7, 22, 23, 24, 26, 27, 30, 33, 132, 148, 157, 170, 174, 175, 176, 177, 178, 210, 216, 220, 231], "creation": [30, 33, 231], "criterion": [111, 112, 113, 114, 115], "critic": [16, 134, 157], "crop": [222, 224, 231], "cross": [59, 60, 111, 112], "cross_entropi": [55, 62], "crossentropyloss": [106, 116], "cube": 179, "cumul": [36, 88], "current": [27, 135, 138, 144, 147], "custom": [4, 7, 21, 26, 29, 30, 31, 32, 33, 78, 87, 89, 132, 157, 174], "custom_lenet": 21, "customiz": 231, "custommodul": 26, "customnetwork": 29, "customparametermodel": [31, 32], "d": [46, 53, 71, 75, 119, 122, 123, 127, 130, 148, 171, 227], "d_": [46, 71, 75, 98, 127, 130], "d_1": 123, "d_2": 123, "d_n": 123, "d_out": [46, 71, 75], "dampen": [135, 143, 145], "data": [4, 5, 7, 14, 26, 28, 32, 43, 44, 46, 48, 52, 53, 58, 78, 90, 94, 96, 97, 98, 109, 122, 125, 127, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 150, 157, 158, 159, 160, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 205, 211, 212, 213, 214, 215, 217, 220, 221, 224, 225, 226, 227, 228, 231], "databas": 5, "dataload": [2, 3], "dataset": [3, 22, 23, 24, 78, 137, 149, 220, 222, 231], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 167, "debug": [33, 147, 155, 231], "decai": [135, 136, 137, 138, 139, 140, 141, 142, 143, 145], "decompos": [9, 17, 19], "decomposit": [8, 9, 13, 16, 17, 19], "decoupl": [136, 137, 139, 140, 141, 142], "decreas": [138, 139, 144], "deep": [1, 3, 4, 7, 25, 65, 88, 91, 132, 157, 220, 221, 231], "deeper": [7, 91], "def": [0, 1, 2, 3, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 107, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221], "default": [1, 5, 15, 19, 26, 27, 28, 29, 30, 31, 32, 35, 38, 42, 44, 45, 46, 49, 50, 51, 52, 53, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 81, 82, 83, 84, 85, 86, 87, 89, 93, 96, 97, 98, 100, 101, 102, 103, 104, 107, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 133, 134, 141, 147, 152, 153, 154, 156, 158, 170, 171, 172, 173, 174, 175, 176, 177, 178, 190, 191, 192, 199, 203, 204, 205, 206, 208, 210, 211, 213, 216, 219, 221, 225, 226, 228], "defin": [1, 3, 4, 7, 21, 29, 30, 31, 32, 33, 88, 111, 112, 113, 114, 115, 125, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 153, 154, 168, 173, 184, 203, 220, 231], "definit": [7, 9, 231], "degre": [78, 227, 231], "delai": 135, "delta": [42, 61, 93, 113, 136], "delta_": [42, 93], "demonstr": [7, 8, 25, 132, 150], "denomin": [65, 67, 68, 117, 118, 119, 120, 121, 122, 123, 136, 137, 138, 139, 140, 141, 142, 143, 160], "denot": [14, 92, 96, 97, 98, 100, 101, 102, 103, 104, 203], "dens": [7, 137], "dense1": 7, "dense2": 7, "densiti": [36, 88], "depend": [7, 14, 15, 32, 59, 60, 61, 63, 64, 77, 96, 161, 171, 190, 192, 213, 217, 224, 225, 229], "depth": [30, 46, 53, 71, 75, 98, 119, 122, 127, 130], "depthwis": [44, 45, 46], "deriv": [16, 17, 42, 88, 93, 94, 96, 97, 98, 107, 109], "descend": 19, "descent": [7, 135, 145], "describ": [10, 11], "descript": 231, "deseri": 26, "design": [3, 4, 7, 8, 22, 23, 24, 25, 28, 30, 31, 32, 33, 35, 40, 91, 100, 132, 150, 231], "desir": [26, 203, 205], "destin": 27, "det": [8, 12], "det_a": 10, "detail": [7, 134, 157, 163], "determin": [0, 7, 8, 9, 10, 21, 81, 82, 85, 86, 96, 97, 98, 126, 127, 129, 130, 143, 147, 152, 153, 154, 156, 172, 173, 222, 224], "determinist": 78, "develop": [7, 132, 157, 231], "deviat": [81, 83, 85, 220, 223, 231], "diag": [16, 179], "diagon": [16, 17, 19, 171, 174, 202], "diagonaliz": 11, "dict": [21, 27, 29, 31, 108, 133], "dictionari": [21, 27, 28, 29, 31, 33, 133], "differ": [0, 14, 21, 30, 33, 42, 56, 77, 93, 107, 114, 134, 148, 155, 157, 169, 178, 204, 215, 231], "differenti": [7, 9, 18, 88, 132, 152, 153, 154, 156, 158, 170, 172, 173, 175, 177], "digit": [5, 24, 25], "dilat": [44, 45, 46, 96, 97, 98], "dilation_height": 48, "dilation_width": 48, "dim": [112, 115], "dimens": [10, 11, 13, 14, 17, 18, 19, 28, 42, 56, 58, 65, 67, 68, 77, 93, 96, 97, 98, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 148, 150, 152, 156, 158, 162, 172, 190, 191, 192, 199, 202, 203, 204, 206, 208, 211, 213, 215, 216, 217, 218, 219, 222, 224, 229], "dimension": [14, 16, 17, 19, 44, 45, 46, 69, 70, 71, 73, 74, 75, 96, 97, 98, 102, 103, 104, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 148, 162, 163, 167, 171, 188, 191, 199, 202, 204, 207, 212, 213, 215, 217], "diminish": 137, "direct": [11, 111, 112, 113, 114, 115, 135, 143, 144, 145], "directli": [29, 30, 31, 32, 77, 136, 137, 139, 140, 141, 142, 155, 157, 205, 231], "directori": [3, 4, 5], "disabl": [147, 149], "discontinu": 194, "discrep": [111, 112, 115], "discret": [153, 157], "disk": 3, "distribut": [36, 42, 77, 81, 82, 83, 84, 85, 86, 88, 93, 96, 97, 98, 100, 101, 102, 103, 104, 107, 109, 112, 115, 125, 126, 127, 152, 153, 154, 156, 157, 191, 199, 202, 204, 216, 223, 225, 226, 227, 228], "div": 179, "divers": [78, 226, 228, 231], "diversifi": 231, "divid": [1, 16, 30, 33, 42, 44, 45, 46, 93, 111, 112, 113, 114, 115, 160, 223], "divis": [7, 16, 44, 45, 46, 100, 101, 102, 103, 104, 136, 137, 138, 139, 140, 141, 142, 143, 160], "do": [16, 18, 26, 29, 30, 31, 32, 49, 50, 51, 52, 132, 142, 147, 178, 202, 211], "document": [4, 7, 134, 150, 157], "doe": [7, 14, 15, 16, 17, 19, 26, 29, 30, 31, 32, 33, 86, 138, 139, 144, 147, 149, 152, 153, 154, 155, 156, 170, 171, 172, 173, 174, 175, 176, 177, 178, 214], "doesn": 149, "domain": 4, "don": 149, "dot": [11, 14, 29, 30, 31, 32, 33, 123, 128, 129, 130, 162, 167, 179, 206, 208, 216, 219], "down": [3, 132, 229], "download": [4, 5], "drawback": 35, "drawn": [152, 153, 154, 156, 157, 227], "drop": [100, 101, 102, 103, 104], "dropout": [36, 49, 51, 52, 53, 100, 102, 103, 104], "dropout1d": [54, 55, 105, 106], "dropout1dmodel": 102, "dropout2d": [54, 55, 105, 106], "dropout3d": [54, 55, 105, 106], "dropoutmodel": 101, "dtype": [26, 28, 158, 170, 171, 172, 173, 174, 175, 176, 177, 178, 205, 221], "due": [14, 16, 44, 45, 90, 227], "duplic": [29, 31], "dure": [3, 7, 10, 11, 13, 16, 17, 19, 26, 27, 28, 29, 30, 31, 32, 33, 42, 49, 50, 51, 52, 53, 65, 67, 78, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 147, 149, 158, 159, 190, 191, 192, 199, 204, 221, 224, 227, 231], "dy": [38, 89], "dynam": [0, 2, 3, 27, 30, 31, 32, 33, 123, 137, 142, 147], "dynamicnetwork": 30, "e": [0, 10, 11, 13, 14, 17, 19, 21, 22, 23, 24, 26, 42, 92, 93, 100, 112, 133, 136, 143, 144, 174, 186, 188, 189, 196, 201, 202, 206, 225], "each": [1, 2, 3, 4, 11, 14, 16, 17, 19, 21, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 56, 58, 65, 67, 90, 93, 96, 97, 98, 100, 101, 102, 103, 104, 107, 109, 111, 112, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 136, 137, 138, 139, 140, 141, 142, 143, 144, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 206, 208, 210, 211, 213, 216, 217, 219, 220, 221, 222, 223, 224, 225, 227, 229, 231], "earli": 142, "eas": [4, 7], "easi": [2, 3, 4, 7, 28, 29, 31], "easier": [3, 29, 30, 33], "easili": [4, 28, 32, 231], "economi": 19, "edg": 211, "educ": [7, 25], "effect": [29, 30, 31, 32, 33, 42, 44, 45, 46, 48, 87, 88, 90, 92, 93, 94, 117, 118, 119, 120, 121, 122, 123, 147, 148, 149, 208, 219], "effici": [1, 2, 3, 5, 7, 8, 13, 18, 48, 112, 132, 149], "eig": 12, "eigenvalu": [11, 17], "eigenvector": 11, "eigval": 11, "eigvec": 11, "either": [58, 150, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 205, 210], "element": [0, 16, 17, 28, 32, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 90, 93, 96, 97, 98, 100, 101, 102, 103, 104, 111, 112, 113, 114, 115, 123, 125, 126, 127, 128, 129, 130, 148, 158, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 207, 210, 211, 213, 214, 215, 217], "elementwise_affin": 123, "elsewher": [128, 129, 130, 174], "elu": [37, 55, 95, 106], "elumodel": 87, "empti": [27, 33, 179], "empty_lik": 179, "enabl": [0, 1, 2, 3, 7, 14, 19, 27, 28, 29, 30, 31, 32, 90, 96, 97, 98, 107, 109, 132, 134, 147, 149, 152, 153, 154, 156, 158, 220], "encapsul": [132, 158], "encod": [112, 115], "encourag": [101, 102, 103, 104, 111, 112, 115, 138], "end": [15, 35, 38, 39, 40, 87, 89, 90, 91, 113, 114, 115, 125, 126, 127, 128, 129, 130, 142, 144, 164, 165, 167, 170, 180, 184, 190, 192, 194, 206, 211, 231], "enforc": [27, 29, 31], "engin": 16, "enhanc": [23, 29, 31, 231], "ensur": [3, 5, 16, 17, 18, 26, 27, 28, 29, 30, 31, 32, 33, 42, 89, 93, 100, 101, 102, 103, 104, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 132, 133, 135, 136, 138, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 168, 191, 199, 204, 211, 221, 222, 223, 224, 225, 229, 231], "enter": 149, "entir": [3, 51, 52, 53, 103, 104, 157], "entri": [21, 215], "entropi": [59, 60, 111, 112], "environ": 7, "ep": [59, 60, 65, 67, 68, 111, 112, 117, 118, 119, 120, 121, 122, 123, 136, 137, 138, 139, 140, 141, 142, 143], "epoch": [1, 3], "epsilon": [111, 112, 117, 118, 119, 120, 121, 122, 123, 136, 137, 138, 139, 140, 141, 142, 143], "equal": [14, 77, 125, 126, 127, 222, 224], "equat": [11, 16, 18], "equival": [163, 202, 212], "error": [0, 3, 11, 13, 27, 30, 31, 32, 33, 36, 61, 63, 88, 111, 112, 113, 114, 132, 133, 149, 150], "especi": [3, 29, 31, 32, 92, 148, 149, 150, 155, 220, 221, 225, 231], "essenti": [1, 3, 7, 8, 14, 16, 45, 48, 132, 155, 157, 190, 220, 221, 225, 231], "estim": [114, 138, 139, 140, 141, 142, 143], "eta": 144, "eta_": 144, "etc": [111, 221], "euclidean": 15, "evalu": [27, 65, 67, 100, 101, 102, 103, 104, 117, 118, 119, 120, 121, 122, 231], "even": [136, 149, 170, 171, 174, 175, 176, 177, 178], "evenli": 170, "everi": [1, 231], "everywher": 194, "exact": [27, 30, 203, 225, 227], "exactli": 33, "exampl": [4, 20, 163], "except": [0, 194, 206, 208, 219], "exclus": [153, 156, 170], "exdb": 5, "execut": [30, 149], "exist": [18, 29, 31, 33, 206], "exit": 149, "exp": [35, 40, 41, 43, 87, 91, 179], "expand": [4, 48, 213, 217], "expect": [9, 30, 33, 100, 101, 102, 103, 104, 123, 132, 150], "expens": 3, "experi": [7, 155, 157, 231], "experiment": 157, "explan": [14, 16, 135], "explicit": 33, "explicitli": [29, 31], "explod": [91, 117, 118, 119], "explor": [132, 157], "expon": [14, 168], "exponenti": [35, 40, 42, 87, 91, 93, 100, 138, 139, 140, 141, 142, 188], "extend": 4, "extens": 134, "extern": [4, 7], "extract": [25, 48, 98, 125, 127, 171, 190, 192, 222, 224], "extractor": [21, 22, 23, 24], "extrem": 16, "ey": 179, "f": [1, 4, 5, 7, 31, 32, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 93], "facilit": [29, 33, 42, 93, 96, 97, 98, 132, 134, 223, 231], "factor": [35, 44, 45, 46, 48, 85, 86, 135, 142, 143, 144, 145, 150], "failur": [29, 30, 31, 32, 132], "fals": [1, 5, 19, 26, 27, 28, 49, 50, 51, 52, 53, 65, 67, 77, 79, 81, 82, 83, 84, 85, 86, 96, 97, 98, 107, 109, 138, 139, 143, 147, 152, 153, 154, 156, 158, 170, 171, 172, 173, 174, 175, 176, 177, 178, 190, 191, 192, 199, 204, 205, 221], "fan": [81, 82, 85, 86], "fan_in": [81, 82], "fan_out": [81, 82], "fast": 142, "faster": [137, 141, 149], "fc": [30, 97, 98, 125, 126, 127, 128, 129, 130], "fc1": [23, 24, 29, 33, 88, 90, 91, 92, 94, 109], "fc2": [23, 24, 29, 33, 88, 90, 91, 92, 94, 109], "fc3": 24, "featur": [3, 21, 22, 23, 24, 25, 56, 58, 65, 98, 101, 102, 103, 104, 107, 109, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 137], "feature_extractor": 21, "fed": [3, 231], "feed": [3, 158, 231], "fetch": 0, "fewer": 1, "field": [5, 25], "file": 3, "fill": [79, 83, 84, 152, 153, 154, 156, 175, 176, 177, 178], "filter": [44, 45, 46, 48, 97, 98], "filter_height": 48, "filter_s": 48, "filter_width": 48, "final": [29, 30, 31, 32, 33, 220, 231], "find": [18, 190, 192], "fine": 231, "finish": 149, "first": [5, 11, 21, 30, 31, 56, 107, 138, 139, 140, 141, 142, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 210, 219, 220, 221, 231], "fit": 132, "fix": [30, 211], "flatten": [21, 33, 48, 167, 209, 212, 213], "flexibl": [1, 3, 4, 7, 21, 29, 30, 31, 32, 33, 132, 134, 150, 175, 176, 221, 231], "flip": [226, 228, 231], "float": [2, 5, 26, 28, 35, 38, 49, 50, 51, 52, 53, 59, 60, 61, 65, 67, 68, 78, 79, 83, 84, 85, 86, 87, 89, 100, 101, 102, 103, 104, 111, 112, 113, 117, 118, 119, 120, 121, 122, 123, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 156, 158, 170, 173, 184, 205, 223, 225, 226, 227, 228], "float32": [26, 28, 158, 170, 171, 174, 175, 177, 205, 221], "float64": [178, 205, 221], "flow": [33, 86, 88, 92, 94, 96, 97, 98, 107, 109, 147], "fly": [2, 3], "fname": 3, "focu": 7, "focus": 7, "follow": [0, 7, 8, 11, 17, 18, 19, 35, 36, 38, 39, 40, 41, 42, 43, 56, 58, 77, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 150, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 190, 192, 210, 214, 222, 223, 224, 225, 226, 227, 228, 231], "form": [17, 167, 210, 213, 217, 231], "format": [2, 3, 5, 112, 115, 221], "formul": 36, "formula": [11, 19, 42, 93, 113, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 163, 204, 225], "forward": [7, 21, 22, 23, 24, 26, 27, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "found": 7, "foundat": [27, 132, 134, 158], "four": 211, "frac": [9, 10, 11, 13, 14, 15, 16, 18, 19, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 56, 58, 69, 70, 71, 73, 74, 75, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 140, 141, 142, 143, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 223], "frame": 53, "framework": [4, 7, 25, 112, 115, 117, 118, 119, 120, 121, 122, 133, 134, 231], "frequent": [112, 115], "from": [0, 1, 2, 3, 4, 5, 7, 14, 16, 26, 27, 28, 29, 30, 31, 32, 33, 48, 56, 65, 67, 77, 79, 81, 82, 83, 84, 85, 86, 96, 97, 98, 100, 101, 102, 103, 104, 107, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 132, 133, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 148, 149, 150, 152, 153, 154, 156, 157, 158, 163, 164, 165, 169, 171, 190, 191, 192, 199, 204, 206, 208, 210, 213, 215, 216, 217, 219, 222, 223, 224, 225, 226, 227, 228, 231], "full": 19, "full_matric": 19, "fulli": [4, 8, 21, 22, 23, 24, 25, 58, 109, 157], "function": [3, 4, 5, 7, 8, 27, 29, 30, 31, 32, 33, 87, 88, 89, 90, 91, 92, 93, 94, 100, 101, 102, 103, 104, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 132, 134, 150, 157, 220, 231], "fundament": [7, 58, 109, 221], "further": [7, 157, 191, 199, 204], "futur": 108, "g": [0, 10, 11, 14, 17, 19, 21, 22, 23, 24, 100, 133, 136, 143, 206, 225], "g_": 137, "g_t": 143, "gain": [85, 86], "gamma": [117, 118, 119, 120, 121, 122, 123], "gaussian": [36, 88], "gelu": [37, 55, 95, 106], "gelunetwork": 88, "gener": [16, 78, 100, 101, 102, 103, 104, 121, 139, 141, 142, 149, 152, 153, 154, 155, 156, 157, 162, 170, 172, 173, 210, 224, 225, 226, 228, 231], "get": 5, "give": [7, 135, 143], "given": [10, 11, 14, 16, 17, 19, 48, 111, 112, 115, 133, 147, 176, 178, 220, 225, 226, 228, 231], "global": [0, 147, 149, 155, 157], "goal": [111, 112, 115], "grad": [26, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 48, 56, 58, 77, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 133, 134, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 226, 228, 229], "grad_output": 14, "gradient": [7, 8, 26, 28, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 149, 152, 153, 154, 156, 170, 171, 172, 173, 174, 175, 176, 177, 178, 205, 221], "graph": [7, 86, 158, 170, 171, 174, 175, 176, 177, 178, 221], "grayscal": [5, 21, 22, 23, 24, 225, 231], "greater": 184, "green": 225, "grid": 210, "group": [30, 44, 45, 46, 96, 97, 98, 133, 134], "group1": 30, "group2": 30, "guarante": 155, "h": [45, 46, 48, 52, 53, 70, 71, 74, 75, 77, 78, 118, 119, 121, 122, 127, 130, 222, 224], "h_": [45, 46, 70, 71, 74, 75, 77, 97, 98, 126, 127, 129, 130], "h_out": [45, 46, 70, 71, 74, 75], "h_stack": 208, "ha": [0, 11, 33, 44, 45, 46, 111, 112, 117, 118, 119, 120, 121, 122, 123, 133, 134, 163, 202, 206, 208, 216, 219, 225], "half": 197, "hand": 18, "handl": [0, 3, 7, 16, 27, 29, 30, 31, 32, 33, 112, 115, 132, 134, 149], "handwritten": [5, 24], "hardwar": 7, "hat": [138, 139, 140, 141, 142], "have": [0, 1, 10, 11, 13, 16, 17, 19, 28, 30, 32, 33, 45, 46, 86, 132, 174, 175, 176, 177, 178, 190, 192, 206, 208, 210, 215, 216, 219, 223, 229], "height": [45, 46, 48, 52, 53, 70, 71, 74, 75, 77, 78, 97, 98, 118, 119, 121, 122, 126, 127, 129, 130, 222, 224, 229], "help": [7, 38, 40, 53, 87, 89, 91, 94, 117, 118, 119, 125, 126, 128, 129, 135, 138, 139, 141, 147, 148, 149, 150], "henc": 214, "here": [3, 9, 27, 56, 132, 134, 148, 149, 150, 157, 220, 221, 231], "hidden": 30, "hidden_s": 30, "hierarch": [30, 33, 132], "hierarchi": 97, "hierarchicalnetwork": 30, "high": [7, 153, 156], "higher": [112, 115, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 162, 163, 167, 188], "highest": 153, "highlight": [128, 129, 130], "hint": 150, "histor": 137, "histori": [152, 153, 154, 156, 170, 171, 172, 173, 174, 175, 176, 177, 178], "hold": [29, 30, 31, 32], "horizont": [208, 216, 226, 231], "hot": [112, 115], "how": [2, 3, 7, 30, 33, 132, 150, 231], "howev": [26, 86], "hstack": 209, "http": 5, "huber": [61, 113], "huber_loss": [55, 62], "huberloss": [106, 116], "huberregressionmodel": 113, "hue": 231, "hyperbol": [43, 94, 186, 196, 201], "hyperparamet": [133, 135], "i": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 81, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 194, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "ideal": [7, 33], "ident": [13, 14, 78, 106, 110, 155, 157, 174, 214], "identifi": 31, "idx": [2, 3], "ii": 202, "ij": [42, 77, 93, 161, 162, 163, 167, 210], "ik": [161, 162, 163], "ill": [10, 16], "imag": [3, 4, 5, 21, 22, 23, 24, 25, 45, 67, 78, 97, 121, 210, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "image_dir": 3, "image_path": 3, "imagedataset": 3, "imageio": 3, "imbal": [112, 115], "impact": 141, "implement": [2, 3, 7, 16, 21, 25, 27, 48, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 208, 219, 225], "impli": [96, 97], "import": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 50, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "improp": [30, 33, 157], "improv": [65, 78, 88, 91, 94, 135, 136, 137, 138, 139, 140, 141, 142, 143, 150, 224, 227, 231], "imread": 3, "in1_featur": [56, 107], "in2_featur": [56, 107], "in_channel": [30, 33, 96, 97, 98, 118, 119, 125, 126, 127, 128, 129, 130, 132], "in_featur": [29, 30, 33, 58, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 100, 101, 102, 107, 109, 111, 112, 113, 114, 115, 117, 120, 123, 125, 126, 127, 128, 129, 130], "includ": [3, 4, 7, 8, 14, 15, 21, 27, 28, 30, 32, 33, 77, 132, 133, 134, 141, 150, 157, 163, 211], "inclus": [28, 31, 153, 156], "incom": [58, 109], "incomplet": 2, "incompletedataset": 2, "incorpor": [19, 88], "increas": [44, 45, 46, 48, 78, 137, 144, 148, 208, 219, 225, 226, 228, 231], "independ": [30, 44, 45, 46, 100, 101, 102, 103, 104, 123, 163, 173, 223, 225, 227, 229], "index": [0, 2, 5, 148, 170, 171, 174, 210, 214], "indexerror": 0, "indic": [0, 1, 28, 30, 32, 33, 60, 64, 112, 115, 125, 147, 158, 222, 224], "individu": [3, 30, 33, 113, 123, 134, 137, 144], "induc": [40, 91], "inf": 200, "infer": [30, 33, 149], "infin": [17, 19, 140], "inform": [7, 26, 134, 136, 149], "infti": [15, 142], "inherit": [1, 135, 143, 145], "init": 80, "initi": [1, 26, 28, 29, 30, 31, 32, 33, 79, 81, 82, 83, 84, 85, 86, 96, 97, 98, 107, 109, 111, 112, 113, 114, 115, 117, 118, 119, 123, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152, 155, 156, 157, 170, 174, 175, 176, 177, 178, 205], "initial_accumulator_valu": 137, "inner": [7, 161, 179], "input": [7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 157, 158, 159, 161, 162, 163, 167, 171, 173, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "input1": 107, "input2": 107, "input_": [35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78], "input_1": 56, "input_2": 56, "input_data": [87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 123, 125, 126, 127, 128, 129, 130], "input_s": [30, 32, 93, 112, 115], "input_tensor": [7, 21, 22, 23, 24, 26, 29, 30, 31, 32, 33, 42, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 222, 223, 224, 225, 226, 227, 228, 229], "insid": [3, 147, 149], "insight": 7, "inspect": [27, 28, 33, 133], "instabl": [16, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145], "instal": 7, "instanc": [0, 1, 7, 22, 23, 24, 27, 28, 29, 31, 32, 33, 67, 120, 121, 122, 123, 133, 205, 213, 217, 231], "instance_norm": [55, 66, 120, 121, 122], "instancenorm1d": [106, 124], "instancenorm1dmodel": 120, "instancenorm2d": [106, 124], "instancenorm3d": [106, 124], "instanti": 2, "instead": [7, 29, 30, 31, 32, 33, 81, 82, 85, 86, 138, 139, 140, 149, 150, 172, 173], "int": [0, 1, 2, 5, 14, 15, 21, 26, 28, 42, 44, 45, 46, 48, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 83, 84, 85, 86, 93, 96, 97, 98, 107, 109, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 138, 139, 140, 141, 142, 144, 152, 153, 154, 155, 156, 158, 170, 171, 172, 174, 175, 177, 184, 190, 191, 192, 199, 203, 204, 205, 206, 211, 213, 214, 215, 216, 217, 218, 222, 224, 229], "integ": [1, 3, 14, 44, 45, 46, 96, 97, 98, 123, 126, 127, 128, 129, 130, 150, 153, 154, 156, 157, 172, 175, 177, 191, 199, 203, 204, 211, 213, 214, 217], "integr": [1, 2, 4, 5, 8, 28, 30, 32, 33, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 107, 109, 125, 126, 127, 128, 129, 130], "intend": [26, 31, 32], "intens": [16, 223, 225], "intent": 150, "interact": [56, 107, 132, 157], "interfac": [2, 27, 30, 134], "interfer": [147, 149], "intermedi": 16, "intern": [29, 30, 31, 32, 33, 112, 115, 132, 222, 223, 224, 225, 226, 227, 228, 229], "interpol": [55, 76, 229], "interpret": [42, 93, 150, 206], "interv": [152, 156, 170], "introduc": [25, 39, 88, 90, 92, 94, 100, 101, 102, 103, 104, 224, 227, 231], "introspect": 33, "intuit": [7, 29, 31, 132, 231], "inv": 12, "inv_a": 13, "invari": [126, 129], "invers": [7, 10, 13, 14, 16, 137, 181, 182, 183], "invert": [10, 13, 14, 18], "involv": [9, 10, 11, 13, 16, 17, 19, 35, 36, 38, 39, 40, 41, 43, 56, 58, 77, 96, 97, 98, 107, 109, 150, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 178, 188, 189, 190, 192, 195, 197, 210, 211, 213, 217], "is_leaf": 158, "issu": [3, 91, 117, 118, 119, 138, 139], "item": 114, "iter": [0, 1, 2, 3, 26, 27, 30, 32, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 170], "ith": [42, 93], "its": [4, 14, 16, 26, 29, 30, 31, 32, 44, 45, 46, 48, 78, 86, 88, 90, 128, 129, 130, 132, 133, 136, 144, 147, 148, 149, 170, 172, 173, 177, 190, 192, 205, 214, 223, 226, 228, 231], "itself": [9, 14, 29, 30, 31, 32], "j": [5, 42, 93, 117, 118, 119, 120, 121, 122, 125, 126, 128, 129, 210, 216, 222, 224], "jk": 162, "join": [3, 206], "k": [14, 44, 96, 112, 118, 119, 121, 122, 125, 128, 129, 161, 162, 171, 174, 206], "k_d": [46, 98, 127, 130], "k_h": [45, 46, 97, 98, 126, 127, 130], "k_w": [45, 46, 97, 98, 126, 127, 130], "kaim": [81, 82, 85, 86], "kaiming_norm": 80, "kaiming_uniform": 80, "keep": [27, 90, 136, 149, 214], "keep_grad": [28, 152, 153, 154, 156, 158, 170, 171, 172, 173, 174, 175, 176, 177, 178, 205, 221], "keep_var": 27, "keepdim": [190, 191, 192, 199, 204], "kei": [25, 27, 29, 31, 33, 133], "kept": [191, 199, 204], "kernel": [21, 22, 23, 24, 44, 45, 46, 48, 69, 70, 71, 73, 74, 75, 96, 97, 98, 126, 127, 130], "kernel_s": [30, 33, 69, 70, 71, 73, 74, 75, 96, 97, 98, 118, 119, 125, 126, 127, 128, 129, 130], "keyerror": 27, "keyword": [27, 108], "kj": [161, 163], "kroneck": [42, 93], "kwarg": [22, 23, 24, 27, 108], "l": [9, 16, 44, 51, 69, 73, 100, 101, 102, 103, 104, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123], "l2": [135, 136, 137, 138, 139, 140, 141, 142, 143, 145], "l_": [44, 69, 73, 96, 125, 128], "l_out": [44, 69, 73], "label": [4, 5, 111, 112, 115], "lambd": 135, "lambda": [11, 40, 91, 135, 139], "lambda_1": 11, "lambda_2": 11, "lambda_i": 11, "lambda_n": 11, "languag": [4, 96, 107, 125, 128], "larg": [0, 3, 16, 113, 132, 135, 138, 139, 140, 143, 144, 145, 149], "larger": [29, 31, 44, 45, 46, 48, 135, 164, 211, 222, 224, 229], "largest": 190, "last": [1, 42, 68, 93, 162, 163, 206, 226, 228], "latest": 4, "layer": [7, 21, 22, 23, 24, 25, 27, 29, 30, 33, 42, 58, 65, 67, 68, 81, 82, 85, 86, 93, 96, 97, 98, 107, 108, 109, 115, 123, 125, 126, 127, 128, 129, 130, 132, 157, 211, 221], "layer_group": 30, "layer_norm": [55, 66, 123], "layer_sequ": [30, 33], "layernorm": [106, 124], "layernormmodel": 123, "lead": [30, 33, 88, 120, 121, 122, 123, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 157], "leaf": 158, "leaki": [38, 89], "leaky_relu": [37, 55, 89], "leakyrelu": [95, 106], "learn": [1, 3, 4, 5, 7, 14, 16, 25, 29, 30, 31, 32, 39, 42, 87, 89, 90, 93, 96, 97, 98, 101, 102, 103, 104, 107, 109, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 155, 220, 221, 231], "learnabl": [26, 27, 28, 65, 67, 68, 96, 97, 98, 107, 109, 117, 118, 119, 120, 121, 122, 123, 132], "least": [16, 17, 19, 202], "lecun": [5, 25], "left": [14, 15, 16, 19, 36, 42, 88, 93, 111, 112, 113, 115, 117, 118, 119, 120, 121, 122, 123, 128, 129, 130, 222, 224], "leftarrow": 141, "len": [0, 1, 2, 3, 210], "lenet": [20, 22, 23, 24, 25], "lenet_1": 25, "lenet_4": 25, "lenet_5": 25, "length": [30, 44, 51, 69, 73, 96, 108, 117, 120, 125, 128, 211, 223], "leq": [113, 142, 168, 184], "lerp": 77, "less": [0, 35, 38, 61, 87, 89, 112, 113, 115, 184], "let": 11, "level": 7, "leverag": [18, 25, 132], "librari": [3, 7, 8, 27, 132, 133, 134, 150, 157, 158, 231], "lightweight": 7, "like": [7, 25, 26, 27, 30, 33, 44, 85, 86, 91, 100, 117, 118, 119, 120, 121, 122, 147, 148, 150, 205, 221, 231], "likelihood": [64, 112, 115], "limit": [136, 184], "linalg": [7, 12], "linalgerror": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "linear": [7, 8, 9, 16, 17, 18, 29, 30, 31, 33, 35, 36, 38, 39, 40, 81, 82, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 100, 101, 102, 107, 108, 111, 112, 113, 114, 115, 117, 120, 123, 125, 126, 127, 128, 129, 130, 174], "linearli": 113, "list": [0, 1, 21, 26, 28, 29, 30, 31, 32, 68, 108, 123, 133, 150, 152, 153, 154, 156, 158, 171, 172, 173, 175, 176, 177, 178, 203, 214, 215, 218, 220], "listdir": 3, "liter": [59, 60, 61, 63, 64, 77, 81, 82, 96, 97, 98, 111, 112, 113, 114, 115, 210], "ln": 168, "load": [3, 4, 5, 26, 27, 28, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "load_state_dict": [27, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "loader": [1, 2, 3], "local": [25, 48, 96], "locat": 77, "log": [64, 111, 112, 115, 179], "log_softmax": 115, "logarithm": [168, 188, 189], "logic": [3, 132, 133], "logit": [42, 93, 112], "logsoftmax": [112, 115], "long": [141, 203], "loop": [1, 30, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "loss": [7, 16, 29, 30, 31, 32, 33, 42, 59, 60, 61, 63, 64, 87, 88, 89, 90, 91, 92, 93, 94, 100, 101, 102, 103, 104, 108, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "low": [7, 153, 156], "lower": [9, 84, 135, 143, 144, 145, 156], "lowest": 153, "lr": [133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "lu": 13, "lucid": [0, 1, 2, 5, 12, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 179, 209, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "m": [29, 30, 33, 126, 127, 129, 130, 138, 139, 140, 141, 142, 174], "m_": [138, 139, 140, 141, 142], "m_t": [141, 142], "machin": [3, 5, 7, 16, 138, 148, 155], "magnitud": [143, 144, 231], "mai": [3, 7, 11, 13, 16, 30, 32, 78, 113, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 149, 157, 225, 231], "main": [7, 17, 30, 171, 174], "maintain": [16, 26, 27, 29, 30, 31, 33, 40, 81, 82, 85, 86, 87, 88, 91, 100, 101, 102, 103, 104, 117, 118, 119, 120, 121, 122, 138, 143, 222, 225, 229], "make": [1, 3, 7, 21, 30, 33, 92, 112, 113, 123, 126, 129, 132, 137, 138, 139, 140, 148, 157, 158, 163, 210, 220, 231], "manag": [7, 27, 29, 30, 31, 32, 33, 132, 134, 147, 149, 157], "manhattan": 15, "manipul": [7, 29, 31, 231], "manner": [30, 33], "manual": [59, 60, 64, 111, 112, 115, 149], "map": [27, 41, 43, 92, 94], "mask": [26, 100, 101, 102, 103, 104], "match": [18, 27, 30, 33, 59, 61, 63, 68, 133, 188, 213, 214, 217, 218, 223, 231], "math": [185, 195, 200], "mathbf": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 56, 58, 77, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 161, 162, 163, 167, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229], "mathcal": [81, 83, 85, 100, 101, 102, 103, 104, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123], "mathemat": [13, 224, 226, 227, 228], "mathrm": 16, "matmul": 179, "matric": [8, 10, 11, 13, 16, 18, 19, 161, 162, 163, 174, 210], "matrix": [7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 48, 56, 108, 109, 132, 161, 210], "matrix_pow": 12, "max": [15, 39, 73, 74, 75, 90, 128, 129, 130, 140, 164, 179, 184], "max_pool": [128, 129, 130], "max_pool1d": [55, 72], "max_pool2d": [55, 72], "max_pool3d": [55, 72], "max_valu": 184, "maxim": 3, "maximum": [15, 90, 128, 129, 130, 138, 140, 179, 184, 190, 227], "maxpool1d": [106, 131], "maxpool1dmodel": 128, "maxpool2d": [30, 33, 97, 106, 131], "maxpool2dmodel": 129, "maxpool3d": [98, 106, 131], "maxpool3dmodel": 130, "mean": [5, 17, 26, 40, 44, 45, 46, 49, 59, 60, 61, 63, 64, 65, 67, 83, 87, 88, 89, 90, 91, 92, 94, 98, 100, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 138, 139, 140, 141, 142, 143, 147, 154, 179, 184, 188, 189, 190, 192, 195, 197, 199, 202, 203, 204, 220, 223, 231], "meaning": [33, 150], "measur": [111, 112, 114, 115], "mechan": [7, 32, 56], "membership": 111, "memori": [2, 3, 149, 172, 173], "meshgrid": 209, "method": [3, 7, 8, 13, 20, 29, 30, 31, 32, 33, 59, 60, 61, 63, 64, 81, 82, 85, 86, 111, 112, 113, 114, 115, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 157], "middl": 148, "might": 132, "min": [165, 179, 184], "min_valu": 184, "mind": [0, 3, 7, 30, 33, 149], "mini": 1, "minim": [4, 7, 33, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 134], "minimalist": 7, "minimum": [179, 184, 192], "minu": 92, "mirror": [176, 178], "mismatch": [27, 132, 133], "miss": [27, 132], "mitig": [38, 87, 89, 91, 117, 118, 119], "mnist": [4, 6, 22, 23], "mnist_train": [4, 5], "mode": [7, 53, 65, 67, 77, 81, 82, 100, 101, 102, 103, 104, 211], "model": [1, 3, 4, 7, 14, 17, 19, 21, 26, 27, 28, 29, 30, 31, 32, 33, 42, 78, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 123, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 157, 220, 221, 231], "modern": 25, "modif": [33, 149], "modifi": [29, 30, 31, 32, 79, 81, 82, 83, 84, 85, 86, 100, 147, 149, 155, 208, 219], "modul": [5, 7, 21, 26, 28, 29, 30, 31, 32, 33, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 157, 221, 231], "modular": [3, 7, 25, 27, 30, 33, 132, 231], "moduledict": [30, 31, 33, 34], "modulelist": [32, 33, 34], "moment": [138, 139, 140, 141, 142], "momentum": [65, 67, 117, 118, 119, 120, 121, 122, 135, 141, 143, 145], "momentum_decai": 141, "moor": 16, "more": [3, 4, 7, 11, 29, 30, 33, 87, 101, 102, 103, 104, 132, 133, 134, 135, 136, 139, 140, 143, 144, 145, 154, 163, 202, 216, 231], "most": [8, 129, 221, 222, 231], "move": [135, 143], "mse": [61, 63, 113, 114], "mse_loss": [55, 62], "mseloss": [106, 116], "mu": [83, 117, 118, 119, 120, 121, 122, 123, 204], "mu_c": 223, "mu_i": [120, 121, 122], "much": 231, "mul": 179, "multi": [3, 4, 42, 60, 64, 93, 112, 115, 191, 199, 204], "multidimension": [152, 156, 172], "multipl": [1, 3, 7, 8, 14, 18, 31, 32, 33, 48, 77, 78, 100, 101, 102, 103, 104, 112, 115, 132, 148, 152, 153, 154, 156, 161, 166, 172, 173, 220, 225, 231], "multipli": [14, 32, 58, 109, 144, 166, 167], "must": [0, 1, 3, 9, 10, 11, 13, 14, 17, 18, 19, 27, 29, 30, 31, 32, 33, 68, 100, 101, 102, 103, 104, 115, 133, 149, 202, 206, 208, 211, 213, 214, 216, 217, 219, 222, 223, 224, 225, 226, 228], "mymodel": [27, 28, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "myoptim": [133, 134], "n": [14, 15, 25, 29, 30, 33, 44, 45, 46, 48, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 81, 83, 85, 96, 97, 98, 103, 104, 107, 109, 111, 112, 114, 115, 117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 174, 191, 202, 204], "n1": 15, "nabla_": [136, 137, 138, 139, 140, 141, 142, 144], "nabla_t": 142, "nadam": 146, "name": [27, 29, 31, 33, 150], "nan": [17, 19], "natur": [16, 25, 96, 107, 125, 128, 168, 188, 189], "ndarrai": [26, 28, 150, 158, 171, 173, 176, 178, 205], "ndim": [17, 19, 28, 158], "ne": 14, "nearest": 77, "necessari": [4, 5, 16, 149, 208, 219], "need": [2, 4, 30, 31, 32, 42, 107, 132, 149, 172, 173, 220, 221, 231], "neg": [14, 16, 19, 35, 64, 78, 87, 89, 90, 91, 112, 115, 144, 206], "negative_slop": [38, 89], "neglect": 32, "neighbor": 77, "neq": 15, "nest": [30, 33, 132], "nesterov": 141, "network": [3, 4, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 43, 44, 45, 46, 56, 58, 65, 78, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 143, 145, 156, 157, 158, 170, 175, 177, 190, 192, 211, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "neural": [3, 4, 7, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 39, 40, 41, 42, 43, 44, 45, 46, 56, 58, 65, 78, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 143, 145, 156, 157, 158, 170, 175, 177, 190, 192, 211, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "neuralnetwork": 90, "neuron": 89, "never": 225, "new": [27, 28, 35, 36, 38, 39, 40, 41, 43, 56, 58, 77, 81, 82, 83, 84, 85, 86, 133, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 205, 206, 208, 211, 213, 214, 216, 217, 218, 219], "next": [33, 220], "nll": 64, "nll_loss": [55, 62], "nllloss": [106, 116], "nn": [5, 7, 21, 34, 37, 47, 54, 57, 62, 66, 72, 76, 80, 95, 99, 105, 106, 110, 116, 124, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 221, 231], "no_grad": 147, "node": 158, "nois": [19, 157], "non": [11, 14, 16, 19, 32, 36, 38, 39, 81, 82, 87, 88, 89, 90, 91, 92, 94, 100, 101, 102, 103, 104, 138, 139, 149, 168, 184], "none": [0, 1, 2, 5, 21, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 148, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 176, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 228, 229], "norm": [8, 12, 140], "normal": [5, 36, 40, 42, 43, 65, 67, 68, 80, 81, 85, 88, 91, 93, 100, 117, 118, 119, 120, 121, 122, 123, 143, 154, 157, 220, 230, 231], "normalized_shap": [68, 123], "note": [44, 100], "noth": [49, 50, 51, 52], "notimplementederror": [2, 27, 133], "notin": 184, "np": [26, 28, 112, 115, 150, 158, 163, 170, 171, 174, 175, 177, 178, 189, 205, 221], "npy": 5, "num_class": [93, 112, 115], "num_featur": [33, 117, 118, 119, 120, 121, 122], "num_paramet": 32, "number": [0, 1, 2, 5, 10, 11, 13, 16, 18, 19, 21, 22, 23, 24, 28, 30, 32, 33, 44, 45, 46, 48, 51, 52, 53, 56, 58, 60, 64, 65, 67, 77, 78, 81, 82, 85, 86, 92, 96, 97, 98, 107, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 135, 152, 155, 156, 158, 168, 170, 172, 174, 190, 191, 192, 203, 204, 206, 208, 211, 213, 214, 215, 217, 219, 223, 225, 226, 228, 231], "numer": [13, 16, 59, 60, 65, 67, 68, 111, 112, 117, 118, 119, 120, 121, 122, 123, 136, 137, 138, 139, 140, 141, 142, 143, 150, 160, 170, 175, 177], "numpi": [7, 26, 28, 112, 115, 150, 158, 163, 171, 174, 189, 202, 205, 211, 213, 217, 221, 231], "o": [3, 127, 130, 175, 176], "object": [1, 3, 8, 27, 31, 32, 114, 132, 149, 159, 160, 164, 165, 166, 169, 205], "observ": 138, "obtain": 1, "occur": [78, 149, 206], "occurr": 14, "odot": [100, 101, 102, 103, 104], "off": 147, "offer": [4, 7, 132, 134, 157, 231], "offset": 174, "often": [14, 44, 45, 46, 48, 112, 115, 170, 177, 221, 225, 229, 231], "older": 141, "onc": 149, "one": [0, 32, 33, 42, 44, 58, 69, 73, 91, 92, 93, 96, 102, 112, 115, 117, 120, 125, 128, 133, 148, 150, 154, 169, 176, 190, 192, 207, 212, 216, 221], "ones": [56, 58, 96, 97, 98, 109, 117, 118, 119, 120, 121, 122, 123, 132, 174, 176, 179], "ones_lik": 179, "onli": [7, 77, 90, 100, 101, 102, 103, 104, 111, 112, 115, 117, 118, 119, 120, 121, 122, 123, 128, 129, 130, 144, 147, 170, 184, 190, 192, 202, 211, 212, 214, 215], "onto": [17, 19], "openml": 5, "oper": [3, 7, 8, 13, 16, 26, 27, 30, 35, 36, 38, 39, 40, 41, 43, 44, 45, 46, 48, 53, 56, 58, 69, 70, 71, 73, 74, 75, 77, 78, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 125, 126, 127, 128, 129, 130, 132, 147, 148, 149, 150, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 175, 177, 188, 189, 190, 191, 192, 195, 197, 199, 202, 204, 206, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 223, 229], "operatornam": [14, 16], "opposit": 135, "optim": [3, 7, 8, 14, 16, 17, 19, 26, 28, 31, 32, 48, 96, 97, 98, 132, 149], "optimizer_st": [133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "option": [1, 5, 15, 19, 21, 26, 27, 28, 29, 30, 31, 32, 35, 38, 42, 45, 46, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 81, 82, 83, 84, 85, 86, 87, 89, 93, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 133, 135, 143, 145, 152, 153, 154, 156, 158, 170, 171, 172, 173, 174, 175, 176, 177, 178, 190, 191, 192, 199, 203, 204, 205, 206, 210, 213, 215, 216, 221, 225, 226, 228], "ord": 15, "order": [1, 3, 15, 19, 29, 30, 31, 32, 33, 203, 220], "ordered_dict": 33, "ordereddict": [27, 29, 30, 33], "organ": [29, 30, 31, 33], "orient": 231, "origin": [24, 49, 78, 94, 211, 212, 213, 214, 217, 218, 229], "orthogon": [16, 17, 19], "orthonorm": 17, "oscil": [135, 143, 145], "other": [2, 3, 7, 13, 21, 24, 26, 27, 30, 33, 81, 82, 100, 132, 133, 147, 149, 157, 158, 170, 172, 175, 177, 202, 210, 231], "otherwis": [35, 38, 39, 40, 42, 87, 89, 90, 91, 93, 101, 102, 103, 104, 113, 125, 126, 127, 128, 129, 130, 133, 144, 164, 165, 190, 192], "otim": [16, 56, 107], "out": [0, 3, 4, 35, 36, 38, 39, 40, 41, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 81, 82, 85, 86, 96, 97, 98, 100, 101, 102, 103, 104, 125, 126, 127, 128, 129, 130, 135, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219], "out_channel": [21, 30, 33, 96, 97, 98, 118, 119, 125, 126, 127, 128, 129, 130, 132], "out_featur": [29, 30, 33, 56, 58, 87, 88, 89, 90, 91, 92, 93, 94, 97, 98, 100, 101, 102, 107, 109, 111, 112, 113, 114, 115, 117, 120, 123, 125, 126, 127, 128, 129, 130], "outcom": [225, 226, 228], "outer": 179, "outlier": [61, 113], "output": [0, 1, 2, 7, 14, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 51, 52, 53, 56, 58, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 153, 154, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 177, 178, 188, 189, 190, 191, 192, 195, 197, 199, 202, 203, 204, 210, 211, 213, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "output_height": 48, "output_lay": [30, 33], "output_s": 30, "output_width": 48, "outsid": 0, "over": [0, 1, 2, 3, 8, 27, 30, 32, 42, 93, 96, 97, 98, 112, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 152, 156, 190, 191, 192, 199, 202, 204, 225, 226, 228], "overdetermin": 16, "overfit": [1, 50, 53, 101, 102, 103, 104, 135, 138, 143, 145], "overrid": [2, 3], "overridden": [27, 133], "overview": 20, "overwrit": [29, 31], "own": [4, 29, 30, 31, 32, 44, 45, 46, 86, 132, 223], "p": [15, 16, 28, 31, 32, 49, 50, 51, 52, 53, 100, 101, 102, 103, 104, 125, 128, 129, 225, 226, 228, 231], "p_d": [127, 130], "p_h": [126, 127, 130], "p_w": [126, 127, 130], "packag": [2, 3, 4, 8, 25, 132, 134, 155, 157, 221, 231], "pad": [21, 30, 33, 44, 45, 46, 48, 69, 70, 71, 73, 74, 75, 96, 97, 98, 118, 119, 125, 126, 127, 128, 129, 130, 209], "pad_after_dim1": 211, "pad_after_dim2": 211, "pad_before_dim1": 211, "pad_before_dim2": 211, "pad_width": 211, "padding_height": 48, "padding_width": 48, "pair": 56, "parallel": [1, 3], "param": [27, 28, 31, 32, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "param1": 27, "param_dict": 31, "param_group": [133, 134], "param_groups_setup": 133, "param_list": 32, "paramet": [0, 2, 7, 20, 22, 23, 24, 25, 27, 132, 133, 134, 150, 157, 231], "parameterdict": 34, "parameterlist": 34, "parent": 132, "part": [26, 27, 86, 132, 147, 149, 157, 170, 171, 174, 175, 176, 177, 178, 221, 231], "partial": [9, 10, 11, 13, 14, 15, 16, 18, 19, 35, 36, 38, 39, 40, 41, 42, 43, 56, 58, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219], "particip": [28, 221], "particular": [29, 31], "particularli": [7, 16, 30, 31, 32, 33, 42, 58, 93, 109, 112, 115, 120, 121, 122, 123, 139, 147, 220], "pass": [2, 7, 16, 21, 22, 23, 24, 27, 28, 29, 30, 31, 32, 33, 77, 87, 88, 89, 90, 91, 92, 94, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 123, 125, 126, 127, 128, 129, 130, 132, 150, 158, 191, 199, 202, 203, 204, 206, 208, 212, 214, 215, 219, 221, 231], "past": [135, 136, 138, 143], "patch": [48, 126], "path": [3, 5], "pattern": [39, 90, 96, 97, 98], "penal": [135, 143, 145], "penalti": [136, 137, 138, 139, 140, 141, 142], "penros": 16, "per": [1, 120, 121, 122, 123], "perform": [3, 7, 8, 9, 16, 21, 22, 23, 24, 27, 28, 32, 36, 44, 45, 46, 65, 67, 68, 69, 70, 71, 73, 74, 75, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 133, 147, 149, 155, 157, 159, 160, 163, 166, 169, 188, 190, 192, 199, 203, 220, 222, 224, 229, 231], "permut": 203, "persist": [26, 152, 153, 154, 156, 172, 173], "perturb": [11, 18, 19, 231], "phi": [36, 88], "pi": [36, 88, 185, 195, 200], "pil": [221, 231], "pinv": 12, "pioneer": 25, "pipelin": [5, 157, 220, 221, 223], "pixel": [5, 77, 223, 225], "place": [79, 81, 82, 83, 84, 85, 86], "placehold": [27, 108], "plai": [150, 157], "plot": 210, "point": [4, 78, 147], "pool": [21, 22, 23, 24, 25, 69, 70, 71, 73, 74, 75, 97, 98, 125, 126, 127, 128, 129, 130, 190, 192], "pool1": 33, "pool2": 33, "poorli": 13, "popul": 27, "popular": 4, "portion": 231, "pose": 16, "posit": [1, 9, 14, 27, 33, 78, 87, 89, 90, 91, 125, 126, 127, 128, 129, 130, 144, 148, 168, 213, 217, 224], "possibl": [7, 231], "potenti": [16, 108, 143, 215], "power": [7, 14, 148, 149, 179, 220, 221, 231], "practic": [16, 112, 115], "practition": 231, "preced": [28, 158], "predefin": [4, 25, 30, 91], "predict": [111, 112, 114, 115], "prefix": 27, "prepar": [3, 148, 211, 213, 217, 221, 231], "prepend": 27, "preprocess": [3, 4, 48, 78, 157, 220, 221, 231], "present": [111, 112, 113, 115, 117, 118, 119, 120, 121, 122, 123, 126], "preserv": [49, 78, 100, 170, 171, 174, 175, 176, 177, 178, 191, 199, 204], "preset": 4, "prevent": [1, 29, 30, 31, 32, 33, 50, 53, 101, 102, 103, 104, 111, 112, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 149], "previou": [135, 144, 149], "previous": 138, "primari": [7, 150], "primarili": 33, "print": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229], "probabilist": 157, "probabl": [36, 42, 49, 50, 51, 52, 53, 59, 88, 93, 100, 101, 102, 103, 104, 111, 112, 115, 225, 226, 228, 231], "problem": [16, 17, 19, 38, 87, 89, 142], "process": [2, 3, 4, 14, 17, 19, 32, 44, 45, 46, 67, 78, 91, 94, 96, 98, 107, 117, 118, 119, 120, 121, 122, 123, 125, 127, 128, 130, 135, 150, 210, 221, 222, 223, 224, 229, 231], "produc": [96, 97, 98, 155, 157], "product": [7, 17, 19, 92, 107, 123, 132, 161, 162, 166, 167], "program": [147, 157], "progress": 137, "project": [17, 19], "projector": 16, "promin": [125, 127, 128, 129, 130], "promot": [33, 112, 115, 132], "propag": [10, 11, 13, 16, 17, 18, 19, 27, 33, 56, 58, 77, 126, 127, 143, 144, 161, 162, 163, 167, 190, 192, 210, 211, 214, 218], "properli": [0, 32, 42, 93, 132], "properti": [8, 10, 13, 14, 36, 40, 49, 88, 91, 100, 137, 142], "proport": [5, 204], "proportion": 229, "provid": [0, 1, 2, 3, 4, 5, 7, 8, 21, 25, 27, 29, 30, 31, 32, 36, 58, 78, 111, 112, 113, 115, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 143, 145, 147, 149, 150, 155, 157, 158, 163, 170, 176, 190, 192, 203, 205, 213, 215, 217, 231], "pseudo": [13, 16], "purpos": [152, 156, 170, 175, 177], "python": 150, "pytorch": 205, "q": 17, "qr": 12, "quad": [16, 111, 112, 113, 114, 115, 128, 129, 130, 159, 160, 164, 165, 166, 169, 222], "quadrat": 113, "quotient": 160, "r": [17, 225, 226, 227, 228], "r_t": 142, "radam": 146, "rais": [0, 1, 2, 27, 132, 133, 168], "rand": [151, 157], "randint": [151, 157], "randn": [132, 151, 155, 157], "random": [1, 2, 3, 224, 225, 226, 227, 228, 231], "random_integ": 157, "random_tensor": 157, "randomcrop": [230, 231], "randomgrayscal": [230, 231], "randomhorizontalflip": [230, 231], "randomli": [1, 49, 50, 51, 52, 53, 78, 100, 101, 102, 103, 104, 224, 225, 226, 227, 228, 231], "randomnoisedataset": [0, 1, 2], "randomrot": [230, 231], "randomverticalflip": 230, "rang": [0, 1, 8, 32, 41, 43, 44, 45, 60, 64, 86, 92, 94, 135, 143, 145, 153, 181, 182, 184, 223, 227, 231], "rank": 16, "rate": [133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "rather": [31, 32, 139, 214], "ratio": 229, "ravel": 209, "raw": [42, 93, 112, 150], "re": [28, 149], "readabl": [29, 30, 31, 33, 132, 150], "readi": [3, 7, 25], "real": [16, 19, 92], "rearrang": 48, "receiv": [128, 129, 130, 211], "recent": 143, "recept": 25, "reciproc": [16, 179, 189, 197], "recognit": [24, 25, 97], "rectangular": 174, "rectif": 142, "rectifi": [38, 39, 89, 90, 142], "recurr": [30, 123], "recurs": 27, "red": 225, "reduc": [117, 118, 119, 120, 121, 122, 125, 126, 127, 128, 129, 130, 141, 144, 149, 150, 190, 191, 192, 199, 204, 225], "reduct": [19, 59, 60, 61, 63, 64, 111, 112, 113, 114, 115, 190, 192], "reevalu": 133, "refer": [4, 7, 27, 157, 171, 174, 206], "reflect": 147, "regardless": [16, 212], "region": [46, 77, 211, 222, 231], "regist": [26, 27, 28, 32, 132], "register_buff": 26, "register_paramet": 27, "registr": [27, 132], "regress": [4, 63, 113, 114], "regular": [16, 53, 101, 102, 103, 104, 135, 136, 137, 140, 141, 142, 143, 145], "relat": [149, 174, 175], "relationship": 229, "relev": [77, 135, 143, 145], "reli": 149, "reliabl": 5, "reliant": [101, 102, 103, 104], "relu": [7, 29, 30, 31, 33, 35, 37, 38, 55, 81, 82, 85, 86, 87, 89, 95, 96, 97, 98, 106, 107, 108, 109], "relu1": 33, "relu2": 33, "relu3": 33, "remain": [5, 26, 68, 100, 101, 102, 103, 104, 144], "rememb": 157, "remov": 215, "rep": 217, "repeat": [209, 210, 217], "repetit": [213, 217], "replac": [157, 225], "repres": [13, 15, 19, 21, 27, 28, 33, 56, 58, 65, 67, 68, 96, 97, 98, 107, 109, 112, 115, 123, 133, 134, 135, 141, 142, 143, 144, 145, 150, 159, 160, 166, 169, 171, 191, 202, 203, 204, 210, 222, 224, 226, 227, 228, 229], "represent": [126, 129, 133], "reproduc": [152, 153, 154, 155, 156, 157, 231], "requir": [2, 3, 4, 7, 26, 29, 33, 35, 36, 38, 39, 40, 41, 43, 56, 58, 77, 86, 108, 112, 115, 132, 147, 149, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 229], "requires_grad": [26, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 48, 56, 58, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221], "rescal": [59, 60, 64, 111, 112, 115], "research": 132, "reset": [28, 155, 158], "reshap": [7, 58, 97, 98, 148, 150, 209, 212], "resili": 144, "resiz": [77, 220, 230, 231], "resourc": 149, "respect": [9, 10, 11, 13, 14, 15, 16, 17, 19, 21, 26, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 56, 58, 77, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 184, 188, 189, 190, 191, 192, 195, 197, 199, 202, 203, 204, 210, 211, 213, 217, 225], "respons": [29, 134], "restor": 149, "restructur": 214, "result": [9, 13, 14, 16, 27, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 56, 58, 69, 70, 71, 73, 74, 75, 77, 78, 93, 132, 133, 147, 149, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 205, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 224, 225, 231], "resum": 134, "retain": [28, 158, 170, 177, 190, 191, 192, 199, 204, 221], "retent": 221, "retriev": [0, 2, 29, 31, 32], "return": [0, 1, 2, 3, 5, 7, 21, 26, 27, 29, 30, 31, 32, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 220, 231], "reus": 221, "reusabl": [33, 132, 220], "revers": [7, 33, 203, 226, 228], "revert": 149, "rho": 136, "rho_": 142, "rho_t": 142, "right": [14, 15, 16, 18, 19, 36, 42, 88, 93, 111, 112, 113, 115, 117, 118, 119, 120, 121, 122, 123, 128, 129, 130, 222], "risk": 150, "rmsprop": 146, "robust": [78, 100, 101, 102, 103, 104, 113, 132, 136, 224, 225, 227, 231], "role": [150, 157, 231], "root": [4, 5, 137, 143, 197], "rotat": [55, 76, 227, 231], "rotated_imag": 78, "rout": [128, 129, 130], "routin": 7, "row": [10, 11, 13, 18, 58, 174, 210, 219], "rprop": 146, "rule": [13, 14, 148, 159, 160, 164, 165, 166, 168, 169], "run": [7, 26, 65, 67, 117, 118, 119, 120, 121, 122, 136, 149, 155, 157], "running_mean": [26, 65, 67, 117, 118, 119, 120, 121, 122], "running_var": [65, 67, 117, 118, 119, 120, 121, 122], "runtim": [30, 33, 132], "s_": 144, "s_d": [127, 130], "s_h": [126, 127, 130], "s_w": [126, 127, 130], "same": [10, 11, 13, 14, 18, 42, 49, 50, 51, 52, 53, 65, 67, 68, 78, 96, 97, 98, 100, 101, 102, 103, 104, 108, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 144, 155, 157, 163, 173, 176, 178, 188, 190, 191, 192, 206, 208, 212, 214, 215, 216, 219, 223], "sampl": [0, 1, 2, 3, 5, 7, 21, 22, 23, 24, 81, 82, 83, 84, 85, 86, 100, 101, 102, 103, 104, 107, 109, 112, 115, 123, 154, 157, 222, 224, 226, 227, 228, 229], "satisfi": [9, 11, 18], "satur": [87, 231], "save": [2, 26, 28, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149], "scalabl": [3, 132], "scalar": [10, 15, 59, 60, 61, 63, 64, 150], "scale": [11, 16, 22, 23, 24, 35, 40, 42, 65, 67, 68, 85, 86, 87, 89, 91, 92, 93, 94, 100, 101, 102, 103, 104, 112, 117, 118, 119, 120, 121, 122, 123, 135, 137, 138, 139, 150, 157, 204, 229], "scenario": [31, 32, 123, 139, 140, 221, 225], "schedul": 135, "scientif": 148, "score": [42, 112], "scratch": 7, "script": 157, "seamless": [0, 1, 3, 4, 132, 157], "seamlessli": [3, 4, 8, 28, 30, 33, 132, 150, 231], "second": [11, 30, 31, 56, 107, 138, 139, 140, 141, 142, 148, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 208, 210, 228], "section": 163, "see": [7, 163], "seed": [151, 152, 153, 154, 156, 157, 231], "seen": 136, "select": [77, 128, 130, 199], "self": [0, 1, 2, 3, 7, 21, 26, 27, 28, 29, 30, 31, 32, 40, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 107, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 210, 220, 221], "selu": [37, 49, 55, 95, 100, 106], "selunetwork": 91, "sensit": [61, 113, 117, 118, 119], "sentiment": 4, "separ": [0, 44, 45, 46, 120, 121, 122], "sequenc": [14, 29, 31, 44, 170, 206, 208, 211, 213, 216, 217, 219, 220], "sequenti": [21, 29, 30, 34, 44, 108, 220, 231], "seri": [22, 23, 44, 96, 125, 128], "serial": [26, 27, 134], "serv": [3, 27, 29, 30, 31, 32, 33, 132, 144, 221], "set": [3, 4, 5, 28, 32, 44, 45, 46, 89, 90, 91, 96, 97, 98, 100, 103, 104, 107, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 133, 138, 139, 143, 152, 153, 154, 155, 156, 157, 158, 170, 172, 173, 177, 178, 184, 190, 192, 205, 221, 225, 231], "setup": [4, 7], "sever": [16, 96, 97, 98, 125, 126, 127, 128, 129, 130, 149, 220, 231], "sgd": [7, 135, 142, 146], "sgn": 15, "shape": [3, 4, 5, 7, 10, 11, 13, 14, 16, 21, 25, 26, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 148, 150, 152, 153, 154, 156, 157, 158, 161, 172, 173, 174, 175, 176, 177, 178, 184, 189, 190, 191, 192, 195, 197, 199, 203, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 219, 222, 223, 224, 225, 226, 227, 228, 229, 231], "shapelik": 153, "share": 25, "shift": [65, 67, 68, 117, 118, 119, 120, 121, 122, 123], "shorthand": 163, "should": [21, 26, 149, 152, 153, 154, 156, 172, 173, 181, 182, 202, 211, 220], "show": 147, "showcas": 7, "shown": 155, "shrink": 136, "shuffl": [1, 2, 3], "side": [18, 30, 33, 44, 45, 46, 69, 70, 71, 73, 74, 75, 96, 97, 98, 125, 126, 127, 128, 129, 130, 149], "sigma": [16, 81, 83, 85, 92, 117, 118, 119, 120, 121, 122, 123, 203], "sigma_c": 223, "sigma_i": 16, "sigmoid": [37, 55, 81, 82, 85, 86, 95, 106, 111], "sigmoidnetwork": 92, "sign": [14, 113, 144, 179], "signal": [96, 97, 98, 117, 120, 125, 126, 127, 128, 129, 130], "signatur": 20, "signific": 149, "significantli": 220, "sim": [100, 101, 102, 103, 104], "similar": [7, 81, 82, 163, 189, 205, 211], "similarli": [19, 202], "simpl": [3, 4, 7, 33, 44, 45, 46, 56, 58, 69, 70, 71, 73, 74, 75, 88, 90, 91, 92, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 161, 162, 167, 220], "simplebinaryclassificationmodel": 111, "simpleclassificationmodel": [112, 115], "simplegelumodel": 88, "simpleleakyrelumodel": 89, "simplemodel": [7, 109], "simpleregressionmodel": 114, "simplerelumodel": 90, "simpleselumodel": 91, "simplesigmoidmodel": 92, "simpletanhmodel": 94, "simpli": [147, 202, 203, 214], "simplic": 90, "simplifi": [4, 22, 33], "simul": 231, "simultan": 78, "sin": [179, 185], "sinc": [14, 17, 29, 30, 31, 32, 44, 45, 46, 86, 147, 149, 154, 210, 231], "sine": [182, 195, 196], "singl": [0, 4, 14, 17, 19, 42, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 112, 123, 126, 127, 128, 129, 130, 133, 150, 156, 172, 206, 215, 223, 225, 231], "singleton": 123, "singular": [10, 13, 14, 16, 18, 19], "sinh": [179, 186, 201], "size": [0, 1, 2, 3, 19, 21, 22, 23, 24, 28, 30, 44, 45, 46, 48, 51, 52, 53, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 96, 97, 98, 107, 109, 111, 112, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 153, 156, 157, 158, 190, 191, 192, 199, 204, 206, 208, 215, 218, 219, 222, 224, 229, 231], "skip": 149, "slice": [56, 202], "slide": [48, 125, 127, 128, 130], "slightli": 231, "slope": [38, 87, 89], "slow": [3, 142], "small": [16, 22, 23, 24, 38, 59, 60, 65, 67, 68, 89, 91, 111, 112, 113, 117, 118, 119, 120, 121, 122, 123, 126, 129, 136, 137, 138, 139, 140, 141, 142, 143, 144], "smaller": [30, 33, 132, 137, 138, 165, 222, 224, 229], "smallest": 192, "smooth": [36, 87, 88, 135, 143, 231], "smoother": 135, "so": [29, 30, 31, 32, 78, 132, 142, 172, 173, 220], "softmax": [37, 55, 95, 106, 112], "softmaxmodel": 93, "solut": [16, 18], "solv": [8, 9, 12, 16, 17, 19], "solver": 8, "some": [35, 50, 78, 100, 101, 102, 117, 118, 119, 120, 121, 122, 137, 138, 139, 149, 150], "sometim": 148, "sophist": [30, 33], "sourc": 157, "space": [11, 17, 19, 44, 45, 46, 48, 96, 97, 98, 170, 231], "span": 4, "spars": [137, 138], "spatial": [97, 98, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 210], "spatio": 98, "special": [0, 1, 7, 16, 26, 27, 28, 100, 157], "specif": [4, 7, 29, 30, 31, 32, 33, 86, 100, 101, 102, 103, 104, 120, 121, 122, 132, 133, 147, 157, 172, 190, 192, 213, 217], "specifi": [0, 1, 2, 3, 4, 5, 7, 15, 21, 30, 42, 48, 53, 59, 60, 61, 63, 64, 68, 77, 78, 93, 96, 97, 98, 111, 112, 113, 114, 115, 123, 126, 127, 128, 129, 130, 133, 150, 152, 153, 154, 155, 156, 168, 170, 171, 172, 173, 174, 175, 177, 178, 184, 190, 191, 192, 199, 203, 204, 205, 206, 208, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 229, 231], "speech": 120, "speed": [135, 136, 137, 138, 139, 140, 141, 142, 143, 145], "split": [4, 206, 208, 219], "sqrt": [36, 81, 82, 85, 86, 88, 117, 118, 119, 120, 121, 122, 123, 136, 137, 138, 139, 141, 142, 143, 179, 181, 182], "squar": [1, 3, 9, 10, 11, 13, 14, 16, 17, 18, 19, 61, 63, 113, 114, 136, 137, 138, 143, 179, 197], "squaredataset": [0, 1, 2, 3], "squeez": 209, "stabil": [13, 16, 59, 60, 65, 67, 68, 111, 112, 117, 118, 119, 120, 121, 122, 123, 135, 136, 137, 138, 139, 140, 141, 142, 143, 223], "stabl": [81, 82, 85, 86, 100, 112, 135, 139, 140, 143, 144, 145], "stack": [33, 208, 209, 219, 231], "standard": [36, 38, 81, 83, 85, 87, 88, 89, 100, 144, 154, 157, 163, 220, 223, 231], "start": [1, 3, 135, 137, 144, 170, 222, 224], "state": [26, 27, 28, 30, 33, 133, 147, 149, 155], "state_dict": [27, 28, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "static": 33, "statist": [16, 49, 65, 67], "std": [5, 83, 220, 223, 231], "step": [28, 48, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 170, 220, 221], "step_siz": 144, "still": 136, "stochast": [7, 135, 145], "stop": 170, "storag": [29, 31, 158], "store": [2, 4, 5, 26, 27, 28, 29, 30, 31, 32, 149, 158, 222, 223, 224, 225, 226, 227, 228, 229], "str": [5, 27, 29, 31, 33, 59, 60, 61, 63, 64, 77, 133, 210], "straightforward": [145, 147, 159], "strategi": 134, "streamlin": [2, 3], "strict": [27, 133], "stride": [21, 22, 23, 24, 30, 33, 44, 45, 46, 48, 69, 70, 71, 73, 74, 75, 96, 97, 98, 125, 126, 127, 128, 129, 130], "stride_height": 48, "stride_width": 48, "string": [27, 29, 31, 33, 96, 97, 98, 133], "structur": [0, 7, 17, 26, 27, 30, 132, 133, 150, 174, 221], "style": [67, 120, 121, 210], "sub": [29, 30, 31, 32, 33, 132, 179, 222, 224], "sub_tensor": 158, "subclass": [1, 2, 3, 7, 27, 28, 29, 132, 133], "submodul": [27, 132], "subsequ": [30, 33, 86, 157], "subset": [101, 102], "subtract": [7, 169, 223], "suffer": 137, "suit": [81, 82, 85, 86], "suitabl": [22, 23, 24, 113, 137, 138, 152], "sum": [15, 29, 30, 31, 32, 33, 42, 59, 60, 61, 63, 64, 93, 111, 112, 113, 114, 115, 137, 159, 162, 167, 179, 202, 204, 206, 208, 210, 213, 217, 219], "sum_": [14, 42, 93, 111, 112, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 161, 162, 191, 199, 202, 204, 210, 213], "sum_i": [15, 167], "sum_j": 167, "sum_k": 163, "summar": [125, 126, 127], "summat": 14, "super": [7, 26, 27, 28, 29, 30, 31, 32, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 107, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "support": [1, 3, 4, 7, 8, 14, 15, 16, 17, 19, 29, 30, 31, 32, 33, 77, 78, 132, 134, 141, 157, 158, 159, 160, 163, 164, 165, 166, 168, 169, 171, 174, 184, 189, 191, 195, 197, 199, 202, 203, 204, 206, 210, 214, 221, 231], "suppos": 231, "sure": [132, 231], "svd": [12, 16], "symmetr": [9, 85, 86, 94], "syntax": [1, 163], "system": [8, 9, 16, 17, 18, 147, 210], "systemat": 231, "t": [16, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 158, 163, 205, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "t0": 135, "t1": 205, "t2": 205, "tabular": 4, "tailor": [4, 132, 231], "take": [17, 125, 126, 127, 128, 129, 130, 149, 220], "taken": 202, "tan": 179, "tangent": [43, 94, 183, 200, 201], "tanh": [30, 33, 36, 37, 55, 81, 82, 85, 86, 88, 95, 106, 179], "tanhnetwork": 94, "target": [5, 33, 59, 60, 61, 63, 64, 77, 111, 112, 113, 114, 115, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 222, 224, 229], "target_tensor": [111, 112, 113, 114, 115], "target_transform": 5, "task": [4, 7, 8, 22, 23, 24, 25, 41, 42, 45, 56, 59, 60, 63, 64, 92, 93, 96, 97, 98, 111, 112, 113, 114, 115, 120, 121, 122, 125, 127, 128, 130, 138, 148, 157, 174, 231], "techniqu": [9, 13, 65, 100, 101, 102, 103, 104, 120, 121, 122, 134, 229, 231], "tempor": [96, 98, 127, 130], "temporarili": 149, "tensor": [2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 147, 149, 150, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "term": [16, 56, 135, 139, 141, 142, 143, 145], "test": [4, 5], "test_siz": 5, "text": [4, 10, 14, 15, 29, 35, 38, 39, 40, 42, 44, 45, 46, 69, 70, 71, 73, 74, 75, 81, 82, 85, 86, 87, 89, 90, 91, 93, 96, 97, 98, 100, 101, 102, 103, 104, 111, 112, 113, 114, 115, 125, 126, 127, 128, 129, 130, 135, 137, 138, 139, 140, 141, 142, 143, 144, 145, 153, 159, 160, 162, 164, 165, 166, 168, 169, 180, 184, 190, 191, 192, 194, 199, 204, 206, 208, 211, 212, 213, 214, 215, 217, 218, 219, 222, 223, 224, 226, 227, 228], "th": [56, 111, 112, 114, 115, 120, 121, 122, 164, 165, 168], "than": [0, 1, 31, 32, 35, 38, 61, 87, 89, 113, 133, 139, 184, 202, 211, 216, 222, 224, 229], "thei": [0, 7, 19, 26, 30, 32, 33, 150, 210, 214, 222, 224, 231], "them": [3, 27, 32, 48, 135, 148, 206, 216, 220, 223, 231], "therebi": [100, 126, 127, 129, 130], "theta": [135, 136, 227], "theta_": [135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "theta_t": [142, 143], "thi": [0, 1, 2, 3, 5, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 26, 28, 30, 31, 32, 33, 39, 41, 42, 43, 44, 45, 46, 48, 56, 58, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 153, 154, 155, 157, 158, 162, 163, 167, 170, 172, 175, 176, 177, 178, 184, 188, 189, 190, 191, 192, 195, 197, 199, 202, 203, 204, 205, 211, 213, 214, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "thing": 149, "those": [7, 22, 23, 24, 32, 86], "three": [19, 24, 46, 71, 75, 98, 104, 119, 122, 127, 130], "threshold": [16, 61, 113], "through": [0, 3, 4, 7, 11, 16, 17, 19, 21, 29, 30, 33, 56, 58, 77, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 117, 118, 119, 120, 123, 125, 126, 127, 128, 129, 130, 154, 161, 162, 167, 210, 212, 214, 215, 218, 231], "throughout": [40, 221], "tile": 209, "time": [0, 3, 14, 22, 23, 24, 44, 89, 91, 96, 125, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 143, 145, 149, 213, 217], "to_tensor": 5, "togeth": [33, 220, 231], "too": 144, "tool": [3, 7, 132, 148, 157, 220, 231], "top": [9, 10, 11, 17, 19, 56, 58, 77, 96, 97, 98, 107, 109, 222, 224], "torch": 205, "total": [0, 1, 2, 5, 22, 23, 24, 28, 158, 214], "totensor": [220, 231], "trace": [8, 179], "track": [7, 117, 118, 119, 120, 121, 122, 132, 147, 149, 152, 153, 154, 156, 170, 171, 172, 173, 174, 175, 176, 177, 178, 205, 221], "track_running_stat": [117, 118, 119, 120, 121, 122], "tradit": [136, 137, 140, 141, 142], "trail": 68, "train": [1, 2, 3, 4, 5, 7, 26, 27, 30, 32, 33, 42, 49, 50, 51, 52, 53, 65, 67, 78, 88, 89, 91, 92, 93, 94, 100, 101, 102, 103, 104, 117, 118, 119, 120, 121, 122, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 220, 223, 224, 225, 226, 227, 228, 231], "trainabl": [117, 118, 119, 120, 121, 122, 132], "transfer": [67, 120, 121], "transform": [2, 4, 5, 7, 11, 31, 56, 58, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 148, 210], "transform_pipelin": [220, 231], "transformed_imag": [220, 231], "transit": 113, "translat": [126, 129], "transpos": [7, 9, 179], "treat": [0, 26, 123, 132], "triangular": [9, 17], "true": [1, 2, 3, 4, 5, 19, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 48, 49, 50, 51, 52, 53, 56, 58, 65, 67, 77, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 138, 139, 143, 147, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221], "try": 0, "tune": 231, "tupl": [2, 3, 5, 11, 17, 19, 27, 28, 44, 45, 46, 48, 68, 69, 70, 71, 73, 74, 75, 77, 78, 96, 97, 98, 108, 123, 125, 126, 127, 128, 129, 130, 138, 139, 140, 141, 142, 144, 150, 152, 153, 154, 156, 158, 172, 175, 177, 190, 191, 192, 199, 204, 206, 208, 210, 211, 214, 215, 216, 218, 219, 222, 223, 224, 229], "twice": 211, "two": [7, 10, 11, 13, 14, 16, 17, 19, 22, 23, 24, 44, 45, 46, 56, 70, 74, 97, 103, 107, 118, 121, 126, 129, 138, 139, 140, 141, 142, 144, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 202, 210], "type": [26, 27, 28, 56, 107, 158, 170, 171, 172, 173, 174, 175, 176, 177, 178, 205, 210, 221], "typeerror": [0, 1, 2, 27, 133], "typic": [8, 26, 42, 49, 78, 91, 93, 115, 117, 118, 119, 120, 121, 122, 134, 135, 143, 145, 149, 150, 218, 221, 223, 227, 229, 231], "u": [16, 19, 82, 84, 86], "u_": 140, "unchang": [26, 53, 87, 89, 90, 91, 100, 101, 102, 103, 104, 108, 212, 215], "undefin": 168, "under": 132, "underbrac": 14, "underdetermin": 16, "undergo": 231, "underli": [0, 7, 205, 208, 212, 214, 219], "understand": [7, 33, 231], "unexpect": [27, 30, 33, 157], "unfold": [47, 55], "unifi": 0, "uniform": [80, 82, 86, 96, 97, 98, 107, 109, 151, 152, 153, 157, 225, 226, 227, 228], "uniformli": [152, 156], "uniniti": [172, 173], "unintend": 149, "uniqu": [9, 16, 18, 29, 31], "unit": [21, 35, 36, 38, 39, 40, 81, 82, 85, 86, 87, 88, 89, 90, 91, 100], "unless": 158, "unlik": [26, 29, 30, 31, 32, 38, 87, 89, 100, 123, 136, 137, 139, 140, 141, 142, 144], "unnecessari": 149, "unpad": 211, "unseen": 231, "unsqueez": 209, "unstabl": 13, "up": [133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 227, 229], "updat": [4, 26, 32, 33, 100, 101, 102, 103, 104, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149], "upon": [29, 30, 31, 32], "upper": [17, 84, 144, 156], "us": [0, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 16, 17, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 56, 58, 63, 65, 67, 77, 78, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 147, 148, 149, 152, 153, 154, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 188, 190, 191, 192, 199, 204, 210, 211, 213, 215, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "usag": [3, 8, 20, 30, 33, 133, 134, 222, 223, 224, 225, 226, 227, 228, 229], "user": [1, 2, 3, 4, 7, 29, 30, 31, 32, 132, 137, 220, 221, 231], "usual": 112, "util": [3, 7, 8, 31, 32, 132, 157], "v": [11, 16, 19, 138, 139, 141, 142, 171], "v_": [135, 138, 139, 141, 142, 143, 145], "v_stack": 219, "v_t": [142, 143], "val": 79, "valid": [96, 97, 98, 203], "valu": [7, 10, 14, 15, 16, 19, 27, 29, 31, 33, 35, 38, 41, 42, 43, 44, 45, 46, 48, 59, 60, 61, 63, 64, 65, 67, 68, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 94, 100, 101, 102, 103, 104, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 150, 152, 153, 154, 155, 156, 157, 170, 171, 172, 173, 174, 180, 181, 182, 184, 187, 188, 189, 190, 192, 194, 195, 197, 198, 206, 211, 212, 214, 218, 223, 225, 226, 228], "valuabl": 157, "valueerror": [1, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 133], "vanish": [87, 91, 117, 118, 119], "var": 179, "vari": [30, 32, 77, 227], "variabl": [27, 33, 108, 132, 147, 149, 152, 172, 224, 227], "varianc": [40, 49, 65, 67, 81, 82, 85, 86, 91, 100, 117, 118, 119, 120, 121, 122, 123, 138, 139, 140, 141, 142, 154, 204, 227, 231], "variant": [138, 139, 140], "variat": [120, 121, 122, 224, 231], "varieti": [4, 157, 231], "variou": [21, 25, 90, 134, 157, 190, 192, 211, 221], "vdot": 167, "vector": [11, 16, 17, 18, 19, 56, 58, 107, 109, 161, 162, 163, 167], "veloc": [135, 143, 145], "veri": [16, 136], "versa": 144, "versatil": [157, 210], "version": [19, 21, 22, 23, 143, 167, 225], "vertic": [216, 219, 228], "via": [3, 4], "vice": 144, "video": [46, 53, 98, 122, 127, 130], "view": [21, 30, 126, 127, 128, 129, 130, 214], "vision": [45, 97, 107, 231], "volumetr": [46, 53, 98, 122, 127, 130], "vstack": 209, "w": [45, 46, 48, 52, 53, 56, 58, 70, 71, 74, 75, 77, 78, 96, 97, 98, 107, 109, 118, 119, 121, 122, 127, 130, 222, 224], "w_": [45, 46, 70, 71, 74, 75, 77, 97, 98, 126, 127, 129, 130], "w_out": [45, 46, 70, 71, 74, 75], "wa": [100, 101, 102, 103, 104, 149], "wai": [1, 147, 149, 214], "want": [0, 7, 220, 222], "warn": [29, 31], "we": [3, 7, 148, 210], "weight": [25, 44, 45, 46, 56, 58, 59, 60, 64, 65, 67, 68, 77, 81, 82, 85, 86, 96, 97, 98, 100, 101, 102, 103, 104, 107, 109, 111, 112, 115, 117, 118, 119, 120, 121, 122, 123, 132, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 152, 157], "weight1": 31, "weight2": 31, "weight_decai": [135, 136, 137, 138, 139, 140, 141, 142, 143, 145], "well": [81, 82], "were": 33, "what": 149, "when": [0, 1, 3, 7, 14, 27, 30, 32, 33, 35, 38, 44, 45, 46, 87, 108, 117, 118, 119, 120, 121, 122, 133, 136, 144, 147, 149, 150, 157, 168, 220, 222], "where": [3, 4, 5, 10, 11, 13, 14, 15, 16, 17, 19, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 150, 157, 159, 160, 164, 165, 166, 168, 169, 172, 173, 184, 188, 189, 190, 191, 192, 195, 197, 199, 202, 203, 204, 206, 211, 213, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228], "whether": [1, 10, 27, 28, 81, 82, 143, 147, 152, 153, 154, 156, 158, 172, 173, 190, 191, 192, 199, 204], "which": [0, 7, 10, 11, 13, 14, 15, 16, 17, 19, 27, 29, 31, 33, 38, 42, 61, 78, 87, 88, 89, 93, 94, 100, 113, 115, 117, 118, 119, 120, 121, 122, 123, 138, 139, 141, 143, 147, 149, 150, 152, 153, 156, 181, 182, 183, 184, 185, 186, 189, 190, 191, 192, 193, 195, 196, 197, 199, 200, 201, 202, 204, 206, 213, 214, 216, 218, 221, 222, 224, 225, 226, 227, 228, 229, 231], "while": [7, 25, 30, 33, 49, 88, 90, 132, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 149, 214, 216, 225, 231], "who": [7, 29, 30, 31, 32], "whose": [19, 173, 176, 178, 180, 184, 188, 194], "wide": [4, 5, 8, 16, 39, 90, 96, 97, 112], "wider": [44, 45], "width": [45, 46, 48, 52, 53, 70, 71, 74, 75, 77, 78, 97, 98, 118, 119, 121, 122, 126, 127, 129, 130, 222, 224, 229], "window": [69, 70, 71, 73, 74, 75, 125, 126, 127, 128, 129, 130, 136, 190, 192], "wise": [35, 36, 38, 39, 40, 41, 42, 43, 93, 100, 101, 102, 103, 104, 132, 148, 159, 160, 163, 164, 165, 166, 168, 169, 180, 181, 182, 183, 184, 185, 186, 187, 189, 193, 194, 195, 196, 197, 198, 200, 201, 202, 208, 219], "within": [2, 26, 29, 30, 31, 32, 33, 43, 77, 78, 86, 88, 90, 91, 92, 94, 96, 97, 98, 100, 101, 102, 108, 111, 112, 113, 114, 115, 117, 118, 119, 120, 123, 125, 126, 127, 128, 129, 130, 134, 149, 170, 184, 227, 231], "without": [7, 29, 30, 31, 56, 58, 96, 97, 98, 107, 109, 147, 190, 212, 214, 218], "won": 149, "work": [1, 2, 3, 7, 9, 148, 150], "workflow": [157, 231], "workload": 7, "wrap": [3, 132, 149, 205], "wrapper": 132, "x": [7, 8, 18, 21, 26, 27, 29, 30, 31, 32, 33, 42, 56, 58, 78, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152, 153, 154, 156, 172, 173, 188, 210, 222, 223, 224, 225, 226, 227, 228, 229], "x1": 107, "x2": 107, "x_": [112, 115, 210], "x_c": [112, 115], "x_i": 111, "x_k": 112, "xavier": [81, 82, 85, 86], "xavier_norm": 80, "xavier_uniform": 80, "xy": 210, "x\u2081": 107, "x\u2082": 107, "y": [29, 30, 31, 32, 33, 78, 87, 88, 89, 90, 91, 92, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 152, 153, 154, 156, 172, 173, 210, 225], "y_": [112, 115, 210], "y_c": [112, 115], "y_i": 111, "yann": [5, 25], "yet": [7, 148], "yield": [0, 1, 27, 149], "you": [0, 30, 32, 33, 132, 134, 147, 149, 157, 172, 173, 174, 178, 203, 205, 220, 222, 231], "your": [132, 134, 147, 149, 157, 231], "z": [173, 177, 178], "zero": [14, 16, 17, 35, 38, 44, 45, 46, 49, 50, 51, 52, 53, 69, 70, 71, 73, 74, 75, 79, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 96, 97, 98, 100, 101, 102, 103, 104, 123, 125, 126, 127, 128, 129, 130, 132, 133, 136, 137, 138, 139, 140, 141, 142, 143, 172, 173, 174, 178, 179, 184, 194, 211], "zero_grad": [28, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 158], "zeros_lik": [173, 179], "\u03c3\u1d62": 16}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "datasets.MNIST", "Image Datasets", "Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "ConvNets", "LeNet", "models.lenet_1", "models.lenet_4", "models.lenet_5", "lucid.models", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.LeakyReLU", "nn.ReLU", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Tanh", "Activation Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "lucid.nn", "optim.Optimizer", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.types", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.meshgrid", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.unsqueeze", "lucid.vstack", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": 148, "1d": 148, "2": 148, "2d": 148, "3": 148, "It": [147, 149], "ab": 180, "activ": [37, 55, 95, 106], "ad": 148, "adadelta": 136, "adagrad": 137, "adam": 138, "adamax": 140, "adamw": 139, "add": 159, "addit": 16, "admonit": 150, "advanc": [48, 231], "algebra": 12, "algorithm": [135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "alias": 150, "align": 148, "alpha_dropout": 49, "alphadropout": 100, "also": 134, "anoth": 205, "arang": 170, "arcco": 181, "architectur": [22, 23, 24], "arcsin": 182, "arctan": 183, "asgd": 135, "attribut": [5, 21, 26, 28, 29, 30, 31, 32, 33, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 158, 222, 223, 224, 225, 226, 227, 228, 229], "avg_pool1d": 69, "avg_pool2d": 70, "avg_pool3d": 71, "avgpool1d": 125, "avgpool2d": 126, "avgpool3d": 127, "axi": 148, "backpropag": 158, "backward": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 56, 58, 77, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219], "batch_norm": 65, "batchnorm1d": 117, "batchnorm2d": 118, "batchnorm3d": 119, "bceloss": 111, "benefit": 149, "bilinear": [56, 107], "binari": 179, "binary_cross_entropi": 59, "broadcast": 148, "buffer": 26, "calcul": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 48, 56, 58, 77, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229], "case": 150, "centercrop": 222, "choleski": 9, "class": [0, 1, 2, 5, 21, 26, 27, 28, 29, 30, 31, 32, 33, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 158, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "clip": 184, "co": 185, "combin": 0, "compon": [3, 7, 132], "compos": 220, "concatdataset": [0, 1], "concaten": 206, "conclus": [3, 7, 132, 147, 148, 149, 157, 221, 231], "constant": 79, "contain": 34, "conv1d": [44, 96], "conv2d": [45, 97], "conv3d": [46, 98], "convnet": [20, 25], "convolut": [47, 55, 99, 106], "core": 7, "cosh": 186, "creat": [28, 158, 205], "cross_entropi": 60, "crossentropyloss": 112, "cube": 187, "custom": [1, 2, 3, 27, 133, 134, 231], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 5, 6], "defin": [2, 27, 133, 134], "definit": 150, "det": 10, "detail": 16, "diag": 171, "dilat": 48, "div": 160, "dot": 161, "dropout": [50, 54, 55, 101, 105, 106], "dropout1d": [51, 102], "dropout2d": [52, 103], "dropout3d": [53, 104], "eig": 11, "elu": [35, 87], "empti": 172, "empty_lik": 173, "exampl": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "exp": 188, "ey": 174, "featur": [4, 7, 8, 134, 157, 231], "flatten": 207, "forward": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 48, 56, 58, 77, 81, 82, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229], "from": 205, "function": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 147, 149, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219], "futur": 4, "gelu": [36, 88], "gener": [151, 179], "get": 134, "grad_en": 147, "gradient": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 56, 58, 77, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219], "guidelin": 150, "how": [147, 149], "hstack": 208, "huber_loss": 61, "huberloss": 113, "ident": 108, "imag": [6, 230], "index": 158, "init": [79, 81, 82, 83, 84, 85, 86], "initi": 80, "inner": 162, "input": 205, "inspect": [134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "instance_norm": 67, "instancenorm1d": 120, "instancenorm2d": 121, "instancenorm3d": 122, "integr": [3, 132, 157, 231], "interpol": 77, "inv": 13, "iter": 158, "kaiming_norm": 81, "kaiming_uniform": 82, "kei": [3, 4, 7, 132, 134, 157, 231], "layer": [95, 99, 105, 106, 110, 116, 124, 131], "layer_norm": 68, "layernorm": 123, "leaky_relu": 38, "leakyrelu": 89, "learn": 157, "lenet": 21, "lenet_1": 22, "lenet_4": 23, "lenet_5": 24, "limit": 7, "linalg": [8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "linear": [12, 55, 57, 58, 106, 109, 110], "list": 205, "load": 1, "log": 189, "loss": [55, 62, 106, 116], "lucid": [3, 4, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 25, 55, 132, 134, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 231], "matmul": 163, "matrix": 163, "matrix_pow": 14, "max": 190, "max_pool1d": 73, "max_pool2d": 74, "max_pool3d": 75, "maximum": 164, "maxpool1d": 128, "maxpool2d": 129, "maxpool3d": 130, "mean": 191, "meshgrid": 210, "method": [0, 1, 2, 5, 21, 27, 28, 133, 158], "min": 192, "minimum": 165, "mnist": 5, "model": [22, 23, 24, 25, 132], "modul": [27, 106], "moduledict": 29, "modulelist": 30, "more": 157, "mse_loss": 63, "mseloss": 114, "mul": 166, "multipl": [0, 163], "nadam": 141, "new": 148, "newaxi": 148, "nll_loss": 64, "nllloss": 115, "nn": [26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 132], "no_grad": 149, "norm": 15, "normal": [55, 66, 83, 106, 124, 223], "note": 7, "number": 151, "ones": 175, "ones_lik": 176, "oper": [12, 163, 179], "optim": [133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "organ": 132, "outer": 167, "overview": [3, 4, 7, 21, 22, 23, 24, 132, 134, 157, 231], "pad": 211, "paramet": [1, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 26, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 149, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "parameterdict": 31, "parameterlist": 32, "perform": 158, "pinv": 16, "pipelin": [3, 231], "pitfal": [147, 149], "pool": [55, 72, 106, 131], "potenti": [147, 149], "power": 168, "properti": [28, 158], "qr": 17, "radam": 142, "rais": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "rand": 152, "randint": 153, "randn": 154, "random": [151, 152, 153, 154, 155, 156, 157], "randomcrop": 224, "randomgrayscal": 225, "randomhorizontalflip": 226, "randomrot": 227, "randomverticalflip": 228, "ravel": 212, "reciproc": 193, "refer": [5, 134], "relu": [39, 90], "repeat": 213, "reshap": 214, "resiz": 229, "return": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 22, 23, 24, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 147, 149, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219], "rmsprop": 143, "rotat": 78, "rprop": 144, "rule": 163, "see": 134, "seed": 155, "selu": [40, 91], "sequenti": 33, "sgd": 145, "sigmoid": [41, 92], "sign": 194, "signatur": [0, 1, 2, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 50, 51, 52, 53, 56, 58, 59, 60, 61, 63, 64, 65, 67, 68, 69, 70, 71, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 107, 108, 109, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 149, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "sin": 195, "sinh": 196, "slice": 158, "softmax": [42, 93], "solv": 18, "sqrt": 197, "squar": 198, "squeez": 215, "stack": 216, "start": 134, "state": [134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "sub": 169, "sum": 199, "svd": 19, "tan": 200, "tanh": [43, 94, 201], "tensor": [148, 158, 179, 205, 209], "through": 158, "tile": 217, "totensor": 221, "trace": 202, "track": 158, "transform": [220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "transpos": 203, "type": 150, "unari": 179, "unfold": 48, "uniform": [84, 156], "unsqueez": 218, "us": [1, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 205], "usag": [4, 7, 21, 22, 23, 24, 26, 78, 147, 148, 149, 150, 210, 220, 221, 231], "util": [55, 76], "utilit": 209, "var": 204, "vstack": 219, "weight": 80, "why": 150, "work": [4, 147, 149], "xavier_norm": 85, "xavier_uniform": 86, "zero": 177, "zeros_lik": 178}})