Search.setIndex({"alltitles": {"@ Operator": [[187, "operator"]], "Activation Functions": [[50, null]], "Activation Layers": [[111, null], [126, null]], "Additional Details": [[16, "additional-details"]], "Admonitions and Usage Guidelines": [[174, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[61, "advanced-example-with-dilation"]], "Advanced Features": [[255, "advanced-features"]], "AlexNet": [[20, null]], "Algorithm": [[158, "algorithm"], [159, "algorithm"], [160, "algorithm"], [161, "algorithm"], [162, "algorithm"], [163, "algorithm"], [164, "algorithm"], [165, "algorithm"], [166, "algorithm"], [167, "algorithm"], [168, "algorithm"]], "Architecture": [[20, "architecture"], [28, "architecture"], [29, "architecture"], [30, "architecture"], [36, "architecture"]], "Attributes": [[5, "attributes"], [20, "attributes"], [27, "attributes"], [31, "attributes"], [36, "attributes"], [39, "attributes"], [41, "attributes"], [42, "attributes"], [43, "attributes"], [44, "attributes"], [45, "attributes"], [46, "attributes"], [103, "attributes"], [104, "attributes"], [105, "attributes"], [106, "attributes"], [107, "attributes"], [108, "attributes"], [109, "attributes"], [110, "attributes"], [112, "attributes"], [113, "attributes"], [114, "attributes"], [116, "attributes"], [117, "attributes"], [118, "attributes"], [119, "attributes"], [120, "attributes"], [122, "attributes"], [123, "attributes"], [124, "attributes"], [127, "attributes"], [128, "attributes"], [129, "attributes"], [131, "attributes"], [132, "attributes"], [133, "attributes"], [134, "attributes"], [135, "attributes"], [137, "attributes"], [138, "attributes"], [139, "attributes"], [140, "attributes"], [141, "attributes"], [142, "attributes"], [143, "attributes"], [145, "attributes"], [146, "attributes"], [147, "attributes"], [148, "attributes"], [149, "attributes"], [150, "attributes"], [151, "attributes"], [152, "attributes"], [153, "attributes"], [182, "attributes"], [246, "attributes"], [247, "attributes"], [248, "attributes"], [249, "attributes"], [250, "attributes"], [251, "attributes"], [252, "attributes"], [253, "attributes"]], "Backward Gradient Calculation": [[9, "backward-gradient-calculation"], [10, "backward-gradient-calculation"], [11, "backward-gradient-calculation"], [13, "backward-gradient-calculation"], [14, "backward-gradient-calculation"], [15, "backward-gradient-calculation"], [16, "backward-gradient-calculation"], [17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [42, "backward-gradient-calculation"], [43, "backward-gradient-calculation"], [44, "backward-gradient-calculation"], [45, "backward-gradient-calculation"], [46, "backward-gradient-calculation"], [48, "backward-gradient-calculation"], [49, "backward-gradient-calculation"], [51, "backward-gradient-calculation"], [52, "backward-gradient-calculation"], [53, "backward-gradient-calculation"], [54, "backward-gradient-calculation"], [55, "backward-gradient-calculation"], [56, "backward-gradient-calculation"], [69, "backward-gradient-calculation"], [71, "backward-gradient-calculation"], [93, "backward-gradient-calculation"], [102, "backward-gradient-calculation"], [103, "backward-gradient-calculation"], [104, "backward-gradient-calculation"], [105, "backward-gradient-calculation"], [106, "backward-gradient-calculation"], [107, "backward-gradient-calculation"], [108, "backward-gradient-calculation"], [109, "backward-gradient-calculation"], [110, "backward-gradient-calculation"], [112, "backward-gradient-calculation"], [113, "backward-gradient-calculation"], [114, "backward-gradient-calculation"], [116, "backward-gradient-calculation"], [117, "backward-gradient-calculation"], [118, "backward-gradient-calculation"], [119, "backward-gradient-calculation"], [120, "backward-gradient-calculation"], [127, "backward-gradient-calculation"], [128, "backward-gradient-calculation"], [129, "backward-gradient-calculation"], [131, "backward-gradient-calculation"], [132, "backward-gradient-calculation"], [133, "backward-gradient-calculation"], [134, "backward-gradient-calculation"], [135, "backward-gradient-calculation"], [137, "backward-gradient-calculation"], [138, "backward-gradient-calculation"], [139, "backward-gradient-calculation"], [140, "backward-gradient-calculation"], [141, "backward-gradient-calculation"], [142, "backward-gradient-calculation"], [143, "backward-gradient-calculation"], [148, "backward-gradient-calculation"], [149, "backward-gradient-calculation"], [150, "backward-gradient-calculation"], [151, "backward-gradient-calculation"], [152, "backward-gradient-calculation"], [153, "backward-gradient-calculation"], [183, "backward-gradient-calculation"], [184, "backward-gradient-calculation"], [185, "backward-gradient-calculation"], [186, "backward-gradient-calculation"], [187, "backward-gradient-calculation"], [188, "backward-gradient-calculation"], [189, "backward-gradient-calculation"], [190, "backward-gradient-calculation"], [191, "backward-gradient-calculation"], [192, "backward-gradient-calculation"], [193, "backward-gradient-calculation"], [204, "backward-gradient-calculation"], [205, "backward-gradient-calculation"], [206, "backward-gradient-calculation"], [207, "backward-gradient-calculation"], [208, "backward-gradient-calculation"], [209, "backward-gradient-calculation"], [210, "backward-gradient-calculation"], [211, "backward-gradient-calculation"], [212, "backward-gradient-calculation"], [213, "backward-gradient-calculation"], [214, "backward-gradient-calculation"], [215, "backward-gradient-calculation"], [216, "backward-gradient-calculation"], [217, "backward-gradient-calculation"], [218, "backward-gradient-calculation"], [219, "backward-gradient-calculation"], [220, "backward-gradient-calculation"], [221, "backward-gradient-calculation"], [222, "backward-gradient-calculation"], [223, "backward-gradient-calculation"], [224, "backward-gradient-calculation"], [225, "backward-gradient-calculation"], [226, "backward-gradient-calculation"], [227, "backward-gradient-calculation"], [228, "backward-gradient-calculation"], [230, "backward-gradient-calculation"], [232, "backward-gradient-calculation"], [234, "backward-gradient-calculation"], [235, "backward-gradient-calculation"], [236, "backward-gradient-calculation"], [237, "backward-gradient-calculation"], [238, "backward-gradient-calculation"], [239, "backward-gradient-calculation"], [240, "backward-gradient-calculation"], [241, "backward-gradient-calculation"], [242, "backward-gradient-calculation"], [243, "backward-gradient-calculation"]], "Behavior": [[82, "behavior"], [83, "behavior"], [84, "behavior"], [145, "behavior"], [146, "behavior"], [147, "behavior"]], "Benefits": [[172, "benefits"]], "Binary Functions": [[203, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [20, "class-signature"], [22, "class-signature"], [27, "class-signature"], [31, "class-signature"], [36, "class-signature"], [39, "class-signature"], [40, "class-signature"], [41, "class-signature"], [42, "class-signature"], [43, "class-signature"], [44, "class-signature"], [45, "class-signature"], [46, "class-signature"], [103, "class-signature"], [104, "class-signature"], [105, "class-signature"], [106, "class-signature"], [107, "class-signature"], [108, "class-signature"], [109, "class-signature"], [110, "class-signature"], [112, "class-signature"], [113, "class-signature"], [114, "class-signature"], [116, "class-signature"], [117, "class-signature"], [118, "class-signature"], [119, "class-signature"], [120, "class-signature"], [122, "class-signature"], [123, "class-signature"], [124, "class-signature"], [127, "class-signature"], [128, "class-signature"], [129, "class-signature"], [131, "class-signature"], [132, "class-signature"], [133, "class-signature"], [134, "class-signature"], [135, "class-signature"], [137, "class-signature"], [138, "class-signature"], [139, "class-signature"], [140, "class-signature"], [141, "class-signature"], [142, "class-signature"], [143, "class-signature"], [145, "class-signature"], [146, "class-signature"], [147, "class-signature"], [148, "class-signature"], [149, "class-signature"], [150, "class-signature"], [151, "class-signature"], [152, "class-signature"], [153, "class-signature"], [156, "class-signature"], [158, "class-signature"], [159, "class-signature"], [160, "class-signature"], [161, "class-signature"], [162, "class-signature"], [163, "class-signature"], [164, "class-signature"], [165, "class-signature"], [166, "class-signature"], [167, "class-signature"], [168, "class-signature"], [182, "class-signature"], [244, "class-signature"], [245, "class-signature"], [246, "class-signature"], [247, "class-signature"], [248, "class-signature"], [249, "class-signature"], [250, "class-signature"], [251, "class-signature"], [252, "class-signature"], [253, "class-signature"]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [7, "conclusion"], [155, "conclusion"], [170, "conclusion"], [171, "conclusion"], [172, "conclusion"], [181, "conclusion"], [245, "conclusion"], [255, "conclusion"]], "Containers": [[47, null]], "ConvNets": [[26, null], [38, "convnets"]], "Convolution Functions": [[60, null], [68, null]], "Convolution Layers": [[115, null], [126, null]], "Core Components": [[7, "core-components"]], "Create a Tensor from a list": [[229, null]], "Creating a Parameter": [[41, null]], "Creating a tensor with gradient tracking": [[182, null]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[255, "custom-pipelines"]], "Defining a Custom Optimizer": [[157, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[40, null]], "Defining a custom optimizer": [[156, null]], "Description": [[173, "description"]], "Dropout Functions": [[67, null], [68, null]], "Dropout Layers": [[121, null], [126, null]], "Example": [[3, null], [3, null], [3, null], [9, "example"], [10, "example"], [11, "example"], [13, "example"], [14, "example"], [15, "example"], [16, "example"], [17, "example"], [18, "example"], [19, "example"], [61, "example"], [155, null], [155, null], [155, null], [170, "example"], [172, "example"], [176, "example"], [177, "example"], [178, "example"], [179, "example"], [180, "example"], [181, null], [181, null], [181, null], [194, "example"], [195, "example"], [196, "example"], [197, "example"], [198, "example"], [199, "example"], [200, "example"], [201, "example"], [202, "example"], [204, "example"], [205, "example"], [206, "example"], [207, "example"], [208, "example"], [209, "example"], [210, "example"], [211, "example"], [213, "example"], [215, "example"], [217, "example"], [218, "example"], [219, "example"], [220, "example"], [221, "example"], [222, "example"], [223, "example"], [224, "example"], [225, "example"], [226, "example"], [227, "example"], [228, "example"], [230, "example"], [232, "example"], [236, "example"], [238, "example"], [239, "example"], [240, "example"], [242, "example"], [243, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[171, null]], "Example 2: Adding a new axis to a 2D tensor": [[171, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[171, null]], "Example Usage": [[7, "example-usage"], [23, "example-usage"], [24, "example-usage"], [25, "example-usage"], [27, "example-usage"], [28, "example-usage"], [29, "example-usage"], [30, "example-usage"], [94, "example-usage"], [244, "example-usage"], [245, "example-usage"], [255, "example-usage"]], "Example Use Cases": [[174, "example-use-cases"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [8, "examples"], [20, "examples"], [21, "examples"], [31, "examples"], [32, "examples"], [33, "examples"], [34, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [48, "examples"], [49, "examples"], [51, "examples"], [52, "examples"], [53, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [62, "examples"], [63, "examples"], [64, "examples"], [65, "examples"], [66, "examples"], [69, "examples"], [71, "examples"], [72, "examples"], [73, "examples"], [74, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [80, "examples"], [81, "examples"], [82, "examples"], [83, "examples"], [84, "examples"], [85, "examples"], [86, "examples"], [87, "examples"], [89, "examples"], [90, "examples"], [91, "examples"], [93, "examples"], [95, "examples"], [97, "examples"], [98, "examples"], [99, "examples"], [100, "examples"], [101, "examples"], [102, "examples"], [103, "examples"], [104, "examples"], [105, "examples"], [106, "examples"], [107, "examples"], [108, "examples"], [109, "examples"], [110, "examples"], [112, "examples"], [113, "examples"], [114, "examples"], [116, "examples"], [117, "examples"], [118, "examples"], [119, "examples"], [120, "examples"], [122, "examples"], [123, "examples"], [124, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [131, "examples"], [132, "examples"], [133, "examples"], [134, "examples"], [135, "examples"], [137, "examples"], [138, "examples"], [139, "examples"], [140, "examples"], [141, "examples"], [142, "examples"], [143, "examples"], [145, "examples"], [146, "examples"], [147, "examples"], [148, "examples"], [149, "examples"], [150, "examples"], [151, "examples"], [152, "examples"], [153, "examples"], [156, "examples"], [157, "examples"], [158, "examples"], [159, "examples"], [160, "examples"], [161, "examples"], [162, "examples"], [163, "examples"], [164, "examples"], [165, "examples"], [166, "examples"], [167, "examples"], [168, "examples"], [173, "examples"], [182, "examples"], [183, "examples"], [184, "examples"], [185, "examples"], [186, "examples"], [188, "examples"], [189, "examples"], [190, "examples"], [191, "examples"], [192, "examples"], [193, "examples"], [212, "examples"], [214, "examples"], [216, "examples"], [229, "examples"], [231, "examples"], [234, "examples"], [235, "examples"], [237, "examples"], [241, "examples"], [246, "examples"], [247, "examples"], [248, "examples"], [249, "examples"], [250, "examples"], [251, "examples"], [252, "examples"], [253, "examples"]], "Features": [[8, "features"]], "Forward Calculation": [[9, "forward-calculation"], [10, "forward-calculation"], [11, "forward-calculation"], [13, "forward-calculation"], [14, "forward-calculation"], [15, "forward-calculation"], [16, "forward-calculation"], [17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [42, "forward-calculation"], [43, "forward-calculation"], [44, "forward-calculation"], [45, "forward-calculation"], [46, "forward-calculation"], [48, "forward-calculation"], [49, "forward-calculation"], [51, "forward-calculation"], [52, "forward-calculation"], [53, "forward-calculation"], [54, "forward-calculation"], [55, "forward-calculation"], [56, "forward-calculation"], [61, "forward-calculation"], [69, "forward-calculation"], [71, "forward-calculation"], [82, "forward-calculation"], [83, "forward-calculation"], [84, "forward-calculation"], [93, "forward-calculation"], [97, "forward-calculation"], [98, "forward-calculation"], [101, "forward-calculation"], [102, "forward-calculation"], [103, "forward-calculation"], [104, "forward-calculation"], [105, "forward-calculation"], [106, "forward-calculation"], [107, "forward-calculation"], [108, "forward-calculation"], [109, "forward-calculation"], [110, "forward-calculation"], [112, "forward-calculation"], [113, "forward-calculation"], [114, "forward-calculation"], [116, "forward-calculation"], [117, "forward-calculation"], [118, "forward-calculation"], [119, "forward-calculation"], [120, "forward-calculation"], [122, "forward-calculation"], [123, "forward-calculation"], [124, "forward-calculation"], [127, "forward-calculation"], [128, "forward-calculation"], [129, "forward-calculation"], [131, "forward-calculation"], [132, "forward-calculation"], [133, "forward-calculation"], [134, "forward-calculation"], [135, "forward-calculation"], [137, "forward-calculation"], [138, "forward-calculation"], [139, "forward-calculation"], [140, "forward-calculation"], [141, "forward-calculation"], [142, "forward-calculation"], [143, "forward-calculation"], [145, "forward-calculation"], [146, "forward-calculation"], [147, "forward-calculation"], [148, "forward-calculation"], [149, "forward-calculation"], [150, "forward-calculation"], [151, "forward-calculation"], [152, "forward-calculation"], [153, "forward-calculation"], [183, "forward-calculation"], [184, "forward-calculation"], [185, "forward-calculation"], [186, "forward-calculation"], [187, "forward-calculation"], [188, "forward-calculation"], [189, "forward-calculation"], [190, "forward-calculation"], [191, "forward-calculation"], [192, "forward-calculation"], [193, "forward-calculation"], [204, "forward-calculation"], [205, "forward-calculation"], [206, "forward-calculation"], [207, "forward-calculation"], [208, "forward-calculation"], [209, "forward-calculation"], [210, "forward-calculation"], [211, "forward-calculation"], [212, "forward-calculation"], [213, "forward-calculation"], [214, "forward-calculation"], [215, "forward-calculation"], [216, "forward-calculation"], [217, "forward-calculation"], [218, "forward-calculation"], [219, "forward-calculation"], [220, "forward-calculation"], [221, "forward-calculation"], [222, "forward-calculation"], [223, "forward-calculation"], [224, "forward-calculation"], [225, "forward-calculation"], [226, "forward-calculation"], [227, "forward-calculation"], [228, "forward-calculation"], [230, "forward-calculation"], [232, "forward-calculation"], [234, "forward-calculation"], [235, "forward-calculation"], [236, "forward-calculation"], [237, "forward-calculation"], [238, "forward-calculation"], [239, "forward-calculation"], [240, "forward-calculation"], [241, "forward-calculation"], [242, "forward-calculation"], [243, "forward-calculation"], [246, "forward-calculation"], [247, "forward-calculation"], [248, "forward-calculation"], [249, "forward-calculation"], [250, "forward-calculation"], [251, "forward-calculation"], [252, "forward-calculation"], [253, "forward-calculation"]], "Function Signature": [[9, "function-signature"], [10, "function-signature"], [11, "function-signature"], [13, "function-signature"], [14, "function-signature"], [15, "function-signature"], [16, "function-signature"], [17, "function-signature"], [18, "function-signature"], [19, "function-signature"], [21, "function-signature"], [23, "function-signature"], [24, "function-signature"], [25, "function-signature"], [28, "function-signature"], [29, "function-signature"], [30, "function-signature"], [32, "function-signature"], [33, "function-signature"], [34, "function-signature"], [35, "function-signature"], [37, "function-signature"], [48, "function-signature"], [49, "function-signature"], [51, "function-signature"], [52, "function-signature"], [53, "function-signature"], [54, "function-signature"], [55, "function-signature"], [56, "function-signature"], [57, "function-signature"], [58, "function-signature"], [59, "function-signature"], [61, "function-signature"], [62, "function-signature"], [63, "function-signature"], [64, "function-signature"], [65, "function-signature"], [66, "function-signature"], [69, "function-signature"], [71, "function-signature"], [72, "function-signature"], [73, "function-signature"], [74, "function-signature"], [76, "function-signature"], [77, "function-signature"], [78, "function-signature"], [80, "function-signature"], [81, "function-signature"], [82, "function-signature"], [83, "function-signature"], [84, "function-signature"], [85, "function-signature"], [86, "function-signature"], [87, "function-signature"], [89, "function-signature"], [90, "function-signature"], [91, "function-signature"], [93, "function-signature"], [94, "function-signature"], [95, "function-signature"], [97, "function-signature"], [98, "function-signature"], [99, "function-signature"], [100, "function-signature"], [101, "function-signature"], [102, "function-signature"], [170, "function-signature"], [172, "function-signature"], [173, "function-signature"], [176, "function-signature"], [177, "function-signature"], [178, "function-signature"], [179, "function-signature"], [180, "function-signature"], [183, "function-signature"], [184, "function-signature"], [185, "function-signature"], [186, "function-signature"], [187, "function-signature"], [188, "function-signature"], [189, "function-signature"], [190, "function-signature"], [191, "function-signature"], [192, "function-signature"], [193, "function-signature"], [194, "function-signature"], [195, "function-signature"], [196, "function-signature"], [197, "function-signature"], [198, "function-signature"], [199, "function-signature"], [200, "function-signature"], [201, "function-signature"], [202, "function-signature"], [204, "function-signature"], [205, "function-signature"], [206, "function-signature"], [207, "function-signature"], [208, "function-signature"], [209, "function-signature"], [210, "function-signature"], [211, "function-signature"], [212, "function-signature"], [213, "function-signature"], [214, "function-signature"], [215, "function-signature"], [216, "function-signature"], [217, "function-signature"], [218, "function-signature"], [219, "function-signature"], [220, "function-signature"], [221, "function-signature"], [222, "function-signature"], [223, "function-signature"], [224, "function-signature"], [225, "function-signature"], [226, "function-signature"], [227, "function-signature"], [228, "function-signature"], [229, "function-signature"], [230, "function-signature"], [231, "function-signature"], [232, "function-signature"], [234, "function-signature"], [235, "function-signature"], [236, "function-signature"], [237, "function-signature"], [238, "function-signature"], [239, "function-signature"], [240, "function-signature"], [241, "function-signature"], [242, "function-signature"], [243, "function-signature"]], "Fused Layers": [[125, null], [126, null]], "Future Work": [[4, "future-work"]], "Getting Started": [[157, "getting-started"]], "How It Works": [[170, "how-it-works"], [172, "how-it-works"]], "Image Datasets": [[6, null]], "Image Transformations": [[254, null]], "Inception": [[22, null]], "Indexing and slicing": [[182, null]], "Inspecting Optimizer State": [[157, null], [158, null], [159, null], [160, null], [161, null], [162, null], [163, null], [164, null], [165, null], [166, null], [167, null], [168, null]], "Integration with lucid": [[3, "integration-with-lucid"], [155, "integration-with-lucid"], [181, "integration-with-lucid"], [255, "integration-with-lucid"]], "Iterating through a tensor": [[182, null]], "Key Components": [[3, "key-components"], [155, "key-components"]], "Key Features": [[4, "key-features"], [7, "key-features"], [157, "key-features"], [181, "key-features"]], "Key Transformations": [[255, "key-transformations"]], "LeNet": [[27, null]], "Learn More": [[181, null]], "Limitations": [[7, "limitations"]], "Linear Algebra Operations": [[12, null]], "Linear Functions": [[68, null], [70, null]], "Linear Layers": [[126, null], [130, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[68, null], [75, null]], "Loss Layers": [[126, null], [136, null]], "Lucid": [[7, null]], "Matrix Multiplication Rules": [[187, "matrix-multiplication-rules"]], "Metadata Captured": [[173, "metadata-captured"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [27, "methods"], [31, "methods"], [40, "methods"], [41, "methods"], [156, "methods"], [182, "methods"]], "Modules": [[126, null]], "Normalization Functions": [[68, null], [79, null]], "Normalization Layers": [[126, null], [144, null]], "Notes": [[7, "notes"]], "Optimizers": [[169, null]], "Organizing Models": [[155, "organizing-models"]], "Overview": [[3, "overview"], [4, "overview"], [7, "overview"], [22, "overview"], [23, "overview"], [24, "overview"], [25, "overview"], [27, "overview"], [28, "overview"], [29, "overview"], [30, "overview"], [155, "overview"], [157, "overview"], [181, "overview"], [255, "overview"]], "Parameters": [[1, "parameters"], [5, "parameters"], [9, "parameters"], [10, "parameters"], [11, "parameters"], [13, "parameters"], [14, "parameters"], [15, "parameters"], [16, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [20, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [27, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [39, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [48, "parameters"], [49, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [69, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [87, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [104, "parameters"], [105, "parameters"], [106, "parameters"], [107, "parameters"], [108, "parameters"], [109, "parameters"], [110, "parameters"], [112, "parameters"], [113, "parameters"], [114, "parameters"], [116, "parameters"], [117, "parameters"], [118, "parameters"], [119, "parameters"], [120, "parameters"], [122, "parameters"], [123, "parameters"], [124, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [135, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [158, "parameters"], [159, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [163, "parameters"], [164, "parameters"], [165, "parameters"], [166, "parameters"], [167, "parameters"], [168, "parameters"], [172, "parameters"], [173, "parameters"], [176, "parameters"], [177, "parameters"], [178, "parameters"], [179, "parameters"], [180, "parameters"], [182, "parameters"], [183, "parameters"], [184, "parameters"], [185, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [189, "parameters"], [190, "parameters"], [191, "parameters"], [192, "parameters"], [193, "parameters"], [194, "parameters"], [195, "parameters"], [196, "parameters"], [197, "parameters"], [198, "parameters"], [199, "parameters"], [200, "parameters"], [201, "parameters"], [202, "parameters"], [204, "parameters"], [205, "parameters"], [206, "parameters"], [207, "parameters"], [208, "parameters"], [209, "parameters"], [210, "parameters"], [211, "parameters"], [212, "parameters"], [213, "parameters"], [214, "parameters"], [215, "parameters"], [216, "parameters"], [217, "parameters"], [218, "parameters"], [219, "parameters"], [220, "parameters"], [221, "parameters"], [222, "parameters"], [223, "parameters"], [224, "parameters"], [225, "parameters"], [226, "parameters"], [227, "parameters"], [228, "parameters"], [229, "parameters"], [230, "parameters"], [231, "parameters"], [232, "parameters"], [234, "parameters"], [235, "parameters"], [236, "parameters"], [237, "parameters"], [238, "parameters"], [239, "parameters"], [240, "parameters"], [241, "parameters"], [242, "parameters"], [243, "parameters"], [244, "parameters"], [245, "parameters"], [246, "parameters"], [247, "parameters"], [248, "parameters"], [249, "parameters"], [250, "parameters"], [251, "parameters"], [252, "parameters"], [253, "parameters"]], "Performing backpropagation": [[182, null]], "Pooling Functions": [[68, null], [88, null]], "Pooling Layers": [[126, null], [154, null]], "Potential Pitfalls": [[170, "potential-pitfalls"], [172, "potential-pitfalls"]], "Properties": [[41, "properties"], [182, "properties"]], "Raises": [[9, "raises"], [10, "raises"], [11, "raises"], [13, "raises"], [14, "raises"], [15, "raises"], [16, "raises"], [17, "raises"], [18, "raises"], [19, "raises"]], "Random Number Generations": [[175, null]], "References": [[5, "references"], [157, "references"]], "Returns": [[9, "returns"], [10, "returns"], [11, "returns"], [13, "returns"], [14, "returns"], [15, "returns"], [16, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [21, "returns"], [23, "returns"], [24, "returns"], [25, "returns"], [28, "returns"], [29, "returns"], [30, "returns"], [32, "returns"], [33, "returns"], [34, "returns"], [35, "returns"], [37, "returns"], [48, "returns"], [49, "returns"], [51, "returns"], [52, "returns"], [53, "returns"], [54, "returns"], [55, "returns"], [56, "returns"], [57, "returns"], [58, "returns"], [59, "returns"], [61, "returns"], [62, "returns"], [63, "returns"], [64, "returns"], [65, "returns"], [66, "returns"], [69, "returns"], [71, "returns"], [72, "returns"], [73, "returns"], [74, "returns"], [76, "returns"], [77, "returns"], [78, "returns"], [80, "returns"], [81, "returns"], [82, "returns"], [83, "returns"], [84, "returns"], [85, "returns"], [86, "returns"], [87, "returns"], [89, "returns"], [90, "returns"], [91, "returns"], [93, "returns"], [94, "returns"], [95, "returns"], [97, "returns"], [98, "returns"], [99, "returns"], [100, "returns"], [101, "returns"], [102, "returns"], [170, "returns"], [172, "returns"], [176, "returns"], [177, "returns"], [178, "returns"], [179, "returns"], [180, "returns"], [183, "returns"], [184, "returns"], [185, "returns"], [186, "returns"], [187, "returns"], [188, "returns"], [189, "returns"], [190, "returns"], [191, "returns"], [192, "returns"], [193, "returns"], [194, "returns"], [195, "returns"], [196, "returns"], [197, "returns"], [198, "returns"], [199, "returns"], [200, "returns"], [201, "returns"], [202, "returns"], [204, "returns"], [205, "returns"], [206, "returns"], [207, "returns"], [208, "returns"], [209, "returns"], [210, "returns"], [211, "returns"], [212, "returns"], [213, "returns"], [214, "returns"], [215, "returns"], [216, "returns"], [217, "returns"], [218, "returns"], [219, "returns"], [220, "returns"], [221, "returns"], [222, "returns"], [223, "returns"], [224, "returns"], [225, "returns"], [226, "returns"], [227, "returns"], [228, "returns"], [229, "returns"], [230, "returns"], [231, "returns"], [232, "returns"], [234, "returns"], [235, "returns"], [236, "returns"], [237, "returns"], [238, "returns"], [239, "returns"], [240, "returns"], [241, "returns"], [242, "returns"], [243, "returns"]], "See Also": [[157, "see-also"]], "Tensor Generating Functions": [[203, null]], "Tensor Operations": [[203, null]], "Tensor Utilites": [[233, null]], "Type Definitions": [[174, "type-definitions"]], "Unary Functions": [[203, null]], "Usage": [[4, "usage"], [39, "usage"], [94, "usage"], [170, "usage"], [171, "usage"], [172, "usage"], [234, "usage"], [244, "usage"], [245, "usage"], [255, "usage"]], "Use another Tensor as input": [[229, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using the ASGD Optimizer": [[158, null]], "Using the Adadelta Optimizer": [[159, null]], "Using the Adagrad Optimizer": [[160, null]], "Using the Adam Optimizer": [[161, null]], "Using the AdamW Optimizer": [[162, null]], "Using the Adamax Optimizer": [[163, null]], "Using the NAdam Optimizer": [[164, null]], "Using the RAdam Optimizer": [[165, null]], "Using the RMSprop Optimizer": [[166, null]], "Using the Rprop Optimizer": [[167, null]], "Using the SGD Optimizer": [[168, null]], "Utility Functions": [[68, null], [92, null]], "VGGNet": [[31, null]], "Weight Initializations": [[96, null]], "Why Use Type Aliases?": [[174, null]], "ZFNet": [[36, null]], "activation Functions": [[68, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "datasets.MNIST": [[5, null]], "lucid.Tensor": [[182, null]], "lucid.abs": [[204, null]], "lucid.add": [[183, null]], "lucid.arange": [[194, null]], "lucid.arccos": [[205, null]], "lucid.arcsin": [[206, null]], "lucid.arctan": [[207, null]], "lucid.clip": [[208, null]], "lucid.concatenate": [[230, null]], "lucid.cos": [[209, null]], "lucid.cosh": [[210, null]], "lucid.cube": [[211, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[195, null]], "lucid.div": [[184, null]], "lucid.dot": [[185, null]], "lucid.empty": [[196, null]], "lucid.empty_like": [[197, null]], "lucid.exp": [[212, null]], "lucid.eye": [[198, null]], "lucid.flatten": [[231, null]], "lucid.grad_enabled": [[170, null]], "lucid.hstack": [[232, null]], "lucid.inner": [[186, null]], "lucid.linalg": [[8, null]], "lucid.linalg.cholesky": [[9, null]], "lucid.linalg.det": [[10, null]], "lucid.linalg.eig": [[11, null]], "lucid.linalg.inv": [[13, null]], "lucid.linalg.matrix_power": [[14, null]], "lucid.linalg.norm": [[15, null]], "lucid.linalg.pinv": [[16, null]], "lucid.linalg.qr": [[17, null]], "lucid.linalg.solve": [[18, null]], "lucid.linalg.svd": [[19, null]], "lucid.log": [[213, null]], "lucid.matmul": [[187, null]], "lucid.max": [[214, null]], "lucid.maximum": [[188, null]], "lucid.mean": [[215, null]], "lucid.meshgrid": [[234, null]], "lucid.min": [[216, null]], "lucid.minimum": [[189, null]], "lucid.models": [[38, null]], "lucid.mul": [[190, null]], "lucid.newaxis": [[171, null]], "lucid.nn": [[155, null]], "lucid.nn.functional": [[68, null]], "lucid.no_grad": [[172, null]], "lucid.ones": [[199, null]], "lucid.ones_like": [[200, null]], "lucid.optim": [[157, null]], "lucid.outer": [[191, null]], "lucid.pad": [[235, null]], "lucid.power": [[192, null]], "lucid.random": [[181, null]], "lucid.random.rand": [[176, null]], "lucid.random.randint": [[177, null]], "lucid.random.randn": [[178, null]], "lucid.random.seed": [[179, null]], "lucid.random.uniform": [[180, null]], "lucid.ravel": [[236, null]], "lucid.reciprocal": [[217, null]], "lucid.register_model": [[173, null]], "lucid.repeat": [[237, null]], "lucid.reshape": [[238, null]], "lucid.sign": [[218, null]], "lucid.sin": [[219, null]], "lucid.sinh": [[220, null]], "lucid.sqrt": [[221, null]], "lucid.square": [[222, null]], "lucid.squeeze": [[239, null]], "lucid.stack": [[240, null]], "lucid.sub": [[193, null]], "lucid.sum": [[223, null]], "lucid.tan": [[224, null]], "lucid.tanh": [[225, null]], "lucid.tensor": [[229, null]], "lucid.tile": [[241, null]], "lucid.trace": [[226, null]], "lucid.transforms": [[255, null]], "lucid.transpose": [[227, null]], "lucid.types": [[174, null]], "lucid.unsqueeze": [[242, null]], "lucid.var": [[228, null]], "lucid.vstack": [[243, null]], "lucid.zeros": [[201, null]], "lucid.zeros_like": [[202, null]], "models.alexnet": [[21, null]], "models.inception_v1": [[23, null]], "models.inception_v3": [[24, null]], "models.inception_v4": [[25, null]], "models.lenet_1": [[28, null]], "models.lenet_4": [[29, null]], "models.lenet_5": [[30, null]], "models.vggnet_11": [[32, null]], "models.vggnet_13": [[33, null]], "models.vggnet_16": [[34, null]], "models.vggnet_19": [[35, null]], "models.zfnet": [[37, null]], "nn.AdaptiveAvgPool1d": [[145, null]], "nn.AdaptiveAvgPool2d": [[146, null]], "nn.AdaptiveAvgPool3d": [[147, null]], "nn.AlphaDropout": [[116, null]], "nn.AvgPool1d": [[148, null]], "nn.AvgPool2d": [[149, null]], "nn.AvgPool3d": [[150, null]], "nn.BCELoss": [[131, null]], "nn.BatchNorm1d": [[137, null]], "nn.BatchNorm2d": [[138, null]], "nn.BatchNorm3d": [[139, null]], "nn.Bilinear": [[127, null]], "nn.Buffer": [[39, null]], "nn.Conv1d": [[112, null]], "nn.Conv2d": [[113, null]], "nn.Conv3d": [[114, null]], "nn.ConvBNReLU1d": [[122, null]], "nn.ConvBNReLU2d": [[123, null]], "nn.ConvBNReLU3d": [[124, null]], "nn.CrossEntropyLoss": [[132, null]], "nn.Dropout": [[117, null]], "nn.Dropout1d": [[118, null]], "nn.Dropout2d": [[119, null]], "nn.Dropout3d": [[120, null]], "nn.ELU": [[103, null]], "nn.GELU": [[104, null]], "nn.HuberLoss": [[133, null]], "nn.Identity": [[128, null]], "nn.InstanceNorm1d": [[140, null]], "nn.InstanceNorm2d": [[141, null]], "nn.InstanceNorm3d": [[142, null]], "nn.LayerNorm": [[143, null]], "nn.LeakyReLU": [[105, null]], "nn.Linear": [[129, null]], "nn.MSELoss": [[134, null]], "nn.MaxPool1d": [[151, null]], "nn.MaxPool2d": [[152, null]], "nn.MaxPool3d": [[153, null]], "nn.Module": [[40, null]], "nn.ModuleDict": [[42, null]], "nn.ModuleList": [[43, null]], "nn.NLLLoss": [[135, null]], "nn.Parameter": [[41, null]], "nn.ParameterDict": [[44, null]], "nn.ParameterList": [[45, null]], "nn.ReLU": [[106, null]], "nn.SELU": [[107, null]], "nn.Sequential": [[46, null]], "nn.Sigmoid": [[108, null]], "nn.Softmax": [[109, null]], "nn.Tanh": [[110, null]], "nn.functional.adaptive_avg_pool1d": [[82, null]], "nn.functional.adaptive_avg_pool2d": [[83, null]], "nn.functional.adaptive_avg_pool3d": [[84, null]], "nn.functional.alpha_dropout": [[62, null]], "nn.functional.avg_pool1d": [[85, null]], "nn.functional.avg_pool2d": [[86, null]], "nn.functional.avg_pool3d": [[87, null]], "nn.functional.batch_norm": [[78, null]], "nn.functional.bilinear": [[69, null]], "nn.functional.binary_cross_entropy": [[72, null]], "nn.functional.conv1d": [[57, null]], "nn.functional.conv2d": [[58, null]], "nn.functional.conv3d": [[59, null]], "nn.functional.cross_entropy": [[73, null]], "nn.functional.dropout": [[63, null]], "nn.functional.dropout1d": [[64, null]], "nn.functional.dropout2d": [[65, null]], "nn.functional.dropout3d": [[66, null]], "nn.functional.elu": [[48, null]], "nn.functional.gelu": [[49, null]], "nn.functional.huber_loss": [[74, null]], "nn.functional.instance_norm": [[80, null]], "nn.functional.interpolate": [[93, null]], "nn.functional.layer_norm": [[81, null]], "nn.functional.leaky_relu": [[51, null]], "nn.functional.linear": [[71, null]], "nn.functional.max_pool1d": [[89, null]], "nn.functional.max_pool2d": [[90, null]], "nn.functional.max_pool3d": [[91, null]], "nn.functional.mse_loss": [[76, null]], "nn.functional.nll_loss": [[77, null]], "nn.functional.relu": [[52, null]], "nn.functional.rotate": [[94, null]], "nn.functional.selu": [[53, null]], "nn.functional.sigmoid": [[54, null]], "nn.functional.softmax": [[55, null]], "nn.functional.tanh": [[56, null]], "nn.functional.unfold": [[61, null]], "nn.init.constant": [[95, null]], "nn.init.kaiming_normal": [[97, null]], "nn.init.kaiming_uniform": [[98, null]], "nn.init.normal": [[99, null]], "nn.init.uniform": [[100, null]], "nn.init.xavier_normal": [[101, null]], "nn.init.xavier_uniform": [[102, null]], "optim.ASGD": [[158, null]], "optim.Adadelta": [[159, null]], "optim.Adagrad": [[160, null]], "optim.Adam": [[161, null]], "optim.AdamW": [[162, null]], "optim.Adamax": [[163, null]], "optim.NAdam": [[164, null]], "optim.Optimizer": [[156, null]], "optim.RAdam": [[165, null]], "optim.RMSprop": [[166, null]], "optim.Rprop": [[167, null]], "optim.SGD": [[168, null]], "transforms.CenterCrop": [[246, null]], "transforms.Compose": [[244, null]], "transforms.Normalize": [[247, null]], "transforms.RandomCrop": [[248, null]], "transforms.RandomGrayscale": [[249, null]], "transforms.RandomHorizontalFlip": [[250, null]], "transforms.RandomRotation": [[251, null]], "transforms.RandomVerticalFlip": [[252, null]], "transforms.Resize": [[253, null]], "transforms.ToTensor": [[245, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/MNIST", "datasets/image/index", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/conv/alex/AlexNet", "models/conv/alex/alexnet", "models/conv/inception/Inception", "models/conv/inception/inception_v1", "models/conv/inception/inception_v3", "models/conv/inception/inception_v4", "models/conv/index", "models/conv/lenet/LeNet", "models/conv/lenet/lenet_1", "models/conv/lenet/lenet_4", "models/conv/lenet/lenet_5", "models/conv/vgg/VGGNet", "models/conv/vgg/vggnet_11", "models/conv/vgg/vggnet_13", "models/conv/vgg/vggnet_16", "models/conv/vgg/vggnet_19", "models/conv/zfnet/ZFNet", "models/conv/zfnet/zfnet", "models/models", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/fused/ConvBNReLU1d", "nn/modules/fused/ConvBNReLU2d", "nn/modules/fused/ConvBNReLU3d", "nn/modules/fused/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/nn", "optim/Optimizer", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "others/types", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/meshgrid", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/conv/alex/AlexNet.rst", "models/conv/alex/alexnet.rst", "models/conv/inception/Inception.rst", "models/conv/inception/inception_v1.rst", "models/conv/inception/inception_v3.rst", "models/conv/inception/inception_v4.rst", "models/conv/index.rst", "models/conv/lenet/LeNet.rst", "models/conv/lenet/lenet_1.rst", "models/conv/lenet/lenet_4.rst", "models/conv/lenet/lenet_5.rst", "models/conv/vgg/VGGNet.rst", "models/conv/vgg/vggnet_11.rst", "models/conv/vgg/vggnet_13.rst", "models/conv/vgg/vggnet_16.rst", "models/conv/vgg/vggnet_19.rst", "models/conv/zfnet/ZFNet.rst", "models/conv/zfnet/zfnet.rst", "models/models.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/fused/ConvBNReLU1d.rst", "nn/modules/fused/ConvBNReLU2d.rst", "nn/modules/fused/ConvBNReLU3d.rst", "nn/modules/fused/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "others/types.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"abs() (in module lucid)": [[204, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[159, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[160, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[161, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[163, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[162, "lucid.optim.AdamW", false]], "adaptive_avg_pool1d() (in module lucid.nn.functional)": [[82, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[83, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[84, "lucid.nn.functional.adaptive_avg_pool3d", false]], "adaptiveavgpool1d (class in lucid.nn)": [[145, "lucid.nn.AdaptiveAvgPool1d", false]], "adaptiveavgpool2d (class in lucid.nn)": [[146, "lucid.nn.AdaptiveAvgPool2d", false]], "adaptiveavgpool3d (class in lucid.nn)": [[147, "lucid.nn.AdaptiveAvgPool3d", false]], "add() (in module lucid)": [[183, "lucid.add", false]], "alexnet (class in lucid.models)": [[20, "lucid.models.AlexNet", false]], "alexnet() (in module lucid.models)": [[21, "lucid.models.alexnet", false]], "alpha_dropout() (in module lucid.nn.functional)": [[62, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[116, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[194, "lucid.arange", false]], "arccos() (in module lucid)": [[205, "lucid.arccos", false]], "arcsin() (in module lucid)": [[206, "lucid.arcsin", false]], "arctan() (in module lucid)": [[207, "lucid.arctan", false]], "asgd (class in lucid.optim)": [[158, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[85, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[86, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[87, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[148, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[149, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[150, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[78, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[137, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[138, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[139, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[131, "lucid.nn.BCELoss", false]], "bilinear (class in lucid.nn)": [[127, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[69, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[72, "lucid.nn.functional.binary_cross_entropy", false]], "buffer (class in lucid.nn)": [[39, "lucid.nn.Buffer", false]], "centercrop (class in lucid.transforms)": [[246, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[9, "lucid.linalg.cholesky", false]], "clip() (in module lucid)": [[208, "lucid.clip", false]], "compose (class in lucid.transforms)": [[244, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[230, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[95, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[112, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[57, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[113, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[58, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[114, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[59, "lucid.nn.functional.conv3d", false]], "convbnrelu1d (class in lucid.nn)": [[122, "lucid.nn.ConvBNReLU1d", false]], "convbnrelu2d (class in lucid.nn)": [[123, "lucid.nn.ConvBNReLU2d", false]], "convbnrelu3d (class in lucid.nn)": [[124, "lucid.nn.ConvBNReLU3d", false]], "cos() (in module lucid)": [[209, "lucid.cos", false]], "cosh() (in module lucid)": [[210, "lucid.cosh", false]], "cross_entropy() (in module lucid.nn.functional)": [[73, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[132, "lucid.nn.CrossEntropyLoss", false]], "cube() (in module lucid)": [[211, "lucid.cube", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "det() (in module lucid.linalg)": [[10, "lucid.linalg.det", false]], "diag() (in module lucid)": [[195, "lucid.diag", false]], "div() (in module lucid)": [[184, "lucid.div", false]], "dot() (in module lucid)": [[185, "lucid.dot", false]], "dropout (class in lucid.nn)": [[117, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[63, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[118, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[64, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[119, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[65, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[120, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[66, "lucid.nn.functional.dropout3d", false]], "eig() (in module lucid.linalg)": [[11, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[103, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[48, "lucid.nn.functional.elu", false]], "empty() (in module lucid)": [[196, "lucid.empty", false]], "empty_like() (in module lucid)": [[197, "lucid.empty_like", false]], "exp() (in module lucid)": [[212, "lucid.exp", false]], "eye() (in module lucid)": [[198, "lucid.eye", false]], "flatten() (in module lucid)": [[231, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[104, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[49, "lucid.nn.functional.gelu", false]], "grad_enabled() (in module lucid)": [[170, "lucid.grad_enabled", false]], "hstack() (in module lucid)": [[232, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[74, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[133, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[128, "lucid.nn.Identity", false]], "inception (class in lucid.models)": [[22, "lucid.models.Inception", false]], "inception_v1() (in module lucid.models)": [[23, "lucid.models.inception_v1", false]], "inception_v3() (in module lucid.models)": [[24, "lucid.models.inception_v3", false]], "inception_v4() (in module lucid.models)": [[25, "lucid.models.inception_v4", false]], "inner() (in module lucid)": [[186, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[80, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[140, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[141, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[142, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[93, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[13, "lucid.linalg.inv", false]], "kaiming_normal() (in module lucid.nn.init)": [[97, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[98, "lucid.nn.init.kaiming_uniform", false]], "layer_norm() (in module lucid.nn.functional)": [[81, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[143, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[51, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[105, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[27, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[28, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[29, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[30, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[129, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[71, "lucid.nn.functional.linear", false]], "log() (in module lucid)": [[213, "lucid.log", false]], "lucid": [[7, "module-lucid", false]], "matmul() (in module lucid)": [[187, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[14, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[214, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[89, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[90, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[91, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[188, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[151, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[152, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[153, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[215, "lucid.mean", false]], "meshgrid() (in module lucid)": [[234, "lucid.meshgrid", false]], "min() (in module lucid)": [[216, "lucid.min", false]], "minimum() (in module lucid)": [[189, "lucid.minimum", false]], "mnist (class in lucid.datasets)": [[5, "lucid.datasets.MNIST", false]], "module": [[7, "module-lucid", false]], "module (class in lucid.nn)": [[40, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[42, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[43, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[76, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[134, "lucid.nn.MSELoss", false]], "mul() (in module lucid)": [[190, "lucid.mul", false]], "nadam (class in lucid.optim)": [[164, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[77, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[135, "lucid.nn.NLLLoss", false]], "no_grad() (in module lucid)": [[172, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[15, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[99, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[247, "lucid.transforms.Normalize", false]], "ones() (in module lucid)": [[199, "lucid.ones", false]], "ones_like() (in module lucid)": [[200, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[156, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[191, "lucid.outer", false]], "pad() (in module lucid)": [[235, "lucid.pad", false]], "parameter (class in lucid.nn)": [[41, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[44, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[45, "lucid.nn.ParameterList", false]], "pinv() (in module lucid.linalg)": [[16, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[192, "lucid.power", false]], "qr() (in module lucid.linalg)": [[17, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[165, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[176, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[177, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[178, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[248, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[249, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[250, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[251, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[252, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[236, "lucid.ravel", false]], "reciprocal() (in module lucid)": [[217, "lucid.reciprocal", false]], "register_model() (in module lucid)": [[173, "lucid.register_model", false]], "relu (class in lucid.nn)": [[106, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[52, "lucid.nn.functional.relu", false]], "repeat() (in module lucid)": [[237, "lucid.repeat", false]], "reshape() (in module lucid)": [[238, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[253, "lucid.transforms.Resize", false]], "rmsprop (class in lucid.optim)": [[166, "lucid.optim.RMSprop", false]], "rotate() (in module lucid.nn.functional)": [[94, "lucid.nn.functional.rotate", false]], "rprop (class in lucid.optim)": [[167, "lucid.optim.Rprop", false]], "seed() (in module lucid.random)": [[179, "lucid.random.seed", false]], "selu (class in lucid.nn)": [[107, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[53, "lucid.nn.functional.selu", false]], "sequential (class in lucid.nn)": [[46, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[168, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[108, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[54, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[218, "lucid.sign", false]], "sin() (in module lucid)": [[219, "lucid.sin", false]], "sinh() (in module lucid)": [[220, "lucid.sinh", false]], "softmax (class in lucid.nn)": [[109, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[55, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[18, "lucid.linalg.solve", false]], "sqrt() (in module lucid)": [[221, "lucid.sqrt", false]], "square() (in module lucid)": [[222, "lucid.square", false]], "squeeze() (in module lucid)": [[239, "lucid.squeeze", false]], "stack() (in module lucid)": [[240, "lucid.stack", false]], "sub() (in module lucid)": [[193, "lucid.sub", false]], "sum() (in module lucid)": [[223, "lucid.sum", false]], "svd() (in module lucid.linalg)": [[19, "lucid.linalg.svd", false]], "tan() (in module lucid)": [[224, "lucid.tan", false]], "tanh (class in lucid.nn)": [[110, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[225, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[56, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[182, "lucid.Tensor", false]], "tensor() (in module lucid)": [[229, "lucid.tensor", false]], "tile() (in module lucid)": [[241, "lucid.tile", false]], "totensor (class in lucid.transforms)": [[245, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[226, "lucid.trace", false]], "transpose() (in module lucid)": [[227, "lucid.transpose", false]], "unfold() (in module lucid.nn.functional)": [[61, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[100, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[180, "lucid.random.uniform", false]], "unsqueeze() (in module lucid)": [[242, "lucid.unsqueeze", false]], "var() (in module lucid)": [[228, "lucid.var", false]], "vggnet (class in lucid.models)": [[31, "lucid.models.VGGNet", false]], "vggnet_11() (in module lucid.models)": [[32, "lucid.models.vggnet_11", false]], "vggnet_13() (in module lucid.models)": [[33, "lucid.models.vggnet_13", false]], "vggnet_16() (in module lucid.models)": [[34, "lucid.models.vggnet_16", false]], "vggnet_19() (in module lucid.models)": [[35, "lucid.models.vggnet_19", false]], "vstack() (in module lucid)": [[243, "lucid.vstack", false]], "xavier_normal() (in module lucid.nn.init)": [[101, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[102, "lucid.nn.init.xavier_uniform", false]], "zeros() (in module lucid)": [[201, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[202, "lucid.zeros_like", false]], "zfnet (class in lucid.models)": [[36, "lucid.models.ZFNet", false]], "zfnet() (in module lucid.models)": [[37, "lucid.models.zfnet", false]]}, "objects": {"": [[7, 0, 0, "-", "lucid"]], "lucid": [[182, 1, 1, "", "Tensor"], [204, 2, 1, "", "abs"], [183, 2, 1, "", "add"], [194, 2, 1, "", "arange"], [205, 2, 1, "", "arccos"], [206, 2, 1, "", "arcsin"], [207, 2, 1, "", "arctan"], [208, 2, 1, "", "clip"], [230, 2, 1, "", "concatenate"], [209, 2, 1, "", "cos"], [210, 2, 1, "", "cosh"], [211, 2, 1, "", "cube"], [195, 2, 1, "", "diag"], [184, 2, 1, "", "div"], [185, 2, 1, "", "dot"], [196, 2, 1, "", "empty"], [197, 2, 1, "", "empty_like"], [212, 2, 1, "", "exp"], [198, 2, 1, "", "eye"], [231, 2, 1, "", "flatten"], [170, 2, 1, "", "grad_enabled"], [232, 2, 1, "", "hstack"], [186, 2, 1, "", "inner"], [213, 2, 1, "", "log"], [187, 2, 1, "", "matmul"], [214, 2, 1, "", "max"], [188, 2, 1, "", "maximum"], [215, 2, 1, "", "mean"], [234, 2, 1, "", "meshgrid"], [216, 2, 1, "", "min"], [189, 2, 1, "", "minimum"], [190, 2, 1, "", "mul"], [172, 2, 1, "", "no_grad"], [199, 2, 1, "", "ones"], [200, 2, 1, "", "ones_like"], [191, 2, 1, "", "outer"], [235, 2, 1, "", "pad"], [192, 2, 1, "", "power"], [236, 2, 1, "", "ravel"], [217, 2, 1, "", "reciprocal"], [173, 2, 1, "", "register_model"], [237, 2, 1, "", "repeat"], [238, 2, 1, "", "reshape"], [218, 2, 1, "", "sign"], [219, 2, 1, "", "sin"], [220, 2, 1, "", "sinh"], [221, 2, 1, "", "sqrt"], [222, 2, 1, "", "square"], [239, 2, 1, "", "squeeze"], [240, 2, 1, "", "stack"], [193, 2, 1, "", "sub"], [223, 2, 1, "", "sum"], [224, 2, 1, "", "tan"], [225, 2, 1, "", "tanh"], [229, 2, 1, "", "tensor"], [241, 2, 1, "", "tile"], [226, 2, 1, "", "trace"], [227, 2, 1, "", "transpose"], [242, 2, 1, "", "unsqueeze"], [228, 2, 1, "", "var"], [243, 2, 1, "", "vstack"], [201, 2, 1, "", "zeros"], [202, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "MNIST"]], "lucid.linalg": [[9, 2, 1, "", "cholesky"], [10, 2, 1, "", "det"], [11, 2, 1, "", "eig"], [13, 2, 1, "", "inv"], [14, 2, 1, "", "matrix_power"], [15, 2, 1, "", "norm"], [16, 2, 1, "", "pinv"], [17, 2, 1, "", "qr"], [18, 2, 1, "", "solve"], [19, 2, 1, "", "svd"]], "lucid.models": [[20, 1, 1, "", "AlexNet"], [22, 1, 1, "", "Inception"], [27, 1, 1, "", "LeNet"], [31, 1, 1, "", "VGGNet"], [36, 1, 1, "", "ZFNet"], [21, 2, 1, "", "alexnet"], [23, 2, 1, "", "inception_v1"], [24, 2, 1, "", "inception_v3"], [25, 2, 1, "", "inception_v4"], [28, 2, 1, "", "lenet_1"], [29, 2, 1, "", "lenet_4"], [30, 2, 1, "", "lenet_5"], [32, 2, 1, "", "vggnet_11"], [33, 2, 1, "", "vggnet_13"], [34, 2, 1, "", "vggnet_16"], [35, 2, 1, "", "vggnet_19"], [37, 2, 1, "", "zfnet"]], "lucid.nn": [[145, 1, 1, "", "AdaptiveAvgPool1d"], [146, 1, 1, "", "AdaptiveAvgPool2d"], [147, 1, 1, "", "AdaptiveAvgPool3d"], [116, 1, 1, "", "AlphaDropout"], [148, 1, 1, "", "AvgPool1d"], [149, 1, 1, "", "AvgPool2d"], [150, 1, 1, "", "AvgPool3d"], [131, 1, 1, "", "BCELoss"], [137, 1, 1, "", "BatchNorm1d"], [138, 1, 1, "", "BatchNorm2d"], [139, 1, 1, "", "BatchNorm3d"], [127, 1, 1, "", "Bilinear"], [39, 1, 1, "", "Buffer"], [112, 1, 1, "", "Conv1d"], [113, 1, 1, "", "Conv2d"], [114, 1, 1, "", "Conv3d"], [122, 1, 1, "", "ConvBNReLU1d"], [123, 1, 1, "", "ConvBNReLU2d"], [124, 1, 1, "", "ConvBNReLU3d"], [132, 1, 1, "", "CrossEntropyLoss"], [117, 1, 1, "", "Dropout"], [118, 1, 1, "", "Dropout1d"], [119, 1, 1, "", "Dropout2d"], [120, 1, 1, "", "Dropout3d"], [103, 1, 1, "", "ELU"], [104, 1, 1, "", "GELU"], [133, 1, 1, "", "HuberLoss"], [128, 1, 1, "", "Identity"], [140, 1, 1, "", "InstanceNorm1d"], [141, 1, 1, "", "InstanceNorm2d"], [142, 1, 1, "", "InstanceNorm3d"], [143, 1, 1, "", "LayerNorm"], [105, 1, 1, "", "LeakyReLU"], [129, 1, 1, "", "Linear"], [134, 1, 1, "", "MSELoss"], [151, 1, 1, "", "MaxPool1d"], [152, 1, 1, "", "MaxPool2d"], [153, 1, 1, "", "MaxPool3d"], [40, 1, 1, "", "Module"], [42, 1, 1, "", "ModuleDict"], [43, 1, 1, "", "ModuleList"], [135, 1, 1, "", "NLLLoss"], [41, 1, 1, "", "Parameter"], [44, 1, 1, "", "ParameterDict"], [45, 1, 1, "", "ParameterList"], [106, 1, 1, "", "ReLU"], [107, 1, 1, "", "SELU"], [46, 1, 1, "", "Sequential"], [108, 1, 1, "", "Sigmoid"], [109, 1, 1, "", "Softmax"], [110, 1, 1, "", "Tanh"]], "lucid.nn.functional": [[82, 2, 1, "", "adaptive_avg_pool1d"], [83, 2, 1, "", "adaptive_avg_pool2d"], [84, 2, 1, "", "adaptive_avg_pool3d"], [62, 2, 1, "", "alpha_dropout"], [85, 2, 1, "", "avg_pool1d"], [86, 2, 1, "", "avg_pool2d"], [87, 2, 1, "", "avg_pool3d"], [78, 2, 1, "", "batch_norm"], [69, 2, 1, "", "bilinear"], [72, 2, 1, "", "binary_cross_entropy"], [57, 2, 1, "", "conv1d"], [58, 2, 1, "", "conv2d"], [59, 2, 1, "", "conv3d"], [73, 2, 1, "", "cross_entropy"], [63, 2, 1, "", "dropout"], [64, 2, 1, "", "dropout1d"], [65, 2, 1, "", "dropout2d"], [66, 2, 1, "", "dropout3d"], [48, 2, 1, "", "elu"], [49, 2, 1, "", "gelu"], [74, 2, 1, "", "huber_loss"], [80, 2, 1, "", "instance_norm"], [93, 2, 1, "", "interpolate"], [81, 2, 1, "", "layer_norm"], [51, 2, 1, "", "leaky_relu"], [71, 2, 1, "", "linear"], [89, 2, 1, "", "max_pool1d"], [90, 2, 1, "", "max_pool2d"], [91, 2, 1, "", "max_pool3d"], [76, 2, 1, "", "mse_loss"], [77, 2, 1, "", "nll_loss"], [52, 2, 1, "", "relu"], [94, 2, 1, "", "rotate"], [53, 2, 1, "", "selu"], [54, 2, 1, "", "sigmoid"], [55, 2, 1, "", "softmax"], [56, 2, 1, "", "tanh"], [61, 2, 1, "", "unfold"]], "lucid.nn.init": [[95, 2, 1, "", "constant"], [97, 2, 1, "", "kaiming_normal"], [98, 2, 1, "", "kaiming_uniform"], [99, 2, 1, "", "normal"], [100, 2, 1, "", "uniform"], [101, 2, 1, "", "xavier_normal"], [102, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[158, 1, 1, "", "ASGD"], [159, 1, 1, "", "Adadelta"], [160, 1, 1, "", "Adagrad"], [161, 1, 1, "", "Adam"], [162, 1, 1, "", "AdamW"], [163, 1, 1, "", "Adamax"], [164, 1, 1, "", "NAdam"], [156, 1, 1, "", "Optimizer"], [165, 1, 1, "", "RAdam"], [166, 1, 1, "", "RMSprop"], [167, 1, 1, "", "Rprop"], [168, 1, 1, "", "SGD"]], "lucid.random": [[176, 2, 1, "", "rand"], [177, 2, 1, "", "randint"], [178, 2, 1, "", "randn"], [179, 2, 1, "", "seed"], [180, 2, 1, "", "uniform"]], "lucid.transforms": [[246, 1, 1, "", "CenterCrop"], [244, 1, 1, "", "Compose"], [247, 1, 1, "", "Normalize"], [248, 1, 1, "", "RandomCrop"], [249, 1, 1, "", "RandomGrayscale"], [250, 1, 1, "", "RandomHorizontalFlip"], [251, 1, 1, "", "RandomRotation"], [252, 1, 1, "", "RandomVerticalFlip"], [253, 1, 1, "", "Resize"], [245, 1, 1, "", "ToTensor"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [3, 7, 8, 14, 16, 19, 39, 40, 41, 42, 44, 45, 46, 82, 83, 84, 132, 135, 145, 146, 147, 148, 151, 152, 155, 156, 157, 171, 173, 187, 195, 213, 215, 223, 226, 228, 229, 239, 245, 247, 255], "0": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 24, 27, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 227, 228, 229, 230, 232, 235, 236, 237, 239, 240, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 255], "000": [5, 196, 197], "0000": [132, 133, 135], "0001": 158, "000e": [196, 197], "001": [158, 161, 162, 164, 165, 168], "002": [163, 164], "004": 164, "005": 105, "01": [51, 105, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168], "01051757": 178, "0205": 132, "0217": 132, "0227": 132, "0299": 132, "044715": [49, 104], "0450": 132, "0451": 132, "047": [33, 38], "04719755": 205, "0474259": 54, "0480": 132, "05": [78, 80, 81, 105, 122, 123, 124, 137, 138, 139, 140, 141, 142, 143], "0507": [53, 107], "06": [159, 167], "07": [72, 73, 131, 132], "0700": 132, "0706508": 110, "0721": 132, "0794": 135, "08": [161, 162, 163, 164, 165, 166], "0802": 135, "08333333": 16, "085537": 212, "0900": [109, 132], "0986": [55, 109], "09861229": 213, "0992": 132, "1": [0, 1, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 174, 176, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255], "10": [0, 1, 2, 3, 20, 21, 27, 28, 29, 30, 31, 36, 37, 38, 42, 43, 46, 58, 59, 69, 71, 82, 112, 113, 114, 119, 120, 127, 129, 138, 139, 141, 145, 149, 150, 152, 160, 173, 177, 180, 181, 184, 187, 190, 191, 207, 223, 246, 248, 249, 251], "100": [21, 32, 33, 34, 35, 38, 173, 255], "1000": [20, 21, 23, 24, 25, 31, 32, 33, 34, 35, 36, 37], "1000000": 158, "1001": 132, "1003": 132, "1007": 38, "1014": 53, "1025": [43, 46], "1026": [43, 46], "1027": [43, 46], "10499": 54, "1050": 108, "1054": 135, "1056": [43, 46], "10590": 38, "1097": 38, "11": [31, 32, 38, 69, 112, 113, 114, 119, 127, 138, 139, 141, 149, 150, 152, 187, 246, 247, 248, 249, 251], "1105": 38, "1109": 38, "1111": 131, "1134": 69, "114b": 249, "119": 69, "1192": [54, 55, 109], "12": [28, 29, 44, 69, 84, 112, 113, 114, 119, 120, 127, 138, 139, 141, 147, 149, 150, 152, 187, 191, 192, 246, 248, 249, 251], "120": [27, 30], "123": [97, 98, 99, 100, 101, 102, 179, 180], "124": [97, 98, 101, 102], "125": 150, "1250": 133, "128": [31, 46, 244, 255], "128x128": [244, 255], "13": [23, 31, 33, 38, 69, 112, 113, 114, 127, 139, 149, 150, 152, 187, 246, 248, 249, 251], "132": [32, 38], "133": [33, 38], "138": [34, 38], "14": [112, 113, 114, 119, 120, 127, 139, 149, 150, 152, 174, 187, 191, 246, 248, 249, 251], "1409": 38, "143": [35, 38], "145": 69, "15": [0, 69, 112, 113, 114, 127, 139, 149, 150, 152, 187, 191, 226, 246, 248, 249, 251, 255], "1513": 135, "155": 187, "1556": 38, "1588": [49, 104], "16": [27, 30, 31, 34, 38, 43, 44, 46, 83, 84, 112, 113, 114, 119, 120, 122, 123, 124, 127, 138, 139, 146, 147, 149, 150, 152, 155, 187, 191, 221, 246, 248, 249, 251], "16227766": 17, "16425": 135, "1643": 131, "166": 187, "17": [112, 113, 114, 127, 139, 150, 186, 246, 248, 249, 251], "170": 69, "17520119": 220, "18": [29, 38, 112, 113, 114, 119, 127, 139, 150, 190, 191, 246, 248, 249, 251], "1800": 132, "19": [31, 35, 38, 58, 59, 69, 113, 114, 139, 185, 187], "192": [28, 29], "1966": [55, 108, 109], "1998": [38, 132], "1_53": 38, "1d": [57, 82, 85, 89, 122, 137, 140, 145, 180, 187, 195, 226, 234, 235, 236, 237, 241], "1e": [72, 73, 78, 80, 81, 122, 123, 124, 131, 132, 137, 138, 139, 140, 141, 142, 143, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], "1e6": 158, "1st": [20, 36], "2": [1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 28, 29, 30, 36, 39, 40, 41, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 174, 176, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255], "20": [0, 5, 42, 43, 46, 113, 114, 119, 139, 191, 212], "2012": 38, "2014": 38, "2015": 38, "2039": 135, "204": 114, "21": [44, 69, 113, 114, 139, 191], "211": 187, "22": [69, 113, 114, 119, 139, 185, 187], "2231": [132, 135], "224": [20, 31, 36, 38], "2247": [137, 138, 139, 140, 141, 142, 143], "224x224": 23, "226": 187, "22752314": 178, "2278": 38, "23": [113, 114, 139], "2324": [38, 107], "234": [97, 98, 99, 100, 101, 102, 180], "24": [69, 83, 113, 114, 119, 139, 146, 191], "240": [35, 38], "2424": [55, 109], "2447": 109, "246": [28, 38], "25": [0, 38, 54, 108, 114, 134, 139, 149, 150, 184, 217, 228], "2500": [131, 133, 135], "2512": 103, "2547": 107, "256": 31, "26": [44, 71, 114, 129, 139, 191], "26325684": 178, "2689": [55, 108, 109], "27": [69, 112, 114, 139, 211], "276": [97, 98, 101, 102], "28": [28, 29, 38, 69, 114, 191], "28x28": [5, 28, 29], "29": 114, "299": 38, "299r": 249, "299x299": [24, 25], "2_i": [140, 141, 142], "2d": [58, 65, 83, 86, 90, 123, 138, 141, 146, 187, 195, 198, 226, 231, 234, 235, 237, 241, 251], "2e": 163, "2nd": [20, 36], "2x2": [61, 246, 248], "3": [1, 2, 3, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 28, 31, 36, 38, 39, 40, 41, 43, 44, 45, 46, 49, 54, 55, 57, 58, 59, 61, 62, 63, 64, 65, 66, 69, 71, 74, 76, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 208, 210, 211, 212, 213, 214, 215, 216, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253], "30": [24, 38, 43, 94, 114, 251], "3026": 135, "31": [69, 114, 187], "310": [196, 197], "31622777": 17, "319": 38, "32": [30, 38, 43, 46, 69, 71, 83, 113, 114, 122, 123, 124, 129, 146, 155, 185, 186, 191], "321": [97, 98, 101, 102], "32x32": [27, 30], "33": [43, 46, 71, 114, 129], "33333333": 16, "336": [32, 38], "34": [43, 46, 69, 114, 187, 191], "342": [97, 98, 101, 102], "345": [97, 98, 99, 100, 101, 102, 180], "35": [43, 46, 114], "352": [23, 38], "3567": [131, 135], "357": [34, 37, 38], "36": 114, "3679": [48, 53, 103], "37": 112, "372": 69, "375": 134, "3750": 133, "378": [29, 38], "38344152": 176, "38629436": 213, "389056": 212, "392": [24, 38], "393": [23, 38], "3935": 103, "3d": [59, 66, 84, 87, 91, 114, 124, 139, 142, 147], "3x3": [38, 181], "4": [0, 1, 2, 3, 8, 9, 10, 11, 13, 15, 16, 17, 27, 28, 29, 38, 44, 46, 57, 58, 59, 61, 64, 65, 66, 69, 71, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 127, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 158, 161, 165, 166, 168, 171, 174, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 200, 202, 208, 213, 214, 215, 216, 217, 219, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253], "400": 30, "4044": 131, "4076": 132, "4096": [20, 36], "41421356": 9, "41666667": 16, "41808962": 178, "419974": 56, "4199743": 110, "42": [69, 174, 181], "421": [97, 98, 101, 102], "423": [97, 98, 99, 100], "42718872": 17, "4286": 131, "43": [185, 187], "4323": 103, "4375": 133, "43758721": 176, "4472136": 11, "4495": [139, 142], "45": [69, 94, 251], "4545": 116, "47112767": 207, "48": [71, 129], "4979": 103, "4x4": 253, "5": [1, 2, 7, 8, 13, 14, 15, 16, 20, 24, 27, 28, 29, 30, 36, 38, 40, 41, 42, 43, 44, 46, 49, 54, 57, 58, 59, 61, 62, 63, 64, 65, 66, 69, 71, 74, 76, 78, 80, 81, 82, 85, 86, 93, 95, 103, 104, 105, 106, 107, 108, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 148, 149, 150, 152, 153, 167, 171, 174, 177, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 202, 204, 205, 206, 214, 215, 216, 217, 218, 223, 226, 227, 228, 229, 232, 234, 238, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255], "50": [71, 129, 167, 185, 187, 249, 250, 252, 255], "5000": [131, 133, 135], "5108": 135, "52359878": 206, "53": [69, 186], "543": [97, 98, 99, 100, 101, 102, 180], "54308063": 210, "544": [34, 38], "545": 192, "5455": 116, "563": [97, 98, 101, 102], "57": 69, "57079633": [205, 206], "57366333": 179, "587g": 249, "5th": [20, 36], "6": [8, 16, 20, 27, 30, 36, 44, 45, 57, 58, 59, 61, 66, 69, 71, 82, 98, 102, 112, 113, 114, 117, 118, 119, 120, 127, 129, 131, 137, 138, 139, 140, 141, 142, 143, 145, 149, 150, 152, 153, 159, 167, 171, 174, 180, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 200, 202, 214, 215, 216, 223, 226, 227, 228, 229, 232, 237, 238, 243, 245, 246, 247, 248, 249, 251, 253], "6052": 135, "6065": 103, "608": [37, 38], "61": [21, 30, 38], "6124": [137, 138, 139, 140, 141, 142, 143], "62": [37, 38, 69], "62686041": 220, "6321": [48, 103], "63245553": 17, "64": [31, 43, 46, 69], "64589411": 176, "654": [97, 98, 99, 100, 101, 102, 180], "657": [97, 98, 101, 102], "6590": [55, 109], "6652": 109, "66666667": 16, "6667": 131, "667": [35, 38], "6682": 131, "67": 187, "67326": 107, "6733": 53, "678": [97, 98, 99, 100, 101, 102], "68811989": 178, "69314718": 213, "7": [15, 31, 44, 57, 58, 59, 61, 66, 69, 71, 72, 73, 82, 104, 107, 108, 110, 112, 113, 114, 119, 120, 127, 129, 131, 132, 134, 138, 139, 141, 142, 145, 149, 150, 152, 153, 174, 177, 180, 183, 185, 186, 187, 191, 193, 195, 212, 215, 223, 226, 227, 228, 241, 245, 246, 247, 248, 249, 251, 253], "70": 5, "7001": 132, "706": [30, 38], "70710678": [11, 219], "7147": 135, "7182818": 212, "726791": 38, "7311": [55, 108, 109], "74": 187, "75": [71, 129, 134, 158], "7581": 53, "76159416": 225, "7616": [56, 110], "76219569": 210, "7635": 107, "772": 192, "78357324": 178, "78539816": 207, "79172504": 176, "7x7": 36, "8": [14, 18, 43, 44, 46, 57, 58, 59, 61, 66, 69, 71, 72, 82, 83, 84, 104, 107, 108, 110, 112, 113, 114, 117, 118, 119, 120, 122, 123, 124, 127, 129, 131, 134, 138, 139, 141, 142, 145, 146, 147, 149, 150, 152, 153, 161, 162, 163, 164, 165, 166, 174, 177, 184, 185, 186, 187, 191, 192, 194, 195, 211, 215, 223, 226, 227, 228, 245, 246, 247, 248, 249, 251, 253], "80": 5, "8005": 132, "817": [24, 38], "818": 38, "8182": 116, "82": 69, "833": 38, "84": [27, 29, 30], "840": [21, 38], "8413": [49, 104], "848": [33, 38], "8584": 107, "86": 38, "863": [32, 38], "876": [97, 98, 101, 102, 180], "8808": [55, 108, 109], "887": 192, "891773": 176, "89442719": 11, "9": [0, 1, 3, 5, 18, 38, 58, 61, 69, 71, 82, 112, 113, 114, 119, 127, 129, 131, 138, 139, 141, 145, 149, 150, 152, 158, 159, 161, 162, 163, 164, 165, 166, 168, 174, 177, 180, 183, 187, 191, 192, 193, 195, 221, 222, 245, 246, 247, 248, 249, 251], "90709145": 179, "9091": 116, "9120": 135, "9163": 135, "9486833": 17, "949e": [196, 197], "9526": 54, "9545": 104, "96366276": 176, "9640": 110, "96402758": 225, "978": 38, "99": 166, "9957": 135, "99734545": 179, "999": [0, 161, 162, 163, 164, 165], "A": [1, 3, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 27, 31, 32, 33, 34, 35, 40, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 69, 71, 72, 73, 77, 78, 80, 81, 93, 116, 117, 118, 119, 120, 131, 132, 135, 137, 138, 139, 140, 141, 142, 143, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 174, 176, 177, 178, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 251], "As": 179, "Be": 0, "By": [0, 2, 3, 7, 41, 94, 155, 165, 171, 176, 177, 178, 180, 245, 255], "For": [2, 3, 4, 7, 9, 10, 11, 13, 14, 15, 16, 18, 46, 48, 49, 51, 52, 53, 54, 56, 69, 71, 93, 97, 98, 101, 102, 107, 112, 113, 114, 127, 129, 137, 138, 139, 140, 141, 142, 155, 157, 179, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 212, 213, 214, 215, 216, 219, 221, 223, 226, 227, 228, 235, 237, 239, 241, 242, 255], "If": [0, 1, 2, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 40, 42, 43, 44, 45, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 66, 69, 71, 78, 80, 83, 84, 93, 94, 97, 98, 112, 113, 114, 122, 123, 124, 127, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 156, 161, 162, 166, 167, 173, 176, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 249, 250, 252, 253], "In": [3, 7, 16, 57, 58, 59, 132, 135, 170, 171, 172, 244, 255], "It": [1, 2, 3, 7, 16, 17, 18, 20, 22, 23, 24, 27, 28, 29, 30, 31, 38, 40, 42, 43, 44, 45, 46, 66, 69, 93, 94, 104, 106, 110, 122, 123, 124, 127, 128, 131, 132, 133, 134, 135, 145, 146, 147, 155, 156, 157, 158, 164, 166, 167, 168, 171, 179, 183, 184, 185, 188, 189, 190, 192, 193, 214, 216, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245], "Its": [18, 181], "Near": 16, "No": 61, "Not": 128, "One": [28, 255], "The": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255], "There": 238, "These": [4, 7, 8, 11, 14, 17, 19, 38, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 167, 174, 181, 255], "To": [3, 38, 157, 178, 181, 196, 197, 234, 255], "With": [3, 61, 245, 255], "_": [14, 42, 43, 45, 46, 48, 49, 51, 52, 53, 54, 56, 71, 93, 138, 139, 140, 141, 142, 148, 149, 150, 151, 152, 153, 158, 159, 161, 162, 163, 164, 166, 168, 185, 186, 187, 191, 226, 227, 246, 247, 248, 250, 251, 252], "_1": [11, 42, 43, 44, 45, 46, 69, 127, 191, 230, 232, 243], "_2": [11, 42, 43, 44, 45, 46, 69, 127, 191, 230, 232, 243], "__call__": [1, 40], "__getitem__": [0, 2, 3, 5], "__init__": [0, 1, 2, 3, 7, 20, 22, 27, 31, 36, 39, 40, 41, 42, 43, 44, 45, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 127, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 173, 182, 244, 245], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5], "__repr__": 156, "__setattr__": 40, "_activ": 55, "_arraylik": [174, 195, 197, 200, 202], "_arraylikeint": 235, "_arrayorscalar": [39, 41, 174, 182, 229], "_base_dtyp": [194, 196, 199, 201], "_c": 247, "_decai": 164, "_fanmod": [97, 98], "_grad_en": [170, 172], "_i": [11, 15, 55, 69, 109, 134, 137, 143, 148, 151, 185, 186, 188, 189, 191, 192, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 237, 239, 242, 243], "_in": [97, 98, 101, 102], "_j": [55, 109, 148, 151, 191, 215, 223, 227, 228], "_k": 240, "_left": 93, "_make_lay": 31, "_modul": 40, "_n": [11, 42, 43, 44, 45, 46, 230, 232, 243], "_numpyarrai": 174, "_out": [97, 98, 101, 102, 237, 241], "_p": 15, "_pad": 235, "_paddingstr": [112, 113, 114, 122, 123, 124], "_paramet": 40, "_reductiontyp": [72, 73, 74, 76, 77, 131, 132, 133, 134, 135], "_right": 93, "_scalar": [95, 99, 100, 101, 102, 174, 194, 208], "_shapelik": [81, 143, 174, 177, 199, 201, 238, 239, 242], "_size": [82, 83, 84], "_slope": 105, "_statedict": 156, "_t": [165, 166], "_tensor": [39, 41, 195, 229], "_tensorop": 182, "_u": 16, "_v": 16, "_valu": [208, 235], "_width": 235, "a_i": [188, 189, 192], "ab": 203, "abc": [2, 156], "abil": [7, 255], "about": 7, "abov": [7, 170, 172, 179, 195, 198], "absolut": [14, 15, 74, 163, 204], "abstract": [2, 3, 155, 156, 157, 158, 166, 168], "abstractmethod": 156, "acceler": [38, 107, 137, 138, 139, 158, 164, 166, 168], "accept": [128, 176, 182], "access": [0, 2, 3, 4, 5, 39, 41, 42, 43, 44, 45, 46, 238], "accord": [93, 112, 113, 114, 127, 129, 132, 135, 159, 160, 161, 162, 163, 164, 165, 227], "accordingli": 10, "account": [14, 16, 17], "accumul": [158, 159, 160, 183, 184, 188, 189, 190, 193], "accuraci": 38, "achiev": [38, 57, 58, 59, 82, 145, 146, 147, 164, 250, 252], "across": [0, 39, 43, 46, 81, 82, 83, 84, 101, 102, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 174, 176, 177, 178, 179, 180, 181, 196, 197, 215, 228], "act": 162, "activ": [7, 20, 31, 36, 38, 42, 46, 48, 49, 51, 52, 53, 54, 55, 56, 62, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 116, 117, 118, 119, 120, 122, 123, 124, 131, 132, 135, 137, 138, 139, 143, 214, 216], "actual": [41, 131, 132, 134, 135, 182, 248], "ad": [40, 42, 43, 44, 45, 46, 57, 58, 59, 69, 71, 72, 73, 78, 80, 81, 85, 86, 87, 89, 90, 91, 112, 113, 114, 122, 123, 124, 131, 132, 137, 138, 139, 140, 141, 142, 143, 148, 149, 150, 151, 152, 153, 159, 160, 161, 162, 163, 164, 165, 166, 173, 242, 255], "adadelta": 169, "adagrad": [159, 169], "adam": [162, 163, 164, 165, 169], "adamax": 169, "adamw": 169, "adapt": [20, 22, 27, 31, 36, 82, 83, 84, 145, 146, 147, 159, 160, 161, 164, 165, 166, 167], "adaptive_avg_pool1d": [68, 88, 145], "adaptive_avg_pool2d": [68, 88, 146], "adaptive_avg_pool3d": [68, 88, 147], "adaptiveavgpool1d": [126, 154], "adaptiveavgpool2d": [20, 31, 36, 126, 154], "adaptiveavgpool3d": [126, 154], "add": [4, 40, 42, 43, 46, 69, 71, 112, 113, 114, 127, 129, 143, 156, 158, 161, 166, 168, 171, 203, 235, 242], "add_modul": [40, 46], "add_param_group": 156, "addit": [4, 7, 14, 21, 22, 23, 24, 25, 32, 33, 34, 35, 37, 40, 43, 46, 69, 71, 78, 80, 127, 129, 137, 138, 139, 140, 141, 142, 158, 164, 171, 181, 183, 240], "addition": 164, "address": [132, 135, 161, 162, 165], "adjust": [82, 83, 84, 116, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 157, 161, 165, 166, 167, 232, 243], "advanc": [3, 16, 38, 43, 46, 57, 58, 59, 82, 83, 84, 145, 146, 147, 155, 158], "advantag": 172, "affect": [170, 236, 239, 244], "affin": [122, 123, 124, 137, 138, 139, 140, 141, 142, 143, 251], "after": [14, 20, 36, 41, 42, 43, 44, 45, 46, 66, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 116, 117, 118, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 143, 148, 149, 150, 151, 152, 153, 162, 172, 182, 183, 184, 188, 189, 190, 192, 193, 235, 245], "afterward": 172, "aggreg": [191, 237, 241], "aim": [4, 7], "al": [23, 38], "alex": 38, "alexnet": [26, 36, 38], "algebra": [7, 8, 198], "algorithm": [7, 14, 16, 17, 156, 157, 181], "align": [18, 93, 186, 187], "align_corn": 93, "all": [0, 3, 4, 7, 17, 40, 42, 43, 44, 45, 46, 58, 59, 82, 83, 84, 86, 87, 90, 91, 93, 105, 106, 114, 123, 124, 145, 146, 147, 149, 150, 153, 155, 156, 157, 158, 161, 166, 167, 168, 192, 214, 215, 216, 223, 226, 228, 230, 231, 232, 237, 239, 240, 241, 243, 246, 247, 255], "allevi": 48, "alloc": [196, 197], "allow": [0, 1, 3, 4, 7, 16, 17, 27, 41, 42, 43, 44, 45, 46, 48, 51, 52, 55, 59, 61, 94, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 155, 159, 160, 171, 194, 199, 201, 202, 227, 229, 234, 244, 245, 255], "along": [55, 93, 109, 186, 187, 191, 214, 215, 216, 223, 226, 228, 230, 232, 234, 237, 240, 241, 242, 243, 250, 252], "alongsid": 39, "alpha": [48, 51, 53, 62, 103, 107, 116, 158, 166], "alpha_dropout": [67, 68, 116], "alphadropout": [121, 126], "alphadropoutmodel": 116, "alreadi": 173, "also": [48, 49, 51, 52, 53, 54, 56, 69, 71, 93, 164, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 201, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 224, 225, 230, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243], "alter": [46, 238], "altern": [1, 104, 159, 187], "alwai": [41, 236, 249, 250, 252], "among": 24, "amount": [57, 58, 59, 85, 86, 87, 89, 90, 91, 164], "amsgrad": [161, 162], "an": [0, 1, 3, 7, 11, 13, 14, 16, 17, 19, 21, 23, 24, 25, 27, 28, 29, 30, 36, 37, 40, 42, 43, 44, 45, 46, 49, 57, 58, 59, 61, 62, 63, 64, 65, 66, 69, 83, 84, 93, 94, 101, 102, 103, 108, 112, 113, 114, 116, 117, 118, 119, 120, 127, 129, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 161, 164, 166, 172, 173, 174, 182, 187, 195, 198, 208, 215, 223, 228, 230, 237, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255], "analog": [237, 241], "analysi": [4, 112, 113, 114, 142, 148, 150, 151, 153], "andrew": 38, "angl": [94, 251], "ani": [0, 1, 2, 3, 14, 16, 21, 37, 39, 40, 41, 42, 44, 45, 48, 49, 51, 52, 53, 54, 56, 62, 63, 69, 71, 78, 80, 108, 143, 155, 156, 170, 172, 173, 179, 182, 194, 195, 196, 198, 199, 200, 201, 202, 214, 216, 227, 229, 230, 231, 232, 235, 237, 240, 241, 242, 243, 244, 255], "anoth": [45, 193, 200, 202, 245, 255], "api": [4, 145, 146, 147, 255], "appear": 156, "append": [43, 45, 46], "appli": [2, 4, 5, 7, 14, 20, 36, 38, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 59, 61, 62, 63, 64, 65, 66, 69, 71, 72, 73, 74, 76, 77, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 158, 159, 160, 162, 163, 164, 165, 187, 235, 237, 244, 247, 249, 250, 251, 252, 253, 255], "applic": [4, 16, 57, 80, 112, 113, 114, 127, 129, 181, 194, 201, 235, 253], "approach": [3, 46, 162], "appropri": [16, 40, 44, 46, 112, 113, 114, 116, 117, 118, 132, 149, 150, 170, 172], "approx": 53, "approxim": [16, 49, 104, 149, 152], "ar": [1, 2, 3, 4, 7, 10, 11, 13, 14, 16, 17, 18, 19, 22, 23, 24, 38, 39, 40, 41, 42, 43, 44, 45, 46, 55, 57, 58, 59, 61, 69, 71, 83, 84, 93, 97, 98, 100, 101, 102, 109, 112, 113, 114, 116, 117, 118, 119, 120, 127, 129, 132, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 158, 161, 162, 164, 165, 166, 167, 168, 170, 172, 173, 174, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 204, 208, 212, 214, 215, 216, 217, 218, 223, 226, 227, 230, 234, 237, 238, 241, 244, 245, 246, 248, 249, 253, 255], "arang": 203, "arbitrari": [43, 128, 196, 197, 208, 213, 215, 219, 221, 223, 227, 228], "arcco": 203, "arch": 173, "architectur": [21, 22, 23, 24, 25, 27, 31, 32, 33, 34, 35, 37, 38, 42, 43, 44, 45, 46, 49, 106, 127, 128, 155, 173], "arcsin": 203, "arctan": 203, "area": 93, "arg": [40, 128, 173, 196], "argument": [3, 4, 21, 22, 23, 24, 25, 27, 32, 33, 34, 35, 37, 40, 46, 128, 176, 196, 227], "around": [11, 94, 110], "arr": [174, 230, 232, 240, 243], "arrai": [7, 39, 41, 171, 174, 182, 187, 195, 200, 202, 229, 236, 237, 245, 255], "art": 38, "arxiv": 38, "asarrai": 174, "asgd": 169, "aspect": 253, "assign": [40, 42, 44, 46, 93, 132, 135], "assist": [22, 23, 24], "associ": [44, 45], "assum": [0, 1, 156, 157, 170], "attempt": [42, 46], "attent": [45, 69], "attribut": 40, "audio": 112, "augment": [3, 4, 94, 181, 237, 241, 244, 248, 249, 250, 251, 252, 255], "autodiff": 7, "autograd": 155, "automat": [4, 7, 41, 42, 43, 44, 45, 155, 176, 177, 178, 180, 182, 196, 197, 202, 234, 245], "auxiliari": [22, 23, 24, 39], "avail": [4, 5, 7], "averag": [20, 28, 29, 30, 31, 36, 39, 82, 83, 84, 85, 86, 87, 93, 134, 145, 146, 147, 148, 149, 150, 158, 159, 161, 166, 215], "avg_pool": [148, 149, 150], "avg_pool1d": [68, 88], "avg_pool2d": [68, 88], "avg_pool3d": [68, 88], "avgpool": [20, 31, 36], "avgpool1d": [126, 154], "avgpool1dmodel": 148, "avgpool2d": [126, 154], "avgpool2dmodel": 149, "avgpool3d": [126, 154], "avgpool3dmodel": 150, "avoid": [2, 3, 16, 44, 172], "ax": [8, 171, 214, 215, 216, 223, 227, 228, 237, 239, 241], "axi": [55, 109, 186, 187, 214, 215, 216, 223, 228, 230, 232, 234, 235, 237, 239, 240, 241, 242, 243, 250, 252], "b": [8, 18, 69, 71, 100, 112, 113, 114, 127, 129, 171, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 230, 232, 240, 243, 249], "b_i": [188, 189, 192], "back": [93, 149, 150, 173, 186, 191, 237, 241], "backpropag": [7, 10, 11, 13, 14, 16, 17, 19, 39, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 69, 71, 93, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 148, 149, 150, 151, 152, 153, 155, 172, 178, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 212, 214, 216, 229, 235, 237, 241, 245], "backward": [7, 39, 41, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 182, 245], "balanc": 133, "bar": 158, "base": [3, 8, 13, 14, 17, 18, 22, 23, 24, 25, 27, 31, 38, 40, 42, 43, 44, 45, 61, 69, 82, 83, 84, 116, 132, 133, 145, 146, 147, 155, 156, 157, 158, 162, 166, 167, 168, 183, 184, 188, 189, 190, 192, 193, 202, 212, 213, 214, 216, 227, 234, 235, 248, 249, 250, 251, 252], "basic": [7, 20, 36, 57, 58, 59, 82, 83, 84, 97, 98, 101, 102, 122, 123, 124, 145, 146, 147, 246, 247, 248, 249, 250, 251, 252, 253], "batch": [1, 2, 3, 8, 14, 17, 19, 23, 24, 25, 57, 58, 59, 61, 64, 65, 66, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 112, 113, 114, 122, 123, 124, 127, 129, 131, 132, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 149, 150, 151, 152, 153, 165, 187, 246, 247, 248, 249, 251, 253], "batch_norm": [68, 79, 137, 138, 139], "batch_norm1": 46, "batch_norm2": 46, "batch_siz": [1, 2, 3], "batchnorm": [122, 123, 124], "batchnorm1d": [122, 126, 144], "batchnorm1dmodel": 137, "batchnorm2d": [46, 123, 126, 144], "batchnorm2dmodel": 138, "batchnorm3d": [124, 126, 144], "batchnorm3dmodel": 139, "bceloss": [126, 136], "becaus": [2, 177], "becom": [15, 40, 159, 167], "befor": [14, 41, 158, 164, 172, 179, 235, 247, 255], "begin": [1, 15, 48, 51, 52, 53, 103, 105, 106, 107, 133, 134, 135, 148, 149, 150, 151, 152, 153, 165, 167, 171, 181, 188, 189, 191, 204, 208, 214, 216, 218, 235], "behav": [133, 226], "behavior": [38, 43, 46, 170, 181, 187, 197, 255], "being": [45, 94, 116, 117, 118, 119, 120, 165, 170, 172, 230, 232, 243], "belong": 0, "below": [17, 23, 24, 25, 27, 28, 29, 30, 187, 195, 198], "benchmark": 5, "benefici": 46, "benefit": [48, 155, 164, 174], "bernoulli": [116, 117, 118, 119, 120], "best": [97, 98, 101, 102], "beta": [137, 138, 139, 140, 141, 142, 143, 161, 162, 163, 164, 165], "beta1": [161, 162, 163, 164, 165], "beta2": [161, 162, 163, 164, 165], "beta_1": [161, 162, 163, 164, 165], "beta_2": [161, 162, 163, 164, 165], "better": [13, 36, 38, 49, 97, 98, 101, 102, 140, 141, 142, 155, 162, 164, 166, 247], "between": [40, 57, 58, 59, 61, 69, 74, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 131, 132, 133, 134, 135, 158, 166, 167, 168, 181, 183, 184, 187, 190, 193, 194, 228, 249, 250, 252, 253], "beyond": [7, 43], "bia": [57, 58, 59, 69, 71, 78, 80, 81, 112, 113, 114, 122, 123, 124, 127, 129, 137, 138, 139, 140, 141, 142, 143, 161, 162, 163, 164, 165], "bias": [112, 113, 114, 129, 143, 155], "bias1": 44, "bias2": 44, "bilinear": [68, 70, 93, 126, 130], "bilinearmodel": 127, "binari": [54, 72, 108, 116, 117, 118, 119, 120, 131], "binary_cross_entropi": [68, 75], "block": [40, 61, 112, 113, 114, 122, 123, 124, 172], "block1": 155, "block2": 155, "blue": 249, "bmatrix": 191, "bn": [122, 123, 124], "bn_affin": [122, 123, 124], "bool": [1, 5, 19, 22, 23, 24, 40, 41, 62, 63, 64, 65, 66, 78, 80, 93, 112, 113, 114, 122, 123, 124, 127, 129, 137, 138, 139, 140, 141, 142, 143, 161, 162, 166, 170, 176, 177, 178, 180, 182, 194, 195, 196, 197, 198, 199, 200, 201, 202, 214, 215, 216, 223, 228, 229, 245], "both": [57, 71, 83, 85, 89, 104, 112, 113, 122, 146, 148, 149, 151, 152, 185, 186, 187, 191, 195, 234, 253], "bottom": 93, "bound": [98, 100, 102, 167, 180], "box": 4, "branch": [22, 23, 24, 38], "break": 155, "brief": 255, "bright": 255, "broadcast": [119, 120, 215, 223, 228, 238, 242], "buffer": [158, 164, 166, 168], "build": [7, 40, 43, 46, 155, 255], "built": [3, 7, 46, 155], "burg": 5, "c": [5, 61, 64, 65, 66, 73, 77, 78, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 119, 120, 132, 135, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 171, 232, 243, 247], "c_": [112, 113, 114], "c_in": [57, 58, 59, 122, 123, 124], "c_out": [57, 58, 59], "calcul": [0, 1, 7, 8, 41, 159, 160, 163, 164, 165, 172, 177, 182], "calculu": [9, 16], "call": [1, 40, 170, 173, 183, 184, 187, 188, 189, 190, 192, 193], "callabl": [156, 173, 244], "can": [0, 2, 3, 4, 7, 9, 11, 13, 14, 16, 17, 19, 39, 41, 42, 43, 44, 45, 46, 51, 57, 58, 59, 94, 104, 105, 110, 112, 113, 114, 140, 141, 142, 149, 150, 151, 152, 153, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171, 172, 174, 180, 181, 182, 187, 196, 197, 198, 199, 201, 202, 215, 223, 228, 232, 234, 235, 237, 238, 241, 242, 243, 244, 245, 248, 250, 251, 252, 255], "cannot": [10, 11, 13, 14, 17, 18, 19], "capabl": [7, 194, 195, 198, 199, 200, 201, 202], "captur": [61, 112, 113, 114, 127], "care": 172, "cartesian": 234, "case": [3, 15, 27, 48, 51, 52, 53, 103, 105, 106, 107, 133, 134, 135, 148, 149, 150, 151, 152, 153, 155, 160, 165, 167, 171, 188, 189, 204, 208, 214, 216, 218, 235, 255], "caus": [3, 16, 158, 166, 168], "cautiou": 0, "cdot": [9, 10, 13, 14, 15, 18, 48, 49, 51, 53, 54, 57, 58, 59, 69, 71, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 101, 102, 104, 108, 116, 127, 129, 131, 132, 133, 135, 137, 138, 139, 140, 141, 142, 143, 159, 160, 161, 162, 163, 164, 165, 167, 185, 186, 187, 190, 192], "center": [94, 110, 166, 246, 255], "centercrop": [254, 255], "central": 174, "certain": [10, 49, 69, 127, 161, 162, 170, 214, 216], "chain": [13, 14, 46, 244, 255], "challeng": 38, "cham": 38, "chanc": [249, 250, 252], "chang": [74, 133, 167, 171, 172, 173, 236, 238, 242, 249, 255], "channel": [27, 28, 29, 30, 31, 57, 58, 59, 61, 64, 65, 66, 78, 80, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 112, 113, 114, 119, 120, 122, 123, 124, 137, 138, 139, 140, 141, 142, 145, 148, 149, 150, 151, 152, 153, 247, 249, 253], "check": [170, 246, 248], "checkpoint": 157, "choic": 234, "choleski": 12, "chosen": 116, "christian": 38, "christoph": 5, "clariti": 174, "class": [3, 4, 7, 21, 23, 24, 25, 28, 29, 30, 32, 33, 34, 35, 37, 55, 73, 77, 155, 157, 173, 195, 198, 229, 255], "classic": 30, "classif": [4, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 54, 55, 72, 73, 77, 108, 109, 131, 132, 135], "classifi": [20, 22, 23, 24, 27, 28, 29, 30, 31, 36], "cleaner": [1, 172, 187], "clear": [41, 182, 196, 197], "clearli": 174, "clf_in_featur": 27, "clf_layer": 27, "clip": [94, 167, 203], "clockwis": 94, "close": [13, 16, 107, 131, 166], "closer": 103, "closur": [156, 157], "cnn": 38, "co": [203, 219], "code": [14, 42, 44, 46, 170, 172, 174, 181], "coeffici": [18, 93, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "col": 61, "collect": [4, 8, 38, 42, 43, 45, 46, 157], "color": [249, 255], "colorjitt": 255, "column": [10, 11, 13, 17, 18, 19, 61, 198, 232, 234], "com": 5, "combin": [1, 3, 25, 38, 43, 46, 48, 49, 104, 122, 123, 124, 132, 155, 164, 165, 215, 223, 228, 230, 255], "combined_dataset": [0, 1], "common": [61, 94, 157, 255], "commonli": [7, 49, 54, 55, 56, 57, 59, 69, 76, 78, 80, 94, 101, 102, 109, 114, 131, 134, 135, 148, 149, 150, 151, 152, 153, 171, 174, 199, 239, 245, 246, 247, 248, 250, 251, 252, 255], "compar": [36, 181, 240], "compat": [4, 8, 128, 143, 155, 171, 181, 245, 255], "complex": [2, 3, 7, 11, 42, 43, 46, 52, 106, 151, 153, 155, 157, 255], "compon": [16, 22, 23, 24, 25, 40, 43, 157, 182, 255], "compos": [5, 112, 113, 114, 148, 149, 150, 151, 152, 153, 155, 255], "comprehens": 3, "comput": [7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 38, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 61, 69, 71, 72, 73, 74, 76, 77, 78, 80, 82, 83, 84, 93, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 166, 170, 171, 172, 174, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 234, 235, 237, 241, 245, 255], "computation": [3, 16], "compute_loss": [157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], "concaten": [0, 57, 58, 59, 232, 233, 240, 243], "concept": [7, 16, 38], "condit": [9, 10, 13], "confer": 38, "config": 31, "configur": [21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 37, 45, 122, 123, 124], "conjunct": [61, 135], "connect": [20, 25, 27, 28, 29, 30, 31, 36, 38, 71, 112, 113, 114, 129], "consecut": 31, "consid": [3, 13, 16, 46, 97, 98, 101, 102, 155, 167, 170, 196, 197, 255], "consider": 16, "consist": [2, 4, 20, 28, 29, 30, 39, 82, 83, 84, 145, 146, 147, 174, 179, 181, 235, 246, 253, 255], "consistent_tensor": 181, "constant": [72, 73, 78, 80, 81, 96, 107, 131, 132, 137, 138, 139, 140, 141, 142, 143, 159, 160, 161, 162, 163, 164, 165, 166, 174, 235], "constant_pad": 235, "constraint": 1, "construct": [7, 32, 33, 34, 35, 43, 155, 195, 237, 241], "constructor": [32, 33, 34, 35], "contain": [1, 5, 10, 11, 16, 17, 18, 19, 27, 31, 40, 42, 43, 44, 45, 46, 55, 61, 69, 71, 72, 73, 77, 93, 131, 132, 135, 156, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 197, 204, 205, 206, 207, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 231, 234], "content": 94, "context": [170, 172], "contextmanag": 172, "contigu": 236, "continu": [105, 178], "contrast": [140, 141, 142, 255], "contribut": [93, 116, 117, 118, 119, 120, 148, 151, 152, 153, 158, 164, 226], "control": [103, 133, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 181, 245, 255], "conv": [122, 123, 124, 138, 139], "conv1": [28, 29, 30, 46, 112, 113, 114, 148, 149, 150, 151, 152, 153], "conv1d": [60, 68, 115, 122, 126, 148, 151], "conv1dmodel": 112, "conv2": [28, 29, 30, 46, 112, 113, 114], "conv2d": [43, 46, 60, 68, 115, 123, 126, 138, 149, 152, 155], "conv2dmodel": 113, "conv3d": [60, 68, 115, 124, 126, 139, 150, 153], "conv3dmodel": 114, "conv_bia": [122, 123, 124], "conv_config": 31, "conv_lay": [27, 43], "convblock": 155, "convbnrelu1d": [125, 126], "convbnrelu2d": [125, 126], "convbnrelu3d": [125, 126], "conveni": [4, 21, 37], "convent": 187, "converg": [16, 110, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 247], "convers": [132, 135, 249, 255], "convert": [5, 31, 39, 41, 55, 109, 182, 234, 244, 245, 249, 255], "convnetwork": 43, "convolut": [20, 21, 23, 24, 27, 28, 29, 30, 31, 36, 37, 38, 43, 57, 58, 59, 61, 112, 113, 114, 122, 123, 124, 149, 150, 152, 153, 235], "convolv": [57, 58, 59, 112, 113, 114], "coordin": 234, "core": [0, 1, 2, 3, 40, 155, 156, 182, 255], "corinna": 5, "corner": [93, 246, 248], "correct": [42, 132, 135, 161, 162, 163, 164, 165, 245], "correctli": [16, 40, 42, 43, 44, 45, 46, 132, 135, 181], "correspond": [0, 1, 2, 5, 11, 42, 44, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 69, 71, 93, 106, 109, 127, 129, 137, 138, 139, 140, 141, 142, 149, 150, 158, 166, 168, 185, 186, 188, 189, 192, 212, 213, 219, 221, 232, 235, 237, 241, 243], "cort": 5, "cosh": [203, 220, 225], "cosin": [205, 209, 210, 219], "cost": 38, "could": 40, "count": [38, 230], "counterclockwis": [94, 251], "cover": [8, 57, 58, 59], "coverag": [82, 83, 84], "creat": [2, 3, 7, 20, 21, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 43, 46, 155, 171, 173, 181, 194, 198, 199, 200, 201, 202, 234, 240, 244, 255], "creation": [43, 46, 255], "criterion": [131, 132, 133, 134, 135], "critic": [16, 157, 181], "crop": [246, 248, 255], "cross": [72, 73, 131, 132], "cross_entropi": [68, 75], "crossentropyloss": [126, 136], "cube": 203, "cumul": [49, 104], "current": [40, 158, 161, 167, 170], "custom": [4, 7, 20, 21, 27, 31, 36, 37, 39, 42, 43, 44, 45, 46, 94, 103, 105, 122, 123, 124, 155, 181, 198], "custom_config": 31, "custom_lenet": 27, "customiz": 255, "custommodul": 39, "customnetwork": 42, "customparametermodel": [44, 45], "cvpr": 38, "d": [38, 59, 66, 84, 87, 91, 124, 139, 142, 143, 147, 150, 153, 171, 195, 251], "d_": [59, 84, 87, 91, 114, 147, 150, 153], "d_1": 143, "d_2": 143, "d_n": 143, "d_out": [59, 87, 91], "dampen": [158, 166, 168], "data": [4, 5, 7, 14, 39, 41, 45, 56, 57, 59, 61, 65, 66, 71, 94, 106, 110, 112, 113, 114, 122, 123, 124, 129, 142, 148, 150, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 174, 181, 182, 183, 184, 190, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 229, 235, 236, 237, 238, 239, 241, 244, 245, 248, 249, 250, 251, 252, 255], "databas": 5, "dataload": [2, 3], "dataset": [3, 28, 29, 30, 94, 160, 172, 244, 246, 255], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 191, "debug": [46, 170, 179, 255], "decai": [158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "decompos": [9, 17, 19], "decomposit": [8, 9, 13, 16, 17, 19], "decor": 173, "decoupl": [159, 160, 162, 163, 164, 165], "decreas": [161, 162, 167], "deep": [1, 3, 4, 7, 38, 78, 104, 107, 155, 181, 244, 245, 255], "deeper": [7, 23, 25, 38, 107], "def": [0, 1, 2, 3, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 127, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245], "default": [1, 5, 15, 19, 20, 21, 22, 23, 24, 25, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 48, 51, 55, 57, 58, 59, 62, 63, 64, 65, 66, 72, 73, 74, 76, 77, 78, 80, 81, 85, 86, 87, 89, 90, 91, 93, 94, 97, 98, 99, 100, 101, 102, 103, 105, 109, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 148, 149, 150, 151, 152, 153, 156, 157, 164, 170, 176, 177, 178, 180, 182, 194, 195, 196, 197, 198, 199, 200, 201, 202, 214, 215, 216, 223, 227, 228, 229, 230, 232, 234, 235, 237, 240, 243, 245, 249, 250, 252], "defin": [1, 3, 4, 7, 22, 23, 24, 25, 27, 31, 42, 43, 44, 45, 46, 104, 131, 132, 133, 134, 135, 148, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 174, 177, 178, 192, 197, 208, 227, 244, 255], "definit": [7, 9, 122, 123, 124, 255], "degre": [94, 251, 255], "delai": 158, "delta": [55, 74, 109, 133, 159], "delta_": [55, 109], "demonstr": [7, 8, 38, 155, 174], "denomin": [78, 80, 81, 122, 123, 124, 137, 138, 139, 140, 141, 142, 143, 159, 160, 161, 162, 163, 164, 165, 166, 184], "denot": [14, 108, 112, 113, 114, 116, 117, 118, 119, 120, 227], "dens": [7, 160], "dense1": 7, "dense2": 7, "densiti": [49, 104], "depend": [7, 14, 15, 45, 72, 73, 74, 76, 77, 93, 112, 185, 195, 214, 216, 237, 241, 248, 249, 253], "depth": [43, 59, 66, 84, 87, 91, 114, 139, 142, 147, 150, 153], "depthwis": [57, 58, 59], "deriv": [16, 17, 55, 82, 83, 84, 104, 109, 110, 112, 113, 114, 127, 129, 173], "descend": 19, "descent": [7, 158, 168], "describ": [10, 11], "descript": 255, "deseri": 39, "design": [3, 4, 7, 8, 20, 21, 23, 24, 25, 28, 29, 30, 37, 38, 41, 43, 44, 45, 46, 48, 53, 107, 116, 155, 174, 255], "desir": [39, 82, 83, 84, 145, 146, 147, 227, 229], "destin": 40, "det": [8, 12], "det_a": 10, "detail": [7, 157, 181, 187], "determin": [0, 7, 8, 9, 10, 27, 82, 83, 84, 97, 98, 101, 102, 112, 113, 114, 145, 146, 147, 149, 150, 152, 153, 166, 170, 176, 177, 178, 180, 196, 197, 246, 248], "determinist": 94, "develop": [7, 155, 181, 255], "deviat": [97, 99, 101, 244, 247, 255], "diag": [16, 203], "diagon": [16, 17, 19, 195, 198, 226], "diagonaliz": 11, "dict": [21, 23, 24, 25, 27, 37, 40, 42, 44, 128, 156], "dictionari": [27, 40, 41, 42, 44, 46, 156], "differ": [0, 14, 22, 27, 43, 46, 55, 69, 93, 109, 127, 134, 157, 171, 179, 181, 193, 202, 228, 239, 255], "differenti": [7, 9, 18, 104, 155, 176, 177, 178, 180, 182, 194, 196, 197, 199, 201], "digit": [5, 30, 38], "dilat": [57, 58, 59, 112, 113, 114, 122, 123, 124], "dilation_height": 61, "dilation_width": 61, "dim": [132, 135], "dimens": [10, 11, 13, 14, 17, 18, 19, 20, 31, 36, 41, 55, 69, 71, 78, 80, 81, 83, 84, 93, 109, 112, 113, 114, 137, 138, 139, 140, 141, 142, 143, 146, 147, 149, 150, 151, 152, 153, 171, 174, 176, 180, 182, 186, 196, 214, 215, 216, 223, 226, 227, 228, 230, 232, 235, 237, 239, 240, 241, 242, 243, 246, 248, 253], "dimension": [14, 16, 17, 19, 57, 58, 59, 85, 86, 87, 89, 90, 91, 112, 113, 114, 118, 119, 120, 137, 138, 139, 140, 141, 142, 148, 149, 150, 151, 152, 153, 171, 186, 187, 191, 195, 212, 215, 223, 226, 228, 231, 236, 237, 239, 241], "diminish": 160, "direct": [11, 131, 132, 133, 134, 135, 158, 166, 167, 168], "directli": [42, 43, 44, 45, 93, 159, 160, 162, 163, 164, 165, 179, 181, 229, 255], "directori": [3, 4, 5], "disabl": [170, 172], "discontinu": 218, "discrep": [131, 132, 135], "discret": [177, 181], "disk": 3, "displai": [21, 37], "distribut": [49, 55, 93, 97, 98, 99, 100, 101, 102, 104, 109, 112, 113, 114, 116, 117, 118, 119, 120, 127, 129, 132, 135, 148, 149, 150, 176, 177, 178, 180, 181, 215, 223, 226, 228, 240, 247, 249, 250, 251, 252], "div": 203, "divers": [94, 250, 252, 255], "diversifi": 255, "divid": [1, 16, 43, 46, 55, 57, 58, 59, 109, 131, 132, 133, 134, 135, 184, 247], "divis": [7, 16, 57, 58, 59, 116, 117, 118, 119, 120, 159, 160, 161, 162, 163, 164, 165, 166, 184], "do": [16, 18, 39, 42, 43, 44, 45, 62, 63, 64, 65, 155, 165, 170, 202, 226, 235], "document": [4, 7, 38, 157, 174, 181], "doe": [7, 14, 15, 16, 17, 19, 39, 42, 43, 44, 45, 46, 102, 161, 162, 167, 170, 172, 176, 177, 178, 179, 180, 194, 195, 196, 197, 198, 199, 200, 201, 202, 238], "doesn": 172, "doi": 38, "domain": 4, "don": 172, "dot": [11, 14, 42, 43, 44, 45, 46, 143, 151, 152, 153, 186, 191, 203, 230, 232, 240, 243], "down": [3, 155, 253], "download": [4, 5], "drawback": 48, "drawn": [176, 177, 178, 180, 181, 251], "drop": [116, 117, 118, 119, 120], "dropout": [20, 24, 31, 36, 38, 49, 62, 64, 65, 66, 116, 118, 119, 120], "dropout1d": [67, 68, 121, 126], "dropout1dmodel": 118, "dropout2d": [67, 68, 121, 126], "dropout3d": [67, 68, 121, 126], "dropout_prob": 24, "dropoutmodel": 117, "dtype": [39, 41, 182, 194, 195, 196, 197, 198, 199, 200, 201, 202, 229, 245], "due": [14, 16, 57, 58, 106, 251], "duplic": [42, 44], "dure": [3, 7, 10, 11, 13, 16, 17, 19, 22, 23, 24, 39, 40, 41, 42, 43, 44, 45, 46, 55, 62, 63, 64, 65, 66, 78, 80, 94, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 148, 149, 150, 151, 152, 153, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 170, 172, 182, 183, 214, 215, 216, 223, 228, 245, 248, 251, 255], "dy": [51, 105], "dynam": [0, 2, 3, 40, 43, 44, 45, 46, 82, 83, 84, 143, 145, 146, 147, 160, 165, 170], "dynamicnetwork": 43, "e": [0, 10, 11, 13, 14, 17, 19, 23, 24, 25, 27, 28, 29, 30, 31, 39, 55, 108, 109, 116, 132, 156, 159, 166, 167, 198, 210, 212, 213, 220, 225, 226, 230, 249], "each": [1, 2, 3, 4, 11, 14, 16, 17, 19, 20, 27, 31, 36, 38, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 69, 71, 78, 80, 82, 83, 84, 106, 109, 112, 113, 114, 116, 117, 118, 119, 120, 127, 129, 131, 132, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 159, 160, 161, 162, 163, 164, 165, 166, 167, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 232, 234, 235, 237, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 253, 255], "earli": 165, "eas": [4, 7], "easi": [2, 3, 4, 7, 41, 42, 44], "easier": [3, 42, 43, 46], "easili": [4, 41, 45, 255], "eccv": 38, "economi": 19, "edg": 235, "educ": [7, 38], "effect": [38, 42, 43, 44, 45, 46, 55, 57, 58, 59, 61, 103, 104, 106, 108, 109, 110, 137, 138, 139, 140, 141, 142, 143, 170, 171, 172, 232, 243], "effici": [1, 2, 3, 5, 7, 8, 13, 18, 38, 61, 132, 155, 172], "eig": 12, "eigenvalu": [11, 17], "eigenvector": 11, "eigval": 11, "eigvec": 11, "either": [71, 174, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 229, 234], "element": [0, 16, 17, 24, 41, 45, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 106, 109, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 131, 132, 133, 134, 135, 143, 148, 149, 150, 151, 152, 153, 171, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 231, 234, 235, 237, 238, 239, 241], "elementwise_affin": 143, "elsewher": [151, 152, 153, 198], "elu": [50, 68, 111, 126], "elumodel": 103, "empti": [40, 46, 203], "empty_lik": 203, "enabl": [0, 1, 2, 3, 7, 14, 19, 40, 41, 42, 43, 44, 45, 106, 112, 113, 114, 127, 129, 155, 157, 170, 172, 176, 177, 178, 180, 182, 244], "encapsul": [155, 182], "encod": [132, 135], "encourag": [117, 118, 119, 120, 131, 132, 135, 161], "end": [15, 48, 51, 52, 53, 103, 105, 106, 107, 133, 134, 135, 148, 149, 150, 151, 152, 153, 165, 167, 188, 189, 191, 194, 204, 208, 214, 216, 218, 230, 235, 255], "enforc": [40, 42, 44], "engin": 16, "enhanc": [24, 25, 29, 36, 37, 42, 44, 255], "ensur": [3, 5, 16, 17, 18, 39, 40, 41, 42, 43, 44, 45, 46, 55, 82, 83, 84, 105, 109, 116, 117, 118, 119, 120, 122, 123, 124, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 149, 150, 151, 152, 153, 155, 156, 158, 159, 161, 162, 164, 165, 166, 167, 168, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 192, 215, 223, 228, 235, 245, 246, 247, 248, 249, 253, 255], "enter": 172, "entir": [3, 64, 65, 66, 119, 120, 181], "entri": [27, 239], "entropi": [72, 73, 131, 132], "environ": 7, "ep": [72, 73, 78, 80, 81, 122, 123, 124, 131, 132, 137, 138, 139, 140, 141, 142, 143, 159, 160, 161, 162, 163, 164, 165, 166], "epoch": [1, 3], "epsilon": [131, 132, 137, 138, 139, 140, 141, 142, 143, 159, 160, 161, 162, 163, 164, 165, 166], "equal": [14, 93, 148, 149, 150, 246, 248], "equat": [11, 16, 18], "equival": [187, 226, 236], "error": [0, 3, 11, 13, 40, 43, 44, 45, 46, 49, 74, 76, 104, 131, 132, 133, 134, 155, 156, 172, 174], "especi": [3, 42, 44, 45, 108, 171, 172, 174, 179, 244, 245, 249, 255], "essenti": [1, 3, 7, 8, 14, 16, 58, 61, 155, 179, 181, 214, 244, 245, 249, 255], "estim": [134, 161, 162, 163, 164, 165, 166], "et": [23, 38], "eta": 167, "eta_": 167, "etc": [131, 245], "euclidean": 15, "european": 38, "evalu": [40, 78, 80, 116, 117, 118, 119, 120, 137, 138, 139, 140, 141, 142, 255], "even": [159, 172, 194, 195, 198, 199, 200, 201, 202], "evenli": [82, 83, 84, 145, 146, 147, 194], "everi": [1, 255], "everywher": 218, "exact": [40, 43, 227, 249, 251], "exactli": 46, "exampl": [4, 187], "excel": 25, "except": [0, 218, 230, 232, 243], "exclus": [177, 180, 194], "exdb": 5, "execut": [43, 172], "exist": [18, 42, 44, 46, 173, 230], "exit": 172, "exp": [48, 53, 54, 56, 103, 107, 203], "expand": [4, 61, 237, 241], "expect": [9, 43, 46, 116, 117, 118, 119, 120, 143, 155, 174], "expens": 3, "experi": [7, 179, 181, 255], "experiment": 181, "explan": [14, 16, 20, 31, 36, 82, 83, 84, 145, 146, 147, 158], "explicit": 46, "explicitli": [42, 44], "explod": [107, 137, 138, 139], "explor": [155, 181], "expon": [14, 192], "exponenti": [48, 53, 55, 103, 107, 109, 116, 161, 162, 163, 164, 165, 212], "extend": 4, "extens": 157, "extern": [4, 7], "extract": [22, 38, 61, 114, 148, 150, 173, 195, 214, 216, 246, 248], "extractor": [27, 28, 29, 30], "extrem": 16, "ey": 203, "f": [1, 4, 5, 7, 44, 45, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 109], "facilit": [22, 42, 46, 55, 109, 112, 113, 114, 155, 157, 247, 255], "factor": [24, 48, 57, 58, 59, 61, 101, 102, 158, 165, 166, 167, 168, 174], "failur": [42, 43, 44, 45, 155], "fals": [1, 5, 19, 39, 40, 41, 62, 63, 64, 65, 66, 78, 80, 93, 95, 97, 98, 99, 100, 101, 102, 112, 113, 114, 127, 129, 161, 162, 166, 170, 176, 177, 178, 180, 182, 194, 195, 196, 197, 198, 199, 200, 201, 202, 214, 215, 216, 223, 228, 229, 245], "famili": 173, "fan": [97, 98, 101, 102], "fan_in": [97, 98], "fan_out": [97, 98], "fast": 165, "faster": [160, 164, 172], "fc": [43, 113, 114, 148, 149, 150, 151, 152, 153], "fc1": [29, 30, 42, 46, 104, 106, 107, 108, 110, 129], "fc2": [29, 30, 42, 46, 104, 106, 107, 108, 110, 129], "fc3": 30, "featur": [3, 20, 22, 25, 27, 28, 29, 30, 31, 36, 37, 38, 69, 71, 78, 114, 117, 118, 119, 120, 122, 123, 124, 127, 129, 137, 138, 139, 140, 141, 142, 143, 148, 149, 150, 151, 152, 153, 155, 160], "feature_extractor": 27, "fed": [3, 255], "feed": [3, 182, 255], "fergu": [36, 38], "fetch": 0, "fewer": 1, "field": [5, 38], "file": [3, 173], "fill": [95, 99, 100, 176, 177, 178, 180, 199, 200, 201, 202], "filter": [36, 38, 57, 58, 59, 61, 113, 114, 122, 123, 124], "filter_height": 61, "filter_s": 61, "filter_width": 61, "final": [22, 23, 24, 25, 42, 43, 44, 45, 46, 244, 255], "find": [18, 214, 216], "fine": 255, "finish": 172, "first": [5, 11, 27, 36, 43, 44, 69, 127, 161, 162, 163, 164, 165, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 234, 243, 244, 245, 255], "fit": 155, "fix": [43, 235], "flatten": [27, 46, 61, 191, 233, 236, 237], "flexibl": [1, 3, 4, 7, 22, 27, 31, 42, 43, 44, 45, 46, 155, 157, 174, 199, 200, 245, 255], "flip": [250, 252, 255], "float": [2, 5, 24, 39, 41, 48, 51, 62, 63, 64, 65, 66, 72, 73, 74, 78, 80, 81, 94, 95, 99, 100, 101, 102, 103, 105, 116, 117, 118, 119, 120, 122, 123, 124, 131, 132, 133, 137, 138, 139, 140, 141, 142, 143, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 174, 180, 182, 194, 197, 208, 229, 247, 249, 250, 251, 252], "float32": [39, 41, 182, 194, 195, 198, 199, 201, 229, 245], "float64": [202, 229, 245], "flow": [25, 46, 102, 104, 108, 110, 112, 113, 114, 127, 129, 170], "fly": [2, 3], "fname": 3, "focu": 7, "focus": 7, "follow": [0, 7, 8, 11, 17, 18, 19, 20, 31, 36, 48, 49, 51, 52, 53, 54, 55, 56, 69, 71, 93, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 173, 174, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 214, 216, 234, 238, 246, 247, 248, 249, 250, 251, 252, 255], "form": [17, 191, 234, 237, 241, 255], "format": [2, 3, 5, 132, 135, 245], "formul": 49, "formula": [11, 19, 55, 82, 83, 84, 109, 133, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 187, 228, 249], "forward": [7, 20, 23, 24, 25, 27, 28, 29, 30, 31, 36, 39, 40, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], "found": 7, "foundat": [40, 155, 157, 182], "four": 235, "frac": [9, 10, 11, 13, 14, 15, 16, 18, 19, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 69, 71, 82, 83, 84, 85, 86, 87, 89, 90, 91, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 148, 149, 150, 151, 152, 153, 159, 160, 161, 162, 163, 164, 165, 166, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247], "frame": 66, "framework": [4, 7, 38, 132, 135, 137, 138, 139, 140, 141, 142, 156, 157, 255], "frequent": [132, 135], "from": [0, 1, 2, 3, 4, 5, 7, 14, 16, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 61, 69, 78, 80, 93, 95, 97, 98, 99, 100, 101, 102, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 148, 149, 150, 155, 156, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 176, 177, 178, 180, 181, 182, 187, 188, 189, 193, 195, 214, 215, 216, 223, 228, 230, 232, 234, 237, 239, 240, 241, 243, 246, 247, 248, 249, 250, 251, 252, 255], "full": 19, "full_matric": 19, "fulli": [4, 8, 20, 27, 28, 29, 30, 31, 36, 38, 71, 129, 181], "func": 173, "function": [3, 4, 5, 7, 8, 40, 42, 43, 44, 45, 46, 103, 104, 105, 106, 107, 108, 109, 110, 116, 117, 118, 119, 120, 122, 123, 124, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 155, 157, 174, 181, 244, 255], "fundament": [7, 71, 129, 245], "further": [7, 181, 215, 223, 228], "futur": 128, "g": [0, 10, 11, 14, 17, 19, 23, 24, 25, 27, 28, 29, 30, 31, 116, 156, 159, 166, 230, 249], "g_": 160, "g_t": 166, "gain": [101, 102], "gamma": [137, 138, 139, 140, 141, 142, 143], "gaussian": [49, 104], "gelu": [50, 68, 111, 126], "gelunetwork": 104, "gener": [16, 94, 116, 117, 118, 119, 120, 141, 162, 164, 165, 172, 176, 177, 178, 179, 180, 181, 186, 194, 196, 197, 234, 248, 249, 250, 252, 255], "get": 5, "give": [7, 158, 166], "given": [10, 11, 14, 16, 17, 19, 61, 131, 132, 135, 156, 170, 200, 202, 244, 249, 250, 252, 255], "global": [0, 170, 172, 179, 181], "go": [23, 38], "goal": [131, 132, 135], "googlenet": [23, 38], "gpu": 38, "grad": [39, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 61, 69, 71, 93, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 148, 149, 150, 151, 152, 153, 156, 157, 176, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 250, 252, 253], "grad_output": 14, "gradient": [7, 8, 25, 38, 39, 41, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 176, 177, 178, 180, 194, 195, 196, 197, 198, 199, 200, 201, 202, 229, 245], "graph": [7, 102, 182, 194, 195, 198, 199, 200, 201, 202, 245], "grayscal": [5, 27, 28, 29, 30, 249, 255], "greater": 208, "green": 249, "grid": 234, "groundbreak": 38, "group": [43, 57, 58, 59, 112, 113, 114, 122, 123, 124, 156, 157], "group1": 43, "group2": 43, "guarante": 179, "h": [58, 59, 61, 65, 66, 83, 84, 86, 87, 90, 91, 93, 94, 123, 124, 138, 139, 141, 142, 146, 147, 150, 153, 246, 248], "h_": [58, 59, 83, 84, 86, 87, 90, 91, 93, 113, 114, 146, 147, 149, 150, 152, 153], "h_out": [58, 59, 86, 87, 90, 91], "h_stack": 232, "ha": [0, 11, 46, 57, 58, 59, 122, 123, 124, 131, 132, 137, 138, 139, 140, 141, 142, 143, 156, 157, 187, 226, 230, 232, 240, 243, 249], "half": 221, "hand": 18, "handl": [0, 3, 7, 16, 40, 42, 43, 44, 45, 46, 132, 135, 155, 157, 172], "handwritten": [5, 30], "hardwar": 7, "hat": [161, 162, 163, 164, 165], "have": [0, 1, 10, 11, 13, 16, 17, 19, 41, 43, 45, 46, 58, 59, 102, 155, 198, 199, 200, 201, 202, 214, 216, 230, 232, 234, 239, 240, 243, 247, 253], "height": [58, 59, 61, 65, 66, 83, 84, 86, 87, 90, 91, 93, 94, 113, 114, 138, 139, 141, 142, 146, 147, 149, 150, 152, 153, 246, 248, 253], "help": [7, 24, 51, 53, 66, 103, 105, 107, 110, 137, 138, 139, 148, 149, 151, 152, 158, 161, 162, 164, 170, 171, 172, 174], "henc": 238, "here": [3, 9, 40, 69, 155, 157, 171, 172, 174, 181, 244, 245, 255], "hidden": [20, 36, 43], "hidden_s": 43, "hierarch": [43, 46, 155], "hierarchi": 113, "hierarchicalnetwork": 43, "high": [7, 177, 180], "higher": [132, 135, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 186, 187, 191, 212], "highest": 177, "highli": 38, "highlight": [151, 152, 153], "hint": 174, "histor": 160, "histori": [176, 177, 178, 180, 194, 195, 196, 197, 198, 199, 200, 201, 202], "hold": [42, 43, 44, 45], "horizont": [232, 240, 250, 255], "hot": [132, 135], "how": [2, 3, 7, 43, 46, 155, 174, 255], "howev": [39, 102], "hstack": 233, "http": 5, "huber": [74, 133], "huber_loss": [68, 75], "huberloss": [126, 136], "huberregressionmodel": 133, "hue": 255, "hyperbol": [56, 110, 210, 220, 225], "hyperparamet": [156, 158], "i": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255], "ideal": [7, 46], "ident": [13, 14, 94, 126, 130, 179, 181, 198, 238], "identifi": 44, "idx": [2, 3], "ieee": 38, "ii": 226, "ij": [55, 93, 109, 185, 186, 187, 191, 234], "ik": [185, 186, 187], "ill": [10, 16], "ilsvrc": 38, "imag": [3, 4, 5, 20, 21, 23, 24, 25, 27, 28, 29, 30, 37, 38, 58, 80, 94, 113, 123, 141, 234, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255], "image_dir": 3, "image_path": 3, "imagedataset": 3, "imageio": 3, "imagenet": 38, "imbal": [132, 135], "impact": 164, "implement": [2, 3, 7, 16, 20, 22, 23, 24, 25, 27, 36, 38, 40, 61, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 232, 243, 249], "impli": [112, 113], "import": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 66, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255], "improp": [43, 46, 181], "improv": [23, 24, 25, 36, 38, 78, 94, 104, 107, 110, 158, 159, 160, 161, 162, 163, 164, 165, 166, 174, 248, 251, 255], "imread": 3, "in1_featur": [69, 127], "in2_featur": [69, 127], "in_channel": [43, 46, 112, 113, 114, 122, 123, 124, 138, 139, 148, 149, 150, 151, 152, 153, 155], "in_featur": [42, 43, 46, 71, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 116, 117, 118, 127, 129, 131, 132, 133, 134, 135, 137, 140, 143, 148, 149, 150, 151, 152, 153], "incept": [23, 24, 25, 26, 38], "inception_v1": 38, "inception_v3": 38, "includ": [3, 4, 7, 8, 14, 15, 20, 22, 23, 24, 27, 31, 36, 40, 41, 43, 45, 46, 93, 122, 123, 124, 155, 156, 157, 164, 174, 181, 187, 235], "inclus": [41, 44, 177, 180], "incom": [71, 129], "incomplet": 2, "incompletedataset": 2, "incorpor": [19, 104], "increas": [57, 58, 59, 61, 94, 160, 167, 171, 232, 243, 249, 250, 252, 255], "independ": [43, 57, 58, 59, 116, 117, 118, 119, 120, 143, 187, 197, 247, 249, 251, 253], "index": [0, 2, 5, 171, 194, 195, 198, 234, 238], "indexerror": 0, "indic": [0, 1, 31, 41, 43, 45, 46, 73, 77, 132, 135, 148, 170, 182, 246, 248], "individu": [3, 43, 46, 133, 143, 157, 160, 167], "induc": [53, 107], "inf": 224, "infer": [43, 46, 172], "infin": [17, 19, 163], "inform": [7, 38, 39, 157, 159, 172], "infti": [15, 165], "inherit": [1, 158, 166, 168], "init": 96, "initi": [1, 32, 33, 34, 35, 39, 41, 42, 43, 44, 45, 46, 95, 97, 98, 99, 100, 101, 102, 112, 113, 114, 127, 129, 131, 132, 133, 134, 135, 137, 138, 139, 143, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 176, 179, 180, 181, 194, 198, 199, 200, 201, 202, 229], "initial_accumulator_valu": 160, "inner": [7, 185, 203], "input": [7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 27, 28, 29, 30, 36, 38, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 174, 181, 182, 183, 185, 186, 187, 191, 195, 197, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255], "input1": 127, "input2": 127, "input_": [20, 36, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 122, 123, 124, 145, 146, 147], "input_1": 69, "input_2": 69, "input_data": [103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 143, 148, 149, 150, 151, 152, 153], "input_s": [43, 45, 109, 132, 135], "input_tensor": [7, 23, 24, 25, 27, 28, 29, 30, 31, 39, 42, 43, 44, 45, 46, 55, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 148, 149, 150, 151, 152, 153, 155, 246, 247, 248, 249, 250, 251, 252, 253], "insid": [3, 170, 172], "insight": [7, 38], "inspect": [40, 41, 46, 156], "instabl": [16, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "instal": 7, "instanc": [0, 1, 7, 21, 23, 24, 25, 28, 29, 30, 37, 40, 41, 42, 44, 45, 46, 80, 140, 141, 142, 143, 156, 173, 229, 237, 241, 255], "instance_norm": [68, 79, 140, 141, 142], "instancenorm1d": [126, 144], "instancenorm1dmodel": 140, "instancenorm2d": [126, 144], "instancenorm3d": [126, 144], "instanti": [2, 173], "instead": [7, 42, 43, 44, 45, 46, 97, 98, 101, 102, 161, 162, 163, 172, 174, 196, 197], "int": [0, 1, 2, 5, 14, 15, 20, 21, 22, 23, 24, 25, 27, 31, 32, 33, 34, 35, 36, 37, 39, 41, 55, 57, 58, 59, 61, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 99, 100, 101, 102, 109, 112, 113, 114, 122, 123, 124, 127, 129, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 161, 162, 163, 164, 165, 167, 173, 176, 177, 178, 179, 180, 182, 194, 195, 196, 198, 199, 201, 208, 214, 215, 216, 223, 227, 228, 229, 230, 235, 237, 238, 239, 240, 241, 242, 246, 248, 253], "integ": [1, 3, 14, 31, 57, 58, 59, 83, 84, 112, 113, 114, 143, 146, 147, 149, 150, 151, 152, 153, 174, 177, 178, 180, 181, 196, 199, 201, 215, 223, 227, 228, 235, 237, 238, 241], "integr": [1, 2, 4, 5, 8, 41, 43, 45, 46, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 127, 129, 148, 149, 150, 151, 152, 153], "intend": [39, 44, 45], "intens": [16, 247, 249], "intent": 174, "interact": [69, 127, 155, 181], "interfac": [2, 40, 43, 157], "interfer": [170, 172], "intermedi": 16, "intern": [42, 43, 44, 45, 46, 132, 135, 155, 246, 247, 248, 249, 250, 251, 252, 253], "interpol": [68, 92, 253], "interpret": [38, 55, 109, 174, 230], "interv": [176, 180, 194], "introduc": [23, 24, 38, 52, 104, 106, 108, 110, 116, 117, 118, 119, 120, 248, 251, 255], "introspect": 46, "intuit": [7, 42, 44, 155, 255], "inv": 12, "inv_a": 13, "invari": [149, 152], "invers": [7, 10, 13, 14, 16, 160, 205, 206, 207], "invert": [10, 13, 14, 18], "invok": 173, "involv": [9, 10, 11, 13, 16, 17, 19, 48, 49, 51, 52, 53, 54, 56, 69, 71, 93, 112, 113, 114, 127, 129, 174, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 202, 212, 213, 214, 216, 219, 221, 234, 235, 237, 241], "is_leaf": 182, "issu": [3, 107, 137, 138, 139, 161, 162], "item": 134, "iter": [0, 1, 2, 3, 39, 40, 43, 45, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 194], "ith": [55, 109], "its": [4, 14, 16, 20, 36, 38, 39, 42, 43, 44, 45, 57, 58, 59, 61, 94, 102, 104, 106, 151, 152, 153, 155, 156, 159, 167, 170, 171, 172, 173, 194, 196, 197, 201, 214, 216, 229, 238, 247, 250, 252, 255], "itself": [9, 14, 42, 43, 44, 45], "j": [5, 55, 109, 137, 138, 139, 140, 141, 142, 148, 149, 151, 152, 234, 240, 246, 248], "jk": 186, "join": [3, 230], "json": 173, "k": [14, 57, 112, 132, 138, 139, 141, 142, 148, 151, 152, 185, 186, 195, 198, 230], "k_d": [59, 114, 150, 153], "k_h": [58, 59, 113, 114, 149, 150, 153], "k_w": [58, 59, 113, 114, 149, 150, 153], "kaim": [97, 98, 101, 102], "kaiming_norm": 96, "kaiming_uniform": 96, "karen": 38, "keep": [40, 106, 159, 172, 238], "keep_grad": [41, 176, 177, 178, 180, 182, 194, 195, 196, 197, 198, 199, 200, 201, 202, 229, 245], "keep_var": 40, "keepdim": [214, 215, 216, 223, 228], "kei": [38, 40, 42, 44, 46, 156], "kept": [215, 223, 228], "kernel": [27, 28, 29, 30, 36, 57, 58, 59, 61, 82, 83, 84, 85, 86, 87, 89, 90, 91, 112, 113, 114, 122, 123, 124, 145, 146, 147, 149, 150, 153], "kernel_s": [43, 46, 85, 86, 87, 89, 90, 91, 112, 113, 114, 122, 123, 124, 138, 139, 148, 149, 150, 151, 152, 153], "keyerror": 40, "keyword": [21, 32, 33, 34, 35, 37, 40, 128], "kj": [185, 187], "known": 38, "krizhevski": 38, "kroneck": [55, 109], "kwarg": [21, 23, 24, 25, 28, 29, 30, 32, 33, 34, 35, 37, 40, 128, 173], "l": [9, 16, 57, 64, 82, 85, 89, 116, 117, 118, 119, 120, 122, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145], "l2": [158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "l_": [57, 82, 85, 89, 112, 145, 148, 151], "l_out": [57, 85, 89], "label": [4, 5, 24, 131, 132, 135], "lambd": 158, "lambda": [11, 53, 107, 158, 162], "lambda_1": 11, "lambda_2": 11, "lambda_i": 11, "lambda_n": 11, "languag": [4, 112, 127, 148, 151], "larg": [0, 3, 16, 38, 133, 155, 158, 161, 162, 163, 166, 167, 168, 172], "larger": [42, 44, 57, 58, 59, 61, 158, 188, 235, 246, 248, 253], "largest": 214, "last": [1, 55, 81, 109, 186, 187, 230, 250, 252], "latest": 4, "layer": [7, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 40, 42, 43, 46, 55, 71, 78, 80, 81, 97, 98, 101, 102, 109, 112, 113, 114, 122, 123, 124, 127, 128, 129, 135, 143, 148, 149, 150, 151, 152, 153, 155, 181, 235, 245], "layer1": 173, "layer2": 173, "layer_group": 43, "layer_norm": [68, 79, 143], "layer_sequ": [43, 46], "layernorm": [126, 144], "layernormmodel": 143, "lead": [43, 46, 104, 140, 141, 142, 143, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 181], "leaf": 182, "leaki": [51, 105], "leaky_relu": [50, 68, 105], "leakyrelu": [111, 126], "learn": [1, 3, 4, 5, 7, 14, 16, 36, 37, 38, 42, 43, 44, 45, 52, 55, 103, 105, 106, 109, 112, 113, 114, 117, 118, 119, 120, 127, 129, 155, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 179, 244, 245, 255], "learnabl": [39, 40, 41, 78, 80, 81, 112, 113, 114, 122, 123, 124, 127, 129, 137, 138, 139, 140, 141, 142, 143, 155], "least": [16, 17, 19, 226], "lecun": [5, 38], "left": [14, 15, 16, 19, 49, 55, 104, 109, 131, 132, 133, 135, 137, 138, 139, 140, 141, 142, 143, 151, 152, 153, 246, 248], "leftarrow": 164, "len": [0, 1, 2, 3, 234], "lenet": [26, 28, 29, 30, 38], "lenet_1": 38, "lenet_4": 38, "lenet_5": 38, "length": [43, 57, 64, 82, 85, 89, 112, 128, 137, 140, 145, 148, 151, 235, 247], "leq": [133, 165, 192, 208], "lerp": 93, "less": [0, 48, 51, 74, 103, 105, 132, 133, 135, 208], "let": 11, "level": 7, "leverag": [18, 25, 38, 155], "librari": [3, 7, 8, 40, 155, 156, 157, 173, 174, 181, 182, 255], "lightweight": 7, "like": [7, 38, 39, 40, 43, 46, 57, 101, 102, 107, 116, 137, 138, 139, 140, 141, 142, 170, 171, 174, 229, 245, 255], "likelihood": [77, 132, 135], "limit": [159, 208], "linalg": [7, 12], "linalgerror": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "linear": [7, 8, 9, 16, 17, 18, 42, 43, 44, 46, 48, 49, 51, 52, 53, 97, 98, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 116, 117, 118, 127, 128, 131, 132, 133, 134, 135, 137, 140, 143, 148, 149, 150, 151, 152, 153, 173, 198], "linearli": 133, "list": [0, 1, 27, 31, 39, 41, 42, 43, 44, 45, 81, 128, 143, 156, 174, 176, 177, 178, 180, 182, 195, 196, 197, 199, 200, 201, 202, 227, 238, 239, 242, 244], "listdir": 3, "liter": [72, 73, 74, 76, 77, 93, 97, 98, 112, 113, 114, 122, 123, 124, 131, 132, 133, 134, 135, 234], "ln": 192, "load": [3, 4, 5, 39, 40, 41, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 173], "load_state_dict": [40, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], "loader": [1, 2, 3], "local": [38, 61, 112], "locat": 93, "log": [77, 131, 132, 135, 203], "log_softmax": 135, "logarithm": [192, 212, 213], "logic": [3, 145, 146, 147, 155, 156], "logit": [20, 36, 55, 109, 132], "logsoftmax": [132, 135], "long": [164, 227], "loop": [1, 43, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], "loss": [7, 16, 42, 43, 44, 45, 46, 55, 72, 73, 74, 76, 77, 103, 104, 105, 106, 107, 108, 109, 110, 116, 117, 118, 119, 120, 128, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], "low": [7, 177, 180], "lower": [9, 100, 158, 166, 167, 168, 180], "lowest": 177, "lr": [156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], "lu": 13, "lucid": [0, 1, 2, 5, 12, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 175, 203, 233, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253], "m": [31, 42, 43, 46, 149, 150, 152, 153, 161, 162, 163, 164, 165, 198], "m_": [161, 162, 163, 164, 165], "m_t": [164, 165], "machin": [3, 5, 7, 16, 161, 171, 179], "magnitud": [166, 167, 255], "mai": [3, 7, 11, 13, 16, 43, 45, 94, 133, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 172, 181, 249, 255], "main": [7, 17, 43, 195, 198], "maintain": [16, 39, 40, 42, 43, 44, 46, 53, 97, 98, 101, 102, 103, 104, 107, 116, 117, 118, 119, 120, 137, 138, 139, 140, 141, 142, 161, 166, 246, 249, 253], "make": [1, 3, 7, 22, 27, 38, 43, 46, 108, 132, 133, 143, 149, 152, 155, 160, 161, 162, 163, 171, 173, 181, 182, 187, 234, 244, 255], "manag": [7, 40, 42, 43, 44, 45, 46, 155, 157, 170, 172, 173, 181], "manhattan": 15, "manipul": [7, 42, 44, 255], "manner": [43, 46], "manual": [72, 73, 77, 131, 132, 135, 172], "map": [40, 54, 56, 108, 110], "mask": [39, 116, 117, 118, 119, 120], "match": [18, 40, 43, 46, 72, 74, 76, 81, 122, 123, 124, 156, 212, 237, 238, 241, 242, 247, 255], "math": [209, 219, 224], "mathbf": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 69, 71, 93, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 148, 149, 150, 151, 152, 153, 185, 186, 187, 191, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253], "mathcal": [97, 99, 101, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143], "mathemat": [13, 122, 123, 124, 248, 250, 251, 252], "mathrm": 16, "matmul": 203, "matric": [8, 10, 11, 13, 16, 18, 19, 185, 186, 187, 198, 234], "matrix": [7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 61, 69, 128, 129, 155, 185, 234], "matrix_pow": 12, "matthew": 38, "max": [15, 31, 52, 89, 90, 91, 106, 151, 152, 153, 163, 188, 203, 208], "max_pool": [151, 152, 153], "max_pool1d": [68, 88], "max_pool2d": [68, 88], "max_pool3d": [68, 88], "max_valu": 208, "maxim": 3, "maximum": [15, 106, 151, 152, 153, 161, 163, 203, 208, 214, 251], "maxpool": [20, 36], "maxpool1d": [126, 154], "maxpool1dmodel": 151, "maxpool2d": [43, 46, 113, 126, 154], "maxpool2dmodel": 152, "maxpool3d": [114, 126, 154], "maxpool3dmodel": 153, "mean": [5, 17, 39, 53, 57, 58, 59, 62, 72, 73, 74, 76, 77, 78, 80, 99, 103, 104, 105, 106, 107, 108, 110, 114, 116, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 161, 162, 163, 164, 165, 166, 170, 178, 203, 208, 212, 213, 214, 216, 219, 221, 223, 226, 227, 228, 244, 247, 255], "meaning": [46, 174], "measur": [131, 132, 134, 135], "mechan": [7, 45, 69], "membership": 131, "memori": [2, 3, 172, 196, 197], "meshgrid": 233, "method": [3, 7, 8, 13, 42, 43, 44, 45, 46, 72, 73, 74, 76, 77, 97, 98, 101, 102, 131, 132, 133, 134, 135, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 181], "middl": 171, "might": 155, "min": [189, 203, 208], "min_valu": 208, "mind": [0, 3, 7, 43, 46, 172], "mini": 1, "minim": [4, 7, 46, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 157], "minimalist": 7, "minimum": [203, 208, 216], "minu": 108, "mirror": [200, 202], "mismatch": [40, 155, 156], "miss": [40, 155], "mitig": [51, 103, 105, 107, 137, 138, 139], "mnist": [4, 6, 28, 29], "mnist_train": [4, 5], "mode": [7, 66, 78, 80, 93, 97, 98, 116, 117, 118, 119, 120, 235], "model": [1, 3, 4, 7, 14, 17, 19, 20, 22, 27, 31, 36, 39, 40, 41, 42, 43, 44, 45, 46, 55, 94, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 143, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 181, 244, 245, 255], "modern": 38, "modif": [46, 172], "modifi": [21, 37, 42, 43, 44, 45, 95, 97, 98, 99, 100, 101, 102, 116, 170, 172, 179, 232, 243], "modul": [5, 7, 20, 21, 22, 25, 27, 31, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 173, 174, 181, 245, 255], "modular": [3, 7, 38, 40, 43, 46, 155, 255], "moduledict": [43, 44, 46, 47], "modulelist": [45, 46, 47], "moment": [161, 162, 163, 164, 165], "momentum": [78, 80, 122, 123, 124, 137, 138, 139, 140, 141, 142, 158, 164, 166, 168], "momentum_decai": 164, "moor": 16, "more": [3, 4, 7, 11, 42, 43, 46, 103, 117, 118, 119, 120, 155, 156, 157, 158, 159, 162, 163, 166, 167, 168, 178, 187, 226, 240, 255], "most": [8, 152, 245, 246, 255], "move": [158, 166], "mse": [74, 76, 133, 134], "mse_loss": [68, 75], "mseloss": [126, 136], "mu": [99, 137, 138, 139, 140, 141, 142, 143, 228], "mu_c": 247, "mu_i": [140, 141, 142], "much": 255, "mul": 203, "multi": [3, 4, 38, 55, 73, 77, 109, 132, 135, 215, 223, 228], "multidimension": [176, 180, 196], "multipl": [1, 3, 7, 8, 14, 18, 20, 44, 45, 46, 61, 93, 94, 116, 117, 118, 119, 120, 132, 135, 155, 171, 176, 177, 178, 180, 185, 190, 196, 197, 244, 249, 255], "multipli": [14, 45, 71, 129, 167, 190, 191], "must": [0, 1, 3, 9, 10, 11, 13, 14, 17, 18, 19, 40, 42, 43, 44, 45, 46, 81, 116, 117, 118, 119, 120, 135, 156, 172, 226, 230, 232, 235, 237, 238, 240, 241, 243, 246, 247, 248, 249, 250, 252], "my_simple_model": 173, "mymodel": [40, 41, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], "myoptim": [156, 157], "n": [14, 15, 38, 42, 43, 46, 57, 58, 59, 61, 64, 65, 66, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 97, 99, 101, 112, 113, 114, 119, 120, 122, 123, 124, 127, 129, 131, 132, 134, 135, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 198, 215, 226, 228], "n1": 15, "nabla_": [159, 160, 161, 162, 163, 164, 165, 167], "nabla_t": 165, "nadam": 169, "name": [38, 40, 42, 44, 46, 173, 174], "nan": [17, 19], "natur": [16, 38, 112, 127, 148, 151, 192, 212, 213], "ndarrai": [39, 41, 174, 182, 195, 197, 200, 202, 229], "ndim": [17, 19, 41, 182], "ne": 14, "nearest": 93, "necessari": [4, 5, 16, 172, 232, 243], "need": [2, 4, 43, 44, 45, 55, 127, 155, 172, 196, 197, 244, 245, 255], "neg": [14, 16, 19, 48, 77, 94, 103, 105, 106, 107, 132, 135, 167, 230], "negative_slop": [51, 105], "neglect": 45, "neighbor": 93, "neq": 15, "nest": [43, 46, 155], "nesterov": 164, "net": [36, 38], "network": [3, 4, 7, 20, 21, 25, 30, 31, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 52, 53, 54, 55, 56, 57, 58, 59, 69, 71, 78, 94, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 143, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 166, 168, 180, 181, 182, 194, 199, 201, 214, 216, 235, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255], "neural": [3, 4, 7, 20, 21, 30, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 49, 52, 53, 54, 55, 56, 57, 58, 59, 69, 71, 78, 94, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 143, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 166, 168, 180, 181, 182, 194, 199, 201, 214, 216, 235, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255], "neuralnetwork": 106, "neuron": 105, "never": 249, "new": [40, 41, 48, 49, 51, 52, 53, 54, 56, 69, 71, 93, 97, 98, 99, 100, 101, 102, 156, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 197, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 230, 232, 235, 237, 238, 240, 241, 242, 243], "next": [46, 244], "nll": 77, "nll_loss": [68, 75], "nllloss": [126, 136], "nn": [5, 7, 20, 22, 27, 31, 36, 47, 50, 60, 67, 70, 75, 79, 88, 92, 96, 111, 115, 121, 125, 126, 130, 136, 144, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 173, 245, 255], "no_grad": 170, "node": 182, "nois": [19, 181], "non": [11, 14, 16, 19, 45, 49, 51, 52, 97, 98, 103, 104, 105, 106, 107, 108, 110, 116, 117, 118, 119, 120, 161, 162, 172, 192, 208], "none": [0, 1, 2, 5, 22, 27, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 171, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 200, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 250, 252, 253], "norm": [8, 12, 163], "normal": [5, 49, 53, 55, 56, 78, 80, 81, 96, 97, 101, 104, 107, 109, 116, 122, 123, 124, 137, 138, 139, 140, 141, 142, 143, 166, 178, 181, 244, 254, 255], "normalized_shap": [81, 143], "note": [57, 116], "noth": [62, 63, 64, 65], "notimplementederror": [2, 40, 156], "notin": 208, "nov": 38, "np": [39, 41, 132, 135, 174, 182, 187, 194, 195, 198, 199, 201, 202, 213, 229, 245], "npy": 5, "num_class": [20, 21, 22, 23, 24, 25, 31, 32, 33, 34, 35, 36, 37, 109, 132, 135], "num_featur": [46, 122, 123, 124, 137, 138, 139, 140, 141, 142], "num_paramet": 45, "number": [0, 1, 2, 5, 10, 11, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 41, 43, 45, 46, 57, 58, 59, 61, 64, 65, 66, 69, 71, 73, 77, 78, 80, 82, 83, 84, 93, 94, 97, 98, 101, 102, 108, 112, 113, 114, 122, 123, 124, 127, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 149, 150, 151, 152, 153, 158, 176, 179, 180, 182, 192, 194, 196, 198, 214, 215, 216, 227, 228, 230, 232, 235, 237, 238, 239, 241, 243, 247, 249, 250, 252, 255], "numer": [13, 16, 72, 73, 78, 80, 81, 122, 123, 124, 131, 132, 137, 138, 139, 140, 141, 142, 143, 159, 160, 161, 162, 163, 164, 165, 166, 174, 184, 194, 199, 201], "numpi": [7, 39, 41, 132, 135, 174, 182, 187, 195, 198, 213, 226, 229, 235, 237, 241, 245, 255], "o": [3, 150, 153, 199, 200], "object": [1, 3, 8, 38, 40, 44, 45, 134, 155, 172, 183, 184, 188, 189, 190, 193, 229], "observ": 161, "obtain": 1, "occur": [94, 172, 173, 230], "occurr": 14, "odot": [116, 117, 118, 119, 120], "off": 170, "offer": [4, 7, 155, 157, 181, 255], "offset": 198, "often": [14, 57, 58, 59, 61, 132, 135, 194, 201, 245, 249, 253, 255], "older": 164, "onc": 172, "one": [0, 45, 46, 55, 57, 71, 85, 89, 107, 108, 109, 112, 118, 122, 123, 124, 132, 135, 137, 140, 148, 151, 156, 171, 174, 178, 193, 200, 214, 216, 231, 236, 240, 245], "ones": [69, 71, 112, 113, 114, 129, 137, 138, 139, 140, 141, 142, 143, 155, 198, 200, 203], "ones_lik": 203, "onli": [7, 93, 106, 116, 117, 118, 119, 120, 131, 132, 135, 137, 138, 139, 140, 141, 142, 143, 151, 152, 153, 167, 170, 194, 208, 214, 216, 226, 235, 236, 238, 239], "onto": [17, 19], "openml": 5, "oper": [3, 7, 8, 13, 16, 39, 40, 43, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 61, 66, 69, 71, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 102, 103, 104, 105, 106, 107, 108, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 170, 171, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 196, 197, 199, 201, 212, 213, 214, 215, 216, 219, 221, 223, 226, 228, 230, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 253], "operatornam": [14, 16], "opposit": 158, "optim": [3, 7, 8, 14, 16, 17, 19, 22, 23, 24, 25, 39, 41, 44, 45, 61, 112, 113, 114, 155, 172], "optimizer_st": [156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], "option": [1, 5, 15, 19, 20, 21, 22, 23, 24, 25, 27, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 48, 51, 55, 58, 59, 62, 63, 64, 65, 66, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 85, 86, 87, 89, 90, 91, 93, 94, 97, 98, 99, 100, 101, 102, 103, 105, 109, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 148, 149, 150, 151, 152, 153, 156, 158, 166, 168, 176, 177, 178, 180, 182, 194, 195, 196, 197, 198, 199, 200, 201, 202, 214, 215, 216, 223, 227, 228, 229, 230, 234, 237, 239, 240, 245, 249, 250, 252], "ord": 15, "order": [1, 3, 15, 19, 42, 43, 44, 45, 46, 227, 244], "ordered_dict": 46, "ordereddict": [40, 42, 43, 46], "organ": [42, 43, 44, 46, 173], "orient": 255, "origin": [24, 30, 62, 94, 110, 235, 236, 237, 238, 241, 242, 253], "orthogon": [16, 17, 19], "orthonorm": 17, "oscil": [158, 166, 168], "other": [2, 3, 7, 13, 24, 27, 30, 39, 40, 43, 46, 97, 98, 116, 155, 156, 170, 172, 181, 182, 194, 196, 199, 201, 226, 234, 255], "otherwis": [48, 51, 52, 53, 55, 103, 105, 106, 107, 109, 117, 118, 119, 120, 133, 148, 149, 150, 151, 152, 153, 156, 167, 173, 188, 189, 214, 216], "otim": [16, 69, 127], "out": [0, 3, 4, 48, 49, 51, 52, 53, 54, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 69, 71, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 97, 98, 101, 102, 112, 113, 114, 116, 117, 118, 119, 120, 145, 146, 147, 148, 149, 150, 151, 152, 153, 158, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243], "out_channel": [27, 43, 46, 112, 113, 114, 122, 123, 124, 138, 139, 148, 149, 150, 151, 152, 153, 155], "out_featur": [42, 43, 46, 69, 71, 103, 104, 105, 106, 107, 108, 109, 110, 113, 114, 116, 117, 118, 127, 129, 131, 132, 133, 134, 135, 137, 140, 143, 148, 149, 150, 151, 152, 153], "outcom": [249, 250, 252], "outer": 203, "outlier": [74, 133], "output": [0, 1, 2, 7, 14, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 69, 71, 82, 83, 84, 93, 94, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 177, 178, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 201, 202, 212, 213, 214, 215, 216, 219, 221, 223, 226, 227, 228, 234, 235, 237, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253], "output_height": 61, "output_lay": [43, 46], "output_s": [43, 82, 83, 84, 145, 146, 147], "output_width": 61, "outsid": 0, "over": [0, 1, 2, 3, 8, 36, 40, 43, 45, 55, 82, 83, 84, 109, 112, 113, 114, 132, 135, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 158, 159, 160, 161, 162, 176, 180, 214, 215, 216, 223, 226, 228, 249, 250, 252], "overdetermin": 16, "overfit": [1, 20, 36, 63, 66, 117, 118, 119, 120, 158, 161, 166, 168], "overrid": [2, 3], "overridden": [40, 156], "overwrit": [42, 44], "own": [4, 42, 43, 44, 45, 57, 58, 59, 102, 155, 247], "p": [15, 16, 41, 44, 45, 62, 63, 64, 65, 66, 116, 117, 118, 119, 120, 148, 151, 152, 249, 250, 252, 255], "p_d": [150, 153], "p_h": [149, 150, 153], "p_w": [149, 150, 153], "packag": [2, 3, 4, 8, 38, 155, 157, 173, 179, 181, 245, 255], "pad": [27, 43, 46, 57, 58, 59, 61, 82, 83, 84, 85, 86, 87, 89, 90, 91, 112, 113, 114, 122, 123, 124, 138, 139, 145, 146, 147, 148, 149, 150, 151, 152, 153, 233], "pad_after_dim1": 235, "pad_after_dim2": 235, "pad_before_dim1": 235, "pad_before_dim2": 235, "pad_width": 235, "padding_height": 61, "padding_width": 61, "pair": 69, "paper": 23, "parallel": [1, 3, 38], "param": [40, 41, 44, 45, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], "param1": 40, "param_dict": 44, "param_group": [156, 157], "param_groups_setup": 156, "param_list": 45, "param_s": 173, "paramet": [0, 2, 7, 28, 29, 30, 38, 40, 155, 156, 157, 174, 181, 255], "parameterdict": 47, "parameterlist": 47, "parent": 155, "part": [39, 40, 102, 155, 170, 172, 181, 194, 195, 198, 199, 200, 201, 202, 245, 255], "partial": [9, 10, 11, 13, 14, 15, 16, 18, 19, 48, 49, 51, 52, 53, 54, 55, 56, 69, 71, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 148, 149, 150, 151, 152, 153, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "particip": [41, 245], "particular": [42, 44], "particularli": [7, 16, 43, 44, 45, 46, 55, 71, 109, 122, 123, 124, 129, 132, 135, 140, 141, 142, 143, 162, 170, 173, 244], "pass": [2, 7, 16, 20, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 40, 41, 42, 43, 44, 45, 46, 93, 103, 104, 105, 106, 107, 108, 110, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 143, 148, 149, 150, 151, 152, 153, 155, 174, 182, 215, 223, 226, 227, 228, 230, 232, 236, 238, 239, 243, 245, 255], "past": [158, 159, 161, 166], "patch": [61, 149], "path": [3, 5], "pattern": [38, 52, 106, 112, 113, 114], "penal": [158, 166, 168], "penalti": [159, 160, 161, 162, 163, 164, 165], "penros": 16, "per": [1, 82, 140, 141, 142, 143, 145], "perform": [3, 7, 8, 9, 16, 20, 27, 28, 29, 30, 31, 36, 38, 40, 41, 45, 49, 57, 58, 59, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 110, 112, 113, 114, 116, 117, 118, 119, 120, 127, 128, 129, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 170, 172, 179, 181, 183, 184, 187, 190, 193, 212, 214, 216, 223, 227, 244, 246, 248, 253, 255], "permut": 227, "persist": [39, 176, 177, 178, 180, 196, 197], "perturb": [11, 18, 19, 255], "phi": [49, 104], "pi": [49, 104, 209, 219, 224], "pil": [245, 255], "pinv": 12, "pioneer": 38, "pipelin": [5, 181, 244, 245, 247], "pixel": [5, 93, 247, 249], "place": [95, 97, 98, 99, 100, 101, 102], "placehold": [40, 128], "plai": [174, 181], "plot": 234, "point": [4, 94, 170], "pool": [20, 27, 28, 29, 30, 31, 36, 38, 82, 83, 84, 85, 86, 87, 89, 90, 91, 113, 114, 145, 146, 147, 148, 149, 150, 151, 152, 153, 214, 216], "pool1": 46, "pool2": 46, "poorli": 13, "popul": 40, "popular": [4, 38], "portion": 255, "pose": 16, "posit": [1, 9, 14, 40, 46, 94, 103, 105, 106, 107, 148, 149, 150, 151, 152, 153, 167, 171, 192, 237, 241, 248], "possibl": [7, 255], "potenti": [16, 128, 166, 239], "power": [7, 14, 171, 172, 203, 244, 245, 255], "pp": 38, "practic": [16, 132, 135], "practition": 255, "preced": [41, 182], "predefin": [4, 38, 43, 107], "predict": [131, 132, 134, 135], "prefix": [40, 173], "prepar": [3, 171, 235, 237, 241, 245, 255], "prepend": 40, "preprint": 38, "preprocess": [3, 4, 61, 94, 181, 244, 245, 255], "present": [131, 132, 133, 135, 137, 138, 139, 140, 141, 142, 143, 149], "preserv": [62, 94, 116, 194, 195, 198, 199, 200, 201, 202, 215, 223, 228], "preset": 4, "prevent": [1, 42, 43, 44, 45, 46, 63, 66, 117, 118, 119, 120, 131, 132, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 172], "previou": [158, 167, 172], "previous": 161, "primari": [7, 174], "primarili": 46, "print": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253], "probabilist": 181, "probabl": [24, 49, 55, 62, 63, 64, 65, 66, 72, 104, 109, 116, 117, 118, 119, 120, 131, 132, 135, 249, 250, 252, 255], "problem": [16, 17, 19, 51, 103, 105, 165], "proceed": 38, "process": [2, 3, 4, 14, 17, 19, 20, 36, 38, 45, 57, 58, 59, 80, 94, 107, 110, 112, 114, 122, 123, 124, 127, 137, 138, 139, 140, 141, 142, 143, 148, 150, 151, 153, 158, 174, 234, 245, 246, 247, 248, 253, 255], "produc": [20, 36, 82, 83, 84, 112, 113, 114, 145, 146, 147, 179, 181], "product": [7, 17, 19, 108, 127, 143, 155, 185, 186, 190, 191], "program": [170, 181], "progress": 160, "project": [17, 19], "projector": 16, "promin": [148, 150, 151, 152, 153], "promot": [46, 132, 135, 155], "propag": [10, 11, 13, 16, 17, 18, 19, 40, 46, 69, 71, 93, 149, 150, 166, 167, 185, 186, 187, 191, 214, 216, 234, 235, 238, 242], "properli": [0, 45, 55, 109, 155], "properti": [8, 10, 13, 14, 49, 53, 62, 104, 107, 116, 160, 165], "proport": [5, 228], "proportion": 253, "provid": [0, 1, 2, 3, 4, 5, 7, 8, 21, 22, 23, 24, 27, 31, 37, 38, 40, 42, 43, 44, 45, 49, 71, 83, 84, 94, 131, 132, 133, 135, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 166, 168, 170, 172, 174, 179, 181, 182, 187, 194, 200, 214, 216, 227, 229, 237, 239, 241, 255], "pseudo": [13, 16], "purpos": [176, 180, 194, 199, 201], "python": 174, "pytorch": 229, "q": 17, "qr": 12, "quad": [16, 131, 132, 133, 134, 135, 151, 152, 153, 183, 184, 188, 189, 190, 193, 246], "quadrat": 133, "quotient": 184, "r": [17, 249, 250, 251, 252], "r_t": 165, "radam": 169, "rais": [0, 1, 2, 40, 155, 156, 192], "rand": [175, 181], "randint": [175, 181], "randn": [20, 31, 36, 155, 175, 179, 181], "random": [1, 2, 3, 248, 249, 250, 251, 252, 255], "random_integ": 181, "random_tensor": 181, "randomcrop": [254, 255], "randomgrayscal": [254, 255], "randomhorizontalflip": [254, 255], "randomli": [1, 62, 63, 64, 65, 66, 94, 116, 117, 118, 119, 120, 248, 249, 250, 251, 252, 255], "randomnoisedataset": [0, 1, 2], "randomrot": [254, 255], "randomverticalflip": 254, "rang": [0, 1, 8, 45, 54, 56, 57, 58, 73, 77, 102, 108, 110, 158, 166, 168, 177, 205, 206, 208, 247, 251, 255], "rank": 16, "rate": [156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], "rather": [44, 45, 162, 238], "ratio": 253, "ravel": 233, "raw": [55, 109, 132, 174], "re": [41, 172], "readabl": [42, 43, 44, 46, 155, 174], "readi": [3, 7, 38], "real": [16, 19, 108], "rearrang": 61, "receiv": [151, 152, 153, 235], "recent": 166, "recept": 38, "reciproc": [16, 203, 213, 221], "recognit": [30, 38, 113], "rectangular": 198, "rectif": 165, "rectifi": [51, 52, 105, 106, 165], "recurr": [43, 143], "recurs": 40, "red": 249, "reduc": [20, 31, 36, 38, 137, 138, 139, 140, 141, 142, 148, 149, 150, 151, 152, 153, 164, 167, 172, 174, 214, 215, 216, 223, 228, 249], "reduct": [19, 72, 73, 74, 76, 77, 131, 132, 133, 134, 135, 214, 216], "reevalu": 156, "refer": [4, 7, 40, 181, 195, 198, 230], "reflect": 170, "regardless": [16, 236], "region": [59, 82, 83, 84, 93, 146, 147, 235, 246, 255], "regist": [39, 40, 41, 45, 155, 173], "register_buff": 39, "register_model": [21, 23, 24, 25, 28, 29, 30, 32, 33, 34, 35, 37], "register_paramet": 40, "registr": [40, 155], "registri": 173, "registry_path": 173, "regress": [4, 76, 133, 134], "regular": [16, 20, 24, 36, 66, 117, 118, 119, 120, 158, 159, 160, 163, 164, 165, 166, 168], "relat": [172, 198, 199], "relationship": 253, "relev": [93, 158, 166, 168], "reli": 172, "reliabl": 5, "reliant": [117, 118, 119, 120], "relu": [7, 20, 31, 36, 38, 42, 43, 44, 46, 48, 50, 51, 68, 97, 98, 101, 102, 103, 105, 111, 112, 113, 114, 122, 123, 124, 126, 127, 128, 129], "relu1": 46, "relu2": 46, "relu3": 46, "remain": [5, 39, 81, 116, 117, 118, 119, 120, 167], "rememb": 181, "remov": [173, 239], "rep": 241, "repeat": [233, 234, 241], "repetit": [237, 241], "replac": [181, 249], "repres": [13, 15, 19, 27, 40, 41, 46, 69, 71, 78, 80, 81, 112, 113, 114, 127, 129, 132, 135, 143, 156, 157, 158, 164, 165, 166, 167, 168, 174, 183, 184, 190, 193, 195, 215, 226, 227, 228, 234, 246, 248, 250, 251, 252, 253], "represent": [149, 152, 156], "reproduc": [176, 177, 178, 179, 180, 181, 255], "requir": [2, 3, 4, 7, 39, 42, 46, 48, 49, 51, 52, 53, 54, 56, 69, 71, 93, 102, 128, 132, 135, 155, 170, 172, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 224, 225, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 253], "requires_grad": [39, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 61, 69, 71, 93, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 148, 149, 150, 151, 152, 153, 155, 176, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245], "rescal": [72, 73, 77, 131, 132, 135], "research": 155, "reset": [41, 179, 182], "reshap": [7, 71, 113, 114, 171, 174, 233, 236], "residu": 25, "resili": 167, "resiz": [93, 244, 254, 255], "resourc": 172, "respect": [9, 10, 11, 13, 14, 15, 16, 17, 19, 27, 31, 39, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 69, 71, 93, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 148, 149, 150, 151, 152, 153, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 208, 212, 213, 214, 215, 216, 219, 221, 223, 226, 227, 228, 234, 235, 237, 241, 249], "respons": [42, 157], "restor": 172, "restructur": 238, "result": [9, 13, 14, 16, 38, 40, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 69, 71, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 109, 155, 156, 170, 172, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 248, 249, 255], "resum": 157, "retain": [41, 182, 194, 201, 214, 215, 216, 223, 228, 245], "retent": 245, "retriev": [0, 2, 42, 44, 45], "return": [0, 1, 2, 3, 5, 7, 27, 39, 40, 42, 43, 44, 45, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 143, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 173, 174, 244, 255], "reus": 245, "reusabl": [46, 155, 244], "revers": [7, 46, 227, 250, 252], "revert": 172, "rgb": [23, 24, 25], "rho": 159, "rho_": 165, "rho_t": 165, "right": [14, 15, 16, 18, 19, 49, 55, 104, 109, 131, 132, 133, 135, 137, 138, 139, 140, 141, 142, 143, 151, 152, 153, 246], "risk": 174, "rmsprop": 169, "rob": 38, "robust": [94, 116, 117, 118, 119, 120, 133, 155, 159, 248, 249, 251, 255], "role": [174, 181, 255], "root": [4, 5, 160, 166, 221], "rotat": [68, 92, 251, 255], "rotated_imag": 94, "rout": [151, 152, 153], "routin": 7, "row": [10, 11, 13, 18, 71, 198, 234, 243], "rprop": 169, "rule": [13, 14, 171, 183, 184, 188, 189, 190, 192, 193], "run": [7, 39, 78, 80, 122, 123, 124, 137, 138, 139, 140, 141, 142, 159, 172, 179, 181], "running_mean": [39, 78, 80, 137, 138, 139, 140, 141, 142], "running_var": [78, 80, 137, 138, 139, 140, 141, 142], "runtim": [43, 46, 155], "s_": 167, "s_d": [150, 153], "s_h": [149, 150, 153], "s_w": [149, 150, 153], "same": [10, 11, 13, 14, 18, 55, 62, 63, 64, 65, 66, 78, 80, 81, 83, 84, 94, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 128, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 167, 179, 181, 187, 197, 200, 202, 212, 214, 215, 216, 230, 232, 236, 238, 239, 240, 243, 247], "sampl": [0, 1, 2, 3, 5, 7, 23, 24, 25, 27, 28, 29, 30, 82, 83, 84, 97, 98, 99, 100, 101, 102, 116, 117, 118, 119, 120, 127, 129, 132, 135, 143, 145, 146, 147, 178, 181, 246, 248, 250, 251, 252, 253], "satisfi": [9, 11, 18], "satur": [103, 255], "save": [2, 39, 41, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173], "scalabl": [3, 155], "scalar": [10, 15, 72, 73, 74, 76, 77, 174], "scale": [11, 16, 28, 29, 30, 38, 48, 53, 55, 78, 80, 81, 101, 102, 103, 105, 107, 108, 109, 110, 116, 117, 118, 119, 120, 132, 137, 138, 139, 140, 141, 142, 143, 158, 160, 161, 162, 174, 181, 228, 253], "scenario": [44, 45, 143, 162, 163, 245, 249], "schedul": 158, "scientif": 171, "score": [55, 132], "scratch": 7, "script": 181, "seamless": [0, 1, 3, 4, 155, 181], "seamlessli": [3, 4, 8, 41, 43, 46, 155, 174, 255], "second": [11, 43, 44, 69, 127, 161, 162, 163, 164, 165, 171, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 232, 234, 252], "section": 187, "see": [7, 187], "seed": [175, 176, 177, 178, 180, 181, 255], "seen": 159, "select": [93, 151, 153, 223], "self": [0, 1, 2, 3, 7, 20, 22, 27, 31, 36, 39, 40, 41, 42, 43, 44, 45, 53, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 127, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 173, 234, 244, 245], "selu": [50, 62, 68, 111, 116, 126], "selunetwork": 107, "sensit": [74, 133, 137, 138, 139], "sentiment": 4, "separ": [0, 57, 58, 59, 140, 141, 142], "sequenc": [14, 42, 44, 57, 194, 230, 232, 235, 237, 240, 241, 243, 244], "sequenti": [20, 27, 31, 36, 42, 43, 47, 57, 122, 123, 124, 128, 244, 255], "seri": [22, 28, 29, 57, 112, 122, 148, 151], "serial": [39, 40, 157], "serv": [3, 31, 40, 42, 43, 44, 45, 46, 155, 167, 245], "set": [3, 4, 5, 41, 45, 57, 58, 59, 105, 106, 107, 112, 113, 114, 116, 119, 120, 127, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 156, 161, 162, 166, 176, 177, 178, 179, 180, 181, 182, 194, 196, 197, 201, 202, 208, 214, 216, 229, 245, 249, 255], "setup": [4, 7], "sever": [16, 112, 113, 114, 148, 149, 150, 151, 152, 153, 172, 244, 255], "sgd": [7, 158, 165, 169], "sgn": 15, "shape": [3, 4, 5, 7, 10, 11, 13, 14, 16, 20, 27, 31, 36, 38, 39, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 171, 174, 176, 177, 178, 180, 181, 182, 185, 196, 197, 198, 199, 200, 201, 202, 208, 213, 214, 215, 216, 219, 221, 223, 227, 228, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 247, 248, 249, 250, 251, 252, 253, 255], "shapelik": 177, "share": 38, "shift": [78, 80, 81, 137, 138, 139, 140, 141, 142, 143], "shorthand": 187, "should": [27, 39, 172, 176, 177, 178, 180, 196, 197, 205, 206, 226, 235, 244], "show": [170, 173], "showcas": 7, "shown": 179, "shrink": 159, "shuffl": [1, 2, 3], "side": [18, 43, 46, 57, 58, 59, 85, 86, 87, 89, 90, 91, 112, 113, 114, 122, 123, 124, 148, 149, 150, 151, 152, 153, 172], "sigma": [16, 97, 99, 101, 108, 137, 138, 139, 140, 141, 142, 143, 227], "sigma_c": 247, "sigma_i": 16, "sigmoid": [50, 68, 97, 98, 101, 102, 111, 126, 131], "sigmoidnetwork": 108, "sign": [14, 133, 167, 203], "signal": [112, 113, 114, 122, 137, 140, 148, 149, 150, 151, 152, 153], "signific": 172, "significantli": [38, 244], "sim": [116, 117, 118, 119, 120], "similar": [7, 97, 98, 187, 213, 229, 235], "similarli": [19, 226], "simonyan": 38, "simpl": [3, 4, 7, 46, 57, 58, 59, 69, 71, 85, 86, 87, 89, 90, 91, 104, 106, 107, 108, 110, 112, 113, 114, 116, 117, 118, 119, 120, 127, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 148, 149, 150, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 185, 186, 191, 244], "simplebinaryclassificationmodel": 131, "simpleclassificationmodel": [132, 135], "simplegelumodel": 104, "simpleleakyrelumodel": 105, "simplemodel": [7, 129, 173], "simpleregressionmodel": 134, "simplerelumodel": 106, "simpleselumodel": 107, "simplesigmoidmodel": 108, "simpletanhmodel": 110, "simpli": [170, 226, 227, 238], "simplic": [38, 106], "simplifi": [4, 28, 46, 122, 123, 124], "simul": 255, "simultan": 94, "sin": [203, 209], "sinc": [14, 17, 42, 43, 44, 45, 57, 58, 59, 102, 170, 172, 178, 234, 255], "sine": [206, 219, 220], "singl": [0, 4, 14, 17, 19, 55, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 122, 123, 124, 132, 143, 149, 150, 151, 152, 153, 156, 174, 180, 196, 230, 239, 247, 249, 255], "singleton": 143, "singular": [10, 13, 14, 16, 18, 19], "sinh": [203, 210, 225], "size": [0, 1, 2, 3, 19, 27, 28, 29, 30, 36, 41, 43, 57, 58, 59, 61, 64, 65, 66, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 112, 113, 114, 122, 123, 124, 127, 129, 131, 132, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 173, 177, 180, 181, 182, 214, 215, 216, 223, 228, 230, 232, 239, 242, 243, 246, 248, 253, 255], "skip": 172, "slice": [69, 226], "slide": [61, 148, 150, 151, 153], "slightli": 255, "slope": [51, 103, 105], "slow": [3, 165], "small": [16, 28, 29, 30, 38, 51, 72, 73, 78, 80, 81, 105, 107, 131, 132, 133, 137, 138, 139, 140, 141, 142, 143, 149, 152, 159, 160, 161, 162, 163, 164, 165, 166, 167], "smaller": [36, 38, 43, 46, 155, 160, 161, 189, 246, 248, 253], "smallest": 216, "smooth": [24, 49, 103, 104, 158, 166, 255], "smoother": 158, "so": [42, 43, 44, 45, 94, 155, 165, 196, 197, 244], "softmax": [50, 68, 111, 126, 132], "softmaxmodel": 109, "solut": [16, 18], "solv": [8, 9, 12, 16, 17, 19], "solver": 8, "some": [48, 63, 94, 116, 117, 118, 137, 138, 139, 140, 141, 142, 160, 161, 162, 172, 174], "sometim": 171, "sophist": [43, 46], "sourc": 181, "space": [11, 17, 19, 57, 58, 59, 61, 82, 83, 84, 112, 113, 114, 122, 123, 124, 145, 146, 147, 194, 255], "span": 4, "spars": [160, 161], "spatial": [20, 31, 36, 113, 114, 123, 137, 138, 139, 140, 141, 142, 143, 149, 150, 151, 152, 153, 234], "spatio": 114, "special": [0, 1, 7, 16, 39, 40, 41, 116, 181], "specif": [4, 7, 42, 43, 44, 45, 46, 102, 116, 117, 118, 119, 120, 140, 141, 142, 155, 156, 170, 181, 196, 214, 216, 237, 241], "specifi": [0, 1, 2, 3, 4, 5, 7, 15, 21, 27, 31, 32, 33, 34, 35, 37, 43, 55, 61, 66, 72, 73, 74, 76, 77, 81, 82, 83, 84, 93, 94, 109, 112, 113, 114, 131, 132, 133, 134, 135, 143, 145, 146, 147, 149, 150, 151, 152, 153, 156, 174, 176, 177, 178, 179, 180, 192, 194, 195, 196, 197, 198, 199, 201, 202, 208, 214, 215, 216, 223, 227, 228, 229, 230, 232, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 253, 255], "speech": 140, "speed": [158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "split": [4, 230, 232, 243], "springer": 38, "sqrt": [49, 97, 98, 101, 102, 104, 137, 138, 139, 140, 141, 142, 143, 159, 160, 161, 162, 164, 165, 166, 203, 205, 206], "squar": [1, 3, 9, 10, 11, 13, 14, 16, 17, 18, 19, 74, 76, 133, 134, 159, 160, 161, 166, 203, 221], "squaredataset": [0, 1, 2, 3], "squeez": 233, "stabil": [13, 16, 72, 73, 78, 80, 81, 122, 123, 124, 131, 132, 137, 138, 139, 140, 141, 142, 143, 158, 159, 160, 161, 162, 163, 164, 165, 166, 247], "stabl": [97, 98, 101, 102, 116, 132, 158, 162, 163, 166, 167, 168], "stack": [46, 232, 233, 243, 255], "standard": [49, 51, 97, 99, 101, 103, 104, 105, 116, 167, 178, 181, 187, 244, 247, 255], "start": [1, 3, 158, 160, 167, 194, 246, 248], "state": [38, 39, 40, 41, 43, 46, 156, 170, 172, 179], "state_dict": [40, 41, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], "static": 46, "statist": [16, 62, 78, 80], "std": [5, 99, 244, 247, 255], "step": [41, 61, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 194, 244, 245], "step_siz": 167, "still": 159, "stochast": [7, 158, 168], "stop": 194, "storag": [42, 44, 182], "store": [2, 4, 5, 39, 40, 41, 42, 43, 44, 45, 145, 146, 147, 172, 182, 246, 247, 248, 249, 250, 251, 252, 253], "str": [5, 31, 40, 42, 44, 46, 72, 73, 74, 76, 77, 93, 156, 173, 234], "straightforward": [168, 170, 183], "strategi": 157, "streamlin": [2, 3], "strict": [40, 156], "stride": [27, 28, 29, 30, 43, 46, 57, 58, 59, 61, 82, 83, 84, 85, 86, 87, 89, 90, 91, 112, 113, 114, 122, 123, 124, 145, 146, 147, 148, 149, 150, 151, 152, 153], "stride_height": 61, "stride_width": 61, "string": [40, 42, 44, 46, 112, 113, 114, 156], "structur": [0, 7, 17, 39, 40, 43, 155, 156, 173, 174, 198, 245], "style": [80, 140, 141, 234], "sub": [42, 43, 44, 45, 46, 155, 203, 246, 248], "sub_tensor": 182, "subclass": [1, 2, 3, 7, 40, 41, 42, 155, 156], "submodul": [40, 155], "subsequ": [43, 46, 102, 181], "subset": [117, 118], "subtract": [7, 193, 247], "suffer": 160, "suit": [24, 97, 98, 101, 102], "suitabl": [28, 29, 30, 133, 160, 161, 176], "sum": [15, 42, 43, 44, 45, 46, 55, 72, 73, 74, 76, 77, 109, 131, 132, 133, 134, 135, 160, 183, 186, 191, 203, 226, 228, 230, 232, 234, 237, 241, 243], "sum_": [14, 55, 109, 131, 132, 134, 135, 137, 138, 139, 140, 141, 142, 143, 148, 149, 150, 185, 186, 215, 223, 226, 228, 234, 237], "sum_i": [15, 191], "sum_j": 191, "sum_k": 187, "summar": [148, 149, 150], "summat": 14, "super": [7, 39, 40, 41, 42, 43, 44, 45, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 127, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 143, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 173], "support": [1, 3, 4, 7, 8, 14, 15, 16, 17, 19, 42, 43, 44, 45, 46, 93, 94, 155, 157, 164, 181, 182, 183, 184, 187, 188, 189, 190, 192, 193, 195, 198, 208, 213, 215, 219, 221, 223, 226, 227, 228, 230, 234, 238, 245, 255], "suppos": 255, "sure": [155, 255], "svd": [12, 16], "symmetr": [9, 82, 83, 84, 101, 102, 110], "syntax": [1, 187], "system": [8, 9, 16, 17, 18, 38, 170, 234], "systemat": 255, "szegedi": [23, 38], "t": [16, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 182, 187, 229, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255], "t0": 158, "t1": 229, "t2": 229, "tabular": 4, "tailor": [4, 155, 255], "take": [17, 148, 149, 150, 151, 152, 153, 172, 244], "taken": 226, "tan": 203, "tangent": [56, 110, 207, 224, 225], "tanh": [43, 46, 49, 50, 68, 97, 98, 101, 102, 104, 111, 126, 203], "tanhnetwork": 110, "target": [5, 46, 72, 73, 74, 76, 77, 82, 83, 84, 93, 131, 132, 133, 134, 135, 145, 146, 147, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 246, 248, 253], "target_tensor": [131, 132, 133, 134, 135], "target_transform": 5, "task": [4, 7, 8, 20, 21, 23, 24, 25, 28, 29, 30, 38, 54, 55, 58, 69, 72, 73, 76, 77, 108, 109, 112, 113, 114, 131, 132, 133, 134, 135, 140, 141, 142, 148, 150, 151, 153, 161, 171, 181, 198, 255], "techniqu": [9, 13, 36, 78, 116, 117, 118, 119, 120, 140, 141, 142, 157, 253, 255], "tempor": [112, 114, 150, 153], "temporarili": 172, "tensor": [2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 27, 28, 29, 30, 31, 36, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 170, 172, 174, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255], "term": [16, 69, 122, 123, 124, 158, 162, 164, 165, 166, 168], "test": [4, 5], "test_siz": 5, "text": [4, 10, 14, 15, 42, 48, 51, 52, 53, 55, 57, 58, 59, 82, 83, 84, 85, 86, 87, 89, 90, 91, 97, 98, 101, 102, 103, 105, 106, 107, 109, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 131, 132, 133, 134, 135, 148, 149, 150, 151, 152, 153, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 177, 183, 184, 186, 188, 189, 190, 192, 193, 204, 208, 214, 215, 216, 218, 223, 228, 230, 232, 235, 236, 237, 238, 239, 241, 242, 243, 246, 247, 248, 250, 251, 252], "th": [69, 131, 132, 134, 135, 140, 141, 142, 188, 189, 192], "than": [0, 1, 44, 45, 48, 51, 74, 103, 105, 133, 156, 162, 208, 226, 235, 240, 246, 248, 253], "thei": [0, 7, 19, 39, 43, 45, 46, 174, 234, 238, 246, 248, 255], "them": [3, 40, 45, 61, 158, 171, 230, 240, 244, 247, 255], "therebi": [116, 149, 150, 152, 153], "theta": [158, 159, 251], "theta_": [158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], "theta_t": [165, 166], "thi": [0, 1, 2, 3, 5, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 27, 38, 39, 41, 43, 44, 45, 46, 52, 54, 55, 56, 57, 58, 59, 61, 69, 71, 82, 93, 94, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 127, 128, 129, 131, 132, 133, 135, 137, 138, 139, 140, 141, 142, 143, 145, 148, 149, 150, 151, 152, 153, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 186, 187, 191, 194, 196, 199, 200, 201, 202, 208, 212, 213, 214, 215, 216, 219, 221, 223, 226, 227, 228, 229, 235, 237, 238, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255], "thing": 172, "those": [7, 28, 29, 30, 45, 102], "three": [19, 30, 59, 84, 87, 91, 114, 120, 122, 123, 124, 139, 142, 147, 150, 153], "threshold": [16, 74, 133], "through": [0, 3, 4, 7, 11, 16, 17, 19, 20, 22, 27, 36, 42, 43, 46, 69, 71, 93, 103, 104, 105, 106, 107, 108, 110, 112, 113, 114, 116, 117, 118, 119, 120, 127, 128, 129, 137, 138, 139, 140, 143, 148, 149, 150, 151, 152, 153, 178, 185, 186, 191, 234, 236, 238, 239, 242, 255], "throughout": [53, 245], "tile": 233, "time": [0, 3, 14, 28, 29, 30, 57, 105, 107, 112, 122, 148, 149, 150, 151, 152, 153, 158, 159, 160, 161, 162, 166, 168, 172, 237, 241], "to_tensor": 5, "togeth": [46, 244, 255], "too": 167, "tool": [3, 7, 155, 171, 181, 244, 255], "top": [9, 10, 11, 17, 19, 69, 71, 93, 112, 113, 114, 127, 129, 246, 248], "torch": [31, 229], "total": [0, 1, 2, 5, 21, 23, 24, 28, 29, 30, 32, 33, 34, 35, 37, 41, 182, 238], "totensor": [244, 255], "trace": [8, 203], "track": [7, 122, 123, 124, 137, 138, 139, 140, 141, 142, 155, 170, 172, 176, 177, 178, 180, 194, 195, 196, 197, 198, 199, 200, 201, 202, 229, 245], "track_running_stat": [122, 123, 124, 137, 138, 139, 140, 141, 142], "tradit": [159, 160, 163, 164, 165], "trail": 81, "train": [1, 2, 3, 4, 5, 7, 22, 23, 24, 39, 40, 43, 45, 46, 55, 62, 63, 64, 65, 66, 78, 80, 94, 104, 105, 107, 108, 109, 110, 116, 117, 118, 119, 120, 137, 138, 139, 140, 141, 142, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 244, 247, 248, 249, 250, 251, 252, 255], "trainabl": [137, 138, 139, 140, 141, 142, 155], "transfer": [80, 140, 141], "transform": [2, 4, 5, 7, 11, 44, 69, 71, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 171, 234], "transform_pipelin": [244, 255], "transformed_imag": [244, 255], "transit": 133, "translat": [149, 152], "transpos": [7, 9, 203], "treat": [0, 39, 143, 155], "triangular": [9, 17], "true": [1, 2, 3, 4, 5, 19, 22, 23, 24, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 61, 62, 63, 64, 65, 66, 69, 71, 78, 80, 93, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 148, 149, 150, 151, 152, 153, 155, 156, 161, 162, 166, 170, 176, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245], "try": 0, "tune": 255, "tupl": [2, 3, 5, 11, 17, 19, 40, 41, 57, 58, 59, 61, 81, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 112, 113, 114, 122, 123, 124, 128, 143, 146, 147, 148, 149, 150, 151, 152, 153, 161, 162, 163, 164, 165, 167, 174, 176, 177, 178, 180, 182, 196, 199, 201, 214, 215, 216, 223, 228, 230, 232, 234, 235, 238, 239, 240, 242, 243, 246, 247, 248, 253], "twice": 235, "two": [7, 10, 11, 13, 14, 16, 17, 19, 28, 29, 30, 31, 57, 58, 59, 69, 86, 90, 113, 119, 127, 138, 141, 149, 152, 161, 162, 163, 164, 165, 167, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 226, 234], "type": [39, 40, 41, 69, 127, 182, 194, 195, 196, 197, 198, 199, 200, 201, 202, 229, 234, 245], "typeerror": [0, 1, 2, 40, 156], "typic": [8, 39, 55, 62, 94, 107, 109, 135, 137, 138, 139, 140, 141, 142, 157, 158, 166, 168, 172, 174, 242, 245, 247, 251, 253, 255], "u": [16, 19, 98, 100, 102], "u_": 163, "unchang": [39, 66, 103, 105, 106, 107, 116, 117, 118, 119, 120, 128, 236, 239], "undefin": 192, "under": 155, "underbrac": 14, "underdetermin": 16, "undergo": 255, "underli": [0, 7, 23, 24, 25, 229, 232, 236, 238, 243], "understand": [7, 36, 38, 46, 255], "unexpect": [40, 43, 46, 181], "unfold": [60, 68], "unifi": 0, "uniform": [96, 98, 102, 112, 113, 114, 127, 129, 175, 176, 177, 181, 249, 250, 251, 252], "uniformli": [176, 180], "uniniti": [196, 197], "unintend": 172, "union": 31, "uniqu": [9, 16, 18, 42, 44], "unit": [20, 27, 36, 48, 49, 51, 52, 53, 97, 98, 101, 102, 103, 104, 105, 106, 107, 116], "unless": 182, "unlik": [39, 42, 43, 44, 45, 51, 103, 105, 116, 143, 159, 160, 162, 163, 164, 165, 167], "unnecessari": 172, "unpad": 235, "unseen": 255, "unsqueez": 233, "unstabl": 13, "up": [156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 251, 253], "updat": [4, 39, 45, 46, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172], "upon": [24, 38, 42, 43, 44, 45], "upper": [17, 100, 167, 180], "us": [0, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 16, 17, 19, 22, 23, 24, 25, 27, 28, 29, 30, 38, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 69, 71, 76, 78, 80, 83, 84, 93, 94, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 170, 171, 172, 173, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 212, 214, 215, 216, 223, 228, 234, 235, 237, 239, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255], "usag": [3, 8, 43, 46, 156, 157, 246, 247, 248, 249, 250, 251, 252, 253], "use_aux": [22, 23, 24], "user": [1, 2, 3, 4, 7, 42, 43, 44, 45, 155, 160, 244, 245, 255], "usual": 132, "util": [3, 7, 8, 44, 45, 155, 181], "v": [11, 16, 19, 161, 162, 164, 165, 195], "v1": [22, 23, 38], "v3": [22, 24, 25, 38], "v4": [22, 25], "v_": [158, 161, 162, 164, 165, 166, 168], "v_stack": 243, "v_t": [165, 166], "val": 95, "valid": [112, 113, 114, 122, 123, 124, 227], "valu": [7, 10, 14, 15, 16, 19, 40, 42, 44, 46, 48, 51, 54, 55, 56, 57, 58, 59, 61, 72, 73, 74, 76, 77, 78, 80, 81, 82, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 110, 116, 117, 118, 119, 120, 122, 123, 124, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 148, 149, 150, 151, 152, 153, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 174, 176, 177, 178, 179, 180, 181, 194, 195, 196, 197, 198, 204, 205, 206, 208, 211, 212, 213, 214, 216, 218, 219, 221, 222, 230, 235, 236, 238, 242, 247, 249, 250, 252], "valuabl": 181, "valueerror": [1, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 156], "vanish": [103, 107, 137, 138, 139], "var": 203, "vari": [43, 45, 82, 93, 145, 251], "variabl": [40, 46, 82, 83, 84, 128, 145, 146, 147, 155, 170, 172, 176, 196, 248, 251], "varianc": [53, 62, 78, 80, 97, 98, 101, 102, 107, 116, 122, 123, 124, 137, 138, 139, 140, 141, 142, 143, 161, 162, 163, 164, 165, 178, 228, 251, 255], "variant": [31, 32, 33, 34, 35, 161, 162, 163], "variat": [140, 141, 142, 248, 255], "varieti": [4, 181, 255], "variou": [22, 27, 38, 106, 157, 181, 214, 216, 235, 245], "vdot": 191, "vector": [11, 16, 17, 18, 19, 69, 71, 127, 129, 185, 186, 187, 191], "veloc": [158, 166, 168], "veri": [16, 38, 159], "versa": 167, "versatil": [181, 234], "version": [19, 22, 27, 28, 29, 166, 191, 249], "vertic": [240, 243, 252], "vgg": 31, "vggnet": [26, 32, 33, 34, 35, 38], "vggnet_11": 38, "vggnet_13": 38, "vggnet_16": 38, "vggnet_19": 38, "via": [3, 4], "vice": 167, "video": [59, 66, 114, 124, 142, 150, 153], "view": [27, 43, 149, 150, 151, 152, 153, 238], "vision": [38, 58, 113, 127, 255], "visual": [36, 38], "vol": 38, "volumetr": [59, 66, 114, 124, 142, 150, 153], "vstack": 233, "w": [58, 59, 61, 65, 66, 69, 71, 83, 84, 86, 87, 90, 91, 93, 94, 112, 113, 114, 123, 124, 127, 129, 138, 139, 141, 142, 146, 147, 150, 153, 246, 248], "w_": [58, 59, 83, 84, 86, 87, 90, 91, 93, 113, 114, 146, 147, 149, 150, 152, 153], "w_out": [58, 59, 86, 87, 90, 91], "wa": [23, 116, 117, 118, 119, 120, 172], "wai": [1, 21, 37, 170, 172, 238], "want": [0, 7, 244, 246], "warn": [42, 44], "we": [3, 7, 171, 234], "weight": [38, 57, 58, 59, 69, 71, 72, 73, 77, 78, 80, 81, 93, 97, 98, 101, 102, 112, 113, 114, 116, 117, 118, 119, 120, 127, 129, 131, 132, 135, 137, 138, 139, 140, 141, 142, 143, 155, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 176, 181], "weight1": 44, "weight2": 44, "weight_decai": [158, 159, 160, 161, 162, 163, 164, 165, 166, 168], "well": [24, 97, 98], "were": 46, "what": 172, "when": [0, 1, 3, 7, 14, 40, 43, 45, 46, 48, 51, 57, 58, 59, 103, 128, 137, 138, 139, 140, 141, 142, 156, 159, 167, 170, 172, 173, 174, 181, 192, 244, 246], "where": [3, 4, 5, 10, 11, 13, 14, 15, 16, 17, 19, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 65, 66, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 148, 149, 150, 151, 152, 153, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 174, 181, 183, 184, 188, 189, 190, 192, 193, 196, 197, 208, 212, 213, 214, 215, 216, 219, 221, 223, 226, 227, 228, 230, 235, 237, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252], "whether": [1, 10, 22, 23, 24, 40, 41, 97, 98, 166, 170, 176, 177, 178, 180, 182, 196, 197, 214, 215, 216, 223, 228], "which": [0, 7, 10, 11, 13, 14, 15, 16, 17, 19, 25, 32, 33, 34, 35, 38, 40, 42, 44, 46, 51, 55, 74, 94, 103, 104, 105, 109, 110, 116, 133, 135, 137, 138, 139, 140, 141, 142, 143, 161, 162, 164, 166, 170, 172, 174, 176, 177, 180, 205, 206, 207, 208, 209, 210, 213, 214, 215, 216, 217, 219, 220, 221, 223, 224, 225, 226, 228, 230, 237, 238, 240, 242, 245, 246, 248, 249, 250, 251, 252, 253, 255], "while": [7, 38, 43, 46, 62, 104, 106, 155, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 172, 238, 240, 249, 255], "who": [7, 42, 43, 44, 45], "whose": [19, 197, 200, 202, 204, 208, 212, 218], "wide": [4, 5, 8, 16, 52, 106, 112, 113, 132], "wider": [57, 58], "width": [58, 59, 61, 65, 66, 83, 84, 86, 87, 90, 91, 93, 94, 113, 114, 138, 139, 141, 142, 146, 147, 149, 150, 152, 153, 246, 248, 253], "window": [85, 86, 87, 89, 90, 91, 148, 149, 150, 151, 152, 153, 159, 214, 216], "wise": [48, 49, 51, 52, 53, 54, 55, 56, 109, 116, 117, 118, 119, 120, 122, 123, 124, 155, 171, 183, 184, 187, 188, 189, 190, 192, 193, 204, 205, 206, 207, 208, 209, 210, 211, 213, 217, 218, 219, 220, 221, 222, 224, 225, 226, 232, 243], "within": [2, 38, 39, 42, 43, 44, 45, 46, 56, 93, 94, 102, 104, 106, 107, 108, 110, 112, 113, 114, 116, 117, 118, 128, 131, 132, 133, 134, 135, 137, 138, 139, 140, 143, 148, 149, 150, 151, 152, 153, 157, 172, 194, 208, 251, 255], "without": [7, 42, 43, 44, 69, 71, 112, 113, 114, 127, 129, 170, 173, 214, 236, 238, 242], "won": 172, "work": [1, 2, 3, 7, 9, 171, 174], "workflow": [181, 255], "workload": 7, "wrap": [3, 155, 172, 229], "wrapper": 155, "x": [7, 8, 18, 27, 31, 39, 40, 42, 43, 44, 45, 46, 55, 69, 71, 94, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 148, 149, 150, 151, 152, 153, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 176, 177, 178, 180, 196, 197, 212, 234, 246, 247, 248, 249, 250, 251, 252, 253], "x1": 127, "x2": 127, "x_": [132, 135, 234], "x_c": [132, 135], "x_i": 131, "x_k": 132, "xavier": [97, 98, 101, 102], "xavier_norm": 96, "xavier_uniform": 96, "xy": 234, "x\u2081": 127, "x\u2082": 127, "y": [42, 43, 44, 45, 46, 94, 103, 104, 105, 106, 107, 108, 110, 112, 113, 114, 116, 117, 118, 119, 120, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 148, 149, 150, 151, 152, 153, 176, 177, 178, 180, 196, 197, 234, 249], "y_": [132, 135, 234], "y_c": [132, 135], "y_i": 131, "yann": [5, 38], "yet": [7, 171], "yield": [0, 1, 40, 172], "you": [0, 43, 45, 46, 155, 157, 170, 172, 181, 196, 197, 198, 202, 227, 229, 244, 246, 255], "your": [155, 157, 170, 172, 181, 255], "z": [197, 201, 202], "zeiler": [36, 38], "zero": [14, 16, 17, 24, 48, 51, 57, 58, 59, 62, 63, 64, 65, 66, 85, 86, 87, 89, 90, 91, 95, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 112, 113, 114, 116, 117, 118, 119, 120, 143, 148, 149, 150, 151, 152, 153, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 196, 197, 198, 202, 203, 208, 218, 235], "zero_grad": [41, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 182], "zeros_lik": [197, 203], "zfnet": [26, 38], "zisserman": 38, "\u03c3\u1d62": 16}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "datasets.MNIST", "Image Datasets", "Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "models.alexnet", "Inception", "models.inception_v1", "models.inception_v3", "models.inception_v4", "ConvNets", "LeNet", "models.lenet_1", "models.lenet_4", "models.lenet_5", "VGGNet", "models.vggnet_11", "models.vggnet_13", "models.vggnet_16", "models.vggnet_19", "ZFNet", "models.zfnet", "lucid.models", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.LeakyReLU", "nn.ReLU", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Tanh", "Activation Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "Fused Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "lucid.nn", "optim.Optimizer", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.types", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.meshgrid", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.unsqueeze", "lucid.vstack", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": 171, "1d": 171, "2": 171, "2d": 171, "3": 171, "It": [170, 172], "ab": 204, "activ": [50, 68, 111, 126], "ad": 171, "adadelta": 159, "adagrad": 160, "adam": 161, "adamax": 163, "adamw": 162, "adaptive_avg_pool1d": 82, "adaptive_avg_pool2d": 83, "adaptive_avg_pool3d": 84, "adaptiveavgpool1d": 145, "adaptiveavgpool2d": 146, "adaptiveavgpool3d": 147, "add": 183, "addit": 16, "admonit": 174, "advanc": [61, 255], "alexnet": [20, 21], "algebra": 12, "algorithm": [158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], "alias": 174, "align": 171, "alpha_dropout": 62, "alphadropout": 116, "also": 157, "anoth": 229, "arang": 194, "arcco": 205, "architectur": [20, 28, 29, 30, 36], "arcsin": 206, "arctan": 207, "asgd": 158, "attribut": [5, 20, 27, 31, 36, 39, 41, 42, 43, 44, 45, 46, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 182, 246, 247, 248, 249, 250, 251, 252, 253], "avg_pool1d": 85, "avg_pool2d": 86, "avg_pool3d": 87, "avgpool1d": 148, "avgpool2d": 149, "avgpool3d": 150, "axi": 171, "backpropag": 182, "backward": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 69, 71, 93, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 148, 149, 150, 151, 152, 153, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "batch_norm": 78, "batchnorm1d": 137, "batchnorm2d": 138, "batchnorm3d": 139, "bceloss": 131, "behavior": [82, 83, 84, 145, 146, 147], "benefit": 172, "bilinear": [69, 127], "binari": 203, "binary_cross_entropi": 72, "broadcast": 171, "buffer": 39, "calcul": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 61, 69, 71, 82, 83, 84, 93, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253], "captur": 173, "case": 174, "centercrop": 246, "choleski": 9, "class": [0, 1, 2, 5, 20, 22, 27, 31, 36, 39, 40, 41, 42, 43, 44, 45, 46, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 182, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253], "clip": 208, "co": 209, "combin": 0, "compon": [3, 7, 155], "compos": 244, "concatdataset": [0, 1], "concaten": 230, "conclus": [3, 7, 155, 170, 171, 172, 181, 245, 255], "constant": 95, "contain": 47, "conv1d": [57, 112], "conv2d": [58, 113], "conv3d": [59, 114], "convbnrelu1d": 122, "convbnrelu2d": 123, "convbnrelu3d": 124, "convnet": [26, 38], "convolut": [60, 68, 115, 126], "core": 7, "cosh": 210, "creat": [41, 182, 229], "cross_entropi": 73, "crossentropyloss": 132, "cube": 211, "custom": [1, 2, 3, 40, 156, 157, 255], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 5, 6], "defin": [2, 40, 156, 157], "definit": 174, "descript": 173, "det": 10, "detail": 16, "diag": 195, "dilat": 61, "div": 184, "dot": 185, "dropout": [63, 67, 68, 117, 121, 126], "dropout1d": [64, 118], "dropout2d": [65, 119], "dropout3d": [66, 120], "eig": 11, "elu": [48, 103], "empti": 196, "empty_lik": 197, "exampl": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255], "exp": 212, "ey": 198, "featur": [4, 7, 8, 157, 181, 255], "flatten": 231, "forward": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 61, 69, 71, 82, 83, 84, 93, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253], "from": 229, "function": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 28, 29, 30, 32, 33, 34, 35, 37, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 170, 172, 173, 176, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "fuse": [125, 126], "futur": 4, "gelu": [49, 104], "gener": [175, 203], "get": 157, "grad_en": 170, "gradient": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 69, 71, 93, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 148, 149, 150, 151, 152, 153, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "guidelin": 174, "how": [170, 172], "hstack": 232, "huber_loss": 74, "huberloss": 133, "ident": 128, "imag": [6, 254], "incept": 22, "inception_v1": 23, "inception_v3": 24, "inception_v4": 25, "index": 182, "init": [95, 97, 98, 99, 100, 101, 102], "initi": 96, "inner": 186, "input": 229, "inspect": [157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], "instance_norm": 80, "instancenorm1d": 140, "instancenorm2d": 141, "instancenorm3d": 142, "integr": [3, 155, 181, 255], "interpol": 93, "inv": 13, "iter": 182, "kaiming_norm": 97, "kaiming_uniform": 98, "kei": [3, 4, 7, 155, 157, 181, 255], "layer": [111, 115, 121, 125, 126, 130, 136, 144, 154], "layer_norm": 81, "layernorm": 143, "leaky_relu": 51, "leakyrelu": 105, "learn": 181, "lenet": 27, "lenet_1": 28, "lenet_4": 29, "lenet_5": 30, "limit": 7, "linalg": [8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "linear": [12, 68, 70, 71, 126, 129, 130], "list": 229, "load": 1, "log": 213, "loss": [68, 75, 126, 136], "lucid": [3, 4, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 38, 68, 155, 157, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 255], "matmul": 187, "matrix": 187, "matrix_pow": 14, "max": 214, "max_pool1d": 89, "max_pool2d": 90, "max_pool3d": 91, "maximum": 188, "maxpool1d": 151, "maxpool2d": 152, "maxpool3d": 153, "mean": 215, "meshgrid": 234, "metadata": 173, "method": [0, 1, 2, 5, 27, 31, 40, 41, 156, 182], "min": 216, "minimum": 189, "mnist": 5, "model": [21, 23, 24, 25, 28, 29, 30, 32, 33, 34, 35, 37, 38, 155], "modul": [40, 126], "moduledict": 42, "modulelist": 43, "more": 181, "mse_loss": 76, "mseloss": 134, "mul": 190, "multipl": [0, 187], "nadam": 164, "new": 171, "newaxi": 171, "nll_loss": 77, "nllloss": 135, "nn": [39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 68, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155], "no_grad": 172, "norm": 15, "normal": [68, 79, 99, 126, 144, 247], "note": 7, "number": 175, "ones": 199, "ones_lik": 200, "oper": [12, 187, 203], "optim": [156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "organ": 155, "outer": 191, "overview": [3, 4, 7, 22, 23, 24, 25, 27, 28, 29, 30, 155, 157, 181, 255], "pad": 235, "paramet": [1, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 31, 32, 33, 34, 35, 36, 37, 39, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 172, 173, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253], "parameterdict": 44, "parameterlist": 45, "perform": 182, "pinv": 16, "pipelin": [3, 255], "pitfal": [170, 172], "pool": [68, 88, 126, 154], "potenti": [170, 172], "power": 192, "properti": [41, 182], "qr": 17, "radam": 165, "rais": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "rand": 176, "randint": 177, "randn": 178, "random": [175, 176, 177, 178, 179, 180, 181], "randomcrop": 248, "randomgrayscal": 249, "randomhorizontalflip": 250, "randomrot": 251, "randomverticalflip": 252, "ravel": 236, "reciproc": 217, "refer": [5, 157], "register_model": 173, "relu": [52, 106], "repeat": 237, "reshap": 238, "resiz": 253, "return": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 28, 29, 30, 32, 33, 34, 35, 37, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 101, 102, 170, 172, 176, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243], "rmsprop": 166, "rotat": 94, "rprop": 167, "rule": 187, "see": 157, "seed": 179, "selu": [53, 107], "sequenti": 46, "sgd": 168, "sigmoid": [54, 108], "sign": 218, "signatur": [0, 1, 2, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 69, 71, 72, 73, 74, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 123, 124, 127, 128, 129, 131, 132, 133, 134, 135, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 173, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253], "sin": 219, "sinh": 220, "slice": 182, "softmax": [55, 109], "solv": 18, "sqrt": 221, "squar": 222, "squeez": 239, "stack": 240, "start": 157, "state": [157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168], "sub": 193, "sum": 223, "svd": 19, "tan": 224, "tanh": [56, 110, 225], "tensor": [171, 182, 203, 229, 233], "through": 182, "tile": 241, "totensor": 245, "trace": 226, "track": 182, "transform": [244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255], "transpos": 227, "type": 174, "unari": 203, "unfold": 61, "uniform": [100, 180], "unsqueez": 242, "us": [1, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 174, 229], "usag": [4, 7, 23, 24, 25, 27, 28, 29, 30, 39, 94, 170, 171, 172, 174, 234, 244, 245, 255], "util": [68, 92], "utilit": 233, "var": 228, "vggnet": 31, "vggnet_11": 32, "vggnet_13": 33, "vggnet_16": 34, "vggnet_19": 35, "vstack": 243, "weight": 96, "why": 174, "work": [4, 170, 172], "xavier_norm": 101, "xavier_uniform": 102, "zero": 201, "zeros_lik": 202, "zfnet": [36, 37]}})