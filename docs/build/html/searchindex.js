Search.setIndex({"alltitles": {"@ Operator": [[226, "operator"]], "Activation Functions": [[87, null]], "Activation Layers": [[154, null], [165, null]], "Additional Details": [[17, "additional-details"]], "Admonitions and Usage Guidelines": [[213, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[98, "advanced-example-with-dilation"]], "Advanced Features": [[294, "advanced-features"]], "AlexNet": [[21, null]], "Algorithm": [[197, "algorithm"], [198, "algorithm"], [199, "algorithm"], [200, "algorithm"], [201, "algorithm"], [202, "algorithm"], [203, "algorithm"], [204, "algorithm"], [205, "algorithm"], [206, "algorithm"], [207, "algorithm"]], "Architecture": [[21, "architecture"], [32, "architecture"], [33, "architecture"], [34, "architecture"], [72, "architecture"]], "Architecture Details": [[44, "architecture-details"], [45, "architecture-details"]], "Attention Mechanism": [[136, "attention-mechanism"]], "Attributes": [[5, "attributes"], [6, "attributes"], [21, "attributes"], [27, "attributes"], [31, "attributes"], [35, "attributes"], [46, "attributes"], [53, "attributes"], [63, "attributes"], [67, "attributes"], [72, "attributes"], [76, "attributes"], [78, "attributes"], [79, "attributes"], [80, "attributes"], [81, "attributes"], [82, "attributes"], [83, "attributes"], [132, "attributes"], [133, "attributes"], [134, "attributes"], [135, "attributes"], [146, "attributes"], [147, "attributes"], [148, "attributes"], [149, "attributes"], [150, "attributes"], [151, "attributes"], [152, "attributes"], [153, "attributes"], [155, "attributes"], [156, "attributes"], [157, "attributes"], [159, "attributes"], [160, "attributes"], [161, "attributes"], [162, "attributes"], [163, "attributes"], [166, "attributes"], [167, "attributes"], [168, "attributes"], [170, "attributes"], [171, "attributes"], [172, "attributes"], [173, "attributes"], [174, "attributes"], [176, "attributes"], [177, "attributes"], [178, "attributes"], [179, "attributes"], [180, "attributes"], [181, "attributes"], [182, "attributes"], [184, "attributes"], [185, "attributes"], [186, "attributes"], [187, "attributes"], [188, "attributes"], [189, "attributes"], [190, "attributes"], [191, "attributes"], [192, "attributes"], [221, "attributes"], [285, "attributes"], [286, "attributes"], [287, "attributes"], [288, "attributes"], [289, "attributes"], [290, "attributes"], [291, "attributes"], [292, "attributes"]], "Backward Gradient Calculation": [[10, "backward-gradient-calculation"], [11, "backward-gradient-calculation"], [12, "backward-gradient-calculation"], [14, "backward-gradient-calculation"], [15, "backward-gradient-calculation"], [16, "backward-gradient-calculation"], [17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [20, "backward-gradient-calculation"], [79, "backward-gradient-calculation"], [80, "backward-gradient-calculation"], [81, "backward-gradient-calculation"], [82, "backward-gradient-calculation"], [83, "backward-gradient-calculation"], [85, "backward-gradient-calculation"], [86, "backward-gradient-calculation"], [88, "backward-gradient-calculation"], [89, "backward-gradient-calculation"], [90, "backward-gradient-calculation"], [91, "backward-gradient-calculation"], [92, "backward-gradient-calculation"], [93, "backward-gradient-calculation"], [106, "backward-gradient-calculation"], [108, "backward-gradient-calculation"], [130, "backward-gradient-calculation"], [135, "backward-gradient-calculation"], [145, "backward-gradient-calculation"], [146, "backward-gradient-calculation"], [147, "backward-gradient-calculation"], [148, "backward-gradient-calculation"], [149, "backward-gradient-calculation"], [150, "backward-gradient-calculation"], [151, "backward-gradient-calculation"], [152, "backward-gradient-calculation"], [153, "backward-gradient-calculation"], [155, "backward-gradient-calculation"], [156, "backward-gradient-calculation"], [157, "backward-gradient-calculation"], [159, "backward-gradient-calculation"], [160, "backward-gradient-calculation"], [161, "backward-gradient-calculation"], [162, "backward-gradient-calculation"], [163, "backward-gradient-calculation"], [166, "backward-gradient-calculation"], [167, "backward-gradient-calculation"], [168, "backward-gradient-calculation"], [170, "backward-gradient-calculation"], [171, "backward-gradient-calculation"], [172, "backward-gradient-calculation"], [173, "backward-gradient-calculation"], [174, "backward-gradient-calculation"], [176, "backward-gradient-calculation"], [177, "backward-gradient-calculation"], [178, "backward-gradient-calculation"], [179, "backward-gradient-calculation"], [180, "backward-gradient-calculation"], [181, "backward-gradient-calculation"], [182, "backward-gradient-calculation"], [187, "backward-gradient-calculation"], [188, "backward-gradient-calculation"], [189, "backward-gradient-calculation"], [190, "backward-gradient-calculation"], [191, "backward-gradient-calculation"], [192, "backward-gradient-calculation"], [222, "backward-gradient-calculation"], [223, "backward-gradient-calculation"], [224, "backward-gradient-calculation"], [225, "backward-gradient-calculation"], [226, "backward-gradient-calculation"], [227, "backward-gradient-calculation"], [228, "backward-gradient-calculation"], [229, "backward-gradient-calculation"], [230, "backward-gradient-calculation"], [231, "backward-gradient-calculation"], [232, "backward-gradient-calculation"], [243, "backward-gradient-calculation"], [244, "backward-gradient-calculation"], [245, "backward-gradient-calculation"], [246, "backward-gradient-calculation"], [247, "backward-gradient-calculation"], [248, "backward-gradient-calculation"], [249, "backward-gradient-calculation"], [250, "backward-gradient-calculation"], [251, "backward-gradient-calculation"], [252, "backward-gradient-calculation"], [253, "backward-gradient-calculation"], [254, "backward-gradient-calculation"], [255, "backward-gradient-calculation"], [256, "backward-gradient-calculation"], [257, "backward-gradient-calculation"], [258, "backward-gradient-calculation"], [259, "backward-gradient-calculation"], [260, "backward-gradient-calculation"], [261, "backward-gradient-calculation"], [262, "backward-gradient-calculation"], [263, "backward-gradient-calculation"], [264, "backward-gradient-calculation"], [265, "backward-gradient-calculation"], [266, "backward-gradient-calculation"], [267, "backward-gradient-calculation"], [269, "backward-gradient-calculation"], [271, "backward-gradient-calculation"], [273, "backward-gradient-calculation"], [274, "backward-gradient-calculation"], [275, "backward-gradient-calculation"], [276, "backward-gradient-calculation"], [277, "backward-gradient-calculation"], [278, "backward-gradient-calculation"], [279, "backward-gradient-calculation"], [280, "backward-gradient-calculation"], [281, "backward-gradient-calculation"], [282, "backward-gradient-calculation"]], "Behavior": [[119, "behavior"], [120, "behavior"], [121, "behavior"], [184, "behavior"], [185, "behavior"], [186, "behavior"]], "Benefits": [[211, "benefits"]], "Binary Functions": [[242, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [6, "class-signature"], [21, "class-signature"], [23, "class-signature"], [27, "class-signature"], [31, "class-signature"], [35, "class-signature"], [46, "class-signature"], [53, "class-signature"], [63, "class-signature"], [67, "class-signature"], [72, "class-signature"], [76, "class-signature"], [77, "class-signature"], [78, "class-signature"], [79, "class-signature"], [80, "class-signature"], [81, "class-signature"], [82, "class-signature"], [83, "class-signature"], [132, "class-signature"], [133, "class-signature"], [134, "class-signature"], [135, "class-signature"], [136, "class-signature"], [146, "class-signature"], [147, "class-signature"], [148, "class-signature"], [149, "class-signature"], [150, "class-signature"], [151, "class-signature"], [152, "class-signature"], [153, "class-signature"], [155, "class-signature"], [156, "class-signature"], [157, "class-signature"], [159, "class-signature"], [160, "class-signature"], [161, "class-signature"], [162, "class-signature"], [163, "class-signature"], [166, "class-signature"], [167, "class-signature"], [168, "class-signature"], [170, "class-signature"], [171, "class-signature"], [172, "class-signature"], [173, "class-signature"], [174, "class-signature"], [176, "class-signature"], [177, "class-signature"], [178, "class-signature"], [179, "class-signature"], [180, "class-signature"], [181, "class-signature"], [182, "class-signature"], [184, "class-signature"], [185, "class-signature"], [186, "class-signature"], [187, "class-signature"], [188, "class-signature"], [189, "class-signature"], [190, "class-signature"], [191, "class-signature"], [192, "class-signature"], [195, "class-signature"], [197, "class-signature"], [198, "class-signature"], [199, "class-signature"], [200, "class-signature"], [201, "class-signature"], [202, "class-signature"], [203, "class-signature"], [204, "class-signature"], [205, "class-signature"], [206, "class-signature"], [207, "class-signature"], [221, "class-signature"], [283, "class-signature"], [284, "class-signature"], [285, "class-signature"], [286, "class-signature"], [287, "class-signature"], [288, "class-signature"], [289, "class-signature"], [290, "class-signature"], [291, "class-signature"], [292, "class-signature"]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [8, "conclusion"], [194, "conclusion"], [209, "conclusion"], [210, "conclusion"], [211, "conclusion"], [220, "conclusion"], [284, "conclusion"], [294, "conclusion"]], "Containers": [[84, null]], "Conv-BatchNorm-ReLU": [[137, null]], "ConvNets": [[30, null], [74, "convnets"]], "Convolution Functions": [[97, null], [105, null]], "Convolution Layers": [[158, null], [165, null]], "Core Components": [[8, "core-components"]], "Create a Tensor from a list": [[268, null]], "Creating a Parameter": [[78, null]], "Creating a tensor with gradient tracking": [[221, null]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[294, "custom-pipelines"]], "Defining a Custom Optimizer": [[196, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[77, null]], "Defining a custom optimizer": [[195, null]], "Description": [[47, "description"], [48, "description"], [49, "description"], [50, "description"], [51, "description"], [52, "description"], [64, "description"], [65, "description"], [66, "description"], [212, "description"]], "Dropout Functions": [[104, null], [105, null]], "Dropout Layers": [[164, null], [165, null]], "Example": [[3, null], [3, null], [3, null], [10, "example"], [11, "example"], [12, "example"], [14, "example"], [15, "example"], [16, "example"], [17, "example"], [18, "example"], [19, "example"], [20, "example"], [98, "example"], [194, null], [194, null], [194, null], [209, "example"], [211, "example"], [215, "example"], [216, "example"], [217, "example"], [218, "example"], [219, "example"], [220, null], [220, null], [220, null], [233, "example"], [234, "example"], [235, "example"], [236, "example"], [237, "example"], [238, "example"], [239, "example"], [240, "example"], [241, "example"], [243, "example"], [244, "example"], [245, "example"], [246, "example"], [247, "example"], [248, "example"], [249, "example"], [250, "example"], [252, "example"], [254, "example"], [256, "example"], [257, "example"], [258, "example"], [259, "example"], [260, "example"], [261, "example"], [262, "example"], [263, "example"], [264, "example"], [265, "example"], [266, "example"], [267, "example"], [269, "example"], [271, "example"], [275, "example"], [277, "example"], [278, "example"], [279, "example"], [281, "example"], [282, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[210, null]], "Example 2: Adding a new axis to a 2D tensor": [[210, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[210, null]], "Example Usage": [[8, "example-usage"], [24, "example-usage"], [25, "example-usage"], [26, "example-usage"], [28, "example-usage"], [29, "example-usage"], [31, "example-usage"], [32, "example-usage"], [33, "example-usage"], [34, "example-usage"], [59, "example-usage"], [60, "example-usage"], [61, "example-usage"], [62, "example-usage"], [131, "example-usage"], [283, "example-usage"], [284, "example-usage"], [294, "example-usage"]], "Example Use Cases": [[213, "example-use-cases"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [6, "examples"], [9, "examples"], [21, "examples"], [22, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [45, "examples"], [47, "examples"], [48, "examples"], [49, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [64, "examples"], [65, "examples"], [66, "examples"], [67, "examples"], [68, "examples"], [69, "examples"], [70, "examples"], [71, "examples"], [72, "examples"], [73, "examples"], [75, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [79, "examples"], [80, "examples"], [81, "examples"], [82, "examples"], [83, "examples"], [85, "examples"], [86, "examples"], [88, "examples"], [89, "examples"], [90, "examples"], [91, "examples"], [92, "examples"], [93, "examples"], [94, "examples"], [95, "examples"], [96, "examples"], [99, "examples"], [100, "examples"], [101, "examples"], [102, "examples"], [103, "examples"], [106, "examples"], [108, "examples"], [109, "examples"], [110, "examples"], [111, "examples"], [113, "examples"], [114, "examples"], [115, "examples"], [117, "examples"], [118, "examples"], [119, "examples"], [120, "examples"], [121, "examples"], [122, "examples"], [123, "examples"], [124, "examples"], [126, "examples"], [127, "examples"], [128, "examples"], [130, "examples"], [132, "examples"], [133, "examples"], [134, "examples"], [135, "examples"], [136, "examples"], [138, "examples"], [140, "examples"], [141, "examples"], [142, "examples"], [143, "examples"], [144, "examples"], [145, "examples"], [146, "examples"], [147, "examples"], [148, "examples"], [149, "examples"], [150, "examples"], [151, "examples"], [152, "examples"], [153, "examples"], [155, "examples"], [156, "examples"], [157, "examples"], [159, "examples"], [160, "examples"], [161, "examples"], [162, "examples"], [163, "examples"], [166, "examples"], [167, "examples"], [168, "examples"], [170, "examples"], [171, "examples"], [172, "examples"], [173, "examples"], [174, "examples"], [176, "examples"], [177, "examples"], [178, "examples"], [179, "examples"], [180, "examples"], [181, "examples"], [182, "examples"], [184, "examples"], [185, "examples"], [186, "examples"], [187, "examples"], [188, "examples"], [189, "examples"], [190, "examples"], [191, "examples"], [192, "examples"], [195, "examples"], [196, "examples"], [197, "examples"], [198, "examples"], [199, "examples"], [200, "examples"], [201, "examples"], [202, "examples"], [203, "examples"], [204, "examples"], [205, "examples"], [206, "examples"], [207, "examples"], [212, "examples"], [221, "examples"], [222, "examples"], [223, "examples"], [224, "examples"], [225, "examples"], [227, "examples"], [228, "examples"], [229, "examples"], [230, "examples"], [231, "examples"], [232, "examples"], [251, "examples"], [253, "examples"], [255, "examples"], [268, "examples"], [270, "examples"], [273, "examples"], [274, "examples"], [276, "examples"], [280, "examples"], [285, "examples"], [286, "examples"], [287, "examples"], [288, "examples"], [289, "examples"], [290, "examples"], [291, "examples"], [292, "examples"]], "FashionMNIST": [[5, null]], "Features": [[9, "features"]], "Forward Calculation": [[10, "forward-calculation"], [11, "forward-calculation"], [12, "forward-calculation"], [14, "forward-calculation"], [15, "forward-calculation"], [16, "forward-calculation"], [17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [20, "forward-calculation"], [35, "forward-calculation"], [46, "forward-calculation"], [53, "forward-calculation"], [63, "forward-calculation"], [79, "forward-calculation"], [80, "forward-calculation"], [81, "forward-calculation"], [82, "forward-calculation"], [83, "forward-calculation"], [85, "forward-calculation"], [86, "forward-calculation"], [88, "forward-calculation"], [89, "forward-calculation"], [90, "forward-calculation"], [91, "forward-calculation"], [92, "forward-calculation"], [93, "forward-calculation"], [98, "forward-calculation"], [106, "forward-calculation"], [108, "forward-calculation"], [119, "forward-calculation"], [120, "forward-calculation"], [121, "forward-calculation"], [130, "forward-calculation"], [132, "forward-calculation"], [133, "forward-calculation"], [134, "forward-calculation"], [135, "forward-calculation"], [136, "forward-calculation"], [140, "forward-calculation"], [141, "forward-calculation"], [144, "forward-calculation"], [145, "forward-calculation"], [146, "forward-calculation"], [147, "forward-calculation"], [148, "forward-calculation"], [149, "forward-calculation"], [150, "forward-calculation"], [151, "forward-calculation"], [152, "forward-calculation"], [153, "forward-calculation"], [155, "forward-calculation"], [156, "forward-calculation"], [157, "forward-calculation"], [159, "forward-calculation"], [160, "forward-calculation"], [161, "forward-calculation"], [162, "forward-calculation"], [163, "forward-calculation"], [166, "forward-calculation"], [167, "forward-calculation"], [168, "forward-calculation"], [170, "forward-calculation"], [171, "forward-calculation"], [172, "forward-calculation"], [173, "forward-calculation"], [174, "forward-calculation"], [176, "forward-calculation"], [177, "forward-calculation"], [178, "forward-calculation"], [179, "forward-calculation"], [180, "forward-calculation"], [181, "forward-calculation"], [182, "forward-calculation"], [184, "forward-calculation"], [185, "forward-calculation"], [186, "forward-calculation"], [187, "forward-calculation"], [188, "forward-calculation"], [189, "forward-calculation"], [190, "forward-calculation"], [191, "forward-calculation"], [192, "forward-calculation"], [222, "forward-calculation"], [223, "forward-calculation"], [224, "forward-calculation"], [225, "forward-calculation"], [226, "forward-calculation"], [227, "forward-calculation"], [228, "forward-calculation"], [229, "forward-calculation"], [230, "forward-calculation"], [231, "forward-calculation"], [232, "forward-calculation"], [243, "forward-calculation"], [244, "forward-calculation"], [245, "forward-calculation"], [246, "forward-calculation"], [247, "forward-calculation"], [248, "forward-calculation"], [249, "forward-calculation"], [250, "forward-calculation"], [251, "forward-calculation"], [252, "forward-calculation"], [253, "forward-calculation"], [254, "forward-calculation"], [255, "forward-calculation"], [256, "forward-calculation"], [257, "forward-calculation"], [258, "forward-calculation"], [259, "forward-calculation"], [260, "forward-calculation"], [261, "forward-calculation"], [262, "forward-calculation"], [263, "forward-calculation"], [264, "forward-calculation"], [265, "forward-calculation"], [266, "forward-calculation"], [267, "forward-calculation"], [269, "forward-calculation"], [271, "forward-calculation"], [273, "forward-calculation"], [274, "forward-calculation"], [275, "forward-calculation"], [276, "forward-calculation"], [277, "forward-calculation"], [278, "forward-calculation"], [279, "forward-calculation"], [280, "forward-calculation"], [281, "forward-calculation"], [282, "forward-calculation"], [285, "forward-calculation"], [286, "forward-calculation"], [287, "forward-calculation"], [288, "forward-calculation"], [289, "forward-calculation"], [290, "forward-calculation"], [291, "forward-calculation"], [292, "forward-calculation"]], "Function Signature": [[10, "function-signature"], [11, "function-signature"], [12, "function-signature"], [14, "function-signature"], [15, "function-signature"], [16, "function-signature"], [17, "function-signature"], [18, "function-signature"], [19, "function-signature"], [20, "function-signature"], [22, "function-signature"], [24, "function-signature"], [25, "function-signature"], [26, "function-signature"], [28, "function-signature"], [29, "function-signature"], [32, "function-signature"], [33, "function-signature"], [34, "function-signature"], [36, "function-signature"], [37, "function-signature"], [38, "function-signature"], [39, "function-signature"], [40, "function-signature"], [41, "function-signature"], [42, "function-signature"], [43, "function-signature"], [44, "function-signature"], [45, "function-signature"], [47, "function-signature"], [48, "function-signature"], [49, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [54, "function-signature"], [55, "function-signature"], [56, "function-signature"], [57, "function-signature"], [58, "function-signature"], [59, "function-signature"], [60, "function-signature"], [61, "function-signature"], [62, "function-signature"], [64, "function-signature"], [65, "function-signature"], [66, "function-signature"], [68, "function-signature"], [69, "function-signature"], [70, "function-signature"], [71, "function-signature"], [73, "function-signature"], [75, "function-signature"], [85, "function-signature"], [86, "function-signature"], [88, "function-signature"], [89, "function-signature"], [90, "function-signature"], [91, "function-signature"], [92, "function-signature"], [93, "function-signature"], [94, "function-signature"], [95, "function-signature"], [96, "function-signature"], [98, "function-signature"], [99, "function-signature"], [100, "function-signature"], [101, "function-signature"], [102, "function-signature"], [103, "function-signature"], [106, "function-signature"], [108, "function-signature"], [109, "function-signature"], [110, "function-signature"], [111, "function-signature"], [113, "function-signature"], [114, "function-signature"], [115, "function-signature"], [117, "function-signature"], [118, "function-signature"], [119, "function-signature"], [120, "function-signature"], [121, "function-signature"], [122, "function-signature"], [123, "function-signature"], [124, "function-signature"], [126, "function-signature"], [127, "function-signature"], [128, "function-signature"], [130, "function-signature"], [131, "function-signature"], [138, "function-signature"], [140, "function-signature"], [141, "function-signature"], [142, "function-signature"], [143, "function-signature"], [144, "function-signature"], [145, "function-signature"], [209, "function-signature"], [211, "function-signature"], [212, "function-signature"], [215, "function-signature"], [216, "function-signature"], [217, "function-signature"], [218, "function-signature"], [219, "function-signature"], [222, "function-signature"], [223, "function-signature"], [224, "function-signature"], [225, "function-signature"], [226, "function-signature"], [227, "function-signature"], [228, "function-signature"], [229, "function-signature"], [230, "function-signature"], [231, "function-signature"], [232, "function-signature"], [233, "function-signature"], [234, "function-signature"], [235, "function-signature"], [236, "function-signature"], [237, "function-signature"], [238, "function-signature"], [239, "function-signature"], [240, "function-signature"], [241, "function-signature"], [243, "function-signature"], [244, "function-signature"], [245, "function-signature"], [246, "function-signature"], [247, "function-signature"], [248, "function-signature"], [249, "function-signature"], [250, "function-signature"], [251, "function-signature"], [252, "function-signature"], [253, "function-signature"], [254, "function-signature"], [255, "function-signature"], [256, "function-signature"], [257, "function-signature"], [258, "function-signature"], [259, "function-signature"], [260, "function-signature"], [261, "function-signature"], [262, "function-signature"], [263, "function-signature"], [264, "function-signature"], [265, "function-signature"], [266, "function-signature"], [267, "function-signature"], [268, "function-signature"], [269, "function-signature"], [270, "function-signature"], [271, "function-signature"], [273, "function-signature"], [274, "function-signature"], [275, "function-signature"], [276, "function-signature"], [277, "function-signature"], [278, "function-signature"], [279, "function-signature"], [280, "function-signature"], [281, "function-signature"], [282, "function-signature"]], "Fused Layers": [[137, null]], "Future Work": [[4, "future-work"]], "Getting Started": [[196, "getting-started"]], "How It Works": [[209, "how-it-works"], [211, "how-it-works"]], "Image Datasets": [[7, null]], "Image Transformations": [[293, null]], "Inception": [[23, null]], "InceptionResNet": [[27, null]], "Indexing and slicing": [[221, null]], "Inspecting Optimizer State": [[196, null], [197, null], [198, null], [199, null], [200, null], [201, null], [202, null], [203, null], [204, null], [205, null], [206, null], [207, null]], "Integration with lucid": [[3, "integration-with-lucid"], [194, "integration-with-lucid"], [220, "integration-with-lucid"], [294, "integration-with-lucid"]], "Iterating through a tensor": [[221, null]], "Key Components": [[3, "key-components"], [194, "key-components"]], "Key Features": [[4, "key-features"], [8, "key-features"], [59, "key-features"], [60, "key-features"], [61, "key-features"], [62, "key-features"], [196, "key-features"], [220, "key-features"]], "Key Transformations": [[294, "key-transformations"]], "LeNet": [[31, null]], "Learn More": [[220, null]], "Limitations": [[8, "limitations"]], "Linear Algebra Operations": [[13, null]], "Linear Functions": [[105, null], [107, null]], "Linear Layers": [[165, null], [169, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[105, null], [112, null]], "Loss Layers": [[165, null], [175, null]], "Lucid": [[8, null]], "MNIST": [[6, null]], "Matrix Multiplication Rules": [[226, "matrix-multiplication-rules"]], "Metadata Captured": [[212, "metadata-captured"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [6, "methods"], [27, "methods"], [31, "methods"], [67, "methods"], [77, "methods"], [78, "methods"], [195, "methods"], [221, "methods"]], "Modules": [[165, null]], "Normalization Functions": [[105, null], [116, null]], "Normalization Layers": [[165, null], [183, null]], "Notes": [[8, "notes"]], "Optimizers": [[208, null]], "Organizing Models": [[194, "organizing-models"]], "Overview": [[3, "overview"], [4, "overview"], [8, "overview"], [23, "overview"], [24, "overview"], [25, "overview"], [26, "overview"], [27, "overview"], [28, "overview"], [29, "overview"], [31, "overview"], [32, "overview"], [33, "overview"], [34, "overview"], [36, "overview"], [37, "overview"], [38, "overview"], [39, "overview"], [40, "overview"], [41, "overview"], [42, "overview"], [43, "overview"], [54, "overview"], [55, "overview"], [56, "overview"], [57, "overview"], [58, "overview"], [194, "overview"], [196, "overview"], [220, "overview"], [294, "overview"]], "Parameters": [[1, "parameters"], [5, "parameters"], [6, "parameters"], [10, "parameters"], [11, "parameters"], [12, "parameters"], [14, "parameters"], [15, "parameters"], [16, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [20, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [31, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [75, "parameters"], [76, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [85, "parameters"], [86, "parameters"], [88, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [106, "parameters"], [108, "parameters"], [109, "parameters"], [110, "parameters"], [111, "parameters"], [113, "parameters"], [114, "parameters"], [115, "parameters"], [117, "parameters"], [118, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [122, "parameters"], [123, "parameters"], [124, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"], [138, "parameters"], [140, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [155, "parameters"], [156, "parameters"], [157, "parameters"], [159, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [163, "parameters"], [166, "parameters"], [167, "parameters"], [168, "parameters"], [170, "parameters"], [171, "parameters"], [172, "parameters"], [173, "parameters"], [174, "parameters"], [176, "parameters"], [177, "parameters"], [178, "parameters"], [179, "parameters"], [180, "parameters"], [181, "parameters"], [182, "parameters"], [184, "parameters"], [185, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [189, "parameters"], [190, "parameters"], [191, "parameters"], [192, "parameters"], [197, "parameters"], [198, "parameters"], [199, "parameters"], [200, "parameters"], [201, "parameters"], [202, "parameters"], [203, "parameters"], [204, "parameters"], [205, "parameters"], [206, "parameters"], [207, "parameters"], [211, "parameters"], [212, "parameters"], [215, "parameters"], [216, "parameters"], [217, "parameters"], [218, "parameters"], [219, "parameters"], [221, "parameters"], [222, "parameters"], [223, "parameters"], [224, "parameters"], [225, "parameters"], [226, "parameters"], [227, "parameters"], [228, "parameters"], [229, "parameters"], [230, "parameters"], [231, "parameters"], [232, "parameters"], [233, "parameters"], [234, "parameters"], [235, "parameters"], [236, "parameters"], [237, "parameters"], [238, "parameters"], [239, "parameters"], [240, "parameters"], [241, "parameters"], [243, "parameters"], [244, "parameters"], [245, "parameters"], [246, "parameters"], [247, "parameters"], [248, "parameters"], [249, "parameters"], [250, "parameters"], [251, "parameters"], [252, "parameters"], [253, "parameters"], [254, "parameters"], [255, "parameters"], [256, "parameters"], [257, "parameters"], [258, "parameters"], [259, "parameters"], [260, "parameters"], [261, "parameters"], [262, "parameters"], [263, "parameters"], [264, "parameters"], [265, "parameters"], [266, "parameters"], [267, "parameters"], [268, "parameters"], [269, "parameters"], [270, "parameters"], [271, "parameters"], [273, "parameters"], [274, "parameters"], [275, "parameters"], [276, "parameters"], [277, "parameters"], [278, "parameters"], [279, "parameters"], [280, "parameters"], [281, "parameters"], [282, "parameters"], [283, "parameters"], [284, "parameters"], [285, "parameters"], [286, "parameters"], [287, "parameters"], [288, "parameters"], [289, "parameters"], [290, "parameters"], [291, "parameters"], [292, "parameters"]], "Performing backpropagation": [[221, null]], "Pooling Functions": [[105, null], [125, null]], "Pooling Layers": [[165, null], [193, null]], "Potential Pitfalls": [[209, "potential-pitfalls"], [211, "potential-pitfalls"]], "Properties": [[78, "properties"], [221, "properties"]], "Raises": [[10, "raises"], [11, "raises"], [12, "raises"], [14, "raises"], [15, "raises"], [16, "raises"], [17, "raises"], [18, "raises"], [19, "raises"], [20, "raises"]], "Random Number Generations": [[214, null]], "References": [[5, "references"], [6, "references"], [135, "references"], [196, "references"]], "ResNeXt": [[46, null]], "ResNet": [[35, null]], "Returns": [[10, "returns"], [11, "returns"], [12, "returns"], [14, "returns"], [15, "returns"], [16, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [20, "returns"], [22, "returns"], [24, "returns"], [25, "returns"], [26, "returns"], [28, "returns"], [29, "returns"], [32, "returns"], [33, "returns"], [34, "returns"], [36, "returns"], [37, "returns"], [38, "returns"], [39, "returns"], [40, "returns"], [41, "returns"], [42, "returns"], [43, "returns"], [44, "returns"], [45, "returns"], [47, "returns"], [48, "returns"], [49, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [54, "returns"], [55, "returns"], [56, "returns"], [57, "returns"], [58, "returns"], [59, "returns"], [60, "returns"], [61, "returns"], [62, "returns"], [64, "returns"], [65, "returns"], [66, "returns"], [68, "returns"], [69, "returns"], [70, "returns"], [71, "returns"], [73, "returns"], [75, "returns"], [85, "returns"], [86, "returns"], [88, "returns"], [89, "returns"], [90, "returns"], [91, "returns"], [92, "returns"], [93, "returns"], [94, "returns"], [95, "returns"], [96, "returns"], [98, "returns"], [99, "returns"], [100, "returns"], [101, "returns"], [102, "returns"], [103, "returns"], [106, "returns"], [108, "returns"], [109, "returns"], [110, "returns"], [111, "returns"], [113, "returns"], [114, "returns"], [115, "returns"], [117, "returns"], [118, "returns"], [119, "returns"], [120, "returns"], [121, "returns"], [122, "returns"], [123, "returns"], [124, "returns"], [126, "returns"], [127, "returns"], [128, "returns"], [130, "returns"], [131, "returns"], [136, "returns"], [138, "returns"], [140, "returns"], [141, "returns"], [142, "returns"], [143, "returns"], [144, "returns"], [145, "returns"], [209, "returns"], [211, "returns"], [215, "returns"], [216, "returns"], [217, "returns"], [218, "returns"], [219, "returns"], [222, "returns"], [223, "returns"], [224, "returns"], [225, "returns"], [226, "returns"], [227, "returns"], [228, "returns"], [229, "returns"], [230, "returns"], [231, "returns"], [232, "returns"], [233, "returns"], [234, "returns"], [235, "returns"], [236, "returns"], [237, "returns"], [238, "returns"], [239, "returns"], [240, "returns"], [241, "returns"], [243, "returns"], [244, "returns"], [245, "returns"], [246, "returns"], [247, "returns"], [248, "returns"], [249, "returns"], [250, "returns"], [251, "returns"], [252, "returns"], [253, "returns"], [254, "returns"], [255, "returns"], [256, "returns"], [257, "returns"], [258, "returns"], [259, "returns"], [260, "returns"], [261, "returns"], [262, "returns"], [263, "returns"], [264, "returns"], [265, "returns"], [266, "returns"], [267, "returns"], [268, "returns"], [269, "returns"], [270, "returns"], [271, "returns"], [273, "returns"], [274, "returns"], [275, "returns"], [276, "returns"], [277, "returns"], [278, "returns"], [279, "returns"], [280, "returns"], [281, "returns"], [282, "returns"]], "SENet": [[53, null]], "SKNet": [[63, null]], "See Also": [[196, "see-also"]], "Selective Kernel": [[137, null]], "Squeeze-and-Excitation": [[137, null]], "Summary Table": [[75, "summary-table"]], "Tensor Generating Functions": [[242, null]], "Tensor Operations": [[242, null]], "Tensor Utilites": [[272, null]], "Type Definitions": [[213, "type-definitions"]], "Unary Functions": [[242, null]], "Usage": [[4, "usage"], [76, "usage"], [131, "usage"], [209, "usage"], [210, "usage"], [211, "usage"], [273, "usage"], [283, "usage"], [284, "usage"], [294, "usage"]], "Use another Tensor as input": [[268, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using the ASGD Optimizer": [[197, null]], "Using the Adadelta Optimizer": [[198, null]], "Using the Adagrad Optimizer": [[199, null]], "Using the Adam Optimizer": [[200, null]], "Using the AdamW Optimizer": [[201, null]], "Using the Adamax Optimizer": [[202, null]], "Using the NAdam Optimizer": [[203, null]], "Using the RAdam Optimizer": [[204, null]], "Using the RMSprop Optimizer": [[205, null]], "Using the Rprop Optimizer": [[206, null]], "Using the SGD Optimizer": [[207, null]], "Utility Functions": [[105, null], [129, null]], "VGGNet": [[67, null]], "Weight Initializations": [[139, null]], "Why Use Type Aliases?": [[213, null]], "ZFNet": [[72, null]], "activation Functions": [[105, null]], "alexnet": [[22, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "inception_resnet_v1": [[28, null]], "inception_resnet_v2": [[29, null]], "inception_v1": [[24, null]], "inception_v3": [[25, null]], "inception_v4": [[26, null]], "lenet_1": [[32, null]], "lenet_4": [[33, null]], "lenet_5": [[34, null]], "lucid.Tensor": [[221, null]], "lucid.abs": [[243, null]], "lucid.add": [[222, null]], "lucid.arange": [[233, null]], "lucid.arccos": [[244, null]], "lucid.arcsin": [[245, null]], "lucid.arctan": [[246, null]], "lucid.clip": [[247, null]], "lucid.concatenate": [[269, null]], "lucid.cos": [[248, null]], "lucid.cosh": [[249, null]], "lucid.cube": [[250, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[234, null]], "lucid.div": [[223, null]], "lucid.dot": [[224, null]], "lucid.empty": [[235, null]], "lucid.empty_like": [[236, null]], "lucid.exp": [[251, null]], "lucid.eye": [[237, null]], "lucid.flatten": [[270, null]], "lucid.grad_enabled": [[209, null]], "lucid.hstack": [[271, null]], "lucid.inner": [[225, null]], "lucid.linalg": [[9, null]], "lucid.linalg.cholesky": [[10, null]], "lucid.linalg.det": [[11, null]], "lucid.linalg.eig": [[12, null]], "lucid.linalg.inv": [[14, null]], "lucid.linalg.matrix_power": [[15, null]], "lucid.linalg.norm": [[16, null]], "lucid.linalg.pinv": [[17, null]], "lucid.linalg.qr": [[18, null]], "lucid.linalg.solve": [[19, null]], "lucid.linalg.svd": [[20, null]], "lucid.log": [[252, null]], "lucid.matmul": [[226, null]], "lucid.max": [[253, null]], "lucid.maximum": [[227, null]], "lucid.mean": [[254, null]], "lucid.meshgrid": [[273, null]], "lucid.min": [[255, null]], "lucid.minimum": [[228, null]], "lucid.models": [[74, null]], "lucid.mul": [[229, null]], "lucid.newaxis": [[210, null]], "lucid.nn": [[194, null]], "lucid.nn.functional": [[105, null]], "lucid.no_grad": [[211, null]], "lucid.ones": [[238, null]], "lucid.ones_like": [[239, null]], "lucid.optim": [[196, null]], "lucid.outer": [[230, null]], "lucid.pad": [[274, null]], "lucid.power": [[231, null]], "lucid.random": [[220, null]], "lucid.random.rand": [[215, null]], "lucid.random.randint": [[216, null]], "lucid.random.randn": [[217, null]], "lucid.random.seed": [[218, null]], "lucid.random.uniform": [[219, null]], "lucid.ravel": [[275, null]], "lucid.reciprocal": [[256, null]], "lucid.register_model": [[212, null]], "lucid.repeat": [[276, null]], "lucid.reshape": [[277, null]], "lucid.sign": [[257, null]], "lucid.sin": [[258, null]], "lucid.sinh": [[259, null]], "lucid.sqrt": [[260, null]], "lucid.square": [[261, null]], "lucid.squeeze": [[278, null]], "lucid.stack": [[279, null]], "lucid.sub": [[232, null]], "lucid.sum": [[262, null]], "lucid.tan": [[263, null]], "lucid.tanh": [[264, null]], "lucid.tensor": [[268, null]], "lucid.tile": [[280, null]], "lucid.trace": [[265, null]], "lucid.transforms": [[294, null]], "lucid.transpose": [[266, null]], "lucid.types": [[213, null]], "lucid.unsqueeze": [[281, null]], "lucid.var": [[267, null]], "lucid.vstack": [[282, null]], "lucid.zeros": [[240, null]], "lucid.zeros_like": [[241, null]], "models.sk_resnet_18": [[64, null]], "models.sk_resnet_34": [[65, null]], "models.sk_resnet_50": [[66, null]], "models.summarize": [[75, null]], "nn.AdaptiveAvgPool1d": [[184, null]], "nn.AdaptiveAvgPool2d": [[185, null]], "nn.AdaptiveAvgPool3d": [[186, null]], "nn.AlphaDropout": [[159, null]], "nn.AvgPool1d": [[187, null]], "nn.AvgPool2d": [[188, null]], "nn.AvgPool3d": [[189, null]], "nn.BCELoss": [[170, null]], "nn.BatchNorm1d": [[176, null]], "nn.BatchNorm2d": [[177, null]], "nn.BatchNorm3d": [[178, null]], "nn.Bilinear": [[166, null]], "nn.Buffer": [[76, null]], "nn.Conv1d": [[155, null]], "nn.Conv2d": [[156, null]], "nn.Conv3d": [[157, null]], "nn.ConvBNReLU1d": [[132, null]], "nn.ConvBNReLU2d": [[133, null]], "nn.ConvBNReLU3d": [[134, null]], "nn.CrossEntropyLoss": [[171, null]], "nn.Dropout": [[160, null]], "nn.Dropout1d": [[161, null]], "nn.Dropout2d": [[162, null]], "nn.Dropout3d": [[163, null]], "nn.ELU": [[146, null]], "nn.GELU": [[147, null]], "nn.HuberLoss": [[172, null]], "nn.Identity": [[167, null]], "nn.InstanceNorm1d": [[179, null]], "nn.InstanceNorm2d": [[180, null]], "nn.InstanceNorm3d": [[181, null]], "nn.LayerNorm": [[182, null]], "nn.LeakyReLU": [[148, null]], "nn.Linear": [[168, null]], "nn.MSELoss": [[173, null]], "nn.MaxPool1d": [[190, null]], "nn.MaxPool2d": [[191, null]], "nn.MaxPool3d": [[192, null]], "nn.Module": [[77, null]], "nn.ModuleDict": [[79, null]], "nn.ModuleList": [[80, null]], "nn.NLLLoss": [[174, null]], "nn.Parameter": [[78, null]], "nn.ParameterDict": [[81, null]], "nn.ParameterList": [[82, null]], "nn.ReLU": [[149, null]], "nn.SELU": [[150, null]], "nn.SEModule": [[135, null]], "nn.SelectiveKernel": [[136, null]], "nn.Sequential": [[83, null]], "nn.Sigmoid": [[151, null]], "nn.Softmax": [[152, null]], "nn.Tanh": [[153, null]], "nn.functional.adaptive_avg_pool1d": [[119, null]], "nn.functional.adaptive_avg_pool2d": [[120, null]], "nn.functional.adaptive_avg_pool3d": [[121, null]], "nn.functional.alpha_dropout": [[99, null]], "nn.functional.avg_pool1d": [[122, null]], "nn.functional.avg_pool2d": [[123, null]], "nn.functional.avg_pool3d": [[124, null]], "nn.functional.batch_norm": [[115, null]], "nn.functional.bilinear": [[106, null]], "nn.functional.binary_cross_entropy": [[109, null]], "nn.functional.conv1d": [[94, null]], "nn.functional.conv2d": [[95, null]], "nn.functional.conv3d": [[96, null]], "nn.functional.cross_entropy": [[110, null]], "nn.functional.dropout": [[100, null]], "nn.functional.dropout1d": [[101, null]], "nn.functional.dropout2d": [[102, null]], "nn.functional.dropout3d": [[103, null]], "nn.functional.elu": [[85, null]], "nn.functional.gelu": [[86, null]], "nn.functional.huber_loss": [[111, null]], "nn.functional.instance_norm": [[117, null]], "nn.functional.interpolate": [[130, null]], "nn.functional.layer_norm": [[118, null]], "nn.functional.leaky_relu": [[88, null]], "nn.functional.linear": [[108, null]], "nn.functional.max_pool1d": [[126, null]], "nn.functional.max_pool2d": [[127, null]], "nn.functional.max_pool3d": [[128, null]], "nn.functional.mse_loss": [[113, null]], "nn.functional.nll_loss": [[114, null]], "nn.functional.relu": [[89, null]], "nn.functional.rotate": [[131, null]], "nn.functional.selu": [[90, null]], "nn.functional.sigmoid": [[91, null]], "nn.functional.softmax": [[92, null]], "nn.functional.tanh": [[93, null]], "nn.functional.unfold": [[98, null]], "nn.init.constant": [[138, null]], "nn.init.kaiming_normal": [[140, null]], "nn.init.kaiming_uniform": [[141, null]], "nn.init.normal": [[142, null]], "nn.init.uniform": [[143, null]], "nn.init.xavier_normal": [[144, null]], "nn.init.xavier_uniform": [[145, null]], "optim.ASGD": [[197, null]], "optim.Adadelta": [[198, null]], "optim.Adagrad": [[199, null]], "optim.Adam": [[200, null]], "optim.AdamW": [[201, null]], "optim.Adamax": [[202, null]], "optim.NAdam": [[203, null]], "optim.Optimizer": [[195, null]], "optim.RAdam": [[204, null]], "optim.RMSprop": [[205, null]], "optim.Rprop": [[206, null]], "optim.SGD": [[207, null]], "resnet_1001": [[36, null]], "resnet_101": [[37, null]], "resnet_152": [[38, null]], "resnet_18": [[39, null]], "resnet_200": [[40, null]], "resnet_269": [[41, null]], "resnet_34": [[42, null]], "resnet_50": [[43, null]], "resnext_101_32x16d": [[47, null]], "resnext_101_32x32d": [[48, null]], "resnext_101_32x4d": [[49, null]], "resnext_101_32x8d": [[50, null]], "resnext_101_64x4d": [[51, null]], "resnext_50_32x4d": [[52, null]], "se_resnet_101": [[54, null]], "se_resnet_152": [[55, null]], "se_resnet_18": [[56, null]], "se_resnet_34": [[57, null]], "se_resnet_50": [[58, null]], "se_resnext_101_32x4d": [[59, null]], "se_resnext_101_32x8d": [[60, null]], "se_resnext_101_64x4d": [[61, null]], "se_resnext_50_32x4d": [[62, null]], "transforms.CenterCrop": [[285, null]], "transforms.Compose": [[283, null]], "transforms.Normalize": [[286, null]], "transforms.RandomCrop": [[287, null]], "transforms.RandomGrayscale": [[288, null]], "transforms.RandomHorizontalFlip": [[289, null]], "transforms.RandomRotation": [[290, null]], "transforms.RandomVerticalFlip": [[291, null]], "transforms.Resize": [[292, null]], "transforms.ToTensor": [[284, null]], "vggnet_11": [[68, null]], "vggnet_13": [[69, null]], "vggnet_16": [[70, null]], "vggnet_19": [[71, null]], "wide_resnet_101": [[44, null]], "wide_resnet_50": [[45, null]], "zfnet": [[73, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/FashionMNIST", "datasets/image/MNIST", "datasets/image/index", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/conv/alex/AlexNet", "models/conv/alex/alexnet", "models/conv/inception/Inception", "models/conv/inception/inception_v1", "models/conv/inception/inception_v3", "models/conv/inception/inception_v4", "models/conv/inception_res/InceptionResNet", "models/conv/inception_res/inception_resnet_v1", "models/conv/inception_res/inception_resnet_v2", "models/conv/index", "models/conv/lenet/LeNet", "models/conv/lenet/lenet_1", "models/conv/lenet/lenet_4", "models/conv/lenet/lenet_5", "models/conv/resnet/ResNet", "models/conv/resnet/resnet_1001", "models/conv/resnet/resnet_101", "models/conv/resnet/resnet_152", "models/conv/resnet/resnet_18", "models/conv/resnet/resnet_200", "models/conv/resnet/resnet_269", "models/conv/resnet/resnet_34", "models/conv/resnet/resnet_50", "models/conv/resnet/wide_resnet_101", "models/conv/resnet/wide_resnet_50", "models/conv/resnext/ResNeXt", "models/conv/resnext/resnext_101_32x16d", "models/conv/resnext/resnext_101_32x32d", "models/conv/resnext/resnext_101_32x4d", "models/conv/resnext/resnext_101_32x8d", "models/conv/resnext/resnext_101_64x4d", "models/conv/resnext/resnext_50_32x4d", "models/conv/senet/SENet", "models/conv/senet/se_resnet_101", "models/conv/senet/se_resnet_152", "models/conv/senet/se_resnet_18", "models/conv/senet/se_resnet_34", "models/conv/senet/se_resnet_50", "models/conv/senet/se_resnext_101_32x4d", "models/conv/senet/se_resnext_101_32x8d", "models/conv/senet/se_resnext_101_64x4d", "models/conv/senet/se_resnext_50_32x4d", "models/conv/sknet/SKNet", "models/conv/sknet/sk_resnet_18", "models/conv/sknet/sk_resnet_34", "models/conv/sknet/sk_resnet_50", "models/conv/vgg/VGGNet", "models/conv/vgg/vggnet_11", "models/conv/vgg/vggnet_13", "models/conv/vgg/vggnet_16", "models/conv/vgg/vggnet_19", "models/conv/zfnet/ZFNet", "models/conv/zfnet/zfnet", "models/models", "models/summarize", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/fused/ConvBNReLU1d", "nn/fused/ConvBNReLU2d", "nn/fused/ConvBNReLU3d", "nn/fused/SEModule", "nn/fused/SelectiveKernel", "nn/fused/index", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/nn", "optim/Optimizer", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "others/types", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/meshgrid", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/FashionMNIST.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/conv/alex/AlexNet.rst", "models/conv/alex/alexnet.rst", "models/conv/inception/Inception.rst", "models/conv/inception/inception_v1.rst", "models/conv/inception/inception_v3.rst", "models/conv/inception/inception_v4.rst", "models/conv/inception_res/InceptionResNet.rst", "models/conv/inception_res/inception_resnet_v1.rst", "models/conv/inception_res/inception_resnet_v2.rst", "models/conv/index.rst", "models/conv/lenet/LeNet.rst", "models/conv/lenet/lenet_1.rst", "models/conv/lenet/lenet_4.rst", "models/conv/lenet/lenet_5.rst", "models/conv/resnet/ResNet.rst", "models/conv/resnet/resnet_1001.rst", "models/conv/resnet/resnet_101.rst", "models/conv/resnet/resnet_152.rst", "models/conv/resnet/resnet_18.rst", "models/conv/resnet/resnet_200.rst", "models/conv/resnet/resnet_269.rst", "models/conv/resnet/resnet_34.rst", "models/conv/resnet/resnet_50.rst", "models/conv/resnet/wide_resnet_101.rst", "models/conv/resnet/wide_resnet_50.rst", "models/conv/resnext/ResNeXt.rst", "models/conv/resnext/resnext_101_32x16d.rst", "models/conv/resnext/resnext_101_32x32d.rst", "models/conv/resnext/resnext_101_32x4d.rst", "models/conv/resnext/resnext_101_32x8d.rst", "models/conv/resnext/resnext_101_64x4d.rst", "models/conv/resnext/resnext_50_32x4d.rst", "models/conv/senet/SENet.rst", "models/conv/senet/se_resnet_101.rst", "models/conv/senet/se_resnet_152.rst", "models/conv/senet/se_resnet_18.rst", "models/conv/senet/se_resnet_34.rst", "models/conv/senet/se_resnet_50.rst", "models/conv/senet/se_resnext_101_32x4d.rst", "models/conv/senet/se_resnext_101_32x8d.rst", "models/conv/senet/se_resnext_101_64x4d.rst", "models/conv/senet/se_resnext_50_32x4d.rst", "models/conv/sknet/SKNet.rst", "models/conv/sknet/sk_resnet_18.rst", "models/conv/sknet/sk_resnet_34.rst", "models/conv/sknet/sk_resnet_50.rst", "models/conv/vgg/VGGNet.rst", "models/conv/vgg/vggnet_11.rst", "models/conv/vgg/vggnet_13.rst", "models/conv/vgg/vggnet_16.rst", "models/conv/vgg/vggnet_19.rst", "models/conv/zfnet/ZFNet.rst", "models/conv/zfnet/zfnet.rst", "models/models.rst", "models/summarize.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/fused/ConvBNReLU1d.rst", "nn/fused/ConvBNReLU2d.rst", "nn/fused/ConvBNReLU3d.rst", "nn/fused/SEModule.rst", "nn/fused/SelectiveKernel.rst", "nn/fused/index.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "others/types.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"abs() (in module lucid)": [[243, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[198, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[199, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[200, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[202, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[201, "lucid.optim.AdamW", false]], "adaptive_avg_pool1d() (in module lucid.nn.functional)": [[119, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[120, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[121, "lucid.nn.functional.adaptive_avg_pool3d", false]], "adaptiveavgpool1d (class in lucid.nn)": [[184, "lucid.nn.AdaptiveAvgPool1d", false]], "adaptiveavgpool2d (class in lucid.nn)": [[185, "lucid.nn.AdaptiveAvgPool2d", false]], "adaptiveavgpool3d (class in lucid.nn)": [[186, "lucid.nn.AdaptiveAvgPool3d", false]], "add() (in module lucid)": [[222, "lucid.add", false]], "alexnet (class in lucid.models)": [[21, "lucid.models.AlexNet", false]], "alexnet() (in module lucid.models)": [[22, "lucid.models.alexnet", false]], "alpha_dropout() (in module lucid.nn.functional)": [[99, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[159, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[233, "lucid.arange", false]], "arccos() (in module lucid)": [[244, "lucid.arccos", false]], "arcsin() (in module lucid)": [[245, "lucid.arcsin", false]], "arctan() (in module lucid)": [[246, "lucid.arctan", false]], "asgd (class in lucid.optim)": [[197, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[122, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[123, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[124, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[187, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[188, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[189, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[115, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[176, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[177, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[178, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[170, "lucid.nn.BCELoss", false]], "bilinear (class in lucid.nn)": [[166, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[106, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[109, "lucid.nn.functional.binary_cross_entropy", false]], "buffer (class in lucid.nn)": [[76, "lucid.nn.Buffer", false]], "centercrop (class in lucid.transforms)": [[285, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[10, "lucid.linalg.cholesky", false]], "clip() (in module lucid)": [[247, "lucid.clip", false]], "compose (class in lucid.transforms)": [[283, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[269, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[138, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[155, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[94, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[156, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[95, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[157, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[96, "lucid.nn.functional.conv3d", false]], "convbnrelu1d (class in lucid.nn)": [[132, "lucid.nn.ConvBNReLU1d", false]], "convbnrelu2d (class in lucid.nn)": [[133, "lucid.nn.ConvBNReLU2d", false]], "convbnrelu3d (class in lucid.nn)": [[134, "lucid.nn.ConvBNReLU3d", false]], "cos() (in module lucid)": [[248, "lucid.cos", false]], "cosh() (in module lucid)": [[249, "lucid.cosh", false]], "cross_entropy() (in module lucid.nn.functional)": [[110, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[171, "lucid.nn.CrossEntropyLoss", false]], "cube() (in module lucid)": [[250, "lucid.cube", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "det() (in module lucid.linalg)": [[11, "lucid.linalg.det", false]], "diag() (in module lucid)": [[234, "lucid.diag", false]], "div() (in module lucid)": [[223, "lucid.div", false]], "dot() (in module lucid)": [[224, "lucid.dot", false]], "dropout (class in lucid.nn)": [[160, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[100, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[161, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[101, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[162, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[102, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[163, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[103, "lucid.nn.functional.dropout3d", false]], "eig() (in module lucid.linalg)": [[12, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[146, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[85, "lucid.nn.functional.elu", false]], "empty() (in module lucid)": [[235, "lucid.empty", false]], "empty_like() (in module lucid)": [[236, "lucid.empty_like", false]], "exp() (in module lucid)": [[251, "lucid.exp", false]], "eye() (in module lucid)": [[237, "lucid.eye", false]], "fashionmnist (class in lucid.datasets)": [[5, "lucid.datasets.FashionMNIST", false]], "flatten() (in module lucid)": [[270, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[147, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[86, "lucid.nn.functional.gelu", false]], "grad_enabled() (in module lucid)": [[209, "lucid.grad_enabled", false]], "hstack() (in module lucid)": [[271, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[111, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[172, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[167, "lucid.nn.Identity", false]], "inception (class in lucid.models)": [[23, "lucid.models.Inception", false]], "inception_resnet_v1() (in module lucid.models)": [[28, "lucid.models.inception_resnet_v1", false]], "inception_resnet_v2() (in module lucid.models)": [[29, "lucid.models.inception_resnet_v2", false]], "inception_v1() (in module lucid.models)": [[24, "lucid.models.inception_v1", false]], "inception_v3() (in module lucid.models)": [[25, "lucid.models.inception_v3", false]], "inception_v4() (in module lucid.models)": [[26, "lucid.models.inception_v4", false]], "inceptionresnet (class in lucid.models)": [[27, "lucid.models.InceptionResNet", false]], "inner() (in module lucid)": [[225, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[117, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[179, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[180, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[181, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[130, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[14, "lucid.linalg.inv", false]], "kaiming_normal() (in module lucid.nn.init)": [[140, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[141, "lucid.nn.init.kaiming_uniform", false]], "layer_norm() (in module lucid.nn.functional)": [[118, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[182, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[88, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[148, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[31, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[32, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[33, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[34, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[168, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[108, "lucid.nn.functional.linear", false]], "log() (in module lucid)": [[252, "lucid.log", false]], "lucid": [[8, "module-lucid", false]], "matmul() (in module lucid)": [[226, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[15, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[253, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[126, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[127, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[128, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[227, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[190, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[191, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[192, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[254, "lucid.mean", false]], "meshgrid() (in module lucid)": [[273, "lucid.meshgrid", false]], "min() (in module lucid)": [[255, "lucid.min", false]], "minimum() (in module lucid)": [[228, "lucid.minimum", false]], "mnist (class in lucid.datasets)": [[6, "lucid.datasets.MNIST", false]], "module": [[8, "module-lucid", false]], "module (class in lucid.nn)": [[77, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[79, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[80, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[113, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[173, "lucid.nn.MSELoss", false]], "mul() (in module lucid)": [[229, "lucid.mul", false]], "nadam (class in lucid.optim)": [[203, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[114, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[174, "lucid.nn.NLLLoss", false]], "no_grad() (in module lucid)": [[211, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[16, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[142, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[286, "lucid.transforms.Normalize", false]], "ones() (in module lucid)": [[238, "lucid.ones", false]], "ones_like() (in module lucid)": [[239, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[195, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[230, "lucid.outer", false]], "pad() (in module lucid)": [[274, "lucid.pad", false]], "parameter (class in lucid.nn)": [[78, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[81, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[82, "lucid.nn.ParameterList", false]], "pinv() (in module lucid.linalg)": [[17, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[231, "lucid.power", false]], "qr() (in module lucid.linalg)": [[18, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[204, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[215, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[216, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[217, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[287, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[288, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[289, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[290, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[291, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[275, "lucid.ravel", false]], "reciprocal() (in module lucid)": [[256, "lucid.reciprocal", false]], "register_model() (in module lucid)": [[212, "lucid.register_model", false]], "relu (class in lucid.nn)": [[149, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[89, "lucid.nn.functional.relu", false]], "repeat() (in module lucid)": [[276, "lucid.repeat", false]], "reshape() (in module lucid)": [[277, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[292, "lucid.transforms.Resize", false]], "resnet (class in lucid.models)": [[35, "lucid.models.ResNet", false]], "resnet_1001() (in module lucid.models)": [[36, "lucid.models.resnet_1001", false]], "resnet_101() (in module lucid.models)": [[37, "lucid.models.resnet_101", false]], "resnet_152() (in module lucid.models)": [[38, "lucid.models.resnet_152", false]], "resnet_18() (in module lucid.models)": [[39, "lucid.models.resnet_18", false]], "resnet_200() (in module lucid.models)": [[40, "lucid.models.resnet_200", false]], "resnet_269() (in module lucid.models)": [[41, "lucid.models.resnet_269", false]], "resnet_34() (in module lucid.models)": [[42, "lucid.models.resnet_34", false]], "resnet_50() (in module lucid.models)": [[43, "lucid.models.resnet_50", false]], "resnext (class in lucid.models)": [[46, "lucid.models.ResNeXt", false]], "resnext_101_32x16d() (in module lucid.models)": [[47, "lucid.models.resnext_101_32x16d", false]], "resnext_101_32x32d() (in module lucid.models)": [[48, "lucid.models.resnext_101_32x32d", false]], "resnext_101_32x4d() (in module lucid.models)": [[49, "lucid.models.resnext_101_32x4d", false]], "resnext_101_32x8d() (in module lucid.models)": [[50, "lucid.models.resnext_101_32x8d", false]], "resnext_101_64x4d() (in module lucid.models)": [[51, "lucid.models.resnext_101_64x4d", false]], "resnext_50_32x4d() (in module lucid.models)": [[52, "lucid.models.resnext_50_32x4d", false]], "rmsprop (class in lucid.optim)": [[205, "lucid.optim.RMSprop", false]], "rotate() (in module lucid.nn.functional)": [[131, "lucid.nn.functional.rotate", false]], "rprop (class in lucid.optim)": [[206, "lucid.optim.Rprop", false]], "se_resnet_101() (in module lucid.models)": [[54, "lucid.models.se_resnet_101", false]], "se_resnet_152() (in module lucid.models)": [[55, "lucid.models.se_resnet_152", false]], "se_resnet_18() (in module lucid.models)": [[56, "lucid.models.se_resnet_18", false]], "se_resnet_34() (in module lucid.models)": [[57, "lucid.models.se_resnet_34", false]], "se_resnet_50() (in module lucid.models)": [[58, "lucid.models.se_resnet_50", false]], "se_resnext_101_32x4d() (in module lucid.models)": [[59, "lucid.models.se_resnext_101_32x4d", false]], "se_resnext_101_32x8d() (in module lucid.models)": [[60, "lucid.models.se_resnext_101_32x8d", false]], "se_resnext_101_64x4d() (in module lucid.models)": [[61, "lucid.models.se_resnext_101_64x4d", false]], "se_resnext_50_32x4d() (in module lucid.models)": [[62, "lucid.models.se_resnext_50_32x4d", false]], "seed() (in module lucid.random)": [[218, "lucid.random.seed", false]], "selectivekernel (class in lucid.nn)": [[136, "lucid.nn.SelectiveKernel", false]], "selu (class in lucid.nn)": [[150, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[90, "lucid.nn.functional.selu", false]], "semodule (class in lucid.nn)": [[135, "lucid.nn.SEModule", false]], "senet (class in lucid.models)": [[53, "lucid.models.SENet", false]], "sequential (class in lucid.nn)": [[83, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[207, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[151, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[91, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[257, "lucid.sign", false]], "sin() (in module lucid)": [[258, "lucid.sin", false]], "sinh() (in module lucid)": [[259, "lucid.sinh", false]], "sk_resnet_18() (in module lucid.models)": [[64, "lucid.models.sk_resnet_18", false]], "sk_resnet_34() (in module lucid.models)": [[65, "lucid.models.sk_resnet_34", false]], "sk_resnet_50() (in module lucid.models)": [[66, "lucid.models.sk_resnet_50", false]], "sknet (class in lucid.models)": [[63, "lucid.models.SKNet", false]], "softmax (class in lucid.nn)": [[152, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[92, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[19, "lucid.linalg.solve", false]], "sqrt() (in module lucid)": [[260, "lucid.sqrt", false]], "square() (in module lucid)": [[261, "lucid.square", false]], "squeeze() (in module lucid)": [[278, "lucid.squeeze", false]], "stack() (in module lucid)": [[279, "lucid.stack", false]], "sub() (in module lucid)": [[232, "lucid.sub", false]], "sum() (in module lucid)": [[262, "lucid.sum", false]], "summarize() (in module lucid.models)": [[75, "lucid.models.summarize", false]], "svd() (in module lucid.linalg)": [[20, "lucid.linalg.svd", false]], "tan() (in module lucid)": [[263, "lucid.tan", false]], "tanh (class in lucid.nn)": [[153, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[264, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[93, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[221, "lucid.Tensor", false]], "tensor() (in module lucid)": [[268, "lucid.tensor", false]], "tile() (in module lucid)": [[280, "lucid.tile", false]], "totensor (class in lucid.transforms)": [[284, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[265, "lucid.trace", false]], "transpose() (in module lucid)": [[266, "lucid.transpose", false]], "unfold() (in module lucid.nn.functional)": [[98, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[143, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[219, "lucid.random.uniform", false]], "unsqueeze() (in module lucid)": [[281, "lucid.unsqueeze", false]], "var() (in module lucid)": [[267, "lucid.var", false]], "vggnet (class in lucid.models)": [[67, "lucid.models.VGGNet", false]], "vggnet_11() (in module lucid.models)": [[68, "lucid.models.vggnet_11", false]], "vggnet_13() (in module lucid.models)": [[69, "lucid.models.vggnet_13", false]], "vggnet_16() (in module lucid.models)": [[70, "lucid.models.vggnet_16", false]], "vggnet_19() (in module lucid.models)": [[71, "lucid.models.vggnet_19", false]], "vstack() (in module lucid)": [[282, "lucid.vstack", false]], "wide_resnet_101() (in module lucid.models)": [[44, "lucid.models.wide_resnet_101", false]], "wide_resnet_50() (in module lucid.models)": [[45, "lucid.models.wide_resnet_50", false]], "xavier_normal() (in module lucid.nn.init)": [[144, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[145, "lucid.nn.init.xavier_uniform", false]], "zeros() (in module lucid)": [[240, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[241, "lucid.zeros_like", false]], "zfnet (class in lucid.models)": [[72, "lucid.models.ZFNet", false]], "zfnet() (in module lucid.models)": [[73, "lucid.models.zfnet", false]]}, "objects": {"": [[8, 0, 0, "-", "lucid"]], "lucid": [[221, 1, 1, "", "Tensor"], [243, 2, 1, "", "abs"], [222, 2, 1, "", "add"], [233, 2, 1, "", "arange"], [244, 2, 1, "", "arccos"], [245, 2, 1, "", "arcsin"], [246, 2, 1, "", "arctan"], [247, 2, 1, "", "clip"], [269, 2, 1, "", "concatenate"], [248, 2, 1, "", "cos"], [249, 2, 1, "", "cosh"], [250, 2, 1, "", "cube"], [234, 2, 1, "", "diag"], [223, 2, 1, "", "div"], [224, 2, 1, "", "dot"], [235, 2, 1, "", "empty"], [236, 2, 1, "", "empty_like"], [251, 2, 1, "", "exp"], [237, 2, 1, "", "eye"], [270, 2, 1, "", "flatten"], [209, 2, 1, "", "grad_enabled"], [271, 2, 1, "", "hstack"], [225, 2, 1, "", "inner"], [252, 2, 1, "", "log"], [226, 2, 1, "", "matmul"], [253, 2, 1, "", "max"], [227, 2, 1, "", "maximum"], [254, 2, 1, "", "mean"], [273, 2, 1, "", "meshgrid"], [255, 2, 1, "", "min"], [228, 2, 1, "", "minimum"], [229, 2, 1, "", "mul"], [211, 2, 1, "", "no_grad"], [238, 2, 1, "", "ones"], [239, 2, 1, "", "ones_like"], [230, 2, 1, "", "outer"], [274, 2, 1, "", "pad"], [231, 2, 1, "", "power"], [275, 2, 1, "", "ravel"], [256, 2, 1, "", "reciprocal"], [212, 2, 1, "", "register_model"], [276, 2, 1, "", "repeat"], [277, 2, 1, "", "reshape"], [257, 2, 1, "", "sign"], [258, 2, 1, "", "sin"], [259, 2, 1, "", "sinh"], [260, 2, 1, "", "sqrt"], [261, 2, 1, "", "square"], [278, 2, 1, "", "squeeze"], [279, 2, 1, "", "stack"], [232, 2, 1, "", "sub"], [262, 2, 1, "", "sum"], [263, 2, 1, "", "tan"], [264, 2, 1, "", "tanh"], [268, 2, 1, "", "tensor"], [280, 2, 1, "", "tile"], [265, 2, 1, "", "trace"], [266, 2, 1, "", "transpose"], [281, 2, 1, "", "unsqueeze"], [267, 2, 1, "", "var"], [282, 2, 1, "", "vstack"], [240, 2, 1, "", "zeros"], [241, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "FashionMNIST"], [6, 1, 1, "", "MNIST"]], "lucid.linalg": [[10, 2, 1, "", "cholesky"], [11, 2, 1, "", "det"], [12, 2, 1, "", "eig"], [14, 2, 1, "", "inv"], [15, 2, 1, "", "matrix_power"], [16, 2, 1, "", "norm"], [17, 2, 1, "", "pinv"], [18, 2, 1, "", "qr"], [19, 2, 1, "", "solve"], [20, 2, 1, "", "svd"]], "lucid.models": [[21, 1, 1, "", "AlexNet"], [23, 1, 1, "", "Inception"], [27, 1, 1, "", "InceptionResNet"], [31, 1, 1, "", "LeNet"], [46, 1, 1, "", "ResNeXt"], [35, 1, 1, "", "ResNet"], [53, 1, 1, "", "SENet"], [63, 1, 1, "", "SKNet"], [67, 1, 1, "", "VGGNet"], [72, 1, 1, "", "ZFNet"], [22, 2, 1, "", "alexnet"], [28, 2, 1, "", "inception_resnet_v1"], [29, 2, 1, "", "inception_resnet_v2"], [24, 2, 1, "", "inception_v1"], [25, 2, 1, "", "inception_v3"], [26, 2, 1, "", "inception_v4"], [32, 2, 1, "", "lenet_1"], [33, 2, 1, "", "lenet_4"], [34, 2, 1, "", "lenet_5"], [36, 2, 1, "", "resnet_1001"], [37, 2, 1, "", "resnet_101"], [38, 2, 1, "", "resnet_152"], [39, 2, 1, "", "resnet_18"], [40, 2, 1, "", "resnet_200"], [41, 2, 1, "", "resnet_269"], [42, 2, 1, "", "resnet_34"], [43, 2, 1, "", "resnet_50"], [47, 2, 1, "", "resnext_101_32x16d"], [48, 2, 1, "", "resnext_101_32x32d"], [49, 2, 1, "", "resnext_101_32x4d"], [50, 2, 1, "", "resnext_101_32x8d"], [51, 2, 1, "", "resnext_101_64x4d"], [52, 2, 1, "", "resnext_50_32x4d"], [54, 2, 1, "", "se_resnet_101"], [55, 2, 1, "", "se_resnet_152"], [56, 2, 1, "", "se_resnet_18"], [57, 2, 1, "", "se_resnet_34"], [58, 2, 1, "", "se_resnet_50"], [59, 2, 1, "", "se_resnext_101_32x4d"], [60, 2, 1, "", "se_resnext_101_32x8d"], [61, 2, 1, "", "se_resnext_101_64x4d"], [62, 2, 1, "", "se_resnext_50_32x4d"], [64, 2, 1, "", "sk_resnet_18"], [65, 2, 1, "", "sk_resnet_34"], [66, 2, 1, "", "sk_resnet_50"], [75, 2, 1, "", "summarize"], [68, 2, 1, "", "vggnet_11"], [69, 2, 1, "", "vggnet_13"], [70, 2, 1, "", "vggnet_16"], [71, 2, 1, "", "vggnet_19"], [44, 2, 1, "", "wide_resnet_101"], [45, 2, 1, "", "wide_resnet_50"], [73, 2, 1, "", "zfnet"]], "lucid.nn": [[184, 1, 1, "", "AdaptiveAvgPool1d"], [185, 1, 1, "", "AdaptiveAvgPool2d"], [186, 1, 1, "", "AdaptiveAvgPool3d"], [159, 1, 1, "", "AlphaDropout"], [187, 1, 1, "", "AvgPool1d"], [188, 1, 1, "", "AvgPool2d"], [189, 1, 1, "", "AvgPool3d"], [170, 1, 1, "", "BCELoss"], [176, 1, 1, "", "BatchNorm1d"], [177, 1, 1, "", "BatchNorm2d"], [178, 1, 1, "", "BatchNorm3d"], [166, 1, 1, "", "Bilinear"], [76, 1, 1, "", "Buffer"], [155, 1, 1, "", "Conv1d"], [156, 1, 1, "", "Conv2d"], [157, 1, 1, "", "Conv3d"], [132, 1, 1, "", "ConvBNReLU1d"], [133, 1, 1, "", "ConvBNReLU2d"], [134, 1, 1, "", "ConvBNReLU3d"], [171, 1, 1, "", "CrossEntropyLoss"], [160, 1, 1, "", "Dropout"], [161, 1, 1, "", "Dropout1d"], [162, 1, 1, "", "Dropout2d"], [163, 1, 1, "", "Dropout3d"], [146, 1, 1, "", "ELU"], [147, 1, 1, "", "GELU"], [172, 1, 1, "", "HuberLoss"], [167, 1, 1, "", "Identity"], [179, 1, 1, "", "InstanceNorm1d"], [180, 1, 1, "", "InstanceNorm2d"], [181, 1, 1, "", "InstanceNorm3d"], [182, 1, 1, "", "LayerNorm"], [148, 1, 1, "", "LeakyReLU"], [168, 1, 1, "", "Linear"], [173, 1, 1, "", "MSELoss"], [190, 1, 1, "", "MaxPool1d"], [191, 1, 1, "", "MaxPool2d"], [192, 1, 1, "", "MaxPool3d"], [77, 1, 1, "", "Module"], [79, 1, 1, "", "ModuleDict"], [80, 1, 1, "", "ModuleList"], [174, 1, 1, "", "NLLLoss"], [78, 1, 1, "", "Parameter"], [81, 1, 1, "", "ParameterDict"], [82, 1, 1, "", "ParameterList"], [149, 1, 1, "", "ReLU"], [150, 1, 1, "", "SELU"], [135, 1, 1, "", "SEModule"], [136, 1, 1, "", "SelectiveKernel"], [83, 1, 1, "", "Sequential"], [151, 1, 1, "", "Sigmoid"], [152, 1, 1, "", "Softmax"], [153, 1, 1, "", "Tanh"]], "lucid.nn.functional": [[119, 2, 1, "", "adaptive_avg_pool1d"], [120, 2, 1, "", "adaptive_avg_pool2d"], [121, 2, 1, "", "adaptive_avg_pool3d"], [99, 2, 1, "", "alpha_dropout"], [122, 2, 1, "", "avg_pool1d"], [123, 2, 1, "", "avg_pool2d"], [124, 2, 1, "", "avg_pool3d"], [115, 2, 1, "", "batch_norm"], [106, 2, 1, "", "bilinear"], [109, 2, 1, "", "binary_cross_entropy"], [94, 2, 1, "", "conv1d"], [95, 2, 1, "", "conv2d"], [96, 2, 1, "", "conv3d"], [110, 2, 1, "", "cross_entropy"], [100, 2, 1, "", "dropout"], [101, 2, 1, "", "dropout1d"], [102, 2, 1, "", "dropout2d"], [103, 2, 1, "", "dropout3d"], [85, 2, 1, "", "elu"], [86, 2, 1, "", "gelu"], [111, 2, 1, "", "huber_loss"], [117, 2, 1, "", "instance_norm"], [130, 2, 1, "", "interpolate"], [118, 2, 1, "", "layer_norm"], [88, 2, 1, "", "leaky_relu"], [108, 2, 1, "", "linear"], [126, 2, 1, "", "max_pool1d"], [127, 2, 1, "", "max_pool2d"], [128, 2, 1, "", "max_pool3d"], [113, 2, 1, "", "mse_loss"], [114, 2, 1, "", "nll_loss"], [89, 2, 1, "", "relu"], [131, 2, 1, "", "rotate"], [90, 2, 1, "", "selu"], [91, 2, 1, "", "sigmoid"], [92, 2, 1, "", "softmax"], [93, 2, 1, "", "tanh"], [98, 2, 1, "", "unfold"]], "lucid.nn.init": [[138, 2, 1, "", "constant"], [140, 2, 1, "", "kaiming_normal"], [141, 2, 1, "", "kaiming_uniform"], [142, 2, 1, "", "normal"], [143, 2, 1, "", "uniform"], [144, 2, 1, "", "xavier_normal"], [145, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[197, 1, 1, "", "ASGD"], [198, 1, 1, "", "Adadelta"], [199, 1, 1, "", "Adagrad"], [200, 1, 1, "", "Adam"], [201, 1, 1, "", "AdamW"], [202, 1, 1, "", "Adamax"], [203, 1, 1, "", "NAdam"], [195, 1, 1, "", "Optimizer"], [204, 1, 1, "", "RAdam"], [205, 1, 1, "", "RMSprop"], [206, 1, 1, "", "Rprop"], [207, 1, 1, "", "SGD"]], "lucid.random": [[215, 2, 1, "", "rand"], [216, 2, 1, "", "randint"], [217, 2, 1, "", "randn"], [218, 2, 1, "", "seed"], [219, 2, 1, "", "uniform"]], "lucid.transforms": [[285, 1, 1, "", "CenterCrop"], [283, 1, 1, "", "Compose"], [286, 1, 1, "", "Normalize"], [287, 1, 1, "", "RandomCrop"], [288, 1, 1, "", "RandomGrayscale"], [289, 1, 1, "", "RandomHorizontalFlip"], [290, 1, 1, "", "RandomRotation"], [291, 1, 1, "", "RandomVerticalFlip"], [292, 1, 1, "", "Resize"], [284, 1, 1, "", "ToTensor"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [3, 8, 9, 15, 17, 20, 74, 75, 76, 77, 78, 79, 81, 82, 83, 119, 120, 121, 136, 171, 174, 184, 185, 186, 187, 190, 191, 194, 195, 196, 210, 212, 226, 234, 252, 254, 262, 265, 267, 268, 278, 284, 286, 294], "0": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 25, 27, 31, 53, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 262, 263, 264, 266, 267, 268, 269, 271, 274, 275, 276, 278, 279, 281, 282, 283, 285, 286, 287, 288, 289, 290, 291, 292, 294], "000": [5, 6, 235, 236], "0000": [171, 172, 174], "0001": 197, "000e": [235, 236], "001": [197, 200, 201, 203, 204, 207], "002": [202, 203], "004": 203, "005": 148, "01": [88, 148, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207], "01051757": 217, "016": [36, 74], "0205": 171, "0217": 171, "0227": 171, "024": [58, 74], "026": [47, 74], "028": [52, 74], "0299": 171, "032": [43, 74], "044715": [86, 147], "0450": 171, "0451": 171, "047": [69, 74], "04719755": 244, "0474259": 91, "048": [60, 74], "0480": 171, "05": [115, 117, 118, 132, 133, 134, 148, 176, 177, 178, 179, 180, 181, 182], "0507": [90, 150], "06": [198, 206], "069": [41, 74], "07": [109, 110, 170, 171], "0700": 171, "0706508": 153, "071": [36, 74], "0721": 171, "073": [66, 74], "0794": 174, "08": [200, 201, 202, 203, 204, 205], "0802": 174, "08333333": 17, "085537": 251, "088": [58, 74], "0900": [152, 171], "0986": [92, 152], "09861229": 252, "0992": 171, "1": [0, 1, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 27, 31, 32, 33, 34, 53, 59, 60, 61, 62, 63, 67, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 213, 215, 216, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 239, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294], "10": [0, 1, 2, 3, 5, 21, 22, 31, 32, 33, 34, 67, 72, 73, 74, 75, 79, 80, 83, 95, 96, 106, 108, 119, 155, 156, 157, 162, 163, 166, 168, 177, 178, 180, 184, 188, 189, 191, 199, 212, 216, 219, 220, 223, 226, 229, 230, 246, 262, 285, 287, 288, 290], "100": [22, 68, 69, 70, 71, 74, 212, 294], "1000": [21, 22, 24, 25, 26, 28, 29, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73], "1000000": 197, "1001": [36, 74, 171], "1003": 171, "1007": 74, "101": [37, 44, 47, 48, 49, 50, 51, 54, 59, 60, 61, 74], "1014": 90, "102": [41, 74], "1025": [80, 83], "1026": [80, 83], "1027": [80, 83], "10499": 91, "1050": 151, "1054": 174, "1056": [80, 83], "10590": 74, "1097": 74, "11": [39, 56, 67, 68, 74, 106, 155, 156, 157, 162, 166, 177, 178, 180, 188, 189, 191, 226, 285, 286, 287, 288, 290], "1105": 74, "1109": 74, "1111": 170, "1134": 106, "114b": 288, "119": 106, "1192": [91, 92, 152], "12": [32, 33, 81, 106, 121, 155, 156, 157, 162, 163, 166, 177, 178, 180, 186, 188, 189, 191, 226, 230, 231, 285, 287, 288, 290], "120": [31, 34], "123": [140, 141, 142, 143, 144, 145, 218, 219], "124": [140, 141, 144, 145], "125": 189, "1250": 172, "126": [44, 74], "128": [28, 35, 44, 45, 67, 74, 83, 136, 283, 294], "128x128": [283, 294], "13": [24, 67, 69, 74, 106, 155, 156, 157, 166, 178, 188, 189, 191, 226, 285, 287, 288, 290], "132": [68, 74], "133": [69, 74], "138": [70, 74], "14": [155, 156, 157, 162, 163, 166, 178, 188, 189, 191, 213, 226, 230, 285, 287, 288, 290], "1409": 74, "143": [71, 74], "145": 106, "149": [36, 74], "15": [0, 106, 155, 156, 157, 166, 178, 188, 189, 191, 226, 230, 265, 285, 287, 288, 290, 294], "1513": 174, "152": [38, 55, 74], "155": 226, "1556": 74, "1588": [86, 147], "16": [31, 34, 47, 53, 67, 70, 74, 80, 81, 83, 120, 121, 132, 133, 134, 135, 136, 155, 156, 157, 162, 163, 166, 177, 178, 185, 186, 188, 189, 191, 194, 226, 230, 260, 285, 287, 288, 290], "160": [37, 74], "16227766": 18, "16425": 174, "1643": 170, "166": 226, "17": [155, 156, 157, 166, 178, 189, 225, 285, 287, 288, 290], "170": 106, "17520119": 259, "177": [49, 74], "18": [33, 39, 56, 64, 74, 155, 156, 157, 162, 166, 178, 189, 229, 230, 285, 287, 288, 290], "1800": 171, "19": [67, 71, 74, 95, 96, 106, 156, 157, 178, 224, 226], "192": [32, 33, 38, 74], "194": [47, 74], "1966": [92, 151, 152], "1998": [74, 171], "1_53": 74, "1d": [94, 119, 122, 126, 132, 176, 179, 184, 219, 226, 234, 265, 273, 274, 275, 276, 280], "1e": [109, 110, 115, 117, 118, 132, 133, 134, 170, 171, 176, 177, 178, 179, 180, 181, 182, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "1e6": 197, "1st": [21, 72], "2": [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 32, 33, 34, 39, 56, 64, 72, 75, 76, 77, 78, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 136, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 213, 215, 216, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294], "20": [0, 5, 6, 79, 80, 83, 156, 157, 162, 178, 230, 251], "200": [40, 74], "2011": 135, "2012": 74, "2014": 74, "2015": 74, "2016": 74, "2017": 74, "2018": [74, 135], "2019": 74, "2023": 135, "2039": 174, "204": 157, "21": [42, 57, 74, 81, 106, 156, 157, 178, 230], "211": 226, "22": [28, 74, 106, 156, 157, 162, 178, 224, 226], "2231": [171, 174], "224": [21, 35, 45, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 64, 65, 66, 67, 72, 74], "2247": [176, 177, 178, 179, 180, 181, 182], "224x224": [24, 59, 60, 61, 62], "226": 226, "22752314": 217, "2278": 74, "23": [37, 44, 47, 48, 49, 50, 51, 54, 156, 157, 178], "232": [61, 74], "2324": [74, 150], "234": [140, 141, 142, 143, 144, 145, 219], "24": [40, 106, 120, 156, 157, 162, 178, 185, 230], "240": [71, 74], "2424": [92, 152], "2447": 152, "246": [32, 74], "25": [0, 43, 52, 64, 74, 91, 151, 157, 173, 178, 188, 189, 223, 256, 267], "2500": [170, 172, 174], "2512": 146, "2547": 150, "256": [35, 67], "26": [81, 108, 157, 168, 178, 230], "26325684": 217, "2689": [92, 151, 152], "269": [41, 74], "27": [62, 74, 106, 155, 157, 178, 250], "272": [51, 74], "276": [140, 141, 144, 145], "28": [32, 33, 58, 74, 106, 157, 230], "28x28": [5, 6, 32, 33], "29": 157, "299": 74, "299r": 288, "299x299": [25, 26, 28, 29], "2_i": [179, 180, 181], "2d": [95, 102, 120, 123, 127, 133, 177, 180, 185, 226, 234, 237, 265, 270, 273, 274, 276, 280, 290], "2e": 202, "2nd": [21, 72], "2x2": [98, 285, 287], "3": [1, 2, 3, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 32, 35, 36, 37, 38, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 74, 76, 77, 78, 80, 81, 82, 83, 86, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 106, 108, 111, 113, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 247, 249, 250, 251, 252, 253, 254, 255, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292], "30": [25, 41, 74, 80, 131, 157, 290], "3026": 174, "31": [106, 157, 226], "310": [235, 236], "31622777": 18, "319": 74, "32": [34, 47, 48, 49, 50, 52, 74, 80, 83, 106, 108, 120, 132, 133, 134, 135, 136, 156, 157, 168, 185, 194, 224, 225, 230], "321": [140, 141, 144, 145], "326": [54, 74], "32x16d": 74, "32x32": [31, 34], "32x32d": 74, "32x4d": [59, 62, 74], "32x8d": [60, 74], "33": [80, 83, 108, 157, 168], "33333333": 17, "336": [50, 68, 74], "34": [42, 57, 65, 74, 80, 83, 106, 157, 226, 230], "342": [140, 141, 144, 145], "345": [140, 141, 142, 143, 144, 145, 219], "35": [29, 74, 80, 83, 157], "352": [24, 74], "3567": [170, 174], "357": [70, 73, 74], "36": [38, 40, 55, 157], "3679": [85, 90, 146], "368": [64, 66, 74], "37": 155, "372": 106, "375": 173, "3750": 172, "378": [33, 74], "38344152": 215, "38629436": 252, "389056": 251, "392": [25, 74], "393": [24, 74], "3935": 146, "3d": [96, 103, 121, 124, 128, 134, 157, 178, 181, 186], "3x3": [74, 220], "4": [0, 1, 2, 3, 9, 10, 11, 12, 14, 16, 17, 18, 31, 32, 33, 35, 37, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 57, 58, 65, 66, 74, 75, 81, 83, 94, 95, 96, 98, 101, 102, 103, 106, 108, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 197, 200, 204, 205, 207, 210, 213, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 239, 241, 247, 252, 253, 254, 255, 256, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 279, 280, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292], "40": [26, 74], "400": 34, "4044": 170, "4076": 171, "4096": [21, 72], "41421356": 10, "416": [41, 59, 74], "41666667": 17, "41808962": 217, "419974": 93, "4199743": 153, "42": [106, 135, 213, 220], "421": [140, 141, 144, 145], "423": [140, 141, 142, 143], "42718872": 18, "4278": 74, "4284": 74, "4286": 170, "43": [224, 226], "4323": 146, "4375": 172, "43758721": 215, "44": [37, 49, 74], "4472136": 12, "4495": [178, 181], "45": [65, 74, 106, 131, 290], "4545": 159, "455": [51, 74], "468": [48, 74], "47112767": 246, "472": [48, 74], "48": [41, 59, 74, 108, 168], "49": [54, 74], "4979": 146, "4x4": 292, "5": [1, 2, 8, 9, 14, 15, 16, 17, 21, 25, 31, 32, 33, 34, 63, 64, 65, 66, 72, 74, 75, 77, 78, 79, 80, 81, 83, 86, 91, 94, 95, 96, 98, 99, 100, 101, 102, 103, 106, 108, 111, 113, 115, 117, 118, 119, 122, 123, 130, 132, 133, 134, 136, 138, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 187, 188, 189, 191, 192, 206, 210, 213, 216, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 239, 241, 243, 244, 245, 253, 254, 255, 256, 257, 262, 265, 266, 267, 268, 271, 273, 277, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294], "50": [35, 43, 45, 52, 58, 62, 66, 74, 108, 168, 206, 224, 226, 288, 289, 291, 294], "5000": [170, 172, 174], "510": 74, "5108": 174, "512": [29, 35, 39, 65, 74], "519": 74, "52359878": 245, "53": [106, 225], "530": [48, 74], "543": [140, 141, 142, 143, 144, 145, 219], "54308063": 249, "544": [70, 74], "545": 231, "5455": 159, "549": [37, 74], "557": [43, 74], "559": [62, 74], "563": [140, 141, 144, 145], "569": [60, 74], "57": [66, 74, 106], "57079633": [244, 245], "57366333": 218, "586": [26, 74], "587g": 288, "592": [56, 74], "5987": 74, "5995": 74, "5th": [21, 72], "6": [9, 17, 21, 31, 34, 35, 42, 43, 45, 52, 57, 58, 65, 66, 72, 81, 82, 94, 95, 96, 98, 103, 106, 108, 119, 141, 145, 155, 156, 157, 160, 161, 162, 163, 166, 168, 170, 176, 177, 178, 179, 180, 181, 182, 184, 188, 189, 191, 192, 198, 206, 210, 213, 219, 222, 223, 224, 225, 226, 229, 230, 231, 232, 233, 234, 235, 236, 239, 241, 253, 254, 255, 262, 265, 266, 267, 268, 271, 276, 277, 282, 284, 285, 286, 287, 288, 290, 292], "60": [38, 74], "6052": 174, "6065": 146, "608": [73, 74], "61": [22, 34, 74], "6124": [176, 177, 178, 179, 180, 181, 182], "62": [73, 74, 106], "62686041": 259, "630": 74, "6321": [85, 146], "63245553": 18, "64": [35, 40, 51, 63, 67, 74, 80, 83, 106, 135, 136], "645": 74, "64589411": 215, "647": [64, 74], "64x4d": [61, 74], "654": [140, 141, 142, 143, 144, 145, 219], "657": [140, 141, 144, 145], "6590": [92, 152], "66": [55, 74], "6652": 152, "66666667": 17, "6667": 170, "667": [71, 74], "6682": 170, "669": [40, 74], "67": 226, "672": [42, 74], "67326": 150, "6733": 90, "678": [140, 141, 142, 143, 144, 145], "68811989": 217, "689": [39, 74], "69314718": 252, "696": [44, 74], "7": [16, 67, 81, 94, 95, 96, 98, 103, 106, 108, 109, 110, 119, 136, 147, 150, 151, 153, 155, 156, 157, 162, 163, 166, 168, 170, 171, 173, 177, 178, 180, 181, 184, 188, 189, 191, 192, 213, 216, 219, 222, 224, 225, 226, 230, 232, 234, 251, 254, 262, 265, 266, 267, 280, 284, 285, 286, 287, 288, 290, 292], "70": [5, 6], "7001": 171, "704": [49, 74], "706": [34, 74], "70710678": [12, 258], "7132": 74, "7141": 74, "7147": 174, "7182818": 251, "726791": 74, "7311": [92, 151, 152], "739": [28, 74], "74": 226, "75": [108, 168, 173, 197], "7581": 90, "76159416": 264, "7616": [93, 153], "76219569": 249, "7635": 150, "770": 74, "772": 231, "778": [56, 74], "78": [45, 74], "78357324": 217, "78539816": 246, "791": [50, 74], "79172504": 215, "792": [47, 74], "797": [42, 74], "7x7": 72, "8": [15, 19, 35, 38, 41, 47, 48, 49, 50, 51, 52, 55, 64, 65, 66, 75, 80, 81, 83, 94, 95, 96, 98, 103, 106, 108, 109, 119, 120, 121, 132, 133, 134, 135, 147, 150, 151, 153, 155, 156, 157, 160, 161, 162, 163, 166, 168, 170, 173, 177, 178, 180, 181, 184, 185, 186, 188, 189, 191, 192, 200, 201, 202, 203, 204, 205, 213, 216, 223, 224, 225, 226, 230, 231, 233, 234, 250, 254, 262, 265, 266, 267, 284, 285, 286, 287, 288, 290, 292], "80": [5, 6], "8005": 171, "808": [38, 74], "817": [25, 74], "818": 74, "8182": 159, "82": 106, "821": [55, 74], "83": [51, 74], "833": 74, "84": [31, 33, 34], "840": [22, 74], "8413": [86, 147], "847": [29, 74], "848": [55, 69, 74], "8584": 150, "86": 74, "863": [68, 74], "864": [40, 74], "868": [57, 74], "872": [54, 74], "876": [140, 141, 144, 145, 219], "88": [50, 61, 74], "8808": [92, 151, 152], "886": [44, 74], "887": 231, "891773": 215, "89442719": 12, "895": [65, 74], "896": [62, 74], "9": [0, 1, 3, 6, 19, 74, 95, 98, 106, 108, 119, 155, 156, 157, 162, 166, 168, 170, 177, 178, 180, 184, 188, 189, 191, 197, 198, 200, 201, 202, 203, 204, 205, 207, 213, 216, 219, 222, 226, 230, 231, 232, 234, 260, 261, 284, 285, 286, 287, 288, 290], "904": [52, 74], "90709145": 218, "9091": 159, "9120": 174, "9163": 174, "93": [60, 74], "94": 36, "9486833": 18, "949e": [235, 236], "9526": 91, "9545": 147, "955": [59, 74], "958": [57, 74], "96366276": 215, "9640": 153, "96402758": 264, "973": [45, 74], "978": 74, "984": [26, 61, 74], "99": 205, "9957": 174, "99734545": 218, "999": [0, 200, 201, 202, 203, 204], "A": [1, 3, 5, 6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 27, 31, 35, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 63, 64, 65, 66, 67, 68, 69, 70, 71, 77, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 106, 108, 109, 110, 114, 115, 117, 118, 130, 136, 159, 160, 161, 162, 163, 170, 171, 174, 176, 177, 178, 179, 180, 181, 182, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 213, 215, 216, 217, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 290], "As": 218, "Be": 0, "By": [0, 2, 3, 8, 36, 37, 38, 39, 40, 41, 42, 43, 78, 131, 194, 204, 210, 215, 216, 217, 219, 284, 294], "For": [2, 3, 4, 8, 10, 11, 12, 14, 15, 16, 17, 19, 83, 85, 86, 88, 89, 90, 91, 93, 106, 108, 130, 140, 141, 144, 145, 150, 155, 156, 157, 166, 168, 176, 177, 178, 179, 180, 181, 194, 196, 218, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 251, 252, 253, 254, 255, 258, 260, 262, 265, 266, 267, 274, 276, 278, 280, 281, 294], "If": [0, 1, 2, 5, 6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 35, 75, 77, 79, 80, 81, 82, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 103, 106, 108, 115, 117, 120, 121, 130, 131, 132, 133, 134, 136, 140, 141, 155, 156, 157, 166, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 195, 200, 201, 205, 206, 212, 215, 216, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 288, 289, 291, 292], "In": [3, 8, 17, 94, 95, 96, 171, 174, 209, 210, 211, 283, 294], "It": [1, 2, 3, 5, 8, 17, 18, 19, 21, 23, 24, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 56, 67, 74, 77, 79, 80, 81, 82, 83, 103, 106, 130, 131, 132, 133, 134, 135, 147, 149, 153, 166, 167, 170, 171, 172, 173, 174, 184, 185, 186, 194, 195, 196, 197, 203, 205, 206, 207, 210, 218, 222, 223, 224, 227, 228, 229, 231, 232, 253, 255, 269, 271, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284], "Its": [19, 220], "Near": 17, "No": 98, "Not": 167, "One": [32, 294], "The": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294], "There": 277, "These": [4, 8, 9, 12, 15, 18, 20, 44, 45, 64, 65, 66, 74, 159, 160, 161, 162, 163, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 206, 213, 220, 294], "To": [3, 74, 196, 217, 220, 235, 236, 273, 294], "With": [3, 98, 284, 294], "_": [15, 79, 80, 82, 83, 85, 86, 88, 89, 90, 91, 93, 108, 130, 177, 178, 179, 180, 181, 187, 188, 189, 190, 191, 192, 197, 198, 200, 201, 202, 203, 205, 207, 224, 225, 226, 230, 265, 266, 285, 286, 287, 289, 290, 291], "_1": [12, 79, 80, 81, 82, 83, 106, 166, 230, 269, 271, 282], "_2": [12, 79, 80, 81, 82, 83, 106, 166, 230, 269, 271, 282], "__call__": [1, 77], "__getitem__": [0, 2, 3, 5, 6], "__init__": [0, 1, 2, 3, 8, 21, 23, 27, 31, 67, 72, 75, 76, 77, 78, 79, 80, 81, 82, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 166, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 212, 221, 283, 284], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5, 6], "__repr__": 195, "__setattr__": 77, "_activ": 92, "_arraylik": [213, 234, 236, 239, 241], "_arraylikeint": 274, "_arrayorscalar": [76, 78, 213, 221, 268], "_base_activ": 31, "_base_dtyp": [233, 235, 238, 240], "_c": 286, "_decai": 203, "_fanmod": [140, 141], "_grad_en": [209, 211], "_i": [12, 16, 92, 106, 152, 173, 176, 182, 187, 190, 224, 225, 227, 228, 230, 231, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 271, 276, 278, 281, 282], "_in": [140, 141, 144, 145], "_j": [92, 152, 187, 190, 230, 254, 262, 266, 267], "_k": 279, "_left": 130, "_make_lay": 67, "_modul": 77, "_n": [12, 79, 80, 81, 82, 83, 269, 271, 282], "_numpyarrai": 213, "_out": [140, 141, 144, 145, 276, 280], "_p": 16, "_pad": 274, "_paddingstr": [132, 133, 134, 155, 156, 157], "_paramet": 77, "_reductiontyp": [109, 110, 111, 113, 114, 170, 171, 172, 173, 174], "_right": 130, "_scalar": [138, 142, 143, 144, 145, 213, 233, 247], "_seresnetbottleneck": [54, 55, 58], "_seresnetmodul": [56, 57], "_shapelik": [75, 118, 182, 213, 216, 238, 240, 277, 278, 281], "_size": [119, 120, 121], "_skresnetmodul": [64, 65, 66], "_slope": 148, "_statedict": 195, "_t": [204, 205], "_tensor": [76, 78, 234, 268], "_tensorop": 221, "_u": 17, "_v": 17, "_valu": [247, 274], "_width": 274, "a_i": [227, 228, 231], "aaai": 74, "ab": 242, "abc": [2, 195], "abil": [8, 74, 294], "about": [8, 75], "abov": [8, 209, 211, 218, 234, 237], "absolut": [15, 16, 111, 202, 243], "abstract": [2, 3, 194, 195, 196, 197, 205, 207], "abstractmethod": 195, "acceler": [74, 150, 176, 177, 178, 197, 203, 205, 207], "accept": [167, 215, 221], "access": [0, 2, 3, 4, 5, 6, 47, 48, 49, 50, 51, 52, 76, 78, 79, 80, 81, 82, 83, 277], "accord": [130, 155, 156, 157, 166, 168, 171, 174, 198, 199, 200, 201, 202, 203, 204, 266], "accordingli": 11, "account": [15, 17, 18], "accumul": [197, 198, 199, 222, 223, 227, 228, 229, 232], "accur": 55, "accuraci": [58, 74], "achiev": [46, 47, 48, 49, 50, 51, 52, 74, 94, 95, 96, 119, 184, 185, 186, 203, 289, 291], "across": [0, 76, 80, 83, 118, 119, 120, 121, 144, 145, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 213, 215, 216, 217, 218, 219, 220, 235, 236, 254, 267], "act": 201, "activ": [8, 21, 31, 36, 40, 41, 53, 67, 72, 74, 79, 83, 85, 86, 88, 89, 90, 91, 92, 93, 99, 132, 133, 134, 135, 136, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 159, 160, 161, 162, 163, 170, 171, 174, 176, 177, 178, 182, 253, 255], "actual": [78, 170, 171, 173, 174, 221, 287], "ad": [35, 77, 79, 80, 81, 82, 83, 94, 95, 96, 106, 108, 109, 110, 115, 117, 118, 122, 123, 124, 126, 127, 128, 132, 133, 134, 155, 156, 157, 170, 171, 176, 177, 178, 179, 180, 181, 182, 187, 188, 189, 190, 191, 192, 198, 199, 200, 201, 202, 203, 204, 205, 212, 281, 294], "adadelta": 208, "adagrad": [198, 208], "adam": [201, 202, 203, 204, 208], "adamax": 208, "adamw": 208, "adapt": [21, 23, 31, 54, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 74, 119, 120, 121, 135, 136, 184, 185, 186, 198, 199, 200, 203, 204, 205, 206], "adaptive_avg_pool1d": [105, 125, 184], "adaptive_avg_pool2d": [105, 125, 185], "adaptive_avg_pool3d": [105, 125, 186], "adaptiveavgpool1d": [165, 193], "adaptiveavgpool2d": [21, 53, 67, 72, 165, 193], "adaptiveavgpool3d": [165, 193], "add": [4, 77, 79, 80, 83, 106, 108, 155, 156, 157, 166, 168, 182, 195, 197, 200, 205, 207, 210, 242, 274, 281], "add_modul": [77, 83], "add_param_group": 195, "addit": [4, 8, 15, 22, 23, 24, 25, 26, 28, 29, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 73, 77, 80, 83, 106, 108, 115, 117, 166, 168, 176, 177, 178, 179, 180, 181, 197, 203, 210, 220, 222, 279], "addition": 203, "address": [171, 174, 200, 201, 204], "adjust": [28, 59, 60, 61, 62, 63, 119, 120, 121, 136, 159, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 196, 200, 204, 205, 206, 271, 282], "advanc": [3, 17, 40, 74, 80, 83, 94, 95, 96, 119, 120, 121, 184, 185, 186, 194, 197], "advantag": [29, 211], "affect": [209, 275, 278, 283], "affin": [132, 133, 134, 176, 177, 178, 179, 180, 181, 182, 290], "after": [15, 21, 72, 78, 79, 80, 81, 82, 83, 103, 135, 136, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 159, 160, 161, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 187, 188, 189, 190, 191, 192, 201, 211, 221, 222, 223, 227, 228, 229, 231, 232, 274, 284], "afterward": 211, "aggreg": [74, 136, 230, 276, 280], "aim": [4, 8], "al": [24, 74], "alex": 74, "alexnet": [30, 72, 74], "algebra": [8, 9, 237], "algorithm": [5, 8, 15, 17, 18, 195, 196, 220], "align": [19, 130, 225, 226], "align_corn": 130, "all": [0, 3, 4, 8, 18, 77, 79, 80, 81, 82, 83, 95, 96, 119, 120, 121, 123, 124, 127, 128, 130, 133, 134, 136, 148, 149, 157, 184, 185, 186, 188, 189, 192, 194, 195, 196, 197, 200, 205, 206, 207, 231, 253, 254, 255, 262, 265, 267, 269, 270, 271, 276, 278, 279, 280, 282, 285, 286, 294], "allevi": [74, 85], "alloc": [235, 236], "allow": [0, 1, 3, 4, 8, 17, 18, 29, 31, 35, 46, 59, 60, 61, 62, 63, 74, 78, 79, 80, 81, 82, 83, 85, 88, 89, 92, 96, 98, 131, 136, 146, 147, 148, 150, 151, 152, 153, 155, 156, 157, 194, 198, 199, 210, 233, 238, 240, 241, 266, 268, 273, 283, 284, 294], "along": [92, 130, 136, 152, 225, 226, 230, 253, 254, 255, 262, 265, 267, 269, 271, 273, 276, 279, 280, 281, 282, 289, 291], "alongsid": 76, "alpha": [85, 88, 90, 99, 146, 150, 159, 197, 205], "alpha_dropout": [104, 105, 159], "alphadropout": [164, 165], "alphadropoutmodel": 159, "alreadi": 212, "also": [75, 85, 86, 88, 89, 90, 91, 93, 106, 108, 130, 203, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 236, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 269, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282], "alter": [83, 277], "altern": [1, 147, 198, 226], "alwai": [78, 275, 288, 289, 291], "among": [25, 136], "amount": [94, 95, 96, 122, 123, 124, 126, 127, 128, 203], "amsgrad": [200, 201], "an": [0, 1, 3, 8, 12, 14, 15, 17, 18, 20, 22, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 72, 73, 74, 75, 77, 79, 80, 81, 82, 83, 86, 94, 95, 96, 98, 99, 100, 101, 102, 103, 106, 120, 121, 130, 131, 136, 144, 145, 146, 151, 155, 156, 157, 159, 160, 161, 162, 163, 166, 168, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 196, 197, 200, 203, 205, 211, 212, 213, 221, 226, 234, 237, 247, 254, 262, 267, 269, 276, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294], "analog": [276, 280], "analysi": [4, 135, 155, 156, 157, 181, 187, 189, 190, 192], "andrew": 74, "angl": [131, 290], "ani": [0, 1, 2, 3, 15, 17, 22, 35, 63, 73, 76, 77, 78, 79, 81, 82, 85, 86, 88, 89, 90, 91, 93, 99, 100, 106, 108, 115, 117, 151, 182, 194, 195, 209, 211, 212, 218, 221, 233, 234, 235, 237, 238, 239, 240, 241, 253, 255, 266, 268, 269, 270, 271, 274, 276, 279, 280, 281, 282, 283, 294], "anoth": [82, 232, 239, 241, 284, 294], "api": [4, 184, 185, 186, 294], "appear": 195, "append": [80, 82, 83], "appli": [2, 4, 5, 6, 8, 15, 21, 46, 63, 72, 74, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 96, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 113, 114, 132, 133, 134, 135, 136, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 159, 160, 161, 162, 163, 166, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 197, 198, 199, 201, 202, 203, 204, 226, 274, 276, 283, 286, 288, 289, 290, 291, 292, 294], "applic": [4, 17, 28, 29, 94, 117, 155, 156, 157, 166, 168, 220, 233, 240, 274, 292], "approach": [3, 27, 83, 201], "appropri": [17, 74, 77, 81, 83, 155, 156, 157, 159, 160, 161, 171, 188, 189, 209, 211], "approx": 90, "approxim": [17, 86, 147, 188, 191], "ar": [1, 2, 3, 4, 8, 11, 12, 14, 15, 17, 18, 19, 20, 23, 24, 25, 74, 76, 77, 78, 79, 80, 81, 82, 83, 92, 94, 95, 96, 98, 106, 108, 120, 121, 130, 135, 136, 140, 141, 143, 144, 145, 152, 155, 156, 157, 159, 160, 161, 162, 163, 166, 168, 171, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 197, 200, 201, 203, 204, 205, 206, 207, 209, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 243, 247, 251, 253, 254, 255, 256, 257, 262, 265, 266, 269, 273, 276, 277, 280, 283, 284, 285, 287, 288, 292, 294], "arang": 242, "arbitrari": [80, 167, 235, 236, 247, 252, 254, 258, 260, 262, 266, 267], "arcco": 242, "arch": 212, "architectur": [22, 23, 24, 25, 26, 27, 28, 29, 31, 35, 46, 47, 48, 49, 50, 51, 52, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 75, 79, 80, 81, 82, 83, 86, 135, 149, 166, 167, 194, 212], "arcsin": 242, "arctan": 242, "area": 130, "arg": [77, 167, 212, 235], "argument": [3, 4, 22, 23, 24, 25, 26, 28, 29, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 73, 77, 83, 167, 215, 235, 266], "around": [12, 131, 153], "arr": [213, 269, 271, 279, 282], "arrai": [8, 76, 78, 210, 213, 221, 226, 234, 239, 241, 268, 275, 276, 284, 294], "art": 74, "artifici": 74, "arxiv": 74, "asarrai": 213, "asgd": 208, "aspect": 292, "assign": [77, 79, 81, 83, 130, 171, 174], "assist": [23, 24, 25], "associ": [81, 82], "assum": [0, 1, 195, 196, 209], "attempt": [79, 83], "attent": [63, 82, 106, 135], "attribut": 77, "audio": 155, "augment": [3, 4, 56, 131, 220, 276, 280, 283, 287, 288, 289, 290, 291, 294], "autodiff": 8, "autograd": 194, "automat": [4, 8, 78, 79, 80, 81, 82, 194, 215, 216, 217, 219, 221, 235, 236, 241, 273, 284], "auxiliari": [23, 24, 25, 76], "avail": [4, 5, 6, 8], "averag": [21, 32, 33, 34, 35, 46, 53, 63, 67, 72, 76, 119, 120, 121, 122, 123, 124, 130, 135, 136, 173, 184, 185, 186, 187, 188, 189, 197, 198, 200, 205, 254], "avg_down": 35, "avg_pool": [187, 188, 189], "avg_pool1d": [105, 125], "avg_pool2d": [105, 125], "avg_pool3d": [105, 125], "avgpool": [21, 53, 67, 72, 136], "avgpool1d": [165, 193], "avgpool1dmodel": 187, "avgpool2d": [165, 193], "avgpool2dmodel": 188, "avgpool3d": [165, 193], "avgpool3dmodel": 189, "avoid": [2, 3, 17, 81, 211], "ax": [9, 210, 253, 254, 255, 262, 266, 267, 276, 278, 280], "axi": [92, 152, 225, 226, 253, 254, 255, 262, 267, 269, 271, 273, 274, 276, 278, 279, 280, 281, 282, 289, 291], "b": [9, 19, 106, 108, 143, 155, 156, 157, 166, 168, 210, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 269, 271, 279, 282, 288], "b_i": [227, 228, 231], "back": [130, 188, 189, 212, 225, 230, 276, 280], "backbon": [64, 65, 66], "backpropag": [8, 11, 12, 14, 15, 17, 18, 20, 74, 76, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 106, 108, 130, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 187, 188, 189, 190, 191, 192, 194, 211, 217, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 251, 253, 255, 268, 274, 276, 280, 284], "backward": [8, 76, 78, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 221, 284], "balanc": [47, 48, 49, 50, 51, 52, 172], "bar": 197, "base": [3, 9, 14, 15, 18, 19, 23, 24, 25, 26, 27, 28, 29, 31, 46, 47, 48, 49, 50, 51, 52, 63, 67, 74, 77, 79, 80, 81, 82, 98, 106, 119, 120, 121, 136, 159, 171, 172, 184, 185, 186, 194, 195, 196, 197, 201, 205, 206, 207, 222, 223, 227, 228, 229, 231, 232, 241, 251, 252, 253, 255, 266, 273, 274, 287, 288, 289, 290, 291], "base_width": [44, 45, 46, 63], "basic": [8, 21, 35, 47, 48, 49, 50, 51, 52, 64, 65, 66, 72, 75, 94, 95, 96, 119, 120, 121, 132, 133, 134, 135, 140, 141, 144, 145, 184, 185, 186, 285, 286, 287, 288, 289, 290, 291, 292], "basicblock": [35, 39, 42], "batch": [1, 2, 3, 9, 15, 18, 20, 24, 25, 26, 28, 29, 53, 59, 60, 61, 62, 94, 95, 96, 98, 101, 102, 103, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 155, 156, 157, 166, 168, 170, 171, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 204, 226, 285, 286, 287, 288, 290, 292], "batch_norm": [105, 116, 176, 177, 178], "batch_norm1": 83, "batch_norm2": 83, "batch_siz": [1, 2, 3, 136], "batchnorm": [132, 133, 134], "batchnorm1d": [132, 165, 183], "batchnorm1dmodel": 176, "batchnorm2d": [83, 133, 165, 183], "batchnorm2dmodel": 177, "batchnorm3d": [134, 165, 183], "batchnorm3dmodel": 178, "bceloss": [165, 175], "becaus": [2, 216], "becom": [16, 77, 198, 206], "befor": [15, 53, 75, 78, 197, 203, 211, 218, 274, 286, 294], "begin": [1, 16, 85, 88, 89, 90, 146, 148, 149, 150, 172, 173, 174, 187, 188, 189, 190, 191, 192, 204, 206, 210, 220, 227, 228, 230, 243, 247, 253, 255, 257, 274], "behav": [172, 265], "behavior": [74, 80, 83, 209, 220, 226, 236, 294], "being": [82, 131, 159, 160, 161, 162, 163, 204, 209, 211, 269, 271, 282], "belong": 0, "below": [18, 24, 25, 26, 28, 29, 31, 32, 33, 34, 226, 234, 237], "benchmark": [5, 6], "benefici": 83, "benefit": [85, 194, 203, 213], "bernoulli": [159, 160, 161, 162, 163], "best": [140, 141, 144, 145], "beta": [176, 177, 178, 179, 180, 181, 182, 200, 201, 202, 203, 204], "beta1": [200, 201, 202, 203, 204], "beta2": [200, 201, 202, 203, 204], "beta_1": [200, 201, 202, 203, 204], "beta_2": [200, 201, 202, 203, 204], "better": [14, 72, 74, 86, 140, 141, 144, 145, 179, 180, 181, 194, 201, 203, 205, 286], "between": [47, 48, 49, 50, 51, 52, 77, 94, 95, 96, 98, 106, 111, 132, 133, 134, 136, 155, 156, 157, 159, 160, 161, 162, 163, 166, 170, 171, 172, 173, 174, 197, 205, 206, 207, 220, 222, 223, 226, 229, 232, 233, 267, 288, 289, 291, 292], "beyond": [8, 80], "bia": [94, 95, 96, 106, 108, 115, 117, 118, 132, 133, 134, 155, 156, 157, 166, 168, 176, 177, 178, 179, 180, 181, 182, 200, 201, 202, 203, 204], "bias": [155, 156, 157, 168, 182, 194], "bias1": 81, "bias2": 81, "bilinear": [105, 107, 130, 165, 169], "bilinearmodel": 166, "binari": [91, 109, 151, 159, 160, 161, 162, 163, 170], "binary_cross_entropi": [105, 112], "block": [27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 74, 77, 98, 132, 133, 134, 136, 155, 156, 157, 211], "block1": [75, 194], "block2": [75, 194], "block_arg": [35, 53], "blue": 288, "bmatrix": 230, "bn": [132, 133, 134], "bn_affin": [132, 133, 134], "bool": [1, 5, 6, 20, 23, 24, 25, 35, 75, 77, 78, 99, 100, 101, 102, 103, 115, 117, 130, 132, 133, 134, 155, 156, 157, 166, 168, 176, 177, 178, 179, 180, 181, 182, 200, 201, 205, 209, 215, 216, 217, 219, 221, 233, 234, 235, 236, 237, 238, 239, 240, 241, 253, 254, 255, 262, 267, 268, 284], "both": [94, 108, 120, 122, 126, 132, 147, 155, 156, 185, 187, 188, 190, 191, 224, 225, 226, 230, 234, 273, 292], "bottleneck": [35, 36, 37, 38, 40, 41, 43, 44, 45, 46, 135], "bottom": 130, "bound": [141, 143, 145, 206, 219], "box": 4, "branch": [23, 24, 25, 74, 136], "break": 194, "brief": 294, "bright": 294, "broadcast": [162, 163, 254, 262, 267, 277, 281], "buffer": [197, 203, 205, 207], "build": [8, 29, 35, 36, 37, 38, 39, 40, 41, 42, 43, 46, 63, 64, 65, 66, 74, 77, 80, 83, 194, 294], "built": [3, 8, 36, 40, 41, 83, 194], "burg": 6, "c": [6, 35, 47, 48, 49, 50, 51, 52, 64, 65, 66, 98, 101, 102, 103, 110, 114, 115, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 135, 162, 163, 171, 174, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 210, 271, 282, 286], "c_": [155, 156, 157], "c_in": [94, 95, 96, 132, 133, 134], "c_out": [94, 95, 96], "calcul": [0, 1, 8, 9, 78, 198, 199, 202, 203, 204, 211, 216, 221], "calculu": [10, 17], "call": [1, 77, 209, 212, 222, 223, 226, 227, 228, 229, 231, 232], "callabl": [195, 212, 283], "can": [0, 2, 3, 4, 8, 10, 12, 14, 15, 17, 18, 20, 35, 44, 45, 59, 60, 61, 62, 75, 76, 78, 79, 80, 81, 82, 83, 88, 94, 95, 96, 131, 136, 147, 148, 153, 155, 156, 157, 179, 180, 181, 188, 189, 190, 191, 192, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 210, 211, 213, 219, 220, 221, 226, 235, 236, 237, 238, 240, 241, 254, 262, 267, 271, 273, 274, 276, 277, 280, 281, 282, 283, 284, 287, 289, 290, 291, 294], "cannot": [11, 12, 14, 15, 18, 19, 20], "capabl": [8, 233, 234, 237, 238, 239, 240, 241], "capac": [44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 74], "captur": [63, 74, 98, 155, 156, 157, 166], "cardin": [46, 47, 48, 49, 50, 51, 52, 63, 74], "care": 211, "cartesian": 273, "case": [3, 16, 31, 85, 88, 89, 90, 146, 148, 149, 150, 172, 173, 174, 187, 188, 189, 190, 191, 192, 194, 199, 204, 206, 210, 227, 228, 243, 247, 253, 255, 257, 274, 294], "categori": [5, 36, 37, 38, 39, 40, 41, 42, 43], "caus": [3, 17, 197, 205, 207], "cautiou": 0, "cdot": [10, 11, 14, 15, 16, 19, 85, 86, 88, 90, 91, 94, 95, 96, 106, 108, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 135, 144, 145, 147, 151, 159, 166, 168, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 198, 199, 200, 201, 202, 203, 204, 206, 224, 225, 226, 229, 231], "center": [131, 153, 205, 285, 294], "centercrop": [293, 294], "central": 213, "certain": [11, 86, 106, 166, 200, 201, 209, 253, 255], "chain": [14, 15, 83, 283, 294], "challeng": [5, 74], "cham": 74, "chanc": [288, 289, 291], "chang": [111, 172, 206, 210, 211, 212, 275, 277, 281, 288, 294], "channel": [31, 32, 33, 34, 35, 46, 47, 48, 49, 50, 51, 52, 57, 59, 60, 61, 62, 67, 74, 94, 95, 96, 98, 101, 102, 103, 115, 117, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 155, 156, 157, 162, 163, 176, 177, 178, 179, 180, 181, 184, 187, 188, 189, 190, 191, 192, 286, 288, 292], "character": [44, 45], "check": [209, 285, 287], "checkpoint": 196, "choic": 273, "choleski": 13, "choos": 74, "chosen": 159, "christian": 74, "christoph": 6, "clariti": 213, "class": [3, 4, 8, 22, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 73, 75, 92, 110, 114, 194, 196, 212, 234, 237, 268, 294], "classic": 34, "classif": [4, 5, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 67, 68, 69, 70, 71, 72, 73, 74, 91, 92, 109, 110, 114, 151, 152, 170, 171, 174], "classifi": [21, 23, 24, 25, 31, 32, 33, 34, 35, 46, 63, 67, 72], "cleaner": [1, 211, 226], "clear": [78, 221, 235, 236], "clearli": 213, "clf_in_featur": 31, "clf_layer": 31, "clip": [131, 206, 242], "clockwis": 131, "close": [14, 17, 150, 170, 205], "closer": 146, "closur": [195, 196], "cloth": 5, "cnn": 74, "co": [242, 258], "code": [15, 79, 81, 83, 209, 211, 213, 220], "coeffici": [19, 130, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207], "col": 98, "collect": [4, 9, 74, 79, 80, 82, 83, 196], "color": [288, 294], "colorjitt": 294, "column": [11, 12, 14, 18, 19, 20, 75, 98, 237, 271, 273], "com": [5, 6], "combin": [1, 3, 26, 27, 28, 74, 80, 83, 85, 86, 132, 133, 134, 135, 136, 147, 171, 194, 203, 204, 254, 262, 267, 269, 294], "combined_dataset": [0, 1], "common": [98, 131, 196, 294], "commonli": [8, 86, 91, 92, 93, 94, 96, 106, 113, 115, 117, 131, 135, 144, 145, 152, 157, 170, 173, 174, 187, 188, 189, 190, 191, 192, 210, 213, 238, 278, 284, 285, 286, 287, 289, 290, 291, 294], "compar": [44, 45, 72, 220, 279], "compat": [4, 9, 63, 167, 182, 194, 210, 220, 284, 294], "complex": [2, 3, 8, 12, 29, 35, 38, 41, 42, 55, 57, 75, 79, 80, 83, 89, 149, 190, 192, 194, 196, 294], "compon": [17, 23, 24, 25, 26, 27, 28, 29, 77, 80, 196, 221, 294], "compos": [5, 6, 155, 156, 157, 187, 188, 189, 190, 191, 192, 194, 294], "comprehens": 3, "compris": [44, 45], "comput": [8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 35, 46, 47, 48, 49, 50, 51, 52, 53, 59, 60, 61, 62, 74, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 98, 106, 108, 109, 110, 111, 113, 114, 115, 117, 119, 120, 121, 130, 132, 133, 134, 135, 136, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 205, 209, 210, 211, 213, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 240, 241, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 273, 274, 276, 280, 284, 294], "computation": [3, 17, 36], "compute_loss": [196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "concaten": [0, 94, 95, 96, 271, 272, 279, 282], "concept": [8, 17, 74], "condit": [10, 11, 14], "confer": 74, "config": 67, "configur": [22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 73, 82, 132, 133, 134], "conjunct": [98, 174], "connect": [21, 26, 27, 28, 29, 31, 32, 33, 34, 35, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 63, 64, 65, 66, 67, 72, 74, 108, 135, 136, 155, 156, 157, 168], "consecut": 67, "consid": [3, 14, 17, 83, 140, 141, 144, 145, 194, 206, 209, 235, 236, 294], "consider": 17, "consist": [2, 4, 5, 21, 32, 33, 34, 35, 76, 119, 120, 121, 136, 184, 185, 186, 213, 218, 220, 274, 285, 292, 294], "consistent_tensor": 220, "consol": 75, "constant": [109, 110, 115, 117, 118, 139, 150, 170, 171, 176, 177, 178, 179, 180, 181, 182, 198, 199, 200, 201, 202, 203, 204, 205, 213, 274], "constant_pad": 274, "constraint": [1, 136], "construct": [8, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 64, 65, 66, 68, 69, 70, 71, 80, 194, 234, 276, 280], "constructor": [44, 45, 59, 60, 61, 62, 68, 69, 70, 71], "contain": [1, 5, 6, 11, 12, 17, 18, 19, 20, 27, 31, 35, 46, 47, 48, 49, 50, 51, 52, 53, 63, 67, 75, 77, 79, 80, 81, 82, 83, 92, 98, 106, 108, 109, 110, 114, 130, 170, 171, 174, 195, 222, 223, 224, 225, 227, 228, 229, 230, 232, 233, 236, 243, 244, 245, 246, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 270, 273], "content": 131, "context": [209, 211], "contextmanag": 211, "contigu": 275, "continu": [148, 217], "contrast": [179, 180, 181, 294], "contribut": [130, 159, 160, 161, 162, 163, 187, 190, 191, 192, 197, 203, 265], "control": [46, 136, 146, 172, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 220, 284, 294], "conv": [27, 53, 132, 133, 134, 177, 178], "conv1": [32, 33, 34, 83, 155, 156, 157, 187, 188, 189, 190, 191, 192], "conv1d": [97, 105, 132, 158, 165, 187, 190], "conv1dmodel": 155, "conv2": [32, 33, 34, 83, 155, 156, 157], "conv2d": [80, 83, 97, 105, 133, 158, 165, 177, 188, 191, 194], "conv2dmodel": 156, "conv3d": [97, 105, 134, 158, 165, 178, 189, 192], "conv3dmodel": 157, "conv_bia": [132, 133, 134], "conv_config": 67, "conv_lay": [31, 80], "convblock": 194, "convbnrelu1d": 137, "convbnrelu2d": 137, "convbnrelu3d": 137, "conveni": [4, 22, 73], "convent": 226, "converg": [17, 153, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 286], "convers": [171, 174, 288, 294], "convert": [5, 6, 67, 76, 78, 92, 152, 221, 273, 283, 284, 288, 294], "convnetwork": 80, "convolut": [21, 22, 24, 25, 27, 31, 32, 33, 34, 35, 46, 47, 48, 49, 50, 51, 52, 53, 59, 60, 61, 62, 63, 67, 72, 73, 74, 80, 94, 95, 96, 98, 132, 133, 134, 135, 136, 155, 156, 157, 188, 189, 191, 192, 274], "convolv": [94, 95, 96, 155, 156, 157], "coordin": 273, "core": [0, 1, 2, 3, 77, 194, 195, 221, 294], "corinna": 6, "corner": [130, 285, 287], "correct": [79, 171, 174, 200, 201, 202, 203, 204, 284], "correctli": [17, 77, 79, 80, 81, 82, 83, 171, 174, 220], "correspond": [0, 1, 2, 5, 6, 12, 44, 45, 64, 65, 66, 79, 81, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 106, 108, 130, 149, 152, 166, 168, 176, 177, 178, 179, 180, 181, 188, 189, 197, 205, 207, 224, 225, 227, 228, 231, 251, 252, 258, 260, 271, 274, 276, 280, 282], "cort": 6, "cosh": [242, 259, 264], "cosin": [244, 248, 249, 258], "cost": [46, 74], "could": 77, "count": [74, 75, 269], "counterclockwis": [131, 290], "cover": [9, 94, 95, 96], "coverag": [119, 120, 121], "creat": [2, 3, 8, 21, 22, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 80, 83, 136, 194, 210, 212, 220, 233, 237, 238, 239, 240, 241, 273, 279, 283, 294], "creation": [80, 83, 294], "criterion": [170, 171, 172, 173, 174], "critic": [17, 196, 220], "crop": [285, 287, 294], "cross": [109, 110, 170, 171], "cross_entropi": [105, 112], "crossentropyloss": [165, 175], "cube": 242, "cumul": [86, 147], "current": [77, 197, 200, 206, 209], "custom": [4, 8, 21, 22, 28, 29, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 54, 55, 56, 57, 58, 59, 60, 61, 62, 67, 72, 73, 76, 79, 80, 81, 82, 83, 131, 132, 133, 134, 146, 148, 194, 220, 237], "custom_config": 67, "custom_lenet": 31, "customiz": 294, "custommodul": 76, "customnetwork": 79, "customparametermodel": [81, 82], "cvpr": 74, "d": [74, 96, 103, 121, 124, 128, 134, 178, 181, 182, 186, 189, 192, 210, 234, 290], "d_": [96, 121, 124, 128, 157, 186, 189, 192], "d_1": 182, "d_2": 182, "d_n": 182, "d_out": [96, 124, 128], "dampen": [197, 205, 207], "data": [4, 5, 6, 8, 15, 76, 78, 82, 93, 94, 96, 98, 102, 103, 108, 131, 132, 133, 134, 136, 149, 153, 155, 156, 157, 168, 181, 187, 189, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 213, 220, 221, 222, 223, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 268, 274, 275, 276, 277, 278, 280, 283, 284, 287, 288, 289, 290, 291, 294], "databas": 6, "dataload": [2, 3], "dataset": [3, 5, 6, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 131, 199, 211, 283, 285, 294], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 230, "debug": [75, 83, 209, 218, 294], "decai": [197, 198, 199, 200, 201, 202, 203, 204, 205, 207], "decompos": [10, 18, 20], "decomposit": [9, 10, 14, 17, 18, 20], "decor": [47, 48, 49, 50, 51, 52, 212], "decoupl": [198, 199, 201, 202, 203, 204], "decreas": [200, 201, 206], "deep": [1, 3, 4, 8, 27, 35, 36, 37, 38, 40, 41, 47, 48, 49, 50, 51, 52, 54, 55, 58, 74, 115, 147, 150, 194, 220, 283, 284, 294], "deeper": [8, 24, 26, 29, 35, 42, 74, 150], "def": [0, 1, 2, 3, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 166, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284], "default": [1, 5, 6, 16, 20, 21, 22, 23, 24, 25, 26, 28, 29, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 85, 88, 92, 94, 95, 96, 99, 100, 101, 102, 103, 109, 110, 111, 113, 114, 115, 117, 118, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 148, 152, 155, 156, 157, 159, 160, 161, 162, 163, 166, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 187, 188, 189, 190, 191, 192, 195, 196, 203, 209, 215, 216, 217, 219, 221, 233, 234, 235, 236, 237, 238, 239, 240, 241, 253, 254, 255, 262, 266, 267, 268, 269, 271, 273, 274, 276, 279, 282, 284, 288, 289, 291], "defin": [1, 3, 4, 8, 23, 24, 25, 26, 27, 28, 29, 31, 35, 53, 64, 65, 66, 67, 79, 80, 81, 82, 83, 147, 170, 171, 172, 173, 174, 187, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 213, 216, 217, 231, 236, 247, 266, 283, 294], "definit": [8, 10, 132, 133, 134, 294], "degre": [131, 290, 294], "delai": 197, "delta": [92, 111, 152, 172, 198], "delta_": [92, 152], "demonstr": [8, 9, 59, 60, 61, 62, 74, 194, 213], "denomin": [115, 117, 118, 132, 133, 134, 176, 177, 178, 179, 180, 181, 182, 198, 199, 200, 201, 202, 203, 204, 205, 223], "denot": [15, 151, 155, 156, 157, 159, 160, 161, 162, 163, 266], "dens": [8, 199], "dense1": 8, "dense2": 8, "densenet": 135, "densiti": [86, 147], "depend": [8, 15, 16, 82, 109, 110, 111, 113, 114, 130, 155, 224, 234, 253, 255, 276, 280, 287, 288, 292], "depth": [80, 96, 103, 121, 124, 128, 157, 178, 181, 186, 189, 192], "depthwis": [94, 95, 96], "deriv": [17, 18, 92, 119, 120, 121, 147, 152, 153, 155, 156, 157, 166, 168, 212], "descend": 20, "descent": [8, 197, 207], "describ": [11, 12], "descript": 294, "deseri": 76, "design": [3, 4, 8, 9, 21, 22, 24, 25, 26, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 54, 57, 73, 74, 78, 80, 81, 82, 83, 85, 90, 150, 159, 194, 213, 294], "desir": [76, 119, 120, 121, 184, 185, 186, 266, 268], "destin": 77, "det": [9, 13], "det_a": 11, "detail": [8, 75, 196, 220, 226], "detect": 74, "determin": [0, 8, 9, 10, 11, 31, 44, 45, 119, 120, 121, 140, 141, 144, 145, 155, 156, 157, 184, 185, 186, 188, 189, 191, 192, 205, 209, 215, 216, 217, 219, 235, 236, 285, 287], "determinist": 131, "develop": [8, 194, 220, 294], "deviat": [140, 142, 144, 283, 286, 294], "diag": [17, 242], "diagon": [17, 18, 20, 234, 237, 265], "diagonaliz": 12, "dict": [22, 24, 25, 26, 28, 29, 31, 35, 44, 45, 47, 48, 49, 50, 51, 52, 53, 59, 60, 61, 62, 64, 65, 66, 73, 77, 79, 81, 167, 195], "dictionari": [31, 77, 78, 79, 81, 83, 195], "differ": [0, 15, 23, 31, 59, 60, 61, 62, 80, 83, 92, 106, 130, 136, 152, 166, 173, 196, 210, 218, 220, 232, 241, 267, 278, 294], "differenti": [8, 10, 19, 147, 194, 215, 216, 217, 219, 221, 233, 235, 236, 238, 240], "digit": [5, 6, 34, 74], "dilat": [94, 95, 96, 132, 133, 134, 155, 156, 157], "dilation_height": 98, "dilation_width": 98, "dim": [171, 174], "dimens": [11, 12, 14, 15, 18, 19, 20, 21, 35, 46, 63, 67, 72, 74, 78, 92, 106, 108, 115, 117, 118, 120, 121, 130, 135, 136, 152, 155, 156, 157, 176, 177, 178, 179, 180, 181, 182, 185, 186, 188, 189, 190, 191, 192, 210, 213, 215, 219, 221, 225, 235, 253, 254, 255, 262, 265, 266, 267, 269, 271, 274, 276, 278, 279, 280, 281, 282, 285, 287, 292], "dimension": [15, 17, 18, 20, 94, 95, 96, 122, 123, 124, 126, 127, 128, 136, 155, 156, 157, 161, 162, 163, 176, 177, 178, 179, 180, 181, 187, 188, 189, 190, 191, 192, 210, 225, 226, 230, 234, 251, 254, 262, 265, 267, 270, 275, 276, 278, 280], "diminish": 199, "direct": [12, 170, 171, 172, 173, 174, 197, 205, 206, 207], "directli": [79, 80, 81, 82, 130, 198, 199, 201, 202, 203, 204, 218, 220, 268, 294], "directori": [3, 4, 5, 6], "disabl": [209, 211], "discontinu": 257, "discrep": [170, 171, 174], "discret": [216, 220], "disk": 3, "displai": [22, 73, 75], "distribut": [86, 92, 130, 140, 141, 142, 143, 144, 145, 147, 152, 155, 156, 157, 159, 160, 161, 162, 163, 166, 168, 171, 174, 187, 188, 189, 215, 216, 217, 219, 220, 254, 262, 265, 267, 279, 286, 288, 289, 290, 291], "div": 242, "divers": [131, 289, 291, 294], "diversifi": 294, "divid": [1, 17, 80, 83, 92, 94, 95, 96, 152, 170, 171, 172, 173, 174, 223, 286], "divis": [8, 17, 94, 95, 96, 159, 160, 161, 162, 163, 198, 199, 200, 201, 202, 203, 204, 205, 223], "do": [17, 19, 76, 79, 80, 81, 82, 99, 100, 101, 102, 194, 204, 209, 241, 265, 274], "document": [4, 8, 74, 196, 213, 220], "doe": [8, 15, 16, 17, 18, 20, 75, 76, 79, 80, 81, 82, 83, 145, 200, 201, 206, 209, 211, 215, 216, 217, 218, 219, 233, 234, 235, 236, 237, 238, 239, 240, 241, 277], "doesn": 211, "doi": 74, "domain": 4, "don": 211, "dot": [12, 15, 79, 80, 81, 82, 83, 182, 190, 191, 192, 225, 230, 242, 269, 271, 279, 282], "down": [3, 194, 292], "download": [4, 5, 6], "drawback": 85, "drawn": [215, 216, 217, 219, 220, 290], "drop": [159, 160, 161, 162, 163], "dropout": [21, 25, 67, 72, 74, 86, 99, 101, 102, 103, 159, 161, 162, 163], "dropout1d": [104, 105, 164, 165], "dropout1dmodel": 161, "dropout2d": [104, 105, 164, 165], "dropout3d": [104, 105, 164, 165], "dropout_prob": 25, "dropoutmodel": 160, "dtype": [76, 78, 221, 233, 234, 235, 236, 237, 238, 239, 240, 241, 268, 284], "due": [15, 17, 94, 95, 149, 290], "dummi": 75, "duplic": [79, 81], "dure": [3, 8, 11, 12, 14, 17, 18, 20, 23, 24, 25, 35, 76, 77, 78, 79, 80, 81, 82, 83, 92, 99, 100, 101, 102, 103, 115, 117, 131, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 187, 188, 189, 190, 191, 192, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 211, 221, 222, 253, 254, 255, 262, 267, 284, 287, 290, 294], "dy": [88, 148], "dynam": [0, 2, 3, 63, 74, 77, 80, 81, 82, 83, 119, 120, 121, 136, 182, 184, 185, 186, 199, 204, 209], "dynamicnetwork": 80, "e": [0, 11, 12, 14, 15, 18, 20, 24, 25, 26, 28, 29, 31, 32, 33, 34, 67, 76, 92, 136, 151, 152, 159, 171, 195, 198, 205, 206, 237, 249, 251, 252, 259, 264, 265, 269, 288], "each": [1, 2, 3, 4, 12, 15, 17, 18, 20, 21, 31, 35, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 63, 64, 65, 66, 67, 72, 74, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 106, 108, 115, 117, 119, 120, 121, 135, 136, 149, 152, 155, 156, 157, 159, 160, 161, 162, 163, 166, 168, 170, 171, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 198, 199, 200, 201, 202, 203, 204, 205, 206, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 269, 271, 273, 274, 276, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 292, 294], "earli": 204, "eas": [4, 8], "easi": [2, 3, 4, 8, 47, 48, 49, 50, 51, 52, 78, 79, 81], "easier": [3, 79, 80, 83], "easili": [4, 78, 82, 294], "eccv": 74, "economi": 20, "edg": 274, "educ": [8, 74], "effect": [74, 79, 80, 81, 82, 83, 92, 94, 95, 96, 98, 146, 147, 149, 151, 152, 153, 176, 177, 178, 179, 180, 181, 182, 209, 210, 211, 271, 282], "effici": [1, 2, 3, 5, 6, 8, 9, 14, 19, 28, 29, 46, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 74, 98, 171, 194, 211], "eig": 13, "eigenvalu": [12, 18], "eigenvector": 12, "eigval": 12, "eigvec": 12, "either": [108, 213, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 268, 273], "element": [0, 17, 18, 25, 78, 82, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 132, 133, 134, 135, 149, 152, 155, 156, 157, 159, 160, 161, 162, 163, 170, 171, 172, 173, 174, 182, 187, 188, 189, 190, 191, 192, 210, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 270, 273, 274, 276, 277, 278, 280], "elementwise_affin": 182, "elsewher": [190, 191, 192, 237], "elu": [87, 105, 154, 165], "elumodel": 146, "empti": [77, 83, 242], "empty_lik": 242, "enabl": [0, 1, 2, 3, 8, 15, 20, 28, 63, 64, 65, 66, 74, 77, 78, 79, 80, 81, 82, 149, 155, 156, 157, 166, 168, 194, 196, 209, 211, 215, 216, 217, 219, 221, 283], "encapsul": [194, 221], "encod": [171, 174], "encourag": [160, 161, 162, 163, 170, 171, 174, 200], "end": [16, 85, 88, 89, 90, 146, 148, 149, 150, 172, 173, 174, 187, 188, 189, 190, 191, 192, 204, 206, 227, 228, 230, 233, 243, 247, 253, 255, 257, 269, 274, 294], "enforc": [77, 79, 81], "engin": 17, "enhanc": [25, 26, 28, 29, 33, 44, 45, 59, 60, 61, 62, 72, 73, 74, 79, 81, 136, 294], "ensur": [3, 5, 6, 17, 18, 19, 76, 77, 78, 79, 80, 81, 82, 83, 92, 119, 120, 121, 132, 133, 134, 148, 152, 159, 160, 161, 162, 163, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 188, 189, 190, 191, 192, 194, 195, 197, 198, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 213, 215, 216, 217, 218, 219, 220, 231, 254, 262, 267, 274, 284, 285, 286, 287, 288, 292, 294], "enter": 211, "entir": [3, 101, 102, 103, 162, 163, 220], "entri": [31, 278], "entropi": [109, 110, 170, 171], "environ": 8, "ep": [109, 110, 115, 117, 118, 132, 133, 134, 170, 171, 176, 177, 178, 179, 180, 181, 182, 198, 199, 200, 201, 202, 203, 204, 205], "epoch": [1, 3], "epsilon": [170, 171, 176, 177, 178, 179, 180, 181, 182, 198, 199, 200, 201, 202, 203, 204, 205], "equal": [15, 130, 187, 188, 189, 285, 287], "equat": [12, 17, 19], "equival": [226, 265, 275], "error": [0, 3, 12, 14, 77, 80, 81, 82, 83, 86, 111, 113, 147, 170, 171, 172, 173, 194, 195, 211, 213], "especi": [3, 79, 81, 82, 151, 210, 211, 213, 218, 283, 284, 288, 294], "essenti": [1, 3, 8, 9, 15, 17, 27, 95, 98, 194, 218, 220, 253, 283, 284, 288, 294], "estim": [173, 200, 201, 202, 203, 204, 205], "et": [24, 74], "eta": 206, "eta_": 206, "etc": [170, 284], "euclidean": 16, "european": 74, "evalu": [77, 115, 117, 159, 160, 161, 162, 163, 176, 177, 178, 179, 180, 181, 294], "even": [198, 211, 233, 234, 237, 238, 239, 240, 241], "evenli": [119, 120, 121, 184, 185, 186, 233], "everi": [1, 294], "everywher": 257, "exact": [77, 80, 266, 288, 290], "exactli": 83, "exampl": [4, 226], "excel": 26, "except": [0, 257, 269, 271, 282], "excit": [53, 56, 59, 60, 61, 62, 74, 135], "exclus": [216, 219, 233], "exdb": 6, "execut": [80, 211], "exist": [19, 79, 81, 83, 212, 269], "exit": 211, "exp": [85, 90, 91, 93, 146, 150, 242], "expand": [4, 98, 276, 280], "expect": [10, 80, 83, 159, 160, 161, 162, 163, 182, 194, 213], "expens": 3, "experi": [8, 218, 220, 294], "experiment": 220, "explan": [15, 17, 21, 67, 72, 119, 120, 121, 184, 185, 186, 197], "explicit": 83, "explicitli": [74, 79, 81], "explod": [150, 176, 177, 178], "explor": [194, 220], "expon": [15, 231], "exponenti": [85, 90, 92, 146, 150, 152, 159, 200, 201, 202, 203, 204, 251], "extend": [4, 46, 63], "extens": [74, 196], "extern": [4, 8], "extract": [23, 27, 35, 46, 63, 74, 98, 157, 187, 189, 212, 234, 253, 255, 285, 287], "extractor": [31, 32, 33, 34], "extrem": [17, 36, 74], "ey": 242, "f": [1, 4, 5, 6, 8, 81, 82, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 152], "f_1": 135, "f_2": 135, "facilit": [23, 79, 83, 92, 152, 155, 156, 157, 194, 196, 286, 294], "factor": [25, 85, 94, 95, 96, 98, 135, 144, 145, 197, 204, 205, 206, 207, 213], "failur": [79, 80, 81, 82, 194], "fals": [1, 5, 6, 20, 35, 75, 76, 77, 78, 99, 100, 101, 102, 103, 115, 117, 130, 138, 140, 141, 142, 143, 144, 145, 155, 156, 157, 166, 168, 200, 201, 205, 209, 215, 216, 217, 219, 221, 233, 234, 235, 236, 237, 238, 239, 240, 241, 253, 254, 255, 262, 267, 268, 284], "famili": 212, "fan": [140, 141, 144, 145], "fan_in": [140, 141], "fan_out": [140, 141], "fashion": 5, "fashion_train": 5, "fashionmnist": 7, "fast": 204, "faster": [199, 203, 211], "fc": [27, 35, 46, 53, 63, 80, 135, 156, 157, 187, 188, 189, 190, 191, 192], "fc1": [33, 34, 75, 79, 83, 147, 149, 150, 151, 153, 168], "fc2": [33, 34, 75, 79, 83, 147, 149, 150, 151, 153, 168], "fc3": 34, "featur": [3, 21, 23, 26, 27, 31, 32, 33, 34, 35, 46, 47, 48, 49, 50, 51, 52, 54, 56, 57, 63, 64, 65, 66, 67, 72, 73, 74, 106, 108, 115, 132, 133, 134, 135, 136, 157, 160, 161, 162, 163, 166, 168, 176, 177, 178, 179, 180, 181, 182, 187, 188, 189, 190, 191, 192, 194, 199], "feature_extractor": 31, "fed": [3, 294], "feed": [3, 221, 294], "feedforward": 75, "fergu": [72, 74], "fetch": 0, "few": 75, "fewer": 1, "field": [6, 63, 74, 136], "file": [3, 212], "fill": [138, 142, 143, 215, 216, 217, 219, 238, 239, 240, 241], "filter": [72, 74, 94, 95, 96, 98, 132, 133, 134, 156, 157], "filter_height": 98, "filter_s": 98, "filter_width": 98, "final": [23, 24, 25, 26, 27, 28, 29, 35, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 63, 64, 65, 66, 79, 80, 81, 82, 83, 136, 283, 294], "find": [19, 253, 255], "fine": [135, 294], "finish": 211, "first": [5, 6, 12, 31, 72, 75, 80, 81, 106, 135, 166, 200, 201, 202, 203, 204, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 273, 282, 283, 284, 294], "fit": 194, "fix": [80, 274], "flatten": [27, 31, 83, 98, 230, 272, 275, 276], "flexibl": [1, 3, 4, 8, 23, 27, 28, 29, 31, 35, 59, 60, 61, 62, 67, 74, 79, 80, 81, 82, 83, 194, 196, 213, 238, 239, 284, 294], "flip": [289, 291, 294], "float": [2, 5, 6, 25, 76, 78, 85, 88, 99, 100, 101, 102, 103, 109, 110, 111, 115, 117, 118, 131, 132, 133, 134, 138, 142, 143, 144, 145, 146, 148, 159, 160, 161, 162, 163, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 213, 219, 221, 233, 236, 247, 268, 286, 288, 289, 290, 291], "float32": [76, 78, 221, 233, 234, 237, 238, 240, 268, 284], "float64": [241, 268, 284], "flow": [26, 27, 53, 74, 83, 145, 147, 151, 153, 155, 156, 157, 166, 168, 209], "fly": [2, 3], "fname": 3, "focu": 8, "focus": 8, "follow": [0, 8, 9, 12, 18, 19, 20, 21, 59, 60, 61, 62, 67, 72, 75, 85, 86, 88, 89, 90, 91, 92, 93, 106, 108, 130, 132, 133, 134, 135, 136, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 212, 213, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 253, 255, 273, 277, 285, 286, 287, 288, 289, 290, 291, 294], "form": [18, 136, 230, 273, 276, 280, 294], "format": [2, 3, 5, 6, 75, 171, 174, 284], "formul": 86, "formula": [12, 20, 92, 119, 120, 121, 152, 172, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 226, 267, 288], "forward": [8, 21, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 64, 65, 66, 67, 72, 75, 76, 77, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "found": 8, "foundat": [27, 53, 77, 194, 196, 221], "four": 274, "frac": [10, 11, 12, 14, 15, 16, 17, 19, 20, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 106, 108, 119, 120, 121, 122, 123, 124, 126, 127, 128, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 187, 188, 189, 190, 191, 192, 198, 199, 200, 201, 202, 203, 204, 205, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 286], "frame": 103, "framework": [4, 8, 74, 171, 174, 176, 177, 178, 179, 180, 181, 195, 196, 294], "frequent": [171, 174], "from": [0, 1, 2, 3, 4, 5, 6, 8, 15, 17, 27, 35, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 75, 76, 77, 78, 79, 80, 81, 82, 83, 98, 106, 115, 117, 130, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 155, 156, 157, 159, 160, 161, 162, 163, 166, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 187, 188, 189, 194, 195, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 210, 211, 212, 213, 215, 216, 217, 219, 220, 221, 226, 227, 228, 232, 234, 253, 254, 255, 262, 267, 269, 271, 273, 276, 278, 279, 280, 282, 285, 286, 287, 288, 289, 290, 291, 294], "full": 20, "full_matric": 20, "fulli": [4, 9, 21, 27, 31, 32, 33, 34, 35, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 63, 64, 65, 66, 67, 72, 74, 108, 135, 136, 168, 220], "func": 212, "function": [3, 4, 5, 6, 8, 9, 77, 79, 80, 81, 82, 83, 132, 133, 134, 135, 146, 147, 148, 149, 150, 151, 152, 153, 159, 160, 161, 162, 163, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 194, 196, 213, 220, 283, 294], "fundament": [8, 108, 168, 284], "further": [8, 220, 254, 262, 267], "fuse": 63, "fusion": [64, 65, 66], "futur": 167, "g": [0, 11, 12, 15, 18, 20, 24, 25, 26, 28, 29, 31, 32, 33, 34, 67, 135, 136, 159, 195, 198, 205, 269, 288], "g_": 199, "g_t": 205, "gain": [144, 145], "gamma": [176, 177, 178, 179, 180, 181, 182], "gap": [35, 46, 63, 135], "gaussian": [86, 147], "gelu": [87, 105, 154, 165], "gelunetwork": 147, "gener": [17, 75, 131, 159, 160, 161, 162, 163, 180, 201, 203, 204, 211, 215, 216, 217, 218, 219, 220, 225, 233, 235, 236, 273, 287, 288, 289, 291, 294], "get": [5, 6], "github": 5, "give": [8, 197, 205], "given": [11, 12, 15, 17, 18, 20, 98, 170, 171, 174, 195, 209, 239, 241, 283, 288, 289, 291, 294], "global": [0, 35, 46, 53, 63, 135, 209, 211, 218, 220], "go": [24, 74], "goal": [170, 171, 174], "googlenet": [24, 74], "gpu": 74, "grad": [76, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 98, 106, 108, 130, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 187, 188, 189, 190, 191, 192, 195, 196, 215, 216, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 289, 291, 292], "grad_output": 15, "gradient": [8, 9, 26, 27, 74, 76, 78, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 215, 216, 217, 219, 233, 234, 235, 236, 237, 238, 239, 240, 241, 268, 284], "grain": 135, "graph": [8, 145, 221, 233, 234, 237, 238, 239, 240, 241, 284], "grayscal": [5, 6, 31, 32, 33, 34, 288, 294], "greater": 247, "green": 288, "grid": 273, "groundbreak": 74, "group": [46, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 63, 74, 80, 94, 95, 96, 132, 133, 134, 136, 155, 156, 157, 195, 196], "group1": 80, "group2": 80, "groupedconvblock": 46, "guarante": 218, "h": [35, 47, 48, 49, 50, 51, 52, 64, 65, 66, 95, 96, 98, 102, 103, 120, 121, 123, 124, 127, 128, 130, 131, 133, 134, 135, 177, 178, 180, 181, 185, 186, 189, 192, 285, 287], "h_": [95, 96, 120, 121, 123, 124, 127, 128, 130, 156, 157, 185, 186, 188, 189, 191, 192], "h_out": [95, 96, 123, 124, 127, 128], "h_stack": 271, "ha": [0, 12, 75, 83, 94, 95, 96, 132, 133, 134, 170, 171, 176, 177, 178, 179, 180, 181, 182, 195, 196, 226, 265, 269, 271, 279, 282, 288], "half": 260, "han": 5, "hand": 19, "handl": [0, 3, 8, 17, 77, 79, 80, 81, 82, 83, 171, 174, 194, 196, 211], "handwritten": [5, 6, 34], "hardwar": 8, "hat": [200, 201, 202, 203, 204], "have": [0, 1, 11, 12, 14, 17, 18, 20, 78, 80, 82, 83, 95, 96, 145, 194, 237, 238, 239, 240, 241, 253, 255, 269, 271, 273, 278, 279, 282, 286, 292], "he": 74, "height": [95, 96, 98, 102, 103, 120, 121, 123, 124, 127, 128, 130, 131, 136, 156, 157, 177, 178, 180, 181, 185, 186, 188, 189, 191, 192, 285, 287, 292], "help": [8, 25, 88, 90, 103, 146, 148, 150, 153, 176, 177, 178, 187, 188, 190, 191, 197, 200, 201, 203, 209, 210, 211, 213], "henc": 277, "here": [3, 10, 77, 106, 194, 196, 210, 211, 213, 220, 283, 284, 294], "hidden": [21, 72, 80], "hidden_s": 80, "hierarch": [80, 83, 194], "hierarchi": 156, "hierarchicalnetwork": 80, "high": [8, 43, 58, 216, 219], "higher": [46, 171, 174, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 225, 226, 230, 251], "highest": 216, "highli": 74, "highlight": [135, 190, 191, 192], "hint": 213, "histor": 199, "histori": [215, 216, 217, 219, 233, 234, 235, 236, 237, 238, 239, 240, 241], "hold": [79, 80, 81, 82], "horizont": [271, 279, 289, 294], "hot": [171, 174], "how": [2, 3, 8, 59, 60, 61, 62, 80, 83, 194, 213, 294], "howev": [76, 145], "hstack": 272, "http": [5, 6], "hu": [74, 135], "huber": [111, 172], "huber_loss": [105, 112], "huberloss": [165, 175], "huberregressionmodel": 172, "hue": 294, "hyperbol": [93, 153, 249, 259, 264], "hyperparamet": [35, 46, 195, 197], "i": [0, 1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294], "iccv": 74, "ideal": [8, 83], "ident": [14, 15, 74, 131, 165, 169, 218, 220, 237, 277], "identifi": 81, "idx": [2, 3], "ieee": [74, 135], "ii": 265, "ij": [92, 130, 152, 224, 225, 226, 230, 273], "ik": [224, 225, 226], "ill": [11, 17], "ilsvrc": 74, "imag": [3, 4, 5, 6, 21, 22, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 56, 57, 58, 59, 60, 61, 62, 73, 74, 95, 117, 131, 133, 135, 156, 180, 273, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294], "image_dir": 3, "image_path": 3, "imagedataset": 3, "imageio": 3, "imagenet": [44, 45, 59, 60, 61, 62, 74], "imbal": [171, 174], "impact": [74, 203], "implement": [2, 3, 8, 17, 21, 23, 24, 25, 26, 28, 29, 31, 35, 44, 45, 47, 48, 49, 50, 51, 52, 53, 72, 74, 77, 98, 136, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 271, 282, 288], "impli": [155, 156], "import": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 44, 45, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 100, 103, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294], "improp": [80, 83, 220], "improv": [24, 25, 26, 27, 29, 35, 46, 59, 60, 61, 62, 63, 72, 74, 115, 131, 135, 147, 150, 153, 197, 198, 199, 200, 201, 202, 203, 204, 205, 213, 287, 290, 294], "imread": 3, "in1_featur": [106, 166], "in2_featur": [106, 166], "in_channel": [35, 80, 83, 132, 133, 134, 135, 136, 155, 156, 157, 177, 178, 187, 188, 189, 190, 191, 192, 194], "in_featur": [79, 80, 83, 108, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 159, 160, 161, 166, 168, 170, 171, 172, 173, 174, 176, 179, 182, 187, 188, 189, 190, 191, 192], "incept": [24, 25, 26, 27, 28, 29, 30, 74], "inception_resnet_v1": 74, "inception_resnet_v2": 74, "inception_v1": 74, "inception_v3": 74, "inception_v4": 74, "inceptionresnet": [28, 29], "includ": [3, 4, 5, 8, 9, 15, 16, 21, 23, 24, 25, 28, 31, 35, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 63, 67, 72, 75, 77, 78, 80, 82, 83, 130, 132, 133, 134, 194, 195, 196, 203, 213, 220, 226, 274], "inclus": [78, 81, 216, 219], "incom": [108, 168], "incomplet": 2, "incompletedataset": 2, "incorpor": [20, 46, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 74, 147], "increas": [46, 47, 48, 49, 50, 51, 52, 63, 94, 95, 96, 98, 131, 199, 206, 210, 271, 282, 288, 289, 291, 294], "independ": [80, 94, 95, 96, 159, 160, 161, 162, 163, 182, 226, 236, 286, 288, 290, 292], "index": [0, 2, 5, 6, 210, 233, 234, 237, 273, 277], "indexerror": 0, "indic": [0, 1, 67, 75, 78, 80, 82, 83, 110, 114, 171, 174, 187, 209, 221, 285, 287], "individu": [3, 80, 83, 172, 182, 196, 199, 206], "induc": [90, 150], "inf": 263, "infer": [59, 60, 61, 62, 80, 83, 211], "infin": [18, 20, 202], "inform": [8, 74, 75, 76, 135, 196, 198, 211], "infti": [16, 204], "inherit": [1, 197, 205, 207], "init": 139, "initi": [1, 27, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 65, 66, 68, 69, 70, 71, 76, 78, 79, 80, 81, 82, 83, 136, 138, 140, 141, 142, 143, 144, 145, 155, 156, 157, 166, 168, 170, 171, 172, 173, 174, 176, 177, 178, 182, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 215, 218, 219, 220, 233, 237, 238, 239, 240, 241, 268], "initial_accumulator_valu": 199, "inner": [8, 224, 242], "input": [8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 46, 59, 60, 61, 62, 63, 72, 74, 75, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 213, 220, 221, 222, 224, 225, 226, 230, 234, 236, 239, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294], "input1": 166, "input2": 166, "input_": [21, 72, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 184, 185, 186], "input_1": 106, "input_2": 106, "input_data": [146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 187, 188, 189, 190, 191, 192], "input_s": [80, 82, 152, 171, 174], "input_shap": 75, "input_tensor": [8, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 64, 65, 66, 67, 76, 79, 80, 81, 82, 83, 92, 135, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 187, 188, 189, 190, 191, 192, 194, 285, 286, 287, 288, 289, 290, 291, 292], "insid": [3, 209, 211], "insight": [8, 74], "inspect": [77, 78, 83, 195], "instabl": [17, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207], "instal": 8, "instanc": [0, 1, 8, 22, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 73, 75, 77, 78, 79, 81, 82, 83, 117, 179, 180, 181, 182, 195, 212, 268, 276, 280, 294], "instance_norm": [105, 116, 179, 180, 181], "instancenorm1d": [165, 183], "instancenorm1dmodel": 179, "instancenorm2d": [165, 183], "instancenorm3d": [165, 183], "instanti": [2, 59, 60, 61, 62, 212], "instead": [8, 75, 79, 80, 81, 82, 83, 140, 141, 144, 145, 200, 201, 202, 211, 213, 235, 236], "int": [0, 1, 2, 5, 6, 15, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 92, 94, 95, 96, 98, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 138, 142, 143, 144, 145, 152, 155, 156, 157, 166, 168, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 200, 201, 202, 203, 204, 206, 212, 215, 216, 217, 218, 219, 221, 233, 234, 235, 237, 238, 240, 247, 253, 254, 255, 262, 266, 267, 268, 269, 274, 276, 277, 278, 279, 280, 281, 285, 287, 292], "integ": [1, 3, 15, 53, 67, 94, 95, 96, 120, 121, 155, 156, 157, 182, 185, 186, 188, 189, 190, 191, 192, 213, 216, 217, 219, 220, 235, 238, 240, 254, 262, 266, 267, 274, 276, 277, 280], "integr": [1, 2, 4, 5, 6, 9, 74, 78, 80, 82, 83, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 166, 168, 187, 188, 189, 190, 191, 192], "intellig": [74, 135], "intend": [76, 81, 82], "intens": [17, 36, 286, 288], "intent": 213, "interact": [106, 166, 194, 220], "interdepend": 74, "interfac": [2, 77, 80, 196], "interfer": [209, 211], "intermedi": [17, 135], "intern": [36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 56, 57, 58, 74, 79, 80, 81, 82, 83, 171, 174, 194, 285, 286, 287, 288, 289, 290, 291, 292], "interpol": [105, 129, 292], "interpret": [74, 92, 152, 213, 269], "interv": [215, 219, 233], "introduc": [24, 25, 46, 74, 89, 135, 147, 149, 151, 153, 159, 160, 161, 162, 163, 287, 290, 294], "introspect": 83, "intuit": [8, 79, 81, 194, 294], "inv": 13, "inv_a": 14, "invari": [188, 191], "invers": [8, 11, 14, 15, 17, 199, 244, 245, 246], "invert": [11, 14, 15, 19], "invok": 212, "involv": [10, 11, 12, 14, 17, 18, 20, 63, 85, 86, 88, 89, 90, 91, 93, 106, 108, 130, 155, 156, 157, 166, 168, 213, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 241, 251, 252, 253, 255, 258, 260, 273, 274, 276, 280], "is_leaf": 221, "issu": [3, 150, 176, 177, 178, 200, 201], "item": [5, 173], "iter": [0, 1, 2, 3, 76, 77, 80, 82, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 233], "ith": [92, 152], "its": [4, 15, 17, 21, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 54, 55, 56, 57, 58, 64, 65, 66, 72, 74, 75, 76, 79, 80, 81, 82, 94, 95, 96, 98, 131, 136, 145, 147, 149, 190, 191, 192, 194, 195, 198, 206, 209, 210, 211, 212, 233, 235, 236, 240, 253, 255, 268, 277, 286, 289, 291, 294], "itself": [10, 15, 79, 80, 81, 82], "j": [6, 92, 135, 152, 176, 177, 178, 179, 180, 181, 187, 188, 190, 191, 273, 279, 285, 287], "jie": 74, "jk": 225, "join": [3, 269], "json": 212, "k": [15, 94, 155, 171, 177, 178, 180, 181, 187, 190, 191, 224, 225, 234, 237, 269], "k_d": [96, 157, 189, 192], "k_h": [95, 96, 156, 157, 188, 189, 192], "k_w": [95, 96, 156, 157, 188, 189, 192], "kaim": [74, 140, 141, 144, 145], "kaiming_norm": 139, "kaiming_uniform": 139, "karen": 74, "kashif": 5, "keep": [77, 149, 198, 211, 277], "keep_grad": [78, 215, 216, 217, 219, 221, 233, 234, 235, 236, 237, 238, 239, 240, 241, 268, 284], "keep_var": 77, "keepdim": [253, 254, 255, 262, 267], "kei": [74, 77, 79, 81, 83, 195], "kept": [254, 262, 267], "kernel": [31, 32, 33, 34, 63, 64, 65, 66, 72, 74, 94, 95, 96, 98, 119, 120, 121, 122, 123, 124, 126, 127, 128, 132, 133, 134, 136, 155, 156, 157, 184, 185, 186, 188, 189, 192], "kernel_s": [63, 64, 65, 66, 80, 83, 122, 123, 124, 126, 127, 128, 132, 133, 134, 136, 155, 156, 157, 177, 178, 187, 188, 189, 190, 191, 192], "keyerror": 77, "keyword": [22, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 73, 77, 167], "kj": [224, 226], "known": 74, "krizhevski": 74, "kroneck": [92, 152], "kwarg": [22, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 73, 77, 167, 212], "l": [10, 17, 94, 101, 119, 122, 126, 132, 135, 159, 160, 161, 162, 163, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184], "l2": [197, 198, 199, 200, 201, 202, 203, 204, 205, 207], "l_": [94, 119, 122, 126, 155, 184, 187, 190], "l_out": [94, 122, 126], "label": [4, 5, 6, 25, 170, 171, 174], "lambd": 197, "lambda": [12, 90, 150, 197, 201], "lambda_1": 12, "lambda_2": 12, "lambda_i": 12, "lambda_n": 12, "languag": [4, 155, 166, 187, 190], "larg": [0, 3, 17, 36, 37, 38, 41, 54, 55, 74, 172, 194, 197, 200, 201, 202, 205, 206, 207, 211], "larger": [35, 63, 79, 81, 94, 95, 96, 98, 197, 227, 274, 285, 287, 292], "largest": 253, "last": [1, 92, 118, 152, 225, 226, 269, 289, 291], "latest": 4, "layer": [8, 21, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 79, 80, 83, 92, 108, 115, 117, 118, 132, 133, 134, 135, 136, 140, 141, 144, 145, 152, 155, 156, 157, 166, 167, 168, 174, 182, 187, 188, 189, 190, 191, 192, 194, 220, 274, 284], "layer1": 212, "layer2": 212, "layer_group": 80, "layer_norm": [105, 116, 182], "layer_sequ": [80, 83], "layernorm": [165, 183], "layernormmodel": 182, "lead": [80, 83, 147, 179, 180, 181, 182, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 220], "leaf": 221, "leaki": [88, 148], "leaky_relu": [87, 105, 148], "leakyrelu": [154, 165], "learn": [1, 3, 4, 5, 6, 8, 15, 17, 46, 47, 48, 49, 50, 51, 52, 72, 73, 74, 79, 80, 81, 82, 89, 92, 135, 146, 148, 149, 152, 155, 156, 157, 160, 161, 162, 163, 166, 168, 194, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 218, 283, 284, 294], "learnabl": [76, 77, 78, 115, 117, 118, 132, 133, 134, 155, 156, 157, 166, 168, 176, 177, 178, 179, 180, 181, 182, 194], "least": [17, 18, 20, 265], "lecun": [6, 74], "left": [15, 16, 17, 20, 86, 92, 147, 152, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 190, 191, 192, 285, 287], "leftarrow": 203, "len": [0, 1, 2, 3, 273], "lenet": [30, 32, 33, 34, 74], "lenet_1": 74, "lenet_4": 74, "lenet_5": 74, "length": [80, 94, 101, 119, 122, 126, 155, 167, 176, 179, 184, 187, 190, 274, 286], "leq": [172, 204, 231, 247], "lerp": 130, "less": [0, 85, 88, 111, 146, 148, 171, 172, 174, 247], "let": 12, "level": [8, 27], "leverag": [19, 26, 29, 47, 48, 49, 50, 51, 52, 74, 136, 194], "li": 74, "librari": [3, 8, 9, 77, 194, 195, 196, 212, 213, 220, 221, 294], "lightweight": [8, 39, 56, 136], "like": [8, 27, 47, 48, 49, 50, 51, 52, 64, 65, 66, 74, 76, 77, 80, 83, 94, 144, 145, 150, 159, 176, 177, 178, 179, 180, 181, 209, 210, 213, 268, 284, 294], "likelihood": [114, 171, 174], "limit": [75, 198, 247], "linalg": [8, 13], "linalgerror": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20], "linear": [8, 9, 10, 17, 18, 19, 53, 75, 79, 80, 81, 83, 85, 86, 88, 89, 90, 140, 141, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 159, 160, 161, 166, 167, 170, 171, 172, 173, 174, 176, 179, 182, 187, 188, 189, 190, 191, 192, 212, 237], "linearli": 172, "list": [0, 1, 31, 35, 46, 53, 63, 67, 75, 76, 78, 79, 80, 81, 82, 118, 136, 167, 182, 195, 213, 215, 216, 217, 219, 221, 234, 235, 236, 238, 239, 240, 241, 266, 277, 278, 281, 283], "listdir": 3, "liter": [35, 109, 110, 111, 113, 114, 130, 132, 133, 134, 136, 140, 141, 155, 156, 157, 170, 171, 172, 173, 174, 273], "ln": 231, "load": [3, 4, 5, 6, 76, 77, 78, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 212], "load_state_dict": [77, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "loader": [1, 2, 3], "local": [74, 98, 155], "locat": [74, 130], "log": [114, 170, 171, 174, 242], "log_softmax": 174, "logarithm": [231, 251, 252], "logic": [3, 184, 185, 186, 194, 195], "logit": [21, 72, 92, 152, 171], "logsoftmax": [171, 174], "long": [203, 266], "loop": [1, 80, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "loss": [8, 17, 79, 80, 81, 82, 83, 92, 109, 110, 111, 113, 114, 146, 147, 148, 149, 150, 151, 152, 153, 159, 160, 161, 162, 163, 167, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "low": [8, 27, 216, 219], "lower": [10, 143, 197, 205, 206, 207, 219], "lowest": 216, "lr": [195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "lu": 14, "lucid": [0, 1, 2, 5, 6, 13, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 214, 242, 272, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292], "m": [67, 79, 80, 83, 188, 189, 191, 192, 200, 201, 202, 203, 204, 237], "m_": [200, 201, 202, 203, 204], "m_t": [203, 204], "machin": [3, 5, 6, 8, 17, 135, 200, 210, 218], "magnitud": [205, 206, 294], "mai": [3, 8, 12, 14, 17, 80, 82, 131, 172, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 211, 220, 288, 294], "main": [8, 18, 27, 80, 234, 237], "maintain": [17, 46, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 76, 77, 79, 80, 81, 83, 90, 140, 141, 144, 145, 146, 147, 150, 159, 160, 161, 162, 163, 176, 177, 178, 179, 180, 181, 200, 205, 285, 288, 292], "make": [1, 3, 8, 23, 27, 31, 35, 74, 80, 83, 151, 171, 172, 182, 188, 191, 194, 199, 200, 201, 202, 210, 212, 220, 221, 226, 273, 283, 294], "manag": [8, 77, 79, 80, 81, 82, 83, 194, 196, 209, 211, 212, 220], "manhattan": 16, "mani": 75, "manipul": [8, 79, 81, 294], "manner": [80, 83], "manual": [109, 110, 114, 170, 171, 174, 211], "map": [35, 46, 56, 63, 74, 77, 91, 93, 135, 151, 153], "mask": [76, 159, 160, 161, 162, 163], "match": [19, 77, 80, 83, 109, 111, 113, 118, 132, 133, 134, 195, 251, 276, 277, 280, 281, 286, 294], "math": [248, 258, 263], "mathbf": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 106, 108, 130, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 187, 188, 189, 190, 191, 192, 224, 225, 226, 230, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292], "mathcal": [140, 142, 144, 159, 160, 161, 162, 163, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182], "mathemat": [14, 132, 133, 134, 287, 289, 290, 291], "mathrm": 17, "matmul": 242, "matric": [9, 11, 12, 14, 17, 19, 20, 224, 225, 226, 237, 273], "matrix": [8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 98, 106, 167, 168, 194, 224, 273], "matrix_pow": 13, "matthew": 74, "max": [16, 53, 67, 89, 126, 127, 128, 149, 190, 191, 192, 202, 227, 242, 247], "max_pool": [190, 191, 192], "max_pool1d": [105, 125], "max_pool2d": [105, 125], "max_pool3d": [105, 125], "max_valu": 247, "maxim": 3, "maximum": [16, 149, 190, 191, 192, 200, 202, 242, 247, 253, 290], "maxpool": [21, 72], "maxpool1d": [165, 193], "maxpool1dmodel": 190, "maxpool2d": [80, 83, 156, 165, 193], "maxpool2dmodel": 191, "maxpool3d": [157, 165, 193], "maxpool3dmodel": 192, "mean": [5, 6, 18, 75, 76, 90, 94, 95, 96, 99, 109, 110, 111, 113, 114, 115, 117, 132, 133, 134, 142, 146, 147, 148, 149, 150, 151, 153, 157, 159, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 200, 201, 202, 203, 204, 205, 209, 217, 242, 247, 251, 252, 253, 255, 258, 260, 262, 265, 266, 267, 283, 286, 294], "meaning": [83, 213], "measur": [170, 171, 173, 174], "mechan": [8, 53, 63, 82, 106], "membership": 170, "memori": [2, 3, 211, 235, 236], "meshgrid": 272, "method": [3, 8, 9, 14, 53, 79, 80, 81, 82, 83, 109, 110, 111, 113, 114, 140, 141, 144, 145, 170, 171, 172, 173, 174, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 220], "middl": 210, "might": 194, "min": [228, 242, 247], "min_valu": 247, "mind": [0, 3, 8, 80, 83, 211], "mini": 1, "minim": [4, 8, 83, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 196], "minimalist": 8, "minimum": [242, 247, 255], "minu": 151, "mirror": [239, 241], "mismatch": [77, 194, 195], "miss": [77, 194], "mitig": [88, 146, 148, 150, 176, 177, 178], "mlp": 136, "mnist": [4, 5, 7, 32, 33], "mnist_train": [4, 6], "mode": [8, 103, 115, 117, 130, 140, 141, 159, 160, 161, 162, 163, 274], "model": [1, 3, 4, 8, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 67, 68, 69, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 92, 131, 132, 133, 134, 136, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 212, 220, 283, 284, 294], "moder": 57, "modern": 74, "modif": [83, 211], "modifi": [22, 35, 73, 79, 80, 81, 82, 138, 140, 141, 142, 143, 144, 145, 159, 209, 211, 218, 271, 282], "modul": [5, 6, 8, 21, 22, 23, 26, 27, 28, 29, 31, 35, 46, 53, 63, 67, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 132, 133, 134, 135, 136, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 212, 213, 220, 284, 294], "modular": [3, 8, 74, 77, 80, 83, 194, 294], "moduledict": [80, 81, 83, 84], "modulelist": [82, 83, 84], "moment": [200, 201, 202, 203, 204], "momentum": [115, 117, 132, 133, 134, 176, 177, 178, 179, 180, 181, 197, 203, 205, 207], "momentum_decai": 203, "moor": 17, "more": [3, 4, 5, 8, 12, 35, 42, 79, 80, 83, 146, 160, 161, 162, 163, 194, 195, 196, 197, 198, 201, 202, 205, 206, 207, 217, 226, 265, 279, 294], "most": [9, 74, 191, 284, 285, 294], "move": [197, 205], "mse": [111, 113, 172, 173], "mse_loss": [105, 112], "mseloss": [165, 175], "mu": [142, 176, 177, 178, 179, 180, 181, 182, 267], "mu_c": 286, "mu_i": [179, 180, 181], "much": 294, "mul": 242, "multi": [3, 4, 28, 63, 64, 65, 66, 74, 92, 110, 114, 136, 152, 171, 174, 254, 262, 267], "multidimension": [215, 219, 235], "multipl": [1, 3, 8, 9, 15, 19, 21, 35, 53, 81, 82, 83, 98, 130, 131, 135, 136, 159, 160, 161, 162, 163, 171, 174, 194, 210, 215, 216, 217, 219, 224, 229, 235, 236, 283, 288, 294], "multipli": [15, 82, 108, 168, 206, 229, 230], "must": [0, 1, 3, 10, 11, 12, 14, 15, 18, 19, 20, 75, 77, 79, 80, 81, 82, 83, 118, 159, 160, 161, 162, 163, 174, 195, 211, 265, 269, 271, 274, 276, 277, 279, 280, 282, 285, 286, 287, 288, 289, 291], "my_simple_model": 212, "mymodel": [77, 78, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "myoptim": [195, 196], "n": [15, 16, 35, 47, 48, 49, 50, 51, 52, 64, 65, 66, 74, 79, 80, 83, 94, 95, 96, 98, 101, 102, 103, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 140, 142, 144, 155, 156, 157, 162, 163, 166, 168, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 237, 254, 265, 267], "n1": 16, "nabla_": [198, 199, 200, 201, 202, 203, 204, 206], "nabla_t": 204, "nadam": 208, "name": [74, 75, 77, 79, 81, 83, 212, 213], "nan": [18, 20], "natur": [17, 74, 155, 166, 187, 190, 231, 251, 252], "ndarrai": [76, 78, 213, 221, 234, 236, 239, 241, 268], "ndim": [18, 20, 78, 221], "ne": 15, "nearest": 130, "necessari": [4, 5, 6, 17, 211, 271, 282], "need": [2, 4, 80, 81, 82, 92, 166, 194, 211, 235, 236, 283, 284, 294], "neg": [15, 17, 20, 85, 114, 131, 146, 148, 149, 150, 171, 174, 206, 269], "negative_slop": [88, 148], "neglect": 82, "neighbor": 130, "neq": 16, "nest": [75, 80, 83, 194], "nestedmodel": 75, "nesterov": 203, "net": [72, 74], "network": [3, 4, 8, 21, 22, 26, 27, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 53, 54, 55, 56, 57, 58, 63, 67, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 89, 90, 91, 92, 93, 94, 95, 96, 106, 108, 115, 131, 135, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 205, 207, 219, 220, 221, 233, 238, 240, 253, 255, 274, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294], "neural": [3, 4, 8, 21, 22, 27, 34, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 89, 90, 91, 92, 93, 94, 95, 96, 106, 108, 115, 131, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 205, 207, 219, 220, 221, 233, 238, 240, 253, 255, 274, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294], "neuralnetwork": 149, "neuron": 148, "never": 288, "new": [77, 78, 85, 86, 88, 89, 90, 91, 93, 106, 108, 130, 136, 140, 141, 142, 143, 144, 145, 195, 212, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 236, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268, 269, 271, 274, 276, 277, 279, 280, 281, 282], "next": [83, 283], "nll": 114, "nll_loss": [105, 112], "nllloss": [165, 175], "nn": [5, 6, 8, 21, 23, 27, 31, 35, 46, 53, 59, 60, 61, 62, 63, 67, 72, 75, 84, 87, 97, 104, 107, 112, 116, 125, 129, 137, 139, 154, 158, 164, 165, 169, 175, 183, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 212, 284, 294], "no_grad": 209, "node": 221, "nois": [20, 220], "non": [12, 15, 17, 20, 82, 86, 88, 89, 140, 141, 146, 147, 148, 149, 150, 151, 153, 159, 160, 161, 162, 163, 200, 201, 211, 231, 247], "none": [0, 1, 2, 5, 6, 23, 27, 31, 35, 75, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 131, 132, 133, 134, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 210, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 235, 236, 237, 239, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 291, 292], "norm": [9, 13, 202], "normal": [5, 6, 53, 86, 90, 92, 93, 115, 117, 118, 132, 133, 134, 139, 140, 144, 147, 150, 152, 159, 176, 177, 178, 179, 180, 181, 182, 205, 217, 220, 283, 293, 294], "normalized_shap": [118, 182], "note": [94, 159], "noth": [99, 100, 101, 102], "notimplementederror": [2, 77, 195], "notin": 247, "nov": 74, "novel": [5, 74], "np": [35, 47, 48, 49, 50, 51, 52, 64, 65, 66, 76, 78, 135, 171, 174, 213, 221, 226, 233, 234, 237, 238, 240, 241, 252, 268, 284], "npy": [5, 6], "num_class": [21, 22, 23, 24, 25, 26, 27, 28, 29, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 152, 171, 174], "num_featur": [83, 132, 133, 134, 176, 177, 178, 179, 180, 181], "num_paramet": 82, "number": [0, 1, 2, 5, 6, 11, 12, 14, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 78, 80, 82, 83, 94, 95, 96, 98, 101, 102, 103, 106, 108, 110, 114, 115, 117, 119, 120, 121, 130, 131, 132, 133, 134, 135, 136, 140, 141, 144, 145, 151, 155, 156, 157, 166, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 188, 189, 190, 191, 192, 197, 215, 218, 219, 221, 231, 233, 235, 237, 253, 254, 255, 266, 267, 269, 271, 274, 276, 277, 278, 280, 282, 286, 288, 289, 291, 294], "numer": [14, 17, 109, 110, 115, 117, 118, 132, 133, 134, 170, 171, 176, 177, 178, 179, 180, 181, 182, 198, 199, 200, 201, 202, 203, 204, 205, 213, 223, 233, 238, 240], "numpi": [8, 76, 78, 171, 174, 213, 221, 226, 234, 237, 252, 265, 268, 274, 276, 280, 284, 294], "o": [3, 189, 192, 238, 239], "object": [1, 3, 9, 63, 74, 77, 81, 82, 173, 194, 211, 222, 223, 227, 228, 229, 232, 268], "observ": 200, "obtain": 1, "occur": [131, 211, 212, 269], "occurr": 15, "odot": [159, 160, 161, 162, 163], "off": 209, "offer": [4, 8, 194, 196, 220, 294], "offset": 237, "often": [15, 44, 45, 94, 95, 96, 98, 171, 174, 233, 240, 284, 288, 292, 294], "older": 203, "onc": 211, "one": [0, 59, 60, 61, 62, 82, 83, 92, 94, 108, 122, 126, 132, 133, 134, 150, 151, 152, 155, 161, 171, 174, 176, 179, 187, 190, 195, 210, 213, 217, 232, 239, 253, 255, 270, 275, 279, 284], "ones": [106, 108, 155, 156, 157, 168, 176, 177, 178, 179, 180, 181, 182, 194, 237, 239, 242], "ones_lik": 242, "onli": [8, 75, 130, 149, 159, 160, 161, 162, 163, 170, 171, 174, 176, 177, 178, 179, 180, 181, 182, 190, 191, 192, 206, 209, 233, 247, 253, 255, 265, 274, 275, 277, 278], "onto": [18, 20], "openml": [5, 6], "oper": [3, 8, 9, 14, 17, 53, 54, 55, 56, 57, 58, 76, 77, 80, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 98, 103, 106, 108, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 209, 210, 211, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 235, 236, 238, 240, 251, 252, 253, 254, 255, 258, 260, 262, 265, 267, 269, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 286, 292], "operatornam": [15, 17], "opposit": 197, "optim": [3, 8, 9, 15, 17, 18, 20, 23, 24, 25, 26, 27, 28, 29, 76, 78, 81, 82, 98, 155, 156, 157, 194, 211], "optimizer_st": [195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "option": [1, 5, 6, 16, 20, 21, 22, 23, 24, 25, 26, 28, 29, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 85, 88, 92, 95, 96, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 148, 152, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 187, 188, 189, 190, 191, 192, 195, 197, 205, 207, 215, 216, 217, 219, 221, 233, 234, 235, 236, 237, 238, 239, 240, 241, 253, 254, 255, 262, 266, 267, 268, 269, 273, 276, 278, 279, 284, 288, 289, 291], "ord": 16, "order": [1, 3, 16, 20, 79, 80, 81, 82, 83, 266, 283], "ordered_dict": 83, "ordereddict": [77, 79, 80, 83], "organ": [79, 80, 81, 83, 212], "orient": 294, "origin": [25, 34, 99, 131, 135, 153, 274, 275, 276, 277, 280, 281, 292], "orthogon": [17, 18, 20], "orthonorm": 18, "oscil": [197, 205, 207], "other": [2, 3, 8, 14, 25, 29, 31, 34, 76, 77, 80, 83, 140, 141, 159, 194, 195, 209, 211, 220, 221, 233, 235, 238, 240, 265, 273, 294], "otherwis": [36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 56, 57, 58, 85, 88, 89, 90, 92, 146, 148, 149, 150, 152, 160, 161, 162, 163, 172, 187, 188, 189, 190, 191, 192, 195, 206, 212, 227, 228, 253, 255], "otim": [17, 106, 166], "out": [0, 3, 4, 85, 86, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 106, 108, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 140, 141, 144, 145, 155, 156, 157, 159, 160, 161, 162, 163, 184, 185, 186, 187, 188, 189, 190, 191, 192, 197, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282], "out_channel": [31, 80, 83, 132, 133, 134, 136, 155, 156, 157, 177, 178, 187, 188, 189, 190, 191, 192, 194], "out_featur": [79, 80, 83, 106, 108, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 159, 160, 161, 166, 168, 170, 171, 172, 173, 174, 176, 179, 182, 187, 188, 189, 190, 191, 192], "outcom": [288, 289, 291], "outer": 242, "outlier": [111, 172], "output": [0, 1, 2, 8, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 99, 100, 101, 102, 103, 106, 108, 119, 120, 121, 130, 131, 132, 133, 134, 135, 136, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 213, 216, 217, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 237, 238, 240, 241, 251, 252, 253, 254, 255, 258, 260, 262, 265, 266, 267, 273, 274, 276, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292], "output_height": 98, "output_lay": [80, 83], "output_s": [80, 119, 120, 121, 184, 185, 186], "output_width": 98, "outsid": 0, "over": [0, 1, 2, 3, 9, 63, 72, 77, 80, 82, 92, 119, 120, 121, 135, 152, 155, 156, 157, 171, 174, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 197, 198, 199, 200, 201, 215, 219, 253, 254, 255, 262, 265, 267, 288, 289, 291], "overdetermin": 17, "overfit": [1, 21, 72, 100, 103, 160, 161, 162, 163, 197, 200, 205, 207], "overhead": 135, "overrid": [2, 3], "overridden": [77, 195], "overwrit": [79, 81], "own": [4, 79, 80, 81, 82, 94, 95, 96, 145, 194, 286], "p": [16, 17, 78, 81, 82, 99, 100, 101, 102, 103, 159, 160, 161, 162, 163, 187, 190, 191, 288, 289, 291, 294], "p_d": [189, 192], "p_h": [188, 189, 192], "p_w": [188, 189, 192], "packag": [2, 3, 4, 9, 74, 194, 196, 212, 218, 220, 284, 294], "pad": [31, 80, 83, 94, 95, 96, 98, 119, 120, 121, 122, 123, 124, 126, 127, 128, 132, 133, 134, 136, 155, 156, 157, 177, 178, 184, 185, 186, 187, 188, 189, 190, 191, 192, 272], "pad_after_dim1": 274, "pad_after_dim2": 274, "pad_before_dim1": 274, "pad_before_dim2": 274, "pad_width": 274, "padding_height": 98, "padding_width": 98, "pair": 106, "paper": 24, "parallel": [1, 3, 63, 74], "param": [77, 78, 81, 82, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "param1": 77, "param_dict": 81, "param_group": [195, 196], "param_groups_setup": 195, "param_list": 82, "param_s": 212, "paramet": [0, 2, 8, 32, 33, 34, 74, 77, 194, 195, 196, 213, 220, 294], "parameterdict": 84, "parameterlist": 84, "parent": 194, "part": [76, 77, 145, 194, 209, 211, 220, 233, 234, 237, 238, 239, 240, 241, 284, 294], "partial": [10, 11, 12, 14, 15, 16, 17, 19, 20, 85, 86, 88, 89, 90, 91, 92, 93, 106, 108, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 187, 188, 189, 190, 191, 192, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282], "particip": [78, 284], "particular": [79, 81], "particularli": [8, 17, 47, 48, 49, 50, 51, 52, 80, 81, 82, 83, 92, 108, 132, 133, 134, 152, 168, 171, 174, 179, 180, 181, 182, 201, 209, 212, 283], "pass": [2, 8, 17, 21, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 75, 77, 78, 79, 80, 81, 82, 83, 130, 132, 133, 134, 135, 136, 146, 147, 148, 149, 150, 151, 153, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 187, 188, 189, 190, 191, 192, 194, 213, 221, 254, 262, 265, 266, 267, 269, 271, 275, 277, 278, 282, 284, 294], "past": [197, 198, 200, 205], "patch": [98, 188], "path": [3, 5, 6], "pathwai": 74, "pattern": [74, 89, 135, 149, 155, 156, 157], "penal": [197, 205, 207], "penalti": [198, 199, 200, 201, 202, 203, 204], "penros": 17, "per": [1, 47, 48, 49, 50, 51, 52, 64, 65, 66, 119, 179, 180, 181, 182, 184], "perform": [3, 8, 9, 10, 17, 21, 27, 28, 29, 31, 32, 33, 34, 43, 59, 60, 61, 62, 63, 67, 72, 74, 77, 78, 82, 86, 94, 95, 96, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 135, 136, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 209, 211, 218, 220, 222, 223, 226, 229, 232, 251, 253, 255, 262, 266, 283, 285, 287, 292, 294], "permut": 266, "persist": [76, 215, 216, 217, 219, 235, 236], "perturb": [12, 19, 20, 294], "phi": [86, 147], "pi": [86, 147, 248, 258, 263], "pil": [284, 294], "pinv": 13, "pioneer": 74, "pipelin": [5, 6, 220, 283, 284, 286], "pixel": [5, 6, 130, 286, 288], "place": [138, 140, 141, 142, 143, 144, 145], "placehold": [77, 167], "plai": [213, 220], "plot": 273, "point": [4, 131, 209], "pool": [21, 31, 32, 33, 34, 35, 46, 53, 63, 67, 72, 74, 119, 120, 121, 122, 123, 124, 126, 127, 128, 135, 136, 156, 157, 184, 185, 186, 187, 188, 189, 190, 191, 192, 253, 255], "pool1": 83, "pool2": 83, "poorli": 14, "popul": 77, "popular": [4, 74], "portion": 294, "pose": 17, "posit": [1, 10, 15, 77, 83, 131, 146, 148, 149, 150, 187, 188, 189, 190, 191, 192, 206, 210, 231, 276, 280, 287], "possibl": [8, 294], "potenti": [17, 167, 205, 278], "power": [8, 15, 74, 135, 210, 211, 242, 283, 284, 294], "pp": 74, "practic": [17, 171, 174], "practition": 294, "pre": [36, 40, 41], "preactbottleneck": [36, 40, 41], "preced": [78, 221], "preconfigur": [28, 29], "predefin": [4, 74, 80, 150], "predict": [170, 171, 173, 174], "prefix": [77, 212], "prepar": [3, 210, 274, 276, 280, 284, 294], "prepend": 77, "preprint": 74, "preprocess": [3, 4, 98, 131, 220, 283, 284, 294], "present": [170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 188], "preserv": [99, 131, 159, 233, 234, 237, 238, 239, 240, 241, 254, 262, 267], "preset": 4, "prevent": [1, 79, 80, 81, 82, 83, 100, 103, 160, 161, 162, 163, 170, 171, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 211], "previou": [197, 206, 211], "previous": 200, "primari": [8, 213], "primarili": 83, "print": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 209, 210, 211, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292], "priorit": 136, "probabilist": 220, "probabl": [25, 86, 92, 99, 100, 101, 102, 103, 109, 147, 152, 159, 160, 161, 162, 163, 170, 171, 174, 288, 289, 291, 294], "problem": [17, 18, 20, 74, 88, 146, 148, 204], "proceed": 74, "process": [2, 3, 4, 15, 18, 20, 21, 28, 35, 63, 72, 74, 82, 94, 95, 96, 117, 131, 132, 133, 134, 135, 136, 150, 153, 155, 157, 166, 176, 177, 178, 179, 180, 181, 182, 187, 189, 190, 192, 197, 213, 273, 284, 285, 286, 287, 292, 294], "produc": [21, 72, 75, 119, 120, 121, 135, 155, 156, 157, 184, 185, 186, 218, 220], "product": [8, 18, 20, 151, 166, 182, 194, 224, 225, 229, 230], "program": [209, 220], "progress": 199, "project": [18, 20], "projector": 17, "promin": [187, 189, 190, 191, 192], "promot": [83, 171, 174, 194], "propag": [11, 12, 14, 17, 18, 19, 20, 77, 83, 106, 108, 130, 135, 188, 189, 205, 206, 224, 225, 226, 230, 253, 255, 273, 274, 277, 281], "properli": [0, 82, 92, 152, 194], "properti": [9, 11, 14, 15, 86, 90, 99, 147, 150, 159, 199, 204], "proport": [5, 6, 267], "proportion": 292, "provid": [0, 1, 2, 3, 4, 5, 6, 8, 9, 22, 23, 24, 25, 27, 31, 35, 67, 73, 74, 77, 79, 80, 81, 82, 86, 108, 120, 121, 131, 170, 171, 172, 174, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 205, 207, 209, 211, 213, 218, 220, 221, 226, 233, 239, 253, 255, 266, 268, 276, 278, 280, 294], "pseudo": [14, 17], "purpos": [215, 219, 233, 238, 240], "python": 213, "pytorch": 268, "q": 18, "qr": 13, "quad": [17, 170, 171, 172, 173, 174, 190, 191, 192, 222, 223, 227, 228, 229, 232, 285], "quadrat": 172, "quotient": 223, "r": [18, 288, 289, 290, 291], "r_t": 204, "radam": 208, "rais": [0, 1, 2, 77, 194, 195, 231], "rand": [214, 220], "randint": [214, 220], "randn": [21, 35, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 64, 65, 66, 67, 72, 135, 136, 194, 214, 218, 220], "random": [1, 2, 3, 35, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 64, 65, 66, 135, 136, 287, 288, 289, 290, 291, 294], "random_integ": 220, "random_tensor": 220, "randomcrop": [293, 294], "randomgrayscal": [293, 294], "randomhorizontalflip": [293, 294], "randomli": [1, 99, 100, 101, 102, 103, 131, 159, 160, 161, 162, 163, 287, 288, 289, 290, 291, 294], "randomnoisedataset": [0, 1, 2], "randomrot": [293, 294], "randomverticalflip": 293, "rang": [0, 1, 9, 35, 43, 74, 82, 91, 93, 94, 95, 110, 114, 145, 151, 153, 197, 205, 207, 216, 244, 245, 247, 286, 290, 294], "rank": 17, "rasul": 5, "rate": [195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "rather": [5, 81, 82, 201, 277], "ratio": [53, 135, 136, 292], "ravel": 272, "raw": [92, 152, 171, 213], "re": [78, 211], "readabl": [79, 80, 81, 83, 194, 213], "readi": [3, 8, 59, 60, 61, 62, 74], "real": [17, 20, 151], "rearrang": 98, "recalibr": [54, 56, 57, 59, 60, 61, 62, 74, 135], "receiv": [190, 191, 192, 274], "recent": 205, "recept": [63, 74, 136], "reciproc": [17, 242, 252, 260], "recognit": [34, 74, 156], "rectangular": 237, "rectif": 204, "rectifi": [88, 89, 148, 149, 204], "recurr": [80, 182], "recurs": [75, 77], "red": 288, "reduc": [21, 35, 46, 63, 67, 72, 74, 135, 176, 177, 178, 179, 180, 181, 187, 188, 189, 190, 191, 192, 203, 206, 211, 213, 253, 254, 255, 262, 267, 288], "reduct": [20, 53, 109, 110, 111, 113, 114, 135, 136, 170, 171, 172, 173, 174, 253, 255], "reevalu": 195, "refer": [4, 8, 77, 220, 234, 237, 269], "reflect": 209, "regardless": [17, 275], "region": [96, 119, 120, 121, 130, 185, 186, 274, 285, 294], "regist": [44, 45, 47, 48, 49, 50, 51, 52, 76, 77, 78, 82, 194, 212], "register_buff": 76, "register_model": [22, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 64, 65, 66, 68, 69, 70, 71, 73], "register_paramet": 77, "registr": [77, 194], "registri": [47, 48, 49, 50, 51, 52, 212], "registry_path": 212, "regress": [4, 113, 172, 173], "regular": [17, 21, 25, 72, 103, 160, 161, 162, 163, 197, 198, 199, 202, 203, 204, 205, 207], "relat": [211, 237, 238], "relationship": 292, "relev": [130, 197, 205, 207], "reli": 211, "reliabl": [5, 6], "reliant": [160, 161, 162, 163], "relu": [8, 21, 53, 67, 72, 74, 75, 79, 80, 81, 83, 85, 87, 88, 105, 132, 133, 134, 135, 136, 140, 141, 144, 145, 146, 148, 154, 155, 156, 157, 165, 166, 167, 168], "relu1": 83, "relu2": 83, "relu3": 83, "remain": [5, 6, 76, 118, 159, 160, 161, 162, 163, 206], "rememb": 220, "remov": [212, 278], "rep": 280, "repeat": [272, 273, 280], "repetit": [276, 280], "replac": [5, 220, 288], "repres": [5, 14, 16, 20, 31, 77, 78, 83, 106, 108, 115, 117, 118, 155, 156, 157, 166, 168, 171, 174, 182, 195, 196, 197, 203, 204, 205, 206, 207, 213, 222, 223, 229, 232, 234, 254, 265, 266, 267, 273, 285, 287, 289, 290, 291, 292], "represent": [44, 45, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 63, 74, 135, 188, 191, 195], "reproduc": [215, 216, 217, 218, 219, 220, 294], "requir": [2, 3, 4, 8, 47, 48, 49, 50, 51, 52, 63, 76, 79, 83, 85, 86, 88, 89, 90, 91, 93, 106, 108, 130, 135, 136, 145, 167, 171, 174, 194, 209, 211, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 269, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 292], "requires_grad": [76, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 98, 106, 108, 130, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 187, 188, 189, 190, 191, 192, 194, 215, 216, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284], "rescal": [109, 110, 114, 170, 171, 174], "research": 194, "reset": [78, 218, 221], "reshap": [8, 53, 108, 156, 157, 210, 213, 272, 275], "residu": [26, 27, 28, 29, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 54, 55, 56, 57, 58, 74], "residualblock": 35, "resili": 206, "resiz": [130, 283, 293, 294], "resnet": [27, 28, 29, 30, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 54, 55, 56, 57, 58, 63, 64, 65, 66, 74, 135], "resnet_1001": 74, "resnet_101": 74, "resnet_152": 74, "resnet_18": 74, "resnet_200": 74, "resnet_269": 74, "resnet_34": 74, "resnet_50": 74, "resnet_arg": 63, "resnext": [30, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 74], "resnext_101_32x16d": 74, "resnext_101_32x32d": 74, "resnext_101_32x4d": 74, "resnext_101_32x8d": 74, "resnext_101_64x4d": 74, "resnext_50_32x4d": 74, "resolut": [59, 60, 61, 62], "resourc": 211, "respect": [10, 11, 12, 14, 15, 16, 17, 18, 20, 31, 67, 76, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 106, 108, 130, 136, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 187, 188, 189, 190, 191, 192, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 247, 251, 252, 253, 254, 255, 258, 260, 262, 265, 266, 267, 273, 274, 276, 280, 288], "respons": [59, 60, 61, 62, 74, 79, 196], "restor": [135, 211], "restructur": 277, "result": [10, 14, 15, 17, 74, 77, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 106, 108, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 136, 152, 194, 195, 209, 211, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 263, 264, 265, 268, 269, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 287, 288, 294], "resum": 196, "retain": [78, 221, 233, 240, 253, 254, 255, 262, 267, 284], "retent": 284, "retriev": [0, 2, 79, 81, 82], "return": [0, 1, 2, 3, 5, 6, 8, 27, 31, 53, 76, 77, 79, 80, 81, 82, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 212, 213, 283, 294], "reus": 284, "reusabl": [83, 194, 283], "revers": [8, 83, 266, 289, 291], "revert": 211, "revolution": 74, "rgb": [24, 25, 26, 28, 29], "rho": 198, "rho_": 204, "rho_t": 204, "right": [15, 16, 17, 19, 20, 86, 92, 147, 152, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 190, 191, 192, 285], "risk": 213, "rmsprop": 208, "rob": 74, "robust": [131, 159, 160, 161, 162, 163, 172, 194, 198, 287, 288, 290, 294], "roland": 5, "role": [213, 220, 294], "root": [4, 5, 6, 199, 205, 260], "rotat": [105, 129, 290, 294], "rotated_imag": 131, "rout": [190, 191, 192], "routin": 8, "row": [11, 12, 14, 19, 108, 237, 273, 282], "rprop": 208, "rule": [14, 15, 210, 222, 223, 227, 228, 229, 231, 232], "run": [8, 76, 115, 117, 132, 133, 134, 176, 177, 178, 179, 180, 181, 198, 211, 218, 220], "running_mean": [76, 115, 117, 176, 177, 178, 179, 180, 181], "running_var": [115, 117, 176, 177, 178, 179, 180, 181], "runtim": [80, 83, 194], "s_": 206, "s_d": [189, 192], "s_h": [188, 189, 192], "s_w": [188, 189, 192], "sain": 74, "same": [11, 12, 14, 15, 19, 92, 99, 100, 101, 102, 103, 115, 117, 118, 120, 121, 131, 132, 133, 134, 136, 155, 156, 157, 159, 160, 161, 162, 163, 167, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 206, 218, 220, 226, 236, 239, 241, 251, 253, 254, 255, 269, 271, 275, 277, 278, 279, 282, 286], "sampl": [0, 1, 2, 3, 5, 6, 8, 24, 25, 26, 28, 29, 31, 32, 33, 34, 59, 60, 61, 62, 119, 120, 121, 140, 141, 142, 143, 144, 145, 159, 160, 161, 162, 163, 166, 168, 171, 174, 182, 184, 185, 186, 217, 220, 285, 287, 289, 290, 291, 292], "satisfi": [10, 12, 19], "satur": [146, 294], "save": [2, 76, 78, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 212], "scalabl": [3, 47, 48, 49, 50, 51, 52, 74, 194], "scalar": [11, 16, 109, 110, 111, 113, 114, 213], "scale": [12, 17, 28, 32, 33, 34, 36, 37, 38, 41, 54, 55, 63, 64, 65, 66, 74, 85, 90, 92, 115, 117, 118, 135, 136, 144, 145, 146, 148, 150, 151, 152, 153, 159, 160, 161, 162, 163, 171, 176, 177, 178, 179, 180, 181, 182, 197, 199, 200, 201, 213, 220, 267, 292], "scenario": [81, 82, 182, 201, 202, 284, 288], "schedul": 197, "scientif": 210, "score": [35, 46, 63, 92, 171], "scratch": 8, "script": 220, "se": [54, 55, 56, 57, 58, 59, 60, 61, 62, 74], "se_resnet_101": 74, "se_resnet_152": 74, "se_resnet_18": 74, "se_resnet_34": 74, "se_resnet_50": 74, "se_resnext_101_32x4d": 74, "se_resnext_101_32x8d": 74, "se_resnext_101_64x4d": 74, "se_resnext_50_32x4d": 74, "seamless": [0, 1, 3, 4, 194, 220], "seamlessli": [3, 4, 9, 78, 80, 83, 194, 213, 294], "second": [12, 80, 81, 106, 135, 166, 200, 201, 202, 203, 204, 210, 222, 224, 225, 226, 227, 228, 229, 230, 231, 232, 271, 273, 291], "section": 226, "see": [8, 226], "seed": [214, 215, 216, 217, 219, 220, 294], "seen": 198, "select": [63, 64, 65, 66, 74, 130, 135, 136, 190, 192, 262], "selectivekernel": 137, "self": [0, 1, 2, 3, 8, 21, 23, 27, 31, 53, 67, 72, 75, 76, 77, 78, 79, 80, 81, 82, 90, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 166, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 212, 273, 283, 284], "selu": [87, 99, 105, 154, 159, 165], "selunetwork": 150, "semodul": 137, "senet": [30, 54, 55, 56, 57, 58, 59, 60, 61, 62, 74], "sensit": [111, 172, 176, 177, 178], "sentiment": 4, "separ": [0, 94, 95, 96, 179, 180, 181], "sequenc": [15, 35, 46, 63, 79, 81, 94, 233, 269, 271, 274, 276, 279, 280, 282, 283], "sequenti": [21, 27, 31, 53, 67, 72, 75, 79, 80, 84, 94, 132, 133, 134, 167, 283, 294], "seri": [23, 32, 33, 63, 94, 132, 155, 187, 190], "serial": [76, 77, 196], "serv": [3, 5, 27, 53, 67, 77, 79, 80, 81, 82, 83, 194, 206, 284], "set": [3, 4, 5, 6, 44, 45, 59, 60, 61, 62, 75, 78, 82, 94, 95, 96, 148, 149, 150, 155, 156, 157, 159, 162, 163, 166, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 195, 200, 201, 205, 215, 216, 217, 218, 219, 220, 221, 233, 235, 236, 240, 241, 247, 253, 255, 268, 284, 288, 294], "setup": [4, 8, 47, 48, 49, 50, 51, 52], "sever": [17, 155, 156, 157, 187, 188, 189, 190, 191, 192, 211, 283, 294], "sgd": [8, 197, 204, 208], "sgn": 16, "shape": [3, 4, 5, 6, 8, 11, 12, 14, 15, 17, 21, 27, 31, 35, 47, 48, 49, 50, 51, 52, 53, 59, 60, 61, 62, 64, 65, 66, 67, 72, 74, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 210, 213, 215, 216, 217, 219, 220, 221, 224, 235, 236, 237, 238, 239, 240, 241, 247, 252, 253, 254, 255, 258, 260, 262, 266, 267, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 282, 285, 286, 287, 288, 289, 290, 291, 292, 294], "shapelik": 216, "share": 74, "shen": 135, "shift": [115, 117, 118, 176, 177, 178, 179, 180, 181, 182], "shorthand": 226, "should": [31, 76, 211, 215, 216, 217, 219, 235, 236, 244, 245, 265, 274, 283], "show": [209, 212], "showcas": 8, "shown": 218, "shrink": 198, "shuffl": [1, 2, 3], "side": [19, 80, 83, 94, 95, 96, 122, 123, 124, 126, 127, 128, 132, 133, 134, 155, 156, 157, 187, 188, 189, 190, 191, 192, 211], "sigma": [17, 135, 140, 142, 144, 151, 176, 177, 178, 179, 180, 181, 182, 266], "sigma_c": 286, "sigma_i": 17, "sigmoid": [87, 105, 135, 140, 141, 144, 145, 154, 165, 170], "sigmoidnetwork": 151, "sign": [15, 172, 206, 242], "signal": [132, 155, 156, 157, 176, 179, 187, 188, 189, 190, 191, 192], "signific": 211, "significantli": [46, 74, 135, 283], "sim": [159, 160, 161, 162, 163], "similar": [8, 140, 141, 226, 252, 268, 274], "similarli": [20, 265], "simonyan": 74, "simpl": [3, 4, 8, 75, 83, 94, 95, 96, 106, 108, 122, 123, 124, 126, 127, 128, 147, 149, 150, 151, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 224, 225, 230, 283], "simplebinaryclassificationmodel": 170, "simpleclassificationmodel": [171, 174], "simplegelumodel": 147, "simpleleakyrelumodel": 148, "simplemodel": [8, 75, 168, 212], "simpleregressionmodel": 173, "simplerelumodel": 149, "simpleselumodel": 150, "simplesigmoidmodel": 151, "simpletanhmodel": 153, "simpli": [209, 265, 266, 277], "simplic": [74, 149], "simplifi": [4, 32, 83, 132, 133, 134], "simul": [75, 294], "simultan": 131, "sin": [242, 248], "sinc": [15, 18, 79, 80, 81, 82, 94, 95, 96, 145, 209, 211, 217, 273, 294], "sine": [245, 258, 259], "singl": [0, 4, 15, 18, 20, 35, 92, 132, 133, 134, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 171, 182, 188, 189, 190, 191, 192, 195, 213, 219, 235, 269, 278, 286, 288, 294], "singleton": 182, "singular": [11, 14, 15, 17, 19, 20], "sinh": [242, 249, 264], "size": [0, 1, 2, 3, 20, 31, 32, 33, 34, 35, 63, 72, 74, 75, 78, 80, 94, 95, 96, 98, 101, 102, 103, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 155, 156, 157, 166, 168, 170, 171, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 212, 216, 219, 220, 221, 253, 254, 255, 262, 267, 269, 271, 278, 281, 282, 285, 287, 292, 294], "sk": [63, 64, 65, 66, 74, 136], "sk_resnet_18": 74, "sk_resnet_34": 74, "sk_resnet_50": 74, "skblock": 63, "skip": [74, 211], "sknet": [30, 64, 65, 66, 74], "slice": [106, 265], "slide": [98, 187, 189, 190, 192], "slight": 135, "slightli": 294, "slope": [88, 146, 148], "slow": [3, 204], "small": [17, 32, 33, 34, 74, 88, 109, 110, 115, 117, 118, 148, 150, 170, 171, 172, 176, 177, 178, 179, 180, 181, 182, 188, 191, 198, 199, 200, 201, 202, 203, 204, 205, 206], "smaller": [72, 74, 80, 83, 194, 199, 200, 228, 285, 287, 292], "smallest": 255, "smooth": [25, 86, 146, 147, 197, 205, 294], "smoother": 197, "so": [79, 80, 81, 82, 131, 194, 204, 235, 236, 283], "softmax": [87, 105, 136, 154, 165, 171], "softmaxmodel": 152, "solut": [17, 19], "solv": [9, 10, 13, 17, 18, 20], "solver": 9, "some": [85, 100, 131, 159, 160, 161, 176, 177, 178, 179, 180, 181, 199, 200, 201, 211, 213], "sometim": 210, "sophist": [80, 83], "sourc": 220, "space": [12, 18, 20, 94, 95, 96, 98, 119, 120, 121, 132, 133, 134, 155, 156, 157, 184, 185, 186, 233, 294], "span": 4, "spars": [199, 200], "spatial": [21, 35, 46, 63, 67, 72, 74, 133, 135, 156, 157, 176, 177, 178, 179, 180, 181, 182, 188, 189, 190, 191, 192, 273], "spatial_dim": 135, "spatio": 157, "special": [0, 1, 8, 17, 76, 77, 78, 159, 220], "specif": [4, 8, 27, 44, 45, 79, 80, 81, 82, 83, 136, 145, 159, 160, 161, 162, 163, 179, 180, 181, 194, 195, 209, 220, 235, 253, 255, 276, 280], "specifi": [0, 1, 2, 3, 4, 5, 6, 8, 16, 22, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 63, 65, 66, 67, 68, 69, 70, 71, 73, 75, 80, 92, 98, 103, 109, 110, 111, 113, 114, 118, 119, 120, 121, 130, 131, 135, 152, 155, 156, 157, 170, 171, 172, 173, 174, 182, 184, 185, 186, 188, 189, 190, 191, 192, 195, 213, 215, 216, 217, 218, 219, 231, 233, 234, 235, 236, 237, 238, 240, 241, 247, 253, 254, 255, 262, 266, 267, 268, 269, 271, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 292, 294], "speech": 179, "speed": [197, 198, 199, 200, 201, 202, 203, 204, 205, 207], "split": [4, 269, 271, 282], "springer": 74, "sqrt": [86, 140, 141, 144, 145, 147, 176, 177, 178, 179, 180, 181, 182, 198, 199, 200, 201, 203, 204, 205, 242, 244, 245], "squar": [1, 3, 10, 11, 12, 14, 15, 17, 18, 19, 20, 111, 113, 172, 173, 198, 199, 200, 205, 242, 260], "squaredataset": [0, 1, 2, 3], "squeez": [53, 56, 59, 60, 61, 62, 74, 135, 272], "stabil": [14, 17, 74, 109, 110, 115, 117, 118, 132, 133, 134, 170, 171, 176, 177, 178, 179, 180, 181, 182, 197, 198, 199, 200, 201, 202, 203, 204, 205, 286], "stabl": [140, 141, 144, 145, 159, 171, 197, 201, 202, 205, 206, 207], "stack": [83, 136, 271, 272, 282, 294], "stage": [35, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 63, 64, 65, 66], "stage1": 53, "stage2": 53, "stage3": 53, "stage4": 53, "standard": [35, 44, 45, 86, 88, 140, 142, 144, 146, 147, 148, 159, 206, 217, 220, 226, 283, 286, 294], "start": [1, 3, 197, 199, 206, 233, 285, 287], "state": [74, 76, 77, 78, 80, 83, 195, 209, 211, 218], "state_dict": [77, 78, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "static": 83, "statist": [17, 99, 115, 117], "std": [5, 6, 142, 283, 286, 294], "stem": [27, 35, 46, 63], "stem_typ": 35, "stem_width": 35, "step": [78, 98, 136, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 233, 283, 284], "step_siz": 206, "still": 198, "stochast": [8, 197, 207], "stop": 233, "storag": [79, 81, 221], "store": [2, 4, 5, 6, 35, 46, 63, 76, 77, 78, 79, 80, 81, 82, 135, 184, 185, 186, 211, 221, 285, 286, 287, 288, 289, 290, 291, 292], "str": [5, 6, 35, 67, 77, 79, 81, 83, 109, 110, 111, 113, 114, 130, 195, 212, 273], "straightforward": [207, 209, 222], "strategi": 196, "streamlin": [2, 3], "strict": [77, 195], "stride": [31, 32, 33, 34, 80, 83, 94, 95, 96, 98, 119, 120, 121, 122, 123, 124, 126, 127, 128, 132, 133, 134, 136, 155, 156, 157, 184, 185, 186, 187, 188, 189, 190, 191, 192], "stride_height": 98, "stride_width": 98, "string": [77, 79, 81, 83, 155, 156, 157, 195], "structur": [0, 8, 18, 76, 77, 80, 194, 195, 212, 213, 237, 284], "style": [27, 117, 179, 180, 273], "sub": [79, 80, 81, 82, 83, 194, 242, 285, 287], "sub_tensor": 221, "subclass": [1, 2, 3, 8, 77, 78, 79, 194, 195], "sublay": 75, "submodul": [75, 77, 194], "subsequ": [80, 83, 145, 220], "subset": [160, 161], "subtract": [8, 232, 286], "suffer": 199, "suit": [25, 63, 140, 141, 144, 145], "suitabl": [27, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 55, 56, 58, 74, 172, 199, 200, 215], "sum": [16, 79, 80, 81, 82, 83, 92, 109, 110, 111, 113, 114, 136, 152, 170, 171, 172, 173, 174, 199, 222, 225, 230, 242, 265, 267, 269, 271, 273, 276, 280, 282], "sum_": [15, 92, 152, 170, 171, 173, 174, 176, 177, 178, 179, 180, 181, 182, 187, 188, 189, 224, 225, 254, 262, 265, 267, 273, 276], "sum_i": [16, 230], "sum_j": 230, "sum_k": 226, "summar": [44, 45, 187, 188, 189], "summari": [44, 45, 59, 60, 61, 62], "summat": 15, "sun": 135, "super": [8, 75, 76, 77, 78, 79, 80, 81, 82, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 166, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 212], "support": [1, 3, 4, 8, 9, 15, 16, 17, 18, 20, 35, 79, 80, 81, 82, 83, 130, 131, 194, 196, 203, 220, 221, 222, 223, 226, 227, 228, 229, 231, 232, 234, 237, 247, 252, 254, 258, 260, 262, 265, 266, 267, 269, 273, 277, 284, 294], "suppos": 294, "sure": [194, 294], "svd": [13, 17], "symmetr": [10, 119, 120, 121, 144, 145, 153], "syntax": [1, 226], "system": [9, 10, 17, 18, 19, 74, 209, 273], "systemat": 294, "szegedi": [24, 74], "t": [17, 74, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 221, 226, 268, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294], "t0": 197, "t1": 268, "t2": 268, "tabular": 4, "tailor": [4, 194, 294], "take": [18, 187, 188, 189, 190, 191, 192, 211, 283], "taken": 265, "tan": 242, "tangent": [93, 153, 246, 263, 264], "tanh": [31, 80, 83, 86, 87, 105, 140, 141, 144, 145, 147, 154, 165, 242], "tanhnetwork": 153, "target": [5, 6, 83, 109, 110, 111, 113, 114, 119, 120, 121, 130, 170, 171, 172, 173, 174, 184, 185, 186, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 285, 287, 292], "target_tensor": [170, 171, 172, 173, 174], "target_transform": [5, 6], "task": [4, 8, 9, 21, 22, 24, 25, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 74, 91, 92, 95, 106, 109, 110, 113, 114, 135, 136, 151, 152, 155, 156, 157, 170, 171, 172, 173, 174, 179, 180, 181, 187, 189, 190, 192, 200, 210, 220, 237, 294], "techniqu": [10, 14, 72, 115, 159, 160, 161, 162, 163, 179, 180, 181, 196, 292, 294], "tempor": [155, 157, 189, 192], "temporarili": 211, "tensor": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 47, 48, 49, 50, 51, 52, 53, 64, 65, 66, 67, 72, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 209, 211, 213, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294], "term": [17, 106, 132, 133, 134, 197, 201, 203, 204, 205, 207], "test": [4, 5, 6], "test_backward": 75, "test_siz": [5, 6], "text": [4, 11, 15, 16, 35, 46, 63, 64, 65, 66, 79, 85, 88, 89, 90, 92, 94, 95, 96, 119, 120, 121, 122, 123, 124, 126, 127, 128, 132, 133, 134, 135, 136, 140, 141, 144, 145, 146, 148, 149, 150, 152, 155, 156, 157, 159, 160, 161, 162, 163, 170, 171, 172, 173, 174, 187, 188, 189, 190, 191, 192, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 216, 222, 223, 225, 227, 228, 229, 231, 232, 243, 247, 253, 254, 255, 257, 262, 267, 269, 271, 274, 275, 276, 277, 278, 280, 281, 282, 285, 286, 287, 289, 290, 291], "th": [106, 170, 171, 173, 174, 179, 180, 181, 227, 228, 231], "than": [0, 1, 5, 81, 82, 85, 88, 111, 146, 148, 172, 195, 201, 247, 265, 274, 279, 285, 287, 292], "thei": [0, 8, 20, 74, 76, 80, 82, 83, 213, 273, 277, 285, 287, 294], "them": [3, 77, 82, 98, 197, 210, 269, 279, 283, 286, 294], "therebi": [159, 188, 189, 191, 192], "theta": [197, 198, 290], "theta_": [197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "theta_t": [204, 205], "thi": [0, 1, 2, 3, 5, 6, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 28, 29, 31, 35, 44, 45, 46, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 63, 64, 65, 66, 74, 75, 76, 78, 80, 81, 82, 83, 89, 91, 92, 93, 94, 95, 96, 98, 106, 108, 119, 130, 131, 135, 136, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 174, 176, 177, 178, 179, 180, 181, 182, 184, 187, 188, 189, 190, 191, 192, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 216, 217, 218, 220, 221, 225, 226, 230, 233, 235, 238, 239, 240, 241, 247, 251, 252, 253, 254, 255, 258, 260, 262, 265, 266, 267, 268, 274, 276, 277, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294], "thing": 211, "those": [8, 32, 33, 34, 82, 145], "three": [20, 34, 96, 121, 124, 128, 132, 133, 134, 157, 163, 178, 181, 186, 189, 192], "threshold": [17, 111, 172], "through": [0, 3, 4, 8, 12, 17, 18, 20, 21, 23, 27, 31, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 64, 65, 66, 72, 79, 80, 83, 106, 108, 130, 135, 136, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 176, 177, 178, 179, 182, 187, 188, 189, 190, 191, 192, 217, 224, 225, 230, 273, 275, 277, 278, 281, 294], "throughout": [90, 284], "tile": 272, "time": [0, 3, 15, 32, 33, 34, 94, 132, 148, 150, 155, 187, 188, 189, 190, 191, 192, 197, 198, 199, 200, 201, 205, 207, 211, 276, 280], "to_tensor": [5, 6], "togeth": [83, 283, 294], "too": 206, "tool": [3, 8, 194, 210, 220, 283, 294], "top": [10, 11, 12, 18, 20, 106, 108, 130, 155, 156, 157, 166, 168, 285, 287], "torch": [67, 268], "total": [0, 1, 2, 5, 6, 22, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 73, 75, 78, 221, 277], "totensor": [283, 294], "trace": [9, 242], "track": [8, 132, 133, 134, 176, 177, 178, 179, 180, 181, 194, 209, 211, 215, 216, 217, 219, 233, 234, 235, 236, 237, 238, 239, 240, 241, 268, 284], "track_running_stat": [132, 133, 134, 176, 177, 178, 179, 180, 181], "tradit": [5, 198, 199, 202, 203, 204], "trail": 118, "train": [1, 2, 3, 4, 5, 6, 8, 23, 24, 25, 59, 60, 61, 62, 74, 75, 76, 77, 80, 82, 83, 92, 99, 100, 101, 102, 103, 115, 117, 131, 147, 148, 150, 151, 152, 153, 159, 160, 161, 162, 163, 176, 177, 178, 179, 180, 181, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 283, 286, 287, 288, 289, 290, 291, 294], "trainabl": [75, 176, 177, 178, 179, 180, 181, 194], "transact": 135, "transfer": [117, 179, 180], "transform": [2, 4, 5, 6, 8, 12, 74, 81, 106, 108, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 210, 273], "transform_pipelin": [283, 294], "transformed_imag": [283, 294], "transit": 172, "translat": [188, 191], "transpos": [8, 10, 242], "treat": [0, 76, 182, 194], "triangular": [10, 18], "true": [1, 2, 3, 4, 5, 6, 20, 23, 24, 25, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 98, 99, 100, 101, 102, 103, 106, 108, 115, 117, 130, 132, 133, 134, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 187, 188, 189, 190, 191, 192, 194, 195, 200, 201, 205, 209, 215, 216, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284], "truncat": 75, "truncate_from": 75, "try": 0, "tune": 294, "tupl": [2, 3, 5, 6, 12, 18, 20, 35, 75, 77, 78, 94, 95, 96, 98, 118, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 155, 156, 157, 167, 182, 185, 186, 187, 188, 189, 190, 191, 192, 200, 201, 202, 203, 204, 206, 213, 215, 216, 217, 219, 221, 235, 238, 240, 253, 254, 255, 262, 267, 269, 271, 273, 274, 277, 278, 279, 281, 282, 285, 286, 287, 292], "twice": 274, "two": [8, 11, 12, 14, 15, 17, 18, 20, 32, 33, 34, 64, 67, 94, 95, 96, 106, 123, 127, 135, 136, 156, 162, 166, 177, 180, 188, 191, 200, 201, 202, 203, 204, 206, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 265, 273], "type": [31, 35, 53, 63, 76, 77, 78, 106, 166, 221, 233, 234, 235, 236, 237, 238, 239, 240, 241, 268, 273, 284], "typeerror": [0, 1, 2, 77, 195], "typic": [9, 35, 46, 63, 76, 92, 99, 131, 135, 150, 152, 174, 176, 177, 178, 179, 180, 181, 196, 197, 205, 207, 211, 213, 281, 284, 286, 290, 292, 294], "u": [17, 20, 141, 143, 145], "u_": 202, "ultra": 41, "unchang": [76, 103, 146, 148, 149, 150, 159, 160, 161, 162, 163, 167, 275, 278], "undefin": 231, "under": [47, 48, 49, 50, 51, 52, 194], "underbrac": 15, "underdetermin": 17, "undergo": 294, "underli": [0, 8, 24, 25, 26, 28, 29, 268, 271, 275, 277, 282], "understand": [8, 72, 74, 75, 83, 294], "unexpect": [77, 80, 83, 220], "unfold": [97, 105], "unifi": 0, "uniform": [139, 141, 145, 155, 156, 157, 166, 168, 214, 215, 216, 220, 288, 289, 290, 291], "uniformli": [215, 219], "uniniti": [235, 236], "unintend": 211, "union": 67, "uniqu": [10, 17, 19, 79, 81], "unit": [21, 31, 72, 85, 86, 88, 89, 90, 140, 141, 144, 145, 146, 147, 148, 149, 150, 159], "unless": [36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 56, 57, 58, 221], "unlik": [76, 79, 80, 81, 82, 88, 146, 148, 159, 182, 198, 199, 201, 202, 203, 204, 206], "unnecessari": 211, "unpad": 274, "unseen": 294, "unsqueez": 272, "unstabl": 14, "up": [195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 290, 292], "updat": [4, 76, 82, 83, 159, 160, 161, 162, 163, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211], "upon": [25, 74, 79, 80, 81, 82], "upper": [18, 143, 206, 219], "us": [0, 2, 3, 4, 5, 6, 8, 9, 10, 12, 14, 15, 17, 18, 20, 23, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 53, 54, 55, 56, 57, 58, 63, 64, 65, 66, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 106, 108, 113, 115, 117, 120, 121, 130, 131, 132, 133, 134, 135, 136, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 209, 210, 211, 212, 215, 216, 217, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 251, 253, 254, 255, 262, 267, 273, 274, 276, 278, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294], "usag": [3, 9, 80, 83, 195, 196, 285, 286, 287, 288, 289, 290, 291, 292], "use_aux": [23, 24, 25], "user": [1, 2, 3, 4, 8, 79, 80, 81, 82, 194, 199, 283, 284, 294], "usual": 171, "util": [3, 8, 9, 64, 65, 66, 81, 82, 194, 220], "v": [12, 17, 20, 200, 201, 203, 204, 234], "v1": [23, 24, 27, 28, 29, 74], "v2": [27, 29, 74], "v3": [23, 25, 26, 74], "v4": [23, 26, 74], "v_": [197, 200, 201, 203, 204, 205, 207], "v_stack": 282, "v_t": [204, 205], "val": 138, "valid": [132, 133, 134, 136, 155, 156, 157, 266], "valu": [8, 11, 15, 16, 17, 20, 44, 45, 75, 77, 79, 81, 83, 85, 88, 91, 92, 93, 94, 95, 96, 98, 109, 110, 111, 113, 114, 115, 117, 118, 119, 130, 131, 132, 133, 134, 135, 138, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 159, 160, 161, 162, 163, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 187, 188, 189, 190, 191, 192, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 213, 215, 216, 217, 218, 219, 220, 233, 234, 235, 236, 237, 243, 244, 245, 247, 250, 251, 252, 253, 255, 257, 258, 260, 261, 269, 274, 275, 277, 281, 286, 288, 289, 291], "valuabl": 220, "valueerror": [1, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 195], "vanish": [74, 146, 150, 176, 177, 178], "var": 242, "vari": [63, 80, 82, 119, 130, 184, 290], "variabl": [77, 83, 119, 120, 121, 167, 184, 185, 186, 194, 209, 211, 215, 235, 287, 290], "varianc": [90, 99, 115, 117, 132, 133, 134, 140, 141, 144, 145, 150, 159, 176, 177, 178, 179, 180, 181, 182, 200, 201, 202, 203, 204, 217, 267, 290, 294], "variant": [44, 45, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 200, 201, 202], "variat": [179, 180, 181, 287, 294], "varieti": [4, 27, 220, 294], "variou": [5, 23, 28, 29, 31, 74, 149, 196, 220, 253, 255, 274, 284], "vdot": 230, "vector": [12, 17, 18, 19, 20, 106, 108, 166, 168, 224, 225, 226, 230], "veloc": [197, 205, 207], "veri": [17, 38, 40, 74, 198], "versa": 206, "versatil": [220, 273], "version": [20, 23, 27, 31, 32, 33, 205, 230, 288], "vertic": [279, 282, 291], "vgg": 67, "vggnet": [30, 68, 69, 70, 71, 74], "vggnet_11": 74, "vggnet_13": 74, "vggnet_16": 74, "vggnet_19": 74, "via": [3, 4, 63], "vice": 206, "video": [96, 103, 134, 157, 181, 189, 192], "view": [27, 31, 80, 188, 189, 190, 191, 192, 277], "vision": [35, 74, 95, 156, 166, 294], "visual": [72, 74], "vol": 74, "vollgraf": 5, "volumetr": [96, 103, 134, 157, 181, 189, 192], "vstack": 272, "w": [35, 47, 48, 49, 50, 51, 52, 64, 65, 66, 95, 96, 98, 102, 103, 106, 108, 120, 121, 123, 124, 127, 128, 130, 131, 133, 134, 135, 155, 156, 157, 166, 168, 177, 178, 180, 181, 185, 186, 189, 192, 285, 287], "w_": [95, 96, 120, 121, 123, 124, 127, 128, 130, 156, 157, 185, 186, 188, 189, 191, 192], "w_out": [95, 96, 123, 124, 127, 128], "wa": [24, 159, 160, 161, 162, 163, 211], "wai": [1, 22, 73, 209, 211, 277], "wang": 74, "want": [0, 8, 283, 285], "warn": [79, 81], "we": [3, 8, 210, 273], "weight": [36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 56, 57, 58, 74, 94, 95, 96, 106, 108, 109, 110, 114, 115, 117, 118, 130, 135, 136, 140, 141, 144, 145, 155, 156, 157, 159, 160, 161, 162, 163, 166, 168, 170, 171, 174, 176, 177, 178, 179, 180, 181, 182, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 215, 220], "weight1": 81, "weight2": 81, "weight_decai": [197, 198, 199, 200, 201, 202, 203, 204, 205, 207], "well": [25, 63, 140, 141], "were": 83, "what": 211, "when": [0, 1, 3, 8, 15, 77, 80, 82, 83, 85, 88, 94, 95, 96, 146, 167, 176, 177, 178, 179, 180, 181, 195, 198, 206, 209, 211, 212, 213, 220, 231, 283, 285], "where": [3, 4, 5, 6, 11, 12, 14, 15, 16, 17, 18, 20, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 101, 102, 103, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 135, 136, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 187, 188, 189, 190, 191, 192, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 213, 220, 222, 223, 227, 228, 229, 231, 232, 235, 236, 247, 251, 252, 253, 254, 255, 258, 260, 262, 265, 266, 267, 269, 274, 276, 280, 283, 284, 285, 286, 287, 288, 289, 290, 291], "whether": [1, 11, 23, 24, 25, 77, 78, 140, 141, 205, 209, 215, 216, 217, 219, 221, 235, 236, 253, 254, 255, 262, 267], "which": [0, 5, 8, 11, 12, 14, 15, 16, 17, 18, 20, 26, 29, 59, 60, 61, 62, 63, 68, 69, 70, 71, 74, 77, 79, 81, 83, 88, 92, 111, 131, 136, 146, 147, 148, 152, 153, 159, 172, 174, 176, 177, 178, 179, 180, 181, 182, 200, 201, 203, 205, 209, 211, 213, 215, 216, 219, 244, 245, 246, 247, 248, 249, 252, 253, 254, 255, 256, 258, 259, 260, 262, 263, 264, 265, 267, 269, 276, 277, 279, 281, 284, 285, 287, 288, 289, 290, 291, 292, 294], "while": [8, 29, 46, 47, 48, 49, 50, 51, 52, 59, 60, 61, 62, 74, 80, 83, 99, 147, 149, 194, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 211, 277, 279, 288, 294], "who": [8, 79, 80, 81, 82], "whose": [20, 236, 239, 241, 243, 247, 251, 257], "wide": [4, 6, 9, 17, 35, 43, 44, 45, 74, 89, 149, 155, 156, 171], "wide_resnet_101": 74, "wide_resnet_50": 74, "wider": [44, 45, 94, 95], "wideresnet": 74, "width": [44, 45, 46, 47, 48, 49, 50, 51, 52, 63, 95, 96, 98, 102, 103, 120, 121, 123, 124, 127, 128, 130, 131, 136, 156, 157, 177, 178, 180, 181, 185, 186, 188, 189, 191, 192, 285, 287, 292], "window": [122, 123, 124, 126, 127, 128, 187, 188, 189, 190, 191, 192, 198, 253, 255], "wise": [57, 59, 60, 61, 62, 74, 85, 86, 88, 89, 90, 91, 92, 93, 132, 133, 134, 135, 152, 159, 160, 161, 162, 163, 194, 210, 222, 223, 226, 227, 228, 229, 231, 232, 243, 244, 245, 246, 247, 248, 249, 250, 252, 256, 257, 258, 259, 260, 261, 263, 264, 265, 271, 282], "within": [2, 74, 75, 76, 79, 80, 81, 82, 83, 93, 130, 131, 145, 147, 149, 150, 151, 153, 155, 156, 157, 159, 160, 161, 167, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 187, 188, 189, 190, 191, 192, 196, 211, 233, 247, 290, 294], "without": [8, 46, 79, 80, 81, 106, 108, 155, 156, 157, 166, 168, 209, 212, 253, 275, 277, 281], "won": 211, "work": [1, 2, 3, 8, 10, 210, 213], "workflow": [220, 294], "workload": 8, "wrap": [3, 194, 211, 268], "wrapper": 194, "x": [8, 9, 19, 27, 31, 53, 67, 74, 75, 76, 77, 79, 80, 81, 82, 83, 92, 106, 108, 131, 136, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 187, 188, 189, 190, 191, 192, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 215, 216, 217, 219, 235, 236, 251, 273, 285, 286, 287, 288, 289, 290, 291, 292], "x1": 166, "x2": 166, "x_": [171, 174, 273], "x_c": [171, 174], "x_i": 170, "x_k": 171, "xavier": [140, 141, 144, 145], "xavier_norm": 139, "xavier_uniform": 139, "xiao": 5, "xie": 74, "xy": 273, "x\u2081": 166, "x\u2082": 166, "y": [79, 80, 81, 82, 83, 131, 146, 147, 148, 149, 150, 151, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 187, 188, 189, 190, 191, 192, 215, 216, 217, 219, 235, 236, 273, 288], "y_": [171, 174, 273], "y_c": [171, 174], "y_i": 170, "yann": [6, 74], "yet": [8, 210], "yield": [0, 1, 77, 211], "you": [0, 75, 80, 82, 83, 194, 196, 209, 211, 220, 235, 236, 237, 241, 266, 268, 283, 285, 294], "your": [194, 196, 209, 211, 220, 294], "z": [236, 240, 241], "zalandoresearch": 5, "zeiler": [72, 74], "zero": [15, 17, 18, 25, 75, 85, 88, 94, 95, 96, 99, 100, 101, 102, 103, 122, 123, 124, 126, 127, 128, 138, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 155, 156, 157, 159, 160, 161, 162, 163, 182, 187, 188, 189, 190, 191, 192, 194, 195, 198, 199, 200, 201, 202, 203, 204, 205, 235, 236, 237, 241, 242, 247, 257, 274], "zero_grad": [78, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 221], "zeros_lik": [236, 242], "zfnet": [30, 74], "zhang": 74, "zisserman": 74, "\u03c3\u1d62": 17}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "FashionMNIST", "MNIST", "Image Datasets", "Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "alexnet", "Inception", "inception_v1", "inception_v3", "inception_v4", "InceptionResNet", "inception_resnet_v1", "inception_resnet_v2", "ConvNets", "LeNet", "lenet_1", "lenet_4", "lenet_5", "ResNet", "resnet_1001", "resnet_101", "resnet_152", "resnet_18", "resnet_200", "resnet_269", "resnet_34", "resnet_50", "wide_resnet_101", "wide_resnet_50", "ResNeXt", "resnext_101_32x16d", "resnext_101_32x32d", "resnext_101_32x4d", "resnext_101_32x8d", "resnext_101_64x4d", "resnext_50_32x4d", "SENet", "se_resnet_101", "se_resnet_152", "se_resnet_18", "se_resnet_34", "se_resnet_50", "se_resnext_101_32x4d", "se_resnext_101_32x8d", "se_resnext_101_64x4d", "se_resnext_50_32x4d", "SKNet", "models.sk_resnet_18", "models.sk_resnet_34", "models.sk_resnet_50", "VGGNet", "vggnet_11", "vggnet_13", "vggnet_16", "vggnet_19", "ZFNet", "zfnet", "lucid.models", "models.summarize", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "nn.SEModule", "nn.SelectiveKernel", "Fused Layers", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.LeakyReLU", "nn.ReLU", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Tanh", "Activation Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "lucid.nn", "optim.Optimizer", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.types", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.meshgrid", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.unsqueeze", "lucid.vstack", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": 210, "1d": 210, "2": 210, "2d": 210, "3": 210, "It": [209, 211], "ab": 243, "activ": [87, 105, 154, 165], "ad": 210, "adadelta": 198, "adagrad": 199, "adam": 200, "adamax": 202, "adamw": 201, "adaptive_avg_pool1d": 119, "adaptive_avg_pool2d": 120, "adaptive_avg_pool3d": 121, "adaptiveavgpool1d": 184, "adaptiveavgpool2d": 185, "adaptiveavgpool3d": 186, "add": 222, "addit": 17, "admonit": 213, "advanc": [98, 294], "alexnet": [21, 22], "algebra": 13, "algorithm": [197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "alias": 213, "align": 210, "alpha_dropout": 99, "alphadropout": 159, "also": 196, "anoth": 268, "arang": 233, "arcco": 244, "architectur": [21, 32, 33, 34, 44, 45, 72], "arcsin": 245, "arctan": 246, "asgd": 197, "attent": 136, "attribut": [5, 6, 21, 27, 31, 35, 46, 53, 63, 67, 72, 76, 78, 79, 80, 81, 82, 83, 132, 133, 134, 135, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 221, 285, 286, 287, 288, 289, 290, 291, 292], "avg_pool1d": 122, "avg_pool2d": 123, "avg_pool3d": 124, "avgpool1d": 187, "avgpool2d": 188, "avgpool3d": 189, "axi": 210, "backpropag": 221, "backward": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 106, 108, 130, 135, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 187, 188, 189, 190, 191, 192, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282], "batch_norm": 115, "batchnorm": 137, "batchnorm1d": 176, "batchnorm2d": 177, "batchnorm3d": 178, "bceloss": 170, "behavior": [119, 120, 121, 184, 185, 186], "benefit": 211, "bilinear": [106, 166], "binari": 242, "binary_cross_entropi": 109, "broadcast": 210, "buffer": 76, "calcul": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 35, 46, 53, 63, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 98, 106, 108, 119, 120, 121, 130, 132, 133, 134, 135, 136, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292], "captur": 212, "case": 213, "centercrop": 285, "choleski": 10, "class": [0, 1, 2, 5, 6, 21, 23, 27, 31, 35, 46, 53, 63, 67, 72, 76, 77, 78, 79, 80, 81, 82, 83, 132, 133, 134, 135, 136, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 221, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292], "clip": 247, "co": 248, "combin": 0, "compon": [3, 8, 194], "compos": 283, "concatdataset": [0, 1], "concaten": 269, "conclus": [3, 8, 194, 209, 210, 211, 220, 284, 294], "constant": 138, "contain": 84, "conv": 137, "conv1d": [94, 155], "conv2d": [95, 156], "conv3d": [96, 157], "convbnrelu1d": 132, "convbnrelu2d": 133, "convbnrelu3d": 134, "convnet": [30, 74], "convolut": [97, 105, 158, 165], "core": 8, "cosh": 249, "creat": [78, 221, 268], "cross_entropi": 110, "crossentropyloss": 171, "cube": 250, "custom": [1, 2, 3, 77, 195, 196, 294], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 7], "defin": [2, 77, 195, 196], "definit": 213, "descript": [47, 48, 49, 50, 51, 52, 64, 65, 66, 212], "det": 11, "detail": [17, 44, 45], "diag": 234, "dilat": 98, "div": 223, "dot": 224, "dropout": [100, 104, 105, 160, 164, 165], "dropout1d": [101, 161], "dropout2d": [102, 162], "dropout3d": [103, 163], "eig": 12, "elu": [85, 146], "empti": 235, "empty_lik": 236, "exampl": [0, 1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 294], "excit": 137, "exp": 251, "ey": 237, "fashionmnist": 5, "featur": [4, 8, 9, 59, 60, 61, 62, 196, 220, 294], "flatten": 270, "forward": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 35, 46, 53, 63, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 98, 106, 108, 119, 120, 121, 130, 132, 133, 134, 135, 136, 140, 141, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292], "from": 268, "function": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 73, 75, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 138, 140, 141, 142, 143, 144, 145, 209, 211, 212, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282], "fuse": 137, "futur": 4, "gelu": [86, 147], "gener": [214, 242], "get": 196, "grad_en": 209, "gradient": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 106, 108, 130, 135, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 187, 188, 189, 190, 191, 192, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282], "guidelin": 213, "how": [209, 211], "hstack": 271, "huber_loss": 111, "huberloss": 172, "ident": 167, "imag": [7, 293], "incept": 23, "inception_resnet_v1": 28, "inception_resnet_v2": 29, "inception_v1": 24, "inception_v3": 25, "inception_v4": 26, "inceptionresnet": 27, "index": 221, "init": [138, 140, 141, 142, 143, 144, 145], "initi": 139, "inner": 225, "input": 268, "inspect": [196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "instance_norm": 117, "instancenorm1d": 179, "instancenorm2d": 180, "instancenorm3d": 181, "integr": [3, 194, 220, 294], "interpol": 130, "inv": 14, "iter": 221, "kaiming_norm": 140, "kaiming_uniform": 141, "kei": [3, 4, 8, 59, 60, 61, 62, 194, 196, 220, 294], "kernel": 137, "layer": [137, 154, 158, 164, 165, 169, 175, 183, 193], "layer_norm": 118, "layernorm": 182, "leaky_relu": 88, "leakyrelu": 148, "learn": 220, "lenet": 31, "lenet_1": 32, "lenet_4": 33, "lenet_5": 34, "limit": 8, "linalg": [9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20], "linear": [13, 105, 107, 108, 165, 168, 169], "list": 268, "load": 1, "log": 252, "loss": [105, 112, 165, 175], "lucid": [3, 4, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 74, 105, 194, 196, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 294], "matmul": 226, "matrix": 226, "matrix_pow": 15, "max": 253, "max_pool1d": 126, "max_pool2d": 127, "max_pool3d": 128, "maximum": 227, "maxpool1d": 190, "maxpool2d": 191, "maxpool3d": 192, "mean": 254, "mechan": 136, "meshgrid": 273, "metadata": 212, "method": [0, 1, 2, 5, 6, 27, 31, 67, 77, 78, 195, 221], "min": 255, "minimum": 228, "mnist": 6, "model": [64, 65, 66, 74, 75, 194], "modul": [77, 165], "moduledict": 79, "modulelist": 80, "more": 220, "mse_loss": 113, "mseloss": 173, "mul": 229, "multipl": [0, 226], "nadam": 203, "new": 210, "newaxi": 210, "nll_loss": 114, "nllloss": 174, "nn": [76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 105, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194], "no_grad": 211, "norm": 16, "normal": [105, 116, 142, 165, 183, 286], "note": 8, "number": 214, "ones": 238, "ones_lik": 239, "oper": [13, 226, 242], "optim": [195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208], "organ": 194, "outer": 230, "overview": [3, 4, 8, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 54, 55, 56, 57, 58, 194, 196, 220, 294], "pad": 274, "paramet": [1, 5, 6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 211, 212, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292], "parameterdict": 81, "parameterlist": 82, "perform": 221, "pinv": 17, "pipelin": [3, 294], "pitfal": [209, 211], "pool": [105, 125, 165, 193], "potenti": [209, 211], "power": 231, "properti": [78, 221], "qr": 18, "radam": 204, "rais": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20], "rand": 215, "randint": 216, "randn": 217, "random": [214, 215, 216, 217, 218, 219, 220], "randomcrop": 287, "randomgrayscal": 288, "randomhorizontalflip": 289, "randomrot": 290, "randomverticalflip": 291, "ravel": 275, "reciproc": 256, "refer": [5, 6, 135, 196], "register_model": 212, "relu": [89, 137, 149], "repeat": 276, "reshap": 277, "resiz": 292, "resnet": 35, "resnet_1001": 36, "resnet_101": 37, "resnet_152": 38, "resnet_18": 39, "resnet_200": 40, "resnet_269": 41, "resnet_34": 42, "resnet_50": 43, "resnext": 46, "resnext_101_32x16d": 47, "resnext_101_32x32d": 48, "resnext_101_32x4d": 49, "resnext_101_32x8d": 50, "resnext_101_64x4d": 51, "resnext_50_32x4d": 52, "return": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 28, 29, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 73, 75, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 136, 138, 140, 141, 142, 143, 144, 145, 209, 211, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282], "rmsprop": 205, "rotat": 131, "rprop": 206, "rule": 226, "se_resnet_101": 54, "se_resnet_152": 55, "se_resnet_18": 56, "se_resnet_34": 57, "se_resnet_50": 58, "se_resnext_101_32x4d": 59, "se_resnext_101_32x8d": 60, "se_resnext_101_64x4d": 61, "se_resnext_50_32x4d": 62, "see": 196, "seed": 218, "select": 137, "selectivekernel": 136, "selu": [90, 150], "semodul": 135, "senet": 53, "sequenti": 83, "sgd": 207, "sigmoid": [91, 151], "sign": 257, "signatur": [0, 1, 2, 5, 6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 106, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 159, 160, 161, 162, 163, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 195, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 212, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292], "sin": 258, "sinh": 259, "sk_resnet_18": 64, "sk_resnet_34": 65, "sk_resnet_50": 66, "sknet": 63, "slice": 221, "softmax": [92, 152], "solv": 19, "sqrt": 260, "squar": 261, "squeez": [137, 278], "stack": 279, "start": 196, "state": [196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207], "sub": 232, "sum": 262, "summar": 75, "summari": 75, "svd": 20, "tabl": 75, "tan": 263, "tanh": [93, 153, 264], "tensor": [210, 221, 242, 268, 272], "through": 221, "tile": 280, "totensor": 284, "trace": 265, "track": 221, "transform": [283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294], "transpos": 266, "type": 213, "unari": 242, "unfold": 98, "uniform": [143, 219], "unsqueez": 281, "us": [1, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 213, 268], "usag": [4, 8, 24, 25, 26, 28, 29, 31, 32, 33, 34, 59, 60, 61, 62, 76, 131, 209, 210, 211, 213, 273, 283, 284, 294], "util": [105, 129], "utilit": 272, "var": 267, "vggnet": 67, "vggnet_11": 68, "vggnet_13": 69, "vggnet_16": 70, "vggnet_19": 71, "vstack": 282, "weight": 139, "why": 213, "wide_resnet_101": 44, "wide_resnet_50": 45, "work": [4, 209, 211], "xavier_norm": 144, "xavier_uniform": 145, "zero": 240, "zeros_lik": 241, "zfnet": [72, 73]}})