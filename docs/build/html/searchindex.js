Search.setIndex({"alltitles": {"1-D ascending": [[481, null]], "@ Operator": [[427, "operator"]], "About Dagger (^\\dagger) Variants": [[57, "about-dagger-dagger-variants"], [59, "about-dagger-dagger-variants"], [61, "about-dagger-dagger-variants"]], "Activation Functions": [[227, null], [252, null]], "Activation Layers": [[317, null], [339, null]], "Additional Details": [[25, "additional-details"]], "Additional Options": [[318, "additional-options"]], "Advanced Example with Dilation": [[243, "advanced-example-with-dilation"]], "Advanced Features": [[523, "advanced-features"]], "Advantages": [[10, "advantages"], [13, "advantages"], [14, "advantages"], [15, "advantages"], [337, "advantages"]], "AlexNet": [[29, null], [100, "alexnet"]], "Algorithm": [[395, "algorithm"], [396, "algorithm"], [397, "algorithm"], [398, "algorithm"], [399, "algorithm"], [400, "algorithm"], [401, "algorithm"], [402, "algorithm"], [403, "algorithm"], [404, "algorithm"], [405, "algorithm"]], "Along axis, keeping dims": [[480, null]], "Architecture": [[29, "architecture"], [40, "architecture"], [55, "architecture"], [102, "architecture"], [103, "architecture"], [104, "architecture"], [105, "architecture"], [205, "architecture"], [209, "architecture"], [210, "architecture"], [211, "architecture"]], "Architecture Details": [[156, "architecture-details"], [157, "architecture-details"]], "Attention Functions": [[234, null], [252, null]], "Attention Layers": [[320, null], [339, null]], "Attention Mechanism": [[235, "attention-mechanism"], [295, "attention-mechanism"]], "Attributes": [[5, "attributes"], [6, "attributes"], [7, "attributes"], [8, "attributes"], [29, "attributes"], [97, "attributes"], [101, "attributes"], [147, "attributes"], [158, "attributes"], [165, "attributes"], [175, "attributes"], [192, "attributes"], [203, "attributes"], [205, "attributes"], [216, "attributes"], [218, "attributes"], [219, "attributes"], [220, "attributes"], [221, "attributes"], [222, "attributes"], [223, "attributes"], [288, "attributes"], [289, "attributes"], [290, "attributes"], [291, "attributes"], [292, "attributes"], [293, "attributes"], [294, "attributes"], [305, "attributes"], [306, "attributes"], [309, "attributes"], [310, "attributes"], [312, "attributes"], [313, "attributes"], [314, "attributes"], [316, "attributes"], [321, "attributes"], [322, "attributes"], [323, "attributes"], [324, "attributes"], [325, "attributes"], [326, "attributes"], [329, "attributes"], [331, "attributes"], [332, "attributes"], [333, "attributes"], [334, "attributes"], [335, "attributes"], [340, "attributes"], [341, "attributes"], [342, "attributes"], [344, "attributes"], [345, "attributes"], [346, "attributes"], [347, "attributes"], [348, "attributes"], [350, "attributes"], [351, "attributes"], [352, "attributes"], [354, "attributes"], [355, "attributes"], [356, "attributes"], [357, "attributes"], [359, "attributes"], [360, "attributes"], [361, "attributes"], [362, "attributes"], [363, "attributes"], [364, "attributes"], [365, "attributes"], [366, "attributes"], [367, "attributes"], [368, "attributes"], [369, "attributes"], [370, "attributes"], [407, "attributes"], [422, "attributes"], [514, "attributes"], [515, "attributes"], [516, "attributes"], [517, "attributes"], [518, "attributes"], [519, "attributes"], [520, "attributes"], [521, "attributes"]], "Automatic Differentiation (Autodiff)": [[16, "automatic-differentiation-autodiff"]], "Axis Swapping Rules": [[472, "axis-swapping-rules"]], "Backward Gradient Calculation": [[18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [20, "backward-gradient-calculation"], [22, "backward-gradient-calculation"], [23, "backward-gradient-calculation"], [24, "backward-gradient-calculation"], [25, "backward-gradient-calculation"], [26, "backward-gradient-calculation"], [27, "backward-gradient-calculation"], [28, "backward-gradient-calculation"], [219, "backward-gradient-calculation"], [220, "backward-gradient-calculation"], [221, "backward-gradient-calculation"], [222, "backward-gradient-calculation"], [223, "backward-gradient-calculation"], [225, "backward-gradient-calculation"], [226, "backward-gradient-calculation"], [228, "backward-gradient-calculation"], [229, "backward-gradient-calculation"], [230, "backward-gradient-calculation"], [231, "backward-gradient-calculation"], [232, "backward-gradient-calculation"], [233, "backward-gradient-calculation"], [245, "backward-gradient-calculation"], [253, "backward-gradient-calculation"], [255, "backward-gradient-calculation"], [281, "backward-gradient-calculation"], [286, "backward-gradient-calculation"], [294, "backward-gradient-calculation"], [304, "backward-gradient-calculation"], [305, "backward-gradient-calculation"], [306, "backward-gradient-calculation"], [307, "backward-gradient-calculation"], [308, "backward-gradient-calculation"], [309, "backward-gradient-calculation"], [310, "backward-gradient-calculation"], [312, "backward-gradient-calculation"], [313, "backward-gradient-calculation"], [314, "backward-gradient-calculation"], [315, "backward-gradient-calculation"], [316, "backward-gradient-calculation"], [321, "backward-gradient-calculation"], [322, "backward-gradient-calculation"], [323, "backward-gradient-calculation"], [324, "backward-gradient-calculation"], [325, "backward-gradient-calculation"], [326, "backward-gradient-calculation"], [329, "backward-gradient-calculation"], [332, "backward-gradient-calculation"], [333, "backward-gradient-calculation"], [334, "backward-gradient-calculation"], [335, "backward-gradient-calculation"], [340, "backward-gradient-calculation"], [341, "backward-gradient-calculation"], [342, "backward-gradient-calculation"], [344, "backward-gradient-calculation"], [345, "backward-gradient-calculation"], [346, "backward-gradient-calculation"], [347, "backward-gradient-calculation"], [348, "backward-gradient-calculation"], [350, "backward-gradient-calculation"], [351, "backward-gradient-calculation"], [352, "backward-gradient-calculation"], [354, "backward-gradient-calculation"], [355, "backward-gradient-calculation"], [356, "backward-gradient-calculation"], [357, "backward-gradient-calculation"], [365, "backward-gradient-calculation"], [366, "backward-gradient-calculation"], [367, "backward-gradient-calculation"], [368, "backward-gradient-calculation"], [369, "backward-gradient-calculation"], [370, "backward-gradient-calculation"], [423, "backward-gradient-calculation"], [424, "backward-gradient-calculation"], [425, "backward-gradient-calculation"], [426, "backward-gradient-calculation"], [427, "backward-gradient-calculation"], [428, "backward-gradient-calculation"], [429, "backward-gradient-calculation"], [430, "backward-gradient-calculation"], [431, "backward-gradient-calculation"], [432, "backward-gradient-calculation"], [433, "backward-gradient-calculation"], [434, "backward-gradient-calculation"], [448, "backward-gradient-calculation"], [449, "backward-gradient-calculation"], [450, "backward-gradient-calculation"], [451, "backward-gradient-calculation"], [453, "backward-gradient-calculation"], [454, "backward-gradient-calculation"], [455, "backward-gradient-calculation"], [456, "backward-gradient-calculation"], [457, "backward-gradient-calculation"], [459, "backward-gradient-calculation"], [460, "backward-gradient-calculation"], [461, "backward-gradient-calculation"], [462, "backward-gradient-calculation"], [463, "backward-gradient-calculation"], [464, "backward-gradient-calculation"], [466, "backward-gradient-calculation"], [467, "backward-gradient-calculation"], [468, "backward-gradient-calculation"], [469, "backward-gradient-calculation"], [470, "backward-gradient-calculation"], [471, "backward-gradient-calculation"], [472, "backward-gradient-calculation"], [473, "backward-gradient-calculation"], [474, "backward-gradient-calculation"], [475, "backward-gradient-calculation"], [476, "backward-gradient-calculation"], [477, "backward-gradient-calculation"], [482, "backward-gradient-calculation"], [484, "backward-gradient-calculation"], [489, "backward-gradient-calculation"], [492, "backward-gradient-calculation"], [494, "backward-gradient-calculation"], [495, "backward-gradient-calculation"], [496, "backward-gradient-calculation"], [497, "backward-gradient-calculation"], [501, "backward-gradient-calculation"], [502, "backward-gradient-calculation"], [503, "backward-gradient-calculation"], [505, "backward-gradient-calculation"], [506, "backward-gradient-calculation"], [507, "backward-gradient-calculation"], [509, "backward-gradient-calculation"], [510, "backward-gradient-calculation"]], "Base Class": [[393, null]], "Basic Installation": [[16, "basic-installation"]], "Behavior": [[268, "behavior"], [269, "behavior"], [270, "behavior"], [271, "behavior"], [272, "behavior"], [273, "behavior"], [359, "behavior"], [360, "behavior"], [361, "behavior"], [362, "behavior"], [363, "behavior"], [364, "behavior"]], "Benefits": [[408, "benefits"], [411, "benefits"]], "Binary Functions": [[447, null]], "Bottleneck Configuration": [[117, "bottleneck-configuration"], [118, "bottleneck-configuration"]], "Broadcasting Rules": [[482, "broadcasting-rules"]], "CIFAR10": [[5, null]], "CIFAR100": [[6, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [6, "class-signature"], [7, "class-signature"], [8, "class-signature"], [29, "class-signature"], [31, "class-signature"], [40, "class-signature"], [41, "class-signature"], [55, "class-signature"], [65, "class-signature"], [69, "class-signature"], [74, "class-signature"], [75, "class-signature"], [88, "class-signature"], [92, "class-signature"], [97, "class-signature"], [101, "class-signature"], [105, "class-signature"], [111, "class-signature"], [112, "class-signature"], [113, "class-signature"], [114, "class-signature"], [138, "class-signature"], [147, "class-signature"], [158, "class-signature"], [165, "class-signature"], [175, "class-signature"], [180, "class-signature"], [181, "class-signature"], [192, "class-signature"], [197, "class-signature"], [203, "class-signature"], [205, "class-signature"], [209, "class-signature"], [210, "class-signature"], [211, "class-signature"], [213, "class-signature"], [216, "class-signature"], [217, "class-signature"], [218, "class-signature"], [219, "class-signature"], [220, "class-signature"], [221, "class-signature"], [222, "class-signature"], [223, "class-signature"], [288, "class-signature"], [289, "class-signature"], [290, "class-signature"], [291, "class-signature"], [292, "class-signature"], [293, "class-signature"], [294, "class-signature"], [295, "class-signature"], [305, "class-signature"], [306, "class-signature"], [307, "class-signature"], [308, "class-signature"], [309, "class-signature"], [310, "class-signature"], [311, "class-signature"], [312, "class-signature"], [313, "class-signature"], [314, "class-signature"], [315, "class-signature"], [316, "class-signature"], [318, "class-signature"], [319, "class-signature"], [321, "class-signature"], [322, "class-signature"], [323, "class-signature"], [324, "class-signature"], [325, "class-signature"], [326, "class-signature"], [327, "class-signature"], [329, "class-signature"], [330, "class-signature"], [331, "class-signature"], [332, "class-signature"], [333, "class-signature"], [334, "class-signature"], [335, "class-signature"], [337, "class-signature"], [340, "class-signature"], [341, "class-signature"], [342, "class-signature"], [344, "class-signature"], [345, "class-signature"], [346, "class-signature"], [347, "class-signature"], [348, "class-signature"], [350, "class-signature"], [351, "class-signature"], [352, "class-signature"], [353, "class-signature"], [354, "class-signature"], [355, "class-signature"], [356, "class-signature"], [357, "class-signature"], [359, "class-signature"], [360, "class-signature"], [361, "class-signature"], [362, "class-signature"], [363, "class-signature"], [364, "class-signature"], [365, "class-signature"], [366, "class-signature"], [367, "class-signature"], [368, "class-signature"], [369, "class-signature"], [370, "class-signature"], [372, "class-signature"], [374, "class-signature"], [375, "class-signature"], [376, "class-signature"], [377, "class-signature"], [378, "class-signature"], [380, "class-signature"], [383, "class-signature"], [385, "class-signature"], [386, "class-signature"], [387, "class-signature"], [388, "class-signature"], [389, "class-signature"], [390, "class-signature"], [391, "class-signature"], [392, "class-signature"], [395, "class-signature"], [396, "class-signature"], [397, "class-signature"], [398, "class-signature"], [399, "class-signature"], [400, "class-signature"], [401, "class-signature"], [402, "class-signature"], [403, "class-signature"], [404, "class-signature"], [405, "class-signature"], [407, "class-signature"], [422, "class-signature"], [512, "class-signature"], [513, "class-signature"], [514, "class-signature"], [515, "class-signature"], [516, "class-signature"], [517, "class-signature"], [518, "class-signature"], [519, "class-signature"], [520, "class-signature"], [521, "class-signature"]], "CoAtNet": [[31, null], [100, "coatnet"]], "Combining multiple datasets": [[0, null]], "Computer Vision": [[207, "computer-vision"]], "Conclusion": [[3, "conclusion"], [10, "conclusion"], [13, "conclusion"], [14, "conclusion"], [15, "conclusion"], [16, "conclusion"], [337, "conclusion"], [382, "conclusion"], [384, "conclusion"], [409, "conclusion"], [410, "conclusion"], [421, "conclusion"], [513, "conclusion"], [523, "conclusion"]], "Configuration": [[32, "configuration"], [33, "configuration"], [34, "configuration"], [35, "configuration"], [36, "configuration"], [37, "configuration"], [38, "configuration"], [39, "configuration"]], "Configurations": [[74, "configurations"]], "Containers": [[224, null]], "Conv-BatchNorm-ReLU": [[296, null]], "ConvNeXt": [[40, null], [100, "convnext"]], "ConvNeXt_V2": [[41, null]], "Convolution Functions": [[242, null], [252, null]], "Convolution Layers": [[328, null], [339, null]], "Convolutional Transformer (CvT)": [[100, "convolutional-transformer-cvt"]], "Create a Tensor from a list": [[478, null]], "Creating a Parameter": [[218, null]], "Creating a tensor on GPU with gradient tracking": [[422, null]], "CrossViT": [[55, null], [100, "crossvit"]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[523, "custom-pipelines"]], "CvT": [[65, null]], "Defining a Custom Optimizer": [[394, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[217, null]], "Defining a custom optimizer": [[383, null]], "DenseNet": [[69, null], [100, "densenet"]], "Depthwise Separable Convolution": [[296, null]], "Descending, heapsort kernel": [[481, null]], "Description": [[159, "description"], [160, "description"], [161, "description"], [162, "description"], [163, "description"], [164, "description"], [176, "description"], [177, "description"], [178, "description"], [412, "description"]], "Details": [[119, "details"], [120, "details"], [121, "details"], [122, "details"], [123, "details"]], "Device-based dtype inference": [[422, null]], "Differences from nn.Transformer": [[213, "differences-from-nn-transformer"]], "Dropout Functions": [[251, null], [252, null]], "Dropout Layers": [[336, null], [339, null]], "Educational by Design": [[16, "educational-by-design"]], "EfficientNet": [[74, null], [100, "efficientnet"]], "EfficientNet Configurations": [[74, "id1"]], "EfficientNet_V2": [[75, null]], "Einops Functions": [[12, null]], "Einops Layers": [[338, null], [339, null]], "Embedding Process": [[284, "embedding-process"]], "Enable GPU (Metal / MLX Acceleration)": [[16, "enable-gpu-metal-mlx-acceleration"]], "Example": [[3, null], [3, null], [3, null], [10, null], [10, null], [10, null], [18, "example"], [19, "example"], [20, "example"], [22, "example"], [23, "example"], [24, "example"], [25, "example"], [26, "example"], [27, "example"], [28, "example"], [93, "example"], [94, "example"], [95, "example"], [96, "example"], [106, "example"], [107, "example"], [108, "example"], [109, "example"], [110, "example"], [115, "example"], [116, "example"], [243, "example"], [382, null], [382, null], [382, null], [409, "example"], [413, "example"], [415, "example"], [416, "example"], [417, "example"], [418, "example"], [419, "example"], [420, "example"], [421, null], [421, null], [421, null], [435, "example"], [436, "example"], [437, "example"], [438, "example"], [439, "example"], [443, "example"], [444, "example"], [445, "example"], [446, "example"], [448, "example"], [449, "example"], [450, "example"], [451, "example"], [453, "example"], [454, "example"], [455, "example"], [456, "example"], [459, "example"], [460, "example"], [462, "example"], [464, "example"], [466, "example"], [467, "example"], [468, "example"], [469, "example"], [470, "example"], [471, "example"], [473, "example"], [474, "example"], [475, "example"], [476, "example"], [477, "example"], [483, "example"], [484, "example"], [486, "example"], [487, "example"], [488, "example"], [489, "example"], [495, "example"], [497, "example"], [499, "example"], [501, "example"], [502, "example"], [504, "example"], [505, "example"], [506, "example"], [509, "example"], [510, "example"], [511, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[410, null]], "Example 2: Adding a new axis to a 2D tensor": [[410, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[410, null]], "Example Usage": [[89, "example-usage"], [90, "example-usage"], [91, "example-usage"], [98, "example-usage"], [99, "example-usage"], [101, "example-usage"], [102, "example-usage"], [103, "example-usage"], [104, "example-usage"], [171, "example-usage"], [172, "example-usage"], [173, "example-usage"], [174, "example-usage"], [179, "example-usage"], [287, "example-usage"], [512, "example-usage"], [513, "example-usage"], [523, "example-usage"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [6, "examples"], [7, "examples"], [8, "examples"], [11, "examples"], [13, "examples"], [14, "examples"], [15, "examples"], [17, "examples"], [29, "examples"], [30, "examples"], [31, "examples"], [32, "examples"], [33, "examples"], [34, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [47, "examples"], [48, "examples"], [49, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [53, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [60, "examples"], [61, "examples"], [62, "examples"], [63, "examples"], [64, "examples"], [65, "examples"], [66, "examples"], [67, "examples"], [68, "examples"], [69, "examples"], [70, "examples"], [71, "examples"], [72, "examples"], [73, "examples"], [74, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [79, "examples"], [80, "examples"], [81, "examples"], [82, "examples"], [83, "examples"], [84, "examples"], [85, "examples"], [86, "examples"], [87, "examples"], [92, "examples"], [105, "examples"], [113, "examples"], [117, "examples"], [118, "examples"], [124, "examples"], [126, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [130, "examples"], [131, "examples"], [132, "examples"], [133, "examples"], [134, "examples"], [135, "examples"], [136, "examples"], [137, "examples"], [138, "examples"], [139, "examples"], [140, "examples"], [141, "examples"], [142, "examples"], [143, "examples"], [144, "examples"], [145, "examples"], [146, "examples"], [147, "examples"], [148, "examples"], [149, "examples"], [150, "examples"], [151, "examples"], [152, "examples"], [153, "examples"], [154, "examples"], [155, "examples"], [156, "examples"], [157, "examples"], [159, "examples"], [160, "examples"], [161, "examples"], [162, "examples"], [163, "examples"], [164, "examples"], [166, "examples"], [167, "examples"], [168, "examples"], [169, "examples"], [170, "examples"], [176, "examples"], [177, "examples"], [178, "examples"], [180, "examples"], [181, "examples"], [182, "examples"], [183, "examples"], [184, "examples"], [185, "examples"], [186, "examples"], [187, "examples"], [188, "examples"], [189, "examples"], [190, "examples"], [191, "examples"], [192, "examples"], [193, "examples"], [194, "examples"], [195, "examples"], [196, "examples"], [197, "examples"], [198, "examples"], [199, "examples"], [200, "examples"], [201, "examples"], [202, "examples"], [203, "examples"], [204, "examples"], [205, "examples"], [206, "examples"], [209, "examples"], [210, "examples"], [211, "examples"], [213, "examples"], [214, "examples"], [215, "examples"], [216, "examples"], [217, "examples"], [218, "examples"], [219, "examples"], [220, "examples"], [221, "examples"], [222, "examples"], [223, "examples"], [225, "examples"], [226, "examples"], [228, "examples"], [229, "examples"], [230, "examples"], [231, "examples"], [232, "examples"], [233, "examples"], [235, "examples"], [236, "examples"], [237, "examples"], [238, "examples"], [239, "examples"], [240, "examples"], [241, "examples"], [244, "examples"], [245, "examples"], [246, "examples"], [247, "examples"], [248, "examples"], [249, "examples"], [250, "examples"], [253, "examples"], [255, "examples"], [256, "examples"], [257, "examples"], [258, "examples"], [260, "examples"], [261, "examples"], [262, "examples"], [263, "examples"], [265, "examples"], [266, "examples"], [267, "examples"], [268, "examples"], [269, "examples"], [270, "examples"], [271, "examples"], [272, "examples"], [273, "examples"], [274, "examples"], [275, "examples"], [276, "examples"], [278, "examples"], [279, "examples"], [280, "examples"], [281, "examples"], [282, "examples"], [284, "examples"], [286, "examples"], [288, "examples"], [289, "examples"], [290, "examples"], [291, "examples"], [292, "examples"], [293, "examples"], [294, "examples"], [295, "examples"], [297, "examples"], [299, "examples"], [300, "examples"], [301, "examples"], [302, "examples"], [303, "examples"], [304, "examples"], [305, "examples"], [306, "examples"], [307, "examples"], [308, "examples"], [309, "examples"], [310, "examples"], [311, "examples"], [312, "examples"], [313, "examples"], [314, "examples"], [315, "examples"], [316, "examples"], [319, "examples"], [321, "examples"], [322, "examples"], [323, "examples"], [324, "examples"], [325, "examples"], [326, "examples"], [327, "examples"], [329, "examples"], [330, "examples"], [331, "examples"], [332, "examples"], [333, "examples"], [334, "examples"], [335, "examples"], [337, "examples"], [340, "examples"], [341, "examples"], [342, "examples"], [344, "examples"], [345, "examples"], [346, "examples"], [347, "examples"], [348, "examples"], [350, "examples"], [351, "examples"], [352, "examples"], [353, "examples"], [354, "examples"], [355, "examples"], [356, "examples"], [357, "examples"], [359, "examples"], [360, "examples"], [361, "examples"], [362, "examples"], [363, "examples"], [364, "examples"], [365, "examples"], [366, "examples"], [367, "examples"], [368, "examples"], [369, "examples"], [370, "examples"], [372, "examples"], [380, "examples"], [383, "examples"], [394, "examples"], [395, "examples"], [396, "examples"], [397, "examples"], [398, "examples"], [399, "examples"], [400, "examples"], [401, "examples"], [402, "examples"], [403, "examples"], [404, "examples"], [405, "examples"], [408, "examples"], [411, "examples"], [412, "examples"], [422, "examples"], [423, "examples"], [424, "examples"], [425, "examples"], [426, "examples"], [428, "examples"], [429, "examples"], [430, "examples"], [431, "examples"], [432, "examples"], [433, "examples"], [434, "examples"], [440, "examples"], [441, "examples"], [442, "examples"], [452, "examples"], [457, "examples"], [458, "examples"], [461, "examples"], [463, "examples"], [465, "examples"], [472, "examples"], [478, "examples"], [479, "examples"], [480, "examples"], [481, "examples"], [482, "examples"], [485, "examples"], [491, "examples"], [492, "examples"], [493, "examples"], [494, "examples"], [496, "examples"], [498, "examples"], [500, "examples"], [503, "examples"], [507, "examples"], [508, "examples"], [514, "examples"], [515, "examples"], [516, "examples"], [517, "examples"], [518, "examples"], [519, "examples"], [520, "examples"], [521, "examples"]], "FashionMNIST": [[7, null]], "Fast R-CNN": [[208, "fast-r-cnn"], [209, null]], "Faster R-CNN": [[208, "faster-r-cnn"], [210, null]], "Features": [[17, "features"]], "Flattened maximum index": [[479, null]], "Forward Calculation": [[11, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [20, "forward-calculation"], [22, "forward-calculation"], [23, "forward-calculation"], [24, "forward-calculation"], [25, "forward-calculation"], [26, "forward-calculation"], [27, "forward-calculation"], [28, "forward-calculation"], [147, "forward-calculation"], [158, "forward-calculation"], [165, "forward-calculation"], [175, "forward-calculation"], [219, "forward-calculation"], [220, "forward-calculation"], [221, "forward-calculation"], [222, "forward-calculation"], [223, "forward-calculation"], [225, "forward-calculation"], [226, "forward-calculation"], [228, "forward-calculation"], [229, "forward-calculation"], [230, "forward-calculation"], [231, "forward-calculation"], [232, "forward-calculation"], [233, "forward-calculation"], [243, "forward-calculation"], [246, "forward-calculation"], [253, "forward-calculation"], [255, "forward-calculation"], [268, "forward-calculation"], [269, "forward-calculation"], [270, "forward-calculation"], [271, "forward-calculation"], [281, "forward-calculation"], [282, "forward-calculation"], [286, "forward-calculation"], [288, "forward-calculation"], [289, "forward-calculation"], [290, "forward-calculation"], [291, "forward-calculation"], [292, "forward-calculation"], [293, "forward-calculation"], [294, "forward-calculation"], [295, "forward-calculation"], [299, "forward-calculation"], [300, "forward-calculation"], [303, "forward-calculation"], [304, "forward-calculation"], [305, "forward-calculation"], [306, "forward-calculation"], [307, "forward-calculation"], [308, "forward-calculation"], [309, "forward-calculation"], [310, "forward-calculation"], [311, "forward-calculation"], [312, "forward-calculation"], [313, "forward-calculation"], [314, "forward-calculation"], [315, "forward-calculation"], [316, "forward-calculation"], [319, "forward-calculation"], [321, "forward-calculation"], [322, "forward-calculation"], [323, "forward-calculation"], [324, "forward-calculation"], [325, "forward-calculation"], [326, "forward-calculation"], [327, "forward-calculation"], [329, "forward-calculation"], [330, "forward-calculation"], [331, "forward-calculation"], [332, "forward-calculation"], [333, "forward-calculation"], [334, "forward-calculation"], [335, "forward-calculation"], [340, "forward-calculation"], [341, "forward-calculation"], [342, "forward-calculation"], [344, "forward-calculation"], [345, "forward-calculation"], [346, "forward-calculation"], [347, "forward-calculation"], [348, "forward-calculation"], [350, "forward-calculation"], [351, "forward-calculation"], [352, "forward-calculation"], [353, "forward-calculation"], [354, "forward-calculation"], [355, "forward-calculation"], [356, "forward-calculation"], [357, "forward-calculation"], [359, "forward-calculation"], [360, "forward-calculation"], [361, "forward-calculation"], [362, "forward-calculation"], [363, "forward-calculation"], [364, "forward-calculation"], [365, "forward-calculation"], [366, "forward-calculation"], [367, "forward-calculation"], [368, "forward-calculation"], [369, "forward-calculation"], [370, "forward-calculation"], [423, "forward-calculation"], [424, "forward-calculation"], [425, "forward-calculation"], [426, "forward-calculation"], [427, "forward-calculation"], [428, "forward-calculation"], [429, "forward-calculation"], [430, "forward-calculation"], [431, "forward-calculation"], [432, "forward-calculation"], [433, "forward-calculation"], [434, "forward-calculation"], [448, "forward-calculation"], [449, "forward-calculation"], [450, "forward-calculation"], [451, "forward-calculation"], [453, "forward-calculation"], [454, "forward-calculation"], [455, "forward-calculation"], [456, "forward-calculation"], [457, "forward-calculation"], [459, "forward-calculation"], [460, "forward-calculation"], [461, "forward-calculation"], [462, "forward-calculation"], [463, "forward-calculation"], [464, "forward-calculation"], [466, "forward-calculation"], [467, "forward-calculation"], [468, "forward-calculation"], [469, "forward-calculation"], [470, "forward-calculation"], [471, "forward-calculation"], [473, "forward-calculation"], [474, "forward-calculation"], [475, "forward-calculation"], [476, "forward-calculation"], [477, "forward-calculation"], [484, "forward-calculation"], [489, "forward-calculation"], [492, "forward-calculation"], [494, "forward-calculation"], [495, "forward-calculation"], [496, "forward-calculation"], [497, "forward-calculation"], [501, "forward-calculation"], [502, "forward-calculation"], [503, "forward-calculation"], [505, "forward-calculation"], [506, "forward-calculation"], [509, "forward-calculation"], [510, "forward-calculation"], [514, "forward-calculation"], [515, "forward-calculation"], [516, "forward-calculation"], [517, "forward-calculation"], [518, "forward-calculation"], [519, "forward-calculation"], [520, "forward-calculation"], [521, "forward-calculation"]], "Forward Method": [[374, "forward-method"], [375, "forward-method"], [376, "forward-method"], [377, "forward-method"], [378, "forward-method"]], "Forward Pass": [[203, "forward-pass"]], "Function Signature": [[11, "function-signature"], [13, "function-signature"], [14, "function-signature"], [15, "function-signature"], [18, "function-signature"], [19, "function-signature"], [20, "function-signature"], [22, "function-signature"], [23, "function-signature"], [24, "function-signature"], [25, "function-signature"], [26, "function-signature"], [27, "function-signature"], [28, "function-signature"], [30, "function-signature"], [32, "function-signature"], [33, "function-signature"], [34, "function-signature"], [35, "function-signature"], [36, "function-signature"], [37, "function-signature"], [38, "function-signature"], [39, "function-signature"], [42, "function-signature"], [43, "function-signature"], [44, "function-signature"], [45, "function-signature"], [46, "function-signature"], [47, "function-signature"], [48, "function-signature"], [49, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [53, "function-signature"], [54, "function-signature"], [56, "function-signature"], [57, "function-signature"], [58, "function-signature"], [59, "function-signature"], [60, "function-signature"], [61, "function-signature"], [62, "function-signature"], [63, "function-signature"], [64, "function-signature"], [66, "function-signature"], [67, "function-signature"], [68, "function-signature"], [70, "function-signature"], [71, "function-signature"], [72, "function-signature"], [73, "function-signature"], [76, "function-signature"], [77, "function-signature"], [78, "function-signature"], [79, "function-signature"], [80, "function-signature"], [81, "function-signature"], [82, "function-signature"], [83, "function-signature"], [84, "function-signature"], [85, "function-signature"], [86, "function-signature"], [87, "function-signature"], [89, "function-signature"], [90, "function-signature"], [91, "function-signature"], [93, "function-signature"], [94, "function-signature"], [95, "function-signature"], [96, "function-signature"], [98, "function-signature"], [99, "function-signature"], [102, "function-signature"], [103, "function-signature"], [104, "function-signature"], [106, "function-signature"], [107, "function-signature"], [108, "function-signature"], [109, "function-signature"], [110, "function-signature"], [115, "function-signature"], [116, "function-signature"], [117, "function-signature"], [118, "function-signature"], [119, "function-signature"], [120, "function-signature"], [121, "function-signature"], [122, "function-signature"], [123, "function-signature"], [124, "function-signature"], [125, "function-signature"], [126, "function-signature"], [127, "function-signature"], [128, "function-signature"], [129, "function-signature"], [130, "function-signature"], [131, "function-signature"], [132, "function-signature"], [133, "function-signature"], [134, "function-signature"], [135, "function-signature"], [136, "function-signature"], [137, "function-signature"], [139, "function-signature"], [140, "function-signature"], [141, "function-signature"], [142, "function-signature"], [143, "function-signature"], [144, "function-signature"], [145, "function-signature"], [146, "function-signature"], [148, "function-signature"], [149, "function-signature"], [150, "function-signature"], [151, "function-signature"], [152, "function-signature"], [153, "function-signature"], [154, "function-signature"], [155, "function-signature"], [156, "function-signature"], [157, "function-signature"], [159, "function-signature"], [160, "function-signature"], [161, "function-signature"], [162, "function-signature"], [163, "function-signature"], [164, "function-signature"], [166, "function-signature"], [167, "function-signature"], [168, "function-signature"], [169, "function-signature"], [170, "function-signature"], [171, "function-signature"], [172, "function-signature"], [173, "function-signature"], [174, "function-signature"], [176, "function-signature"], [177, "function-signature"], [178, "function-signature"], [179, "function-signature"], [182, "function-signature"], [183, "function-signature"], [184, "function-signature"], [185, "function-signature"], [186, "function-signature"], [187, "function-signature"], [188, "function-signature"], [189, "function-signature"], [190, "function-signature"], [191, "function-signature"], [193, "function-signature"], [194, "function-signature"], [195, "function-signature"], [196, "function-signature"], [198, "function-signature"], [199, "function-signature"], [200, "function-signature"], [201, "function-signature"], [202, "function-signature"], [204, "function-signature"], [206, "function-signature"], [214, "function-signature"], [215, "function-signature"], [225, "function-signature"], [226, "function-signature"], [228, "function-signature"], [229, "function-signature"], [230, "function-signature"], [231, "function-signature"], [232, "function-signature"], [233, "function-signature"], [235, "function-signature"], [236, "function-signature"], [237, "function-signature"], [238, "function-signature"], [239, "function-signature"], [240, "function-signature"], [241, "function-signature"], [243, "function-signature"], [244, "function-signature"], [245, "function-signature"], [246, "function-signature"], [247, "function-signature"], [248, "function-signature"], [249, "function-signature"], [250, "function-signature"], [253, "function-signature"], [255, "function-signature"], [256, "function-signature"], [257, "function-signature"], [258, "function-signature"], [260, "function-signature"], [261, "function-signature"], [262, "function-signature"], [263, "function-signature"], [265, "function-signature"], [266, "function-signature"], [267, "function-signature"], [268, "function-signature"], [269, "function-signature"], [270, "function-signature"], [271, "function-signature"], [272, "function-signature"], [273, "function-signature"], [274, "function-signature"], [275, "function-signature"], [276, "function-signature"], [278, "function-signature"], [279, "function-signature"], [280, "function-signature"], [281, "function-signature"], [282, "function-signature"], [284, "function-signature"], [286, "function-signature"], [287, "function-signature"], [297, "function-signature"], [299, "function-signature"], [300, "function-signature"], [301, "function-signature"], [302, "function-signature"], [303, "function-signature"], [304, "function-signature"], [408, "function-signature"], [409, "function-signature"], [411, "function-signature"], [412, "function-signature"], [413, "function-signature"], [415, "function-signature"], [416, "function-signature"], [417, "function-signature"], [418, "function-signature"], [419, "function-signature"], [420, "function-signature"], [423, "function-signature"], [424, "function-signature"], [425, "function-signature"], [426, "function-signature"], [427, "function-signature"], [428, "function-signature"], [429, "function-signature"], [430, "function-signature"], [431, "function-signature"], [432, "function-signature"], [433, "function-signature"], [434, "function-signature"], [435, "function-signature"], [436, "function-signature"], [437, "function-signature"], [438, "function-signature"], [439, "function-signature"], [440, "function-signature"], [441, "function-signature"], [442, "function-signature"], [443, "function-signature"], [444, "function-signature"], [445, "function-signature"], [446, "function-signature"], [448, "function-signature"], [449, "function-signature"], [450, "function-signature"], [451, "function-signature"], [452, "function-signature"], [453, "function-signature"], [454, "function-signature"], [455, "function-signature"], [456, "function-signature"], [457, "function-signature"], [458, "function-signature"], [459, "function-signature"], [460, "function-signature"], [461, "function-signature"], [462, "function-signature"], [463, "function-signature"], [464, "function-signature"], [465, "function-signature"], [466, "function-signature"], [467, "function-signature"], [468, "function-signature"], [469, "function-signature"], [470, "function-signature"], [471, "function-signature"], [472, "function-signature"], [473, "function-signature"], [474, "function-signature"], [475, "function-signature"], [476, "function-signature"], [477, "function-signature"], [478, "function-signature"], [479, "function-signature"], [480, "function-signature"], [481, "function-signature"], [482, "function-signature"], [483, "function-signature"], [484, "function-signature"], [485, "function-signature"], [486, "function-signature"], [487, "function-signature"], [488, "function-signature"], [489, "function-signature"], [491, "function-signature"], [492, "function-signature"], [493, "function-signature"], [494, "function-signature"], [495, "function-signature"], [496, "function-signature"], [497, "function-signature"], [498, "function-signature"], [499, "function-signature"], [500, "function-signature"], [501, "function-signature"], [502, "function-signature"], [503, "function-signature"], [504, "function-signature"], [505, "function-signature"], [506, "function-signature"], [507, "function-signature"], [508, "function-signature"], [509, "function-signature"], [510, "function-signature"], [511, "function-signature"]], "Fused Layers": [[296, null]], "Future Work": [[4, "future-work"]], "Getting Started": [[394, "getting-started"]], "Global minimum index": [[480, null]], "Gradient Calculation": [[511, "gradient-calculation"]], "Gradient Computation": [[483, "gradient-computation"], [491, "gradient-computation"], [498, "gradient-computation"], [499, "gradient-computation"], [504, "gradient-computation"]], "Gradient hooks": [[422, null]], "Hooks & Shape Alignment": [[16, "hooks-shape-alignment"]], "How It Works": [[409, "how-it-works"]], "How to Install": [[16, "how-to-install"]], "Hybrid Architecture": [[31, "hybrid-architecture"]], "Hyperparameter Configuration": [[145, "hyperparameter-configuration"], [146, "hyperparameter-configuration"]], "Image Classification": [[100, null]], "Image Datasets": [[9, null]], "Image Transformations": [[522, null]], "Implementation Details": [[55, "implementation-details"], [105, "implementation-details"]], "Inception": [[88, null], [100, "inception"]], "Inception-ResNet": [[100, "inception-resnet"]], "InceptionNeXt": [[92, null], [100, "inceptionnext"]], "InceptionResNet": [[97, null]], "Inspecting Optimizer State": [[394, null], [395, null], [396, null], [397, null], [398, null], [399, null], [400, null], [401, null], [402, null], [403, null], [404, null], [405, null]], "Integration with lucid": [[3, "integration-with-lucid"], [382, "integration-with-lucid"], [421, "integration-with-lucid"], [523, "integration-with-lucid"]], "Key Components": [[3, "key-components"], [382, "key-components"]], "Key Enhancements": [[125, "key-enhancements"]], "Key Features": [[4, "key-features"], [171, "key-features"], [172, "key-features"], [173, "key-features"], [174, "key-features"], [179, "key-features"], [394, "key-features"], [421, "key-features"]], "Key Transformations": [[523, "key-transformations"]], "LR Schedulers": [[393, null]], "Layer Configuration": [[139, "layer-configuration"], [140, "layer-configuration"], [141, "layer-configuration"], [142, "layer-configuration"], [143, "layer-configuration"], [144, "layer-configuration"]], "LeNet": [[100, "lenet"], [101, null]], "Learn More": [[421, null]], "Linear Algebra Operations": [[21, null]], "Linear Functions": [[252, null], [254, null]], "Linear Layers": [[339, null], [343, null]], "Loading a custom dataset": [[1, null]], "Loss Dictionary": [[210, "loss-dictionary"]], "Loss Functions": [[252, null], [259, null]], "Loss Layers": [[339, null], [349, null]], "Lucid\u00b2 \ud83d\udc8e": [[16, null]], "MNIST": [[8, null]], "Mathematical Definition": [[13, "mathematical-definition"], [14, "mathematical-definition"], [15, "mathematical-definition"], [267, "mathematical-definition"], [337, "mathematical-definition"]], "Mathematical Details": [[318, "mathematical-details"], [374, "mathematical-details"], [375, "mathematical-details"], [376, "mathematical-details"], [377, "mathematical-details"], [378, "mathematical-details"]], "Mathematical Expression": [[263, "mathematical-expression"], [452, "mathematical-expression"], [458, "mathematical-expression"], [465, "mathematical-expression"], [500, "mathematical-expression"]], "Mathematical Formula": [[385, "mathematical-formula"], [386, "mathematical-formula"], [387, "mathematical-formula"], [389, "mathematical-formula"], [390, "mathematical-formula"], [391, "mathematical-formula"], [392, "mathematical-formula"]], "Mathematical Representation": [[55, "mathematical-representation"], [105, "mathematical-representation"], [422, "mathematical-representation"]], "Matrix Multiplication Rules": [[427, "matrix-multiplication-rules"]], "Max index by row": [[479, null]], "MaxViT": [[100, "maxvit"], [105, null]], "Metadata Captured": [[412, "metadata-captured"]], "Metal Acceleration (MLX Backend)": [[16, "metal-acceleration-mlx-backend"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [6, "methods"], [7, "methods"], [8, "methods"], [97, "methods"], [101, "methods"], [192, "methods"], [217, "methods"], [218, "methods"], [383, "methods"], [385, "methods"], [386, "methods"], [387, "methods"], [388, "methods"], [389, "methods"], [390, "methods"], [391, "methods"], [392, "methods"], [407, "methods"], [422, "methods"]], "MobileNet": [[100, "mobilenet"], [111, null]], "MobileNet_V2": [[112, null]], "MobileNet_V3": [[113, null]], "MobileNet_V4": [[114, null]], "Model Configuration": [[106, "model-configuration"], [107, "model-configuration"], [108, "model-configuration"], [109, "model-configuration"], [110, "model-configuration"]], "Modules": [[339, null]], "Moving tensor between devices": [[422, null]], "Natural Language Processing": [[207, "natural-language-processing"]], "Neural Networks with lucid.nn": [[16, "neural-networks-with-lucid-nn"]], "Normalization Functions": [[252, null], [264, null]], "Normalization Layers": [[339, null], [358, null]], "Notes": [[11, "notes"], [282, "notes"], [440, "notes"], [441, "notes"]], "Object detection": [[208, null]], "Optimizers": [[406, null]], "Organizing Models": [[382, "organizing-models"]], "Others": [[16, "others"]], "Overview": [[3, "overview"], [4, "overview"], [10, "overview"], [88, "overview"], [89, "overview"], [90, "overview"], [91, "overview"], [97, "overview"], [98, "overview"], [99, "overview"], [101, "overview"], [102, "overview"], [103, "overview"], [104, "overview"], [111, "overview"], [112, "overview"], [113, "overview"], [114, "overview"], [119, "overview"], [120, "overview"], [121, "overview"], [122, "overview"], [123, "overview"], [148, "overview"], [149, "overview"], [150, "overview"], [151, "overview"], [152, "overview"], [153, "overview"], [154, "overview"], [155, "overview"], [166, "overview"], [167, "overview"], [168, "overview"], [169, "overview"], [170, "overview"], [318, "overview"], [374, "overview"], [375, "overview"], [376, "overview"], [377, "overview"], [378, "overview"], [382, "overview"], [384, "overview"], [394, "overview"], [408, "overview"], [411, "overview"], [421, "overview"], [523, "overview"]], "PVT": [[124, null]], "PVT_V2": [[125, null]], "Parameters": [[1, "parameters"], [5, "parameters"], [6, "parameters"], [7, "parameters"], [8, "parameters"], [11, "parameters"], [13, "parameters"], [14, "parameters"], [15, "parameters"], [18, "parameters"], [19, "parameters"], [20, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [87, "parameters"], [88, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [101, "parameters"], [105, "parameters"], [106, "parameters"], [107, "parameters"], [108, "parameters"], [109, "parameters"], [110, "parameters"], [111, "parameters"], [112, "parameters"], [113, "parameters"], [114, "parameters"], [115, "parameters"], [116, "parameters"], [117, "parameters"], [118, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [122, "parameters"], [123, "parameters"], [124, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [154, "parameters"], [155, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"], [159, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [163, "parameters"], [164, "parameters"], [165, "parameters"], [166, "parameters"], [167, "parameters"], [168, "parameters"], [169, "parameters"], [170, "parameters"], [171, "parameters"], [172, "parameters"], [173, "parameters"], [174, "parameters"], [175, "parameters"], [176, "parameters"], [177, "parameters"], [178, "parameters"], [179, "parameters"], [180, "parameters"], [181, "parameters"], [182, "parameters"], [183, "parameters"], [184, "parameters"], [185, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [189, "parameters"], [190, "parameters"], [191, "parameters"], [192, "parameters"], [193, "parameters"], [194, "parameters"], [195, "parameters"], [196, "parameters"], [197, "parameters"], [198, "parameters"], [199, "parameters"], [200, "parameters"], [201, "parameters"], [202, "parameters"], [203, "parameters"], [204, "parameters"], [205, "parameters"], [206, "parameters"], [209, "parameters"], [210, "parameters"], [211, "parameters"], [213, "parameters"], [214, "parameters"], [215, "parameters"], [216, "parameters"], [218, "parameters"], [219, "parameters"], [220, "parameters"], [221, "parameters"], [222, "parameters"], [223, "parameters"], [225, "parameters"], [226, "parameters"], [228, "parameters"], [229, "parameters"], [230, "parameters"], [231, "parameters"], [232, "parameters"], [233, "parameters"], [235, "parameters"], [236, "parameters"], [237, "parameters"], [238, "parameters"], [239, "parameters"], [240, "parameters"], [241, "parameters"], [243, "parameters"], [244, "parameters"], [245, "parameters"], [246, "parameters"], [247, "parameters"], [248, "parameters"], [249, "parameters"], [250, "parameters"], [253, "parameters"], [255, "parameters"], [256, "parameters"], [257, "parameters"], [258, "parameters"], [260, "parameters"], [261, "parameters"], [262, "parameters"], [263, "parameters"], [265, "parameters"], [266, "parameters"], [267, "parameters"], [268, "parameters"], [269, "parameters"], [270, "parameters"], [271, "parameters"], [272, "parameters"], [273, "parameters"], [274, "parameters"], [275, "parameters"], [276, "parameters"], [278, "parameters"], [279, "parameters"], [280, "parameters"], [281, "parameters"], [282, "parameters"], [284, "parameters"], [286, "parameters"], [287, "parameters"], [288, "parameters"], [289, "parameters"], [290, "parameters"], [291, "parameters"], [292, "parameters"], [293, "parameters"], [294, "parameters"], [295, "parameters"], [297, "parameters"], [299, "parameters"], [300, "parameters"], [301, "parameters"], [302, "parameters"], [303, "parameters"], [304, "parameters"], [305, "parameters"], [306, "parameters"], [309, "parameters"], [310, "parameters"], [312, "parameters"], [313, "parameters"], [314, "parameters"], [316, "parameters"], [318, "parameters"], [319, "parameters"], [321, "parameters"], [322, "parameters"], [323, "parameters"], [324, "parameters"], [325, "parameters"], [326, "parameters"], [327, "parameters"], [329, "parameters"], [330, "parameters"], [331, "parameters"], [332, "parameters"], [333, "parameters"], [334, "parameters"], [335, "parameters"], [337, "parameters"], [340, "parameters"], [341, "parameters"], [342, "parameters"], [344, "parameters"], [345, "parameters"], [346, "parameters"], [347, "parameters"], [348, "parameters"], [350, "parameters"], [351, "parameters"], [352, "parameters"], [353, "parameters"], [354, "parameters"], [355, "parameters"], [356, "parameters"], [357, "parameters"], [359, "parameters"], [360, "parameters"], [361, "parameters"], [362, "parameters"], [363, "parameters"], [364, "parameters"], [365, "parameters"], [366, "parameters"], [367, "parameters"], [368, "parameters"], [369, "parameters"], [370, "parameters"], [372, "parameters"], [374, "parameters"], [375, "parameters"], [376, "parameters"], [377, "parameters"], [378, "parameters"], [380, "parameters"], [385, "parameters"], [386, "parameters"], [387, "parameters"], [388, "parameters"], [389, "parameters"], [390, "parameters"], [391, "parameters"], [392, "parameters"], [395, "parameters"], [396, "parameters"], [397, "parameters"], [398, "parameters"], [399, "parameters"], [400, "parameters"], [401, "parameters"], [402, "parameters"], [403, "parameters"], [404, "parameters"], [405, "parameters"], [407, "parameters"], [408, "parameters"], [411, "parameters"], [412, "parameters"], [413, "parameters"], [415, "parameters"], [416, "parameters"], [417, "parameters"], [418, "parameters"], [419, "parameters"], [420, "parameters"], [422, "parameters"], [423, "parameters"], [424, "parameters"], [425, "parameters"], [426, "parameters"], [427, "parameters"], [428, "parameters"], [429, "parameters"], [430, "parameters"], [431, "parameters"], [432, "parameters"], [433, "parameters"], [434, "parameters"], [435, "parameters"], [436, "parameters"], [437, "parameters"], [438, "parameters"], [439, "parameters"], [440, "parameters"], [441, "parameters"], [442, "parameters"], [443, "parameters"], [444, "parameters"], [445, "parameters"], [446, "parameters"], [448, "parameters"], [449, "parameters"], [450, "parameters"], [451, "parameters"], [452, "parameters"], [453, "parameters"], [454, "parameters"], [455, "parameters"], [456, "parameters"], [457, "parameters"], [458, "parameters"], [459, "parameters"], [460, "parameters"], [461, "parameters"], [462, "parameters"], [463, "parameters"], [464, "parameters"], [465, "parameters"], [466, "parameters"], [467, "parameters"], [468, "parameters"], [469, "parameters"], [470, "parameters"], [471, "parameters"], [472, "parameters"], [473, "parameters"], [474, "parameters"], [475, "parameters"], [476, "parameters"], [477, "parameters"], [478, "parameters"], [479, "parameters"], [480, "parameters"], [481, "parameters"], [482, "parameters"], [483, "parameters"], [484, "parameters"], [485, "parameters"], [486, "parameters"], [487, "parameters"], [488, "parameters"], [489, "parameters"], [491, "parameters"], [492, "parameters"], [493, "parameters"], [494, "parameters"], [495, "parameters"], [496, "parameters"], [497, "parameters"], [498, "parameters"], [499, "parameters"], [500, "parameters"], [501, "parameters"], [502, "parameters"], [503, "parameters"], [504, "parameters"], [505, "parameters"], [506, "parameters"], [507, "parameters"], [508, "parameters"], [509, "parameters"], [510, "parameters"], [511, "parameters"], [512, "parameters"], [513, "parameters"], [514, "parameters"], [515, "parameters"], [516, "parameters"], [517, "parameters"], [518, "parameters"], [519, "parameters"], [520, "parameters"], [521, "parameters"]], "Performance / FLOPs": [[481, "performance-flops"]], "Performing backpropagation": [[422, null]], "Pooling Functions": [[252, null], [277, null]], "Pooling Layers": [[339, null], [371, null]], "Potential Pitfalls": [[409, "potential-pitfalls"]], "Properties": [[218, "properties"], [422, "properties"]], "Pyramid Vision Transformer (PVT)": [[100, "pyramid-vision-transformer-pvt"]], "R-CNN": [[208, "r-cnn"], [211, null]], "Raises": [[18, "raises"], [19, "raises"], [20, "raises"], [22, "raises"], [23, "raises"], [24, "raises"], [25, "raises"], [26, "raises"], [27, "raises"], [28, "raises"]], "Random Number Generations": [[414, null]], "References": [[5, "references"], [6, "references"], [7, "references"], [8, "references"], [294, "references"], [394, "references"]], "Regularization": [[245, "regularization"]], "Representation": [[407, "representation"]], "ResNeSt": [[100, "resnest"], [138, null]], "ResNeXt": [[100, "resnext"], [158, null]], "ResNet": [[100, "resnet"], [147, null]], "Return Values": [[500, "return-values"]], "Returns": [[11, "returns"], [13, "returns"], [14, "returns"], [15, "returns"], [18, "returns"], [19, "returns"], [20, "returns"], [22, "returns"], [23, "returns"], [24, "returns"], [25, "returns"], [26, "returns"], [27, "returns"], [28, "returns"], [30, "returns"], [42, "returns"], [43, "returns"], [44, "returns"], [45, "returns"], [46, "returns"], [47, "returns"], [48, "returns"], [49, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [53, "returns"], [54, "returns"], [56, "returns"], [57, "returns"], [58, "returns"], [59, "returns"], [60, "returns"], [61, "returns"], [62, "returns"], [63, "returns"], [64, "returns"], [66, "returns"], [67, "returns"], [68, "returns"], [70, "returns"], [71, "returns"], [72, "returns"], [73, "returns"], [76, "returns"], [77, "returns"], [78, "returns"], [79, "returns"], [80, "returns"], [81, "returns"], [82, "returns"], [83, "returns"], [84, "returns"], [85, "returns"], [86, "returns"], [87, "returns"], [89, "returns"], [90, "returns"], [91, "returns"], [93, "returns"], [94, "returns"], [95, "returns"], [96, "returns"], [98, "returns"], [99, "returns"], [102, "returns"], [103, "returns"], [104, "returns"], [115, "returns"], [116, "returns"], [117, "returns"], [118, "returns"], [124, "returns"], [125, "returns"], [126, "returns"], [127, "returns"], [128, "returns"], [129, "returns"], [130, "returns"], [131, "returns"], [132, "returns"], [133, "returns"], [134, "returns"], [135, "returns"], [136, "returns"], [137, "returns"], [139, "returns"], [140, "returns"], [141, "returns"], [142, "returns"], [143, "returns"], [144, "returns"], [145, "returns"], [146, "returns"], [148, "returns"], [149, "returns"], [150, "returns"], [151, "returns"], [152, "returns"], [153, "returns"], [154, "returns"], [155, "returns"], [156, "returns"], [157, "returns"], [159, "returns"], [160, "returns"], [161, "returns"], [162, "returns"], [163, "returns"], [164, "returns"], [166, "returns"], [167, "returns"], [168, "returns"], [169, "returns"], [170, "returns"], [171, "returns"], [172, "returns"], [173, "returns"], [174, "returns"], [176, "returns"], [177, "returns"], [178, "returns"], [179, "returns"], [182, "returns"], [183, "returns"], [184, "returns"], [185, "returns"], [186, "returns"], [187, "returns"], [188, "returns"], [189, "returns"], [190, "returns"], [191, "returns"], [193, "returns"], [194, "returns"], [195, "returns"], [196, "returns"], [198, "returns"], [199, "returns"], [200, "returns"], [201, "returns"], [202, "returns"], [204, "returns"], [206, "returns"], [214, "returns"], [215, "returns"], [225, "returns"], [226, "returns"], [228, "returns"], [229, "returns"], [230, "returns"], [231, "returns"], [232, "returns"], [233, "returns"], [235, "returns"], [236, "returns"], [237, "returns"], [238, "returns"], [239, "returns"], [240, "returns"], [241, "returns"], [243, "returns"], [244, "returns"], [245, "returns"], [246, "returns"], [247, "returns"], [248, "returns"], [249, "returns"], [250, "returns"], [253, "returns"], [255, "returns"], [256, "returns"], [257, "returns"], [258, "returns"], [260, "returns"], [261, "returns"], [262, "returns"], [263, "returns"], [265, "returns"], [266, "returns"], [267, "returns"], [268, "returns"], [269, "returns"], [270, "returns"], [271, "returns"], [272, "returns"], [273, "returns"], [274, "returns"], [275, "returns"], [276, "returns"], [278, "returns"], [279, "returns"], [280, "returns"], [281, "returns"], [282, "returns"], [284, "returns"], [286, "returns"], [287, "returns"], [295, "returns"], [297, "returns"], [299, "returns"], [300, "returns"], [301, "returns"], [302, "returns"], [303, "returns"], [304, "returns"], [311, "returns"], [337, "returns"], [372, "returns"], [408, "returns"], [409, "returns"], [411, "returns"], [413, "returns"], [415, "returns"], [416, "returns"], [417, "returns"], [418, "returns"], [419, "returns"], [420, "returns"], [423, "returns"], [424, "returns"], [425, "returns"], [426, "returns"], [427, "returns"], [428, "returns"], [429, "returns"], [430, "returns"], [431, "returns"], [432, "returns"], [433, "returns"], [434, "returns"], [435, "returns"], [436, "returns"], [437, "returns"], [438, "returns"], [439, "returns"], [440, "returns"], [441, "returns"], [442, "returns"], [443, "returns"], [444, "returns"], [445, "returns"], [446, "returns"], [448, "returns"], [449, "returns"], [450, "returns"], [451, "returns"], [452, "returns"], [453, "returns"], [454, "returns"], [455, "returns"], [456, "returns"], [457, "returns"], [458, "returns"], [459, "returns"], [460, "returns"], [461, "returns"], [462, "returns"], [463, "returns"], [464, "returns"], [465, "returns"], [466, "returns"], [467, "returns"], [468, "returns"], [469, "returns"], [470, "returns"], [471, "returns"], [472, "returns"], [473, "returns"], [474, "returns"], [475, "returns"], [476, "returns"], [477, "returns"], [478, "returns"], [479, "returns"], [480, "returns"], [481, "returns"], [482, "returns"], [483, "returns"], [484, "returns"], [485, "returns"], [486, "returns"], [487, "returns"], [488, "returns"], [489, "returns"], [491, "returns"], [492, "returns"], [493, "returns"], [494, "returns"], [495, "returns"], [496, "returns"], [497, "returns"], [498, "returns"], [499, "returns"], [501, "returns"], [502, "returns"], [503, "returns"], [504, "returns"], [505, "returns"], [506, "returns"], [507, "returns"], [508, "returns"], [509, "returns"], [510, "returns"], [511, "returns"]], "SENet": [[100, "senet"], [165, null]], "SKNet": [[100, "sknet"], [175, null]], "Schedulers": [[393, null]], "See Also": [[394, "see-also"]], "Selective Kernel": [[296, null]], "Sequence-to-Sequence": [[212, null]], "Sparse Layers": [[339, null], [373, null]], "Spatial Functions": [[252, null], [283, null]], "Specifications": [[56, "specifications"], [57, "specifications"], [58, "specifications"], [59, "specifications"], [60, "specifications"], [61, "specifications"], [62, "specifications"], [63, "specifications"], [64, "specifications"]], "Squeeze-and-Excitation": [[296, null]], "Stable sort with duplicates": [[481, null]], "Swin Transformer": [[100, "swin-transformer"]], "SwinTransformer": [[180, null]], "SwinTransformer_V2": [[181, null]], "Switching Between Devices": [[16, "switching-between-devices"]], "Tensor Contraction Rules": [[434, "tensor-contraction-rules"]], "Tensor Generating Functions": [[447, null]], "Tensor Operations": [[447, null]], "Tensor Utilities": [[490, null]], "Tensor: The Core Abstraction": [[16, "tensor-the-core-abstraction"]], "Training & Evaluation": [[16, "training-evaluation"]], "Transformer": [[212, "transformer"], [213, null]], "Transformer Layers": [[339, null], [379, null]], "Unary Functions": [[447, null]], "Usage": [[4, "usage"], [84, "usage"], [85, "usage"], [86, "usage"], [87, "usage"], [216, "usage"], [287, "usage"], [384, "usage"], [409, "usage"], [410, "usage"], [492, "usage"], [512, "usage"], [513, "usage"], [523, "usage"]], "Usage Example": [[119, "usage-example"], [120, "usage-example"], [121, "usage-example"], [122, "usage-example"], [123, "usage-example"], [318, "usage-example"], [374, "usage-example"], [375, "usage-example"], [376, "usage-example"], [377, "usage-example"], [378, "usage-example"], [385, "usage-example"], [386, "usage-example"], [387, "usage-example"], [388, "usage-example"], [389, "usage-example"], [390, "usage-example"], [391, "usage-example"], [392, "usage-example"]], "Usage Examples": [[407, "usage-examples"]], "Use another Tensor as input": [[478, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using free tensors": [[422, null]], "Using the ASGD Optimizer": [[395, null]], "Using the Adadelta Optimizer": [[396, null]], "Using the Adagrad Optimizer": [[397, null]], "Using the Adam Optimizer": [[398, null]], "Using the AdamW Optimizer": [[399, null]], "Using the Adamax Optimizer": [[400, null]], "Using the NAdam Optimizer": [[401, null]], "Using the RAdam Optimizer": [[402, null]], "Using the RMSprop Optimizer": [[403, null]], "Using the Rprop Optimizer": [[404, null]], "Using the SGD Optimizer": [[405, null]], "Utility Functions": [[252, null], [285, null]], "VGGNet": [[100, "vggnet"], [192, null]], "Verification": [[16, "verification"]], "ViT": [[197, null]], "Vision Layers": [[339, null], [381, null]], "Visual Transformer (ViT)": [[100, "visual-transformer-vit"]], "Weight Initializations": [[298, null]], "Xception": [[100, "xception"], [203, null]], "ZFNet": [[100, "zfnet"], [205, null]], "alexnet": [[30, null]], "coatnet_0": [[32, null]], "coatnet_1": [[33, null]], "coatnet_2": [[34, null]], "coatnet_3": [[35, null]], "coatnet_4": [[36, null]], "coatnet_5": [[37, null]], "coatnet_6": [[38, null]], "coatnet_7": [[39, null]], "convnext_base": [[42, null]], "convnext_large": [[43, null]], "convnext_small": [[44, null]], "convnext_tiny": [[45, null]], "convnext_v2_atto": [[46, null]], "convnext_v2_base": [[47, null]], "convnext_v2_femto": [[48, null]], "convnext_v2_huge": [[49, null]], "convnext_v2_large": [[50, null]], "convnext_v2_nano": [[51, null]], "convnext_v2_pico": [[52, null]], "convnext_v2_tiny": [[53, null]], "convnext_xlarge": [[54, null]], "crossvit_15": [[56, null]], "crossvit_15_dagger": [[57, null]], "crossvit_18": [[58, null]], "crossvit_18_dagger": [[59, null]], "crossvit_9": [[60, null]], "crossvit_9_dagger": [[61, null]], "crossvit_base": [[62, null]], "crossvit_small": [[63, null]], "crossvit_tiny": [[64, null]], "cvt_13": [[66, null]], "cvt_21": [[67, null]], "cvt_w24": [[68, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "densenet_121": [[70, null]], "densenet_169": [[71, null]], "densenet_201": [[72, null]], "densenet_264": [[73, null]], "efficientnet_b0": [[76, null]], "efficientnet_b1": [[77, null]], "efficientnet_b2": [[78, null]], "efficientnet_b3": [[79, null]], "efficientnet_b4": [[80, null]], "efficientnet_b5": [[81, null]], "efficientnet_b6": [[82, null]], "efficientnet_b7": [[83, null]], "efficientnet_v2_l": [[84, null]], "efficientnet_v2_m": [[85, null]], "efficientnet_v2_s": [[86, null]], "efficientnet_v2_xl": [[87, null]], "inception_next_atto": [[93, null]], "inception_next_base": [[94, null]], "inception_next_small": [[95, null]], "inception_next_tiny": [[96, null]], "inception_resnet_v1": [[98, null]], "inception_resnet_v2": [[99, null]], "inception_v1": [[89, null]], "inception_v3": [[90, null]], "inception_v4": [[91, null]], "lenet_1": [[102, null]], "lenet_4": [[103, null]], "lenet_5": [[104, null]], "lr_scheduler.CosineAnnealingLR": [[385, null]], "lr_scheduler.CyclicLR": [[386, null]], "lr_scheduler.ExponentialLR": [[387, null]], "lr_scheduler.LRScheduler": [[388, null]], "lr_scheduler.LambdaLR": [[389, null]], "lr_scheduler.MultiStepLR": [[390, null]], "lr_scheduler.ReduceLROnPlateau": [[391, null]], "lr_scheduler.StepLR": [[392, null]], "lucid.Numeric": [[407, null]], "lucid.Tensor": [[422, null]], "lucid.abs": [[448, null]], "lucid.add": [[423, null]], "lucid.arange": [[435, null]], "lucid.arccos": [[449, null]], "lucid.arcsin": [[450, null]], "lucid.arctan": [[451, null]], "lucid.argmax": [[479, null]], "lucid.argmin": [[480, null]], "lucid.argsort": [[481, null]], "lucid.broadcast_to": [[482, null]], "lucid.ceil": [[452, null]], "lucid.chunk": [[483, null]], "lucid.clip": [[453, null]], "lucid.concatenate": [[484, null]], "lucid.cos": [[454, null]], "lucid.cosh": [[455, null]], "lucid.count_flops": [[408, null]], "lucid.cube": [[456, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[436, null]], "lucid.div": [[424, null]], "lucid.dot": [[425, null]], "lucid.einops": [[10, null]], "lucid.einops.einsum": [[11, null]], "lucid.einops.rearrange": [[13, null]], "lucid.einops.reduce": [[14, null]], "lucid.einops.repeat": [[15, null]], "lucid.empty": [[437, null]], "lucid.empty_like": [[438, null]], "lucid.exp": [[457, null]], "lucid.eye": [[439, null]], "lucid.flatten": [[485, null]], "lucid.floor": [[458, null]], "lucid.full": [[440, null]], "lucid.full_like": [[441, null]], "lucid.grad_enabled": [[409, null]], "lucid.histogram": [[486, null]], "lucid.histogram2d": [[487, null]], "lucid.histogramdd": [[488, null]], "lucid.hstack": [[489, null]], "lucid.inner": [[426, null]], "lucid.linalg": [[17, null]], "lucid.linalg.cholesky": [[18, null]], "lucid.linalg.det": [[19, null]], "lucid.linalg.eig": [[20, null]], "lucid.linalg.inv": [[22, null]], "lucid.linalg.matrix_power": [[23, null]], "lucid.linalg.norm": [[24, null]], "lucid.linalg.pinv": [[25, null]], "lucid.linalg.qr": [[26, null]], "lucid.linalg.solve": [[27, null]], "lucid.linalg.svd": [[28, null]], "lucid.linspace": [[442, null]], "lucid.log": [[459, null]], "lucid.log2": [[460, null]], "lucid.masked_fill": [[491, null]], "lucid.matmul": [[427, null]], "lucid.max": [[461, null]], "lucid.maximum": [[428, null]], "lucid.mean": [[462, null]], "lucid.meshgrid": [[492, null]], "lucid.min": [[463, null]], "lucid.minimum": [[429, null]], "lucid.models": [[207, null]], "lucid.multiply": [[430, null]], "lucid.newaxis": [[410, null]], "lucid.nn": [[382, null]], "lucid.nn.functional": [[252, null]], "lucid.no_grad": [[411, null]], "lucid.nonzero": [[493, null]], "lucid.ones": [[443, null]], "lucid.ones_like": [[444, null]], "lucid.optim": [[394, null]], "lucid.outer": [[431, null]], "lucid.pad": [[494, null]], "lucid.power": [[432, null]], "lucid.random": [[421, null]], "lucid.random.bernoulli": [[413, null]], "lucid.random.permutation": [[415, null]], "lucid.random.rand": [[416, null]], "lucid.random.randint": [[417, null]], "lucid.random.randn": [[418, null]], "lucid.random.seed": [[419, null]], "lucid.random.uniform": [[420, null]], "lucid.ravel": [[495, null]], "lucid.reciprocal": [[464, null]], "lucid.register_model": [[412, null]], "lucid.repeat": [[496, null]], "lucid.reshape": [[497, null]], "lucid.roll": [[498, null]], "lucid.round": [[465, null]], "lucid.sign": [[466, null]], "lucid.sin": [[467, null]], "lucid.sinh": [[468, null]], "lucid.sort": [[499, null]], "lucid.split": [[500, null]], "lucid.sqrt": [[469, null]], "lucid.square": [[470, null]], "lucid.squeeze": [[501, null]], "lucid.stack": [[502, null]], "lucid.sub": [[433, null]], "lucid.sum": [[471, null]], "lucid.swapaxes": [[472, null]], "lucid.tan": [[473, null]], "lucid.tanh": [[474, null]], "lucid.tensor": [[478, null]], "lucid.tensordot": [[434, null]], "lucid.tile": [[503, null]], "lucid.topk": [[504, null]], "lucid.trace": [[475, null]], "lucid.transforms": [[523, null]], "lucid.transpose": [[476, null]], "lucid.tril": [[505, null]], "lucid.triu": [[506, null]], "lucid.unbind": [[507, null]], "lucid.unique": [[508, null]], "lucid.unsqueeze": [[509, null]], "lucid.var": [[477, null]], "lucid.vstack": [[510, null]], "lucid.where": [[511, null]], "lucid.zeros": [[445, null]], "lucid.zeros_like": [[446, null]], "maxvit_base": [[106, null], [107, null]], "maxvit_small": [[108, null]], "maxvit_tiny": [[109, null]], "maxvit_xlarge": [[110, null]], "mobilenet": [[115, null]], "mobilenet_v2": [[116, null]], "mobilenet_v3_large": [[117, null]], "mobilenet_v3_small": [[118, null]], "mobilenet_v4_conv_large": [[119, null]], "mobilenet_v4_conv_medium": [[120, null]], "mobilenet_v4_conv_small": [[121, null]], "mobilenet_v4_hybrid_large": [[122, null]], "mobilenet_v4_hybrid_medium": [[123, null]], "nn.AdaptiveAvgPool1d": [[359, null]], "nn.AdaptiveAvgPool2d": [[360, null]], "nn.AdaptiveAvgPool3d": [[361, null]], "nn.AdaptiveMaxPool1d": [[362, null]], "nn.AdaptiveMaxPool2d": [[363, null]], "nn.AdaptiveMaxPool3d": [[364, null]], "nn.AlphaDropout": [[329, null]], "nn.AvgPool1d": [[365, null]], "nn.AvgPool2d": [[366, null]], "nn.AvgPool3d": [[367, null]], "nn.BCELoss": [[344, null]], "nn.BatchNorm1d": [[350, null]], "nn.BatchNorm2d": [[351, null]], "nn.BatchNorm3d": [[352, null]], "nn.Bilinear": [[340, null]], "nn.Buffer": [[216, null]], "nn.Conv1d": [[321, null]], "nn.Conv2d": [[322, null]], "nn.Conv3d": [[323, null]], "nn.ConvBNReLU1d": [[288, null]], "nn.ConvBNReLU2d": [[289, null]], "nn.ConvBNReLU3d": [[290, null]], "nn.ConvTranspose1d": [[324, null]], "nn.ConvTranspose2d": [[325, null]], "nn.ConvTranspose3d": [[326, null]], "nn.CrossEntropyLoss": [[345, null]], "nn.DepthSeparableConv1d": [[291, null]], "nn.DepthSeparableConv2d": [[292, null]], "nn.DepthSeparableConv3d": [[293, null]], "nn.DropBlock": [[330, null]], "nn.DropPath": [[331, null]], "nn.Dropout": [[332, null]], "nn.Dropout1d": [[333, null]], "nn.Dropout2d": [[334, null]], "nn.Dropout3d": [[335, null]], "nn.ELU": [[305, null]], "nn.Embedding": [[372, null]], "nn.GELU": [[306, null]], "nn.GlobalResponseNorm": [[353, null]], "nn.HardSigmoid": [[307, null]], "nn.HardSwish": [[308, null]], "nn.HuberLoss": [[346, null]], "nn.Identity": [[341, null]], "nn.InstanceNorm1d": [[354, null]], "nn.InstanceNorm2d": [[355, null]], "nn.InstanceNorm3d": [[356, null]], "nn.LayerNorm": [[357, null]], "nn.LeakyReLU": [[309, null]], "nn.Linear": [[342, null]], "nn.MSELoss": [[347, null]], "nn.MaxPool1d": [[368, null]], "nn.MaxPool2d": [[369, null]], "nn.MaxPool3d": [[370, null]], "nn.Module": [[217, null]], "nn.ModuleDict": [[219, null]], "nn.ModuleList": [[220, null]], "nn.MultiHeadAttention": [[318, null]], "nn.NLLLoss": [[348, null]], "nn.Parameter": [[218, null]], "nn.ParameterDict": [[221, null]], "nn.ParameterList": [[222, null]], "nn.ReLU": [[310, null]], "nn.ReLU6": [[311, null]], "nn.Rearrange": [[337, null]], "nn.SELU": [[312, null]], "nn.SEModule": [[294, null]], "nn.ScaledDotProductAttention": [[319, null]], "nn.SelectiveKernel": [[295, null]], "nn.Sequential": [[223, null]], "nn.Sigmoid": [[313, null]], "nn.Softmax": [[314, null]], "nn.Swish": [[315, null]], "nn.Tanh": [[316, null]], "nn.Transformer": [[374, null]], "nn.TransformerDecoder": [[375, null]], "nn.TransformerDecoderLayer": [[376, null]], "nn.TransformerEncoder": [[377, null]], "nn.TransformerEncoderLayer": [[378, null]], "nn.Unfold": [[327, null]], "nn.Upsample": [[380, null]], "nn.functional.adaptive_avg_pool1d": [[268, null]], "nn.functional.adaptive_avg_pool2d": [[269, null]], "nn.functional.adaptive_avg_pool3d": [[270, null]], "nn.functional.adaptive_max_pool1d": [[271, null]], "nn.functional.adaptive_max_pool2d": [[272, null]], "nn.functional.adaptive_max_pool3d": [[273, null]], "nn.functional.affine_grid": [[281, null]], "nn.functional.alpha_dropout": [[244, null]], "nn.functional.avg_pool1d": [[274, null]], "nn.functional.avg_pool2d": [[275, null]], "nn.functional.avg_pool3d": [[276, null]], "nn.functional.batch_norm": [[262, null]], "nn.functional.bilinear": [[253, null]], "nn.functional.binary_cross_entropy": [[256, null]], "nn.functional.conv1d": [[236, null]], "nn.functional.conv2d": [[237, null]], "nn.functional.conv3d": [[238, null]], "nn.functional.conv_transpose1d": [[239, null]], "nn.functional.conv_transpose2d": [[240, null]], "nn.functional.conv_transpose3d": [[241, null]], "nn.functional.cross_entropy": [[257, null]], "nn.functional.drop_block": [[245, null]], "nn.functional.drop_path": [[246, null]], "nn.functional.dropout": [[247, null]], "nn.functional.dropout1d": [[248, null]], "nn.functional.dropout2d": [[249, null]], "nn.functional.dropout3d": [[250, null]], "nn.functional.elu": [[225, null]], "nn.functional.embedding": [[284, null]], "nn.functional.gelu": [[226, null]], "nn.functional.global_response_norm": [[263, null]], "nn.functional.grid_sample": [[282, null]], "nn.functional.huber_loss": [[258, null]], "nn.functional.instance_norm": [[265, null]], "nn.functional.interpolate": [[286, null]], "nn.functional.layer_norm": [[266, null]], "nn.functional.leaky_relu": [[228, null]], "nn.functional.linear": [[255, null]], "nn.functional.max_pool1d": [[278, null]], "nn.functional.max_pool2d": [[279, null]], "nn.functional.max_pool3d": [[280, null]], "nn.functional.mse_loss": [[260, null]], "nn.functional.nll_loss": [[261, null]], "nn.functional.normalize": [[267, null]], "nn.functional.relu": [[229, null]], "nn.functional.rotate": [[287, null]], "nn.functional.scaled_dot_product_attention": [[235, null]], "nn.functional.selu": [[230, null]], "nn.functional.sigmoid": [[231, null]], "nn.functional.softmax": [[232, null]], "nn.functional.tanh": [[233, null]], "nn.functional.unfold": [[243, null]], "nn.init.constant": [[297, null]], "nn.init.kaiming_normal": [[299, null]], "nn.init.kaiming_uniform": [[300, null]], "nn.init.normal": [[301, null]], "nn.init.uniform": [[302, null]], "nn.init.xavier_normal": [[303, null]], "nn.init.xavier_uniform": [[304, null]], "optim.ASGD": [[395, null]], "optim.Adadelta": [[396, null]], "optim.Adagrad": [[397, null]], "optim.Adam": [[398, null]], "optim.AdamW": [[399, null]], "optim.Adamax": [[400, null]], "optim.NAdam": [[401, null]], "optim.Optimizer": [[383, null]], "optim.RAdam": [[402, null]], "optim.RMSprop": [[403, null]], "optim.Rprop": [[404, null]], "optim.SGD": [[405, null]], "optim.lr_scheduler": [[384, null]], "pvt_huge": [[126, null]], "pvt_large": [[127, null]], "pvt_medium": [[128, null]], "pvt_small": [[129, null]], "pvt_tiny": [[130, null]], "pvt_v2_b0": [[131, null]], "pvt_v2_b1": [[132, null]], "pvt_v2_b2": [[133, null]], "pvt_v2_b2_li": [[134, null]], "pvt_v2_b3": [[135, null]], "pvt_v2_b4": [[136, null]], "pvt_v2_b5": [[137, null]], "rearrange": [[10, "rearrange"]], "reduce": [[10, "reduce"]], "repeat": [[10, "repeat"]], "resnest_101": [[139, null]], "resnest_14": [[140, null]], "resnest_200": [[141, null]], "resnest_26": [[142, null]], "resnest_269": [[143, null]], "resnest_50": [[144, null]], "resnest_50_1s4x24d": [[145, null]], "resnest_50_4s2x40d": [[146, null]], "resnet_1001": [[148, null]], "resnet_101": [[149, null]], "resnet_152": [[150, null]], "resnet_18": [[151, null]], "resnet_200": [[152, null]], "resnet_269": [[153, null]], "resnet_34": [[154, null]], "resnet_50": [[155, null]], "resnext_101_32x16d": [[159, null]], "resnext_101_32x32d": [[160, null]], "resnext_101_32x4d": [[161, null]], "resnext_101_32x8d": [[162, null]], "resnext_101_64x4d": [[163, null]], "resnext_50_32x4d": [[164, null]], "se_resnet_101": [[166, null]], "se_resnet_152": [[167, null]], "se_resnet_18": [[168, null]], "se_resnet_34": [[169, null]], "se_resnet_50": [[170, null]], "se_resnext_101_32x4d": [[171, null]], "se_resnext_101_32x8d": [[172, null]], "se_resnext_101_64x4d": [[173, null]], "se_resnext_50_32x4d": [[174, null]], "sk_resnet_18": [[176, null]], "sk_resnet_34": [[177, null]], "sk_resnet_50": [[178, null]], "sk_resnext_50_32x4d": [[179, null]], "swin_base": [[182, null]], "swin_large": [[183, null]], "swin_small": [[184, null]], "swin_tiny": [[185, null]], "swin_v2_base": [[186, null]], "swin_v2_giant": [[187, null]], "swin_v2_huge": [[188, null]], "swin_v2_large": [[189, null]], "swin_v2_small": [[190, null]], "swin_v2_tiny": [[191, null]], "transformer_base": [[214, null]], "transformer_big": [[215, null]], "transforms.CenterCrop": [[514, null]], "transforms.Compose": [[512, null]], "transforms.Normalize": [[515, null]], "transforms.RandomCrop": [[516, null]], "transforms.RandomGrayscale": [[517, null]], "transforms.RandomHorizontalFlip": [[518, null]], "transforms.RandomRotation": [[519, null]], "transforms.RandomVerticalFlip": [[520, null]], "transforms.Resize": [[521, null]], "transforms.ToTensor": [[513, null]], "vggnet_11": [[193, null]], "vggnet_13": [[194, null]], "vggnet_16": [[195, null]], "vggnet_19": [[196, null]], "vit_base": [[198, null]], "vit_huge": [[199, null]], "vit_large": [[200, null]], "vit_small": [[201, null]], "vit_tiny": [[202, null]], "wide_resnet_101": [[156, null]], "wide_resnet_50": [[157, null]], "xception": [[204, null]], "zfnet": [[206, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/CIFAR10", "datasets/image/CIFAR100", "datasets/image/FashionMNIST", "datasets/image/MNIST", "datasets/image/index", "einops/einops", "einops/functions/einsum", "einops/functions/index", "einops/functions/rearrange", "einops/functions/reduce", "einops/functions/repeat", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/imgclf/alex/AlexNet_", "models/imgclf/alex/alexnet", "models/imgclf/coatnet/CoAtNet", "models/imgclf/coatnet/coatnet_0", "models/imgclf/coatnet/coatnet_1", "models/imgclf/coatnet/coatnet_2", "models/imgclf/coatnet/coatnet_3", "models/imgclf/coatnet/coatnet_4", "models/imgclf/coatnet/coatnet_5", "models/imgclf/coatnet/coatnet_6", "models/imgclf/coatnet/coatnet_7", "models/imgclf/convnext/ConvNeXt", "models/imgclf/convnext/ConvNeXt_V2", "models/imgclf/convnext/convnext_base", "models/imgclf/convnext/convnext_large", "models/imgclf/convnext/convnext_small", "models/imgclf/convnext/convnext_tiny", "models/imgclf/convnext/convnext_v2_atto", "models/imgclf/convnext/convnext_v2_base", "models/imgclf/convnext/convnext_v2_femto", "models/imgclf/convnext/convnext_v2_huge", "models/imgclf/convnext/convnext_v2_large", "models/imgclf/convnext/convnext_v2_nano", "models/imgclf/convnext/convnext_v2_pico", "models/imgclf/convnext/convnext_v2_tiny", "models/imgclf/convnext/convnext_xlarge", "models/imgclf/crossvit/CrossViT", "models/imgclf/crossvit/crossvit_15", "models/imgclf/crossvit/crossvit_15_dagger", "models/imgclf/crossvit/crossvit_18", "models/imgclf/crossvit/crossvit_18_dagger", "models/imgclf/crossvit/crossvit_9", "models/imgclf/crossvit/crossvit_9_dagger", "models/imgclf/crossvit/crossvit_base", "models/imgclf/crossvit/crossvit_small", "models/imgclf/crossvit/crossvit_tiny", "models/imgclf/cvt/CvT", "models/imgclf/cvt/cvt_13", "models/imgclf/cvt/cvt_21", "models/imgclf/cvt/cvt_w24", "models/imgclf/dense/DenseNet", "models/imgclf/dense/densenet_121", "models/imgclf/dense/densenet_169", "models/imgclf/dense/densenet_201", "models/imgclf/dense/densenet_264", "models/imgclf/efficient/EfficientNet", "models/imgclf/efficient/EfficientNet_V2", "models/imgclf/efficient/efficientnet_b0", "models/imgclf/efficient/efficientnet_b1", "models/imgclf/efficient/efficientnet_b2", "models/imgclf/efficient/efficientnet_b3", "models/imgclf/efficient/efficientnet_b4", "models/imgclf/efficient/efficientnet_b5", "models/imgclf/efficient/efficientnet_b6", "models/imgclf/efficient/efficientnet_b7", "models/imgclf/efficient/efficientnet_v2_l", "models/imgclf/efficient/efficientnet_v2_m", "models/imgclf/efficient/efficientnet_v2_s", "models/imgclf/efficient/efficientnet_v2_xl", "models/imgclf/inception/Inception", "models/imgclf/inception/inception_v1", "models/imgclf/inception/inception_v3", "models/imgclf/inception/inception_v4", "models/imgclf/inception_next/InceptionNeXt", "models/imgclf/inception_next/inception_next_atto", "models/imgclf/inception_next/inception_next_base", "models/imgclf/inception_next/inception_next_small", "models/imgclf/inception_next/inception_next_tiny", "models/imgclf/inception_res/InceptionResNet", "models/imgclf/inception_res/inception_resnet_v1", "models/imgclf/inception_res/inception_resnet_v2", "models/imgclf/index", "models/imgclf/lenet/LeNet", "models/imgclf/lenet/lenet_1", "models/imgclf/lenet/lenet_4", "models/imgclf/lenet/lenet_5", "models/imgclf/maxvit/MaxViT", "models/imgclf/maxvit/maxvit_base", "models/imgclf/maxvit/maxvit_large", "models/imgclf/maxvit/maxvit_small", "models/imgclf/maxvit/maxvit_tiny", "models/imgclf/maxvit/maxvit_xlarge", "models/imgclf/mobile/MobileNet_", "models/imgclf/mobile/MobileNet_V2_", "models/imgclf/mobile/MobileNet_V3", "models/imgclf/mobile/MobileNet_V4", "models/imgclf/mobile/mobilenet", "models/imgclf/mobile/mobilenet_v2", "models/imgclf/mobile/mobilenet_v3_large", "models/imgclf/mobile/mobilenet_v3_small", "models/imgclf/mobile/mobilenet_v4_conv_large", "models/imgclf/mobile/mobilenet_v4_conv_medium", "models/imgclf/mobile/mobilenet_v4_conv_small", "models/imgclf/mobile/mobilenet_v4_hybrid_large", "models/imgclf/mobile/mobilenet_v4_hybrid_medium", "models/imgclf/pvt/PVT", "models/imgclf/pvt/PVT_V2", "models/imgclf/pvt/pvt_huge", "models/imgclf/pvt/pvt_large", "models/imgclf/pvt/pvt_medium", "models/imgclf/pvt/pvt_small", "models/imgclf/pvt/pvt_tiny", "models/imgclf/pvt/pvt_v2_b0", "models/imgclf/pvt/pvt_v2_b1", "models/imgclf/pvt/pvt_v2_b2", "models/imgclf/pvt/pvt_v2_b2_li", "models/imgclf/pvt/pvt_v2_b3", "models/imgclf/pvt/pvt_v2_b4", "models/imgclf/pvt/pvt_v2_b5", "models/imgclf/resnest/ResNeSt", "models/imgclf/resnest/resnest_101", "models/imgclf/resnest/resnest_14", "models/imgclf/resnest/resnest_200", "models/imgclf/resnest/resnest_26", "models/imgclf/resnest/resnest_269", "models/imgclf/resnest/resnest_50", "models/imgclf/resnest/resnest_50_1s4x24d", "models/imgclf/resnest/resnest_50_4s2x40d", "models/imgclf/resnet/ResNet", "models/imgclf/resnet/resnet_1001", "models/imgclf/resnet/resnet_101", "models/imgclf/resnet/resnet_152", "models/imgclf/resnet/resnet_18", "models/imgclf/resnet/resnet_200", "models/imgclf/resnet/resnet_269", "models/imgclf/resnet/resnet_34", "models/imgclf/resnet/resnet_50", "models/imgclf/resnet/wide_resnet_101", "models/imgclf/resnet/wide_resnet_50", "models/imgclf/resnext/ResNeXt", "models/imgclf/resnext/resnext_101_32x16d", "models/imgclf/resnext/resnext_101_32x32d", "models/imgclf/resnext/resnext_101_32x4d", "models/imgclf/resnext/resnext_101_32x8d", "models/imgclf/resnext/resnext_101_64x4d", "models/imgclf/resnext/resnext_50_32x4d", "models/imgclf/senet/SENet", "models/imgclf/senet/se_resnet_101", "models/imgclf/senet/se_resnet_152", "models/imgclf/senet/se_resnet_18", "models/imgclf/senet/se_resnet_34", "models/imgclf/senet/se_resnet_50", "models/imgclf/senet/se_resnext_101_32x4d", "models/imgclf/senet/se_resnext_101_32x8d", "models/imgclf/senet/se_resnext_101_64x4d", "models/imgclf/senet/se_resnext_50_32x4d", "models/imgclf/sknet/SKNet", "models/imgclf/sknet/sk_resnet_18", "models/imgclf/sknet/sk_resnet_34", "models/imgclf/sknet/sk_resnet_50", "models/imgclf/sknet/sk_resnext_50_32x4d", "models/imgclf/swin/SwinTransformer", "models/imgclf/swin/SwinTransformer_V2", "models/imgclf/swin/swin_base", "models/imgclf/swin/swin_large", "models/imgclf/swin/swin_small", "models/imgclf/swin/swin_tiny", "models/imgclf/swin/swin_v2_base", "models/imgclf/swin/swin_v2_giant", "models/imgclf/swin/swin_v2_huge", "models/imgclf/swin/swin_v2_large", "models/imgclf/swin/swin_v2_small", "models/imgclf/swin/swin_v2_tiny", "models/imgclf/vgg/VGGNet", "models/imgclf/vgg/vggnet_11", "models/imgclf/vgg/vggnet_13", "models/imgclf/vgg/vggnet_16", "models/imgclf/vgg/vggnet_19", "models/imgclf/vit/ViT", "models/imgclf/vit/vit_base", "models/imgclf/vit/vit_huge", "models/imgclf/vit/vit_large", "models/imgclf/vit/vit_small", "models/imgclf/vit/vit_tiny", "models/imgclf/xception/Xception_", "models/imgclf/xception/xception", "models/imgclf/zfnet/ZFNet_", "models/imgclf/zfnet/zfnet", "models/models", "models/objdet/index", "models/objdet/rcnn/FastRCNN", "models/objdet/rcnn/FasterRCNN", "models/objdet/rcnn/RCNN", "models/seq2seq/index", "models/seq2seq/transformer/Transformer", "models/seq2seq/transformer/transformer_base", "models/seq2seq/transformer/transformer_big", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/attention/index", "nn/functions/attention/scaled_dot_product_attention", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/conv_transpose1d", "nn/functions/conv/conv_transpose2d", "nn/functions/conv/conv_transpose3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/drop_block", "nn/functions/drop/drop_path", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/global_response_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/norm/normalize", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/adaptive_max_pool1d", "nn/functions/pool/adaptive_max_pool2d", "nn/functions/pool/adaptive_max_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/spatial/affine_grid", "nn/functions/spatial/grid_sample", "nn/functions/spatial/index", "nn/functions/util/embedding", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/fused/ConvBNReLU1d", "nn/fused/ConvBNReLU2d", "nn/fused/ConvBNReLU3d", "nn/fused/DepthSeparableConv1d", "nn/fused/DepthSeparableConv2d", "nn/fused/DepthSeparableConv3d", "nn/fused/SEModule", "nn/fused/SelectiveKernel", "nn/fused/index", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/HardSigmoid", "nn/modules/activation/HardSwish", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/ReLU6", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Swish", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/attention/MultiHeadAttention", "nn/modules/attention/ScaledDotProductAttention", "nn/modules/attention/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/ConvTranspose1d", "nn/modules/conv/ConvTranspose2d", "nn/modules/conv/ConvTranspose3d", "nn/modules/conv/Unfold", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/DropBlock", "nn/modules/drop/DropPath", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/einops/Rearrange", "nn/modules/einops/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/GlobalResponseNorm", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AdaptiveMaxPool1d", "nn/modules/pool/AdaptiveMaxPool2d", "nn/modules/pool/AdaptiveMaxPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/modules/sparse/Embedding", "nn/modules/sparse/index", "nn/modules/transformer/Transformer", "nn/modules/transformer/TransformerDecoder", "nn/modules/transformer/TransformerDecoderLayer", "nn/modules/transformer/TransformerEncoder", "nn/modules/transformer/TransformerEncoderLayer", "nn/modules/transformer/index", "nn/modules/vision/Upsample", "nn/modules/vision/index", "nn/nn", "optim/Optimizer", "optim/lr_scheduler", "optim/lr_scheduler/CosineAnnealingLR", "optim/lr_scheduler/CyclicLR", "optim/lr_scheduler/ExponentialLR", "optim/lr_scheduler/LRScheduler", "optim/lr_scheduler/LambdaLR", "optim/lr_scheduler/MultiStepLR", "optim/lr_scheduler/ReduceLROnPlateau", "optim/lr_scheduler/StepLR", "optim/lr_scheduler/index", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/Numeric", "others/count_flops", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "random/functions/bernoulli", "random/functions/index", "random/functions/permutation", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/multiply", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/bfunc/tensordot", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/full", "tensor/operations/gfunc/full_like", "tensor/operations/gfunc/linspace", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/ceil", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/floor", "tensor/operations/ufunc/log", "tensor/operations/ufunc/log2", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/round", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/swapaxes", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/argmax", "tensor/utilities/argmin", "tensor/utilities/argsort", "tensor/utilities/broadcast_to", "tensor/utilities/chunk", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/histogram", "tensor/utilities/histogram2d", "tensor/utilities/histogramdd", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/masked_fill", "tensor/utilities/meshgrid", "tensor/utilities/nonzero", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/roll", "tensor/utilities/sort", "tensor/utilities/split", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/topk", "tensor/utilities/tril", "tensor/utilities/triu", "tensor/utilities/unbind", "tensor/utilities/unique", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "tensor/utilities/where", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/CIFAR10.rst", "datasets/image/CIFAR100.rst", "datasets/image/FashionMNIST.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "einops/einops.rst", "einops/functions/einsum.rst", "einops/functions/index.rst", "einops/functions/rearrange.rst", "einops/functions/reduce.rst", "einops/functions/repeat.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/imgclf/alex/AlexNet_.rst", "models/imgclf/alex/alexnet.rst", "models/imgclf/coatnet/CoAtNet.rst", "models/imgclf/coatnet/coatnet_0.rst", "models/imgclf/coatnet/coatnet_1.rst", "models/imgclf/coatnet/coatnet_2.rst", "models/imgclf/coatnet/coatnet_3.rst", "models/imgclf/coatnet/coatnet_4.rst", "models/imgclf/coatnet/coatnet_5.rst", "models/imgclf/coatnet/coatnet_6.rst", "models/imgclf/coatnet/coatnet_7.rst", "models/imgclf/convnext/ConvNeXt.rst", "models/imgclf/convnext/ConvNeXt_V2.rst", "models/imgclf/convnext/convnext_base.rst", "models/imgclf/convnext/convnext_large.rst", "models/imgclf/convnext/convnext_small.rst", "models/imgclf/convnext/convnext_tiny.rst", "models/imgclf/convnext/convnext_v2_atto.rst", "models/imgclf/convnext/convnext_v2_base.rst", "models/imgclf/convnext/convnext_v2_femto.rst", "models/imgclf/convnext/convnext_v2_huge.rst", "models/imgclf/convnext/convnext_v2_large.rst", "models/imgclf/convnext/convnext_v2_nano.rst", "models/imgclf/convnext/convnext_v2_pico.rst", "models/imgclf/convnext/convnext_v2_tiny.rst", "models/imgclf/convnext/convnext_xlarge.rst", "models/imgclf/crossvit/CrossViT.rst", "models/imgclf/crossvit/crossvit_15.rst", "models/imgclf/crossvit/crossvit_15_dagger.rst", "models/imgclf/crossvit/crossvit_18.rst", "models/imgclf/crossvit/crossvit_18_dagger.rst", "models/imgclf/crossvit/crossvit_9.rst", "models/imgclf/crossvit/crossvit_9_dagger.rst", "models/imgclf/crossvit/crossvit_base.rst", "models/imgclf/crossvit/crossvit_small.rst", "models/imgclf/crossvit/crossvit_tiny.rst", "models/imgclf/cvt/CvT.rst", "models/imgclf/cvt/cvt_13.rst", "models/imgclf/cvt/cvt_21.rst", "models/imgclf/cvt/cvt_w24.rst", "models/imgclf/dense/DenseNet.rst", "models/imgclf/dense/densenet_121.rst", "models/imgclf/dense/densenet_169.rst", "models/imgclf/dense/densenet_201.rst", "models/imgclf/dense/densenet_264.rst", "models/imgclf/efficient/EfficientNet.rst", "models/imgclf/efficient/EfficientNet_V2.rst", "models/imgclf/efficient/efficientnet_b0.rst", "models/imgclf/efficient/efficientnet_b1.rst", "models/imgclf/efficient/efficientnet_b2.rst", "models/imgclf/efficient/efficientnet_b3.rst", "models/imgclf/efficient/efficientnet_b4.rst", "models/imgclf/efficient/efficientnet_b5.rst", "models/imgclf/efficient/efficientnet_b6.rst", "models/imgclf/efficient/efficientnet_b7.rst", "models/imgclf/efficient/efficientnet_v2_l.rst", "models/imgclf/efficient/efficientnet_v2_m.rst", "models/imgclf/efficient/efficientnet_v2_s.rst", "models/imgclf/efficient/efficientnet_v2_xl.rst", "models/imgclf/inception/Inception.rst", "models/imgclf/inception/inception_v1.rst", "models/imgclf/inception/inception_v3.rst", "models/imgclf/inception/inception_v4.rst", "models/imgclf/inception_next/InceptionNeXt.rst", "models/imgclf/inception_next/inception_next_atto.rst", "models/imgclf/inception_next/inception_next_base.rst", "models/imgclf/inception_next/inception_next_small.rst", "models/imgclf/inception_next/inception_next_tiny.rst", "models/imgclf/inception_res/InceptionResNet.rst", "models/imgclf/inception_res/inception_resnet_v1.rst", "models/imgclf/inception_res/inception_resnet_v2.rst", "models/imgclf/index.rst", "models/imgclf/lenet/LeNet.rst", "models/imgclf/lenet/lenet_1.rst", "models/imgclf/lenet/lenet_4.rst", "models/imgclf/lenet/lenet_5.rst", "models/imgclf/maxvit/MaxViT.rst", "models/imgclf/maxvit/maxvit_base.rst", "models/imgclf/maxvit/maxvit_large.rst", "models/imgclf/maxvit/maxvit_small.rst", "models/imgclf/maxvit/maxvit_tiny.rst", "models/imgclf/maxvit/maxvit_xlarge.rst", "models/imgclf/mobile/MobileNet_.rst", "models/imgclf/mobile/MobileNet_V2_.rst", "models/imgclf/mobile/MobileNet_V3.rst", "models/imgclf/mobile/MobileNet_V4.rst", "models/imgclf/mobile/mobilenet.rst", "models/imgclf/mobile/mobilenet_v2.rst", "models/imgclf/mobile/mobilenet_v3_large.rst", "models/imgclf/mobile/mobilenet_v3_small.rst", "models/imgclf/mobile/mobilenet_v4_conv_large.rst", "models/imgclf/mobile/mobilenet_v4_conv_medium.rst", "models/imgclf/mobile/mobilenet_v4_conv_small.rst", "models/imgclf/mobile/mobilenet_v4_hybrid_large.rst", "models/imgclf/mobile/mobilenet_v4_hybrid_medium.rst", "models/imgclf/pvt/PVT.rst", "models/imgclf/pvt/PVT_V2.rst", "models/imgclf/pvt/pvt_huge.rst", "models/imgclf/pvt/pvt_large.rst", "models/imgclf/pvt/pvt_medium.rst", "models/imgclf/pvt/pvt_small.rst", "models/imgclf/pvt/pvt_tiny.rst", "models/imgclf/pvt/pvt_v2_b0.rst", "models/imgclf/pvt/pvt_v2_b1.rst", "models/imgclf/pvt/pvt_v2_b2.rst", "models/imgclf/pvt/pvt_v2_b2_li.rst", "models/imgclf/pvt/pvt_v2_b3.rst", "models/imgclf/pvt/pvt_v2_b4.rst", "models/imgclf/pvt/pvt_v2_b5.rst", "models/imgclf/resnest/ResNeSt.rst", "models/imgclf/resnest/resnest_101.rst", "models/imgclf/resnest/resnest_14.rst", "models/imgclf/resnest/resnest_200.rst", "models/imgclf/resnest/resnest_26.rst", "models/imgclf/resnest/resnest_269.rst", "models/imgclf/resnest/resnest_50.rst", "models/imgclf/resnest/resnest_50_1s4x24d.rst", "models/imgclf/resnest/resnest_50_4s2x40d.rst", "models/imgclf/resnet/ResNet.rst", "models/imgclf/resnet/resnet_1001.rst", "models/imgclf/resnet/resnet_101.rst", "models/imgclf/resnet/resnet_152.rst", "models/imgclf/resnet/resnet_18.rst", "models/imgclf/resnet/resnet_200.rst", "models/imgclf/resnet/resnet_269.rst", "models/imgclf/resnet/resnet_34.rst", "models/imgclf/resnet/resnet_50.rst", "models/imgclf/resnet/wide_resnet_101.rst", "models/imgclf/resnet/wide_resnet_50.rst", "models/imgclf/resnext/ResNeXt.rst", "models/imgclf/resnext/resnext_101_32x16d.rst", "models/imgclf/resnext/resnext_101_32x32d.rst", "models/imgclf/resnext/resnext_101_32x4d.rst", "models/imgclf/resnext/resnext_101_32x8d.rst", "models/imgclf/resnext/resnext_101_64x4d.rst", "models/imgclf/resnext/resnext_50_32x4d.rst", "models/imgclf/senet/SENet.rst", "models/imgclf/senet/se_resnet_101.rst", "models/imgclf/senet/se_resnet_152.rst", "models/imgclf/senet/se_resnet_18.rst", "models/imgclf/senet/se_resnet_34.rst", "models/imgclf/senet/se_resnet_50.rst", "models/imgclf/senet/se_resnext_101_32x4d.rst", "models/imgclf/senet/se_resnext_101_32x8d.rst", "models/imgclf/senet/se_resnext_101_64x4d.rst", "models/imgclf/senet/se_resnext_50_32x4d.rst", "models/imgclf/sknet/SKNet.rst", "models/imgclf/sknet/sk_resnet_18.rst", "models/imgclf/sknet/sk_resnet_34.rst", "models/imgclf/sknet/sk_resnet_50.rst", "models/imgclf/sknet/sk_resnext_50_32x4d.rst", "models/imgclf/swin/SwinTransformer.rst", "models/imgclf/swin/SwinTransformer_V2.rst", "models/imgclf/swin/swin_base.rst", "models/imgclf/swin/swin_large.rst", "models/imgclf/swin/swin_small.rst", "models/imgclf/swin/swin_tiny.rst", "models/imgclf/swin/swin_v2_base.rst", "models/imgclf/swin/swin_v2_giant.rst", "models/imgclf/swin/swin_v2_huge.rst", "models/imgclf/swin/swin_v2_large.rst", "models/imgclf/swin/swin_v2_small.rst", "models/imgclf/swin/swin_v2_tiny.rst", "models/imgclf/vgg/VGGNet.rst", "models/imgclf/vgg/vggnet_11.rst", "models/imgclf/vgg/vggnet_13.rst", "models/imgclf/vgg/vggnet_16.rst", "models/imgclf/vgg/vggnet_19.rst", "models/imgclf/vit/ViT.rst", "models/imgclf/vit/vit_base.rst", "models/imgclf/vit/vit_huge.rst", "models/imgclf/vit/vit_large.rst", "models/imgclf/vit/vit_small.rst", "models/imgclf/vit/vit_tiny.rst", "models/imgclf/xception/Xception_.rst", "models/imgclf/xception/xception.rst", "models/imgclf/zfnet/ZFNet_.rst", "models/imgclf/zfnet/zfnet.rst", "models/models.rst", "models/objdet/index.rst", "models/objdet/rcnn/FastRCNN.rst", "models/objdet/rcnn/FasterRCNN.rst", "models/objdet/rcnn/RCNN.rst", "models/seq2seq/index.rst", "models/seq2seq/transformer/Transformer.rst", "models/seq2seq/transformer/transformer_base.rst", "models/seq2seq/transformer/transformer_big.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/attention/index.rst", "nn/functions/attention/scaled_dot_product_attention.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/conv_transpose1d.rst", "nn/functions/conv/conv_transpose2d.rst", "nn/functions/conv/conv_transpose3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/drop_block.rst", "nn/functions/drop/drop_path.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/global_response_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/norm/normalize.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/adaptive_max_pool1d.rst", "nn/functions/pool/adaptive_max_pool2d.rst", "nn/functions/pool/adaptive_max_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/spatial/affine_grid.rst", "nn/functions/spatial/grid_sample.rst", "nn/functions/spatial/index.rst", "nn/functions/util/embedding.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/fused/ConvBNReLU1d.rst", "nn/fused/ConvBNReLU2d.rst", "nn/fused/ConvBNReLU3d.rst", "nn/fused/DepthSeparableConv1d.rst", "nn/fused/DepthSeparableConv2d.rst", "nn/fused/DepthSeparableConv3d.rst", "nn/fused/SEModule.rst", "nn/fused/SelectiveKernel.rst", "nn/fused/index.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/HardSigmoid.rst", "nn/modules/activation/HardSwish.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/ReLU6.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Swish.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/attention/MultiHeadAttention.rst", "nn/modules/attention/ScaledDotProductAttention.rst", "nn/modules/attention/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/ConvTranspose1d.rst", "nn/modules/conv/ConvTranspose2d.rst", "nn/modules/conv/ConvTranspose3d.rst", "nn/modules/conv/Unfold.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/DropBlock.rst", "nn/modules/drop/DropPath.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/einops/Rearrange.rst", "nn/modules/einops/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/GlobalResponseNorm.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AdaptiveMaxPool1d.rst", "nn/modules/pool/AdaptiveMaxPool2d.rst", "nn/modules/pool/AdaptiveMaxPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/modules/sparse/Embedding.rst", "nn/modules/sparse/index.rst", "nn/modules/transformer/Transformer.rst", "nn/modules/transformer/TransformerDecoder.rst", "nn/modules/transformer/TransformerDecoderLayer.rst", "nn/modules/transformer/TransformerEncoder.rst", "nn/modules/transformer/TransformerEncoderLayer.rst", "nn/modules/transformer/index.rst", "nn/modules/vision/Upsample.rst", "nn/modules/vision/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/lr_scheduler.rst", "optim/lr_scheduler/CosineAnnealingLR.rst", "optim/lr_scheduler/CyclicLR.rst", "optim/lr_scheduler/ExponentialLR.rst", "optim/lr_scheduler/LRScheduler.rst", "optim/lr_scheduler/LambdaLR.rst", "optim/lr_scheduler/MultiStepLR.rst", "optim/lr_scheduler/ReduceLROnPlateau.rst", "optim/lr_scheduler/StepLR.rst", "optim/lr_scheduler/index.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/Numeric.rst", "others/count_flops.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "random/functions/bernoulli.rst", "random/functions/index.rst", "random/functions/permutation.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/multiply.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/bfunc/tensordot.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/full.rst", "tensor/operations/gfunc/full_like.rst", "tensor/operations/gfunc/linspace.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/ceil.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/floor.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/log2.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/round.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/swapaxes.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/argmax.rst", "tensor/utilities/argmin.rst", "tensor/utilities/argsort.rst", "tensor/utilities/broadcast_to.rst", "tensor/utilities/chunk.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/histogram.rst", "tensor/utilities/histogram2d.rst", "tensor/utilities/histogramdd.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/masked_fill.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/nonzero.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/roll.rst", "tensor/utilities/sort.rst", "tensor/utilities/split.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/topk.rst", "tensor/utilities/tril.rst", "tensor/utilities/triu.rst", "tensor/utilities/unbind.rst", "tensor/utilities/unique.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "tensor/utilities/where.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"abs() (in module lucid)": [[448, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[396, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[397, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[398, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[400, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[399, "lucid.optim.AdamW", false]], "adaptive_avg_pool1d() (in module lucid.nn.functional)": [[268, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[269, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[270, "lucid.nn.functional.adaptive_avg_pool3d", false]], "adaptive_max_pool1d() (in module lucid.nn.functional)": [[271, "lucid.nn.functional.adaptive_max_pool1d", false]], "adaptive_max_pool2d() (in module lucid.nn.functional)": [[272, "lucid.nn.functional.adaptive_max_pool2d", false]], "adaptive_max_pool3d() (in module lucid.nn.functional)": [[273, "lucid.nn.functional.adaptive_max_pool3d", false]], "adaptiveavgpool1d (class in lucid.nn)": [[359, "lucid.nn.AdaptiveAvgPool1d", false]], "adaptiveavgpool2d (class in lucid.nn)": [[360, "lucid.nn.AdaptiveAvgPool2d", false]], "adaptiveavgpool3d (class in lucid.nn)": [[361, "lucid.nn.AdaptiveAvgPool3d", false]], "adaptivemaxpool1d (class in lucid.nn)": [[362, "lucid.nn.AdaptiveMaxPool1d", false]], "adaptivemaxpool2d (class in lucid.nn)": [[363, "lucid.nn.AdaptiveMaxPool2d", false]], "adaptivemaxpool3d (class in lucid.nn)": [[364, "lucid.nn.AdaptiveMaxPool3d", false]], "add() (in module lucid)": [[423, "lucid.add", false]], "affine_grid() (in module lucid.nn.functional)": [[281, "lucid.nn.functional.affine_grid", false]], "alexnet (class in lucid.models)": [[29, "lucid.models.AlexNet", false]], "alexnet() (in module lucid.models)": [[30, "lucid.models.alexnet", false]], "alpha_dropout() (in module lucid.nn.functional)": [[244, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[329, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[435, "lucid.arange", false]], "arccos() (in module lucid)": [[449, "lucid.arccos", false]], "arcsin() (in module lucid)": [[450, "lucid.arcsin", false]], "arctan() (in module lucid)": [[451, "lucid.arctan", false]], "argmax() (in module lucid)": [[479, "lucid.argmax", false]], "argmin() (in module lucid)": [[480, "lucid.argmin", false]], "argsort() (in module lucid)": [[481, "lucid.argsort", false]], "asgd (class in lucid.optim)": [[395, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[274, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[275, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[276, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[365, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[366, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[367, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[262, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[350, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[351, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[352, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[344, "lucid.nn.BCELoss", false]], "bernoulli() (in module lucid.random)": [[413, "lucid.random.bernoulli", false]], "bilinear (class in lucid.nn)": [[340, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[253, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[256, "lucid.nn.functional.binary_cross_entropy", false]], "broadcast_to() (in module lucid)": [[482, "lucid.broadcast_to", false]], "buffer (class in lucid.nn)": [[216, "lucid.nn.Buffer", false]], "ceil() (in module lucid)": [[452, "lucid.ceil", false]], "centercrop (class in lucid.transforms)": [[514, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[18, "lucid.linalg.cholesky", false]], "chunk() (in module lucid)": [[483, "lucid.chunk", false]], "cifar10 (class in lucid.datasets)": [[5, "lucid.datasets.CIFAR10", false]], "cifar100 (class in lucid.datasets)": [[6, "lucid.datasets.CIFAR100", false]], "clip() (in module lucid)": [[453, "lucid.clip", false]], "coatnet (class in lucid.models)": [[31, "lucid.models.CoAtNet", false]], "coatnet_0() (in module lucid.models)": [[32, "lucid.models.coatnet_0", false]], "coatnet_1() (in module lucid.models)": [[33, "lucid.models.coatnet_1", false]], "coatnet_2() (in module lucid.models)": [[34, "lucid.models.coatnet_2", false]], "coatnet_3() (in module lucid.models)": [[35, "lucid.models.coatnet_3", false]], "coatnet_4() (in module lucid.models)": [[36, "lucid.models.coatnet_4", false]], "coatnet_5() (in module lucid.models)": [[37, "lucid.models.coatnet_5", false]], "coatnet_6() (in module lucid.models)": [[38, "lucid.models.coatnet_6", false]], "coatnet_7() (in module lucid.models)": [[39, "lucid.models.coatnet_7", false]], "compose (class in lucid.transforms)": [[512, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[484, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[297, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[321, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[236, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[322, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[237, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[323, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[238, "lucid.nn.functional.conv3d", false]], "conv_transpose1d() (in module lucid.nn.functional)": [[239, "lucid.nn.functional.conv_transpose1d", false]], "conv_transpose2d() (in module lucid.nn.functional)": [[240, "lucid.nn.functional.conv_transpose2d", false]], "conv_transpose3d() (in module lucid.nn.functional)": [[241, "lucid.nn.functional.conv_transpose3d", false]], "convbnrelu1d (class in lucid.nn)": [[288, "lucid.nn.ConvBNReLU1d", false]], "convbnrelu2d (class in lucid.nn)": [[289, "lucid.nn.ConvBNReLU2d", false]], "convbnrelu3d (class in lucid.nn)": [[290, "lucid.nn.ConvBNReLU3d", false]], "convnext (class in lucid.models)": [[40, "lucid.models.ConvNeXt", false]], "convnext_base() (in module lucid.models)": [[42, "lucid.models.convnext_base", false]], "convnext_large() (in module lucid.models)": [[43, "lucid.models.convnext_large", false]], "convnext_small() (in module lucid.models)": [[44, "lucid.models.convnext_small", false]], "convnext_tiny() (in module lucid.models)": [[45, "lucid.models.convnext_tiny", false]], "convnext_v2 (class in lucid.models)": [[41, "lucid.models.ConvNeXt_V2", false]], "convnext_v2_atto() (in module lucid.models)": [[46, "lucid.models.convnext_v2_atto", false]], "convnext_v2_base() (in module lucid.models)": [[47, "lucid.models.convnext_v2_base", false]], "convnext_v2_femto() (in module lucid.models)": [[48, "lucid.models.convnext_v2_femto", false]], "convnext_v2_huge() (in module lucid.models)": [[49, "lucid.models.convnext_v2_huge", false]], "convnext_v2_large() (in module lucid.models)": [[50, "lucid.models.convnext_v2_large", false]], "convnext_v2_nano() (in module lucid.models)": [[51, "lucid.models.convnext_v2_nano", false]], "convnext_v2_pico() (in module lucid.models)": [[52, "lucid.models.convnext_v2_pico", false]], "convnext_v2_tiny() (in module lucid.models)": [[53, "lucid.models.convnext_v2_tiny", false]], "convnext_xlarge() (in module lucid.models)": [[54, "lucid.models.convnext_xlarge", false]], "convtranspose1d (class in lucid.nn)": [[324, "lucid.nn.ConvTranspose1d", false]], "convtranspose2d (class in lucid.nn)": [[325, "lucid.nn.ConvTranspose2d", false]], "convtranspose3d (class in lucid.nn)": [[326, "lucid.nn.ConvTranspose3d", false]], "cos() (in module lucid)": [[454, "lucid.cos", false]], "cosh() (in module lucid)": [[455, "lucid.cosh", false]], "cosineannealinglr (class in lucid.optim.lr_scheduler)": [[385, "lucid.optim.lr_scheduler.CosineAnnealingLR", false]], "count_flops() (in module lucid)": [[408, "lucid.count_flops", false]], "cross_entropy() (in module lucid.nn.functional)": [[257, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[345, "lucid.nn.CrossEntropyLoss", false]], "crossvit (class in lucid.models)": [[55, "lucid.models.CrossViT", false]], "crossvit_15() (in module lucid.models)": [[56, "lucid.models.crossvit_15", false]], "crossvit_15_dagger() (in module lucid.models)": [[57, "lucid.models.crossvit_15_dagger", false]], "crossvit_18() (in module lucid.models)": [[58, "lucid.models.crossvit_18", false]], "crossvit_18_dagger() (in module lucid.models)": [[59, "lucid.models.crossvit_18_dagger", false]], "crossvit_9() (in module lucid.models)": [[60, "lucid.models.crossvit_9", false]], "crossvit_9_dagger() (in module lucid.models)": [[61, "lucid.models.crossvit_9_dagger", false]], "crossvit_base() (in module lucid.models)": [[62, "lucid.models.crossvit_base", false]], "crossvit_small() (in module lucid.models)": [[63, "lucid.models.crossvit_small", false]], "crossvit_tiny() (in module lucid.models)": [[64, "lucid.models.crossvit_tiny", false]], "cube() (in module lucid)": [[456, "lucid.cube", false]], "cvt (class in lucid.models)": [[65, "lucid.models.CvT", false]], "cvt_13() (in module lucid.models)": [[66, "lucid.models.cvt_13", false]], "cvt_21() (in module lucid.models)": [[67, "lucid.models.cvt_21", false]], "cvt_w24() (in module lucid.models)": [[68, "lucid.models.cvt_w24", false]], "cycliclr (class in lucid.optim.lr_scheduler)": [[386, "lucid.optim.lr_scheduler.CyclicLR", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "densenet (class in lucid.models)": [[69, "lucid.models.DenseNet", false]], "densenet_121() (in module lucid.models)": [[70, "lucid.models.densenet_121", false]], "densenet_169() (in module lucid.models)": [[71, "lucid.models.densenet_169", false]], "densenet_201() (in module lucid.models)": [[72, "lucid.models.densenet_201", false]], "densenet_264() (in module lucid.models)": [[73, "lucid.models.densenet_264", false]], "depthseparableconv1d (class in lucid.nn)": [[291, "lucid.nn.DepthSeparableConv1d", false]], "depthseparableconv2d (class in lucid.nn)": [[292, "lucid.nn.DepthSeparableConv2d", false]], "depthseparableconv3d (class in lucid.nn)": [[293, "lucid.nn.DepthSeparableConv3d", false]], "det() (in module lucid.linalg)": [[19, "lucid.linalg.det", false]], "diag() (in module lucid)": [[436, "lucid.diag", false]], "div() (in module lucid)": [[424, "lucid.div", false]], "dot() (in module lucid)": [[425, "lucid.dot", false]], "drop_block() (in module lucid.nn.functional)": [[245, "lucid.nn.functional.drop_block", false]], "drop_path() (in module lucid.nn.functional)": [[246, "lucid.nn.functional.drop_path", false]], "dropblock (class in lucid.nn)": [[330, "lucid.nn.DropBlock", false]], "dropout (class in lucid.nn)": [[332, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[247, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[333, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[248, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[334, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[249, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[335, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[250, "lucid.nn.functional.dropout3d", false]], "droppath (class in lucid.nn)": [[331, "lucid.nn.DropPath", false]], "efficientnet (class in lucid.models)": [[74, "lucid.models.EfficientNet", false]], "efficientnet_b0() (in module lucid.models)": [[76, "lucid.models.efficientnet_b0", false]], "efficientnet_b1() (in module lucid.models)": [[77, "lucid.models.efficientnet_b1", false]], "efficientnet_b2() (in module lucid.models)": [[78, "lucid.models.efficientnet_b2", false]], "efficientnet_b3() (in module lucid.models)": [[79, "lucid.models.efficientnet_b3", false]], "efficientnet_b4() (in module lucid.models)": [[80, "lucid.models.efficientnet_b4", false]], "efficientnet_b5() (in module lucid.models)": [[81, "lucid.models.efficientnet_b5", false]], "efficientnet_b6() (in module lucid.models)": [[82, "lucid.models.efficientnet_b6", false]], "efficientnet_b7() (in module lucid.models)": [[83, "lucid.models.efficientnet_b7", false]], "efficientnet_v2 (class in lucid.models)": [[75, "lucid.models.EfficientNet_V2", false]], "efficientnet_v2_l() (in module lucid.models)": [[84, "lucid.models.efficientnet_v2_l", false]], "efficientnet_v2_m() (in module lucid.models)": [[85, "lucid.models.efficientnet_v2_m", false]], "efficientnet_v2_s() (in module lucid.models)": [[86, "lucid.models.efficientnet_v2_s", false]], "efficientnet_v2_xl() (in module lucid.models)": [[87, "lucid.models.efficientnet_v2_xl", false]], "eig() (in module lucid.linalg)": [[20, "lucid.linalg.eig", false]], "einsum() (in module lucid.einops)": [[11, "lucid.einops.einsum", false]], "elu (class in lucid.nn)": [[305, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[225, "lucid.nn.functional.elu", false]], "embedding (class in lucid.nn)": [[372, "lucid.nn.Embedding", false]], "embedding() (in module lucid.nn.functional)": [[284, "lucid.nn.functional.embedding", false]], "empty() (in module lucid)": [[437, "lucid.empty", false]], "empty_like() (in module lucid)": [[438, "lucid.empty_like", false]], "exp() (in module lucid)": [[457, "lucid.exp", false]], "exponentiallr (class in lucid.optim.lr_scheduler)": [[387, "lucid.optim.lr_scheduler.ExponentialLR", false]], "eye() (in module lucid)": [[439, "lucid.eye", false]], "fashionmnist (class in lucid.datasets)": [[7, "lucid.datasets.FashionMNIST", false]], "fasterrcnn (class in lucid.models)": [[210, "lucid.models.FasterRCNN", false]], "fastrcnn (class in lucid.models)": [[209, "lucid.models.FastRCNN", false]], "flatten() (in module lucid)": [[485, "lucid.flatten", false]], "floor() (in module lucid)": [[458, "lucid.floor", false]], "full() (in module lucid)": [[440, "lucid.full", false]], "full_like() (in module lucid)": [[441, "lucid.full_like", false]], "gelu (class in lucid.nn)": [[306, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[226, "lucid.nn.functional.gelu", false]], "global_response_norm() (in module lucid.nn.functional)": [[263, "lucid.nn.functional.global_response_norm", false]], "globalresponsenorm (class in lucid.nn)": [[353, "lucid.nn.GlobalResponseNorm", false]], "grad_enabled() (in module lucid)": [[409, "lucid.grad_enabled", false]], "grid_sample() (in module lucid.nn.functional)": [[282, "lucid.nn.functional.grid_sample", false]], "hardsigmoid (class in lucid.nn)": [[307, "lucid.nn.HardSigmoid", false]], "hardswish (class in lucid.nn)": [[308, "lucid.nn.HardSwish", false]], "histogram() (in module lucid)": [[486, "lucid.histogram", false]], "histogram2d() (in module lucid)": [[487, "lucid.histogram2d", false]], "histogramdd() (in module lucid)": [[488, "lucid.histogramdd", false]], "hstack() (in module lucid)": [[489, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[258, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[346, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[341, "lucid.nn.Identity", false]], "inception (class in lucid.models)": [[88, "lucid.models.Inception", false]], "inception_next_atto() (in module lucid.models)": [[93, "lucid.models.inception_next_atto", false]], "inception_next_base() (in module lucid.models)": [[94, "lucid.models.inception_next_base", false]], "inception_next_small() (in module lucid.models)": [[95, "lucid.models.inception_next_small", false]], "inception_next_tiny() (in module lucid.models)": [[96, "lucid.models.inception_next_tiny", false]], "inception_resnet_v1() (in module lucid.models)": [[98, "lucid.models.inception_resnet_v1", false]], "inception_resnet_v2() (in module lucid.models)": [[99, "lucid.models.inception_resnet_v2", false]], "inception_v1() (in module lucid.models)": [[89, "lucid.models.inception_v1", false]], "inception_v3() (in module lucid.models)": [[90, "lucid.models.inception_v3", false]], "inception_v4() (in module lucid.models)": [[91, "lucid.models.inception_v4", false]], "inceptionnext (class in lucid.models)": [[92, "lucid.models.InceptionNeXt", false]], "inceptionresnet (class in lucid.models)": [[97, "lucid.models.InceptionResNet", false]], "inner() (in module lucid)": [[426, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[265, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[354, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[355, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[356, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[286, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[22, "lucid.linalg.inv", false]], "kaiming_normal() (in module lucid.nn.init)": [[299, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[300, "lucid.nn.init.kaiming_uniform", false]], "lambdalr (class in lucid.optim.lr_scheduler)": [[389, "lucid.optim.lr_scheduler.LambdaLR", false]], "layer_norm() (in module lucid.nn.functional)": [[266, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[357, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[228, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[309, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[101, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[102, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[103, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[104, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[342, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[255, "lucid.nn.functional.linear", false]], "linspace() (in module lucid)": [[442, "lucid.linspace", false]], "log() (in module lucid)": [[459, "lucid.log", false]], "log2() (in module lucid)": [[460, "lucid.log2", false]], "lrscheduler (class in lucid.optim.lr_scheduler)": [[388, "lucid.optim.lr_scheduler.LRScheduler", false]], "lucid": [[16, "module-lucid", false]], "masked_fill() (in module lucid)": [[491, "lucid.masked_fill", false]], "matmul() (in module lucid)": [[427, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[23, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[461, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[278, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[279, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[280, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[428, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[368, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[369, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[370, "lucid.nn.MaxPool3d", false]], "maxvit (class in lucid.models)": [[105, "lucid.models.MaxViT", false]], "maxvit_base() (in module lucid.models)": [[106, "lucid.models.maxvit_base", false]], "maxvit_large() (in module lucid.models)": [[107, "lucid.models.maxvit_large", false]], "maxvit_small() (in module lucid.models)": [[108, "lucid.models.maxvit_small", false]], "maxvit_tiny() (in module lucid.models)": [[109, "lucid.models.maxvit_tiny", false]], "maxvit_xlarge() (in module lucid.models)": [[110, "lucid.models.maxvit_xlarge", false]], "mean() (in module lucid)": [[462, "lucid.mean", false]], "meshgrid() (in module lucid)": [[492, "lucid.meshgrid", false]], "min() (in module lucid)": [[463, "lucid.min", false]], "minimum() (in module lucid)": [[429, "lucid.minimum", false]], "mnist (class in lucid.datasets)": [[8, "lucid.datasets.MNIST", false]], "mobilenet (class in lucid.models)": [[111, "lucid.models.MobileNet", false]], "mobilenet() (in module lucid.models)": [[115, "lucid.models.mobilenet", false]], "mobilenet_v2 (class in lucid.models)": [[112, "lucid.models.MobileNet_V2", false]], "mobilenet_v2() (in module lucid.models)": [[116, "lucid.models.mobilenet_v2", false]], "mobilenet_v3 (class in lucid.models)": [[113, "lucid.models.MobileNet_V3", false]], "mobilenet_v3_large() (in module lucid.models)": [[117, "lucid.models.mobilenet_v3_large", false]], "mobilenet_v3_small() (in module lucid.models)": [[118, "lucid.models.mobilenet_v3_small", false]], "mobilenet_v4 (class in lucid.models)": [[114, "lucid.models.MobileNet_V4", false]], "mobilenet_v4_conv_large() (in module lucid.models)": [[119, "lucid.models.mobilenet_v4_conv_large", false]], "mobilenet_v4_conv_medium() (in module lucid.models)": [[120, "lucid.models.mobilenet_v4_conv_medium", false]], "mobilenet_v4_conv_small() (in module lucid.models)": [[121, "lucid.models.mobilenet_v4_conv_small", false]], "mobilenet_v4_hybrid_large() (in module lucid.models)": [[122, "lucid.models.mobilenet_v4_hybrid_large", false]], "mobilenet_v4_hybrid_medium() (in module lucid.models)": [[123, "lucid.models.mobilenet_v4_hybrid_medium", false]], "module": [[16, "module-lucid", false]], "module (class in lucid.nn)": [[217, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[219, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[220, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[260, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[347, "lucid.nn.MSELoss", false]], "multiheadattention (class in lucid.nn)": [[318, "lucid.nn.MultiHeadAttention", false]], "multiply() (in module lucid)": [[430, "lucid.multiply", false]], "multisteplr (class in lucid.optim.lr_scheduler)": [[390, "lucid.optim.lr_scheduler.MultiStepLR", false]], "nadam (class in lucid.optim)": [[401, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[261, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[348, "lucid.nn.NLLLoss", false]], "no_grad (in module lucid)": [[411, "lucid.no_grad", false]], "nonzero() (in module lucid)": [[493, "lucid.nonzero", false]], "norm() (in module lucid.linalg)": [[24, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[301, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[515, "lucid.transforms.Normalize", false]], "normalize() (in module lucid.nn.functional)": [[267, "lucid.nn.functional.normalize", false]], "numeric (class in lucid.types)": [[407, "lucid.types.Numeric", false]], "ones() (in module lucid)": [[443, "lucid.ones", false]], "ones_like() (in module lucid)": [[444, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[383, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[431, "lucid.outer", false]], "pad() (in module lucid)": [[494, "lucid.pad", false]], "parameter (class in lucid.nn)": [[218, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[221, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[222, "lucid.nn.ParameterList", false]], "permutation() (in module lucid.random)": [[415, "lucid.random.permutation", false]], "pinv() (in module lucid.linalg)": [[25, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[432, "lucid.power", false]], "pvt (class in lucid.models)": [[124, "lucid.models.PVT", false]], "pvt_huge() (in module lucid.models)": [[126, "lucid.models.pvt_huge", false]], "pvt_large() (in module lucid.models)": [[127, "lucid.models.pvt_large", false]], "pvt_medium() (in module lucid.models)": [[128, "lucid.models.pvt_medium", false]], "pvt_small() (in module lucid.models)": [[129, "lucid.models.pvt_small", false]], "pvt_tiny() (in module lucid.models)": [[130, "lucid.models.pvt_tiny", false]], "pvt_v2 (class in lucid.models)": [[125, "lucid.models.PVT_V2", false]], "pvt_v2_b0() (in module lucid.models)": [[131, "lucid.models.pvt_v2_b0", false]], "pvt_v2_b1() (in module lucid.models)": [[132, "lucid.models.pvt_v2_b1", false]], "pvt_v2_b2() (in module lucid.models)": [[133, "lucid.models.pvt_v2_b2", false]], "pvt_v2_b2_li() (in module lucid.models)": [[134, "lucid.models.pvt_v2_b2_li", false]], "pvt_v2_b3() (in module lucid.models)": [[135, "lucid.models.pvt_v2_b3", false]], "pvt_v2_b4() (in module lucid.models)": [[136, "lucid.models.pvt_v2_b4", false]], "pvt_v2_b5() (in module lucid.models)": [[137, "lucid.models.pvt_v2_b5", false]], "qr() (in module lucid.linalg)": [[26, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[402, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[416, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[417, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[418, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[516, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[517, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[518, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[519, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[520, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[495, "lucid.ravel", false]], "rcnn (class in lucid.models)": [[211, "lucid.models.RCNN", false]], "rearrange (class in lucid.nn)": [[337, "lucid.nn.Rearrange", false]], "rearrange() (in module lucid.einops)": [[13, "lucid.einops.rearrange", false]], "reciprocal() (in module lucid)": [[464, "lucid.reciprocal", false]], "reduce() (in module lucid.einops)": [[14, "lucid.einops.reduce", false]], "reducelronplateau (class in lucid.optim.lr_scheduler)": [[391, "lucid.optim.lr_scheduler.ReduceLROnPlateau", false]], "register_model() (in module lucid)": [[412, "lucid.register_model", false]], "relu (class in lucid.nn)": [[310, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[229, "lucid.nn.functional.relu", false]], "relu6 (class in lucid.nn)": [[311, "lucid.nn.ReLU6", false]], "repeat() (in module lucid)": [[496, "lucid.repeat", false]], "repeat() (in module lucid.einops)": [[15, "lucid.einops.repeat", false]], "reshape() (in module lucid)": [[497, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[521, "lucid.transforms.Resize", false]], "resnest (class in lucid.models)": [[138, "lucid.models.ResNeSt", false]], "resnest_101() (in module lucid.models)": [[139, "lucid.models.resnest_101", false]], "resnest_14() (in module lucid.models)": [[140, "lucid.models.resnest_14", false]], "resnest_200() (in module lucid.models)": [[141, "lucid.models.resnest_200", false]], "resnest_26() (in module lucid.models)": [[142, "lucid.models.resnest_26", false]], "resnest_269() (in module lucid.models)": [[143, "lucid.models.resnest_269", false]], "resnest_50() (in module lucid.models)": [[144, "lucid.models.resnest_50", false]], "resnest_50_1s4x24d() (in module lucid.models)": [[145, "lucid.models.resnest_50_1s4x24d", false]], "resnest_50_4s2x40d() (in module lucid.models)": [[146, "lucid.models.resnest_50_4s2x40d", false]], "resnet (class in lucid.models)": [[147, "lucid.models.ResNet", false]], "resnet_1001() (in module lucid.models)": [[148, "lucid.models.resnet_1001", false]], "resnet_101() (in module lucid.models)": [[149, "lucid.models.resnet_101", false]], "resnet_152() (in module lucid.models)": [[150, "lucid.models.resnet_152", false]], "resnet_18() (in module lucid.models)": [[151, "lucid.models.resnet_18", false]], "resnet_200() (in module lucid.models)": [[152, "lucid.models.resnet_200", false]], "resnet_269() (in module lucid.models)": [[153, "lucid.models.resnet_269", false]], "resnet_34() (in module lucid.models)": [[154, "lucid.models.resnet_34", false]], "resnet_50() (in module lucid.models)": [[155, "lucid.models.resnet_50", false]], "resnext (class in lucid.models)": [[158, "lucid.models.ResNeXt", false]], "resnext_101_32x16d() (in module lucid.models)": [[159, "lucid.models.resnext_101_32x16d", false]], "resnext_101_32x32d() (in module lucid.models)": [[160, "lucid.models.resnext_101_32x32d", false]], "resnext_101_32x4d() (in module lucid.models)": [[161, "lucid.models.resnext_101_32x4d", false]], "resnext_101_32x8d() (in module lucid.models)": [[162, "lucid.models.resnext_101_32x8d", false]], "resnext_101_64x4d() (in module lucid.models)": [[163, "lucid.models.resnext_101_64x4d", false]], "resnext_50_32x4d() (in module lucid.models)": [[164, "lucid.models.resnext_50_32x4d", false]], "rmsprop (class in lucid.optim)": [[403, "lucid.optim.RMSprop", false]], "roll() (in module lucid)": [[498, "lucid.roll", false]], "rotate() (in module lucid.nn.functional)": [[287, "lucid.nn.functional.rotate", false]], "round() (in module lucid)": [[465, "lucid.round", false]], "rprop (class in lucid.optim)": [[404, "lucid.optim.Rprop", false]], "scaled_dot_product_attention() (in module lucid.nn.functional)": [[235, "lucid.nn.functional.scaled_dot_product_attention", false]], "scaleddotproductattention (class in lucid.nn)": [[319, "lucid.nn.ScaledDotProductAttention", false]], "se_resnet_101() (in module lucid.models)": [[166, "lucid.models.se_resnet_101", false]], "se_resnet_152() (in module lucid.models)": [[167, "lucid.models.se_resnet_152", false]], "se_resnet_18() (in module lucid.models)": [[168, "lucid.models.se_resnet_18", false]], "se_resnet_34() (in module lucid.models)": [[169, "lucid.models.se_resnet_34", false]], "se_resnet_50() (in module lucid.models)": [[170, "lucid.models.se_resnet_50", false]], "se_resnext_101_32x4d() (in module lucid.models)": [[171, "lucid.models.se_resnext_101_32x4d", false]], "se_resnext_101_32x8d() (in module lucid.models)": [[172, "lucid.models.se_resnext_101_32x8d", false]], "se_resnext_101_64x4d() (in module lucid.models)": [[173, "lucid.models.se_resnext_101_64x4d", false]], "se_resnext_50_32x4d() (in module lucid.models)": [[174, "lucid.models.se_resnext_50_32x4d", false]], "seed() (in module lucid.random)": [[419, "lucid.random.seed", false]], "selectivekernel (class in lucid.nn)": [[295, "lucid.nn.SelectiveKernel", false]], "selu (class in lucid.nn)": [[312, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[230, "lucid.nn.functional.selu", false]], "semodule (class in lucid.nn)": [[294, "lucid.nn.SEModule", false]], "senet (class in lucid.models)": [[165, "lucid.models.SENet", false]], "sequential (class in lucid.nn)": [[223, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[405, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[313, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[231, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[466, "lucid.sign", false]], "sin() (in module lucid)": [[467, "lucid.sin", false]], "sinh() (in module lucid)": [[468, "lucid.sinh", false]], "sk_resnet_18() (in module lucid.models)": [[176, "lucid.models.sk_resnet_18", false]], "sk_resnet_34() (in module lucid.models)": [[177, "lucid.models.sk_resnet_34", false]], "sk_resnet_50() (in module lucid.models)": [[178, "lucid.models.sk_resnet_50", false]], "sk_resnext_50_32x4d() (in module lucid.models)": [[179, "lucid.models.sk_resnext_50_32x4d", false]], "sknet (class in lucid.models)": [[175, "lucid.models.SKNet", false]], "softmax (class in lucid.nn)": [[314, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[232, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[27, "lucid.linalg.solve", false]], "sort() (in module lucid)": [[499, "lucid.sort", false]], "split() (in module lucid)": [[500, "lucid.split", false]], "sqrt() (in module lucid)": [[469, "lucid.sqrt", false]], "square() (in module lucid)": [[470, "lucid.square", false]], "squeeze() (in module lucid)": [[501, "lucid.squeeze", false]], "stack() (in module lucid)": [[502, "lucid.stack", false]], "steplr (class in lucid.optim.lr_scheduler)": [[392, "lucid.optim.lr_scheduler.StepLR", false]], "sub() (in module lucid)": [[433, "lucid.sub", false]], "sum() (in module lucid)": [[471, "lucid.sum", false]], "svd() (in module lucid.linalg)": [[28, "lucid.linalg.svd", false]], "swapaxes() (in module lucid)": [[472, "lucid.swapaxes", false]], "swin_base() (in module lucid.models)": [[182, "lucid.models.swin_base", false]], "swin_large() (in module lucid.models)": [[183, "lucid.models.swin_large", false]], "swin_small() (in module lucid.models)": [[184, "lucid.models.swin_small", false]], "swin_tiny() (in module lucid.models)": [[185, "lucid.models.swin_tiny", false]], "swin_v2_base() (in module lucid.models)": [[186, "lucid.models.swin_v2_base", false]], "swin_v2_giant() (in module lucid.models)": [[187, "lucid.models.swin_v2_giant", false]], "swin_v2_huge() (in module lucid.models)": [[188, "lucid.models.swin_v2_huge", false]], "swin_v2_large() (in module lucid.models)": [[189, "lucid.models.swin_v2_large", false]], "swin_v2_small() (in module lucid.models)": [[190, "lucid.models.swin_v2_small", false]], "swin_v2_tiny() (in module lucid.models)": [[191, "lucid.models.swin_v2_tiny", false]], "swintransformer (class in lucid.models)": [[180, "lucid.models.SwinTransformer", false]], "swintransformer_v2 (class in lucid.models)": [[181, "lucid.models.SwinTransformer_V2", false]], "swish (class in lucid.nn)": [[315, "lucid.nn.Swish", false]], "tan() (in module lucid)": [[473, "lucid.tan", false]], "tanh (class in lucid.nn)": [[316, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[474, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[233, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[422, "lucid.Tensor", false]], "tensor() (in module lucid)": [[478, "lucid.tensor", false]], "tensordot() (in module lucid)": [[434, "lucid.tensordot", false]], "tile() (in module lucid)": [[503, "lucid.tile", false]], "topk() (in module lucid)": [[504, "lucid.topk", false]], "totensor (class in lucid.transforms)": [[513, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[475, "lucid.trace", false]], "transformer (class in lucid.models)": [[213, "lucid.models.Transformer", false]], "transformer (class in lucid.nn)": [[374, "lucid.nn.Transformer", false]], "transformer_base() (in module lucid.models)": [[214, "lucid.models.transformer_base", false]], "transformer_big() (in module lucid.models)": [[215, "lucid.models.transformer_big", false]], "transformerdecoder (class in lucid.nn)": [[375, "lucid.nn.TransformerDecoder", false]], "transformerdecoderlayer (class in lucid.nn)": [[376, "lucid.nn.TransformerDecoderLayer", false]], "transformerencoder (class in lucid.nn)": [[377, "lucid.nn.TransformerEncoder", false]], "transformerencoderlayer (class in lucid.nn)": [[378, "lucid.nn.TransformerEncoderLayer", false]], "transpose() (in module lucid)": [[476, "lucid.transpose", false]], "tril() (in module lucid)": [[505, "lucid.tril", false]], "triu() (in module lucid)": [[506, "lucid.triu", false]], "unbind() (in module lucid)": [[507, "lucid.unbind", false]], "unfold (class in lucid.nn)": [[327, "lucid.nn.Unfold", false]], "unfold() (in module lucid.nn.functional)": [[243, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[302, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[420, "lucid.random.uniform", false]], "unique() (in module lucid)": [[508, "lucid.unique", false]], "unsqueeze() (in module lucid)": [[509, "lucid.unsqueeze", false]], "upsample (class in lucid.nn)": [[380, "lucid.nn.Upsample", false]], "var() (in module lucid)": [[477, "lucid.var", false]], "vggnet (class in lucid.models)": [[192, "lucid.models.VGGNet", false]], "vggnet_11() (in module lucid.models)": [[193, "lucid.models.vggnet_11", false]], "vggnet_13() (in module lucid.models)": [[194, "lucid.models.vggnet_13", false]], "vggnet_16() (in module lucid.models)": [[195, "lucid.models.vggnet_16", false]], "vggnet_19() (in module lucid.models)": [[196, "lucid.models.vggnet_19", false]], "vit (class in lucid.models)": [[197, "lucid.models.ViT", false]], "vit_base() (in module lucid.models)": [[198, "lucid.models.vit_base", false]], "vit_huge() (in module lucid.models)": [[199, "lucid.models.vit_huge", false]], "vit_large() (in module lucid.models)": [[200, "lucid.models.vit_large", false]], "vit_small() (in module lucid.models)": [[201, "lucid.models.vit_small", false]], "vit_tiny() (in module lucid.models)": [[202, "lucid.models.vit_tiny", false]], "vstack() (in module lucid)": [[510, "lucid.vstack", false]], "where() (in module lucid)": [[511, "lucid.where", false]], "wide_resnet_101() (in module lucid.models)": [[156, "lucid.models.wide_resnet_101", false]], "wide_resnet_50() (in module lucid.models)": [[157, "lucid.models.wide_resnet_50", false]], "xavier_normal() (in module lucid.nn.init)": [[303, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[304, "lucid.nn.init.xavier_uniform", false]], "xception (class in lucid.models)": [[203, "lucid.models.Xception", false]], "xception() (in module lucid.models)": [[204, "lucid.models.xception", false]], "zeros() (in module lucid)": [[445, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[446, "lucid.zeros_like", false]], "zfnet (class in lucid.models)": [[205, "lucid.models.ZFNet", false]], "zfnet() (in module lucid.models)": [[206, "lucid.models.zfnet", false]]}, "objects": {"": [[16, 0, 0, "-", "lucid"]], "lucid": [[422, 1, 1, "", "Tensor"], [448, 2, 1, "", "abs"], [423, 2, 1, "", "add"], [435, 2, 1, "", "arange"], [449, 2, 1, "", "arccos"], [450, 2, 1, "", "arcsin"], [451, 2, 1, "", "arctan"], [479, 2, 1, "", "argmax"], [480, 2, 1, "", "argmin"], [481, 2, 1, "", "argsort"], [482, 2, 1, "", "broadcast_to"], [452, 2, 1, "", "ceil"], [483, 2, 1, "", "chunk"], [453, 2, 1, "", "clip"], [484, 2, 1, "", "concatenate"], [454, 2, 1, "", "cos"], [455, 2, 1, "", "cosh"], [408, 2, 1, "", "count_flops"], [456, 2, 1, "", "cube"], [436, 2, 1, "", "diag"], [424, 2, 1, "", "div"], [425, 2, 1, "", "dot"], [437, 2, 1, "", "empty"], [438, 2, 1, "", "empty_like"], [457, 2, 1, "", "exp"], [439, 2, 1, "", "eye"], [485, 2, 1, "", "flatten"], [458, 2, 1, "", "floor"], [440, 2, 1, "", "full"], [441, 2, 1, "", "full_like"], [409, 2, 1, "", "grad_enabled"], [486, 2, 1, "", "histogram"], [487, 2, 1, "", "histogram2d"], [488, 2, 1, "", "histogramdd"], [489, 2, 1, "", "hstack"], [426, 2, 1, "", "inner"], [442, 2, 1, "", "linspace"], [459, 2, 1, "", "log"], [460, 2, 1, "", "log2"], [491, 2, 1, "", "masked_fill"], [427, 2, 1, "", "matmul"], [461, 2, 1, "", "max"], [428, 2, 1, "", "maximum"], [462, 2, 1, "", "mean"], [492, 2, 1, "", "meshgrid"], [463, 2, 1, "", "min"], [429, 2, 1, "", "minimum"], [430, 2, 1, "", "multiply"], [411, 3, 1, "", "no_grad"], [493, 2, 1, "", "nonzero"], [443, 2, 1, "", "ones"], [444, 2, 1, "", "ones_like"], [431, 2, 1, "", "outer"], [494, 2, 1, "", "pad"], [432, 2, 1, "", "power"], [495, 2, 1, "", "ravel"], [464, 2, 1, "", "reciprocal"], [412, 2, 1, "", "register_model"], [496, 2, 1, "", "repeat"], [497, 2, 1, "", "reshape"], [498, 2, 1, "", "roll"], [465, 2, 1, "", "round"], [466, 2, 1, "", "sign"], [467, 2, 1, "", "sin"], [468, 2, 1, "", "sinh"], [499, 2, 1, "", "sort"], [500, 2, 1, "", "split"], [469, 2, 1, "", "sqrt"], [470, 2, 1, "", "square"], [501, 2, 1, "", "squeeze"], [502, 2, 1, "", "stack"], [433, 2, 1, "", "sub"], [471, 2, 1, "", "sum"], [472, 2, 1, "", "swapaxes"], [473, 2, 1, "", "tan"], [474, 2, 1, "", "tanh"], [478, 2, 1, "", "tensor"], [434, 2, 1, "", "tensordot"], [503, 2, 1, "", "tile"], [504, 2, 1, "", "topk"], [475, 2, 1, "", "trace"], [476, 2, 1, "", "transpose"], [505, 2, 1, "", "tril"], [506, 2, 1, "", "triu"], [507, 2, 1, "", "unbind"], [508, 2, 1, "", "unique"], [509, 2, 1, "", "unsqueeze"], [477, 2, 1, "", "var"], [510, 2, 1, "", "vstack"], [511, 2, 1, "", "where"], [445, 2, 1, "", "zeros"], [446, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "CIFAR10"], [6, 1, 1, "", "CIFAR100"], [7, 1, 1, "", "FashionMNIST"], [8, 1, 1, "", "MNIST"]], "lucid.einops": [[11, 2, 1, "", "einsum"], [13, 2, 1, "", "rearrange"], [14, 2, 1, "", "reduce"], [15, 2, 1, "", "repeat"]], "lucid.linalg": [[18, 2, 1, "", "cholesky"], [19, 2, 1, "", "det"], [20, 2, 1, "", "eig"], [22, 2, 1, "", "inv"], [23, 2, 1, "", "matrix_power"], [24, 2, 1, "", "norm"], [25, 2, 1, "", "pinv"], [26, 2, 1, "", "qr"], [27, 2, 1, "", "solve"], [28, 2, 1, "", "svd"]], "lucid.models": [[29, 1, 1, "", "AlexNet"], [31, 1, 1, "", "CoAtNet"], [40, 1, 1, "", "ConvNeXt"], [41, 1, 1, "", "ConvNeXt_V2"], [55, 1, 1, "", "CrossViT"], [65, 1, 1, "", "CvT"], [69, 1, 1, "", "DenseNet"], [74, 1, 1, "", "EfficientNet"], [75, 1, 1, "", "EfficientNet_V2"], [209, 1, 1, "", "FastRCNN"], [210, 1, 1, "", "FasterRCNN"], [88, 1, 1, "", "Inception"], [92, 1, 1, "", "InceptionNeXt"], [97, 1, 1, "", "InceptionResNet"], [101, 1, 1, "", "LeNet"], [105, 1, 1, "", "MaxViT"], [111, 1, 1, "", "MobileNet"], [112, 1, 1, "", "MobileNet_V2"], [113, 1, 1, "", "MobileNet_V3"], [114, 1, 1, "", "MobileNet_V4"], [124, 1, 1, "", "PVT"], [125, 1, 1, "", "PVT_V2"], [211, 1, 1, "", "RCNN"], [138, 1, 1, "", "ResNeSt"], [158, 1, 1, "", "ResNeXt"], [147, 1, 1, "", "ResNet"], [165, 1, 1, "", "SENet"], [175, 1, 1, "", "SKNet"], [180, 1, 1, "", "SwinTransformer"], [181, 1, 1, "", "SwinTransformer_V2"], [213, 1, 1, "", "Transformer"], [192, 1, 1, "", "VGGNet"], [197, 1, 1, "", "ViT"], [203, 1, 1, "", "Xception"], [205, 1, 1, "", "ZFNet"], [30, 2, 1, "", "alexnet"], [32, 2, 1, "", "coatnet_0"], [33, 2, 1, "", "coatnet_1"], [34, 2, 1, "", "coatnet_2"], [35, 2, 1, "", "coatnet_3"], [36, 2, 1, "", "coatnet_4"], [37, 2, 1, "", "coatnet_5"], [38, 2, 1, "", "coatnet_6"], [39, 2, 1, "", "coatnet_7"], [42, 2, 1, "", "convnext_base"], [43, 2, 1, "", "convnext_large"], [44, 2, 1, "", "convnext_small"], [45, 2, 1, "", "convnext_tiny"], [46, 2, 1, "", "convnext_v2_atto"], [47, 2, 1, "", "convnext_v2_base"], [48, 2, 1, "", "convnext_v2_femto"], [49, 2, 1, "", "convnext_v2_huge"], [50, 2, 1, "", "convnext_v2_large"], [51, 2, 1, "", "convnext_v2_nano"], [52, 2, 1, "", "convnext_v2_pico"], [53, 2, 1, "", "convnext_v2_tiny"], [54, 2, 1, "", "convnext_xlarge"], [56, 2, 1, "", "crossvit_15"], [57, 2, 1, "", "crossvit_15_dagger"], [58, 2, 1, "", "crossvit_18"], [59, 2, 1, "", "crossvit_18_dagger"], [60, 2, 1, "", "crossvit_9"], [61, 2, 1, "", "crossvit_9_dagger"], [62, 2, 1, "", "crossvit_base"], [63, 2, 1, "", "crossvit_small"], [64, 2, 1, "", "crossvit_tiny"], [66, 2, 1, "", "cvt_13"], [67, 2, 1, "", "cvt_21"], [68, 2, 1, "", "cvt_w24"], [70, 2, 1, "", "densenet_121"], [71, 2, 1, "", "densenet_169"], [72, 2, 1, "", "densenet_201"], [73, 2, 1, "", "densenet_264"], [76, 2, 1, "", "efficientnet_b0"], [77, 2, 1, "", "efficientnet_b1"], [78, 2, 1, "", "efficientnet_b2"], [79, 2, 1, "", "efficientnet_b3"], [80, 2, 1, "", "efficientnet_b4"], [81, 2, 1, "", "efficientnet_b5"], [82, 2, 1, "", "efficientnet_b6"], [83, 2, 1, "", "efficientnet_b7"], [84, 2, 1, "", "efficientnet_v2_l"], [85, 2, 1, "", "efficientnet_v2_m"], [86, 2, 1, "", "efficientnet_v2_s"], [87, 2, 1, "", "efficientnet_v2_xl"], [93, 2, 1, "", "inception_next_atto"], [94, 2, 1, "", "inception_next_base"], [95, 2, 1, "", "inception_next_small"], [96, 2, 1, "", "inception_next_tiny"], [98, 2, 1, "", "inception_resnet_v1"], [99, 2, 1, "", "inception_resnet_v2"], [89, 2, 1, "", "inception_v1"], [90, 2, 1, "", "inception_v3"], [91, 2, 1, "", "inception_v4"], [102, 2, 1, "", "lenet_1"], [103, 2, 1, "", "lenet_4"], [104, 2, 1, "", "lenet_5"], [106, 2, 1, "", "maxvit_base"], [107, 2, 1, "", "maxvit_large"], [108, 2, 1, "", "maxvit_small"], [109, 2, 1, "", "maxvit_tiny"], [110, 2, 1, "", "maxvit_xlarge"], [115, 2, 1, "", "mobilenet"], [116, 2, 1, "", "mobilenet_v2"], [117, 2, 1, "", "mobilenet_v3_large"], [118, 2, 1, "", "mobilenet_v3_small"], [119, 2, 1, "", "mobilenet_v4_conv_large"], [120, 2, 1, "", "mobilenet_v4_conv_medium"], [121, 2, 1, "", "mobilenet_v4_conv_small"], [122, 2, 1, "", "mobilenet_v4_hybrid_large"], [123, 2, 1, "", "mobilenet_v4_hybrid_medium"], [126, 2, 1, "", "pvt_huge"], [127, 2, 1, "", "pvt_large"], [128, 2, 1, "", "pvt_medium"], [129, 2, 1, "", "pvt_small"], [130, 2, 1, "", "pvt_tiny"], [131, 2, 1, "", "pvt_v2_b0"], [132, 2, 1, "", "pvt_v2_b1"], [133, 2, 1, "", "pvt_v2_b2"], [134, 2, 1, "", "pvt_v2_b2_li"], [135, 2, 1, "", "pvt_v2_b3"], [136, 2, 1, "", "pvt_v2_b4"], [137, 2, 1, "", "pvt_v2_b5"], [139, 2, 1, "", "resnest_101"], [140, 2, 1, "", "resnest_14"], [141, 2, 1, "", "resnest_200"], [142, 2, 1, "", "resnest_26"], [143, 2, 1, "", "resnest_269"], [144, 2, 1, "", "resnest_50"], [145, 2, 1, "", "resnest_50_1s4x24d"], [146, 2, 1, "", "resnest_50_4s2x40d"], [148, 2, 1, "", "resnet_1001"], [149, 2, 1, "", "resnet_101"], [150, 2, 1, "", "resnet_152"], [151, 2, 1, "", "resnet_18"], [152, 2, 1, "", "resnet_200"], [153, 2, 1, "", "resnet_269"], [154, 2, 1, "", "resnet_34"], [155, 2, 1, "", "resnet_50"], [159, 2, 1, "", "resnext_101_32x16d"], [160, 2, 1, "", "resnext_101_32x32d"], [161, 2, 1, "", "resnext_101_32x4d"], [162, 2, 1, "", "resnext_101_32x8d"], [163, 2, 1, "", "resnext_101_64x4d"], [164, 2, 1, "", "resnext_50_32x4d"], [166, 2, 1, "", "se_resnet_101"], [167, 2, 1, "", "se_resnet_152"], [168, 2, 1, "", "se_resnet_18"], [169, 2, 1, "", "se_resnet_34"], [170, 2, 1, "", "se_resnet_50"], [171, 2, 1, "", "se_resnext_101_32x4d"], [172, 2, 1, "", "se_resnext_101_32x8d"], [173, 2, 1, "", "se_resnext_101_64x4d"], [174, 2, 1, "", "se_resnext_50_32x4d"], [176, 2, 1, "", "sk_resnet_18"], [177, 2, 1, "", "sk_resnet_34"], [178, 2, 1, "", "sk_resnet_50"], [179, 2, 1, "", "sk_resnext_50_32x4d"], [182, 2, 1, "", "swin_base"], [183, 2, 1, "", "swin_large"], [184, 2, 1, "", "swin_small"], [185, 2, 1, "", "swin_tiny"], [186, 2, 1, "", "swin_v2_base"], [187, 2, 1, "", "swin_v2_giant"], [188, 2, 1, "", "swin_v2_huge"], [189, 2, 1, "", "swin_v2_large"], [190, 2, 1, "", "swin_v2_small"], [191, 2, 1, "", "swin_v2_tiny"], [214, 2, 1, "", "transformer_base"], [215, 2, 1, "", "transformer_big"], [193, 2, 1, "", "vggnet_11"], [194, 2, 1, "", "vggnet_13"], [195, 2, 1, "", "vggnet_16"], [196, 2, 1, "", "vggnet_19"], [198, 2, 1, "", "vit_base"], [199, 2, 1, "", "vit_huge"], [200, 2, 1, "", "vit_large"], [201, 2, 1, "", "vit_small"], [202, 2, 1, "", "vit_tiny"], [156, 2, 1, "", "wide_resnet_101"], [157, 2, 1, "", "wide_resnet_50"], [204, 2, 1, "", "xception"], [206, 2, 1, "", "zfnet"]], "lucid.nn": [[359, 1, 1, "", "AdaptiveAvgPool1d"], [360, 1, 1, "", "AdaptiveAvgPool2d"], [361, 1, 1, "", "AdaptiveAvgPool3d"], [362, 1, 1, "", "AdaptiveMaxPool1d"], [363, 1, 1, "", "AdaptiveMaxPool2d"], [364, 1, 1, "", "AdaptiveMaxPool3d"], [329, 1, 1, "", "AlphaDropout"], [365, 1, 1, "", "AvgPool1d"], [366, 1, 1, "", "AvgPool2d"], [367, 1, 1, "", "AvgPool3d"], [344, 1, 1, "", "BCELoss"], [350, 1, 1, "", "BatchNorm1d"], [351, 1, 1, "", "BatchNorm2d"], [352, 1, 1, "", "BatchNorm3d"], [340, 1, 1, "", "Bilinear"], [216, 1, 1, "", "Buffer"], [321, 1, 1, "", "Conv1d"], [322, 1, 1, "", "Conv2d"], [323, 1, 1, "", "Conv3d"], [288, 1, 1, "", "ConvBNReLU1d"], [289, 1, 1, "", "ConvBNReLU2d"], [290, 1, 1, "", "ConvBNReLU3d"], [324, 1, 1, "", "ConvTranspose1d"], [325, 1, 1, "", "ConvTranspose2d"], [326, 1, 1, "", "ConvTranspose3d"], [345, 1, 1, "", "CrossEntropyLoss"], [291, 1, 1, "", "DepthSeparableConv1d"], [292, 1, 1, "", "DepthSeparableConv2d"], [293, 1, 1, "", "DepthSeparableConv3d"], [330, 1, 1, "", "DropBlock"], [331, 1, 1, "", "DropPath"], [332, 1, 1, "", "Dropout"], [333, 1, 1, "", "Dropout1d"], [334, 1, 1, "", "Dropout2d"], [335, 1, 1, "", "Dropout3d"], [305, 1, 1, "", "ELU"], [372, 1, 1, "", "Embedding"], [306, 1, 1, "", "GELU"], [353, 1, 1, "", "GlobalResponseNorm"], [307, 1, 1, "", "HardSigmoid"], [308, 1, 1, "", "HardSwish"], [346, 1, 1, "", "HuberLoss"], [341, 1, 1, "", "Identity"], [354, 1, 1, "", "InstanceNorm1d"], [355, 1, 1, "", "InstanceNorm2d"], [356, 1, 1, "", "InstanceNorm3d"], [357, 1, 1, "", "LayerNorm"], [309, 1, 1, "", "LeakyReLU"], [342, 1, 1, "", "Linear"], [347, 1, 1, "", "MSELoss"], [368, 1, 1, "", "MaxPool1d"], [369, 1, 1, "", "MaxPool2d"], [370, 1, 1, "", "MaxPool3d"], [217, 1, 1, "", "Module"], [219, 1, 1, "", "ModuleDict"], [220, 1, 1, "", "ModuleList"], [318, 1, 1, "", "MultiHeadAttention"], [348, 1, 1, "", "NLLLoss"], [218, 1, 1, "", "Parameter"], [221, 1, 1, "", "ParameterDict"], [222, 1, 1, "", "ParameterList"], [310, 1, 1, "", "ReLU"], [311, 1, 1, "", "ReLU6"], [337, 1, 1, "", "Rearrange"], [312, 1, 1, "", "SELU"], [294, 1, 1, "", "SEModule"], [319, 1, 1, "", "ScaledDotProductAttention"], [295, 1, 1, "", "SelectiveKernel"], [223, 1, 1, "", "Sequential"], [313, 1, 1, "", "Sigmoid"], [314, 1, 1, "", "Softmax"], [315, 1, 1, "", "Swish"], [316, 1, 1, "", "Tanh"], [374, 1, 1, "", "Transformer"], [375, 1, 1, "", "TransformerDecoder"], [376, 1, 1, "", "TransformerDecoderLayer"], [377, 1, 1, "", "TransformerEncoder"], [378, 1, 1, "", "TransformerEncoderLayer"], [327, 1, 1, "", "Unfold"], [380, 1, 1, "", "Upsample"]], "lucid.nn.functional": [[268, 2, 1, "", "adaptive_avg_pool1d"], [269, 2, 1, "", "adaptive_avg_pool2d"], [270, 2, 1, "", "adaptive_avg_pool3d"], [271, 2, 1, "", "adaptive_max_pool1d"], [272, 2, 1, "", "adaptive_max_pool2d"], [273, 2, 1, "", "adaptive_max_pool3d"], [281, 2, 1, "", "affine_grid"], [244, 2, 1, "", "alpha_dropout"], [274, 2, 1, "", "avg_pool1d"], [275, 2, 1, "", "avg_pool2d"], [276, 2, 1, "", "avg_pool3d"], [262, 2, 1, "", "batch_norm"], [253, 2, 1, "", "bilinear"], [256, 2, 1, "", "binary_cross_entropy"], [236, 2, 1, "", "conv1d"], [237, 2, 1, "", "conv2d"], [238, 2, 1, "", "conv3d"], [239, 2, 1, "", "conv_transpose1d"], [240, 2, 1, "", "conv_transpose2d"], [241, 2, 1, "", "conv_transpose3d"], [257, 2, 1, "", "cross_entropy"], [245, 2, 1, "", "drop_block"], [246, 2, 1, "", "drop_path"], [247, 2, 1, "", "dropout"], [248, 2, 1, "", "dropout1d"], [249, 2, 1, "", "dropout2d"], [250, 2, 1, "", "dropout3d"], [225, 2, 1, "", "elu"], [284, 2, 1, "", "embedding"], [226, 2, 1, "", "gelu"], [263, 2, 1, "", "global_response_norm"], [282, 2, 1, "", "grid_sample"], [258, 2, 1, "", "huber_loss"], [265, 2, 1, "", "instance_norm"], [286, 2, 1, "", "interpolate"], [266, 2, 1, "", "layer_norm"], [228, 2, 1, "", "leaky_relu"], [255, 2, 1, "", "linear"], [278, 2, 1, "", "max_pool1d"], [279, 2, 1, "", "max_pool2d"], [280, 2, 1, "", "max_pool3d"], [260, 2, 1, "", "mse_loss"], [261, 2, 1, "", "nll_loss"], [267, 2, 1, "", "normalize"], [229, 2, 1, "", "relu"], [287, 2, 1, "", "rotate"], [235, 2, 1, "", "scaled_dot_product_attention"], [230, 2, 1, "", "selu"], [231, 2, 1, "", "sigmoid"], [232, 2, 1, "", "softmax"], [233, 2, 1, "", "tanh"], [243, 2, 1, "", "unfold"]], "lucid.nn.init": [[297, 2, 1, "", "constant"], [299, 2, 1, "", "kaiming_normal"], [300, 2, 1, "", "kaiming_uniform"], [301, 2, 1, "", "normal"], [302, 2, 1, "", "uniform"], [303, 2, 1, "", "xavier_normal"], [304, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[395, 1, 1, "", "ASGD"], [396, 1, 1, "", "Adadelta"], [397, 1, 1, "", "Adagrad"], [398, 1, 1, "", "Adam"], [399, 1, 1, "", "AdamW"], [400, 1, 1, "", "Adamax"], [401, 1, 1, "", "NAdam"], [383, 1, 1, "", "Optimizer"], [402, 1, 1, "", "RAdam"], [403, 1, 1, "", "RMSprop"], [404, 1, 1, "", "Rprop"], [405, 1, 1, "", "SGD"]], "lucid.optim.lr_scheduler": [[385, 1, 1, "", "CosineAnnealingLR"], [386, 1, 1, "", "CyclicLR"], [387, 1, 1, "", "ExponentialLR"], [388, 1, 1, "", "LRScheduler"], [389, 1, 1, "", "LambdaLR"], [390, 1, 1, "", "MultiStepLR"], [391, 1, 1, "", "ReduceLROnPlateau"], [392, 1, 1, "", "StepLR"]], "lucid.random": [[413, 2, 1, "", "bernoulli"], [415, 2, 1, "", "permutation"], [416, 2, 1, "", "rand"], [417, 2, 1, "", "randint"], [418, 2, 1, "", "randn"], [419, 2, 1, "", "seed"], [420, 2, 1, "", "uniform"]], "lucid.transforms": [[514, 1, 1, "", "CenterCrop"], [512, 1, 1, "", "Compose"], [515, 1, 1, "", "Normalize"], [516, 1, 1, "", "RandomCrop"], [517, 1, 1, "", "RandomGrayscale"], [518, 1, 1, "", "RandomHorizontalFlip"], [519, 1, 1, "", "RandomRotation"], [520, 1, 1, "", "RandomVerticalFlip"], [521, 1, 1, "", "Resize"], [513, 1, 1, "", "ToTensor"]], "lucid.types": [[407, 1, 1, "", "Numeric"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function", "3": "py:attribute"}, "terms": {"": [3, 16, 17, 23, 25, 28, 55, 86, 100, 105, 117, 118, 123, 127, 139, 140, 141, 142, 143, 144, 197, 201, 210, 211, 213, 216, 217, 218, 219, 221, 222, 223, 235, 268, 269, 270, 295, 319, 327, 345, 348, 359, 360, 361, 365, 368, 369, 374, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 407, 410, 412, 422, 427, 436, 462, 471, 472, 475, 477, 478, 498, 501, 513, 515, 523], "0": [0, 1, 3, 4, 5, 6, 7, 8, 11, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 32, 40, 41, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 74, 75, 84, 85, 86, 87, 90, 92, 97, 100, 101, 105, 115, 124, 125, 126, 127, 128, 129, 130, 165, 180, 181, 197, 209, 210, 211, 213, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 365, 366, 367, 368, 369, 370, 372, 374, 375, 376, 377, 378, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 493, 494, 495, 496, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 521, 523], "000": [5, 6, 7, 8, 100, 132, 187, 214, 215, 437, 438], "0000": [345, 346, 348], "0001": [391, 395], "000e": [437, 438], "001": [386, 395, 398, 399, 401, 402, 405], "002": [400, 401], "003": [100, 129], "004": 401, "005": 309, "006": 386, "008": [57, 100, 115], "00808": 100, "009": [100, 132], "00b": 100, "01": [16, 228, 309, 383, 385, 394, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405], "01051757": 418, "011": [38, 100], "013": [72, 100], "014": [64, 100], "016": [100, 148], "01697": 100, "01b": 100, "0205": 345, "0217": 345, "0227": 345, "024": [100, 110, 121, 170], "025": [62, 100], "026": [100, 159], "028": [100, 164], "0299": 345, "02b": 100, "032": [84, 100, 155], "03545": 100, "03b": 100, "044715": [226, 306], "0450": 345, "0451": 345, "046": [82, 100], "047": [100, 194], "04719755": 449, "0474259": 231, "048": [100, 129, 172], "0480": 345, "04861": 100, "04b": 100, "05": [262, 265, 266, 288, 289, 290, 309, 350, 351, 352, 354, 355, 356, 357, 374, 376, 378], "050": [100, 201], "0507": [230, 312], "05m": 100, "06": [40, 92, 263, 353, 396, 404], "066": [52, 100], "069": [100, 142, 153], "06m": 100, "07": [245, 256, 257, 330, 344, 345], "070": [100, 123], "0700": 345, "0706508": 316, "071": [100, 148], "072": [100, 136], "0721": 345, "073": [100, 178], "07722396": 315, "0794": 348, "08": [391, 398, 399, 400, 401, 402, 403], "0802": 348, "081": [100, 109], "083": [96, 100], "08333333": 25, "085537": 457, "088": [100, 170], "08955": 100, "08b": 100, "08m": 100, "0900": [314, 345], "096": [34, 100, 204], "0986": [232, 314], "09861229": 459, "09883": 100, "0992": 345, "09b": 100, "1": [0, 1, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 165, 171, 172, 173, 174, 175, 179, 180, 181, 192, 197, 203, 205, 209, 210, 211, 213, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 374, 375, 376, 377, 378, 380, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 411, 413, 415, 416, 417, 418, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 441, 442, 443, 444, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 482, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523], "10": [0, 1, 2, 3, 5, 6, 7, 16, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 69, 100, 101, 102, 103, 104, 105, 126, 139, 140, 141, 142, 143, 144, 145, 146, 192, 205, 206, 219, 220, 223, 237, 238, 253, 255, 268, 318, 321, 322, 323, 334, 335, 340, 342, 351, 352, 355, 359, 366, 367, 369, 374, 375, 376, 377, 378, 384, 387, 389, 390, 391, 397, 412, 417, 420, 421, 424, 427, 430, 431, 442, 451, 465, 471, 481, 486, 487, 504, 511, 514, 516, 517, 519], "100": [6, 16, 30, 55, 84, 85, 86, 87, 100, 193, 194, 195, 196, 385, 412, 523], "1000": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206], "1000000": 395, "1001": [100, 148, 345], "1003": 345, "1007": 100, "10096": 100, "101": [100, 138, 139, 149, 156, 159, 160, 161, 162, 163, 166, 171, 172, 173], "10106": 100, "1014": 230, "102": [100, 153], "1024": [16, 34, 39, 68, 209, 215, 337], "1025": [220, 223], "1026": [220, 223], "1027": [220, 223], "10499": 231, "105": [62, 100], "1050": 313, "1054": 348, "1056": [220, 223], "10590": 100, "106": [100, 190], "107": [39, 100], "108": [85, 100], "1097": 100, "11": [11, 100, 123, 151, 168, 192, 193, 253, 321, 322, 323, 334, 340, 351, 352, 355, 366, 367, 369, 427, 514, 515, 516, 517, 519], "110": [100, 143], "1105": 100, "1109": 100, "111": [78, 100], "1111": 344, "112": [100, 117, 144, 211], "1134": 253, "114b": 517, "119": [100, 253], "1192": [231, 232, 314], "12": [20, 25, 36, 37, 55, 62, 68, 69, 70, 71, 72, 73, 79, 100, 102, 103, 126, 130, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 197, 214, 215, 221, 253, 267, 270, 321, 322, 323, 334, 335, 340, 351, 352, 355, 361, 366, 367, 369, 427, 431, 432, 514, 516, 517, 519], "120": [84, 100, 101, 104, 117, 118], "12000": [214, 215], "121": [69, 70, 100], "12122": 100, "123": [299, 300, 301, 302, 303, 304, 419, 420], "124": [37, 100, 299, 300, 303, 304], "125": 367, "1250": 346, "1251": 100, "1258": 100, "126": [100, 156], "128": [16, 31, 34, 40, 45, 60, 61, 82, 98, 100, 105, 109, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 147, 156, 157, 182, 192, 210, 223, 295, 512, 523], "1280": [37, 113], "128x128": [512, 523], "12b": 100, "13": [66, 89, 100, 192, 194, 253, 321, 322, 323, 340, 352, 366, 367, 369, 427, 514, 516, 517, 519], "1314": 100, "132": [100, 193], "1324": 100, "133": [100, 194], "136": [86, 100, 123], "138": [100, 195], "13b": 100, "13k": 100, "14": [33, 34, 35, 71, 100, 106, 107, 110, 132, 140, 321, 322, 323, 334, 335, 340, 352, 366, 367, 369, 427, 431, 440, 465, 514, 516, 517, 519], "14030": 100, "1409": 100, "1415": 465, "143": [100, 196], "144": 118, "1440": 208, "1448": 208, "145": 253, "148": [44, 100], "14899": 100, "149": [71, 100, 148], "14b": 100, "15": [0, 11, 51, 56, 57, 100, 253, 321, 322, 323, 340, 352, 366, 367, 369, 427, 431, 475, 514, 516, 517, 519, 523], "1513": 348, "152": [100, 122, 150, 167], "1536": [35, 36, 38, 110], "155": 427, "1556": 100, "156": [93, 100], "157": [35, 100], "1588": [226, 306], "15b": 100, "15m": 100, "16": [55, 67, 68, 69, 70, 100, 101, 104, 113, 117, 118, 124, 159, 165, 182, 186, 192, 195, 197, 198, 199, 200, 201, 202, 209, 210, 211, 220, 221, 223, 235, 269, 270, 288, 289, 290, 294, 295, 318, 319, 321, 322, 323, 325, 326, 334, 335, 337, 340, 351, 352, 360, 361, 366, 367, 369, 374, 375, 376, 377, 378, 382, 427, 431, 469, 514, 516, 517, 519], "160": [100, 117, 131, 149], "16227766": 26, "16425": 348, "1643": 344, "166": 427, "167": [100, 308], "169": [69, 71, 100], "16b": 100, "16x16": 100, "17": [100, 142, 321, 322, 323, 340, 352, 367, 426, 514, 516, 517, 519], "170": 253, "1704": 100, "171": [100, 107], "174": [32, 100], "17520119": 468, "177": [100, 161], "17b": 100, "18": [58, 59, 100, 103, 128, 135, 151, 168, 176, 182, 183, 184, 186, 187, 188, 189, 190, 321, 322, 323, 334, 340, 352, 367, 430, 431, 514, 516, 517, 519], "1800": 345, "182": 100, "184": 117, "187": [100, 107], "18877099": 315, "189": 100, "19": [11, 66, 80, 100, 192, 196, 237, 238, 253, 322, 323, 352, 425, 427, 434], "192": [32, 33, 35, 36, 38, 40, 41, 55, 56, 57, 63, 64, 66, 67, 68, 92, 100, 102, 103, 106, 107, 108, 110, 130, 150, 183], "194": [100, 159], "196": [54, 68, 100, 183, 189], "1966": [232, 313, 314], "197": [43, 50, 100], "198": [100, 117], "199": [100, 199], "1998": [100, 345], "19b": 100, "1_53": 100, "1d": [236, 239, 268, 271, 274, 278, 288, 291, 327, 350, 354, 359, 362, 416, 420, 427, 436, 475, 486, 487, 492, 494, 495, 496, 503, 508], "1e": [20, 25, 40, 92, 131, 132, 133, 135, 136, 137, 245, 256, 257, 262, 263, 265, 266, 267, 288, 289, 290, 330, 344, 345, 350, 351, 352, 353, 354, 355, 356, 357, 374, 376, 378, 391, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405], "1e6": 395, "1s4x24d": 145, "1st": [29, 205], "2": [1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 55, 57, 59, 61, 66, 68, 74, 75, 84, 85, 86, 87, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 117, 118, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 151, 168, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 205, 208, 209, 210, 211, 216, 217, 218, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 319, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 337, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 372, 380, 382, 385, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 413, 415, 416, 417, 418, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523], "20": [0, 5, 6, 7, 8, 68, 72, 100, 219, 220, 223, 322, 323, 334, 352, 375, 376, 384, 388, 390, 392, 431, 457, 511], "200": [100, 117, 141, 152], "2004": 100, "201": [72, 100, 141], "2011": 294, "2012": 100, "2014": [100, 208], "2015": [100, 208], "2016": 100, "2017": [100, 208, 212, 374], "2018": [100, 294], "2019": 100, "2020": 100, "2021": 100, "2022": 100, "2023": [100, 294], "2024": 100, "2039": 348, "204": 323, "2048": [37, 38, 39, 210, 213, 374, 376, 378], "209": [57, 100], "20b": 100, "21": [67, 86, 100, 154, 169, 221, 253, 322, 323, 352, 431], "210": [87, 100], "2102": 100, "2103": 100, "211": 427, "2111": 100, "213": [212, 215], "21841": [49, 54], "21m": 100, "22": [11, 98, 100, 134, 201, 204, 253, 322, 323, 334, 352, 425, 427], "2201": 100, "2204": 100, "221": [87, 100], "2231": [345, 348], "224": [29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 100, 105, 106, 107, 108, 109, 110, 115, 116, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 157, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 197, 198, 199, 200, 201, 202, 205, 211], "2247": [350, 351, 352, 354, 355, 356, 357], "224x224": [74, 89, 171, 172, 173, 174, 179, 211], "226": 427, "22752314": 418, "2278": 100, "22b": 100, "23": [100, 129, 139, 149, 156, 159, 160, 161, 162, 163, 166, 322, 323, 352, 465], "2301": 100, "232": [62, 100, 115, 173], "2324": [100, 312], "233": [48, 100], "234": [299, 300, 301, 302, 303, 304, 420], "2345": 465, "235": [79, 100], "237": [212, 215], "238": [100, 118, 135], "23840584": 315, "23b": 100, "24": [69, 70, 113, 117, 118, 141, 145, 152, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 253, 269, 322, 323, 334, 352, 360, 431, 434], "240": [33, 48, 56, 57, 58, 59, 60, 61, 62, 63, 64, 100, 117, 118, 196], "240x240": 74, "2424": [232, 314], "2447": 314, "246": [100, 102], "24d": 145, "25": [0, 100, 109, 133, 145, 155, 164, 176, 231, 240, 241, 246, 313, 323, 347, 352, 366, 367, 424, 442, 464, 477], "2500": [344, 346, 348], "2512": 305, "2547": 312, "256": [31, 34, 37, 39, 40, 55, 60, 61, 105, 109, 124, 125, 126, 131, 147, 192, 209, 210], "258": [100, 184], "25m": 100, "26": [63, 100, 142, 221, 255, 323, 342, 352, 431], "260": 100, "260x260": 74, "26325684": 418, "264": [73, 100], "265": 100, "266": [59, 100], "2689": [232, 313, 314], "26894142": 315, "269": [100, 143, 153], "27": [32, 56, 100, 127, 136, 144, 174, 253, 321, 323, 352, 456], "271": [58, 100], "272": [63, 100, 163], "274": [100, 139, 179], "276": [299, 300, 303, 304], "277": [36, 68, 100], "27b": 100, "28": [36, 37, 45, 53, 57, 96, 100, 102, 103, 170, 185, 191, 253, 323, 431], "280": [52, 100], "286": [100, 126], "288": [100, 118, 141, 185], "289": [49, 76, 100], "28x28": [7, 8, 102, 103], "29": [100, 179, 323], "293": 100, "296": [60, 100], "299": [100, 203], "299r": 517, "299x299": [90, 91, 98, 99], "29b": 100, "2_i": [354, 355, 356], "2c": 386, "2d": [237, 240, 249, 269, 272, 275, 279, 281, 289, 292, 325, 351, 355, 360, 363, 427, 436, 439, 472, 475, 485, 487, 488, 492, 493, 494, 496, 503, 519], "2e": 400, "2fh": 208, "2k": 211, "2nd": [29, 205], "2x": 146, "2x2": [243, 514, 516], "2x3": 281, "3": [1, 2, 3, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 100, 102, 105, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 121, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 187, 190, 191, 192, 197, 203, 205, 209, 210, 211, 216, 217, 218, 220, 221, 222, 223, 226, 231, 232, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 258, 260, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 337, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 380, 382, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 465, 468, 469, 470, 471, 472, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521], "30": [81, 90, 100, 143, 146, 153, 220, 287, 323, 386, 390, 391, 511, 519], "300": 100, "300x300": 74, "301": [36, 100], "302": [85, 100], "3026": 348, "304": [100, 108, 200], "3072": [39, 197], "308": [100, 189], "30823025": 315, "31": [67, 100, 253, 323, 427], "310": [437, 438], "31622777": 26, "319": 100, "31b": 100, "32": [11, 16, 31, 55, 69, 71, 72, 100, 104, 105, 119, 131, 138, 139, 140, 141, 142, 143, 144, 159, 160, 161, 162, 164, 182, 186, 209, 211, 220, 223, 253, 255, 269, 288, 289, 290, 294, 295, 322, 323, 325, 337, 342, 360, 382, 407, 425, 426, 431], "320": [100, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 142], "321": [299, 300, 303, 304], "326": [100, 166, 200], "32b": 100, "32m": 100, "32x16d": 100, "32x32": [5, 6, 101, 104], "32x32d": 100, "32x4d": [100, 171, 174, 179], "32x8d": [100, 172], "33": [73, 100, 220, 223, 255, 323, 342], "330": [33, 100], "3333": 267, "33333333": 25, "336": [38, 43, 100, 162, 193], "337": [73, 100], "33b": 100, "34": [100, 154, 169, 177, 220, 223, 253, 323, 427, 431], "342": [299, 300, 303, 304], "344": [80, 100], "345": [299, 300, 301, 302, 303, 304, 420], "349": [100, 191], "34b": 100, "35": [99, 100, 220, 223, 323], "350": [54, 100], "352": [89, 100], "354": [100, 185], "355": [83, 100], "3567": [344, 348], "357": [100, 195, 206], "359": [100, 127], "35b": 100, "36": [100, 141, 150, 152, 167, 323], "362": [100, 133], "364": 100, "367": 100, "3679": [225, 230, 305], "368": [100, 176, 178], "36b": 100, "36th": 100, "37": [100, 122, 321], "370": [78, 100], "372": 253, "375": 347, "3750": 346, "37754067": 315, "378": [100, 103], "37b": 100, "38": 100, "380": 100, "380x380": 74, "383": [100, 110], "38344152": 416, "384": [32, 33, 35, 36, 38, 40, 41, 55, 56, 57, 62, 63, 66, 67, 92, 100, 106, 107, 108, 110, 210], "38629436": 459, "389056": 457, "38b": 100, "38th": 100, "392": [68, 90, 100], "393": [81, 89, 100], "3935": 305, "3965": 100, "3977": 100, "39b": 100, "39m": 100, "3d": [238, 241, 250, 270, 273, 276, 280, 290, 293, 323, 326, 327, 352, 356, 361, 364], "3x3": [100, 327, 421], "4": [0, 1, 2, 3, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 55, 60, 61, 62, 63, 64, 67, 69, 74, 92, 93, 100, 101, 102, 103, 105, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 169, 170, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 209, 210, 221, 223, 235, 236, 237, 238, 239, 240, 243, 245, 246, 248, 249, 250, 253, 255, 262, 263, 265, 266, 267, 268, 269, 270, 271, 274, 275, 276, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 291, 292, 293, 299, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 319, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 340, 342, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 365, 366, 367, 368, 369, 370, 372, 380, 391, 395, 398, 402, 403, 405, 410, 415, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 441, 444, 446, 453, 459, 460, 461, 462, 463, 464, 467, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 504, 505, 506, 507, 508, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521], "40": [91, 100, 113, 117, 118, 137, 146, 390, 511], "400": [46, 100, 104, 186, 199], "4044": 344, "406": 211, "4076": 345, "408": [58, 100], "4096": [29, 205, 209, 210], "40b": 100, "40d": 146, "41": [100, 128], "41421356": 18, "415": 100, "416": [100, 109, 153, 171, 202], "41666667": 25, "417": [100, 146], "41808962": 418, "419974": 233, "4199743": 316, "41b": 100, "42": [38, 39, 187, 253, 294, 421], "421": [299, 300, 303, 304], "423": [299, 300, 301, 302], "424": 100, "42718872": 26, "4278": 100, "4284": 100, "4286": [267, 344], "42b": 100, "43": [11, 58, 82, 100, 425, 427, 434], "431": [95, 100], "432": [81, 100], "4323": 305, "4375": 346, "43758721": 416, "43b": 100, "44": [59, 100, 149, 161], "440": [86, 100], "4472": 267, "4472136": 20, "448": [58, 59, 83, 100], "4495": [352, 356], "45": [100, 135, 177, 253, 287, 519], "4510": 100, "4520": 100, "4545": 329, "455": [100, 163], "456": [100, 211], "456x456": 74, "457": [100, 130], "45b": 100, "46": [44, 100], "463": 100, "464": [42, 56, 100, 146], "468": [100, 160], "46b": 100, "4700": 100, "4708": 100, "47112767": 451, "472": [100, 160, 212, 215], "476": [100, 183], "47b": 100, "48": [69, 72, 73, 100, 118, 139, 143, 153, 171, 183, 187, 188, 189, 255, 342], "480": [66, 71, 100, 117], "481": [100, 117], "483": [100, 144], "485": 211, "48b": 100, "48m": 100, "49": [95, 100, 166, 184, 190], "492": [100, 128], "496": [53, 100], "4979": 305, "49b": 100, "49k": 100, "4s2x40d": [100, 146], "4x": 145, "4x4": 521, "5": [1, 2, 11, 13, 14, 17, 22, 23, 24, 25, 29, 32, 37, 40, 48, 55, 56, 57, 74, 76, 90, 100, 101, 102, 103, 104, 105, 108, 109, 113, 117, 118, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 175, 176, 177, 178, 202, 205, 209, 210, 211, 217, 218, 219, 220, 221, 223, 226, 231, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 258, 260, 262, 265, 266, 268, 271, 274, 275, 281, 282, 284, 286, 288, 289, 290, 295, 297, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 321, 322, 323, 324, 327, 329, 330, 331, 332, 333, 334, 335, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 359, 362, 365, 366, 367, 369, 370, 374, 376, 378, 384, 386, 388, 390, 391, 392, 404, 410, 413, 415, 417, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 442, 444, 446, 448, 449, 450, 461, 462, 463, 464, 466, 471, 472, 475, 476, 477, 478, 479, 486, 487, 488, 489, 492, 497, 498, 499, 500, 504, 505, 506, 507, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523], "50": [5, 6, 11, 100, 138, 144, 145, 146, 147, 155, 157, 164, 170, 174, 178, 179, 255, 342, 385, 404, 425, 427, 442, 517, 518, 520, 523], "5000": [213, 344, 346, 348], "504": [100, 116], "50_1s4x24d": 100, "50b": 100, "510": 100, "5108": 348, "512": [31, 34, 37, 39, 40, 55, 99, 100, 105, 109, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 147, 151, 177, 209, 210, 211, 213, 214, 318, 374, 375, 376, 377, 378], "516": [34, 100], "519": 100, "51b": 100, "520": [93, 100], "52359878": 450, "528": [56, 100], "528x528": 74, "52b": 100, "53": [33, 100, 253, 426], "530": [100, 160], "531": 100, "532": [100, 183], "536": [79, 100], "537": [100, 118], "543": [299, 300, 301, 302, 303, 304, 420], "54308063": 455, "544": [95, 100, 195, 212, 214], "545": 432, "5455": 329, "549": [100, 149], "54b": 100, "55": [85, 100, 108, 127], "553": [60, 100, 134], "556": [100, 136], "557": [100, 155], "558": [38, 100], "559": [100, 174], "55b": 100, "560": [77, 100, 140], "563": [299, 300, 303, 304], "564": [100, 187], "567": [100, 198], "5672": 100, "568": [87, 100], "5683": 100, "569": [100, 172], "57": [100, 178, 253], "57079633": [449, 450], "5714": 267, "5720": 100, "5730": 100, "57366333": 419, "576": 118, "57b": 100, "580": 208, "582": 100, "584": [100, 212, 214], "5849625": 460, "586": [91, 100], "587": 208, "587g": 517, "589": [45, 100], "590": [100, 119], "591": [42, 100], "592": [61, 100, 168], "5987": 100, "5995": 100, "5998": 212, "59b": 100, "5ch": 208, "5d": 241, "5th": [29, 205], "6": [11, 17, 25, 29, 31, 33, 34, 35, 38, 40, 55, 56, 57, 58, 59, 63, 66, 67, 69, 70, 71, 72, 73, 74, 92, 100, 101, 104, 106, 107, 110, 124, 125, 129, 131, 132, 133, 134, 135, 136, 137, 138, 144, 147, 154, 155, 157, 164, 169, 170, 177, 178, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 205, 213, 221, 222, 236, 237, 238, 239, 243, 245, 250, 253, 255, 263, 267, 268, 271, 272, 281, 282, 284, 300, 304, 307, 311, 321, 322, 323, 327, 330, 332, 333, 334, 335, 340, 342, 344, 350, 351, 352, 353, 354, 355, 356, 357, 359, 362, 363, 366, 367, 369, 370, 374, 375, 377, 396, 404, 410, 415, 420, 422, 423, 424, 425, 426, 427, 430, 431, 432, 433, 434, 435, 436, 437, 438, 444, 446, 461, 462, 463, 471, 472, 475, 476, 477, 478, 483, 489, 496, 497, 498, 499, 500, 505, 506, 507, 510, 513, 514, 515, 516, 517, 519, 521], "60": [5, 6, 100, 126, 150, 434], "600": [74, 100, 211], "6008": 212, "600x600": 74, "6052": 348, "606": [100, 184], "6065": 305, "608": [37, 100, 206], "60b": 100, "61": [30, 100, 104], "6105": 100, "611": [100, 140], "6114": 100, "6124": [350, 351, 352, 354, 355, 356, 357], "617": [84, 100], "62": [100, 136, 206, 212, 214, 253], "622": [67, 100], "623": [51, 100], "626": [100, 106], "62686041": 468, "62b": 100, "630": 100, "632": [36, 100, 199, 200], "6321": [225, 305], "63245553": 26, "635": [53, 100], "636": [76, 100], "63b": 100, "64": [31, 40, 66, 67, 69, 73, 100, 105, 106, 107, 108, 109, 113, 117, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 152, 163, 175, 192, 209, 210, 211, 220, 223, 253, 294, 295, 407], "640": [49, 80, 100], "641": 100, "645": 100, "64589411": 416, "647": [100, 176], "648": [100, 128], "64b": 100, "64x4d": [100, 173], "654": [299, 300, 301, 302, 303, 304, 420], "656": [35, 100, 198], "657": [100, 188, 299, 300, 303, 304], "6590": [232, 314], "65b": 100, "66": [83, 100, 167], "660": [49, 100], "664": [100, 201], "6652": 314, "666": [100, 131], "66666667": 25, "6667": [267, 344], "667": [100, 196], "668": [100, 188], "6682": 344, "669": [100, 152], "66b": 100, "67": 427, "672": [100, 117, 154], "67326": 312, "6733": 230, "676": [100, 145], "677": 100, "678": [299, 300, 301, 302, 303, 304], "67b": 100, "67m": 100, "688": [39, 100], "68811989": 418, "689": [100, 151], "68b": 100, "69314718": 459, "696": [67, 100, 135, 156], "69b": 100, "7": [10, 11, 14, 24, 39, 58, 59, 64, 70, 77, 100, 105, 125, 131, 132, 133, 134, 135, 136, 137, 180, 181, 192, 209, 210, 221, 236, 237, 238, 243, 245, 250, 253, 255, 256, 257, 268, 281, 282, 284, 295, 306, 311, 312, 313, 316, 321, 322, 323, 327, 330, 334, 335, 340, 342, 344, 345, 347, 351, 352, 355, 356, 359, 362, 366, 367, 369, 370, 413, 417, 420, 423, 425, 426, 427, 431, 433, 434, 436, 440, 442, 457, 462, 471, 472, 475, 476, 477, 488, 500, 503, 505, 506, 513, 514, 515, 516, 517, 519, 521], "70": [7, 8, 100, 141], "7001": 345, "704": [73, 100, 161], "706": [100, 104, 126], "70710678": [20, 467], "708": [46, 100], "70b": 100, "7132": 100, "7141": 100, "7147": 348, "715": [100, 120], "717": [47, 100, 202], "7182": 465, "7182818": 457, "71b": 100, "72": [113, 117, 118, 465], "726791": 100, "72b": 100, "73": 100, "731": [100, 190], "7311": [232, 313, 314], "734": [100, 110], "739": [98, 100], "73b": 100, "74": 427, "745": [100, 189], "748": [94, 100], "74b": 100, "75": [240, 255, 342, 347, 395, 442], "755": [100, 122], "757": [100, 108], "7581": 230, "75b": 100, "760": [100, 131, 139, 179], "76159416": [315, 474], "7616": [233, 316], "76219569": 455, "7635": 312, "767": [43, 100], "768": [32, 33, 35, 36, 38, 40, 41, 62, 68, 92, 100, 106, 107, 108, 110, 126, 182, 197], "770": [37, 100], "772": 432, "774": [100, 121], "776": [61, 100, 106], "778": [100, 168], "77b": 100, "78": [100, 157], "78357324": 418, "784": 16, "78539816": 451, "789": 100, "78b": 100, "790": [35, 100], "791": [100, 162], "79172504": 416, "792": [100, 159], "795": [77, 100], "796": [100, 188], "797": [100, 154], "79b": 100, "7x7": 205, "8": [11, 23, 27, 38, 39, 55, 60, 61, 69, 74, 100, 105, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 143, 147, 150, 153, 159, 160, 161, 162, 163, 164, 167, 176, 177, 178, 182, 186, 213, 220, 221, 223, 235, 236, 237, 238, 240, 243, 245, 250, 253, 255, 256, 267, 268, 269, 270, 273, 281, 282, 284, 288, 289, 290, 294, 306, 307, 312, 313, 316, 318, 319, 321, 322, 323, 325, 326, 327, 330, 332, 333, 334, 335, 340, 342, 344, 347, 351, 352, 355, 356, 359, 360, 361, 362, 364, 366, 367, 369, 370, 374, 375, 376, 377, 378, 391, 398, 399, 400, 401, 402, 403, 413, 417, 424, 425, 426, 427, 431, 432, 434, 435, 436, 452, 456, 462, 471, 472, 475, 476, 477, 488, 500, 504, 505, 506, 513, 514, 515, 516, 517, 519, 521], "80": [5, 6, 7, 8, 117], "800": [47, 51, 64, 100, 211], "8005": 345, "808": [100, 150], "80b": 100, "817": [90, 100], "818": 100, "8182": 329, "81b": 100, "82": [34, 100, 137, 253], "821": [100, 167], "82b": 100, "83": [100, 163], "832": [96, 100], "833": 100, "83b": 100, "84": [101, 103, 104], "840": [30, 50, 94, 100], "8413": [226, 306], "842": [100, 191], "847": [99, 100], "848": [100, 127, 167, 194], "849": 100, "84b": 100, "856": [63, 70, 100, 133], "85772238": 315, "8584": 312, "85b": 100, "86": [94, 100, 198], "862": [100, 204], "863": [100, 193], "864": [100, 119, 152], "868": [100, 169], "869": [100, 187], "87": [100, 182, 186], "872": [100, 116, 145, 166], "876": [299, 300, 303, 304, 420], "87m": 100, "88": [42, 47, 100, 118, 162, 173], "880": [100, 107], "8808": [232, 313, 314], "882": [100, 137], "884": [44, 100], "886": [100, 156], "887": 432, "88m": 100, "891773": 416, "893": 100, "8944": 267, "89442719": 20, "895": [100, 177], "896": [100, 174], "89b": 100, "9": [0, 1, 3, 8, 27, 40, 41, 52, 60, 61, 78, 92, 100, 120, 237, 243, 245, 253, 255, 268, 281, 284, 321, 322, 323, 327, 330, 334, 340, 342, 344, 351, 352, 355, 359, 366, 367, 369, 384, 387, 395, 396, 398, 399, 400, 401, 402, 403, 405, 413, 417, 420, 423, 427, 431, 432, 433, 436, 441, 458, 469, 470, 481, 504, 505, 506, 513, 514, 515, 516, 517, 519], "904": [100, 164], "90709145": 419, "9091": 329, "9120": 348, "9163": 348, "91m": 100, "920": [100, 126], "922": [100, 186], "928": [72, 100], "929": [100, 143], "92b": 100, "93": [100, 172], "93b": 100, "93k": 100, "94": 148, "944": [32, 100], "9486833": 26, "949e": [437, 438], "94b": 100, "95": 389, "9526": 231, "9545": 306, "955": [100, 171], "956": [50, 100], "958": [100, 169], "95b": 100, "96": [32, 33, 40, 41, 64, 92, 100, 105, 106, 107, 108, 118, 180, 181], "960": 117, "96366276": 416, "9640": 316, "96402758": 474, "968": [54, 100], "973": [100, 157], "976": [59, 100], "978": [39, 70, 100], "97b": 100, "984": [91, 100, 137, 173], "98b": 100, "99": 403, "9957": 348, "997": [66, 100], "99734545": 419, "999": [0, 398, 399, 400, 401, 402], "99b": 100, "A": [1, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 31, 40, 66, 67, 68, 75, 97, 100, 101, 111, 114, 124, 126, 127, 128, 129, 130, 138, 147, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 207, 209, 211, 217, 223, 225, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 243, 244, 245, 246, 247, 248, 249, 253, 255, 256, 257, 261, 262, 263, 265, 266, 267, 281, 282, 286, 295, 319, 329, 330, 332, 333, 334, 335, 337, 344, 345, 348, 350, 351, 352, 353, 354, 355, 356, 357, 372, 374, 375, 376, 377, 378, 382, 383, 384, 389, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 413, 415, 416, 417, 418, 420, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 519], "As": [325, 419], "At": [16, 380, 391], "Be": [0, 10], "By": [0, 2, 3, 16, 114, 121, 148, 149, 150, 151, 152, 153, 154, 155, 218, 287, 382, 402, 410, 413, 416, 417, 418, 420, 513, 523], "For": [2, 3, 4, 11, 14, 18, 19, 20, 22, 23, 24, 25, 27, 119, 120, 121, 123, 210, 211, 223, 225, 226, 228, 229, 230, 231, 233, 239, 253, 255, 267, 286, 299, 300, 303, 304, 312, 321, 322, 323, 324, 327, 340, 342, 350, 351, 352, 354, 355, 356, 382, 394, 415, 419, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 457, 459, 460, 461, 462, 463, 467, 469, 471, 472, 475, 476, 477, 481, 494, 496, 501, 503, 507, 509, 523], "If": [0, 1, 2, 5, 6, 7, 8, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 55, 147, 209, 211, 217, 219, 220, 221, 222, 225, 226, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 246, 250, 253, 255, 262, 265, 269, 270, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295, 299, 300, 318, 319, 321, 322, 323, 324, 325, 326, 331, 340, 342, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 360, 361, 365, 366, 367, 368, 369, 370, 372, 374, 375, 376, 377, 378, 380, 383, 385, 386, 387, 388, 389, 390, 391, 392, 398, 399, 403, 404, 407, 412, 413, 416, 417, 418, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 492, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 508, 509, 510, 513, 517, 518, 520, 521], "In": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523], "It": [1, 2, 3, 7, 10, 11, 16, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 53, 55, 70, 71, 72, 73, 88, 89, 90, 100, 101, 102, 103, 104, 105, 106, 107, 110, 112, 113, 115, 123, 128, 135, 137, 147, 148, 149, 150, 151, 152, 153, 154, 155, 168, 181, 188, 190, 192, 204, 207, 208, 209, 211, 212, 217, 219, 220, 221, 222, 223, 239, 240, 241, 246, 250, 253, 282, 284, 286, 287, 288, 289, 290, 294, 306, 307, 310, 311, 316, 318, 319, 324, 326, 331, 337, 340, 341, 344, 345, 346, 347, 348, 359, 360, 361, 372, 374, 375, 377, 380, 382, 383, 394, 395, 401, 403, 404, 405, 407, 410, 411, 415, 419, 422, 423, 424, 425, 428, 429, 430, 432, 433, 442, 461, 463, 481, 484, 489, 492, 493, 494, 495, 496, 497, 500, 501, 502, 503, 507, 508, 510, 512, 513], "Its": [11, 27, 421], "Near": 25, "No": [243, 246, 408], "Not": [282, 341], "One": [11, 102, 209, 523], "Such": 422, "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 337, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 374, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523], "Then": 434, "There": 497, "These": [4, 10, 17, 20, 23, 26, 28, 31, 84, 85, 86, 87, 105, 110, 119, 120, 121, 122, 123, 126, 156, 157, 176, 177, 178, 204, 207, 211, 329, 332, 333, 334, 335, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 404, 421, 523], "To": [3, 16, 100, 208, 212, 384, 394, 413, 415, 418, 421, 437, 438, 492, 508, 523], "With": [3, 100, 132, 136, 243, 246, 440, 441, 513, 523], "_": [13, 14, 15, 23, 219, 220, 222, 223, 225, 226, 228, 229, 230, 231, 233, 255, 281, 284, 286, 324, 325, 337, 351, 352, 354, 355, 356, 365, 366, 367, 368, 369, 370, 372, 395, 396, 398, 399, 400, 401, 403, 405, 425, 426, 427, 431, 475, 476, 505, 506, 507, 514, 515, 516, 518, 519, 520], "_1": [20, 219, 220, 221, 222, 223, 253, 340, 431, 484, 489, 510], "_2": [20, 219, 220, 221, 222, 223, 253, 340, 431, 484, 489, 510], "__call__": [1, 217, 411], "__enter__": 411, "__exit__": 411, "__getitem__": [0, 2, 3, 5, 6, 7, 8], "__init__": [0, 1, 2, 3, 16, 29, 31, 40, 41, 55, 74, 75, 88, 92, 97, 101, 105, 111, 112, 113, 114, 124, 125, 138, 192, 205, 209, 210, 211, 216, 217, 218, 219, 220, 221, 222, 246, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 321, 322, 323, 324, 325, 326, 329, 330, 331, 332, 333, 337, 340, 342, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 382, 383, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 412, 422, 512, 513], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5, 6, 7, 8], "__repr__": 383, "__setattr__": 217, "_a": 434, "_activ": 232, "_arraylik": [436, 438, 441, 444, 446], "_arraylikeint": 494, "_arrayorscalar": [216, 218, 413, 422, 478], "_b": 434, "_backward_op": 16, "_base_activ": 101, "_base_dtyp": [437, 442], "_block": 330, "_builtinnumer": [422, 440, 441], "_c": 515, "_d": 241, "_decai": 401, "_devicetyp": [413, 415, 416, 417, 418, 420, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446], "_dtype_bit": 407, "_einopspattern": [13, 14, 15, 337], "_fanmod": [299, 300], "_fasterrcnnloss": 210, "_grad_en": 409, "_h": [240, 241], "_i": [20, 24, 232, 246, 253, 314, 331, 347, 350, 357, 365, 368, 422, 425, 426, 428, 429, 431, 432, 448, 449, 450, 451, 453, 454, 455, 456, 457, 459, 460, 462, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 484, 489, 496, 501, 504, 507, 509, 510], "_in": [299, 300, 303, 304], "_interpolatetyp": [282, 380], "_j": [232, 314, 365, 368, 431, 462, 471, 476, 477], "_k": 502, "_layer": [375, 377], "_left": 286, "_make_lay": 192, "_mlphead": 92, "_mlx_dtype": 407, "_mlxarrai": 422, "_modul": 217, "_n": [20, 219, 220, 221, 222, 223, 281, 484, 489, 510], "_nograd": 411, "_np_dtype": 407, "_out": [299, 300, 303, 304, 496, 503], "_p": [24, 267, 284, 372], "_pad": 494, "_paddingstr": [288, 289, 290, 291, 292, 293, 321, 322, 323, 324, 325, 326], "_paddingtyp": 282, "_paramet": 217, "_reducestr": 14, "_reductiontyp": [256, 257, 258, 260, 261, 344, 345, 346, 347, 348], "_resnestbottleneck": 138, "_right": 286, "_scalar": [235, 297, 301, 302, 303, 304, 319, 435, 440, 441, 442, 453, 491], "_scaled_channel": 31, "_scaled_num_block": 31, "_seresnetbottleneck": [166, 167, 170], "_seresnetmodul": [168, 169], "_shapelik": [266, 357, 416, 417, 440, 443, 445, 482, 497, 501, 509], "_size": [268, 269, 270, 271, 330], "_skresnetmodul": [176, 177, 178], "_slope": 309, "_sortkind": 481, "_statedict": 383, "_t": [402, 403], "_tensor": [318, 374, 376, 378], "_tensorop": 422, "_u": 25, "_util": 507, "_v": 25, "_valu": [453, 494], "_w": [240, 241], "_weight": 372, "_width": 494, "a_": [11, 31, 376], "a_1": [318, 500], "a_2": 500, "a_h": 318, "a_i": [318, 428, 429, 432, 500], "a_k": 500, "aaai": 100, "ab": [391, 447], "abc": [2, 383], "abil": [100, 523], "about": 10, "abov": [409, 419, 436, 439, 505], "abs_pos_emb": [180, 181], "absolut": [23, 24, 31, 180, 181, 258, 391, 400, 448], "abstract": [2, 3, 126, 128, 382, 383, 394, 395, 403, 405, 407], "abstractmethod": 383, "abund": [49, 122], "acceler": [100, 209, 312, 350, 351, 352, 386, 395, 401, 403, 405, 422], "accept": [324, 341, 481], "access": [0, 2, 3, 4, 5, 6, 7, 8, 159, 160, 161, 162, 163, 164, 216, 218, 219, 220, 221, 222, 223, 408, 497], "accord": [11, 13, 15, 246, 282, 286, 321, 322, 323, 337, 340, 342, 345, 348, 396, 397, 398, 399, 400, 401, 402, 476, 482, 511], "accordingli": [19, 472, 511], "account": [23, 25, 26, 315, 408], "accumul": [282, 395, 396, 397, 408, 422, 423, 424, 428, 429, 430, 433, 482], "accur": [167, 208], "accuraci": [47, 49, 50, 51, 52, 84, 85, 86, 87, 94, 96, 100, 111, 112, 113, 119, 120, 121, 122, 123, 170, 198, 199, 200], "achiev": [13, 100, 132, 158, 159, 160, 161, 162, 163, 164, 236, 237, 238, 268, 337, 359, 360, 361, 364, 401, 518, 520], "across": [0, 5, 6, 10, 13, 14, 16, 31, 40, 53, 100, 105, 115, 126, 131, 132, 133, 135, 136, 137, 181, 189, 211, 216, 220, 223, 263, 266, 268, 269, 270, 303, 304, 350, 351, 352, 354, 355, 356, 357, 359, 360, 361, 407, 413, 416, 417, 418, 419, 420, 421, 437, 438, 462, 477], "act": [16, 399, 498], "act_lay": [65, 105], "activ": [29, 40, 57, 59, 61, 65, 100, 101, 105, 108, 109, 117, 118, 148, 152, 153, 165, 192, 205, 219, 223, 225, 226, 228, 229, 230, 231, 232, 233, 244, 288, 289, 290, 294, 295, 299, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 329, 330, 332, 333, 334, 335, 344, 345, 348, 350, 351, 352, 357, 374, 376, 378, 408, 461, 463], "actual": [218, 344, 345, 347, 348, 516], "acycl": 16, "ad": [15, 69, 113, 147, 217, 219, 220, 221, 222, 223, 236, 237, 238, 239, 240, 245, 253, 255, 256, 257, 262, 263, 265, 266, 274, 275, 276, 278, 279, 280, 288, 289, 290, 318, 321, 322, 323, 324, 325, 326, 327, 330, 344, 345, 350, 351, 352, 353, 354, 355, 356, 357, 365, 366, 367, 368, 369, 370, 374, 376, 378, 396, 397, 398, 399, 400, 401, 402, 403, 412, 509, 523], "adadelta": 406, "adagrad": [396, 406], "adam": [100, 399, 400, 401, 402, 406], "adamax": 406, "adamw": 406, "adapt": [10, 29, 88, 100, 101, 119, 122, 138, 166, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 192, 205, 268, 269, 270, 271, 272, 273, 294, 295, 359, 360, 361, 362, 363, 364, 387, 391, 396, 397, 398, 401, 402, 403, 404], "adaptive_avg_pool1d": [252, 277, 359], "adaptive_avg_pool2d": [252, 277, 360], "adaptive_avg_pool3d": [252, 277, 361], "adaptive_max_pool1d": [252, 277, 362], "adaptive_max_pool2d": [252, 277, 363], "adaptive_max_pool3d": [252, 277, 364], "adaptiveavgpool1d": [339, 371], "adaptiveavgpool2d": [29, 165, 192, 205, 211, 339, 371], "adaptiveavgpool3d": [339, 371], "adaptivemaxpool1d": [339, 371], "adaptivemaxpool2d": [339, 371], "adaptivemaxpool3d": [339, 371], "add": [4, 16, 55, 211, 217, 219, 220, 223, 253, 255, 318, 321, 322, 323, 324, 325, 326, 340, 342, 357, 383, 395, 398, 403, 405, 410, 447, 494, 509], "add_bias_kv": 318, "add_modul": [217, 223], "add_on": 211, "add_param_group": 383, "add_zero_attn": 318, "addit": [4, 23, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 206, 217, 220, 223, 253, 255, 262, 265, 324, 325, 326, 340, 342, 350, 351, 352, 354, 355, 356, 395, 401, 410, 421, 423, 481, 502], "addition": 401, "address": [345, 348, 398, 399, 402], "adjust": [98, 111, 113, 115, 123, 171, 172, 173, 174, 175, 179, 209, 211, 268, 269, 270, 295, 329, 330, 350, 351, 352, 354, 355, 356, 357, 359, 360, 361, 362, 364, 384, 385, 388, 389, 390, 391, 392, 394, 398, 402, 403, 404, 489, 510], "adopt": 422, "advanc": [3, 16, 25, 75, 92, 100, 112, 122, 127, 129, 152, 186, 188, 212, 220, 223, 236, 237, 238, 268, 269, 270, 359, 360, 361, 382, 395], "advantag": 99, "affect": [281, 409, 495, 501, 512], "affin": [281, 282, 288, 289, 290, 350, 351, 352, 354, 355, 356, 357, 519], "affine_grid": [252, 282, 283], "after": [10, 15, 16, 23, 29, 117, 118, 180, 181, 205, 209, 210, 218, 219, 220, 221, 222, 223, 250, 271, 294, 295, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 322, 323, 329, 332, 333, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 354, 357, 363, 365, 366, 367, 368, 369, 370, 374, 376, 378, 384, 391, 399, 408, 422, 423, 424, 428, 429, 430, 432, 433, 440, 441, 442, 494, 499, 500, 513], "afterward": 408, "aggreg": [10, 55, 100, 295, 431, 496, 503], "agnost": 407, "aim": 4, "al": [55, 89, 100, 105, 208, 211, 212, 374], "alex": [5, 6, 100], "alexei": 100, "alexnet": 205, "algebra": [11, 17, 439], "algorithm": [7, 23, 25, 26, 383, 394, 421, 481], "alia": 411, "align": [10, 27, 122, 281, 286, 380, 426, 427, 472], "align_corn": [281, 282, 286, 380], "all": [0, 3, 4, 11, 16, 26, 74, 100, 211, 212, 217, 219, 220, 221, 222, 223, 237, 238, 241, 267, 268, 269, 270, 273, 275, 276, 279, 280, 286, 289, 290, 295, 309, 310, 318, 323, 359, 360, 361, 366, 367, 370, 374, 382, 383, 388, 394, 395, 398, 403, 404, 405, 408, 415, 422, 432, 461, 462, 463, 471, 475, 477, 484, 485, 488, 489, 496, 501, 502, 503, 505, 506, 510, 514, 515, 523], "allevi": [100, 225], "alloc": [16, 437, 438], "allow": [0, 1, 3, 4, 10, 11, 13, 25, 26, 55, 99, 100, 101, 105, 114, 117, 118, 120, 123, 125, 126, 139, 140, 141, 142, 143, 144, 145, 146, 147, 158, 171, 172, 173, 174, 175, 179, 180, 184, 185, 186, 187, 188, 190, 207, 218, 219, 220, 221, 222, 223, 225, 228, 229, 232, 238, 243, 287, 295, 305, 306, 309, 312, 313, 314, 316, 319, 321, 322, 323, 337, 372, 380, 382, 384, 385, 387, 389, 391, 396, 397, 410, 435, 440, 443, 445, 446, 472, 476, 478, 492, 512, 513, 523], "along": [10, 14, 15, 232, 267, 286, 295, 314, 408, 426, 427, 431, 461, 462, 463, 471, 475, 477, 479, 481, 482, 483, 484, 487, 489, 492, 496, 498, 499, 500, 502, 503, 504, 507, 508, 509, 510, 518, 520], "alongsid": 216, "alpha": [225, 228, 230, 244, 305, 312, 329, 395, 403], "alpha_dropout": [251, 252, 329], "alphadropout": [336, 339], "alphadropoutmodel": 329, "alreadi": 412, "also": [225, 226, 228, 229, 230, 231, 233, 239, 253, 255, 286, 325, 401, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 438, 445, 448, 449, 450, 451, 453, 454, 455, 456, 457, 459, 460, 461, 463, 464, 466, 467, 468, 469, 470, 472, 473, 474, 482, 484, 489, 494, 495, 496, 497, 501, 502, 503, 509, 510], "alter": [223, 497, 498], "altern": [1, 16, 105, 306, 396, 427], "alwai": [10, 218, 384, 452, 458, 465, 491, 495, 511, 517, 518, 520], "among": [90, 295], "amount": [236, 237, 238, 274, 275, 276, 278, 279, 280, 291, 292, 293, 327, 401], "ampl": 119, "amsgrad": [398, 399], "an": [0, 1, 3, 10, 13, 14, 15, 16, 20, 22, 23, 25, 26, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 112, 115, 116, 117, 118, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 198, 199, 200, 201, 202, 204, 205, 206, 207, 210, 214, 215, 217, 219, 220, 221, 222, 223, 226, 236, 237, 238, 243, 244, 247, 248, 249, 250, 253, 269, 270, 282, 284, 286, 287, 291, 292, 293, 295, 303, 304, 305, 311, 313, 318, 321, 322, 323, 324, 325, 327, 329, 331, 332, 333, 334, 335, 337, 340, 342, 357, 359, 360, 361, 362, 365, 366, 367, 368, 369, 370, 374, 375, 377, 378, 383, 384, 389, 394, 395, 398, 401, 403, 407, 408, 411, 412, 422, 427, 436, 439, 441, 462, 471, 477, 481, 482, 484, 488, 496, 500, 503, 506, 507, 509, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523], "analog": [496, 503], "analysi": [4, 207, 208, 294, 321, 322, 323, 356, 365, 367, 368, 370], "analyz": 207, "anchor": 210, "anchor_s": 210, "anchor_strid": 210, "andreetto": 100, "andrew": 100, "angl": [287, 519], "ani": [0, 1, 2, 3, 13, 16, 23, 25, 30, 106, 107, 108, 109, 110, 147, 175, 204, 206, 216, 217, 218, 219, 221, 222, 225, 226, 228, 229, 230, 231, 233, 244, 247, 253, 255, 262, 265, 282, 313, 337, 357, 382, 383, 388, 408, 409, 411, 412, 419, 422, 435, 436, 437, 439, 440, 443, 444, 445, 446, 461, 463, 476, 478, 484, 485, 489, 494, 496, 502, 503, 509, 510, 512, 523], "anneal": 385, "anoth": [114, 207, 222, 433, 444, 446, 513, 523], "api": [4, 16, 359, 360, 361, 362, 523], "appear": [383, 508], "append": [220, 222, 223, 318], "appl": [16, 110, 407, 422], "appli": [2, 4, 5, 6, 7, 8, 10, 11, 13, 14, 23, 29, 31, 40, 74, 75, 92, 100, 158, 175, 180, 181, 197, 203, 205, 209, 210, 211, 213, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 235, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 256, 257, 258, 260, 261, 263, 267, 271, 273, 281, 282, 288, 289, 290, 294, 295, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 322, 323, 326, 329, 330, 331, 332, 333, 334, 335, 337, 340, 342, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 374, 375, 376, 377, 378, 388, 389, 395, 396, 397, 399, 400, 401, 402, 427, 440, 452, 458, 494, 496, 505, 506, 508, 512, 515, 517, 518, 519, 520, 521, 523], "applic": [4, 10, 14, 16, 25, 42, 43, 44, 47, 49, 54, 69, 95, 98, 99, 100, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 202, 236, 241, 265, 321, 322, 323, 324, 340, 342, 421, 435, 445, 452, 494, 500, 505, 506, 521], "approach": [3, 10, 13, 15, 55, 57, 59, 61, 65, 97, 209, 223, 337, 385, 399], "appropri": [25, 100, 113, 117, 118, 217, 221, 223, 246, 321, 322, 323, 329, 332, 333, 345, 363, 366, 367, 407, 409], "approx": 230, "approxim": [25, 226, 306, 307, 308, 366, 369, 408], "ar": [1, 2, 3, 4, 11, 14, 15, 16, 19, 20, 22, 23, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 66, 67, 68, 84, 85, 86, 87, 88, 89, 90, 100, 119, 121, 122, 125, 126, 127, 128, 129, 130, 134, 207, 209, 210, 211, 216, 217, 218, 219, 220, 221, 222, 223, 232, 236, 237, 238, 240, 241, 243, 246, 253, 255, 263, 269, 270, 272, 273, 281, 282, 284, 286, 291, 292, 293, 294, 295, 299, 300, 302, 303, 304, 307, 314, 318, 321, 322, 323, 324, 327, 329, 330, 331, 332, 333, 334, 335, 340, 342, 345, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 372, 378, 380, 382, 386, 390, 395, 398, 399, 401, 402, 403, 404, 405, 408, 409, 411, 412, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 442, 448, 453, 457, 461, 462, 463, 464, 466, 471, 472, 475, 476, 482, 483, 484, 492, 496, 497, 498, 499, 500, 503, 504, 505, 506, 507, 511, 512, 513, 514, 516, 517, 521, 523], "arang": [434, 447], "arbitrari": [220, 341, 437, 438, 453, 459, 460, 462, 467, 469, 471, 476, 477], "arcco": 447, "arch": 412, "architectur": [10, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 130, 132, 138, 139, 140, 141, 142, 143, 144, 147, 158, 159, 160, 161, 162, 163, 164, 165, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 212, 213, 219, 220, 221, 222, 223, 226, 239, 294, 307, 308, 310, 315, 318, 319, 337, 340, 341, 374, 382, 412], "arcsin": 447, "arctan": 447, "area": [282, 286, 380], "arg": [217, 341, 412, 437], "argmax": [411, 490], "argmin": 490, "argsort": 490, "argument": [3, 4, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 101, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 193, 194, 195, 196, 204, 206, 217, 223, 281, 341, 408, 411, 437, 476], "around": [20, 207, 287, 316], "arr": [484, 489, 502, 510], "arrai": [16, 216, 218, 410, 413, 422, 427, 436, 438, 441, 444, 446, 478, 495, 496, 513, 523], "art": [49, 100, 199], "artifici": [100, 207], "arxiv": 100, "ascend": [499, 504], "asgd": 406, "ashish": 212, "aspect": [210, 521], "aspect_ratio": 210, "assign": [16, 207, 217, 219, 221, 223, 286, 345, 348, 491], "assist": [88, 89, 90], "associ": [221, 222], "assum": [0, 1, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 197, 198, 199, 200, 201, 202, 383, 394, 409], "astyp": 422, "attach": 408, "attempt": [219, 223], "attend": [235, 319, 375, 377, 378], "attent": [31, 55, 65, 66, 67, 68, 100, 105, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 145, 146, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 197, 212, 213, 222, 253, 294, 318, 319, 374, 375, 376, 377, 378, 434], "attn": [235, 319], "attn_drop": 105, "attn_drop_r": [55, 124, 125, 180, 181], "attn_mask": [235, 319], "atto": [46, 93, 100], "attribut": [16, 217, 384], "audio": [321, 324], "augment": [3, 4, 168, 287, 421, 496, 503, 512, 516, 517, 518, 519, 520, 523], "auto_pars": 407, "autodiff": [11, 422], "autoencod": [100, 239, 324, 326], "autograd": [16, 382, 499], "automat": [4, 218, 219, 220, 221, 222, 362, 363, 364, 382, 408, 413, 416, 417, 418, 420, 422, 437, 438, 446, 481, 492, 513], "autoregress": [235, 319], "auxiliari": [88, 89, 90, 216], "avail": [4, 5, 6, 7, 8], "avd": 138, "averag": [14, 29, 102, 103, 104, 105, 138, 147, 158, 165, 175, 192, 205, 216, 268, 269, 270, 274, 275, 276, 286, 294, 295, 347, 359, 360, 361, 365, 366, 367, 395, 396, 398, 403, 462], "avg_down": 147, "avg_pool": [365, 366, 367], "avg_pool1d": [252, 277], "avg_pool2d": [252, 277], "avg_pool3d": [252, 277], "avgpool": [29, 165, 192, 205, 295], "avgpool1d": [339, 371], "avgpool1dmodel": 365, "avgpool2d": [339, 371], "avgpool2dmodel": 366, "avgpool3d": [339, 371], "avgpool3dmodel": 367, "avoid": [2, 3, 13, 14, 25, 75, 134, 221, 267, 337, 386, 408, 411, 442, 452, 458], "awar": 189, "ax": [10, 13, 14, 15, 17, 337, 410, 434, 461, 462, 463, 471, 472, 476, 477, 482, 496, 501, 503], "axes_a": 434, "axes_b": 434, "axi": [14, 24, 100, 105, 232, 267, 314, 426, 427, 434, 461, 462, 463, 471, 477, 479, 481, 483, 484, 485, 487, 489, 492, 494, 496, 498, 499, 500, 501, 502, 503, 504, 507, 508, 509, 510, 518, 520], "axis1": 472, "axis2": 472, "b": [11, 13, 14, 15, 17, 27, 31, 100, 198, 253, 255, 302, 321, 322, 323, 324, 325, 326, 337, 340, 342, 410, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 482, 484, 487, 488, 489, 492, 502, 510, 511, 517], "b0": [74, 76, 100, 131], "b1": [74, 77, 100, 132, 133], "b2": [74, 78, 100, 133, 134], "b3": [74, 79, 100, 135], "b4": [74, 80, 100, 136], "b5": [74, 81, 100, 137], "b6": [74, 82, 100], "b7": [74, 83, 100], "b_": [11, 31], "b_1": [376, 378], "b_2": [376, 378], "b_i": [428, 429, 432], "b_k": 318, "b_v": 318, "back": [11, 16, 281, 286, 318, 366, 367, 412, 426, 431, 479, 480, 481, 483, 496, 499, 503, 507], "backbon": [100, 135, 176, 177, 178, 208, 209, 210, 211], "backend": [110, 422, 440, 481], "background": [209, 210, 211], "backprop": 326, "backpropag": [10, 16, 19, 20, 22, 23, 25, 26, 28, 100, 216, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 253, 255, 281, 282, 286, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 321, 322, 323, 327, 329, 330, 332, 333, 334, 335, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 365, 366, 367, 368, 369, 370, 372, 382, 418, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 457, 461, 463, 478, 482, 483, 491, 494, 496, 498, 503, 505, 506, 513], "backward": [16, 216, 218, 282, 327, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 411, 422, 440, 441, 442, 483, 491, 498, 499, 504, 513], "balanc": [32, 33, 34, 35, 36, 37, 38, 39, 44, 47, 48, 51, 62, 63, 66, 75, 84, 85, 86, 87, 96, 100, 113, 114, 120, 121, 123, 126, 129, 159, 160, 161, 162, 163, 164, 198, 201, 346], "bar": 395, "base": [3, 13, 14, 16, 17, 22, 23, 26, 27, 31, 42, 45, 47, 62, 69, 88, 89, 90, 91, 94, 97, 98, 99, 100, 101, 106, 107, 114, 120, 121, 123, 138, 145, 146, 158, 159, 160, 161, 162, 163, 164, 175, 182, 186, 192, 198, 202, 203, 207, 208, 209, 210, 211, 212, 213, 214, 217, 219, 220, 221, 222, 235, 243, 253, 268, 269, 270, 295, 319, 327, 329, 337, 345, 346, 359, 360, 361, 362, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 399, 403, 404, 405, 407, 413, 423, 424, 428, 429, 430, 432, 433, 446, 457, 458, 459, 460, 461, 463, 476, 492, 494, 500, 511, 516, 517, 518, 519, 520], "base_dtyp": 407, "base_lr": 386, "base_width": [138, 139, 140, 141, 142, 143, 144, 156, 157, 158, 175], "baselin": 100, "basic": [29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 105, 147, 159, 160, 161, 162, 163, 164, 176, 177, 178, 203, 205, 209, 210, 211, 235, 236, 237, 238, 239, 240, 241, 245, 246, 268, 269, 270, 284, 288, 289, 290, 291, 292, 293, 294, 299, 300, 303, 304, 319, 324, 325, 326, 330, 359, 360, 361, 372, 442, 482, 514, 515, 516, 517, 518, 519, 520, 521], "basicblock": [147, 151, 154], "batch": [1, 2, 3, 11, 15, 16, 17, 23, 26, 28, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 89, 90, 91, 92, 98, 99, 165, 171, 172, 173, 174, 179, 235, 236, 237, 238, 239, 240, 241, 243, 248, 249, 250, 253, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 268, 269, 270, 274, 275, 276, 278, 279, 280, 281, 282, 286, 287, 288, 289, 290, 318, 319, 321, 322, 323, 327, 340, 342, 344, 345, 348, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 366, 367, 368, 369, 370, 374, 375, 376, 377, 378, 402, 411, 427, 434, 472, 514, 515, 516, 517, 519, 521], "batch_norm": [252, 264, 350, 351, 352], "batch_norm1": 223, "batch_norm2": 223, "batch_siz": [1, 2, 3, 203, 295], "batch_tensor": 472, "batchnorm": [288, 289, 290], "batchnorm1d": [288, 339, 358], "batchnorm1dmodel": 350, "batchnorm2d": [105, 223, 289, 339, 358], "batchnorm2dmodel": 351, "batchnorm3d": [290, 339, 358], "batchnorm3dmodel": 352, "bbox_reg_mean": 209, "bbox_reg_std": 209, "bceloss": [339, 349], "becaus": [2, 408, 411, 417], "becom": [24, 217, 396, 404], "been": [315, 491], "befor": [10, 15, 23, 31, 165, 218, 235, 319, 374, 376, 378, 385, 391, 395, 401, 415, 419, 494, 498, 515, 523], "begin": [1, 24, 225, 228, 229, 230, 246, 281, 305, 307, 308, 309, 310, 312, 331, 346, 347, 348, 365, 366, 367, 368, 369, 370, 402, 404, 410, 421, 428, 429, 431, 448, 453, 461, 463, 466, 479, 480, 491, 494, 504, 505, 506], "behav": [331, 346, 475], "behavior": [10, 16, 100, 220, 223, 235, 267, 319, 327, 388, 409, 421, 427, 438, 508, 523], "being": [222, 287, 329, 332, 333, 334, 335, 402, 409, 422, 483, 484, 489, 510], "belong": 0, "below": [26, 32, 33, 34, 35, 36, 37, 38, 39, 89, 90, 91, 98, 99, 101, 102, 103, 104, 211, 427, 436, 439, 506], "benchmark": [5, 6, 7, 8, 16, 106, 107, 122], "benefici": 223, "benefit": [123, 225, 382, 401], "bernoulli": [329, 332, 333, 334, 335, 414], "best": [122, 271, 299, 300, 303, 304], "beta": [263, 350, 351, 352, 353, 354, 355, 356, 357, 398, 399, 400, 401, 402], "beta1": [398, 399, 400, 401, 402], "beta2": [398, 399, 400, 401, 402], "beta_1": [398, 399, 400, 401, 402], "beta_2": [398, 399, 400, 401, 402], "beta_c": [263, 353], "better": [22, 57, 59, 61, 100, 121, 133, 134, 181, 189, 205, 226, 299, 300, 303, 304, 315, 330, 354, 355, 356, 382, 391, 392, 399, 401, 403, 515], "between": [44, 47, 51, 55, 63, 84, 85, 86, 87, 96, 100, 105, 114, 120, 121, 123, 129, 159, 160, 161, 162, 163, 164, 198, 201, 217, 236, 237, 238, 239, 240, 241, 243, 253, 258, 288, 289, 290, 291, 292, 293, 295, 311, 321, 322, 323, 324, 325, 326, 327, 329, 332, 333, 334, 335, 340, 344, 345, 346, 347, 348, 386, 391, 392, 395, 403, 404, 405, 421, 423, 424, 427, 430, 433, 435, 442, 477, 517, 518, 520, 521], "beyond": [10, 220, 391], "bia": [31, 55, 57, 59, 61, 124, 125, 131, 132, 133, 135, 136, 137, 180, 181, 236, 237, 238, 239, 240, 241, 253, 255, 262, 265, 266, 288, 289, 290, 291, 292, 293, 318, 321, 322, 323, 324, 325, 326, 340, 342, 350, 351, 352, 354, 355, 356, 357, 374, 376, 378, 398, 399, 400, 401, 402], "bias": [65, 100, 321, 322, 323, 342, 357, 382], "bias1": 221, "bias2": 221, "big": [212, 291, 292, 293], "bij": 11, "bik": 11, "bilinear": [252, 254, 281, 282, 286, 339, 343, 380], "bilinearmodel": 340, "bin": [486, 487, 488], "binari": [231, 256, 313, 329, 332, 333, 334, 335, 344], "binary_cross_entropi": [252, 259], "bit": 407, "bjk": 11, "black": 16, "blend": 123, "block": [31, 32, 33, 34, 35, 36, 37, 38, 39, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 92, 97, 100, 105, 106, 107, 109, 112, 113, 114, 116, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 197, 217, 239, 243, 245, 246, 288, 289, 290, 295, 321, 322, 323, 324, 325, 326, 327, 330, 408, 411], "block1": 382, "block2": 382, "block_arg": [147, 165], "block_cfg": 75, "block_config": 69, "block_siz": [245, 330], "block_typ": 31, "blue": 517, "bmatrix": [281, 431], "bn": [288, 289, 290], "bn_affin": [288, 289, 290], "bookkeep": 411, "bool": [1, 5, 6, 7, 8, 24, 28, 55, 74, 88, 89, 90, 124, 125, 131, 132, 133, 135, 136, 137, 138, 147, 180, 181, 211, 217, 218, 235, 244, 246, 247, 248, 249, 250, 262, 265, 281, 282, 286, 288, 289, 290, 291, 292, 293, 318, 319, 321, 322, 323, 324, 325, 326, 331, 340, 342, 350, 351, 352, 354, 355, 356, 357, 374, 375, 376, 377, 378, 380, 385, 386, 387, 388, 389, 390, 391, 392, 398, 399, 403, 407, 409, 413, 415, 416, 417, 418, 420, 422, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 461, 462, 463, 471, 477, 478, 479, 480, 481, 486, 487, 488, 499, 504, 508, 513], "boolean": [491, 511], "boost": 119, "border": 282, "both": [31, 55, 57, 59, 61, 65, 100, 105, 110, 114, 125, 126, 180, 182, 183, 184, 185, 210, 236, 239, 240, 255, 269, 274, 278, 288, 306, 315, 321, 322, 324, 325, 326, 327, 360, 365, 366, 368, 369, 378, 380, 407, 411, 425, 426, 427, 431, 434, 436, 492, 499, 500, 521], "bottleneck": [69, 100, 112, 113, 116, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 294], "bottleneck_cfg": 113, "bottom": 286, "bound": [207, 208, 209, 210, 211, 282, 300, 302, 304, 386, 404, 420, 422, 452, 453], "box": [4, 16, 207, 208, 209, 210, 211], "branch": [55, 88, 89, 90, 100, 295], "break": [10, 382], "breakdown": 210, "brief": 523, "bright": 523, "bring": [10, 337], "broadcast": [15, 16, 334, 335, 434, 462, 471, 477, 497, 509], "broadcast_to": 490, "bucket": 452, "budget": [51, 135], "buffer": [16, 395, 401, 403, 405], "build": [16, 41, 75, 99, 100, 113, 114, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 175, 176, 177, 178, 191, 208, 209, 213, 217, 220, 223, 382, 523], "built": [3, 16, 148, 152, 153, 223, 382, 407, 411, 440, 441], "burg": 8, "c": [5, 6, 8, 11, 13, 31, 100, 147, 159, 160, 161, 162, 163, 164, 176, 177, 178, 211, 243, 245, 248, 249, 250, 257, 261, 262, 263, 265, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 286, 287, 294, 327, 334, 335, 337, 345, 348, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 386, 410, 489, 510, 515], "c_": [11, 208, 321, 322, 323, 324, 325, 326], "c_in": [236, 237, 238, 239, 240, 241, 288, 289, 290], "c_out": [236, 237, 238, 239, 240, 241], "calcul": [0, 1, 17, 218, 380, 396, 397, 400, 401, 402, 411, 417], "calculu": [18, 25], "call": [1, 16, 217, 240, 325, 384, 409, 411, 412, 415, 423, 424, 427, 428, 429, 430, 432, 433], "callabl": [131, 132, 133, 135, 136, 137, 209, 374, 376, 378, 383, 386, 389, 412, 422, 512], "can": [0, 2, 3, 4, 13, 14, 16, 18, 20, 22, 23, 25, 26, 28, 55, 74, 100, 113, 119, 120, 122, 123, 147, 156, 157, 171, 172, 173, 174, 203, 204, 211, 216, 218, 219, 220, 221, 222, 223, 228, 236, 237, 238, 246, 281, 282, 287, 295, 306, 309, 311, 316, 321, 322, 323, 324, 327, 354, 355, 356, 366, 367, 368, 369, 370, 372, 375, 382, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 409, 410, 411, 416, 420, 421, 422, 427, 437, 438, 439, 440, 441, 443, 445, 446, 462, 465, 471, 472, 477, 479, 480, 482, 489, 492, 494, 496, 497, 499, 503, 509, 510, 512, 513, 516, 518, 519, 520, 523], "candid": 211, "cannot": [19, 20, 22, 23, 26, 27, 28, 413, 483], "cap": 311, "capabl": [10, 31, 53, 100, 145, 146, 435, 436, 439, 443, 444, 445, 446], "capac": [42, 43, 44, 50, 54, 100, 105, 106, 107, 108, 110, 111, 119, 127, 132, 136, 137, 156, 157, 158, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 179, 188, 199, 215], "captur": [16, 31, 55, 57, 59, 61, 65, 100, 105, 126, 127, 128, 175, 180, 182, 183, 184, 185, 186, 187, 190, 212, 243, 321, 322, 323, 340], "cardin": [100, 138, 139, 140, 141, 142, 143, 144, 145, 146, 158, 159, 160, 161, 162, 163, 164, 175], "care": 55, "carefulli": [384, 408], "cartesian": 492, "case": [3, 24, 101, 113, 115, 225, 228, 229, 230, 239, 240, 246, 305, 307, 308, 309, 310, 312, 331, 346, 347, 348, 365, 366, 367, 368, 369, 370, 382, 390, 397, 402, 404, 410, 428, 429, 434, 448, 453, 461, 463, 466, 479, 480, 481, 491, 494, 504, 505, 506, 523], "cast": 440, "categor": [284, 372], "categori": [7, 106, 107, 148, 149, 150, 151, 152, 153, 154, 155, 209, 210, 211, 372, 407], "caus": [3, 25, 384, 395, 403, 405], "causal": [235, 319], "cautiou": [0, 10], "cdot": [16, 18, 19, 22, 23, 24, 27, 55, 105, 208, 212, 225, 226, 228, 230, 231, 235, 236, 237, 238, 239, 240, 241, 253, 255, 263, 268, 269, 270, 271, 274, 275, 276, 278, 279, 280, 281, 284, 286, 294, 303, 304, 306, 307, 308, 313, 315, 319, 327, 329, 340, 342, 344, 345, 346, 348, 350, 351, 352, 353, 354, 355, 356, 357, 372, 385, 386, 387, 389, 390, 392, 396, 397, 398, 399, 400, 401, 402, 404, 425, 426, 427, 430, 432, 434, 465], "ceil": 447, "center": [281, 282, 287, 316, 403, 514, 523], "centercrop": [522, 523], "certain": [19, 226, 235, 253, 315, 319, 340, 378, 391, 398, 399, 409, 461, 463], "cfg": [114, 117, 118], "chain": [16, 22, 23, 223, 512, 523], "challeng": [7, 100, 126], "cham": 100, "chanc": [517, 518, 520], "chang": [10, 258, 281, 282, 346, 390, 404, 408, 410, 412, 422, 495, 497, 509, 517, 523], "chanlumerico": 16, "channel": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 65, 66, 67, 68, 69, 74, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 117, 118, 124, 125, 130, 131, 132, 133, 134, 135, 136, 137, 138, 145, 146, 147, 158, 159, 160, 161, 162, 163, 164, 169, 171, 172, 173, 174, 179, 180, 181, 192, 203, 209, 210, 211, 236, 237, 238, 239, 240, 241, 243, 248, 249, 250, 262, 263, 265, 268, 269, 270, 274, 275, 276, 278, 279, 280, 281, 282, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 321, 322, 323, 324, 325, 326, 334, 335, 350, 351, 352, 353, 354, 355, 356, 359, 365, 366, 367, 368, 369, 370, 515, 517, 521], "character": [156, 157], "check": [16, 409, 422, 514, 516], "checkpoint": 394, "chen": [55, 100], "choic": [121, 123, 492], "choleski": 21, "chollet": 100, "choos": [100, 481, 511], "chosen": [329, 330, 384, 511], "christian": 100, "christoph": 8, "chu": 100, "chun": 100, "chunk": 490, "cifar": [5, 6], "cifar10": 9, "cifar100": 9, "cifar100_train": 6, "cifar10_train": 5, "clariti": [13, 14, 15], "class": [3, 4, 16, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 98, 99, 102, 103, 104, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 206, 207, 214, 215, 232, 246, 257, 261, 382, 394, 411, 412, 415, 523], "classic": [104, 211], "classif": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523], "classifi": [29, 88, 89, 90, 101, 102, 103, 104, 105, 147, 158, 175, 192, 203, 205, 207, 208, 209, 210, 211], "clean": 411, "cleaner": [1, 427], "cleanli": 105, "cleanup": 408, "clear": [218, 437, 438, 442], "clf_in_featur": 101, "clf_layer": 101, "clip": [287, 307, 311, 404, 447], "clockwis": 287, "close": [22, 25, 312, 344, 403], "closer": 305, "closur": [383, 394], "cloth": 7, "cnn": [31, 57, 59, 61, 100], "co": [100, 385, 447, 467], "coars": 100, "coatnet": [32, 33, 34, 35, 36, 37, 38, 39], "coatnet_0": 100, "coatnet_1": 100, "coatnet_2": 100, "coatnet_3": 100, "coatnet_4": 100, "coatnet_5": 100, "coatnet_6": 100, "coatnet_7": 100, "code": [10, 16, 23, 219, 221, 223, 408, 409, 411, 421], "coeffici": [27, 74, 286, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405], "col": 243, "collaps": 10, "collect": [4, 17, 207, 219, 220, 222, 223, 394], "color": [211, 517, 523], "colorjitt": 523, "column": [19, 20, 22, 26, 27, 28, 243, 327, 439, 489, 492], "com": [7, 8, 16], "combin": [1, 3, 13, 31, 55, 91, 97, 98, 100, 105, 123, 127, 179, 207, 208, 220, 223, 225, 226, 288, 289, 290, 294, 295, 306, 327, 330, 337, 345, 382, 401, 402, 462, 471, 477, 484, 523], "combined_dataset": [0, 1], "common": [182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 243, 287, 394, 407, 523], "commonli": [111, 112, 113, 115, 116, 117, 118, 121, 123, 226, 231, 232, 233, 236, 238, 239, 240, 241, 246, 253, 260, 262, 265, 282, 284, 287, 294, 303, 304, 307, 308, 311, 314, 319, 323, 324, 325, 344, 347, 348, 365, 366, 367, 368, 369, 370, 372, 374, 410, 443, 501, 513, 514, 515, 516, 518, 519, 520, 523], "compact": [45, 46, 48, 53, 96, 108, 121, 131, 132], "compar": [31, 44, 45, 68, 100, 108, 125, 133, 156, 157, 205, 421, 502], "compat": [4, 10, 11, 16, 17, 175, 337, 341, 357, 382, 410, 421, 442, 482, 513, 523], "competit": [46, 52, 53], "complet": [213, 374, 375, 377], "complex": [2, 3, 10, 11, 16, 20, 31, 43, 49, 54, 99, 106, 107, 122, 125, 126, 127, 128, 129, 133, 134, 135, 147, 150, 153, 154, 167, 169, 187, 215, 216, 218, 219, 220, 223, 229, 235, 287, 297, 301, 302, 303, 304, 310, 319, 368, 370, 382, 389, 394, 398, 399, 400, 401, 402, 404, 407, 413, 415, 420, 422, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 453, 478, 481, 491, 513, 523], "complex64": 407, "compon": [25, 88, 89, 90, 91, 97, 98, 99, 108, 109, 210, 211, 213, 217, 220, 394, 422, 523], "compos": [5, 6, 7, 8, 105, 203, 321, 322, 323, 365, 366, 367, 368, 369, 370, 382, 511, 523], "compound": 75, "comprehens": [3, 62], "compris": [156, 157], "compromis": [120, 123], "comput": [10, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 31, 44, 45, 46, 48, 49, 51, 52, 55, 65, 93, 96, 100, 105, 111, 113, 114, 117, 118, 119, 120, 121, 122, 123, 125, 126, 129, 130, 134, 145, 146, 147, 158, 159, 160, 161, 162, 163, 164, 165, 171, 172, 173, 174, 179, 180, 199, 200, 208, 209, 210, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 239, 243, 253, 255, 256, 257, 258, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 272, 273, 282, 286, 288, 289, 290, 291, 292, 293, 294, 295, 299, 300, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 321, 322, 323, 325, 327, 329, 330, 332, 333, 334, 335, 340, 342, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 362, 363, 364, 365, 366, 367, 368, 369, 370, 374, 375, 376, 377, 378, 382, 383, 385, 386, 387, 388, 389, 390, 392, 394, 395, 403, 408, 409, 410, 411, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 442, 443, 444, 445, 446, 448, 449, 450, 451, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 482, 492, 494, 496, 503, 513, 523], "computation": [3, 13, 25, 148, 307, 308, 337], "compute_grad": 483, "compute_loss": [394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405], "concat": 318, "concaten": [0, 236, 237, 238, 318, 434, 489, 490, 502, 510], "concept": [25, 100, 112, 207, 434], "concis": [10, 11, 13, 15], "concurr": 408, "cond": 511, "condit": [18, 19, 22, 511], "confer": [100, 208], "confid": 210, "config": 192, "configur": [16, 30, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 101, 102, 103, 104, 105, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 198, 199, 200, 201, 202, 204, 206, 209, 210, 211, 215, 222, 288, 289, 290, 319, 407], "confirm": 16, "conjunct": [243, 348], "connect": [29, 40, 69, 70, 71, 72, 73, 74, 75, 91, 97, 98, 99, 100, 101, 102, 103, 104, 105, 147, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 175, 176, 177, 178, 192, 203, 205, 209, 210, 211, 239, 255, 294, 295, 321, 322, 323, 324, 325, 326, 342, 376, 378], "consecut": 192, "consid": [3, 22, 25, 69, 119, 120, 121, 123, 223, 299, 300, 303, 304, 327, 382, 404, 407, 409, 437, 438, 505, 506, 523], "consider": 25, "consist": [2, 4, 7, 11, 14, 29, 55, 102, 103, 104, 147, 211, 216, 268, 269, 270, 295, 318, 359, 360, 361, 374, 376, 378, 419, 421, 494, 514, 521, 523], "consistent_tensor": 421, "constant": [256, 257, 262, 263, 265, 266, 267, 298, 312, 344, 345, 350, 351, 352, 353, 354, 355, 356, 357, 374, 376, 378, 392, 396, 397, 398, 399, 400, 401, 402, 403, 440, 441, 481, 491, 494], "constant_pad": 494, "constrain": [46, 48, 51, 121], "constraint": [1, 13, 31, 111, 113, 120, 134, 295, 337], "construct": [16, 70, 71, 72, 73, 92, 106, 107, 108, 123, 138, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 176, 177, 178, 193, 194, 195, 196, 213, 220, 382, 436, 496, 503, 505, 506], "constructor": [16, 32, 33, 34, 35, 36, 37, 38, 39, 70, 71, 72, 73, 84, 85, 86, 87, 106, 107, 108, 109, 110, 115, 116, 117, 118, 139, 140, 141, 142, 143, 144, 145, 146, 156, 157, 171, 172, 173, 174, 179, 193, 194, 195, 196], "consumpt": 123, "contain": [1, 5, 6, 7, 8, 19, 20, 25, 26, 27, 28, 97, 101, 147, 158, 159, 160, 161, 162, 163, 164, 165, 175, 192, 210, 217, 219, 220, 221, 222, 223, 232, 235, 243, 253, 255, 256, 257, 261, 282, 284, 286, 344, 345, 348, 383, 415, 423, 424, 425, 426, 428, 429, 430, 431, 433, 435, 438, 442, 448, 449, 450, 451, 454, 455, 456, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 477, 483, 485, 488, 492, 500, 504], "content": [207, 287], "context": [100, 105, 186, 188, 189, 281, 408, 409, 411, 422], "contextmanag": 408, "contextu": [66, 67, 68, 126, 182, 183, 184, 185], "contigu": [245, 330, 495], "continu": [309, 387, 392, 418, 458], "contract": [11, 13], "contrast": [213, 354, 355, 356, 523], "contribut": [245, 286, 329, 332, 333, 334, 335, 365, 368, 369, 370, 395, 401, 475], "control": [10, 15, 31, 40, 125, 126, 158, 295, 305, 346, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 409, 421, 422, 440, 513, 523], "conv": [97, 100, 165, 209, 210, 211, 288, 289, 290, 351, 352], "conv1": [102, 103, 104, 223, 321, 322, 323, 365, 366, 367, 368, 369, 370], "conv1d": [242, 252, 288, 291, 324, 328, 339, 365, 368], "conv1dmodel": 321, "conv2": [102, 103, 104, 223, 321, 322, 323], "conv2d": [209, 210, 211, 220, 223, 242, 252, 289, 292, 325, 328, 337, 339, 351, 366, 369, 382], "conv2dmodel": 322, "conv3d": [242, 252, 290, 293, 328, 339, 352, 367, 370], "conv3dmodel": 323, "conv_bia": [288, 289, 290], "conv_config": 192, "conv_lay": [101, 220], "conv_transpose1d": [242, 252], "conv_transpose2d": [242, 252], "conv_transpose3d": [242, 252], "convblock": 382, "convbnrelu1d": 296, "convbnrelu2d": 296, "convbnrelu3d": 296, "conveni": [4, 30, 56, 57, 58, 59, 60, 61, 62, 63, 64, 206, 481], "convent": [11, 427], "converg": [25, 316, 384, 385, 386, 388, 391, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 515], "convers": [345, 348, 517, 523], "convert": [5, 6, 7, 8, 55, 192, 216, 218, 232, 284, 314, 492, 512, 513, 517, 523], "convnet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523], "convnetwork": 220, "convnext": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "convnext_bas": 100, "convnext_larg": 100, "convnext_smal": 100, "convnext_tini": 100, "convnext_v2": [46, 47, 48, 49, 50, 51, 52, 53], "convnext_v2_atto": 100, "convnext_v2_bas": 100, "convnext_v2_femto": 100, "convnext_v2_hug": 100, "convnext_v2_larg": 100, "convnext_v2_nano": 100, "convnext_v2_pico": 100, "convnext_v2_tini": 100, "convnext_xlarg": 100, "convolut": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 55, 57, 59, 61, 65, 66, 67, 68, 69, 74, 76, 77, 78, 79, 80, 81, 82, 83, 89, 90, 92, 97, 101, 102, 103, 104, 105, 111, 113, 117, 118, 119, 120, 121, 122, 123, 138, 145, 146, 147, 158, 159, 160, 161, 162, 163, 164, 165, 171, 172, 173, 174, 175, 179, 192, 203, 205, 206, 208, 209, 210, 211, 220, 236, 237, 238, 239, 240, 241, 243, 288, 289, 290, 291, 292, 293, 294, 295, 321, 322, 323, 324, 325, 326, 327, 366, 367, 369, 370, 472, 494], "convolv": [236, 237, 238, 239, 240, 321, 322, 323, 324, 325, 326], "convtranspose1d": [328, 339], "convtranspose2d": [326, 328, 339], "convtranspose3d": [328, 339], "cooldown": 391, "coordin": [281, 282, 487, 492, 493], "copi": [10, 482, 507], "core": [0, 1, 2, 3, 55, 217, 382, 383, 407, 422, 523], "corinna": 8, "corner": [281, 282, 286, 380, 514, 516], "correct": [219, 345, 348, 398, 399, 400, 401, 402, 491, 499, 505, 506, 513], "correctli": [25, 217, 219, 220, 221, 222, 223, 345, 348, 421, 482, 483], "correl": [324, 325], "correspond": [0, 1, 2, 5, 6, 7, 8, 20, 114, 115, 117, 118, 156, 157, 176, 177, 178, 182, 183, 184, 185, 191, 219, 221, 223, 225, 226, 228, 229, 230, 231, 232, 233, 236, 237, 238, 243, 253, 255, 284, 286, 307, 310, 314, 340, 342, 350, 351, 352, 354, 355, 356, 366, 367, 372, 395, 403, 405, 407, 413, 425, 426, 428, 429, 432, 452, 457, 458, 459, 460, 467, 469, 481, 482, 483, 489, 493, 494, 496, 498, 503, 507, 510], "cort": 8, "cosh": [447, 468, 474], "cosin": [385, 449, 454, 455, 467], "cosineannealinglr": 393, "cost": [65, 100, 111, 113, 114, 120, 121, 123, 134, 158, 291, 292, 293, 408], "could": 217, "count": [100, 114, 131, 132, 133, 135, 136, 137, 208, 212, 385, 390, 408, 481, 484, 486, 487], "counterclockwis": [287, 519], "cover": [17, 236, 237, 238, 415], "coverag": [105, 268, 269, 270], "cpu": [11, 16, 216, 218, 407, 413, 415, 416, 417, 418, 420, 422, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 478, 481, 493], "craft": 16, "creat": [2, 3, 16, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 98, 99, 102, 103, 104, 113, 115, 116, 117, 118, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 179, 192, 193, 194, 195, 196, 204, 205, 206, 214, 215, 216, 217, 220, 223, 281, 295, 311, 318, 374, 375, 376, 377, 378, 382, 410, 411, 412, 421, 435, 439, 440, 441, 442, 443, 444, 445, 446, 482, 492, 502, 512, 523], "creation": [84, 85, 86, 87, 220, 223, 408, 523], "criterion": [344, 345, 346, 347, 348], "critic": [25, 121, 136, 394, 421], "crop": [209, 211, 514, 516, 523], "cross": [55, 100, 180, 256, 257, 324, 325, 344, 345, 374, 375, 376], "cross_entropi": [252, 259], "crossattent": 55, "crossentropyloss": [339, 349], "crossvit": [56, 57, 58, 59, 60, 61, 62, 63, 64], "crossvit_15": 100, "crossvit_15_dagg": 100, "crossvit_18": 100, "crossvit_18_dagg": 100, "crossvit_9": 100, "crossvit_9_dagg": 100, "crossvit_bas": 100, "crossvit_smal": 100, "crossvit_tini": 100, "crucial": [10, 384], "cube": 447, "cumul": [226, 306], "current": [217, 385, 386, 387, 388, 389, 390, 391, 392, 395, 398, 404, 409, 481], "custom": [4, 16, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 76, 77, 78, 79, 80, 81, 82, 83, 93, 94, 95, 96, 98, 99, 101, 105, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 166, 167, 168, 169, 170, 171, 172, 173, 174, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 198, 199, 200, 201, 202, 204, 205, 206, 209, 210, 211, 216, 219, 220, 221, 222, 223, 287, 288, 289, 290, 305, 309, 327, 374, 382, 386, 389, 408, 421, 439, 442, 500], "custom_config": 192, "custom_decod": 374, "custom_encod": 374, "custom_lenet": 101, "customiz": [131, 523], "custommodul": 216, "customnetwork": 219, "customparametermodel": [221, 222], "cut": 122, "cv": 207, "cvf": 100, "cvpr": 100, "cvt": [66, 67, 68], "cvt_13": 100, "cvt_21": 100, "cvt_w24": 100, "cvtspec": 65, "cycl": 386, "cycle_momentum": 386, "cyclic": [385, 386, 498], "cycliclr": 393, "d": [31, 100, 235, 238, 241, 250, 270, 273, 276, 280, 290, 319, 326, 327, 352, 356, 357, 361, 364, 367, 370, 410, 436, 465, 488, 493, 519], "d_": [212, 238, 241, 270, 273, 276, 280, 318, 323, 326, 361, 364, 367, 370, 374, 375, 376, 377, 378], "d_1": [13, 14, 15, 337, 357], "d_2": [13, 14, 15, 337, 357], "d_h": [318, 327, 376, 378], "d_k": [31, 55, 105], "d_model": [197, 213, 214, 215, 374, 375, 376, 377, 378], "d_n": [13, 14, 15, 337, 357], "d_out": [238, 241, 276, 280], "d_w": 327, "dag": 16, "dai": 100, "dampen": [395, 403, 405], "data": [4, 5, 6, 7, 8, 10, 16, 23, 100, 187, 207, 212, 216, 218, 222, 233, 236, 238, 241, 243, 249, 250, 255, 284, 287, 288, 289, 290, 295, 310, 316, 321, 322, 323, 342, 356, 365, 367, 370, 377, 383, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 410, 415, 421, 422, 423, 424, 430, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 465, 472, 478, 481, 482, 486, 494, 495, 496, 497, 499, 500, 501, 503, 512, 513, 516, 517, 518, 519, 520, 523], "data_dtyp": 407, "databas": 8, "dataload": [2, 3], "dataset": [3, 5, 6, 7, 8, 43, 84, 85, 86, 87, 102, 103, 104, 105, 106, 107, 110, 111, 114, 119, 126, 137, 147, 148, 149, 150, 151, 152, 153, 154, 155, 287, 397, 512, 514, 523], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 431, "debug": [16, 223, 409, 419, 523], "decai": [330, 384, 385, 387, 389, 390, 391, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405], "decim": 465, "declar": [13, 14, 15, 337], "decod": [213, 239, 240, 241, 324, 325, 326, 374, 375, 376], "decoder3d": 326, "decoder_lay": [375, 376], "decoderlay": 375, "decompos": [18, 26, 28], "decomposit": [17, 18, 22, 25, 26, 28], "deconv": 326, "deconv1": [324, 325], "deconv1d": 324, "deconv2d": 325, "deconv3d": 326, "deconvolut": [239, 240, 241, 324, 325], "decor": [159, 160, 161, 162, 163, 164, 411, 412], "decoupl": [100, 396, 397, 399, 400, 401, 402], "decreas": [386, 391, 398, 399, 404], "deep": [1, 3, 4, 10, 14, 16, 94, 95, 97, 100, 126, 147, 148, 149, 150, 152, 153, 159, 160, 161, 162, 163, 164, 166, 167, 170, 207, 212, 262, 306, 312, 337, 382, 384, 421, 442, 500, 505, 506, 512, 513, 523], "deepen": 135, "deeper": [67, 89, 91, 99, 100, 106, 107, 125, 128, 133, 136, 147, 154, 187, 188, 312], "defdefault": [1, 5, 6, 7, 8, 14, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 228, 232, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 274, 275, 276, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 300, 301, 302, 303, 304, 305, 309, 314, 318, 319, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 340, 342, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 365, 366, 367, 368, 369, 370, 372, 374, 375, 376, 377, 378, 380, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 401, 409, 413, 415, 416, 417, 418, 420, 422, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 453, 461, 462, 463, 465, 471, 476, 477, 478, 479, 480, 481, 483, 484, 486, 487, 489, 492, 494, 496, 498, 499, 500, 502, 504, 505, 506, 507, 508, 510, 513, 517, 518, 520], "defer": 16, "defin": [1, 3, 4, 10, 14, 16, 31, 40, 55, 65, 69, 75, 88, 89, 90, 91, 97, 98, 99, 101, 113, 123, 138, 147, 165, 176, 177, 178, 192, 209, 211, 219, 220, 221, 222, 223, 246, 306, 308, 311, 315, 344, 345, 346, 347, 348, 365, 380, 382, 384, 386, 389, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 417, 418, 432, 438, 453, 476, 512, 523], "definit": [16, 18, 288, 289, 290, 523], "degre": [287, 519, 523], "delai": 395, "deliv": [16, 121, 122, 137], "delta": [13, 232, 258, 314, 337, 346, 396], "delta_": [13, 232, 314, 337], "demand": [110, 122, 135, 136], "demonstr": [17, 171, 172, 173, 174, 179, 207, 382], "demystifi": 16, "denomin": [262, 263, 265, 266, 288, 289, 290, 350, 351, 352, 353, 354, 355, 356, 357, 374, 376, 378, 396, 397, 398, 399, 400, 401, 402, 403, 424], "denot": [23, 145, 146, 313, 318, 321, 322, 323, 329, 332, 333, 334, 335, 476], "dens": [69, 70, 71, 72, 73, 100, 180, 182, 183, 184, 185, 209, 210, 246, 284, 372, 397], "densenet": [70, 71, 72, 73, 294], "densenet_121": 100, "densenet_169": 100, "densenet_201": 100, "densenet_264": 100, "densiti": [226, 306, 486, 487, 488], "depend": [11, 16, 23, 24, 31, 100, 105, 113, 126, 127, 180, 182, 183, 184, 185, 186, 187, 212, 222, 256, 257, 258, 260, 261, 286, 321, 425, 434, 436, 461, 463, 496, 503, 504, 516, 517, 521], "deploy": [123, 131, 134], "depth": [31, 40, 41, 42, 43, 44, 45, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 74, 75, 92, 100, 105, 106, 107, 108, 109, 110, 119, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 197, 220, 238, 241, 246, 250, 270, 273, 276, 280, 323, 331, 352, 356, 361, 367, 370], "depth_coef": 74, "depthseparableconv1d": 296, "depthseparableconv2d": 296, "depthseparableconv3d": 296, "depthwis": [31, 40, 65, 66, 67, 68, 92, 100, 111, 203, 236, 237, 238, 239, 240, 291, 292, 293], "depthwise_separ": [291, 292, 293], "der": 100, "deriv": [16, 25, 26, 232, 268, 269, 270, 306, 314, 316, 321, 322, 323, 340, 342, 412], "descend": [28, 499, 504], "descent": [395, 405], "describ": [10, 11, 19, 20, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], "descript": [207, 523], "deseri": 216, "design": [3, 4, 14, 17, 29, 30, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 53, 55, 66, 67, 68, 84, 85, 86, 87, 89, 90, 91, 93, 96, 100, 102, 103, 104, 105, 106, 107, 113, 114, 119, 120, 121, 122, 123, 124, 126, 129, 136, 148, 149, 150, 151, 152, 153, 154, 155, 166, 169, 180, 187, 188, 199, 203, 206, 207, 212, 218, 220, 221, 222, 223, 225, 230, 312, 329, 382, 523], "desir": [10, 15, 204, 216, 268, 269, 270, 271, 272, 273, 330, 359, 360, 361, 362, 380, 384, 440, 441, 476, 478], "despit": 267, "destin": 217, "det": [17, 21], "det_a": 19, "detail": [57, 59, 61, 65, 126, 187, 210, 394, 421, 427], "detect": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523], "determin": [0, 17, 18, 19, 55, 101, 105, 156, 157, 268, 269, 270, 271, 299, 300, 303, 304, 321, 322, 323, 359, 360, 361, 366, 367, 369, 370, 386, 403, 409, 413, 416, 417, 418, 420, 434, 437, 438, 500, 508, 514, 516], "determinist": 287, "develop": [10, 16, 114, 382, 421, 523], "deviat": [299, 301, 303, 512, 515, 523], "devic": [11, 112, 113, 119, 120, 216, 218, 407, 413, 415, 416, 417, 418, 420, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 452, 458, 465, 478, 493], "diag": [25, 447], "diagon": [25, 26, 28, 436, 439, 475, 505, 506], "diagonaliz": 20, "dict": [10, 13, 14, 15, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 98, 99, 101, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 156, 157, 159, 160, 161, 162, 163, 164, 165, 171, 172, 173, 174, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 198, 199, 200, 201, 202, 204, 206, 217, 219, 221, 337, 341, 383, 388], "dictionari": [101, 114, 121, 217, 218, 219, 221, 223, 383, 388], "differ": [0, 10, 14, 23, 55, 66, 67, 68, 88, 92, 100, 101, 113, 114, 120, 121, 124, 126, 127, 128, 129, 130, 171, 172, 173, 174, 179, 181, 190, 220, 223, 232, 253, 286, 295, 314, 340, 347, 384, 391, 394, 407, 410, 419, 421, 433, 446, 477, 501, 523], "differenti": [18, 27, 281, 282, 284, 306, 382, 413, 415, 416, 417, 418, 420, 422, 435, 437, 438, 443, 445, 452, 458, 465, 493, 508, 511], "difficult": 128, "digit": [7, 8, 100, 104], "dilat": [236, 237, 238, 239, 240, 241, 288, 289, 290, 291, 292, 293, 321, 322, 323, 324, 325, 326, 327], "dilation_height": 243, "dilation_width": 243, "dim": [40, 41, 55, 92, 235, 267, 319, 345, 348, 498], "dim_feedforward": [213, 374, 376, 378], "dimens": [10, 13, 14, 15, 19, 20, 22, 23, 26, 27, 28, 29, 40, 42, 43, 44, 45, 54, 55, 66, 67, 68, 100, 105, 109, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 147, 158, 175, 180, 181, 182, 183, 192, 197, 205, 211, 213, 218, 232, 235, 240, 241, 253, 255, 262, 263, 265, 266, 267, 269, 270, 272, 273, 286, 294, 295, 314, 318, 319, 321, 322, 323, 324, 327, 330, 337, 350, 351, 352, 354, 355, 356, 357, 360, 361, 363, 364, 366, 367, 368, 369, 370, 374, 376, 377, 378, 380, 410, 416, 420, 422, 426, 434, 437, 461, 462, 463, 471, 472, 475, 476, 477, 479, 480, 482, 483, 484, 488, 489, 493, 494, 496, 498, 501, 502, 503, 507, 509, 510, 514, 516, 521], "dimension": [10, 11, 23, 25, 26, 28, 92, 211, 236, 237, 238, 239, 240, 241, 274, 275, 276, 278, 279, 280, 295, 318, 321, 322, 323, 324, 327, 333, 334, 335, 350, 351, 352, 354, 355, 356, 365, 366, 367, 368, 369, 370, 374, 376, 378, 410, 415, 426, 427, 431, 434, 436, 457, 462, 471, 472, 475, 477, 485, 488, 495, 496, 501, 503, 505, 506], "diminish": [384, 397], "direct": [16, 20, 344, 345, 346, 347, 348, 395, 403, 404, 405, 498], "directli": [84, 85, 86, 87, 100, 209, 219, 220, 221, 222, 286, 337, 380, 396, 397, 399, 400, 401, 402, 419, 421, 478, 507, 523], "directori": [3, 4, 5, 6, 7, 8], "disabl": [246, 330, 331, 409, 411], "discard": 211, "discontinu": 466, "discrep": [344, 345, 348], "discret": [413, 417, 421, 458], "disk": 3, "displai": [30, 56, 57, 58, 59, 60, 61, 62, 63, 64, 206], "disrupt": 452, "distinct": [105, 114, 213], "distribut": [187, 226, 232, 245, 286, 299, 300, 301, 302, 303, 304, 306, 314, 321, 322, 323, 329, 330, 332, 333, 334, 335, 340, 342, 345, 348, 365, 366, 367, 413, 416, 417, 418, 420, 421, 462, 471, 475, 477, 499, 502, 515, 517, 518, 519, 520], "div": 447, "divers": [47, 100, 105, 287, 518, 520, 523], "diversifi": 523, "divid": [1, 25, 100, 105, 180, 181, 197, 198, 199, 200, 201, 202, 220, 223, 232, 236, 237, 238, 240, 314, 344, 345, 346, 347, 348, 424, 483, 500, 515], "divis": [25, 236, 237, 238, 241, 267, 318, 329, 332, 333, 334, 335, 374, 376, 378, 396, 397, 398, 399, 400, 401, 402, 403, 424, 500], "dl": 16, "do": [25, 27, 216, 219, 220, 221, 222, 244, 247, 248, 249, 382, 384, 402, 409, 411, 446, 475, 494], "doc": 207, "document": [4, 100, 394, 421], "doe": [23, 24, 25, 26, 28, 213, 216, 219, 220, 221, 222, 223, 267, 304, 391, 398, 399, 404, 408, 409, 411, 413, 416, 417, 418, 419, 420, 435, 436, 437, 438, 439, 443, 444, 445, 446, 481, 482, 491, 493, 497, 498, 508], "doi": 100, "domain": [4, 134], "dosovitskii": 100, "dot": [11, 13, 14, 15, 20, 23, 124, 125, 219, 220, 221, 222, 223, 235, 318, 319, 337, 357, 368, 369, 370, 426, 431, 434, 447, 484, 489, 502, 510], "down": [3, 382, 458, 521], "download": [4, 5, 6, 7, 8], "downsampl": 138, "draw": 207, "drawback": 225, "drawn": [416, 417, 418, 420, 421, 519], "drop": [40, 41, 92, 105, 245, 246, 329, 330, 331, 332, 333, 334, 335], "drop_block": [251, 252], "drop_path": [40, 41, 105, 251, 252, 331], "drop_path_r": [55, 75, 92, 124, 125, 180, 181], "drop_prob": 331, "drop_rat": [55, 92, 124, 125, 180, 181], "dropblock": [245, 336, 339], "dropout": [29, 55, 74, 75, 84, 85, 86, 87, 90, 92, 100, 105, 108, 109, 124, 125, 180, 181, 192, 197, 205, 209, 210, 213, 226, 235, 244, 248, 249, 250, 318, 319, 329, 330, 333, 334, 335, 374, 376, 378], "dropout1d": [251, 252, 336, 339], "dropout1dmodel": 333, "dropout2d": [251, 252, 336, 339], "dropout3d": [251, 252, 336, 339], "dropout_p": [235, 319], "dropout_prob": 90, "dropout_r": 197, "dropoutmodel": 332, "droppath": [336, 339], "dtype": [216, 218, 284, 372, 407, 415, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 478, 493, 508, 513], "due": [23, 25, 69, 110, 122, 236, 237, 239, 240, 310, 458, 519], "dummi": [209, 211], "duplic": [10, 15, 219, 221], "dure": [3, 16, 19, 20, 22, 25, 26, 28, 31, 75, 88, 89, 90, 100, 125, 147, 211, 216, 217, 218, 219, 220, 221, 222, 223, 232, 244, 245, 246, 247, 248, 249, 250, 262, 265, 287, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 321, 322, 323, 329, 330, 331, 332, 333, 334, 335, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 365, 366, 367, 368, 369, 370, 372, 380, 382, 384, 388, 391, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 408, 409, 411, 415, 422, 423, 452, 458, 461, 462, 463, 471, 477, 491, 498, 513, 516, 519, 523], "dy": [228, 309], "dynam": [0, 2, 3, 16, 31, 100, 175, 179, 217, 220, 221, 222, 223, 268, 269, 270, 271, 295, 330, 357, 359, 360, 361, 362, 364, 384, 388, 389, 391, 397, 402, 407, 409], "dynamicnetwork": 220, "e": [0, 10, 11, 16, 19, 20, 22, 23, 26, 28, 55, 65, 74, 76, 77, 78, 79, 80, 81, 82, 83, 89, 90, 91, 98, 99, 101, 102, 103, 104, 110, 138, 180, 181, 192, 211, 216, 232, 295, 313, 314, 315, 318, 325, 329, 345, 383, 396, 403, 404, 407, 422, 439, 440, 455, 457, 459, 468, 474, 475, 484, 517], "each": [1, 2, 3, 4, 16, 20, 23, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 66, 67, 68, 69, 75, 92, 100, 101, 105, 111, 113, 114, 115, 117, 118, 124, 125, 126, 127, 128, 129, 130, 133, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 197, 205, 207, 208, 209, 210, 211, 213, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 243, 253, 255, 262, 265, 268, 269, 270, 271, 272, 273, 281, 282, 284, 294, 295, 307, 310, 314, 318, 321, 322, 323, 327, 329, 332, 333, 334, 335, 340, 342, 344, 345, 348, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 365, 366, 367, 368, 369, 370, 372, 374, 375, 376, 377, 382, 384, 385, 386, 387, 388, 389, 390, 392, 396, 397, 398, 399, 400, 401, 402, 403, 404, 408, 413, 422, 423, 424, 427, 428, 429, 430, 431, 432, 433, 442, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 477, 481, 483, 484, 488, 489, 492, 493, 494, 496, 498, 499, 500, 502, 503, 507, 510, 512, 513, 514, 515, 516, 517, 519, 521, 523], "earli": [31, 100, 402], "earlier": 114, "eas": 4, "easi": [2, 3, 4, 10, 159, 160, 161, 162, 163, 164, 218, 219, 221], "easier": [3, 219, 220, 223], "easili": [4, 114, 218, 222, 523], "eccv": 100, "economi": 28, "edg": [16, 113, 122, 131, 486, 487, 488, 494], "edu": [5, 6], "educ": 207, "effect": [14, 55, 57, 59, 61, 65, 100, 109, 186, 190, 212, 219, 220, 221, 222, 223, 232, 236, 237, 238, 243, 305, 306, 310, 313, 314, 316, 350, 351, 352, 354, 355, 356, 357, 380, 384, 385, 386, 391, 409, 410, 489, 510], "effici": [1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 22, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 44, 45, 46, 48, 51, 52, 53, 55, 60, 65, 66, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 92, 93, 95, 96, 98, 99, 100, 105, 108, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 158, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 179, 180, 182, 183, 184, 185, 187, 198, 201, 203, 209, 243, 291, 292, 293, 307, 308, 311, 337, 345, 382, 384, 385], "efficientnet": [75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "efficientnet_b0": 100, "efficientnet_b1": 100, "efficientnet_b2": 100, "efficientnet_b3": 100, "efficientnet_b4": 100, "efficientnet_b5": 100, "efficientnet_b6": 100, "efficientnet_b7": 100, "efficientnet_v2": [84, 85, 86, 87], "efficientnet_v2_": 100, "efficientnet_v2_l": 100, "efficientnet_v2_m": 100, "efficientnet_v2_xl": 100, "efficientnetv2": 100, "eig": 21, "eigenvalu": [20, 26], "eigenvector": 20, "eigval": 20, "eigvec": 20, "einop": 337, "einstein": [10, 11, 13, 14, 15, 337], "einsum": 12, "either": [16, 255, 380, 411, 413, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 478, 492, 511], "element": [0, 10, 13, 15, 25, 26, 90, 100, 218, 222, 225, 226, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 243, 244, 246, 247, 248, 249, 250, 284, 288, 289, 290, 291, 292, 293, 294, 307, 308, 310, 314, 315, 321, 322, 323, 324, 325, 326, 327, 329, 331, 332, 333, 334, 335, 337, 344, 345, 346, 347, 348, 357, 364, 365, 366, 367, 368, 369, 370, 410, 413, 415, 422, 423, 424, 427, 428, 429, 430, 431, 432, 433, 435, 439, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 473, 474, 475, 477, 481, 485, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 508, 511], "elementwise_affin": 357, "elimin": [13, 15, 210], "elsewher": [368, 369, 370, 439], "elu": [227, 252, 317, 339], "elumodel": 305, "embed": [55, 57, 59, 61, 66, 67, 68, 105, 109, 111, 112, 113, 114, 116, 117, 118, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 180, 181, 182, 183, 197, 235, 252, 285, 318, 319, 339, 373, 374, 376, 377, 378, 507], "embed_dim": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 105, 106, 107, 108, 109, 110, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 180, 181, 182, 183, 318, 374, 375, 376, 377, 378], "embedding_dim": [197, 284, 372], "embedding_lay": 372, "embedding_matrix": 284, "emphas": [114, 121], "emploi": [31, 55, 57, 59, 61, 75, 122], "empti": [217, 223, 447, 483], "empty_lik": 447, "enabl": [0, 1, 2, 3, 10, 11, 13, 14, 15, 23, 28, 66, 67, 68, 74, 98, 100, 105, 108, 124, 125, 130, 134, 138, 175, 176, 177, 178, 180, 182, 183, 191, 207, 208, 212, 217, 218, 219, 220, 221, 222, 235, 246, 310, 318, 319, 321, 322, 323, 325, 326, 340, 342, 374, 376, 378, 382, 394, 407, 408, 409, 413, 416, 417, 418, 420, 422, 440, 512], "encapsul": [16, 319, 364, 382, 407, 422], "enclos": [408, 411], "encod": [31, 55, 100, 197, 213, 345, 348, 374, 375, 376, 377, 378, 407], "encoder_lay": [377, 378], "encoderlay": 377, "encompass": 74, "encourag": [245, 330, 332, 333, 334, 335, 344, 345, 348, 398], "end": [24, 137, 208, 225, 228, 229, 230, 246, 281, 305, 307, 308, 309, 310, 312, 331, 346, 347, 348, 365, 366, 367, 368, 369, 370, 402, 404, 428, 429, 431, 435, 442, 448, 453, 461, 463, 466, 479, 480, 481, 484, 491, 494, 504, 505, 506, 523], "enforc": [13, 217, 219, 221, 337, 375, 376, 377, 378], "engin": [16, 25, 422], "enhanc": [31, 41, 42, 57, 59, 61, 65, 66, 67, 68, 90, 91, 92, 98, 99, 100, 103, 106, 107, 112, 122, 123, 129, 132, 145, 146, 156, 157, 171, 172, 173, 174, 179, 181, 190, 205, 206, 210, 219, 221, 295, 311, 388, 523], "enough": 16, "ensur": [3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 25, 26, 27, 75, 84, 85, 86, 87, 105, 127, 189, 209, 216, 217, 218, 219, 220, 221, 222, 223, 232, 235, 241, 267, 268, 269, 270, 284, 288, 289, 290, 309, 314, 319, 329, 330, 331, 332, 333, 334, 335, 337, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 359, 360, 361, 366, 367, 368, 369, 370, 372, 382, 383, 384, 395, 396, 398, 399, 401, 402, 403, 404, 405, 409, 410, 413, 416, 417, 418, 419, 420, 421, 432, 442, 452, 462, 471, 477, 481, 482, 483, 491, 494, 498, 499, 504, 505, 506, 513, 514, 515, 516, 517, 521, 523], "entir": [3, 16, 208, 209, 246, 248, 249, 250, 331, 334, 335, 421], "entri": [75, 101, 117, 118, 491, 498, 501], "entropi": [256, 257, 344, 345], "environ": [16, 46, 48, 117, 118, 121, 422], "ep": [20, 131, 132, 133, 135, 136, 137, 245, 256, 257, 262, 263, 265, 266, 267, 288, 289, 290, 330, 344, 345, 350, 351, 352, 353, 354, 355, 356, 357, 391, 396, 397, 398, 399, 400, 401, 402, 403], "epoch": [1, 3, 16, 384, 385, 386, 387, 388, 389, 390, 391, 392], "epsilon": [31, 263, 267, 344, 345, 350, 351, 352, 353, 354, 355, 356, 357, 396, 397, 398, 399, 400, 401, 402, 403], "equal": [23, 286, 365, 366, 367, 442, 452, 458, 481, 483, 500, 514, 516], "equat": [20, 25, 27], "equival": [11, 427, 475, 495, 507], "error": [0, 3, 10, 11, 13, 15, 16, 20, 22, 75, 217, 220, 221, 222, 223, 226, 258, 260, 306, 331, 337, 344, 345, 346, 347, 382, 383, 442, 482], "escap": 386, "especi": [3, 16, 110, 219, 221, 222, 241, 313, 326, 410, 419, 512, 513, 517, 523], "essenti": [1, 3, 17, 23, 25, 97, 237, 243, 382, 419, 421, 461, 512, 513, 517, 523], "estim": [347, 398, 399, 400, 401, 402, 403, 408], "et": [55, 89, 100, 105, 208, 211, 212, 374], "eta": 404, "eta_": [385, 386, 391, 404], "eta_0": [385, 387, 389, 390, 392], "eta_min": 385, "eta_t": [385, 386, 387, 389, 390, 391, 392], "etc": [10, 69, 75, 114, 138, 344, 380, 513], "euclidean": [24, 267], "european": 100, "eval": [16, 331, 422], "evalu": [217, 262, 265, 329, 330, 331, 332, 333, 334, 335, 350, 351, 352, 354, 355, 356, 411, 422, 465, 479, 480, 523], "evaluate_model": 391, "even": [396, 408, 411, 435, 436, 439, 443, 444, 445, 446], "evenli": [268, 269, 270, 359, 360, 361, 363, 435, 442, 483, 500], "everi": [1, 16, 387, 392, 408, 523], "everywher": 466, "exact": [217, 220, 476, 517, 519], "exactli": [223, 281], "exampl": [4, 16, 384, 427], "exc_typ": 411, "exc_valu": 411, "excel": [91, 121, 126, 127], "except": [0, 11, 137, 408, 411, 466, 484, 489, 510], "exchang": 55, "excit": [74, 100, 113, 117, 118, 165, 168, 171, 172, 173, 174, 294], "exclud": [209, 210, 211, 505, 506], "exclus": [417, 420, 435], "exdb": 8, "execut": [16, 220, 408, 411, 422], "exist": [15, 27, 219, 221, 223, 412, 441, 484], "exit": 408, "exp": [225, 230, 231, 233, 305, 312, 447], "exp_rang": 386, "expand": [4, 10, 15, 50, 100, 243, 482, 496, 503], "expans": [10, 13, 15, 54, 92, 114, 117, 118, 124, 125, 130, 131, 132, 133, 135, 136, 137], "expansion_factor": 113, "expect": [18, 220, 223, 241, 246, 318, 329, 331, 332, 333, 334, 335, 357, 374, 375, 376, 377, 378, 382], "expens": 3, "experi": [16, 114, 419, 421, 523], "experiment": [16, 421], "explan": [23, 25, 29, 40, 192, 205, 209, 211, 268, 269, 270, 359, 360, 361, 395], "explicit": [13, 14, 15, 223, 337], "explicitli": [15, 16, 100, 219, 221, 422, 434, 440], "explod": [312, 350, 351, 352], "explor": [16, 120, 382, 421], "expon": [23, 267, 432], "exponenti": [225, 230, 232, 305, 312, 314, 329, 387, 389, 398, 399, 400, 401, 402, 457], "exponentiallr": [384, 393], "expos": [16, 408], "express": [10, 11, 13, 15, 43, 106, 107, 108, 126], "extend": [4, 55, 100, 138, 158, 175, 181, 188, 326, 327, 434], "extens": [100, 394], "extern": [4, 210, 408], "extra": [54, 87, 122, 188, 482], "extract": [31, 57, 59, 61, 66, 67, 68, 88, 94, 97, 100, 125, 126, 129, 147, 158, 175, 187, 188, 189, 191, 203, 207, 208, 209, 210, 211, 243, 323, 327, 365, 367, 407, 412, 436, 461, 463, 504, 505, 506, 508, 514, 516], "extractor": [101, 102, 103, 104, 203, 209, 211], "extrem": [25, 100, 148, 187, 199, 282], "extrema": 281, "ey": 447, "f": [1, 4, 5, 6, 7, 8, 16, 100, 208, 221, 222, 225, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 268, 269, 270, 274, 275, 276, 278, 279, 280, 281, 282, 284, 286, 287, 311, 314, 374, 376, 378, 384, 385, 386, 387, 388, 389, 390, 391, 392, 408], "f_1": 294, "f_2": 294, "facilit": [10, 14, 88, 219, 223, 232, 314, 321, 322, 323, 382, 394, 515, 523], "factor": [74, 90, 114, 124, 211, 225, 235, 236, 237, 238, 243, 294, 303, 304, 318, 319, 380, 384, 386, 387, 389, 390, 391, 392, 395, 402, 403, 404, 405, 481], "factori": 204, "failur": [219, 220, 221, 222, 382], "faithfulli": 16, "fals": [1, 5, 6, 7, 8, 24, 28, 55, 74, 117, 118, 124, 125, 131, 132, 133, 135, 136, 137, 147, 180, 181, 211, 216, 217, 218, 235, 244, 246, 247, 248, 249, 250, 262, 265, 281, 282, 286, 297, 299, 300, 301, 302, 303, 304, 318, 319, 321, 322, 323, 324, 331, 340, 342, 374, 375, 376, 377, 378, 380, 385, 386, 387, 388, 389, 390, 391, 392, 398, 399, 403, 409, 413, 415, 416, 417, 418, 420, 422, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 461, 462, 463, 471, 477, 478, 479, 480, 481, 486, 487, 488, 491, 499, 508, 511, 513], "famili": [54, 100, 114, 132, 136, 137, 188, 412], "fan": [100, 299, 300, 303, 304], "fan_in": [299, 300], "fan_out": [299, 300], "fashion": [7, 57, 59, 61], "fashion_train": 7, "fashionmnist": 9, "fast": [210, 402], "faster": [100, 125, 384, 397, 401, 411], "fasterrcnn": [208, 210], "fastrcnn": [208, 209], "fc": [16, 97, 147, 158, 165, 175, 220, 294, 322, 323, 365, 366, 367, 368, 369, 370], "fc1": [16, 103, 104, 219, 223, 306, 307, 308, 310, 311, 312, 313, 315, 316, 342], "fc2": [16, 103, 104, 219, 223, 306, 307, 308, 310, 312, 313, 315, 316, 342], "fc3": 104, "feat_channel": [209, 210], "feat_dim": 211, "featur": [3, 16, 29, 31, 40, 43, 44, 54, 55, 57, 59, 61, 65, 66, 67, 68, 69, 88, 91, 92, 94, 97, 100, 101, 102, 103, 104, 105, 110, 123, 124, 125, 126, 127, 128, 129, 130, 133, 137, 145, 146, 147, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 175, 176, 177, 178, 187, 188, 189, 191, 192, 203, 205, 206, 207, 208, 209, 210, 211, 240, 245, 253, 255, 262, 263, 288, 289, 290, 294, 295, 323, 325, 330, 332, 333, 334, 335, 340, 342, 350, 351, 352, 353, 354, 355, 356, 357, 365, 366, 367, 368, 369, 370, 372, 382, 397], "feature_extractor": 101, "fed": [3, 523], "feed": [3, 523], "feedforward": [197, 213, 374, 376, 378], "femto": [48, 100], "fergu": [100, 205], "fetch": 0, "fewer": [1, 100, 134, 139, 140, 141, 142, 143, 144, 482, 507], "field": [5, 6, 8, 100, 105, 134, 175, 179, 207, 295], "file": [3, 412], "fill": [211, 297, 301, 302, 416, 417, 418, 420, 440, 441, 443, 444, 445, 446], "fill_valu": [440, 441], "filter": [75, 100, 114, 205, 211, 236, 237, 238, 239, 240, 241, 243, 288, 289, 290, 322, 323], "filter_height": 243, "filter_s": 243, "filter_width": 243, "final": [40, 55, 69, 70, 71, 72, 73, 74, 75, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 113, 147, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 175, 176, 177, 178, 197, 210, 211, 213, 219, 220, 221, 222, 223, 235, 295, 318, 374, 375, 377, 408, 422, 512, 523], "find": [27, 461, 463, 479, 480, 493, 504], "fine": [55, 100, 105, 120, 123, 294, 523], "finer": 125, "finest": 126, "first": [5, 6, 7, 8, 20, 101, 180, 181, 182, 183, 205, 208, 211, 220, 221, 253, 294, 340, 384, 398, 399, 400, 401, 402, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 472, 483, 487, 492, 504, 508, 510, 512, 513, 523], "fit": [15, 382], "fix": [100, 134, 180, 209, 210, 211, 220, 387, 390, 392, 422, 494], "flag": [16, 408, 411, 481], "flat": [100, 180], "flatten": [13, 97, 101, 211, 223, 243, 327, 431, 480, 490, 495, 496, 498, 508], "flexibl": [1, 3, 4, 10, 11, 13, 15, 41, 88, 97, 98, 99, 100, 101, 114, 115, 138, 147, 171, 172, 173, 174, 179, 192, 203, 219, 220, 221, 222, 223, 337, 380, 382, 389, 394, 422, 434, 443, 444, 513, 523], "flexibli": 14, "flip": [518, 520, 523], "float": [2, 5, 6, 7, 8, 20, 25, 40, 41, 55, 74, 75, 90, 92, 105, 111, 115, 124, 125, 126, 127, 128, 129, 130, 180, 181, 197, 209, 210, 211, 213, 216, 218, 225, 228, 235, 244, 245, 246, 247, 248, 249, 250, 256, 257, 258, 262, 263, 265, 266, 267, 284, 287, 288, 289, 290, 297, 301, 302, 303, 304, 305, 309, 318, 319, 329, 330, 331, 332, 333, 334, 335, 344, 345, 346, 350, 351, 352, 353, 354, 355, 356, 357, 372, 374, 376, 378, 380, 385, 386, 387, 388, 389, 390, 391, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 413, 415, 420, 422, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 453, 465, 478, 486, 487, 488, 491, 513, 515, 517, 518, 519, 520], "float32": [216, 218, 407, 422, 435, 436, 439, 440, 441, 443, 445, 478, 513], "float64": [407, 446, 478, 513], "floor": [392, 447], "flop": [100, 212, 408, 499], "flow": [31, 91, 97, 100, 165, 223, 245, 304, 306, 313, 316, 321, 322, 323, 340, 342, 409, 415, 452, 491], "fluctuat": 386, "fly": [2, 3], "fn": 411, "fname": 3, "focu": 31, "follow": [0, 13, 15, 17, 20, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 71, 72, 73, 74, 105, 106, 107, 108, 109, 117, 118, 171, 172, 173, 174, 179, 192, 203, 205, 211, 213, 225, 226, 228, 229, 230, 231, 232, 233, 235, 253, 255, 286, 288, 289, 290, 291, 292, 293, 294, 295, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 321, 322, 323, 326, 329, 331, 332, 333, 334, 335, 337, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 359, 360, 361, 365, 366, 367, 368, 369, 370, 374, 375, 376, 377, 378, 382, 386, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 409, 412, 421, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 461, 463, 472, 482, 492, 497, 507, 514, 515, 516, 517, 518, 519, 520, 523], "footprint": 109, "foral": [375, 377], "forc": [16, 245], "form": [16, 26, 55, 295, 375, 377, 431, 486, 488, 492, 496, 503, 523], "format": [2, 3, 5, 6, 7, 8, 281, 345, 348, 513], "formul": [226, 267], "formula": [20, 28, 232, 268, 269, 270, 314, 315, 346, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 427, 477, 517], "forward": [16, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 113, 115, 116, 117, 118, 138, 139, 140, 141, 142, 143, 144, 145, 146, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 176, 177, 178, 179, 192, 205, 209, 210, 211, 216, 217, 382, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 408], "foundat": [16, 97, 114, 165, 217, 382, 394], "four": [70, 71, 72, 73, 105, 131, 132, 133, 135, 136, 137, 139, 140, 141, 142, 143, 144, 494], "frac": [14, 16, 18, 19, 20, 22, 23, 24, 25, 27, 28, 31, 55, 105, 225, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 246, 253, 255, 263, 267, 268, 269, 270, 271, 274, 275, 276, 278, 279, 280, 284, 299, 300, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 321, 322, 323, 324, 325, 327, 329, 331, 332, 333, 334, 335, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 365, 366, 367, 368, 369, 370, 372, 376, 378, 385, 396, 397, 398, 399, 400, 401, 402, 403, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 448, 449, 450, 451, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 482, 484, 489, 491, 492, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 509, 510, 511, 515], "fraction": [239, 240, 241], "frame": 250, "framework": [4, 10, 16, 207, 345, 348, 350, 351, 352, 354, 355, 356, 383, 394, 523], "free": [16, 407, 479, 480, 481], "frequent": [345, 348], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 15, 16, 23, 25, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 54, 55, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 92, 93, 94, 95, 96, 97, 105, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 125, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 176, 177, 178, 179, 193, 194, 195, 196, 207, 208, 209, 210, 216, 217, 218, 219, 220, 221, 222, 223, 239, 243, 245, 253, 262, 265, 271, 272, 273, 281, 282, 284, 286, 288, 289, 290, 294, 295, 297, 299, 300, 301, 302, 303, 304, 311, 318, 321, 322, 323, 324, 327, 329, 330, 332, 333, 334, 335, 340, 342, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 365, 366, 367, 375, 377, 378, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 396, 397, 399, 400, 401, 402, 403, 404, 405, 407, 410, 412, 413, 415, 416, 417, 418, 420, 421, 422, 427, 428, 429, 433, 434, 436, 461, 462, 463, 471, 477, 479, 480, 481, 484, 489, 492, 493, 496, 500, 501, 502, 503, 504, 508, 510, 511, 514, 515, 516, 517, 518, 519, 520, 523], "fu": 100, "full": [16, 28, 115, 117, 118, 197, 209, 213, 326, 415, 447], "full_lik": 447, "full_matric": 28, "fulli": [4, 11, 17, 29, 40, 69, 70, 71, 72, 73, 74, 75, 97, 100, 101, 102, 103, 104, 147, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 175, 176, 177, 178, 192, 203, 205, 209, 210, 211, 255, 294, 295, 342, 421, 422, 499], "func": 412, "function": [3, 4, 5, 6, 7, 8, 10, 16, 17, 65, 92, 209, 217, 219, 220, 221, 222, 223, 288, 289, 290, 294, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 329, 330, 332, 333, 334, 335, 337, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 359, 360, 361, 362, 374, 376, 378, 382, 385, 386, 388, 389, 392, 394, 421, 512, 523], "fundament": [235, 255, 342, 422, 513], "further": [14, 42, 43, 44, 45, 54, 75, 76, 77, 78, 79, 80, 81, 82, 83, 113, 115, 116, 117, 118, 120, 122, 145, 146, 189, 415, 421, 462, 471, 477], "fuse": [31, 100, 175, 408], "fusion": [55, 176, 177, 178], "futur": [235, 319, 341, 377, 378], "g": [0, 10, 11, 16, 19, 20, 23, 26, 28, 55, 65, 74, 76, 77, 78, 79, 80, 81, 82, 83, 89, 90, 91, 98, 99, 100, 101, 102, 103, 104, 110, 138, 180, 181, 192, 211, 281, 294, 295, 325, 329, 383, 396, 403, 407, 422, 440, 484, 517], "g_": 397, "g_t": 403, "gain": [303, 304], "gamma": [263, 350, 351, 352, 353, 354, 355, 356, 357, 384, 386, 387, 388, 390, 392], "gamma_c": [263, 353], "gan": [240, 324, 325], "gap": [147, 158, 175, 294], "gaussian": [226, 306], "gelu": [65, 105, 227, 252, 317, 339], "gelunetwork": 306, "gener": [11, 16, 25, 42, 47, 51, 207, 208, 209, 210, 211, 213, 239, 240, 246, 281, 282, 287, 324, 325, 327, 329, 330, 332, 333, 334, 335, 355, 374, 399, 401, 402, 408, 413, 415, 416, 417, 418, 419, 420, 421, 426, 434, 435, 437, 438, 442, 492, 516, 517, 518, 520, 523], "geoffrei": [5, 6], "geometr": 458, "geq": 505, "get": [5, 6, 7, 8], "get_loss": 210, "get_lr": [385, 386, 387, 388, 389, 390, 391, 392], "girshick": [208, 211], "git": 16, "github": [7, 16], "give": [395, 403], "given": [13, 14, 15, 19, 20, 23, 25, 26, 28, 214, 243, 267, 272, 273, 281, 284, 318, 319, 327, 337, 344, 345, 348, 364, 383, 407, 409, 413, 440, 444, 446, 491, 499, 500, 504, 512, 517, 518, 520, 523], "global": [0, 55, 57, 59, 61, 65, 66, 67, 68, 74, 100, 105, 124, 126, 129, 130, 134, 147, 158, 165, 175, 180, 182, 183, 184, 185, 187, 188, 189, 263, 294, 353, 408, 409, 411, 419, 421], "global_response_norm": [252, 264], "globalresponsenorm": [339, 358], "go": [10, 89, 100], "goal": [344, 345, 348], "googlenet": [89, 100], "gpu": [11, 100, 110, 216, 218, 407, 413, 415, 416, 417, 418, 420, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 478, 481], "grad": [11, 16, 216, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 243, 246, 253, 255, 281, 282, 286, 291, 292, 293, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 321, 322, 323, 324, 325, 326, 327, 329, 331, 332, 333, 334, 335, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 365, 366, 367, 368, 369, 370, 383, 394, 413, 415, 416, 417, 418, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 438, 440, 441, 442, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 489, 491, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 514, 515, 516, 518, 520, 521], "grad_output": 23, "gradient": [10, 11, 16, 17, 31, 91, 97, 100, 216, 218, 282, 327, 330, 382, 383, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 409, 411, 413, 415, 416, 417, 418, 420, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 452, 458, 465, 478, 479, 480, 481, 493, 508, 513], "gradual": [384, 385, 387], "grain": [55, 100, 105, 294], "graph": [16, 304, 408, 411, 422, 435, 436, 439, 443, 444, 445, 446, 513], "grayscal": [7, 8, 101, 102, 103, 104, 517, 523], "great": 129, "greater": [50, 128, 452, 483], "green": 517, "grid": [100, 105, 281, 282, 452, 492], "grid_sampl": [252, 281, 283], "grid_window_s": 105, "gridattent": 105, "grn": 353, "ground": 210, "groundbreak": 100, "group": [100, 114, 138, 145, 146, 158, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 175, 179, 220, 236, 237, 238, 239, 240, 241, 288, 289, 290, 295, 321, 322, 323, 324, 325, 326, 383, 384, 394], "group1": 220, "group2": 220, "groupedconvblock": 158, "grow": 16, "growth_rat": [69, 70, 71, 72, 73], "guarante": 419, "h": [10, 13, 14, 15, 100, 147, 159, 160, 161, 162, 163, 164, 176, 177, 178, 199, 208, 235, 237, 238, 240, 241, 243, 245, 249, 250, 263, 269, 270, 272, 273, 275, 276, 279, 280, 281, 286, 287, 289, 290, 294, 318, 319, 326, 337, 351, 352, 353, 355, 356, 360, 361, 363, 364, 367, 370, 374, 376, 378, 514, 516], "h_": [237, 238, 240, 241, 269, 270, 272, 273, 275, 276, 279, 280, 286, 322, 323, 325, 326, 327, 360, 361, 363, 364, 366, 367, 369, 370], "h_in": 282, "h_out": [237, 238, 240, 241, 275, 276, 279, 280, 282], "h_stack": 489, "ha": [0, 20, 42, 55, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 223, 236, 237, 238, 239, 288, 289, 290, 311, 315, 344, 345, 350, 351, 352, 354, 355, 356, 357, 380, 383, 394, 422, 427, 452, 458, 465, 475, 482, 484, 489, 493, 502, 508, 510, 517], "hackabl": 16, "haip": 100, "half": [386, 469], "han": 7, "hand": 27, "handl": [0, 3, 10, 16, 25, 187, 212, 217, 219, 220, 221, 222, 223, 284, 345, 348, 382, 394, 407, 434], "handwritten": [7, 8, 104], "hang": 100, "hard": [117, 118, 308], "hard_sigmoid": 307, "hardsigmoid": [308, 317, 339], "hardswish": [317, 339], "hardwar": 110, "hashabl": 422, "hat": [31, 398, 399, 400, 401, 402], "have": [0, 1, 16, 19, 20, 22, 25, 26, 28, 218, 220, 222, 223, 237, 238, 245, 267, 284, 304, 372, 382, 439, 443, 444, 445, 446, 461, 463, 484, 489, 491, 492, 501, 502, 507, 508, 510, 515, 521], "he": 100, "head": [31, 40, 55, 66, 67, 68, 92, 105, 113, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 197, 203, 208, 209, 210, 211, 213, 235, 318, 319, 374, 376, 378], "head_dim": 55, "head_fn": 92, "heapsort": 499, "heart": 16, "height": [31, 203, 237, 238, 240, 241, 243, 249, 250, 263, 269, 270, 272, 273, 275, 276, 279, 280, 282, 286, 287, 295, 322, 323, 327, 351, 352, 353, 355, 356, 360, 361, 363, 366, 367, 369, 370, 380, 514, 516, 521], "help": [31, 57, 59, 61, 65, 90, 228, 230, 250, 284, 305, 309, 311, 312, 316, 350, 351, 352, 365, 366, 368, 369, 372, 384, 386, 391, 392, 395, 398, 399, 401, 409, 410, 472], "henc": 497, "here": [3, 18, 217, 239, 253, 382, 394, 410, 421, 512, 513, 523], "heurist": 211, "hidden": [29, 55, 105, 126, 127, 128, 129, 180, 181, 197, 205, 209, 213, 220], "hidden_dim": [209, 210], "hidden_s": 220, "hierarch": [40, 41, 57, 59, 61, 100, 124, 125, 126, 127, 128, 129, 130, 131, 136, 180, 181, 220, 223, 382], "hierarchi": [208, 322], "hierarchicalnetwork": 220, "high": [11, 43, 49, 50, 68, 84, 85, 86, 87, 94, 100, 105, 106, 107, 110, 113, 121, 122, 125, 127, 135, 136, 137, 155, 170, 179, 187, 188, 189, 199, 200, 210, 384, 417, 420, 434], "higher": [50, 75, 111, 119, 158, 187, 345, 348, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 426, 427, 431, 434, 457, 472], "highest": [54, 110, 122, 417], "highli": [16, 31, 46, 54, 100, 116, 126, 186, 212, 389], "highlight": [294, 368, 369, 370], "hinton": [5, 6], "hist": [486, 487, 488], "histogram": [487, 488, 490], "histogram2d": 490, "histogramdd": 490, "histor": 397, "histori": [413, 415, 416, 417, 418, 420, 435, 436, 437, 438, 439, 443, 444, 445, 446], "hold": [114, 219, 220, 221, 222], "horizont": [489, 502, 518, 523], "hot": [345, 348], "how": [2, 3, 13, 15, 126, 171, 172, 173, 174, 179, 220, 223, 281, 282, 337, 382, 523], "howard": 100, "howev": [216, 304, 458], "hstack": 490, "html": [5, 6], "http": [5, 6, 7, 8, 16], "hu": [100, 294], "huang": 100, "huber": [258, 346], "huber_loss": [252, 259], "huberloss": [339, 349], "huberregressionmodel": 346, "hue": 523, "huge": [49, 100, 126], "human": 207, "hybrid": [65, 100, 122, 123], "hyperbol": [233, 316, 455, 468, 474], "hyperparamet": [124, 139, 140, 141, 142, 143, 144, 147, 158, 204, 214, 383, 395], "i": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 84, 85, 86, 87, 88, 89, 90, 91, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 273, 274, 275, 276, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 337, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 365, 366, 367, 368, 369, 370, 372, 374, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523], "i_": 434, "i_0": 434, "i_1": [13, 14, 15, 337, 434], "i_2": [13, 14, 15, 337], "i_k": [15, 434], "i_m": [13, 15, 337], "iccv": 100, "iclr": 100, "idea": 100, "ideal": [43, 47, 51, 110, 111, 114, 123, 126, 223], "ident": [22, 23, 92, 100, 281, 282, 287, 331, 339, 343, 419, 421, 439, 497], "identifi": [207, 221], "idx": [2, 3, 481], "ieee": [100, 208, 294], "ignor": [374, 375, 376, 377, 378, 481], "ii": 475, "ij": [11, 31, 232, 286, 314, 425, 426, 427, 431, 492, 505, 506], "ik": [11, 425, 426, 427], "ill": [19, 25], "ilsvrc": 100, "imag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523], "image_dir": 3, "image_mean": 211, "image_path": 3, "image_s": [197, 198, 199, 200, 201, 202], "imagedataset": 3, "imageio": 3, "imagenet": [70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 92, 100, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 156, 157, 171, 172, 173, 174, 179, 211], "imbal": [345, 348], "img_siz": [31, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 197, 198, 199, 200, 201, 202], "imgclf": [65, 92], "impact": [100, 401], "implement": [2, 3, 16, 25, 29, 31, 40, 65, 69, 74, 88, 89, 90, 91, 92, 98, 99, 100, 101, 111, 112, 113, 124, 125, 147, 156, 157, 159, 160, 161, 162, 163, 164, 165, 180, 197, 203, 205, 208, 209, 210, 211, 212, 213, 217, 243, 246, 282, 291, 292, 293, 295, 318, 319, 327, 331, 353, 376, 378, 383, 388, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 489, 510, 517], "impli": [321, 322], "implicit": [327, 440], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 156, 157, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 245, 246, 247, 250, 253, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 337, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 374, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 409, 410, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 481, 482, 483, 484, 485, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523], "improp": [10, 220, 223, 421], "improv": [31, 40, 57, 59, 61, 65, 67, 75, 89, 90, 91, 95, 97, 99, 100, 105, 123, 125, 132, 134, 138, 147, 158, 171, 172, 173, 174, 175, 180, 181, 188, 189, 191, 205, 208, 209, 210, 215, 245, 246, 262, 284, 287, 294, 306, 312, 316, 337, 372, 384, 385, 386, 391, 395, 396, 397, 398, 399, 400, 401, 402, 403, 516, 519, 523], "imread": 3, "in1_featur": [253, 340], "in2_featur": [253, 340], "in_channel": [31, 55, 65, 105, 106, 107, 108, 109, 110, 124, 125, 131, 132, 133, 134, 135, 136, 137, 147, 180, 181, 197, 220, 223, 288, 289, 290, 291, 292, 293, 294, 295, 321, 322, 323, 324, 325, 326, 351, 352, 365, 366, 367, 368, 369, 370, 382], "in_featur": [219, 220, 223, 255, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 322, 323, 329, 332, 333, 340, 342, 344, 345, 346, 347, 348, 350, 354, 357, 365, 366, 367, 368, 369, 370], "incept": [89, 90, 91, 92, 97, 98, 99], "inception_next": 92, "inception_next_atto": 100, "inception_next_bas": 100, "inception_next_smal": 100, "inception_next_tini": 100, "inception_resnet_v1": 100, "inception_resnet_v2": 100, "inception_v1": 100, "inception_v3": 100, "inception_v4": 100, "inceptionnext": [93, 94, 95, 96], "inceptionresnet": [98, 99], "includ": [3, 4, 7, 11, 16, 17, 23, 24, 29, 40, 66, 67, 68, 88, 89, 90, 98, 101, 105, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 147, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 197, 204, 205, 213, 217, 218, 220, 222, 223, 286, 288, 289, 290, 291, 292, 293, 376, 378, 380, 382, 383, 388, 394, 401, 408, 421, 427, 494, 505, 506], "inclus": [218, 221, 417, 420, 442], "incom": [255, 342], "incompat": 482, "incomplet": 2, "incompletedataset": 2, "incorpor": [28, 31, 100, 116, 158, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 188, 190, 306], "increas": [43, 44, 105, 108, 110, 111, 119, 122, 126, 127, 129, 132, 137, 158, 159, 160, 161, 162, 163, 164, 175, 215, 236, 237, 238, 239, 240, 243, 287, 386, 391, 397, 404, 410, 489, 510, 517, 518, 520, 523], "independ": [55, 211, 220, 236, 237, 238, 239, 318, 329, 332, 333, 334, 335, 357, 427, 438, 515, 517, 519, 521], "index": [0, 2, 5, 6, 7, 8, 10, 13, 211, 263, 284, 337, 353, 372, 385, 386, 387, 388, 389, 390, 392, 410, 422, 435, 436, 439, 458, 481, 492, 493, 497], "indexerror": 0, "indic": [0, 1, 11, 14, 15, 16, 66, 67, 68, 130, 145, 146, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 211, 218, 220, 222, 223, 257, 261, 284, 345, 348, 365, 372, 374, 375, 376, 377, 378, 390, 407, 409, 422, 479, 480, 481, 493, 499, 504, 511, 514, 516], "individu": [3, 220, 223, 346, 357, 394, 397, 404], "induc": [230, 312], "induct": [57, 59, 61, 65, 100], "inf": 473, "infer": [125, 171, 172, 173, 174, 179, 208, 209, 211, 220, 223, 407, 411], "infin": [26, 28, 400], "inform": [31, 55, 100, 126, 182, 183, 184, 185, 190, 207, 212, 216, 294, 388, 394, 396], "infti": [24, 402], "inherit": [1, 395, 403, 405], "init": 298, "initi": [1, 16, 31, 40, 69, 92, 97, 105, 109, 138, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 186, 187, 188, 189, 193, 194, 195, 196, 204, 214, 216, 218, 219, 220, 221, 222, 223, 295, 297, 299, 300, 301, 302, 303, 304, 318, 321, 322, 323, 340, 342, 344, 345, 346, 347, 348, 350, 351, 352, 353, 357, 372, 376, 378, 380, 382, 383, 385, 387, 389, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 416, 419, 420, 421, 435, 439, 442, 443, 444, 445, 446, 478], "initial_accumulator_valu": 397, "inner": [425, 434, 447], "innov": [113, 123], "input": [10, 11, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 65, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 158, 171, 172, 173, 174, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 197, 198, 199, 200, 201, 202, 203, 205, 208, 209, 211, 212, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 337, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 374, 375, 376, 377, 378, 380, 382, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 411, 421, 422, 423, 425, 426, 427, 431, 434, 436, 438, 441, 444, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523], "input1": 340, "input2": 340, "input_": [29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 205, 211, 225, 226, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 353, 359, 360, 361, 362, 363, 364, 372, 483, 499, 504, 505, 506], "input_1": 253, "input_2": 253, "input_data": [305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 321, 322, 323, 329, 332, 333, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 354, 357, 365, 366, 367, 368, 369, 370], "input_indic": [284, 372], "input_s": [220, 222, 314, 345, 348], "input_tensor": [55, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 176, 177, 178, 179, 192, 203, 216, 219, 220, 221, 222, 223, 232, 245, 246, 267, 291, 292, 293, 294, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 321, 322, 323, 329, 330, 331, 332, 333, 334, 335, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 365, 366, 367, 368, 369, 370, 380, 382, 514, 515, 516, 517, 518, 519, 520, 521], "insert": 481, "insid": [3, 408, 409], "insight": 100, "inspect": [16, 217, 218, 223, 383], "inspir": [10, 13, 15, 16, 40, 100], "instabl": [25, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405], "instanc": [0, 1, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 98, 99, 102, 103, 104, 109, 115, 116, 117, 118, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 198, 199, 200, 201, 202, 204, 206, 214, 215, 217, 218, 219, 221, 222, 223, 265, 311, 354, 355, 356, 357, 374, 375, 377, 383, 407, 411, 412, 478, 496, 503, 523], "instance_norm": [252, 264, 354, 355, 356], "instancenorm1d": [339, 358], "instancenorm1dmodel": 354, "instancenorm2d": [339, 358], "instancenorm3d": [339, 358], "instanti": [2, 32, 33, 34, 35, 36, 37, 38, 39, 66, 67, 68, 74, 84, 85, 86, 87, 92, 93, 94, 95, 96, 119, 120, 121, 122, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 171, 172, 173, 174, 179, 182, 183, 184, 185, 190, 191, 198, 199, 200, 201, 202, 209, 211, 412], "instead": [57, 59, 61, 219, 220, 221, 222, 223, 299, 300, 303, 304, 372, 374, 376, 378, 398, 399, 400, 437, 438], "int": [0, 1, 2, 5, 6, 7, 8, 13, 14, 15, 23, 24, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 213, 214, 215, 216, 218, 232, 235, 236, 237, 238, 239, 240, 241, 243, 245, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 301, 302, 303, 304, 314, 318, 319, 321, 322, 323, 324, 325, 326, 327, 330, 337, 340, 342, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 374, 375, 376, 377, 378, 380, 385, 386, 387, 388, 389, 390, 391, 392, 398, 399, 400, 401, 402, 404, 407, 412, 413, 415, 416, 417, 418, 419, 420, 422, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 453, 461, 462, 463, 465, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 491, 494, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 513, 514, 516, 521], "int32": [372, 481, 493], "int64": [407, 415, 422, 479, 480], "integ": [1, 3, 23, 165, 192, 236, 237, 238, 269, 270, 318, 321, 322, 323, 324, 327, 357, 360, 361, 366, 367, 368, 369, 370, 415, 416, 417, 418, 420, 421, 434, 437, 443, 445, 452, 458, 462, 465, 471, 476, 477, 488, 494, 496, 497, 500, 503], "integr": [1, 2, 4, 5, 6, 7, 8, 14, 16, 17, 55, 65, 66, 67, 68, 100, 105, 122, 138, 209, 211, 213, 218, 220, 222, 223, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 321, 322, 323, 337, 340, 342, 365, 366, 367, 368, 369, 370, 422], "intellig": [100, 207, 208, 294], "intend": [10, 127, 216, 221, 222], "intens": [25, 69, 148, 515, 517], "interact": [105, 180, 253, 340, 382, 421], "interdepend": 100, "interest": 209, "interfac": [2, 16, 217, 220, 362, 394], "interfer": [409, 507], "intermedi": [25, 126, 145, 146, 294, 374, 376, 378, 422], "intern": [16, 100, 148, 149, 150, 151, 152, 153, 154, 155, 166, 167, 168, 169, 170, 208, 219, 220, 221, 222, 223, 345, 348, 382, 434, 514, 515, 516, 517, 518, 519, 520, 521], "interpol": [252, 282, 285, 380, 442, 521], "interpret": [10, 100, 207, 232, 314, 484], "interv": [390, 392, 416, 420, 435], "introduc": [41, 57, 59, 61, 65, 75, 89, 90, 100, 105, 111, 112, 113, 124, 125, 133, 158, 191, 208, 209, 210, 211, 212, 229, 239, 294, 306, 310, 311, 313, 316, 329, 332, 333, 334, 335, 374, 516, 519, 523], "introspect": [16, 223], "intuit": [10, 13, 16, 219, 221, 382, 523], "inv": 21, "inv_a": 22, "invari": [366, 369], "invers": [19, 22, 23, 25, 386, 397, 449, 450, 451], "invert": [19, 22, 23, 27, 100, 112, 113, 116], "invit": 16, "invok": 412, "involv": [13, 15, 16, 18, 19, 20, 22, 25, 26, 28, 175, 207, 225, 226, 228, 229, 230, 231, 233, 253, 255, 286, 321, 322, 323, 337, 340, 342, 413, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 446, 457, 459, 460, 461, 463, 467, 469, 492, 494, 496, 503], "iou": 211, "is_all_fre": 422, "is_bit_fre": 407, "is_caus": [235, 319, 377, 378], "is_fre": 422, "is_leaf": 422, "isn": 16, "issu": [3, 16, 312, 350, 351, 352, 398, 399], "item": [7, 16, 347], "iter": [0, 1, 2, 3, 216, 217, 220, 222, 375, 377, 383, 386, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 435], "ith": [232, 314], "its": [4, 16, 23, 25, 29, 41, 100, 110, 114, 122, 125, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 166, 167, 168, 169, 170, 176, 177, 178, 205, 210, 216, 219, 220, 221, 222, 236, 237, 238, 239, 240, 243, 281, 287, 295, 304, 306, 310, 315, 324, 330, 368, 369, 370, 382, 383, 396, 404, 408, 409, 410, 412, 435, 437, 438, 445, 452, 458, 461, 463, 465, 478, 482, 497, 499, 500, 507, 515, 518, 520, 523], "itself": [18, 23, 219, 220, 221, 222, 384, 411], "j": [8, 10, 13, 14, 15, 31, 232, 284, 294, 314, 337, 350, 351, 352, 354, 355, 356, 365, 366, 368, 369, 372, 492, 502, 505, 506, 514, 516], "j_": 434, "j_1": [13, 15, 337], "j_2": [13, 15, 337], "j_k": [15, 434], "j_n": [13, 15, 337], "jie": 100, "jk": [11, 426], "join": [3, 484], "jointli": 210, "json": 412, "k": [23, 31, 55, 100, 105, 125, 208, 235, 236, 239, 318, 319, 321, 324, 345, 351, 352, 355, 356, 365, 368, 369, 378, 425, 426, 434, 436, 439, 484, 500, 504], "k_2": 55, "k_d": [238, 241, 323, 367, 370], "k_h": [237, 238, 240, 241, 322, 323, 327, 366, 367, 370], "k_i": 318, "k_j": 31, "k_w": [237, 238, 240, 241, 322, 323, 327, 366, 367, 370], "kaim": [100, 299, 300, 303, 304], "kaiming_norm": 298, "kaiming_uniform": 298, "kalenichenko": 100, "karen": 100, "kashif": 7, "kd": 326, "kdim": 318, "keep": [217, 246, 310, 396, 408, 465, 481, 497, 505, 506], "keep_grad": [218, 413, 415, 416, 417, 418, 420, 422, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 478, 513], "keep_var": 217, "keepdim": [24, 461, 462, 463, 471, 477, 479, 480], "kei": [16, 55, 65, 105, 114, 124, 130, 131, 132, 133, 135, 136, 137, 180, 181, 207, 217, 219, 221, 223, 235, 318, 319, 378, 383], "kept": [462, 471, 477], "kernel": [100, 101, 102, 103, 104, 114, 117, 118, 175, 176, 177, 178, 179, 205, 236, 237, 238, 239, 240, 241, 243, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 288, 289, 290, 291, 292, 293, 295, 321, 322, 323, 324, 325, 326, 327, 359, 360, 361, 362, 363, 364, 366, 367, 370, 408], "kernel_s": [113, 117, 118, 175, 176, 177, 178, 209, 210, 211, 220, 223, 274, 275, 276, 278, 279, 280, 288, 289, 290, 291, 292, 293, 295, 321, 322, 323, 324, 325, 326, 327, 337, 351, 352, 365, 366, 367, 368, 369, 370], "keyerror": 217, "keyword": [30, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 106, 107, 108, 109, 110, 117, 118, 119, 120, 121, 122, 123, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 193, 194, 195, 196, 206, 217, 341], "kh": [325, 326], "kind": [481, 499], "kj": [425, 427], "known": [100, 239, 241], "kriz": [5, 6], "krizhevski": [5, 6, 100], "kroneck": [13, 232, 314, 337], "kw": [325, 326], "kwarg": [30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 98, 99, 102, 103, 104, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 206, 217, 341, 412], "l": [18, 25, 84, 100, 200, 235, 236, 239, 248, 268, 271, 274, 278, 288, 294, 319, 327, 329, 332, 333, 334, 335, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 359, 362, 377, 378, 472, 482], "l1": 267, "l2": [267, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405], "l_": [212, 236, 239, 268, 271, 274, 278, 321, 324, 359, 362, 365, 368, 374], "l_k": 318, "l_m": [375, 376], "l_out": [236, 239, 274, 278], "l_q": 318, "l_t": [374, 375, 376], "l_v": 318, "label": [4, 5, 6, 7, 8, 11, 90, 207, 209, 210, 211, 344, 345, 348], "lambd": 395, "lambda": [20, 230, 312, 389, 395, 399], "lambda_1": 20, "lambda_2": 20, "lambda_fn": 389, "lambda_i": 20, "lambda_n": 20, "lambdalr": 393, "languag": [4, 321, 340, 365, 368, 374], "larg": [0, 3, 25, 43, 49, 50, 54, 57, 59, 61, 69, 84, 87, 100, 105, 106, 107, 110, 113, 117, 119, 122, 123, 126, 127, 137, 148, 149, 150, 153, 166, 167, 183, 187, 188, 189, 198, 199, 200, 291, 292, 293, 311, 346, 382, 395, 398, 399, 400, 403, 404, 405], "larger": [42, 55, 58, 67, 68, 74, 75, 105, 106, 107, 147, 175, 188, 215, 219, 221, 236, 237, 238, 243, 245, 330, 395, 428, 483, 494, 514, 516, 521], "largest": [54, 126, 137, 187, 461, 504], "last": [1, 232, 266, 314, 385, 386, 387, 388, 389, 390, 392, 426, 427, 434, 481, 483, 484, 499, 518, 520], "last_channel": 113, "last_epoch": [385, 386, 387, 388, 389, 390, 392], "last_lr": [384, 385, 386, 387, 388, 389, 390, 391, 392], "later": [31, 100], "latest": [4, 16], "layer": [10, 16, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 59, 60, 61, 65, 69, 70, 71, 72, 73, 74, 75, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 135, 136, 137, 138, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 180, 181, 187, 188, 192, 193, 194, 195, 196, 197, 205, 207, 209, 210, 212, 213, 217, 219, 220, 223, 232, 246, 255, 262, 265, 266, 288, 289, 290, 291, 292, 293, 294, 295, 299, 300, 303, 304, 314, 319, 321, 322, 323, 331, 340, 341, 342, 348, 357, 365, 366, 367, 368, 369, 370, 374, 375, 376, 377, 378, 382, 421, 494, 513], "layer1": 412, "layer2": 412, "layer_group": 220, "layer_norm": [252, 264, 357], "layer_norm_ep": [374, 376, 378], "layer_scale_init": 40, "layer_sequ": [220, 223], "layernorm": [55, 65, 105, 124, 125, 131, 132, 133, 135, 136, 137, 180, 181, 339, 358, 374, 375, 376, 377, 378], "layernormmodel": 357, "layout": 241, "lceil": 452, "ldot": [479, 480], "le": 100, "lead": [10, 16, 220, 223, 267, 306, 354, 355, 356, 357, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 421, 482], "leaf": 422, "leaki": [228, 309], "leaky_relu": [227, 252, 309], "leakyrelu": [317, 339], "learn": [1, 3, 4, 7, 8, 10, 14, 16, 23, 25, 31, 75, 94, 95, 100, 105, 126, 130, 158, 159, 160, 161, 162, 163, 164, 205, 206, 207, 210, 212, 219, 220, 221, 222, 229, 232, 294, 305, 309, 310, 314, 321, 322, 323, 332, 333, 334, 335, 337, 340, 342, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 410, 419, 442, 500, 505, 506, 512, 513, 523], "learnabl": [31, 55, 180, 181, 210, 216, 217, 218, 262, 263, 265, 266, 288, 289, 290, 318, 321, 322, 323, 324, 325, 326, 340, 342, 350, 351, 352, 353, 354, 355, 356, 357, 378, 382], "least": [25, 26, 28, 380, 475, 505, 506], "lecun": [8, 100], "left": [23, 24, 25, 28, 31, 55, 105, 226, 232, 267, 306, 314, 318, 327, 344, 345, 346, 348, 350, 351, 352, 354, 355, 356, 357, 368, 369, 370, 376, 378, 472, 481, 514, 516], "leftarrow": 401, "len": [0, 1, 2, 3, 492], "lenet": [102, 103, 104], "lenet_1": 100, "lenet_4": 100, "lenet_5": 100, "length": [55, 105, 220, 235, 236, 239, 248, 268, 271, 274, 278, 321, 341, 350, 354, 359, 362, 365, 368, 377, 378, 415, 481, 494, 515], "leq": [307, 308, 346, 390, 402, 432, 453, 506], "lerp": 286, "less": [0, 225, 228, 258, 305, 309, 345, 346, 348, 442, 458], "let": [20, 434, 481], "level": [97, 105, 126, 127, 128, 129, 327], "leverag": [13, 14, 15, 16, 27, 31, 91, 92, 99, 100, 119, 122, 131, 134, 159, 160, 161, 162, 163, 164, 182, 183, 184, 185, 186, 187, 203, 207, 295, 382], "lfloor": [327, 392, 458], "li": [100, 134], "librari": [3, 10, 16, 17, 217, 382, 383, 394, 412, 421, 422, 523], "lie": 413, "lightweight": [16, 52, 60, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 93, 109, 112, 117, 118, 130, 134, 139, 140, 141, 142, 143, 144, 151, 168, 184, 185, 191, 202, 295, 308, 311], "like": [13, 14, 15, 16, 57, 59, 61, 75, 97, 100, 114, 122, 159, 160, 161, 162, 163, 164, 176, 177, 178, 189, 207, 213, 216, 217, 220, 223, 236, 241, 245, 303, 304, 312, 329, 330, 337, 350, 351, 352, 354, 355, 356, 409, 410, 441, 478, 513, 523], "likelihood": [261, 345, 348], "limit": [45, 52, 117, 118, 119, 121, 311, 396, 453], "linalg": 21, "linalgerror": [18, 19, 20, 22, 23, 24, 25, 26, 27, 28], "line": [16, 411], "linear": [11, 16, 17, 18, 25, 26, 27, 92, 100, 105, 112, 116, 125, 131, 132, 133, 134, 135, 136, 137, 165, 219, 220, 221, 223, 225, 226, 228, 229, 230, 246, 299, 300, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 322, 323, 327, 329, 331, 332, 333, 340, 341, 344, 345, 346, 347, 348, 350, 354, 357, 365, 366, 367, 368, 369, 370, 374, 376, 378, 384, 412, 439], "linearli": 346, "linguist": 207, "linspac": 447, "linspace_tensor": 442, "list": [0, 1, 16, 31, 40, 41, 55, 66, 67, 68, 75, 92, 101, 113, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 147, 158, 165, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 216, 218, 219, 220, 221, 222, 266, 295, 341, 357, 383, 385, 386, 387, 388, 389, 390, 391, 392, 413, 416, 417, 418, 420, 422, 434, 436, 437, 438, 440, 441, 443, 444, 445, 446, 476, 482, 487, 488, 497, 500, 501, 509, 512], "listdir": 3, "liter": [14, 147, 216, 218, 256, 257, 258, 260, 261, 282, 286, 288, 289, 290, 291, 292, 293, 295, 299, 300, 321, 322, 323, 324, 325, 326, 344, 345, 346, 347, 348, 380, 386, 391, 407, 413, 415, 416, 417, 418, 420, 422, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 478, 481, 492, 499], "liu": 100, "ln": 432, "load": [3, 4, 5, 6, 7, 8, 216, 217, 218, 383, 388, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 412], "load_state_dict": [217, 383, 388, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405], "loader": [1, 2, 3], "local": [16, 31, 57, 59, 61, 65, 66, 67, 68, 100, 105, 124, 126, 129, 180, 181, 182, 183, 184, 185, 207, 211, 243, 321, 327, 386], "locat": [100, 282, 286, 499], "log": [181, 261, 344, 345, 348, 385, 386, 387, 388, 389, 390, 391, 392, 447, 460, 481], "log2": 447, "log_2": 460, "log_softmax": 348, "logarithm": [432, 457, 459, 460], "logic": [3, 359, 360, 361, 382, 383, 458], "logit": [29, 40, 205, 232, 314, 345, 408], "logsoftmax": [345, 348], "long": [31, 105, 127, 212, 281, 401, 476], "lookup": [284, 372], "loop": [1, 13, 14, 15, 16, 220, 337, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405], "loss": [16, 25, 219, 220, 221, 222, 223, 232, 256, 257, 258, 260, 261, 281, 305, 306, 309, 310, 312, 313, 314, 316, 329, 332, 333, 334, 335, 341, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 383, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 499, 504], "low": [97, 112, 117, 118, 121, 417, 420], "lower": [18, 111, 302, 327, 375, 376, 377, 378, 386, 395, 403, 404, 405, 420, 453, 488, 505, 506], "lower_triangular": 505, "lowest": 417, "lp": 267, "lr": [16, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405], "lr_lambda": 389, "lr_schedul": 393, "lrschedul": 393, "ls_init_valu": 92, "lu": 22, "lucid": [0, 1, 2, 5, 6, 7, 8, 12, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 337, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 374, 375, 376, 377, 378, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 414, 447, 490, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "m": [85, 100, 192, 212, 219, 220, 223, 318, 366, 367, 369, 370, 374, 375, 378, 390, 398, 399, 400, 401, 402, 434, 439, 505, 506], "m1": 16, "m2": 16, "m3": 16, "m_": [398, 399, 400, 401, 402, 505, 506], "m_m": 376, "m_t": [376, 401, 402], "maaten": 100, "mac": 16, "machin": [3, 7, 8, 25, 100, 207, 208, 213, 294, 374, 398, 410, 419], "magnitud": [246, 284, 372, 403, 404, 523], "mai": [3, 10, 13, 15, 16, 20, 22, 25, 121, 220, 222, 267, 287, 331, 337, 346, 384, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 408, 421, 483, 507, 517, 523], "main": [26, 97, 220, 436, 439, 505, 506], "maintain": [25, 31, 41, 46, 55, 64, 66, 67, 68, 84, 85, 86, 87, 95, 100, 108, 111, 128, 129, 130, 132, 133, 134, 135, 158, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 179, 181, 216, 217, 219, 220, 221, 223, 230, 246, 299, 300, 303, 304, 305, 306, 312, 329, 331, 332, 333, 334, 335, 350, 351, 352, 354, 355, 356, 398, 403, 514, 517, 521], "major": 16, "make": [1, 3, 10, 31, 43, 44, 47, 48, 88, 97, 100, 101, 110, 112, 114, 116, 117, 118, 120, 121, 123, 126, 135, 147, 182, 183, 184, 185, 186, 190, 191, 198, 201, 207, 220, 223, 313, 345, 346, 357, 366, 369, 382, 397, 398, 399, 400, 410, 412, 421, 427, 492, 500, 512, 523], "manag": [217, 219, 220, 221, 222, 223, 382, 394, 408, 409, 411, 412, 421], "manhattan": 24, "manipul": [10, 13, 219, 221, 523], "manner": [10, 13, 14, 180, 220, 223, 407], "manual": [10, 256, 257, 261, 327, 344, 345, 348], "map": [13, 15, 92, 100, 105, 145, 146, 147, 158, 168, 175, 208, 209, 210, 217, 231, 233, 240, 245, 263, 282, 294, 313, 316, 325, 331, 337, 353, 372, 408, 483, 499], "mark": 491, "marri": 100, "mask": [100, 216, 235, 318, 319, 329, 332, 333, 334, 335, 374, 375, 376, 377, 378, 491, 505, 506, 511], "masked_fil": 490, "match": [10, 11, 15, 16, 27, 55, 217, 220, 223, 235, 239, 241, 256, 258, 260, 266, 271, 273, 288, 289, 290, 330, 364, 372, 383, 434, 441, 457, 482, 496, 497, 500, 503, 509, 515, 523], "math": [318, 454, 467, 473], "mathbb": [318, 500], "mathbf": [13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 31, 203, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 235, 253, 255, 281, 286, 291, 292, 293, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 319, 321, 322, 323, 324, 325, 326, 329, 332, 333, 334, 335, 337, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 365, 366, 367, 368, 369, 370, 425, 426, 427, 431, 448, 449, 450, 451, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 484, 489, 494, 495, 496, 497, 501, 502, 503, 505, 506, 507, 509, 510, 514, 515, 516, 517, 518, 519, 520, 521], "mathcal": [208, 299, 301, 303, 329, 332, 333, 334, 335, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 481], "mathemat": [16, 22, 288, 289, 290, 516, 518, 519, 520], "mathrm": [25, 465], "matmul": [327, 434, 447], "matric": [17, 19, 20, 22, 25, 27, 28, 281, 318, 378, 425, 426, 427, 439, 492, 505, 506], "matrix": [11, 13, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 31, 243, 253, 281, 284, 327, 341, 342, 372, 382, 425, 434, 472, 492], "matrix_pow": 21, "matthew": 100, "max": [10, 24, 165, 192, 229, 267, 271, 272, 273, 278, 279, 280, 284, 307, 308, 310, 311, 362, 363, 364, 368, 369, 370, 372, 385, 386, 391, 400, 428, 447, 453, 486], "max_lr": 386, "max_norm": [284, 372], "max_pool": [368, 369, 370], "max_pool1d": [252, 277], "max_pool2d": [252, 277], "max_pool3d": [252, 277], "max_valu": 453, "maxim": [3, 49, 122], "maximum": [24, 110, 208, 211, 310, 311, 368, 369, 370, 385, 386, 398, 400, 447, 453, 461, 486, 519], "maxpool": [29, 205], "maxpool1d": [339, 371], "maxpool1dmodel": 368, "maxpool2d": [220, 223, 322, 339, 371], "maxpool2dmodel": 369, "maxpool3d": [323, 339, 371], "maxpool3dmodel": 370, "maxvit": [106, 107, 108, 109, 110], "maxvit_bas": 100, "maxvit_larg": [100, 107], "maxvit_smal": 100, "maxvit_tini": [100, 108], "maxvit_xlarg": 100, "mbconv": 105, "mean": [5, 6, 7, 8, 10, 13, 14, 15, 26, 145, 146, 209, 211, 216, 230, 236, 237, 238, 244, 256, 257, 258, 260, 261, 262, 265, 288, 289, 290, 301, 305, 306, 307, 309, 310, 312, 313, 316, 323, 329, 337, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 391, 398, 399, 400, 401, 402, 403, 409, 418, 447, 453, 457, 459, 460, 461, 463, 467, 469, 471, 475, 476, 477, 512, 515, 523], "meaning": [14, 223], "measur": [344, 345, 347, 348], "mechan": [31, 55, 65, 66, 67, 68, 100, 105, 125, 126, 127, 128, 129, 134, 145, 146, 165, 175, 179, 181, 182, 183, 184, 185, 186, 189, 190, 197, 210, 212, 213, 222, 253, 318, 483], "media": 100, "medic": [241, 326], "medium": [48, 52, 56, 85, 100, 119, 120, 123, 128], "meet": [100, 362], "mem_is_caus": [375, 376], "mem_key_padding_mask": [374, 375, 376], "mem_mask": [374, 375, 376], "membership": 344, "memori": [2, 3, 16, 69, 134, 374, 375, 376, 411, 437, 438], "merg": [13, 211, 337], "mergesort": [481, 499], "meshgrid": 490, "metal": [407, 422], "method": [3, 10, 14, 16, 17, 22, 75, 165, 203, 204, 210, 219, 220, 221, 222, 223, 256, 257, 258, 260, 261, 282, 299, 300, 303, 304, 344, 345, 346, 347, 348, 380, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 421], "metric": 391, "mha": 318, "mid": [95, 201], "mid_channel": [117, 118], "middl": [106, 107, 410], "might": 382, "migrat": 16, "mileston": 390, "mimic": 441, "min": [307, 308, 311, 385, 386, 391, 429, 447, 453, 486], "min_lr": 391, "min_valu": 453, "mind": [0, 3, 220, 223, 411, 465], "mingx": 100, "mini": 1, "minibackbon": 209, "minim": [4, 93, 100, 113, 223, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 394], "minima": 386, "minimalist": 16, "minimum": [385, 386, 391, 447, 453, 463, 486], "minu": 313, "mirror": [444, 446], "mismatch": [10, 13, 15, 75, 105, 217, 337, 382, 383], "miss": [217, 382], "mitig": [228, 305, 309, 312, 350, 351, 352], "mix": [92, 408, 411], "mixer": 92, "mlp": [16, 55, 92, 105, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 180, 181, 295], "mlp_dim": 197, "mlp_ratio": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 92, 105, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 180, 181], "mlx": [110, 407, 422, 440, 481], "mnist": [4, 7, 9, 102, 103], "mnist_train": [4, 8], "mobil": [100, 111, 112, 113, 114, 116, 117, 118, 121, 131], "mobilenet": [112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 311], "mobilenet_v2": 100, "mobilenet_v3": [117, 118], "mobilenet_v3_larg": 100, "mobilenet_v3_smal": 100, "mobilenet_v4": [119, 120, 121, 122, 123], "mobilenet_v4_conv_larg": 100, "mobilenet_v4_conv_medium": 100, "mobilenet_v4_conv_smal": 100, "mobilenet_v4_hybrid_larg": 100, "mobilenet_v4_hybrid_medium": 100, "mobilenetv2": [100, 112], "mobilenetv3": [100, 113, 117, 118], "mode": [16, 250, 262, 265, 281, 282, 286, 299, 300, 329, 331, 332, 333, 334, 335, 380, 386, 391, 422, 494], "model": [1, 3, 4, 10, 16, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 232, 235, 239, 240, 245, 284, 287, 288, 289, 290, 295, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 321, 322, 323, 324, 326, 327, 329, 331, 332, 333, 337, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 354, 357, 365, 366, 367, 368, 369, 370, 372, 374, 375, 376, 377, 378, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 408, 411, 412, 421, 452, 512, 513, 523], "model_b0": 74, "model_b7": 74, "model_tini": 92, "moder": [44, 48, 96, 120, 135, 169], "modern": [16, 40, 41, 92, 100], "modif": [204, 223], "modifi": [16, 30, 56, 57, 58, 59, 60, 61, 62, 63, 64, 119, 147, 203, 206, 219, 220, 221, 222, 297, 299, 300, 301, 302, 303, 304, 329, 384, 409, 419, 422, 481, 489, 491, 498, 507, 510], "modul": [5, 6, 7, 8, 10, 16, 29, 30, 31, 40, 41, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 74, 75, 88, 91, 92, 97, 98, 99, 100, 101, 105, 111, 112, 113, 114, 123, 124, 125, 147, 158, 165, 175, 180, 181, 192, 203, 205, 206, 209, 210, 211, 213, 216, 218, 219, 220, 221, 222, 223, 246, 288, 289, 290, 291, 292, 293, 294, 295, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 337, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 374, 375, 376, 377, 378, 380, 382, 383, 384, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 412, 421, 513, 523], "modular": [3, 16, 207, 213, 217, 220, 223, 382, 523], "moduledict": [220, 221, 223, 224], "modulelist": [222, 223, 224], "moment": [398, 399, 400, 401, 402], "momentum": [262, 265, 288, 289, 290, 350, 351, 352, 354, 355, 356, 386, 395, 401, 403, 405], "momentum_decai": 401, "monitor": 391, "monoton": 315, "moor": 25, "more": [3, 4, 7, 10, 11, 20, 43, 57, 59, 61, 68, 106, 107, 108, 127, 128, 129, 133, 147, 154, 187, 188, 190, 191, 209, 215, 219, 220, 223, 245, 291, 292, 293, 305, 332, 333, 334, 335, 374, 382, 383, 394, 395, 396, 399, 400, 403, 404, 405, 418, 427, 434, 475, 502, 505, 506, 523], "most": [17, 47, 100, 126, 207, 369, 513, 514, 523], "mostli": 465, "move": [16, 395, 403], "mse": [258, 260, 346, 347], "mse_loss": [16, 252, 259], "mseloss": [339, 349], "mu": [31, 301, 350, 351, 352, 354, 355, 356, 357, 477], "mu_c": 515, "mu_i": [354, 355, 356], "much": [126, 523], "mul": 430, "multi": [3, 4, 11, 55, 57, 59, 61, 66, 67, 68, 92, 98, 100, 105, 124, 125, 130, 131, 132, 133, 135, 136, 137, 175, 176, 177, 178, 182, 183, 184, 185, 186, 188, 189, 190, 191, 197, 213, 232, 235, 257, 261, 295, 314, 318, 345, 348, 374, 376, 378, 408, 422, 462, 471, 477], "multi_conv": [55, 57, 59, 61], "multidimension": [416, 420, 437], "multiheadattent": [320, 339], "multipl": [1, 3, 11, 13, 16, 17, 23, 27, 29, 55, 57, 59, 61, 147, 165, 179, 207, 221, 222, 223, 243, 286, 287, 294, 295, 318, 327, 329, 332, 333, 334, 335, 337, 345, 348, 375, 377, 382, 384, 387, 391, 410, 413, 416, 417, 418, 420, 425, 430, 434, 437, 438, 472, 483, 500, 507, 512, 517, 523], "multipli": [23, 115, 222, 255, 342, 380, 390, 391, 392, 404, 431, 447, 460], "multisteplr": 393, "must": [0, 1, 3, 16, 18, 19, 20, 22, 23, 26, 27, 28, 55, 217, 219, 220, 221, 222, 223, 239, 246, 266, 318, 329, 331, 332, 333, 334, 335, 348, 372, 374, 376, 378, 380, 383, 388, 413, 475, 482, 483, 484, 489, 491, 494, 496, 497, 500, 502, 503, 505, 506, 510, 514, 515, 516, 517, 518, 520], "mx": [407, 422], "my_simple_model": 412, "mymodel": [217, 218, 382, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405], "myoptim": [383, 394], "n": [13, 23, 24, 100, 147, 159, 160, 161, 162, 163, 164, 176, 177, 178, 208, 211, 212, 219, 220, 223, 235, 236, 237, 238, 239, 240, 241, 243, 245, 248, 249, 250, 253, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 294, 299, 301, 303, 318, 319, 321, 322, 323, 324, 325, 326, 327, 334, 335, 340, 342, 344, 345, 347, 348, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 374, 375, 376, 377, 378, 415, 434, 439, 462, 465, 475, 477, 481, 488, 493], "n1": 24, "nabla": 507, "nabla_": [396, 397, 398, 399, 400, 401, 402, 404], "nabla_t": 402, "nadam": 406, "nair": [5, 6], "name": [10, 13, 14, 15, 100, 208, 212, 217, 219, 221, 223, 337, 412], "nan": [26, 28], "nano": [51, 100], "natur": [25, 321, 340, 365, 368, 374, 432, 457, 458, 459], "ndarrai": [16, 216, 218, 413, 422, 436, 438, 441, 444, 446, 478], "ndim": [26, 28, 218, 422], "ne": 23, "nearest": [282, 286, 380, 458, 465], "nearli": 422, "necessari": [4, 5, 6, 7, 8, 16, 25, 489, 510], "need": [2, 4, 14, 15, 123, 210, 212, 220, 221, 222, 232, 239, 240, 340, 374, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 437, 438, 512, 513, 523], "neg": [23, 25, 28, 225, 261, 287, 305, 309, 310, 312, 345, 348, 404, 465, 481, 484, 511], "negative_slop": [228, 309], "neglect": 222, "neighbor": [282, 286], "neq": 24, "nest": [220, 223, 382, 408, 411], "nesterov": 401, "net": [100, 205, 209, 211], "network": [3, 4, 10, 14, 29, 30, 31, 40, 41, 67, 69, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 91, 97, 100, 104, 111, 114, 115, 119, 122, 138, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 165, 166, 167, 168, 169, 170, 175, 192, 197, 206, 207, 208, 209, 210, 211, 213, 216, 217, 218, 219, 220, 221, 222, 223, 226, 229, 230, 231, 232, 233, 236, 237, 238, 240, 245, 246, 253, 255, 262, 282, 287, 294, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 321, 322, 323, 325, 326, 329, 330, 331, 332, 333, 334, 335, 337, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 357, 365, 366, 367, 368, 369, 370, 372, 374, 376, 378, 382, 383, 394, 395, 403, 405, 420, 421, 422, 435, 443, 445, 461, 463, 494, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523], "neural": [3, 4, 10, 14, 29, 30, 31, 40, 74, 76, 77, 78, 79, 80, 81, 82, 83, 97, 100, 104, 206, 207, 209, 210, 211, 212, 216, 217, 218, 219, 220, 221, 222, 223, 226, 229, 230, 231, 232, 233, 236, 237, 238, 246, 253, 255, 262, 287, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 321, 322, 323, 329, 330, 331, 332, 333, 334, 335, 337, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 357, 365, 366, 367, 368, 369, 370, 372, 382, 383, 394, 395, 403, 405, 420, 421, 422, 435, 443, 445, 461, 463, 494, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523], "neuralnetwork": [307, 308, 310, 315], "neuron": 309, "never": [481, 517], "new": [11, 15, 217, 218, 225, 226, 228, 229, 230, 231, 233, 253, 255, 286, 295, 299, 300, 301, 302, 303, 304, 383, 388, 391, 411, 412, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 438, 441, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 478, 482, 484, 489, 491, 494, 496, 497, 498, 502, 503, 505, 506, 509, 510, 511], "new_tensor": 472, "next": [223, 512], "nll": 261, "nll_loss": [252, 259], "nllloss": [339, 349], "nlp": [207, 284, 372], "nm": 211, "nms_iou_thresh": 211, "nn": [5, 6, 7, 8, 29, 31, 40, 41, 55, 65, 69, 74, 75, 88, 92, 97, 101, 105, 111, 112, 113, 114, 124, 125, 131, 132, 133, 135, 136, 137, 147, 158, 165, 171, 172, 173, 174, 175, 179, 180, 181, 192, 205, 209, 210, 211, 224, 227, 234, 242, 251, 254, 259, 264, 277, 283, 285, 296, 298, 317, 320, 328, 336, 338, 339, 343, 349, 358, 371, 373, 379, 381, 383, 384, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 412, 513, 523], "no_grad": [16, 409], "node": [16, 422], "nois": [28, 421], "non": [20, 23, 25, 28, 100, 105, 208, 211, 222, 226, 228, 229, 281, 299, 300, 305, 306, 307, 309, 310, 311, 312, 313, 315, 316, 329, 332, 333, 334, 335, 374, 375, 376, 377, 378, 398, 399, 415, 432, 434, 452, 453, 458, 465, 493, 508], "nonconform": 16, "none": [0, 1, 2, 5, 6, 7, 8, 11, 24, 31, 55, 65, 74, 75, 88, 92, 97, 101, 111, 112, 113, 114, 124, 125, 138, 147, 180, 181, 203, 209, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 246, 253, 255, 256, 257, 258, 260, 261, 262, 265, 266, 284, 287, 288, 289, 290, 291, 292, 293, 295, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 321, 322, 323, 324, 325, 326, 329, 330, 331, 332, 333, 334, 335, 337, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 365, 366, 367, 368, 369, 370, 372, 374, 375, 376, 377, 378, 380, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 410, 413, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 484, 486, 487, 489, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 518, 520, 521], "nonzero": 490, "norm": [17, 21, 55, 65, 105, 108, 109, 124, 125, 180, 181, 267, 284, 372, 375, 377, 400], "norm_first": [374, 376, 378], "norm_lay": [55, 65, 105, 124, 125, 131, 132, 133, 135, 136, 137, 180, 181], "norm_layer_tf": 105, "norm_typ": [284, 372], "normal": [5, 6, 7, 8, 31, 40, 55, 65, 100, 105, 124, 125, 131, 132, 133, 135, 136, 137, 165, 180, 181, 186, 187, 188, 189, 190, 191, 209, 211, 226, 230, 232, 233, 245, 262, 263, 265, 266, 281, 282, 284, 288, 289, 290, 298, 299, 303, 306, 312, 314, 329, 350, 351, 352, 353, 354, 355, 356, 357, 372, 374, 375, 376, 377, 378, 403, 418, 421, 486, 487, 488, 512, 522, 523], "normalized_shap": [266, 357], "notat": [10, 11, 13, 14, 15, 337], "note": [236, 329], "noth": [244, 247, 248, 249], "notimplementederror": [2, 217, 383], "notin": 453, "nov": 100, "novel": [7, 100, 105], "now": 16, "np": [147, 159, 160, 161, 162, 163, 164, 176, 177, 178, 216, 218, 294, 345, 348, 372, 407, 415, 422, 427, 434, 435, 436, 439, 443, 445, 446, 472, 478, 513], "npy": [5, 6, 7, 8], "num": [375, 377, 442], "num_block": 31, "num_class": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 314, 345, 348], "num_decoder_lay": [213, 374], "num_embed": [284, 372], "num_encoder_lay": [213, 374], "num_featur": [223, 288, 289, 290, 350, 351, 352, 354, 355, 356], "num_head": [31, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 105, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 197, 213, 318, 374, 375, 376, 377, 378], "num_init_featur": [69, 70, 71, 72, 73], "num_lay": [197, 375, 377], "num_paramet": 222, "num_stag": 125, "number": [0, 1, 2, 5, 6, 7, 8, 10, 13, 15, 19, 20, 22, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 213, 218, 220, 222, 223, 235, 236, 237, 238, 239, 240, 241, 243, 248, 249, 250, 253, 255, 257, 261, 262, 263, 265, 268, 269, 270, 282, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 300, 303, 304, 313, 318, 321, 322, 323, 324, 325, 326, 327, 337, 340, 342, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 366, 367, 368, 369, 370, 372, 374, 375, 376, 377, 378, 385, 386, 390, 391, 392, 395, 407, 415, 416, 419, 420, 422, 432, 435, 437, 439, 442, 461, 462, 463, 465, 476, 477, 479, 480, 483, 484, 486, 487, 488, 489, 493, 494, 496, 497, 498, 501, 503, 504, 510, 515, 517, 518, 520, 523], "numer": [14, 22, 25, 245, 256, 257, 262, 263, 265, 266, 267, 288, 289, 290, 311, 330, 344, 345, 350, 351, 352, 353, 354, 355, 356, 357, 374, 376, 378, 396, 397, 398, 399, 400, 401, 402, 403, 415, 422, 424, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 478, 513], "numpi": [16, 216, 218, 345, 348, 407, 415, 422, 427, 440, 472, 475, 482, 494, 496, 503, 513, 523], "o": [3, 208, 212, 318, 367, 370, 443, 444, 481], "object": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523], "observ": 398, "obtain": [1, 105], "occur": [15, 287, 408, 411, 412, 484], "occurr": 23, "odot": [329, 332, 333, 334, 335], "off": [44, 120, 409], "offer": [4, 10, 41, 42, 44, 54, 68, 95, 106, 107, 110, 120, 128, 129, 131, 133, 198, 382, 394, 421, 481, 523], "offset": 439, "often": [23, 156, 157, 236, 237, 238, 240, 241, 243, 282, 284, 324, 330, 345, 348, 435, 445, 513, 517, 521, 523], "old": 391, "older": 401, "onc": [208, 209, 210], "one": [0, 11, 14, 171, 172, 173, 174, 179, 207, 222, 223, 232, 236, 239, 255, 274, 278, 288, 289, 290, 312, 313, 314, 321, 324, 333, 345, 348, 350, 354, 365, 368, 380, 383, 408, 410, 411, 418, 433, 440, 441, 444, 461, 463, 485, 495, 502, 507, 513], "ones": [16, 253, 255, 272, 273, 321, 322, 323, 342, 350, 351, 352, 354, 355, 356, 357, 363, 364, 382, 439, 440, 444, 447, 483], "ones_lik": 447, "onli": [281, 282, 286, 307, 310, 329, 330, 332, 333, 334, 335, 344, 345, 348, 350, 351, 352, 354, 355, 356, 357, 368, 369, 370, 404, 408, 409, 435, 453, 461, 463, 472, 475, 481, 494, 495, 497, 498, 501, 504, 505, 506], "onto": [26, 28, 209], "openml": [5, 6, 7, 8, 16], "oper": [3, 10, 11, 13, 14, 15, 16, 17, 22, 25, 31, 55, 57, 59, 61, 105, 134, 145, 146, 165, 166, 167, 168, 169, 170, 209, 216, 217, 220, 225, 226, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 243, 246, 250, 253, 255, 268, 269, 270, 274, 275, 276, 278, 279, 280, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 319, 321, 322, 323, 324, 325, 327, 329, 331, 332, 333, 334, 335, 337, 340, 341, 342, 359, 360, 361, 362, 365, 366, 367, 368, 369, 370, 372, 382, 408, 409, 410, 413, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 435, 437, 438, 443, 445, 457, 459, 460, 461, 462, 463, 465, 467, 469, 471, 472, 475, 477, 484, 489, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 513, 515, 521], "operand": 422, "operatornam": [23, 25, 318, 374, 375, 376, 377, 378, 415, 479, 480, 481], "opposit": [395, 498], "optim": [3, 10, 14, 16, 17, 23, 25, 26, 28, 40, 45, 46, 49, 52, 54, 60, 63, 64, 69, 75, 84, 85, 86, 87, 88, 89, 90, 91, 94, 97, 98, 99, 100, 112, 113, 117, 118, 120, 121, 122, 123, 126, 186, 187, 216, 218, 221, 222, 243, 321, 322, 323, 372, 382, 385, 386, 387, 388, 389, 390, 391, 392], "optimizer_st": [383, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405], "option": [1, 5, 6, 7, 8, 10, 13, 14, 15, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 228, 232, 235, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 253, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 274, 275, 276, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 299, 300, 301, 302, 303, 304, 305, 309, 314, 319, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 337, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 365, 366, 367, 368, 369, 370, 372, 374, 375, 376, 377, 378, 380, 383, 385, 386, 387, 388, 389, 390, 391, 392, 395, 403, 405, 413, 415, 416, 417, 418, 420, 422, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 453, 461, 462, 463, 465, 471, 476, 477, 478, 479, 480, 481, 483, 484, 486, 487, 488, 492, 496, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 513, 517, 518, 520], "ord": [24, 267], "order": [1, 3, 10, 16, 24, 28, 219, 220, 221, 222, 223, 415, 434, 476, 481, 499, 504, 508, 512], "ordered_dict": 223, "ordereddict": [217, 219, 220, 223], "organ": [55, 219, 220, 221, 223, 412], "orient": 523, "origin": [32, 33, 34, 35, 36, 37, 38, 39, 41, 90, 100, 104, 180, 181, 191, 209, 211, 244, 287, 294, 316, 408, 452, 458, 481, 483, 494, 495, 496, 497, 498, 499, 503, 504, 508, 509, 521], "orthogon": [25, 26, 28], "orthonorm": 26, "oscil": [395, 403, 405], "other": [2, 3, 22, 57, 59, 61, 90, 99, 101, 104, 120, 124, 209, 216, 217, 220, 223, 299, 300, 329, 330, 382, 383, 409, 421, 435, 437, 443, 445, 475, 492, 504, 523], "otherwis": [148, 149, 150, 151, 152, 153, 154, 155, 166, 167, 168, 169, 170, 225, 228, 229, 230, 232, 246, 305, 307, 308, 309, 310, 312, 314, 331, 332, 333, 334, 335, 346, 365, 366, 367, 368, 369, 370, 375, 377, 383, 404, 412, 428, 429, 461, 463, 479, 480, 491, 504, 505, 506, 508], "otim": [25, 253, 340], "out": [0, 3, 4, 10, 16, 211, 225, 226, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 262, 263, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 284, 286, 299, 300, 303, 304, 319, 321, 322, 323, 324, 325, 326, 327, 329, 331, 332, 333, 334, 335, 337, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 376, 395, 415, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 448, 449, 450, 451, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 484, 485, 489, 494, 495, 496, 497, 501, 502, 503, 505, 506, 509, 510, 511], "out_channel": [101, 113, 117, 118, 220, 223, 288, 289, 290, 291, 292, 293, 295, 321, 322, 323, 324, 325, 326, 351, 352, 365, 366, 367, 368, 369, 370, 382], "out_featur": [219, 220, 223, 253, 255, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 322, 323, 329, 332, 333, 340, 342, 344, 345, 346, 347, 348, 350, 354, 357, 365, 366, 367, 368, 369, 370], "outcom": [517, 518, 520], "outer": [11, 447], "outlier": [258, 346], "outputoutput_height": 243, "output_lay": [220, 223], "output_pad": [239, 240, 241, 324, 325, 326], "output_s": [220, 268, 269, 270, 271, 272, 273, 359, 360, 361, 362, 363, 364], "output_width": 243, "output_with_norm": [284, 372], "output_with_pad": [284, 372], "outsid": [0, 331, 408], "over": [0, 1, 2, 3, 11, 14, 17, 112, 122, 145, 146, 175, 205, 209, 210, 217, 220, 222, 232, 268, 269, 270, 271, 272, 273, 294, 314, 321, 322, 323, 324, 325, 326, 345, 348, 350, 351, 352, 354, 355, 356, 357, 360, 361, 364, 365, 366, 367, 368, 369, 370, 384, 386, 392, 395, 396, 397, 398, 399, 416, 420, 434, 461, 462, 463, 471, 475, 477, 517, 518, 520], "overal": [203, 246], "overdetermin": 25, "overfit": [1, 29, 205, 247, 250, 330, 332, 333, 334, 335, 395, 398, 403, 405], "overhead": [100, 113, 294], "overlap": [100, 105, 211], "overli": 311, "overrid": [2, 3, 55, 108, 109, 120, 121, 122, 180, 181, 481], "overridden": [217, 383], "overshoot": 384, "overwrit": [219, 221], "own": [4, 16, 219, 220, 221, 222, 236, 237, 238, 239, 240, 304, 382, 515], "p": [24, 25, 74, 218, 221, 222, 244, 245, 246, 247, 248, 249, 250, 267, 284, 327, 329, 330, 332, 333, 334, 335, 365, 368, 369, 372, 517, 518, 520, 523], "p_": 208, "p_d": [367, 370], "p_h": [327, 366, 367, 370], "p_w": [327, 366, 367, 370], "packag": [2, 3, 4, 10, 17, 207, 382, 394, 412, 419, 421, 513, 523], "pad": [101, 209, 210, 211, 220, 223, 236, 237, 238, 239, 240, 241, 243, 268, 269, 270, 271, 274, 275, 276, 278, 279, 280, 282, 284, 288, 289, 290, 291, 292, 293, 295, 321, 322, 323, 324, 325, 326, 327, 351, 352, 359, 360, 361, 362, 365, 366, 367, 368, 369, 370, 372, 490], "pad_after_dim1": 494, "pad_after_dim2": 494, "pad_before_dim1": 494, "pad_before_dim2": 494, "pad_width": 494, "padding_height": 243, "padding_idx": [284, 372], "padding_mod": 282, "padding_width": 243, "pair": 253, "panda": [16, 100], "pang": 100, "paper": [32, 33, 34, 35, 36, 37, 38, 39, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 89, 134], "paradigm": 100, "parallel": [1, 3, 55, 100, 175, 212, 318], "param": [217, 218, 221, 222, 383, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405], "param1": 217, "param_dict": 221, "param_group": [383, 394], "param_groups_setup": 383, "param_list": 222, "param_s": 412, "paramet": [0, 2, 16, 100, 102, 103, 104, 208, 212, 217, 382, 383, 384, 394, 421, 523], "parameter": 114, "parameterdict": 224, "parameterlist": 224, "parent": [16, 382, 422], "pars": 407, "part": [216, 217, 239, 304, 324, 325, 372, 382, 409, 421, 435, 436, 439, 443, 444, 445, 446, 483, 500, 505, 506, 513, 523], "partial": [16, 18, 19, 20, 22, 23, 24, 25, 27, 28, 225, 226, 228, 229, 230, 231, 232, 233, 253, 255, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 321, 322, 323, 324, 325, 329, 332, 333, 334, 335, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 365, 366, 367, 368, 369, 370, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 448, 449, 450, 451, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 482, 484, 489, 491, 492, 494, 495, 496, 497, 498, 501, 502, 503, 504, 505, 506, 509, 510, 511], "particip": [16, 218, 513], "particular": [219, 221], "particularli": [25, 55, 57, 59, 61, 105, 112, 120, 159, 160, 161, 162, 163, 164, 220, 221, 222, 223, 232, 245, 255, 288, 289, 290, 291, 292, 293, 314, 342, 345, 348, 354, 355, 356, 357, 385, 399, 409, 412, 442, 458, 512], "partit": [105, 363, 452, 500], "pass": [2, 16, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 156, 157, 158, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 175, 176, 177, 178, 179, 192, 193, 194, 195, 196, 205, 209, 211, 217, 218, 219, 220, 221, 222, 223, 281, 286, 288, 289, 290, 294, 295, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 322, 323, 324, 325, 329, 330, 331, 332, 333, 334, 335, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 354, 357, 365, 366, 367, 368, 369, 370, 374, 375, 376, 377, 378, 382, 408, 422, 440, 441, 442, 462, 471, 475, 476, 477, 481, 484, 489, 495, 497, 501, 505, 506, 510, 513, 523], "past": [395, 396, 398, 403], "patch": [55, 57, 59, 61, 100, 105, 124, 125, 180, 181, 197, 198, 199, 200, 201, 202, 211, 243, 327, 366], "patch_norm": [180, 181], "patch_siz": [55, 124, 125, 131, 132, 133, 134, 135, 136, 137, 180, 181, 197, 198, 199, 200, 201, 202], "path": [3, 5, 6, 7, 8, 40, 41, 55, 92, 105, 125, 246, 331], "pathwai": 100, "patienc": 391, "pattern": [10, 11, 13, 14, 15, 16, 31, 57, 59, 61, 100, 208, 229, 294, 310, 321, 322, 323, 337], "pedagog": 16, "penal": [395, 403, 405], "penalti": [396, 397, 398, 399, 400, 401, 402], "penros": 25, "per": [1, 13, 109, 113, 125, 131, 132, 133, 135, 136, 137, 159, 160, 161, 162, 163, 164, 176, 177, 178, 208, 209, 210, 211, 235, 268, 272, 318, 327, 337, 354, 355, 356, 357, 359, 364, 378, 386, 482], "perceptron": 92, "perform": [3, 10, 11, 14, 16, 17, 18, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 61, 63, 64, 66, 67, 68, 75, 84, 85, 86, 87, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 113, 114, 115, 116, 120, 121, 122, 123, 126, 127, 128, 129, 131, 134, 155, 171, 172, 173, 174, 175, 181, 187, 188, 189, 192, 201, 205, 207, 209, 215, 217, 218, 222, 226, 235, 236, 237, 238, 239, 240, 241, 262, 263, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 291, 292, 293, 294, 295, 299, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 315, 316, 321, 322, 323, 324, 325, 327, 329, 332, 333, 334, 335, 337, 340, 341, 342, 350, 351, 352, 354, 355, 356, 357, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 380, 383, 384, 388, 391, 408, 409, 419, 421, 423, 424, 427, 430, 433, 434, 457, 461, 463, 465, 471, 476, 482, 500, 511, 512, 514, 516, 521, 523], "period": 385, "permut": [13, 337, 414, 434, 476], "persist": [216, 413, 416, 417, 418, 420, 437, 438], "perturb": [20, 27, 28, 523], "phase": 31, "phi": [226, 306], "pi": [226, 306, 385, 454, 467, 473], "pick": [282, 481], "pico": [52, 100], "piecewis": [307, 308], "pil": [513, 523], "pinv": 21, "pioneer": 100, "pip": 16, "pipelin": [5, 6, 7, 8, 209, 211, 337, 421, 512, 513, 515], "pixel": [5, 6, 7, 8, 211, 281, 282, 286, 380, 515, 517], "pixel_scal": 211, "place": [210, 297, 299, 300, 301, 302, 303, 304, 415, 422, 465, 491, 498], "placehold": [217, 341], "placement": [16, 422], "plai": 421, "platform": 407, "plot": 492, "point": [4, 287, 390, 408, 409], "pointwis": [291, 292, 293], "pool": [10, 29, 100, 101, 102, 103, 104, 105, 138, 147, 158, 165, 175, 192, 205, 208, 209, 210, 211, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 294, 295, 322, 323, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 461, 463], "pool1": 223, "pool2": 223, "pool_siz": [209, 210], "poorli": 22, "popul": 217, "popular": [4, 100], "portion": [483, 505, 506, 523], "pose": 25, "posit": [1, 18, 23, 31, 100, 180, 181, 197, 213, 217, 223, 235, 287, 305, 309, 310, 312, 319, 365, 366, 367, 368, 369, 370, 374, 375, 376, 377, 378, 404, 410, 432, 483, 491, 496, 499, 503, 504, 511, 516], "possibl": 523, "potenti": [25, 341, 403, 501], "power": [10, 16, 23, 51, 100, 110, 112, 117, 118, 125, 126, 128, 132, 135, 138, 186, 199, 294, 337, 384, 410, 447, 465, 512, 513, 523], "pp": [100, 212], "practic": [25, 95, 345, 348], "practition": 523, "pre": [31, 84, 85, 86, 87, 100, 148, 152, 153], "preactbottleneck": [148, 152, 153], "preced": [100, 218, 380], "precis": [136, 211, 407, 440, 465], "precomput": 209, "preconfigur": [76, 77, 78, 79, 80, 81, 82, 83, 98, 99, 109], "pred": [16, 411], "predecessor": [41, 125], "predefin": [4, 32, 33, 34, 35, 36, 37, 38, 39, 182, 183, 184, 185, 186, 188, 189, 190, 191, 198, 199, 200, 201, 202, 207, 220, 312, 372, 384, 407], "predict": [55, 100, 180, 182, 183, 184, 185, 203, 207, 209, 210, 211, 344, 345, 347, 348], "prefer": 392, "prefix": [217, 412], "prepar": [3, 410, 494, 496, 503, 513, 523], "prepend": [217, 482], "preprint": 100, "preprocess": [3, 4, 243, 287, 421, 465, 512, 513, 523], "present": [344, 345, 346, 348, 350, 351, 352, 354, 355, 356, 357, 366], "preserv": [14, 100, 126, 244, 246, 282, 287, 329, 331, 415, 435, 436, 439, 443, 444, 445, 446, 462, 471, 472, 477, 479, 480, 481, 483, 498, 508], "preset": [4, 106, 107, 108, 109], "prevent": [1, 10, 16, 105, 219, 220, 221, 222, 223, 235, 247, 250, 267, 311, 319, 330, 332, 333, 334, 335, 344, 345, 377, 378, 384, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 411], "previou": [100, 395, 404, 408, 411], "previous": [388, 398], "primarili": 223, "principl": 100, "printprint_grad": 422, "prior": 408, "priorit": [117, 118, 122, 295, 307], "prob": 413, "probabilist": 421, "probabl": [74, 90, 124, 180, 181, 197, 209, 210, 213, 226, 232, 235, 244, 245, 246, 247, 248, 249, 250, 256, 306, 314, 318, 319, 329, 330, 331, 332, 333, 334, 335, 344, 345, 348, 374, 376, 378, 413, 486, 488, 517, 518, 520, 523], "problem": [25, 26, 28, 100, 228, 305, 309, 402], "proceed": [100, 208], "process": [2, 3, 4, 23, 26, 28, 29, 40, 55, 57, 59, 61, 98, 100, 105, 124, 145, 146, 147, 175, 180, 204, 205, 210, 211, 212, 222, 236, 237, 238, 265, 287, 288, 289, 290, 294, 295, 312, 316, 321, 323, 340, 350, 351, 352, 354, 355, 356, 357, 365, 367, 368, 370, 374, 375, 377, 395, 492, 513, 514, 515, 516, 521, 523], "produc": [16, 29, 205, 210, 211, 268, 269, 270, 271, 272, 294, 321, 322, 323, 359, 360, 361, 362, 363, 408, 415, 419, 421], "product": [11, 26, 28, 124, 125, 235, 308, 313, 315, 318, 319, 340, 357, 382, 425, 426, 430, 431, 434], "profil": 408, "program": [409, 421], "progress": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523], "project": [26, 28, 55, 57, 59, 61, 65, 105, 124, 125, 130, 131, 132, 133, 135, 136, 137, 180, 181, 209, 213, 318], "projector": 25, "promin": [365, 367, 368, 369, 370], "promot": [223, 345, 348, 382], "propag": [11, 16, 19, 20, 22, 25, 26, 27, 28, 100, 217, 223, 253, 255, 281, 286, 294, 324, 366, 367, 403, 404, 413, 425, 426, 427, 431, 434, 461, 463, 479, 480, 481, 483, 492, 493, 494, 497, 499, 504, 507, 508, 509], "proper": [284, 483, 504], "properli": [0, 222, 232, 314, 382, 384], "properti": [17, 19, 22, 23, 226, 230, 244, 306, 312, 329, 397, 402, 408], "proport": [5, 6, 7, 8, 477], "proportion": 521, "propos": [134, 208, 209, 210, 211], "proposal_gener": 209, "provid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 15, 16, 17, 30, 42, 51, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 88, 89, 90, 97, 100, 101, 114, 120, 123, 126, 128, 129, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 180, 181, 189, 192, 197, 199, 200, 203, 204, 206, 207, 210, 213, 217, 219, 220, 221, 222, 226, 235, 255, 269, 270, 284, 287, 319, 337, 344, 345, 346, 348, 360, 361, 362, 365, 366, 367, 368, 369, 370, 372, 374, 375, 377, 380, 382, 383, 384, 388, 389, 394, 395, 396, 403, 405, 409, 419, 421, 422, 427, 435, 444, 461, 463, 476, 478, 488, 496, 501, 503, 523], "pseudo": [22, 25], "purpos": [42, 47, 51, 416, 420, 435, 443, 445], "pvt": [125, 126, 127, 128, 129, 130], "pvt_huge": 100, "pvt_larg": 100, "pvt_medium": 100, "pvt_small": 100, "pvt_tini": 100, "pvt_v2": [131, 132, 133, 134, 135, 136, 137], "pvt_v2_b0": 100, "pvt_v2_b1": 100, "pvt_v2_b2": [100, 134], "pvt_v2_b2_li": 100, "pvt_v2_b3": 100, "pvt_v2_b4": 100, "pvt_v2_b5": 100, "pvtv2": [100, 131, 132, 133, 134, 135, 136, 137], "pypi": 16, "pyramid": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137], "python": [16, 407, 422, 440], "pytorch": [16, 478], "q": [26, 55, 100, 105, 125, 235, 318, 319, 378], "q_1": 55, "q_i": [31, 318], "qk": [31, 55, 105, 376, 378], "qk_scale": [55, 124, 125, 180, 181], "qkv_bia": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 124, 125, 131, 132, 133, 135, 136, 137, 180, 181], "qr": 21, "quad": [25, 55, 284, 318, 324, 344, 345, 346, 347, 348, 368, 369, 370, 375, 377, 423, 424, 428, 429, 430, 433, 505, 506, 514], "quadrat": [125, 134, 346], "qualifi": 391, "quanfu": 100, "queri": [55, 65, 124, 125, 131, 132, 133, 135, 136, 137, 180, 181, 235, 318, 319, 378], "quick": 408, "quickli": 384, "quicksort": [481, 499], "quoc": 100, "quotient": 424, "r": [14, 15, 26, 31, 100, 281, 282, 318, 324, 325, 500, 517, 518, 519, 520], "r_t": 402, "radam": 406, "radix": [138, 139, 140, 141, 142, 143, 144, 145, 146, 481], "rais": [0, 1, 2, 11, 217, 382, 383, 432, 482], "rameswar": 100, "rand": [414, 421], "randint": [414, 421], "randn": [13, 15, 16, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 105, 106, 107, 108, 109, 110, 115, 116, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 176, 177, 178, 179, 192, 203, 205, 209, 210, 211, 235, 291, 292, 293, 294, 295, 318, 319, 324, 325, 326, 337, 374, 375, 376, 377, 378, 382, 414, 419, 421], "random": [1, 2, 3, 13, 15, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 115, 116, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 176, 177, 178, 179, 203, 209, 210, 211, 235, 291, 292, 293, 294, 295, 318, 331, 337, 372, 374, 375, 376, 377, 378, 516, 517, 518, 519, 520, 523], "random_integ": 421, "random_tensor": 421, "randomcrop": [522, 523], "randomgrayscal": [522, 523], "randomhorizontalflip": [522, 523], "randomli": [1, 244, 246, 247, 248, 249, 250, 287, 329, 332, 333, 334, 335, 415, 516, 517, 518, 519, 520, 523], "randomnoisedataset": [0, 1, 2], "randomrot": [522, 523], "randomverticalflip": 522, "rang": [0, 1, 16, 17, 31, 44, 53, 100, 105, 123, 127, 147, 155, 190, 212, 222, 231, 233, 236, 237, 246, 257, 261, 281, 282, 304, 311, 313, 316, 331, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 403, 405, 413, 415, 417, 442, 449, 450, 453, 486, 487, 488, 515, 519, 523], "rank": 25, "rasul": 7, "rate": [40, 41, 55, 74, 75, 92, 105, 124, 125, 180, 181, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405], "rather": [7, 13, 15, 221, 222, 337, 390, 399, 497], "ratio": [55, 74, 92, 105, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 165, 180, 181, 210, 294, 295, 521], "ravel": 490, "raw": [232, 314, 345, 422], "rceil": 452, "rcnn": [208, 211], "rcond": 25, "re": [16, 218], "reach": [273, 363, 390], "readabl": [10, 16, 219, 220, 221, 223, 337, 382], "readi": [3, 171, 172, 173, 174, 179, 207, 213], "real": [25, 28, 112, 208, 313], "rearrang": [12, 243, 338, 339], "reassembl": 100, "recalibr": [100, 166, 168, 169, 171, 172, 173, 174, 294], "receiv": [368, 369, 370, 494, 504, 505, 506], "recent": 403, "recept": [100, 105, 134, 175, 179, 295], "reciproc": [25, 447, 459, 460, 469], "recogn": 55, "recognit": [100, 104, 128, 145, 146, 180, 182, 183, 184, 185, 191, 208, 322], "recommend": [16, 110], "reconstruct": [241, 499], "rectangular": 439, "rectif": 402, "rectifi": [228, 229, 309, 310, 402], "recurr": [212, 220, 357], "recurs": 217, "red": 517, "reduc": [12, 29, 31, 65, 100, 111, 125, 134, 147, 158, 175, 192, 205, 272, 291, 292, 293, 294, 350, 351, 352, 354, 355, 356, 365, 366, 367, 368, 369, 370, 384, 387, 390, 391, 392, 401, 404, 411, 461, 462, 463, 471, 477, 479, 480, 517], "reducelronplateau": 393, "reduct": [10, 11, 14, 28, 74, 100, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 165, 256, 257, 258, 260, 261, 294, 295, 344, 345, 346, 347, 348, 385, 391, 392, 434, 461, 463], "redund": [209, 211], "reevalu": 383, "refer": [4, 57, 59, 61, 134, 217, 324, 421, 436, 439, 441, 484], "refin": [100, 189, 210, 384], "reflect": [127, 281, 282, 409], "regardless": [25, 495], "region": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523], "regist": [16, 32, 33, 34, 35, 36, 37, 38, 39, 120, 156, 157, 159, 160, 161, 162, 163, 164, 204, 216, 217, 218, 222, 382, 412, 422], "register_buff": 216, "register_hook": 422, "register_model": [30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 98, 99, 102, 103, 104, 115, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 176, 177, 178, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 206, 214, 215], "register_paramet": 217, "registr": [16, 217, 382], "registri": [159, 160, 161, 162, 163, 164, 412], "registry_path": 412, "regress": [4, 208, 209, 210, 211, 260, 346, 347], "regul": [284, 372], "regular": [25, 29, 40, 74, 75, 90, 180, 181, 205, 246, 250, 319, 330, 332, 333, 334, 335, 390, 392, 395, 396, 397, 400, 401, 402, 403, 405], "reimagin": 100, "rel": [31, 100, 180, 181, 210, 384, 391, 481], "relat": [439, 443], "relationship": [31, 126, 128, 521], "relev": [286, 395, 403, 405], "reli": 245, "reliabl": [5, 6, 7, 8], "reliant": [332, 333, 334, 335], "relu": [16, 29, 100, 165, 192, 205, 209, 210, 211, 219, 220, 221, 223, 225, 227, 228, 252, 288, 289, 290, 294, 295, 299, 300, 303, 304, 305, 309, 311, 315, 317, 321, 322, 323, 324, 325, 326, 339, 340, 341, 342, 374, 376, 378], "relu1": 223, "relu2": 223, "relu3": 223, "relu6": [317, 339], "remain": [5, 6, 7, 8, 16, 53, 216, 246, 266, 329, 331, 332, 333, 334, 335, 372, 404], "rememb": 421, "remov": [209, 211, 412, 501, 507], "ren": 208, "reorder": [10, 13, 337, 472, 498], "rep": 503, "repeat": [11, 12, 490, 492, 503], "repetit": [10, 15, 415, 496, 503], "replac": [7, 57, 59, 61, 209, 210, 212, 374, 421, 491, 517], "replic": [15, 16, 327, 375, 377, 482], "repr": 407, "repres": [7, 13, 14, 15, 22, 24, 28, 55, 66, 67, 68, 101, 114, 124, 130, 139, 140, 141, 142, 143, 144, 217, 218, 223, 253, 255, 262, 265, 266, 281, 284, 321, 322, 323, 337, 340, 342, 345, 348, 357, 372, 375, 383, 392, 394, 395, 401, 402, 403, 404, 405, 407, 413, 423, 424, 430, 433, 436, 462, 475, 476, 477, 487, 488, 492, 493, 514, 516, 518, 519, 520, 521], "represent": [31, 100, 108, 125, 126, 127, 128, 129, 132, 136, 137, 138, 145, 146, 156, 157, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 175, 179, 197, 213, 284, 294, 366, 369, 372, 383], "reproduc": [413, 415, 416, 417, 418, 419, 420, 421, 523], "requir": [2, 3, 4, 14, 16, 43, 49, 50, 96, 109, 113, 119, 120, 121, 122, 123, 139, 140, 141, 142, 143, 144, 159, 160, 161, 162, 163, 164, 175, 200, 202, 215, 216, 219, 223, 225, 226, 228, 229, 230, 231, 233, 253, 255, 286, 294, 295, 304, 324, 341, 345, 348, 382, 390, 409, 411, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 439, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 456, 457, 459, 460, 461, 463, 464, 466, 467, 468, 469, 470, 472, 473, 474, 482, 484, 489, 491, 492, 494, 495, 496, 497, 501, 502, 503, 509, 510, 513, 514, 521], "requires_grad": [16, 216, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 243, 253, 255, 281, 282, 284, 286, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 321, 322, 323, 324, 325, 326, 327, 329, 332, 333, 334, 335, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 365, 366, 367, 368, 369, 370, 380, 382, 413, 415, 416, 417, 418, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 482, 483, 484, 489, 491, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511, 513], "rescal": [256, 257, 261, 344, 345, 348], "research": [16, 382], "reset": [218, 385, 419, 422], "reshap": [10, 13, 165, 255, 322, 323, 337, 380, 410, 434, 472, 490, 495], "resid": 422, "residu": [91, 97, 98, 99, 100, 105, 112, 113, 116, 125, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 166, 167, 168, 169, 170, 376, 378], "residualblock": 147, "resili": 404, "resiz": [211, 286, 512, 522, 523], "resnest": [139, 140, 141, 142, 143, 144, 145, 146], "resnest_101": 100, "resnest_14": 100, "resnest_200": 100, "resnest_26": 100, "resnest_269": 100, "resnest_50": 100, "resnest_50_1s4x24d": 100, "resnest_50_4s2x40d": 100, "resnet": [57, 59, 61, 97, 98, 99, 138, 139, 140, 141, 142, 143, 144, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 166, 167, 168, 169, 170, 175, 176, 177, 178, 294], "resnet_1001": 100, "resnet_101": 100, "resnet_152": 100, "resnet_18": 100, "resnet_200": 100, "resnet_269": 100, "resnet_34": 100, "resnet_50": 100, "resnet_arg": 175, "resnext": [159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 179], "resnext_101_32x16d": 100, "resnext_101_32x32d": 100, "resnext_101_32x4d": 100, "resnext_101_32x8d": 100, "resnext_101_64x4d": 100, "resnext_50_32x4d": 100, "resolut": [31, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 92, 100, 105, 106, 107, 110, 125, 126, 134, 171, 172, 173, 174, 179, 181, 211, 239, 240, 422], "resolv": [13, 14, 15, 337, 407], "resourc": [16, 45, 46, 48, 49, 52, 53, 93, 100, 113, 117, 118, 119, 120, 121, 122, 123, 200], "respect": [13, 16, 18, 19, 20, 22, 23, 24, 25, 26, 28, 101, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 216, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 253, 255, 281, 286, 295, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 321, 322, 323, 324, 327, 329, 332, 333, 334, 335, 337, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 365, 366, 367, 368, 369, 370, 386, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 453, 457, 459, 460, 461, 462, 463, 467, 469, 471, 475, 476, 477, 492, 494, 496, 503, 517], "respons": [100, 171, 172, 173, 174, 219, 263, 353, 394], "rest": [505, 506], "restor": [294, 388, 408, 411], "restructur": 497, "result": [10, 11, 13, 15, 18, 22, 23, 25, 100, 217, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 236, 237, 238, 239, 243, 253, 255, 268, 269, 270, 273, 274, 275, 276, 278, 279, 280, 281, 282, 286, 287, 295, 307, 311, 314, 318, 331, 337, 382, 383, 409, 413, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 456, 457, 459, 460, 461, 463, 464, 466, 467, 468, 469, 470, 472, 473, 474, 475, 478, 484, 486, 488, 489, 492, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 508, 509, 510, 513, 516, 517, 523], "resum": [385, 386, 387, 388, 389, 390, 391, 392, 394], "retain": [100, 125, 218, 245, 330, 422, 435, 440, 441, 445, 461, 462, 463, 471, 477, 479, 480, 483, 491, 505, 506, 513], "retent": 513, "rethink": 100, "retriev": [0, 2, 219, 221, 222, 284, 504], "return": [0, 1, 2, 3, 5, 6, 7, 8, 16, 32, 33, 34, 35, 36, 37, 38, 39, 97, 101, 109, 110, 121, 123, 165, 209, 210, 211, 216, 217, 219, 220, 221, 222, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 321, 322, 323, 324, 325, 326, 329, 331, 332, 333, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 354, 357, 365, 366, 367, 368, 369, 370, 375, 377, 382, 383, 388, 389, 391, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 412, 512, 523], "return_invers": 508, "reus": [100, 209, 513], "reusabl": [223, 331, 382, 512], "rev": [324, 325], "revers": [16, 223, 422, 476, 499, 518, 520], "revolution": 100, "rfloor": [327, 392, 458], "rgb": [5, 6, 31, 65, 89, 90, 91, 98, 99, 109, 110, 124, 180, 181, 211], "rho": 396, "rho_": 402, "rho_t": 402, "rich": [16, 136, 208], "richer": 126, "right": [23, 24, 25, 27, 28, 31, 55, 105, 226, 232, 267, 306, 314, 318, 327, 344, 345, 346, 348, 350, 351, 352, 354, 355, 356, 357, 368, 369, 370, 376, 378, 472, 481, 514], "rightarrow": [13, 318, 337, 500], "rmsprop": 406, "rob": 100, "robust": [42, 47, 94, 121, 190, 191, 245, 287, 329, 332, 333, 334, 335, 346, 382, 396, 516, 517, 519, 523], "roi": [208, 209, 210], "roi_cls_loss": 210, "roi_reg_loss": 210, "roialign": 209, "roipool": 209, "roland": 7, "role": [421, 523], "roll": 490, "root": [4, 5, 6, 7, 8, 397, 403, 469], "ross": [208, 211], "rotat": [252, 285, 519, 523], "rotated_imag": 287, "round": [447, 452, 458], "rout": [368, 369, 370, 504], "row": [19, 20, 22, 27, 255, 284, 439, 492, 493, 499, 505, 506, 510], "rpn": [208, 210], "rpn_cls_loss": 210, "rpn_reg_loss": 210, "rprop": 406, "rule": [15, 16, 22, 23, 326, 337, 410, 423, 424, 428, 429, 430, 432, 433, 440], "run": [16, 216, 262, 265, 288, 289, 290, 350, 351, 352, 354, 355, 356, 396, 408, 419, 421], "running_mean": [216, 262, 265, 350, 351, 352, 354, 355, 356], "running_var": [262, 265, 350, 351, 352, 354, 355, 356], "runtim": [11, 75, 220, 223, 331, 382, 442], "s_": 404, "s_1": [434, 500], "s_2": 500, "s_d": [367, 370], "s_h": [327, 366, 367, 370], "s_i": 500, "s_k": 434, "s_n": 500, "s_w": [327, 366, 367, 370], "safe": [408, 411], "safeguard": 267, "sain": 100, "same": [19, 20, 22, 23, 27, 133, 232, 244, 245, 246, 247, 248, 249, 250, 262, 263, 265, 266, 267, 269, 270, 287, 288, 289, 290, 291, 292, 293, 295, 311, 321, 322, 323, 324, 325, 326, 329, 332, 333, 334, 335, 341, 350, 351, 352, 354, 355, 356, 357, 359, 360, 361, 365, 366, 367, 368, 369, 370, 404, 407, 413, 419, 421, 427, 438, 441, 444, 446, 452, 457, 458, 461, 462, 463, 465, 472, 481, 484, 489, 491, 495, 497, 499, 501, 502, 505, 506, 508, 510, 515], "sampl": [0, 1, 2, 3, 5, 6, 7, 8, 84, 85, 86, 87, 89, 90, 91, 98, 99, 101, 102, 103, 104, 115, 116, 138, 139, 140, 141, 142, 143, 144, 145, 146, 171, 172, 173, 174, 179, 268, 269, 270, 281, 282, 299, 300, 301, 302, 303, 304, 329, 332, 333, 334, 335, 340, 342, 345, 348, 357, 359, 360, 361, 413, 418, 421, 442, 488, 514, 516, 518, 519, 520, 521], "sandbox": 16, "sandler": 100, "satisfi": [18, 20, 27, 500], "satur": [305, 523], "save": [2, 216, 218, 383, 388, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 411, 412], "scalabl": [3, 47, 74, 100, 159, 160, 161, 162, 163, 164, 181, 203, 382], "scalar": [16, 19, 24, 256, 257, 258, 260, 261, 413, 422, 440, 441, 491], "scale": [14, 20, 25, 31, 40, 46, 48, 49, 50, 52, 54, 55, 57, 59, 61, 66, 67, 68, 69, 74, 75, 92, 98, 100, 102, 103, 104, 105, 106, 107, 110, 111, 115, 119, 120, 122, 123, 124, 125, 126, 130, 134, 137, 138, 145, 146, 148, 149, 150, 153, 166, 167, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 198, 199, 200, 201, 209, 210, 211, 225, 230, 232, 235, 246, 262, 263, 265, 266, 284, 294, 295, 303, 304, 305, 307, 309, 312, 313, 314, 316, 318, 319, 329, 331, 332, 333, 334, 335, 345, 350, 351, 352, 353, 354, 355, 356, 357, 372, 380, 386, 389, 395, 397, 398, 399, 421, 477, 521], "scale_by_keep": [246, 331], "scale_factor": 380, "scale_fn": 386, "scaled_dot_product_attent": [234, 252], "scaleddotproductattent": [320, 339], "scenario": [45, 50, 52, 120, 121, 122, 123, 134, 221, 222, 357, 385, 386, 392, 399, 400, 513, 517], "schedul": [330, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395], "scientif": 410, "score": [147, 158, 175, 209, 210, 211, 232, 235, 319, 345, 434], "score_thresh": 211, "scratch": 16, "script": 421, "se": [74, 100, 166, 167, 168, 169, 170, 171, 172, 173, 174], "se_resnet_101": 100, "se_resnet_152": 100, "se_resnet_18": 100, "se_resnet_34": 100, "se_resnet_50": 100, "se_resnext_101_32x4d": 100, "se_resnext_101_32x8d": 100, "se_resnext_101_64x4d": 100, "se_resnext_50_32x4d": 100, "se_scal": 74, "seamless": [0, 1, 3, 4, 14, 337, 382, 421], "seamlessli": [3, 4, 10, 13, 15, 17, 218, 220, 223, 382, 523], "search": [100, 208, 211], "second": [20, 125, 136, 220, 221, 253, 294, 340, 398, 399, 400, 401, 402, 410, 423, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 472, 489, 492, 504, 520], "section": 427, "see": [16, 427], "seed": [413, 414, 415, 416, 417, 418, 420, 421, 523], "seek": [16, 123], "seen": 396, "segment": [100, 137, 186, 187, 188, 189, 190, 191, 208, 240, 241, 325, 326], "select": [14, 15, 100, 175, 176, 177, 178, 179, 208, 210, 211, 286, 294, 295, 368, 370, 386, 471, 481, 504, 511], "selectivekernel": 296, "self": [0, 1, 2, 3, 16, 29, 31, 55, 65, 66, 67, 68, 74, 75, 88, 92, 97, 100, 101, 111, 112, 113, 114, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 165, 180, 181, 192, 197, 205, 209, 210, 211, 212, 213, 216, 217, 218, 219, 220, 221, 222, 230, 246, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 321, 322, 323, 324, 325, 326, 329, 330, 331, 332, 333, 337, 340, 342, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 374, 375, 376, 378, 382, 383, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 411, 412, 422, 491, 498, 512, 513], "selfattent": 378, "selu": [227, 244, 252, 317, 329, 339], "selunetwork": 312, "semant": [55, 135, 208, 325], "semodul": 296, "senet": [166, 167, 168, 169, 170, 171, 172, 173, 174], "sens": 207, "sensit": [258, 346, 350, 351, 352], "sentenc": 207, "sentiment": [4, 207], "separ": [0, 55, 100, 111, 145, 146, 203, 236, 237, 238, 240, 291, 292, 293, 354, 355, 356], "seq_len": [235, 318, 319, 374, 375, 376, 377, 378], "sequenc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523], "sequenti": [29, 97, 101, 165, 192, 203, 205, 209, 210, 211, 212, 219, 220, 224, 236, 288, 289, 290, 337, 341, 375, 377, 512, 523], "seri": [88, 102, 103, 105, 133, 135, 175, 236, 288, 321, 365, 368], "serial": [216, 217, 394], "serv": [3, 7, 16, 69, 97, 165, 192, 213, 217, 219, 220, 221, 222, 223, 382, 404, 422, 513], "set": [3, 4, 5, 6, 7, 8, 16, 31, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 119, 120, 121, 126, 145, 146, 156, 157, 171, 172, 173, 174, 179, 209, 210, 218, 222, 235, 236, 237, 238, 240, 284, 309, 310, 312, 319, 321, 322, 323, 329, 334, 335, 340, 342, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 372, 383, 398, 399, 403, 413, 416, 417, 418, 419, 420, 421, 435, 437, 438, 440, 441, 445, 446, 461, 463, 478, 479, 480, 481, 491, 505, 506, 508, 513, 517, 523], "setup": [4, 108, 109, 159, 160, 161, 162, 163, 164], "sever": [25, 321, 322, 323, 365, 366, 367, 368, 369, 370, 512, 523], "sgd": [16, 384, 385, 386, 387, 388, 389, 390, 391, 392, 395, 402, 406], "sgn": 24, "shaoq": 208, "shape": [3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 19, 20, 22, 23, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 92, 93, 94, 95, 96, 97, 100, 101, 105, 106, 107, 108, 109, 110, 113, 117, 118, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 159, 160, 161, 162, 163, 164, 165, 171, 172, 173, 174, 176, 177, 178, 179, 192, 203, 205, 208, 209, 210, 211, 212, 216, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 294, 295, 299, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 321, 322, 323, 324, 325, 326, 327, 329, 330, 332, 333, 334, 335, 337, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 374, 375, 376, 377, 378, 382, 386, 410, 413, 415, 416, 417, 418, 420, 421, 422, 425, 434, 437, 438, 439, 440, 441, 443, 444, 445, 446, 452, 453, 458, 459, 460, 461, 462, 463, 465, 467, 469, 471, 472, 476, 477, 479, 480, 481, 482, 484, 485, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 503, 505, 506, 508, 510, 514, 515, 516, 517, 518, 519, 520, 521, 523], "shapelik": 417, "share": [55, 100, 208, 209, 211], "sharp": 386, "shen": 294, "shift": [100, 105, 180, 181, 182, 183, 184, 185, 186, 189, 190, 211, 262, 263, 265, 266, 307, 350, 351, 352, 353, 354, 355, 356, 357, 498], "shorthand": 427, "should": [13, 14, 15, 16, 101, 216, 281, 337, 374, 375, 376, 377, 378, 390, 413, 415, 416, 417, 418, 420, 422, 437, 438, 449, 450, 475, 482, 494, 512], "show": [282, 409, 412], "shown": [55, 315, 419], "shrink": 396, "shuffl": [1, 2, 3, 415], "side": [27, 220, 223, 236, 237, 238, 239, 240, 274, 275, 276, 278, 279, 280, 288, 289, 290, 321, 322, 323, 324, 325, 326, 327, 365, 366, 367, 368, 369, 370], "sigma": [25, 31, 294, 299, 301, 303, 313, 315, 350, 351, 352, 354, 355, 356, 357, 476], "sigma_c": 515, "sigma_i": 25, "sigmoid": [227, 252, 294, 299, 300, 303, 304, 307, 308, 315, 317, 339, 344], "sigmoidnetwork": 313, "sign": [23, 346, 404, 447], "signal": [288, 321, 322, 323, 350, 354, 365, 366, 367, 368, 369, 370], "signific": 43, "significantli": [100, 110, 112, 134, 135, 136, 137, 158, 188, 294, 512], "silicon": [16, 110, 407], "sim": [329, 332, 333, 334, 335], "similar": [10, 57, 59, 61, 207, 211, 299, 300, 427, 440, 472, 478, 482, 494, 507], "similarli": [28, 475], "simonyan": 100, "simpl": [3, 4, 16, 211, 223, 236, 237, 238, 239, 253, 255, 274, 275, 276, 278, 279, 280, 306, 307, 308, 310, 311, 312, 313, 315, 316, 321, 322, 323, 329, 332, 333, 334, 335, 340, 342, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 365, 366, 367, 368, 369, 370, 382, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 409, 410, 425, 426, 431, 512], "simplebackbon": 210, "simplebinaryclassificationmodel": 344, "simpleblock": 246, "simpleclassificationmodel": [345, 348], "simplegelumodel": 306, "simplehardsigmoidmodel": 307, "simplehardswishmodel": 308, "simpleleakyrelumodel": 309, "simplemodel": [311, 331, 342, 412], "simpleregressionmodel": 347, "simplerelumodel": 310, "simpleselumodel": 312, "simplesigmoidmodel": 313, "simpleswishmodel": 315, "simpletanhmodel": 316, "simpli": [16, 409, 475, 476, 497], "simplic": [100, 307, 310], "simplifi": [4, 13, 15, 84, 85, 86, 87, 100, 102, 204, 223, 288, 289, 290, 337], "simul": 523, "simultan": [55, 287], "sin": [447, 454], "sinc": [23, 26, 219, 220, 221, 222, 236, 237, 238, 304, 409, 413, 418, 472, 492, 511, 523], "sine": [450, 467, 468], "singl": [0, 4, 23, 26, 28, 57, 59, 61, 147, 208, 209, 232, 288, 289, 290, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 321, 322, 323, 327, 345, 357, 366, 367, 368, 369, 370, 375, 376, 377, 378, 383, 408, 416, 420, 437, 442, 484, 501, 515, 517, 523], "singleton": [15, 357], "singular": [19, 22, 23, 25, 27, 28], "sinh": [447, 455, 474], "size": [0, 1, 2, 3, 10, 13, 14, 15, 28, 31, 55, 56, 63, 64, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 92, 95, 100, 101, 102, 103, 104, 105, 114, 115, 117, 118, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 147, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 197, 198, 199, 200, 201, 202, 205, 209, 210, 211, 213, 214, 215, 218, 220, 235, 236, 237, 238, 239, 240, 241, 243, 245, 248, 249, 250, 256, 257, 258, 260, 261, 262, 263, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 318, 321, 322, 323, 324, 325, 326, 327, 330, 337, 340, 342, 344, 345, 348, 350, 351, 352, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 377, 378, 380, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 412, 417, 420, 421, 422, 461, 462, 463, 471, 477, 479, 480, 482, 483, 484, 489, 500, 501, 509, 510, 514, 516, 521, 523], "size_or_sect": 500, "sk": [100, 175, 176, 177, 178, 179, 295], "sk_resnet_18": 100, "sk_resnet_34": 100, "sk_resnet_50": 100, "sk_resnext_50_32x4d": 100, "skblock": 175, "skip": [100, 411], "sknet": [176, 177, 178, 179], "slice": [253, 422, 475, 481, 507, 508], "slide": [243, 327, 365, 367, 368, 370], "slight": 294, "slightli": 523, "slope": [228, 305, 309], "slow": [3, 402], "small": [25, 44, 46, 48, 51, 63, 84, 85, 86, 87, 94, 95, 100, 102, 103, 104, 109, 113, 117, 118, 121, 129, 184, 185, 190, 191, 201, 202, 228, 245, 256, 257, 262, 263, 265, 266, 267, 309, 312, 330, 344, 345, 346, 350, 351, 352, 353, 354, 355, 356, 357, 366, 369, 374, 376, 378, 384, 396, 397, 398, 399, 400, 401, 402, 403, 404], "smallbackbon": 211, "smaller": [10, 45, 55, 57, 59, 61, 64, 68, 84, 85, 86, 87, 100, 119, 205, 211, 220, 223, 382, 397, 398, 429, 481, 483, 514, 516, 521], "smallest": [452, 463, 504], "smooth": [90, 226, 305, 306, 315, 387, 395, 403, 523], "smoother": [387, 395], "so": [219, 220, 221, 222, 287, 382, 402, 408, 411, 437, 438, 452, 458, 465, 512], "softmax": [31, 55, 105, 227, 235, 252, 295, 317, 318, 319, 339, 345, 376, 378], "softmaxmodel": 314, "solut": [25, 27], "solv": [17, 18, 21, 25, 26, 28], "solver": 17, "some": [225, 246, 247, 287, 329, 331, 332, 333, 350, 351, 352, 354, 355, 356, 397, 398, 399, 483], "sometim": 410, "sophist": [220, 223], "sort": [16, 490, 504, 508], "sourc": [213, 214, 215, 235, 374, 421], "space": [20, 26, 28, 57, 59, 61, 105, 181, 213, 236, 237, 238, 239, 240, 241, 243, 268, 269, 270, 288, 289, 290, 291, 292, 293, 321, 322, 323, 324, 325, 326, 327, 359, 360, 361, 435, 442, 523], "span": 4, "spars": [397, 398], "spatial": [29, 31, 100, 105, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 147, 158, 175, 186, 192, 205, 209, 210, 241, 245, 263, 272, 273, 281, 282, 289, 294, 322, 323, 324, 327, 350, 351, 352, 354, 355, 356, 357, 363, 364, 366, 367, 368, 369, 370, 380, 452, 492], "spatial_dim": 294, "spatio": 323, "spec": 65, "special": [0, 1, 25, 216, 217, 218, 329, 421], "specif": [4, 11, 65, 70, 71, 72, 73, 84, 85, 86, 87, 97, 111, 119, 120, 121, 122, 123, 145, 146, 156, 157, 219, 220, 221, 222, 223, 295, 304, 329, 332, 333, 334, 335, 354, 355, 356, 372, 382, 383, 390, 409, 421, 437, 461, 463, 491, 496, 503], "specifi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 24, 30, 66, 67, 68, 69, 75, 101, 114, 115, 116, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 138, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 175, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 204, 206, 220, 232, 243, 250, 256, 257, 258, 260, 261, 266, 267, 268, 269, 270, 271, 272, 282, 284, 286, 287, 294, 314, 318, 321, 322, 323, 324, 327, 337, 344, 345, 346, 347, 348, 357, 359, 360, 361, 362, 364, 366, 367, 368, 369, 370, 372, 380, 383, 386, 390, 407, 415, 416, 417, 418, 419, 420, 422, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 445, 446, 453, 461, 462, 463, 465, 471, 472, 476, 477, 478, 479, 480, 481, 482, 483, 484, 487, 489, 491, 494, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 519, 521, 523], "speech": [207, 354], "speed": [117, 118, 307, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 411], "split": [4, 100, 138, 145, 146, 240, 318, 483, 484, 489, 490, 507, 510], "split_tensor": 500, "springer": 100, "sqrt": [31, 55, 105, 226, 235, 263, 299, 300, 303, 304, 306, 318, 319, 350, 351, 352, 353, 354, 355, 356, 357, 376, 378, 396, 397, 398, 399, 401, 402, 403, 447, 449, 450], "squar": [1, 3, 18, 19, 20, 22, 23, 25, 26, 27, 28, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 197, 198, 199, 200, 201, 202, 245, 258, 260, 330, 346, 347, 396, 397, 398, 403, 447, 469], "squaredataset": [0, 1, 2, 3], "squeez": [74, 100, 113, 117, 118, 165, 168, 171, 172, 173, 174, 294, 490, 507], "sr_ratio": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "sra": 100, "src": [212, 374, 377, 378], "src_key_pad": 377, "src_key_padding_mask": [374, 378], "src_mask": [374, 377, 378], "src_vocab_s": [213, 214, 215], "stabil": [22, 25, 31, 100, 105, 245, 256, 257, 262, 263, 265, 266, 267, 284, 288, 289, 290, 311, 330, 344, 345, 350, 351, 352, 353, 354, 355, 356, 357, 372, 374, 376, 378, 384, 395, 396, 397, 398, 399, 400, 401, 402, 403, 515], "stabl": [190, 299, 300, 303, 304, 329, 345, 395, 399, 400, 403, 404, 405, 499], "stack": [15, 223, 295, 324, 374, 375, 377, 487, 489, 490, 510, 523], "stage": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 66, 67, 68, 92, 100, 105, 106, 107, 109, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], "stage1": 165, "stage2": 165, "stage3": 165, "stage4": 165, "stall": 391, "stand": 134, "standalon": 311, "standard": [16, 42, 47, 57, 59, 61, 94, 119, 122, 147, 156, 157, 213, 214, 226, 228, 291, 292, 293, 299, 301, 303, 305, 306, 309, 324, 329, 374, 404, 408, 418, 421, 427, 512, 515, 523], "star": [324, 325, 326], "start": [1, 3, 10, 384, 395, 397, 404, 422, 435, 442, 514, 516], "state": [49, 100, 199, 216, 217, 218, 220, 223, 383, 388, 408, 409, 411, 419], "state_dict": [217, 218, 383, 388, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405], "statement": [408, 411], "static": 223, "statist": [25, 244, 262, 265], "std": [5, 6, 7, 8, 209, 301, 512, 515, 523], "stem": [97, 100, 105, 138, 147, 158, 175], "stem_typ": 147, "stem_width": [138, 139, 140, 141, 142, 143, 144, 147], "step": [10, 16, 31, 218, 243, 295, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 411, 435, 512, 513], "step_siz": [384, 386, 388, 392, 404], "step_size_down": 386, "step_size_up": 386, "steplr": [384, 388, 393], "still": [52, 396], "stn": 282, "stochast": [40, 41, 55, 74, 75, 92, 105, 124, 180, 181, 246, 331, 395, 405], "stochastic_depth": 74, "stop": [391, 435, 442], "storag": [219, 221], "store": [2, 4, 5, 6, 7, 8, 16, 147, 158, 175, 216, 217, 218, 219, 220, 221, 222, 294, 359, 360, 361, 362, 363, 364, 411, 514, 515, 516, 517, 518, 519, 520, 521], "str": [5, 6, 7, 8, 10, 11, 13, 14, 15, 31, 114, 147, 192, 217, 219, 221, 223, 256, 257, 258, 260, 261, 282, 286, 337, 380, 383, 386, 388, 391, 412, 422, 492], "straight": 481, "straightforward": [405, 409, 423], "strategi": [31, 100, 122, 189, 282, 384, 388, 394], "stream": 209, "streamlin": [2, 3, 100], "strength": [31, 330], "strict": [217, 383], "stride": [57, 59, 61, 75, 101, 102, 103, 104, 113, 114, 117, 118, 209, 210, 211, 220, 223, 236, 237, 238, 239, 240, 241, 243, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 288, 289, 290, 291, 292, 293, 295, 321, 322, 323, 324, 325, 326, 327, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370], "stride_height": 243, "stride_width": 243, "strike": [47, 114, 121], "string": [10, 11, 13, 14, 15, 217, 219, 221, 223, 321, 322, 323, 337, 383, 407], "strong": [31, 128, 131, 134, 198], "stronger": [108, 129, 133, 189], "structur": [0, 10, 14, 26, 31, 75, 100, 113, 181, 203, 210, 216, 217, 220, 245, 330, 337, 382, 383, 412, 422, 439, 513], "student": 16, "studi": 16, "style": [10, 16, 97, 265, 354, 355, 422, 492], "sub": [219, 220, 221, 222, 223, 382, 447, 483, 500, 507, 514, 516], "subclass": [1, 2, 3, 16, 217, 218, 219, 382, 383, 388], "sublay": [374, 376, 378], "submodul": [217, 382], "subscript": 11, "subsequ": [220, 223, 304, 421], "subset": [145, 146, 241, 332, 333], "subspac": 318, "substanti": 200, "subtract": [433, 515], "subvolum": 273, "suffer": 397, "suffix": 134, "suit": [52, 70, 71, 72, 73, 90, 111, 119, 120, 122, 134, 135, 137, 175, 191, 198, 299, 300, 303, 304, 384], "suitabl": [42, 44, 45, 48, 50, 76, 77, 78, 79, 80, 81, 82, 83, 97, 100, 102, 103, 104, 106, 107, 109, 110, 112, 117, 118, 120, 123, 126, 131, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 167, 168, 170, 182, 183, 184, 185, 201, 214, 346, 397, 398, 416], "sum": [10, 11, 14, 16, 24, 219, 220, 221, 222, 223, 232, 235, 256, 257, 258, 260, 261, 267, 281, 282, 295, 314, 324, 325, 327, 344, 345, 346, 347, 348, 397, 422, 423, 426, 431, 434, 447, 475, 477, 482, 484, 489, 492, 496, 499, 500, 503, 504, 510], "sum_": [13, 14, 23, 31, 232, 263, 314, 337, 344, 345, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 365, 366, 367, 390, 425, 426, 434, 462, 471, 475, 477, 482, 492, 496], "sum_i": [24, 431], "sum_j": [11, 431], "sum_k": 427, "summar": [32, 33, 34, 35, 36, 37, 38, 39, 74, 156, 157, 203, 207, 365, 366, 367], "summari": [156, 157, 171, 172, 173, 174, 179], "summat": [10, 11, 13, 14, 15, 23, 390], "sun": 294, "super": [16, 209, 210, 211, 216, 217, 218, 219, 220, 221, 222, 246, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 321, 322, 323, 324, 325, 326, 329, 331, 332, 333, 340, 342, 344, 345, 346, 347, 348, 350, 351, 352, 354, 357, 365, 366, 367, 368, 369, 370, 382, 383, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 412], "superior": [54, 100, 189], "superpixel": 211, "supplementari": 122, "support": [1, 3, 4, 11, 13, 16, 17, 23, 24, 25, 26, 28, 115, 124, 147, 219, 220, 221, 222, 223, 235, 282, 286, 287, 319, 327, 372, 380, 382, 394, 401, 421, 422, 423, 424, 427, 428, 429, 430, 432, 433, 436, 439, 453, 459, 460, 462, 467, 469, 471, 475, 476, 477, 481, 484, 492, 497, 499, 500, 513, 523], "suppos": 523, "suppress": [208, 211], "sure": [382, 523], "svd": [21, 25], "swap": [13, 337], "swapax": 447, "swin": [180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], "swin_bas": 100, "swin_larg": 100, "swin_smal": 100, "swin_tini": 100, "swin_v2": 181, "swin_v2_bas": 100, "swin_v2_giant": 100, "swin_v2_hug": 100, "swin_v2_larg": 100, "swin_v2_smal": 100, "swin_v2_tini": 100, "swintransform": [182, 183, 184, 185], "swintransformer_v2": [186, 187, 188, 189, 190, 191], "swish": [117, 118, 317, 339], "symbol": [13, 14, 15, 337], "symmetr": [18, 268, 269, 270, 271, 303, 304, 316], "syntax": [1, 10, 13, 14, 15, 337, 411, 427], "system": [16, 17, 18, 25, 26, 27, 100, 121, 212, 282, 409, 422, 492], "systemat": [100, 523], "szegedi": [89, 100], "t": [10, 16, 25, 31, 55, 100, 105, 281, 282, 324, 325, 374, 375, 376, 378, 385, 386, 387, 389, 390, 391, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 422, 427, 440, 441, 478, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523], "t0": 395, "t1": [422, 478], "t2": [422, 478], "t_": [375, 385], "t_0": 375, "t_cpu": 422, "t_i": 375, "t_max": 385, "tabl": [32, 33, 34, 35, 36, 37, 38, 39, 74, 372], "tabular": 4, "tailor": [4, 113, 121, 139, 140, 141, 142, 143, 144, 382, 523], "take": [26, 363, 365, 366, 367, 368, 369, 370, 380, 389, 408, 411, 512], "taken": 475, "tan": [100, 447], "tangent": [233, 316, 451, 473, 474], "tanh": [101, 220, 223, 226, 227, 252, 299, 300, 303, 304, 306, 317, 339, 447], "tanhnetwork": 316, "target": [5, 6, 7, 8, 52, 209, 210, 213, 214, 215, 223, 256, 257, 258, 260, 261, 268, 269, 270, 273, 281, 286, 344, 345, 346, 347, 348, 359, 360, 361, 362, 363, 364, 374, 375, 376, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 441, 482, 507, 514, 516, 521], "target_tensor": [344, 345, 346, 347, 348], "target_transform": [5, 6, 7, 8], "task": [4, 17, 29, 30, 31, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 61, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 94, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 198, 199, 200, 201, 203, 207, 213, 214, 215, 231, 232, 237, 239, 240, 241, 253, 256, 257, 260, 261, 294, 295, 313, 314, 321, 322, 323, 324, 325, 344, 345, 346, 347, 348, 354, 355, 356, 365, 367, 368, 370, 374, 398, 410, 421, 439, 442, 523], "teach": 207, "techniqu": [18, 22, 40, 75, 92, 100, 122, 186, 188, 191, 205, 246, 262, 329, 330, 332, 333, 334, 335, 354, 355, 356, 384, 394, 521, 523], "templat": 213, "tempor": [239, 321, 323, 367, 370], "temporarili": [408, 411], "ten": 465, "tensortensordot": 447, "term": [13, 25, 53, 131, 132, 133, 135, 136, 137, 210, 253, 288, 289, 290, 291, 292, 293, 318, 374, 376, 378, 395, 399, 401, 402, 403, 405], "test": [4, 5, 6, 7, 8, 442], "test_siz": [5, 6, 7, 8], "text": [4, 19, 23, 24, 31, 55, 105, 147, 158, 175, 176, 177, 178, 203, 207, 208, 219, 225, 228, 229, 230, 232, 235, 236, 237, 238, 239, 240, 241, 246, 268, 269, 270, 271, 274, 275, 276, 278, 279, 280, 284, 288, 289, 290, 291, 292, 293, 294, 295, 299, 300, 303, 304, 305, 307, 308, 309, 310, 311, 312, 314, 315, 318, 319, 321, 322, 323, 324, 325, 326, 329, 330, 331, 332, 333, 334, 335, 344, 345, 346, 347, 348, 365, 366, 367, 368, 369, 370, 372, 374, 375, 377, 386, 391, 392, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 415, 417, 422, 423, 424, 426, 428, 429, 430, 432, 433, 434, 448, 452, 453, 458, 461, 462, 463, 465, 466, 471, 472, 477, 479, 480, 481, 482, 484, 489, 491, 494, 495, 496, 497, 498, 500, 501, 503, 504, 505, 506, 507, 509, 510, 511, 514, 515, 516, 518, 519, 520], "textur": 211, "tgt": [212, 374, 375, 376], "tgt_is_caus": [375, 376], "tgt_key_padding_mask": [374, 375, 376], "tgt_mask": [374, 375, 376], "tgt_vocab_s": [213, 214, 215], "th": [253, 344, 345, 347, 348, 354, 355, 356, 428, 429, 432], "than": [0, 1, 7, 13, 15, 221, 222, 225, 228, 258, 291, 292, 293, 305, 309, 315, 337, 346, 383, 390, 399, 434, 442, 452, 458, 475, 482, 483, 494, 502, 507, 514, 516, 521], "thei": [0, 28, 55, 100, 216, 220, 222, 223, 282, 318, 492, 497, 514, 516, 523], "them": [3, 10, 16, 100, 217, 222, 243, 327, 395, 410, 484, 502, 507, 512, 515, 523], "therebi": [329, 366, 367, 369, 370], "theta": [281, 282, 395, 396, 519], "theta_": [395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405], "theta_t": [402, 403], "thi": [0, 1, 2, 3, 5, 6, 7, 8, 11, 13, 14, 15, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 59, 61, 65, 66, 67, 68, 69, 70, 71, 72, 73, 89, 90, 91, 97, 98, 99, 100, 101, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 126, 131, 134, 147, 156, 157, 158, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 198, 199, 200, 201, 202, 203, 209, 210, 213, 216, 218, 220, 221, 222, 223, 229, 231, 232, 233, 236, 237, 238, 239, 240, 243, 245, 246, 253, 255, 268, 271, 281, 284, 286, 287, 291, 292, 293, 294, 295, 299, 300, 303, 304, 305, 306, 307, 309, 310, 312, 313, 314, 315, 316, 319, 321, 322, 323, 324, 325, 327, 329, 330, 331, 332, 333, 334, 335, 337, 340, 341, 342, 344, 345, 346, 348, 350, 351, 352, 354, 355, 356, 357, 359, 362, 365, 366, 367, 368, 369, 370, 372, 382, 384, 385, 386, 387, 389, 390, 391, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 415, 417, 418, 419, 421, 422, 426, 427, 431, 435, 437, 440, 441, 443, 444, 445, 446, 452, 453, 457, 458, 459, 460, 461, 462, 463, 465, 467, 469, 471, 472, 475, 476, 477, 478, 481, 482, 483, 491, 493, 494, 496, 497, 498, 499, 505, 506, 507, 508, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523], "third": [135, 136, 137, 281], "those": [102, 103, 104, 222, 304, 504], "thread": 408, "three": [28, 104, 238, 241, 270, 273, 276, 280, 288, 289, 290, 323, 335, 352, 356, 361, 367, 370], "threshold": [25, 211, 258, 346, 391], "threshold_mod": 391, "through": [0, 3, 4, 15, 20, 25, 26, 28, 29, 40, 55, 88, 97, 100, 101, 114, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 176, 177, 178, 204, 205, 207, 209, 211, 219, 220, 223, 245, 253, 255, 281, 282, 286, 294, 295, 305, 306, 307, 308, 309, 310, 312, 313, 315, 316, 321, 322, 323, 329, 332, 333, 334, 335, 340, 341, 342, 350, 351, 352, 354, 357, 365, 366, 367, 368, 369, 370, 374, 375, 377, 378, 408, 413, 415, 418, 425, 426, 431, 479, 480, 492, 493, 495, 497, 501, 504, 505, 506, 508, 509, 523], "throughout": [180, 181, 197, 213, 230, 513], "ti": [100, 202], "tier": 49, "tight": 134, "tile": [15, 490], "time": [0, 3, 16, 23, 102, 103, 104, 112, 208, 236, 288, 309, 312, 318, 321, 365, 366, 367, 368, 369, 370, 375, 377, 384, 391, 395, 396, 397, 398, 399, 403, 405, 496, 503], "tini": [44, 45, 53, 64, 92, 96, 100, 109, 130], "tinynet": 16, "to_tensor": [5, 6, 7, 8], "togeth": [223, 512, 523], "toggl": [408, 411], "token": [55, 92, 100, 125, 132, 372], "token_mix": 92, "too": [16, 384, 404], "tool": [3, 382, 384, 408, 410, 421, 512, 523], "top": [18, 19, 20, 26, 28, 49, 235, 253, 255, 286, 318, 319, 321, 322, 323, 340, 342, 434, 504, 514, 516], "topk": 490, "topk_indic": 504, "topolog": 16, "torch": [192, 327, 478], "toronto": [5, 6], "total": [0, 1, 2, 5, 6, 7, 8, 10, 13, 15, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 98, 99, 102, 103, 104, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 206, 210, 214, 215, 218, 318, 337, 408, 422, 497], "total_loss": 210, "total_op": 408, "totensor": [512, 523], "touch": 16, "toward": 208, "toybackbon": [209, 211], "trace": [17, 447], "traceback": 411, "track": [16, 288, 289, 290, 350, 351, 352, 354, 355, 356, 382, 408, 409, 411, 413, 415, 416, 417, 418, 420, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 472, 478, 481, 482, 491, 493, 499, 508, 513], "track_running_stat": [288, 289, 290, 350, 351, 352, 354, 355, 356], "trade": [44, 120], "tradit": [7, 10, 31, 55, 65, 100, 123, 212, 396, 397, 400, 401, 402], "trail": 266, "train": [1, 2, 3, 4, 5, 6, 7, 8, 31, 40, 75, 88, 89, 90, 100, 105, 171, 172, 173, 174, 179, 208, 210, 212, 213, 216, 217, 220, 222, 223, 232, 244, 245, 246, 247, 248, 249, 250, 262, 265, 284, 287, 306, 309, 312, 313, 314, 316, 329, 330, 331, 332, 333, 334, 335, 350, 351, 352, 354, 355, 356, 372, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 411, 452, 458, 512, 515, 516, 517, 518, 519, 520, 523], "trainabl": [350, 351, 352, 354, 355, 356, 372, 382], "transact": [208, 294], "transfer": [265, 354, 355, 415], "transform": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511], "transform_pipelin": [512, 523], "transformed_imag": [512, 523], "transformer_bas": 212, "transformer_big": 212, "transformer_decod": 375, "transformer_encod": 377, "transformerdecod": [339, 374, 379], "transformerdecoderlay": [339, 374, 375, 379], "transformerencod": [339, 374, 379], "transformerencoderlay": [339, 374, 377, 379], "transit": [31, 69, 346], "translat": [207, 213, 281, 366, 369, 374], "transpar": 16, "transpos": [13, 18, 239, 240, 241, 324, 325, 326, 447], "transposit": [11, 13, 337], "treat": [0, 216, 357, 382], "triangular": [18, 26, 375, 376, 377, 378, 386, 505, 506], "triangular2": 386, "tril": 490, "triu": 490, "true": [1, 2, 3, 4, 5, 6, 7, 8, 16, 28, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 88, 89, 90, 117, 118, 131, 132, 133, 134, 135, 136, 137, 138, 180, 181, 211, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 235, 243, 244, 246, 247, 248, 249, 250, 253, 255, 262, 265, 281, 282, 284, 286, 288, 289, 290, 291, 292, 293, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 321, 322, 323, 324, 325, 326, 327, 329, 331, 332, 333, 334, 335, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 365, 366, 367, 368, 369, 370, 374, 375, 376, 377, 378, 380, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 398, 399, 403, 407, 409, 413, 416, 417, 418, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 491, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513], "truli": 16, "truth": 210, "try": 0, "tu": [100, 105], "tune": [120, 123, 523], "tupl": [2, 3, 5, 6, 7, 8, 20, 24, 26, 28, 31, 69, 105, 147, 209, 210, 211, 217, 218, 236, 237, 238, 239, 240, 241, 243, 266, 269, 270, 272, 273, 274, 275, 276, 278, 279, 280, 281, 286, 287, 288, 289, 290, 291, 292, 293, 321, 322, 323, 324, 325, 326, 327, 341, 357, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 380, 398, 399, 400, 401, 402, 404, 416, 417, 418, 420, 422, 434, 437, 440, 443, 445, 461, 462, 463, 471, 477, 482, 483, 484, 486, 487, 488, 489, 492, 494, 497, 498, 499, 500, 501, 502, 504, 507, 508, 509, 510, 514, 515, 516, 521], "twice": 494, "two": [19, 20, 22, 23, 25, 26, 28, 102, 103, 104, 105, 113, 145, 146, 176, 192, 209, 236, 237, 238, 240, 253, 275, 279, 294, 295, 322, 334, 340, 351, 355, 366, 369, 378, 398, 399, 400, 401, 402, 404, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 472, 475, 483, 492, 500, 504], "type": [32, 33, 34, 35, 36, 37, 38, 39, 55, 65, 92, 101, 105, 124, 125, 138, 147, 165, 175, 180, 181, 207, 216, 217, 218, 253, 340, 374, 376, 378, 407, 415, 422, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 478, 492, 513], "typeddict": 210, "typeerror": [0, 1, 2, 217, 383], "typic": [16, 17, 31, 66, 114, 120, 147, 158, 175, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 209, 216, 232, 244, 245, 287, 294, 311, 312, 314, 330, 331, 348, 350, 351, 352, 354, 355, 356, 394, 395, 403, 405, 509, 513, 515, 519, 521, 523], "u": [25, 28, 300, 302, 304], "u_": 400, "ultra": [46, 153, 187], "unbind": 490, "unbound": 507, "unchang": [16, 216, 250, 305, 309, 310, 312, 329, 332, 333, 334, 335, 341, 495, 501], "uncontract": 434, "uncontrol": 16, "undefin": 432, "under": [159, 160, 161, 162, 163, 164, 382], "underbrac": 23, "underdetermin": 25, "undergo": [246, 378, 523], "underli": [0, 84, 85, 86, 87, 89, 90, 91, 98, 99, 422, 472, 478, 489, 495, 497, 510], "understand": [16, 66, 67, 68, 100, 135, 136, 188, 205, 207, 223, 523], "understood": [13, 324], "unexpect": [10, 217, 220, 223, 267, 421], "unfold": [242, 252, 328, 339], "unifi": [0, 16, 208, 210, 407], "uniform": [298, 300, 304, 321, 322, 323, 340, 342, 414, 416, 417, 421, 441, 517, 518, 519, 520], "uniformli": [416, 420], "uniniti": [437, 438], "unintend": [10, 14], "union": 192, "uniqu": [18, 25, 27, 219, 221, 372, 415, 490], "unit": [29, 101, 205, 209, 210, 225, 226, 228, 229, 230, 299, 300, 303, 304, 305, 306, 309, 310, 312, 329], "unless": [148, 149, 150, 151, 152, 153, 154, 155, 166, 167, 168, 169, 170, 211, 408, 481], "unlik": [31, 65, 100, 180, 216, 219, 220, 221, 222, 228, 305, 309, 329, 357, 396, 397, 399, 400, 401, 402, 404], "unnecessari": 10, "unpad": 494, "unseen": 523, "unspecifi": [407, 440], "unsqueez": 490, "unstabl": 22, "unsur": 10, "until": 16, "up": [100, 383, 388, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 411, 452, 519, 521], "updat": [4, 41, 216, 222, 223, 329, 332, 333, 334, 335, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 408, 411], "upon": [41, 90, 100, 113, 114, 189, 191, 208, 209, 219, 220, 221, 222], "upper": [26, 302, 386, 404, 420, 452, 453, 488, 505, 506], "upper_triangular": 506, "upsampl": [239, 240, 241, 324, 325, 326, 339, 381], "upstream": 16, "us": [0, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 20, 22, 23, 25, 26, 28, 31, 40, 55, 57, 59, 61, 65, 69, 74, 75, 88, 89, 90, 91, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 191, 202, 207, 208, 209, 210, 211, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 253, 255, 260, 262, 263, 265, 267, 269, 270, 281, 282, 284, 286, 287, 288, 289, 290, 294, 295, 299, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 337, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 365, 366, 367, 368, 369, 370, 372, 374, 380, 382, 383, 384, 385, 387, 389, 390, 392, 394, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 452, 453, 457, 458, 461, 462, 463, 465, 471, 472, 477, 481, 486, 488, 491, 492, 494, 496, 499, 500, 501, 503, 505, 506, 509, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523], "usag": [3, 17, 42, 43, 44, 45, 53, 54, 55, 69, 105, 203, 209, 210, 211, 220, 223, 246, 291, 292, 293, 319, 324, 330, 383, 394, 408, 411, 442, 514, 515, 516, 517, 518, 519, 520, 521], "use_aux": [88, 89, 90], "use_h": [117, 118], "use_s": [117, 118], "user": [1, 2, 3, 4, 16, 123, 219, 220, 221, 222, 382, 389, 397, 512, 513, 523], "usual": [282, 345], "util": [3, 17, 31, 114, 130, 176, 177, 178, 189, 221, 222, 245, 382, 421], "v": [16, 20, 25, 28, 31, 55, 100, 105, 125, 235, 318, 319, 376, 378, 398, 399, 401, 402, 436], "v1": [88, 89, 97, 98, 99, 100, 111, 112], "v2": [46, 47, 48, 49, 50, 51, 52, 53, 75, 84, 85, 86, 87, 97, 99, 100, 112, 113, 116, 125, 131, 132, 133, 135, 136, 137, 186, 187, 188, 189, 190, 191], "v3": [88, 90, 91, 100, 113, 117, 118], "v4": [88, 91, 100, 114, 120, 121, 122, 123], "v_": [395, 398, 399, 401, 402, 403, 405], "v_2": 55, "v_i": 318, "v_stack": 510, "v_t": [402, 403], "val": 297, "val_loss": 391, "valid": [11, 288, 289, 290, 291, 292, 293, 295, 321, 322, 323, 324, 325, 326, 391, 476], "valu": [10, 16, 19, 23, 24, 25, 28, 40, 55, 65, 66, 67, 68, 92, 110, 111, 114, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 156, 157, 180, 181, 211, 217, 219, 221, 223, 225, 228, 231, 232, 233, 235, 236, 237, 238, 243, 245, 246, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 281, 282, 286, 287, 288, 289, 290, 294, 297, 299, 300, 301, 302, 303, 304, 305, 309, 310, 311, 312, 313, 316, 318, 319, 329, 330, 331, 332, 333, 334, 335, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 359, 365, 366, 367, 368, 369, 370, 374, 375, 376, 377, 378, 380, 384, 391, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 408, 409, 413, 415, 416, 417, 418, 419, 420, 421, 435, 436, 437, 438, 439, 440, 441, 442, 448, 449, 450, 452, 453, 456, 457, 458, 459, 460, 461, 463, 466, 467, 469, 470, 479, 480, 481, 484, 486, 487, 491, 494, 495, 497, 499, 504, 508, 509, 511, 515, 517, 518, 520], "valuabl": 421, "valueerror": [1, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 383], "van": 100, "vanish": [100, 305, 312, 350, 351, 352], "var": 447, "varepsilon": 267, "vari": [40, 175, 220, 222, 268, 286, 359, 386, 519], "variabl": [217, 223, 268, 269, 270, 341, 359, 360, 361, 382, 409, 437, 516, 519], "varianc": [230, 244, 262, 265, 288, 289, 290, 299, 300, 303, 304, 312, 329, 350, 351, 352, 354, 355, 356, 357, 398, 399, 400, 401, 402, 418, 477, 519, 523], "variant": [32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 84, 85, 86, 87, 93, 94, 95, 96, 106, 107, 108, 110, 113, 114, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 130, 131, 132, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 156, 157, 171, 172, 173, 174, 176, 177, 178, 179, 187, 192, 193, 194, 195, 196, 215, 398, 399, 400], "variat": [291, 292, 293, 354, 355, 356, 516, 523], "varieti": [4, 97, 138, 421, 523], "variou": [7, 10, 13, 14, 31, 69, 88, 98, 99, 100, 101, 114, 115, 123, 124, 207, 310, 394, 421, 442, 461, 463, 494, 513], "vasudevan": 100, "vaswani": [212, 374], "vdim": 318, "vdot": 431, "vector": [15, 20, 25, 26, 27, 28, 253, 255, 284, 318, 340, 342, 372, 425, 426, 427, 431], "veloc": [395, 403, 405], "verbos": [13, 385, 386, 387, 388, 389, 390, 391, 392], "veri": [25, 48, 100, 126, 150, 152, 396], "verifi": 10, "versa": 404, "versatil": [31, 100, 123, 421, 492], "version": [16, 28, 40, 88, 92, 97, 101, 102, 103, 120, 125, 127, 134, 324, 327, 337, 403, 431, 498, 517], "vertic": [502, 510, 520], "vgg": 192, "vggnet": [193, 194, 195, 196], "vggnet_11": 100, "vggnet_13": 100, "vggnet_16": 100, "vggnet_19": 100, "via": [3, 4, 16, 105, 123, 175, 422], "vice": 404, "video": [207, 238, 250, 290, 323, 326, 356, 367, 370], "view": [97, 101, 220, 366, 367, 368, 369, 370, 481, 482, 497, 507], "vinod": [5, 6], "vision": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523], "visual": [55, 109, 133, 205, 207], "vit": [31, 65, 180, 198, 199, 200, 201, 202], "vit_bas": 100, "vit_hug": 100, "vit_larg": 100, "vit_smal": 100, "vit_tini": 100, "vocabulari": [213, 214, 215, 372], "vol": 100, "vollgraf": 7, "volum": [273, 364], "volumetr": [238, 241, 250, 290, 323, 326, 356, 364, 367, 370], "vstack": 490, "w": [10, 13, 14, 15, 31, 100, 147, 159, 160, 161, 162, 163, 164, 176, 177, 178, 208, 237, 238, 240, 241, 243, 245, 249, 250, 253, 255, 263, 269, 270, 272, 273, 275, 276, 279, 280, 281, 282, 286, 287, 289, 290, 294, 318, 321, 322, 323, 324, 325, 326, 337, 340, 342, 351, 352, 353, 355, 356, 360, 361, 363, 364, 367, 370, 514, 516], "w24": [68, 100], "w_": [237, 238, 240, 241, 269, 270, 272, 273, 275, 276, 279, 280, 286, 322, 323, 325, 326, 327, 360, 361, 363, 364, 366, 367, 369, 370], "w_1": [376, 378], "w_2": [376, 378], "w_in": 282, "w_k": [31, 55, 105], "w_out": [237, 238, 240, 241, 275, 276, 279, 280, 282], "w_q": [55, 105], "w_v": [55, 105], "wa": [16, 89, 329, 332, 333, 334, 335, 408], "wai": [1, 10, 13, 15, 30, 56, 57, 58, 59, 60, 61, 62, 63, 64, 206, 207, 337, 409, 497], "wait": 391, "wang": 100, "want": [0, 512, 514], "warn": [219, 221, 318, 481], "warp": [208, 211], "warper_output_s": 211, "we": [3, 410, 492], "wei": 100, "weight": [55, 100, 105, 124, 125, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 166, 167, 168, 169, 170, 180, 181, 235, 236, 237, 238, 239, 240, 241, 253, 255, 256, 257, 261, 262, 265, 266, 284, 286, 294, 295, 299, 300, 303, 304, 318, 319, 321, 322, 323, 324, 325, 326, 329, 330, 332, 333, 334, 335, 340, 342, 344, 345, 348, 350, 351, 352, 354, 355, 356, 357, 372, 374, 375, 376, 377, 378, 382, 395, 396, 397, 398, 399, 400, 401, 402, 403, 405, 416, 421], "weight1": 221, "weight2": 221, "weight_decai": [395, 396, 397, 398, 399, 400, 401, 402, 403, 405], "weihao": 100, "weinberg": 100, "well": [52, 70, 71, 72, 73, 75, 90, 120, 134, 135, 175, 191, 198, 299, 300, 327], "wenhai": 100, "were": 223, "weyand": 100, "what": [13, 15, 337], "whatev": 408, "when": [0, 1, 3, 10, 14, 16, 23, 55, 74, 100, 217, 220, 222, 223, 225, 228, 236, 237, 238, 239, 240, 284, 305, 331, 341, 350, 351, 352, 354, 355, 356, 380, 383, 385, 386, 387, 388, 389, 390, 391, 392, 396, 404, 408, 409, 411, 412, 421, 432, 441, 481, 482, 512, 514], "where": [3, 4, 5, 6, 7, 8, 13, 14, 15, 19, 20, 22, 23, 24, 25, 26, 28, 55, 100, 117, 118, 119, 120, 121, 122, 134, 136, 203, 207, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 246, 248, 249, 250, 253, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 274, 275, 276, 278, 279, 280, 281, 282, 284, 286, 287, 294, 295, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 321, 322, 323, 324, 327, 329, 332, 333, 334, 335, 337, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 365, 366, 367, 368, 369, 370, 372, 374, 375, 376, 377, 378, 385, 386, 387, 389, 390, 391, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 421, 422, 423, 424, 428, 429, 430, 432, 433, 437, 438, 452, 453, 457, 458, 459, 460, 461, 462, 463, 467, 469, 471, 475, 476, 477, 483, 484, 490, 491, 493, 494, 496, 500, 503, 505, 506, 507, 512, 513, 514, 515, 516, 517, 518, 519, 520], "wherev": 491, "whether": [1, 16, 19, 31, 55, 74, 88, 89, 90, 117, 118, 124, 125, 131, 132, 133, 135, 136, 137, 138, 180, 181, 210, 217, 218, 299, 300, 331, 403, 409, 413, 415, 416, 417, 418, 420, 422, 437, 438, 440, 441, 461, 462, 463, 471, 477, 499, 508, 511], "which": [0, 7, 14, 16, 19, 20, 22, 23, 24, 25, 26, 28, 32, 33, 34, 35, 36, 37, 38, 39, 55, 57, 59, 61, 65, 75, 91, 99, 100, 105, 111, 112, 114, 115, 119, 125, 129, 139, 140, 141, 142, 143, 144, 145, 146, 171, 172, 173, 174, 175, 179, 180, 182, 183, 184, 185, 193, 194, 195, 196, 209, 211, 213, 217, 219, 221, 223, 228, 232, 258, 267, 287, 291, 292, 293, 295, 305, 306, 309, 311, 314, 316, 329, 346, 348, 350, 351, 352, 354, 355, 356, 357, 372, 376, 378, 390, 392, 398, 399, 401, 403, 409, 415, 416, 417, 420, 434, 449, 450, 451, 454, 455, 459, 460, 461, 462, 463, 464, 467, 468, 469, 471, 473, 474, 475, 477, 479, 480, 481, 482, 483, 484, 493, 496, 497, 498, 499, 500, 502, 504, 505, 506, 507, 508, 509, 511, 513, 514, 516, 517, 518, 519, 520, 521, 523], "while": [16, 31, 41, 46, 52, 53, 64, 65, 66, 67, 68, 84, 85, 86, 87, 95, 99, 100, 108, 111, 121, 128, 129, 130, 132, 133, 134, 135, 158, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 179, 181, 200, 207, 220, 223, 244, 245, 306, 310, 311, 331, 375, 382, 385, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 408, 472, 491, 497, 502, 517, 523], "who": [219, 220, 221, 222], "whose": [28, 385, 386, 387, 388, 389, 390, 391, 392, 438, 441, 444, 446, 448, 453, 457, 466, 472, 481], "wide": [4, 5, 6, 8, 17, 25, 53, 100, 123, 147, 155, 156, 157, 190, 229, 240, 310, 321, 322, 345], "wide_resnet_101": 100, "wide_resnet_50": 100, "wider": [44, 156, 157, 236, 237], "wideresnet": 100, "width": [31, 62, 74, 75, 100, 108, 109, 110, 111, 115, 138, 145, 146, 156, 157, 158, 159, 160, 161, 162, 163, 164, 175, 203, 237, 238, 240, 241, 243, 249, 250, 263, 269, 270, 272, 273, 275, 276, 279, 280, 282, 286, 287, 295, 322, 323, 327, 351, 352, 353, 355, 356, 360, 361, 363, 366, 367, 369, 370, 380, 407, 514, 516, 521], "width_coef": 74, "width_multipli": [111, 115], "window": [100, 105, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 274, 275, 276, 278, 279, 280, 365, 366, 367, 368, 369, 370, 396, 461, 463], "windows_s": [180, 181], "wise": [10, 15, 100, 105, 169, 171, 172, 173, 174, 210, 225, 226, 228, 229, 230, 231, 232, 233, 246, 288, 289, 290, 294, 308, 314, 315, 329, 331, 332, 333, 334, 335, 382, 410, 423, 424, 427, 428, 429, 430, 432, 433, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 464, 466, 467, 468, 469, 470, 473, 474, 475, 489, 499, 510, 511], "within": [2, 100, 180, 197, 207, 213, 216, 219, 220, 221, 222, 223, 233, 286, 287, 304, 306, 307, 308, 310, 312, 313, 315, 316, 321, 322, 323, 326, 327, 329, 332, 333, 337, 341, 344, 345, 346, 347, 348, 350, 351, 352, 354, 357, 365, 366, 367, 368, 369, 370, 394, 408, 435, 453, 519, 523], "without": [10, 16, 100, 158, 219, 220, 221, 253, 255, 321, 322, 323, 340, 342, 408, 409, 412, 415, 461, 495, 497, 509], "word": [100, 284, 372], "work": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523], "workflow": [14, 421, 523], "world": 207, "worth": 100, "would": [481, 499], "wrap": [3, 362, 363, 382, 384, 408, 411, 422, 478], "wrapper": 382, "wu": 100, "www": [5, 6], "x": [11, 16, 17, 27, 31, 97, 100, 101, 105, 165, 192, 203, 209, 210, 211, 216, 217, 219, 220, 221, 222, 223, 232, 246, 253, 255, 267, 281, 282, 287, 291, 292, 293, 295, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 321, 322, 323, 324, 325, 326, 327, 329, 331, 332, 333, 334, 335, 337, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 365, 366, 367, 368, 369, 370, 376, 377, 378, 382, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 408, 411, 413, 416, 417, 418, 420, 437, 438, 452, 457, 458, 465, 479, 480, 481, 483, 486, 488, 491, 492, 493, 498, 499, 500, 504, 505, 506, 507, 508, 514, 515, 516, 517, 518, 519, 520, 521], "x1": 340, "x2": 340, "x_": [31, 263, 345, 348, 353, 377, 492], "x_0": 377, "x_1": 55, "x_2": 55, "x_c": [345, 348], "x_i": [267, 344, 377, 422, 452, 458, 465, 504], "x_k": 345, "x_test": 16, "x_train": 16, "xavier": [299, 300, 303, 304], "xavier_norm": 298, "xavier_uniform": 298, "xiao": 7, "xie": 100, "xl": [87, 100], "xlarg": [54, 100, 110], "xmax": 487, "xmin": 487, "xy": 492, "x\u2081": 340, "x\u2082": 340, "y": [11, 16, 31, 100, 203, 219, 220, 221, 222, 223, 267, 281, 287, 291, 292, 293, 305, 306, 307, 308, 309, 310, 312, 313, 315, 316, 321, 322, 323, 324, 325, 326, 329, 332, 333, 334, 335, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 365, 366, 367, 368, 369, 370, 374, 375, 376, 377, 378, 413, 416, 417, 418, 420, 422, 437, 438, 491, 492, 498, 507, 508, 517], "y0": 507, "y1": [483, 507], "y2": [483, 507], "y_": [31, 263, 345, 348, 353, 492], "y_c": [345, 348], "y_i": [267, 344], "y_train": 16, "yann": [8, 100], "yet": [16, 51, 53, 108, 121, 282, 410], "yield": [0, 1, 217, 481], "ymax": 487, "ymin": 487, "you": [0, 13, 15, 16, 113, 212, 220, 222, 223, 239, 327, 337, 374, 382, 394, 408, 409, 421, 437, 438, 439, 446, 476, 478, 479, 480, 481, 512, 514, 523], "your": [10, 16, 113, 121, 382, 394, 409, 421, 523], "yu": 100, "z": [11, 16, 100, 324, 326, 376, 378, 438, 445, 446, 481], "zalandoresearch": 7, "ze": 100, "zeiler": [100, 205], "zero": [23, 25, 26, 90, 225, 228, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 267, 274, 275, 276, 278, 279, 280, 281, 282, 284, 297, 299, 300, 301, 302, 303, 304, 305, 307, 309, 310, 312, 318, 321, 322, 323, 324, 325, 326, 327, 329, 331, 332, 333, 334, 335, 357, 365, 366, 367, 368, 369, 370, 372, 374, 375, 376, 377, 378, 382, 383, 396, 397, 398, 399, 400, 401, 402, 403, 437, 438, 439, 440, 446, 447, 452, 453, 458, 465, 466, 493, 494, 504, 505, 506, 511], "zero_grad": [16, 218, 383, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 422], "zeros_lik": [438, 447], "zhang": 100, "zhmoginov": 100, "zhu": 100, "zhuang": 100, "zihang": 100, "zisserman": 100, "\u03c3\u1d62": 25}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "CIFAR10", "CIFAR100", "FashionMNIST", "MNIST", "Image Datasets", "lucid.einops", "lucid.einops.einsum", "Einops Functions", "lucid.einops.rearrange", "lucid.einops.reduce", "lucid.einops.repeat", "Lucid\u00b2 \ud83d\udc8e", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "alexnet", "CoAtNet", "coatnet_0", "coatnet_1", "coatnet_2", "coatnet_3", "coatnet_4", "coatnet_5", "coatnet_6", "coatnet_7", "ConvNeXt", "ConvNeXt_V2", "convnext_base", "convnext_large", "convnext_small", "convnext_tiny", "convnext_v2_atto", "convnext_v2_base", "convnext_v2_femto", "convnext_v2_huge", "convnext_v2_large", "convnext_v2_nano", "convnext_v2_pico", "convnext_v2_tiny", "convnext_xlarge", "CrossViT", "crossvit_15", "crossvit_15_dagger", "crossvit_18", "crossvit_18_dagger", "crossvit_9", "crossvit_9_dagger", "crossvit_base", "crossvit_small", "crossvit_tiny", "CvT", "cvt_13", "cvt_21", "cvt_w24", "DenseNet", "densenet_121", "densenet_169", "densenet_201", "densenet_264", "EfficientNet", "EfficientNet_V2", "efficientnet_b0", "efficientnet_b1", "efficientnet_b2", "efficientnet_b3", "efficientnet_b4", "efficientnet_b5", "efficientnet_b6", "efficientnet_b7", "efficientnet_v2_l", "efficientnet_v2_m", "efficientnet_v2_s", "efficientnet_v2_xl", "Inception", "inception_v1", "inception_v3", "inception_v4", "InceptionNeXt", "inception_next_atto", "inception_next_base", "inception_next_small", "inception_next_tiny", "InceptionResNet", "inception_resnet_v1", "inception_resnet_v2", "Image Classification", "LeNet", "lenet_1", "lenet_4", "lenet_5", "MaxViT", "maxvit_base", "maxvit_base", "maxvit_small", "maxvit_tiny", "maxvit_xlarge", "MobileNet", "MobileNet_V2", "MobileNet_V3", "MobileNet_V4", "mobilenet", "mobilenet_v2", "mobilenet_v3_large", "mobilenet_v3_small", "mobilenet_v4_conv_large", "mobilenet_v4_conv_medium", "mobilenet_v4_conv_small", "mobilenet_v4_hybrid_large", "mobilenet_v4_hybrid_medium", "PVT", "PVT_V2", "pvt_huge", "pvt_large", "pvt_medium", "pvt_small", "pvt_tiny", "pvt_v2_b0", "pvt_v2_b1", "pvt_v2_b2", "pvt_v2_b2_li", "pvt_v2_b3", "pvt_v2_b4", "pvt_v2_b5", "ResNeSt", "resnest_101", "resnest_14", "resnest_200", "resnest_26", "resnest_269", "resnest_50", "resnest_50_1s4x24d", "resnest_50_4s2x40d", "ResNet", "resnet_1001", "resnet_101", "resnet_152", "resnet_18", "resnet_200", "resnet_269", "resnet_34", "resnet_50", "wide_resnet_101", "wide_resnet_50", "ResNeXt", "resnext_101_32x16d", "resnext_101_32x32d", "resnext_101_32x4d", "resnext_101_32x8d", "resnext_101_64x4d", "resnext_50_32x4d", "SENet", "se_resnet_101", "se_resnet_152", "se_resnet_18", "se_resnet_34", "se_resnet_50", "se_resnext_101_32x4d", "se_resnext_101_32x8d", "se_resnext_101_64x4d", "se_resnext_50_32x4d", "SKNet", "sk_resnet_18", "sk_resnet_34", "sk_resnet_50", "sk_resnext_50_32x4d", "SwinTransformer", "SwinTransformer_V2", "swin_base", "swin_large", "swin_small", "swin_tiny", "swin_v2_base", "swin_v2_giant", "swin_v2_huge", "swin_v2_large", "swin_v2_small", "swin_v2_tiny", "VGGNet", "vggnet_11", "vggnet_13", "vggnet_16", "vggnet_19", "ViT", "vit_base", "vit_huge", "vit_large", "vit_small", "vit_tiny", "Xception", "xception", "ZFNet", "zfnet", "lucid.models", "Object detection", "Fast R-CNN", "Faster R-CNN", "R-CNN", "Sequence-to-Sequence", "Transformer", "transformer_base", "transformer_big", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "Attention Functions", "nn.functional.scaled_dot_product_attention", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "nn.functional.conv_transpose1d", "nn.functional.conv_transpose2d", "nn.functional.conv_transpose3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.drop_block", "nn.functional.drop_path", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "nn.functional.global_response_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.normalize", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.adaptive_max_pool1d", "nn.functional.adaptive_max_pool2d", "nn.functional.adaptive_max_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "nn.functional.affine_grid", "nn.functional.grid_sample", "Spatial Functions", "nn.functional.embedding", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "nn.DepthSeparableConv1d", "nn.DepthSeparableConv2d", "nn.DepthSeparableConv3d", "nn.SEModule", "nn.SelectiveKernel", "Fused Layers", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.HardSigmoid", "nn.HardSwish", "nn.LeakyReLU", "nn.ReLU", "nn.ReLU6", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Swish", "nn.Tanh", "Activation Layers", "nn.MultiHeadAttention", "nn.ScaledDotProductAttention", "Attention Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "nn.ConvTranspose1d", "nn.ConvTranspose2d", "nn.ConvTranspose3d", "nn.Unfold", "Convolution Layers", "nn.AlphaDropout", "nn.DropBlock", "nn.DropPath", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "nn.Rearrange", "Einops Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.GlobalResponseNorm", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AdaptiveMaxPool1d", "nn.AdaptiveMaxPool2d", "nn.AdaptiveMaxPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "nn.Embedding", "Sparse Layers", "nn.Transformer", "nn.TransformerDecoder", "nn.TransformerDecoderLayer", "nn.TransformerEncoder", "nn.TransformerEncoderLayer", "Transformer Layers", "nn.Upsample", "Vision Layers", "lucid.nn", "optim.Optimizer", "optim.lr_scheduler", "lr_scheduler.CosineAnnealingLR", "lr_scheduler.CyclicLR", "lr_scheduler.ExponentialLR", "lr_scheduler.LRScheduler", "lr_scheduler.LambdaLR", "lr_scheduler.MultiStepLR", "lr_scheduler.ReduceLROnPlateau", "lr_scheduler.StepLR", "LR Schedulers", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.Numeric", "lucid.count_flops", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.random.bernoulli", "Random Number Generations", "lucid.random.permutation", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.multiply", "lucid.outer", "lucid.power", "lucid.sub", "lucid.tensordot", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.full", "lucid.full_like", "lucid.linspace", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.ceil", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.floor", "lucid.log", "lucid.log2", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.round", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.swapaxes", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.argmax", "lucid.argmin", "lucid.argsort", "lucid.broadcast_to", "lucid.chunk", "lucid.concatenate", "lucid.flatten", "lucid.histogram", "lucid.histogram2d", "lucid.histogramdd", "lucid.hstack", "Tensor Utilities", "lucid.masked_fill", "lucid.meshgrid", "lucid.nonzero", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.roll", "lucid.sort", "lucid.split", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.topk", "lucid.tril", "lucid.triu", "lucid.unbind", "lucid.unique", "lucid.unsqueeze", "lucid.vstack", "lucid.where", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": [410, 481], "1d": 410, "2": 410, "2d": 410, "3": 410, "It": 409, "The": 16, "ab": 448, "about": [57, 59, 61], "abstract": 16, "acceler": 16, "activ": [227, 252, 317, 339], "ad": 410, "adadelta": 396, "adagrad": 397, "adam": 398, "adamax": 400, "adamw": 399, "adaptive_avg_pool1d": 268, "adaptive_avg_pool2d": 269, "adaptive_avg_pool3d": 270, "adaptive_max_pool1d": 271, "adaptive_max_pool2d": 272, "adaptive_max_pool3d": 273, "adaptiveavgpool1d": 359, "adaptiveavgpool2d": 360, "adaptiveavgpool3d": 361, "adaptivemaxpool1d": 362, "adaptivemaxpool2d": 363, "adaptivemaxpool3d": 364, "add": 423, "addit": [25, 318], "advanc": [243, 523], "advantag": [10, 13, 14, 15, 337], "affine_grid": 281, "alexnet": [29, 30, 100], "algebra": 21, "algorithm": [395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405], "align": [16, 410], "along": 480, "alpha_dropout": 244, "alphadropout": 329, "also": 394, "anoth": 478, "arang": 435, "arcco": 449, "architectur": [29, 31, 40, 55, 102, 103, 104, 105, 156, 157, 205, 209, 210, 211], "arcsin": 450, "arctan": 451, "argmax": 479, "argmin": 480, "argsort": 481, "ascend": 481, "asgd": 395, "attent": [234, 235, 252, 295, 320, 339], "attribut": [5, 6, 7, 8, 29, 97, 101, 147, 158, 165, 175, 192, 203, 205, 216, 218, 219, 220, 221, 222, 223, 288, 289, 290, 291, 292, 293, 294, 305, 306, 309, 310, 312, 313, 314, 316, 321, 322, 323, 324, 325, 326, 329, 331, 332, 333, 334, 335, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 407, 422, 514, 515, 516, 517, 518, 519, 520, 521], "autodiff": 16, "automat": 16, "avg_pool1d": 274, "avg_pool2d": 275, "avg_pool3d": 276, "avgpool1d": 365, "avgpool2d": 366, "avgpool3d": 367, "axi": [410, 472, 480], "backend": 16, "backpropag": 422, "backward": [18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 245, 253, 255, 281, 286, 294, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 321, 322, 323, 324, 325, 326, 329, 332, 333, 334, 335, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 365, 366, 367, 368, 369, 370, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 448, 449, 450, 451, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 482, 484, 489, 492, 494, 495, 496, 497, 501, 502, 503, 505, 506, 507, 509, 510], "base": [393, 422], "basic": 16, "batch_norm": 262, "batchnorm": 296, "batchnorm1d": 350, "batchnorm2d": 351, "batchnorm3d": 352, "bceloss": 344, "behavior": [268, 269, 270, 271, 272, 273, 359, 360, 361, 362, 363, 364], "benefit": [408, 411], "bernoulli": 413, "between": [16, 422], "bilinear": [253, 340], "binari": 447, "binary_cross_entropi": 256, "bottleneck": [117, 118], "broadcast": [410, 482], "broadcast_to": 482, "buffer": 216, "calcul": [11, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 147, 158, 165, 175, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 243, 245, 246, 253, 255, 268, 269, 270, 271, 281, 282, 286, 288, 289, 290, 291, 292, 293, 294, 295, 299, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 319, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 448, 449, 450, 451, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 482, 484, 489, 492, 494, 495, 496, 497, 501, 502, 503, 505, 506, 507, 509, 510, 511, 514, 515, 516, 517, 518, 519, 520, 521], "captur": 412, "ceil": 452, "centercrop": 514, "choleski": 18, "chunk": 483, "cifar10": 5, "cifar100": 6, "class": [0, 1, 2, 5, 6, 7, 8, 29, 31, 40, 41, 55, 65, 69, 74, 75, 88, 92, 97, 101, 105, 111, 112, 113, 114, 138, 147, 158, 165, 175, 180, 181, 192, 197, 203, 205, 209, 210, 211, 213, 216, 217, 218, 219, 220, 221, 222, 223, 288, 289, 290, 291, 292, 293, 294, 295, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 337, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 374, 375, 376, 377, 378, 380, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 422, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "classif": 100, "clip": 453, "cnn": [208, 209, 210, 211], "co": 454, "coatnet": [31, 100], "coatnet_0": 32, "coatnet_1": 33, "coatnet_2": 34, "coatnet_3": 35, "coatnet_4": 36, "coatnet_5": 37, "coatnet_6": 38, "coatnet_7": 39, "combin": 0, "compon": [3, 382], "compos": 512, "comput": [207, 483, 491, 498, 499, 504], "concatdataset": [0, 1], "concaten": 484, "conclus": [3, 10, 13, 14, 15, 16, 337, 382, 384, 409, 410, 421, 513, 523], "configur": [32, 33, 34, 35, 36, 37, 38, 39, 74, 106, 107, 108, 109, 110, 117, 118, 139, 140, 141, 142, 143, 144, 145, 146], "constant": 297, "contain": 224, "contract": 434, "conv": 296, "conv1d": [236, 321], "conv2d": [237, 322], "conv3d": [238, 323], "conv_transpose1d": 239, "conv_transpose2d": 240, "conv_transpose3d": 241, "convbnrelu1d": 288, "convbnrelu2d": 289, "convbnrelu3d": 290, "convnext": [40, 100], "convnext_bas": 42, "convnext_larg": 43, "convnext_smal": 44, "convnext_tini": 45, "convnext_v2": 41, "convnext_v2_atto": 46, "convnext_v2_bas": 47, "convnext_v2_femto": 48, "convnext_v2_hug": 49, "convnext_v2_larg": 50, "convnext_v2_nano": 51, "convnext_v2_pico": 52, "convnext_v2_tini": 53, "convnext_xlarg": 54, "convolut": [100, 242, 252, 296, 328, 339], "convtranspose1d": 324, "convtranspose2d": 325, "convtranspose3d": 326, "core": 16, "cosh": 455, "cosineannealinglr": 385, "count_flop": 408, "creat": [218, 422, 478], "cross_entropi": 257, "crossentropyloss": 345, "crossvit": [55, 100], "crossvit_15": 56, "crossvit_15_dagg": 57, "crossvit_18": 58, "crossvit_18_dagg": 59, "crossvit_9": 60, "crossvit_9_dagg": 61, "crossvit_bas": 62, "crossvit_smal": 63, "crossvit_tini": 64, "cube": 456, "custom": [1, 2, 3, 217, 383, 394, 523], "cvt": [65, 100], "cvt_13": 66, "cvt_21": 67, "cvt_w24": 68, "cycliclr": 386, "d": 481, "dagger": [57, 59, 61], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 9], "defin": [2, 217, 383, 394], "definit": [13, 14, 15, 267, 337], "densenet": [69, 100], "densenet_121": 70, "densenet_169": 71, "densenet_201": 72, "densenet_264": 73, "depthseparableconv1d": 291, "depthseparableconv2d": 292, "depthseparableconv3d": 293, "depthwis": 296, "descend": 481, "descript": [159, 160, 161, 162, 163, 164, 176, 177, 178, 412], "design": 16, "det": 19, "detail": [25, 55, 105, 119, 120, 121, 122, 123, 156, 157, 318, 374, 375, 376, 377, 378], "detect": 208, "devic": [16, 422], "diag": 436, "dictionari": 210, "differ": 213, "differenti": 16, "dilat": 243, "dim": 480, "div": 424, "dot": 425, "drop_block": 245, "drop_path": 246, "dropblock": 330, "dropout": [247, 251, 252, 332, 336, 339], "dropout1d": [248, 333], "dropout2d": [249, 334], "dropout3d": [250, 335], "droppath": 331, "dtype": 422, "duplic": 481, "educ": 16, "efficientnet": [74, 100], "efficientnet_b0": 76, "efficientnet_b1": 77, "efficientnet_b2": 78, "efficientnet_b3": 79, "efficientnet_b4": 80, "efficientnet_b5": 81, "efficientnet_b6": 82, "efficientnet_b7": 83, "efficientnet_v2": 75, "efficientnet_v2_": 86, "efficientnet_v2_l": 84, "efficientnet_v2_m": 85, "efficientnet_v2_xl": 87, "eig": 20, "einop": [10, 11, 12, 13, 14, 15, 338, 339], "einsum": 11, "elu": [225, 305], "embed": [284, 372], "empti": 437, "empty_lik": 438, "enabl": 16, "enhanc": 125, "evalu": 16, "exampl": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 337, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 374, 375, 376, 377, 378, 380, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523], "excit": 296, "exp": 457, "exponentiallr": 387, "express": [263, 452, 458, 465, 500], "ey": 439, "fashionmnist": 7, "fast": [208, 209], "faster": [208, 210], "featur": [4, 17, 171, 172, 173, 174, 179, 394, 421, 523], "flatten": [479, 485], "floor": 458, "flop": 481, "formula": [385, 386, 387, 389, 390, 391, 392], "forward": [11, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 147, 158, 165, 175, 203, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 243, 246, 253, 255, 268, 269, 270, 271, 281, 282, 286, 288, 289, 290, 291, 292, 293, 294, 295, 299, 300, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 319, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 374, 375, 376, 377, 378, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 448, 449, 450, 451, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 473, 474, 475, 476, 477, 484, 489, 492, 494, 495, 496, 497, 501, 502, 503, 505, 506, 509, 510, 514, 515, 516, 517, 518, 519, 520, 521], "free": 422, "from": [213, 478], "full": 440, "full_lik": 441, "function": [11, 12, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 98, 99, 102, 103, 104, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 206, 214, 215, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 297, 299, 300, 301, 302, 303, 304, 408, 409, 411, 412, 413, 415, 416, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511], "fuse": 296, "futur": 4, "gelu": [226, 306], "gener": [414, 447], "get": 394, "global": 480, "global_response_norm": 263, "globalresponsenorm": 353, "gpu": [16, 422], "grad_en": 409, "gradient": [18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 245, 253, 255, 281, 286, 294, 304, 305, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 321, 322, 323, 324, 325, 326, 329, 332, 333, 334, 335, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 354, 355, 356, 357, 365, 366, 367, 368, 369, 370, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 448, 449, 450, 451, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 482, 483, 484, 489, 491, 492, 494, 495, 496, 497, 498, 499, 501, 502, 503, 504, 505, 506, 507, 509, 510, 511], "grid_sampl": 282, "hardsigmoid": 307, "hardswish": 308, "heapsort": 481, "histogram": 486, "histogram2d": 487, "histogramdd": 488, "hook": [16, 422], "how": [16, 409], "hstack": 489, "huber_loss": 258, "huberloss": 346, "hybrid": 31, "hyperparamet": [145, 146], "ident": 341, "imag": [9, 100, 522], "implement": [55, 105], "incept": [88, 100], "inception_next_atto": 93, "inception_next_bas": 94, "inception_next_smal": 95, "inception_next_tini": 96, "inception_resnet_v1": 98, "inception_resnet_v2": 99, "inception_v1": 89, "inception_v3": 90, "inception_v4": 91, "inceptionnext": [92, 100], "inceptionresnet": 97, "index": [479, 480], "infer": 422, "init": [297, 299, 300, 301, 302, 303, 304], "initi": 298, "inner": 426, "input": 478, "inspect": [394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405], "instal": 16, "instance_norm": 265, "instancenorm1d": 354, "instancenorm2d": 355, "instancenorm3d": 356, "integr": [3, 382, 421, 523], "interpol": 286, "inv": 22, "kaiming_norm": 299, "kaiming_uniform": 300, "keep": 480, "kei": [3, 4, 125, 171, 172, 173, 174, 179, 382, 394, 421, 523], "kernel": [296, 481], "lambdalr": 389, "languag": 207, "layer": [139, 140, 141, 142, 143, 144, 296, 317, 320, 328, 336, 338, 339, 343, 349, 358, 371, 373, 379, 381], "layer_norm": 266, "layernorm": 357, "leaky_relu": 228, "leakyrelu": 309, "learn": 421, "lenet": [100, 101], "lenet_1": 102, "lenet_4": 103, "lenet_5": 104, "linalg": [17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28], "linear": [21, 252, 254, 255, 339, 342, 343], "linspac": 442, "list": 478, "load": 1, "log": 459, "log2": 460, "loss": [210, 252, 259, 339, 349], "lr": 393, "lr_schedul": [384, 385, 386, 387, 388, 389, 390, 391, 392], "lrschedul": 388, "lucid": [3, 4, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 207, 252, 382, 394, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 523], "lucid\u00b2": 16, "masked_fil": 491, "mathemat": [13, 14, 15, 55, 105, 263, 267, 318, 337, 374, 375, 376, 377, 378, 385, 386, 387, 389, 390, 391, 392, 422, 452, 458, 465, 500], "matmul": 427, "matrix": 427, "matrix_pow": 23, "max": [461, 479], "max_pool1d": 278, "max_pool2d": 279, "max_pool3d": 280, "maximum": [428, 479], "maxpool1d": 368, "maxpool2d": 369, "maxpool3d": 370, "maxvit": [100, 105], "maxvit_bas": [106, 107], "maxvit_smal": 108, "maxvit_tini": 109, "maxvit_xlarg": 110, "mean": 462, "mechan": [235, 295], "meshgrid": 492, "metadata": 412, "metal": 16, "method": [0, 1, 2, 5, 6, 7, 8, 97, 101, 192, 217, 218, 374, 375, 376, 377, 378, 383, 385, 386, 387, 388, 389, 390, 391, 392, 407, 422], "min": 463, "minimum": [429, 480], "mlx": 16, "mnist": 8, "mobilenet": [100, 111, 115], "mobilenet_v2": [112, 116], "mobilenet_v3": 113, "mobilenet_v3_larg": 117, "mobilenet_v3_smal": 118, "mobilenet_v4": 114, "mobilenet_v4_conv_larg": 119, "mobilenet_v4_conv_medium": 120, "mobilenet_v4_conv_smal": 121, "mobilenet_v4_hybrid_larg": 122, "mobilenet_v4_hybrid_medium": 123, "model": [106, 107, 108, 109, 110, 207, 382], "modul": [217, 339], "moduledict": 219, "modulelist": 220, "more": 421, "move": 422, "mse_loss": 260, "mseloss": 347, "multiheadattent": 318, "multipl": [0, 427], "multipli": 430, "multisteplr": 390, "nadam": 401, "natur": 207, "network": 16, "neural": 16, "new": 410, "newaxi": 410, "nll_loss": 261, "nllloss": 348, "nn": [16, 213, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 337, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 374, 375, 376, 377, 378, 380, 382], "no_grad": 411, "nonzero": 493, "norm": 24, "normal": [252, 264, 267, 301, 339, 358, 515], "note": [11, 282, 440, 441], "number": 414, "numer": 407, "object": 208, "ones": 443, "ones_lik": 444, "oper": [21, 427, 447], "optim": [383, 384, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406], "option": 318, "organ": 382, "other": 16, "outer": 431, "overview": [3, 4, 10, 88, 89, 90, 91, 97, 98, 99, 101, 102, 103, 104, 111, 112, 113, 114, 119, 120, 121, 122, 123, 148, 149, 150, 151, 152, 153, 154, 155, 166, 167, 168, 169, 170, 318, 374, 375, 376, 377, 378, 382, 384, 394, 408, 411, 421, 523], "pad": 494, "paramet": [1, 5, 6, 7, 8, 11, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 299, 300, 301, 302, 303, 304, 305, 306, 309, 310, 312, 313, 314, 316, 318, 319, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 337, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 374, 375, 376, 377, 378, 380, 385, 386, 387, 388, 389, 390, 391, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 411, 412, 413, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "parameterdict": 221, "parameterlist": 222, "pass": 203, "perform": [422, 481], "permut": 415, "pinv": 25, "pipelin": [3, 523], "pitfal": 409, "pool": [252, 277, 339, 371], "potenti": 409, "power": 432, "process": [207, 284], "properti": [218, 422], "pvt": [100, 124], "pvt_huge": 126, "pvt_larg": 127, "pvt_medium": 128, "pvt_small": 129, "pvt_tini": 130, "pvt_v2": 125, "pvt_v2_b0": 131, "pvt_v2_b1": 132, "pvt_v2_b2": 133, "pvt_v2_b2_li": 134, "pvt_v2_b3": 135, "pvt_v2_b4": 136, "pvt_v2_b5": 137, "pyramid": 100, "qr": 26, "r": [208, 209, 210, 211], "radam": 402, "rais": [18, 19, 20, 22, 23, 24, 25, 26, 27, 28], "rand": 416, "randint": 417, "randn": 418, "random": [413, 414, 415, 416, 417, 418, 419, 420, 421], "randomcrop": 516, "randomgrayscal": 517, "randomhorizontalflip": 518, "randomrot": 519, "randomverticalflip": 520, "ravel": 495, "rearrang": [10, 13, 337], "reciproc": 464, "reduc": [10, 14], "reducelronplateau": 391, "refer": [5, 6, 7, 8, 294, 394], "register_model": 412, "regular": 245, "relu": [229, 296, 310], "relu6": 311, "repeat": [10, 15, 496], "represent": [55, 105, 407, 422], "reshap": 497, "resiz": 521, "resnest": [100, 138], "resnest_101": 139, "resnest_14": 140, "resnest_200": 141, "resnest_26": 142, "resnest_269": 143, "resnest_50": 144, "resnest_50_1s4x24d": 145, "resnest_50_4s2x40d": 146, "resnet": [100, 147], "resnet_1001": 148, "resnet_101": 149, "resnet_152": 150, "resnet_18": 151, "resnet_200": 152, "resnet_269": 153, "resnet_34": 154, "resnet_50": 155, "resnext": [100, 158], "resnext_101_32x16d": 159, "resnext_101_32x32d": 160, "resnext_101_32x4d": 161, "resnext_101_32x8d": 162, "resnext_101_64x4d": 163, "resnext_50_32x4d": 164, "return": [11, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 98, 99, 102, 103, 104, 115, 116, 117, 118, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 206, 214, 215, 225, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 284, 286, 287, 295, 297, 299, 300, 301, 302, 303, 304, 311, 337, 372, 408, 409, 411, 413, 415, 416, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511], "rmsprop": 403, "roll": 498, "rotat": 287, "round": 465, "row": 479, "rprop": 404, "rule": [427, 434, 472, 482], "scaled_dot_product_attent": 235, "scaleddotproductattent": 319, "schedul": 393, "se_resnet_101": 166, "se_resnet_152": 167, "se_resnet_18": 168, "se_resnet_34": 169, "se_resnet_50": 170, "se_resnext_101_32x4d": 171, "se_resnext_101_32x8d": 172, "se_resnext_101_64x4d": 173, "se_resnext_50_32x4d": 174, "see": 394, "seed": 419, "select": 296, "selectivekernel": 295, "selu": [230, 312], "semodul": 294, "senet": [100, 165], "separ": 296, "sequenc": 212, "sequenti": 223, "sgd": 405, "shape": 16, "sigmoid": [231, 313], "sign": 466, "signatur": [0, 1, 2, 5, 6, 7, 8, 11, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 321, 322, 323, 324, 325, 326, 327, 329, 330, 331, 332, 333, 334, 335, 337, 340, 341, 342, 344, 345, 346, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 374, 375, 376, 377, 378, 380, 383, 385, 386, 387, 388, 389, 390, 391, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 411, 412, 413, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521], "sin": 467, "sinh": 468, "sk_resnet_18": 176, "sk_resnet_34": 177, "sk_resnet_50": 178, "sk_resnext_50_32x4d": 179, "sknet": [100, 175], "softmax": [232, 314], "solv": 27, "sort": [481, 499], "spars": [339, 373], "spatial": [252, 283], "specif": [56, 57, 58, 59, 60, 61, 62, 63, 64], "split": 500, "sqrt": 469, "squar": 470, "squeez": [296, 501], "stabl": 481, "stack": 502, "start": 394, "state": [394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405], "steplr": 392, "sub": 433, "sum": 471, "svd": 28, "swap": 472, "swapax": 472, "swin": 100, "swin_bas": 182, "swin_larg": 183, "swin_smal": 184, "swin_tini": 185, "swin_v2_bas": 186, "swin_v2_giant": 187, "swin_v2_hug": 188, "swin_v2_larg": 189, "swin_v2_smal": 190, "swin_v2_tini": 191, "swintransform": 180, "swintransformer_v2": 181, "swish": 315, "switch": 16, "tan": 473, "tanh": [233, 316, 474], "tensor": [16, 410, 422, 434, 447, 478, 490], "tensordot": 434, "tile": 503, "topk": 504, "totensor": 513, "trace": 475, "track": 422, "train": 16, "transform": [100, 212, 213, 339, 374, 379, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523], "transformer_bas": 214, "transformer_big": 215, "transformerdecod": 375, "transformerdecoderlay": 376, "transformerencod": 377, "transformerencoderlay": 378, "transpos": 476, "tril": 505, "triu": 506, "unari": 447, "unbind": 507, "unfold": [243, 327], "uniform": [302, 420], "uniqu": 508, "unsqueez": 509, "upsampl": 380, "us": [1, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 422, 478], "usag": [4, 84, 85, 86, 87, 89, 90, 91, 98, 99, 101, 102, 103, 104, 119, 120, 121, 122, 123, 171, 172, 173, 174, 179, 216, 287, 318, 374, 375, 376, 377, 378, 384, 385, 386, 387, 388, 389, 390, 391, 392, 407, 409, 410, 492, 512, 513, 523], "util": [252, 285, 490], "valu": 500, "var": 477, "variant": [57, 59, 61], "verif": 16, "vggnet": [100, 192], "vggnet_11": 193, "vggnet_13": 194, "vggnet_16": 195, "vggnet_19": 196, "vision": [100, 207, 339, 381], "visual": 100, "vit": [100, 197], "vit_bas": 198, "vit_hug": 199, "vit_larg": 200, "vit_smal": 201, "vit_tini": 202, "vstack": 510, "weight": 298, "where": 511, "wide_resnet_101": 156, "wide_resnet_50": 157, "work": [4, 409], "xavier_norm": 303, "xavier_uniform": 304, "xception": [100, 203, 204], "zero": 445, "zeros_lik": 446, "zfnet": [100, 205, 206]}})