Search.setIndex({"alltitles": {"@ Operator": [[250, "operator"]], "Activation Functions": [[104, null]], "Activation Layers": [[178, null], [189, null]], "Additional Details": [[19, "additional-details"]], "Admonitions and Usage Guidelines": [[237, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[115, "advanced-example-with-dilation"]], "Advanced Features": [[318, "advanced-features"]], "AlexNet": [[23, null]], "Algorithm": [[221, "algorithm"], [222, "algorithm"], [223, "algorithm"], [224, "algorithm"], [225, "algorithm"], [226, "algorithm"], [227, "algorithm"], [228, "algorithm"], [229, "algorithm"], [230, "algorithm"], [231, "algorithm"]], "Architecture": [[23, "architecture"], [39, "architecture"], [40, "architecture"], [41, "architecture"], [89, "architecture"]], "Architecture Details": [[58, "architecture-details"], [59, "architecture-details"]], "Attention Mechanism": [[156, "attention-mechanism"]], "Attributes": [[5, "attributes"], [6, "attributes"], [7, "attributes"], [8, "attributes"], [23, "attributes"], [34, "attributes"], [38, "attributes"], [49, "attributes"], [60, "attributes"], [67, "attributes"], [77, "attributes"], [82, "attributes"], [87, "attributes"], [89, "attributes"], [93, "attributes"], [95, "attributes"], [96, "attributes"], [97, "attributes"], [98, "attributes"], [99, "attributes"], [100, "attributes"], [149, "attributes"], [150, "attributes"], [151, "attributes"], [152, "attributes"], [153, "attributes"], [154, "attributes"], [155, "attributes"], [166, "attributes"], [167, "attributes"], [170, "attributes"], [171, "attributes"], [173, "attributes"], [174, "attributes"], [175, "attributes"], [177, "attributes"], [179, "attributes"], [180, "attributes"], [181, "attributes"], [183, "attributes"], [184, "attributes"], [185, "attributes"], [186, "attributes"], [187, "attributes"], [190, "attributes"], [191, "attributes"], [192, "attributes"], [194, "attributes"], [195, "attributes"], [196, "attributes"], [197, "attributes"], [198, "attributes"], [200, "attributes"], [201, "attributes"], [202, "attributes"], [203, "attributes"], [204, "attributes"], [205, "attributes"], [206, "attributes"], [208, "attributes"], [209, "attributes"], [210, "attributes"], [211, "attributes"], [212, "attributes"], [213, "attributes"], [214, "attributes"], [215, "attributes"], [216, "attributes"], [245, "attributes"], [309, "attributes"], [310, "attributes"], [311, "attributes"], [312, "attributes"], [313, "attributes"], [314, "attributes"], [315, "attributes"], [316, "attributes"]], "Backward Gradient Calculation": [[12, "backward-gradient-calculation"], [13, "backward-gradient-calculation"], [14, "backward-gradient-calculation"], [16, "backward-gradient-calculation"], [17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [20, "backward-gradient-calculation"], [21, "backward-gradient-calculation"], [22, "backward-gradient-calculation"], [96, "backward-gradient-calculation"], [97, "backward-gradient-calculation"], [98, "backward-gradient-calculation"], [99, "backward-gradient-calculation"], [100, "backward-gradient-calculation"], [102, "backward-gradient-calculation"], [103, "backward-gradient-calculation"], [105, "backward-gradient-calculation"], [106, "backward-gradient-calculation"], [107, "backward-gradient-calculation"], [108, "backward-gradient-calculation"], [109, "backward-gradient-calculation"], [110, "backward-gradient-calculation"], [123, "backward-gradient-calculation"], [125, "backward-gradient-calculation"], [147, "backward-gradient-calculation"], [155, "backward-gradient-calculation"], [165, "backward-gradient-calculation"], [166, "backward-gradient-calculation"], [167, "backward-gradient-calculation"], [168, "backward-gradient-calculation"], [169, "backward-gradient-calculation"], [170, "backward-gradient-calculation"], [171, "backward-gradient-calculation"], [173, "backward-gradient-calculation"], [174, "backward-gradient-calculation"], [175, "backward-gradient-calculation"], [176, "backward-gradient-calculation"], [177, "backward-gradient-calculation"], [179, "backward-gradient-calculation"], [180, "backward-gradient-calculation"], [181, "backward-gradient-calculation"], [183, "backward-gradient-calculation"], [184, "backward-gradient-calculation"], [185, "backward-gradient-calculation"], [186, "backward-gradient-calculation"], [187, "backward-gradient-calculation"], [190, "backward-gradient-calculation"], [191, "backward-gradient-calculation"], [192, "backward-gradient-calculation"], [194, "backward-gradient-calculation"], [195, "backward-gradient-calculation"], [196, "backward-gradient-calculation"], [197, "backward-gradient-calculation"], [198, "backward-gradient-calculation"], [200, "backward-gradient-calculation"], [201, "backward-gradient-calculation"], [202, "backward-gradient-calculation"], [203, "backward-gradient-calculation"], [204, "backward-gradient-calculation"], [205, "backward-gradient-calculation"], [206, "backward-gradient-calculation"], [211, "backward-gradient-calculation"], [212, "backward-gradient-calculation"], [213, "backward-gradient-calculation"], [214, "backward-gradient-calculation"], [215, "backward-gradient-calculation"], [216, "backward-gradient-calculation"], [246, "backward-gradient-calculation"], [247, "backward-gradient-calculation"], [248, "backward-gradient-calculation"], [249, "backward-gradient-calculation"], [250, "backward-gradient-calculation"], [251, "backward-gradient-calculation"], [252, "backward-gradient-calculation"], [253, "backward-gradient-calculation"], [254, "backward-gradient-calculation"], [255, "backward-gradient-calculation"], [256, "backward-gradient-calculation"], [267, "backward-gradient-calculation"], [268, "backward-gradient-calculation"], [269, "backward-gradient-calculation"], [270, "backward-gradient-calculation"], [271, "backward-gradient-calculation"], [272, "backward-gradient-calculation"], [273, "backward-gradient-calculation"], [274, "backward-gradient-calculation"], [275, "backward-gradient-calculation"], [276, "backward-gradient-calculation"], [277, "backward-gradient-calculation"], [278, "backward-gradient-calculation"], [279, "backward-gradient-calculation"], [280, "backward-gradient-calculation"], [281, "backward-gradient-calculation"], [282, "backward-gradient-calculation"], [283, "backward-gradient-calculation"], [284, "backward-gradient-calculation"], [285, "backward-gradient-calculation"], [286, "backward-gradient-calculation"], [287, "backward-gradient-calculation"], [288, "backward-gradient-calculation"], [289, "backward-gradient-calculation"], [290, "backward-gradient-calculation"], [291, "backward-gradient-calculation"], [293, "backward-gradient-calculation"], [295, "backward-gradient-calculation"], [297, "backward-gradient-calculation"], [298, "backward-gradient-calculation"], [299, "backward-gradient-calculation"], [300, "backward-gradient-calculation"], [301, "backward-gradient-calculation"], [302, "backward-gradient-calculation"], [303, "backward-gradient-calculation"], [304, "backward-gradient-calculation"], [305, "backward-gradient-calculation"], [306, "backward-gradient-calculation"]], "Behavior": [[136, "behavior"], [137, "behavior"], [138, "behavior"], [208, "behavior"], [209, "behavior"], [210, "behavior"]], "Benefits": [[235, "benefits"]], "Binary Functions": [[266, null]], "Bottleneck Configuration": [[47, "bottleneck-configuration"], [48, "bottleneck-configuration"]], "CIFAR10": [[5, null]], "CIFAR100": [[6, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [6, "class-signature"], [7, "class-signature"], [8, "class-signature"], [23, "class-signature"], [25, "class-signature"], [30, "class-signature"], [34, "class-signature"], [38, "class-signature"], [42, "class-signature"], [43, "class-signature"], [44, "class-signature"], [49, "class-signature"], [60, "class-signature"], [67, "class-signature"], [77, "class-signature"], [82, "class-signature"], [87, "class-signature"], [89, "class-signature"], [93, "class-signature"], [94, "class-signature"], [95, "class-signature"], [96, "class-signature"], [97, "class-signature"], [98, "class-signature"], [99, "class-signature"], [100, "class-signature"], [149, "class-signature"], [150, "class-signature"], [151, "class-signature"], [152, "class-signature"], [153, "class-signature"], [154, "class-signature"], [155, "class-signature"], [156, "class-signature"], [166, "class-signature"], [167, "class-signature"], [168, "class-signature"], [169, "class-signature"], [170, "class-signature"], [171, "class-signature"], [172, "class-signature"], [173, "class-signature"], [174, "class-signature"], [175, "class-signature"], [176, "class-signature"], [177, "class-signature"], [179, "class-signature"], [180, "class-signature"], [181, "class-signature"], [183, "class-signature"], [184, "class-signature"], [185, "class-signature"], [186, "class-signature"], [187, "class-signature"], [190, "class-signature"], [191, "class-signature"], [192, "class-signature"], [194, "class-signature"], [195, "class-signature"], [196, "class-signature"], [197, "class-signature"], [198, "class-signature"], [200, "class-signature"], [201, "class-signature"], [202, "class-signature"], [203, "class-signature"], [204, "class-signature"], [205, "class-signature"], [206, "class-signature"], [208, "class-signature"], [209, "class-signature"], [210, "class-signature"], [211, "class-signature"], [212, "class-signature"], [213, "class-signature"], [214, "class-signature"], [215, "class-signature"], [216, "class-signature"], [219, "class-signature"], [221, "class-signature"], [222, "class-signature"], [223, "class-signature"], [224, "class-signature"], [225, "class-signature"], [226, "class-signature"], [227, "class-signature"], [228, "class-signature"], [229, "class-signature"], [230, "class-signature"], [231, "class-signature"], [245, "class-signature"], [307, "class-signature"], [308, "class-signature"], [309, "class-signature"], [310, "class-signature"], [311, "class-signature"], [312, "class-signature"], [313, "class-signature"], [314, "class-signature"], [315, "class-signature"], [316, "class-signature"]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [10, "conclusion"], [218, "conclusion"], [233, "conclusion"], [234, "conclusion"], [235, "conclusion"], [244, "conclusion"], [308, "conclusion"], [318, "conclusion"]], "Containers": [[101, null]], "Conv-BatchNorm-ReLU": [[157, null]], "ConvNets": [[37, null], [91, "convnets"]], "Convolution Functions": [[114, null], [122, null]], "Convolution Layers": [[182, null], [189, null]], "Core Components": [[10, "core-components"]], "Create a Tensor from a list": [[292, null]], "Creating a Parameter": [[95, null]], "Creating a tensor with gradient tracking": [[245, null]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[318, "custom-pipelines"]], "Defining a Custom Optimizer": [[220, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[94, null]], "Defining a custom optimizer": [[219, null]], "DenseNet": [[25, null]], "Depthwise Separable Convolution": [[157, null]], "Description": [[61, "description"], [62, "description"], [63, "description"], [64, "description"], [65, "description"], [66, "description"], [78, "description"], [79, "description"], [80, "description"], [236, "description"]], "Dropout Functions": [[121, null], [122, null]], "Dropout Layers": [[188, null], [189, null]], "Example": [[3, null], [3, null], [3, null], [12, "example"], [13, "example"], [14, "example"], [16, "example"], [17, "example"], [18, "example"], [19, "example"], [20, "example"], [21, "example"], [22, "example"], [45, "example"], [46, "example"], [115, "example"], [218, null], [218, null], [218, null], [233, "example"], [235, "example"], [239, "example"], [240, "example"], [241, "example"], [242, "example"], [243, "example"], [244, null], [244, null], [244, null], [257, "example"], [258, "example"], [259, "example"], [260, "example"], [261, "example"], [262, "example"], [263, "example"], [264, "example"], [265, "example"], [267, "example"], [268, "example"], [269, "example"], [270, "example"], [271, "example"], [272, "example"], [273, "example"], [274, "example"], [276, "example"], [278, "example"], [280, "example"], [281, "example"], [282, "example"], [283, "example"], [284, "example"], [285, "example"], [286, "example"], [287, "example"], [288, "example"], [289, "example"], [290, "example"], [291, "example"], [293, "example"], [295, "example"], [299, "example"], [301, "example"], [302, "example"], [303, "example"], [305, "example"], [306, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[234, null]], "Example 2: Adding a new axis to a 2D tensor": [[234, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[234, null]], "Example Usage": [[10, "example-usage"], [31, "example-usage"], [32, "example-usage"], [33, "example-usage"], [35, "example-usage"], [36, "example-usage"], [38, "example-usage"], [39, "example-usage"], [40, "example-usage"], [41, "example-usage"], [73, "example-usage"], [74, "example-usage"], [75, "example-usage"], [76, "example-usage"], [81, "example-usage"], [148, "example-usage"], [307, "example-usage"], [308, "example-usage"], [318, "example-usage"]], "Example Use Cases": [[237, "example-use-cases"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [6, "examples"], [7, "examples"], [8, "examples"], [11, "examples"], [23, "examples"], [24, "examples"], [25, "examples"], [26, "examples"], [27, "examples"], [28, "examples"], [29, "examples"], [44, "examples"], [47, "examples"], [48, "examples"], [49, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [53, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [61, "examples"], [62, "examples"], [63, "examples"], [64, "examples"], [65, "examples"], [66, "examples"], [68, "examples"], [69, "examples"], [70, "examples"], [71, "examples"], [72, "examples"], [78, "examples"], [79, "examples"], [80, "examples"], [82, "examples"], [83, "examples"], [84, "examples"], [85, "examples"], [86, "examples"], [87, "examples"], [88, "examples"], [89, "examples"], [90, "examples"], [92, "examples"], [93, "examples"], [94, "examples"], [95, "examples"], [96, "examples"], [97, "examples"], [98, "examples"], [99, "examples"], [100, "examples"], [102, "examples"], [103, "examples"], [105, "examples"], [106, "examples"], [107, "examples"], [108, "examples"], [109, "examples"], [110, "examples"], [111, "examples"], [112, "examples"], [113, "examples"], [116, "examples"], [117, "examples"], [118, "examples"], [119, "examples"], [120, "examples"], [123, "examples"], [125, "examples"], [126, "examples"], [127, "examples"], [128, "examples"], [130, "examples"], [131, "examples"], [132, "examples"], [134, "examples"], [135, "examples"], [136, "examples"], [137, "examples"], [138, "examples"], [139, "examples"], [140, "examples"], [141, "examples"], [143, "examples"], [144, "examples"], [145, "examples"], [147, "examples"], [149, "examples"], [150, "examples"], [151, "examples"], [152, "examples"], [153, "examples"], [154, "examples"], [155, "examples"], [156, "examples"], [158, "examples"], [160, "examples"], [161, "examples"], [162, "examples"], [163, "examples"], [164, "examples"], [165, "examples"], [166, "examples"], [167, "examples"], [168, "examples"], [169, "examples"], [170, "examples"], [171, "examples"], [172, "examples"], [173, "examples"], [174, "examples"], [175, "examples"], [176, "examples"], [177, "examples"], [179, "examples"], [180, "examples"], [181, "examples"], [183, "examples"], [184, "examples"], [185, "examples"], [186, "examples"], [187, "examples"], [190, "examples"], [191, "examples"], [192, "examples"], [194, "examples"], [195, "examples"], [196, "examples"], [197, "examples"], [198, "examples"], [200, "examples"], [201, "examples"], [202, "examples"], [203, "examples"], [204, "examples"], [205, "examples"], [206, "examples"], [208, "examples"], [209, "examples"], [210, "examples"], [211, "examples"], [212, "examples"], [213, "examples"], [214, "examples"], [215, "examples"], [216, "examples"], [219, "examples"], [220, "examples"], [221, "examples"], [222, "examples"], [223, "examples"], [224, "examples"], [225, "examples"], [226, "examples"], [227, "examples"], [228, "examples"], [229, "examples"], [230, "examples"], [231, "examples"], [236, "examples"], [245, "examples"], [246, "examples"], [247, "examples"], [248, "examples"], [249, "examples"], [251, "examples"], [252, "examples"], [253, "examples"], [254, "examples"], [255, "examples"], [256, "examples"], [275, "examples"], [277, "examples"], [279, "examples"], [292, "examples"], [294, "examples"], [297, "examples"], [298, "examples"], [300, "examples"], [304, "examples"], [309, "examples"], [310, "examples"], [311, "examples"], [312, "examples"], [313, "examples"], [314, "examples"], [315, "examples"], [316, "examples"]], "FashionMNIST": [[7, null]], "Features": [[11, "features"]], "Forward Calculation": [[12, "forward-calculation"], [13, "forward-calculation"], [14, "forward-calculation"], [16, "forward-calculation"], [17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [20, "forward-calculation"], [21, "forward-calculation"], [22, "forward-calculation"], [49, "forward-calculation"], [60, "forward-calculation"], [67, "forward-calculation"], [77, "forward-calculation"], [96, "forward-calculation"], [97, "forward-calculation"], [98, "forward-calculation"], [99, "forward-calculation"], [100, "forward-calculation"], [102, "forward-calculation"], [103, "forward-calculation"], [105, "forward-calculation"], [106, "forward-calculation"], [107, "forward-calculation"], [108, "forward-calculation"], [109, "forward-calculation"], [110, "forward-calculation"], [115, "forward-calculation"], [123, "forward-calculation"], [125, "forward-calculation"], [136, "forward-calculation"], [137, "forward-calculation"], [138, "forward-calculation"], [147, "forward-calculation"], [149, "forward-calculation"], [150, "forward-calculation"], [151, "forward-calculation"], [152, "forward-calculation"], [153, "forward-calculation"], [154, "forward-calculation"], [155, "forward-calculation"], [156, "forward-calculation"], [160, "forward-calculation"], [161, "forward-calculation"], [164, "forward-calculation"], [165, "forward-calculation"], [166, "forward-calculation"], [167, "forward-calculation"], [168, "forward-calculation"], [169, "forward-calculation"], [170, "forward-calculation"], [171, "forward-calculation"], [172, "forward-calculation"], [173, "forward-calculation"], [174, "forward-calculation"], [175, "forward-calculation"], [176, "forward-calculation"], [177, "forward-calculation"], [179, "forward-calculation"], [180, "forward-calculation"], [181, "forward-calculation"], [183, "forward-calculation"], [184, "forward-calculation"], [185, "forward-calculation"], [186, "forward-calculation"], [187, "forward-calculation"], [190, "forward-calculation"], [191, "forward-calculation"], [192, "forward-calculation"], [194, "forward-calculation"], [195, "forward-calculation"], [196, "forward-calculation"], [197, "forward-calculation"], [198, "forward-calculation"], [200, "forward-calculation"], [201, "forward-calculation"], [202, "forward-calculation"], [203, "forward-calculation"], [204, "forward-calculation"], [205, "forward-calculation"], [206, "forward-calculation"], [208, "forward-calculation"], [209, "forward-calculation"], [210, "forward-calculation"], [211, "forward-calculation"], [212, "forward-calculation"], [213, "forward-calculation"], [214, "forward-calculation"], [215, "forward-calculation"], [216, "forward-calculation"], [246, "forward-calculation"], [247, "forward-calculation"], [248, "forward-calculation"], [249, "forward-calculation"], [250, "forward-calculation"], [251, "forward-calculation"], [252, "forward-calculation"], [253, "forward-calculation"], [254, "forward-calculation"], [255, "forward-calculation"], [256, "forward-calculation"], [267, "forward-calculation"], [268, "forward-calculation"], [269, "forward-calculation"], [270, "forward-calculation"], [271, "forward-calculation"], [272, "forward-calculation"], [273, "forward-calculation"], [274, "forward-calculation"], [275, "forward-calculation"], [276, "forward-calculation"], [277, "forward-calculation"], [278, "forward-calculation"], [279, "forward-calculation"], [280, "forward-calculation"], [281, "forward-calculation"], [282, "forward-calculation"], [283, "forward-calculation"], [284, "forward-calculation"], [285, "forward-calculation"], [286, "forward-calculation"], [287, "forward-calculation"], [288, "forward-calculation"], [289, "forward-calculation"], [290, "forward-calculation"], [291, "forward-calculation"], [293, "forward-calculation"], [295, "forward-calculation"], [297, "forward-calculation"], [298, "forward-calculation"], [299, "forward-calculation"], [300, "forward-calculation"], [301, "forward-calculation"], [302, "forward-calculation"], [303, "forward-calculation"], [304, "forward-calculation"], [305, "forward-calculation"], [306, "forward-calculation"], [309, "forward-calculation"], [310, "forward-calculation"], [311, "forward-calculation"], [312, "forward-calculation"], [313, "forward-calculation"], [314, "forward-calculation"], [315, "forward-calculation"], [316, "forward-calculation"]], "Forward Pass": [[87, "forward-pass"]], "Function Signature": [[12, "function-signature"], [13, "function-signature"], [14, "function-signature"], [16, "function-signature"], [17, "function-signature"], [18, "function-signature"], [19, "function-signature"], [20, "function-signature"], [21, "function-signature"], [22, "function-signature"], [24, "function-signature"], [26, "function-signature"], [27, "function-signature"], [28, "function-signature"], [29, "function-signature"], [31, "function-signature"], [32, "function-signature"], [33, "function-signature"], [35, "function-signature"], [36, "function-signature"], [39, "function-signature"], [40, "function-signature"], [41, "function-signature"], [45, "function-signature"], [46, "function-signature"], [47, "function-signature"], [48, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [53, "function-signature"], [54, "function-signature"], [55, "function-signature"], [56, "function-signature"], [57, "function-signature"], [58, "function-signature"], [59, "function-signature"], [61, "function-signature"], [62, "function-signature"], [63, "function-signature"], [64, "function-signature"], [65, "function-signature"], [66, "function-signature"], [68, "function-signature"], [69, "function-signature"], [70, "function-signature"], [71, "function-signature"], [72, "function-signature"], [73, "function-signature"], [74, "function-signature"], [75, "function-signature"], [76, "function-signature"], [78, "function-signature"], [79, "function-signature"], [80, "function-signature"], [81, "function-signature"], [83, "function-signature"], [84, "function-signature"], [85, "function-signature"], [86, "function-signature"], [88, "function-signature"], [90, "function-signature"], [92, "function-signature"], [102, "function-signature"], [103, "function-signature"], [105, "function-signature"], [106, "function-signature"], [107, "function-signature"], [108, "function-signature"], [109, "function-signature"], [110, "function-signature"], [111, "function-signature"], [112, "function-signature"], [113, "function-signature"], [115, "function-signature"], [116, "function-signature"], [117, "function-signature"], [118, "function-signature"], [119, "function-signature"], [120, "function-signature"], [123, "function-signature"], [125, "function-signature"], [126, "function-signature"], [127, "function-signature"], [128, "function-signature"], [130, "function-signature"], [131, "function-signature"], [132, "function-signature"], [134, "function-signature"], [135, "function-signature"], [136, "function-signature"], [137, "function-signature"], [138, "function-signature"], [139, "function-signature"], [140, "function-signature"], [141, "function-signature"], [143, "function-signature"], [144, "function-signature"], [145, "function-signature"], [147, "function-signature"], [148, "function-signature"], [158, "function-signature"], [160, "function-signature"], [161, "function-signature"], [162, "function-signature"], [163, "function-signature"], [164, "function-signature"], [165, "function-signature"], [233, "function-signature"], [235, "function-signature"], [236, "function-signature"], [239, "function-signature"], [240, "function-signature"], [241, "function-signature"], [242, "function-signature"], [243, "function-signature"], [246, "function-signature"], [247, "function-signature"], [248, "function-signature"], [249, "function-signature"], [250, "function-signature"], [251, "function-signature"], [252, "function-signature"], [253, "function-signature"], [254, "function-signature"], [255, "function-signature"], [256, "function-signature"], [257, "function-signature"], [258, "function-signature"], [259, "function-signature"], [260, "function-signature"], [261, "function-signature"], [262, "function-signature"], [263, "function-signature"], [264, "function-signature"], [265, "function-signature"], [267, "function-signature"], [268, "function-signature"], [269, "function-signature"], [270, "function-signature"], [271, "function-signature"], [272, "function-signature"], [273, "function-signature"], [274, "function-signature"], [275, "function-signature"], [276, "function-signature"], [277, "function-signature"], [278, "function-signature"], [279, "function-signature"], [280, "function-signature"], [281, "function-signature"], [282, "function-signature"], [283, "function-signature"], [284, "function-signature"], [285, "function-signature"], [286, "function-signature"], [287, "function-signature"], [288, "function-signature"], [289, "function-signature"], [290, "function-signature"], [291, "function-signature"], [292, "function-signature"], [293, "function-signature"], [294, "function-signature"], [295, "function-signature"], [297, "function-signature"], [298, "function-signature"], [299, "function-signature"], [300, "function-signature"], [301, "function-signature"], [302, "function-signature"], [303, "function-signature"], [304, "function-signature"], [305, "function-signature"], [306, "function-signature"]], "Fused Layers": [[157, null]], "Future Work": [[4, "future-work"]], "Getting Started": [[220, "getting-started"]], "How It Works": [[233, "how-it-works"], [235, "how-it-works"]], "Image Datasets": [[9, null]], "Image Transformations": [[317, null]], "Inception": [[30, null]], "InceptionResNet": [[34, null]], "Indexing and slicing": [[245, null]], "Inspecting Optimizer State": [[220, null], [221, null], [222, null], [223, null], [224, null], [225, null], [226, null], [227, null], [228, null], [229, null], [230, null], [231, null]], "Integration with lucid": [[3, "integration-with-lucid"], [218, "integration-with-lucid"], [244, "integration-with-lucid"], [318, "integration-with-lucid"]], "Iterating through a tensor": [[245, null]], "Key Components": [[3, "key-components"], [218, "key-components"]], "Key Features": [[4, "key-features"], [10, "key-features"], [73, "key-features"], [74, "key-features"], [75, "key-features"], [76, "key-features"], [81, "key-features"], [220, "key-features"], [244, "key-features"]], "Key Transformations": [[318, "key-transformations"]], "LeNet": [[38, null]], "Learn More": [[244, null]], "Limitations": [[10, "limitations"]], "Linear Algebra Operations": [[15, null]], "Linear Functions": [[122, null], [124, null]], "Linear Layers": [[189, null], [193, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[122, null], [129, null]], "Loss Layers": [[189, null], [199, null]], "Lucid": [[10, null]], "MNIST": [[8, null]], "Matrix Multiplication Rules": [[250, "matrix-multiplication-rules"]], "Metadata Captured": [[236, "metadata-captured"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [6, "methods"], [7, "methods"], [8, "methods"], [34, "methods"], [38, "methods"], [82, "methods"], [94, "methods"], [95, "methods"], [219, "methods"], [245, "methods"]], "MobileNet": [[42, null]], "MobileNet_V2": [[43, null]], "MobileNet_V3": [[44, null]], "Modules": [[189, null]], "Normalization Functions": [[122, null], [133, null]], "Normalization Layers": [[189, null], [207, null]], "Notes": [[10, "notes"]], "Optimizers": [[232, null]], "Organizing Models": [[218, "organizing-models"]], "Overview": [[3, "overview"], [4, "overview"], [10, "overview"], [30, "overview"], [31, "overview"], [32, "overview"], [33, "overview"], [34, "overview"], [35, "overview"], [36, "overview"], [38, "overview"], [39, "overview"], [40, "overview"], [41, "overview"], [42, "overview"], [43, "overview"], [44, "overview"], [50, "overview"], [51, "overview"], [52, "overview"], [53, "overview"], [54, "overview"], [55, "overview"], [56, "overview"], [57, "overview"], [68, "overview"], [69, "overview"], [70, "overview"], [71, "overview"], [72, "overview"], [218, "overview"], [220, "overview"], [244, "overview"], [318, "overview"]], "Parameters": [[1, "parameters"], [5, "parameters"], [6, "parameters"], [7, "parameters"], [8, "parameters"], [12, "parameters"], [13, "parameters"], [14, "parameters"], [16, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [20, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [38, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [87, "parameters"], [88, "parameters"], [89, "parameters"], [90, "parameters"], [92, "parameters"], [93, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [102, "parameters"], [103, "parameters"], [105, "parameters"], [106, "parameters"], [107, "parameters"], [108, "parameters"], [109, "parameters"], [110, "parameters"], [111, "parameters"], [112, "parameters"], [113, "parameters"], [115, "parameters"], [116, "parameters"], [117, "parameters"], [118, "parameters"], [119, "parameters"], [120, "parameters"], [123, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [141, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [154, "parameters"], [155, "parameters"], [156, "parameters"], [158, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [163, "parameters"], [164, "parameters"], [165, "parameters"], [166, "parameters"], [167, "parameters"], [170, "parameters"], [171, "parameters"], [173, "parameters"], [174, "parameters"], [175, "parameters"], [177, "parameters"], [179, "parameters"], [180, "parameters"], [181, "parameters"], [183, "parameters"], [184, "parameters"], [185, "parameters"], [186, "parameters"], [187, "parameters"], [190, "parameters"], [191, "parameters"], [192, "parameters"], [194, "parameters"], [195, "parameters"], [196, "parameters"], [197, "parameters"], [198, "parameters"], [200, "parameters"], [201, "parameters"], [202, "parameters"], [203, "parameters"], [204, "parameters"], [205, "parameters"], [206, "parameters"], [208, "parameters"], [209, "parameters"], [210, "parameters"], [211, "parameters"], [212, "parameters"], [213, "parameters"], [214, "parameters"], [215, "parameters"], [216, "parameters"], [221, "parameters"], [222, "parameters"], [223, "parameters"], [224, "parameters"], [225, "parameters"], [226, "parameters"], [227, "parameters"], [228, "parameters"], [229, "parameters"], [230, "parameters"], [231, "parameters"], [235, "parameters"], [236, "parameters"], [239, "parameters"], [240, "parameters"], [241, "parameters"], [242, "parameters"], [243, "parameters"], [245, "parameters"], [246, "parameters"], [247, "parameters"], [248, "parameters"], [249, "parameters"], [250, "parameters"], [251, "parameters"], [252, "parameters"], [253, "parameters"], [254, "parameters"], [255, "parameters"], [256, "parameters"], [257, "parameters"], [258, "parameters"], [259, "parameters"], [260, "parameters"], [261, "parameters"], [262, "parameters"], [263, "parameters"], [264, "parameters"], [265, "parameters"], [267, "parameters"], [268, "parameters"], [269, "parameters"], [270, "parameters"], [271, "parameters"], [272, "parameters"], [273, "parameters"], [274, "parameters"], [275, "parameters"], [276, "parameters"], [277, "parameters"], [278, "parameters"], [279, "parameters"], [280, "parameters"], [281, "parameters"], [282, "parameters"], [283, "parameters"], [284, "parameters"], [285, "parameters"], [286, "parameters"], [287, "parameters"], [288, "parameters"], [289, "parameters"], [290, "parameters"], [291, "parameters"], [292, "parameters"], [293, "parameters"], [294, "parameters"], [295, "parameters"], [297, "parameters"], [298, "parameters"], [299, "parameters"], [300, "parameters"], [301, "parameters"], [302, "parameters"], [303, "parameters"], [304, "parameters"], [305, "parameters"], [306, "parameters"], [307, "parameters"], [308, "parameters"], [309, "parameters"], [310, "parameters"], [311, "parameters"], [312, "parameters"], [313, "parameters"], [314, "parameters"], [315, "parameters"], [316, "parameters"]], "Performing backpropagation": [[245, null]], "Pooling Functions": [[122, null], [142, null]], "Pooling Layers": [[189, null], [217, null]], "Potential Pitfalls": [[233, "potential-pitfalls"], [235, "potential-pitfalls"]], "Properties": [[95, "properties"], [245, "properties"]], "Raises": [[12, "raises"], [13, "raises"], [14, "raises"], [16, "raises"], [17, "raises"], [18, "raises"], [19, "raises"], [20, "raises"], [21, "raises"], [22, "raises"]], "Random Number Generations": [[238, null]], "References": [[5, "references"], [6, "references"], [7, "references"], [8, "references"], [155, "references"], [220, "references"]], "ResNeXt": [[60, null]], "ResNet": [[49, null]], "Returns": [[12, "returns"], [13, "returns"], [14, "returns"], [16, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [20, "returns"], [21, "returns"], [22, "returns"], [24, "returns"], [26, "returns"], [27, "returns"], [28, "returns"], [29, "returns"], [31, "returns"], [32, "returns"], [33, "returns"], [35, "returns"], [36, "returns"], [39, "returns"], [40, "returns"], [41, "returns"], [45, "returns"], [46, "returns"], [47, "returns"], [48, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [53, "returns"], [54, "returns"], [55, "returns"], [56, "returns"], [57, "returns"], [58, "returns"], [59, "returns"], [61, "returns"], [62, "returns"], [63, "returns"], [64, "returns"], [65, "returns"], [66, "returns"], [68, "returns"], [69, "returns"], [70, "returns"], [71, "returns"], [72, "returns"], [73, "returns"], [74, "returns"], [75, "returns"], [76, "returns"], [78, "returns"], [79, "returns"], [80, "returns"], [81, "returns"], [83, "returns"], [84, "returns"], [85, "returns"], [86, "returns"], [88, "returns"], [90, "returns"], [92, "returns"], [102, "returns"], [103, "returns"], [105, "returns"], [106, "returns"], [107, "returns"], [108, "returns"], [109, "returns"], [110, "returns"], [111, "returns"], [112, "returns"], [113, "returns"], [115, "returns"], [116, "returns"], [117, "returns"], [118, "returns"], [119, "returns"], [120, "returns"], [123, "returns"], [125, "returns"], [126, "returns"], [127, "returns"], [128, "returns"], [130, "returns"], [131, "returns"], [132, "returns"], [134, "returns"], [135, "returns"], [136, "returns"], [137, "returns"], [138, "returns"], [139, "returns"], [140, "returns"], [141, "returns"], [143, "returns"], [144, "returns"], [145, "returns"], [147, "returns"], [148, "returns"], [156, "returns"], [158, "returns"], [160, "returns"], [161, "returns"], [162, "returns"], [163, "returns"], [164, "returns"], [165, "returns"], [172, "returns"], [233, "returns"], [235, "returns"], [239, "returns"], [240, "returns"], [241, "returns"], [242, "returns"], [243, "returns"], [246, "returns"], [247, "returns"], [248, "returns"], [249, "returns"], [250, "returns"], [251, "returns"], [252, "returns"], [253, "returns"], [254, "returns"], [255, "returns"], [256, "returns"], [257, "returns"], [258, "returns"], [259, "returns"], [260, "returns"], [261, "returns"], [262, "returns"], [263, "returns"], [264, "returns"], [265, "returns"], [267, "returns"], [268, "returns"], [269, "returns"], [270, "returns"], [271, "returns"], [272, "returns"], [273, "returns"], [274, "returns"], [275, "returns"], [276, "returns"], [277, "returns"], [278, "returns"], [279, "returns"], [280, "returns"], [281, "returns"], [282, "returns"], [283, "returns"], [284, "returns"], [285, "returns"], [286, "returns"], [287, "returns"], [288, "returns"], [289, "returns"], [290, "returns"], [291, "returns"], [292, "returns"], [293, "returns"], [294, "returns"], [295, "returns"], [297, "returns"], [298, "returns"], [299, "returns"], [300, "returns"], [301, "returns"], [302, "returns"], [303, "returns"], [304, "returns"], [305, "returns"], [306, "returns"]], "SENet": [[67, null]], "SKNet": [[77, null]], "See Also": [[220, "see-also"]], "Selective Kernel": [[157, null]], "Squeeze-and-Excitation": [[157, null]], "Summary Table": [[92, "summary-table"]], "Tensor Generating Functions": [[266, null]], "Tensor Operations": [[266, null]], "Tensor Utilites": [[296, null]], "Type Definitions": [[237, "type-definitions"]], "Unary Functions": [[266, null]], "Usage": [[4, "usage"], [93, "usage"], [148, "usage"], [233, "usage"], [234, "usage"], [235, "usage"], [297, "usage"], [307, "usage"], [308, "usage"], [318, "usage"]], "Use another Tensor as input": [[292, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using the ASGD Optimizer": [[221, null]], "Using the Adadelta Optimizer": [[222, null]], "Using the Adagrad Optimizer": [[223, null]], "Using the Adam Optimizer": [[224, null]], "Using the AdamW Optimizer": [[225, null]], "Using the Adamax Optimizer": [[226, null]], "Using the NAdam Optimizer": [[227, null]], "Using the RAdam Optimizer": [[228, null]], "Using the RMSprop Optimizer": [[229, null]], "Using the Rprop Optimizer": [[230, null]], "Using the SGD Optimizer": [[231, null]], "Utility Functions": [[122, null], [146, null]], "VGGNet": [[82, null]], "Weight Initializations": [[159, null]], "Why Use Type Aliases?": [[237, null]], "Xception": [[87, null]], "ZFNet": [[89, null]], "activation Functions": [[122, null]], "alexnet": [[24, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "densenet_121": [[26, null]], "densenet_169": [[27, null]], "densenet_201": [[28, null]], "densenet_264": [[29, null]], "inception_resnet_v1": [[35, null]], "inception_resnet_v2": [[36, null]], "inception_v1": [[31, null]], "inception_v3": [[32, null]], "inception_v4": [[33, null]], "lenet_1": [[39, null]], "lenet_4": [[40, null]], "lenet_5": [[41, null]], "lucid.Tensor": [[245, null]], "lucid.abs": [[267, null]], "lucid.add": [[246, null]], "lucid.arange": [[257, null]], "lucid.arccos": [[268, null]], "lucid.arcsin": [[269, null]], "lucid.arctan": [[270, null]], "lucid.clip": [[271, null]], "lucid.concatenate": [[293, null]], "lucid.cos": [[272, null]], "lucid.cosh": [[273, null]], "lucid.cube": [[274, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[258, null]], "lucid.div": [[247, null]], "lucid.dot": [[248, null]], "lucid.empty": [[259, null]], "lucid.empty_like": [[260, null]], "lucid.exp": [[275, null]], "lucid.eye": [[261, null]], "lucid.flatten": [[294, null]], "lucid.grad_enabled": [[233, null]], "lucid.hstack": [[295, null]], "lucid.inner": [[249, null]], "lucid.linalg": [[11, null]], "lucid.linalg.cholesky": [[12, null]], "lucid.linalg.det": [[13, null]], "lucid.linalg.eig": [[14, null]], "lucid.linalg.inv": [[16, null]], "lucid.linalg.matrix_power": [[17, null]], "lucid.linalg.norm": [[18, null]], "lucid.linalg.pinv": [[19, null]], "lucid.linalg.qr": [[20, null]], "lucid.linalg.solve": [[21, null]], "lucid.linalg.svd": [[22, null]], "lucid.log": [[276, null]], "lucid.matmul": [[250, null]], "lucid.max": [[277, null]], "lucid.maximum": [[251, null]], "lucid.mean": [[278, null]], "lucid.meshgrid": [[297, null]], "lucid.min": [[279, null]], "lucid.minimum": [[252, null]], "lucid.models": [[91, null]], "lucid.mul": [[253, null]], "lucid.newaxis": [[234, null]], "lucid.nn": [[218, null]], "lucid.nn.functional": [[122, null]], "lucid.no_grad": [[235, null]], "lucid.ones": [[262, null]], "lucid.ones_like": [[263, null]], "lucid.optim": [[220, null]], "lucid.outer": [[254, null]], "lucid.pad": [[298, null]], "lucid.power": [[255, null]], "lucid.random": [[244, null]], "lucid.random.rand": [[239, null]], "lucid.random.randint": [[240, null]], "lucid.random.randn": [[241, null]], "lucid.random.seed": [[242, null]], "lucid.random.uniform": [[243, null]], "lucid.ravel": [[299, null]], "lucid.reciprocal": [[280, null]], "lucid.register_model": [[236, null]], "lucid.repeat": [[300, null]], "lucid.reshape": [[301, null]], "lucid.sign": [[281, null]], "lucid.sin": [[282, null]], "lucid.sinh": [[283, null]], "lucid.sqrt": [[284, null]], "lucid.square": [[285, null]], "lucid.squeeze": [[302, null]], "lucid.stack": [[303, null]], "lucid.sub": [[256, null]], "lucid.sum": [[286, null]], "lucid.tan": [[287, null]], "lucid.tanh": [[288, null]], "lucid.tensor": [[292, null]], "lucid.tile": [[304, null]], "lucid.trace": [[289, null]], "lucid.transforms": [[318, null]], "lucid.transpose": [[290, null]], "lucid.types": [[237, null]], "lucid.unsqueeze": [[305, null]], "lucid.var": [[291, null]], "lucid.vstack": [[306, null]], "lucid.zeros": [[264, null]], "lucid.zeros_like": [[265, null]], "mobilenet": [[45, null]], "mobilenet_v2": [[46, null]], "mobilenet_v3_large": [[47, null]], "mobilenet_v3_small": [[48, null]], "models.summarize": [[92, null]], "nn.AdaptiveAvgPool1d": [[208, null]], "nn.AdaptiveAvgPool2d": [[209, null]], "nn.AdaptiveAvgPool3d": [[210, null]], "nn.AlphaDropout": [[183, null]], "nn.AvgPool1d": [[211, null]], "nn.AvgPool2d": [[212, null]], "nn.AvgPool3d": [[213, null]], "nn.BCELoss": [[194, null]], "nn.BatchNorm1d": [[200, null]], "nn.BatchNorm2d": [[201, null]], "nn.BatchNorm3d": [[202, null]], "nn.Bilinear": [[190, null]], "nn.Buffer": [[93, null]], "nn.Conv1d": [[179, null]], "nn.Conv2d": [[180, null]], "nn.Conv3d": [[181, null]], "nn.ConvBNReLU1d": [[149, null]], "nn.ConvBNReLU2d": [[150, null]], "nn.ConvBNReLU3d": [[151, null]], "nn.CrossEntropyLoss": [[195, null]], "nn.DepthSeparableConv1d": [[152, null]], "nn.DepthSeparableConv2d": [[153, null]], "nn.DepthSeparableConv3d": [[154, null]], "nn.Dropout": [[184, null]], "nn.Dropout1d": [[185, null]], "nn.Dropout2d": [[186, null]], "nn.Dropout3d": [[187, null]], "nn.ELU": [[166, null]], "nn.GELU": [[167, null]], "nn.HardSigmoid": [[168, null]], "nn.HardSwish": [[169, null]], "nn.HuberLoss": [[196, null]], "nn.Identity": [[191, null]], "nn.InstanceNorm1d": [[203, null]], "nn.InstanceNorm2d": [[204, null]], "nn.InstanceNorm3d": [[205, null]], "nn.LayerNorm": [[206, null]], "nn.LeakyReLU": [[170, null]], "nn.Linear": [[192, null]], "nn.MSELoss": [[197, null]], "nn.MaxPool1d": [[214, null]], "nn.MaxPool2d": [[215, null]], "nn.MaxPool3d": [[216, null]], "nn.Module": [[94, null]], "nn.ModuleDict": [[96, null]], "nn.ModuleList": [[97, null]], "nn.NLLLoss": [[198, null]], "nn.Parameter": [[95, null]], "nn.ParameterDict": [[98, null]], "nn.ParameterList": [[99, null]], "nn.ReLU": [[171, null]], "nn.ReLU6": [[172, null]], "nn.SELU": [[173, null]], "nn.SEModule": [[155, null]], "nn.SelectiveKernel": [[156, null]], "nn.Sequential": [[100, null]], "nn.Sigmoid": [[174, null]], "nn.Softmax": [[175, null]], "nn.Swish": [[176, null]], "nn.Tanh": [[177, null]], "nn.functional.adaptive_avg_pool1d": [[136, null]], "nn.functional.adaptive_avg_pool2d": [[137, null]], "nn.functional.adaptive_avg_pool3d": [[138, null]], "nn.functional.alpha_dropout": [[116, null]], "nn.functional.avg_pool1d": [[139, null]], "nn.functional.avg_pool2d": [[140, null]], "nn.functional.avg_pool3d": [[141, null]], "nn.functional.batch_norm": [[132, null]], "nn.functional.bilinear": [[123, null]], "nn.functional.binary_cross_entropy": [[126, null]], "nn.functional.conv1d": [[111, null]], "nn.functional.conv2d": [[112, null]], "nn.functional.conv3d": [[113, null]], "nn.functional.cross_entropy": [[127, null]], "nn.functional.dropout": [[117, null]], "nn.functional.dropout1d": [[118, null]], "nn.functional.dropout2d": [[119, null]], "nn.functional.dropout3d": [[120, null]], "nn.functional.elu": [[102, null]], "nn.functional.gelu": [[103, null]], "nn.functional.huber_loss": [[128, null]], "nn.functional.instance_norm": [[134, null]], "nn.functional.interpolate": [[147, null]], "nn.functional.layer_norm": [[135, null]], "nn.functional.leaky_relu": [[105, null]], "nn.functional.linear": [[125, null]], "nn.functional.max_pool1d": [[143, null]], "nn.functional.max_pool2d": [[144, null]], "nn.functional.max_pool3d": [[145, null]], "nn.functional.mse_loss": [[130, null]], "nn.functional.nll_loss": [[131, null]], "nn.functional.relu": [[106, null]], "nn.functional.rotate": [[148, null]], "nn.functional.selu": [[107, null]], "nn.functional.sigmoid": [[108, null]], "nn.functional.softmax": [[109, null]], "nn.functional.tanh": [[110, null]], "nn.functional.unfold": [[115, null]], "nn.init.constant": [[158, null]], "nn.init.kaiming_normal": [[160, null]], "nn.init.kaiming_uniform": [[161, null]], "nn.init.normal": [[162, null]], "nn.init.uniform": [[163, null]], "nn.init.xavier_normal": [[164, null]], "nn.init.xavier_uniform": [[165, null]], "optim.ASGD": [[221, null]], "optim.Adadelta": [[222, null]], "optim.Adagrad": [[223, null]], "optim.Adam": [[224, null]], "optim.AdamW": [[225, null]], "optim.Adamax": [[226, null]], "optim.NAdam": [[227, null]], "optim.Optimizer": [[219, null]], "optim.RAdam": [[228, null]], "optim.RMSprop": [[229, null]], "optim.Rprop": [[230, null]], "optim.SGD": [[231, null]], "resnet_1001": [[50, null]], "resnet_101": [[51, null]], "resnet_152": [[52, null]], "resnet_18": [[53, null]], "resnet_200": [[54, null]], "resnet_269": [[55, null]], "resnet_34": [[56, null]], "resnet_50": [[57, null]], "resnext_101_32x16d": [[61, null]], "resnext_101_32x32d": [[62, null]], "resnext_101_32x4d": [[63, null]], "resnext_101_32x8d": [[64, null]], "resnext_101_64x4d": [[65, null]], "resnext_50_32x4d": [[66, null]], "se_resnet_101": [[68, null]], "se_resnet_152": [[69, null]], "se_resnet_18": [[70, null]], "se_resnet_34": [[71, null]], "se_resnet_50": [[72, null]], "se_resnext_101_32x4d": [[73, null]], "se_resnext_101_32x8d": [[74, null]], "se_resnext_101_64x4d": [[75, null]], "se_resnext_50_32x4d": [[76, null]], "sk_resnet_18": [[78, null]], "sk_resnet_34": [[79, null]], "sk_resnet_50": [[80, null]], "sk_resnext_50_32x4d": [[81, null]], "transforms.CenterCrop": [[309, null]], "transforms.Compose": [[307, null]], "transforms.Normalize": [[310, null]], "transforms.RandomCrop": [[311, null]], "transforms.RandomGrayscale": [[312, null]], "transforms.RandomHorizontalFlip": [[313, null]], "transforms.RandomRotation": [[314, null]], "transforms.RandomVerticalFlip": [[315, null]], "transforms.Resize": [[316, null]], "transforms.ToTensor": [[308, null]], "vggnet_11": [[83, null]], "vggnet_13": [[84, null]], "vggnet_16": [[85, null]], "vggnet_19": [[86, null]], "wide_resnet_101": [[58, null]], "wide_resnet_50": [[59, null]], "xception": [[88, null]], "zfnet": [[90, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/CIFAR10", "datasets/image/CIFAR100", "datasets/image/FashionMNIST", "datasets/image/MNIST", "datasets/image/index", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/conv/alex/AlexNet", "models/conv/alex/alexnet", "models/conv/dense/DenseNet", "models/conv/dense/densenet_121", "models/conv/dense/densenet_169", "models/conv/dense/densenet_201", "models/conv/dense/densenet_264", "models/conv/inception/Inception", "models/conv/inception/inception_v1", "models/conv/inception/inception_v3", "models/conv/inception/inception_v4", "models/conv/inception_res/InceptionResNet", "models/conv/inception_res/inception_resnet_v1", "models/conv/inception_res/inception_resnet_v2", "models/conv/index", "models/conv/lenet/LeNet", "models/conv/lenet/lenet_1", "models/conv/lenet/lenet_4", "models/conv/lenet/lenet_5", "models/conv/mobile/MobileNet", "models/conv/mobile/MobileNet_V2", "models/conv/mobile/MobileNet_V3", "models/conv/mobile/mobilenet", "models/conv/mobile/mobilenet_v2", "models/conv/mobile/mobilenet_v3_large", "models/conv/mobile/mobilenet_v3_small", "models/conv/resnet/ResNet", "models/conv/resnet/resnet_1001", "models/conv/resnet/resnet_101", "models/conv/resnet/resnet_152", "models/conv/resnet/resnet_18", "models/conv/resnet/resnet_200", "models/conv/resnet/resnet_269", "models/conv/resnet/resnet_34", "models/conv/resnet/resnet_50", "models/conv/resnet/wide_resnet_101", "models/conv/resnet/wide_resnet_50", "models/conv/resnext/ResNeXt", "models/conv/resnext/resnext_101_32x16d", "models/conv/resnext/resnext_101_32x32d", "models/conv/resnext/resnext_101_32x4d", "models/conv/resnext/resnext_101_32x8d", "models/conv/resnext/resnext_101_64x4d", "models/conv/resnext/resnext_50_32x4d", "models/conv/senet/SENet", "models/conv/senet/se_resnet_101", "models/conv/senet/se_resnet_152", "models/conv/senet/se_resnet_18", "models/conv/senet/se_resnet_34", "models/conv/senet/se_resnet_50", "models/conv/senet/se_resnext_101_32x4d", "models/conv/senet/se_resnext_101_32x8d", "models/conv/senet/se_resnext_101_64x4d", "models/conv/senet/se_resnext_50_32x4d", "models/conv/sknet/SKNet", "models/conv/sknet/sk_resnet_18", "models/conv/sknet/sk_resnet_34", "models/conv/sknet/sk_resnet_50", "models/conv/sknet/sk_resnext_50_32x4d", "models/conv/vgg/VGGNet", "models/conv/vgg/vggnet_11", "models/conv/vgg/vggnet_13", "models/conv/vgg/vggnet_16", "models/conv/vgg/vggnet_19", "models/conv/xception/Xception", "models/conv/xception/xception", "models/conv/zfnet/ZFNet", "models/conv/zfnet/zfnet", "models/models", "models/summarize", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/fused/ConvBNReLU1d", "nn/fused/ConvBNReLU2d", "nn/fused/ConvBNReLU3d", "nn/fused/DepthSeparableConv1d", "nn/fused/DepthSeparableConv2d", "nn/fused/DepthSeparableConv3d", "nn/fused/SEModule", "nn/fused/SelectiveKernel", "nn/fused/index", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/HardSigmoid", "nn/modules/activation/HardSwish", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/ReLU6", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Swish", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/nn", "optim/Optimizer", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "others/types", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/meshgrid", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/CIFAR10.rst", "datasets/image/CIFAR100.rst", "datasets/image/FashionMNIST.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/conv/alex/AlexNet.rst", "models/conv/alex/alexnet.rst", "models/conv/dense/DenseNet.rst", "models/conv/dense/densenet_121.rst", "models/conv/dense/densenet_169.rst", "models/conv/dense/densenet_201.rst", "models/conv/dense/densenet_264.rst", "models/conv/inception/Inception.rst", "models/conv/inception/inception_v1.rst", "models/conv/inception/inception_v3.rst", "models/conv/inception/inception_v4.rst", "models/conv/inception_res/InceptionResNet.rst", "models/conv/inception_res/inception_resnet_v1.rst", "models/conv/inception_res/inception_resnet_v2.rst", "models/conv/index.rst", "models/conv/lenet/LeNet.rst", "models/conv/lenet/lenet_1.rst", "models/conv/lenet/lenet_4.rst", "models/conv/lenet/lenet_5.rst", "models/conv/mobile/MobileNet.rst", "models/conv/mobile/MobileNet_V2.rst", "models/conv/mobile/MobileNet_V3.rst", "models/conv/mobile/mobilenet.rst", "models/conv/mobile/mobilenet_v2.rst", "models/conv/mobile/mobilenet_v3_large.rst", "models/conv/mobile/mobilenet_v3_small.rst", "models/conv/resnet/ResNet.rst", "models/conv/resnet/resnet_1001.rst", "models/conv/resnet/resnet_101.rst", "models/conv/resnet/resnet_152.rst", "models/conv/resnet/resnet_18.rst", "models/conv/resnet/resnet_200.rst", "models/conv/resnet/resnet_269.rst", "models/conv/resnet/resnet_34.rst", "models/conv/resnet/resnet_50.rst", "models/conv/resnet/wide_resnet_101.rst", "models/conv/resnet/wide_resnet_50.rst", "models/conv/resnext/ResNeXt.rst", "models/conv/resnext/resnext_101_32x16d.rst", "models/conv/resnext/resnext_101_32x32d.rst", "models/conv/resnext/resnext_101_32x4d.rst", "models/conv/resnext/resnext_101_32x8d.rst", "models/conv/resnext/resnext_101_64x4d.rst", "models/conv/resnext/resnext_50_32x4d.rst", "models/conv/senet/SENet.rst", "models/conv/senet/se_resnet_101.rst", "models/conv/senet/se_resnet_152.rst", "models/conv/senet/se_resnet_18.rst", "models/conv/senet/se_resnet_34.rst", "models/conv/senet/se_resnet_50.rst", "models/conv/senet/se_resnext_101_32x4d.rst", "models/conv/senet/se_resnext_101_32x8d.rst", "models/conv/senet/se_resnext_101_64x4d.rst", "models/conv/senet/se_resnext_50_32x4d.rst", "models/conv/sknet/SKNet.rst", "models/conv/sknet/sk_resnet_18.rst", "models/conv/sknet/sk_resnet_34.rst", "models/conv/sknet/sk_resnet_50.rst", "models/conv/sknet/sk_resnext_50_32x4d.rst", "models/conv/vgg/VGGNet.rst", "models/conv/vgg/vggnet_11.rst", "models/conv/vgg/vggnet_13.rst", "models/conv/vgg/vggnet_16.rst", "models/conv/vgg/vggnet_19.rst", "models/conv/xception/Xception.rst", "models/conv/xception/xception.rst", "models/conv/zfnet/ZFNet.rst", "models/conv/zfnet/zfnet.rst", "models/models.rst", "models/summarize.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/fused/ConvBNReLU1d.rst", "nn/fused/ConvBNReLU2d.rst", "nn/fused/ConvBNReLU3d.rst", "nn/fused/DepthSeparableConv1d.rst", "nn/fused/DepthSeparableConv2d.rst", "nn/fused/DepthSeparableConv3d.rst", "nn/fused/SEModule.rst", "nn/fused/SelectiveKernel.rst", "nn/fused/index.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/HardSigmoid.rst", "nn/modules/activation/HardSwish.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/ReLU6.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Swish.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "others/types.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"abs() (in module lucid)": [[267, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[222, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[223, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[224, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[226, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[225, "lucid.optim.AdamW", false]], "adaptive_avg_pool1d() (in module lucid.nn.functional)": [[136, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[137, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[138, "lucid.nn.functional.adaptive_avg_pool3d", false]], "adaptiveavgpool1d (class in lucid.nn)": [[208, "lucid.nn.AdaptiveAvgPool1d", false]], "adaptiveavgpool2d (class in lucid.nn)": [[209, "lucid.nn.AdaptiveAvgPool2d", false]], "adaptiveavgpool3d (class in lucid.nn)": [[210, "lucid.nn.AdaptiveAvgPool3d", false]], "add() (in module lucid)": [[246, "lucid.add", false]], "alexnet (class in lucid.models)": [[23, "lucid.models.AlexNet", false]], "alexnet() (in module lucid.models)": [[24, "lucid.models.alexnet", false]], "alpha_dropout() (in module lucid.nn.functional)": [[116, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[183, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[257, "lucid.arange", false]], "arccos() (in module lucid)": [[268, "lucid.arccos", false]], "arcsin() (in module lucid)": [[269, "lucid.arcsin", false]], "arctan() (in module lucid)": [[270, "lucid.arctan", false]], "asgd (class in lucid.optim)": [[221, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[139, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[140, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[141, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[211, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[212, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[213, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[132, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[200, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[201, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[202, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[194, "lucid.nn.BCELoss", false]], "bilinear (class in lucid.nn)": [[190, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[123, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[126, "lucid.nn.functional.binary_cross_entropy", false]], "buffer (class in lucid.nn)": [[93, "lucid.nn.Buffer", false]], "centercrop (class in lucid.transforms)": [[309, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[12, "lucid.linalg.cholesky", false]], "cifar10 (class in lucid.datasets)": [[5, "lucid.datasets.CIFAR10", false]], "cifar100 (class in lucid.datasets)": [[6, "lucid.datasets.CIFAR100", false]], "clip() (in module lucid)": [[271, "lucid.clip", false]], "compose (class in lucid.transforms)": [[307, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[293, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[158, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[179, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[111, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[180, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[112, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[181, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[113, "lucid.nn.functional.conv3d", false]], "convbnrelu1d (class in lucid.nn)": [[149, "lucid.nn.ConvBNReLU1d", false]], "convbnrelu2d (class in lucid.nn)": [[150, "lucid.nn.ConvBNReLU2d", false]], "convbnrelu3d (class in lucid.nn)": [[151, "lucid.nn.ConvBNReLU3d", false]], "cos() (in module lucid)": [[272, "lucid.cos", false]], "cosh() (in module lucid)": [[273, "lucid.cosh", false]], "cross_entropy() (in module lucid.nn.functional)": [[127, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[195, "lucid.nn.CrossEntropyLoss", false]], "cube() (in module lucid)": [[274, "lucid.cube", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "densenet (class in lucid.models)": [[25, "lucid.models.DenseNet", false]], "densenet_121() (in module lucid.models)": [[26, "lucid.models.densenet_121", false]], "densenet_169() (in module lucid.models)": [[27, "lucid.models.densenet_169", false]], "densenet_201() (in module lucid.models)": [[28, "lucid.models.densenet_201", false]], "densenet_264() (in module lucid.models)": [[29, "lucid.models.densenet_264", false]], "depthseparableconv1d (class in lucid.nn)": [[152, "lucid.nn.DepthSeparableConv1d", false]], "depthseparableconv2d (class in lucid.nn)": [[153, "lucid.nn.DepthSeparableConv2d", false]], "depthseparableconv3d (class in lucid.nn)": [[154, "lucid.nn.DepthSeparableConv3d", false]], "det() (in module lucid.linalg)": [[13, "lucid.linalg.det", false]], "diag() (in module lucid)": [[258, "lucid.diag", false]], "div() (in module lucid)": [[247, "lucid.div", false]], "dot() (in module lucid)": [[248, "lucid.dot", false]], "dropout (class in lucid.nn)": [[184, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[117, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[185, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[118, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[186, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[119, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[187, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[120, "lucid.nn.functional.dropout3d", false]], "eig() (in module lucid.linalg)": [[14, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[166, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[102, "lucid.nn.functional.elu", false]], "empty() (in module lucid)": [[259, "lucid.empty", false]], "empty_like() (in module lucid)": [[260, "lucid.empty_like", false]], "exp() (in module lucid)": [[275, "lucid.exp", false]], "eye() (in module lucid)": [[261, "lucid.eye", false]], "fashionmnist (class in lucid.datasets)": [[7, "lucid.datasets.FashionMNIST", false]], "flatten() (in module lucid)": [[294, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[167, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[103, "lucid.nn.functional.gelu", false]], "grad_enabled() (in module lucid)": [[233, "lucid.grad_enabled", false]], "hardsigmoid (class in lucid.nn)": [[168, "lucid.nn.HardSigmoid", false]], "hardswish (class in lucid.nn)": [[169, "lucid.nn.HardSwish", false]], "hstack() (in module lucid)": [[295, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[128, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[196, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[191, "lucid.nn.Identity", false]], "inception (class in lucid.models)": [[30, "lucid.models.Inception", false]], "inception_resnet_v1() (in module lucid.models)": [[35, "lucid.models.inception_resnet_v1", false]], "inception_resnet_v2() (in module lucid.models)": [[36, "lucid.models.inception_resnet_v2", false]], "inception_v1() (in module lucid.models)": [[31, "lucid.models.inception_v1", false]], "inception_v3() (in module lucid.models)": [[32, "lucid.models.inception_v3", false]], "inception_v4() (in module lucid.models)": [[33, "lucid.models.inception_v4", false]], "inceptionresnet (class in lucid.models)": [[34, "lucid.models.InceptionResNet", false]], "inner() (in module lucid)": [[249, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[134, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[203, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[204, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[205, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[147, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[16, "lucid.linalg.inv", false]], "kaiming_normal() (in module lucid.nn.init)": [[160, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[161, "lucid.nn.init.kaiming_uniform", false]], "layer_norm() (in module lucid.nn.functional)": [[135, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[206, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[105, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[170, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[38, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[39, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[40, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[41, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[192, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[125, "lucid.nn.functional.linear", false]], "log() (in module lucid)": [[276, "lucid.log", false]], "lucid": [[10, "module-lucid", false]], "matmul() (in module lucid)": [[250, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[17, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[277, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[143, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[144, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[145, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[251, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[214, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[215, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[216, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[278, "lucid.mean", false]], "meshgrid() (in module lucid)": [[297, "lucid.meshgrid", false]], "min() (in module lucid)": [[279, "lucid.min", false]], "minimum() (in module lucid)": [[252, "lucid.minimum", false]], "mnist (class in lucid.datasets)": [[8, "lucid.datasets.MNIST", false]], "mobilenet (class in lucid.models)": [[42, "lucid.models.MobileNet", false]], "mobilenet() (in module lucid.models)": [[45, "lucid.models.mobilenet", false]], "mobilenet_v2 (class in lucid.models)": [[43, "lucid.models.MobileNet_V2", false]], "mobilenet_v2() (in module lucid.models)": [[46, "lucid.models.mobilenet_v2", false]], "mobilenet_v3 (class in lucid.models)": [[44, "lucid.models.MobileNet_V3", false]], "mobilenet_v3_large() (in module lucid.models)": [[47, "lucid.models.mobilenet_v3_large", false]], "mobilenet_v3_small() (in module lucid.models)": [[48, "lucid.models.mobilenet_v3_small", false]], "module": [[10, "module-lucid", false]], "module (class in lucid.nn)": [[94, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[96, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[97, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[130, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[197, "lucid.nn.MSELoss", false]], "mul() (in module lucid)": [[253, "lucid.mul", false]], "nadam (class in lucid.optim)": [[227, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[131, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[198, "lucid.nn.NLLLoss", false]], "no_grad() (in module lucid)": [[235, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[18, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[162, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[310, "lucid.transforms.Normalize", false]], "ones() (in module lucid)": [[262, "lucid.ones", false]], "ones_like() (in module lucid)": [[263, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[219, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[254, "lucid.outer", false]], "pad() (in module lucid)": [[298, "lucid.pad", false]], "parameter (class in lucid.nn)": [[95, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[98, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[99, "lucid.nn.ParameterList", false]], "pinv() (in module lucid.linalg)": [[19, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[255, "lucid.power", false]], "qr() (in module lucid.linalg)": [[20, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[228, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[239, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[240, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[241, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[311, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[312, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[313, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[314, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[315, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[299, "lucid.ravel", false]], "reciprocal() (in module lucid)": [[280, "lucid.reciprocal", false]], "register_model() (in module lucid)": [[236, "lucid.register_model", false]], "relu (class in lucid.nn)": [[171, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[106, "lucid.nn.functional.relu", false]], "relu6 (class in lucid.nn)": [[172, "lucid.nn.ReLU6", false]], "repeat() (in module lucid)": [[300, "lucid.repeat", false]], "reshape() (in module lucid)": [[301, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[316, "lucid.transforms.Resize", false]], "resnet (class in lucid.models)": [[49, "lucid.models.ResNet", false]], "resnet_1001() (in module lucid.models)": [[50, "lucid.models.resnet_1001", false]], "resnet_101() (in module lucid.models)": [[51, "lucid.models.resnet_101", false]], "resnet_152() (in module lucid.models)": [[52, "lucid.models.resnet_152", false]], "resnet_18() (in module lucid.models)": [[53, "lucid.models.resnet_18", false]], "resnet_200() (in module lucid.models)": [[54, "lucid.models.resnet_200", false]], "resnet_269() (in module lucid.models)": [[55, "lucid.models.resnet_269", false]], "resnet_34() (in module lucid.models)": [[56, "lucid.models.resnet_34", false]], "resnet_50() (in module lucid.models)": [[57, "lucid.models.resnet_50", false]], "resnext (class in lucid.models)": [[60, "lucid.models.ResNeXt", false]], "resnext_101_32x16d() (in module lucid.models)": [[61, "lucid.models.resnext_101_32x16d", false]], "resnext_101_32x32d() (in module lucid.models)": [[62, "lucid.models.resnext_101_32x32d", false]], "resnext_101_32x4d() (in module lucid.models)": [[63, "lucid.models.resnext_101_32x4d", false]], "resnext_101_32x8d() (in module lucid.models)": [[64, "lucid.models.resnext_101_32x8d", false]], "resnext_101_64x4d() (in module lucid.models)": [[65, "lucid.models.resnext_101_64x4d", false]], "resnext_50_32x4d() (in module lucid.models)": [[66, "lucid.models.resnext_50_32x4d", false]], "rmsprop (class in lucid.optim)": [[229, "lucid.optim.RMSprop", false]], "rotate() (in module lucid.nn.functional)": [[148, "lucid.nn.functional.rotate", false]], "rprop (class in lucid.optim)": [[230, "lucid.optim.Rprop", false]], "se_resnet_101() (in module lucid.models)": [[68, "lucid.models.se_resnet_101", false]], "se_resnet_152() (in module lucid.models)": [[69, "lucid.models.se_resnet_152", false]], "se_resnet_18() (in module lucid.models)": [[70, "lucid.models.se_resnet_18", false]], "se_resnet_34() (in module lucid.models)": [[71, "lucid.models.se_resnet_34", false]], "se_resnet_50() (in module lucid.models)": [[72, "lucid.models.se_resnet_50", false]], "se_resnext_101_32x4d() (in module lucid.models)": [[73, "lucid.models.se_resnext_101_32x4d", false]], "se_resnext_101_32x8d() (in module lucid.models)": [[74, "lucid.models.se_resnext_101_32x8d", false]], "se_resnext_101_64x4d() (in module lucid.models)": [[75, "lucid.models.se_resnext_101_64x4d", false]], "se_resnext_50_32x4d() (in module lucid.models)": [[76, "lucid.models.se_resnext_50_32x4d", false]], "seed() (in module lucid.random)": [[242, "lucid.random.seed", false]], "selectivekernel (class in lucid.nn)": [[156, "lucid.nn.SelectiveKernel", false]], "selu (class in lucid.nn)": [[173, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[107, "lucid.nn.functional.selu", false]], "semodule (class in lucid.nn)": [[155, "lucid.nn.SEModule", false]], "senet (class in lucid.models)": [[67, "lucid.models.SENet", false]], "sequential (class in lucid.nn)": [[100, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[231, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[174, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[108, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[281, "lucid.sign", false]], "sin() (in module lucid)": [[282, "lucid.sin", false]], "sinh() (in module lucid)": [[283, "lucid.sinh", false]], "sk_resnet_18() (in module lucid.models)": [[78, "lucid.models.sk_resnet_18", false]], "sk_resnet_34() (in module lucid.models)": [[79, "lucid.models.sk_resnet_34", false]], "sk_resnet_50() (in module lucid.models)": [[80, "lucid.models.sk_resnet_50", false]], "sk_resnext_50_32x4d() (in module lucid.models)": [[81, "lucid.models.sk_resnext_50_32x4d", false]], "sknet (class in lucid.models)": [[77, "lucid.models.SKNet", false]], "softmax (class in lucid.nn)": [[175, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[109, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[21, "lucid.linalg.solve", false]], "sqrt() (in module lucid)": [[284, "lucid.sqrt", false]], "square() (in module lucid)": [[285, "lucid.square", false]], "squeeze() (in module lucid)": [[302, "lucid.squeeze", false]], "stack() (in module lucid)": [[303, "lucid.stack", false]], "sub() (in module lucid)": [[256, "lucid.sub", false]], "sum() (in module lucid)": [[286, "lucid.sum", false]], "summarize() (in module lucid.models)": [[92, "lucid.models.summarize", false]], "svd() (in module lucid.linalg)": [[22, "lucid.linalg.svd", false]], "swish (class in lucid.nn)": [[176, "lucid.nn.Swish", false]], "tan() (in module lucid)": [[287, "lucid.tan", false]], "tanh (class in lucid.nn)": [[177, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[288, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[110, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[245, "lucid.Tensor", false]], "tensor() (in module lucid)": [[292, "lucid.tensor", false]], "tile() (in module lucid)": [[304, "lucid.tile", false]], "totensor (class in lucid.transforms)": [[308, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[289, "lucid.trace", false]], "transpose() (in module lucid)": [[290, "lucid.transpose", false]], "unfold() (in module lucid.nn.functional)": [[115, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[163, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[243, "lucid.random.uniform", false]], "unsqueeze() (in module lucid)": [[305, "lucid.unsqueeze", false]], "var() (in module lucid)": [[291, "lucid.var", false]], "vggnet (class in lucid.models)": [[82, "lucid.models.VGGNet", false]], "vggnet_11() (in module lucid.models)": [[83, "lucid.models.vggnet_11", false]], "vggnet_13() (in module lucid.models)": [[84, "lucid.models.vggnet_13", false]], "vggnet_16() (in module lucid.models)": [[85, "lucid.models.vggnet_16", false]], "vggnet_19() (in module lucid.models)": [[86, "lucid.models.vggnet_19", false]], "vstack() (in module lucid)": [[306, "lucid.vstack", false]], "wide_resnet_101() (in module lucid.models)": [[58, "lucid.models.wide_resnet_101", false]], "wide_resnet_50() (in module lucid.models)": [[59, "lucid.models.wide_resnet_50", false]], "xavier_normal() (in module lucid.nn.init)": [[164, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[165, "lucid.nn.init.xavier_uniform", false]], "xception (class in lucid.models)": [[87, "lucid.models.Xception", false]], "xception() (in module lucid.models)": [[88, "lucid.models.xception", false]], "zeros() (in module lucid)": [[264, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[265, "lucid.zeros_like", false]], "zfnet (class in lucid.models)": [[89, "lucid.models.ZFNet", false]], "zfnet() (in module lucid.models)": [[90, "lucid.models.zfnet", false]]}, "objects": {"": [[10, 0, 0, "-", "lucid"]], "lucid": [[245, 1, 1, "", "Tensor"], [267, 2, 1, "", "abs"], [246, 2, 1, "", "add"], [257, 2, 1, "", "arange"], [268, 2, 1, "", "arccos"], [269, 2, 1, "", "arcsin"], [270, 2, 1, "", "arctan"], [271, 2, 1, "", "clip"], [293, 2, 1, "", "concatenate"], [272, 2, 1, "", "cos"], [273, 2, 1, "", "cosh"], [274, 2, 1, "", "cube"], [258, 2, 1, "", "diag"], [247, 2, 1, "", "div"], [248, 2, 1, "", "dot"], [259, 2, 1, "", "empty"], [260, 2, 1, "", "empty_like"], [275, 2, 1, "", "exp"], [261, 2, 1, "", "eye"], [294, 2, 1, "", "flatten"], [233, 2, 1, "", "grad_enabled"], [295, 2, 1, "", "hstack"], [249, 2, 1, "", "inner"], [276, 2, 1, "", "log"], [250, 2, 1, "", "matmul"], [277, 2, 1, "", "max"], [251, 2, 1, "", "maximum"], [278, 2, 1, "", "mean"], [297, 2, 1, "", "meshgrid"], [279, 2, 1, "", "min"], [252, 2, 1, "", "minimum"], [253, 2, 1, "", "mul"], [235, 2, 1, "", "no_grad"], [262, 2, 1, "", "ones"], [263, 2, 1, "", "ones_like"], [254, 2, 1, "", "outer"], [298, 2, 1, "", "pad"], [255, 2, 1, "", "power"], [299, 2, 1, "", "ravel"], [280, 2, 1, "", "reciprocal"], [236, 2, 1, "", "register_model"], [300, 2, 1, "", "repeat"], [301, 2, 1, "", "reshape"], [281, 2, 1, "", "sign"], [282, 2, 1, "", "sin"], [283, 2, 1, "", "sinh"], [284, 2, 1, "", "sqrt"], [285, 2, 1, "", "square"], [302, 2, 1, "", "squeeze"], [303, 2, 1, "", "stack"], [256, 2, 1, "", "sub"], [286, 2, 1, "", "sum"], [287, 2, 1, "", "tan"], [288, 2, 1, "", "tanh"], [292, 2, 1, "", "tensor"], [304, 2, 1, "", "tile"], [289, 2, 1, "", "trace"], [290, 2, 1, "", "transpose"], [305, 2, 1, "", "unsqueeze"], [291, 2, 1, "", "var"], [306, 2, 1, "", "vstack"], [264, 2, 1, "", "zeros"], [265, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "CIFAR10"], [6, 1, 1, "", "CIFAR100"], [7, 1, 1, "", "FashionMNIST"], [8, 1, 1, "", "MNIST"]], "lucid.linalg": [[12, 2, 1, "", "cholesky"], [13, 2, 1, "", "det"], [14, 2, 1, "", "eig"], [16, 2, 1, "", "inv"], [17, 2, 1, "", "matrix_power"], [18, 2, 1, "", "norm"], [19, 2, 1, "", "pinv"], [20, 2, 1, "", "qr"], [21, 2, 1, "", "solve"], [22, 2, 1, "", "svd"]], "lucid.models": [[23, 1, 1, "", "AlexNet"], [25, 1, 1, "", "DenseNet"], [30, 1, 1, "", "Inception"], [34, 1, 1, "", "InceptionResNet"], [38, 1, 1, "", "LeNet"], [42, 1, 1, "", "MobileNet"], [43, 1, 1, "", "MobileNet_V2"], [44, 1, 1, "", "MobileNet_V3"], [60, 1, 1, "", "ResNeXt"], [49, 1, 1, "", "ResNet"], [67, 1, 1, "", "SENet"], [77, 1, 1, "", "SKNet"], [82, 1, 1, "", "VGGNet"], [87, 1, 1, "", "Xception"], [89, 1, 1, "", "ZFNet"], [24, 2, 1, "", "alexnet"], [26, 2, 1, "", "densenet_121"], [27, 2, 1, "", "densenet_169"], [28, 2, 1, "", "densenet_201"], [29, 2, 1, "", "densenet_264"], [35, 2, 1, "", "inception_resnet_v1"], [36, 2, 1, "", "inception_resnet_v2"], [31, 2, 1, "", "inception_v1"], [32, 2, 1, "", "inception_v3"], [33, 2, 1, "", "inception_v4"], [39, 2, 1, "", "lenet_1"], [40, 2, 1, "", "lenet_4"], [41, 2, 1, "", "lenet_5"], [45, 2, 1, "", "mobilenet"], [46, 2, 1, "", "mobilenet_v2"], [47, 2, 1, "", "mobilenet_v3_large"], [48, 2, 1, "", "mobilenet_v3_small"], [50, 2, 1, "", "resnet_1001"], [51, 2, 1, "", "resnet_101"], [52, 2, 1, "", "resnet_152"], [53, 2, 1, "", "resnet_18"], [54, 2, 1, "", "resnet_200"], [55, 2, 1, "", "resnet_269"], [56, 2, 1, "", "resnet_34"], [57, 2, 1, "", "resnet_50"], [61, 2, 1, "", "resnext_101_32x16d"], [62, 2, 1, "", "resnext_101_32x32d"], [63, 2, 1, "", "resnext_101_32x4d"], [64, 2, 1, "", "resnext_101_32x8d"], [65, 2, 1, "", "resnext_101_64x4d"], [66, 2, 1, "", "resnext_50_32x4d"], [68, 2, 1, "", "se_resnet_101"], [69, 2, 1, "", "se_resnet_152"], [70, 2, 1, "", "se_resnet_18"], [71, 2, 1, "", "se_resnet_34"], [72, 2, 1, "", "se_resnet_50"], [73, 2, 1, "", "se_resnext_101_32x4d"], [74, 2, 1, "", "se_resnext_101_32x8d"], [75, 2, 1, "", "se_resnext_101_64x4d"], [76, 2, 1, "", "se_resnext_50_32x4d"], [78, 2, 1, "", "sk_resnet_18"], [79, 2, 1, "", "sk_resnet_34"], [80, 2, 1, "", "sk_resnet_50"], [81, 2, 1, "", "sk_resnext_50_32x4d"], [92, 2, 1, "", "summarize"], [83, 2, 1, "", "vggnet_11"], [84, 2, 1, "", "vggnet_13"], [85, 2, 1, "", "vggnet_16"], [86, 2, 1, "", "vggnet_19"], [58, 2, 1, "", "wide_resnet_101"], [59, 2, 1, "", "wide_resnet_50"], [88, 2, 1, "", "xception"], [90, 2, 1, "", "zfnet"]], "lucid.nn": [[208, 1, 1, "", "AdaptiveAvgPool1d"], [209, 1, 1, "", "AdaptiveAvgPool2d"], [210, 1, 1, "", "AdaptiveAvgPool3d"], [183, 1, 1, "", "AlphaDropout"], [211, 1, 1, "", "AvgPool1d"], [212, 1, 1, "", "AvgPool2d"], [213, 1, 1, "", "AvgPool3d"], [194, 1, 1, "", "BCELoss"], [200, 1, 1, "", "BatchNorm1d"], [201, 1, 1, "", "BatchNorm2d"], [202, 1, 1, "", "BatchNorm3d"], [190, 1, 1, "", "Bilinear"], [93, 1, 1, "", "Buffer"], [179, 1, 1, "", "Conv1d"], [180, 1, 1, "", "Conv2d"], [181, 1, 1, "", "Conv3d"], [149, 1, 1, "", "ConvBNReLU1d"], [150, 1, 1, "", "ConvBNReLU2d"], [151, 1, 1, "", "ConvBNReLU3d"], [195, 1, 1, "", "CrossEntropyLoss"], [152, 1, 1, "", "DepthSeparableConv1d"], [153, 1, 1, "", "DepthSeparableConv2d"], [154, 1, 1, "", "DepthSeparableConv3d"], [184, 1, 1, "", "Dropout"], [185, 1, 1, "", "Dropout1d"], [186, 1, 1, "", "Dropout2d"], [187, 1, 1, "", "Dropout3d"], [166, 1, 1, "", "ELU"], [167, 1, 1, "", "GELU"], [168, 1, 1, "", "HardSigmoid"], [169, 1, 1, "", "HardSwish"], [196, 1, 1, "", "HuberLoss"], [191, 1, 1, "", "Identity"], [203, 1, 1, "", "InstanceNorm1d"], [204, 1, 1, "", "InstanceNorm2d"], [205, 1, 1, "", "InstanceNorm3d"], [206, 1, 1, "", "LayerNorm"], [170, 1, 1, "", "LeakyReLU"], [192, 1, 1, "", "Linear"], [197, 1, 1, "", "MSELoss"], [214, 1, 1, "", "MaxPool1d"], [215, 1, 1, "", "MaxPool2d"], [216, 1, 1, "", "MaxPool3d"], [94, 1, 1, "", "Module"], [96, 1, 1, "", "ModuleDict"], [97, 1, 1, "", "ModuleList"], [198, 1, 1, "", "NLLLoss"], [95, 1, 1, "", "Parameter"], [98, 1, 1, "", "ParameterDict"], [99, 1, 1, "", "ParameterList"], [171, 1, 1, "", "ReLU"], [172, 1, 1, "", "ReLU6"], [173, 1, 1, "", "SELU"], [155, 1, 1, "", "SEModule"], [156, 1, 1, "", "SelectiveKernel"], [100, 1, 1, "", "Sequential"], [174, 1, 1, "", "Sigmoid"], [175, 1, 1, "", "Softmax"], [176, 1, 1, "", "Swish"], [177, 1, 1, "", "Tanh"]], "lucid.nn.functional": [[136, 2, 1, "", "adaptive_avg_pool1d"], [137, 2, 1, "", "adaptive_avg_pool2d"], [138, 2, 1, "", "adaptive_avg_pool3d"], [116, 2, 1, "", "alpha_dropout"], [139, 2, 1, "", "avg_pool1d"], [140, 2, 1, "", "avg_pool2d"], [141, 2, 1, "", "avg_pool3d"], [132, 2, 1, "", "batch_norm"], [123, 2, 1, "", "bilinear"], [126, 2, 1, "", "binary_cross_entropy"], [111, 2, 1, "", "conv1d"], [112, 2, 1, "", "conv2d"], [113, 2, 1, "", "conv3d"], [127, 2, 1, "", "cross_entropy"], [117, 2, 1, "", "dropout"], [118, 2, 1, "", "dropout1d"], [119, 2, 1, "", "dropout2d"], [120, 2, 1, "", "dropout3d"], [102, 2, 1, "", "elu"], [103, 2, 1, "", "gelu"], [128, 2, 1, "", "huber_loss"], [134, 2, 1, "", "instance_norm"], [147, 2, 1, "", "interpolate"], [135, 2, 1, "", "layer_norm"], [105, 2, 1, "", "leaky_relu"], [125, 2, 1, "", "linear"], [143, 2, 1, "", "max_pool1d"], [144, 2, 1, "", "max_pool2d"], [145, 2, 1, "", "max_pool3d"], [130, 2, 1, "", "mse_loss"], [131, 2, 1, "", "nll_loss"], [106, 2, 1, "", "relu"], [148, 2, 1, "", "rotate"], [107, 2, 1, "", "selu"], [108, 2, 1, "", "sigmoid"], [109, 2, 1, "", "softmax"], [110, 2, 1, "", "tanh"], [115, 2, 1, "", "unfold"]], "lucid.nn.init": [[158, 2, 1, "", "constant"], [160, 2, 1, "", "kaiming_normal"], [161, 2, 1, "", "kaiming_uniform"], [162, 2, 1, "", "normal"], [163, 2, 1, "", "uniform"], [164, 2, 1, "", "xavier_normal"], [165, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[221, 1, 1, "", "ASGD"], [222, 1, 1, "", "Adadelta"], [223, 1, 1, "", "Adagrad"], [224, 1, 1, "", "Adam"], [225, 1, 1, "", "AdamW"], [226, 1, 1, "", "Adamax"], [227, 1, 1, "", "NAdam"], [219, 1, 1, "", "Optimizer"], [228, 1, 1, "", "RAdam"], [229, 1, 1, "", "RMSprop"], [230, 1, 1, "", "Rprop"], [231, 1, 1, "", "SGD"]], "lucid.random": [[239, 2, 1, "", "rand"], [240, 2, 1, "", "randint"], [241, 2, 1, "", "randn"], [242, 2, 1, "", "seed"], [243, 2, 1, "", "uniform"]], "lucid.transforms": [[309, 1, 1, "", "CenterCrop"], [307, 1, 1, "", "Compose"], [310, 1, 1, "", "Normalize"], [311, 1, 1, "", "RandomCrop"], [312, 1, 1, "", "RandomGrayscale"], [313, 1, 1, "", "RandomHorizontalFlip"], [314, 1, 1, "", "RandomRotation"], [315, 1, 1, "", "RandomVerticalFlip"], [316, 1, 1, "", "Resize"], [308, 1, 1, "", "ToTensor"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [3, 10, 11, 17, 19, 22, 47, 48, 91, 92, 93, 94, 95, 96, 98, 99, 100, 136, 137, 138, 156, 195, 198, 208, 209, 210, 211, 214, 215, 218, 219, 220, 234, 236, 250, 258, 276, 278, 286, 289, 291, 292, 302, 308, 310, 318], "0": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 32, 34, 38, 45, 67, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 123, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 280, 281, 282, 283, 286, 287, 288, 290, 291, 292, 293, 295, 298, 299, 300, 302, 303, 305, 306, 307, 309, 310, 311, 312, 313, 314, 315, 316, 318], "000": [5, 6, 7, 8, 259, 260], "0000": [195, 196, 198], "0001": 221, "000e": [259, 260], "001": [221, 224, 225, 227, 228, 231], "002": [226, 227], "004": 227, "005": 170, "008": [45, 91], "01": [105, 170, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231], "01051757": 241, "013": [28, 91], "016": [50, 91], "0205": 195, "0217": 195, "0227": 195, "024": [72, 91], "026": [61, 91], "028": [66, 91], "0299": 195, "032": [57, 91], "044715": [103, 167], "0450": 195, "0451": 195, "047": [84, 91], "04719755": 268, "0474259": 108, "048": [74, 91], "0480": 195, "04861": 91, "05": [132, 134, 135, 149, 150, 151, 170, 200, 201, 202, 203, 204, 205, 206], "0507": [107, 173], "06": [222, 230], "069": [55, 91], "07": [126, 127, 194, 195], "0700": 195, "0706508": 177, "071": [50, 91], "0721": 195, "073": [80, 91], "07722396": 176, "0794": 198, "08": [224, 225, 226, 227, 228, 229], "0802": 198, "08333333": 19, "085537": 275, "088": [72, 91], "0900": [175, 195], "096": [88, 91], "0986": [109, 175], "09861229": 276, "0992": 195, "1": [0, 1, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 34, 38, 39, 40, 41, 44, 45, 46, 47, 48, 67, 73, 74, 75, 76, 77, 81, 82, 87, 89, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 123, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 237, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318], "10": [0, 1, 2, 3, 5, 6, 7, 23, 24, 25, 38, 39, 40, 41, 82, 89, 90, 91, 92, 96, 97, 100, 112, 113, 123, 125, 136, 179, 180, 181, 186, 187, 190, 192, 201, 202, 204, 208, 212, 213, 215, 223, 236, 240, 243, 244, 247, 250, 253, 254, 270, 286, 309, 311, 312, 314], "100": [6, 24, 83, 84, 85, 86, 91, 236, 318], "1000": [23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90], "1000000": 221, "1001": [50, 91, 195], "1003": 195, "1007": 91, "101": [51, 58, 61, 62, 63, 64, 65, 68, 73, 74, 75, 91], "1014": 107, "102": [55, 91], "1025": [97, 100], "1026": [97, 100], "1027": [97, 100], "10499": 108, "1050": 174, "1054": 198, "1056": [97, 100], "10590": 91, "1097": 91, "11": [53, 70, 82, 83, 91, 123, 179, 180, 181, 186, 190, 201, 202, 204, 212, 213, 215, 250, 309, 310, 311, 312, 314], "1105": 91, "1109": 91, "1111": 194, "112": 47, "1134": 123, "114b": 312, "119": 123, "1192": [108, 109, 175], "12": [25, 26, 27, 28, 29, 39, 40, 98, 123, 138, 179, 180, 181, 186, 187, 190, 201, 202, 204, 210, 212, 213, 215, 250, 254, 255, 309, 311, 312, 314], "120": [38, 41, 47, 48], "121": [25, 26, 91], "123": [160, 161, 162, 163, 164, 165, 242, 243], "124": [160, 161, 164, 165], "125": 213, "1250": 196, "1251": 91, "1258": 91, "126": [58, 91], "128": [35, 49, 58, 59, 82, 91, 100, 156, 307, 318], "1280": 44, "128x128": [307, 318], "13": [31, 82, 84, 91, 123, 179, 180, 181, 190, 202, 212, 213, 215, 250, 309, 311, 312, 314], "1314": 91, "132": [83, 91], "1324": 91, "133": [84, 91], "138": [85, 91], "14": [27, 91, 179, 180, 181, 186, 187, 190, 202, 212, 213, 215, 237, 250, 254, 309, 311, 312, 314], "1409": 91, "143": [86, 91], "144": 48, "145": 123, "149": [27, 50, 91], "15": [0, 123, 179, 180, 181, 190, 202, 212, 213, 215, 250, 254, 289, 309, 311, 312, 314, 318], "1513": 198, "152": [52, 69, 91], "155": 250, "1556": 91, "1588": [103, 167], "16": [25, 26, 38, 41, 44, 47, 48, 61, 67, 82, 85, 91, 97, 98, 100, 137, 138, 149, 150, 151, 155, 156, 179, 180, 181, 186, 187, 190, 201, 202, 209, 210, 212, 213, 215, 218, 250, 254, 284, 309, 311, 312, 314], "160": [47, 51, 91], "16227766": 20, "16425": 198, "1643": 194, "166": 250, "167": 169, "169": [25, 27, 91], "17": [179, 180, 181, 190, 202, 213, 249, 309, 311, 312, 314], "170": 123, "1704": 91, "17520119": 283, "177": [63, 91], "18": [40, 53, 70, 78, 91, 179, 180, 181, 186, 190, 202, 213, 253, 254, 309, 311, 312, 314], "1800": 195, "184": 47, "18877099": 176, "19": [82, 86, 91, 112, 113, 123, 180, 181, 202, 248, 250], "192": [39, 40, 52, 91], "194": [61, 91], "1966": [109, 174, 175], "198": [47, 91], "1998": [91, 195], "1_53": 91, "1d": [111, 136, 139, 143, 149, 152, 200, 203, 208, 243, 250, 258, 289, 297, 298, 299, 300, 304], "1e": [126, 127, 132, 134, 135, 149, 150, 151, 194, 195, 200, 201, 202, 203, 204, 205, 206, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "1e6": 221, "1st": [23, 89], "2": [1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 39, 40, 41, 44, 47, 48, 53, 70, 78, 89, 91, 92, 93, 94, 95, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 123, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 156, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 237, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318], "20": [0, 5, 6, 7, 8, 28, 91, 96, 97, 100, 180, 181, 186, 202, 254, 275], "200": [47, 54, 91], "201": [28, 91], "2011": 155, "2012": 91, "2014": 91, "2015": 91, "2016": 91, "2017": 91, "2018": [91, 155], "2019": 91, "2023": 155, "2039": 198, "204": 181, "21": [56, 71, 91, 98, 123, 180, 181, 202, 254], "211": 250, "22": [35, 88, 91, 123, 180, 181, 186, 202, 248, 250], "2231": [195, 198], "224": [23, 25, 26, 27, 28, 29, 45, 46, 49, 59, 61, 62, 63, 64, 65, 66, 73, 74, 75, 76, 78, 79, 80, 81, 82, 89, 91], "2247": [200, 201, 202, 203, 204, 205, 206], "224x224": [31, 73, 74, 75, 76, 81], "226": 250, "22752314": 241, "2278": 91, "23": [51, 58, 61, 62, 63, 64, 65, 68, 180, 181, 202], "232": [45, 75, 91], "2324": [91, 173], "234": [160, 161, 162, 163, 164, 165, 243], "238": [48, 91], "23840584": 176, "24": [25, 26, 44, 47, 48, 54, 123, 137, 180, 181, 186, 202, 209, 254], "240": [47, 48, 86, 91], "2424": [109, 175], "2447": 175, "246": [39, 91], "25": [0, 57, 66, 78, 91, 108, 174, 181, 197, 202, 212, 213, 247, 280, 291], "2500": [194, 196, 198], "2512": 166, "2547": 173, "256": [49, 82], "26": [98, 125, 181, 192, 202, 254], "26325684": 241, "264": [29, 91], "2689": [109, 174, 175], "26894142": 176, "269": [55, 91], "27": [76, 91, 123, 179, 181, 202, 274], "272": [65, 91], "274": [81, 91], "276": [160, 161, 164, 165], "28": [39, 40, 72, 91, 123, 181, 254], "288": 48, "28x28": [7, 8, 39, 40], "29": [81, 91, 181], "299": [87, 91], "299r": 312, "299x299": [32, 33, 35, 36], "2_i": [203, 204, 205], "2d": [112, 119, 137, 140, 144, 150, 153, 201, 204, 209, 250, 258, 261, 289, 294, 297, 298, 300, 304, 314], "2e": 226, "2nd": [23, 89], "2x2": [115, 309, 311], "3": [1, 2, 3, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 39, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 87, 89, 91, 93, 94, 95, 97, 98, 99, 100, 103, 108, 109, 111, 112, 113, 115, 116, 117, 118, 119, 120, 123, 125, 128, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 271, 273, 274, 275, 276, 277, 278, 279, 283, 284, 285, 286, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316], "30": [32, 55, 91, 97, 148, 181, 314], "3026": 198, "30823025": 176, "31": [123, 181, 250], "310": [259, 260], "31622777": 20, "319": 91, "32": [25, 27, 28, 41, 61, 62, 63, 64, 66, 91, 97, 100, 123, 125, 137, 149, 150, 151, 155, 156, 180, 181, 192, 209, 218, 248, 249, 254], "321": [160, 161, 164, 165], "326": [68, 91], "32x16d": 91, "32x32": [5, 6, 38, 41], "32x32d": 91, "32x4d": [73, 76, 81, 91], "32x8d": [74, 91], "33": [29, 91, 97, 100, 125, 181, 192], "33333333": 19, "336": [64, 83, 91], "337": [29, 91], "34": [56, 71, 79, 91, 97, 100, 123, 181, 250, 254], "342": [160, 161, 164, 165], "345": [160, 161, 162, 163, 164, 165, 243], "35": [36, 91, 97, 100, 181], "352": [31, 91], "3567": [194, 198], "357": [85, 90, 91], "36": [52, 54, 69, 181], "3679": [102, 107, 166], "368": [78, 80, 91], "37": 179, "372": 123, "375": 197, "3750": 196, "37754067": 176, "378": [40, 91], "38344152": 239, "38629436": 276, "389056": 275, "392": [32, 91], "393": [31, 91], "3935": 166, "3d": [113, 120, 138, 141, 145, 151, 154, 181, 202, 205, 210], "3x3": [91, 244], "4": [0, 1, 2, 3, 11, 12, 13, 14, 16, 18, 19, 20, 25, 38, 39, 40, 45, 49, 51, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 68, 71, 72, 79, 80, 91, 92, 98, 100, 111, 112, 113, 115, 118, 119, 120, 123, 125, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 152, 153, 154, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 221, 224, 228, 229, 231, 234, 237, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 263, 265, 271, 276, 277, 278, 279, 280, 282, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 303, 304, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316], "40": [33, 44, 47, 48, 91], "400": 41, "4044": 194, "4076": 195, "4096": [23, 89], "41421356": 12, "416": [55, 73, 91], "41666667": 19, "41808962": 241, "419974": 110, "4199743": 177, "42": [123, 155, 237, 244], "421": [160, 161, 164, 165], "423": [160, 161, 162, 163], "42718872": 20, "4278": 91, "4284": 91, "4286": 194, "43": [248, 250], "4323": 166, "4375": 196, "43758721": 239, "44": [51, 63, 91], "4472136": 14, "4495": [202, 205], "45": [79, 91, 123, 148, 314], "4510": 91, "4520": 91, "4545": 183, "455": [65, 91], "468": [62, 91], "4700": 91, "4708": 91, "47112767": 270, "472": [62, 91], "48": [25, 28, 29, 48, 55, 73, 91, 125, 192], "480": [27, 47, 91], "481": [47, 91], "49": [68, 91], "4979": 166, "4x4": 316, "5": [1, 2, 10, 11, 16, 17, 18, 19, 23, 32, 38, 39, 40, 41, 44, 47, 48, 77, 78, 79, 80, 89, 91, 92, 94, 95, 96, 97, 98, 100, 103, 108, 111, 112, 113, 115, 116, 117, 118, 119, 120, 123, 125, 128, 130, 132, 134, 135, 136, 139, 140, 147, 149, 150, 151, 156, 158, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 211, 212, 213, 215, 216, 230, 234, 237, 240, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 263, 265, 267, 268, 269, 277, 278, 279, 280, 281, 286, 289, 290, 291, 292, 295, 297, 301, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318], "50": [5, 6, 49, 57, 59, 66, 72, 76, 80, 81, 91, 125, 192, 230, 248, 250, 312, 313, 315, 318], "5000": [194, 196, 198], "504": [46, 91], "510": 91, "5108": 198, "512": [36, 49, 53, 79, 91], "519": 91, "52359878": 269, "53": [123, 249], "530": [62, 91], "537": [48, 91], "543": [160, 161, 162, 163, 164, 165, 243], "54308063": 273, "544": [85, 91], "545": 255, "5455": 183, "549": [51, 91], "557": [57, 91], "559": [76, 91], "563": [160, 161, 164, 165], "569": [74, 91], "57": [80, 91, 123], "57079633": [268, 269], "57366333": 242, "576": 48, "586": [33, 91], "587g": 312, "592": [70, 91], "5987": 91, "5995": 91, "5th": [23, 89], "6": [11, 19, 23, 25, 26, 27, 28, 29, 38, 41, 49, 56, 57, 59, 66, 71, 72, 79, 80, 89, 98, 99, 111, 112, 113, 115, 120, 123, 125, 136, 161, 165, 168, 172, 179, 180, 181, 184, 185, 186, 187, 190, 192, 194, 200, 201, 202, 203, 204, 205, 206, 208, 212, 213, 215, 216, 222, 230, 234, 237, 243, 246, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 263, 265, 277, 278, 279, 286, 289, 290, 291, 292, 295, 300, 301, 306, 308, 309, 310, 311, 312, 314, 316], "60": [5, 6, 52, 91], "6052": 198, "6065": 166, "608": [90, 91], "61": [24, 41, 91], "6124": [200, 201, 202, 203, 204, 205, 206], "62": [90, 91, 123], "62686041": 283, "630": 91, "6321": [102, 166], "63245553": 20, "64": [25, 29, 44, 47, 49, 54, 65, 77, 82, 91, 97, 100, 123, 155, 156], "645": 91, "64589411": 239, "647": [78, 91], "64x4d": [75, 91], "654": [160, 161, 162, 163, 164, 165, 243], "657": [160, 161, 164, 165], "6590": [109, 175], "66": [69, 91], "6652": 175, "66666667": 19, "6667": 194, "667": [86, 91], "6682": 194, "669": [54, 91], "67": 250, "672": [47, 56, 91], "67326": 173, "6733": 107, "678": [160, 161, 162, 163, 164, 165], "68811989": 241, "689": [53, 91], "69314718": 276, "696": [58, 91], "7": [18, 26, 82, 91, 98, 111, 112, 113, 115, 120, 123, 125, 126, 127, 136, 156, 167, 172, 173, 174, 177, 179, 180, 181, 186, 187, 190, 192, 194, 195, 197, 201, 202, 204, 205, 208, 212, 213, 215, 216, 237, 240, 243, 246, 248, 249, 250, 254, 256, 258, 275, 278, 286, 289, 290, 291, 304, 308, 309, 310, 311, 312, 314, 316], "70": [7, 8], "7001": 195, "704": [29, 63, 91], "706": [41, 91], "70710678": [14, 282], "7132": 91, "7141": 91, "7147": 198, "7182818": 275, "72": [44, 47, 48], "726791": 91, "7311": [109, 174, 175], "739": [35, 91], "74": 250, "75": [125, 192, 197, 221], "7581": 107, "760": [81, 91], "76159416": [176, 288], "7616": [110, 177], "76219569": 273, "7635": 173, "770": 91, "772": 255, "778": [70, 91], "78": [59, 91], "78357324": 241, "78539816": 270, "791": [64, 91], "79172504": 239, "792": [61, 91], "797": [56, 91], "7x7": 89, "8": [17, 21, 25, 49, 52, 55, 61, 62, 63, 64, 65, 66, 69, 78, 79, 80, 92, 97, 98, 100, 111, 112, 113, 115, 120, 123, 125, 126, 136, 137, 138, 149, 150, 151, 155, 167, 168, 173, 174, 177, 179, 180, 181, 184, 185, 186, 187, 190, 192, 194, 197, 201, 202, 204, 205, 208, 209, 210, 212, 213, 215, 216, 224, 225, 226, 227, 228, 229, 237, 240, 247, 248, 249, 250, 254, 255, 257, 258, 274, 278, 286, 289, 290, 291, 308, 309, 310, 311, 312, 314, 316], "80": [5, 6, 7, 8, 47], "8005": 195, "808": [52, 91], "817": [32, 91], "818": 91, "8182": 183, "82": 123, "821": [69, 91], "83": [65, 91], "833": 91, "84": [38, 40, 41], "840": [24, 91], "8413": [103, 167], "847": [36, 91], "848": [69, 84, 91], "856": [26, 91], "85772238": 176, "8584": 173, "86": 91, "862": [88, 91], "863": [83, 91], "864": [54, 91], "868": [71, 91], "872": [46, 68, 91], "876": [160, 161, 164, 165, 243], "88": [48, 64, 75, 91], "8808": [109, 174, 175], "886": [58, 91], "887": 255, "891773": 239, "89442719": 14, "895": [79, 91], "896": [76, 91], "9": [0, 1, 3, 8, 21, 91, 112, 115, 123, 125, 136, 179, 180, 181, 186, 190, 192, 194, 201, 202, 204, 208, 212, 213, 215, 221, 222, 224, 225, 226, 227, 228, 229, 231, 237, 240, 243, 246, 250, 254, 255, 256, 258, 284, 285, 308, 309, 310, 311, 312, 314], "904": [66, 91], "90709145": 242, "9091": 183, "9120": 198, "9163": 198, "928": [28, 91], "93": [74, 91], "94": 50, "9486833": 20, "949e": [259, 260], "9526": 108, "9545": 167, "955": [73, 91], "958": [71, 91], "96": 48, "960": 47, "96366276": 239, "9640": 177, "96402758": 288, "973": [59, 91], "978": [26, 91], "984": [33, 75, 91], "99": 229, "9957": 198, "99734545": 242, "999": [0, 224, 225, 226, 227, 228], "A": [1, 3, 5, 6, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 34, 38, 42, 49, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 78, 79, 80, 82, 83, 84, 85, 86, 91, 94, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 123, 125, 126, 127, 131, 132, 134, 135, 147, 156, 183, 184, 185, 186, 187, 194, 195, 198, 200, 201, 202, 203, 204, 205, 206, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235, 237, 239, 240, 241, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 314], "As": 242, "Be": 0, "By": [0, 2, 3, 10, 50, 51, 52, 53, 54, 55, 56, 57, 95, 148, 218, 228, 234, 239, 240, 241, 243, 308, 318], "For": [2, 3, 4, 10, 12, 13, 14, 16, 17, 18, 19, 21, 100, 102, 103, 105, 106, 107, 108, 110, 123, 125, 147, 160, 161, 164, 165, 173, 179, 180, 181, 190, 192, 200, 201, 202, 203, 204, 205, 218, 220, 242, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 275, 276, 277, 278, 279, 282, 284, 286, 289, 290, 291, 298, 300, 302, 304, 305, 318], "If": [0, 1, 2, 5, 6, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 49, 92, 94, 96, 97, 98, 99, 102, 103, 105, 106, 107, 108, 110, 111, 112, 113, 120, 123, 125, 132, 134, 137, 138, 147, 148, 149, 150, 151, 152, 153, 154, 156, 160, 161, 179, 180, 181, 190, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 219, 224, 225, 229, 230, 236, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 312, 313, 315, 316], "In": [3, 10, 19, 111, 112, 113, 195, 198, 233, 234, 235, 307, 318], "It": [1, 2, 3, 7, 10, 19, 20, 21, 23, 26, 27, 28, 29, 30, 31, 32, 38, 39, 40, 41, 43, 44, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 70, 82, 88, 91, 94, 96, 97, 98, 99, 100, 120, 123, 147, 148, 149, 150, 151, 155, 167, 168, 171, 172, 177, 190, 191, 194, 195, 196, 197, 198, 208, 209, 210, 218, 219, 220, 221, 227, 229, 230, 231, 234, 242, 246, 247, 248, 251, 252, 253, 255, 256, 277, 279, 293, 295, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308], "Its": [21, 244], "Near": 19, "No": 115, "Not": 191, "One": [39, 318], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 123, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318], "There": 301, "These": [4, 10, 11, 14, 17, 20, 22, 58, 59, 78, 79, 80, 88, 91, 183, 184, 185, 186, 187, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 230, 237, 244, 318], "To": [3, 91, 220, 241, 244, 259, 260, 297, 318], "With": [3, 115, 308, 318], "_": [17, 96, 97, 99, 100, 102, 103, 105, 106, 107, 108, 110, 125, 147, 201, 202, 203, 204, 205, 211, 212, 213, 214, 215, 216, 221, 222, 224, 225, 226, 227, 229, 231, 248, 249, 250, 254, 289, 290, 309, 310, 311, 313, 314, 315], "_1": [14, 96, 97, 98, 99, 100, 123, 190, 254, 293, 295, 306], "_2": [14, 96, 97, 98, 99, 100, 123, 190, 254, 293, 295, 306], "__call__": [1, 94], "__getitem__": [0, 2, 3, 5, 6, 7, 8], "__init__": [0, 1, 2, 3, 10, 23, 30, 34, 38, 42, 43, 44, 82, 89, 92, 93, 94, 95, 96, 97, 98, 99, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 190, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 236, 245, 307, 308], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5, 6, 7, 8], "__repr__": 219, "__setattr__": 94, "_activ": 109, "_arraylik": [237, 258, 260, 263, 265], "_arraylikeint": 298, "_arrayorscalar": [93, 95, 237, 245, 292], "_base_activ": 38, "_base_dtyp": [257, 259, 262, 264], "_c": 310, "_decai": 227, "_fanmod": [160, 161], "_grad_en": [233, 235], "_i": [14, 18, 109, 123, 175, 197, 200, 206, 211, 214, 248, 249, 251, 252, 254, 255, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 300, 302, 305, 306], "_in": [160, 161, 164, 165], "_j": [109, 175, 211, 214, 254, 278, 286, 290, 291], "_k": 303, "_left": 147, "_make_lay": 82, "_modul": 94, "_n": [14, 96, 97, 98, 99, 100, 293, 295, 306], "_numpyarrai": 237, "_out": [160, 161, 164, 165, 300, 304], "_p": 18, "_pad": 298, "_paddingstr": [149, 150, 151, 152, 153, 154, 179, 180, 181], "_paramet": 94, "_reductiontyp": [126, 127, 128, 130, 131, 194, 195, 196, 197, 198], "_right": 147, "_scalar": [158, 162, 163, 164, 165, 237, 257, 271], "_seresnetbottleneck": [68, 69, 72], "_seresnetmodul": [70, 71], "_shapelik": [92, 135, 206, 237, 240, 262, 264, 301, 302, 305], "_size": [136, 137, 138], "_skresnetmodul": [78, 79, 80], "_slope": 170, "_statedict": 219, "_t": [228, 229], "_tensor": [93, 95, 258, 292], "_tensorop": 245, "_u": 19, "_v": 19, "_valu": [271, 298], "_width": 298, "a_i": [251, 252, 255], "aaai": 91, "ab": 266, "abc": [2, 219], "abil": [10, 91, 318], "about": [10, 92], "abov": [10, 233, 235, 242, 258, 261], "absolut": [17, 18, 128, 226, 267], "abstract": [2, 3, 218, 219, 220, 221, 229, 231], "abstractmethod": 219, "acceler": [91, 173, 200, 201, 202, 221, 227, 229, 231], "accept": [191, 239, 245], "access": [0, 2, 3, 4, 5, 6, 7, 8, 61, 62, 63, 64, 65, 66, 93, 95, 96, 97, 98, 99, 100, 301], "accord": [147, 179, 180, 181, 190, 192, 195, 198, 222, 223, 224, 225, 226, 227, 228, 290], "accordingli": 13, "account": [17, 19, 20, 176], "accumul": [221, 222, 223, 246, 247, 251, 252, 253, 256], "accur": 69, "accuraci": [42, 43, 44, 72, 91], "achiev": [60, 61, 62, 63, 64, 65, 66, 91, 111, 112, 113, 136, 208, 209, 210, 227, 313, 315], "across": [0, 5, 6, 45, 93, 97, 100, 135, 136, 137, 138, 164, 165, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 237, 239, 240, 241, 242, 243, 244, 259, 260, 278, 291], "act": 225, "activ": [10, 23, 38, 47, 48, 50, 54, 55, 67, 82, 89, 91, 96, 100, 102, 103, 105, 106, 107, 108, 109, 110, 116, 149, 150, 151, 155, 156, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 183, 184, 185, 186, 187, 194, 195, 198, 200, 201, 202, 206, 277, 279], "actual": [95, 194, 195, 197, 198, 245, 311], "ad": [25, 44, 49, 94, 96, 97, 98, 99, 100, 111, 112, 113, 123, 125, 126, 127, 132, 134, 135, 139, 140, 141, 143, 144, 145, 149, 150, 151, 179, 180, 181, 194, 195, 200, 201, 202, 203, 204, 205, 206, 211, 212, 213, 214, 215, 216, 222, 223, 224, 225, 226, 227, 228, 229, 236, 305, 318], "adadelta": 232, "adagrad": [222, 232], "adam": [91, 225, 226, 227, 228, 232], "adamax": 232, "adamw": 232, "adapt": [23, 30, 38, 68, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 89, 91, 136, 137, 138, 155, 156, 208, 209, 210, 222, 223, 224, 227, 228, 229, 230], "adaptive_avg_pool1d": [122, 142, 208], "adaptive_avg_pool2d": [122, 142, 209], "adaptive_avg_pool3d": [122, 142, 210], "adaptiveavgpool1d": [189, 217], "adaptiveavgpool2d": [23, 67, 82, 89, 189, 217], "adaptiveavgpool3d": [189, 217], "add": [4, 94, 96, 97, 100, 123, 125, 179, 180, 181, 190, 192, 206, 219, 221, 224, 229, 231, 234, 266, 298, 305], "add_modul": [94, 100], "add_param_group": 219, "addit": [4, 10, 17, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 88, 90, 94, 97, 100, 123, 125, 132, 134, 190, 192, 200, 201, 202, 203, 204, 205, 221, 227, 234, 244, 246, 303], "addition": 227, "address": [195, 198, 224, 225, 228], "adjust": [35, 42, 44, 45, 73, 74, 75, 76, 77, 81, 136, 137, 138, 156, 183, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 220, 224, 228, 229, 230, 295, 306], "advanc": [3, 19, 43, 54, 91, 97, 100, 111, 112, 113, 136, 137, 138, 208, 209, 210, 218, 221], "advantag": [36, 235], "affect": [233, 299, 302, 307], "affin": [149, 150, 151, 200, 201, 202, 203, 204, 205, 206, 314], "after": [17, 23, 47, 48, 89, 95, 96, 97, 98, 99, 100, 120, 155, 156, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 183, 184, 185, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 206, 211, 212, 213, 214, 215, 216, 225, 235, 245, 246, 247, 251, 252, 253, 255, 256, 298, 308], "afterward": 235, "aggreg": [91, 156, 254, 300, 304], "aim": [4, 10], "al": [31, 91], "alex": [5, 6, 91], "alexnet": [37, 89, 91], "algebra": [10, 11, 261], "algorithm": [7, 10, 17, 19, 20, 219, 220, 244], "align": [21, 147, 249, 250], "align_corn": 147, "all": [0, 3, 4, 10, 20, 91, 94, 96, 97, 98, 99, 100, 112, 113, 136, 137, 138, 140, 141, 144, 145, 147, 150, 151, 156, 170, 171, 181, 208, 209, 210, 212, 213, 216, 218, 219, 220, 221, 224, 229, 230, 231, 255, 277, 278, 279, 286, 289, 291, 293, 294, 295, 300, 302, 303, 304, 306, 309, 310, 318], "allevi": [91, 102], "alloc": [259, 260], "allow": [0, 1, 3, 4, 10, 19, 20, 36, 38, 47, 48, 49, 60, 73, 74, 75, 76, 77, 81, 91, 95, 96, 97, 98, 99, 100, 102, 105, 106, 109, 113, 115, 148, 156, 166, 167, 170, 173, 174, 175, 177, 179, 180, 181, 218, 222, 223, 234, 257, 262, 264, 265, 290, 292, 297, 307, 308, 318], "along": [109, 147, 156, 175, 249, 250, 254, 277, 278, 279, 286, 289, 291, 293, 295, 297, 300, 303, 304, 305, 306, 313, 315], "alongsid": 93, "alpha": [102, 105, 107, 116, 166, 173, 183, 221, 229], "alpha_dropout": [121, 122, 183], "alphadropout": [188, 189], "alphadropoutmodel": 183, "alreadi": 236, "also": [92, 102, 103, 105, 106, 107, 108, 110, 123, 125, 147, 227, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 264, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 287, 288, 293, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306], "alter": [100, 301], "altern": [1, 167, 222, 250], "alwai": [95, 299, 312, 313, 315], "among": [32, 156], "amount": [111, 112, 113, 139, 140, 141, 143, 144, 145, 152, 153, 154, 227], "amsgrad": [224, 225], "an": [0, 1, 3, 10, 14, 16, 17, 19, 20, 22, 24, 26, 27, 28, 29, 31, 32, 33, 35, 36, 38, 39, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 88, 89, 90, 91, 92, 94, 96, 97, 98, 99, 100, 103, 111, 112, 113, 115, 116, 117, 118, 119, 120, 123, 137, 138, 147, 148, 152, 153, 154, 156, 164, 165, 166, 172, 174, 179, 180, 181, 183, 184, 185, 186, 187, 190, 192, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 224, 227, 229, 235, 236, 237, 245, 250, 258, 261, 271, 278, 286, 291, 293, 300, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318], "analog": [300, 304], "analysi": [4, 155, 179, 180, 181, 205, 211, 213, 214, 216], "andreetto": 91, "andrew": 91, "angl": [148, 314], "ani": [0, 1, 2, 3, 17, 19, 24, 49, 77, 88, 90, 93, 94, 95, 96, 98, 99, 102, 103, 105, 106, 107, 108, 110, 116, 117, 123, 125, 132, 134, 174, 206, 218, 219, 233, 235, 236, 242, 245, 257, 258, 259, 261, 262, 263, 264, 265, 277, 279, 290, 292, 293, 294, 295, 298, 300, 303, 304, 305, 306, 307, 318], "anoth": [99, 256, 263, 265, 308, 318], "api": [4, 208, 209, 210, 318], "appear": 219, "append": [97, 99, 100], "appli": [2, 4, 5, 6, 7, 8, 10, 17, 23, 60, 77, 87, 89, 91, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 119, 120, 123, 125, 126, 127, 128, 130, 131, 149, 150, 151, 155, 156, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 183, 184, 185, 186, 187, 190, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 221, 222, 223, 225, 226, 227, 228, 250, 298, 300, 307, 310, 312, 313, 314, 315, 316, 318], "applic": [4, 19, 25, 35, 36, 42, 43, 44, 46, 47, 48, 91, 111, 134, 179, 180, 181, 190, 192, 244, 257, 264, 298, 316], "approach": [3, 34, 100, 225], "appropri": [19, 44, 47, 48, 91, 94, 98, 100, 179, 180, 181, 183, 184, 185, 195, 212, 213, 233, 235], "approx": 107, "approxim": [19, 103, 167, 168, 169, 212, 215], "ar": [1, 2, 3, 4, 10, 13, 14, 16, 17, 19, 20, 21, 22, 30, 31, 32, 91, 93, 94, 95, 96, 97, 98, 99, 100, 109, 111, 112, 113, 115, 123, 125, 137, 138, 147, 152, 153, 154, 155, 156, 160, 161, 163, 164, 165, 168, 175, 179, 180, 181, 183, 184, 185, 186, 187, 190, 192, 195, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 221, 224, 225, 227, 228, 229, 230, 231, 233, 235, 236, 237, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 267, 271, 275, 277, 278, 279, 280, 281, 286, 289, 290, 293, 297, 300, 301, 304, 307, 308, 309, 311, 312, 316, 318], "arang": 266, "arbitrari": [97, 191, 259, 260, 271, 276, 278, 282, 284, 286, 290, 291], "arcco": 266, "arch": 236, "architectur": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 42, 43, 44, 46, 47, 48, 49, 60, 61, 62, 63, 64, 65, 66, 67, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 96, 97, 98, 99, 100, 103, 155, 168, 169, 171, 176, 190, 191, 218, 236], "arcsin": 266, "arctan": 266, "area": 147, "arg": [94, 191, 236, 259], "argument": [3, 4, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 88, 90, 94, 100, 191, 239, 259, 290], "around": [14, 148, 177], "arr": [237, 293, 295, 303, 306], "arrai": [10, 93, 95, 234, 237, 245, 250, 258, 263, 265, 292, 299, 300, 308, 318], "art": 91, "artifici": 91, "arxiv": 91, "asarrai": 237, "asgd": 232, "aspect": 316, "assign": [94, 96, 98, 100, 147, 195, 198], "assist": [30, 31, 32], "associ": [98, 99], "assum": [0, 1, 219, 220, 233], "attempt": [96, 100], "attent": [77, 99, 123, 155], "attribut": 94, "audio": 179, "augment": [3, 4, 70, 148, 244, 300, 304, 307, 311, 312, 313, 314, 315, 318], "autodiff": 10, "autograd": 218, "automat": [4, 10, 95, 96, 97, 98, 99, 218, 239, 240, 241, 243, 245, 259, 260, 265, 297, 308], "auxiliari": [30, 31, 32, 93], "avail": [4, 5, 6, 7, 8, 10], "averag": [23, 39, 40, 41, 49, 60, 67, 77, 82, 89, 93, 136, 137, 138, 139, 140, 141, 147, 155, 156, 197, 208, 209, 210, 211, 212, 213, 221, 222, 224, 229, 278], "avg_down": 49, "avg_pool": [211, 212, 213], "avg_pool1d": [122, 142], "avg_pool2d": [122, 142], "avg_pool3d": [122, 142], "avgpool": [23, 67, 82, 89, 156], "avgpool1d": [189, 217], "avgpool1dmodel": 211, "avgpool2d": [189, 217], "avgpool2dmodel": 212, "avgpool3d": [189, 217], "avgpool3dmodel": 213, "avoid": [2, 3, 19, 98, 235], "ax": [11, 234, 277, 278, 279, 286, 290, 291, 300, 302, 304], "axi": [109, 175, 249, 250, 277, 278, 279, 286, 291, 293, 295, 297, 298, 300, 302, 303, 304, 305, 306, 313, 315], "b": [11, 21, 91, 123, 125, 163, 179, 180, 181, 190, 192, 234, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 293, 295, 303, 306, 312], "b_i": [251, 252, 255], "back": [147, 212, 213, 236, 249, 254, 300, 304], "backbon": [78, 79, 80], "backpropag": [10, 13, 14, 16, 17, 19, 20, 22, 91, 93, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 123, 125, 147, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 211, 212, 213, 214, 215, 216, 218, 235, 241, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 275, 277, 279, 292, 298, 300, 304, 308], "backward": [10, 93, 95, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 245, 308], "balanc": [44, 61, 62, 63, 64, 65, 66, 196], "bar": 221, "base": [3, 11, 16, 17, 20, 21, 25, 30, 31, 32, 33, 34, 35, 36, 38, 60, 61, 62, 63, 64, 65, 66, 77, 82, 87, 91, 94, 96, 97, 98, 99, 115, 123, 136, 137, 138, 156, 183, 195, 196, 208, 209, 210, 218, 219, 220, 221, 225, 229, 230, 231, 246, 247, 251, 252, 253, 255, 256, 265, 275, 276, 277, 279, 290, 297, 298, 311, 312, 313, 314, 315], "base_width": [58, 59, 60, 77], "basic": [10, 23, 49, 61, 62, 63, 64, 65, 66, 78, 79, 80, 87, 89, 92, 111, 112, 113, 136, 137, 138, 149, 150, 151, 152, 153, 154, 155, 160, 161, 164, 165, 208, 209, 210, 309, 310, 311, 312, 313, 314, 315, 316], "basicblock": [49, 53, 56], "batch": [1, 2, 3, 11, 17, 20, 22, 31, 32, 33, 35, 36, 67, 73, 74, 75, 76, 81, 111, 112, 113, 115, 118, 119, 120, 123, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 179, 180, 181, 190, 192, 194, 195, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 214, 215, 216, 228, 250, 309, 310, 311, 312, 314, 316], "batch_norm": [122, 133, 200, 201, 202], "batch_norm1": 100, "batch_norm2": 100, "batch_siz": [1, 2, 3, 87, 156], "batchnorm": [149, 150, 151], "batchnorm1d": [149, 189, 207], "batchnorm1dmodel": 200, "batchnorm2d": [100, 150, 189, 207], "batchnorm2dmodel": 201, "batchnorm3d": [151, 189, 207], "batchnorm3dmodel": 202, "bceloss": [189, 199], "becaus": [2, 240], "becom": [18, 94, 222, 230], "been": 176, "befor": [17, 67, 92, 95, 221, 227, 235, 242, 298, 310, 318], "begin": [1, 18, 102, 105, 106, 107, 166, 168, 169, 170, 171, 173, 196, 197, 198, 211, 212, 213, 214, 215, 216, 228, 230, 234, 244, 251, 252, 254, 267, 271, 277, 279, 281, 298], "behav": [196, 289], "behavior": [91, 97, 100, 233, 244, 250, 260, 318], "being": [99, 148, 183, 184, 185, 186, 187, 228, 233, 235, 293, 295, 306], "belong": 0, "below": [20, 31, 32, 33, 35, 36, 38, 39, 40, 41, 250, 258, 261], "benchmark": [5, 6, 7, 8], "benefici": 100, "benefit": [102, 218, 227, 237], "bernoulli": [183, 184, 185, 186, 187], "best": [160, 161, 164, 165], "beta": [200, 201, 202, 203, 204, 205, 206, 224, 225, 226, 227, 228], "beta1": [224, 225, 226, 227, 228], "beta2": [224, 225, 226, 227, 228], "beta_1": [224, 225, 226, 227, 228], "beta_2": [224, 225, 226, 227, 228], "better": [16, 89, 91, 103, 160, 161, 164, 165, 176, 203, 204, 205, 218, 225, 227, 229, 310], "between": [61, 62, 63, 64, 65, 66, 91, 94, 111, 112, 113, 115, 123, 128, 149, 150, 151, 152, 153, 154, 156, 172, 179, 180, 181, 183, 184, 185, 186, 187, 190, 194, 195, 196, 197, 198, 221, 229, 230, 231, 244, 246, 247, 250, 253, 256, 257, 291, 312, 313, 315, 316], "beyond": [10, 97], "bia": [111, 112, 113, 123, 125, 132, 134, 135, 149, 150, 151, 152, 153, 154, 179, 180, 181, 190, 192, 200, 201, 202, 203, 204, 205, 206, 224, 225, 226, 227, 228], "bias": [179, 180, 181, 192, 206, 218], "bias1": 98, "bias2": 98, "big": [152, 153, 154], "bilinear": [122, 124, 147, 189, 193], "bilinearmodel": 190, "binari": [108, 126, 174, 183, 184, 185, 186, 187, 194], "binary_cross_entropi": [122, 129], "block": [25, 26, 27, 28, 29, 34, 43, 44, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 94, 115, 149, 150, 151, 156, 179, 180, 181, 235], "block1": [92, 218], "block2": [92, 218], "block_arg": [49, 67], "block_config": 25, "blue": 312, "bmatrix": 254, "bn": [149, 150, 151], "bn_affin": [149, 150, 151], "bool": [1, 5, 6, 7, 8, 22, 30, 31, 32, 49, 92, 94, 95, 116, 117, 118, 119, 120, 132, 134, 147, 149, 150, 151, 152, 153, 154, 179, 180, 181, 190, 192, 200, 201, 202, 203, 204, 205, 206, 224, 225, 229, 233, 239, 240, 241, 243, 245, 257, 258, 259, 260, 261, 262, 263, 264, 265, 277, 278, 279, 286, 291, 292, 308], "both": [111, 125, 137, 139, 143, 149, 167, 176, 179, 180, 209, 211, 212, 214, 215, 248, 249, 250, 254, 258, 297, 316], "bottleneck": [25, 43, 44, 46, 49, 50, 51, 52, 54, 55, 57, 58, 59, 60, 91, 155], "bottleneck_cfg": 44, "bottom": 147, "bound": [161, 163, 165, 230, 243], "box": 4, "branch": [30, 31, 32, 91, 156], "break": 218, "brief": 318, "bright": 318, "broadcast": [186, 187, 278, 286, 291, 301, 305], "buffer": [221, 227, 229, 231], "build": [10, 36, 44, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 77, 78, 79, 80, 91, 94, 97, 100, 218, 318], "built": [3, 10, 50, 54, 55, 100, 218], "burg": 8, "c": [5, 6, 8, 49, 61, 62, 63, 64, 65, 66, 78, 79, 80, 91, 115, 118, 119, 120, 127, 131, 132, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 155, 186, 187, 195, 198, 200, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 234, 295, 306, 310], "c_": [179, 180, 181], "c_in": [111, 112, 113, 149, 150, 151], "c_out": [111, 112, 113], "calcul": [0, 1, 10, 11, 95, 222, 223, 226, 227, 228, 235, 240, 245], "calculu": [12, 19], "call": [1, 94, 233, 236, 246, 247, 250, 251, 252, 253, 255, 256], "callabl": [219, 236, 307], "can": [0, 2, 3, 4, 10, 12, 14, 16, 17, 19, 20, 22, 44, 49, 58, 59, 73, 74, 75, 76, 87, 88, 91, 92, 93, 95, 96, 97, 98, 99, 100, 105, 111, 112, 113, 148, 156, 167, 170, 172, 177, 179, 180, 181, 203, 204, 205, 212, 213, 214, 215, 216, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 237, 243, 244, 245, 250, 259, 260, 261, 262, 264, 265, 278, 286, 291, 295, 297, 298, 300, 301, 304, 305, 306, 307, 308, 311, 313, 314, 315, 318], "cannot": [13, 14, 16, 17, 20, 21, 22], "cap": 172, "capabl": [10, 257, 258, 261, 262, 263, 264, 265], "capac": [42, 58, 59, 60, 61, 62, 63, 64, 65, 66, 73, 74, 75, 76, 81, 91], "captur": [77, 91, 115, 179, 180, 181, 190], "cardin": [60, 61, 62, 63, 64, 65, 66, 77, 91], "care": 235, "cartesian": 297, "case": [3, 18, 38, 44, 45, 102, 105, 106, 107, 166, 168, 169, 170, 171, 173, 196, 197, 198, 211, 212, 213, 214, 215, 216, 218, 223, 228, 230, 234, 251, 252, 267, 271, 277, 279, 281, 298, 318], "categori": [7, 50, 51, 52, 53, 54, 55, 56, 57], "caus": [3, 19, 221, 229, 231], "cautiou": 0, "cdot": [12, 13, 16, 17, 18, 21, 102, 103, 105, 107, 108, 111, 112, 113, 123, 125, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 155, 164, 165, 167, 168, 169, 174, 176, 183, 190, 192, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 206, 222, 223, 224, 225, 226, 227, 228, 230, 248, 249, 250, 253, 255], "center": [148, 177, 229, 309, 318], "centercrop": [317, 318], "central": 237, "certain": [13, 103, 123, 176, 190, 224, 225, 233, 277, 279], "cfg": [47, 48], "chain": [16, 17, 100, 307, 318], "challeng": [7, 91], "cham": 91, "chanc": [312, 313, 315], "chang": [128, 196, 230, 234, 235, 236, 299, 301, 305, 312, 318], "channel": [25, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 60, 61, 62, 63, 64, 65, 66, 71, 73, 74, 75, 76, 81, 82, 87, 91, 111, 112, 113, 115, 118, 119, 120, 132, 134, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 179, 180, 181, 186, 187, 200, 201, 202, 203, 204, 205, 208, 211, 212, 213, 214, 215, 216, 310, 312, 316], "character": [58, 59], "check": [233, 309, 311], "checkpoint": 220, "chen": 91, "choic": 297, "choleski": 15, "chollet": 91, "choos": 91, "chosen": 183, "christian": 91, "christoph": 8, "chu": 91, "cifar": [5, 6], "cifar10": 9, "cifar100": 9, "cifar100_train": 6, "cifar10_train": 5, "clariti": 237, "class": [3, 4, 10, 24, 26, 27, 28, 29, 31, 32, 33, 35, 36, 39, 40, 41, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 88, 90, 92, 109, 127, 131, 218, 220, 236, 258, 261, 292, 318], "classic": 41, "classif": [4, 5, 6, 7, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 108, 109, 126, 127, 131, 174, 175, 194, 195, 198], "classifi": [23, 30, 31, 32, 38, 39, 40, 41, 49, 60, 77, 82, 87, 89], "cleaner": [1, 235, 250], "clear": [95, 245, 259, 260], "clearli": 237, "clf_in_featur": 38, "clf_layer": 38, "clip": [148, 168, 172, 230, 266], "clockwis": 148, "close": [16, 19, 173, 194, 229], "closer": 166, "closur": [219, 220], "cloth": 7, "cnn": 91, "co": [266, 282], "code": [17, 96, 98, 100, 233, 235, 237, 244], "coeffici": [21, 147, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "col": 115, "collect": [4, 11, 91, 96, 97, 99, 100, 220], "color": [312, 318], "colorjitt": 318, "column": [13, 14, 16, 20, 21, 22, 92, 115, 261, 295, 297], "com": [7, 8], "combin": [1, 3, 33, 34, 35, 81, 91, 97, 100, 102, 103, 149, 150, 151, 155, 156, 167, 195, 218, 227, 228, 278, 286, 291, 293, 318], "combined_dataset": [0, 1], "common": [115, 148, 220, 318], "commonli": [10, 42, 43, 44, 45, 46, 47, 48, 103, 108, 109, 110, 111, 113, 123, 130, 132, 134, 148, 155, 164, 165, 168, 169, 172, 175, 181, 194, 197, 198, 211, 212, 213, 214, 215, 216, 234, 237, 262, 302, 308, 309, 310, 311, 313, 314, 315, 318], "compar": [58, 59, 89, 244, 303], "compat": [4, 11, 77, 191, 206, 218, 234, 244, 308, 318], "complex": [2, 3, 10, 14, 36, 49, 52, 55, 56, 69, 71, 92, 96, 97, 100, 106, 171, 214, 216, 218, 220, 318], "compon": [19, 30, 31, 32, 33, 34, 35, 36, 94, 97, 220, 245, 318], "compos": [5, 6, 7, 8, 87, 179, 180, 181, 211, 212, 213, 214, 215, 216, 218, 318], "comprehens": 3, "compris": [58, 59], "comput": [10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 42, 44, 47, 48, 49, 60, 61, 62, 63, 64, 65, 66, 67, 73, 74, 75, 76, 81, 91, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 115, 123, 125, 126, 127, 128, 130, 131, 132, 134, 136, 137, 138, 147, 149, 150, 151, 152, 153, 154, 155, 156, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 229, 233, 234, 235, 237, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 297, 298, 300, 304, 308, 318], "computation": [3, 19, 50, 168, 169], "compute_loss": [220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "concaten": [0, 111, 112, 113, 295, 296, 303, 306], "concept": [10, 19, 43, 91], "condit": [12, 13, 16], "confer": 91, "config": 82, "configur": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 44, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 88, 90, 99, 149, 150, 151], "conjunct": [115, 198], "connect": [23, 25, 26, 27, 28, 29, 33, 34, 35, 36, 38, 39, 40, 41, 49, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 78, 79, 80, 82, 87, 89, 91, 125, 155, 156, 179, 180, 181, 192], "consecut": 82, "consid": [3, 16, 19, 25, 100, 160, 161, 164, 165, 218, 230, 233, 259, 260, 318], "consider": 19, "consist": [2, 4, 7, 23, 39, 40, 41, 49, 93, 136, 137, 138, 156, 208, 209, 210, 237, 242, 244, 298, 309, 316, 318], "consistent_tensor": 244, "consol": 92, "constant": [126, 127, 132, 134, 135, 159, 173, 194, 195, 200, 201, 202, 203, 204, 205, 206, 222, 223, 224, 225, 226, 227, 228, 229, 237, 298], "constant_pad": 298, "constraint": [1, 42, 44, 156], "construct": [10, 26, 27, 28, 29, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 78, 79, 80, 83, 84, 85, 86, 97, 218, 258, 300, 304], "constructor": [26, 27, 28, 29, 45, 46, 47, 48, 58, 59, 73, 74, 75, 76, 81, 83, 84, 85, 86], "contain": [1, 5, 6, 7, 8, 13, 14, 19, 20, 21, 22, 34, 38, 49, 60, 61, 62, 63, 64, 65, 66, 67, 77, 82, 92, 94, 96, 97, 98, 99, 100, 109, 115, 123, 125, 126, 127, 131, 147, 194, 195, 198, 219, 246, 247, 248, 249, 251, 252, 253, 254, 256, 257, 260, 267, 268, 269, 270, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 294, 297], "content": 148, "context": [233, 235], "contextmanag": 235, "contigu": 299, "continu": [170, 241], "contrast": [203, 204, 205, 318], "contribut": [147, 183, 184, 185, 186, 187, 211, 214, 215, 216, 221, 227, 289], "control": [60, 156, 166, 196, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 244, 308, 318], "conv": [34, 67, 149, 150, 151, 201, 202], "conv1": [39, 40, 41, 100, 179, 180, 181, 211, 212, 213, 214, 215, 216], "conv1d": [114, 122, 149, 152, 182, 189, 211, 214], "conv1dmodel": 179, "conv2": [39, 40, 41, 100, 179, 180, 181], "conv2d": [97, 100, 114, 122, 150, 153, 182, 189, 201, 212, 215, 218], "conv2dmodel": 180, "conv3d": [114, 122, 151, 154, 182, 189, 202, 213, 216], "conv3dmodel": 181, "conv_bia": [149, 150, 151], "conv_config": 82, "conv_lay": [38, 97], "convblock": 218, "convbnrelu1d": 157, "convbnrelu2d": 157, "convbnrelu3d": 157, "conveni": [4, 24, 90], "convent": 250, "converg": [19, 177, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 310], "convers": [195, 198, 312, 318], "convert": [5, 6, 7, 8, 82, 93, 95, 109, 175, 245, 297, 307, 308, 312, 318], "convnetwork": 97, "convolut": [23, 24, 25, 31, 32, 34, 38, 39, 40, 41, 42, 44, 47, 48, 49, 60, 61, 62, 63, 64, 65, 66, 67, 73, 74, 75, 76, 77, 81, 82, 87, 89, 90, 91, 97, 111, 112, 113, 115, 149, 150, 151, 152, 153, 154, 155, 156, 179, 180, 181, 212, 213, 215, 216, 298], "convolv": [111, 112, 113, 179, 180, 181], "coordin": 297, "core": [0, 1, 2, 3, 94, 218, 219, 245, 318], "corinna": 8, "corner": [147, 309, 311], "correct": [96, 195, 198, 224, 225, 226, 227, 228, 308], "correctli": [19, 94, 96, 97, 98, 99, 100, 195, 198, 244], "correspond": [0, 1, 2, 5, 6, 7, 8, 14, 45, 47, 48, 58, 59, 78, 79, 80, 96, 98, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 123, 125, 147, 168, 171, 175, 190, 192, 200, 201, 202, 203, 204, 205, 212, 213, 221, 229, 231, 248, 249, 251, 252, 255, 275, 276, 282, 284, 295, 298, 300, 304, 306], "cort": 8, "cosh": [266, 283, 288], "cosin": [268, 272, 273, 282], "cost": [42, 44, 60, 91, 152, 153, 154], "could": 94, "count": [91, 92, 293], "counterclockwis": [148, 314], "cover": [11, 111, 112, 113], "coverag": [136, 137, 138], "creat": [2, 3, 10, 23, 24, 26, 27, 28, 29, 31, 32, 33, 35, 36, 39, 40, 41, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 97, 100, 156, 172, 218, 234, 236, 244, 257, 261, 262, 263, 264, 265, 297, 303, 307, 318], "creation": [97, 100, 318], "criterion": [194, 195, 196, 197, 198], "critic": [19, 220, 244], "crop": [309, 311, 318], "cross": [126, 127, 194, 195], "cross_entropi": [122, 129], "crossentropyloss": [189, 199], "cube": 266, "cumul": [103, 167], "current": [94, 221, 224, 230, 233], "custom": [4, 10, 23, 24, 25, 35, 36, 38, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 69, 70, 71, 72, 73, 74, 75, 76, 81, 82, 88, 89, 90, 93, 96, 97, 98, 99, 100, 148, 149, 150, 151, 166, 170, 218, 244, 261], "custom_config": 82, "custom_lenet": 38, "customiz": 318, "custommodul": 93, "customnetwork": 96, "customparametermodel": [98, 99], "cvpr": 91, "d": [91, 113, 120, 138, 141, 145, 151, 202, 205, 206, 210, 213, 216, 234, 258, 314], "d_": [113, 138, 141, 145, 181, 210, 213, 216], "d_1": 206, "d_2": 206, "d_n": 206, "d_out": [113, 141, 145], "dampen": [221, 229, 231], "data": [4, 5, 6, 7, 8, 10, 17, 93, 95, 99, 110, 111, 113, 115, 119, 120, 125, 148, 149, 150, 151, 156, 171, 177, 179, 180, 181, 192, 205, 211, 213, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 237, 244, 245, 246, 247, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 292, 298, 299, 300, 301, 302, 304, 307, 308, 311, 312, 313, 314, 315, 318], "databas": 8, "dataload": [2, 3], "dataset": [3, 5, 6, 7, 8, 39, 40, 41, 42, 49, 50, 51, 52, 53, 54, 55, 56, 57, 148, 223, 235, 307, 309, 318], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 254, "debug": [92, 100, 233, 242, 318], "decai": [221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "decompos": [12, 20, 22], "decomposit": [11, 12, 16, 19, 20, 22], "decor": [61, 62, 63, 64, 65, 66, 236], "decoupl": [91, 222, 223, 225, 226, 227, 228], "decreas": [224, 225, 230], "deep": [1, 3, 4, 10, 34, 49, 50, 51, 52, 54, 55, 61, 62, 63, 64, 65, 66, 68, 69, 72, 91, 132, 167, 173, 218, 244, 307, 308, 318], "deeper": [10, 31, 33, 36, 49, 56, 91, 173], "def": [0, 1, 2, 3, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 123, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 190, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308], "default": [1, 5, 6, 7, 8, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 102, 105, 109, 111, 112, 113, 116, 117, 118, 119, 120, 126, 127, 128, 130, 131, 132, 134, 135, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 160, 161, 162, 163, 164, 165, 166, 170, 175, 179, 180, 181, 183, 184, 185, 186, 187, 190, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 211, 212, 213, 214, 215, 216, 219, 220, 227, 233, 239, 240, 241, 243, 245, 257, 258, 259, 260, 261, 262, 263, 264, 265, 277, 278, 279, 286, 290, 291, 292, 293, 295, 297, 298, 300, 303, 306, 308, 312, 313, 315], "defin": [1, 3, 4, 10, 25, 30, 31, 32, 33, 34, 35, 36, 38, 44, 49, 67, 78, 79, 80, 82, 96, 97, 98, 99, 100, 167, 169, 172, 176, 194, 195, 196, 197, 198, 211, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 237, 240, 241, 255, 260, 271, 290, 307, 318], "definit": [10, 12, 149, 150, 151, 318], "degre": [148, 314, 318], "delai": 221, "delta": [109, 128, 175, 196, 222], "delta_": [109, 175], "demonstr": [10, 11, 73, 74, 75, 76, 81, 91, 218, 237], "denomin": [132, 134, 135, 149, 150, 151, 200, 201, 202, 203, 204, 205, 206, 222, 223, 224, 225, 226, 227, 228, 229, 247], "denot": [17, 174, 179, 180, 181, 183, 184, 185, 186, 187, 290], "dens": [10, 25, 26, 27, 28, 29, 91, 223], "dense1": 10, "dense2": 10, "densenet": [26, 27, 28, 29, 37, 91, 155], "densenet_121": 91, "densenet_169": 91, "densenet_201": 91, "densenet_264": 91, "densiti": [103, 167], "depend": [10, 17, 18, 44, 99, 126, 127, 128, 130, 131, 147, 179, 248, 258, 277, 279, 300, 304, 311, 312, 316], "depth": [97, 113, 120, 138, 141, 145, 181, 202, 205, 210, 213, 216], "depthseparableconv1d": 157, "depthseparableconv2d": 157, "depthseparableconv3d": 157, "depthwis": [42, 87, 91, 111, 112, 113, 152, 153, 154], "depthwise_separ": [152, 153, 154], "der": 91, "deriv": [19, 20, 109, 136, 137, 138, 167, 175, 177, 179, 180, 181, 190, 192, 236], "descend": 22, "descent": [10, 221, 231], "describ": [13, 14], "descript": 318, "deseri": 93, "design": [3, 4, 10, 11, 23, 24, 31, 32, 33, 39, 40, 41, 44, 50, 51, 52, 53, 54, 55, 56, 57, 68, 71, 87, 90, 91, 95, 97, 98, 99, 100, 102, 107, 173, 183, 218, 237, 318], "desir": [88, 93, 136, 137, 138, 208, 209, 210, 290, 292], "destin": 94, "det": [11, 15], "det_a": 13, "detail": [10, 92, 220, 244, 250], "detect": 91, "determin": [0, 10, 11, 12, 13, 38, 58, 59, 136, 137, 138, 160, 161, 164, 165, 179, 180, 181, 208, 209, 210, 212, 213, 215, 216, 229, 233, 239, 240, 241, 243, 259, 260, 309, 311], "determinist": 148, "develop": [10, 218, 244, 318], "deviat": [160, 162, 164, 307, 310, 318], "devic": [43, 44], "diag": [19, 266], "diagon": [19, 20, 22, 258, 261, 289], "diagonaliz": 14, "dict": [24, 26, 27, 28, 29, 31, 32, 33, 35, 36, 38, 45, 46, 47, 48, 49, 58, 59, 61, 62, 63, 64, 65, 66, 67, 73, 74, 75, 76, 78, 79, 80, 81, 88, 90, 94, 96, 98, 191, 219], "dictionari": [38, 94, 95, 96, 98, 100, 219], "differ": [0, 17, 30, 38, 44, 73, 74, 75, 76, 81, 97, 100, 109, 123, 147, 156, 175, 190, 197, 220, 234, 242, 244, 256, 265, 291, 302, 318], "differenti": [10, 12, 21, 167, 218, 239, 240, 241, 243, 245, 257, 259, 260, 262, 264], "digit": [7, 8, 41, 91], "dilat": [111, 112, 113, 149, 150, 151, 152, 153, 154, 179, 180, 181], "dilation_height": 115, "dilation_width": 115, "dim": [195, 198], "dimens": [13, 14, 16, 17, 20, 21, 22, 23, 49, 60, 77, 82, 89, 91, 95, 109, 123, 125, 132, 134, 135, 137, 138, 147, 155, 156, 175, 179, 180, 181, 200, 201, 202, 203, 204, 205, 206, 209, 210, 212, 213, 214, 215, 216, 234, 237, 239, 243, 245, 249, 259, 277, 278, 279, 286, 289, 290, 291, 293, 295, 298, 300, 302, 303, 304, 305, 306, 309, 311, 316], "dimension": [17, 19, 20, 22, 111, 112, 113, 139, 140, 141, 143, 144, 145, 156, 179, 180, 181, 185, 186, 187, 200, 201, 202, 203, 204, 205, 211, 212, 213, 214, 215, 216, 234, 249, 250, 254, 258, 275, 278, 286, 289, 291, 294, 299, 300, 302, 304], "diminish": 223, "direct": [14, 194, 195, 196, 197, 198, 221, 229, 230, 231], "directli": [91, 96, 97, 98, 99, 147, 222, 223, 225, 226, 227, 228, 242, 244, 292, 318], "directori": [3, 4, 5, 6, 7, 8], "disabl": [233, 235], "discontinu": 281, "discrep": [194, 195, 198], "discret": [240, 244], "disk": 3, "displai": [24, 90, 92], "distribut": [103, 109, 147, 160, 161, 162, 163, 164, 165, 167, 175, 179, 180, 181, 183, 184, 185, 186, 187, 190, 192, 195, 198, 211, 212, 213, 239, 240, 241, 243, 244, 278, 286, 289, 291, 303, 310, 312, 313, 314, 315], "div": 266, "divers": [148, 313, 315, 318], "diversifi": 318, "divid": [1, 19, 97, 100, 109, 111, 112, 113, 175, 194, 195, 196, 197, 198, 247, 310], "divis": [10, 19, 111, 112, 113, 183, 184, 185, 186, 187, 222, 223, 224, 225, 226, 227, 228, 229, 247], "do": [19, 21, 93, 96, 97, 98, 99, 116, 117, 118, 119, 218, 228, 233, 265, 289, 298], "document": [4, 10, 91, 220, 237, 244], "doe": [10, 17, 18, 19, 20, 22, 92, 93, 96, 97, 98, 99, 100, 165, 224, 225, 230, 233, 235, 239, 240, 241, 242, 243, 257, 258, 259, 260, 261, 262, 263, 264, 265, 301], "doesn": 235, "doi": 91, "domain": 4, "don": 235, "dot": [14, 17, 96, 97, 98, 99, 100, 206, 214, 215, 216, 249, 254, 266, 293, 295, 303, 306], "down": [3, 218, 316], "download": [4, 5, 6, 7, 8], "drawback": 102, "drawn": [239, 240, 241, 243, 244, 314], "drop": [183, 184, 185, 186, 187], "dropout": [23, 32, 82, 89, 91, 103, 116, 118, 119, 120, 183, 185, 186, 187], "dropout1d": [121, 122, 188, 189], "dropout1dmodel": 185, "dropout2d": [121, 122, 188, 189], "dropout3d": [121, 122, 188, 189], "dropout_prob": 32, "dropoutmodel": 184, "dtype": [93, 95, 245, 257, 258, 259, 260, 261, 262, 263, 264, 265, 292, 308], "due": [17, 19, 25, 111, 112, 171, 314], "dummi": 92, "duplic": [96, 98], "dure": [3, 10, 13, 14, 16, 19, 20, 22, 30, 31, 32, 49, 91, 93, 94, 95, 96, 97, 98, 99, 100, 109, 116, 117, 118, 119, 120, 132, 134, 148, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 211, 212, 213, 214, 215, 216, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 235, 245, 246, 277, 278, 279, 286, 291, 308, 311, 314, 318], "dy": [105, 170], "dynam": [0, 2, 3, 77, 81, 91, 94, 97, 98, 99, 100, 136, 137, 138, 156, 206, 208, 209, 210, 223, 228, 233], "dynamicnetwork": 97, "e": [0, 13, 14, 16, 17, 20, 22, 31, 32, 33, 35, 36, 38, 39, 40, 41, 82, 93, 109, 156, 174, 175, 176, 183, 195, 219, 222, 229, 230, 261, 273, 275, 276, 283, 288, 289, 293, 312], "each": [1, 2, 3, 4, 14, 17, 19, 20, 22, 23, 25, 38, 42, 44, 45, 47, 48, 49, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 78, 79, 80, 82, 89, 91, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 123, 125, 132, 134, 136, 137, 138, 155, 156, 168, 171, 175, 179, 180, 181, 183, 184, 185, 186, 187, 190, 192, 194, 195, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 222, 223, 224, 225, 226, 227, 228, 229, 230, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 293, 295, 297, 298, 300, 303, 304, 306, 307, 308, 309, 310, 311, 312, 314, 316, 318], "earli": 228, "eas": [4, 10], "easi": [2, 3, 4, 10, 61, 62, 63, 64, 65, 66, 95, 96, 98], "easier": [3, 96, 97, 100], "easili": [4, 95, 99, 318], "eccv": 91, "economi": 22, "edg": [44, 298], "edu": [5, 6], "educ": [10, 91], "effect": [91, 96, 97, 98, 99, 100, 109, 111, 112, 113, 115, 166, 167, 171, 174, 175, 177, 200, 201, 202, 203, 204, 205, 206, 233, 234, 235, 295, 306], "effici": [1, 2, 3, 5, 6, 7, 8, 10, 11, 16, 21, 35, 36, 43, 44, 46, 47, 48, 60, 61, 62, 63, 64, 65, 66, 73, 74, 75, 76, 81, 87, 91, 115, 152, 153, 154, 168, 169, 172, 195, 218, 235], "eig": 15, "eigenvalu": [14, 20], "eigenvector": 14, "eigval": 14, "eigvec": 14, "either": [125, 237, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 292, 297], "element": [0, 19, 20, 32, 95, 99, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 149, 150, 151, 152, 153, 154, 155, 168, 169, 171, 175, 176, 179, 180, 181, 183, 184, 185, 186, 187, 194, 195, 196, 197, 198, 206, 211, 212, 213, 214, 215, 216, 234, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 291, 294, 297, 298, 300, 301, 302, 304], "elementwise_affin": 206, "elsewher": [214, 215, 216, 261], "elu": [104, 122, 178, 189], "elumodel": 166, "embed": [42, 43, 44, 46, 47, 48], "empti": [94, 100, 266], "empty_lik": 266, "enabl": [0, 1, 2, 3, 10, 17, 22, 35, 77, 78, 79, 80, 91, 94, 95, 96, 97, 98, 99, 171, 179, 180, 181, 190, 192, 218, 220, 233, 235, 239, 240, 241, 243, 245, 307], "encapsul": [218, 245], "encod": [195, 198], "encourag": [184, 185, 186, 187, 194, 195, 198, 224], "end": [18, 102, 105, 106, 107, 166, 168, 169, 170, 171, 173, 196, 197, 198, 211, 212, 213, 214, 215, 216, 228, 230, 251, 252, 254, 257, 267, 271, 277, 279, 281, 293, 298, 318], "enforc": [94, 96, 98], "engin": 19, "enhanc": [32, 33, 35, 36, 40, 43, 58, 59, 73, 74, 75, 76, 81, 89, 90, 91, 96, 98, 156, 172, 318], "ensur": [3, 5, 6, 7, 8, 19, 20, 21, 93, 94, 95, 96, 97, 98, 99, 100, 109, 136, 137, 138, 149, 150, 151, 170, 175, 183, 184, 185, 186, 187, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 221, 222, 224, 225, 227, 228, 229, 230, 231, 233, 234, 235, 237, 239, 240, 241, 242, 243, 244, 255, 278, 286, 291, 298, 308, 309, 310, 311, 312, 316, 318], "enter": 235, "entir": [3, 118, 119, 120, 186, 187, 244], "entri": [38, 47, 48, 302], "entropi": [126, 127, 194, 195], "environ": [10, 47, 48], "ep": [126, 127, 132, 134, 135, 149, 150, 151, 194, 195, 200, 201, 202, 203, 204, 205, 206, 222, 223, 224, 225, 226, 227, 228, 229], "epoch": [1, 3], "epsilon": [194, 195, 200, 201, 202, 203, 204, 205, 206, 222, 223, 224, 225, 226, 227, 228, 229], "equal": [17, 147, 211, 212, 213, 309, 311], "equat": [14, 19, 21], "equival": [250, 289, 299], "error": [0, 3, 14, 16, 94, 97, 98, 99, 100, 103, 128, 130, 167, 194, 195, 196, 197, 218, 219, 235, 237], "especi": [3, 96, 98, 99, 174, 234, 235, 237, 242, 307, 308, 312, 318], "essenti": [1, 3, 10, 11, 17, 19, 34, 112, 115, 218, 242, 244, 277, 307, 308, 312, 318], "estim": [197, 224, 225, 226, 227, 228, 229], "et": [31, 91], "eta": 230, "eta_": 230, "etc": [25, 194, 308], "euclidean": 18, "european": 91, "evalu": [94, 132, 134, 183, 184, 185, 186, 187, 200, 201, 202, 203, 204, 205, 318], "even": [222, 235, 257, 258, 261, 262, 263, 264, 265], "evenli": [136, 137, 138, 208, 209, 210, 257], "everi": [1, 318], "everywher": 281, "exact": [94, 97, 290, 312, 314], "exactli": 100, "exampl": [4, 250], "excel": 33, "except": [0, 281, 293, 295, 306], "excit": [44, 47, 48, 67, 70, 73, 74, 75, 76, 91, 155], "exclus": [240, 243, 257], "exdb": 8, "execut": [97, 235], "exist": [21, 96, 98, 100, 236, 293], "exit": 235, "exp": [102, 107, 108, 110, 166, 173, 266], "expand": [4, 115, 300, 304], "expans": [47, 48], "expansion_factor": 44, "expect": [12, 97, 100, 183, 184, 185, 186, 187, 206, 218, 237], "expens": 3, "experi": [10, 242, 244, 318], "experiment": 244, "explan": [17, 19, 23, 82, 89, 136, 137, 138, 208, 209, 210, 221], "explicit": 100, "explicitli": [91, 96, 98], "explod": [173, 200, 201, 202], "explor": [218, 244], "expon": [17, 255], "exponenti": [102, 107, 109, 166, 173, 175, 183, 224, 225, 226, 227, 228, 275], "extend": [4, 60, 77], "extens": [91, 220], "extern": [4, 10], "extract": [30, 34, 49, 60, 77, 87, 91, 115, 181, 211, 213, 236, 258, 277, 279, 309, 311], "extractor": [38, 39, 40, 41, 87], "extrem": [19, 50, 91], "ey": 266, "f": [1, 4, 5, 6, 7, 8, 10, 91, 98, 99, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 123, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 172, 175], "f_1": 155, "f_2": 155, "facilit": [30, 96, 100, 109, 175, 179, 180, 181, 218, 220, 310, 318], "factor": [32, 102, 111, 112, 113, 115, 155, 164, 165, 221, 228, 229, 230, 231, 237], "factori": 88, "failur": [96, 97, 98, 99, 218], "fals": [1, 5, 6, 7, 8, 22, 47, 48, 49, 92, 93, 94, 95, 116, 117, 118, 119, 120, 132, 134, 147, 158, 160, 161, 162, 163, 164, 165, 179, 180, 181, 190, 192, 224, 225, 229, 233, 239, 240, 241, 243, 245, 257, 258, 259, 260, 261, 262, 263, 264, 265, 277, 278, 279, 286, 291, 292, 308], "famili": 236, "fan": [160, 161, 164, 165], "fan_in": [160, 161], "fan_out": [160, 161], "fashion": 7, "fashion_train": 7, "fashionmnist": 9, "fast": 228, "faster": [223, 227, 235], "fc": [34, 49, 60, 67, 77, 97, 155, 180, 181, 211, 212, 213, 214, 215, 216], "fc1": [40, 41, 92, 96, 100, 167, 168, 169, 171, 172, 173, 174, 176, 177, 192], "fc2": [40, 41, 92, 96, 100, 167, 168, 169, 171, 173, 174, 176, 177, 192], "fc3": 41, "featur": [3, 23, 25, 30, 33, 34, 38, 39, 40, 41, 49, 60, 61, 62, 63, 64, 65, 66, 68, 70, 71, 77, 78, 79, 80, 82, 87, 89, 90, 91, 123, 125, 132, 149, 150, 151, 155, 156, 181, 184, 185, 186, 187, 190, 192, 200, 201, 202, 203, 204, 205, 206, 211, 212, 213, 214, 215, 216, 218, 223], "feature_extractor": 38, "fed": [3, 318], "feed": [3, 245, 318], "feedforward": 92, "fergu": [89, 91], "fetch": 0, "few": 92, "fewer": 1, "field": [5, 6, 8, 77, 81, 91, 156], "file": [3, 236], "fill": [158, 162, 163, 239, 240, 241, 243, 262, 263, 264, 265], "filter": [89, 91, 111, 112, 113, 115, 149, 150, 151, 180, 181], "filter_height": 115, "filter_s": 115, "filter_width": 115, "final": [25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 44, 49, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 78, 79, 80, 96, 97, 98, 99, 100, 156, 307, 318], "find": [21, 277, 279], "fine": [155, 318], "finish": 235, "first": [5, 6, 7, 8, 14, 38, 89, 92, 97, 98, 123, 155, 190, 224, 225, 226, 227, 228, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 297, 306, 307, 308, 318], "fit": 218, "fix": [97, 298], "flatten": [34, 38, 100, 115, 254, 296, 299, 300], "flexibl": [1, 3, 4, 10, 30, 34, 35, 36, 38, 45, 49, 73, 74, 75, 76, 81, 82, 87, 91, 96, 97, 98, 99, 100, 218, 220, 237, 262, 263, 308, 318], "flip": [313, 315, 318], "float": [2, 5, 6, 7, 8, 32, 42, 45, 93, 95, 102, 105, 116, 117, 118, 119, 120, 126, 127, 128, 132, 134, 135, 148, 149, 150, 151, 158, 162, 163, 164, 165, 166, 170, 183, 184, 185, 186, 187, 194, 195, 196, 200, 201, 202, 203, 204, 205, 206, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 237, 243, 245, 257, 260, 271, 292, 310, 312, 313, 314, 315], "float32": [93, 95, 245, 257, 258, 261, 262, 264, 292, 308], "float64": [265, 292, 308], "flow": [33, 34, 67, 91, 100, 165, 167, 174, 177, 179, 180, 181, 190, 192, 233], "fly": [2, 3], "fname": 3, "focu": 10, "focus": 10, "follow": [0, 10, 11, 14, 20, 21, 22, 23, 26, 27, 28, 29, 47, 48, 73, 74, 75, 76, 81, 82, 87, 89, 92, 102, 103, 105, 106, 107, 108, 109, 110, 123, 125, 147, 149, 150, 151, 152, 153, 154, 155, 156, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 237, 244, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 277, 279, 297, 301, 309, 310, 311, 312, 313, 314, 315, 318], "form": [20, 156, 254, 297, 300, 304, 318], "format": [2, 3, 5, 6, 7, 8, 92, 195, 198, 308], "formul": 103, "formula": [14, 22, 109, 136, 137, 138, 175, 176, 196, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 250, 291, 312], "forward": [10, 23, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 44, 45, 46, 47, 48, 61, 62, 63, 64, 65, 66, 73, 74, 75, 76, 78, 79, 80, 81, 82, 89, 92, 93, 94, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "found": 10, "foundat": [34, 67, 94, 218, 220, 245], "four": [26, 27, 28, 29, 298], "frac": [12, 13, 14, 16, 17, 18, 19, 21, 22, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 123, 125, 136, 137, 138, 139, 140, 141, 143, 144, 145, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 211, 212, 213, 214, 215, 216, 222, 223, 224, 225, 226, 227, 228, 229, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 310], "frame": 120, "framework": [4, 10, 91, 195, 198, 200, 201, 202, 203, 204, 205, 219, 220, 318], "frequent": [195, 198], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 17, 19, 25, 26, 27, 28, 29, 34, 44, 45, 46, 47, 48, 49, 61, 62, 63, 64, 65, 66, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 92, 93, 94, 95, 96, 97, 98, 99, 100, 115, 123, 132, 134, 147, 149, 150, 151, 155, 156, 158, 160, 161, 162, 163, 164, 165, 172, 179, 180, 181, 183, 184, 185, 186, 187, 190, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 211, 212, 213, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 234, 235, 236, 237, 239, 240, 241, 243, 244, 245, 250, 251, 252, 256, 258, 277, 278, 279, 286, 291, 293, 295, 297, 300, 302, 303, 304, 306, 309, 310, 311, 312, 313, 314, 315, 318], "full": [22, 45, 47, 48], "full_matric": 22, "fulli": [4, 11, 23, 25, 26, 27, 28, 29, 34, 38, 39, 40, 41, 49, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 78, 79, 80, 82, 87, 89, 91, 125, 155, 156, 192, 244], "func": 236, "function": [3, 4, 5, 6, 7, 8, 10, 11, 94, 96, 97, 98, 99, 100, 149, 150, 151, 155, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 183, 184, 185, 186, 187, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 218, 220, 237, 244, 307, 318], "fundament": [10, 125, 192, 308], "further": [10, 44, 45, 46, 47, 48, 244, 278, 286, 291], "fuse": 77, "fusion": [78, 79, 80], "futur": 191, "g": [0, 13, 14, 17, 20, 22, 31, 32, 33, 35, 36, 38, 39, 40, 41, 82, 91, 155, 156, 183, 219, 222, 229, 293, 312], "g_": 223, "g_t": 229, "gain": [164, 165], "gamma": [200, 201, 202, 203, 204, 205, 206], "gap": [49, 60, 77, 155], "gaussian": [103, 167], "gelu": [104, 122, 178, 189], "gelunetwork": 167, "gener": [19, 92, 148, 183, 184, 185, 186, 187, 204, 225, 227, 228, 235, 239, 240, 241, 242, 243, 244, 249, 257, 259, 260, 297, 311, 312, 313, 315, 318], "geoffrei": [5, 6], "get": [5, 6, 7, 8], "github": 7, "give": [10, 221, 229], "given": [13, 14, 17, 19, 20, 22, 115, 194, 195, 198, 219, 233, 263, 265, 307, 312, 313, 315, 318], "global": [0, 49, 60, 67, 77, 155, 233, 235, 242, 244], "go": [31, 91], "goal": [194, 195, 198], "googlenet": [31, 91], "gpu": 91, "grad": [93, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 115, 123, 125, 147, 152, 153, 154, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 211, 212, 213, 214, 215, 216, 219, 220, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 310, 311, 313, 315, 316], "grad_output": 17, "gradient": [10, 11, 33, 34, 91, 93, 95, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 239, 240, 241, 243, 257, 258, 259, 260, 261, 262, 263, 264, 265, 292, 308], "grain": 155, "graph": [10, 165, 245, 257, 258, 261, 262, 263, 264, 265, 308], "grayscal": [7, 8, 38, 39, 40, 41, 312, 318], "greater": 271, "green": 312, "grid": 297, "groundbreak": 91, "group": [60, 61, 62, 63, 64, 65, 66, 73, 74, 75, 76, 77, 81, 91, 97, 111, 112, 113, 149, 150, 151, 156, 179, 180, 181, 219, 220], "group1": 97, "group2": 97, "groupedconvblock": 60, "growth_rat": [25, 26, 27, 28, 29], "guarante": 242, "h": [49, 61, 62, 63, 64, 65, 66, 78, 79, 80, 91, 112, 113, 115, 119, 120, 137, 138, 140, 141, 144, 145, 147, 148, 150, 151, 155, 201, 202, 204, 205, 209, 210, 213, 216, 309, 311], "h_": [112, 113, 137, 138, 140, 141, 144, 145, 147, 180, 181, 209, 210, 212, 213, 215, 216], "h_out": [112, 113, 140, 141, 144, 145], "h_stack": 295, "ha": [0, 14, 92, 100, 111, 112, 113, 149, 150, 151, 172, 176, 194, 195, 200, 201, 202, 203, 204, 205, 206, 219, 220, 250, 289, 293, 295, 303, 306, 312], "half": 284, "han": 7, "hand": 21, "handl": [0, 3, 10, 19, 94, 96, 97, 98, 99, 100, 195, 198, 218, 220, 235], "handwritten": [7, 8, 41], "hard": [47, 48, 169], "hard_sigmoid": 168, "hardsigmoid": [169, 178, 189], "hardswish": [178, 189], "hardwar": 10, "hat": [224, 225, 226, 227, 228], "have": [0, 1, 13, 14, 16, 19, 20, 22, 95, 97, 99, 100, 112, 113, 165, 218, 261, 262, 263, 264, 265, 277, 279, 293, 295, 297, 302, 303, 306, 310, 316], "he": 91, "head": [44, 87], "height": [87, 112, 113, 115, 119, 120, 137, 138, 140, 141, 144, 145, 147, 148, 156, 180, 181, 201, 202, 204, 205, 209, 210, 212, 213, 215, 216, 309, 311, 316], "help": [10, 32, 105, 107, 120, 166, 170, 172, 173, 177, 200, 201, 202, 211, 212, 214, 215, 221, 224, 225, 227, 233, 234, 235, 237], "henc": 301, "here": [3, 12, 94, 123, 218, 220, 234, 235, 237, 244, 307, 308, 318], "hidden": [23, 89, 97], "hidden_s": 97, "hierarch": [97, 100, 218], "hierarchi": 180, "hierarchicalnetwork": 97, "high": [10, 44, 57, 72, 81, 240, 243], "higher": [42, 60, 195, 198, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 249, 250, 254, 275], "highest": 240, "highli": [46, 91], "highlight": [155, 214, 215, 216], "hint": 237, "hinton": [5, 6], "histor": 223, "histori": [239, 240, 241, 243, 257, 258, 259, 260, 261, 262, 263, 264, 265], "hold": [96, 97, 98, 99], "horizont": [295, 303, 313, 318], "hot": [195, 198], "how": [2, 3, 10, 73, 74, 75, 76, 81, 97, 100, 218, 237, 318], "howard": 91, "howev": [93, 165], "hstack": 296, "html": [5, 6], "http": [5, 6, 7, 8], "hu": [91, 155], "huang": 91, "huber": [128, 196], "huber_loss": [122, 129], "huberloss": [189, 199], "huberregressionmodel": 196, "hue": 318, "hyperbol": [110, 177, 273, 283, 288], "hyperparamet": [49, 60, 88, 219, 221], "i": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 123, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 271, 272, 273, 275, 276, 277, 278, 279, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318], "iccv": 91, "idea": 91, "ideal": [10, 42, 100], "ident": [16, 17, 91, 148, 189, 193, 242, 244, 261, 301], "identifi": 98, "idx": [2, 3], "ieee": [91, 155], "ii": 289, "ij": [109, 147, 175, 248, 249, 250, 254, 297], "ik": [248, 249, 250], "ill": [13, 19], "ilsvrc": 91, "imag": [3, 4, 5, 6, 7, 8, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 49, 50, 51, 52, 53, 54, 55, 56, 57, 68, 69, 70, 71, 72, 73, 74, 75, 76, 81, 90, 91, 112, 134, 148, 150, 155, 180, 204, 297, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318], "image_dir": 3, "image_path": 3, "imagedataset": 3, "imageio": 3, "imagenet": [26, 27, 28, 29, 42, 43, 44, 45, 46, 47, 48, 58, 59, 73, 74, 75, 76, 81, 91], "imbal": [195, 198], "impact": [91, 227], "implement": [2, 3, 10, 19, 23, 25, 30, 31, 32, 33, 35, 36, 38, 42, 43, 44, 49, 58, 59, 61, 62, 63, 64, 65, 66, 67, 87, 89, 91, 94, 115, 152, 153, 154, 156, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 295, 306, 312], "impli": [179, 180], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 58, 59, 61, 62, 63, 64, 65, 66, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 117, 120, 123, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318], "improp": [97, 100, 244], "improv": [31, 32, 33, 34, 36, 49, 60, 73, 74, 75, 76, 77, 89, 91, 132, 148, 155, 167, 173, 177, 221, 222, 223, 224, 225, 226, 227, 228, 229, 237, 311, 314, 318], "imread": 3, "in1_featur": [123, 190], "in2_featur": [123, 190], "in_channel": [49, 97, 100, 149, 150, 151, 152, 153, 154, 155, 156, 179, 180, 181, 201, 202, 211, 212, 213, 214, 215, 216, 218], "in_featur": [96, 97, 100, 125, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 183, 184, 185, 190, 192, 194, 195, 196, 197, 198, 200, 203, 206, 211, 212, 213, 214, 215, 216], "incept": [31, 32, 33, 34, 35, 36, 37, 91], "inception_resnet_v1": 91, "inception_resnet_v2": 91, "inception_v1": 91, "inception_v3": 91, "inception_v4": 91, "inceptionresnet": [35, 36], "includ": [3, 4, 7, 10, 11, 17, 18, 23, 30, 31, 32, 35, 38, 49, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 82, 88, 89, 92, 94, 95, 97, 99, 100, 147, 149, 150, 151, 152, 153, 154, 218, 219, 220, 227, 237, 244, 250, 298], "inclus": [95, 98, 240, 243], "incom": [125, 192], "incomplet": 2, "incompletedataset": 2, "incorpor": [22, 46, 60, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 91, 167], "increas": [42, 60, 61, 62, 63, 64, 65, 66, 77, 111, 112, 113, 115, 148, 223, 230, 234, 295, 306, 312, 313, 315, 318], "independ": [97, 111, 112, 113, 183, 184, 185, 186, 187, 206, 250, 260, 310, 312, 314, 316], "index": [0, 2, 5, 6, 7, 8, 234, 257, 258, 261, 297, 301], "indexerror": 0, "indic": [0, 1, 82, 92, 95, 97, 99, 100, 127, 131, 195, 198, 211, 233, 245, 309, 311], "individu": [3, 97, 100, 196, 206, 220, 223, 230], "induc": [107, 173], "inf": 287, "infer": [73, 74, 75, 76, 81, 97, 100, 235], "infin": [20, 22, 226], "inform": [10, 91, 92, 93, 155, 220, 222, 235], "infti": [18, 228], "inherit": [1, 221, 229, 231], "init": 159, "initi": [1, 25, 34, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 83, 84, 85, 86, 88, 93, 95, 96, 97, 98, 99, 100, 156, 158, 160, 161, 162, 163, 164, 165, 179, 180, 181, 190, 192, 194, 195, 196, 197, 198, 200, 201, 202, 206, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 239, 242, 243, 244, 257, 261, 262, 263, 264, 265, 292], "initial_accumulator_valu": 223, "inner": [10, 248, 266], "innov": 44, "input": [10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 60, 73, 74, 75, 76, 77, 81, 87, 89, 91, 92, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 123, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235, 237, 244, 245, 246, 248, 249, 250, 254, 258, 260, 263, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318], "input1": 190, "input2": 190, "input_": [23, 89, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 208, 209, 210], "input_1": 123, "input_2": 123, "input_data": [166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 206, 211, 212, 213, 214, 215, 216], "input_s": [97, 99, 175, 195, 198], "input_shap": 92, "input_tensor": [10, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 61, 62, 63, 64, 65, 66, 73, 74, 75, 76, 78, 79, 80, 81, 82, 87, 93, 96, 97, 98, 99, 100, 109, 152, 153, 154, 155, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 211, 212, 213, 214, 215, 216, 218, 309, 310, 311, 312, 313, 314, 315, 316], "insid": [3, 233, 235], "insight": [10, 91], "inspect": [94, 95, 100, 219], "instabl": [19, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "instal": 10, "instanc": [0, 1, 10, 24, 26, 27, 28, 29, 31, 32, 33, 35, 36, 39, 40, 41, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 88, 90, 92, 94, 95, 96, 98, 99, 100, 134, 172, 203, 204, 205, 206, 219, 236, 292, 300, 304, 318], "instance_norm": [122, 133, 203, 204, 205], "instancenorm1d": [189, 207], "instancenorm1dmodel": 203, "instancenorm2d": [189, 207], "instancenorm3d": [189, 207], "instanti": [2, 73, 74, 75, 76, 81, 236], "instead": [10, 92, 96, 97, 98, 99, 100, 160, 161, 164, 165, 224, 225, 226, 235, 237, 259, 260], "int": [0, 1, 2, 5, 6, 7, 8, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 109, 111, 112, 113, 115, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 162, 163, 164, 165, 175, 179, 180, 181, 190, 192, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 224, 225, 226, 227, 228, 230, 236, 239, 240, 241, 242, 243, 245, 257, 258, 259, 261, 262, 264, 271, 277, 278, 279, 286, 290, 291, 292, 293, 298, 300, 301, 302, 303, 304, 305, 309, 311, 316], "integ": [1, 3, 17, 67, 82, 111, 112, 113, 137, 138, 179, 180, 181, 206, 209, 210, 212, 213, 214, 215, 216, 237, 240, 241, 243, 244, 259, 262, 264, 278, 286, 290, 291, 298, 300, 301, 304], "integr": [1, 2, 4, 5, 6, 7, 8, 11, 91, 95, 97, 99, 100, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 190, 192, 211, 212, 213, 214, 215, 216], "intellig": [91, 155], "intend": [93, 98, 99], "intens": [19, 25, 50, 310, 312], "intent": 237, "interact": [123, 190, 218, 244], "interdepend": 91, "interfac": [2, 94, 97, 220], "interfer": [233, 235], "intermedi": [19, 155], "intern": [50, 51, 52, 53, 54, 55, 56, 57, 68, 69, 70, 71, 72, 91, 96, 97, 98, 99, 100, 195, 198, 218, 309, 310, 311, 312, 313, 314, 315, 316], "interpol": [122, 146, 316], "interpret": [91, 109, 175, 237, 293], "interv": [239, 243, 257], "introduc": [31, 32, 42, 43, 44, 60, 91, 106, 155, 167, 171, 172, 174, 177, 183, 184, 185, 186, 187, 311, 314, 318], "introspect": 100, "intuit": [10, 96, 98, 218, 318], "inv": 15, "inv_a": 16, "invari": [212, 215], "invers": [10, 13, 16, 17, 19, 223, 268, 269, 270], "invert": [13, 16, 17, 21, 43, 44, 46, 91], "invok": 236, "involv": [12, 13, 14, 16, 19, 20, 22, 77, 102, 103, 105, 106, 107, 108, 110, 123, 125, 147, 179, 180, 181, 190, 192, 237, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 265, 275, 276, 277, 279, 282, 284, 297, 298, 300, 304], "is_leaf": 245, "issu": [3, 173, 200, 201, 202, 224, 225], "item": [7, 197], "iter": [0, 1, 2, 3, 93, 94, 97, 99, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 257], "ith": [109, 175], "its": [4, 17, 19, 23, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 69, 70, 71, 72, 78, 79, 80, 89, 91, 92, 93, 96, 97, 98, 99, 111, 112, 113, 115, 148, 156, 165, 167, 171, 176, 214, 215, 216, 218, 219, 222, 230, 233, 234, 235, 236, 257, 259, 260, 264, 277, 279, 292, 301, 310, 313, 315, 318], "itself": [12, 17, 96, 97, 98, 99], "j": [8, 109, 155, 175, 200, 201, 202, 203, 204, 205, 211, 212, 214, 215, 297, 303, 309, 311], "jie": 91, "jk": 249, "join": [3, 293], "json": 236, "k": [17, 91, 111, 179, 195, 201, 202, 204, 205, 211, 214, 215, 248, 249, 258, 261, 293], "k_d": [113, 181, 213, 216], "k_h": [112, 113, 180, 181, 212, 213, 216], "k_w": [112, 113, 180, 181, 212, 213, 216], "kaim": [91, 160, 161, 164, 165], "kaiming_norm": 159, "kaiming_uniform": 159, "kalenichenko": 91, "karen": 91, "kashif": 7, "keep": [94, 171, 222, 235, 301], "keep_grad": [95, 239, 240, 241, 243, 245, 257, 258, 259, 260, 261, 262, 263, 264, 265, 292, 308], "keep_var": 94, "keepdim": [277, 278, 279, 286, 291], "kei": [91, 94, 96, 98, 100, 219], "kept": [278, 286, 291], "kernel": [38, 39, 40, 41, 47, 48, 77, 78, 79, 80, 81, 89, 91, 111, 112, 113, 115, 136, 137, 138, 139, 140, 141, 143, 144, 145, 149, 150, 151, 152, 153, 154, 156, 179, 180, 181, 208, 209, 210, 212, 213, 216], "kernel_s": [44, 47, 48, 77, 78, 79, 80, 97, 100, 139, 140, 141, 143, 144, 145, 149, 150, 151, 152, 153, 154, 156, 179, 180, 181, 201, 202, 211, 212, 213, 214, 215, 216], "keyerror": 94, "keyword": [24, 26, 27, 28, 29, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 90, 94, 191], "kj": [248, 250], "known": 91, "kriz": [5, 6], "krizhevski": [5, 6, 91], "kroneck": [109, 175], "kwarg": [24, 26, 27, 28, 29, 31, 32, 33, 35, 36, 39, 40, 41, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 88, 90, 94, 191, 236], "l": [12, 19, 91, 111, 118, 136, 139, 143, 149, 155, 183, 184, 185, 186, 187, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208], "l2": [221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "l_": [111, 136, 139, 143, 179, 208, 211, 214], "l_out": [111, 139, 143], "label": [4, 5, 6, 7, 8, 32, 194, 195, 198], "lambd": 221, "lambda": [14, 107, 173, 221, 225], "lambda_1": 14, "lambda_2": 14, "lambda_i": 14, "lambda_n": 14, "languag": [4, 179, 190, 211, 214], "larg": [0, 3, 19, 25, 44, 47, 50, 51, 52, 55, 68, 69, 91, 152, 153, 154, 172, 196, 218, 221, 224, 225, 226, 229, 230, 231, 235], "larger": [49, 77, 96, 98, 111, 112, 113, 115, 221, 251, 298, 309, 311, 316], "largest": 277, "last": [1, 109, 135, 175, 249, 250, 293, 313, 315], "last_channel": 44, "latest": 4, "layer": [10, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 82, 83, 84, 85, 86, 89, 91, 92, 94, 96, 97, 100, 109, 125, 132, 134, 135, 149, 150, 151, 152, 153, 154, 155, 156, 160, 161, 164, 165, 175, 179, 180, 181, 190, 191, 192, 198, 206, 211, 212, 213, 214, 215, 216, 218, 244, 298, 308], "layer1": 236, "layer2": 236, "layer_group": 97, "layer_norm": [122, 133, 206], "layer_sequ": [97, 100], "layernorm": [189, 207], "layernormmodel": 206, "le": 91, "lead": [97, 100, 167, 203, 204, 205, 206, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 244], "leaf": 245, "leaki": [105, 170], "leaky_relu": [104, 122, 170], "leakyrelu": [178, 189], "learn": [1, 3, 4, 7, 8, 10, 17, 19, 60, 61, 62, 63, 64, 65, 66, 89, 90, 91, 96, 97, 98, 99, 106, 109, 155, 166, 170, 171, 175, 179, 180, 181, 184, 185, 186, 187, 190, 192, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 242, 307, 308, 318], "learnabl": [93, 94, 95, 132, 134, 135, 149, 150, 151, 179, 180, 181, 190, 192, 200, 201, 202, 203, 204, 205, 206, 218], "least": [19, 20, 22, 289], "lecun": [8, 91], "left": [17, 18, 19, 22, 103, 109, 167, 175, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 206, 214, 215, 216, 309, 311], "leftarrow": 227, "len": [0, 1, 2, 3, 297], "lenet": [37, 39, 40, 41, 91], "lenet_1": 91, "lenet_4": 91, "lenet_5": 91, "length": [97, 111, 118, 136, 139, 143, 179, 191, 200, 203, 208, 211, 214, 298, 310], "leq": [168, 169, 196, 228, 255, 271], "lerp": 147, "less": [0, 102, 105, 128, 166, 170, 195, 196, 198, 271], "let": 14, "level": [10, 34], "leverag": [21, 33, 36, 61, 62, 63, 64, 65, 66, 87, 91, 156, 218], "li": 91, "librari": [3, 10, 11, 94, 218, 219, 220, 236, 237, 244, 245, 318], "lightweight": [10, 43, 47, 48, 53, 70, 156, 169, 172], "like": [10, 34, 61, 62, 63, 64, 65, 66, 78, 79, 80, 91, 93, 94, 97, 100, 111, 164, 165, 173, 183, 200, 201, 202, 203, 204, 205, 233, 234, 237, 292, 308, 318], "likelihood": [131, 195, 198], "limit": [47, 48, 92, 172, 222, 271], "linalg": [10, 15], "linalgerror": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22], "linear": [10, 11, 12, 19, 20, 21, 43, 46, 67, 91, 92, 96, 97, 98, 100, 102, 103, 105, 106, 107, 160, 161, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 183, 184, 185, 190, 191, 194, 195, 196, 197, 198, 200, 203, 206, 211, 212, 213, 214, 215, 216, 236, 261], "linearli": 196, "list": [0, 1, 38, 44, 49, 60, 67, 77, 82, 92, 93, 95, 96, 97, 98, 99, 135, 156, 191, 206, 219, 237, 239, 240, 241, 243, 245, 258, 259, 260, 262, 263, 264, 265, 290, 301, 302, 305, 307], "listdir": 3, "liter": [49, 126, 127, 128, 130, 131, 147, 149, 150, 151, 152, 153, 154, 156, 160, 161, 179, 180, 181, 194, 195, 196, 197, 198, 297], "liu": 91, "ln": 255, "load": [3, 4, 5, 6, 7, 8, 93, 94, 95, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 236], "load_state_dict": [94, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "loader": [1, 2, 3], "local": [91, 115, 179], "locat": [91, 147], "log": [131, 194, 195, 198, 266], "log_softmax": 198, "logarithm": [255, 275, 276], "logic": [3, 208, 209, 210, 218, 219], "logit": [23, 89, 109, 175, 195], "logsoftmax": [195, 198], "long": [227, 290], "loop": [1, 97, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "loss": [10, 19, 96, 97, 98, 99, 100, 109, 126, 127, 128, 130, 131, 166, 167, 170, 171, 173, 174, 175, 177, 183, 184, 185, 186, 187, 191, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "low": [10, 34, 43, 47, 48, 240, 243], "lower": [12, 42, 163, 221, 229, 230, 231, 243], "lowest": 240, "lr": [219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "lu": 16, "lucid": [0, 1, 2, 5, 6, 7, 8, 15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 123, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 238, 266, 296, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316], "m": [82, 91, 96, 97, 100, 212, 213, 215, 216, 224, 225, 226, 227, 228, 261], "m_": [224, 225, 226, 227, 228], "m_t": [227, 228], "maaten": 91, "machin": [3, 7, 8, 10, 19, 155, 224, 234, 242], "magnitud": [229, 230, 318], "mai": [3, 10, 14, 16, 19, 97, 99, 148, 196, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 235, 244, 312, 318], "main": [10, 20, 34, 97, 258, 261], "maintain": [19, 42, 60, 61, 62, 63, 64, 65, 66, 73, 74, 75, 76, 81, 91, 93, 94, 96, 97, 98, 100, 107, 160, 161, 164, 165, 166, 167, 173, 183, 184, 185, 186, 187, 200, 201, 202, 203, 204, 205, 224, 229, 309, 312, 316], "make": [1, 3, 10, 30, 34, 38, 43, 46, 47, 48, 49, 91, 97, 100, 174, 195, 196, 206, 212, 215, 218, 223, 224, 225, 226, 234, 236, 244, 245, 250, 297, 307, 318], "manag": [10, 94, 96, 97, 98, 99, 100, 218, 220, 233, 235, 236, 244], "manhattan": 18, "mani": 92, "manipul": [10, 96, 98, 318], "manner": [97, 100], "manual": [126, 127, 131, 194, 195, 198, 235], "map": [49, 60, 70, 77, 91, 94, 108, 110, 155, 174, 177], "mask": [93, 183, 184, 185, 186, 187], "match": [21, 94, 97, 100, 126, 128, 130, 135, 149, 150, 151, 219, 275, 300, 301, 304, 305, 310, 318], "math": [272, 282, 287], "mathbf": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 87, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 123, 125, 147, 152, 153, 154, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 211, 212, 213, 214, 215, 216, 248, 249, 250, 254, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 310, 311, 312, 313, 314, 315, 316], "mathcal": [160, 162, 164, 183, 184, 185, 186, 187, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206], "mathemat": [16, 149, 150, 151, 311, 313, 314, 315], "mathrm": 19, "matmul": 266, "matric": [11, 13, 14, 16, 19, 21, 22, 248, 249, 250, 261, 297], "matrix": [10, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22, 115, 123, 191, 192, 218, 248, 297], "matrix_pow": 15, "matthew": 91, "max": [18, 67, 82, 106, 143, 144, 145, 168, 169, 171, 172, 214, 215, 216, 226, 251, 266, 271], "max_pool": [214, 215, 216], "max_pool1d": [122, 142], "max_pool2d": [122, 142], "max_pool3d": [122, 142], "max_valu": 271, "maxim": 3, "maximum": [18, 171, 172, 214, 215, 216, 224, 226, 266, 271, 277, 314], "maxpool": [23, 89], "maxpool1d": [189, 217], "maxpool1dmodel": 214, "maxpool2d": [97, 100, 180, 189, 217], "maxpool2dmodel": 215, "maxpool3d": [181, 189, 217], "maxpool3dmodel": 216, "mean": [5, 6, 7, 8, 20, 92, 93, 107, 111, 112, 113, 116, 126, 127, 128, 130, 131, 132, 134, 149, 150, 151, 162, 166, 167, 168, 170, 171, 173, 174, 177, 181, 183, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 224, 225, 226, 227, 228, 229, 233, 241, 266, 271, 275, 276, 277, 279, 282, 284, 286, 289, 290, 291, 307, 310, 318], "meaning": [100, 237], "measur": [194, 195, 197, 198], "mechan": [10, 67, 77, 81, 99, 123], "membership": 194, "memori": [2, 3, 25, 235, 259, 260], "meshgrid": 296, "method": [3, 10, 11, 16, 67, 87, 88, 96, 97, 98, 99, 100, 126, 127, 128, 130, 131, 160, 161, 164, 165, 194, 195, 196, 197, 198, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 244], "mid_channel": [47, 48], "middl": 234, "might": 218, "min": [168, 169, 172, 252, 266, 271], "min_valu": 271, "mind": [0, 3, 10, 97, 100, 235], "mini": 1, "minim": [4, 10, 44, 100, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 220], "minimalist": 10, "minimum": [266, 271, 279], "minu": 174, "mirror": [263, 265], "mismatch": [94, 218, 219], "miss": [94, 218], "mitig": [105, 166, 170, 173, 200, 201, 202], "mlp": 156, "mnist": [4, 7, 9, 39, 40], "mnist_train": [4, 8], "mobil": [42, 43, 44, 46, 47, 48, 91], "mobilenet": [37, 43, 44, 46, 47, 48, 91, 172], "mobilenet_v2": 91, "mobilenet_v3": [47, 48], "mobilenet_v3_larg": 91, "mobilenet_v3_smal": 91, "mobilenetv2": [43, 91], "mobilenetv3": [44, 47, 48, 91], "mode": [10, 120, 132, 134, 147, 160, 161, 183, 184, 185, 186, 187, 298], "model": [1, 3, 4, 10, 17, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 109, 148, 149, 150, 151, 156, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 206, 211, 212, 213, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235, 236, 244, 307, 308, 318], "moder": 71, "modern": 91, "modif": [88, 100, 235], "modifi": [24, 49, 87, 90, 96, 97, 98, 99, 158, 160, 161, 162, 163, 164, 165, 183, 233, 235, 242, 295, 306], "modul": [5, 6, 7, 8, 10, 23, 24, 30, 33, 34, 35, 36, 38, 42, 43, 44, 49, 60, 67, 77, 82, 87, 89, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 149, 150, 151, 152, 153, 154, 155, 156, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 236, 237, 244, 308, 318], "modular": [3, 10, 91, 94, 97, 100, 218, 318], "moduledict": [97, 98, 100, 101], "modulelist": [99, 100, 101], "moment": [224, 225, 226, 227, 228], "momentum": [132, 134, 149, 150, 151, 200, 201, 202, 203, 204, 205, 221, 227, 229, 231], "momentum_decai": 227, "monoton": 176, "moor": 19, "more": [3, 4, 7, 10, 14, 49, 56, 96, 97, 100, 152, 153, 154, 166, 184, 185, 186, 187, 218, 219, 220, 221, 222, 225, 226, 229, 230, 231, 241, 250, 289, 303, 318], "most": [11, 91, 215, 308, 309, 318], "move": [221, 229], "mse": [128, 130, 196, 197], "mse_loss": [122, 129], "mseloss": [189, 199], "mu": [162, 200, 201, 202, 203, 204, 205, 206, 291], "mu_c": 310, "mu_i": [203, 204, 205], "much": 318, "mul": 266, "multi": [3, 4, 35, 77, 78, 79, 80, 91, 109, 127, 131, 156, 175, 195, 198, 278, 286, 291], "multidimension": [239, 243, 259], "multipl": [1, 3, 10, 11, 17, 21, 23, 49, 67, 81, 98, 99, 100, 115, 147, 148, 155, 156, 183, 184, 185, 186, 187, 195, 198, 218, 234, 239, 240, 241, 243, 248, 253, 259, 260, 307, 312, 318], "multipli": [17, 45, 99, 125, 192, 230, 253, 254], "must": [0, 1, 3, 12, 13, 14, 16, 17, 20, 21, 22, 92, 94, 96, 97, 98, 99, 100, 135, 183, 184, 185, 186, 187, 198, 219, 235, 289, 293, 295, 298, 300, 301, 303, 304, 306, 309, 310, 311, 312, 313, 315], "my_simple_model": 236, "mymodel": [94, 95, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "myoptim": [219, 220], "n": [17, 18, 49, 61, 62, 63, 64, 65, 66, 78, 79, 80, 91, 96, 97, 100, 111, 112, 113, 115, 118, 119, 120, 123, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 155, 160, 162, 164, 179, 180, 181, 186, 187, 190, 192, 194, 195, 197, 198, 200, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 261, 278, 289, 291], "n1": 18, "nabla_": [222, 223, 224, 225, 226, 227, 228, 230], "nabla_t": 228, "nadam": 232, "nair": [5, 6], "name": [91, 92, 94, 96, 98, 100, 236, 237], "nan": [20, 22], "natur": [19, 91, 179, 190, 211, 214, 255, 275, 276], "ndarrai": [93, 95, 237, 245, 258, 260, 263, 265, 292], "ndim": [20, 22, 95, 245], "ne": 17, "nearest": 147, "necessari": [4, 5, 6, 7, 8, 19, 235, 295, 306], "need": [2, 4, 97, 98, 99, 109, 190, 218, 235, 259, 260, 307, 308, 318], "neg": [17, 19, 22, 102, 131, 148, 166, 170, 171, 173, 195, 198, 230, 293], "negative_slop": [105, 170], "neglect": 99, "neighbor": 147, "neq": 18, "nest": [92, 97, 100, 218], "nestedmodel": 92, "nesterov": 227, "net": [89, 91], "network": [3, 4, 10, 23, 24, 25, 33, 34, 41, 42, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 68, 69, 70, 71, 72, 77, 82, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 106, 107, 108, 109, 110, 111, 112, 113, 123, 125, 132, 148, 155, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 206, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 229, 231, 243, 244, 245, 257, 262, 264, 277, 279, 298, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318], "neural": [3, 4, 10, 23, 24, 34, 41, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 106, 107, 108, 109, 110, 111, 112, 113, 123, 125, 132, 148, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 206, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 229, 231, 243, 244, 245, 257, 262, 264, 277, 279, 298, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318], "neuralnetwork": [168, 169, 171, 176], "neuron": 170, "never": 312, "new": [94, 95, 102, 103, 105, 106, 107, 108, 110, 123, 125, 147, 156, 160, 161, 162, 163, 164, 165, 219, 236, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 260, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 290, 292, 293, 295, 298, 300, 301, 303, 304, 305, 306], "next": [100, 307], "nll": 131, "nll_loss": [122, 129], "nllloss": [189, 199], "nn": [5, 6, 7, 8, 10, 23, 25, 30, 34, 38, 42, 43, 44, 49, 60, 67, 73, 74, 75, 76, 77, 81, 82, 89, 92, 101, 104, 114, 121, 124, 129, 133, 142, 146, 157, 159, 178, 182, 188, 189, 193, 199, 207, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 236, 308, 318], "no_grad": 233, "node": 245, "nois": [22, 244], "non": [14, 17, 19, 22, 99, 103, 105, 106, 160, 161, 166, 167, 168, 170, 171, 172, 173, 174, 176, 177, 183, 184, 185, 186, 187, 224, 225, 235, 255, 271], "none": [0, 1, 2, 5, 6, 7, 8, 30, 34, 38, 42, 43, 44, 49, 87, 92, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 123, 125, 126, 127, 128, 130, 131, 132, 134, 135, 148, 149, 150, 151, 152, 153, 154, 156, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 211, 212, 213, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 234, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 259, 260, 261, 263, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 313, 315, 316], "norm": [11, 15, 226], "normal": [5, 6, 7, 8, 67, 103, 107, 109, 110, 132, 134, 135, 149, 150, 151, 159, 160, 164, 167, 173, 175, 183, 200, 201, 202, 203, 204, 205, 206, 229, 241, 244, 307, 317, 318], "normalized_shap": [135, 206], "note": [111, 183], "noth": [116, 117, 118, 119], "notimplementederror": [2, 94, 219], "notin": 271, "nov": 91, "novel": [7, 91], "np": [49, 61, 62, 63, 64, 65, 66, 78, 79, 80, 93, 95, 155, 195, 198, 237, 245, 250, 257, 258, 261, 262, 264, 265, 276, 292, 308], "npy": [5, 6, 7, 8], "num_class": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 175, 195, 198], "num_featur": [100, 149, 150, 151, 200, 201, 202, 203, 204, 205], "num_init_featur": [25, 26, 27, 28, 29], "num_paramet": 99, "number": [0, 1, 2, 5, 6, 7, 8, 13, 14, 16, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 95, 97, 99, 100, 111, 112, 113, 115, 118, 119, 120, 123, 125, 127, 131, 132, 134, 136, 137, 138, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 160, 161, 164, 165, 174, 179, 180, 181, 190, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 212, 213, 214, 215, 216, 221, 239, 242, 243, 245, 255, 257, 259, 261, 277, 278, 279, 290, 291, 293, 295, 298, 300, 301, 302, 304, 306, 310, 312, 313, 315, 318], "numer": [16, 19, 126, 127, 132, 134, 135, 149, 150, 151, 172, 194, 195, 200, 201, 202, 203, 204, 205, 206, 222, 223, 224, 225, 226, 227, 228, 229, 237, 247, 257, 262, 264], "numpi": [10, 93, 95, 195, 198, 237, 245, 250, 258, 261, 276, 289, 292, 298, 300, 304, 308, 318], "o": [3, 213, 216, 262, 263], "object": [1, 3, 11, 77, 91, 94, 98, 99, 197, 218, 235, 246, 247, 251, 252, 253, 256, 292], "observ": 224, "obtain": 1, "occur": [148, 235, 236, 293], "occurr": 17, "odot": [183, 184, 185, 186, 187], "off": 233, "offer": [4, 10, 218, 220, 244, 318], "offset": 261, "often": [17, 58, 59, 111, 112, 113, 115, 195, 198, 257, 264, 308, 312, 316, 318], "older": 227, "onc": 235, "one": [0, 73, 74, 75, 76, 81, 99, 100, 109, 111, 125, 139, 143, 149, 150, 151, 173, 174, 175, 179, 185, 195, 198, 200, 203, 211, 214, 219, 234, 237, 241, 256, 263, 277, 279, 294, 299, 303, 308], "ones": [123, 125, 179, 180, 181, 192, 200, 201, 202, 203, 204, 205, 206, 218, 261, 263, 266], "ones_lik": 266, "onli": [10, 92, 147, 168, 171, 183, 184, 185, 186, 187, 194, 195, 198, 200, 201, 202, 203, 204, 205, 206, 214, 215, 216, 230, 233, 257, 271, 277, 279, 289, 298, 299, 301, 302], "onto": [20, 22], "openml": [5, 6, 7, 8], "oper": [3, 10, 11, 16, 19, 67, 68, 69, 70, 71, 72, 93, 94, 97, 102, 103, 105, 106, 107, 108, 110, 111, 112, 113, 115, 120, 123, 125, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 233, 234, 235, 237, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 259, 260, 262, 264, 275, 276, 277, 278, 279, 282, 284, 286, 289, 291, 293, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 310, 316], "operatornam": [17, 19], "opposit": 221, "optim": [3, 10, 11, 17, 19, 20, 22, 25, 30, 31, 32, 33, 34, 35, 36, 43, 44, 47, 48, 93, 95, 98, 99, 115, 179, 180, 181, 218, 235], "optimizer_st": [219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "option": [1, 5, 6, 7, 8, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 102, 105, 109, 112, 113, 116, 117, 118, 119, 120, 123, 125, 126, 127, 128, 130, 131, 132, 134, 135, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 160, 161, 162, 163, 164, 165, 166, 170, 175, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 211, 212, 213, 214, 215, 216, 219, 221, 229, 231, 239, 240, 241, 243, 245, 257, 258, 259, 260, 261, 262, 263, 264, 265, 277, 278, 279, 286, 290, 291, 292, 293, 297, 300, 302, 303, 308, 312, 313, 315], "ord": 18, "order": [1, 3, 18, 22, 96, 97, 98, 99, 100, 290, 307], "ordered_dict": 100, "ordereddict": [94, 96, 97, 100], "organ": [96, 97, 98, 100, 236], "orient": 318, "origin": [32, 41, 116, 148, 155, 177, 298, 299, 300, 301, 304, 305, 316], "orthogon": [19, 20, 22], "orthonorm": 20, "oscil": [221, 229, 231], "other": [2, 3, 10, 16, 32, 36, 38, 41, 93, 94, 97, 100, 160, 161, 183, 218, 219, 233, 235, 244, 245, 257, 259, 262, 264, 289, 297, 318], "otherwis": [50, 51, 52, 53, 54, 55, 56, 57, 68, 69, 70, 71, 72, 102, 105, 106, 107, 109, 166, 168, 169, 170, 171, 173, 175, 184, 185, 186, 187, 196, 211, 212, 213, 214, 215, 216, 219, 230, 236, 251, 252, 277, 279], "otim": [19, 123, 190], "out": [0, 3, 4, 102, 103, 105, 106, 107, 108, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 123, 125, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 160, 161, 164, 165, 179, 180, 181, 183, 184, 185, 186, 187, 208, 209, 210, 211, 212, 213, 214, 215, 216, 221, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306], "out_channel": [38, 44, 47, 48, 97, 100, 149, 150, 151, 152, 153, 154, 156, 179, 180, 181, 201, 202, 211, 212, 213, 214, 215, 216, 218], "out_featur": [96, 97, 100, 123, 125, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 180, 181, 183, 184, 185, 190, 192, 194, 195, 196, 197, 198, 200, 203, 206, 211, 212, 213, 214, 215, 216], "outcom": [312, 313, 315], "outer": 266, "outlier": [128, 196], "output": [0, 1, 2, 10, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 118, 119, 120, 123, 125, 136, 137, 138, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 237, 240, 241, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 260, 261, 262, 264, 265, 275, 276, 277, 278, 279, 282, 284, 286, 289, 290, 291, 297, 298, 300, 304, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316], "output_height": 115, "output_lay": [97, 100], "output_s": [97, 136, 137, 138, 208, 209, 210], "output_width": 115, "outsid": 0, "over": [0, 1, 2, 3, 11, 43, 77, 89, 94, 97, 99, 109, 136, 137, 138, 155, 175, 179, 180, 181, 195, 198, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 221, 222, 223, 224, 225, 239, 243, 277, 278, 279, 286, 289, 291, 312, 313, 315], "overal": 87, "overdetermin": 19, "overfit": [1, 23, 89, 117, 120, 184, 185, 186, 187, 221, 224, 229, 231], "overhead": [44, 155], "overli": 172, "overrid": [2, 3], "overridden": [94, 219], "overwrit": [96, 98], "own": [4, 96, 97, 98, 99, 111, 112, 113, 165, 218, 310], "p": [18, 19, 95, 98, 99, 116, 117, 118, 119, 120, 183, 184, 185, 186, 187, 211, 214, 215, 312, 313, 315, 318], "p_d": [213, 216], "p_h": [212, 213, 216], "p_w": [212, 213, 216], "packag": [2, 3, 4, 11, 91, 218, 220, 236, 242, 244, 308, 318], "pad": [38, 97, 100, 111, 112, 113, 115, 136, 137, 138, 139, 140, 141, 143, 144, 145, 149, 150, 151, 152, 153, 154, 156, 179, 180, 181, 201, 202, 208, 209, 210, 211, 212, 213, 214, 215, 216, 296], "pad_after_dim1": 298, "pad_after_dim2": 298, "pad_before_dim1": 298, "pad_before_dim2": 298, "pad_width": 298, "padding_height": 115, "padding_width": 115, "pair": 123, "pang": 91, "paper": 31, "parallel": [1, 3, 77, 91], "param": [94, 95, 98, 99, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "param1": 94, "param_dict": 98, "param_group": [219, 220], "param_groups_setup": 219, "param_list": 99, "param_s": 236, "paramet": [0, 2, 10, 39, 40, 41, 91, 94, 218, 219, 220, 237, 244, 318], "parameterdict": 101, "parameterlist": 101, "parent": 218, "part": [93, 94, 165, 218, 233, 235, 244, 257, 258, 261, 262, 263, 264, 265, 308, 318], "partial": [12, 13, 14, 16, 17, 18, 19, 21, 22, 102, 103, 105, 106, 107, 108, 109, 110, 123, 125, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 211, 212, 213, 214, 215, 216, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306], "particip": [95, 308], "particular": [96, 98], "particularli": [10, 19, 43, 61, 62, 63, 64, 65, 66, 97, 98, 99, 100, 109, 125, 149, 150, 151, 152, 153, 154, 175, 192, 195, 198, 203, 204, 205, 206, 225, 233, 236, 307], "pass": [2, 10, 19, 23, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 58, 59, 60, 61, 62, 63, 64, 65, 66, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 92, 94, 95, 96, 97, 98, 99, 100, 147, 149, 150, 151, 155, 156, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 206, 211, 212, 213, 214, 215, 216, 218, 237, 245, 278, 286, 289, 290, 291, 293, 295, 299, 301, 302, 306, 308, 318], "past": [221, 222, 224, 229], "patch": [115, 212], "path": [3, 5, 6, 7, 8], "pathwai": 91, "pattern": [91, 106, 155, 171, 179, 180, 181], "penal": [221, 229, 231], "penalti": [222, 223, 224, 225, 226, 227, 228], "penros": 19, "per": [1, 44, 61, 62, 63, 64, 65, 66, 78, 79, 80, 136, 203, 204, 205, 206, 208], "perform": [3, 10, 11, 12, 19, 23, 34, 35, 36, 38, 39, 40, 41, 44, 45, 46, 57, 73, 74, 75, 76, 77, 82, 89, 91, 94, 95, 99, 103, 111, 112, 113, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 152, 153, 154, 155, 156, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 233, 235, 242, 244, 246, 247, 250, 253, 256, 275, 277, 279, 286, 290, 307, 309, 311, 316, 318], "permut": 290, "persist": [93, 239, 240, 241, 243, 259, 260], "perturb": [14, 21, 22, 318], "phi": [103, 167], "pi": [103, 167, 272, 282, 287], "piecewis": [168, 169], "pil": [308, 318], "pinv": 15, "pioneer": 91, "pipelin": [5, 6, 7, 8, 244, 307, 308, 310], "pixel": [5, 6, 7, 8, 147, 310, 312], "place": [158, 160, 161, 162, 163, 164, 165], "placehold": [94, 191], "plai": [237, 244], "plot": 297, "point": [4, 148, 233], "pointwis": [152, 153, 154], "pool": [23, 38, 39, 40, 41, 49, 60, 67, 77, 82, 89, 91, 136, 137, 138, 139, 140, 141, 143, 144, 145, 155, 156, 180, 181, 208, 209, 210, 211, 212, 213, 214, 215, 216, 277, 279], "pool1": 100, "pool2": 100, "poorli": 16, "popul": 94, "popular": [4, 91], "portion": 318, "pose": 19, "posit": [1, 12, 17, 94, 100, 148, 166, 170, 171, 173, 211, 212, 213, 214, 215, 216, 230, 234, 255, 300, 304, 311], "possibl": [10, 318], "potenti": [19, 191, 229, 302], "power": [10, 17, 43, 47, 48, 91, 155, 234, 235, 266, 307, 308, 318], "pp": 91, "practic": [19, 195, 198], "practition": 318, "pre": [50, 54, 55], "preactbottleneck": [50, 54, 55], "preced": [91, 95, 245], "preconfigur": [35, 36], "predefin": [4, 91, 97, 173], "predict": [87, 194, 195, 197, 198], "prefix": [94, 236], "prepar": [3, 234, 298, 300, 304, 308, 318], "prepend": 94, "preprint": 91, "preprocess": [3, 4, 115, 148, 244, 307, 308, 318], "present": [194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 206, 212], "preserv": [116, 148, 183, 257, 258, 261, 262, 263, 264, 265, 278, 286, 291], "preset": 4, "prevent": [1, 96, 97, 98, 99, 100, 117, 120, 172, 184, 185, 186, 187, 194, 195, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 235], "previou": [221, 230, 235], "previous": 224, "primari": [10, 237], "primarili": 100, "print": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 123, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 233, 234, 235, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 313, 314, 315, 316], "priorit": [47, 48, 156, 168], "probabilist": 244, "probabl": [32, 103, 109, 116, 117, 118, 119, 120, 126, 167, 175, 183, 184, 185, 186, 187, 194, 195, 198, 312, 313, 315, 318], "problem": [19, 20, 22, 91, 105, 166, 170, 228], "proceed": 91, "process": [2, 3, 4, 17, 20, 22, 23, 35, 49, 77, 88, 89, 91, 99, 111, 112, 113, 134, 148, 149, 150, 151, 155, 156, 173, 177, 179, 181, 190, 200, 201, 202, 203, 204, 205, 206, 211, 213, 214, 216, 221, 237, 297, 308, 309, 310, 311, 316, 318], "produc": [23, 89, 92, 136, 137, 138, 155, 179, 180, 181, 208, 209, 210, 242, 244], "product": [10, 20, 22, 169, 174, 176, 190, 206, 218, 248, 249, 253, 254], "program": [233, 244], "progress": 223, "project": [20, 22], "projector": 19, "promin": [211, 213, 214, 215, 216], "promot": [100, 195, 198, 218], "propag": [13, 14, 16, 19, 20, 21, 22, 91, 94, 100, 123, 125, 147, 155, 212, 213, 229, 230, 248, 249, 250, 254, 277, 279, 297, 298, 301, 305], "properli": [0, 99, 109, 175, 218], "properti": [11, 13, 16, 17, 103, 107, 116, 167, 173, 183, 223, 228], "proport": [5, 6, 7, 8, 291], "proportion": 316, "provid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 24, 30, 31, 32, 34, 38, 49, 82, 87, 88, 90, 91, 94, 96, 97, 98, 99, 103, 125, 137, 138, 148, 194, 195, 196, 198, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 229, 231, 233, 235, 237, 242, 244, 245, 250, 257, 263, 277, 279, 290, 292, 300, 302, 304, 318], "pseudo": [16, 19], "purpos": [239, 243, 257, 262, 264], "python": 237, "pytorch": 292, "q": [20, 91], "qr": 15, "quad": [19, 194, 195, 196, 197, 198, 214, 215, 216, 246, 247, 251, 252, 253, 256, 309], "quadrat": 196, "quotient": 247, "r": [20, 91, 312, 313, 314, 315], "r_t": 228, "radam": 232, "rais": [0, 1, 2, 94, 218, 219, 255], "rand": [238, 244], "randint": [238, 244], "randn": [23, 25, 26, 27, 28, 29, 45, 46, 49, 61, 62, 63, 64, 65, 66, 73, 74, 75, 76, 78, 79, 80, 81, 82, 87, 89, 152, 153, 154, 155, 156, 218, 238, 242, 244], "random": [1, 2, 3, 25, 26, 27, 28, 29, 45, 46, 49, 61, 62, 63, 64, 65, 66, 73, 74, 75, 76, 78, 79, 80, 81, 87, 152, 153, 154, 155, 156, 311, 312, 313, 314, 315, 318], "random_integ": 244, "random_tensor": 244, "randomcrop": [317, 318], "randomgrayscal": [317, 318], "randomhorizontalflip": [317, 318], "randomli": [1, 116, 117, 118, 119, 120, 148, 183, 184, 185, 186, 187, 311, 312, 313, 314, 315, 318], "randomnoisedataset": [0, 1, 2], "randomrot": [317, 318], "randomverticalflip": 317, "rang": [0, 1, 11, 49, 57, 91, 99, 108, 110, 111, 112, 127, 131, 165, 172, 174, 177, 221, 229, 231, 240, 268, 269, 271, 310, 314, 318], "rank": 19, "rasul": 7, "rate": [219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "rather": [7, 98, 99, 225, 301], "ratio": [67, 155, 156, 316], "ravel": 296, "raw": [109, 175, 195, 237], "re": [95, 235], "readabl": [96, 97, 98, 100, 218, 237], "readi": [3, 10, 73, 74, 75, 76, 81, 91], "real": [19, 22, 43, 174], "rearrang": 115, "recalibr": [68, 70, 71, 73, 74, 75, 76, 91, 155], "receiv": [214, 215, 216, 298], "recent": 229, "recept": [77, 81, 91, 156], "reciproc": [19, 266, 276, 284], "recognit": [41, 91, 180], "rectangular": 261, "rectif": 228, "rectifi": [105, 106, 170, 171, 228], "recurr": [97, 206], "recurs": [92, 94], "red": 312, "reduc": [23, 42, 49, 60, 77, 82, 89, 91, 152, 153, 154, 155, 200, 201, 202, 203, 204, 205, 211, 212, 213, 214, 215, 216, 227, 230, 235, 237, 277, 278, 279, 286, 291, 312], "reduct": [22, 67, 126, 127, 128, 130, 131, 155, 156, 194, 195, 196, 197, 198, 277, 279], "reevalu": 219, "refer": [4, 10, 94, 244, 258, 261, 293], "reflect": 233, "regardless": [19, 299], "region": [113, 136, 137, 138, 147, 168, 209, 210, 298, 309, 318], "regist": [58, 59, 61, 62, 63, 64, 65, 66, 88, 93, 94, 95, 99, 218, 236], "register_buff": 93, "register_model": [24, 31, 32, 33, 35, 36, 39, 40, 41, 45, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 78, 79, 80, 83, 84, 85, 86, 88, 90], "register_paramet": 94, "registr": [94, 218], "registri": [61, 62, 63, 64, 65, 66, 236], "registry_path": 236, "regress": [4, 130, 196, 197], "regular": [19, 23, 32, 89, 120, 184, 185, 186, 187, 221, 222, 223, 226, 227, 228, 229, 231], "relat": [235, 261, 262], "relationship": 316, "relev": [147, 221, 229, 231], "reli": 235, "reliabl": [5, 6, 7, 8], "reliant": [184, 185, 186, 187], "relu": [10, 23, 67, 82, 89, 91, 92, 96, 97, 98, 100, 102, 104, 105, 122, 149, 150, 151, 155, 156, 160, 161, 164, 165, 166, 170, 172, 176, 178, 179, 180, 181, 189, 190, 191, 192], "relu1": 100, "relu2": 100, "relu3": 100, "relu6": [178, 189], "remain": [5, 6, 7, 8, 93, 135, 183, 184, 185, 186, 187, 230], "rememb": 244, "remov": [236, 302], "rep": 304, "repeat": [296, 297, 304], "repetit": [300, 304], "replac": [7, 244, 312], "repres": [7, 16, 18, 22, 38, 94, 95, 100, 123, 125, 132, 134, 135, 179, 180, 181, 190, 192, 195, 198, 206, 219, 220, 221, 227, 228, 229, 230, 231, 237, 246, 247, 253, 256, 258, 278, 289, 290, 291, 297, 309, 311, 313, 314, 315, 316], "represent": [58, 59, 61, 62, 63, 64, 65, 66, 73, 74, 75, 76, 77, 81, 91, 155, 212, 215, 219], "reproduc": [239, 240, 241, 242, 243, 244, 318], "requir": [2, 3, 4, 10, 44, 61, 62, 63, 64, 65, 66, 77, 93, 96, 100, 102, 103, 105, 106, 107, 108, 110, 123, 125, 147, 155, 156, 165, 191, 195, 198, 218, 233, 235, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 287, 288, 293, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 309, 316], "requires_grad": [93, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 115, 123, 125, 147, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 211, 212, 213, 214, 215, 216, 218, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308], "rescal": [126, 127, 131, 194, 195, 198], "research": 218, "reset": [95, 242, 245], "reshap": [10, 67, 125, 180, 181, 234, 237, 296, 299], "residu": [33, 34, 35, 36, 43, 44, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 68, 69, 70, 71, 72, 91], "residualblock": 49, "resili": 230, "resiz": [147, 307, 317, 318], "resnet": [34, 35, 36, 37, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 68, 69, 70, 71, 72, 77, 78, 79, 80, 91, 155], "resnet_1001": 91, "resnet_101": 91, "resnet_152": 91, "resnet_18": 91, "resnet_200": 91, "resnet_269": 91, "resnet_34": 91, "resnet_50": 91, "resnet_arg": 77, "resnext": [37, 61, 62, 63, 64, 65, 66, 73, 74, 75, 76, 81, 91], "resnext_101_32x16d": 91, "resnext_101_32x32d": 91, "resnext_101_32x4d": 91, "resnext_101_32x8d": 91, "resnext_101_64x4d": 91, "resnext_50_32x4d": 91, "resolut": [73, 74, 75, 76, 81], "resourc": [44, 47, 48, 235], "respect": [12, 13, 14, 16, 17, 18, 19, 20, 22, 38, 82, 93, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 123, 125, 147, 156, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 211, 212, 213, 214, 215, 216, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 271, 275, 276, 277, 278, 279, 282, 284, 286, 289, 290, 291, 297, 298, 300, 304, 312], "respons": [73, 74, 75, 76, 91, 96, 220], "restor": [155, 235], "restructur": 301, "result": [12, 16, 17, 19, 91, 94, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 123, 125, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 156, 168, 172, 175, 218, 219, 233, 235, 239, 240, 241, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 287, 288, 289, 292, 293, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 311, 312, 318], "resum": 220, "retain": [95, 245, 257, 264, 277, 278, 279, 286, 291, 308], "retent": 308, "retriev": [0, 2, 96, 98, 99], "return": [0, 1, 2, 3, 5, 6, 7, 8, 10, 34, 38, 67, 93, 94, 96, 97, 98, 99, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 206, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 236, 237, 307, 318], "reus": [91, 308], "reusabl": [100, 218, 307], "revers": [10, 100, 290, 313, 315], "revert": 235, "revolution": 91, "rgb": [5, 6, 31, 32, 33, 35, 36], "rho": 222, "rho_": 228, "rho_t": 228, "right": [17, 18, 19, 21, 22, 103, 109, 167, 175, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 206, 214, 215, 216, 309], "risk": 237, "rmsprop": 232, "rob": 91, "robust": [148, 183, 184, 185, 186, 187, 196, 218, 222, 311, 312, 314, 318], "roland": 7, "role": [237, 244, 318], "root": [4, 5, 6, 7, 8, 223, 229, 284], "rotat": [122, 146, 314, 318], "rotated_imag": 148, "rout": [214, 215, 216], "routin": 10, "row": [13, 14, 16, 21, 125, 261, 297, 306], "rprop": 232, "rule": [16, 17, 234, 246, 247, 251, 252, 253, 255, 256], "run": [10, 93, 132, 134, 149, 150, 151, 200, 201, 202, 203, 204, 205, 222, 235, 242, 244], "running_mean": [93, 132, 134, 200, 201, 202, 203, 204, 205], "running_var": [132, 134, 200, 201, 202, 203, 204, 205], "runtim": [97, 100, 218], "s_": 230, "s_d": [213, 216], "s_h": [212, 213, 216], "s_w": [212, 213, 216], "sain": 91, "same": [13, 14, 16, 17, 21, 109, 116, 117, 118, 119, 120, 132, 134, 135, 137, 138, 148, 149, 150, 151, 152, 153, 154, 156, 172, 179, 180, 181, 183, 184, 185, 186, 187, 191, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 230, 242, 244, 250, 260, 263, 265, 275, 277, 278, 279, 293, 295, 299, 301, 302, 303, 306, 310], "sampl": [0, 1, 2, 3, 5, 6, 7, 8, 10, 31, 32, 33, 35, 36, 38, 39, 40, 41, 45, 46, 73, 74, 75, 76, 81, 136, 137, 138, 160, 161, 162, 163, 164, 165, 183, 184, 185, 186, 187, 190, 192, 195, 198, 206, 208, 209, 210, 241, 244, 309, 311, 313, 314, 315, 316], "sandler": 91, "satisfi": [12, 14, 21], "satur": [166, 318], "save": [2, 93, 95, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235, 236], "scalabl": [3, 61, 62, 63, 64, 65, 66, 87, 91, 218], "scalar": [13, 18, 126, 127, 128, 130, 131, 237], "scale": [14, 19, 25, 35, 39, 40, 41, 42, 45, 50, 51, 52, 55, 68, 69, 77, 78, 79, 80, 91, 102, 107, 109, 132, 134, 135, 155, 156, 164, 165, 166, 168, 170, 173, 174, 175, 177, 183, 184, 185, 186, 187, 195, 200, 201, 202, 203, 204, 205, 206, 221, 223, 224, 225, 237, 244, 291, 316], "scenario": [98, 99, 206, 225, 226, 308, 312], "schedul": 221, "scientif": 234, "score": [49, 60, 77, 109, 195], "scratch": 10, "script": 244, "se": [68, 69, 70, 71, 72, 73, 74, 75, 76, 91], "se_resnet_101": 91, "se_resnet_152": 91, "se_resnet_18": 91, "se_resnet_34": 91, "se_resnet_50": 91, "se_resnext_101_32x4d": 91, "se_resnext_101_32x8d": 91, "se_resnext_101_64x4d": 91, "se_resnext_50_32x4d": 91, "seamless": [0, 1, 3, 4, 218, 244], "seamlessli": [3, 4, 11, 95, 97, 100, 218, 237, 318], "search": 91, "second": [14, 97, 98, 123, 155, 190, 224, 225, 226, 227, 228, 234, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 295, 297, 315], "section": 250, "see": [10, 250], "seed": [238, 239, 240, 241, 243, 244, 318], "seen": 222, "select": [77, 78, 79, 80, 81, 91, 147, 155, 156, 214, 216, 286], "selectivekernel": 157, "self": [0, 1, 2, 3, 10, 23, 30, 34, 38, 42, 43, 44, 67, 82, 89, 92, 93, 94, 95, 96, 97, 98, 99, 107, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 190, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 236, 297, 307, 308], "selu": [104, 116, 122, 178, 183, 189], "selunetwork": 173, "semodul": 157, "senet": [37, 68, 69, 70, 71, 72, 73, 74, 75, 76, 91], "sensit": [128, 196, 200, 201, 202], "sentiment": 4, "separ": [0, 42, 87, 91, 111, 112, 113, 152, 153, 154, 203, 204, 205], "sequenc": [17, 49, 60, 77, 96, 98, 111, 257, 293, 295, 298, 300, 303, 304, 306, 307], "sequenti": [23, 34, 38, 67, 82, 87, 89, 92, 96, 97, 101, 111, 149, 150, 151, 191, 307, 318], "seri": [30, 39, 40, 77, 111, 149, 179, 211, 214], "serial": [93, 94, 220], "serv": [3, 7, 25, 34, 67, 82, 94, 96, 97, 98, 99, 100, 218, 230, 308], "set": [3, 4, 5, 6, 7, 8, 58, 59, 73, 74, 75, 76, 81, 92, 95, 99, 111, 112, 113, 170, 171, 173, 179, 180, 181, 183, 186, 187, 190, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 219, 224, 225, 229, 239, 240, 241, 242, 243, 244, 245, 257, 259, 260, 264, 265, 271, 277, 279, 292, 308, 312, 318], "setup": [4, 10, 61, 62, 63, 64, 65, 66], "sever": [19, 179, 180, 181, 211, 212, 213, 214, 215, 216, 235, 307, 318], "sgd": [10, 221, 228, 232], "sgn": 18, "shape": [3, 4, 5, 6, 7, 8, 10, 13, 14, 16, 17, 19, 23, 25, 26, 27, 28, 29, 34, 38, 44, 47, 48, 49, 61, 62, 63, 64, 65, 66, 67, 73, 74, 75, 76, 78, 79, 80, 81, 82, 87, 89, 91, 92, 93, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 123, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 155, 156, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 234, 237, 239, 240, 241, 243, 244, 245, 248, 259, 260, 261, 262, 263, 264, 265, 271, 276, 277, 278, 279, 282, 284, 286, 290, 291, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 306, 309, 310, 311, 312, 313, 314, 315, 316, 318], "shapelik": 240, "share": 91, "shen": 155, "shift": [132, 134, 135, 168, 200, 201, 202, 203, 204, 205, 206], "shorthand": 250, "should": [38, 93, 235, 239, 240, 241, 243, 259, 260, 268, 269, 289, 298, 307], "show": [233, 236], "showcas": 10, "shown": [176, 242], "shrink": 222, "shuffl": [1, 2, 3], "side": [21, 97, 100, 111, 112, 113, 139, 140, 141, 143, 144, 145, 149, 150, 151, 179, 180, 181, 211, 212, 213, 214, 215, 216, 235], "sigma": [19, 155, 160, 162, 164, 174, 176, 200, 201, 202, 203, 204, 205, 206, 290], "sigma_c": 310, "sigma_i": 19, "sigmoid": [104, 122, 155, 160, 161, 164, 165, 168, 169, 176, 178, 189, 194], "sigmoidnetwork": 174, "sign": [17, 196, 230, 266], "signal": [149, 179, 180, 181, 200, 203, 211, 212, 213, 214, 215, 216], "signific": 235, "significantli": [43, 60, 91, 155, 307], "sim": [183, 184, 185, 186, 187], "similar": [10, 160, 161, 250, 276, 292, 298], "similarli": [22, 289], "simonyan": 91, "simpl": [3, 4, 10, 92, 100, 111, 112, 113, 123, 125, 139, 140, 141, 143, 144, 145, 167, 168, 169, 171, 172, 173, 174, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 211, 212, 213, 214, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 248, 249, 254, 307], "simplebinaryclassificationmodel": 194, "simpleclassificationmodel": [195, 198], "simplegelumodel": 167, "simplehardsigmoidmodel": 168, "simplehardswishmodel": 169, "simpleleakyrelumodel": 170, "simplemodel": [10, 92, 172, 192, 236], "simpleregressionmodel": 197, "simplerelumodel": 171, "simpleselumodel": 173, "simplesigmoidmodel": 174, "simpleswishmodel": 176, "simpletanhmodel": 177, "simpli": [233, 289, 290, 301], "simplic": [91, 168, 171], "simplifi": [4, 39, 88, 100, 149, 150, 151], "simul": [92, 318], "simultan": 148, "sin": [266, 272], "sinc": [17, 20, 96, 97, 98, 99, 111, 112, 113, 165, 233, 235, 241, 297, 318], "sine": [269, 282, 283], "singl": [0, 4, 17, 20, 22, 49, 109, 149, 150, 151, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 195, 206, 212, 213, 214, 215, 216, 219, 237, 243, 259, 293, 302, 310, 312, 318], "singleton": 206, "singular": [13, 16, 17, 19, 21, 22], "sinh": [266, 273, 288], "size": [0, 1, 2, 3, 22, 38, 39, 40, 41, 45, 47, 48, 49, 77, 89, 91, 92, 95, 97, 111, 112, 113, 115, 118, 119, 120, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 179, 180, 181, 190, 192, 194, 195, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 236, 240, 243, 244, 245, 277, 278, 279, 286, 291, 293, 295, 302, 305, 306, 309, 311, 316, 318], "sk": [77, 78, 79, 80, 81, 91, 156], "sk_resnet_18": 91, "sk_resnet_34": 91, "sk_resnet_50": 91, "sk_resnext_50_32x4d": 91, "skblock": 77, "skip": [91, 235], "sknet": [37, 78, 79, 80, 81, 91], "slice": [123, 289], "slide": [115, 211, 213, 214, 216], "slight": 155, "slightli": 318, "slope": [105, 166, 170], "slow": [3, 228], "small": [19, 39, 40, 41, 44, 47, 48, 91, 105, 126, 127, 132, 134, 135, 170, 173, 194, 195, 196, 200, 201, 202, 203, 204, 205, 206, 212, 215, 222, 223, 224, 225, 226, 227, 228, 229, 230], "smaller": [89, 91, 97, 100, 218, 223, 224, 252, 309, 311, 316], "smallest": 279, "smooth": [32, 103, 166, 167, 176, 221, 229, 318], "smoother": 221, "so": [96, 97, 98, 99, 148, 218, 228, 259, 260, 307], "softmax": [104, 122, 156, 178, 189, 195], "softmaxmodel": 175, "solut": [19, 21], "solv": [11, 12, 15, 19, 20, 22], "solver": 11, "some": [102, 117, 148, 183, 184, 185, 200, 201, 202, 203, 204, 205, 223, 224, 225, 235, 237], "sometim": 234, "sophist": [97, 100], "sourc": 244, "space": [14, 20, 22, 111, 112, 113, 115, 136, 137, 138, 149, 150, 151, 152, 153, 154, 179, 180, 181, 208, 209, 210, 257, 318], "span": 4, "spars": [223, 224], "spatial": [23, 49, 60, 77, 82, 89, 91, 150, 155, 180, 181, 200, 201, 202, 203, 204, 205, 206, 212, 213, 214, 215, 216, 297], "spatial_dim": 155, "spatio": 181, "special": [0, 1, 10, 19, 93, 94, 95, 183, 244], "specif": [4, 10, 26, 27, 28, 29, 34, 42, 58, 59, 96, 97, 98, 99, 100, 156, 165, 183, 184, 185, 186, 187, 203, 204, 205, 218, 219, 233, 244, 259, 277, 279, 300, 304], "specifi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 18, 24, 25, 38, 45, 46, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 79, 80, 82, 83, 84, 85, 86, 88, 90, 92, 97, 109, 115, 120, 126, 127, 128, 130, 131, 135, 136, 137, 138, 147, 148, 155, 175, 179, 180, 181, 194, 195, 196, 197, 198, 206, 208, 209, 210, 212, 213, 214, 215, 216, 219, 237, 239, 240, 241, 242, 243, 255, 257, 258, 259, 260, 261, 262, 264, 265, 271, 277, 278, 279, 286, 290, 291, 292, 293, 295, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 314, 316, 318], "speech": 203, "speed": [47, 48, 168, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "split": [4, 293, 295, 306], "springer": 91, "sqrt": [103, 160, 161, 164, 165, 167, 200, 201, 202, 203, 204, 205, 206, 222, 223, 224, 225, 227, 228, 229, 266, 268, 269], "squar": [1, 3, 12, 13, 14, 16, 17, 19, 20, 21, 22, 128, 130, 196, 197, 222, 223, 224, 229, 266, 284], "squaredataset": [0, 1, 2, 3], "squeez": [44, 47, 48, 67, 70, 73, 74, 75, 76, 91, 155, 296], "stabil": [16, 19, 91, 126, 127, 132, 134, 135, 149, 150, 151, 172, 194, 195, 200, 201, 202, 203, 204, 205, 206, 221, 222, 223, 224, 225, 226, 227, 228, 229, 310], "stabl": [160, 161, 164, 165, 183, 195, 221, 225, 226, 229, 230, 231], "stack": [100, 156, 295, 296, 306, 318], "stage": [49, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 77, 78, 79, 80], "stage1": 67, "stage2": 67, "stage3": 67, "stage4": 67, "standalon": 172, "standard": [49, 58, 59, 103, 105, 152, 153, 154, 160, 162, 164, 166, 167, 170, 183, 230, 241, 244, 250, 307, 310, 318], "start": [1, 3, 221, 223, 230, 257, 309, 311], "state": [91, 93, 94, 95, 97, 100, 219, 233, 235, 242], "state_dict": [94, 95, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "static": 100, "statist": [19, 116, 132, 134], "std": [5, 6, 7, 8, 162, 307, 310, 318], "stem": [34, 49, 60, 77], "stem_typ": 49, "stem_width": 49, "step": [95, 115, 156, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235, 257, 307, 308], "step_siz": 230, "still": 222, "stochast": [10, 221, 231], "stop": 257, "storag": [96, 98, 245], "store": [2, 4, 5, 6, 7, 8, 49, 60, 77, 93, 94, 95, 96, 97, 98, 99, 155, 208, 209, 210, 235, 245, 309, 310, 311, 312, 313, 314, 315, 316], "str": [5, 6, 7, 8, 49, 82, 94, 96, 98, 100, 126, 127, 128, 130, 131, 147, 219, 236, 297], "straightforward": [231, 233, 246], "strategi": 220, "streamlin": [2, 3], "strict": [94, 219], "stride": [38, 39, 40, 41, 44, 47, 48, 97, 100, 111, 112, 113, 115, 136, 137, 138, 139, 140, 141, 143, 144, 145, 149, 150, 151, 152, 153, 154, 156, 179, 180, 181, 208, 209, 210, 211, 212, 213, 214, 215, 216], "stride_height": 115, "stride_width": 115, "string": [94, 96, 98, 100, 179, 180, 181, 219], "structur": [0, 10, 20, 44, 87, 93, 94, 97, 218, 219, 236, 237, 261, 308], "style": [34, 134, 203, 204, 297], "sub": [96, 97, 98, 99, 100, 218, 266, 309, 311], "sub_tensor": 245, "subclass": [1, 2, 3, 10, 94, 95, 96, 218, 219], "sublay": 92, "submodul": [92, 94, 218], "subsequ": [97, 100, 165, 244], "subset": [184, 185], "subtract": [10, 256, 310], "suffer": 223, "suit": [26, 27, 28, 29, 32, 42, 77, 160, 161, 164, 165], "suitabl": [34, 39, 40, 41, 43, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 69, 70, 72, 91, 196, 223, 224, 239], "sum": [18, 96, 97, 98, 99, 100, 109, 126, 127, 128, 130, 131, 156, 175, 194, 195, 196, 197, 198, 223, 246, 249, 254, 266, 289, 291, 293, 295, 297, 300, 304, 306], "sum_": [17, 109, 175, 194, 195, 197, 198, 200, 201, 202, 203, 204, 205, 206, 211, 212, 213, 248, 249, 278, 286, 289, 291, 297, 300], "sum_i": [18, 254], "sum_j": 254, "sum_k": 250, "summar": [58, 59, 87, 211, 212, 213], "summari": [58, 59, 73, 74, 75, 76, 81], "summat": 17, "sun": 155, "super": [10, 92, 93, 94, 95, 96, 97, 98, 99, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 190, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 206, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 236], "support": [1, 3, 4, 10, 11, 17, 18, 19, 20, 22, 45, 49, 96, 97, 98, 99, 100, 147, 148, 218, 220, 227, 244, 245, 246, 247, 250, 251, 252, 253, 255, 256, 258, 261, 271, 276, 278, 282, 284, 286, 289, 290, 291, 293, 297, 301, 308, 318], "suppos": 318, "sure": [218, 318], "svd": [15, 19], "swish": [47, 48, 178, 189], "symmetr": [12, 136, 137, 138, 164, 165, 177], "syntax": [1, 250], "system": [11, 12, 19, 20, 21, 91, 233, 297], "systemat": 318, "szegedi": [31, 91], "t": [19, 91, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235, 245, 250, 292, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318], "t0": 221, "t1": 292, "t2": 292, "tabular": 4, "tailor": [4, 44, 218, 318], "take": [20, 211, 212, 213, 214, 215, 216, 235, 307], "taken": 289, "tan": [91, 266], "tangent": [110, 177, 270, 287, 288], "tanh": [38, 97, 100, 103, 104, 122, 160, 161, 164, 165, 167, 178, 189, 266], "tanhnetwork": 177, "target": [5, 6, 7, 8, 100, 126, 127, 128, 130, 131, 136, 137, 138, 147, 194, 195, 196, 197, 198, 208, 209, 210, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 309, 311, 316], "target_tensor": [194, 195, 196, 197, 198], "target_transform": [5, 6, 7, 8], "task": [4, 10, 11, 23, 24, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 39, 40, 41, 42, 43, 44, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 81, 87, 91, 108, 109, 112, 123, 126, 127, 130, 131, 155, 156, 174, 175, 179, 180, 181, 194, 195, 196, 197, 198, 203, 204, 205, 211, 213, 214, 216, 224, 234, 244, 261, 318], "techniqu": [12, 16, 89, 132, 183, 184, 185, 186, 187, 203, 204, 205, 220, 316, 318], "tempor": [179, 181, 213, 216], "temporarili": 235, "tensor": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 61, 62, 63, 64, 65, 66, 67, 78, 79, 80, 82, 87, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 123, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 233, 235, 237, 239, 240, 241, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318], "term": [19, 123, 149, 150, 151, 152, 153, 154, 221, 225, 227, 228, 229, 231], "test": [4, 5, 6, 7, 8], "test_backward": 92, "test_siz": [5, 6, 7, 8], "text": [4, 13, 17, 18, 49, 60, 77, 78, 79, 80, 87, 96, 102, 105, 106, 107, 109, 111, 112, 113, 136, 137, 138, 139, 140, 141, 143, 144, 145, 149, 150, 151, 152, 153, 154, 155, 156, 160, 161, 164, 165, 166, 168, 169, 170, 171, 172, 173, 175, 176, 179, 180, 181, 183, 184, 185, 186, 187, 194, 195, 196, 197, 198, 211, 212, 213, 214, 215, 216, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 240, 246, 247, 249, 251, 252, 253, 255, 256, 267, 271, 277, 278, 279, 281, 286, 291, 293, 295, 298, 299, 300, 301, 302, 304, 305, 306, 309, 310, 311, 313, 314, 315], "th": [123, 194, 195, 197, 198, 203, 204, 205, 251, 252, 255], "than": [0, 1, 7, 98, 99, 102, 105, 128, 152, 153, 154, 166, 170, 176, 196, 219, 225, 271, 289, 298, 303, 309, 311, 316], "thei": [0, 10, 22, 91, 93, 97, 99, 100, 237, 297, 301, 309, 311, 318], "them": [3, 94, 99, 115, 221, 234, 293, 303, 307, 310, 318], "therebi": [183, 212, 213, 215, 216], "theta": [221, 222, 314], "theta_": [221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "theta_t": [228, 229], "thi": [0, 1, 2, 3, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 38, 42, 43, 44, 46, 47, 48, 49, 58, 59, 60, 61, 62, 63, 64, 65, 66, 73, 74, 75, 76, 77, 78, 79, 80, 81, 87, 91, 92, 93, 95, 97, 98, 99, 100, 106, 108, 109, 110, 111, 112, 113, 115, 123, 125, 136, 147, 148, 152, 153, 154, 155, 156, 160, 161, 164, 165, 166, 167, 168, 170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 206, 208, 211, 212, 213, 214, 215, 216, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 240, 241, 242, 244, 245, 249, 250, 254, 257, 259, 262, 263, 264, 265, 271, 275, 276, 277, 278, 279, 282, 284, 286, 289, 290, 291, 292, 298, 300, 301, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318], "thing": 235, "those": [10, 39, 40, 41, 99, 165], "three": [22, 41, 113, 138, 141, 145, 149, 150, 151, 181, 187, 202, 205, 210, 213, 216], "threshold": [19, 128, 196], "through": [0, 3, 4, 10, 14, 19, 20, 22, 23, 30, 34, 38, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 78, 79, 80, 88, 89, 96, 97, 100, 123, 125, 147, 155, 156, 166, 167, 168, 169, 170, 171, 173, 174, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 200, 201, 202, 203, 206, 211, 212, 213, 214, 215, 216, 241, 248, 249, 254, 297, 299, 301, 302, 305, 318], "throughout": [107, 308], "tile": 296, "time": [0, 3, 17, 39, 40, 41, 43, 111, 149, 170, 173, 179, 211, 212, 213, 214, 215, 216, 221, 222, 223, 224, 225, 229, 231, 235, 300, 304], "to_tensor": [5, 6, 7, 8], "togeth": [100, 307, 318], "too": 230, "tool": [3, 10, 218, 234, 244, 307, 318], "top": [12, 13, 14, 20, 22, 123, 125, 147, 179, 180, 181, 190, 192, 309, 311], "torch": [82, 292], "toronto": [5, 6], "total": [0, 1, 2, 5, 6, 7, 8, 24, 26, 27, 28, 29, 31, 32, 33, 35, 36, 39, 40, 41, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 88, 90, 92, 95, 245, 301], "totensor": [307, 318], "trace": [11, 266], "track": [10, 149, 150, 151, 200, 201, 202, 203, 204, 205, 218, 233, 235, 239, 240, 241, 243, 257, 258, 259, 260, 261, 262, 263, 264, 265, 292, 308], "track_running_stat": [149, 150, 151, 200, 201, 202, 203, 204, 205], "tradit": [7, 222, 223, 226, 227, 228], "trail": 135, "train": [1, 2, 3, 4, 5, 6, 7, 8, 10, 30, 31, 32, 73, 74, 75, 76, 81, 91, 92, 93, 94, 97, 99, 100, 109, 116, 117, 118, 119, 120, 132, 134, 148, 167, 170, 173, 174, 175, 177, 183, 184, 185, 186, 187, 200, 201, 202, 203, 204, 205, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235, 307, 310, 311, 312, 313, 314, 315, 318], "trainabl": [92, 200, 201, 202, 203, 204, 205, 218], "transact": 155, "transfer": [134, 203, 204], "transform": [2, 4, 5, 6, 7, 8, 10, 14, 91, 98, 123, 125, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 234, 297], "transform_pipelin": [307, 318], "transformed_imag": [307, 318], "transit": [25, 196], "translat": [212, 215], "transpos": [10, 12, 266], "treat": [0, 93, 206, 218], "triangular": [12, 20], "true": [1, 2, 3, 4, 5, 6, 7, 8, 22, 30, 31, 32, 47, 48, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 123, 125, 132, 134, 147, 149, 150, 151, 152, 153, 154, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 211, 212, 213, 214, 215, 216, 218, 219, 224, 225, 229, 233, 239, 240, 241, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308], "truncat": 92, "truncate_from": 92, "try": 0, "tune": 318, "tupl": [2, 3, 5, 6, 7, 8, 14, 20, 22, 25, 49, 92, 94, 95, 111, 112, 113, 115, 135, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 179, 180, 181, 191, 206, 209, 210, 211, 212, 213, 214, 215, 216, 224, 225, 226, 227, 228, 230, 237, 239, 240, 241, 243, 245, 259, 262, 264, 277, 278, 279, 286, 291, 293, 295, 297, 298, 301, 302, 303, 305, 306, 309, 310, 311, 316], "twice": 298, "two": [10, 13, 14, 16, 17, 19, 20, 22, 39, 40, 41, 44, 78, 82, 111, 112, 113, 123, 140, 144, 155, 156, 180, 186, 190, 201, 204, 212, 215, 224, 225, 226, 227, 228, 230, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 289, 297], "type": [38, 49, 67, 77, 93, 94, 95, 123, 190, 245, 257, 258, 259, 260, 261, 262, 263, 264, 265, 292, 297, 308], "typeerror": [0, 1, 2, 94, 219], "typic": [11, 49, 60, 77, 93, 109, 116, 148, 155, 172, 173, 175, 198, 200, 201, 202, 203, 204, 205, 220, 221, 229, 231, 235, 237, 305, 308, 310, 314, 316, 318], "u": [19, 22, 161, 163, 165], "u_": 226, "ultra": 55, "unchang": [93, 120, 166, 170, 171, 173, 183, 184, 185, 186, 187, 191, 299, 302], "undefin": 255, "under": [61, 62, 63, 64, 65, 66, 218], "underbrac": 17, "underdetermin": 19, "undergo": 318, "underli": [0, 10, 31, 32, 33, 35, 36, 292, 295, 299, 301, 306], "understand": [10, 89, 91, 92, 100, 318], "unexpect": [94, 97, 100, 244], "unfold": [114, 122], "unifi": 0, "uniform": [159, 161, 165, 179, 180, 181, 190, 192, 238, 239, 240, 244, 312, 313, 314, 315], "uniformli": [239, 243], "uniniti": [259, 260], "unintend": 235, "union": 82, "uniqu": [12, 19, 21, 96, 98], "unit": [23, 38, 89, 102, 103, 105, 106, 107, 160, 161, 164, 165, 166, 167, 170, 171, 173, 183], "unless": [50, 51, 52, 53, 54, 55, 56, 57, 68, 69, 70, 71, 72, 245], "unlik": [93, 96, 97, 98, 99, 105, 166, 170, 183, 206, 222, 223, 225, 226, 227, 228, 230], "unnecessari": 235, "unpad": 298, "unseen": 318, "unsqueez": 296, "unstabl": 16, "up": [219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 314, 316], "updat": [4, 93, 99, 100, 183, 184, 185, 186, 187, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235], "upon": [32, 44, 91, 96, 97, 98, 99], "upper": [20, 163, 230, 243], "us": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 17, 19, 20, 22, 25, 30, 31, 32, 33, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 123, 125, 130, 132, 134, 137, 138, 147, 148, 149, 150, 151, 155, 156, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 233, 234, 235, 236, 239, 240, 241, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 275, 277, 278, 279, 286, 291, 297, 298, 300, 302, 304, 305, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318], "usag": [3, 11, 25, 87, 97, 100, 152, 153, 154, 219, 220, 309, 310, 311, 312, 313, 314, 315, 316], "use_aux": [30, 31, 32], "use_h": [47, 48], "use_s": [47, 48], "user": [1, 2, 3, 4, 10, 96, 97, 98, 99, 218, 223, 307, 308, 318], "usual": 195, "util": [3, 10, 11, 78, 79, 80, 98, 99, 218, 244], "v": [14, 19, 22, 91, 224, 225, 227, 228, 258], "v1": [30, 31, 34, 35, 36, 42, 43, 91], "v2": [34, 36, 37, 43, 44, 46, 91], "v3": [30, 32, 33, 37, 44, 47, 48, 91], "v4": [30, 33, 91], "v_": [221, 224, 225, 227, 228, 229, 231], "v_stack": 306, "v_t": [228, 229], "val": 158, "valid": [149, 150, 151, 152, 153, 154, 156, 179, 180, 181, 290], "valu": [10, 13, 17, 18, 19, 22, 42, 58, 59, 92, 94, 96, 98, 100, 102, 105, 108, 109, 110, 111, 112, 113, 115, 126, 127, 128, 130, 131, 132, 134, 135, 136, 147, 148, 149, 150, 151, 155, 158, 160, 161, 162, 163, 164, 165, 166, 170, 171, 172, 173, 174, 177, 183, 184, 185, 186, 187, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 211, 212, 213, 214, 215, 216, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 237, 239, 240, 241, 242, 243, 244, 257, 258, 259, 260, 261, 267, 268, 269, 271, 274, 275, 276, 277, 279, 281, 282, 284, 285, 293, 298, 299, 301, 305, 310, 312, 313, 315], "valuabl": 244, "valueerror": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 219], "van": 91, "vanish": [91, 166, 173, 200, 201, 202], "var": 266, "vari": [77, 97, 99, 136, 147, 208, 314], "variabl": [94, 100, 136, 137, 138, 191, 208, 209, 210, 218, 233, 235, 239, 259, 311, 314], "varianc": [107, 116, 132, 134, 149, 150, 151, 160, 161, 164, 165, 173, 183, 200, 201, 202, 203, 204, 205, 206, 224, 225, 226, 227, 228, 241, 291, 314, 318], "variant": [25, 26, 27, 28, 29, 44, 47, 48, 58, 59, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 224, 225, 226], "variat": [152, 153, 154, 203, 204, 205, 311, 318], "varieti": [4, 34, 244, 318], "variou": [7, 25, 30, 35, 36, 38, 45, 91, 171, 220, 244, 277, 279, 298, 308], "vasudevan": 91, "vdot": 254, "vector": [14, 19, 20, 21, 22, 123, 125, 190, 192, 248, 249, 250, 254], "veloc": [221, 229, 231], "veri": [19, 52, 54, 91, 222], "versa": 230, "versatil": [244, 297], "version": [22, 30, 34, 38, 39, 40, 229, 254, 312], "vertic": [303, 306, 315], "vgg": 82, "vggnet": [37, 83, 84, 85, 86, 91], "vggnet_11": 91, "vggnet_13": 91, "vggnet_16": 91, "vggnet_19": 91, "via": [3, 4, 77], "vice": 230, "video": [113, 120, 151, 181, 205, 213, 216], "view": [34, 38, 97, 212, 213, 214, 215, 216, 301], "vinod": [5, 6], "vision": [42, 43, 46, 49, 91, 112, 180, 190, 318], "visual": [89, 91], "vol": 91, "vollgraf": 7, "volumetr": [113, 120, 151, 181, 205, 213, 216], "vstack": 296, "w": [49, 61, 62, 63, 64, 65, 66, 78, 79, 80, 91, 112, 113, 115, 119, 120, 123, 125, 137, 138, 140, 141, 144, 145, 147, 148, 150, 151, 155, 179, 180, 181, 190, 192, 201, 202, 204, 205, 209, 210, 213, 216, 309, 311], "w_": [112, 113, 137, 138, 140, 141, 144, 145, 147, 180, 181, 209, 210, 212, 213, 215, 216], "w_out": [112, 113, 140, 141, 144, 145], "wa": [31, 183, 184, 185, 186, 187, 235], "wai": [1, 24, 90, 233, 235, 301], "wang": 91, "want": [0, 10, 307, 309], "warn": [96, 98], "we": [3, 10, 234, 297], "weight": [50, 51, 52, 53, 54, 55, 56, 57, 68, 69, 70, 71, 72, 91, 111, 112, 113, 123, 125, 126, 127, 131, 132, 134, 135, 147, 155, 156, 160, 161, 164, 165, 179, 180, 181, 183, 184, 185, 186, 187, 190, 192, 194, 195, 198, 200, 201, 202, 203, 204, 205, 206, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 239, 244], "weight1": 98, "weight2": 98, "weight_decai": [221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "weinberg": 91, "well": [26, 27, 28, 29, 32, 77, 160, 161], "were": 100, "weyand": 91, "what": 235, "when": [0, 1, 3, 10, 17, 94, 97, 99, 100, 102, 105, 111, 112, 113, 166, 191, 200, 201, 202, 203, 204, 205, 219, 222, 230, 233, 235, 236, 237, 244, 255, 307, 309], "where": [3, 4, 5, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 22, 47, 48, 87, 91, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 118, 119, 120, 123, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 155, 156, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 211, 212, 213, 214, 215, 216, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235, 237, 244, 246, 247, 251, 252, 253, 255, 256, 259, 260, 271, 275, 276, 277, 278, 279, 282, 284, 286, 289, 290, 291, 293, 298, 300, 304, 307, 308, 309, 310, 311, 312, 313, 314, 315], "whether": [1, 13, 30, 31, 32, 47, 48, 94, 95, 160, 161, 229, 233, 239, 240, 241, 243, 245, 259, 260, 277, 278, 279, 286, 291], "which": [0, 7, 10, 13, 14, 16, 17, 18, 19, 20, 22, 33, 36, 42, 43, 45, 73, 74, 75, 76, 77, 81, 83, 84, 85, 86, 91, 94, 96, 98, 100, 105, 109, 128, 148, 152, 153, 154, 156, 166, 167, 170, 172, 175, 177, 183, 196, 198, 200, 201, 202, 203, 204, 205, 206, 224, 225, 227, 229, 233, 235, 237, 239, 240, 243, 268, 269, 270, 271, 272, 273, 276, 277, 278, 279, 280, 282, 283, 284, 286, 287, 288, 289, 291, 293, 300, 301, 303, 305, 308, 309, 311, 312, 313, 314, 315, 316, 318], "while": [10, 36, 42, 60, 61, 62, 63, 64, 65, 66, 73, 74, 75, 76, 81, 91, 97, 100, 116, 167, 171, 172, 218, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 235, 301, 303, 312, 318], "who": [10, 96, 97, 98, 99], "whose": [22, 260, 263, 265, 267, 271, 275, 281], "wide": [4, 5, 6, 8, 11, 19, 49, 57, 58, 59, 91, 106, 171, 179, 180, 195], "wide_resnet_101": 91, "wide_resnet_50": 91, "wider": [58, 59, 111, 112], "wideresnet": 91, "width": [42, 45, 58, 59, 60, 61, 62, 63, 64, 65, 66, 77, 87, 112, 113, 115, 119, 120, 137, 138, 140, 141, 144, 145, 147, 148, 156, 180, 181, 201, 202, 204, 205, 209, 210, 212, 213, 215, 216, 309, 311, 316], "width_multipli": [42, 45], "window": [139, 140, 141, 143, 144, 145, 211, 212, 213, 214, 215, 216, 222, 277, 279], "wise": [71, 73, 74, 75, 76, 91, 102, 103, 105, 106, 107, 108, 109, 110, 149, 150, 151, 155, 169, 175, 176, 183, 184, 185, 186, 187, 218, 234, 246, 247, 250, 251, 252, 253, 255, 256, 267, 268, 269, 270, 271, 272, 273, 274, 276, 280, 281, 282, 283, 284, 285, 287, 288, 289, 295, 306], "within": [2, 91, 92, 93, 96, 97, 98, 99, 100, 110, 147, 148, 165, 167, 168, 169, 171, 173, 174, 176, 177, 179, 180, 181, 183, 184, 185, 191, 194, 195, 196, 197, 198, 200, 201, 202, 203, 206, 211, 212, 213, 214, 215, 216, 220, 235, 257, 271, 314, 318], "without": [10, 60, 96, 97, 98, 123, 125, 179, 180, 181, 190, 192, 233, 236, 277, 299, 301, 305], "won": 235, "work": [1, 2, 3, 10, 12, 234, 237], "workflow": [244, 318], "workload": 10, "wrap": [3, 218, 235, 292], "wrapper": 218, "www": [5, 6], "x": [10, 11, 21, 34, 38, 67, 82, 87, 91, 92, 93, 94, 96, 97, 98, 99, 100, 109, 123, 125, 148, 152, 153, 154, 156, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 211, 212, 213, 214, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 239, 240, 241, 243, 259, 260, 275, 297, 309, 310, 311, 312, 313, 314, 315, 316], "x1": 190, "x2": 190, "x_": [195, 198, 297], "x_c": [195, 198], "x_i": 194, "x_k": 195, "xavier": [160, 161, 164, 165], "xavier_norm": 159, "xavier_uniform": 159, "xception": [37, 91], "xiao": 7, "xie": 91, "xy": 297, "x\u2081": 190, "x\u2082": 190, "y": [87, 91, 96, 97, 98, 99, 100, 148, 152, 153, 154, 166, 167, 168, 169, 170, 171, 173, 174, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 211, 212, 213, 214, 215, 216, 239, 240, 241, 243, 259, 260, 297, 312], "y_": [195, 198, 297], "y_c": [195, 198], "y_i": 194, "yann": [8, 91], "yet": [10, 234], "yield": [0, 1, 94, 235], "you": [0, 44, 92, 97, 99, 100, 218, 220, 233, 235, 244, 259, 260, 261, 265, 290, 292, 307, 309, 318], "your": [44, 218, 220, 233, 235, 244, 318], "z": [91, 260, 264, 265], "zalandoresearch": 7, "zeiler": [89, 91], "zero": [17, 19, 20, 32, 92, 102, 105, 111, 112, 113, 116, 117, 118, 119, 120, 139, 140, 141, 143, 144, 145, 158, 160, 161, 162, 163, 164, 165, 166, 168, 170, 171, 173, 179, 180, 181, 183, 184, 185, 186, 187, 206, 211, 212, 213, 214, 215, 216, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 259, 260, 261, 265, 266, 271, 281, 298], "zero_grad": [95, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 245], "zeros_lik": [260, 266], "zfnet": [37, 91], "zhang": 91, "zhmoginov": 91, "zhu": 91, "zisserman": 91, "\u03c3\u1d62": 19}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "CIFAR10", "CIFAR100", "FashionMNIST", "MNIST", "Image Datasets", "Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "alexnet", "DenseNet", "densenet_121", "densenet_169", "densenet_201", "densenet_264", "Inception", "inception_v1", "inception_v3", "inception_v4", "InceptionResNet", "inception_resnet_v1", "inception_resnet_v2", "ConvNets", "LeNet", "lenet_1", "lenet_4", "lenet_5", "MobileNet", "MobileNet_V2", "MobileNet_V3", "mobilenet", "mobilenet_v2", "mobilenet_v3_large", "mobilenet_v3_small", "ResNet", "resnet_1001", "resnet_101", "resnet_152", "resnet_18", "resnet_200", "resnet_269", "resnet_34", "resnet_50", "wide_resnet_101", "wide_resnet_50", "ResNeXt", "resnext_101_32x16d", "resnext_101_32x32d", "resnext_101_32x4d", "resnext_101_32x8d", "resnext_101_64x4d", "resnext_50_32x4d", "SENet", "se_resnet_101", "se_resnet_152", "se_resnet_18", "se_resnet_34", "se_resnet_50", "se_resnext_101_32x4d", "se_resnext_101_32x8d", "se_resnext_101_64x4d", "se_resnext_50_32x4d", "SKNet", "sk_resnet_18", "sk_resnet_34", "sk_resnet_50", "sk_resnext_50_32x4d", "VGGNet", "vggnet_11", "vggnet_13", "vggnet_16", "vggnet_19", "Xception", "xception", "ZFNet", "zfnet", "lucid.models", "models.summarize", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "nn.DepthSeparableConv1d", "nn.DepthSeparableConv2d", "nn.DepthSeparableConv3d", "nn.SEModule", "nn.SelectiveKernel", "Fused Layers", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.HardSigmoid", "nn.HardSwish", "nn.LeakyReLU", "nn.ReLU", "nn.ReLU6", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Swish", "nn.Tanh", "Activation Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "lucid.nn", "optim.Optimizer", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.types", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.meshgrid", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.unsqueeze", "lucid.vstack", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": 234, "1d": 234, "2": 234, "2d": 234, "3": 234, "It": [233, 235], "ab": 267, "activ": [104, 122, 178, 189], "ad": 234, "adadelta": 222, "adagrad": 223, "adam": 224, "adamax": 226, "adamw": 225, "adaptive_avg_pool1d": 136, "adaptive_avg_pool2d": 137, "adaptive_avg_pool3d": 138, "adaptiveavgpool1d": 208, "adaptiveavgpool2d": 209, "adaptiveavgpool3d": 210, "add": 246, "addit": 19, "admonit": 237, "advanc": [115, 318], "alexnet": [23, 24], "algebra": 15, "algorithm": [221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "alias": 237, "align": 234, "alpha_dropout": 116, "alphadropout": 183, "also": 220, "anoth": 292, "arang": 257, "arcco": 268, "architectur": [23, 39, 40, 41, 58, 59, 89], "arcsin": 269, "arctan": 270, "asgd": 221, "attent": 156, "attribut": [5, 6, 7, 8, 23, 34, 38, 49, 60, 67, 77, 82, 87, 89, 93, 95, 96, 97, 98, 99, 100, 149, 150, 151, 152, 153, 154, 155, 166, 167, 170, 171, 173, 174, 175, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 245, 309, 310, 311, 312, 313, 314, 315, 316], "avg_pool1d": 139, "avg_pool2d": 140, "avg_pool3d": 141, "avgpool1d": 211, "avgpool2d": 212, "avgpool3d": 213, "axi": 234, "backpropag": 245, "backward": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 123, 125, 147, 155, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 211, 212, 213, 214, 215, 216, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306], "batch_norm": 132, "batchnorm": 157, "batchnorm1d": 200, "batchnorm2d": 201, "batchnorm3d": 202, "bceloss": 194, "behavior": [136, 137, 138, 208, 209, 210], "benefit": 235, "bilinear": [123, 190], "binari": 266, "binary_cross_entropi": 126, "bottleneck": [47, 48], "broadcast": 234, "buffer": 93, "calcul": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 49, 60, 67, 77, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 115, 123, 125, 136, 137, 138, 147, 149, 150, 151, 152, 153, 154, 155, 156, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 310, 311, 312, 313, 314, 315, 316], "captur": 236, "case": 237, "centercrop": 309, "choleski": 12, "cifar10": 5, "cifar100": 6, "class": [0, 1, 2, 5, 6, 7, 8, 23, 25, 30, 34, 38, 42, 43, 44, 49, 60, 67, 77, 82, 87, 89, 93, 94, 95, 96, 97, 98, 99, 100, 149, 150, 151, 152, 153, 154, 155, 156, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 245, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316], "clip": 271, "co": 272, "combin": 0, "compon": [3, 10, 218], "compos": 307, "concatdataset": [0, 1], "concaten": 293, "conclus": [3, 10, 218, 233, 234, 235, 244, 308, 318], "configur": [47, 48], "constant": 158, "contain": 101, "conv": 157, "conv1d": [111, 179], "conv2d": [112, 180], "conv3d": [113, 181], "convbnrelu1d": 149, "convbnrelu2d": 150, "convbnrelu3d": 151, "convnet": [37, 91], "convolut": [114, 122, 157, 182, 189], "core": 10, "cosh": 273, "creat": [95, 245, 292], "cross_entropi": 127, "crossentropyloss": 195, "cube": 274, "custom": [1, 2, 3, 94, 219, 220, 318], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 9], "defin": [2, 94, 219, 220], "definit": 237, "densenet": 25, "densenet_121": 26, "densenet_169": 27, "densenet_201": 28, "densenet_264": 29, "depthseparableconv1d": 152, "depthseparableconv2d": 153, "depthseparableconv3d": 154, "depthwis": 157, "descript": [61, 62, 63, 64, 65, 66, 78, 79, 80, 236], "det": 13, "detail": [19, 58, 59], "diag": 258, "dilat": 115, "div": 247, "dot": 248, "dropout": [117, 121, 122, 184, 188, 189], "dropout1d": [118, 185], "dropout2d": [119, 186], "dropout3d": [120, 187], "eig": 14, "elu": [102, 166], "empti": 259, "empty_lik": 260, "exampl": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 35, 36, 38, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 123, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318], "excit": 157, "exp": 275, "ey": 261, "fashionmnist": 7, "featur": [4, 10, 11, 73, 74, 75, 76, 81, 220, 244, 318], "flatten": 294, "forward": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 49, 60, 67, 77, 87, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 115, 123, 125, 136, 137, 138, 147, 149, 150, 151, 152, 153, 154, 155, 156, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 309, 310, 311, 312, 313, 314, 315, 316], "from": 292, "function": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 31, 32, 33, 35, 36, 39, 40, 41, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 88, 90, 92, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 158, 160, 161, 162, 163, 164, 165, 233, 235, 236, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306], "fuse": 157, "futur": 4, "gelu": [103, 167], "gener": [238, 266], "get": 220, "grad_en": 233, "gradient": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 123, 125, 147, 155, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 211, 212, 213, 214, 215, 216, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 293, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306], "guidelin": 237, "hardsigmoid": 168, "hardswish": 169, "how": [233, 235], "hstack": 295, "huber_loss": 128, "huberloss": 196, "ident": 191, "imag": [9, 317], "incept": 30, "inception_resnet_v1": 35, "inception_resnet_v2": 36, "inception_v1": 31, "inception_v3": 32, "inception_v4": 33, "inceptionresnet": 34, "index": 245, "init": [158, 160, 161, 162, 163, 164, 165], "initi": 159, "inner": 249, "input": 292, "inspect": [220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "instance_norm": 134, "instancenorm1d": 203, "instancenorm2d": 204, "instancenorm3d": 205, "integr": [3, 218, 244, 318], "interpol": 147, "inv": 16, "iter": 245, "kaiming_norm": 160, "kaiming_uniform": 161, "kei": [3, 4, 10, 73, 74, 75, 76, 81, 218, 220, 244, 318], "kernel": 157, "layer": [157, 178, 182, 188, 189, 193, 199, 207, 217], "layer_norm": 135, "layernorm": 206, "leaky_relu": 105, "leakyrelu": 170, "learn": 244, "lenet": 38, "lenet_1": 39, "lenet_4": 40, "lenet_5": 41, "limit": 10, "linalg": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22], "linear": [15, 122, 124, 125, 189, 192, 193], "list": 292, "load": 1, "log": 276, "loss": [122, 129, 189, 199], "lucid": [3, 4, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 91, 122, 218, 220, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 318], "matmul": 250, "matrix": 250, "matrix_pow": 17, "max": 277, "max_pool1d": 143, "max_pool2d": 144, "max_pool3d": 145, "maximum": 251, "maxpool1d": 214, "maxpool2d": 215, "maxpool3d": 216, "mean": 278, "mechan": 156, "meshgrid": 297, "metadata": 236, "method": [0, 1, 2, 5, 6, 7, 8, 34, 38, 82, 94, 95, 219, 245], "min": 279, "minimum": 252, "mnist": 8, "mobilenet": [42, 45], "mobilenet_v2": [43, 46], "mobilenet_v3": 44, "mobilenet_v3_larg": 47, "mobilenet_v3_smal": 48, "model": [91, 92, 218], "modul": [94, 189], "moduledict": 96, "modulelist": 97, "more": 244, "mse_loss": 130, "mseloss": 197, "mul": 253, "multipl": [0, 250], "nadam": 227, "new": 234, "newaxi": 234, "nll_loss": 131, "nllloss": 198, "nn": [93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 122, 123, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218], "no_grad": 235, "norm": 18, "normal": [122, 133, 162, 189, 207, 310], "note": 10, "number": 238, "ones": 262, "ones_lik": 263, "oper": [15, 250, 266], "optim": [219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232], "organ": 218, "outer": 254, "overview": [3, 4, 10, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 50, 51, 52, 53, 54, 55, 56, 57, 68, 69, 70, 71, 72, 218, 220, 244, 318], "pad": 298, "paramet": [1, 5, 6, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 123, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 173, 174, 175, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 235, 236, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316], "parameterdict": 98, "parameterlist": 99, "pass": 87, "perform": 245, "pinv": 19, "pipelin": [3, 318], "pitfal": [233, 235], "pool": [122, 142, 189, 217], "potenti": [233, 235], "power": 255, "properti": [95, 245], "qr": 20, "radam": 228, "rais": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22], "rand": 239, "randint": 240, "randn": 241, "random": [238, 239, 240, 241, 242, 243, 244], "randomcrop": 311, "randomgrayscal": 312, "randomhorizontalflip": 313, "randomrot": 314, "randomverticalflip": 315, "ravel": 299, "reciproc": 280, "refer": [5, 6, 7, 8, 155, 220], "register_model": 236, "relu": [106, 157, 171], "relu6": 172, "repeat": 300, "reshap": 301, "resiz": 316, "resnet": 49, "resnet_1001": 50, "resnet_101": 51, "resnet_152": 52, "resnet_18": 53, "resnet_200": 54, "resnet_269": 55, "resnet_34": 56, "resnet_50": 57, "resnext": 60, "resnext_101_32x16d": 61, "resnext_101_32x32d": 62, "resnext_101_32x4d": 63, "resnext_101_32x8d": 64, "resnext_101_64x4d": 65, "resnext_50_32x4d": 66, "return": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 31, 32, 33, 35, 36, 39, 40, 41, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 88, 90, 92, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 123, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 156, 158, 160, 161, 162, 163, 164, 165, 172, 233, 235, 239, 240, 241, 242, 243, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306], "rmsprop": 229, "rotat": 148, "rprop": 230, "rule": 250, "se_resnet_101": 68, "se_resnet_152": 69, "se_resnet_18": 70, "se_resnet_34": 71, "se_resnet_50": 72, "se_resnext_101_32x4d": 73, "se_resnext_101_32x8d": 74, "se_resnext_101_64x4d": 75, "se_resnext_50_32x4d": 76, "see": 220, "seed": 242, "select": 157, "selectivekernel": 156, "selu": [107, 173], "semodul": 155, "senet": 67, "separ": 157, "sequenti": 100, "sgd": 231, "sigmoid": [108, 174], "sign": 281, "signatur": [0, 1, 2, 5, 6, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 119, 120, 123, 125, 126, 127, 128, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 180, 181, 183, 184, 185, 186, 187, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316], "sin": 282, "sinh": 283, "sk_resnet_18": 78, "sk_resnet_34": 79, "sk_resnet_50": 80, "sk_resnext_50_32x4d": 81, "sknet": 77, "slice": 245, "softmax": [109, 175], "solv": 21, "sqrt": 284, "squar": 285, "squeez": [157, 302], "stack": 303, "start": 220, "state": [220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "sub": 256, "sum": 286, "summar": 92, "summari": 92, "svd": 22, "swish": 176, "tabl": 92, "tan": 287, "tanh": [110, 177, 288], "tensor": [234, 245, 266, 292, 296], "through": 245, "tile": 304, "totensor": 308, "trace": 289, "track": 245, "transform": [307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318], "transpos": 290, "type": 237, "unari": 266, "unfold": 115, "uniform": [163, 243], "unsqueez": 305, "us": [1, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 237, 292], "usag": [4, 10, 31, 32, 33, 35, 36, 38, 39, 40, 41, 73, 74, 75, 76, 81, 93, 148, 233, 234, 235, 237, 297, 307, 308, 318], "util": [122, 146], "utilit": 296, "var": 291, "vggnet": 82, "vggnet_11": 83, "vggnet_13": 84, "vggnet_16": 85, "vggnet_19": 86, "vstack": 306, "weight": 159, "why": 237, "wide_resnet_101": 58, "wide_resnet_50": 59, "work": [4, 233, 235], "xavier_norm": 164, "xavier_uniform": 165, "xception": [87, 88], "zero": 264, "zeros_lik": 265, "zfnet": [89, 90]}})