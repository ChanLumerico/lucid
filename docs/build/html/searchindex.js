Search.setIndex({"alltitles": {"1-D ascending": [[547, null]], "@ Operator": [[491, "operator"]], "About Dagger (^\\dagger) Variants": [[61, "about-dagger-dagger-variants"], [63, "about-dagger-dagger-variants"], [65, "about-dagger-dagger-variants"]], "Accessing metadata & categories": [[594, "accessing-metadata-categories"]], "Activation Functions": [[278, null], [303, null]], "Activation Layers": [[372, null], [394, null]], "Additional Details": [[29, "additional-details"]], "Additional Notes": [[4, "additional-notes"]], "Additional Options": [[373, "additional-options"]], "Advanced Example with Dilation": [[294, "advanced-example-with-dilation"]], "Advanced Features": [[590, "advanced-features"]], "Advantages": [[14, "advantages"], [17, "advantages"], [18, "advantages"], [19, "advantages"], [392, "advantages"]], "AlexNet": [[33, null], [112, "alexnet"], [593, "alexnet"]], "Algorithm": [[457, "algorithm"], [458, "algorithm"], [459, "algorithm"], [460, "algorithm"], [461, "algorithm"], [462, "algorithm"], [463, "algorithm"], [464, "algorithm"], [465, "algorithm"], [466, "algorithm"], [467, "algorithm"]], "Along axis, keeping dims": [[546, null]], "Architectural Differences": [[254, "architectural-differences"]], "Architectural Improvements": [[261, "architectural-improvements"]], "Architecture": [[33, "architecture"], [44, "architecture"], [59, "architecture"], [96, "architecture"], [114, "architecture"], [115, "architecture"], [116, "architecture"], [117, "architecture"], [217, "architecture"], [235, "architecture"], [239, "architecture"], [240, "architecture"]], "Architecture Details": [[168, "architecture-details"], [169, "architecture-details"]], "Attention Functions": [[285, null], [303, null]], "Attention Layers": [[375, null], [394, null]], "Attention Mechanism": [[286, "attention-mechanism"], [349, "attention-mechanism"]], "Attributes": [[3, "attributes"], [9, "attributes"], [10, "attributes"], [11, "attributes"], [12, "attributes"], [33, "attributes"], [109, "attributes"], [113, "attributes"], [159, "attributes"], [170, "attributes"], [177, "attributes"], [187, "attributes"], [204, "attributes"], [215, "attributes"], [217, "attributes"], [255, "attributes"], [258, "attributes"], [261, "attributes"], [267, "attributes"], [269, "attributes"], [270, "attributes"], [271, "attributes"], [272, "attributes"], [273, "attributes"], [274, "attributes"], [342, "attributes"], [343, "attributes"], [344, "attributes"], [345, "attributes"], [346, "attributes"], [347, "attributes"], [348, "attributes"], [359, "attributes"], [360, "attributes"], [363, "attributes"], [365, "attributes"], [367, "attributes"], [368, "attributes"], [369, "attributes"], [371, "attributes"], [376, "attributes"], [377, "attributes"], [378, "attributes"], [379, "attributes"], [380, "attributes"], [381, "attributes"], [384, "attributes"], [386, "attributes"], [387, "attributes"], [388, "attributes"], [389, "attributes"], [390, "attributes"], [395, "attributes"], [397, "attributes"], [398, "attributes"], [400, "attributes"], [401, "attributes"], [402, "attributes"], [403, "attributes"], [404, "attributes"], [405, "attributes"], [407, "attributes"], [408, "attributes"], [409, "attributes"], [411, "attributes"], [412, "attributes"], [413, "attributes"], [414, "attributes"], [415, "attributes"], [417, "attributes"], [418, "attributes"], [419, "attributes"], [420, "attributes"], [421, "attributes"], [422, "attributes"], [423, "attributes"], [424, "attributes"], [425, "attributes"], [426, "attributes"], [427, "attributes"], [428, "attributes"], [469, "attributes"], [486, "attributes"], [581, "attributes"], [582, "attributes"], [583, "attributes"], [584, "attributes"], [585, "attributes"], [586, "attributes"], [587, "attributes"], [588, "attributes"]], "Automatic Differentiation (Autodiff)": [[20, "automatic-differentiation-autodiff"]], "Axis Swapping Rules": [[538, "axis-swapping-rules"]], "Backbone Network": [[226, "backbone-network"]], "Backpropagation": [[411, null]], "Backward Gradient Calculation": [[22, "backward-gradient-calculation"], [23, "backward-gradient-calculation"], [24, "backward-gradient-calculation"], [26, "backward-gradient-calculation"], [27, "backward-gradient-calculation"], [28, "backward-gradient-calculation"], [29, "backward-gradient-calculation"], [30, "backward-gradient-calculation"], [31, "backward-gradient-calculation"], [32, "backward-gradient-calculation"], [270, "backward-gradient-calculation"], [271, "backward-gradient-calculation"], [272, "backward-gradient-calculation"], [273, "backward-gradient-calculation"], [274, "backward-gradient-calculation"], [276, "backward-gradient-calculation"], [277, "backward-gradient-calculation"], [279, "backward-gradient-calculation"], [280, "backward-gradient-calculation"], [281, "backward-gradient-calculation"], [282, "backward-gradient-calculation"], [283, "backward-gradient-calculation"], [284, "backward-gradient-calculation"], [296, "backward-gradient-calculation"], [304, "backward-gradient-calculation"], [306, "backward-gradient-calculation"], [334, "backward-gradient-calculation"], [339, "backward-gradient-calculation"], [348, "backward-gradient-calculation"], [358, "backward-gradient-calculation"], [359, "backward-gradient-calculation"], [360, "backward-gradient-calculation"], [361, "backward-gradient-calculation"], [362, "backward-gradient-calculation"], [363, "backward-gradient-calculation"], [364, "backward-gradient-calculation"], [365, "backward-gradient-calculation"], [367, "backward-gradient-calculation"], [368, "backward-gradient-calculation"], [369, "backward-gradient-calculation"], [370, "backward-gradient-calculation"], [371, "backward-gradient-calculation"], [376, "backward-gradient-calculation"], [377, "backward-gradient-calculation"], [378, "backward-gradient-calculation"], [379, "backward-gradient-calculation"], [380, "backward-gradient-calculation"], [381, "backward-gradient-calculation"], [384, "backward-gradient-calculation"], [387, "backward-gradient-calculation"], [388, "backward-gradient-calculation"], [389, "backward-gradient-calculation"], [390, "backward-gradient-calculation"], [395, "backward-gradient-calculation"], [396, "backward-gradient-calculation"], [397, "backward-gradient-calculation"], [398, "backward-gradient-calculation"], [400, "backward-gradient-calculation"], [401, "backward-gradient-calculation"], [402, "backward-gradient-calculation"], [403, "backward-gradient-calculation"], [404, "backward-gradient-calculation"], [405, "backward-gradient-calculation"], [407, "backward-gradient-calculation"], [408, "backward-gradient-calculation"], [409, "backward-gradient-calculation"], [412, "backward-gradient-calculation"], [413, "backward-gradient-calculation"], [414, "backward-gradient-calculation"], [415, "backward-gradient-calculation"], [423, "backward-gradient-calculation"], [424, "backward-gradient-calculation"], [425, "backward-gradient-calculation"], [426, "backward-gradient-calculation"], [427, "backward-gradient-calculation"], [428, "backward-gradient-calculation"], [487, "backward-gradient-calculation"], [488, "backward-gradient-calculation"], [489, "backward-gradient-calculation"], [490, "backward-gradient-calculation"], [491, "backward-gradient-calculation"], [492, "backward-gradient-calculation"], [493, "backward-gradient-calculation"], [494, "backward-gradient-calculation"], [495, "backward-gradient-calculation"], [496, "backward-gradient-calculation"], [497, "backward-gradient-calculation"], [498, "backward-gradient-calculation"], [512, "backward-gradient-calculation"], [513, "backward-gradient-calculation"], [514, "backward-gradient-calculation"], [515, "backward-gradient-calculation"], [517, "backward-gradient-calculation"], [518, "backward-gradient-calculation"], [519, "backward-gradient-calculation"], [520, "backward-gradient-calculation"], [521, "backward-gradient-calculation"], [522, "backward-gradient-calculation"], [523, "backward-gradient-calculation"], [525, "backward-gradient-calculation"], [526, "backward-gradient-calculation"], [527, "backward-gradient-calculation"], [528, "backward-gradient-calculation"], [529, "backward-gradient-calculation"], [530, "backward-gradient-calculation"], [532, "backward-gradient-calculation"], [533, "backward-gradient-calculation"], [534, "backward-gradient-calculation"], [535, "backward-gradient-calculation"], [536, "backward-gradient-calculation"], [537, "backward-gradient-calculation"], [538, "backward-gradient-calculation"], [539, "backward-gradient-calculation"], [540, "backward-gradient-calculation"], [541, "backward-gradient-calculation"], [542, "backward-gradient-calculation"], [543, "backward-gradient-calculation"], [548, "backward-gradient-calculation"], [550, "backward-gradient-calculation"], [556, "backward-gradient-calculation"], [559, "backward-gradient-calculation"], [561, "backward-gradient-calculation"], [562, "backward-gradient-calculation"], [563, "backward-gradient-calculation"], [564, "backward-gradient-calculation"], [568, "backward-gradient-calculation"], [569, "backward-gradient-calculation"], [570, "backward-gradient-calculation"], [572, "backward-gradient-calculation"], [573, "backward-gradient-calculation"], [574, "backward-gradient-calculation"], [576, "backward-gradient-calculation"], [577, "backward-gradient-calculation"]], "Backward Propagation": [[255, "backward-propagation"], [258, "backward-propagation"], [261, "backward-propagation"]], "Base Class": [[455, null]], "Basic Installation": [[20, "basic-installation"]], "Behavior": [[321, "behavior"], [322, "behavior"], [323, "behavior"], [324, "behavior"], [325, "behavior"], [326, "behavior"], [417, "behavior"], [418, "behavior"], [419, "behavior"], [420, "behavior"], [421, "behavior"], [422, "behavior"], [475, "behavior"], [476, "behavior"]], "Benefits": [[470, "benefits"], [473, "benefits"]], "Binary Functions": [[511, null]], "Bottleneck Configuration": [[129, "bottleneck-configuration"], [130, "bottleneck-configuration"]], "Broadcasting Rules": [[548, "broadcasting-rules"]], "CIFAR10": [[9, null]], "CIFAR100": [[10, null]], "CSPNet": [[69, null], [112, "cspnet"]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [3, "class-signature"], [4, "class-signature"], [9, "class-signature"], [10, "class-signature"], [11, "class-signature"], [12, "class-signature"], [33, "class-signature"], [35, "class-signature"], [44, "class-signature"], [45, "class-signature"], [59, "class-signature"], [69, "class-signature"], [73, "class-signature"], [77, "class-signature"], [82, "class-signature"], [83, "class-signature"], [96, "class-signature"], [100, "class-signature"], [104, "class-signature"], [109, "class-signature"], [113, "class-signature"], [117, "class-signature"], [123, "class-signature"], [124, "class-signature"], [125, "class-signature"], [126, "class-signature"], [150, "class-signature"], [159, "class-signature"], [170, "class-signature"], [177, "class-signature"], [187, "class-signature"], [192, "class-signature"], [193, "class-signature"], [204, "class-signature"], [209, "class-signature"], [215, "class-signature"], [217, "class-signature"], [219, "class-signature"], [220, "class-signature"], [223, "class-signature"], [226, "class-signature"], [235, "class-signature"], [239, "class-signature"], [240, "class-signature"], [252, "class-signature"], [255, "class-signature"], [258, "class-signature"], [261, "class-signature"], [264, "class-signature"], [267, "class-signature"], [268, "class-signature"], [269, "class-signature"], [270, "class-signature"], [271, "class-signature"], [272, "class-signature"], [273, "class-signature"], [274, "class-signature"], [342, "class-signature"], [343, "class-signature"], [344, "class-signature"], [345, "class-signature"], [346, "class-signature"], [347, "class-signature"], [348, "class-signature"], [349, "class-signature"], [359, "class-signature"], [360, "class-signature"], [361, "class-signature"], [362, "class-signature"], [363, "class-signature"], [364, "class-signature"], [365, "class-signature"], [366, "class-signature"], [367, "class-signature"], [368, "class-signature"], [369, "class-signature"], [370, "class-signature"], [371, "class-signature"], [373, "class-signature"], [374, "class-signature"], [376, "class-signature"], [377, "class-signature"], [378, "class-signature"], [379, "class-signature"], [380, "class-signature"], [381, "class-signature"], [382, "class-signature"], [384, "class-signature"], [385, "class-signature"], [386, "class-signature"], [387, "class-signature"], [388, "class-signature"], [389, "class-signature"], [390, "class-signature"], [392, "class-signature"], [395, "class-signature"], [396, "class-signature"], [397, "class-signature"], [398, "class-signature"], [400, "class-signature"], [401, "class-signature"], [402, "class-signature"], [403, "class-signature"], [404, "class-signature"], [405, "class-signature"], [407, "class-signature"], [408, "class-signature"], [409, "class-signature"], [410, "class-signature"], [411, "class-signature"], [412, "class-signature"], [413, "class-signature"], [414, "class-signature"], [415, "class-signature"], [417, "class-signature"], [418, "class-signature"], [419, "class-signature"], [420, "class-signature"], [421, "class-signature"], [422, "class-signature"], [423, "class-signature"], [424, "class-signature"], [425, "class-signature"], [426, "class-signature"], [427, "class-signature"], [428, "class-signature"], [430, "class-signature"], [432, "class-signature"], [433, "class-signature"], [434, "class-signature"], [435, "class-signature"], [436, "class-signature"], [438, "class-signature"], [445, "class-signature"], [447, "class-signature"], [448, "class-signature"], [449, "class-signature"], [450, "class-signature"], [451, "class-signature"], [452, "class-signature"], [453, "class-signature"], [454, "class-signature"], [457, "class-signature"], [458, "class-signature"], [459, "class-signature"], [460, "class-signature"], [461, "class-signature"], [462, "class-signature"], [463, "class-signature"], [464, "class-signature"], [465, "class-signature"], [466, "class-signature"], [467, "class-signature"], [469, "class-signature"], [486, "class-signature"], [579, "class-signature"], [580, "class-signature"], [581, "class-signature"], [582, "class-signature"], [583, "class-signature"], [584, "class-signature"], [585, "class-signature"], [586, "class-signature"], [587, "class-signature"], [588, "class-signature"]], "Classes": [[248, null]], "CoAtNet": [[35, null], [112, "coatnet"]], "Combining multiple datasets": [[0, null]], "Common Pitfalls": [[594, "common-pitfalls"]], "Common Practice": [[441, null]], "Comparison to Norm Clipping": [[442, null]], "Computation Details": [[442, "computation-details"]], "Computer Vision": [[222, "computer-vision"]], "Conclusion": [[5, "conclusion"], [14, "conclusion"], [17, "conclusion"], [18, "conclusion"], [19, "conclusion"], [20, "conclusion"], [392, "conclusion"], [440, "conclusion"], [446, "conclusion"], [471, "conclusion"], [472, "conclusion"], [485, "conclusion"], [580, "conclusion"], [590, "conclusion"]], "Configuration": [[36, "configuration"], [37, "configuration"], [38, "configuration"], [39, "configuration"], [40, "configuration"], [41, "configuration"], [42, "configuration"], [43, "configuration"]], "Configurations": [[82, "configurations"]], "Constructor": [[241, "constructor"], [242, "constructor"], [243, "constructor"], [244, "constructor"]], "Containers": [[275, null]], "Conv-BatchNorm-ReLU": [[350, null]], "ConvNeXt": [[44, null], [112, "convnext"]], "ConvNeXt_V2": [[45, null]], "Convolution Functions": [[293, null], [303, null]], "Convolution Layers": [[383, null], [394, null]], "Convolutional Transformer (CvT)": [[112, "convolutional-transformer-cvt"]], "Create a Tensor from a list": [[544, null]], "Creating a Parameter": [[269, null]], "Creating a tensor on GPU with gradient tracking": [[486, null]], "CrossViT": [[59, null], [112, "crossvit"]], "Currently Available": [[592, "currently-available"]], "Custom / user-provided weights": [[594, "custom-user-provided-weights"]], "Custom Data Pipelines": [[5, "custom-data-pipelines"]], "Custom Pipelines": [[590, "custom-pipelines"]], "CvT": [[73, null]], "DDPM": [[220, null], [221, "ddpm"]], "DETR": [[223, null], [238, "detr"]], "Darknet-19 Integration": [[255, "darknet-19-integration"]], "Data Utilities": [[6, null]], "Defining a Custom Optimizer": [[456, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[268, null]], "Defining a custom optimizer": [[445, null]], "DenseNet": [[77, null], [112, "densenet"], [593, "densenet"]], "Depthwise Separable Convolution": [[350, null]], "Descending, heapsort kernel": [[547, null]], "Description": [[171, "description"], [172, "description"], [173, "description"], [174, "description"], [175, "description"], [176, "description"], [188, "description"], [189, "description"], [190, "description"], [474, "description"]], "Details": [[131, "details"], [132, "details"], [133, "details"], [134, "details"], [135, "details"], [223, "details"]], "Device & caching": [[594, "device-caching"]], "Device-based dtype inference": [[486, null]], "Differences from nn.Transformer": [[264, "differences-from-nn-transformer"]], "Dropout Functions": [[302, null], [303, null]], "Dropout Layers": [[391, null], [394, null]], "Educational by Design": [[20, "educational-by-design"]], "EfficientDet": [[226, null], [238, "efficientdet"]], "EfficientFormer": [[96, null], [112, "efficientformer"]], "EfficientNet": [[82, null], [112, "efficientnet"]], "EfficientNet Configurations": [[82, "id1"]], "EfficientNet_V2": [[83, null]], "Einops Functions": [[16, null]], "Einops Layers": [[393, null], [394, null]], "Embedding Process": [[337, "embedding-process"]], "Enable GPU (Metal / MLX Acceleration)": [[20, "enable-gpu-metal-mlx-acceleration"]], "Example": [[5, null], [5, null], [5, null], [14, null], [14, null], [14, null], [22, "example"], [23, "example"], [24, "example"], [26, "example"], [27, "example"], [28, "example"], [29, "example"], [30, "example"], [31, "example"], [32, "example"], [105, "example"], [106, "example"], [107, "example"], [108, "example"], [118, "example"], [119, "example"], [120, "example"], [121, "example"], [122, "example"], [127, "example"], [128, "example"], [241, "example"], [242, "example"], [243, "example"], [244, "example"], [245, "example"], [246, "example"], [247, "example"], [249, "example"], [250, "example"], [294, "example"], [440, null], [440, null], [440, null], [471, "example"], [477, "example"], [479, "example"], [480, "example"], [481, "example"], [482, "example"], [483, "example"], [484, "example"], [485, null], [485, null], [485, null], [499, "example"], [500, "example"], [501, "example"], [502, "example"], [503, "example"], [507, "example"], [508, "example"], [509, "example"], [510, "example"], [512, "example"], [513, "example"], [514, "example"], [515, "example"], [517, "example"], [518, "example"], [519, "example"], [520, "example"], [521, "example"], [522, "example"], [525, "example"], [526, "example"], [528, "example"], [530, "example"], [532, "example"], [533, "example"], [534, "example"], [535, "example"], [536, "example"], [537, "example"], [539, "example"], [540, "example"], [541, "example"], [542, "example"], [543, "example"], [549, "example"], [550, "example"], [553, "example"], [554, "example"], [555, "example"], [556, "example"], [562, "example"], [564, "example"], [566, "example"], [568, "example"], [569, "example"], [571, "example"], [572, "example"], [573, "example"], [576, "example"], [577, "example"], [578, "example"], [591, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[472, null]], "Example 2: Adding a new axis to a 2D tensor": [[472, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[472, null]], "Example Usage": [[101, "example-usage"], [102, "example-usage"], [103, "example-usage"], [110, "example-usage"], [111, "example-usage"], [113, "example-usage"], [114, "example-usage"], [115, "example-usage"], [116, "example-usage"], [183, "example-usage"], [184, "example-usage"], [185, "example-usage"], [186, "example-usage"], [191, "example-usage"], [224, "example-usage"], [225, "example-usage"], [227, "example-usage"], [228, "example-usage"], [229, "example-usage"], [230, "example-usage"], [231, "example-usage"], [232, "example-usage"], [233, "example-usage"], [234, "example-usage"], [255, "example-usage"], [256, "example-usage"], [257, "example-usage"], [258, "example-usage"], [259, "example-usage"], [260, "example-usage"], [261, "example-usage"], [262, "example-usage"], [341, "example-usage"], [579, "example-usage"], [580, "example-usage"], [590, "example-usage"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [3, "examples"], [4, "examples"], [7, "examples"], [9, "examples"], [10, "examples"], [11, "examples"], [12, "examples"], [15, "examples"], [17, "examples"], [18, "examples"], [19, "examples"], [21, "examples"], [33, "examples"], [34, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [47, "examples"], [48, "examples"], [49, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [53, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [60, "examples"], [61, "examples"], [62, "examples"], [63, "examples"], [64, "examples"], [65, "examples"], [66, "examples"], [67, "examples"], [68, "examples"], [69, "examples"], [70, "examples"], [71, "examples"], [72, "examples"], [73, "examples"], [74, "examples"], [75, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [79, "examples"], [80, "examples"], [81, "examples"], [82, "examples"], [84, "examples"], [85, "examples"], [86, "examples"], [87, "examples"], [88, "examples"], [89, "examples"], [90, "examples"], [91, "examples"], [92, "examples"], [93, "examples"], [94, "examples"], [95, "examples"], [96, "examples"], [97, "examples"], [98, "examples"], [99, "examples"], [104, "examples"], [117, "examples"], [125, "examples"], [129, "examples"], [130, "examples"], [136, "examples"], [138, "examples"], [139, "examples"], [140, "examples"], [141, "examples"], [142, "examples"], [143, "examples"], [144, "examples"], [145, "examples"], [146, "examples"], [147, "examples"], [148, "examples"], [149, "examples"], [150, "examples"], [151, "examples"], [152, "examples"], [153, "examples"], [154, "examples"], [155, "examples"], [156, "examples"], [157, "examples"], [158, "examples"], [159, "examples"], [160, "examples"], [161, "examples"], [162, "examples"], [163, "examples"], [164, "examples"], [165, "examples"], [166, "examples"], [167, "examples"], [168, "examples"], [169, "examples"], [171, "examples"], [172, "examples"], [173, "examples"], [174, "examples"], [175, "examples"], [176, "examples"], [178, "examples"], [179, "examples"], [180, "examples"], [181, "examples"], [182, "examples"], [188, "examples"], [189, "examples"], [190, "examples"], [192, "examples"], [193, "examples"], [194, "examples"], [195, "examples"], [196, "examples"], [197, "examples"], [198, "examples"], [199, "examples"], [200, "examples"], [201, "examples"], [202, "examples"], [203, "examples"], [204, "examples"], [205, "examples"], [206, "examples"], [207, "examples"], [208, "examples"], [209, "examples"], [210, "examples"], [211, "examples"], [212, "examples"], [213, "examples"], [214, "examples"], [215, "examples"], [216, "examples"], [217, "examples"], [218, "examples"], [219, "examples"], [220, "examples"], [223, "examples"], [235, "examples"], [236, "examples"], [237, "examples"], [239, "examples"], [240, "examples"], [252, "examples"], [253, "examples"], [254, "examples"], [264, "examples"], [265, "examples"], [266, "examples"], [267, "examples"], [268, "examples"], [269, "examples"], [270, "examples"], [271, "examples"], [272, "examples"], [273, "examples"], [274, "examples"], [276, "examples"], [277, "examples"], [279, "examples"], [280, "examples"], [281, "examples"], [282, "examples"], [283, "examples"], [284, "examples"], [286, "examples"], [287, "examples"], [288, "examples"], [289, "examples"], [290, "examples"], [291, "examples"], [292, "examples"], [295, "examples"], [296, "examples"], [297, "examples"], [298, "examples"], [299, "examples"], [300, "examples"], [301, "examples"], [304, "examples"], [306, "examples"], [307, "examples"], [308, "examples"], [309, "examples"], [310, "examples"], [312, "examples"], [313, "examples"], [314, "examples"], [315, "examples"], [316, "examples"], [318, "examples"], [319, "examples"], [320, "examples"], [321, "examples"], [322, "examples"], [323, "examples"], [324, "examples"], [325, "examples"], [326, "examples"], [327, "examples"], [328, "examples"], [329, "examples"], [331, "examples"], [332, "examples"], [333, "examples"], [334, "examples"], [335, "examples"], [337, "examples"], [339, "examples"], [340, "examples"], [342, "examples"], [343, "examples"], [344, "examples"], [345, "examples"], [346, "examples"], [347, "examples"], [348, "examples"], [349, "examples"], [351, "examples"], [353, "examples"], [354, "examples"], [355, "examples"], [356, "examples"], [357, "examples"], [358, "examples"], [359, "examples"], [360, "examples"], [361, "examples"], [362, "examples"], [363, "examples"], [364, "examples"], [365, "examples"], [366, "examples"], [367, "examples"], [368, "examples"], [369, "examples"], [370, "examples"], [371, "examples"], [374, "examples"], [376, "examples"], [377, "examples"], [378, "examples"], [379, "examples"], [380, "examples"], [381, "examples"], [382, "examples"], [384, "examples"], [385, "examples"], [386, "examples"], [387, "examples"], [388, "examples"], [389, "examples"], [390, "examples"], [392, "examples"], [395, "examples"], [396, "examples"], [397, "examples"], [398, "examples"], [400, "examples"], [401, "examples"], [402, "examples"], [403, "examples"], [404, "examples"], [405, "examples"], [407, "examples"], [408, "examples"], [409, "examples"], [410, "examples"], [411, "examples"], [412, "examples"], [413, "examples"], [414, "examples"], [415, "examples"], [417, "examples"], [418, "examples"], [419, "examples"], [420, "examples"], [421, "examples"], [422, "examples"], [423, "examples"], [424, "examples"], [425, "examples"], [426, "examples"], [427, "examples"], [428, "examples"], [430, "examples"], [438, "examples"], [441, "examples"], [442, "examples"], [443, "examples"], [445, "examples"], [456, "examples"], [457, "examples"], [458, "examples"], [459, "examples"], [460, "examples"], [461, "examples"], [462, "examples"], [463, "examples"], [464, "examples"], [465, "examples"], [466, "examples"], [467, "examples"], [470, "examples"], [473, "examples"], [474, "examples"], [475, "examples"], [476, "examples"], [486, "examples"], [487, "examples"], [488, "examples"], [489, "examples"], [490, "examples"], [492, "examples"], [493, "examples"], [494, "examples"], [495, "examples"], [496, "examples"], [497, "examples"], [498, "examples"], [504, "examples"], [505, "examples"], [506, "examples"], [516, "examples"], [523, "examples"], [524, "examples"], [527, "examples"], [529, "examples"], [531, "examples"], [538, "examples"], [544, "examples"], [545, "examples"], [546, "examples"], [547, "examples"], [548, "examples"], [551, "examples"], [552, "examples"], [558, "examples"], [559, "examples"], [560, "examples"], [561, "examples"], [563, "examples"], [565, "examples"], [567, "examples"], [570, "examples"], [574, "examples"], [575, "examples"], [581, "examples"], [582, "examples"], [583, "examples"], [584, "examples"], [585, "examples"], [586, "examples"], [587, "examples"], [588, "examples"]], "FashionMNIST": [[11, null]], "Fast R-CNN": [[238, "fast-r-cnn"], [239, null]], "Faster R-CNN": [[235, null], [238, "faster-r-cnn"]], "Features": [[21, "features"]], "Flattened maximum index": [[545, null]], "Focal Loss Explanation": [[226, "focal-loss-explanation"]], "Forward (inference)": [[223, "forward-inference"]], "Forward Calculation": [[15, "forward-calculation"], [22, "forward-calculation"], [23, "forward-calculation"], [24, "forward-calculation"], [26, "forward-calculation"], [27, "forward-calculation"], [28, "forward-calculation"], [29, "forward-calculation"], [30, "forward-calculation"], [31, "forward-calculation"], [32, "forward-calculation"], [159, "forward-calculation"], [170, "forward-calculation"], [177, "forward-calculation"], [187, "forward-calculation"], [270, "forward-calculation"], [271, "forward-calculation"], [272, "forward-calculation"], [273, "forward-calculation"], [274, "forward-calculation"], [276, "forward-calculation"], [277, "forward-calculation"], [279, "forward-calculation"], [280, "forward-calculation"], [281, "forward-calculation"], [282, "forward-calculation"], [283, "forward-calculation"], [284, "forward-calculation"], [294, "forward-calculation"], [297, "forward-calculation"], [304, "forward-calculation"], [306, "forward-calculation"], [321, "forward-calculation"], [322, "forward-calculation"], [323, "forward-calculation"], [324, "forward-calculation"], [334, "forward-calculation"], [335, "forward-calculation"], [339, "forward-calculation"], [342, "forward-calculation"], [343, "forward-calculation"], [344, "forward-calculation"], [345, "forward-calculation"], [346, "forward-calculation"], [347, "forward-calculation"], [348, "forward-calculation"], [349, "forward-calculation"], [353, "forward-calculation"], [354, "forward-calculation"], [357, "forward-calculation"], [358, "forward-calculation"], [359, "forward-calculation"], [360, "forward-calculation"], [361, "forward-calculation"], [362, "forward-calculation"], [363, "forward-calculation"], [364, "forward-calculation"], [365, "forward-calculation"], [366, "forward-calculation"], [367, "forward-calculation"], [368, "forward-calculation"], [369, "forward-calculation"], [370, "forward-calculation"], [371, "forward-calculation"], [374, "forward-calculation"], [376, "forward-calculation"], [377, "forward-calculation"], [378, "forward-calculation"], [379, "forward-calculation"], [380, "forward-calculation"], [381, "forward-calculation"], [382, "forward-calculation"], [384, "forward-calculation"], [385, "forward-calculation"], [386, "forward-calculation"], [387, "forward-calculation"], [388, "forward-calculation"], [389, "forward-calculation"], [390, "forward-calculation"], [395, "forward-calculation"], [396, "forward-calculation"], [397, "forward-calculation"], [398, "forward-calculation"], [400, "forward-calculation"], [401, "forward-calculation"], [402, "forward-calculation"], [403, "forward-calculation"], [404, "forward-calculation"], [405, "forward-calculation"], [407, "forward-calculation"], [408, "forward-calculation"], [409, "forward-calculation"], [410, "forward-calculation"], [411, "forward-calculation"], [412, "forward-calculation"], [413, "forward-calculation"], [414, "forward-calculation"], [415, "forward-calculation"], [417, "forward-calculation"], [418, "forward-calculation"], [419, "forward-calculation"], [420, "forward-calculation"], [421, "forward-calculation"], [422, "forward-calculation"], [423, "forward-calculation"], [424, "forward-calculation"], [425, "forward-calculation"], [426, "forward-calculation"], [427, "forward-calculation"], [428, "forward-calculation"], [487, "forward-calculation"], [488, "forward-calculation"], [489, "forward-calculation"], [490, "forward-calculation"], [491, "forward-calculation"], [492, "forward-calculation"], [493, "forward-calculation"], [494, "forward-calculation"], [495, "forward-calculation"], [496, "forward-calculation"], [497, "forward-calculation"], [498, "forward-calculation"], [512, "forward-calculation"], [513, "forward-calculation"], [514, "forward-calculation"], [515, "forward-calculation"], [517, "forward-calculation"], [518, "forward-calculation"], [519, "forward-calculation"], [520, "forward-calculation"], [521, "forward-calculation"], [522, "forward-calculation"], [523, "forward-calculation"], [525, "forward-calculation"], [526, "forward-calculation"], [527, "forward-calculation"], [528, "forward-calculation"], [529, "forward-calculation"], [530, "forward-calculation"], [532, "forward-calculation"], [533, "forward-calculation"], [534, "forward-calculation"], [535, "forward-calculation"], [536, "forward-calculation"], [537, "forward-calculation"], [539, "forward-calculation"], [540, "forward-calculation"], [541, "forward-calculation"], [542, "forward-calculation"], [543, "forward-calculation"], [550, "forward-calculation"], [556, "forward-calculation"], [559, "forward-calculation"], [561, "forward-calculation"], [562, "forward-calculation"], [563, "forward-calculation"], [564, "forward-calculation"], [568, "forward-calculation"], [569, "forward-calculation"], [570, "forward-calculation"], [572, "forward-calculation"], [573, "forward-calculation"], [576, "forward-calculation"], [577, "forward-calculation"], [581, "forward-calculation"], [582, "forward-calculation"], [583, "forward-calculation"], [584, "forward-calculation"], [585, "forward-calculation"], [586, "forward-calculation"], [587, "forward-calculation"], [588, "forward-calculation"]], "Forward Computation": [[316, "forward-computation"]], "Forward Input & Output": [[241, "forward-input-output"]], "Forward Method": [[432, "forward-method"], [433, "forward-method"], [434, "forward-method"], [435, "forward-method"], [436, "forward-method"]], "Forward Noise Process": [[220, "forward-noise-process"]], "Forward Pass": [[215, "forward-pass"]], "Function Signature": [[7, "function-signature"], [15, "function-signature"], [17, "function-signature"], [18, "function-signature"], [19, "function-signature"], [22, "function-signature"], [23, "function-signature"], [24, "function-signature"], [26, "function-signature"], [27, "function-signature"], [28, "function-signature"], [29, "function-signature"], [30, "function-signature"], [31, "function-signature"], [32, "function-signature"], [34, "function-signature"], [36, "function-signature"], [37, "function-signature"], [38, "function-signature"], [39, "function-signature"], [40, "function-signature"], [41, "function-signature"], [42, "function-signature"], [43, "function-signature"], [46, "function-signature"], [47, "function-signature"], [48, "function-signature"], [49, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [53, "function-signature"], [54, "function-signature"], [55, "function-signature"], [56, "function-signature"], [57, "function-signature"], [58, "function-signature"], [60, "function-signature"], [61, "function-signature"], [62, "function-signature"], [63, "function-signature"], [64, "function-signature"], [65, "function-signature"], [66, "function-signature"], [67, "function-signature"], [68, "function-signature"], [70, "function-signature"], [71, "function-signature"], [72, "function-signature"], [74, "function-signature"], [75, "function-signature"], [76, "function-signature"], [78, "function-signature"], [79, "function-signature"], [80, "function-signature"], [81, "function-signature"], [84, "function-signature"], [85, "function-signature"], [86, "function-signature"], [87, "function-signature"], [88, "function-signature"], [89, "function-signature"], [90, "function-signature"], [91, "function-signature"], [92, "function-signature"], [93, "function-signature"], [94, "function-signature"], [95, "function-signature"], [97, "function-signature"], [98, "function-signature"], [99, "function-signature"], [101, "function-signature"], [102, "function-signature"], [103, "function-signature"], [105, "function-signature"], [106, "function-signature"], [107, "function-signature"], [108, "function-signature"], [110, "function-signature"], [111, "function-signature"], [114, "function-signature"], [115, "function-signature"], [116, "function-signature"], [118, "function-signature"], [119, "function-signature"], [120, "function-signature"], [121, "function-signature"], [122, "function-signature"], [127, "function-signature"], [128, "function-signature"], [129, "function-signature"], [130, "function-signature"], [131, "function-signature"], [132, "function-signature"], [133, "function-signature"], [134, "function-signature"], [135, "function-signature"], [136, "function-signature"], [137, "function-signature"], [138, "function-signature"], [139, "function-signature"], [140, "function-signature"], [141, "function-signature"], [142, "function-signature"], [143, "function-signature"], [144, "function-signature"], [145, "function-signature"], [146, "function-signature"], [147, "function-signature"], [148, "function-signature"], [149, "function-signature"], [151, "function-signature"], [152, "function-signature"], [153, "function-signature"], [154, "function-signature"], [155, "function-signature"], [156, "function-signature"], [157, "function-signature"], [158, "function-signature"], [160, "function-signature"], [161, "function-signature"], [162, "function-signature"], [163, "function-signature"], [164, "function-signature"], [165, "function-signature"], [166, "function-signature"], [167, "function-signature"], [168, "function-signature"], [169, "function-signature"], [171, "function-signature"], [172, "function-signature"], [173, "function-signature"], [174, "function-signature"], [175, "function-signature"], [176, "function-signature"], [178, "function-signature"], [179, "function-signature"], [180, "function-signature"], [181, "function-signature"], [182, "function-signature"], [183, "function-signature"], [184, "function-signature"], [185, "function-signature"], [186, "function-signature"], [188, "function-signature"], [189, "function-signature"], [190, "function-signature"], [191, "function-signature"], [194, "function-signature"], [195, "function-signature"], [196, "function-signature"], [197, "function-signature"], [198, "function-signature"], [199, "function-signature"], [200, "function-signature"], [201, "function-signature"], [202, "function-signature"], [203, "function-signature"], [205, "function-signature"], [206, "function-signature"], [207, "function-signature"], [208, "function-signature"], [210, "function-signature"], [211, "function-signature"], [212, "function-signature"], [213, "function-signature"], [214, "function-signature"], [216, "function-signature"], [218, "function-signature"], [224, "function-signature"], [225, "function-signature"], [227, "function-signature"], [228, "function-signature"], [229, "function-signature"], [230, "function-signature"], [231, "function-signature"], [232, "function-signature"], [233, "function-signature"], [234, "function-signature"], [236, "function-signature"], [237, "function-signature"], [245, "function-signature"], [246, "function-signature"], [247, "function-signature"], [249, "function-signature"], [250, "function-signature"], [253, "function-signature"], [254, "function-signature"], [256, "function-signature"], [257, "function-signature"], [259, "function-signature"], [260, "function-signature"], [262, "function-signature"], [265, "function-signature"], [266, "function-signature"], [276, "function-signature"], [277, "function-signature"], [279, "function-signature"], [280, "function-signature"], [281, "function-signature"], [282, "function-signature"], [283, "function-signature"], [284, "function-signature"], [286, "function-signature"], [287, "function-signature"], [288, "function-signature"], [289, "function-signature"], [290, "function-signature"], [291, "function-signature"], [292, "function-signature"], [294, "function-signature"], [295, "function-signature"], [296, "function-signature"], [297, "function-signature"], [298, "function-signature"], [299, "function-signature"], [300, "function-signature"], [301, "function-signature"], [304, "function-signature"], [306, "function-signature"], [307, "function-signature"], [308, "function-signature"], [309, "function-signature"], [310, "function-signature"], [312, "function-signature"], [313, "function-signature"], [314, "function-signature"], [315, "function-signature"], [316, "function-signature"], [318, "function-signature"], [319, "function-signature"], [320, "function-signature"], [321, "function-signature"], [322, "function-signature"], [323, "function-signature"], [324, "function-signature"], [325, "function-signature"], [326, "function-signature"], [327, "function-signature"], [328, "function-signature"], [329, "function-signature"], [331, "function-signature"], [332, "function-signature"], [333, "function-signature"], [334, "function-signature"], [335, "function-signature"], [337, "function-signature"], [339, "function-signature"], [340, "function-signature"], [341, "function-signature"], [351, "function-signature"], [353, "function-signature"], [354, "function-signature"], [355, "function-signature"], [356, "function-signature"], [357, "function-signature"], [358, "function-signature"], [441, "function-signature"], [442, "function-signature"], [443, "function-signature"], [470, "function-signature"], [471, "function-signature"], [473, "function-signature"], [474, "function-signature"], [475, "function-signature"], [476, "function-signature"], [477, "function-signature"], [479, "function-signature"], [480, "function-signature"], [481, "function-signature"], [482, "function-signature"], [483, "function-signature"], [484, "function-signature"], [487, "function-signature"], [488, "function-signature"], [489, "function-signature"], [490, "function-signature"], [491, "function-signature"], [492, "function-signature"], [493, "function-signature"], [494, "function-signature"], [495, "function-signature"], [496, "function-signature"], [497, "function-signature"], [498, "function-signature"], [499, "function-signature"], [500, "function-signature"], [501, "function-signature"], [502, "function-signature"], [503, "function-signature"], [504, "function-signature"], [505, "function-signature"], [506, "function-signature"], [507, "function-signature"], [508, "function-signature"], [509, "function-signature"], [510, "function-signature"], [512, "function-signature"], [513, "function-signature"], [514, "function-signature"], [515, "function-signature"], [516, "function-signature"], [517, "function-signature"], [518, "function-signature"], [519, "function-signature"], [520, "function-signature"], [521, "function-signature"], [522, "function-signature"], [523, "function-signature"], [524, "function-signature"], [525, "function-signature"], [526, "function-signature"], [527, "function-signature"], [528, "function-signature"], [529, "function-signature"], [530, "function-signature"], [531, "function-signature"], [532, "function-signature"], [533, "function-signature"], [534, "function-signature"], [535, "function-signature"], [536, "function-signature"], [537, "function-signature"], [538, "function-signature"], [539, "function-signature"], [540, "function-signature"], [541, "function-signature"], [542, "function-signature"], [543, "function-signature"], [544, "function-signature"], [545, "function-signature"], [546, "function-signature"], [547, "function-signature"], [548, "function-signature"], [549, "function-signature"], [550, "function-signature"], [551, "function-signature"], [552, "function-signature"], [553, "function-signature"], [554, "function-signature"], [555, "function-signature"], [556, "function-signature"], [558, "function-signature"], [559, "function-signature"], [560, "function-signature"], [561, "function-signature"], [562, "function-signature"], [563, "function-signature"], [564, "function-signature"], [565, "function-signature"], [566, "function-signature"], [567, "function-signature"], [568, "function-signature"], [569, "function-signature"], [570, "function-signature"], [571, "function-signature"], [572, "function-signature"], [573, "function-signature"], [574, "function-signature"], [575, "function-signature"], [576, "function-signature"], [577, "function-signature"], [578, "function-signature"], [591, "function-signature"]], "Functions": [[248, null]], "Fused Layers": [[350, null]], "Future Work": [[8, "future-work"]], "Getting Started": [[456, "getting-started"]], "Global minimum index": [[546, null]], "Gradient Calculation": [[578, "gradient-calculation"]], "Gradient Computation": [[549, "gradient-computation"], [558, "gradient-computation"], [565, "gradient-computation"], [566, "gradient-computation"], [571, "gradient-computation"]], "Gradient hooks": [[486, null]], "Hooks & Shape Alignment": [[20, "hooks-shape-alignment"]], "How It Works": [[471, "how-it-works"]], "How Model Factories Use Weights": [[594, "how-model-factories-use-weights"]], "How to Install": [[20, "how-to-install"]], "Hybrid Architecture": [[35, "hybrid-architecture"]], "Hyperparameter Configuration": [[157, "hyperparameter-configuration"], [158, "hyperparameter-configuration"]], "Image Classification": [[112, null]], "Image Datasets": [[13, null]], "Image Generation": [[221, null]], "Image Transformations": [[589, null]], "Implementation Details": [[59, "implementation-details"], [117, "implementation-details"]], "Inception": [[100, null], [112, "inception"]], "Inception-ResNet": [[112, "inception-resnet"]], "InceptionNeXt": [[104, null], [112, "inceptionnext"]], "InceptionResNet": [[109, null]], "Input & Output": [[242, "input-output"], [243, "input-output"]], "Input Format": [[226, "input-format"], [252, "input-format"], [255, "input-format"], [258, "input-format"], [261, "input-format"]], "Inputs": [[223, "inputs"]], "Inspecting Optimizer State": [[456, null], [457, null], [458, null], [459, null], [460, null], [461, null], [462, null], [463, null], [464, null], [465, null], [466, null], [467, null]], "Integration with lucid": [[5, "integration-with-lucid"], [440, "integration-with-lucid"], [485, "integration-with-lucid"], [590, "integration-with-lucid"]], "Key Characteristics": [[69, "key-characteristics"]], "Key Components": [[5, "key-components"], [440, "key-components"]], "Key Enhancements": [[137, "key-enhancements"]], "Key Features": [[8, "key-features"], [183, "key-features"], [184, "key-features"], [185, "key-features"], [186, "key-features"], [191, "key-features"], [456, "key-features"], [485, "key-features"]], "Key Transformations": [[590, "key-transformations"]], "LR Schedulers": [[455, null]], "Layer Configuration": [[151, "layer-configuration"], [152, "layer-configuration"], [153, "layer-configuration"], [154, "layer-configuration"], [155, "layer-configuration"], [156, "layer-configuration"]], "LeNet": [[112, "lenet"], [113, null], [593, "lenet"]], "Learn More": [[485, null]], "Linear Algebra Operations": [[25, null]], "Linear Functions": [[303, null], [305, null]], "Linear Layers": [[394, null], [399, null]], "Loading Pretrained Weights": [[20, "loading-pretrained-weights"]], "Loading a custom dataset": [[1, null]], "Loss & Matching": [[223, "loss-matching"]], "Loss Components": [[219, "loss-components"]], "Loss Computation": [[226, "loss-computation"]], "Loss Dictionary": [[235, "loss-dictionary"]], "Loss Formula": [[252, "loss-formula"]], "Loss Functions": [[303, null], [311, null]], "Loss Layers": [[394, null], [406, null]], "Lucid\u00b2 \ud83d\udc8e": [[20, null]], "MNIST": [[12, null]], "Mathematical Definition": [[17, "mathematical-definition"], [18, "mathematical-definition"], [19, "mathematical-definition"], [320, "mathematical-definition"], [392, "mathematical-definition"], [441, "mathematical-definition"], [442, "mathematical-definition"], [443, "mathematical-definition"]], "Mathematical Details": [[373, "mathematical-details"], [432, "mathematical-details"], [433, "mathematical-details"], [434, "mathematical-details"], [435, "mathematical-details"], [436, "mathematical-details"]], "Mathematical Explanation": [[7, "mathematical-explanation"]], "Mathematical Expression": [[315, "mathematical-expression"], [516, "mathematical-expression"], [524, "mathematical-expression"], [531, "mathematical-expression"], [567, "mathematical-expression"]], "Mathematical Formula": [[447, "mathematical-formula"], [448, "mathematical-formula"], [449, "mathematical-formula"], [451, "mathematical-formula"], [452, "mathematical-formula"], [453, "mathematical-formula"], [454, "mathematical-formula"]], "Mathematical Representation": [[59, "mathematical-representation"], [117, "mathematical-representation"], [486, "mathematical-representation"]], "Mathematical Shape Constraints": [[4, "mathematical-shape-constraints"]], "Mathematics": [[551, "mathematics"]], "Matrix Multiplication Rules": [[491, "matrix-multiplication-rules"]], "Max index by row": [[545, null]], "MaxViT": [[112, "maxvit"], [117, null]], "Metadata Captured": [[474, "metadata-captured"]], "Metal Acceleration (MLX Backend)": [[20, "metal-acceleration-mlx-backend"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [3, "methods"], [9, "methods"], [10, "methods"], [11, "methods"], [12, "methods"], [109, "methods"], [113, "methods"], [204, "methods"], [219, "methods"], [220, "methods"], [223, "methods"], [226, "methods"], [252, "methods"], [255, "methods"], [258, "methods"], [261, "methods"], [268, "methods"], [269, "methods"], [445, "methods"], [447, "methods"], [448, "methods"], [449, "methods"], [450, "methods"], [451, "methods"], [452, "methods"], [453, "methods"], [454, "methods"], [469, "methods"], [486, "methods"]], "MobileNet": [[112, "mobilenet"], [123, null], [593, "mobilenet"]], "MobileNet_V2": [[124, null]], "MobileNet_V3": [[125, null]], "MobileNet_V4": [[126, null]], "Model Configuration": [[118, "model-configuration"], [119, "model-configuration"], [120, "model-configuration"], [121, "model-configuration"], [122, "model-configuration"]], "Module Output Requirements": [[219, "module-output-requirements"]], "Modules": [[394, null]], "Moving tensor between devices": [[486, null]], "Multi-Scale Detection": [[258, "multi-scale-detection"], [261, "multi-scale-detection"]], "Natural Language Processing": [[222, "natural-language-processing"]], "Neural Network Utilities": [[444, null]], "Neural Networks with lucid.nn": [[20, "neural-networks-with-lucid-nn"]], "Normalization Functions": [[303, null], [317, null]], "Normalization Layers": [[394, null], [416, null]], "Notes": [[15, "notes"], [335, "notes"], [504, "notes"], [505, "notes"]], "Object Detection": [[238, null]], "Object Detection Utilities": [[248, null]], "One-Hot Encoding Logic": [[340, "one-hot-encoding-logic"]], "Optimizers": [[468, null]], "Organizing Models": [[440, "organizing-models"]], "Others": [[20, "others"]], "Overview": [[5, "overview"], [8, "overview"], [14, "overview"], [100, "overview"], [101, "overview"], [102, "overview"], [103, "overview"], [109, "overview"], [110, "overview"], [111, "overview"], [113, "overview"], [114, "overview"], [115, "overview"], [116, "overview"], [123, "overview"], [124, "overview"], [125, "overview"], [126, "overview"], [131, "overview"], [132, "overview"], [133, "overview"], [134, "overview"], [135, "overview"], [160, "overview"], [161, "overview"], [162, "overview"], [163, "overview"], [164, "overview"], [165, "overview"], [166, "overview"], [167, "overview"], [178, "overview"], [179, "overview"], [180, "overview"], [181, "overview"], [182, "overview"], [373, "overview"], [432, "overview"], [433, "overview"], [434, "overview"], [435, "overview"], [436, "overview"], [440, "overview"], [446, "overview"], [456, "overview"], [470, "overview"], [473, "overview"], [485, "overview"], [590, "overview"], [594, "overview"]], "PVT": [[136, null]], "PVT_V2": [[137, null]], "Parameters": [[1, "parameters"], [3, "parameters"], [4, "parameters"], [7, "parameters"], [9, "parameters"], [10, "parameters"], [11, "parameters"], [12, "parameters"], [15, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [87, "parameters"], [88, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [104, "parameters"], [105, "parameters"], [106, "parameters"], [107, "parameters"], [108, "parameters"], [109, "parameters"], [110, "parameters"], [111, "parameters"], [113, "parameters"], [117, "parameters"], [118, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [122, "parameters"], [123, "parameters"], [124, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [154, "parameters"], [155, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"], [159, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [163, "parameters"], [164, "parameters"], [165, "parameters"], [166, "parameters"], [167, "parameters"], [168, "parameters"], [169, "parameters"], [170, "parameters"], [171, "parameters"], [172, "parameters"], [173, "parameters"], [174, "parameters"], [175, "parameters"], [176, "parameters"], [177, "parameters"], [178, "parameters"], [179, "parameters"], [180, "parameters"], [181, "parameters"], [182, "parameters"], [183, "parameters"], [184, "parameters"], [185, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [189, "parameters"], [190, "parameters"], [191, "parameters"], [192, "parameters"], [193, "parameters"], [194, "parameters"], [195, "parameters"], [196, "parameters"], [197, "parameters"], [198, "parameters"], [199, "parameters"], [200, "parameters"], [201, "parameters"], [202, "parameters"], [203, "parameters"], [204, "parameters"], [205, "parameters"], [206, "parameters"], [207, "parameters"], [208, "parameters"], [209, "parameters"], [210, "parameters"], [211, "parameters"], [212, "parameters"], [213, "parameters"], [214, "parameters"], [215, "parameters"], [216, "parameters"], [217, "parameters"], [218, "parameters"], [219, "parameters"], [220, "parameters"], [223, "parameters"], [224, "parameters"], [225, "parameters"], [226, "parameters"], [227, "parameters"], [228, "parameters"], [229, "parameters"], [230, "parameters"], [231, "parameters"], [232, "parameters"], [233, "parameters"], [234, "parameters"], [235, "parameters"], [236, "parameters"], [237, "parameters"], [239, "parameters"], [240, "parameters"], [241, "parameters"], [242, "parameters"], [243, "parameters"], [244, "parameters"], [245, "parameters"], [246, "parameters"], [247, "parameters"], [249, "parameters"], [250, "parameters"], [252, "parameters"], [253, "parameters"], [254, "parameters"], [255, "parameters"], [256, "parameters"], [257, "parameters"], [258, "parameters"], [259, "parameters"], [260, "parameters"], [261, "parameters"], [262, "parameters"], [264, "parameters"], [265, "parameters"], [266, "parameters"], [267, "parameters"], [269, "parameters"], [270, "parameters"], [271, "parameters"], [272, "parameters"], [273, "parameters"], [274, "parameters"], [276, "parameters"], [277, "parameters"], [279, "parameters"], [280, "parameters"], [281, "parameters"], [282, "parameters"], [283, "parameters"], [284, "parameters"], [286, "parameters"], [287, "parameters"], [288, "parameters"], [289, "parameters"], [290, "parameters"], [291, "parameters"], [292, "parameters"], [294, "parameters"], [295, "parameters"], [296, "parameters"], [297, "parameters"], [298, "parameters"], [299, "parameters"], [300, "parameters"], [301, "parameters"], [304, "parameters"], [306, "parameters"], [307, "parameters"], [308, "parameters"], [309, "parameters"], [310, "parameters"], [312, "parameters"], [313, "parameters"], [314, "parameters"], [315, "parameters"], [316, "parameters"], [318, "parameters"], [319, "parameters"], [320, "parameters"], [321, "parameters"], [322, "parameters"], [323, "parameters"], [324, "parameters"], [325, "parameters"], [326, "parameters"], [327, "parameters"], [328, "parameters"], [329, "parameters"], [331, "parameters"], [332, "parameters"], [333, "parameters"], [334, "parameters"], [335, "parameters"], [337, "parameters"], [339, "parameters"], [340, "parameters"], [341, "parameters"], [342, "parameters"], [343, "parameters"], [344, "parameters"], [345, "parameters"], [346, "parameters"], [347, "parameters"], [348, "parameters"], [349, "parameters"], [351, "parameters"], [353, "parameters"], [354, "parameters"], [355, "parameters"], [356, "parameters"], [357, "parameters"], [358, "parameters"], [359, "parameters"], [360, "parameters"], [363, "parameters"], [365, "parameters"], [367, "parameters"], [368, "parameters"], [369, "parameters"], [371, "parameters"], [373, "parameters"], [374, "parameters"], [376, "parameters"], [377, "parameters"], [378, "parameters"], [379, "parameters"], [380, "parameters"], [381, "parameters"], [382, "parameters"], [384, "parameters"], [385, "parameters"], [386, "parameters"], [387, "parameters"], [388, "parameters"], [389, "parameters"], [390, "parameters"], [392, "parameters"], [395, "parameters"], [396, "parameters"], [397, "parameters"], [398, "parameters"], [400, "parameters"], [401, "parameters"], [402, "parameters"], [403, "parameters"], [404, "parameters"], [405, "parameters"], [407, "parameters"], [408, "parameters"], [409, "parameters"], [410, "parameters"], [411, "parameters"], [412, "parameters"], [413, "parameters"], [414, "parameters"], [415, "parameters"], [417, "parameters"], [418, "parameters"], [419, "parameters"], [420, "parameters"], [421, "parameters"], [422, "parameters"], [423, "parameters"], [424, "parameters"], [425, "parameters"], [426, "parameters"], [427, "parameters"], [428, "parameters"], [430, "parameters"], [432, "parameters"], [433, "parameters"], [434, "parameters"], [435, "parameters"], [436, "parameters"], [438, "parameters"], [441, "parameters"], [442, "parameters"], [443, "parameters"], [447, "parameters"], [448, "parameters"], [449, "parameters"], [450, "parameters"], [451, "parameters"], [452, "parameters"], [453, "parameters"], [454, "parameters"], [457, "parameters"], [458, "parameters"], [459, "parameters"], [460, "parameters"], [461, "parameters"], [462, "parameters"], [463, "parameters"], [464, "parameters"], [465, "parameters"], [466, "parameters"], [467, "parameters"], [469, "parameters"], [470, "parameters"], [473, "parameters"], [474, "parameters"], [475, "parameters"], [476, "parameters"], [477, "parameters"], [479, "parameters"], [480, "parameters"], [481, "parameters"], [482, "parameters"], [483, "parameters"], [484, "parameters"], [486, "parameters"], [487, "parameters"], [488, "parameters"], [489, "parameters"], [490, "parameters"], [491, "parameters"], [492, "parameters"], [493, "parameters"], [494, "parameters"], [495, "parameters"], [496, "parameters"], [497, "parameters"], [498, "parameters"], [499, "parameters"], [500, "parameters"], [501, "parameters"], [502, "parameters"], [503, "parameters"], [504, "parameters"], [505, "parameters"], [506, "parameters"], [507, "parameters"], [508, "parameters"], [509, "parameters"], [510, "parameters"], [512, "parameters"], [513, "parameters"], [514, "parameters"], [515, "parameters"], [516, "parameters"], [517, "parameters"], [518, "parameters"], [519, "parameters"], [520, "parameters"], [521, "parameters"], [522, "parameters"], [523, "parameters"], [524, "parameters"], [525, "parameters"], [526, "parameters"], [527, "parameters"], [528, "parameters"], [529, "parameters"], [530, "parameters"], [531, "parameters"], [532, "parameters"], [533, "parameters"], [534, "parameters"], [535, "parameters"], [536, "parameters"], [537, "parameters"], [538, "parameters"], [539, "parameters"], [540, "parameters"], [541, "parameters"], [542, "parameters"], [543, "parameters"], [544, "parameters"], [545, "parameters"], [546, "parameters"], [547, "parameters"], [548, "parameters"], [549, "parameters"], [550, "parameters"], [551, "parameters"], [552, "parameters"], [553, "parameters"], [554, "parameters"], [555, "parameters"], [556, "parameters"], [558, "parameters"], [559, "parameters"], [560, "parameters"], [561, "parameters"], [562, "parameters"], [563, "parameters"], [564, "parameters"], [565, "parameters"], [566, "parameters"], [567, "parameters"], [568, "parameters"], [569, "parameters"], [570, "parameters"], [571, "parameters"], [572, "parameters"], [573, "parameters"], [574, "parameters"], [575, "parameters"], [576, "parameters"], [577, "parameters"], [578, "parameters"], [579, "parameters"], [580, "parameters"], [581, "parameters"], [582, "parameters"], [583, "parameters"], [584, "parameters"], [585, "parameters"], [586, "parameters"], [587, "parameters"], [588, "parameters"], [591, "parameters"]], "Performance / FLOPs": [[547, "performance-flops"]], "Performing backpropagation": [[486, null]], "Pooling Functions": [[303, null], [330, null]], "Pooling Layers": [[394, null], [429, null]], "Potential Pitfalls": [[471, "potential-pitfalls"]], "Pre-Trained Weights": [[593, null]], "Prediction Output": [[255, "prediction-output"], [258, "prediction-output"], [261, "prediction-output"]], "Properties": [[269, "properties"], [486, "properties"]], "Pyramid Vision Transformer (PVT)": [[112, "pyramid-vision-transformer-pvt"]], "Quickstart Examples": [[594, "quickstart-examples"]], "R-CNN": [[238, "r-cnn"], [240, null]], "Raises": [[22, "raises"], [23, "raises"], [24, "raises"], [26, "raises"], [27, "raises"], [28, "raises"], [29, "raises"], [30, "raises"], [31, "raises"], [32, "raises"]], "Random Number Generations": [[478, null]], "References": [[9, "references"], [10, "references"], [11, "references"], [12, "references"], [348, "references"], [456, "references"]], "Regularization": [[296, "regularization"]], "Representation": [[469, "representation"]], "ResNeSt": [[112, "resnest"], [150, null]], "ResNeXt": [[112, "resnext"], [170, null], [593, "resnext"]], "ResNet": [[112, "resnet"], [159, null], [593, "resnet"]], "Return Value": [[441, "return-value"], [442, "return-value"], [443, "return-value"]], "Return Values": [[567, "return-values"]], "Returns": [[4, "returns"], [7, "returns"], [15, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [22, "returns"], [23, "returns"], [24, "returns"], [26, "returns"], [27, "returns"], [28, "returns"], [29, "returns"], [30, "returns"], [31, "returns"], [32, "returns"], [34, "returns"], [46, "returns"], [47, "returns"], [48, "returns"], [49, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [53, "returns"], [54, "returns"], [55, "returns"], [56, "returns"], [57, "returns"], [58, "returns"], [60, "returns"], [61, "returns"], [62, "returns"], [63, "returns"], [64, "returns"], [65, "returns"], [66, "returns"], [67, "returns"], [68, "returns"], [70, "returns"], [71, "returns"], [72, "returns"], [74, "returns"], [75, "returns"], [76, "returns"], [78, "returns"], [79, "returns"], [80, "returns"], [81, "returns"], [84, "returns"], [85, "returns"], [86, "returns"], [87, "returns"], [88, "returns"], [89, "returns"], [90, "returns"], [91, "returns"], [92, "returns"], [93, "returns"], [94, "returns"], [95, "returns"], [97, "returns"], [98, "returns"], [99, "returns"], [101, "returns"], [102, "returns"], [103, "returns"], [105, "returns"], [106, "returns"], [107, "returns"], [108, "returns"], [110, "returns"], [111, "returns"], [114, "returns"], [115, "returns"], [116, "returns"], [127, "returns"], [128, "returns"], [129, "returns"], [130, "returns"], [136, "returns"], [137, "returns"], [138, "returns"], [139, "returns"], [140, "returns"], [141, "returns"], [142, "returns"], [143, "returns"], [144, "returns"], [145, "returns"], [146, "returns"], [147, "returns"], [148, "returns"], [149, "returns"], [151, "returns"], [152, "returns"], [153, "returns"], [154, "returns"], [155, "returns"], [156, "returns"], [157, "returns"], [158, "returns"], [160, "returns"], [161, "returns"], [162, "returns"], [163, "returns"], [164, "returns"], [165, "returns"], [166, "returns"], [167, "returns"], [168, "returns"], [169, "returns"], [171, "returns"], [172, "returns"], [173, "returns"], [174, "returns"], [175, "returns"], [176, "returns"], [178, "returns"], [179, "returns"], [180, "returns"], [181, "returns"], [182, "returns"], [183, "returns"], [184, "returns"], [185, "returns"], [186, "returns"], [188, "returns"], [189, "returns"], [190, "returns"], [191, "returns"], [194, "returns"], [195, "returns"], [196, "returns"], [197, "returns"], [198, "returns"], [199, "returns"], [200, "returns"], [201, "returns"], [202, "returns"], [203, "returns"], [205, "returns"], [206, "returns"], [207, "returns"], [208, "returns"], [210, "returns"], [211, "returns"], [212, "returns"], [213, "returns"], [214, "returns"], [216, "returns"], [218, "returns"], [219, "returns"], [220, "returns"], [223, "returns"], [224, "returns"], [225, "returns"], [227, "returns"], [228, "returns"], [229, "returns"], [230, "returns"], [231, "returns"], [232, "returns"], [233, "returns"], [234, "returns"], [236, "returns"], [237, "returns"], [241, "returns"], [242, "returns"], [243, "returns"], [244, "returns"], [245, "returns"], [246, "returns"], [247, "returns"], [249, "returns"], [250, "returns"], [252, "returns"], [253, "returns"], [254, "returns"], [256, "returns"], [257, "returns"], [259, "returns"], [260, "returns"], [262, "returns"], [265, "returns"], [266, "returns"], [276, "returns"], [277, "returns"], [279, "returns"], [280, "returns"], [281, "returns"], [282, "returns"], [283, "returns"], [284, "returns"], [286, "returns"], [287, "returns"], [288, "returns"], [289, "returns"], [290, "returns"], [291, "returns"], [292, "returns"], [294, "returns"], [295, "returns"], [296, "returns"], [297, "returns"], [298, "returns"], [299, "returns"], [300, "returns"], [301, "returns"], [304, "returns"], [306, "returns"], [307, "returns"], [308, "returns"], [309, "returns"], [310, "returns"], [312, "returns"], [313, "returns"], [314, "returns"], [315, "returns"], [316, "returns"], [318, "returns"], [319, "returns"], [320, "returns"], [321, "returns"], [322, "returns"], [323, "returns"], [324, "returns"], [325, "returns"], [326, "returns"], [327, "returns"], [328, "returns"], [329, "returns"], [331, "returns"], [332, "returns"], [333, "returns"], [334, "returns"], [335, "returns"], [337, "returns"], [339, "returns"], [340, "returns"], [341, "returns"], [349, "returns"], [351, "returns"], [353, "returns"], [354, "returns"], [355, "returns"], [356, "returns"], [357, "returns"], [358, "returns"], [366, "returns"], [392, "returns"], [430, "returns"], [470, "returns"], [471, "returns"], [473, "returns"], [475, "returns"], [476, "returns"], [477, "returns"], [479, "returns"], [480, "returns"], [481, "returns"], [482, "returns"], [483, "returns"], [484, "returns"], [487, "returns"], [488, "returns"], [489, "returns"], [490, "returns"], [491, "returns"], [492, "returns"], [493, "returns"], [494, "returns"], [495, "returns"], [496, "returns"], [497, "returns"], [498, "returns"], [499, "returns"], [500, "returns"], [501, "returns"], [502, "returns"], [503, "returns"], [504, "returns"], [505, "returns"], [506, "returns"], [507, "returns"], [508, "returns"], [509, "returns"], [510, "returns"], [512, "returns"], [513, "returns"], [514, "returns"], [515, "returns"], [516, "returns"], [517, "returns"], [518, "returns"], [519, "returns"], [520, "returns"], [521, "returns"], [522, "returns"], [523, "returns"], [524, "returns"], [525, "returns"], [526, "returns"], [527, "returns"], [528, "returns"], [529, "returns"], [530, "returns"], [531, "returns"], [532, "returns"], [533, "returns"], [534, "returns"], [535, "returns"], [536, "returns"], [537, "returns"], [538, "returns"], [539, "returns"], [540, "returns"], [541, "returns"], [542, "returns"], [543, "returns"], [544, "returns"], [545, "returns"], [546, "returns"], [547, "returns"], [548, "returns"], [549, "returns"], [550, "returns"], [551, "returns"], [552, "returns"], [553, "returns"], [554, "returns"], [555, "returns"], [556, "returns"], [558, "returns"], [559, "returns"], [560, "returns"], [561, "returns"], [562, "returns"], [563, "returns"], [564, "returns"], [565, "returns"], [566, "returns"], [568, "returns"], [569, "returns"], [570, "returns"], [571, "returns"], [572, "returns"], [573, "returns"], [574, "returns"], [575, "returns"], [576, "returns"], [577, "returns"], [578, "returns"], [591, "returns"]], "Reverse Denoising Process": [[220, "reverse-denoising-process"]], "SENet": [[112, "senet"], [177, null]], "SKNet": [[112, "sknet"], [187, null]], "Schedulers": [[455, null]], "See Also": [[456, "see-also"]], "Selective Kernel": [[350, null]], "Sequence-to-Sequence": [[263, null]], "Sparse Layers": [[394, null], [431, null]], "Spatial Functions": [[303, null], [336, null]], "Specifications": [[60, "specifications"], [61, "specifications"], [62, "specifications"], [63, "specifications"], [64, "specifications"], [65, "specifications"], [66, "specifications"], [67, "specifications"], [68, "specifications"], [97, "specifications"], [98, "specifications"], [99, "specifications"]], "Squeeze-and-Excitation": [[350, null]], "Stable sort with duplicates": [[547, null]], "Swin Transformer": [[112, "swin-transformer"]], "SwinTransformer": [[192, null]], "SwinTransformer_V2": [[193, null]], "Switching Between Devices": [[20, "switching-between-devices"]], "Target Format": [[226, "target-format"]], "Targets (Training)": [[223, "targets-training"]], "Targets format": [[223, "targets-format"]], "Tensor Contraction Rules": [[498, "tensor-contraction-rules"]], "Tensor Generating Functions": [[511, null]], "Tensor Operations": [[511, null]], "Tensor Utilities": [[557, null]], "Tensor: The Core Abstraction": [[20, "tensor-the-core-abstraction"]], "Training & Evaluation": [[20, "training-evaluation"]], "Training Notes": [[236, "training-notes"], [237, "training-notes"], [253, "training-notes"], [254, "training-notes"]], "Training Objective": [[220, "training-objective"]], "Training step (sketch)": [[223, "training-step-sketch"]], "Transformer": [[263, "transformer"], [264, null]], "Transformer Layers": [[394, null], [437, null]], "Typical API Surface": [[594, "typical-api-surface"]], "Unary Functions": [[511, null]], "Usage": [[8, "usage"], [92, "usage"], [93, "usage"], [94, "usage"], [95, "usage"], [267, "usage"], [341, "usage"], [446, "usage"], [471, "usage"], [472, "usage"], [559, "usage"], [579, "usage"], [580, "usage"], [590, "usage"]], "Usage Example": [[131, "usage-example"], [132, "usage-example"], [133, "usage-example"], [134, "usage-example"], [135, "usage-example"], [373, "usage-example"], [432, "usage-example"], [433, "usage-example"], [434, "usage-example"], [435, "usage-example"], [436, "usage-example"], [447, "usage-example"], [448, "usage-example"], [449, "usage-example"], [450, "usage-example"], [451, "usage-example"], [452, "usage-example"], [453, "usage-example"], [454, "usage-example"]], "Usage Examples": [[469, "usage-examples"]], "Usage Tips": [[441, "usage-tips"], [442, "usage-tips"], [443, "usage-tips"]], "Use Cases": [[69, "use-cases"]], "Use another Tensor as input": [[544, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using YOLO-V2 with a custom backbone": [[255, null]], "Using YOLO-V2 with default Darknet-19": [[255, null]], "Using YOLO-V3 with default anchors and backbone": [[258, null]], "Using YOLO-V4 with default neck and backbone": [[261, null]], "Using free tensors": [[486, null]], "Using the ASGD Optimizer": [[457, null]], "Using the Adadelta Optimizer": [[458, null]], "Using the Adagrad Optimizer": [[459, null]], "Using the Adam Optimizer": [[460, null]], "Using the AdamW Optimizer": [[461, null]], "Using the Adamax Optimizer": [[462, null]], "Using the NAdam Optimizer": [[463, null]], "Using the RAdam Optimizer": [[464, null]], "Using the RMSprop Optimizer": [[465, null]], "Using the Rprop Optimizer": [[466, null]], "Using the SGD Optimizer": [[467, null]], "Utility Functions": [[303, null], [338, null]], "VAE": [[219, null]], "VGGNet": [[112, "vggnet"], [204, null], [593, "vggnet"]], "Variational Autoencoder (VAE)": [[221, "variational-autoencoder-vae"]], "Verification": [[20, "verification"]], "ViT": [[209, null]], "Vision Layers": [[394, null], [439, null]], "Visual Transformer (ViT)": [[112, "visual-transformer-vit"]], "Weight Initializations": [[352, null]], "Xception": [[112, "xception"], [215, null]], "YOLO": [[238, "yolo"]], "YOLO Series": [[251, null]], "YOLO-v1": [[238, "yolo-v1"], [252, null]], "YOLO-v2": [[238, "yolo-v2"], [255, null]], "YOLO-v2 Loss": [[255, "yolo-v2-loss"]], "YOLO-v3": [[238, "yolo-v3"], [258, null]], "YOLO-v3 Loss": [[258, "yolo-v3-loss"]], "YOLO-v4": [[238, "yolo-v4"], [261, null]], "YOLO-v4 Loss": [[261, "yolo-v4-loss"]], "ZFNet": [[112, "zfnet"], [217, null]], "alexnet": [[34, null]], "coatnet_0": [[36, null]], "coatnet_1": [[37, null]], "coatnet_2": [[38, null]], "coatnet_3": [[39, null]], "coatnet_4": [[40, null]], "coatnet_5": [[41, null]], "coatnet_6": [[42, null]], "coatnet_7": [[43, null]], "convnext_base": [[46, null]], "convnext_large": [[47, null]], "convnext_small": [[48, null]], "convnext_tiny": [[49, null]], "convnext_v2_atto": [[50, null]], "convnext_v2_base": [[51, null]], "convnext_v2_femto": [[52, null]], "convnext_v2_huge": [[53, null]], "convnext_v2_large": [[54, null]], "convnext_v2_nano": [[55, null]], "convnext_v2_pico": [[56, null]], "convnext_v2_tiny": [[57, null]], "convnext_xlarge": [[58, null]], "crossvit_15": [[60, null]], "crossvit_15_dagger": [[61, null]], "crossvit_18": [[62, null]], "crossvit_18_dagger": [[63, null]], "crossvit_9": [[64, null]], "crossvit_9_dagger": [[65, null]], "crossvit_base": [[66, null]], "crossvit_small": [[67, null]], "crossvit_tiny": [[68, null]], "csp_darknet_53": [[70, null]], "csp_resnet_50": [[71, null]], "csp_resnext_50_32x4d": [[72, null]], "cvt_13": [[74, null]], "cvt_21": [[75, null]], "cvt_w24": [[76, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "data.Subset": [[3, null]], "data.TensorDataset": [[4, null]], "data.random_split": [[7, null]], "densenet_121": [[78, null]], "densenet_169": [[79, null]], "densenet_201": [[80, null]], "densenet_264": [[81, null]], "detr_r101": [[224, null]], "detr_r50": [[225, null]], "efficientdet_d0": [[227, null]], "efficientdet_d1": [[228, null]], "efficientdet_d2": [[229, null]], "efficientdet_d3": [[230, null]], "efficientdet_d4": [[231, null]], "efficientdet_d5": [[232, null]], "efficientdet_d6": [[233, null]], "efficientdet_d7": [[234, null]], "efficientformer_l1": [[97, null]], "efficientformer_l3": [[98, null]], "efficientformer_l7": [[99, null]], "efficientnet_b0": [[84, null]], "efficientnet_b1": [[85, null]], "efficientnet_b2": [[86, null]], "efficientnet_b3": [[87, null]], "efficientnet_b4": [[88, null]], "efficientnet_b5": [[89, null]], "efficientnet_b6": [[90, null]], "efficientnet_b7": [[91, null]], "efficientnet_v2_l": [[92, null]], "efficientnet_v2_m": [[93, null]], "efficientnet_v2_s": [[94, null]], "efficientnet_v2_xl": [[95, null]], "faster_rcnn_resnet_101_fpn": [[236, null]], "faster_rcnn_resnet_50_fpn": [[237, null]], "inception_next_atto": [[105, null]], "inception_next_base": [[106, null]], "inception_next_small": [[107, null]], "inception_next_tiny": [[108, null]], "inception_resnet_v1": [[110, null]], "inception_resnet_v2": [[111, null]], "inception_v1": [[101, null]], "inception_v3": [[102, null]], "inception_v4": [[103, null]], "lenet_1": [[114, null]], "lenet_4": [[115, null]], "lenet_5": [[116, null]], "lr_scheduler.CosineAnnealingLR": [[447, null]], "lr_scheduler.CyclicLR": [[448, null]], "lr_scheduler.ExponentialLR": [[449, null]], "lr_scheduler.LRScheduler": [[450, null]], "lr_scheduler.LambdaLR": [[451, null]], "lr_scheduler.MultiStepLR": [[452, null]], "lr_scheduler.ReduceLROnPlateau": [[453, null]], "lr_scheduler.StepLR": [[454, null]], "lucid.Numeric": [[469, null]], "lucid.Tensor": [[486, null]], "lucid.abs": [[512, null]], "lucid.add": [[487, null]], "lucid.arange": [[499, null]], "lucid.arccos": [[513, null]], "lucid.arcsin": [[514, null]], "lucid.arctan": [[515, null]], "lucid.argmax": [[545, null]], "lucid.argmin": [[546, null]], "lucid.argsort": [[547, null]], "lucid.broadcast_to": [[548, null]], "lucid.ceil": [[516, null]], "lucid.chunk": [[549, null]], "lucid.clip": [[517, null]], "lucid.concatenate": [[550, null]], "lucid.cos": [[518, null]], "lucid.cosh": [[519, null]], "lucid.count_flops": [[470, null]], "lucid.cube": [[520, null]], "lucid.cumprod": [[521, null]], "lucid.cumsum": [[522, null]], "lucid.data": [[5, null]], "lucid.datasets": [[8, null]], "lucid.diag": [[500, null]], "lucid.diagonal": [[551, null]], "lucid.div": [[488, null]], "lucid.dot": [[489, null]], "lucid.einops": [[14, null]], "lucid.einops.einsum": [[15, null]], "lucid.einops.rearrange": [[17, null]], "lucid.einops.reduce": [[18, null]], "lucid.einops.repeat": [[19, null]], "lucid.empty": [[501, null]], "lucid.empty_like": [[502, null]], "lucid.exp": [[523, null]], "lucid.eye": [[503, null]], "lucid.flatten": [[552, null]], "lucid.floor": [[524, null]], "lucid.full": [[504, null]], "lucid.full_like": [[505, null]], "lucid.grad_enabled": [[471, null]], "lucid.histogram": [[553, null]], "lucid.histogram2d": [[554, null]], "lucid.histogramdd": [[555, null]], "lucid.hstack": [[556, null]], "lucid.inner": [[490, null]], "lucid.linalg": [[21, null]], "lucid.linalg.cholesky": [[22, null]], "lucid.linalg.det": [[23, null]], "lucid.linalg.eig": [[24, null]], "lucid.linalg.inv": [[26, null]], "lucid.linalg.matrix_power": [[27, null]], "lucid.linalg.norm": [[28, null]], "lucid.linalg.pinv": [[29, null]], "lucid.linalg.qr": [[30, null]], "lucid.linalg.solve": [[31, null]], "lucid.linalg.svd": [[32, null]], "lucid.linspace": [[506, null]], "lucid.load": [[475, null]], "lucid.log": [[525, null]], "lucid.log2": [[526, null]], "lucid.masked_fill": [[558, null]], "lucid.matmul": [[491, null]], "lucid.max": [[527, null]], "lucid.maximum": [[492, null]], "lucid.mean": [[528, null]], "lucid.meshgrid": [[559, null]], "lucid.min": [[529, null]], "lucid.minimum": [[493, null]], "lucid.models": [[222, null]], "lucid.multiply": [[494, null]], "lucid.newaxis": [[472, null]], "lucid.nn": [[440, null]], "lucid.nn.functional": [[303, null]], "lucid.no_grad": [[473, null]], "lucid.nonzero": [[560, null]], "lucid.ones": [[507, null]], "lucid.ones_like": [[508, null]], "lucid.optim": [[456, null]], "lucid.outer": [[495, null]], "lucid.pad": [[561, null]], "lucid.power": [[496, null]], "lucid.random": [[485, null]], "lucid.random.bernoulli": [[477, null]], "lucid.random.permutation": [[479, null]], "lucid.random.rand": [[480, null]], "lucid.random.randint": [[481, null]], "lucid.random.randn": [[482, null]], "lucid.random.seed": [[483, null]], "lucid.random.uniform": [[484, null]], "lucid.ravel": [[562, null]], "lucid.reciprocal": [[530, null]], "lucid.register_model": [[474, null]], "lucid.repeat": [[563, null]], "lucid.reshape": [[564, null]], "lucid.roll": [[565, null]], "lucid.round": [[531, null]], "lucid.save": [[476, null]], "lucid.sign": [[532, null]], "lucid.sin": [[533, null]], "lucid.sinh": [[534, null]], "lucid.sort": [[566, null]], "lucid.split": [[567, null]], "lucid.sqrt": [[535, null]], "lucid.square": [[536, null]], "lucid.squeeze": [[568, null]], "lucid.stack": [[569, null]], "lucid.sub": [[497, null]], "lucid.sum": [[537, null]], "lucid.swapaxes": [[538, null]], "lucid.tan": [[539, null]], "lucid.tanh": [[540, null]], "lucid.tensor": [[544, null]], "lucid.tensordot": [[498, null]], "lucid.tile": [[570, null]], "lucid.topk": [[571, null]], "lucid.trace": [[541, null]], "lucid.transforms": [[590, null]], "lucid.transpose": [[542, null]], "lucid.tril": [[572, null]], "lucid.triu": [[573, null]], "lucid.unbind": [[574, null]], "lucid.unique": [[575, null]], "lucid.unsqueeze": [[576, null]], "lucid.var": [[543, null]], "lucid.visual": [[592, null]], "lucid.vstack": [[577, null]], "lucid.weights": [[594, null]], "lucid.where": [[578, null]], "lucid.zeros": [[509, null]], "lucid.zeros_like": [[510, null]], "maxvit_base": [[118, null], [119, null]], "maxvit_small": [[120, null]], "maxvit_tiny": [[121, null]], "maxvit_xlarge": [[122, null]], "mobilenet": [[127, null]], "mobilenet_v2": [[128, null]], "mobilenet_v3_large": [[129, null]], "mobilenet_v3_small": [[130, null]], "mobilenet_v4_conv_large": [[131, null]], "mobilenet_v4_conv_medium": [[132, null]], "mobilenet_v4_conv_small": [[133, null]], "mobilenet_v4_hybrid_large": [[134, null]], "mobilenet_v4_hybrid_medium": [[135, null]], "nn.AdaptiveAvgPool1d": [[417, null]], "nn.AdaptiveAvgPool2d": [[418, null]], "nn.AdaptiveAvgPool3d": [[419, null]], "nn.AdaptiveMaxPool1d": [[420, null]], "nn.AdaptiveMaxPool2d": [[421, null]], "nn.AdaptiveMaxPool3d": [[422, null]], "nn.AlphaDropout": [[384, null]], "nn.AvgPool1d": [[423, null]], "nn.AvgPool2d": [[424, null]], "nn.AvgPool3d": [[425, null]], "nn.BCELoss": [[400, null]], "nn.BCEWithLogitsLoss": [[401, null]], "nn.BatchNorm1d": [[407, null]], "nn.BatchNorm2d": [[408, null]], "nn.BatchNorm3d": [[409, null]], "nn.Bilinear": [[395, null]], "nn.Buffer": [[267, null]], "nn.Conv1d": [[376, null]], "nn.Conv2d": [[377, null]], "nn.Conv3d": [[378, null]], "nn.ConvBNReLU1d": [[342, null]], "nn.ConvBNReLU2d": [[343, null]], "nn.ConvBNReLU3d": [[344, null]], "nn.ConvTranspose1d": [[379, null]], "nn.ConvTranspose2d": [[380, null]], "nn.ConvTranspose3d": [[381, null]], "nn.CrossEntropyLoss": [[402, null]], "nn.DepthSeparableConv1d": [[345, null]], "nn.DepthSeparableConv2d": [[346, null]], "nn.DepthSeparableConv3d": [[347, null]], "nn.DropBlock": [[385, null]], "nn.DropPath": [[386, null]], "nn.Dropout": [[387, null]], "nn.Dropout1d": [[388, null]], "nn.Dropout2d": [[389, null]], "nn.Dropout3d": [[390, null]], "nn.ELU": [[359, null]], "nn.Embedding": [[430, null]], "nn.Flatten": [[396, null]], "nn.GELU": [[360, null]], "nn.GlobalResponseNorm": [[410, null]], "nn.GroupNorm": [[411, null]], "nn.HardSigmoid": [[361, null]], "nn.HardSwish": [[362, null]], "nn.HuberLoss": [[403, null]], "nn.Identity": [[397, null]], "nn.InstanceNorm1d": [[412, null]], "nn.InstanceNorm2d": [[413, null]], "nn.InstanceNorm3d": [[414, null]], "nn.LayerNorm": [[415, null]], "nn.LeakyReLU": [[363, null]], "nn.Linear": [[398, null]], "nn.MSELoss": [[404, null]], "nn.MaxPool1d": [[426, null]], "nn.MaxPool2d": [[427, null]], "nn.MaxPool3d": [[428, null]], "nn.Mish": [[364, null]], "nn.Module": [[268, null]], "nn.ModuleDict": [[270, null]], "nn.ModuleList": [[271, null]], "nn.MultiHeadAttention": [[373, null]], "nn.NLLLoss": [[405, null]], "nn.Parameter": [[269, null]], "nn.ParameterDict": [[272, null]], "nn.ParameterList": [[273, null]], "nn.ReLU": [[365, null]], "nn.ReLU6": [[366, null]], "nn.Rearrange": [[392, null]], "nn.SELU": [[367, null]], "nn.SEModule": [[348, null]], "nn.ScaledDotProductAttention": [[374, null]], "nn.SelectiveKernel": [[349, null]], "nn.Sequential": [[274, null]], "nn.Sigmoid": [[368, null]], "nn.Softmax": [[369, null]], "nn.Swish": [[370, null]], "nn.Tanh": [[371, null]], "nn.Transformer": [[432, null]], "nn.TransformerDecoder": [[433, null]], "nn.TransformerDecoderLayer": [[434, null]], "nn.TransformerEncoder": [[435, null]], "nn.TransformerEncoderLayer": [[436, null]], "nn.Unfold": [[382, null]], "nn.Upsample": [[438, null]], "nn.functional.adaptive_avg_pool1d": [[321, null]], "nn.functional.adaptive_avg_pool2d": [[322, null]], "nn.functional.adaptive_avg_pool3d": [[323, null]], "nn.functional.adaptive_max_pool1d": [[324, null]], "nn.functional.adaptive_max_pool2d": [[325, null]], "nn.functional.adaptive_max_pool3d": [[326, null]], "nn.functional.affine_grid": [[334, null]], "nn.functional.alpha_dropout": [[295, null]], "nn.functional.avg_pool1d": [[327, null]], "nn.functional.avg_pool2d": [[328, null]], "nn.functional.avg_pool3d": [[329, null]], "nn.functional.batch_norm": [[314, null]], "nn.functional.bilinear": [[304, null]], "nn.functional.binary_cross_entropy": [[307, null]], "nn.functional.binary_cross_entropy_with_logits": [[308, null]], "nn.functional.conv1d": [[287, null]], "nn.functional.conv2d": [[288, null]], "nn.functional.conv3d": [[289, null]], "nn.functional.conv_transpose1d": [[290, null]], "nn.functional.conv_transpose2d": [[291, null]], "nn.functional.conv_transpose3d": [[292, null]], "nn.functional.cross_entropy": [[309, null]], "nn.functional.drop_block": [[296, null]], "nn.functional.drop_path": [[297, null]], "nn.functional.dropout": [[298, null]], "nn.functional.dropout1d": [[299, null]], "nn.functional.dropout2d": [[300, null]], "nn.functional.dropout3d": [[301, null]], "nn.functional.elu": [[276, null]], "nn.functional.embedding": [[337, null]], "nn.functional.gelu": [[277, null]], "nn.functional.global_response_norm": [[315, null]], "nn.functional.grid_sample": [[335, null]], "nn.functional.group_norm": [[316, null]], "nn.functional.huber_loss": [[310, null]], "nn.functional.instance_norm": [[318, null]], "nn.functional.interpolate": [[339, null]], "nn.functional.layer_norm": [[319, null]], "nn.functional.leaky_relu": [[279, null]], "nn.functional.linear": [[306, null]], "nn.functional.max_pool1d": [[331, null]], "nn.functional.max_pool2d": [[332, null]], "nn.functional.max_pool3d": [[333, null]], "nn.functional.mse_loss": [[312, null]], "nn.functional.nll_loss": [[313, null]], "nn.functional.normalize": [[320, null]], "nn.functional.one_hot": [[340, null]], "nn.functional.relu": [[280, null]], "nn.functional.rotate": [[341, null]], "nn.functional.scaled_dot_product_attention": [[286, null]], "nn.functional.selu": [[281, null]], "nn.functional.sigmoid": [[282, null]], "nn.functional.softmax": [[283, null]], "nn.functional.tanh": [[284, null]], "nn.functional.unfold": [[294, null]], "nn.init.constant": [[351, null]], "nn.init.kaiming_normal": [[353, null]], "nn.init.kaiming_uniform": [[354, null]], "nn.init.normal": [[355, null]], "nn.init.uniform": [[356, null]], "nn.init.xavier_normal": [[357, null]], "nn.init.xavier_uniform": [[358, null]], "nn.util.clip_grad_norm": [[441, null]], "nn.util.clip_grad_value": [[442, null]], "nn.util.grad_norm": [[443, null]], "optim.ASGD": [[457, null]], "optim.Adadelta": [[458, null]], "optim.Adagrad": [[459, null]], "optim.Adam": [[460, null]], "optim.AdamW": [[461, null]], "optim.Adamax": [[462, null]], "optim.NAdam": [[463, null]], "optim.Optimizer": [[445, null]], "optim.RAdam": [[464, null]], "optim.RMSprop": [[465, null]], "optim.Rprop": [[466, null]], "optim.SGD": [[467, null]], "optim.lr_scheduler": [[446, null]], "pvt_huge": [[138, null]], "pvt_large": [[139, null]], "pvt_medium": [[140, null]], "pvt_small": [[141, null]], "pvt_tiny": [[142, null]], "pvt_v2_b0": [[143, null]], "pvt_v2_b1": [[144, null]], "pvt_v2_b2": [[145, null]], "pvt_v2_b2_li": [[146, null]], "pvt_v2_b3": [[147, null]], "pvt_v2_b4": [[148, null]], "pvt_v2_b5": [[149, null]], "rearrange": [[14, "rearrange"]], "reduce": [[14, "reduce"]], "repeat": [[14, "repeat"]], "resnest_101": [[151, null]], "resnest_14": [[152, null]], "resnest_200": [[153, null]], "resnest_26": [[154, null]], "resnest_269": [[155, null]], "resnest_50": [[156, null]], "resnest_50_1s4x24d": [[157, null]], "resnest_50_4s2x40d": [[158, null]], "resnet_1001": [[160, null]], "resnet_101": [[161, null]], "resnet_152": [[162, null]], "resnet_18": [[163, null]], "resnet_200": [[164, null]], "resnet_269": [[165, null]], "resnet_34": [[166, null]], "resnet_50": [[167, null]], "resnext_101_32x16d": [[171, null]], "resnext_101_32x32d": [[172, null]], "resnext_101_32x4d": [[173, null]], "resnext_101_32x8d": [[174, null]], "resnext_101_64x4d": [[175, null]], "resnext_50_32x4d": [[176, null]], "se_resnet_101": [[178, null]], "se_resnet_152": [[179, null]], "se_resnet_18": [[180, null]], "se_resnet_34": [[181, null]], "se_resnet_50": [[182, null]], "se_resnext_101_32x4d": [[183, null]], "se_resnext_101_32x8d": [[184, null]], "se_resnext_101_64x4d": [[185, null]], "se_resnext_50_32x4d": [[186, null]], "sk_resnet_18": [[188, null]], "sk_resnet_34": [[189, null]], "sk_resnet_50": [[190, null]], "sk_resnext_50_32x4d": [[191, null]], "swin_base": [[194, null]], "swin_large": [[195, null]], "swin_small": [[196, null]], "swin_tiny": [[197, null]], "swin_v2_base": [[198, null]], "swin_v2_giant": [[199, null]], "swin_v2_huge": [[200, null]], "swin_v2_large": [[201, null]], "swin_v2_small": [[202, null]], "swin_v2_tiny": [[203, null]], "transformer_base": [[265, null]], "transformer_big": [[266, null]], "transforms.CenterCrop": [[581, null]], "transforms.Compose": [[579, null]], "transforms.Normalize": [[582, null]], "transforms.RandomCrop": [[583, null]], "transforms.RandomGrayscale": [[584, null]], "transforms.RandomHorizontalFlip": [[585, null]], "transforms.RandomRotation": [[586, null]], "transforms.RandomVerticalFlip": [[587, null]], "transforms.Resize": [[588, null]], "transforms.ToTensor": [[580, null]], "util.FPN": [[241, null]], "util.MultiScaleROIAlign": [[242, null]], "util.ROIAlign": [[243, null]], "util.SelectiveSearch": [[244, null]], "util.apply_deltas": [[245, null]], "util.bbox_to_delta": [[246, null]], "util.clip_boxes": [[247, null]], "util.iou": [[249, null]], "util.nms": [[250, null]], "vggnet_11": [[205, null]], "vggnet_13": [[206, null]], "vggnet_16": [[207, null]], "vggnet_19": [[208, null]], "visual.draw_tensor_graph": [[591, null]], "vit_base": [[210, null]], "vit_huge": [[211, null]], "vit_large": [[212, null]], "vit_small": [[213, null]], "vit_tiny": [[214, null]], "wide_resnet_101": [[168, null]], "wide_resnet_50": [[169, null]], "xception": [[216, null]], "yolo_v1": [[253, null]], "yolo_v1_tiny": [[254, null]], "yolo_v2": [[256, null]], "yolo_v2_tiny": [[257, null]], "yolo_v3": [[259, null]], "yolo_v3_tiny": [[260, null]], "yolo_v4": [[262, null]], "zfnet": [[218, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/Subset", "data/TensorDataset", "data/data", "data/utilities/index", "data/utilities/random_split", "datasets/datasets", "datasets/image/CIFAR10", "datasets/image/CIFAR100", "datasets/image/FashionMNIST", "datasets/image/MNIST", "datasets/image/index", "einops/einops", "einops/functions/einsum", "einops/functions/index", "einops/functions/rearrange", "einops/functions/reduce", "einops/functions/repeat", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/imgclf/alex/AlexNet_", "models/imgclf/alex/alexnet", "models/imgclf/coatnet/CoAtNet", "models/imgclf/coatnet/coatnet_0", "models/imgclf/coatnet/coatnet_1", "models/imgclf/coatnet/coatnet_2", "models/imgclf/coatnet/coatnet_3", "models/imgclf/coatnet/coatnet_4", "models/imgclf/coatnet/coatnet_5", "models/imgclf/coatnet/coatnet_6", "models/imgclf/coatnet/coatnet_7", "models/imgclf/convnext/ConvNeXt", "models/imgclf/convnext/ConvNeXt_V2", "models/imgclf/convnext/convnext_base", "models/imgclf/convnext/convnext_large", "models/imgclf/convnext/convnext_small", "models/imgclf/convnext/convnext_tiny", "models/imgclf/convnext/convnext_v2_atto", "models/imgclf/convnext/convnext_v2_base", "models/imgclf/convnext/convnext_v2_femto", "models/imgclf/convnext/convnext_v2_huge", "models/imgclf/convnext/convnext_v2_large", "models/imgclf/convnext/convnext_v2_nano", "models/imgclf/convnext/convnext_v2_pico", "models/imgclf/convnext/convnext_v2_tiny", "models/imgclf/convnext/convnext_xlarge", "models/imgclf/crossvit/CrossViT", "models/imgclf/crossvit/crossvit_15", "models/imgclf/crossvit/crossvit_15_dagger", "models/imgclf/crossvit/crossvit_18", "models/imgclf/crossvit/crossvit_18_dagger", "models/imgclf/crossvit/crossvit_9", "models/imgclf/crossvit/crossvit_9_dagger", "models/imgclf/crossvit/crossvit_base", "models/imgclf/crossvit/crossvit_small", "models/imgclf/crossvit/crossvit_tiny", "models/imgclf/cspnet/CSPNet", "models/imgclf/cspnet/csp_darknet_53", "models/imgclf/cspnet/csp_resnet_50", "models/imgclf/cspnet/csp_resnext_50_32x4d", "models/imgclf/cvt/CvT", "models/imgclf/cvt/cvt_13", "models/imgclf/cvt/cvt_21", "models/imgclf/cvt/cvt_w24", "models/imgclf/dense/DenseNet", "models/imgclf/dense/densenet_121", "models/imgclf/dense/densenet_169", "models/imgclf/dense/densenet_201", "models/imgclf/dense/densenet_264", "models/imgclf/efficient/EfficientNet", "models/imgclf/efficient/EfficientNet_V2", "models/imgclf/efficient/efficientnet_b0", "models/imgclf/efficient/efficientnet_b1", "models/imgclf/efficient/efficientnet_b2", "models/imgclf/efficient/efficientnet_b3", "models/imgclf/efficient/efficientnet_b4", "models/imgclf/efficient/efficientnet_b5", "models/imgclf/efficient/efficientnet_b6", "models/imgclf/efficient/efficientnet_b7", "models/imgclf/efficient/efficientnet_v2_l", "models/imgclf/efficient/efficientnet_v2_m", "models/imgclf/efficient/efficientnet_v2_s", "models/imgclf/efficient/efficientnet_v2_xl", "models/imgclf/efficientformer/EfficientFormer", "models/imgclf/efficientformer/efficientformer_l1", "models/imgclf/efficientformer/efficientformer_l3", "models/imgclf/efficientformer/efficientformer_l7", "models/imgclf/inception/Inception", "models/imgclf/inception/inception_v1", "models/imgclf/inception/inception_v3", "models/imgclf/inception/inception_v4", "models/imgclf/inception_next/InceptionNeXt", "models/imgclf/inception_next/inception_next_atto", "models/imgclf/inception_next/inception_next_base", "models/imgclf/inception_next/inception_next_small", "models/imgclf/inception_next/inception_next_tiny", "models/imgclf/inception_res/InceptionResNet", "models/imgclf/inception_res/inception_resnet_v1", "models/imgclf/inception_res/inception_resnet_v2", "models/imgclf/index", "models/imgclf/lenet/LeNet", "models/imgclf/lenet/lenet_1", "models/imgclf/lenet/lenet_4", "models/imgclf/lenet/lenet_5", "models/imgclf/maxvit/MaxViT", "models/imgclf/maxvit/maxvit_base", "models/imgclf/maxvit/maxvit_large", "models/imgclf/maxvit/maxvit_small", "models/imgclf/maxvit/maxvit_tiny", "models/imgclf/maxvit/maxvit_xlarge", "models/imgclf/mobile/MobileNet_", "models/imgclf/mobile/MobileNet_V2_", "models/imgclf/mobile/MobileNet_V3", "models/imgclf/mobile/MobileNet_V4", "models/imgclf/mobile/mobilenet", "models/imgclf/mobile/mobilenet_v2", "models/imgclf/mobile/mobilenet_v3_large", "models/imgclf/mobile/mobilenet_v3_small", "models/imgclf/mobile/mobilenet_v4_conv_large", "models/imgclf/mobile/mobilenet_v4_conv_medium", "models/imgclf/mobile/mobilenet_v4_conv_small", "models/imgclf/mobile/mobilenet_v4_hybrid_large", "models/imgclf/mobile/mobilenet_v4_hybrid_medium", "models/imgclf/pvt/PVT", "models/imgclf/pvt/PVT_V2", "models/imgclf/pvt/pvt_huge", "models/imgclf/pvt/pvt_large", "models/imgclf/pvt/pvt_medium", "models/imgclf/pvt/pvt_small", "models/imgclf/pvt/pvt_tiny", "models/imgclf/pvt/pvt_v2_b0", "models/imgclf/pvt/pvt_v2_b1", "models/imgclf/pvt/pvt_v2_b2", "models/imgclf/pvt/pvt_v2_b2_li", "models/imgclf/pvt/pvt_v2_b3", "models/imgclf/pvt/pvt_v2_b4", "models/imgclf/pvt/pvt_v2_b5", "models/imgclf/resnest/ResNeSt", "models/imgclf/resnest/resnest_101", "models/imgclf/resnest/resnest_14", "models/imgclf/resnest/resnest_200", "models/imgclf/resnest/resnest_26", "models/imgclf/resnest/resnest_269", "models/imgclf/resnest/resnest_50", "models/imgclf/resnest/resnest_50_1s4x24d", "models/imgclf/resnest/resnest_50_4s2x40d", "models/imgclf/resnet/ResNet", "models/imgclf/resnet/resnet_1001", "models/imgclf/resnet/resnet_101", "models/imgclf/resnet/resnet_152", "models/imgclf/resnet/resnet_18", "models/imgclf/resnet/resnet_200", "models/imgclf/resnet/resnet_269", "models/imgclf/resnet/resnet_34", "models/imgclf/resnet/resnet_50", "models/imgclf/resnet/wide_resnet_101", "models/imgclf/resnet/wide_resnet_50", "models/imgclf/resnext/ResNeXt", "models/imgclf/resnext/resnext_101_32x16d", "models/imgclf/resnext/resnext_101_32x32d", "models/imgclf/resnext/resnext_101_32x4d", "models/imgclf/resnext/resnext_101_32x8d", "models/imgclf/resnext/resnext_101_64x4d", "models/imgclf/resnext/resnext_50_32x4d", "models/imgclf/senet/SENet", "models/imgclf/senet/se_resnet_101", "models/imgclf/senet/se_resnet_152", "models/imgclf/senet/se_resnet_18", "models/imgclf/senet/se_resnet_34", "models/imgclf/senet/se_resnet_50", "models/imgclf/senet/se_resnext_101_32x4d", "models/imgclf/senet/se_resnext_101_32x8d", "models/imgclf/senet/se_resnext_101_64x4d", "models/imgclf/senet/se_resnext_50_32x4d", "models/imgclf/sknet/SKNet", "models/imgclf/sknet/sk_resnet_18", "models/imgclf/sknet/sk_resnet_34", "models/imgclf/sknet/sk_resnet_50", "models/imgclf/sknet/sk_resnext_50_32x4d", "models/imgclf/swin/SwinTransformer", "models/imgclf/swin/SwinTransformer_V2", "models/imgclf/swin/swin_base", "models/imgclf/swin/swin_large", "models/imgclf/swin/swin_small", "models/imgclf/swin/swin_tiny", "models/imgclf/swin/swin_v2_base", "models/imgclf/swin/swin_v2_giant", "models/imgclf/swin/swin_v2_huge", "models/imgclf/swin/swin_v2_large", "models/imgclf/swin/swin_v2_small", "models/imgclf/swin/swin_v2_tiny", "models/imgclf/vgg/VGGNet", "models/imgclf/vgg/vggnet_11", "models/imgclf/vgg/vggnet_13", "models/imgclf/vgg/vggnet_16", "models/imgclf/vgg/vggnet_19", "models/imgclf/vit/ViT", "models/imgclf/vit/vit_base", "models/imgclf/vit/vit_huge", "models/imgclf/vit/vit_large", "models/imgclf/vit/vit_small", "models/imgclf/vit/vit_tiny", "models/imgclf/xception/Xception_", "models/imgclf/xception/xception", "models/imgclf/zfnet/ZFNet_", "models/imgclf/zfnet/zfnet", "models/imggen/autoencoder/VAE", "models/imggen/diffusion/DDPM", "models/imggen/index", "models/models", "models/objdet/detr/DETR", "models/objdet/detr/detr_r101", "models/objdet/detr/detr_r50", "models/objdet/efficientdet/EfficientDet", "models/objdet/efficientdet/efficientdet_d0", "models/objdet/efficientdet/efficientdet_d1", "models/objdet/efficientdet/efficientdet_d2", "models/objdet/efficientdet/efficientdet_d3", "models/objdet/efficientdet/efficientdet_d4", "models/objdet/efficientdet/efficientdet_d5", "models/objdet/efficientdet/efficientdet_d6", "models/objdet/efficientdet/efficientdet_d7", "models/objdet/faster_rcnn/FasterRCNN", "models/objdet/faster_rcnn/faster_rcnn_resnet_101_fpn", "models/objdet/faster_rcnn/faster_rcnn_resnet_50_fpn", "models/objdet/index", "models/objdet/rcnn/FastRCNN", "models/objdet/rcnn/RCNN", "models/objdet/utilities/FPN", "models/objdet/utilities/MultiScaleROIAlign", "models/objdet/utilities/ROIAlign", "models/objdet/utilities/SelectiveSearch", "models/objdet/utilities/apply_deltas", "models/objdet/utilities/bbox_to_delta", "models/objdet/utilities/clip_boxes", "models/objdet/utilities/index", "models/objdet/utilities/iou", "models/objdet/utilities/nms", "models/objdet/yolo/index", "models/objdet/yolo/v1/YOLO_V1_", "models/objdet/yolo/v1/yolo_v1", "models/objdet/yolo/v1/yolo_v1_tiny", "models/objdet/yolo/v2/YOLO_V2_", "models/objdet/yolo/v2/yolo_v2", "models/objdet/yolo/v2/yolo_v2_tiny", "models/objdet/yolo/v3/YOLO_V3_", "models/objdet/yolo/v3/yolo_v3", "models/objdet/yolo/v3/yolo_v3_tiny", "models/objdet/yolo/v4/YOLO_V4_", "models/objdet/yolo/v4/yolo_v4", "models/seq2seq/index", "models/seq2seq/transformer/Transformer", "models/seq2seq/transformer/transformer_base", "models/seq2seq/transformer/transformer_big", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/attention/index", "nn/functions/attention/scaled_dot_product_attention", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/conv_transpose1d", "nn/functions/conv/conv_transpose2d", "nn/functions/conv/conv_transpose3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/drop_block", "nn/functions/drop/drop_path", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/binary_cross_entropy_with_logits", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/global_response_norm", "nn/functions/norm/group_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/norm/normalize", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/adaptive_max_pool1d", "nn/functions/pool/adaptive_max_pool2d", "nn/functions/pool/adaptive_max_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/spatial/affine_grid", "nn/functions/spatial/grid_sample", "nn/functions/spatial/index", "nn/functions/util/embedding", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/one_hot", "nn/functions/util/rotate", "nn/fused/ConvBNReLU1d", "nn/fused/ConvBNReLU2d", "nn/fused/ConvBNReLU3d", "nn/fused/DepthSeparableConv1d", "nn/fused/DepthSeparableConv2d", "nn/fused/DepthSeparableConv3d", "nn/fused/SEModule", "nn/fused/SelectiveKernel", "nn/fused/index", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/HardSigmoid", "nn/modules/activation/HardSwish", "nn/modules/activation/LeakyReLU", "nn/modules/activation/Mish", "nn/modules/activation/ReLU", "nn/modules/activation/ReLU6", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Swish", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/attention/MultiHeadAttention", "nn/modules/attention/ScaledDotProductAttention", "nn/modules/attention/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/ConvTranspose1d", "nn/modules/conv/ConvTranspose2d", "nn/modules/conv/ConvTranspose3d", "nn/modules/conv/Unfold", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/DropBlock", "nn/modules/drop/DropPath", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/einops/Rearrange", "nn/modules/einops/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Flatten", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/BCEWithLogitsLoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/GlobalResponseNorm", "nn/modules/norm/GroupNorm", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AdaptiveMaxPool1d", "nn/modules/pool/AdaptiveMaxPool2d", "nn/modules/pool/AdaptiveMaxPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/modules/sparse/Embedding", "nn/modules/sparse/index", "nn/modules/transformer/Transformer", "nn/modules/transformer/TransformerDecoder", "nn/modules/transformer/TransformerDecoderLayer", "nn/modules/transformer/TransformerEncoder", "nn/modules/transformer/TransformerEncoderLayer", "nn/modules/transformer/index", "nn/modules/vision/Upsample", "nn/modules/vision/index", "nn/nn", "nn/utilities/clip_grad_norm", "nn/utilities/clip_grad_value", "nn/utilities/grad_norm", "nn/utilities/index", "optim/Optimizer", "optim/lr_scheduler", "optim/lr_scheduler/CosineAnnealingLR", "optim/lr_scheduler/CyclicLR", "optim/lr_scheduler/ExponentialLR", "optim/lr_scheduler/LRScheduler", "optim/lr_scheduler/LambdaLR", "optim/lr_scheduler/MultiStepLR", "optim/lr_scheduler/ReduceLROnPlateau", "optim/lr_scheduler/StepLR", "optim/lr_scheduler/index", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/Numeric", "others/count_flops", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "porting/load", "porting/save", "random/functions/bernoulli", "random/functions/index", "random/functions/permutation", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/multiply", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/bfunc/tensordot", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/full", "tensor/operations/gfunc/full_like", "tensor/operations/gfunc/linspace", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/ceil", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/cumprod", "tensor/operations/ufunc/cumsum", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/floor", "tensor/operations/ufunc/log", "tensor/operations/ufunc/log2", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/round", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/swapaxes", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/argmax", "tensor/utilities/argmin", "tensor/utilities/argsort", "tensor/utilities/broadcast_to", "tensor/utilities/chunk", "tensor/utilities/concatenate", "tensor/utilities/diagonal", "tensor/utilities/flatten", "tensor/utilities/histogram", "tensor/utilities/histogram2d", "tensor/utilities/histogramdd", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/masked_fill", "tensor/utilities/meshgrid", "tensor/utilities/nonzero", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/roll", "tensor/utilities/sort", "tensor/utilities/split", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/topk", "tensor/utilities/tril", "tensor/utilities/triu", "tensor/utilities/unbind", "tensor/utilities/unique", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "tensor/utilities/where", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms", "visual/draw_tensor_graph", "visual/visual", "weights/list", "weights/weights"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/Subset.rst", "data/TensorDataset.rst", "data/data.rst", "data/utilities/index.rst", "data/utilities/random_split.rst", "datasets/datasets.rst", "datasets/image/CIFAR10.rst", "datasets/image/CIFAR100.rst", "datasets/image/FashionMNIST.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "einops/einops.rst", "einops/functions/einsum.rst", "einops/functions/index.rst", "einops/functions/rearrange.rst", "einops/functions/reduce.rst", "einops/functions/repeat.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/imgclf/alex/AlexNet_.rst", "models/imgclf/alex/alexnet.rst", "models/imgclf/coatnet/CoAtNet.rst", "models/imgclf/coatnet/coatnet_0.rst", "models/imgclf/coatnet/coatnet_1.rst", "models/imgclf/coatnet/coatnet_2.rst", "models/imgclf/coatnet/coatnet_3.rst", "models/imgclf/coatnet/coatnet_4.rst", "models/imgclf/coatnet/coatnet_5.rst", "models/imgclf/coatnet/coatnet_6.rst", "models/imgclf/coatnet/coatnet_7.rst", "models/imgclf/convnext/ConvNeXt.rst", "models/imgclf/convnext/ConvNeXt_V2.rst", "models/imgclf/convnext/convnext_base.rst", "models/imgclf/convnext/convnext_large.rst", "models/imgclf/convnext/convnext_small.rst", "models/imgclf/convnext/convnext_tiny.rst", "models/imgclf/convnext/convnext_v2_atto.rst", "models/imgclf/convnext/convnext_v2_base.rst", "models/imgclf/convnext/convnext_v2_femto.rst", "models/imgclf/convnext/convnext_v2_huge.rst", "models/imgclf/convnext/convnext_v2_large.rst", "models/imgclf/convnext/convnext_v2_nano.rst", "models/imgclf/convnext/convnext_v2_pico.rst", "models/imgclf/convnext/convnext_v2_tiny.rst", "models/imgclf/convnext/convnext_xlarge.rst", "models/imgclf/crossvit/CrossViT.rst", "models/imgclf/crossvit/crossvit_15.rst", "models/imgclf/crossvit/crossvit_15_dagger.rst", "models/imgclf/crossvit/crossvit_18.rst", "models/imgclf/crossvit/crossvit_18_dagger.rst", "models/imgclf/crossvit/crossvit_9.rst", "models/imgclf/crossvit/crossvit_9_dagger.rst", "models/imgclf/crossvit/crossvit_base.rst", "models/imgclf/crossvit/crossvit_small.rst", "models/imgclf/crossvit/crossvit_tiny.rst", "models/imgclf/cspnet/CSPNet.rst", "models/imgclf/cspnet/csp_darknet_53.rst", "models/imgclf/cspnet/csp_resnet_50.rst", "models/imgclf/cspnet/csp_resnext_50_32x4d.rst", "models/imgclf/cvt/CvT.rst", "models/imgclf/cvt/cvt_13.rst", "models/imgclf/cvt/cvt_21.rst", "models/imgclf/cvt/cvt_w24.rst", "models/imgclf/dense/DenseNet.rst", "models/imgclf/dense/densenet_121.rst", "models/imgclf/dense/densenet_169.rst", "models/imgclf/dense/densenet_201.rst", "models/imgclf/dense/densenet_264.rst", "models/imgclf/efficient/EfficientNet.rst", "models/imgclf/efficient/EfficientNet_V2.rst", "models/imgclf/efficient/efficientnet_b0.rst", "models/imgclf/efficient/efficientnet_b1.rst", "models/imgclf/efficient/efficientnet_b2.rst", "models/imgclf/efficient/efficientnet_b3.rst", "models/imgclf/efficient/efficientnet_b4.rst", "models/imgclf/efficient/efficientnet_b5.rst", "models/imgclf/efficient/efficientnet_b6.rst", "models/imgclf/efficient/efficientnet_b7.rst", "models/imgclf/efficient/efficientnet_v2_l.rst", "models/imgclf/efficient/efficientnet_v2_m.rst", "models/imgclf/efficient/efficientnet_v2_s.rst", "models/imgclf/efficient/efficientnet_v2_xl.rst", "models/imgclf/efficientformer/EfficientFormer.rst", "models/imgclf/efficientformer/efficientformer_l1.rst", "models/imgclf/efficientformer/efficientformer_l3.rst", "models/imgclf/efficientformer/efficientformer_l7.rst", "models/imgclf/inception/Inception.rst", "models/imgclf/inception/inception_v1.rst", "models/imgclf/inception/inception_v3.rst", "models/imgclf/inception/inception_v4.rst", "models/imgclf/inception_next/InceptionNeXt.rst", "models/imgclf/inception_next/inception_next_atto.rst", "models/imgclf/inception_next/inception_next_base.rst", "models/imgclf/inception_next/inception_next_small.rst", "models/imgclf/inception_next/inception_next_tiny.rst", "models/imgclf/inception_res/InceptionResNet.rst", "models/imgclf/inception_res/inception_resnet_v1.rst", "models/imgclf/inception_res/inception_resnet_v2.rst", "models/imgclf/index.rst", "models/imgclf/lenet/LeNet.rst", "models/imgclf/lenet/lenet_1.rst", "models/imgclf/lenet/lenet_4.rst", "models/imgclf/lenet/lenet_5.rst", "models/imgclf/maxvit/MaxViT.rst", "models/imgclf/maxvit/maxvit_base.rst", "models/imgclf/maxvit/maxvit_large.rst", "models/imgclf/maxvit/maxvit_small.rst", "models/imgclf/maxvit/maxvit_tiny.rst", "models/imgclf/maxvit/maxvit_xlarge.rst", "models/imgclf/mobile/MobileNet_.rst", "models/imgclf/mobile/MobileNet_V2_.rst", "models/imgclf/mobile/MobileNet_V3.rst", "models/imgclf/mobile/MobileNet_V4.rst", "models/imgclf/mobile/mobilenet.rst", "models/imgclf/mobile/mobilenet_v2.rst", "models/imgclf/mobile/mobilenet_v3_large.rst", "models/imgclf/mobile/mobilenet_v3_small.rst", "models/imgclf/mobile/mobilenet_v4_conv_large.rst", "models/imgclf/mobile/mobilenet_v4_conv_medium.rst", "models/imgclf/mobile/mobilenet_v4_conv_small.rst", "models/imgclf/mobile/mobilenet_v4_hybrid_large.rst", "models/imgclf/mobile/mobilenet_v4_hybrid_medium.rst", "models/imgclf/pvt/PVT.rst", "models/imgclf/pvt/PVT_V2.rst", "models/imgclf/pvt/pvt_huge.rst", "models/imgclf/pvt/pvt_large.rst", "models/imgclf/pvt/pvt_medium.rst", "models/imgclf/pvt/pvt_small.rst", "models/imgclf/pvt/pvt_tiny.rst", "models/imgclf/pvt/pvt_v2_b0.rst", "models/imgclf/pvt/pvt_v2_b1.rst", "models/imgclf/pvt/pvt_v2_b2.rst", "models/imgclf/pvt/pvt_v2_b2_li.rst", "models/imgclf/pvt/pvt_v2_b3.rst", "models/imgclf/pvt/pvt_v2_b4.rst", "models/imgclf/pvt/pvt_v2_b5.rst", "models/imgclf/resnest/ResNeSt.rst", "models/imgclf/resnest/resnest_101.rst", "models/imgclf/resnest/resnest_14.rst", "models/imgclf/resnest/resnest_200.rst", "models/imgclf/resnest/resnest_26.rst", "models/imgclf/resnest/resnest_269.rst", "models/imgclf/resnest/resnest_50.rst", "models/imgclf/resnest/resnest_50_1s4x24d.rst", "models/imgclf/resnest/resnest_50_4s2x40d.rst", "models/imgclf/resnet/ResNet.rst", "models/imgclf/resnet/resnet_1001.rst", "models/imgclf/resnet/resnet_101.rst", "models/imgclf/resnet/resnet_152.rst", "models/imgclf/resnet/resnet_18.rst", "models/imgclf/resnet/resnet_200.rst", "models/imgclf/resnet/resnet_269.rst", "models/imgclf/resnet/resnet_34.rst", "models/imgclf/resnet/resnet_50.rst", "models/imgclf/resnet/wide_resnet_101.rst", "models/imgclf/resnet/wide_resnet_50.rst", "models/imgclf/resnext/ResNeXt.rst", "models/imgclf/resnext/resnext_101_32x16d.rst", "models/imgclf/resnext/resnext_101_32x32d.rst", "models/imgclf/resnext/resnext_101_32x4d.rst", "models/imgclf/resnext/resnext_101_32x8d.rst", "models/imgclf/resnext/resnext_101_64x4d.rst", "models/imgclf/resnext/resnext_50_32x4d.rst", "models/imgclf/senet/SENet.rst", "models/imgclf/senet/se_resnet_101.rst", "models/imgclf/senet/se_resnet_152.rst", "models/imgclf/senet/se_resnet_18.rst", "models/imgclf/senet/se_resnet_34.rst", "models/imgclf/senet/se_resnet_50.rst", "models/imgclf/senet/se_resnext_101_32x4d.rst", "models/imgclf/senet/se_resnext_101_32x8d.rst", "models/imgclf/senet/se_resnext_101_64x4d.rst", "models/imgclf/senet/se_resnext_50_32x4d.rst", "models/imgclf/sknet/SKNet.rst", "models/imgclf/sknet/sk_resnet_18.rst", "models/imgclf/sknet/sk_resnet_34.rst", "models/imgclf/sknet/sk_resnet_50.rst", "models/imgclf/sknet/sk_resnext_50_32x4d.rst", "models/imgclf/swin/SwinTransformer.rst", "models/imgclf/swin/SwinTransformer_V2.rst", "models/imgclf/swin/swin_base.rst", "models/imgclf/swin/swin_large.rst", "models/imgclf/swin/swin_small.rst", "models/imgclf/swin/swin_tiny.rst", "models/imgclf/swin/swin_v2_base.rst", "models/imgclf/swin/swin_v2_giant.rst", "models/imgclf/swin/swin_v2_huge.rst", "models/imgclf/swin/swin_v2_large.rst", "models/imgclf/swin/swin_v2_small.rst", "models/imgclf/swin/swin_v2_tiny.rst", "models/imgclf/vgg/VGGNet.rst", "models/imgclf/vgg/vggnet_11.rst", "models/imgclf/vgg/vggnet_13.rst", "models/imgclf/vgg/vggnet_16.rst", "models/imgclf/vgg/vggnet_19.rst", "models/imgclf/vit/ViT.rst", "models/imgclf/vit/vit_base.rst", "models/imgclf/vit/vit_huge.rst", "models/imgclf/vit/vit_large.rst", "models/imgclf/vit/vit_small.rst", "models/imgclf/vit/vit_tiny.rst", "models/imgclf/xception/Xception_.rst", "models/imgclf/xception/xception.rst", "models/imgclf/zfnet/ZFNet_.rst", "models/imgclf/zfnet/zfnet.rst", "models/imggen/autoencoder/VAE.rst", "models/imggen/diffusion/DDPM.rst", "models/imggen/index.rst", "models/models.rst", "models/objdet/detr/DETR.rst", "models/objdet/detr/detr_r101.rst", "models/objdet/detr/detr_r50.rst", "models/objdet/efficientdet/EfficientDet.rst", "models/objdet/efficientdet/efficientdet_d0.rst", "models/objdet/efficientdet/efficientdet_d1.rst", "models/objdet/efficientdet/efficientdet_d2.rst", "models/objdet/efficientdet/efficientdet_d3.rst", "models/objdet/efficientdet/efficientdet_d4.rst", "models/objdet/efficientdet/efficientdet_d5.rst", "models/objdet/efficientdet/efficientdet_d6.rst", "models/objdet/efficientdet/efficientdet_d7.rst", "models/objdet/faster_rcnn/FasterRCNN.rst", "models/objdet/faster_rcnn/faster_rcnn_resnet_101_fpn.rst", "models/objdet/faster_rcnn/faster_rcnn_resnet_50_fpn.rst", "models/objdet/index.rst", "models/objdet/rcnn/FastRCNN.rst", "models/objdet/rcnn/RCNN.rst", "models/objdet/utilities/FPN.rst", "models/objdet/utilities/MultiScaleROIAlign.rst", "models/objdet/utilities/ROIAlign.rst", "models/objdet/utilities/SelectiveSearch.rst", "models/objdet/utilities/apply_deltas.rst", "models/objdet/utilities/bbox_to_delta.rst", "models/objdet/utilities/clip_boxes.rst", "models/objdet/utilities/index.rst", "models/objdet/utilities/iou.rst", "models/objdet/utilities/nms.rst", "models/objdet/yolo/index.rst", "models/objdet/yolo/v1/YOLO_V1_.rst", "models/objdet/yolo/v1/yolo_v1.rst", "models/objdet/yolo/v1/yolo_v1_tiny.rst", "models/objdet/yolo/v2/YOLO_V2_.rst", "models/objdet/yolo/v2/yolo_v2.rst", "models/objdet/yolo/v2/yolo_v2_tiny.rst", "models/objdet/yolo/v3/YOLO_V3_.rst", "models/objdet/yolo/v3/yolo_v3.rst", "models/objdet/yolo/v3/yolo_v3_tiny.rst", "models/objdet/yolo/v4/YOLO_V4_.rst", "models/objdet/yolo/v4/yolo_v4.rst", "models/seq2seq/index.rst", "models/seq2seq/transformer/Transformer.rst", "models/seq2seq/transformer/transformer_base.rst", "models/seq2seq/transformer/transformer_big.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/attention/index.rst", "nn/functions/attention/scaled_dot_product_attention.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/conv_transpose1d.rst", "nn/functions/conv/conv_transpose2d.rst", "nn/functions/conv/conv_transpose3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/drop_block.rst", "nn/functions/drop/drop_path.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/binary_cross_entropy_with_logits.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/global_response_norm.rst", "nn/functions/norm/group_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/norm/normalize.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/adaptive_max_pool1d.rst", "nn/functions/pool/adaptive_max_pool2d.rst", "nn/functions/pool/adaptive_max_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/spatial/affine_grid.rst", "nn/functions/spatial/grid_sample.rst", "nn/functions/spatial/index.rst", "nn/functions/util/embedding.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/one_hot.rst", "nn/functions/util/rotate.rst", "nn/fused/ConvBNReLU1d.rst", "nn/fused/ConvBNReLU2d.rst", "nn/fused/ConvBNReLU3d.rst", "nn/fused/DepthSeparableConv1d.rst", "nn/fused/DepthSeparableConv2d.rst", "nn/fused/DepthSeparableConv3d.rst", "nn/fused/SEModule.rst", "nn/fused/SelectiveKernel.rst", "nn/fused/index.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/HardSigmoid.rst", "nn/modules/activation/HardSwish.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/Mish.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/ReLU6.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Swish.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/attention/MultiHeadAttention.rst", "nn/modules/attention/ScaledDotProductAttention.rst", "nn/modules/attention/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/ConvTranspose1d.rst", "nn/modules/conv/ConvTranspose2d.rst", "nn/modules/conv/ConvTranspose3d.rst", "nn/modules/conv/Unfold.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/DropBlock.rst", "nn/modules/drop/DropPath.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/einops/Rearrange.rst", "nn/modules/einops/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Flatten.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/BCEWithLogitsLoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/GlobalResponseNorm.rst", "nn/modules/norm/GroupNorm.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AdaptiveMaxPool1d.rst", "nn/modules/pool/AdaptiveMaxPool2d.rst", "nn/modules/pool/AdaptiveMaxPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/modules/sparse/Embedding.rst", "nn/modules/sparse/index.rst", "nn/modules/transformer/Transformer.rst", "nn/modules/transformer/TransformerDecoder.rst", "nn/modules/transformer/TransformerDecoderLayer.rst", "nn/modules/transformer/TransformerEncoder.rst", "nn/modules/transformer/TransformerEncoderLayer.rst", "nn/modules/transformer/index.rst", "nn/modules/vision/Upsample.rst", "nn/modules/vision/index.rst", "nn/nn.rst", "nn/utilities/clip_grad_norm.rst", "nn/utilities/clip_grad_value.rst", "nn/utilities/grad_norm.rst", "nn/utilities/index.rst", "optim/Optimizer.rst", "optim/lr_scheduler.rst", "optim/lr_scheduler/CosineAnnealingLR.rst", "optim/lr_scheduler/CyclicLR.rst", "optim/lr_scheduler/ExponentialLR.rst", "optim/lr_scheduler/LRScheduler.rst", "optim/lr_scheduler/LambdaLR.rst", "optim/lr_scheduler/MultiStepLR.rst", "optim/lr_scheduler/ReduceLROnPlateau.rst", "optim/lr_scheduler/StepLR.rst", "optim/lr_scheduler/index.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/Numeric.rst", "others/count_flops.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "porting/load.rst", "porting/save.rst", "random/functions/bernoulli.rst", "random/functions/index.rst", "random/functions/permutation.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/multiply.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/bfunc/tensordot.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/full.rst", "tensor/operations/gfunc/full_like.rst", "tensor/operations/gfunc/linspace.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/ceil.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/cumprod.rst", "tensor/operations/ufunc/cumsum.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/floor.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/log2.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/round.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/swapaxes.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/argmax.rst", "tensor/utilities/argmin.rst", "tensor/utilities/argsort.rst", "tensor/utilities/broadcast_to.rst", "tensor/utilities/chunk.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/diagonal.rst", "tensor/utilities/flatten.rst", "tensor/utilities/histogram.rst", "tensor/utilities/histogram2d.rst", "tensor/utilities/histogramdd.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/masked_fill.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/nonzero.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/roll.rst", "tensor/utilities/sort.rst", "tensor/utilities/split.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/topk.rst", "tensor/utilities/tril.rst", "tensor/utilities/triu.rst", "tensor/utilities/unbind.rst", "tensor/utilities/unique.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "tensor/utilities/where.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst", "visual/draw_tensor_graph.rst", "visual/visual.rst", "weights/list.rst", "weights/weights.rst"], "indexentries": {"abs() (in module lucid)": [[512, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[458, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[459, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[460, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[462, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[461, "lucid.optim.AdamW", false]], "adaptive_avg_pool1d() (in module lucid.nn.functional)": [[321, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[322, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[323, "lucid.nn.functional.adaptive_avg_pool3d", false]], "adaptive_max_pool1d() (in module lucid.nn.functional)": [[324, "lucid.nn.functional.adaptive_max_pool1d", false]], "adaptive_max_pool2d() (in module lucid.nn.functional)": [[325, "lucid.nn.functional.adaptive_max_pool2d", false]], "adaptive_max_pool3d() (in module lucid.nn.functional)": [[326, "lucid.nn.functional.adaptive_max_pool3d", false]], "adaptiveavgpool1d (class in lucid.nn)": [[417, "lucid.nn.AdaptiveAvgPool1d", false]], "adaptiveavgpool2d (class in lucid.nn)": [[418, "lucid.nn.AdaptiveAvgPool2d", false]], "adaptiveavgpool3d (class in lucid.nn)": [[419, "lucid.nn.AdaptiveAvgPool3d", false]], "adaptivemaxpool1d (class in lucid.nn)": [[420, "lucid.nn.AdaptiveMaxPool1d", false]], "adaptivemaxpool2d (class in lucid.nn)": [[421, "lucid.nn.AdaptiveMaxPool2d", false]], "adaptivemaxpool3d (class in lucid.nn)": [[422, "lucid.nn.AdaptiveMaxPool3d", false]], "add() (in module lucid)": [[487, "lucid.add", false]], "affine_grid() (in module lucid.nn.functional)": [[334, "lucid.nn.functional.affine_grid", false]], "alexnet (class in lucid.models)": [[33, "lucid.models.AlexNet", false]], "alexnet() (in module lucid.models)": [[34, "lucid.models.alexnet", false]], "alpha_dropout() (in module lucid.nn.functional)": [[295, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[384, "lucid.nn.AlphaDropout", false]], "apply_deltas() (in module lucid.models.objdet.util)": [[245, "lucid.models.objdet.util.apply_deltas", false]], "arange() (in module lucid)": [[499, "lucid.arange", false]], "arccos() (in module lucid)": [[513, "lucid.arccos", false]], "arcsin() (in module lucid)": [[514, "lucid.arcsin", false]], "arctan() (in module lucid)": [[515, "lucid.arctan", false]], "argmax() (in module lucid)": [[545, "lucid.argmax", false]], "argmin() (in module lucid)": [[546, "lucid.argmin", false]], "argsort() (in module lucid)": [[547, "lucid.argsort", false]], "asgd (class in lucid.optim)": [[457, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[327, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[328, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[329, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[423, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[424, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[425, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[314, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[407, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[408, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[409, "lucid.nn.BatchNorm3d", false]], "bbox_to_delta() (in module lucid.models.objdet.util)": [[246, "lucid.models.objdet.util.bbox_to_delta", false]], "bceloss (class in lucid.nn)": [[400, "lucid.nn.BCELoss", false]], "bcewithlogitsloss (class in lucid.nn)": [[401, "lucid.nn.BCEWithLogitsLoss", false]], "bernoulli() (in module lucid.random)": [[477, "lucid.random.bernoulli", false]], "bilinear (class in lucid.nn)": [[395, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[304, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[307, "lucid.nn.functional.binary_cross_entropy", false]], "binary_cross_entropy_with_logits() (in module lucid.nn.functional)": [[308, "lucid.nn.functional.binary_cross_entropy_with_logits", false]], "broadcast_to() (in module lucid)": [[548, "lucid.broadcast_to", false]], "buffer (class in lucid.nn)": [[267, "lucid.nn.Buffer", false]], "ceil() (in module lucid)": [[516, "lucid.ceil", false]], "centercrop (class in lucid.transforms)": [[581, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[22, "lucid.linalg.cholesky", false]], "chunk() (in module lucid)": [[549, "lucid.chunk", false]], "cifar10 (class in lucid.datasets)": [[9, "lucid.datasets.CIFAR10", false]], "cifar100 (class in lucid.datasets)": [[10, "lucid.datasets.CIFAR100", false]], "clip() (in module lucid)": [[517, "lucid.clip", false]], "clip_boxes() (in module lucid.models.objdet.util)": [[247, "lucid.models.objdet.util.clip_boxes", false]], "clip_grad_norm() (in module lucid.nn.util)": [[441, "lucid.nn.util.clip_grad_norm", false]], "clip_grad_value() (in module lucid.nn.util)": [[442, "lucid.nn.util.clip_grad_value", false]], "coatnet (class in lucid.models)": [[35, "lucid.models.CoAtNet", false]], "coatnet_0() (in module lucid.models)": [[36, "lucid.models.coatnet_0", false]], "coatnet_1() (in module lucid.models)": [[37, "lucid.models.coatnet_1", false]], "coatnet_2() (in module lucid.models)": [[38, "lucid.models.coatnet_2", false]], "coatnet_3() (in module lucid.models)": [[39, "lucid.models.coatnet_3", false]], "coatnet_4() (in module lucid.models)": [[40, "lucid.models.coatnet_4", false]], "coatnet_5() (in module lucid.models)": [[41, "lucid.models.coatnet_5", false]], "coatnet_6() (in module lucid.models)": [[42, "lucid.models.coatnet_6", false]], "coatnet_7() (in module lucid.models)": [[43, "lucid.models.coatnet_7", false]], "compose (class in lucid.transforms)": [[579, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[550, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[351, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[376, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[287, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[377, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[288, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[378, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[289, "lucid.nn.functional.conv3d", false]], "conv_transpose1d() (in module lucid.nn.functional)": [[290, "lucid.nn.functional.conv_transpose1d", false]], "conv_transpose2d() (in module lucid.nn.functional)": [[291, "lucid.nn.functional.conv_transpose2d", false]], "conv_transpose3d() (in module lucid.nn.functional)": [[292, "lucid.nn.functional.conv_transpose3d", false]], "convbnrelu1d (class in lucid.nn)": [[342, "lucid.nn.ConvBNReLU1d", false]], "convbnrelu2d (class in lucid.nn)": [[343, "lucid.nn.ConvBNReLU2d", false]], "convbnrelu3d (class in lucid.nn)": [[344, "lucid.nn.ConvBNReLU3d", false]], "convnext (class in lucid.models)": [[44, "lucid.models.ConvNeXt", false]], "convnext_base() (in module lucid.models)": [[46, "lucid.models.convnext_base", false]], "convnext_large() (in module lucid.models)": [[47, "lucid.models.convnext_large", false]], "convnext_small() (in module lucid.models)": [[48, "lucid.models.convnext_small", false]], "convnext_tiny() (in module lucid.models)": [[49, "lucid.models.convnext_tiny", false]], "convnext_v2 (class in lucid.models)": [[45, "lucid.models.ConvNeXt_V2", false]], "convnext_v2_atto() (in module lucid.models)": [[50, "lucid.models.convnext_v2_atto", false]], "convnext_v2_base() (in module lucid.models)": [[51, "lucid.models.convnext_v2_base", false]], "convnext_v2_femto() (in module lucid.models)": [[52, "lucid.models.convnext_v2_femto", false]], "convnext_v2_huge() (in module lucid.models)": [[53, "lucid.models.convnext_v2_huge", false]], "convnext_v2_large() (in module lucid.models)": [[54, "lucid.models.convnext_v2_large", false]], "convnext_v2_nano() (in module lucid.models)": [[55, "lucid.models.convnext_v2_nano", false]], "convnext_v2_pico() (in module lucid.models)": [[56, "lucid.models.convnext_v2_pico", false]], "convnext_v2_tiny() (in module lucid.models)": [[57, "lucid.models.convnext_v2_tiny", false]], "convnext_xlarge() (in module lucid.models)": [[58, "lucid.models.convnext_xlarge", false]], "convtranspose1d (class in lucid.nn)": [[379, "lucid.nn.ConvTranspose1d", false]], "convtranspose2d (class in lucid.nn)": [[380, "lucid.nn.ConvTranspose2d", false]], "convtranspose3d (class in lucid.nn)": [[381, "lucid.nn.ConvTranspose3d", false]], "cos() (in module lucid)": [[518, "lucid.cos", false]], "cosh() (in module lucid)": [[519, "lucid.cosh", false]], "cosineannealinglr (class in lucid.optim.lr_scheduler)": [[447, "lucid.optim.lr_scheduler.CosineAnnealingLR", false]], "count_flops() (in module lucid)": [[470, "lucid.count_flops", false]], "cross_entropy() (in module lucid.nn.functional)": [[309, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[402, "lucid.nn.CrossEntropyLoss", false]], "crossvit (class in lucid.models)": [[59, "lucid.models.CrossViT", false]], "crossvit_15() (in module lucid.models)": [[60, "lucid.models.crossvit_15", false]], "crossvit_15_dagger() (in module lucid.models)": [[61, "lucid.models.crossvit_15_dagger", false]], "crossvit_18() (in module lucid.models)": [[62, "lucid.models.crossvit_18", false]], "crossvit_18_dagger() (in module lucid.models)": [[63, "lucid.models.crossvit_18_dagger", false]], "crossvit_9() (in module lucid.models)": [[64, "lucid.models.crossvit_9", false]], "crossvit_9_dagger() (in module lucid.models)": [[65, "lucid.models.crossvit_9_dagger", false]], "crossvit_base() (in module lucid.models)": [[66, "lucid.models.crossvit_base", false]], "crossvit_small() (in module lucid.models)": [[67, "lucid.models.crossvit_small", false]], "crossvit_tiny() (in module lucid.models)": [[68, "lucid.models.crossvit_tiny", false]], "csp_darknet_53() (in module lucid.models)": [[70, "lucid.models.csp_darknet_53", false]], "csp_resnet_50() (in module lucid.models)": [[71, "lucid.models.csp_resnet_50", false]], "csp_resnext_50_32x4d() (in module lucid.models)": [[72, "lucid.models.csp_resnext_50_32x4d", false]], "cspnet (class in lucid.models)": [[69, "lucid.models.CSPNet", false]], "cube() (in module lucid)": [[520, "lucid.cube", false]], "cumprod() (in module lucid)": [[521, "lucid.cumprod", false]], "cumsum() (in module lucid)": [[522, "lucid.cumsum", false]], "current_beta() (lucid.models.imggen.vae method)": [[219, "lucid.models.imggen.VAE.current_beta", false]], "cvt (class in lucid.models)": [[73, "lucid.models.CvT", false]], "cvt_13() (in module lucid.models)": [[74, "lucid.models.cvt_13", false]], "cvt_21() (in module lucid.models)": [[75, "lucid.models.cvt_21", false]], "cvt_w24() (in module lucid.models)": [[76, "lucid.models.cvt_w24", false]], "cycliclr (class in lucid.optim.lr_scheduler)": [[448, "lucid.optim.lr_scheduler.CyclicLR", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "ddpm (class in lucid.models.imggen)": [[220, "lucid.models.imggen.DDPM", false]], "decode() (lucid.models.imggen.vae method)": [[219, "lucid.models.imggen.VAE.decode", false]], "densenet (class in lucid.models)": [[77, "lucid.models.DenseNet", false]], "densenet_121() (in module lucid.models)": [[78, "lucid.models.densenet_121", false]], "densenet_169() (in module lucid.models)": [[79, "lucid.models.densenet_169", false]], "densenet_201() (in module lucid.models)": [[80, "lucid.models.densenet_201", false]], "densenet_264() (in module lucid.models)": [[81, "lucid.models.densenet_264", false]], "depthseparableconv1d (class in lucid.nn)": [[345, "lucid.nn.DepthSeparableConv1d", false]], "depthseparableconv2d (class in lucid.nn)": [[346, "lucid.nn.DepthSeparableConv2d", false]], "depthseparableconv3d (class in lucid.nn)": [[347, "lucid.nn.DepthSeparableConv3d", false]], "det() (in module lucid.linalg)": [[23, "lucid.linalg.det", false]], "detr (class in lucid.models)": [[223, "lucid.models.DETR", false]], "detr_r101() (in module lucid.models)": [[224, "lucid.models.detr_r101", false]], "detr_r50() (in module lucid.models)": [[225, "lucid.models.detr_r50", false]], "diag() (in module lucid)": [[500, "lucid.diag", false]], "diagonal() (in module lucid)": [[551, "lucid.diagonal", false]], "div() (in module lucid)": [[488, "lucid.div", false]], "dot() (in module lucid)": [[489, "lucid.dot", false]], "draw_tensor_graph() (in module lucid.visual)": [[591, "lucid.visual.draw_tensor_graph", false]], "drop_block() (in module lucid.nn.functional)": [[296, "lucid.nn.functional.drop_block", false]], "drop_path() (in module lucid.nn.functional)": [[297, "lucid.nn.functional.drop_path", false]], "dropblock (class in lucid.nn)": [[385, "lucid.nn.DropBlock", false]], "dropout (class in lucid.nn)": [[387, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[298, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[388, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[299, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[389, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[300, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[390, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[301, "lucid.nn.functional.dropout3d", false]], "droppath (class in lucid.nn)": [[386, "lucid.nn.DropPath", false]], "efficientdet (class in lucid.models)": [[226, "lucid.models.EfficientDet", false]], "efficientdet_d0() (in module lucid.models)": [[227, "lucid.models.efficientdet_d0", false]], "efficientdet_d1() (in module lucid.models)": [[228, "lucid.models.efficientdet_d1", false]], "efficientdet_d2() (in module lucid.models)": [[229, "lucid.models.efficientdet_d2", false]], "efficientdet_d3() (in module lucid.models)": [[230, "lucid.models.efficientdet_d3", false]], "efficientdet_d4() (in module lucid.models)": [[231, "lucid.models.efficientdet_d4", false]], "efficientdet_d5() (in module lucid.models)": [[232, "lucid.models.efficientdet_d5", false]], "efficientdet_d6() (in module lucid.models)": [[233, "lucid.models.efficientdet_d6", false]], "efficientdet_d7() (in module lucid.models)": [[234, "lucid.models.efficientdet_d7", false]], "efficientformer (class in lucid.models)": [[96, "lucid.models.EfficientFormer", false]], "efficientformer_l1() (in module lucid.models)": [[97, "lucid.models.efficientformer_l1", false]], "efficientformer_l3() (in module lucid.models)": [[98, "lucid.models.efficientformer_l3", false]], "efficientformer_l7() (in module lucid.models)": [[99, "lucid.models.efficientformer_l7", false]], "efficientnet (class in lucid.models)": [[82, "lucid.models.EfficientNet", false]], "efficientnet_b0() (in module lucid.models)": [[84, "lucid.models.efficientnet_b0", false]], "efficientnet_b1() (in module lucid.models)": [[85, "lucid.models.efficientnet_b1", false]], "efficientnet_b2() (in module lucid.models)": [[86, "lucid.models.efficientnet_b2", false]], "efficientnet_b3() (in module lucid.models)": [[87, "lucid.models.efficientnet_b3", false]], "efficientnet_b4() (in module lucid.models)": [[88, "lucid.models.efficientnet_b4", false]], "efficientnet_b5() (in module lucid.models)": [[89, "lucid.models.efficientnet_b5", false]], "efficientnet_b6() (in module lucid.models)": [[90, "lucid.models.efficientnet_b6", false]], "efficientnet_b7() (in module lucid.models)": [[91, "lucid.models.efficientnet_b7", false]], "efficientnet_v2 (class in lucid.models)": [[83, "lucid.models.EfficientNet_V2", false]], "efficientnet_v2_l() (in module lucid.models)": [[92, "lucid.models.efficientnet_v2_l", false]], "efficientnet_v2_m() (in module lucid.models)": [[93, "lucid.models.efficientnet_v2_m", false]], "efficientnet_v2_s() (in module lucid.models)": [[94, "lucid.models.efficientnet_v2_s", false]], "efficientnet_v2_xl() (in module lucid.models)": [[95, "lucid.models.efficientnet_v2_xl", false]], "eig() (in module lucid.linalg)": [[24, "lucid.linalg.eig", false]], "einsum() (in module lucid.einops)": [[15, "lucid.einops.einsum", false]], "elu (class in lucid.nn)": [[359, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[276, "lucid.nn.functional.elu", false]], "embedding (class in lucid.nn)": [[430, "lucid.nn.Embedding", false]], "embedding() (in module lucid.nn.functional)": [[337, "lucid.nn.functional.embedding", false]], "empty() (in module lucid)": [[501, "lucid.empty", false]], "empty_like() (in module lucid)": [[502, "lucid.empty_like", false]], "encode() (lucid.models.imggen.vae method)": [[219, "lucid.models.imggen.VAE.encode", false]], "exp() (in module lucid)": [[523, "lucid.exp", false]], "exponentiallr (class in lucid.optim.lr_scheduler)": [[449, "lucid.optim.lr_scheduler.ExponentialLR", false]], "eye() (in module lucid)": [[503, "lucid.eye", false]], "fashionmnist (class in lucid.datasets)": [[11, "lucid.datasets.FashionMNIST", false]], "faster_rcnn_resnet_101_fpn() (in module lucid.models)": [[236, "lucid.models.faster_rcnn_resnet_101_fpn", false]], "faster_rcnn_resnet_50_fpn() (in module lucid.models)": [[237, "lucid.models.faster_rcnn_resnet_50_fpn", false]], "fasterrcnn (class in lucid.models)": [[235, "lucid.models.FasterRCNN", false]], "fastrcnn (class in lucid.models)": [[239, "lucid.models.FastRCNN", false]], "flatten (class in lucid.nn)": [[396, "lucid.nn.Flatten", false]], "flatten() (in module lucid)": [[552, "lucid.flatten", false]], "floor() (in module lucid)": [[524, "lucid.floor", false]], "forward() (lucid.models.objdet.detr method)": [[223, "lucid.models.objdet.DETR.forward", false]], "forward() (lucid.models.objdet.efficientdet method)": [[226, "lucid.models.objdet.EfficientDet.forward", false]], "forward() (lucid.models.objdet.yolo_v1 method)": [[252, "lucid.models.objdet.YOLO_V1.forward", false]], "forward() (lucid.models.objdet.yolo_v2 method)": [[255, "lucid.models.objdet.YOLO_V2.forward", false]], "forward() (lucid.models.objdet.yolo_v3 method)": [[258, "lucid.models.objdet.YOLO_V3.forward", false]], "forward() (lucid.models.objdet.yolo_v4 method)": [[261, "lucid.models.objdet.YOLO_V4.forward", false]], "fpn (class in lucid.models.objdet.util)": [[241, "lucid.models.objdet.util.FPN", false]], "full() (in module lucid)": [[504, "lucid.full", false]], "full_like() (in module lucid)": [[505, "lucid.full_like", false]], "gelu (class in lucid.nn)": [[360, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[277, "lucid.nn.functional.gelu", false]], "get_loss() (lucid.models.imggen.ddpm method)": [[220, "lucid.models.imggen.DDPM.get_loss", false]], "get_loss() (lucid.models.objdet.detr method)": [[223, "lucid.models.objdet.DETR.get_loss", false]], "get_loss() (lucid.models.objdet.efficientdet method)": [[226, "lucid.models.objdet.EfficientDet.get_loss", false]], "get_loss() (lucid.models.objdet.yolo_v1 method)": [[252, "lucid.models.objdet.YOLO_V1.get_loss", false]], "get_loss() (lucid.models.objdet.yolo_v2 method)": [[255, "lucid.models.objdet.YOLO_V2.get_loss", false]], "get_loss() (lucid.models.objdet.yolo_v3 method)": [[258, "lucid.models.objdet.YOLO_V3.get_loss", false]], "get_loss() (lucid.models.objdet.yolo_v4 method)": [[261, "lucid.models.objdet.YOLO_V4.get_loss", false]], "global_response_norm() (in module lucid.nn.functional)": [[315, "lucid.nn.functional.global_response_norm", false]], "globalresponsenorm (class in lucid.nn)": [[410, "lucid.nn.GlobalResponseNorm", false]], "grad_enabled() (in module lucid)": [[471, "lucid.grad_enabled", false]], "grad_norm() (in module lucid.nn.util)": [[443, "lucid.nn.util.grad_norm", false]], "grid_sample() (in module lucid.nn.functional)": [[335, "lucid.nn.functional.grid_sample", false]], "group_norm() (in module lucid.nn.functional)": [[316, "lucid.nn.functional.group_norm", false]], "groupnorm (class in lucid.nn)": [[411, "lucid.nn.GroupNorm", false]], "hardsigmoid (class in lucid.nn)": [[361, "lucid.nn.HardSigmoid", false]], "hardswish (class in lucid.nn)": [[362, "lucid.nn.HardSwish", false]], "histogram() (in module lucid)": [[553, "lucid.histogram", false]], "histogram2d() (in module lucid)": [[554, "lucid.histogram2d", false]], "histogramdd() (in module lucid)": [[555, "lucid.histogramdd", false]], "hstack() (in module lucid)": [[556, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[310, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[403, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[397, "lucid.nn.Identity", false]], "inception (class in lucid.models)": [[100, "lucid.models.Inception", false]], "inception_next_atto() (in module lucid.models)": [[105, "lucid.models.inception_next_atto", false]], "inception_next_base() (in module lucid.models)": [[106, "lucid.models.inception_next_base", false]], "inception_next_small() (in module lucid.models)": [[107, "lucid.models.inception_next_small", false]], "inception_next_tiny() (in module lucid.models)": [[108, "lucid.models.inception_next_tiny", false]], "inception_resnet_v1() (in module lucid.models)": [[110, "lucid.models.inception_resnet_v1", false]], "inception_resnet_v2() (in module lucid.models)": [[111, "lucid.models.inception_resnet_v2", false]], "inception_v1() (in module lucid.models)": [[101, "lucid.models.inception_v1", false]], "inception_v3() (in module lucid.models)": [[102, "lucid.models.inception_v3", false]], "inception_v4() (in module lucid.models)": [[103, "lucid.models.inception_v4", false]], "inceptionnext (class in lucid.models)": [[104, "lucid.models.InceptionNeXt", false]], "inceptionresnet (class in lucid.models)": [[109, "lucid.models.InceptionResNet", false]], "inner() (in module lucid)": [[490, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[318, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[412, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[413, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[414, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[339, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[26, "lucid.linalg.inv", false]], "iou() (in module lucid.models.objdet.util)": [[249, "lucid.models.objdet.util.iou", false]], "kaiming_normal() (in module lucid.nn.init)": [[353, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[354, "lucid.nn.init.kaiming_uniform", false]], "lambdalr (class in lucid.optim.lr_scheduler)": [[451, "lucid.optim.lr_scheduler.LambdaLR", false]], "layer_norm() (in module lucid.nn.functional)": [[319, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[415, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[279, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[363, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[113, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[114, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[115, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[116, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[398, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[306, "lucid.nn.functional.linear", false]], "linspace() (in module lucid)": [[506, "lucid.linspace", false]], "load() (in module lucid)": [[475, "lucid.load", false]], "log() (in module lucid)": [[525, "lucid.log", false]], "log2() (in module lucid)": [[526, "lucid.log2", false]], "lrscheduler (class in lucid.optim.lr_scheduler)": [[450, "lucid.optim.lr_scheduler.LRScheduler", false]], "lucid": [[20, "module-lucid", false]], "masked_fill() (in module lucid)": [[558, "lucid.masked_fill", false]], "matmul() (in module lucid)": [[491, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[27, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[527, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[331, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[332, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[333, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[492, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[426, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[427, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[428, "lucid.nn.MaxPool3d", false]], "maxvit (class in lucid.models)": [[117, "lucid.models.MaxViT", false]], "maxvit_base() (in module lucid.models)": [[118, "lucid.models.maxvit_base", false]], "maxvit_large() (in module lucid.models)": [[119, "lucid.models.maxvit_large", false]], "maxvit_small() (in module lucid.models)": [[120, "lucid.models.maxvit_small", false]], "maxvit_tiny() (in module lucid.models)": [[121, "lucid.models.maxvit_tiny", false]], "maxvit_xlarge() (in module lucid.models)": [[122, "lucid.models.maxvit_xlarge", false]], "mean() (in module lucid)": [[528, "lucid.mean", false]], "meshgrid() (in module lucid)": [[559, "lucid.meshgrid", false]], "min() (in module lucid)": [[529, "lucid.min", false]], "minimum() (in module lucid)": [[493, "lucid.minimum", false]], "mish (class in lucid.nn)": [[364, "lucid.nn.Mish", false]], "mnist (class in lucid.datasets)": [[12, "lucid.datasets.MNIST", false]], "mobilenet (class in lucid.models)": [[123, "lucid.models.MobileNet", false]], "mobilenet() (in module lucid.models)": [[127, "lucid.models.mobilenet", false]], "mobilenet_v2 (class in lucid.models)": [[124, "lucid.models.MobileNet_V2", false]], "mobilenet_v2() (in module lucid.models)": [[128, "lucid.models.mobilenet_v2", false]], "mobilenet_v3 (class in lucid.models)": [[125, "lucid.models.MobileNet_V3", false]], "mobilenet_v3_large() (in module lucid.models)": [[129, "lucid.models.mobilenet_v3_large", false]], "mobilenet_v3_small() (in module lucid.models)": [[130, "lucid.models.mobilenet_v3_small", false]], "mobilenet_v4 (class in lucid.models)": [[126, "lucid.models.MobileNet_V4", false]], "mobilenet_v4_conv_large() (in module lucid.models)": [[131, "lucid.models.mobilenet_v4_conv_large", false]], "mobilenet_v4_conv_medium() (in module lucid.models)": [[132, "lucid.models.mobilenet_v4_conv_medium", false]], "mobilenet_v4_conv_small() (in module lucid.models)": [[133, "lucid.models.mobilenet_v4_conv_small", false]], "mobilenet_v4_hybrid_large() (in module lucid.models)": [[134, "lucid.models.mobilenet_v4_hybrid_large", false]], "mobilenet_v4_hybrid_medium() (in module lucid.models)": [[135, "lucid.models.mobilenet_v4_hybrid_medium", false]], "module": [[20, "module-lucid", false]], "module (class in lucid.nn)": [[268, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[270, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[271, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[312, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[404, "lucid.nn.MSELoss", false]], "multiheadattention (class in lucid.nn)": [[373, "lucid.nn.MultiHeadAttention", false]], "multiply() (in module lucid)": [[494, "lucid.multiply", false]], "multiscaleroialign (class in lucid.models.objdet.util)": [[242, "lucid.models.objdet.util.MultiScaleROIAlign", false]], "multisteplr (class in lucid.optim.lr_scheduler)": [[452, "lucid.optim.lr_scheduler.MultiStepLR", false]], "nadam (class in lucid.optim)": [[463, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[313, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[405, "lucid.nn.NLLLoss", false]], "nms() (in module lucid.models.objdet.util)": [[250, "lucid.models.objdet.util.nms", false]], "no_grad (in module lucid)": [[473, "lucid.no_grad", false]], "nonzero() (in module lucid)": [[560, "lucid.nonzero", false]], "norm() (in module lucid.linalg)": [[28, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[355, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[582, "lucid.transforms.Normalize", false]], "normalize() (in module lucid.nn.functional)": [[320, "lucid.nn.functional.normalize", false]], "numeric (class in lucid.types)": [[469, "lucid.types.Numeric", false]], "one_hot() (in module lucid.nn.functional)": [[340, "lucid.nn.functional.one_hot", false]], "ones() (in module lucid)": [[507, "lucid.ones", false]], "ones_like() (in module lucid)": [[508, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[445, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[495, "lucid.outer", false]], "pad() (in module lucid)": [[561, "lucid.pad", false]], "parameter (class in lucid.nn)": [[269, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[272, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[273, "lucid.nn.ParameterList", false]], "permutation() (in module lucid.random)": [[479, "lucid.random.permutation", false]], "pinv() (in module lucid.linalg)": [[29, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[496, "lucid.power", false]], "predict() (lucid.models.objdet.detr method)": [[223, "lucid.models.objdet.DETR.predict", false]], "predict() (lucid.models.objdet.efficientdet method)": [[226, "lucid.models.objdet.EfficientDet.predict", false]], "predict() (lucid.models.objdet.yolo_v2 method)": [[255, "lucid.models.objdet.YOLO_V2.predict", false]], "predict() (lucid.models.objdet.yolo_v3 method)": [[258, "lucid.models.objdet.YOLO_V3.predict", false]], "predict() (lucid.models.objdet.yolo_v4 method)": [[261, "lucid.models.objdet.YOLO_V4.predict", false]], "pvt (class in lucid.models)": [[136, "lucid.models.PVT", false]], "pvt_huge() (in module lucid.models)": [[138, "lucid.models.pvt_huge", false]], "pvt_large() (in module lucid.models)": [[139, "lucid.models.pvt_large", false]], "pvt_medium() (in module lucid.models)": [[140, "lucid.models.pvt_medium", false]], "pvt_small() (in module lucid.models)": [[141, "lucid.models.pvt_small", false]], "pvt_tiny() (in module lucid.models)": [[142, "lucid.models.pvt_tiny", false]], "pvt_v2 (class in lucid.models)": [[137, "lucid.models.PVT_V2", false]], "pvt_v2_b0() (in module lucid.models)": [[143, "lucid.models.pvt_v2_b0", false]], "pvt_v2_b1() (in module lucid.models)": [[144, "lucid.models.pvt_v2_b1", false]], "pvt_v2_b2() (in module lucid.models)": [[145, "lucid.models.pvt_v2_b2", false]], "pvt_v2_b2_li() (in module lucid.models)": [[146, "lucid.models.pvt_v2_b2_li", false]], "pvt_v2_b3() (in module lucid.models)": [[147, "lucid.models.pvt_v2_b3", false]], "pvt_v2_b4() (in module lucid.models)": [[148, "lucid.models.pvt_v2_b4", false]], "pvt_v2_b5() (in module lucid.models)": [[149, "lucid.models.pvt_v2_b5", false]], "qr() (in module lucid.linalg)": [[30, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[464, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[480, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[481, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[482, "lucid.random.randn", false]], "random_split() (in module lucid.data)": [[7, "lucid.data.random_split", false]], "randomcrop (class in lucid.transforms)": [[583, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[584, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[585, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[586, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[587, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[562, "lucid.ravel", false]], "rcnn (class in lucid.models)": [[240, "lucid.models.RCNN", false]], "rearrange (class in lucid.nn)": [[392, "lucid.nn.Rearrange", false]], "rearrange() (in module lucid.einops)": [[17, "lucid.einops.rearrange", false]], "reciprocal() (in module lucid)": [[530, "lucid.reciprocal", false]], "reduce() (in module lucid.einops)": [[18, "lucid.einops.reduce", false]], "reducelronplateau (class in lucid.optim.lr_scheduler)": [[453, "lucid.optim.lr_scheduler.ReduceLROnPlateau", false]], "register_model() (in module lucid)": [[474, "lucid.register_model", false]], "relu (class in lucid.nn)": [[365, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[280, "lucid.nn.functional.relu", false]], "relu6 (class in lucid.nn)": [[366, "lucid.nn.ReLU6", false]], "reparameterize() (lucid.models.imggen.vae method)": [[219, "lucid.models.imggen.VAE.reparameterize", false]], "repeat() (in module lucid)": [[563, "lucid.repeat", false]], "repeat() (in module lucid.einops)": [[19, "lucid.einops.repeat", false]], "reshape() (in module lucid)": [[564, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[588, "lucid.transforms.Resize", false]], "resnest (class in lucid.models)": [[150, "lucid.models.ResNeSt", false]], "resnest_101() (in module lucid.models)": [[151, "lucid.models.resnest_101", false]], "resnest_14() (in module lucid.models)": [[152, "lucid.models.resnest_14", false]], "resnest_200() (in module lucid.models)": [[153, "lucid.models.resnest_200", false]], "resnest_26() (in module lucid.models)": [[154, "lucid.models.resnest_26", false]], "resnest_269() (in module lucid.models)": [[155, "lucid.models.resnest_269", false]], "resnest_50() (in module lucid.models)": [[156, "lucid.models.resnest_50", false]], "resnest_50_1s4x24d() (in module lucid.models)": [[157, "lucid.models.resnest_50_1s4x24d", false]], "resnest_50_4s2x40d() (in module lucid.models)": [[158, "lucid.models.resnest_50_4s2x40d", false]], "resnet (class in lucid.models)": [[159, "lucid.models.ResNet", false]], "resnet_1001() (in module lucid.models)": [[160, "lucid.models.resnet_1001", false]], "resnet_101() (in module lucid.models)": [[161, "lucid.models.resnet_101", false]], "resnet_152() (in module lucid.models)": [[162, "lucid.models.resnet_152", false]], "resnet_18() (in module lucid.models)": [[163, "lucid.models.resnet_18", false]], "resnet_200() (in module lucid.models)": [[164, "lucid.models.resnet_200", false]], "resnet_269() (in module lucid.models)": [[165, "lucid.models.resnet_269", false]], "resnet_34() (in module lucid.models)": [[166, "lucid.models.resnet_34", false]], "resnet_50() (in module lucid.models)": [[167, "lucid.models.resnet_50", false]], "resnext (class in lucid.models)": [[170, "lucid.models.ResNeXt", false]], "resnext_101_32x16d() (in module lucid.models)": [[171, "lucid.models.resnext_101_32x16d", false]], "resnext_101_32x32d() (in module lucid.models)": [[172, "lucid.models.resnext_101_32x32d", false]], "resnext_101_32x4d() (in module lucid.models)": [[173, "lucid.models.resnext_101_32x4d", false]], "resnext_101_32x8d() (in module lucid.models)": [[174, "lucid.models.resnext_101_32x8d", false]], "resnext_101_64x4d() (in module lucid.models)": [[175, "lucid.models.resnext_101_64x4d", false]], "resnext_50_32x4d() (in module lucid.models)": [[176, "lucid.models.resnext_50_32x4d", false]], "rmsprop (class in lucid.optim)": [[465, "lucid.optim.RMSprop", false]], "roialign (class in lucid.models.objdet.util)": [[243, "lucid.models.objdet.util.ROIAlign", false]], "roll() (in module lucid)": [[565, "lucid.roll", false]], "rotate() (in module lucid.nn.functional)": [[341, "lucid.nn.functional.rotate", false]], "round() (in module lucid)": [[531, "lucid.round", false]], "rprop (class in lucid.optim)": [[466, "lucid.optim.Rprop", false]], "sample() (lucid.models.imggen.ddpm method)": [[220, "lucid.models.imggen.DDPM.sample", false]], "save() (in module lucid)": [[476, "lucid.save", false]], "scaled_dot_product_attention() (in module lucid.nn.functional)": [[286, "lucid.nn.functional.scaled_dot_product_attention", false]], "scaleddotproductattention (class in lucid.nn)": [[374, "lucid.nn.ScaledDotProductAttention", false]], "se_resnet_101() (in module lucid.models)": [[178, "lucid.models.se_resnet_101", false]], "se_resnet_152() (in module lucid.models)": [[179, "lucid.models.se_resnet_152", false]], "se_resnet_18() (in module lucid.models)": [[180, "lucid.models.se_resnet_18", false]], "se_resnet_34() (in module lucid.models)": [[181, "lucid.models.se_resnet_34", false]], "se_resnet_50() (in module lucid.models)": [[182, "lucid.models.se_resnet_50", false]], "se_resnext_101_32x4d() (in module lucid.models)": [[183, "lucid.models.se_resnext_101_32x4d", false]], "se_resnext_101_32x8d() (in module lucid.models)": [[184, "lucid.models.se_resnext_101_32x8d", false]], "se_resnext_101_64x4d() (in module lucid.models)": [[185, "lucid.models.se_resnext_101_64x4d", false]], "se_resnext_50_32x4d() (in module lucid.models)": [[186, "lucid.models.se_resnext_50_32x4d", false]], "seed() (in module lucid.random)": [[483, "lucid.random.seed", false]], "selectivekernel (class in lucid.nn)": [[349, "lucid.nn.SelectiveKernel", false]], "selectivesearch (class in lucid.models.objdet.util)": [[244, "lucid.models.objdet.util.SelectiveSearch", false]], "selu (class in lucid.nn)": [[367, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[281, "lucid.nn.functional.selu", false]], "semodule (class in lucid.nn)": [[348, "lucid.nn.SEModule", false]], "senet (class in lucid.models)": [[177, "lucid.models.SENet", false]], "sequential (class in lucid.nn)": [[274, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[467, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[368, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[282, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[532, "lucid.sign", false]], "sin() (in module lucid)": [[533, "lucid.sin", false]], "sinh() (in module lucid)": [[534, "lucid.sinh", false]], "sk_resnet_18() (in module lucid.models)": [[188, "lucid.models.sk_resnet_18", false]], "sk_resnet_34() (in module lucid.models)": [[189, "lucid.models.sk_resnet_34", false]], "sk_resnet_50() (in module lucid.models)": [[190, "lucid.models.sk_resnet_50", false]], "sk_resnext_50_32x4d() (in module lucid.models)": [[191, "lucid.models.sk_resnext_50_32x4d", false]], "sknet (class in lucid.models)": [[187, "lucid.models.SKNet", false]], "softmax (class in lucid.nn)": [[369, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[283, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[31, "lucid.linalg.solve", false]], "sort() (in module lucid)": [[566, "lucid.sort", false]], "split() (in module lucid)": [[567, "lucid.split", false]], "sqrt() (in module lucid)": [[535, "lucid.sqrt", false]], "square() (in module lucid)": [[536, "lucid.square", false]], "squeeze() (in module lucid)": [[568, "lucid.squeeze", false]], "stack() (in module lucid)": [[569, "lucid.stack", false]], "steplr (class in lucid.optim.lr_scheduler)": [[454, "lucid.optim.lr_scheduler.StepLR", false]], "sub() (in module lucid)": [[497, "lucid.sub", false]], "subset (class in lucid.data)": [[3, "lucid.data.Subset", false]], "sum() (in module lucid)": [[537, "lucid.sum", false]], "svd() (in module lucid.linalg)": [[32, "lucid.linalg.svd", false]], "swapaxes() (in module lucid)": [[538, "lucid.swapaxes", false]], "swin_base() (in module lucid.models)": [[194, "lucid.models.swin_base", false]], "swin_large() (in module lucid.models)": [[195, "lucid.models.swin_large", false]], "swin_small() (in module lucid.models)": [[196, "lucid.models.swin_small", false]], "swin_tiny() (in module lucid.models)": [[197, "lucid.models.swin_tiny", false]], "swin_v2_base() (in module lucid.models)": [[198, "lucid.models.swin_v2_base", false]], "swin_v2_giant() (in module lucid.models)": [[199, "lucid.models.swin_v2_giant", false]], "swin_v2_huge() (in module lucid.models)": [[200, "lucid.models.swin_v2_huge", false]], "swin_v2_large() (in module lucid.models)": [[201, "lucid.models.swin_v2_large", false]], "swin_v2_small() (in module lucid.models)": [[202, "lucid.models.swin_v2_small", false]], "swin_v2_tiny() (in module lucid.models)": [[203, "lucid.models.swin_v2_tiny", false]], "swintransformer (class in lucid.models)": [[192, "lucid.models.SwinTransformer", false]], "swintransformer_v2 (class in lucid.models)": [[193, "lucid.models.SwinTransformer_V2", false]], "swish (class in lucid.nn)": [[370, "lucid.nn.Swish", false]], "tan() (in module lucid)": [[539, "lucid.tan", false]], "tanh (class in lucid.nn)": [[371, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[540, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[284, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[486, "lucid.Tensor", false]], "tensor() (in module lucid)": [[544, "lucid.tensor", false]], "tensordataset (class in lucid.data)": [[4, "lucid.data.TensorDataset", false]], "tensordot() (in module lucid)": [[498, "lucid.tensordot", false]], "tile() (in module lucid)": [[570, "lucid.tile", false]], "topk() (in module lucid)": [[571, "lucid.topk", false]], "totensor (class in lucid.transforms)": [[580, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[541, "lucid.trace", false]], "transformer (class in lucid.models)": [[264, "lucid.models.Transformer", false]], "transformer (class in lucid.nn)": [[432, "lucid.nn.Transformer", false]], "transformer_base() (in module lucid.models)": [[265, "lucid.models.transformer_base", false]], "transformer_big() (in module lucid.models)": [[266, "lucid.models.transformer_big", false]], "transformerdecoder (class in lucid.nn)": [[433, "lucid.nn.TransformerDecoder", false]], "transformerdecoderlayer (class in lucid.nn)": [[434, "lucid.nn.TransformerDecoderLayer", false]], "transformerencoder (class in lucid.nn)": [[435, "lucid.nn.TransformerEncoder", false]], "transformerencoderlayer (class in lucid.nn)": [[436, "lucid.nn.TransformerEncoderLayer", false]], "transpose() (in module lucid)": [[542, "lucid.transpose", false]], "tril() (in module lucid)": [[572, "lucid.tril", false]], "triu() (in module lucid)": [[573, "lucid.triu", false]], "unbind() (in module lucid)": [[574, "lucid.unbind", false]], "unfold (class in lucid.nn)": [[382, "lucid.nn.Unfold", false]], "unfold() (in module lucid.nn.functional)": [[294, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[356, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[484, "lucid.random.uniform", false]], "unique() (in module lucid)": [[575, "lucid.unique", false]], "unsqueeze() (in module lucid)": [[576, "lucid.unsqueeze", false]], "upsample (class in lucid.nn)": [[438, "lucid.nn.Upsample", false]], "vae (class in lucid.models.imggen)": [[219, "lucid.models.imggen.VAE", false]], "var() (in module lucid)": [[543, "lucid.var", false]], "vggnet (class in lucid.models)": [[204, "lucid.models.VGGNet", false]], "vggnet_11() (in module lucid.models)": [[205, "lucid.models.vggnet_11", false]], "vggnet_13() (in module lucid.models)": [[206, "lucid.models.vggnet_13", false]], "vggnet_16() (in module lucid.models)": [[207, "lucid.models.vggnet_16", false]], "vggnet_19() (in module lucid.models)": [[208, "lucid.models.vggnet_19", false]], "vit (class in lucid.models)": [[209, "lucid.models.ViT", false]], "vit_base() (in module lucid.models)": [[210, "lucid.models.vit_base", false]], "vit_huge() (in module lucid.models)": [[211, "lucid.models.vit_huge", false]], "vit_large() (in module lucid.models)": [[212, "lucid.models.vit_large", false]], "vit_small() (in module lucid.models)": [[213, "lucid.models.vit_small", false]], "vit_tiny() (in module lucid.models)": [[214, "lucid.models.vit_tiny", false]], "vstack() (in module lucid)": [[577, "lucid.vstack", false]], "where() (in module lucid)": [[578, "lucid.where", false]], "wide_resnet_101() (in module lucid.models)": [[168, "lucid.models.wide_resnet_101", false]], "wide_resnet_50() (in module lucid.models)": [[169, "lucid.models.wide_resnet_50", false]], "xavier_normal() (in module lucid.nn.init)": [[357, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[358, "lucid.nn.init.xavier_uniform", false]], "xception (class in lucid.models)": [[215, "lucid.models.Xception", false]], "xception() (in module lucid.models)": [[216, "lucid.models.xception", false]], "yolo_v1 (class in lucid.models)": [[252, "lucid.models.YOLO_V1", false]], "yolo_v1() (in module lucid.models)": [[253, "lucid.models.yolo_v1", false]], "yolo_v1_tiny() (in module lucid.models)": [[254, "lucid.models.yolo_v1_tiny", false]], "yolo_v2 (class in lucid.models)": [[255, "lucid.models.YOLO_V2", false]], "yolo_v2() (in module lucid.models)": [[256, "lucid.models.yolo_v2", false]], "yolo_v2_tiny() (in module lucid.models)": [[257, "lucid.models.yolo_v2_tiny", false]], "yolo_v3 (class in lucid.models)": [[258, "lucid.models.YOLO_V3", false]], "yolo_v3() (in module lucid.models)": [[259, "lucid.models.yolo_v3", false]], "yolo_v3_tiny() (in module lucid.models)": [[260, "lucid.models.yolo_v3_tiny", false]], "yolo_v4 (class in lucid.models)": [[261, "lucid.models.YOLO_V4", false]], "yolo_v4() (in module lucid.models)": [[262, "lucid.models.yolo_v4", false]], "zeros() (in module lucid)": [[509, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[510, "lucid.zeros_like", false]], "zfnet (class in lucid.models)": [[217, "lucid.models.ZFNet", false]], "zfnet() (in module lucid.models)": [[218, "lucid.models.zfnet", false]]}, "objects": {"": [[20, 0, 0, "-", "lucid"]], "lucid": [[486, 1, 1, "", "Tensor"], [512, 2, 1, "", "abs"], [487, 2, 1, "", "add"], [499, 2, 1, "", "arange"], [513, 2, 1, "", "arccos"], [514, 2, 1, "", "arcsin"], [515, 2, 1, "", "arctan"], [545, 2, 1, "", "argmax"], [546, 2, 1, "", "argmin"], [547, 2, 1, "", "argsort"], [548, 2, 1, "", "broadcast_to"], [516, 2, 1, "", "ceil"], [549, 2, 1, "", "chunk"], [517, 2, 1, "", "clip"], [550, 2, 1, "", "concatenate"], [518, 2, 1, "", "cos"], [519, 2, 1, "", "cosh"], [470, 2, 1, "", "count_flops"], [520, 2, 1, "", "cube"], [521, 2, 1, "", "cumprod"], [522, 2, 1, "", "cumsum"], [500, 2, 1, "", "diag"], [551, 2, 1, "", "diagonal"], [488, 2, 1, "", "div"], [489, 2, 1, "", "dot"], [501, 2, 1, "", "empty"], [502, 2, 1, "", "empty_like"], [523, 2, 1, "", "exp"], [503, 2, 1, "", "eye"], [552, 2, 1, "", "flatten"], [524, 2, 1, "", "floor"], [504, 2, 1, "", "full"], [505, 2, 1, "", "full_like"], [471, 2, 1, "", "grad_enabled"], [553, 2, 1, "", "histogram"], [554, 2, 1, "", "histogram2d"], [555, 2, 1, "", "histogramdd"], [556, 2, 1, "", "hstack"], [490, 2, 1, "", "inner"], [506, 2, 1, "", "linspace"], [475, 2, 1, "", "load"], [525, 2, 1, "", "log"], [526, 2, 1, "", "log2"], [558, 2, 1, "", "masked_fill"], [491, 2, 1, "", "matmul"], [527, 2, 1, "", "max"], [492, 2, 1, "", "maximum"], [528, 2, 1, "", "mean"], [559, 2, 1, "", "meshgrid"], [529, 2, 1, "", "min"], [493, 2, 1, "", "minimum"], [494, 2, 1, "", "multiply"], [473, 4, 1, "", "no_grad"], [560, 2, 1, "", "nonzero"], [507, 2, 1, "", "ones"], [508, 2, 1, "", "ones_like"], [495, 2, 1, "", "outer"], [561, 2, 1, "", "pad"], [496, 2, 1, "", "power"], [562, 2, 1, "", "ravel"], [530, 2, 1, "", "reciprocal"], [474, 2, 1, "", "register_model"], [563, 2, 1, "", "repeat"], [564, 2, 1, "", "reshape"], [565, 2, 1, "", "roll"], [531, 2, 1, "", "round"], [476, 2, 1, "", "save"], [532, 2, 1, "", "sign"], [533, 2, 1, "", "sin"], [534, 2, 1, "", "sinh"], [566, 2, 1, "", "sort"], [567, 2, 1, "", "split"], [535, 2, 1, "", "sqrt"], [536, 2, 1, "", "square"], [568, 2, 1, "", "squeeze"], [569, 2, 1, "", "stack"], [497, 2, 1, "", "sub"], [537, 2, 1, "", "sum"], [538, 2, 1, "", "swapaxes"], [539, 2, 1, "", "tan"], [540, 2, 1, "", "tanh"], [544, 2, 1, "", "tensor"], [498, 2, 1, "", "tensordot"], [570, 2, 1, "", "tile"], [571, 2, 1, "", "topk"], [541, 2, 1, "", "trace"], [542, 2, 1, "", "transpose"], [572, 2, 1, "", "tril"], [573, 2, 1, "", "triu"], [574, 2, 1, "", "unbind"], [575, 2, 1, "", "unique"], [576, 2, 1, "", "unsqueeze"], [543, 2, 1, "", "var"], [577, 2, 1, "", "vstack"], [578, 2, 1, "", "where"], [509, 2, 1, "", "zeros"], [510, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"], [3, 1, 1, "", "Subset"], [4, 1, 1, "", "TensorDataset"], [7, 2, 1, "", "random_split"]], "lucid.datasets": [[9, 1, 1, "", "CIFAR10"], [10, 1, 1, "", "CIFAR100"], [11, 1, 1, "", "FashionMNIST"], [12, 1, 1, "", "MNIST"]], "lucid.einops": [[15, 2, 1, "", "einsum"], [17, 2, 1, "", "rearrange"], [18, 2, 1, "", "reduce"], [19, 2, 1, "", "repeat"]], "lucid.linalg": [[22, 2, 1, "", "cholesky"], [23, 2, 1, "", "det"], [24, 2, 1, "", "eig"], [26, 2, 1, "", "inv"], [27, 2, 1, "", "matrix_power"], [28, 2, 1, "", "norm"], [29, 2, 1, "", "pinv"], [30, 2, 1, "", "qr"], [31, 2, 1, "", "solve"], [32, 2, 1, "", "svd"]], "lucid.models": [[33, 1, 1, "", "AlexNet"], [69, 1, 1, "", "CSPNet"], [35, 1, 1, "", "CoAtNet"], [44, 1, 1, "", "ConvNeXt"], [45, 1, 1, "", "ConvNeXt_V2"], [59, 1, 1, "", "CrossViT"], [73, 1, 1, "", "CvT"], [223, 1, 1, "", "DETR"], [77, 1, 1, "", "DenseNet"], [226, 1, 1, "", "EfficientDet"], [96, 1, 1, "", "EfficientFormer"], [82, 1, 1, "", "EfficientNet"], [83, 1, 1, "", "EfficientNet_V2"], [239, 1, 1, "", "FastRCNN"], [235, 1, 1, "", "FasterRCNN"], [100, 1, 1, "", "Inception"], [104, 1, 1, "", "InceptionNeXt"], [109, 1, 1, "", "InceptionResNet"], [113, 1, 1, "", "LeNet"], [117, 1, 1, "", "MaxViT"], [123, 1, 1, "", "MobileNet"], [124, 1, 1, "", "MobileNet_V2"], [125, 1, 1, "", "MobileNet_V3"], [126, 1, 1, "", "MobileNet_V4"], [136, 1, 1, "", "PVT"], [137, 1, 1, "", "PVT_V2"], [240, 1, 1, "", "RCNN"], [150, 1, 1, "", "ResNeSt"], [170, 1, 1, "", "ResNeXt"], [159, 1, 1, "", "ResNet"], [177, 1, 1, "", "SENet"], [187, 1, 1, "", "SKNet"], [192, 1, 1, "", "SwinTransformer"], [193, 1, 1, "", "SwinTransformer_V2"], [264, 1, 1, "", "Transformer"], [204, 1, 1, "", "VGGNet"], [209, 1, 1, "", "ViT"], [215, 1, 1, "", "Xception"], [252, 1, 1, "", "YOLO_V1"], [255, 1, 1, "", "YOLO_V2"], [258, 1, 1, "", "YOLO_V3"], [261, 1, 1, "", "YOLO_V4"], [217, 1, 1, "", "ZFNet"], [34, 2, 1, "", "alexnet"], [36, 2, 1, "", "coatnet_0"], [37, 2, 1, "", "coatnet_1"], [38, 2, 1, "", "coatnet_2"], [39, 2, 1, "", "coatnet_3"], [40, 2, 1, "", "coatnet_4"], [41, 2, 1, "", "coatnet_5"], [42, 2, 1, "", "coatnet_6"], [43, 2, 1, "", "coatnet_7"], [46, 2, 1, "", "convnext_base"], [47, 2, 1, "", "convnext_large"], [48, 2, 1, "", "convnext_small"], [49, 2, 1, "", "convnext_tiny"], [50, 2, 1, "", "convnext_v2_atto"], [51, 2, 1, "", "convnext_v2_base"], [52, 2, 1, "", "convnext_v2_femto"], [53, 2, 1, "", "convnext_v2_huge"], [54, 2, 1, "", "convnext_v2_large"], [55, 2, 1, "", "convnext_v2_nano"], [56, 2, 1, "", "convnext_v2_pico"], [57, 2, 1, "", "convnext_v2_tiny"], [58, 2, 1, "", "convnext_xlarge"], [60, 2, 1, "", "crossvit_15"], [61, 2, 1, "", "crossvit_15_dagger"], [62, 2, 1, "", "crossvit_18"], [63, 2, 1, "", "crossvit_18_dagger"], [64, 2, 1, "", "crossvit_9"], [65, 2, 1, "", "crossvit_9_dagger"], [66, 2, 1, "", "crossvit_base"], [67, 2, 1, "", "crossvit_small"], [68, 2, 1, "", "crossvit_tiny"], [70, 2, 1, "", "csp_darknet_53"], [71, 2, 1, "", "csp_resnet_50"], [72, 2, 1, "", "csp_resnext_50_32x4d"], [74, 2, 1, "", "cvt_13"], [75, 2, 1, "", "cvt_21"], [76, 2, 1, "", "cvt_w24"], [78, 2, 1, "", "densenet_121"], [79, 2, 1, "", "densenet_169"], [80, 2, 1, "", "densenet_201"], [81, 2, 1, "", "densenet_264"], [224, 2, 1, "", "detr_r101"], [225, 2, 1, "", "detr_r50"], [227, 2, 1, "", "efficientdet_d0"], [228, 2, 1, "", "efficientdet_d1"], [229, 2, 1, "", "efficientdet_d2"], [230, 2, 1, "", "efficientdet_d3"], [231, 2, 1, "", "efficientdet_d4"], [232, 2, 1, "", "efficientdet_d5"], [233, 2, 1, "", "efficientdet_d6"], [234, 2, 1, "", "efficientdet_d7"], [97, 2, 1, "", "efficientformer_l1"], [98, 2, 1, "", "efficientformer_l3"], [99, 2, 1, "", "efficientformer_l7"], [84, 2, 1, "", "efficientnet_b0"], [85, 2, 1, "", "efficientnet_b1"], [86, 2, 1, "", "efficientnet_b2"], [87, 2, 1, "", "efficientnet_b3"], [88, 2, 1, "", "efficientnet_b4"], [89, 2, 1, "", "efficientnet_b5"], [90, 2, 1, "", "efficientnet_b6"], [91, 2, 1, "", "efficientnet_b7"], [92, 2, 1, "", "efficientnet_v2_l"], [93, 2, 1, "", "efficientnet_v2_m"], [94, 2, 1, "", "efficientnet_v2_s"], [95, 2, 1, "", "efficientnet_v2_xl"], [236, 2, 1, "", "faster_rcnn_resnet_101_fpn"], [237, 2, 1, "", "faster_rcnn_resnet_50_fpn"], [105, 2, 1, "", "inception_next_atto"], [106, 2, 1, "", "inception_next_base"], [107, 2, 1, "", "inception_next_small"], [108, 2, 1, "", "inception_next_tiny"], [110, 2, 1, "", "inception_resnet_v1"], [111, 2, 1, "", "inception_resnet_v2"], [101, 2, 1, "", "inception_v1"], [102, 2, 1, "", "inception_v3"], [103, 2, 1, "", "inception_v4"], [114, 2, 1, "", "lenet_1"], [115, 2, 1, "", "lenet_4"], [116, 2, 1, "", "lenet_5"], [118, 2, 1, "", "maxvit_base"], [119, 2, 1, "", "maxvit_large"], [120, 2, 1, "", "maxvit_small"], [121, 2, 1, "", "maxvit_tiny"], [122, 2, 1, "", "maxvit_xlarge"], [127, 2, 1, "", "mobilenet"], [128, 2, 1, "", "mobilenet_v2"], [129, 2, 1, "", "mobilenet_v3_large"], [130, 2, 1, "", "mobilenet_v3_small"], [131, 2, 1, "", "mobilenet_v4_conv_large"], [132, 2, 1, "", "mobilenet_v4_conv_medium"], [133, 2, 1, "", "mobilenet_v4_conv_small"], [134, 2, 1, "", "mobilenet_v4_hybrid_large"], [135, 2, 1, "", "mobilenet_v4_hybrid_medium"], [138, 2, 1, "", "pvt_huge"], [139, 2, 1, "", "pvt_large"], [140, 2, 1, "", "pvt_medium"], [141, 2, 1, "", "pvt_small"], [142, 2, 1, "", "pvt_tiny"], [143, 2, 1, "", "pvt_v2_b0"], [144, 2, 1, "", "pvt_v2_b1"], [145, 2, 1, "", "pvt_v2_b2"], [146, 2, 1, "", "pvt_v2_b2_li"], [147, 2, 1, "", "pvt_v2_b3"], [148, 2, 1, "", "pvt_v2_b4"], [149, 2, 1, "", "pvt_v2_b5"], [151, 2, 1, "", "resnest_101"], [152, 2, 1, "", "resnest_14"], [153, 2, 1, "", "resnest_200"], [154, 2, 1, "", "resnest_26"], [155, 2, 1, "", "resnest_269"], [156, 2, 1, "", "resnest_50"], [157, 2, 1, "", "resnest_50_1s4x24d"], [158, 2, 1, "", "resnest_50_4s2x40d"], [160, 2, 1, "", "resnet_1001"], [161, 2, 1, "", "resnet_101"], [162, 2, 1, "", "resnet_152"], [163, 2, 1, "", "resnet_18"], [164, 2, 1, "", "resnet_200"], [165, 2, 1, "", "resnet_269"], [166, 2, 1, "", "resnet_34"], [167, 2, 1, "", "resnet_50"], [171, 2, 1, "", "resnext_101_32x16d"], [172, 2, 1, "", "resnext_101_32x32d"], [173, 2, 1, "", "resnext_101_32x4d"], [174, 2, 1, "", "resnext_101_32x8d"], [175, 2, 1, "", "resnext_101_64x4d"], [176, 2, 1, "", "resnext_50_32x4d"], [178, 2, 1, "", "se_resnet_101"], [179, 2, 1, "", "se_resnet_152"], [180, 2, 1, "", "se_resnet_18"], [181, 2, 1, "", "se_resnet_34"], [182, 2, 1, "", "se_resnet_50"], [183, 2, 1, "", "se_resnext_101_32x4d"], [184, 2, 1, "", "se_resnext_101_32x8d"], [185, 2, 1, "", "se_resnext_101_64x4d"], [186, 2, 1, "", "se_resnext_50_32x4d"], [188, 2, 1, "", "sk_resnet_18"], [189, 2, 1, "", "sk_resnet_34"], [190, 2, 1, "", "sk_resnet_50"], [191, 2, 1, "", "sk_resnext_50_32x4d"], [194, 2, 1, "", "swin_base"], [195, 2, 1, "", "swin_large"], [196, 2, 1, "", "swin_small"], [197, 2, 1, "", "swin_tiny"], [198, 2, 1, "", "swin_v2_base"], [199, 2, 1, "", "swin_v2_giant"], [200, 2, 1, "", "swin_v2_huge"], [201, 2, 1, "", "swin_v2_large"], [202, 2, 1, "", "swin_v2_small"], [203, 2, 1, "", "swin_v2_tiny"], [265, 2, 1, "", "transformer_base"], [266, 2, 1, "", "transformer_big"], [205, 2, 1, "", "vggnet_11"], [206, 2, 1, "", "vggnet_13"], [207, 2, 1, "", "vggnet_16"], [208, 2, 1, "", "vggnet_19"], [210, 2, 1, "", "vit_base"], [211, 2, 1, "", "vit_huge"], [212, 2, 1, "", "vit_large"], [213, 2, 1, "", "vit_small"], [214, 2, 1, "", "vit_tiny"], [168, 2, 1, "", "wide_resnet_101"], [169, 2, 1, "", "wide_resnet_50"], [216, 2, 1, "", "xception"], [253, 2, 1, "", "yolo_v1"], [254, 2, 1, "", "yolo_v1_tiny"], [256, 2, 1, "", "yolo_v2"], [257, 2, 1, "", "yolo_v2_tiny"], [259, 2, 1, "", "yolo_v3"], [260, 2, 1, "", "yolo_v3_tiny"], [262, 2, 1, "", "yolo_v4"], [218, 2, 1, "", "zfnet"]], "lucid.models.imggen": [[220, 1, 1, "", "DDPM"], [219, 1, 1, "", "VAE"]], "lucid.models.imggen.DDPM": [[220, 3, 1, "", "get_loss"], [220, 3, 1, "", "sample"]], "lucid.models.imggen.VAE": [[219, 3, 1, "", "current_beta"], [219, 3, 1, "", "decode"], [219, 3, 1, "", "encode"], [219, 3, 1, "", "reparameterize"]], "lucid.models.objdet.DETR": [[223, 3, 1, "", "forward"], [223, 3, 1, "", "get_loss"], [223, 3, 1, "", "predict"]], "lucid.models.objdet.EfficientDet": [[226, 3, 1, "", "forward"], [226, 3, 1, "", "get_loss"], [226, 3, 1, "", "predict"]], "lucid.models.objdet.YOLO_V1": [[252, 3, 1, "", "forward"], [252, 3, 1, "", "get_loss"]], "lucid.models.objdet.YOLO_V2": [[255, 3, 1, "", "forward"], [255, 3, 1, "", "get_loss"], [255, 3, 1, "", "predict"]], "lucid.models.objdet.YOLO_V3": [[258, 3, 1, "", "forward"], [258, 3, 1, "", "get_loss"], [258, 3, 1, "", "predict"]], "lucid.models.objdet.YOLO_V4": [[261, 3, 1, "", "forward"], [261, 3, 1, "", "get_loss"], [261, 3, 1, "", "predict"]], "lucid.models.objdet.util": [[241, 1, 1, "", "FPN"], [242, 1, 1, "", "MultiScaleROIAlign"], [243, 1, 1, "", "ROIAlign"], [244, 1, 1, "", "SelectiveSearch"], [245, 2, 1, "", "apply_deltas"], [246, 2, 1, "", "bbox_to_delta"], [247, 2, 1, "", "clip_boxes"], [249, 2, 1, "", "iou"], [250, 2, 1, "", "nms"]], "lucid.nn": [[417, 1, 1, "", "AdaptiveAvgPool1d"], [418, 1, 1, "", "AdaptiveAvgPool2d"], [419, 1, 1, "", "AdaptiveAvgPool3d"], [420, 1, 1, "", "AdaptiveMaxPool1d"], [421, 1, 1, "", "AdaptiveMaxPool2d"], [422, 1, 1, "", "AdaptiveMaxPool3d"], [384, 1, 1, "", "AlphaDropout"], [423, 1, 1, "", "AvgPool1d"], [424, 1, 1, "", "AvgPool2d"], [425, 1, 1, "", "AvgPool3d"], [400, 1, 1, "", "BCELoss"], [401, 1, 1, "", "BCEWithLogitsLoss"], [407, 1, 1, "", "BatchNorm1d"], [408, 1, 1, "", "BatchNorm2d"], [409, 1, 1, "", "BatchNorm3d"], [395, 1, 1, "", "Bilinear"], [267, 1, 1, "", "Buffer"], [376, 1, 1, "", "Conv1d"], [377, 1, 1, "", "Conv2d"], [378, 1, 1, "", "Conv3d"], [342, 1, 1, "", "ConvBNReLU1d"], [343, 1, 1, "", "ConvBNReLU2d"], [344, 1, 1, "", "ConvBNReLU3d"], [379, 1, 1, "", "ConvTranspose1d"], [380, 1, 1, "", "ConvTranspose2d"], [381, 1, 1, "", "ConvTranspose3d"], [402, 1, 1, "", "CrossEntropyLoss"], [345, 1, 1, "", "DepthSeparableConv1d"], [346, 1, 1, "", "DepthSeparableConv2d"], [347, 1, 1, "", "DepthSeparableConv3d"], [385, 1, 1, "", "DropBlock"], [386, 1, 1, "", "DropPath"], [387, 1, 1, "", "Dropout"], [388, 1, 1, "", "Dropout1d"], [389, 1, 1, "", "Dropout2d"], [390, 1, 1, "", "Dropout3d"], [359, 1, 1, "", "ELU"], [430, 1, 1, "", "Embedding"], [396, 1, 1, "", "Flatten"], [360, 1, 1, "", "GELU"], [410, 1, 1, "", "GlobalResponseNorm"], [411, 1, 1, "", "GroupNorm"], [361, 1, 1, "", "HardSigmoid"], [362, 1, 1, "", "HardSwish"], [403, 1, 1, "", "HuberLoss"], [397, 1, 1, "", "Identity"], [412, 1, 1, "", "InstanceNorm1d"], [413, 1, 1, "", "InstanceNorm2d"], [414, 1, 1, "", "InstanceNorm3d"], [415, 1, 1, "", "LayerNorm"], [363, 1, 1, "", "LeakyReLU"], [398, 1, 1, "", "Linear"], [404, 1, 1, "", "MSELoss"], [426, 1, 1, "", "MaxPool1d"], [427, 1, 1, "", "MaxPool2d"], [428, 1, 1, "", "MaxPool3d"], [364, 1, 1, "", "Mish"], [268, 1, 1, "", "Module"], [270, 1, 1, "", "ModuleDict"], [271, 1, 1, "", "ModuleList"], [373, 1, 1, "", "MultiHeadAttention"], [405, 1, 1, "", "NLLLoss"], [269, 1, 1, "", "Parameter"], [272, 1, 1, "", "ParameterDict"], [273, 1, 1, "", "ParameterList"], [365, 1, 1, "", "ReLU"], [366, 1, 1, "", "ReLU6"], [392, 1, 1, "", "Rearrange"], [367, 1, 1, "", "SELU"], [348, 1, 1, "", "SEModule"], [374, 1, 1, "", "ScaledDotProductAttention"], [349, 1, 1, "", "SelectiveKernel"], [274, 1, 1, "", "Sequential"], [368, 1, 1, "", "Sigmoid"], [369, 1, 1, "", "Softmax"], [370, 1, 1, "", "Swish"], [371, 1, 1, "", "Tanh"], [432, 1, 1, "", "Transformer"], [433, 1, 1, "", "TransformerDecoder"], [434, 1, 1, "", "TransformerDecoderLayer"], [435, 1, 1, "", "TransformerEncoder"], [436, 1, 1, "", "TransformerEncoderLayer"], [382, 1, 1, "", "Unfold"], [438, 1, 1, "", "Upsample"]], "lucid.nn.functional": [[321, 2, 1, "", "adaptive_avg_pool1d"], [322, 2, 1, "", "adaptive_avg_pool2d"], [323, 2, 1, "", "adaptive_avg_pool3d"], [324, 2, 1, "", "adaptive_max_pool1d"], [325, 2, 1, "", "adaptive_max_pool2d"], [326, 2, 1, "", "adaptive_max_pool3d"], [334, 2, 1, "", "affine_grid"], [295, 2, 1, "", "alpha_dropout"], [327, 2, 1, "", "avg_pool1d"], [328, 2, 1, "", "avg_pool2d"], [329, 2, 1, "", "avg_pool3d"], [314, 2, 1, "", "batch_norm"], [304, 2, 1, "", "bilinear"], [307, 2, 1, "", "binary_cross_entropy"], [308, 2, 1, "", "binary_cross_entropy_with_logits"], [287, 2, 1, "", "conv1d"], [288, 2, 1, "", "conv2d"], [289, 2, 1, "", "conv3d"], [290, 2, 1, "", "conv_transpose1d"], [291, 2, 1, "", "conv_transpose2d"], [292, 2, 1, "", "conv_transpose3d"], [309, 2, 1, "", "cross_entropy"], [296, 2, 1, "", "drop_block"], [297, 2, 1, "", "drop_path"], [298, 2, 1, "", "dropout"], [299, 2, 1, "", "dropout1d"], [300, 2, 1, "", "dropout2d"], [301, 2, 1, "", "dropout3d"], [276, 2, 1, "", "elu"], [337, 2, 1, "", "embedding"], [277, 2, 1, "", "gelu"], [315, 2, 1, "", "global_response_norm"], [335, 2, 1, "", "grid_sample"], [316, 2, 1, "", "group_norm"], [310, 2, 1, "", "huber_loss"], [318, 2, 1, "", "instance_norm"], [339, 2, 1, "", "interpolate"], [319, 2, 1, "", "layer_norm"], [279, 2, 1, "", "leaky_relu"], [306, 2, 1, "", "linear"], [331, 2, 1, "", "max_pool1d"], [332, 2, 1, "", "max_pool2d"], [333, 2, 1, "", "max_pool3d"], [312, 2, 1, "", "mse_loss"], [313, 2, 1, "", "nll_loss"], [320, 2, 1, "", "normalize"], [340, 2, 1, "", "one_hot"], [280, 2, 1, "", "relu"], [341, 2, 1, "", "rotate"], [286, 2, 1, "", "scaled_dot_product_attention"], [281, 2, 1, "", "selu"], [282, 2, 1, "", "sigmoid"], [283, 2, 1, "", "softmax"], [284, 2, 1, "", "tanh"], [294, 2, 1, "", "unfold"]], "lucid.nn.init": [[351, 2, 1, "", "constant"], [353, 2, 1, "", "kaiming_normal"], [354, 2, 1, "", "kaiming_uniform"], [355, 2, 1, "", "normal"], [356, 2, 1, "", "uniform"], [357, 2, 1, "", "xavier_normal"], [358, 2, 1, "", "xavier_uniform"]], "lucid.nn.util": [[441, 2, 1, "", "clip_grad_norm"], [442, 2, 1, "", "clip_grad_value"], [443, 2, 1, "", "grad_norm"]], "lucid.optim": [[457, 1, 1, "", "ASGD"], [458, 1, 1, "", "Adadelta"], [459, 1, 1, "", "Adagrad"], [460, 1, 1, "", "Adam"], [461, 1, 1, "", "AdamW"], [462, 1, 1, "", "Adamax"], [463, 1, 1, "", "NAdam"], [445, 1, 1, "", "Optimizer"], [464, 1, 1, "", "RAdam"], [465, 1, 1, "", "RMSprop"], [466, 1, 1, "", "Rprop"], [467, 1, 1, "", "SGD"]], "lucid.optim.lr_scheduler": [[447, 1, 1, "", "CosineAnnealingLR"], [448, 1, 1, "", "CyclicLR"], [449, 1, 1, "", "ExponentialLR"], [450, 1, 1, "", "LRScheduler"], [451, 1, 1, "", "LambdaLR"], [452, 1, 1, "", "MultiStepLR"], [453, 1, 1, "", "ReduceLROnPlateau"], [454, 1, 1, "", "StepLR"]], "lucid.random": [[477, 2, 1, "", "bernoulli"], [479, 2, 1, "", "permutation"], [480, 2, 1, "", "rand"], [481, 2, 1, "", "randint"], [482, 2, 1, "", "randn"], [483, 2, 1, "", "seed"], [484, 2, 1, "", "uniform"]], "lucid.transforms": [[581, 1, 1, "", "CenterCrop"], [579, 1, 1, "", "Compose"], [582, 1, 1, "", "Normalize"], [583, 1, 1, "", "RandomCrop"], [584, 1, 1, "", "RandomGrayscale"], [585, 1, 1, "", "RandomHorizontalFlip"], [586, 1, 1, "", "RandomRotation"], [587, 1, 1, "", "RandomVerticalFlip"], [588, 1, 1, "", "Resize"], [580, 1, 1, "", "ToTensor"]], "lucid.types": [[469, 1, 1, "", "Numeric"]], "lucid.visual": [[591, 2, 1, "", "draw_tensor_graph"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function", "3": "py:method", "4": "py:attribute"}, "terms": {"": [5, 20, 21, 27, 29, 32, 59, 94, 112, 117, 129, 130, 135, 139, 151, 152, 153, 154, 155, 156, 209, 213, 220, 227, 228, 235, 237, 240, 241, 242, 252, 253, 254, 255, 256, 257, 258, 261, 264, 267, 268, 269, 270, 272, 273, 274, 286, 321, 322, 323, 349, 374, 382, 402, 405, 417, 418, 419, 423, 426, 427, 432, 440, 441, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 469, 472, 474, 475, 476, 486, 491, 500, 521, 522, 528, 537, 538, 541, 543, 544, 565, 568, 580, 582, 590, 594], "0": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 12, 15, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 36, 44, 45, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 83, 92, 93, 94, 95, 96, 102, 104, 109, 112, 113, 117, 127, 136, 137, 138, 139, 140, 141, 142, 177, 192, 193, 209, 219, 220, 223, 224, 225, 226, 227, 235, 239, 240, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 258, 261, 264, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 304, 306, 307, 308, 309, 310, 312, 313, 314, 315, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 438, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 505, 506, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 537, 538, 539, 540, 542, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 558, 560, 561, 562, 563, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 581, 582, 583, 584, 585, 586, 587, 588, 590, 593], "000": [9, 10, 11, 12, 98, 112, 144, 199, 265, 266, 501, 502], "0000": [402, 403, 405], "0001": [453, 457], "000e": [501, 502], "001": [448, 457, 460, 461, 463, 464, 467], "002": [462, 463], "003": [112, 141], "004": 463, "005": 363, "006": 448, "008": [61, 112, 127], "00808": 112, "009": [112, 144], "00b": [112, 238], "01": [20, 279, 363, 445, 447, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467], "01051757": 482, "011": [42, 112], "01191": 112, "013": [80, 112, 593], "014": [68, 112], "016": [71, 112, 160], "01697": 112, "01b": 112, "02": 220, "0205": 402, "0217": 402, "0227": 402, "024": [112, 122, 133, 182], "025": [66, 112], "026": [112, 171], "02767": 238, "028": [112, 176, 593], "0299": 402, "02b": 112, "030": [236, 238], "032": [92, 112, 167, 593], "03545": 112, "03b": 112, "044715": [277, 360], "0450": 402, "0451": 402, "046": [90, 112], "047": [112, 206, 593], "04719755": 513, "0474259": 282, "048": [112, 141, 184], "0480": 402, "04861": 112, "04b": 112, "05": [96, 314, 316, 318, 319, 342, 343, 344, 363, 407, 408, 409, 411, 412, 413, 414, 415, 432, 434, 436], "050": [112, 213], "0507": [281, 367], "05m": 112, "06": [44, 104, 315, 410, 458, 466], "066": [56, 112], "068": [228, 238], "069": [112, 154, 165], "06m": 112, "07": [296, 307, 309, 385, 400, 401, 402, 441], "070": [112, 135], "0700": 402, "0706508": 371, "071": [112, 160], "072": [112, 148], "0721": 402, "073": [112, 190], "07722396": 370, "078": [238, 262], "0794": 405, "07b": 112, "08": [453, 460, 461, 462, 463, 464, 465], "0802": 405, "081": [112, 121], "083": [108, 112], "08333333": 29, "085537": 523, "086727": 364, "088": [112, 182], "08955": 112, "08b": 112, "08m": 112, "0900": [369, 402], "096": [38, 112, 216], "0986": [283, 369], "09861229": 525, "09883": 112, "0992": 402, "09b": 112, "1": [0, 1, 3, 4, 7, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 129, 130, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 177, 183, 184, 185, 186, 187, 191, 192, 193, 204, 209, 215, 217, 219, 220, 223, 224, 225, 226, 228, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 252, 255, 256, 257, 258, 259, 260, 261, 262, 264, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 304, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 473, 475, 476, 477, 479, 480, 481, 482, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 505, 506, 507, 508, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 548, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 593, 594], "10": [0, 1, 2, 3, 5, 7, 9, 10, 11, 20, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 77, 97, 112, 113, 114, 115, 116, 117, 138, 151, 152, 153, 154, 155, 156, 157, 158, 204, 217, 218, 223, 230, 238, 242, 245, 246, 247, 249, 250, 270, 271, 274, 288, 289, 304, 306, 321, 373, 376, 377, 378, 389, 390, 395, 396, 398, 408, 409, 413, 417, 424, 425, 427, 432, 433, 434, 435, 436, 446, 449, 451, 452, 453, 459, 474, 481, 484, 485, 488, 491, 494, 495, 506, 515, 521, 522, 531, 537, 547, 553, 554, 571, 578, 581, 583, 584, 586, 594], "100": [10, 20, 34, 59, 92, 93, 94, 95, 96, 112, 205, 206, 207, 208, 223, 224, 225, 244, 247, 250, 447, 474, 590, 593], "1000": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 236, 237], "1000000": 457, "1001": [112, 160, 402], "1003": 402, "1007": 112, "10096": 112, "101": [112, 150, 151, 161, 168, 171, 172, 173, 174, 175, 178, 183, 184, 185, 223, 224, 236, 238], "10106": 112, "1014": 281, "102": [112, 165], "1024": [20, 38, 43, 69, 76, 231, 238, 239, 261, 266, 392], "1025": [271, 274], "1026": [271, 274], "1027": [271, 274], "10499": 282, "105": [66, 112], "1050": 368, "1054": 405, "1056": [271, 274], "10590": 112, "106": [112, 202, 238], "107": [43, 112], "108": [93, 112], "10934": 238, "1097": 112, "10b": 238, "11": [15, 97, 112, 135, 163, 180, 204, 205, 238, 304, 376, 377, 378, 389, 395, 408, 409, 413, 424, 425, 427, 491, 581, 582, 583, 584, 586, 593], "110": [112, 155, 250], "1105": 112, "1109": 112, "111": [86, 112], "1111": 400, "112": [112, 129, 156, 240], "1134": 304, "114b": 584, "119": [112, 304], "1192": [282, 283, 369], "12": [24, 29, 40, 41, 59, 66, 76, 77, 78, 79, 80, 81, 87, 98, 112, 114, 115, 138, 142, 192, 193, 195, 196, 197, 199, 200, 201, 202, 203, 209, 246, 250, 265, 266, 272, 304, 320, 323, 376, 377, 378, 389, 390, 395, 408, 409, 413, 419, 424, 425, 427, 491, 495, 496, 581, 583, 584, 586], "120": [92, 112, 113, 116, 129, 130, 247], "12000": [265, 266], "121": [77, 78, 112], "12122": 112, "123": [353, 354, 355, 356, 357, 358, 483, 484], "124": [41, 112, 353, 354, 357, 358], "125": [256, 257, 425], "1250": 403, "1251": 112, "1258": 112, "126": [112, 168, 593], "128": [20, 35, 38, 44, 49, 64, 65, 90, 98, 110, 112, 117, 121, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 159, 168, 169, 194, 204, 219, 235, 241, 260, 274, 349, 579, 590], "1280": [41, 125, 232, 233, 238], "1280x1280": [232, 233], "128x128": [579, 590], "12b": 112, "13": [74, 101, 112, 204, 206, 256, 257, 258, 261, 304, 376, 377, 378, 395, 409, 424, 425, 427, 491, 581, 583, 584, 586, 593], "130": 247, "131": 593, "1312": [223, 238], "1314": 112, "132": [112, 205, 593], "1324": 112, "133": [112, 206, 238, 256, 593], "134": [230, 238], "136": [94, 112, 135, 238], "138": [112, 207, 593], "13b": [112, 238], "13k": 112, "13x13": [258, 259, 260, 261], "14": [37, 38, 39, 79, 112, 118, 119, 122, 144, 152, 376, 377, 378, 389, 390, 395, 409, 424, 425, 427, 491, 495, 504, 531, 581, 583, 584, 586, 593], "14030": 112, "1409": 112, "1415": 531, "14285715": 249, "143": [112, 208], "1436": 593, "144": 130, "1440": 238, "1448": 238, "145": 304, "147": 238, "148": [48, 112, 234, 238], "14899": 112, "149": [79, 112, 160, 238, 259, 593], "14b": 112, "14m": 112, "15": [0, 15, 55, 60, 61, 112, 223, 238, 249, 257, 304, 376, 377, 378, 395, 409, 424, 425, 427, 491, 495, 541, 581, 583, 584, 586, 590], "150": 244, "1513": 405, "152": [112, 134, 162, 179], "1536": [39, 40, 42, 122, 234, 238], "1536x1536": 234, "155": 491, "1556": 112, "156": [105, 112], "157": [39, 112], "1588": [277, 360], "15b": 112, "15m": 112, "16": [59, 75, 76, 77, 78, 112, 113, 116, 125, 129, 130, 136, 171, 177, 194, 198, 204, 207, 209, 210, 211, 212, 213, 214, 220, 235, 239, 240, 241, 242, 252, 258, 259, 261, 271, 272, 274, 286, 322, 323, 342, 343, 344, 348, 349, 373, 374, 376, 377, 378, 380, 381, 389, 390, 392, 395, 408, 409, 418, 419, 424, 425, 427, 432, 433, 434, 435, 436, 440, 441, 442, 443, 491, 495, 521, 535, 581, 583, 584, 586], "160": [112, 129, 143, 161, 593], "16227766": 30, "16425": 405, "1643": 400, "166": 491, "167": [112, 238, 362], "169": [77, 79, 112], "16b": 112, "16x16": 112, "17": [112, 154, 223, 376, 377, 378, 395, 409, 425, 490, 581, 583, 584, 586], "170": [304, 593], "1704": 112, "171": [112, 119], "173": [234, 238], "174": [36, 112], "17520119": 534, "177": [112, 173], "17b": 112, "18": [62, 63, 99, 112, 115, 140, 147, 163, 180, 188, 194, 195, 196, 198, 199, 200, 201, 202, 231, 238, 376, 377, 378, 389, 395, 409, 425, 494, 495, 581, 583, 584, 586, 593, 594], "1800": 402, "1804": 238, "182": [112, 246], "184": 129, "187": [112, 119], "18877099": 370, "189": 112, "19": [15, 74, 88, 112, 204, 208, 257, 288, 289, 304, 377, 378, 409, 489, 491, 498], "192": [36, 37, 39, 40, 42, 44, 45, 59, 60, 61, 67, 68, 74, 75, 76, 99, 104, 112, 114, 115, 118, 119, 120, 122, 142, 162, 195, 593], "194": [112, 171], "196": [58, 76, 112, 195, 201], "1966": [283, 368, 369], "197": [47, 54, 112], "198": [112, 129], "199": [112, 211], "1998": [112, 402], "19b": 112, "1_53": 112, "1d": [250, 287, 290, 321, 324, 327, 331, 342, 345, 382, 407, 412, 417, 420, 480, 484, 491, 500, 541, 553, 554, 559, 561, 562, 563, 570, 575], "1e": [24, 29, 44, 96, 104, 143, 144, 145, 147, 148, 149, 220, 296, 307, 309, 314, 315, 316, 318, 319, 320, 342, 343, 344, 385, 400, 401, 402, 407, 408, 409, 410, 411, 412, 413, 414, 415, 432, 434, 436, 441, 453, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467], "1e6": 457, "1k": 594, "1s4x24d": 157, "1st": [33, 217], "1x1": [69, 223, 241], "2": [1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 59, 61, 63, 65, 69, 74, 76, 82, 83, 92, 93, 94, 95, 96, 97, 98, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 129, 130, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 158, 163, 180, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 217, 219, 220, 223, 226, 227, 228, 229, 230, 231, 232, 233, 235, 238, 239, 240, 242, 245, 246, 250, 252, 253, 254, 255, 258, 261, 267, 268, 269, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 304, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 374, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 392, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 430, 438, 440, 441, 443, 447, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 475, 476, 477, 479, 480, 481, 482, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 593], "20": [0, 9, 10, 11, 12, 76, 80, 112, 220, 221, 223, 244, 245, 246, 249, 250, 252, 253, 254, 256, 257, 270, 271, 274, 377, 378, 389, 409, 433, 434, 446, 450, 452, 454, 495, 523, 578, 593], "200": [99, 112, 129, 153, 164], "2000": 244, "2004": [112, 238], "201": [80, 112, 153], "2011": 348, "2012": 112, "2014": [112, 221, 238], "2015": [112, 238], "2016": [112, 238, 252, 253], "2017": [112, 226, 238, 263, 432], "2018": [112, 238, 348], "2019": 112, "2020": [112, 220, 221, 226, 238], "2021": 112, "2022": 112, "2023": [112, 348], "2024": 112, "2039": 405, "204": 378, "2048": [41, 42, 43, 69, 235, 264, 432, 434, 436], "209": [61, 112], "20b": [112, 238], "21": [75, 94, 112, 166, 181, 236, 237, 238, 256, 272, 304, 377, 378, 409, 495, 593], "210": [95, 112], "2102": 112, "2103": 112, "211": 491, "2111": 112, "213": [263, 266], "214": 238, "21841": [53, 58], "21b": 238, "21m": [112, 238], "22": [15, 71, 72, 110, 112, 146, 213, 216, 245, 250, 304, 377, 378, 389, 409, 489, 491], "2201": 112, "2204": 112, "2206": 112, "221": [95, 112], "222": 238, "2231": [402, 405], "224": [33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 104, 105, 106, 107, 108, 112, 117, 118, 119, 120, 121, 122, 127, 128, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 169, 171, 172, 173, 174, 175, 176, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 209, 210, 211, 212, 213, 214, 217, 236, 237, 240, 242, 594], "2247": [407, 408, 409, 412, 413, 414, 415], "224x224": [71, 82, 101, 183, 184, 185, 186, 191, 237, 240], "226": 491, "22752314": 482, "2278": 112, "2291952": 364, "22b": 112, "23": [112, 141, 151, 161, 168, 171, 172, 173, 174, 175, 178, 238, 260, 377, 378, 409, 531], "230": 593, "2301": 112, "2315": 401, "232": [66, 112, 127, 185, 231, 238], "2324": [112, 367], "233": [52, 112], "234": [353, 354, 355, 356, 357, 358, 484], "2345": 531, "235": [87, 112], "236": [238, 254], "237": [263, 266], "238": [112, 130, 147], "23840584": 370, "23b": 112, "24": [77, 78, 125, 129, 130, 153, 157, 164, 192, 193, 195, 196, 197, 199, 200, 201, 202, 203, 238, 243, 246, 254, 304, 322, 377, 378, 389, 409, 418, 495, 498, 521], "240": [37, 52, 60, 61, 62, 63, 64, 65, 66, 67, 68, 112, 129, 130, 208, 593], "240x240": 82, "242": 593, "2424": [283, 369], "244": 593, "2447": 369, "246": [112, 114, 593], "248": 593, "24d": 157, "25": [0, 112, 121, 145, 157, 167, 176, 188, 223, 226, 249, 261, 282, 291, 292, 297, 368, 378, 404, 409, 424, 425, 488, 506, 530, 543, 593], "2500": [400, 403, 405], "2512": 359, "2525015": 364, "2547": 367, "256": [35, 38, 41, 43, 44, 59, 64, 65, 69, 117, 121, 136, 137, 138, 143, 159, 204, 223, 235, 239, 241, 242, 243, 244, 260, 261], "258": [112, 196], "25m": 112, "26": [67, 112, 154, 258, 261, 272, 306, 378, 398, 409, 495], "260": 112, "260x260": 82, "26325684": 482, "264": [81, 112], "265": 112, "266": [63, 112], "2689": [283, 368, 369, 401], "26894142": 370, "269": [112, 155, 165], "26m": 238, "26x26": [258, 259, 260, 261], "27": [36, 60, 70, 112, 139, 148, 156, 186, 304, 376, 378, 409, 520], "271": [62, 112, 238, 253], "272": [67, 112, 175, 593], "274": [112, 151, 191], "276": [353, 354, 357, 358], "277": [40, 76, 112], "278": [70, 112], "27b": 112, "28": [40, 41, 49, 57, 61, 108, 112, 114, 115, 182, 197, 203, 223, 246, 304, 378, 396, 495], "280": [56, 112], "286": [112, 138, 230, 238], "287": [238, 256], "288": [112, 130, 153, 197], "289": [53, 84, 112], "28x28": [11, 12, 114, 115], "29": [112, 191, 232, 238, 378], "293": 112, "296": [64, 112], "299": [112, 215], "299r": 584, "299x299": [102, 103, 110, 111], "29b": 112, "2_i": [412, 413, 414], "2c": 448, "2d": [223, 288, 291, 300, 322, 325, 328, 332, 334, 343, 346, 380, 408, 413, 418, 421, 491, 500, 503, 538, 541, 551, 552, 554, 555, 559, 560, 561, 563, 570, 586], "2e": 462, "2k": 240, "2nd": [33, 217], "2x": 158, "2x2": [294, 581, 583], "2x3": 334, "3": [1, 2, 3, 4, 5, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 104, 105, 106, 107, 108, 112, 114, 117, 118, 119, 120, 121, 122, 125, 127, 128, 129, 130, 133, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 197, 199, 202, 203, 204, 209, 215, 217, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 250, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 271, 272, 273, 274, 277, 282, 283, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 304, 306, 310, 312, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 392, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 438, 440, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 516, 517, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 534, 535, 536, 537, 538, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 591, 593, 594], "30": [89, 98, 102, 112, 155, 158, 165, 253, 254, 271, 341, 378, 448, 452, 453, 578, 586, 593], "300": [112, 236, 237, 244], "300x300": 82, "301": [40, 112], "302": [93, 112, 238], "3026": 405, "3034016": 364, "304": [112, 120, 212], "3072": [43, 209], "308": [112, 201], "30823025": 370, "31": [75, 112, 304, 378, 491], "310": [501, 502], "316": 112, "31622777": 30, "319": [112, 593], "31b": 112, "32": [15, 20, 35, 59, 70, 77, 79, 80, 112, 116, 117, 131, 143, 150, 151, 152, 153, 154, 155, 156, 171, 172, 173, 174, 176, 194, 198, 219, 220, 223, 239, 240, 241, 242, 243, 258, 259, 261, 271, 274, 304, 306, 322, 342, 343, 344, 348, 349, 377, 378, 380, 392, 398, 418, 440, 441, 442, 443, 469, 489, 490, 495], "320": [98, 112, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 154], "321": [353, 354, 357, 358], "325": 238, "326": [112, 178, 212], "328": [99, 112], "32b": 112, "32m": 112, "32x16d": 112, "32x32": [9, 10, 113, 116], "32x32d": 112, "32x4d": [72, 112, 183, 186, 191], "32x8d": [112, 184], "33": [81, 112, 271, 274, 306, 378, 398, 521], "330": [37, 112], "3318": 401, "3333": 320, "33333333": 29, "336": [42, 47, 112, 174, 205, 246, 593], "337": [81, 112], "339": 593, "33b": 112, "34": [112, 166, 181, 189, 271, 274, 304, 378, 491, 495], "342": [353, 354, 357, 358], "344": [88, 112], "345": [353, 354, 355, 356, 357, 358, 484], "349": [112, 203], "34b": 112, "35": [111, 112, 271, 274, 378], "350": [58, 112], "352": [101, 112], "354": [112, 197], "355": [91, 112], "3567": [400, 405], "357": [112, 207, 218, 593], "359": [112, 139], "35b": 112, "36": [112, 153, 162, 164, 179, 378], "362": [112, 145], "364": 112, "367": 112, "3679": [276, 281, 359], "368": [112, 188, 190], "36b": 112, "36th": 112, "37": [112, 134, 376], "370": [86, 112], "372": 304, "375": 404, "3750": 403, "376": 112, "37754067": 370, "378": [112, 115, 593], "37b": 112, "38": 112, "380": 112, "380x380": 82, "383": [112, 122], "38344152": 480, "384": [36, 37, 39, 40, 42, 44, 45, 59, 60, 61, 66, 67, 74, 75, 99, 104, 112, 118, 119, 120, 122, 235], "38629436": 525, "389056": 523, "38b": 112, "38th": 112, "39": 112, "392": [76, 102, 112], "393": [89, 101, 112], "3935": 359, "3965": 112, "3977": 112, "39b": 112, "39m": 112, "3d": [289, 292, 301, 323, 326, 329, 333, 344, 347, 378, 381, 382, 409, 414, 419, 422], "3x3": [112, 241, 382, 485], "4": [0, 1, 2, 3, 4, 5, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 28, 29, 30, 36, 37, 38, 39, 40, 41, 42, 43, 44, 59, 64, 65, 66, 67, 68, 69, 75, 77, 82, 96, 97, 98, 104, 105, 112, 113, 114, 115, 117, 127, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 181, 182, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 220, 223, 224, 225, 226, 231, 235, 236, 237, 239, 242, 243, 244, 245, 246, 247, 249, 250, 255, 261, 272, 274, 286, 287, 288, 289, 290, 291, 294, 296, 297, 299, 300, 301, 304, 306, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 345, 346, 347, 353, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 374, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 395, 396, 398, 400, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 430, 438, 441, 442, 443, 453, 457, 460, 464, 465, 467, 472, 479, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 505, 508, 510, 517, 521, 522, 525, 526, 527, 528, 529, 530, 533, 535, 536, 537, 538, 539, 541, 542, 543, 544, 545, 546, 547, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 569, 570, 571, 572, 573, 574, 575, 577, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 591, 593], "40": [103, 112, 125, 129, 130, 149, 158, 242, 452, 578], "400": [50, 112, 116, 198, 211, 225, 238], "404": 238, "4044": 400, "406": 240, "4076": 402, "4078608": 364, "408": [62, 112], "4096": [33, 217, 235, 239], "40b": 112, "40d": 158, "41": [112, 140, 225, 238], "41421356": 22, "415": 112, "416": [112, 121, 165, 183, 214, 238, 255, 256, 257, 258, 259, 260, 261, 262], "416362": 364, "41666667": 29, "416x416": [259, 260], "417": [112, 158], "41808962": 482, "419974": 284, "4199743": 371, "41b": [112, 238], "42": [7, 42, 43, 199, 304, 348, 485], "421": [353, 354, 357, 358], "423": [353, 354, 355, 356], "424": 112, "42718872": 30, "4278": 112, "4284": 112, "4286": [320, 400], "42b": 112, "43": [15, 62, 90, 112, 237, 238, 489, 491, 498], "431": [107, 112], "432": [89, 112], "4323": 359, "434": [229, 238], "4375": 403, "43758721": 480, "43b": 112, "44": [63, 112, 161, 173, 223, 593], "440": [94, 112], "4472": 320, "4472136": 24, "448": [62, 63, 91, 97, 112, 238, 252, 253, 254], "4495": [409, 414], "44b": 112, "45": [112, 147, 189, 304, 341, 586], "450": 260, "4510": 112, "4520": 112, "4545": 384, "455": [112, 175, 593], "456": [112, 240], "456x456": 82, "457": [112, 142, 229, 238], "45b": 112, "45m": 238, "46": [48, 112], "460": [99, 112], "462": [238, 254], "463": [71, 112], "464": [46, 60, 112, 158], "468": [112, 172], "46b": 112, "4700": 112, "4708": 112, "47112767": 515, "472": [112, 172, 263, 266], "4742": 401, "476": [112, 195], "47b": 112, "47m": 112, "48": [77, 80, 81, 97, 112, 130, 151, 155, 165, 183, 195, 199, 200, 201, 306, 398], "480": [74, 79, 112, 129, 593], "481": [112, 129], "483": [112, 156, 593], "485": 240, "488": [238, 262], "48b": 112, "48m": 112, "49": [107, 112, 178, 196, 202], "492": [112, 140], "496": [57, 112], "4979": 359, "49b": 112, "49k": 112, "4d": 226, "4s2x40d": [112, 158], "4x": 157, "4x4": 588, "5": [1, 2, 15, 17, 18, 20, 21, 26, 27, 28, 29, 33, 36, 41, 44, 52, 59, 60, 61, 69, 70, 71, 72, 82, 84, 96, 98, 102, 112, 113, 114, 115, 116, 117, 120, 121, 125, 129, 130, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 187, 188, 189, 190, 214, 217, 223, 226, 228, 232, 235, 238, 239, 240, 242, 243, 245, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 268, 269, 270, 271, 272, 274, 277, 282, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 304, 306, 310, 312, 314, 316, 318, 319, 321, 324, 327, 328, 334, 335, 337, 339, 342, 343, 344, 349, 351, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 376, 377, 378, 379, 382, 384, 385, 386, 387, 388, 389, 390, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 411, 412, 413, 414, 415, 417, 420, 423, 424, 425, 427, 428, 432, 434, 436, 446, 448, 450, 452, 453, 454, 466, 472, 477, 479, 481, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 502, 503, 506, 508, 510, 512, 513, 514, 527, 528, 529, 530, 532, 537, 538, 541, 542, 543, 544, 545, 551, 553, 554, 555, 556, 559, 564, 565, 566, 567, 571, 572, 573, 574, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 593, 594], "50": [9, 10, 15, 71, 72, 112, 150, 156, 157, 158, 159, 167, 169, 176, 182, 186, 190, 191, 223, 225, 236, 237, 238, 244, 247, 306, 398, 447, 466, 489, 491, 506, 584, 585, 587, 590], "5000": [264, 400, 403, 405], "504": [112, 128, 593], "508": [236, 238], "509": [72, 112], "50_1s4x24d": 112, "50b": [112, 238], "510": 112, "5108": 405, "512": [35, 38, 41, 43, 44, 59, 69, 98, 111, 112, 117, 121, 132, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 159, 163, 189, 219, 227, 235, 238, 239, 240, 241, 260, 261, 264, 265, 373, 432, 433, 434, 435, 436, 593], "515": [237, 238], "516": [38, 112], "519": 112, "51b": 112, "52": [223, 233, 238, 258, 261], "520": [105, 112], "52359878": 514, "528": [60, 112, 224, 238], "528x528": 82, "52b": 112, "52x52": [258, 259, 260, 261], "53": [37, 70, 112, 258, 259, 261, 262, 304, 490], "530": [112, 172], "531": [112, 593], "532": [112, 195, 593], "536": [70, 87, 112], "537": [112, 130], "54": 593, "542": 593, "543": [353, 354, 355, 356, 357, 358, 484], "54308063": 519, "544": [107, 112, 207, 263, 265, 593], "545": 496, "5455": 384, "549": [112, 161, 593], "54b": 112, "55": [93, 112, 120, 139, 238], "553": [64, 112, 146, 593], "556": [112, 148, 232, 238], "557": [112, 167, 593], "558": [42, 112, 238], "559": [112, 186], "55b": 112, "560": [85, 112, 152], "563": [353, 354, 357, 358], "564": [112, 199], "5652": 593, "567": [112, 210], "5672": 112, "568": [95, 112], "5683": 112, "569": [112, 184], "57": [112, 190, 304], "570": [224, 238], "57079633": [513, 514], "5714": 320, "5720": 112, "5730": 112, "5731": 401, "57366333": 483, "575": 593, "576": 130, "578": [225, 238], "57b": 112, "580": 238, "582": 112, "584": [112, 263, 265], "5849625": 526, "586": [103, 112], "587": 238, "587g": 584, "589": [49, 112], "590": [112, 131], "591": [46, 112, 227, 238], "592": [65, 112, 180], "5987": 112, "5995": 112, "5998": 263, "59b": 112, "5d": 292, "5th": [33, 217], "6": [15, 21, 29, 33, 35, 37, 38, 39, 42, 44, 59, 60, 61, 62, 63, 67, 69, 74, 75, 77, 78, 79, 80, 81, 82, 96, 97, 98, 99, 104, 112, 113, 116, 118, 119, 122, 136, 137, 141, 143, 144, 145, 146, 147, 148, 149, 150, 156, 159, 166, 167, 169, 176, 181, 182, 189, 190, 192, 193, 195, 196, 197, 199, 200, 201, 202, 203, 217, 223, 226, 229, 233, 238, 264, 272, 273, 287, 288, 289, 290, 294, 296, 301, 304, 306, 315, 316, 320, 321, 324, 325, 334, 335, 337, 354, 358, 361, 366, 376, 377, 378, 382, 385, 387, 388, 389, 390, 395, 396, 398, 400, 407, 408, 409, 410, 412, 413, 414, 415, 417, 420, 421, 424, 425, 427, 428, 432, 433, 435, 458, 466, 472, 479, 484, 486, 487, 488, 489, 490, 491, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 510, 521, 522, 527, 528, 529, 537, 538, 541, 542, 543, 544, 549, 551, 556, 563, 564, 565, 566, 567, 572, 573, 574, 577, 580, 581, 582, 583, 584, 586, 588], "60": [9, 10, 112, 138, 162, 224, 238, 247, 498, 593], "600": [82, 112, 240], "6008": 263, "600x600": 82, "6052": 405, "606": [112, 196], "6065": 359, "608": [41, 112, 218, 238], "60b": 112, "61": [34, 112, 116, 593], "6105": 112, "611": [112, 152], "6114": 112, "6124": [407, 408, 409, 412, 413, 414, 415], "617": [92, 112], "62": [112, 148, 218, 236, 238, 259, 263, 265, 304], "622": [75, 112, 233, 238], "623": [55, 112], "626": [112, 118], "62686041": 534, "62b": 112, "630": 112, "632": [40, 112, 211, 212], "6321": [276, 359], "63245553": 30, "634": [233, 238], "635": [57, 112], "636": [84, 112], "63b": 112, "64": [35, 44, 69, 71, 72, 74, 75, 77, 81, 96, 98, 112, 117, 118, 119, 120, 121, 125, 129, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 164, 175, 187, 204, 219, 235, 239, 240, 241, 242, 271, 274, 304, 348, 349, 469], "640": [53, 88, 112, 228, 238], "641": 112, "645": 112, "64589411": 480, "647": [112, 188], "648": [112, 140], "649": [220, 221], "64b": 112, "64x4d": [112, 185], "654": [353, 354, 355, 356, 357, 358, 484], "656": [39, 112, 210, 227, 238], "657": [112, 200, 353, 354, 357, 358], "6590": [283, 369], "65b": 112, "66": [91, 112, 179], "660": [53, 112], "664": [112, 213], "6652": 369, "666": [112, 143], "66666667": 29, "6667": [320, 400], "667": [112, 208], "668": [112, 200], "6682": 400, "669": [112, 164], "66b": 112, "67": [491, 593], "672": [112, 129, 166, 593], "67326": 367, "6733": 281, "676": [112, 157], "6767": 593, "677": 112, "678": [353, 354, 355, 356, 357, 358], "67b": 112, "67m": 112, "68": 593, "688": [43, 112], "68811989": 482, "689": [112, 163, 593], "68b": 112, "69": 594, "6902": 593, "69314718": 525, "696": [75, 112, 147, 168, 593], "6976": 593, "6992": 593, "69b": 112, "7": [14, 15, 18, 28, 43, 62, 63, 68, 78, 85, 112, 117, 137, 143, 144, 145, 146, 147, 148, 149, 192, 193, 204, 226, 234, 235, 239, 242, 243, 252, 253, 254, 272, 287, 288, 289, 294, 296, 301, 304, 306, 307, 309, 321, 334, 335, 337, 349, 360, 366, 367, 368, 371, 376, 377, 378, 382, 385, 389, 390, 395, 396, 398, 400, 401, 402, 404, 408, 409, 413, 414, 417, 420, 424, 425, 427, 428, 441, 477, 481, 484, 487, 489, 490, 491, 495, 497, 498, 500, 504, 506, 523, 528, 537, 538, 541, 542, 543, 551, 555, 567, 570, 572, 573, 580, 581, 582, 583, 584, 586, 588, 593], "70": [11, 12, 112, 153, 223], "7001": 402, "704": [81, 112, 173], "706": [112, 116, 138, 593], "70710678": [24, 533], "708": [50, 112], "70b": 112, "7132": 112, "7141": 112, "7147": 405, "715": [112, 132], "7159": 593, "716": [238, 253], "717": [51, 112, 214], "7182": 531, "7182818": 523, "7188": 593, "71b": 112, "71m": [112, 238], "72": [125, 129, 130, 531], "720": [238, 254], "7237": 593, "7263": 238, "726791": 112, "7271": 238, "72b": 112, "73": 112, "731": [112, 202], "7311": [283, 368, 369], "7331": 593, "734": [112, 122, 238, 253], "739": [110, 112], "73b": 112, "74": [491, 593], "740": [231, 238], "7404": 593, "7434": 593, "745": [112, 201], "748": [106, 112], "74b": 112, "75": [250, 291, 306, 398, 404, 457, 506], "752": [228, 238], "755": [112, 134], "7560": 593, "757": [112, 120], "7581": 281, "75b": 112, "760": [112, 143, 151, 191], "7613": 593, "76159416": [370, 540], "7616": [284, 371], "76219569": 519, "7635": 367, "767": [47, 112], "768": [36, 37, 39, 40, 42, 44, 45, 66, 76, 99, 104, 112, 118, 119, 120, 122, 138, 194, 209, 229, 238], "7690": 593, "77": [238, 593], "770": [41, 112], "772": 496, "7737": 593, "774": [112, 133], "776": [65, 112, 118], "7761": 593, "778": [112, 180], "77b": 112, "78": [112, 169], "7831": 593, "78357324": 482, "784": [20, 219, 396], "7846": 593, "78539816": 515, "7885": 593, "789": 112, "78b": 112, "790": [39, 112], "7906": 593, "791": [112, 174, 593], "79172504": 480, "792": [112, 171], "7931": 593, "7937": 593, "795": [85, 112], "796": [112, 200], "797": [112, 166, 593], "79b": 112, "7x7": 217, "8": [7, 15, 27, 31, 42, 43, 59, 64, 65, 77, 82, 99, 112, 117, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 155, 159, 162, 165, 171, 172, 173, 174, 175, 176, 179, 188, 189, 190, 194, 198, 223, 241, 242, 244, 250, 253, 254, 258, 259, 261, 264, 271, 272, 274, 286, 287, 288, 289, 291, 294, 296, 301, 304, 306, 307, 320, 321, 322, 323, 326, 334, 335, 337, 342, 343, 344, 348, 360, 361, 367, 368, 371, 373, 374, 376, 377, 378, 380, 381, 382, 385, 387, 388, 389, 390, 395, 396, 398, 400, 404, 408, 409, 411, 413, 414, 417, 418, 419, 420, 422, 424, 425, 427, 428, 432, 433, 434, 435, 436, 441, 442, 443, 453, 460, 461, 462, 463, 464, 465, 477, 481, 488, 489, 490, 491, 495, 496, 498, 499, 500, 516, 520, 528, 537, 538, 541, 542, 543, 551, 555, 567, 571, 572, 573, 580, 581, 582, 583, 584, 586, 588, 591, 593, 594], "80": [9, 10, 11, 12, 129, 226, 227, 228, 229, 230, 231, 232, 233, 234, 258, 259, 260, 261, 262], "800": [51, 55, 68, 112, 223, 224, 225, 238, 240], "8005": 402, "808": [112, 162, 593], "80b": 112, "81": [99, 112], "817": [102, 112], "818": 112, "8182": 384, "81b": 112, "82": [38, 112, 149, 304, 593], "821": [112, 179, 238, 257], "8210": 593, "82b": 112, "83": [112, 175, 593], "832": [108, 112], "8325": 593, "833": 112, "83b": 112, "84": [113, 115, 116], "840": [34, 54, 97, 106, 112, 593], "8413": [277, 360], "842": [112, 203], "847": [111, 112], "848": [112, 139, 179, 206, 593], "849": 112, "84b": 112, "84m": 238, "856": [67, 78, 112, 145, 593], "85772238": 370, "8584": 367, "85b": 112, "86": [106, 112, 210], "862": [112, 216], "863": [112, 205, 238, 257, 593], "864": [72, 112, 131, 164], "868": [112, 181], "869": [112, 199], "87": [112, 194, 198, 234, 238], "872": [112, 128, 157, 178, 593], "8740": 593, "876": [353, 354, 357, 358, 484], "87m": 112, "88": [46, 51, 112, 130, 174, 185, 238, 593], "880": [112, 119], "8808": [283, 368, 369], "882": [112, 149, 232, 238], "883": 593, "884": [48, 112], "886": [112, 168, 593], "8863": 593, "887": 496, "88m": 112, "8907": 593, "891773": 480, "8924": 593, "893": [98, 112], "8944": 320, "89442719": 24, "895": [112, 189], "896": [112, 186, 230, 238], "89b": 112, "9": [0, 1, 5, 12, 31, 44, 45, 56, 64, 65, 86, 96, 104, 112, 132, 226, 245, 250, 258, 259, 288, 294, 296, 304, 306, 321, 334, 337, 376, 377, 378, 382, 385, 389, 395, 398, 400, 408, 409, 413, 417, 424, 425, 427, 446, 449, 457, 458, 460, 461, 462, 463, 464, 465, 467, 477, 481, 484, 487, 491, 495, 496, 497, 500, 505, 524, 535, 536, 547, 551, 571, 572, 573, 580, 581, 582, 583, 584, 586, 593], "902": [237, 238], "9029": 593, "9038": 593, "904": [112, 176, 593], "907": [220, 221], "90709145": 483, "9087": 593, "9091": 384, "90b": 238, "91": [223, 224, 225], "9120": 405, "9124": 593, "9134": 593, "9163": 405, "9197": 593, "91m": 112, "92": [223, 224, 225], "920": [112, 138], "922": [112, 198], "9248": 593, "928": [80, 97, 112, 593], "9281": 593, "9286": 593, "929": [112, 155], "92b": 112, "93": [112, 184, 238, 262], "933": 238, "9337": 593, "9370": 593, "93b": 112, "93k": 112, "93m": [112, 238], "94": 160, "9409": 593, "9439592": 364, "944": [36, 112], "9457": 593, "9486833": 30, "949e": [501, 502], "94b": 112, "95": [451, 593], "9526": 282, "9534": 593, "9545": 360, "955": [112, 183], "956": [54, 112], "958": [112, 181], "95b": 112, "96": [36, 37, 44, 45, 68, 97, 99, 104, 112, 117, 118, 119, 120, 130, 192, 193], "960": 129, "9600": 593, "96366276": 480, "9640": 371, "96402758": 540, "9645": 593, "968": [58, 112], "97": 593, "973": [112, 169], "974": [238, 259], "976": [63, 112], "978": [43, 78, 112, 593], "97b": 112, "984": [103, 112, 149, 185], "9865277": 364, "98b": 112, "99": [247, 465], "9957": 405, "997": [74, 112, 260], "99734545": 483, "9981": 593, "999": [0, 460, 461, 462, 463, 464], "99b": 112, "A": [1, 5, 7, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 44, 69, 70, 72, 74, 75, 76, 83, 109, 112, 113, 123, 126, 136, 138, 139, 140, 141, 142, 150, 159, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 219, 220, 221, 222, 223, 224, 225, 236, 239, 240, 241, 242, 243, 244, 246, 247, 249, 250, 255, 260, 268, 274, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 294, 295, 296, 297, 298, 299, 300, 304, 306, 307, 308, 309, 313, 314, 315, 316, 318, 319, 320, 334, 335, 339, 340, 349, 374, 384, 385, 387, 388, 389, 390, 392, 400, 401, 402, 405, 407, 408, 409, 410, 412, 413, 414, 415, 430, 432, 433, 434, 435, 436, 440, 445, 446, 451, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 477, 479, 480, 481, 482, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 586], "As": [69, 226, 380, 483], "At": [20, 438, 453], "Be": [0, 14], "By": [0, 2, 5, 20, 112, 126, 133, 160, 161, 162, 163, 164, 165, 166, 167, 269, 341, 440, 464, 472, 477, 480, 481, 482, 484, 580, 590], "For": [2, 5, 8, 15, 18, 22, 23, 24, 26, 27, 28, 29, 31, 131, 132, 133, 135, 224, 225, 226, 235, 240, 252, 255, 258, 274, 276, 277, 279, 280, 281, 282, 284, 290, 304, 306, 320, 339, 340, 353, 354, 357, 358, 367, 376, 377, 378, 379, 382, 395, 398, 407, 408, 409, 412, 413, 414, 440, 442, 456, 476, 479, 483, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 521, 522, 523, 525, 526, 527, 528, 529, 533, 535, 537, 538, 541, 542, 543, 547, 561, 563, 568, 570, 574, 576, 590], "If": [0, 1, 2, 7, 9, 10, 11, 12, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 59, 69, 96, 159, 219, 220, 223, 224, 225, 239, 240, 255, 258, 268, 270, 271, 272, 273, 276, 277, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 291, 297, 301, 304, 306, 314, 316, 318, 322, 323, 334, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 349, 353, 354, 373, 374, 376, 377, 378, 379, 380, 381, 386, 395, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 411, 412, 413, 414, 415, 418, 419, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 438, 441, 443, 445, 447, 448, 449, 450, 451, 452, 453, 454, 460, 461, 465, 466, 469, 474, 475, 476, 477, 480, 481, 482, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 553, 554, 555, 556, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 575, 576, 577, 580, 584, 585, 587, 588, 591, 594], "In": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594], "It": [1, 2, 3, 5, 11, 14, 15, 20, 29, 30, 31, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 57, 59, 70, 71, 78, 79, 80, 81, 96, 99, 100, 101, 102, 112, 113, 114, 115, 116, 117, 118, 119, 122, 124, 125, 127, 135, 140, 147, 149, 159, 160, 161, 162, 163, 164, 165, 166, 167, 180, 193, 200, 202, 204, 216, 219, 220, 221, 222, 223, 226, 238, 239, 240, 241, 242, 244, 245, 250, 252, 254, 255, 258, 261, 263, 268, 270, 271, 272, 273, 274, 290, 291, 292, 297, 301, 304, 335, 337, 339, 341, 342, 343, 344, 348, 360, 361, 365, 366, 371, 373, 374, 379, 381, 386, 392, 395, 397, 400, 402, 403, 404, 405, 411, 417, 418, 419, 430, 432, 433, 435, 438, 440, 442, 445, 456, 457, 463, 465, 466, 467, 469, 472, 473, 475, 476, 479, 483, 486, 487, 488, 489, 492, 493, 494, 496, 497, 506, 527, 529, 547, 550, 556, 559, 560, 561, 562, 563, 564, 567, 568, 569, 570, 574, 575, 577, 579, 580], "Its": [15, 31, 485], "Near": 29, "No": [223, 294, 297, 396, 401, 470], "Not": [335, 397], "One": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594], "Or": 594, "Such": 486, "The": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 304, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 392, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 594], "Then": [220, 236, 498], "There": 564, "These": [8, 14, 21, 24, 27, 30, 32, 35, 92, 93, 94, 95, 117, 122, 131, 132, 133, 134, 135, 138, 168, 169, 188, 189, 190, 216, 222, 240, 384, 387, 388, 389, 390, 400, 402, 403, 404, 405, 407, 408, 409, 412, 413, 414, 415, 466, 485, 590, 592], "To": [5, 20, 112, 220, 221, 237, 238, 255, 258, 263, 446, 456, 477, 479, 482, 485, 501, 502, 559, 575, 590], "With": [5, 112, 144, 148, 259, 294, 297, 316, 504, 505, 580, 590], "_": [4, 7, 17, 18, 19, 27, 220, 226, 252, 255, 258, 261, 270, 271, 273, 274, 276, 277, 279, 280, 281, 282, 284, 306, 334, 337, 339, 379, 380, 392, 408, 409, 412, 413, 414, 423, 424, 425, 426, 427, 428, 430, 441, 442, 443, 457, 458, 460, 461, 462, 463, 465, 467, 489, 490, 491, 495, 521, 522, 541, 542, 551, 572, 573, 574, 581, 582, 583, 585, 586, 587], "_0": 220, "_1": [24, 270, 271, 272, 273, 274, 304, 395, 495, 550, 556, 577], "_2": [24, 270, 271, 272, 273, 274, 304, 395, 495, 550, 556, 577], "__call__": [1, 268, 473], "__enter__": 473, "__exit__": 473, "__getattr__": 3, "__getitem__": [0, 2, 3, 4, 5, 7, 9, 10, 11, 12], "__init__": [0, 1, 2, 3, 5, 20, 33, 35, 44, 45, 59, 69, 82, 83, 96, 100, 104, 109, 113, 117, 123, 124, 125, 126, 136, 137, 150, 204, 217, 223, 235, 239, 240, 241, 242, 243, 244, 267, 268, 269, 270, 271, 272, 273, 297, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 376, 377, 378, 379, 380, 381, 384, 385, 386, 387, 388, 392, 395, 396, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 412, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 440, 441, 442, 443, 445, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 474, 486, 579, 580], "__iter__": [0, 1, 3], "__len__": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 12], "__repr__": 445, "__setattr__": 268, "_a": 498, "_activ": 283, "_arraylik": [4, 500, 502, 505, 508, 510], "_arraylikeint": 561, "_arrayorscalar": [267, 269, 477, 486, 544], "_b": 498, "_backbonebas": 223, "_backward_op": 20, "_base_activ": 113, "_base_dtyp": [501, 506], "_block": 385, "_builtinnumer": [486, 504, 505], "_c": 582, "_channel": 241, "_d": 292, "_darknet_53_tini": 260, "_decai": 463, "_devicetyp": [477, 479, 480, 481, 482, 484, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510], "_dtype_bit": 469, "_einopspattern": [17, 18, 19, 392], "_fanmod": [353, 354], "_fasterrcnnloss": 235, "_grad_en": 471, "_h": [291, 292], "_hungarianmatch": 223, "_i": [24, 28, 252, 283, 297, 304, 369, 386, 404, 407, 411, 415, 423, 426, 486, 489, 490, 492, 493, 495, 496, 512, 513, 514, 515, 517, 518, 519, 520, 523, 525, 526, 528, 530, 532, 533, 534, 535, 536, 537, 539, 540, 541, 542, 543, 550, 556, 563, 568, 571, 574, 576, 577], "_in": [353, 354, 357, 358], "_interpolatetyp": [335, 438], "_j": [283, 369, 423, 426, 443, 495, 528, 537, 542, 543], "_k": [7, 569], "_layer": [433, 435], "_left": 339, "_make_lay": 204, "_mlphead": 104, "_mlx_dtype": 469, "_mlxarrai": 486, "_modul": 268, "_n": [24, 270, 271, 272, 273, 274, 334, 550, 556, 577], "_nograd": 473, "_norm": 441, "_np_dtype": 469, "_out": [353, 354, 357, 358, 563, 570], "_p": [28, 320, 337, 430, 441, 443], "_pad": 561, "_paddingstr": [342, 343, 344, 345, 346, 347, 376, 377, 378, 379, 380, 381], "_paddingtyp": 335, "_paramet": 268, "_reducestr": 18, "_reductiontyp": [307, 309, 310, 312, 313, 400, 401, 402, 403, 404, 405], "_resnestbottleneck": 150, "_right": 339, "_scalar": [286, 351, 355, 356, 357, 358, 374, 441, 442, 499, 504, 505, 506, 517, 558], "_scaled_channel": 35, "_scaled_num_block": 35, "_seresnetbottleneck": [178, 179, 182], "_seresnetmodul": [180, 181], "_shapelik": [319, 415, 480, 481, 504, 507, 509, 548, 564, 568, 576], "_size": [321, 322, 323, 324, 385], "_skresnetmodul": [188, 189, 190], "_slope": 363, "_sortkind": 547, "_statedict": 445, "_t": [220, 464, 465], "_tensor": [373, 432, 434, 436], "_tensorop": 486, "_transform": 223, "_u": 29, "_util": 574, "_v": 29, "_valu": [442, 517, 561], "_var": 220, "_w": [291, 292], "_weight": 430, "_width": 561, "a_": [15, 35, 434, 521, 522], "a_1": [373, 567], "a_2": 567, "a_h": 373, "a_i": [373, 492, 493, 496, 567], "a_k": 567, "aaai": 112, "ab": [453, 511], "abbeel": 221, "abc": [2, 445], "abil": [112, 590], "about": 14, "abov": [223, 255, 261, 471, 483, 500, 503, 551, 572], "abrupt": 442, "abs_pos_emb": [192, 193], "absolut": [27, 28, 35, 192, 193, 226, 249, 255, 310, 442, 453, 462, 476, 512], "abstract": [2, 5, 138, 140, 440, 445, 456, 457, 465, 467, 469, 592], "abstractmethod": 445, "abund": [53, 134], "acc": [593, 594], "acceler": [112, 239, 367, 407, 408, 409, 448, 457, 463, 465, 467, 486], "accept": [219, 244, 379, 397, 547, 594], "access": [0, 2, 3, 5, 8, 9, 10, 11, 12, 20, 171, 172, 173, 174, 175, 176, 226, 236, 267, 269, 270, 271, 272, 273, 274, 470, 564, 592], "accord": [15, 17, 19, 297, 335, 339, 376, 377, 378, 392, 395, 398, 402, 405, 442, 458, 459, 460, 461, 462, 463, 464, 542, 548, 578], "accordingli": [23, 316, 538, 578], "account": [27, 29, 30, 364, 370, 470], "accumul": [335, 457, 458, 459, 470, 486, 487, 488, 492, 493, 494, 497, 548], "accur": [179, 231, 238, 364], "accuraci": [51, 53, 54, 55, 56, 69, 72, 92, 93, 94, 95, 96, 97, 98, 99, 106, 108, 112, 123, 124, 125, 131, 132, 133, 134, 135, 182, 210, 211, 212, 226, 229, 230, 233, 236, 237, 238, 254, 255, 261], "achiev": [17, 96, 112, 144, 170, 171, 172, 173, 174, 175, 176, 238, 287, 288, 289, 321, 392, 417, 418, 419, 422, 463, 585, 587], "across": [0, 9, 10, 14, 17, 18, 20, 35, 44, 57, 69, 96, 112, 117, 127, 138, 143, 144, 145, 147, 148, 149, 193, 201, 226, 238, 240, 242, 258, 267, 271, 274, 315, 316, 319, 321, 322, 323, 357, 358, 407, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 443, 469, 476, 477, 480, 481, 482, 483, 484, 485, 501, 502, 528, 543, 592], "act": [20, 69, 461, 565], "act_lay": [73, 96, 117], "activ": [33, 44, 61, 63, 65, 69, 73, 96, 112, 113, 117, 120, 121, 129, 130, 160, 164, 165, 177, 204, 217, 261, 262, 270, 274, 276, 277, 279, 280, 281, 282, 283, 284, 295, 308, 342, 343, 344, 348, 349, 353, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 384, 385, 387, 388, 389, 390, 400, 401, 402, 405, 407, 408, 409, 415, 432, 434, 436, 470, 527, 529, 592], "actual": [269, 400, 402, 404, 405, 583], "acycl": 20, "ad": [19, 77, 125, 159, 220, 245, 268, 270, 271, 272, 273, 274, 287, 288, 289, 290, 291, 296, 304, 306, 307, 309, 314, 315, 316, 318, 319, 327, 328, 329, 331, 332, 333, 340, 342, 343, 344, 373, 376, 377, 378, 379, 380, 381, 382, 385, 400, 402, 407, 408, 409, 410, 411, 412, 413, 414, 415, 423, 424, 425, 426, 427, 428, 432, 434, 436, 441, 458, 459, 460, 461, 462, 463, 464, 465, 474, 576, 590], "adadelta": 468, "adagrad": [458, 468], "adam": [112, 461, 462, 463, 464, 468], "adamax": 468, "adamw": 468, "adapt": [14, 33, 71, 100, 112, 113, 131, 134, 150, 178, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 204, 217, 321, 322, 323, 324, 325, 326, 348, 349, 417, 418, 419, 420, 421, 422, 449, 453, 458, 459, 460, 463, 464, 465, 466], "adaptive_avg_pool1d": [303, 330, 417], "adaptive_avg_pool2d": [303, 330, 418], "adaptive_avg_pool3d": [303, 330, 419], "adaptive_max_pool1d": [303, 330, 420], "adaptive_max_pool2d": [303, 330, 421], "adaptive_max_pool3d": [303, 330, 422], "adaptiveavgpool1d": [394, 429], "adaptiveavgpool2d": [33, 177, 204, 217, 240, 394, 429], "adaptiveavgpool3d": [394, 429], "adaptivemaxpool1d": [394, 429], "adaptivemaxpool2d": [394, 429], "adaptivemaxpool3d": [394, 429], "add": [8, 20, 59, 221, 224, 225, 240, 268, 270, 271, 274, 304, 306, 373, 376, 377, 378, 379, 380, 381, 395, 398, 415, 445, 457, 460, 465, 467, 472, 511, 561, 576], "add_bias_kv": 373, "add_modul": [268, 274], "add_nois": 220, "add_on": [240, 245, 246], "add_param_group": 445, "add_zero_attn": 373, "addit": [7, 8, 27, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 110, 111, 118, 119, 120, 121, 122, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 213, 214, 216, 218, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 253, 254, 256, 257, 259, 260, 262, 268, 271, 274, 304, 306, 314, 316, 318, 379, 380, 381, 395, 398, 407, 408, 409, 412, 413, 414, 457, 463, 472, 485, 487, 547, 569], "addition": 463, "address": [226, 402, 405, 460, 461, 464], "adjust": [110, 123, 125, 127, 135, 183, 184, 185, 186, 187, 191, 239, 240, 321, 322, 323, 349, 384, 385, 407, 408, 409, 412, 413, 414, 415, 417, 418, 419, 420, 422, 446, 447, 450, 451, 452, 453, 454, 456, 460, 464, 465, 466, 556, 577], "adopt": [226, 486], "advanc": [5, 20, 29, 83, 104, 112, 124, 134, 139, 141, 164, 198, 200, 221, 263, 271, 274, 287, 288, 289, 321, 322, 323, 417, 418, 419, 440, 457], "advantag": 111, "adversari": 261, "affect": [237, 334, 471, 562, 568, 579], "affin": [316, 334, 335, 342, 343, 344, 407, 408, 409, 411, 412, 413, 414, 415, 586], "affine_grid": [303, 335, 336], "after": [4, 14, 19, 20, 27, 33, 69, 96, 129, 130, 192, 193, 217, 219, 223, 235, 239, 250, 255, 258, 261, 269, 270, 271, 272, 273, 274, 301, 316, 324, 348, 349, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 377, 378, 384, 387, 388, 395, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 412, 415, 421, 423, 424, 425, 426, 427, 428, 432, 434, 436, 441, 443, 446, 453, 461, 470, 486, 487, 488, 492, 493, 494, 496, 497, 504, 505, 506, 561, 566, 567, 580, 594], "afterward": 470, "against": [253, 254], "aggreg": [14, 59, 112, 261, 262, 349, 495, 563, 570], "agnost": 469, "aim": 8, "al": [59, 101, 112, 117, 220, 226, 238, 240, 252, 253, 263, 432], "alex": [9, 10, 112], "alexei": [112, 238], "alexnet": 217, "alexnet_weight": 593, "algebra": [15, 21, 503], "algorithm": [11, 27, 29, 30, 445, 456, 485, 547], "ali": 238, "alia": 473, "align": [14, 31, 70, 134, 241, 242, 243, 245, 246, 252, 255, 258, 261, 334, 339, 438, 490, 491, 538], "align_corn": [334, 335, 339, 438], "all": [0, 3, 4, 5, 8, 15, 20, 30, 69, 82, 112, 219, 223, 226, 240, 241, 252, 258, 263, 268, 270, 271, 272, 273, 274, 288, 289, 292, 320, 321, 322, 323, 326, 328, 329, 332, 333, 339, 343, 344, 349, 363, 365, 373, 378, 396, 417, 418, 419, 424, 425, 428, 432, 440, 441, 442, 443, 445, 450, 456, 457, 460, 465, 466, 467, 470, 479, 486, 496, 521, 522, 527, 528, 529, 537, 541, 543, 550, 552, 555, 556, 563, 568, 569, 570, 572, 573, 577, 581, 582, 590, 594], "allevi": [112, 276], "alloc": [20, 501, 502], "allow": [0, 1, 3, 4, 5, 8, 14, 15, 17, 29, 30, 59, 69, 111, 112, 113, 117, 126, 129, 130, 132, 135, 137, 138, 151, 152, 153, 154, 155, 156, 157, 158, 159, 170, 183, 184, 185, 186, 187, 191, 192, 196, 197, 198, 199, 200, 202, 219, 222, 226, 269, 270, 271, 272, 273, 274, 276, 279, 280, 283, 289, 294, 341, 349, 359, 360, 363, 367, 368, 369, 371, 374, 376, 377, 378, 392, 430, 438, 440, 441, 446, 447, 449, 451, 453, 458, 459, 472, 499, 504, 507, 509, 510, 538, 542, 544, 559, 579, 580, 590, 594], "along": [4, 14, 18, 19, 69, 283, 320, 339, 349, 369, 470, 490, 491, 495, 521, 522, 527, 528, 529, 537, 541, 543, 545, 547, 548, 549, 550, 551, 554, 556, 559, 563, 565, 566, 567, 569, 570, 571, 574, 575, 576, 577, 585, 587], "alongsid": 267, "alpha": [220, 276, 279, 281, 295, 359, 367, 384, 457, 465], "alpha_": [220, 255, 258, 261], "alpha_dropout": [302, 303, 384], "alpha_t": [220, 226], "alphadropout": [391, 394], "alphadropoutmodel": 384, "alreadi": 474, "also": [20, 223, 276, 277, 279, 280, 281, 282, 284, 290, 304, 306, 339, 380, 463, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 502, 509, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 529, 530, 532, 533, 534, 535, 536, 538, 539, 540, 548, 550, 556, 561, 562, 563, 564, 568, 569, 570, 576, 577], "alter": [274, 396, 564, 565, 594], "altern": [1, 20, 117, 360, 458, 491], "alwai": [14, 269, 441, 446, 516, 524, 531, 558, 562, 578, 584, 585, 587, 594], "among": [102, 349], "amount": [262, 287, 288, 289, 327, 328, 329, 331, 332, 333, 345, 346, 347, 382, 463], "ampl": 131, "amsgrad": [460, 461], "an": [0, 1, 3, 5, 14, 17, 18, 19, 20, 24, 26, 27, 29, 30, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 74, 75, 76, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 116, 124, 127, 128, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 210, 211, 212, 213, 214, 216, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 244, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 265, 266, 268, 270, 271, 272, 273, 274, 277, 287, 288, 289, 294, 295, 298, 299, 300, 301, 304, 322, 323, 335, 337, 339, 340, 341, 345, 346, 347, 349, 357, 358, 359, 366, 368, 373, 376, 377, 378, 379, 380, 382, 384, 386, 387, 388, 389, 390, 392, 395, 396, 398, 415, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 432, 433, 435, 436, 445, 446, 451, 456, 457, 460, 463, 465, 469, 470, 473, 474, 475, 476, 486, 491, 500, 503, 505, 521, 522, 528, 537, 543, 547, 548, 550, 555, 563, 567, 570, 573, 574, 576, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 594], "analog": [563, 570], "analysi": [8, 222, 238, 348, 376, 377, 378, 414, 423, 425, 426, 428], "analyz": 222, "anchor": [223, 226, 235, 236, 237, 238, 255, 256, 257, 259, 260, 261, 262], "anchor_s": 235, "anchor_strid": 235, "andreetto": 112, "andrew": 112, "angl": [341, 586], "ani": [0, 1, 2, 3, 5, 17, 20, 27, 29, 34, 118, 119, 120, 121, 122, 159, 187, 216, 218, 220, 223, 237, 255, 267, 268, 269, 270, 272, 273, 276, 277, 279, 280, 281, 282, 284, 295, 298, 304, 306, 314, 316, 318, 335, 368, 392, 415, 440, 443, 445, 450, 470, 471, 473, 474, 483, 486, 499, 500, 501, 503, 504, 507, 508, 509, 510, 527, 529, 542, 544, 550, 552, 556, 561, 563, 569, 570, 576, 577, 579, 590], "anneal": [261, 447], "anoth": [3, 126, 222, 249, 273, 497, 508, 510, 580, 590], "api": [8, 20, 417, 418, 419, 420, 590], "appear": [445, 575], "append": [271, 273, 274, 373], "appl": [20, 122, 469, 486], "appli": [2, 8, 9, 10, 11, 12, 14, 15, 17, 18, 27, 33, 35, 44, 69, 82, 83, 96, 104, 112, 170, 187, 192, 193, 209, 215, 217, 219, 223, 226, 235, 238, 239, 240, 243, 255, 258, 261, 264, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 286, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 304, 306, 307, 308, 309, 310, 312, 313, 315, 316, 320, 324, 326, 334, 335, 342, 343, 344, 348, 349, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 377, 378, 381, 384, 385, 386, 387, 388, 389, 390, 392, 395, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 432, 433, 434, 435, 436, 442, 443, 450, 451, 457, 458, 459, 461, 462, 463, 464, 491, 504, 516, 524, 561, 563, 572, 573, 575, 579, 582, 584, 585, 586, 587, 588, 590], "applic": [8, 14, 18, 20, 29, 46, 47, 48, 51, 53, 58, 69, 77, 99, 107, 110, 111, 112, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 214, 260, 287, 292, 318, 376, 377, 378, 379, 395, 398, 485, 499, 509, 516, 561, 567, 572, 573, 588], "apply_delta": 248, "approach": [5, 14, 17, 19, 59, 61, 63, 65, 73, 109, 226, 239, 274, 392, 447, 461], "appropri": [29, 112, 125, 129, 130, 242, 268, 272, 274, 297, 376, 377, 378, 384, 387, 388, 402, 421, 424, 425, 469, 471, 476], "approx": 281, "approxim": [29, 277, 360, 361, 362, 424, 427, 470], "ar": [1, 2, 3, 4, 5, 7, 8, 15, 18, 19, 20, 23, 24, 26, 27, 29, 30, 31, 32, 36, 37, 38, 39, 40, 41, 42, 43, 71, 74, 75, 76, 92, 93, 94, 95, 100, 101, 102, 112, 131, 133, 134, 137, 138, 139, 140, 141, 142, 146, 222, 223, 226, 235, 236, 239, 240, 241, 244, 246, 247, 249, 250, 252, 255, 258, 267, 268, 269, 270, 271, 272, 273, 274, 283, 287, 288, 289, 291, 292, 294, 297, 304, 306, 315, 322, 323, 325, 326, 334, 335, 337, 339, 345, 346, 347, 348, 349, 353, 354, 356, 357, 358, 361, 369, 373, 376, 377, 378, 379, 382, 384, 385, 386, 387, 388, 389, 390, 395, 396, 398, 402, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 430, 436, 438, 440, 441, 442, 443, 448, 452, 457, 460, 461, 463, 464, 465, 466, 467, 470, 471, 473, 474, 476, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 506, 512, 517, 521, 522, 523, 527, 528, 529, 530, 532, 537, 538, 541, 542, 548, 549, 550, 559, 563, 564, 565, 566, 567, 570, 571, 572, 573, 574, 578, 579, 580, 581, 583, 584, 588, 590, 592, 594], "arang": [4, 498, 511], "arbitrari": [223, 271, 397, 501, 502, 517, 525, 526, 528, 533, 535, 537, 542, 543], "arcco": 511, "arch": 474, "architectur": [14, 34, 36, 37, 38, 39, 40, 41, 42, 43, 45, 49, 50, 51, 52, 53, 54, 55, 56, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 142, 144, 150, 151, 152, 153, 154, 155, 156, 159, 170, 171, 172, 173, 174, 175, 176, 177, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 218, 219, 222, 226, 236, 237, 238, 253, 255, 256, 257, 259, 260, 262, 263, 264, 270, 271, 272, 273, 274, 277, 290, 348, 361, 362, 365, 370, 373, 374, 392, 395, 397, 432, 440, 474, 592, 594], "arcsin": 511, "arctan": 511, "area": [249, 335, 339, 438], "arg": [268, 397, 474, 501], "argmax": [473, 557], "argmin": 557, "argsort": 557, "argument": [5, 8, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 110, 111, 113, 118, 119, 120, 121, 122, 127, 128, 129, 130, 131, 132, 133, 134, 135, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 205, 206, 207, 208, 216, 218, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 253, 254, 256, 257, 259, 260, 262, 268, 274, 334, 397, 470, 473, 501, 542, 594], "around": [24, 222, 341, 371], "arr": [550, 556, 569, 577], "arrai": [4, 20, 267, 269, 472, 475, 476, 477, 486, 491, 500, 502, 505, 508, 510, 544, 562, 563, 580, 590], "art": [53, 112, 211], "artifact": 243, "artifici": [112, 222], "arxiv": [112, 238], "ascend": [566, 571], "asgd": 468, "ashish": 263, "aspect": [235, 588], "aspect_ratio": 235, "assert": 4, "assign": [7, 20, 222, 261, 268, 270, 272, 274, 339, 402, 405, 558], "assist": [100, 101, 102], "associ": [272, 273, 443], "assum": [0, 1, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 209, 210, 211, 212, 213, 214, 223, 445, 456, 471, 475], "astyp": 486, "attach": [235, 470], "attempt": [270, 274], "attend": [286, 374, 433, 435, 436], "attent": [35, 59, 73, 74, 75, 76, 96, 112, 117, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 157, 158, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 209, 263, 264, 273, 304, 348, 373, 374, 432, 433, 434, 435, 436, 498], "attn": [286, 374], "attn_drop": 117, "attn_drop_r": [59, 136, 137, 192, 193], "attn_mask": [286, 374], "atto": [50, 105, 112], "attribut": [20, 226, 268, 446, 594], "attributeerror": 255, "audio": [376, 379], "augment": [5, 8, 180, 341, 485, 563, 570, 579, 583, 584, 585, 586, 587, 590], "auto": [221, 242, 594], "auto_pars": 469, "autodiff": [15, 364, 486], "autoencod": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594], "autograd": [20, 440, 476, 566], "automat": [4, 8, 243, 255, 269, 270, 271, 272, 273, 420, 421, 422, 440, 470, 477, 480, 481, 482, 484, 486, 501, 502, 510, 547, 559, 580], "autoregress": [286, 374], "aux": 223, "aux_loss": [223, 224, 225], "auxiliari": [100, 101, 102, 223, 267], "avail": [8, 9, 10, 11, 12, 594], "avd": 150, "averag": [18, 33, 96, 114, 115, 116, 117, 150, 159, 170, 177, 187, 204, 217, 267, 321, 322, 323, 327, 328, 329, 339, 348, 349, 404, 417, 418, 419, 423, 424, 425, 457, 458, 460, 465, 528], "avg": 69, "avg_down": 159, "avg_pool": [423, 424, 425], "avg_pool1d": [303, 330], "avg_pool2d": [303, 330], "avg_pool3d": [303, 330], "avgpool": [33, 177, 204, 217, 349], "avgpool1d": [394, 429], "avgpool1dmodel": 423, "avgpool2d": [394, 429], "avgpool2dmodel": 424, "avgpool3d": [394, 429], "avgpool3dmodel": 425, "avoid": [2, 5, 17, 18, 29, 83, 146, 243, 246, 272, 320, 392, 401, 448, 470, 473, 506, 516, 524], "aw": 258, "awar": [201, 261, 262], "ax": [14, 17, 18, 19, 21, 392, 472, 498, 527, 528, 529, 537, 538, 542, 543, 548, 551, 563, 568, 570], "axes_a": 498, "axes_b": 498, "axi": [4, 18, 28, 69, 112, 117, 219, 223, 224, 225, 283, 320, 369, 396, 490, 491, 498, 521, 522, 527, 528, 529, 537, 543, 545, 547, 549, 550, 551, 554, 556, 559, 561, 563, 565, 566, 567, 568, 569, 570, 571, 574, 575, 576, 577, 585, 587], "axis1": [538, 551], "axis2": [538, 551], "b": [15, 17, 18, 19, 21, 31, 35, 112, 210, 223, 224, 225, 249, 252, 253, 254, 255, 256, 257, 258, 261, 304, 306, 356, 376, 377, 378, 379, 380, 381, 392, 395, 398, 472, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 548, 550, 554, 555, 556, 559, 569, 577, 578, 584, 591], "b0": [82, 84, 112, 143, 227], "b1": [82, 85, 112, 144, 145, 228], "b2": [82, 86, 112, 145, 146, 229], "b3": [82, 87, 112, 147, 230], "b4": [82, 88, 112, 148, 231], "b5": [82, 89, 112, 149, 232], "b6": [82, 90, 112, 233], "b7": [82, 91, 112, 234], "b_": [15, 35], "b_1": [434, 436], "b_2": [434, 436], "b_i": [492, 493, 496], "b_k": 373, "b_v": 373, "back": [15, 20, 219, 236, 255, 334, 339, 373, 424, 425, 474, 490, 495, 545, 546, 547, 549, 563, 566, 570, 574], "backbon": [69, 70, 112, 147, 188, 189, 190, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 254, 256, 257, 259, 260, 262], "backbone_net": 237, "backbone_num_class": [236, 237], "backbone_out_channel": 261, "backend": [122, 486, 504, 547], "background": [223, 235, 239, 240], "backprop": [381, 401], "backpropag": [14, 20, 23, 24, 26, 27, 29, 30, 32, 112, 255, 258, 267, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 304, 306, 334, 335, 339, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 376, 377, 378, 382, 384, 385, 387, 388, 389, 390, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 412, 413, 414, 415, 423, 424, 425, 426, 427, 428, 430, 440, 441, 482, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 523, 527, 529, 544, 548, 549, 558, 561, 563, 565, 570, 572, 573, 580, 591], "backward": [20, 220, 252, 267, 269, 316, 335, 382, 411, 441, 442, 443, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 473, 486, 504, 505, 506, 549, 551, 558, 565, 566, 571, 580], "balanc": [36, 37, 38, 39, 40, 41, 42, 43, 48, 51, 52, 55, 66, 67, 74, 83, 92, 93, 94, 95, 98, 108, 112, 125, 126, 132, 133, 135, 138, 141, 171, 172, 173, 174, 175, 176, 210, 213, 226, 230, 237, 238, 403], "bar": [220, 457], "base": [5, 17, 18, 20, 21, 26, 27, 30, 31, 35, 46, 49, 51, 66, 70, 71, 72, 77, 96, 100, 101, 102, 103, 106, 109, 110, 111, 112, 113, 118, 119, 126, 132, 133, 135, 150, 157, 158, 170, 171, 172, 173, 174, 175, 176, 187, 194, 198, 204, 210, 214, 215, 222, 223, 226, 235, 236, 237, 238, 239, 240, 242, 243, 244, 250, 253, 254, 255, 258, 259, 263, 264, 265, 268, 270, 271, 272, 273, 286, 294, 304, 321, 322, 323, 349, 374, 382, 384, 392, 402, 403, 417, 418, 419, 420, 440, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 461, 465, 466, 467, 469, 476, 477, 487, 488, 492, 493, 494, 496, 497, 510, 523, 524, 525, 526, 527, 529, 542, 559, 561, 567, 578, 583, 584, 585, 586, 587], "base_dtyp": 469, "base_lr": 448, "base_width": [150, 151, 152, 153, 154, 155, 156, 168, 169, 170, 187], "baselin": [112, 223], "basic": [33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 71, 96, 117, 159, 171, 172, 173, 174, 175, 176, 188, 189, 190, 215, 217, 235, 236, 237, 239, 240, 253, 254, 261, 286, 287, 288, 289, 290, 291, 292, 296, 297, 321, 322, 323, 337, 340, 342, 343, 344, 345, 346, 347, 348, 353, 354, 357, 358, 374, 379, 380, 381, 385, 417, 418, 419, 430, 506, 548, 581, 582, 583, 584, 585, 586, 587, 588], "basicblock": [159, 163, 166], "batch": [1, 2, 5, 15, 19, 20, 21, 27, 30, 32, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 103, 104, 110, 111, 177, 183, 184, 185, 186, 191, 223, 226, 243, 253, 254, 255, 286, 287, 288, 289, 290, 291, 292, 294, 299, 300, 301, 304, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 321, 322, 323, 327, 328, 329, 331, 332, 333, 334, 335, 339, 341, 342, 343, 344, 373, 374, 376, 377, 378, 382, 395, 398, 400, 401, 402, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 424, 425, 426, 427, 428, 432, 433, 434, 435, 436, 464, 473, 491, 498, 538, 581, 582, 583, 584, 586, 588], "batch_idx": [242, 243], "batch_norm": [303, 317, 407, 408, 409], "batch_norm1": 274, "batch_norm2": 274, "batch_siz": [1, 2, 5, 215, 220, 349], "batch_tensor": 538, "batchnorm": [96, 316, 342, 343, 344], "batchnorm1d": [342, 394, 416], "batchnorm1dmodel": 407, "batchnorm2d": [69, 96, 117, 274, 343, 394, 416], "batchnorm2dmodel": 408, "batchnorm3d": [344, 394, 416], "batchnorm3dmodel": 409, "bay": 221, "bbox_delta": [236, 237], "bbox_loss_coef": 223, "bbox_reg_mean": 239, "bbox_reg_std": 239, "bbox_to_delta": [245, 248], "bce": [219, 258, 261, 401], "bceloss": [394, 401, 406], "bcewithlogitsloss": [394, 406], "becaus": [2, 255, 470, 473, 481], "becom": [28, 255, 268, 316, 411, 458, 466], "been": [370, 558], "befor": [14, 19, 27, 35, 69, 96, 177, 223, 236, 269, 286, 308, 374, 396, 432, 434, 436, 441, 443, 447, 453, 457, 463, 479, 483, 561, 565, 582, 590], "begin": [1, 28, 226, 245, 246, 252, 255, 258, 261, 276, 279, 280, 281, 297, 334, 340, 359, 361, 362, 363, 365, 367, 386, 403, 404, 405, 423, 424, 425, 426, 427, 428, 464, 466, 472, 485, 492, 493, 495, 512, 517, 521, 522, 527, 529, 532, 545, 546, 558, 561, 571, 572, 573], "behav": [3, 386, 403, 411, 541], "behavior": [3, 14, 20, 112, 271, 274, 286, 320, 374, 382, 450, 471, 485, 491, 502, 575, 590, 592], "being": [273, 341, 384, 387, 388, 389, 390, 464, 471, 486, 549, 550, 556, 577], "belong": [0, 3, 443], "below": [30, 36, 37, 38, 39, 40, 41, 42, 43, 101, 102, 103, 110, 111, 113, 114, 115, 116, 240, 491, 500, 503, 551, 573], "benchmark": [9, 10, 11, 12, 20, 118, 119, 134], "benefici": 274, "benefit": [135, 276, 440, 463], "bernoulli": [384, 387, 388, 389, 390, 478], "best": [134, 324, 353, 354, 357, 358, 592], "beta": [219, 220, 315, 407, 408, 409, 410, 411, 412, 413, 414, 415, 460, 461, 462, 463, 464], "beta1": [460, 461, 462, 463, 464], "beta2": [460, 461, 462, 463, 464], "beta_1": [460, 461, 462, 463, 464], "beta_2": [460, 461, 462, 463, 464], "beta_c": [315, 410], "beta_schedul": 219, "beta_t": 220, "better": [26, 61, 63, 65, 69, 112, 133, 145, 146, 193, 201, 217, 238, 261, 277, 353, 354, 357, 358, 370, 385, 412, 413, 414, 440, 453, 454, 461, 463, 465, 582], "between": [48, 51, 55, 59, 67, 92, 93, 94, 95, 98, 108, 112, 117, 126, 132, 133, 135, 141, 171, 172, 173, 174, 175, 176, 210, 213, 220, 223, 230, 247, 249, 268, 287, 288, 289, 290, 291, 292, 294, 304, 310, 342, 343, 344, 345, 346, 347, 349, 366, 376, 377, 378, 379, 380, 381, 382, 384, 387, 388, 389, 390, 395, 400, 401, 402, 403, 404, 405, 448, 453, 454, 457, 465, 466, 467, 485, 487, 488, 491, 494, 497, 499, 506, 543, 584, 585, 587, 588, 594], "beyond": [14, 271, 453], "bia": [35, 59, 61, 63, 65, 96, 136, 137, 143, 144, 145, 147, 148, 149, 192, 193, 287, 288, 289, 290, 291, 292, 304, 306, 314, 316, 318, 319, 342, 343, 344, 345, 346, 347, 373, 376, 377, 378, 379, 380, 381, 395, 398, 407, 408, 409, 411, 412, 413, 414, 415, 432, 434, 436, 460, 461, 462, 463, 464], "bias": [73, 112, 376, 377, 378, 398, 415, 440], "bias1": 272, "bias2": 272, "bidirect": 226, "bifpn": [226, 227, 228, 229, 230, 231, 233, 238], "big": [255, 263, 345, 346, 347, 441, 442, 443], "bij": 15, "bik": 15, "bilinear": [242, 243, 303, 305, 334, 335, 339, 394, 399, 438], "bilinearmodel": 395, "bin": [553, 554, 555], "binari": [219, 282, 307, 308, 340, 368, 384, 387, 388, 389, 390, 400, 401], "binary_cross_entropi": [303, 311], "binary_cross_entropy_with_logit": [303, 311], "bipartit": [223, 238], "bit": 469, "bjk": 15, "black": 20, "blend": 135, "block": [35, 36, 37, 38, 39, 40, 41, 42, 43, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 96, 104, 109, 112, 117, 118, 119, 121, 124, 125, 126, 128, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 209, 268, 290, 294, 296, 297, 342, 343, 344, 349, 376, 377, 378, 379, 380, 381, 382, 385, 470, 473], "block1": 440, "block2": 440, "block_arg": [159, 177], "block_cfg": 83, "block_config": 77, "block_fn": 69, "block_siz": [296, 385], "block_typ": 35, "blue": [584, 591], "bmatrix": [334, 495], "bn": [342, 343, 344], "bn_affin": [342, 343, 344], "bochkovskii": 238, "bookkeep": 473, "bool": [1, 4, 9, 10, 11, 12, 28, 32, 59, 69, 82, 96, 100, 101, 102, 136, 137, 143, 144, 145, 147, 148, 149, 150, 159, 192, 193, 219, 220, 223, 224, 225, 235, 240, 255, 268, 269, 286, 295, 297, 298, 299, 300, 301, 314, 318, 334, 335, 339, 340, 342, 343, 344, 345, 346, 347, 373, 374, 376, 377, 378, 379, 380, 381, 386, 395, 398, 407, 408, 409, 411, 412, 413, 414, 415, 432, 433, 434, 435, 436, 438, 447, 448, 449, 450, 451, 452, 453, 454, 460, 461, 465, 469, 471, 476, 477, 479, 480, 481, 482, 484, 486, 488, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 527, 528, 529, 537, 543, 544, 545, 546, 547, 553, 554, 555, 566, 571, 575, 580, 591], "boolean": [558, 578], "boost": 131, "border": 335, "both": [35, 59, 61, 63, 65, 69, 73, 96, 112, 117, 122, 126, 137, 138, 192, 194, 195, 196, 197, 232, 235, 261, 287, 290, 291, 306, 322, 327, 331, 342, 360, 364, 370, 376, 377, 379, 380, 381, 382, 418, 423, 424, 426, 427, 436, 438, 442, 469, 473, 489, 490, 491, 495, 498, 500, 559, 566, 567, 588], "bottleneck": [69, 70, 71, 77, 112, 124, 125, 128, 159, 160, 161, 162, 164, 165, 167, 168, 169, 170, 348], "bottleneck_cfg": 125, "bottom": [261, 262, 339], "bound": [222, 226, 235, 238, 239, 240, 243, 245, 246, 247, 249, 250, 252, 253, 254, 255, 258, 259, 261, 335, 354, 356, 358, 442, 448, 466, 484, 486, 516, 517], "boundari": 247, "box": [8, 20, 222, 223, 224, 225, 226, 235, 238, 239, 240, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262], "boxes_a": 249, "boxes_b": 249, "branch": [59, 70, 100, 101, 102, 112, 261, 349], "break": [14, 440], "breakdown": 235, "brief": 590, "bright": 590, "bring": [14, 392], "broad": 69, "broadcast": [19, 20, 220, 389, 390, 498, 528, 537, 543, 564, 576], "broadcast_to": 557, "bucket": 516, "budget": [55, 147], "buffer": [20, 457, 463, 465, 467], "build": [20, 45, 69, 70, 83, 111, 112, 125, 126, 159, 160, 161, 162, 163, 164, 165, 166, 167, 170, 187, 188, 189, 190, 203, 238, 239, 255, 264, 268, 271, 274, 440, 590, 594], "built": [5, 20, 160, 164, 165, 230, 255, 274, 440, 469, 473, 504, 505, 592], "burg": 12, "bypass": 112, "c": [9, 10, 12, 15, 17, 35, 112, 159, 171, 172, 173, 174, 175, 176, 188, 189, 190, 220, 221, 237, 240, 241, 242, 243, 252, 253, 254, 255, 256, 257, 258, 261, 294, 296, 299, 300, 301, 309, 313, 314, 315, 316, 318, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 339, 340, 341, 348, 382, 389, 390, 392, 396, 402, 405, 407, 408, 409, 410, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 441, 448, 472, 556, 577, 582, 594], "c2": 241, "c3": 241, "c4": 241, "c5": 241, "c_": [15, 238, 255, 376, 377, 378, 379, 380, 381], "c_backbon": 223, "c_i": 252, "c_in": [287, 288, 289, 290, 291, 292, 342, 343, 344], "c_out": [287, 288, 289, 290, 291, 292], "calcul": [0, 1, 21, 269, 438, 458, 459, 462, 463, 464, 473, 481], "calculu": [22, 29], "call": [1, 20, 223, 243, 255, 268, 291, 380, 441, 446, 471, 473, 474, 479, 487, 488, 491, 492, 493, 494, 496, 497, 594], "callabl": [1, 69, 143, 144, 145, 147, 148, 149, 219, 239, 244, 432, 434, 436, 445, 448, 451, 474, 486, 579], "can": [0, 2, 5, 7, 8, 17, 18, 20, 22, 24, 26, 27, 29, 30, 32, 59, 82, 112, 125, 131, 132, 134, 135, 159, 168, 169, 183, 184, 185, 186, 215, 216, 220, 226, 236, 237, 240, 249, 253, 254, 255, 267, 269, 270, 271, 272, 273, 274, 279, 287, 288, 289, 297, 316, 334, 335, 341, 349, 360, 363, 366, 371, 376, 377, 378, 379, 382, 412, 413, 414, 424, 425, 426, 427, 428, 430, 433, 440, 441, 442, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 471, 472, 473, 480, 484, 485, 486, 491, 501, 502, 503, 504, 505, 507, 509, 510, 528, 531, 537, 538, 543, 545, 546, 548, 556, 559, 561, 563, 564, 566, 570, 576, 577, 579, 580, 583, 585, 586, 587, 590, 594], "candid": [240, 244], "cannot": [23, 24, 26, 27, 30, 31, 32, 477, 549], "canocical_scal": 242, "canon": [242, 258, 594], "canonical_level": 242, "cap": [249, 366], "capabl": [14, 35, 57, 69, 99, 112, 157, 158, 234, 499, 500, 503, 507, 508, 509, 510], "capac": [46, 47, 48, 54, 58, 71, 112, 117, 118, 119, 120, 122, 123, 131, 139, 144, 148, 149, 168, 169, 170, 171, 172, 173, 174, 175, 176, 183, 184, 185, 186, 191, 200, 211, 234, 266], "captur": [20, 35, 59, 61, 63, 65, 73, 112, 117, 138, 139, 140, 187, 192, 194, 195, 196, 197, 198, 199, 202, 263, 294, 376, 377, 378, 395], "cardin": [112, 150, 151, 152, 153, 154, 155, 156, 157, 158, 170, 171, 172, 173, 174, 175, 176, 187], "care": 59, "carefulli": [446, 470], "carion": 238, "cartesian": 559, "case": [5, 28, 113, 125, 127, 226, 276, 279, 280, 281, 290, 291, 297, 340, 359, 361, 362, 363, 365, 367, 386, 403, 404, 405, 423, 424, 425, 426, 427, 428, 440, 452, 459, 464, 466, 472, 492, 493, 498, 512, 517, 521, 522, 527, 529, 532, 545, 546, 547, 558, 561, 571, 572, 573, 590], "cast": 504, "categor": [337, 340, 430], "categori": [11, 118, 119, 160, 161, 162, 163, 164, 165, 166, 167, 223, 224, 225, 235, 236, 239, 240, 256, 257, 259, 260, 262, 430, 469], "caus": [5, 29, 446, 457, 465, 467], "causal": [286, 374], "cautiou": [0, 14], "cautious": 442, "cbr": 96, "cdot": [20, 22, 23, 26, 27, 28, 31, 59, 117, 219, 242, 245, 258, 263, 276, 277, 279, 281, 282, 286, 287, 288, 289, 290, 291, 292, 304, 306, 315, 321, 322, 323, 324, 327, 328, 329, 331, 332, 333, 334, 337, 339, 348, 357, 358, 360, 361, 362, 364, 368, 370, 374, 382, 384, 395, 398, 400, 401, 402, 403, 405, 407, 408, 409, 410, 412, 413, 414, 415, 430, 441, 447, 448, 449, 451, 452, 454, 458, 459, 460, 461, 462, 463, 464, 466, 489, 490, 491, 494, 496, 498, 531], "ce": 223, "ceil": 511, "cell": [252, 253, 254, 255, 258, 259, 261], "center": [223, 246, 252, 255, 258, 334, 335, 341, 371, 465, 581, 590], "centercrop": [589, 590], "certain": [23, 277, 286, 304, 370, 374, 395, 436, 453, 460, 461, 471, 527, 529], "cfg": [126, 129, 130], "chain": [20, 26, 27, 274, 579, 590], "challeng": [11, 112, 138], "cham": 112, "chanc": [584, 585, 587], "chang": [14, 245, 261, 310, 334, 335, 403, 442, 452, 466, 470, 472, 474, 486, 562, 564, 576, 584, 590, 594], "chanlumerico": 20, "channel": [35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 59, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 96, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 125, 127, 129, 130, 136, 137, 142, 143, 144, 145, 146, 147, 148, 149, 150, 157, 158, 159, 170, 171, 172, 173, 174, 175, 176, 181, 183, 184, 185, 186, 191, 192, 193, 204, 215, 220, 223, 226, 235, 237, 239, 240, 241, 252, 254, 260, 261, 287, 288, 289, 290, 291, 292, 294, 299, 300, 301, 314, 315, 316, 318, 321, 322, 323, 327, 328, 329, 331, 332, 333, 334, 335, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 376, 377, 378, 379, 380, 381, 389, 390, 407, 408, 409, 410, 411, 412, 413, 414, 417, 423, 424, 425, 426, 427, 428, 582, 584, 588], "character": [168, 169], "check": [20, 471, 486, 581, 583], "checkpoint": [456, 594], "chen": [59, 112], "chien": [112, 238], "choic": [133, 135, 559], "choleski": 25, "chollet": 112, "choos": [112, 547, 578], "chosen": [252, 384, 385, 446, 521, 522, 578], "christian": 112, "christoph": 12, "chu": 112, "chun": 112, "chunk": 557, "cifar": [9, 10, 237], "cifar10": 13, "cifar100": 13, "cifar100_train": 10, "cifar10_train": 9, "ciou": 261, "cl": [226, 261], "clamp": 442, "clariti": [17, 18, 19], "class": [5, 8, 20, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 110, 111, 114, 115, 116, 120, 121, 122, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 213, 214, 216, 218, 222, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 238, 241, 242, 243, 244, 253, 254, 256, 257, 259, 260, 265, 266, 283, 297, 309, 313, 340, 440, 441, 442, 443, 456, 473, 474, 479, 590, 593, 594], "class_id": [223, 226, 255, 258, 261], "class_loss_coef": 223, "classic": [116, 240], "classif": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594], "classifi": [33, 69, 96, 100, 101, 102, 113, 114, 115, 116, 117, 159, 170, 187, 204, 215, 217, 222, 226, 235, 236, 237, 238, 239, 240, 594], "clean": [220, 473], "cleaner": [1, 491], "cleanli": 117, "cleanup": 470, "clear": [269, 501, 502, 506], "clearli": 255, "clf_in_featur": 113, "clf_layer": 113, "clip": [220, 245, 247, 341, 361, 366, 441, 443, 466, 511], "clip_box": 248, "clip_denois": 220, "clip_grad_norm": [442, 443, 444], "clip_grad_valu": 444, "clip_valu": 442, "clockwis": 341, "close": [26, 29, 70, 367, 400, 442, 465], "closer": 359, "closur": [445, 456], "cloth": 11, "cls_": 258, "cls_1": [255, 258, 261], "cls_c": [255, 258, 261], "cls_label_smooth": [261, 262], "cls_logit": [236, 237], "cnn": [35, 61, 63, 65, 112, 223, 236, 237, 244], "co": [112, 447, 511, 533], "coars": 112, "coatnet": [36, 37, 38, 39, 40, 41, 42, 43], "coatnet_0": 112, "coatnet_1": 112, "coatnet_2": 112, "coatnet_3": 112, "coatnet_4": 112, "coatnet_5": 112, "coatnet_6": 112, "coatnet_7": 112, "coco": [223, 224, 225, 259, 260], "code": [14, 20, 27, 270, 272, 274, 470, 471, 473, 485, 591], "codebas": 594, "coeffici": [31, 82, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 253, 254, 339, 441, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467], "col": 294, "collaps": 14, "collate_fn": 1, "collect": [8, 21, 222, 270, 271, 273, 274, 456], "color": [240, 244, 584, 590, 591], "colorjitt": 590, "column": [23, 24, 26, 30, 31, 32, 224, 225, 294, 382, 503, 556, 559], "com": [11, 12, 20], "combin": [1, 5, 17, 35, 59, 72, 96, 103, 109, 110, 112, 117, 135, 139, 191, 222, 226, 238, 261, 271, 274, 276, 277, 342, 343, 344, 348, 349, 360, 382, 385, 392, 401, 402, 440, 441, 442, 463, 464, 528, 537, 543, 550, 590, 592], "combined_dataset": [0, 1], "common": [194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 256, 257, 259, 262, 294, 341, 456, 469, 590], "commonli": [123, 124, 125, 127, 128, 129, 130, 133, 135, 223, 246, 277, 282, 283, 284, 287, 289, 290, 291, 292, 297, 304, 312, 314, 318, 335, 337, 340, 341, 348, 357, 358, 361, 362, 366, 369, 374, 378, 379, 380, 396, 400, 404, 405, 423, 424, 425, 426, 427, 428, 430, 432, 472, 507, 568, 580, 581, 582, 583, 585, 586, 587, 590], "compact": [49, 50, 52, 57, 108, 120, 133, 143, 144, 257], "compar": [35, 48, 49, 76, 112, 120, 137, 145, 168, 169, 217, 228, 236, 261, 401, 485, 569], "compat": [8, 14, 15, 20, 21, 187, 219, 392, 397, 415, 440, 472, 475, 485, 506, 548, 580, 590, 594], "competit": [50, 56, 57, 96], "complet": [264, 432, 433, 435, 594], "complex": [2, 5, 14, 15, 20, 24, 35, 47, 53, 58, 96, 111, 118, 119, 134, 137, 138, 139, 140, 141, 145, 146, 147, 159, 162, 165, 166, 179, 181, 199, 236, 260, 266, 267, 269, 270, 271, 274, 280, 286, 341, 351, 355, 356, 357, 358, 365, 374, 426, 428, 440, 441, 442, 451, 456, 460, 461, 462, 463, 464, 466, 469, 477, 479, 484, 486, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 517, 544, 547, 558, 580, 590], "complex64": 469, "compon": [29, 96, 100, 101, 102, 103, 109, 110, 111, 120, 121, 223, 235, 238, 240, 244, 264, 268, 271, 442, 456, 486, 590], "compos": [9, 10, 11, 12, 117, 215, 255, 376, 377, 378, 423, 424, 425, 426, 427, 428, 440, 578, 590], "composit": 261, "compound": [83, 226, 227, 228, 229, 230, 231, 232, 233, 234, 238], "compound_coef": 226, "comprehens": [5, 66], "compress": 257, "compris": [168, 169], "compromis": [132, 135], "comput": [14, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 48, 49, 50, 52, 53, 55, 56, 59, 69, 71, 72, 73, 96, 98, 105, 108, 112, 117, 123, 125, 126, 129, 130, 131, 132, 133, 134, 135, 137, 138, 141, 142, 146, 157, 158, 159, 170, 171, 172, 173, 174, 175, 176, 177, 183, 184, 185, 186, 191, 192, 211, 212, 219, 235, 238, 239, 245, 246, 249, 252, 253, 254, 255, 257, 258, 261, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 290, 294, 304, 306, 307, 308, 309, 310, 312, 313, 314, 315, 318, 320, 321, 322, 323, 324, 325, 326, 335, 339, 342, 343, 344, 345, 346, 347, 348, 349, 353, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 376, 377, 378, 380, 382, 384, 385, 387, 388, 389, 390, 395, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 411, 412, 413, 414, 415, 420, 421, 422, 423, 424, 425, 426, 427, 428, 432, 433, 434, 435, 436, 440, 441, 443, 445, 447, 448, 449, 450, 451, 452, 454, 456, 457, 465, 470, 471, 472, 473, 476, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 503, 506, 507, 508, 509, 510, 512, 513, 514, 515, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 548, 559, 561, 563, 570, 580, 590, 591, 592], "computation": [5, 17, 29, 160, 361, 362, 392], "compute_grad": 549, "compute_loss": [456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467], "concat": 373, "concaten": [0, 69, 258, 261, 287, 288, 289, 373, 498, 556, 557, 569, 577], "concept": [29, 69, 112, 124, 222, 498, 592], "concis": [14, 15, 17, 19], "concret": 594, "concurr": 470, "cond": 578, "condit": [22, 23, 26, 578], "conf": [252, 253, 254, 255], "conf_thresh": [255, 258, 261], "confer": [112, 221, 238], "confid": [235, 250, 252, 253, 254, 255, 258, 261], "config": [204, 224, 225], "configur": [20, 34, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 105, 106, 107, 108, 110, 111, 113, 114, 115, 116, 117, 125, 126, 127, 128, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 210, 211, 212, 213, 214, 216, 218, 219, 224, 225, 229, 231, 232, 234, 235, 236, 237, 239, 240, 255, 257, 260, 266, 273, 342, 343, 344, 374, 469], "confirm": 20, "conform": 475, "conjunct": [294, 405], "connect": [33, 44, 70, 72, 77, 78, 79, 80, 81, 82, 83, 96, 103, 109, 110, 111, 112, 113, 114, 115, 116, 117, 159, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 187, 188, 189, 190, 204, 215, 217, 235, 239, 240, 241, 244, 254, 258, 290, 306, 348, 349, 376, 377, 378, 379, 380, 381, 396, 398, 434, 436], "consecut": 204, "consid": [5, 26, 29, 77, 131, 132, 133, 135, 236, 274, 353, 354, 357, 358, 382, 440, 443, 466, 469, 471, 501, 502, 551, 572, 573, 590], "consider": 29, "consist": [2, 8, 11, 15, 18, 33, 59, 114, 115, 116, 159, 240, 267, 321, 322, 323, 349, 373, 411, 417, 418, 419, 432, 434, 436, 483, 485, 561, 581, 588, 590], "consistent_tensor": 485, "constant": [307, 309, 314, 315, 318, 319, 320, 352, 367, 400, 402, 407, 408, 409, 410, 411, 412, 413, 414, 415, 432, 434, 436, 441, 454, 458, 459, 460, 461, 462, 463, 464, 465, 504, 505, 547, 558, 561], "constant_pad": 561, "constrain": [50, 52, 55, 133, 247], "constraint": [1, 17, 35, 123, 125, 132, 146, 349, 392], "construct": [20, 70, 71, 72, 78, 79, 80, 81, 99, 104, 118, 119, 120, 135, 150, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 188, 189, 190, 205, 206, 207, 208, 236, 237, 241, 253, 254, 264, 271, 440, 500, 563, 570, 572, 573], "constructor": [20, 36, 37, 38, 39, 40, 41, 42, 43, 78, 79, 80, 81, 92, 93, 94, 95, 118, 119, 120, 121, 122, 127, 128, 129, 130, 151, 152, 153, 154, 155, 156, 157, 158, 168, 169, 183, 184, 185, 186, 191, 205, 206, 207, 208, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 256, 257, 259, 260, 262], "consumpt": 135, "contain": [1, 9, 10, 11, 12, 23, 24, 29, 30, 31, 32, 109, 113, 159, 170, 171, 172, 173, 174, 175, 176, 177, 187, 204, 220, 226, 235, 242, 243, 246, 249, 250, 252, 255, 258, 261, 268, 270, 271, 272, 273, 274, 283, 286, 294, 304, 306, 307, 308, 309, 313, 335, 337, 339, 340, 400, 401, 402, 405, 445, 475, 479, 487, 488, 489, 490, 492, 493, 494, 495, 497, 499, 502, 506, 512, 513, 514, 515, 518, 519, 520, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 539, 540, 541, 543, 549, 551, 552, 555, 559, 567, 571, 591], "content": [222, 341], "context": [112, 117, 198, 200, 201, 261, 334, 470, 471, 473, 486, 592], "contextmanag": 470, "contextu": [74, 75, 76, 138, 194, 195, 196, 197], "contigu": [296, 385, 396, 562], "continu": [363, 449, 454, 482, 524], "contract": [15, 17], "contrast": [264, 412, 413, 414, 590], "contribut": [226, 258, 296, 339, 384, 387, 388, 389, 390, 423, 426, 427, 428, 457, 463, 541], "control": [14, 19, 35, 44, 137, 138, 170, 220, 223, 226, 244, 260, 349, 359, 403, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 471, 485, 486, 504, 580, 590], "conv": [109, 112, 177, 223, 235, 239, 240, 241, 342, 343, 344, 408, 409], "conv1": [114, 115, 116, 274, 376, 377, 378, 423, 424, 425, 426, 427, 428], "conv1d": [293, 303, 342, 345, 379, 383, 394, 423, 426], "conv1dmodel": 376, "conv2": [114, 115, 116, 274, 376, 377, 378], "conv2d": [235, 239, 240, 271, 274, 293, 303, 343, 346, 380, 383, 392, 394, 408, 424, 427, 440, 591], "conv2dmodel": 377, "conv3d": [293, 303, 344, 347, 383, 394, 409, 425, 428], "conv3dmodel": 378, "conv_bia": [342, 343, 344], "conv_config": [204, 252], "conv_lay": [113, 271], "conv_transpose1d": [293, 303], "conv_transpose2d": [293, 303], "conv_transpose3d": [293, 303], "convblock": 440, "convbnrelu1d": 350, "convbnrelu2d": 350, "convbnrelu3d": 350, "conveni": [8, 34, 60, 61, 62, 63, 64, 65, 66, 67, 68, 97, 218, 401, 547], "convent": [15, 491, 594], "converg": [29, 371, 446, 447, 448, 450, 453, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 582], "convers": [4, 7, 402, 405, 584, 590], "convert": [4, 9, 10, 11, 12, 59, 204, 223, 224, 225, 267, 269, 283, 337, 340, 369, 476, 559, 579, 580, 584, 590], "convnet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594], "convnetwork": 271, "convnext": [45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58], "convnext_bas": 112, "convnext_larg": 112, "convnext_smal": 112, "convnext_tini": 112, "convnext_v2": [50, 51, 52, 53, 54, 55, 56, 57], "convnext_v2_atto": 112, "convnext_v2_bas": 112, "convnext_v2_femto": 112, "convnext_v2_hug": 112, "convnext_v2_larg": 112, "convnext_v2_nano": 112, "convnext_v2_pico": 112, "convnext_v2_tini": 112, "convnext_xlarg": 112, "convolut": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 59, 61, 63, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 82, 84, 85, 86, 87, 88, 89, 90, 91, 96, 101, 102, 104, 109, 113, 114, 115, 116, 117, 123, 125, 129, 130, 131, 132, 133, 134, 135, 150, 157, 158, 159, 170, 171, 172, 173, 174, 175, 176, 177, 183, 184, 185, 186, 187, 191, 204, 215, 217, 218, 235, 238, 239, 240, 254, 255, 271, 287, 288, 289, 290, 291, 292, 294, 342, 343, 344, 345, 346, 347, 348, 349, 376, 377, 378, 379, 380, 381, 382, 424, 425, 427, 428, 538, 561], "convolv": [287, 288, 289, 290, 291, 376, 377, 378, 379, 380, 381], "convtranspose1d": [383, 394], "convtranspose2d": [381, 383, 394], "convtranspose3d": [383, 394], "cooldown": 453, "coord": [252, 255], "coordin": [226, 243, 245, 246, 247, 249, 252, 253, 254, 255, 258, 334, 335, 554, 559, 560], "copi": [14, 548, 574], "core": [0, 1, 2, 5, 59, 71, 96, 268, 440, 445, 469, 486, 590], "corinna": 12, "corner": [334, 335, 339, 438, 581, 583], "correct": [270, 402, 405, 460, 461, 462, 463, 464, 558, 566, 572, 573, 580], "correctli": [29, 268, 270, 271, 272, 273, 274, 402, 405, 485, 548, 549], "correl": [379, 380], "correspond": [0, 1, 2, 9, 10, 11, 12, 24, 126, 127, 129, 130, 168, 169, 188, 189, 190, 194, 195, 196, 197, 203, 226, 227, 228, 242, 250, 253, 254, 259, 261, 270, 272, 274, 276, 277, 279, 280, 281, 282, 283, 284, 287, 288, 289, 294, 304, 306, 337, 339, 340, 361, 365, 369, 395, 398, 401, 407, 408, 409, 412, 413, 414, 424, 425, 430, 457, 465, 467, 469, 477, 489, 490, 492, 493, 496, 516, 523, 524, 525, 526, 533, 535, 547, 548, 549, 556, 560, 561, 563, 565, 570, 574, 577, 594], "cort": 12, "cosh": [511, 534, 540], "cosin": [220, 223, 261, 447, 513, 518, 519, 533], "cosineannealinglr": 455, "cost": [70, 73, 112, 123, 125, 126, 132, 133, 135, 146, 170, 223, 254, 345, 346, 347, 470], "could": 268, "count": [69, 112, 126, 143, 144, 145, 147, 148, 149, 221, 238, 260, 263, 447, 452, 470, 521, 522, 547, 550, 553, 554], "counterclockwis": [341, 586], "cover": [21, 287, 288, 289, 479], "coverag": [117, 321, 322, 323], "cpu": [4, 15, 20, 267, 269, 469, 477, 479, 480, 481, 482, 484, 486, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 544, 547, 560, 594], "craft": [20, 223, 238], "creat": [2, 5, 7, 20, 33, 34, 35, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 110, 111, 114, 115, 116, 125, 127, 128, 129, 130, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 191, 204, 205, 206, 207, 208, 216, 217, 218, 222, 237, 253, 254, 265, 266, 267, 268, 271, 274, 334, 349, 366, 373, 432, 433, 434, 435, 436, 440, 472, 473, 474, 475, 485, 499, 503, 504, 505, 506, 507, 508, 509, 510, 548, 559, 569, 579, 590], "creation": [92, 93, 94, 95, 271, 274, 470, 590], "criterion": [400, 401, 402, 403, 404, 405], "critic": [29, 133, 148, 456, 485], "crop": [239, 240, 242, 243, 581, 583, 590], "cross": [59, 70, 71, 72, 112, 192, 219, 307, 308, 309, 379, 380, 400, 401, 402, 432, 433, 434], "cross_entropi": [303, 311, 441, 442, 443], "crossattent": 59, "crossentropyloss": [237, 394, 406], "crossvit": [60, 61, 62, 63, 64, 65, 66, 67, 68], "crossvit_15": 112, "crossvit_15_dagg": 112, "crossvit_18": 112, "crossvit_18_dagg": 112, "crossvit_9": 112, "crossvit_9_dagg": 112, "crossvit_bas": 112, "crossvit_smal": 112, "crossvit_tini": 112, "crucial": [14, 446], "csp": [69, 70, 71, 72, 112, 261, 262], "csp_darknet_53": 112, "csp_resnet_50": 112, "csp_resnext_50_32x4d": 112, "cspdarkblock": 70, "cspdarknet": [69, 262], "cspnet": [70, 71, 72], "cspresnet": 69, "cspresnext": 69, "cube": 511, "cumprod": 511, "cumsum": 511, "cumul": [277, 360, 521, 522], "cup": 249, "current": [268, 441, 447, 448, 449, 450, 451, 452, 453, 454, 457, 460, 466, 471, 547], "current_beta": 219, "custom": [3, 8, 20, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 84, 85, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 105, 106, 107, 108, 110, 111, 113, 117, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 178, 179, 180, 181, 182, 183, 184, 185, 186, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 210, 211, 212, 213, 214, 216, 217, 218, 220, 224, 225, 235, 237, 239, 240, 256, 257, 258, 259, 260, 267, 270, 271, 272, 273, 274, 340, 341, 342, 343, 344, 359, 363, 382, 432, 440, 448, 451, 470, 485, 503, 506, 567], "custom_config": 204, "custom_darknet": 255, "custom_decod": 432, "custom_encod": 432, "custom_lenet": 113, "customiz": [143, 590], "custommodul": 267, "customnetwork": 270, "customparametermodel": [272, 273], "cut": 134, "cv": 222, "cvf": 112, "cvpr": [112, 238], "cvt": [74, 75, 76], "cvt_13": 112, "cvt_21": 112, "cvt_w24": 112, "cvtspec": 73, "cx": [223, 224, 225], "cy": [223, 224, 225], "cycl": 448, "cycle_momentum": 448, "cyclic": [447, 448, 565], "cycliclr": 455, "d": [4, 35, 112, 219, 221, 286, 289, 292, 301, 323, 326, 329, 333, 344, 374, 381, 382, 396, 409, 414, 415, 419, 422, 425, 428, 441, 443, 472, 500, 531, 551, 555, 560, 586], "d0": [226, 227, 228, 238], "d1": [228, 238], "d2": [229, 238], "d3": [230, 238], "d4": [231, 238], "d5": [232, 238], "d6": [233, 238], "d7": [226, 234, 238], "d_": [4, 263, 289, 292, 323, 326, 329, 333, 373, 378, 381, 396, 419, 422, 425, 428, 432, 433, 434, 435, 436], "d_0": 396, "d_1": [4, 17, 18, 19, 392, 396, 415], "d_2": [17, 18, 19, 392, 415], "d_h": [373, 382, 434, 436], "d_i": 396, "d_k": [35, 59, 117], "d_model": [209, 223, 264, 265, 266, 432, 433, 434, 435, 436], "d_n": [17, 18, 19, 392, 396, 415], "d_out": [289, 292, 329, 333], "d_w": 382, "dag": 20, "dai": 112, "dampen": [457, 465, 467], "darknet": [69, 70, 112, 256, 257, 258, 259, 260, 261], "darknet_19": 255, "darknet_model": 255, "darknet_out_channels_arr": [258, 260], "darknetbottleneck": 69, "data": [8, 9, 10, 11, 12, 14, 20, 27, 112, 199, 219, 220, 221, 222, 263, 267, 269, 273, 284, 287, 289, 292, 294, 300, 301, 306, 337, 340, 341, 342, 343, 344, 349, 365, 371, 376, 377, 378, 398, 401, 414, 423, 425, 428, 435, 445, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 472, 476, 479, 485, 486, 487, 488, 494, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 531, 538, 544, 547, 548, 553, 561, 562, 563, 564, 566, 567, 568, 570, 579, 580, 583, 584, 585, 586, 587, 590, 592], "data_dtyp": 469, "databas": 12, "dataload": [2, 5, 7], "dataset": [3, 4, 5, 7, 9, 10, 11, 12, 47, 92, 93, 94, 95, 114, 115, 116, 117, 118, 119, 122, 123, 126, 131, 138, 149, 159, 160, 161, 162, 163, 164, 165, 166, 167, 222, 223, 236, 237, 252, 255, 341, 459, 579, 581, 590, 593, 594], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 495, "deal": 401, "debug": [20, 274, 471, 483, 590, 592], "dec": 223, "decai": [385, 446, 447, 449, 451, 452, 453, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467], "decid": 441, "decim": 531, "declar": [17, 18, 19, 392], "decod": [219, 221, 223, 258, 264, 290, 291, 292, 379, 380, 381, 432, 433, 434], "decoder3d": 381, "decoder_lay": [433, 434], "decoderlay": 433, "decompos": [22, 30, 32], "decomposit": [21, 22, 26, 29, 30, 32], "deconv": 381, "deconv1": [379, 380], "deconv1d": 379, "deconv2d": 380, "deconv3d": 381, "deconvolut": [290, 291, 292, 379, 380], "decor": [171, 172, 173, 174, 175, 176, 473, 474], "decoupl": [112, 255, 458, 459, 461, 462, 463, 464], "decreas": [241, 448, 453, 460, 461, 466], "deep": [1, 5, 8, 14, 18, 20, 69, 96, 106, 107, 109, 112, 138, 159, 160, 161, 162, 164, 165, 171, 172, 173, 174, 175, 176, 178, 179, 182, 219, 222, 223, 263, 314, 360, 364, 367, 392, 440, 441, 446, 485, 506, 567, 572, 573, 579, 580, 590], "deepen": 147, "deeper": [75, 101, 103, 111, 112, 118, 119, 137, 140, 145, 148, 159, 166, 199, 200, 219, 226, 228, 229, 231, 233, 236, 254, 258, 367], "deepest": 219, "def": [0, 1, 2, 3, 5, 7, 14, 15, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 214, 216, 217, 218, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 253, 254, 256, 257, 259, 260, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 304, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 339, 340, 341, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 376, 377, 378, 379, 380, 381, 384, 385, 386, 387, 388, 392, 395, 396, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 412, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 432, 433, 434, 435, 436, 440, 441, 442, 443, 445, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 591], "default": [1, 9, 10, 11, 12, 18, 20, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 250, 252, 253, 254, 256, 257, 259, 260, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 279, 283, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 299, 300, 301, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 327, 328, 329, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 353, 354, 355, 356, 357, 358, 359, 363, 369, 373, 374, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 395, 396, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 438, 441, 443, 445, 447, 448, 449, 450, 451, 452, 453, 454, 456, 463, 471, 477, 479, 480, 481, 482, 484, 486, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 517, 521, 522, 527, 528, 529, 531, 537, 542, 543, 544, 545, 546, 547, 549, 550, 551, 553, 554, 556, 559, 561, 563, 565, 566, 567, 569, 571, 572, 573, 574, 575, 577, 580, 584, 585, 587, 591, 594], "defer": 20, "defin": [1, 5, 8, 14, 18, 20, 35, 44, 59, 69, 73, 77, 83, 100, 101, 102, 103, 109, 110, 111, 113, 125, 135, 150, 159, 177, 188, 189, 190, 204, 219, 226, 239, 240, 252, 255, 270, 271, 272, 273, 274, 297, 360, 362, 364, 366, 370, 400, 401, 402, 403, 404, 405, 423, 438, 440, 441, 443, 446, 448, 451, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 481, 482, 496, 502, 517, 542, 579, 590], "definit": [20, 22, 342, 343, 344, 590], "degre": [341, 586, 590], "delai": 457, "deleg": 3, "deliv": [20, 133, 134, 149], "delta": [17, 245, 246, 283, 310, 369, 392, 403, 458], "delta_": [17, 283, 369, 392], "demand": [122, 134, 147, 148], "demonstr": [21, 183, 184, 185, 186, 191, 222, 364, 440], "demystifi": 20, "denois": 221, "denomin": [314, 315, 316, 318, 319, 342, 343, 344, 407, 408, 409, 410, 412, 413, 414, 415, 432, 434, 436, 441, 458, 459, 460, 461, 462, 463, 464, 465, 488], "denot": [4, 27, 157, 158, 368, 373, 376, 377, 378, 384, 387, 388, 389, 390, 542], "dens": [77, 78, 79, 80, 81, 112, 192, 194, 195, 196, 197, 235, 239, 297, 337, 430, 459], "densenet": [69, 78, 79, 80, 81, 348], "densenet_121": 112, "densenet_121_weight": 593, "densenet_169": 112, "densenet_169_weight": 593, "densenet_201": 112, "densenet_201_weight": 593, "densenet_264": 112, "densiti": [277, 360, 553, 554, 555], "depend": [15, 20, 27, 28, 35, 112, 117, 125, 138, 139, 192, 194, 195, 196, 197, 198, 199, 226, 263, 273, 307, 308, 309, 310, 312, 313, 339, 376, 489, 498, 500, 527, 529, 563, 570, 571, 583, 584, 588, 591], "deploy": [99, 135, 143, 146], "depth": [35, 44, 45, 46, 47, 48, 49, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 76, 82, 83, 96, 97, 98, 99, 104, 112, 117, 118, 119, 120, 121, 122, 131, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 209, 219, 226, 229, 254, 271, 289, 292, 297, 301, 323, 326, 329, 333, 378, 386, 409, 414, 419, 425, 428], "depth_coef": 82, "depthseparableconv1d": 350, "depthseparableconv2d": 350, "depthseparableconv3d": 350, "depthwis": [35, 44, 73, 74, 75, 76, 96, 104, 112, 123, 215, 287, 288, 289, 290, 291, 345, 346, 347], "depthwise_separ": [345, 346, 347], "der": 112, "deriv": [3, 20, 29, 30, 96, 283, 321, 322, 323, 360, 364, 369, 371, 376, 377, 378, 395, 398, 474], "descend": [32, 566, 571], "descent": [457, 467], "describ": [14, 15, 23, 24, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 594], "descript": [222, 590], "deseri": [267, 475], "design": [5, 8, 18, 21, 33, 34, 44, 45, 47, 49, 50, 51, 52, 53, 54, 55, 57, 59, 70, 71, 74, 75, 76, 92, 93, 94, 95, 96, 97, 99, 101, 102, 103, 105, 108, 112, 114, 115, 116, 117, 118, 119, 125, 126, 131, 132, 133, 134, 135, 136, 138, 141, 148, 160, 161, 162, 163, 164, 165, 166, 167, 178, 181, 192, 199, 200, 211, 215, 218, 219, 220, 222, 255, 256, 257, 260, 263, 269, 271, 272, 273, 274, 276, 281, 367, 384, 440, 590, 592], "desir": [14, 19, 216, 242, 267, 321, 322, 323, 324, 325, 326, 340, 385, 417, 418, 419, 420, 438, 442, 446, 504, 505, 542, 544], "despit": 320, "destin": 268, "det": [21, 25], "det_a": 23, "detail": [61, 63, 65, 73, 138, 199, 235, 456, 485, 491], "detect": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594], "detect_head": 255, "detectiondict": [223, 226, 255, 258, 261], "detector": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594], "determin": [0, 3, 21, 22, 23, 59, 113, 117, 168, 169, 259, 262, 321, 322, 323, 324, 353, 354, 357, 358, 376, 377, 378, 417, 418, 419, 424, 425, 427, 428, 448, 465, 471, 477, 480, 481, 482, 484, 498, 501, 502, 567, 575, 581, 583], "determinist": 341, "detr": [224, 225], "detr_r101": 238, "detr_r50": [223, 238], "develop": [14, 20, 126, 440, 485, 590], "deviat": [353, 355, 357, 579, 582, 590], "devic": [4, 15, 96, 97, 98, 99, 112, 124, 125, 131, 132, 254, 267, 269, 441, 443, 469, 477, 479, 480, 481, 482, 484, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 516, 524, 531, 544, 560], "diag": [29, 511, 551], "diagon": [29, 30, 32, 500, 503, 541, 557, 572, 573], "diagonaliz": 24, "diagram": 592, "dict": [14, 17, 18, 19, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 110, 111, 113, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 168, 169, 171, 172, 173, 174, 175, 176, 177, 183, 184, 185, 186, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 210, 211, 212, 213, 214, 216, 218, 223, 226, 236, 237, 253, 254, 268, 270, 272, 392, 397, 445, 450, 475, 476, 594], "dict_kei": 475, "dictionari": [113, 126, 133, 255, 258, 268, 269, 270, 272, 274, 445, 450, 594], "differ": [0, 14, 18, 27, 59, 74, 75, 76, 96, 100, 104, 112, 113, 125, 126, 132, 133, 136, 138, 139, 140, 141, 142, 183, 184, 185, 186, 191, 193, 202, 242, 258, 261, 271, 274, 283, 304, 339, 349, 369, 395, 404, 446, 453, 456, 469, 472, 483, 485, 497, 510, 543, 568, 590, 594], "differenti": [22, 31, 249, 250, 334, 335, 337, 360, 396, 440, 477, 479, 480, 481, 482, 484, 486, 499, 501, 502, 507, 509, 516, 524, 531, 560, 575, 578], "difficult": 140, "diffus": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594], "digit": [11, 12, 112, 116], "dilat": [287, 288, 289, 290, 291, 292, 342, 343, 344, 345, 346, 347, 376, 377, 378, 379, 380, 381, 382], "dilation_height": 294, "dilation_width": 294, "dim": [44, 45, 59, 104, 220, 286, 320, 374, 402, 405, 565], "dim_feedforward": [264, 432, 434, 436], "dimens": [4, 14, 17, 18, 19, 23, 24, 26, 27, 30, 31, 32, 33, 44, 46, 47, 48, 49, 58, 59, 69, 74, 75, 76, 96, 112, 117, 121, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 159, 170, 187, 192, 193, 194, 195, 204, 209, 217, 224, 225, 237, 240, 241, 250, 255, 259, 264, 269, 283, 286, 291, 292, 304, 306, 314, 315, 316, 318, 319, 320, 322, 323, 325, 326, 339, 340, 348, 349, 369, 373, 374, 376, 377, 378, 379, 382, 385, 392, 396, 407, 408, 409, 412, 413, 414, 415, 418, 419, 421, 422, 424, 425, 426, 427, 428, 432, 434, 435, 436, 438, 472, 480, 484, 486, 490, 498, 501, 521, 522, 527, 528, 529, 537, 538, 541, 542, 543, 545, 546, 548, 549, 550, 555, 556, 560, 561, 563, 565, 568, 569, 570, 574, 576, 577, 581, 583, 588], "dimension": [14, 15, 27, 29, 30, 32, 104, 240, 287, 288, 289, 290, 291, 292, 327, 328, 329, 331, 332, 333, 349, 373, 376, 377, 378, 379, 382, 388, 389, 390, 407, 408, 409, 412, 413, 414, 423, 424, 425, 426, 427, 428, 432, 434, 436, 472, 479, 490, 491, 495, 498, 500, 523, 528, 537, 538, 541, 543, 551, 552, 555, 562, 563, 568, 570, 572, 573], "diminish": [446, 459], "diou_thresh": 261, "direct": [20, 24, 400, 402, 403, 404, 405, 442, 457, 465, 466, 467, 565, 594], "directli": [92, 93, 94, 95, 112, 238, 239, 256, 257, 259, 270, 271, 272, 273, 308, 339, 392, 438, 441, 442, 458, 459, 461, 462, 463, 464, 483, 485, 544, 574, 590], "directori": [5, 8, 9, 10, 11, 12], "disabl": [297, 385, 386, 471, 473], "discard": [237, 240, 476], "discontinu": 532, "discover": 594, "discrep": [400, 402, 405], "discret": [477, 481, 485, 524], "disk": [5, 475, 476], "displai": [34, 60, 61, 62, 63, 64, 65, 66, 67, 68, 97, 98, 99, 218], "displaystyl": 521, "disrupt": 516, "distinct": [117, 126, 264], "distribut": [199, 219, 221, 223, 277, 283, 296, 339, 353, 354, 355, 356, 357, 358, 360, 369, 376, 377, 378, 384, 385, 387, 388, 389, 390, 395, 398, 402, 405, 423, 424, 425, 477, 480, 481, 482, 484, 485, 528, 537, 541, 543, 566, 569, 582, 584, 585, 586, 587, 592], "div": 511, "diverg": 219, "divers": [51, 69, 112, 117, 341, 585, 587, 590], "diversifi": 590, "divid": [1, 7, 29, 69, 112, 117, 192, 193, 209, 210, 211, 212, 213, 214, 252, 253, 254, 271, 274, 283, 287, 288, 289, 291, 316, 369, 400, 401, 402, 403, 404, 405, 411, 488, 549, 567, 582], "divis": [29, 252, 287, 288, 289, 292, 316, 320, 373, 384, 387, 388, 389, 390, 432, 434, 436, 441, 458, 459, 460, 461, 462, 463, 464, 465, 488, 567], "dl": 20, "do": [29, 31, 267, 270, 271, 272, 273, 295, 298, 299, 300, 440, 446, 464, 471, 473, 510, 541, 561], "doc": 222, "document": [8, 112, 456, 485], "doe": [27, 28, 29, 30, 32, 223, 236, 237, 255, 264, 267, 270, 271, 272, 273, 274, 320, 358, 442, 453, 460, 461, 466, 470, 471, 473, 477, 480, 481, 482, 483, 484, 499, 500, 501, 502, 503, 507, 508, 509, 510, 547, 548, 558, 560, 564, 565, 575], "doi": 112, "domain": [8, 146], "domin": 96, "done": [226, 255, 594], "dosovitskii": 112, "dot": [4, 15, 17, 18, 19, 24, 27, 136, 137, 261, 270, 271, 272, 273, 274, 286, 340, 373, 374, 392, 396, 415, 426, 427, 428, 490, 495, 498, 511, 550, 551, 556, 569, 577], "down": [5, 223, 226, 241, 440, 524, 588, 591], "download": [8, 9, 10, 11, 12, 594], "downsampl": [69, 96, 150], "draw": 222, "draw_tensor_graph": 592, "drawback": 276, "drawn": [220, 480, 481, 482, 484, 485, 586, 591], "drop": [44, 45, 96, 104, 117, 223, 224, 225, 296, 297, 384, 385, 386, 387, 388, 389, 390], "drop_block": [302, 303], "drop_path": [44, 45, 117, 302, 303, 386], "drop_path_r": [59, 83, 96, 104, 136, 137, 192, 193], "drop_prob": 386, "drop_rat": [59, 96, 104, 136, 137, 192, 193], "dropblock": [261, 262, 296, 391, 394], "dropout": [33, 59, 69, 82, 83, 92, 93, 94, 95, 96, 102, 104, 112, 117, 120, 121, 136, 137, 192, 193, 204, 209, 217, 235, 239, 264, 277, 286, 295, 299, 300, 301, 373, 374, 384, 385, 388, 389, 390, 432, 434, 436], "dropout1d": [302, 303, 391, 394], "dropout1dmodel": 388, "dropout2d": [302, 303, 391, 394], "dropout3d": [302, 303, 391, 394], "dropout_p": [286, 374], "dropout_prob": 102, "dropout_r": 209, "dropoutmodel": 387, "droppath": [391, 394], "dtype": [223, 250, 267, 269, 337, 340, 430, 469, 479, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 544, 560, 575, 580], "due": [27, 29, 77, 122, 134, 287, 288, 290, 291, 365, 524, 586], "dummi": [71, 224, 225, 236, 239, 240], "duplic": [14, 19, 69, 70, 71, 250, 270, 272], "dure": [5, 20, 23, 24, 26, 29, 30, 32, 35, 83, 100, 101, 102, 112, 137, 159, 223, 226, 236, 237, 240, 244, 245, 255, 267, 268, 269, 270, 271, 272, 273, 274, 283, 295, 296, 297, 298, 299, 300, 301, 314, 318, 341, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 376, 377, 378, 384, 385, 386, 387, 388, 389, 390, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 423, 424, 425, 426, 427, 428, 430, 438, 440, 441, 446, 450, 453, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 470, 471, 473, 479, 486, 487, 516, 524, 527, 528, 529, 537, 543, 558, 565, 580, 583, 586, 590, 591, 594], "dy": [279, 363], "dynam": [0, 2, 5, 20, 35, 112, 187, 191, 242, 268, 271, 272, 273, 274, 321, 322, 323, 324, 349, 385, 415, 417, 418, 419, 420, 422, 446, 450, 451, 453, 459, 464, 469, 471], "dynamicnetwork": 271, "e": [0, 14, 15, 20, 23, 24, 26, 27, 30, 32, 59, 69, 73, 82, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 103, 110, 111, 113, 114, 115, 116, 122, 150, 192, 193, 204, 220, 223, 224, 225, 236, 237, 240, 241, 244, 253, 254, 255, 267, 283, 340, 349, 364, 368, 369, 370, 373, 380, 384, 402, 441, 443, 445, 458, 465, 466, 469, 486, 503, 504, 519, 521, 522, 523, 525, 534, 540, 541, 550, 584, 594], "each": [1, 2, 4, 5, 7, 8, 20, 24, 27, 29, 30, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 59, 69, 70, 71, 72, 74, 75, 76, 77, 83, 96, 104, 112, 113, 117, 123, 125, 126, 127, 129, 130, 136, 137, 138, 139, 140, 141, 142, 145, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 209, 217, 219, 220, 222, 223, 226, 227, 228, 235, 238, 239, 240, 241, 242, 243, 247, 249, 250, 252, 255, 258, 259, 260, 261, 262, 264, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 287, 288, 289, 290, 291, 294, 304, 306, 314, 316, 318, 321, 322, 323, 324, 325, 326, 334, 335, 337, 340, 348, 349, 361, 365, 369, 373, 376, 377, 378, 382, 384, 387, 388, 389, 390, 395, 398, 400, 401, 402, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 435, 440, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 454, 458, 459, 460, 461, 462, 463, 464, 465, 466, 470, 477, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 506, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 528, 530, 531, 532, 533, 534, 535, 536, 537, 539, 540, 541, 543, 547, 549, 550, 555, 556, 559, 560, 561, 563, 565, 566, 567, 569, 570, 574, 577, 579, 580, 581, 582, 583, 584, 586, 588, 590, 594], "earli": [35, 96, 112, 261, 464], "earlier": 126, "eas": 8, "easi": [2, 5, 8, 14, 171, 172, 173, 174, 175, 176, 226, 269, 270, 272], "easier": [5, 270, 271, 274], "easili": [8, 126, 226, 269, 273, 590], "eccv": [112, 238], "economi": 32, "edg": [20, 96, 97, 99, 112, 125, 134, 143, 553, 554, 555, 561], "edu": [9, 10], "educ": [222, 592], "effect": [18, 59, 61, 63, 65, 73, 112, 121, 198, 202, 263, 270, 271, 272, 273, 274, 283, 287, 288, 289, 294, 359, 360, 365, 368, 369, 371, 396, 407, 408, 409, 411, 412, 413, 414, 415, 438, 441, 446, 447, 448, 453, 471, 472, 556, 577], "effici": [1, 2, 5, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 26, 31, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 48, 49, 50, 52, 55, 56, 57, 59, 64, 69, 71, 72, 73, 74, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 104, 105, 107, 108, 110, 111, 112, 117, 120, 124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 170, 171, 172, 173, 174, 175, 176, 183, 184, 185, 186, 191, 192, 194, 195, 196, 197, 199, 210, 213, 215, 226, 227, 230, 238, 239, 255, 260, 262, 294, 345, 346, 347, 361, 362, 364, 366, 392, 402, 440, 446, 447], "efficientdet": [227, 228, 229, 230, 231, 232, 233, 234], "efficientdet_d0": 238, "efficientdet_d1": 238, "efficientdet_d2": 238, "efficientdet_d3": 238, "efficientdet_d4": 238, "efficientdet_d5": 238, "efficientdet_d6": 238, "efficientdet_d7": 238, "efficientform": [97, 98, 99], "efficientformer_l1": 112, "efficientformer_l3": 112, "efficientformer_l7": 112, "efficientnet": [83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 226, 227, 228, 229, 230, 231, 232, 233, 234, 238], "efficientnet_b0": [112, 226], "efficientnet_b1": 112, "efficientnet_b2": 112, "efficientnet_b3": 112, "efficientnet_b4": 112, "efficientnet_b5": 112, "efficientnet_b6": 112, "efficientnet_b7": 112, "efficientnet_v2": [92, 93, 94, 95], "efficientnet_v2_": 112, "efficientnet_v2_l": 112, "efficientnet_v2_m": 112, "efficientnet_v2_xl": 112, "efficientnetv2": 112, "eig": 25, "eigenvalu": [24, 30], "eigenvector": 24, "eigval": 24, "eigvec": 24, "einop": 392, "einstein": [14, 15, 17, 18, 19, 392], "einsum": 16, "either": [20, 219, 255, 306, 438, 473, 477, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 544, 559, 578], "element": [0, 3, 14, 17, 19, 29, 30, 102, 112, 223, 249, 255, 258, 269, 273, 276, 277, 279, 280, 281, 282, 283, 284, 287, 288, 289, 290, 291, 292, 294, 295, 297, 298, 299, 300, 301, 337, 342, 343, 344, 345, 346, 347, 348, 361, 362, 364, 365, 369, 370, 376, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 392, 400, 401, 402, 403, 404, 405, 411, 415, 422, 423, 424, 425, 426, 427, 428, 442, 472, 477, 479, 486, 487, 488, 491, 492, 493, 494, 495, 496, 497, 499, 503, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 539, 540, 541, 543, 547, 551, 552, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 570, 571, 572, 573, 575, 578], "elementwise_affin": 415, "elimin": [17, 19, 235, 401], "els": [258, 261], "elsewher": [426, 427, 428, 503], "elu": [278, 303, 372, 394], "elumodel": 359, "embed": [59, 61, 63, 65, 74, 75, 76, 96, 117, 121, 123, 124, 125, 126, 128, 129, 130, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 192, 193, 194, 195, 209, 223, 286, 303, 338, 373, 374, 394, 431, 432, 434, 435, 436, 574], "embed_dim": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 76, 96, 97, 98, 99, 117, 118, 119, 120, 121, 122, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 192, 193, 194, 195, 373, 432, 433, 434, 435, 436], "embedding_dim": [209, 337, 430], "embedding_lay": 430, "embedding_matrix": 337, "emphas": [126, 133], "emploi": [35, 59, 61, 63, 65, 83, 96, 134], "empti": [268, 274, 511, 549], "empty_lik": 511, "enabl": [0, 1, 2, 5, 14, 15, 17, 18, 19, 27, 32, 69, 74, 75, 76, 82, 96, 110, 112, 117, 120, 136, 137, 142, 146, 150, 187, 188, 189, 190, 192, 194, 195, 203, 221, 222, 223, 238, 253, 254, 263, 268, 269, 270, 271, 272, 273, 286, 297, 365, 373, 374, 376, 377, 378, 380, 381, 395, 398, 432, 434, 436, 440, 456, 469, 470, 471, 477, 480, 481, 482, 484, 486, 504, 579], "enc": 223, "encapsul": [20, 374, 422, 440, 469, 486], "enclos": [470, 473], "encod": [35, 59, 112, 209, 219, 221, 223, 255, 258, 261, 264, 402, 405, 432, 433, 434, 435, 436, 469], "encoder_lay": [435, 436], "encoderlay": 435, "encompass": [82, 219], "encourag": [296, 385, 387, 388, 389, 390, 400, 402, 405, 460], "end": [28, 99, 149, 223, 226, 238, 245, 246, 252, 255, 258, 261, 276, 279, 280, 281, 297, 334, 340, 359, 361, 362, 363, 365, 367, 386, 396, 403, 404, 405, 423, 424, 425, 426, 427, 428, 464, 466, 492, 493, 495, 499, 506, 512, 517, 521, 522, 527, 529, 532, 545, 546, 547, 550, 558, 561, 571, 572, 573, 590], "end_axi": [396, 552], "enforc": [17, 268, 270, 272, 392, 433, 434, 435, 436], "engin": [20, 29, 364, 486], "enhanc": [35, 45, 46, 61, 63, 65, 69, 71, 73, 74, 75, 76, 96, 102, 103, 104, 110, 111, 112, 115, 118, 119, 124, 134, 135, 141, 144, 157, 158, 168, 169, 183, 184, 185, 186, 191, 193, 202, 217, 218, 232, 235, 241, 261, 262, 270, 272, 349, 366, 450, 590], "enough": [20, 99], "ensur": [5, 9, 10, 11, 12, 14, 15, 17, 18, 19, 29, 30, 31, 83, 92, 93, 94, 95, 117, 139, 201, 237, 239, 245, 267, 268, 269, 270, 271, 272, 273, 274, 283, 286, 292, 320, 321, 322, 323, 337, 342, 343, 344, 363, 369, 374, 384, 385, 386, 387, 388, 389, 390, 392, 400, 402, 403, 404, 405, 407, 408, 409, 412, 413, 414, 415, 417, 418, 419, 424, 425, 426, 427, 428, 430, 440, 441, 442, 443, 445, 446, 457, 458, 460, 461, 463, 464, 465, 466, 467, 471, 472, 475, 477, 480, 481, 482, 483, 484, 485, 496, 506, 516, 528, 537, 543, 547, 548, 549, 558, 561, 565, 566, 571, 572, 573, 580, 581, 582, 583, 584, 588, 590], "entir": [5, 20, 236, 238, 239, 297, 299, 300, 301, 386, 389, 390, 442, 485], "entri": [83, 113, 129, 130, 442, 551, 558, 565, 568], "entropi": [219, 307, 308, 309, 400, 401, 402], "enum": [593, 594], "environ": [20, 50, 52, 129, 130, 133, 260, 475, 476, 486, 592], "eos_coef": 223, "ep": [24, 143, 144, 145, 147, 148, 149, 296, 307, 309, 314, 315, 316, 318, 319, 320, 342, 343, 344, 385, 400, 401, 402, 407, 408, 409, 410, 411, 412, 413, 414, 415, 441, 453, 458, 459, 460, 461, 462, 463, 464, 465], "epoch": [1, 5, 20, 446, 447, 448, 449, 450, 451, 452, 453, 454], "epsilon": [35, 219, 220, 242, 246, 315, 316, 320, 400, 402, 407, 408, 409, 410, 411, 412, 413, 414, 415, 458, 459, 460, 461, 462, 463, 464, 465], "epsilon_": 220, "equal": [4, 27, 219, 339, 340, 423, 424, 425, 441, 506, 516, 524, 547, 549, 567, 581, 583], "equat": [24, 29, 31], "equival": [15, 491, 541, 562, 574], "error": [0, 5, 14, 15, 17, 19, 20, 24, 26, 83, 219, 268, 271, 272, 273, 274, 277, 310, 312, 340, 360, 386, 392, 400, 402, 403, 404, 440, 445, 475, 506, 548], "escap": 448, "especi": [5, 20, 122, 219, 270, 272, 273, 292, 368, 381, 441, 472, 483, 579, 580, 584, 590, 592], "essenti": [1, 5, 21, 27, 29, 109, 288, 294, 440, 483, 485, 527, 579, 580, 584, 590], "estim": [220, 404, 460, 461, 462, 463, 464, 465, 470], "et": [59, 101, 112, 117, 220, 226, 238, 240, 252, 253, 263, 432], "eta": 466, "eta_": [447, 448, 453, 466], "eta_0": [447, 449, 451, 452, 454], "eta_min": 447, "eta_t": [447, 448, 449, 451, 452, 453, 454], "etc": [14, 69, 77, 83, 126, 150, 224, 225, 236, 237, 400, 438, 580], "euclidean": [28, 320], "european": 112, "eval": [20, 223, 224, 225, 386, 486, 594], "evalu": [223, 268, 314, 318, 384, 385, 386, 387, 388, 389, 390, 407, 408, 409, 412, 413, 414, 473, 486, 531, 545, 546, 590], "evaluate_model": 453, "even": [71, 458, 470, 473, 499, 500, 503, 507, 508, 509, 510], "evenli": [316, 321, 322, 323, 411, 417, 418, 419, 421, 499, 506, 549, 567], "everi": [1, 20, 226, 442, 449, 454, 470, 590, 594], "everywher": 532, "exact": [268, 271, 542, 584, 586, 594], "exactli": [274, 334], "exampl": [8, 20, 226, 446, 491], "exc_typ": 473, "exc_valu": 473, "exce": [96, 441, 442], "excel": [103, 133, 138, 139], "except": [0, 15, 149, 470, 473, 532, 550, 556, 577], "exchang": 59, "excit": [82, 112, 125, 129, 130, 177, 180, 183, 184, 185, 186, 348], "exclud": [235, 239, 240, 255, 572, 573], "exclus": [481, 484, 499], "exdb": 12, "execut": [20, 271, 470, 473, 486], "exist": [19, 31, 252, 270, 272, 274, 474, 505, 550], "exit": 470, "exp": [219, 245, 276, 281, 282, 284, 359, 367, 401, 511], "exp_rang": 448, "expand": [8, 14, 19, 54, 112, 261, 294, 548, 563, 570], "expans": [14, 17, 19, 58, 96, 104, 126, 129, 130, 136, 137, 142, 143, 144, 145, 147, 148, 149, 262], "expansion_factor": 125, "expect": [22, 219, 226, 236, 249, 252, 271, 274, 292, 297, 373, 384, 386, 387, 388, 389, 390, 401, 411, 415, 432, 433, 434, 435, 436, 440], "expens": 5, "experi": [20, 126, 483, 485, 590, 594], "experiment": [20, 485], "explan": [27, 29, 33, 44, 204, 217, 239, 240, 321, 322, 323, 417, 418, 419, 457], "explicit": [17, 18, 19, 274, 392, 396], "explicitli": [19, 20, 112, 270, 272, 401, 486, 498, 504], "explod": [367, 407, 408, 409, 441], "explor": [20, 132, 440, 485], "expon": [27, 320, 496], "exponenti": [276, 281, 283, 359, 367, 369, 384, 441, 449, 451, 460, 461, 462, 463, 464, 523], "exponentiallr": [446, 455], "expos": [3, 7, 20, 470, 594], "express": [14, 15, 17, 19, 47, 118, 119, 120, 138], "extend": [8, 59, 112, 150, 170, 187, 193, 200, 258, 261, 381, 382, 498], "extens": [112, 456, 475, 592], "extern": [8, 235, 470], "extra": [58, 95, 134, 200, 548], "extract": [35, 61, 63, 65, 74, 75, 76, 100, 106, 109, 112, 137, 138, 141, 159, 170, 187, 199, 200, 201, 203, 215, 222, 235, 237, 238, 239, 240, 243, 244, 254, 255, 258, 261, 294, 378, 382, 423, 425, 469, 474, 500, 527, 529, 551, 571, 572, 573, 575, 581, 583], "extractor": [113, 114, 115, 116, 215, 223, 239, 240, 261, 262], "extrem": [29, 112, 160, 199, 211, 335, 442], "extrema": 334, "ey": 511, "f": [1, 8, 9, 10, 11, 12, 20, 112, 219, 226, 262, 272, 273, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 304, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 321, 322, 323, 327, 328, 329, 331, 332, 333, 334, 335, 337, 339, 340, 341, 366, 369, 432, 434, 436, 446, 447, 448, 449, 450, 451, 452, 453, 454, 470, 591], "f_1": 348, "f_2": 348, "facilit": [14, 18, 100, 270, 274, 283, 369, 376, 377, 378, 440, 456, 582, 590], "factor": [82, 102, 126, 136, 226, 240, 242, 243, 255, 261, 276, 286, 287, 288, 289, 294, 348, 357, 358, 373, 374, 438, 441, 446, 448, 449, 451, 452, 453, 454, 457, 464, 465, 466, 467, 547], "factori": 216, "failur": [270, 271, 272, 273, 440], "faithfulli": 20, "fals": [1, 9, 10, 11, 12, 28, 32, 59, 82, 129, 130, 136, 137, 143, 144, 145, 147, 148, 149, 159, 192, 193, 223, 224, 225, 235, 240, 255, 267, 268, 269, 286, 295, 297, 298, 299, 300, 301, 314, 318, 334, 335, 339, 351, 353, 354, 355, 356, 357, 358, 373, 374, 376, 377, 378, 379, 386, 395, 398, 432, 433, 434, 435, 436, 438, 447, 448, 449, 450, 451, 452, 453, 454, 460, 461, 465, 471, 476, 477, 479, 480, 481, 482, 484, 486, 488, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 527, 528, 529, 537, 543, 544, 545, 546, 547, 553, 554, 555, 558, 566, 575, 578, 580, 591, 594], "famili": [58, 69, 112, 126, 144, 148, 149, 200, 226, 227, 234, 238, 474, 594], "fan": [112, 353, 354, 357, 358], "fan_in": [353, 354], "fan_out": [353, 354], "farhadi": 238, "fashion": [11, 61, 63, 65], "fashion_train": 11, "fashionmnist": 13, "fast": [98, 235, 464], "faster": [112, 137, 236, 237, 262, 446, 459, 463, 473], "faster_rcnn_resnet_101_fpn": 238, "faster_rcnn_resnet_50_fpn": 238, "fasterrcnn": [235, 236, 237, 238], "fastrcnn": [238, 239], "fc": [20, 109, 159, 170, 177, 187, 253, 254, 271, 348, 377, 378, 423, 424, 425, 426, 427, 428, 594], "fc1": [20, 115, 116, 270, 274, 360, 361, 362, 364, 365, 366, 367, 368, 370, 371, 398, 441, 442, 443], "fc2": [20, 115, 116, 270, 274, 360, 361, 362, 364, 365, 367, 368, 370, 371, 398, 441, 442, 443], "fc3": 116, "feat": 241, "feat_channel": [235, 239], "feat_dim": 240, "featur": [5, 20, 33, 35, 44, 47, 48, 58, 59, 61, 63, 65, 69, 71, 73, 74, 75, 76, 77, 96, 100, 103, 104, 106, 109, 112, 113, 114, 115, 116, 117, 122, 135, 136, 137, 138, 139, 140, 141, 142, 145, 149, 157, 158, 159, 170, 171, 172, 173, 174, 175, 176, 178, 180, 181, 187, 188, 189, 190, 199, 200, 201, 203, 204, 215, 217, 218, 222, 223, 226, 227, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 254, 255, 258, 260, 261, 262, 291, 296, 304, 306, 314, 315, 342, 343, 344, 348, 349, 378, 380, 385, 387, 388, 389, 390, 395, 396, 398, 407, 408, 409, 410, 412, 413, 414, 415, 423, 424, 425, 426, 427, 428, 430, 440, 459], "feature_channel": 69, "feature_extractor": 113, "fed": [5, 253, 254, 590], "feed": [5, 96, 396, 590], "feedback": 592, "feedforward": [209, 264, 432, 434, 436], "femto": [52, 112], "fergu": [112, 217], "fetch": [0, 594], "fewer": [1, 112, 146, 151, 152, 153, 154, 155, 156, 220, 238, 254, 548, 574], "field": [9, 10, 12, 112, 117, 146, 187, 191, 222, 261, 262, 349, 441, 594], "fig": 591, "figur": 591, "file": [5, 474, 475, 476, 593], "fill": [240, 351, 355, 356, 480, 481, 482, 484, 504, 505, 507, 508, 509, 510], "fill_valu": [504, 505], "filter": [83, 112, 126, 217, 240, 250, 287, 288, 289, 290, 291, 292, 294, 342, 343, 344, 377, 378], "filter_height": 294, "filter_s": 294, "filter_width": 294, "final": [44, 59, 69, 77, 78, 79, 80, 81, 82, 83, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 125, 159, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 187, 188, 189, 190, 209, 219, 220, 223, 235, 236, 237, 240, 255, 256, 257, 258, 264, 270, 271, 272, 273, 274, 286, 349, 373, 432, 433, 435, 470, 486, 521, 522, 579, 590], "find": [31, 527, 529, 545, 546, 560, 571], "fine": [59, 112, 117, 132, 135, 224, 225, 236, 237, 348, 590], "finer": 137, "finest": 138, "finetun": 594, "first": [4, 9, 10, 11, 12, 24, 113, 192, 193, 194, 195, 217, 219, 226, 238, 240, 250, 271, 272, 304, 348, 395, 396, 441, 442, 446, 460, 461, 462, 463, 464, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 538, 549, 551, 554, 559, 571, 575, 577, 579, 580, 590], "fit": [19, 440], "fix": [112, 146, 192, 223, 235, 238, 239, 240, 243, 271, 449, 452, 454, 486, 561], "flag": [20, 470, 473, 547], "flat": [112, 192], "flatten": [17, 109, 113, 223, 240, 255, 274, 294, 382, 394, 399, 441, 443, 495, 546, 557, 562, 563, 565, 575], "flattennet": 396, "flexibl": [1, 5, 8, 14, 15, 17, 19, 45, 69, 96, 100, 109, 110, 111, 112, 113, 126, 127, 150, 159, 183, 184, 185, 186, 191, 204, 215, 219, 270, 271, 272, 273, 274, 392, 438, 440, 451, 456, 486, 498, 507, 508, 580, 590], "flexibli": 18, "flip": [585, 587, 590], "float": [2, 7, 9, 10, 11, 12, 24, 29, 44, 45, 59, 69, 70, 71, 72, 82, 83, 96, 102, 104, 117, 123, 127, 136, 137, 138, 139, 140, 141, 142, 192, 193, 209, 219, 223, 235, 239, 240, 242, 243, 244, 245, 246, 250, 252, 253, 254, 255, 258, 261, 262, 264, 267, 269, 276, 279, 286, 295, 296, 297, 298, 299, 300, 301, 307, 309, 310, 314, 315, 316, 318, 319, 320, 337, 340, 341, 342, 343, 344, 351, 355, 356, 357, 358, 359, 363, 373, 374, 384, 385, 386, 387, 388, 389, 390, 400, 401, 402, 403, 407, 408, 409, 410, 411, 412, 413, 414, 415, 430, 432, 434, 436, 438, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 477, 479, 484, 486, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 517, 531, 544, 553, 554, 555, 558, 580, 582, 584, 585, 586, 587], "float32": [223, 267, 269, 469, 486, 499, 500, 503, 504, 505, 507, 509, 544, 580], "float64": [469, 510, 544, 580], "floor": [454, 488, 511], "flop": [112, 238, 263, 470, 566], "flow": [35, 69, 71, 103, 109, 112, 177, 274, 296, 358, 360, 368, 371, 376, 377, 378, 395, 398, 471, 479, 516, 558, 591, 592, 594], "fluctuat": 448, "fly": [2, 5], "fn": 473, "fname": 5, "focu": [35, 226], "focus": 226, "follow": [0, 4, 17, 19, 21, 24, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 78, 79, 80, 81, 82, 96, 117, 118, 119, 120, 121, 129, 130, 183, 184, 185, 186, 191, 204, 215, 217, 220, 223, 237, 240, 252, 253, 254, 255, 256, 257, 264, 276, 277, 279, 280, 281, 282, 283, 284, 286, 304, 306, 339, 342, 343, 344, 345, 346, 347, 348, 349, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 376, 377, 378, 381, 384, 386, 387, 388, 389, 390, 392, 395, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 423, 424, 425, 426, 427, 428, 432, 433, 434, 435, 436, 440, 448, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 471, 474, 476, 485, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 527, 529, 538, 548, 559, 564, 574, 581, 582, 583, 584, 585, 586, 587, 590, 594], "footprint": 121, "foral": [433, 435], "forc": [20, 296], "foreground": [223, 224, 225], "form": [20, 30, 59, 246, 258, 349, 433, 435, 495, 553, 555, 559, 563, 570, 590], "format": [2, 5, 9, 10, 11, 12, 219, 242, 245, 246, 247, 249, 250, 253, 254, 257, 334, 340, 402, 405, 475, 580], "formul": [220, 277, 308, 320], "formula": [24, 32, 283, 321, 322, 323, 364, 369, 370, 401, 403, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 491, 543, 584], "forward": [3, 20, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 71, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 125, 127, 128, 129, 130, 150, 151, 152, 153, 154, 155, 156, 157, 158, 171, 172, 173, 174, 175, 176, 183, 184, 185, 186, 188, 189, 190, 191, 204, 217, 219, 224, 225, 226, 235, 237, 238, 239, 240, 242, 243, 252, 255, 258, 260, 261, 267, 268, 440, 441, 442, 443, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 470, 594], "foundat": [20, 109, 126, 177, 268, 440, 456], "four": [78, 79, 80, 81, 117, 143, 144, 145, 147, 148, 149, 151, 152, 153, 154, 155, 156, 561], "fpn": [235, 236, 237, 238, 242, 248, 261], "frac": [18, 20, 22, 23, 24, 26, 27, 28, 29, 31, 32, 35, 59, 117, 220, 226, 242, 245, 246, 249, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 297, 304, 306, 315, 316, 320, 321, 322, 323, 324, 327, 328, 329, 331, 332, 333, 337, 353, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 382, 384, 386, 387, 388, 389, 390, 395, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 423, 424, 425, 426, 427, 428, 430, 434, 436, 441, 447, 458, 459, 460, 461, 462, 463, 464, 465, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 548, 550, 556, 558, 559, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 576, 577, 578, 582], "fraction": [7, 71, 290, 291, 292], "frame": [238, 301], "framework": [8, 14, 20, 222, 402, 405, 407, 408, 409, 412, 413, 414, 445, 456, 590], "free": [20, 469, 545, 546, 547], "frequent": [402, 405], "from": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 15, 19, 20, 27, 29, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 58, 59, 69, 70, 71, 72, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 96, 104, 105, 106, 107, 108, 109, 117, 118, 119, 120, 121, 122, 125, 127, 128, 129, 130, 137, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 171, 172, 173, 174, 175, 176, 183, 184, 185, 186, 188, 189, 190, 191, 205, 206, 207, 208, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 271, 272, 273, 274, 290, 294, 296, 304, 308, 314, 318, 324, 325, 326, 334, 335, 337, 339, 340, 342, 343, 344, 348, 349, 351, 353, 354, 355, 356, 357, 358, 366, 373, 376, 377, 378, 379, 382, 384, 385, 387, 388, 389, 390, 395, 396, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 412, 413, 414, 415, 423, 424, 425, 433, 435, 436, 440, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 469, 472, 474, 475, 476, 477, 479, 480, 481, 482, 484, 485, 486, 491, 492, 493, 497, 498, 500, 521, 522, 527, 528, 529, 537, 543, 545, 546, 547, 550, 551, 556, 559, 560, 563, 567, 568, 569, 570, 571, 575, 577, 578, 581, 582, 583, 584, 585, 586, 587, 590, 591, 594], "fu": 112, "full": [3, 20, 32, 127, 129, 130, 209, 219, 236, 238, 239, 255, 260, 262, 264, 381, 479, 511], "full_dataset": 3, "full_lik": 511, "full_matric": 32, "fulli": [8, 15, 21, 33, 44, 77, 78, 79, 80, 81, 82, 83, 109, 112, 113, 114, 115, 116, 159, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 187, 188, 189, 190, 204, 215, 217, 223, 235, 238, 239, 240, 254, 306, 348, 349, 396, 398, 485, 486, 566], "func": 474, "function": [3, 5, 8, 9, 10, 11, 12, 14, 20, 21, 69, 73, 96, 104, 219, 220, 239, 255, 268, 270, 271, 272, 273, 274, 342, 343, 344, 348, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 384, 385, 387, 388, 389, 390, 392, 400, 401, 402, 403, 404, 405, 407, 408, 409, 412, 413, 414, 415, 417, 418, 419, 420, 432, 434, 436, 440, 447, 448, 450, 451, 454, 456, 485, 579, 590, 594], "fundament": [222, 286, 306, 398, 486, 580], "further": [18, 46, 47, 48, 49, 58, 71, 83, 84, 85, 86, 87, 88, 89, 90, 91, 125, 127, 128, 129, 130, 132, 134, 157, 158, 201, 479, 485, 528, 537, 543, 594], "fuse": [35, 112, 187, 241, 470], "fusion": [59, 188, 189, 190, 227, 238, 261], "futur": [286, 374, 397, 435, 436, 592], "g": [0, 14, 15, 20, 23, 24, 27, 30, 32, 59, 69, 73, 82, 84, 85, 86, 87, 88, 89, 90, 91, 101, 102, 103, 110, 111, 112, 113, 114, 115, 116, 122, 150, 192, 193, 204, 220, 223, 224, 225, 236, 237, 240, 241, 244, 253, 254, 316, 334, 348, 349, 380, 384, 441, 443, 445, 458, 465, 469, 486, 504, 521, 522, 550, 584, 594], "g_": [442, 459], "g_i": [441, 442, 443], "g_t": 465, "gain": [357, 358], "gamma": [226, 315, 407, 408, 409, 410, 411, 412, 413, 414, 415, 446, 448, 449, 450, 452, 454], "gamma_c": [315, 410], "gan": [291, 379, 380], "gap": [159, 170, 187, 348], "gaussian": [219, 220, 221, 277, 360], "gaussiandiffus": 220, "gelu": [73, 96, 117, 278, 303, 372, 394], "gelunetwork": 360, "gener": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594], "geoffrei": [9, 10], "geometr": 524, "geq": 572, "get": [9, 10, 11, 12], "get_loss": [219, 220, 223, 226, 235, 252, 253, 254, 255, 258, 261], "get_lr": [447, 448, 449, 450, 451, 452, 453, 454], "getattr": 226, "giou": 223, "giou_loss_coef": 223, "girshick": [238, 240], "git": 20, "github": [11, 20], "give": [457, 465], "given": [3, 4, 17, 18, 19, 23, 24, 27, 29, 30, 32, 69, 220, 222, 243, 265, 294, 320, 325, 326, 334, 337, 373, 374, 382, 392, 400, 401, 402, 405, 422, 442, 445, 469, 471, 477, 504, 508, 510, 558, 566, 567, 571, 579, 584, 585, 587, 590, 591], "global": [0, 7, 59, 61, 63, 65, 69, 73, 74, 75, 76, 82, 96, 112, 117, 136, 138, 141, 142, 146, 159, 170, 177, 187, 192, 194, 195, 196, 197, 199, 200, 201, 238, 315, 348, 410, 441, 442, 443, 470, 471, 473, 483, 485], "global_pool": [69, 96], "global_response_norm": [303, 317], "globalresponsenorm": [394, 416], "go": [14, 70, 101, 112], "goal": [400, 402, 405, 592], "good": 97, "googlenet": [101, 112], "gpu": [4, 15, 112, 122, 267, 269, 469, 477, 479, 480, 481, 482, 484, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 544, 547, 594], "grad": [15, 20, 255, 258, 261, 267, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 294, 297, 304, 306, 334, 335, 339, 345, 346, 347, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 376, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 411, 412, 413, 414, 415, 423, 424, 425, 426, 427, 428, 441, 442, 443, 445, 456, 475, 477, 479, 480, 481, 482, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 501, 502, 504, 505, 506, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 556, 558, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 581, 582, 583, 585, 587, 588, 591], "grad_norm": [441, 444], "grad_output": 27, "gradient": [14, 15, 20, 21, 35, 69, 70, 71, 103, 109, 112, 226, 243, 249, 255, 258, 261, 267, 269, 335, 382, 385, 440, 441, 442, 443, 445, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 471, 473, 476, 477, 479, 480, 481, 482, 484, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 516, 524, 531, 544, 545, 546, 547, 551, 560, 575, 580, 591, 592], "gradual": [221, 446, 447, 449], "grain": [59, 112, 117, 348], "granular": 244, "graph": [20, 244, 358, 470, 473, 476, 486, 499, 500, 503, 507, 508, 509, 510, 580, 591, 592], "grayscal": [11, 12, 113, 114, 115, 116, 584, 590], "great": 141, "greater": [54, 140, 250, 340, 516, 549], "green": 584, "grid": [112, 117, 242, 243, 252, 253, 254, 255, 256, 257, 258, 259, 261, 334, 335, 516, 559], "grid_sampl": [303, 334, 336], "grid_window_s": 117, "gridattent": 117, "grn": 410, "ground": [223, 235, 252, 253, 254, 255, 261], "groundbreak": 112, "group": [72, 112, 126, 150, 157, 158, 170, 171, 172, 173, 174, 175, 176, 183, 184, 185, 186, 187, 191, 237, 261, 271, 287, 288, 289, 290, 291, 292, 316, 342, 343, 344, 349, 376, 377, 378, 379, 380, 381, 411, 445, 446, 456], "group1": 271, "group2": 271, "group_norm": [303, 317], "groupedconvblock": 170, "groupnorm": [316, 394, 416], "grow": [20, 96, 441], "growth_rat": [77, 78, 79, 80, 81], "guarante": [476, 483], "gw": 258, "h": [14, 17, 18, 19, 112, 159, 171, 172, 173, 174, 175, 176, 188, 189, 190, 211, 219, 220, 221, 223, 224, 225, 226, 238, 242, 243, 245, 246, 247, 252, 253, 254, 255, 258, 259, 261, 262, 286, 288, 289, 291, 292, 294, 296, 300, 301, 315, 322, 323, 325, 326, 328, 329, 332, 333, 334, 339, 341, 343, 344, 348, 373, 374, 381, 392, 396, 408, 409, 410, 413, 414, 418, 419, 421, 422, 425, 428, 432, 434, 436, 581, 583, 594], "h_": [242, 243, 245, 246, 288, 289, 291, 292, 322, 323, 325, 326, 328, 329, 332, 333, 339, 377, 378, 380, 381, 382, 418, 419, 421, 422, 424, 425, 427, 428], "h_i": 252, "h_in": 335, "h_l": [241, 242], "h_out": [288, 289, 291, 292, 328, 329, 332, 333, 335], "h_stack": 556, "h_t": [245, 246], "ha": [0, 24, 46, 59, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 242, 254, 255, 274, 287, 288, 289, 290, 342, 343, 344, 364, 366, 370, 400, 402, 407, 408, 409, 412, 413, 414, 415, 438, 441, 443, 445, 456, 475, 486, 491, 516, 524, 531, 541, 548, 550, 556, 560, 569, 575, 577, 584], "hackabl": 20, "haip": 112, "half": [219, 448, 535], "han": 11, "hand": [31, 223, 238], "handl": [0, 5, 14, 20, 29, 199, 263, 268, 270, 271, 272, 273, 274, 337, 402, 405, 440, 456, 469, 498], "handwritten": [11, 12, 116], "hang": 112, "happen": 594, "hard": [129, 130, 226, 362], "hard_sigmoid": 361, "harder": 226, "hardsigmoid": [362, 372, 394], "hardswish": [372, 394], "hardwar": 122, "hashabl": 486, "hat": [35, 220, 252, 255, 258, 261, 411, 460, 461, 462, 463, 464], "have": [0, 1, 4, 20, 23, 24, 26, 29, 30, 32, 219, 250, 252, 255, 269, 271, 273, 274, 288, 289, 296, 320, 337, 340, 358, 430, 440, 441, 475, 503, 507, 508, 509, 510, 527, 529, 550, 556, 558, 559, 568, 569, 574, 575, 577, 582, 588, 594], "he": 112, "head": [35, 44, 59, 69, 74, 75, 76, 96, 104, 117, 125, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 209, 215, 223, 224, 225, 227, 235, 236, 237, 238, 239, 240, 255, 256, 257, 258, 259, 260, 261, 262, 264, 286, 373, 374, 432, 434, 436, 594], "head_dim": 59, "head_fn": 104, "heapsort": 566, "heart": 20, "heavi": 69, "height": [35, 215, 223, 226, 245, 246, 252, 261, 288, 289, 291, 292, 294, 300, 301, 315, 322, 323, 325, 326, 328, 329, 332, 333, 335, 339, 341, 349, 377, 378, 382, 408, 409, 410, 413, 414, 418, 419, 421, 424, 425, 427, 428, 438, 581, 583, 588], "help": [35, 61, 63, 65, 73, 102, 279, 281, 301, 337, 359, 363, 366, 367, 371, 407, 408, 409, 423, 424, 426, 427, 430, 446, 448, 453, 454, 457, 460, 461, 463, 471, 472, 538, 592], "henc": [521, 522, 564], "here": [5, 22, 236, 268, 290, 304, 401, 440, 456, 472, 485, 579, 580, 590], "heurist": 240, "hidden": [33, 59, 117, 138, 139, 140, 141, 192, 193, 209, 217, 223, 239, 264, 271], "hidden_dim": [235, 239], "hidden_s": 271, "hierarch": [44, 45, 61, 63, 65, 96, 112, 136, 137, 138, 139, 140, 141, 142, 143, 148, 192, 193, 219, 271, 274, 440], "hierarchi": [96, 219, 238, 377], "hierarchical_kl": 219, "hierarchicalnetwork": 271, "high": [15, 47, 53, 54, 76, 92, 93, 94, 95, 96, 97, 99, 106, 112, 117, 118, 119, 122, 125, 133, 134, 137, 139, 147, 148, 149, 167, 182, 191, 199, 200, 201, 211, 212, 233, 234, 235, 244, 446, 481, 484, 498], "higher": [54, 83, 123, 131, 170, 199, 228, 231, 402, 405, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 490, 491, 495, 498, 523, 538], "highest": [58, 122, 134, 234, 252, 481], "highli": [20, 35, 50, 58, 112, 128, 138, 198, 263, 451], "highlight": [348, 426, 427, 428, 591], "hinton": [9, 10], "hist": [553, 554, 555], "histogram": [554, 555, 557], "histogram2d": 557, "histogramdd": 557, "histor": 459, "histori": [477, 479, 480, 481, 482, 484, 499, 500, 501, 502, 503, 507, 508, 509, 510], "ho": [220, 221], "hold": [126, 261, 270, 271, 272, 273], "hong": 238, "hook": 476, "horizont": [556, 569, 585, 590, 591], "hot": [252, 255, 258, 261, 402, 405], "how": [2, 5, 17, 19, 138, 183, 184, 185, 186, 191, 226, 271, 274, 334, 335, 392, 440, 590, 591, 592], "howard": 112, "howev": [267, 358, 524], "hstack": 557, "html": [9, 10], "http": [9, 10, 11, 12, 20], "hu": [112, 348], "huang": 112, "huber": [310, 403], "huber_loss": [303, 311], "huberloss": [394, 406], "huberregressionmodel": 403, "hue": 590, "huge": [53, 112, 138], "human": 222, "hungarian": 223, "hybrid": [73, 96, 112, 134, 135], "hyper": 594, "hyperbol": [284, 364, 371, 519, 534, 540], "hyperparamet": [136, 151, 152, 153, 154, 155, 156, 159, 170, 216, 265, 445, 457], "i": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 304, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 392, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 537, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 594], "i_": [498, 551], "i_0": [498, 551], "i_1": [17, 18, 19, 340, 392, 498], "i_2": [17, 18, 19, 340, 392], "i_k": [19, 498], "i_m": [17, 19, 392], "i_n": 340, "iccv": 112, "iclr": [112, 221], "id": 591, "idea": 112, "ideal": [47, 51, 55, 122, 123, 126, 135, 138, 274], "ident": [26, 27, 104, 112, 223, 334, 335, 341, 386, 394, 399, 483, 485, 503, 564], "identifi": [222, 272], "idx": [2, 3, 4, 5, 547], "ieee": [112, 238, 348], "ignor": [255, 261, 432, 433, 434, 435, 436, 547], "ignore_index": [309, 313], "ignore_iou_thr": 261, "ii": 541, "ij": [15, 35, 252, 255, 283, 339, 369, 442, 489, 490, 491, 495, 559, 572, 573], "ijb": [258, 261], "ik": [15, 489, 490, 491], "ill": [23, 29], "ilsvrc": 112, "imag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592, 593, 594], "image_dir": 5, "image_mean": 240, "image_path": 5, "image_s": [209, 210, 211, 212, 213, 214, 220, 255, 256, 257, 258, 259], "image_shap": 247, "imagedataset": 5, "imageio": 5, "imagenet": [69, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 104, 112, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 168, 169, 183, 184, 185, 186, 191, 236, 237, 240, 594], "imagenet1k": [593, 594], "imagenet1k_v1": 594, "imagenet_1k": 593, "imbal": [226, 402, 405], "img": 244, "img_siz": [35, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 209, 210, 211, 212, 213, 214], "imgclf": [73, 104, 594], "imggen": [219, 220], "impact": [112, 463], "implement": [2, 5, 7, 20, 29, 33, 35, 44, 69, 73, 77, 82, 96, 100, 101, 102, 103, 104, 110, 111, 112, 113, 123, 124, 125, 136, 137, 159, 168, 169, 171, 172, 173, 174, 175, 176, 177, 192, 209, 215, 217, 219, 220, 221, 223, 226, 235, 238, 239, 240, 244, 252, 255, 258, 261, 263, 264, 268, 294, 297, 335, 345, 346, 347, 349, 373, 374, 382, 386, 410, 434, 436, 445, 450, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 556, 577, 584], "impli": [376, 377], "implicit": [382, 504], "import": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 14, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 168, 169, 171, 172, 173, 174, 175, 176, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 294, 296, 297, 298, 301, 304, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 392, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 471, 472, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 547, 548, 549, 550, 551, 552, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 594], "impress": 238, "improp": [14, 271, 274, 485], "improv": [35, 44, 61, 63, 65, 69, 73, 75, 83, 101, 102, 103, 107, 109, 111, 112, 117, 135, 137, 144, 146, 150, 159, 170, 183, 184, 185, 186, 187, 192, 193, 200, 201, 203, 217, 220, 229, 235, 236, 238, 239, 254, 255, 262, 266, 296, 297, 314, 337, 341, 348, 360, 367, 371, 392, 430, 446, 447, 448, 453, 457, 458, 459, 460, 461, 462, 463, 464, 465, 583, 586, 590], "imread": 5, "in1_featur": [304, 395], "in2_featur": [304, 395], "in_channel": [35, 59, 69, 73, 96, 117, 118, 119, 120, 121, 122, 136, 137, 143, 144, 145, 146, 147, 148, 149, 159, 192, 193, 209, 252, 261, 271, 274, 342, 343, 344, 345, 346, 347, 348, 349, 376, 377, 378, 379, 380, 381, 408, 409, 423, 424, 425, 426, 427, 428, 440], "in_channels_list": 241, "in_featur": [270, 271, 274, 306, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 377, 378, 384, 387, 388, 395, 396, 398, 400, 401, 402, 403, 404, 405, 407, 412, 415, 423, 424, 425, 426, 427, 428, 594], "incept": [101, 102, 103, 104, 109, 110, 111], "inception_next": 104, "inception_next_atto": 112, "inception_next_bas": 112, "inception_next_smal": 112, "inception_next_tini": 112, "inception_resnet_v1": 112, "inception_resnet_v2": 112, "inception_v1": 112, "inception_v3": 112, "inception_v4": 112, "inceptionnext": [105, 106, 107, 108], "inceptionresnet": [110, 111], "includ": [3, 4, 5, 8, 11, 15, 20, 21, 27, 28, 33, 44, 74, 75, 76, 100, 101, 102, 110, 113, 117, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 159, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 209, 216, 217, 243, 252, 253, 254, 256, 257, 259, 261, 262, 264, 268, 269, 271, 273, 274, 339, 342, 343, 344, 345, 346, 347, 396, 411, 434, 436, 438, 440, 445, 450, 456, 463, 470, 485, 491, 561, 572, 573, 592], "inclus": [269, 272, 481, 484, 506, 521, 522], "incom": [306, 398], "incompat": [236, 548], "incomplet": 2, "incompletedataset": 2, "incorpor": [32, 35, 112, 128, 170, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 200, 202, 255, 262, 360], "increas": [47, 48, 96, 117, 120, 122, 123, 131, 134, 138, 139, 141, 144, 149, 170, 171, 172, 173, 174, 175, 176, 187, 229, 266, 287, 288, 289, 290, 291, 294, 341, 448, 453, 459, 466, 472, 556, 577, 584, 585, 587, 590], "increment": [220, 238], "independ": [59, 240, 271, 287, 288, 289, 290, 373, 384, 387, 388, 389, 390, 415, 442, 491, 502, 582, 584, 586, 588], "index": [0, 2, 3, 4, 9, 10, 11, 12, 14, 17, 240, 243, 255, 258, 261, 315, 337, 340, 392, 410, 430, 447, 448, 449, 450, 451, 452, 454, 472, 486, 499, 500, 503, 521, 522, 524, 547, 559, 560, 564], "indexerror": 0, "indic": [0, 1, 3, 7, 15, 18, 19, 20, 74, 75, 76, 142, 157, 158, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 223, 240, 250, 252, 255, 269, 271, 273, 274, 309, 313, 337, 340, 402, 405, 423, 430, 432, 433, 434, 435, 436, 452, 469, 471, 486, 545, 546, 547, 560, 566, 571, 578, 581, 583], "individu": [5, 226, 271, 274, 403, 415, 442, 456, 459, 466], "induc": [281, 367], "induct": [61, 63, 65, 73, 96, 112], "inf": 539, "infer": [98, 137, 183, 184, 185, 186, 191, 236, 238, 239, 240, 250, 253, 254, 271, 274, 340, 469, 473, 476, 594], "infin": [30, 32, 462], "inform": [35, 59, 112, 138, 194, 195, 196, 197, 202, 221, 222, 263, 267, 348, 450, 456, 458], "infti": [28, 441, 443, 464], "inherit": [1, 457, 465, 467], "init": 352, "initi": [1, 20, 35, 44, 71, 77, 96, 104, 109, 117, 121, 150, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 188, 189, 190, 198, 199, 200, 201, 205, 206, 207, 208, 216, 224, 225, 236, 237, 255, 256, 257, 259, 265, 267, 269, 270, 271, 272, 273, 274, 349, 351, 353, 354, 355, 356, 357, 358, 373, 376, 377, 378, 395, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 415, 430, 434, 436, 438, 440, 445, 447, 449, 451, 452, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 480, 483, 484, 485, 499, 503, 506, 507, 508, 509, 510, 544], "initial_accumulator_valu": 459, "inject": 69, "inner": [261, 489, 498, 511], "innov": [125, 135], "input": [4, 14, 15, 17, 18, 19, 20, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 69, 71, 72, 73, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 129, 130, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 170, 183, 184, 185, 186, 187, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 209, 210, 211, 212, 213, 214, 215, 217, 219, 220, 221, 224, 225, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 250, 253, 254, 256, 257, 259, 260, 263, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 304, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 392, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 438, 440, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 473, 485, 486, 487, 489, 490, 491, 495, 498, 500, 502, 505, 508, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 594], "input1": 395, "input2": 395, "input_": [33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 217, 240, 276, 277, 279, 280, 281, 282, 283, 284, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 410, 417, 418, 419, 420, 421, 422, 430, 549, 566, 571, 572, 573], "input_1": 304, "input_2": 304, "input_data": [359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 376, 377, 378, 384, 387, 388, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 412, 415, 423, 424, 425, 426, 427, 428], "input_indic": [337, 430], "input_s": [271, 273, 369, 402, 405], "input_shap": 219, "input_tensor": [59, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 129, 130, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 171, 172, 173, 174, 175, 176, 183, 184, 185, 186, 188, 189, 190, 191, 204, 215, 255, 267, 270, 271, 272, 273, 274, 283, 296, 297, 320, 345, 346, 347, 348, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 376, 377, 378, 384, 385, 386, 387, 388, 389, 390, 396, 397, 398, 400, 402, 403, 404, 405, 407, 408, 409, 412, 413, 414, 415, 423, 424, 425, 426, 427, 428, 438, 440, 581, 582, 583, 584, 585, 586, 587, 588], "insert": 547, "insid": [5, 226, 470, 471], "insight": 112, "inspect": [20, 268, 269, 274, 445, 592], "inspir": [14, 17, 19, 20, 44, 112], "instabl": [29, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467], "instanc": [0, 1, 3, 7, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 74, 75, 76, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 110, 111, 114, 115, 116, 121, 127, 128, 129, 130, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 210, 211, 212, 213, 214, 216, 218, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 253, 254, 256, 257, 259, 260, 262, 265, 266, 268, 269, 270, 272, 273, 274, 316, 318, 366, 412, 413, 414, 415, 432, 433, 435, 445, 469, 473, 474, 544, 563, 570, 590, 594], "instance_norm": [303, 317, 412, 413, 414], "instancenorm": [316, 411], "instancenorm1d": [394, 416], "instancenorm1dmodel": 412, "instancenorm2d": [394, 416], "instancenorm3d": [394, 416], "instanti": [2, 36, 37, 38, 39, 40, 41, 42, 43, 71, 74, 75, 76, 82, 92, 93, 94, 95, 98, 104, 105, 106, 107, 108, 131, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 183, 184, 185, 186, 191, 194, 195, 196, 197, 202, 203, 210, 211, 212, 213, 214, 239, 240, 474, 594], "instead": [61, 63, 65, 261, 270, 271, 272, 273, 274, 353, 354, 357, 358, 430, 432, 434, 436, 460, 461, 462, 501, 502], "int": [0, 1, 2, 3, 4, 7, 9, 10, 11, 12, 17, 18, 19, 27, 28, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 247, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 269, 283, 286, 287, 288, 289, 290, 291, 292, 294, 296, 309, 313, 316, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 355, 356, 357, 358, 369, 373, 374, 376, 377, 378, 379, 380, 381, 382, 385, 392, 395, 396, 398, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 438, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 460, 461, 462, 463, 464, 466, 469, 474, 477, 479, 480, 481, 482, 483, 484, 486, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 517, 521, 522, 527, 528, 529, 531, 537, 538, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 558, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 580, 581, 583, 588, 591], "int32": [430, 547, 560], "int64": [223, 250, 469, 479, 486, 545, 546], "integ": [1, 5, 7, 27, 177, 204, 250, 287, 288, 289, 322, 323, 340, 373, 376, 377, 378, 379, 382, 415, 418, 419, 424, 425, 426, 427, 428, 441, 443, 479, 480, 481, 482, 484, 485, 498, 501, 507, 509, 516, 524, 528, 531, 537, 542, 543, 555, 561, 563, 564, 567, 570], "integr": [1, 2, 8, 9, 10, 11, 12, 18, 20, 21, 59, 71, 73, 74, 75, 76, 112, 117, 134, 150, 239, 240, 264, 269, 271, 273, 274, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 376, 377, 378, 392, 395, 398, 423, 424, 425, 426, 427, 428, 486], "intellig": [112, 222, 238, 348], "intend": [14, 139, 267, 272, 273], "intens": [29, 77, 160, 582, 584], "interact": [117, 192, 304, 395, 440, 485, 592], "interdepend": 112, "interest": [239, 243], "interfac": [2, 3, 20, 268, 271, 420, 456], "interfer": [471, 574], "intermedi": [29, 138, 157, 158, 223, 258, 348, 432, 434, 436, 486, 591], "intern": [20, 112, 160, 161, 162, 163, 164, 165, 166, 167, 178, 179, 180, 181, 182, 221, 224, 225, 236, 237, 238, 270, 271, 272, 273, 274, 364, 401, 402, 405, 440, 498, 581, 582, 583, 584, 585, 586, 587, 588], "interpol": [221, 243, 303, 335, 338, 438, 506, 588], "interpret": [14, 112, 222, 283, 369, 550], "intersect": [249, 250], "interv": [442, 452, 454, 480, 484, 499], "introduc": [45, 61, 63, 65, 69, 73, 83, 101, 102, 112, 117, 123, 124, 125, 136, 137, 145, 170, 203, 226, 235, 238, 239, 240, 261, 263, 280, 290, 348, 360, 365, 366, 368, 371, 384, 387, 388, 389, 390, 432, 583, 586, 590], "introspect": [20, 274], "intuit": [14, 17, 20, 270, 272, 440, 590, 592], "inv": 25, "inv_a": 26, "invalid": 223, "invari": [424, 427], "invers": [23, 26, 27, 29, 245, 448, 459, 513, 514, 515], "invert": [23, 26, 27, 31, 112, 124, 125, 128], "invit": 20, "invok": 474, "involv": [17, 19, 20, 22, 23, 24, 26, 29, 30, 32, 187, 222, 276, 277, 279, 280, 281, 282, 284, 304, 306, 339, 376, 377, 378, 392, 395, 398, 477, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 510, 523, 525, 526, 527, 529, 533, 535, 559, 561, 563, 570], "iou": [223, 226, 240, 244, 248, 250, 252, 255, 261, 262], "iou_": 261, "iou_aware_alpha": [261, 262], "iou_branch_weight": 261, "iou_matrix": 249, "iou_thresh": [244, 250, 255, 258], "is_all_fre": 486, "is_bit_fre": 469, "is_caus": [286, 374, 435, 436], "is_fre": 486, "is_leaf": 486, "isn": 20, "issu": [5, 20, 226, 367, 401, 407, 408, 409, 460, 461], "item": [3, 11, 20, 404], "iter": [0, 1, 2, 3, 5, 220, 267, 268, 271, 273, 433, 435, 441, 442, 443, 445, 448, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 499], "ith": [283, 369], "its": [3, 7, 8, 20, 27, 29, 33, 45, 69, 72, 112, 122, 126, 134, 137, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 178, 179, 180, 181, 182, 188, 189, 190, 217, 235, 242, 255, 267, 270, 271, 272, 273, 287, 288, 289, 290, 291, 294, 334, 341, 349, 358, 360, 364, 365, 370, 379, 385, 426, 427, 428, 440, 442, 445, 458, 466, 470, 471, 472, 474, 476, 499, 501, 502, 509, 516, 524, 527, 529, 531, 544, 548, 564, 566, 567, 574, 582, 585, 587, 590, 594], "itself": [22, 27, 270, 271, 272, 273, 446, 473], "j": [12, 14, 17, 18, 19, 35, 221, 249, 252, 255, 258, 261, 283, 337, 348, 369, 392, 407, 408, 409, 412, 413, 414, 423, 424, 426, 427, 430, 443, 521, 522, 559, 569, 572, 573, 581, 583], "j_": 498, "j_1": [17, 19, 392], "j_2": [17, 19, 392], "j_k": [19, 498], "j_n": [17, 19, 392], "jacobian": [521, 522], "jain": 221, "jie": 112, "jk": [15, 442, 490], "join": [5, 550], "jointli": 235, "joseph": 238, "json": 474, "jupyt": 592, "k": [4, 7, 27, 35, 59, 112, 117, 137, 223, 242, 243, 286, 287, 290, 373, 374, 376, 379, 402, 408, 409, 413, 414, 423, 426, 427, 436, 489, 490, 498, 500, 503, 521, 522, 550, 551, 567, 571], "k_2": 59, "k_d": [289, 292, 378, 425, 428], "k_h": [288, 289, 291, 292, 377, 378, 382, 424, 425, 428], "k_i": 373, "k_j": 35, "k_w": [288, 289, 291, 292, 377, 378, 382, 424, 425, 428], "kaim": [112, 353, 354, 357, 358], "kaiming_norm": 352, "kaiming_uniform": 352, "kalenichenko": 112, "karen": 112, "kashif": 11, "kb": 593, "kd": 381, "kdim": 373, "keep": [250, 268, 297, 365, 458, 470, 531, 547, 564, 572, 573], "keep_grad": [269, 477, 479, 480, 481, 482, 484, 486, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 544, 580], "keep_var": 268, "keepdim": [28, 527, 528, 529, 537, 543, 545, 546], "kei": [20, 59, 73, 117, 126, 136, 142, 143, 144, 145, 147, 148, 149, 192, 193, 222, 255, 268, 270, 272, 274, 286, 373, 374, 436, 445, 475, 594], "kept": [250, 528, 537, 543], "kernel": [69, 96, 112, 113, 114, 115, 116, 126, 129, 130, 187, 188, 189, 190, 191, 217, 287, 288, 289, 290, 291, 292, 294, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 342, 343, 344, 345, 346, 347, 349, 376, 377, 378, 379, 380, 381, 382, 417, 418, 419, 420, 421, 422, 424, 425, 428, 470], "kernel_s": [125, 129, 130, 187, 188, 189, 190, 235, 239, 240, 271, 274, 327, 328, 329, 331, 332, 333, 342, 343, 344, 345, 346, 347, 349, 376, 377, 378, 379, 380, 381, 382, 392, 408, 409, 423, 424, 425, 426, 427, 428], "keyerror": 268, "keyword": [34, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 118, 119, 120, 121, 122, 129, 130, 131, 132, 133, 134, 135, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 205, 206, 207, 208, 218, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 256, 257, 259, 260, 262, 268, 397], "kh": [380, 381], "kind": [547, 566], "kingma": 221, "kj": [489, 491], "kl": 219, "kl_weight": 219, "known": [112, 290, 292], "kriz": [9, 10], "krizhevski": [9, 10, 112], "kroneck": [17, 283, 369, 392], "kw": [380, 381], "kwarg": [34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 213, 214, 216, 218, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 253, 254, 256, 257, 259, 260, 262, 268, 397, 474], "l": [22, 29, 92, 112, 212, 219, 220, 226, 242, 252, 255, 258, 261, 286, 287, 290, 299, 321, 324, 327, 331, 342, 348, 374, 382, 384, 387, 388, 389, 390, 400, 401, 402, 403, 404, 405, 407, 408, 409, 412, 413, 414, 415, 417, 420, 435, 436, 538, 548], "l1": [97, 112, 223, 226, 320], "l2": [320, 441, 443, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467], "l3": [98, 112], "l7": [99, 112], "l_": [263, 287, 290, 321, 324, 327, 331, 376, 379, 417, 420, 423, 426, 432], "l_0": 242, "l_k": 373, "l_m": [433, 434], "l_out": [287, 290, 327, 331], "l_q": 373, "l_t": [432, 433, 434], "l_v": 373, "label": [8, 9, 10, 11, 12, 15, 102, 222, 235, 239, 240, 261, 262, 340, 400, 401, 402, 405], "lambd": 457, "lambda": [24, 281, 367, 451, 457, 461], "lambda_": [252, 255, 261], "lambda_1": 24, "lambda_2": 24, "lambda_coord": [252, 253, 254, 255], "lambda_fn": 451, "lambda_i": 24, "lambda_n": 24, "lambda_noobj": [252, 253, 254, 255], "lambdalr": 455, "languag": [8, 376, 395, 423, 426, 432], "larg": [0, 5, 29, 47, 53, 54, 58, 61, 63, 65, 77, 92, 95, 112, 117, 118, 119, 122, 125, 129, 131, 134, 135, 138, 139, 149, 160, 161, 162, 165, 178, 179, 195, 199, 200, 201, 210, 211, 212, 233, 236, 258, 259, 261, 345, 346, 347, 366, 403, 440, 442, 457, 460, 461, 462, 465, 466, 467], "larger": [46, 59, 62, 75, 76, 82, 83, 117, 118, 119, 159, 187, 200, 226, 228, 231, 233, 266, 270, 272, 287, 288, 289, 294, 296, 385, 457, 492, 549, 561, 581, 583, 588], "largest": [58, 99, 138, 149, 199, 234, 527, 571], "last": [1, 69, 223, 224, 225, 283, 319, 340, 369, 396, 447, 448, 449, 450, 451, 452, 454, 490, 491, 498, 521, 522, 547, 549, 550, 566, 585, 587], "last_channel": 125, "last_epoch": [447, 448, 449, 450, 451, 452, 454], "last_lr": [446, 447, 448, 449, 450, 451, 452, 453, 454], "latent": [219, 221], "later": [35, 96, 112, 241], "latest": [8, 20], "layer": [14, 20, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 59, 60, 61, 62, 63, 64, 65, 69, 70, 73, 77, 78, 79, 80, 81, 82, 83, 96, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 125, 126, 127, 129, 130, 135, 136, 137, 138, 142, 143, 144, 145, 147, 148, 149, 150, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 188, 189, 190, 192, 193, 199, 200, 204, 205, 206, 207, 208, 209, 217, 219, 222, 223, 229, 235, 236, 237, 239, 241, 254, 255, 258, 261, 263, 264, 268, 270, 271, 274, 283, 297, 306, 314, 316, 318, 319, 342, 343, 344, 345, 346, 347, 348, 349, 353, 354, 357, 358, 369, 374, 376, 377, 378, 386, 395, 396, 397, 398, 405, 415, 423, 424, 425, 426, 427, 428, 432, 433, 434, 435, 436, 440, 485, 561, 580, 592], "layer1": 474, "layer2": 474, "layer_group": 271, "layer_norm": [303, 317, 415], "layer_norm_ep": [432, 434, 436], "layer_scale_init": 44, "layer_scale_init_valu": 96, "layer_sequ": [271, 274], "layernorm": [59, 73, 96, 117, 136, 137, 143, 144, 145, 147, 148, 149, 192, 193, 394, 411, 416, 432, 433, 434, 435, 436], "layernormmodel": 415, "layout": [72, 292], "lcd": [475, 476], "lceil": 516, "lct": [475, 476], "ldot": [258, 545, 546], "le": [112, 223, 238, 521, 522], "lead": [14, 20, 69, 236, 271, 274, 320, 360, 412, 413, 414, 415, 442, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 485, 548], "leaf": 486, "leaki": [279, 363], "leaky_relu": [278, 303, 363], "leakyrelu": [372, 394], "learn": [1, 4, 5, 8, 11, 12, 14, 18, 20, 27, 29, 35, 69, 83, 106, 107, 112, 117, 138, 142, 170, 171, 172, 173, 174, 175, 176, 217, 218, 221, 222, 223, 224, 225, 235, 236, 237, 263, 270, 271, 272, 273, 280, 283, 348, 359, 363, 365, 369, 376, 377, 378, 387, 388, 389, 390, 392, 395, 398, 440, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 472, 483, 506, 567, 572, 573, 579, 580, 590], "learnabl": [35, 59, 192, 193, 219, 223, 235, 267, 268, 269, 314, 315, 316, 318, 319, 342, 343, 344, 373, 376, 377, 378, 379, 380, 381, 395, 398, 407, 408, 409, 410, 411, 412, 413, 414, 415, 436, 440], "least": [29, 30, 32, 438, 541, 572, 573], "lecun": [12, 112], "left": [27, 28, 29, 32, 35, 59, 117, 220, 242, 246, 252, 258, 261, 277, 283, 320, 360, 369, 373, 382, 400, 401, 402, 403, 405, 407, 408, 409, 412, 413, 414, 415, 426, 427, 428, 434, 436, 441, 443, 538, 547, 551, 581, 583, 591], "leftarrow": [441, 442, 463], "len": [0, 1, 2, 3, 4, 5, 7, 559], "lenet": [20, 114, 115, 116], "lenet_1": 112, "lenet_1_weight": 593, "lenet_4": 112, "lenet_4_weight": 593, "lenet_5": [20, 112], "lenet_5_weight": [20, 593], "length": [4, 7, 59, 96, 117, 220, 223, 226, 252, 255, 271, 286, 287, 290, 299, 321, 324, 327, 331, 376, 397, 407, 411, 412, 417, 420, 423, 426, 435, 436, 479, 547, 561, 582], "leq": [245, 361, 362, 403, 452, 464, 496, 517, 573], "lerp": 339, "less": [0, 276, 279, 310, 359, 363, 402, 403, 405, 506, 524], "let": [4, 24, 441, 442, 443, 498, 547], "level": [109, 117, 138, 139, 140, 141, 226, 230, 241, 242, 261, 382], "leverag": [17, 18, 19, 20, 31, 35, 103, 104, 111, 112, 131, 134, 143, 146, 171, 172, 173, 174, 175, 176, 194, 195, 196, 197, 198, 199, 215, 222, 349, 440, 594], "lfloor": [382, 454, 524], "li": [112, 146], "liao": 238, "librari": [5, 14, 20, 21, 268, 440, 445, 456, 474, 485, 486, 590], "lie": [247, 442, 477], "lightblu": 591, "lightgrai": 591, "lightgreen": 591, "lightweight": [20, 56, 64, 69, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 105, 112, 121, 124, 129, 130, 142, 146, 151, 152, 153, 154, 155, 156, 163, 180, 196, 197, 203, 214, 254, 257, 260, 349, 362, 366], "like": [3, 4, 17, 18, 19, 20, 61, 63, 65, 83, 109, 112, 126, 134, 171, 172, 173, 174, 175, 176, 188, 189, 190, 201, 220, 222, 236, 238, 244, 253, 254, 261, 264, 267, 268, 271, 274, 287, 292, 296, 357, 358, 367, 384, 385, 392, 396, 407, 408, 409, 411, 412, 413, 414, 471, 472, 505, 544, 580, 590, 592, 594], "likelihood": [313, 402, 405], "limit": [49, 56, 129, 130, 131, 133, 254, 260, 366, 442, 458, 517], "lin": 226, "linalg": 25, "linalgerror": [22, 23, 24, 26, 27, 28, 29, 30, 31, 32], "line": [20, 473], "linear": [15, 20, 21, 22, 29, 30, 31, 69, 96, 104, 112, 117, 124, 128, 137, 143, 144, 145, 146, 147, 148, 149, 177, 219, 220, 270, 271, 272, 274, 276, 277, 279, 280, 281, 297, 353, 354, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 377, 378, 382, 384, 386, 387, 388, 395, 396, 397, 400, 401, 402, 403, 404, 405, 407, 412, 415, 423, 424, 425, 426, 427, 428, 432, 434, 436, 441, 442, 443, 446, 474, 476, 503, 594], "linearli": 403, "linguist": 222, "linspac": 511, "linspace_tensor": 506, "list": [0, 1, 3, 4, 7, 20, 35, 44, 45, 59, 69, 74, 75, 76, 83, 96, 104, 113, 125, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 159, 170, 177, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 219, 223, 226, 241, 242, 252, 255, 258, 259, 261, 262, 267, 269, 270, 271, 272, 273, 319, 349, 397, 415, 445, 447, 448, 449, 450, 451, 452, 453, 454, 477, 480, 481, 482, 484, 486, 498, 500, 501, 502, 504, 505, 507, 508, 509, 510, 542, 548, 554, 555, 564, 567, 568, 576, 579], "listdir": 5, "liter": [18, 69, 159, 219, 226, 244, 267, 269, 307, 308, 309, 310, 312, 313, 335, 339, 342, 343, 344, 345, 346, 347, 349, 353, 354, 376, 377, 378, 379, 380, 381, 400, 401, 402, 403, 404, 405, 438, 448, 453, 469, 477, 479, 480, 481, 482, 484, 486, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 544, 547, 559, 566], "liu": 112, "ln": [364, 496], "load": [5, 8, 9, 10, 11, 12, 236, 254, 255, 267, 268, 269, 445, 450, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 474, 594], "load_state_dict": [226, 236, 237, 268, 445, 450, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 594], "loadabl": 594, "loader": [1, 2, 5], "local": [20, 35, 61, 63, 65, 73, 74, 75, 76, 112, 117, 136, 138, 141, 192, 193, 194, 195, 196, 197, 222, 240, 255, 261, 294, 376, 382, 448, 594], "locat": [112, 255, 335, 339, 566], "log": [193, 219, 226, 246, 255, 258, 261, 313, 400, 401, 402, 405, 447, 448, 449, 450, 451, 452, 453, 454, 511, 526, 547], "log2": 511, "log_2": [242, 526], "log_softmax": 405, "logarithm": [496, 523, 525, 526], "logic": [5, 237, 417, 418, 419, 440, 443, 445, 524], "logit": [33, 44, 217, 223, 224, 225, 258, 262, 283, 308, 369, 401, 402, 470], "logsoftmax": [402, 405], "logvar": 219, "long": [35, 96, 117, 139, 223, 263, 334, 463, 542], "look": [238, 252, 253], "lookup": [337, 430], "loop": [1, 17, 18, 19, 20, 271, 392, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467], "loss": [20, 29, 220, 224, 225, 238, 253, 254, 262, 270, 271, 272, 273, 274, 283, 307, 308, 309, 310, 312, 313, 334, 359, 360, 363, 365, 367, 368, 369, 371, 384, 387, 388, 389, 390, 397, 400, 401, 402, 403, 404, 405, 407, 408, 409, 412, 413, 414, 415, 441, 442, 443, 445, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 566, 571], "loss_fn": 401, "lost": 396, "low": [109, 124, 129, 130, 133, 261, 481, 484], "lower": [22, 69, 72, 123, 236, 356, 382, 433, 434, 435, 436, 448, 457, 465, 466, 467, 484, 517, 555, 572, 573], "lower_triangular": 572, "lowest": 481, "lp": 320, "lr": [20, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467], "lr_lambda": 451, "lr_schedul": 455, "lrschedul": 455, "ls_init_valu": 104, "lu": 26, "lucid": [0, 1, 2, 3, 4, 7, 9, 10, 11, 12, 16, 25, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 304, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 392, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 438, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 478, 511, 557, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 591, 593], "m": [93, 112, 204, 221, 224, 225, 249, 259, 260, 263, 270, 271, 274, 316, 373, 411, 424, 425, 427, 428, 432, 433, 436, 452, 460, 461, 462, 463, 464, 498, 503, 572, 573], "m1": 20, "m2": 20, "m3": 20, "m_": [460, 461, 462, 463, 464, 572, 573], "m_k": 4, "m_m": 434, "m_t": [434, 463, 464], "maaten": 112, "mac": 20, "machin": [5, 11, 12, 29, 112, 222, 238, 264, 348, 432, 460, 472, 483], "magnitud": [297, 337, 430, 442, 443, 465, 466, 590], "mai": [5, 14, 17, 19, 20, 24, 26, 29, 133, 219, 220, 236, 271, 273, 320, 341, 386, 392, 403, 446, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 470, 485, 549, 574, 584, 590, 592, 594], "main": [30, 109, 271, 500, 503, 551, 572, 573], "maintain": [3, 29, 35, 45, 50, 59, 68, 70, 74, 75, 76, 92, 93, 94, 95, 96, 97, 107, 112, 120, 123, 140, 141, 142, 144, 145, 146, 147, 170, 171, 172, 173, 174, 175, 176, 183, 184, 185, 186, 191, 193, 241, 245, 257, 267, 268, 270, 271, 272, 274, 281, 297, 353, 354, 357, 358, 359, 360, 367, 384, 386, 387, 388, 389, 390, 407, 408, 409, 412, 413, 414, 460, 465, 581, 584, 588], "major": [20, 261, 476], "make": [1, 5, 14, 35, 47, 48, 51, 52, 69, 100, 109, 112, 113, 122, 124, 126, 128, 129, 130, 132, 133, 135, 138, 147, 159, 194, 195, 196, 197, 198, 202, 203, 210, 213, 219, 222, 252, 253, 254, 271, 274, 368, 402, 403, 415, 424, 427, 440, 459, 460, 461, 462, 472, 474, 485, 491, 559, 567, 579, 590, 592], "manag": [268, 270, 271, 272, 273, 274, 440, 456, 470, 471, 473, 474, 485, 594], "manhattan": 28, "mani": [69, 594], "manipul": [14, 17, 270, 272, 590], "manner": [14, 17, 18, 192, 271, 274, 469], "manual": [14, 219, 307, 308, 309, 313, 382, 400, 401, 402, 405, 594], "map": [17, 19, 69, 71, 104, 112, 117, 157, 158, 159, 170, 180, 187, 219, 223, 235, 238, 239, 241, 242, 243, 258, 260, 261, 268, 282, 284, 291, 296, 315, 335, 348, 368, 371, 380, 386, 392, 410, 430, 470, 549, 566], "mark": [223, 238, 558, 591], "markovian": 221, "marri": 112, "mask": [112, 223, 267, 286, 373, 374, 384, 387, 388, 389, 390, 432, 433, 434, 435, 436, 558, 572, 573, 578], "masked_fil": 557, "match": [14, 15, 19, 20, 31, 59, 96, 220, 226, 236, 237, 238, 243, 250, 253, 254, 260, 268, 271, 274, 286, 290, 292, 307, 308, 310, 312, 319, 324, 326, 342, 343, 344, 385, 422, 430, 445, 498, 505, 523, 548, 563, 564, 567, 570, 576, 582, 590, 594], "matcher": [223, 224, 225], "math": [373, 518, 533, 539], "mathbb": [220, 252, 255, 258, 261, 373, 567], "mathbf": [4, 17, 18, 19, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 35, 215, 220, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 286, 304, 306, 334, 339, 345, 346, 347, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 374, 376, 377, 378, 379, 380, 381, 384, 387, 388, 389, 390, 392, 395, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 412, 413, 414, 415, 423, 424, 425, 426, 427, 428, 489, 490, 491, 495, 512, 513, 514, 515, 517, 518, 519, 520, 523, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 550, 556, 561, 562, 563, 564, 568, 569, 570, 572, 573, 574, 576, 577, 581, 582, 583, 584, 585, 586, 587, 588], "mathcal": [219, 220, 226, 252, 255, 258, 261, 353, 355, 357, 384, 387, 388, 389, 390, 400, 401, 402, 403, 404, 405, 407, 408, 409, 412, 413, 414, 415, 547], "mathemat": [20, 26, 342, 343, 344, 583, 585, 586, 587], "mathrm": [29, 521, 522, 531], "matmul": [382, 498, 511], "matplotlib": 591, "matric": [21, 23, 24, 26, 29, 31, 32, 334, 373, 436, 489, 490, 491, 503, 559, 572, 573], "matrix": [15, 17, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 35, 294, 304, 334, 337, 382, 397, 398, 430, 440, 489, 498, 538, 559], "matrix_pow": 25, "matthew": 112, "max": [14, 28, 69, 177, 204, 223, 224, 225, 261, 280, 320, 324, 325, 326, 331, 332, 333, 337, 340, 361, 362, 365, 366, 401, 420, 421, 422, 426, 427, 428, 430, 441, 442, 447, 448, 453, 462, 492, 511, 517, 553], "max_box": 244, "max_lr": 448, "max_norm": [337, 430, 441], "max_pool": [426, 427, 428], "max_pool1d": [303, 330], "max_pool2d": [303, 330], "max_pool3d": [303, 330], "max_valu": 517, "maxim": [5, 53, 134], "maximum": [28, 122, 223, 224, 225, 238, 240, 244, 250, 255, 258, 340, 365, 366, 426, 427, 428, 441, 447, 448, 460, 462, 511, 517, 527, 553, 586], "maxpool": [33, 217], "maxpool1d": [394, 429], "maxpool1dmodel": 426, "maxpool2d": [271, 274, 377, 394, 429], "maxpool2dmodel": 427, "maxpool3d": [378, 394, 429], "maxpool3dmodel": 428, "maxvit": [118, 119, 120, 121, 122], "maxvit_bas": 112, "maxvit_larg": [112, 119], "maxvit_smal": 112, "maxvit_tini": [112, 120], "maxvit_xlarg": 112, "mb": 593, "mbconv": 117, "mean": [9, 10, 11, 12, 14, 17, 18, 19, 30, 157, 158, 219, 239, 240, 243, 252, 267, 281, 287, 288, 289, 295, 307, 308, 309, 310, 312, 313, 314, 316, 318, 342, 343, 344, 355, 359, 360, 361, 363, 365, 367, 368, 371, 378, 384, 392, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 411, 412, 413, 414, 415, 441, 453, 460, 461, 462, 463, 464, 465, 471, 482, 511, 517, 523, 525, 526, 527, 529, 533, 535, 537, 541, 542, 543, 579, 582, 590], "meaning": [18, 274], "meant": 250, "measur": [400, 402, 404, 405, 443], "mechan": [35, 59, 69, 73, 74, 75, 76, 96, 112, 117, 137, 138, 139, 140, 141, 146, 157, 158, 177, 187, 191, 193, 194, 195, 196, 197, 198, 201, 202, 209, 235, 263, 264, 273, 304, 373, 549], "media": 112, "medic": [292, 381], "medium": [52, 56, 60, 93, 112, 131, 132, 135, 140, 232, 258, 259, 261], "meet": [112, 420], "mem_is_caus": [433, 434], "mem_key_padding_mask": [432, 433, 434], "mem_mask": [432, 433, 434], "member": 594, "membership": 400, "memori": [2, 5, 20, 70, 77, 146, 432, 433, 434, 441, 473, 501, 502], "merg": [17, 69, 71, 72, 112, 240, 244, 392], "mergesort": [547, 566], "meshgrid": 557, "meta": 594, "metablock": 96, "metal": [4, 469, 486], "method": [5, 14, 18, 20, 21, 26, 83, 177, 215, 216, 235, 253, 254, 270, 271, 272, 273, 274, 307, 308, 309, 310, 312, 313, 335, 353, 354, 357, 358, 400, 401, 402, 403, 404, 405, 438, 442, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 485], "metric": [453, 593], "mha": 373, "mid": [7, 98, 107, 213], "mid_channel": [129, 130], "middl": [118, 119, 472], "might": 440, "migrat": [20, 226], "mileston": 452, "mimic": [72, 505], "min": [361, 362, 366, 442, 447, 448, 453, 493, 511, 517, 553], "min_lr": 453, "min_siz": 244, "min_valu": 517, "mind": [0, 5, 271, 274, 473, 531], "mingx": [112, 238], "mini": [1, 316, 411], "minibackbon": 239, "minim": [8, 105, 112, 125, 274, 400, 402, 403, 404, 405, 407, 408, 409, 412, 413, 414, 415, 456], "minima": 448, "minimalist": 20, "minimum": [244, 245, 447, 448, 453, 511, 517, 529, 553], "minu": 368, "mirror": [3, 508, 510], "misclassifi": 226, "mish": [261, 262, 372, 394], "mismatch": [14, 17, 19, 83, 117, 236, 237, 268, 392, 440, 445, 594], "miss": [268, 440, 476, 594], "mitig": [69, 279, 359, 363, 367, 407, 408, 409], "mix": [104, 470, 473], "mixer": 104, "mlp": [20, 59, 96, 104, 117, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 192, 193, 349], "mlp_dim": 209, "mlp_ratio": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 96, 104, 117, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 192, 193], "mlx": [4, 122, 469, 486, 504, 547], "mnist": [8, 11, 13, 114, 115, 593], "mnist_train": [8, 12], "mobil": [96, 97, 112, 123, 124, 125, 126, 128, 129, 130, 133, 143], "mobilenet": [124, 125, 126, 128, 129, 130, 132, 133, 134, 135, 366], "mobilenet_v2": 112, "mobilenet_v2_weight": 593, "mobilenet_v3": [129, 130], "mobilenet_v3_larg": 112, "mobilenet_v3_large_weight": 593, "mobilenet_v3_smal": 112, "mobilenet_v3_small_weight": 593, "mobilenet_v4": [131, 132, 133, 134, 135], "mobilenet_v4_conv_larg": 112, "mobilenet_v4_conv_medium": 112, "mobilenet_v4_conv_smal": 112, "mobilenet_v4_hybrid_larg": 112, "mobilenet_v4_hybrid_medium": 112, "mobilenetv2": [112, 124], "mobilenetv3": [112, 125, 129, 130], "mode": [20, 96, 223, 224, 225, 301, 314, 318, 334, 335, 339, 353, 354, 384, 386, 387, 388, 389, 390, 438, 448, 453, 486, 561], "model": [1, 5, 8, 14, 20, 27, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 283, 286, 290, 291, 296, 337, 341, 342, 343, 344, 349, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 381, 382, 384, 386, 387, 388, 392, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 412, 415, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 441, 442, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 470, 473, 474, 475, 476, 485, 516, 579, 580, 590, 591, 592], "model_b0": 82, "model_b7": 82, "model_tini": 104, "moder": [48, 52, 108, 132, 147, 181], "modern": [20, 44, 45, 104, 112], "modif": [216, 274, 443], "modifi": [20, 34, 60, 61, 62, 63, 64, 65, 66, 67, 68, 97, 131, 159, 215, 218, 270, 271, 272, 273, 351, 353, 354, 355, 356, 357, 358, 384, 441, 442, 443, 446, 471, 483, 486, 547, 556, 558, 565, 574, 577], "modul": [9, 10, 11, 12, 14, 20, 33, 34, 35, 44, 45, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 73, 82, 83, 96, 97, 98, 99, 100, 103, 104, 109, 110, 111, 112, 113, 117, 123, 124, 125, 126, 135, 136, 137, 159, 170, 177, 187, 192, 193, 204, 215, 217, 218, 220, 223, 226, 235, 239, 240, 241, 242, 243, 244, 255, 256, 257, 258, 259, 261, 262, 264, 267, 269, 270, 271, 272, 273, 274, 297, 342, 343, 344, 345, 346, 347, 348, 349, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 392, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 445, 446, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 474, 475, 476, 485, 580, 590, 592, 594], "modular": [5, 20, 219, 220, 222, 264, 268, 271, 274, 440, 590], "moduledict": [271, 272, 274, 275], "modulelist": [273, 274, 275], "moment": [460, 461, 462, 463, 464], "momentum": [314, 318, 342, 343, 344, 407, 408, 409, 412, 413, 414, 448, 457, 463, 465, 467], "momentum_decai": 463, "monitor": [441, 443, 453], "monoton": [364, 370], "moor": 29, "more": [4, 5, 8, 11, 14, 15, 24, 47, 61, 63, 65, 69, 76, 118, 119, 120, 139, 140, 141, 145, 159, 166, 199, 200, 202, 203, 231, 236, 239, 255, 260, 262, 266, 270, 271, 274, 296, 340, 345, 346, 347, 359, 387, 388, 389, 390, 401, 432, 440, 442, 445, 456, 457, 458, 461, 462, 465, 466, 467, 482, 491, 498, 541, 569, 572, 573, 590, 592], "most": [21, 51, 99, 112, 138, 222, 227, 234, 252, 427, 580, 581, 590], "mostli": 531, "move": [4, 20, 457, 465, 594], "mse": [219, 220, 310, 312, 403, 404], "mse_loss": [20, 303, 311], "mseloss": [394, 406], "mu": [35, 219, 355, 407, 408, 409, 412, 413, 414, 415, 543], "mu_c": 582, "mu_g": [316, 411], "mu_i": [412, 413, 414], "much": [138, 226, 590], "mul": 494, "multi": [5, 8, 15, 59, 61, 63, 65, 74, 75, 76, 104, 110, 112, 117, 136, 137, 142, 143, 144, 145, 147, 148, 149, 187, 188, 189, 190, 194, 195, 196, 197, 198, 200, 201, 202, 203, 209, 226, 230, 238, 241, 244, 255, 264, 283, 286, 309, 313, 349, 369, 373, 402, 405, 432, 434, 436, 470, 486, 528, 537, 543], "multi_conv": [59, 61, 63, 65], "multidimension": [480, 484, 501], "multiheadattent": [375, 394], "multipl": [1, 5, 15, 17, 20, 21, 27, 31, 33, 59, 61, 63, 65, 69, 159, 177, 191, 219, 222, 223, 242, 253, 261, 272, 273, 274, 294, 339, 341, 348, 349, 373, 382, 384, 387, 388, 389, 390, 392, 402, 405, 433, 435, 440, 446, 449, 453, 472, 477, 480, 481, 482, 484, 489, 494, 498, 501, 502, 538, 549, 567, 574, 579, 584, 590], "multipli": [27, 127, 255, 273, 306, 398, 438, 452, 453, 454, 466, 495, 511, 526], "multiscaleroialign": 248, "multisteplr": 455, "must": [0, 1, 4, 5, 7, 20, 22, 23, 24, 26, 27, 30, 31, 32, 59, 96, 219, 220, 223, 226, 236, 237, 243, 250, 255, 268, 270, 271, 272, 273, 274, 290, 297, 316, 319, 340, 373, 384, 386, 387, 388, 389, 390, 401, 405, 411, 430, 432, 434, 436, 438, 445, 450, 475, 476, 477, 541, 548, 549, 550, 556, 558, 561, 563, 564, 567, 569, 570, 572, 573, 577, 581, 582, 583, 584, 585, 587, 594], "mx": [469, 486], "my_checkpoint": 594, "my_simple_model": 474, "my_state_dict": 594, "mydataset": 3, "mymodel": [268, 269, 440, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467], "myoptim": [445, 456], "n": [4, 7, 17, 27, 28, 112, 159, 171, 172, 173, 174, 175, 176, 188, 189, 190, 219, 220, 221, 226, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 258, 261, 263, 270, 271, 274, 286, 287, 288, 289, 290, 291, 292, 294, 296, 299, 300, 301, 304, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 339, 341, 342, 343, 344, 348, 353, 355, 357, 373, 374, 376, 377, 378, 379, 380, 381, 382, 389, 390, 395, 398, 400, 401, 402, 404, 405, 407, 408, 409, 410, 412, 413, 414, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 432, 433, 434, 435, 436, 441, 442, 443, 479, 498, 503, 521, 522, 528, 531, 541, 543, 547, 555, 560, 594], "n1": 28, "n2": 443, "n_i": 223, "nabla": [521, 522, 574], "nabla_": [458, 459, 460, 461, 462, 463, 464, 466], "nabla_t": 464, "nadam": 468, "nair": [9, 10], "name": [3, 14, 17, 18, 19, 112, 221, 238, 263, 268, 270, 272, 274, 392, 474, 476, 593, 594], "nan": [30, 32], "nano": [55, 112], "narrow": 254, "natur": [29, 376, 395, 423, 426, 432, 496, 523, 524, 525], "ndarrai": [4, 20, 267, 269, 477, 486, 500, 502, 505, 508, 510, 544], "ndim": [30, 32, 269, 486], "ne": 27, "nearest": [335, 339, 438, 524, 531], "nearli": 486, "necessari": [8, 9, 10, 11, 12, 20, 29, 245, 441, 556, 577], "neck": 262, "need": [2, 8, 18, 19, 135, 235, 263, 271, 272, 273, 283, 290, 291, 340, 395, 401, 432, 440, 446, 447, 448, 449, 450, 451, 452, 453, 454, 501, 502, 579, 580, 590], "neg": [27, 29, 32, 226, 276, 313, 340, 341, 359, 363, 365, 367, 402, 405, 466, 521, 522, 531, 547, 550, 551, 578], "negative_slop": [279, 363], "neglect": 273, "neighbor": [335, 339], "neq": [28, 521], "nest": [262, 271, 274, 440, 470, 473], "nesterov": 463, "net": [112, 217, 220, 236, 237, 239, 240], "network": [5, 8, 14, 18, 33, 34, 35, 44, 45, 69, 75, 77, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 103, 109, 112, 116, 123, 126, 127, 131, 134, 150, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 177, 178, 179, 180, 181, 182, 187, 204, 209, 218, 220, 221, 222, 235, 236, 237, 238, 239, 240, 241, 242, 255, 261, 264, 267, 268, 269, 270, 271, 272, 273, 274, 277, 280, 281, 282, 283, 284, 287, 288, 289, 291, 296, 297, 304, 306, 314, 335, 341, 348, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 376, 377, 378, 380, 381, 384, 385, 386, 387, 388, 389, 390, 392, 395, 397, 398, 400, 402, 403, 404, 405, 407, 408, 409, 410, 412, 415, 423, 424, 425, 426, 427, 428, 430, 432, 434, 436, 440, 441, 442, 445, 456, 457, 465, 467, 484, 485, 486, 499, 507, 509, 527, 529, 561, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 592], "neural": [5, 8, 14, 18, 33, 34, 35, 44, 82, 84, 85, 86, 87, 88, 89, 90, 91, 109, 112, 116, 218, 220, 221, 222, 235, 239, 240, 255, 263, 267, 268, 269, 270, 271, 272, 273, 274, 277, 280, 281, 282, 283, 284, 287, 288, 289, 297, 304, 306, 314, 341, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 376, 377, 378, 384, 385, 386, 387, 388, 389, 390, 392, 395, 397, 398, 400, 402, 403, 404, 405, 407, 408, 409, 410, 412, 415, 423, 424, 425, 426, 427, 428, 430, 440, 445, 456, 457, 465, 467, 484, 485, 486, 499, 507, 509, 527, 529, 561, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 592], "neuralnetwork": [361, 362, 364, 365, 370], "neurip": 221, "neuron": 363, "never": [547, 584], "new": [15, 19, 112, 220, 222, 247, 268, 269, 276, 277, 279, 280, 281, 282, 284, 304, 306, 339, 340, 349, 353, 354, 355, 356, 357, 358, 445, 450, 453, 473, 474, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 502, 505, 512, 513, 514, 515, 516, 517, 518, 519, 520, 523, 524, 525, 526, 527, 529, 530, 531, 532, 533, 534, 535, 536, 538, 539, 540, 541, 542, 544, 548, 550, 556, 558, 561, 563, 564, 565, 569, 570, 572, 573, 576, 577, 578], "new_box": 245, "new_tensor": 538, "next": [219, 274, 579], "ni": 226, "nicola": 238, "nll": 313, "nll_loss": [303, 311], "nllloss": [394, 406], "nlp": [222, 337, 430], "nm": [223, 237, 238, 240, 244, 248, 255, 258], "nms_iou_thresh": 240, "nn": [9, 10, 11, 12, 33, 35, 44, 45, 59, 69, 73, 77, 82, 83, 96, 100, 104, 109, 113, 117, 123, 124, 125, 126, 136, 137, 143, 144, 145, 147, 148, 149, 159, 170, 177, 183, 184, 185, 186, 187, 191, 192, 193, 204, 217, 219, 220, 223, 226, 235, 237, 239, 240, 241, 242, 243, 244, 252, 255, 256, 257, 258, 259, 261, 262, 275, 278, 285, 293, 302, 305, 311, 317, 330, 336, 338, 350, 352, 372, 375, 383, 391, 393, 394, 399, 406, 416, 429, 431, 437, 439, 444, 445, 446, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 474, 476, 580, 590, 591, 594], "no_grad": [20, 220, 471], "node": [20, 486], "nois": [32, 221, 485], "non": [7, 24, 27, 29, 32, 112, 117, 223, 238, 240, 244, 250, 255, 258, 273, 277, 279, 280, 334, 340, 353, 354, 359, 360, 361, 363, 364, 365, 366, 367, 368, 370, 371, 384, 387, 388, 389, 390, 432, 433, 434, 435, 436, 442, 460, 461, 479, 496, 498, 516, 517, 524, 531, 560, 575], "nonconform": 20, "none": [0, 1, 2, 7, 9, 10, 11, 12, 15, 20, 28, 35, 59, 69, 73, 82, 83, 96, 100, 104, 109, 113, 123, 124, 125, 126, 136, 137, 150, 159, 192, 193, 215, 219, 220, 223, 239, 241, 242, 243, 244, 252, 255, 258, 261, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 294, 297, 304, 306, 307, 308, 309, 310, 312, 313, 314, 316, 318, 319, 337, 340, 341, 342, 343, 344, 345, 346, 347, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 384, 385, 386, 387, 388, 389, 390, 392, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 438, 441, 442, 443, 445, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 472, 475, 477, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 550, 553, 554, 556, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 585, 587, 588, 591], "nonzero": 557, "noobj": [252, 255, 258, 261], "norm": [21, 25, 59, 69, 73, 96, 117, 120, 121, 136, 137, 192, 193, 320, 337, 411, 430, 433, 435, 441, 443, 462, 592], "norm_first": [432, 434, 436], "norm_lay": [59, 73, 96, 117, 136, 137, 143, 144, 145, 147, 148, 149, 192, 193], "norm_layer_cl": 96, "norm_layer_tf": 117, "norm_typ": [337, 430, 441, 443], "normal": [9, 10, 11, 12, 35, 44, 59, 69, 73, 96, 112, 117, 136, 137, 143, 144, 145, 147, 148, 149, 177, 192, 193, 198, 199, 200, 201, 202, 203, 223, 224, 225, 226, 239, 240, 252, 253, 254, 255, 277, 281, 283, 284, 296, 314, 315, 316, 318, 319, 334, 335, 337, 342, 343, 344, 352, 353, 357, 360, 367, 369, 384, 407, 408, 409, 410, 411, 412, 413, 414, 415, 430, 432, 433, 434, 435, 436, 441, 465, 482, 485, 553, 554, 555, 579, 589, 590], "normalized_shap": [319, 415], "notat": [14, 15, 17, 18, 19, 392], "note": [287, 384], "notebook": 592, "noth": [295, 298, 299, 300], "notimplementederror": [2, 268, 445], "notin": 517, "nov": 112, "novel": [11, 112, 117, 222], "now": [20, 237, 594], "np": [159, 171, 172, 173, 174, 175, 176, 188, 189, 190, 267, 269, 348, 402, 405, 430, 469, 479, 486, 491, 498, 499, 500, 503, 507, 509, 510, 538, 544, 580], "npy": [9, 10, 11, 12], "num": [433, 435, 506], "num_anchor": [226, 255, 256, 257], "num_block": [35, 69], "num_box": [252, 253, 254], "num_channel": 411, "num_class": [33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 340, 369, 402, 405, 594], "num_decoder_lay": [264, 432], "num_embed": [337, 430], "num_encoder_lay": [264, 432], "num_featur": [274, 342, 343, 344, 407, 408, 409, 412, 413, 414], "num_group": [316, 411], "num_head": [35, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 76, 117, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 209, 264, 373, 432, 433, 434, 435, 436], "num_init_featur": [77, 78, 79, 80, 81], "num_lay": [209, 433, 435], "num_paramet": 273, "num_pos_feat": 223, "num_queri": [223, 224, 225], "num_stag": 137, "num_vit": [96, 97, 98, 99], "number": [0, 1, 2, 3, 4, 7, 9, 10, 11, 12, 14, 17, 19, 23, 24, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 243, 244, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 269, 271, 273, 274, 286, 287, 288, 289, 290, 291, 292, 294, 299, 300, 301, 304, 306, 309, 313, 314, 315, 316, 318, 321, 322, 323, 335, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 353, 354, 357, 358, 368, 373, 376, 377, 378, 379, 380, 381, 382, 392, 395, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 424, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 443, 447, 448, 452, 453, 454, 457, 469, 479, 480, 483, 484, 486, 496, 499, 501, 503, 506, 527, 528, 529, 531, 542, 543, 545, 546, 549, 550, 553, 554, 555, 556, 560, 561, 563, 564, 565, 568, 570, 571, 577, 582, 584, 585, 587, 590], "numer": [18, 26, 29, 245, 296, 307, 308, 309, 314, 315, 316, 318, 319, 320, 340, 342, 343, 344, 366, 385, 400, 401, 402, 407, 408, 409, 410, 411, 412, 413, 414, 415, 432, 434, 436, 458, 459, 460, 461, 462, 463, 464, 465, 479, 486, 488, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 544, 580], "numpi": [20, 267, 269, 402, 405, 469, 475, 476, 479, 486, 491, 504, 538, 541, 548, 561, 563, 570, 580, 590], "o": [5, 227, 228, 229, 255, 259, 260, 262, 263, 373, 425, 428, 507, 508, 547], "obei": 594, "obj": [252, 255, 258, 261, 476], "obj_bal": [261, 262], "objdet": [241, 242, 243, 244, 245, 246, 247, 249, 250, 252], "object": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594], "observ": 460, "obtain": [1, 117, 219], "occur": [19, 341, 470, 473, 474, 550], "occurr": 27, "odot": [384, 387, 388, 389, 390], "off": [48, 132, 254, 471], "offer": [8, 14, 45, 46, 48, 58, 76, 98, 107, 118, 119, 122, 132, 140, 141, 143, 145, 210, 229, 236, 440, 456, 485, 547, 590], "offici": 260, "offset": [245, 246, 255, 258, 261, 503, 551], "often": [7, 27, 168, 169, 287, 288, 289, 291, 292, 294, 335, 337, 379, 385, 402, 405, 441, 499, 509, 580, 584, 588, 590], "old": 453, "older": 463, "omit": 223, "onc": [235, 237, 238, 239, 252, 253], "one": [0, 15, 18, 112, 183, 184, 185, 186, 191, 222, 223, 224, 225, 226, 227, 228, 238, 252, 255, 258, 261, 273, 274, 283, 287, 290, 306, 327, 331, 340, 342, 343, 344, 367, 368, 369, 376, 379, 388, 402, 405, 407, 412, 423, 426, 438, 445, 470, 472, 473, 476, 482, 497, 504, 505, 508, 527, 529, 551, 552, 562, 569, 574, 580, 594], "one_hot": [303, 338], "ones": [20, 226, 304, 306, 316, 325, 326, 376, 377, 378, 398, 407, 408, 409, 412, 413, 414, 415, 421, 422, 440, 503, 504, 508, 511, 549], "ones_lik": 511, "onli": [3, 7, 69, 238, 252, 253, 334, 335, 339, 340, 361, 365, 384, 385, 387, 388, 389, 390, 400, 401, 402, 405, 407, 408, 409, 411, 412, 413, 414, 415, 426, 427, 428, 443, 466, 470, 471, 476, 499, 517, 527, 529, 538, 541, 547, 551, 561, 562, 564, 565, 568, 571, 572, 573], "onto": [30, 32, 239], "openml": [9, 10, 11, 12, 20], "oper": [5, 14, 15, 17, 18, 19, 20, 21, 26, 29, 35, 59, 61, 63, 65, 117, 146, 157, 158, 177, 178, 179, 180, 181, 182, 239, 261, 267, 268, 271, 276, 277, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 294, 297, 301, 304, 306, 321, 322, 323, 327, 328, 329, 331, 332, 333, 339, 341, 342, 343, 344, 345, 346, 347, 348, 349, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 374, 376, 377, 378, 379, 380, 382, 384, 386, 387, 388, 389, 390, 392, 395, 396, 397, 398, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 430, 440, 442, 470, 471, 472, 477, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 499, 501, 502, 507, 509, 521, 522, 523, 525, 526, 527, 528, 529, 531, 533, 535, 537, 538, 541, 543, 550, 556, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 580, 582, 588, 591, 592], "operand": 486, "operatornam": [27, 29, 373, 432, 433, 434, 435, 436, 441, 442, 443, 479, 545, 546, 547], "opposit": [457, 565], "optim": [5, 14, 18, 20, 21, 27, 29, 30, 32, 44, 49, 50, 53, 56, 58, 64, 67, 68, 69, 77, 83, 92, 93, 94, 95, 96, 100, 101, 102, 103, 106, 109, 110, 111, 112, 124, 125, 129, 130, 132, 133, 134, 135, 138, 198, 199, 233, 237, 238, 253, 260, 267, 269, 272, 273, 294, 376, 377, 378, 430, 440, 441, 442, 447, 448, 449, 450, 451, 452, 453, 454], "optimizer_st": [445, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467], "option": [1, 7, 9, 10, 11, 12, 14, 17, 18, 19, 28, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 223, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 250, 253, 254, 255, 256, 257, 258, 259, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 279, 283, 286, 288, 289, 290, 291, 292, 295, 296, 297, 298, 299, 300, 301, 304, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 327, 328, 329, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 353, 354, 355, 356, 357, 358, 359, 363, 369, 374, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 392, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 438, 441, 443, 445, 447, 448, 449, 450, 451, 452, 453, 454, 457, 465, 467, 477, 479, 480, 481, 482, 484, 486, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 517, 521, 522, 527, 528, 529, 531, 537, 542, 543, 544, 545, 546, 547, 549, 550, 551, 553, 554, 555, 559, 563, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 580, 584, 585, 587, 591], "ord": [28, 320], "order": [1, 5, 14, 20, 28, 32, 270, 271, 272, 273, 274, 441, 443, 479, 498, 542, 547, 566, 571, 575, 579], "ordered_dict": 274, "ordereddict": [268, 270, 271, 274, 475, 476], "organ": [59, 270, 271, 272, 274, 474], "orient": 590, "origin": [3, 7, 36, 37, 38, 39, 40, 41, 42, 43, 45, 69, 70, 72, 102, 112, 116, 192, 193, 203, 219, 220, 221, 239, 240, 252, 253, 254, 256, 257, 259, 261, 295, 341, 348, 371, 396, 470, 516, 524, 547, 549, 561, 562, 563, 564, 565, 566, 570, 571, 575, 576, 588], "orthogon": [29, 30, 32], "orthonorm": 30, "oscil": [457, 465, 467], "other": [2, 5, 26, 61, 63, 65, 102, 111, 112, 113, 116, 132, 136, 220, 239, 261, 267, 268, 271, 274, 353, 354, 384, 385, 396, 440, 442, 445, 471, 485, 499, 501, 507, 509, 541, 559, 571, 590], "otherwis": [160, 161, 162, 163, 164, 165, 166, 167, 178, 179, 180, 181, 182, 219, 226, 237, 255, 276, 279, 280, 281, 283, 297, 316, 340, 359, 361, 362, 363, 365, 367, 369, 386, 387, 388, 389, 390, 403, 423, 424, 425, 426, 427, 428, 433, 435, 441, 445, 466, 474, 492, 493, 527, 529, 545, 546, 558, 571, 572, 573, 575], "otim": [29, 304, 395], "out": [0, 5, 8, 14, 20, 227, 228, 229, 230, 231, 232, 233, 234, 240, 241, 242, 243, 256, 257, 259, 260, 262, 276, 277, 279, 280, 281, 282, 284, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 304, 306, 314, 315, 316, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 339, 353, 354, 357, 358, 374, 376, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 392, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 434, 441, 442, 443, 457, 479, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 539, 540, 541, 542, 543, 545, 546, 547, 550, 552, 556, 561, 562, 563, 564, 568, 569, 570, 572, 573, 576, 577, 578, 591], "out_channel": [69, 113, 125, 129, 130, 241, 271, 274, 342, 343, 344, 345, 346, 347, 349, 376, 377, 378, 379, 380, 381, 408, 409, 423, 424, 425, 426, 427, 428, 440], "out_featur": [270, 271, 274, 304, 306, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 377, 378, 384, 387, 388, 395, 396, 398, 400, 401, 402, 403, 404, 405, 407, 412, 415, 423, 424, 425, 426, 427, 428], "outcom": [584, 585, 587], "outer": [15, 511], "outlier": [310, 403], "output": [0, 1, 2, 14, 15, 19, 20, 27, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 223, 224, 225, 227, 228, 235, 236, 237, 239, 240, 253, 254, 256, 257, 259, 262, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 299, 300, 301, 304, 306, 320, 321, 322, 323, 324, 325, 326, 334, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 353, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 438, 440, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 471, 472, 473, 477, 479, 481, 482, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 500, 502, 503, 504, 507, 509, 510, 516, 523, 524, 525, 526, 527, 528, 529, 531, 533, 535, 537, 538, 541, 542, 543, 547, 554, 558, 559, 560, 561, 563, 565, 567, 570, 574, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 591], "output_height": 294, "output_lay": [271, 274], "output_pad": [290, 291, 292, 379, 380, 381], "output_s": [242, 243, 271, 321, 322, 323, 324, 325, 326, 417, 418, 419, 420, 421, 422], "output_width": 294, "output_with_norm": [337, 430], "output_with_pad": [337, 430], "outsid": [0, 386, 470], "over": [0, 1, 2, 3, 5, 15, 18, 21, 124, 134, 157, 158, 187, 217, 219, 221, 223, 235, 236, 239, 249, 250, 255, 268, 271, 273, 283, 316, 321, 322, 323, 324, 325, 326, 348, 369, 376, 377, 378, 379, 380, 381, 402, 405, 407, 408, 409, 411, 412, 413, 414, 415, 418, 419, 422, 423, 424, 425, 426, 427, 428, 442, 446, 448, 454, 457, 458, 459, 460, 461, 480, 484, 498, 527, 528, 529, 537, 541, 543, 584, 585, 587], "overal": [215, 297, 442], "overdetermin": 29, "overfit": [1, 33, 217, 298, 301, 385, 387, 388, 389, 390, 457, 460, 465, 467], "overhead": [112, 125, 348], "overlap": [7, 112, 117, 240, 244, 250], "overli": 366, "overrid": [2, 5, 59, 120, 121, 132, 133, 134, 192, 193, 253, 254, 547], "overridden": [268, 445], "overshoot": 446, "overwrit": [270, 272], "own": [8, 20, 237, 270, 271, 272, 273, 287, 288, 289, 290, 291, 358, 440, 582, 594], "p": [28, 29, 82, 221, 226, 252, 255, 258, 261, 269, 272, 273, 295, 296, 297, 298, 299, 300, 301, 320, 337, 382, 384, 385, 387, 388, 389, 390, 423, 426, 427, 430, 441, 442, 443, 584, 585, 587, 590], "p_": [255, 258, 261], "p_d": [425, 428], "p_h": [382, 424, 425, 428], "p_i": 252, "p_t": 226, "p_w": [382, 424, 425, 428], "packag": [2, 5, 7, 8, 14, 21, 222, 440, 456, 474, 483, 485, 580, 590, 592, 594], "pad": [113, 223, 235, 239, 240, 271, 274, 287, 288, 289, 290, 291, 292, 294, 321, 322, 323, 324, 327, 328, 329, 331, 332, 333, 335, 337, 342, 343, 344, 345, 346, 347, 349, 376, 377, 378, 379, 380, 381, 382, 408, 409, 417, 418, 419, 420, 423, 424, 425, 426, 427, 428, 430, 557, 591], "pad_after_dim1": 561, "pad_after_dim2": 561, "pad_before_dim1": 561, "pad_before_dim2": 561, "pad_width": 561, "padding_height": 294, "padding_idx": [337, 430], "padding_mod": 335, "padding_width": 294, "pair": [4, 223, 304], "pan": [261, 262], "panda": [20, 112], "panet": [261, 262], "pang": [112, 238], "paper": [36, 37, 38, 39, 40, 41, 42, 43, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 101, 146], "paradigm": [71, 112], "parallel": [1, 5, 59, 112, 187, 261, 263, 373], "param": [268, 269, 272, 273, 445, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467], "param1": 268, "param_dict": 272, "param_group": [445, 456], "param_groups_setup": 445, "param_list": 273, "param_s": 474, "paramet": [0, 2, 20, 112, 114, 115, 116, 221, 238, 263, 268, 440, 445, 446, 456, 485, 590, 592, 593, 594], "parameter": 126, "parameterdict": 275, "parameterlist": 275, "parent": [3, 20, 440, 486], "pars": 469, "part": [69, 112, 255, 258, 267, 268, 290, 358, 379, 380, 396, 430, 440, 471, 485, 499, 500, 503, 507, 508, 509, 510, 549, 551, 567, 572, 573, 580, 590], "partial": [3, 20, 22, 23, 24, 26, 27, 28, 29, 31, 32, 70, 71, 72, 112, 226, 276, 277, 279, 280, 281, 282, 283, 284, 304, 306, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 376, 377, 378, 379, 380, 384, 387, 388, 389, 390, 395, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 412, 413, 414, 415, 423, 424, 425, 426, 427, 428, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 548, 550, 556, 558, 559, 561, 562, 563, 564, 565, 568, 569, 570, 571, 572, 573, 576, 577, 578], "particip": [20, 269, 580], "particular": [270, 272], "particularli": [29, 59, 61, 63, 65, 117, 124, 132, 171, 172, 173, 174, 175, 176, 236, 271, 272, 273, 274, 283, 296, 306, 342, 343, 344, 345, 346, 347, 369, 398, 401, 402, 405, 412, 413, 414, 415, 447, 461, 471, 474, 506, 524, 579], "partit": [72, 112, 117, 421, 516, 567], "pascal": [236, 237, 253, 254, 256, 257], "pass": [2, 20, 29, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 69, 70, 71, 72, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 125, 127, 128, 129, 130, 146, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 168, 169, 170, 171, 172, 173, 174, 175, 176, 183, 184, 185, 186, 187, 188, 189, 190, 191, 204, 205, 206, 207, 208, 217, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 237, 238, 239, 240, 252, 255, 256, 257, 258, 259, 262, 268, 269, 270, 271, 272, 273, 274, 334, 339, 342, 343, 344, 348, 349, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 377, 378, 379, 380, 384, 385, 386, 387, 388, 389, 390, 395, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 412, 415, 423, 424, 425, 426, 427, 428, 432, 433, 434, 435, 436, 440, 470, 486, 504, 505, 506, 528, 537, 541, 542, 543, 547, 550, 556, 562, 564, 568, 572, 573, 577, 580, 590, 594], "past": [457, 458, 460, 465], "patch": [59, 61, 63, 65, 112, 117, 136, 137, 192, 193, 209, 210, 211, 212, 213, 214, 240, 294, 382, 424], "patch_norm": [192, 193], "patch_siz": [59, 136, 137, 143, 144, 145, 146, 147, 148, 149, 192, 193, 209, 210, 211, 212, 213, 214], "path": [5, 9, 10, 11, 12, 44, 45, 59, 69, 70, 71, 96, 104, 117, 137, 261, 297, 386, 475, 476], "pathlib": 476, "pathwai": 112, "patienc": 453, "pattern": [14, 15, 17, 18, 19, 20, 35, 61, 63, 65, 112, 222, 238, 280, 348, 365, 376, 377, 378, 392], "pedagog": 20, "penal": [457, 465, 467], "penalti": [458, 459, 460, 461, 462, 463, 464], "penros": 29, "per": [1, 17, 121, 125, 137, 143, 144, 145, 147, 148, 149, 171, 172, 173, 174, 175, 176, 188, 189, 190, 223, 224, 225, 226, 235, 238, 239, 240, 241, 244, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 286, 321, 325, 373, 382, 392, 401, 411, 412, 413, 414, 415, 417, 422, 436, 442, 448, 548, 594], "perceptron": 104, "perform": [5, 14, 15, 18, 20, 21, 22, 29, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 63, 65, 67, 68, 74, 75, 76, 83, 92, 93, 94, 95, 104, 105, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 121, 125, 126, 127, 128, 132, 133, 134, 135, 138, 139, 140, 141, 143, 146, 167, 183, 184, 185, 186, 187, 193, 199, 200, 201, 204, 213, 217, 220, 222, 230, 238, 239, 242, 243, 254, 258, 262, 266, 268, 269, 273, 277, 286, 287, 288, 289, 290, 291, 292, 314, 315, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 345, 346, 347, 348, 349, 353, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 371, 376, 377, 378, 379, 380, 382, 384, 387, 388, 389, 390, 392, 395, 397, 398, 407, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 438, 441, 442, 445, 446, 450, 453, 470, 471, 483, 485, 487, 488, 491, 494, 497, 498, 521, 522, 523, 527, 529, 531, 537, 542, 548, 567, 578, 579, 581, 583, 588, 590], "period": 447, "permut": [17, 392, 478, 498, 542], "persist": [267, 477, 480, 481, 482, 484, 501, 502], "perturb": [24, 31, 32, 590], "phase": [35, 237], "phi": [277, 360], "pi": [277, 360, 447, 518, 533, 539], "pick": [335, 547], "pickl": [475, 476], "pico": [56, 112], "piecewis": [361, 362], "pil": [580, 590], "pinv": 25, "pioneer": 112, "pip": 20, "pipelin": [7, 9, 10, 11, 12, 69, 237, 239, 240, 244, 249, 262, 392, 485, 579, 580, 582], "pixel": [9, 10, 11, 12, 223, 226, 240, 244, 255, 258, 259, 261, 334, 335, 339, 438, 582, 584], "pixel_scal": 240, "place": [235, 351, 353, 354, 355, 356, 357, 358, 441, 442, 479, 486, 531, 558, 565], "placehold": [268, 397], "placement": [20, 486], "plai": 485, "plane": 551, "platform": 469, "plot": [559, 591], "plt": 591, "plu": 340, "plug": 219, "point": [8, 243, 341, 401, 452, 470, 471], "pointer": 594, "pointwis": [345, 346, 347], "pool": [14, 33, 69, 96, 112, 113, 114, 115, 116, 117, 150, 159, 170, 177, 187, 204, 217, 235, 238, 239, 240, 242, 243, 261, 262, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 348, 349, 377, 378, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 527, 529], "pool1": 274, "pool2": 274, "pool_siz": [96, 235, 239], "poorli": 26, "pop": 255, "popul": 268, "popular": [8, 112], "portabl": 476, "portion": [3, 549, 572, 573, 590], "pos_iou_thr": 261, "pos_weight": 308, "pose": 29, "posit": [1, 3, 22, 27, 35, 112, 192, 193, 209, 223, 226, 249, 252, 261, 264, 268, 274, 286, 340, 341, 359, 363, 365, 367, 374, 423, 424, 425, 426, 427, 428, 432, 433, 434, 435, 436, 441, 443, 466, 472, 496, 521, 522, 549, 551, 558, 563, 566, 570, 571, 578, 583], "possibl": 590, "post": [250, 255], "posterior": 220, "potenti": [29, 397, 401, 465, 568], "power": [14, 20, 27, 55, 112, 122, 124, 129, 130, 137, 138, 140, 144, 147, 150, 198, 211, 234, 348, 392, 446, 472, 511, 531, 579, 580, 590], "pp": [112, 238, 263], "practic": [29, 107, 254, 402, 405], "practition": 590, "pre": [35, 69, 92, 93, 94, 95, 112, 160, 164, 165, 226, 237, 255, 258, 441, 594], "pre_kernel_s": 69, "preactbottleneck": [160, 164, 165], "preced": [112, 269, 438], "precis": [148, 240, 469, 504, 531], "precomput": 239, "preconfigur": [84, 85, 86, 87, 88, 89, 90, 91, 110, 111, 121, 227, 228, 230, 256, 259, 260, 262], "pred": [20, 252, 253, 254, 258, 473], "pred_box": [223, 224, 225], "pred_boxes_l": 223, "pred_logit": [223, 224, 225], "pred_logits_l": 223, "predecessor": [45, 137], "predefin": [8, 36, 37, 38, 39, 40, 41, 42, 43, 194, 195, 196, 197, 198, 200, 201, 202, 203, 210, 211, 212, 213, 214, 222, 255, 258, 271, 367, 430, 446, 469], "predict": [59, 112, 192, 194, 195, 196, 197, 215, 220, 222, 223, 226, 235, 238, 239, 240, 245, 250, 252, 259, 260, 400, 402, 404, 405], "prefer": 454, "prefix": [268, 474, 521, 522], "prepar": [5, 472, 561, 563, 570, 580, 590], "prepend": [268, 548], "preprint": [112, 238], "preprocess": [3, 5, 8, 294, 341, 485, 531, 579, 580, 590, 594], "present": [400, 401, 402, 403, 405, 407, 408, 409, 411, 412, 413, 414, 415, 424], "preserv": [3, 18, 69, 71, 112, 138, 243, 295, 297, 335, 341, 384, 386, 442, 479, 499, 500, 503, 507, 508, 509, 510, 528, 537, 538, 543, 545, 546, 547, 549, 565, 575], "preset": [8, 118, 119, 120, 121], "pretrain": [224, 225, 226, 236, 237, 594], "pretrained_backbon": [223, 224, 225], "prevent": [1, 14, 20, 117, 245, 270, 271, 272, 273, 274, 286, 298, 301, 320, 366, 374, 385, 387, 388, 389, 390, 400, 402, 435, 436, 441, 446, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 473], "previou": [112, 457, 466, 470, 473], "previous": [450, 460, 475], "primarili": 274, "principl": 112, "print": [0, 1, 2, 5, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 304, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 392, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 438, 440, 441, 443, 446, 447, 448, 449, 450, 451, 452, 453, 454, 469, 470, 471, 472, 475, 476, 477, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 548, 549, 550, 551, 552, 556, 558, 559, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 580, 581, 582, 583, 584, 585, 586, 587, 588, 594], "print_grad": 486, "prior": [219, 244, 470], "priorit": [129, 130, 134, 349, 361], "prob": [223, 224, 225, 258, 477], "probabilist": [220, 221, 485], "probabl": [69, 82, 102, 136, 192, 193, 209, 224, 225, 226, 235, 238, 239, 252, 253, 254, 255, 258, 261, 264, 277, 283, 286, 295, 296, 297, 298, 299, 300, 301, 307, 360, 369, 373, 374, 384, 385, 386, 387, 388, 389, 390, 400, 401, 402, 405, 432, 434, 436, 477, 553, 555, 584, 585, 587, 590], "problem": [29, 30, 32, 112, 238, 279, 340, 359, 363, 464], "proce": [236, 237], "proceed": [112, 238], "process": [2, 5, 8, 27, 30, 32, 33, 44, 59, 61, 63, 65, 69, 110, 112, 117, 136, 157, 158, 159, 187, 192, 216, 217, 221, 235, 240, 250, 255, 260, 263, 273, 287, 288, 289, 318, 341, 342, 343, 344, 348, 349, 367, 371, 376, 378, 395, 407, 408, 409, 412, 413, 414, 415, 423, 425, 426, 428, 432, 433, 435, 457, 559, 580, 581, 582, 583, 588, 590], "prod": 316, "prod_": [220, 396, 521], "produc": [20, 33, 217, 235, 240, 321, 322, 323, 324, 325, 348, 376, 377, 378, 417, 418, 419, 420, 421, 470, 479, 483, 485], "product": [15, 30, 32, 136, 137, 286, 362, 364, 368, 370, 373, 374, 395, 415, 440, 489, 490, 494, 495, 498, 521], "profil": 470, "program": [471, 485], "progress": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594], "proj_drop_r": 96, "project": [30, 32, 59, 61, 63, 65, 73, 96, 117, 136, 137, 142, 143, 144, 145, 147, 148, 149, 192, 193, 223, 239, 264, 373], "projector": 29, "promin": [423, 425, 426, 427, 428], "promis": 364, "promot": [274, 402, 405, 440], "propag": [15, 20, 23, 24, 26, 29, 30, 31, 32, 112, 249, 268, 274, 304, 306, 334, 339, 348, 379, 424, 425, 465, 466, 477, 489, 490, 491, 495, 498, 527, 529, 545, 546, 547, 549, 551, 559, 560, 561, 564, 566, 571, 574, 575, 576, 591, 592], "proper": [337, 549, 571], "properli": [0, 237, 253, 254, 273, 283, 369, 440, 446], "properti": [3, 21, 23, 26, 27, 277, 281, 295, 360, 367, 384, 459, 464, 470, 476], "proport": [7, 9, 10, 11, 12, 543], "proportion": 588, "propos": [146, 226, 235, 238, 239, 240, 244, 252, 253], "proposal_gener": 239, "provid": [0, 1, 2, 3, 5, 8, 9, 10, 11, 12, 14, 17, 19, 20, 21, 34, 46, 55, 57, 60, 61, 62, 63, 64, 65, 66, 67, 68, 97, 100, 101, 102, 109, 112, 113, 126, 132, 135, 138, 140, 141, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 192, 193, 201, 204, 209, 211, 212, 215, 216, 218, 219, 220, 222, 223, 226, 230, 235, 236, 237, 255, 258, 264, 268, 270, 271, 272, 273, 277, 286, 306, 316, 322, 323, 337, 341, 374, 392, 400, 401, 402, 403, 405, 418, 419, 420, 423, 424, 425, 426, 427, 428, 430, 432, 433, 435, 438, 440, 443, 445, 446, 450, 451, 456, 457, 458, 465, 467, 471, 476, 483, 485, 486, 491, 499, 508, 527, 529, 542, 544, 555, 563, 568, 570, 590, 591, 592], "pseudo": [26, 29], "purpos": [46, 51, 55, 230, 255, 480, 484, 499, 507, 509], "pvt": [137, 138, 139, 140, 141, 142], "pvt_huge": 112, "pvt_larg": 112, "pvt_medium": 112, "pvt_small": 112, "pvt_tini": 112, "pvt_v2": [143, 144, 145, 146, 147, 148, 149], "pvt_v2_b0": 112, "pvt_v2_b1": 112, "pvt_v2_b2": [112, 146], "pvt_v2_b2_li": 112, "pvt_v2_b3": 112, "pvt_v2_b4": 112, "pvt_v2_b5": 112, "pvtv2": [112, 143, 144, 145, 146, 147, 148, 149], "pypi": 20, "pyramid": [136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 226, 235, 236, 237, 241, 242, 261, 262], "python": [20, 469, 475, 476, 486, 504], "pytorch": [20, 544], "q": [30, 59, 112, 117, 137, 286, 373, 374, 436], "q_1": 59, "q_i": [35, 373], "qk": [35, 59, 117, 434, 436], "qk_scale": [59, 136, 137, 192, 193], "qkv_bia": [59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 136, 137, 143, 144, 145, 147, 148, 149, 192, 193], "qr": 25, "quad": [29, 59, 219, 220, 245, 255, 258, 261, 337, 373, 379, 400, 401, 402, 403, 404, 405, 426, 427, 428, 433, 435, 441, 443, 487, 488, 492, 493, 494, 497, 572, 573, 581], "quadrat": [137, 146, 403], "qualifi": 453, "qualiti": 220, "quanfu": 112, "quantiz": 243, "queri": [59, 73, 136, 137, 143, 144, 145, 147, 148, 149, 192, 193, 223, 224, 225, 286, 373, 374, 436], "quick": [470, 592], "quickli": 446, "quicksort": [547, 566], "quoc": [112, 238], "quotient": 488, "r": [18, 19, 30, 35, 112, 236, 237, 244, 255, 334, 335, 373, 379, 380, 521, 522, 567, 584, 585, 586, 587], "r101": [224, 238], "r50": [225, 238], "r_t": 464, "radam": 468, "radix": [150, 151, 152, 153, 154, 155, 156, 157, 158, 547], "rais": [0, 1, 2, 15, 255, 268, 316, 340, 440, 445, 475, 496, 548], "rameswar": 112, "rand": [220, 227, 228, 229, 230, 231, 232, 233, 234, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 478, 485, 591], "randint": [441, 442, 443, 478, 485], "randn": [17, 19, 20, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 71, 72, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 104, 105, 106, 107, 108, 117, 118, 119, 120, 121, 122, 127, 128, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 171, 172, 173, 174, 175, 176, 183, 184, 185, 186, 188, 189, 190, 191, 204, 215, 217, 219, 223, 224, 225, 235, 236, 237, 239, 240, 241, 242, 243, 244, 286, 316, 345, 346, 347, 348, 349, 373, 374, 379, 380, 381, 392, 411, 432, 433, 434, 435, 436, 440, 441, 442, 443, 478, 483, 485, 591, 594], "random": [1, 2, 5, 7, 17, 19, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 70, 71, 72, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 104, 105, 106, 107, 108, 127, 128, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 171, 172, 173, 174, 175, 176, 183, 184, 185, 186, 188, 189, 190, 191, 215, 223, 224, 225, 235, 236, 237, 239, 240, 241, 242, 243, 244, 258, 261, 286, 345, 346, 347, 348, 349, 373, 386, 392, 411, 430, 432, 433, 434, 435, 436, 441, 442, 443, 583, 584, 585, 586, 587, 590, 591], "random_integ": 485, "random_split": 6, "random_tensor": 485, "randomcrop": [589, 590], "randomgrayscal": [589, 590], "randomhorizontalflip": [589, 590], "randomli": [1, 295, 297, 298, 299, 300, 301, 341, 384, 387, 388, 389, 390, 479, 583, 584, 585, 586, 587, 590], "randomnoisedataset": [0, 1, 2], "randomrot": [589, 590], "randomverticalflip": 589, "rang": [0, 1, 3, 7, 20, 21, 35, 48, 57, 96, 98, 112, 117, 135, 139, 159, 167, 202, 226, 237, 263, 273, 282, 284, 287, 288, 297, 309, 313, 334, 335, 358, 366, 368, 371, 386, 396, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457, 465, 467, 477, 479, 481, 506, 513, 514, 517, 553, 554, 555, 582, 586, 590], "rank": 29, "rasul": 11, "rate": [44, 45, 59, 82, 83, 96, 104, 117, 136, 137, 192, 193, 236, 237, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467], "rather": [11, 17, 19, 258, 272, 273, 392, 401, 442, 452, 461, 564], "ratio": [59, 69, 70, 72, 82, 96, 104, 117, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 177, 192, 193, 235, 258, 348, 349, 588], "ravel": 557, "raw": [223, 224, 225, 255, 258, 283, 308, 369, 401, 402, 475, 476, 486], "rceil": 516, "rcnn": [238, 240], "rcond": 29, "re": [20, 269, 594], "reach": [326, 421, 452], "readabl": [14, 20, 270, 271, 272, 274, 392, 440], "readi": [5, 183, 184, 185, 186, 191, 222, 253, 254, 264, 594], "real": [29, 32, 124, 238, 252, 253, 254, 260, 368], "realist": 222, "realloc": 441, "rearrang": [16, 294, 393, 394], "reassembl": 112, "recalibr": [112, 178, 180, 181, 183, 184, 185, 186, 348], "receiv": [426, 427, 428, 561, 571, 572, 573], "recent": 465, "recept": [112, 117, 146, 187, 191, 261, 262, 349], "recip": 594, "reciproc": [29, 511, 525, 526, 535], "recogn": 59, "recognit": [112, 116, 140, 157, 158, 192, 194, 195, 196, 197, 203, 238, 377], "recommend": [20, 122, 401], "recon": 219, "recon_loss": 219, "reconstruct": [219, 220, 221, 245, 292, 566], "reconstruction_loss": 219, "recov": 221, "rectangular": 503, "rectif": 464, "rectifi": [279, 280, 363, 365, 464], "recurr": [263, 271, 415], "recurs": 268, "red": [584, 591], "redmon": [238, 252, 253], "reduc": [16, 33, 35, 69, 70, 71, 73, 96, 112, 123, 137, 146, 159, 170, 187, 204, 217, 226, 237, 254, 257, 260, 261, 325, 345, 346, 347, 348, 407, 408, 409, 412, 413, 414, 423, 424, 425, 426, 427, 428, 446, 449, 452, 453, 454, 463, 466, 473, 527, 528, 529, 537, 543, 545, 546, 584], "reducelronplateau": 455, "reduct": [14, 15, 18, 32, 82, 112, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 177, 307, 308, 309, 310, 312, 313, 348, 349, 400, 401, 402, 403, 404, 405, 447, 453, 454, 498, 527, 529], "redund": [69, 72, 112, 239, 240], "reevalu": 445, "ref_box": 245, "refer": [8, 61, 63, 65, 146, 242, 245, 268, 379, 485, 500, 503, 505, 521, 522, 550, 594], "refin": [112, 201, 235, 446], "reflect": [139, 334, 335, 471], "regardless": [29, 562], "region": [235, 238, 239, 240, 242, 243, 244, 253, 289, 296, 321, 322, 323, 324, 325, 339, 361, 385, 418, 419, 422, 561, 581, 590], "regist": [20, 36, 37, 38, 39, 40, 41, 42, 43, 132, 168, 169, 171, 172, 173, 174, 175, 176, 216, 267, 268, 269, 273, 440, 474, 486], "register_buff": 267, "register_hook": 486, "register_model": [34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 110, 111, 114, 115, 116, 127, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 188, 189, 190, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 213, 214, 216, 218, 224, 225, 236, 237, 253, 254, 265, 266], "register_paramet": 268, "registr": [20, 268, 440], "registri": [171, 172, 173, 174, 175, 176, 474], "registry_path": 474, "regress": [8, 226, 227, 235, 238, 239, 240, 245, 246, 312, 403, 404], "regul": [337, 430], "regular": [29, 33, 44, 82, 83, 102, 192, 193, 217, 261, 297, 301, 374, 385, 387, 388, 389, 390, 452, 454, 457, 458, 459, 462, 463, 464, 465, 467], "reimagin": 112, "rel": [35, 112, 192, 193, 223, 235, 245, 252, 255, 258, 261, 442, 446, 453, 547], "relat": [476, 503, 507], "relationship": [35, 138, 140, 588], "releas": 592, "relev": [339, 457, 465, 467], "reli": [296, 475], "reliabl": [9, 10, 11, 12], "reliant": [387, 388, 389, 390], "reload": [237, 594], "relu": [20, 33, 69, 112, 177, 204, 217, 219, 235, 239, 240, 270, 271, 272, 274, 276, 278, 279, 303, 342, 343, 344, 348, 349, 353, 354, 357, 358, 359, 363, 366, 370, 372, 376, 377, 378, 379, 380, 381, 394, 395, 397, 398, 432, 434, 436, 441, 442, 443], "relu1": 274, "relu2": 274, "relu3": 274, "relu6": [372, 394], "remain": [9, 10, 11, 12, 20, 57, 96, 99, 247, 267, 297, 319, 384, 386, 387, 388, 389, 390, 396, 430, 441, 466], "rememb": 485, "remot": 594, "remov": [239, 240, 250, 474, 568, 574], "ren": 238, "render": 592, "reorder": [14, 17, 392, 538, 565], "rep": 570, "reparameter": 219, "repeat": [15, 16, 557, 559, 570], "repetit": [14, 19, 479, 563, 570], "replac": [11, 61, 63, 65, 70, 223, 235, 238, 239, 254, 263, 432, 442, 485, 558, 584, 594], "replic": [19, 20, 382, 433, 435, 548], "report": 443, "repr": 469, "repres": [3, 7, 11, 17, 18, 19, 26, 28, 32, 59, 74, 75, 76, 113, 126, 136, 142, 151, 152, 153, 154, 155, 156, 226, 228, 245, 247, 249, 250, 255, 268, 269, 274, 304, 306, 314, 318, 319, 334, 337, 340, 376, 377, 378, 392, 395, 398, 402, 405, 415, 430, 433, 445, 454, 456, 457, 463, 464, 465, 466, 467, 469, 475, 477, 487, 488, 494, 497, 500, 528, 541, 542, 543, 554, 555, 559, 560, 581, 583, 585, 586, 587, 588], "represent": [35, 71, 112, 120, 137, 138, 139, 140, 141, 144, 148, 149, 150, 157, 158, 168, 169, 171, 172, 173, 174, 175, 176, 183, 184, 185, 186, 187, 191, 209, 221, 241, 264, 337, 348, 424, 427, 430, 445, 592], "reproduc": [7, 477, 479, 480, 481, 482, 483, 484, 485, 590], "requir": [2, 5, 8, 18, 20, 47, 53, 54, 69, 108, 121, 125, 131, 132, 133, 134, 135, 151, 152, 153, 154, 155, 156, 171, 172, 173, 174, 175, 176, 187, 212, 214, 220, 223, 246, 253, 254, 266, 267, 270, 274, 276, 277, 279, 280, 281, 282, 284, 304, 306, 339, 348, 349, 358, 379, 397, 402, 405, 440, 452, 471, 473, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 503, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 529, 530, 532, 533, 534, 535, 536, 538, 539, 540, 548, 550, 556, 558, 559, 561, 562, 563, 564, 568, 569, 570, 576, 577, 580, 581, 588, 591, 594], "requires_grad": [20, 255, 258, 261, 267, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 294, 304, 306, 316, 334, 335, 337, 339, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 376, 377, 378, 379, 380, 381, 382, 384, 387, 388, 389, 390, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 412, 413, 414, 415, 423, 424, 425, 426, 427, 428, 438, 440, 476, 477, 479, 480, 481, 482, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 548, 549, 550, 551, 556, 558, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578, 580, 591], "rescal": [307, 308, 309, 313, 400, 401, 402, 405, 441, 442], "research": [20, 440], "resembl": 222, "reset": [269, 447, 483, 486], "reshap": [14, 17, 177, 306, 377, 378, 392, 396, 438, 472, 498, 538, 557, 562], "resid": [486, 594], "residu": [69, 70, 71, 72, 96, 103, 109, 110, 111, 112, 117, 124, 125, 128, 137, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 178, 179, 180, 181, 182, 258, 434, 436], "residualblock": 159, "resili": 466, "resiz": [223, 240, 242, 339, 579, 589, 590], "resnest": [151, 152, 153, 154, 155, 156, 157, 158], "resnest_101": 112, "resnest_14": 112, "resnest_200": 112, "resnest_26": 112, "resnest_269": 112, "resnest_50": 112, "resnest_50_1s4x24d": 112, "resnest_50_4s2x40d": 112, "resnet": [61, 63, 65, 69, 71, 109, 110, 111, 150, 151, 152, 153, 154, 155, 156, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 187, 188, 189, 190, 223, 224, 225, 236, 237, 238, 348, 594], "resnet_1001": 112, "resnet_101": 112, "resnet_101_weight": 593, "resnet_152": 112, "resnet_152_weight": 593, "resnet_18": [112, 594], "resnet_18_weight": [593, 594], "resnet_200": 112, "resnet_269": 112, "resnet_34": 112, "resnet_34_weight": 593, "resnet_50": [112, 237, 594], "resnet_50_weight": [593, 594], "resnet_arg": 187, "resnetbottleneck": 69, "resnext": [69, 72, 171, 172, 173, 174, 175, 176, 183, 184, 185, 186, 191], "resnext_101_32x16d": 112, "resnext_101_32x32d": 112, "resnext_101_32x4d": 112, "resnext_101_32x8d": 112, "resnext_101_32x8d_weight": 593, "resnext_101_64x4d": 112, "resnext_101_64x4d_weight": 593, "resnext_50_32x4d": 112, "resnext_50_32x4d_weight": 593, "resolut": [35, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 104, 112, 117, 118, 119, 122, 137, 138, 146, 183, 184, 185, 186, 191, 193, 226, 228, 229, 231, 232, 233, 234, 240, 241, 242, 256, 257, 259, 261, 290, 291, 486, 594], "resolv": [17, 18, 19, 392, 469, 594], "resourc": [20, 49, 50, 52, 53, 56, 57, 105, 112, 125, 129, 130, 131, 132, 133, 134, 135, 212, 254, 260], "respect": [7, 17, 20, 22, 23, 24, 26, 27, 28, 29, 30, 32, 113, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 226, 246, 267, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 304, 306, 334, 339, 349, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 376, 377, 378, 379, 382, 384, 387, 388, 389, 390, 392, 395, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 412, 413, 414, 415, 423, 424, 425, 426, 427, 428, 442, 448, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 517, 523, 525, 526, 527, 528, 529, 533, 535, 537, 541, 542, 543, 559, 561, 563, 570, 584], "respons": [112, 183, 184, 185, 186, 255, 258, 261, 270, 315, 410, 456], "rest": [572, 573], "restor": [348, 450, 470, 473], "restrict": 442, "restructur": 564, "result": [14, 15, 17, 19, 22, 26, 27, 29, 69, 112, 268, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 287, 288, 289, 290, 294, 304, 306, 321, 322, 323, 326, 327, 328, 329, 331, 332, 333, 334, 335, 339, 341, 349, 361, 366, 369, 373, 386, 392, 440, 445, 471, 477, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 506, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 523, 525, 526, 527, 529, 530, 532, 533, 534, 535, 536, 538, 539, 540, 541, 544, 550, 553, 555, 556, 559, 561, 562, 563, 564, 566, 567, 568, 569, 570, 571, 575, 576, 577, 580, 583, 584, 590], "resum": [447, 448, 449, 450, 451, 452, 453, 454, 456], "retain": [96, 112, 137, 254, 269, 296, 385, 486, 499, 504, 505, 509, 527, 528, 529, 537, 543, 545, 546, 549, 558, 572, 573, 580], "retent": 580, "rethink": 112, "retinanet": 226, "retriev": [0, 2, 270, 272, 273, 337, 571], "return": [0, 1, 2, 3, 5, 9, 10, 11, 12, 20, 36, 37, 38, 39, 40, 41, 42, 43, 109, 113, 121, 122, 133, 135, 177, 235, 239, 240, 255, 258, 261, 267, 268, 270, 271, 272, 273, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 376, 377, 378, 379, 380, 381, 384, 386, 387, 388, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 412, 415, 423, 424, 425, 426, 427, 428, 433, 435, 440, 445, 450, 451, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 474, 579, 590, 594], "return_invers": 575, "reus": [112, 236, 239, 261, 580], "reusabl": [274, 386, 440, 579], "rev": [379, 380], "revers": [20, 221, 274, 486, 542, 566, 585, 587], "revolution": 112, "rfloor": [382, 454, 524], "rgb": [9, 10, 35, 69, 73, 101, 102, 103, 110, 111, 121, 122, 136, 192, 193, 226, 240, 252], "rho": 458, "rho_": 464, "rho_t": 464, "rich": [20, 148, 238, 241], "richer": 138, "right": [27, 28, 29, 31, 32, 35, 59, 117, 220, 242, 246, 252, 258, 261, 277, 283, 320, 360, 369, 373, 382, 400, 401, 402, 403, 405, 407, 408, 409, 412, 413, 414, 415, 426, 427, 428, 434, 436, 441, 443, 538, 547, 551, 581, 591], "rightarrow": [17, 373, 392, 567], "rmsprop": 468, "rnn": 441, "rob": 112, "robust": [46, 51, 106, 133, 202, 203, 296, 341, 384, 387, 388, 389, 390, 403, 440, 458, 583, 584, 586, 590], "roi": [235, 238, 239, 242, 243], "roi_align": 243, "roi_cls_loss": 235, "roi_reg_loss": 235, "roialign": [239, 248], "roipool": 239, "roland": 11, "role": [485, 590], "roll": 557, "root": [8, 9, 10, 11, 12, 459, 465, 535, 591], "ross": [238, 240], "rotat": [303, 338, 586, 590], "rotated_imag": 341, "round": [511, 516, 524], "rout": [72, 426, 427, 428, 571], "route_lay": 255, "row": [23, 24, 26, 31, 226, 243, 249, 306, 337, 503, 559, 560, 566, 572, 573, 577], "rpn": [235, 238], "rpn_cls_loss": 235, "rpn_reg_loss": 235, "rprop": 468, "rule": [19, 20, 26, 27, 381, 392, 472, 487, 488, 492, 493, 494, 496, 497, 504], "run": [20, 267, 314, 318, 342, 343, 344, 407, 408, 409, 412, 413, 414, 458, 470, 483, 485], "running_mean": [267, 314, 318, 407, 408, 409, 412, 413, 414], "running_var": [314, 318, 407, 408, 409, 412, 413, 414], "runtim": [15, 83, 271, 274, 386, 440, 506], "ruom": 238, "s_": 466, "s_0": 242, "s_1": [498, 567], "s_2": 567, "s_d": [425, 428], "s_h": [382, 424, 425, 428], "s_i": 567, "s_k": 498, "s_n": 567, "s_w": [382, 424, 425, 428], "sacrif": [112, 254], "safe": [7, 470, 473], "safeguard": 320, "safetensor": 476, "sain": 112, "same": [3, 4, 23, 24, 26, 27, 31, 145, 219, 223, 241, 246, 253, 254, 260, 283, 295, 296, 297, 298, 299, 300, 301, 314, 315, 316, 318, 319, 320, 322, 323, 341, 342, 343, 344, 345, 346, 347, 349, 366, 376, 377, 378, 379, 380, 381, 384, 387, 388, 389, 390, 397, 401, 407, 408, 409, 412, 413, 414, 415, 417, 418, 419, 423, 424, 425, 426, 427, 428, 441, 442, 443, 466, 469, 477, 483, 485, 491, 502, 505, 508, 510, 516, 521, 522, 523, 524, 527, 528, 529, 531, 538, 547, 550, 556, 558, 562, 564, 566, 568, 569, 572, 573, 575, 577, 582], "sampl": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 92, 93, 94, 95, 101, 102, 103, 110, 111, 113, 114, 115, 116, 127, 128, 150, 151, 152, 153, 154, 155, 156, 157, 158, 183, 184, 185, 186, 191, 219, 220, 221, 226, 242, 243, 321, 322, 323, 334, 335, 353, 354, 355, 356, 357, 358, 384, 387, 388, 389, 390, 395, 398, 402, 405, 415, 417, 418, 419, 477, 482, 485, 506, 555, 581, 583, 585, 586, 587, 588], "sample_timestep": 220, "sampling_ratio": [242, 243], "sandbox": 20, "sandler": 112, "satisfi": [22, 24, 31, 567], "satur": [359, 590], "save": [2, 226, 236, 237, 267, 269, 445, 450, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 473, 474, 475, 594], "scalabl": [5, 51, 82, 112, 171, 172, 173, 174, 175, 176, 193, 215, 226, 238, 440], "scalar": [4, 20, 23, 28, 252, 307, 308, 309, 310, 312, 313, 401, 441, 442, 477, 486, 504, 505, 558], "scale": [18, 24, 29, 35, 44, 50, 52, 53, 54, 56, 58, 59, 61, 63, 65, 69, 74, 75, 76, 77, 82, 83, 96, 104, 110, 112, 114, 115, 116, 117, 118, 119, 122, 123, 127, 131, 132, 134, 135, 136, 137, 138, 142, 146, 149, 150, 157, 158, 160, 161, 162, 165, 178, 179, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 210, 211, 212, 213, 219, 226, 229, 232, 233, 235, 236, 238, 239, 240, 241, 242, 243, 244, 246, 255, 259, 260, 262, 276, 281, 283, 286, 297, 314, 315, 316, 318, 319, 337, 348, 349, 357, 358, 359, 361, 363, 367, 368, 369, 371, 373, 374, 384, 386, 387, 388, 389, 390, 402, 407, 408, 409, 410, 411, 412, 413, 414, 415, 430, 438, 441, 442, 448, 451, 457, 459, 460, 461, 485, 543, 588], "scale_by_keep": [297, 386], "scale_factor": 438, "scale_fn": 448, "scaled_dot_product_attent": [285, 303], "scaleddotproductattent": [375, 394], "scenario": [49, 54, 56, 132, 133, 134, 135, 146, 272, 273, 415, 447, 448, 454, 461, 462, 580, 584], "schedul": [219, 220, 385, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457], "scientif": 472, "score": [159, 170, 187, 223, 224, 225, 235, 239, 240, 250, 252, 255, 256, 257, 258, 259, 261, 283, 286, 374, 401, 402, 498], "score_thresh": 240, "scratch": [20, 237], "script": 485, "sd": 594, "se": [82, 112, 178, 179, 180, 181, 182, 183, 184, 185, 186], "se_resnet_101": 112, "se_resnet_152": 112, "se_resnet_18": 112, "se_resnet_34": 112, "se_resnet_50": 112, "se_resnext_101_32x4d": 112, "se_resnext_101_32x8d": 112, "se_resnext_101_64x4d": 112, "se_resnext_50_32x4d": 112, "se_scal": 82, "seamless": [0, 1, 5, 8, 18, 392, 440, 485], "seamlessli": [5, 8, 14, 17, 19, 21, 269, 271, 274, 440, 590], "search": [112, 238, 240], "second": [24, 137, 148, 219, 224, 225, 271, 272, 304, 348, 395, 396, 460, 461, 462, 463, 464, 472, 487, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 538, 551, 556, 559, 571, 587], "section": 491, "see": [20, 491], "seed": [7, 477, 478, 479, 480, 481, 482, 484, 485, 590], "seek": [20, 135], "seen": 458, "segment": [7, 112, 149, 198, 199, 200, 201, 202, 203, 238, 244, 291, 292, 380, 381], "select": [18, 19, 112, 187, 188, 189, 190, 191, 235, 238, 240, 242, 339, 348, 349, 426, 428, 448, 537, 547, 551, 571, 578], "selectivekernel": 350, "selectivesearch": 248, "self": [0, 1, 2, 3, 5, 20, 33, 35, 59, 69, 73, 74, 75, 76, 82, 83, 96, 100, 104, 109, 112, 113, 123, 124, 125, 126, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 177, 192, 193, 204, 209, 217, 220, 223, 235, 239, 240, 243, 261, 263, 264, 267, 268, 269, 270, 271, 272, 273, 281, 297, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 376, 377, 378, 379, 380, 381, 384, 385, 386, 387, 388, 392, 395, 396, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 412, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 432, 433, 434, 436, 440, 441, 442, 443, 445, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 473, 474, 486, 558, 565, 579, 580], "selfattent": 436, "selu": [278, 295, 303, 372, 384, 394], "selunetwork": 367, "semant": [4, 59, 70, 147, 238, 241, 380], "semodul": 350, "send": 69, "senet": [178, 179, 180, 181, 182, 183, 184, 185, 186], "sens": 222, "sensit": [220, 310, 403, 407, 408, 409, 443], "sent": 71, "sentenc": 222, "sentiment": [8, 222], "separ": [0, 59, 96, 112, 123, 157, 158, 215, 226, 236, 261, 287, 288, 289, 291, 345, 346, 347, 412, 413, 414], "seq_len": [286, 373, 374, 432, 433, 434, 435, 436], "sequenc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594], "sequenti": [33, 109, 113, 177, 204, 215, 217, 219, 226, 235, 239, 240, 263, 270, 271, 275, 287, 342, 343, 344, 392, 397, 433, 435, 579, 590], "seri": [100, 114, 115, 117, 145, 147, 187, 287, 342, 376, 423, 426], "serial": [237, 267, 268, 456, 476], "serv": [5, 11, 20, 77, 109, 177, 204, 264, 268, 270, 271, 272, 273, 274, 440, 466, 486, 580], "set": [5, 8, 9, 10, 11, 12, 20, 35, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 97, 98, 99, 131, 132, 133, 138, 157, 158, 168, 169, 183, 184, 185, 186, 191, 219, 223, 224, 225, 235, 236, 238, 239, 245, 246, 249, 253, 254, 255, 256, 257, 258, 260, 269, 273, 286, 287, 288, 289, 291, 337, 340, 363, 365, 367, 374, 376, 377, 378, 384, 389, 390, 395, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 412, 413, 414, 430, 442, 443, 445, 460, 461, 465, 477, 480, 481, 482, 483, 484, 485, 499, 501, 502, 504, 505, 509, 510, 527, 529, 544, 545, 546, 547, 558, 572, 573, 575, 580, 584, 590, 594], "setup": [8, 120, 121, 171, 172, 173, 174, 175, 176, 237], "sever": [29, 221, 376, 377, 378, 423, 424, 425, 426, 427, 428, 579, 590], "sgd": [20, 237, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457, 464, 468], "sgn": 28, "shallow": 69, "shaoq": 238, "shape": [5, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 23, 24, 26, 27, 29, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 70, 71, 72, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 96, 104, 105, 106, 107, 108, 109, 112, 113, 117, 118, 119, 120, 121, 122, 125, 129, 130, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 171, 172, 173, 174, 175, 176, 177, 183, 184, 185, 186, 188, 189, 190, 191, 204, 215, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 262, 263, 267, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 304, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 348, 349, 353, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 384, 385, 387, 388, 389, 390, 392, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 440, 442, 443, 448, 472, 477, 479, 480, 481, 482, 484, 485, 486, 489, 498, 501, 502, 503, 504, 505, 507, 508, 509, 510, 516, 517, 521, 522, 524, 525, 526, 527, 528, 529, 531, 533, 535, 537, 538, 542, 543, 545, 546, 547, 548, 550, 552, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 572, 573, 575, 577, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 594], "shapelik": 481, "share": [4, 59, 112, 227, 238, 239, 240], "sharp": 448, "shen": 348, "shift": [112, 117, 192, 193, 194, 195, 196, 197, 198, 201, 202, 240, 314, 315, 318, 319, 361, 407, 408, 409, 410, 411, 412, 413, 414, 415, 565], "short": 223, "shortcut": 69, "shorthand": 491, "should": [17, 18, 19, 20, 96, 113, 219, 226, 235, 236, 237, 252, 255, 258, 261, 267, 334, 392, 432, 433, 434, 435, 436, 452, 477, 479, 480, 481, 482, 484, 486, 501, 502, 513, 514, 541, 548, 561, 579, 594], "show": [335, 471, 474, 591, 592], "shown": [59, 370, 483], "shrink": 458, "shuffl": [1, 2, 5, 7, 479], "side": [31, 223, 252, 271, 274, 287, 288, 289, 290, 291, 327, 328, 329, 331, 332, 333, 342, 343, 344, 376, 377, 378, 379, 380, 381, 382, 423, 424, 425, 426, 427, 428], "sigma": [29, 35, 219, 255, 258, 261, 348, 353, 355, 357, 364, 368, 370, 401, 407, 408, 409, 412, 413, 414, 415, 542], "sigma_c": 582, "sigma_g": [316, 411], "sigma_i": 29, "sigma_t": 220, "sigmoid": [255, 258, 261, 278, 303, 308, 348, 353, 354, 357, 358, 361, 362, 364, 370, 372, 394, 400, 401], "sigmoidnetwork": 368, "sign": [27, 403, 466, 511], "signal": [342, 376, 377, 378, 407, 412, 423, 424, 425, 426, 427, 428], "signific": 47, "significantli": [70, 71, 112, 122, 124, 146, 147, 148, 149, 170, 200, 257, 348, 579], "silicon": [20, 122, 469], "sim": [219, 220, 384, 387, 388, 389, 390], "similar": [14, 61, 63, 65, 222, 240, 257, 260, 353, 354, 491, 504, 538, 544, 548, 561, 574], "similarli": [32, 219, 541], "simonyan": 112, "simpl": [5, 8, 20, 220, 240, 274, 287, 288, 289, 290, 304, 306, 327, 328, 329, 331, 332, 333, 360, 361, 362, 364, 365, 366, 367, 368, 370, 371, 376, 377, 378, 384, 387, 388, 389, 390, 395, 398, 400, 402, 403, 404, 405, 407, 408, 409, 412, 413, 414, 415, 423, 424, 425, 426, 427, 428, 440, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 471, 472, 489, 490, 495, 579], "simplebackbon": 235, "simplebinaryclassifi": 401, "simplebinaryclassificationmodel": 400, "simpleblock": 297, "simpleclassificationmodel": [402, 405], "simplegelumodel": 360, "simplehardsigmoidmodel": 361, "simplehardswishmodel": 362, "simpleleakyrelumodel": 363, "simplemishmodel": 364, "simplemodel": [366, 386, 398, 474], "simpleregressionmodel": 404, "simplerelumodel": 365, "simpleselumodel": 367, "simplesigmoidmodel": 368, "simpleswishmodel": 370, "simpletanhmodel": 371, "simpli": [20, 471, 541, 542, 564], "simplic": [112, 361, 365], "simplifi": [8, 17, 19, 92, 93, 94, 95, 96, 112, 114, 216, 254, 274, 342, 343, 344, 392, 401], "simul": 590, "simultan": [59, 341], "sin": [511, 518], "sinc": [27, 30, 270, 271, 272, 273, 287, 288, 289, 358, 471, 477, 482, 538, 559, 578, 590], "sine": [223, 514, 533, 534], "singl": [0, 8, 27, 30, 32, 61, 63, 65, 159, 223, 238, 239, 253, 254, 283, 342, 343, 344, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 376, 377, 378, 382, 396, 401, 402, 415, 424, 425, 426, 427, 428, 433, 434, 435, 436, 445, 470, 480, 484, 501, 506, 550, 568, 582, 584, 590], "singleton": [19, 415], "singular": [23, 26, 27, 29, 31, 32], "sinh": [511, 519, 540], "size": [0, 1, 2, 4, 5, 14, 17, 18, 19, 32, 35, 59, 60, 67, 68, 69, 70, 71, 72, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 96, 104, 107, 112, 113, 114, 115, 116, 117, 126, 127, 129, 130, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 159, 187, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 209, 210, 211, 212, 213, 214, 217, 220, 223, 226, 232, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 265, 266, 269, 271, 286, 287, 288, 289, 290, 291, 292, 294, 296, 299, 300, 301, 307, 308, 309, 310, 312, 313, 314, 315, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 373, 376, 377, 378, 379, 380, 381, 382, 385, 392, 395, 398, 400, 402, 405, 407, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 435, 436, 438, 441, 442, 443, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 474, 481, 484, 485, 486, 527, 528, 529, 537, 543, 545, 546, 548, 549, 550, 556, 567, 568, 576, 577, 581, 583, 588, 590, 593], "size_or_sect": 567, "sk": [112, 187, 188, 189, 190, 191, 349], "sk_resnet_18": 112, "sk_resnet_34": 112, "sk_resnet_50": 112, "sk_resnext_50_32x4d": 112, "skblock": 187, "skip": [112, 441, 442, 443, 473], "sknet": [188, 189, 190, 191], "slice": [4, 304, 486, 541, 547, 574, 575], "slide": [294, 382, 423, 425, 426, 428], "slight": 348, "slightli": [590, 594], "slope": [279, 359, 363], "slow": [5, 464], "small": [29, 48, 50, 52, 55, 67, 92, 93, 94, 95, 106, 107, 112, 114, 115, 116, 121, 125, 129, 130, 133, 141, 196, 197, 202, 203, 213, 214, 232, 244, 258, 259, 261, 279, 296, 307, 309, 314, 315, 316, 318, 319, 320, 363, 367, 385, 400, 402, 403, 407, 408, 409, 410, 411, 412, 413, 414, 415, 424, 427, 432, 434, 436, 441, 446, 458, 459, 460, 461, 462, 463, 464, 465, 466], "smallbackbon": 240, "smaller": [14, 49, 59, 61, 63, 65, 68, 76, 92, 93, 94, 95, 112, 131, 217, 240, 254, 271, 274, 440, 459, 460, 493, 547, 549, 581, 583, 588], "smallest": [227, 516, 529, 571], "smooth": [102, 221, 226, 241, 261, 262, 277, 359, 360, 364, 370, 449, 457, 465, 590], "smoother": [449, 457], "so": [223, 270, 271, 272, 273, 341, 440, 442, 464, 470, 473, 501, 502, 516, 524, 531, 579, 594], "softmax": [35, 59, 117, 223, 224, 225, 278, 286, 303, 349, 372, 373, 374, 394, 402, 434, 436], "softmaxmodel": 369, "softplu": 364, "solut": [29, 31], "solv": [21, 22, 25, 29, 30, 32], "solver": 21, "some": [254, 276, 297, 298, 341, 384, 386, 387, 388, 407, 408, 409, 412, 413, 414, 459, 460, 461, 549], "sometim": 472, "sophist": [271, 274], "sort": [20, 557, 571, 575], "sourc": [246, 264, 265, 266, 286, 432, 485], "sp": 364, "space": [24, 30, 32, 61, 63, 65, 117, 193, 219, 221, 264, 287, 288, 289, 290, 291, 292, 294, 321, 322, 323, 342, 343, 344, 345, 346, 347, 376, 377, 378, 379, 380, 381, 382, 417, 418, 419, 499, 506, 590], "span": 8, "spars": [459, 460], "spatial": [33, 35, 112, 117, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 159, 170, 187, 198, 204, 217, 220, 235, 237, 239, 241, 242, 243, 247, 261, 262, 292, 296, 315, 325, 326, 334, 335, 343, 348, 377, 378, 379, 382, 396, 407, 408, 409, 412, 413, 414, 415, 421, 422, 424, 425, 426, 427, 428, 438, 516, 559], "spatial_dim": 348, "spatial_scal": [242, 243], "spatio": 378, "spec": 73, "special": [0, 1, 29, 267, 268, 269, 384, 485], "specif": [8, 15, 73, 78, 79, 80, 81, 92, 93, 94, 95, 109, 123, 131, 132, 133, 134, 135, 157, 158, 168, 169, 258, 270, 271, 272, 273, 274, 349, 358, 384, 387, 388, 389, 390, 412, 413, 414, 430, 440, 445, 452, 471, 485, 501, 527, 529, 558, 563, 570, 594], "specifi": [0, 1, 2, 4, 5, 7, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 28, 34, 74, 75, 76, 77, 83, 113, 126, 127, 128, 131, 132, 133, 134, 136, 138, 139, 140, 141, 142, 150, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 216, 218, 271, 283, 294, 301, 307, 308, 309, 310, 312, 313, 319, 320, 321, 322, 323, 324, 325, 335, 337, 339, 340, 341, 348, 369, 373, 376, 377, 378, 379, 382, 392, 400, 401, 402, 403, 404, 405, 415, 417, 418, 419, 420, 422, 424, 425, 426, 427, 428, 430, 438, 445, 448, 452, 469, 479, 480, 481, 482, 483, 484, 486, 496, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 509, 510, 517, 521, 522, 527, 528, 529, 531, 537, 538, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 554, 556, 558, 561, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 579, 580, 581, 582, 583, 586, 588, 590, 591], "speech": [222, 412], "speed": [112, 129, 130, 237, 238, 253, 254, 261, 361, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 473], "spike": 443, "split": [3, 7, 8, 69, 71, 72, 112, 150, 157, 158, 219, 291, 373, 549, 550, 556, 557, 574, 577], "split_ratio": [69, 70, 71, 72], "split_siz": [252, 253, 254, 255], "split_tensor": 567, "spp": [261, 262], "springer": 112, "sqrt": [35, 59, 117, 220, 242, 252, 277, 286, 315, 316, 353, 354, 357, 358, 360, 373, 374, 407, 408, 409, 410, 411, 412, 413, 414, 415, 434, 436, 458, 459, 460, 461, 463, 464, 465, 511, 513, 514], "squar": [1, 5, 22, 23, 24, 26, 27, 29, 30, 31, 32, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 209, 210, 211, 212, 213, 214, 219, 220, 296, 310, 312, 385, 403, 404, 458, 459, 460, 465, 511, 535], "squaredataset": [0, 1, 2, 5], "squeez": [82, 112, 125, 129, 130, 177, 180, 183, 184, 185, 186, 348, 557, 574], "sr_ratio": [136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149], "sra": 112, "src": [246, 263, 432, 435, 436], "src_key_pad": 435, "src_key_padding_mask": [432, 436], "src_mask": [432, 435, 436], "src_vocab_s": [264, 265, 266], "ss": 244, "st_dict": 226, "stabil": [26, 29, 35, 69, 112, 117, 226, 237, 245, 255, 296, 307, 309, 314, 315, 316, 318, 319, 320, 337, 342, 343, 344, 366, 385, 400, 402, 407, 408, 409, 410, 411, 412, 413, 414, 415, 430, 432, 434, 436, 441, 443, 446, 457, 458, 459, 460, 461, 462, 463, 464, 465, 582], "stabl": [96, 202, 308, 353, 354, 357, 358, 384, 401, 402, 457, 461, 462, 465, 466, 467, 566], "stack": [19, 72, 274, 349, 379, 432, 433, 435, 554, 556, 557, 577, 590], "stage": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594], "stage1": 177, "stage2": 177, "stage3": 177, "stage4": 177, "stage_def": 69, "stall": 453, "stand": 146, "standalon": 366, "standard": [20, 46, 51, 61, 63, 65, 70, 71, 96, 106, 131, 134, 159, 168, 169, 219, 223, 236, 237, 264, 265, 277, 279, 345, 346, 347, 353, 355, 357, 359, 360, 363, 379, 384, 432, 466, 470, 482, 485, 491, 579, 582, 590], "star": [379, 380, 381], "start": [1, 5, 14, 219, 396, 446, 457, 459, 466, 486, 499, 506, 521, 522, 581, 583, 591], "start_axi": [396, 552], "start_id": 591, "state": [53, 112, 211, 226, 267, 268, 269, 271, 274, 445, 450, 470, 471, 473, 475, 483, 594], "state_dict": [226, 236, 237, 268, 269, 445, 450, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 475, 476, 594], "statement": [470, 473], "static": 274, "statist": [29, 295, 314, 318], "std": [9, 10, 11, 12, 239, 355, 579, 582, 590], "stem": [69, 70, 71, 72, 109, 112, 117, 150, 159, 170, 187], "stem_channel": [69, 70, 71, 72], "stem_typ": 159, "stem_width": [150, 151, 152, 153, 154, 155, 156, 159], "step": [14, 20, 35, 219, 220, 250, 269, 294, 349, 441, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 473, 499, 579, 580, 594], "step_siz": [446, 448, 450, 454, 466], "step_size_down": 448, "step_size_up": 448, "steplr": [446, 450, 455], "still": [56, 458, 594], "stn": 335, "stochast": [44, 45, 59, 82, 83, 96, 104, 117, 136, 192, 193, 297, 386, 457, 467], "stochastic_depth": 82, "stop": [453, 499, 506], "storag": [270, 272, 442], "store": [2, 8, 9, 10, 11, 12, 20, 159, 170, 187, 267, 268, 269, 270, 271, 272, 273, 348, 417, 418, 419, 420, 421, 422, 473, 476, 581, 582, 583, 584, 585, 586, 587, 588], "str": [3, 9, 10, 11, 12, 14, 15, 17, 18, 19, 35, 126, 159, 204, 223, 268, 270, 272, 274, 307, 308, 309, 310, 312, 313, 335, 339, 392, 438, 445, 448, 450, 453, 474, 475, 476, 486, 559, 591], "straight": 547, "straightforward": [467, 471, 487], "strategi": [35, 112, 134, 201, 237, 254, 335, 446, 450, 456], "stream": 239, "streamlin": [2, 5, 96, 112], "strength": [35, 96, 112, 385], "strengthen": 261, "strict": [268, 442, 445, 594], "strictli": 594, "stride": [61, 63, 65, 83, 113, 114, 115, 116, 125, 126, 129, 130, 223, 235, 239, 240, 258, 259, 261, 262, 271, 274, 287, 288, 289, 290, 291, 292, 294, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 342, 343, 344, 345, 346, 347, 349, 376, 377, 378, 379, 380, 381, 382, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 591], "stride_height": 294, "stride_width": 294, "strike": [51, 126, 133], "string": [14, 15, 17, 18, 19, 268, 270, 272, 274, 376, 377, 378, 392, 445, 469], "strong": [35, 72, 112, 140, 143, 146, 210, 238, 254], "stronger": [120, 141, 145, 201, 238, 255], "structur": [0, 14, 18, 30, 35, 69, 70, 72, 83, 112, 125, 193, 215, 222, 235, 255, 267, 268, 271, 296, 385, 392, 440, 445, 474, 486, 503, 580, 592], "student": 20, "studi": 20, "style": [14, 20, 69, 71, 109, 224, 225, 237, 258, 259, 262, 318, 412, 413, 486, 559], "sub": [270, 271, 272, 273, 274, 440, 511, 549, 567, 574, 581, 583], "subclass": [1, 2, 5, 20, 268, 269, 270, 440, 445, 450], "sublay": [432, 434, 436], "submodul": [268, 440], "subscript": 15, "subsequ": [271, 274, 358, 443, 485], "subset": [7, 157, 158, 258, 292, 387, 388], "subspac": 373, "substack": 521, "substanti": 212, "subtract": [497, 582], "subvolum": 326, "suffer": 459, "suffix": [146, 475, 476], "suit": [56, 78, 79, 80, 81, 102, 123, 131, 132, 134, 146, 147, 149, 187, 203, 210, 353, 354, 357, 358, 446], "suitabl": [46, 48, 49, 52, 54, 69, 84, 85, 86, 87, 88, 89, 90, 91, 98, 109, 112, 114, 115, 116, 118, 119, 121, 122, 124, 129, 130, 132, 135, 138, 143, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 179, 180, 182, 194, 195, 196, 197, 213, 237, 265, 403, 459, 460, 480], "sum": [7, 14, 15, 18, 20, 28, 223, 270, 271, 272, 273, 274, 283, 286, 307, 308, 309, 310, 312, 313, 320, 334, 335, 349, 369, 379, 380, 382, 400, 401, 402, 403, 404, 405, 411, 459, 486, 487, 490, 495, 498, 511, 521, 522, 541, 543, 548, 550, 551, 556, 559, 563, 566, 567, 570, 571, 577], "sum_": [17, 18, 27, 35, 252, 255, 258, 261, 283, 315, 316, 369, 392, 400, 401, 402, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 423, 424, 425, 441, 443, 452, 489, 490, 498, 521, 522, 528, 537, 541, 543, 548, 559, 563], "sum_c": [258, 261], "sum_i": [28, 495], "sum_j": [15, 495], "sum_k": 491, "summar": [36, 37, 38, 39, 40, 41, 42, 43, 82, 168, 169, 215, 222, 423, 424, 425], "summari": [168, 169, 183, 184, 185, 186, 191], "summat": [14, 15, 17, 18, 19, 27, 452], "sun": 348, "super": [20, 235, 239, 240, 267, 268, 269, 270, 271, 272, 273, 297, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 376, 377, 378, 379, 380, 381, 384, 386, 387, 388, 395, 396, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 412, 415, 423, 424, 425, 426, 427, 428, 440, 441, 442, 443, 445, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 474], "superior": [58, 112, 201], "superpixel": 240, "supervis": [4, 223], "supplementari": 134, "support": [1, 4, 5, 8, 15, 17, 20, 21, 27, 28, 29, 30, 32, 96, 127, 136, 159, 219, 220, 223, 235, 255, 258, 261, 270, 271, 272, 273, 274, 286, 335, 339, 341, 374, 382, 430, 438, 440, 456, 463, 475, 476, 485, 486, 487, 488, 491, 492, 493, 494, 496, 497, 500, 503, 517, 525, 526, 528, 533, 535, 537, 541, 542, 543, 547, 550, 559, 564, 566, 567, 580, 590, 592], "suppos": 590, "suppress": [223, 238, 240, 244, 250, 255, 258], "sure": [219, 252, 253, 254, 440, 590], "svd": [25, 29], "swap": [17, 245, 392], "swapax": 511, "swin": [192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203], "swin_bas": 112, "swin_larg": 112, "swin_smal": 112, "swin_tini": 112, "swin_v2": 193, "swin_v2_bas": 112, "swin_v2_giant": 112, "swin_v2_hug": 112, "swin_v2_larg": 112, "swin_v2_smal": 112, "swin_v2_tini": 112, "swintransform": [194, 195, 196, 197], "swintransformer_v2": [198, 199, 200, 201, 202, 203], "swish": [129, 130, 372, 394], "symbol": [17, 18, 19, 392], "symmetr": [22, 321, 322, 323, 324, 357, 358, 371], "syntax": [1, 14, 17, 18, 19, 392, 473, 491], "synthes": 222, "system": [20, 21, 22, 29, 30, 31, 112, 133, 221, 263, 335, 471, 486, 559], "systemat": [112, 590], "szegedi": [101, 112], "t": [4, 14, 20, 29, 35, 59, 112, 117, 220, 255, 258, 261, 334, 335, 379, 380, 432, 433, 434, 436, 447, 448, 449, 451, 452, 453, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 475, 476, 486, 491, 504, 505, 521, 522, 544, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590], "t0": 457, "t1": [486, 544], "t2": [486, 544], "t_": [255, 258, 261, 433, 447], "t_0": 433, "t_cpu": 486, "t_h": [258, 261], "t_i": 433, "t_max": 447, "t_w": [258, 261], "t_x": [258, 261], "t_y": [258, 261], "tabl": [36, 37, 38, 39, 40, 41, 42, 43, 82, 430], "tabular": 8, "tag": [593, 594], "tailor": [8, 125, 133, 151, 152, 153, 154, 155, 156, 440, 590], "take": [30, 243, 421, 423, 424, 425, 426, 427, 428, 438, 451, 470, 473, 551, 579], "taken": 541, "tan": [112, 226, 238, 511], "tangent": [284, 364, 371, 515, 539, 540], "tanh": [113, 271, 274, 277, 278, 303, 353, 354, 357, 358, 360, 364, 372, 394, 511], "tanhnetwork": 371, "target": [9, 10, 11, 12, 56, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 239, 243, 246, 252, 253, 254, 255, 258, 261, 264, 265, 266, 274, 307, 308, 309, 310, 312, 313, 321, 322, 323, 326, 334, 339, 400, 401, 402, 403, 404, 405, 417, 418, 419, 420, 421, 422, 432, 433, 434, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 505, 548, 574, 581, 583, 588], "target_tensor": [400, 402, 403, 404, 405], "target_transform": [9, 10, 11, 12], "task": [4, 8, 21, 33, 34, 35, 44, 45, 46, 47, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 63, 65, 69, 74, 75, 76, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 101, 102, 103, 106, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 129, 130, 131, 133, 134, 135, 137, 138, 139, 140, 141, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 210, 211, 212, 213, 215, 222, 226, 230, 236, 237, 255, 258, 264, 265, 266, 282, 283, 288, 290, 291, 292, 304, 307, 309, 312, 313, 348, 349, 368, 369, 376, 377, 378, 379, 380, 400, 401, 402, 403, 404, 405, 412, 413, 414, 423, 425, 426, 428, 432, 460, 472, 485, 503, 506, 590, 594], "teach": 222, "techniqu": [22, 26, 44, 83, 104, 112, 134, 198, 200, 203, 217, 297, 314, 384, 385, 387, 388, 389, 390, 412, 413, 414, 446, 456, 588, 590], "templat": 264, "tempor": [290, 376, 378, 425, 428], "temporarili": [470, 473], "ten": 531, "tensor": [2, 4, 5, 8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 71, 92, 93, 94, 95, 101, 102, 103, 109, 110, 111, 113, 114, 115, 116, 125, 127, 128, 129, 130, 159, 171, 172, 173, 174, 175, 176, 177, 188, 189, 190, 204, 215, 217, 219, 220, 223, 226, 227, 228, 235, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 258, 261, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 304, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 392, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 470, 471, 473, 475, 476, 477, 479, 480, 481, 482, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592], "tensor_i": 226, "tensordot": 511, "tensors_or_arrai": 4, "term": [17, 29, 57, 143, 144, 145, 147, 148, 149, 226, 235, 304, 342, 343, 344, 345, 346, 347, 373, 432, 434, 436, 457, 461, 463, 464, 465, 467], "test": [3, 7, 8, 9, 10, 11, 12, 506], "test_siz": [9, 10, 11, 12], "text": [7, 8, 23, 27, 28, 35, 59, 117, 159, 170, 187, 188, 189, 190, 215, 219, 220, 222, 226, 241, 242, 243, 249, 252, 255, 258, 261, 270, 276, 279, 280, 281, 283, 286, 287, 288, 289, 290, 291, 292, 297, 316, 321, 322, 323, 324, 327, 328, 329, 331, 332, 333, 337, 340, 342, 343, 344, 345, 346, 347, 348, 349, 353, 354, 357, 358, 359, 361, 362, 363, 364, 365, 366, 367, 369, 370, 373, 374, 376, 377, 378, 379, 380, 381, 384, 385, 386, 387, 388, 389, 390, 400, 401, 402, 403, 404, 405, 423, 424, 425, 426, 427, 428, 430, 432, 433, 435, 441, 442, 448, 453, 454, 457, 459, 460, 461, 462, 463, 464, 465, 466, 467, 479, 481, 486, 487, 488, 490, 492, 493, 494, 496, 497, 498, 512, 516, 517, 524, 527, 528, 529, 531, 532, 537, 538, 543, 545, 546, 547, 548, 550, 551, 556, 558, 561, 562, 563, 564, 565, 567, 568, 570, 571, 572, 573, 574, 576, 577, 578, 581, 582, 583, 585, 586, 587], "textur": 240, "tgt": [246, 263, 432, 433, 434], "tgt_is_caus": [433, 434], "tgt_key_padding_mask": [432, 433, 434], "tgt_mask": [432, 433, 434], "tgt_vocab_s": [264, 265, 266], "th": [7, 226, 304, 400, 401, 402, 404, 405, 412, 413, 414, 492, 493, 496], "than": [0, 1, 11, 17, 19, 228, 250, 258, 272, 273, 276, 279, 310, 340, 345, 346, 347, 359, 363, 370, 392, 401, 403, 442, 445, 452, 461, 498, 506, 516, 524, 541, 548, 549, 561, 569, 574, 581, 583, 588], "thei": [0, 7, 32, 59, 112, 267, 271, 273, 274, 335, 373, 559, 564, 581, 583, 590], "them": [5, 14, 20, 69, 112, 268, 273, 294, 382, 457, 472, 550, 569, 574, 579, 582, 590], "therebi": [384, 424, 425, 427, 428], "theta": [220, 334, 335, 457, 458, 586], "theta_": [457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467], "theta_i": [441, 443], "theta_t": [464, 465], "thi": [0, 1, 2, 3, 5, 7, 9, 10, 11, 12, 15, 17, 18, 19, 20, 23, 24, 26, 27, 28, 29, 30, 31, 32, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 61, 63, 65, 69, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 98, 101, 102, 103, 109, 110, 111, 112, 113, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 138, 143, 146, 159, 168, 169, 170, 171, 172, 173, 174, 175, 176, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 197, 198, 199, 200, 201, 203, 210, 211, 212, 213, 214, 215, 219, 220, 223, 224, 225, 235, 236, 237, 239, 245, 246, 249, 250, 253, 254, 255, 256, 257, 258, 259, 260, 264, 267, 269, 271, 272, 273, 274, 280, 282, 283, 284, 287, 288, 289, 290, 291, 294, 296, 297, 304, 306, 316, 321, 324, 334, 337, 339, 340, 341, 345, 346, 347, 348, 349, 353, 354, 357, 358, 359, 360, 361, 363, 364, 365, 367, 368, 369, 370, 371, 374, 376, 377, 378, 379, 380, 382, 384, 385, 386, 387, 388, 389, 390, 392, 395, 396, 397, 398, 400, 401, 402, 403, 405, 407, 408, 409, 411, 412, 413, 414, 415, 417, 420, 423, 424, 425, 426, 427, 428, 430, 440, 441, 442, 446, 447, 448, 449, 451, 452, 453, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 474, 475, 476, 477, 479, 481, 482, 483, 485, 486, 490, 491, 495, 499, 501, 504, 505, 507, 508, 509, 510, 516, 517, 523, 524, 525, 526, 527, 528, 529, 531, 533, 535, 537, 538, 541, 542, 543, 544, 547, 548, 549, 558, 560, 561, 563, 564, 565, 566, 572, 573, 574, 575, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592], "think": 594, "third": [147, 148, 149, 334], "those": [114, 115, 116, 242, 273, 358, 571], "thread": 470, "three": [32, 69, 116, 255, 258, 289, 292, 323, 326, 329, 333, 342, 343, 344, 378, 390, 409, 414, 419, 425, 428], "threshold": [29, 236, 237, 240, 244, 250, 255, 258, 261, 310, 403, 442, 453], "threshold_mod": 453, "through": [0, 5, 8, 19, 24, 29, 30, 32, 33, 44, 59, 69, 70, 71, 96, 100, 109, 112, 113, 126, 160, 161, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 188, 189, 190, 216, 217, 220, 221, 222, 229, 239, 240, 243, 255, 258, 270, 271, 274, 296, 304, 306, 334, 335, 339, 348, 349, 359, 360, 361, 362, 363, 364, 365, 367, 368, 370, 371, 376, 377, 378, 384, 387, 388, 389, 390, 395, 397, 398, 407, 408, 409, 412, 415, 423, 424, 425, 426, 427, 428, 432, 433, 435, 436, 470, 477, 479, 482, 489, 490, 495, 545, 546, 559, 560, 562, 564, 568, 571, 572, 573, 575, 576, 590, 591, 592, 594], "throughout": [70, 96, 192, 193, 209, 264, 281, 580], "thu": 442, "ti": [112, 214], "tier": 53, "tight": 146, "tile": [19, 557], "time": [0, 5, 20, 27, 114, 115, 116, 124, 223, 238, 252, 253, 254, 255, 256, 257, 260, 287, 316, 342, 363, 367, 373, 376, 423, 424, 425, 426, 427, 428, 433, 435, 446, 453, 457, 458, 459, 460, 461, 465, 467, 521, 563, 570], "timestep": [220, 221], "tini": [48, 49, 57, 68, 104, 108, 112, 121, 142, 238, 254, 257, 260, 441, 442, 443], "tinynet": 20, "titl": 591, "to_tensor": [9, 10, 11, 12], "togeth": [274, 579, 590], "toggl": [470, 473], "token": [59, 104, 112, 137, 144, 430], "token_mix": 104, "too": [20, 446, 466], "tool": [5, 440, 446, 470, 472, 485, 579, 590, 592], "top": [22, 23, 24, 30, 32, 53, 241, 286, 304, 306, 339, 373, 374, 376, 377, 378, 395, 398, 498, 571, 581, 583, 591], "topk": 557, "topk_indic": 571, "topolog": 20, "topologi": [71, 72], "torch": [70, 71, 72, 204, 382, 544], "toronto": [9, 10], "total": [0, 1, 2, 7, 9, 10, 11, 12, 14, 17, 19, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 127, 128, 129, 130, 131, 132, 133, 134, 135, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 213, 214, 216, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 252, 253, 254, 255, 256, 257, 259, 260, 262, 265, 266, 269, 340, 373, 392, 411, 441, 470, 486, 564], "total_loss": 235, "total_norm": 441, "total_op": 470, "totensor": [579, 590], "touch": 20, "toward": [223, 238], "toybackbon": [239, 240], "trace": [21, 511], "traceback": 473, "track": [20, 342, 343, 344, 407, 408, 409, 412, 413, 414, 440, 470, 471, 473, 477, 479, 480, 481, 482, 484, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 538, 544, 547, 548, 558, 560, 566, 575, 580], "track_running_stat": [342, 343, 344, 407, 408, 409, 412, 413, 414], "trade": [48, 132, 254], "tradit": [11, 14, 35, 59, 69, 73, 112, 135, 221, 263, 458, 459, 462, 463, 464], "trail": 319, "train": [1, 2, 3, 5, 7, 8, 9, 10, 11, 12, 35, 44, 83, 96, 100, 101, 102, 112, 117, 183, 184, 185, 186, 191, 219, 221, 226, 233, 235, 238, 249, 255, 258, 261, 263, 264, 267, 268, 271, 273, 274, 283, 295, 296, 297, 298, 299, 300, 301, 314, 318, 337, 341, 360, 363, 367, 368, 369, 371, 384, 385, 386, 387, 388, 389, 390, 401, 407, 408, 409, 412, 413, 414, 430, 440, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 473, 516, 524, 579, 582, 583, 584, 585, 586, 587, 590, 592, 594], "train_d": 7, "trainabl": [407, 408, 409, 412, 413, 414, 430, 440], "transact": [238, 348], "transfer": [318, 412, 413, 479], "transform": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 433, 434, 435, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 591, 592, 593, 594], "transform_pipelin": [579, 590], "transformed_imag": [579, 590], "transformer_bas": 263, "transformer_big": 263, "transformer_decod": 433, "transformer_encod": 435, "transformerdecod": [394, 432, 437], "transformerdecoderlay": [394, 432, 433, 437], "transformerencod": [394, 432, 437], "transformerencoderlay": [394, 432, 435, 437], "transit": [35, 77, 403], "translat": [222, 246, 264, 334, 424, 427, 432], "transpar": 20, "transpos": [17, 22, 290, 291, 292, 379, 380, 381, 511], "transposit": [15, 17, 392], "travers": 591, "treat": [0, 7, 267, 415, 440, 476], "triangular": [22, 30, 433, 434, 435, 436, 448, 572, 573], "triangular2": 448, "tril": 557, "triu": 557, "true": [1, 2, 5, 8, 9, 10, 11, 12, 20, 32, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 96, 100, 101, 102, 129, 130, 143, 144, 145, 146, 147, 148, 149, 150, 192, 193, 219, 220, 223, 224, 225, 226, 235, 240, 255, 258, 261, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 286, 294, 295, 297, 298, 299, 300, 301, 304, 306, 314, 316, 318, 334, 335, 337, 339, 342, 343, 344, 345, 346, 347, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 411, 412, 413, 414, 415, 423, 424, 425, 426, 427, 428, 432, 433, 434, 435, 436, 438, 440, 445, 447, 448, 449, 450, 451, 452, 453, 454, 460, 461, 465, 469, 471, 476, 477, 480, 481, 482, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 553, 554, 555, 556, 558, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 580, 591], "truli": 20, "truncat": [226, 442], "truth": [223, 235, 252, 253, 254, 255, 261], "try": 0, "tu": [112, 117], "tune": [132, 135, 224, 225, 236, 237, 590], "tupl": [2, 4, 5, 7, 9, 10, 11, 12, 24, 28, 30, 32, 35, 69, 77, 117, 159, 219, 223, 224, 225, 226, 235, 239, 240, 242, 243, 244, 247, 255, 258, 259, 261, 262, 268, 269, 287, 288, 289, 290, 291, 292, 294, 319, 322, 323, 325, 326, 327, 328, 329, 331, 332, 333, 334, 339, 341, 342, 343, 344, 345, 346, 347, 376, 377, 378, 379, 380, 381, 382, 397, 415, 418, 419, 421, 422, 423, 424, 425, 426, 427, 428, 438, 460, 461, 462, 463, 464, 466, 480, 481, 482, 484, 486, 498, 501, 504, 507, 509, 527, 528, 529, 537, 543, 548, 549, 550, 553, 554, 555, 556, 559, 561, 564, 565, 566, 567, 568, 569, 571, 574, 575, 576, 577, 581, 582, 583, 588], "twice": 561, "two": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594], "type": [4, 36, 37, 38, 39, 40, 41, 42, 43, 59, 69, 73, 96, 104, 113, 117, 136, 137, 150, 159, 177, 187, 192, 193, 219, 222, 267, 268, 269, 304, 340, 395, 432, 434, 436, 469, 476, 479, 486, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 544, 559, 580], "typeddict": 235, "typeerror": [0, 1, 2, 268, 445], "typic": [20, 21, 35, 69, 74, 126, 132, 159, 170, 187, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 223, 226, 239, 241, 244, 250, 252, 258, 259, 261, 267, 283, 295, 296, 341, 348, 366, 367, 369, 385, 386, 405, 407, 408, 409, 412, 413, 414, 456, 457, 465, 467, 576, 580, 582, 586, 588, 590], "u": [29, 32, 220, 354, 356, 358], "u_": 462, "ultra": [50, 165, 199], "unbind": 557, "unbound": 574, "uncertainti": 221, "unchang": [20, 267, 301, 359, 363, 365, 367, 384, 387, 388, 389, 390, 396, 397, 441, 562, 568], "uncontract": 498, "uncontrol": 20, "undefin": 496, "under": [171, 172, 173, 174, 175, 176, 364, 440, 594], "underbrac": 27, "underdetermin": 29, "undergo": [297, 436, 590], "underli": [0, 3, 92, 93, 94, 95, 101, 102, 103, 110, 111, 224, 225, 486, 538, 544, 556, 562, 564, 577], "understand": [20, 74, 75, 76, 112, 147, 148, 200, 217, 222, 274, 590, 591, 592], "understood": [17, 379], "unet": 220, "unexpect": [14, 268, 271, 274, 320, 485, 594], "unfold": [293, 303, 383, 394], "unifi": [0, 20, 96, 235, 238, 469], "uniform": [352, 354, 358, 376, 377, 378, 395, 398, 478, 480, 481, 485, 505, 584, 585, 586, 587], "uniformli": [242, 480, 484], "uniniti": [501, 502], "unintend": [14, 18], "union": [204, 249, 250], "uniqu": [22, 29, 31, 69, 270, 272, 430, 479, 557], "unit": [33, 71, 72, 96, 113, 217, 226, 235, 239, 259, 276, 277, 279, 280, 281, 353, 354, 357, 358, 359, 360, 363, 365, 367, 384], "unless": [160, 161, 162, 163, 164, 165, 166, 167, 178, 179, 180, 181, 182, 240, 470, 547], "unlik": [35, 69, 73, 112, 192, 221, 243, 255, 267, 270, 271, 272, 273, 279, 316, 359, 363, 384, 415, 458, 459, 461, 462, 463, 464, 466], "unmatch": 223, "unnecessari": 14, "unnorm": 401, "unpad": 561, "unseen": 590, "unspecifi": [469, 504], "unsqueez": 557, "unstabl": 26, "unsur": 14, "until": 20, "untouch": 69, "up": [112, 261, 262, 445, 450, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 473, 516, 521, 522, 586, 588], "updat": [8, 45, 267, 273, 274, 384, 387, 388, 389, 390, 400, 402, 403, 404, 405, 407, 408, 409, 412, 413, 414, 440, 442, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 470, 473], "upon": [45, 102, 112, 125, 126, 201, 203, 238, 239, 255, 270, 271, 272, 273], "upper": [30, 356, 448, 466, 484, 516, 517, 555, 572, 573], "upper_triangular": 573, "upsampl": [258, 290, 291, 292, 379, 380, 381, 394, 439], "upstream": [20, 521, 522], "url": 594, "us": [0, 2, 4, 5, 7, 8, 9, 10, 11, 12, 14, 17, 18, 19, 20, 21, 22, 24, 26, 27, 29, 30, 32, 35, 44, 59, 61, 63, 65, 70, 71, 72, 73, 77, 82, 83, 96, 97, 100, 101, 102, 103, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 177, 178, 179, 180, 181, 182, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 203, 214, 219, 220, 222, 223, 226, 227, 228, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 249, 250, 252, 253, 254, 257, 259, 260, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 304, 306, 308, 312, 314, 315, 318, 320, 322, 323, 334, 335, 337, 339, 340, 341, 342, 343, 344, 348, 349, 353, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 392, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 418, 419, 423, 424, 425, 426, 427, 428, 430, 432, 438, 440, 441, 442, 443, 445, 446, 447, 449, 451, 452, 454, 456, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 484, 485, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 516, 517, 523, 524, 527, 528, 529, 531, 537, 538, 543, 547, 553, 555, 558, 559, 561, 563, 566, 567, 568, 570, 572, 573, 576, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 592], "usag": [5, 21, 46, 47, 48, 49, 57, 58, 59, 71, 77, 96, 117, 215, 235, 236, 237, 239, 240, 253, 254, 271, 274, 297, 345, 346, 347, 374, 379, 385, 445, 456, 470, 473, 506, 581, 582, 583, 584, 585, 586, 587, 588], "use_aux": [100, 101, 102], "use_fpn": 235, "use_h": [129, 130], "use_passthrough": 255, "use_s": [129, 130], "user": [1, 2, 5, 8, 20, 135, 219, 226, 235, 255, 270, 271, 272, 273, 440, 451, 459, 579, 580, 590, 592], "usual": [242, 335, 402], "util": [5, 21, 35, 70, 126, 142, 188, 189, 190, 201, 272, 273, 296, 440, 485, 592], "v": [20, 24, 29, 32, 35, 59, 112, 117, 137, 238, 286, 373, 374, 434, 436, 442, 460, 461, 463, 464, 500], "v1": [100, 101, 109, 110, 111, 112, 123, 124, 251, 253, 254, 255], "v2": [50, 51, 52, 53, 54, 55, 56, 57, 83, 92, 93, 94, 95, 109, 111, 112, 124, 125, 128, 137, 143, 144, 145, 147, 148, 149, 198, 199, 200, 201, 202, 203, 251, 256, 257, 258], "v3": [100, 102, 103, 112, 125, 129, 130, 251, 259, 261, 262], "v4": [70, 100, 103, 112, 126, 132, 133, 134, 135, 251, 262], "v_": [457, 460, 461, 463, 464, 465, 467], "v_2": 59, "v_i": 373, "v_stack": 577, "v_t": [464, 465], "val": 351, "val_d": 7, "val_loss": 453, "valid": [3, 7, 15, 342, 343, 344, 345, 346, 347, 349, 376, 377, 378, 379, 380, 381, 453, 542], "valu": [14, 20, 23, 27, 28, 29, 32, 44, 59, 69, 73, 74, 75, 76, 96, 104, 122, 123, 126, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 168, 169, 192, 193, 219, 223, 224, 225, 226, 240, 244, 245, 252, 255, 260, 268, 270, 272, 274, 276, 279, 282, 283, 284, 286, 287, 288, 289, 294, 296, 297, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 334, 335, 339, 340, 341, 342, 343, 344, 348, 351, 353, 354, 355, 356, 357, 358, 359, 363, 365, 366, 367, 368, 371, 373, 374, 384, 385, 386, 387, 388, 389, 390, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 417, 423, 424, 425, 426, 427, 428, 432, 433, 434, 435, 436, 438, 446, 453, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 470, 471, 477, 479, 480, 481, 482, 483, 484, 485, 499, 500, 501, 502, 503, 504, 505, 506, 512, 513, 514, 516, 517, 520, 523, 524, 525, 526, 527, 529, 532, 533, 535, 536, 545, 546, 547, 550, 551, 553, 554, 558, 561, 562, 564, 566, 571, 575, 576, 578, 582, 584, 585, 587], "valuabl": 485, "valueerror": [1, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 316, 445], "van": 112, "vanish": [112, 359, 367, 407, 408, 409], "var": 511, "varepsilon": [320, 441], "vari": [44, 187, 271, 273, 321, 339, 411, 417, 448, 586], "variabl": [219, 221, 226, 244, 268, 274, 321, 322, 323, 397, 417, 418, 419, 440, 471, 501, 583, 586], "varianc": [219, 281, 295, 314, 316, 318, 342, 343, 344, 353, 354, 357, 358, 367, 384, 407, 408, 409, 411, 412, 413, 414, 415, 460, 461, 462, 463, 464, 482, 543, 586, 590], "variant": [36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 62, 64, 66, 67, 68, 70, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 92, 93, 94, 95, 98, 99, 105, 106, 107, 108, 118, 119, 120, 122, 125, 126, 129, 130, 131, 132, 133, 134, 135, 138, 140, 141, 142, 143, 144, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 168, 169, 183, 184, 185, 186, 188, 189, 190, 191, 199, 204, 205, 206, 207, 208, 219, 226, 227, 228, 234, 236, 253, 254, 257, 260, 266, 460, 461, 462, 594], "variat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594], "varieti": [8, 109, 150, 485, 590], "variou": [11, 14, 17, 18, 35, 69, 77, 100, 110, 111, 112, 113, 126, 127, 135, 136, 219, 222, 365, 456, 485, 506, 527, 529, 561, 580], "vasudevan": 112, "vaswani": [263, 432], "vdim": 373, "vdot": 495, "vec": [441, 443], "vector": [19, 24, 29, 30, 31, 32, 219, 252, 253, 254, 255, 258, 261, 304, 306, 337, 340, 373, 395, 396, 398, 430, 441, 442, 443, 489, 490, 491, 495], "veloc": [457, 465, 467], "verbos": [17, 447, 448, 449, 450, 451, 452, 453, 454], "veri": [29, 52, 112, 138, 162, 164, 458], "verifi": 14, "versa": 466, "versatil": [35, 112, 135, 485, 559], "version": [20, 32, 44, 71, 100, 104, 109, 113, 114, 115, 132, 137, 139, 146, 257, 379, 382, 392, 465, 476, 495, 565, 584, 594], "versu": 69, "vertic": [569, 577, 587], "vgg": 204, "vggnet": [205, 206, 207, 208], "vggnet_11": 112, "vggnet_11_weight": 593, "vggnet_13": 112, "vggnet_13_weight": 593, "vggnet_16": 112, "vggnet_16_weight": 593, "vggnet_19": 112, "vggnet_19_weight": 593, "via": [5, 8, 20, 117, 135, 187, 220, 223, 226, 237, 242, 253, 254, 441, 486, 594], "vice": 466, "video": [222, 289, 301, 344, 378, 381, 414, 425, 428], "view": [3, 109, 113, 271, 424, 425, 426, 427, 428, 547, 548, 564, 574], "vinod": [9, 10], "violet": 591, "vision": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594], "visual": [59, 121, 145, 217, 222], "vit": [35, 73, 192, 210, 211, 212, 213, 214], "vit_bas": 112, "vit_hug": 112, "vit_larg": 112, "vit_smal": 112, "vit_tini": 112, "voc": [236, 237, 253, 254, 256, 257], "vocabulari": [264, 265, 266, 430], "vol": 112, "vollgraf": 11, "volum": [326, 422], "volumetr": [289, 292, 301, 344, 378, 381, 414, 422, 425, 428], "vstack": 557, "w": [14, 17, 18, 19, 35, 112, 159, 171, 172, 173, 174, 175, 176, 188, 189, 190, 220, 221, 223, 224, 225, 226, 238, 242, 243, 245, 246, 247, 252, 253, 254, 255, 258, 259, 261, 262, 288, 289, 291, 292, 294, 296, 300, 301, 304, 306, 315, 322, 323, 325, 326, 328, 329, 332, 333, 334, 335, 339, 341, 343, 344, 348, 373, 376, 377, 378, 379, 380, 381, 392, 395, 396, 398, 408, 409, 410, 413, 414, 418, 419, 421, 422, 425, 428, 521, 522, 581, 583, 591, 594], "w24": [76, 112], "w_": [242, 243, 245, 246, 288, 289, 291, 292, 322, 323, 325, 326, 328, 329, 332, 333, 339, 377, 378, 380, 381, 382, 418, 419, 421, 422, 424, 425, 427, 428], "w_1": [434, 436], "w_2": [434, 436], "w_i": 252, "w_in": 335, "w_k": [35, 59, 117], "w_l": [241, 242], "w_out": [288, 289, 291, 292, 328, 329, 332, 333, 335], "w_q": [59, 117], "w_t": [245, 246], "w_v": [59, 117], "wa": [20, 69, 101, 226, 384, 387, 388, 389, 390, 470, 475], "wai": [1, 14, 17, 19, 34, 60, 61, 62, 63, 64, 65, 66, 67, 68, 97, 218, 222, 392, 401, 471, 564], "wait": 453, "wang": [112, 238], "want": [0, 442, 579, 581], "warn": [270, 272, 373, 547], "warp": [238, 240], "warper_output_s": 240, "we": [5, 472, 559], "wei": 112, "weight": [59, 112, 117, 136, 137, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 178, 179, 180, 181, 182, 192, 193, 219, 223, 224, 225, 226, 236, 237, 252, 253, 254, 261, 262, 286, 287, 288, 289, 290, 291, 292, 304, 306, 307, 308, 309, 313, 314, 316, 318, 319, 337, 339, 348, 349, 353, 354, 357, 358, 373, 374, 376, 377, 378, 379, 380, 381, 384, 385, 387, 388, 389, 390, 395, 398, 400, 401, 402, 405, 407, 408, 409, 411, 412, 413, 414, 415, 430, 432, 433, 434, 435, 436, 440, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467, 475, 476, 480, 485, 592], "weight1": 272, "weight2": 272, "weight_decai": [457, 458, 459, 460, 461, 462, 463, 464, 465, 467], "weihao": 112, "weinberg": 112, "well": [56, 78, 79, 80, 81, 83, 102, 132, 146, 147, 187, 203, 210, 220, 221, 226, 255, 353, 354, 382], "wenhai": 112, "were": 274, "weyand": 112, "what": [17, 19, 392], "whatev": 470, "when": [0, 1, 5, 14, 18, 20, 27, 59, 82, 112, 219, 235, 236, 237, 243, 245, 246, 255, 256, 257, 268, 271, 273, 274, 276, 279, 287, 288, 289, 290, 291, 337, 359, 386, 397, 401, 407, 408, 409, 411, 412, 413, 414, 438, 441, 442, 443, 445, 447, 448, 449, 450, 451, 452, 453, 454, 458, 466, 470, 471, 473, 474, 485, 496, 505, 521, 522, 547, 548, 579, 581, 594], "where": [5, 7, 8, 9, 10, 11, 12, 17, 18, 19, 23, 24, 26, 27, 28, 29, 30, 32, 59, 71, 112, 129, 130, 131, 132, 133, 134, 146, 148, 215, 219, 220, 222, 223, 226, 242, 243, 246, 247, 249, 252, 253, 254, 255, 256, 257, 258, 261, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 294, 297, 299, 300, 301, 304, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 327, 328, 329, 331, 332, 333, 334, 335, 337, 339, 340, 341, 348, 349, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 382, 384, 387, 388, 389, 390, 392, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 441, 442, 443, 447, 448, 449, 451, 452, 453, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 485, 486, 487, 488, 492, 493, 494, 496, 497, 501, 502, 516, 517, 521, 522, 523, 524, 525, 526, 527, 528, 529, 533, 535, 537, 541, 542, 543, 549, 550, 557, 558, 560, 561, 563, 567, 570, 572, 573, 574, 579, 580, 581, 582, 583, 584, 585, 586, 587], "wherev": 558, "whether": [1, 20, 23, 35, 59, 82, 96, 100, 101, 102, 129, 130, 136, 137, 143, 144, 145, 147, 148, 149, 150, 192, 193, 220, 235, 268, 269, 353, 354, 386, 465, 471, 477, 479, 480, 481, 482, 484, 486, 501, 502, 504, 505, 527, 528, 529, 537, 543, 566, 575, 578], "which": [0, 3, 11, 18, 20, 23, 24, 26, 27, 28, 29, 30, 32, 36, 37, 38, 39, 40, 41, 42, 43, 59, 61, 63, 65, 71, 73, 83, 103, 111, 112, 117, 123, 124, 126, 127, 131, 137, 141, 151, 152, 153, 154, 155, 156, 157, 158, 183, 184, 185, 186, 187, 191, 192, 194, 195, 196, 197, 205, 206, 207, 208, 219, 239, 240, 243, 261, 264, 268, 270, 272, 274, 279, 283, 310, 320, 341, 345, 346, 347, 349, 359, 360, 363, 366, 369, 371, 384, 396, 401, 403, 405, 407, 408, 409, 412, 413, 414, 415, 430, 434, 436, 442, 452, 454, 460, 461, 463, 465, 471, 479, 480, 481, 484, 498, 513, 514, 515, 518, 519, 521, 522, 525, 526, 527, 528, 529, 530, 533, 534, 535, 537, 539, 540, 541, 543, 545, 546, 547, 548, 549, 550, 551, 560, 563, 564, 565, 566, 567, 569, 571, 572, 573, 574, 575, 576, 578, 580, 581, 583, 584, 585, 586, 587, 588, 590, 591], "while": [3, 20, 35, 45, 50, 56, 57, 68, 69, 70, 71, 73, 74, 75, 76, 92, 93, 94, 95, 96, 97, 99, 107, 111, 112, 120, 123, 133, 140, 141, 142, 144, 145, 146, 147, 170, 171, 172, 173, 174, 175, 176, 183, 184, 185, 186, 191, 193, 212, 220, 222, 254, 257, 271, 274, 295, 296, 360, 365, 366, 386, 433, 440, 447, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 470, 538, 558, 564, 569, 584, 590, 594], "who": [270, 271, 272, 273], "whose": [32, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 502, 505, 508, 510, 512, 517, 521, 522, 523, 532, 538, 547, 594], "wide": [8, 9, 10, 12, 21, 29, 57, 112, 135, 159, 167, 168, 169, 202, 237, 280, 291, 365, 376, 377, 402], "wide_resnet_101": 112, "wide_resnet_101_weight": 593, "wide_resnet_50": 112, "wide_resnet_50_weight": 593, "wider": [48, 168, 169, 226, 287, 288], "width": [35, 66, 82, 83, 112, 120, 121, 122, 123, 127, 150, 157, 158, 168, 169, 170, 171, 172, 173, 174, 175, 176, 187, 215, 223, 226, 245, 246, 252, 254, 261, 288, 289, 291, 292, 294, 300, 301, 315, 322, 323, 325, 326, 328, 329, 332, 333, 335, 339, 341, 349, 377, 378, 382, 408, 409, 410, 413, 414, 418, 419, 421, 424, 425, 427, 428, 438, 469, 581, 583, 588], "width_coef": 82, "width_multipli": [123, 127], "window": [112, 117, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 327, 328, 329, 331, 332, 333, 423, 424, 425, 426, 427, 428, 458, 527, 529], "windows_s": [192, 193], "wise": [14, 19, 96, 112, 117, 181, 183, 184, 185, 186, 235, 276, 277, 279, 280, 281, 282, 283, 284, 297, 342, 343, 344, 348, 362, 364, 369, 370, 384, 386, 387, 388, 389, 390, 401, 440, 472, 487, 488, 491, 492, 493, 494, 496, 497, 512, 513, 514, 515, 516, 517, 518, 519, 520, 524, 525, 526, 530, 532, 533, 534, 535, 536, 539, 540, 541, 556, 566, 577, 578], "within": [2, 3, 112, 192, 209, 222, 247, 258, 264, 267, 270, 271, 272, 273, 274, 284, 316, 339, 341, 358, 360, 361, 362, 364, 365, 367, 368, 370, 371, 376, 377, 378, 381, 382, 384, 387, 388, 392, 397, 400, 402, 403, 404, 405, 407, 408, 409, 411, 412, 415, 423, 424, 425, 426, 427, 428, 442, 456, 470, 499, 517, 586, 590], "without": [7, 14, 20, 112, 170, 270, 271, 272, 304, 306, 376, 377, 378, 395, 398, 441, 442, 470, 471, 474, 476, 479, 527, 562, 564, 576], "word": [112, 337, 430], "work": [0, 1, 2, 3, 4, 5, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590, 591, 592, 593, 594], "workflow": [18, 485, 590], "workshop": 112, "world": 222, "worth": 112, "would": [547, 566], "wrap": [3, 5, 7, 70, 420, 421, 440, 446, 470, 473, 475, 486, 544, 594], "wrapper": 440, "wu": 112, "www": [9, 10], "x": [4, 15, 20, 21, 31, 35, 70, 71, 72, 109, 112, 113, 117, 177, 204, 215, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 245, 246, 247, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 270, 271, 272, 273, 274, 283, 297, 304, 306, 316, 320, 334, 335, 341, 345, 346, 347, 349, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 376, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 392, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 411, 412, 413, 414, 415, 423, 424, 425, 426, 427, 428, 434, 435, 436, 440, 441, 442, 443, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 470, 473, 477, 480, 481, 482, 484, 501, 502, 516, 523, 524, 531, 545, 546, 547, 549, 553, 555, 558, 559, 560, 565, 566, 567, 571, 572, 573, 574, 575, 581, 582, 583, 584, 585, 586, 587, 588, 591, 594], "x0": 4, "x1": [255, 258, 261, 395], "x2": [255, 258, 261, 395], "x_": [35, 246, 315, 402, 405, 410, 435, 559], "x_0": 435, "x_1": [59, 242, 243, 245, 246, 247, 249, 250], "x_2": [59, 242, 243, 245, 246, 247, 249, 250], "x_c": [245, 402, 405], "x_i": [252, 316, 320, 400, 401, 411, 435, 486, 516, 524, 531, 571], "x_k": 402, "x_max": 226, "x_min": 226, "x_start": 220, "x_t": [220, 246], "x_test": 20, "x_train": 20, "xavier": [353, 354, 357, 358], "xavier_norm": 352, "xavier_uniform": 352, "xb": 4, "xiao": 11, "xie": 112, "xl": [95, 112], "xlarg": [58, 112, 122], "xmax": 554, "xmin": 554, "xy": 559, "xyxi": 223, "x\u2081": 395, "x\u2082": 395, "y": [4, 15, 20, 35, 70, 71, 72, 112, 215, 223, 226, 245, 246, 247, 252, 253, 254, 255, 258, 261, 270, 271, 272, 273, 274, 316, 320, 334, 341, 345, 346, 347, 359, 360, 361, 362, 363, 364, 365, 367, 368, 370, 371, 376, 377, 378, 379, 380, 381, 384, 387, 388, 389, 390, 395, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 411, 412, 413, 414, 415, 423, 424, 425, 426, 427, 428, 432, 433, 434, 435, 436, 441, 442, 443, 477, 480, 481, 482, 484, 486, 501, 502, 558, 559, 565, 574, 575, 584, 594], "y0": [4, 574], "y1": [255, 258, 261, 549, 574], "y2": [255, 258, 261, 549, 574], "y_": [35, 246, 315, 402, 405, 410, 559], "y_1": [242, 243, 245, 246, 247, 249, 250], "y_2": [242, 243, 245, 246, 247, 249, 250], "y_c": [245, 402, 405], "y_i": [252, 320, 400, 401, 411], "y_max": 226, "y_min": 226, "y_t": 246, "y_train": 20, "yann": [12, 112], "yanyu": 112, "yao": [112, 238], "yb": 4, "yellow": 591, "yet": [20, 55, 57, 120, 133, 335, 472], "yield": [0, 1, 72, 223, 268, 521, 522, 547], "ymax": 554, "ymin": 554, "yolo": [70, 253, 254, 256, 257, 259, 262], "yolo9000": 238, "yolo_v1": [238, 252, 254], "yolo_v1_tini": 238, "yolo_v2": [238, 255, 257], "yolo_v2_model": 255, "yolo_v2_tini": 238, "yolo_v3": [238, 258, 260], "yolo_v3_tini": 238, "yolo_v4": [238, 261], "yolov1": 253, "yolov3": [238, 259, 260], "yolov4": [69, 238, 262], "yolox": 69, "you": [0, 7, 17, 19, 20, 125, 236, 237, 238, 252, 253, 254, 263, 271, 273, 274, 290, 382, 392, 432, 440, 442, 443, 456, 470, 471, 485, 501, 502, 503, 510, 542, 544, 545, 546, 547, 579, 581, 590, 594], "your": [14, 20, 125, 133, 223, 237, 252, 255, 401, 440, 456, 471, 485, 590, 594], "yourself": 594, "yourweight": 594, "yu": 112, "yuan": 238, "z": [15, 20, 112, 219, 220, 379, 381, 434, 436, 502, 509, 510, 547], "zalandoresearch": 11, "ze": 112, "zeiler": [112, 217], "zero": [27, 29, 30, 102, 226, 245, 246, 276, 279, 287, 288, 289, 290, 291, 292, 295, 296, 297, 298, 299, 300, 301, 316, 320, 327, 328, 329, 331, 332, 333, 334, 335, 337, 351, 353, 354, 355, 356, 357, 358, 359, 361, 363, 365, 367, 373, 376, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 415, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 440, 441, 445, 458, 459, 460, 461, 462, 463, 464, 465, 501, 502, 503, 504, 510, 511, 516, 517, 524, 531, 532, 560, 561, 571, 572, 573, 578], "zero_grad": [20, 269, 445, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 486], "zeros_lik": [502, 511], "zhang": 112, "zhmoginov": 112, "zhu": 112, "zhuang": 112, "zihang": 112, "zip": 241, "zisserman": 112, "\u03c3\u1d62": 29}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "data.Subset", "data.TensorDataset", "lucid.data", "Data Utilities", "data.random_split", "lucid.datasets", "CIFAR10", "CIFAR100", "FashionMNIST", "MNIST", "Image Datasets", "lucid.einops", "lucid.einops.einsum", "Einops Functions", "lucid.einops.rearrange", "lucid.einops.reduce", "lucid.einops.repeat", "Lucid\u00b2 \ud83d\udc8e", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "alexnet", "CoAtNet", "coatnet_0", "coatnet_1", "coatnet_2", "coatnet_3", "coatnet_4", "coatnet_5", "coatnet_6", "coatnet_7", "ConvNeXt", "ConvNeXt_V2", "convnext_base", "convnext_large", "convnext_small", "convnext_tiny", "convnext_v2_atto", "convnext_v2_base", "convnext_v2_femto", "convnext_v2_huge", "convnext_v2_large", "convnext_v2_nano", "convnext_v2_pico", "convnext_v2_tiny", "convnext_xlarge", "CrossViT", "crossvit_15", "crossvit_15_dagger", "crossvit_18", "crossvit_18_dagger", "crossvit_9", "crossvit_9_dagger", "crossvit_base", "crossvit_small", "crossvit_tiny", "CSPNet", "csp_darknet_53", "csp_resnet_50", "csp_resnext_50_32x4d", "CvT", "cvt_13", "cvt_21", "cvt_w24", "DenseNet", "densenet_121", "densenet_169", "densenet_201", "densenet_264", "EfficientNet", "EfficientNet_V2", "efficientnet_b0", "efficientnet_b1", "efficientnet_b2", "efficientnet_b3", "efficientnet_b4", "efficientnet_b5", "efficientnet_b6", "efficientnet_b7", "efficientnet_v2_l", "efficientnet_v2_m", "efficientnet_v2_s", "efficientnet_v2_xl", "EfficientFormer", "efficientformer_l1", "efficientformer_l3", "efficientformer_l7", "Inception", "inception_v1", "inception_v3", "inception_v4", "InceptionNeXt", "inception_next_atto", "inception_next_base", "inception_next_small", "inception_next_tiny", "InceptionResNet", "inception_resnet_v1", "inception_resnet_v2", "Image Classification", "LeNet", "lenet_1", "lenet_4", "lenet_5", "MaxViT", "maxvit_base", "maxvit_base", "maxvit_small", "maxvit_tiny", "maxvit_xlarge", "MobileNet", "MobileNet_V2", "MobileNet_V3", "MobileNet_V4", "mobilenet", "mobilenet_v2", "mobilenet_v3_large", "mobilenet_v3_small", "mobilenet_v4_conv_large", "mobilenet_v4_conv_medium", "mobilenet_v4_conv_small", "mobilenet_v4_hybrid_large", "mobilenet_v4_hybrid_medium", "PVT", "PVT_V2", "pvt_huge", "pvt_large", "pvt_medium", "pvt_small", "pvt_tiny", "pvt_v2_b0", "pvt_v2_b1", "pvt_v2_b2", "pvt_v2_b2_li", "pvt_v2_b3", "pvt_v2_b4", "pvt_v2_b5", "ResNeSt", "resnest_101", "resnest_14", "resnest_200", "resnest_26", "resnest_269", "resnest_50", "resnest_50_1s4x24d", "resnest_50_4s2x40d", "ResNet", "resnet_1001", "resnet_101", "resnet_152", "resnet_18", "resnet_200", "resnet_269", "resnet_34", "resnet_50", "wide_resnet_101", "wide_resnet_50", "ResNeXt", "resnext_101_32x16d", "resnext_101_32x32d", "resnext_101_32x4d", "resnext_101_32x8d", "resnext_101_64x4d", "resnext_50_32x4d", "SENet", "se_resnet_101", "se_resnet_152", "se_resnet_18", "se_resnet_34", "se_resnet_50", "se_resnext_101_32x4d", "se_resnext_101_32x8d", "se_resnext_101_64x4d", "se_resnext_50_32x4d", "SKNet", "sk_resnet_18", "sk_resnet_34", "sk_resnet_50", "sk_resnext_50_32x4d", "SwinTransformer", "SwinTransformer_V2", "swin_base", "swin_large", "swin_small", "swin_tiny", "swin_v2_base", "swin_v2_giant", "swin_v2_huge", "swin_v2_large", "swin_v2_small", "swin_v2_tiny", "VGGNet", "vggnet_11", "vggnet_13", "vggnet_16", "vggnet_19", "ViT", "vit_base", "vit_huge", "vit_large", "vit_small", "vit_tiny", "Xception", "xception", "ZFNet", "zfnet", "VAE", "DDPM", "Image Generation", "lucid.models", "DETR", "detr_r101", "detr_r50", "EfficientDet", "efficientdet_d0", "efficientdet_d1", "efficientdet_d2", "efficientdet_d3", "efficientdet_d4", "efficientdet_d5", "efficientdet_d6", "efficientdet_d7", "Faster R-CNN", "faster_rcnn_resnet_101_fpn", "faster_rcnn_resnet_50_fpn", "Object Detection", "Fast R-CNN", "R-CNN", "util.FPN", "util.MultiScaleROIAlign", "util.ROIAlign", "util.SelectiveSearch", "util.apply_deltas", "util.bbox_to_delta", "util.clip_boxes", "Object Detection Utilities", "util.iou", "util.nms", "YOLO Series", "YOLO-v1", "yolo_v1", "yolo_v1_tiny", "YOLO-v2", "yolo_v2", "yolo_v2_tiny", "YOLO-v3", "yolo_v3", "yolo_v3_tiny", "YOLO-v4", "yolo_v4", "Sequence-to-Sequence", "Transformer", "transformer_base", "transformer_big", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "Attention Functions", "nn.functional.scaled_dot_product_attention", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "nn.functional.conv_transpose1d", "nn.functional.conv_transpose2d", "nn.functional.conv_transpose3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.drop_block", "nn.functional.drop_path", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.binary_cross_entropy_with_logits", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "nn.functional.global_response_norm", "nn.functional.group_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.normalize", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.adaptive_max_pool1d", "nn.functional.adaptive_max_pool2d", "nn.functional.adaptive_max_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "nn.functional.affine_grid", "nn.functional.grid_sample", "Spatial Functions", "nn.functional.embedding", "Utility Functions", "nn.functional.interpolate", "nn.functional.one_hot", "nn.functional.rotate", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "nn.DepthSeparableConv1d", "nn.DepthSeparableConv2d", "nn.DepthSeparableConv3d", "nn.SEModule", "nn.SelectiveKernel", "Fused Layers", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.HardSigmoid", "nn.HardSwish", "nn.LeakyReLU", "nn.Mish", "nn.ReLU", "nn.ReLU6", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Swish", "nn.Tanh", "Activation Layers", "nn.MultiHeadAttention", "nn.ScaledDotProductAttention", "Attention Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "nn.ConvTranspose1d", "nn.ConvTranspose2d", "nn.ConvTranspose3d", "nn.Unfold", "Convolution Layers", "nn.AlphaDropout", "nn.DropBlock", "nn.DropPath", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "nn.Rearrange", "Einops Layers", "Modules", "nn.Bilinear", "nn.Flatten", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.BCEWithLogitsLoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.GlobalResponseNorm", "nn.GroupNorm", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AdaptiveMaxPool1d", "nn.AdaptiveMaxPool2d", "nn.AdaptiveMaxPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "nn.Embedding", "Sparse Layers", "nn.Transformer", "nn.TransformerDecoder", "nn.TransformerDecoderLayer", "nn.TransformerEncoder", "nn.TransformerEncoderLayer", "Transformer Layers", "nn.Upsample", "Vision Layers", "lucid.nn", "nn.util.clip_grad_norm", "nn.util.clip_grad_value", "nn.util.grad_norm", "Neural Network Utilities", "optim.Optimizer", "optim.lr_scheduler", "lr_scheduler.CosineAnnealingLR", "lr_scheduler.CyclicLR", "lr_scheduler.ExponentialLR", "lr_scheduler.LRScheduler", "lr_scheduler.LambdaLR", "lr_scheduler.MultiStepLR", "lr_scheduler.ReduceLROnPlateau", "lr_scheduler.StepLR", "LR Schedulers", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.Numeric", "lucid.count_flops", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.load", "lucid.save", "lucid.random.bernoulli", "Random Number Generations", "lucid.random.permutation", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.multiply", "lucid.outer", "lucid.power", "lucid.sub", "lucid.tensordot", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.full", "lucid.full_like", "lucid.linspace", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.ceil", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.cumprod", "lucid.cumsum", "lucid.exp", "lucid.floor", "lucid.log", "lucid.log2", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.round", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.swapaxes", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.argmax", "lucid.argmin", "lucid.argsort", "lucid.broadcast_to", "lucid.chunk", "lucid.concatenate", "lucid.diagonal", "lucid.flatten", "lucid.histogram", "lucid.histogram2d", "lucid.histogramdd", "lucid.hstack", "Tensor Utilities", "lucid.masked_fill", "lucid.meshgrid", "lucid.nonzero", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.roll", "lucid.sort", "lucid.split", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.topk", "lucid.tril", "lucid.triu", "lucid.unbind", "lucid.unique", "lucid.unsqueeze", "lucid.vstack", "lucid.where", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms", "visual.draw_tensor_graph", "lucid.visual", "Pre-Trained Weights", "lucid.weights"], "titleterms": {"1": [472, 547], "19": 255, "1d": 472, "2": 472, "2d": 472, "3": 472, "It": 471, "One": 340, "The": 20, "ab": 512, "about": [61, 63, 65], "abstract": 20, "acceler": 20, "access": 594, "activ": [278, 303, 372, 394], "ad": 472, "adadelta": 458, "adagrad": 459, "adam": 460, "adamax": 462, "adamw": 461, "adaptive_avg_pool1d": 321, "adaptive_avg_pool2d": 322, "adaptive_avg_pool3d": 323, "adaptive_max_pool1d": 324, "adaptive_max_pool2d": 325, "adaptive_max_pool3d": 326, "adaptiveavgpool1d": 417, "adaptiveavgpool2d": 418, "adaptiveavgpool3d": 419, "adaptivemaxpool1d": 420, "adaptivemaxpool2d": 421, "adaptivemaxpool3d": 422, "add": 487, "addit": [4, 29, 373], "advanc": [294, 590], "advantag": [14, 17, 18, 19, 392], "affine_grid": 334, "alexnet": [33, 34, 112, 593], "algebra": 25, "algorithm": [457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467], "align": [20, 472], "along": 546, "alpha_dropout": 295, "alphadropout": 384, "also": 456, "anchor": 258, "anoth": 544, "api": 594, "apply_delta": 245, "arang": 499, "arcco": 513, "architectur": [33, 35, 44, 59, 96, 114, 115, 116, 117, 168, 169, 217, 235, 239, 240, 254, 261], "arcsin": 514, "arctan": 515, "argmax": 545, "argmin": 546, "argsort": 547, "ascend": 547, "asgd": 457, "attent": [285, 286, 303, 349, 375, 394], "attribut": [3, 9, 10, 11, 12, 33, 109, 113, 159, 170, 177, 187, 204, 215, 217, 255, 258, 261, 267, 269, 270, 271, 272, 273, 274, 342, 343, 344, 345, 346, 347, 348, 359, 360, 363, 365, 367, 368, 369, 371, 376, 377, 378, 379, 380, 381, 384, 386, 387, 388, 389, 390, 395, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 469, 486, 581, 582, 583, 584, 585, 586, 587, 588], "autodiff": 20, "autoencod": 221, "automat": 20, "avail": 592, "avg_pool1d": 327, "avg_pool2d": 328, "avg_pool3d": 329, "avgpool1d": 423, "avgpool2d": 424, "avgpool3d": 425, "axi": [472, 538, 546], "backbon": [226, 255, 258, 261], "backend": 20, "backpropag": [411, 486], "backward": [22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 255, 258, 261, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 296, 304, 306, 334, 339, 348, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 376, 377, 378, 379, 380, 381, 384, 387, 388, 389, 390, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 412, 413, 414, 415, 423, 424, 425, 426, 427, 428, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 548, 550, 556, 559, 561, 562, 563, 564, 568, 569, 570, 572, 573, 574, 576, 577], "base": [455, 486], "basic": 20, "batch_norm": 314, "batchnorm": 350, "batchnorm1d": 407, "batchnorm2d": 408, "batchnorm3d": 409, "bbox_to_delta": 246, "bceloss": 400, "bcewithlogitsloss": 401, "behavior": [321, 322, 323, 324, 325, 326, 417, 418, 419, 420, 421, 422, 475, 476], "benefit": [470, 473], "bernoulli": 477, "between": [20, 486], "bilinear": [304, 395], "binari": 511, "binary_cross_entropi": 307, "binary_cross_entropy_with_logit": 308, "bottleneck": [129, 130], "broadcast": [472, 548], "broadcast_to": 548, "buffer": 267, "cach": 594, "calcul": [15, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 159, 170, 177, 187, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 294, 296, 297, 304, 306, 321, 322, 323, 324, 334, 335, 339, 342, 343, 344, 345, 346, 347, 348, 349, 353, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 374, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 548, 550, 556, 559, 561, 562, 563, 564, 568, 569, 570, 572, 573, 574, 576, 577, 578, 581, 582, 583, 584, 585, 586, 587, 588], "captur": 474, "case": 69, "categori": 594, "ceil": 516, "centercrop": 581, "characterist": 69, "choleski": 22, "chunk": 549, "cifar10": 9, "cifar100": 10, "class": [0, 1, 2, 3, 4, 9, 10, 11, 12, 33, 35, 44, 45, 59, 69, 73, 77, 82, 83, 96, 100, 104, 109, 113, 117, 123, 124, 125, 126, 150, 159, 170, 177, 187, 192, 193, 204, 209, 215, 217, 219, 220, 223, 226, 235, 239, 240, 248, 252, 255, 258, 261, 264, 267, 268, 269, 270, 271, 272, 273, 274, 342, 343, 344, 345, 346, 347, 348, 349, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 392, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 438, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 486, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588], "classif": 112, "clip": [442, 517], "clip_box": 247, "clip_grad_norm": 441, "clip_grad_valu": 442, "cnn": [235, 238, 239, 240], "co": 518, "coatnet": [35, 112], "coatnet_0": 36, "coatnet_1": 37, "coatnet_2": 38, "coatnet_3": 39, "coatnet_4": 40, "coatnet_5": 41, "coatnet_6": 42, "coatnet_7": 43, "combin": 0, "common": [441, 594], "comparison": 442, "compon": [5, 219, 440], "compos": 579, "comput": [222, 226, 316, 442, 549, 558, 565, 566, 571], "concatdataset": [0, 1], "concaten": 550, "conclus": [5, 14, 17, 18, 19, 20, 392, 440, 446, 471, 472, 485, 580, 590], "configur": [36, 37, 38, 39, 40, 41, 42, 43, 82, 118, 119, 120, 121, 122, 129, 130, 151, 152, 153, 154, 155, 156, 157, 158], "constant": 351, "constraint": 4, "constructor": [241, 242, 243, 244], "contain": 275, "contract": 498, "conv": 350, "conv1d": [287, 376], "conv2d": [288, 377], "conv3d": [289, 378], "conv_transpose1d": 290, "conv_transpose2d": 291, "conv_transpose3d": 292, "convbnrelu1d": 342, "convbnrelu2d": 343, "convbnrelu3d": 344, "convnext": [44, 112], "convnext_bas": 46, "convnext_larg": 47, "convnext_smal": 48, "convnext_tini": 49, "convnext_v2": 45, "convnext_v2_atto": 50, "convnext_v2_bas": 51, "convnext_v2_femto": 52, "convnext_v2_hug": 53, "convnext_v2_larg": 54, "convnext_v2_nano": 55, "convnext_v2_pico": 56, "convnext_v2_tini": 57, "convnext_xlarg": 58, "convolut": [112, 293, 303, 350, 383, 394], "convtranspose1d": 379, "convtranspose2d": 380, "convtranspose3d": 381, "core": 20, "cosh": 519, "cosineannealinglr": 447, "count_flop": 470, "creat": [269, 486, 544], "cross_entropi": 309, "crossentropyloss": 402, "crossvit": [59, 112], "crossvit_15": 60, "crossvit_15_dagg": 61, "crossvit_18": 62, "crossvit_18_dagg": 63, "crossvit_9": 64, "crossvit_9_dagg": 65, "crossvit_bas": 66, "crossvit_smal": 67, "crossvit_tini": 68, "csp_darknet_53": 70, "csp_resnet_50": 71, "csp_resnext_50_32x4d": 72, "cspnet": [69, 112], "cube": 520, "cumprod": 521, "cumsum": 522, "current": 592, "custom": [1, 2, 5, 255, 268, 445, 456, 590, 594], "cvt": [73, 112], "cvt_13": 74, "cvt_21": 75, "cvt_w24": 76, "cycliclr": 448, "d": 547, "dagger": [61, 63, 65], "darknet": 255, "data": [0, 1, 2, 3, 4, 5, 6, 7], "dataload": 1, "dataset": [0, 1, 2, 8, 13], "ddpm": [220, 221], "default": [255, 258, 261], "defin": [2, 268, 445, 456], "definit": [17, 18, 19, 320, 392, 441, 442, 443], "denois": 220, "densenet": [77, 112, 593], "densenet_121": 78, "densenet_169": 79, "densenet_201": 80, "densenet_264": 81, "depthseparableconv1d": 345, "depthseparableconv2d": 346, "depthseparableconv3d": 347, "depthwis": 350, "descend": 547, "descript": [171, 172, 173, 174, 175, 176, 188, 189, 190, 474], "design": 20, "det": 23, "detail": [29, 59, 117, 131, 132, 133, 134, 135, 168, 169, 223, 373, 432, 433, 434, 435, 436, 442], "detect": [238, 248, 258, 261], "detr": [223, 238], "detr_r101": 224, "detr_r50": 225, "devic": [20, 486, 594], "diag": 500, "diagon": 551, "dictionari": 235, "differ": [254, 264], "differenti": 20, "dilat": 294, "dim": 546, "div": 488, "dot": 489, "draw_tensor_graph": 591, "drop_block": 296, "drop_path": 297, "dropblock": 385, "dropout": [298, 302, 303, 387, 391, 394], "dropout1d": [299, 388], "dropout2d": [300, 389], "dropout3d": [301, 390], "droppath": 386, "dtype": 486, "duplic": 547, "educ": 20, "efficientdet": [226, 238], "efficientdet_d0": 227, "efficientdet_d1": 228, "efficientdet_d2": 229, "efficientdet_d3": 230, "efficientdet_d4": 231, "efficientdet_d5": 232, "efficientdet_d6": 233, "efficientdet_d7": 234, "efficientform": [96, 112], "efficientformer_l1": 97, "efficientformer_l3": 98, "efficientformer_l7": 99, "efficientnet": [82, 112], "efficientnet_b0": 84, "efficientnet_b1": 85, "efficientnet_b2": 86, "efficientnet_b3": 87, "efficientnet_b4": 88, "efficientnet_b5": 89, "efficientnet_b6": 90, "efficientnet_b7": 91, "efficientnet_v2": 83, "efficientnet_v2_": 94, "efficientnet_v2_l": 92, "efficientnet_v2_m": 93, "efficientnet_v2_xl": 95, "eig": 24, "einop": [14, 15, 16, 17, 18, 19, 393, 394], "einsum": 15, "elu": [276, 359], "embed": [337, 430], "empti": 501, "empty_lik": 502, "enabl": 20, "encod": 340, "enhanc": 137, "evalu": 20, "exampl": [0, 1, 2, 3, 4, 5, 7, 9, 10, 11, 12, 14, 15, 17, 18, 19, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 304, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 392, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443, 445, 447, 448, 449, 450, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 590, 591, 594], "excit": 350, "exp": 523, "explan": [7, 226], "exponentiallr": 449, "express": [315, 516, 524, 531, 567], "ey": 503, "factori": 594, "fashionmnist": 11, "fast": [238, 239], "faster": [235, 238], "faster_rcnn_resnet_101_fpn": 236, "faster_rcnn_resnet_50_fpn": 237, "featur": [8, 21, 183, 184, 185, 186, 191, 456, 485, 590], "flatten": [396, 545, 552], "floor": 524, "flop": 547, "focal": 226, "format": [223, 226, 252, 255, 258, 261], "formula": [252, 447, 448, 449, 451, 452, 453, 454], "forward": [15, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 159, 170, 177, 187, 215, 220, 223, 241, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 294, 297, 304, 306, 316, 321, 322, 323, 324, 334, 335, 339, 342, 343, 344, 345, 346, 347, 348, 349, 353, 354, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 374, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 432, 433, 434, 435, 436, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 539, 540, 541, 542, 543, 550, 556, 559, 561, 562, 563, 564, 568, 569, 570, 572, 573, 576, 577, 581, 582, 583, 584, 585, 586, 587, 588], "fpn": 241, "free": 486, "from": [264, 544], "full": 504, "full_lik": 505, "function": [7, 15, 16, 17, 18, 19, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 39, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 213, 214, 216, 218, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 245, 246, 247, 248, 249, 250, 253, 254, 256, 257, 259, 260, 262, 265, 266, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 351, 353, 354, 355, 356, 357, 358, 441, 442, 443, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 591], "fuse": 350, "futur": 8, "gelu": [277, 360], "gener": [221, 478, 511], "get": 456, "global": 546, "global_response_norm": 315, "globalresponsenorm": 410, "gpu": [20, 486], "grad_en": 471, "grad_norm": 443, "gradient": [22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 296, 304, 306, 334, 339, 348, 358, 359, 360, 361, 362, 363, 364, 365, 367, 368, 369, 370, 371, 376, 377, 378, 379, 380, 381, 384, 387, 388, 389, 390, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 412, 413, 414, 415, 423, 424, 425, 426, 427, 428, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 548, 549, 550, 556, 558, 559, 561, 562, 563, 564, 565, 566, 568, 569, 570, 571, 572, 573, 574, 576, 577, 578], "grid_sampl": 335, "group_norm": 316, "groupnorm": 411, "hardsigmoid": 361, "hardswish": 362, "heapsort": 547, "histogram": 553, "histogram2d": 554, "histogramdd": 555, "hook": [20, 486], "hot": 340, "how": [20, 471, 594], "hstack": 556, "huber_loss": 310, "huberloss": 403, "hybrid": 35, "hyperparamet": [157, 158], "ident": 397, "imag": [13, 112, 221, 589], "implement": [59, 117], "improv": 261, "incept": [100, 112], "inception_next_atto": 105, "inception_next_bas": 106, "inception_next_smal": 107, "inception_next_tini": 108, "inception_resnet_v1": 110, "inception_resnet_v2": 111, "inception_v1": 101, "inception_v3": 102, "inception_v4": 103, "inceptionnext": [104, 112], "inceptionresnet": 109, "index": [545, 546], "infer": [223, 486], "init": [351, 353, 354, 355, 356, 357, 358], "initi": 352, "inner": 490, "input": [223, 226, 241, 242, 243, 252, 255, 258, 261, 544], "inspect": [456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467], "instal": 20, "instance_norm": 318, "instancenorm1d": 412, "instancenorm2d": 413, "instancenorm3d": 414, "integr": [5, 255, 440, 485, 590], "interpol": 339, "inv": 26, "iou": 249, "kaiming_norm": 353, "kaiming_uniform": 354, "keep": 546, "kei": [5, 8, 69, 137, 183, 184, 185, 186, 191, 440, 456, 485, 590], "kernel": [350, 547], "lambdalr": 451, "languag": 222, "layer": [151, 152, 153, 154, 155, 156, 350, 372, 375, 383, 391, 393, 394, 399, 406, 416, 429, 431, 437, 439], "layer_norm": 319, "layernorm": 415, "leaky_relu": 279, "leakyrelu": 363, "learn": 485, "lenet": [112, 113, 593], "lenet_1": 114, "lenet_4": 115, "lenet_5": 116, "linalg": [21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32], "linear": [25, 303, 305, 306, 394, 398, 399], "linspac": 506, "list": 544, "load": [1, 20, 475], "log": 525, "log2": 526, "logic": 340, "loss": [219, 223, 226, 235, 252, 255, 258, 261, 303, 311, 394, 406], "lr": 455, "lr_schedul": [446, 447, 448, 449, 450, 451, 452, 453, 454], "lrschedul": 450, "lucid": [5, 8, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 222, 303, 440, 456, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 590, 592, 594], "lucid\u00b2": 20, "masked_fil": 558, "match": 223, "mathemat": [4, 7, 17, 18, 19, 59, 117, 315, 320, 373, 392, 432, 433, 434, 435, 436, 441, 442, 443, 447, 448, 449, 451, 452, 453, 454, 486, 516, 524, 531, 551, 567], "matmul": 491, "matrix": 491, "matrix_pow": 27, "max": [527, 545], "max_pool1d": 331, "max_pool2d": 332, "max_pool3d": 333, "maximum": [492, 545], "maxpool1d": 426, "maxpool2d": 427, "maxpool3d": 428, "maxvit": [112, 117], "maxvit_bas": [118, 119], "maxvit_smal": 120, "maxvit_tini": 121, "maxvit_xlarg": 122, "mean": 528, "mechan": [286, 349], "meshgrid": 559, "metadata": [474, 594], "metal": 20, "method": [0, 1, 2, 3, 9, 10, 11, 12, 109, 113, 204, 219, 220, 223, 226, 252, 255, 258, 261, 268, 269, 432, 433, 434, 435, 436, 445, 447, 448, 449, 450, 451, 452, 453, 454, 469, 486], "min": 529, "minimum": [493, 546], "mish": 364, "mlx": 20, "mnist": 12, "mobilenet": [112, 123, 127, 593], "mobilenet_v2": [124, 128], "mobilenet_v3": 125, "mobilenet_v3_larg": 129, "mobilenet_v3_smal": 130, "mobilenet_v4": 126, "mobilenet_v4_conv_larg": 131, "mobilenet_v4_conv_medium": 132, "mobilenet_v4_conv_smal": 133, "mobilenet_v4_hybrid_larg": 134, "mobilenet_v4_hybrid_medium": 135, "model": [118, 119, 120, 121, 122, 222, 440, 594], "modul": [219, 268, 394], "moduledict": 270, "modulelist": 271, "more": 485, "move": 486, "mse_loss": 312, "mseloss": 404, "multi": [258, 261], "multiheadattent": 373, "multipl": [0, 491], "multipli": 494, "multiscaleroialign": 242, "multisteplr": 452, "nadam": 463, "natur": 222, "neck": 261, "network": [20, 226, 444], "neural": [20, 444], "new": 472, "newaxi": 472, "nll_loss": 313, "nllloss": 405, "nm": 250, "nn": [20, 264, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 303, 304, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 392, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 438, 440, 441, 442, 443], "no_grad": 473, "nois": 220, "nonzero": 560, "norm": [28, 442], "normal": [303, 317, 320, 355, 394, 416, 582], "note": [4, 15, 236, 237, 253, 254, 335, 504, 505], "number": 478, "numer": 469, "object": [220, 238, 248], "one_hot": 340, "ones": 507, "ones_lik": 508, "oper": [25, 491, 511], "optim": [445, 446, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468], "option": 373, "organ": 440, "other": 20, "outer": 495, "output": [219, 241, 242, 243, 255, 258, 261], "overview": [5, 8, 14, 100, 101, 102, 103, 109, 110, 111, 113, 114, 115, 116, 123, 124, 125, 126, 131, 132, 133, 134, 135, 160, 161, 162, 163, 164, 165, 166, 167, 178, 179, 180, 181, 182, 373, 432, 433, 434, 435, 436, 440, 446, 456, 470, 473, 485, 590, 594], "pad": 561, "paramet": [1, 3, 4, 7, 9, 10, 11, 12, 15, 17, 18, 19, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 304, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 363, 365, 367, 368, 369, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 392, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 438, 441, 442, 443, 447, 448, 449, 450, 451, 452, 453, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 591], "parameterdict": 272, "parameterlist": 273, "pass": 215, "perform": [486, 547], "permut": 479, "pinv": 29, "pipelin": [5, 590], "pitfal": [471, 594], "pool": [303, 330, 394, 429], "potenti": 471, "power": 496, "practic": 441, "pre": 593, "predict": [255, 258, 261], "pretrain": 20, "process": [220, 222, 337], "propag": [255, 258, 261], "properti": [269, 486], "provid": 594, "pvt": [112, 136], "pvt_huge": 138, "pvt_larg": 139, "pvt_medium": 140, "pvt_small": 141, "pvt_tini": 142, "pvt_v2": 137, "pvt_v2_b0": 143, "pvt_v2_b1": 144, "pvt_v2_b2": 145, "pvt_v2_b2_li": 146, "pvt_v2_b3": 147, "pvt_v2_b4": 148, "pvt_v2_b5": 149, "pyramid": 112, "qr": 30, "quickstart": 594, "r": [235, 238, 239, 240], "radam": 464, "rais": [22, 23, 24, 26, 27, 28, 29, 30, 31, 32], "rand": 480, "randint": 481, "randn": 482, "random": [477, 478, 479, 480, 481, 482, 483, 484, 485], "random_split": 7, "randomcrop": 583, "randomgrayscal": 584, "randomhorizontalflip": 585, "randomrot": 586, "randomverticalflip": 587, "ravel": 562, "rearrang": [14, 17, 392], "reciproc": 530, "reduc": [14, 18], "reducelronplateau": 453, "refer": [9, 10, 11, 12, 348, 456], "register_model": 474, "regular": 296, "relu": [280, 350, 365], "relu6": 366, "repeat": [14, 19, 563], "represent": [59, 117, 469, 486], "requir": 219, "reshap": 564, "resiz": 588, "resnest": [112, 150], "resnest_101": 151, "resnest_14": 152, "resnest_200": 153, "resnest_26": 154, "resnest_269": 155, "resnest_50": 156, "resnest_50_1s4x24d": 157, "resnest_50_4s2x40d": 158, "resnet": [112, 159, 593], "resnet_1001": 160, "resnet_101": 161, "resnet_152": 162, "resnet_18": 163, "resnet_200": 164, "resnet_269": 165, "resnet_34": 166, "resnet_50": 167, "resnext": [112, 170, 593], "resnext_101_32x16d": 171, "resnext_101_32x32d": 172, "resnext_101_32x4d": 173, "resnext_101_32x8d": 174, "resnext_101_64x4d": 175, "resnext_50_32x4d": 176, "return": [4, 7, 15, 17, 18, 19, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 34, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 110, 111, 114, 115, 116, 127, 128, 129, 130, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 213, 214, 216, 218, 219, 220, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 236, 237, 241, 242, 243, 244, 245, 246, 247, 249, 250, 252, 253, 254, 256, 257, 259, 260, 262, 265, 266, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 304, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 339, 340, 341, 349, 351, 353, 354, 355, 356, 357, 358, 366, 392, 430, 441, 442, 443, 470, 471, 473, 475, 476, 477, 479, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 591], "revers": 220, "rmsprop": 465, "roialign": 243, "roll": 565, "rotat": 341, "round": 531, "row": 545, "rprop": 466, "rule": [491, 498, 538, 548], "save": 476, "scale": [258, 261], "scaled_dot_product_attent": 286, "scaleddotproductattent": 374, "schedul": 455, "se_resnet_101": 178, "se_resnet_152": 179, "se_resnet_18": 180, "se_resnet_34": 181, "se_resnet_50": 182, "se_resnext_101_32x4d": 183, "se_resnext_101_32x8d": 184, "se_resnext_101_64x4d": 185, "se_resnext_50_32x4d": 186, "see": 456, "seed": 483, "select": 350, "selectivekernel": 349, "selectivesearch": 244, "selu": [281, 367], "semodul": 348, "senet": [112, 177], "separ": 350, "sequenc": 263, "sequenti": 274, "seri": 251, "sgd": 467, "shape": [4, 20], "sigmoid": [282, 368], "sign": 532, "signatur": [0, 1, 2, 3, 4, 7, 9, 10, 11, 12, 15, 17, 18, 19, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 245, 246, 247, 249, 250, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 280, 281, 282, 283, 284, 286, 287, 288, 289, 290, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 304, 306, 307, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 376, 377, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 392, 395, 396, 397, 398, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 433, 434, 435, 436, 438, 441, 442, 443, 445, 447, 448, 449, 450, 451, 452, 453, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 591], "sin": 533, "sinh": 534, "sk_resnet_18": 188, "sk_resnet_34": 189, "sk_resnet_50": 190, "sk_resnext_50_32x4d": 191, "sketch": 223, "sknet": [112, 187], "softmax": [283, 369], "solv": 31, "sort": [547, 566], "spars": [394, 431], "spatial": [303, 336], "specif": [60, 61, 62, 63, 64, 65, 66, 67, 68, 97, 98, 99], "split": 567, "sqrt": 535, "squar": 536, "squeez": [350, 568], "stabl": 547, "stack": 569, "start": 456, "state": [456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467], "step": 223, "steplr": 454, "sub": 497, "subset": 3, "sum": 537, "surfac": 594, "svd": 32, "swap": 538, "swapax": 538, "swin": 112, "swin_bas": 194, "swin_larg": 195, "swin_smal": 196, "swin_tini": 197, "swin_v2_bas": 198, "swin_v2_giant": 199, "swin_v2_hug": 200, "swin_v2_larg": 201, "swin_v2_smal": 202, "swin_v2_tini": 203, "swintransform": 192, "swintransformer_v2": 193, "swish": 370, "switch": 20, "tan": 539, "tanh": [284, 371, 540], "target": [223, 226], "tensor": [20, 472, 486, 498, 511, 544, 557], "tensordataset": 4, "tensordot": 498, "tile": 570, "tip": [441, 442, 443], "topk": 571, "totensor": 580, "trace": 541, "track": 486, "train": [20, 220, 223, 236, 237, 253, 254, 593], "transform": [112, 263, 264, 394, 432, 437, 579, 580, 581, 582, 583, 584, 585, 586, 587, 588, 589, 590], "transformer_bas": 265, "transformer_big": 266, "transformerdecod": 433, "transformerdecoderlay": 434, "transformerencod": 435, "transformerencoderlay": 436, "transpos": 542, "tril": 572, "triu": 573, "typic": 594, "unari": 511, "unbind": 574, "unfold": [294, 382], "uniform": [356, 484], "uniqu": 575, "unsqueez": 576, "upsampl": 438, "us": [1, 69, 255, 258, 261, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 486, 544, 594], "usag": [8, 92, 93, 94, 95, 101, 102, 103, 110, 111, 113, 114, 115, 116, 131, 132, 133, 134, 135, 183, 184, 185, 186, 191, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 255, 256, 257, 258, 259, 260, 261, 262, 267, 341, 373, 432, 433, 434, 435, 436, 441, 442, 443, 446, 447, 448, 449, 450, 451, 452, 453, 454, 469, 471, 472, 559, 579, 580, 590], "user": 594, "util": [6, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 303, 338, 441, 442, 443, 444, 557], "v1": [238, 252], "v2": [238, 255], "v3": [238, 258], "v4": [238, 261], "vae": [219, 221], "valu": [441, 442, 443, 567], "var": 543, "variant": [61, 63, 65], "variat": 221, "verif": 20, "vggnet": [112, 204, 593], "vggnet_11": 205, "vggnet_13": 206, "vggnet_16": 207, "vggnet_19": 208, "vision": [112, 222, 394, 439], "visual": [112, 591, 592], "vit": [112, 209], "vit_bas": 210, "vit_hug": 211, "vit_larg": 212, "vit_smal": 213, "vit_tini": 214, "vstack": 577, "weight": [20, 352, 593, 594], "where": 578, "wide_resnet_101": 168, "wide_resnet_50": 169, "work": [8, 471], "xavier_norm": 357, "xavier_uniform": 358, "xception": [112, 215, 216], "yolo": [238, 251, 252, 255, 258, 261], "yolo_v1": 253, "yolo_v1_tini": 254, "yolo_v2": 256, "yolo_v2_tini": 257, "yolo_v3": 259, "yolo_v3_tini": 260, "yolo_v4": 262, "zero": 509, "zeros_lik": 510, "zfnet": [112, 217, 218]}})