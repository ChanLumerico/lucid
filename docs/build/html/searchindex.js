Search.setIndex({"alltitles": {"@ Operator": [[232, "operator"]], "Activation Functions": [[93, null]], "Activation Layers": [[160, null], [171, null]], "Additional Details": [[17, "additional-details"]], "Admonitions and Usage Guidelines": [[219, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[104, "advanced-example-with-dilation"]], "Advanced Features": [[300, "advanced-features"]], "AlexNet": [[21, null]], "Algorithm": [[203, "algorithm"], [204, "algorithm"], [205, "algorithm"], [206, "algorithm"], [207, "algorithm"], [208, "algorithm"], [209, "algorithm"], [210, "algorithm"], [211, "algorithm"], [212, "algorithm"], [213, "algorithm"]], "Architecture": [[21, "architecture"], [37, "architecture"], [38, "architecture"], [39, "architecture"], [78, "architecture"]], "Architecture Details": [[49, "architecture-details"], [50, "architecture-details"]], "Attention Mechanism": [[142, "attention-mechanism"]], "Attributes": [[5, "attributes"], [6, "attributes"], [21, "attributes"], [32, "attributes"], [36, "attributes"], [40, "attributes"], [51, "attributes"], [58, "attributes"], [68, "attributes"], [73, "attributes"], [78, "attributes"], [82, "attributes"], [84, "attributes"], [85, "attributes"], [86, "attributes"], [87, "attributes"], [88, "attributes"], [89, "attributes"], [138, "attributes"], [139, "attributes"], [140, "attributes"], [141, "attributes"], [152, "attributes"], [153, "attributes"], [154, "attributes"], [155, "attributes"], [156, "attributes"], [157, "attributes"], [158, "attributes"], [159, "attributes"], [161, "attributes"], [162, "attributes"], [163, "attributes"], [165, "attributes"], [166, "attributes"], [167, "attributes"], [168, "attributes"], [169, "attributes"], [172, "attributes"], [173, "attributes"], [174, "attributes"], [176, "attributes"], [177, "attributes"], [178, "attributes"], [179, "attributes"], [180, "attributes"], [182, "attributes"], [183, "attributes"], [184, "attributes"], [185, "attributes"], [186, "attributes"], [187, "attributes"], [188, "attributes"], [190, "attributes"], [191, "attributes"], [192, "attributes"], [193, "attributes"], [194, "attributes"], [195, "attributes"], [196, "attributes"], [197, "attributes"], [198, "attributes"], [227, "attributes"], [291, "attributes"], [292, "attributes"], [293, "attributes"], [294, "attributes"], [295, "attributes"], [296, "attributes"], [297, "attributes"], [298, "attributes"]], "Backward Gradient Calculation": [[10, "backward-gradient-calculation"], [11, "backward-gradient-calculation"], [12, "backward-gradient-calculation"], [14, "backward-gradient-calculation"], [15, "backward-gradient-calculation"], [16, "backward-gradient-calculation"], [17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [20, "backward-gradient-calculation"], [85, "backward-gradient-calculation"], [86, "backward-gradient-calculation"], [87, "backward-gradient-calculation"], [88, "backward-gradient-calculation"], [89, "backward-gradient-calculation"], [91, "backward-gradient-calculation"], [92, "backward-gradient-calculation"], [94, "backward-gradient-calculation"], [95, "backward-gradient-calculation"], [96, "backward-gradient-calculation"], [97, "backward-gradient-calculation"], [98, "backward-gradient-calculation"], [99, "backward-gradient-calculation"], [112, "backward-gradient-calculation"], [114, "backward-gradient-calculation"], [136, "backward-gradient-calculation"], [141, "backward-gradient-calculation"], [151, "backward-gradient-calculation"], [152, "backward-gradient-calculation"], [153, "backward-gradient-calculation"], [154, "backward-gradient-calculation"], [155, "backward-gradient-calculation"], [156, "backward-gradient-calculation"], [157, "backward-gradient-calculation"], [158, "backward-gradient-calculation"], [159, "backward-gradient-calculation"], [161, "backward-gradient-calculation"], [162, "backward-gradient-calculation"], [163, "backward-gradient-calculation"], [165, "backward-gradient-calculation"], [166, "backward-gradient-calculation"], [167, "backward-gradient-calculation"], [168, "backward-gradient-calculation"], [169, "backward-gradient-calculation"], [172, "backward-gradient-calculation"], [173, "backward-gradient-calculation"], [174, "backward-gradient-calculation"], [176, "backward-gradient-calculation"], [177, "backward-gradient-calculation"], [178, "backward-gradient-calculation"], [179, "backward-gradient-calculation"], [180, "backward-gradient-calculation"], [182, "backward-gradient-calculation"], [183, "backward-gradient-calculation"], [184, "backward-gradient-calculation"], [185, "backward-gradient-calculation"], [186, "backward-gradient-calculation"], [187, "backward-gradient-calculation"], [188, "backward-gradient-calculation"], [193, "backward-gradient-calculation"], [194, "backward-gradient-calculation"], [195, "backward-gradient-calculation"], [196, "backward-gradient-calculation"], [197, "backward-gradient-calculation"], [198, "backward-gradient-calculation"], [228, "backward-gradient-calculation"], [229, "backward-gradient-calculation"], [230, "backward-gradient-calculation"], [231, "backward-gradient-calculation"], [232, "backward-gradient-calculation"], [233, "backward-gradient-calculation"], [234, "backward-gradient-calculation"], [235, "backward-gradient-calculation"], [236, "backward-gradient-calculation"], [237, "backward-gradient-calculation"], [238, "backward-gradient-calculation"], [249, "backward-gradient-calculation"], [250, "backward-gradient-calculation"], [251, "backward-gradient-calculation"], [252, "backward-gradient-calculation"], [253, "backward-gradient-calculation"], [254, "backward-gradient-calculation"], [255, "backward-gradient-calculation"], [256, "backward-gradient-calculation"], [257, "backward-gradient-calculation"], [258, "backward-gradient-calculation"], [259, "backward-gradient-calculation"], [260, "backward-gradient-calculation"], [261, "backward-gradient-calculation"], [262, "backward-gradient-calculation"], [263, "backward-gradient-calculation"], [264, "backward-gradient-calculation"], [265, "backward-gradient-calculation"], [266, "backward-gradient-calculation"], [267, "backward-gradient-calculation"], [268, "backward-gradient-calculation"], [269, "backward-gradient-calculation"], [270, "backward-gradient-calculation"], [271, "backward-gradient-calculation"], [272, "backward-gradient-calculation"], [273, "backward-gradient-calculation"], [275, "backward-gradient-calculation"], [277, "backward-gradient-calculation"], [279, "backward-gradient-calculation"], [280, "backward-gradient-calculation"], [281, "backward-gradient-calculation"], [282, "backward-gradient-calculation"], [283, "backward-gradient-calculation"], [284, "backward-gradient-calculation"], [285, "backward-gradient-calculation"], [286, "backward-gradient-calculation"], [287, "backward-gradient-calculation"], [288, "backward-gradient-calculation"]], "Behavior": [[125, "behavior"], [126, "behavior"], [127, "behavior"], [190, "behavior"], [191, "behavior"], [192, "behavior"]], "Benefits": [[217, "benefits"]], "Binary Functions": [[248, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [6, "class-signature"], [21, "class-signature"], [23, "class-signature"], [28, "class-signature"], [32, "class-signature"], [36, "class-signature"], [40, "class-signature"], [51, "class-signature"], [58, "class-signature"], [68, "class-signature"], [73, "class-signature"], [78, "class-signature"], [82, "class-signature"], [83, "class-signature"], [84, "class-signature"], [85, "class-signature"], [86, "class-signature"], [87, "class-signature"], [88, "class-signature"], [89, "class-signature"], [138, "class-signature"], [139, "class-signature"], [140, "class-signature"], [141, "class-signature"], [142, "class-signature"], [152, "class-signature"], [153, "class-signature"], [154, "class-signature"], [155, "class-signature"], [156, "class-signature"], [157, "class-signature"], [158, "class-signature"], [159, "class-signature"], [161, "class-signature"], [162, "class-signature"], [163, "class-signature"], [165, "class-signature"], [166, "class-signature"], [167, "class-signature"], [168, "class-signature"], [169, "class-signature"], [172, "class-signature"], [173, "class-signature"], [174, "class-signature"], [176, "class-signature"], [177, "class-signature"], [178, "class-signature"], [179, "class-signature"], [180, "class-signature"], [182, "class-signature"], [183, "class-signature"], [184, "class-signature"], [185, "class-signature"], [186, "class-signature"], [187, "class-signature"], [188, "class-signature"], [190, "class-signature"], [191, "class-signature"], [192, "class-signature"], [193, "class-signature"], [194, "class-signature"], [195, "class-signature"], [196, "class-signature"], [197, "class-signature"], [198, "class-signature"], [201, "class-signature"], [203, "class-signature"], [204, "class-signature"], [205, "class-signature"], [206, "class-signature"], [207, "class-signature"], [208, "class-signature"], [209, "class-signature"], [210, "class-signature"], [211, "class-signature"], [212, "class-signature"], [213, "class-signature"], [227, "class-signature"], [289, "class-signature"], [290, "class-signature"], [291, "class-signature"], [292, "class-signature"], [293, "class-signature"], [294, "class-signature"], [295, "class-signature"], [296, "class-signature"], [297, "class-signature"], [298, "class-signature"]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [8, "conclusion"], [200, "conclusion"], [215, "conclusion"], [216, "conclusion"], [217, "conclusion"], [226, "conclusion"], [290, "conclusion"], [300, "conclusion"]], "Containers": [[90, null]], "Conv-BatchNorm-ReLU": [[143, null]], "ConvNets": [[35, null], [80, "convnets"]], "Convolution Functions": [[103, null], [111, null]], "Convolution Layers": [[164, null], [171, null]], "Core Components": [[8, "core-components"]], "Create a Tensor from a list": [[274, null]], "Creating a Parameter": [[84, null]], "Creating a tensor with gradient tracking": [[227, null]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[300, "custom-pipelines"]], "Defining a Custom Optimizer": [[202, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[83, null]], "Defining a custom optimizer": [[201, null]], "DenseNet": [[23, null]], "Description": [[52, "description"], [53, "description"], [54, "description"], [55, "description"], [56, "description"], [57, "description"], [69, "description"], [70, "description"], [71, "description"], [218, "description"]], "Dropout Functions": [[110, null], [111, null]], "Dropout Layers": [[170, null], [171, null]], "Example": [[3, null], [3, null], [3, null], [10, "example"], [11, "example"], [12, "example"], [14, "example"], [15, "example"], [16, "example"], [17, "example"], [18, "example"], [19, "example"], [20, "example"], [104, "example"], [200, null], [200, null], [200, null], [215, "example"], [217, "example"], [221, "example"], [222, "example"], [223, "example"], [224, "example"], [225, "example"], [226, null], [226, null], [226, null], [239, "example"], [240, "example"], [241, "example"], [242, "example"], [243, "example"], [244, "example"], [245, "example"], [246, "example"], [247, "example"], [249, "example"], [250, "example"], [251, "example"], [252, "example"], [253, "example"], [254, "example"], [255, "example"], [256, "example"], [258, "example"], [260, "example"], [262, "example"], [263, "example"], [264, "example"], [265, "example"], [266, "example"], [267, "example"], [268, "example"], [269, "example"], [270, "example"], [271, "example"], [272, "example"], [273, "example"], [275, "example"], [277, "example"], [281, "example"], [283, "example"], [284, "example"], [285, "example"], [287, "example"], [288, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[216, null]], "Example 2: Adding a new axis to a 2D tensor": [[216, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[216, null]], "Example Usage": [[8, "example-usage"], [29, "example-usage"], [30, "example-usage"], [31, "example-usage"], [33, "example-usage"], [34, "example-usage"], [36, "example-usage"], [37, "example-usage"], [38, "example-usage"], [39, "example-usage"], [64, "example-usage"], [65, "example-usage"], [66, "example-usage"], [67, "example-usage"], [72, "example-usage"], [137, "example-usage"], [289, "example-usage"], [290, "example-usage"], [300, "example-usage"]], "Example Use Cases": [[219, "example-use-cases"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [6, "examples"], [9, "examples"], [21, "examples"], [22, "examples"], [23, "examples"], [24, "examples"], [25, "examples"], [26, "examples"], [27, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [47, "examples"], [48, "examples"], [49, "examples"], [50, "examples"], [52, "examples"], [53, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [59, "examples"], [60, "examples"], [61, "examples"], [62, "examples"], [63, "examples"], [69, "examples"], [70, "examples"], [71, "examples"], [73, "examples"], [74, "examples"], [75, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [79, "examples"], [81, "examples"], [82, "examples"], [83, "examples"], [84, "examples"], [85, "examples"], [86, "examples"], [87, "examples"], [88, "examples"], [89, "examples"], [91, "examples"], [92, "examples"], [94, "examples"], [95, "examples"], [96, "examples"], [97, "examples"], [98, "examples"], [99, "examples"], [100, "examples"], [101, "examples"], [102, "examples"], [105, "examples"], [106, "examples"], [107, "examples"], [108, "examples"], [109, "examples"], [112, "examples"], [114, "examples"], [115, "examples"], [116, "examples"], [117, "examples"], [119, "examples"], [120, "examples"], [121, "examples"], [123, "examples"], [124, "examples"], [125, "examples"], [126, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [130, "examples"], [132, "examples"], [133, "examples"], [134, "examples"], [136, "examples"], [138, "examples"], [139, "examples"], [140, "examples"], [141, "examples"], [142, "examples"], [144, "examples"], [146, "examples"], [147, "examples"], [148, "examples"], [149, "examples"], [150, "examples"], [151, "examples"], [152, "examples"], [153, "examples"], [154, "examples"], [155, "examples"], [156, "examples"], [157, "examples"], [158, "examples"], [159, "examples"], [161, "examples"], [162, "examples"], [163, "examples"], [165, "examples"], [166, "examples"], [167, "examples"], [168, "examples"], [169, "examples"], [172, "examples"], [173, "examples"], [174, "examples"], [176, "examples"], [177, "examples"], [178, "examples"], [179, "examples"], [180, "examples"], [182, "examples"], [183, "examples"], [184, "examples"], [185, "examples"], [186, "examples"], [187, "examples"], [188, "examples"], [190, "examples"], [191, "examples"], [192, "examples"], [193, "examples"], [194, "examples"], [195, "examples"], [196, "examples"], [197, "examples"], [198, "examples"], [201, "examples"], [202, "examples"], [203, "examples"], [204, "examples"], [205, "examples"], [206, "examples"], [207, "examples"], [208, "examples"], [209, "examples"], [210, "examples"], [211, "examples"], [212, "examples"], [213, "examples"], [218, "examples"], [227, "examples"], [228, "examples"], [229, "examples"], [230, "examples"], [231, "examples"], [233, "examples"], [234, "examples"], [235, "examples"], [236, "examples"], [237, "examples"], [238, "examples"], [257, "examples"], [259, "examples"], [261, "examples"], [274, "examples"], [276, "examples"], [279, "examples"], [280, "examples"], [282, "examples"], [286, "examples"], [291, "examples"], [292, "examples"], [293, "examples"], [294, "examples"], [295, "examples"], [296, "examples"], [297, "examples"], [298, "examples"]], "FashionMNIST": [[5, null]], "Features": [[9, "features"]], "Forward Calculation": [[10, "forward-calculation"], [11, "forward-calculation"], [12, "forward-calculation"], [14, "forward-calculation"], [15, "forward-calculation"], [16, "forward-calculation"], [17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [20, "forward-calculation"], [40, "forward-calculation"], [51, "forward-calculation"], [58, "forward-calculation"], [68, "forward-calculation"], [85, "forward-calculation"], [86, "forward-calculation"], [87, "forward-calculation"], [88, "forward-calculation"], [89, "forward-calculation"], [91, "forward-calculation"], [92, "forward-calculation"], [94, "forward-calculation"], [95, "forward-calculation"], [96, "forward-calculation"], [97, "forward-calculation"], [98, "forward-calculation"], [99, "forward-calculation"], [104, "forward-calculation"], [112, "forward-calculation"], [114, "forward-calculation"], [125, "forward-calculation"], [126, "forward-calculation"], [127, "forward-calculation"], [136, "forward-calculation"], [138, "forward-calculation"], [139, "forward-calculation"], [140, "forward-calculation"], [141, "forward-calculation"], [142, "forward-calculation"], [146, "forward-calculation"], [147, "forward-calculation"], [150, "forward-calculation"], [151, "forward-calculation"], [152, "forward-calculation"], [153, "forward-calculation"], [154, "forward-calculation"], [155, "forward-calculation"], [156, "forward-calculation"], [157, "forward-calculation"], [158, "forward-calculation"], [159, "forward-calculation"], [161, "forward-calculation"], [162, "forward-calculation"], [163, "forward-calculation"], [165, "forward-calculation"], [166, "forward-calculation"], [167, "forward-calculation"], [168, "forward-calculation"], [169, "forward-calculation"], [172, "forward-calculation"], [173, "forward-calculation"], [174, "forward-calculation"], [176, "forward-calculation"], [177, "forward-calculation"], [178, "forward-calculation"], [179, "forward-calculation"], [180, "forward-calculation"], [182, "forward-calculation"], [183, "forward-calculation"], [184, "forward-calculation"], [185, "forward-calculation"], [186, "forward-calculation"], [187, "forward-calculation"], [188, "forward-calculation"], [190, "forward-calculation"], [191, "forward-calculation"], [192, "forward-calculation"], [193, "forward-calculation"], [194, "forward-calculation"], [195, "forward-calculation"], [196, "forward-calculation"], [197, "forward-calculation"], [198, "forward-calculation"], [228, "forward-calculation"], [229, "forward-calculation"], [230, "forward-calculation"], [231, "forward-calculation"], [232, "forward-calculation"], [233, "forward-calculation"], [234, "forward-calculation"], [235, "forward-calculation"], [236, "forward-calculation"], [237, "forward-calculation"], [238, "forward-calculation"], [249, "forward-calculation"], [250, "forward-calculation"], [251, "forward-calculation"], [252, "forward-calculation"], [253, "forward-calculation"], [254, "forward-calculation"], [255, "forward-calculation"], [256, "forward-calculation"], [257, "forward-calculation"], [258, "forward-calculation"], [259, "forward-calculation"], [260, "forward-calculation"], [261, "forward-calculation"], [262, "forward-calculation"], [263, "forward-calculation"], [264, "forward-calculation"], [265, "forward-calculation"], [266, "forward-calculation"], [267, "forward-calculation"], [268, "forward-calculation"], [269, "forward-calculation"], [270, "forward-calculation"], [271, "forward-calculation"], [272, "forward-calculation"], [273, "forward-calculation"], [275, "forward-calculation"], [277, "forward-calculation"], [279, "forward-calculation"], [280, "forward-calculation"], [281, "forward-calculation"], [282, "forward-calculation"], [283, "forward-calculation"], [284, "forward-calculation"], [285, "forward-calculation"], [286, "forward-calculation"], [287, "forward-calculation"], [288, "forward-calculation"], [291, "forward-calculation"], [292, "forward-calculation"], [293, "forward-calculation"], [294, "forward-calculation"], [295, "forward-calculation"], [296, "forward-calculation"], [297, "forward-calculation"], [298, "forward-calculation"]], "Function Signature": [[10, "function-signature"], [11, "function-signature"], [12, "function-signature"], [14, "function-signature"], [15, "function-signature"], [16, "function-signature"], [17, "function-signature"], [18, "function-signature"], [19, "function-signature"], [20, "function-signature"], [22, "function-signature"], [24, "function-signature"], [25, "function-signature"], [26, "function-signature"], [27, "function-signature"], [29, "function-signature"], [30, "function-signature"], [31, "function-signature"], [33, "function-signature"], [34, "function-signature"], [37, "function-signature"], [38, "function-signature"], [39, "function-signature"], [41, "function-signature"], [42, "function-signature"], [43, "function-signature"], [44, "function-signature"], [45, "function-signature"], [46, "function-signature"], [47, "function-signature"], [48, "function-signature"], [49, "function-signature"], [50, "function-signature"], [52, "function-signature"], [53, "function-signature"], [54, "function-signature"], [55, "function-signature"], [56, "function-signature"], [57, "function-signature"], [59, "function-signature"], [60, "function-signature"], [61, "function-signature"], [62, "function-signature"], [63, "function-signature"], [64, "function-signature"], [65, "function-signature"], [66, "function-signature"], [67, "function-signature"], [69, "function-signature"], [70, "function-signature"], [71, "function-signature"], [72, "function-signature"], [74, "function-signature"], [75, "function-signature"], [76, "function-signature"], [77, "function-signature"], [79, "function-signature"], [81, "function-signature"], [91, "function-signature"], [92, "function-signature"], [94, "function-signature"], [95, "function-signature"], [96, "function-signature"], [97, "function-signature"], [98, "function-signature"], [99, "function-signature"], [100, "function-signature"], [101, "function-signature"], [102, "function-signature"], [104, "function-signature"], [105, "function-signature"], [106, "function-signature"], [107, "function-signature"], [108, "function-signature"], [109, "function-signature"], [112, "function-signature"], [114, "function-signature"], [115, "function-signature"], [116, "function-signature"], [117, "function-signature"], [119, "function-signature"], [120, "function-signature"], [121, "function-signature"], [123, "function-signature"], [124, "function-signature"], [125, "function-signature"], [126, "function-signature"], [127, "function-signature"], [128, "function-signature"], [129, "function-signature"], [130, "function-signature"], [132, "function-signature"], [133, "function-signature"], [134, "function-signature"], [136, "function-signature"], [137, "function-signature"], [144, "function-signature"], [146, "function-signature"], [147, "function-signature"], [148, "function-signature"], [149, "function-signature"], [150, "function-signature"], [151, "function-signature"], [215, "function-signature"], [217, "function-signature"], [218, "function-signature"], [221, "function-signature"], [222, "function-signature"], [223, "function-signature"], [224, "function-signature"], [225, "function-signature"], [228, "function-signature"], [229, "function-signature"], [230, "function-signature"], [231, "function-signature"], [232, "function-signature"], [233, "function-signature"], [234, "function-signature"], [235, "function-signature"], [236, "function-signature"], [237, "function-signature"], [238, "function-signature"], [239, "function-signature"], [240, "function-signature"], [241, "function-signature"], [242, "function-signature"], [243, "function-signature"], [244, "function-signature"], [245, "function-signature"], [246, "function-signature"], [247, "function-signature"], [249, "function-signature"], [250, "function-signature"], [251, "function-signature"], [252, "function-signature"], [253, "function-signature"], [254, "function-signature"], [255, "function-signature"], [256, "function-signature"], [257, "function-signature"], [258, "function-signature"], [259, "function-signature"], [260, "function-signature"], [261, "function-signature"], [262, "function-signature"], [263, "function-signature"], [264, "function-signature"], [265, "function-signature"], [266, "function-signature"], [267, "function-signature"], [268, "function-signature"], [269, "function-signature"], [270, "function-signature"], [271, "function-signature"], [272, "function-signature"], [273, "function-signature"], [274, "function-signature"], [275, "function-signature"], [276, "function-signature"], [277, "function-signature"], [279, "function-signature"], [280, "function-signature"], [281, "function-signature"], [282, "function-signature"], [283, "function-signature"], [284, "function-signature"], [285, "function-signature"], [286, "function-signature"], [287, "function-signature"], [288, "function-signature"]], "Fused Layers": [[143, null]], "Future Work": [[4, "future-work"]], "Getting Started": [[202, "getting-started"]], "How It Works": [[215, "how-it-works"], [217, "how-it-works"]], "Image Datasets": [[7, null]], "Image Transformations": [[299, null]], "Inception": [[28, null]], "InceptionResNet": [[32, null]], "Indexing and slicing": [[227, null]], "Inspecting Optimizer State": [[202, null], [203, null], [204, null], [205, null], [206, null], [207, null], [208, null], [209, null], [210, null], [211, null], [212, null], [213, null]], "Integration with lucid": [[3, "integration-with-lucid"], [200, "integration-with-lucid"], [226, "integration-with-lucid"], [300, "integration-with-lucid"]], "Iterating through a tensor": [[227, null]], "Key Components": [[3, "key-components"], [200, "key-components"]], "Key Features": [[4, "key-features"], [8, "key-features"], [64, "key-features"], [65, "key-features"], [66, "key-features"], [67, "key-features"], [72, "key-features"], [202, "key-features"], [226, "key-features"]], "Key Transformations": [[300, "key-transformations"]], "LeNet": [[36, null]], "Learn More": [[226, null]], "Limitations": [[8, "limitations"]], "Linear Algebra Operations": [[13, null]], "Linear Functions": [[111, null], [113, null]], "Linear Layers": [[171, null], [175, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[111, null], [118, null]], "Loss Layers": [[171, null], [181, null]], "Lucid": [[8, null]], "MNIST": [[6, null]], "Matrix Multiplication Rules": [[232, "matrix-multiplication-rules"]], "Metadata Captured": [[218, "metadata-captured"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [6, "methods"], [32, "methods"], [36, "methods"], [73, "methods"], [83, "methods"], [84, "methods"], [201, "methods"], [227, "methods"]], "Modules": [[171, null]], "Normalization Functions": [[111, null], [122, null]], "Normalization Layers": [[171, null], [189, null]], "Notes": [[8, "notes"]], "Optimizers": [[214, null]], "Organizing Models": [[200, "organizing-models"]], "Overview": [[3, "overview"], [4, "overview"], [8, "overview"], [28, "overview"], [29, "overview"], [30, "overview"], [31, "overview"], [32, "overview"], [33, "overview"], [34, "overview"], [36, "overview"], [37, "overview"], [38, "overview"], [39, "overview"], [41, "overview"], [42, "overview"], [43, "overview"], [44, "overview"], [45, "overview"], [46, "overview"], [47, "overview"], [48, "overview"], [59, "overview"], [60, "overview"], [61, "overview"], [62, "overview"], [63, "overview"], [200, "overview"], [202, "overview"], [226, "overview"], [300, "overview"]], "Parameters": [[1, "parameters"], [5, "parameters"], [6, "parameters"], [10, "parameters"], [11, "parameters"], [12, "parameters"], [14, "parameters"], [15, "parameters"], [16, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [20, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [36, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [81, "parameters"], [82, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [87, "parameters"], [88, "parameters"], [89, "parameters"], [91, "parameters"], [92, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [104, "parameters"], [105, "parameters"], [106, "parameters"], [107, "parameters"], [108, "parameters"], [109, "parameters"], [112, "parameters"], [114, "parameters"], [115, "parameters"], [116, "parameters"], [117, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [123, "parameters"], [124, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [141, "parameters"], [142, "parameters"], [144, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [154, "parameters"], [155, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"], [159, "parameters"], [161, "parameters"], [162, "parameters"], [163, "parameters"], [165, "parameters"], [166, "parameters"], [167, "parameters"], [168, "parameters"], [169, "parameters"], [172, "parameters"], [173, "parameters"], [174, "parameters"], [176, "parameters"], [177, "parameters"], [178, "parameters"], [179, "parameters"], [180, "parameters"], [182, "parameters"], [183, "parameters"], [184, "parameters"], [185, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [190, "parameters"], [191, "parameters"], [192, "parameters"], [193, "parameters"], [194, "parameters"], [195, "parameters"], [196, "parameters"], [197, "parameters"], [198, "parameters"], [203, "parameters"], [204, "parameters"], [205, "parameters"], [206, "parameters"], [207, "parameters"], [208, "parameters"], [209, "parameters"], [210, "parameters"], [211, "parameters"], [212, "parameters"], [213, "parameters"], [217, "parameters"], [218, "parameters"], [221, "parameters"], [222, "parameters"], [223, "parameters"], [224, "parameters"], [225, "parameters"], [227, "parameters"], [228, "parameters"], [229, "parameters"], [230, "parameters"], [231, "parameters"], [232, "parameters"], [233, "parameters"], [234, "parameters"], [235, "parameters"], [236, "parameters"], [237, "parameters"], [238, "parameters"], [239, "parameters"], [240, "parameters"], [241, "parameters"], [242, "parameters"], [243, "parameters"], [244, "parameters"], [245, "parameters"], [246, "parameters"], [247, "parameters"], [249, "parameters"], [250, "parameters"], [251, "parameters"], [252, "parameters"], [253, "parameters"], [254, "parameters"], [255, "parameters"], [256, "parameters"], [257, "parameters"], [258, "parameters"], [259, "parameters"], [260, "parameters"], [261, "parameters"], [262, "parameters"], [263, "parameters"], [264, "parameters"], [265, "parameters"], [266, "parameters"], [267, "parameters"], [268, "parameters"], [269, "parameters"], [270, "parameters"], [271, "parameters"], [272, "parameters"], [273, "parameters"], [274, "parameters"], [275, "parameters"], [276, "parameters"], [277, "parameters"], [279, "parameters"], [280, "parameters"], [281, "parameters"], [282, "parameters"], [283, "parameters"], [284, "parameters"], [285, "parameters"], [286, "parameters"], [287, "parameters"], [288, "parameters"], [289, "parameters"], [290, "parameters"], [291, "parameters"], [292, "parameters"], [293, "parameters"], [294, "parameters"], [295, "parameters"], [296, "parameters"], [297, "parameters"], [298, "parameters"]], "Performing backpropagation": [[227, null]], "Pooling Functions": [[111, null], [131, null]], "Pooling Layers": [[171, null], [199, null]], "Potential Pitfalls": [[215, "potential-pitfalls"], [217, "potential-pitfalls"]], "Properties": [[84, "properties"], [227, "properties"]], "Raises": [[10, "raises"], [11, "raises"], [12, "raises"], [14, "raises"], [15, "raises"], [16, "raises"], [17, "raises"], [18, "raises"], [19, "raises"], [20, "raises"]], "Random Number Generations": [[220, null]], "References": [[5, "references"], [6, "references"], [141, "references"], [202, "references"]], "ResNeXt": [[51, null]], "ResNet": [[40, null]], "Returns": [[10, "returns"], [11, "returns"], [12, "returns"], [14, "returns"], [15, "returns"], [16, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [20, "returns"], [22, "returns"], [24, "returns"], [25, "returns"], [26, "returns"], [27, "returns"], [29, "returns"], [30, "returns"], [31, "returns"], [33, "returns"], [34, "returns"], [37, "returns"], [38, "returns"], [39, "returns"], [41, "returns"], [42, "returns"], [43, "returns"], [44, "returns"], [45, "returns"], [46, "returns"], [47, "returns"], [48, "returns"], [49, "returns"], [50, "returns"], [52, "returns"], [53, "returns"], [54, "returns"], [55, "returns"], [56, "returns"], [57, "returns"], [59, "returns"], [60, "returns"], [61, "returns"], [62, "returns"], [63, "returns"], [64, "returns"], [65, "returns"], [66, "returns"], [67, "returns"], [69, "returns"], [70, "returns"], [71, "returns"], [72, "returns"], [74, "returns"], [75, "returns"], [76, "returns"], [77, "returns"], [79, "returns"], [81, "returns"], [91, "returns"], [92, "returns"], [94, "returns"], [95, "returns"], [96, "returns"], [97, "returns"], [98, "returns"], [99, "returns"], [100, "returns"], [101, "returns"], [102, "returns"], [104, "returns"], [105, "returns"], [106, "returns"], [107, "returns"], [108, "returns"], [109, "returns"], [112, "returns"], [114, "returns"], [115, "returns"], [116, "returns"], [117, "returns"], [119, "returns"], [120, "returns"], [121, "returns"], [123, "returns"], [124, "returns"], [125, "returns"], [126, "returns"], [127, "returns"], [128, "returns"], [129, "returns"], [130, "returns"], [132, "returns"], [133, "returns"], [134, "returns"], [136, "returns"], [137, "returns"], [142, "returns"], [144, "returns"], [146, "returns"], [147, "returns"], [148, "returns"], [149, "returns"], [150, "returns"], [151, "returns"], [215, "returns"], [217, "returns"], [221, "returns"], [222, "returns"], [223, "returns"], [224, "returns"], [225, "returns"], [228, "returns"], [229, "returns"], [230, "returns"], [231, "returns"], [232, "returns"], [233, "returns"], [234, "returns"], [235, "returns"], [236, "returns"], [237, "returns"], [238, "returns"], [239, "returns"], [240, "returns"], [241, "returns"], [242, "returns"], [243, "returns"], [244, "returns"], [245, "returns"], [246, "returns"], [247, "returns"], [249, "returns"], [250, "returns"], [251, "returns"], [252, "returns"], [253, "returns"], [254, "returns"], [255, "returns"], [256, "returns"], [257, "returns"], [258, "returns"], [259, "returns"], [260, "returns"], [261, "returns"], [262, "returns"], [263, "returns"], [264, "returns"], [265, "returns"], [266, "returns"], [267, "returns"], [268, "returns"], [269, "returns"], [270, "returns"], [271, "returns"], [272, "returns"], [273, "returns"], [274, "returns"], [275, "returns"], [276, "returns"], [277, "returns"], [279, "returns"], [280, "returns"], [281, "returns"], [282, "returns"], [283, "returns"], [284, "returns"], [285, "returns"], [286, "returns"], [287, "returns"], [288, "returns"]], "SENet": [[58, null]], "SKNet": [[68, null]], "See Also": [[202, "see-also"]], "Selective Kernel": [[143, null]], "Squeeze-and-Excitation": [[143, null]], "Summary Table": [[81, "summary-table"]], "Tensor Generating Functions": [[248, null]], "Tensor Operations": [[248, null]], "Tensor Utilites": [[278, null]], "Type Definitions": [[219, "type-definitions"]], "Unary Functions": [[248, null]], "Usage": [[4, "usage"], [82, "usage"], [137, "usage"], [215, "usage"], [216, "usage"], [217, "usage"], [279, "usage"], [289, "usage"], [290, "usage"], [300, "usage"]], "Use another Tensor as input": [[274, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using the ASGD Optimizer": [[203, null]], "Using the Adadelta Optimizer": [[204, null]], "Using the Adagrad Optimizer": [[205, null]], "Using the Adam Optimizer": [[206, null]], "Using the AdamW Optimizer": [[207, null]], "Using the Adamax Optimizer": [[208, null]], "Using the NAdam Optimizer": [[209, null]], "Using the RAdam Optimizer": [[210, null]], "Using the RMSprop Optimizer": [[211, null]], "Using the Rprop Optimizer": [[212, null]], "Using the SGD Optimizer": [[213, null]], "Utility Functions": [[111, null], [135, null]], "VGGNet": [[73, null]], "Weight Initializations": [[145, null]], "Why Use Type Aliases?": [[219, null]], "ZFNet": [[78, null]], "activation Functions": [[111, null]], "alexnet": [[22, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "densenet_121": [[24, null]], "densenet_169": [[25, null]], "densenet_201": [[26, null]], "densenet_264": [[27, null]], "inception_resnet_v1": [[33, null]], "inception_resnet_v2": [[34, null]], "inception_v1": [[29, null]], "inception_v3": [[30, null]], "inception_v4": [[31, null]], "lenet_1": [[37, null]], "lenet_4": [[38, null]], "lenet_5": [[39, null]], "lucid.Tensor": [[227, null]], "lucid.abs": [[249, null]], "lucid.add": [[228, null]], "lucid.arange": [[239, null]], "lucid.arccos": [[250, null]], "lucid.arcsin": [[251, null]], "lucid.arctan": [[252, null]], "lucid.clip": [[253, null]], "lucid.concatenate": [[275, null]], "lucid.cos": [[254, null]], "lucid.cosh": [[255, null]], "lucid.cube": [[256, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[240, null]], "lucid.div": [[229, null]], "lucid.dot": [[230, null]], "lucid.empty": [[241, null]], "lucid.empty_like": [[242, null]], "lucid.exp": [[257, null]], "lucid.eye": [[243, null]], "lucid.flatten": [[276, null]], "lucid.grad_enabled": [[215, null]], "lucid.hstack": [[277, null]], "lucid.inner": [[231, null]], "lucid.linalg": [[9, null]], "lucid.linalg.cholesky": [[10, null]], "lucid.linalg.det": [[11, null]], "lucid.linalg.eig": [[12, null]], "lucid.linalg.inv": [[14, null]], "lucid.linalg.matrix_power": [[15, null]], "lucid.linalg.norm": [[16, null]], "lucid.linalg.pinv": [[17, null]], "lucid.linalg.qr": [[18, null]], "lucid.linalg.solve": [[19, null]], "lucid.linalg.svd": [[20, null]], "lucid.log": [[258, null]], "lucid.matmul": [[232, null]], "lucid.max": [[259, null]], "lucid.maximum": [[233, null]], "lucid.mean": [[260, null]], "lucid.meshgrid": [[279, null]], "lucid.min": [[261, null]], "lucid.minimum": [[234, null]], "lucid.models": [[80, null]], "lucid.mul": [[235, null]], "lucid.newaxis": [[216, null]], "lucid.nn": [[200, null]], "lucid.nn.functional": [[111, null]], "lucid.no_grad": [[217, null]], "lucid.ones": [[244, null]], "lucid.ones_like": [[245, null]], "lucid.optim": [[202, null]], "lucid.outer": [[236, null]], "lucid.pad": [[280, null]], "lucid.power": [[237, null]], "lucid.random": [[226, null]], "lucid.random.rand": [[221, null]], "lucid.random.randint": [[222, null]], "lucid.random.randn": [[223, null]], "lucid.random.seed": [[224, null]], "lucid.random.uniform": [[225, null]], "lucid.ravel": [[281, null]], "lucid.reciprocal": [[262, null]], "lucid.register_model": [[218, null]], "lucid.repeat": [[282, null]], "lucid.reshape": [[283, null]], "lucid.sign": [[263, null]], "lucid.sin": [[264, null]], "lucid.sinh": [[265, null]], "lucid.sqrt": [[266, null]], "lucid.square": [[267, null]], "lucid.squeeze": [[284, null]], "lucid.stack": [[285, null]], "lucid.sub": [[238, null]], "lucid.sum": [[268, null]], "lucid.tan": [[269, null]], "lucid.tanh": [[270, null]], "lucid.tensor": [[274, null]], "lucid.tile": [[286, null]], "lucid.trace": [[271, null]], "lucid.transforms": [[300, null]], "lucid.transpose": [[272, null]], "lucid.types": [[219, null]], "lucid.unsqueeze": [[287, null]], "lucid.var": [[273, null]], "lucid.vstack": [[288, null]], "lucid.zeros": [[246, null]], "lucid.zeros_like": [[247, null]], "models.summarize": [[81, null]], "nn.AdaptiveAvgPool1d": [[190, null]], "nn.AdaptiveAvgPool2d": [[191, null]], "nn.AdaptiveAvgPool3d": [[192, null]], "nn.AlphaDropout": [[165, null]], "nn.AvgPool1d": [[193, null]], "nn.AvgPool2d": [[194, null]], "nn.AvgPool3d": [[195, null]], "nn.BCELoss": [[176, null]], "nn.BatchNorm1d": [[182, null]], "nn.BatchNorm2d": [[183, null]], "nn.BatchNorm3d": [[184, null]], "nn.Bilinear": [[172, null]], "nn.Buffer": [[82, null]], "nn.Conv1d": [[161, null]], "nn.Conv2d": [[162, null]], "nn.Conv3d": [[163, null]], "nn.ConvBNReLU1d": [[138, null]], "nn.ConvBNReLU2d": [[139, null]], "nn.ConvBNReLU3d": [[140, null]], "nn.CrossEntropyLoss": [[177, null]], "nn.Dropout": [[166, null]], "nn.Dropout1d": [[167, null]], "nn.Dropout2d": [[168, null]], "nn.Dropout3d": [[169, null]], "nn.ELU": [[152, null]], "nn.GELU": [[153, null]], "nn.HuberLoss": [[178, null]], "nn.Identity": [[173, null]], "nn.InstanceNorm1d": [[185, null]], "nn.InstanceNorm2d": [[186, null]], "nn.InstanceNorm3d": [[187, null]], "nn.LayerNorm": [[188, null]], "nn.LeakyReLU": [[154, null]], "nn.Linear": [[174, null]], "nn.MSELoss": [[179, null]], "nn.MaxPool1d": [[196, null]], "nn.MaxPool2d": [[197, null]], "nn.MaxPool3d": [[198, null]], "nn.Module": [[83, null]], "nn.ModuleDict": [[85, null]], "nn.ModuleList": [[86, null]], "nn.NLLLoss": [[180, null]], "nn.Parameter": [[84, null]], "nn.ParameterDict": [[87, null]], "nn.ParameterList": [[88, null]], "nn.ReLU": [[155, null]], "nn.SELU": [[156, null]], "nn.SEModule": [[141, null]], "nn.SelectiveKernel": [[142, null]], "nn.Sequential": [[89, null]], "nn.Sigmoid": [[157, null]], "nn.Softmax": [[158, null]], "nn.Tanh": [[159, null]], "nn.functional.adaptive_avg_pool1d": [[125, null]], "nn.functional.adaptive_avg_pool2d": [[126, null]], "nn.functional.adaptive_avg_pool3d": [[127, null]], "nn.functional.alpha_dropout": [[105, null]], "nn.functional.avg_pool1d": [[128, null]], "nn.functional.avg_pool2d": [[129, null]], "nn.functional.avg_pool3d": [[130, null]], "nn.functional.batch_norm": [[121, null]], "nn.functional.bilinear": [[112, null]], "nn.functional.binary_cross_entropy": [[115, null]], "nn.functional.conv1d": [[100, null]], "nn.functional.conv2d": [[101, null]], "nn.functional.conv3d": [[102, null]], "nn.functional.cross_entropy": [[116, null]], "nn.functional.dropout": [[106, null]], "nn.functional.dropout1d": [[107, null]], "nn.functional.dropout2d": [[108, null]], "nn.functional.dropout3d": [[109, null]], "nn.functional.elu": [[91, null]], "nn.functional.gelu": [[92, null]], "nn.functional.huber_loss": [[117, null]], "nn.functional.instance_norm": [[123, null]], "nn.functional.interpolate": [[136, null]], "nn.functional.layer_norm": [[124, null]], "nn.functional.leaky_relu": [[94, null]], "nn.functional.linear": [[114, null]], "nn.functional.max_pool1d": [[132, null]], "nn.functional.max_pool2d": [[133, null]], "nn.functional.max_pool3d": [[134, null]], "nn.functional.mse_loss": [[119, null]], "nn.functional.nll_loss": [[120, null]], "nn.functional.relu": [[95, null]], "nn.functional.rotate": [[137, null]], "nn.functional.selu": [[96, null]], "nn.functional.sigmoid": [[97, null]], "nn.functional.softmax": [[98, null]], "nn.functional.tanh": [[99, null]], "nn.functional.unfold": [[104, null]], "nn.init.constant": [[144, null]], "nn.init.kaiming_normal": [[146, null]], "nn.init.kaiming_uniform": [[147, null]], "nn.init.normal": [[148, null]], "nn.init.uniform": [[149, null]], "nn.init.xavier_normal": [[150, null]], "nn.init.xavier_uniform": [[151, null]], "optim.ASGD": [[203, null]], "optim.Adadelta": [[204, null]], "optim.Adagrad": [[205, null]], "optim.Adam": [[206, null]], "optim.AdamW": [[207, null]], "optim.Adamax": [[208, null]], "optim.NAdam": [[209, null]], "optim.Optimizer": [[201, null]], "optim.RAdam": [[210, null]], "optim.RMSprop": [[211, null]], "optim.Rprop": [[212, null]], "optim.SGD": [[213, null]], "resnet_1001": [[41, null]], "resnet_101": [[42, null]], "resnet_152": [[43, null]], "resnet_18": [[44, null]], "resnet_200": [[45, null]], "resnet_269": [[46, null]], "resnet_34": [[47, null]], "resnet_50": [[48, null]], "resnext_101_32x16d": [[52, null]], "resnext_101_32x32d": [[53, null]], "resnext_101_32x4d": [[54, null]], "resnext_101_32x8d": [[55, null]], "resnext_101_64x4d": [[56, null]], "resnext_50_32x4d": [[57, null]], "se_resnet_101": [[59, null]], "se_resnet_152": [[60, null]], "se_resnet_18": [[61, null]], "se_resnet_34": [[62, null]], "se_resnet_50": [[63, null]], "se_resnext_101_32x4d": [[64, null]], "se_resnext_101_32x8d": [[65, null]], "se_resnext_101_64x4d": [[66, null]], "se_resnext_50_32x4d": [[67, null]], "sk_resnet_18": [[69, null]], "sk_resnet_34": [[70, null]], "sk_resnet_50": [[71, null]], "sk_resnext_50_32x4d": [[72, null]], "transforms.CenterCrop": [[291, null]], "transforms.Compose": [[289, null]], "transforms.Normalize": [[292, null]], "transforms.RandomCrop": [[293, null]], "transforms.RandomGrayscale": [[294, null]], "transforms.RandomHorizontalFlip": [[295, null]], "transforms.RandomRotation": [[296, null]], "transforms.RandomVerticalFlip": [[297, null]], "transforms.Resize": [[298, null]], "transforms.ToTensor": [[290, null]], "vggnet_11": [[74, null]], "vggnet_13": [[75, null]], "vggnet_16": [[76, null]], "vggnet_19": [[77, null]], "wide_resnet_101": [[49, null]], "wide_resnet_50": [[50, null]], "zfnet": [[79, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/FashionMNIST", "datasets/image/MNIST", "datasets/image/index", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/conv/alex/AlexNet", "models/conv/alex/alexnet", "models/conv/dense/DenseNet", "models/conv/dense/densenet_121", "models/conv/dense/densenet_169", "models/conv/dense/densenet_201", "models/conv/dense/densenet_264", "models/conv/inception/Inception", "models/conv/inception/inception_v1", "models/conv/inception/inception_v3", "models/conv/inception/inception_v4", "models/conv/inception_res/InceptionResNet", "models/conv/inception_res/inception_resnet_v1", "models/conv/inception_res/inception_resnet_v2", "models/conv/index", "models/conv/lenet/LeNet", "models/conv/lenet/lenet_1", "models/conv/lenet/lenet_4", "models/conv/lenet/lenet_5", "models/conv/resnet/ResNet", "models/conv/resnet/resnet_1001", "models/conv/resnet/resnet_101", "models/conv/resnet/resnet_152", "models/conv/resnet/resnet_18", "models/conv/resnet/resnet_200", "models/conv/resnet/resnet_269", "models/conv/resnet/resnet_34", "models/conv/resnet/resnet_50", "models/conv/resnet/wide_resnet_101", "models/conv/resnet/wide_resnet_50", "models/conv/resnext/ResNeXt", "models/conv/resnext/resnext_101_32x16d", "models/conv/resnext/resnext_101_32x32d", "models/conv/resnext/resnext_101_32x4d", "models/conv/resnext/resnext_101_32x8d", "models/conv/resnext/resnext_101_64x4d", "models/conv/resnext/resnext_50_32x4d", "models/conv/senet/SENet", "models/conv/senet/se_resnet_101", "models/conv/senet/se_resnet_152", "models/conv/senet/se_resnet_18", "models/conv/senet/se_resnet_34", "models/conv/senet/se_resnet_50", "models/conv/senet/se_resnext_101_32x4d", "models/conv/senet/se_resnext_101_32x8d", "models/conv/senet/se_resnext_101_64x4d", "models/conv/senet/se_resnext_50_32x4d", "models/conv/sknet/SKNet", "models/conv/sknet/sk_resnet_18", "models/conv/sknet/sk_resnet_34", "models/conv/sknet/sk_resnet_50", "models/conv/sknet/sk_resnext_50_32x4d", "models/conv/vgg/VGGNet", "models/conv/vgg/vggnet_11", "models/conv/vgg/vggnet_13", "models/conv/vgg/vggnet_16", "models/conv/vgg/vggnet_19", "models/conv/zfnet/ZFNet", "models/conv/zfnet/zfnet", "models/models", "models/summarize", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/fused/ConvBNReLU1d", "nn/fused/ConvBNReLU2d", "nn/fused/ConvBNReLU3d", "nn/fused/SEModule", "nn/fused/SelectiveKernel", "nn/fused/index", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/nn", "optim/Optimizer", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "others/types", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/meshgrid", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/FashionMNIST.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/conv/alex/AlexNet.rst", "models/conv/alex/alexnet.rst", "models/conv/dense/DenseNet.rst", "models/conv/dense/densenet_121.rst", "models/conv/dense/densenet_169.rst", "models/conv/dense/densenet_201.rst", "models/conv/dense/densenet_264.rst", "models/conv/inception/Inception.rst", "models/conv/inception/inception_v1.rst", "models/conv/inception/inception_v3.rst", "models/conv/inception/inception_v4.rst", "models/conv/inception_res/InceptionResNet.rst", "models/conv/inception_res/inception_resnet_v1.rst", "models/conv/inception_res/inception_resnet_v2.rst", "models/conv/index.rst", "models/conv/lenet/LeNet.rst", "models/conv/lenet/lenet_1.rst", "models/conv/lenet/lenet_4.rst", "models/conv/lenet/lenet_5.rst", "models/conv/resnet/ResNet.rst", "models/conv/resnet/resnet_1001.rst", "models/conv/resnet/resnet_101.rst", "models/conv/resnet/resnet_152.rst", "models/conv/resnet/resnet_18.rst", "models/conv/resnet/resnet_200.rst", "models/conv/resnet/resnet_269.rst", "models/conv/resnet/resnet_34.rst", "models/conv/resnet/resnet_50.rst", "models/conv/resnet/wide_resnet_101.rst", "models/conv/resnet/wide_resnet_50.rst", "models/conv/resnext/ResNeXt.rst", "models/conv/resnext/resnext_101_32x16d.rst", "models/conv/resnext/resnext_101_32x32d.rst", "models/conv/resnext/resnext_101_32x4d.rst", "models/conv/resnext/resnext_101_32x8d.rst", "models/conv/resnext/resnext_101_64x4d.rst", "models/conv/resnext/resnext_50_32x4d.rst", "models/conv/senet/SENet.rst", "models/conv/senet/se_resnet_101.rst", "models/conv/senet/se_resnet_152.rst", "models/conv/senet/se_resnet_18.rst", "models/conv/senet/se_resnet_34.rst", "models/conv/senet/se_resnet_50.rst", "models/conv/senet/se_resnext_101_32x4d.rst", "models/conv/senet/se_resnext_101_32x8d.rst", "models/conv/senet/se_resnext_101_64x4d.rst", "models/conv/senet/se_resnext_50_32x4d.rst", "models/conv/sknet/SKNet.rst", "models/conv/sknet/sk_resnet_18.rst", "models/conv/sknet/sk_resnet_34.rst", "models/conv/sknet/sk_resnet_50.rst", "models/conv/sknet/sk_resnext_50_32x4d.rst", "models/conv/vgg/VGGNet.rst", "models/conv/vgg/vggnet_11.rst", "models/conv/vgg/vggnet_13.rst", "models/conv/vgg/vggnet_16.rst", "models/conv/vgg/vggnet_19.rst", "models/conv/zfnet/ZFNet.rst", "models/conv/zfnet/zfnet.rst", "models/models.rst", "models/summarize.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/fused/ConvBNReLU1d.rst", "nn/fused/ConvBNReLU2d.rst", "nn/fused/ConvBNReLU3d.rst", "nn/fused/SEModule.rst", "nn/fused/SelectiveKernel.rst", "nn/fused/index.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "others/types.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"abs() (in module lucid)": [[249, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[204, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[205, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[206, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[208, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[207, "lucid.optim.AdamW", false]], "adaptive_avg_pool1d() (in module lucid.nn.functional)": [[125, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[126, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[127, "lucid.nn.functional.adaptive_avg_pool3d", false]], "adaptiveavgpool1d (class in lucid.nn)": [[190, "lucid.nn.AdaptiveAvgPool1d", false]], "adaptiveavgpool2d (class in lucid.nn)": [[191, "lucid.nn.AdaptiveAvgPool2d", false]], "adaptiveavgpool3d (class in lucid.nn)": [[192, "lucid.nn.AdaptiveAvgPool3d", false]], "add() (in module lucid)": [[228, "lucid.add", false]], "alexnet (class in lucid.models)": [[21, "lucid.models.AlexNet", false]], "alexnet() (in module lucid.models)": [[22, "lucid.models.alexnet", false]], "alpha_dropout() (in module lucid.nn.functional)": [[105, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[165, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[239, "lucid.arange", false]], "arccos() (in module lucid)": [[250, "lucid.arccos", false]], "arcsin() (in module lucid)": [[251, "lucid.arcsin", false]], "arctan() (in module lucid)": [[252, "lucid.arctan", false]], "asgd (class in lucid.optim)": [[203, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[128, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[129, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[130, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[193, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[194, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[195, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[121, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[182, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[183, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[184, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[176, "lucid.nn.BCELoss", false]], "bilinear (class in lucid.nn)": [[172, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[112, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[115, "lucid.nn.functional.binary_cross_entropy", false]], "buffer (class in lucid.nn)": [[82, "lucid.nn.Buffer", false]], "centercrop (class in lucid.transforms)": [[291, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[10, "lucid.linalg.cholesky", false]], "clip() (in module lucid)": [[253, "lucid.clip", false]], "compose (class in lucid.transforms)": [[289, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[275, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[144, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[161, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[100, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[162, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[101, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[163, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[102, "lucid.nn.functional.conv3d", false]], "convbnrelu1d (class in lucid.nn)": [[138, "lucid.nn.ConvBNReLU1d", false]], "convbnrelu2d (class in lucid.nn)": [[139, "lucid.nn.ConvBNReLU2d", false]], "convbnrelu3d (class in lucid.nn)": [[140, "lucid.nn.ConvBNReLU3d", false]], "cos() (in module lucid)": [[254, "lucid.cos", false]], "cosh() (in module lucid)": [[255, "lucid.cosh", false]], "cross_entropy() (in module lucid.nn.functional)": [[116, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[177, "lucid.nn.CrossEntropyLoss", false]], "cube() (in module lucid)": [[256, "lucid.cube", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "densenet (class in lucid.models)": [[23, "lucid.models.DenseNet", false]], "densenet_121() (in module lucid.models)": [[24, "lucid.models.densenet_121", false]], "densenet_169() (in module lucid.models)": [[25, "lucid.models.densenet_169", false]], "densenet_201() (in module lucid.models)": [[26, "lucid.models.densenet_201", false]], "densenet_264() (in module lucid.models)": [[27, "lucid.models.densenet_264", false]], "det() (in module lucid.linalg)": [[11, "lucid.linalg.det", false]], "diag() (in module lucid)": [[240, "lucid.diag", false]], "div() (in module lucid)": [[229, "lucid.div", false]], "dot() (in module lucid)": [[230, "lucid.dot", false]], "dropout (class in lucid.nn)": [[166, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[106, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[167, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[107, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[168, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[108, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[169, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[109, "lucid.nn.functional.dropout3d", false]], "eig() (in module lucid.linalg)": [[12, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[152, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[91, "lucid.nn.functional.elu", false]], "empty() (in module lucid)": [[241, "lucid.empty", false]], "empty_like() (in module lucid)": [[242, "lucid.empty_like", false]], "exp() (in module lucid)": [[257, "lucid.exp", false]], "eye() (in module lucid)": [[243, "lucid.eye", false]], "fashionmnist (class in lucid.datasets)": [[5, "lucid.datasets.FashionMNIST", false]], "flatten() (in module lucid)": [[276, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[153, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[92, "lucid.nn.functional.gelu", false]], "grad_enabled() (in module lucid)": [[215, "lucid.grad_enabled", false]], "hstack() (in module lucid)": [[277, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[117, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[178, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[173, "lucid.nn.Identity", false]], "inception (class in lucid.models)": [[28, "lucid.models.Inception", false]], "inception_resnet_v1() (in module lucid.models)": [[33, "lucid.models.inception_resnet_v1", false]], "inception_resnet_v2() (in module lucid.models)": [[34, "lucid.models.inception_resnet_v2", false]], "inception_v1() (in module lucid.models)": [[29, "lucid.models.inception_v1", false]], "inception_v3() (in module lucid.models)": [[30, "lucid.models.inception_v3", false]], "inception_v4() (in module lucid.models)": [[31, "lucid.models.inception_v4", false]], "inceptionresnet (class in lucid.models)": [[32, "lucid.models.InceptionResNet", false]], "inner() (in module lucid)": [[231, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[123, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[185, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[186, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[187, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[136, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[14, "lucid.linalg.inv", false]], "kaiming_normal() (in module lucid.nn.init)": [[146, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[147, "lucid.nn.init.kaiming_uniform", false]], "layer_norm() (in module lucid.nn.functional)": [[124, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[188, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[94, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[154, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[36, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[37, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[38, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[39, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[174, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[114, "lucid.nn.functional.linear", false]], "log() (in module lucid)": [[258, "lucid.log", false]], "lucid": [[8, "module-lucid", false]], "matmul() (in module lucid)": [[232, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[15, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[259, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[132, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[133, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[134, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[233, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[196, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[197, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[198, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[260, "lucid.mean", false]], "meshgrid() (in module lucid)": [[279, "lucid.meshgrid", false]], "min() (in module lucid)": [[261, "lucid.min", false]], "minimum() (in module lucid)": [[234, "lucid.minimum", false]], "mnist (class in lucid.datasets)": [[6, "lucid.datasets.MNIST", false]], "module": [[8, "module-lucid", false]], "module (class in lucid.nn)": [[83, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[85, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[86, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[119, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[179, "lucid.nn.MSELoss", false]], "mul() (in module lucid)": [[235, "lucid.mul", false]], "nadam (class in lucid.optim)": [[209, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[120, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[180, "lucid.nn.NLLLoss", false]], "no_grad() (in module lucid)": [[217, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[16, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[148, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[292, "lucid.transforms.Normalize", false]], "ones() (in module lucid)": [[244, "lucid.ones", false]], "ones_like() (in module lucid)": [[245, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[201, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[236, "lucid.outer", false]], "pad() (in module lucid)": [[280, "lucid.pad", false]], "parameter (class in lucid.nn)": [[84, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[87, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[88, "lucid.nn.ParameterList", false]], "pinv() (in module lucid.linalg)": [[17, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[237, "lucid.power", false]], "qr() (in module lucid.linalg)": [[18, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[210, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[221, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[222, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[223, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[293, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[294, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[295, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[296, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[297, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[281, "lucid.ravel", false]], "reciprocal() (in module lucid)": [[262, "lucid.reciprocal", false]], "register_model() (in module lucid)": [[218, "lucid.register_model", false]], "relu (class in lucid.nn)": [[155, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[95, "lucid.nn.functional.relu", false]], "repeat() (in module lucid)": [[282, "lucid.repeat", false]], "reshape() (in module lucid)": [[283, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[298, "lucid.transforms.Resize", false]], "resnet (class in lucid.models)": [[40, "lucid.models.ResNet", false]], "resnet_1001() (in module lucid.models)": [[41, "lucid.models.resnet_1001", false]], "resnet_101() (in module lucid.models)": [[42, "lucid.models.resnet_101", false]], "resnet_152() (in module lucid.models)": [[43, "lucid.models.resnet_152", false]], "resnet_18() (in module lucid.models)": [[44, "lucid.models.resnet_18", false]], "resnet_200() (in module lucid.models)": [[45, "lucid.models.resnet_200", false]], "resnet_269() (in module lucid.models)": [[46, "lucid.models.resnet_269", false]], "resnet_34() (in module lucid.models)": [[47, "lucid.models.resnet_34", false]], "resnet_50() (in module lucid.models)": [[48, "lucid.models.resnet_50", false]], "resnext (class in lucid.models)": [[51, "lucid.models.ResNeXt", false]], "resnext_101_32x16d() (in module lucid.models)": [[52, "lucid.models.resnext_101_32x16d", false]], "resnext_101_32x32d() (in module lucid.models)": [[53, "lucid.models.resnext_101_32x32d", false]], "resnext_101_32x4d() (in module lucid.models)": [[54, "lucid.models.resnext_101_32x4d", false]], "resnext_101_32x8d() (in module lucid.models)": [[55, "lucid.models.resnext_101_32x8d", false]], "resnext_101_64x4d() (in module lucid.models)": [[56, "lucid.models.resnext_101_64x4d", false]], "resnext_50_32x4d() (in module lucid.models)": [[57, "lucid.models.resnext_50_32x4d", false]], "rmsprop (class in lucid.optim)": [[211, "lucid.optim.RMSprop", false]], "rotate() (in module lucid.nn.functional)": [[137, "lucid.nn.functional.rotate", false]], "rprop (class in lucid.optim)": [[212, "lucid.optim.Rprop", false]], "se_resnet_101() (in module lucid.models)": [[59, "lucid.models.se_resnet_101", false]], "se_resnet_152() (in module lucid.models)": [[60, "lucid.models.se_resnet_152", false]], "se_resnet_18() (in module lucid.models)": [[61, "lucid.models.se_resnet_18", false]], "se_resnet_34() (in module lucid.models)": [[62, "lucid.models.se_resnet_34", false]], "se_resnet_50() (in module lucid.models)": [[63, "lucid.models.se_resnet_50", false]], "se_resnext_101_32x4d() (in module lucid.models)": [[64, "lucid.models.se_resnext_101_32x4d", false]], "se_resnext_101_32x8d() (in module lucid.models)": [[65, "lucid.models.se_resnext_101_32x8d", false]], "se_resnext_101_64x4d() (in module lucid.models)": [[66, "lucid.models.se_resnext_101_64x4d", false]], "se_resnext_50_32x4d() (in module lucid.models)": [[67, "lucid.models.se_resnext_50_32x4d", false]], "seed() (in module lucid.random)": [[224, "lucid.random.seed", false]], "selectivekernel (class in lucid.nn)": [[142, "lucid.nn.SelectiveKernel", false]], "selu (class in lucid.nn)": [[156, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[96, "lucid.nn.functional.selu", false]], "semodule (class in lucid.nn)": [[141, "lucid.nn.SEModule", false]], "senet (class in lucid.models)": [[58, "lucid.models.SENet", false]], "sequential (class in lucid.nn)": [[89, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[213, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[157, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[97, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[263, "lucid.sign", false]], "sin() (in module lucid)": [[264, "lucid.sin", false]], "sinh() (in module lucid)": [[265, "lucid.sinh", false]], "sk_resnet_18() (in module lucid.models)": [[69, "lucid.models.sk_resnet_18", false]], "sk_resnet_34() (in module lucid.models)": [[70, "lucid.models.sk_resnet_34", false]], "sk_resnet_50() (in module lucid.models)": [[71, "lucid.models.sk_resnet_50", false]], "sk_resnext_50_32x4d() (in module lucid.models)": [[72, "lucid.models.sk_resnext_50_32x4d", false]], "sknet (class in lucid.models)": [[68, "lucid.models.SKNet", false]], "softmax (class in lucid.nn)": [[158, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[98, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[19, "lucid.linalg.solve", false]], "sqrt() (in module lucid)": [[266, "lucid.sqrt", false]], "square() (in module lucid)": [[267, "lucid.square", false]], "squeeze() (in module lucid)": [[284, "lucid.squeeze", false]], "stack() (in module lucid)": [[285, "lucid.stack", false]], "sub() (in module lucid)": [[238, "lucid.sub", false]], "sum() (in module lucid)": [[268, "lucid.sum", false]], "summarize() (in module lucid.models)": [[81, "lucid.models.summarize", false]], "svd() (in module lucid.linalg)": [[20, "lucid.linalg.svd", false]], "tan() (in module lucid)": [[269, "lucid.tan", false]], "tanh (class in lucid.nn)": [[159, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[270, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[99, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[227, "lucid.Tensor", false]], "tensor() (in module lucid)": [[274, "lucid.tensor", false]], "tile() (in module lucid)": [[286, "lucid.tile", false]], "totensor (class in lucid.transforms)": [[290, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[271, "lucid.trace", false]], "transpose() (in module lucid)": [[272, "lucid.transpose", false]], "unfold() (in module lucid.nn.functional)": [[104, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[149, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[225, "lucid.random.uniform", false]], "unsqueeze() (in module lucid)": [[287, "lucid.unsqueeze", false]], "var() (in module lucid)": [[273, "lucid.var", false]], "vggnet (class in lucid.models)": [[73, "lucid.models.VGGNet", false]], "vggnet_11() (in module lucid.models)": [[74, "lucid.models.vggnet_11", false]], "vggnet_13() (in module lucid.models)": [[75, "lucid.models.vggnet_13", false]], "vggnet_16() (in module lucid.models)": [[76, "lucid.models.vggnet_16", false]], "vggnet_19() (in module lucid.models)": [[77, "lucid.models.vggnet_19", false]], "vstack() (in module lucid)": [[288, "lucid.vstack", false]], "wide_resnet_101() (in module lucid.models)": [[49, "lucid.models.wide_resnet_101", false]], "wide_resnet_50() (in module lucid.models)": [[50, "lucid.models.wide_resnet_50", false]], "xavier_normal() (in module lucid.nn.init)": [[150, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[151, "lucid.nn.init.xavier_uniform", false]], "zeros() (in module lucid)": [[246, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[247, "lucid.zeros_like", false]], "zfnet (class in lucid.models)": [[78, "lucid.models.ZFNet", false]], "zfnet() (in module lucid.models)": [[79, "lucid.models.zfnet", false]]}, "objects": {"": [[8, 0, 0, "-", "lucid"]], "lucid": [[227, 1, 1, "", "Tensor"], [249, 2, 1, "", "abs"], [228, 2, 1, "", "add"], [239, 2, 1, "", "arange"], [250, 2, 1, "", "arccos"], [251, 2, 1, "", "arcsin"], [252, 2, 1, "", "arctan"], [253, 2, 1, "", "clip"], [275, 2, 1, "", "concatenate"], [254, 2, 1, "", "cos"], [255, 2, 1, "", "cosh"], [256, 2, 1, "", "cube"], [240, 2, 1, "", "diag"], [229, 2, 1, "", "div"], [230, 2, 1, "", "dot"], [241, 2, 1, "", "empty"], [242, 2, 1, "", "empty_like"], [257, 2, 1, "", "exp"], [243, 2, 1, "", "eye"], [276, 2, 1, "", "flatten"], [215, 2, 1, "", "grad_enabled"], [277, 2, 1, "", "hstack"], [231, 2, 1, "", "inner"], [258, 2, 1, "", "log"], [232, 2, 1, "", "matmul"], [259, 2, 1, "", "max"], [233, 2, 1, "", "maximum"], [260, 2, 1, "", "mean"], [279, 2, 1, "", "meshgrid"], [261, 2, 1, "", "min"], [234, 2, 1, "", "minimum"], [235, 2, 1, "", "mul"], [217, 2, 1, "", "no_grad"], [244, 2, 1, "", "ones"], [245, 2, 1, "", "ones_like"], [236, 2, 1, "", "outer"], [280, 2, 1, "", "pad"], [237, 2, 1, "", "power"], [281, 2, 1, "", "ravel"], [262, 2, 1, "", "reciprocal"], [218, 2, 1, "", "register_model"], [282, 2, 1, "", "repeat"], [283, 2, 1, "", "reshape"], [263, 2, 1, "", "sign"], [264, 2, 1, "", "sin"], [265, 2, 1, "", "sinh"], [266, 2, 1, "", "sqrt"], [267, 2, 1, "", "square"], [284, 2, 1, "", "squeeze"], [285, 2, 1, "", "stack"], [238, 2, 1, "", "sub"], [268, 2, 1, "", "sum"], [269, 2, 1, "", "tan"], [270, 2, 1, "", "tanh"], [274, 2, 1, "", "tensor"], [286, 2, 1, "", "tile"], [271, 2, 1, "", "trace"], [272, 2, 1, "", "transpose"], [287, 2, 1, "", "unsqueeze"], [273, 2, 1, "", "var"], [288, 2, 1, "", "vstack"], [246, 2, 1, "", "zeros"], [247, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "FashionMNIST"], [6, 1, 1, "", "MNIST"]], "lucid.linalg": [[10, 2, 1, "", "cholesky"], [11, 2, 1, "", "det"], [12, 2, 1, "", "eig"], [14, 2, 1, "", "inv"], [15, 2, 1, "", "matrix_power"], [16, 2, 1, "", "norm"], [17, 2, 1, "", "pinv"], [18, 2, 1, "", "qr"], [19, 2, 1, "", "solve"], [20, 2, 1, "", "svd"]], "lucid.models": [[21, 1, 1, "", "AlexNet"], [23, 1, 1, "", "DenseNet"], [28, 1, 1, "", "Inception"], [32, 1, 1, "", "InceptionResNet"], [36, 1, 1, "", "LeNet"], [51, 1, 1, "", "ResNeXt"], [40, 1, 1, "", "ResNet"], [58, 1, 1, "", "SENet"], [68, 1, 1, "", "SKNet"], [73, 1, 1, "", "VGGNet"], [78, 1, 1, "", "ZFNet"], [22, 2, 1, "", "alexnet"], [24, 2, 1, "", "densenet_121"], [25, 2, 1, "", "densenet_169"], [26, 2, 1, "", "densenet_201"], [27, 2, 1, "", "densenet_264"], [33, 2, 1, "", "inception_resnet_v1"], [34, 2, 1, "", "inception_resnet_v2"], [29, 2, 1, "", "inception_v1"], [30, 2, 1, "", "inception_v3"], [31, 2, 1, "", "inception_v4"], [37, 2, 1, "", "lenet_1"], [38, 2, 1, "", "lenet_4"], [39, 2, 1, "", "lenet_5"], [41, 2, 1, "", "resnet_1001"], [42, 2, 1, "", "resnet_101"], [43, 2, 1, "", "resnet_152"], [44, 2, 1, "", "resnet_18"], [45, 2, 1, "", "resnet_200"], [46, 2, 1, "", "resnet_269"], [47, 2, 1, "", "resnet_34"], [48, 2, 1, "", "resnet_50"], [52, 2, 1, "", "resnext_101_32x16d"], [53, 2, 1, "", "resnext_101_32x32d"], [54, 2, 1, "", "resnext_101_32x4d"], [55, 2, 1, "", "resnext_101_32x8d"], [56, 2, 1, "", "resnext_101_64x4d"], [57, 2, 1, "", "resnext_50_32x4d"], [59, 2, 1, "", "se_resnet_101"], [60, 2, 1, "", "se_resnet_152"], [61, 2, 1, "", "se_resnet_18"], [62, 2, 1, "", "se_resnet_34"], [63, 2, 1, "", "se_resnet_50"], [64, 2, 1, "", "se_resnext_101_32x4d"], [65, 2, 1, "", "se_resnext_101_32x8d"], [66, 2, 1, "", "se_resnext_101_64x4d"], [67, 2, 1, "", "se_resnext_50_32x4d"], [69, 2, 1, "", "sk_resnet_18"], [70, 2, 1, "", "sk_resnet_34"], [71, 2, 1, "", "sk_resnet_50"], [72, 2, 1, "", "sk_resnext_50_32x4d"], [81, 2, 1, "", "summarize"], [74, 2, 1, "", "vggnet_11"], [75, 2, 1, "", "vggnet_13"], [76, 2, 1, "", "vggnet_16"], [77, 2, 1, "", "vggnet_19"], [49, 2, 1, "", "wide_resnet_101"], [50, 2, 1, "", "wide_resnet_50"], [79, 2, 1, "", "zfnet"]], "lucid.nn": [[190, 1, 1, "", "AdaptiveAvgPool1d"], [191, 1, 1, "", "AdaptiveAvgPool2d"], [192, 1, 1, "", "AdaptiveAvgPool3d"], [165, 1, 1, "", "AlphaDropout"], [193, 1, 1, "", "AvgPool1d"], [194, 1, 1, "", "AvgPool2d"], [195, 1, 1, "", "AvgPool3d"], [176, 1, 1, "", "BCELoss"], [182, 1, 1, "", "BatchNorm1d"], [183, 1, 1, "", "BatchNorm2d"], [184, 1, 1, "", "BatchNorm3d"], [172, 1, 1, "", "Bilinear"], [82, 1, 1, "", "Buffer"], [161, 1, 1, "", "Conv1d"], [162, 1, 1, "", "Conv2d"], [163, 1, 1, "", "Conv3d"], [138, 1, 1, "", "ConvBNReLU1d"], [139, 1, 1, "", "ConvBNReLU2d"], [140, 1, 1, "", "ConvBNReLU3d"], [177, 1, 1, "", "CrossEntropyLoss"], [166, 1, 1, "", "Dropout"], [167, 1, 1, "", "Dropout1d"], [168, 1, 1, "", "Dropout2d"], [169, 1, 1, "", "Dropout3d"], [152, 1, 1, "", "ELU"], [153, 1, 1, "", "GELU"], [178, 1, 1, "", "HuberLoss"], [173, 1, 1, "", "Identity"], [185, 1, 1, "", "InstanceNorm1d"], [186, 1, 1, "", "InstanceNorm2d"], [187, 1, 1, "", "InstanceNorm3d"], [188, 1, 1, "", "LayerNorm"], [154, 1, 1, "", "LeakyReLU"], [174, 1, 1, "", "Linear"], [179, 1, 1, "", "MSELoss"], [196, 1, 1, "", "MaxPool1d"], [197, 1, 1, "", "MaxPool2d"], [198, 1, 1, "", "MaxPool3d"], [83, 1, 1, "", "Module"], [85, 1, 1, "", "ModuleDict"], [86, 1, 1, "", "ModuleList"], [180, 1, 1, "", "NLLLoss"], [84, 1, 1, "", "Parameter"], [87, 1, 1, "", "ParameterDict"], [88, 1, 1, "", "ParameterList"], [155, 1, 1, "", "ReLU"], [156, 1, 1, "", "SELU"], [141, 1, 1, "", "SEModule"], [142, 1, 1, "", "SelectiveKernel"], [89, 1, 1, "", "Sequential"], [157, 1, 1, "", "Sigmoid"], [158, 1, 1, "", "Softmax"], [159, 1, 1, "", "Tanh"]], "lucid.nn.functional": [[125, 2, 1, "", "adaptive_avg_pool1d"], [126, 2, 1, "", "adaptive_avg_pool2d"], [127, 2, 1, "", "adaptive_avg_pool3d"], [105, 2, 1, "", "alpha_dropout"], [128, 2, 1, "", "avg_pool1d"], [129, 2, 1, "", "avg_pool2d"], [130, 2, 1, "", "avg_pool3d"], [121, 2, 1, "", "batch_norm"], [112, 2, 1, "", "bilinear"], [115, 2, 1, "", "binary_cross_entropy"], [100, 2, 1, "", "conv1d"], [101, 2, 1, "", "conv2d"], [102, 2, 1, "", "conv3d"], [116, 2, 1, "", "cross_entropy"], [106, 2, 1, "", "dropout"], [107, 2, 1, "", "dropout1d"], [108, 2, 1, "", "dropout2d"], [109, 2, 1, "", "dropout3d"], [91, 2, 1, "", "elu"], [92, 2, 1, "", "gelu"], [117, 2, 1, "", "huber_loss"], [123, 2, 1, "", "instance_norm"], [136, 2, 1, "", "interpolate"], [124, 2, 1, "", "layer_norm"], [94, 2, 1, "", "leaky_relu"], [114, 2, 1, "", "linear"], [132, 2, 1, "", "max_pool1d"], [133, 2, 1, "", "max_pool2d"], [134, 2, 1, "", "max_pool3d"], [119, 2, 1, "", "mse_loss"], [120, 2, 1, "", "nll_loss"], [95, 2, 1, "", "relu"], [137, 2, 1, "", "rotate"], [96, 2, 1, "", "selu"], [97, 2, 1, "", "sigmoid"], [98, 2, 1, "", "softmax"], [99, 2, 1, "", "tanh"], [104, 2, 1, "", "unfold"]], "lucid.nn.init": [[144, 2, 1, "", "constant"], [146, 2, 1, "", "kaiming_normal"], [147, 2, 1, "", "kaiming_uniform"], [148, 2, 1, "", "normal"], [149, 2, 1, "", "uniform"], [150, 2, 1, "", "xavier_normal"], [151, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[203, 1, 1, "", "ASGD"], [204, 1, 1, "", "Adadelta"], [205, 1, 1, "", "Adagrad"], [206, 1, 1, "", "Adam"], [207, 1, 1, "", "AdamW"], [208, 1, 1, "", "Adamax"], [209, 1, 1, "", "NAdam"], [201, 1, 1, "", "Optimizer"], [210, 1, 1, "", "RAdam"], [211, 1, 1, "", "RMSprop"], [212, 1, 1, "", "Rprop"], [213, 1, 1, "", "SGD"]], "lucid.random": [[221, 2, 1, "", "rand"], [222, 2, 1, "", "randint"], [223, 2, 1, "", "randn"], [224, 2, 1, "", "seed"], [225, 2, 1, "", "uniform"]], "lucid.transforms": [[291, 1, 1, "", "CenterCrop"], [289, 1, 1, "", "Compose"], [292, 1, 1, "", "Normalize"], [293, 1, 1, "", "RandomCrop"], [294, 1, 1, "", "RandomGrayscale"], [295, 1, 1, "", "RandomHorizontalFlip"], [296, 1, 1, "", "RandomRotation"], [297, 1, 1, "", "RandomVerticalFlip"], [298, 1, 1, "", "Resize"], [290, 1, 1, "", "ToTensor"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [3, 8, 9, 15, 17, 20, 80, 81, 82, 83, 84, 85, 87, 88, 89, 125, 126, 127, 142, 177, 180, 190, 191, 192, 193, 196, 197, 200, 201, 202, 216, 218, 232, 240, 258, 260, 268, 271, 273, 274, 284, 290, 292, 300], "0": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 30, 32, 36, 58, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 268, 269, 270, 272, 273, 274, 275, 277, 280, 281, 282, 284, 285, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300], "000": [5, 6, 241, 242], "0000": [177, 178, 180], "0001": 203, "000e": [241, 242], "001": [203, 206, 207, 209, 210, 213], "002": [208, 209], "004": 209, "005": 154, "01": [94, 154, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213], "01051757": 223, "013": [26, 80], "016": [41, 80], "0205": 177, "0217": 177, "0227": 177, "024": [63, 80], "026": [52, 80], "028": [57, 80], "0299": 177, "032": [48, 80], "044715": [92, 153], "0450": 177, "0451": 177, "047": [75, 80], "04719755": 250, "0474259": 97, "048": [65, 80], "0480": 177, "05": [121, 123, 124, 138, 139, 140, 154, 182, 183, 184, 185, 186, 187, 188], "0507": [96, 156], "06": [204, 212], "069": [46, 80], "07": [115, 116, 176, 177], "0700": 177, "0706508": 159, "071": [41, 80], "0721": 177, "073": [71, 80], "0794": 180, "08": [206, 207, 208, 209, 210, 211], "0802": 180, "08333333": 17, "085537": 257, "088": [63, 80], "0900": [158, 177], "0986": [98, 158], "09861229": 258, "0992": 177, "1": [0, 1, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 32, 36, 37, 38, 39, 58, 64, 65, 66, 67, 68, 72, 73, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 221, 222, 223, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300], "10": [0, 1, 2, 3, 5, 21, 22, 23, 36, 37, 38, 39, 73, 78, 79, 80, 81, 85, 86, 89, 101, 102, 112, 114, 125, 161, 162, 163, 168, 169, 172, 174, 183, 184, 186, 190, 194, 195, 197, 205, 218, 222, 225, 226, 229, 232, 235, 236, 252, 268, 291, 293, 294, 296], "100": [22, 74, 75, 76, 77, 80, 218, 300], "1000": [21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79], "1000000": 203, "1001": [41, 80, 177], "1003": 177, "1007": 80, "101": [42, 49, 52, 53, 54, 55, 56, 59, 64, 65, 66, 80], "1014": 96, "102": [46, 80], "1025": [86, 89], "1026": [86, 89], "1027": [86, 89], "10499": 97, "1050": 157, "1054": 180, "1056": [86, 89], "10590": 80, "1097": 80, "11": [44, 61, 73, 74, 80, 112, 161, 162, 163, 168, 172, 183, 184, 186, 194, 195, 197, 232, 291, 292, 293, 294, 296], "1105": 80, "1109": 80, "1111": 176, "1134": 112, "114b": 294, "119": 112, "1192": [97, 98, 158], "12": [23, 24, 25, 26, 27, 37, 38, 87, 112, 127, 161, 162, 163, 168, 169, 172, 183, 184, 186, 192, 194, 195, 197, 232, 236, 237, 291, 293, 294, 296], "120": [36, 39], "121": [23, 24, 80], "123": [146, 147, 148, 149, 150, 151, 224, 225], "124": [146, 147, 150, 151], "125": 195, "1250": 178, "126": [49, 80], "128": [33, 40, 49, 50, 73, 80, 89, 142, 289, 300], "128x128": [289, 300], "13": [29, 73, 75, 80, 112, 161, 162, 163, 172, 184, 194, 195, 197, 232, 291, 293, 294, 296], "132": [74, 80], "133": [75, 80], "138": [76, 80], "14": [25, 80, 161, 162, 163, 168, 169, 172, 184, 194, 195, 197, 219, 232, 236, 291, 293, 294, 296], "1409": 80, "143": [77, 80], "145": 112, "149": [25, 41, 80], "15": [0, 112, 161, 162, 163, 172, 184, 194, 195, 197, 232, 236, 271, 291, 293, 294, 296, 300], "1513": 180, "152": [43, 60, 80], "155": 232, "1556": 80, "1588": [92, 153], "16": [23, 24, 36, 39, 52, 58, 73, 76, 80, 86, 87, 89, 126, 127, 138, 139, 140, 141, 142, 161, 162, 163, 168, 169, 172, 183, 184, 191, 192, 194, 195, 197, 200, 232, 236, 266, 291, 293, 294, 296], "160": [42, 80], "16227766": 18, "16425": 180, "1643": 176, "166": 232, "169": [23, 25, 80], "17": [161, 162, 163, 172, 184, 195, 231, 291, 293, 294, 296], "170": 112, "17520119": 265, "177": [54, 80], "18": [38, 44, 61, 69, 80, 161, 162, 163, 168, 172, 184, 195, 235, 236, 291, 293, 294, 296], "1800": 177, "19": [73, 77, 80, 101, 102, 112, 162, 163, 184, 230, 232], "192": [37, 38, 43, 80], "194": [52, 80], "1966": [98, 157, 158], "1998": [80, 177], "1_53": 80, "1d": [100, 125, 128, 132, 138, 182, 185, 190, 225, 232, 240, 271, 279, 280, 281, 282, 286], "1e": [115, 116, 121, 123, 124, 138, 139, 140, 176, 177, 182, 183, 184, 185, 186, 187, 188, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213], "1e6": 203, "1st": [21, 78], "2": [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 37, 38, 39, 44, 61, 69, 78, 81, 82, 83, 84, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 142, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 221, 222, 223, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300], "20": [0, 5, 6, 26, 80, 85, 86, 89, 162, 163, 168, 184, 236, 257], "200": [45, 80], "201": [26, 80], "2011": 141, "2012": 80, "2014": 80, "2015": 80, "2016": 80, "2017": 80, "2018": [80, 141], "2019": 80, "2023": 141, "2039": 180, "204": 163, "21": [47, 62, 80, 87, 112, 162, 163, 184, 236], "211": 232, "22": [33, 80, 112, 162, 163, 168, 184, 230, 232], "2231": [177, 180], "224": [21, 23, 24, 25, 26, 27, 40, 50, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 69, 70, 71, 72, 73, 78, 80], "2247": [182, 183, 184, 185, 186, 187, 188], "224x224": [29, 64, 65, 66, 67, 72], "226": 232, "22752314": 223, "2278": 80, "23": [42, 49, 52, 53, 54, 55, 56, 59, 162, 163, 184], "232": [66, 80], "2324": [80, 156], "234": [146, 147, 148, 149, 150, 151, 225], "24": [23, 24, 45, 112, 126, 162, 163, 168, 184, 191, 236], "240": [77, 80], "2424": [98, 158], "2447": 158, "246": [37, 80], "25": [0, 48, 57, 69, 80, 97, 157, 163, 179, 184, 194, 195, 229, 262, 273], "2500": [176, 178, 180], "2512": 152, "2547": 156, "256": [40, 73], "26": [87, 114, 163, 174, 184, 236], "26325684": 223, "264": [27, 80], "2689": [98, 157, 158], "269": [46, 80], "27": [67, 80, 112, 161, 163, 184, 256], "272": [56, 80], "274": [72, 80], "276": [146, 147, 150, 151], "28": [37, 38, 63, 80, 112, 163, 236], "28x28": [5, 6, 37, 38], "29": [72, 80, 163], "299": 80, "299r": 294, "299x299": [30, 31, 33, 34], "2_i": [185, 186, 187], "2d": [101, 108, 126, 129, 133, 139, 183, 186, 191, 232, 240, 243, 271, 276, 279, 280, 282, 286, 296], "2e": 208, "2nd": [21, 78], "2x2": [104, 291, 293], "3": [1, 2, 3, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 37, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 78, 80, 82, 83, 84, 86, 87, 88, 89, 92, 97, 98, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 117, 119, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 253, 255, 256, 257, 258, 259, 260, 261, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298], "30": [30, 46, 80, 86, 137, 163, 296], "3026": 180, "31": [112, 163, 232], "310": [241, 242], "31622777": 18, "319": 80, "32": [23, 25, 26, 39, 52, 53, 54, 55, 57, 80, 86, 89, 112, 114, 126, 138, 139, 140, 141, 142, 162, 163, 174, 191, 200, 230, 231, 236], "321": [146, 147, 150, 151], "326": [59, 80], "32x16d": 80, "32x32": [36, 39], "32x32d": 80, "32x4d": [64, 67, 72, 80], "32x8d": [65, 80], "33": [27, 80, 86, 89, 114, 163, 174], "33333333": 17, "336": [55, 74, 80], "337": [27, 80], "34": [47, 62, 70, 80, 86, 89, 112, 163, 232, 236], "342": [146, 147, 150, 151], "345": [146, 147, 148, 149, 150, 151, 225], "35": [34, 80, 86, 89, 163], "352": [29, 80], "3567": [176, 180], "357": [76, 79, 80], "36": [43, 45, 60, 163], "3679": [91, 96, 152], "368": [69, 71, 80], "37": 161, "372": 112, "375": 179, "3750": 178, "378": [38, 80], "38344152": 221, "38629436": 258, "389056": 257, "392": [30, 80], "393": [29, 80], "3935": 152, "3d": [102, 109, 127, 130, 134, 140, 163, 184, 187, 192], "3x3": [80, 226], "4": [0, 1, 2, 3, 9, 10, 11, 12, 14, 16, 17, 18, 23, 36, 37, 38, 40, 42, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 62, 63, 70, 71, 80, 81, 87, 89, 100, 101, 102, 104, 107, 108, 109, 112, 114, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 203, 206, 210, 211, 213, 216, 219, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 247, 253, 258, 259, 260, 261, 262, 264, 266, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 285, 286, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298], "40": [31, 80], "400": 39, "4044": 176, "4076": 177, "4096": [21, 78], "41421356": 10, "416": [46, 64, 80], "41666667": 17, "41808962": 223, "419974": 99, "4199743": 159, "42": [112, 141, 219, 226], "421": [146, 147, 150, 151], "423": [146, 147, 148, 149], "42718872": 18, "4278": 80, "4284": 80, "4286": 176, "43": [230, 232], "4323": 152, "4375": 178, "43758721": 221, "44": [42, 54, 80], "4472136": 12, "4495": [184, 187], "45": [70, 80, 112, 137, 296], "4545": 165, "455": [56, 80], "468": [53, 80], "4700": 80, "4708": 80, "47112767": 252, "472": [53, 80], "48": [23, 26, 27, 46, 64, 80, 114, 174], "480": [25, 80], "49": [59, 80], "4979": 152, "4x4": 298, "5": [1, 2, 8, 9, 14, 15, 16, 17, 21, 30, 36, 37, 38, 39, 68, 69, 70, 71, 78, 80, 81, 83, 84, 85, 86, 87, 89, 92, 97, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 117, 119, 121, 123, 124, 125, 128, 129, 136, 138, 139, 140, 142, 144, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 193, 194, 195, 197, 198, 212, 216, 219, 222, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 243, 245, 247, 249, 250, 251, 259, 260, 261, 262, 263, 268, 271, 272, 273, 274, 277, 279, 283, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300], "50": [40, 48, 50, 57, 63, 67, 71, 72, 80, 114, 174, 212, 230, 232, 294, 295, 297, 300], "5000": [176, 178, 180], "510": 80, "5108": 180, "512": [34, 40, 44, 70, 80], "519": 80, "52359878": 251, "53": [112, 231], "530": [53, 80], "543": [146, 147, 148, 149, 150, 151, 225], "54308063": 255, "544": [76, 80], "545": 237, "5455": 165, "549": [42, 80], "557": [48, 80], "559": [67, 80], "563": [146, 147, 150, 151], "569": [65, 80], "57": [71, 80, 112], "57079633": [250, 251], "57366333": 224, "586": [31, 80], "587g": 294, "592": [61, 80], "5987": 80, "5995": 80, "5th": [21, 78], "6": [9, 17, 21, 23, 24, 25, 26, 27, 36, 39, 40, 47, 48, 50, 57, 62, 63, 70, 71, 78, 87, 88, 100, 101, 102, 104, 109, 112, 114, 125, 147, 151, 161, 162, 163, 166, 167, 168, 169, 172, 174, 176, 182, 183, 184, 185, 186, 187, 188, 190, 194, 195, 197, 198, 204, 212, 216, 219, 225, 228, 229, 230, 231, 232, 235, 236, 237, 238, 239, 240, 241, 242, 245, 247, 259, 260, 261, 268, 271, 272, 273, 274, 277, 282, 283, 288, 290, 291, 292, 293, 294, 296, 298], "60": [43, 80], "6052": 180, "6065": 152, "608": [79, 80], "61": [22, 39, 80], "6124": [182, 183, 184, 185, 186, 187, 188], "62": [79, 80, 112], "62686041": 265, "630": 80, "6321": [91, 152], "63245553": 18, "64": [23, 27, 40, 45, 56, 68, 73, 80, 86, 89, 112, 141, 142], "645": 80, "64589411": 221, "647": [69, 80], "64x4d": [66, 80], "654": [146, 147, 148, 149, 150, 151, 225], "657": [146, 147, 150, 151], "6590": [98, 158], "66": [60, 80], "6652": 158, "66666667": 17, "6667": 176, "667": [77, 80], "6682": 176, "669": [45, 80], "67": 232, "672": [47, 80], "67326": 156, "6733": 96, "678": [146, 147, 148, 149, 150, 151], "68811989": 223, "689": [44, 80], "69314718": 258, "696": [49, 80], "7": [16, 24, 73, 80, 87, 100, 101, 102, 104, 109, 112, 114, 115, 116, 125, 142, 153, 156, 157, 159, 161, 162, 163, 168, 169, 172, 174, 176, 177, 179, 183, 184, 186, 187, 190, 194, 195, 197, 198, 219, 222, 225, 228, 230, 231, 232, 236, 238, 240, 257, 260, 268, 271, 272, 273, 286, 290, 291, 292, 293, 294, 296, 298], "70": [5, 6], "7001": 177, "704": [27, 54, 80], "706": [39, 80], "70710678": [12, 264], "7132": 80, "7141": 80, "7147": 180, "7182818": 257, "726791": 80, "7311": [98, 157, 158], "739": [33, 80], "74": 232, "75": [114, 174, 179, 203], "7581": 96, "760": [72, 80], "76159416": 270, "7616": [99, 159], "76219569": 255, "7635": 156, "770": 80, "772": 237, "778": [61, 80], "78": [50, 80], "78357324": 223, "78539816": 252, "791": [55, 80], "79172504": 221, "792": [52, 80], "797": [47, 80], "7x7": 78, "8": [15, 19, 23, 40, 43, 46, 52, 53, 54, 55, 56, 57, 60, 69, 70, 71, 81, 86, 87, 89, 100, 101, 102, 104, 109, 112, 114, 115, 125, 126, 127, 138, 139, 140, 141, 153, 156, 157, 159, 161, 162, 163, 166, 167, 168, 169, 172, 174, 176, 179, 183, 184, 186, 187, 190, 191, 192, 194, 195, 197, 198, 206, 207, 208, 209, 210, 211, 219, 222, 229, 230, 231, 232, 236, 237, 239, 240, 256, 260, 268, 271, 272, 273, 290, 291, 292, 293, 294, 296, 298], "80": [5, 6], "8005": 177, "808": [43, 80], "817": [30, 80], "818": 80, "8182": 165, "82": 112, "821": [60, 80], "83": [56, 80], "833": 80, "84": [36, 38, 39], "840": [22, 80], "8413": [92, 153], "847": [34, 80], "848": [60, 75, 80], "856": [24, 80], "8584": 156, "86": 80, "863": [74, 80], "864": [45, 80], "868": [62, 80], "872": [59, 80], "876": [146, 147, 150, 151, 225], "88": [55, 66, 80], "8808": [98, 157, 158], "886": [49, 80], "887": 237, "891773": 221, "89442719": 12, "895": [70, 80], "896": [67, 80], "9": [0, 1, 3, 6, 19, 80, 101, 104, 112, 114, 125, 161, 162, 163, 168, 172, 174, 176, 183, 184, 186, 190, 194, 195, 197, 203, 204, 206, 207, 208, 209, 210, 211, 213, 219, 222, 225, 228, 232, 236, 237, 238, 240, 266, 267, 290, 291, 292, 293, 294, 296], "904": [57, 80], "90709145": 224, "9091": 165, "9120": 180, "9163": 180, "928": [26, 80], "93": [65, 80], "94": 41, "9486833": 18, "949e": [241, 242], "9526": 97, "9545": 153, "955": [64, 80], "958": [62, 80], "96366276": 221, "9640": 159, "96402758": 270, "973": [50, 80], "978": [24, 80], "984": [31, 66, 80], "99": 211, "9957": 180, "99734545": 224, "999": [0, 206, 207, 208, 209, 210], "A": [1, 3, 5, 6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 32, 36, 40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 68, 69, 70, 71, 73, 74, 75, 76, 77, 80, 83, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 112, 114, 115, 116, 120, 121, 123, 124, 136, 142, 165, 166, 167, 168, 169, 176, 177, 180, 182, 183, 184, 185, 186, 187, 188, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 219, 221, 222, 223, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 296], "As": 224, "Be": 0, "By": [0, 2, 3, 8, 41, 42, 43, 44, 45, 46, 47, 48, 84, 137, 200, 210, 216, 221, 222, 223, 225, 290, 300], "For": [2, 3, 4, 8, 10, 11, 12, 14, 15, 16, 17, 19, 89, 91, 92, 94, 95, 96, 97, 99, 112, 114, 136, 146, 147, 150, 151, 156, 161, 162, 163, 172, 174, 182, 183, 184, 185, 186, 187, 200, 202, 224, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 257, 258, 259, 260, 261, 264, 266, 268, 271, 272, 273, 280, 282, 284, 286, 287, 300], "If": [0, 1, 2, 5, 6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 40, 81, 83, 85, 86, 87, 88, 91, 92, 94, 95, 96, 97, 99, 100, 101, 102, 109, 112, 114, 121, 123, 126, 127, 136, 137, 138, 139, 140, 142, 146, 147, 161, 162, 163, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 206, 207, 211, 212, 218, 221, 222, 223, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 294, 295, 297, 298], "In": [3, 8, 17, 100, 101, 102, 177, 180, 215, 216, 217, 289, 300], "It": [1, 2, 3, 5, 8, 17, 18, 19, 21, 24, 25, 26, 27, 28, 29, 30, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 73, 80, 83, 85, 86, 87, 88, 89, 109, 112, 136, 137, 138, 139, 140, 141, 153, 155, 159, 172, 173, 176, 177, 178, 179, 180, 190, 191, 192, 200, 201, 202, 203, 209, 211, 212, 213, 216, 224, 228, 229, 230, 233, 234, 235, 237, 238, 259, 261, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 288, 289, 290], "Its": [19, 226], "Near": 17, "No": 104, "Not": 173, "One": [37, 300], "The": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300], "There": 283, "These": [4, 8, 9, 12, 15, 18, 20, 49, 50, 69, 70, 71, 80, 165, 166, 167, 168, 169, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 212, 219, 226, 300], "To": [3, 80, 202, 223, 226, 241, 242, 279, 300], "With": [3, 104, 290, 300], "_": [15, 85, 86, 88, 89, 91, 92, 94, 95, 96, 97, 99, 114, 136, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 203, 204, 206, 207, 208, 209, 211, 213, 230, 231, 232, 236, 271, 272, 291, 292, 293, 295, 296, 297], "_1": [12, 85, 86, 87, 88, 89, 112, 172, 236, 275, 277, 288], "_2": [12, 85, 86, 87, 88, 89, 112, 172, 236, 275, 277, 288], "__call__": [1, 83], "__getitem__": [0, 2, 3, 5, 6], "__init__": [0, 1, 2, 3, 8, 21, 28, 32, 36, 73, 78, 81, 82, 83, 84, 85, 86, 87, 88, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 218, 227, 289, 290], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5, 6], "__repr__": 201, "__setattr__": 83, "_activ": 98, "_arraylik": [219, 240, 242, 245, 247], "_arraylikeint": 280, "_arrayorscalar": [82, 84, 219, 227, 274], "_base_activ": 36, "_base_dtyp": [239, 241, 244, 246], "_c": 292, "_decai": 209, "_fanmod": [146, 147], "_grad_en": [215, 217], "_i": [12, 16, 98, 112, 158, 179, 182, 188, 193, 196, 230, 231, 233, 234, 236, 237, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 282, 284, 287, 288], "_in": [146, 147, 150, 151], "_j": [98, 158, 193, 196, 236, 260, 268, 272, 273], "_k": 285, "_left": 136, "_make_lay": 73, "_modul": 83, "_n": [12, 85, 86, 87, 88, 89, 275, 277, 288], "_numpyarrai": 219, "_out": [146, 147, 150, 151, 282, 286], "_p": 16, "_pad": 280, "_paddingstr": [138, 139, 140, 161, 162, 163], "_paramet": 83, "_reductiontyp": [115, 116, 117, 119, 120, 176, 177, 178, 179, 180], "_right": 136, "_scalar": [144, 148, 149, 150, 151, 219, 239, 253], "_seresnetbottleneck": [59, 60, 63], "_seresnetmodul": [61, 62], "_shapelik": [81, 124, 188, 219, 222, 244, 246, 283, 284, 287], "_size": [125, 126, 127], "_skresnetmodul": [69, 70, 71], "_slope": 154, "_statedict": 201, "_t": [210, 211], "_tensor": [82, 84, 240, 274], "_tensorop": 227, "_u": 17, "_v": 17, "_valu": [253, 280], "_width": 280, "a_i": [233, 234, 237], "aaai": 80, "ab": 248, "abc": [2, 201], "abil": [8, 80, 300], "about": [8, 81], "abov": [8, 215, 217, 224, 240, 243], "absolut": [15, 16, 117, 208, 249], "abstract": [2, 3, 200, 201, 202, 203, 211, 213], "abstractmethod": 201, "acceler": [80, 156, 182, 183, 184, 203, 209, 211, 213], "accept": [173, 221, 227], "access": [0, 2, 3, 4, 5, 6, 52, 53, 54, 55, 56, 57, 82, 84, 85, 86, 87, 88, 89, 283], "accord": [136, 161, 162, 163, 172, 174, 177, 180, 204, 205, 206, 207, 208, 209, 210, 272], "accordingli": 11, "account": [15, 17, 18], "accumul": [203, 204, 205, 228, 229, 233, 234, 235, 238], "accur": 60, "accuraci": [63, 80], "achiev": [51, 52, 53, 54, 55, 56, 57, 80, 100, 101, 102, 125, 190, 191, 192, 209, 295, 297], "across": [0, 82, 86, 89, 124, 125, 126, 127, 150, 151, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 219, 221, 222, 223, 224, 225, 226, 241, 242, 260, 273], "act": 207, "activ": [8, 21, 36, 41, 45, 46, 58, 73, 78, 80, 85, 89, 91, 92, 94, 95, 96, 97, 98, 99, 105, 138, 139, 140, 141, 142, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 165, 166, 167, 168, 169, 176, 177, 180, 182, 183, 184, 188, 259, 261], "actual": [84, 176, 177, 179, 180, 227, 293], "ad": [23, 40, 83, 85, 86, 87, 88, 89, 100, 101, 102, 112, 114, 115, 116, 121, 123, 124, 128, 129, 130, 132, 133, 134, 138, 139, 140, 161, 162, 163, 176, 177, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 204, 205, 206, 207, 208, 209, 210, 211, 218, 287, 300], "adadelta": 214, "adagrad": [204, 214], "adam": [207, 208, 209, 210, 214], "adamax": 214, "adamw": 214, "adapt": [21, 28, 36, 59, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 78, 80, 125, 126, 127, 141, 142, 190, 191, 192, 204, 205, 206, 209, 210, 211, 212], "adaptive_avg_pool1d": [111, 131, 190], "adaptive_avg_pool2d": [111, 131, 191], "adaptive_avg_pool3d": [111, 131, 192], "adaptiveavgpool1d": [171, 199], "adaptiveavgpool2d": [21, 58, 73, 78, 171, 199], "adaptiveavgpool3d": [171, 199], "add": [4, 83, 85, 86, 89, 112, 114, 161, 162, 163, 172, 174, 188, 201, 203, 206, 211, 213, 216, 248, 280, 287], "add_modul": [83, 89], "add_param_group": 201, "addit": [4, 8, 15, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 79, 83, 86, 89, 112, 114, 121, 123, 172, 174, 182, 183, 184, 185, 186, 187, 203, 209, 216, 226, 228, 285], "addition": 209, "address": [177, 180, 206, 207, 210], "adjust": [33, 64, 65, 66, 67, 68, 72, 125, 126, 127, 142, 165, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 202, 206, 210, 211, 212, 277, 288], "advanc": [3, 17, 45, 80, 86, 89, 100, 101, 102, 125, 126, 127, 190, 191, 192, 200, 203], "advantag": [34, 217], "affect": [215, 281, 284, 289], "affin": [138, 139, 140, 182, 183, 184, 185, 186, 187, 188, 296], "after": [15, 21, 78, 84, 85, 86, 87, 88, 89, 109, 141, 142, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 165, 166, 167, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 188, 193, 194, 195, 196, 197, 198, 207, 217, 227, 228, 229, 233, 234, 235, 237, 238, 280, 290], "afterward": 217, "aggreg": [80, 142, 236, 282, 286], "aim": [4, 8], "al": [29, 80], "alex": 80, "alexnet": [35, 78, 80], "algebra": [8, 9, 243], "algorithm": [5, 8, 15, 17, 18, 201, 202, 226], "align": [19, 136, 231, 232], "align_corn": 136, "all": [0, 3, 4, 8, 18, 80, 83, 85, 86, 87, 88, 89, 101, 102, 125, 126, 127, 129, 130, 133, 134, 136, 139, 140, 142, 154, 155, 163, 190, 191, 192, 194, 195, 198, 200, 201, 202, 203, 206, 211, 212, 213, 237, 259, 260, 261, 268, 271, 273, 275, 276, 277, 282, 284, 285, 286, 288, 291, 292, 300], "allevi": [80, 91], "alloc": [241, 242], "allow": [0, 1, 3, 4, 8, 17, 18, 34, 36, 40, 51, 64, 65, 66, 67, 68, 72, 80, 84, 85, 86, 87, 88, 89, 91, 94, 95, 98, 102, 104, 137, 142, 152, 153, 154, 156, 157, 158, 159, 161, 162, 163, 200, 204, 205, 216, 239, 244, 246, 247, 272, 274, 279, 289, 290, 300], "along": [98, 136, 142, 158, 231, 232, 236, 259, 260, 261, 268, 271, 273, 275, 277, 279, 282, 285, 286, 287, 288, 295, 297], "alongsid": 82, "alpha": [91, 94, 96, 105, 152, 156, 165, 203, 211], "alpha_dropout": [110, 111, 165], "alphadropout": [170, 171], "alphadropoutmodel": 165, "alreadi": 218, "also": [81, 91, 92, 94, 95, 96, 97, 99, 112, 114, 136, 209, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 275, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288], "alter": [89, 283], "altern": [1, 153, 204, 232], "alwai": [84, 281, 294, 295, 297], "among": [30, 142], "amount": [100, 101, 102, 128, 129, 130, 132, 133, 134, 209], "amsgrad": [206, 207], "an": [0, 1, 3, 8, 12, 14, 15, 17, 18, 20, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 78, 79, 80, 81, 83, 85, 86, 87, 88, 89, 92, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 126, 127, 136, 137, 142, 150, 151, 152, 157, 161, 162, 163, 165, 166, 167, 168, 169, 172, 174, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 206, 209, 211, 217, 218, 219, 227, 232, 240, 243, 253, 260, 268, 273, 275, 282, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300], "analog": [282, 286], "analysi": [4, 141, 161, 162, 163, 187, 193, 195, 196, 198], "andrew": 80, "angl": [137, 296], "ani": [0, 1, 2, 3, 15, 17, 22, 40, 68, 79, 82, 83, 84, 85, 87, 88, 91, 92, 94, 95, 96, 97, 99, 105, 106, 112, 114, 121, 123, 157, 188, 200, 201, 215, 217, 218, 224, 227, 239, 240, 241, 243, 244, 245, 246, 247, 259, 261, 272, 274, 275, 276, 277, 280, 282, 285, 286, 287, 288, 289, 300], "anoth": [88, 238, 245, 247, 290, 300], "api": [4, 190, 191, 192, 300], "appear": 201, "append": [86, 88, 89], "appli": [2, 4, 5, 6, 8, 15, 21, 51, 68, 78, 80, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 102, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 138, 139, 140, 141, 142, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 165, 166, 167, 168, 169, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 203, 204, 205, 207, 208, 209, 210, 232, 280, 282, 289, 292, 294, 295, 296, 297, 298, 300], "applic": [4, 17, 23, 33, 34, 100, 123, 161, 162, 163, 172, 174, 226, 239, 246, 280, 298], "approach": [3, 32, 89, 207], "appropri": [17, 80, 83, 87, 89, 161, 162, 163, 165, 166, 167, 177, 194, 195, 215, 217], "approx": 96, "approxim": [17, 92, 153, 194, 197], "ar": [1, 2, 3, 4, 8, 11, 12, 14, 15, 17, 18, 19, 20, 28, 29, 30, 80, 82, 83, 84, 85, 86, 87, 88, 89, 98, 100, 101, 102, 104, 112, 114, 126, 127, 136, 141, 142, 146, 147, 149, 150, 151, 158, 161, 162, 163, 165, 166, 167, 168, 169, 172, 174, 177, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 203, 206, 207, 209, 210, 211, 212, 213, 215, 217, 218, 219, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 249, 253, 257, 259, 260, 261, 262, 263, 268, 271, 272, 275, 279, 282, 283, 286, 289, 290, 291, 293, 294, 298, 300], "arang": 248, "arbitrari": [86, 173, 241, 242, 253, 258, 260, 264, 266, 268, 272, 273], "arcco": 248, "arch": 218, "architectur": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 40, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 85, 86, 87, 88, 89, 92, 141, 155, 172, 173, 200, 218], "arcsin": 248, "arctan": 248, "area": 136, "arg": [83, 173, 218, 241], "argument": [3, 4, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 79, 83, 89, 173, 221, 241, 272], "around": [12, 137, 159], "arr": [219, 275, 277, 285, 288], "arrai": [8, 82, 84, 216, 219, 227, 232, 240, 245, 247, 274, 281, 282, 290, 300], "art": 80, "artifici": 80, "arxiv": 80, "asarrai": 219, "asgd": 214, "aspect": 298, "assign": [83, 85, 87, 89, 136, 177, 180], "assist": [28, 29, 30], "associ": [87, 88], "assum": [0, 1, 201, 202, 215], "attempt": [85, 89], "attent": [68, 88, 112, 141], "attribut": 83, "audio": 161, "augment": [3, 4, 61, 137, 226, 282, 286, 289, 293, 294, 295, 296, 297, 300], "autodiff": 8, "autograd": 200, "automat": [4, 8, 84, 85, 86, 87, 88, 200, 221, 222, 223, 225, 227, 241, 242, 247, 279, 290], "auxiliari": [28, 29, 30, 82], "avail": [4, 5, 6, 8], "averag": [21, 37, 38, 39, 40, 51, 58, 68, 73, 78, 82, 125, 126, 127, 128, 129, 130, 136, 141, 142, 179, 190, 191, 192, 193, 194, 195, 203, 204, 206, 211, 260], "avg_down": 40, "avg_pool": [193, 194, 195], "avg_pool1d": [111, 131], "avg_pool2d": [111, 131], "avg_pool3d": [111, 131], "avgpool": [21, 58, 73, 78, 142], "avgpool1d": [171, 199], "avgpool1dmodel": 193, "avgpool2d": [171, 199], "avgpool2dmodel": 194, "avgpool3d": [171, 199], "avgpool3dmodel": 195, "avoid": [2, 3, 17, 87, 217], "ax": [9, 216, 259, 260, 261, 268, 272, 273, 282, 284, 286], "axi": [98, 158, 231, 232, 259, 260, 261, 268, 273, 275, 277, 279, 280, 282, 284, 285, 286, 287, 288, 295, 297], "b": [9, 19, 112, 114, 149, 161, 162, 163, 172, 174, 216, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 275, 277, 285, 288, 294], "b_i": [233, 234, 237], "back": [136, 194, 195, 218, 231, 236, 282, 286], "backbon": [69, 70, 71], "backpropag": [8, 11, 12, 14, 15, 17, 18, 20, 80, 82, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 112, 114, 136, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 200, 217, 223, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 257, 259, 261, 274, 280, 282, 286, 290], "backward": [8, 82, 84, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 227, 290], "balanc": [52, 53, 54, 55, 56, 57, 178], "bar": 203, "base": [3, 9, 14, 15, 18, 19, 23, 28, 29, 30, 31, 32, 33, 34, 36, 51, 52, 53, 54, 55, 56, 57, 68, 73, 80, 83, 85, 86, 87, 88, 104, 112, 125, 126, 127, 142, 165, 177, 178, 190, 191, 192, 200, 201, 202, 203, 207, 211, 212, 213, 228, 229, 233, 234, 235, 237, 238, 247, 257, 258, 259, 261, 272, 279, 280, 293, 294, 295, 296, 297], "base_width": [49, 50, 51, 68], "basic": [8, 21, 40, 52, 53, 54, 55, 56, 57, 69, 70, 71, 78, 81, 100, 101, 102, 125, 126, 127, 138, 139, 140, 141, 146, 147, 150, 151, 190, 191, 192, 291, 292, 293, 294, 295, 296, 297, 298], "basicblock": [40, 44, 47], "batch": [1, 2, 3, 9, 15, 18, 20, 29, 30, 31, 33, 34, 58, 64, 65, 66, 67, 72, 100, 101, 102, 104, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 161, 162, 163, 172, 174, 176, 177, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 210, 232, 291, 292, 293, 294, 296, 298], "batch_norm": [111, 122, 182, 183, 184], "batch_norm1": 89, "batch_norm2": 89, "batch_siz": [1, 2, 3, 142], "batchnorm": [138, 139, 140], "batchnorm1d": [138, 171, 189], "batchnorm1dmodel": 182, "batchnorm2d": [89, 139, 171, 189], "batchnorm2dmodel": 183, "batchnorm3d": [140, 171, 189], "batchnorm3dmodel": 184, "bceloss": [171, 181], "becaus": [2, 222], "becom": [16, 83, 204, 212], "befor": [15, 58, 81, 84, 203, 209, 217, 224, 280, 292, 300], "begin": [1, 16, 91, 94, 95, 96, 152, 154, 155, 156, 178, 179, 180, 193, 194, 195, 196, 197, 198, 210, 212, 216, 226, 233, 234, 236, 249, 253, 259, 261, 263, 280], "behav": [178, 271], "behavior": [80, 86, 89, 215, 226, 232, 242, 300], "being": [88, 137, 165, 166, 167, 168, 169, 210, 215, 217, 275, 277, 288], "belong": 0, "below": [18, 29, 30, 31, 33, 34, 36, 37, 38, 39, 232, 240, 243], "benchmark": [5, 6], "benefici": 89, "benefit": [91, 200, 209, 219], "bernoulli": [165, 166, 167, 168, 169], "best": [146, 147, 150, 151], "beta": [182, 183, 184, 185, 186, 187, 188, 206, 207, 208, 209, 210], "beta1": [206, 207, 208, 209, 210], "beta2": [206, 207, 208, 209, 210], "beta_1": [206, 207, 208, 209, 210], "beta_2": [206, 207, 208, 209, 210], "better": [14, 78, 80, 92, 146, 147, 150, 151, 185, 186, 187, 200, 207, 209, 211, 292], "between": [52, 53, 54, 55, 56, 57, 80, 83, 100, 101, 102, 104, 112, 117, 138, 139, 140, 142, 161, 162, 163, 165, 166, 167, 168, 169, 172, 176, 177, 178, 179, 180, 203, 211, 212, 213, 226, 228, 229, 232, 235, 238, 239, 273, 294, 295, 297, 298], "beyond": [8, 86], "bia": [100, 101, 102, 112, 114, 121, 123, 124, 138, 139, 140, 161, 162, 163, 172, 174, 182, 183, 184, 185, 186, 187, 188, 206, 207, 208, 209, 210], "bias": [161, 162, 163, 174, 188, 200], "bias1": 87, "bias2": 87, "bilinear": [111, 113, 136, 171, 175], "bilinearmodel": 172, "binari": [97, 115, 157, 165, 166, 167, 168, 169, 176], "binary_cross_entropi": [111, 118], "block": [23, 24, 25, 26, 27, 32, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 80, 83, 104, 138, 139, 140, 142, 161, 162, 163, 217], "block1": [81, 200], "block2": [81, 200], "block_arg": [40, 58], "block_config": 23, "blue": 294, "bmatrix": 236, "bn": [138, 139, 140], "bn_affin": [138, 139, 140], "bool": [1, 5, 6, 20, 28, 29, 30, 40, 81, 83, 84, 105, 106, 107, 108, 109, 121, 123, 136, 138, 139, 140, 161, 162, 163, 172, 174, 182, 183, 184, 185, 186, 187, 188, 206, 207, 211, 215, 221, 222, 223, 225, 227, 239, 240, 241, 242, 243, 244, 245, 246, 247, 259, 260, 261, 268, 273, 274, 290], "both": [100, 114, 126, 128, 132, 138, 153, 161, 162, 191, 193, 194, 196, 197, 230, 231, 232, 236, 240, 279, 298], "bottleneck": [23, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 141], "bottom": 136, "bound": [147, 149, 151, 212, 225], "box": 4, "branch": [28, 29, 30, 80, 142], "break": 200, "brief": 300, "bright": 300, "broadcast": [168, 169, 260, 268, 273, 283, 287], "buffer": [203, 209, 211, 213], "build": [8, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 68, 69, 70, 71, 80, 83, 86, 89, 200, 300], "built": [3, 8, 41, 45, 46, 89, 200], "burg": 6, "c": [6, 40, 52, 53, 54, 55, 56, 57, 69, 70, 71, 104, 107, 108, 109, 116, 120, 121, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 141, 168, 169, 177, 180, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 216, 277, 288, 292], "c_": [161, 162, 163], "c_in": [100, 101, 102, 138, 139, 140], "c_out": [100, 101, 102], "calcul": [0, 1, 8, 9, 84, 204, 205, 208, 209, 210, 217, 222, 227], "calculu": [10, 17], "call": [1, 83, 215, 218, 228, 229, 232, 233, 234, 235, 237, 238], "callabl": [201, 218, 289], "can": [0, 2, 3, 4, 8, 10, 12, 14, 15, 17, 18, 20, 40, 49, 50, 64, 65, 66, 67, 81, 82, 84, 85, 86, 87, 88, 89, 94, 100, 101, 102, 137, 142, 153, 154, 159, 161, 162, 163, 185, 186, 187, 194, 195, 196, 197, 198, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 219, 225, 226, 227, 232, 241, 242, 243, 244, 246, 247, 260, 268, 273, 277, 279, 280, 282, 283, 286, 287, 288, 289, 290, 293, 295, 296, 297, 300], "cannot": [11, 12, 14, 15, 18, 19, 20], "capabl": [8, 239, 240, 243, 244, 245, 246, 247], "capac": [49, 50, 51, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 72, 80], "captur": [68, 80, 104, 161, 162, 163, 172], "cardin": [51, 52, 53, 54, 55, 56, 57, 68, 80], "care": 217, "cartesian": 279, "case": [3, 16, 36, 91, 94, 95, 96, 152, 154, 155, 156, 178, 179, 180, 193, 194, 195, 196, 197, 198, 200, 205, 210, 212, 216, 233, 234, 249, 253, 259, 261, 263, 280, 300], "categori": [5, 41, 42, 43, 44, 45, 46, 47, 48], "caus": [3, 17, 203, 211, 213], "cautiou": 0, "cdot": [10, 11, 14, 15, 16, 19, 91, 92, 94, 96, 97, 100, 101, 102, 112, 114, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 141, 150, 151, 153, 157, 165, 172, 174, 176, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 204, 205, 206, 207, 208, 209, 210, 212, 230, 231, 232, 235, 237], "center": [137, 159, 211, 291, 300], "centercrop": [299, 300], "central": 219, "certain": [11, 92, 112, 172, 206, 207, 215, 259, 261], "chain": [14, 15, 89, 289, 300], "challeng": [5, 80], "cham": 80, "chanc": [294, 295, 297], "chang": [117, 178, 212, 216, 217, 218, 281, 283, 287, 294, 300], "channel": [23, 36, 37, 38, 39, 40, 51, 52, 53, 54, 55, 56, 57, 62, 64, 65, 66, 67, 72, 73, 80, 100, 101, 102, 104, 107, 108, 109, 121, 123, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 161, 162, 163, 168, 169, 182, 183, 184, 185, 186, 187, 190, 193, 194, 195, 196, 197, 198, 292, 294, 298], "character": [49, 50], "check": [215, 291, 293], "checkpoint": 202, "choic": 279, "choleski": 13, "choos": 80, "chosen": 165, "christian": 80, "christoph": 6, "clariti": 219, "class": [3, 4, 8, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 79, 81, 98, 116, 120, 200, 202, 218, 240, 243, 274, 300], "classic": 39, "classif": [4, 5, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 75, 76, 77, 78, 79, 80, 97, 98, 115, 116, 120, 157, 158, 176, 177, 180], "classifi": [21, 28, 29, 30, 36, 37, 38, 39, 40, 51, 68, 73, 78], "cleaner": [1, 217, 232], "clear": [84, 227, 241, 242], "clearli": 219, "clf_in_featur": 36, "clf_layer": 36, "clip": [137, 212, 248], "clockwis": 137, "close": [14, 17, 156, 176, 211], "closer": 152, "closur": [201, 202], "cloth": 5, "cnn": 80, "co": [248, 264], "code": [15, 85, 87, 89, 215, 217, 219, 226], "coeffici": [19, 136, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213], "col": 104, "collect": [4, 9, 80, 85, 86, 88, 89, 202], "color": [294, 300], "colorjitt": 300, "column": [11, 12, 14, 18, 19, 20, 81, 104, 243, 277, 279], "com": [5, 6], "combin": [1, 3, 31, 32, 33, 72, 80, 86, 89, 91, 92, 138, 139, 140, 141, 142, 153, 177, 200, 209, 210, 260, 268, 273, 275, 300], "combined_dataset": [0, 1], "common": [104, 137, 202, 300], "commonli": [8, 92, 97, 98, 99, 100, 102, 112, 119, 121, 123, 137, 141, 150, 151, 158, 163, 176, 179, 180, 193, 194, 195, 196, 197, 198, 216, 219, 244, 284, 290, 291, 292, 293, 295, 296, 297, 300], "compar": [49, 50, 78, 226, 285], "compat": [4, 9, 68, 173, 188, 200, 216, 226, 290, 300], "complex": [2, 3, 8, 12, 34, 40, 43, 46, 47, 60, 62, 81, 85, 86, 89, 95, 155, 196, 198, 200, 202, 300], "compon": [17, 28, 29, 30, 31, 32, 33, 34, 83, 86, 202, 227, 300], "compos": [5, 6, 161, 162, 163, 193, 194, 195, 196, 197, 198, 200, 300], "comprehens": 3, "compris": [49, 50], "comput": [8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 40, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 66, 67, 72, 80, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 104, 112, 114, 115, 116, 117, 119, 120, 121, 123, 125, 126, 127, 136, 138, 139, 140, 141, 142, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 211, 215, 216, 217, 219, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 247, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 279, 280, 282, 286, 290, 300], "computation": [3, 17, 41], "compute_loss": [202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213], "concaten": [0, 100, 101, 102, 277, 278, 285, 288], "concept": [8, 17, 80], "condit": [10, 11, 14], "confer": 80, "config": 73, "configur": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 79, 88, 138, 139, 140], "conjunct": [104, 180], "connect": [21, 23, 24, 25, 26, 27, 31, 32, 33, 34, 36, 37, 38, 39, 40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 68, 69, 70, 71, 73, 78, 80, 114, 141, 142, 161, 162, 163, 174], "consecut": 73, "consid": [3, 14, 17, 23, 89, 146, 147, 150, 151, 200, 212, 215, 241, 242, 300], "consider": 17, "consist": [2, 4, 5, 21, 37, 38, 39, 40, 82, 125, 126, 127, 142, 190, 191, 192, 219, 224, 226, 280, 291, 298, 300], "consistent_tensor": 226, "consol": 81, "constant": [115, 116, 121, 123, 124, 145, 156, 176, 177, 182, 183, 184, 185, 186, 187, 188, 204, 205, 206, 207, 208, 209, 210, 211, 219, 280], "constant_pad": 280, "constraint": [1, 142], "construct": [8, 24, 25, 26, 27, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 69, 70, 71, 74, 75, 76, 77, 86, 200, 240, 282, 286], "constructor": [24, 25, 26, 27, 49, 50, 64, 65, 66, 67, 72, 74, 75, 76, 77], "contain": [1, 5, 6, 11, 12, 17, 18, 19, 20, 32, 36, 40, 51, 52, 53, 54, 55, 56, 57, 58, 68, 73, 81, 83, 85, 86, 87, 88, 89, 98, 104, 112, 114, 115, 116, 120, 136, 176, 177, 180, 201, 228, 229, 230, 231, 233, 234, 235, 236, 238, 239, 242, 249, 250, 251, 252, 254, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 276, 279], "content": 137, "context": [215, 217], "contextmanag": 217, "contigu": 281, "continu": [154, 223], "contrast": [185, 186, 187, 300], "contribut": [136, 165, 166, 167, 168, 169, 193, 196, 197, 198, 203, 209, 271], "control": [51, 142, 152, 178, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 226, 290, 300], "conv": [32, 58, 138, 139, 140, 183, 184], "conv1": [37, 38, 39, 89, 161, 162, 163, 193, 194, 195, 196, 197, 198], "conv1d": [103, 111, 138, 164, 171, 193, 196], "conv1dmodel": 161, "conv2": [37, 38, 39, 89, 161, 162, 163], "conv2d": [86, 89, 103, 111, 139, 164, 171, 183, 194, 197, 200], "conv2dmodel": 162, "conv3d": [103, 111, 140, 164, 171, 184, 195, 198], "conv3dmodel": 163, "conv_bia": [138, 139, 140], "conv_config": 73, "conv_lay": [36, 86], "convblock": 200, "convbnrelu1d": 143, "convbnrelu2d": 143, "convbnrelu3d": 143, "conveni": [4, 22, 79], "convent": 232, "converg": [17, 159, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 292], "convers": [177, 180, 294, 300], "convert": [5, 6, 73, 82, 84, 98, 158, 227, 279, 289, 290, 294, 300], "convnetwork": 86, "convolut": [21, 22, 23, 29, 30, 32, 36, 37, 38, 39, 40, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 66, 67, 68, 72, 73, 78, 79, 80, 86, 100, 101, 102, 104, 138, 139, 140, 141, 142, 161, 162, 163, 194, 195, 197, 198, 280], "convolv": [100, 101, 102, 161, 162, 163], "coordin": 279, "core": [0, 1, 2, 3, 83, 200, 201, 227, 300], "corinna": 6, "corner": [136, 291, 293], "correct": [85, 177, 180, 206, 207, 208, 209, 210, 290], "correctli": [17, 83, 85, 86, 87, 88, 89, 177, 180, 226], "correspond": [0, 1, 2, 5, 6, 12, 49, 50, 69, 70, 71, 85, 87, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 112, 114, 136, 155, 158, 172, 174, 182, 183, 184, 185, 186, 187, 194, 195, 203, 211, 213, 230, 231, 233, 234, 237, 257, 258, 264, 266, 277, 280, 282, 286, 288], "cort": 6, "cosh": [248, 265, 270], "cosin": [250, 254, 255, 264], "cost": [51, 80], "could": 83, "count": [80, 81, 275], "counterclockwis": [137, 296], "cover": [9, 100, 101, 102], "coverag": [125, 126, 127], "creat": [2, 3, 8, 21, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 86, 89, 142, 200, 216, 218, 226, 239, 243, 244, 245, 246, 247, 279, 285, 289, 300], "creation": [86, 89, 300], "criterion": [176, 177, 178, 179, 180], "critic": [17, 202, 226], "crop": [291, 293, 300], "cross": [115, 116, 176, 177], "cross_entropi": [111, 118], "crossentropyloss": [171, 181], "cube": 248, "cumul": [92, 153], "current": [83, 203, 206, 212, 215], "custom": [4, 8, 21, 22, 23, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 78, 79, 82, 85, 86, 87, 88, 89, 137, 138, 139, 140, 152, 154, 200, 226, 243], "custom_config": 73, "custom_lenet": 36, "customiz": 300, "custommodul": 82, "customnetwork": 85, "customparametermodel": [87, 88], "cvpr": 80, "d": [80, 102, 109, 127, 130, 134, 140, 184, 187, 188, 192, 195, 198, 216, 240, 296], "d_": [102, 127, 130, 134, 163, 192, 195, 198], "d_1": 188, "d_2": 188, "d_n": 188, "d_out": [102, 130, 134], "dampen": [203, 211, 213], "data": [4, 5, 6, 8, 15, 82, 84, 88, 99, 100, 102, 104, 108, 109, 114, 137, 138, 139, 140, 142, 155, 159, 161, 162, 163, 174, 187, 193, 195, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 219, 226, 227, 228, 229, 235, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 274, 280, 281, 282, 283, 284, 286, 289, 290, 293, 294, 295, 296, 297, 300], "databas": 6, "dataload": [2, 3], "dataset": [3, 5, 6, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 137, 205, 217, 289, 291, 300], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 236, "debug": [81, 89, 215, 224, 300], "decai": [203, 204, 205, 206, 207, 208, 209, 210, 211, 213], "decompos": [10, 18, 20], "decomposit": [9, 10, 14, 17, 18, 20], "decor": [52, 53, 54, 55, 56, 57, 218], "decoupl": [204, 205, 207, 208, 209, 210], "decreas": [206, 207, 212], "deep": [1, 3, 4, 8, 32, 40, 41, 42, 43, 45, 46, 52, 53, 54, 55, 56, 57, 59, 60, 63, 80, 121, 153, 156, 200, 226, 289, 290, 300], "deeper": [8, 29, 31, 34, 40, 47, 80, 156], "def": [0, 1, 2, 3, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290], "default": [1, 5, 6, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 91, 94, 98, 100, 101, 102, 105, 106, 107, 108, 109, 115, 116, 117, 119, 120, 121, 123, 124, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 154, 158, 161, 162, 163, 165, 166, 167, 168, 169, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 201, 202, 209, 215, 221, 222, 223, 225, 227, 239, 240, 241, 242, 243, 244, 245, 246, 247, 259, 260, 261, 268, 272, 273, 274, 275, 277, 279, 280, 282, 285, 288, 290, 294, 295, 297], "defin": [1, 3, 4, 8, 23, 28, 29, 30, 31, 32, 33, 34, 36, 40, 58, 69, 70, 71, 73, 85, 86, 87, 88, 89, 153, 176, 177, 178, 179, 180, 193, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 222, 223, 237, 242, 253, 272, 289, 300], "definit": [8, 10, 138, 139, 140, 300], "degre": [137, 296, 300], "delai": 203, "delta": [98, 117, 158, 178, 204], "delta_": [98, 158], "demonstr": [8, 9, 64, 65, 66, 67, 72, 80, 200, 219], "denomin": [121, 123, 124, 138, 139, 140, 182, 183, 184, 185, 186, 187, 188, 204, 205, 206, 207, 208, 209, 210, 211, 229], "denot": [15, 157, 161, 162, 163, 165, 166, 167, 168, 169, 272], "dens": [8, 23, 24, 25, 26, 27, 80, 205], "dense1": 8, "dense2": 8, "densenet": [24, 25, 26, 27, 35, 80, 141], "densenet_121": 80, "densenet_169": 80, "densenet_201": 80, "densenet_264": 80, "densiti": [92, 153], "depend": [8, 15, 16, 88, 115, 116, 117, 119, 120, 136, 161, 230, 240, 259, 261, 282, 286, 293, 294, 298], "depth": [86, 102, 109, 127, 130, 134, 163, 184, 187, 192, 195, 198], "depthwis": [100, 101, 102], "der": 80, "deriv": [17, 18, 98, 125, 126, 127, 153, 158, 159, 161, 162, 163, 172, 174, 218], "descend": 20, "descent": [8, 203, 213], "describ": [11, 12], "descript": 300, "deseri": 82, "design": [3, 4, 8, 9, 21, 22, 29, 30, 31, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 59, 62, 79, 80, 84, 86, 87, 88, 89, 91, 96, 156, 165, 200, 219, 300], "desir": [82, 125, 126, 127, 190, 191, 192, 272, 274], "destin": 83, "det": [9, 13], "det_a": 11, "detail": [8, 81, 202, 226, 232], "detect": 80, "determin": [0, 8, 9, 10, 11, 36, 49, 50, 125, 126, 127, 146, 147, 150, 151, 161, 162, 163, 190, 191, 192, 194, 195, 197, 198, 211, 215, 221, 222, 223, 225, 241, 242, 291, 293], "determinist": 137, "develop": [8, 200, 226, 300], "deviat": [146, 148, 150, 289, 292, 300], "diag": [17, 248], "diagon": [17, 18, 20, 240, 243, 271], "diagonaliz": 12, "dict": [22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 40, 49, 50, 52, 53, 54, 55, 56, 57, 58, 64, 65, 66, 67, 69, 70, 71, 72, 79, 83, 85, 87, 173, 201], "dictionari": [36, 83, 84, 85, 87, 89, 201], "differ": [0, 15, 28, 36, 64, 65, 66, 67, 72, 86, 89, 98, 112, 136, 142, 158, 172, 179, 202, 216, 224, 226, 238, 247, 273, 284, 300], "differenti": [8, 10, 19, 153, 200, 221, 222, 223, 225, 227, 239, 241, 242, 244, 246], "digit": [5, 6, 39, 80], "dilat": [100, 101, 102, 138, 139, 140, 161, 162, 163], "dilation_height": 104, "dilation_width": 104, "dim": [177, 180], "dimens": [11, 12, 14, 15, 18, 19, 20, 21, 40, 51, 68, 73, 78, 80, 84, 98, 112, 114, 121, 123, 124, 126, 127, 136, 141, 142, 158, 161, 162, 163, 182, 183, 184, 185, 186, 187, 188, 191, 192, 194, 195, 196, 197, 198, 216, 219, 221, 225, 227, 231, 241, 259, 260, 261, 268, 271, 272, 273, 275, 277, 280, 282, 284, 285, 286, 287, 288, 291, 293, 298], "dimension": [15, 17, 18, 20, 100, 101, 102, 128, 129, 130, 132, 133, 134, 142, 161, 162, 163, 167, 168, 169, 182, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 216, 231, 232, 236, 240, 257, 260, 268, 271, 273, 276, 281, 282, 284, 286], "diminish": 205, "direct": [12, 176, 177, 178, 179, 180, 203, 211, 212, 213], "directli": [80, 85, 86, 87, 88, 136, 204, 205, 207, 208, 209, 210, 224, 226, 274, 300], "directori": [3, 4, 5, 6], "disabl": [215, 217], "discontinu": 263, "discrep": [176, 177, 180], "discret": [222, 226], "disk": 3, "displai": [22, 79, 81], "distribut": [92, 98, 136, 146, 147, 148, 149, 150, 151, 153, 158, 161, 162, 163, 165, 166, 167, 168, 169, 172, 174, 177, 180, 193, 194, 195, 221, 222, 223, 225, 226, 260, 268, 271, 273, 285, 292, 294, 295, 296, 297], "div": 248, "divers": [137, 295, 297, 300], "diversifi": 300, "divid": [1, 17, 86, 89, 98, 100, 101, 102, 158, 176, 177, 178, 179, 180, 229, 292], "divis": [8, 17, 100, 101, 102, 165, 166, 167, 168, 169, 204, 205, 206, 207, 208, 209, 210, 211, 229], "do": [17, 19, 82, 85, 86, 87, 88, 105, 106, 107, 108, 200, 210, 215, 247, 271, 280], "document": [4, 8, 80, 202, 219, 226], "doe": [8, 15, 16, 17, 18, 20, 81, 82, 85, 86, 87, 88, 89, 151, 206, 207, 212, 215, 217, 221, 222, 223, 224, 225, 239, 240, 241, 242, 243, 244, 245, 246, 247, 283], "doesn": 217, "doi": 80, "domain": 4, "don": 217, "dot": [12, 15, 85, 86, 87, 88, 89, 188, 196, 197, 198, 231, 236, 248, 275, 277, 285, 288], "down": [3, 200, 298], "download": [4, 5, 6], "drawback": 91, "drawn": [221, 222, 223, 225, 226, 296], "drop": [165, 166, 167, 168, 169], "dropout": [21, 30, 73, 78, 80, 92, 105, 107, 108, 109, 165, 167, 168, 169], "dropout1d": [110, 111, 170, 171], "dropout1dmodel": 167, "dropout2d": [110, 111, 170, 171], "dropout3d": [110, 111, 170, 171], "dropout_prob": 30, "dropoutmodel": 166, "dtype": [82, 84, 227, 239, 240, 241, 242, 243, 244, 245, 246, 247, 274, 290], "due": [15, 17, 23, 100, 101, 155, 296], "dummi": 81, "duplic": [85, 87], "dure": [3, 8, 11, 12, 14, 17, 18, 20, 28, 29, 30, 40, 80, 82, 83, 84, 85, 86, 87, 88, 89, 98, 105, 106, 107, 108, 109, 121, 123, 137, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 215, 217, 227, 228, 259, 260, 261, 268, 273, 290, 293, 296, 300], "dy": [94, 154], "dynam": [0, 2, 3, 68, 72, 80, 83, 86, 87, 88, 89, 125, 126, 127, 142, 188, 190, 191, 192, 205, 210, 215], "dynamicnetwork": 86, "e": [0, 11, 12, 14, 15, 18, 20, 29, 30, 31, 33, 34, 36, 37, 38, 39, 73, 82, 98, 142, 157, 158, 165, 177, 201, 204, 211, 212, 243, 255, 257, 258, 265, 270, 271, 275, 294], "each": [1, 2, 3, 4, 12, 15, 17, 18, 20, 21, 23, 36, 40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 68, 69, 70, 71, 73, 78, 80, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 112, 114, 121, 123, 125, 126, 127, 141, 142, 155, 158, 161, 162, 163, 165, 166, 167, 168, 169, 172, 174, 176, 177, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 204, 205, 206, 207, 208, 209, 210, 211, 212, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 275, 277, 279, 280, 282, 285, 286, 288, 289, 290, 291, 292, 293, 294, 296, 298, 300], "earli": 210, "eas": [4, 8], "easi": [2, 3, 4, 8, 52, 53, 54, 55, 56, 57, 84, 85, 87], "easier": [3, 85, 86, 89], "easili": [4, 84, 88, 300], "eccv": 80, "economi": 20, "edg": 280, "educ": [8, 80], "effect": [80, 85, 86, 87, 88, 89, 98, 100, 101, 102, 104, 152, 153, 155, 157, 158, 159, 182, 183, 184, 185, 186, 187, 188, 215, 216, 217, 277, 288], "effici": [1, 2, 3, 5, 6, 8, 9, 14, 19, 33, 34, 51, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 72, 80, 104, 177, 200, 217], "eig": 13, "eigenvalu": [12, 18], "eigenvector": 12, "eigval": 12, "eigvec": 12, "either": [114, 219, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 274, 279], "element": [0, 17, 18, 30, 84, 88, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 138, 139, 140, 141, 155, 158, 161, 162, 163, 165, 166, 167, 168, 169, 176, 177, 178, 179, 180, 188, 193, 194, 195, 196, 197, 198, 216, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 273, 276, 279, 280, 282, 283, 284, 286], "elementwise_affin": 188, "elsewher": [196, 197, 198, 243], "elu": [93, 111, 160, 171], "elumodel": 152, "empti": [83, 89, 248], "empty_lik": 248, "enabl": [0, 1, 2, 3, 8, 15, 20, 33, 68, 69, 70, 71, 80, 83, 84, 85, 86, 87, 88, 155, 161, 162, 163, 172, 174, 200, 202, 215, 217, 221, 222, 223, 225, 227, 289], "encapsul": [200, 227], "encod": [177, 180], "encourag": [166, 167, 168, 169, 176, 177, 180, 206], "end": [16, 91, 94, 95, 96, 152, 154, 155, 156, 178, 179, 180, 193, 194, 195, 196, 197, 198, 210, 212, 233, 234, 236, 239, 249, 253, 259, 261, 263, 275, 280, 300], "enforc": [83, 85, 87], "engin": 17, "enhanc": [30, 31, 33, 34, 38, 49, 50, 64, 65, 66, 67, 72, 78, 79, 80, 85, 87, 142, 300], "ensur": [3, 5, 6, 17, 18, 19, 82, 83, 84, 85, 86, 87, 88, 89, 98, 125, 126, 127, 138, 139, 140, 154, 158, 165, 166, 167, 168, 169, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 194, 195, 196, 197, 198, 200, 201, 203, 204, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 219, 221, 222, 223, 224, 225, 226, 237, 260, 268, 273, 280, 290, 291, 292, 293, 294, 298, 300], "enter": 217, "entir": [3, 107, 108, 109, 168, 169, 226], "entri": [36, 284], "entropi": [115, 116, 176, 177], "environ": 8, "ep": [115, 116, 121, 123, 124, 138, 139, 140, 176, 177, 182, 183, 184, 185, 186, 187, 188, 204, 205, 206, 207, 208, 209, 210, 211], "epoch": [1, 3], "epsilon": [176, 177, 182, 183, 184, 185, 186, 187, 188, 204, 205, 206, 207, 208, 209, 210, 211], "equal": [15, 136, 193, 194, 195, 291, 293], "equat": [12, 17, 19], "equival": [232, 271, 281], "error": [0, 3, 12, 14, 83, 86, 87, 88, 89, 92, 117, 119, 153, 176, 177, 178, 179, 200, 201, 217, 219], "especi": [3, 85, 87, 88, 157, 216, 217, 219, 224, 289, 290, 294, 300], "essenti": [1, 3, 8, 9, 15, 17, 32, 101, 104, 200, 224, 226, 259, 289, 290, 294, 300], "estim": [179, 206, 207, 208, 209, 210, 211], "et": [29, 80], "eta": 212, "eta_": 212, "etc": [23, 176, 290], "euclidean": 16, "european": 80, "evalu": [83, 121, 123, 165, 166, 167, 168, 169, 182, 183, 184, 185, 186, 187, 300], "even": [204, 217, 239, 240, 243, 244, 245, 246, 247], "evenli": [125, 126, 127, 190, 191, 192, 239], "everi": [1, 300], "everywher": 263, "exact": [83, 86, 272, 294, 296], "exactli": 89, "exampl": [4, 232], "excel": 31, "except": [0, 263, 275, 277, 288], "excit": [58, 61, 64, 65, 66, 67, 80, 141], "exclus": [222, 225, 239], "exdb": 6, "execut": [86, 217], "exist": [19, 85, 87, 89, 218, 275], "exit": 217, "exp": [91, 96, 97, 99, 152, 156, 248], "expand": [4, 104, 282, 286], "expect": [10, 86, 89, 165, 166, 167, 168, 169, 188, 200, 219], "expens": 3, "experi": [8, 224, 226, 300], "experiment": 226, "explan": [15, 17, 21, 73, 78, 125, 126, 127, 190, 191, 192, 203], "explicit": 89, "explicitli": [80, 85, 87], "explod": [156, 182, 183, 184], "explor": [200, 226], "expon": [15, 237], "exponenti": [91, 96, 98, 152, 156, 158, 165, 206, 207, 208, 209, 210, 257], "extend": [4, 51, 68], "extens": [80, 202], "extern": [4, 8], "extract": [28, 32, 40, 51, 68, 80, 104, 163, 193, 195, 218, 240, 259, 261, 291, 293], "extractor": [36, 37, 38, 39], "extrem": [17, 41, 80], "ey": 248, "f": [1, 4, 5, 6, 8, 87, 88, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 158], "f_1": 141, "f_2": 141, "facilit": [28, 85, 89, 98, 158, 161, 162, 163, 200, 202, 292, 300], "factor": [30, 91, 100, 101, 102, 104, 141, 150, 151, 203, 210, 211, 212, 213, 219], "failur": [85, 86, 87, 88, 200], "fals": [1, 5, 6, 20, 40, 81, 82, 83, 84, 105, 106, 107, 108, 109, 121, 123, 136, 144, 146, 147, 148, 149, 150, 151, 161, 162, 163, 172, 174, 206, 207, 211, 215, 221, 222, 223, 225, 227, 239, 240, 241, 242, 243, 244, 245, 246, 247, 259, 260, 261, 268, 273, 274, 290], "famili": 218, "fan": [146, 147, 150, 151], "fan_in": [146, 147], "fan_out": [146, 147], "fashion": 5, "fashion_train": 5, "fashionmnist": 7, "fast": 210, "faster": [205, 209, 217], "fc": [32, 40, 51, 58, 68, 86, 141, 162, 163, 193, 194, 195, 196, 197, 198], "fc1": [38, 39, 81, 85, 89, 153, 155, 156, 157, 159, 174], "fc2": [38, 39, 81, 85, 89, 153, 155, 156, 157, 159, 174], "fc3": 39, "featur": [3, 21, 23, 28, 31, 32, 36, 37, 38, 39, 40, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 68, 69, 70, 71, 73, 78, 79, 80, 112, 114, 121, 138, 139, 140, 141, 142, 163, 166, 167, 168, 169, 172, 174, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 200, 205], "feature_extractor": 36, "fed": [3, 300], "feed": [3, 227, 300], "feedforward": 81, "fergu": [78, 80], "fetch": 0, "few": 81, "fewer": 1, "field": [6, 68, 72, 80, 142], "file": [3, 218], "fill": [144, 148, 149, 221, 222, 223, 225, 244, 245, 246, 247], "filter": [78, 80, 100, 101, 102, 104, 138, 139, 140, 162, 163], "filter_height": 104, "filter_s": 104, "filter_width": 104, "final": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 68, 69, 70, 71, 85, 86, 87, 88, 89, 142, 289, 300], "find": [19, 259, 261], "fine": [141, 300], "finish": 217, "first": [5, 6, 12, 36, 78, 81, 86, 87, 112, 141, 172, 206, 207, 208, 209, 210, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 279, 288, 289, 290, 300], "fit": 200, "fix": [86, 280], "flatten": [32, 36, 89, 104, 236, 278, 281, 282], "flexibl": [1, 3, 4, 8, 28, 32, 33, 34, 36, 40, 64, 65, 66, 67, 72, 73, 80, 85, 86, 87, 88, 89, 200, 202, 219, 244, 245, 290, 300], "flip": [295, 297, 300], "float": [2, 5, 6, 30, 82, 84, 91, 94, 105, 106, 107, 108, 109, 115, 116, 117, 121, 123, 124, 137, 138, 139, 140, 144, 148, 149, 150, 151, 152, 154, 165, 166, 167, 168, 169, 176, 177, 178, 182, 183, 184, 185, 186, 187, 188, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 225, 227, 239, 242, 253, 274, 292, 294, 295, 296, 297], "float32": [82, 84, 227, 239, 240, 243, 244, 246, 274, 290], "float64": [247, 274, 290], "flow": [31, 32, 58, 80, 89, 151, 153, 157, 159, 161, 162, 163, 172, 174, 215], "fly": [2, 3], "fname": 3, "focu": 8, "focus": 8, "follow": [0, 8, 9, 12, 18, 19, 20, 21, 24, 25, 26, 27, 64, 65, 66, 67, 72, 73, 78, 81, 91, 92, 94, 95, 96, 97, 98, 99, 112, 114, 136, 138, 139, 140, 141, 142, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 218, 219, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 259, 261, 279, 283, 291, 292, 293, 294, 295, 296, 297, 300], "form": [18, 142, 236, 279, 282, 286, 300], "format": [2, 3, 5, 6, 81, 177, 180, 290], "formul": 92, "formula": [12, 20, 98, 125, 126, 127, 158, 178, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 232, 273, 294], "forward": [8, 21, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 69, 70, 71, 72, 73, 78, 81, 82, 83, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213], "found": 8, "foundat": [32, 58, 83, 200, 202, 227], "four": [24, 25, 26, 27, 280], "frac": [10, 11, 12, 14, 15, 16, 17, 19, 20, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 112, 114, 125, 126, 127, 128, 129, 130, 132, 133, 134, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 204, 205, 206, 207, 208, 209, 210, 211, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 292], "frame": 109, "framework": [4, 8, 80, 177, 180, 182, 183, 184, 185, 186, 187, 201, 202, 300], "frequent": [177, 180], "from": [0, 1, 2, 3, 4, 5, 6, 8, 15, 17, 23, 24, 25, 26, 27, 32, 40, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 81, 82, 83, 84, 85, 86, 87, 88, 89, 104, 112, 121, 123, 136, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 161, 162, 163, 165, 166, 167, 168, 169, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 200, 201, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 216, 217, 218, 219, 221, 222, 223, 225, 226, 227, 232, 233, 234, 238, 240, 259, 260, 261, 268, 273, 275, 277, 279, 282, 284, 285, 286, 288, 291, 292, 293, 294, 295, 296, 297, 300], "full": 20, "full_matric": 20, "fulli": [4, 9, 21, 23, 24, 25, 26, 27, 32, 36, 37, 38, 39, 40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 68, 69, 70, 71, 73, 78, 80, 114, 141, 142, 174, 226], "func": 218, "function": [3, 4, 5, 6, 8, 9, 83, 85, 86, 87, 88, 89, 138, 139, 140, 141, 152, 153, 154, 155, 156, 157, 158, 159, 165, 166, 167, 168, 169, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 200, 202, 219, 226, 289, 300], "fundament": [8, 114, 174, 290], "further": [8, 226, 260, 268, 273], "fuse": 68, "fusion": [69, 70, 71], "futur": 173, "g": [0, 11, 12, 15, 18, 20, 29, 30, 31, 33, 34, 36, 37, 38, 39, 73, 80, 141, 142, 165, 201, 204, 211, 275, 294], "g_": 205, "g_t": 211, "gain": [150, 151], "gamma": [182, 183, 184, 185, 186, 187, 188], "gap": [40, 51, 68, 141], "gaussian": [92, 153], "gelu": [93, 111, 160, 171], "gelunetwork": 153, "gener": [17, 81, 137, 165, 166, 167, 168, 169, 186, 207, 209, 210, 217, 221, 222, 223, 224, 225, 226, 231, 239, 241, 242, 279, 293, 294, 295, 297, 300], "get": [5, 6], "github": 5, "give": [8, 203, 211], "given": [11, 12, 15, 17, 18, 20, 104, 176, 177, 180, 201, 215, 245, 247, 289, 294, 295, 297, 300], "global": [0, 40, 51, 58, 68, 141, 215, 217, 224, 226], "go": [29, 80], "goal": [176, 177, 180], "googlenet": [29, 80], "gpu": 80, "grad": [82, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 104, 112, 114, 136, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 201, 202, 221, 222, 223, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 295, 297, 298], "grad_output": 15, "gradient": [8, 9, 31, 32, 80, 82, 84, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 221, 222, 223, 225, 239, 240, 241, 242, 243, 244, 245, 246, 247, 274, 290], "grain": 141, "graph": [8, 151, 227, 239, 240, 243, 244, 245, 246, 247, 290], "grayscal": [5, 6, 36, 37, 38, 39, 294, 300], "greater": 253, "green": 294, "grid": 279, "groundbreak": 80, "group": [51, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 68, 72, 80, 86, 100, 101, 102, 138, 139, 140, 142, 161, 162, 163, 201, 202], "group1": 86, "group2": 86, "groupedconvblock": 51, "growth_rat": [23, 24, 25, 26, 27], "guarante": 224, "h": [40, 52, 53, 54, 55, 56, 57, 69, 70, 71, 101, 102, 104, 108, 109, 126, 127, 129, 130, 133, 134, 136, 137, 139, 140, 141, 183, 184, 186, 187, 191, 192, 195, 198, 291, 293], "h_": [101, 102, 126, 127, 129, 130, 133, 134, 136, 162, 163, 191, 192, 194, 195, 197, 198], "h_out": [101, 102, 129, 130, 133, 134], "h_stack": 277, "ha": [0, 12, 81, 89, 100, 101, 102, 138, 139, 140, 176, 177, 182, 183, 184, 185, 186, 187, 188, 201, 202, 232, 271, 275, 277, 285, 288, 294], "half": 266, "han": 5, "hand": 19, "handl": [0, 3, 8, 17, 83, 85, 86, 87, 88, 89, 177, 180, 200, 202, 217], "handwritten": [5, 6, 39], "hardwar": 8, "hat": [206, 207, 208, 209, 210], "have": [0, 1, 11, 12, 14, 17, 18, 20, 84, 86, 88, 89, 101, 102, 151, 200, 243, 244, 245, 246, 247, 259, 261, 275, 277, 279, 284, 285, 288, 292, 298], "he": 80, "height": [101, 102, 104, 108, 109, 126, 127, 129, 130, 133, 134, 136, 137, 142, 162, 163, 183, 184, 186, 187, 191, 192, 194, 195, 197, 198, 291, 293, 298], "help": [8, 30, 94, 96, 109, 152, 154, 156, 159, 182, 183, 184, 193, 194, 196, 197, 203, 206, 207, 209, 215, 216, 217, 219], "henc": 283, "here": [3, 10, 83, 112, 200, 202, 216, 217, 219, 226, 289, 290, 300], "hidden": [21, 78, 86], "hidden_s": 86, "hierarch": [86, 89, 200], "hierarchi": 162, "hierarchicalnetwork": 86, "high": [8, 48, 63, 72, 222, 225], "higher": [51, 177, 180, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 231, 232, 236, 257], "highest": 222, "highli": 80, "highlight": [141, 196, 197, 198], "hint": 219, "histor": 205, "histori": [221, 222, 223, 225, 239, 240, 241, 242, 243, 244, 245, 246, 247], "hold": [85, 86, 87, 88], "horizont": [277, 285, 295, 300], "hot": [177, 180], "how": [2, 3, 8, 64, 65, 66, 67, 72, 86, 89, 200, 219, 300], "howev": [82, 151], "hstack": 278, "http": [5, 6], "hu": [80, 141], "huang": 80, "huber": [117, 178], "huber_loss": [111, 118], "huberloss": [171, 181], "huberregressionmodel": 178, "hue": 300, "hyperbol": [99, 159, 255, 265, 270], "hyperparamet": [40, 51, 201, 203], "i": [0, 1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300], "iccv": 80, "ideal": [8, 89], "ident": [14, 15, 80, 137, 171, 175, 224, 226, 243, 283], "identifi": 87, "idx": [2, 3], "ieee": [80, 141], "ii": 271, "ij": [98, 136, 158, 230, 231, 232, 236, 279], "ik": [230, 231, 232], "ill": [11, 17], "ilsvrc": 80, "imag": [3, 4, 5, 6, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 79, 80, 101, 123, 137, 139, 141, 162, 186, 279, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300], "image_dir": 3, "image_path": 3, "imagedataset": 3, "imageio": 3, "imagenet": [24, 25, 26, 27, 49, 50, 64, 65, 66, 67, 72, 80], "imbal": [177, 180], "impact": [80, 209], "implement": [2, 3, 8, 17, 21, 23, 28, 29, 30, 31, 33, 34, 36, 40, 49, 50, 52, 53, 54, 55, 56, 57, 58, 78, 80, 83, 104, 142, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 277, 288, 294], "impli": [161, 162], "import": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 49, 50, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 106, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300], "improp": [86, 89, 226], "improv": [29, 30, 31, 32, 34, 40, 51, 64, 65, 66, 67, 68, 78, 80, 121, 137, 141, 153, 156, 159, 203, 204, 205, 206, 207, 208, 209, 210, 211, 219, 293, 296, 300], "imread": 3, "in1_featur": [112, 172], "in2_featur": [112, 172], "in_channel": [40, 86, 89, 138, 139, 140, 141, 142, 161, 162, 163, 183, 184, 193, 194, 195, 196, 197, 198, 200], "in_featur": [85, 86, 89, 114, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 165, 166, 167, 172, 174, 176, 177, 178, 179, 180, 182, 185, 188, 193, 194, 195, 196, 197, 198], "incept": [29, 30, 31, 32, 33, 34, 35, 80], "inception_resnet_v1": 80, "inception_resnet_v2": 80, "inception_v1": 80, "inception_v3": 80, "inception_v4": 80, "inceptionresnet": [33, 34], "includ": [3, 4, 5, 8, 9, 15, 16, 21, 28, 29, 30, 33, 36, 40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 68, 73, 78, 81, 83, 84, 86, 88, 89, 136, 138, 139, 140, 200, 201, 202, 209, 219, 226, 232, 280], "inclus": [84, 87, 222, 225], "incom": [114, 174], "incomplet": 2, "incompletedataset": 2, "incorpor": [20, 51, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 80, 153], "increas": [51, 52, 53, 54, 55, 56, 57, 68, 100, 101, 102, 104, 137, 205, 212, 216, 277, 288, 294, 295, 297, 300], "independ": [86, 100, 101, 102, 165, 166, 167, 168, 169, 188, 232, 242, 292, 294, 296, 298], "index": [0, 2, 5, 6, 216, 239, 240, 243, 279, 283], "indexerror": 0, "indic": [0, 1, 73, 81, 84, 86, 88, 89, 116, 120, 177, 180, 193, 215, 227, 291, 293], "individu": [3, 86, 89, 178, 188, 202, 205, 212], "induc": [96, 156], "inf": 269, "infer": [64, 65, 66, 67, 72, 86, 89, 217], "infin": [18, 20, 208], "inform": [8, 80, 81, 82, 141, 202, 204, 217], "infti": [16, 210], "inherit": [1, 203, 211, 213], "init": 145, "initi": [1, 23, 32, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 74, 75, 76, 77, 82, 84, 85, 86, 87, 88, 89, 142, 144, 146, 147, 148, 149, 150, 151, 161, 162, 163, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 188, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 221, 224, 225, 226, 239, 243, 244, 245, 246, 247, 274], "initial_accumulator_valu": 205, "inner": [8, 230, 248], "input": [8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 51, 64, 65, 66, 67, 68, 72, 78, 80, 81, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 219, 226, 227, 228, 230, 231, 232, 236, 240, 242, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300], "input1": 172, "input2": 172, "input_": [21, 78, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 190, 191, 192], "input_1": 112, "input_2": 112, "input_data": [152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 188, 193, 194, 195, 196, 197, 198], "input_s": [86, 88, 158, 177, 180], "input_shap": 81, "input_tensor": [8, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 69, 70, 71, 72, 73, 82, 85, 86, 87, 88, 89, 98, 141, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 200, 291, 292, 293, 294, 295, 296, 297, 298], "insid": [3, 215, 217], "insight": [8, 80], "inspect": [83, 84, 89, 201], "instabl": [17, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213], "instal": 8, "instanc": [0, 1, 8, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 79, 81, 83, 84, 85, 87, 88, 89, 123, 185, 186, 187, 188, 201, 218, 274, 282, 286, 300], "instance_norm": [111, 122, 185, 186, 187], "instancenorm1d": [171, 189], "instancenorm1dmodel": 185, "instancenorm2d": [171, 189], "instancenorm3d": [171, 189], "instanti": [2, 64, 65, 66, 67, 72, 218], "instead": [8, 81, 85, 86, 87, 88, 89, 146, 147, 150, 151, 206, 207, 208, 217, 219, 241, 242], "int": [0, 1, 2, 5, 6, 15, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 84, 98, 100, 101, 102, 104, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 148, 149, 150, 151, 158, 161, 162, 163, 172, 174, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 206, 207, 208, 209, 210, 212, 218, 221, 222, 223, 224, 225, 227, 239, 240, 241, 243, 244, 246, 253, 259, 260, 261, 268, 272, 273, 274, 275, 280, 282, 283, 284, 285, 286, 287, 291, 293, 298], "integ": [1, 3, 15, 58, 73, 100, 101, 102, 126, 127, 161, 162, 163, 188, 191, 192, 194, 195, 196, 197, 198, 219, 222, 223, 225, 226, 241, 244, 246, 260, 268, 272, 273, 280, 282, 283, 286], "integr": [1, 2, 4, 5, 6, 9, 80, 84, 86, 88, 89, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 172, 174, 193, 194, 195, 196, 197, 198], "intellig": [80, 141], "intend": [82, 87, 88], "intens": [17, 23, 41, 292, 294], "intent": 219, "interact": [112, 172, 200, 226], "interdepend": 80, "interfac": [2, 83, 86, 202], "interfer": [215, 217], "intermedi": [17, 141], "intern": [41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 61, 62, 63, 80, 85, 86, 87, 88, 89, 177, 180, 200, 291, 292, 293, 294, 295, 296, 297, 298], "interpol": [111, 135, 298], "interpret": [80, 98, 158, 219, 275], "interv": [221, 225, 239], "introduc": [29, 30, 51, 80, 95, 141, 153, 155, 157, 159, 165, 166, 167, 168, 169, 293, 296, 300], "introspect": 89, "intuit": [8, 85, 87, 200, 300], "inv": 13, "inv_a": 14, "invari": [194, 197], "invers": [8, 11, 14, 15, 17, 205, 250, 251, 252], "invert": [11, 14, 15, 19], "invok": 218, "involv": [10, 11, 12, 14, 17, 18, 20, 68, 91, 92, 94, 95, 96, 97, 99, 112, 114, 136, 161, 162, 163, 172, 174, 219, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 247, 257, 258, 259, 261, 264, 266, 279, 280, 282, 286], "is_leaf": 227, "issu": [3, 156, 182, 183, 184, 206, 207], "item": [5, 179], "iter": [0, 1, 2, 3, 82, 83, 86, 88, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 239], "ith": [98, 158], "its": [4, 15, 17, 21, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 59, 60, 61, 62, 63, 69, 70, 71, 78, 80, 81, 82, 85, 86, 87, 88, 100, 101, 102, 104, 137, 142, 151, 153, 155, 196, 197, 198, 200, 201, 204, 212, 215, 216, 217, 218, 239, 241, 242, 246, 259, 261, 274, 283, 292, 295, 297, 300], "itself": [10, 15, 85, 86, 87, 88], "j": [6, 98, 141, 158, 182, 183, 184, 185, 186, 187, 193, 194, 196, 197, 279, 285, 291, 293], "jie": 80, "jk": 231, "join": [3, 275], "json": 218, "k": [15, 80, 100, 161, 177, 183, 184, 186, 187, 193, 196, 197, 230, 231, 240, 243, 275], "k_d": [102, 163, 195, 198], "k_h": [101, 102, 162, 163, 194, 195, 198], "k_w": [101, 102, 162, 163, 194, 195, 198], "kaim": [80, 146, 147, 150, 151], "kaiming_norm": 145, "kaiming_uniform": 145, "karen": 80, "kashif": 5, "keep": [83, 155, 204, 217, 283], "keep_grad": [84, 221, 222, 223, 225, 227, 239, 240, 241, 242, 243, 244, 245, 246, 247, 274, 290], "keep_var": 83, "keepdim": [259, 260, 261, 268, 273], "kei": [80, 83, 85, 87, 89, 201], "kept": [260, 268, 273], "kernel": [36, 37, 38, 39, 68, 69, 70, 71, 72, 78, 80, 100, 101, 102, 104, 125, 126, 127, 128, 129, 130, 132, 133, 134, 138, 139, 140, 142, 161, 162, 163, 190, 191, 192, 194, 195, 198], "kernel_s": [68, 69, 70, 71, 86, 89, 128, 129, 130, 132, 133, 134, 138, 139, 140, 142, 161, 162, 163, 183, 184, 193, 194, 195, 196, 197, 198], "keyerror": 83, "keyword": [22, 24, 25, 26, 27, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 79, 83, 173], "kj": [230, 232], "known": 80, "krizhevski": 80, "kroneck": [98, 158], "kwarg": [22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 79, 83, 173, 218], "l": [10, 17, 80, 100, 107, 125, 128, 132, 138, 141, 165, 166, 167, 168, 169, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190], "l2": [203, 204, 205, 206, 207, 208, 209, 210, 211, 213], "l_": [100, 125, 128, 132, 161, 190, 193, 196], "l_out": [100, 128, 132], "label": [4, 5, 6, 30, 176, 177, 180], "lambd": 203, "lambda": [12, 96, 156, 203, 207], "lambda_1": 12, "lambda_2": 12, "lambda_i": 12, "lambda_n": 12, "languag": [4, 161, 172, 193, 196], "larg": [0, 3, 17, 23, 41, 42, 43, 46, 59, 60, 80, 178, 200, 203, 206, 207, 208, 211, 212, 213, 217], "larger": [40, 68, 85, 87, 100, 101, 102, 104, 203, 233, 280, 291, 293, 298], "largest": 259, "last": [1, 98, 124, 158, 231, 232, 275, 295, 297], "latest": 4, "layer": [8, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 83, 85, 86, 89, 98, 114, 121, 123, 124, 138, 139, 140, 141, 142, 146, 147, 150, 151, 158, 161, 162, 163, 172, 173, 174, 180, 188, 193, 194, 195, 196, 197, 198, 200, 226, 280, 290], "layer1": 218, "layer2": 218, "layer_group": 86, "layer_norm": [111, 122, 188], "layer_sequ": [86, 89], "layernorm": [171, 189], "layernormmodel": 188, "lead": [86, 89, 153, 185, 186, 187, 188, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 226], "leaf": 227, "leaki": [94, 154], "leaky_relu": [93, 111, 154], "leakyrelu": [160, 171], "learn": [1, 3, 4, 5, 6, 8, 15, 17, 51, 52, 53, 54, 55, 56, 57, 78, 79, 80, 85, 86, 87, 88, 95, 98, 141, 152, 154, 155, 158, 161, 162, 163, 166, 167, 168, 169, 172, 174, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 224, 289, 290, 300], "learnabl": [82, 83, 84, 121, 123, 124, 138, 139, 140, 161, 162, 163, 172, 174, 182, 183, 184, 185, 186, 187, 188, 200], "least": [17, 18, 20, 271], "lecun": [6, 80], "left": [15, 16, 17, 20, 92, 98, 153, 158, 176, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 196, 197, 198, 291, 293], "leftarrow": 209, "len": [0, 1, 2, 3, 279], "lenet": [35, 37, 38, 39, 80], "lenet_1": 80, "lenet_4": 80, "lenet_5": 80, "length": [86, 100, 107, 125, 128, 132, 161, 173, 182, 185, 190, 193, 196, 280, 292], "leq": [178, 210, 237, 253], "lerp": 136, "less": [0, 91, 94, 117, 152, 154, 177, 178, 180, 253], "let": 12, "level": [8, 32], "leverag": [19, 31, 34, 52, 53, 54, 55, 56, 57, 80, 142, 200], "li": 80, "librari": [3, 8, 9, 83, 200, 201, 202, 218, 219, 226, 227, 300], "lightweight": [8, 44, 61, 142], "like": [8, 32, 52, 53, 54, 55, 56, 57, 69, 70, 71, 80, 82, 83, 86, 89, 100, 150, 151, 156, 165, 182, 183, 184, 185, 186, 187, 215, 216, 219, 274, 290, 300], "likelihood": [120, 177, 180], "limit": [81, 204, 253], "linalg": [8, 13], "linalgerror": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20], "linear": [8, 9, 10, 17, 18, 19, 58, 81, 85, 86, 87, 89, 91, 92, 94, 95, 96, 146, 147, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 165, 166, 167, 172, 173, 176, 177, 178, 179, 180, 182, 185, 188, 193, 194, 195, 196, 197, 198, 218, 243], "linearli": 178, "list": [0, 1, 36, 40, 51, 58, 68, 73, 81, 82, 84, 85, 86, 87, 88, 124, 142, 173, 188, 201, 219, 221, 222, 223, 225, 227, 240, 241, 242, 244, 245, 246, 247, 272, 283, 284, 287, 289], "listdir": 3, "liter": [40, 115, 116, 117, 119, 120, 136, 138, 139, 140, 142, 146, 147, 161, 162, 163, 176, 177, 178, 179, 180, 279], "liu": 80, "ln": 237, "load": [3, 4, 5, 6, 82, 83, 84, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 218], "load_state_dict": [83, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213], "loader": [1, 2, 3], "local": [80, 104, 161], "locat": [80, 136], "log": [120, 176, 177, 180, 248], "log_softmax": 180, "logarithm": [237, 257, 258], "logic": [3, 190, 191, 192, 200, 201], "logit": [21, 78, 98, 158, 177], "logsoftmax": [177, 180], "long": [209, 272], "loop": [1, 86, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213], "loss": [8, 17, 85, 86, 87, 88, 89, 98, 115, 116, 117, 119, 120, 152, 153, 154, 155, 156, 157, 158, 159, 165, 166, 167, 168, 169, 173, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213], "low": [8, 32, 222, 225], "lower": [10, 149, 203, 211, 212, 213, 225], "lowest": 222, "lr": [201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213], "lu": 14, "lucid": [0, 1, 2, 5, 6, 13, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 220, 248, 278, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298], "m": [73, 85, 86, 89, 194, 195, 197, 198, 206, 207, 208, 209, 210, 243], "m_": [206, 207, 208, 209, 210], "m_t": [209, 210], "maaten": 80, "machin": [3, 5, 6, 8, 17, 141, 206, 216, 224], "magnitud": [211, 212, 300], "mai": [3, 8, 12, 14, 17, 86, 88, 137, 178, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 217, 226, 294, 300], "main": [8, 18, 32, 86, 240, 243], "maintain": [17, 51, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 72, 82, 83, 85, 86, 87, 89, 96, 146, 147, 150, 151, 152, 153, 156, 165, 166, 167, 168, 169, 182, 183, 184, 185, 186, 187, 206, 211, 291, 294, 298], "make": [1, 3, 8, 28, 32, 36, 40, 80, 86, 89, 157, 177, 178, 188, 194, 197, 200, 205, 206, 207, 208, 216, 218, 226, 227, 232, 279, 289, 300], "manag": [8, 83, 85, 86, 87, 88, 89, 200, 202, 215, 217, 218, 226], "manhattan": 16, "mani": 81, "manipul": [8, 85, 87, 300], "manner": [86, 89], "manual": [115, 116, 120, 176, 177, 180, 217], "map": [40, 51, 61, 68, 80, 83, 97, 99, 141, 157, 159], "mask": [82, 165, 166, 167, 168, 169], "match": [19, 83, 86, 89, 115, 117, 119, 124, 138, 139, 140, 201, 257, 282, 283, 286, 287, 292, 300], "math": [254, 264, 269], "mathbf": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 112, 114, 136, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 230, 231, 232, 236, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298], "mathcal": [146, 148, 150, 165, 166, 167, 168, 169, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188], "mathemat": [14, 138, 139, 140, 293, 295, 296, 297], "mathrm": 17, "matmul": 248, "matric": [9, 11, 12, 14, 17, 19, 20, 230, 231, 232, 243, 279], "matrix": [8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 104, 112, 173, 174, 200, 230, 279], "matrix_pow": 13, "matthew": 80, "max": [16, 58, 73, 95, 132, 133, 134, 155, 196, 197, 198, 208, 233, 248, 253], "max_pool": [196, 197, 198], "max_pool1d": [111, 131], "max_pool2d": [111, 131], "max_pool3d": [111, 131], "max_valu": 253, "maxim": 3, "maximum": [16, 155, 196, 197, 198, 206, 208, 248, 253, 259, 296], "maxpool": [21, 78], "maxpool1d": [171, 199], "maxpool1dmodel": 196, "maxpool2d": [86, 89, 162, 171, 199], "maxpool2dmodel": 197, "maxpool3d": [163, 171, 199], "maxpool3dmodel": 198, "mean": [5, 6, 18, 81, 82, 96, 100, 101, 102, 105, 115, 116, 117, 119, 120, 121, 123, 138, 139, 140, 148, 152, 153, 154, 155, 156, 157, 159, 163, 165, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 206, 207, 208, 209, 210, 211, 215, 223, 248, 253, 257, 258, 259, 261, 264, 266, 268, 271, 272, 273, 289, 292, 300], "meaning": [89, 219], "measur": [176, 177, 179, 180], "mechan": [8, 58, 68, 72, 88, 112], "membership": 176, "memori": [2, 3, 23, 217, 241, 242], "meshgrid": 278, "method": [3, 8, 9, 14, 58, 85, 86, 87, 88, 89, 115, 116, 117, 119, 120, 146, 147, 150, 151, 176, 177, 178, 179, 180, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 226], "middl": 216, "might": 200, "min": [234, 248, 253], "min_valu": 253, "mind": [0, 3, 8, 86, 89, 217], "mini": 1, "minim": [4, 8, 89, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 202], "minimalist": 8, "minimum": [248, 253, 261], "minu": 157, "mirror": [245, 247], "mismatch": [83, 200, 201], "miss": [83, 200], "mitig": [94, 152, 154, 156, 182, 183, 184], "mlp": 142, "mnist": [4, 5, 7, 37, 38], "mnist_train": [4, 6], "mode": [8, 109, 121, 123, 136, 146, 147, 165, 166, 167, 168, 169, 280], "model": [1, 3, 4, 8, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 98, 137, 138, 139, 140, 142, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 188, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 226, 289, 290, 300], "moder": 62, "modern": 80, "modif": [89, 217], "modifi": [22, 40, 79, 85, 86, 87, 88, 144, 146, 147, 148, 149, 150, 151, 165, 215, 217, 224, 277, 288], "modul": [5, 6, 8, 21, 22, 28, 31, 32, 33, 34, 36, 40, 51, 58, 68, 73, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 138, 139, 140, 141, 142, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 218, 219, 226, 290, 300], "modular": [3, 8, 80, 83, 86, 89, 200, 300], "moduledict": [86, 87, 89, 90], "modulelist": [88, 89, 90], "moment": [206, 207, 208, 209, 210], "momentum": [121, 123, 138, 139, 140, 182, 183, 184, 185, 186, 187, 203, 209, 211, 213], "momentum_decai": 209, "moor": 17, "more": [3, 4, 5, 8, 12, 40, 47, 85, 86, 89, 152, 166, 167, 168, 169, 200, 201, 202, 203, 204, 207, 208, 211, 212, 213, 223, 232, 271, 285, 300], "most": [9, 80, 197, 290, 291, 300], "move": [203, 211], "mse": [117, 119, 178, 179], "mse_loss": [111, 118], "mseloss": [171, 181], "mu": [148, 182, 183, 184, 185, 186, 187, 188, 273], "mu_c": 292, "mu_i": [185, 186, 187], "much": 300, "mul": 248, "multi": [3, 4, 33, 68, 69, 70, 71, 80, 98, 116, 120, 142, 158, 177, 180, 260, 268, 273], "multidimension": [221, 225, 241], "multipl": [1, 3, 8, 9, 15, 19, 21, 40, 58, 72, 87, 88, 89, 104, 136, 137, 141, 142, 165, 166, 167, 168, 169, 177, 180, 200, 216, 221, 222, 223, 225, 230, 235, 241, 242, 289, 294, 300], "multipli": [15, 88, 114, 174, 212, 235, 236], "must": [0, 1, 3, 10, 11, 12, 14, 15, 18, 19, 20, 81, 83, 85, 86, 87, 88, 89, 124, 165, 166, 167, 168, 169, 180, 201, 217, 271, 275, 277, 280, 282, 283, 285, 286, 288, 291, 292, 293, 294, 295, 297], "my_simple_model": 218, "mymodel": [83, 84, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213], "myoptim": [201, 202], "n": [15, 16, 40, 52, 53, 54, 55, 56, 57, 69, 70, 71, 80, 85, 86, 89, 100, 101, 102, 104, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 146, 148, 150, 161, 162, 163, 168, 169, 172, 174, 176, 177, 179, 180, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 243, 260, 271, 273], "n1": 16, "nabla_": [204, 205, 206, 207, 208, 209, 210, 212], "nabla_t": 210, "nadam": 214, "name": [80, 81, 83, 85, 87, 89, 218, 219], "nan": [18, 20], "natur": [17, 80, 161, 172, 193, 196, 237, 257, 258], "ndarrai": [82, 84, 219, 227, 240, 242, 245, 247, 274], "ndim": [18, 20, 84, 227], "ne": 15, "nearest": 136, "necessari": [4, 5, 6, 17, 217, 277, 288], "need": [2, 4, 86, 87, 88, 98, 172, 200, 217, 241, 242, 289, 290, 300], "neg": [15, 17, 20, 91, 120, 137, 152, 154, 155, 156, 177, 180, 212, 275], "negative_slop": [94, 154], "neglect": 88, "neighbor": 136, "neq": 16, "nest": [81, 86, 89, 200], "nestedmodel": 81, "nesterov": 209, "net": [78, 80], "network": [3, 4, 8, 21, 22, 23, 31, 32, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 58, 59, 60, 61, 62, 63, 68, 73, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 99, 100, 101, 102, 112, 114, 121, 137, 141, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 188, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 211, 213, 225, 226, 227, 239, 244, 246, 259, 261, 280, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300], "neural": [3, 4, 8, 21, 22, 32, 39, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 95, 96, 97, 98, 99, 100, 101, 102, 112, 114, 121, 137, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 188, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 211, 213, 225, 226, 227, 239, 244, 246, 259, 261, 280, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300], "neuralnetwork": 155, "neuron": 154, "never": 294, "new": [83, 84, 91, 92, 94, 95, 96, 97, 99, 112, 114, 136, 142, 146, 147, 148, 149, 150, 151, 201, 218, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 242, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 274, 275, 277, 280, 282, 283, 285, 286, 287, 288], "next": [89, 289], "nll": 120, "nll_loss": [111, 118], "nllloss": [171, 181], "nn": [5, 6, 8, 21, 23, 28, 32, 36, 40, 51, 58, 64, 65, 66, 67, 68, 72, 73, 78, 81, 90, 93, 103, 110, 113, 118, 122, 131, 135, 143, 145, 160, 164, 170, 171, 175, 181, 189, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 218, 290, 300], "no_grad": 215, "node": 227, "nois": [20, 226], "non": [12, 15, 17, 20, 88, 92, 94, 95, 146, 147, 152, 153, 154, 155, 156, 157, 159, 165, 166, 167, 168, 169, 206, 207, 217, 237, 253], "none": [0, 1, 2, 5, 6, 28, 32, 36, 40, 81, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 137, 138, 139, 140, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 216, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 241, 242, 243, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298], "norm": [9, 13, 208], "normal": [5, 6, 58, 92, 96, 98, 99, 121, 123, 124, 138, 139, 140, 145, 146, 150, 153, 156, 158, 165, 182, 183, 184, 185, 186, 187, 188, 211, 223, 226, 289, 299, 300], "normalized_shap": [124, 188], "note": [100, 165], "noth": [105, 106, 107, 108], "notimplementederror": [2, 83, 201], "notin": 253, "nov": 80, "novel": [5, 80], "np": [40, 52, 53, 54, 55, 56, 57, 69, 70, 71, 82, 84, 141, 177, 180, 219, 227, 232, 239, 240, 243, 244, 246, 247, 258, 274, 290], "npy": [5, 6], "num_class": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 158, 177, 180], "num_featur": [89, 138, 139, 140, 182, 183, 184, 185, 186, 187], "num_init_featur": [23, 24, 25, 26, 27], "num_paramet": 88, "number": [0, 1, 2, 5, 6, 11, 12, 14, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 86, 88, 89, 100, 101, 102, 104, 107, 108, 109, 112, 114, 116, 120, 121, 123, 125, 126, 127, 136, 137, 138, 139, 140, 141, 142, 146, 147, 150, 151, 157, 161, 162, 163, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 203, 221, 224, 225, 227, 237, 239, 241, 243, 259, 260, 261, 272, 273, 275, 277, 280, 282, 283, 284, 286, 288, 292, 294, 295, 297, 300], "numer": [14, 17, 115, 116, 121, 123, 124, 138, 139, 140, 176, 177, 182, 183, 184, 185, 186, 187, 188, 204, 205, 206, 207, 208, 209, 210, 211, 219, 229, 239, 244, 246], "numpi": [8, 82, 84, 177, 180, 219, 227, 232, 240, 243, 258, 271, 274, 280, 282, 286, 290, 300], "o": [3, 195, 198, 244, 245], "object": [1, 3, 9, 68, 80, 83, 87, 88, 179, 200, 217, 228, 229, 233, 234, 235, 238, 274], "observ": 206, "obtain": 1, "occur": [137, 217, 218, 275], "occurr": 15, "odot": [165, 166, 167, 168, 169], "off": 215, "offer": [4, 8, 200, 202, 226, 300], "offset": 243, "often": [15, 49, 50, 100, 101, 102, 104, 177, 180, 239, 246, 290, 294, 298, 300], "older": 209, "onc": 217, "one": [0, 64, 65, 66, 67, 72, 88, 89, 98, 100, 114, 128, 132, 138, 139, 140, 156, 157, 158, 161, 167, 177, 180, 182, 185, 193, 196, 201, 216, 219, 223, 238, 245, 259, 261, 276, 281, 285, 290], "ones": [112, 114, 161, 162, 163, 174, 182, 183, 184, 185, 186, 187, 188, 200, 243, 245, 248], "ones_lik": 248, "onli": [8, 81, 136, 155, 165, 166, 167, 168, 169, 176, 177, 180, 182, 183, 184, 185, 186, 187, 188, 196, 197, 198, 212, 215, 239, 253, 259, 261, 271, 280, 281, 283, 284], "onto": [18, 20], "openml": [5, 6], "oper": [3, 8, 9, 14, 17, 58, 59, 60, 61, 62, 63, 82, 83, 86, 91, 92, 94, 95, 96, 97, 99, 100, 101, 102, 104, 109, 112, 114, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 215, 216, 217, 219, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 241, 242, 244, 246, 257, 258, 259, 260, 261, 264, 266, 268, 271, 273, 275, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 292, 298], "operatornam": [15, 17], "opposit": 203, "optim": [3, 8, 9, 15, 17, 18, 20, 23, 28, 29, 30, 31, 32, 33, 34, 82, 84, 87, 88, 104, 161, 162, 163, 200, 217], "optimizer_st": [201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213], "option": [1, 5, 6, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 91, 94, 98, 101, 102, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 146, 147, 148, 149, 150, 151, 152, 154, 158, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 201, 203, 211, 213, 221, 222, 223, 225, 227, 239, 240, 241, 242, 243, 244, 245, 246, 247, 259, 260, 261, 268, 272, 273, 274, 275, 279, 282, 284, 285, 290, 294, 295, 297], "ord": 16, "order": [1, 3, 16, 20, 85, 86, 87, 88, 89, 272, 289], "ordered_dict": 89, "ordereddict": [83, 85, 86, 89], "organ": [85, 86, 87, 89, 218], "orient": 300, "origin": [30, 39, 105, 137, 141, 159, 280, 281, 282, 283, 286, 287, 298], "orthogon": [17, 18, 20], "orthonorm": 18, "oscil": [203, 211, 213], "other": [2, 3, 8, 14, 30, 34, 36, 39, 82, 83, 86, 89, 146, 147, 165, 200, 201, 215, 217, 226, 227, 239, 241, 244, 246, 271, 279, 300], "otherwis": [41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 61, 62, 63, 91, 94, 95, 96, 98, 152, 154, 155, 156, 158, 166, 167, 168, 169, 178, 193, 194, 195, 196, 197, 198, 201, 212, 218, 233, 234, 259, 261], "otim": [17, 112, 172], "out": [0, 3, 4, 91, 92, 94, 95, 96, 97, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 146, 147, 150, 151, 161, 162, 163, 165, 166, 167, 168, 169, 190, 191, 192, 193, 194, 195, 196, 197, 198, 203, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288], "out_channel": [36, 86, 89, 138, 139, 140, 142, 161, 162, 163, 183, 184, 193, 194, 195, 196, 197, 198, 200], "out_featur": [85, 86, 89, 112, 114, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 165, 166, 167, 172, 174, 176, 177, 178, 179, 180, 182, 185, 188, 193, 194, 195, 196, 197, 198], "outcom": [294, 295, 297], "outer": 248, "outlier": [117, 178], "output": [0, 1, 2, 8, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 105, 106, 107, 108, 109, 112, 114, 125, 126, 127, 136, 137, 138, 139, 140, 141, 142, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 219, 222, 223, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 243, 244, 246, 247, 257, 258, 259, 260, 261, 264, 266, 268, 271, 272, 273, 279, 280, 282, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298], "output_height": 104, "output_lay": [86, 89], "output_s": [86, 125, 126, 127, 190, 191, 192], "output_width": 104, "outsid": 0, "over": [0, 1, 2, 3, 9, 68, 78, 83, 86, 88, 98, 125, 126, 127, 141, 158, 161, 162, 163, 177, 180, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 203, 204, 205, 206, 207, 221, 225, 259, 260, 261, 268, 271, 273, 294, 295, 297], "overdetermin": 17, "overfit": [1, 21, 78, 106, 109, 166, 167, 168, 169, 203, 206, 211, 213], "overhead": 141, "overrid": [2, 3], "overridden": [83, 201], "overwrit": [85, 87], "own": [4, 85, 86, 87, 88, 100, 101, 102, 151, 200, 292], "p": [16, 17, 84, 87, 88, 105, 106, 107, 108, 109, 165, 166, 167, 168, 169, 193, 196, 197, 294, 295, 297, 300], "p_d": [195, 198], "p_h": [194, 195, 198], "p_w": [194, 195, 198], "packag": [2, 3, 4, 9, 80, 200, 202, 218, 224, 226, 290, 300], "pad": [36, 86, 89, 100, 101, 102, 104, 125, 126, 127, 128, 129, 130, 132, 133, 134, 138, 139, 140, 142, 161, 162, 163, 183, 184, 190, 191, 192, 193, 194, 195, 196, 197, 198, 278], "pad_after_dim1": 280, "pad_after_dim2": 280, "pad_before_dim1": 280, "pad_before_dim2": 280, "pad_width": 280, "padding_height": 104, "padding_width": 104, "pair": 112, "paper": 29, "parallel": [1, 3, 68, 80], "param": [83, 84, 87, 88, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213], "param1": 83, "param_dict": 87, "param_group": [201, 202], "param_groups_setup": 201, "param_list": 88, "param_s": 218, "paramet": [0, 2, 8, 37, 38, 39, 80, 83, 200, 201, 202, 219, 226, 300], "parameterdict": 90, "parameterlist": 90, "parent": 200, "part": [82, 83, 151, 200, 215, 217, 226, 239, 240, 243, 244, 245, 246, 247, 290, 300], "partial": [10, 11, 12, 14, 15, 16, 17, 19, 20, 91, 92, 94, 95, 96, 97, 98, 99, 112, 114, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288], "particip": [84, 290], "particular": [85, 87], "particularli": [8, 17, 52, 53, 54, 55, 56, 57, 86, 87, 88, 89, 98, 114, 138, 139, 140, 158, 174, 177, 180, 185, 186, 187, 188, 207, 215, 218, 289], "pass": [2, 8, 17, 21, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 81, 83, 84, 85, 86, 87, 88, 89, 136, 138, 139, 140, 141, 142, 152, 153, 154, 155, 156, 157, 159, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 188, 193, 194, 195, 196, 197, 198, 200, 219, 227, 260, 268, 271, 272, 273, 275, 277, 281, 283, 284, 288, 290, 300], "past": [203, 204, 206, 211], "patch": [104, 194], "path": [3, 5, 6], "pathwai": 80, "pattern": [80, 95, 141, 155, 161, 162, 163], "penal": [203, 211, 213], "penalti": [204, 205, 206, 207, 208, 209, 210], "penros": 17, "per": [1, 52, 53, 54, 55, 56, 57, 69, 70, 71, 125, 185, 186, 187, 188, 190], "perform": [3, 8, 9, 10, 17, 21, 32, 33, 34, 36, 37, 38, 39, 48, 64, 65, 66, 67, 68, 73, 78, 80, 83, 84, 88, 92, 100, 101, 102, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 141, 142, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 215, 217, 224, 226, 228, 229, 232, 235, 238, 257, 259, 261, 268, 272, 289, 291, 293, 298, 300], "permut": 272, "persist": [82, 221, 222, 223, 225, 241, 242], "perturb": [12, 19, 20, 300], "phi": [92, 153], "pi": [92, 153, 254, 264, 269], "pil": [290, 300], "pinv": 13, "pioneer": 80, "pipelin": [5, 6, 226, 289, 290, 292], "pixel": [5, 6, 136, 292, 294], "place": [144, 146, 147, 148, 149, 150, 151], "placehold": [83, 173], "plai": [219, 226], "plot": 279, "point": [4, 137, 215], "pool": [21, 36, 37, 38, 39, 40, 51, 58, 68, 73, 78, 80, 125, 126, 127, 128, 129, 130, 132, 133, 134, 141, 142, 162, 163, 190, 191, 192, 193, 194, 195, 196, 197, 198, 259, 261], "pool1": 89, "pool2": 89, "poorli": 14, "popul": 83, "popular": [4, 80], "portion": 300, "pose": 17, "posit": [1, 10, 15, 83, 89, 137, 152, 154, 155, 156, 193, 194, 195, 196, 197, 198, 212, 216, 237, 282, 286, 293], "possibl": [8, 300], "potenti": [17, 173, 211, 284], "power": [8, 15, 80, 141, 216, 217, 248, 289, 290, 300], "pp": 80, "practic": [17, 177, 180], "practition": 300, "pre": [41, 45, 46], "preactbottleneck": [41, 45, 46], "preced": [80, 84, 227], "preconfigur": [33, 34], "predefin": [4, 80, 86, 156], "predict": [176, 177, 179, 180], "prefix": [83, 218], "prepar": [3, 216, 280, 282, 286, 290, 300], "prepend": 83, "preprint": 80, "preprocess": [3, 4, 104, 137, 226, 289, 290, 300], "present": [176, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 194], "preserv": [105, 137, 165, 239, 240, 243, 244, 245, 246, 247, 260, 268, 273], "preset": 4, "prevent": [1, 85, 86, 87, 88, 89, 106, 109, 166, 167, 168, 169, 176, 177, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 217], "previou": [203, 212, 217], "previous": 206, "primari": [8, 219], "primarili": 89, "print": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 215, 216, 217, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 298], "priorit": 142, "probabilist": 226, "probabl": [30, 92, 98, 105, 106, 107, 108, 109, 115, 153, 158, 165, 166, 167, 168, 169, 176, 177, 180, 294, 295, 297, 300], "problem": [17, 18, 20, 80, 94, 152, 154, 210], "proceed": 80, "process": [2, 3, 4, 15, 18, 20, 21, 33, 40, 68, 78, 80, 88, 100, 101, 102, 123, 137, 138, 139, 140, 141, 142, 156, 159, 161, 163, 172, 182, 183, 184, 185, 186, 187, 188, 193, 195, 196, 198, 203, 219, 279, 290, 291, 292, 293, 298, 300], "produc": [21, 78, 81, 125, 126, 127, 141, 161, 162, 163, 190, 191, 192, 224, 226], "product": [8, 18, 20, 157, 172, 188, 200, 230, 231, 235, 236], "program": [215, 226], "progress": 205, "project": [18, 20], "projector": 17, "promin": [193, 195, 196, 197, 198], "promot": [89, 177, 180, 200], "propag": [11, 12, 14, 17, 18, 19, 20, 80, 83, 89, 112, 114, 136, 141, 194, 195, 211, 212, 230, 231, 232, 236, 259, 261, 279, 280, 283, 287], "properli": [0, 88, 98, 158, 200], "properti": [9, 11, 14, 15, 92, 96, 105, 153, 156, 165, 205, 210], "proport": [5, 6, 273], "proportion": 298, "provid": [0, 1, 2, 3, 4, 5, 6, 8, 9, 22, 28, 29, 30, 32, 36, 40, 73, 79, 80, 83, 85, 86, 87, 88, 92, 114, 126, 127, 137, 176, 177, 178, 180, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 211, 213, 215, 217, 219, 224, 226, 227, 232, 239, 245, 259, 261, 272, 274, 282, 284, 286, 300], "pseudo": [14, 17], "purpos": [221, 225, 239, 244, 246], "python": 219, "pytorch": 274, "q": [18, 80], "qr": 13, "quad": [17, 176, 177, 178, 179, 180, 196, 197, 198, 228, 229, 233, 234, 235, 238, 291], "quadrat": 178, "quotient": 229, "r": [18, 294, 295, 296, 297], "r_t": 210, "radam": 214, "rais": [0, 1, 2, 83, 200, 201, 237], "rand": [220, 226], "randint": [220, 226], "randn": [21, 23, 24, 25, 26, 27, 40, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 69, 70, 71, 72, 73, 78, 141, 142, 200, 220, 224, 226], "random": [1, 2, 3, 23, 24, 25, 26, 27, 40, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 69, 70, 71, 72, 141, 142, 293, 294, 295, 296, 297, 300], "random_integ": 226, "random_tensor": 226, "randomcrop": [299, 300], "randomgrayscal": [299, 300], "randomhorizontalflip": [299, 300], "randomli": [1, 105, 106, 107, 108, 109, 137, 165, 166, 167, 168, 169, 293, 294, 295, 296, 297, 300], "randomnoisedataset": [0, 1, 2], "randomrot": [299, 300], "randomverticalflip": 299, "rang": [0, 1, 9, 40, 48, 80, 88, 97, 99, 100, 101, 116, 120, 151, 157, 159, 203, 211, 213, 222, 250, 251, 253, 292, 296, 300], "rank": 17, "rasul": 5, "rate": [201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213], "rather": [5, 87, 88, 207, 283], "ratio": [58, 141, 142, 298], "ravel": 278, "raw": [98, 158, 177, 219], "re": [84, 217], "readabl": [85, 86, 87, 89, 200, 219], "readi": [3, 8, 64, 65, 66, 67, 72, 80], "real": [17, 20, 157], "rearrang": 104, "recalibr": [59, 61, 62, 64, 65, 66, 67, 80, 141], "receiv": [196, 197, 198, 280], "recent": 211, "recept": [68, 72, 80, 142], "reciproc": [17, 248, 258, 266], "recognit": [39, 80, 162], "rectangular": 243, "rectif": 210, "rectifi": [94, 95, 154, 155, 210], "recurr": [86, 188], "recurs": [81, 83], "red": 294, "reduc": [21, 40, 51, 68, 73, 78, 80, 141, 182, 183, 184, 185, 186, 187, 193, 194, 195, 196, 197, 198, 209, 212, 217, 219, 259, 260, 261, 268, 273, 294], "reduct": [20, 58, 115, 116, 117, 119, 120, 141, 142, 176, 177, 178, 179, 180, 259, 261], "reevalu": 201, "refer": [4, 8, 83, 226, 240, 243, 275], "reflect": 215, "regardless": [17, 281], "region": [102, 125, 126, 127, 136, 191, 192, 280, 291, 300], "regist": [49, 50, 52, 53, 54, 55, 56, 57, 82, 83, 84, 88, 200, 218], "register_buff": 82, "register_model": [22, 29, 30, 31, 33, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 69, 70, 71, 74, 75, 76, 77, 79], "register_paramet": 83, "registr": [83, 200], "registri": [52, 53, 54, 55, 56, 57, 218], "registry_path": 218, "regress": [4, 119, 178, 179], "regular": [17, 21, 30, 78, 109, 166, 167, 168, 169, 203, 204, 205, 208, 209, 210, 211, 213], "relat": [217, 243, 244], "relationship": 298, "relev": [136, 203, 211, 213], "reli": 217, "reliabl": [5, 6], "reliant": [166, 167, 168, 169], "relu": [8, 21, 58, 73, 78, 80, 81, 85, 86, 87, 89, 91, 93, 94, 111, 138, 139, 140, 141, 142, 146, 147, 150, 151, 152, 154, 160, 161, 162, 163, 171, 172, 173, 174], "relu1": 89, "relu2": 89, "relu3": 89, "remain": [5, 6, 82, 124, 165, 166, 167, 168, 169, 212], "rememb": 226, "remov": [218, 284], "rep": 286, "repeat": [278, 279, 286], "repetit": [282, 286], "replac": [5, 226, 294], "repres": [5, 14, 16, 20, 36, 83, 84, 89, 112, 114, 121, 123, 124, 161, 162, 163, 172, 174, 177, 180, 188, 201, 202, 203, 209, 210, 211, 212, 213, 219, 228, 229, 235, 238, 240, 260, 271, 272, 273, 279, 291, 293, 295, 296, 297, 298], "represent": [49, 50, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 68, 72, 80, 141, 194, 197, 201], "reproduc": [221, 222, 223, 224, 225, 226, 300], "requir": [2, 3, 4, 8, 52, 53, 54, 55, 56, 57, 68, 82, 85, 89, 91, 92, 94, 95, 96, 97, 99, 112, 114, 136, 141, 142, 151, 173, 177, 180, 200, 215, 217, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 298], "requires_grad": [82, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 104, 112, 114, 136, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 200, 221, 222, 223, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290], "rescal": [115, 116, 120, 176, 177, 180], "research": 200, "reset": [84, 224, 227], "reshap": [8, 58, 114, 162, 163, 216, 219, 278, 281], "residu": [31, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 59, 60, 61, 62, 63, 80], "residualblock": 40, "resili": 212, "resiz": [136, 289, 299, 300], "resnet": [32, 33, 34, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 59, 60, 61, 62, 63, 68, 69, 70, 71, 80, 141], "resnet_1001": 80, "resnet_101": 80, "resnet_152": 80, "resnet_18": 80, "resnet_200": 80, "resnet_269": 80, "resnet_34": 80, "resnet_50": 80, "resnet_arg": 68, "resnext": [35, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 72, 80], "resnext_101_32x16d": 80, "resnext_101_32x32d": 80, "resnext_101_32x4d": 80, "resnext_101_32x8d": 80, "resnext_101_64x4d": 80, "resnext_50_32x4d": 80, "resolut": [64, 65, 66, 67, 72], "resourc": 217, "respect": [10, 11, 12, 14, 15, 16, 17, 18, 20, 36, 73, 82, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 112, 114, 136, 142, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 253, 257, 258, 259, 260, 261, 264, 266, 268, 271, 272, 273, 279, 280, 282, 286, 294], "respons": [64, 65, 66, 67, 80, 85, 202], "restor": [141, 217], "restructur": 283, "result": [10, 14, 15, 17, 80, 83, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 112, 114, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 142, 158, 200, 201, 215, 217, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 274, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 293, 294, 300], "resum": 202, "retain": [84, 227, 239, 246, 259, 260, 261, 268, 273, 290], "retent": 290, "retriev": [0, 2, 85, 87, 88], "return": [0, 1, 2, 3, 5, 6, 8, 32, 36, 58, 82, 83, 85, 86, 87, 88, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 188, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 218, 219, 289, 300], "reus": [80, 290], "reusabl": [89, 200, 289], "revers": [8, 89, 272, 295, 297], "revert": 217, "revolution": 80, "rgb": [29, 30, 31, 33, 34], "rho": 204, "rho_": 210, "rho_t": 210, "right": [15, 16, 17, 19, 20, 92, 98, 153, 158, 176, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 196, 197, 198, 291], "risk": 219, "rmsprop": 214, "rob": 80, "robust": [137, 165, 166, 167, 168, 169, 178, 200, 204, 293, 294, 296, 300], "roland": 5, "role": [219, 226, 300], "root": [4, 5, 6, 205, 211, 266], "rotat": [111, 135, 296, 300], "rotated_imag": 137, "rout": [196, 197, 198], "routin": 8, "row": [11, 12, 14, 19, 114, 243, 279, 288], "rprop": 214, "rule": [14, 15, 216, 228, 229, 233, 234, 235, 237, 238], "run": [8, 82, 121, 123, 138, 139, 140, 182, 183, 184, 185, 186, 187, 204, 217, 224, 226], "running_mean": [82, 121, 123, 182, 183, 184, 185, 186, 187], "running_var": [121, 123, 182, 183, 184, 185, 186, 187], "runtim": [86, 89, 200], "s_": 212, "s_d": [195, 198], "s_h": [194, 195, 198], "s_w": [194, 195, 198], "sain": 80, "same": [11, 12, 14, 15, 19, 98, 105, 106, 107, 108, 109, 121, 123, 124, 126, 127, 137, 138, 139, 140, 142, 161, 162, 163, 165, 166, 167, 168, 169, 173, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 212, 224, 226, 232, 242, 245, 247, 257, 259, 260, 261, 275, 277, 281, 283, 284, 285, 288, 292], "sampl": [0, 1, 2, 3, 5, 6, 8, 29, 30, 31, 33, 34, 36, 37, 38, 39, 64, 65, 66, 67, 72, 125, 126, 127, 146, 147, 148, 149, 150, 151, 165, 166, 167, 168, 169, 172, 174, 177, 180, 188, 190, 191, 192, 223, 226, 291, 293, 295, 296, 297, 298], "satisfi": [10, 12, 19], "satur": [152, 300], "save": [2, 82, 84, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218], "scalabl": [3, 52, 53, 54, 55, 56, 57, 80, 200], "scalar": [11, 16, 115, 116, 117, 119, 120, 219], "scale": [12, 17, 23, 33, 37, 38, 39, 41, 42, 43, 46, 59, 60, 68, 69, 70, 71, 80, 91, 96, 98, 121, 123, 124, 141, 142, 150, 151, 152, 154, 156, 157, 158, 159, 165, 166, 167, 168, 169, 177, 182, 183, 184, 185, 186, 187, 188, 203, 205, 206, 207, 219, 226, 273, 298], "scenario": [87, 88, 188, 207, 208, 290, 294], "schedul": 203, "scientif": 216, "score": [40, 51, 68, 98, 177], "scratch": 8, "script": 226, "se": [59, 60, 61, 62, 63, 64, 65, 66, 67, 80], "se_resnet_101": 80, "se_resnet_152": 80, "se_resnet_18": 80, "se_resnet_34": 80, "se_resnet_50": 80, "se_resnext_101_32x4d": 80, "se_resnext_101_32x8d": 80, "se_resnext_101_64x4d": 80, "se_resnext_50_32x4d": 80, "seamless": [0, 1, 3, 4, 200, 226], "seamlessli": [3, 4, 9, 84, 86, 89, 200, 219, 300], "second": [12, 86, 87, 112, 141, 172, 206, 207, 208, 209, 210, 216, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 277, 279, 297], "section": 232, "see": [8, 232], "seed": [220, 221, 222, 223, 225, 226, 300], "seen": 204, "select": [68, 69, 70, 71, 72, 80, 136, 141, 142, 196, 198, 268], "selectivekernel": 143, "self": [0, 1, 2, 3, 8, 21, 28, 32, 36, 58, 73, 78, 81, 82, 83, 84, 85, 86, 87, 88, 96, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 218, 279, 289, 290], "selu": [93, 105, 111, 160, 165, 171], "selunetwork": 156, "semodul": 143, "senet": [35, 59, 60, 61, 62, 63, 64, 65, 66, 67, 80], "sensit": [117, 178, 182, 183, 184], "sentiment": 4, "separ": [0, 100, 101, 102, 185, 186, 187], "sequenc": [15, 40, 51, 68, 85, 87, 100, 239, 275, 277, 280, 282, 285, 286, 288, 289], "sequenti": [21, 32, 36, 58, 73, 78, 81, 85, 86, 90, 100, 138, 139, 140, 173, 289, 300], "seri": [28, 37, 38, 68, 100, 138, 161, 193, 196], "serial": [82, 83, 202], "serv": [3, 5, 23, 32, 58, 73, 83, 85, 86, 87, 88, 89, 200, 212, 290], "set": [3, 4, 5, 6, 49, 50, 64, 65, 66, 67, 72, 81, 84, 88, 100, 101, 102, 154, 155, 156, 161, 162, 163, 165, 168, 169, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 201, 206, 207, 211, 221, 222, 223, 224, 225, 226, 227, 239, 241, 242, 246, 247, 253, 259, 261, 274, 290, 294, 300], "setup": [4, 8, 52, 53, 54, 55, 56, 57], "sever": [17, 161, 162, 163, 193, 194, 195, 196, 197, 198, 217, 289, 300], "sgd": [8, 203, 210, 214], "sgn": 16, "shape": [3, 4, 5, 6, 8, 11, 12, 14, 15, 17, 21, 23, 24, 25, 26, 27, 32, 36, 40, 52, 53, 54, 55, 56, 57, 58, 64, 65, 66, 67, 69, 70, 71, 72, 73, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 216, 219, 221, 222, 223, 225, 226, 227, 230, 241, 242, 243, 244, 245, 246, 247, 253, 258, 259, 260, 261, 264, 266, 268, 272, 273, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 288, 291, 292, 293, 294, 295, 296, 297, 298, 300], "shapelik": 222, "share": 80, "shen": 141, "shift": [121, 123, 124, 182, 183, 184, 185, 186, 187, 188], "shorthand": 232, "should": [36, 82, 217, 221, 222, 223, 225, 241, 242, 250, 251, 271, 280, 289], "show": [215, 218], "showcas": 8, "shown": 224, "shrink": 204, "shuffl": [1, 2, 3], "side": [19, 86, 89, 100, 101, 102, 128, 129, 130, 132, 133, 134, 138, 139, 140, 161, 162, 163, 193, 194, 195, 196, 197, 198, 217], "sigma": [17, 141, 146, 148, 150, 157, 182, 183, 184, 185, 186, 187, 188, 272], "sigma_c": 292, "sigma_i": 17, "sigmoid": [93, 111, 141, 146, 147, 150, 151, 160, 171, 176], "sigmoidnetwork": 157, "sign": [15, 178, 212, 248], "signal": [138, 161, 162, 163, 182, 185, 193, 194, 195, 196, 197, 198], "signific": 217, "significantli": [51, 80, 141, 289], "sim": [165, 166, 167, 168, 169], "similar": [8, 146, 147, 232, 258, 274, 280], "similarli": [20, 271], "simonyan": 80, "simpl": [3, 4, 8, 81, 89, 100, 101, 102, 112, 114, 128, 129, 130, 132, 133, 134, 153, 155, 156, 157, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 230, 231, 236, 289], "simplebinaryclassificationmodel": 176, "simpleclassificationmodel": [177, 180], "simplegelumodel": 153, "simpleleakyrelumodel": 154, "simplemodel": [8, 81, 174, 218], "simpleregressionmodel": 179, "simplerelumodel": 155, "simpleselumodel": 156, "simplesigmoidmodel": 157, "simpletanhmodel": 159, "simpli": [215, 271, 272, 283], "simplic": [80, 155], "simplifi": [4, 37, 89, 138, 139, 140], "simul": [81, 300], "simultan": 137, "sin": [248, 254], "sinc": [15, 18, 85, 86, 87, 88, 100, 101, 102, 151, 215, 217, 223, 279, 300], "sine": [251, 264, 265], "singl": [0, 4, 15, 18, 20, 40, 98, 138, 139, 140, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 177, 188, 194, 195, 196, 197, 198, 201, 219, 225, 241, 275, 284, 292, 294, 300], "singleton": 188, "singular": [11, 14, 15, 17, 19, 20], "sinh": [248, 255, 270], "size": [0, 1, 2, 3, 20, 36, 37, 38, 39, 40, 68, 78, 80, 81, 84, 86, 100, 101, 102, 104, 107, 108, 109, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 161, 162, 163, 172, 174, 176, 177, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 218, 222, 225, 226, 227, 259, 260, 261, 268, 273, 275, 277, 284, 287, 288, 291, 293, 298, 300], "sk": [68, 69, 70, 71, 72, 80, 142], "sk_resnet_18": 80, "sk_resnet_34": 80, "sk_resnet_50": 80, "sk_resnext_50_32x4d": 80, "skblock": 68, "skip": [80, 217], "sknet": [35, 69, 70, 71, 72, 80], "slice": [112, 271], "slide": [104, 193, 195, 196, 198], "slight": 141, "slightli": 300, "slope": [94, 152, 154], "slow": [3, 210], "small": [17, 37, 38, 39, 80, 94, 115, 116, 121, 123, 124, 154, 156, 176, 177, 178, 182, 183, 184, 185, 186, 187, 188, 194, 197, 204, 205, 206, 207, 208, 209, 210, 211, 212], "smaller": [78, 80, 86, 89, 200, 205, 206, 234, 291, 293, 298], "smallest": 261, "smooth": [30, 92, 152, 153, 203, 211, 300], "smoother": 203, "so": [85, 86, 87, 88, 137, 200, 210, 241, 242, 289], "softmax": [93, 111, 142, 160, 171, 177], "softmaxmodel": 158, "solut": [17, 19], "solv": [9, 10, 13, 17, 18, 20], "solver": 9, "some": [91, 106, 137, 165, 166, 167, 182, 183, 184, 185, 186, 187, 205, 206, 207, 217, 219], "sometim": 216, "sophist": [86, 89], "sourc": 226, "space": [12, 18, 20, 100, 101, 102, 104, 125, 126, 127, 138, 139, 140, 161, 162, 163, 190, 191, 192, 239, 300], "span": 4, "spars": [205, 206], "spatial": [21, 40, 51, 68, 73, 78, 80, 139, 141, 162, 163, 182, 183, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 279], "spatial_dim": 141, "spatio": 163, "special": [0, 1, 8, 17, 82, 83, 84, 165, 226], "specif": [4, 8, 24, 25, 26, 27, 32, 49, 50, 85, 86, 87, 88, 89, 142, 151, 165, 166, 167, 168, 169, 185, 186, 187, 200, 201, 215, 226, 241, 259, 261, 282, 286], "specifi": [0, 1, 2, 3, 4, 5, 6, 8, 16, 22, 23, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 70, 71, 73, 74, 75, 76, 77, 79, 81, 86, 98, 104, 109, 115, 116, 117, 119, 120, 124, 125, 126, 127, 136, 137, 141, 158, 161, 162, 163, 176, 177, 178, 179, 180, 188, 190, 191, 192, 194, 195, 196, 197, 198, 201, 219, 221, 222, 223, 224, 225, 237, 239, 240, 241, 242, 243, 244, 246, 247, 253, 259, 260, 261, 268, 272, 273, 274, 275, 277, 280, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 298, 300], "speech": 185, "speed": [203, 204, 205, 206, 207, 208, 209, 210, 211, 213], "split": [4, 275, 277, 288], "springer": 80, "sqrt": [92, 146, 147, 150, 151, 153, 182, 183, 184, 185, 186, 187, 188, 204, 205, 206, 207, 209, 210, 211, 248, 250, 251], "squar": [1, 3, 10, 11, 12, 14, 15, 17, 18, 19, 20, 117, 119, 178, 179, 204, 205, 206, 211, 248, 266], "squaredataset": [0, 1, 2, 3], "squeez": [58, 61, 64, 65, 66, 67, 80, 141, 278], "stabil": [14, 17, 80, 115, 116, 121, 123, 124, 138, 139, 140, 176, 177, 182, 183, 184, 185, 186, 187, 188, 203, 204, 205, 206, 207, 208, 209, 210, 211, 292], "stabl": [146, 147, 150, 151, 165, 177, 203, 207, 208, 211, 212, 213], "stack": [89, 142, 277, 278, 288, 300], "stage": [40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 68, 69, 70, 71], "stage1": 58, "stage2": 58, "stage3": 58, "stage4": 58, "standard": [40, 49, 50, 92, 94, 146, 148, 150, 152, 153, 154, 165, 212, 223, 226, 232, 289, 292, 300], "start": [1, 3, 203, 205, 212, 239, 291, 293], "state": [80, 82, 83, 84, 86, 89, 201, 215, 217, 224], "state_dict": [83, 84, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213], "static": 89, "statist": [17, 105, 121, 123], "std": [5, 6, 148, 289, 292, 300], "stem": [32, 40, 51, 68], "stem_typ": 40, "stem_width": 40, "step": [84, 104, 142, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 239, 289, 290], "step_siz": 212, "still": 204, "stochast": [8, 203, 213], "stop": 239, "storag": [85, 87, 227], "store": [2, 4, 5, 6, 40, 51, 68, 82, 83, 84, 85, 86, 87, 88, 141, 190, 191, 192, 217, 227, 291, 292, 293, 294, 295, 296, 297, 298], "str": [5, 6, 40, 73, 83, 85, 87, 89, 115, 116, 117, 119, 120, 136, 201, 218, 279], "straightforward": [213, 215, 228], "strategi": 202, "streamlin": [2, 3], "strict": [83, 201], "stride": [36, 37, 38, 39, 86, 89, 100, 101, 102, 104, 125, 126, 127, 128, 129, 130, 132, 133, 134, 138, 139, 140, 142, 161, 162, 163, 190, 191, 192, 193, 194, 195, 196, 197, 198], "stride_height": 104, "stride_width": 104, "string": [83, 85, 87, 89, 161, 162, 163, 201], "structur": [0, 8, 18, 82, 83, 86, 200, 201, 218, 219, 243, 290], "style": [32, 123, 185, 186, 279], "sub": [85, 86, 87, 88, 89, 200, 248, 291, 293], "sub_tensor": 227, "subclass": [1, 2, 3, 8, 83, 84, 85, 200, 201], "sublay": 81, "submodul": [81, 83, 200], "subsequ": [86, 89, 151, 226], "subset": [166, 167], "subtract": [8, 238, 292], "suffer": 205, "suit": [24, 25, 26, 27, 30, 68, 146, 147, 150, 151], "suitabl": [32, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 60, 61, 63, 80, 178, 205, 206, 221], "sum": [16, 85, 86, 87, 88, 89, 98, 115, 116, 117, 119, 120, 142, 158, 176, 177, 178, 179, 180, 205, 228, 231, 236, 248, 271, 273, 275, 277, 279, 282, 286, 288], "sum_": [15, 98, 158, 176, 177, 179, 180, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 230, 231, 260, 268, 271, 273, 279, 282], "sum_i": [16, 236], "sum_j": 236, "sum_k": 232, "summar": [49, 50, 193, 194, 195], "summari": [49, 50, 64, 65, 66, 67, 72], "summat": 15, "sun": 141, "super": [8, 81, 82, 83, 84, 85, 86, 87, 88, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 172, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 188, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 218], "support": [1, 3, 4, 8, 9, 15, 16, 17, 18, 20, 40, 85, 86, 87, 88, 89, 136, 137, 200, 202, 209, 226, 227, 228, 229, 232, 233, 234, 235, 237, 238, 240, 243, 253, 258, 260, 264, 266, 268, 271, 272, 273, 275, 279, 283, 290, 300], "suppos": 300, "sure": [200, 300], "svd": [13, 17], "symmetr": [10, 125, 126, 127, 150, 151, 159], "syntax": [1, 232], "system": [9, 10, 17, 18, 19, 80, 215, 279], "systemat": 300, "szegedi": [29, 80], "t": [17, 80, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 227, 232, 274, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300], "t0": 203, "t1": 274, "t2": 274, "tabular": 4, "tailor": [4, 200, 300], "take": [18, 193, 194, 195, 196, 197, 198, 217, 289], "taken": 271, "tan": 248, "tangent": [99, 159, 252, 269, 270], "tanh": [36, 86, 89, 92, 93, 111, 146, 147, 150, 151, 153, 160, 171, 248], "tanhnetwork": 159, "target": [5, 6, 89, 115, 116, 117, 119, 120, 125, 126, 127, 136, 176, 177, 178, 179, 180, 190, 191, 192, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 291, 293, 298], "target_tensor": [176, 177, 178, 179, 180], "target_transform": [5, 6], "task": [4, 8, 9, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 80, 97, 98, 101, 112, 115, 116, 119, 120, 141, 142, 157, 158, 161, 162, 163, 176, 177, 178, 179, 180, 185, 186, 187, 193, 195, 196, 198, 206, 216, 226, 243, 300], "techniqu": [10, 14, 78, 121, 165, 166, 167, 168, 169, 185, 186, 187, 202, 298, 300], "tempor": [161, 163, 195, 198], "temporarili": 217, "tensor": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 52, 53, 54, 55, 56, 57, 58, 69, 70, 71, 73, 78, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 215, 217, 219, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300], "term": [17, 112, 138, 139, 140, 203, 207, 209, 210, 211, 213], "test": [4, 5, 6], "test_backward": 81, "test_siz": [5, 6], "text": [4, 11, 15, 16, 40, 51, 68, 69, 70, 71, 85, 91, 94, 95, 96, 98, 100, 101, 102, 125, 126, 127, 128, 129, 130, 132, 133, 134, 138, 139, 140, 141, 142, 146, 147, 150, 151, 152, 154, 155, 156, 158, 161, 162, 163, 165, 166, 167, 168, 169, 176, 177, 178, 179, 180, 193, 194, 195, 196, 197, 198, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 222, 228, 229, 231, 233, 234, 235, 237, 238, 249, 253, 259, 260, 261, 263, 268, 273, 275, 277, 280, 281, 282, 283, 284, 286, 287, 288, 291, 292, 293, 295, 296, 297], "th": [112, 176, 177, 179, 180, 185, 186, 187, 233, 234, 237], "than": [0, 1, 5, 87, 88, 91, 94, 117, 152, 154, 178, 201, 207, 253, 271, 280, 285, 291, 293, 298], "thei": [0, 8, 20, 80, 82, 86, 88, 89, 219, 279, 283, 291, 293, 300], "them": [3, 83, 88, 104, 203, 216, 275, 285, 289, 292, 300], "therebi": [165, 194, 195, 197, 198], "theta": [203, 204, 296], "theta_": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213], "theta_t": [210, 211], "thi": [0, 1, 2, 3, 5, 6, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 71, 72, 80, 81, 82, 84, 86, 87, 88, 89, 95, 97, 98, 99, 100, 101, 102, 104, 112, 114, 125, 136, 137, 141, 142, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 190, 193, 194, 195, 196, 197, 198, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 222, 223, 224, 226, 227, 231, 232, 236, 239, 241, 244, 245, 246, 247, 253, 257, 258, 259, 260, 261, 264, 266, 268, 271, 272, 273, 274, 280, 282, 283, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300], "thing": 217, "those": [8, 37, 38, 39, 88, 151], "three": [20, 39, 102, 127, 130, 134, 138, 139, 140, 163, 169, 184, 187, 192, 195, 198], "threshold": [17, 117, 178], "through": [0, 3, 4, 8, 12, 17, 18, 20, 21, 28, 32, 36, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 69, 70, 71, 78, 85, 86, 89, 112, 114, 136, 141, 142, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 182, 183, 184, 185, 188, 193, 194, 195, 196, 197, 198, 223, 230, 231, 236, 279, 281, 283, 284, 287, 300], "throughout": [96, 290], "tile": 278, "time": [0, 3, 15, 37, 38, 39, 100, 138, 154, 156, 161, 193, 194, 195, 196, 197, 198, 203, 204, 205, 206, 207, 211, 213, 217, 282, 286], "to_tensor": [5, 6], "togeth": [89, 289, 300], "too": 212, "tool": [3, 8, 200, 216, 226, 289, 300], "top": [10, 11, 12, 18, 20, 112, 114, 136, 161, 162, 163, 172, 174, 291, 293], "torch": [73, 274], "total": [0, 1, 2, 5, 6, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 79, 81, 84, 227, 283], "totensor": [289, 300], "trace": [9, 248], "track": [8, 138, 139, 140, 182, 183, 184, 185, 186, 187, 200, 215, 217, 221, 222, 223, 225, 239, 240, 241, 242, 243, 244, 245, 246, 247, 274, 290], "track_running_stat": [138, 139, 140, 182, 183, 184, 185, 186, 187], "tradit": [5, 204, 205, 208, 209, 210], "trail": 124, "train": [1, 2, 3, 4, 5, 6, 8, 28, 29, 30, 64, 65, 66, 67, 72, 80, 81, 82, 83, 86, 88, 89, 98, 105, 106, 107, 108, 109, 121, 123, 137, 153, 154, 156, 157, 158, 159, 165, 166, 167, 168, 169, 182, 183, 184, 185, 186, 187, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 289, 292, 293, 294, 295, 296, 297, 300], "trainabl": [81, 182, 183, 184, 185, 186, 187, 200], "transact": 141, "transfer": [123, 185, 186], "transform": [2, 4, 5, 6, 8, 12, 80, 87, 112, 114, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 216, 279], "transform_pipelin": [289, 300], "transformed_imag": [289, 300], "transit": [23, 178], "translat": [194, 197], "transpos": [8, 10, 248], "treat": [0, 82, 188, 200], "triangular": [10, 18], "true": [1, 2, 3, 4, 5, 6, 20, 28, 29, 30, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 104, 105, 106, 107, 108, 109, 112, 114, 121, 123, 136, 138, 139, 140, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 200, 201, 206, 207, 211, 215, 221, 222, 223, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290], "truncat": 81, "truncate_from": 81, "try": 0, "tune": 300, "tupl": [2, 3, 5, 6, 12, 18, 20, 23, 40, 81, 83, 84, 100, 101, 102, 104, 124, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 161, 162, 163, 173, 188, 191, 192, 193, 194, 195, 196, 197, 198, 206, 207, 208, 209, 210, 212, 219, 221, 222, 223, 225, 227, 241, 244, 246, 259, 260, 261, 268, 273, 275, 277, 279, 280, 283, 284, 285, 287, 288, 291, 292, 293, 298], "twice": 280, "two": [8, 11, 12, 14, 15, 17, 18, 20, 37, 38, 39, 69, 73, 100, 101, 102, 112, 129, 133, 141, 142, 162, 168, 172, 183, 186, 194, 197, 206, 207, 208, 209, 210, 212, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 271, 279], "type": [36, 40, 58, 68, 82, 83, 84, 112, 172, 227, 239, 240, 241, 242, 243, 244, 245, 246, 247, 274, 279, 290], "typeerror": [0, 1, 2, 83, 201], "typic": [9, 40, 51, 68, 82, 98, 105, 137, 141, 156, 158, 180, 182, 183, 184, 185, 186, 187, 202, 203, 211, 213, 217, 219, 287, 290, 292, 296, 298, 300], "u": [17, 20, 147, 149, 151], "u_": 208, "ultra": 46, "unchang": [82, 109, 152, 154, 155, 156, 165, 166, 167, 168, 169, 173, 281, 284], "undefin": 237, "under": [52, 53, 54, 55, 56, 57, 200], "underbrac": 15, "underdetermin": 17, "undergo": 300, "underli": [0, 8, 29, 30, 31, 33, 34, 274, 277, 281, 283, 288], "understand": [8, 78, 80, 81, 89, 300], "unexpect": [83, 86, 89, 226], "unfold": [103, 111], "unifi": 0, "uniform": [145, 147, 151, 161, 162, 163, 172, 174, 220, 221, 222, 226, 294, 295, 296, 297], "uniformli": [221, 225], "uniniti": [241, 242], "unintend": 217, "union": 73, "uniqu": [10, 17, 19, 85, 87], "unit": [21, 36, 78, 91, 92, 94, 95, 96, 146, 147, 150, 151, 152, 153, 154, 155, 156, 165], "unless": [41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 61, 62, 63, 227], "unlik": [82, 85, 86, 87, 88, 94, 152, 154, 165, 188, 204, 205, 207, 208, 209, 210, 212], "unnecessari": 217, "unpad": 280, "unseen": 300, "unsqueez": 278, "unstabl": 14, "up": [201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 296, 298], "updat": [4, 82, 88, 89, 165, 166, 167, 168, 169, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217], "upon": [30, 80, 85, 86, 87, 88], "upper": [18, 149, 212, 225], "us": [0, 2, 3, 4, 5, 6, 8, 9, 10, 12, 14, 15, 17, 18, 20, 23, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 112, 114, 119, 121, 123, 126, 127, 136, 137, 138, 139, 140, 141, 142, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 215, 216, 217, 218, 221, 222, 223, 225, 226, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 257, 259, 260, 261, 268, 273, 279, 280, 282, 284, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300], "usag": [3, 9, 23, 86, 89, 201, 202, 291, 292, 293, 294, 295, 296, 297, 298], "use_aux": [28, 29, 30], "user": [1, 2, 3, 4, 8, 85, 86, 87, 88, 200, 205, 289, 290, 300], "usual": 177, "util": [3, 8, 9, 69, 70, 71, 87, 88, 200, 226], "v": [12, 17, 20, 206, 207, 209, 210, 240], "v1": [28, 29, 32, 33, 34, 80], "v2": [32, 34, 80], "v3": [28, 30, 31, 80], "v4": [28, 31, 80], "v_": [203, 206, 207, 209, 210, 211, 213], "v_stack": 288, "v_t": [210, 211], "val": 144, "valid": [138, 139, 140, 142, 161, 162, 163, 272], "valu": [8, 11, 15, 16, 17, 20, 49, 50, 81, 83, 85, 87, 89, 91, 94, 97, 98, 99, 100, 101, 102, 104, 115, 116, 117, 119, 120, 121, 123, 124, 125, 136, 137, 138, 139, 140, 141, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 157, 159, 165, 166, 167, 168, 169, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 193, 194, 195, 196, 197, 198, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 219, 221, 222, 223, 224, 225, 226, 239, 240, 241, 242, 243, 249, 250, 251, 253, 256, 257, 258, 259, 261, 263, 264, 266, 267, 275, 280, 281, 283, 287, 292, 294, 295, 297], "valuabl": 226, "valueerror": [1, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 201], "van": 80, "vanish": [80, 152, 156, 182, 183, 184], "var": 248, "vari": [68, 86, 88, 125, 136, 190, 296], "variabl": [83, 89, 125, 126, 127, 173, 190, 191, 192, 200, 215, 217, 221, 241, 293, 296], "varianc": [96, 105, 121, 123, 138, 139, 140, 146, 147, 150, 151, 156, 165, 182, 183, 184, 185, 186, 187, 188, 206, 207, 208, 209, 210, 223, 273, 296, 300], "variant": [23, 24, 25, 26, 27, 49, 50, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 206, 207, 208], "variat": [185, 186, 187, 293, 300], "varieti": [4, 32, 226, 300], "variou": [5, 23, 28, 33, 34, 36, 80, 155, 202, 226, 259, 261, 280, 290], "vdot": 236, "vector": [12, 17, 18, 19, 20, 112, 114, 172, 174, 230, 231, 232, 236], "veloc": [203, 211, 213], "veri": [17, 43, 45, 80, 204], "versa": 212, "versatil": [226, 279], "version": [20, 28, 32, 36, 37, 38, 211, 236, 294], "vertic": [285, 288, 297], "vgg": 73, "vggnet": [35, 74, 75, 76, 77, 80], "vggnet_11": 80, "vggnet_13": 80, "vggnet_16": 80, "vggnet_19": 80, "via": [3, 4, 68], "vice": 212, "video": [102, 109, 140, 163, 187, 195, 198], "view": [32, 36, 86, 194, 195, 196, 197, 198, 283], "vision": [40, 80, 101, 162, 172, 300], "visual": [78, 80], "vol": 80, "vollgraf": 5, "volumetr": [102, 109, 140, 163, 187, 195, 198], "vstack": 278, "w": [40, 52, 53, 54, 55, 56, 57, 69, 70, 71, 101, 102, 104, 108, 109, 112, 114, 126, 127, 129, 130, 133, 134, 136, 137, 139, 140, 141, 161, 162, 163, 172, 174, 183, 184, 186, 187, 191, 192, 195, 198, 291, 293], "w_": [101, 102, 126, 127, 129, 130, 133, 134, 136, 162, 163, 191, 192, 194, 195, 197, 198], "w_out": [101, 102, 129, 130, 133, 134], "wa": [29, 165, 166, 167, 168, 169, 217], "wai": [1, 22, 79, 215, 217, 283], "wang": 80, "want": [0, 8, 289, 291], "warn": [85, 87], "we": [3, 8, 216, 279], "weight": [41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 61, 62, 63, 80, 100, 101, 102, 112, 114, 115, 116, 120, 121, 123, 124, 136, 141, 142, 146, 147, 150, 151, 161, 162, 163, 165, 166, 167, 168, 169, 172, 174, 176, 177, 180, 182, 183, 184, 185, 186, 187, 188, 200, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 221, 226], "weight1": 87, "weight2": 87, "weight_decai": [203, 204, 205, 206, 207, 208, 209, 210, 211, 213], "weinberg": 80, "well": [24, 25, 26, 27, 30, 68, 146, 147], "were": 89, "what": 217, "when": [0, 1, 3, 8, 15, 83, 86, 88, 89, 91, 94, 100, 101, 102, 152, 173, 182, 183, 184, 185, 186, 187, 201, 204, 212, 215, 217, 218, 219, 226, 237, 289, 291], "where": [3, 4, 5, 6, 11, 12, 14, 15, 16, 17, 18, 20, 80, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 141, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 219, 226, 228, 229, 233, 234, 235, 237, 238, 241, 242, 253, 257, 258, 259, 260, 261, 264, 266, 268, 271, 272, 273, 275, 280, 282, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297], "whether": [1, 11, 28, 29, 30, 83, 84, 146, 147, 211, 215, 221, 222, 223, 225, 227, 241, 242, 259, 260, 261, 268, 273], "which": [0, 5, 8, 11, 12, 14, 15, 16, 17, 18, 20, 31, 34, 64, 65, 66, 67, 68, 72, 74, 75, 76, 77, 80, 83, 85, 87, 89, 94, 98, 117, 137, 142, 152, 153, 154, 158, 159, 165, 178, 180, 182, 183, 184, 185, 186, 187, 188, 206, 207, 209, 211, 215, 217, 219, 221, 222, 225, 250, 251, 252, 253, 254, 255, 258, 259, 260, 261, 262, 264, 265, 266, 268, 269, 270, 271, 273, 275, 282, 283, 285, 287, 290, 291, 293, 294, 295, 296, 297, 298, 300], "while": [8, 34, 51, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 72, 80, 86, 89, 105, 153, 155, 200, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 217, 283, 285, 294, 300], "who": [8, 85, 86, 87, 88], "whose": [20, 242, 245, 247, 249, 253, 257, 263], "wide": [4, 6, 9, 17, 40, 48, 49, 50, 80, 95, 155, 161, 162, 177], "wide_resnet_101": 80, "wide_resnet_50": 80, "wider": [49, 50, 100, 101], "wideresnet": 80, "width": [49, 50, 51, 52, 53, 54, 55, 56, 57, 68, 101, 102, 104, 108, 109, 126, 127, 129, 130, 133, 134, 136, 137, 142, 162, 163, 183, 184, 186, 187, 191, 192, 194, 195, 197, 198, 291, 293, 298], "window": [128, 129, 130, 132, 133, 134, 193, 194, 195, 196, 197, 198, 204, 259, 261], "wise": [62, 64, 65, 66, 67, 80, 91, 92, 94, 95, 96, 97, 98, 99, 138, 139, 140, 141, 158, 165, 166, 167, 168, 169, 200, 216, 228, 229, 232, 233, 234, 235, 237, 238, 249, 250, 251, 252, 253, 254, 255, 256, 258, 262, 263, 264, 265, 266, 267, 269, 270, 271, 277, 288], "within": [2, 80, 81, 82, 85, 86, 87, 88, 89, 99, 136, 137, 151, 153, 155, 156, 157, 159, 161, 162, 163, 165, 166, 167, 173, 176, 177, 178, 179, 180, 182, 183, 184, 185, 188, 193, 194, 195, 196, 197, 198, 202, 217, 239, 253, 296, 300], "without": [8, 51, 85, 86, 87, 112, 114, 161, 162, 163, 172, 174, 215, 218, 259, 281, 283, 287], "won": 217, "work": [1, 2, 3, 8, 10, 216, 219], "workflow": [226, 300], "workload": 8, "wrap": [3, 200, 217, 274], "wrapper": 200, "x": [8, 9, 19, 32, 36, 58, 73, 80, 81, 82, 83, 85, 86, 87, 88, 89, 98, 112, 114, 137, 142, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 200, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 221, 222, 223, 225, 241, 242, 257, 279, 291, 292, 293, 294, 295, 296, 297, 298], "x1": 172, "x2": 172, "x_": [177, 180, 279], "x_c": [177, 180], "x_i": 176, "x_k": 177, "xavier": [146, 147, 150, 151], "xavier_norm": 145, "xavier_uniform": 145, "xiao": 5, "xie": 80, "xy": 279, "x\u2081": 172, "x\u2082": 172, "y": [85, 86, 87, 88, 89, 137, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 221, 222, 223, 225, 241, 242, 279, 294], "y_": [177, 180, 279], "y_c": [177, 180], "y_i": 176, "yann": [6, 80], "yet": [8, 216], "yield": [0, 1, 83, 217], "you": [0, 81, 86, 88, 89, 200, 202, 215, 217, 226, 241, 242, 243, 247, 272, 274, 289, 291, 300], "your": [200, 202, 215, 217, 226, 300], "z": [80, 242, 246, 247], "zalandoresearch": 5, "zeiler": [78, 80], "zero": [15, 17, 18, 30, 81, 91, 94, 100, 101, 102, 105, 106, 107, 108, 109, 128, 129, 130, 132, 133, 134, 144, 146, 147, 148, 149, 150, 151, 152, 154, 155, 156, 161, 162, 163, 165, 166, 167, 168, 169, 188, 193, 194, 195, 196, 197, 198, 200, 201, 204, 205, 206, 207, 208, 209, 210, 211, 241, 242, 243, 247, 248, 253, 263, 280], "zero_grad": [84, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 227], "zeros_lik": [242, 248], "zfnet": [35, 80], "zhang": 80, "zisserman": 80, "\u03c3\u1d62": 17}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "FashionMNIST", "MNIST", "Image Datasets", "Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "alexnet", "DenseNet", "densenet_121", "densenet_169", "densenet_201", "densenet_264", "Inception", "inception_v1", "inception_v3", "inception_v4", "InceptionResNet", "inception_resnet_v1", "inception_resnet_v2", "ConvNets", "LeNet", "lenet_1", "lenet_4", "lenet_5", "ResNet", "resnet_1001", "resnet_101", "resnet_152", "resnet_18", "resnet_200", "resnet_269", "resnet_34", "resnet_50", "wide_resnet_101", "wide_resnet_50", "ResNeXt", "resnext_101_32x16d", "resnext_101_32x32d", "resnext_101_32x4d", "resnext_101_32x8d", "resnext_101_64x4d", "resnext_50_32x4d", "SENet", "se_resnet_101", "se_resnet_152", "se_resnet_18", "se_resnet_34", "se_resnet_50", "se_resnext_101_32x4d", "se_resnext_101_32x8d", "se_resnext_101_64x4d", "se_resnext_50_32x4d", "SKNet", "sk_resnet_18", "sk_resnet_34", "sk_resnet_50", "sk_resnext_50_32x4d", "VGGNet", "vggnet_11", "vggnet_13", "vggnet_16", "vggnet_19", "ZFNet", "zfnet", "lucid.models", "models.summarize", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "nn.SEModule", "nn.SelectiveKernel", "Fused Layers", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.LeakyReLU", "nn.ReLU", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Tanh", "Activation Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "lucid.nn", "optim.Optimizer", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.types", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.meshgrid", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.unsqueeze", "lucid.vstack", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": 216, "1d": 216, "2": 216, "2d": 216, "3": 216, "It": [215, 217], "ab": 249, "activ": [93, 111, 160, 171], "ad": 216, "adadelta": 204, "adagrad": 205, "adam": 206, "adamax": 208, "adamw": 207, "adaptive_avg_pool1d": 125, "adaptive_avg_pool2d": 126, "adaptive_avg_pool3d": 127, "adaptiveavgpool1d": 190, "adaptiveavgpool2d": 191, "adaptiveavgpool3d": 192, "add": 228, "addit": 17, "admonit": 219, "advanc": [104, 300], "alexnet": [21, 22], "algebra": 13, "algorithm": [203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213], "alias": 219, "align": 216, "alpha_dropout": 105, "alphadropout": 165, "also": 202, "anoth": 274, "arang": 239, "arcco": 250, "architectur": [21, 37, 38, 39, 49, 50, 78], "arcsin": 251, "arctan": 252, "asgd": 203, "attent": 142, "attribut": [5, 6, 21, 32, 36, 40, 51, 58, 68, 73, 78, 82, 84, 85, 86, 87, 88, 89, 138, 139, 140, 141, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 227, 291, 292, 293, 294, 295, 296, 297, 298], "avg_pool1d": 128, "avg_pool2d": 129, "avg_pool3d": 130, "avgpool1d": 193, "avgpool2d": 194, "avgpool3d": 195, "axi": 216, "backpropag": 227, "backward": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 112, 114, 136, 141, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288], "batch_norm": 121, "batchnorm": 143, "batchnorm1d": 182, "batchnorm2d": 183, "batchnorm3d": 184, "bceloss": 176, "behavior": [125, 126, 127, 190, 191, 192], "benefit": 217, "bilinear": [112, 172], "binari": 248, "binary_cross_entropi": 115, "broadcast": 216, "buffer": 82, "calcul": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 40, 51, 58, 68, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 104, 112, 114, 125, 126, 127, 136, 138, 139, 140, 141, 142, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298], "captur": 218, "case": 219, "centercrop": 291, "choleski": 10, "class": [0, 1, 2, 5, 6, 21, 23, 28, 32, 36, 40, 51, 58, 68, 73, 78, 82, 83, 84, 85, 86, 87, 88, 89, 138, 139, 140, 141, 142, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 227, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298], "clip": 253, "co": 254, "combin": 0, "compon": [3, 8, 200], "compos": 289, "concatdataset": [0, 1], "concaten": 275, "conclus": [3, 8, 200, 215, 216, 217, 226, 290, 300], "constant": 144, "contain": 90, "conv": 143, "conv1d": [100, 161], "conv2d": [101, 162], "conv3d": [102, 163], "convbnrelu1d": 138, "convbnrelu2d": 139, "convbnrelu3d": 140, "convnet": [35, 80], "convolut": [103, 111, 164, 171], "core": 8, "cosh": 255, "creat": [84, 227, 274], "cross_entropi": 116, "crossentropyloss": 177, "cube": 256, "custom": [1, 2, 3, 83, 201, 202, 300], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 7], "defin": [2, 83, 201, 202], "definit": 219, "densenet": 23, "densenet_121": 24, "densenet_169": 25, "densenet_201": 26, "densenet_264": 27, "descript": [52, 53, 54, 55, 56, 57, 69, 70, 71, 218], "det": 11, "detail": [17, 49, 50], "diag": 240, "dilat": 104, "div": 229, "dot": 230, "dropout": [106, 110, 111, 166, 170, 171], "dropout1d": [107, 167], "dropout2d": [108, 168], "dropout3d": [109, 169], "eig": 12, "elu": [91, 152], "empti": 241, "empty_lik": 242, "exampl": [0, 1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300], "excit": 143, "exp": 257, "ey": 243, "fashionmnist": 5, "featur": [4, 8, 9, 64, 65, 66, 67, 72, 202, 226, 300], "flatten": 276, "forward": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 40, 51, 58, 68, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 104, 112, 114, 125, 126, 127, 136, 138, 139, 140, 141, 142, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298], "from": 274, "function": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 79, 81, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 144, 146, 147, 148, 149, 150, 151, 215, 217, 218, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288], "fuse": 143, "futur": 4, "gelu": [92, 153], "gener": [220, 248], "get": 202, "grad_en": 215, "gradient": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 112, 114, 136, 141, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 193, 194, 195, 196, 197, 198, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288], "guidelin": 219, "how": [215, 217], "hstack": 277, "huber_loss": 117, "huberloss": 178, "ident": 173, "imag": [7, 299], "incept": 28, "inception_resnet_v1": 33, "inception_resnet_v2": 34, "inception_v1": 29, "inception_v3": 30, "inception_v4": 31, "inceptionresnet": 32, "index": 227, "init": [144, 146, 147, 148, 149, 150, 151], "initi": 145, "inner": 231, "input": 274, "inspect": [202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213], "instance_norm": 123, "instancenorm1d": 185, "instancenorm2d": 186, "instancenorm3d": 187, "integr": [3, 200, 226, 300], "interpol": 136, "inv": 14, "iter": 227, "kaiming_norm": 146, "kaiming_uniform": 147, "kei": [3, 4, 8, 64, 65, 66, 67, 72, 200, 202, 226, 300], "kernel": 143, "layer": [143, 160, 164, 170, 171, 175, 181, 189, 199], "layer_norm": 124, "layernorm": 188, "leaky_relu": 94, "leakyrelu": 154, "learn": 226, "lenet": 36, "lenet_1": 37, "lenet_4": 38, "lenet_5": 39, "limit": 8, "linalg": [9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20], "linear": [13, 111, 113, 114, 171, 174, 175], "list": 274, "load": 1, "log": 258, "loss": [111, 118, 171, 181], "lucid": [3, 4, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 80, 111, 200, 202, 215, 216, 217, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 300], "matmul": 232, "matrix": 232, "matrix_pow": 15, "max": 259, "max_pool1d": 132, "max_pool2d": 133, "max_pool3d": 134, "maximum": 233, "maxpool1d": 196, "maxpool2d": 197, "maxpool3d": 198, "mean": 260, "mechan": 142, "meshgrid": 279, "metadata": 218, "method": [0, 1, 2, 5, 6, 32, 36, 73, 83, 84, 201, 227], "min": 261, "minimum": 234, "mnist": 6, "model": [80, 81, 200], "modul": [83, 171], "moduledict": 85, "modulelist": 86, "more": 226, "mse_loss": 119, "mseloss": 179, "mul": 235, "multipl": [0, 232], "nadam": 209, "new": 216, "newaxi": 216, "nll_loss": 120, "nllloss": 180, "nn": [82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 111, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200], "no_grad": 217, "norm": 16, "normal": [111, 122, 148, 171, 189, 292], "note": 8, "number": 220, "ones": 244, "ones_lik": 245, "oper": [13, 232, 248], "optim": [201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214], "organ": 200, "outer": 236, "overview": [3, 4, 8, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 61, 62, 63, 200, 202, 226, 300], "pad": 280, "paramet": [1, 5, 6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 217, 218, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298], "parameterdict": 87, "parameterlist": 88, "perform": 227, "pinv": 17, "pipelin": [3, 300], "pitfal": [215, 217], "pool": [111, 131, 171, 199], "potenti": [215, 217], "power": 237, "properti": [84, 227], "qr": 18, "radam": 210, "rais": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20], "rand": 221, "randint": 222, "randn": 223, "random": [220, 221, 222, 223, 224, 225, 226], "randomcrop": 293, "randomgrayscal": 294, "randomhorizontalflip": 295, "randomrot": 296, "randomverticalflip": 297, "ravel": 281, "reciproc": 262, "refer": [5, 6, 141, 202], "register_model": 218, "relu": [95, 143, 155], "repeat": 282, "reshap": 283, "resiz": 298, "resnet": 40, "resnet_1001": 41, "resnet_101": 42, "resnet_152": 43, "resnet_18": 44, "resnet_200": 45, "resnet_269": 46, "resnet_34": 47, "resnet_50": 48, "resnext": 51, "resnext_101_32x16d": 52, "resnext_101_32x32d": 53, "resnext_101_32x4d": 54, "resnext_101_32x8d": 55, "resnext_101_64x4d": 56, "resnext_50_32x4d": 57, "return": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 79, 81, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 142, 144, 146, 147, 148, 149, 150, 151, 215, 217, 221, 222, 223, 224, 225, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288], "rmsprop": 211, "rotat": 137, "rprop": 212, "rule": 232, "se_resnet_101": 59, "se_resnet_152": 60, "se_resnet_18": 61, "se_resnet_34": 62, "se_resnet_50": 63, "se_resnext_101_32x4d": 64, "se_resnext_101_32x8d": 65, "se_resnext_101_64x4d": 66, "se_resnext_50_32x4d": 67, "see": 202, "seed": 224, "select": 143, "selectivekernel": 142, "selu": [96, 156], "semodul": 141, "senet": 58, "sequenti": 89, "sgd": 213, "sigmoid": [97, 157], "sign": 263, "signatur": [0, 1, 2, 5, 6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 114, 115, 116, 117, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 165, 166, 167, 168, 169, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 217, 218, 221, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298], "sin": 264, "sinh": 265, "sk_resnet_18": 69, "sk_resnet_34": 70, "sk_resnet_50": 71, "sk_resnext_50_32x4d": 72, "sknet": 68, "slice": 227, "softmax": [98, 158], "solv": 19, "sqrt": 266, "squar": 267, "squeez": [143, 284], "stack": 285, "start": 202, "state": [202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213], "sub": 238, "sum": 268, "summar": 81, "summari": 81, "svd": 20, "tabl": 81, "tan": 269, "tanh": [99, 159, 270], "tensor": [216, 227, 248, 274, 278], "through": 227, "tile": 286, "totensor": 290, "trace": 271, "track": 227, "transform": [289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300], "transpos": 272, "type": 219, "unari": 248, "unfold": 104, "uniform": [149, 225], "unsqueez": 287, "us": [1, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 219, 274], "usag": [4, 8, 29, 30, 31, 33, 34, 36, 37, 38, 39, 64, 65, 66, 67, 72, 82, 137, 215, 216, 217, 219, 279, 289, 290, 300], "util": [111, 135], "utilit": 278, "var": 273, "vggnet": 73, "vggnet_11": 74, "vggnet_13": 75, "vggnet_16": 76, "vggnet_19": 77, "vstack": 288, "weight": 145, "why": 219, "wide_resnet_101": 49, "wide_resnet_50": 50, "work": [4, 215, 217], "xavier_norm": 150, "xavier_uniform": 151, "zero": 246, "zeros_lik": 247, "zfnet": [78, 79]}})