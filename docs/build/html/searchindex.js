Search.setIndex({"alltitles": {"1-D ascending": [[539, null]], "@ Operator": [[483, "operator"]], "About Dagger (^\\dagger) Variants": [[57, "about-dagger-dagger-variants"], [59, "about-dagger-dagger-variants"], [61, "about-dagger-dagger-variants"]], "Accessing metadata & categories": [[586, "accessing-metadata-categories"]], "Activation Functions": [[274, null], [299, null]], "Activation Layers": [[368, null], [390, null]], "Additional Details": [[25, "additional-details"]], "Additional Options": [[369, "additional-options"]], "Advanced Example with Dilation": [[290, "advanced-example-with-dilation"]], "Advanced Features": [[582, "advanced-features"]], "Advantages": [[10, "advantages"], [13, "advantages"], [14, "advantages"], [15, "advantages"], [388, "advantages"]], "AlexNet": [[29, null], [108, "alexnet"], [585, "alexnet"]], "Algorithm": [[449, "algorithm"], [450, "algorithm"], [451, "algorithm"], [452, "algorithm"], [453, "algorithm"], [454, "algorithm"], [455, "algorithm"], [456, "algorithm"], [457, "algorithm"], [458, "algorithm"], [459, "algorithm"]], "Along axis, keeping dims": [[538, null]], "Architectural Differences": [[250, "architectural-differences"]], "Architectural Improvements": [[257, "architectural-improvements"]], "Architecture": [[29, "architecture"], [40, "architecture"], [55, "architecture"], [92, "architecture"], [110, "architecture"], [111, "architecture"], [112, "architecture"], [113, "architecture"], [213, "architecture"], [231, "architecture"], [235, "architecture"], [236, "architecture"]], "Architecture Details": [[164, "architecture-details"], [165, "architecture-details"]], "Attention Functions": [[281, null], [299, null]], "Attention Layers": [[371, null], [390, null]], "Attention Mechanism": [[282, "attention-mechanism"], [345, "attention-mechanism"]], "Attributes": [[5, "attributes"], [6, "attributes"], [7, "attributes"], [8, "attributes"], [29, "attributes"], [105, "attributes"], [109, "attributes"], [155, "attributes"], [166, "attributes"], [173, "attributes"], [183, "attributes"], [200, "attributes"], [211, "attributes"], [213, "attributes"], [251, "attributes"], [254, "attributes"], [257, "attributes"], [263, "attributes"], [265, "attributes"], [266, "attributes"], [267, "attributes"], [268, "attributes"], [269, "attributes"], [270, "attributes"], [338, "attributes"], [339, "attributes"], [340, "attributes"], [341, "attributes"], [342, "attributes"], [343, "attributes"], [344, "attributes"], [355, "attributes"], [356, "attributes"], [359, "attributes"], [361, "attributes"], [363, "attributes"], [364, "attributes"], [365, "attributes"], [367, "attributes"], [372, "attributes"], [373, "attributes"], [374, "attributes"], [375, "attributes"], [376, "attributes"], [377, "attributes"], [380, "attributes"], [382, "attributes"], [383, "attributes"], [384, "attributes"], [385, "attributes"], [386, "attributes"], [391, "attributes"], [393, "attributes"], [394, "attributes"], [396, "attributes"], [397, "attributes"], [398, "attributes"], [399, "attributes"], [400, "attributes"], [401, "attributes"], [403, "attributes"], [404, "attributes"], [405, "attributes"], [407, "attributes"], [408, "attributes"], [409, "attributes"], [410, "attributes"], [411, "attributes"], [413, "attributes"], [414, "attributes"], [415, "attributes"], [416, "attributes"], [417, "attributes"], [418, "attributes"], [419, "attributes"], [420, "attributes"], [421, "attributes"], [422, "attributes"], [423, "attributes"], [424, "attributes"], [461, "attributes"], [478, "attributes"], [573, "attributes"], [574, "attributes"], [575, "attributes"], [576, "attributes"], [577, "attributes"], [578, "attributes"], [579, "attributes"], [580, "attributes"]], "Automatic Differentiation (Autodiff)": [[16, "automatic-differentiation-autodiff"]], "Axis Swapping Rules": [[530, "axis-swapping-rules"]], "Backbone Network": [[222, "backbone-network"]], "Backpropagation": [[407, null]], "Backward Gradient Calculation": [[18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [20, "backward-gradient-calculation"], [22, "backward-gradient-calculation"], [23, "backward-gradient-calculation"], [24, "backward-gradient-calculation"], [25, "backward-gradient-calculation"], [26, "backward-gradient-calculation"], [27, "backward-gradient-calculation"], [28, "backward-gradient-calculation"], [266, "backward-gradient-calculation"], [267, "backward-gradient-calculation"], [268, "backward-gradient-calculation"], [269, "backward-gradient-calculation"], [270, "backward-gradient-calculation"], [272, "backward-gradient-calculation"], [273, "backward-gradient-calculation"], [275, "backward-gradient-calculation"], [276, "backward-gradient-calculation"], [277, "backward-gradient-calculation"], [278, "backward-gradient-calculation"], [279, "backward-gradient-calculation"], [280, "backward-gradient-calculation"], [292, "backward-gradient-calculation"], [300, "backward-gradient-calculation"], [302, "backward-gradient-calculation"], [330, "backward-gradient-calculation"], [335, "backward-gradient-calculation"], [344, "backward-gradient-calculation"], [354, "backward-gradient-calculation"], [355, "backward-gradient-calculation"], [356, "backward-gradient-calculation"], [357, "backward-gradient-calculation"], [358, "backward-gradient-calculation"], [359, "backward-gradient-calculation"], [360, "backward-gradient-calculation"], [361, "backward-gradient-calculation"], [363, "backward-gradient-calculation"], [364, "backward-gradient-calculation"], [365, "backward-gradient-calculation"], [366, "backward-gradient-calculation"], [367, "backward-gradient-calculation"], [372, "backward-gradient-calculation"], [373, "backward-gradient-calculation"], [374, "backward-gradient-calculation"], [375, "backward-gradient-calculation"], [376, "backward-gradient-calculation"], [377, "backward-gradient-calculation"], [380, "backward-gradient-calculation"], [383, "backward-gradient-calculation"], [384, "backward-gradient-calculation"], [385, "backward-gradient-calculation"], [386, "backward-gradient-calculation"], [391, "backward-gradient-calculation"], [392, "backward-gradient-calculation"], [393, "backward-gradient-calculation"], [394, "backward-gradient-calculation"], [396, "backward-gradient-calculation"], [397, "backward-gradient-calculation"], [398, "backward-gradient-calculation"], [399, "backward-gradient-calculation"], [400, "backward-gradient-calculation"], [401, "backward-gradient-calculation"], [403, "backward-gradient-calculation"], [404, "backward-gradient-calculation"], [405, "backward-gradient-calculation"], [408, "backward-gradient-calculation"], [409, "backward-gradient-calculation"], [410, "backward-gradient-calculation"], [411, "backward-gradient-calculation"], [419, "backward-gradient-calculation"], [420, "backward-gradient-calculation"], [421, "backward-gradient-calculation"], [422, "backward-gradient-calculation"], [423, "backward-gradient-calculation"], [424, "backward-gradient-calculation"], [479, "backward-gradient-calculation"], [480, "backward-gradient-calculation"], [481, "backward-gradient-calculation"], [482, "backward-gradient-calculation"], [483, "backward-gradient-calculation"], [484, "backward-gradient-calculation"], [485, "backward-gradient-calculation"], [486, "backward-gradient-calculation"], [487, "backward-gradient-calculation"], [488, "backward-gradient-calculation"], [489, "backward-gradient-calculation"], [490, "backward-gradient-calculation"], [504, "backward-gradient-calculation"], [505, "backward-gradient-calculation"], [506, "backward-gradient-calculation"], [507, "backward-gradient-calculation"], [509, "backward-gradient-calculation"], [510, "backward-gradient-calculation"], [511, "backward-gradient-calculation"], [512, "backward-gradient-calculation"], [513, "backward-gradient-calculation"], [514, "backward-gradient-calculation"], [515, "backward-gradient-calculation"], [517, "backward-gradient-calculation"], [518, "backward-gradient-calculation"], [519, "backward-gradient-calculation"], [520, "backward-gradient-calculation"], [521, "backward-gradient-calculation"], [522, "backward-gradient-calculation"], [524, "backward-gradient-calculation"], [525, "backward-gradient-calculation"], [526, "backward-gradient-calculation"], [527, "backward-gradient-calculation"], [528, "backward-gradient-calculation"], [529, "backward-gradient-calculation"], [530, "backward-gradient-calculation"], [531, "backward-gradient-calculation"], [532, "backward-gradient-calculation"], [533, "backward-gradient-calculation"], [534, "backward-gradient-calculation"], [535, "backward-gradient-calculation"], [540, "backward-gradient-calculation"], [542, "backward-gradient-calculation"], [548, "backward-gradient-calculation"], [551, "backward-gradient-calculation"], [553, "backward-gradient-calculation"], [554, "backward-gradient-calculation"], [555, "backward-gradient-calculation"], [556, "backward-gradient-calculation"], [560, "backward-gradient-calculation"], [561, "backward-gradient-calculation"], [562, "backward-gradient-calculation"], [564, "backward-gradient-calculation"], [565, "backward-gradient-calculation"], [566, "backward-gradient-calculation"], [568, "backward-gradient-calculation"], [569, "backward-gradient-calculation"]], "Backward Propagation": [[251, "backward-propagation"], [254, "backward-propagation"], [257, "backward-propagation"]], "Base Class": [[447, null]], "Basic Installation": [[16, "basic-installation"]], "Behavior": [[317, "behavior"], [318, "behavior"], [319, "behavior"], [320, "behavior"], [321, "behavior"], [322, "behavior"], [413, "behavior"], [414, "behavior"], [415, "behavior"], [416, "behavior"], [417, "behavior"], [418, "behavior"], [467, "behavior"], [468, "behavior"]], "Benefits": [[462, "benefits"], [465, "benefits"]], "Binary Functions": [[503, null]], "Bottleneck Configuration": [[125, "bottleneck-configuration"], [126, "bottleneck-configuration"]], "Broadcasting Rules": [[540, "broadcasting-rules"]], "CIFAR10": [[5, null]], "CIFAR100": [[6, null]], "CSPNet": [[65, null], [108, "cspnet"]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [6, "class-signature"], [7, "class-signature"], [8, "class-signature"], [29, "class-signature"], [31, "class-signature"], [40, "class-signature"], [41, "class-signature"], [55, "class-signature"], [65, "class-signature"], [69, "class-signature"], [73, "class-signature"], [78, "class-signature"], [79, "class-signature"], [92, "class-signature"], [96, "class-signature"], [100, "class-signature"], [105, "class-signature"], [109, "class-signature"], [113, "class-signature"], [119, "class-signature"], [120, "class-signature"], [121, "class-signature"], [122, "class-signature"], [146, "class-signature"], [155, "class-signature"], [166, "class-signature"], [173, "class-signature"], [183, "class-signature"], [188, "class-signature"], [189, "class-signature"], [200, "class-signature"], [205, "class-signature"], [211, "class-signature"], [213, "class-signature"], [215, "class-signature"], [216, "class-signature"], [219, "class-signature"], [222, "class-signature"], [231, "class-signature"], [235, "class-signature"], [236, "class-signature"], [248, "class-signature"], [251, "class-signature"], [254, "class-signature"], [257, "class-signature"], [260, "class-signature"], [263, "class-signature"], [264, "class-signature"], [265, "class-signature"], [266, "class-signature"], [267, "class-signature"], [268, "class-signature"], [269, "class-signature"], [270, "class-signature"], [338, "class-signature"], [339, "class-signature"], [340, "class-signature"], [341, "class-signature"], [342, "class-signature"], [343, "class-signature"], [344, "class-signature"], [345, "class-signature"], [355, "class-signature"], [356, "class-signature"], [357, "class-signature"], [358, "class-signature"], [359, "class-signature"], [360, "class-signature"], [361, "class-signature"], [362, "class-signature"], [363, "class-signature"], [364, "class-signature"], [365, "class-signature"], [366, "class-signature"], [367, "class-signature"], [369, "class-signature"], [370, "class-signature"], [372, "class-signature"], [373, "class-signature"], [374, "class-signature"], [375, "class-signature"], [376, "class-signature"], [377, "class-signature"], [378, "class-signature"], [380, "class-signature"], [381, "class-signature"], [382, "class-signature"], [383, "class-signature"], [384, "class-signature"], [385, "class-signature"], [386, "class-signature"], [388, "class-signature"], [391, "class-signature"], [392, "class-signature"], [393, "class-signature"], [394, "class-signature"], [396, "class-signature"], [397, "class-signature"], [398, "class-signature"], [399, "class-signature"], [400, "class-signature"], [401, "class-signature"], [403, "class-signature"], [404, "class-signature"], [405, "class-signature"], [406, "class-signature"], [407, "class-signature"], [408, "class-signature"], [409, "class-signature"], [410, "class-signature"], [411, "class-signature"], [413, "class-signature"], [414, "class-signature"], [415, "class-signature"], [416, "class-signature"], [417, "class-signature"], [418, "class-signature"], [419, "class-signature"], [420, "class-signature"], [421, "class-signature"], [422, "class-signature"], [423, "class-signature"], [424, "class-signature"], [426, "class-signature"], [428, "class-signature"], [429, "class-signature"], [430, "class-signature"], [431, "class-signature"], [432, "class-signature"], [434, "class-signature"], [437, "class-signature"], [439, "class-signature"], [440, "class-signature"], [441, "class-signature"], [442, "class-signature"], [443, "class-signature"], [444, "class-signature"], [445, "class-signature"], [446, "class-signature"], [449, "class-signature"], [450, "class-signature"], [451, "class-signature"], [452, "class-signature"], [453, "class-signature"], [454, "class-signature"], [455, "class-signature"], [456, "class-signature"], [457, "class-signature"], [458, "class-signature"], [459, "class-signature"], [461, "class-signature"], [478, "class-signature"], [571, "class-signature"], [572, "class-signature"], [573, "class-signature"], [574, "class-signature"], [575, "class-signature"], [576, "class-signature"], [577, "class-signature"], [578, "class-signature"], [579, "class-signature"], [580, "class-signature"]], "Classes": [[244, null]], "CoAtNet": [[31, null], [108, "coatnet"]], "Combining multiple datasets": [[0, null]], "Common Pitfalls": [[586, "common-pitfalls"]], "Computer Vision": [[218, "computer-vision"]], "Conclusion": [[3, "conclusion"], [10, "conclusion"], [13, "conclusion"], [14, "conclusion"], [15, "conclusion"], [16, "conclusion"], [388, "conclusion"], [436, "conclusion"], [438, "conclusion"], [463, "conclusion"], [464, "conclusion"], [477, "conclusion"], [572, "conclusion"], [582, "conclusion"]], "Configuration": [[32, "configuration"], [33, "configuration"], [34, "configuration"], [35, "configuration"], [36, "configuration"], [37, "configuration"], [38, "configuration"], [39, "configuration"]], "Configurations": [[78, "configurations"]], "Constructor": [[237, "constructor"], [238, "constructor"], [239, "constructor"], [240, "constructor"]], "Containers": [[271, null]], "Conv-BatchNorm-ReLU": [[346, null]], "ConvNeXt": [[40, null], [108, "convnext"]], "ConvNeXt_V2": [[41, null]], "Convolution Functions": [[289, null], [299, null]], "Convolution Layers": [[379, null], [390, null]], "Convolutional Transformer (CvT)": [[108, "convolutional-transformer-cvt"]], "Create a Tensor from a list": [[536, null]], "Creating a Parameter": [[265, null]], "Creating a tensor on GPU with gradient tracking": [[478, null]], "CrossViT": [[55, null], [108, "crossvit"]], "Currently Available": [[584, "currently-available"]], "Custom / user-provided weights": [[586, "custom-user-provided-weights"]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[582, "custom-pipelines"]], "CvT": [[69, null]], "DDPM": [[216, null], [217, "ddpm"]], "DETR": [[219, null], [234, "detr"]], "Darknet-19 Integration": [[251, "darknet-19-integration"]], "Defining a Custom Optimizer": [[448, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[264, null]], "Defining a custom optimizer": [[437, null]], "DenseNet": [[73, null], [108, "densenet"], [585, "densenet"]], "Depthwise Separable Convolution": [[346, null]], "Descending, heapsort kernel": [[539, null]], "Description": [[167, "description"], [168, "description"], [169, "description"], [170, "description"], [171, "description"], [172, "description"], [184, "description"], [185, "description"], [186, "description"], [466, "description"]], "Details": [[127, "details"], [128, "details"], [129, "details"], [130, "details"], [131, "details"], [219, "details"]], "Device & caching": [[586, "device-caching"]], "Device-based dtype inference": [[478, null]], "Differences from nn.Transformer": [[260, "differences-from-nn-transformer"]], "Dropout Functions": [[298, null], [299, null]], "Dropout Layers": [[387, null], [390, null]], "Educational by Design": [[16, "educational-by-design"]], "EfficientDet": [[222, null], [234, "efficientdet"]], "EfficientFormer": [[92, null], [108, "efficientformer"]], "EfficientNet": [[78, null], [108, "efficientnet"]], "EfficientNet Configurations": [[78, "id1"]], "EfficientNet_V2": [[79, null]], "Einops Functions": [[12, null]], "Einops Layers": [[389, null], [390, null]], "Embedding Process": [[333, "embedding-process"]], "Enable GPU (Metal / MLX Acceleration)": [[16, "enable-gpu-metal-mlx-acceleration"]], "Example": [[3, null], [3, null], [3, null], [10, null], [10, null], [10, null], [18, "example"], [19, "example"], [20, "example"], [22, "example"], [23, "example"], [24, "example"], [25, "example"], [26, "example"], [27, "example"], [28, "example"], [101, "example"], [102, "example"], [103, "example"], [104, "example"], [114, "example"], [115, "example"], [116, "example"], [117, "example"], [118, "example"], [123, "example"], [124, "example"], [237, "example"], [238, "example"], [239, "example"], [240, "example"], [241, "example"], [242, "example"], [243, "example"], [245, "example"], [246, "example"], [290, "example"], [436, null], [436, null], [436, null], [463, "example"], [469, "example"], [471, "example"], [472, "example"], [473, "example"], [474, "example"], [475, "example"], [476, "example"], [477, null], [477, null], [477, null], [491, "example"], [492, "example"], [493, "example"], [494, "example"], [495, "example"], [499, "example"], [500, "example"], [501, "example"], [502, "example"], [504, "example"], [505, "example"], [506, "example"], [507, "example"], [509, "example"], [510, "example"], [511, "example"], [512, "example"], [513, "example"], [514, "example"], [517, "example"], [518, "example"], [520, "example"], [522, "example"], [524, "example"], [525, "example"], [526, "example"], [527, "example"], [528, "example"], [529, "example"], [531, "example"], [532, "example"], [533, "example"], [534, "example"], [535, "example"], [541, "example"], [542, "example"], [545, "example"], [546, "example"], [547, "example"], [548, "example"], [554, "example"], [556, "example"], [558, "example"], [560, "example"], [561, "example"], [563, "example"], [564, "example"], [565, "example"], [568, "example"], [569, "example"], [570, "example"], [583, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[464, null]], "Example 2: Adding a new axis to a 2D tensor": [[464, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[464, null]], "Example Usage": [[97, "example-usage"], [98, "example-usage"], [99, "example-usage"], [106, "example-usage"], [107, "example-usage"], [109, "example-usage"], [110, "example-usage"], [111, "example-usage"], [112, "example-usage"], [179, "example-usage"], [180, "example-usage"], [181, "example-usage"], [182, "example-usage"], [187, "example-usage"], [220, "example-usage"], [221, "example-usage"], [223, "example-usage"], [224, "example-usage"], [225, "example-usage"], [226, "example-usage"], [227, "example-usage"], [228, "example-usage"], [229, "example-usage"], [230, "example-usage"], [251, "example-usage"], [252, "example-usage"], [253, "example-usage"], [254, "example-usage"], [255, "example-usage"], [256, "example-usage"], [257, "example-usage"], [258, "example-usage"], [337, "example-usage"], [571, "example-usage"], [572, "example-usage"], [582, "example-usage"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [6, "examples"], [7, "examples"], [8, "examples"], [11, "examples"], [13, "examples"], [14, "examples"], [15, "examples"], [17, "examples"], [29, "examples"], [30, "examples"], [31, "examples"], [32, "examples"], [33, "examples"], [34, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [47, "examples"], [48, "examples"], [49, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [53, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [60, "examples"], [61, "examples"], [62, "examples"], [63, "examples"], [64, "examples"], [65, "examples"], [66, "examples"], [67, "examples"], [68, "examples"], [69, "examples"], [70, "examples"], [71, "examples"], [72, "examples"], [73, "examples"], [74, "examples"], [75, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [80, "examples"], [81, "examples"], [82, "examples"], [83, "examples"], [84, "examples"], [85, "examples"], [86, "examples"], [87, "examples"], [88, "examples"], [89, "examples"], [90, "examples"], [91, "examples"], [92, "examples"], [93, "examples"], [94, "examples"], [95, "examples"], [100, "examples"], [113, "examples"], [121, "examples"], [125, "examples"], [126, "examples"], [132, "examples"], [134, "examples"], [135, "examples"], [136, "examples"], [137, "examples"], [138, "examples"], [139, "examples"], [140, "examples"], [141, "examples"], [142, "examples"], [143, "examples"], [144, "examples"], [145, "examples"], [146, "examples"], [147, "examples"], [148, "examples"], [149, "examples"], [150, "examples"], [151, "examples"], [152, "examples"], [153, "examples"], [154, "examples"], [155, "examples"], [156, "examples"], [157, "examples"], [158, "examples"], [159, "examples"], [160, "examples"], [161, "examples"], [162, "examples"], [163, "examples"], [164, "examples"], [165, "examples"], [167, "examples"], [168, "examples"], [169, "examples"], [170, "examples"], [171, "examples"], [172, "examples"], [174, "examples"], [175, "examples"], [176, "examples"], [177, "examples"], [178, "examples"], [184, "examples"], [185, "examples"], [186, "examples"], [188, "examples"], [189, "examples"], [190, "examples"], [191, "examples"], [192, "examples"], [193, "examples"], [194, "examples"], [195, "examples"], [196, "examples"], [197, "examples"], [198, "examples"], [199, "examples"], [200, "examples"], [201, "examples"], [202, "examples"], [203, "examples"], [204, "examples"], [205, "examples"], [206, "examples"], [207, "examples"], [208, "examples"], [209, "examples"], [210, "examples"], [211, "examples"], [212, "examples"], [213, "examples"], [214, "examples"], [215, "examples"], [216, "examples"], [219, "examples"], [231, "examples"], [232, "examples"], [233, "examples"], [235, "examples"], [236, "examples"], [248, "examples"], [249, "examples"], [250, "examples"], [260, "examples"], [261, "examples"], [262, "examples"], [263, "examples"], [264, "examples"], [265, "examples"], [266, "examples"], [267, "examples"], [268, "examples"], [269, "examples"], [270, "examples"], [272, "examples"], [273, "examples"], [275, "examples"], [276, "examples"], [277, "examples"], [278, "examples"], [279, "examples"], [280, "examples"], [282, "examples"], [283, "examples"], [284, "examples"], [285, "examples"], [286, "examples"], [287, "examples"], [288, "examples"], [291, "examples"], [292, "examples"], [293, "examples"], [294, "examples"], [295, "examples"], [296, "examples"], [297, "examples"], [300, "examples"], [302, "examples"], [303, "examples"], [304, "examples"], [305, "examples"], [306, "examples"], [308, "examples"], [309, "examples"], [310, "examples"], [311, "examples"], [312, "examples"], [314, "examples"], [315, "examples"], [316, "examples"], [317, "examples"], [318, "examples"], [319, "examples"], [320, "examples"], [321, "examples"], [322, "examples"], [323, "examples"], [324, "examples"], [325, "examples"], [327, "examples"], [328, "examples"], [329, "examples"], [330, "examples"], [331, "examples"], [333, "examples"], [335, "examples"], [336, "examples"], [338, "examples"], [339, "examples"], [340, "examples"], [341, "examples"], [342, "examples"], [343, "examples"], [344, "examples"], [345, "examples"], [347, "examples"], [349, "examples"], [350, "examples"], [351, "examples"], [352, "examples"], [353, "examples"], [354, "examples"], [355, "examples"], [356, "examples"], [357, "examples"], [358, "examples"], [359, "examples"], [360, "examples"], [361, "examples"], [362, "examples"], [363, "examples"], [364, "examples"], [365, "examples"], [366, "examples"], [367, "examples"], [370, "examples"], [372, "examples"], [373, "examples"], [374, "examples"], [375, "examples"], [376, "examples"], [377, "examples"], [378, "examples"], [380, "examples"], [381, "examples"], [382, "examples"], [383, "examples"], [384, "examples"], [385, "examples"], [386, "examples"], [388, "examples"], [391, "examples"], [392, "examples"], [393, "examples"], [394, "examples"], [396, "examples"], [397, "examples"], [398, "examples"], [399, "examples"], [400, "examples"], [401, "examples"], [403, "examples"], [404, "examples"], [405, "examples"], [406, "examples"], [407, "examples"], [408, "examples"], [409, "examples"], [410, "examples"], [411, "examples"], [413, "examples"], [414, "examples"], [415, "examples"], [416, "examples"], [417, "examples"], [418, "examples"], [419, "examples"], [420, "examples"], [421, "examples"], [422, "examples"], [423, "examples"], [424, "examples"], [426, "examples"], [434, "examples"], [437, "examples"], [448, "examples"], [449, "examples"], [450, "examples"], [451, "examples"], [452, "examples"], [453, "examples"], [454, "examples"], [455, "examples"], [456, "examples"], [457, "examples"], [458, "examples"], [459, "examples"], [462, "examples"], [465, "examples"], [466, "examples"], [467, "examples"], [468, "examples"], [478, "examples"], [479, "examples"], [480, "examples"], [481, "examples"], [482, "examples"], [484, "examples"], [485, "examples"], [486, "examples"], [487, "examples"], [488, "examples"], [489, "examples"], [490, "examples"], [496, "examples"], [497, "examples"], [498, "examples"], [508, "examples"], [515, "examples"], [516, "examples"], [519, "examples"], [521, "examples"], [523, "examples"], [530, "examples"], [536, "examples"], [537, "examples"], [538, "examples"], [539, "examples"], [540, "examples"], [543, "examples"], [544, "examples"], [550, "examples"], [551, "examples"], [552, "examples"], [553, "examples"], [555, "examples"], [557, "examples"], [559, "examples"], [562, "examples"], [566, "examples"], [567, "examples"], [573, "examples"], [574, "examples"], [575, "examples"], [576, "examples"], [577, "examples"], [578, "examples"], [579, "examples"], [580, "examples"]], "FashionMNIST": [[7, null]], "Fast R-CNN": [[234, "fast-r-cnn"], [235, null]], "Faster R-CNN": [[231, null], [234, "faster-r-cnn"]], "Features": [[17, "features"]], "Flattened maximum index": [[537, null]], "Focal Loss Explanation": [[222, "focal-loss-explanation"]], "Forward (inference)": [[219, "forward-inference"]], "Forward Calculation": [[11, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [20, "forward-calculation"], [22, "forward-calculation"], [23, "forward-calculation"], [24, "forward-calculation"], [25, "forward-calculation"], [26, "forward-calculation"], [27, "forward-calculation"], [28, "forward-calculation"], [155, "forward-calculation"], [166, "forward-calculation"], [173, "forward-calculation"], [183, "forward-calculation"], [266, "forward-calculation"], [267, "forward-calculation"], [268, "forward-calculation"], [269, "forward-calculation"], [270, "forward-calculation"], [272, "forward-calculation"], [273, "forward-calculation"], [275, "forward-calculation"], [276, "forward-calculation"], [277, "forward-calculation"], [278, "forward-calculation"], [279, "forward-calculation"], [280, "forward-calculation"], [290, "forward-calculation"], [293, "forward-calculation"], [300, "forward-calculation"], [302, "forward-calculation"], [317, "forward-calculation"], [318, "forward-calculation"], [319, "forward-calculation"], [320, "forward-calculation"], [330, "forward-calculation"], [331, "forward-calculation"], [335, "forward-calculation"], [338, "forward-calculation"], [339, "forward-calculation"], [340, "forward-calculation"], [341, "forward-calculation"], [342, "forward-calculation"], [343, "forward-calculation"], [344, "forward-calculation"], [345, "forward-calculation"], [349, "forward-calculation"], [350, "forward-calculation"], [353, "forward-calculation"], [354, "forward-calculation"], [355, "forward-calculation"], [356, "forward-calculation"], [357, "forward-calculation"], [358, "forward-calculation"], [359, "forward-calculation"], [360, "forward-calculation"], [361, "forward-calculation"], [362, "forward-calculation"], [363, "forward-calculation"], [364, "forward-calculation"], [365, "forward-calculation"], [366, "forward-calculation"], [367, "forward-calculation"], [370, "forward-calculation"], [372, "forward-calculation"], [373, "forward-calculation"], [374, "forward-calculation"], [375, "forward-calculation"], [376, "forward-calculation"], [377, "forward-calculation"], [378, "forward-calculation"], [380, "forward-calculation"], [381, "forward-calculation"], [382, "forward-calculation"], [383, "forward-calculation"], [384, "forward-calculation"], [385, "forward-calculation"], [386, "forward-calculation"], [391, "forward-calculation"], [392, "forward-calculation"], [393, "forward-calculation"], [394, "forward-calculation"], [396, "forward-calculation"], [397, "forward-calculation"], [398, "forward-calculation"], [399, "forward-calculation"], [400, "forward-calculation"], [401, "forward-calculation"], [403, "forward-calculation"], [404, "forward-calculation"], [405, "forward-calculation"], [406, "forward-calculation"], [407, "forward-calculation"], [408, "forward-calculation"], [409, "forward-calculation"], [410, "forward-calculation"], [411, "forward-calculation"], [413, "forward-calculation"], [414, "forward-calculation"], [415, "forward-calculation"], [416, "forward-calculation"], [417, "forward-calculation"], [418, "forward-calculation"], [419, "forward-calculation"], [420, "forward-calculation"], [421, "forward-calculation"], [422, "forward-calculation"], [423, "forward-calculation"], [424, "forward-calculation"], [479, "forward-calculation"], [480, "forward-calculation"], [481, "forward-calculation"], [482, "forward-calculation"], [483, "forward-calculation"], [484, "forward-calculation"], [485, "forward-calculation"], [486, "forward-calculation"], [487, "forward-calculation"], [488, "forward-calculation"], [489, "forward-calculation"], [490, "forward-calculation"], [504, "forward-calculation"], [505, "forward-calculation"], [506, "forward-calculation"], [507, "forward-calculation"], [509, "forward-calculation"], [510, "forward-calculation"], [511, "forward-calculation"], [512, "forward-calculation"], [513, "forward-calculation"], [514, "forward-calculation"], [515, "forward-calculation"], [517, "forward-calculation"], [518, "forward-calculation"], [519, "forward-calculation"], [520, "forward-calculation"], [521, "forward-calculation"], [522, "forward-calculation"], [524, "forward-calculation"], [525, "forward-calculation"], [526, "forward-calculation"], [527, "forward-calculation"], [528, "forward-calculation"], [529, "forward-calculation"], [531, "forward-calculation"], [532, "forward-calculation"], [533, "forward-calculation"], [534, "forward-calculation"], [535, "forward-calculation"], [542, "forward-calculation"], [548, "forward-calculation"], [551, "forward-calculation"], [553, "forward-calculation"], [554, "forward-calculation"], [555, "forward-calculation"], [556, "forward-calculation"], [560, "forward-calculation"], [561, "forward-calculation"], [562, "forward-calculation"], [564, "forward-calculation"], [565, "forward-calculation"], [568, "forward-calculation"], [569, "forward-calculation"], [573, "forward-calculation"], [574, "forward-calculation"], [575, "forward-calculation"], [576, "forward-calculation"], [577, "forward-calculation"], [578, "forward-calculation"], [579, "forward-calculation"], [580, "forward-calculation"]], "Forward Computation": [[312, "forward-computation"]], "Forward Input & Output": [[237, "forward-input-output"]], "Forward Method": [[428, "forward-method"], [429, "forward-method"], [430, "forward-method"], [431, "forward-method"], [432, "forward-method"]], "Forward Noise Process": [[216, "forward-noise-process"]], "Forward Pass": [[211, "forward-pass"]], "Function Signature": [[11, "function-signature"], [13, "function-signature"], [14, "function-signature"], [15, "function-signature"], [18, "function-signature"], [19, "function-signature"], [20, "function-signature"], [22, "function-signature"], [23, "function-signature"], [24, "function-signature"], [25, "function-signature"], [26, "function-signature"], [27, "function-signature"], [28, "function-signature"], [30, "function-signature"], [32, "function-signature"], [33, "function-signature"], [34, "function-signature"], [35, "function-signature"], [36, "function-signature"], [37, "function-signature"], [38, "function-signature"], [39, "function-signature"], [42, "function-signature"], [43, "function-signature"], [44, "function-signature"], [45, "function-signature"], [46, "function-signature"], [47, "function-signature"], [48, "function-signature"], [49, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [53, "function-signature"], [54, "function-signature"], [56, "function-signature"], [57, "function-signature"], [58, "function-signature"], [59, "function-signature"], [60, "function-signature"], [61, "function-signature"], [62, "function-signature"], [63, "function-signature"], [64, "function-signature"], [66, "function-signature"], [67, "function-signature"], [68, "function-signature"], [70, "function-signature"], [71, "function-signature"], [72, "function-signature"], [74, "function-signature"], [75, "function-signature"], [76, "function-signature"], [77, "function-signature"], [80, "function-signature"], [81, "function-signature"], [82, "function-signature"], [83, "function-signature"], [84, "function-signature"], [85, "function-signature"], [86, "function-signature"], [87, "function-signature"], [88, "function-signature"], [89, "function-signature"], [90, "function-signature"], [91, "function-signature"], [93, "function-signature"], [94, "function-signature"], [95, "function-signature"], [97, "function-signature"], [98, "function-signature"], [99, "function-signature"], [101, "function-signature"], [102, "function-signature"], [103, "function-signature"], [104, "function-signature"], [106, "function-signature"], [107, "function-signature"], [110, "function-signature"], [111, "function-signature"], [112, "function-signature"], [114, "function-signature"], [115, "function-signature"], [116, "function-signature"], [117, "function-signature"], [118, "function-signature"], [123, "function-signature"], [124, "function-signature"], [125, "function-signature"], [126, "function-signature"], [127, "function-signature"], [128, "function-signature"], [129, "function-signature"], [130, "function-signature"], [131, "function-signature"], [132, "function-signature"], [133, "function-signature"], [134, "function-signature"], [135, "function-signature"], [136, "function-signature"], [137, "function-signature"], [138, "function-signature"], [139, "function-signature"], [140, "function-signature"], [141, "function-signature"], [142, "function-signature"], [143, "function-signature"], [144, "function-signature"], [145, "function-signature"], [147, "function-signature"], [148, "function-signature"], [149, "function-signature"], [150, "function-signature"], [151, "function-signature"], [152, "function-signature"], [153, "function-signature"], [154, "function-signature"], [156, "function-signature"], [157, "function-signature"], [158, "function-signature"], [159, "function-signature"], [160, "function-signature"], [161, "function-signature"], [162, "function-signature"], [163, "function-signature"], [164, "function-signature"], [165, "function-signature"], [167, "function-signature"], [168, "function-signature"], [169, "function-signature"], [170, "function-signature"], [171, "function-signature"], [172, "function-signature"], [174, "function-signature"], [175, "function-signature"], [176, "function-signature"], [177, "function-signature"], [178, "function-signature"], [179, "function-signature"], [180, "function-signature"], [181, "function-signature"], [182, "function-signature"], [184, "function-signature"], [185, "function-signature"], [186, "function-signature"], [187, "function-signature"], [190, "function-signature"], [191, "function-signature"], [192, "function-signature"], [193, "function-signature"], [194, "function-signature"], [195, "function-signature"], [196, "function-signature"], [197, "function-signature"], [198, "function-signature"], [199, "function-signature"], [201, "function-signature"], [202, "function-signature"], [203, "function-signature"], [204, "function-signature"], [206, "function-signature"], [207, "function-signature"], [208, "function-signature"], [209, "function-signature"], [210, "function-signature"], [212, "function-signature"], [214, "function-signature"], [220, "function-signature"], [221, "function-signature"], [223, "function-signature"], [224, "function-signature"], [225, "function-signature"], [226, "function-signature"], [227, "function-signature"], [228, "function-signature"], [229, "function-signature"], [230, "function-signature"], [232, "function-signature"], [233, "function-signature"], [241, "function-signature"], [242, "function-signature"], [243, "function-signature"], [245, "function-signature"], [246, "function-signature"], [249, "function-signature"], [250, "function-signature"], [252, "function-signature"], [253, "function-signature"], [255, "function-signature"], [256, "function-signature"], [258, "function-signature"], [261, "function-signature"], [262, "function-signature"], [272, "function-signature"], [273, "function-signature"], [275, "function-signature"], [276, "function-signature"], [277, "function-signature"], [278, "function-signature"], [279, "function-signature"], [280, "function-signature"], [282, "function-signature"], [283, "function-signature"], [284, "function-signature"], [285, "function-signature"], [286, "function-signature"], [287, "function-signature"], [288, "function-signature"], [290, "function-signature"], [291, "function-signature"], [292, "function-signature"], [293, "function-signature"], [294, "function-signature"], [295, "function-signature"], [296, "function-signature"], [297, "function-signature"], [300, "function-signature"], [302, "function-signature"], [303, "function-signature"], [304, "function-signature"], [305, "function-signature"], [306, "function-signature"], [308, "function-signature"], [309, "function-signature"], [310, "function-signature"], [311, "function-signature"], [312, "function-signature"], [314, "function-signature"], [315, "function-signature"], [316, "function-signature"], [317, "function-signature"], [318, "function-signature"], [319, "function-signature"], [320, "function-signature"], [321, "function-signature"], [322, "function-signature"], [323, "function-signature"], [324, "function-signature"], [325, "function-signature"], [327, "function-signature"], [328, "function-signature"], [329, "function-signature"], [330, "function-signature"], [331, "function-signature"], [333, "function-signature"], [335, "function-signature"], [336, "function-signature"], [337, "function-signature"], [347, "function-signature"], [349, "function-signature"], [350, "function-signature"], [351, "function-signature"], [352, "function-signature"], [353, "function-signature"], [354, "function-signature"], [462, "function-signature"], [463, "function-signature"], [465, "function-signature"], [466, "function-signature"], [467, "function-signature"], [468, "function-signature"], [469, "function-signature"], [471, "function-signature"], [472, "function-signature"], [473, "function-signature"], [474, "function-signature"], [475, "function-signature"], [476, "function-signature"], [479, "function-signature"], [480, "function-signature"], [481, "function-signature"], [482, "function-signature"], [483, "function-signature"], [484, "function-signature"], [485, "function-signature"], [486, "function-signature"], [487, "function-signature"], [488, "function-signature"], [489, "function-signature"], [490, "function-signature"], [491, "function-signature"], [492, "function-signature"], [493, "function-signature"], [494, "function-signature"], [495, "function-signature"], [496, "function-signature"], [497, "function-signature"], [498, "function-signature"], [499, "function-signature"], [500, "function-signature"], [501, "function-signature"], [502, "function-signature"], [504, "function-signature"], [505, "function-signature"], [506, "function-signature"], [507, "function-signature"], [508, "function-signature"], [509, "function-signature"], [510, "function-signature"], [511, "function-signature"], [512, "function-signature"], [513, "function-signature"], [514, "function-signature"], [515, "function-signature"], [516, "function-signature"], [517, "function-signature"], [518, "function-signature"], [519, "function-signature"], [520, "function-signature"], [521, "function-signature"], [522, "function-signature"], [523, "function-signature"], [524, "function-signature"], [525, "function-signature"], [526, "function-signature"], [527, "function-signature"], [528, "function-signature"], [529, "function-signature"], [530, "function-signature"], [531, "function-signature"], [532, "function-signature"], [533, "function-signature"], [534, "function-signature"], [535, "function-signature"], [536, "function-signature"], [537, "function-signature"], [538, "function-signature"], [539, "function-signature"], [540, "function-signature"], [541, "function-signature"], [542, "function-signature"], [543, "function-signature"], [544, "function-signature"], [545, "function-signature"], [546, "function-signature"], [547, "function-signature"], [548, "function-signature"], [550, "function-signature"], [551, "function-signature"], [552, "function-signature"], [553, "function-signature"], [554, "function-signature"], [555, "function-signature"], [556, "function-signature"], [557, "function-signature"], [558, "function-signature"], [559, "function-signature"], [560, "function-signature"], [561, "function-signature"], [562, "function-signature"], [563, "function-signature"], [564, "function-signature"], [565, "function-signature"], [566, "function-signature"], [567, "function-signature"], [568, "function-signature"], [569, "function-signature"], [570, "function-signature"], [583, "function-signature"]], "Functions": [[244, null]], "Fused Layers": [[346, null]], "Future Work": [[4, "future-work"]], "Getting Started": [[448, "getting-started"]], "Global minimum index": [[538, null]], "Gradient Calculation": [[570, "gradient-calculation"]], "Gradient Computation": [[541, "gradient-computation"], [550, "gradient-computation"], [557, "gradient-computation"], [558, "gradient-computation"], [563, "gradient-computation"]], "Gradient hooks": [[478, null]], "Hooks & Shape Alignment": [[16, "hooks-shape-alignment"]], "How It Works": [[463, "how-it-works"]], "How Model Factories Use Weights": [[586, "how-model-factories-use-weights"]], "How to Install": [[16, "how-to-install"]], "Hybrid Architecture": [[31, "hybrid-architecture"]], "Hyperparameter Configuration": [[153, "hyperparameter-configuration"], [154, "hyperparameter-configuration"]], "Image Classification": [[108, null]], "Image Datasets": [[9, null]], "Image Generation": [[217, null]], "Image Transformations": [[581, null]], "Implementation Details": [[55, "implementation-details"], [113, "implementation-details"]], "Inception": [[96, null], [108, "inception"]], "Inception-ResNet": [[108, "inception-resnet"]], "InceptionNeXt": [[100, null], [108, "inceptionnext"]], "InceptionResNet": [[105, null]], "Input & Output": [[238, "input-output"], [239, "input-output"]], "Input Format": [[222, "input-format"], [248, "input-format"], [251, "input-format"], [254, "input-format"], [257, "input-format"]], "Inputs": [[219, "inputs"]], "Inspecting Optimizer State": [[448, null], [449, null], [450, null], [451, null], [452, null], [453, null], [454, null], [455, null], [456, null], [457, null], [458, null], [459, null]], "Integration with lucid": [[3, "integration-with-lucid"], [436, "integration-with-lucid"], [477, "integration-with-lucid"], [582, "integration-with-lucid"]], "Key Characteristics": [[65, "key-characteristics"]], "Key Components": [[3, "key-components"], [436, "key-components"]], "Key Enhancements": [[133, "key-enhancements"]], "Key Features": [[4, "key-features"], [179, "key-features"], [180, "key-features"], [181, "key-features"], [182, "key-features"], [187, "key-features"], [448, "key-features"], [477, "key-features"]], "Key Transformations": [[582, "key-transformations"]], "LR Schedulers": [[447, null]], "Layer Configuration": [[147, "layer-configuration"], [148, "layer-configuration"], [149, "layer-configuration"], [150, "layer-configuration"], [151, "layer-configuration"], [152, "layer-configuration"]], "LeNet": [[108, "lenet"], [109, null], [585, "lenet"]], "Learn More": [[477, null]], "Linear Algebra Operations": [[21, null]], "Linear Functions": [[299, null], [301, null]], "Linear Layers": [[390, null], [395, null]], "Loading Pretrained Weights": [[16, "loading-pretrained-weights"]], "Loading a custom dataset": [[1, null]], "Loss & Matching": [[219, "loss-matching"]], "Loss Components": [[215, "loss-components"]], "Loss Computation": [[222, "loss-computation"]], "Loss Dictionary": [[231, "loss-dictionary"]], "Loss Formula": [[248, "loss-formula"]], "Loss Functions": [[299, null], [307, null]], "Loss Layers": [[390, null], [402, null]], "Lucid\u00b2 \ud83d\udc8e": [[16, null]], "MNIST": [[8, null]], "Mathematical Definition": [[13, "mathematical-definition"], [14, "mathematical-definition"], [15, "mathematical-definition"], [316, "mathematical-definition"], [388, "mathematical-definition"]], "Mathematical Details": [[369, "mathematical-details"], [428, "mathematical-details"], [429, "mathematical-details"], [430, "mathematical-details"], [431, "mathematical-details"], [432, "mathematical-details"]], "Mathematical Expression": [[311, "mathematical-expression"], [508, "mathematical-expression"], [516, "mathematical-expression"], [523, "mathematical-expression"], [559, "mathematical-expression"]], "Mathematical Formula": [[439, "mathematical-formula"], [440, "mathematical-formula"], [441, "mathematical-formula"], [443, "mathematical-formula"], [444, "mathematical-formula"], [445, "mathematical-formula"], [446, "mathematical-formula"]], "Mathematical Representation": [[55, "mathematical-representation"], [113, "mathematical-representation"], [478, "mathematical-representation"]], "Mathematics": [[543, "mathematics"]], "Matrix Multiplication Rules": [[483, "matrix-multiplication-rules"]], "Max index by row": [[537, null]], "MaxViT": [[108, "maxvit"], [113, null]], "Metadata Captured": [[466, "metadata-captured"]], "Metal Acceleration (MLX Backend)": [[16, "metal-acceleration-mlx-backend"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [6, "methods"], [7, "methods"], [8, "methods"], [105, "methods"], [109, "methods"], [200, "methods"], [215, "methods"], [216, "methods"], [219, "methods"], [222, "methods"], [248, "methods"], [251, "methods"], [254, "methods"], [257, "methods"], [264, "methods"], [265, "methods"], [437, "methods"], [439, "methods"], [440, "methods"], [441, "methods"], [442, "methods"], [443, "methods"], [444, "methods"], [445, "methods"], [446, "methods"], [461, "methods"], [478, "methods"]], "MobileNet": [[108, "mobilenet"], [119, null], [585, "mobilenet"]], "MobileNet_V2": [[120, null]], "MobileNet_V3": [[121, null]], "MobileNet_V4": [[122, null]], "Model Configuration": [[114, "model-configuration"], [115, "model-configuration"], [116, "model-configuration"], [117, "model-configuration"], [118, "model-configuration"]], "Module Output Requirements": [[215, "module-output-requirements"]], "Modules": [[390, null]], "Moving tensor between devices": [[478, null]], "Multi-Scale Detection": [[254, "multi-scale-detection"], [257, "multi-scale-detection"]], "Natural Language Processing": [[218, "natural-language-processing"]], "Neural Networks with lucid.nn": [[16, "neural-networks-with-lucid-nn"]], "Normalization Functions": [[299, null], [313, null]], "Normalization Layers": [[390, null], [412, null]], "Notes": [[11, "notes"], [331, "notes"], [496, "notes"], [497, "notes"]], "Object Detection": [[234, null]], "Object Detection Utilities": [[244, null]], "One-Hot Encoding Logic": [[336, "one-hot-encoding-logic"]], "Optimizers": [[460, null]], "Organizing Models": [[436, "organizing-models"]], "Others": [[16, "others"]], "Overview": [[3, "overview"], [4, "overview"], [10, "overview"], [96, "overview"], [97, "overview"], [98, "overview"], [99, "overview"], [105, "overview"], [106, "overview"], [107, "overview"], [109, "overview"], [110, "overview"], [111, "overview"], [112, "overview"], [119, "overview"], [120, "overview"], [121, "overview"], [122, "overview"], [127, "overview"], [128, "overview"], [129, "overview"], [130, "overview"], [131, "overview"], [156, "overview"], [157, "overview"], [158, "overview"], [159, "overview"], [160, "overview"], [161, "overview"], [162, "overview"], [163, "overview"], [174, "overview"], [175, "overview"], [176, "overview"], [177, "overview"], [178, "overview"], [369, "overview"], [428, "overview"], [429, "overview"], [430, "overview"], [431, "overview"], [432, "overview"], [436, "overview"], [438, "overview"], [448, "overview"], [462, "overview"], [465, "overview"], [477, "overview"], [582, "overview"], [586, "overview"]], "PVT": [[132, null]], "PVT_V2": [[133, null]], "Parameters": [[1, "parameters"], [5, "parameters"], [6, "parameters"], [7, "parameters"], [8, "parameters"], [11, "parameters"], [13, "parameters"], [14, "parameters"], [15, "parameters"], [18, "parameters"], [19, "parameters"], [20, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [87, "parameters"], [88, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [104, "parameters"], [105, "parameters"], [106, "parameters"], [107, "parameters"], [109, "parameters"], [113, "parameters"], [114, "parameters"], [115, "parameters"], [116, "parameters"], [117, "parameters"], [118, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [122, "parameters"], [123, "parameters"], [124, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [154, "parameters"], [155, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"], [159, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [163, "parameters"], [164, "parameters"], [165, "parameters"], [166, "parameters"], [167, "parameters"], [168, "parameters"], [169, "parameters"], [170, "parameters"], [171, "parameters"], [172, "parameters"], [173, "parameters"], [174, "parameters"], [175, "parameters"], [176, "parameters"], [177, "parameters"], [178, "parameters"], [179, "parameters"], [180, "parameters"], [181, "parameters"], [182, "parameters"], [183, "parameters"], [184, "parameters"], [185, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [189, "parameters"], [190, "parameters"], [191, "parameters"], [192, "parameters"], [193, "parameters"], [194, "parameters"], [195, "parameters"], [196, "parameters"], [197, "parameters"], [198, "parameters"], [199, "parameters"], [200, "parameters"], [201, "parameters"], [202, "parameters"], [203, "parameters"], [204, "parameters"], [205, "parameters"], [206, "parameters"], [207, "parameters"], [208, "parameters"], [209, "parameters"], [210, "parameters"], [211, "parameters"], [212, "parameters"], [213, "parameters"], [214, "parameters"], [215, "parameters"], [216, "parameters"], [219, "parameters"], [220, "parameters"], [221, "parameters"], [222, "parameters"], [223, "parameters"], [224, "parameters"], [225, "parameters"], [226, "parameters"], [227, "parameters"], [228, "parameters"], [229, "parameters"], [230, "parameters"], [231, "parameters"], [232, "parameters"], [233, "parameters"], [235, "parameters"], [236, "parameters"], [237, "parameters"], [238, "parameters"], [239, "parameters"], [240, "parameters"], [241, "parameters"], [242, "parameters"], [243, "parameters"], [245, "parameters"], [246, "parameters"], [248, "parameters"], [249, "parameters"], [250, "parameters"], [251, "parameters"], [252, "parameters"], [253, "parameters"], [254, "parameters"], [255, "parameters"], [256, "parameters"], [257, "parameters"], [258, "parameters"], [260, "parameters"], [261, "parameters"], [262, "parameters"], [263, "parameters"], [265, "parameters"], [266, "parameters"], [267, "parameters"], [268, "parameters"], [269, "parameters"], [270, "parameters"], [272, "parameters"], [273, "parameters"], [275, "parameters"], [276, "parameters"], [277, "parameters"], [278, "parameters"], [279, "parameters"], [280, "parameters"], [282, "parameters"], [283, "parameters"], [284, "parameters"], [285, "parameters"], [286, "parameters"], [287, "parameters"], [288, "parameters"], [290, "parameters"], [291, "parameters"], [292, "parameters"], [293, "parameters"], [294, "parameters"], [295, "parameters"], [296, "parameters"], [297, "parameters"], [300, "parameters"], [302, "parameters"], [303, "parameters"], [304, "parameters"], [305, "parameters"], [306, "parameters"], [308, "parameters"], [309, "parameters"], [310, "parameters"], [311, "parameters"], [312, "parameters"], [314, "parameters"], [315, "parameters"], [316, "parameters"], [317, "parameters"], [318, "parameters"], [319, "parameters"], [320, "parameters"], [321, "parameters"], [322, "parameters"], [323, "parameters"], [324, "parameters"], [325, "parameters"], [327, "parameters"], [328, "parameters"], [329, "parameters"], [330, "parameters"], [331, "parameters"], [333, "parameters"], [335, "parameters"], [336, "parameters"], [337, "parameters"], [338, "parameters"], [339, "parameters"], [340, "parameters"], [341, "parameters"], [342, "parameters"], [343, "parameters"], [344, "parameters"], [345, "parameters"], [347, "parameters"], [349, "parameters"], [350, "parameters"], [351, "parameters"], [352, "parameters"], [353, "parameters"], [354, "parameters"], [355, "parameters"], [356, "parameters"], [359, "parameters"], [361, "parameters"], [363, "parameters"], [364, "parameters"], [365, "parameters"], [367, "parameters"], [369, "parameters"], [370, "parameters"], [372, "parameters"], [373, "parameters"], [374, "parameters"], [375, "parameters"], [376, "parameters"], [377, "parameters"], [378, "parameters"], [380, "parameters"], [381, "parameters"], [382, "parameters"], [383, "parameters"], [384, "parameters"], [385, "parameters"], [386, "parameters"], [388, "parameters"], [391, "parameters"], [392, "parameters"], [393, "parameters"], [394, "parameters"], [396, "parameters"], [397, "parameters"], [398, "parameters"], [399, "parameters"], [400, "parameters"], [401, "parameters"], [403, "parameters"], [404, "parameters"], [405, "parameters"], [406, "parameters"], [407, "parameters"], [408, "parameters"], [409, "parameters"], [410, "parameters"], [411, "parameters"], [413, "parameters"], [414, "parameters"], [415, "parameters"], [416, "parameters"], [417, "parameters"], [418, "parameters"], [419, "parameters"], [420, "parameters"], [421, "parameters"], [422, "parameters"], [423, "parameters"], [424, "parameters"], [426, "parameters"], [428, "parameters"], [429, "parameters"], [430, "parameters"], [431, "parameters"], [432, "parameters"], [434, "parameters"], [439, "parameters"], [440, "parameters"], [441, "parameters"], [442, "parameters"], [443, "parameters"], [444, "parameters"], [445, "parameters"], [446, "parameters"], [449, "parameters"], [450, "parameters"], [451, "parameters"], [452, "parameters"], [453, "parameters"], [454, "parameters"], [455, "parameters"], [456, "parameters"], [457, "parameters"], [458, "parameters"], [459, "parameters"], [461, "parameters"], [462, "parameters"], [465, "parameters"], [466, "parameters"], [467, "parameters"], [468, "parameters"], [469, "parameters"], [471, "parameters"], [472, "parameters"], [473, "parameters"], [474, "parameters"], [475, "parameters"], [476, "parameters"], [478, "parameters"], [479, "parameters"], [480, "parameters"], [481, "parameters"], [482, "parameters"], [483, "parameters"], [484, "parameters"], [485, "parameters"], [486, "parameters"], [487, "parameters"], [488, "parameters"], [489, "parameters"], [490, "parameters"], [491, "parameters"], [492, "parameters"], [493, "parameters"], [494, "parameters"], [495, "parameters"], [496, "parameters"], [497, "parameters"], [498, "parameters"], [499, "parameters"], [500, "parameters"], [501, "parameters"], [502, "parameters"], [504, "parameters"], [505, "parameters"], [506, "parameters"], [507, "parameters"], [508, "parameters"], [509, "parameters"], [510, "parameters"], [511, "parameters"], [512, "parameters"], [513, "parameters"], [514, "parameters"], [515, "parameters"], [516, "parameters"], [517, "parameters"], [518, "parameters"], [519, "parameters"], [520, "parameters"], [521, "parameters"], [522, "parameters"], [523, "parameters"], [524, "parameters"], [525, "parameters"], [526, "parameters"], [527, "parameters"], [528, "parameters"], [529, "parameters"], [530, "parameters"], [531, "parameters"], [532, "parameters"], [533, "parameters"], [534, "parameters"], [535, "parameters"], [536, "parameters"], [537, "parameters"], [538, "parameters"], [539, "parameters"], [540, "parameters"], [541, "parameters"], [542, "parameters"], [543, "parameters"], [544, "parameters"], [545, "parameters"], [546, "parameters"], [547, "parameters"], [548, "parameters"], [550, "parameters"], [551, "parameters"], [552, "parameters"], [553, "parameters"], [554, "parameters"], [555, "parameters"], [556, "parameters"], [557, "parameters"], [558, "parameters"], [559, "parameters"], [560, "parameters"], [561, "parameters"], [562, "parameters"], [563, "parameters"], [564, "parameters"], [565, "parameters"], [566, "parameters"], [567, "parameters"], [568, "parameters"], [569, "parameters"], [570, "parameters"], [571, "parameters"], [572, "parameters"], [573, "parameters"], [574, "parameters"], [575, "parameters"], [576, "parameters"], [577, "parameters"], [578, "parameters"], [579, "parameters"], [580, "parameters"], [583, "parameters"]], "Performance / FLOPs": [[539, "performance-flops"]], "Performing backpropagation": [[478, null]], "Pooling Functions": [[299, null], [326, null]], "Pooling Layers": [[390, null], [425, null]], "Potential Pitfalls": [[463, "potential-pitfalls"]], "Pre-Trained Weights": [[585, null]], "Prediction Output": [[251, "prediction-output"], [254, "prediction-output"], [257, "prediction-output"]], "Properties": [[265, "properties"], [478, "properties"]], "Pyramid Vision Transformer (PVT)": [[108, "pyramid-vision-transformer-pvt"]], "Quickstart Examples": [[586, "quickstart-examples"]], "R-CNN": [[234, "r-cnn"], [236, null]], "Raises": [[18, "raises"], [19, "raises"], [20, "raises"], [22, "raises"], [23, "raises"], [24, "raises"], [25, "raises"], [26, "raises"], [27, "raises"], [28, "raises"]], "Random Number Generations": [[470, null]], "References": [[5, "references"], [6, "references"], [7, "references"], [8, "references"], [344, "references"], [448, "references"]], "Regularization": [[292, "regularization"]], "Representation": [[461, "representation"]], "ResNeSt": [[108, "resnest"], [146, null]], "ResNeXt": [[108, "resnext"], [166, null], [585, "resnext"]], "ResNet": [[108, "resnet"], [155, null], [585, "resnet"]], "Return Values": [[559, "return-values"]], "Returns": [[11, "returns"], [13, "returns"], [14, "returns"], [15, "returns"], [18, "returns"], [19, "returns"], [20, "returns"], [22, "returns"], [23, "returns"], [24, "returns"], [25, "returns"], [26, "returns"], [27, "returns"], [28, "returns"], [30, "returns"], [42, "returns"], [43, "returns"], [44, "returns"], [45, "returns"], [46, "returns"], [47, "returns"], [48, "returns"], [49, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [53, "returns"], [54, "returns"], [56, "returns"], [57, "returns"], [58, "returns"], [59, "returns"], [60, "returns"], [61, "returns"], [62, "returns"], [63, "returns"], [64, "returns"], [66, "returns"], [67, "returns"], [68, "returns"], [70, "returns"], [71, "returns"], [72, "returns"], [74, "returns"], [75, "returns"], [76, "returns"], [77, "returns"], [80, "returns"], [81, "returns"], [82, "returns"], [83, "returns"], [84, "returns"], [85, "returns"], [86, "returns"], [87, "returns"], [88, "returns"], [89, "returns"], [90, "returns"], [91, "returns"], [93, "returns"], [94, "returns"], [95, "returns"], [97, "returns"], [98, "returns"], [99, "returns"], [101, "returns"], [102, "returns"], [103, "returns"], [104, "returns"], [106, "returns"], [107, "returns"], [110, "returns"], [111, "returns"], [112, "returns"], [123, "returns"], [124, "returns"], [125, "returns"], [126, "returns"], [132, "returns"], [133, "returns"], [134, "returns"], [135, "returns"], [136, "returns"], [137, "returns"], [138, "returns"], [139, "returns"], [140, "returns"], [141, "returns"], [142, "returns"], [143, "returns"], [144, "returns"], [145, "returns"], [147, "returns"], [148, "returns"], [149, "returns"], [150, "returns"], [151, "returns"], [152, "returns"], [153, "returns"], [154, "returns"], [156, "returns"], [157, "returns"], [158, "returns"], [159, "returns"], [160, "returns"], [161, "returns"], [162, "returns"], [163, "returns"], [164, "returns"], [165, "returns"], [167, "returns"], [168, "returns"], [169, "returns"], [170, "returns"], [171, "returns"], [172, "returns"], [174, "returns"], [175, "returns"], [176, "returns"], [177, "returns"], [178, "returns"], [179, "returns"], [180, "returns"], [181, "returns"], [182, "returns"], [184, "returns"], [185, "returns"], [186, "returns"], [187, "returns"], [190, "returns"], [191, "returns"], [192, "returns"], [193, "returns"], [194, "returns"], [195, "returns"], [196, "returns"], [197, "returns"], [198, "returns"], [199, "returns"], [201, "returns"], [202, "returns"], [203, "returns"], [204, "returns"], [206, "returns"], [207, "returns"], [208, "returns"], [209, "returns"], [210, "returns"], [212, "returns"], [214, "returns"], [215, "returns"], [216, "returns"], [219, "returns"], [220, "returns"], [221, "returns"], [223, "returns"], [224, "returns"], [225, "returns"], [226, "returns"], [227, "returns"], [228, "returns"], [229, "returns"], [230, "returns"], [232, "returns"], [233, "returns"], [237, "returns"], [238, "returns"], [239, "returns"], [240, "returns"], [241, "returns"], [242, "returns"], [243, "returns"], [245, "returns"], [246, "returns"], [248, "returns"], [249, "returns"], [250, "returns"], [252, "returns"], [253, "returns"], [255, "returns"], [256, "returns"], [258, "returns"], [261, "returns"], [262, "returns"], [272, "returns"], [273, "returns"], [275, "returns"], [276, "returns"], [277, "returns"], [278, "returns"], [279, "returns"], [280, "returns"], [282, "returns"], [283, "returns"], [284, "returns"], [285, "returns"], [286, "returns"], [287, "returns"], [288, "returns"], [290, "returns"], [291, "returns"], [292, "returns"], [293, "returns"], [294, "returns"], [295, "returns"], [296, "returns"], [297, "returns"], [300, "returns"], [302, "returns"], [303, "returns"], [304, "returns"], [305, "returns"], [306, "returns"], [308, "returns"], [309, "returns"], [310, "returns"], [311, "returns"], [312, "returns"], [314, "returns"], [315, "returns"], [316, "returns"], [317, "returns"], [318, "returns"], [319, "returns"], [320, "returns"], [321, "returns"], [322, "returns"], [323, "returns"], [324, "returns"], [325, "returns"], [327, "returns"], [328, "returns"], [329, "returns"], [330, "returns"], [331, "returns"], [333, "returns"], [335, "returns"], [336, "returns"], [337, "returns"], [345, "returns"], [347, "returns"], [349, "returns"], [350, "returns"], [351, "returns"], [352, "returns"], [353, "returns"], [354, "returns"], [362, "returns"], [388, "returns"], [426, "returns"], [462, "returns"], [463, "returns"], [465, "returns"], [467, "returns"], [468, "returns"], [469, "returns"], [471, "returns"], [472, "returns"], [473, "returns"], [474, "returns"], [475, "returns"], [476, "returns"], [479, "returns"], [480, "returns"], [481, "returns"], [482, "returns"], [483, "returns"], [484, "returns"], [485, "returns"], [486, "returns"], [487, "returns"], [488, "returns"], [489, "returns"], [490, "returns"], [491, "returns"], [492, "returns"], [493, "returns"], [494, "returns"], [495, "returns"], [496, "returns"], [497, "returns"], [498, "returns"], [499, "returns"], [500, "returns"], [501, "returns"], [502, "returns"], [504, "returns"], [505, "returns"], [506, "returns"], [507, "returns"], [508, "returns"], [509, "returns"], [510, "returns"], [511, "returns"], [512, "returns"], [513, "returns"], [514, "returns"], [515, "returns"], [516, "returns"], [517, "returns"], [518, "returns"], [519, "returns"], [520, "returns"], [521, "returns"], [522, "returns"], [523, "returns"], [524, "returns"], [525, "returns"], [526, "returns"], [527, "returns"], [528, "returns"], [529, "returns"], [530, "returns"], [531, "returns"], [532, "returns"], [533, "returns"], [534, "returns"], [535, "returns"], [536, "returns"], [537, "returns"], [538, "returns"], [539, "returns"], [540, "returns"], [541, "returns"], [542, "returns"], [543, "returns"], [544, "returns"], [545, "returns"], [546, "returns"], [547, "returns"], [548, "returns"], [550, "returns"], [551, "returns"], [552, "returns"], [553, "returns"], [554, "returns"], [555, "returns"], [556, "returns"], [557, "returns"], [558, "returns"], [560, "returns"], [561, "returns"], [562, "returns"], [563, "returns"], [564, "returns"], [565, "returns"], [566, "returns"], [567, "returns"], [568, "returns"], [569, "returns"], [570, "returns"], [583, "returns"]], "Reverse Denoising Process": [[216, "reverse-denoising-process"]], "SENet": [[108, "senet"], [173, null]], "SKNet": [[108, "sknet"], [183, null]], "Schedulers": [[447, null]], "See Also": [[448, "see-also"]], "Selective Kernel": [[346, null]], "Sequence-to-Sequence": [[259, null]], "Sparse Layers": [[390, null], [427, null]], "Spatial Functions": [[299, null], [332, null]], "Specifications": [[56, "specifications"], [57, "specifications"], [58, "specifications"], [59, "specifications"], [60, "specifications"], [61, "specifications"], [62, "specifications"], [63, "specifications"], [64, "specifications"], [93, "specifications"], [94, "specifications"], [95, "specifications"]], "Squeeze-and-Excitation": [[346, null]], "Stable sort with duplicates": [[539, null]], "Swin Transformer": [[108, "swin-transformer"]], "SwinTransformer": [[188, null]], "SwinTransformer_V2": [[189, null]], "Switching Between Devices": [[16, "switching-between-devices"]], "Target Format": [[222, "target-format"]], "Targets (Training)": [[219, "targets-training"]], "Targets format": [[219, "targets-format"]], "Tensor Contraction Rules": [[490, "tensor-contraction-rules"]], "Tensor Generating Functions": [[503, null]], "Tensor Operations": [[503, null]], "Tensor Utilities": [[549, null]], "Tensor: The Core Abstraction": [[16, "tensor-the-core-abstraction"]], "Training & Evaluation": [[16, "training-evaluation"]], "Training Notes": [[232, "training-notes"], [233, "training-notes"], [249, "training-notes"], [250, "training-notes"]], "Training Objective": [[216, "training-objective"]], "Training step (sketch)": [[219, "training-step-sketch"]], "Transformer": [[259, "transformer"], [260, null]], "Transformer Layers": [[390, null], [433, null]], "Typical API Surface": [[586, "typical-api-surface"]], "Unary Functions": [[503, null]], "Usage": [[4, "usage"], [88, "usage"], [89, "usage"], [90, "usage"], [91, "usage"], [263, "usage"], [337, "usage"], [438, "usage"], [463, "usage"], [464, "usage"], [551, "usage"], [571, "usage"], [572, "usage"], [582, "usage"]], "Usage Example": [[127, "usage-example"], [128, "usage-example"], [129, "usage-example"], [130, "usage-example"], [131, "usage-example"], [369, "usage-example"], [428, "usage-example"], [429, "usage-example"], [430, "usage-example"], [431, "usage-example"], [432, "usage-example"], [439, "usage-example"], [440, "usage-example"], [441, "usage-example"], [442, "usage-example"], [443, "usage-example"], [444, "usage-example"], [445, "usage-example"], [446, "usage-example"]], "Usage Examples": [[461, "usage-examples"]], "Use Cases": [[65, "use-cases"]], "Use another Tensor as input": [[536, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using YOLO-V2 with a custom backbone": [[251, null]], "Using YOLO-V2 with default Darknet-19": [[251, null]], "Using YOLO-V3 with default anchors and backbone": [[254, null]], "Using YOLO-V4 with default neck and backbone": [[257, null]], "Using free tensors": [[478, null]], "Using the ASGD Optimizer": [[449, null]], "Using the Adadelta Optimizer": [[450, null]], "Using the Adagrad Optimizer": [[451, null]], "Using the Adam Optimizer": [[452, null]], "Using the AdamW Optimizer": [[453, null]], "Using the Adamax Optimizer": [[454, null]], "Using the NAdam Optimizer": [[455, null]], "Using the RAdam Optimizer": [[456, null]], "Using the RMSprop Optimizer": [[457, null]], "Using the Rprop Optimizer": [[458, null]], "Using the SGD Optimizer": [[459, null]], "Utility Functions": [[299, null], [334, null]], "VAE": [[215, null]], "VGGNet": [[108, "vggnet"], [200, null], [585, "vggnet"]], "Variational Autoencoder (VAE)": [[217, "variational-autoencoder-vae"]], "Verification": [[16, "verification"]], "ViT": [[205, null]], "Vision Layers": [[390, null], [435, null]], "Visual Transformer (ViT)": [[108, "visual-transformer-vit"]], "Weight Initializations": [[348, null]], "Xception": [[108, "xception"], [211, null]], "YOLO": [[234, "yolo"]], "YOLO Series": [[247, null]], "YOLO-v1": [[234, "yolo-v1"], [248, null]], "YOLO-v2": [[234, "yolo-v2"], [251, null]], "YOLO-v2 Loss": [[251, "yolo-v2-loss"]], "YOLO-v3": [[234, "yolo-v3"], [254, null]], "YOLO-v3 Loss": [[254, "yolo-v3-loss"]], "YOLO-v4": [[234, "yolo-v4"], [257, null]], "YOLO-v4 Loss": [[257, "yolo-v4-loss"]], "ZFNet": [[108, "zfnet"], [213, null]], "alexnet": [[30, null]], "coatnet_0": [[32, null]], "coatnet_1": [[33, null]], "coatnet_2": [[34, null]], "coatnet_3": [[35, null]], "coatnet_4": [[36, null]], "coatnet_5": [[37, null]], "coatnet_6": [[38, null]], "coatnet_7": [[39, null]], "convnext_base": [[42, null]], "convnext_large": [[43, null]], "convnext_small": [[44, null]], "convnext_tiny": [[45, null]], "convnext_v2_atto": [[46, null]], "convnext_v2_base": [[47, null]], "convnext_v2_femto": [[48, null]], "convnext_v2_huge": [[49, null]], "convnext_v2_large": [[50, null]], "convnext_v2_nano": [[51, null]], "convnext_v2_pico": [[52, null]], "convnext_v2_tiny": [[53, null]], "convnext_xlarge": [[54, null]], "crossvit_15": [[56, null]], "crossvit_15_dagger": [[57, null]], "crossvit_18": [[58, null]], "crossvit_18_dagger": [[59, null]], "crossvit_9": [[60, null]], "crossvit_9_dagger": [[61, null]], "crossvit_base": [[62, null]], "crossvit_small": [[63, null]], "crossvit_tiny": [[64, null]], "csp_darknet_53": [[66, null]], "csp_resnet_50": [[67, null]], "csp_resnext_50_32x4d": [[68, null]], "cvt_13": [[70, null]], "cvt_21": [[71, null]], "cvt_w24": [[72, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "densenet_121": [[74, null]], "densenet_169": [[75, null]], "densenet_201": [[76, null]], "densenet_264": [[77, null]], "detr_r101": [[220, null]], "detr_r50": [[221, null]], "efficientdet_d0": [[223, null]], "efficientdet_d1": [[224, null]], "efficientdet_d2": [[225, null]], "efficientdet_d3": [[226, null]], "efficientdet_d4": [[227, null]], "efficientdet_d5": [[228, null]], "efficientdet_d6": [[229, null]], "efficientdet_d7": [[230, null]], "efficientformer_l1": [[93, null]], "efficientformer_l3": [[94, null]], "efficientformer_l7": [[95, null]], "efficientnet_b0": [[80, null]], "efficientnet_b1": [[81, null]], "efficientnet_b2": [[82, null]], "efficientnet_b3": [[83, null]], "efficientnet_b4": [[84, null]], "efficientnet_b5": [[85, null]], "efficientnet_b6": [[86, null]], "efficientnet_b7": [[87, null]], "efficientnet_v2_l": [[88, null]], "efficientnet_v2_m": [[89, null]], "efficientnet_v2_s": [[90, null]], "efficientnet_v2_xl": [[91, null]], "faster_rcnn_resnet_101_fpn": [[232, null]], "faster_rcnn_resnet_50_fpn": [[233, null]], "inception_next_atto": [[101, null]], "inception_next_base": [[102, null]], "inception_next_small": [[103, null]], "inception_next_tiny": [[104, null]], "inception_resnet_v1": [[106, null]], "inception_resnet_v2": [[107, null]], "inception_v1": [[97, null]], "inception_v3": [[98, null]], "inception_v4": [[99, null]], "lenet_1": [[110, null]], "lenet_4": [[111, null]], "lenet_5": [[112, null]], "lr_scheduler.CosineAnnealingLR": [[439, null]], "lr_scheduler.CyclicLR": [[440, null]], "lr_scheduler.ExponentialLR": [[441, null]], "lr_scheduler.LRScheduler": [[442, null]], "lr_scheduler.LambdaLR": [[443, null]], "lr_scheduler.MultiStepLR": [[444, null]], "lr_scheduler.ReduceLROnPlateau": [[445, null]], "lr_scheduler.StepLR": [[446, null]], "lucid.Numeric": [[461, null]], "lucid.Tensor": [[478, null]], "lucid.abs": [[504, null]], "lucid.add": [[479, null]], "lucid.arange": [[491, null]], "lucid.arccos": [[505, null]], "lucid.arcsin": [[506, null]], "lucid.arctan": [[507, null]], "lucid.argmax": [[537, null]], "lucid.argmin": [[538, null]], "lucid.argsort": [[539, null]], "lucid.broadcast_to": [[540, null]], "lucid.ceil": [[508, null]], "lucid.chunk": [[541, null]], "lucid.clip": [[509, null]], "lucid.concatenate": [[542, null]], "lucid.cos": [[510, null]], "lucid.cosh": [[511, null]], "lucid.count_flops": [[462, null]], "lucid.cube": [[512, null]], "lucid.cumprod": [[513, null]], "lucid.cumsum": [[514, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[492, null]], "lucid.diagonal": [[543, null]], "lucid.div": [[480, null]], "lucid.dot": [[481, null]], "lucid.einops": [[10, null]], "lucid.einops.einsum": [[11, null]], "lucid.einops.rearrange": [[13, null]], "lucid.einops.reduce": [[14, null]], "lucid.einops.repeat": [[15, null]], "lucid.empty": [[493, null]], "lucid.empty_like": [[494, null]], "lucid.exp": [[515, null]], "lucid.eye": [[495, null]], "lucid.flatten": [[544, null]], "lucid.floor": [[516, null]], "lucid.full": [[496, null]], "lucid.full_like": [[497, null]], "lucid.grad_enabled": [[463, null]], "lucid.histogram": [[545, null]], "lucid.histogram2d": [[546, null]], "lucid.histogramdd": [[547, null]], "lucid.hstack": [[548, null]], "lucid.inner": [[482, null]], "lucid.linalg": [[17, null]], "lucid.linalg.cholesky": [[18, null]], "lucid.linalg.det": [[19, null]], "lucid.linalg.eig": [[20, null]], "lucid.linalg.inv": [[22, null]], "lucid.linalg.matrix_power": [[23, null]], "lucid.linalg.norm": [[24, null]], "lucid.linalg.pinv": [[25, null]], "lucid.linalg.qr": [[26, null]], "lucid.linalg.solve": [[27, null]], "lucid.linalg.svd": [[28, null]], "lucid.linspace": [[498, null]], "lucid.load": [[467, null]], "lucid.log": [[517, null]], "lucid.log2": [[518, null]], "lucid.masked_fill": [[550, null]], "lucid.matmul": [[483, null]], "lucid.max": [[519, null]], "lucid.maximum": [[484, null]], "lucid.mean": [[520, null]], "lucid.meshgrid": [[551, null]], "lucid.min": [[521, null]], "lucid.minimum": [[485, null]], "lucid.models": [[218, null]], "lucid.multiply": [[486, null]], "lucid.newaxis": [[464, null]], "lucid.nn": [[436, null]], "lucid.nn.functional": [[299, null]], "lucid.no_grad": [[465, null]], "lucid.nonzero": [[552, null]], "lucid.ones": [[499, null]], "lucid.ones_like": [[500, null]], "lucid.optim": [[448, null]], "lucid.outer": [[487, null]], "lucid.pad": [[553, null]], "lucid.power": [[488, null]], "lucid.random": [[477, null]], "lucid.random.bernoulli": [[469, null]], "lucid.random.permutation": [[471, null]], "lucid.random.rand": [[472, null]], "lucid.random.randint": [[473, null]], "lucid.random.randn": [[474, null]], "lucid.random.seed": [[475, null]], "lucid.random.uniform": [[476, null]], "lucid.ravel": [[554, null]], "lucid.reciprocal": [[522, null]], "lucid.register_model": [[466, null]], "lucid.repeat": [[555, null]], "lucid.reshape": [[556, null]], "lucid.roll": [[557, null]], "lucid.round": [[523, null]], "lucid.save": [[468, null]], "lucid.sign": [[524, null]], "lucid.sin": [[525, null]], "lucid.sinh": [[526, null]], "lucid.sort": [[558, null]], "lucid.split": [[559, null]], "lucid.sqrt": [[527, null]], "lucid.square": [[528, null]], "lucid.squeeze": [[560, null]], "lucid.stack": [[561, null]], "lucid.sub": [[489, null]], "lucid.sum": [[529, null]], "lucid.swapaxes": [[530, null]], "lucid.tan": [[531, null]], "lucid.tanh": [[532, null]], "lucid.tensor": [[536, null]], "lucid.tensordot": [[490, null]], "lucid.tile": [[562, null]], "lucid.topk": [[563, null]], "lucid.trace": [[533, null]], "lucid.transforms": [[582, null]], "lucid.transpose": [[534, null]], "lucid.tril": [[564, null]], "lucid.triu": [[565, null]], "lucid.unbind": [[566, null]], "lucid.unique": [[567, null]], "lucid.unsqueeze": [[568, null]], "lucid.var": [[535, null]], "lucid.visual": [[584, null]], "lucid.vstack": [[569, null]], "lucid.weights": [[586, null]], "lucid.where": [[570, null]], "lucid.zeros": [[501, null]], "lucid.zeros_like": [[502, null]], "maxvit_base": [[114, null], [115, null]], "maxvit_small": [[116, null]], "maxvit_tiny": [[117, null]], "maxvit_xlarge": [[118, null]], "mobilenet": [[123, null]], "mobilenet_v2": [[124, null]], "mobilenet_v3_large": [[125, null]], "mobilenet_v3_small": [[126, null]], "mobilenet_v4_conv_large": [[127, null]], "mobilenet_v4_conv_medium": [[128, null]], "mobilenet_v4_conv_small": [[129, null]], "mobilenet_v4_hybrid_large": [[130, null]], "mobilenet_v4_hybrid_medium": [[131, null]], "nn.AdaptiveAvgPool1d": [[413, null]], "nn.AdaptiveAvgPool2d": [[414, null]], "nn.AdaptiveAvgPool3d": [[415, null]], "nn.AdaptiveMaxPool1d": [[416, null]], "nn.AdaptiveMaxPool2d": [[417, null]], "nn.AdaptiveMaxPool3d": [[418, null]], "nn.AlphaDropout": [[380, null]], "nn.AvgPool1d": [[419, null]], "nn.AvgPool2d": [[420, null]], "nn.AvgPool3d": [[421, null]], "nn.BCELoss": [[396, null]], "nn.BCEWithLogitsLoss": [[397, null]], "nn.BatchNorm1d": [[403, null]], "nn.BatchNorm2d": [[404, null]], "nn.BatchNorm3d": [[405, null]], "nn.Bilinear": [[391, null]], "nn.Buffer": [[263, null]], "nn.Conv1d": [[372, null]], "nn.Conv2d": [[373, null]], "nn.Conv3d": [[374, null]], "nn.ConvBNReLU1d": [[338, null]], "nn.ConvBNReLU2d": [[339, null]], "nn.ConvBNReLU3d": [[340, null]], "nn.ConvTranspose1d": [[375, null]], "nn.ConvTranspose2d": [[376, null]], "nn.ConvTranspose3d": [[377, null]], "nn.CrossEntropyLoss": [[398, null]], "nn.DepthSeparableConv1d": [[341, null]], "nn.DepthSeparableConv2d": [[342, null]], "nn.DepthSeparableConv3d": [[343, null]], "nn.DropBlock": [[381, null]], "nn.DropPath": [[382, null]], "nn.Dropout": [[383, null]], "nn.Dropout1d": [[384, null]], "nn.Dropout2d": [[385, null]], "nn.Dropout3d": [[386, null]], "nn.ELU": [[355, null]], "nn.Embedding": [[426, null]], "nn.Flatten": [[392, null]], "nn.GELU": [[356, null]], "nn.GlobalResponseNorm": [[406, null]], "nn.GroupNorm": [[407, null]], "nn.HardSigmoid": [[357, null]], "nn.HardSwish": [[358, null]], "nn.HuberLoss": [[399, null]], "nn.Identity": [[393, null]], "nn.InstanceNorm1d": [[408, null]], "nn.InstanceNorm2d": [[409, null]], "nn.InstanceNorm3d": [[410, null]], "nn.LayerNorm": [[411, null]], "nn.LeakyReLU": [[359, null]], "nn.Linear": [[394, null]], "nn.MSELoss": [[400, null]], "nn.MaxPool1d": [[422, null]], "nn.MaxPool2d": [[423, null]], "nn.MaxPool3d": [[424, null]], "nn.Mish": [[360, null]], "nn.Module": [[264, null]], "nn.ModuleDict": [[266, null]], "nn.ModuleList": [[267, null]], "nn.MultiHeadAttention": [[369, null]], "nn.NLLLoss": [[401, null]], "nn.Parameter": [[265, null]], "nn.ParameterDict": [[268, null]], "nn.ParameterList": [[269, null]], "nn.ReLU": [[361, null]], "nn.ReLU6": [[362, null]], "nn.Rearrange": [[388, null]], "nn.SELU": [[363, null]], "nn.SEModule": [[344, null]], "nn.ScaledDotProductAttention": [[370, null]], "nn.SelectiveKernel": [[345, null]], "nn.Sequential": [[270, null]], "nn.Sigmoid": [[364, null]], "nn.Softmax": [[365, null]], "nn.Swish": [[366, null]], "nn.Tanh": [[367, null]], "nn.Transformer": [[428, null]], "nn.TransformerDecoder": [[429, null]], "nn.TransformerDecoderLayer": [[430, null]], "nn.TransformerEncoder": [[431, null]], "nn.TransformerEncoderLayer": [[432, null]], "nn.Unfold": [[378, null]], "nn.Upsample": [[434, null]], "nn.functional.adaptive_avg_pool1d": [[317, null]], "nn.functional.adaptive_avg_pool2d": [[318, null]], "nn.functional.adaptive_avg_pool3d": [[319, null]], "nn.functional.adaptive_max_pool1d": [[320, null]], "nn.functional.adaptive_max_pool2d": [[321, null]], "nn.functional.adaptive_max_pool3d": [[322, null]], "nn.functional.affine_grid": [[330, null]], "nn.functional.alpha_dropout": [[291, null]], "nn.functional.avg_pool1d": [[323, null]], "nn.functional.avg_pool2d": [[324, null]], "nn.functional.avg_pool3d": [[325, null]], "nn.functional.batch_norm": [[310, null]], "nn.functional.bilinear": [[300, null]], "nn.functional.binary_cross_entropy": [[303, null]], "nn.functional.binary_cross_entropy_with_logits": [[304, null]], "nn.functional.conv1d": [[283, null]], "nn.functional.conv2d": [[284, null]], "nn.functional.conv3d": [[285, null]], "nn.functional.conv_transpose1d": [[286, null]], "nn.functional.conv_transpose2d": [[287, null]], "nn.functional.conv_transpose3d": [[288, null]], "nn.functional.cross_entropy": [[305, null]], "nn.functional.drop_block": [[292, null]], "nn.functional.drop_path": [[293, null]], "nn.functional.dropout": [[294, null]], "nn.functional.dropout1d": [[295, null]], "nn.functional.dropout2d": [[296, null]], "nn.functional.dropout3d": [[297, null]], "nn.functional.elu": [[272, null]], "nn.functional.embedding": [[333, null]], "nn.functional.gelu": [[273, null]], "nn.functional.global_response_norm": [[311, null]], "nn.functional.grid_sample": [[331, null]], "nn.functional.group_norm": [[312, null]], "nn.functional.huber_loss": [[306, null]], "nn.functional.instance_norm": [[314, null]], "nn.functional.interpolate": [[335, null]], "nn.functional.layer_norm": [[315, null]], "nn.functional.leaky_relu": [[275, null]], "nn.functional.linear": [[302, null]], "nn.functional.max_pool1d": [[327, null]], "nn.functional.max_pool2d": [[328, null]], "nn.functional.max_pool3d": [[329, null]], "nn.functional.mse_loss": [[308, null]], "nn.functional.nll_loss": [[309, null]], "nn.functional.normalize": [[316, null]], "nn.functional.one_hot": [[336, null]], "nn.functional.relu": [[276, null]], "nn.functional.rotate": [[337, null]], "nn.functional.scaled_dot_product_attention": [[282, null]], "nn.functional.selu": [[277, null]], "nn.functional.sigmoid": [[278, null]], "nn.functional.softmax": [[279, null]], "nn.functional.tanh": [[280, null]], "nn.functional.unfold": [[290, null]], "nn.init.constant": [[347, null]], "nn.init.kaiming_normal": [[349, null]], "nn.init.kaiming_uniform": [[350, null]], "nn.init.normal": [[351, null]], "nn.init.uniform": [[352, null]], "nn.init.xavier_normal": [[353, null]], "nn.init.xavier_uniform": [[354, null]], "optim.ASGD": [[449, null]], "optim.Adadelta": [[450, null]], "optim.Adagrad": [[451, null]], "optim.Adam": [[452, null]], "optim.AdamW": [[453, null]], "optim.Adamax": [[454, null]], "optim.NAdam": [[455, null]], "optim.Optimizer": [[437, null]], "optim.RAdam": [[456, null]], "optim.RMSprop": [[457, null]], "optim.Rprop": [[458, null]], "optim.SGD": [[459, null]], "optim.lr_scheduler": [[438, null]], "pvt_huge": [[134, null]], "pvt_large": [[135, null]], "pvt_medium": [[136, null]], "pvt_small": [[137, null]], "pvt_tiny": [[138, null]], "pvt_v2_b0": [[139, null]], "pvt_v2_b1": [[140, null]], "pvt_v2_b2": [[141, null]], "pvt_v2_b2_li": [[142, null]], "pvt_v2_b3": [[143, null]], "pvt_v2_b4": [[144, null]], "pvt_v2_b5": [[145, null]], "rearrange": [[10, "rearrange"]], "reduce": [[10, "reduce"]], "repeat": [[10, "repeat"]], "resnest_101": [[147, null]], "resnest_14": [[148, null]], "resnest_200": [[149, null]], "resnest_26": [[150, null]], "resnest_269": [[151, null]], "resnest_50": [[152, null]], "resnest_50_1s4x24d": [[153, null]], "resnest_50_4s2x40d": [[154, null]], "resnet_1001": [[156, null]], "resnet_101": [[157, null]], "resnet_152": [[158, null]], "resnet_18": [[159, null]], "resnet_200": [[160, null]], "resnet_269": [[161, null]], "resnet_34": [[162, null]], "resnet_50": [[163, null]], "resnext_101_32x16d": [[167, null]], "resnext_101_32x32d": [[168, null]], "resnext_101_32x4d": [[169, null]], "resnext_101_32x8d": [[170, null]], "resnext_101_64x4d": [[171, null]], "resnext_50_32x4d": [[172, null]], "se_resnet_101": [[174, null]], "se_resnet_152": [[175, null]], "se_resnet_18": [[176, null]], "se_resnet_34": [[177, null]], "se_resnet_50": [[178, null]], "se_resnext_101_32x4d": [[179, null]], "se_resnext_101_32x8d": [[180, null]], "se_resnext_101_64x4d": [[181, null]], "se_resnext_50_32x4d": [[182, null]], "sk_resnet_18": [[184, null]], "sk_resnet_34": [[185, null]], "sk_resnet_50": [[186, null]], "sk_resnext_50_32x4d": [[187, null]], "swin_base": [[190, null]], "swin_large": [[191, null]], "swin_small": [[192, null]], "swin_tiny": [[193, null]], "swin_v2_base": [[194, null]], "swin_v2_giant": [[195, null]], "swin_v2_huge": [[196, null]], "swin_v2_large": [[197, null]], "swin_v2_small": [[198, null]], "swin_v2_tiny": [[199, null]], "transformer_base": [[261, null]], "transformer_big": [[262, null]], "transforms.CenterCrop": [[573, null]], "transforms.Compose": [[571, null]], "transforms.Normalize": [[574, null]], "transforms.RandomCrop": [[575, null]], "transforms.RandomGrayscale": [[576, null]], "transforms.RandomHorizontalFlip": [[577, null]], "transforms.RandomRotation": [[578, null]], "transforms.RandomVerticalFlip": [[579, null]], "transforms.Resize": [[580, null]], "transforms.ToTensor": [[572, null]], "util.FPN": [[237, null]], "util.MultiScaleROIAlign": [[238, null]], "util.ROIAlign": [[239, null]], "util.SelectiveSearch": [[240, null]], "util.apply_deltas": [[241, null]], "util.bbox_to_delta": [[242, null]], "util.clip_boxes": [[243, null]], "util.iou": [[245, null]], "util.nms": [[246, null]], "vggnet_11": [[201, null]], "vggnet_13": [[202, null]], "vggnet_16": [[203, null]], "vggnet_19": [[204, null]], "visual.draw_tensor_graph": [[583, null]], "vit_base": [[206, null]], "vit_huge": [[207, null]], "vit_large": [[208, null]], "vit_small": [[209, null]], "vit_tiny": [[210, null]], "wide_resnet_101": [[164, null]], "wide_resnet_50": [[165, null]], "xception": [[212, null]], "yolo_v1": [[249, null]], "yolo_v1_tiny": [[250, null]], "yolo_v2": [[252, null]], "yolo_v2_tiny": [[253, null]], "yolo_v3": [[255, null]], "yolo_v3_tiny": [[256, null]], "yolo_v4": [[258, null]], "zfnet": [[214, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/CIFAR10", "datasets/image/CIFAR100", "datasets/image/FashionMNIST", "datasets/image/MNIST", "datasets/image/index", "einops/einops", "einops/functions/einsum", "einops/functions/index", "einops/functions/rearrange", "einops/functions/reduce", "einops/functions/repeat", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/imgclf/alex/AlexNet_", "models/imgclf/alex/alexnet", "models/imgclf/coatnet/CoAtNet", "models/imgclf/coatnet/coatnet_0", "models/imgclf/coatnet/coatnet_1", "models/imgclf/coatnet/coatnet_2", "models/imgclf/coatnet/coatnet_3", "models/imgclf/coatnet/coatnet_4", "models/imgclf/coatnet/coatnet_5", "models/imgclf/coatnet/coatnet_6", "models/imgclf/coatnet/coatnet_7", "models/imgclf/convnext/ConvNeXt", "models/imgclf/convnext/ConvNeXt_V2", "models/imgclf/convnext/convnext_base", "models/imgclf/convnext/convnext_large", "models/imgclf/convnext/convnext_small", "models/imgclf/convnext/convnext_tiny", "models/imgclf/convnext/convnext_v2_atto", "models/imgclf/convnext/convnext_v2_base", "models/imgclf/convnext/convnext_v2_femto", "models/imgclf/convnext/convnext_v2_huge", "models/imgclf/convnext/convnext_v2_large", "models/imgclf/convnext/convnext_v2_nano", "models/imgclf/convnext/convnext_v2_pico", "models/imgclf/convnext/convnext_v2_tiny", "models/imgclf/convnext/convnext_xlarge", "models/imgclf/crossvit/CrossViT", "models/imgclf/crossvit/crossvit_15", "models/imgclf/crossvit/crossvit_15_dagger", "models/imgclf/crossvit/crossvit_18", "models/imgclf/crossvit/crossvit_18_dagger", "models/imgclf/crossvit/crossvit_9", "models/imgclf/crossvit/crossvit_9_dagger", "models/imgclf/crossvit/crossvit_base", "models/imgclf/crossvit/crossvit_small", "models/imgclf/crossvit/crossvit_tiny", "models/imgclf/cspnet/CSPNet", "models/imgclf/cspnet/csp_darknet_53", "models/imgclf/cspnet/csp_resnet_50", "models/imgclf/cspnet/csp_resnext_50_32x4d", "models/imgclf/cvt/CvT", "models/imgclf/cvt/cvt_13", "models/imgclf/cvt/cvt_21", "models/imgclf/cvt/cvt_w24", "models/imgclf/dense/DenseNet", "models/imgclf/dense/densenet_121", "models/imgclf/dense/densenet_169", "models/imgclf/dense/densenet_201", "models/imgclf/dense/densenet_264", "models/imgclf/efficient/EfficientNet", "models/imgclf/efficient/EfficientNet_V2", "models/imgclf/efficient/efficientnet_b0", "models/imgclf/efficient/efficientnet_b1", "models/imgclf/efficient/efficientnet_b2", "models/imgclf/efficient/efficientnet_b3", "models/imgclf/efficient/efficientnet_b4", "models/imgclf/efficient/efficientnet_b5", "models/imgclf/efficient/efficientnet_b6", "models/imgclf/efficient/efficientnet_b7", "models/imgclf/efficient/efficientnet_v2_l", "models/imgclf/efficient/efficientnet_v2_m", "models/imgclf/efficient/efficientnet_v2_s", "models/imgclf/efficient/efficientnet_v2_xl", "models/imgclf/efficientformer/EfficientFormer", "models/imgclf/efficientformer/efficientformer_l1", "models/imgclf/efficientformer/efficientformer_l3", "models/imgclf/efficientformer/efficientformer_l7", "models/imgclf/inception/Inception", "models/imgclf/inception/inception_v1", "models/imgclf/inception/inception_v3", "models/imgclf/inception/inception_v4", "models/imgclf/inception_next/InceptionNeXt", "models/imgclf/inception_next/inception_next_atto", "models/imgclf/inception_next/inception_next_base", "models/imgclf/inception_next/inception_next_small", "models/imgclf/inception_next/inception_next_tiny", "models/imgclf/inception_res/InceptionResNet", "models/imgclf/inception_res/inception_resnet_v1", "models/imgclf/inception_res/inception_resnet_v2", "models/imgclf/index", "models/imgclf/lenet/LeNet", "models/imgclf/lenet/lenet_1", "models/imgclf/lenet/lenet_4", "models/imgclf/lenet/lenet_5", "models/imgclf/maxvit/MaxViT", "models/imgclf/maxvit/maxvit_base", "models/imgclf/maxvit/maxvit_large", "models/imgclf/maxvit/maxvit_small", "models/imgclf/maxvit/maxvit_tiny", "models/imgclf/maxvit/maxvit_xlarge", "models/imgclf/mobile/MobileNet_", "models/imgclf/mobile/MobileNet_V2_", "models/imgclf/mobile/MobileNet_V3", "models/imgclf/mobile/MobileNet_V4", "models/imgclf/mobile/mobilenet", "models/imgclf/mobile/mobilenet_v2", "models/imgclf/mobile/mobilenet_v3_large", "models/imgclf/mobile/mobilenet_v3_small", "models/imgclf/mobile/mobilenet_v4_conv_large", "models/imgclf/mobile/mobilenet_v4_conv_medium", "models/imgclf/mobile/mobilenet_v4_conv_small", "models/imgclf/mobile/mobilenet_v4_hybrid_large", "models/imgclf/mobile/mobilenet_v4_hybrid_medium", "models/imgclf/pvt/PVT", "models/imgclf/pvt/PVT_V2", "models/imgclf/pvt/pvt_huge", "models/imgclf/pvt/pvt_large", "models/imgclf/pvt/pvt_medium", "models/imgclf/pvt/pvt_small", "models/imgclf/pvt/pvt_tiny", "models/imgclf/pvt/pvt_v2_b0", "models/imgclf/pvt/pvt_v2_b1", "models/imgclf/pvt/pvt_v2_b2", "models/imgclf/pvt/pvt_v2_b2_li", "models/imgclf/pvt/pvt_v2_b3", "models/imgclf/pvt/pvt_v2_b4", "models/imgclf/pvt/pvt_v2_b5", "models/imgclf/resnest/ResNeSt", "models/imgclf/resnest/resnest_101", "models/imgclf/resnest/resnest_14", "models/imgclf/resnest/resnest_200", "models/imgclf/resnest/resnest_26", "models/imgclf/resnest/resnest_269", "models/imgclf/resnest/resnest_50", "models/imgclf/resnest/resnest_50_1s4x24d", "models/imgclf/resnest/resnest_50_4s2x40d", "models/imgclf/resnet/ResNet", "models/imgclf/resnet/resnet_1001", "models/imgclf/resnet/resnet_101", "models/imgclf/resnet/resnet_152", "models/imgclf/resnet/resnet_18", "models/imgclf/resnet/resnet_200", "models/imgclf/resnet/resnet_269", "models/imgclf/resnet/resnet_34", "models/imgclf/resnet/resnet_50", "models/imgclf/resnet/wide_resnet_101", "models/imgclf/resnet/wide_resnet_50", "models/imgclf/resnext/ResNeXt", "models/imgclf/resnext/resnext_101_32x16d", "models/imgclf/resnext/resnext_101_32x32d", "models/imgclf/resnext/resnext_101_32x4d", "models/imgclf/resnext/resnext_101_32x8d", "models/imgclf/resnext/resnext_101_64x4d", "models/imgclf/resnext/resnext_50_32x4d", "models/imgclf/senet/SENet", "models/imgclf/senet/se_resnet_101", "models/imgclf/senet/se_resnet_152", "models/imgclf/senet/se_resnet_18", "models/imgclf/senet/se_resnet_34", "models/imgclf/senet/se_resnet_50", "models/imgclf/senet/se_resnext_101_32x4d", "models/imgclf/senet/se_resnext_101_32x8d", "models/imgclf/senet/se_resnext_101_64x4d", "models/imgclf/senet/se_resnext_50_32x4d", "models/imgclf/sknet/SKNet", "models/imgclf/sknet/sk_resnet_18", "models/imgclf/sknet/sk_resnet_34", "models/imgclf/sknet/sk_resnet_50", "models/imgclf/sknet/sk_resnext_50_32x4d", "models/imgclf/swin/SwinTransformer", "models/imgclf/swin/SwinTransformer_V2", "models/imgclf/swin/swin_base", "models/imgclf/swin/swin_large", "models/imgclf/swin/swin_small", "models/imgclf/swin/swin_tiny", "models/imgclf/swin/swin_v2_base", "models/imgclf/swin/swin_v2_giant", "models/imgclf/swin/swin_v2_huge", "models/imgclf/swin/swin_v2_large", "models/imgclf/swin/swin_v2_small", "models/imgclf/swin/swin_v2_tiny", "models/imgclf/vgg/VGGNet", "models/imgclf/vgg/vggnet_11", "models/imgclf/vgg/vggnet_13", "models/imgclf/vgg/vggnet_16", "models/imgclf/vgg/vggnet_19", "models/imgclf/vit/ViT", "models/imgclf/vit/vit_base", "models/imgclf/vit/vit_huge", "models/imgclf/vit/vit_large", "models/imgclf/vit/vit_small", "models/imgclf/vit/vit_tiny", "models/imgclf/xception/Xception_", "models/imgclf/xception/xception", "models/imgclf/zfnet/ZFNet_", "models/imgclf/zfnet/zfnet", "models/imggen/autoencoder/VAE", "models/imggen/diffusion/DDPM", "models/imggen/index", "models/models", "models/objdet/detr/DETR", "models/objdet/detr/detr_r101", "models/objdet/detr/detr_r50", "models/objdet/efficientdet/EfficientDet", "models/objdet/efficientdet/efficientdet_d0", "models/objdet/efficientdet/efficientdet_d1", "models/objdet/efficientdet/efficientdet_d2", "models/objdet/efficientdet/efficientdet_d3", "models/objdet/efficientdet/efficientdet_d4", "models/objdet/efficientdet/efficientdet_d5", "models/objdet/efficientdet/efficientdet_d6", "models/objdet/efficientdet/efficientdet_d7", "models/objdet/faster_rcnn/FasterRCNN", "models/objdet/faster_rcnn/faster_rcnn_resnet_101_fpn", "models/objdet/faster_rcnn/faster_rcnn_resnet_50_fpn", "models/objdet/index", "models/objdet/rcnn/FastRCNN", "models/objdet/rcnn/RCNN", "models/objdet/utilities/FPN", "models/objdet/utilities/MultiScaleROIAlign", "models/objdet/utilities/ROIAlign", "models/objdet/utilities/SelectiveSearch", "models/objdet/utilities/apply_deltas", "models/objdet/utilities/bbox_to_delta", "models/objdet/utilities/clip_boxes", "models/objdet/utilities/index", "models/objdet/utilities/iou", "models/objdet/utilities/nms", "models/objdet/yolo/index", "models/objdet/yolo/v1/YOLO_V1_", "models/objdet/yolo/v1/yolo_v1", "models/objdet/yolo/v1/yolo_v1_tiny", "models/objdet/yolo/v2/YOLO_V2_", "models/objdet/yolo/v2/yolo_v2", "models/objdet/yolo/v2/yolo_v2_tiny", "models/objdet/yolo/v3/YOLO_V3_", "models/objdet/yolo/v3/yolo_v3", "models/objdet/yolo/v3/yolo_v3_tiny", "models/objdet/yolo/v4/YOLO_V4_", "models/objdet/yolo/v4/yolo_v4", "models/seq2seq/index", "models/seq2seq/transformer/Transformer", "models/seq2seq/transformer/transformer_base", "models/seq2seq/transformer/transformer_big", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/attention/index", "nn/functions/attention/scaled_dot_product_attention", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/conv_transpose1d", "nn/functions/conv/conv_transpose2d", "nn/functions/conv/conv_transpose3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/drop_block", "nn/functions/drop/drop_path", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/binary_cross_entropy_with_logits", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/global_response_norm", "nn/functions/norm/group_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/norm/normalize", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/adaptive_max_pool1d", "nn/functions/pool/adaptive_max_pool2d", "nn/functions/pool/adaptive_max_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/spatial/affine_grid", "nn/functions/spatial/grid_sample", "nn/functions/spatial/index", "nn/functions/util/embedding", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/one_hot", "nn/functions/util/rotate", "nn/fused/ConvBNReLU1d", "nn/fused/ConvBNReLU2d", "nn/fused/ConvBNReLU3d", "nn/fused/DepthSeparableConv1d", "nn/fused/DepthSeparableConv2d", "nn/fused/DepthSeparableConv3d", "nn/fused/SEModule", "nn/fused/SelectiveKernel", "nn/fused/index", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/HardSigmoid", "nn/modules/activation/HardSwish", "nn/modules/activation/LeakyReLU", "nn/modules/activation/Mish", "nn/modules/activation/ReLU", "nn/modules/activation/ReLU6", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Swish", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/attention/MultiHeadAttention", "nn/modules/attention/ScaledDotProductAttention", "nn/modules/attention/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/ConvTranspose1d", "nn/modules/conv/ConvTranspose2d", "nn/modules/conv/ConvTranspose3d", "nn/modules/conv/Unfold", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/DropBlock", "nn/modules/drop/DropPath", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/einops/Rearrange", "nn/modules/einops/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Flatten", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/BCEWithLogitsLoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/GlobalResponseNorm", "nn/modules/norm/GroupNorm", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AdaptiveMaxPool1d", "nn/modules/pool/AdaptiveMaxPool2d", "nn/modules/pool/AdaptiveMaxPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/modules/sparse/Embedding", "nn/modules/sparse/index", "nn/modules/transformer/Transformer", "nn/modules/transformer/TransformerDecoder", "nn/modules/transformer/TransformerDecoderLayer", "nn/modules/transformer/TransformerEncoder", "nn/modules/transformer/TransformerEncoderLayer", "nn/modules/transformer/index", "nn/modules/vision/Upsample", "nn/modules/vision/index", "nn/nn", "optim/Optimizer", "optim/lr_scheduler", "optim/lr_scheduler/CosineAnnealingLR", "optim/lr_scheduler/CyclicLR", "optim/lr_scheduler/ExponentialLR", "optim/lr_scheduler/LRScheduler", "optim/lr_scheduler/LambdaLR", "optim/lr_scheduler/MultiStepLR", "optim/lr_scheduler/ReduceLROnPlateau", "optim/lr_scheduler/StepLR", "optim/lr_scheduler/index", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/Numeric", "others/count_flops", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "porting/load", "porting/save", "random/functions/bernoulli", "random/functions/index", "random/functions/permutation", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/multiply", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/bfunc/tensordot", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/full", "tensor/operations/gfunc/full_like", "tensor/operations/gfunc/linspace", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/ceil", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/cumprod", "tensor/operations/ufunc/cumsum", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/floor", "tensor/operations/ufunc/log", "tensor/operations/ufunc/log2", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/round", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/swapaxes", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/argmax", "tensor/utilities/argmin", "tensor/utilities/argsort", "tensor/utilities/broadcast_to", "tensor/utilities/chunk", "tensor/utilities/concatenate", "tensor/utilities/diagonal", "tensor/utilities/flatten", "tensor/utilities/histogram", "tensor/utilities/histogram2d", "tensor/utilities/histogramdd", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/masked_fill", "tensor/utilities/meshgrid", "tensor/utilities/nonzero", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/roll", "tensor/utilities/sort", "tensor/utilities/split", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/topk", "tensor/utilities/tril", "tensor/utilities/triu", "tensor/utilities/unbind", "tensor/utilities/unique", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "tensor/utilities/where", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms", "visual/draw_tensor_graph", "visual/visual", "weights/list", "weights/weights"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/CIFAR10.rst", "datasets/image/CIFAR100.rst", "datasets/image/FashionMNIST.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "einops/einops.rst", "einops/functions/einsum.rst", "einops/functions/index.rst", "einops/functions/rearrange.rst", "einops/functions/reduce.rst", "einops/functions/repeat.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/imgclf/alex/AlexNet_.rst", "models/imgclf/alex/alexnet.rst", "models/imgclf/coatnet/CoAtNet.rst", "models/imgclf/coatnet/coatnet_0.rst", "models/imgclf/coatnet/coatnet_1.rst", "models/imgclf/coatnet/coatnet_2.rst", "models/imgclf/coatnet/coatnet_3.rst", "models/imgclf/coatnet/coatnet_4.rst", "models/imgclf/coatnet/coatnet_5.rst", "models/imgclf/coatnet/coatnet_6.rst", "models/imgclf/coatnet/coatnet_7.rst", "models/imgclf/convnext/ConvNeXt.rst", "models/imgclf/convnext/ConvNeXt_V2.rst", "models/imgclf/convnext/convnext_base.rst", "models/imgclf/convnext/convnext_large.rst", "models/imgclf/convnext/convnext_small.rst", "models/imgclf/convnext/convnext_tiny.rst", "models/imgclf/convnext/convnext_v2_atto.rst", "models/imgclf/convnext/convnext_v2_base.rst", "models/imgclf/convnext/convnext_v2_femto.rst", "models/imgclf/convnext/convnext_v2_huge.rst", "models/imgclf/convnext/convnext_v2_large.rst", "models/imgclf/convnext/convnext_v2_nano.rst", "models/imgclf/convnext/convnext_v2_pico.rst", "models/imgclf/convnext/convnext_v2_tiny.rst", "models/imgclf/convnext/convnext_xlarge.rst", "models/imgclf/crossvit/CrossViT.rst", "models/imgclf/crossvit/crossvit_15.rst", "models/imgclf/crossvit/crossvit_15_dagger.rst", "models/imgclf/crossvit/crossvit_18.rst", "models/imgclf/crossvit/crossvit_18_dagger.rst", "models/imgclf/crossvit/crossvit_9.rst", "models/imgclf/crossvit/crossvit_9_dagger.rst", "models/imgclf/crossvit/crossvit_base.rst", "models/imgclf/crossvit/crossvit_small.rst", "models/imgclf/crossvit/crossvit_tiny.rst", "models/imgclf/cspnet/CSPNet.rst", "models/imgclf/cspnet/csp_darknet_53.rst", "models/imgclf/cspnet/csp_resnet_50.rst", "models/imgclf/cspnet/csp_resnext_50_32x4d.rst", "models/imgclf/cvt/CvT.rst", "models/imgclf/cvt/cvt_13.rst", "models/imgclf/cvt/cvt_21.rst", "models/imgclf/cvt/cvt_w24.rst", "models/imgclf/dense/DenseNet.rst", "models/imgclf/dense/densenet_121.rst", "models/imgclf/dense/densenet_169.rst", "models/imgclf/dense/densenet_201.rst", "models/imgclf/dense/densenet_264.rst", "models/imgclf/efficient/EfficientNet.rst", "models/imgclf/efficient/EfficientNet_V2.rst", "models/imgclf/efficient/efficientnet_b0.rst", "models/imgclf/efficient/efficientnet_b1.rst", "models/imgclf/efficient/efficientnet_b2.rst", "models/imgclf/efficient/efficientnet_b3.rst", "models/imgclf/efficient/efficientnet_b4.rst", "models/imgclf/efficient/efficientnet_b5.rst", "models/imgclf/efficient/efficientnet_b6.rst", "models/imgclf/efficient/efficientnet_b7.rst", "models/imgclf/efficient/efficientnet_v2_l.rst", "models/imgclf/efficient/efficientnet_v2_m.rst", "models/imgclf/efficient/efficientnet_v2_s.rst", "models/imgclf/efficient/efficientnet_v2_xl.rst", "models/imgclf/efficientformer/EfficientFormer.rst", "models/imgclf/efficientformer/efficientformer_l1.rst", "models/imgclf/efficientformer/efficientformer_l3.rst", "models/imgclf/efficientformer/efficientformer_l7.rst", "models/imgclf/inception/Inception.rst", "models/imgclf/inception/inception_v1.rst", "models/imgclf/inception/inception_v3.rst", "models/imgclf/inception/inception_v4.rst", "models/imgclf/inception_next/InceptionNeXt.rst", "models/imgclf/inception_next/inception_next_atto.rst", "models/imgclf/inception_next/inception_next_base.rst", "models/imgclf/inception_next/inception_next_small.rst", "models/imgclf/inception_next/inception_next_tiny.rst", "models/imgclf/inception_res/InceptionResNet.rst", "models/imgclf/inception_res/inception_resnet_v1.rst", "models/imgclf/inception_res/inception_resnet_v2.rst", "models/imgclf/index.rst", "models/imgclf/lenet/LeNet.rst", "models/imgclf/lenet/lenet_1.rst", "models/imgclf/lenet/lenet_4.rst", "models/imgclf/lenet/lenet_5.rst", "models/imgclf/maxvit/MaxViT.rst", "models/imgclf/maxvit/maxvit_base.rst", "models/imgclf/maxvit/maxvit_large.rst", "models/imgclf/maxvit/maxvit_small.rst", "models/imgclf/maxvit/maxvit_tiny.rst", "models/imgclf/maxvit/maxvit_xlarge.rst", "models/imgclf/mobile/MobileNet_.rst", "models/imgclf/mobile/MobileNet_V2_.rst", "models/imgclf/mobile/MobileNet_V3.rst", "models/imgclf/mobile/MobileNet_V4.rst", "models/imgclf/mobile/mobilenet.rst", "models/imgclf/mobile/mobilenet_v2.rst", "models/imgclf/mobile/mobilenet_v3_large.rst", "models/imgclf/mobile/mobilenet_v3_small.rst", "models/imgclf/mobile/mobilenet_v4_conv_large.rst", "models/imgclf/mobile/mobilenet_v4_conv_medium.rst", "models/imgclf/mobile/mobilenet_v4_conv_small.rst", "models/imgclf/mobile/mobilenet_v4_hybrid_large.rst", "models/imgclf/mobile/mobilenet_v4_hybrid_medium.rst", "models/imgclf/pvt/PVT.rst", "models/imgclf/pvt/PVT_V2.rst", "models/imgclf/pvt/pvt_huge.rst", "models/imgclf/pvt/pvt_large.rst", "models/imgclf/pvt/pvt_medium.rst", "models/imgclf/pvt/pvt_small.rst", "models/imgclf/pvt/pvt_tiny.rst", "models/imgclf/pvt/pvt_v2_b0.rst", "models/imgclf/pvt/pvt_v2_b1.rst", "models/imgclf/pvt/pvt_v2_b2.rst", "models/imgclf/pvt/pvt_v2_b2_li.rst", "models/imgclf/pvt/pvt_v2_b3.rst", "models/imgclf/pvt/pvt_v2_b4.rst", "models/imgclf/pvt/pvt_v2_b5.rst", "models/imgclf/resnest/ResNeSt.rst", "models/imgclf/resnest/resnest_101.rst", "models/imgclf/resnest/resnest_14.rst", "models/imgclf/resnest/resnest_200.rst", "models/imgclf/resnest/resnest_26.rst", "models/imgclf/resnest/resnest_269.rst", "models/imgclf/resnest/resnest_50.rst", "models/imgclf/resnest/resnest_50_1s4x24d.rst", "models/imgclf/resnest/resnest_50_4s2x40d.rst", "models/imgclf/resnet/ResNet.rst", "models/imgclf/resnet/resnet_1001.rst", "models/imgclf/resnet/resnet_101.rst", "models/imgclf/resnet/resnet_152.rst", "models/imgclf/resnet/resnet_18.rst", "models/imgclf/resnet/resnet_200.rst", "models/imgclf/resnet/resnet_269.rst", "models/imgclf/resnet/resnet_34.rst", "models/imgclf/resnet/resnet_50.rst", "models/imgclf/resnet/wide_resnet_101.rst", "models/imgclf/resnet/wide_resnet_50.rst", "models/imgclf/resnext/ResNeXt.rst", "models/imgclf/resnext/resnext_101_32x16d.rst", "models/imgclf/resnext/resnext_101_32x32d.rst", "models/imgclf/resnext/resnext_101_32x4d.rst", "models/imgclf/resnext/resnext_101_32x8d.rst", "models/imgclf/resnext/resnext_101_64x4d.rst", "models/imgclf/resnext/resnext_50_32x4d.rst", "models/imgclf/senet/SENet.rst", "models/imgclf/senet/se_resnet_101.rst", "models/imgclf/senet/se_resnet_152.rst", "models/imgclf/senet/se_resnet_18.rst", "models/imgclf/senet/se_resnet_34.rst", "models/imgclf/senet/se_resnet_50.rst", "models/imgclf/senet/se_resnext_101_32x4d.rst", "models/imgclf/senet/se_resnext_101_32x8d.rst", "models/imgclf/senet/se_resnext_101_64x4d.rst", "models/imgclf/senet/se_resnext_50_32x4d.rst", "models/imgclf/sknet/SKNet.rst", "models/imgclf/sknet/sk_resnet_18.rst", "models/imgclf/sknet/sk_resnet_34.rst", "models/imgclf/sknet/sk_resnet_50.rst", "models/imgclf/sknet/sk_resnext_50_32x4d.rst", "models/imgclf/swin/SwinTransformer.rst", "models/imgclf/swin/SwinTransformer_V2.rst", "models/imgclf/swin/swin_base.rst", "models/imgclf/swin/swin_large.rst", "models/imgclf/swin/swin_small.rst", "models/imgclf/swin/swin_tiny.rst", "models/imgclf/swin/swin_v2_base.rst", "models/imgclf/swin/swin_v2_giant.rst", "models/imgclf/swin/swin_v2_huge.rst", "models/imgclf/swin/swin_v2_large.rst", "models/imgclf/swin/swin_v2_small.rst", "models/imgclf/swin/swin_v2_tiny.rst", "models/imgclf/vgg/VGGNet.rst", "models/imgclf/vgg/vggnet_11.rst", "models/imgclf/vgg/vggnet_13.rst", "models/imgclf/vgg/vggnet_16.rst", "models/imgclf/vgg/vggnet_19.rst", "models/imgclf/vit/ViT.rst", "models/imgclf/vit/vit_base.rst", "models/imgclf/vit/vit_huge.rst", "models/imgclf/vit/vit_large.rst", "models/imgclf/vit/vit_small.rst", "models/imgclf/vit/vit_tiny.rst", "models/imgclf/xception/Xception_.rst", "models/imgclf/xception/xception.rst", "models/imgclf/zfnet/ZFNet_.rst", "models/imgclf/zfnet/zfnet.rst", "models/imggen/autoencoder/VAE.rst", "models/imggen/diffusion/DDPM.rst", "models/imggen/index.rst", "models/models.rst", "models/objdet/detr/DETR.rst", "models/objdet/detr/detr_r101.rst", "models/objdet/detr/detr_r50.rst", "models/objdet/efficientdet/EfficientDet.rst", "models/objdet/efficientdet/efficientdet_d0.rst", "models/objdet/efficientdet/efficientdet_d1.rst", "models/objdet/efficientdet/efficientdet_d2.rst", "models/objdet/efficientdet/efficientdet_d3.rst", "models/objdet/efficientdet/efficientdet_d4.rst", "models/objdet/efficientdet/efficientdet_d5.rst", "models/objdet/efficientdet/efficientdet_d6.rst", "models/objdet/efficientdet/efficientdet_d7.rst", "models/objdet/faster_rcnn/FasterRCNN.rst", "models/objdet/faster_rcnn/faster_rcnn_resnet_101_fpn.rst", "models/objdet/faster_rcnn/faster_rcnn_resnet_50_fpn.rst", "models/objdet/index.rst", "models/objdet/rcnn/FastRCNN.rst", "models/objdet/rcnn/RCNN.rst", "models/objdet/utilities/FPN.rst", "models/objdet/utilities/MultiScaleROIAlign.rst", "models/objdet/utilities/ROIAlign.rst", "models/objdet/utilities/SelectiveSearch.rst", "models/objdet/utilities/apply_deltas.rst", "models/objdet/utilities/bbox_to_delta.rst", "models/objdet/utilities/clip_boxes.rst", "models/objdet/utilities/index.rst", "models/objdet/utilities/iou.rst", "models/objdet/utilities/nms.rst", "models/objdet/yolo/index.rst", "models/objdet/yolo/v1/YOLO_V1_.rst", "models/objdet/yolo/v1/yolo_v1.rst", "models/objdet/yolo/v1/yolo_v1_tiny.rst", "models/objdet/yolo/v2/YOLO_V2_.rst", "models/objdet/yolo/v2/yolo_v2.rst", "models/objdet/yolo/v2/yolo_v2_tiny.rst", "models/objdet/yolo/v3/YOLO_V3_.rst", "models/objdet/yolo/v3/yolo_v3.rst", "models/objdet/yolo/v3/yolo_v3_tiny.rst", "models/objdet/yolo/v4/YOLO_V4_.rst", "models/objdet/yolo/v4/yolo_v4.rst", "models/seq2seq/index.rst", "models/seq2seq/transformer/Transformer.rst", "models/seq2seq/transformer/transformer_base.rst", "models/seq2seq/transformer/transformer_big.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/attention/index.rst", "nn/functions/attention/scaled_dot_product_attention.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/conv_transpose1d.rst", "nn/functions/conv/conv_transpose2d.rst", "nn/functions/conv/conv_transpose3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/drop_block.rst", "nn/functions/drop/drop_path.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/binary_cross_entropy_with_logits.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/global_response_norm.rst", "nn/functions/norm/group_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/norm/normalize.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/adaptive_max_pool1d.rst", "nn/functions/pool/adaptive_max_pool2d.rst", "nn/functions/pool/adaptive_max_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/spatial/affine_grid.rst", "nn/functions/spatial/grid_sample.rst", "nn/functions/spatial/index.rst", "nn/functions/util/embedding.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/one_hot.rst", "nn/functions/util/rotate.rst", "nn/fused/ConvBNReLU1d.rst", "nn/fused/ConvBNReLU2d.rst", "nn/fused/ConvBNReLU3d.rst", "nn/fused/DepthSeparableConv1d.rst", "nn/fused/DepthSeparableConv2d.rst", "nn/fused/DepthSeparableConv3d.rst", "nn/fused/SEModule.rst", "nn/fused/SelectiveKernel.rst", "nn/fused/index.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/HardSigmoid.rst", "nn/modules/activation/HardSwish.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/Mish.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/ReLU6.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Swish.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/attention/MultiHeadAttention.rst", "nn/modules/attention/ScaledDotProductAttention.rst", "nn/modules/attention/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/ConvTranspose1d.rst", "nn/modules/conv/ConvTranspose2d.rst", "nn/modules/conv/ConvTranspose3d.rst", "nn/modules/conv/Unfold.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/DropBlock.rst", "nn/modules/drop/DropPath.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/einops/Rearrange.rst", "nn/modules/einops/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Flatten.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/BCEWithLogitsLoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/GlobalResponseNorm.rst", "nn/modules/norm/GroupNorm.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AdaptiveMaxPool1d.rst", "nn/modules/pool/AdaptiveMaxPool2d.rst", "nn/modules/pool/AdaptiveMaxPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/modules/sparse/Embedding.rst", "nn/modules/sparse/index.rst", "nn/modules/transformer/Transformer.rst", "nn/modules/transformer/TransformerDecoder.rst", "nn/modules/transformer/TransformerDecoderLayer.rst", "nn/modules/transformer/TransformerEncoder.rst", "nn/modules/transformer/TransformerEncoderLayer.rst", "nn/modules/transformer/index.rst", "nn/modules/vision/Upsample.rst", "nn/modules/vision/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/lr_scheduler.rst", "optim/lr_scheduler/CosineAnnealingLR.rst", "optim/lr_scheduler/CyclicLR.rst", "optim/lr_scheduler/ExponentialLR.rst", "optim/lr_scheduler/LRScheduler.rst", "optim/lr_scheduler/LambdaLR.rst", "optim/lr_scheduler/MultiStepLR.rst", "optim/lr_scheduler/ReduceLROnPlateau.rst", "optim/lr_scheduler/StepLR.rst", "optim/lr_scheduler/index.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/Numeric.rst", "others/count_flops.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "porting/load.rst", "porting/save.rst", "random/functions/bernoulli.rst", "random/functions/index.rst", "random/functions/permutation.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/multiply.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/bfunc/tensordot.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/full.rst", "tensor/operations/gfunc/full_like.rst", "tensor/operations/gfunc/linspace.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/ceil.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/cumprod.rst", "tensor/operations/ufunc/cumsum.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/floor.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/log2.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/round.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/swapaxes.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/argmax.rst", "tensor/utilities/argmin.rst", "tensor/utilities/argsort.rst", "tensor/utilities/broadcast_to.rst", "tensor/utilities/chunk.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/diagonal.rst", "tensor/utilities/flatten.rst", "tensor/utilities/histogram.rst", "tensor/utilities/histogram2d.rst", "tensor/utilities/histogramdd.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/masked_fill.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/nonzero.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/roll.rst", "tensor/utilities/sort.rst", "tensor/utilities/split.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/topk.rst", "tensor/utilities/tril.rst", "tensor/utilities/triu.rst", "tensor/utilities/unbind.rst", "tensor/utilities/unique.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "tensor/utilities/where.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst", "visual/draw_tensor_graph.rst", "visual/visual.rst", "weights/list.rst", "weights/weights.rst"], "indexentries": {"abs() (in module lucid)": [[504, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[450, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[451, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[452, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[454, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[453, "lucid.optim.AdamW", false]], "adaptive_avg_pool1d() (in module lucid.nn.functional)": [[317, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[318, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[319, "lucid.nn.functional.adaptive_avg_pool3d", false]], "adaptive_max_pool1d() (in module lucid.nn.functional)": [[320, "lucid.nn.functional.adaptive_max_pool1d", false]], "adaptive_max_pool2d() (in module lucid.nn.functional)": [[321, "lucid.nn.functional.adaptive_max_pool2d", false]], "adaptive_max_pool3d() (in module lucid.nn.functional)": [[322, "lucid.nn.functional.adaptive_max_pool3d", false]], "adaptiveavgpool1d (class in lucid.nn)": [[413, "lucid.nn.AdaptiveAvgPool1d", false]], "adaptiveavgpool2d (class in lucid.nn)": [[414, "lucid.nn.AdaptiveAvgPool2d", false]], "adaptiveavgpool3d (class in lucid.nn)": [[415, "lucid.nn.AdaptiveAvgPool3d", false]], "adaptivemaxpool1d (class in lucid.nn)": [[416, "lucid.nn.AdaptiveMaxPool1d", false]], "adaptivemaxpool2d (class in lucid.nn)": [[417, "lucid.nn.AdaptiveMaxPool2d", false]], "adaptivemaxpool3d (class in lucid.nn)": [[418, "lucid.nn.AdaptiveMaxPool3d", false]], "add() (in module lucid)": [[479, "lucid.add", false]], "affine_grid() (in module lucid.nn.functional)": [[330, "lucid.nn.functional.affine_grid", false]], "alexnet (class in lucid.models)": [[29, "lucid.models.AlexNet", false]], "alexnet() (in module lucid.models)": [[30, "lucid.models.alexnet", false]], "alpha_dropout() (in module lucid.nn.functional)": [[291, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[380, "lucid.nn.AlphaDropout", false]], "apply_deltas() (in module lucid.models.objdet.util)": [[241, "lucid.models.objdet.util.apply_deltas", false]], "arange() (in module lucid)": [[491, "lucid.arange", false]], "arccos() (in module lucid)": [[505, "lucid.arccos", false]], "arcsin() (in module lucid)": [[506, "lucid.arcsin", false]], "arctan() (in module lucid)": [[507, "lucid.arctan", false]], "argmax() (in module lucid)": [[537, "lucid.argmax", false]], "argmin() (in module lucid)": [[538, "lucid.argmin", false]], "argsort() (in module lucid)": [[539, "lucid.argsort", false]], "asgd (class in lucid.optim)": [[449, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[323, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[324, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[325, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[419, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[420, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[421, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[310, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[403, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[404, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[405, "lucid.nn.BatchNorm3d", false]], "bbox_to_delta() (in module lucid.models.objdet.util)": [[242, "lucid.models.objdet.util.bbox_to_delta", false]], "bceloss (class in lucid.nn)": [[396, "lucid.nn.BCELoss", false]], "bcewithlogitsloss (class in lucid.nn)": [[397, "lucid.nn.BCEWithLogitsLoss", false]], "bernoulli() (in module lucid.random)": [[469, "lucid.random.bernoulli", false]], "bilinear (class in lucid.nn)": [[391, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[300, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[303, "lucid.nn.functional.binary_cross_entropy", false]], "binary_cross_entropy_with_logits() (in module lucid.nn.functional)": [[304, "lucid.nn.functional.binary_cross_entropy_with_logits", false]], "broadcast_to() (in module lucid)": [[540, "lucid.broadcast_to", false]], "buffer (class in lucid.nn)": [[263, "lucid.nn.Buffer", false]], "ceil() (in module lucid)": [[508, "lucid.ceil", false]], "centercrop (class in lucid.transforms)": [[573, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[18, "lucid.linalg.cholesky", false]], "chunk() (in module lucid)": [[541, "lucid.chunk", false]], "cifar10 (class in lucid.datasets)": [[5, "lucid.datasets.CIFAR10", false]], "cifar100 (class in lucid.datasets)": [[6, "lucid.datasets.CIFAR100", false]], "clip() (in module lucid)": [[509, "lucid.clip", false]], "clip_boxes() (in module lucid.models.objdet.util)": [[243, "lucid.models.objdet.util.clip_boxes", false]], "coatnet (class in lucid.models)": [[31, "lucid.models.CoAtNet", false]], "coatnet_0() (in module lucid.models)": [[32, "lucid.models.coatnet_0", false]], "coatnet_1() (in module lucid.models)": [[33, "lucid.models.coatnet_1", false]], "coatnet_2() (in module lucid.models)": [[34, "lucid.models.coatnet_2", false]], "coatnet_3() (in module lucid.models)": [[35, "lucid.models.coatnet_3", false]], "coatnet_4() (in module lucid.models)": [[36, "lucid.models.coatnet_4", false]], "coatnet_5() (in module lucid.models)": [[37, "lucid.models.coatnet_5", false]], "coatnet_6() (in module lucid.models)": [[38, "lucid.models.coatnet_6", false]], "coatnet_7() (in module lucid.models)": [[39, "lucid.models.coatnet_7", false]], "compose (class in lucid.transforms)": [[571, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[542, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[347, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[372, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[283, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[373, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[284, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[374, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[285, "lucid.nn.functional.conv3d", false]], "conv_transpose1d() (in module lucid.nn.functional)": [[286, "lucid.nn.functional.conv_transpose1d", false]], "conv_transpose2d() (in module lucid.nn.functional)": [[287, "lucid.nn.functional.conv_transpose2d", false]], "conv_transpose3d() (in module lucid.nn.functional)": [[288, "lucid.nn.functional.conv_transpose3d", false]], "convbnrelu1d (class in lucid.nn)": [[338, "lucid.nn.ConvBNReLU1d", false]], "convbnrelu2d (class in lucid.nn)": [[339, "lucid.nn.ConvBNReLU2d", false]], "convbnrelu3d (class in lucid.nn)": [[340, "lucid.nn.ConvBNReLU3d", false]], "convnext (class in lucid.models)": [[40, "lucid.models.ConvNeXt", false]], "convnext_base() (in module lucid.models)": [[42, "lucid.models.convnext_base", false]], "convnext_large() (in module lucid.models)": [[43, "lucid.models.convnext_large", false]], "convnext_small() (in module lucid.models)": [[44, "lucid.models.convnext_small", false]], "convnext_tiny() (in module lucid.models)": [[45, "lucid.models.convnext_tiny", false]], "convnext_v2 (class in lucid.models)": [[41, "lucid.models.ConvNeXt_V2", false]], "convnext_v2_atto() (in module lucid.models)": [[46, "lucid.models.convnext_v2_atto", false]], "convnext_v2_base() (in module lucid.models)": [[47, "lucid.models.convnext_v2_base", false]], "convnext_v2_femto() (in module lucid.models)": [[48, "lucid.models.convnext_v2_femto", false]], "convnext_v2_huge() (in module lucid.models)": [[49, "lucid.models.convnext_v2_huge", false]], "convnext_v2_large() (in module lucid.models)": [[50, "lucid.models.convnext_v2_large", false]], "convnext_v2_nano() (in module lucid.models)": [[51, "lucid.models.convnext_v2_nano", false]], "convnext_v2_pico() (in module lucid.models)": [[52, "lucid.models.convnext_v2_pico", false]], "convnext_v2_tiny() (in module lucid.models)": [[53, "lucid.models.convnext_v2_tiny", false]], "convnext_xlarge() (in module lucid.models)": [[54, "lucid.models.convnext_xlarge", false]], "convtranspose1d (class in lucid.nn)": [[375, "lucid.nn.ConvTranspose1d", false]], "convtranspose2d (class in lucid.nn)": [[376, "lucid.nn.ConvTranspose2d", false]], "convtranspose3d (class in lucid.nn)": [[377, "lucid.nn.ConvTranspose3d", false]], "cos() (in module lucid)": [[510, "lucid.cos", false]], "cosh() (in module lucid)": [[511, "lucid.cosh", false]], "cosineannealinglr (class in lucid.optim.lr_scheduler)": [[439, "lucid.optim.lr_scheduler.CosineAnnealingLR", false]], "count_flops() (in module lucid)": [[462, "lucid.count_flops", false]], "cross_entropy() (in module lucid.nn.functional)": [[305, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[398, "lucid.nn.CrossEntropyLoss", false]], "crossvit (class in lucid.models)": [[55, "lucid.models.CrossViT", false]], "crossvit_15() (in module lucid.models)": [[56, "lucid.models.crossvit_15", false]], "crossvit_15_dagger() (in module lucid.models)": [[57, "lucid.models.crossvit_15_dagger", false]], "crossvit_18() (in module lucid.models)": [[58, "lucid.models.crossvit_18", false]], "crossvit_18_dagger() (in module lucid.models)": [[59, "lucid.models.crossvit_18_dagger", false]], "crossvit_9() (in module lucid.models)": [[60, "lucid.models.crossvit_9", false]], "crossvit_9_dagger() (in module lucid.models)": [[61, "lucid.models.crossvit_9_dagger", false]], "crossvit_base() (in module lucid.models)": [[62, "lucid.models.crossvit_base", false]], "crossvit_small() (in module lucid.models)": [[63, "lucid.models.crossvit_small", false]], "crossvit_tiny() (in module lucid.models)": [[64, "lucid.models.crossvit_tiny", false]], "csp_darknet_53() (in module lucid.models)": [[66, "lucid.models.csp_darknet_53", false]], "csp_resnet_50() (in module lucid.models)": [[67, "lucid.models.csp_resnet_50", false]], "csp_resnext_50_32x4d() (in module lucid.models)": [[68, "lucid.models.csp_resnext_50_32x4d", false]], "cspnet (class in lucid.models)": [[65, "lucid.models.CSPNet", false]], "cube() (in module lucid)": [[512, "lucid.cube", false]], "cumprod() (in module lucid)": [[513, "lucid.cumprod", false]], "cumsum() (in module lucid)": [[514, "lucid.cumsum", false]], "current_beta() (lucid.models.imggen.vae method)": [[215, "lucid.models.imggen.VAE.current_beta", false]], "cvt (class in lucid.models)": [[69, "lucid.models.CvT", false]], "cvt_13() (in module lucid.models)": [[70, "lucid.models.cvt_13", false]], "cvt_21() (in module lucid.models)": [[71, "lucid.models.cvt_21", false]], "cvt_w24() (in module lucid.models)": [[72, "lucid.models.cvt_w24", false]], "cycliclr (class in lucid.optim.lr_scheduler)": [[440, "lucid.optim.lr_scheduler.CyclicLR", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "ddpm (class in lucid.models.imggen)": [[216, "lucid.models.imggen.DDPM", false]], "decode() (lucid.models.imggen.vae method)": [[215, "lucid.models.imggen.VAE.decode", false]], "densenet (class in lucid.models)": [[73, "lucid.models.DenseNet", false]], "densenet_121() (in module lucid.models)": [[74, "lucid.models.densenet_121", false]], "densenet_169() (in module lucid.models)": [[75, "lucid.models.densenet_169", false]], "densenet_201() (in module lucid.models)": [[76, "lucid.models.densenet_201", false]], "densenet_264() (in module lucid.models)": [[77, "lucid.models.densenet_264", false]], "depthseparableconv1d (class in lucid.nn)": [[341, "lucid.nn.DepthSeparableConv1d", false]], "depthseparableconv2d (class in lucid.nn)": [[342, "lucid.nn.DepthSeparableConv2d", false]], "depthseparableconv3d (class in lucid.nn)": [[343, "lucid.nn.DepthSeparableConv3d", false]], "det() (in module lucid.linalg)": [[19, "lucid.linalg.det", false]], "detr (class in lucid.models)": [[219, "lucid.models.DETR", false]], "detr_r101() (in module lucid.models)": [[220, "lucid.models.detr_r101", false]], "detr_r50() (in module lucid.models)": [[221, "lucid.models.detr_r50", false]], "diag() (in module lucid)": [[492, "lucid.diag", false]], "diagonal() (in module lucid)": [[543, "lucid.diagonal", false]], "div() (in module lucid)": [[480, "lucid.div", false]], "dot() (in module lucid)": [[481, "lucid.dot", false]], "draw_tensor_graph() (in module lucid.visual)": [[583, "lucid.visual.draw_tensor_graph", false]], "drop_block() (in module lucid.nn.functional)": [[292, "lucid.nn.functional.drop_block", false]], "drop_path() (in module lucid.nn.functional)": [[293, "lucid.nn.functional.drop_path", false]], "dropblock (class in lucid.nn)": [[381, "lucid.nn.DropBlock", false]], "dropout (class in lucid.nn)": [[383, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[294, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[384, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[295, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[385, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[296, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[386, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[297, "lucid.nn.functional.dropout3d", false]], "droppath (class in lucid.nn)": [[382, "lucid.nn.DropPath", false]], "efficientdet (class in lucid.models)": [[222, "lucid.models.EfficientDet", false]], "efficientdet_d0() (in module lucid.models)": [[223, "lucid.models.efficientdet_d0", false]], "efficientdet_d1() (in module lucid.models)": [[224, "lucid.models.efficientdet_d1", false]], "efficientdet_d2() (in module lucid.models)": [[225, "lucid.models.efficientdet_d2", false]], "efficientdet_d3() (in module lucid.models)": [[226, "lucid.models.efficientdet_d3", false]], "efficientdet_d4() (in module lucid.models)": [[227, "lucid.models.efficientdet_d4", false]], "efficientdet_d5() (in module lucid.models)": [[228, "lucid.models.efficientdet_d5", false]], "efficientdet_d6() (in module lucid.models)": [[229, "lucid.models.efficientdet_d6", false]], "efficientdet_d7() (in module lucid.models)": [[230, "lucid.models.efficientdet_d7", false]], "efficientformer (class in lucid.models)": [[92, "lucid.models.EfficientFormer", false]], "efficientformer_l1() (in module lucid.models)": [[93, "lucid.models.efficientformer_l1", false]], "efficientformer_l3() (in module lucid.models)": [[94, "lucid.models.efficientformer_l3", false]], "efficientformer_l7() (in module lucid.models)": [[95, "lucid.models.efficientformer_l7", false]], "efficientnet (class in lucid.models)": [[78, "lucid.models.EfficientNet", false]], "efficientnet_b0() (in module lucid.models)": [[80, "lucid.models.efficientnet_b0", false]], "efficientnet_b1() (in module lucid.models)": [[81, "lucid.models.efficientnet_b1", false]], "efficientnet_b2() (in module lucid.models)": [[82, "lucid.models.efficientnet_b2", false]], "efficientnet_b3() (in module lucid.models)": [[83, "lucid.models.efficientnet_b3", false]], "efficientnet_b4() (in module lucid.models)": [[84, "lucid.models.efficientnet_b4", false]], "efficientnet_b5() (in module lucid.models)": [[85, "lucid.models.efficientnet_b5", false]], "efficientnet_b6() (in module lucid.models)": [[86, "lucid.models.efficientnet_b6", false]], "efficientnet_b7() (in module lucid.models)": [[87, "lucid.models.efficientnet_b7", false]], "efficientnet_v2 (class in lucid.models)": [[79, "lucid.models.EfficientNet_V2", false]], "efficientnet_v2_l() (in module lucid.models)": [[88, "lucid.models.efficientnet_v2_l", false]], "efficientnet_v2_m() (in module lucid.models)": [[89, "lucid.models.efficientnet_v2_m", false]], "efficientnet_v2_s() (in module lucid.models)": [[90, "lucid.models.efficientnet_v2_s", false]], "efficientnet_v2_xl() (in module lucid.models)": [[91, "lucid.models.efficientnet_v2_xl", false]], "eig() (in module lucid.linalg)": [[20, "lucid.linalg.eig", false]], "einsum() (in module lucid.einops)": [[11, "lucid.einops.einsum", false]], "elu (class in lucid.nn)": [[355, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[272, "lucid.nn.functional.elu", false]], "embedding (class in lucid.nn)": [[426, "lucid.nn.Embedding", false]], "embedding() (in module lucid.nn.functional)": [[333, "lucid.nn.functional.embedding", false]], "empty() (in module lucid)": [[493, "lucid.empty", false]], "empty_like() (in module lucid)": [[494, "lucid.empty_like", false]], "encode() (lucid.models.imggen.vae method)": [[215, "lucid.models.imggen.VAE.encode", false]], "exp() (in module lucid)": [[515, "lucid.exp", false]], "exponentiallr (class in lucid.optim.lr_scheduler)": [[441, "lucid.optim.lr_scheduler.ExponentialLR", false]], "eye() (in module lucid)": [[495, "lucid.eye", false]], "fashionmnist (class in lucid.datasets)": [[7, "lucid.datasets.FashionMNIST", false]], "faster_rcnn_resnet_101_fpn() (in module lucid.models)": [[232, "lucid.models.faster_rcnn_resnet_101_fpn", false]], "faster_rcnn_resnet_50_fpn() (in module lucid.models)": [[233, "lucid.models.faster_rcnn_resnet_50_fpn", false]], "fasterrcnn (class in lucid.models)": [[231, "lucid.models.FasterRCNN", false]], "fastrcnn (class in lucid.models)": [[235, "lucid.models.FastRCNN", false]], "flatten (class in lucid.nn)": [[392, "lucid.nn.Flatten", false]], "flatten() (in module lucid)": [[544, "lucid.flatten", false]], "floor() (in module lucid)": [[516, "lucid.floor", false]], "forward() (lucid.models.objdet.detr method)": [[219, "lucid.models.objdet.DETR.forward", false]], "forward() (lucid.models.objdet.efficientdet method)": [[222, "lucid.models.objdet.EfficientDet.forward", false]], "forward() (lucid.models.objdet.yolo_v1 method)": [[248, "lucid.models.objdet.YOLO_V1.forward", false]], "forward() (lucid.models.objdet.yolo_v2 method)": [[251, "lucid.models.objdet.YOLO_V2.forward", false]], "forward() (lucid.models.objdet.yolo_v3 method)": [[254, "lucid.models.objdet.YOLO_V3.forward", false]], "forward() (lucid.models.objdet.yolo_v4 method)": [[257, "lucid.models.objdet.YOLO_V4.forward", false]], "fpn (class in lucid.models.objdet.util)": [[237, "lucid.models.objdet.util.FPN", false]], "full() (in module lucid)": [[496, "lucid.full", false]], "full_like() (in module lucid)": [[497, "lucid.full_like", false]], "gelu (class in lucid.nn)": [[356, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[273, "lucid.nn.functional.gelu", false]], "get_loss() (lucid.models.imggen.ddpm method)": [[216, "lucid.models.imggen.DDPM.get_loss", false]], "get_loss() (lucid.models.objdet.detr method)": [[219, "lucid.models.objdet.DETR.get_loss", false]], "get_loss() (lucid.models.objdet.efficientdet method)": [[222, "lucid.models.objdet.EfficientDet.get_loss", false]], "get_loss() (lucid.models.objdet.yolo_v1 method)": [[248, "lucid.models.objdet.YOLO_V1.get_loss", false]], "get_loss() (lucid.models.objdet.yolo_v2 method)": [[251, "lucid.models.objdet.YOLO_V2.get_loss", false]], "get_loss() (lucid.models.objdet.yolo_v3 method)": [[254, "lucid.models.objdet.YOLO_V3.get_loss", false]], "get_loss() (lucid.models.objdet.yolo_v4 method)": [[257, "lucid.models.objdet.YOLO_V4.get_loss", false]], "global_response_norm() (in module lucid.nn.functional)": [[311, "lucid.nn.functional.global_response_norm", false]], "globalresponsenorm (class in lucid.nn)": [[406, "lucid.nn.GlobalResponseNorm", false]], "grad_enabled() (in module lucid)": [[463, "lucid.grad_enabled", false]], "grid_sample() (in module lucid.nn.functional)": [[331, "lucid.nn.functional.grid_sample", false]], "group_norm() (in module lucid.nn.functional)": [[312, "lucid.nn.functional.group_norm", false]], "groupnorm (class in lucid.nn)": [[407, "lucid.nn.GroupNorm", false]], "hardsigmoid (class in lucid.nn)": [[357, "lucid.nn.HardSigmoid", false]], "hardswish (class in lucid.nn)": [[358, "lucid.nn.HardSwish", false]], "histogram() (in module lucid)": [[545, "lucid.histogram", false]], "histogram2d() (in module lucid)": [[546, "lucid.histogram2d", false]], "histogramdd() (in module lucid)": [[547, "lucid.histogramdd", false]], "hstack() (in module lucid)": [[548, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[306, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[399, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[393, "lucid.nn.Identity", false]], "inception (class in lucid.models)": [[96, "lucid.models.Inception", false]], "inception_next_atto() (in module lucid.models)": [[101, "lucid.models.inception_next_atto", false]], "inception_next_base() (in module lucid.models)": [[102, "lucid.models.inception_next_base", false]], "inception_next_small() (in module lucid.models)": [[103, "lucid.models.inception_next_small", false]], "inception_next_tiny() (in module lucid.models)": [[104, "lucid.models.inception_next_tiny", false]], "inception_resnet_v1() (in module lucid.models)": [[106, "lucid.models.inception_resnet_v1", false]], "inception_resnet_v2() (in module lucid.models)": [[107, "lucid.models.inception_resnet_v2", false]], "inception_v1() (in module lucid.models)": [[97, "lucid.models.inception_v1", false]], "inception_v3() (in module lucid.models)": [[98, "lucid.models.inception_v3", false]], "inception_v4() (in module lucid.models)": [[99, "lucid.models.inception_v4", false]], "inceptionnext (class in lucid.models)": [[100, "lucid.models.InceptionNeXt", false]], "inceptionresnet (class in lucid.models)": [[105, "lucid.models.InceptionResNet", false]], "inner() (in module lucid)": [[482, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[314, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[408, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[409, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[410, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[335, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[22, "lucid.linalg.inv", false]], "iou() (in module lucid.models.objdet.util)": [[245, "lucid.models.objdet.util.iou", false]], "kaiming_normal() (in module lucid.nn.init)": [[349, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[350, "lucid.nn.init.kaiming_uniform", false]], "lambdalr (class in lucid.optim.lr_scheduler)": [[443, "lucid.optim.lr_scheduler.LambdaLR", false]], "layer_norm() (in module lucid.nn.functional)": [[315, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[411, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[275, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[359, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[109, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[110, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[111, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[112, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[394, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[302, "lucid.nn.functional.linear", false]], "linspace() (in module lucid)": [[498, "lucid.linspace", false]], "load() (in module lucid)": [[467, "lucid.load", false]], "log() (in module lucid)": [[517, "lucid.log", false]], "log2() (in module lucid)": [[518, "lucid.log2", false]], "lrscheduler (class in lucid.optim.lr_scheduler)": [[442, "lucid.optim.lr_scheduler.LRScheduler", false]], "lucid": [[16, "module-lucid", false]], "masked_fill() (in module lucid)": [[550, "lucid.masked_fill", false]], "matmul() (in module lucid)": [[483, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[23, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[519, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[327, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[328, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[329, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[484, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[422, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[423, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[424, "lucid.nn.MaxPool3d", false]], "maxvit (class in lucid.models)": [[113, "lucid.models.MaxViT", false]], "maxvit_base() (in module lucid.models)": [[114, "lucid.models.maxvit_base", false]], "maxvit_large() (in module lucid.models)": [[115, "lucid.models.maxvit_large", false]], "maxvit_small() (in module lucid.models)": [[116, "lucid.models.maxvit_small", false]], "maxvit_tiny() (in module lucid.models)": [[117, "lucid.models.maxvit_tiny", false]], "maxvit_xlarge() (in module lucid.models)": [[118, "lucid.models.maxvit_xlarge", false]], "mean() (in module lucid)": [[520, "lucid.mean", false]], "meshgrid() (in module lucid)": [[551, "lucid.meshgrid", false]], "min() (in module lucid)": [[521, "lucid.min", false]], "minimum() (in module lucid)": [[485, "lucid.minimum", false]], "mish (class in lucid.nn)": [[360, "lucid.nn.Mish", false]], "mnist (class in lucid.datasets)": [[8, "lucid.datasets.MNIST", false]], "mobilenet (class in lucid.models)": [[119, "lucid.models.MobileNet", false]], "mobilenet() (in module lucid.models)": [[123, "lucid.models.mobilenet", false]], "mobilenet_v2 (class in lucid.models)": [[120, "lucid.models.MobileNet_V2", false]], "mobilenet_v2() (in module lucid.models)": [[124, "lucid.models.mobilenet_v2", false]], "mobilenet_v3 (class in lucid.models)": [[121, "lucid.models.MobileNet_V3", false]], "mobilenet_v3_large() (in module lucid.models)": [[125, "lucid.models.mobilenet_v3_large", false]], "mobilenet_v3_small() (in module lucid.models)": [[126, "lucid.models.mobilenet_v3_small", false]], "mobilenet_v4 (class in lucid.models)": [[122, "lucid.models.MobileNet_V4", false]], "mobilenet_v4_conv_large() (in module lucid.models)": [[127, "lucid.models.mobilenet_v4_conv_large", false]], "mobilenet_v4_conv_medium() (in module lucid.models)": [[128, "lucid.models.mobilenet_v4_conv_medium", false]], "mobilenet_v4_conv_small() (in module lucid.models)": [[129, "lucid.models.mobilenet_v4_conv_small", false]], "mobilenet_v4_hybrid_large() (in module lucid.models)": [[130, "lucid.models.mobilenet_v4_hybrid_large", false]], "mobilenet_v4_hybrid_medium() (in module lucid.models)": [[131, "lucid.models.mobilenet_v4_hybrid_medium", false]], "module": [[16, "module-lucid", false]], "module (class in lucid.nn)": [[264, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[266, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[267, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[308, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[400, "lucid.nn.MSELoss", false]], "multiheadattention (class in lucid.nn)": [[369, "lucid.nn.MultiHeadAttention", false]], "multiply() (in module lucid)": [[486, "lucid.multiply", false]], "multiscaleroialign (class in lucid.models.objdet.util)": [[238, "lucid.models.objdet.util.MultiScaleROIAlign", false]], "multisteplr (class in lucid.optim.lr_scheduler)": [[444, "lucid.optim.lr_scheduler.MultiStepLR", false]], "nadam (class in lucid.optim)": [[455, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[309, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[401, "lucid.nn.NLLLoss", false]], "nms() (in module lucid.models.objdet.util)": [[246, "lucid.models.objdet.util.nms", false]], "no_grad (in module lucid)": [[465, "lucid.no_grad", false]], "nonzero() (in module lucid)": [[552, "lucid.nonzero", false]], "norm() (in module lucid.linalg)": [[24, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[351, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[574, "lucid.transforms.Normalize", false]], "normalize() (in module lucid.nn.functional)": [[316, "lucid.nn.functional.normalize", false]], "numeric (class in lucid.types)": [[461, "lucid.types.Numeric", false]], "one_hot() (in module lucid.nn.functional)": [[336, "lucid.nn.functional.one_hot", false]], "ones() (in module lucid)": [[499, "lucid.ones", false]], "ones_like() (in module lucid)": [[500, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[437, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[487, "lucid.outer", false]], "pad() (in module lucid)": [[553, "lucid.pad", false]], "parameter (class in lucid.nn)": [[265, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[268, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[269, "lucid.nn.ParameterList", false]], "permutation() (in module lucid.random)": [[471, "lucid.random.permutation", false]], "pinv() (in module lucid.linalg)": [[25, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[488, "lucid.power", false]], "predict() (lucid.models.objdet.detr method)": [[219, "lucid.models.objdet.DETR.predict", false]], "predict() (lucid.models.objdet.efficientdet method)": [[222, "lucid.models.objdet.EfficientDet.predict", false]], "predict() (lucid.models.objdet.yolo_v2 method)": [[251, "lucid.models.objdet.YOLO_V2.predict", false]], "predict() (lucid.models.objdet.yolo_v3 method)": [[254, "lucid.models.objdet.YOLO_V3.predict", false]], "predict() (lucid.models.objdet.yolo_v4 method)": [[257, "lucid.models.objdet.YOLO_V4.predict", false]], "pvt (class in lucid.models)": [[132, "lucid.models.PVT", false]], "pvt_huge() (in module lucid.models)": [[134, "lucid.models.pvt_huge", false]], "pvt_large() (in module lucid.models)": [[135, "lucid.models.pvt_large", false]], "pvt_medium() (in module lucid.models)": [[136, "lucid.models.pvt_medium", false]], "pvt_small() (in module lucid.models)": [[137, "lucid.models.pvt_small", false]], "pvt_tiny() (in module lucid.models)": [[138, "lucid.models.pvt_tiny", false]], "pvt_v2 (class in lucid.models)": [[133, "lucid.models.PVT_V2", false]], "pvt_v2_b0() (in module lucid.models)": [[139, "lucid.models.pvt_v2_b0", false]], "pvt_v2_b1() (in module lucid.models)": [[140, "lucid.models.pvt_v2_b1", false]], "pvt_v2_b2() (in module lucid.models)": [[141, "lucid.models.pvt_v2_b2", false]], "pvt_v2_b2_li() (in module lucid.models)": [[142, "lucid.models.pvt_v2_b2_li", false]], "pvt_v2_b3() (in module lucid.models)": [[143, "lucid.models.pvt_v2_b3", false]], "pvt_v2_b4() (in module lucid.models)": [[144, "lucid.models.pvt_v2_b4", false]], "pvt_v2_b5() (in module lucid.models)": [[145, "lucid.models.pvt_v2_b5", false]], "qr() (in module lucid.linalg)": [[26, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[456, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[472, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[473, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[474, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[575, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[576, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[577, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[578, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[579, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[554, "lucid.ravel", false]], "rcnn (class in lucid.models)": [[236, "lucid.models.RCNN", false]], "rearrange (class in lucid.nn)": [[388, "lucid.nn.Rearrange", false]], "rearrange() (in module lucid.einops)": [[13, "lucid.einops.rearrange", false]], "reciprocal() (in module lucid)": [[522, "lucid.reciprocal", false]], "reduce() (in module lucid.einops)": [[14, "lucid.einops.reduce", false]], "reducelronplateau (class in lucid.optim.lr_scheduler)": [[445, "lucid.optim.lr_scheduler.ReduceLROnPlateau", false]], "register_model() (in module lucid)": [[466, "lucid.register_model", false]], "relu (class in lucid.nn)": [[361, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[276, "lucid.nn.functional.relu", false]], "relu6 (class in lucid.nn)": [[362, "lucid.nn.ReLU6", false]], "reparameterize() (lucid.models.imggen.vae method)": [[215, "lucid.models.imggen.VAE.reparameterize", false]], "repeat() (in module lucid)": [[555, "lucid.repeat", false]], "repeat() (in module lucid.einops)": [[15, "lucid.einops.repeat", false]], "reshape() (in module lucid)": [[556, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[580, "lucid.transforms.Resize", false]], "resnest (class in lucid.models)": [[146, "lucid.models.ResNeSt", false]], "resnest_101() (in module lucid.models)": [[147, "lucid.models.resnest_101", false]], "resnest_14() (in module lucid.models)": [[148, "lucid.models.resnest_14", false]], "resnest_200() (in module lucid.models)": [[149, "lucid.models.resnest_200", false]], "resnest_26() (in module lucid.models)": [[150, "lucid.models.resnest_26", false]], "resnest_269() (in module lucid.models)": [[151, "lucid.models.resnest_269", false]], "resnest_50() (in module lucid.models)": [[152, "lucid.models.resnest_50", false]], "resnest_50_1s4x24d() (in module lucid.models)": [[153, "lucid.models.resnest_50_1s4x24d", false]], "resnest_50_4s2x40d() (in module lucid.models)": [[154, "lucid.models.resnest_50_4s2x40d", false]], "resnet (class in lucid.models)": [[155, "lucid.models.ResNet", false]], "resnet_1001() (in module lucid.models)": [[156, "lucid.models.resnet_1001", false]], "resnet_101() (in module lucid.models)": [[157, "lucid.models.resnet_101", false]], "resnet_152() (in module lucid.models)": [[158, "lucid.models.resnet_152", false]], "resnet_18() (in module lucid.models)": [[159, "lucid.models.resnet_18", false]], "resnet_200() (in module lucid.models)": [[160, "lucid.models.resnet_200", false]], "resnet_269() (in module lucid.models)": [[161, "lucid.models.resnet_269", false]], "resnet_34() (in module lucid.models)": [[162, "lucid.models.resnet_34", false]], "resnet_50() (in module lucid.models)": [[163, "lucid.models.resnet_50", false]], "resnext (class in lucid.models)": [[166, "lucid.models.ResNeXt", false]], "resnext_101_32x16d() (in module lucid.models)": [[167, "lucid.models.resnext_101_32x16d", false]], "resnext_101_32x32d() (in module lucid.models)": [[168, "lucid.models.resnext_101_32x32d", false]], "resnext_101_32x4d() (in module lucid.models)": [[169, "lucid.models.resnext_101_32x4d", false]], "resnext_101_32x8d() (in module lucid.models)": [[170, "lucid.models.resnext_101_32x8d", false]], "resnext_101_64x4d() (in module lucid.models)": [[171, "lucid.models.resnext_101_64x4d", false]], "resnext_50_32x4d() (in module lucid.models)": [[172, "lucid.models.resnext_50_32x4d", false]], "rmsprop (class in lucid.optim)": [[457, "lucid.optim.RMSprop", false]], "roialign (class in lucid.models.objdet.util)": [[239, "lucid.models.objdet.util.ROIAlign", false]], "roll() (in module lucid)": [[557, "lucid.roll", false]], "rotate() (in module lucid.nn.functional)": [[337, "lucid.nn.functional.rotate", false]], "round() (in module lucid)": [[523, "lucid.round", false]], "rprop (class in lucid.optim)": [[458, "lucid.optim.Rprop", false]], "sample() (lucid.models.imggen.ddpm method)": [[216, "lucid.models.imggen.DDPM.sample", false]], "save() (in module lucid)": [[468, "lucid.save", false]], "scaled_dot_product_attention() (in module lucid.nn.functional)": [[282, "lucid.nn.functional.scaled_dot_product_attention", false]], "scaleddotproductattention (class in lucid.nn)": [[370, "lucid.nn.ScaledDotProductAttention", false]], "se_resnet_101() (in module lucid.models)": [[174, "lucid.models.se_resnet_101", false]], "se_resnet_152() (in module lucid.models)": [[175, "lucid.models.se_resnet_152", false]], "se_resnet_18() (in module lucid.models)": [[176, "lucid.models.se_resnet_18", false]], "se_resnet_34() (in module lucid.models)": [[177, "lucid.models.se_resnet_34", false]], "se_resnet_50() (in module lucid.models)": [[178, "lucid.models.se_resnet_50", false]], "se_resnext_101_32x4d() (in module lucid.models)": [[179, "lucid.models.se_resnext_101_32x4d", false]], "se_resnext_101_32x8d() (in module lucid.models)": [[180, "lucid.models.se_resnext_101_32x8d", false]], "se_resnext_101_64x4d() (in module lucid.models)": [[181, "lucid.models.se_resnext_101_64x4d", false]], "se_resnext_50_32x4d() (in module lucid.models)": [[182, "lucid.models.se_resnext_50_32x4d", false]], "seed() (in module lucid.random)": [[475, "lucid.random.seed", false]], "selectivekernel (class in lucid.nn)": [[345, "lucid.nn.SelectiveKernel", false]], "selectivesearch (class in lucid.models.objdet.util)": [[240, "lucid.models.objdet.util.SelectiveSearch", false]], "selu (class in lucid.nn)": [[363, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[277, "lucid.nn.functional.selu", false]], "semodule (class in lucid.nn)": [[344, "lucid.nn.SEModule", false]], "senet (class in lucid.models)": [[173, "lucid.models.SENet", false]], "sequential (class in lucid.nn)": [[270, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[459, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[364, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[278, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[524, "lucid.sign", false]], "sin() (in module lucid)": [[525, "lucid.sin", false]], "sinh() (in module lucid)": [[526, "lucid.sinh", false]], "sk_resnet_18() (in module lucid.models)": [[184, "lucid.models.sk_resnet_18", false]], "sk_resnet_34() (in module lucid.models)": [[185, "lucid.models.sk_resnet_34", false]], "sk_resnet_50() (in module lucid.models)": [[186, "lucid.models.sk_resnet_50", false]], "sk_resnext_50_32x4d() (in module lucid.models)": [[187, "lucid.models.sk_resnext_50_32x4d", false]], "sknet (class in lucid.models)": [[183, "lucid.models.SKNet", false]], "softmax (class in lucid.nn)": [[365, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[279, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[27, "lucid.linalg.solve", false]], "sort() (in module lucid)": [[558, "lucid.sort", false]], "split() (in module lucid)": [[559, "lucid.split", false]], "sqrt() (in module lucid)": [[527, "lucid.sqrt", false]], "square() (in module lucid)": [[528, "lucid.square", false]], "squeeze() (in module lucid)": [[560, "lucid.squeeze", false]], "stack() (in module lucid)": [[561, "lucid.stack", false]], "steplr (class in lucid.optim.lr_scheduler)": [[446, "lucid.optim.lr_scheduler.StepLR", false]], "sub() (in module lucid)": [[489, "lucid.sub", false]], "sum() (in module lucid)": [[529, "lucid.sum", false]], "svd() (in module lucid.linalg)": [[28, "lucid.linalg.svd", false]], "swapaxes() (in module lucid)": [[530, "lucid.swapaxes", false]], "swin_base() (in module lucid.models)": [[190, "lucid.models.swin_base", false]], "swin_large() (in module lucid.models)": [[191, "lucid.models.swin_large", false]], "swin_small() (in module lucid.models)": [[192, "lucid.models.swin_small", false]], "swin_tiny() (in module lucid.models)": [[193, "lucid.models.swin_tiny", false]], "swin_v2_base() (in module lucid.models)": [[194, "lucid.models.swin_v2_base", false]], "swin_v2_giant() (in module lucid.models)": [[195, "lucid.models.swin_v2_giant", false]], "swin_v2_huge() (in module lucid.models)": [[196, "lucid.models.swin_v2_huge", false]], "swin_v2_large() (in module lucid.models)": [[197, "lucid.models.swin_v2_large", false]], "swin_v2_small() (in module lucid.models)": [[198, "lucid.models.swin_v2_small", false]], "swin_v2_tiny() (in module lucid.models)": [[199, "lucid.models.swin_v2_tiny", false]], "swintransformer (class in lucid.models)": [[188, "lucid.models.SwinTransformer", false]], "swintransformer_v2 (class in lucid.models)": [[189, "lucid.models.SwinTransformer_V2", false]], "swish (class in lucid.nn)": [[366, "lucid.nn.Swish", false]], "tan() (in module lucid)": [[531, "lucid.tan", false]], "tanh (class in lucid.nn)": [[367, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[532, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[280, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[478, "lucid.Tensor", false]], "tensor() (in module lucid)": [[536, "lucid.tensor", false]], "tensordot() (in module lucid)": [[490, "lucid.tensordot", false]], "tile() (in module lucid)": [[562, "lucid.tile", false]], "topk() (in module lucid)": [[563, "lucid.topk", false]], "totensor (class in lucid.transforms)": [[572, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[533, "lucid.trace", false]], "transformer (class in lucid.models)": [[260, "lucid.models.Transformer", false]], "transformer (class in lucid.nn)": [[428, "lucid.nn.Transformer", false]], "transformer_base() (in module lucid.models)": [[261, "lucid.models.transformer_base", false]], "transformer_big() (in module lucid.models)": [[262, "lucid.models.transformer_big", false]], "transformerdecoder (class in lucid.nn)": [[429, "lucid.nn.TransformerDecoder", false]], "transformerdecoderlayer (class in lucid.nn)": [[430, "lucid.nn.TransformerDecoderLayer", false]], "transformerencoder (class in lucid.nn)": [[431, "lucid.nn.TransformerEncoder", false]], "transformerencoderlayer (class in lucid.nn)": [[432, "lucid.nn.TransformerEncoderLayer", false]], "transpose() (in module lucid)": [[534, "lucid.transpose", false]], "tril() (in module lucid)": [[564, "lucid.tril", false]], "triu() (in module lucid)": [[565, "lucid.triu", false]], "unbind() (in module lucid)": [[566, "lucid.unbind", false]], "unfold (class in lucid.nn)": [[378, "lucid.nn.Unfold", false]], "unfold() (in module lucid.nn.functional)": [[290, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[352, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[476, "lucid.random.uniform", false]], "unique() (in module lucid)": [[567, "lucid.unique", false]], "unsqueeze() (in module lucid)": [[568, "lucid.unsqueeze", false]], "upsample (class in lucid.nn)": [[434, "lucid.nn.Upsample", false]], "vae (class in lucid.models.imggen)": [[215, "lucid.models.imggen.VAE", false]], "var() (in module lucid)": [[535, "lucid.var", false]], "vggnet (class in lucid.models)": [[200, "lucid.models.VGGNet", false]], "vggnet_11() (in module lucid.models)": [[201, "lucid.models.vggnet_11", false]], "vggnet_13() (in module lucid.models)": [[202, "lucid.models.vggnet_13", false]], "vggnet_16() (in module lucid.models)": [[203, "lucid.models.vggnet_16", false]], "vggnet_19() (in module lucid.models)": [[204, "lucid.models.vggnet_19", false]], "vit (class in lucid.models)": [[205, "lucid.models.ViT", false]], "vit_base() (in module lucid.models)": [[206, "lucid.models.vit_base", false]], "vit_huge() (in module lucid.models)": [[207, "lucid.models.vit_huge", false]], "vit_large() (in module lucid.models)": [[208, "lucid.models.vit_large", false]], "vit_small() (in module lucid.models)": [[209, "lucid.models.vit_small", false]], "vit_tiny() (in module lucid.models)": [[210, "lucid.models.vit_tiny", false]], "vstack() (in module lucid)": [[569, "lucid.vstack", false]], "where() (in module lucid)": [[570, "lucid.where", false]], "wide_resnet_101() (in module lucid.models)": [[164, "lucid.models.wide_resnet_101", false]], "wide_resnet_50() (in module lucid.models)": [[165, "lucid.models.wide_resnet_50", false]], "xavier_normal() (in module lucid.nn.init)": [[353, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[354, "lucid.nn.init.xavier_uniform", false]], "xception (class in lucid.models)": [[211, "lucid.models.Xception", false]], "xception() (in module lucid.models)": [[212, "lucid.models.xception", false]], "yolo_v1 (class in lucid.models)": [[248, "lucid.models.YOLO_V1", false]], "yolo_v1() (in module lucid.models)": [[249, "lucid.models.yolo_v1", false]], "yolo_v1_tiny() (in module lucid.models)": [[250, "lucid.models.yolo_v1_tiny", false]], "yolo_v2 (class in lucid.models)": [[251, "lucid.models.YOLO_V2", false]], "yolo_v2() (in module lucid.models)": [[252, "lucid.models.yolo_v2", false]], "yolo_v2_tiny() (in module lucid.models)": [[253, "lucid.models.yolo_v2_tiny", false]], "yolo_v3 (class in lucid.models)": [[254, "lucid.models.YOLO_V3", false]], "yolo_v3() (in module lucid.models)": [[255, "lucid.models.yolo_v3", false]], "yolo_v3_tiny() (in module lucid.models)": [[256, "lucid.models.yolo_v3_tiny", false]], "yolo_v4 (class in lucid.models)": [[257, "lucid.models.YOLO_V4", false]], "yolo_v4() (in module lucid.models)": [[258, "lucid.models.yolo_v4", false]], "zeros() (in module lucid)": [[501, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[502, "lucid.zeros_like", false]], "zfnet (class in lucid.models)": [[213, "lucid.models.ZFNet", false]], "zfnet() (in module lucid.models)": [[214, "lucid.models.zfnet", false]]}, "objects": {"": [[16, 0, 0, "-", "lucid"]], "lucid": [[478, 1, 1, "", "Tensor"], [504, 2, 1, "", "abs"], [479, 2, 1, "", "add"], [491, 2, 1, "", "arange"], [505, 2, 1, "", "arccos"], [506, 2, 1, "", "arcsin"], [507, 2, 1, "", "arctan"], [537, 2, 1, "", "argmax"], [538, 2, 1, "", "argmin"], [539, 2, 1, "", "argsort"], [540, 2, 1, "", "broadcast_to"], [508, 2, 1, "", "ceil"], [541, 2, 1, "", "chunk"], [509, 2, 1, "", "clip"], [542, 2, 1, "", "concatenate"], [510, 2, 1, "", "cos"], [511, 2, 1, "", "cosh"], [462, 2, 1, "", "count_flops"], [512, 2, 1, "", "cube"], [513, 2, 1, "", "cumprod"], [514, 2, 1, "", "cumsum"], [492, 2, 1, "", "diag"], [543, 2, 1, "", "diagonal"], [480, 2, 1, "", "div"], [481, 2, 1, "", "dot"], [493, 2, 1, "", "empty"], [494, 2, 1, "", "empty_like"], [515, 2, 1, "", "exp"], [495, 2, 1, "", "eye"], [544, 2, 1, "", "flatten"], [516, 2, 1, "", "floor"], [496, 2, 1, "", "full"], [497, 2, 1, "", "full_like"], [463, 2, 1, "", "grad_enabled"], [545, 2, 1, "", "histogram"], [546, 2, 1, "", "histogram2d"], [547, 2, 1, "", "histogramdd"], [548, 2, 1, "", "hstack"], [482, 2, 1, "", "inner"], [498, 2, 1, "", "linspace"], [467, 2, 1, "", "load"], [517, 2, 1, "", "log"], [518, 2, 1, "", "log2"], [550, 2, 1, "", "masked_fill"], [483, 2, 1, "", "matmul"], [519, 2, 1, "", "max"], [484, 2, 1, "", "maximum"], [520, 2, 1, "", "mean"], [551, 2, 1, "", "meshgrid"], [521, 2, 1, "", "min"], [485, 2, 1, "", "minimum"], [486, 2, 1, "", "multiply"], [465, 4, 1, "", "no_grad"], [552, 2, 1, "", "nonzero"], [499, 2, 1, "", "ones"], [500, 2, 1, "", "ones_like"], [487, 2, 1, "", "outer"], [553, 2, 1, "", "pad"], [488, 2, 1, "", "power"], [554, 2, 1, "", "ravel"], [522, 2, 1, "", "reciprocal"], [466, 2, 1, "", "register_model"], [555, 2, 1, "", "repeat"], [556, 2, 1, "", "reshape"], [557, 2, 1, "", "roll"], [523, 2, 1, "", "round"], [468, 2, 1, "", "save"], [524, 2, 1, "", "sign"], [525, 2, 1, "", "sin"], [526, 2, 1, "", "sinh"], [558, 2, 1, "", "sort"], [559, 2, 1, "", "split"], [527, 2, 1, "", "sqrt"], [528, 2, 1, "", "square"], [560, 2, 1, "", "squeeze"], [561, 2, 1, "", "stack"], [489, 2, 1, "", "sub"], [529, 2, 1, "", "sum"], [530, 2, 1, "", "swapaxes"], [531, 2, 1, "", "tan"], [532, 2, 1, "", "tanh"], [536, 2, 1, "", "tensor"], [490, 2, 1, "", "tensordot"], [562, 2, 1, "", "tile"], [563, 2, 1, "", "topk"], [533, 2, 1, "", "trace"], [534, 2, 1, "", "transpose"], [564, 2, 1, "", "tril"], [565, 2, 1, "", "triu"], [566, 2, 1, "", "unbind"], [567, 2, 1, "", "unique"], [568, 2, 1, "", "unsqueeze"], [535, 2, 1, "", "var"], [569, 2, 1, "", "vstack"], [570, 2, 1, "", "where"], [501, 2, 1, "", "zeros"], [502, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "CIFAR10"], [6, 1, 1, "", "CIFAR100"], [7, 1, 1, "", "FashionMNIST"], [8, 1, 1, "", "MNIST"]], "lucid.einops": [[11, 2, 1, "", "einsum"], [13, 2, 1, "", "rearrange"], [14, 2, 1, "", "reduce"], [15, 2, 1, "", "repeat"]], "lucid.linalg": [[18, 2, 1, "", "cholesky"], [19, 2, 1, "", "det"], [20, 2, 1, "", "eig"], [22, 2, 1, "", "inv"], [23, 2, 1, "", "matrix_power"], [24, 2, 1, "", "norm"], [25, 2, 1, "", "pinv"], [26, 2, 1, "", "qr"], [27, 2, 1, "", "solve"], [28, 2, 1, "", "svd"]], "lucid.models": [[29, 1, 1, "", "AlexNet"], [65, 1, 1, "", "CSPNet"], [31, 1, 1, "", "CoAtNet"], [40, 1, 1, "", "ConvNeXt"], [41, 1, 1, "", "ConvNeXt_V2"], [55, 1, 1, "", "CrossViT"], [69, 1, 1, "", "CvT"], [219, 1, 1, "", "DETR"], [73, 1, 1, "", "DenseNet"], [222, 1, 1, "", "EfficientDet"], [92, 1, 1, "", "EfficientFormer"], [78, 1, 1, "", "EfficientNet"], [79, 1, 1, "", "EfficientNet_V2"], [235, 1, 1, "", "FastRCNN"], [231, 1, 1, "", "FasterRCNN"], [96, 1, 1, "", "Inception"], [100, 1, 1, "", "InceptionNeXt"], [105, 1, 1, "", "InceptionResNet"], [109, 1, 1, "", "LeNet"], [113, 1, 1, "", "MaxViT"], [119, 1, 1, "", "MobileNet"], [120, 1, 1, "", "MobileNet_V2"], [121, 1, 1, "", "MobileNet_V3"], [122, 1, 1, "", "MobileNet_V4"], [132, 1, 1, "", "PVT"], [133, 1, 1, "", "PVT_V2"], [236, 1, 1, "", "RCNN"], [146, 1, 1, "", "ResNeSt"], [166, 1, 1, "", "ResNeXt"], [155, 1, 1, "", "ResNet"], [173, 1, 1, "", "SENet"], [183, 1, 1, "", "SKNet"], [188, 1, 1, "", "SwinTransformer"], [189, 1, 1, "", "SwinTransformer_V2"], [260, 1, 1, "", "Transformer"], [200, 1, 1, "", "VGGNet"], [205, 1, 1, "", "ViT"], [211, 1, 1, "", "Xception"], [248, 1, 1, "", "YOLO_V1"], [251, 1, 1, "", "YOLO_V2"], [254, 1, 1, "", "YOLO_V3"], [257, 1, 1, "", "YOLO_V4"], [213, 1, 1, "", "ZFNet"], [30, 2, 1, "", "alexnet"], [32, 2, 1, "", "coatnet_0"], [33, 2, 1, "", "coatnet_1"], [34, 2, 1, "", "coatnet_2"], [35, 2, 1, "", "coatnet_3"], [36, 2, 1, "", "coatnet_4"], [37, 2, 1, "", "coatnet_5"], [38, 2, 1, "", "coatnet_6"], [39, 2, 1, "", "coatnet_7"], [42, 2, 1, "", "convnext_base"], [43, 2, 1, "", "convnext_large"], [44, 2, 1, "", "convnext_small"], [45, 2, 1, "", "convnext_tiny"], [46, 2, 1, "", "convnext_v2_atto"], [47, 2, 1, "", "convnext_v2_base"], [48, 2, 1, "", "convnext_v2_femto"], [49, 2, 1, "", "convnext_v2_huge"], [50, 2, 1, "", "convnext_v2_large"], [51, 2, 1, "", "convnext_v2_nano"], [52, 2, 1, "", "convnext_v2_pico"], [53, 2, 1, "", "convnext_v2_tiny"], [54, 2, 1, "", "convnext_xlarge"], [56, 2, 1, "", "crossvit_15"], [57, 2, 1, "", "crossvit_15_dagger"], [58, 2, 1, "", "crossvit_18"], [59, 2, 1, "", "crossvit_18_dagger"], [60, 2, 1, "", "crossvit_9"], [61, 2, 1, "", "crossvit_9_dagger"], [62, 2, 1, "", "crossvit_base"], [63, 2, 1, "", "crossvit_small"], [64, 2, 1, "", "crossvit_tiny"], [66, 2, 1, "", "csp_darknet_53"], [67, 2, 1, "", "csp_resnet_50"], [68, 2, 1, "", "csp_resnext_50_32x4d"], [70, 2, 1, "", "cvt_13"], [71, 2, 1, "", "cvt_21"], [72, 2, 1, "", "cvt_w24"], [74, 2, 1, "", "densenet_121"], [75, 2, 1, "", "densenet_169"], [76, 2, 1, "", "densenet_201"], [77, 2, 1, "", "densenet_264"], [220, 2, 1, "", "detr_r101"], [221, 2, 1, "", "detr_r50"], [223, 2, 1, "", "efficientdet_d0"], [224, 2, 1, "", "efficientdet_d1"], [225, 2, 1, "", "efficientdet_d2"], [226, 2, 1, "", "efficientdet_d3"], [227, 2, 1, "", "efficientdet_d4"], [228, 2, 1, "", "efficientdet_d5"], [229, 2, 1, "", "efficientdet_d6"], [230, 2, 1, "", "efficientdet_d7"], [93, 2, 1, "", "efficientformer_l1"], [94, 2, 1, "", "efficientformer_l3"], [95, 2, 1, "", "efficientformer_l7"], [80, 2, 1, "", "efficientnet_b0"], [81, 2, 1, "", "efficientnet_b1"], [82, 2, 1, "", "efficientnet_b2"], [83, 2, 1, "", "efficientnet_b3"], [84, 2, 1, "", "efficientnet_b4"], [85, 2, 1, "", "efficientnet_b5"], [86, 2, 1, "", "efficientnet_b6"], [87, 2, 1, "", "efficientnet_b7"], [88, 2, 1, "", "efficientnet_v2_l"], [89, 2, 1, "", "efficientnet_v2_m"], [90, 2, 1, "", "efficientnet_v2_s"], [91, 2, 1, "", "efficientnet_v2_xl"], [232, 2, 1, "", "faster_rcnn_resnet_101_fpn"], [233, 2, 1, "", "faster_rcnn_resnet_50_fpn"], [101, 2, 1, "", "inception_next_atto"], [102, 2, 1, "", "inception_next_base"], [103, 2, 1, "", "inception_next_small"], [104, 2, 1, "", "inception_next_tiny"], [106, 2, 1, "", "inception_resnet_v1"], [107, 2, 1, "", "inception_resnet_v2"], [97, 2, 1, "", "inception_v1"], [98, 2, 1, "", "inception_v3"], [99, 2, 1, "", "inception_v4"], [110, 2, 1, "", "lenet_1"], [111, 2, 1, "", "lenet_4"], [112, 2, 1, "", "lenet_5"], [114, 2, 1, "", "maxvit_base"], [115, 2, 1, "", "maxvit_large"], [116, 2, 1, "", "maxvit_small"], [117, 2, 1, "", "maxvit_tiny"], [118, 2, 1, "", "maxvit_xlarge"], [123, 2, 1, "", "mobilenet"], [124, 2, 1, "", "mobilenet_v2"], [125, 2, 1, "", "mobilenet_v3_large"], [126, 2, 1, "", "mobilenet_v3_small"], [127, 2, 1, "", "mobilenet_v4_conv_large"], [128, 2, 1, "", "mobilenet_v4_conv_medium"], [129, 2, 1, "", "mobilenet_v4_conv_small"], [130, 2, 1, "", "mobilenet_v4_hybrid_large"], [131, 2, 1, "", "mobilenet_v4_hybrid_medium"], [134, 2, 1, "", "pvt_huge"], [135, 2, 1, "", "pvt_large"], [136, 2, 1, "", "pvt_medium"], [137, 2, 1, "", "pvt_small"], [138, 2, 1, "", "pvt_tiny"], [139, 2, 1, "", "pvt_v2_b0"], [140, 2, 1, "", "pvt_v2_b1"], [141, 2, 1, "", "pvt_v2_b2"], [142, 2, 1, "", "pvt_v2_b2_li"], [143, 2, 1, "", "pvt_v2_b3"], [144, 2, 1, "", "pvt_v2_b4"], [145, 2, 1, "", "pvt_v2_b5"], [147, 2, 1, "", "resnest_101"], [148, 2, 1, "", "resnest_14"], [149, 2, 1, "", "resnest_200"], [150, 2, 1, "", "resnest_26"], [151, 2, 1, "", "resnest_269"], [152, 2, 1, "", "resnest_50"], [153, 2, 1, "", "resnest_50_1s4x24d"], [154, 2, 1, "", "resnest_50_4s2x40d"], [156, 2, 1, "", "resnet_1001"], [157, 2, 1, "", "resnet_101"], [158, 2, 1, "", "resnet_152"], [159, 2, 1, "", "resnet_18"], [160, 2, 1, "", "resnet_200"], [161, 2, 1, "", "resnet_269"], [162, 2, 1, "", "resnet_34"], [163, 2, 1, "", "resnet_50"], [167, 2, 1, "", "resnext_101_32x16d"], [168, 2, 1, "", "resnext_101_32x32d"], [169, 2, 1, "", "resnext_101_32x4d"], [170, 2, 1, "", "resnext_101_32x8d"], [171, 2, 1, "", "resnext_101_64x4d"], [172, 2, 1, "", "resnext_50_32x4d"], [174, 2, 1, "", "se_resnet_101"], [175, 2, 1, "", "se_resnet_152"], [176, 2, 1, "", "se_resnet_18"], [177, 2, 1, "", "se_resnet_34"], [178, 2, 1, "", "se_resnet_50"], [179, 2, 1, "", "se_resnext_101_32x4d"], [180, 2, 1, "", "se_resnext_101_32x8d"], [181, 2, 1, "", "se_resnext_101_64x4d"], [182, 2, 1, "", "se_resnext_50_32x4d"], [184, 2, 1, "", "sk_resnet_18"], [185, 2, 1, "", "sk_resnet_34"], [186, 2, 1, "", "sk_resnet_50"], [187, 2, 1, "", "sk_resnext_50_32x4d"], [190, 2, 1, "", "swin_base"], [191, 2, 1, "", "swin_large"], [192, 2, 1, "", "swin_small"], [193, 2, 1, "", "swin_tiny"], [194, 2, 1, "", "swin_v2_base"], [195, 2, 1, "", "swin_v2_giant"], [196, 2, 1, "", "swin_v2_huge"], [197, 2, 1, "", "swin_v2_large"], [198, 2, 1, "", "swin_v2_small"], [199, 2, 1, "", "swin_v2_tiny"], [261, 2, 1, "", "transformer_base"], [262, 2, 1, "", "transformer_big"], [201, 2, 1, "", "vggnet_11"], [202, 2, 1, "", "vggnet_13"], [203, 2, 1, "", "vggnet_16"], [204, 2, 1, "", "vggnet_19"], [206, 2, 1, "", "vit_base"], [207, 2, 1, "", "vit_huge"], [208, 2, 1, "", "vit_large"], [209, 2, 1, "", "vit_small"], [210, 2, 1, "", "vit_tiny"], [164, 2, 1, "", "wide_resnet_101"], [165, 2, 1, "", "wide_resnet_50"], [212, 2, 1, "", "xception"], [249, 2, 1, "", "yolo_v1"], [250, 2, 1, "", "yolo_v1_tiny"], [252, 2, 1, "", "yolo_v2"], [253, 2, 1, "", "yolo_v2_tiny"], [255, 2, 1, "", "yolo_v3"], [256, 2, 1, "", "yolo_v3_tiny"], [258, 2, 1, "", "yolo_v4"], [214, 2, 1, "", "zfnet"]], "lucid.models.imggen": [[216, 1, 1, "", "DDPM"], [215, 1, 1, "", "VAE"]], "lucid.models.imggen.DDPM": [[216, 3, 1, "", "get_loss"], [216, 3, 1, "", "sample"]], "lucid.models.imggen.VAE": [[215, 3, 1, "", "current_beta"], [215, 3, 1, "", "decode"], [215, 3, 1, "", "encode"], [215, 3, 1, "", "reparameterize"]], "lucid.models.objdet.DETR": [[219, 3, 1, "", "forward"], [219, 3, 1, "", "get_loss"], [219, 3, 1, "", "predict"]], "lucid.models.objdet.EfficientDet": [[222, 3, 1, "", "forward"], [222, 3, 1, "", "get_loss"], [222, 3, 1, "", "predict"]], "lucid.models.objdet.YOLO_V1": [[248, 3, 1, "", "forward"], [248, 3, 1, "", "get_loss"]], "lucid.models.objdet.YOLO_V2": [[251, 3, 1, "", "forward"], [251, 3, 1, "", "get_loss"], [251, 3, 1, "", "predict"]], "lucid.models.objdet.YOLO_V3": [[254, 3, 1, "", "forward"], [254, 3, 1, "", "get_loss"], [254, 3, 1, "", "predict"]], "lucid.models.objdet.YOLO_V4": [[257, 3, 1, "", "forward"], [257, 3, 1, "", "get_loss"], [257, 3, 1, "", "predict"]], "lucid.models.objdet.util": [[237, 1, 1, "", "FPN"], [238, 1, 1, "", "MultiScaleROIAlign"], [239, 1, 1, "", "ROIAlign"], [240, 1, 1, "", "SelectiveSearch"], [241, 2, 1, "", "apply_deltas"], [242, 2, 1, "", "bbox_to_delta"], [243, 2, 1, "", "clip_boxes"], [245, 2, 1, "", "iou"], [246, 2, 1, "", "nms"]], "lucid.nn": [[413, 1, 1, "", "AdaptiveAvgPool1d"], [414, 1, 1, "", "AdaptiveAvgPool2d"], [415, 1, 1, "", "AdaptiveAvgPool3d"], [416, 1, 1, "", "AdaptiveMaxPool1d"], [417, 1, 1, "", "AdaptiveMaxPool2d"], [418, 1, 1, "", "AdaptiveMaxPool3d"], [380, 1, 1, "", "AlphaDropout"], [419, 1, 1, "", "AvgPool1d"], [420, 1, 1, "", "AvgPool2d"], [421, 1, 1, "", "AvgPool3d"], [396, 1, 1, "", "BCELoss"], [397, 1, 1, "", "BCEWithLogitsLoss"], [403, 1, 1, "", "BatchNorm1d"], [404, 1, 1, "", "BatchNorm2d"], [405, 1, 1, "", "BatchNorm3d"], [391, 1, 1, "", "Bilinear"], [263, 1, 1, "", "Buffer"], [372, 1, 1, "", "Conv1d"], [373, 1, 1, "", "Conv2d"], [374, 1, 1, "", "Conv3d"], [338, 1, 1, "", "ConvBNReLU1d"], [339, 1, 1, "", "ConvBNReLU2d"], [340, 1, 1, "", "ConvBNReLU3d"], [375, 1, 1, "", "ConvTranspose1d"], [376, 1, 1, "", "ConvTranspose2d"], [377, 1, 1, "", "ConvTranspose3d"], [398, 1, 1, "", "CrossEntropyLoss"], [341, 1, 1, "", "DepthSeparableConv1d"], [342, 1, 1, "", "DepthSeparableConv2d"], [343, 1, 1, "", "DepthSeparableConv3d"], [381, 1, 1, "", "DropBlock"], [382, 1, 1, "", "DropPath"], [383, 1, 1, "", "Dropout"], [384, 1, 1, "", "Dropout1d"], [385, 1, 1, "", "Dropout2d"], [386, 1, 1, "", "Dropout3d"], [355, 1, 1, "", "ELU"], [426, 1, 1, "", "Embedding"], [392, 1, 1, "", "Flatten"], [356, 1, 1, "", "GELU"], [406, 1, 1, "", "GlobalResponseNorm"], [407, 1, 1, "", "GroupNorm"], [357, 1, 1, "", "HardSigmoid"], [358, 1, 1, "", "HardSwish"], [399, 1, 1, "", "HuberLoss"], [393, 1, 1, "", "Identity"], [408, 1, 1, "", "InstanceNorm1d"], [409, 1, 1, "", "InstanceNorm2d"], [410, 1, 1, "", "InstanceNorm3d"], [411, 1, 1, "", "LayerNorm"], [359, 1, 1, "", "LeakyReLU"], [394, 1, 1, "", "Linear"], [400, 1, 1, "", "MSELoss"], [422, 1, 1, "", "MaxPool1d"], [423, 1, 1, "", "MaxPool2d"], [424, 1, 1, "", "MaxPool3d"], [360, 1, 1, "", "Mish"], [264, 1, 1, "", "Module"], [266, 1, 1, "", "ModuleDict"], [267, 1, 1, "", "ModuleList"], [369, 1, 1, "", "MultiHeadAttention"], [401, 1, 1, "", "NLLLoss"], [265, 1, 1, "", "Parameter"], [268, 1, 1, "", "ParameterDict"], [269, 1, 1, "", "ParameterList"], [361, 1, 1, "", "ReLU"], [362, 1, 1, "", "ReLU6"], [388, 1, 1, "", "Rearrange"], [363, 1, 1, "", "SELU"], [344, 1, 1, "", "SEModule"], [370, 1, 1, "", "ScaledDotProductAttention"], [345, 1, 1, "", "SelectiveKernel"], [270, 1, 1, "", "Sequential"], [364, 1, 1, "", "Sigmoid"], [365, 1, 1, "", "Softmax"], [366, 1, 1, "", "Swish"], [367, 1, 1, "", "Tanh"], [428, 1, 1, "", "Transformer"], [429, 1, 1, "", "TransformerDecoder"], [430, 1, 1, "", "TransformerDecoderLayer"], [431, 1, 1, "", "TransformerEncoder"], [432, 1, 1, "", "TransformerEncoderLayer"], [378, 1, 1, "", "Unfold"], [434, 1, 1, "", "Upsample"]], "lucid.nn.functional": [[317, 2, 1, "", "adaptive_avg_pool1d"], [318, 2, 1, "", "adaptive_avg_pool2d"], [319, 2, 1, "", "adaptive_avg_pool3d"], [320, 2, 1, "", "adaptive_max_pool1d"], [321, 2, 1, "", "adaptive_max_pool2d"], [322, 2, 1, "", "adaptive_max_pool3d"], [330, 2, 1, "", "affine_grid"], [291, 2, 1, "", "alpha_dropout"], [323, 2, 1, "", "avg_pool1d"], [324, 2, 1, "", "avg_pool2d"], [325, 2, 1, "", "avg_pool3d"], [310, 2, 1, "", "batch_norm"], [300, 2, 1, "", "bilinear"], [303, 2, 1, "", "binary_cross_entropy"], [304, 2, 1, "", "binary_cross_entropy_with_logits"], [283, 2, 1, "", "conv1d"], [284, 2, 1, "", "conv2d"], [285, 2, 1, "", "conv3d"], [286, 2, 1, "", "conv_transpose1d"], [287, 2, 1, "", "conv_transpose2d"], [288, 2, 1, "", "conv_transpose3d"], [305, 2, 1, "", "cross_entropy"], [292, 2, 1, "", "drop_block"], [293, 2, 1, "", "drop_path"], [294, 2, 1, "", "dropout"], [295, 2, 1, "", "dropout1d"], [296, 2, 1, "", "dropout2d"], [297, 2, 1, "", "dropout3d"], [272, 2, 1, "", "elu"], [333, 2, 1, "", "embedding"], [273, 2, 1, "", "gelu"], [311, 2, 1, "", "global_response_norm"], [331, 2, 1, "", "grid_sample"], [312, 2, 1, "", "group_norm"], [306, 2, 1, "", "huber_loss"], [314, 2, 1, "", "instance_norm"], [335, 2, 1, "", "interpolate"], [315, 2, 1, "", "layer_norm"], [275, 2, 1, "", "leaky_relu"], [302, 2, 1, "", "linear"], [327, 2, 1, "", "max_pool1d"], [328, 2, 1, "", "max_pool2d"], [329, 2, 1, "", "max_pool3d"], [308, 2, 1, "", "mse_loss"], [309, 2, 1, "", "nll_loss"], [316, 2, 1, "", "normalize"], [336, 2, 1, "", "one_hot"], [276, 2, 1, "", "relu"], [337, 2, 1, "", "rotate"], [282, 2, 1, "", "scaled_dot_product_attention"], [277, 2, 1, "", "selu"], [278, 2, 1, "", "sigmoid"], [279, 2, 1, "", "softmax"], [280, 2, 1, "", "tanh"], [290, 2, 1, "", "unfold"]], "lucid.nn.init": [[347, 2, 1, "", "constant"], [349, 2, 1, "", "kaiming_normal"], [350, 2, 1, "", "kaiming_uniform"], [351, 2, 1, "", "normal"], [352, 2, 1, "", "uniform"], [353, 2, 1, "", "xavier_normal"], [354, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[449, 1, 1, "", "ASGD"], [450, 1, 1, "", "Adadelta"], [451, 1, 1, "", "Adagrad"], [452, 1, 1, "", "Adam"], [453, 1, 1, "", "AdamW"], [454, 1, 1, "", "Adamax"], [455, 1, 1, "", "NAdam"], [437, 1, 1, "", "Optimizer"], [456, 1, 1, "", "RAdam"], [457, 1, 1, "", "RMSprop"], [458, 1, 1, "", "Rprop"], [459, 1, 1, "", "SGD"]], "lucid.optim.lr_scheduler": [[439, 1, 1, "", "CosineAnnealingLR"], [440, 1, 1, "", "CyclicLR"], [441, 1, 1, "", "ExponentialLR"], [442, 1, 1, "", "LRScheduler"], [443, 1, 1, "", "LambdaLR"], [444, 1, 1, "", "MultiStepLR"], [445, 1, 1, "", "ReduceLROnPlateau"], [446, 1, 1, "", "StepLR"]], "lucid.random": [[469, 2, 1, "", "bernoulli"], [471, 2, 1, "", "permutation"], [472, 2, 1, "", "rand"], [473, 2, 1, "", "randint"], [474, 2, 1, "", "randn"], [475, 2, 1, "", "seed"], [476, 2, 1, "", "uniform"]], "lucid.transforms": [[573, 1, 1, "", "CenterCrop"], [571, 1, 1, "", "Compose"], [574, 1, 1, "", "Normalize"], [575, 1, 1, "", "RandomCrop"], [576, 1, 1, "", "RandomGrayscale"], [577, 1, 1, "", "RandomHorizontalFlip"], [578, 1, 1, "", "RandomRotation"], [579, 1, 1, "", "RandomVerticalFlip"], [580, 1, 1, "", "Resize"], [572, 1, 1, "", "ToTensor"]], "lucid.types": [[461, 1, 1, "", "Numeric"]], "lucid.visual": [[583, 2, 1, "", "draw_tensor_graph"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"], "3": ["py", "method", "Python method"], "4": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function", "3": "py:method", "4": "py:attribute"}, "terms": {"": [3, 16, 17, 23, 25, 28, 55, 90, 108, 113, 125, 126, 131, 135, 147, 148, 149, 150, 151, 152, 205, 209, 216, 223, 224, 231, 233, 236, 237, 238, 248, 249, 250, 251, 252, 253, 254, 257, 260, 263, 264, 265, 266, 268, 269, 270, 282, 317, 318, 319, 345, 370, 378, 398, 401, 413, 414, 415, 419, 422, 423, 428, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 461, 464, 466, 467, 468, 478, 483, 492, 513, 514, 520, 529, 530, 533, 535, 536, 557, 560, 572, 574, 582, 586], "0": [0, 1, 3, 4, 5, 6, 7, 8, 11, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 32, 40, 41, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 88, 89, 90, 91, 92, 98, 100, 105, 108, 109, 113, 123, 132, 133, 134, 135, 136, 137, 138, 173, 188, 189, 205, 215, 216, 219, 220, 221, 222, 223, 231, 235, 236, 238, 239, 240, 241, 242, 243, 245, 246, 248, 249, 250, 251, 254, 257, 260, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 300, 302, 303, 304, 305, 306, 308, 309, 310, 311, 314, 315, 316, 317, 318, 319, 320, 323, 324, 325, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 408, 409, 410, 411, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 434, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 497, 498, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 529, 530, 531, 532, 534, 535, 536, 537, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 550, 552, 553, 554, 555, 558, 559, 560, 561, 563, 564, 565, 566, 567, 568, 569, 570, 571, 573, 574, 575, 576, 577, 578, 579, 580, 582, 585], "000": [5, 6, 7, 8, 94, 108, 140, 195, 261, 262, 493, 494], "0000": [398, 399, 401], "0001": [445, 449], "000e": [493, 494], "001": [440, 449, 452, 453, 455, 456, 459], "002": [454, 455], "003": [108, 137], "004": 455, "005": 359, "006": 440, "008": [57, 108, 123], "00808": 108, "009": [108, 140], "00b": [108, 234], "01": [16, 275, 359, 437, 439, 448, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459], "01051757": 474, "011": [38, 108], "01191": 108, "013": [76, 108, 585], "014": [64, 108], "016": [67, 108, 156], "01697": 108, "01b": 108, "02": 216, "0205": 398, "0217": 398, "0227": 398, "024": [108, 118, 129, 178], "025": [62, 108], "026": [108, 167], "02767": 234, "028": [108, 172, 585], "0299": 398, "02b": 108, "030": [232, 234], "032": [88, 108, 163, 585], "03545": 108, "03b": 108, "044715": [273, 356], "0450": 398, "0451": 398, "046": [86, 108], "047": [108, 202, 585], "04719755": 505, "0474259": 278, "048": [108, 137, 180], "0480": 398, "04861": 108, "04b": 108, "05": [92, 310, 312, 314, 315, 338, 339, 340, 359, 403, 404, 405, 407, 408, 409, 410, 411, 428, 430, 432], "050": [108, 209], "0507": [277, 363], "05m": 108, "06": [40, 100, 311, 406, 450, 458], "066": [52, 108], "068": [224, 234], "069": [108, 150, 161], "06m": 108, "07": [292, 303, 304, 305, 381, 396, 397, 398], "070": [108, 131], "0700": 398, "0706508": 367, "071": [108, 156], "072": [108, 144], "0721": 398, "073": [108, 186], "07722396": 366, "078": [234, 258], "0794": 401, "07b": 108, "08": [445, 452, 453, 454, 455, 456, 457], "0802": 401, "081": [108, 117], "083": [104, 108], "08333333": 25, "085537": 515, "086727": 360, "088": [108, 178], "08955": 108, "08b": 108, "08m": 108, "0900": [365, 398], "096": [34, 108, 212], "0986": [279, 365], "09861229": 517, "09883": 108, "0992": 398, "09b": 108, "1": [0, 1, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 100, 101, 102, 103, 104, 105, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 173, 179, 180, 181, 182, 183, 187, 188, 189, 200, 205, 211, 213, 215, 216, 219, 220, 221, 222, 224, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 248, 251, 252, 253, 254, 255, 256, 257, 258, 260, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 300, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 434, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 465, 467, 468, 469, 471, 472, 473, 474, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 497, 498, 499, 500, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 540, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 585, 586], "10": [0, 1, 2, 3, 5, 6, 7, 16, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 73, 93, 108, 109, 110, 111, 112, 113, 134, 147, 148, 149, 150, 151, 152, 153, 154, 200, 213, 214, 219, 226, 234, 238, 241, 242, 243, 245, 246, 266, 267, 270, 284, 285, 300, 302, 317, 369, 372, 373, 374, 385, 386, 391, 392, 394, 404, 405, 409, 413, 420, 421, 423, 428, 429, 430, 431, 432, 438, 441, 443, 444, 445, 451, 466, 473, 476, 477, 480, 483, 486, 487, 498, 507, 513, 514, 523, 529, 539, 545, 546, 563, 570, 573, 575, 576, 578, 586], "100": [6, 16, 30, 55, 88, 89, 90, 91, 92, 108, 201, 202, 203, 204, 219, 220, 221, 240, 243, 246, 439, 466, 582, 585], "1000": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 232, 233], "1000000": 449, "1001": [108, 156, 398], "1003": 398, "1007": 108, "10096": 108, "101": [108, 146, 147, 157, 164, 167, 168, 169, 170, 171, 174, 179, 180, 181, 219, 220, 232, 234], "10106": 108, "1014": 277, "102": [108, 161], "1024": [16, 34, 39, 65, 72, 227, 234, 235, 257, 262, 388], "1025": [267, 270], "1026": [267, 270], "1027": [267, 270], "10499": 278, "105": [62, 108], "1050": 364, "1054": 401, "1056": [267, 270], "10590": 108, "106": [108, 198, 234], "107": [39, 108], "108": [89, 108], "10934": 234, "1097": 108, "10b": 234, "11": [11, 93, 108, 131, 159, 176, 200, 201, 234, 300, 372, 373, 374, 385, 391, 404, 405, 409, 420, 421, 423, 483, 573, 574, 575, 576, 578, 585], "110": [108, 151, 246], "1105": 108, "1109": 108, "111": [82, 108], "1111": 396, "112": [108, 125, 152, 236], "1134": 300, "114b": 576, "119": [108, 300], "1192": [278, 279, 365], "12": [20, 25, 36, 37, 55, 62, 72, 73, 74, 75, 76, 77, 83, 94, 108, 110, 111, 134, 138, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 205, 242, 246, 261, 262, 268, 300, 316, 319, 372, 373, 374, 385, 386, 391, 404, 405, 409, 415, 420, 421, 423, 483, 487, 488, 573, 575, 576, 578], "120": [88, 108, 109, 112, 125, 126, 243], "12000": [261, 262], "121": [73, 74, 108], "12122": 108, "123": [349, 350, 351, 352, 353, 354, 475, 476], "124": [37, 108, 349, 350, 353, 354], "125": [252, 253, 421], "1250": 399, "1251": 108, "1258": 108, "126": [108, 164, 585], "128": [16, 31, 34, 40, 45, 60, 61, 86, 94, 106, 108, 113, 117, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 155, 164, 165, 190, 200, 215, 231, 237, 256, 270, 345, 571, 582], "1280": [37, 121, 228, 229, 234], "1280x1280": [228, 229], "128x128": [571, 582], "12b": 108, "13": [70, 97, 108, 200, 202, 252, 253, 254, 257, 300, 372, 373, 374, 391, 405, 420, 421, 423, 483, 573, 575, 576, 578, 585], "130": 243, "131": 585, "1312": [219, 234], "1314": 108, "132": [108, 201, 585], "1324": 108, "133": [108, 202, 234, 252, 585], "134": [226, 234], "136": [90, 108, 131, 234], "138": [108, 203, 585], "13b": [108, 234], "13k": 108, "13x13": [254, 255, 256, 257], "14": [33, 34, 35, 75, 108, 114, 115, 118, 140, 148, 372, 373, 374, 385, 386, 391, 405, 420, 421, 423, 483, 487, 496, 523, 573, 575, 576, 578, 585], "14030": 108, "1409": 108, "1415": 523, "14285715": 245, "143": [108, 204], "1436": 585, "144": 126, "1440": 234, "1448": 234, "145": 300, "147": 234, "148": [44, 108, 230, 234], "14899": 108, "149": [75, 108, 156, 234, 255, 585], "14b": 108, "14m": 108, "15": [0, 11, 51, 56, 57, 108, 219, 234, 245, 253, 300, 372, 373, 374, 391, 405, 420, 421, 423, 483, 487, 533, 573, 575, 576, 578, 582], "150": 240, "1513": 401, "152": [108, 130, 158, 175], "1536": [35, 36, 38, 118, 230, 234], "1536x1536": 230, "155": 483, "1556": 108, "156": [101, 108], "157": [35, 108], "1588": [273, 356], "15b": 108, "15m": 108, "16": [55, 71, 72, 73, 74, 108, 109, 112, 121, 125, 126, 132, 167, 173, 190, 194, 200, 203, 205, 206, 207, 208, 209, 210, 216, 231, 235, 236, 237, 238, 248, 254, 255, 257, 267, 268, 270, 282, 318, 319, 338, 339, 340, 344, 345, 369, 370, 372, 373, 374, 376, 377, 385, 386, 388, 391, 404, 405, 414, 415, 420, 421, 423, 428, 429, 430, 431, 432, 436, 483, 487, 513, 527, 573, 575, 576, 578], "160": [108, 125, 139, 157, 585], "16227766": 26, "16425": 401, "1643": 396, "166": 483, "167": [108, 234, 358], "169": [73, 75, 108], "16b": 108, "16x16": 108, "17": [108, 150, 219, 372, 373, 374, 391, 405, 421, 482, 573, 575, 576, 578], "170": [300, 585], "1704": 108, "171": [108, 115], "173": [230, 234], "174": [32, 108], "17520119": 526, "177": [108, 169], "17b": 108, "18": [58, 59, 95, 108, 111, 136, 143, 159, 176, 184, 190, 191, 192, 194, 195, 196, 197, 198, 227, 234, 372, 373, 374, 385, 391, 405, 421, 486, 487, 573, 575, 576, 578, 585, 586], "1800": 398, "1804": 234, "182": [108, 242], "184": 125, "187": [108, 115], "18877099": 366, "189": 108, "19": [11, 70, 84, 108, 200, 204, 253, 284, 285, 300, 373, 374, 405, 481, 483, 490], "192": [32, 33, 35, 36, 38, 40, 41, 55, 56, 57, 63, 64, 70, 71, 72, 95, 100, 108, 110, 111, 114, 115, 116, 118, 138, 158, 191, 585], "194": [108, 167], "196": [54, 72, 108, 191, 197], "1966": [279, 364, 365], "197": [43, 50, 108], "198": [108, 125], "199": [108, 207], "1998": [108, 398], "19b": 108, "1_53": 108, "1d": [246, 283, 286, 317, 320, 323, 327, 338, 341, 378, 403, 408, 413, 416, 472, 476, 483, 492, 533, 545, 546, 551, 553, 554, 555, 562, 567], "1e": [20, 25, 40, 92, 100, 139, 140, 141, 143, 144, 145, 216, 292, 303, 304, 305, 310, 311, 312, 314, 315, 316, 338, 339, 340, 381, 396, 397, 398, 403, 404, 405, 406, 407, 408, 409, 410, 411, 428, 430, 432, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "1e6": 449, "1k": 586, "1s4x24d": 153, "1st": [29, 213], "1x1": [65, 219, 237], "2": [1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 55, 57, 59, 61, 65, 70, 72, 78, 79, 88, 89, 90, 91, 92, 93, 94, 108, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 125, 126, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 154, 159, 176, 184, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 213, 215, 216, 219, 222, 223, 224, 225, 226, 227, 228, 229, 231, 234, 235, 236, 238, 241, 242, 246, 248, 249, 250, 251, 254, 257, 263, 264, 265, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 300, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 388, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 426, 434, 436, 439, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 467, 468, 469, 471, 472, 473, 474, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 496, 497, 498, 499, 500, 501, 502, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 585], "20": [0, 5, 6, 7, 8, 72, 76, 108, 216, 217, 219, 240, 241, 242, 245, 246, 248, 249, 250, 252, 253, 266, 267, 270, 373, 374, 385, 405, 429, 430, 438, 442, 444, 446, 487, 515, 570, 585], "200": [95, 108, 125, 149, 160], "2000": 240, "2004": [108, 234], "201": [76, 108, 149], "2011": 344, "2012": 108, "2014": [108, 217, 234], "2015": [108, 234], "2016": [108, 234, 248, 249], "2017": [108, 222, 234, 259, 428], "2018": [108, 234, 344], "2019": 108, "2020": [108, 216, 217, 222, 234], "2021": 108, "2022": 108, "2023": [108, 344], "2024": 108, "2039": 401, "204": 374, "2048": [37, 38, 39, 65, 231, 260, 428, 430, 432], "209": [57, 108], "20b": [108, 234], "21": [71, 90, 108, 162, 177, 232, 233, 234, 252, 268, 300, 373, 374, 405, 487, 585], "210": [91, 108], "2102": 108, "2103": 108, "211": 483, "2111": 108, "213": [259, 262], "214": 234, "21841": [49, 54], "21b": 234, "21m": [108, 234], "22": [11, 67, 68, 106, 108, 142, 209, 212, 241, 246, 300, 373, 374, 385, 405, 481, 483], "2201": 108, "2204": 108, "2206": 108, "221": [91, 108], "222": 234, "2231": [398, 401], "224": [29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 100, 101, 102, 103, 104, 108, 113, 114, 115, 116, 117, 118, 123, 124, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 165, 167, 168, 169, 170, 171, 172, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 205, 206, 207, 208, 209, 210, 213, 232, 233, 236, 238, 586], "2247": [403, 404, 405, 408, 409, 410, 411], "224x224": [67, 78, 97, 179, 180, 181, 182, 187, 233, 236], "226": 483, "22752314": 474, "2278": 108, "2291952": 360, "22b": 108, "23": [108, 137, 147, 157, 164, 167, 168, 169, 170, 171, 174, 234, 256, 373, 374, 405, 523], "230": 585, "2301": 108, "2315": 397, "232": [62, 108, 123, 181, 227, 234], "2324": [108, 363], "233": [48, 108], "234": [349, 350, 351, 352, 353, 354, 476], "2345": 523, "235": [83, 108], "236": [234, 250], "237": [259, 262], "238": [108, 126, 143], "23840584": 366, "23b": 108, "24": [73, 74, 121, 125, 126, 149, 153, 160, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 234, 239, 242, 250, 300, 318, 373, 374, 385, 405, 414, 487, 490, 513], "240": [33, 48, 56, 57, 58, 59, 60, 61, 62, 63, 64, 108, 125, 126, 204, 585], "240x240": 78, "242": 585, "2424": [279, 365], "244": 585, "2447": 365, "246": [108, 110, 585], "248": 585, "24d": 153, "25": [0, 108, 117, 141, 153, 163, 172, 184, 219, 222, 245, 257, 278, 287, 288, 293, 364, 374, 400, 405, 420, 421, 480, 498, 522, 535, 585], "2500": [396, 399, 401], "2512": 355, "2525015": 360, "2547": 363, "256": [31, 34, 37, 39, 40, 55, 60, 61, 65, 113, 117, 132, 133, 134, 139, 155, 200, 219, 231, 235, 237, 238, 239, 240, 256, 257], "258": [108, 192], "25m": 108, "26": [63, 108, 150, 254, 257, 268, 302, 374, 394, 405, 487], "260": 108, "260x260": 78, "26325684": 474, "264": [77, 108], "265": 108, "266": [59, 108], "2689": [279, 364, 365, 397], "26894142": 366, "269": [108, 151, 161], "26m": 234, "26x26": [254, 255, 256, 257], "27": [32, 56, 66, 108, 135, 144, 152, 182, 300, 372, 374, 405, 512], "271": [58, 108, 234, 249], "272": [63, 108, 171, 585], "274": [108, 147, 187], "276": [349, 350, 353, 354], "277": [36, 72, 108], "278": [66, 108], "27b": 108, "28": [36, 37, 45, 53, 57, 104, 108, 110, 111, 178, 193, 199, 219, 242, 300, 374, 392, 487], "280": [52, 108], "286": [108, 134, 226, 234], "287": [234, 252], "288": [108, 126, 149, 193], "289": [49, 80, 108], "28x28": [7, 8, 110, 111], "29": [108, 187, 228, 234, 374], "293": 108, "296": [60, 108], "299": [108, 211], "299r": 576, "299x299": [98, 99, 106, 107], "29b": 108, "2_i": [408, 409, 410], "2c": 440, "2d": [219, 284, 287, 296, 318, 321, 324, 328, 330, 339, 342, 376, 404, 409, 414, 417, 483, 492, 495, 530, 533, 543, 544, 546, 547, 551, 552, 553, 555, 562, 578], "2e": 454, "2k": 236, "2nd": [29, 213], "2x": 154, "2x2": [290, 573, 575], "2x3": 330, "3": [1, 2, 3, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 95, 100, 101, 102, 103, 104, 108, 110, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 129, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 195, 198, 199, 200, 205, 211, 213, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 240, 246, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 267, 268, 269, 270, 273, 278, 279, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 300, 302, 306, 308, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 388, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 434, 436, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 509, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 526, 527, 528, 529, 530, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 585, 586], "30": [85, 94, 98, 108, 151, 154, 161, 249, 250, 267, 337, 374, 440, 444, 445, 570, 578, 585], "300": [108, 232, 233, 240], "300x300": 78, "301": [36, 108], "302": [89, 108, 234], "3026": 401, "3034016": 360, "304": [108, 116, 208], "3072": [39, 205], "308": [108, 197], "30823025": 366, "31": [71, 108, 300, 374, 483], "310": [493, 494], "316": 108, "31622777": 26, "319": [108, 585], "31b": 108, "32": [11, 16, 31, 55, 66, 73, 75, 76, 108, 112, 113, 127, 139, 146, 147, 148, 149, 150, 151, 152, 167, 168, 169, 170, 172, 190, 194, 215, 216, 219, 235, 236, 237, 238, 239, 254, 255, 257, 267, 270, 300, 302, 318, 338, 339, 340, 344, 345, 373, 374, 376, 388, 394, 414, 436, 461, 481, 482, 487], "320": [94, 108, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 150], "321": [349, 350, 353, 354], "325": 234, "326": [108, 174, 208], "328": [95, 108], "32b": 108, "32m": 108, "32x16d": 108, "32x32": [5, 6, 109, 112], "32x32d": 108, "32x4d": [68, 108, 179, 182, 187], "32x8d": [108, 180], "33": [77, 108, 267, 270, 302, 374, 394, 513], "330": [33, 108], "3318": 397, "3333": 316, "33333333": 25, "336": [38, 43, 108, 170, 201, 242, 585], "337": [77, 108], "339": 585, "33b": 108, "34": [108, 162, 177, 185, 267, 270, 300, 374, 483, 487], "342": [349, 350, 353, 354], "344": [84, 108], "345": [349, 350, 351, 352, 353, 354, 476], "349": [108, 199], "34b": 108, "35": [107, 108, 267, 270, 374], "350": [54, 108], "352": [97, 108], "354": [108, 193], "355": [87, 108], "3567": [396, 401], "357": [108, 203, 214, 585], "359": [108, 135], "35b": 108, "36": [108, 149, 158, 160, 175, 374], "362": [108, 141], "364": 108, "367": 108, "3679": [272, 277, 355], "368": [108, 184, 186], "36b": 108, "36th": 108, "37": [108, 130, 372], "370": [82, 108], "372": 300, "375": 400, "3750": 399, "376": 108, "37754067": 366, "378": [108, 111, 585], "37b": 108, "38": 108, "380": 108, "380x380": 78, "383": [108, 118], "38344152": 472, "384": [32, 33, 35, 36, 38, 40, 41, 55, 56, 57, 62, 63, 70, 71, 95, 100, 108, 114, 115, 116, 118, 231], "38629436": 517, "389056": 515, "38b": 108, "38th": 108, "39": 108, "392": [72, 98, 108], "393": [85, 97, 108], "3935": 355, "3965": 108, "3977": 108, "39b": 108, "39m": 108, "3d": [285, 288, 297, 319, 322, 325, 329, 340, 343, 374, 377, 378, 405, 410, 415, 418], "3x3": [108, 237, 378, 477], "4": [0, 1, 2, 3, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 55, 60, 61, 62, 63, 64, 65, 71, 73, 78, 92, 93, 94, 100, 101, 108, 109, 110, 111, 113, 123, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 177, 178, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 216, 219, 220, 221, 222, 227, 231, 232, 233, 235, 238, 239, 240, 241, 242, 243, 245, 246, 251, 257, 268, 270, 282, 283, 284, 285, 286, 287, 290, 292, 293, 295, 296, 297, 300, 302, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 323, 324, 325, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 341, 342, 343, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 391, 392, 394, 396, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 426, 434, 445, 449, 452, 456, 457, 459, 464, 471, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 497, 500, 502, 509, 513, 514, 517, 518, 519, 520, 521, 522, 525, 527, 528, 529, 530, 531, 533, 534, 535, 536, 537, 538, 539, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 561, 562, 563, 564, 565, 566, 567, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 585], "40": [99, 108, 121, 125, 126, 145, 154, 238, 444, 570], "400": [46, 108, 112, 194, 207, 221, 234], "404": 234, "4044": 396, "406": 236, "4076": 398, "4078608": 360, "408": [58, 108], "4096": [29, 213, 231, 235], "40b": 108, "40d": 154, "41": [108, 136, 221, 234], "41421356": 18, "415": 108, "416": [108, 117, 161, 179, 210, 234, 251, 252, 253, 254, 255, 256, 257, 258], "416362": 360, "41666667": 25, "416x416": [255, 256], "417": [108, 154], "41808962": 474, "419974": 280, "4199743": 367, "41b": [108, 234], "42": [38, 39, 195, 300, 344, 477], "421": [349, 350, 353, 354], "423": [349, 350, 351, 352], "424": 108, "42718872": 26, "4278": 108, "4284": 108, "4286": [316, 396], "42b": 108, "43": [11, 58, 86, 108, 233, 234, 481, 483, 490], "431": [103, 108], "432": [85, 108], "4323": 355, "434": [225, 234], "4375": 399, "43758721": 472, "43b": 108, "44": [59, 108, 157, 169, 219, 585], "440": [90, 108], "4472": 316, "4472136": 20, "448": [58, 59, 87, 93, 108, 234, 248, 249, 250], "4495": [405, 410], "44b": 108, "45": [108, 143, 185, 300, 337, 578], "450": 256, "4510": 108, "4520": 108, "4545": 380, "455": [108, 171, 585], "456": [108, 236], "456x456": 78, "457": [108, 138, 225, 234], "45b": 108, "45m": 234, "46": [44, 108], "460": [95, 108], "462": [234, 250], "463": [67, 108], "464": [42, 56, 108, 154], "468": [108, 168], "46b": 108, "4700": 108, "4708": 108, "47112767": 507, "472": [108, 168, 259, 262], "4742": 397, "476": [108, 191], "47b": 108, "47m": 108, "48": [73, 76, 77, 93, 108, 126, 147, 151, 161, 179, 191, 195, 196, 197, 302, 394], "480": [70, 75, 108, 125, 585], "481": [108, 125], "483": [108, 152, 585], "485": 236, "488": [234, 258], "48b": 108, "48m": 108, "49": [103, 108, 174, 192, 198], "492": [108, 136], "496": [53, 108], "4979": 355, "49b": 108, "49k": 108, "4d": 222, "4s2x40d": [108, 154], "4x": 153, "4x4": 580, "5": [1, 2, 11, 13, 14, 16, 17, 22, 23, 24, 25, 29, 32, 37, 40, 48, 55, 56, 57, 65, 66, 67, 68, 78, 80, 92, 94, 98, 108, 109, 110, 111, 112, 113, 116, 117, 121, 125, 126, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 183, 184, 185, 186, 210, 213, 219, 222, 224, 228, 231, 234, 235, 236, 238, 239, 241, 243, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 264, 265, 266, 267, 268, 270, 273, 278, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 300, 302, 306, 308, 310, 312, 314, 315, 317, 320, 323, 324, 330, 331, 333, 335, 338, 339, 340, 345, 347, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 372, 373, 374, 375, 378, 380, 381, 382, 383, 384, 385, 386, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 407, 408, 409, 410, 411, 413, 416, 419, 420, 421, 423, 424, 428, 430, 432, 438, 440, 442, 444, 445, 446, 458, 464, 469, 471, 473, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 495, 498, 500, 502, 504, 505, 506, 519, 520, 521, 522, 524, 529, 530, 533, 534, 535, 536, 537, 543, 545, 546, 547, 548, 551, 556, 557, 558, 559, 563, 564, 565, 566, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 585, 586], "50": [5, 6, 11, 67, 68, 108, 146, 152, 153, 154, 155, 163, 165, 172, 178, 182, 186, 187, 219, 221, 232, 233, 234, 240, 243, 302, 394, 439, 458, 481, 483, 498, 576, 577, 579, 582], "5000": [260, 396, 399, 401], "504": [108, 124, 585], "508": [232, 234], "509": [68, 108], "50_1s4x24d": 108, "50b": [108, 234], "510": 108, "5108": 401, "512": [31, 34, 37, 39, 40, 55, 65, 94, 107, 108, 113, 117, 128, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 155, 159, 185, 215, 223, 231, 234, 235, 236, 237, 256, 257, 260, 261, 369, 428, 429, 430, 431, 432, 585], "515": [233, 234], "516": [34, 108], "519": 108, "51b": 108, "52": [219, 229, 234, 254, 257], "520": [101, 108], "52359878": 506, "528": [56, 108, 220, 234], "528x528": 78, "52b": 108, "52x52": [254, 255, 256, 257], "53": [33, 66, 108, 254, 255, 257, 258, 300, 482], "530": [108, 168], "531": [108, 585], "532": [108, 191, 585], "536": [66, 83, 108], "537": [108, 126], "54": 585, "542": 585, "543": [349, 350, 351, 352, 353, 354, 476], "54308063": 511, "544": [103, 108, 203, 259, 261, 585], "545": 488, "5455": 380, "549": [108, 157, 585], "54b": 108, "55": [89, 108, 116, 135, 234], "553": [60, 108, 142, 585], "556": [108, 144, 228, 234], "557": [108, 163, 585], "558": [38, 108, 234], "559": [108, 182], "55b": 108, "560": [81, 108, 148], "563": [349, 350, 353, 354], "564": [108, 195], "5652": 585, "567": [108, 206], "5672": 108, "568": [91, 108], "5683": 108, "569": [108, 180], "57": [108, 186, 300], "570": [220, 234], "57079633": [505, 506], "5714": 316, "5720": 108, "5730": 108, "5731": 397, "57366333": 475, "575": 585, "576": 126, "578": [221, 234], "57b": 108, "580": 234, "582": 108, "584": [108, 259, 261], "5849625": 518, "586": [99, 108], "587": 234, "587g": 576, "589": [45, 108], "590": [108, 127], "591": [42, 108, 223, 234], "592": [61, 108, 176], "5987": 108, "5995": 108, "5998": 259, "59b": 108, "5d": 288, "5th": [29, 213], "6": [11, 17, 25, 29, 31, 33, 34, 35, 38, 40, 55, 56, 57, 58, 59, 63, 65, 70, 71, 73, 74, 75, 76, 77, 78, 92, 93, 94, 95, 100, 108, 109, 112, 114, 115, 118, 132, 133, 137, 139, 140, 141, 142, 143, 144, 145, 146, 152, 155, 162, 163, 165, 172, 177, 178, 185, 186, 188, 189, 191, 192, 193, 195, 196, 197, 198, 199, 213, 219, 222, 225, 229, 234, 260, 268, 269, 283, 284, 285, 286, 290, 292, 297, 300, 302, 311, 312, 316, 317, 320, 321, 330, 331, 333, 350, 354, 357, 362, 372, 373, 374, 378, 381, 383, 384, 385, 386, 391, 392, 394, 396, 403, 404, 405, 406, 408, 409, 410, 411, 413, 416, 417, 420, 421, 423, 424, 428, 429, 431, 450, 458, 464, 471, 476, 478, 479, 480, 481, 482, 483, 486, 487, 488, 489, 490, 491, 492, 493, 494, 500, 502, 513, 514, 519, 520, 521, 529, 530, 533, 534, 535, 536, 541, 543, 548, 555, 556, 557, 558, 559, 564, 565, 566, 569, 572, 573, 574, 575, 576, 578, 580], "60": [5, 6, 108, 134, 158, 220, 234, 243, 490, 585], "600": [78, 108, 236], "6008": 259, "600x600": 78, "6052": 401, "606": [108, 192], "6065": 355, "608": [37, 108, 214, 234], "60b": 108, "61": [30, 108, 112, 585], "6105": 108, "611": [108, 148], "6114": 108, "6124": [403, 404, 405, 408, 409, 410, 411], "617": [88, 108], "62": [108, 144, 214, 232, 234, 255, 259, 261, 300], "622": [71, 108, 229, 234], "623": [51, 108], "626": [108, 114], "62686041": 526, "62b": 108, "630": 108, "632": [36, 108, 207, 208], "6321": [272, 355], "63245553": 26, "634": [229, 234], "635": [53, 108], "636": [80, 108], "63b": 108, "64": [31, 40, 65, 67, 68, 70, 71, 73, 77, 92, 94, 108, 113, 114, 115, 116, 117, 121, 125, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 160, 171, 183, 200, 215, 231, 235, 236, 237, 238, 267, 270, 300, 344, 345, 461], "640": [49, 84, 108, 224, 234], "641": 108, "645": 108, "64589411": 472, "647": [108, 184], "648": [108, 136], "649": [216, 217], "64b": 108, "64x4d": [108, 181], "654": [349, 350, 351, 352, 353, 354, 476], "656": [35, 108, 206, 223, 234], "657": [108, 196, 349, 350, 353, 354], "6590": [279, 365], "65b": 108, "66": [87, 108, 175], "660": [49, 108], "664": [108, 209], "6652": 365, "666": [108, 139], "66666667": 25, "6667": [316, 396], "667": [108, 204], "668": [108, 196], "6682": 396, "669": [108, 160], "66b": 108, "67": [483, 585], "672": [108, 125, 162, 585], "67326": 363, "6733": 277, "676": [108, 153], "6767": 585, "677": 108, "678": [349, 350, 351, 352, 353, 354], "67b": 108, "67m": 108, "68": 585, "688": [39, 108], "68811989": 474, "689": [108, 159, 585], "68b": 108, "69": 586, "6902": 585, "69314718": 517, "696": [71, 108, 143, 164, 585], "6976": 585, "6992": 585, "69b": 108, "7": [10, 11, 14, 24, 39, 58, 59, 64, 74, 81, 108, 113, 133, 139, 140, 141, 142, 143, 144, 145, 188, 189, 200, 222, 230, 231, 235, 238, 239, 248, 249, 250, 268, 283, 284, 285, 290, 292, 297, 300, 302, 303, 305, 317, 330, 331, 333, 345, 356, 362, 363, 364, 367, 372, 373, 374, 378, 381, 385, 386, 391, 392, 394, 396, 397, 398, 400, 404, 405, 409, 410, 413, 416, 420, 421, 423, 424, 469, 473, 476, 479, 481, 482, 483, 487, 489, 490, 492, 496, 498, 515, 520, 529, 530, 533, 534, 535, 543, 547, 559, 562, 564, 565, 572, 573, 574, 575, 576, 578, 580, 585], "70": [7, 8, 108, 149, 219], "7001": 398, "704": [77, 108, 169], "706": [108, 112, 134, 585], "70710678": [20, 525], "708": [46, 108], "70b": 108, "7132": 108, "7141": 108, "7147": 401, "715": [108, 128], "7159": 585, "716": [234, 249], "717": [47, 108, 210], "7182": 523, "7182818": 515, "7188": 585, "71b": 108, "71m": [108, 234], "72": [121, 125, 126, 523], "720": [234, 250], "7237": 585, "7263": 234, "726791": 108, "7271": 234, "72b": 108, "73": 108, "731": [108, 198], "7311": [279, 364, 365], "7331": 585, "734": [108, 118, 234, 249], "739": [106, 108], "73b": 108, "74": [483, 585], "740": [227, 234], "7404": 585, "7434": 585, "745": [108, 197], "748": [102, 108], "74b": 108, "75": [246, 287, 302, 394, 400, 449, 498], "752": [224, 234], "755": [108, 130], "7560": 585, "757": [108, 116], "7581": 277, "75b": 108, "760": [108, 139, 147, 187], "7613": 585, "76159416": [366, 532], "7616": [280, 367], "76219569": 511, "7635": 363, "767": [43, 108], "768": [32, 33, 35, 36, 38, 40, 41, 62, 72, 95, 100, 108, 114, 115, 116, 118, 134, 190, 205, 225, 234], "7690": 585, "77": [234, 585], "770": [37, 108], "772": 488, "7737": 585, "774": [108, 129], "776": [61, 108, 114], "7761": 585, "778": [108, 176], "77b": 108, "78": [108, 165], "7831": 585, "78357324": 474, "784": [16, 215, 392], "7846": 585, "78539816": 507, "7885": 585, "789": 108, "78b": 108, "790": [35, 108], "7906": 585, "791": [108, 170, 585], "79172504": 472, "792": [108, 167], "7931": 585, "7937": 585, "795": [81, 108], "796": [108, 196], "797": [108, 162, 585], "79b": 108, "7x7": 213, "8": [11, 23, 27, 38, 39, 55, 60, 61, 73, 78, 95, 108, 113, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 155, 158, 161, 167, 168, 169, 170, 171, 172, 175, 184, 185, 186, 190, 194, 219, 237, 238, 240, 246, 249, 250, 254, 255, 257, 260, 267, 268, 270, 282, 283, 284, 285, 287, 290, 292, 297, 300, 302, 303, 316, 317, 318, 319, 322, 330, 331, 333, 338, 339, 340, 344, 356, 357, 363, 364, 367, 369, 370, 372, 373, 374, 376, 377, 378, 381, 383, 384, 385, 386, 391, 392, 394, 396, 400, 404, 405, 407, 409, 410, 413, 414, 415, 416, 418, 420, 421, 423, 424, 428, 429, 430, 431, 432, 445, 452, 453, 454, 455, 456, 457, 469, 473, 480, 481, 482, 483, 487, 488, 490, 491, 492, 508, 512, 520, 529, 530, 533, 534, 535, 543, 547, 559, 563, 564, 565, 572, 573, 574, 575, 576, 578, 580, 583, 585, 586], "80": [5, 6, 7, 8, 125, 222, 223, 224, 225, 226, 227, 228, 229, 230, 254, 255, 256, 257, 258], "800": [47, 51, 64, 108, 219, 220, 221, 234, 236], "8005": 398, "808": [108, 158, 585], "80b": 108, "81": [95, 108], "817": [98, 108], "818": 108, "8182": 380, "81b": 108, "82": [34, 108, 145, 300, 585], "821": [108, 175, 234, 253], "8210": 585, "82b": 108, "83": [108, 171, 585], "832": [104, 108], "8325": 585, "833": 108, "83b": 108, "84": [109, 111, 112], "840": [30, 50, 93, 102, 108, 585], "8413": [273, 356], "842": [108, 199], "847": [107, 108], "848": [108, 135, 175, 202, 585], "849": 108, "84b": 108, "84m": 234, "856": [63, 74, 108, 141, 585], "85772238": 366, "8584": 363, "85b": 108, "86": [102, 108, 206], "862": [108, 212], "863": [108, 201, 234, 253, 585], "864": [68, 108, 127, 160], "868": [108, 177], "869": [108, 195], "87": [108, 190, 194, 230, 234], "872": [108, 124, 153, 174, 585], "8740": 585, "876": [349, 350, 353, 354, 476], "87m": 108, "88": [42, 47, 108, 126, 170, 181, 234, 585], "880": [108, 115], "8808": [279, 364, 365], "882": [108, 145, 228, 234], "883": 585, "884": [44, 108], "886": [108, 164, 585], "8863": 585, "887": 488, "88m": 108, "8907": 585, "891773": 472, "8924": 585, "893": [94, 108], "8944": 316, "89442719": 20, "895": [108, 185], "896": [108, 182, 226, 234], "89b": 108, "9": [0, 1, 3, 8, 27, 40, 41, 52, 60, 61, 82, 92, 100, 108, 128, 222, 241, 246, 254, 255, 284, 290, 292, 300, 302, 317, 330, 333, 372, 373, 374, 378, 381, 385, 391, 394, 396, 404, 405, 409, 413, 420, 421, 423, 438, 441, 449, 450, 452, 453, 454, 455, 456, 457, 459, 469, 473, 476, 479, 483, 487, 488, 489, 492, 497, 516, 527, 528, 539, 543, 563, 564, 565, 572, 573, 574, 575, 576, 578, 585], "902": [233, 234], "9029": 585, "9038": 585, "904": [108, 172, 585], "907": [216, 217], "90709145": 475, "9087": 585, "9091": 380, "90b": 234, "91": [219, 220, 221], "9120": 401, "9124": 585, "9134": 585, "9163": 401, "9197": 585, "91m": 108, "92": [219, 220, 221], "920": [108, 134], "922": [108, 194], "9248": 585, "928": [76, 93, 108, 585], "9281": 585, "9286": 585, "929": [108, 151], "92b": 108, "93": [108, 180, 234, 258], "933": 234, "9337": 585, "9370": 585, "93b": 108, "93k": 108, "93m": [108, 234], "94": 156, "9409": 585, "9439592": 360, "944": [32, 108], "9457": 585, "9486833": 26, "949e": [493, 494], "94b": 108, "95": [443, 585], "9526": 278, "9534": 585, "9545": 356, "955": [108, 179], "956": [50, 108], "958": [108, 177], "95b": 108, "96": [32, 33, 40, 41, 64, 93, 95, 100, 108, 113, 114, 115, 116, 126, 188, 189], "960": 125, "9600": 585, "96366276": 472, "9640": 367, "96402758": 532, "9645": 585, "968": [54, 108], "97": 585, "973": [108, 165], "974": [234, 255], "976": [59, 108], "978": [39, 74, 108, 585], "97b": 108, "984": [99, 108, 145, 181], "9865277": 360, "98b": 108, "99": [243, 457], "9957": 401, "997": [70, 108, 256], "99734545": 475, "9981": 585, "999": [0, 452, 453, 454, 455, 456], "99b": 108, "A": [1, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 31, 40, 65, 66, 68, 70, 71, 72, 79, 105, 108, 109, 119, 122, 132, 134, 135, 136, 137, 138, 146, 155, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 215, 216, 217, 218, 219, 220, 221, 232, 235, 236, 237, 238, 239, 240, 242, 243, 245, 246, 251, 256, 264, 270, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 290, 291, 292, 293, 294, 295, 296, 300, 302, 303, 304, 305, 309, 310, 311, 312, 314, 315, 316, 330, 331, 335, 336, 345, 370, 380, 381, 383, 384, 385, 386, 388, 396, 397, 398, 401, 403, 404, 405, 406, 408, 409, 410, 411, 426, 428, 429, 430, 431, 432, 436, 437, 438, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 469, 471, 472, 473, 474, 476, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 578], "As": [65, 222, 376, 475], "At": [16, 434, 445], "Be": [0, 10], "By": [0, 2, 3, 16, 108, 122, 129, 156, 157, 158, 159, 160, 161, 162, 163, 265, 337, 436, 456, 464, 469, 472, 473, 474, 476, 572, 582], "For": [2, 3, 4, 11, 14, 18, 19, 20, 22, 23, 24, 25, 27, 127, 128, 129, 131, 220, 221, 222, 231, 236, 248, 251, 254, 270, 272, 273, 275, 276, 277, 278, 280, 286, 300, 302, 316, 335, 336, 349, 350, 353, 354, 363, 372, 373, 374, 375, 378, 391, 394, 403, 404, 405, 408, 409, 410, 436, 448, 468, 471, 475, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 513, 514, 515, 517, 518, 519, 520, 521, 525, 527, 529, 530, 533, 534, 535, 539, 553, 555, 560, 562, 566, 568, 582], "If": [0, 1, 2, 5, 6, 7, 8, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 55, 65, 92, 155, 215, 216, 219, 220, 221, 235, 236, 251, 254, 264, 266, 267, 268, 269, 272, 273, 275, 276, 277, 278, 280, 282, 283, 284, 285, 286, 287, 293, 297, 300, 302, 310, 312, 314, 318, 319, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 349, 350, 369, 370, 372, 373, 374, 375, 376, 377, 382, 391, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 407, 408, 409, 410, 411, 414, 415, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 434, 437, 439, 440, 441, 442, 443, 444, 445, 446, 452, 453, 457, 458, 461, 466, 467, 468, 469, 472, 473, 474, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 545, 546, 547, 548, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 567, 568, 569, 572, 576, 577, 579, 580, 583, 586], "In": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586], "It": [1, 2, 3, 7, 10, 11, 16, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 53, 55, 66, 67, 74, 75, 76, 77, 92, 95, 96, 97, 98, 108, 109, 110, 111, 112, 113, 114, 115, 118, 120, 121, 123, 131, 136, 143, 145, 155, 156, 157, 158, 159, 160, 161, 162, 163, 176, 189, 196, 198, 200, 212, 215, 216, 217, 218, 219, 222, 234, 235, 236, 237, 238, 240, 241, 246, 248, 250, 251, 254, 257, 259, 264, 266, 267, 268, 269, 270, 286, 287, 288, 293, 297, 300, 331, 333, 335, 337, 338, 339, 340, 344, 356, 357, 361, 362, 367, 369, 370, 375, 377, 382, 388, 391, 393, 396, 398, 399, 400, 401, 407, 413, 414, 415, 426, 428, 429, 431, 434, 436, 437, 448, 449, 455, 457, 458, 459, 461, 464, 465, 467, 468, 471, 475, 478, 479, 480, 481, 484, 485, 486, 488, 489, 498, 519, 521, 539, 542, 548, 551, 552, 553, 554, 555, 556, 559, 560, 561, 562, 566, 567, 569, 571, 572], "Its": [11, 27, 477], "Near": 25, "No": [219, 290, 293, 392, 397, 462], "Not": [331, 393], "One": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586], "Or": 586, "Such": 478, "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 300, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 388, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 586], "Then": [216, 232, 490], "There": 556, "These": [4, 10, 17, 20, 23, 26, 28, 31, 88, 89, 90, 91, 113, 118, 127, 128, 129, 130, 131, 134, 164, 165, 184, 185, 186, 212, 218, 236, 380, 383, 384, 385, 386, 396, 398, 399, 400, 401, 403, 404, 405, 408, 409, 410, 411, 458, 477, 582, 584], "To": [3, 16, 108, 216, 217, 233, 234, 251, 254, 259, 438, 448, 469, 471, 474, 477, 493, 494, 551, 567, 582], "With": [3, 108, 140, 144, 255, 290, 293, 312, 496, 497, 572, 582], "_": [13, 14, 15, 23, 216, 222, 248, 251, 254, 257, 266, 267, 269, 270, 272, 273, 275, 276, 277, 278, 280, 302, 330, 333, 335, 375, 376, 388, 404, 405, 408, 409, 410, 419, 420, 421, 422, 423, 424, 426, 449, 450, 452, 453, 454, 455, 457, 459, 481, 482, 483, 487, 513, 514, 533, 534, 543, 564, 565, 566, 573, 574, 575, 577, 578, 579], "_0": 216, "_1": [20, 266, 267, 268, 269, 270, 300, 391, 487, 542, 548, 569], "_2": [20, 266, 267, 268, 269, 270, 300, 391, 487, 542, 548, 569], "__call__": [1, 264, 465], "__enter__": 465, "__exit__": 465, "__getitem__": [0, 2, 3, 5, 6, 7, 8], "__init__": [0, 1, 2, 3, 16, 29, 31, 40, 41, 55, 65, 78, 79, 92, 96, 100, 105, 109, 113, 119, 120, 121, 122, 132, 133, 146, 200, 213, 219, 231, 235, 236, 237, 238, 239, 240, 263, 264, 265, 266, 267, 268, 269, 293, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 384, 388, 391, 392, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 408, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 436, 437, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 466, 478, 571, 572], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5, 6, 7, 8], "__repr__": 437, "__setattr__": 264, "_a": 490, "_activ": 279, "_arraylik": [492, 494, 497, 500, 502], "_arraylikeint": 553, "_arrayorscalar": [263, 265, 469, 478, 536], "_b": 490, "_backbonebas": 219, "_backward_op": 16, "_base_activ": 109, "_base_dtyp": [493, 498], "_block": 381, "_builtinnumer": [478, 496, 497], "_c": 574, "_channel": 237, "_d": 288, "_darknet_53_tini": 256, "_decai": 455, "_devicetyp": [469, 471, 472, 473, 474, 476, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502], "_dtype_bit": 461, "_einopspattern": [13, 14, 15, 388], "_fanmod": [349, 350], "_fasterrcnnloss": 231, "_grad_en": 463, "_h": [287, 288], "_hungarianmatch": 219, "_i": [20, 24, 248, 279, 293, 300, 365, 382, 400, 403, 407, 411, 419, 422, 478, 481, 482, 484, 485, 487, 488, 504, 505, 506, 507, 509, 510, 511, 512, 515, 517, 518, 520, 522, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 542, 548, 555, 560, 563, 566, 568, 569], "_in": [349, 350, 353, 354], "_interpolatetyp": [331, 434], "_j": [279, 365, 419, 422, 487, 520, 529, 534, 535], "_k": 561, "_layer": [429, 431], "_left": 335, "_make_lay": 200, "_mlphead": 100, "_mlx_dtype": 461, "_mlxarrai": 478, "_modul": 264, "_n": [20, 266, 267, 268, 269, 270, 330, 542, 548, 569], "_nograd": 465, "_np_dtype": 461, "_out": [349, 350, 353, 354, 555, 562], "_p": [24, 316, 333, 426], "_pad": 553, "_paddingstr": [338, 339, 340, 341, 342, 343, 372, 373, 374, 375, 376, 377], "_paddingtyp": 331, "_paramet": 264, "_reducestr": 14, "_reductiontyp": [303, 305, 306, 308, 309, 396, 397, 398, 399, 400, 401], "_resnestbottleneck": 146, "_right": 335, "_scalar": [282, 347, 351, 352, 353, 354, 370, 491, 496, 497, 498, 509, 550], "_scaled_channel": 31, "_scaled_num_block": 31, "_seresnetbottleneck": [174, 175, 178], "_seresnetmodul": [176, 177], "_shapelik": [315, 411, 472, 473, 496, 499, 501, 540, 556, 560, 568], "_size": [317, 318, 319, 320, 381], "_skresnetmodul": [184, 185, 186], "_slope": 359, "_sortkind": 539, "_statedict": 437, "_t": [216, 456, 457], "_tensor": [369, 428, 430, 432], "_tensorop": 478, "_transform": 219, "_u": 25, "_util": 566, "_v": 25, "_valu": [509, 553], "_var": 216, "_w": [287, 288], "_weight": 426, "_width": 553, "a_": [11, 31, 430, 513, 514], "a_1": [369, 559], "a_2": 559, "a_h": 369, "a_i": [369, 484, 485, 488, 559], "a_k": 559, "aaai": 108, "ab": [445, 503], "abbeel": 217, "abc": [2, 437], "abil": [108, 582], "about": 10, "abov": [219, 251, 257, 463, 475, 492, 495, 543, 564], "abs_pos_emb": [188, 189], "absolut": [23, 24, 31, 188, 189, 222, 245, 251, 306, 445, 454, 468, 504], "abstract": [2, 3, 134, 136, 436, 437, 448, 449, 457, 459, 461, 584], "abstractmethod": 437, "abund": [49, 130], "acc": [585, 586], "acceler": [108, 235, 363, 403, 404, 405, 440, 449, 455, 457, 459, 478], "accept": [215, 240, 375, 393, 539, 586], "access": [0, 2, 3, 4, 5, 6, 7, 8, 16, 167, 168, 169, 170, 171, 172, 222, 232, 263, 265, 266, 267, 268, 269, 270, 462, 556, 584], "accord": [11, 13, 15, 293, 331, 335, 372, 373, 374, 388, 391, 394, 398, 401, 450, 451, 452, 453, 454, 455, 456, 534, 540, 570], "accordingli": [19, 312, 530, 570], "account": [23, 25, 26, 360, 366, 462], "accumul": [331, 449, 450, 451, 462, 478, 479, 480, 484, 485, 486, 489, 540], "accur": [175, 227, 234, 360], "accuraci": [47, 49, 50, 51, 52, 65, 68, 88, 89, 90, 91, 92, 93, 94, 95, 102, 104, 108, 119, 120, 121, 127, 128, 129, 130, 131, 178, 206, 207, 208, 222, 225, 226, 229, 232, 233, 234, 250, 251, 257], "achiev": [13, 92, 108, 140, 166, 167, 168, 169, 170, 171, 172, 234, 283, 284, 285, 317, 388, 413, 414, 415, 418, 455, 577, 579], "across": [0, 5, 6, 10, 13, 14, 16, 31, 40, 53, 65, 92, 108, 113, 123, 134, 139, 140, 141, 143, 144, 145, 189, 197, 222, 234, 236, 238, 254, 263, 267, 270, 311, 312, 315, 317, 318, 319, 353, 354, 403, 404, 405, 407, 408, 409, 410, 411, 413, 414, 415, 461, 468, 469, 472, 473, 474, 475, 476, 477, 493, 494, 520, 535, 584], "act": [16, 65, 453, 557], "act_lay": [69, 92, 113], "activ": [29, 40, 57, 59, 61, 65, 69, 92, 108, 109, 113, 116, 117, 125, 126, 156, 160, 161, 173, 200, 213, 257, 258, 266, 270, 272, 273, 275, 276, 277, 278, 279, 280, 291, 304, 338, 339, 340, 344, 345, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 380, 381, 383, 384, 385, 386, 396, 397, 398, 401, 403, 404, 405, 411, 428, 430, 432, 462, 519, 521, 584], "actual": [265, 396, 398, 400, 401, 575], "acycl": 16, "ad": [15, 73, 121, 155, 216, 241, 264, 266, 267, 268, 269, 270, 283, 284, 285, 286, 287, 292, 300, 302, 303, 305, 310, 311, 312, 314, 315, 323, 324, 325, 327, 328, 329, 336, 338, 339, 340, 369, 372, 373, 374, 375, 376, 377, 378, 381, 396, 398, 403, 404, 405, 406, 407, 408, 409, 410, 411, 419, 420, 421, 422, 423, 424, 428, 430, 432, 450, 451, 452, 453, 454, 455, 456, 457, 466, 568, 582], "adadelta": 460, "adagrad": [450, 460], "adam": [108, 453, 454, 455, 456, 460], "adamax": 460, "adamw": 460, "adapt": [10, 29, 67, 96, 108, 109, 127, 130, 146, 174, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 200, 213, 317, 318, 319, 320, 321, 322, 344, 345, 413, 414, 415, 416, 417, 418, 441, 445, 450, 451, 452, 455, 456, 457, 458], "adaptive_avg_pool1d": [299, 326, 413], "adaptive_avg_pool2d": [299, 326, 414], "adaptive_avg_pool3d": [299, 326, 415], "adaptive_max_pool1d": [299, 326, 416], "adaptive_max_pool2d": [299, 326, 417], "adaptive_max_pool3d": [299, 326, 418], "adaptiveavgpool1d": [390, 425], "adaptiveavgpool2d": [29, 173, 200, 213, 236, 390, 425], "adaptiveavgpool3d": [390, 425], "adaptivemaxpool1d": [390, 425], "adaptivemaxpool2d": [390, 425], "adaptivemaxpool3d": [390, 425], "add": [4, 16, 55, 217, 220, 221, 236, 264, 266, 267, 270, 300, 302, 369, 372, 373, 374, 375, 376, 377, 391, 394, 411, 437, 449, 452, 457, 459, 464, 503, 553, 568], "add_bias_kv": 369, "add_modul": [264, 270], "add_nois": 216, "add_on": [236, 241, 242], "add_param_group": 437, "add_zero_attn": 369, "addit": [4, 23, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 212, 214, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 249, 250, 252, 253, 255, 256, 258, 264, 267, 270, 300, 302, 310, 312, 314, 375, 376, 377, 391, 394, 403, 404, 405, 408, 409, 410, 449, 455, 464, 477, 479, 539, 561], "addition": 455, "address": [222, 398, 401, 452, 453, 456], "adjust": [106, 119, 121, 123, 131, 179, 180, 181, 182, 183, 187, 235, 236, 317, 318, 319, 345, 380, 381, 403, 404, 405, 408, 409, 410, 411, 413, 414, 415, 416, 418, 438, 439, 442, 443, 444, 445, 446, 448, 452, 456, 457, 458, 548, 569], "adopt": [222, 478], "advanc": [3, 16, 25, 79, 100, 108, 120, 130, 135, 137, 160, 194, 196, 217, 259, 267, 270, 283, 284, 285, 317, 318, 319, 413, 414, 415, 436, 449], "advantag": 107, "adversari": 257, "affect": [233, 330, 463, 554, 560, 571], "affin": [312, 330, 331, 338, 339, 340, 403, 404, 405, 407, 408, 409, 410, 411, 578], "affine_grid": [299, 331, 332], "after": [10, 15, 16, 23, 29, 65, 92, 125, 126, 188, 189, 213, 215, 219, 231, 235, 246, 251, 254, 257, 265, 266, 267, 268, 269, 270, 297, 312, 320, 344, 345, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 373, 374, 380, 383, 384, 391, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 408, 411, 417, 419, 420, 421, 422, 423, 424, 428, 430, 432, 438, 445, 453, 462, 478, 479, 480, 484, 485, 486, 488, 489, 496, 497, 498, 553, 558, 559, 572, 586], "afterward": 462, "against": [249, 250], "aggreg": [10, 55, 108, 257, 258, 345, 487, 555, 562], "agnost": 461, "aim": 4, "al": [55, 97, 108, 113, 216, 222, 234, 236, 248, 249, 259, 428], "alex": [5, 6, 108], "alexei": [108, 234], "alexnet": 213, "alexnet_weight": 585, "algebra": [11, 17, 495], "algorithm": [7, 23, 25, 26, 437, 448, 477, 539], "ali": 234, "alia": 465, "align": [10, 27, 66, 130, 237, 238, 239, 241, 242, 248, 251, 254, 257, 330, 335, 434, 482, 483, 530], "align_corn": [330, 331, 335, 434], "all": [0, 3, 4, 11, 16, 26, 65, 78, 108, 215, 219, 222, 236, 237, 248, 254, 259, 264, 266, 267, 268, 269, 270, 284, 285, 288, 316, 317, 318, 319, 322, 324, 325, 328, 329, 335, 339, 340, 345, 359, 361, 369, 374, 392, 413, 414, 415, 420, 421, 424, 428, 436, 437, 442, 448, 449, 452, 457, 458, 459, 462, 471, 478, 488, 513, 514, 519, 520, 521, 529, 533, 535, 542, 544, 547, 548, 555, 560, 561, 562, 564, 565, 569, 573, 574, 582, 586], "allevi": [108, 272], "alloc": [16, 493, 494], "allow": [0, 1, 3, 4, 10, 11, 13, 25, 26, 55, 65, 107, 108, 109, 113, 122, 125, 126, 128, 131, 133, 134, 147, 148, 149, 150, 151, 152, 153, 154, 155, 166, 179, 180, 181, 182, 183, 187, 188, 192, 193, 194, 195, 196, 198, 215, 218, 222, 265, 266, 267, 268, 269, 270, 272, 275, 276, 279, 285, 290, 337, 345, 355, 356, 359, 363, 364, 365, 367, 370, 372, 373, 374, 388, 426, 434, 436, 438, 439, 441, 443, 445, 450, 451, 464, 491, 496, 499, 501, 502, 530, 534, 536, 551, 571, 572, 582, 586], "along": [10, 14, 15, 65, 279, 316, 335, 345, 365, 462, 482, 483, 487, 513, 514, 519, 520, 521, 529, 533, 535, 537, 539, 540, 541, 542, 543, 546, 548, 551, 555, 557, 558, 559, 561, 562, 563, 566, 567, 568, 569, 577, 579], "alongsid": 263, "alpha": [216, 272, 275, 277, 291, 355, 363, 380, 449, 457], "alpha_": [216, 251, 254, 257], "alpha_dropout": [298, 299, 380], "alpha_t": [216, 222], "alphadropout": [387, 390], "alphadropoutmodel": 380, "alreadi": 466, "also": [16, 219, 272, 273, 275, 276, 277, 278, 280, 286, 300, 302, 335, 376, 455, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 494, 501, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 521, 522, 524, 525, 526, 527, 528, 530, 531, 532, 540, 542, 548, 553, 554, 555, 556, 560, 561, 562, 568, 569], "alter": [270, 392, 556, 557, 586], "altern": [1, 16, 113, 356, 450, 483], "alwai": [10, 265, 438, 508, 516, 523, 550, 554, 570, 576, 577, 579, 586], "among": [98, 345], "amount": [258, 283, 284, 285, 323, 324, 325, 327, 328, 329, 341, 342, 343, 378, 455], "ampl": 127, "amsgrad": [452, 453], "an": [0, 1, 3, 10, 13, 14, 15, 16, 20, 22, 23, 25, 26, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 120, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 206, 207, 208, 209, 210, 212, 213, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 234, 240, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 261, 262, 264, 266, 267, 268, 269, 270, 273, 283, 284, 285, 290, 291, 294, 295, 296, 297, 300, 318, 319, 331, 333, 335, 336, 337, 341, 342, 343, 345, 353, 354, 355, 362, 364, 369, 372, 373, 374, 375, 376, 378, 380, 382, 383, 384, 385, 386, 388, 391, 392, 394, 411, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 428, 429, 431, 432, 437, 438, 443, 448, 449, 452, 455, 457, 461, 462, 465, 466, 467, 468, 478, 483, 492, 495, 497, 513, 514, 520, 529, 535, 539, 540, 542, 547, 555, 559, 562, 565, 566, 568, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 586], "analog": [555, 562], "analysi": [4, 218, 234, 344, 372, 373, 374, 410, 419, 421, 422, 424], "analyz": 218, "anchor": [219, 222, 231, 232, 233, 234, 251, 252, 253, 255, 256, 257, 258], "anchor_s": 231, "anchor_strid": 231, "andreetto": 108, "andrew": 108, "angl": [337, 578], "ani": [0, 1, 2, 3, 13, 16, 23, 25, 30, 114, 115, 116, 117, 118, 155, 183, 212, 214, 216, 219, 233, 251, 263, 264, 265, 266, 268, 269, 272, 273, 275, 276, 277, 278, 280, 291, 294, 300, 302, 310, 312, 314, 331, 364, 388, 411, 436, 437, 442, 462, 463, 465, 466, 475, 478, 491, 492, 493, 495, 496, 499, 500, 501, 502, 519, 521, 534, 536, 542, 544, 548, 553, 555, 561, 562, 568, 569, 571, 582], "anneal": [257, 439], "anoth": [122, 218, 245, 269, 489, 500, 502, 572, 582], "api": [4, 16, 413, 414, 415, 416, 582], "appear": [437, 567], "append": [267, 269, 270, 369], "appl": [16, 118, 461, 478], "appli": [2, 4, 5, 6, 7, 8, 10, 11, 13, 14, 23, 29, 31, 40, 65, 78, 79, 92, 100, 108, 166, 183, 188, 189, 205, 211, 213, 215, 219, 222, 231, 234, 235, 236, 239, 251, 254, 257, 260, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 282, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 300, 302, 303, 304, 305, 306, 308, 309, 311, 312, 316, 320, 322, 330, 331, 338, 339, 340, 344, 345, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 373, 374, 377, 380, 381, 382, 383, 384, 385, 386, 388, 391, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 428, 429, 430, 431, 432, 442, 443, 449, 450, 451, 453, 454, 455, 456, 483, 496, 508, 516, 553, 555, 564, 565, 567, 571, 574, 576, 577, 578, 579, 580, 582], "applic": [4, 10, 14, 16, 25, 42, 43, 44, 47, 49, 54, 65, 73, 95, 103, 106, 107, 108, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 210, 256, 283, 288, 314, 372, 373, 374, 375, 391, 394, 477, 491, 501, 508, 553, 559, 564, 565, 580], "apply_delta": 244, "approach": [3, 10, 13, 15, 55, 57, 59, 61, 69, 105, 222, 235, 270, 388, 439, 453], "appropri": [25, 108, 121, 125, 126, 238, 264, 268, 270, 293, 372, 373, 374, 380, 383, 384, 398, 417, 420, 421, 461, 463, 468], "approx": 277, "approxim": [25, 273, 356, 357, 358, 420, 423, 462], "ar": [1, 2, 3, 4, 11, 14, 15, 16, 19, 20, 22, 23, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 67, 70, 71, 72, 88, 89, 90, 91, 96, 97, 98, 108, 127, 129, 130, 133, 134, 135, 136, 137, 138, 142, 218, 219, 222, 231, 232, 235, 236, 237, 240, 242, 243, 245, 246, 248, 251, 254, 263, 264, 265, 266, 267, 268, 269, 270, 279, 283, 284, 285, 287, 288, 290, 293, 300, 302, 311, 318, 319, 321, 322, 330, 331, 333, 335, 341, 342, 343, 344, 345, 349, 350, 352, 353, 354, 357, 365, 369, 372, 373, 374, 375, 378, 380, 381, 382, 383, 384, 385, 386, 391, 392, 394, 398, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 426, 432, 434, 436, 440, 444, 449, 452, 453, 455, 456, 457, 458, 459, 462, 463, 465, 466, 468, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 493, 494, 498, 504, 509, 513, 514, 515, 519, 520, 521, 522, 524, 529, 530, 533, 534, 540, 541, 542, 551, 555, 556, 557, 558, 559, 562, 563, 564, 565, 566, 570, 571, 572, 573, 575, 576, 580, 582, 584, 586], "arang": [490, 503], "arbitrari": [219, 267, 393, 493, 494, 509, 517, 518, 520, 525, 527, 529, 534, 535], "arcco": 503, "arch": 466, "architectur": [10, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 140, 146, 147, 148, 149, 150, 151, 152, 155, 166, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 214, 215, 218, 222, 232, 233, 234, 249, 251, 252, 253, 255, 256, 258, 259, 260, 266, 267, 268, 269, 270, 273, 286, 344, 357, 358, 361, 366, 369, 370, 388, 391, 393, 428, 436, 466, 584, 586], "arcsin": 503, "arctan": 503, "area": [245, 331, 335, 434], "arg": [264, 393, 466, 493], "argmax": [465, 549], "argmin": 549, "argsort": 549, "argument": [3, 4, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 109, 114, 115, 116, 117, 118, 123, 124, 125, 126, 127, 128, 129, 130, 131, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 201, 202, 203, 204, 212, 214, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 249, 250, 252, 253, 255, 256, 258, 264, 270, 330, 393, 462, 465, 493, 534, 586], "around": [20, 218, 337, 367], "arr": [542, 548, 561, 569], "arrai": [16, 263, 265, 464, 467, 468, 469, 478, 483, 492, 494, 497, 500, 502, 536, 554, 555, 572, 582], "art": [49, 108, 207], "artifact": 239, "artifici": [108, 218], "arxiv": [108, 234], "ascend": [558, 563], "asgd": 460, "ashish": 259, "aspect": [231, 580], "aspect_ratio": 231, "assign": [16, 218, 257, 264, 266, 268, 270, 335, 398, 401, 550], "assist": [96, 97, 98], "associ": [268, 269], "assum": [0, 1, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 205, 206, 207, 208, 209, 210, 219, 437, 448, 463, 467], "astyp": 478, "attach": [231, 462], "attempt": [266, 270], "attend": [282, 370, 429, 431, 432], "attent": [31, 55, 69, 70, 71, 72, 92, 108, 113, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 153, 154, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 205, 259, 260, 269, 300, 344, 369, 370, 428, 429, 430, 431, 432, 490], "attn": [282, 370], "attn_drop": 113, "attn_drop_r": [55, 132, 133, 188, 189], "attn_mask": [282, 370], "atto": [46, 101, 108], "attribut": [16, 222, 264, 438, 586], "attributeerror": 251, "audio": [372, 375], "augment": [3, 4, 176, 337, 477, 555, 562, 571, 575, 576, 577, 578, 579, 582], "auto": [217, 238, 586], "auto_pars": 461, "autodiff": [11, 360, 478], "autoencod": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586], "autograd": [16, 436, 468, 558], "automat": [4, 239, 251, 265, 266, 267, 268, 269, 416, 417, 418, 436, 462, 469, 472, 473, 474, 476, 478, 493, 494, 502, 539, 551, 572], "autoregress": [282, 370], "aux": 219, "aux_loss": [219, 220, 221], "auxiliari": [96, 97, 98, 219, 263], "avail": [4, 5, 6, 7, 8, 586], "avd": 146, "averag": [14, 29, 92, 110, 111, 112, 113, 146, 155, 166, 173, 183, 200, 213, 263, 317, 318, 319, 323, 324, 325, 335, 344, 345, 400, 413, 414, 415, 419, 420, 421, 449, 450, 452, 457, 520], "avg": 65, "avg_down": 155, "avg_pool": [419, 420, 421], "avg_pool1d": [299, 326], "avg_pool2d": [299, 326], "avg_pool3d": [299, 326], "avgpool": [29, 173, 200, 213, 345], "avgpool1d": [390, 425], "avgpool1dmodel": 419, "avgpool2d": [390, 425], "avgpool2dmodel": 420, "avgpool3d": [390, 425], "avgpool3dmodel": 421, "avoid": [2, 3, 13, 14, 25, 79, 142, 239, 242, 268, 316, 388, 397, 440, 462, 465, 498, 508, 516], "aw": 254, "awar": [197, 257, 258], "ax": [10, 13, 14, 15, 17, 388, 464, 490, 519, 520, 521, 529, 530, 534, 535, 540, 543, 555, 560, 562], "axes_a": 490, "axes_b": 490, "axi": [14, 24, 65, 108, 113, 215, 219, 220, 221, 279, 316, 365, 392, 482, 483, 490, 513, 514, 519, 520, 521, 529, 535, 537, 539, 541, 542, 543, 546, 548, 551, 553, 555, 557, 558, 559, 560, 561, 562, 563, 566, 567, 568, 569, 577, 579], "axis1": [530, 543], "axis2": [530, 543], "b": [11, 13, 14, 15, 17, 27, 31, 108, 206, 219, 220, 221, 245, 248, 249, 250, 251, 252, 253, 254, 257, 300, 302, 352, 372, 373, 374, 375, 376, 377, 388, 391, 394, 464, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 540, 542, 546, 547, 548, 551, 561, 569, 570, 576, 583], "b0": [78, 80, 108, 139, 223], "b1": [78, 81, 108, 140, 141, 224], "b2": [78, 82, 108, 141, 142, 225], "b3": [78, 83, 108, 143, 226], "b4": [78, 84, 108, 144, 227], "b5": [78, 85, 108, 145, 228], "b6": [78, 86, 108, 229], "b7": [78, 87, 108, 230], "b_": [11, 31], "b_1": [430, 432], "b_2": [430, 432], "b_i": [484, 485, 488], "b_k": 369, "b_v": 369, "back": [11, 16, 215, 232, 251, 330, 335, 369, 420, 421, 466, 482, 487, 537, 538, 539, 541, 555, 558, 562, 566], "backbon": [65, 66, 108, 143, 184, 185, 186, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 250, 252, 253, 255, 256, 258], "backbone_net": 233, "backbone_num_class": [232, 233], "backbone_out_channel": 257, "backend": [118, 478, 496, 539], "background": [219, 231, 235, 236], "backprop": [377, 397], "backpropag": [10, 16, 19, 20, 22, 23, 25, 26, 28, 108, 251, 254, 263, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 300, 302, 330, 331, 335, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 372, 373, 374, 378, 380, 381, 383, 384, 385, 386, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 408, 409, 410, 411, 419, 420, 421, 422, 423, 424, 426, 436, 474, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 515, 519, 521, 536, 540, 541, 550, 553, 555, 557, 562, 564, 565, 572, 583], "backward": [16, 216, 248, 263, 265, 312, 331, 378, 407, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 465, 478, 496, 497, 498, 541, 543, 550, 557, 558, 563, 572], "balanc": [32, 33, 34, 35, 36, 37, 38, 39, 44, 47, 48, 51, 62, 63, 70, 79, 88, 89, 90, 91, 94, 104, 108, 121, 122, 128, 129, 131, 134, 137, 167, 168, 169, 170, 171, 172, 206, 209, 222, 226, 233, 234, 399], "bar": [216, 449], "base": [3, 13, 14, 16, 17, 22, 23, 26, 27, 31, 42, 45, 47, 62, 66, 67, 68, 73, 92, 96, 97, 98, 99, 102, 105, 106, 107, 108, 109, 114, 115, 122, 128, 129, 131, 146, 153, 154, 166, 167, 168, 169, 170, 171, 172, 183, 190, 194, 200, 206, 210, 211, 218, 219, 222, 231, 232, 233, 234, 235, 236, 238, 239, 240, 246, 249, 250, 251, 254, 255, 259, 260, 261, 264, 266, 267, 268, 269, 282, 290, 300, 317, 318, 319, 345, 370, 378, 380, 388, 398, 399, 413, 414, 415, 416, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 453, 457, 458, 459, 461, 468, 469, 479, 480, 484, 485, 486, 488, 489, 502, 515, 516, 517, 518, 519, 521, 534, 551, 553, 559, 570, 575, 576, 577, 578, 579], "base_dtyp": 461, "base_lr": 440, "base_width": [146, 147, 148, 149, 150, 151, 152, 164, 165, 166, 183], "baselin": [108, 219], "basic": [29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 67, 92, 113, 155, 167, 168, 169, 170, 171, 172, 184, 185, 186, 211, 213, 231, 232, 233, 235, 236, 249, 250, 257, 282, 283, 284, 285, 286, 287, 288, 292, 293, 317, 318, 319, 333, 336, 338, 339, 340, 341, 342, 343, 344, 349, 350, 353, 354, 370, 375, 376, 377, 381, 413, 414, 415, 426, 498, 540, 573, 574, 575, 576, 577, 578, 579, 580], "basicblock": [155, 159, 162], "batch": [1, 2, 3, 11, 15, 16, 17, 23, 26, 28, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 97, 98, 99, 100, 106, 107, 173, 179, 180, 181, 182, 187, 219, 222, 239, 249, 250, 251, 282, 283, 284, 285, 286, 287, 288, 290, 295, 296, 297, 300, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315, 317, 318, 319, 323, 324, 325, 327, 328, 329, 330, 331, 335, 337, 338, 339, 340, 369, 370, 372, 373, 374, 378, 391, 394, 396, 397, 398, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 420, 421, 422, 423, 424, 428, 429, 430, 431, 432, 456, 465, 483, 490, 530, 573, 574, 575, 576, 578, 580], "batch_idx": [238, 239], "batch_norm": [299, 313, 403, 404, 405], "batch_norm1": 270, "batch_norm2": 270, "batch_siz": [1, 2, 3, 211, 216, 345], "batch_tensor": 530, "batchnorm": [92, 312, 338, 339, 340], "batchnorm1d": [338, 390, 412], "batchnorm1dmodel": 403, "batchnorm2d": [65, 92, 113, 270, 339, 390, 412], "batchnorm2dmodel": 404, "batchnorm3d": [340, 390, 412], "batchnorm3dmodel": 405, "bay": 217, "bbox_delta": [232, 233], "bbox_loss_coef": 219, "bbox_reg_mean": 235, "bbox_reg_std": 235, "bbox_to_delta": [241, 244], "bce": [215, 254, 257, 397], "bceloss": [390, 397, 402], "bcewithlogitsloss": [390, 402], "becaus": [2, 251, 462, 465, 473], "becom": [24, 251, 264, 312, 407, 450, 458], "been": [366, 550], "befor": [10, 15, 23, 31, 65, 92, 173, 219, 232, 265, 282, 304, 370, 392, 428, 430, 432, 439, 445, 449, 455, 471, 475, 553, 557, 574, 582], "begin": [1, 24, 222, 241, 242, 248, 251, 254, 257, 272, 275, 276, 277, 293, 330, 336, 355, 357, 358, 359, 361, 363, 382, 399, 400, 401, 419, 420, 421, 422, 423, 424, 456, 458, 464, 477, 484, 485, 487, 504, 509, 513, 514, 519, 521, 524, 537, 538, 550, 553, 563, 564, 565], "behav": [382, 399, 407, 533], "behavior": [10, 16, 108, 267, 270, 282, 316, 370, 378, 442, 463, 477, 483, 494, 567, 582, 584], "being": [269, 337, 380, 383, 384, 385, 386, 456, 463, 478, 541, 542, 548, 569], "belong": 0, "below": [26, 32, 33, 34, 35, 36, 37, 38, 39, 97, 98, 99, 106, 107, 109, 110, 111, 112, 236, 483, 492, 495, 543, 565], "benchmark": [5, 6, 7, 8, 16, 114, 115, 130], "benefici": 270, "benefit": [131, 272, 436, 455], "bernoulli": [380, 383, 384, 385, 386, 470], "best": [130, 320, 349, 350, 353, 354, 584], "beta": [215, 216, 311, 403, 404, 405, 406, 407, 408, 409, 410, 411, 452, 453, 454, 455, 456], "beta1": [452, 453, 454, 455, 456], "beta2": [452, 453, 454, 455, 456], "beta_1": [452, 453, 454, 455, 456], "beta_2": [452, 453, 454, 455, 456], "beta_c": [311, 406], "beta_schedul": 215, "beta_t": 216, "better": [22, 57, 59, 61, 65, 108, 129, 141, 142, 189, 197, 213, 234, 257, 273, 349, 350, 353, 354, 366, 381, 408, 409, 410, 436, 445, 446, 453, 455, 457, 574], "between": [44, 47, 51, 55, 63, 88, 89, 90, 91, 94, 104, 108, 113, 122, 128, 129, 131, 137, 167, 168, 169, 170, 171, 172, 206, 209, 216, 219, 226, 243, 245, 264, 283, 284, 285, 286, 287, 288, 290, 300, 306, 338, 339, 340, 341, 342, 343, 345, 362, 372, 373, 374, 375, 376, 377, 378, 380, 383, 384, 385, 386, 391, 396, 397, 398, 399, 400, 401, 440, 445, 446, 449, 457, 458, 459, 477, 479, 480, 483, 486, 489, 491, 498, 535, 576, 577, 579, 580, 586], "beyond": [10, 267, 445], "bia": [31, 55, 57, 59, 61, 92, 132, 133, 139, 140, 141, 143, 144, 145, 188, 189, 283, 284, 285, 286, 287, 288, 300, 302, 310, 312, 314, 315, 338, 339, 340, 341, 342, 343, 369, 372, 373, 374, 375, 376, 377, 391, 394, 403, 404, 405, 407, 408, 409, 410, 411, 428, 430, 432, 452, 453, 454, 455, 456], "bias": [69, 108, 372, 373, 374, 394, 411, 436], "bias1": 268, "bias2": 268, "bidirect": 222, "bifpn": [222, 223, 224, 225, 226, 227, 229, 234], "big": [251, 259, 341, 342, 343], "bij": 11, "bik": 11, "bilinear": [238, 239, 299, 301, 330, 331, 335, 390, 395, 434], "bilinearmodel": 391, "bin": [545, 546, 547], "binari": [215, 278, 303, 304, 336, 364, 380, 383, 384, 385, 386, 396, 397], "binary_cross_entropi": [299, 307], "binary_cross_entropy_with_logit": [299, 307], "bipartit": [219, 234], "bit": 461, "bjk": 11, "black": 16, "blend": 131, "block": [31, 32, 33, 34, 35, 36, 37, 38, 39, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 92, 100, 105, 108, 113, 114, 115, 117, 120, 121, 122, 124, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 205, 264, 286, 290, 292, 293, 338, 339, 340, 345, 372, 373, 374, 375, 376, 377, 378, 381, 462, 465], "block1": 436, "block2": 436, "block_arg": [155, 173], "block_cfg": 79, "block_config": 73, "block_fn": 65, "block_siz": [292, 381], "block_typ": 31, "blue": [576, 583], "bmatrix": [330, 487], "bn": [338, 339, 340], "bn_affin": [338, 339, 340], "bochkovskii": 234, "bookkeep": 465, "bool": [1, 5, 6, 7, 8, 24, 28, 55, 65, 78, 92, 96, 97, 98, 132, 133, 139, 140, 141, 143, 144, 145, 146, 155, 188, 189, 215, 216, 219, 220, 221, 231, 236, 251, 264, 265, 282, 291, 293, 294, 295, 296, 297, 310, 314, 330, 331, 335, 336, 338, 339, 340, 341, 342, 343, 369, 370, 372, 373, 374, 375, 376, 377, 382, 391, 394, 403, 404, 405, 407, 408, 409, 410, 411, 428, 429, 430, 431, 432, 434, 439, 440, 441, 442, 443, 444, 445, 446, 452, 453, 457, 461, 463, 468, 469, 471, 472, 473, 474, 476, 478, 480, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 519, 520, 521, 529, 535, 536, 537, 538, 539, 545, 546, 547, 558, 563, 567, 572, 583], "boolean": [550, 570], "boost": 127, "border": 331, "both": [31, 55, 57, 59, 61, 65, 69, 92, 108, 113, 118, 122, 133, 134, 188, 190, 191, 192, 193, 228, 231, 257, 283, 286, 287, 302, 318, 323, 327, 338, 356, 360, 366, 372, 373, 375, 376, 377, 378, 414, 419, 420, 422, 423, 432, 434, 461, 465, 481, 482, 483, 487, 490, 492, 551, 558, 559, 580], "bottleneck": [65, 66, 67, 73, 108, 120, 121, 124, 155, 156, 157, 158, 160, 161, 163, 164, 165, 166, 344], "bottleneck_cfg": 121, "bottom": [257, 258, 335], "bound": [218, 222, 231, 234, 235, 236, 239, 241, 242, 243, 245, 246, 248, 249, 250, 251, 254, 255, 257, 331, 350, 352, 354, 440, 458, 476, 478, 508, 509], "boundari": 243, "box": [4, 16, 218, 219, 220, 221, 222, 231, 234, 235, 236, 239, 240, 241, 242, 243, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258], "boxes_a": 245, "boxes_b": 245, "branch": [55, 66, 96, 97, 98, 108, 257, 345], "break": [10, 436], "breakdown": 231, "brief": 582, "bright": 582, "bring": [10, 388], "broad": 65, "broadcast": [15, 16, 216, 385, 386, 490, 520, 529, 535, 556, 568], "broadcast_to": 549, "bucket": 508, "budget": [51, 143], "buffer": [16, 449, 455, 457, 459], "build": [16, 41, 65, 66, 79, 107, 108, 121, 122, 155, 156, 157, 158, 159, 160, 161, 162, 163, 166, 183, 184, 185, 186, 199, 234, 235, 251, 260, 264, 267, 270, 436, 582, 586], "built": [3, 16, 156, 160, 161, 226, 251, 270, 436, 461, 465, 496, 497, 584], "burg": 8, "bypass": 108, "c": [5, 6, 8, 11, 13, 31, 108, 155, 167, 168, 169, 170, 171, 172, 184, 185, 186, 216, 217, 233, 236, 237, 238, 239, 248, 249, 250, 251, 252, 253, 254, 257, 290, 292, 295, 296, 297, 305, 309, 310, 311, 312, 314, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 335, 336, 337, 344, 378, 385, 386, 388, 392, 398, 401, 403, 404, 405, 406, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 440, 464, 548, 569, 574, 586], "c2": 237, "c3": 237, "c4": 237, "c5": 237, "c_": [11, 234, 251, 372, 373, 374, 375, 376, 377], "c_backbon": 219, "c_i": 248, "c_in": [283, 284, 285, 286, 287, 288, 338, 339, 340], "c_out": [283, 284, 285, 286, 287, 288], "calcul": [0, 1, 17, 265, 434, 450, 451, 454, 455, 456, 465, 473], "calculu": [18, 25], "call": [1, 16, 219, 239, 251, 264, 287, 376, 438, 463, 465, 466, 471, 479, 480, 483, 484, 485, 486, 488, 489, 586], "callabl": [1, 65, 139, 140, 141, 143, 144, 145, 215, 235, 240, 428, 430, 432, 437, 440, 443, 466, 478, 571], "can": [0, 2, 3, 4, 13, 14, 16, 18, 20, 22, 23, 25, 26, 28, 55, 78, 108, 121, 127, 128, 130, 131, 155, 164, 165, 179, 180, 181, 182, 211, 212, 216, 222, 232, 233, 236, 245, 249, 250, 251, 263, 265, 266, 267, 268, 269, 270, 275, 283, 284, 285, 293, 312, 330, 331, 337, 345, 356, 359, 362, 367, 372, 373, 374, 375, 378, 408, 409, 410, 420, 421, 422, 423, 424, 426, 429, 436, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 463, 464, 465, 472, 476, 477, 478, 483, 493, 494, 495, 496, 497, 499, 501, 502, 520, 523, 529, 530, 535, 537, 538, 540, 548, 551, 553, 555, 556, 558, 562, 568, 569, 571, 572, 575, 577, 578, 579, 582, 586], "candid": [236, 240], "cannot": [19, 20, 22, 23, 26, 27, 28, 469, 541], "canocical_scal": 238, "canon": [238, 254, 586], "canonical_level": 238, "cap": [245, 362], "capabl": [10, 31, 53, 65, 95, 108, 153, 154, 230, 491, 492, 495, 499, 500, 501, 502], "capac": [42, 43, 44, 50, 54, 67, 108, 113, 114, 115, 116, 118, 119, 127, 135, 140, 144, 145, 164, 165, 166, 167, 168, 169, 170, 171, 172, 179, 180, 181, 182, 187, 196, 207, 230, 262], "captur": [16, 31, 55, 57, 59, 61, 69, 108, 113, 134, 135, 136, 183, 188, 190, 191, 192, 193, 194, 195, 198, 259, 290, 372, 373, 374, 391], "cardin": [108, 146, 147, 148, 149, 150, 151, 152, 153, 154, 166, 167, 168, 169, 170, 171, 172, 183], "care": 55, "carefulli": [438, 462], "carion": 234, "cartesian": 551, "case": [3, 24, 109, 121, 123, 222, 272, 275, 276, 277, 286, 287, 293, 336, 355, 357, 358, 359, 361, 363, 382, 399, 400, 401, 419, 420, 421, 422, 423, 424, 436, 444, 451, 456, 458, 464, 484, 485, 490, 504, 509, 513, 514, 519, 521, 524, 537, 538, 539, 550, 553, 563, 564, 565, 582], "cast": 496, "categor": [333, 336, 426], "categori": [7, 114, 115, 156, 157, 158, 159, 160, 161, 162, 163, 219, 220, 221, 231, 232, 235, 236, 252, 253, 255, 256, 258, 426, 461], "caus": [3, 25, 438, 449, 457, 459], "causal": [282, 370], "cautiou": [0, 10], "cbr": 92, "cdot": [16, 18, 19, 22, 23, 24, 27, 55, 113, 215, 238, 241, 254, 259, 272, 273, 275, 277, 278, 282, 283, 284, 285, 286, 287, 288, 300, 302, 311, 317, 318, 319, 320, 323, 324, 325, 327, 328, 329, 330, 333, 335, 344, 353, 354, 356, 357, 358, 360, 364, 366, 370, 378, 380, 391, 394, 396, 397, 398, 399, 401, 403, 404, 405, 406, 408, 409, 410, 411, 426, 439, 440, 441, 443, 444, 446, 450, 451, 452, 453, 454, 455, 456, 458, 481, 482, 483, 486, 488, 490, 523], "ce": 219, "ceil": 503, "cell": [248, 249, 250, 251, 254, 255, 257], "center": [219, 242, 248, 251, 254, 330, 331, 337, 367, 457, 573, 582], "centercrop": [581, 582], "certain": [19, 273, 282, 300, 366, 370, 391, 432, 445, 452, 453, 463, 519, 521], "cfg": [122, 125, 126], "chain": [16, 22, 23, 270, 571, 582], "challeng": [7, 108, 134], "cham": 108, "chanc": [576, 577, 579], "chang": [10, 241, 257, 306, 330, 331, 399, 444, 458, 462, 464, 466, 478, 554, 556, 568, 576, 582, 586], "chanlumerico": 16, "channel": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 65, 66, 67, 68, 69, 70, 71, 72, 73, 78, 92, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 123, 125, 126, 132, 133, 138, 139, 140, 141, 142, 143, 144, 145, 146, 153, 154, 155, 166, 167, 168, 169, 170, 171, 172, 177, 179, 180, 181, 182, 187, 188, 189, 200, 211, 216, 219, 222, 231, 233, 235, 236, 237, 248, 250, 256, 257, 283, 284, 285, 286, 287, 288, 290, 295, 296, 297, 310, 311, 312, 314, 317, 318, 319, 323, 324, 325, 327, 328, 329, 330, 331, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 372, 373, 374, 375, 376, 377, 385, 386, 403, 404, 405, 406, 407, 408, 409, 410, 413, 419, 420, 421, 422, 423, 424, 574, 576, 580], "character": [164, 165], "check": [16, 463, 478, 573, 575], "checkpoint": [448, 586], "chen": [55, 108], "chien": [108, 234], "choic": [129, 131, 551], "choleski": 21, "chollet": 108, "choos": [108, 539, 570], "chosen": [248, 380, 381, 438, 513, 514, 570], "christian": 108, "christoph": 8, "chu": 108, "chun": 108, "chunk": 549, "cifar": [5, 6, 233], "cifar10": 9, "cifar100": 9, "cifar100_train": 6, "cifar10_train": 5, "ciou": 257, "cl": [222, 257], "clariti": [13, 14, 15], "class": [3, 4, 16, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 106, 107, 110, 111, 112, 116, 117, 118, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 212, 214, 218, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 234, 237, 238, 239, 240, 249, 250, 252, 253, 255, 256, 261, 262, 279, 293, 305, 309, 336, 436, 448, 465, 466, 471, 582, 585, 586], "class_id": [219, 222, 251, 254, 257], "class_loss_coef": 219, "classic": [112, 236], "classif": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586], "classifi": [29, 65, 92, 96, 97, 98, 109, 110, 111, 112, 113, 155, 166, 183, 200, 211, 213, 218, 222, 231, 232, 233, 234, 235, 236, 586], "clean": [216, 465], "cleaner": [1, 483], "cleanli": 113, "cleanup": 462, "clear": [265, 493, 494, 498], "clearli": 251, "clf_in_featur": 109, "clf_layer": 109, "clip": [216, 241, 243, 337, 357, 362, 458, 503], "clip_box": 244, "clip_denois": 216, "clockwis": 337, "close": [22, 25, 66, 363, 396, 457], "closer": 355, "closur": [437, 448], "cloth": 7, "cls_": 254, "cls_1": [251, 254, 257], "cls_c": [251, 254, 257], "cls_label_smooth": [257, 258], "cls_logit": [232, 233], "cnn": [31, 57, 59, 61, 108, 219, 232, 233, 240], "co": [108, 439, 503, 525], "coars": 108, "coatnet": [32, 33, 34, 35, 36, 37, 38, 39], "coatnet_0": 108, "coatnet_1": 108, "coatnet_2": 108, "coatnet_3": 108, "coatnet_4": 108, "coatnet_5": 108, "coatnet_6": 108, "coatnet_7": 108, "coco": [219, 220, 221, 255, 256], "code": [10, 16, 23, 266, 268, 270, 462, 463, 465, 477, 583], "codebas": 586, "coeffici": [27, 78, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 249, 250, 335, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459], "col": 290, "collaps": 10, "collate_fn": 1, "collect": [4, 17, 218, 266, 267, 269, 270, 448], "color": [236, 240, 576, 582, 583], "colorjitt": 582, "column": [19, 20, 22, 26, 27, 28, 220, 221, 290, 378, 495, 548, 551], "com": [7, 8, 16], "combin": [1, 3, 13, 31, 55, 68, 92, 99, 105, 106, 108, 113, 131, 135, 187, 218, 222, 234, 257, 267, 270, 272, 273, 338, 339, 340, 344, 345, 356, 378, 381, 388, 397, 398, 436, 455, 456, 520, 529, 535, 542, 582, 584], "combined_dataset": [0, 1], "common": [190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 252, 253, 255, 258, 290, 337, 448, 461, 582], "commonli": [119, 120, 121, 123, 124, 125, 126, 129, 131, 219, 242, 273, 278, 279, 280, 283, 285, 286, 287, 288, 293, 300, 308, 310, 314, 331, 333, 336, 337, 344, 353, 354, 357, 358, 362, 365, 370, 374, 375, 376, 392, 396, 400, 401, 419, 420, 421, 422, 423, 424, 426, 428, 464, 499, 560, 572, 573, 574, 575, 577, 578, 579, 582], "compact": [45, 46, 48, 53, 104, 116, 129, 139, 140, 253], "compar": [31, 44, 45, 72, 108, 116, 133, 141, 164, 165, 213, 224, 232, 257, 397, 477, 561], "compat": [4, 10, 11, 16, 17, 183, 215, 388, 393, 411, 436, 464, 467, 477, 498, 540, 572, 582, 586], "competit": [46, 52, 53, 92], "complet": [260, 428, 429, 431, 586], "complex": [2, 3, 10, 11, 16, 20, 31, 43, 49, 54, 92, 107, 114, 115, 130, 133, 134, 135, 136, 137, 141, 142, 143, 155, 158, 161, 162, 175, 177, 195, 232, 256, 262, 263, 265, 266, 267, 270, 276, 282, 337, 347, 351, 352, 353, 354, 361, 370, 422, 424, 436, 443, 448, 452, 453, 454, 455, 456, 458, 461, 469, 471, 476, 478, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 509, 536, 539, 550, 572, 582], "complex64": 461, "compon": [25, 92, 96, 97, 98, 99, 105, 106, 107, 116, 117, 219, 231, 234, 236, 240, 260, 264, 267, 448, 478, 582], "compos": [5, 6, 7, 8, 113, 211, 251, 372, 373, 374, 419, 420, 421, 422, 423, 424, 436, 570, 582], "composit": 257, "compound": [79, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234], "compound_coef": 222, "comprehens": [3, 62], "compress": 253, "compris": [164, 165], "compromis": [128, 131], "comput": [10, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 31, 44, 45, 46, 48, 49, 51, 52, 55, 65, 67, 68, 69, 92, 94, 101, 104, 108, 113, 119, 121, 122, 125, 126, 127, 128, 129, 130, 131, 133, 134, 137, 138, 142, 153, 154, 155, 166, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182, 187, 188, 207, 208, 215, 231, 234, 235, 241, 242, 245, 248, 249, 250, 251, 253, 254, 257, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 286, 290, 300, 302, 303, 304, 305, 306, 308, 309, 310, 311, 314, 316, 317, 318, 319, 320, 321, 322, 331, 335, 338, 339, 340, 341, 342, 343, 344, 345, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 372, 373, 374, 376, 378, 380, 381, 383, 384, 385, 386, 391, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 407, 408, 409, 410, 411, 416, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 430, 431, 432, 436, 437, 439, 440, 441, 442, 443, 444, 446, 448, 449, 457, 462, 463, 464, 465, 468, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 495, 498, 499, 500, 501, 502, 504, 505, 506, 507, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 540, 551, 553, 555, 562, 572, 582, 583, 584], "computation": [3, 13, 25, 156, 357, 358, 388], "compute_grad": 541, "compute_loss": [448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "concat": 369, "concaten": [0, 65, 254, 257, 283, 284, 285, 369, 490, 548, 549, 561, 569], "concept": [25, 65, 108, 120, 218, 490, 584], "concis": [10, 11, 13, 15], "concret": 586, "concurr": 462, "cond": 570, "condit": [18, 19, 22, 570], "conf": [248, 249, 250, 251], "conf_thresh": [251, 254, 257], "confer": [108, 217, 234], "confid": [231, 246, 248, 249, 250, 251, 254, 257], "config": [200, 220, 221], "configur": [16, 30, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 121, 122, 123, 124, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 206, 207, 208, 209, 210, 212, 214, 215, 220, 221, 225, 227, 228, 230, 231, 232, 233, 235, 236, 251, 253, 256, 262, 269, 338, 339, 340, 370, 461], "confirm": 16, "conform": 467, "conjunct": [290, 401], "connect": [29, 40, 66, 68, 73, 74, 75, 76, 77, 78, 79, 92, 99, 105, 106, 107, 108, 109, 110, 111, 112, 113, 155, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 183, 184, 185, 186, 200, 211, 213, 231, 235, 236, 237, 240, 250, 254, 286, 302, 344, 345, 372, 373, 374, 375, 376, 377, 392, 394, 430, 432], "consecut": 200, "consid": [3, 22, 25, 73, 127, 128, 129, 131, 232, 270, 349, 350, 353, 354, 378, 436, 458, 461, 463, 493, 494, 543, 564, 565, 582], "consider": 25, "consist": [2, 4, 7, 11, 14, 29, 55, 110, 111, 112, 155, 236, 263, 317, 318, 319, 345, 369, 407, 413, 414, 415, 428, 430, 432, 475, 477, 553, 573, 580, 582], "consistent_tensor": 477, "constant": [303, 305, 310, 311, 314, 315, 316, 348, 363, 396, 398, 403, 404, 405, 406, 407, 408, 409, 410, 411, 428, 430, 432, 446, 450, 451, 452, 453, 454, 455, 456, 457, 496, 497, 539, 550, 553], "constant_pad": 553, "constrain": [46, 48, 51, 129, 243], "constraint": [1, 13, 31, 119, 121, 128, 142, 345, 388], "construct": [16, 66, 67, 68, 74, 75, 76, 77, 95, 100, 114, 115, 116, 131, 146, 155, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 184, 185, 186, 201, 202, 203, 204, 232, 233, 237, 249, 250, 260, 267, 436, 492, 555, 562, 564, 565], "constructor": [16, 32, 33, 34, 35, 36, 37, 38, 39, 74, 75, 76, 77, 88, 89, 90, 91, 114, 115, 116, 117, 118, 123, 124, 125, 126, 147, 148, 149, 150, 151, 152, 153, 154, 164, 165, 179, 180, 181, 182, 187, 201, 202, 203, 204, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 252, 253, 255, 256, 258], "consumpt": 131, "contain": [1, 5, 6, 7, 8, 19, 20, 25, 26, 27, 28, 105, 109, 155, 166, 167, 168, 169, 170, 171, 172, 173, 183, 200, 216, 222, 231, 238, 239, 242, 245, 246, 248, 251, 254, 257, 264, 266, 267, 268, 269, 270, 279, 282, 290, 300, 302, 303, 304, 305, 309, 331, 333, 335, 336, 396, 397, 398, 401, 437, 467, 471, 479, 480, 481, 482, 484, 485, 486, 487, 489, 491, 494, 498, 504, 505, 506, 507, 510, 511, 512, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 531, 532, 533, 535, 541, 543, 544, 547, 551, 559, 563, 583], "content": [218, 337], "context": [108, 113, 194, 196, 197, 257, 330, 462, 463, 465, 478, 584], "contextmanag": 462, "contextu": [70, 71, 72, 134, 190, 191, 192, 193], "contigu": [292, 381, 392, 554], "continu": [359, 441, 446, 474, 516], "contract": [11, 13], "contrast": [260, 408, 409, 410, 582], "contribut": [222, 254, 292, 335, 380, 383, 384, 385, 386, 419, 422, 423, 424, 449, 455, 533], "control": [10, 15, 31, 40, 133, 134, 166, 216, 219, 222, 240, 256, 345, 355, 399, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 463, 477, 478, 496, 572, 582], "conv": [105, 108, 173, 219, 231, 235, 236, 237, 338, 339, 340, 404, 405], "conv1": [110, 111, 112, 270, 372, 373, 374, 419, 420, 421, 422, 423, 424], "conv1d": [289, 299, 338, 341, 375, 379, 390, 419, 422], "conv1dmodel": 372, "conv2": [110, 111, 112, 270, 372, 373, 374], "conv2d": [231, 235, 236, 267, 270, 289, 299, 339, 342, 376, 379, 388, 390, 404, 420, 423, 436, 583], "conv2dmodel": 373, "conv3d": [289, 299, 340, 343, 379, 390, 405, 421, 424], "conv3dmodel": 374, "conv_bia": [338, 339, 340], "conv_config": [200, 248], "conv_lay": [109, 267], "conv_transpose1d": [289, 299], "conv_transpose2d": [289, 299], "conv_transpose3d": [289, 299], "convblock": 436, "convbnrelu1d": 346, "convbnrelu2d": 346, "convbnrelu3d": 346, "conveni": [4, 30, 56, 57, 58, 59, 60, 61, 62, 63, 64, 93, 214, 397, 539], "convent": [11, 483, 586], "converg": [25, 367, 438, 439, 440, 442, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 574], "convers": [398, 401, 576, 582], "convert": [5, 6, 7, 8, 55, 200, 219, 220, 221, 263, 265, 279, 333, 336, 365, 468, 551, 571, 572, 576, 582], "convnet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586], "convnetwork": 267, "convnext": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "convnext_bas": 108, "convnext_larg": 108, "convnext_smal": 108, "convnext_tini": 108, "convnext_v2": [46, 47, 48, 49, 50, 51, 52, 53], "convnext_v2_atto": 108, "convnext_v2_bas": 108, "convnext_v2_femto": 108, "convnext_v2_hug": 108, "convnext_v2_larg": 108, "convnext_v2_nano": 108, "convnext_v2_pico": 108, "convnext_v2_tini": 108, "convnext_xlarg": 108, "convolut": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 55, 57, 59, 61, 65, 66, 67, 68, 69, 70, 71, 72, 73, 78, 80, 81, 82, 83, 84, 85, 86, 87, 92, 97, 98, 100, 105, 109, 110, 111, 112, 113, 119, 121, 125, 126, 127, 128, 129, 130, 131, 146, 153, 154, 155, 166, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182, 183, 187, 200, 211, 213, 214, 231, 234, 235, 236, 250, 251, 267, 283, 284, 285, 286, 287, 288, 290, 338, 339, 340, 341, 342, 343, 344, 345, 372, 373, 374, 375, 376, 377, 378, 420, 421, 423, 424, 530, 553], "convolv": [283, 284, 285, 286, 287, 372, 373, 374, 375, 376, 377], "convtranspose1d": [379, 390], "convtranspose2d": [377, 379, 390], "convtranspose3d": [379, 390], "cooldown": 445, "coord": [248, 251], "coordin": [222, 239, 241, 242, 243, 245, 248, 249, 250, 251, 254, 330, 331, 546, 551, 552], "copi": [10, 540, 566], "core": [0, 1, 2, 3, 55, 67, 92, 264, 436, 437, 461, 478, 582], "corinna": 8, "corner": [330, 331, 335, 434, 573, 575], "correct": [266, 398, 401, 452, 453, 454, 455, 456, 550, 558, 564, 565, 572], "correctli": [25, 264, 266, 267, 268, 269, 270, 398, 401, 477, 540, 541], "correl": [375, 376], "correspond": [0, 1, 2, 5, 6, 7, 8, 20, 122, 123, 125, 126, 164, 165, 184, 185, 186, 190, 191, 192, 193, 199, 222, 223, 224, 238, 246, 249, 250, 255, 257, 266, 268, 270, 272, 273, 275, 276, 277, 278, 279, 280, 283, 284, 285, 290, 300, 302, 333, 335, 336, 357, 361, 365, 391, 394, 397, 403, 404, 405, 408, 409, 410, 420, 421, 426, 449, 457, 459, 461, 469, 481, 482, 484, 485, 488, 508, 515, 516, 517, 518, 525, 527, 539, 540, 541, 548, 552, 553, 555, 557, 562, 566, 569, 586], "cort": 8, "cosh": [503, 526, 532], "cosin": [216, 219, 257, 439, 505, 510, 511, 525], "cosineannealinglr": 447, "cost": [66, 69, 108, 119, 121, 122, 128, 129, 131, 142, 166, 219, 250, 341, 342, 343, 462], "could": 264, "count": [65, 108, 122, 139, 140, 141, 143, 144, 145, 217, 234, 256, 259, 439, 444, 462, 513, 514, 539, 542, 545, 546], "counterclockwis": [337, 578], "cover": [17, 283, 284, 285, 471], "coverag": [113, 317, 318, 319], "cpu": [11, 16, 263, 265, 461, 469, 471, 472, 473, 474, 476, 478, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 536, 539, 552, 586], "craft": [16, 219, 234], "creat": [2, 3, 16, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 106, 107, 110, 111, 112, 121, 123, 124, 125, 126, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 200, 201, 202, 203, 204, 212, 213, 214, 218, 233, 249, 250, 261, 262, 263, 264, 267, 270, 330, 345, 362, 369, 428, 429, 430, 431, 432, 436, 464, 465, 466, 467, 477, 491, 495, 496, 497, 498, 499, 500, 501, 502, 540, 551, 561, 571, 582], "creation": [88, 89, 90, 91, 267, 270, 462, 582], "criterion": [396, 397, 398, 399, 400, 401], "critic": [25, 129, 144, 448, 477], "crop": [235, 236, 238, 239, 573, 575, 582], "cross": [55, 66, 67, 68, 108, 188, 215, 303, 304, 305, 375, 376, 396, 397, 398, 428, 429, 430], "cross_entropi": [299, 307], "crossattent": 55, "crossentropyloss": [233, 390, 402], "crossvit": [56, 57, 58, 59, 60, 61, 62, 63, 64], "crossvit_15": 108, "crossvit_15_dagg": 108, "crossvit_18": 108, "crossvit_18_dagg": 108, "crossvit_9": 108, "crossvit_9_dagg": 108, "crossvit_bas": 108, "crossvit_smal": 108, "crossvit_tini": 108, "crucial": [10, 438], "csp": [65, 66, 67, 68, 108, 257, 258], "csp_darknet_53": 108, "csp_resnet_50": 108, "csp_resnext_50_32x4d": 108, "cspdarkblock": 66, "cspdarknet": [65, 258], "cspnet": [66, 67, 68], "cspresnet": 65, "cspresnext": 65, "cube": 503, "cumprod": 503, "cumsum": 503, "cumul": [273, 356, 513, 514], "cup": 245, "current": [264, 439, 440, 441, 442, 443, 444, 445, 446, 449, 452, 458, 463, 539], "current_beta": 215, "custom": [4, 16, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 70, 71, 72, 73, 80, 81, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 101, 102, 103, 104, 106, 107, 109, 113, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 174, 175, 176, 177, 178, 179, 180, 181, 182, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 206, 207, 208, 209, 210, 212, 213, 214, 216, 220, 221, 231, 233, 235, 236, 252, 253, 254, 255, 256, 263, 266, 267, 268, 269, 270, 336, 337, 338, 339, 340, 355, 359, 378, 428, 436, 440, 443, 462, 477, 495, 498, 559], "custom_config": 200, "custom_darknet": 251, "custom_decod": 428, "custom_encod": 428, "custom_lenet": 109, "customiz": [139, 582], "custommodul": 263, "customnetwork": 266, "customparametermodel": [268, 269], "cut": 130, "cv": 218, "cvf": 108, "cvpr": [108, 234], "cvt": [70, 71, 72], "cvt_13": 108, "cvt_21": 108, "cvt_w24": 108, "cvtspec": 69, "cx": [219, 220, 221], "cy": [219, 220, 221], "cycl": 440, "cycle_momentum": 440, "cyclic": [439, 440, 557], "cycliclr": 447, "d": [31, 108, 215, 217, 282, 285, 288, 297, 319, 322, 325, 329, 340, 370, 377, 378, 392, 405, 410, 411, 415, 418, 421, 424, 464, 492, 523, 543, 547, 552, 578], "d0": [222, 223, 224, 234], "d1": [224, 234], "d2": [225, 234], "d3": [226, 234], "d4": [227, 234], "d5": [228, 234], "d6": [229, 234], "d7": [222, 230, 234], "d_": [259, 285, 288, 319, 322, 325, 329, 369, 374, 377, 392, 415, 418, 421, 424, 428, 429, 430, 431, 432], "d_0": 392, "d_1": [13, 14, 15, 388, 392, 411], "d_2": [13, 14, 15, 388, 411], "d_h": [369, 378, 430, 432], "d_i": 392, "d_k": [31, 55, 113], "d_model": [205, 219, 260, 261, 262, 428, 429, 430, 431, 432], "d_n": [13, 14, 15, 388, 392, 411], "d_out": [285, 288, 325, 329], "d_w": 378, "dag": 16, "dai": 108, "dampen": [449, 457, 459], "darknet": [65, 66, 108, 252, 253, 254, 255, 256, 257], "darknet_19": 251, "darknet_model": 251, "darknet_out_channels_arr": [254, 256], "darknetbottleneck": 65, "data": [4, 5, 6, 7, 8, 10, 16, 23, 108, 195, 215, 216, 217, 218, 259, 263, 265, 269, 280, 283, 285, 288, 290, 296, 297, 302, 333, 336, 337, 338, 339, 340, 345, 361, 367, 372, 373, 374, 394, 397, 410, 419, 421, 424, 431, 437, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 464, 468, 471, 477, 478, 479, 480, 486, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 523, 530, 536, 539, 540, 545, 553, 554, 555, 556, 558, 559, 560, 562, 571, 572, 575, 576, 577, 578, 579, 582, 584], "data_dtyp": 461, "databas": 8, "dataload": [2, 3], "dataset": [3, 5, 6, 7, 8, 43, 88, 89, 90, 91, 110, 111, 112, 113, 114, 115, 118, 119, 122, 127, 134, 145, 155, 156, 157, 158, 159, 160, 161, 162, 163, 218, 219, 232, 233, 248, 251, 337, 451, 571, 573, 582, 585, 586], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 487, "deal": 397, "debug": [16, 270, 463, 475, 582, 584], "dec": 219, "decai": [381, 438, 439, 441, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459], "decim": 523, "declar": [13, 14, 15, 388], "decod": [215, 217, 219, 254, 260, 286, 287, 288, 375, 376, 377, 428, 429, 430], "decoder3d": 377, "decoder_lay": [429, 430], "decoderlay": 429, "decompos": [18, 26, 28], "decomposit": [17, 18, 22, 25, 26, 28], "deconv": 377, "deconv1": [375, 376], "deconv1d": 375, "deconv2d": 376, "deconv3d": 377, "deconvolut": [286, 287, 288, 375, 376], "decor": [167, 168, 169, 170, 171, 172, 465, 466], "decoupl": [108, 251, 450, 451, 453, 454, 455, 456], "decreas": [237, 440, 445, 452, 453, 458], "deep": [1, 3, 4, 10, 14, 16, 65, 92, 102, 103, 105, 108, 134, 155, 156, 157, 158, 160, 161, 167, 168, 169, 170, 171, 172, 174, 175, 178, 215, 218, 219, 259, 310, 356, 360, 363, 388, 436, 438, 477, 498, 559, 564, 565, 571, 572, 582], "deepen": 143, "deeper": [71, 97, 99, 107, 108, 114, 115, 133, 136, 141, 144, 155, 162, 195, 196, 215, 222, 224, 225, 227, 229, 232, 250, 254, 363], "deepest": 215, "def": [0, 1, 2, 3, 10, 11, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 206, 207, 208, 209, 210, 212, 213, 214, 216, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 249, 250, 252, 253, 255, 256, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 300, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 333, 335, 336, 337, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 384, 388, 391, 392, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 408, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 430, 431, 432, 436, 437, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 583], "default": [1, 5, 6, 7, 8, 14, 16, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 246, 248, 249, 250, 252, 253, 255, 256, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 272, 275, 279, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315, 316, 323, 324, 325, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 349, 350, 351, 352, 353, 354, 355, 359, 365, 369, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 391, 392, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 434, 437, 439, 440, 441, 442, 443, 444, 445, 446, 448, 455, 463, 469, 471, 472, 473, 474, 476, 478, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 509, 513, 514, 519, 520, 521, 523, 529, 534, 535, 536, 537, 538, 539, 541, 542, 543, 545, 546, 548, 551, 553, 555, 557, 558, 559, 561, 563, 564, 565, 566, 567, 569, 572, 576, 577, 579, 583, 586], "defer": 16, "defin": [1, 3, 4, 10, 14, 16, 31, 40, 55, 65, 69, 73, 79, 96, 97, 98, 99, 105, 106, 107, 109, 121, 131, 146, 155, 173, 184, 185, 186, 200, 215, 222, 235, 236, 248, 251, 266, 267, 268, 269, 270, 293, 356, 358, 360, 362, 366, 396, 397, 398, 399, 400, 401, 419, 434, 436, 438, 440, 443, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 473, 474, 488, 494, 509, 534, 571, 582], "definit": [16, 18, 338, 339, 340, 582], "degre": [337, 578, 582], "delai": 449, "deliv": [16, 129, 130, 145], "delta": [13, 241, 242, 279, 306, 365, 388, 399, 450], "delta_": [13, 279, 365, 388], "demand": [118, 130, 143, 144], "demonstr": [17, 179, 180, 181, 182, 187, 218, 360, 436], "demystifi": 16, "denois": 217, "denomin": [310, 311, 312, 314, 315, 338, 339, 340, 403, 404, 405, 406, 408, 409, 410, 411, 428, 430, 432, 450, 451, 452, 453, 454, 455, 456, 457, 480], "denot": [23, 153, 154, 364, 369, 372, 373, 374, 380, 383, 384, 385, 386, 534], "dens": [73, 74, 75, 76, 77, 108, 188, 190, 191, 192, 193, 231, 235, 293, 333, 426, 451], "densenet": [65, 74, 75, 76, 77, 344], "densenet_121": 108, "densenet_121_weight": 585, "densenet_169": 108, "densenet_169_weight": 585, "densenet_201": 108, "densenet_201_weight": 585, "densenet_264": 108, "densiti": [273, 356, 545, 546, 547], "depend": [11, 16, 23, 24, 31, 108, 113, 121, 134, 135, 188, 190, 191, 192, 193, 194, 195, 222, 259, 269, 303, 304, 305, 306, 308, 309, 335, 372, 481, 490, 492, 519, 521, 555, 562, 563, 575, 576, 580, 583], "deploy": [95, 131, 139, 142], "depth": [31, 40, 41, 42, 43, 44, 45, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 71, 72, 78, 79, 92, 93, 94, 95, 100, 108, 113, 114, 115, 116, 117, 118, 127, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 205, 215, 222, 225, 250, 267, 285, 288, 293, 297, 319, 322, 325, 329, 374, 382, 405, 410, 415, 421, 424], "depth_coef": 78, "depthseparableconv1d": 346, "depthseparableconv2d": 346, "depthseparableconv3d": 346, "depthwis": [31, 40, 69, 70, 71, 72, 92, 100, 108, 119, 211, 283, 284, 285, 286, 287, 341, 342, 343], "depthwise_separ": [341, 342, 343], "der": 108, "deriv": [16, 25, 26, 92, 279, 317, 318, 319, 356, 360, 365, 367, 372, 373, 374, 391, 394, 466], "descend": [28, 558, 563], "descent": [449, 459], "describ": [10, 11, 19, 20, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 586], "descript": [218, 582], "deseri": [263, 467], "design": [3, 4, 14, 17, 29, 30, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 53, 55, 66, 67, 70, 71, 72, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 101, 104, 108, 110, 111, 112, 113, 114, 115, 121, 122, 127, 128, 129, 130, 131, 132, 134, 137, 144, 156, 157, 158, 159, 160, 161, 162, 163, 174, 177, 188, 195, 196, 207, 211, 214, 215, 216, 218, 251, 252, 253, 256, 259, 265, 267, 268, 269, 270, 272, 277, 363, 380, 436, 582, 584], "desir": [10, 15, 212, 238, 263, 317, 318, 319, 320, 321, 322, 336, 381, 413, 414, 415, 416, 434, 438, 496, 497, 534, 536], "despit": 316, "destin": 264, "det": [17, 21], "det_a": 19, "detail": [57, 59, 61, 69, 134, 195, 231, 448, 477, 483], "detect": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586], "detect_head": 251, "detectiondict": [219, 222, 251, 254, 257], "detector": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586], "determin": [0, 17, 18, 19, 55, 109, 113, 164, 165, 255, 258, 317, 318, 319, 320, 349, 350, 353, 354, 372, 373, 374, 413, 414, 415, 420, 421, 423, 424, 440, 457, 463, 469, 472, 473, 474, 476, 490, 493, 494, 559, 567, 573, 575], "determinist": 337, "detr": [220, 221], "detr_r101": 234, "detr_r50": [219, 234], "develop": [10, 16, 122, 436, 477, 582], "deviat": [349, 351, 353, 571, 574, 582], "devic": [11, 92, 93, 94, 95, 108, 120, 121, 127, 128, 250, 263, 265, 461, 469, 471, 472, 473, 474, 476, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 516, 523, 536, 552], "diag": [25, 503, 543], "diagon": [25, 26, 28, 492, 495, 533, 549, 564, 565], "diagonaliz": 20, "diagram": 584, "dict": [10, 13, 14, 15, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 106, 107, 109, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 164, 165, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 206, 207, 208, 209, 210, 212, 214, 219, 222, 232, 233, 249, 250, 264, 266, 268, 388, 393, 437, 442, 586], "dict_kei": 467, "dictionari": [109, 122, 129, 251, 254, 264, 265, 266, 268, 270, 437, 442, 586], "differ": [0, 10, 14, 23, 55, 70, 71, 72, 92, 96, 100, 108, 109, 121, 122, 128, 129, 132, 134, 135, 136, 137, 138, 179, 180, 181, 182, 187, 189, 198, 238, 254, 257, 267, 270, 279, 300, 335, 345, 365, 391, 400, 438, 445, 448, 461, 464, 475, 477, 489, 502, 535, 560, 582, 586], "differenti": [18, 27, 245, 246, 330, 331, 333, 356, 392, 436, 469, 471, 472, 473, 474, 476, 478, 491, 493, 494, 499, 501, 508, 516, 523, 552, 567, 570], "difficult": 136, "diffus": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586], "digit": [7, 8, 108, 112], "dilat": [283, 284, 285, 286, 287, 288, 338, 339, 340, 341, 342, 343, 372, 373, 374, 375, 376, 377, 378], "dilation_height": 290, "dilation_width": 290, "dim": [40, 41, 55, 100, 216, 282, 316, 370, 398, 401, 557], "dim_feedforward": [260, 428, 430, 432], "dimens": [10, 13, 14, 15, 19, 20, 22, 23, 26, 27, 28, 29, 40, 42, 43, 44, 45, 54, 55, 65, 70, 71, 72, 92, 108, 113, 117, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 155, 166, 183, 188, 189, 190, 191, 200, 205, 213, 220, 221, 233, 236, 237, 246, 251, 255, 260, 265, 279, 282, 287, 288, 300, 302, 310, 311, 312, 314, 315, 316, 318, 319, 321, 322, 335, 336, 344, 345, 365, 369, 370, 372, 373, 374, 375, 378, 381, 388, 392, 403, 404, 405, 408, 409, 410, 411, 414, 415, 417, 418, 420, 421, 422, 423, 424, 428, 430, 431, 432, 434, 464, 472, 476, 478, 482, 490, 493, 513, 514, 519, 520, 521, 529, 530, 533, 534, 535, 537, 538, 540, 541, 542, 547, 548, 552, 553, 555, 557, 560, 561, 562, 566, 568, 569, 573, 575, 580], "dimension": [10, 11, 23, 25, 26, 28, 100, 236, 283, 284, 285, 286, 287, 288, 323, 324, 325, 327, 328, 329, 345, 369, 372, 373, 374, 375, 378, 384, 385, 386, 403, 404, 405, 408, 409, 410, 419, 420, 421, 422, 423, 424, 428, 430, 432, 464, 471, 482, 483, 487, 490, 492, 515, 520, 529, 530, 533, 535, 543, 544, 547, 554, 555, 560, 562, 564, 565], "diminish": [438, 451], "diou_thresh": 257, "direct": [16, 20, 396, 398, 399, 400, 401, 449, 457, 458, 459, 557, 586], "directli": [88, 89, 90, 91, 108, 234, 235, 252, 253, 255, 266, 267, 268, 269, 304, 335, 388, 434, 450, 451, 453, 454, 455, 456, 475, 477, 536, 566, 582], "directori": [3, 4, 5, 6, 7, 8], "disabl": [293, 381, 382, 463, 465], "discard": [233, 236, 468], "discontinu": 524, "discover": 586, "discrep": [396, 398, 401], "discret": [469, 473, 477, 516], "disk": [3, 467, 468], "displai": [30, 56, 57, 58, 59, 60, 61, 62, 63, 64, 93, 94, 95, 214], "displaystyl": 513, "disrupt": 508, "distinct": [113, 122, 260], "distribut": [195, 215, 217, 219, 273, 279, 292, 335, 349, 350, 351, 352, 353, 354, 356, 365, 372, 373, 374, 380, 381, 383, 384, 385, 386, 391, 394, 398, 401, 419, 420, 421, 469, 472, 473, 474, 476, 477, 520, 529, 533, 535, 558, 561, 574, 576, 577, 578, 579, 584], "div": 503, "diverg": 215, "divers": [47, 65, 108, 113, 337, 577, 579, 582], "diversifi": 582, "divid": [1, 25, 65, 108, 113, 188, 189, 205, 206, 207, 208, 209, 210, 248, 249, 250, 267, 270, 279, 283, 284, 285, 287, 312, 365, 396, 397, 398, 399, 400, 401, 407, 480, 541, 559, 574], "divis": [25, 248, 283, 284, 285, 288, 312, 316, 369, 380, 383, 384, 385, 386, 428, 430, 432, 450, 451, 452, 453, 454, 455, 456, 457, 480, 559], "dl": 16, "do": [25, 27, 263, 266, 267, 268, 269, 291, 294, 295, 296, 436, 438, 456, 463, 465, 502, 533, 553], "doc": 218, "document": [4, 108, 448, 477], "doe": [23, 24, 25, 26, 28, 219, 232, 233, 251, 260, 263, 266, 267, 268, 269, 270, 316, 354, 445, 452, 453, 458, 462, 463, 465, 469, 472, 473, 474, 475, 476, 491, 492, 493, 494, 495, 499, 500, 501, 502, 539, 540, 550, 552, 556, 557, 567], "doi": 108, "domain": [4, 142], "domin": 92, "done": [222, 251, 586], "dosovitskii": 108, "dot": [11, 13, 14, 15, 20, 23, 132, 133, 257, 266, 267, 268, 269, 270, 282, 336, 369, 370, 388, 392, 411, 422, 423, 424, 482, 487, 490, 503, 542, 543, 548, 561, 569], "down": [3, 219, 222, 237, 436, 516, 580, 583], "download": [4, 5, 6, 7, 8, 586], "downsampl": [65, 92, 146], "draw": 218, "draw_tensor_graph": 584, "drawback": 272, "drawn": [216, 472, 473, 474, 476, 477, 578, 583], "drop": [40, 41, 92, 100, 113, 219, 220, 221, 292, 293, 380, 381, 382, 383, 384, 385, 386], "drop_block": [298, 299], "drop_path": [40, 41, 113, 298, 299, 382], "drop_path_r": [55, 79, 92, 100, 132, 133, 188, 189], "drop_prob": 382, "drop_rat": [55, 92, 100, 132, 133, 188, 189], "dropblock": [257, 258, 292, 387, 390], "dropout": [29, 55, 65, 78, 79, 88, 89, 90, 91, 92, 98, 100, 108, 113, 116, 117, 132, 133, 188, 189, 200, 205, 213, 231, 235, 260, 273, 282, 291, 295, 296, 297, 369, 370, 380, 381, 384, 385, 386, 428, 430, 432], "dropout1d": [298, 299, 387, 390], "dropout1dmodel": 384, "dropout2d": [298, 299, 387, 390], "dropout3d": [298, 299, 387, 390], "dropout_p": [282, 370], "dropout_prob": 98, "dropout_r": 205, "dropoutmodel": 383, "droppath": [387, 390], "dtype": [219, 246, 263, 265, 333, 336, 426, 461, 471, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 536, 552, 567, 572], "due": [23, 25, 73, 118, 130, 283, 284, 286, 287, 361, 516, 578], "dummi": [67, 220, 221, 232, 235, 236], "duplic": [10, 15, 65, 66, 67, 246, 266, 268], "dure": [3, 16, 19, 20, 22, 25, 26, 28, 31, 79, 96, 97, 98, 108, 133, 155, 219, 222, 232, 233, 236, 240, 241, 251, 263, 264, 265, 266, 267, 268, 269, 270, 279, 291, 292, 293, 294, 295, 296, 297, 310, 314, 337, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 372, 373, 374, 380, 381, 382, 383, 384, 385, 386, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 408, 409, 410, 411, 419, 420, 421, 422, 423, 424, 426, 434, 436, 438, 442, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 462, 463, 465, 471, 478, 479, 508, 516, 519, 520, 521, 529, 535, 550, 557, 572, 575, 578, 582, 583, 586], "dy": [275, 359], "dynam": [0, 2, 3, 16, 31, 108, 183, 187, 238, 264, 267, 268, 269, 270, 317, 318, 319, 320, 345, 381, 411, 413, 414, 415, 416, 418, 438, 442, 443, 445, 451, 456, 461, 463], "dynamicnetwork": 267, "e": [0, 10, 11, 16, 19, 20, 22, 23, 26, 28, 55, 65, 69, 78, 80, 81, 82, 83, 84, 85, 86, 87, 97, 98, 99, 106, 107, 109, 110, 111, 112, 118, 146, 188, 189, 200, 216, 219, 220, 221, 232, 233, 236, 237, 240, 249, 250, 251, 263, 279, 336, 345, 360, 364, 365, 366, 369, 376, 380, 398, 437, 450, 457, 458, 461, 478, 495, 496, 511, 513, 514, 515, 517, 526, 532, 533, 542, 576, 586], "each": [1, 2, 3, 4, 16, 20, 23, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 65, 66, 67, 68, 70, 71, 72, 73, 79, 92, 100, 108, 109, 113, 119, 121, 122, 123, 125, 126, 132, 133, 134, 135, 136, 137, 138, 141, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 205, 213, 215, 216, 218, 219, 222, 223, 224, 231, 234, 235, 236, 237, 238, 239, 243, 245, 246, 248, 251, 254, 255, 256, 257, 258, 260, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 283, 284, 285, 286, 287, 290, 300, 302, 310, 312, 314, 317, 318, 319, 320, 321, 322, 330, 331, 333, 336, 344, 345, 357, 361, 365, 369, 372, 373, 374, 378, 380, 383, 384, 385, 386, 391, 394, 396, 397, 398, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 436, 438, 439, 440, 441, 442, 443, 444, 446, 450, 451, 452, 453, 454, 455, 456, 457, 458, 462, 469, 478, 479, 480, 483, 484, 485, 486, 487, 488, 489, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 520, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 535, 539, 541, 542, 547, 548, 551, 552, 553, 555, 557, 558, 559, 561, 562, 566, 569, 571, 572, 573, 574, 575, 576, 578, 580, 582, 586], "earli": [31, 92, 108, 257, 456], "earlier": 122, "eas": 4, "easi": [2, 3, 4, 10, 167, 168, 169, 170, 171, 172, 222, 265, 266, 268], "easier": [3, 266, 267, 270], "easili": [4, 122, 222, 265, 269, 582], "eccv": [108, 234], "economi": 28, "edg": [16, 92, 93, 95, 108, 121, 130, 139, 545, 546, 547, 553], "edu": [5, 6], "educ": [218, 584], "effect": [14, 55, 57, 59, 61, 69, 108, 117, 194, 198, 259, 266, 267, 268, 269, 270, 279, 283, 284, 285, 290, 355, 356, 361, 364, 365, 367, 392, 403, 404, 405, 407, 408, 409, 410, 411, 434, 438, 439, 440, 445, 463, 464, 548, 569], "effici": [1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 22, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 44, 45, 46, 48, 51, 52, 53, 55, 60, 65, 67, 68, 69, 70, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 100, 101, 103, 104, 106, 107, 108, 113, 116, 120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 166, 167, 168, 169, 170, 171, 172, 179, 180, 181, 182, 187, 188, 190, 191, 192, 193, 195, 206, 209, 211, 222, 223, 226, 234, 235, 251, 256, 258, 290, 341, 342, 343, 357, 358, 360, 362, 388, 398, 436, 438, 439], "efficientdet": [223, 224, 225, 226, 227, 228, 229, 230], "efficientdet_d0": 234, "efficientdet_d1": 234, "efficientdet_d2": 234, "efficientdet_d3": 234, "efficientdet_d4": 234, "efficientdet_d5": 234, "efficientdet_d6": 234, "efficientdet_d7": 234, "efficientform": [93, 94, 95], "efficientformer_l1": 108, "efficientformer_l3": 108, "efficientformer_l7": 108, "efficientnet": [79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234], "efficientnet_b0": [108, 222], "efficientnet_b1": 108, "efficientnet_b2": 108, "efficientnet_b3": 108, "efficientnet_b4": 108, "efficientnet_b5": 108, "efficientnet_b6": 108, "efficientnet_b7": 108, "efficientnet_v2": [88, 89, 90, 91], "efficientnet_v2_": 108, "efficientnet_v2_l": 108, "efficientnet_v2_m": 108, "efficientnet_v2_xl": 108, "efficientnetv2": 108, "eig": 21, "eigenvalu": [20, 26], "eigenvector": 20, "eigval": 20, "eigvec": 20, "einop": 388, "einstein": [10, 11, 13, 14, 15, 388], "einsum": 12, "either": [16, 215, 251, 302, 434, 465, 469, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 536, 551, 570], "element": [0, 10, 13, 15, 25, 26, 98, 108, 219, 245, 251, 254, 265, 269, 272, 273, 275, 276, 277, 278, 279, 280, 283, 284, 285, 286, 287, 288, 290, 291, 293, 294, 295, 296, 297, 333, 338, 339, 340, 341, 342, 343, 344, 357, 358, 360, 361, 365, 366, 372, 373, 374, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 388, 396, 397, 398, 399, 400, 401, 407, 411, 418, 419, 420, 421, 422, 423, 424, 464, 469, 471, 478, 479, 480, 483, 484, 485, 486, 487, 488, 489, 491, 495, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 531, 532, 533, 535, 539, 543, 544, 550, 551, 552, 553, 555, 556, 557, 558, 559, 560, 562, 563, 564, 565, 567, 570], "elementwise_affin": 411, "elimin": [13, 15, 231, 397], "els": [254, 257], "elsewher": [422, 423, 424, 495], "elu": [274, 299, 368, 390], "elumodel": 355, "embed": [55, 57, 59, 61, 70, 71, 72, 92, 113, 117, 119, 120, 121, 122, 124, 125, 126, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 188, 189, 190, 191, 205, 219, 282, 299, 334, 369, 370, 390, 427, 428, 430, 431, 432, 566], "embed_dim": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 71, 72, 92, 93, 94, 95, 113, 114, 115, 116, 117, 118, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 188, 189, 190, 191, 369, 428, 429, 430, 431, 432], "embedding_dim": [205, 333, 426], "embedding_lay": 426, "embedding_matrix": 333, "emphas": [122, 129], "emploi": [31, 55, 57, 59, 61, 79, 92, 130], "empti": [264, 270, 503, 541], "empty_lik": 503, "enabl": [0, 1, 2, 3, 10, 11, 13, 14, 15, 23, 28, 65, 70, 71, 72, 78, 92, 106, 108, 113, 116, 132, 133, 138, 142, 146, 183, 184, 185, 186, 188, 190, 191, 199, 217, 218, 219, 234, 249, 250, 259, 264, 265, 266, 267, 268, 269, 282, 293, 361, 369, 370, 372, 373, 374, 376, 377, 391, 394, 428, 430, 432, 436, 448, 461, 462, 463, 469, 472, 473, 474, 476, 478, 496, 571], "enc": 219, "encapsul": [16, 370, 418, 436, 461, 478], "enclos": [462, 465], "encod": [31, 55, 108, 205, 215, 217, 219, 251, 254, 257, 260, 398, 401, 428, 429, 430, 431, 432, 461], "encoder_lay": [431, 432], "encoderlay": 431, "encompass": [78, 215], "encourag": [292, 381, 383, 384, 385, 386, 396, 398, 401, 452], "end": [24, 95, 145, 219, 222, 234, 241, 242, 248, 251, 254, 257, 272, 275, 276, 277, 293, 330, 336, 355, 357, 358, 359, 361, 363, 382, 392, 399, 400, 401, 419, 420, 421, 422, 423, 424, 456, 458, 484, 485, 487, 491, 498, 504, 509, 513, 514, 519, 521, 524, 537, 538, 539, 542, 550, 553, 563, 564, 565, 582], "end_axi": [392, 544], "enforc": [13, 264, 266, 268, 388, 429, 430, 431, 432], "engin": [16, 25, 360, 478], "enhanc": [31, 41, 42, 57, 59, 61, 65, 67, 69, 70, 71, 72, 92, 98, 99, 100, 106, 107, 108, 111, 114, 115, 120, 130, 131, 137, 140, 153, 154, 164, 165, 179, 180, 181, 182, 187, 189, 198, 213, 214, 228, 231, 237, 257, 258, 266, 268, 345, 362, 442, 582], "enough": [16, 95], "ensur": [3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 25, 26, 27, 79, 88, 89, 90, 91, 113, 135, 197, 233, 235, 241, 263, 264, 265, 266, 267, 268, 269, 270, 279, 282, 288, 316, 317, 318, 319, 333, 338, 339, 340, 359, 365, 370, 380, 381, 382, 383, 384, 385, 386, 388, 396, 398, 399, 400, 401, 403, 404, 405, 408, 409, 410, 411, 413, 414, 415, 420, 421, 422, 423, 424, 426, 436, 437, 438, 449, 450, 452, 453, 455, 456, 457, 458, 459, 463, 464, 467, 469, 472, 473, 474, 475, 476, 477, 488, 498, 508, 520, 529, 535, 539, 540, 541, 550, 553, 557, 558, 563, 564, 565, 572, 573, 574, 575, 576, 580, 582], "entir": [3, 16, 232, 234, 235, 293, 295, 296, 297, 382, 385, 386, 477], "entri": [79, 109, 125, 126, 543, 550, 557, 560], "entropi": [215, 303, 304, 305, 396, 397, 398], "enum": [585, 586], "environ": [16, 46, 48, 125, 126, 129, 256, 467, 468, 478, 584], "eos_coef": 219, "ep": [20, 139, 140, 141, 143, 144, 145, 292, 303, 304, 305, 310, 311, 312, 314, 315, 316, 338, 339, 340, 381, 396, 397, 398, 403, 404, 405, 406, 407, 408, 409, 410, 411, 445, 450, 451, 452, 453, 454, 455, 456, 457], "epoch": [1, 3, 16, 438, 439, 440, 441, 442, 443, 444, 445, 446], "epsilon": [31, 215, 216, 238, 242, 311, 312, 316, 396, 398, 403, 404, 405, 406, 407, 408, 409, 410, 411, 450, 451, 452, 453, 454, 455, 456, 457], "epsilon_": 216, "equal": [23, 215, 335, 336, 419, 420, 421, 498, 508, 516, 539, 541, 559, 573, 575], "equat": [20, 25, 27], "equival": [11, 483, 533, 554, 566], "error": [0, 3, 10, 11, 13, 15, 16, 20, 22, 79, 215, 264, 267, 268, 269, 270, 273, 306, 308, 336, 356, 382, 388, 396, 398, 399, 400, 436, 437, 467, 498, 540], "escap": 440, "especi": [3, 16, 118, 215, 266, 268, 269, 288, 364, 377, 464, 475, 571, 572, 576, 582, 584], "essenti": [1, 3, 17, 23, 25, 105, 284, 290, 436, 475, 477, 519, 571, 572, 576, 582], "estim": [216, 400, 452, 453, 454, 455, 456, 457, 462], "et": [55, 97, 108, 113, 216, 222, 234, 236, 248, 249, 259, 428], "eta": 458, "eta_": [439, 440, 445, 458], "eta_0": [439, 441, 443, 444, 446], "eta_min": 439, "eta_t": [439, 440, 441, 443, 444, 445, 446], "etc": [10, 65, 73, 79, 122, 146, 220, 221, 232, 233, 396, 434, 572], "euclidean": [24, 316], "european": 108, "eval": [16, 219, 220, 221, 382, 478, 586], "evalu": [219, 264, 310, 314, 380, 381, 382, 383, 384, 385, 386, 403, 404, 405, 408, 409, 410, 465, 478, 523, 537, 538, 582], "evaluate_model": 445, "even": [67, 450, 462, 465, 491, 492, 495, 499, 500, 501, 502], "evenli": [312, 317, 318, 319, 407, 413, 414, 415, 417, 491, 498, 541, 559], "everi": [1, 16, 222, 441, 446, 462, 582, 586], "everywher": 524, "exact": [264, 267, 534, 576, 578, 586], "exactli": [270, 330], "exampl": [4, 16, 222, 438, 483], "exc_typ": 465, "exc_valu": 465, "exce": 92, "excel": [99, 129, 134, 135], "except": [0, 11, 145, 462, 465, 524, 542, 548, 569], "exchang": 55, "excit": [78, 108, 121, 125, 126, 173, 176, 179, 180, 181, 182, 344], "exclud": [231, 235, 236, 251, 564, 565], "exclus": [473, 476, 491], "exdb": 8, "execut": [16, 267, 462, 465, 478], "exist": [15, 27, 248, 266, 268, 270, 466, 497, 542], "exit": 462, "exp": [215, 241, 272, 277, 278, 280, 355, 363, 397, 503], "exp_rang": 440, "expand": [4, 10, 15, 50, 108, 257, 290, 540, 555, 562], "expans": [10, 13, 15, 54, 92, 100, 122, 125, 126, 132, 133, 138, 139, 140, 141, 143, 144, 145, 258], "expansion_factor": 121, "expect": [18, 215, 222, 232, 245, 248, 267, 270, 288, 293, 369, 380, 382, 383, 384, 385, 386, 397, 407, 411, 428, 429, 430, 431, 432, 436], "expens": 3, "experi": [16, 122, 475, 477, 582, 586], "experiment": [16, 477], "explan": [23, 25, 29, 40, 200, 213, 235, 236, 317, 318, 319, 413, 414, 415, 449], "explicit": [13, 14, 15, 270, 388, 392], "explicitli": [15, 16, 108, 266, 268, 397, 478, 490, 496], "explod": [363, 403, 404, 405], "explor": [16, 128, 436, 477], "expon": [23, 316, 488], "exponenti": [272, 277, 279, 355, 363, 365, 380, 441, 443, 452, 453, 454, 455, 456, 515], "exponentiallr": [438, 447], "expos": [16, 462, 586], "express": [10, 11, 13, 15, 43, 114, 115, 116, 134], "extend": [4, 55, 108, 146, 166, 183, 189, 196, 254, 257, 377, 378, 490], "extens": [108, 448, 467, 584], "extern": [4, 231, 462], "extra": [54, 91, 130, 196, 540], "extract": [31, 57, 59, 61, 70, 71, 72, 96, 102, 105, 108, 133, 134, 137, 155, 166, 183, 195, 196, 197, 199, 211, 218, 231, 233, 234, 235, 236, 239, 240, 250, 251, 254, 257, 290, 374, 378, 419, 421, 461, 466, 492, 519, 521, 543, 563, 564, 565, 567, 573, 575], "extractor": [109, 110, 111, 112, 211, 219, 235, 236, 257, 258], "extrem": [25, 108, 156, 195, 207, 331], "extrema": 330, "ey": 503, "f": [1, 4, 5, 6, 7, 8, 16, 108, 215, 222, 258, 268, 269, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 300, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315, 317, 318, 319, 323, 324, 325, 327, 328, 329, 330, 331, 333, 335, 336, 337, 362, 365, 428, 430, 432, 438, 439, 440, 441, 442, 443, 444, 445, 446, 462, 583], "f_1": 344, "f_2": 344, "facilit": [10, 14, 96, 266, 270, 279, 365, 372, 373, 374, 436, 448, 574, 582], "factor": [78, 98, 122, 132, 222, 236, 238, 239, 251, 257, 272, 282, 283, 284, 285, 290, 344, 353, 354, 369, 370, 434, 438, 440, 441, 443, 444, 445, 446, 449, 456, 457, 458, 459, 539], "factori": 212, "failur": [266, 267, 268, 269, 436], "faithfulli": 16, "fals": [1, 5, 6, 7, 8, 24, 28, 55, 78, 125, 126, 132, 133, 139, 140, 141, 143, 144, 145, 155, 188, 189, 219, 220, 221, 231, 236, 251, 263, 264, 265, 282, 291, 293, 294, 295, 296, 297, 310, 314, 330, 331, 335, 347, 349, 350, 351, 352, 353, 354, 369, 370, 372, 373, 374, 375, 382, 391, 394, 428, 429, 430, 431, 432, 434, 439, 440, 441, 442, 443, 444, 445, 446, 452, 453, 457, 463, 468, 469, 471, 472, 473, 474, 476, 478, 480, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 519, 520, 521, 529, 535, 536, 537, 538, 539, 545, 546, 547, 550, 558, 567, 570, 572, 583, 586], "famili": [54, 65, 108, 122, 140, 144, 145, 196, 222, 223, 230, 234, 466, 586], "fan": [108, 349, 350, 353, 354], "fan_in": [349, 350], "fan_out": [349, 350], "farhadi": 234, "fashion": [7, 57, 59, 61], "fashion_train": 7, "fashionmnist": 9, "fast": [94, 231, 456], "faster": [108, 133, 232, 233, 258, 438, 451, 455, 465], "faster_rcnn_resnet_101_fpn": 234, "faster_rcnn_resnet_50_fpn": 234, "fasterrcnn": [231, 232, 233, 234], "fastrcnn": [234, 235], "fc": [16, 105, 155, 166, 173, 183, 249, 250, 267, 344, 373, 374, 419, 420, 421, 422, 423, 424, 586], "fc1": [16, 111, 112, 266, 270, 356, 357, 358, 360, 361, 362, 363, 364, 366, 367, 394], "fc2": [16, 111, 112, 266, 270, 356, 357, 358, 360, 361, 363, 364, 366, 367, 394], "fc3": 112, "feat": 237, "feat_channel": [231, 235], "feat_dim": 236, "featur": [3, 16, 29, 31, 40, 43, 44, 54, 55, 57, 59, 61, 65, 67, 69, 70, 71, 72, 73, 92, 96, 99, 100, 102, 105, 108, 109, 110, 111, 112, 113, 118, 131, 132, 133, 134, 135, 136, 137, 138, 141, 145, 153, 154, 155, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 183, 184, 185, 186, 195, 196, 197, 199, 200, 211, 213, 214, 218, 219, 222, 223, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 250, 251, 254, 256, 257, 258, 287, 292, 300, 302, 310, 311, 338, 339, 340, 344, 345, 374, 376, 381, 383, 384, 385, 386, 391, 392, 394, 403, 404, 405, 406, 408, 409, 410, 411, 419, 420, 421, 422, 423, 424, 426, 436, 451], "feature_channel": 65, "feature_extractor": 109, "fed": [3, 249, 250, 582], "feed": [3, 92, 392, 582], "feedback": 584, "feedforward": [205, 260, 428, 430, 432], "femto": [48, 108], "fergu": [108, 213], "fetch": [0, 586], "fewer": [1, 108, 142, 147, 148, 149, 150, 151, 152, 216, 234, 250, 540, 566], "field": [5, 6, 8, 108, 113, 142, 183, 187, 218, 257, 258, 345, 586], "fig": 583, "figur": 583, "file": [3, 466, 467, 468, 585], "fill": [236, 347, 351, 352, 472, 473, 474, 476, 496, 497, 499, 500, 501, 502], "fill_valu": [496, 497], "filter": [79, 108, 122, 213, 236, 246, 283, 284, 285, 286, 287, 288, 290, 338, 339, 340, 373, 374], "filter_height": 290, "filter_s": 290, "filter_width": 290, "final": [40, 55, 65, 73, 74, 75, 76, 77, 78, 79, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 121, 155, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 183, 184, 185, 186, 205, 215, 216, 219, 231, 232, 233, 236, 251, 252, 253, 254, 260, 266, 267, 268, 269, 270, 282, 345, 369, 428, 429, 431, 462, 478, 513, 514, 571, 582], "find": [27, 519, 521, 537, 538, 552, 563], "fine": [55, 108, 113, 128, 131, 220, 221, 232, 233, 344, 582], "finer": 133, "finest": 134, "finetun": 586, "first": [5, 6, 7, 8, 20, 109, 188, 189, 190, 191, 213, 215, 222, 234, 236, 246, 267, 268, 300, 344, 391, 392, 438, 452, 453, 454, 455, 456, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 530, 541, 543, 546, 551, 563, 567, 569, 571, 572, 582], "fit": [15, 436], "fix": [108, 142, 188, 219, 231, 234, 235, 236, 239, 267, 441, 444, 446, 478, 553], "flag": [16, 462, 465, 539], "flat": [108, 188], "flatten": [13, 105, 109, 219, 236, 251, 270, 290, 378, 390, 395, 487, 538, 549, 554, 555, 557, 567], "flattennet": 392, "flexibl": [1, 3, 4, 10, 11, 13, 15, 41, 65, 92, 96, 105, 106, 107, 108, 109, 122, 123, 146, 155, 179, 180, 181, 182, 187, 200, 211, 215, 266, 267, 268, 269, 270, 388, 434, 436, 443, 448, 478, 490, 499, 500, 572, 582], "flexibli": 14, "flip": [577, 579, 582], "float": [2, 5, 6, 7, 8, 20, 25, 40, 41, 55, 65, 66, 67, 68, 78, 79, 92, 98, 100, 113, 119, 123, 132, 133, 134, 135, 136, 137, 138, 188, 189, 205, 215, 219, 231, 235, 236, 238, 239, 240, 241, 242, 246, 248, 249, 250, 251, 254, 257, 258, 260, 263, 265, 272, 275, 282, 291, 292, 293, 294, 295, 296, 297, 303, 304, 305, 306, 310, 311, 312, 314, 315, 316, 333, 336, 337, 338, 339, 340, 347, 351, 352, 353, 354, 355, 359, 369, 370, 380, 381, 382, 383, 384, 385, 386, 396, 397, 398, 399, 403, 404, 405, 406, 407, 408, 409, 410, 411, 426, 428, 430, 432, 434, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 469, 471, 476, 478, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 509, 523, 536, 545, 546, 547, 550, 572, 574, 576, 577, 578, 579], "float32": [219, 263, 265, 461, 478, 491, 492, 495, 496, 497, 499, 501, 536, 572], "float64": [461, 502, 536, 572], "floor": [446, 480, 503], "flop": [108, 234, 259, 462, 558], "flow": [31, 65, 67, 99, 105, 108, 173, 270, 292, 354, 356, 364, 367, 372, 373, 374, 391, 394, 463, 471, 508, 550, 583, 584, 586], "fluctuat": 440, "fly": [2, 3], "fn": 465, "fname": 3, "focu": [31, 222], "focus": 222, "follow": [0, 13, 15, 17, 20, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 74, 75, 76, 77, 78, 92, 113, 114, 115, 116, 117, 125, 126, 179, 180, 181, 182, 187, 200, 211, 213, 216, 219, 233, 236, 248, 249, 250, 251, 252, 253, 260, 272, 273, 275, 276, 277, 278, 279, 280, 282, 300, 302, 335, 338, 339, 340, 341, 342, 343, 344, 345, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 374, 377, 380, 382, 383, 384, 385, 386, 388, 391, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 407, 408, 409, 410, 411, 413, 414, 415, 419, 420, 421, 422, 423, 424, 428, 429, 430, 431, 432, 436, 440, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 463, 466, 468, 477, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 519, 521, 530, 540, 551, 556, 566, 573, 574, 575, 576, 577, 578, 579, 582, 586], "footprint": 117, "foral": [429, 431], "forc": [16, 292], "foreground": [219, 220, 221], "form": [16, 26, 55, 242, 254, 345, 429, 431, 487, 545, 547, 551, 555, 562, 582], "format": [2, 3, 5, 6, 7, 8, 215, 238, 241, 242, 243, 245, 246, 249, 250, 253, 330, 336, 398, 401, 467, 572], "formul": [216, 273, 304, 316], "formula": [20, 28, 279, 317, 318, 319, 360, 365, 366, 397, 399, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 483, 535, 576], "forward": [16, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 67, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 121, 123, 124, 125, 126, 146, 147, 148, 149, 150, 151, 152, 153, 154, 167, 168, 169, 170, 171, 172, 179, 180, 181, 182, 184, 185, 186, 187, 200, 213, 215, 220, 221, 222, 231, 233, 234, 235, 236, 238, 239, 248, 251, 254, 256, 257, 263, 264, 436, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 462, 586], "foundat": [16, 105, 122, 173, 264, 436, 448], "four": [74, 75, 76, 77, 113, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 152, 553], "fpn": [231, 232, 233, 234, 238, 244, 257], "frac": [14, 16, 18, 19, 20, 22, 23, 24, 25, 27, 28, 31, 55, 113, 216, 222, 238, 241, 242, 245, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 293, 300, 302, 311, 312, 316, 317, 318, 319, 320, 323, 324, 325, 327, 328, 329, 333, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 372, 373, 374, 375, 376, 378, 380, 382, 383, 384, 385, 386, 391, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 419, 420, 421, 422, 423, 424, 426, 430, 432, 439, 450, 451, 452, 453, 454, 455, 456, 457, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 540, 542, 548, 550, 551, 553, 554, 555, 556, 557, 560, 561, 562, 563, 564, 565, 568, 569, 570, 574], "fraction": [67, 286, 287, 288], "frame": [234, 297], "framework": [4, 10, 16, 218, 398, 401, 403, 404, 405, 408, 409, 410, 437, 448, 582], "free": [16, 461, 537, 538, 539], "frequent": [398, 401], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 15, 16, 23, 25, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 54, 55, 65, 66, 67, 68, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 92, 100, 101, 102, 103, 104, 105, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 133, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 167, 168, 169, 170, 171, 172, 179, 180, 181, 182, 184, 185, 186, 187, 201, 202, 203, 204, 215, 216, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 265, 266, 267, 268, 269, 270, 286, 290, 292, 300, 304, 310, 314, 320, 321, 322, 330, 331, 333, 335, 336, 338, 339, 340, 344, 345, 347, 349, 350, 351, 352, 353, 354, 362, 369, 372, 373, 374, 375, 378, 380, 381, 383, 384, 385, 386, 391, 392, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 408, 409, 410, 411, 419, 420, 421, 429, 431, 432, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 453, 454, 455, 456, 457, 458, 459, 461, 464, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 478, 483, 484, 485, 489, 490, 492, 513, 514, 519, 520, 521, 529, 535, 537, 538, 539, 542, 543, 548, 551, 552, 555, 559, 560, 561, 562, 563, 567, 569, 570, 573, 574, 575, 576, 577, 578, 579, 582, 583, 586], "fu": 108, "full": [16, 28, 123, 125, 126, 205, 215, 232, 234, 235, 251, 256, 258, 260, 377, 471, 503], "full_lik": 503, "full_matric": 28, "fulli": [4, 11, 17, 29, 40, 73, 74, 75, 76, 77, 78, 79, 105, 108, 109, 110, 111, 112, 155, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 183, 184, 185, 186, 200, 211, 213, 219, 231, 234, 235, 236, 250, 302, 344, 345, 392, 394, 477, 478, 558], "func": 466, "function": [3, 4, 5, 6, 7, 8, 10, 16, 17, 65, 69, 92, 100, 215, 216, 235, 251, 264, 266, 267, 268, 269, 270, 338, 339, 340, 344, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 380, 381, 383, 384, 385, 386, 388, 396, 397, 398, 399, 400, 401, 403, 404, 405, 408, 409, 410, 411, 413, 414, 415, 416, 428, 430, 432, 436, 439, 440, 442, 443, 446, 448, 477, 571, 582, 586], "fundament": [218, 282, 302, 394, 478, 572], "further": [14, 42, 43, 44, 45, 54, 67, 79, 80, 81, 82, 83, 84, 85, 86, 87, 121, 123, 124, 125, 126, 128, 130, 153, 154, 197, 471, 477, 520, 529, 535, 586], "fuse": [31, 108, 183, 237, 462], "fusion": [55, 184, 185, 186, 223, 234, 257], "futur": [282, 370, 393, 431, 432, 584], "g": [0, 10, 11, 16, 19, 20, 23, 26, 28, 55, 65, 69, 78, 80, 81, 82, 83, 84, 85, 86, 87, 97, 98, 99, 106, 107, 108, 109, 110, 111, 112, 118, 146, 188, 189, 200, 216, 219, 220, 221, 232, 233, 236, 237, 240, 249, 250, 312, 330, 344, 345, 376, 380, 437, 450, 457, 461, 478, 496, 513, 514, 542, 576, 586], "g_": 451, "g_t": 457, "gain": [353, 354], "gamma": [222, 311, 403, 404, 405, 406, 407, 408, 409, 410, 411, 438, 440, 441, 442, 444, 446], "gamma_c": [311, 406], "gan": [287, 375, 376], "gap": [155, 166, 183, 344], "gaussian": [215, 216, 217, 273, 356], "gaussiandiffus": 216, "gelu": [69, 92, 113, 274, 299, 368, 390], "gelunetwork": 356, "gener": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586], "geoffrei": [5, 6], "geometr": 516, "geq": 564, "get": [5, 6, 7, 8], "get_loss": [215, 216, 219, 222, 231, 248, 249, 250, 251, 254, 257], "get_lr": [439, 440, 441, 442, 443, 444, 445, 446], "getattr": 222, "giou": 219, "giou_loss_coef": 219, "girshick": [234, 236], "git": 16, "github": [7, 16], "give": [449, 457], "given": [13, 14, 15, 19, 20, 23, 25, 26, 28, 65, 216, 218, 239, 261, 290, 316, 321, 322, 330, 333, 369, 370, 378, 388, 396, 397, 398, 401, 418, 437, 461, 463, 469, 496, 500, 502, 550, 558, 559, 563, 571, 576, 577, 579, 582, 583], "global": [0, 55, 57, 59, 61, 65, 69, 70, 71, 72, 78, 92, 108, 113, 132, 134, 137, 138, 142, 155, 166, 173, 183, 188, 190, 191, 192, 193, 195, 196, 197, 234, 311, 344, 406, 462, 463, 465, 475, 477], "global_pool": [65, 92], "global_response_norm": [299, 313], "globalresponsenorm": [390, 412], "go": [10, 66, 97, 108], "goal": [396, 398, 401, 584], "good": 93, "googlenet": [97, 108], "gpu": [11, 108, 118, 263, 265, 461, 469, 471, 472, 473, 474, 476, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 536, 539, 586], "grad": [11, 16, 251, 254, 257, 263, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 290, 293, 300, 302, 330, 331, 335, 341, 342, 343, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 372, 373, 374, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 407, 408, 409, 410, 411, 419, 420, 421, 422, 423, 424, 437, 448, 467, 469, 471, 472, 473, 474, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 493, 494, 496, 497, 498, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 548, 550, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 573, 574, 575, 577, 579, 580, 583], "grad_output": 23, "gradient": [10, 11, 16, 17, 31, 65, 66, 67, 99, 105, 108, 222, 239, 245, 251, 254, 257, 263, 265, 331, 378, 381, 436, 437, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 463, 465, 468, 469, 471, 472, 473, 474, 476, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 516, 523, 536, 537, 538, 539, 543, 552, 567, 572, 583, 584], "gradual": [217, 438, 439, 441], "grain": [55, 108, 113, 344], "granular": 240, "graph": [16, 240, 354, 462, 465, 468, 478, 491, 492, 495, 499, 500, 501, 502, 572, 583, 584], "grayscal": [7, 8, 109, 110, 111, 112, 576, 582], "great": 137, "greater": [50, 136, 246, 336, 508, 541], "green": 576, "grid": [108, 113, 238, 239, 248, 249, 250, 251, 252, 253, 254, 255, 257, 330, 331, 508, 551], "grid_sampl": [299, 330, 332], "grid_window_s": 113, "gridattent": 113, "grn": 406, "ground": [219, 231, 248, 249, 250, 251, 257], "groundbreak": 108, "group": [68, 108, 122, 146, 153, 154, 166, 167, 168, 169, 170, 171, 172, 179, 180, 181, 182, 183, 187, 233, 257, 267, 283, 284, 285, 286, 287, 288, 312, 338, 339, 340, 345, 372, 373, 374, 375, 376, 377, 407, 437, 438, 448], "group1": 267, "group2": 267, "group_norm": [299, 313], "groupedconvblock": 166, "groupnorm": [312, 390, 412], "grow": [16, 92], "growth_rat": [73, 74, 75, 76, 77], "guarante": [468, 475], "gw": 254, "h": [10, 13, 14, 15, 108, 155, 167, 168, 169, 170, 171, 172, 184, 185, 186, 207, 215, 216, 217, 219, 220, 221, 222, 234, 238, 239, 241, 242, 243, 248, 249, 250, 251, 254, 255, 257, 258, 282, 284, 285, 287, 288, 290, 292, 296, 297, 311, 318, 319, 321, 322, 324, 325, 328, 329, 330, 335, 337, 339, 340, 344, 369, 370, 377, 388, 392, 404, 405, 406, 409, 410, 414, 415, 417, 418, 421, 424, 428, 430, 432, 573, 575, 586], "h_": [238, 239, 241, 242, 284, 285, 287, 288, 318, 319, 321, 322, 324, 325, 328, 329, 335, 373, 374, 376, 377, 378, 414, 415, 417, 418, 420, 421, 423, 424], "h_i": 248, "h_in": 331, "h_l": [237, 238], "h_out": [284, 285, 287, 288, 324, 325, 328, 329, 331], "h_stack": 548, "h_t": [241, 242], "ha": [0, 20, 42, 55, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 238, 250, 251, 270, 283, 284, 285, 286, 338, 339, 340, 360, 362, 366, 396, 398, 403, 404, 405, 408, 409, 410, 411, 434, 437, 448, 467, 478, 483, 508, 516, 523, 533, 540, 542, 548, 552, 561, 567, 569, 576], "hackabl": 16, "haip": 108, "half": [215, 440, 527], "han": 7, "hand": [27, 219, 234], "handl": [0, 3, 10, 16, 25, 195, 259, 264, 266, 267, 268, 269, 270, 333, 398, 401, 436, 448, 461, 490], "handwritten": [7, 8, 112], "hang": 108, "happen": 586, "hard": [125, 126, 222, 358], "hard_sigmoid": 357, "harder": 222, "hardsigmoid": [358, 368, 390], "hardswish": [368, 390], "hardwar": 118, "hashabl": 478, "hat": [31, 216, 248, 251, 254, 257, 407, 452, 453, 454, 455, 456], "have": [0, 1, 16, 19, 20, 22, 25, 26, 28, 215, 246, 248, 251, 265, 267, 269, 270, 284, 285, 292, 316, 333, 336, 354, 426, 436, 467, 495, 499, 500, 501, 502, 519, 521, 542, 548, 550, 551, 560, 561, 566, 567, 569, 574, 580, 586], "he": 108, "head": [31, 40, 55, 65, 70, 71, 72, 92, 100, 113, 121, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 205, 211, 219, 220, 221, 223, 231, 232, 233, 234, 235, 236, 251, 252, 253, 254, 255, 256, 257, 258, 260, 282, 369, 370, 428, 430, 432, 586], "head_dim": 55, "head_fn": 100, "heapsort": 558, "heart": 16, "heavi": 65, "height": [31, 211, 219, 222, 241, 242, 248, 257, 284, 285, 287, 288, 290, 296, 297, 311, 318, 319, 321, 322, 324, 325, 328, 329, 331, 335, 337, 345, 373, 374, 378, 404, 405, 406, 409, 410, 414, 415, 417, 420, 421, 423, 424, 434, 573, 575, 580], "help": [31, 57, 59, 61, 69, 98, 275, 277, 297, 333, 355, 359, 362, 363, 367, 403, 404, 405, 419, 420, 422, 423, 426, 438, 440, 445, 446, 449, 452, 453, 455, 463, 464, 530, 584], "henc": [513, 514, 556], "here": [3, 18, 232, 264, 286, 300, 397, 436, 448, 464, 477, 571, 572, 582], "heurist": 236, "hidden": [29, 55, 113, 134, 135, 136, 137, 188, 189, 205, 213, 219, 235, 260, 267], "hidden_dim": [231, 235], "hidden_s": 267, "hierarch": [40, 41, 57, 59, 61, 92, 108, 132, 133, 134, 135, 136, 137, 138, 139, 144, 188, 189, 215, 267, 270, 436], "hierarchi": [92, 215, 234, 373], "hierarchical_kl": 215, "hierarchicalnetwork": 267, "high": [11, 43, 49, 50, 72, 88, 89, 90, 91, 92, 93, 95, 102, 108, 113, 114, 115, 118, 121, 129, 130, 133, 135, 143, 144, 145, 163, 178, 187, 195, 196, 197, 207, 208, 229, 230, 231, 240, 438, 473, 476, 490], "higher": [50, 79, 119, 127, 166, 195, 224, 227, 398, 401, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 482, 483, 487, 490, 515, 530], "highest": [54, 118, 130, 230, 248, 473], "highli": [16, 31, 46, 54, 108, 124, 134, 194, 259, 443], "highlight": [344, 422, 423, 424, 583], "hinton": [5, 6], "hist": [545, 546, 547], "histogram": [546, 547, 549], "histogram2d": 549, "histogramdd": 549, "histor": 451, "histori": [469, 471, 472, 473, 474, 476, 491, 492, 493, 494, 495, 499, 500, 501, 502], "ho": [216, 217], "hold": [122, 257, 266, 267, 268, 269], "hong": 234, "hook": 468, "horizont": [548, 561, 577, 582, 583], "hot": [248, 251, 254, 257, 398, 401], "how": [2, 3, 13, 15, 134, 179, 180, 181, 182, 187, 222, 267, 270, 330, 331, 388, 436, 582, 583, 584], "howard": 108, "howev": [263, 354, 516], "hstack": 549, "html": [5, 6], "http": [5, 6, 7, 8, 16], "hu": [108, 344], "huang": 108, "huber": [306, 399], "huber_loss": [299, 307], "huberloss": [390, 402], "huberregressionmodel": 399, "hue": 582, "huge": [49, 108, 134], "human": 218, "hungarian": 219, "hybrid": [69, 92, 108, 130, 131], "hyper": 586, "hyperbol": [280, 360, 367, 511, 526, 532], "hyperparamet": [132, 147, 148, 149, 150, 151, 152, 155, 166, 212, 261, 437, 449], "i": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 245, 246, 248, 249, 250, 251, 252, 253, 254, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 300, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 322, 323, 324, 325, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 349, 350, 351, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 388, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 523, 524, 525, 526, 527, 529, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 586], "i_": [490, 543], "i_0": [490, 543], "i_1": [13, 14, 15, 336, 388, 490], "i_2": [13, 14, 15, 336, 388], "i_k": [15, 490], "i_m": [13, 15, 388], "i_n": 336, "iccv": 108, "iclr": [108, 217], "id": 583, "idea": 108, "ideal": [43, 47, 51, 118, 119, 122, 131, 134, 270], "ident": [22, 23, 100, 108, 219, 330, 331, 337, 382, 390, 395, 475, 477, 495, 556], "identifi": [218, 268], "idx": [2, 3, 539], "ieee": [108, 234, 344], "ignor": [251, 257, 428, 429, 430, 431, 432, 539], "ignore_iou_thr": 257, "ii": 533, "ij": [11, 31, 248, 251, 279, 335, 365, 481, 482, 483, 487, 551, 564, 565], "ijb": [254, 257], "ik": [11, 481, 482, 483], "ill": [19, 25], "ilsvrc": 108, "imag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584, 585, 586], "image_dir": 3, "image_mean": 236, "image_path": 3, "image_s": [205, 206, 207, 208, 209, 210, 216, 251, 252, 253, 254, 255], "image_shap": 243, "imagedataset": 3, "imageio": 3, "imagenet": [65, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 100, 108, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 164, 165, 179, 180, 181, 182, 187, 232, 233, 236, 586], "imagenet1k": [585, 586], "imagenet1k_v1": 586, "imagenet_1k": 585, "imbal": [222, 398, 401], "img": 240, "img_siz": [31, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 205, 206, 207, 208, 209, 210], "imgclf": [69, 100, 586], "imggen": [215, 216], "impact": [108, 455], "implement": [2, 3, 16, 25, 29, 31, 40, 65, 69, 73, 78, 92, 96, 97, 98, 99, 100, 106, 107, 108, 109, 119, 120, 121, 132, 133, 155, 164, 165, 167, 168, 169, 170, 171, 172, 173, 188, 205, 211, 213, 215, 216, 217, 219, 222, 231, 234, 235, 236, 240, 248, 251, 254, 257, 259, 260, 264, 290, 293, 331, 341, 342, 343, 345, 369, 370, 378, 382, 406, 430, 432, 437, 442, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 548, 569, 576], "impli": [372, 373], "implicit": [378, 496], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 164, 165, 167, 168, 169, 170, 171, 172, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 292, 293, 294, 297, 300, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 388, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 463, 464, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 539, 540, 541, 542, 543, 544, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 586], "impress": 234, "improp": [10, 267, 270, 477], "improv": [31, 40, 57, 59, 61, 65, 69, 71, 79, 97, 98, 99, 103, 105, 107, 108, 113, 131, 133, 140, 142, 146, 155, 166, 179, 180, 181, 182, 183, 188, 189, 196, 197, 199, 213, 216, 225, 231, 232, 234, 235, 250, 251, 258, 262, 292, 293, 310, 333, 337, 344, 356, 363, 367, 388, 426, 438, 439, 440, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 575, 578, 582], "imread": 3, "in1_featur": [300, 391], "in2_featur": [300, 391], "in_channel": [31, 55, 65, 69, 92, 113, 114, 115, 116, 117, 118, 132, 133, 139, 140, 141, 142, 143, 144, 145, 155, 188, 189, 205, 248, 257, 267, 270, 338, 339, 340, 341, 342, 343, 344, 345, 372, 373, 374, 375, 376, 377, 404, 405, 419, 420, 421, 422, 423, 424, 436], "in_channels_list": 237, "in_featur": [266, 267, 270, 302, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 373, 374, 380, 383, 384, 391, 392, 394, 396, 397, 398, 399, 400, 401, 403, 408, 411, 419, 420, 421, 422, 423, 424, 586], "incept": [97, 98, 99, 100, 105, 106, 107], "inception_next": 100, "inception_next_atto": 108, "inception_next_bas": 108, "inception_next_smal": 108, "inception_next_tini": 108, "inception_resnet_v1": 108, "inception_resnet_v2": 108, "inception_v1": 108, "inception_v3": 108, "inception_v4": 108, "inceptionnext": [101, 102, 103, 104], "inceptionresnet": [106, 107], "includ": [3, 4, 7, 11, 16, 17, 23, 24, 29, 40, 70, 71, 72, 96, 97, 98, 106, 109, 113, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 155, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 205, 212, 213, 239, 248, 249, 250, 252, 253, 255, 257, 258, 260, 264, 265, 267, 269, 270, 335, 338, 339, 340, 341, 342, 343, 392, 407, 430, 432, 434, 436, 437, 442, 448, 455, 462, 477, 483, 553, 564, 565, 584], "inclus": [265, 268, 473, 476, 498, 513, 514], "incom": [302, 394], "incompat": [232, 540], "incomplet": 2, "incompletedataset": 2, "incorpor": [28, 31, 108, 124, 166, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 187, 196, 198, 251, 258, 356], "increas": [43, 44, 92, 113, 116, 118, 119, 127, 130, 134, 135, 137, 140, 145, 166, 167, 168, 169, 170, 171, 172, 183, 225, 262, 283, 284, 285, 286, 287, 290, 337, 440, 445, 451, 458, 464, 548, 569, 576, 577, 579, 582], "increment": [216, 234], "independ": [55, 236, 267, 283, 284, 285, 286, 369, 380, 383, 384, 385, 386, 411, 483, 494, 574, 576, 578, 580], "index": [0, 2, 5, 6, 7, 8, 10, 13, 236, 239, 251, 254, 257, 311, 333, 336, 388, 406, 426, 439, 440, 441, 442, 443, 444, 446, 464, 478, 491, 492, 495, 513, 514, 516, 539, 551, 552, 556], "indexerror": 0, "indic": [0, 1, 11, 14, 15, 16, 70, 71, 72, 138, 153, 154, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 219, 236, 246, 248, 251, 265, 267, 269, 270, 305, 309, 333, 336, 398, 401, 419, 426, 428, 429, 430, 431, 432, 444, 461, 463, 478, 537, 538, 539, 552, 558, 563, 570, 573, 575], "individu": [3, 222, 267, 270, 399, 411, 448, 451, 458], "induc": [277, 363], "induct": [57, 59, 61, 69, 92, 108], "inf": 531, "infer": [94, 133, 179, 180, 181, 182, 187, 232, 234, 235, 236, 246, 249, 250, 267, 270, 336, 461, 465, 468, 586], "infin": [26, 28, 454], "inform": [31, 55, 108, 134, 190, 191, 192, 193, 198, 217, 218, 259, 263, 344, 442, 448, 450], "infti": [24, 456], "inherit": [1, 449, 457, 459], "init": 348, "initi": [1, 16, 31, 40, 67, 73, 92, 100, 105, 113, 117, 146, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 183, 184, 185, 186, 194, 195, 196, 197, 201, 202, 203, 204, 212, 220, 221, 232, 233, 251, 252, 253, 255, 261, 263, 265, 266, 267, 268, 269, 270, 345, 347, 349, 350, 351, 352, 353, 354, 369, 372, 373, 374, 391, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 411, 426, 430, 432, 434, 436, 437, 439, 441, 443, 444, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 472, 475, 476, 477, 491, 495, 498, 499, 500, 501, 502, 536], "initial_accumulator_valu": 451, "inject": 65, "inner": [257, 481, 490, 503], "innov": [121, 131], "input": [10, 11, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 65, 67, 68, 69, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 166, 179, 180, 181, 182, 183, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 205, 206, 207, 208, 209, 210, 211, 213, 215, 216, 217, 220, 221, 224, 225, 227, 228, 229, 230, 232, 233, 234, 235, 236, 246, 249, 250, 252, 253, 255, 256, 259, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 300, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 388, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 434, 436, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 465, 477, 478, 479, 481, 482, 483, 487, 490, 492, 494, 497, 500, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 586], "input1": 391, "input2": 391, "input_": [29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 213, 236, 272, 273, 275, 276, 277, 278, 279, 280, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 406, 413, 414, 415, 416, 417, 418, 426, 541, 558, 563, 564, 565], "input_1": 300, "input_2": 300, "input_data": [355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 372, 373, 374, 380, 383, 384, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 408, 411, 419, 420, 421, 422, 423, 424], "input_indic": [333, 426], "input_s": [267, 269, 365, 398, 401], "input_shap": 215, "input_tensor": [55, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 167, 168, 169, 170, 171, 172, 179, 180, 181, 182, 184, 185, 186, 187, 200, 211, 251, 263, 266, 267, 268, 269, 270, 279, 292, 293, 316, 341, 342, 343, 344, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 372, 373, 374, 380, 381, 382, 383, 384, 385, 386, 392, 393, 394, 396, 398, 399, 400, 401, 403, 404, 405, 408, 409, 410, 411, 419, 420, 421, 422, 423, 424, 434, 436, 573, 574, 575, 576, 577, 578, 579, 580], "insert": 539, "insid": [3, 222, 462, 463], "insight": 108, "inspect": [16, 264, 265, 270, 437, 584], "inspir": [10, 13, 15, 16, 40, 108], "instabl": [25, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459], "instanc": [0, 1, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 106, 107, 110, 111, 112, 117, 123, 124, 125, 126, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 206, 207, 208, 209, 210, 212, 214, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 233, 249, 250, 252, 253, 255, 256, 258, 261, 262, 264, 265, 266, 268, 269, 270, 312, 314, 362, 408, 409, 410, 411, 428, 429, 431, 437, 461, 465, 466, 536, 555, 562, 582, 586], "instance_norm": [299, 313, 408, 409, 410], "instancenorm": [312, 407], "instancenorm1d": [390, 412], "instancenorm1dmodel": 408, "instancenorm2d": [390, 412], "instancenorm3d": [390, 412], "instanti": [2, 32, 33, 34, 35, 36, 37, 38, 39, 67, 70, 71, 72, 78, 88, 89, 90, 91, 94, 100, 101, 102, 103, 104, 127, 128, 129, 130, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 179, 180, 181, 182, 187, 190, 191, 192, 193, 198, 199, 206, 207, 208, 209, 210, 235, 236, 466, 586], "instead": [57, 59, 61, 257, 266, 267, 268, 269, 270, 349, 350, 353, 354, 426, 428, 430, 432, 452, 453, 454, 493, 494], "int": [0, 1, 2, 5, 6, 7, 8, 13, 14, 15, 23, 24, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 243, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 265, 279, 282, 283, 284, 285, 286, 287, 288, 290, 292, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 351, 352, 353, 354, 365, 369, 370, 372, 373, 374, 375, 376, 377, 378, 381, 388, 391, 392, 394, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 434, 439, 440, 441, 442, 443, 444, 445, 446, 452, 453, 454, 455, 456, 458, 461, 466, 469, 471, 472, 473, 474, 475, 476, 478, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 509, 513, 514, 519, 520, 521, 523, 529, 530, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 550, 553, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 572, 573, 575, 580, 583], "int32": [426, 539, 552], "int64": [219, 246, 461, 471, 478, 537, 538], "integ": [1, 3, 23, 173, 200, 246, 283, 284, 285, 318, 319, 336, 369, 372, 373, 374, 375, 378, 411, 414, 415, 420, 421, 422, 423, 424, 471, 472, 473, 474, 476, 477, 490, 493, 499, 501, 508, 516, 520, 523, 529, 534, 535, 547, 553, 555, 556, 559, 562], "integr": [1, 2, 4, 5, 6, 7, 8, 14, 16, 17, 55, 67, 69, 70, 71, 72, 108, 113, 130, 146, 235, 236, 260, 265, 267, 269, 270, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 372, 373, 374, 388, 391, 394, 419, 420, 421, 422, 423, 424, 478], "intellig": [108, 218, 234, 344], "intend": [10, 135, 263, 268, 269], "intens": [25, 73, 156, 574, 576], "interact": [113, 188, 300, 391, 436, 477, 584], "interdepend": 108, "interest": [235, 239], "interfac": [2, 16, 264, 267, 416, 448], "interfer": [463, 566], "intermedi": [25, 134, 153, 154, 219, 254, 344, 428, 430, 432, 478, 583], "intern": [16, 108, 156, 157, 158, 159, 160, 161, 162, 163, 174, 175, 176, 177, 178, 217, 220, 221, 232, 233, 234, 266, 267, 268, 269, 270, 360, 397, 398, 401, 436, 490, 573, 574, 575, 576, 577, 578, 579, 580], "interpol": [217, 239, 299, 331, 334, 434, 498, 580], "interpret": [10, 108, 218, 279, 365, 542], "intersect": [245, 246], "interv": [444, 446, 472, 476, 491], "introduc": [41, 57, 59, 61, 65, 69, 79, 97, 98, 108, 113, 119, 120, 121, 132, 133, 141, 166, 199, 222, 231, 234, 235, 236, 257, 259, 276, 286, 344, 356, 361, 362, 364, 367, 380, 383, 384, 385, 386, 428, 575, 578, 582], "introspect": [16, 270], "intuit": [10, 13, 16, 266, 268, 436, 582, 584], "inv": 21, "inv_a": 22, "invalid": 219, "invari": [420, 423], "invers": [19, 22, 23, 25, 241, 440, 451, 505, 506, 507], "invert": [19, 22, 23, 27, 108, 120, 121, 124], "invit": 16, "invok": 466, "involv": [13, 15, 16, 18, 19, 20, 22, 25, 26, 28, 183, 218, 272, 273, 275, 276, 277, 278, 280, 300, 302, 335, 372, 373, 374, 388, 391, 394, 469, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 502, 515, 517, 518, 519, 521, 525, 527, 551, 553, 555, 562], "iou": [219, 222, 236, 240, 244, 246, 248, 251, 257, 258], "iou_": 257, "iou_aware_alpha": [257, 258], "iou_branch_weight": 257, "iou_matrix": 245, "iou_thresh": [240, 246, 251, 254], "is_all_fre": 478, "is_bit_fre": 461, "is_caus": [282, 370, 431, 432], "is_fre": 478, "is_leaf": 478, "isn": 16, "issu": [3, 16, 222, 363, 397, 403, 404, 405, 452, 453], "item": [7, 16, 400], "iter": [0, 1, 2, 3, 216, 263, 264, 267, 269, 429, 431, 437, 440, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 491], "ith": [279, 365], "its": [4, 16, 23, 25, 29, 41, 65, 68, 108, 118, 122, 130, 133, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 174, 175, 176, 177, 178, 184, 185, 186, 213, 231, 238, 251, 263, 266, 267, 268, 269, 283, 284, 285, 286, 287, 290, 330, 337, 345, 354, 356, 360, 361, 366, 375, 381, 422, 423, 424, 436, 437, 450, 458, 462, 463, 464, 466, 468, 491, 493, 494, 501, 508, 516, 519, 521, 523, 536, 540, 556, 558, 559, 566, 574, 577, 579, 582, 586], "itself": [18, 23, 266, 267, 268, 269, 438, 465], "j": [8, 10, 13, 14, 15, 31, 217, 245, 248, 251, 254, 257, 279, 333, 344, 365, 388, 403, 404, 405, 408, 409, 410, 419, 420, 422, 423, 426, 513, 514, 551, 561, 564, 565, 573, 575], "j_": 490, "j_1": [13, 15, 388], "j_2": [13, 15, 388], "j_k": [15, 490], "j_n": [13, 15, 388], "jacobian": [513, 514], "jain": 217, "jie": 108, "jk": [11, 482], "join": [3, 542], "jointli": 231, "joseph": 234, "json": 466, "jupyt": 584, "k": [23, 31, 55, 108, 113, 133, 219, 238, 239, 282, 283, 286, 369, 370, 372, 375, 398, 404, 405, 409, 410, 419, 422, 423, 432, 481, 482, 490, 492, 495, 513, 514, 542, 543, 559, 563], "k_2": 55, "k_d": [285, 288, 374, 421, 424], "k_h": [284, 285, 287, 288, 373, 374, 378, 420, 421, 424], "k_i": 369, "k_j": 31, "k_w": [284, 285, 287, 288, 373, 374, 378, 420, 421, 424], "kaim": [108, 349, 350, 353, 354], "kaiming_norm": 348, "kaiming_uniform": 348, "kalenichenko": 108, "karen": 108, "kashif": 7, "kb": 585, "kd": 377, "kdim": 369, "keep": [246, 264, 293, 361, 450, 462, 523, 539, 556, 564, 565], "keep_grad": [265, 469, 471, 472, 473, 474, 476, 478, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 536, 572], "keep_var": 264, "keepdim": [24, 519, 520, 521, 529, 535, 537, 538], "kei": [16, 55, 69, 113, 122, 132, 138, 139, 140, 141, 143, 144, 145, 188, 189, 218, 251, 264, 266, 268, 270, 282, 369, 370, 432, 437, 467, 586], "kept": [246, 520, 529, 535], "kernel": [65, 92, 108, 109, 110, 111, 112, 122, 125, 126, 183, 184, 185, 186, 187, 213, 283, 284, 285, 286, 287, 288, 290, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 338, 339, 340, 341, 342, 343, 345, 372, 373, 374, 375, 376, 377, 378, 413, 414, 415, 416, 417, 418, 420, 421, 424, 462], "kernel_s": [121, 125, 126, 183, 184, 185, 186, 231, 235, 236, 267, 270, 323, 324, 325, 327, 328, 329, 338, 339, 340, 341, 342, 343, 345, 372, 373, 374, 375, 376, 377, 378, 388, 404, 405, 419, 420, 421, 422, 423, 424], "keyerror": 264, "keyword": [30, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 114, 115, 116, 117, 118, 125, 126, 127, 128, 129, 130, 131, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 201, 202, 203, 204, 214, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 252, 253, 255, 256, 258, 264, 393], "kh": [376, 377], "kind": [539, 558], "kingma": 217, "kj": [481, 483], "kl": 215, "kl_weight": 215, "known": [108, 286, 288], "kriz": [5, 6], "krizhevski": [5, 6, 108], "kroneck": [13, 279, 365, 388], "kw": [376, 377], "kwarg": [30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 212, 214, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 249, 250, 252, 253, 255, 256, 258, 264, 393, 466], "l": [18, 25, 88, 108, 208, 215, 216, 222, 238, 248, 251, 254, 257, 282, 283, 286, 295, 317, 320, 323, 327, 338, 344, 370, 378, 380, 383, 384, 385, 386, 396, 397, 398, 399, 400, 401, 403, 404, 405, 408, 409, 410, 411, 413, 416, 431, 432, 530, 540], "l1": [93, 108, 219, 222, 316], "l2": [316, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459], "l3": [94, 108], "l7": [95, 108], "l_": [259, 283, 286, 317, 320, 323, 327, 372, 375, 413, 416, 419, 422, 428], "l_0": 238, "l_k": 369, "l_m": [429, 430], "l_out": [283, 286, 323, 327], "l_q": 369, "l_t": [428, 429, 430], "l_v": 369, "label": [4, 5, 6, 7, 8, 11, 98, 218, 231, 235, 236, 257, 258, 336, 396, 397, 398, 401], "lambd": 449, "lambda": [20, 277, 363, 443, 449, 453], "lambda_": [248, 251, 257], "lambda_1": 20, "lambda_2": 20, "lambda_coord": [248, 249, 250, 251], "lambda_fn": 443, "lambda_i": 20, "lambda_n": 20, "lambda_noobj": [248, 249, 250, 251], "lambdalr": 447, "languag": [4, 372, 391, 419, 422, 428], "larg": [0, 3, 25, 43, 49, 50, 54, 57, 59, 61, 73, 88, 91, 108, 113, 114, 115, 118, 121, 125, 127, 130, 131, 134, 135, 145, 156, 157, 158, 161, 174, 175, 191, 195, 196, 197, 206, 207, 208, 229, 232, 254, 255, 257, 341, 342, 343, 362, 399, 436, 449, 452, 453, 454, 457, 458, 459], "larger": [42, 55, 58, 71, 72, 78, 79, 113, 114, 115, 155, 183, 196, 222, 224, 227, 229, 262, 266, 268, 283, 284, 285, 290, 292, 381, 449, 484, 541, 553, 573, 575, 580], "largest": [54, 95, 134, 145, 195, 230, 519, 563], "last": [1, 65, 219, 220, 221, 279, 315, 336, 365, 392, 439, 440, 441, 442, 443, 444, 446, 482, 483, 490, 513, 514, 539, 541, 542, 558, 577, 579], "last_channel": 121, "last_epoch": [439, 440, 441, 442, 443, 444, 446], "last_lr": [438, 439, 440, 441, 442, 443, 444, 445, 446], "latent": [215, 217], "later": [31, 92, 108, 237], "latest": [4, 16], "layer": [10, 16, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 59, 60, 61, 65, 66, 69, 73, 74, 75, 76, 77, 78, 79, 92, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 121, 122, 123, 125, 126, 131, 132, 133, 134, 138, 139, 140, 141, 143, 144, 145, 146, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 183, 184, 185, 186, 188, 189, 195, 196, 200, 201, 202, 203, 204, 205, 213, 215, 218, 219, 225, 231, 232, 233, 235, 237, 250, 251, 254, 257, 259, 260, 264, 266, 267, 270, 279, 293, 302, 310, 312, 314, 315, 338, 339, 340, 341, 342, 343, 344, 345, 349, 350, 353, 354, 365, 370, 372, 373, 374, 382, 391, 392, 393, 394, 401, 411, 419, 420, 421, 422, 423, 424, 428, 429, 430, 431, 432, 436, 477, 553, 572, 584], "layer1": 466, "layer2": 466, "layer_group": 267, "layer_norm": [299, 313, 411], "layer_norm_ep": [428, 430, 432], "layer_scale_init": 40, "layer_scale_init_valu": 92, "layer_sequ": [267, 270], "layernorm": [55, 69, 92, 113, 132, 133, 139, 140, 141, 143, 144, 145, 188, 189, 390, 407, 412, 428, 429, 430, 431, 432], "layernormmodel": 411, "layout": [68, 288], "lcd": [467, 468], "lceil": 508, "lct": [467, 468], "ldot": [254, 537, 538], "le": [108, 219, 234, 513, 514], "lead": [10, 16, 65, 232, 267, 270, 316, 356, 408, 409, 410, 411, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 477, 540], "leaf": 478, "leaki": [275, 359], "leaky_relu": [274, 299, 359], "leakyrelu": [368, 390], "learn": [1, 3, 4, 7, 8, 10, 14, 16, 23, 25, 31, 65, 79, 102, 103, 108, 113, 134, 138, 166, 167, 168, 169, 170, 171, 172, 213, 214, 217, 218, 219, 220, 221, 231, 232, 233, 259, 266, 267, 268, 269, 276, 279, 344, 355, 359, 361, 365, 372, 373, 374, 383, 384, 385, 386, 388, 391, 394, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 464, 475, 498, 559, 564, 565, 571, 572, 582], "learnabl": [31, 55, 188, 189, 215, 219, 231, 263, 264, 265, 310, 311, 312, 314, 315, 338, 339, 340, 369, 372, 373, 374, 375, 376, 377, 391, 394, 403, 404, 405, 406, 407, 408, 409, 410, 411, 432, 436], "least": [25, 26, 28, 434, 533, 564, 565], "lecun": [8, 108], "left": [23, 24, 25, 28, 31, 55, 113, 216, 238, 242, 248, 254, 257, 273, 279, 316, 356, 365, 369, 378, 396, 397, 398, 399, 401, 403, 404, 405, 408, 409, 410, 411, 422, 423, 424, 430, 432, 530, 539, 543, 573, 575, 583], "leftarrow": 455, "len": [0, 1, 2, 3, 551], "lenet": [16, 110, 111, 112], "lenet_1": 108, "lenet_1_weight": 585, "lenet_4": 108, "lenet_4_weight": 585, "lenet_5": [16, 108], "lenet_5_weight": [16, 585], "length": [55, 92, 113, 216, 219, 222, 248, 251, 267, 282, 283, 286, 295, 317, 320, 323, 327, 372, 393, 403, 407, 408, 413, 416, 419, 422, 431, 432, 471, 539, 553, 574], "leq": [241, 357, 358, 399, 444, 456, 488, 509, 565], "lerp": 335, "less": [0, 272, 275, 306, 355, 359, 398, 399, 401, 498, 516], "let": [20, 490, 539], "level": [105, 113, 134, 135, 136, 137, 222, 226, 237, 238, 257, 378], "leverag": [13, 14, 15, 16, 27, 31, 99, 100, 107, 108, 127, 130, 139, 142, 167, 168, 169, 170, 171, 172, 190, 191, 192, 193, 194, 195, 211, 218, 345, 436, 586], "lfloor": [378, 446, 516], "li": [108, 142], "liao": 234, "librari": [3, 10, 16, 17, 264, 436, 437, 448, 466, 477, 478, 582], "lie": [243, 469], "lightblu": 583, "lightgrai": 583, "lightgreen": 583, "lightweight": [16, 52, 60, 65, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 101, 108, 117, 120, 125, 126, 138, 142, 147, 148, 149, 150, 151, 152, 159, 176, 192, 193, 199, 210, 250, 253, 256, 345, 358, 362], "like": [13, 14, 15, 16, 57, 59, 61, 79, 105, 108, 122, 130, 167, 168, 169, 170, 171, 172, 184, 185, 186, 197, 216, 218, 232, 234, 240, 249, 250, 257, 260, 263, 264, 267, 270, 283, 288, 292, 353, 354, 363, 380, 381, 388, 392, 403, 404, 405, 407, 408, 409, 410, 463, 464, 497, 536, 572, 582, 584, 586], "likelihood": [309, 398, 401], "limit": [45, 52, 125, 126, 127, 129, 250, 256, 362, 450, 509], "lin": 222, "linalg": 21, "linalgerror": [18, 19, 20, 22, 23, 24, 25, 26, 27, 28], "line": [16, 465], "linear": [11, 16, 17, 18, 25, 26, 27, 65, 92, 100, 108, 113, 120, 124, 133, 139, 140, 141, 142, 143, 144, 145, 173, 215, 216, 266, 267, 268, 270, 272, 273, 275, 276, 277, 293, 349, 350, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 373, 374, 378, 380, 382, 383, 384, 391, 392, 393, 396, 397, 398, 399, 400, 401, 403, 408, 411, 419, 420, 421, 422, 423, 424, 428, 430, 432, 438, 466, 468, 495, 586], "linearli": 399, "linguist": 218, "linspac": 503, "linspace_tensor": 498, "list": [0, 1, 16, 31, 40, 41, 55, 65, 70, 71, 72, 79, 92, 100, 109, 121, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 155, 166, 173, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 215, 219, 222, 237, 238, 248, 251, 254, 255, 257, 258, 263, 265, 266, 267, 268, 269, 315, 345, 393, 411, 437, 439, 440, 441, 442, 443, 444, 445, 446, 469, 472, 473, 474, 476, 478, 490, 492, 493, 494, 496, 497, 499, 500, 501, 502, 534, 540, 546, 547, 556, 559, 560, 568, 571], "listdir": 3, "liter": [14, 65, 155, 215, 222, 240, 263, 265, 303, 304, 305, 306, 308, 309, 331, 335, 338, 339, 340, 341, 342, 343, 345, 349, 350, 372, 373, 374, 375, 376, 377, 396, 397, 398, 399, 400, 401, 434, 440, 445, 461, 469, 471, 472, 473, 474, 476, 478, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 536, 539, 551, 558], "liu": 108, "ln": [360, 488], "load": [3, 4, 5, 6, 7, 8, 232, 250, 251, 263, 264, 265, 437, 442, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 466, 586], "load_state_dict": [222, 232, 233, 264, 437, 442, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 586], "loadabl": 586, "loader": [1, 2, 3], "local": [16, 31, 57, 59, 61, 69, 70, 71, 72, 108, 113, 132, 134, 137, 188, 189, 190, 191, 192, 193, 218, 236, 251, 257, 290, 372, 378, 440, 586], "locat": [108, 251, 331, 335, 558], "log": [189, 215, 222, 242, 251, 254, 257, 309, 396, 397, 398, 401, 439, 440, 441, 442, 443, 444, 445, 446, 503, 518, 539], "log2": 503, "log_2": [238, 518], "log_softmax": 401, "logarithm": [488, 515, 517, 518], "logic": [3, 233, 413, 414, 415, 436, 437, 516], "logit": [29, 40, 213, 219, 220, 221, 254, 258, 279, 304, 365, 397, 398, 462], "logsoftmax": [398, 401], "logvar": 215, "long": [31, 92, 113, 135, 219, 259, 330, 455, 534], "look": [234, 248, 249], "lookup": [333, 426], "loop": [1, 13, 14, 15, 16, 267, 388, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "loss": [16, 25, 216, 220, 221, 234, 249, 250, 258, 266, 267, 268, 269, 270, 279, 303, 304, 305, 306, 308, 309, 330, 355, 356, 359, 361, 363, 364, 365, 367, 380, 383, 384, 385, 386, 393, 396, 397, 398, 399, 400, 401, 403, 404, 405, 408, 409, 410, 411, 437, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 558, 563], "loss_fn": 397, "lost": 392, "low": [105, 120, 125, 126, 129, 257, 473, 476], "lower": [18, 65, 68, 119, 232, 352, 378, 429, 430, 431, 432, 440, 449, 457, 458, 459, 476, 509, 547, 564, 565], "lower_triangular": 564, "lowest": 473, "lp": 316, "lr": [16, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "lr_lambda": 443, "lr_schedul": 447, "lrschedul": 447, "ls_init_valu": 100, "lu": 22, "lucid": [0, 1, 2, 5, 6, 7, 8, 12, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 300, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 388, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 434, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 470, 503, 549, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583, 585], "m": [89, 108, 200, 217, 220, 221, 245, 255, 256, 259, 266, 267, 270, 312, 369, 407, 420, 421, 423, 424, 428, 429, 432, 444, 452, 453, 454, 455, 456, 490, 495, 564, 565], "m1": 16, "m2": 16, "m3": 16, "m_": [452, 453, 454, 455, 456, 564, 565], "m_m": 430, "m_t": [430, 455, 456], "maaten": 108, "mac": 16, "machin": [3, 7, 8, 25, 108, 218, 234, 260, 344, 428, 452, 464, 475], "magnitud": [293, 333, 426, 457, 458, 582], "mai": [3, 10, 13, 15, 16, 20, 22, 25, 129, 215, 216, 232, 267, 269, 316, 337, 382, 388, 399, 438, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 462, 477, 541, 566, 576, 582, 584, 586], "main": [26, 105, 267, 492, 495, 543, 564, 565], "maintain": [25, 31, 41, 46, 55, 64, 66, 70, 71, 72, 88, 89, 90, 91, 92, 93, 103, 108, 116, 119, 136, 137, 138, 140, 141, 142, 143, 166, 167, 168, 169, 170, 171, 172, 179, 180, 181, 182, 187, 189, 237, 241, 253, 263, 264, 266, 267, 268, 270, 277, 293, 349, 350, 353, 354, 355, 356, 363, 380, 382, 383, 384, 385, 386, 403, 404, 405, 408, 409, 410, 452, 457, 573, 576, 580], "major": [16, 257, 468], "make": [1, 3, 10, 31, 43, 44, 47, 48, 65, 96, 105, 108, 109, 118, 120, 122, 124, 125, 126, 128, 129, 131, 134, 143, 155, 190, 191, 192, 193, 194, 198, 199, 206, 209, 215, 218, 248, 249, 250, 267, 270, 364, 398, 399, 411, 420, 423, 436, 451, 452, 453, 454, 464, 466, 477, 483, 551, 559, 571, 582, 584], "manag": [264, 266, 267, 268, 269, 270, 436, 448, 462, 463, 465, 466, 477, 586], "manhattan": 24, "mani": [65, 586], "manipul": [10, 13, 266, 268, 582], "manner": [10, 13, 14, 188, 267, 270, 461], "manual": [10, 215, 303, 304, 305, 309, 378, 396, 397, 398, 401, 586], "map": [13, 15, 65, 67, 100, 108, 113, 153, 154, 155, 166, 176, 183, 215, 219, 231, 234, 235, 237, 238, 239, 254, 256, 257, 264, 278, 280, 287, 292, 311, 331, 344, 364, 367, 376, 382, 388, 406, 426, 462, 541, 558], "mark": [219, 234, 550, 583], "markovian": 217, "marri": 108, "mask": [108, 219, 263, 282, 369, 370, 380, 383, 384, 385, 386, 428, 429, 430, 431, 432, 550, 564, 565, 570], "masked_fil": 549, "match": [10, 11, 15, 16, 27, 55, 92, 216, 222, 232, 233, 234, 239, 246, 249, 250, 256, 264, 267, 270, 282, 286, 288, 303, 304, 306, 308, 315, 320, 322, 338, 339, 340, 381, 418, 426, 437, 490, 497, 515, 540, 555, 556, 559, 562, 568, 574, 582, 586], "matcher": [219, 220, 221], "math": [369, 510, 525, 531], "mathbb": [216, 248, 251, 254, 257, 369, 559], "mathbf": [13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 31, 211, 216, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 282, 300, 302, 330, 335, 341, 342, 343, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 370, 372, 373, 374, 375, 376, 377, 380, 383, 384, 385, 386, 388, 391, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 408, 409, 410, 411, 419, 420, 421, 422, 423, 424, 481, 482, 483, 487, 504, 505, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 542, 548, 553, 554, 555, 556, 560, 561, 562, 564, 565, 566, 568, 569, 573, 574, 575, 576, 577, 578, 579, 580], "mathcal": [215, 216, 222, 248, 251, 254, 257, 349, 351, 353, 380, 383, 384, 385, 386, 396, 397, 398, 399, 400, 401, 403, 404, 405, 408, 409, 410, 411, 539], "mathemat": [16, 22, 338, 339, 340, 575, 577, 578, 579], "mathrm": [25, 513, 514, 523], "matmul": [378, 490, 503], "matplotlib": 583, "matric": [17, 19, 20, 22, 25, 27, 28, 330, 369, 432, 481, 482, 483, 495, 551, 564, 565], "matrix": [11, 13, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 31, 290, 300, 330, 333, 378, 393, 394, 426, 436, 481, 490, 530, 551], "matrix_pow": 21, "matthew": 108, "max": [10, 24, 65, 173, 200, 219, 220, 221, 257, 276, 316, 320, 321, 322, 327, 328, 329, 333, 336, 357, 358, 361, 362, 397, 416, 417, 418, 422, 423, 424, 426, 439, 440, 445, 454, 484, 503, 509, 545], "max_box": 240, "max_lr": 440, "max_norm": [333, 426], "max_pool": [422, 423, 424], "max_pool1d": [299, 326], "max_pool2d": [299, 326], "max_pool3d": [299, 326], "max_valu": 509, "maxim": [3, 49, 130], "maximum": [24, 118, 219, 220, 221, 234, 236, 240, 246, 251, 254, 336, 361, 362, 422, 423, 424, 439, 440, 452, 454, 503, 509, 519, 545, 578], "maxpool": [29, 213], "maxpool1d": [390, 425], "maxpool1dmodel": 422, "maxpool2d": [267, 270, 373, 390, 425], "maxpool2dmodel": 423, "maxpool3d": [374, 390, 425], "maxpool3dmodel": 424, "maxvit": [114, 115, 116, 117, 118], "maxvit_bas": 108, "maxvit_larg": [108, 115], "maxvit_smal": 108, "maxvit_tini": [108, 116], "maxvit_xlarg": 108, "mb": 585, "mbconv": 113, "mean": [5, 6, 7, 8, 10, 13, 14, 15, 26, 153, 154, 215, 235, 236, 239, 248, 263, 277, 283, 284, 285, 291, 303, 304, 305, 306, 308, 309, 310, 312, 314, 338, 339, 340, 351, 355, 356, 357, 359, 361, 363, 364, 367, 374, 380, 388, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 407, 408, 409, 410, 411, 445, 452, 453, 454, 455, 456, 457, 463, 474, 503, 509, 515, 517, 518, 519, 521, 525, 527, 529, 533, 534, 535, 571, 574, 582], "meaning": [14, 270], "meant": 246, "measur": [396, 398, 400, 401], "mechan": [31, 55, 65, 69, 70, 71, 72, 92, 108, 113, 133, 134, 135, 136, 137, 142, 153, 154, 173, 183, 187, 189, 190, 191, 192, 193, 194, 197, 198, 205, 231, 259, 260, 269, 300, 369, 541], "media": 108, "medic": [288, 377], "medium": [48, 52, 56, 89, 108, 127, 128, 131, 136, 228, 254, 255, 257], "meet": [108, 416], "mem_is_caus": [429, 430], "mem_key_padding_mask": [428, 429, 430], "mem_mask": [428, 429, 430], "member": 586, "membership": 396, "memori": [2, 3, 16, 66, 73, 142, 428, 429, 430, 465, 493, 494], "merg": [13, 65, 67, 68, 108, 236, 240, 388], "mergesort": [539, 558], "meshgrid": 549, "meta": 586, "metablock": 92, "metal": [461, 478], "method": [3, 10, 14, 16, 17, 22, 79, 173, 211, 212, 231, 249, 250, 266, 267, 268, 269, 270, 303, 304, 305, 306, 308, 309, 331, 349, 350, 353, 354, 396, 397, 398, 399, 400, 401, 434, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 477], "metric": [445, 585], "mha": 369, "mid": [94, 103, 209], "mid_channel": [125, 126], "middl": [114, 115, 464], "might": 436, "migrat": [16, 222], "mileston": 444, "mimic": [68, 497], "min": [357, 358, 362, 439, 440, 445, 485, 503, 509, 545], "min_lr": 445, "min_siz": 240, "min_valu": 509, "mind": [0, 3, 267, 270, 465, 523], "mingx": [108, 234], "mini": [1, 312, 407], "minibackbon": 235, "minim": [4, 101, 108, 121, 270, 396, 398, 399, 400, 401, 403, 404, 405, 408, 409, 410, 411, 448], "minima": 440, "minimalist": 16, "minimum": [240, 241, 439, 440, 445, 503, 509, 521, 545], "minu": 364, "mirror": [500, 502], "misclassifi": 222, "mish": [257, 258, 368, 390], "mismatch": [10, 13, 15, 79, 113, 232, 233, 264, 388, 436, 437, 586], "miss": [264, 436, 468, 586], "mitig": [65, 275, 355, 359, 363, 403, 404, 405], "mix": [100, 462, 465], "mixer": 100, "mlp": [16, 55, 92, 100, 113, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 188, 189, 345], "mlp_dim": 205, "mlp_ratio": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 92, 100, 113, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 188, 189], "mlx": [118, 461, 478, 496, 539], "mnist": [4, 7, 9, 110, 111, 585], "mnist_train": [4, 8], "mobil": [92, 93, 108, 119, 120, 121, 122, 124, 125, 126, 129, 139], "mobilenet": [120, 121, 122, 124, 125, 126, 128, 129, 130, 131, 362], "mobilenet_v2": 108, "mobilenet_v2_weight": 585, "mobilenet_v3": [125, 126], "mobilenet_v3_larg": 108, "mobilenet_v3_large_weight": 585, "mobilenet_v3_smal": 108, "mobilenet_v3_small_weight": 585, "mobilenet_v4": [127, 128, 129, 130, 131], "mobilenet_v4_conv_larg": 108, "mobilenet_v4_conv_medium": 108, "mobilenet_v4_conv_smal": 108, "mobilenet_v4_hybrid_larg": 108, "mobilenet_v4_hybrid_medium": 108, "mobilenetv2": [108, 120], "mobilenetv3": [108, 121, 125, 126], "mode": [16, 92, 219, 220, 221, 297, 310, 314, 330, 331, 335, 349, 350, 380, 382, 383, 384, 385, 386, 434, 440, 445, 478, 553], "model": [1, 3, 4, 10, 16, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 279, 282, 286, 287, 292, 333, 337, 338, 339, 340, 345, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 374, 375, 377, 378, 380, 382, 383, 384, 388, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 408, 411, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 462, 465, 466, 467, 468, 477, 508, 571, 572, 582, 583, 584], "model_b0": 78, "model_b7": 78, "model_tini": 100, "moder": [44, 48, 104, 128, 143, 177], "modern": [16, 40, 41, 100, 108], "modif": [212, 270], "modifi": [16, 30, 56, 57, 58, 59, 60, 61, 62, 63, 64, 93, 127, 155, 211, 214, 266, 267, 268, 269, 347, 349, 350, 351, 352, 353, 354, 380, 438, 463, 475, 478, 539, 548, 550, 557, 566, 569], "modul": [5, 6, 7, 8, 10, 16, 29, 30, 31, 40, 41, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 69, 78, 79, 92, 93, 94, 95, 96, 99, 100, 105, 106, 107, 108, 109, 113, 119, 120, 121, 122, 131, 132, 133, 155, 166, 173, 183, 188, 189, 200, 211, 213, 214, 216, 219, 222, 231, 235, 236, 237, 238, 239, 240, 251, 252, 253, 254, 255, 257, 258, 260, 263, 265, 266, 267, 268, 269, 270, 293, 338, 339, 340, 341, 342, 343, 344, 345, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 388, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 434, 436, 437, 438, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 466, 467, 468, 477, 572, 582, 584, 586], "modular": [3, 16, 215, 216, 218, 260, 264, 267, 270, 436, 582], "moduledict": [267, 268, 270, 271], "modulelist": [269, 270, 271], "moment": [452, 453, 454, 455, 456], "momentum": [310, 314, 338, 339, 340, 403, 404, 405, 408, 409, 410, 440, 449, 455, 457, 459], "momentum_decai": 455, "monitor": 445, "monoton": [360, 366], "moor": 25, "more": [3, 4, 7, 10, 11, 20, 43, 57, 59, 61, 65, 72, 114, 115, 116, 135, 136, 137, 141, 155, 162, 195, 196, 198, 199, 227, 232, 235, 251, 256, 258, 262, 266, 267, 270, 292, 336, 341, 342, 343, 355, 383, 384, 385, 386, 397, 428, 436, 437, 448, 449, 450, 453, 454, 457, 458, 459, 474, 483, 490, 533, 561, 564, 565, 582, 584], "most": [17, 47, 95, 108, 134, 218, 223, 230, 248, 423, 572, 573, 582], "mostli": 523, "move": [16, 449, 457, 586], "mse": [215, 216, 306, 308, 399, 400], "mse_loss": [16, 299, 307], "mseloss": [390, 402], "mu": [31, 215, 351, 403, 404, 405, 408, 409, 410, 411, 535], "mu_c": 574, "mu_g": [312, 407], "mu_i": [408, 409, 410], "much": [134, 222, 582], "mul": 486, "multi": [3, 4, 11, 55, 57, 59, 61, 70, 71, 72, 100, 106, 108, 113, 132, 133, 138, 139, 140, 141, 143, 144, 145, 183, 184, 185, 186, 190, 191, 192, 193, 194, 196, 197, 198, 199, 205, 222, 226, 234, 237, 240, 251, 260, 279, 282, 305, 309, 345, 365, 369, 398, 401, 428, 430, 432, 462, 478, 520, 529, 535], "multi_conv": [55, 57, 59, 61], "multidimension": [472, 476, 493], "multiheadattent": [371, 390], "multipl": [1, 3, 11, 13, 16, 17, 23, 27, 29, 55, 57, 59, 61, 65, 155, 173, 187, 215, 218, 219, 238, 249, 257, 268, 269, 270, 290, 335, 337, 344, 345, 369, 378, 380, 383, 384, 385, 386, 388, 398, 401, 429, 431, 436, 438, 441, 445, 464, 469, 472, 473, 474, 476, 481, 486, 490, 493, 494, 530, 541, 559, 566, 571, 576, 582], "multipli": [23, 123, 251, 269, 302, 394, 434, 444, 445, 446, 458, 487, 503, 518], "multiscaleroialign": 244, "multisteplr": 447, "must": [0, 1, 3, 16, 18, 19, 20, 22, 23, 26, 27, 28, 55, 92, 215, 216, 219, 222, 232, 233, 239, 246, 251, 264, 266, 267, 268, 269, 270, 286, 293, 312, 315, 336, 369, 380, 382, 383, 384, 385, 386, 397, 401, 407, 426, 428, 430, 432, 434, 437, 442, 467, 468, 469, 533, 540, 541, 542, 548, 550, 553, 555, 556, 559, 561, 562, 564, 565, 569, 573, 574, 575, 576, 577, 579, 586], "mx": [461, 478], "my_checkpoint": 586, "my_simple_model": 466, "my_state_dict": 586, "mymodel": [264, 265, 436, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "myoptim": [437, 448], "n": [13, 23, 24, 108, 155, 167, 168, 169, 170, 171, 172, 184, 185, 186, 215, 216, 217, 222, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 248, 249, 250, 251, 254, 257, 259, 266, 267, 270, 282, 283, 284, 285, 286, 287, 288, 290, 292, 295, 296, 297, 300, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 333, 335, 337, 338, 339, 340, 344, 349, 351, 353, 369, 370, 372, 373, 374, 375, 376, 377, 378, 385, 386, 391, 394, 396, 397, 398, 400, 401, 403, 404, 405, 406, 408, 409, 410, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 430, 431, 432, 471, 490, 495, 513, 514, 520, 523, 533, 535, 539, 547, 552, 586], "n1": 24, "n_i": 219, "nabla": [513, 514, 566], "nabla_": [450, 451, 452, 453, 454, 455, 456, 458], "nabla_t": 456, "nadam": 460, "nair": [5, 6], "name": [10, 13, 14, 15, 108, 217, 234, 259, 264, 266, 268, 270, 388, 466, 468, 585, 586], "nan": [26, 28], "nano": [51, 108], "narrow": 250, "natur": [25, 372, 391, 419, 422, 428, 488, 515, 516, 517], "ndarrai": [16, 263, 265, 469, 478, 492, 494, 497, 500, 502, 536], "ndim": [26, 28, 265, 478], "ne": 23, "nearest": [331, 335, 434, 516, 523], "nearli": 478, "necessari": [4, 5, 6, 7, 8, 16, 25, 241, 548, 569], "neck": 258, "need": [2, 4, 14, 15, 131, 231, 259, 267, 268, 269, 279, 286, 287, 336, 391, 397, 428, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 493, 494, 571, 572, 582], "neg": [23, 25, 28, 222, 272, 309, 336, 337, 355, 359, 361, 363, 398, 401, 458, 513, 514, 523, 539, 542, 543, 570], "negative_slop": [275, 359], "neglect": 269, "neighbor": [331, 335], "neq": [24, 513], "nest": [258, 267, 270, 436, 462, 465], "nesterov": 455, "net": [108, 213, 216, 232, 233, 235, 236], "network": [3, 4, 10, 14, 29, 30, 31, 40, 41, 65, 71, 73, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 99, 105, 108, 112, 119, 122, 123, 127, 130, 146, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 173, 174, 175, 176, 177, 178, 183, 200, 205, 214, 216, 217, 218, 231, 232, 233, 234, 235, 236, 237, 238, 251, 257, 260, 263, 264, 265, 266, 267, 268, 269, 270, 273, 276, 277, 278, 279, 280, 283, 284, 285, 287, 292, 293, 300, 302, 310, 331, 337, 344, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 372, 373, 374, 376, 377, 380, 381, 382, 383, 384, 385, 386, 388, 391, 393, 394, 396, 398, 399, 400, 401, 403, 404, 405, 406, 408, 411, 419, 420, 421, 422, 423, 424, 426, 428, 430, 432, 436, 437, 448, 449, 457, 459, 476, 477, 478, 491, 499, 501, 519, 521, 553, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 584], "neural": [3, 4, 10, 14, 29, 30, 31, 40, 78, 80, 81, 82, 83, 84, 85, 86, 87, 105, 108, 112, 214, 216, 217, 218, 231, 235, 236, 251, 259, 263, 264, 265, 266, 267, 268, 269, 270, 273, 276, 277, 278, 279, 280, 283, 284, 285, 293, 300, 302, 310, 337, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 372, 373, 374, 380, 381, 382, 383, 384, 385, 386, 388, 391, 393, 394, 396, 398, 399, 400, 401, 403, 404, 405, 406, 408, 411, 419, 420, 421, 422, 423, 424, 426, 436, 437, 448, 449, 457, 459, 476, 477, 478, 491, 499, 501, 519, 521, 553, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 584], "neuralnetwork": [357, 358, 360, 361, 366], "neurip": 217, "neuron": 359, "never": [539, 576], "new": [11, 15, 108, 216, 218, 243, 264, 265, 272, 273, 275, 276, 277, 278, 280, 300, 302, 335, 336, 345, 349, 350, 351, 352, 353, 354, 437, 442, 445, 465, 466, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 494, 497, 504, 505, 506, 507, 508, 509, 510, 511, 512, 515, 516, 517, 518, 519, 521, 522, 523, 524, 525, 526, 527, 528, 530, 531, 532, 533, 534, 536, 540, 542, 548, 550, 553, 555, 556, 557, 561, 562, 564, 565, 568, 569, 570], "new_box": 241, "new_tensor": 530, "next": [215, 270, 571], "ni": 222, "nicola": 234, "nll": 309, "nll_loss": [299, 307], "nllloss": [390, 402], "nlp": [218, 333, 426], "nm": [219, 233, 234, 236, 240, 244, 251, 254], "nms_iou_thresh": 236, "nn": [5, 6, 7, 8, 29, 31, 40, 41, 55, 65, 69, 73, 78, 79, 92, 96, 100, 105, 109, 113, 119, 120, 121, 122, 132, 133, 139, 140, 141, 143, 144, 145, 155, 166, 173, 179, 180, 181, 182, 183, 187, 188, 189, 200, 213, 215, 216, 219, 222, 231, 233, 235, 236, 237, 238, 239, 240, 248, 251, 252, 253, 254, 255, 257, 258, 271, 274, 281, 289, 298, 301, 307, 313, 326, 332, 334, 346, 348, 368, 371, 379, 387, 389, 390, 395, 402, 412, 425, 427, 433, 435, 437, 438, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 466, 468, 572, 582, 583, 586], "no_grad": [16, 216, 463], "node": [16, 478], "nois": [28, 217, 477], "non": [20, 23, 25, 28, 108, 113, 219, 234, 236, 240, 246, 251, 254, 269, 273, 275, 276, 330, 336, 349, 350, 355, 356, 357, 359, 360, 361, 362, 363, 364, 366, 367, 380, 383, 384, 385, 386, 428, 429, 430, 431, 432, 452, 453, 471, 488, 490, 508, 509, 516, 523, 552, 567], "nonconform": 16, "none": [0, 1, 2, 5, 6, 7, 8, 11, 16, 24, 31, 55, 65, 69, 78, 79, 92, 96, 100, 105, 109, 119, 120, 121, 122, 132, 133, 146, 155, 188, 189, 211, 215, 216, 219, 235, 237, 238, 239, 240, 248, 251, 254, 257, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 293, 300, 302, 303, 304, 305, 306, 308, 309, 310, 312, 314, 315, 333, 336, 337, 338, 339, 340, 341, 342, 343, 345, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 388, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 434, 437, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 464, 467, 469, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 542, 545, 546, 548, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 577, 579, 580, 583], "nonzero": 549, "noobj": [248, 251, 254, 257], "norm": [17, 21, 55, 65, 69, 92, 113, 116, 117, 132, 133, 188, 189, 316, 333, 407, 426, 429, 431, 454, 584], "norm_first": [428, 430, 432], "norm_lay": [55, 69, 92, 113, 132, 133, 139, 140, 141, 143, 144, 145, 188, 189], "norm_layer_cl": 92, "norm_layer_tf": 113, "norm_typ": [333, 426], "normal": [5, 6, 7, 8, 31, 40, 55, 65, 69, 92, 108, 113, 132, 133, 139, 140, 141, 143, 144, 145, 173, 188, 189, 194, 195, 196, 197, 198, 199, 219, 220, 221, 222, 235, 236, 248, 249, 250, 251, 273, 277, 279, 280, 292, 310, 311, 312, 314, 315, 330, 331, 333, 338, 339, 340, 348, 349, 353, 356, 363, 365, 380, 403, 404, 405, 406, 407, 408, 409, 410, 411, 426, 428, 429, 430, 431, 432, 457, 474, 477, 545, 546, 547, 571, 581, 582], "normalized_shap": [315, 411], "notat": [10, 11, 13, 14, 15, 388], "note": [283, 380], "notebook": 584, "noth": [291, 294, 295, 296], "notimplementederror": [2, 264, 437], "notin": 509, "nov": 108, "novel": [7, 108, 113, 218], "now": [16, 233, 586], "np": [155, 167, 168, 169, 170, 171, 172, 184, 185, 186, 263, 265, 344, 398, 401, 426, 461, 471, 478, 483, 490, 491, 492, 495, 499, 501, 502, 530, 536, 572], "npy": [5, 6, 7, 8], "num": [429, 431, 498], "num_anchor": [222, 251, 252, 253], "num_block": [31, 65], "num_box": [248, 249, 250], "num_channel": 407, "num_class": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 336, 365, 398, 401, 586], "num_decoder_lay": [260, 428], "num_embed": [333, 426], "num_encoder_lay": [260, 428], "num_featur": [270, 338, 339, 340, 403, 404, 405, 408, 409, 410], "num_group": [312, 407], "num_head": [31, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 71, 72, 113, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 205, 260, 369, 428, 429, 430, 431, 432], "num_init_featur": [73, 74, 75, 76, 77], "num_lay": [205, 429, 431], "num_paramet": 269, "num_pos_feat": 219, "num_queri": [219, 220, 221], "num_stag": 133, "num_vit": [92, 93, 94, 95], "number": [0, 1, 2, 5, 6, 7, 8, 10, 13, 15, 19, 20, 22, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 239, 240, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 265, 267, 269, 270, 282, 283, 284, 285, 286, 287, 288, 290, 295, 296, 297, 300, 302, 305, 309, 310, 311, 312, 314, 317, 318, 319, 331, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 349, 350, 353, 354, 364, 369, 372, 373, 374, 375, 376, 377, 378, 388, 391, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 439, 440, 444, 445, 446, 449, 461, 471, 472, 475, 476, 478, 488, 491, 493, 495, 498, 519, 520, 521, 523, 534, 535, 537, 538, 541, 542, 545, 546, 547, 548, 552, 553, 555, 556, 557, 560, 562, 563, 569, 574, 576, 577, 579, 582], "numer": [14, 22, 25, 241, 292, 303, 304, 305, 310, 311, 312, 314, 315, 316, 336, 338, 339, 340, 362, 381, 396, 397, 398, 403, 404, 405, 406, 407, 408, 409, 410, 411, 428, 430, 432, 450, 451, 452, 453, 454, 455, 456, 457, 471, 478, 480, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 536, 572], "numpi": [16, 263, 265, 398, 401, 461, 467, 468, 471, 478, 483, 496, 530, 533, 540, 553, 555, 562, 572, 582], "o": [3, 223, 224, 225, 251, 255, 256, 258, 259, 369, 421, 424, 499, 500, 539], "obei": 586, "obj": [248, 251, 254, 257, 468], "obj_bal": [257, 258], "objdet": [237, 238, 239, 240, 241, 242, 243, 245, 246, 248], "object": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586], "observ": 452, "obtain": [1, 113, 215], "occur": [15, 337, 462, 465, 466, 542], "occurr": 23, "odot": [380, 383, 384, 385, 386], "off": [44, 128, 250, 463], "offer": [4, 10, 41, 42, 44, 54, 72, 94, 103, 114, 115, 118, 128, 136, 137, 139, 141, 206, 225, 232, 436, 448, 477, 539, 582], "offici": 256, "offset": [241, 242, 251, 254, 257, 495, 543], "often": [23, 164, 165, 283, 284, 285, 287, 288, 290, 331, 333, 375, 381, 398, 401, 491, 501, 572, 576, 580, 582], "old": 445, "older": 455, "omit": 219, "onc": [231, 233, 234, 235, 248, 249], "one": [0, 11, 14, 108, 179, 180, 181, 182, 187, 218, 219, 220, 221, 222, 223, 224, 234, 248, 251, 254, 257, 269, 270, 279, 283, 286, 302, 323, 327, 336, 338, 339, 340, 363, 364, 365, 372, 375, 384, 398, 401, 403, 408, 419, 422, 434, 437, 462, 464, 465, 468, 474, 489, 496, 497, 500, 519, 521, 543, 544, 554, 561, 566, 572, 586], "one_hot": [299, 334], "ones": [16, 222, 300, 302, 312, 321, 322, 372, 373, 374, 394, 403, 404, 405, 408, 409, 410, 411, 417, 418, 436, 495, 496, 500, 503, 541], "ones_lik": 503, "onli": [65, 234, 248, 249, 330, 331, 335, 336, 357, 361, 380, 381, 383, 384, 385, 386, 396, 397, 398, 401, 403, 404, 405, 407, 408, 409, 410, 411, 422, 423, 424, 458, 462, 463, 468, 491, 509, 519, 521, 530, 533, 539, 543, 553, 554, 556, 557, 560, 563, 564, 565], "onto": [26, 28, 235], "openml": [5, 6, 7, 8, 16], "oper": [3, 10, 11, 13, 14, 15, 16, 17, 22, 25, 31, 55, 57, 59, 61, 113, 142, 153, 154, 173, 174, 175, 176, 177, 178, 235, 257, 263, 264, 267, 272, 273, 275, 276, 277, 278, 280, 282, 283, 284, 285, 286, 290, 293, 297, 300, 302, 317, 318, 319, 323, 324, 325, 327, 328, 329, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 370, 372, 373, 374, 375, 376, 378, 380, 382, 383, 384, 385, 386, 388, 391, 392, 393, 394, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 426, 436, 462, 463, 464, 469, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 491, 493, 494, 499, 501, 513, 514, 515, 517, 518, 519, 520, 521, 523, 525, 527, 529, 530, 533, 535, 542, 548, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 572, 574, 580, 583, 584], "operand": 478, "operatornam": [23, 25, 369, 428, 429, 430, 431, 432, 471, 537, 538, 539], "opposit": [449, 557], "optim": [3, 10, 14, 16, 17, 23, 25, 26, 28, 40, 45, 46, 49, 52, 54, 60, 63, 64, 65, 73, 79, 88, 89, 90, 91, 92, 96, 97, 98, 99, 102, 105, 106, 107, 108, 120, 121, 125, 126, 128, 129, 130, 131, 134, 194, 195, 229, 233, 234, 249, 256, 263, 265, 268, 269, 290, 372, 373, 374, 426, 436, 439, 440, 441, 442, 443, 444, 445, 446], "optimizer_st": [437, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "option": [1, 5, 6, 7, 8, 10, 13, 14, 15, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 219, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 246, 249, 250, 251, 252, 253, 254, 255, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 272, 275, 279, 282, 284, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 300, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315, 316, 323, 324, 325, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 349, 350, 351, 352, 353, 354, 355, 359, 365, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 388, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 434, 437, 439, 440, 441, 442, 443, 444, 445, 446, 449, 457, 459, 469, 471, 472, 473, 474, 476, 478, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 509, 513, 514, 519, 520, 521, 523, 529, 534, 535, 536, 537, 538, 539, 541, 542, 543, 545, 546, 547, 551, 555, 557, 558, 559, 560, 561, 563, 564, 565, 566, 567, 572, 576, 577, 579, 583], "ord": [24, 316], "order": [1, 3, 10, 16, 24, 28, 266, 267, 268, 269, 270, 471, 490, 534, 539, 558, 563, 567, 571], "ordered_dict": 270, "ordereddict": [264, 266, 267, 270, 467, 468], "organ": [55, 266, 267, 268, 270, 466], "orient": 582, "origin": [32, 33, 34, 35, 36, 37, 38, 39, 41, 65, 66, 68, 98, 108, 112, 188, 189, 199, 215, 216, 217, 235, 236, 248, 249, 250, 252, 253, 255, 257, 291, 337, 344, 367, 392, 462, 508, 516, 539, 541, 553, 554, 555, 556, 557, 558, 562, 563, 567, 568, 580], "orthogon": [25, 26, 28], "orthonorm": 26, "oscil": [449, 457, 459], "other": [2, 3, 22, 57, 59, 61, 98, 107, 108, 109, 112, 128, 132, 216, 235, 257, 263, 264, 267, 270, 349, 350, 380, 381, 392, 436, 437, 463, 477, 491, 493, 499, 501, 533, 551, 563, 582], "otherwis": [156, 157, 158, 159, 160, 161, 162, 163, 174, 175, 176, 177, 178, 215, 222, 233, 251, 272, 275, 276, 277, 279, 293, 312, 336, 355, 357, 358, 359, 361, 363, 365, 382, 383, 384, 385, 386, 399, 419, 420, 421, 422, 423, 424, 429, 431, 437, 458, 466, 484, 485, 519, 521, 537, 538, 550, 563, 564, 565, 567], "otim": [25, 300, 391], "out": [0, 3, 4, 10, 16, 223, 224, 225, 226, 227, 228, 229, 230, 236, 237, 238, 239, 252, 253, 255, 256, 258, 272, 273, 275, 276, 277, 278, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 300, 302, 310, 311, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 333, 335, 349, 350, 353, 354, 370, 372, 373, 374, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 388, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 430, 449, 471, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 537, 538, 539, 542, 544, 548, 553, 554, 555, 556, 560, 561, 562, 564, 565, 568, 569, 570, 583], "out_channel": [65, 109, 121, 125, 126, 237, 267, 270, 338, 339, 340, 341, 342, 343, 345, 372, 373, 374, 375, 376, 377, 404, 405, 419, 420, 421, 422, 423, 424, 436], "out_featur": [266, 267, 270, 300, 302, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 373, 374, 380, 383, 384, 391, 392, 394, 396, 397, 398, 399, 400, 401, 403, 408, 411, 419, 420, 421, 422, 423, 424], "outcom": [576, 577, 579], "outer": [11, 503], "outlier": [306, 399], "output": [0, 1, 2, 10, 11, 15, 16, 23, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 219, 220, 221, 223, 224, 231, 232, 233, 235, 236, 249, 250, 252, 253, 255, 258, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 300, 302, 316, 317, 318, 319, 320, 321, 322, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 434, 436, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 463, 464, 465, 469, 471, 473, 474, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 492, 494, 495, 496, 499, 501, 502, 508, 515, 516, 517, 518, 519, 520, 521, 523, 525, 527, 529, 530, 533, 534, 535, 539, 546, 550, 551, 552, 553, 555, 557, 559, 562, 566, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583], "output_height": 290, "output_lay": [267, 270], "output_pad": [286, 287, 288, 375, 376, 377], "output_s": [238, 239, 267, 317, 318, 319, 320, 321, 322, 413, 414, 415, 416, 417, 418], "output_width": 290, "output_with_norm": [333, 426], "output_with_pad": [333, 426], "outsid": [0, 382, 462], "over": [0, 1, 2, 3, 11, 14, 17, 120, 130, 153, 154, 183, 213, 215, 217, 219, 231, 232, 235, 245, 246, 251, 264, 267, 269, 279, 312, 317, 318, 319, 320, 321, 322, 344, 365, 372, 373, 374, 375, 376, 377, 398, 401, 403, 404, 405, 407, 408, 409, 410, 411, 414, 415, 418, 419, 420, 421, 422, 423, 424, 438, 440, 446, 449, 450, 451, 452, 453, 472, 476, 490, 519, 520, 521, 529, 533, 535, 576, 577, 579], "overal": [211, 293], "overdetermin": 25, "overfit": [1, 29, 213, 294, 297, 381, 383, 384, 385, 386, 449, 452, 457, 459], "overhead": [108, 121, 344], "overlap": [108, 113, 236, 240, 246], "overli": 362, "overrid": [2, 3, 55, 116, 117, 128, 129, 130, 188, 189, 249, 250, 539], "overridden": [264, 437], "overshoot": 438, "overwrit": [266, 268], "own": [4, 16, 233, 266, 267, 268, 269, 283, 284, 285, 286, 287, 354, 436, 574, 586], "p": [24, 25, 78, 217, 222, 248, 251, 254, 257, 265, 268, 269, 291, 292, 293, 294, 295, 296, 297, 316, 333, 378, 380, 381, 383, 384, 385, 386, 419, 422, 423, 426, 576, 577, 579, 582], "p_": [251, 254, 257], "p_d": [421, 424], "p_h": [378, 420, 421, 424], "p_i": 248, "p_t": 222, "p_w": [378, 420, 421, 424], "packag": [2, 3, 4, 10, 17, 218, 436, 448, 466, 475, 477, 572, 582, 584, 586], "pad": [109, 219, 231, 235, 236, 267, 270, 283, 284, 285, 286, 287, 288, 290, 317, 318, 319, 320, 323, 324, 325, 327, 328, 329, 331, 333, 338, 339, 340, 341, 342, 343, 345, 372, 373, 374, 375, 376, 377, 378, 404, 405, 413, 414, 415, 416, 419, 420, 421, 422, 423, 424, 426, 549, 583], "pad_after_dim1": 553, "pad_after_dim2": 553, "pad_before_dim1": 553, "pad_before_dim2": 553, "pad_width": 553, "padding_height": 290, "padding_idx": [333, 426], "padding_mod": 331, "padding_width": 290, "pair": [219, 300], "pan": [257, 258], "panda": [16, 108], "panet": [257, 258], "pang": [108, 234], "paper": [32, 33, 34, 35, 36, 37, 38, 39, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 97, 142], "paradigm": [67, 108], "parallel": [1, 3, 55, 108, 183, 257, 259, 369], "param": [264, 265, 268, 269, 437, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "param1": 264, "param_dict": 268, "param_group": [437, 448], "param_groups_setup": 437, "param_list": 269, "param_s": 466, "paramet": [0, 2, 16, 108, 110, 111, 112, 217, 234, 259, 264, 436, 437, 438, 448, 477, 582, 584, 585, 586], "parameter": 122, "parameterdict": 271, "parameterlist": 271, "parent": [16, 436, 478], "pars": 461, "part": [65, 108, 251, 254, 263, 264, 286, 354, 375, 376, 392, 426, 436, 463, 477, 491, 492, 495, 499, 500, 501, 502, 541, 543, 559, 564, 565, 572, 582], "partial": [16, 18, 19, 20, 22, 23, 24, 25, 27, 28, 66, 67, 68, 108, 222, 272, 273, 275, 276, 277, 278, 279, 280, 300, 302, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 372, 373, 374, 375, 376, 380, 383, 384, 385, 386, 391, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 408, 409, 410, 411, 419, 420, 421, 422, 423, 424, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 540, 542, 548, 550, 551, 553, 554, 555, 556, 557, 560, 561, 562, 563, 564, 565, 568, 569, 570], "particip": [16, 265, 572], "particular": [266, 268], "particularli": [25, 55, 57, 59, 61, 113, 120, 128, 167, 168, 169, 170, 171, 172, 232, 267, 268, 269, 270, 279, 292, 302, 338, 339, 340, 341, 342, 343, 365, 394, 397, 398, 401, 408, 409, 410, 411, 439, 453, 463, 466, 498, 516, 571], "partit": [68, 108, 113, 417, 508, 559], "pascal": [232, 233, 249, 250, 252, 253], "pass": [2, 16, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 65, 66, 67, 68, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 164, 165, 166, 167, 168, 169, 170, 171, 172, 179, 180, 181, 182, 183, 184, 185, 186, 187, 200, 201, 202, 203, 204, 213, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 233, 234, 235, 236, 248, 251, 252, 253, 254, 255, 258, 264, 265, 266, 267, 268, 269, 270, 330, 335, 338, 339, 340, 344, 345, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 373, 374, 375, 376, 380, 381, 382, 383, 384, 385, 386, 391, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 408, 411, 419, 420, 421, 422, 423, 424, 428, 429, 430, 431, 432, 436, 462, 478, 496, 497, 498, 520, 529, 533, 534, 535, 539, 542, 548, 554, 556, 560, 564, 565, 569, 572, 582, 586], "past": [449, 450, 452, 457], "patch": [55, 57, 59, 61, 108, 113, 132, 133, 188, 189, 205, 206, 207, 208, 209, 210, 236, 290, 378, 420], "patch_norm": [188, 189], "patch_siz": [55, 132, 133, 139, 140, 141, 142, 143, 144, 145, 188, 189, 205, 206, 207, 208, 209, 210], "path": [3, 5, 6, 7, 8, 40, 41, 55, 65, 66, 67, 92, 100, 113, 133, 257, 293, 382, 467, 468], "pathlib": 468, "pathwai": 108, "patienc": 445, "pattern": [10, 11, 13, 14, 15, 16, 31, 57, 59, 61, 108, 218, 234, 276, 344, 361, 372, 373, 374, 388], "pedagog": 16, "penal": [449, 457, 459], "penalti": [450, 451, 452, 453, 454, 455, 456], "penros": 25, "per": [1, 13, 117, 121, 133, 139, 140, 141, 143, 144, 145, 167, 168, 169, 170, 171, 172, 184, 185, 186, 219, 220, 221, 222, 231, 234, 235, 236, 237, 240, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 282, 317, 321, 369, 378, 388, 397, 407, 408, 409, 410, 411, 413, 418, 432, 440, 540, 586], "perceptron": 100, "perform": [3, 10, 11, 14, 16, 17, 18, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 61, 63, 64, 70, 71, 72, 79, 88, 89, 90, 91, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 117, 121, 122, 123, 124, 128, 129, 130, 131, 134, 135, 136, 137, 139, 142, 163, 179, 180, 181, 182, 183, 189, 195, 196, 197, 200, 209, 213, 216, 218, 226, 234, 235, 238, 239, 250, 254, 258, 262, 264, 265, 269, 273, 282, 283, 284, 285, 286, 287, 288, 310, 311, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 341, 342, 343, 344, 345, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 366, 367, 372, 373, 374, 375, 376, 378, 380, 383, 384, 385, 386, 388, 391, 393, 394, 403, 404, 405, 407, 408, 409, 410, 411, 413, 414, 415, 416, 418, 419, 420, 421, 422, 423, 424, 434, 437, 438, 442, 445, 462, 463, 475, 477, 479, 480, 483, 486, 489, 490, 513, 514, 515, 519, 521, 523, 529, 534, 540, 559, 570, 571, 573, 575, 580, 582], "period": 439, "permut": [13, 388, 470, 490, 534], "persist": [263, 469, 472, 473, 474, 476, 493, 494], "perturb": [20, 27, 28, 582], "phase": [31, 233], "phi": [273, 356], "pi": [273, 356, 439, 510, 525, 531], "pick": [331, 539], "pickl": [467, 468], "pico": [52, 108], "piecewis": [357, 358], "pil": [572, 582], "pinv": 21, "pioneer": 108, "pip": 16, "pipelin": [5, 6, 7, 8, 65, 233, 235, 236, 240, 245, 258, 388, 477, 571, 572, 574], "pixel": [5, 6, 7, 8, 219, 222, 236, 240, 251, 254, 255, 257, 330, 331, 335, 434, 574, 576], "pixel_scal": 236, "place": [231, 347, 349, 350, 351, 352, 353, 354, 471, 478, 523, 550, 557], "placehold": [264, 393], "placement": [16, 478], "plai": 477, "plane": 543, "platform": 461, "plot": [551, 583], "plt": 583, "plu": 336, "plug": 215, "point": [4, 239, 337, 397, 444, 462, 463], "pointer": 586, "pointwis": [341, 342, 343], "pool": [10, 29, 65, 92, 108, 109, 110, 111, 112, 113, 146, 155, 166, 173, 183, 200, 213, 231, 234, 235, 236, 238, 239, 257, 258, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 344, 345, 373, 374, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 519, 521], "pool1": 270, "pool2": 270, "pool_siz": [92, 231, 235], "poorli": 22, "pop": 251, "popul": 264, "popular": [4, 108], "portabl": 468, "portion": [541, 564, 565, 582], "pos_iou_thr": 257, "pose": 25, "posit": [1, 18, 23, 31, 108, 188, 189, 205, 219, 222, 245, 248, 257, 260, 264, 270, 282, 336, 337, 355, 359, 361, 363, 370, 419, 420, 421, 422, 423, 424, 428, 429, 430, 431, 432, 458, 464, 488, 513, 514, 541, 543, 550, 555, 558, 562, 563, 570, 575], "possibl": 582, "post": [246, 251], "posterior": 216, "potenti": [25, 393, 397, 457, 560], "power": [10, 16, 23, 51, 108, 118, 120, 125, 126, 133, 134, 136, 140, 143, 146, 194, 207, 230, 344, 388, 438, 464, 503, 523, 571, 572, 582], "pp": [108, 234, 259], "practic": [25, 103, 250, 398, 401], "practition": 582, "pre": [31, 65, 88, 89, 90, 91, 108, 156, 160, 161, 222, 233, 251, 254, 586], "pre_kernel_s": 65, "preactbottleneck": [156, 160, 161], "preced": [108, 265, 434], "precis": [144, 236, 461, 496, 523], "precomput": 235, "preconfigur": [80, 81, 82, 83, 84, 85, 86, 87, 106, 107, 117, 223, 224, 226, 252, 255, 256, 258], "pred": [16, 248, 249, 250, 254, 465], "pred_box": [219, 220, 221], "pred_boxes_l": 219, "pred_logit": [219, 220, 221], "pred_logits_l": 219, "predecessor": [41, 133], "predefin": [4, 32, 33, 34, 35, 36, 37, 38, 39, 190, 191, 192, 193, 194, 196, 197, 198, 199, 206, 207, 208, 209, 210, 218, 251, 254, 267, 363, 426, 438, 461], "predict": [55, 108, 188, 190, 191, 192, 193, 211, 216, 218, 219, 222, 231, 234, 235, 236, 241, 246, 248, 255, 256, 396, 398, 400, 401], "prefer": 446, "prefix": [264, 466, 513, 514], "prepar": [3, 464, 553, 555, 562, 572, 582], "prepend": [264, 540], "preprint": [108, 234], "preprocess": [3, 4, 290, 337, 477, 523, 571, 572, 582, 586], "present": [396, 397, 398, 399, 401, 403, 404, 405, 407, 408, 409, 410, 411, 420], "preserv": [14, 65, 67, 108, 134, 239, 291, 293, 331, 337, 380, 382, 471, 491, 492, 495, 499, 500, 501, 502, 520, 529, 530, 535, 537, 538, 539, 541, 557, 567], "preset": [4, 114, 115, 116, 117], "pretrain": [220, 221, 222, 232, 233, 586], "pretrained_backbon": [219, 220, 221], "prevent": [1, 10, 16, 113, 241, 266, 267, 268, 269, 270, 282, 294, 297, 316, 362, 370, 381, 383, 384, 385, 386, 396, 398, 431, 432, 438, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 465], "previou": [108, 449, 458, 462, 465], "previous": [442, 452, 467], "primarili": 270, "principl": 108, "print": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 300, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 388, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 434, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 461, 462, 463, 464, 467, 468, 469, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 540, 541, 542, 543, 544, 548, 550, 551, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 572, 573, 574, 575, 576, 577, 578, 579, 580, 586], "print_grad": 478, "prior": [215, 240, 462], "priorit": [125, 126, 130, 345, 357], "prob": [219, 220, 221, 254, 469], "probabilist": [216, 217, 477], "probabl": [65, 78, 98, 132, 188, 189, 205, 220, 221, 222, 231, 234, 235, 248, 249, 250, 251, 254, 257, 260, 273, 279, 282, 291, 292, 293, 294, 295, 296, 297, 303, 356, 365, 369, 370, 380, 381, 382, 383, 384, 385, 386, 396, 397, 398, 401, 428, 430, 432, 469, 545, 547, 576, 577, 579, 582], "problem": [25, 26, 28, 108, 234, 275, 336, 355, 359, 456], "proce": [232, 233], "proceed": [108, 234], "process": [2, 3, 4, 23, 26, 28, 29, 40, 55, 57, 59, 61, 65, 106, 108, 113, 132, 153, 154, 155, 183, 188, 212, 213, 217, 231, 236, 246, 251, 256, 259, 269, 283, 284, 285, 314, 337, 338, 339, 340, 344, 345, 363, 367, 372, 374, 391, 403, 404, 405, 408, 409, 410, 411, 419, 421, 422, 424, 428, 429, 431, 449, 551, 572, 573, 574, 575, 580, 582], "prod": 312, "prod_": [216, 392, 513], "produc": [16, 29, 213, 231, 236, 317, 318, 319, 320, 321, 344, 372, 373, 374, 413, 414, 415, 416, 417, 462, 471, 475, 477], "product": [11, 26, 28, 132, 133, 282, 358, 360, 364, 366, 369, 370, 391, 411, 436, 481, 482, 486, 487, 490, 513], "profil": 462, "program": [463, 477], "progress": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586], "proj_drop_r": 92, "project": [26, 28, 55, 57, 59, 61, 69, 92, 113, 132, 133, 138, 139, 140, 141, 143, 144, 145, 188, 189, 219, 235, 260, 369], "projector": 25, "promin": [419, 421, 422, 423, 424], "promis": 360, "promot": [270, 398, 401, 436], "propag": [11, 16, 19, 20, 22, 25, 26, 27, 28, 108, 245, 264, 270, 300, 302, 330, 335, 344, 375, 420, 421, 457, 458, 469, 481, 482, 483, 487, 490, 519, 521, 537, 538, 539, 541, 543, 551, 552, 553, 556, 558, 563, 566, 567, 568, 583, 584], "proper": [333, 541, 563], "properli": [0, 233, 249, 250, 269, 279, 365, 436, 438], "properti": [17, 19, 22, 23, 273, 277, 291, 356, 363, 380, 451, 456, 462, 468], "proport": [5, 6, 7, 8, 535], "proportion": 580, "propos": [142, 222, 231, 234, 235, 236, 240, 248, 249], "proposal_gener": 235, "provid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 15, 16, 17, 30, 42, 51, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 93, 96, 97, 98, 105, 108, 109, 122, 128, 131, 134, 136, 137, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 188, 189, 197, 200, 205, 207, 208, 211, 212, 214, 215, 216, 218, 219, 222, 226, 231, 232, 233, 251, 254, 260, 264, 266, 267, 268, 269, 273, 282, 302, 312, 318, 319, 333, 337, 370, 388, 396, 397, 398, 399, 401, 414, 415, 416, 419, 420, 421, 422, 423, 424, 426, 428, 429, 431, 434, 436, 437, 438, 442, 443, 448, 449, 450, 457, 459, 463, 468, 475, 477, 478, 483, 491, 500, 519, 521, 534, 536, 547, 555, 560, 562, 582, 583, 584], "pseudo": [22, 25], "purpos": [42, 47, 51, 226, 251, 472, 476, 491, 499, 501], "pvt": [133, 134, 135, 136, 137, 138], "pvt_huge": 108, "pvt_larg": 108, "pvt_medium": 108, "pvt_small": 108, "pvt_tini": 108, "pvt_v2": [139, 140, 141, 142, 143, 144, 145], "pvt_v2_b0": 108, "pvt_v2_b1": 108, "pvt_v2_b2": [108, 142], "pvt_v2_b2_li": 108, "pvt_v2_b3": 108, "pvt_v2_b4": 108, "pvt_v2_b5": 108, "pvtv2": [108, 139, 140, 141, 142, 143, 144, 145], "pypi": 16, "pyramid": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 222, 231, 232, 233, 237, 238, 257, 258], "python": [16, 461, 467, 468, 478, 496], "pytorch": [16, 536], "q": [26, 55, 108, 113, 133, 282, 369, 370, 432], "q_1": 55, "q_i": [31, 369], "qk": [31, 55, 113, 430, 432], "qk_scale": [55, 132, 133, 188, 189], "qkv_bia": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 132, 133, 139, 140, 141, 143, 144, 145, 188, 189], "qr": 21, "quad": [25, 55, 215, 216, 241, 251, 254, 257, 333, 369, 375, 396, 397, 398, 399, 400, 401, 422, 423, 424, 429, 431, 479, 480, 484, 485, 486, 489, 564, 565, 573], "quadrat": [133, 142, 399], "qualifi": 445, "qualiti": 216, "quanfu": 108, "quantiz": 239, "queri": [55, 69, 132, 133, 139, 140, 141, 143, 144, 145, 188, 189, 219, 220, 221, 282, 369, 370, 432], "quick": [462, 584], "quickli": 438, "quicksort": [539, 558], "quoc": [108, 234], "quotient": 480, "r": [14, 15, 26, 31, 108, 232, 233, 240, 251, 330, 331, 369, 375, 376, 513, 514, 559, 576, 577, 578, 579], "r101": [220, 234], "r50": [221, 234], "r_t": 456, "radam": 460, "radix": [146, 147, 148, 149, 150, 151, 152, 153, 154, 539], "rais": [0, 1, 2, 11, 251, 264, 312, 336, 436, 437, 467, 488, 540], "rameswar": 108, "rand": [216, 223, 224, 225, 226, 227, 228, 229, 230, 248, 249, 250, 252, 253, 254, 255, 256, 257, 258, 470, 477, 583], "randint": [470, 477], "randn": [13, 15, 16, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 66, 67, 68, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 100, 101, 102, 103, 104, 113, 114, 115, 116, 117, 118, 123, 124, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 167, 168, 169, 170, 171, 172, 179, 180, 181, 182, 184, 185, 186, 187, 200, 211, 213, 215, 219, 220, 221, 231, 232, 233, 235, 236, 237, 238, 239, 240, 282, 312, 341, 342, 343, 344, 345, 369, 370, 375, 376, 377, 388, 407, 428, 429, 430, 431, 432, 436, 470, 475, 477, 583, 586], "random": [1, 2, 3, 13, 15, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 66, 67, 68, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 100, 101, 102, 103, 104, 123, 124, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 167, 168, 169, 170, 171, 172, 179, 180, 181, 182, 184, 185, 186, 187, 211, 219, 220, 221, 231, 232, 233, 235, 236, 237, 238, 239, 240, 254, 257, 282, 341, 342, 343, 344, 345, 369, 382, 388, 407, 426, 428, 429, 430, 431, 432, 575, 576, 577, 578, 579, 582, 583], "random_integ": 477, "random_tensor": 477, "randomcrop": [581, 582], "randomgrayscal": [581, 582], "randomhorizontalflip": [581, 582], "randomli": [1, 291, 293, 294, 295, 296, 297, 337, 380, 383, 384, 385, 386, 471, 575, 576, 577, 578, 579, 582], "randomnoisedataset": [0, 1, 2], "randomrot": [581, 582], "randomverticalflip": 581, "rang": [0, 1, 16, 17, 31, 44, 53, 92, 94, 108, 113, 131, 135, 155, 163, 198, 222, 233, 259, 269, 278, 280, 283, 284, 293, 305, 309, 330, 331, 354, 362, 364, 367, 382, 392, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 457, 459, 469, 471, 473, 498, 505, 506, 509, 545, 546, 547, 574, 578, 582], "rank": 25, "rasul": 7, "rate": [40, 41, 55, 78, 79, 92, 100, 113, 132, 133, 188, 189, 232, 233, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "rather": [7, 13, 15, 254, 268, 269, 388, 397, 444, 453, 556], "ratio": [55, 65, 66, 68, 78, 92, 100, 113, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 173, 188, 189, 231, 254, 344, 345, 580], "ravel": 549, "raw": [219, 220, 221, 251, 254, 279, 304, 365, 397, 398, 467, 468, 478], "rceil": 508, "rcnn": [234, 236], "rcond": 25, "re": [16, 265, 586], "reach": [322, 417, 444], "readabl": [10, 16, 266, 267, 268, 270, 388, 436], "readi": [3, 179, 180, 181, 182, 187, 218, 249, 250, 260, 586], "real": [25, 28, 120, 234, 248, 249, 250, 256, 364], "realist": 218, "rearrang": [12, 290, 389, 390], "reassembl": 108, "recalibr": [108, 174, 176, 177, 179, 180, 181, 182, 344], "receiv": [422, 423, 424, 553, 563, 564, 565], "recent": 457, "recept": [108, 113, 142, 183, 187, 257, 258, 345], "recip": 586, "reciproc": [25, 503, 517, 518, 527], "recogn": 55, "recognit": [108, 112, 136, 153, 154, 188, 190, 191, 192, 193, 199, 234, 373], "recommend": [16, 118, 397], "recon": 215, "recon_loss": 215, "reconstruct": [215, 216, 217, 241, 288, 558], "reconstruction_loss": 215, "recov": 217, "rectangular": 495, "rectif": 456, "rectifi": [275, 276, 359, 361, 456], "recurr": [259, 267, 411], "recurs": 264, "red": [576, 583], "redmon": [234, 248, 249], "reduc": [12, 29, 31, 65, 66, 67, 69, 92, 108, 119, 133, 142, 155, 166, 183, 200, 213, 222, 233, 250, 253, 256, 257, 321, 341, 342, 343, 344, 403, 404, 405, 408, 409, 410, 419, 420, 421, 422, 423, 424, 438, 441, 444, 445, 446, 455, 458, 465, 519, 520, 521, 529, 535, 537, 538, 576], "reducelronplateau": 447, "reduct": [10, 11, 14, 28, 78, 108, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 173, 303, 304, 305, 306, 308, 309, 344, 345, 396, 397, 398, 399, 400, 401, 439, 445, 446, 490, 519, 521], "redund": [65, 68, 108, 235, 236], "reevalu": 437, "ref_box": 241, "refer": [4, 57, 59, 61, 142, 238, 241, 264, 375, 477, 492, 495, 497, 513, 514, 542, 586], "refin": [108, 197, 231, 438], "reflect": [135, 330, 331, 463], "regardless": [25, 554], "region": [231, 234, 235, 236, 238, 239, 240, 249, 285, 292, 317, 318, 319, 320, 321, 335, 357, 381, 414, 415, 418, 553, 573, 582], "regist": [16, 32, 33, 34, 35, 36, 37, 38, 39, 128, 164, 165, 167, 168, 169, 170, 171, 172, 212, 263, 264, 265, 269, 436, 466, 478], "register_buff": 263, "register_hook": 478, "register_model": [30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 106, 107, 110, 111, 112, 123, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 184, 185, 186, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 212, 214, 220, 221, 232, 233, 249, 250, 261, 262], "register_paramet": 264, "registr": [16, 264, 436], "registri": [167, 168, 169, 170, 171, 172, 466], "registry_path": 466, "regress": [4, 222, 223, 231, 234, 235, 236, 241, 242, 308, 399, 400], "regul": [333, 426], "regular": [25, 29, 40, 78, 79, 98, 188, 189, 213, 257, 293, 297, 370, 381, 383, 384, 385, 386, 444, 446, 449, 450, 451, 454, 455, 456, 457, 459], "reimagin": 108, "rel": [31, 108, 188, 189, 219, 231, 241, 248, 251, 254, 257, 438, 445, 539], "relat": [468, 495, 499], "relationship": [31, 134, 136, 580], "releas": 584, "relev": [335, 449, 457, 459], "reli": [292, 467], "reliabl": [5, 6, 7, 8], "reliant": [383, 384, 385, 386], "reload": [233, 586], "relu": [16, 29, 65, 108, 173, 200, 213, 215, 231, 235, 236, 266, 267, 268, 270, 272, 274, 275, 299, 338, 339, 340, 344, 345, 349, 350, 353, 354, 355, 359, 362, 366, 368, 372, 373, 374, 375, 376, 377, 390, 391, 393, 394, 428, 430, 432], "relu1": 270, "relu2": 270, "relu3": 270, "relu6": [368, 390], "remain": [5, 6, 7, 8, 16, 53, 92, 95, 243, 263, 293, 315, 380, 382, 383, 384, 385, 386, 392, 426, 458], "rememb": 477, "remot": 586, "remov": [235, 236, 246, 466, 560, 566], "ren": 234, "render": 584, "reorder": [10, 13, 388, 530, 557], "rep": 562, "reparameter": 215, "repeat": [11, 12, 549, 551, 562], "repetit": [10, 15, 471, 555, 562], "replac": [7, 57, 59, 61, 66, 219, 231, 234, 235, 250, 259, 428, 477, 550, 576, 586], "replic": [15, 16, 378, 429, 431, 540], "repr": 461, "repres": [7, 13, 14, 15, 22, 24, 28, 55, 70, 71, 72, 109, 122, 132, 138, 147, 148, 149, 150, 151, 152, 222, 224, 241, 243, 245, 246, 251, 264, 265, 270, 300, 302, 310, 314, 315, 330, 333, 336, 372, 373, 374, 388, 391, 394, 398, 401, 411, 426, 429, 437, 446, 448, 449, 455, 456, 457, 458, 459, 461, 467, 469, 479, 480, 486, 489, 492, 520, 533, 534, 535, 546, 547, 551, 552, 573, 575, 577, 578, 579, 580], "represent": [31, 67, 108, 116, 133, 134, 135, 136, 137, 140, 144, 145, 146, 153, 154, 164, 165, 167, 168, 169, 170, 171, 172, 179, 180, 181, 182, 183, 187, 205, 217, 237, 260, 333, 344, 420, 423, 426, 437, 584], "reproduc": [469, 471, 472, 473, 474, 475, 476, 477, 582], "requir": [2, 3, 4, 14, 16, 43, 49, 50, 65, 104, 117, 121, 127, 128, 129, 130, 131, 147, 148, 149, 150, 151, 152, 167, 168, 169, 170, 171, 172, 183, 208, 210, 216, 219, 242, 249, 250, 262, 263, 266, 270, 272, 273, 275, 276, 277, 278, 280, 300, 302, 335, 344, 345, 354, 375, 393, 398, 401, 436, 444, 463, 465, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 495, 499, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 521, 522, 524, 525, 526, 527, 528, 530, 531, 532, 540, 542, 548, 550, 551, 553, 554, 555, 556, 560, 561, 562, 568, 569, 572, 573, 580, 583, 586], "requires_grad": [16, 251, 254, 257, 263, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 290, 300, 302, 312, 330, 331, 333, 335, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 372, 373, 374, 375, 376, 377, 378, 380, 383, 384, 385, 386, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 408, 409, 410, 411, 419, 420, 421, 422, 423, 424, 434, 436, 468, 469, 471, 472, 473, 474, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 540, 541, 542, 543, 548, 550, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570, 572, 583], "rescal": [303, 304, 305, 309, 396, 397, 398, 401], "research": [16, 436], "resembl": 218, "reset": [265, 439, 475, 478], "reshap": [10, 13, 173, 302, 373, 374, 388, 392, 434, 464, 490, 530, 549, 554], "resid": [478, 586], "residu": [65, 66, 67, 68, 92, 99, 105, 106, 107, 108, 113, 120, 121, 124, 133, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 174, 175, 176, 177, 178, 254, 430, 432], "residualblock": 155, "resili": 458, "resiz": [219, 236, 238, 335, 571, 581, 582], "resnest": [147, 148, 149, 150, 151, 152, 153, 154], "resnest_101": 108, "resnest_14": 108, "resnest_200": 108, "resnest_26": 108, "resnest_269": 108, "resnest_50": 108, "resnest_50_1s4x24d": 108, "resnest_50_4s2x40d": 108, "resnet": [57, 59, 61, 65, 67, 105, 106, 107, 146, 147, 148, 149, 150, 151, 152, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 174, 175, 176, 177, 178, 183, 184, 185, 186, 219, 220, 221, 232, 233, 234, 344, 586], "resnet_1001": 108, "resnet_101": 108, "resnet_101_weight": 585, "resnet_152": 108, "resnet_152_weight": 585, "resnet_18": [108, 586], "resnet_18_weight": [585, 586], "resnet_200": 108, "resnet_269": 108, "resnet_34": 108, "resnet_34_weight": 585, "resnet_50": [108, 233, 586], "resnet_50_weight": [585, 586], "resnet_arg": 183, "resnetbottleneck": 65, "resnext": [65, 68, 167, 168, 169, 170, 171, 172, 179, 180, 181, 182, 187], "resnext_101_32x16d": 108, "resnext_101_32x32d": 108, "resnext_101_32x4d": 108, "resnext_101_32x8d": 108, "resnext_101_32x8d_weight": 585, "resnext_101_64x4d": 108, "resnext_101_64x4d_weight": 585, "resnext_50_32x4d": 108, "resnext_50_32x4d_weight": 585, "resolut": [31, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 100, 108, 113, 114, 115, 118, 133, 134, 142, 179, 180, 181, 182, 187, 189, 222, 224, 225, 227, 228, 229, 230, 236, 237, 238, 252, 253, 255, 257, 286, 287, 478, 586], "resolv": [13, 14, 15, 388, 461, 586], "resourc": [16, 45, 46, 48, 49, 52, 53, 101, 108, 121, 125, 126, 127, 128, 129, 130, 131, 208, 250, 256], "respect": [13, 16, 18, 19, 20, 22, 23, 24, 25, 26, 28, 109, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 222, 242, 263, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 300, 302, 330, 335, 345, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 372, 373, 374, 375, 378, 380, 383, 384, 385, 386, 388, 391, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 408, 409, 410, 411, 419, 420, 421, 422, 423, 424, 440, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 509, 515, 517, 518, 519, 520, 521, 525, 527, 529, 533, 534, 535, 551, 553, 555, 562, 576], "respons": [108, 179, 180, 181, 182, 251, 254, 257, 266, 311, 406, 448], "rest": [564, 565], "restor": [344, 442, 462, 465], "restructur": 556, "result": [10, 11, 13, 15, 18, 22, 23, 25, 65, 108, 264, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 283, 284, 285, 286, 290, 300, 302, 317, 318, 319, 322, 323, 324, 325, 327, 328, 329, 330, 331, 335, 337, 345, 357, 362, 365, 369, 382, 388, 436, 437, 463, 469, 471, 472, 473, 474, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 498, 499, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 515, 517, 518, 519, 521, 522, 524, 525, 526, 527, 528, 530, 531, 532, 533, 536, 542, 545, 547, 548, 551, 553, 554, 555, 556, 558, 559, 560, 561, 562, 563, 567, 568, 569, 572, 575, 576, 582], "resum": [439, 440, 441, 442, 443, 444, 445, 446, 448], "retain": [92, 108, 133, 250, 265, 292, 381, 478, 491, 496, 497, 501, 519, 520, 521, 529, 535, 537, 538, 541, 550, 564, 565, 572], "retent": 572, "rethink": 108, "retinanet": 222, "retriev": [0, 2, 266, 268, 269, 333, 563], "return": [0, 1, 2, 3, 5, 6, 7, 8, 16, 32, 33, 34, 35, 36, 37, 38, 39, 105, 109, 117, 118, 129, 131, 173, 231, 235, 236, 251, 254, 257, 263, 264, 266, 267, 268, 269, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 372, 373, 374, 375, 376, 377, 380, 382, 383, 384, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 408, 411, 419, 420, 421, 422, 423, 424, 429, 431, 436, 437, 442, 443, 445, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 466, 571, 582, 586], "return_invers": 567, "reus": [108, 232, 235, 257, 572], "reusabl": [270, 382, 436, 571], "rev": [375, 376], "revers": [16, 217, 270, 478, 534, 558, 577, 579], "revolution": 108, "rfloor": [378, 446, 516], "rgb": [5, 6, 31, 65, 69, 97, 98, 99, 106, 107, 117, 118, 132, 188, 189, 222, 236, 248], "rho": 450, "rho_": 456, "rho_t": 456, "rich": [16, 144, 234, 237], "richer": 134, "right": [23, 24, 25, 27, 28, 31, 55, 113, 216, 238, 242, 248, 254, 257, 273, 279, 316, 356, 365, 369, 378, 396, 397, 398, 399, 401, 403, 404, 405, 408, 409, 410, 411, 422, 423, 424, 430, 432, 530, 539, 543, 573, 583], "rightarrow": [13, 369, 388, 559], "rmsprop": 460, "rob": 108, "robust": [42, 47, 102, 129, 198, 199, 292, 337, 380, 383, 384, 385, 386, 399, 436, 450, 575, 576, 578, 582], "roi": [231, 234, 235, 238, 239], "roi_align": 239, "roi_cls_loss": 231, "roi_reg_loss": 231, "roialign": [235, 244], "roipool": 235, "roland": 7, "role": [477, 582], "roll": 549, "root": [4, 5, 6, 7, 8, 451, 457, 527, 583], "ross": [234, 236], "rotat": [299, 334, 578, 582], "rotated_imag": 337, "round": [503, 508, 516], "rout": [68, 422, 423, 424, 563], "route_lay": 251, "row": [19, 20, 22, 27, 222, 239, 245, 302, 333, 495, 551, 552, 558, 564, 565, 569], "rpn": [231, 234], "rpn_cls_loss": 231, "rpn_reg_loss": 231, "rprop": 460, "rule": [15, 16, 22, 23, 377, 388, 464, 479, 480, 484, 485, 486, 488, 489, 496], "run": [16, 263, 310, 314, 338, 339, 340, 403, 404, 405, 408, 409, 410, 450, 462, 475, 477], "running_mean": [263, 310, 314, 403, 404, 405, 408, 409, 410], "running_var": [310, 314, 403, 404, 405, 408, 409, 410], "runtim": [11, 79, 267, 270, 382, 436, 498], "ruom": 234, "s_": 458, "s_0": 238, "s_1": [490, 559], "s_2": 559, "s_d": [421, 424], "s_h": [378, 420, 421, 424], "s_i": 559, "s_k": 490, "s_n": 559, "s_w": [378, 420, 421, 424], "sacrif": [108, 250], "safe": [462, 465], "safeguard": 316, "safetensor": 468, "sain": 108, "same": [19, 20, 22, 23, 27, 141, 215, 219, 237, 242, 249, 250, 256, 279, 291, 292, 293, 294, 295, 296, 297, 310, 311, 312, 314, 315, 316, 318, 319, 337, 338, 339, 340, 341, 342, 343, 345, 362, 372, 373, 374, 375, 376, 377, 380, 383, 384, 385, 386, 393, 397, 403, 404, 405, 408, 409, 410, 411, 413, 414, 415, 419, 420, 421, 422, 423, 424, 458, 461, 469, 475, 477, 483, 494, 497, 500, 502, 508, 513, 514, 515, 516, 519, 520, 521, 523, 530, 539, 542, 548, 550, 554, 556, 558, 560, 561, 564, 565, 567, 569, 574], "sampl": [0, 1, 2, 3, 5, 6, 7, 8, 88, 89, 90, 91, 97, 98, 99, 106, 107, 109, 110, 111, 112, 123, 124, 146, 147, 148, 149, 150, 151, 152, 153, 154, 179, 180, 181, 182, 187, 215, 216, 217, 222, 238, 239, 317, 318, 319, 330, 331, 349, 350, 351, 352, 353, 354, 380, 383, 384, 385, 386, 391, 394, 398, 401, 411, 413, 414, 415, 469, 474, 477, 498, 547, 573, 575, 577, 578, 579, 580], "sample_timestep": 216, "sampling_ratio": [238, 239], "sandbox": 16, "sandler": 108, "satisfi": [18, 20, 27, 559], "satur": [355, 582], "save": [2, 222, 232, 233, 263, 265, 437, 442, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 465, 466, 467, 586], "scalabl": [3, 47, 78, 108, 167, 168, 169, 170, 171, 172, 189, 211, 222, 234, 436], "scalar": [16, 19, 24, 248, 303, 304, 305, 306, 308, 309, 397, 469, 478, 496, 497, 550], "scale": [14, 20, 25, 31, 40, 46, 48, 49, 50, 52, 54, 55, 57, 59, 61, 65, 70, 71, 72, 73, 78, 79, 92, 100, 106, 108, 110, 111, 112, 113, 114, 115, 118, 119, 123, 127, 128, 130, 131, 132, 133, 134, 138, 142, 145, 146, 153, 154, 156, 157, 158, 161, 174, 175, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 206, 207, 208, 209, 215, 222, 225, 228, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 242, 251, 255, 256, 258, 272, 277, 279, 282, 293, 310, 311, 312, 314, 315, 333, 344, 345, 353, 354, 355, 357, 359, 363, 364, 365, 367, 369, 370, 380, 382, 383, 384, 385, 386, 398, 403, 404, 405, 406, 407, 408, 409, 410, 411, 426, 434, 440, 443, 449, 451, 452, 453, 477, 535, 580], "scale_by_keep": [293, 382], "scale_factor": 434, "scale_fn": 440, "scaled_dot_product_attent": [281, 299], "scaleddotproductattent": [371, 390], "scenario": [45, 50, 52, 128, 129, 130, 131, 142, 268, 269, 411, 439, 440, 446, 453, 454, 572, 576], "schedul": [215, 216, 381, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449], "scientif": 464, "score": [155, 166, 183, 219, 220, 221, 231, 235, 236, 246, 248, 251, 252, 253, 254, 255, 257, 279, 282, 370, 397, 398, 490], "score_thresh": 236, "scratch": [16, 233], "script": 477, "sd": 586, "se": [78, 108, 174, 175, 176, 177, 178, 179, 180, 181, 182], "se_resnet_101": 108, "se_resnet_152": 108, "se_resnet_18": 108, "se_resnet_34": 108, "se_resnet_50": 108, "se_resnext_101_32x4d": 108, "se_resnext_101_32x8d": 108, "se_resnext_101_64x4d": 108, "se_resnext_50_32x4d": 108, "se_scal": 78, "seamless": [0, 1, 3, 4, 14, 388, 436, 477], "seamlessli": [3, 4, 10, 13, 15, 17, 265, 267, 270, 436, 582], "search": [108, 234, 236], "second": [20, 133, 144, 215, 220, 221, 267, 268, 300, 344, 391, 392, 452, 453, 454, 455, 456, 464, 479, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 530, 543, 548, 551, 563, 579], "section": 483, "see": [16, 483], "seed": [469, 470, 471, 472, 473, 474, 476, 477, 582], "seek": [16, 131], "seen": 450, "segment": [108, 145, 194, 195, 196, 197, 198, 199, 234, 240, 287, 288, 376, 377], "select": [14, 15, 108, 183, 184, 185, 186, 187, 231, 234, 236, 238, 335, 344, 345, 422, 424, 440, 529, 539, 543, 563, 570], "selectivekernel": 346, "selectivesearch": 244, "self": [0, 1, 2, 3, 16, 29, 31, 55, 65, 69, 70, 71, 72, 78, 79, 92, 96, 100, 105, 108, 109, 119, 120, 121, 122, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 146, 173, 188, 189, 200, 205, 213, 216, 219, 231, 235, 236, 239, 257, 259, 260, 263, 264, 265, 266, 267, 268, 269, 277, 293, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 384, 388, 391, 392, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 408, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 430, 432, 436, 437, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 465, 466, 478, 550, 557, 571, 572], "selfattent": 432, "selu": [274, 291, 299, 368, 380, 390], "selunetwork": 363, "semant": [55, 66, 143, 234, 237, 376], "semodul": 346, "send": 65, "senet": [174, 175, 176, 177, 178, 179, 180, 181, 182], "sens": 218, "sensit": [216, 306, 399, 403, 404, 405], "sent": 67, "sentenc": 218, "sentiment": [4, 218], "separ": [0, 55, 92, 108, 119, 153, 154, 211, 222, 232, 257, 283, 284, 285, 287, 341, 342, 343, 408, 409, 410], "seq_len": [282, 369, 370, 428, 429, 430, 431, 432], "sequenc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586], "sequenti": [29, 105, 109, 173, 200, 211, 213, 215, 222, 231, 235, 236, 259, 266, 267, 271, 283, 338, 339, 340, 388, 393, 429, 431, 571, 582], "seri": [96, 110, 111, 113, 141, 143, 183, 283, 338, 372, 419, 422], "serial": [233, 263, 264, 448, 468], "serv": [3, 7, 16, 73, 105, 173, 200, 260, 264, 266, 267, 268, 269, 270, 436, 458, 478, 572], "set": [3, 4, 5, 6, 7, 8, 16, 31, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 93, 94, 95, 127, 128, 129, 134, 153, 154, 164, 165, 179, 180, 181, 182, 187, 215, 219, 220, 221, 231, 232, 234, 235, 241, 242, 245, 249, 250, 251, 252, 253, 254, 256, 265, 269, 282, 283, 284, 285, 287, 333, 336, 359, 361, 363, 370, 372, 373, 374, 380, 385, 386, 391, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 408, 409, 410, 426, 437, 452, 453, 457, 469, 472, 473, 474, 475, 476, 477, 491, 493, 494, 496, 497, 501, 502, 519, 521, 536, 537, 538, 539, 550, 564, 565, 567, 572, 576, 582, 586], "setup": [4, 116, 117, 167, 168, 169, 170, 171, 172, 233], "sever": [25, 217, 372, 373, 374, 419, 420, 421, 422, 423, 424, 571, 582], "sgd": [16, 233, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 456, 460], "sgn": 24, "shallow": 65, "shaoq": 234, "shape": [3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 19, 20, 22, 23, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 66, 67, 68, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 92, 100, 101, 102, 103, 104, 105, 108, 109, 113, 114, 115, 116, 117, 118, 121, 125, 126, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 167, 168, 169, 170, 171, 172, 173, 179, 180, 181, 182, 184, 185, 186, 187, 200, 211, 213, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 258, 259, 263, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 300, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 344, 345, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 383, 384, 385, 386, 388, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 436, 440, 464, 469, 471, 472, 473, 474, 476, 477, 478, 481, 490, 493, 494, 495, 496, 497, 499, 500, 501, 502, 508, 509, 513, 514, 516, 517, 518, 519, 520, 521, 523, 525, 527, 529, 530, 534, 535, 537, 538, 539, 540, 542, 544, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 560, 561, 562, 564, 565, 567, 569, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 586], "shapelik": 473, "share": [55, 108, 223, 234, 235, 236], "sharp": 440, "shen": 344, "shift": [108, 113, 188, 189, 190, 191, 192, 193, 194, 197, 198, 236, 310, 311, 314, 315, 357, 403, 404, 405, 406, 407, 408, 409, 410, 411, 557], "short": 219, "shortcut": 65, "shorthand": 483, "should": [13, 14, 15, 16, 92, 109, 215, 222, 231, 232, 233, 248, 251, 254, 257, 263, 330, 388, 428, 429, 430, 431, 432, 444, 469, 471, 472, 473, 474, 476, 478, 493, 494, 505, 506, 533, 540, 553, 571, 586], "show": [331, 463, 466, 583, 584], "shown": [55, 366, 475], "shrink": 450, "shuffl": [1, 2, 3, 471], "side": [27, 219, 248, 267, 270, 283, 284, 285, 286, 287, 323, 324, 325, 327, 328, 329, 338, 339, 340, 372, 373, 374, 375, 376, 377, 378, 419, 420, 421, 422, 423, 424], "sigma": [25, 31, 215, 251, 254, 257, 344, 349, 351, 353, 360, 364, 366, 397, 403, 404, 405, 408, 409, 410, 411, 534], "sigma_c": 574, "sigma_g": [312, 407], "sigma_i": 25, "sigma_t": 216, "sigmoid": [251, 254, 257, 274, 299, 304, 344, 349, 350, 353, 354, 357, 358, 360, 366, 368, 390, 396, 397], "sigmoidnetwork": 364, "sign": [23, 399, 458, 503], "signal": [338, 372, 373, 374, 403, 408, 419, 420, 421, 422, 423, 424], "signific": 43, "significantli": [66, 67, 108, 118, 120, 142, 143, 144, 145, 166, 196, 253, 344, 571], "silicon": [16, 118, 461], "sim": [215, 216, 380, 383, 384, 385, 386], "similar": [10, 57, 59, 61, 218, 236, 253, 256, 349, 350, 483, 496, 530, 536, 540, 553, 566], "similarli": [28, 215, 533], "simonyan": 108, "simpl": [3, 4, 16, 216, 236, 270, 283, 284, 285, 286, 300, 302, 323, 324, 325, 327, 328, 329, 356, 357, 358, 360, 361, 362, 363, 364, 366, 367, 372, 373, 374, 380, 383, 384, 385, 386, 391, 394, 396, 398, 399, 400, 401, 403, 404, 405, 408, 409, 410, 411, 419, 420, 421, 422, 423, 424, 436, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 463, 464, 481, 482, 487, 571], "simplebackbon": 231, "simplebinaryclassifi": 397, "simplebinaryclassificationmodel": 396, "simpleblock": 293, "simpleclassificationmodel": [398, 401], "simplegelumodel": 356, "simplehardsigmoidmodel": 357, "simplehardswishmodel": 358, "simpleleakyrelumodel": 359, "simplemishmodel": 360, "simplemodel": [362, 382, 394, 466], "simpleregressionmodel": 400, "simplerelumodel": 361, "simpleselumodel": 363, "simplesigmoidmodel": 364, "simpleswishmodel": 366, "simpletanhmodel": 367, "simpli": [16, 463, 533, 534, 556], "simplic": [108, 357, 361], "simplifi": [4, 13, 15, 88, 89, 90, 91, 92, 108, 110, 212, 250, 270, 338, 339, 340, 388, 397], "simul": 582, "simultan": [55, 337], "sin": [503, 510], "sinc": [23, 26, 266, 267, 268, 269, 283, 284, 285, 354, 463, 469, 474, 530, 551, 570, 582], "sine": [219, 506, 525, 526], "singl": [0, 4, 23, 26, 28, 57, 59, 61, 155, 219, 234, 235, 249, 250, 279, 338, 339, 340, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 372, 373, 374, 378, 392, 397, 398, 411, 420, 421, 422, 423, 424, 429, 430, 431, 432, 437, 462, 472, 476, 493, 498, 542, 560, 574, 576, 582], "singleton": [15, 411], "singular": [19, 22, 23, 25, 27, 28], "sinh": [503, 511, 532], "size": [0, 1, 2, 3, 10, 13, 14, 15, 28, 31, 55, 56, 63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 92, 100, 103, 108, 109, 110, 111, 112, 113, 122, 123, 125, 126, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 155, 183, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 205, 206, 207, 208, 209, 210, 213, 216, 219, 222, 228, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 260, 261, 262, 265, 267, 282, 283, 284, 285, 286, 287, 288, 290, 292, 295, 296, 297, 303, 304, 305, 306, 308, 309, 310, 311, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 369, 372, 373, 374, 375, 376, 377, 378, 381, 388, 391, 394, 396, 398, 401, 403, 404, 405, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 431, 432, 434, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 466, 473, 476, 477, 478, 519, 520, 521, 529, 535, 537, 538, 540, 541, 542, 548, 559, 560, 568, 569, 573, 575, 580, 582, 585], "size_or_sect": 559, "sk": [108, 183, 184, 185, 186, 187, 345], "sk_resnet_18": 108, "sk_resnet_34": 108, "sk_resnet_50": 108, "sk_resnext_50_32x4d": 108, "skblock": 183, "skip": [108, 465], "sknet": [184, 185, 186, 187], "slice": [300, 478, 533, 539, 566, 567], "slide": [290, 378, 419, 421, 422, 424], "slight": 344, "slightli": [582, 586], "slope": [275, 355, 359], "slow": [3, 456], "small": [25, 44, 46, 48, 51, 63, 88, 89, 90, 91, 102, 103, 108, 110, 111, 112, 117, 121, 125, 126, 129, 137, 192, 193, 198, 199, 209, 210, 228, 240, 254, 255, 257, 275, 292, 303, 305, 310, 311, 312, 314, 315, 316, 359, 363, 381, 396, 398, 399, 403, 404, 405, 406, 407, 408, 409, 410, 411, 420, 423, 428, 430, 432, 438, 450, 451, 452, 453, 454, 455, 456, 457, 458], "smallbackbon": 236, "smaller": [10, 45, 55, 57, 59, 61, 64, 72, 88, 89, 90, 91, 108, 127, 213, 236, 250, 267, 270, 436, 451, 452, 485, 539, 541, 573, 575, 580], "smallest": [223, 508, 521, 563], "smooth": [98, 217, 222, 237, 257, 258, 273, 355, 356, 360, 366, 441, 449, 457, 582], "smoother": [441, 449], "so": [219, 266, 267, 268, 269, 337, 436, 456, 462, 465, 493, 494, 508, 516, 523, 571, 586], "softmax": [31, 55, 113, 219, 220, 221, 274, 282, 299, 345, 368, 369, 370, 390, 398, 430, 432], "softmaxmodel": 365, "softplu": 360, "solut": [25, 27], "solv": [17, 18, 21, 25, 26, 28], "solver": 17, "some": [250, 272, 293, 294, 337, 380, 382, 383, 384, 403, 404, 405, 408, 409, 410, 451, 452, 453, 541], "sometim": 464, "sophist": [267, 270], "sort": [16, 549, 563, 567], "sourc": [242, 260, 261, 262, 282, 428, 477], "sp": 360, "space": [20, 26, 28, 57, 59, 61, 113, 189, 215, 217, 260, 283, 284, 285, 286, 287, 288, 290, 317, 318, 319, 338, 339, 340, 341, 342, 343, 372, 373, 374, 375, 376, 377, 378, 413, 414, 415, 491, 498, 582], "span": 4, "spars": [451, 452], "spatial": [29, 31, 108, 113, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 155, 166, 183, 194, 200, 213, 216, 231, 233, 235, 237, 238, 239, 243, 257, 258, 288, 292, 311, 321, 322, 330, 331, 339, 344, 373, 374, 375, 378, 392, 403, 404, 405, 408, 409, 410, 411, 417, 418, 420, 421, 422, 423, 424, 434, 508, 551], "spatial_dim": 344, "spatial_scal": [238, 239], "spatio": 374, "spec": 69, "special": [0, 1, 25, 263, 264, 265, 380, 477], "specif": [4, 11, 69, 74, 75, 76, 77, 88, 89, 90, 91, 105, 119, 127, 128, 129, 130, 131, 153, 154, 164, 165, 254, 266, 267, 268, 269, 270, 345, 354, 380, 383, 384, 385, 386, 408, 409, 410, 426, 436, 437, 444, 463, 477, 493, 519, 521, 550, 555, 562, 586], "specifi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 24, 30, 70, 71, 72, 73, 79, 109, 122, 123, 124, 127, 128, 129, 130, 132, 134, 135, 136, 137, 138, 146, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 183, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 212, 214, 267, 279, 290, 297, 303, 304, 305, 306, 308, 309, 315, 316, 317, 318, 319, 320, 321, 331, 333, 335, 336, 337, 344, 365, 369, 372, 373, 374, 375, 378, 388, 396, 397, 398, 399, 400, 401, 411, 413, 414, 415, 416, 418, 420, 421, 422, 423, 424, 426, 434, 437, 440, 444, 461, 471, 472, 473, 474, 475, 476, 478, 488, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 501, 502, 509, 513, 514, 519, 520, 521, 523, 529, 530, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 546, 548, 550, 553, 555, 556, 557, 558, 559, 560, 561, 562, 564, 565, 566, 567, 568, 569, 571, 572, 573, 574, 575, 578, 580, 582, 583], "speech": [218, 408], "speed": [108, 125, 126, 233, 234, 249, 250, 257, 357, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 465], "split": [4, 65, 67, 68, 108, 146, 153, 154, 215, 287, 369, 541, 542, 548, 549, 566, 569], "split_ratio": [65, 66, 67, 68], "split_siz": [248, 249, 250, 251], "split_tensor": 559, "spp": [257, 258], "springer": 108, "sqrt": [31, 55, 113, 216, 238, 248, 273, 282, 311, 312, 349, 350, 353, 354, 356, 369, 370, 403, 404, 405, 406, 407, 408, 409, 410, 411, 430, 432, 450, 451, 452, 453, 455, 456, 457, 503, 505, 506], "squar": [1, 3, 18, 19, 20, 22, 23, 25, 26, 27, 28, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 205, 206, 207, 208, 209, 210, 215, 216, 292, 306, 308, 381, 399, 400, 450, 451, 452, 457, 503, 527], "squaredataset": [0, 1, 2, 3], "squeez": [78, 108, 121, 125, 126, 173, 176, 179, 180, 181, 182, 344, 549, 566], "sr_ratio": [132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145], "sra": 108, "src": [242, 259, 428, 431, 432], "src_key_pad": 431, "src_key_padding_mask": [428, 432], "src_mask": [428, 431, 432], "src_vocab_s": [260, 261, 262], "ss": 240, "st_dict": 222, "stabil": [22, 25, 31, 65, 108, 113, 222, 233, 241, 251, 292, 303, 305, 310, 311, 312, 314, 315, 316, 333, 338, 339, 340, 362, 381, 396, 398, 403, 404, 405, 406, 407, 408, 409, 410, 411, 426, 428, 430, 432, 438, 449, 450, 451, 452, 453, 454, 455, 456, 457, 574], "stabl": [92, 198, 304, 349, 350, 353, 354, 380, 397, 398, 449, 453, 454, 457, 458, 459, 558], "stack": [15, 68, 270, 345, 375, 428, 429, 431, 546, 548, 549, 569, 582], "stage": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586], "stage1": 173, "stage2": 173, "stage3": 173, "stage4": 173, "stage_def": 65, "stall": 445, "stand": 142, "standalon": 362, "standard": [16, 42, 47, 57, 59, 61, 66, 67, 92, 102, 127, 130, 155, 164, 165, 215, 219, 232, 233, 260, 261, 273, 275, 341, 342, 343, 349, 351, 353, 355, 356, 359, 375, 380, 428, 458, 462, 474, 477, 483, 571, 574, 582], "star": [375, 376, 377], "start": [1, 3, 10, 215, 392, 438, 449, 451, 458, 478, 491, 498, 513, 514, 573, 575, 583], "start_axi": [392, 544], "start_id": 583, "state": [49, 108, 207, 222, 263, 264, 265, 267, 270, 437, 442, 462, 463, 465, 467, 475, 586], "state_dict": [222, 232, 233, 264, 265, 437, 442, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 467, 468, 586], "statement": [462, 465], "static": 270, "statist": [25, 291, 310, 314], "std": [5, 6, 7, 8, 235, 351, 571, 574, 582], "stem": [65, 66, 67, 68, 105, 108, 113, 146, 155, 166, 183], "stem_channel": [65, 66, 67, 68], "stem_typ": 155, "stem_width": [146, 147, 148, 149, 150, 151, 152, 155], "step": [10, 16, 31, 215, 216, 246, 265, 290, 345, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 465, 491, 571, 572, 586], "step_siz": [438, 440, 442, 446, 458], "step_size_down": 440, "step_size_up": 440, "steplr": [438, 442, 447], "still": [52, 450, 586], "stn": 331, "stochast": [40, 41, 55, 78, 79, 92, 100, 113, 132, 188, 189, 293, 382, 449, 459], "stochastic_depth": 78, "stop": [445, 491, 498], "storag": [266, 268], "store": [2, 4, 5, 6, 7, 8, 16, 155, 166, 183, 263, 264, 265, 266, 267, 268, 269, 344, 413, 414, 415, 416, 417, 418, 465, 468, 573, 574, 575, 576, 577, 578, 579, 580], "str": [5, 6, 7, 8, 10, 11, 13, 14, 15, 31, 122, 155, 200, 219, 264, 266, 268, 270, 303, 304, 305, 306, 308, 309, 331, 335, 388, 434, 437, 440, 442, 445, 466, 467, 468, 478, 551, 583], "straight": 539, "straightforward": [459, 463, 479], "strategi": [31, 108, 130, 197, 233, 250, 331, 438, 442, 448], "stream": 235, "streamlin": [2, 3, 92, 108], "strength": [31, 92, 108, 381], "strengthen": 257, "strict": [264, 437, 586], "strictli": 586, "stride": [57, 59, 61, 79, 109, 110, 111, 112, 121, 122, 125, 126, 219, 231, 235, 236, 254, 255, 257, 258, 267, 270, 283, 284, 285, 286, 287, 288, 290, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 338, 339, 340, 341, 342, 343, 345, 372, 373, 374, 375, 376, 377, 378, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 583], "stride_height": 290, "stride_width": 290, "strike": [47, 122, 129], "string": [10, 11, 13, 14, 15, 264, 266, 268, 270, 372, 373, 374, 388, 437, 461], "strong": [31, 68, 108, 136, 139, 142, 206, 234, 250], "stronger": [116, 137, 141, 197, 234, 251], "structur": [0, 10, 14, 26, 31, 65, 66, 68, 79, 108, 121, 189, 211, 218, 231, 251, 263, 264, 267, 292, 381, 388, 436, 437, 466, 478, 495, 572, 584], "student": 16, "studi": 16, "style": [10, 16, 65, 67, 105, 220, 221, 233, 254, 255, 258, 314, 408, 409, 478, 551], "sub": [266, 267, 268, 269, 270, 436, 503, 541, 559, 566, 573, 575], "subclass": [1, 2, 3, 16, 264, 265, 266, 436, 437, 442], "sublay": [428, 430, 432], "submodul": [264, 436], "subscript": 11, "subsequ": [267, 270, 354, 477], "subset": [153, 154, 254, 288, 383, 384], "subspac": 369, "substack": 513, "substanti": 208, "subtract": [489, 574], "subvolum": 322, "suffer": 451, "suffix": [142, 467, 468], "suit": [52, 74, 75, 76, 77, 98, 119, 127, 128, 130, 142, 143, 145, 183, 199, 206, 349, 350, 353, 354, 438], "suitabl": [42, 44, 45, 48, 50, 65, 80, 81, 82, 83, 84, 85, 86, 87, 94, 105, 108, 110, 111, 112, 114, 115, 117, 118, 120, 125, 126, 128, 131, 134, 139, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 175, 176, 178, 190, 191, 192, 193, 209, 233, 261, 399, 451, 452, 472], "sum": [10, 11, 14, 16, 24, 219, 266, 267, 268, 269, 270, 279, 282, 303, 304, 305, 306, 308, 309, 316, 330, 331, 345, 365, 375, 376, 378, 396, 397, 398, 399, 400, 401, 407, 451, 478, 479, 482, 487, 490, 503, 513, 514, 533, 535, 540, 542, 543, 548, 551, 555, 558, 559, 562, 563, 569], "sum_": [13, 14, 23, 31, 248, 251, 254, 257, 279, 311, 312, 365, 388, 396, 397, 398, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 419, 420, 421, 444, 481, 482, 490, 513, 514, 520, 529, 533, 535, 540, 551, 555], "sum_c": [254, 257], "sum_i": [24, 487], "sum_j": [11, 487], "sum_k": 483, "summar": [32, 33, 34, 35, 36, 37, 38, 39, 78, 164, 165, 211, 218, 419, 420, 421], "summari": [164, 165, 179, 180, 181, 182, 187], "summat": [10, 11, 13, 14, 15, 23, 444], "sun": 344, "super": [16, 231, 235, 236, 263, 264, 265, 266, 267, 268, 269, 293, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 372, 373, 374, 375, 376, 377, 380, 382, 383, 384, 391, 392, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 408, 411, 419, 420, 421, 422, 423, 424, 436, 437, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 466], "superior": [54, 108, 197], "superpixel": 236, "supervis": 219, "supplementari": 130, "support": [1, 3, 4, 11, 13, 16, 17, 23, 24, 25, 26, 28, 92, 123, 132, 155, 215, 216, 219, 231, 251, 254, 257, 266, 267, 268, 269, 270, 282, 331, 335, 337, 370, 378, 426, 434, 436, 448, 455, 467, 468, 477, 478, 479, 480, 483, 484, 485, 486, 488, 489, 492, 495, 509, 517, 518, 520, 525, 527, 529, 533, 534, 535, 539, 542, 551, 556, 558, 559, 572, 582, 584], "suppos": 582, "suppress": [219, 234, 236, 240, 246, 251, 254], "sure": [215, 248, 249, 250, 436, 582], "svd": [21, 25], "swap": [13, 241, 388], "swapax": 503, "swin": [188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199], "swin_bas": 108, "swin_larg": 108, "swin_smal": 108, "swin_tini": 108, "swin_v2": 189, "swin_v2_bas": 108, "swin_v2_giant": 108, "swin_v2_hug": 108, "swin_v2_larg": 108, "swin_v2_smal": 108, "swin_v2_tini": 108, "swintransform": [190, 191, 192, 193], "swintransformer_v2": [194, 195, 196, 197, 198, 199], "swish": [125, 126, 368, 390], "symbol": [13, 14, 15, 388], "symmetr": [18, 317, 318, 319, 320, 353, 354, 367], "syntax": [1, 10, 13, 14, 15, 388, 465, 483], "synthes": 218, "system": [16, 17, 18, 25, 26, 27, 108, 129, 217, 259, 331, 463, 478, 551], "systemat": [108, 582], "szegedi": [97, 108], "t": [10, 16, 25, 31, 55, 108, 113, 216, 251, 254, 257, 330, 331, 375, 376, 428, 429, 430, 432, 439, 440, 441, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 467, 468, 478, 483, 496, 497, 513, 514, 536, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582], "t0": 449, "t1": [478, 536], "t2": [478, 536], "t_": [251, 254, 257, 429, 439], "t_0": 429, "t_cpu": 478, "t_h": [254, 257], "t_i": 429, "t_max": 439, "t_w": [254, 257], "t_x": [254, 257], "t_y": [254, 257], "tabl": [32, 33, 34, 35, 36, 37, 38, 39, 78, 426], "tabular": 4, "tag": [585, 586], "tailor": [4, 121, 129, 147, 148, 149, 150, 151, 152, 436, 582], "take": [26, 239, 417, 419, 420, 421, 422, 423, 424, 434, 443, 462, 465, 543, 571], "taken": 533, "tan": [108, 222, 234, 503], "tangent": [280, 360, 367, 507, 531, 532], "tanh": [109, 267, 270, 273, 274, 299, 349, 350, 353, 354, 356, 360, 368, 390, 503], "tanhnetwork": 367, "target": [5, 6, 7, 8, 52, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 239, 242, 248, 249, 250, 251, 254, 257, 260, 261, 262, 270, 303, 304, 305, 306, 308, 309, 317, 318, 319, 322, 330, 335, 396, 397, 398, 399, 400, 401, 413, 414, 415, 416, 417, 418, 428, 429, 430, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 497, 540, 566, 573, 575, 580], "target_tensor": [396, 398, 399, 400, 401], "target_transform": [5, 6, 7, 8], "task": [4, 17, 29, 30, 31, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 61, 65, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 97, 98, 99, 102, 105, 106, 107, 108, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 125, 126, 127, 129, 130, 131, 133, 134, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 206, 207, 208, 209, 211, 218, 222, 226, 232, 233, 251, 254, 260, 261, 262, 278, 279, 284, 286, 287, 288, 300, 303, 305, 308, 309, 344, 345, 364, 365, 372, 373, 374, 375, 376, 396, 397, 398, 399, 400, 401, 408, 409, 410, 419, 421, 422, 424, 428, 452, 464, 477, 495, 498, 582, 586], "teach": 218, "techniqu": [18, 22, 40, 79, 100, 108, 130, 194, 196, 199, 213, 293, 310, 380, 381, 383, 384, 385, 386, 408, 409, 410, 438, 448, 580, 582], "templat": 260, "tempor": [286, 372, 374, 421, 424], "temporarili": [462, 465], "ten": 523, "tensor": [2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 67, 88, 89, 90, 91, 97, 98, 99, 105, 106, 107, 109, 110, 111, 112, 121, 123, 124, 125, 126, 155, 167, 168, 169, 170, 171, 172, 173, 184, 185, 186, 200, 211, 213, 215, 216, 219, 222, 223, 224, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 248, 249, 250, 251, 254, 257, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 300, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 388, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 434, 436, 462, 463, 465, 467, 468, 469, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584], "tensor_i": 222, "tensordot": 503, "term": [13, 25, 53, 139, 140, 141, 143, 144, 145, 222, 231, 300, 338, 339, 340, 341, 342, 343, 369, 428, 430, 432, 449, 453, 455, 456, 457, 459], "test": [4, 5, 6, 7, 8, 498], "test_siz": [5, 6, 7, 8], "text": [4, 19, 23, 24, 31, 55, 113, 155, 166, 183, 184, 185, 186, 211, 215, 216, 218, 222, 237, 238, 239, 245, 248, 251, 254, 257, 266, 272, 275, 276, 277, 279, 282, 283, 284, 285, 286, 287, 288, 293, 312, 317, 318, 319, 320, 323, 324, 325, 327, 328, 329, 333, 336, 338, 339, 340, 341, 342, 343, 344, 345, 349, 350, 353, 354, 355, 357, 358, 359, 360, 361, 362, 363, 365, 366, 369, 370, 372, 373, 374, 375, 376, 377, 380, 381, 382, 383, 384, 385, 386, 396, 397, 398, 399, 400, 401, 419, 420, 421, 422, 423, 424, 426, 428, 429, 431, 440, 445, 446, 449, 451, 452, 453, 454, 455, 456, 457, 458, 459, 471, 473, 478, 479, 480, 482, 484, 485, 486, 488, 489, 490, 504, 508, 509, 516, 519, 520, 521, 523, 524, 529, 530, 535, 537, 538, 539, 540, 542, 543, 548, 550, 553, 554, 555, 556, 557, 559, 560, 562, 563, 564, 565, 566, 568, 569, 570, 573, 574, 575, 577, 578, 579], "textur": 236, "tgt": [242, 259, 428, 429, 430], "tgt_is_caus": [429, 430], "tgt_key_padding_mask": [428, 429, 430], "tgt_mask": [428, 429, 430], "tgt_vocab_s": [260, 261, 262], "th": [222, 300, 396, 397, 398, 400, 401, 408, 409, 410, 484, 485, 488], "than": [0, 1, 7, 13, 15, 224, 246, 254, 268, 269, 272, 275, 306, 336, 341, 342, 343, 355, 359, 366, 388, 397, 399, 437, 444, 453, 490, 498, 508, 516, 533, 540, 541, 553, 561, 566, 573, 575, 580], "thei": [0, 28, 55, 108, 263, 267, 269, 270, 331, 369, 551, 556, 573, 575, 582], "them": [3, 10, 16, 65, 108, 264, 269, 290, 378, 449, 464, 542, 561, 566, 571, 574, 582], "therebi": [380, 420, 421, 423, 424], "theta": [216, 330, 331, 449, 450, 578], "theta_": [449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "theta_t": [456, 457], "thi": [0, 1, 2, 3, 5, 6, 7, 8, 11, 13, 14, 15, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 59, 61, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 94, 97, 98, 99, 105, 106, 107, 108, 109, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 134, 139, 142, 155, 164, 165, 166, 167, 168, 169, 170, 171, 172, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 199, 206, 207, 208, 209, 210, 211, 215, 216, 219, 220, 221, 231, 232, 233, 235, 241, 242, 245, 246, 249, 250, 251, 252, 253, 254, 255, 256, 260, 263, 265, 267, 268, 269, 270, 276, 278, 279, 280, 283, 284, 285, 286, 287, 290, 292, 293, 300, 302, 312, 317, 320, 330, 333, 335, 336, 337, 341, 342, 343, 344, 345, 349, 350, 353, 354, 355, 356, 357, 359, 360, 361, 363, 364, 365, 366, 367, 370, 372, 373, 374, 375, 376, 378, 380, 381, 382, 383, 384, 385, 386, 388, 391, 392, 393, 394, 396, 397, 398, 399, 401, 403, 404, 405, 407, 408, 409, 410, 411, 413, 416, 419, 420, 421, 422, 423, 424, 426, 436, 438, 439, 440, 441, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 466, 467, 468, 469, 471, 473, 474, 475, 477, 478, 482, 483, 487, 491, 493, 496, 497, 499, 500, 501, 502, 508, 509, 515, 516, 517, 518, 519, 520, 521, 523, 525, 527, 529, 530, 533, 534, 535, 536, 539, 540, 541, 550, 552, 553, 555, 556, 557, 558, 564, 565, 566, 567, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584], "think": 586, "third": [143, 144, 145, 330], "those": [110, 111, 112, 238, 269, 354, 563], "thread": 462, "three": [28, 65, 112, 251, 254, 285, 288, 319, 322, 325, 329, 338, 339, 340, 374, 386, 405, 410, 415, 421, 424], "threshold": [25, 232, 233, 236, 240, 246, 251, 254, 257, 306, 399, 445], "threshold_mod": 445, "through": [0, 3, 4, 15, 20, 25, 26, 28, 29, 40, 55, 65, 66, 67, 92, 96, 105, 108, 109, 122, 156, 157, 158, 159, 160, 161, 162, 163, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 184, 185, 186, 212, 213, 216, 217, 218, 225, 235, 236, 239, 251, 254, 266, 267, 270, 292, 300, 302, 330, 331, 335, 344, 345, 355, 356, 357, 358, 359, 360, 361, 363, 364, 366, 367, 372, 373, 374, 380, 383, 384, 385, 386, 391, 393, 394, 403, 404, 405, 408, 411, 419, 420, 421, 422, 423, 424, 428, 429, 431, 432, 462, 469, 471, 474, 481, 482, 487, 537, 538, 551, 552, 554, 556, 560, 563, 564, 565, 567, 568, 582, 583, 584, 586], "throughout": [66, 92, 188, 189, 205, 260, 277, 572], "ti": [108, 210], "tier": 49, "tight": 142, "tile": [15, 549], "time": [0, 3, 16, 23, 110, 111, 112, 120, 219, 234, 248, 249, 250, 251, 252, 253, 256, 283, 312, 338, 359, 363, 369, 372, 419, 420, 421, 422, 423, 424, 429, 431, 438, 445, 449, 450, 451, 452, 453, 457, 459, 513, 555, 562], "timestep": [216, 217], "tini": [44, 45, 53, 64, 100, 104, 108, 117, 138, 234, 250, 253, 256], "tinynet": 16, "titl": 583, "to_tensor": [5, 6, 7, 8], "togeth": [270, 571, 582], "toggl": [462, 465], "token": [55, 100, 108, 133, 140, 426], "token_mix": 100, "too": [16, 438, 458], "tool": [3, 436, 438, 462, 464, 477, 571, 582, 584], "top": [18, 19, 20, 26, 28, 49, 237, 282, 300, 302, 335, 369, 370, 372, 373, 374, 391, 394, 490, 563, 573, 575, 583], "topk": 549, "topk_indic": 563, "topolog": 16, "topologi": [67, 68], "torch": [66, 67, 68, 200, 378, 536], "toronto": [5, 6], "total": [0, 1, 2, 5, 6, 7, 8, 10, 13, 15, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 212, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 248, 249, 250, 251, 252, 253, 255, 256, 258, 261, 262, 265, 336, 369, 388, 407, 462, 478, 556], "total_loss": 231, "total_op": 462, "totensor": [571, 582], "touch": 16, "toward": [219, 234], "toybackbon": [235, 236], "trace": [17, 503], "traceback": 465, "track": [16, 338, 339, 340, 403, 404, 405, 408, 409, 410, 436, 462, 463, 465, 469, 471, 472, 473, 474, 476, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 530, 536, 539, 540, 550, 552, 558, 567, 572], "track_running_stat": [338, 339, 340, 403, 404, 405, 408, 409, 410], "trade": [44, 128, 250], "tradit": [7, 10, 31, 55, 65, 69, 108, 131, 217, 259, 450, 451, 454, 455, 456], "trail": 315, "train": [1, 2, 3, 4, 5, 6, 7, 8, 31, 40, 79, 92, 96, 97, 98, 108, 113, 179, 180, 181, 182, 187, 215, 217, 222, 229, 231, 234, 245, 251, 254, 257, 259, 260, 263, 264, 267, 269, 270, 279, 291, 292, 293, 294, 295, 296, 297, 310, 314, 333, 337, 356, 359, 363, 364, 365, 367, 380, 381, 382, 383, 384, 385, 386, 397, 403, 404, 405, 408, 409, 410, 426, 436, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 465, 508, 516, 571, 574, 575, 576, 577, 578, 579, 582, 584, 586], "trainabl": [403, 404, 405, 408, 409, 410, 426, 436], "transact": [234, 344], "transfer": [314, 408, 409, 471], "transform": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 583, 584, 585, 586], "transform_pipelin": [571, 582], "transformed_imag": [571, 582], "transformer_bas": 259, "transformer_big": 259, "transformer_decod": 429, "transformer_encod": 431, "transformerdecod": [390, 428, 433], "transformerdecoderlay": [390, 428, 429, 433], "transformerencod": [390, 428, 433], "transformerencoderlay": [390, 428, 431, 433], "transit": [31, 73, 399], "translat": [218, 242, 260, 330, 420, 423, 428], "transpar": 16, "transpos": [13, 18, 286, 287, 288, 375, 376, 377, 503], "transposit": [11, 13, 388], "travers": 583, "treat": [0, 263, 411, 436, 468], "triangular": [18, 26, 429, 430, 431, 432, 440, 564, 565], "triangular2": 440, "tril": 549, "triu": 549, "true": [1, 2, 3, 4, 5, 6, 7, 8, 16, 28, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 92, 96, 97, 98, 125, 126, 139, 140, 141, 142, 143, 144, 145, 146, 188, 189, 215, 216, 219, 220, 221, 222, 231, 236, 251, 254, 257, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 282, 290, 291, 293, 294, 295, 296, 297, 300, 302, 310, 312, 314, 330, 331, 333, 335, 338, 339, 340, 341, 342, 343, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 369, 370, 372, 373, 374, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 407, 408, 409, 410, 411, 419, 420, 421, 422, 423, 424, 428, 429, 430, 431, 432, 434, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 452, 453, 457, 461, 463, 468, 469, 472, 473, 474, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 545, 546, 547, 548, 550, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 572, 583], "truli": 16, "truncat": 222, "truth": [219, 231, 248, 249, 250, 251, 257], "try": 0, "tu": [108, 113], "tune": [128, 131, 220, 221, 232, 233, 582], "tupl": [2, 3, 5, 6, 7, 8, 20, 24, 26, 28, 31, 65, 73, 113, 155, 215, 219, 220, 221, 222, 231, 235, 236, 238, 239, 240, 243, 251, 254, 255, 257, 258, 264, 265, 283, 284, 285, 286, 287, 288, 290, 315, 318, 319, 321, 322, 323, 324, 325, 327, 328, 329, 330, 335, 337, 338, 339, 340, 341, 342, 343, 372, 373, 374, 375, 376, 377, 378, 393, 411, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 434, 452, 453, 454, 455, 456, 458, 472, 473, 474, 476, 478, 490, 493, 496, 499, 501, 519, 520, 521, 529, 535, 540, 541, 542, 545, 546, 547, 548, 551, 553, 556, 557, 558, 559, 560, 561, 563, 566, 567, 568, 569, 573, 574, 575, 580], "twice": 553, "two": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586], "type": [32, 33, 34, 35, 36, 37, 38, 39, 55, 65, 69, 92, 100, 109, 113, 132, 133, 146, 155, 173, 183, 188, 189, 215, 218, 263, 264, 265, 300, 336, 391, 428, 430, 432, 461, 468, 471, 478, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 536, 551, 572], "typeddict": 231, "typeerror": [0, 1, 2, 264, 437], "typic": [16, 17, 31, 65, 70, 122, 128, 155, 166, 183, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 219, 222, 235, 237, 240, 246, 248, 254, 255, 257, 263, 279, 291, 292, 337, 344, 362, 363, 365, 381, 382, 401, 403, 404, 405, 408, 409, 410, 448, 449, 457, 459, 568, 572, 574, 578, 580, 582], "u": [25, 28, 216, 350, 352, 354], "u_": 454, "ultra": [46, 161, 195], "unbind": 549, "unbound": 566, "uncertainti": 217, "unchang": [16, 263, 297, 355, 359, 361, 363, 380, 383, 384, 385, 386, 392, 393, 554, 560], "uncontract": 490, "uncontrol": 16, "undefin": 488, "under": [167, 168, 169, 170, 171, 172, 360, 436, 586], "underbrac": 23, "underdetermin": 25, "undergo": [293, 432, 582], "underli": [0, 88, 89, 90, 91, 97, 98, 99, 106, 107, 220, 221, 478, 530, 536, 548, 554, 556, 569], "understand": [16, 70, 71, 72, 108, 143, 144, 196, 213, 218, 270, 582, 583, 584], "understood": [13, 375], "unet": 216, "unexpect": [10, 264, 267, 270, 316, 477, 586], "unfold": [289, 299, 379, 390], "unifi": [0, 16, 92, 231, 234, 461], "uniform": [348, 350, 354, 372, 373, 374, 391, 394, 470, 472, 473, 477, 497, 576, 577, 578, 579], "uniformli": [238, 472, 476], "uniniti": [493, 494], "unintend": [10, 14], "union": [200, 245, 246], "uniqu": [18, 25, 27, 65, 266, 268, 426, 471, 549], "unit": [29, 67, 68, 92, 109, 213, 222, 231, 235, 255, 272, 273, 275, 276, 277, 349, 350, 353, 354, 355, 356, 359, 361, 363, 380], "unless": [156, 157, 158, 159, 160, 161, 162, 163, 174, 175, 176, 177, 178, 236, 462, 539], "unlik": [31, 65, 69, 108, 188, 217, 239, 251, 263, 266, 267, 268, 269, 275, 312, 355, 359, 380, 411, 450, 451, 453, 454, 455, 456, 458], "unmatch": 219, "unnecessari": 10, "unnorm": 397, "unpad": 553, "unseen": 582, "unspecifi": [461, 496], "unsqueez": 549, "unstabl": 22, "unsur": 10, "until": 16, "untouch": 65, "up": [108, 257, 258, 437, 442, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 465, 508, 513, 514, 578, 580], "updat": [4, 41, 263, 269, 270, 380, 383, 384, 385, 386, 396, 398, 399, 400, 401, 403, 404, 405, 408, 409, 410, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 462, 465], "upon": [41, 98, 108, 121, 122, 197, 199, 234, 235, 251, 266, 267, 268, 269], "upper": [26, 352, 440, 458, 476, 508, 509, 547, 564, 565], "upper_triangular": 565, "upsampl": [254, 286, 287, 288, 375, 376, 377, 390, 435], "upstream": [16, 513, 514], "url": 586, "us": [0, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 20, 22, 23, 25, 26, 28, 31, 40, 55, 57, 59, 61, 66, 67, 68, 69, 73, 78, 79, 92, 93, 96, 97, 98, 99, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 173, 174, 175, 176, 177, 178, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 199, 210, 215, 216, 218, 219, 222, 223, 224, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 245, 246, 248, 249, 250, 253, 255, 256, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 300, 302, 304, 308, 310, 311, 314, 316, 318, 319, 330, 331, 333, 335, 336, 337, 338, 339, 340, 344, 345, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 388, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 414, 415, 419, 420, 421, 422, 423, 424, 426, 428, 434, 436, 437, 438, 439, 441, 443, 444, 446, 448, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 508, 509, 515, 516, 519, 520, 521, 523, 529, 530, 535, 539, 545, 547, 550, 551, 553, 555, 558, 559, 560, 562, 564, 565, 568, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 584], "usag": [3, 17, 42, 43, 44, 45, 53, 54, 55, 67, 73, 92, 113, 211, 231, 232, 233, 235, 236, 249, 250, 267, 270, 293, 341, 342, 343, 370, 375, 381, 437, 448, 462, 465, 498, 573, 574, 575, 576, 577, 578, 579, 580], "use_aux": [96, 97, 98], "use_fpn": 231, "use_h": [125, 126], "use_passthrough": 251, "use_s": [125, 126], "user": [1, 2, 3, 4, 16, 131, 215, 222, 231, 251, 266, 267, 268, 269, 436, 443, 451, 571, 572, 582, 584], "usual": [238, 331, 398], "util": [3, 17, 31, 66, 122, 138, 184, 185, 186, 197, 268, 269, 292, 436, 477, 584], "v": [16, 20, 25, 28, 31, 55, 108, 113, 133, 234, 282, 369, 370, 430, 432, 452, 453, 455, 456, 492], "v1": [96, 97, 105, 106, 107, 108, 119, 120, 247, 249, 250, 251], "v2": [46, 47, 48, 49, 50, 51, 52, 53, 79, 88, 89, 90, 91, 105, 107, 108, 120, 121, 124, 133, 139, 140, 141, 143, 144, 145, 194, 195, 196, 197, 198, 199, 247, 252, 253, 254], "v3": [96, 98, 99, 108, 121, 125, 126, 247, 255, 257, 258], "v4": [66, 96, 99, 108, 122, 128, 129, 130, 131, 247, 258], "v_": [449, 452, 453, 455, 456, 457, 459], "v_2": 55, "v_i": 369, "v_stack": 569, "v_t": [456, 457], "val": 347, "val_loss": 445, "valid": [11, 338, 339, 340, 341, 342, 343, 345, 372, 373, 374, 375, 376, 377, 445, 534], "valu": [10, 16, 19, 23, 24, 25, 28, 40, 55, 65, 69, 70, 71, 72, 92, 100, 118, 119, 122, 130, 132, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 164, 165, 188, 189, 215, 219, 220, 221, 222, 236, 240, 241, 248, 251, 256, 264, 266, 268, 270, 272, 275, 278, 279, 280, 282, 283, 284, 285, 290, 292, 293, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315, 316, 317, 330, 331, 335, 336, 337, 338, 339, 340, 344, 347, 349, 350, 351, 352, 353, 354, 355, 359, 361, 362, 363, 364, 367, 369, 370, 380, 381, 382, 383, 384, 385, 386, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 408, 409, 410, 411, 413, 419, 420, 421, 422, 423, 424, 428, 429, 430, 431, 432, 434, 438, 445, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 462, 463, 469, 471, 472, 473, 474, 475, 476, 477, 491, 492, 493, 494, 495, 496, 497, 498, 504, 505, 506, 508, 509, 512, 515, 516, 517, 518, 519, 521, 524, 525, 527, 528, 537, 538, 539, 542, 543, 545, 546, 550, 553, 554, 556, 558, 563, 567, 568, 570, 574, 576, 577, 579], "valuabl": 477, "valueerror": [1, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 312, 437], "van": 108, "vanish": [108, 355, 363, 403, 404, 405], "var": 503, "varepsilon": 316, "vari": [40, 183, 267, 269, 317, 335, 407, 413, 440, 578], "variabl": [215, 217, 222, 240, 264, 270, 317, 318, 319, 393, 413, 414, 415, 436, 463, 493, 575, 578], "varianc": [215, 277, 291, 310, 312, 314, 338, 339, 340, 349, 350, 353, 354, 363, 380, 403, 404, 405, 407, 408, 409, 410, 411, 452, 453, 454, 455, 456, 474, 535, 578, 582], "variant": [32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 60, 62, 63, 64, 66, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 88, 89, 90, 91, 94, 95, 101, 102, 103, 104, 114, 115, 116, 118, 121, 122, 125, 126, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 140, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 164, 165, 179, 180, 181, 182, 184, 185, 186, 187, 195, 200, 201, 202, 203, 204, 215, 222, 223, 224, 230, 232, 249, 250, 253, 256, 262, 452, 453, 454, 586], "variat": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586], "varieti": [4, 105, 146, 477, 582], "variou": [7, 10, 13, 14, 31, 65, 73, 96, 106, 107, 108, 109, 122, 123, 131, 132, 215, 218, 361, 448, 477, 498, 519, 521, 553, 572], "vasudevan": 108, "vaswani": [259, 428], "vdim": 369, "vdot": 487, "vector": [15, 20, 25, 26, 27, 28, 215, 248, 249, 250, 251, 254, 257, 300, 302, 333, 336, 369, 391, 392, 394, 426, 481, 482, 483, 487], "veloc": [449, 457, 459], "verbos": [13, 439, 440, 441, 442, 443, 444, 445, 446], "veri": [25, 48, 108, 134, 158, 160, 450], "verifi": 10, "versa": 458, "versatil": [31, 108, 131, 477, 551], "version": [16, 28, 40, 67, 96, 100, 105, 109, 110, 111, 128, 133, 135, 142, 253, 375, 378, 388, 457, 468, 487, 557, 576, 586], "versu": 65, "vertic": [561, 569, 579], "vgg": 200, "vggnet": [201, 202, 203, 204], "vggnet_11": 108, "vggnet_11_weight": 585, "vggnet_13": 108, "vggnet_13_weight": 585, "vggnet_16": 108, "vggnet_16_weight": 585, "vggnet_19": 108, "vggnet_19_weight": 585, "via": [3, 4, 16, 113, 131, 183, 216, 219, 222, 233, 238, 249, 250, 478, 586], "vice": 458, "video": [218, 285, 297, 340, 374, 377, 410, 421, 424], "view": [105, 109, 267, 420, 421, 422, 423, 424, 539, 540, 556, 566], "vinod": [5, 6], "violet": 583, "vision": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586], "visual": [55, 117, 141, 213, 218], "vit": [31, 69, 188, 206, 207, 208, 209, 210], "vit_bas": 108, "vit_hug": 108, "vit_larg": 108, "vit_smal": 108, "vit_tini": 108, "voc": [232, 233, 249, 250, 252, 253], "vocabulari": [260, 261, 262, 426], "vol": 108, "vollgraf": 7, "volum": [322, 418], "volumetr": [285, 288, 297, 340, 374, 377, 410, 418, 421, 424], "vstack": 549, "w": [10, 13, 14, 15, 31, 108, 155, 167, 168, 169, 170, 171, 172, 184, 185, 186, 216, 217, 219, 220, 221, 222, 234, 238, 239, 241, 242, 243, 248, 249, 250, 251, 254, 255, 257, 258, 284, 285, 287, 288, 290, 292, 296, 297, 300, 302, 311, 318, 319, 321, 322, 324, 325, 328, 329, 330, 331, 335, 337, 339, 340, 344, 369, 372, 373, 374, 375, 376, 377, 388, 391, 392, 394, 404, 405, 406, 409, 410, 414, 415, 417, 418, 421, 424, 513, 514, 573, 575, 583, 586], "w24": [72, 108], "w_": [238, 239, 241, 242, 284, 285, 287, 288, 318, 319, 321, 322, 324, 325, 328, 329, 335, 373, 374, 376, 377, 378, 414, 415, 417, 418, 420, 421, 423, 424], "w_1": [430, 432], "w_2": [430, 432], "w_i": 248, "w_in": 331, "w_k": [31, 55, 113], "w_l": [237, 238], "w_out": [284, 285, 287, 288, 324, 325, 328, 329, 331], "w_q": [55, 113], "w_t": [241, 242], "w_v": [55, 113], "wa": [16, 65, 97, 222, 380, 383, 384, 385, 386, 462, 467], "wai": [1, 10, 13, 15, 30, 56, 57, 58, 59, 60, 61, 62, 63, 64, 93, 214, 218, 388, 397, 463, 556], "wait": 445, "wang": [108, 234], "want": [0, 571, 573], "warn": [266, 268, 369, 539], "warp": [234, 236], "warper_output_s": 236, "we": [3, 464, 551], "wei": 108, "weight": [55, 108, 113, 132, 133, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 174, 175, 176, 177, 178, 188, 189, 215, 219, 220, 221, 222, 232, 233, 248, 249, 250, 257, 258, 282, 283, 284, 285, 286, 287, 288, 300, 302, 303, 304, 305, 309, 310, 312, 314, 315, 333, 335, 344, 345, 349, 350, 353, 354, 369, 370, 372, 373, 374, 375, 376, 377, 380, 381, 383, 384, 385, 386, 391, 394, 396, 397, 398, 401, 403, 404, 405, 407, 408, 409, 410, 411, 426, 428, 429, 430, 431, 432, 436, 449, 450, 451, 452, 453, 454, 455, 456, 457, 459, 467, 468, 472, 477, 584], "weight1": 268, "weight2": 268, "weight_decai": [449, 450, 451, 452, 453, 454, 455, 456, 457, 459], "weihao": 108, "weinberg": 108, "well": [52, 74, 75, 76, 77, 79, 98, 128, 142, 143, 183, 199, 206, 216, 217, 222, 251, 349, 350, 378], "wenhai": 108, "were": 270, "weyand": 108, "what": [13, 15, 388], "whatev": 462, "when": [0, 1, 3, 10, 14, 16, 23, 55, 78, 108, 215, 231, 232, 233, 239, 241, 242, 251, 252, 253, 264, 267, 269, 270, 272, 275, 283, 284, 285, 286, 287, 333, 355, 382, 393, 397, 403, 404, 405, 407, 408, 409, 410, 434, 437, 439, 440, 441, 442, 443, 444, 445, 446, 450, 458, 462, 463, 465, 466, 477, 488, 497, 513, 514, 539, 540, 571, 573, 586], "where": [3, 4, 5, 6, 7, 8, 13, 14, 15, 19, 20, 22, 23, 24, 25, 26, 28, 55, 67, 108, 125, 126, 127, 128, 129, 130, 142, 144, 211, 215, 216, 218, 219, 222, 238, 239, 242, 243, 245, 248, 249, 250, 251, 252, 253, 254, 257, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 293, 295, 296, 297, 300, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 323, 324, 325, 327, 328, 329, 330, 331, 333, 335, 336, 337, 344, 345, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 374, 375, 378, 380, 383, 384, 385, 386, 388, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 439, 440, 441, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 477, 478, 479, 480, 484, 485, 486, 488, 489, 493, 494, 508, 509, 513, 514, 515, 516, 517, 518, 519, 520, 521, 525, 527, 529, 533, 534, 535, 541, 542, 549, 550, 552, 553, 555, 559, 562, 564, 565, 566, 571, 572, 573, 574, 575, 576, 577, 578, 579], "wherev": 550, "whether": [1, 16, 19, 31, 55, 78, 92, 96, 97, 98, 125, 126, 132, 133, 139, 140, 141, 143, 144, 145, 146, 188, 189, 216, 231, 264, 265, 349, 350, 382, 457, 463, 469, 471, 472, 473, 474, 476, 478, 493, 494, 496, 497, 519, 520, 521, 529, 535, 558, 567, 570], "which": [0, 7, 14, 16, 19, 20, 22, 23, 24, 25, 26, 28, 32, 33, 34, 35, 36, 37, 38, 39, 55, 57, 59, 61, 67, 69, 79, 99, 107, 108, 113, 119, 120, 122, 123, 127, 133, 137, 147, 148, 149, 150, 151, 152, 153, 154, 179, 180, 181, 182, 183, 187, 188, 190, 191, 192, 193, 201, 202, 203, 204, 215, 235, 236, 239, 257, 260, 264, 266, 268, 270, 275, 279, 306, 316, 337, 341, 342, 343, 345, 355, 356, 359, 362, 365, 367, 380, 392, 397, 399, 401, 403, 404, 405, 408, 409, 410, 411, 426, 430, 432, 444, 446, 452, 453, 455, 457, 463, 471, 472, 473, 476, 490, 505, 506, 507, 510, 511, 513, 514, 517, 518, 519, 520, 521, 522, 525, 526, 527, 529, 531, 532, 533, 535, 537, 538, 539, 540, 541, 542, 543, 552, 555, 556, 557, 558, 559, 561, 563, 564, 565, 566, 567, 568, 570, 572, 573, 575, 576, 577, 578, 579, 580, 582, 583], "while": [16, 31, 41, 46, 52, 53, 64, 65, 66, 67, 69, 70, 71, 72, 88, 89, 90, 91, 92, 93, 95, 103, 107, 108, 116, 119, 129, 136, 137, 138, 140, 141, 142, 143, 166, 167, 168, 169, 170, 171, 172, 179, 180, 181, 182, 187, 189, 208, 216, 218, 250, 253, 267, 270, 291, 292, 356, 361, 362, 382, 429, 436, 439, 449, 450, 452, 453, 454, 455, 456, 457, 458, 459, 462, 530, 550, 556, 561, 576, 582, 586], "who": [266, 267, 268, 269], "whose": [28, 439, 440, 441, 442, 443, 444, 445, 446, 494, 497, 500, 502, 504, 509, 513, 514, 515, 524, 530, 539, 586], "wide": [4, 5, 6, 8, 17, 25, 53, 108, 131, 155, 163, 164, 165, 198, 233, 276, 287, 361, 372, 373, 398], "wide_resnet_101": 108, "wide_resnet_101_weight": 585, "wide_resnet_50": 108, "wide_resnet_50_weight": 585, "wider": [44, 164, 165, 222, 283, 284], "width": [31, 62, 78, 79, 108, 116, 117, 118, 119, 123, 146, 153, 154, 164, 165, 166, 167, 168, 169, 170, 171, 172, 183, 211, 219, 222, 241, 242, 248, 250, 257, 284, 285, 287, 288, 290, 296, 297, 311, 318, 319, 321, 322, 324, 325, 328, 329, 331, 335, 337, 345, 373, 374, 378, 404, 405, 406, 409, 410, 414, 415, 417, 420, 421, 423, 424, 434, 461, 573, 575, 580], "width_coef": 78, "width_multipli": [119, 123], "window": [108, 113, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 323, 324, 325, 327, 328, 329, 419, 420, 421, 422, 423, 424, 450, 519, 521], "windows_s": [188, 189], "wise": [10, 15, 92, 108, 113, 177, 179, 180, 181, 182, 231, 272, 273, 275, 276, 277, 278, 279, 280, 293, 338, 339, 340, 344, 358, 360, 365, 366, 380, 382, 383, 384, 385, 386, 397, 436, 464, 479, 480, 483, 484, 485, 486, 488, 489, 504, 505, 506, 507, 508, 509, 510, 511, 512, 516, 517, 518, 522, 524, 525, 526, 527, 528, 531, 532, 533, 548, 558, 569, 570], "within": [2, 108, 188, 205, 218, 243, 254, 260, 263, 266, 267, 268, 269, 270, 280, 312, 335, 337, 354, 356, 357, 358, 360, 361, 363, 364, 366, 367, 372, 373, 374, 377, 378, 380, 383, 384, 388, 393, 396, 398, 399, 400, 401, 403, 404, 405, 407, 408, 411, 419, 420, 421, 422, 423, 424, 448, 462, 491, 509, 578, 582], "without": [10, 16, 108, 166, 266, 267, 268, 300, 302, 372, 373, 374, 391, 394, 462, 463, 466, 468, 471, 519, 554, 556, 568], "word": [108, 333, 426], "work": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 549, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582, 583, 584, 585, 586], "workflow": [14, 477, 582], "workshop": 108, "world": 218, "worth": 108, "would": [539, 558], "wrap": [3, 66, 416, 417, 436, 438, 462, 465, 467, 478, 536, 586], "wrapper": 436, "wu": 108, "www": [5, 6], "x": [11, 16, 17, 27, 31, 66, 67, 68, 105, 108, 109, 113, 173, 200, 211, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 241, 242, 243, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 263, 264, 266, 267, 268, 269, 270, 279, 293, 300, 302, 312, 316, 330, 331, 337, 341, 342, 343, 345, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 372, 373, 374, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 388, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 407, 408, 409, 410, 411, 419, 420, 421, 422, 423, 424, 430, 431, 432, 436, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 462, 465, 469, 472, 473, 474, 476, 493, 494, 508, 515, 516, 523, 537, 538, 539, 541, 545, 547, 550, 551, 552, 557, 558, 559, 563, 564, 565, 566, 567, 573, 574, 575, 576, 577, 578, 579, 580, 583, 586], "x1": [251, 254, 257, 391], "x2": [251, 254, 257, 391], "x_": [31, 242, 311, 398, 401, 406, 431, 551], "x_0": 431, "x_1": [55, 238, 239, 241, 242, 243, 245, 246], "x_2": [55, 238, 239, 241, 242, 243, 245, 246], "x_c": [241, 398, 401], "x_i": [248, 312, 316, 396, 397, 407, 431, 478, 508, 516, 523, 563], "x_k": 398, "x_max": 222, "x_min": 222, "x_start": 216, "x_t": [216, 242], "x_test": 16, "x_train": 16, "xavier": [349, 350, 353, 354], "xavier_norm": 348, "xavier_uniform": 348, "xiao": 7, "xie": 108, "xl": [91, 108], "xlarg": [54, 108, 118], "xmax": 546, "xmin": 546, "xy": 551, "xyxi": 219, "x\u2081": 391, "x\u2082": 391, "y": [11, 16, 31, 66, 67, 68, 108, 211, 219, 222, 241, 242, 243, 248, 249, 250, 251, 254, 257, 266, 267, 268, 269, 270, 312, 316, 330, 337, 341, 342, 343, 355, 356, 357, 358, 359, 360, 361, 363, 364, 366, 367, 372, 373, 374, 375, 376, 377, 380, 383, 384, 385, 386, 391, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 407, 408, 409, 410, 411, 419, 420, 421, 422, 423, 424, 428, 429, 430, 431, 432, 469, 472, 473, 474, 476, 478, 493, 494, 550, 551, 557, 566, 567, 576, 586], "y0": 566, "y1": [251, 254, 257, 541, 566], "y2": [251, 254, 257, 541, 566], "y_": [31, 242, 311, 398, 401, 406, 551], "y_1": [238, 239, 241, 242, 243, 245, 246], "y_2": [238, 239, 241, 242, 243, 245, 246], "y_c": [241, 398, 401], "y_i": [248, 316, 396, 397, 407], "y_max": 222, "y_min": 222, "y_t": 242, "y_train": 16, "yann": [8, 108], "yanyu": 108, "yao": [108, 234], "yellow": 583, "yet": [16, 51, 53, 116, 129, 331, 464], "yield": [0, 1, 68, 219, 264, 513, 514, 539], "ymax": 546, "ymin": 546, "yolo": [66, 249, 250, 252, 253, 255, 258], "yolo9000": 234, "yolo_v1": [234, 248, 250], "yolo_v1_tini": 234, "yolo_v2": [234, 251, 253], "yolo_v2_model": 251, "yolo_v2_tini": 234, "yolo_v3": [234, 254, 256], "yolo_v3_tini": 234, "yolo_v4": [234, 257], "yolov1": 249, "yolov3": [234, 255, 256], "yolov4": [65, 234, 258], "yolox": 65, "you": [0, 13, 15, 16, 121, 232, 233, 234, 248, 249, 250, 259, 267, 269, 270, 286, 378, 388, 428, 436, 448, 462, 463, 477, 493, 494, 495, 502, 534, 536, 537, 538, 539, 571, 573, 582, 586], "your": [10, 16, 121, 129, 219, 233, 248, 251, 397, 436, 448, 463, 477, 582, 586], "yourself": 586, "yourweight": 586, "yu": 108, "yuan": 234, "z": [11, 16, 108, 215, 216, 375, 377, 430, 432, 494, 501, 502, 539], "zalandoresearch": 7, "ze": 108, "zeiler": [108, 213], "zero": [23, 25, 26, 98, 222, 241, 242, 272, 275, 283, 284, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 312, 316, 323, 324, 325, 327, 328, 329, 330, 331, 333, 347, 349, 350, 351, 352, 353, 354, 355, 357, 359, 361, 363, 369, 372, 373, 374, 375, 376, 377, 378, 380, 382, 383, 384, 385, 386, 411, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 436, 437, 450, 451, 452, 453, 454, 455, 456, 457, 493, 494, 495, 496, 502, 503, 508, 509, 516, 523, 524, 552, 553, 563, 564, 565, 570], "zero_grad": [16, 265, 437, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 478], "zeros_lik": [494, 503], "zhang": 108, "zhmoginov": 108, "zhu": 108, "zhuang": 108, "zihang": 108, "zip": 237, "zisserman": 108, "\u03c3\u1d62": 25}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "CIFAR10", "CIFAR100", "FashionMNIST", "MNIST", "Image Datasets", "lucid.einops", "lucid.einops.einsum", "Einops Functions", "lucid.einops.rearrange", "lucid.einops.reduce", "lucid.einops.repeat", "Lucid\u00b2 \ud83d\udc8e", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "alexnet", "CoAtNet", "coatnet_0", "coatnet_1", "coatnet_2", "coatnet_3", "coatnet_4", "coatnet_5", "coatnet_6", "coatnet_7", "ConvNeXt", "ConvNeXt_V2", "convnext_base", "convnext_large", "convnext_small", "convnext_tiny", "convnext_v2_atto", "convnext_v2_base", "convnext_v2_femto", "convnext_v2_huge", "convnext_v2_large", "convnext_v2_nano", "convnext_v2_pico", "convnext_v2_tiny", "convnext_xlarge", "CrossViT", "crossvit_15", "crossvit_15_dagger", "crossvit_18", "crossvit_18_dagger", "crossvit_9", "crossvit_9_dagger", "crossvit_base", "crossvit_small", "crossvit_tiny", "CSPNet", "csp_darknet_53", "csp_resnet_50", "csp_resnext_50_32x4d", "CvT", "cvt_13", "cvt_21", "cvt_w24", "DenseNet", "densenet_121", "densenet_169", "densenet_201", "densenet_264", "EfficientNet", "EfficientNet_V2", "efficientnet_b0", "efficientnet_b1", "efficientnet_b2", "efficientnet_b3", "efficientnet_b4", "efficientnet_b5", "efficientnet_b6", "efficientnet_b7", "efficientnet_v2_l", "efficientnet_v2_m", "efficientnet_v2_s", "efficientnet_v2_xl", "EfficientFormer", "efficientformer_l1", "efficientformer_l3", "efficientformer_l7", "Inception", "inception_v1", "inception_v3", "inception_v4", "InceptionNeXt", "inception_next_atto", "inception_next_base", "inception_next_small", "inception_next_tiny", "InceptionResNet", "inception_resnet_v1", "inception_resnet_v2", "Image Classification", "LeNet", "lenet_1", "lenet_4", "lenet_5", "MaxViT", "maxvit_base", "maxvit_base", "maxvit_small", "maxvit_tiny", "maxvit_xlarge", "MobileNet", "MobileNet_V2", "MobileNet_V3", "MobileNet_V4", "mobilenet", "mobilenet_v2", "mobilenet_v3_large", "mobilenet_v3_small", "mobilenet_v4_conv_large", "mobilenet_v4_conv_medium", "mobilenet_v4_conv_small", "mobilenet_v4_hybrid_large", "mobilenet_v4_hybrid_medium", "PVT", "PVT_V2", "pvt_huge", "pvt_large", "pvt_medium", "pvt_small", "pvt_tiny", "pvt_v2_b0", "pvt_v2_b1", "pvt_v2_b2", "pvt_v2_b2_li", "pvt_v2_b3", "pvt_v2_b4", "pvt_v2_b5", "ResNeSt", "resnest_101", "resnest_14", "resnest_200", "resnest_26", "resnest_269", "resnest_50", "resnest_50_1s4x24d", "resnest_50_4s2x40d", "ResNet", "resnet_1001", "resnet_101", "resnet_152", "resnet_18", "resnet_200", "resnet_269", "resnet_34", "resnet_50", "wide_resnet_101", "wide_resnet_50", "ResNeXt", "resnext_101_32x16d", "resnext_101_32x32d", "resnext_101_32x4d", "resnext_101_32x8d", "resnext_101_64x4d", "resnext_50_32x4d", "SENet", "se_resnet_101", "se_resnet_152", "se_resnet_18", "se_resnet_34", "se_resnet_50", "se_resnext_101_32x4d", "se_resnext_101_32x8d", "se_resnext_101_64x4d", "se_resnext_50_32x4d", "SKNet", "sk_resnet_18", "sk_resnet_34", "sk_resnet_50", "sk_resnext_50_32x4d", "SwinTransformer", "SwinTransformer_V2", "swin_base", "swin_large", "swin_small", "swin_tiny", "swin_v2_base", "swin_v2_giant", "swin_v2_huge", "swin_v2_large", "swin_v2_small", "swin_v2_tiny", "VGGNet", "vggnet_11", "vggnet_13", "vggnet_16", "vggnet_19", "ViT", "vit_base", "vit_huge", "vit_large", "vit_small", "vit_tiny", "Xception", "xception", "ZFNet", "zfnet", "VAE", "DDPM", "Image Generation", "lucid.models", "DETR", "detr_r101", "detr_r50", "EfficientDet", "efficientdet_d0", "efficientdet_d1", "efficientdet_d2", "efficientdet_d3", "efficientdet_d4", "efficientdet_d5", "efficientdet_d6", "efficientdet_d7", "Faster R-CNN", "faster_rcnn_resnet_101_fpn", "faster_rcnn_resnet_50_fpn", "Object Detection", "Fast R-CNN", "R-CNN", "util.FPN", "util.MultiScaleROIAlign", "util.ROIAlign", "util.SelectiveSearch", "util.apply_deltas", "util.bbox_to_delta", "util.clip_boxes", "Object Detection Utilities", "util.iou", "util.nms", "YOLO Series", "YOLO-v1", "yolo_v1", "yolo_v1_tiny", "YOLO-v2", "yolo_v2", "yolo_v2_tiny", "YOLO-v3", "yolo_v3", "yolo_v3_tiny", "YOLO-v4", "yolo_v4", "Sequence-to-Sequence", "Transformer", "transformer_base", "transformer_big", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "Attention Functions", "nn.functional.scaled_dot_product_attention", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "nn.functional.conv_transpose1d", "nn.functional.conv_transpose2d", "nn.functional.conv_transpose3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.drop_block", "nn.functional.drop_path", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.binary_cross_entropy_with_logits", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "nn.functional.global_response_norm", "nn.functional.group_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.normalize", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.adaptive_max_pool1d", "nn.functional.adaptive_max_pool2d", "nn.functional.adaptive_max_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "nn.functional.affine_grid", "nn.functional.grid_sample", "Spatial Functions", "nn.functional.embedding", "Utility Functions", "nn.functional.interpolate", "nn.functional.one_hot", "nn.functional.rotate", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "nn.DepthSeparableConv1d", "nn.DepthSeparableConv2d", "nn.DepthSeparableConv3d", "nn.SEModule", "nn.SelectiveKernel", "Fused Layers", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.HardSigmoid", "nn.HardSwish", "nn.LeakyReLU", "nn.Mish", "nn.ReLU", "nn.ReLU6", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Swish", "nn.Tanh", "Activation Layers", "nn.MultiHeadAttention", "nn.ScaledDotProductAttention", "Attention Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "nn.ConvTranspose1d", "nn.ConvTranspose2d", "nn.ConvTranspose3d", "nn.Unfold", "Convolution Layers", "nn.AlphaDropout", "nn.DropBlock", "nn.DropPath", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "nn.Rearrange", "Einops Layers", "Modules", "nn.Bilinear", "nn.Flatten", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.BCEWithLogitsLoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.GlobalResponseNorm", "nn.GroupNorm", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AdaptiveMaxPool1d", "nn.AdaptiveMaxPool2d", "nn.AdaptiveMaxPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "nn.Embedding", "Sparse Layers", "nn.Transformer", "nn.TransformerDecoder", "nn.TransformerDecoderLayer", "nn.TransformerEncoder", "nn.TransformerEncoderLayer", "Transformer Layers", "nn.Upsample", "Vision Layers", "lucid.nn", "optim.Optimizer", "optim.lr_scheduler", "lr_scheduler.CosineAnnealingLR", "lr_scheduler.CyclicLR", "lr_scheduler.ExponentialLR", "lr_scheduler.LRScheduler", "lr_scheduler.LambdaLR", "lr_scheduler.MultiStepLR", "lr_scheduler.ReduceLROnPlateau", "lr_scheduler.StepLR", "LR Schedulers", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.Numeric", "lucid.count_flops", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.load", "lucid.save", "lucid.random.bernoulli", "Random Number Generations", "lucid.random.permutation", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.multiply", "lucid.outer", "lucid.power", "lucid.sub", "lucid.tensordot", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.full", "lucid.full_like", "lucid.linspace", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.ceil", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.cumprod", "lucid.cumsum", "lucid.exp", "lucid.floor", "lucid.log", "lucid.log2", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.round", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.swapaxes", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.argmax", "lucid.argmin", "lucid.argsort", "lucid.broadcast_to", "lucid.chunk", "lucid.concatenate", "lucid.diagonal", "lucid.flatten", "lucid.histogram", "lucid.histogram2d", "lucid.histogramdd", "lucid.hstack", "Tensor Utilities", "lucid.masked_fill", "lucid.meshgrid", "lucid.nonzero", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.roll", "lucid.sort", "lucid.split", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.topk", "lucid.tril", "lucid.triu", "lucid.unbind", "lucid.unique", "lucid.unsqueeze", "lucid.vstack", "lucid.where", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms", "visual.draw_tensor_graph", "lucid.visual", "Pre-Trained Weights", "lucid.weights"], "titleterms": {"1": [464, 539], "19": 251, "1d": 464, "2": 464, "2d": 464, "3": 464, "It": 463, "One": 336, "The": 16, "ab": 504, "about": [57, 59, 61], "abstract": 16, "acceler": 16, "access": 586, "activ": [274, 299, 368, 390], "ad": 464, "adadelta": 450, "adagrad": 451, "adam": 452, "adamax": 454, "adamw": 453, "adaptive_avg_pool1d": 317, "adaptive_avg_pool2d": 318, "adaptive_avg_pool3d": 319, "adaptive_max_pool1d": 320, "adaptive_max_pool2d": 321, "adaptive_max_pool3d": 322, "adaptiveavgpool1d": 413, "adaptiveavgpool2d": 414, "adaptiveavgpool3d": 415, "adaptivemaxpool1d": 416, "adaptivemaxpool2d": 417, "adaptivemaxpool3d": 418, "add": 479, "addit": [25, 369], "advanc": [290, 582], "advantag": [10, 13, 14, 15, 388], "affine_grid": 330, "alexnet": [29, 30, 108, 585], "algebra": 21, "algorithm": [449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "align": [16, 464], "along": 538, "alpha_dropout": 291, "alphadropout": 380, "also": 448, "anchor": 254, "anoth": 536, "api": 586, "apply_delta": 241, "arang": 491, "arcco": 505, "architectur": [29, 31, 40, 55, 92, 110, 111, 112, 113, 164, 165, 213, 231, 235, 236, 250, 257], "arcsin": 506, "arctan": 507, "argmax": 537, "argmin": 538, "argsort": 539, "ascend": 539, "asgd": 449, "attent": [281, 282, 299, 345, 371, 390], "attribut": [5, 6, 7, 8, 29, 105, 109, 155, 166, 173, 183, 200, 211, 213, 251, 254, 257, 263, 265, 266, 267, 268, 269, 270, 338, 339, 340, 341, 342, 343, 344, 355, 356, 359, 361, 363, 364, 365, 367, 372, 373, 374, 375, 376, 377, 380, 382, 383, 384, 385, 386, 391, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 461, 478, 573, 574, 575, 576, 577, 578, 579, 580], "autodiff": 16, "autoencod": 217, "automat": 16, "avail": 584, "avg_pool1d": 323, "avg_pool2d": 324, "avg_pool3d": 325, "avgpool1d": 419, "avgpool2d": 420, "avgpool3d": 421, "axi": [464, 530, 538], "backbon": [222, 251, 254, 257], "backend": 16, "backpropag": [407, 478], "backward": [18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 251, 254, 257, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 292, 300, 302, 330, 335, 344, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 372, 373, 374, 375, 376, 377, 380, 383, 384, 385, 386, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 408, 409, 410, 411, 419, 420, 421, 422, 423, 424, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 540, 542, 548, 551, 553, 554, 555, 556, 560, 561, 562, 564, 565, 566, 568, 569], "base": [447, 478], "basic": 16, "batch_norm": 310, "batchnorm": 346, "batchnorm1d": 403, "batchnorm2d": 404, "batchnorm3d": 405, "bbox_to_delta": 242, "bceloss": 396, "bcewithlogitsloss": 397, "behavior": [317, 318, 319, 320, 321, 322, 413, 414, 415, 416, 417, 418, 467, 468], "benefit": [462, 465], "bernoulli": 469, "between": [16, 478], "bilinear": [300, 391], "binari": 503, "binary_cross_entropi": 303, "binary_cross_entropy_with_logit": 304, "bottleneck": [125, 126], "broadcast": [464, 540], "broadcast_to": 540, "buffer": 263, "cach": 586, "calcul": [11, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 155, 166, 173, 183, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 290, 292, 293, 300, 302, 317, 318, 319, 320, 330, 331, 335, 338, 339, 340, 341, 342, 343, 344, 345, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 540, 542, 548, 551, 553, 554, 555, 556, 560, 561, 562, 564, 565, 566, 568, 569, 570, 573, 574, 575, 576, 577, 578, 579, 580], "captur": 466, "case": 65, "categori": 586, "ceil": 508, "centercrop": 573, "characterist": 65, "choleski": 18, "chunk": 541, "cifar10": 5, "cifar100": 6, "class": [0, 1, 2, 5, 6, 7, 8, 29, 31, 40, 41, 55, 65, 69, 73, 78, 79, 92, 96, 100, 105, 109, 113, 119, 120, 121, 122, 146, 155, 166, 173, 183, 188, 189, 200, 205, 211, 213, 215, 216, 219, 222, 231, 235, 236, 244, 248, 251, 254, 257, 260, 263, 264, 265, 266, 267, 268, 269, 270, 338, 339, 340, 341, 342, 343, 344, 345, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 388, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 434, 437, 439, 440, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 478, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580], "classif": 108, "clip": 509, "clip_box": 243, "cnn": [231, 234, 235, 236], "co": 510, "coatnet": [31, 108], "coatnet_0": 32, "coatnet_1": 33, "coatnet_2": 34, "coatnet_3": 35, "coatnet_4": 36, "coatnet_5": 37, "coatnet_6": 38, "coatnet_7": 39, "combin": 0, "common": 586, "compon": [3, 215, 436], "compos": 571, "comput": [218, 222, 312, 541, 550, 557, 558, 563], "concatdataset": [0, 1], "concaten": 542, "conclus": [3, 10, 13, 14, 15, 16, 388, 436, 438, 463, 464, 477, 572, 582], "configur": [32, 33, 34, 35, 36, 37, 38, 39, 78, 114, 115, 116, 117, 118, 125, 126, 147, 148, 149, 150, 151, 152, 153, 154], "constant": 347, "constructor": [237, 238, 239, 240], "contain": 271, "contract": 490, "conv": 346, "conv1d": [283, 372], "conv2d": [284, 373], "conv3d": [285, 374], "conv_transpose1d": 286, "conv_transpose2d": 287, "conv_transpose3d": 288, "convbnrelu1d": 338, "convbnrelu2d": 339, "convbnrelu3d": 340, "convnext": [40, 108], "convnext_bas": 42, "convnext_larg": 43, "convnext_smal": 44, "convnext_tini": 45, "convnext_v2": 41, "convnext_v2_atto": 46, "convnext_v2_bas": 47, "convnext_v2_femto": 48, "convnext_v2_hug": 49, "convnext_v2_larg": 50, "convnext_v2_nano": 51, "convnext_v2_pico": 52, "convnext_v2_tini": 53, "convnext_xlarg": 54, "convolut": [108, 289, 299, 346, 379, 390], "convtranspose1d": 375, "convtranspose2d": 376, "convtranspose3d": 377, "core": 16, "cosh": 511, "cosineannealinglr": 439, "count_flop": 462, "creat": [265, 478, 536], "cross_entropi": 305, "crossentropyloss": 398, "crossvit": [55, 108], "crossvit_15": 56, "crossvit_15_dagg": 57, "crossvit_18": 58, "crossvit_18_dagg": 59, "crossvit_9": 60, "crossvit_9_dagg": 61, "crossvit_bas": 62, "crossvit_smal": 63, "crossvit_tini": 64, "csp_darknet_53": 66, "csp_resnet_50": 67, "csp_resnext_50_32x4d": 68, "cspnet": [65, 108], "cube": 512, "cumprod": 513, "cumsum": 514, "current": 584, "custom": [1, 2, 3, 251, 264, 437, 448, 582, 586], "cvt": [69, 108], "cvt_13": 70, "cvt_21": 71, "cvt_w24": 72, "cycliclr": 440, "d": 539, "dagger": [57, 59, 61], "darknet": 251, "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 9], "ddpm": [216, 217], "default": [251, 254, 257], "defin": [2, 264, 437, 448], "definit": [13, 14, 15, 316, 388], "denois": 216, "densenet": [73, 108, 585], "densenet_121": 74, "densenet_169": 75, "densenet_201": 76, "densenet_264": 77, "depthseparableconv1d": 341, "depthseparableconv2d": 342, "depthseparableconv3d": 343, "depthwis": 346, "descend": 539, "descript": [167, 168, 169, 170, 171, 172, 184, 185, 186, 466], "design": 16, "det": 19, "detail": [25, 55, 113, 127, 128, 129, 130, 131, 164, 165, 219, 369, 428, 429, 430, 431, 432], "detect": [234, 244, 254, 257], "detr": [219, 234], "detr_r101": 220, "detr_r50": 221, "devic": [16, 478, 586], "diag": 492, "diagon": 543, "dictionari": 231, "differ": [250, 260], "differenti": 16, "dilat": 290, "dim": 538, "div": 480, "dot": 481, "draw_tensor_graph": 583, "drop_block": 292, "drop_path": 293, "dropblock": 381, "dropout": [294, 298, 299, 383, 387, 390], "dropout1d": [295, 384], "dropout2d": [296, 385], "dropout3d": [297, 386], "droppath": 382, "dtype": 478, "duplic": 539, "educ": 16, "efficientdet": [222, 234], "efficientdet_d0": 223, "efficientdet_d1": 224, "efficientdet_d2": 225, "efficientdet_d3": 226, "efficientdet_d4": 227, "efficientdet_d5": 228, "efficientdet_d6": 229, "efficientdet_d7": 230, "efficientform": [92, 108], "efficientformer_l1": 93, "efficientformer_l3": 94, "efficientformer_l7": 95, "efficientnet": [78, 108], "efficientnet_b0": 80, "efficientnet_b1": 81, "efficientnet_b2": 82, "efficientnet_b3": 83, "efficientnet_b4": 84, "efficientnet_b5": 85, "efficientnet_b6": 86, "efficientnet_b7": 87, "efficientnet_v2": 79, "efficientnet_v2_": 90, "efficientnet_v2_l": 88, "efficientnet_v2_m": 89, "efficientnet_v2_xl": 91, "eig": 20, "einop": [10, 11, 12, 13, 14, 15, 389, 390], "einsum": 11, "elu": [272, 355], "embed": [333, 426], "empti": 493, "empty_lik": 494, "enabl": 16, "encod": 336, "enhanc": 133, "evalu": 16, "exampl": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 300, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 388, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 434, 436, 437, 439, 440, 441, 442, 443, 444, 445, 446, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 582, 583, 586], "excit": 346, "exp": 515, "explan": 222, "exponentiallr": 441, "express": [311, 508, 516, 523, 559], "ey": 495, "factori": 586, "fashionmnist": 7, "fast": [234, 235], "faster": [231, 234], "faster_rcnn_resnet_101_fpn": 232, "faster_rcnn_resnet_50_fpn": 233, "featur": [4, 17, 179, 180, 181, 182, 187, 448, 477, 582], "flatten": [392, 537, 544], "floor": 516, "flop": 539, "focal": 222, "format": [219, 222, 248, 251, 254, 257], "formula": [248, 439, 440, 441, 443, 444, 445, 446], "forward": [11, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 155, 166, 173, 183, 211, 216, 219, 237, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 290, 293, 300, 302, 312, 317, 318, 319, 320, 330, 331, 335, 338, 339, 340, 341, 342, 343, 344, 345, 349, 350, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 428, 429, 430, 431, 432, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 531, 532, 533, 534, 535, 542, 548, 551, 553, 554, 555, 556, 560, 561, 562, 564, 565, 568, 569, 573, 574, 575, 576, 577, 578, 579, 580], "fpn": 237, "free": 478, "from": [260, 536], "full": 496, "full_lik": 497, "function": [11, 12, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 106, 107, 110, 111, 112, 114, 115, 116, 117, 118, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 212, 214, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 241, 242, 243, 244, 245, 246, 249, 250, 252, 253, 255, 256, 258, 261, 262, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 347, 349, 350, 351, 352, 353, 354, 462, 463, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 583], "fuse": 346, "futur": 4, "gelu": [273, 356], "gener": [217, 470, 503], "get": 448, "global": 538, "global_response_norm": 311, "globalresponsenorm": 406, "gpu": [16, 478], "grad_en": 463, "gradient": [18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 292, 300, 302, 330, 335, 344, 354, 355, 356, 357, 358, 359, 360, 361, 363, 364, 365, 366, 367, 372, 373, 374, 375, 376, 377, 380, 383, 384, 385, 386, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 408, 409, 410, 411, 419, 420, 421, 422, 423, 424, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 504, 505, 506, 507, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 540, 541, 542, 548, 550, 551, 553, 554, 555, 556, 557, 558, 560, 561, 562, 563, 564, 565, 566, 568, 569, 570], "grid_sampl": 331, "group_norm": 312, "groupnorm": 407, "hardsigmoid": 357, "hardswish": 358, "heapsort": 539, "histogram": 545, "histogram2d": 546, "histogramdd": 547, "hook": [16, 478], "hot": 336, "how": [16, 463, 586], "hstack": 548, "huber_loss": 306, "huberloss": 399, "hybrid": 31, "hyperparamet": [153, 154], "ident": 393, "imag": [9, 108, 217, 581], "implement": [55, 113], "improv": 257, "incept": [96, 108], "inception_next_atto": 101, "inception_next_bas": 102, "inception_next_smal": 103, "inception_next_tini": 104, "inception_resnet_v1": 106, "inception_resnet_v2": 107, "inception_v1": 97, "inception_v3": 98, "inception_v4": 99, "inceptionnext": [100, 108], "inceptionresnet": 105, "index": [537, 538], "infer": [219, 478], "init": [347, 349, 350, 351, 352, 353, 354], "initi": 348, "inner": 482, "input": [219, 222, 237, 238, 239, 248, 251, 254, 257, 536], "inspect": [448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "instal": 16, "instance_norm": 314, "instancenorm1d": 408, "instancenorm2d": 409, "instancenorm3d": 410, "integr": [3, 251, 436, 477, 582], "interpol": 335, "inv": 22, "iou": 245, "kaiming_norm": 349, "kaiming_uniform": 350, "keep": 538, "kei": [3, 4, 65, 133, 179, 180, 181, 182, 187, 436, 448, 477, 582], "kernel": [346, 539], "lambdalr": 443, "languag": 218, "layer": [147, 148, 149, 150, 151, 152, 346, 368, 371, 379, 387, 389, 390, 395, 402, 412, 425, 427, 433, 435], "layer_norm": 315, "layernorm": 411, "leaky_relu": 275, "leakyrelu": 359, "learn": 477, "lenet": [108, 109, 585], "lenet_1": 110, "lenet_4": 111, "lenet_5": 112, "linalg": [17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28], "linear": [21, 299, 301, 302, 390, 394, 395], "linspac": 498, "list": 536, "load": [1, 16, 467], "log": 517, "log2": 518, "logic": 336, "loss": [215, 219, 222, 231, 248, 251, 254, 257, 299, 307, 390, 402], "lr": 447, "lr_schedul": [438, 439, 440, 441, 442, 443, 444, 445, 446], "lrschedul": 442, "lucid": [3, 4, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 218, 299, 436, 448, 461, 462, 463, 464, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 582, 584, 586], "lucid\u00b2": 16, "masked_fil": 550, "match": 219, "mathemat": [13, 14, 15, 55, 113, 311, 316, 369, 388, 428, 429, 430, 431, 432, 439, 440, 441, 443, 444, 445, 446, 478, 508, 516, 523, 543, 559], "matmul": 483, "matrix": 483, "matrix_pow": 23, "max": [519, 537], "max_pool1d": 327, "max_pool2d": 328, "max_pool3d": 329, "maximum": [484, 537], "maxpool1d": 422, "maxpool2d": 423, "maxpool3d": 424, "maxvit": [108, 113], "maxvit_bas": [114, 115], "maxvit_smal": 116, "maxvit_tini": 117, "maxvit_xlarg": 118, "mean": 520, "mechan": [282, 345], "meshgrid": 551, "metadata": [466, 586], "metal": 16, "method": [0, 1, 2, 5, 6, 7, 8, 105, 109, 200, 215, 216, 219, 222, 248, 251, 254, 257, 264, 265, 428, 429, 430, 431, 432, 437, 439, 440, 441, 442, 443, 444, 445, 446, 461, 478], "min": 521, "minimum": [485, 538], "mish": 360, "mlx": 16, "mnist": 8, "mobilenet": [108, 119, 123, 585], "mobilenet_v2": [120, 124], "mobilenet_v3": 121, "mobilenet_v3_larg": 125, "mobilenet_v3_smal": 126, "mobilenet_v4": 122, "mobilenet_v4_conv_larg": 127, "mobilenet_v4_conv_medium": 128, "mobilenet_v4_conv_smal": 129, "mobilenet_v4_hybrid_larg": 130, "mobilenet_v4_hybrid_medium": 131, "model": [114, 115, 116, 117, 118, 218, 436, 586], "modul": [215, 264, 390], "moduledict": 266, "modulelist": 267, "more": 477, "move": 478, "mse_loss": 308, "mseloss": 400, "multi": [254, 257], "multiheadattent": 369, "multipl": [0, 483], "multipli": 486, "multiscaleroialign": 238, "multisteplr": 444, "nadam": 455, "natur": 218, "neck": 257, "network": [16, 222], "neural": 16, "new": 464, "newaxi": 464, "nll_loss": 309, "nllloss": 401, "nm": 246, "nn": [16, 260, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 388, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 434, 436], "no_grad": 465, "nois": 216, "nonzero": 552, "norm": 24, "normal": [299, 313, 316, 351, 390, 412, 574], "note": [11, 232, 233, 249, 250, 331, 496, 497], "number": 470, "numer": 461, "object": [216, 234, 244], "one_hot": 336, "ones": 499, "ones_lik": 500, "oper": [21, 483, 503], "optim": [437, 438, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460], "option": 369, "organ": 436, "other": 16, "outer": 487, "output": [215, 237, 238, 239, 251, 254, 257], "overview": [3, 4, 10, 96, 97, 98, 99, 105, 106, 107, 109, 110, 111, 112, 119, 120, 121, 122, 127, 128, 129, 130, 131, 156, 157, 158, 159, 160, 161, 162, 163, 174, 175, 176, 177, 178, 369, 428, 429, 430, 431, 432, 436, 438, 448, 462, 465, 477, 582, 586], "pad": 553, "paramet": [1, 5, 6, 7, 8, 11, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 300, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 354, 355, 356, 359, 361, 363, 364, 365, 367, 369, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 388, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 434, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583], "parameterdict": 268, "parameterlist": 269, "pass": 211, "perform": [478, 539], "permut": 471, "pinv": 25, "pipelin": [3, 582], "pitfal": [463, 586], "pool": [299, 326, 390, 425], "potenti": 463, "power": 488, "pre": 585, "predict": [251, 254, 257], "pretrain": 16, "process": [216, 218, 333], "propag": [251, 254, 257], "properti": [265, 478], "provid": 586, "pvt": [108, 132], "pvt_huge": 134, "pvt_larg": 135, "pvt_medium": 136, "pvt_small": 137, "pvt_tini": 138, "pvt_v2": 133, "pvt_v2_b0": 139, "pvt_v2_b1": 140, "pvt_v2_b2": 141, "pvt_v2_b2_li": 142, "pvt_v2_b3": 143, "pvt_v2_b4": 144, "pvt_v2_b5": 145, "pyramid": 108, "qr": 26, "quickstart": 586, "r": [231, 234, 235, 236], "radam": 456, "rais": [18, 19, 20, 22, 23, 24, 25, 26, 27, 28], "rand": 472, "randint": 473, "randn": 474, "random": [469, 470, 471, 472, 473, 474, 475, 476, 477], "randomcrop": 575, "randomgrayscal": 576, "randomhorizontalflip": 577, "randomrot": 578, "randomverticalflip": 579, "ravel": 554, "rearrang": [10, 13, 388], "reciproc": 522, "reduc": [10, 14], "reducelronplateau": 445, "refer": [5, 6, 7, 8, 344, 448], "register_model": 466, "regular": 292, "relu": [276, 346, 361], "relu6": 362, "repeat": [10, 15, 555], "represent": [55, 113, 461, 478], "requir": 215, "reshap": 556, "resiz": 580, "resnest": [108, 146], "resnest_101": 147, "resnest_14": 148, "resnest_200": 149, "resnest_26": 150, "resnest_269": 151, "resnest_50": 152, "resnest_50_1s4x24d": 153, "resnest_50_4s2x40d": 154, "resnet": [108, 155, 585], "resnet_1001": 156, "resnet_101": 157, "resnet_152": 158, "resnet_18": 159, "resnet_200": 160, "resnet_269": 161, "resnet_34": 162, "resnet_50": 163, "resnext": [108, 166, 585], "resnext_101_32x16d": 167, "resnext_101_32x32d": 168, "resnext_101_32x4d": 169, "resnext_101_32x8d": 170, "resnext_101_64x4d": 171, "resnext_50_32x4d": 172, "return": [11, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 74, 75, 76, 77, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 106, 107, 110, 111, 112, 123, 124, 125, 126, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 212, 214, 215, 216, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 232, 233, 237, 238, 239, 240, 241, 242, 243, 245, 246, 248, 249, 250, 252, 253, 255, 256, 258, 261, 262, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 300, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 333, 335, 336, 337, 345, 347, 349, 350, 351, 352, 353, 354, 362, 388, 426, 462, 463, 465, 467, 468, 469, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 583], "revers": 216, "rmsprop": 457, "roialign": 239, "roll": 557, "rotat": 337, "round": 523, "row": 537, "rprop": 458, "rule": [483, 490, 530, 540], "save": 468, "scale": [254, 257], "scaled_dot_product_attent": 282, "scaleddotproductattent": 370, "schedul": 447, "se_resnet_101": 174, "se_resnet_152": 175, "se_resnet_18": 176, "se_resnet_34": 177, "se_resnet_50": 178, "se_resnext_101_32x4d": 179, "se_resnext_101_32x8d": 180, "se_resnext_101_64x4d": 181, "se_resnext_50_32x4d": 182, "see": 448, "seed": 475, "select": 346, "selectivekernel": 345, "selectivesearch": 240, "selu": [277, 363], "semodul": 344, "senet": [108, 173], "separ": 346, "sequenc": 259, "sequenti": 270, "seri": 247, "sgd": 459, "shape": 16, "sigmoid": [278, 364], "sign": 524, "signatur": [0, 1, 2, 5, 6, 7, 8, 11, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 241, 242, 243, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 275, 276, 277, 278, 279, 280, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 295, 296, 297, 300, 302, 303, 304, 305, 306, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 384, 385, 386, 388, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 403, 404, 405, 406, 407, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 426, 428, 429, 430, 431, 432, 434, 437, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 461, 462, 463, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535, 536, 537, 538, 539, 540, 541, 542, 543, 544, 545, 546, 547, 548, 550, 551, 552, 553, 554, 555, 556, 557, 558, 559, 560, 561, 562, 563, 564, 565, 566, 567, 568, 569, 570, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 583], "sin": 525, "sinh": 526, "sk_resnet_18": 184, "sk_resnet_34": 185, "sk_resnet_50": 186, "sk_resnext_50_32x4d": 187, "sketch": 219, "sknet": [108, 183], "softmax": [279, 365], "solv": 27, "sort": [539, 558], "spars": [390, 427], "spatial": [299, 332], "specif": [56, 57, 58, 59, 60, 61, 62, 63, 64, 93, 94, 95], "split": 559, "sqrt": 527, "squar": 528, "squeez": [346, 560], "stabl": 539, "stack": 561, "start": 448, "state": [448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459], "step": 219, "steplr": 446, "sub": 489, "sum": 529, "surfac": 586, "svd": 28, "swap": 530, "swapax": 530, "swin": 108, "swin_bas": 190, "swin_larg": 191, "swin_smal": 192, "swin_tini": 193, "swin_v2_bas": 194, "swin_v2_giant": 195, "swin_v2_hug": 196, "swin_v2_larg": 197, "swin_v2_smal": 198, "swin_v2_tini": 199, "swintransform": 188, "swintransformer_v2": 189, "swish": 366, "switch": 16, "tan": 531, "tanh": [280, 367, 532], "target": [219, 222], "tensor": [16, 464, 478, 490, 503, 536, 549], "tensordot": 490, "tile": 562, "topk": 563, "totensor": 572, "trace": 533, "track": 478, "train": [16, 216, 219, 232, 233, 249, 250, 585], "transform": [108, 259, 260, 390, 428, 433, 571, 572, 573, 574, 575, 576, 577, 578, 579, 580, 581, 582], "transformer_bas": 261, "transformer_big": 262, "transformerdecod": 429, "transformerdecoderlay": 430, "transformerencod": 431, "transformerencoderlay": 432, "transpos": 534, "tril": 564, "triu": 565, "typic": 586, "unari": 503, "unbind": 566, "unfold": [290, 378], "uniform": [352, 476], "uniqu": 567, "unsqueez": 568, "upsampl": 434, "us": [1, 65, 251, 254, 257, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 478, 536, 586], "usag": [4, 88, 89, 90, 91, 97, 98, 99, 106, 107, 109, 110, 111, 112, 127, 128, 129, 130, 131, 179, 180, 181, 182, 187, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 251, 252, 253, 254, 255, 256, 257, 258, 263, 337, 369, 428, 429, 430, 431, 432, 438, 439, 440, 441, 442, 443, 444, 445, 446, 461, 463, 464, 551, 571, 572, 582], "user": 586, "util": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 299, 334, 549], "v1": [234, 248], "v2": [234, 251], "v3": [234, 254], "v4": [234, 257], "vae": [215, 217], "valu": 559, "var": 535, "variant": [57, 59, 61], "variat": 217, "verif": 16, "vggnet": [108, 200, 585], "vggnet_11": 201, "vggnet_13": 202, "vggnet_16": 203, "vggnet_19": 204, "vision": [108, 218, 390, 435], "visual": [108, 583, 584], "vit": [108, 205], "vit_bas": 206, "vit_hug": 207, "vit_larg": 208, "vit_smal": 209, "vit_tini": 210, "vstack": 569, "weight": [16, 348, 585, 586], "where": 570, "wide_resnet_101": 164, "wide_resnet_50": 165, "work": [4, 463], "xavier_norm": 353, "xavier_uniform": 354, "xception": [108, 211, 212], "yolo": [234, 247, 248, 251, 254, 257], "yolo_v1": 249, "yolo_v1_tini": 250, "yolo_v2": 252, "yolo_v2_tini": 253, "yolo_v3": 255, "yolo_v3_tini": 256, "yolo_v4": 258, "zero": 501, "zeros_lik": 502, "zfnet": [108, 213, 214]}})