Search.setIndex({"alltitles": {"@ Operator": [[212, "operator"]], "Activation Functions": [[73, null]], "Activation Layers": [[140, null], [151, null]], "Additional Details": [[16, "additional-details"]], "Admonitions and Usage Guidelines": [[199, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[84, "advanced-example-with-dilation"]], "Advanced Features": [[280, "advanced-features"]], "AlexNet": [[20, null]], "Algorithm": [[183, "algorithm"], [184, "algorithm"], [185, "algorithm"], [186, "algorithm"], [187, "algorithm"], [188, "algorithm"], [189, "algorithm"], [190, "algorithm"], [191, "algorithm"], [192, "algorithm"], [193, "algorithm"]], "Architecture": [[20, "architecture"], [31, "architecture"], [32, "architecture"], [33, "architecture"], [58, "architecture"]], "Attention Mechanism": [[122, "attention-mechanism"]], "Attributes": [[5, "attributes"], [20, "attributes"], [26, "attributes"], [30, "attributes"], [34, "attributes"], [43, "attributes"], [49, "attributes"], [53, "attributes"], [58, "attributes"], [62, "attributes"], [64, "attributes"], [65, "attributes"], [66, "attributes"], [67, "attributes"], [68, "attributes"], [69, "attributes"], [118, "attributes"], [119, "attributes"], [120, "attributes"], [121, "attributes"], [132, "attributes"], [133, "attributes"], [134, "attributes"], [135, "attributes"], [136, "attributes"], [137, "attributes"], [138, "attributes"], [139, "attributes"], [141, "attributes"], [142, "attributes"], [143, "attributes"], [145, "attributes"], [146, "attributes"], [147, "attributes"], [148, "attributes"], [149, "attributes"], [152, "attributes"], [153, "attributes"], [154, "attributes"], [156, "attributes"], [157, "attributes"], [158, "attributes"], [159, "attributes"], [160, "attributes"], [162, "attributes"], [163, "attributes"], [164, "attributes"], [165, "attributes"], [166, "attributes"], [167, "attributes"], [168, "attributes"], [170, "attributes"], [171, "attributes"], [172, "attributes"], [173, "attributes"], [174, "attributes"], [175, "attributes"], [176, "attributes"], [177, "attributes"], [178, "attributes"], [207, "attributes"], [271, "attributes"], [272, "attributes"], [273, "attributes"], [274, "attributes"], [275, "attributes"], [276, "attributes"], [277, "attributes"], [278, "attributes"]], "Backward Gradient Calculation": [[9, "backward-gradient-calculation"], [10, "backward-gradient-calculation"], [11, "backward-gradient-calculation"], [13, "backward-gradient-calculation"], [14, "backward-gradient-calculation"], [15, "backward-gradient-calculation"], [16, "backward-gradient-calculation"], [17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [65, "backward-gradient-calculation"], [66, "backward-gradient-calculation"], [67, "backward-gradient-calculation"], [68, "backward-gradient-calculation"], [69, "backward-gradient-calculation"], [71, "backward-gradient-calculation"], [72, "backward-gradient-calculation"], [74, "backward-gradient-calculation"], [75, "backward-gradient-calculation"], [76, "backward-gradient-calculation"], [77, "backward-gradient-calculation"], [78, "backward-gradient-calculation"], [79, "backward-gradient-calculation"], [92, "backward-gradient-calculation"], [94, "backward-gradient-calculation"], [116, "backward-gradient-calculation"], [121, "backward-gradient-calculation"], [131, "backward-gradient-calculation"], [132, "backward-gradient-calculation"], [133, "backward-gradient-calculation"], [134, "backward-gradient-calculation"], [135, "backward-gradient-calculation"], [136, "backward-gradient-calculation"], [137, "backward-gradient-calculation"], [138, "backward-gradient-calculation"], [139, "backward-gradient-calculation"], [141, "backward-gradient-calculation"], [142, "backward-gradient-calculation"], [143, "backward-gradient-calculation"], [145, "backward-gradient-calculation"], [146, "backward-gradient-calculation"], [147, "backward-gradient-calculation"], [148, "backward-gradient-calculation"], [149, "backward-gradient-calculation"], [152, "backward-gradient-calculation"], [153, "backward-gradient-calculation"], [154, "backward-gradient-calculation"], [156, "backward-gradient-calculation"], [157, "backward-gradient-calculation"], [158, "backward-gradient-calculation"], [159, "backward-gradient-calculation"], [160, "backward-gradient-calculation"], [162, "backward-gradient-calculation"], [163, "backward-gradient-calculation"], [164, "backward-gradient-calculation"], [165, "backward-gradient-calculation"], [166, "backward-gradient-calculation"], [167, "backward-gradient-calculation"], [168, "backward-gradient-calculation"], [173, "backward-gradient-calculation"], [174, "backward-gradient-calculation"], [175, "backward-gradient-calculation"], [176, "backward-gradient-calculation"], [177, "backward-gradient-calculation"], [178, "backward-gradient-calculation"], [208, "backward-gradient-calculation"], [209, "backward-gradient-calculation"], [210, "backward-gradient-calculation"], [211, "backward-gradient-calculation"], [212, "backward-gradient-calculation"], [213, "backward-gradient-calculation"], [214, "backward-gradient-calculation"], [215, "backward-gradient-calculation"], [216, "backward-gradient-calculation"], [217, "backward-gradient-calculation"], [218, "backward-gradient-calculation"], [229, "backward-gradient-calculation"], [230, "backward-gradient-calculation"], [231, "backward-gradient-calculation"], [232, "backward-gradient-calculation"], [233, "backward-gradient-calculation"], [234, "backward-gradient-calculation"], [235, "backward-gradient-calculation"], [236, "backward-gradient-calculation"], [237, "backward-gradient-calculation"], [238, "backward-gradient-calculation"], [239, "backward-gradient-calculation"], [240, "backward-gradient-calculation"], [241, "backward-gradient-calculation"], [242, "backward-gradient-calculation"], [243, "backward-gradient-calculation"], [244, "backward-gradient-calculation"], [245, "backward-gradient-calculation"], [246, "backward-gradient-calculation"], [247, "backward-gradient-calculation"], [248, "backward-gradient-calculation"], [249, "backward-gradient-calculation"], [250, "backward-gradient-calculation"], [251, "backward-gradient-calculation"], [252, "backward-gradient-calculation"], [253, "backward-gradient-calculation"], [255, "backward-gradient-calculation"], [257, "backward-gradient-calculation"], [259, "backward-gradient-calculation"], [260, "backward-gradient-calculation"], [261, "backward-gradient-calculation"], [262, "backward-gradient-calculation"], [263, "backward-gradient-calculation"], [264, "backward-gradient-calculation"], [265, "backward-gradient-calculation"], [266, "backward-gradient-calculation"], [267, "backward-gradient-calculation"], [268, "backward-gradient-calculation"]], "Behavior": [[105, "behavior"], [106, "behavior"], [107, "behavior"], [170, "behavior"], [171, "behavior"], [172, "behavior"]], "Benefits": [[197, "benefits"]], "Binary Functions": [[228, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [20, "class-signature"], [22, "class-signature"], [26, "class-signature"], [30, "class-signature"], [34, "class-signature"], [43, "class-signature"], [49, "class-signature"], [53, "class-signature"], [58, "class-signature"], [62, "class-signature"], [63, "class-signature"], [64, "class-signature"], [65, "class-signature"], [66, "class-signature"], [67, "class-signature"], [68, "class-signature"], [69, "class-signature"], [118, "class-signature"], [119, "class-signature"], [120, "class-signature"], [121, "class-signature"], [122, "class-signature"], [132, "class-signature"], [133, "class-signature"], [134, "class-signature"], [135, "class-signature"], [136, "class-signature"], [137, "class-signature"], [138, "class-signature"], [139, "class-signature"], [141, "class-signature"], [142, "class-signature"], [143, "class-signature"], [145, "class-signature"], [146, "class-signature"], [147, "class-signature"], [148, "class-signature"], [149, "class-signature"], [152, "class-signature"], [153, "class-signature"], [154, "class-signature"], [156, "class-signature"], [157, "class-signature"], [158, "class-signature"], [159, "class-signature"], [160, "class-signature"], [162, "class-signature"], [163, "class-signature"], [164, "class-signature"], [165, "class-signature"], [166, "class-signature"], [167, "class-signature"], [168, "class-signature"], [170, "class-signature"], [171, "class-signature"], [172, "class-signature"], [173, "class-signature"], [174, "class-signature"], [175, "class-signature"], [176, "class-signature"], [177, "class-signature"], [178, "class-signature"], [181, "class-signature"], [183, "class-signature"], [184, "class-signature"], [185, "class-signature"], [186, "class-signature"], [187, "class-signature"], [188, "class-signature"], [189, "class-signature"], [190, "class-signature"], [191, "class-signature"], [192, "class-signature"], [193, "class-signature"], [207, "class-signature"], [269, "class-signature"], [270, "class-signature"], [271, "class-signature"], [272, "class-signature"], [273, "class-signature"], [274, "class-signature"], [275, "class-signature"], [276, "class-signature"], [277, "class-signature"], [278, "class-signature"]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [7, "conclusion"], [180, "conclusion"], [195, "conclusion"], [196, "conclusion"], [197, "conclusion"], [206, "conclusion"], [270, "conclusion"], [280, "conclusion"]], "Containers": [[70, null]], "Conv-BatchNorm-ReLU": [[123, null]], "ConvNets": [[29, null], [60, "convnets"]], "Convolution Functions": [[83, null], [91, null]], "Convolution Layers": [[144, null], [151, null]], "Core Components": [[7, "core-components"]], "Create a Tensor from a list": [[254, null]], "Creating a Parameter": [[64, null]], "Creating a tensor with gradient tracking": [[207, null]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[280, "custom-pipelines"]], "Defining a Custom Optimizer": [[182, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[63, null]], "Defining a custom optimizer": [[181, null]], "Description": [[50, "description"], [51, "description"], [52, "description"], [198, "description"]], "Dropout Functions": [[90, null], [91, null]], "Dropout Layers": [[150, null], [151, null]], "Example": [[3, null], [3, null], [3, null], [9, "example"], [10, "example"], [11, "example"], [13, "example"], [14, "example"], [15, "example"], [16, "example"], [17, "example"], [18, "example"], [19, "example"], [84, "example"], [180, null], [180, null], [180, null], [195, "example"], [197, "example"], [201, "example"], [202, "example"], [203, "example"], [204, "example"], [205, "example"], [206, null], [206, null], [206, null], [219, "example"], [220, "example"], [221, "example"], [222, "example"], [223, "example"], [224, "example"], [225, "example"], [226, "example"], [227, "example"], [229, "example"], [230, "example"], [231, "example"], [232, "example"], [233, "example"], [234, "example"], [235, "example"], [236, "example"], [238, "example"], [240, "example"], [242, "example"], [243, "example"], [244, "example"], [245, "example"], [246, "example"], [247, "example"], [248, "example"], [249, "example"], [250, "example"], [251, "example"], [252, "example"], [253, "example"], [255, "example"], [257, "example"], [261, "example"], [263, "example"], [264, "example"], [265, "example"], [267, "example"], [268, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[196, null]], "Example 2: Adding a new axis to a 2D tensor": [[196, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[196, null]], "Example Usage": [[7, "example-usage"], [23, "example-usage"], [24, "example-usage"], [25, "example-usage"], [27, "example-usage"], [28, "example-usage"], [30, "example-usage"], [31, "example-usage"], [32, "example-usage"], [33, "example-usage"], [117, "example-usage"], [269, "example-usage"], [270, "example-usage"], [280, "example-usage"]], "Example Use Cases": [[199, "example-use-cases"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [8, "examples"], [20, "examples"], [21, "examples"], [34, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [47, "examples"], [48, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [53, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [61, "examples"], [62, "examples"], [63, "examples"], [64, "examples"], [65, "examples"], [66, "examples"], [67, "examples"], [68, "examples"], [69, "examples"], [71, "examples"], [72, "examples"], [74, "examples"], [75, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [79, "examples"], [80, "examples"], [81, "examples"], [82, "examples"], [85, "examples"], [86, "examples"], [87, "examples"], [88, "examples"], [89, "examples"], [92, "examples"], [94, "examples"], [95, "examples"], [96, "examples"], [97, "examples"], [99, "examples"], [100, "examples"], [101, "examples"], [103, "examples"], [104, "examples"], [105, "examples"], [106, "examples"], [107, "examples"], [108, "examples"], [109, "examples"], [110, "examples"], [112, "examples"], [113, "examples"], [114, "examples"], [116, "examples"], [118, "examples"], [119, "examples"], [120, "examples"], [121, "examples"], [122, "examples"], [124, "examples"], [126, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [130, "examples"], [131, "examples"], [132, "examples"], [133, "examples"], [134, "examples"], [135, "examples"], [136, "examples"], [137, "examples"], [138, "examples"], [139, "examples"], [141, "examples"], [142, "examples"], [143, "examples"], [145, "examples"], [146, "examples"], [147, "examples"], [148, "examples"], [149, "examples"], [152, "examples"], [153, "examples"], [154, "examples"], [156, "examples"], [157, "examples"], [158, "examples"], [159, "examples"], [160, "examples"], [162, "examples"], [163, "examples"], [164, "examples"], [165, "examples"], [166, "examples"], [167, "examples"], [168, "examples"], [170, "examples"], [171, "examples"], [172, "examples"], [173, "examples"], [174, "examples"], [175, "examples"], [176, "examples"], [177, "examples"], [178, "examples"], [181, "examples"], [182, "examples"], [183, "examples"], [184, "examples"], [185, "examples"], [186, "examples"], [187, "examples"], [188, "examples"], [189, "examples"], [190, "examples"], [191, "examples"], [192, "examples"], [193, "examples"], [198, "examples"], [207, "examples"], [208, "examples"], [209, "examples"], [210, "examples"], [211, "examples"], [213, "examples"], [214, "examples"], [215, "examples"], [216, "examples"], [217, "examples"], [218, "examples"], [237, "examples"], [239, "examples"], [241, "examples"], [254, "examples"], [256, "examples"], [259, "examples"], [260, "examples"], [262, "examples"], [266, "examples"], [271, "examples"], [272, "examples"], [273, "examples"], [274, "examples"], [275, "examples"], [276, "examples"], [277, "examples"], [278, "examples"]], "Features": [[8, "features"]], "Forward Calculation": [[9, "forward-calculation"], [10, "forward-calculation"], [11, "forward-calculation"], [13, "forward-calculation"], [14, "forward-calculation"], [15, "forward-calculation"], [16, "forward-calculation"], [17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [34, "forward-calculation"], [43, "forward-calculation"], [49, "forward-calculation"], [65, "forward-calculation"], [66, "forward-calculation"], [67, "forward-calculation"], [68, "forward-calculation"], [69, "forward-calculation"], [71, "forward-calculation"], [72, "forward-calculation"], [74, "forward-calculation"], [75, "forward-calculation"], [76, "forward-calculation"], [77, "forward-calculation"], [78, "forward-calculation"], [79, "forward-calculation"], [84, "forward-calculation"], [92, "forward-calculation"], [94, "forward-calculation"], [105, "forward-calculation"], [106, "forward-calculation"], [107, "forward-calculation"], [116, "forward-calculation"], [118, "forward-calculation"], [119, "forward-calculation"], [120, "forward-calculation"], [121, "forward-calculation"], [122, "forward-calculation"], [126, "forward-calculation"], [127, "forward-calculation"], [130, "forward-calculation"], [131, "forward-calculation"], [132, "forward-calculation"], [133, "forward-calculation"], [134, "forward-calculation"], [135, "forward-calculation"], [136, "forward-calculation"], [137, "forward-calculation"], [138, "forward-calculation"], [139, "forward-calculation"], [141, "forward-calculation"], [142, "forward-calculation"], [143, "forward-calculation"], [145, "forward-calculation"], [146, "forward-calculation"], [147, "forward-calculation"], [148, "forward-calculation"], [149, "forward-calculation"], [152, "forward-calculation"], [153, "forward-calculation"], [154, "forward-calculation"], [156, "forward-calculation"], [157, "forward-calculation"], [158, "forward-calculation"], [159, "forward-calculation"], [160, "forward-calculation"], [162, "forward-calculation"], [163, "forward-calculation"], [164, "forward-calculation"], [165, "forward-calculation"], [166, "forward-calculation"], [167, "forward-calculation"], [168, "forward-calculation"], [170, "forward-calculation"], [171, "forward-calculation"], [172, "forward-calculation"], [173, "forward-calculation"], [174, "forward-calculation"], [175, "forward-calculation"], [176, "forward-calculation"], [177, "forward-calculation"], [178, "forward-calculation"], [208, "forward-calculation"], [209, "forward-calculation"], [210, "forward-calculation"], [211, "forward-calculation"], [212, "forward-calculation"], [213, "forward-calculation"], [214, "forward-calculation"], [215, "forward-calculation"], [216, "forward-calculation"], [217, "forward-calculation"], [218, "forward-calculation"], [229, "forward-calculation"], [230, "forward-calculation"], [231, "forward-calculation"], [232, "forward-calculation"], [233, "forward-calculation"], [234, "forward-calculation"], [235, "forward-calculation"], [236, "forward-calculation"], [237, "forward-calculation"], [238, "forward-calculation"], [239, "forward-calculation"], [240, "forward-calculation"], [241, "forward-calculation"], [242, "forward-calculation"], [243, "forward-calculation"], [244, "forward-calculation"], [245, "forward-calculation"], [246, "forward-calculation"], [247, "forward-calculation"], [248, "forward-calculation"], [249, "forward-calculation"], [250, "forward-calculation"], [251, "forward-calculation"], [252, "forward-calculation"], [253, "forward-calculation"], [255, "forward-calculation"], [257, "forward-calculation"], [259, "forward-calculation"], [260, "forward-calculation"], [261, "forward-calculation"], [262, "forward-calculation"], [263, "forward-calculation"], [264, "forward-calculation"], [265, "forward-calculation"], [266, "forward-calculation"], [267, "forward-calculation"], [268, "forward-calculation"], [271, "forward-calculation"], [272, "forward-calculation"], [273, "forward-calculation"], [274, "forward-calculation"], [275, "forward-calculation"], [276, "forward-calculation"], [277, "forward-calculation"], [278, "forward-calculation"]], "Function Signature": [[9, "function-signature"], [10, "function-signature"], [11, "function-signature"], [13, "function-signature"], [14, "function-signature"], [15, "function-signature"], [16, "function-signature"], [17, "function-signature"], [18, "function-signature"], [19, "function-signature"], [21, "function-signature"], [23, "function-signature"], [24, "function-signature"], [25, "function-signature"], [27, "function-signature"], [28, "function-signature"], [31, "function-signature"], [32, "function-signature"], [33, "function-signature"], [35, "function-signature"], [36, "function-signature"], [37, "function-signature"], [38, "function-signature"], [39, "function-signature"], [40, "function-signature"], [41, "function-signature"], [42, "function-signature"], [44, "function-signature"], [45, "function-signature"], [46, "function-signature"], [47, "function-signature"], [48, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [54, "function-signature"], [55, "function-signature"], [56, "function-signature"], [57, "function-signature"], [59, "function-signature"], [61, "function-signature"], [71, "function-signature"], [72, "function-signature"], [74, "function-signature"], [75, "function-signature"], [76, "function-signature"], [77, "function-signature"], [78, "function-signature"], [79, "function-signature"], [80, "function-signature"], [81, "function-signature"], [82, "function-signature"], [84, "function-signature"], [85, "function-signature"], [86, "function-signature"], [87, "function-signature"], [88, "function-signature"], [89, "function-signature"], [92, "function-signature"], [94, "function-signature"], [95, "function-signature"], [96, "function-signature"], [97, "function-signature"], [99, "function-signature"], [100, "function-signature"], [101, "function-signature"], [103, "function-signature"], [104, "function-signature"], [105, "function-signature"], [106, "function-signature"], [107, "function-signature"], [108, "function-signature"], [109, "function-signature"], [110, "function-signature"], [112, "function-signature"], [113, "function-signature"], [114, "function-signature"], [116, "function-signature"], [117, "function-signature"], [124, "function-signature"], [126, "function-signature"], [127, "function-signature"], [128, "function-signature"], [129, "function-signature"], [130, "function-signature"], [131, "function-signature"], [195, "function-signature"], [197, "function-signature"], [198, "function-signature"], [201, "function-signature"], [202, "function-signature"], [203, "function-signature"], [204, "function-signature"], [205, "function-signature"], [208, "function-signature"], [209, "function-signature"], [210, "function-signature"], [211, "function-signature"], [212, "function-signature"], [213, "function-signature"], [214, "function-signature"], [215, "function-signature"], [216, "function-signature"], [217, "function-signature"], [218, "function-signature"], [219, "function-signature"], [220, "function-signature"], [221, "function-signature"], [222, "function-signature"], [223, "function-signature"], [224, "function-signature"], [225, "function-signature"], [226, "function-signature"], [227, "function-signature"], [229, "function-signature"], [230, "function-signature"], [231, "function-signature"], [232, "function-signature"], [233, "function-signature"], [234, "function-signature"], [235, "function-signature"], [236, "function-signature"], [237, "function-signature"], [238, "function-signature"], [239, "function-signature"], [240, "function-signature"], [241, "function-signature"], [242, "function-signature"], [243, "function-signature"], [244, "function-signature"], [245, "function-signature"], [246, "function-signature"], [247, "function-signature"], [248, "function-signature"], [249, "function-signature"], [250, "function-signature"], [251, "function-signature"], [252, "function-signature"], [253, "function-signature"], [254, "function-signature"], [255, "function-signature"], [256, "function-signature"], [257, "function-signature"], [259, "function-signature"], [260, "function-signature"], [261, "function-signature"], [262, "function-signature"], [263, "function-signature"], [264, "function-signature"], [265, "function-signature"], [266, "function-signature"], [267, "function-signature"], [268, "function-signature"]], "Fused Layers": [[123, null]], "Future Work": [[4, "future-work"]], "Getting Started": [[182, "getting-started"]], "How It Works": [[195, "how-it-works"], [197, "how-it-works"]], "Image Datasets": [[6, null]], "Image Transformations": [[279, null]], "Inception": [[22, null]], "InceptionResNet": [[26, null]], "Indexing and slicing": [[207, null]], "Inspecting Optimizer State": [[182, null], [183, null], [184, null], [185, null], [186, null], [187, null], [188, null], [189, null], [190, null], [191, null], [192, null], [193, null]], "Integration with lucid": [[3, "integration-with-lucid"], [180, "integration-with-lucid"], [206, "integration-with-lucid"], [280, "integration-with-lucid"]], "Iterating through a tensor": [[207, null]], "Key Components": [[3, "key-components"], [180, "key-components"]], "Key Features": [[4, "key-features"], [7, "key-features"], [182, "key-features"], [206, "key-features"]], "Key Transformations": [[280, "key-transformations"]], "LeNet": [[30, null]], "Learn More": [[206, null]], "Limitations": [[7, "limitations"]], "Linear Algebra Operations": [[12, null]], "Linear Functions": [[91, null], [93, null]], "Linear Layers": [[151, null], [155, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[91, null], [98, null]], "Loss Layers": [[151, null], [161, null]], "Lucid": [[7, null]], "MNIST": [[5, null]], "Matrix Multiplication Rules": [[212, "matrix-multiplication-rules"]], "Metadata Captured": [[198, "metadata-captured"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [26, "methods"], [30, "methods"], [53, "methods"], [63, "methods"], [64, "methods"], [181, "methods"], [207, "methods"]], "Modules": [[151, null]], "Normalization Functions": [[91, null], [102, null]], "Normalization Layers": [[151, null], [169, null]], "Notes": [[7, "notes"]], "Optimizers": [[194, null]], "Organizing Models": [[180, "organizing-models"]], "Overview": [[3, "overview"], [4, "overview"], [7, "overview"], [22, "overview"], [23, "overview"], [24, "overview"], [25, "overview"], [26, "overview"], [27, "overview"], [28, "overview"], [30, "overview"], [31, "overview"], [32, "overview"], [33, "overview"], [35, "overview"], [36, "overview"], [37, "overview"], [38, "overview"], [39, "overview"], [40, "overview"], [41, "overview"], [42, "overview"], [44, "overview"], [45, "overview"], [46, "overview"], [47, "overview"], [48, "overview"], [180, "overview"], [182, "overview"], [206, "overview"], [280, "overview"]], "Parameters": [[1, "parameters"], [5, "parameters"], [9, "parameters"], [10, "parameters"], [11, "parameters"], [13, "parameters"], [14, "parameters"], [15, "parameters"], [16, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [20, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [30, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [61, "parameters"], [62, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [71, "parameters"], [72, "parameters"], [74, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [87, "parameters"], [88, "parameters"], [89, "parameters"], [92, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [103, "parameters"], [104, "parameters"], [105, "parameters"], [106, "parameters"], [107, "parameters"], [108, "parameters"], [109, "parameters"], [110, "parameters"], [112, "parameters"], [113, "parameters"], [114, "parameters"], [116, "parameters"], [117, "parameters"], [118, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [122, "parameters"], [124, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [152, "parameters"], [153, "parameters"], [154, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"], [159, "parameters"], [160, "parameters"], [162, "parameters"], [163, "parameters"], [164, "parameters"], [165, "parameters"], [166, "parameters"], [167, "parameters"], [168, "parameters"], [170, "parameters"], [171, "parameters"], [172, "parameters"], [173, "parameters"], [174, "parameters"], [175, "parameters"], [176, "parameters"], [177, "parameters"], [178, "parameters"], [183, "parameters"], [184, "parameters"], [185, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [189, "parameters"], [190, "parameters"], [191, "parameters"], [192, "parameters"], [193, "parameters"], [197, "parameters"], [198, "parameters"], [201, "parameters"], [202, "parameters"], [203, "parameters"], [204, "parameters"], [205, "parameters"], [207, "parameters"], [208, "parameters"], [209, "parameters"], [210, "parameters"], [211, "parameters"], [212, "parameters"], [213, "parameters"], [214, "parameters"], [215, "parameters"], [216, "parameters"], [217, "parameters"], [218, "parameters"], [219, "parameters"], [220, "parameters"], [221, "parameters"], [222, "parameters"], [223, "parameters"], [224, "parameters"], [225, "parameters"], [226, "parameters"], [227, "parameters"], [229, "parameters"], [230, "parameters"], [231, "parameters"], [232, "parameters"], [233, "parameters"], [234, "parameters"], [235, "parameters"], [236, "parameters"], [237, "parameters"], [238, "parameters"], [239, "parameters"], [240, "parameters"], [241, "parameters"], [242, "parameters"], [243, "parameters"], [244, "parameters"], [245, "parameters"], [246, "parameters"], [247, "parameters"], [248, "parameters"], [249, "parameters"], [250, "parameters"], [251, "parameters"], [252, "parameters"], [253, "parameters"], [254, "parameters"], [255, "parameters"], [256, "parameters"], [257, "parameters"], [259, "parameters"], [260, "parameters"], [261, "parameters"], [262, "parameters"], [263, "parameters"], [264, "parameters"], [265, "parameters"], [266, "parameters"], [267, "parameters"], [268, "parameters"], [269, "parameters"], [270, "parameters"], [271, "parameters"], [272, "parameters"], [273, "parameters"], [274, "parameters"], [275, "parameters"], [276, "parameters"], [277, "parameters"], [278, "parameters"]], "Performing backpropagation": [[207, null]], "Pooling Functions": [[91, null], [111, null]], "Pooling Layers": [[151, null], [179, null]], "Potential Pitfalls": [[195, "potential-pitfalls"], [197, "potential-pitfalls"]], "Properties": [[64, "properties"], [207, "properties"]], "Raises": [[9, "raises"], [10, "raises"], [11, "raises"], [13, "raises"], [14, "raises"], [15, "raises"], [16, "raises"], [17, "raises"], [18, "raises"], [19, "raises"]], "Random Number Generations": [[200, null]], "References": [[5, "references"], [121, "references"], [182, "references"]], "ResNet": [[34, null]], "Returns": [[9, "returns"], [10, "returns"], [11, "returns"], [13, "returns"], [14, "returns"], [15, "returns"], [16, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [21, "returns"], [23, "returns"], [24, "returns"], [25, "returns"], [27, "returns"], [28, "returns"], [31, "returns"], [32, "returns"], [33, "returns"], [35, "returns"], [36, "returns"], [37, "returns"], [38, "returns"], [39, "returns"], [40, "returns"], [41, "returns"], [42, "returns"], [44, "returns"], [45, "returns"], [46, "returns"], [47, "returns"], [48, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [54, "returns"], [55, "returns"], [56, "returns"], [57, "returns"], [59, "returns"], [61, "returns"], [71, "returns"], [72, "returns"], [74, "returns"], [75, "returns"], [76, "returns"], [77, "returns"], [78, "returns"], [79, "returns"], [80, "returns"], [81, "returns"], [82, "returns"], [84, "returns"], [85, "returns"], [86, "returns"], [87, "returns"], [88, "returns"], [89, "returns"], [92, "returns"], [94, "returns"], [95, "returns"], [96, "returns"], [97, "returns"], [99, "returns"], [100, "returns"], [101, "returns"], [103, "returns"], [104, "returns"], [105, "returns"], [106, "returns"], [107, "returns"], [108, "returns"], [109, "returns"], [110, "returns"], [112, "returns"], [113, "returns"], [114, "returns"], [116, "returns"], [117, "returns"], [122, "returns"], [124, "returns"], [126, "returns"], [127, "returns"], [128, "returns"], [129, "returns"], [130, "returns"], [131, "returns"], [195, "returns"], [197, "returns"], [201, "returns"], [202, "returns"], [203, "returns"], [204, "returns"], [205, "returns"], [208, "returns"], [209, "returns"], [210, "returns"], [211, "returns"], [212, "returns"], [213, "returns"], [214, "returns"], [215, "returns"], [216, "returns"], [217, "returns"], [218, "returns"], [219, "returns"], [220, "returns"], [221, "returns"], [222, "returns"], [223, "returns"], [224, "returns"], [225, "returns"], [226, "returns"], [227, "returns"], [229, "returns"], [230, "returns"], [231, "returns"], [232, "returns"], [233, "returns"], [234, "returns"], [235, "returns"], [236, "returns"], [237, "returns"], [238, "returns"], [239, "returns"], [240, "returns"], [241, "returns"], [242, "returns"], [243, "returns"], [244, "returns"], [245, "returns"], [246, "returns"], [247, "returns"], [248, "returns"], [249, "returns"], [250, "returns"], [251, "returns"], [252, "returns"], [253, "returns"], [254, "returns"], [255, "returns"], [256, "returns"], [257, "returns"], [259, "returns"], [260, "returns"], [261, "returns"], [262, "returns"], [263, "returns"], [264, "returns"], [265, "returns"], [266, "returns"], [267, "returns"], [268, "returns"]], "SENet": [[43, null]], "SKNet": [[49, null]], "See Also": [[182, "see-also"]], "Selective Kernel": [[123, null]], "Squeeze-and-Excitation": [[123, null]], "Summary Table": [[61, "summary-table"]], "Tensor Generating Functions": [[228, null]], "Tensor Operations": [[228, null]], "Tensor Utilites": [[258, null]], "Type Definitions": [[199, "type-definitions"]], "Unary Functions": [[228, null]], "Usage": [[4, "usage"], [62, "usage"], [117, "usage"], [195, "usage"], [196, "usage"], [197, "usage"], [259, "usage"], [269, "usage"], [270, "usage"], [280, "usage"]], "Use another Tensor as input": [[254, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using the ASGD Optimizer": [[183, null]], "Using the Adadelta Optimizer": [[184, null]], "Using the Adagrad Optimizer": [[185, null]], "Using the Adam Optimizer": [[186, null]], "Using the AdamW Optimizer": [[187, null]], "Using the Adamax Optimizer": [[188, null]], "Using the NAdam Optimizer": [[189, null]], "Using the RAdam Optimizer": [[190, null]], "Using the RMSprop Optimizer": [[191, null]], "Using the Rprop Optimizer": [[192, null]], "Using the SGD Optimizer": [[193, null]], "Utility Functions": [[91, null], [115, null]], "VGGNet": [[53, null]], "Weight Initializations": [[125, null]], "Why Use Type Aliases?": [[199, null]], "ZFNet": [[58, null]], "activation Functions": [[91, null]], "alexnet": [[21, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "inception_resnet_v1": [[27, null]], "inception_resnet_v2": [[28, null]], "inception_v1": [[23, null]], "inception_v3": [[24, null]], "inception_v4": [[25, null]], "lenet_1": [[31, null]], "lenet_4": [[32, null]], "lenet_5": [[33, null]], "lucid.Tensor": [[207, null]], "lucid.abs": [[229, null]], "lucid.add": [[208, null]], "lucid.arange": [[219, null]], "lucid.arccos": [[230, null]], "lucid.arcsin": [[231, null]], "lucid.arctan": [[232, null]], "lucid.clip": [[233, null]], "lucid.concatenate": [[255, null]], "lucid.cos": [[234, null]], "lucid.cosh": [[235, null]], "lucid.cube": [[236, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[220, null]], "lucid.div": [[209, null]], "lucid.dot": [[210, null]], "lucid.empty": [[221, null]], "lucid.empty_like": [[222, null]], "lucid.exp": [[237, null]], "lucid.eye": [[223, null]], "lucid.flatten": [[256, null]], "lucid.grad_enabled": [[195, null]], "lucid.hstack": [[257, null]], "lucid.inner": [[211, null]], "lucid.linalg": [[8, null]], "lucid.linalg.cholesky": [[9, null]], "lucid.linalg.det": [[10, null]], "lucid.linalg.eig": [[11, null]], "lucid.linalg.inv": [[13, null]], "lucid.linalg.matrix_power": [[14, null]], "lucid.linalg.norm": [[15, null]], "lucid.linalg.pinv": [[16, null]], "lucid.linalg.qr": [[17, null]], "lucid.linalg.solve": [[18, null]], "lucid.linalg.svd": [[19, null]], "lucid.log": [[238, null]], "lucid.matmul": [[212, null]], "lucid.max": [[239, null]], "lucid.maximum": [[213, null]], "lucid.mean": [[240, null]], "lucid.meshgrid": [[259, null]], "lucid.min": [[241, null]], "lucid.minimum": [[214, null]], "lucid.models": [[60, null]], "lucid.mul": [[215, null]], "lucid.newaxis": [[196, null]], "lucid.nn": [[180, null]], "lucid.nn.functional": [[91, null]], "lucid.no_grad": [[197, null]], "lucid.ones": [[224, null]], "lucid.ones_like": [[225, null]], "lucid.optim": [[182, null]], "lucid.outer": [[216, null]], "lucid.pad": [[260, null]], "lucid.power": [[217, null]], "lucid.random": [[206, null]], "lucid.random.rand": [[201, null]], "lucid.random.randint": [[202, null]], "lucid.random.randn": [[203, null]], "lucid.random.seed": [[204, null]], "lucid.random.uniform": [[205, null]], "lucid.ravel": [[261, null]], "lucid.reciprocal": [[242, null]], "lucid.register_model": [[198, null]], "lucid.repeat": [[262, null]], "lucid.reshape": [[263, null]], "lucid.sign": [[243, null]], "lucid.sin": [[244, null]], "lucid.sinh": [[245, null]], "lucid.sqrt": [[246, null]], "lucid.square": [[247, null]], "lucid.squeeze": [[264, null]], "lucid.stack": [[265, null]], "lucid.sub": [[218, null]], "lucid.sum": [[248, null]], "lucid.tan": [[249, null]], "lucid.tanh": [[250, null]], "lucid.tensor": [[254, null]], "lucid.tile": [[266, null]], "lucid.trace": [[251, null]], "lucid.transforms": [[280, null]], "lucid.transpose": [[252, null]], "lucid.types": [[199, null]], "lucid.unsqueeze": [[267, null]], "lucid.var": [[253, null]], "lucid.vstack": [[268, null]], "lucid.zeros": [[226, null]], "lucid.zeros_like": [[227, null]], "models.sk_resnet_18": [[50, null]], "models.sk_resnet_34": [[51, null]], "models.sk_resnet_50": [[52, null]], "models.summarize": [[61, null]], "nn.AdaptiveAvgPool1d": [[170, null]], "nn.AdaptiveAvgPool2d": [[171, null]], "nn.AdaptiveAvgPool3d": [[172, null]], "nn.AlphaDropout": [[145, null]], "nn.AvgPool1d": [[173, null]], "nn.AvgPool2d": [[174, null]], "nn.AvgPool3d": [[175, null]], "nn.BCELoss": [[156, null]], "nn.BatchNorm1d": [[162, null]], "nn.BatchNorm2d": [[163, null]], "nn.BatchNorm3d": [[164, null]], "nn.Bilinear": [[152, null]], "nn.Buffer": [[62, null]], "nn.Conv1d": [[141, null]], "nn.Conv2d": [[142, null]], "nn.Conv3d": [[143, null]], "nn.ConvBNReLU1d": [[118, null]], "nn.ConvBNReLU2d": [[119, null]], "nn.ConvBNReLU3d": [[120, null]], "nn.CrossEntropyLoss": [[157, null]], "nn.Dropout": [[146, null]], "nn.Dropout1d": [[147, null]], "nn.Dropout2d": [[148, null]], "nn.Dropout3d": [[149, null]], "nn.ELU": [[132, null]], "nn.GELU": [[133, null]], "nn.HuberLoss": [[158, null]], "nn.Identity": [[153, null]], "nn.InstanceNorm1d": [[165, null]], "nn.InstanceNorm2d": [[166, null]], "nn.InstanceNorm3d": [[167, null]], "nn.LayerNorm": [[168, null]], "nn.LeakyReLU": [[134, null]], "nn.Linear": [[154, null]], "nn.MSELoss": [[159, null]], "nn.MaxPool1d": [[176, null]], "nn.MaxPool2d": [[177, null]], "nn.MaxPool3d": [[178, null]], "nn.Module": [[63, null]], "nn.ModuleDict": [[65, null]], "nn.ModuleList": [[66, null]], "nn.NLLLoss": [[160, null]], "nn.Parameter": [[64, null]], "nn.ParameterDict": [[67, null]], "nn.ParameterList": [[68, null]], "nn.ReLU": [[135, null]], "nn.SELU": [[136, null]], "nn.SEModule": [[121, null]], "nn.SelectiveKernel": [[122, null]], "nn.Sequential": [[69, null]], "nn.Sigmoid": [[137, null]], "nn.Softmax": [[138, null]], "nn.Tanh": [[139, null]], "nn.functional.adaptive_avg_pool1d": [[105, null]], "nn.functional.adaptive_avg_pool2d": [[106, null]], "nn.functional.adaptive_avg_pool3d": [[107, null]], "nn.functional.alpha_dropout": [[85, null]], "nn.functional.avg_pool1d": [[108, null]], "nn.functional.avg_pool2d": [[109, null]], "nn.functional.avg_pool3d": [[110, null]], "nn.functional.batch_norm": [[101, null]], "nn.functional.bilinear": [[92, null]], "nn.functional.binary_cross_entropy": [[95, null]], "nn.functional.conv1d": [[80, null]], "nn.functional.conv2d": [[81, null]], "nn.functional.conv3d": [[82, null]], "nn.functional.cross_entropy": [[96, null]], "nn.functional.dropout": [[86, null]], "nn.functional.dropout1d": [[87, null]], "nn.functional.dropout2d": [[88, null]], "nn.functional.dropout3d": [[89, null]], "nn.functional.elu": [[71, null]], "nn.functional.gelu": [[72, null]], "nn.functional.huber_loss": [[97, null]], "nn.functional.instance_norm": [[103, null]], "nn.functional.interpolate": [[116, null]], "nn.functional.layer_norm": [[104, null]], "nn.functional.leaky_relu": [[74, null]], "nn.functional.linear": [[94, null]], "nn.functional.max_pool1d": [[112, null]], "nn.functional.max_pool2d": [[113, null]], "nn.functional.max_pool3d": [[114, null]], "nn.functional.mse_loss": [[99, null]], "nn.functional.nll_loss": [[100, null]], "nn.functional.relu": [[75, null]], "nn.functional.rotate": [[117, null]], "nn.functional.selu": [[76, null]], "nn.functional.sigmoid": [[77, null]], "nn.functional.softmax": [[78, null]], "nn.functional.tanh": [[79, null]], "nn.functional.unfold": [[84, null]], "nn.init.constant": [[124, null]], "nn.init.kaiming_normal": [[126, null]], "nn.init.kaiming_uniform": [[127, null]], "nn.init.normal": [[128, null]], "nn.init.uniform": [[129, null]], "nn.init.xavier_normal": [[130, null]], "nn.init.xavier_uniform": [[131, null]], "optim.ASGD": [[183, null]], "optim.Adadelta": [[184, null]], "optim.Adagrad": [[185, null]], "optim.Adam": [[186, null]], "optim.AdamW": [[187, null]], "optim.Adamax": [[188, null]], "optim.NAdam": [[189, null]], "optim.Optimizer": [[181, null]], "optim.RAdam": [[190, null]], "optim.RMSprop": [[191, null]], "optim.Rprop": [[192, null]], "optim.SGD": [[193, null]], "resnet_1001": [[35, null]], "resnet_101": [[36, null]], "resnet_152": [[37, null]], "resnet_18": [[38, null]], "resnet_200": [[39, null]], "resnet_269": [[40, null]], "resnet_34": [[41, null]], "resnet_50": [[42, null]], "se_resnet_101": [[44, null]], "se_resnet_152": [[45, null]], "se_resnet_18": [[46, null]], "se_resnet_34": [[47, null]], "se_resnet_50": [[48, null]], "transforms.CenterCrop": [[271, null]], "transforms.Compose": [[269, null]], "transforms.Normalize": [[272, null]], "transforms.RandomCrop": [[273, null]], "transforms.RandomGrayscale": [[274, null]], "transforms.RandomHorizontalFlip": [[275, null]], "transforms.RandomRotation": [[276, null]], "transforms.RandomVerticalFlip": [[277, null]], "transforms.Resize": [[278, null]], "transforms.ToTensor": [[270, null]], "vggnet_11": [[54, null]], "vggnet_13": [[55, null]], "vggnet_16": [[56, null]], "vggnet_19": [[57, null]], "zfnet": [[59, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/MNIST", "datasets/image/index", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/conv/alex/AlexNet", "models/conv/alex/alexnet", "models/conv/inception/Inception", "models/conv/inception/inception_v1", "models/conv/inception/inception_v3", "models/conv/inception/inception_v4", "models/conv/inception_res/InceptionResNet", "models/conv/inception_res/inception_resnet_v1", "models/conv/inception_res/inception_resnet_v2", "models/conv/index", "models/conv/lenet/LeNet", "models/conv/lenet/lenet_1", "models/conv/lenet/lenet_4", "models/conv/lenet/lenet_5", "models/conv/resnet/ResNet", "models/conv/resnet/resnet_1001", "models/conv/resnet/resnet_101", "models/conv/resnet/resnet_152", "models/conv/resnet/resnet_18", "models/conv/resnet/resnet_200", "models/conv/resnet/resnet_269", "models/conv/resnet/resnet_34", "models/conv/resnet/resnet_50", "models/conv/senet/SENet", "models/conv/senet/se_resnet_101", "models/conv/senet/se_resnet_152", "models/conv/senet/se_resnet_18", "models/conv/senet/se_resnet_34", "models/conv/senet/se_resnet_50", "models/conv/sknet/SKNet", "models/conv/sknet/sk_resnet_18", "models/conv/sknet/sk_resnet_34", "models/conv/sknet/sk_resnet_50", "models/conv/vgg/VGGNet", "models/conv/vgg/vggnet_11", "models/conv/vgg/vggnet_13", "models/conv/vgg/vggnet_16", "models/conv/vgg/vggnet_19", "models/conv/zfnet/ZFNet", "models/conv/zfnet/zfnet", "models/models", "models/summarize", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/fused/ConvBNReLU1d", "nn/fused/ConvBNReLU2d", "nn/fused/ConvBNReLU3d", "nn/fused/SEModule", "nn/fused/SelectiveKernel", "nn/fused/index", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/nn", "optim/Optimizer", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "others/types", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/meshgrid", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/conv/alex/AlexNet.rst", "models/conv/alex/alexnet.rst", "models/conv/inception/Inception.rst", "models/conv/inception/inception_v1.rst", "models/conv/inception/inception_v3.rst", "models/conv/inception/inception_v4.rst", "models/conv/inception_res/InceptionResNet.rst", "models/conv/inception_res/inception_resnet_v1.rst", "models/conv/inception_res/inception_resnet_v2.rst", "models/conv/index.rst", "models/conv/lenet/LeNet.rst", "models/conv/lenet/lenet_1.rst", "models/conv/lenet/lenet_4.rst", "models/conv/lenet/lenet_5.rst", "models/conv/resnet/ResNet.rst", "models/conv/resnet/resnet_1001.rst", "models/conv/resnet/resnet_101.rst", "models/conv/resnet/resnet_152.rst", "models/conv/resnet/resnet_18.rst", "models/conv/resnet/resnet_200.rst", "models/conv/resnet/resnet_269.rst", "models/conv/resnet/resnet_34.rst", "models/conv/resnet/resnet_50.rst", "models/conv/senet/SENet.rst", "models/conv/senet/se_resnet_101.rst", "models/conv/senet/se_resnet_152.rst", "models/conv/senet/se_resnet_18.rst", "models/conv/senet/se_resnet_34.rst", "models/conv/senet/se_resnet_50.rst", "models/conv/sknet/SKNet.rst", "models/conv/sknet/sk_resnet_18.rst", "models/conv/sknet/sk_resnet_34.rst", "models/conv/sknet/sk_resnet_50.rst", "models/conv/vgg/VGGNet.rst", "models/conv/vgg/vggnet_11.rst", "models/conv/vgg/vggnet_13.rst", "models/conv/vgg/vggnet_16.rst", "models/conv/vgg/vggnet_19.rst", "models/conv/zfnet/ZFNet.rst", "models/conv/zfnet/zfnet.rst", "models/models.rst", "models/summarize.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/fused/ConvBNReLU1d.rst", "nn/fused/ConvBNReLU2d.rst", "nn/fused/ConvBNReLU3d.rst", "nn/fused/SEModule.rst", "nn/fused/SelectiveKernel.rst", "nn/fused/index.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "others/types.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"abs() (in module lucid)": [[229, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[184, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[185, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[186, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[188, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[187, "lucid.optim.AdamW", false]], "adaptive_avg_pool1d() (in module lucid.nn.functional)": [[105, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[106, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[107, "lucid.nn.functional.adaptive_avg_pool3d", false]], "adaptiveavgpool1d (class in lucid.nn)": [[170, "lucid.nn.AdaptiveAvgPool1d", false]], "adaptiveavgpool2d (class in lucid.nn)": [[171, "lucid.nn.AdaptiveAvgPool2d", false]], "adaptiveavgpool3d (class in lucid.nn)": [[172, "lucid.nn.AdaptiveAvgPool3d", false]], "add() (in module lucid)": [[208, "lucid.add", false]], "alexnet (class in lucid.models)": [[20, "lucid.models.AlexNet", false]], "alexnet() (in module lucid.models)": [[21, "lucid.models.alexnet", false]], "alpha_dropout() (in module lucid.nn.functional)": [[85, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[145, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[219, "lucid.arange", false]], "arccos() (in module lucid)": [[230, "lucid.arccos", false]], "arcsin() (in module lucid)": [[231, "lucid.arcsin", false]], "arctan() (in module lucid)": [[232, "lucid.arctan", false]], "asgd (class in lucid.optim)": [[183, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[108, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[109, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[110, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[173, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[174, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[175, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[101, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[162, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[163, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[164, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[156, "lucid.nn.BCELoss", false]], "bilinear (class in lucid.nn)": [[152, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[92, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[95, "lucid.nn.functional.binary_cross_entropy", false]], "buffer (class in lucid.nn)": [[62, "lucid.nn.Buffer", false]], "centercrop (class in lucid.transforms)": [[271, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[9, "lucid.linalg.cholesky", false]], "clip() (in module lucid)": [[233, "lucid.clip", false]], "compose (class in lucid.transforms)": [[269, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[255, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[124, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[141, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[80, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[142, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[81, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[143, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[82, "lucid.nn.functional.conv3d", false]], "convbnrelu1d (class in lucid.nn)": [[118, "lucid.nn.ConvBNReLU1d", false]], "convbnrelu2d (class in lucid.nn)": [[119, "lucid.nn.ConvBNReLU2d", false]], "convbnrelu3d (class in lucid.nn)": [[120, "lucid.nn.ConvBNReLU3d", false]], "cos() (in module lucid)": [[234, "lucid.cos", false]], "cosh() (in module lucid)": [[235, "lucid.cosh", false]], "cross_entropy() (in module lucid.nn.functional)": [[96, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[157, "lucid.nn.CrossEntropyLoss", false]], "cube() (in module lucid)": [[236, "lucid.cube", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "det() (in module lucid.linalg)": [[10, "lucid.linalg.det", false]], "diag() (in module lucid)": [[220, "lucid.diag", false]], "div() (in module lucid)": [[209, "lucid.div", false]], "dot() (in module lucid)": [[210, "lucid.dot", false]], "dropout (class in lucid.nn)": [[146, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[86, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[147, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[87, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[148, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[88, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[149, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[89, "lucid.nn.functional.dropout3d", false]], "eig() (in module lucid.linalg)": [[11, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[132, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[71, "lucid.nn.functional.elu", false]], "empty() (in module lucid)": [[221, "lucid.empty", false]], "empty_like() (in module lucid)": [[222, "lucid.empty_like", false]], "exp() (in module lucid)": [[237, "lucid.exp", false]], "eye() (in module lucid)": [[223, "lucid.eye", false]], "flatten() (in module lucid)": [[256, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[133, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[72, "lucid.nn.functional.gelu", false]], "grad_enabled() (in module lucid)": [[195, "lucid.grad_enabled", false]], "hstack() (in module lucid)": [[257, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[97, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[158, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[153, "lucid.nn.Identity", false]], "inception (class in lucid.models)": [[22, "lucid.models.Inception", false]], "inception_resnet_v1() (in module lucid.models)": [[27, "lucid.models.inception_resnet_v1", false]], "inception_resnet_v2() (in module lucid.models)": [[28, "lucid.models.inception_resnet_v2", false]], "inception_v1() (in module lucid.models)": [[23, "lucid.models.inception_v1", false]], "inception_v3() (in module lucid.models)": [[24, "lucid.models.inception_v3", false]], "inception_v4() (in module lucid.models)": [[25, "lucid.models.inception_v4", false]], "inceptionresnet (class in lucid.models)": [[26, "lucid.models.InceptionResNet", false]], "inner() (in module lucid)": [[211, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[103, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[165, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[166, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[167, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[116, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[13, "lucid.linalg.inv", false]], "kaiming_normal() (in module lucid.nn.init)": [[126, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[127, "lucid.nn.init.kaiming_uniform", false]], "layer_norm() (in module lucid.nn.functional)": [[104, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[168, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[74, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[134, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[30, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[31, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[32, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[33, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[154, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[94, "lucid.nn.functional.linear", false]], "log() (in module lucid)": [[238, "lucid.log", false]], "lucid": [[7, "module-lucid", false]], "matmul() (in module lucid)": [[212, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[14, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[239, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[112, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[113, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[114, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[213, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[176, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[177, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[178, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[240, "lucid.mean", false]], "meshgrid() (in module lucid)": [[259, "lucid.meshgrid", false]], "min() (in module lucid)": [[241, "lucid.min", false]], "minimum() (in module lucid)": [[214, "lucid.minimum", false]], "mnist (class in lucid.datasets)": [[5, "lucid.datasets.MNIST", false]], "module": [[7, "module-lucid", false]], "module (class in lucid.nn)": [[63, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[65, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[66, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[99, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[159, "lucid.nn.MSELoss", false]], "mul() (in module lucid)": [[215, "lucid.mul", false]], "nadam (class in lucid.optim)": [[189, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[100, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[160, "lucid.nn.NLLLoss", false]], "no_grad() (in module lucid)": [[197, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[15, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[128, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[272, "lucid.transforms.Normalize", false]], "ones() (in module lucid)": [[224, "lucid.ones", false]], "ones_like() (in module lucid)": [[225, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[181, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[216, "lucid.outer", false]], "pad() (in module lucid)": [[260, "lucid.pad", false]], "parameter (class in lucid.nn)": [[64, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[67, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[68, "lucid.nn.ParameterList", false]], "pinv() (in module lucid.linalg)": [[16, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[217, "lucid.power", false]], "qr() (in module lucid.linalg)": [[17, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[190, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[201, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[202, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[203, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[273, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[274, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[275, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[276, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[277, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[261, "lucid.ravel", false]], "reciprocal() (in module lucid)": [[242, "lucid.reciprocal", false]], "register_model() (in module lucid)": [[198, "lucid.register_model", false]], "relu (class in lucid.nn)": [[135, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[75, "lucid.nn.functional.relu", false]], "repeat() (in module lucid)": [[262, "lucid.repeat", false]], "reshape() (in module lucid)": [[263, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[278, "lucid.transforms.Resize", false]], "resnet (class in lucid.models)": [[34, "lucid.models.ResNet", false]], "resnet_1001() (in module lucid.models)": [[35, "lucid.models.resnet_1001", false]], "resnet_101() (in module lucid.models)": [[36, "lucid.models.resnet_101", false]], "resnet_152() (in module lucid.models)": [[37, "lucid.models.resnet_152", false]], "resnet_18() (in module lucid.models)": [[38, "lucid.models.resnet_18", false]], "resnet_200() (in module lucid.models)": [[39, "lucid.models.resnet_200", false]], "resnet_269() (in module lucid.models)": [[40, "lucid.models.resnet_269", false]], "resnet_34() (in module lucid.models)": [[41, "lucid.models.resnet_34", false]], "resnet_50() (in module lucid.models)": [[42, "lucid.models.resnet_50", false]], "rmsprop (class in lucid.optim)": [[191, "lucid.optim.RMSprop", false]], "rotate() (in module lucid.nn.functional)": [[117, "lucid.nn.functional.rotate", false]], "rprop (class in lucid.optim)": [[192, "lucid.optim.Rprop", false]], "se_resnet_101() (in module lucid.models)": [[44, "lucid.models.se_resnet_101", false]], "se_resnet_152() (in module lucid.models)": [[45, "lucid.models.se_resnet_152", false]], "se_resnet_18() (in module lucid.models)": [[46, "lucid.models.se_resnet_18", false]], "se_resnet_34() (in module lucid.models)": [[47, "lucid.models.se_resnet_34", false]], "se_resnet_50() (in module lucid.models)": [[48, "lucid.models.se_resnet_50", false]], "seed() (in module lucid.random)": [[204, "lucid.random.seed", false]], "selectivekernel (class in lucid.nn)": [[122, "lucid.nn.SelectiveKernel", false]], "selu (class in lucid.nn)": [[136, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[76, "lucid.nn.functional.selu", false]], "semodule (class in lucid.nn)": [[121, "lucid.nn.SEModule", false]], "senet (class in lucid.models)": [[43, "lucid.models.SENet", false]], "sequential (class in lucid.nn)": [[69, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[193, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[137, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[77, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[243, "lucid.sign", false]], "sin() (in module lucid)": [[244, "lucid.sin", false]], "sinh() (in module lucid)": [[245, "lucid.sinh", false]], "sk_resnet_18() (in module lucid.models)": [[50, "lucid.models.sk_resnet_18", false]], "sk_resnet_34() (in module lucid.models)": [[51, "lucid.models.sk_resnet_34", false]], "sk_resnet_50() (in module lucid.models)": [[52, "lucid.models.sk_resnet_50", false]], "sknet (class in lucid.models)": [[49, "lucid.models.SKNet", false]], "softmax (class in lucid.nn)": [[138, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[78, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[18, "lucid.linalg.solve", false]], "sqrt() (in module lucid)": [[246, "lucid.sqrt", false]], "square() (in module lucid)": [[247, "lucid.square", false]], "squeeze() (in module lucid)": [[264, "lucid.squeeze", false]], "stack() (in module lucid)": [[265, "lucid.stack", false]], "sub() (in module lucid)": [[218, "lucid.sub", false]], "sum() (in module lucid)": [[248, "lucid.sum", false]], "summarize() (in module lucid.models)": [[61, "lucid.models.summarize", false]], "svd() (in module lucid.linalg)": [[19, "lucid.linalg.svd", false]], "tan() (in module lucid)": [[249, "lucid.tan", false]], "tanh (class in lucid.nn)": [[139, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[250, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[79, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[207, "lucid.Tensor", false]], "tensor() (in module lucid)": [[254, "lucid.tensor", false]], "tile() (in module lucid)": [[266, "lucid.tile", false]], "totensor (class in lucid.transforms)": [[270, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[251, "lucid.trace", false]], "transpose() (in module lucid)": [[252, "lucid.transpose", false]], "unfold() (in module lucid.nn.functional)": [[84, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[129, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[205, "lucid.random.uniform", false]], "unsqueeze() (in module lucid)": [[267, "lucid.unsqueeze", false]], "var() (in module lucid)": [[253, "lucid.var", false]], "vggnet (class in lucid.models)": [[53, "lucid.models.VGGNet", false]], "vggnet_11() (in module lucid.models)": [[54, "lucid.models.vggnet_11", false]], "vggnet_13() (in module lucid.models)": [[55, "lucid.models.vggnet_13", false]], "vggnet_16() (in module lucid.models)": [[56, "lucid.models.vggnet_16", false]], "vggnet_19() (in module lucid.models)": [[57, "lucid.models.vggnet_19", false]], "vstack() (in module lucid)": [[268, "lucid.vstack", false]], "xavier_normal() (in module lucid.nn.init)": [[130, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[131, "lucid.nn.init.xavier_uniform", false]], "zeros() (in module lucid)": [[226, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[227, "lucid.zeros_like", false]], "zfnet (class in lucid.models)": [[58, "lucid.models.ZFNet", false]], "zfnet() (in module lucid.models)": [[59, "lucid.models.zfnet", false]]}, "objects": {"": [[7, 0, 0, "-", "lucid"]], "lucid": [[207, 1, 1, "", "Tensor"], [229, 2, 1, "", "abs"], [208, 2, 1, "", "add"], [219, 2, 1, "", "arange"], [230, 2, 1, "", "arccos"], [231, 2, 1, "", "arcsin"], [232, 2, 1, "", "arctan"], [233, 2, 1, "", "clip"], [255, 2, 1, "", "concatenate"], [234, 2, 1, "", "cos"], [235, 2, 1, "", "cosh"], [236, 2, 1, "", "cube"], [220, 2, 1, "", "diag"], [209, 2, 1, "", "div"], [210, 2, 1, "", "dot"], [221, 2, 1, "", "empty"], [222, 2, 1, "", "empty_like"], [237, 2, 1, "", "exp"], [223, 2, 1, "", "eye"], [256, 2, 1, "", "flatten"], [195, 2, 1, "", "grad_enabled"], [257, 2, 1, "", "hstack"], [211, 2, 1, "", "inner"], [238, 2, 1, "", "log"], [212, 2, 1, "", "matmul"], [239, 2, 1, "", "max"], [213, 2, 1, "", "maximum"], [240, 2, 1, "", "mean"], [259, 2, 1, "", "meshgrid"], [241, 2, 1, "", "min"], [214, 2, 1, "", "minimum"], [215, 2, 1, "", "mul"], [197, 2, 1, "", "no_grad"], [224, 2, 1, "", "ones"], [225, 2, 1, "", "ones_like"], [216, 2, 1, "", "outer"], [260, 2, 1, "", "pad"], [217, 2, 1, "", "power"], [261, 2, 1, "", "ravel"], [242, 2, 1, "", "reciprocal"], [198, 2, 1, "", "register_model"], [262, 2, 1, "", "repeat"], [263, 2, 1, "", "reshape"], [243, 2, 1, "", "sign"], [244, 2, 1, "", "sin"], [245, 2, 1, "", "sinh"], [246, 2, 1, "", "sqrt"], [247, 2, 1, "", "square"], [264, 2, 1, "", "squeeze"], [265, 2, 1, "", "stack"], [218, 2, 1, "", "sub"], [248, 2, 1, "", "sum"], [249, 2, 1, "", "tan"], [250, 2, 1, "", "tanh"], [254, 2, 1, "", "tensor"], [266, 2, 1, "", "tile"], [251, 2, 1, "", "trace"], [252, 2, 1, "", "transpose"], [267, 2, 1, "", "unsqueeze"], [253, 2, 1, "", "var"], [268, 2, 1, "", "vstack"], [226, 2, 1, "", "zeros"], [227, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "MNIST"]], "lucid.linalg": [[9, 2, 1, "", "cholesky"], [10, 2, 1, "", "det"], [11, 2, 1, "", "eig"], [13, 2, 1, "", "inv"], [14, 2, 1, "", "matrix_power"], [15, 2, 1, "", "norm"], [16, 2, 1, "", "pinv"], [17, 2, 1, "", "qr"], [18, 2, 1, "", "solve"], [19, 2, 1, "", "svd"]], "lucid.models": [[20, 1, 1, "", "AlexNet"], [22, 1, 1, "", "Inception"], [26, 1, 1, "", "InceptionResNet"], [30, 1, 1, "", "LeNet"], [34, 1, 1, "", "ResNet"], [43, 1, 1, "", "SENet"], [49, 1, 1, "", "SKNet"], [53, 1, 1, "", "VGGNet"], [58, 1, 1, "", "ZFNet"], [21, 2, 1, "", "alexnet"], [27, 2, 1, "", "inception_resnet_v1"], [28, 2, 1, "", "inception_resnet_v2"], [23, 2, 1, "", "inception_v1"], [24, 2, 1, "", "inception_v3"], [25, 2, 1, "", "inception_v4"], [31, 2, 1, "", "lenet_1"], [32, 2, 1, "", "lenet_4"], [33, 2, 1, "", "lenet_5"], [35, 2, 1, "", "resnet_1001"], [36, 2, 1, "", "resnet_101"], [37, 2, 1, "", "resnet_152"], [38, 2, 1, "", "resnet_18"], [39, 2, 1, "", "resnet_200"], [40, 2, 1, "", "resnet_269"], [41, 2, 1, "", "resnet_34"], [42, 2, 1, "", "resnet_50"], [44, 2, 1, "", "se_resnet_101"], [45, 2, 1, "", "se_resnet_152"], [46, 2, 1, "", "se_resnet_18"], [47, 2, 1, "", "se_resnet_34"], [48, 2, 1, "", "se_resnet_50"], [50, 2, 1, "", "sk_resnet_18"], [51, 2, 1, "", "sk_resnet_34"], [52, 2, 1, "", "sk_resnet_50"], [61, 2, 1, "", "summarize"], [54, 2, 1, "", "vggnet_11"], [55, 2, 1, "", "vggnet_13"], [56, 2, 1, "", "vggnet_16"], [57, 2, 1, "", "vggnet_19"], [59, 2, 1, "", "zfnet"]], "lucid.nn": [[170, 1, 1, "", "AdaptiveAvgPool1d"], [171, 1, 1, "", "AdaptiveAvgPool2d"], [172, 1, 1, "", "AdaptiveAvgPool3d"], [145, 1, 1, "", "AlphaDropout"], [173, 1, 1, "", "AvgPool1d"], [174, 1, 1, "", "AvgPool2d"], [175, 1, 1, "", "AvgPool3d"], [156, 1, 1, "", "BCELoss"], [162, 1, 1, "", "BatchNorm1d"], [163, 1, 1, "", "BatchNorm2d"], [164, 1, 1, "", "BatchNorm3d"], [152, 1, 1, "", "Bilinear"], [62, 1, 1, "", "Buffer"], [141, 1, 1, "", "Conv1d"], [142, 1, 1, "", "Conv2d"], [143, 1, 1, "", "Conv3d"], [118, 1, 1, "", "ConvBNReLU1d"], [119, 1, 1, "", "ConvBNReLU2d"], [120, 1, 1, "", "ConvBNReLU3d"], [157, 1, 1, "", "CrossEntropyLoss"], [146, 1, 1, "", "Dropout"], [147, 1, 1, "", "Dropout1d"], [148, 1, 1, "", "Dropout2d"], [149, 1, 1, "", "Dropout3d"], [132, 1, 1, "", "ELU"], [133, 1, 1, "", "GELU"], [158, 1, 1, "", "HuberLoss"], [153, 1, 1, "", "Identity"], [165, 1, 1, "", "InstanceNorm1d"], [166, 1, 1, "", "InstanceNorm2d"], [167, 1, 1, "", "InstanceNorm3d"], [168, 1, 1, "", "LayerNorm"], [134, 1, 1, "", "LeakyReLU"], [154, 1, 1, "", "Linear"], [159, 1, 1, "", "MSELoss"], [176, 1, 1, "", "MaxPool1d"], [177, 1, 1, "", "MaxPool2d"], [178, 1, 1, "", "MaxPool3d"], [63, 1, 1, "", "Module"], [65, 1, 1, "", "ModuleDict"], [66, 1, 1, "", "ModuleList"], [160, 1, 1, "", "NLLLoss"], [64, 1, 1, "", "Parameter"], [67, 1, 1, "", "ParameterDict"], [68, 1, 1, "", "ParameterList"], [135, 1, 1, "", "ReLU"], [136, 1, 1, "", "SELU"], [121, 1, 1, "", "SEModule"], [122, 1, 1, "", "SelectiveKernel"], [69, 1, 1, "", "Sequential"], [137, 1, 1, "", "Sigmoid"], [138, 1, 1, "", "Softmax"], [139, 1, 1, "", "Tanh"]], "lucid.nn.functional": [[105, 2, 1, "", "adaptive_avg_pool1d"], [106, 2, 1, "", "adaptive_avg_pool2d"], [107, 2, 1, "", "adaptive_avg_pool3d"], [85, 2, 1, "", "alpha_dropout"], [108, 2, 1, "", "avg_pool1d"], [109, 2, 1, "", "avg_pool2d"], [110, 2, 1, "", "avg_pool3d"], [101, 2, 1, "", "batch_norm"], [92, 2, 1, "", "bilinear"], [95, 2, 1, "", "binary_cross_entropy"], [80, 2, 1, "", "conv1d"], [81, 2, 1, "", "conv2d"], [82, 2, 1, "", "conv3d"], [96, 2, 1, "", "cross_entropy"], [86, 2, 1, "", "dropout"], [87, 2, 1, "", "dropout1d"], [88, 2, 1, "", "dropout2d"], [89, 2, 1, "", "dropout3d"], [71, 2, 1, "", "elu"], [72, 2, 1, "", "gelu"], [97, 2, 1, "", "huber_loss"], [103, 2, 1, "", "instance_norm"], [116, 2, 1, "", "interpolate"], [104, 2, 1, "", "layer_norm"], [74, 2, 1, "", "leaky_relu"], [94, 2, 1, "", "linear"], [112, 2, 1, "", "max_pool1d"], [113, 2, 1, "", "max_pool2d"], [114, 2, 1, "", "max_pool3d"], [99, 2, 1, "", "mse_loss"], [100, 2, 1, "", "nll_loss"], [75, 2, 1, "", "relu"], [117, 2, 1, "", "rotate"], [76, 2, 1, "", "selu"], [77, 2, 1, "", "sigmoid"], [78, 2, 1, "", "softmax"], [79, 2, 1, "", "tanh"], [84, 2, 1, "", "unfold"]], "lucid.nn.init": [[124, 2, 1, "", "constant"], [126, 2, 1, "", "kaiming_normal"], [127, 2, 1, "", "kaiming_uniform"], [128, 2, 1, "", "normal"], [129, 2, 1, "", "uniform"], [130, 2, 1, "", "xavier_normal"], [131, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[183, 1, 1, "", "ASGD"], [184, 1, 1, "", "Adadelta"], [185, 1, 1, "", "Adagrad"], [186, 1, 1, "", "Adam"], [187, 1, 1, "", "AdamW"], [188, 1, 1, "", "Adamax"], [189, 1, 1, "", "NAdam"], [181, 1, 1, "", "Optimizer"], [190, 1, 1, "", "RAdam"], [191, 1, 1, "", "RMSprop"], [192, 1, 1, "", "Rprop"], [193, 1, 1, "", "SGD"]], "lucid.random": [[201, 2, 1, "", "rand"], [202, 2, 1, "", "randint"], [203, 2, 1, "", "randn"], [204, 2, 1, "", "seed"], [205, 2, 1, "", "uniform"]], "lucid.transforms": [[271, 1, 1, "", "CenterCrop"], [269, 1, 1, "", "Compose"], [272, 1, 1, "", "Normalize"], [273, 1, 1, "", "RandomCrop"], [274, 1, 1, "", "RandomGrayscale"], [275, 1, 1, "", "RandomHorizontalFlip"], [276, 1, 1, "", "RandomRotation"], [277, 1, 1, "", "RandomVerticalFlip"], [278, 1, 1, "", "Resize"], [270, 1, 1, "", "ToTensor"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [3, 7, 8, 14, 16, 19, 60, 61, 62, 63, 64, 65, 67, 68, 69, 105, 106, 107, 122, 157, 160, 170, 171, 172, 173, 176, 177, 180, 181, 182, 196, 198, 212, 220, 238, 240, 248, 251, 253, 254, 264, 270, 272, 280], "0": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 24, 26, 30, 43, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 229, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 249, 250, 252, 253, 254, 255, 257, 260, 261, 262, 264, 265, 267, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 280], "000": [5, 221, 222], "0000": [157, 158, 160], "0001": 183, "000e": [221, 222], "001": [183, 186, 187, 189, 190, 193], "002": [188, 189], "004": 189, "005": 134, "01": [74, 134, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193], "01051757": 203, "016": [35, 60], "0205": 157, "0217": 157, "0227": 157, "024": [48, 60], "0299": 157, "032": [42, 60], "044715": [72, 133], "0450": 157, "0451": 157, "047": [55, 60], "04719755": 230, "0474259": 77, "0480": 157, "05": [101, 103, 104, 118, 119, 120, 134, 162, 163, 164, 165, 166, 167, 168], "0507": [76, 136], "06": [184, 192], "069": [40, 60], "07": [95, 96, 156, 157], "0700": 157, "0706508": 139, "071": [35, 60], "0721": 157, "073": [52, 60], "0794": 160, "08": [186, 187, 188, 189, 190, 191], "0802": 160, "08333333": 16, "085537": 237, "088": [48, 60], "0900": [138, 157], "0986": [78, 138], "09861229": 238, "0992": 157, "1": [0, 1, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 26, 30, 31, 32, 33, 43, 49, 53, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 199, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280], "10": [0, 1, 2, 3, 20, 21, 30, 31, 32, 33, 53, 58, 59, 60, 61, 65, 66, 69, 81, 82, 92, 94, 105, 141, 142, 143, 148, 149, 152, 154, 163, 164, 166, 170, 174, 175, 177, 185, 198, 202, 205, 206, 209, 212, 215, 216, 232, 248, 271, 273, 274, 276], "100": [21, 54, 55, 56, 57, 60, 198, 280], "1000": [20, 21, 23, 24, 25, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], "1000000": 183, "1001": [35, 60, 157], "1003": 157, "1007": 60, "101": [36, 44, 60], "1014": 76, "102": [40, 60], "1025": [66, 69], "1026": [66, 69], "1027": [66, 69], "10499": 77, "1050": 137, "1054": 160, "1056": [66, 69], "10590": 60, "1097": 60, "11": [38, 46, 53, 54, 60, 92, 141, 142, 143, 148, 152, 163, 164, 166, 174, 175, 177, 212, 271, 272, 273, 274, 276], "1105": 60, "1109": 60, "1111": 156, "1134": 92, "114b": 274, "119": 92, "1192": [77, 78, 138], "12": [31, 32, 67, 92, 107, 141, 142, 143, 148, 149, 152, 163, 164, 166, 172, 174, 175, 177, 212, 216, 217, 271, 273, 274, 276], "120": [30, 33], "123": [126, 127, 128, 129, 130, 131, 204, 205], "124": [126, 127, 130, 131], "125": 175, "1250": 158, "128": [27, 34, 53, 60, 69, 122, 269, 280], "128x128": [269, 280], "13": [23, 53, 55, 60, 92, 141, 142, 143, 152, 164, 174, 175, 177, 212, 271, 273, 274, 276], "132": [54, 60], "133": [55, 60], "138": [56, 60], "14": [141, 142, 143, 148, 149, 152, 164, 174, 175, 177, 199, 212, 216, 271, 273, 274, 276], "1409": 60, "143": [57, 60], "145": 92, "149": [35, 60], "15": [0, 92, 141, 142, 143, 152, 164, 174, 175, 177, 212, 216, 251, 271, 273, 274, 276, 280], "1513": 160, "152": [37, 45, 60], "155": 212, "1556": 60, "1588": [72, 133], "16": [30, 33, 43, 53, 56, 60, 66, 67, 69, 106, 107, 118, 119, 120, 121, 122, 141, 142, 143, 148, 149, 152, 163, 164, 171, 172, 174, 175, 177, 180, 212, 216, 246, 271, 273, 274, 276], "160": [36, 60], "16227766": 17, "16425": 160, "1643": 156, "166": 212, "17": [141, 142, 143, 152, 164, 175, 211, 271, 273, 274, 276], "170": 92, "17520119": 245, "18": [32, 38, 46, 50, 60, 141, 142, 143, 148, 152, 164, 175, 215, 216, 271, 273, 274, 276], "1800": 157, "19": [53, 57, 60, 81, 82, 92, 142, 143, 164, 210, 212], "192": [31, 32, 37, 60], "1966": [78, 137, 138], "1998": [60, 157], "1_53": 60, "1d": [80, 105, 108, 112, 118, 162, 165, 170, 205, 212, 220, 251, 259, 260, 261, 262, 266], "1e": [95, 96, 101, 103, 104, 118, 119, 120, 156, 157, 162, 163, 164, 165, 166, 167, 168, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193], "1e6": 183, "1st": [20, 58], "2": [1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 31, 32, 33, 38, 46, 50, 58, 61, 62, 63, 64, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 199, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280], "20": [0, 5, 65, 66, 69, 142, 143, 148, 164, 216, 237], "200": [39, 60], "2011": 121, "2012": 60, "2014": 60, "2015": 60, "2016": 60, "2017": 60, "2018": [60, 121], "2019": 60, "2023": 121, "2039": 160, "204": 143, "21": [41, 47, 60, 67, 92, 142, 143, 164, 216], "211": 212, "22": [27, 60, 92, 142, 143, 148, 164, 210, 212], "2231": [157, 160], "224": [20, 34, 50, 51, 52, 53, 58, 60], "2247": [162, 163, 164, 165, 166, 167, 168], "224x224": 23, "226": 212, "22752314": 203, "2278": 60, "23": [36, 44, 142, 143, 164], "2324": [60, 136], "234": [126, 127, 128, 129, 130, 131, 205], "24": [39, 92, 106, 142, 143, 148, 164, 171, 216], "240": [57, 60], "2424": [78, 138], "2447": 138, "246": [31, 60], "25": [0, 42, 50, 60, 77, 137, 143, 159, 164, 174, 175, 209, 242, 253], "2500": [156, 158, 160], "2512": 132, "2547": 136, "256": [34, 53], "26": [67, 94, 143, 154, 164, 216], "26325684": 203, "2689": [78, 137, 138], "269": [40, 60], "27": [92, 141, 143, 164, 236], "276": [126, 127, 130, 131], "28": [31, 32, 48, 60, 92, 143, 216], "28x28": [5, 31, 32], "29": 143, "299": 60, "299r": 274, "299x299": [24, 25, 27, 28], "2_i": [165, 166, 167], "2d": [81, 88, 106, 109, 113, 119, 163, 166, 171, 212, 220, 223, 251, 256, 259, 260, 262, 266, 276], "2e": 188, "2nd": [20, 58], "2x2": [84, 271, 273], "3": [1, 2, 3, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 31, 34, 35, 36, 37, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 58, 60, 62, 63, 64, 66, 67, 68, 69, 72, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92, 94, 97, 99, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 233, 235, 236, 237, 238, 239, 240, 241, 245, 246, 247, 248, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278], "30": [24, 40, 60, 66, 117, 143, 276], "3026": 160, "31": [92, 143, 212], "310": [221, 222], "31622777": 17, "319": 60, "32": [33, 60, 66, 69, 92, 94, 106, 118, 119, 120, 121, 122, 142, 143, 154, 171, 180, 210, 211, 216], "321": [126, 127, 130, 131], "326": [44, 60], "32x32": [30, 33], "33": [66, 69, 94, 143, 154], "33333333": 16, "336": [54, 60], "34": [41, 47, 51, 60, 66, 69, 92, 143, 212, 216], "342": [126, 127, 130, 131], "345": [126, 127, 128, 129, 130, 131, 205], "35": [28, 60, 66, 69, 143], "352": [23, 60], "3567": [156, 160], "357": [56, 59, 60], "36": [37, 39, 45, 143], "3679": [71, 76, 132], "368": [50, 52, 60], "37": 141, "372": 92, "375": 159, "3750": 158, "378": [32, 60], "38344152": 201, "38629436": 238, "389056": 237, "392": [24, 60], "393": [23, 60], "3935": 132, "3d": [82, 89, 107, 110, 114, 120, 143, 164, 167, 172], "3x3": [60, 206], "4": [0, 1, 2, 3, 8, 9, 10, 11, 13, 15, 16, 17, 30, 31, 32, 34, 36, 41, 42, 44, 47, 48, 51, 52, 60, 61, 67, 69, 80, 81, 82, 84, 87, 88, 89, 92, 94, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 183, 186, 190, 191, 193, 196, 199, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 225, 227, 233, 238, 239, 240, 241, 242, 244, 246, 247, 248, 249, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 265, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278], "40": [25, 60], "400": 33, "4044": 156, "4076": 157, "4096": [20, 58], "41421356": 9, "416": [40, 60], "41666667": 16, "41808962": 203, "419974": 79, "4199743": 139, "42": [92, 121, 199, 206], "421": [126, 127, 130, 131], "423": [126, 127, 128, 129], "42718872": 17, "4278": 60, "4284": 60, "4286": 156, "43": [210, 212], "4323": 132, "4375": 158, "43758721": 201, "44": [36, 60], "4472136": 11, "4495": [164, 167], "45": [51, 60, 92, 117, 276], "4545": 145, "47112767": 232, "48": [40, 94, 154], "49": [44, 60], "4979": 132, "4x4": 278, "5": [1, 2, 7, 8, 13, 14, 15, 16, 20, 24, 30, 31, 32, 33, 49, 50, 51, 52, 58, 60, 61, 63, 64, 65, 66, 67, 69, 72, 77, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92, 94, 97, 99, 101, 103, 104, 105, 108, 109, 116, 118, 119, 120, 122, 124, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 177, 178, 192, 196, 199, 202, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 227, 229, 230, 231, 239, 240, 241, 242, 243, 248, 251, 252, 253, 254, 257, 259, 263, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280], "50": [34, 42, 48, 52, 60, 94, 154, 192, 210, 212, 274, 275, 277, 280], "5000": [156, 158, 160], "510": 60, "5108": 160, "512": [28, 34, 38, 51, 60], "519": 60, "52359878": 231, "53": [92, 211], "543": [126, 127, 128, 129, 130, 131, 205], "54308063": 235, "544": [56, 60], "545": 217, "5455": 145, "549": [36, 60], "557": [42, 60], "563": [126, 127, 130, 131], "57": [52, 60, 92], "57079633": [230, 231], "57366333": 204, "586": [25, 60], "587g": 274, "592": [46, 60], "5th": [20, 58], "6": [8, 16, 20, 30, 33, 34, 41, 42, 47, 48, 51, 52, 58, 67, 68, 80, 81, 82, 84, 89, 92, 94, 105, 127, 131, 141, 142, 143, 146, 147, 148, 149, 152, 154, 156, 162, 163, 164, 165, 166, 167, 168, 170, 174, 175, 177, 178, 184, 192, 196, 199, 205, 208, 209, 210, 211, 212, 215, 216, 217, 218, 219, 220, 221, 222, 225, 227, 239, 240, 241, 248, 251, 252, 253, 254, 257, 262, 263, 268, 270, 271, 272, 273, 274, 276, 278], "60": [37, 60], "6052": 160, "6065": 132, "608": [59, 60], "61": [21, 33, 60], "6124": [162, 163, 164, 165, 166, 167, 168], "62": [59, 60, 92], "62686041": 245, "630": 60, "6321": [71, 132], "63245553": 17, "64": [34, 39, 49, 53, 60, 66, 69, 92, 121, 122], "645": 60, "64589411": 201, "647": [50, 60], "654": [126, 127, 128, 129, 130, 131, 205], "657": [126, 127, 130, 131], "6590": [78, 138], "66": [45, 60], "6652": 138, "66666667": 16, "6667": 156, "667": [57, 60], "6682": 156, "669": [39, 60], "67": 212, "672": [41, 60], "67326": 136, "6733": 76, "678": [126, 127, 128, 129, 130, 131], "68811989": 203, "689": [38, 60], "69314718": 238, "7": [15, 53, 67, 80, 81, 82, 84, 89, 92, 94, 95, 96, 105, 122, 133, 136, 137, 139, 141, 142, 143, 148, 149, 152, 154, 156, 157, 159, 163, 164, 166, 167, 170, 174, 175, 177, 178, 199, 202, 205, 208, 210, 211, 212, 216, 218, 220, 237, 240, 248, 251, 252, 253, 266, 270, 271, 272, 273, 274, 276, 278], "70": 5, "7001": 157, "706": [33, 60], "70710678": [11, 244], "7132": 60, "7141": 60, "7147": 160, "7182818": 237, "726791": 60, "7311": [78, 137, 138], "739": [27, 60], "74": 212, "75": [94, 154, 159, 183], "7581": 76, "76159416": 250, "7616": [79, 139], "76219569": 235, "7635": 136, "770": 60, "772": 217, "778": [46, 60], "78357324": 203, "78539816": 232, "79172504": 201, "797": [41, 60], "7x7": 58, "8": [14, 18, 34, 37, 40, 45, 50, 51, 52, 61, 66, 67, 69, 80, 81, 82, 84, 89, 92, 94, 95, 105, 106, 107, 118, 119, 120, 121, 133, 136, 137, 139, 141, 142, 143, 146, 147, 148, 149, 152, 154, 156, 159, 163, 164, 166, 167, 170, 171, 172, 174, 175, 177, 178, 186, 187, 188, 189, 190, 191, 199, 202, 209, 210, 211, 212, 216, 217, 219, 220, 236, 240, 248, 251, 252, 253, 270, 271, 272, 273, 274, 276, 278], "80": 5, "8005": 157, "808": [37, 60], "817": [24, 60], "818": 60, "8182": 145, "82": 92, "821": [45, 60], "833": 60, "84": [30, 32, 33], "840": [21, 60], "8413": [72, 133], "847": [28, 60], "848": [45, 55, 60], "8584": 136, "86": 60, "863": [54, 60], "864": [39, 60], "868": [47, 60], "872": [44, 60], "876": [126, 127, 130, 131, 205], "8808": [78, 137, 138], "887": 217, "891773": 201, "89442719": 11, "895": [51, 60], "9": [0, 1, 3, 5, 18, 60, 81, 84, 92, 94, 105, 141, 142, 143, 148, 152, 154, 156, 163, 164, 166, 170, 174, 175, 177, 183, 184, 186, 187, 188, 189, 190, 191, 193, 199, 202, 205, 208, 212, 216, 217, 218, 220, 246, 247, 270, 271, 272, 273, 274, 276], "90709145": 204, "9091": 145, "9120": 160, "9163": 160, "94": 35, "9486833": 17, "949e": [221, 222], "9526": 77, "9545": 133, "958": [47, 60], "96366276": 201, "9640": 139, "96402758": 250, "978": 60, "984": [25, 60], "99": 191, "9957": 160, "99734545": 204, "999": [0, 186, 187, 188, 189, 190], "A": [1, 3, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 26, 30, 34, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 63, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 92, 94, 95, 96, 100, 101, 103, 104, 116, 122, 145, 146, 147, 148, 149, 156, 157, 160, 162, 163, 164, 165, 166, 167, 168, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 197, 199, 201, 202, 203, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 276], "As": 204, "Be": 0, "By": [0, 2, 3, 7, 35, 36, 37, 38, 39, 40, 41, 42, 64, 117, 180, 190, 196, 201, 202, 203, 205, 270, 280], "For": [2, 3, 4, 7, 9, 10, 11, 13, 14, 15, 16, 18, 69, 71, 72, 74, 75, 76, 77, 79, 92, 94, 116, 126, 127, 130, 131, 136, 141, 142, 143, 152, 154, 162, 163, 164, 165, 166, 167, 180, 182, 204, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 237, 238, 239, 240, 241, 244, 246, 248, 251, 252, 253, 260, 262, 264, 266, 267, 280], "If": [0, 1, 2, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 34, 61, 63, 65, 66, 67, 68, 71, 72, 74, 75, 76, 77, 79, 80, 81, 82, 89, 92, 94, 101, 103, 106, 107, 116, 117, 118, 119, 120, 122, 126, 127, 141, 142, 143, 152, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 181, 186, 187, 191, 192, 198, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 274, 275, 277, 278], "In": [3, 7, 16, 80, 81, 82, 157, 160, 195, 196, 197, 269, 280], "It": [1, 2, 3, 7, 16, 17, 18, 20, 22, 23, 24, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 53, 60, 63, 65, 66, 67, 68, 69, 89, 92, 116, 117, 118, 119, 120, 121, 133, 135, 139, 152, 153, 156, 157, 158, 159, 160, 170, 171, 172, 180, 181, 182, 183, 189, 191, 192, 193, 196, 204, 208, 209, 210, 213, 214, 215, 217, 218, 239, 241, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270], "Its": [18, 206], "Near": 16, "No": 84, "Not": 153, "One": [31, 280], "The": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280], "There": 263, "These": [4, 7, 8, 11, 14, 17, 19, 50, 51, 52, 60, 145, 146, 147, 148, 149, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 192, 199, 206, 280], "To": [3, 60, 182, 203, 206, 221, 222, 259, 280], "With": [3, 84, 270, 280], "_": [14, 65, 66, 68, 69, 71, 72, 74, 75, 76, 77, 79, 94, 116, 163, 164, 165, 166, 167, 173, 174, 175, 176, 177, 178, 183, 184, 186, 187, 188, 189, 191, 193, 210, 211, 212, 216, 251, 252, 271, 272, 273, 275, 276, 277], "_1": [11, 65, 66, 67, 68, 69, 92, 152, 216, 255, 257, 268], "_2": [11, 65, 66, 67, 68, 69, 92, 152, 216, 255, 257, 268], "__call__": [1, 63], "__getitem__": [0, 2, 3, 5], "__init__": [0, 1, 2, 3, 7, 20, 22, 26, 30, 53, 58, 61, 62, 63, 64, 65, 66, 67, 68, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 152, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 198, 207, 269, 270], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5], "__repr__": 181, "__setattr__": 63, "_activ": 78, "_arraylik": [199, 220, 222, 225, 227], "_arraylikeint": 260, "_arrayorscalar": [62, 64, 199, 207, 254], "_base_dtyp": [219, 221, 224, 226], "_c": 272, "_decai": 189, "_fanmod": [126, 127], "_grad_en": [195, 197], "_i": [11, 15, 78, 92, 138, 159, 162, 168, 173, 176, 210, 211, 213, 214, 216, 217, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 262, 264, 267, 268], "_in": [126, 127, 130, 131], "_j": [78, 138, 173, 176, 216, 240, 248, 252, 253], "_k": 265, "_left": 116, "_make_lay": 53, "_modul": 63, "_n": [11, 65, 66, 67, 68, 69, 255, 257, 268], "_numpyarrai": 199, "_out": [126, 127, 130, 131, 262, 266], "_p": 15, "_pad": 260, "_paddingstr": [118, 119, 120, 141, 142, 143], "_paramet": 63, "_reductiontyp": [95, 96, 97, 99, 100, 156, 157, 158, 159, 160], "_right": 116, "_scalar": [124, 128, 129, 130, 131, 199, 219, 233], "_seresnetbottleneck": [44, 45, 48], "_seresnetmodul": [46, 47], "_shapelik": [61, 104, 168, 199, 202, 224, 226, 263, 264, 267], "_size": [105, 106, 107], "_skresnetmodul": [50, 51, 52], "_slope": 134, "_statedict": 181, "_t": [190, 191], "_tensor": [62, 64, 220, 254], "_tensorop": 207, "_u": 16, "_v": 16, "_valu": [233, 260], "_width": 260, "a_i": [213, 214, 217], "aaai": 60, "ab": 228, "abc": [2, 181], "abil": [7, 60, 280], "about": [7, 61], "abov": [7, 195, 197, 204, 220, 223], "absolut": [14, 15, 97, 188, 229], "abstract": [2, 3, 180, 181, 182, 183, 191, 193], "abstractmethod": 181, "acceler": [60, 136, 162, 163, 164, 183, 189, 191, 193], "accept": [153, 201, 207], "access": [0, 2, 3, 4, 5, 62, 64, 65, 66, 67, 68, 69, 263], "accord": [116, 141, 142, 143, 152, 154, 157, 160, 184, 185, 186, 187, 188, 189, 190, 252], "accordingli": 10, "account": [14, 16, 17], "accumul": [183, 184, 185, 208, 209, 213, 214, 215, 218], "accur": 45, "accuraci": [48, 60], "achiev": [60, 80, 81, 82, 105, 170, 171, 172, 189, 275, 277], "across": [0, 62, 66, 69, 104, 105, 106, 107, 130, 131, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 199, 201, 202, 203, 204, 205, 206, 221, 222, 240, 253], "act": 187, "activ": [7, 20, 35, 39, 40, 43, 53, 58, 60, 65, 69, 71, 72, 74, 75, 76, 77, 78, 79, 85, 118, 119, 120, 121, 122, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 145, 146, 147, 148, 149, 156, 157, 160, 162, 163, 164, 168, 239, 241], "actual": [64, 156, 157, 159, 160, 207, 273], "ad": [34, 63, 65, 66, 67, 68, 69, 80, 81, 82, 92, 94, 95, 96, 101, 103, 104, 108, 109, 110, 112, 113, 114, 118, 119, 120, 141, 142, 143, 156, 157, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 184, 185, 186, 187, 188, 189, 190, 191, 198, 267, 280], "adadelta": 194, "adagrad": [184, 194], "adam": [187, 188, 189, 190, 194], "adamax": 194, "adamw": 194, "adapt": [20, 22, 30, 44, 46, 49, 50, 51, 52, 53, 58, 60, 105, 106, 107, 121, 122, 170, 171, 172, 184, 185, 186, 189, 190, 191, 192], "adaptive_avg_pool1d": [91, 111, 170], "adaptive_avg_pool2d": [91, 111, 171], "adaptive_avg_pool3d": [91, 111, 172], "adaptiveavgpool1d": [151, 179], "adaptiveavgpool2d": [20, 43, 53, 58, 151, 179], "adaptiveavgpool3d": [151, 179], "add": [4, 63, 65, 66, 69, 92, 94, 141, 142, 143, 152, 154, 168, 181, 183, 186, 191, 193, 196, 228, 260, 267], "add_modul": [63, 69], "add_param_group": 181, "addit": [4, 7, 14, 21, 22, 23, 24, 25, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 59, 63, 66, 69, 92, 94, 101, 103, 152, 154, 162, 163, 164, 165, 166, 167, 183, 189, 196, 206, 208, 265], "addition": 189, "address": [157, 160, 186, 187, 190], "adjust": [27, 49, 105, 106, 107, 122, 145, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 182, 186, 190, 191, 192, 257, 268], "advanc": [3, 16, 39, 60, 66, 69, 80, 81, 82, 105, 106, 107, 170, 171, 172, 180, 183], "advantag": [28, 197], "affect": [195, 261, 264, 269], "affin": [118, 119, 120, 162, 163, 164, 165, 166, 167, 168, 276], "after": [14, 20, 58, 64, 65, 66, 67, 68, 69, 89, 121, 122, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 145, 146, 147, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 168, 173, 174, 175, 176, 177, 178, 187, 197, 207, 208, 209, 213, 214, 215, 217, 218, 260, 270], "afterward": 197, "aggreg": [122, 216, 262, 266], "aim": [4, 7], "al": [23, 60], "alex": 60, "alexnet": [29, 58, 60], "algebra": [7, 8, 223], "algorithm": [7, 14, 16, 17, 181, 182, 206], "align": [18, 116, 211, 212], "align_corn": 116, "all": [0, 3, 4, 7, 17, 63, 65, 66, 67, 68, 69, 81, 82, 105, 106, 107, 109, 110, 113, 114, 116, 119, 120, 122, 134, 135, 143, 170, 171, 172, 174, 175, 178, 180, 181, 182, 183, 186, 191, 192, 193, 217, 239, 240, 241, 248, 251, 253, 255, 256, 257, 262, 264, 265, 266, 268, 271, 272, 280], "allevi": [60, 71], "alloc": [221, 222], "allow": [0, 1, 3, 4, 7, 16, 17, 28, 30, 34, 49, 60, 64, 65, 66, 67, 68, 69, 71, 74, 75, 78, 82, 84, 117, 122, 132, 133, 134, 136, 137, 138, 139, 141, 142, 143, 180, 184, 185, 196, 219, 224, 226, 227, 252, 254, 259, 269, 270, 280], "along": [78, 116, 122, 138, 211, 212, 216, 239, 240, 241, 248, 251, 253, 255, 257, 259, 262, 265, 266, 267, 268, 275, 277], "alongsid": 62, "alpha": [71, 74, 76, 85, 132, 136, 145, 183, 191], "alpha_dropout": [90, 91, 145], "alphadropout": [150, 151], "alphadropoutmodel": 145, "alreadi": 198, "also": [61, 71, 72, 74, 75, 76, 77, 79, 92, 94, 116, 189, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 222, 226, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 249, 250, 255, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268], "alter": [69, 263], "altern": [1, 133, 184, 212], "alwai": [64, 261, 274, 275, 277], "among": [24, 122], "amount": [80, 81, 82, 108, 109, 110, 112, 113, 114, 189], "amsgrad": [186, 187], "an": [0, 1, 3, 7, 11, 13, 14, 16, 17, 19, 21, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 58, 59, 60, 61, 63, 65, 66, 67, 68, 69, 72, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92, 106, 107, 116, 117, 122, 130, 131, 132, 137, 141, 142, 143, 145, 146, 147, 148, 149, 152, 154, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 182, 183, 186, 189, 191, 197, 198, 199, 207, 212, 220, 223, 233, 240, 248, 253, 255, 262, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280], "analog": [262, 266], "analysi": [4, 121, 141, 142, 143, 167, 173, 175, 176, 178], "andrew": 60, "angl": [117, 276], "ani": [0, 1, 2, 3, 14, 16, 21, 34, 59, 62, 63, 64, 65, 67, 68, 71, 72, 74, 75, 76, 77, 79, 85, 86, 92, 94, 101, 103, 137, 168, 180, 181, 195, 197, 198, 204, 207, 219, 220, 221, 223, 224, 225, 226, 227, 239, 241, 252, 254, 255, 256, 257, 260, 262, 265, 266, 267, 268, 269, 280], "anoth": [68, 218, 225, 227, 270, 280], "api": [4, 170, 171, 172, 280], "appear": 181, "append": [66, 68, 69], "appli": [2, 4, 5, 7, 14, 20, 49, 58, 60, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 82, 84, 85, 86, 87, 88, 89, 92, 94, 95, 96, 97, 99, 100, 118, 119, 120, 121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 145, 146, 147, 148, 149, 152, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 183, 184, 185, 187, 188, 189, 190, 212, 260, 262, 269, 272, 274, 275, 276, 277, 278, 280], "applic": [4, 16, 27, 28, 80, 103, 141, 142, 143, 152, 154, 206, 219, 226, 260, 278], "approach": [3, 26, 69, 187], "appropri": [16, 60, 63, 67, 69, 141, 142, 143, 145, 146, 147, 157, 174, 175, 195, 197], "approx": 76, "approxim": [16, 72, 133, 174, 177], "ar": [1, 2, 3, 4, 7, 10, 11, 13, 14, 16, 17, 18, 19, 22, 23, 24, 60, 62, 63, 64, 65, 66, 67, 68, 69, 78, 80, 81, 82, 84, 92, 94, 106, 107, 116, 121, 122, 126, 127, 129, 130, 131, 138, 141, 142, 143, 145, 146, 147, 148, 149, 152, 154, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 183, 186, 187, 189, 190, 191, 192, 193, 195, 197, 198, 199, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 229, 233, 237, 239, 240, 241, 242, 243, 248, 251, 252, 255, 259, 262, 263, 266, 269, 270, 271, 273, 274, 278, 280], "arang": 228, "arbitrari": [66, 153, 221, 222, 233, 238, 240, 244, 246, 248, 252, 253], "arcco": 228, "arch": 198, "architectur": [21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 43, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 65, 66, 67, 68, 69, 72, 121, 135, 152, 153, 180, 198], "arcsin": 228, "arctan": 228, "area": 116, "arg": [63, 153, 198, 221], "argument": [3, 4, 21, 22, 23, 24, 25, 27, 28, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 59, 63, 69, 153, 201, 221, 252], "around": [11, 117, 139], "arr": [199, 255, 257, 265, 268], "arrai": [7, 62, 64, 196, 199, 207, 212, 220, 225, 227, 254, 261, 262, 270, 280], "art": 60, "artifici": 60, "arxiv": 60, "asarrai": 199, "asgd": 194, "aspect": 278, "assign": [63, 65, 67, 69, 116, 157, 160], "assist": [22, 23, 24], "associ": [67, 68], "assum": [0, 1, 181, 182, 195], "attempt": [65, 69], "attent": [49, 68, 92, 121], "attribut": 63, "audio": 141, "augment": [3, 4, 46, 117, 206, 262, 266, 269, 273, 274, 275, 276, 277, 280], "autodiff": 7, "autograd": 180, "automat": [4, 7, 64, 65, 66, 67, 68, 180, 201, 202, 203, 205, 207, 221, 222, 227, 259, 270], "auxiliari": [22, 23, 24, 62], "avail": [4, 5, 7], "averag": [20, 31, 32, 33, 34, 43, 49, 53, 58, 62, 105, 106, 107, 108, 109, 110, 116, 121, 122, 159, 170, 171, 172, 173, 174, 175, 183, 184, 186, 191, 240], "avg_pool": [173, 174, 175], "avg_pool1d": [91, 111], "avg_pool2d": [91, 111], "avg_pool3d": [91, 111], "avgpool": [20, 43, 53, 58, 122], "avgpool1d": [151, 179], "avgpool1dmodel": 173, "avgpool2d": [151, 179], "avgpool2dmodel": 174, "avgpool3d": [151, 179], "avgpool3dmodel": 175, "avoid": [2, 3, 16, 67, 197], "ax": [8, 196, 239, 240, 241, 248, 252, 253, 262, 264, 266], "axi": [78, 138, 211, 212, 239, 240, 241, 248, 253, 255, 257, 259, 260, 262, 264, 265, 266, 267, 268, 275, 277], "b": [8, 18, 92, 94, 129, 141, 142, 143, 152, 154, 196, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 255, 257, 265, 268, 274], "b_i": [213, 214, 217], "back": [116, 174, 175, 198, 211, 216, 262, 266], "backbon": [50, 51, 52], "backpropag": [7, 10, 11, 13, 14, 16, 17, 19, 60, 62, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 92, 94, 116, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 180, 197, 203, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 237, 239, 241, 254, 260, 262, 266, 270], "backward": [7, 62, 64, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 207, 270], "balanc": 158, "bar": 183, "base": [3, 8, 13, 14, 17, 18, 22, 23, 24, 25, 26, 27, 28, 30, 49, 53, 60, 63, 65, 66, 67, 68, 84, 92, 105, 106, 107, 122, 145, 157, 158, 170, 171, 172, 180, 181, 182, 183, 187, 191, 192, 193, 208, 209, 213, 214, 215, 217, 218, 227, 237, 238, 239, 241, 252, 259, 260, 273, 274, 275, 276, 277], "base_width": 49, "basic": [7, 20, 34, 50, 51, 52, 58, 61, 80, 81, 82, 105, 106, 107, 118, 119, 120, 121, 126, 127, 130, 131, 170, 171, 172, 271, 272, 273, 274, 275, 276, 277, 278], "basicblock": [34, 38, 41], "batch": [1, 2, 3, 8, 14, 17, 19, 23, 24, 25, 27, 28, 43, 80, 81, 82, 84, 87, 88, 89, 92, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 141, 142, 143, 152, 154, 156, 157, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 190, 212, 271, 272, 273, 274, 276, 278], "batch_norm": [91, 102, 162, 163, 164], "batch_norm1": 69, "batch_norm2": 69, "batch_siz": [1, 2, 3, 122], "batchnorm": [118, 119, 120], "batchnorm1d": [118, 151, 169], "batchnorm1dmodel": 162, "batchnorm2d": [69, 119, 151, 169], "batchnorm2dmodel": 163, "batchnorm3d": [120, 151, 169], "batchnorm3dmodel": 164, "bceloss": [151, 161], "becaus": [2, 202], "becom": [15, 63, 184, 192], "befor": [14, 43, 61, 64, 183, 189, 197, 204, 260, 272, 280], "begin": [1, 15, 71, 74, 75, 76, 132, 134, 135, 136, 158, 159, 160, 173, 174, 175, 176, 177, 178, 190, 192, 196, 206, 213, 214, 216, 229, 233, 239, 241, 243, 260], "behav": [158, 251], "behavior": [60, 66, 69, 195, 206, 212, 222, 280], "being": [68, 117, 145, 146, 147, 148, 149, 190, 195, 197, 255, 257, 268], "belong": 0, "below": [17, 23, 24, 25, 27, 28, 30, 31, 32, 33, 212, 220, 223], "benchmark": 5, "benefici": 69, "benefit": [71, 180, 189, 199], "bernoulli": [145, 146, 147, 148, 149], "best": [126, 127, 130, 131], "beta": [162, 163, 164, 165, 166, 167, 168, 186, 187, 188, 189, 190], "beta1": [186, 187, 188, 189, 190], "beta2": [186, 187, 188, 189, 190], "beta_1": [186, 187, 188, 189, 190], "beta_2": [186, 187, 188, 189, 190], "better": [13, 58, 60, 72, 126, 127, 130, 131, 165, 166, 167, 180, 187, 189, 191, 272], "between": [63, 80, 81, 82, 84, 92, 97, 118, 119, 120, 122, 141, 142, 143, 145, 146, 147, 148, 149, 152, 156, 157, 158, 159, 160, 183, 191, 192, 193, 206, 208, 209, 212, 215, 218, 219, 253, 274, 275, 277, 278], "beyond": [7, 66], "bia": [80, 81, 82, 92, 94, 101, 103, 104, 118, 119, 120, 141, 142, 143, 152, 154, 162, 163, 164, 165, 166, 167, 168, 186, 187, 188, 189, 190], "bias": [141, 142, 143, 154, 168, 180], "bias1": 67, "bias2": 67, "bilinear": [91, 93, 116, 151, 155], "bilinearmodel": 152, "binari": [77, 95, 137, 145, 146, 147, 148, 149, 156], "binary_cross_entropi": [91, 98], "block": [26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 60, 63, 84, 118, 119, 120, 122, 141, 142, 143, 197], "block1": [61, 180], "block2": [61, 180], "block_arg": 34, "blue": 274, "bmatrix": 216, "bn": [118, 119, 120], "bn_affin": [118, 119, 120], "bool": [1, 5, 19, 22, 23, 24, 61, 63, 64, 85, 86, 87, 88, 89, 101, 103, 116, 118, 119, 120, 141, 142, 143, 152, 154, 162, 163, 164, 165, 166, 167, 168, 186, 187, 191, 195, 201, 202, 203, 205, 207, 219, 220, 221, 222, 223, 224, 225, 226, 227, 239, 240, 241, 248, 253, 254, 270], "both": [80, 94, 106, 108, 112, 118, 133, 141, 142, 171, 173, 174, 176, 177, 210, 211, 212, 216, 220, 259, 278], "bottleneck": [34, 35, 36, 37, 39, 40, 42, 121], "bottom": 116, "bound": [127, 129, 131, 192, 205], "box": 4, "branch": [22, 23, 24, 60, 122], "break": 180, "brief": 280, "bright": 280, "broadcast": [148, 149, 240, 248, 253, 263, 267], "buffer": [183, 189, 191, 193], "build": [7, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 49, 50, 51, 52, 60, 63, 66, 69, 180, 280], "built": [3, 7, 35, 39, 40, 69, 180], "burg": 5, "c": [5, 34, 50, 51, 52, 84, 87, 88, 89, 96, 100, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 121, 148, 149, 157, 160, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 196, 257, 268, 272], "c_": [141, 142, 143], "c_in": [80, 81, 82, 118, 119, 120], "c_out": [80, 81, 82], "calcul": [0, 1, 7, 8, 64, 184, 185, 188, 189, 190, 197, 202, 207], "calculu": [9, 16], "call": [1, 63, 195, 198, 208, 209, 212, 213, 214, 215, 217, 218], "callabl": [181, 198, 269], "can": [0, 2, 3, 4, 7, 9, 11, 13, 14, 16, 17, 19, 34, 61, 62, 64, 65, 66, 67, 68, 69, 74, 80, 81, 82, 117, 122, 133, 134, 139, 141, 142, 143, 165, 166, 167, 174, 175, 176, 177, 178, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 196, 197, 199, 205, 206, 207, 212, 221, 222, 223, 224, 226, 227, 240, 248, 253, 257, 259, 260, 262, 263, 266, 267, 268, 269, 270, 273, 275, 276, 277, 280], "cannot": [10, 11, 13, 14, 17, 18, 19], "capabl": [7, 219, 220, 223, 224, 225, 226, 227], "capac": 60, "captur": [49, 60, 84, 141, 142, 143, 152], "cardin": 49, "care": 197, "cartesian": 259, "case": [3, 15, 30, 71, 74, 75, 76, 132, 134, 135, 136, 158, 159, 160, 173, 174, 175, 176, 177, 178, 180, 185, 190, 192, 196, 213, 214, 229, 233, 239, 241, 243, 260, 280], "categori": [35, 36, 37, 38, 39, 40, 41, 42], "caus": [3, 16, 183, 191, 193], "cautiou": 0, "cdot": [9, 10, 13, 14, 15, 18, 71, 72, 74, 76, 77, 80, 81, 82, 92, 94, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 121, 130, 131, 133, 137, 145, 152, 154, 156, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 184, 185, 186, 187, 188, 189, 190, 192, 210, 211, 212, 215, 217], "center": [117, 139, 191, 271, 280], "centercrop": [279, 280], "central": 199, "certain": [10, 72, 92, 152, 186, 187, 195, 239, 241], "chain": [13, 14, 69, 269, 280], "challeng": 60, "cham": 60, "chanc": [274, 275, 277], "chang": [97, 158, 192, 196, 197, 198, 261, 263, 267, 274, 280], "channel": [30, 31, 32, 33, 34, 47, 53, 60, 80, 81, 82, 84, 87, 88, 89, 101, 103, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 141, 142, 143, 148, 149, 162, 163, 164, 165, 166, 167, 170, 173, 174, 175, 176, 177, 178, 272, 274, 278], "check": [195, 271, 273], "checkpoint": 182, "choic": 259, "choleski": 12, "choos": 60, "chosen": 145, "christian": 60, "christoph": 5, "clariti": 199, "class": [3, 4, 7, 21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 59, 61, 78, 96, 100, 180, 182, 198, 220, 223, 254, 280], "classic": 33, "classif": [4, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 53, 54, 55, 56, 57, 58, 59, 60, 77, 78, 95, 96, 100, 137, 138, 156, 157, 160], "classifi": [20, 22, 23, 24, 30, 31, 32, 33, 34, 49, 53, 58], "cleaner": [1, 197, 212], "clear": [64, 207, 221, 222], "clearli": 199, "clf_in_featur": 30, "clf_layer": 30, "clip": [117, 192, 228], "clockwis": 117, "close": [13, 16, 136, 156, 191], "closer": 132, "closur": [181, 182], "cnn": 60, "co": [228, 244], "code": [14, 65, 67, 69, 195, 197, 199, 206], "coeffici": [18, 116, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193], "col": 84, "collect": [4, 8, 60, 65, 66, 68, 69, 182], "color": [274, 280], "colorjitt": 280, "column": [10, 11, 13, 17, 18, 19, 61, 84, 223, 257, 259], "com": 5, "combin": [1, 3, 25, 26, 27, 60, 66, 69, 71, 72, 118, 119, 120, 121, 122, 133, 157, 180, 189, 190, 240, 248, 253, 255, 280], "combined_dataset": [0, 1], "common": [84, 117, 182, 280], "commonli": [7, 72, 77, 78, 79, 80, 82, 92, 99, 101, 103, 117, 121, 130, 131, 138, 143, 156, 159, 160, 173, 174, 175, 176, 177, 178, 196, 199, 224, 264, 270, 271, 272, 273, 275, 276, 277, 280], "compar": [58, 206, 265], "compat": [4, 8, 49, 153, 168, 180, 196, 206, 270, 280], "complex": [2, 3, 7, 11, 28, 34, 37, 40, 41, 45, 47, 61, 65, 66, 69, 75, 135, 176, 178, 180, 182, 280], "compon": [16, 22, 23, 24, 25, 26, 27, 28, 63, 66, 182, 207, 280], "compos": [5, 141, 142, 143, 173, 174, 175, 176, 177, 178, 180, 280], "comprehens": 3, "comput": [7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 34, 43, 60, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 84, 92, 94, 95, 96, 97, 99, 100, 101, 103, 105, 106, 107, 116, 118, 119, 120, 121, 122, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 191, 195, 196, 197, 199, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 259, 260, 262, 266, 270, 280], "computation": [3, 16, 35], "compute_loss": [182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193], "concaten": [0, 80, 81, 82, 257, 258, 265, 268], "concept": [7, 16, 60], "condit": [9, 10, 13], "confer": 60, "config": 53, "configur": [21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 59, 68, 118, 119, 120], "conjunct": [84, 160], "connect": [20, 25, 26, 27, 28, 30, 31, 32, 33, 34, 43, 49, 50, 51, 52, 53, 58, 60, 94, 121, 122, 141, 142, 143, 154], "consecut": 53, "consid": [3, 13, 16, 69, 126, 127, 130, 131, 180, 192, 195, 221, 222, 280], "consider": 16, "consist": [2, 4, 20, 31, 32, 33, 34, 62, 105, 106, 107, 122, 170, 171, 172, 199, 204, 206, 260, 271, 278, 280], "consistent_tensor": 206, "consol": 61, "constant": [95, 96, 101, 103, 104, 125, 136, 156, 157, 162, 163, 164, 165, 166, 167, 168, 184, 185, 186, 187, 188, 189, 190, 191, 199, 260], "constant_pad": 260, "constraint": [1, 122], "construct": [7, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 66, 180, 220, 262, 266], "constructor": [54, 55, 56, 57], "contain": [1, 5, 10, 11, 16, 17, 18, 19, 26, 30, 34, 43, 49, 53, 61, 63, 65, 66, 67, 68, 69, 78, 84, 92, 94, 95, 96, 100, 116, 156, 157, 160, 181, 208, 209, 210, 211, 213, 214, 215, 216, 218, 219, 222, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 256, 259], "content": 117, "context": [195, 197], "contextmanag": 197, "contigu": 261, "continu": [134, 203], "contrast": [165, 166, 167, 280], "contribut": [116, 145, 146, 147, 148, 149, 173, 176, 177, 178, 183, 189, 251], "control": [122, 132, 158, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 206, 270, 280], "conv": [26, 43, 118, 119, 120, 163, 164], "conv1": [31, 32, 33, 69, 141, 142, 143, 173, 174, 175, 176, 177, 178], "conv1d": [83, 91, 118, 144, 151, 173, 176], "conv1dmodel": 141, "conv2": [31, 32, 33, 69, 141, 142, 143], "conv2d": [66, 69, 83, 91, 119, 144, 151, 163, 174, 177, 180], "conv2dmodel": 142, "conv3d": [83, 91, 120, 144, 151, 164, 175, 178], "conv3dmodel": 143, "conv_bia": [118, 119, 120], "conv_config": 53, "conv_lay": [30, 66], "convblock": 180, "convbnrelu1d": 123, "convbnrelu2d": 123, "convbnrelu3d": 123, "conveni": [4, 21, 59], "convent": 212, "converg": [16, 139, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 272], "convers": [157, 160, 274, 280], "convert": [5, 53, 62, 64, 78, 138, 207, 259, 269, 270, 274, 280], "convnetwork": 66, "convolut": [20, 21, 23, 24, 26, 30, 31, 32, 33, 34, 43, 49, 53, 58, 59, 60, 66, 80, 81, 82, 84, 118, 119, 120, 121, 122, 141, 142, 143, 174, 175, 177, 178, 260], "convolv": [80, 81, 82, 141, 142, 143], "coordin": 259, "core": [0, 1, 2, 3, 63, 180, 181, 207, 280], "corinna": 5, "corner": [116, 271, 273], "correct": [65, 157, 160, 186, 187, 188, 189, 190, 270], "correctli": [16, 63, 65, 66, 67, 68, 69, 157, 160, 206], "correspond": [0, 1, 2, 5, 11, 50, 51, 52, 65, 67, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 92, 94, 116, 135, 138, 152, 154, 162, 163, 164, 165, 166, 167, 174, 175, 183, 191, 193, 210, 211, 213, 214, 217, 237, 238, 244, 246, 257, 260, 262, 266, 268], "cort": 5, "cosh": [228, 245, 250], "cosin": [230, 234, 235, 244], "cost": 60, "could": 63, "count": [60, 61, 255], "counterclockwis": [117, 276], "cover": [8, 80, 81, 82], "coverag": [105, 106, 107], "creat": [2, 3, 7, 20, 21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 66, 69, 122, 180, 196, 198, 206, 219, 223, 224, 225, 226, 227, 259, 265, 269, 280], "creation": [66, 69, 280], "criterion": [156, 157, 158, 159, 160], "critic": [16, 182, 206], "crop": [271, 273, 280], "cross": [95, 96, 156, 157], "cross_entropi": [91, 98], "crossentropyloss": [151, 161], "cube": 228, "cumul": [72, 133], "current": [63, 183, 186, 192, 195], "custom": [4, 7, 20, 21, 27, 28, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 53, 58, 59, 62, 65, 66, 67, 68, 69, 117, 118, 119, 120, 132, 134, 180, 206, 223], "custom_config": 53, "custom_lenet": 30, "customiz": 280, "custommodul": 62, "customnetwork": 65, "customparametermodel": [67, 68], "cvpr": 60, "d": [60, 82, 89, 107, 110, 114, 120, 164, 167, 168, 172, 175, 178, 196, 220, 276], "d_": [82, 107, 110, 114, 143, 172, 175, 178], "d_1": 168, "d_2": 168, "d_n": 168, "d_out": [82, 110, 114], "dampen": [183, 191, 193], "data": [4, 5, 7, 14, 62, 64, 68, 79, 80, 82, 84, 88, 89, 94, 117, 118, 119, 120, 122, 135, 139, 141, 142, 143, 154, 167, 173, 175, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 199, 206, 207, 208, 209, 215, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 254, 260, 261, 262, 263, 264, 266, 269, 270, 273, 274, 275, 276, 277, 280], "databas": 5, "dataload": [2, 3], "dataset": [3, 5, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 117, 185, 197, 269, 271, 280], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 216, "debug": [61, 69, 195, 204, 280], "decai": [183, 184, 185, 186, 187, 188, 189, 190, 191, 193], "decompos": [9, 17, 19], "decomposit": [8, 9, 13, 16, 17, 19], "decor": 198, "decoupl": [184, 185, 187, 188, 189, 190], "decreas": [186, 187, 192], "deep": [1, 3, 4, 7, 26, 34, 35, 36, 37, 39, 40, 44, 45, 48, 60, 101, 133, 136, 180, 206, 269, 270, 280], "deeper": [7, 23, 25, 28, 34, 41, 60, 136], "def": [0, 1, 2, 3, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 152, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270], "default": [1, 5, 15, 19, 20, 21, 22, 23, 24, 25, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 71, 74, 78, 80, 81, 82, 85, 86, 87, 88, 89, 95, 96, 97, 99, 100, 101, 103, 104, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 126, 127, 128, 129, 130, 131, 132, 134, 138, 141, 142, 143, 145, 146, 147, 148, 149, 152, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 181, 182, 189, 195, 201, 202, 203, 205, 207, 219, 220, 221, 222, 223, 224, 225, 226, 227, 239, 240, 241, 248, 252, 253, 254, 255, 257, 259, 260, 262, 265, 268, 270, 274, 275, 277], "defin": [1, 3, 4, 7, 22, 23, 24, 25, 26, 27, 28, 30, 34, 43, 50, 51, 52, 53, 65, 66, 67, 68, 69, 133, 156, 157, 158, 159, 160, 173, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 199, 202, 203, 217, 222, 233, 252, 269, 280], "definit": [7, 9, 118, 119, 120, 280], "degre": [117, 276, 280], "delai": 183, "delta": [78, 97, 138, 158, 184], "delta_": [78, 138], "demonstr": [7, 8, 60, 180, 199], "denomin": [101, 103, 104, 118, 119, 120, 162, 163, 164, 165, 166, 167, 168, 184, 185, 186, 187, 188, 189, 190, 191, 209], "denot": [14, 137, 141, 142, 143, 145, 146, 147, 148, 149, 252], "dens": [7, 185], "dense1": 7, "dense2": 7, "densenet": 121, "densiti": [72, 133], "depend": [7, 14, 15, 68, 95, 96, 97, 99, 100, 116, 141, 210, 220, 239, 241, 262, 266, 273, 274, 278], "depth": [66, 82, 89, 107, 110, 114, 143, 164, 167, 172, 175, 178], "depthwis": [80, 81, 82], "deriv": [16, 17, 78, 105, 106, 107, 133, 138, 139, 141, 142, 143, 152, 154, 198], "descend": 19, "descent": [7, 183, 193], "describ": [10, 11], "descript": 280, "deseri": 62, "design": [3, 4, 7, 8, 20, 21, 23, 24, 25, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 47, 59, 60, 64, 66, 67, 68, 69, 71, 76, 136, 145, 180, 199, 280], "desir": [62, 105, 106, 107, 170, 171, 172, 252, 254], "destin": 63, "det": [8, 12], "det_a": 10, "detail": [7, 61, 182, 206, 212], "detect": 60, "determin": [0, 7, 8, 9, 10, 30, 105, 106, 107, 126, 127, 130, 131, 141, 142, 143, 170, 171, 172, 174, 175, 177, 178, 191, 195, 201, 202, 203, 205, 221, 222, 271, 273], "determinist": 117, "develop": [7, 180, 206, 280], "deviat": [126, 128, 130, 269, 272, 280], "diag": [16, 228], "diagon": [16, 17, 19, 220, 223, 251], "diagonaliz": 11, "dict": [21, 23, 24, 25, 27, 28, 30, 34, 50, 51, 52, 59, 63, 65, 67, 153, 181], "dictionari": [30, 63, 64, 65, 67, 69, 181], "differ": [0, 14, 22, 30, 66, 69, 78, 92, 116, 122, 138, 152, 159, 182, 196, 204, 206, 218, 227, 253, 264, 280], "differenti": [7, 9, 18, 133, 180, 201, 202, 203, 205, 207, 219, 221, 222, 224, 226], "digit": [5, 33, 60], "dilat": [80, 81, 82, 118, 119, 120, 141, 142, 143], "dilation_height": 84, "dilation_width": 84, "dim": [157, 160], "dimens": [10, 11, 13, 14, 17, 18, 19, 20, 34, 49, 53, 58, 64, 78, 92, 94, 101, 103, 104, 106, 107, 116, 121, 122, 138, 141, 142, 143, 162, 163, 164, 165, 166, 167, 168, 171, 172, 174, 175, 176, 177, 178, 196, 199, 201, 205, 207, 211, 221, 239, 240, 241, 248, 251, 252, 253, 255, 257, 260, 262, 264, 265, 266, 267, 268, 271, 273, 278], "dimension": [14, 16, 17, 19, 80, 81, 82, 108, 109, 110, 112, 113, 114, 122, 141, 142, 143, 147, 148, 149, 162, 163, 164, 165, 166, 167, 173, 174, 175, 176, 177, 178, 196, 211, 212, 216, 220, 237, 240, 248, 251, 253, 256, 261, 262, 264, 266], "diminish": 185, "direct": [11, 156, 157, 158, 159, 160, 183, 191, 192, 193], "directli": [65, 66, 67, 68, 116, 184, 185, 187, 188, 189, 190, 204, 206, 254, 280], "directori": [3, 4, 5], "disabl": [195, 197], "discontinu": 243, "discrep": [156, 157, 160], "discret": [202, 206], "disk": 3, "displai": [21, 59, 61], "distribut": [72, 78, 116, 126, 127, 128, 129, 130, 131, 133, 138, 141, 142, 143, 145, 146, 147, 148, 149, 152, 154, 157, 160, 173, 174, 175, 201, 202, 203, 205, 206, 240, 248, 251, 253, 265, 272, 274, 275, 276, 277], "div": 228, "divers": [117, 275, 277, 280], "diversifi": 280, "divid": [1, 16, 66, 69, 78, 80, 81, 82, 138, 156, 157, 158, 159, 160, 209, 272], "divis": [7, 16, 80, 81, 82, 145, 146, 147, 148, 149, 184, 185, 186, 187, 188, 189, 190, 191, 209], "do": [16, 18, 62, 65, 66, 67, 68, 85, 86, 87, 88, 180, 190, 195, 227, 251, 260], "document": [4, 7, 60, 182, 199, 206], "doe": [7, 14, 15, 16, 17, 19, 61, 62, 65, 66, 67, 68, 69, 131, 186, 187, 192, 195, 197, 201, 202, 203, 204, 205, 219, 220, 221, 222, 223, 224, 225, 226, 227, 263], "doesn": 197, "doi": 60, "domain": 4, "don": 197, "dot": [11, 14, 65, 66, 67, 68, 69, 168, 176, 177, 178, 211, 216, 228, 255, 257, 265, 268], "down": [3, 180, 278], "download": [4, 5], "drawback": 71, "drawn": [201, 202, 203, 205, 206, 276], "drop": [145, 146, 147, 148, 149], "dropout": [20, 24, 53, 58, 60, 72, 85, 87, 88, 89, 145, 147, 148, 149], "dropout1d": [90, 91, 150, 151], "dropout1dmodel": 147, "dropout2d": [90, 91, 150, 151], "dropout3d": [90, 91, 150, 151], "dropout_prob": 24, "dropoutmodel": 146, "dtype": [62, 64, 207, 219, 220, 221, 222, 223, 224, 225, 226, 227, 254, 270], "due": [14, 16, 80, 81, 135, 276], "dummi": 61, "duplic": [65, 67], "dure": [3, 7, 10, 11, 13, 16, 17, 19, 22, 23, 24, 34, 62, 63, 64, 65, 66, 67, 68, 69, 78, 85, 86, 87, 88, 89, 101, 103, 117, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 195, 197, 207, 208, 239, 240, 241, 248, 253, 270, 273, 276, 280], "dy": [74, 134], "dynam": [0, 2, 3, 49, 60, 63, 66, 67, 68, 69, 105, 106, 107, 122, 168, 170, 171, 172, 185, 190, 195], "dynamicnetwork": 66, "e": [0, 10, 11, 13, 14, 17, 19, 23, 24, 25, 27, 28, 30, 31, 32, 33, 53, 62, 78, 122, 137, 138, 145, 157, 181, 184, 191, 192, 223, 235, 237, 238, 245, 250, 251, 255, 274], "each": [1, 2, 3, 4, 11, 14, 16, 17, 19, 20, 30, 34, 43, 49, 50, 51, 52, 53, 58, 60, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 92, 94, 101, 103, 105, 106, 107, 121, 122, 135, 138, 141, 142, 143, 145, 146, 147, 148, 149, 152, 154, 156, 157, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 257, 259, 260, 262, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 278, 280], "earli": 190, "eas": [4, 7], "easi": [2, 3, 4, 7, 64, 65, 67], "easier": [3, 65, 66, 69], "easili": [4, 64, 68, 280], "eccv": 60, "economi": 19, "edg": 260, "educ": [7, 60], "effect": [60, 65, 66, 67, 68, 69, 78, 80, 81, 82, 84, 132, 133, 135, 137, 138, 139, 162, 163, 164, 165, 166, 167, 168, 195, 196, 197, 257, 268], "effici": [1, 2, 3, 5, 7, 8, 13, 18, 27, 28, 60, 84, 157, 180, 197], "eig": 12, "eigenvalu": [11, 17], "eigenvector": 11, "eigval": 11, "eigvec": 11, "either": [94, 199, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 254, 259], "element": [0, 16, 17, 24, 64, 68, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 118, 119, 120, 121, 135, 138, 141, 142, 143, 145, 146, 147, 148, 149, 156, 157, 158, 159, 160, 168, 173, 174, 175, 176, 177, 178, 196, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 256, 259, 260, 262, 263, 264, 266], "elementwise_affin": 168, "elsewher": [176, 177, 178, 223], "elu": [73, 91, 140, 151], "elumodel": 132, "empti": [63, 69, 228], "empty_lik": 228, "enabl": [0, 1, 2, 3, 7, 14, 19, 27, 49, 50, 51, 52, 60, 63, 64, 65, 66, 67, 68, 135, 141, 142, 143, 152, 154, 180, 182, 195, 197, 201, 202, 203, 205, 207, 269], "encapsul": [180, 207], "encod": [157, 160], "encourag": [146, 147, 148, 149, 156, 157, 160, 186], "end": [15, 71, 74, 75, 76, 132, 134, 135, 136, 158, 159, 160, 173, 174, 175, 176, 177, 178, 190, 192, 213, 214, 216, 219, 229, 233, 239, 241, 243, 255, 260, 280], "enforc": [63, 65, 67], "engin": 16, "enhanc": [24, 25, 27, 28, 32, 58, 59, 60, 65, 67, 122, 280], "ensur": [3, 5, 16, 17, 18, 62, 63, 64, 65, 66, 67, 68, 69, 78, 105, 106, 107, 118, 119, 120, 134, 138, 145, 146, 147, 148, 149, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 183, 184, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 199, 201, 202, 203, 204, 205, 206, 217, 240, 248, 253, 260, 270, 271, 272, 273, 274, 278, 280], "enter": 197, "entir": [3, 87, 88, 89, 148, 149, 206], "entri": [30, 264], "entropi": [95, 96, 156, 157], "environ": 7, "ep": [95, 96, 101, 103, 104, 118, 119, 120, 156, 157, 162, 163, 164, 165, 166, 167, 168, 184, 185, 186, 187, 188, 189, 190, 191], "epoch": [1, 3], "epsilon": [156, 157, 162, 163, 164, 165, 166, 167, 168, 184, 185, 186, 187, 188, 189, 190, 191], "equal": [14, 116, 173, 174, 175, 271, 273], "equat": [11, 16, 18], "equival": [212, 251, 261], "error": [0, 3, 11, 13, 63, 66, 67, 68, 69, 72, 97, 99, 133, 156, 157, 158, 159, 180, 181, 197, 199], "especi": [3, 65, 67, 68, 137, 196, 197, 199, 204, 269, 270, 274, 280], "essenti": [1, 3, 7, 8, 14, 16, 26, 81, 84, 180, 204, 206, 239, 269, 270, 274, 280], "estim": [159, 186, 187, 188, 189, 190, 191], "et": [23, 60], "eta": 192, "eta_": 192, "etc": [156, 270], "euclidean": 15, "european": 60, "evalu": [63, 101, 103, 145, 146, 147, 148, 149, 162, 163, 164, 165, 166, 167, 280], "even": [184, 197, 219, 220, 223, 224, 225, 226, 227], "evenli": [105, 106, 107, 170, 171, 172, 219], "everi": [1, 280], "everywher": 243, "exact": [63, 66, 252, 274, 276], "exactli": 69, "exampl": [4, 212], "excel": 25, "except": [0, 243, 255, 257, 268], "excit": [43, 46, 60, 121], "exclus": [202, 205, 219], "exdb": 5, "execut": [66, 197], "exist": [18, 65, 67, 69, 198, 255], "exit": 197, "exp": [71, 76, 77, 79, 132, 136, 228], "expand": [4, 84, 262, 266], "expect": [9, 66, 69, 145, 146, 147, 148, 149, 168, 180, 199], "expens": 3, "experi": [7, 204, 206, 280], "experiment": 206, "explan": [14, 16, 20, 53, 58, 105, 106, 107, 170, 171, 172, 183], "explicit": 69, "explicitli": [60, 65, 67], "explod": [136, 162, 163, 164], "explor": [180, 206], "expon": [14, 217], "exponenti": [71, 76, 78, 132, 136, 138, 145, 186, 187, 188, 189, 190, 237], "extend": [4, 49], "extens": 182, "extern": [4, 7], "extract": [22, 26, 34, 49, 60, 84, 143, 173, 175, 198, 220, 239, 241, 271, 273], "extractor": [30, 31, 32, 33], "extrem": [16, 35, 60], "ey": 228, "f": [1, 4, 5, 7, 67, 68, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 138], "f_1": 121, "f_2": 121, "facilit": [22, 65, 69, 78, 138, 141, 142, 143, 180, 182, 272, 280], "factor": [24, 71, 80, 81, 82, 84, 121, 130, 131, 183, 190, 191, 192, 193, 199], "failur": [65, 66, 67, 68, 180], "fals": [1, 5, 19, 61, 62, 63, 64, 85, 86, 87, 88, 89, 101, 103, 116, 124, 126, 127, 128, 129, 130, 131, 141, 142, 143, 152, 154, 186, 187, 191, 195, 201, 202, 203, 205, 207, 219, 220, 221, 222, 223, 224, 225, 226, 227, 239, 240, 241, 248, 253, 254, 270], "famili": 198, "fan": [126, 127, 130, 131], "fan_in": [126, 127], "fan_out": [126, 127], "fast": 190, "faster": [185, 189, 197], "fc": [26, 34, 43, 49, 66, 121, 142, 143, 173, 174, 175, 176, 177, 178], "fc1": [32, 33, 61, 65, 69, 133, 135, 136, 137, 139, 154], "fc2": [32, 33, 61, 65, 69, 133, 135, 136, 137, 139, 154], "fc3": 33, "featur": [3, 20, 22, 25, 26, 30, 31, 32, 33, 34, 44, 46, 47, 49, 50, 51, 52, 53, 58, 59, 60, 92, 94, 101, 118, 119, 120, 121, 122, 143, 146, 147, 148, 149, 152, 154, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 180, 185], "feature_extractor": 30, "fed": [3, 280], "feed": [3, 207, 280], "feedforward": 61, "fergu": [58, 60], "fetch": 0, "few": 61, "fewer": 1, "field": [5, 49, 60, 122], "file": [3, 198], "fill": [124, 128, 129, 201, 202, 203, 205, 224, 225, 226, 227], "filter": [58, 60, 80, 81, 82, 84, 118, 119, 120, 142, 143], "filter_height": 84, "filter_s": 84, "filter_width": 84, "final": [22, 23, 24, 25, 26, 27, 28, 34, 43, 49, 50, 51, 52, 65, 66, 67, 68, 69, 122, 269, 280], "find": [18, 239, 241], "fine": [121, 280], "finish": 197, "first": [5, 11, 30, 58, 61, 66, 67, 92, 121, 152, 186, 187, 188, 189, 190, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 259, 268, 269, 270, 280], "fit": 180, "fix": [66, 260], "flatten": [26, 30, 69, 84, 216, 258, 261, 262], "flexibl": [1, 3, 4, 7, 22, 26, 27, 28, 30, 34, 53, 65, 66, 67, 68, 69, 180, 182, 199, 224, 225, 270, 280], "flip": [275, 277, 280], "float": [2, 5, 24, 62, 64, 71, 74, 85, 86, 87, 88, 89, 95, 96, 97, 101, 103, 104, 117, 118, 119, 120, 124, 128, 129, 130, 131, 132, 134, 145, 146, 147, 148, 149, 156, 157, 158, 162, 163, 164, 165, 166, 167, 168, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 199, 205, 207, 219, 222, 233, 254, 272, 274, 275, 276, 277], "float32": [62, 64, 207, 219, 220, 223, 224, 226, 254, 270], "float64": [227, 254, 270], "flow": [25, 26, 43, 60, 69, 131, 133, 137, 139, 141, 142, 143, 152, 154, 195], "fly": [2, 3], "fname": 3, "focu": 7, "focus": 7, "follow": [0, 7, 8, 11, 17, 18, 19, 20, 53, 58, 61, 71, 72, 74, 75, 76, 77, 78, 79, 92, 94, 116, 118, 119, 120, 121, 122, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 198, 199, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 239, 241, 259, 263, 271, 272, 273, 274, 275, 276, 277, 280], "form": [17, 122, 216, 259, 262, 266, 280], "format": [2, 3, 5, 61, 157, 160, 270], "formul": 72, "formula": [11, 19, 78, 105, 106, 107, 138, 158, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 212, 253, 274], "forward": [7, 20, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 50, 51, 52, 53, 58, 61, 62, 63, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193], "found": 7, "foundat": [26, 43, 63, 180, 182, 207], "four": 260, "frac": [9, 10, 11, 13, 14, 15, 16, 18, 19, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 92, 94, 105, 106, 107, 108, 109, 110, 112, 113, 114, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 184, 185, 186, 187, 188, 189, 190, 191, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 272], "frame": 89, "framework": [4, 7, 60, 157, 160, 162, 163, 164, 165, 166, 167, 181, 182, 280], "frequent": [157, 160], "from": [0, 1, 2, 3, 4, 5, 7, 14, 16, 26, 34, 50, 51, 52, 54, 55, 56, 57, 61, 62, 63, 64, 65, 66, 67, 68, 69, 84, 92, 101, 103, 116, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 141, 142, 143, 145, 146, 147, 148, 149, 152, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 201, 202, 203, 205, 206, 207, 212, 213, 214, 218, 220, 239, 240, 241, 248, 253, 255, 257, 259, 262, 264, 265, 266, 268, 271, 272, 273, 274, 275, 276, 277, 280], "full": 19, "full_matric": 19, "fulli": [4, 8, 20, 26, 30, 31, 32, 33, 34, 43, 49, 50, 51, 52, 53, 58, 60, 94, 121, 122, 154, 206], "func": 198, "function": [3, 4, 5, 7, 8, 63, 65, 66, 67, 68, 69, 118, 119, 120, 121, 132, 133, 134, 135, 136, 137, 138, 139, 145, 146, 147, 148, 149, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 180, 182, 199, 206, 269, 280], "fundament": [7, 94, 154, 270], "further": [7, 206, 240, 248, 253], "fuse": 49, "fusion": [50, 51, 52], "futur": 153, "g": [0, 10, 11, 14, 17, 19, 23, 24, 25, 27, 28, 30, 31, 32, 33, 53, 121, 122, 145, 181, 184, 191, 255, 274], "g_": 185, "g_t": 191, "gain": [130, 131], "gamma": [162, 163, 164, 165, 166, 167, 168], "gap": [34, 49, 121], "gaussian": [72, 133], "gelu": [73, 91, 140, 151], "gelunetwork": 133, "gener": [16, 61, 117, 145, 146, 147, 148, 149, 166, 187, 189, 190, 197, 201, 202, 203, 204, 205, 206, 211, 219, 221, 222, 259, 273, 274, 275, 277, 280], "get": 5, "give": [7, 183, 191], "given": [10, 11, 14, 16, 17, 19, 84, 156, 157, 160, 181, 195, 225, 227, 269, 274, 275, 277, 280], "global": [0, 34, 43, 49, 121, 195, 197, 204, 206], "go": [23, 60], "goal": [156, 157, 160], "googlenet": [23, 60], "gpu": 60, "grad": [62, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 84, 92, 94, 116, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 181, 182, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 275, 277, 278], "grad_output": 14, "gradient": [7, 8, 25, 26, 60, 62, 64, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 201, 202, 203, 205, 219, 220, 221, 222, 223, 224, 225, 226, 227, 254, 270], "grain": 121, "graph": [7, 131, 207, 219, 220, 223, 224, 225, 226, 227, 270], "grayscal": [5, 30, 31, 32, 33, 274, 280], "greater": 233, "green": 274, "grid": 259, "groundbreak": 60, "group": [49, 66, 80, 81, 82, 118, 119, 120, 122, 141, 142, 143, 181, 182], "group1": 66, "group2": 66, "guarante": 204, "h": [34, 50, 51, 52, 81, 82, 84, 88, 89, 106, 107, 109, 110, 113, 114, 116, 117, 119, 120, 121, 163, 164, 166, 167, 171, 172, 175, 178, 271, 273], "h_": [81, 82, 106, 107, 109, 110, 113, 114, 116, 142, 143, 171, 172, 174, 175, 177, 178], "h_out": [81, 82, 109, 110, 113, 114], "h_stack": 257, "ha": [0, 11, 61, 69, 80, 81, 82, 118, 119, 120, 156, 157, 162, 163, 164, 165, 166, 167, 168, 181, 182, 212, 251, 255, 257, 265, 268, 274], "half": 246, "hand": 18, "handl": [0, 3, 7, 16, 63, 65, 66, 67, 68, 69, 157, 160, 180, 182, 197], "handwritten": [5, 33], "hardwar": 7, "hat": [186, 187, 188, 189, 190], "have": [0, 1, 10, 11, 13, 16, 17, 19, 64, 66, 68, 69, 81, 82, 131, 180, 223, 224, 225, 226, 227, 239, 241, 255, 257, 259, 264, 265, 268, 272, 278], "he": 60, "height": [81, 82, 84, 88, 89, 106, 107, 109, 110, 113, 114, 116, 117, 122, 142, 143, 163, 164, 166, 167, 171, 172, 174, 175, 177, 178, 271, 273, 278], "help": [7, 24, 74, 76, 89, 132, 134, 136, 139, 162, 163, 164, 173, 174, 176, 177, 183, 186, 187, 189, 195, 196, 197, 199], "henc": 263, "here": [3, 9, 63, 92, 180, 182, 196, 197, 199, 206, 269, 270, 280], "hidden": [20, 58, 66], "hidden_s": 66, "hierarch": [66, 69, 180], "hierarchi": 142, "hierarchicalnetwork": 66, "high": [7, 42, 48, 202, 205], "higher": [157, 160, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 211, 212, 216, 237], "highest": 202, "highli": 60, "highlight": [121, 176, 177, 178], "hint": 199, "histor": 185, "histori": [201, 202, 203, 205, 219, 220, 221, 222, 223, 224, 225, 226, 227], "hold": [65, 66, 67, 68], "horizont": [257, 265, 275, 280], "hot": [157, 160], "how": [2, 3, 7, 66, 69, 180, 199, 280], "howev": [62, 131], "hstack": 258, "http": 5, "hu": [60, 121], "huber": [97, 158], "huber_loss": [91, 98], "huberloss": [151, 161], "huberregressionmodel": 158, "hue": 280, "hyperbol": [79, 139, 235, 245, 250], "hyperparamet": [34, 181, 183], "i": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 126, 127, 128, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 237, 238, 239, 240, 241, 243, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280], "iccv": 60, "ideal": [7, 69], "ident": [13, 14, 60, 117, 151, 155, 204, 206, 223, 263], "identifi": 67, "idx": [2, 3], "ieee": [60, 121], "ii": 251, "ij": [78, 116, 138, 210, 211, 212, 216, 259], "ik": [210, 211, 212], "ill": [10, 16], "ilsvrc": 60, "imag": [3, 4, 5, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 59, 60, 81, 103, 117, 119, 121, 142, 166, 259, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280], "image_dir": 3, "image_path": 3, "imagedataset": 3, "imageio": 3, "imagenet": 60, "imbal": [157, 160], "impact": [60, 189], "implement": [2, 3, 7, 16, 20, 22, 23, 24, 25, 27, 28, 30, 34, 43, 58, 60, 63, 84, 122, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 257, 268, 274], "impli": [141, 142], "import": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 86, 89, 92, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280], "improp": [66, 69, 206], "improv": [23, 24, 25, 26, 28, 34, 49, 58, 60, 101, 117, 121, 133, 136, 139, 183, 184, 185, 186, 187, 188, 189, 190, 191, 199, 273, 276, 280], "imread": 3, "in1_featur": [92, 152], "in2_featur": [92, 152], "in_channel": [34, 66, 69, 118, 119, 120, 121, 122, 141, 142, 143, 163, 164, 173, 174, 175, 176, 177, 178, 180], "in_featur": [65, 66, 69, 94, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 145, 146, 147, 152, 154, 156, 157, 158, 159, 160, 162, 165, 168, 173, 174, 175, 176, 177, 178], "incept": [23, 24, 25, 26, 27, 28, 29, 60], "inception_resnet_v1": 60, "inception_resnet_v2": 60, "inception_v1": 60, "inception_v3": 60, "inception_v4": 60, "inceptionresnet": [27, 28], "includ": [3, 4, 7, 8, 14, 15, 20, 22, 23, 24, 27, 30, 34, 43, 49, 53, 58, 61, 63, 64, 66, 68, 69, 116, 118, 119, 120, 180, 181, 182, 189, 199, 206, 212, 260], "inclus": [64, 67, 202, 205], "incom": [94, 154], "incomplet": 2, "incompletedataset": 2, "incorpor": [19, 43, 44, 45, 46, 47, 48, 49, 133], "increas": [49, 80, 81, 82, 84, 117, 185, 192, 196, 257, 268, 274, 275, 277, 280], "independ": [66, 80, 81, 82, 145, 146, 147, 148, 149, 168, 212, 222, 272, 274, 276, 278], "index": [0, 2, 5, 196, 219, 220, 223, 259, 263], "indexerror": 0, "indic": [0, 1, 53, 61, 64, 66, 68, 69, 96, 100, 157, 160, 173, 195, 207, 271, 273], "individu": [3, 66, 69, 158, 168, 182, 185, 192], "induc": [76, 136], "inf": 249, "infer": [66, 69, 197], "infin": [17, 19, 188], "inform": [7, 60, 61, 62, 121, 182, 184, 197], "infti": [15, 190], "inherit": [1, 183, 191, 193], "init": 125, "initi": [1, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 62, 64, 65, 66, 67, 68, 69, 122, 124, 126, 127, 128, 129, 130, 131, 141, 142, 143, 152, 154, 156, 157, 158, 159, 160, 162, 163, 164, 168, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 201, 204, 205, 206, 219, 223, 224, 225, 226, 227, 254], "initial_accumulator_valu": 185, "inner": [7, 210, 228], "input": [7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 49, 58, 60, 61, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 197, 199, 206, 207, 208, 210, 211, 212, 216, 220, 222, 225, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280], "input1": 152, "input2": 152, "input_": [20, 58, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 170, 171, 172], "input_1": 92, "input_2": 92, "input_data": [132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 168, 173, 174, 175, 176, 177, 178], "input_s": [66, 68, 138, 157, 160], "input_shap": 61, "input_tensor": [7, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 50, 51, 52, 53, 62, 65, 66, 67, 68, 69, 78, 121, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 180, 271, 272, 273, 274, 275, 276, 277, 278], "insid": [3, 195, 197], "insight": [7, 60], "inspect": [63, 64, 69, 181], "instabl": [16, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193], "instal": 7, "instanc": [0, 1, 7, 21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 59, 61, 63, 64, 65, 67, 68, 69, 103, 165, 166, 167, 168, 181, 198, 254, 262, 266, 280], "instance_norm": [91, 102, 165, 166, 167], "instancenorm1d": [151, 169], "instancenorm1dmodel": 165, "instancenorm2d": [151, 169], "instancenorm3d": [151, 169], "instanti": [2, 198], "instead": [7, 61, 65, 66, 67, 68, 69, 126, 127, 130, 131, 186, 187, 188, 197, 199, 221, 222], "int": [0, 1, 2, 5, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 78, 80, 81, 82, 84, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 124, 128, 129, 130, 131, 138, 141, 142, 143, 152, 154, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 186, 187, 188, 189, 190, 192, 198, 201, 202, 203, 204, 205, 207, 219, 220, 221, 223, 224, 226, 233, 239, 240, 241, 248, 252, 253, 254, 255, 260, 262, 263, 264, 265, 266, 267, 271, 273, 278], "integ": [1, 3, 14, 43, 53, 80, 81, 82, 106, 107, 141, 142, 143, 168, 171, 172, 174, 175, 176, 177, 178, 199, 202, 203, 205, 206, 221, 224, 226, 240, 248, 252, 253, 260, 262, 263, 266], "integr": [1, 2, 4, 5, 8, 60, 64, 66, 68, 69, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 152, 154, 173, 174, 175, 176, 177, 178], "intellig": [60, 121], "intend": [62, 67, 68], "intens": [16, 35, 272, 274], "intent": 199, "interact": [92, 152, 180, 206], "interdepend": 60, "interfac": [2, 63, 66, 182], "interfer": [195, 197], "intermedi": [16, 121], "intern": [35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 60, 65, 66, 67, 68, 69, 157, 160, 180, 271, 272, 273, 274, 275, 276, 277, 278], "interpol": [91, 115, 278], "interpret": [60, 78, 138, 199, 255], "interv": [201, 205, 219], "introduc": [23, 24, 60, 75, 121, 133, 135, 137, 139, 145, 146, 147, 148, 149, 273, 276, 280], "introspect": 69, "intuit": [7, 65, 67, 180, 280], "inv": 12, "inv_a": 13, "invari": [174, 177], "invers": [7, 10, 13, 14, 16, 185, 230, 231, 232], "invert": [10, 13, 14, 18], "invok": 198, "involv": [9, 10, 11, 13, 16, 17, 19, 49, 71, 72, 74, 75, 76, 77, 79, 92, 94, 116, 141, 142, 143, 152, 154, 199, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 227, 237, 238, 239, 241, 244, 246, 259, 260, 262, 266], "is_leaf": 207, "issu": [3, 136, 162, 163, 164, 186, 187], "item": 159, "iter": [0, 1, 2, 3, 62, 63, 66, 68, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 219], "ith": [78, 138], "its": [4, 14, 16, 20, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 58, 60, 61, 62, 65, 66, 67, 68, 80, 81, 82, 84, 117, 122, 131, 133, 135, 176, 177, 178, 180, 181, 184, 192, 195, 196, 197, 198, 219, 221, 222, 226, 239, 241, 254, 263, 272, 275, 277, 280], "itself": [9, 14, 65, 66, 67, 68], "j": [5, 78, 121, 138, 162, 163, 164, 165, 166, 167, 173, 174, 176, 177, 259, 265, 271, 273], "jie": 60, "jk": 211, "join": [3, 255], "json": 198, "k": [14, 80, 141, 157, 163, 164, 166, 167, 173, 176, 177, 210, 211, 220, 223, 255], "k_d": [82, 143, 175, 178], "k_h": [81, 82, 142, 143, 174, 175, 178], "k_w": [81, 82, 142, 143, 174, 175, 178], "kaim": [60, 126, 127, 130, 131], "kaiming_norm": 125, "kaiming_uniform": 125, "karen": 60, "keep": [63, 135, 184, 197, 263], "keep_grad": [64, 201, 202, 203, 205, 207, 219, 220, 221, 222, 223, 224, 225, 226, 227, 254, 270], "keep_var": 63, "keepdim": [239, 240, 241, 248, 253], "kei": [60, 63, 65, 67, 69, 181], "kept": [240, 248, 253], "kernel": [30, 31, 32, 33, 49, 50, 51, 52, 58, 60, 80, 81, 82, 84, 105, 106, 107, 108, 109, 110, 112, 113, 114, 118, 119, 120, 122, 141, 142, 143, 170, 171, 172, 174, 175, 178], "kernel_s": [49, 50, 51, 52, 66, 69, 108, 109, 110, 112, 113, 114, 118, 119, 120, 122, 141, 142, 143, 163, 164, 173, 174, 175, 176, 177, 178], "keyerror": 63, "keyword": [21, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 59, 63, 153], "kj": [210, 212], "known": 60, "krizhevski": 60, "kroneck": [78, 138], "kwarg": [21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 59, 63, 153, 198], "l": [9, 16, 80, 87, 105, 108, 112, 118, 121, 145, 146, 147, 148, 149, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170], "l2": [183, 184, 185, 186, 187, 188, 189, 190, 191, 193], "l_": [80, 105, 108, 112, 141, 170, 173, 176], "l_out": [80, 108, 112], "label": [4, 5, 24, 156, 157, 160], "lambd": 183, "lambda": [11, 76, 136, 183, 187], "lambda_1": 11, "lambda_2": 11, "lambda_i": 11, "lambda_n": 11, "languag": [4, 141, 152, 173, 176], "larg": [0, 3, 16, 35, 36, 37, 40, 44, 45, 60, 158, 180, 183, 186, 187, 188, 191, 192, 193, 197], "larger": [34, 49, 65, 67, 80, 81, 82, 84, 183, 213, 260, 271, 273, 278], "largest": 239, "last": [1, 78, 104, 138, 211, 212, 255, 275, 277], "latest": 4, "layer": [7, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 63, 65, 66, 69, 78, 94, 101, 103, 104, 118, 119, 120, 121, 122, 126, 127, 130, 131, 138, 141, 142, 143, 152, 153, 154, 160, 168, 173, 174, 175, 176, 177, 178, 180, 206, 260, 270], "layer1": 198, "layer2": 198, "layer_group": 66, "layer_norm": [91, 102, 168], "layer_sequ": [66, 69], "layernorm": [151, 169], "layernormmodel": 168, "lead": [66, 69, 133, 165, 166, 167, 168, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 206], "leaf": 207, "leaki": [74, 134], "leaky_relu": [73, 91, 134], "leakyrelu": [140, 151], "learn": [1, 3, 4, 5, 7, 14, 16, 58, 59, 60, 65, 66, 67, 68, 75, 78, 121, 132, 134, 135, 138, 141, 142, 143, 146, 147, 148, 149, 152, 154, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 204, 269, 270, 280], "learnabl": [62, 63, 64, 101, 103, 104, 118, 119, 120, 141, 142, 143, 152, 154, 162, 163, 164, 165, 166, 167, 168, 180], "least": [16, 17, 19, 251], "lecun": [5, 60], "left": [14, 15, 16, 19, 72, 78, 133, 138, 156, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 176, 177, 178, 271, 273], "leftarrow": 189, "len": [0, 1, 2, 3, 259], "lenet": [29, 31, 32, 33, 60], "lenet_1": 60, "lenet_4": 60, "lenet_5": 60, "length": [66, 80, 87, 105, 108, 112, 141, 153, 162, 165, 170, 173, 176, 260, 272], "leq": [158, 190, 217, 233], "lerp": 116, "less": [0, 71, 74, 97, 132, 134, 157, 158, 160, 233], "let": 11, "level": [7, 26], "leverag": [18, 25, 28, 60, 122, 180], "li": 60, "librari": [3, 7, 8, 63, 180, 181, 182, 198, 199, 206, 207, 280], "lightweight": [7, 38, 46, 122], "like": [7, 26, 50, 51, 52, 60, 62, 63, 66, 69, 80, 130, 131, 136, 145, 162, 163, 164, 165, 166, 167, 195, 196, 199, 254, 270, 280], "likelihood": [100, 157, 160], "limit": [61, 184, 233], "linalg": [7, 12], "linalgerror": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "linear": [7, 8, 9, 16, 17, 18, 43, 61, 65, 66, 67, 69, 71, 72, 74, 75, 76, 126, 127, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 145, 146, 147, 152, 153, 156, 157, 158, 159, 160, 162, 165, 168, 173, 174, 175, 176, 177, 178, 198, 223], "linearli": 158, "list": [0, 1, 30, 34, 43, 49, 53, 61, 62, 64, 65, 66, 67, 68, 104, 122, 153, 168, 181, 199, 201, 202, 203, 205, 207, 220, 221, 222, 224, 225, 226, 227, 252, 263, 264, 267, 269], "listdir": 3, "liter": [34, 95, 96, 97, 99, 100, 116, 118, 119, 120, 122, 126, 127, 141, 142, 143, 156, 157, 158, 159, 160, 259], "ln": 217, "load": [3, 4, 5, 62, 63, 64, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 198], "load_state_dict": [63, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193], "loader": [1, 2, 3], "local": [60, 84, 141], "locat": [60, 116], "log": [100, 156, 157, 160, 228], "log_softmax": 160, "logarithm": [217, 237, 238], "logic": [3, 170, 171, 172, 180, 181], "logit": [20, 58, 78, 138, 157], "logsoftmax": [157, 160], "long": [189, 252], "loop": [1, 66, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193], "loss": [7, 16, 65, 66, 67, 68, 69, 78, 95, 96, 97, 99, 100, 132, 133, 134, 135, 136, 137, 138, 139, 145, 146, 147, 148, 149, 153, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193], "low": [7, 26, 202, 205], "lower": [9, 129, 183, 191, 192, 193, 205], "lowest": 202, "lr": [181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193], "lu": 13, "lucid": [0, 1, 2, 5, 12, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 200, 228, 258, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278], "m": [53, 65, 66, 69, 174, 175, 177, 178, 186, 187, 188, 189, 190, 223], "m_": [186, 187, 188, 189, 190], "m_t": [189, 190], "machin": [3, 5, 7, 16, 121, 186, 196, 204], "magnitud": [191, 192, 280], "mai": [3, 7, 11, 13, 16, 66, 68, 117, 158, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 197, 206, 274, 280], "main": [7, 17, 26, 66, 220, 223], "maintain": [16, 62, 63, 65, 66, 67, 69, 76, 126, 127, 130, 131, 132, 133, 136, 145, 146, 147, 148, 149, 162, 163, 164, 165, 166, 167, 186, 191, 271, 274, 278], "make": [1, 3, 7, 22, 26, 30, 34, 60, 66, 69, 137, 157, 158, 168, 174, 177, 180, 185, 186, 187, 188, 196, 198, 206, 207, 212, 259, 269, 280], "manag": [7, 63, 65, 66, 67, 68, 69, 180, 182, 195, 197, 198, 206], "manhattan": 15, "mani": 61, "manipul": [7, 65, 67, 280], "manner": [66, 69], "manual": [95, 96, 100, 156, 157, 160, 197], "map": [34, 46, 49, 60, 63, 77, 79, 121, 137, 139], "mask": [62, 145, 146, 147, 148, 149], "match": [18, 63, 66, 69, 95, 97, 99, 104, 118, 119, 120, 181, 237, 262, 263, 266, 267, 272, 280], "math": [234, 244, 249], "mathbf": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 92, 94, 116, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 210, 211, 212, 216, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 277, 278], "mathcal": [126, 128, 130, 145, 146, 147, 148, 149, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168], "mathemat": [13, 118, 119, 120, 273, 275, 276, 277], "mathrm": 16, "matmul": 228, "matric": [8, 10, 11, 13, 16, 18, 19, 210, 211, 212, 223, 259], "matrix": [7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 84, 92, 153, 154, 180, 210, 259], "matrix_pow": 12, "matthew": 60, "max": [15, 43, 53, 75, 112, 113, 114, 135, 176, 177, 178, 188, 213, 228, 233], "max_pool": [176, 177, 178], "max_pool1d": [91, 111], "max_pool2d": [91, 111], "max_pool3d": [91, 111], "max_valu": 233, "maxim": 3, "maximum": [15, 135, 176, 177, 178, 186, 188, 228, 233, 239, 276], "maxpool": [20, 58], "maxpool1d": [151, 179], "maxpool1dmodel": 176, "maxpool2d": [66, 69, 142, 151, 179], "maxpool2dmodel": 177, "maxpool3d": [143, 151, 179], "maxpool3dmodel": 178, "mean": [5, 17, 61, 62, 76, 80, 81, 82, 85, 95, 96, 97, 99, 100, 101, 103, 118, 119, 120, 128, 132, 133, 134, 135, 136, 137, 139, 143, 145, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 186, 187, 188, 189, 190, 191, 195, 203, 228, 233, 237, 238, 239, 241, 244, 246, 248, 251, 252, 253, 269, 272, 280], "meaning": [69, 199], "measur": [156, 157, 159, 160], "mechan": [7, 43, 49, 68, 92], "membership": 156, "memori": [2, 3, 197, 221, 222], "meshgrid": 258, "method": [3, 7, 8, 13, 43, 65, 66, 67, 68, 69, 95, 96, 97, 99, 100, 126, 127, 130, 131, 156, 157, 158, 159, 160, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 206], "middl": 196, "might": 180, "min": [214, 228, 233], "min_valu": 233, "mind": [0, 3, 7, 66, 69, 197], "mini": 1, "minim": [4, 7, 69, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 182], "minimalist": 7, "minimum": [228, 233, 241], "minu": 137, "mirror": [225, 227], "mismatch": [63, 180, 181], "miss": [63, 180], "mitig": [74, 132, 134, 136, 162, 163, 164], "mlp": 122, "mnist": [4, 6, 31, 32], "mnist_train": [4, 5], "mode": [7, 89, 101, 103, 116, 126, 127, 145, 146, 147, 148, 149, 260], "model": [1, 3, 4, 7, 14, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 54, 55, 56, 57, 58, 59, 62, 63, 64, 65, 66, 67, 68, 69, 78, 117, 118, 119, 120, 122, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 168, 173, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 197, 198, 206, 269, 270, 280], "moder": 47, "modern": 60, "modif": [69, 197], "modifi": [21, 34, 59, 65, 66, 67, 68, 124, 126, 127, 128, 129, 130, 131, 145, 195, 197, 204, 257, 268], "modul": [5, 7, 20, 21, 22, 25, 26, 27, 28, 30, 34, 43, 49, 53, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 118, 119, 120, 121, 122, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 198, 199, 206, 270, 280], "modular": [3, 7, 60, 63, 66, 69, 180, 280], "moduledict": [66, 67, 69, 70], "modulelist": [68, 69, 70], "moment": [186, 187, 188, 189, 190], "momentum": [101, 103, 118, 119, 120, 162, 163, 164, 165, 166, 167, 183, 189, 191, 193], "momentum_decai": 189, "moor": 16, "more": [3, 4, 7, 11, 34, 41, 65, 66, 69, 132, 146, 147, 148, 149, 180, 181, 182, 183, 184, 187, 188, 191, 192, 193, 203, 212, 251, 265, 280], "most": [8, 60, 177, 270, 271, 280], "move": [183, 191], "mse": [97, 99, 158, 159], "mse_loss": [91, 98], "mseloss": [151, 161], "mu": [128, 162, 163, 164, 165, 166, 167, 168, 253], "mu_c": 272, "mu_i": [165, 166, 167], "much": 280, "mul": 228, "multi": [3, 4, 27, 49, 50, 51, 52, 60, 78, 96, 100, 122, 138, 157, 160, 240, 248, 253], "multidimension": [201, 205, 221], "multipl": [1, 3, 7, 8, 14, 18, 20, 34, 43, 67, 68, 69, 84, 116, 117, 121, 122, 145, 146, 147, 148, 149, 157, 160, 180, 196, 201, 202, 203, 205, 210, 215, 221, 222, 269, 274, 280], "multipli": [14, 68, 94, 154, 192, 215, 216], "must": [0, 1, 3, 9, 10, 11, 13, 14, 17, 18, 19, 61, 63, 65, 66, 67, 68, 69, 104, 145, 146, 147, 148, 149, 160, 181, 197, 251, 255, 257, 260, 262, 263, 265, 266, 268, 271, 272, 273, 274, 275, 277], "my_simple_model": 198, "mymodel": [63, 64, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193], "myoptim": [181, 182], "n": [14, 15, 34, 50, 51, 52, 60, 65, 66, 69, 80, 81, 82, 84, 87, 88, 89, 92, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 126, 128, 130, 141, 142, 143, 148, 149, 152, 154, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 223, 240, 251, 253], "n1": 15, "nabla_": [184, 185, 186, 187, 188, 189, 190, 192], "nabla_t": 190, "nadam": 194, "name": [60, 61, 63, 65, 67, 69, 198, 199], "nan": [17, 19], "natur": [16, 60, 141, 152, 173, 176, 217, 237, 238], "ndarrai": [62, 64, 199, 207, 220, 222, 225, 227, 254], "ndim": [17, 19, 64, 207], "ne": 14, "nearest": 116, "necessari": [4, 5, 16, 197, 257, 268], "need": [2, 4, 66, 67, 68, 78, 152, 180, 197, 221, 222, 269, 270, 280], "neg": [14, 16, 19, 71, 100, 117, 132, 134, 135, 136, 157, 160, 192, 255], "negative_slop": [74, 134], "neglect": 68, "neighbor": 116, "neq": 15, "nest": [61, 66, 69, 180], "nestedmodel": 61, "nesterov": 189, "net": [58, 60], "network": [3, 4, 7, 20, 21, 25, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 75, 76, 77, 78, 79, 80, 81, 82, 92, 94, 101, 117, 121, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 168, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 191, 193, 205, 206, 207, 219, 224, 226, 239, 241, 260, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280], "neural": [3, 4, 7, 20, 21, 26, 33, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 72, 75, 76, 77, 78, 79, 80, 81, 82, 92, 94, 101, 117, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 168, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 191, 193, 205, 206, 207, 219, 224, 226, 239, 241, 260, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280], "neuralnetwork": 135, "neuron": 134, "never": 274, "new": [63, 64, 71, 72, 74, 75, 76, 77, 79, 92, 94, 116, 122, 126, 127, 128, 129, 130, 131, 181, 198, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 222, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 254, 255, 257, 260, 262, 263, 265, 266, 267, 268], "next": [69, 269], "nll": 100, "nll_loss": [91, 98], "nllloss": [151, 161], "nn": [5, 7, 20, 22, 26, 30, 34, 43, 49, 53, 58, 61, 70, 73, 83, 90, 93, 98, 102, 111, 115, 123, 125, 140, 144, 150, 151, 155, 161, 169, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 198, 270, 280], "no_grad": 195, "node": 207, "nois": [19, 206], "non": [11, 14, 16, 19, 68, 72, 74, 75, 126, 127, 132, 133, 134, 135, 136, 137, 139, 145, 146, 147, 148, 149, 186, 187, 197, 217, 233], "none": [0, 1, 2, 5, 22, 26, 30, 34, 61, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 92, 94, 95, 96, 97, 99, 100, 101, 103, 104, 117, 118, 119, 120, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 196, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 225, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 278], "norm": [8, 12, 188], "normal": [5, 43, 72, 76, 78, 79, 101, 103, 104, 118, 119, 120, 125, 126, 130, 133, 136, 138, 145, 162, 163, 164, 165, 166, 167, 168, 191, 203, 206, 269, 279, 280], "normalized_shap": [104, 168], "note": [80, 145], "noth": [85, 86, 87, 88], "notimplementederror": [2, 63, 181], "notin": 233, "nov": 60, "novel": 60, "np": [34, 50, 51, 52, 62, 64, 121, 157, 160, 199, 207, 212, 219, 220, 223, 224, 226, 227, 238, 254, 270], "npy": 5, "num_class": [20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 138, 157, 160], "num_featur": [69, 118, 119, 120, 162, 163, 164, 165, 166, 167], "num_paramet": 68, "number": [0, 1, 2, 5, 10, 11, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 64, 66, 68, 69, 80, 81, 82, 84, 87, 88, 89, 92, 94, 96, 100, 101, 103, 105, 106, 107, 116, 117, 118, 119, 120, 121, 122, 126, 127, 130, 131, 137, 141, 142, 143, 152, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 174, 175, 176, 177, 178, 183, 201, 204, 205, 207, 217, 219, 221, 223, 239, 240, 241, 252, 253, 255, 257, 260, 262, 263, 264, 266, 268, 272, 274, 275, 277, 280], "numer": [13, 16, 95, 96, 101, 103, 104, 118, 119, 120, 156, 157, 162, 163, 164, 165, 166, 167, 168, 184, 185, 186, 187, 188, 189, 190, 191, 199, 209, 219, 224, 226], "numpi": [7, 62, 64, 157, 160, 199, 207, 212, 220, 223, 238, 251, 254, 260, 262, 266, 270, 280], "o": [3, 175, 178, 224, 225], "object": [1, 3, 8, 49, 60, 63, 67, 68, 159, 180, 197, 208, 209, 213, 214, 215, 218, 254], "observ": 186, "obtain": 1, "occur": [117, 197, 198, 255], "occurr": 14, "odot": [145, 146, 147, 148, 149], "off": 195, "offer": [4, 7, 180, 182, 206, 280], "offset": 223, "often": [14, 80, 81, 82, 84, 157, 160, 219, 226, 270, 274, 278, 280], "older": 189, "onc": 197, "one": [0, 68, 69, 78, 80, 94, 108, 112, 118, 119, 120, 136, 137, 138, 141, 147, 157, 160, 162, 165, 173, 176, 181, 196, 199, 203, 218, 225, 239, 241, 256, 261, 265, 270], "ones": [92, 94, 141, 142, 143, 154, 162, 163, 164, 165, 166, 167, 168, 180, 223, 225, 228], "ones_lik": 228, "onli": [7, 61, 116, 135, 145, 146, 147, 148, 149, 156, 157, 160, 162, 163, 164, 165, 166, 167, 168, 176, 177, 178, 192, 195, 219, 233, 239, 241, 251, 260, 261, 263, 264], "onto": [17, 19], "openml": 5, "oper": [3, 7, 8, 13, 16, 43, 44, 45, 46, 47, 48, 62, 63, 66, 71, 72, 74, 75, 76, 77, 79, 80, 81, 82, 84, 89, 92, 94, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 195, 196, 197, 199, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 221, 222, 224, 226, 237, 238, 239, 240, 241, 244, 246, 248, 251, 253, 255, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 278], "operatornam": [14, 16], "opposit": 183, "optim": [3, 7, 8, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 62, 64, 67, 68, 84, 141, 142, 143, 180, 197], "optimizer_st": [181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193], "option": [1, 5, 15, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 71, 74, 78, 81, 82, 85, 86, 87, 88, 89, 92, 94, 95, 96, 97, 99, 100, 101, 103, 104, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 126, 127, 128, 129, 130, 131, 132, 134, 138, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 181, 183, 191, 193, 201, 202, 203, 205, 207, 219, 220, 221, 222, 223, 224, 225, 226, 227, 239, 240, 241, 248, 252, 253, 254, 255, 259, 262, 264, 265, 270, 274, 275, 277], "ord": 15, "order": [1, 3, 15, 19, 65, 66, 67, 68, 69, 252, 269], "ordered_dict": 69, "ordereddict": [63, 65, 66, 69], "organ": [65, 66, 67, 69, 198], "orient": 280, "origin": [24, 33, 85, 117, 121, 139, 260, 261, 262, 263, 266, 267, 278], "orthogon": [16, 17, 19], "orthonorm": 17, "oscil": [183, 191, 193], "other": [2, 3, 7, 13, 24, 28, 30, 33, 62, 63, 66, 69, 126, 127, 145, 180, 181, 195, 197, 206, 207, 219, 221, 224, 226, 251, 259, 280], "otherwis": [35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 71, 74, 75, 76, 78, 132, 134, 135, 136, 138, 146, 147, 148, 149, 158, 173, 174, 175, 176, 177, 178, 181, 192, 198, 213, 214, 239, 241], "otim": [16, 92, 152], "out": [0, 3, 4, 71, 72, 74, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92, 94, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 126, 127, 130, 131, 141, 142, 143, 145, 146, 147, 148, 149, 170, 171, 172, 173, 174, 175, 176, 177, 178, 183, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268], "out_channel": [30, 66, 69, 118, 119, 120, 122, 141, 142, 143, 163, 164, 173, 174, 175, 176, 177, 178, 180], "out_featur": [65, 66, 69, 92, 94, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 145, 146, 147, 152, 154, 156, 157, 158, 159, 160, 162, 165, 168, 173, 174, 175, 176, 177, 178], "outcom": [274, 275, 277], "outer": 228, "outlier": [97, 158], "output": [0, 1, 2, 7, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 92, 94, 105, 106, 107, 116, 117, 118, 119, 120, 121, 122, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 199, 202, 203, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 226, 227, 237, 238, 239, 240, 241, 244, 246, 248, 251, 252, 253, 259, 260, 262, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278], "output_height": 84, "output_lay": [66, 69], "output_s": [66, 105, 106, 107, 170, 171, 172], "output_width": 84, "outsid": 0, "over": [0, 1, 2, 3, 8, 49, 58, 63, 66, 68, 78, 105, 106, 107, 121, 138, 141, 142, 143, 157, 160, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 183, 184, 185, 186, 187, 201, 205, 239, 240, 241, 248, 251, 253, 274, 275, 277], "overdetermin": 16, "overfit": [1, 20, 58, 86, 89, 146, 147, 148, 149, 183, 186, 191, 193], "overhead": 121, "overrid": [2, 3], "overridden": [63, 181], "overwrit": [65, 67], "own": [4, 65, 66, 67, 68, 80, 81, 82, 131, 180, 272], "p": [15, 16, 64, 67, 68, 85, 86, 87, 88, 89, 145, 146, 147, 148, 149, 173, 176, 177, 274, 275, 277, 280], "p_d": [175, 178], "p_h": [174, 175, 178], "p_w": [174, 175, 178], "packag": [2, 3, 4, 8, 60, 180, 182, 198, 204, 206, 270, 280], "pad": [30, 66, 69, 80, 81, 82, 84, 105, 106, 107, 108, 109, 110, 112, 113, 114, 118, 119, 120, 122, 141, 142, 143, 163, 164, 170, 171, 172, 173, 174, 175, 176, 177, 178, 258], "pad_after_dim1": 260, "pad_after_dim2": 260, "pad_before_dim1": 260, "pad_before_dim2": 260, "pad_width": 260, "padding_height": 84, "padding_width": 84, "pair": 92, "paper": 23, "parallel": [1, 3, 49, 60], "param": [63, 64, 67, 68, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193], "param1": 63, "param_dict": 67, "param_group": [181, 182], "param_groups_setup": 181, "param_list": 68, "param_s": 198, "paramet": [0, 2, 7, 31, 32, 33, 60, 63, 180, 181, 182, 199, 206, 280], "parameterdict": 70, "parameterlist": 70, "parent": 180, "part": [62, 63, 131, 180, 195, 197, 206, 219, 220, 223, 224, 225, 226, 227, 270, 280], "partial": [9, 10, 11, 13, 14, 15, 16, 18, 19, 71, 72, 74, 75, 76, 77, 78, 79, 92, 94, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "particip": [64, 270], "particular": [65, 67], "particularli": [7, 16, 66, 67, 68, 69, 78, 94, 118, 119, 120, 138, 154, 157, 160, 165, 166, 167, 168, 187, 195, 198, 269], "pass": [2, 7, 16, 20, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 61, 63, 64, 65, 66, 67, 68, 69, 116, 118, 119, 120, 121, 122, 132, 133, 134, 135, 136, 137, 139, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 168, 173, 174, 175, 176, 177, 178, 180, 199, 207, 240, 248, 251, 252, 253, 255, 257, 261, 263, 264, 268, 270, 280], "past": [183, 184, 186, 191], "patch": [84, 174], "path": [3, 5], "pattern": [60, 75, 121, 135, 141, 142, 143], "penal": [183, 191, 193], "penalti": [184, 185, 186, 187, 188, 189, 190], "penros": 16, "per": [1, 50, 51, 52, 105, 165, 166, 167, 168, 170], "perform": [3, 7, 8, 9, 16, 20, 26, 27, 28, 30, 31, 32, 33, 42, 49, 53, 58, 60, 63, 64, 68, 72, 80, 81, 82, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 121, 122, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 195, 197, 204, 206, 208, 209, 212, 215, 218, 237, 239, 241, 248, 252, 269, 271, 273, 278, 280], "permut": 252, "persist": [62, 201, 202, 203, 205, 221, 222], "perturb": [11, 18, 19, 280], "phi": [72, 133], "pi": [72, 133, 234, 244, 249], "pil": [270, 280], "pinv": 12, "pioneer": 60, "pipelin": [5, 206, 269, 270, 272], "pixel": [5, 116, 272, 274], "place": [124, 126, 127, 128, 129, 130, 131], "placehold": [63, 153], "plai": [199, 206], "plot": 259, "point": [4, 117, 195], "pool": [20, 30, 31, 32, 33, 34, 43, 49, 53, 58, 60, 105, 106, 107, 108, 109, 110, 112, 113, 114, 121, 122, 142, 143, 170, 171, 172, 173, 174, 175, 176, 177, 178, 239, 241], "pool1": 69, "pool2": 69, "poorli": 13, "popul": 63, "popular": [4, 60], "portion": 280, "pose": 16, "posit": [1, 9, 14, 63, 69, 117, 132, 134, 135, 136, 173, 174, 175, 176, 177, 178, 192, 196, 217, 262, 266, 273], "possibl": [7, 280], "potenti": [16, 153, 191, 264], "power": [7, 14, 60, 121, 196, 197, 228, 269, 270, 280], "pp": 60, "practic": [16, 157, 160], "practition": 280, "pre": [35, 39, 40], "preactbottleneck": [35, 39, 40], "preced": [64, 207], "preconfigur": [27, 28], "predefin": [4, 60, 66, 136], "predict": [156, 157, 159, 160], "prefix": [63, 198], "prepar": [3, 196, 260, 262, 266, 270, 280], "prepend": 63, "preprint": 60, "preprocess": [3, 4, 84, 117, 206, 269, 270, 280], "present": [156, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 174], "preserv": [85, 117, 145, 219, 220, 223, 224, 225, 226, 227, 240, 248, 253], "preset": 4, "prevent": [1, 65, 66, 67, 68, 69, 86, 89, 146, 147, 148, 149, 156, 157, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 197], "previou": [183, 192, 197], "previous": 186, "primari": [7, 199], "primarili": 69, "print": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 195, 196, 197, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278], "priorit": 122, "probabilist": 206, "probabl": [24, 72, 78, 85, 86, 87, 88, 89, 95, 133, 138, 145, 146, 147, 148, 149, 156, 157, 160, 274, 275, 277, 280], "problem": [16, 17, 19, 60, 74, 132, 134, 190], "proceed": 60, "process": [2, 3, 4, 14, 17, 19, 20, 27, 34, 49, 58, 60, 68, 80, 81, 82, 103, 117, 118, 119, 120, 121, 122, 136, 139, 141, 143, 152, 162, 163, 164, 165, 166, 167, 168, 173, 175, 176, 178, 183, 199, 259, 270, 271, 272, 273, 278, 280], "produc": [20, 58, 61, 105, 106, 107, 121, 141, 142, 143, 170, 171, 172, 204, 206], "product": [7, 17, 19, 137, 152, 168, 180, 210, 211, 215, 216], "program": [195, 206], "progress": 185, "project": [17, 19], "projector": 16, "promin": [173, 175, 176, 177, 178], "promot": [69, 157, 160, 180], "propag": [10, 11, 13, 16, 17, 18, 19, 63, 69, 92, 94, 116, 121, 174, 175, 191, 192, 210, 211, 212, 216, 239, 241, 259, 260, 263, 267], "properli": [0, 68, 78, 138, 180], "properti": [8, 10, 13, 14, 72, 76, 85, 133, 136, 145, 185, 190], "proport": [5, 253], "proportion": 278, "provid": [0, 1, 2, 3, 4, 5, 7, 8, 21, 22, 23, 24, 26, 30, 34, 53, 59, 60, 63, 65, 66, 67, 68, 72, 94, 106, 107, 117, 156, 157, 158, 160, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 191, 193, 195, 197, 199, 204, 206, 207, 212, 219, 225, 239, 241, 252, 254, 262, 264, 266, 280], "pseudo": [13, 16], "purpos": [201, 205, 219, 224, 226], "python": 199, "pytorch": 254, "q": 17, "qr": 12, "quad": [16, 156, 157, 158, 159, 160, 176, 177, 178, 208, 209, 213, 214, 215, 218, 271], "quadrat": 158, "quotient": 209, "r": [17, 274, 275, 276, 277], "r_t": 190, "radam": 194, "rais": [0, 1, 2, 63, 180, 181, 217], "rand": [200, 206], "randint": [200, 206], "randn": [20, 34, 50, 51, 52, 53, 58, 121, 122, 180, 200, 204, 206], "random": [1, 2, 3, 34, 50, 51, 52, 121, 122, 273, 274, 275, 276, 277, 280], "random_integ": 206, "random_tensor": 206, "randomcrop": [279, 280], "randomgrayscal": [279, 280], "randomhorizontalflip": [279, 280], "randomli": [1, 85, 86, 87, 88, 89, 117, 145, 146, 147, 148, 149, 273, 274, 275, 276, 277, 280], "randomnoisedataset": [0, 1, 2], "randomrot": [279, 280], "randomverticalflip": 279, "rang": [0, 1, 8, 34, 42, 60, 68, 77, 79, 80, 81, 96, 100, 131, 137, 139, 183, 191, 193, 202, 230, 231, 233, 272, 276, 280], "rank": 16, "rate": [181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193], "rather": [67, 68, 187, 263], "ratio": [43, 121, 122, 278], "ravel": 258, "raw": [78, 138, 157, 199], "re": [64, 197], "readabl": [65, 66, 67, 69, 180, 199], "readi": [3, 7, 60], "real": [16, 19, 137], "rearrang": 84, "recalibr": [44, 46, 47, 60, 121], "receiv": [176, 177, 178, 260], "recent": 191, "recept": [49, 60, 122], "reciproc": [16, 228, 238, 246], "recognit": [33, 60, 142], "rectangular": 223, "rectif": 190, "rectifi": [74, 75, 134, 135, 190], "recurr": [66, 168], "recurs": [61, 63], "red": 274, "reduc": [20, 34, 49, 53, 58, 60, 121, 162, 163, 164, 165, 166, 167, 173, 174, 175, 176, 177, 178, 189, 192, 197, 199, 239, 240, 241, 248, 253, 274], "reduct": [19, 43, 95, 96, 97, 99, 100, 121, 122, 156, 157, 158, 159, 160, 239, 241], "reevalu": 181, "refer": [4, 7, 63, 206, 220, 223, 255], "reflect": 195, "regardless": [16, 261], "region": [82, 105, 106, 107, 116, 171, 172, 260, 271, 280], "regist": [62, 63, 64, 68, 180, 198], "register_buff": 62, "register_model": [21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 59], "register_paramet": 63, "registr": [63, 180], "registri": 198, "registry_path": 198, "regress": [4, 99, 158, 159], "regular": [16, 20, 24, 58, 89, 146, 147, 148, 149, 183, 184, 185, 188, 189, 190, 191, 193], "relat": [197, 223, 224], "relationship": 278, "relev": [116, 183, 191, 193], "reli": 197, "reliabl": 5, "reliant": [146, 147, 148, 149], "relu": [7, 20, 43, 53, 58, 60, 61, 65, 66, 67, 69, 71, 73, 74, 91, 118, 119, 120, 121, 122, 126, 127, 130, 131, 132, 134, 140, 141, 142, 143, 151, 152, 153, 154], "relu1": 69, "relu2": 69, "relu3": 69, "remain": [5, 62, 104, 145, 146, 147, 148, 149, 192], "rememb": 206, "remov": [198, 264], "rep": 266, "repeat": [258, 259, 266], "repetit": [262, 266], "replac": [206, 274], "repres": [13, 15, 19, 30, 63, 64, 69, 92, 94, 101, 103, 104, 141, 142, 143, 152, 154, 157, 160, 168, 181, 182, 183, 189, 190, 191, 192, 193, 199, 208, 209, 215, 218, 220, 240, 251, 252, 253, 259, 271, 273, 275, 276, 277, 278], "represent": [49, 60, 121, 174, 177, 181], "reproduc": [201, 202, 203, 204, 205, 206, 280], "requir": [2, 3, 4, 7, 49, 62, 65, 69, 71, 72, 74, 75, 76, 77, 79, 92, 94, 116, 121, 122, 131, 153, 157, 160, 180, 195, 197, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 249, 250, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 278], "requires_grad": [62, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 84, 92, 94, 116, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 180, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270], "rescal": [95, 96, 100, 156, 157, 160], "research": 180, "reset": [64, 204, 207], "reshap": [7, 43, 94, 142, 143, 196, 199, 258, 261], "residu": [25, 26, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 60], "residualblock": 34, "resili": 192, "resiz": [116, 269, 279, 280], "resnet": [26, 27, 28, 29, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 50, 51, 52, 60, 121], "resnet_1001": 60, "resnet_101": 60, "resnet_152": 60, "resnet_18": 60, "resnet_200": 60, "resnet_269": 60, "resnet_34": 60, "resnet_50": 60, "resourc": 197, "respect": [9, 10, 11, 13, 14, 15, 16, 17, 19, 30, 53, 62, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 92, 94, 116, 122, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 233, 237, 238, 239, 240, 241, 244, 246, 248, 251, 252, 253, 259, 260, 262, 266, 274], "respons": [60, 65, 182], "restor": [121, 197], "restructur": 263, "result": [9, 13, 14, 16, 60, 63, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 92, 94, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 122, 138, 180, 181, 195, 197, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 254, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 273, 274, 280], "resum": 182, "retain": [64, 207, 219, 226, 239, 240, 241, 248, 253, 270], "retent": 270, "retriev": [0, 2, 65, 67, 68], "return": [0, 1, 2, 3, 5, 7, 26, 30, 43, 62, 63, 65, 66, 67, 68, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 168, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 198, 199, 269, 280], "reus": 270, "reusabl": [69, 180, 269], "revers": [7, 69, 252, 275, 277], "revert": 197, "revolution": 60, "rgb": [23, 24, 25, 27, 28], "rho": 184, "rho_": 190, "rho_t": 190, "right": [14, 15, 16, 18, 19, 72, 78, 133, 138, 156, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 176, 177, 178, 271], "risk": 199, "rmsprop": 194, "rob": 60, "robust": [117, 145, 146, 147, 148, 149, 158, 180, 184, 273, 274, 276, 280], "role": [199, 206, 280], "root": [4, 5, 185, 191, 246], "rotat": [91, 115, 276, 280], "rotated_imag": 117, "rout": [176, 177, 178], "routin": 7, "row": [10, 11, 13, 18, 94, 223, 259, 268], "rprop": 194, "rule": [13, 14, 196, 208, 209, 213, 214, 215, 217, 218], "run": [7, 62, 101, 103, 118, 119, 120, 162, 163, 164, 165, 166, 167, 184, 197, 204, 206], "running_mean": [62, 101, 103, 162, 163, 164, 165, 166, 167], "running_var": [101, 103, 162, 163, 164, 165, 166, 167], "runtim": [66, 69, 180], "s_": 192, "s_d": [175, 178], "s_h": [174, 175, 178], "s_w": [174, 175, 178], "same": [10, 11, 13, 14, 18, 78, 85, 86, 87, 88, 89, 101, 103, 104, 106, 107, 117, 118, 119, 120, 122, 141, 142, 143, 145, 146, 147, 148, 149, 153, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 192, 204, 206, 212, 222, 225, 227, 237, 239, 240, 241, 255, 257, 261, 263, 264, 265, 268, 272], "sampl": [0, 1, 2, 3, 5, 7, 23, 24, 25, 27, 28, 30, 31, 32, 33, 105, 106, 107, 126, 127, 128, 129, 130, 131, 145, 146, 147, 148, 149, 152, 154, 157, 160, 168, 170, 171, 172, 203, 206, 271, 273, 275, 276, 277, 278], "satisfi": [9, 11, 18], "satur": [132, 280], "save": [2, 62, 64, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 197, 198], "scalabl": [3, 60, 180], "scalar": [10, 15, 95, 96, 97, 99, 100, 199], "scale": [11, 16, 27, 31, 32, 33, 35, 36, 37, 40, 44, 45, 49, 50, 51, 52, 60, 71, 76, 78, 101, 103, 104, 121, 122, 130, 131, 132, 134, 136, 137, 138, 139, 145, 146, 147, 148, 149, 157, 162, 163, 164, 165, 166, 167, 168, 183, 185, 186, 187, 199, 206, 253, 278], "scenario": [67, 68, 168, 187, 188, 270, 274], "schedul": 183, "scientif": 196, "score": [34, 49, 78, 157], "scratch": 7, "script": 206, "se": [44, 45, 46, 47, 48, 60], "se_resnet_101": 60, "se_resnet_152": 60, "se_resnet_18": 60, "se_resnet_34": 60, "se_resnet_50": 60, "seamless": [0, 1, 3, 4, 180, 206], "seamlessli": [3, 4, 8, 64, 66, 69, 180, 199, 280], "second": [11, 66, 67, 92, 121, 152, 186, 187, 188, 189, 190, 196, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 257, 259, 277], "section": 212, "see": [7, 212], "seed": [200, 201, 202, 203, 205, 206, 280], "seen": 184, "select": [49, 50, 51, 52, 60, 116, 121, 122, 176, 178, 248], "selectivekernel": 123, "self": [0, 1, 2, 3, 7, 20, 22, 26, 30, 43, 53, 58, 61, 62, 63, 64, 65, 66, 67, 68, 76, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 152, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 198, 259, 269, 270], "selu": [73, 85, 91, 140, 145, 151], "selunetwork": 136, "semodul": 123, "senet": [29, 44, 45, 46, 47, 48, 60], "sensit": [97, 158, 162, 163, 164], "sentiment": 4, "separ": [0, 80, 81, 82, 165, 166, 167], "sequenc": [14, 34, 49, 65, 67, 80, 219, 255, 257, 260, 262, 265, 266, 268, 269], "sequenti": [20, 26, 30, 43, 53, 58, 61, 65, 66, 70, 80, 118, 119, 120, 153, 269, 280], "seri": [22, 31, 32, 49, 80, 118, 141, 173, 176], "serial": [62, 63, 182], "serv": [3, 26, 43, 53, 63, 65, 66, 67, 68, 69, 180, 192, 270], "set": [3, 4, 5, 61, 64, 68, 80, 81, 82, 134, 135, 136, 141, 142, 143, 145, 148, 149, 152, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 181, 186, 187, 191, 201, 202, 203, 204, 205, 206, 207, 219, 221, 222, 226, 227, 233, 239, 241, 254, 270, 274, 280], "setup": [4, 7], "sever": [16, 141, 142, 143, 173, 174, 175, 176, 177, 178, 197, 269, 280], "sgd": [7, 183, 190, 194], "sgn": 15, "shape": [3, 4, 5, 7, 10, 11, 13, 14, 16, 20, 26, 30, 34, 43, 50, 51, 52, 53, 58, 60, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 196, 199, 201, 202, 203, 205, 206, 207, 210, 221, 222, 223, 224, 225, 226, 227, 233, 238, 239, 240, 241, 244, 246, 248, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 268, 271, 272, 273, 274, 275, 276, 277, 278, 280], "shapelik": 202, "share": 60, "shen": 121, "shift": [101, 103, 104, 162, 163, 164, 165, 166, 167, 168], "shorthand": 212, "should": [30, 62, 197, 201, 202, 203, 205, 221, 222, 230, 231, 251, 260, 269], "show": [195, 198], "showcas": 7, "shown": 204, "shrink": 184, "shuffl": [1, 2, 3], "side": [18, 66, 69, 80, 81, 82, 108, 109, 110, 112, 113, 114, 118, 119, 120, 141, 142, 143, 173, 174, 175, 176, 177, 178, 197], "sigma": [16, 121, 126, 128, 130, 137, 162, 163, 164, 165, 166, 167, 168, 252], "sigma_c": 272, "sigma_i": 16, "sigmoid": [73, 91, 121, 126, 127, 130, 131, 140, 151, 156], "sigmoidnetwork": 137, "sign": [14, 158, 192, 228], "signal": [118, 141, 142, 143, 162, 165, 173, 174, 175, 176, 177, 178], "signific": 197, "significantli": [60, 121, 269], "sim": [145, 146, 147, 148, 149], "similar": [7, 126, 127, 212, 238, 254, 260], "similarli": [19, 251], "simonyan": 60, "simpl": [3, 4, 7, 61, 69, 80, 81, 82, 92, 94, 108, 109, 110, 112, 113, 114, 133, 135, 136, 137, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 210, 211, 216, 269], "simplebinaryclassificationmodel": 156, "simpleclassificationmodel": [157, 160], "simplegelumodel": 133, "simpleleakyrelumodel": 134, "simplemodel": [7, 61, 154, 198], "simpleregressionmodel": 159, "simplerelumodel": 135, "simpleselumodel": 136, "simplesigmoidmodel": 137, "simpletanhmodel": 139, "simpli": [195, 251, 252, 263], "simplic": [60, 135], "simplifi": [4, 31, 69, 118, 119, 120], "simul": [61, 280], "simultan": 117, "sin": [228, 234], "sinc": [14, 17, 65, 66, 67, 68, 80, 81, 82, 131, 195, 197, 203, 259, 280], "sine": [231, 244, 245], "singl": [0, 4, 14, 17, 19, 34, 78, 118, 119, 120, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 157, 168, 174, 175, 176, 177, 178, 181, 199, 205, 221, 255, 264, 272, 274, 280], "singleton": 168, "singular": [10, 13, 14, 16, 18, 19], "sinh": [228, 235, 250], "size": [0, 1, 2, 3, 19, 30, 31, 32, 33, 34, 49, 58, 60, 61, 64, 66, 80, 81, 82, 84, 87, 88, 89, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 141, 142, 143, 152, 154, 156, 157, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 198, 202, 205, 206, 207, 239, 240, 241, 248, 253, 255, 257, 264, 267, 268, 271, 273, 278, 280], "sk": [49, 50, 51, 52, 60, 122], "sk_resnet_18": 60, "sk_resnet_34": 60, "sk_resnet_50": 60, "skblock": 49, "skip": [60, 197], "sknet": [29, 50, 51, 52, 60], "slice": [92, 251], "slide": [84, 173, 175, 176, 178], "slight": 121, "slightli": 280, "slope": [74, 132, 134], "slow": [3, 190], "small": [16, 31, 32, 33, 60, 74, 95, 96, 101, 103, 104, 134, 136, 156, 157, 158, 162, 163, 164, 165, 166, 167, 168, 174, 177, 184, 185, 186, 187, 188, 189, 190, 191, 192], "smaller": [58, 60, 66, 69, 180, 185, 186, 214, 271, 273, 278], "smallest": 241, "smooth": [24, 72, 132, 133, 183, 191, 280], "smoother": 183, "so": [65, 66, 67, 68, 117, 180, 190, 221, 222, 269], "softmax": [73, 91, 122, 140, 151, 157], "softmaxmodel": 138, "solut": [16, 18], "solv": [8, 9, 12, 16, 17, 19], "solver": 8, "some": [71, 86, 117, 145, 146, 147, 162, 163, 164, 165, 166, 167, 185, 186, 187, 197, 199], "sometim": 196, "sophist": [66, 69], "sourc": 206, "space": [11, 17, 19, 80, 81, 82, 84, 105, 106, 107, 118, 119, 120, 141, 142, 143, 170, 171, 172, 219, 280], "span": 4, "spars": [185, 186], "spatial": [20, 34, 49, 53, 58, 60, 119, 121, 142, 143, 162, 163, 164, 165, 166, 167, 168, 174, 175, 176, 177, 178, 259], "spatial_dim": 121, "spatio": 143, "special": [0, 1, 7, 16, 62, 63, 64, 145, 206], "specif": [4, 7, 26, 65, 66, 67, 68, 69, 122, 131, 145, 146, 147, 148, 149, 165, 166, 167, 180, 181, 195, 206, 221, 239, 241, 262, 266], "specifi": [0, 1, 2, 3, 4, 5, 7, 15, 21, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 57, 59, 61, 66, 78, 84, 89, 95, 96, 97, 99, 100, 104, 105, 106, 107, 116, 117, 121, 138, 141, 142, 143, 156, 157, 158, 159, 160, 168, 170, 171, 172, 174, 175, 176, 177, 178, 181, 199, 201, 202, 203, 204, 205, 217, 219, 220, 221, 222, 223, 224, 226, 227, 233, 239, 240, 241, 248, 252, 253, 254, 255, 257, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 278, 280], "speech": 165, "speed": [183, 184, 185, 186, 187, 188, 189, 190, 191, 193], "split": [4, 255, 257, 268], "springer": 60, "sqrt": [72, 126, 127, 130, 131, 133, 162, 163, 164, 165, 166, 167, 168, 184, 185, 186, 187, 189, 190, 191, 228, 230, 231], "squar": [1, 3, 9, 10, 11, 13, 14, 16, 17, 18, 19, 97, 99, 158, 159, 184, 185, 186, 191, 228, 246], "squaredataset": [0, 1, 2, 3], "squeez": [43, 46, 60, 121, 258], "stabil": [13, 16, 60, 95, 96, 101, 103, 104, 118, 119, 120, 156, 157, 162, 163, 164, 165, 166, 167, 168, 183, 184, 185, 186, 187, 188, 189, 190, 191, 272], "stabl": [126, 127, 130, 131, 145, 157, 183, 187, 188, 191, 192, 193], "stack": [69, 122, 257, 258, 268, 280], "stage": [34, 43, 49, 50, 51, 52], "stage1": 43, "stage2": 43, "stage3": 43, "stage4": 43, "standard": [34, 72, 74, 126, 128, 130, 132, 133, 134, 145, 192, 203, 206, 212, 269, 272, 280], "start": [1, 3, 183, 185, 192, 219, 271, 273], "state": [60, 62, 63, 64, 66, 69, 181, 195, 197, 204], "state_dict": [63, 64, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193], "static": 69, "statist": [16, 85, 101, 103], "std": [5, 128, 269, 272, 280], "stem": [26, 34, 49], "stem_typ": 34, "stem_width": 34, "step": [64, 84, 122, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 197, 219, 269, 270], "step_siz": 192, "still": 184, "stochast": [7, 183, 193], "stop": 219, "storag": [65, 67, 207], "store": [2, 4, 5, 34, 49, 62, 63, 64, 65, 66, 67, 68, 121, 170, 171, 172, 197, 207, 271, 272, 273, 274, 275, 276, 277, 278], "str": [5, 34, 53, 63, 65, 67, 69, 95, 96, 97, 99, 100, 116, 181, 198, 259], "straightforward": [193, 195, 208], "strategi": 182, "streamlin": [2, 3], "strict": [63, 181], "stride": [30, 31, 32, 33, 66, 69, 80, 81, 82, 84, 105, 106, 107, 108, 109, 110, 112, 113, 114, 118, 119, 120, 122, 141, 142, 143, 170, 171, 172, 173, 174, 175, 176, 177, 178], "stride_height": 84, "stride_width": 84, "string": [63, 65, 67, 69, 141, 142, 143, 181], "structur": [0, 7, 17, 62, 63, 66, 180, 181, 198, 199, 223, 270], "style": [26, 103, 165, 166, 259], "sub": [65, 66, 67, 68, 69, 180, 228, 271, 273], "sub_tensor": 207, "subclass": [1, 2, 3, 7, 63, 64, 65, 180, 181], "sublay": 61, "submodul": [61, 63, 180], "subsequ": [66, 69, 131, 206], "subset": [146, 147], "subtract": [7, 218, 272], "suffer": 185, "suit": [24, 49, 126, 127, 130, 131], "suitabl": [26, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 45, 46, 48, 60, 158, 185, 186, 201], "sum": [15, 65, 66, 67, 68, 69, 78, 95, 96, 97, 99, 100, 122, 138, 156, 157, 158, 159, 160, 185, 208, 211, 216, 228, 251, 253, 255, 257, 259, 262, 266, 268], "sum_": [14, 78, 138, 156, 157, 159, 160, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 210, 211, 240, 248, 251, 253, 259, 262], "sum_i": [15, 216], "sum_j": 216, "sum_k": 212, "summar": [173, 174, 175], "summat": 14, "sun": 121, "super": [7, 61, 62, 63, 64, 65, 66, 67, 68, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 152, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 168, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 198], "support": [1, 3, 4, 7, 8, 14, 15, 16, 17, 19, 34, 65, 66, 67, 68, 69, 116, 117, 180, 182, 189, 206, 207, 208, 209, 212, 213, 214, 215, 217, 218, 220, 223, 233, 238, 240, 244, 246, 248, 251, 252, 253, 255, 259, 263, 270, 280], "suppos": 280, "sure": [180, 280], "svd": [12, 16], "symmetr": [9, 105, 106, 107, 130, 131, 139], "syntax": [1, 212], "system": [8, 9, 16, 17, 18, 60, 195, 259], "systemat": 280, "szegedi": [23, 60], "t": [16, 60, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 197, 207, 212, 254, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280], "t0": 183, "t1": 254, "t2": 254, "tabular": 4, "tailor": [4, 180, 280], "take": [17, 173, 174, 175, 176, 177, 178, 197, 269], "taken": 251, "tan": 228, "tangent": [79, 139, 232, 249, 250], "tanh": [66, 69, 72, 73, 91, 126, 127, 130, 131, 133, 140, 151, 228], "tanhnetwork": 139, "target": [5, 69, 95, 96, 97, 99, 100, 105, 106, 107, 116, 156, 157, 158, 159, 160, 170, 171, 172, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 271, 273, 278], "target_tensor": [156, 157, 158, 159, 160], "target_transform": 5, "task": [4, 7, 8, 20, 21, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 49, 60, 77, 78, 81, 92, 95, 96, 99, 100, 121, 122, 137, 138, 141, 142, 143, 156, 157, 158, 159, 160, 165, 166, 167, 173, 175, 176, 178, 186, 196, 206, 223, 280], "techniqu": [9, 13, 58, 101, 145, 146, 147, 148, 149, 165, 166, 167, 182, 278, 280], "tempor": [141, 143, 175, 178], "temporarili": 197, "tensor": [2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 43, 50, 51, 52, 53, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 195, 197, 199, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280], "term": [16, 92, 118, 119, 120, 183, 187, 189, 190, 191, 193], "test": [4, 5], "test_backward": 61, "test_siz": 5, "text": [4, 10, 14, 15, 34, 49, 50, 51, 52, 65, 71, 74, 75, 76, 78, 80, 81, 82, 105, 106, 107, 108, 109, 110, 112, 113, 114, 118, 119, 120, 121, 122, 126, 127, 130, 131, 132, 134, 135, 136, 138, 141, 142, 143, 145, 146, 147, 148, 149, 156, 157, 158, 159, 160, 173, 174, 175, 176, 177, 178, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 202, 208, 209, 211, 213, 214, 215, 217, 218, 229, 233, 239, 240, 241, 243, 248, 253, 255, 257, 260, 261, 262, 263, 264, 266, 267, 268, 271, 272, 273, 275, 276, 277], "th": [92, 156, 157, 159, 160, 165, 166, 167, 213, 214, 217], "than": [0, 1, 67, 68, 71, 74, 97, 132, 134, 158, 181, 187, 233, 251, 260, 265, 271, 273, 278], "thei": [0, 7, 19, 60, 62, 66, 68, 69, 199, 259, 263, 271, 273, 280], "them": [3, 63, 68, 84, 183, 196, 255, 265, 269, 272, 280], "therebi": [145, 174, 175, 177, 178], "theta": [183, 184, 276], "theta_": [183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193], "theta_t": [190, 191], "thi": [0, 1, 2, 3, 5, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 30, 34, 49, 50, 51, 52, 60, 61, 62, 64, 66, 67, 68, 69, 75, 77, 78, 79, 80, 81, 82, 84, 92, 94, 105, 116, 117, 121, 122, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 160, 162, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 176, 177, 178, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 202, 203, 204, 206, 207, 211, 212, 216, 219, 221, 224, 225, 226, 227, 233, 237, 238, 239, 240, 241, 244, 246, 248, 251, 252, 253, 254, 260, 262, 263, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280], "thing": 197, "those": [7, 31, 32, 33, 68, 131], "three": [19, 33, 82, 107, 110, 114, 118, 119, 120, 143, 149, 164, 167, 172, 175, 178], "threshold": [16, 97, 158], "through": [0, 3, 4, 7, 11, 16, 17, 19, 20, 22, 26, 30, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 58, 65, 66, 69, 92, 94, 116, 121, 122, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 162, 163, 164, 165, 168, 173, 174, 175, 176, 177, 178, 203, 210, 211, 216, 259, 261, 263, 264, 267, 280], "throughout": [76, 270], "tile": 258, "time": [0, 3, 14, 31, 32, 33, 80, 118, 134, 136, 141, 173, 174, 175, 176, 177, 178, 183, 184, 185, 186, 187, 191, 193, 197, 262, 266], "to_tensor": 5, "togeth": [69, 269, 280], "too": 192, "tool": [3, 7, 180, 196, 206, 269, 280], "top": [9, 10, 11, 17, 19, 92, 94, 116, 141, 142, 143, 152, 154, 271, 273], "torch": [53, 254], "total": [0, 1, 2, 5, 21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 59, 61, 64, 207, 263], "totensor": [269, 280], "trace": [8, 228], "track": [7, 118, 119, 120, 162, 163, 164, 165, 166, 167, 180, 195, 197, 201, 202, 203, 205, 219, 220, 221, 222, 223, 224, 225, 226, 227, 254, 270], "track_running_stat": [118, 119, 120, 162, 163, 164, 165, 166, 167], "tradit": [184, 185, 188, 189, 190], "trail": 104, "train": [1, 2, 3, 4, 5, 7, 22, 23, 24, 60, 61, 62, 63, 66, 68, 69, 78, 85, 86, 87, 88, 89, 101, 103, 117, 133, 134, 136, 137, 138, 139, 145, 146, 147, 148, 149, 162, 163, 164, 165, 166, 167, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 197, 269, 272, 273, 274, 275, 276, 277, 280], "trainabl": [61, 162, 163, 164, 165, 166, 167, 180], "transact": 121, "transfer": [103, 165, 166], "transform": [2, 4, 5, 7, 11, 67, 92, 94, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 196, 259], "transform_pipelin": [269, 280], "transformed_imag": [269, 280], "transit": 158, "translat": [174, 177], "transpos": [7, 9, 228], "treat": [0, 62, 168, 180], "triangular": [9, 17], "true": [1, 2, 3, 4, 5, 19, 22, 23, 24, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 84, 85, 86, 87, 88, 89, 92, 94, 101, 103, 116, 118, 119, 120, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 180, 181, 186, 187, 191, 195, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270], "truncat": 61, "truncate_from": 61, "try": 0, "tune": 280, "tupl": [2, 3, 5, 11, 17, 19, 34, 61, 63, 64, 80, 81, 82, 84, 104, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 141, 142, 143, 153, 168, 171, 172, 173, 174, 175, 176, 177, 178, 186, 187, 188, 189, 190, 192, 199, 201, 202, 203, 205, 207, 221, 224, 226, 239, 240, 241, 248, 253, 255, 257, 259, 260, 263, 264, 265, 267, 268, 271, 272, 273, 278], "twice": 260, "two": [7, 10, 11, 13, 14, 16, 17, 19, 31, 32, 33, 50, 53, 80, 81, 82, 92, 109, 113, 121, 122, 142, 148, 152, 163, 166, 174, 177, 186, 187, 188, 189, 190, 192, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 251, 259], "type": [34, 43, 49, 62, 63, 64, 92, 152, 207, 219, 220, 221, 222, 223, 224, 225, 226, 227, 254, 259, 270], "typeerror": [0, 1, 2, 63, 181], "typic": [8, 34, 49, 62, 78, 85, 117, 121, 136, 138, 160, 162, 163, 164, 165, 166, 167, 182, 183, 191, 193, 197, 199, 267, 270, 272, 276, 278, 280], "u": [16, 19, 127, 129, 131], "u_": 188, "ultra": 40, "unchang": [62, 89, 132, 134, 135, 136, 145, 146, 147, 148, 149, 153, 261, 264], "undefin": 217, "under": 180, "underbrac": 14, "underdetermin": 16, "undergo": 280, "underli": [0, 7, 23, 24, 25, 27, 28, 254, 257, 261, 263, 268], "understand": [7, 58, 60, 61, 69, 280], "unexpect": [63, 66, 69, 206], "unfold": [83, 91], "unifi": 0, "uniform": [125, 127, 131, 141, 142, 143, 152, 154, 200, 201, 202, 206, 274, 275, 276, 277], "uniformli": [201, 205], "uniniti": [221, 222], "unintend": 197, "union": 53, "uniqu": [9, 16, 18, 65, 67], "unit": [20, 30, 58, 71, 72, 74, 75, 76, 126, 127, 130, 131, 132, 133, 134, 135, 136, 145], "unless": [35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 207], "unlik": [62, 65, 66, 67, 68, 74, 132, 134, 145, 168, 184, 185, 187, 188, 189, 190, 192], "unnecessari": 197, "unpad": 260, "unseen": 280, "unsqueez": 258, "unstabl": 13, "up": [181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 276, 278], "updat": [4, 62, 68, 69, 145, 146, 147, 148, 149, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 197], "upon": [24, 60, 65, 66, 67, 68], "upper": [17, 129, 192, 205], "us": [0, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 16, 17, 19, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 92, 94, 99, 101, 103, 106, 107, 116, 117, 118, 119, 120, 121, 122, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 195, 196, 197, 198, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 237, 239, 240, 241, 248, 253, 259, 260, 262, 264, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280], "usag": [3, 8, 66, 69, 181, 182, 271, 272, 273, 274, 275, 276, 277, 278], "use_aux": [22, 23, 24], "user": [1, 2, 3, 4, 7, 65, 66, 67, 68, 180, 185, 269, 270, 280], "usual": 157, "util": [3, 7, 8, 50, 51, 52, 67, 68, 180, 206], "v": [11, 16, 19, 186, 187, 189, 190, 220], "v1": [22, 23, 26, 27, 28, 60], "v2": [26, 28, 60], "v3": [22, 24, 25, 60], "v4": [22, 25, 60], "v_": [183, 186, 187, 189, 190, 191, 193], "v_stack": 268, "v_t": [190, 191], "val": 124, "valid": [118, 119, 120, 122, 141, 142, 143, 252], "valu": [7, 10, 14, 15, 16, 19, 61, 63, 65, 67, 69, 71, 74, 77, 78, 79, 80, 81, 82, 84, 95, 96, 97, 99, 100, 101, 103, 104, 105, 116, 117, 118, 119, 120, 121, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 145, 146, 147, 148, 149, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 173, 174, 175, 176, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 199, 201, 202, 203, 204, 205, 206, 219, 220, 221, 222, 223, 229, 230, 231, 233, 236, 237, 238, 239, 241, 243, 244, 246, 247, 255, 260, 261, 263, 267, 272, 274, 275, 277], "valuabl": 206, "valueerror": [1, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 181], "vanish": [60, 132, 136, 162, 163, 164], "var": 228, "vari": [49, 66, 68, 105, 116, 170, 276], "variabl": [63, 69, 105, 106, 107, 153, 170, 171, 172, 180, 195, 197, 201, 221, 273, 276], "varianc": [76, 85, 101, 103, 118, 119, 120, 126, 127, 130, 131, 136, 145, 162, 163, 164, 165, 166, 167, 168, 186, 187, 188, 189, 190, 203, 253, 276, 280], "variant": [50, 51, 52, 53, 54, 55, 56, 57, 186, 187, 188], "variat": [165, 166, 167, 273, 280], "varieti": [4, 26, 206, 280], "variou": [22, 27, 28, 30, 60, 135, 182, 206, 239, 241, 260, 270], "vdot": 216, "vector": [11, 16, 17, 18, 19, 92, 94, 152, 154, 210, 211, 212, 216], "veloc": [183, 191, 193], "veri": [16, 37, 39, 60, 184], "versa": 192, "versatil": [206, 259], "version": [19, 22, 26, 30, 31, 32, 191, 216, 274], "vertic": [265, 268, 277], "vgg": 53, "vggnet": [29, 54, 55, 56, 57, 60], "vggnet_11": 60, "vggnet_13": 60, "vggnet_16": 60, "vggnet_19": 60, "via": [3, 4, 49], "vice": 192, "video": [82, 89, 120, 143, 167, 175, 178], "view": [26, 30, 66, 174, 175, 176, 177, 178, 263], "vision": [34, 60, 81, 142, 152, 280], "visual": [58, 60], "vol": 60, "volumetr": [82, 89, 120, 143, 167, 175, 178], "vstack": 258, "w": [34, 50, 51, 52, 81, 82, 84, 88, 89, 92, 94, 106, 107, 109, 110, 113, 114, 116, 117, 119, 120, 121, 141, 142, 143, 152, 154, 163, 164, 166, 167, 171, 172, 175, 178, 271, 273], "w_": [81, 82, 106, 107, 109, 110, 113, 114, 116, 142, 143, 171, 172, 174, 175, 177, 178], "w_out": [81, 82, 109, 110, 113, 114], "wa": [23, 145, 146, 147, 148, 149, 197], "wai": [1, 21, 59, 195, 197, 263], "wang": 60, "want": [0, 7, 269, 271], "warn": [65, 67], "we": [3, 7, 196, 259], "weight": [35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 60, 80, 81, 82, 92, 94, 95, 96, 100, 101, 103, 104, 116, 121, 122, 126, 127, 130, 131, 141, 142, 143, 145, 146, 147, 148, 149, 152, 154, 156, 157, 160, 162, 163, 164, 165, 166, 167, 168, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 201, 206], "weight1": 67, "weight2": 67, "weight_decai": [183, 184, 185, 186, 187, 188, 189, 190, 191, 193], "well": [24, 49, 126, 127], "were": 69, "what": 197, "when": [0, 1, 3, 7, 14, 63, 66, 68, 69, 71, 74, 80, 81, 82, 132, 153, 162, 163, 164, 165, 166, 167, 181, 184, 192, 195, 197, 198, 199, 206, 217, 269, 271], "where": [3, 4, 5, 10, 11, 13, 14, 15, 16, 17, 19, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 87, 88, 89, 92, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 121, 122, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 197, 199, 206, 208, 209, 213, 214, 215, 217, 218, 221, 222, 233, 237, 238, 239, 240, 241, 244, 246, 248, 251, 252, 253, 255, 260, 262, 266, 269, 270, 271, 272, 273, 274, 275, 276, 277], "whether": [1, 10, 22, 23, 24, 63, 64, 126, 127, 191, 195, 201, 202, 203, 205, 207, 221, 222, 239, 240, 241, 248, 253], "which": [0, 7, 10, 11, 13, 14, 15, 16, 17, 19, 25, 28, 49, 54, 55, 56, 57, 60, 63, 65, 67, 69, 74, 78, 97, 117, 122, 132, 133, 134, 138, 139, 145, 158, 160, 162, 163, 164, 165, 166, 167, 168, 186, 187, 189, 191, 195, 197, 199, 201, 202, 205, 230, 231, 232, 233, 234, 235, 238, 239, 240, 241, 242, 244, 245, 246, 248, 249, 250, 251, 253, 255, 262, 263, 265, 267, 270, 271, 273, 274, 275, 276, 277, 278, 280], "while": [7, 28, 60, 66, 69, 85, 133, 135, 180, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 197, 263, 265, 274, 280], "who": [7, 65, 66, 67, 68], "whose": [19, 222, 225, 227, 229, 233, 237, 243], "wide": [4, 5, 8, 16, 34, 42, 60, 75, 135, 141, 142, 157], "wider": [80, 81], "width": [49, 81, 82, 84, 88, 89, 106, 107, 109, 110, 113, 114, 116, 117, 122, 142, 143, 163, 164, 166, 167, 171, 172, 174, 175, 177, 178, 271, 273, 278], "window": [108, 109, 110, 112, 113, 114, 173, 174, 175, 176, 177, 178, 184, 239, 241], "wise": [47, 60, 71, 72, 74, 75, 76, 77, 78, 79, 118, 119, 120, 121, 138, 145, 146, 147, 148, 149, 180, 196, 208, 209, 212, 213, 214, 215, 217, 218, 229, 230, 231, 232, 233, 234, 235, 236, 238, 242, 243, 244, 245, 246, 247, 249, 250, 251, 257, 268], "within": [2, 60, 61, 62, 65, 66, 67, 68, 69, 79, 116, 117, 131, 133, 135, 136, 137, 139, 141, 142, 143, 145, 146, 147, 153, 156, 157, 158, 159, 160, 162, 163, 164, 165, 168, 173, 174, 175, 176, 177, 178, 182, 197, 219, 233, 276, 280], "without": [7, 65, 66, 67, 92, 94, 141, 142, 143, 152, 154, 195, 198, 239, 261, 263, 267], "won": 197, "work": [1, 2, 3, 7, 9, 196, 199], "workflow": [206, 280], "workload": 7, "wrap": [3, 180, 197, 254], "wrapper": 180, "x": [7, 8, 18, 26, 30, 43, 53, 60, 61, 62, 63, 65, 66, 67, 68, 69, 78, 92, 94, 117, 122, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 201, 202, 203, 205, 221, 222, 237, 259, 271, 272, 273, 274, 275, 276, 277, 278], "x1": 152, "x2": 152, "x_": [157, 160, 259], "x_c": [157, 160], "x_i": 156, "x_k": 157, "xavier": [126, 127, 130, 131], "xavier_norm": 125, "xavier_uniform": 125, "xy": 259, "x\u2081": 152, "x\u2082": 152, "y": [65, 66, 67, 68, 69, 117, 132, 133, 134, 135, 136, 137, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 201, 202, 203, 205, 221, 222, 259, 274], "y_": [157, 160, 259], "y_c": [157, 160], "y_i": 156, "yann": [5, 60], "yet": [7, 196], "yield": [0, 1, 63, 197], "you": [0, 61, 66, 68, 69, 180, 182, 195, 197, 206, 221, 222, 223, 227, 252, 254, 269, 271, 280], "your": [180, 182, 195, 197, 206, 280], "z": [222, 226, 227], "zeiler": [58, 60], "zero": [14, 16, 17, 24, 61, 71, 74, 80, 81, 82, 85, 86, 87, 88, 89, 108, 109, 110, 112, 113, 114, 124, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 141, 142, 143, 145, 146, 147, 148, 149, 168, 173, 174, 175, 176, 177, 178, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 221, 222, 223, 227, 228, 233, 243, 260], "zero_grad": [64, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 207], "zeros_lik": [222, 228], "zfnet": [29, 60], "zhang": 60, "zisserman": 60, "\u03c3\u1d62": 16}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "MNIST", "Image Datasets", "Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "alexnet", "Inception", "inception_v1", "inception_v3", "inception_v4", "InceptionResNet", "inception_resnet_v1", "inception_resnet_v2", "ConvNets", "LeNet", "lenet_1", "lenet_4", "lenet_5", "ResNet", "resnet_1001", "resnet_101", "resnet_152", "resnet_18", "resnet_200", "resnet_269", "resnet_34", "resnet_50", "SENet", "se_resnet_101", "se_resnet_152", "se_resnet_18", "se_resnet_34", "se_resnet_50", "SKNet", "models.sk_resnet_18", "models.sk_resnet_34", "models.sk_resnet_50", "VGGNet", "vggnet_11", "vggnet_13", "vggnet_16", "vggnet_19", "ZFNet", "zfnet", "lucid.models", "models.summarize", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "nn.SEModule", "nn.SelectiveKernel", "Fused Layers", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.LeakyReLU", "nn.ReLU", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Tanh", "Activation Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "lucid.nn", "optim.Optimizer", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.types", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.meshgrid", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.unsqueeze", "lucid.vstack", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": 196, "1d": 196, "2": 196, "2d": 196, "3": 196, "It": [195, 197], "ab": 229, "activ": [73, 91, 140, 151], "ad": 196, "adadelta": 184, "adagrad": 185, "adam": 186, "adamax": 188, "adamw": 187, "adaptive_avg_pool1d": 105, "adaptive_avg_pool2d": 106, "adaptive_avg_pool3d": 107, "adaptiveavgpool1d": 170, "adaptiveavgpool2d": 171, "adaptiveavgpool3d": 172, "add": 208, "addit": 16, "admonit": 199, "advanc": [84, 280], "alexnet": [20, 21], "algebra": 12, "algorithm": [183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193], "alias": 199, "align": 196, "alpha_dropout": 85, "alphadropout": 145, "also": 182, "anoth": 254, "arang": 219, "arcco": 230, "architectur": [20, 31, 32, 33, 58], "arcsin": 231, "arctan": 232, "asgd": 183, "attent": 122, "attribut": [5, 20, 26, 30, 34, 43, 49, 53, 58, 62, 64, 65, 66, 67, 68, 69, 118, 119, 120, 121, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 207, 271, 272, 273, 274, 275, 276, 277, 278], "avg_pool1d": 108, "avg_pool2d": 109, "avg_pool3d": 110, "avgpool1d": 173, "avgpool2d": 174, "avgpool3d": 175, "axi": 196, "backpropag": 207, "backward": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 92, 94, 116, 121, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "batch_norm": 101, "batchnorm": 123, "batchnorm1d": 162, "batchnorm2d": 163, "batchnorm3d": 164, "bceloss": 156, "behavior": [105, 106, 107, 170, 171, 172], "benefit": 197, "bilinear": [92, 152], "binari": 228, "binary_cross_entropi": 95, "broadcast": 196, "buffer": 62, "calcul": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 34, 43, 49, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 84, 92, 94, 105, 106, 107, 116, 118, 119, 120, 121, 122, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 277, 278], "captur": 198, "case": 199, "centercrop": 271, "choleski": 9, "class": [0, 1, 2, 5, 20, 22, 26, 30, 34, 43, 49, 53, 58, 62, 63, 64, 65, 66, 67, 68, 69, 118, 119, 120, 121, 122, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 207, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278], "clip": 233, "co": 234, "combin": 0, "compon": [3, 7, 180], "compos": 269, "concatdataset": [0, 1], "concaten": 255, "conclus": [3, 7, 180, 195, 196, 197, 206, 270, 280], "constant": 124, "contain": 70, "conv": 123, "conv1d": [80, 141], "conv2d": [81, 142], "conv3d": [82, 143], "convbnrelu1d": 118, "convbnrelu2d": 119, "convbnrelu3d": 120, "convnet": [29, 60], "convolut": [83, 91, 144, 151], "core": 7, "cosh": 235, "creat": [64, 207, 254], "cross_entropi": 96, "crossentropyloss": 157, "cube": 236, "custom": [1, 2, 3, 63, 181, 182, 280], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 6], "defin": [2, 63, 181, 182], "definit": 199, "descript": [50, 51, 52, 198], "det": 10, "detail": 16, "diag": 220, "dilat": 84, "div": 209, "dot": 210, "dropout": [86, 90, 91, 146, 150, 151], "dropout1d": [87, 147], "dropout2d": [88, 148], "dropout3d": [89, 149], "eig": 11, "elu": [71, 132], "empti": 221, "empty_lik": 222, "exampl": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280], "excit": 123, "exp": 237, "ey": 223, "featur": [4, 7, 8, 182, 206, 280], "flatten": 256, "forward": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 34, 43, 49, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 84, 92, 94, 105, 106, 107, 116, 118, 119, 120, 121, 122, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 274, 275, 276, 277, 278], "from": 254, "function": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 59, 61, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 124, 126, 127, 128, 129, 130, 131, 195, 197, 198, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "fuse": 123, "futur": 4, "gelu": [72, 133], "gener": [200, 228], "get": 182, "grad_en": 195, "gradient": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 92, 94, 116, 121, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 173, 174, 175, 176, 177, 178, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "guidelin": 199, "how": [195, 197], "hstack": 257, "huber_loss": 97, "huberloss": 158, "ident": 153, "imag": [6, 279], "incept": 22, "inception_resnet_v1": 27, "inception_resnet_v2": 28, "inception_v1": 23, "inception_v3": 24, "inception_v4": 25, "inceptionresnet": 26, "index": 207, "init": [124, 126, 127, 128, 129, 130, 131], "initi": 125, "inner": 211, "input": 254, "inspect": [182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193], "instance_norm": 103, "instancenorm1d": 165, "instancenorm2d": 166, "instancenorm3d": 167, "integr": [3, 180, 206, 280], "interpol": 116, "inv": 13, "iter": 207, "kaiming_norm": 126, "kaiming_uniform": 127, "kei": [3, 4, 7, 180, 182, 206, 280], "kernel": 123, "layer": [123, 140, 144, 150, 151, 155, 161, 169, 179], "layer_norm": 104, "layernorm": 168, "leaky_relu": 74, "leakyrelu": 134, "learn": 206, "lenet": 30, "lenet_1": 31, "lenet_4": 32, "lenet_5": 33, "limit": 7, "linalg": [8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "linear": [12, 91, 93, 94, 151, 154, 155], "list": 254, "load": 1, "log": 238, "loss": [91, 98, 151, 161], "lucid": [3, 4, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 60, 91, 180, 182, 195, 196, 197, 198, 199, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 280], "matmul": 212, "matrix": 212, "matrix_pow": 14, "max": 239, "max_pool1d": 112, "max_pool2d": 113, "max_pool3d": 114, "maximum": 213, "maxpool1d": 176, "maxpool2d": 177, "maxpool3d": 178, "mean": 240, "mechan": 122, "meshgrid": 259, "metadata": 198, "method": [0, 1, 2, 5, 26, 30, 53, 63, 64, 181, 207], "min": 241, "minimum": 214, "mnist": 5, "model": [50, 51, 52, 60, 61, 180], "modul": [63, 151], "moduledict": 65, "modulelist": 66, "more": 206, "mse_loss": 99, "mseloss": 159, "mul": 215, "multipl": [0, 212], "nadam": 189, "new": 196, "newaxi": 196, "nll_loss": 100, "nllloss": 160, "nn": [62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 91, 92, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180], "no_grad": 197, "norm": 15, "normal": [91, 102, 128, 151, 169, 272], "note": 7, "number": 200, "ones": 224, "ones_lik": 225, "oper": [12, 212, 228], "optim": [181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194], "organ": 180, "outer": 216, "overview": [3, 4, 7, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 180, 182, 206, 280], "pad": 260, "paramet": [1, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 197, 198, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278], "parameterdict": 67, "parameterlist": 68, "perform": 207, "pinv": 16, "pipelin": [3, 280], "pitfal": [195, 197], "pool": [91, 111, 151, 179], "potenti": [195, 197], "power": 217, "properti": [64, 207], "qr": 17, "radam": 190, "rais": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "rand": 201, "randint": 202, "randn": 203, "random": [200, 201, 202, 203, 204, 205, 206], "randomcrop": 273, "randomgrayscal": 274, "randomhorizontalflip": 275, "randomrot": 276, "randomverticalflip": 277, "ravel": 261, "reciproc": 242, "refer": [5, 121, 182], "register_model": 198, "relu": [75, 123, 135], "repeat": 262, "reshap": 263, "resiz": 278, "resnet": 34, "resnet_1001": 35, "resnet_101": 36, "resnet_152": 37, "resnet_18": 38, "resnet_200": 39, "resnet_269": 40, "resnet_34": 41, "resnet_50": 42, "return": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 59, 61, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 122, 124, 126, 127, 128, 129, 130, 131, 195, 197, 201, 202, 203, 204, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "rmsprop": 191, "rotat": 117, "rprop": 192, "rule": 212, "se_resnet_101": 44, "se_resnet_152": 45, "se_resnet_18": 46, "se_resnet_34": 47, "se_resnet_50": 48, "see": 182, "seed": 204, "select": 123, "selectivekernel": 122, "selu": [76, 136], "semodul": 121, "senet": 43, "sequenti": 69, "sgd": 193, "sigmoid": [77, 137], "sign": 243, "signatur": [0, 1, 2, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 87, 88, 89, 92, 94, 95, 96, 97, 99, 100, 101, 103, 104, 105, 106, 107, 108, 109, 110, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 170, 171, 172, 173, 174, 175, 176, 177, 178, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 201, 202, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278], "sin": 244, "sinh": 245, "sk_resnet_18": 50, "sk_resnet_34": 51, "sk_resnet_50": 52, "sknet": 49, "slice": 207, "softmax": [78, 138], "solv": 18, "sqrt": 246, "squar": 247, "squeez": [123, 264], "stack": 265, "start": 182, "state": [182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193], "sub": 218, "sum": 248, "summar": 61, "summari": 61, "svd": 19, "tabl": 61, "tan": 249, "tanh": [79, 139, 250], "tensor": [196, 207, 228, 254, 258], "through": 207, "tile": 266, "totensor": 270, "trace": 251, "track": 207, "transform": [269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "transpos": 252, "type": 199, "unari": 228, "unfold": 84, "uniform": [129, 205], "unsqueez": 267, "us": [1, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 199, 254], "usag": [4, 7, 23, 24, 25, 27, 28, 30, 31, 32, 33, 62, 117, 195, 196, 197, 199, 259, 269, 270, 280], "util": [91, 115], "utilit": 258, "var": 253, "vggnet": 53, "vggnet_11": 54, "vggnet_13": 55, "vggnet_16": 56, "vggnet_19": 57, "vstack": 268, "weight": 125, "why": 199, "work": [4, 195, 197], "xavier_norm": 130, "xavier_uniform": 131, "zero": 226, "zeros_lik": 227, "zfnet": [58, 59]}})