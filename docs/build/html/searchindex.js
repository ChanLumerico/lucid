Search.setIndex({"alltitles": {"@ Operator": [[390, "operator"]], "Activation Functions": [[207, null], [229, null]], "Activation Layers": [[288, null], [307, null]], "Additional Details": [[24, "additional-details"]], "Additional Options": [[289, "additional-options"]], "Advanced Example with Dilation": [[220, "advanced-example-with-dilation"]], "Advanced Features": [[468, "advanced-features"]], "Advantages": [[10, "advantages"], [12, "advantages"], [13, "advantages"], [14, "advantages"], [305, "advantages"]], "AlexNet": [[28, null], [85, "alexnet"]], "Algorithm": [[360, "algorithm"], [361, "algorithm"], [362, "algorithm"], [363, "algorithm"], [364, "algorithm"], [365, "algorithm"], [366, "algorithm"], [367, "algorithm"], [368, "algorithm"], [369, "algorithm"], [370, "algorithm"]], "Architecture": [[28, "architecture"], [39, "architecture"], [87, "architecture"], [88, "architecture"], [89, "architecture"], [152, "architecture"]], "Architecture Details": [[121, "architecture-details"], [122, "architecture-details"]], "Attention Functions": [[214, null], [229, null]], "Attention Layers": [[291, null], [307, null]], "Attention Mechanism": [[215, "attention-mechanism"], [266, "attention-mechanism"]], "Attributes": [[5, "attributes"], [6, "attributes"], [7, "attributes"], [8, "attributes"], [28, "attributes"], [82, "attributes"], [86, "attributes"], [112, "attributes"], [123, "attributes"], [130, "attributes"], [140, "attributes"], [145, "attributes"], [150, "attributes"], [152, "attributes"], [196, "attributes"], [198, "attributes"], [199, "attributes"], [200, "attributes"], [201, "attributes"], [202, "attributes"], [203, "attributes"], [259, "attributes"], [260, "attributes"], [261, "attributes"], [262, "attributes"], [263, "attributes"], [264, "attributes"], [265, "attributes"], [276, "attributes"], [277, "attributes"], [280, "attributes"], [281, "attributes"], [283, "attributes"], [284, "attributes"], [285, "attributes"], [287, "attributes"], [292, "attributes"], [293, "attributes"], [294, "attributes"], [297, "attributes"], [299, "attributes"], [300, "attributes"], [301, "attributes"], [302, "attributes"], [303, "attributes"], [308, "attributes"], [309, "attributes"], [310, "attributes"], [312, "attributes"], [313, "attributes"], [314, "attributes"], [315, "attributes"], [316, "attributes"], [318, "attributes"], [319, "attributes"], [320, "attributes"], [322, "attributes"], [323, "attributes"], [324, "attributes"], [325, "attributes"], [327, "attributes"], [328, "attributes"], [329, "attributes"], [330, "attributes"], [331, "attributes"], [332, "attributes"], [333, "attributes"], [334, "attributes"], [335, "attributes"], [372, "attributes"], [385, "attributes"], [459, "attributes"], [460, "attributes"], [461, "attributes"], [462, "attributes"], [463, "attributes"], [464, "attributes"], [465, "attributes"], [466, "attributes"]], "Automatic Differentiation (Autodiff)": [[15, "automatic-differentiation-autodiff"]], "Axis Swapping Rules": [[429, "axis-swapping-rules"]], "Backward Gradient Calculation": [[17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [21, "backward-gradient-calculation"], [22, "backward-gradient-calculation"], [23, "backward-gradient-calculation"], [24, "backward-gradient-calculation"], [25, "backward-gradient-calculation"], [26, "backward-gradient-calculation"], [27, "backward-gradient-calculation"], [199, "backward-gradient-calculation"], [200, "backward-gradient-calculation"], [201, "backward-gradient-calculation"], [202, "backward-gradient-calculation"], [203, "backward-gradient-calculation"], [205, "backward-gradient-calculation"], [206, "backward-gradient-calculation"], [208, "backward-gradient-calculation"], [209, "backward-gradient-calculation"], [210, "backward-gradient-calculation"], [211, "backward-gradient-calculation"], [212, "backward-gradient-calculation"], [213, "backward-gradient-calculation"], [222, "backward-gradient-calculation"], [230, "backward-gradient-calculation"], [232, "backward-gradient-calculation"], [257, "backward-gradient-calculation"], [265, "backward-gradient-calculation"], [275, "backward-gradient-calculation"], [276, "backward-gradient-calculation"], [277, "backward-gradient-calculation"], [278, "backward-gradient-calculation"], [279, "backward-gradient-calculation"], [280, "backward-gradient-calculation"], [281, "backward-gradient-calculation"], [283, "backward-gradient-calculation"], [284, "backward-gradient-calculation"], [285, "backward-gradient-calculation"], [286, "backward-gradient-calculation"], [287, "backward-gradient-calculation"], [292, "backward-gradient-calculation"], [293, "backward-gradient-calculation"], [294, "backward-gradient-calculation"], [297, "backward-gradient-calculation"], [300, "backward-gradient-calculation"], [301, "backward-gradient-calculation"], [302, "backward-gradient-calculation"], [303, "backward-gradient-calculation"], [308, "backward-gradient-calculation"], [309, "backward-gradient-calculation"], [310, "backward-gradient-calculation"], [312, "backward-gradient-calculation"], [313, "backward-gradient-calculation"], [314, "backward-gradient-calculation"], [315, "backward-gradient-calculation"], [316, "backward-gradient-calculation"], [318, "backward-gradient-calculation"], [319, "backward-gradient-calculation"], [320, "backward-gradient-calculation"], [322, "backward-gradient-calculation"], [323, "backward-gradient-calculation"], [324, "backward-gradient-calculation"], [325, "backward-gradient-calculation"], [330, "backward-gradient-calculation"], [331, "backward-gradient-calculation"], [332, "backward-gradient-calculation"], [333, "backward-gradient-calculation"], [334, "backward-gradient-calculation"], [335, "backward-gradient-calculation"], [386, "backward-gradient-calculation"], [387, "backward-gradient-calculation"], [388, "backward-gradient-calculation"], [389, "backward-gradient-calculation"], [390, "backward-gradient-calculation"], [391, "backward-gradient-calculation"], [392, "backward-gradient-calculation"], [393, "backward-gradient-calculation"], [394, "backward-gradient-calculation"], [395, "backward-gradient-calculation"], [396, "backward-gradient-calculation"], [408, "backward-gradient-calculation"], [409, "backward-gradient-calculation"], [410, "backward-gradient-calculation"], [411, "backward-gradient-calculation"], [412, "backward-gradient-calculation"], [413, "backward-gradient-calculation"], [414, "backward-gradient-calculation"], [415, "backward-gradient-calculation"], [416, "backward-gradient-calculation"], [417, "backward-gradient-calculation"], [418, "backward-gradient-calculation"], [419, "backward-gradient-calculation"], [420, "backward-gradient-calculation"], [421, "backward-gradient-calculation"], [422, "backward-gradient-calculation"], [423, "backward-gradient-calculation"], [424, "backward-gradient-calculation"], [425, "backward-gradient-calculation"], [426, "backward-gradient-calculation"], [427, "backward-gradient-calculation"], [428, "backward-gradient-calculation"], [429, "backward-gradient-calculation"], [430, "backward-gradient-calculation"], [431, "backward-gradient-calculation"], [432, "backward-gradient-calculation"], [433, "backward-gradient-calculation"], [434, "backward-gradient-calculation"], [436, "backward-gradient-calculation"], [438, "backward-gradient-calculation"], [440, "backward-gradient-calculation"], [443, "backward-gradient-calculation"], [444, "backward-gradient-calculation"], [445, "backward-gradient-calculation"], [446, "backward-gradient-calculation"], [447, "backward-gradient-calculation"], [450, "backward-gradient-calculation"], [451, "backward-gradient-calculation"], [452, "backward-gradient-calculation"], [453, "backward-gradient-calculation"], [454, "backward-gradient-calculation"], [455, "backward-gradient-calculation"], [456, "backward-gradient-calculation"]], "Base Class": [[358, null]], "Basic Installation": [[15, "basic-installation"]], "Behavior": [[245, "behavior"], [246, "behavior"], [247, "behavior"], [327, "behavior"], [328, "behavior"], [329, "behavior"]], "Benefits": [[375, "benefits"]], "Binary Functions": [[407, null]], "Bottleneck Configuration": [[96, "bottleneck-configuration"], [97, "bottleneck-configuration"]], "Broadcasting Rules": [[436, "broadcasting-rules"]], "CIFAR10": [[5, null]], "CIFAR100": [[6, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [6, "class-signature"], [7, "class-signature"], [8, "class-signature"], [28, "class-signature"], [30, "class-signature"], [39, "class-signature"], [40, "class-signature"], [54, "class-signature"], [59, "class-signature"], [60, "class-signature"], [73, "class-signature"], [77, "class-signature"], [82, "class-signature"], [86, "class-signature"], [90, "class-signature"], [91, "class-signature"], [92, "class-signature"], [93, "class-signature"], [103, "class-signature"], [112, "class-signature"], [123, "class-signature"], [130, "class-signature"], [140, "class-signature"], [145, "class-signature"], [150, "class-signature"], [152, "class-signature"], [156, "class-signature"], [159, "class-signature"], [178, "class-signature"], [179, "class-signature"], [190, "class-signature"], [196, "class-signature"], [197, "class-signature"], [198, "class-signature"], [199, "class-signature"], [200, "class-signature"], [201, "class-signature"], [202, "class-signature"], [203, "class-signature"], [259, "class-signature"], [260, "class-signature"], [261, "class-signature"], [262, "class-signature"], [263, "class-signature"], [264, "class-signature"], [265, "class-signature"], [266, "class-signature"], [276, "class-signature"], [277, "class-signature"], [278, "class-signature"], [279, "class-signature"], [280, "class-signature"], [281, "class-signature"], [282, "class-signature"], [283, "class-signature"], [284, "class-signature"], [285, "class-signature"], [286, "class-signature"], [287, "class-signature"], [289, "class-signature"], [290, "class-signature"], [292, "class-signature"], [293, "class-signature"], [294, "class-signature"], [295, "class-signature"], [297, "class-signature"], [298, "class-signature"], [299, "class-signature"], [300, "class-signature"], [301, "class-signature"], [302, "class-signature"], [303, "class-signature"], [305, "class-signature"], [308, "class-signature"], [309, "class-signature"], [310, "class-signature"], [312, "class-signature"], [313, "class-signature"], [314, "class-signature"], [315, "class-signature"], [316, "class-signature"], [318, "class-signature"], [319, "class-signature"], [320, "class-signature"], [321, "class-signature"], [322, "class-signature"], [323, "class-signature"], [324, "class-signature"], [325, "class-signature"], [327, "class-signature"], [328, "class-signature"], [329, "class-signature"], [330, "class-signature"], [331, "class-signature"], [332, "class-signature"], [333, "class-signature"], [334, "class-signature"], [335, "class-signature"], [337, "class-signature"], [339, "class-signature"], [340, "class-signature"], [341, "class-signature"], [342, "class-signature"], [343, "class-signature"], [345, "class-signature"], [348, "class-signature"], [350, "class-signature"], [351, "class-signature"], [352, "class-signature"], [353, "class-signature"], [354, "class-signature"], [355, "class-signature"], [356, "class-signature"], [357, "class-signature"], [360, "class-signature"], [361, "class-signature"], [362, "class-signature"], [363, "class-signature"], [364, "class-signature"], [365, "class-signature"], [366, "class-signature"], [367, "class-signature"], [368, "class-signature"], [369, "class-signature"], [370, "class-signature"], [372, "class-signature"], [385, "class-signature"], [457, "class-signature"], [458, "class-signature"], [459, "class-signature"], [460, "class-signature"], [461, "class-signature"], [462, "class-signature"], [463, "class-signature"], [464, "class-signature"], [465, "class-signature"], [466, "class-signature"]], "CoAtNet": [[30, null], [85, "coatnet"]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [10, "conclusion"], [12, "conclusion"], [13, "conclusion"], [14, "conclusion"], [15, "conclusion"], [305, "conclusion"], [347, "conclusion"], [349, "conclusion"], [373, "conclusion"], [374, "conclusion"], [375, "conclusion"], [384, "conclusion"], [458, "conclusion"], [468, "conclusion"]], "Configuration": [[31, "configuration"], [32, "configuration"], [33, "configuration"], [34, "configuration"], [35, "configuration"], [36, "configuration"], [37, "configuration"], [38, "configuration"]], "Configurations": [[59, "configurations"]], "Containers": [[204, null]], "Conv-BatchNorm-ReLU": [[267, null]], "ConvNeXt": [[39, null], [85, "convnext"]], "ConvNeXt_V2": [[40, null]], "ConvNets": [[85, null]], "Convolution Functions": [[219, null], [229, null]], "Convolution Layers": [[296, null], [307, null]], "Convolutional Transformer (CvT)": [[163, "convolutional-transformer-cvt"]], "Create a Tensor from a list": [[435, null]], "Creating a Parameter": [[198, null]], "Creating a tensor on GPU with gradient tracking": [[385, null]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[468, "custom-pipelines"]], "CvT": [[159, null]], "Defining a Custom Optimizer": [[359, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[197, null]], "Defining a custom optimizer": [[348, null]], "DenseNet": [[54, null], [85, "densenet"]], "Depthwise Separable Convolution": [[267, null]], "Description": [[124, "description"], [125, "description"], [126, "description"], [127, "description"], [128, "description"], [129, "description"], [141, "description"], [142, "description"], [143, "description"], [376, "description"]], "Details": [[98, "details"], [99, "details"], [100, "details"], [101, "details"], [102, "details"]], "Device-based dtype inference": [[385, null]], "Differences from nn.Transformer": [[156, "differences-from-nn-transformer"]], "Dropout Functions": [[228, null], [229, null]], "Dropout Layers": [[304, null], [307, null]], "Educational by Design": [[15, "educational-by-design"]], "EfficientNet": [[59, null], [85, "efficientnet"]], "EfficientNet Configurations": [[59, "id1"]], "EfficientNet_V2": [[60, null]], "Einops Functions": [[11, null]], "Einops Layers": [[306, null], [307, null]], "Embedding Process": [[255, "embedding-process"]], "Enable GPU (Metal / MLX Acceleration)": [[15, "enable-gpu-metal-mlx-acceleration"]], "Example": [[3, null], [3, null], [3, null], [10, null], [10, null], [10, null], [17, "example"], [18, "example"], [19, "example"], [21, "example"], [22, "example"], [23, "example"], [24, "example"], [25, "example"], [26, "example"], [27, "example"], [78, "example"], [79, "example"], [80, "example"], [81, "example"], [94, "example"], [95, "example"], [220, "example"], [347, null], [347, null], [347, null], [373, "example"], [375, "example"], [377, "example"], [379, "example"], [380, "example"], [381, "example"], [382, "example"], [383, "example"], [384, null], [384, null], [384, null], [397, "example"], [398, "example"], [399, "example"], [400, "example"], [401, "example"], [403, "example"], [404, "example"], [405, "example"], [406, "example"], [408, "example"], [409, "example"], [410, "example"], [411, "example"], [412, "example"], [413, "example"], [414, "example"], [415, "example"], [417, "example"], [418, "example"], [420, "example"], [422, "example"], [423, "example"], [424, "example"], [425, "example"], [426, "example"], [427, "example"], [428, "example"], [430, "example"], [431, "example"], [432, "example"], [433, "example"], [434, "example"], [437, "example"], [438, "example"], [440, "example"], [445, "example"], [447, "example"], [450, "example"], [451, "example"], [453, "example"], [454, "example"], [455, "example"], [456, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[374, null]], "Example 2: Adding a new axis to a 2D tensor": [[374, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[374, null]], "Example Usage": [[74, "example-usage"], [75, "example-usage"], [76, "example-usage"], [83, "example-usage"], [84, "example-usage"], [86, "example-usage"], [87, "example-usage"], [88, "example-usage"], [89, "example-usage"], [136, "example-usage"], [137, "example-usage"], [138, "example-usage"], [139, "example-usage"], [144, "example-usage"], [258, "example-usage"], [457, "example-usage"], [458, "example-usage"], [468, "example-usage"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [6, "examples"], [7, "examples"], [8, "examples"], [12, "examples"], [13, "examples"], [14, "examples"], [16, "examples"], [28, "examples"], [29, "examples"], [30, "examples"], [31, "examples"], [32, "examples"], [33, "examples"], [34, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [47, "examples"], [48, "examples"], [49, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [53, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [61, "examples"], [62, "examples"], [63, "examples"], [64, "examples"], [65, "examples"], [66, "examples"], [67, "examples"], [68, "examples"], [69, "examples"], [70, "examples"], [71, "examples"], [72, "examples"], [77, "examples"], [92, "examples"], [96, "examples"], [97, "examples"], [103, "examples"], [104, "examples"], [105, "examples"], [106, "examples"], [107, "examples"], [108, "examples"], [109, "examples"], [110, "examples"], [111, "examples"], [112, "examples"], [113, "examples"], [114, "examples"], [115, "examples"], [116, "examples"], [117, "examples"], [118, "examples"], [119, "examples"], [120, "examples"], [121, "examples"], [122, "examples"], [124, "examples"], [125, "examples"], [126, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [131, "examples"], [132, "examples"], [133, "examples"], [134, "examples"], [135, "examples"], [141, "examples"], [142, "examples"], [143, "examples"], [145, "examples"], [146, "examples"], [147, "examples"], [148, "examples"], [149, "examples"], [150, "examples"], [151, "examples"], [152, "examples"], [153, "examples"], [155, "examples"], [156, "examples"], [157, "examples"], [158, "examples"], [159, "examples"], [160, "examples"], [161, "examples"], [162, "examples"], [164, "examples"], [166, "examples"], [167, "examples"], [168, "examples"], [169, "examples"], [170, "examples"], [171, "examples"], [172, "examples"], [173, "examples"], [174, "examples"], [175, "examples"], [176, "examples"], [177, "examples"], [178, "examples"], [179, "examples"], [180, "examples"], [181, "examples"], [182, "examples"], [183, "examples"], [184, "examples"], [185, "examples"], [186, "examples"], [187, "examples"], [188, "examples"], [189, "examples"], [190, "examples"], [191, "examples"], [192, "examples"], [193, "examples"], [194, "examples"], [195, "examples"], [196, "examples"], [197, "examples"], [198, "examples"], [199, "examples"], [200, "examples"], [201, "examples"], [202, "examples"], [203, "examples"], [205, "examples"], [206, "examples"], [208, "examples"], [209, "examples"], [210, "examples"], [211, "examples"], [212, "examples"], [213, "examples"], [215, "examples"], [216, "examples"], [217, "examples"], [218, "examples"], [221, "examples"], [222, "examples"], [223, "examples"], [224, "examples"], [225, "examples"], [226, "examples"], [227, "examples"], [230, "examples"], [232, "examples"], [233, "examples"], [234, "examples"], [235, "examples"], [237, "examples"], [238, "examples"], [239, "examples"], [240, "examples"], [242, "examples"], [243, "examples"], [244, "examples"], [245, "examples"], [246, "examples"], [247, "examples"], [248, "examples"], [249, "examples"], [250, "examples"], [252, "examples"], [253, "examples"], [254, "examples"], [255, "examples"], [257, "examples"], [259, "examples"], [260, "examples"], [261, "examples"], [262, "examples"], [263, "examples"], [264, "examples"], [265, "examples"], [266, "examples"], [268, "examples"], [270, "examples"], [271, "examples"], [272, "examples"], [273, "examples"], [274, "examples"], [275, "examples"], [276, "examples"], [277, "examples"], [278, "examples"], [279, "examples"], [280, "examples"], [281, "examples"], [282, "examples"], [283, "examples"], [284, "examples"], [285, "examples"], [286, "examples"], [287, "examples"], [290, "examples"], [292, "examples"], [293, "examples"], [294, "examples"], [295, "examples"], [297, "examples"], [298, "examples"], [299, "examples"], [300, "examples"], [301, "examples"], [302, "examples"], [303, "examples"], [305, "examples"], [308, "examples"], [309, "examples"], [310, "examples"], [312, "examples"], [313, "examples"], [314, "examples"], [315, "examples"], [316, "examples"], [318, "examples"], [319, "examples"], [320, "examples"], [321, "examples"], [322, "examples"], [323, "examples"], [324, "examples"], [325, "examples"], [327, "examples"], [328, "examples"], [329, "examples"], [330, "examples"], [331, "examples"], [332, "examples"], [333, "examples"], [334, "examples"], [335, "examples"], [337, "examples"], [345, "examples"], [348, "examples"], [359, "examples"], [360, "examples"], [361, "examples"], [362, "examples"], [363, "examples"], [364, "examples"], [365, "examples"], [366, "examples"], [367, "examples"], [368, "examples"], [369, "examples"], [370, "examples"], [376, "examples"], [385, "examples"], [386, "examples"], [387, "examples"], [388, "examples"], [389, "examples"], [391, "examples"], [392, "examples"], [393, "examples"], [394, "examples"], [395, "examples"], [396, "examples"], [402, "examples"], [416, "examples"], [419, "examples"], [421, "examples"], [429, "examples"], [435, "examples"], [436, "examples"], [439, "examples"], [442, "examples"], [443, "examples"], [444, "examples"], [446, "examples"], [448, "examples"], [449, "examples"], [452, "examples"], [459, "examples"], [460, "examples"], [461, "examples"], [462, "examples"], [463, "examples"], [464, "examples"], [465, "examples"], [466, "examples"]], "FashionMNIST": [[7, null]], "Features": [[16, "features"]], "Forward Calculation": [[17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [21, "forward-calculation"], [22, "forward-calculation"], [23, "forward-calculation"], [24, "forward-calculation"], [25, "forward-calculation"], [26, "forward-calculation"], [27, "forward-calculation"], [112, "forward-calculation"], [123, "forward-calculation"], [130, "forward-calculation"], [140, "forward-calculation"], [199, "forward-calculation"], [200, "forward-calculation"], [201, "forward-calculation"], [202, "forward-calculation"], [203, "forward-calculation"], [205, "forward-calculation"], [206, "forward-calculation"], [208, "forward-calculation"], [209, "forward-calculation"], [210, "forward-calculation"], [211, "forward-calculation"], [212, "forward-calculation"], [213, "forward-calculation"], [220, "forward-calculation"], [223, "forward-calculation"], [230, "forward-calculation"], [232, "forward-calculation"], [245, "forward-calculation"], [246, "forward-calculation"], [247, "forward-calculation"], [257, "forward-calculation"], [259, "forward-calculation"], [260, "forward-calculation"], [261, "forward-calculation"], [262, "forward-calculation"], [263, "forward-calculation"], [264, "forward-calculation"], [265, "forward-calculation"], [266, "forward-calculation"], [270, "forward-calculation"], [271, "forward-calculation"], [274, "forward-calculation"], [275, "forward-calculation"], [276, "forward-calculation"], [277, "forward-calculation"], [278, "forward-calculation"], [279, "forward-calculation"], [280, "forward-calculation"], [281, "forward-calculation"], [282, "forward-calculation"], [283, "forward-calculation"], [284, "forward-calculation"], [285, "forward-calculation"], [286, "forward-calculation"], [287, "forward-calculation"], [290, "forward-calculation"], [292, "forward-calculation"], [293, "forward-calculation"], [294, "forward-calculation"], [295, "forward-calculation"], [297, "forward-calculation"], [298, "forward-calculation"], [299, "forward-calculation"], [300, "forward-calculation"], [301, "forward-calculation"], [302, "forward-calculation"], [303, "forward-calculation"], [308, "forward-calculation"], [309, "forward-calculation"], [310, "forward-calculation"], [312, "forward-calculation"], [313, "forward-calculation"], [314, "forward-calculation"], [315, "forward-calculation"], [316, "forward-calculation"], [318, "forward-calculation"], [319, "forward-calculation"], [320, "forward-calculation"], [321, "forward-calculation"], [322, "forward-calculation"], [323, "forward-calculation"], [324, "forward-calculation"], [325, "forward-calculation"], [327, "forward-calculation"], [328, "forward-calculation"], [329, "forward-calculation"], [330, "forward-calculation"], [331, "forward-calculation"], [332, "forward-calculation"], [333, "forward-calculation"], [334, "forward-calculation"], [335, "forward-calculation"], [386, "forward-calculation"], [387, "forward-calculation"], [388, "forward-calculation"], [389, "forward-calculation"], [390, "forward-calculation"], [391, "forward-calculation"], [392, "forward-calculation"], [393, "forward-calculation"], [394, "forward-calculation"], [395, "forward-calculation"], [396, "forward-calculation"], [408, "forward-calculation"], [409, "forward-calculation"], [410, "forward-calculation"], [411, "forward-calculation"], [412, "forward-calculation"], [413, "forward-calculation"], [414, "forward-calculation"], [415, "forward-calculation"], [416, "forward-calculation"], [417, "forward-calculation"], [418, "forward-calculation"], [419, "forward-calculation"], [420, "forward-calculation"], [421, "forward-calculation"], [422, "forward-calculation"], [423, "forward-calculation"], [424, "forward-calculation"], [425, "forward-calculation"], [426, "forward-calculation"], [427, "forward-calculation"], [428, "forward-calculation"], [430, "forward-calculation"], [431, "forward-calculation"], [432, "forward-calculation"], [433, "forward-calculation"], [434, "forward-calculation"], [438, "forward-calculation"], [440, "forward-calculation"], [443, "forward-calculation"], [444, "forward-calculation"], [445, "forward-calculation"], [446, "forward-calculation"], [447, "forward-calculation"], [450, "forward-calculation"], [451, "forward-calculation"], [452, "forward-calculation"], [453, "forward-calculation"], [454, "forward-calculation"], [455, "forward-calculation"], [456, "forward-calculation"], [459, "forward-calculation"], [460, "forward-calculation"], [461, "forward-calculation"], [462, "forward-calculation"], [463, "forward-calculation"], [464, "forward-calculation"], [465, "forward-calculation"], [466, "forward-calculation"]], "Forward Method": [[339, "forward-method"], [340, "forward-method"], [341, "forward-method"], [342, "forward-method"], [343, "forward-method"]], "Forward Pass": [[150, "forward-pass"]], "Function Signature": [[12, "function-signature"], [13, "function-signature"], [14, "function-signature"], [17, "function-signature"], [18, "function-signature"], [19, "function-signature"], [21, "function-signature"], [22, "function-signature"], [23, "function-signature"], [24, "function-signature"], [25, "function-signature"], [26, "function-signature"], [27, "function-signature"], [29, "function-signature"], [31, "function-signature"], [32, "function-signature"], [33, "function-signature"], [34, "function-signature"], [35, "function-signature"], [36, "function-signature"], [37, "function-signature"], [38, "function-signature"], [41, "function-signature"], [42, "function-signature"], [43, "function-signature"], [44, "function-signature"], [45, "function-signature"], [46, "function-signature"], [47, "function-signature"], [48, "function-signature"], [49, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [53, "function-signature"], [55, "function-signature"], [56, "function-signature"], [57, "function-signature"], [58, "function-signature"], [61, "function-signature"], [62, "function-signature"], [63, "function-signature"], [64, "function-signature"], [65, "function-signature"], [66, "function-signature"], [67, "function-signature"], [68, "function-signature"], [69, "function-signature"], [70, "function-signature"], [71, "function-signature"], [72, "function-signature"], [74, "function-signature"], [75, "function-signature"], [76, "function-signature"], [78, "function-signature"], [79, "function-signature"], [80, "function-signature"], [81, "function-signature"], [83, "function-signature"], [84, "function-signature"], [87, "function-signature"], [88, "function-signature"], [89, "function-signature"], [94, "function-signature"], [95, "function-signature"], [96, "function-signature"], [97, "function-signature"], [98, "function-signature"], [99, "function-signature"], [100, "function-signature"], [101, "function-signature"], [102, "function-signature"], [104, "function-signature"], [105, "function-signature"], [106, "function-signature"], [107, "function-signature"], [108, "function-signature"], [109, "function-signature"], [110, "function-signature"], [111, "function-signature"], [113, "function-signature"], [114, "function-signature"], [115, "function-signature"], [116, "function-signature"], [117, "function-signature"], [118, "function-signature"], [119, "function-signature"], [120, "function-signature"], [121, "function-signature"], [122, "function-signature"], [124, "function-signature"], [125, "function-signature"], [126, "function-signature"], [127, "function-signature"], [128, "function-signature"], [129, "function-signature"], [131, "function-signature"], [132, "function-signature"], [133, "function-signature"], [134, "function-signature"], [135, "function-signature"], [136, "function-signature"], [137, "function-signature"], [138, "function-signature"], [139, "function-signature"], [141, "function-signature"], [142, "function-signature"], [143, "function-signature"], [144, "function-signature"], [146, "function-signature"], [147, "function-signature"], [148, "function-signature"], [149, "function-signature"], [151, "function-signature"], [153, "function-signature"], [155, "function-signature"], [157, "function-signature"], [158, "function-signature"], [160, "function-signature"], [161, "function-signature"], [162, "function-signature"], [164, "function-signature"], [165, "function-signature"], [166, "function-signature"], [167, "function-signature"], [168, "function-signature"], [169, "function-signature"], [170, "function-signature"], [171, "function-signature"], [172, "function-signature"], [173, "function-signature"], [174, "function-signature"], [175, "function-signature"], [176, "function-signature"], [177, "function-signature"], [180, "function-signature"], [181, "function-signature"], [182, "function-signature"], [183, "function-signature"], [184, "function-signature"], [185, "function-signature"], [186, "function-signature"], [187, "function-signature"], [188, "function-signature"], [189, "function-signature"], [191, "function-signature"], [192, "function-signature"], [193, "function-signature"], [194, "function-signature"], [195, "function-signature"], [205, "function-signature"], [206, "function-signature"], [208, "function-signature"], [209, "function-signature"], [210, "function-signature"], [211, "function-signature"], [212, "function-signature"], [213, "function-signature"], [215, "function-signature"], [216, "function-signature"], [217, "function-signature"], [218, "function-signature"], [220, "function-signature"], [221, "function-signature"], [222, "function-signature"], [223, "function-signature"], [224, "function-signature"], [225, "function-signature"], [226, "function-signature"], [227, "function-signature"], [230, "function-signature"], [232, "function-signature"], [233, "function-signature"], [234, "function-signature"], [235, "function-signature"], [237, "function-signature"], [238, "function-signature"], [239, "function-signature"], [240, "function-signature"], [242, "function-signature"], [243, "function-signature"], [244, "function-signature"], [245, "function-signature"], [246, "function-signature"], [247, "function-signature"], [248, "function-signature"], [249, "function-signature"], [250, "function-signature"], [252, "function-signature"], [253, "function-signature"], [254, "function-signature"], [255, "function-signature"], [257, "function-signature"], [258, "function-signature"], [268, "function-signature"], [270, "function-signature"], [271, "function-signature"], [272, "function-signature"], [273, "function-signature"], [274, "function-signature"], [275, "function-signature"], [373, "function-signature"], [375, "function-signature"], [376, "function-signature"], [377, "function-signature"], [379, "function-signature"], [380, "function-signature"], [381, "function-signature"], [382, "function-signature"], [383, "function-signature"], [386, "function-signature"], [387, "function-signature"], [388, "function-signature"], [389, "function-signature"], [390, "function-signature"], [391, "function-signature"], [392, "function-signature"], [393, "function-signature"], [394, "function-signature"], [395, "function-signature"], [396, "function-signature"], [397, "function-signature"], [398, "function-signature"], [399, "function-signature"], [400, "function-signature"], [401, "function-signature"], [402, "function-signature"], [403, "function-signature"], [404, "function-signature"], [405, "function-signature"], [406, "function-signature"], [408, "function-signature"], [409, "function-signature"], [410, "function-signature"], [411, "function-signature"], [412, "function-signature"], [413, "function-signature"], [414, "function-signature"], [415, "function-signature"], [416, "function-signature"], [417, "function-signature"], [418, "function-signature"], [419, "function-signature"], [420, "function-signature"], [421, "function-signature"], [422, "function-signature"], [423, "function-signature"], [424, "function-signature"], [425, "function-signature"], [426, "function-signature"], [427, "function-signature"], [428, "function-signature"], [429, "function-signature"], [430, "function-signature"], [431, "function-signature"], [432, "function-signature"], [433, "function-signature"], [434, "function-signature"], [435, "function-signature"], [436, "function-signature"], [437, "function-signature"], [438, "function-signature"], [439, "function-signature"], [440, "function-signature"], [442, "function-signature"], [443, "function-signature"], [444, "function-signature"], [445, "function-signature"], [446, "function-signature"], [447, "function-signature"], [448, "function-signature"], [449, "function-signature"], [450, "function-signature"], [451, "function-signature"], [452, "function-signature"], [453, "function-signature"], [454, "function-signature"], [455, "function-signature"], [456, "function-signature"]], "Fused Layers": [[267, null]], "Future Work": [[4, "future-work"]], "Getting Started": [[359, "getting-started"]], "Gradient Computation": [[437, "gradient-computation"], [442, "gradient-computation"], [448, "gradient-computation"]], "Gradient hooks": [[385, null]], "Hooks & Shape Alignment": [[15, "hooks-shape-alignment"]], "How It Works": [[373, "how-it-works"], [375, "how-it-works"]], "How to Install": [[15, "how-to-install"]], "Hybrid Architecture": [[30, "hybrid-architecture"]], "Hyperparameter Configuration": [[110, "hyperparameter-configuration"], [111, "hyperparameter-configuration"]], "Image Datasets": [[9, null]], "Image Transformations": [[467, null]], "Inception": [[73, null], [85, "inception"]], "Inception-ResNet": [[85, "inception-resnet"]], "InceptionNeXt": [[77, null], [85, "inceptionnext"]], "InceptionResNet": [[82, null]], "Inspecting Optimizer State": [[359, null], [360, null], [361, null], [362, null], [363, null], [364, null], [365, null], [366, null], [367, null], [368, null], [369, null], [370, null]], "Integration with lucid": [[3, "integration-with-lucid"], [347, "integration-with-lucid"], [384, "integration-with-lucid"], [468, "integration-with-lucid"]], "Key Components": [[3, "key-components"], [347, "key-components"]], "Key Enhancements": [[165, "key-enhancements"]], "Key Features": [[4, "key-features"], [136, "key-features"], [137, "key-features"], [138, "key-features"], [139, "key-features"], [144, "key-features"], [359, "key-features"], [384, "key-features"]], "Key Transformations": [[468, "key-transformations"]], "LR Schedulers": [[358, null]], "Layer Configuration": [[104, "layer-configuration"], [105, "layer-configuration"], [106, "layer-configuration"], [107, "layer-configuration"], [108, "layer-configuration"], [109, "layer-configuration"]], "LeNet": [[85, "lenet"], [86, null]], "Learn More": [[384, null]], "Linear Algebra Operations": [[20, null]], "Linear Functions": [[229, null], [231, null]], "Linear Layers": [[307, null], [311, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[229, null], [236, null]], "Loss Layers": [[307, null], [317, null]], "Lucid \ud83d\udc8e\u00b2": [[15, null]], "MNIST": [[8, null]], "Mathematical Definition": [[12, "mathematical-definition"], [13, "mathematical-definition"], [14, "mathematical-definition"], [244, "mathematical-definition"], [305, "mathematical-definition"]], "Mathematical Details": [[289, "mathematical-details"], [339, "mathematical-details"], [340, "mathematical-details"], [341, "mathematical-details"], [342, "mathematical-details"], [343, "mathematical-details"]], "Mathematical Expression": [[240, "mathematical-expression"], [449, "mathematical-expression"]], "Mathematical Formula": [[350, "mathematical-formula"], [351, "mathematical-formula"], [352, "mathematical-formula"], [354, "mathematical-formula"], [355, "mathematical-formula"], [356, "mathematical-formula"], [357, "mathematical-formula"]], "Mathematical Representation": [[385, "mathematical-representation"]], "Matrix Multiplication Rules": [[390, "matrix-multiplication-rules"]], "Metadata Captured": [[376, "metadata-captured"]], "Metal Acceleration (MLX Backend)": [[15, "metal-acceleration-mlx-backend"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [6, "methods"], [7, "methods"], [8, "methods"], [82, "methods"], [86, "methods"], [145, "methods"], [197, "methods"], [198, "methods"], [348, "methods"], [350, "methods"], [351, "methods"], [352, "methods"], [353, "methods"], [354, "methods"], [355, "methods"], [356, "methods"], [357, "methods"], [372, "methods"], [385, "methods"]], "MobileNet": [[85, "mobilenet"], [90, null]], "MobileNet_V2": [[91, null]], "MobileNet_V3": [[92, null]], "MobileNet_V4": [[93, null]], "Modules": [[307, null]], "Moving tensor between devices": [[385, null]], "Neural Networks with lucid.nn": [[15, "neural-networks-with-lucid-nn"]], "Normalization Functions": [[229, null], [241, null]], "Normalization Layers": [[307, null], [326, null]], "Optimizers": [[371, null]], "Organizing Models": [[347, "organizing-models"]], "Others": [[15, "others"]], "Overview": [[3, "overview"], [4, "overview"], [10, "overview"], [73, "overview"], [74, "overview"], [75, "overview"], [76, "overview"], [82, "overview"], [83, "overview"], [84, "overview"], [86, "overview"], [87, "overview"], [88, "overview"], [89, "overview"], [90, "overview"], [91, "overview"], [92, "overview"], [93, "overview"], [98, "overview"], [99, "overview"], [100, "overview"], [101, "overview"], [102, "overview"], [113, "overview"], [114, "overview"], [115, "overview"], [116, "overview"], [117, "overview"], [118, "overview"], [119, "overview"], [120, "overview"], [131, "overview"], [132, "overview"], [133, "overview"], [134, "overview"], [135, "overview"], [289, "overview"], [339, "overview"], [340, "overview"], [341, "overview"], [342, "overview"], [343, "overview"], [347, "overview"], [349, "overview"], [359, "overview"], [384, "overview"], [468, "overview"]], "PVT": [[164, null]], "PVT_V2": [[165, null]], "Parameters": [[1, "parameters"], [5, "parameters"], [6, "parameters"], [7, "parameters"], [8, "parameters"], [12, "parameters"], [13, "parameters"], [14, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [84, "parameters"], [86, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [104, "parameters"], [105, "parameters"], [106, "parameters"], [107, "parameters"], [108, "parameters"], [109, "parameters"], [110, "parameters"], [111, "parameters"], [112, "parameters"], [113, "parameters"], [114, "parameters"], [115, "parameters"], [116, "parameters"], [117, "parameters"], [118, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [122, "parameters"], [123, "parameters"], [124, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [155, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"], [159, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [164, "parameters"], [165, "parameters"], [166, "parameters"], [167, "parameters"], [168, "parameters"], [169, "parameters"], [170, "parameters"], [171, "parameters"], [172, "parameters"], [173, "parameters"], [174, "parameters"], [175, "parameters"], [176, "parameters"], [177, "parameters"], [178, "parameters"], [179, "parameters"], [180, "parameters"], [181, "parameters"], [182, "parameters"], [183, "parameters"], [184, "parameters"], [185, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [189, "parameters"], [190, "parameters"], [191, "parameters"], [192, "parameters"], [193, "parameters"], [194, "parameters"], [195, "parameters"], [196, "parameters"], [198, "parameters"], [199, "parameters"], [200, "parameters"], [201, "parameters"], [202, "parameters"], [203, "parameters"], [205, "parameters"], [206, "parameters"], [208, "parameters"], [209, "parameters"], [210, "parameters"], [211, "parameters"], [212, "parameters"], [213, "parameters"], [215, "parameters"], [216, "parameters"], [217, "parameters"], [218, "parameters"], [220, "parameters"], [221, "parameters"], [222, "parameters"], [223, "parameters"], [224, "parameters"], [225, "parameters"], [226, "parameters"], [227, "parameters"], [230, "parameters"], [232, "parameters"], [233, "parameters"], [234, "parameters"], [235, "parameters"], [237, "parameters"], [238, "parameters"], [239, "parameters"], [240, "parameters"], [242, "parameters"], [243, "parameters"], [244, "parameters"], [245, "parameters"], [246, "parameters"], [247, "parameters"], [248, "parameters"], [249, "parameters"], [250, "parameters"], [252, "parameters"], [253, "parameters"], [254, "parameters"], [255, "parameters"], [257, "parameters"], [258, "parameters"], [259, "parameters"], [260, "parameters"], [261, "parameters"], [262, "parameters"], [263, "parameters"], [264, "parameters"], [265, "parameters"], [266, "parameters"], [268, "parameters"], [270, "parameters"], [271, "parameters"], [272, "parameters"], [273, "parameters"], [274, "parameters"], [275, "parameters"], [276, "parameters"], [277, "parameters"], [280, "parameters"], [281, "parameters"], [283, "parameters"], [284, "parameters"], [285, "parameters"], [287, "parameters"], [289, "parameters"], [290, "parameters"], [292, "parameters"], [293, "parameters"], [294, "parameters"], [295, "parameters"], [297, "parameters"], [298, "parameters"], [299, "parameters"], [300, "parameters"], [301, "parameters"], [302, "parameters"], [303, "parameters"], [305, "parameters"], [308, "parameters"], [309, "parameters"], [310, "parameters"], [312, "parameters"], [313, "parameters"], [314, "parameters"], [315, "parameters"], [316, "parameters"], [318, "parameters"], [319, "parameters"], [320, "parameters"], [321, "parameters"], [322, "parameters"], [323, "parameters"], [324, "parameters"], [325, "parameters"], [327, "parameters"], [328, "parameters"], [329, "parameters"], [330, "parameters"], [331, "parameters"], [332, "parameters"], [333, "parameters"], [334, "parameters"], [335, "parameters"], [337, "parameters"], [339, "parameters"], [340, "parameters"], [341, "parameters"], [342, "parameters"], [343, "parameters"], [345, "parameters"], [350, "parameters"], [351, "parameters"], [352, "parameters"], [353, "parameters"], [354, "parameters"], [355, "parameters"], [356, "parameters"], [357, "parameters"], [360, "parameters"], [361, "parameters"], [362, "parameters"], [363, "parameters"], [364, "parameters"], [365, "parameters"], [366, "parameters"], [367, "parameters"], [368, "parameters"], [369, "parameters"], [370, "parameters"], [372, "parameters"], [375, "parameters"], [376, "parameters"], [377, "parameters"], [379, "parameters"], [380, "parameters"], [381, "parameters"], [382, "parameters"], [383, "parameters"], [385, "parameters"], [386, "parameters"], [387, "parameters"], [388, "parameters"], [389, "parameters"], [390, "parameters"], [391, "parameters"], [392, "parameters"], [393, "parameters"], [394, "parameters"], [395, "parameters"], [396, "parameters"], [397, "parameters"], [398, "parameters"], [399, "parameters"], [400, "parameters"], [401, "parameters"], [402, "parameters"], [403, "parameters"], [404, "parameters"], [405, "parameters"], [406, "parameters"], [408, "parameters"], [409, "parameters"], [410, "parameters"], [411, "parameters"], [412, "parameters"], [413, "parameters"], [414, "parameters"], [415, "parameters"], [416, "parameters"], [417, "parameters"], [418, "parameters"], [419, "parameters"], [420, "parameters"], [421, "parameters"], [422, "parameters"], [423, "parameters"], [424, "parameters"], [425, "parameters"], [426, "parameters"], [427, "parameters"], [428, "parameters"], [429, "parameters"], [430, "parameters"], [431, "parameters"], [432, "parameters"], [433, "parameters"], [434, "parameters"], [435, "parameters"], [436, "parameters"], [437, "parameters"], [438, "parameters"], [439, "parameters"], [440, "parameters"], [442, "parameters"], [443, "parameters"], [444, "parameters"], [445, "parameters"], [446, "parameters"], [447, "parameters"], [448, "parameters"], [449, "parameters"], [450, "parameters"], [451, "parameters"], [452, "parameters"], [453, "parameters"], [454, "parameters"], [455, "parameters"], [456, "parameters"], [457, "parameters"], [458, "parameters"], [459, "parameters"], [460, "parameters"], [461, "parameters"], [462, "parameters"], [463, "parameters"], [464, "parameters"], [465, "parameters"], [466, "parameters"]], "Performing backpropagation": [[385, null]], "Pooling Functions": [[229, null], [251, null]], "Pooling Layers": [[307, null], [336, null]], "Potential Pitfalls": [[373, "potential-pitfalls"], [375, "potential-pitfalls"]], "Properties": [[198, "properties"], [385, "properties"]], "Pyramid Vision Transformer (PVT)": [[163, "pyramid-vision-transformer-pvt"]], "Raises": [[17, "raises"], [18, "raises"], [19, "raises"], [21, "raises"], [22, "raises"], [23, "raises"], [24, "raises"], [25, "raises"], [26, "raises"], [27, "raises"]], "Random Number Generations": [[378, null]], "References": [[5, "references"], [6, "references"], [7, "references"], [8, "references"], [265, "references"], [359, "references"]], "Regularization": [[222, "regularization"]], "Representation": [[372, "representation"]], "ResNeSt": [[85, "resnest"], [103, null]], "ResNeXt": [[85, "resnext"], [123, null]], "ResNet": [[85, "resnet"], [112, null]], "Return Values": [[449, "return-values"]], "Returns": [[12, "returns"], [13, "returns"], [14, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [21, "returns"], [22, "returns"], [23, "returns"], [24, "returns"], [25, "returns"], [26, "returns"], [27, "returns"], [29, "returns"], [41, "returns"], [42, "returns"], [43, "returns"], [44, "returns"], [45, "returns"], [46, "returns"], [47, "returns"], [48, "returns"], [49, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [53, "returns"], [55, "returns"], [56, "returns"], [57, "returns"], [58, "returns"], [61, "returns"], [62, "returns"], [63, "returns"], [64, "returns"], [65, "returns"], [66, "returns"], [67, "returns"], [68, "returns"], [69, "returns"], [70, "returns"], [71, "returns"], [72, "returns"], [74, "returns"], [75, "returns"], [76, "returns"], [78, "returns"], [79, "returns"], [80, "returns"], [81, "returns"], [83, "returns"], [84, "returns"], [87, "returns"], [88, "returns"], [89, "returns"], [94, "returns"], [95, "returns"], [96, "returns"], [97, "returns"], [104, "returns"], [105, "returns"], [106, "returns"], [107, "returns"], [108, "returns"], [109, "returns"], [110, "returns"], [111, "returns"], [113, "returns"], [114, "returns"], [115, "returns"], [116, "returns"], [117, "returns"], [118, "returns"], [119, "returns"], [120, "returns"], [121, "returns"], [122, "returns"], [124, "returns"], [125, "returns"], [126, "returns"], [127, "returns"], [128, "returns"], [129, "returns"], [131, "returns"], [132, "returns"], [133, "returns"], [134, "returns"], [135, "returns"], [136, "returns"], [137, "returns"], [138, "returns"], [139, "returns"], [141, "returns"], [142, "returns"], [143, "returns"], [144, "returns"], [146, "returns"], [147, "returns"], [148, "returns"], [149, "returns"], [151, "returns"], [153, "returns"], [155, "returns"], [157, "returns"], [158, "returns"], [160, "returns"], [161, "returns"], [162, "returns"], [164, "returns"], [165, "returns"], [166, "returns"], [167, "returns"], [168, "returns"], [169, "returns"], [170, "returns"], [171, "returns"], [172, "returns"], [173, "returns"], [174, "returns"], [175, "returns"], [176, "returns"], [177, "returns"], [180, "returns"], [181, "returns"], [182, "returns"], [183, "returns"], [184, "returns"], [185, "returns"], [186, "returns"], [187, "returns"], [188, "returns"], [189, "returns"], [191, "returns"], [192, "returns"], [193, "returns"], [194, "returns"], [195, "returns"], [205, "returns"], [206, "returns"], [208, "returns"], [209, "returns"], [210, "returns"], [211, "returns"], [212, "returns"], [213, "returns"], [215, "returns"], [216, "returns"], [217, "returns"], [218, "returns"], [220, "returns"], [221, "returns"], [222, "returns"], [223, "returns"], [224, "returns"], [225, "returns"], [226, "returns"], [227, "returns"], [230, "returns"], [232, "returns"], [233, "returns"], [234, "returns"], [235, "returns"], [237, "returns"], [238, "returns"], [239, "returns"], [240, "returns"], [242, "returns"], [243, "returns"], [244, "returns"], [245, "returns"], [246, "returns"], [247, "returns"], [248, "returns"], [249, "returns"], [250, "returns"], [252, "returns"], [253, "returns"], [254, "returns"], [255, "returns"], [257, "returns"], [258, "returns"], [266, "returns"], [268, "returns"], [270, "returns"], [271, "returns"], [272, "returns"], [273, "returns"], [274, "returns"], [275, "returns"], [282, "returns"], [305, "returns"], [337, "returns"], [373, "returns"], [375, "returns"], [377, "returns"], [379, "returns"], [380, "returns"], [381, "returns"], [382, "returns"], [383, "returns"], [386, "returns"], [387, "returns"], [388, "returns"], [389, "returns"], [390, "returns"], [391, "returns"], [392, "returns"], [393, "returns"], [394, "returns"], [395, "returns"], [396, "returns"], [397, "returns"], [398, "returns"], [399, "returns"], [400, "returns"], [401, "returns"], [402, "returns"], [403, "returns"], [404, "returns"], [405, "returns"], [406, "returns"], [408, "returns"], [409, "returns"], [410, "returns"], [411, "returns"], [412, "returns"], [413, "returns"], [414, "returns"], [415, "returns"], [416, "returns"], [417, "returns"], [418, "returns"], [419, "returns"], [420, "returns"], [421, "returns"], [422, "returns"], [423, "returns"], [424, "returns"], [425, "returns"], [426, "returns"], [427, "returns"], [428, "returns"], [429, "returns"], [430, "returns"], [431, "returns"], [432, "returns"], [433, "returns"], [434, "returns"], [435, "returns"], [436, "returns"], [437, "returns"], [438, "returns"], [439, "returns"], [440, "returns"], [442, "returns"], [443, "returns"], [444, "returns"], [445, "returns"], [446, "returns"], [447, "returns"], [448, "returns"], [450, "returns"], [451, "returns"], [452, "returns"], [453, "returns"], [454, "returns"], [455, "returns"], [456, "returns"]], "SENet": [[85, "senet"], [130, null]], "SKNet": [[85, "sknet"], [140, null]], "Schedulers": [[358, null]], "See Also": [[359, "see-also"]], "Selective Kernel": [[267, null]], "Sparse Layers": [[307, null], [338, null]], "Squeeze-and-Excitation": [[267, null]], "Summary Table": [[155, "summary-table"]], "Swin Transformer": [[163, "swin-transformer"]], "SwinTransformer": [[178, null]], "SwinTransformer_V2": [[179, null]], "Switching Between Devices": [[15, "switching-between-devices"]], "Tensor Generating Functions": [[407, null]], "Tensor Operations": [[407, null]], "Tensor Utilites": [[441, null]], "Tensor: The Core Abstraction": [[15, "tensor-the-core-abstraction"]], "Training & Evaluation": [[15, "training-evaluation"]], "Transformer": [[156, null], [163, "transformer"]], "Transformer Layers": [[307, null], [344, null]], "Transformers": [[163, null]], "Unary Functions": [[407, null]], "Usage": [[4, "usage"], [69, "usage"], [70, "usage"], [71, "usage"], [72, "usage"], [196, "usage"], [258, "usage"], [349, "usage"], [373, "usage"], [374, "usage"], [375, "usage"], [443, "usage"], [457, "usage"], [458, "usage"], [468, "usage"]], "Usage Example": [[98, "usage-example"], [99, "usage-example"], [100, "usage-example"], [101, "usage-example"], [102, "usage-example"], [289, "usage-example"], [339, "usage-example"], [340, "usage-example"], [341, "usage-example"], [342, "usage-example"], [343, "usage-example"], [350, "usage-example"], [351, "usage-example"], [352, "usage-example"], [353, "usage-example"], [354, "usage-example"], [355, "usage-example"], [356, "usage-example"], [357, "usage-example"]], "Usage Examples": [[372, "usage-examples"]], "Use another Tensor as input": [[435, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using free tensors": [[385, null]], "Using the ASGD Optimizer": [[360, null]], "Using the Adadelta Optimizer": [[361, null]], "Using the Adagrad Optimizer": [[362, null]], "Using the Adam Optimizer": [[363, null]], "Using the AdamW Optimizer": [[364, null]], "Using the Adamax Optimizer": [[365, null]], "Using the NAdam Optimizer": [[366, null]], "Using the RAdam Optimizer": [[367, null]], "Using the RMSprop Optimizer": [[368, null]], "Using the Rprop Optimizer": [[369, null]], "Using the SGD Optimizer": [[370, null]], "Utility Functions": [[229, null], [256, null]], "VGGNet": [[85, "vggnet"], [145, null]], "Verification": [[15, "verification"]], "ViT": [[190, null]], "Vision Layers": [[307, null], [346, null]], "Visual Transformer (ViT)": [[163, "visual-transformer-vit"]], "Weight Initializations": [[269, null]], "Xception": [[85, "xception"], [150, null]], "ZFNet": [[85, "zfnet"], [152, null]], "alexnet": [[29, null]], "coatnet_0": [[31, null]], "coatnet_1": [[32, null]], "coatnet_2": [[33, null]], "coatnet_3": [[34, null]], "coatnet_4": [[35, null]], "coatnet_5": [[36, null]], "coatnet_6": [[37, null]], "coatnet_7": [[38, null]], "convnext_base": [[41, null]], "convnext_large": [[42, null]], "convnext_small": [[43, null]], "convnext_tiny": [[44, null]], "convnext_v2_atto": [[45, null]], "convnext_v2_base": [[46, null]], "convnext_v2_femto": [[47, null]], "convnext_v2_huge": [[48, null]], "convnext_v2_large": [[49, null]], "convnext_v2_nano": [[50, null]], "convnext_v2_pico": [[51, null]], "convnext_v2_tiny": [[52, null]], "convnext_xlarge": [[53, null]], "cvt_13": [[160, null]], "cvt_21": [[161, null]], "cvt_w24": [[162, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "densenet_121": [[55, null]], "densenet_169": [[56, null]], "densenet_201": [[57, null]], "densenet_264": [[58, null]], "efficientnet_b0": [[61, null]], "efficientnet_b1": [[62, null]], "efficientnet_b2": [[63, null]], "efficientnet_b3": [[64, null]], "efficientnet_b4": [[65, null]], "efficientnet_b5": [[66, null]], "efficientnet_b6": [[67, null]], "efficientnet_b7": [[68, null]], "efficientnet_v2_l": [[69, null]], "efficientnet_v2_m": [[70, null]], "efficientnet_v2_s": [[71, null]], "efficientnet_v2_xl": [[72, null]], "inception_next_atto": [[78, null]], "inception_next_base": [[79, null]], "inception_next_small": [[80, null]], "inception_next_tiny": [[81, null]], "inception_resnet_v1": [[83, null]], "inception_resnet_v2": [[84, null]], "inception_v1": [[74, null]], "inception_v3": [[75, null]], "inception_v4": [[76, null]], "lenet_1": [[87, null]], "lenet_4": [[88, null]], "lenet_5": [[89, null]], "lr_scheduler.CosineAnnealingLR": [[350, null]], "lr_scheduler.CyclicLR": [[351, null]], "lr_scheduler.ExponentialLR": [[352, null]], "lr_scheduler.LRScheduler": [[353, null]], "lr_scheduler.LambdaLR": [[354, null]], "lr_scheduler.MultiStepLR": [[355, null]], "lr_scheduler.ReduceLROnPlateau": [[356, null]], "lr_scheduler.StepLR": [[357, null]], "lucid.Numeric": [[372, null]], "lucid.Tensor": [[385, null]], "lucid.abs": [[408, null]], "lucid.add": [[386, null]], "lucid.arange": [[397, null]], "lucid.arccos": [[409, null]], "lucid.arcsin": [[410, null]], "lucid.arctan": [[411, null]], "lucid.broadcast_to": [[436, null]], "lucid.chunk": [[437, null]], "lucid.clip": [[412, null]], "lucid.concatenate": [[438, null]], "lucid.cos": [[413, null]], "lucid.cosh": [[414, null]], "lucid.cube": [[415, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[398, null]], "lucid.div": [[387, null]], "lucid.dot": [[388, null]], "lucid.einops": [[10, null]], "lucid.einops.rearrange": [[12, null]], "lucid.einops.reduce": [[13, null]], "lucid.einops.repeat": [[14, null]], "lucid.empty": [[399, null]], "lucid.empty_like": [[400, null]], "lucid.exp": [[416, null]], "lucid.eye": [[401, null]], "lucid.flatten": [[439, null]], "lucid.grad_enabled": [[373, null]], "lucid.hstack": [[440, null]], "lucid.inner": [[389, null]], "lucid.linalg": [[16, null]], "lucid.linalg.cholesky": [[17, null]], "lucid.linalg.det": [[18, null]], "lucid.linalg.eig": [[19, null]], "lucid.linalg.inv": [[21, null]], "lucid.linalg.matrix_power": [[22, null]], "lucid.linalg.norm": [[23, null]], "lucid.linalg.pinv": [[24, null]], "lucid.linalg.qr": [[25, null]], "lucid.linalg.solve": [[26, null]], "lucid.linalg.svd": [[27, null]], "lucid.linspace": [[402, null]], "lucid.log": [[417, null]], "lucid.log2": [[418, null]], "lucid.masked_fill": [[442, null]], "lucid.matmul": [[390, null]], "lucid.max": [[419, null]], "lucid.maximum": [[391, null]], "lucid.mean": [[420, null]], "lucid.meshgrid": [[443, null]], "lucid.min": [[421, null]], "lucid.minimum": [[392, null]], "lucid.models": [[154, null]], "lucid.multiply": [[393, null]], "lucid.newaxis": [[374, null]], "lucid.nn": [[347, null]], "lucid.nn.functional": [[229, null]], "lucid.no_grad": [[375, null]], "lucid.ones": [[403, null]], "lucid.ones_like": [[404, null]], "lucid.optim": [[359, null]], "lucid.outer": [[394, null]], "lucid.pad": [[444, null]], "lucid.power": [[395, null]], "lucid.random": [[384, null]], "lucid.random.bernoulli": [[377, null]], "lucid.random.rand": [[379, null]], "lucid.random.randint": [[380, null]], "lucid.random.randn": [[381, null]], "lucid.random.seed": [[382, null]], "lucid.random.uniform": [[383, null]], "lucid.ravel": [[445, null]], "lucid.reciprocal": [[422, null]], "lucid.register_model": [[376, null]], "lucid.repeat": [[446, null]], "lucid.reshape": [[447, null]], "lucid.roll": [[448, null]], "lucid.sign": [[423, null]], "lucid.sin": [[424, null]], "lucid.sinh": [[425, null]], "lucid.split": [[449, null]], "lucid.sqrt": [[426, null]], "lucid.square": [[427, null]], "lucid.squeeze": [[450, null]], "lucid.stack": [[451, null]], "lucid.sub": [[396, null]], "lucid.sum": [[428, null]], "lucid.swapaxes": [[429, null]], "lucid.tan": [[430, null]], "lucid.tanh": [[431, null]], "lucid.tensor": [[435, null]], "lucid.tile": [[452, null]], "lucid.trace": [[432, null]], "lucid.transforms": [[468, null]], "lucid.transpose": [[433, null]], "lucid.tril": [[453, null]], "lucid.triu": [[454, null]], "lucid.unsqueeze": [[455, null]], "lucid.var": [[434, null]], "lucid.vstack": [[456, null]], "lucid.zeros": [[405, null]], "lucid.zeros_like": [[406, null]], "mobilenet": [[94, null]], "mobilenet_v2": [[95, null]], "mobilenet_v3_large": [[96, null]], "mobilenet_v3_small": [[97, null]], "mobilenet_v4_conv_large": [[98, null]], "mobilenet_v4_conv_medium": [[99, null]], "mobilenet_v4_conv_small": [[100, null]], "mobilenet_v4_hybrid_large": [[101, null]], "mobilenet_v4_hybrid_medium": [[102, null]], "models.summarize": [[155, null]], "nn.AdaptiveAvgPool1d": [[327, null]], "nn.AdaptiveAvgPool2d": [[328, null]], "nn.AdaptiveAvgPool3d": [[329, null]], "nn.AlphaDropout": [[297, null]], "nn.AvgPool1d": [[330, null]], "nn.AvgPool2d": [[331, null]], "nn.AvgPool3d": [[332, null]], "nn.BCELoss": [[312, null]], "nn.BatchNorm1d": [[318, null]], "nn.BatchNorm2d": [[319, null]], "nn.BatchNorm3d": [[320, null]], "nn.Bilinear": [[308, null]], "nn.Buffer": [[196, null]], "nn.Conv1d": [[292, null]], "nn.Conv2d": [[293, null]], "nn.Conv3d": [[294, null]], "nn.ConvBNReLU1d": [[259, null]], "nn.ConvBNReLU2d": [[260, null]], "nn.ConvBNReLU3d": [[261, null]], "nn.CrossEntropyLoss": [[313, null]], "nn.DepthSeparableConv1d": [[262, null]], "nn.DepthSeparableConv2d": [[263, null]], "nn.DepthSeparableConv3d": [[264, null]], "nn.DropBlock": [[298, null]], "nn.DropPath": [[299, null]], "nn.Dropout": [[300, null]], "nn.Dropout1d": [[301, null]], "nn.Dropout2d": [[302, null]], "nn.Dropout3d": [[303, null]], "nn.ELU": [[276, null]], "nn.Embedding": [[337, null]], "nn.GELU": [[277, null]], "nn.GlobalResponseNorm": [[321, null]], "nn.HardSigmoid": [[278, null]], "nn.HardSwish": [[279, null]], "nn.HuberLoss": [[314, null]], "nn.Identity": [[309, null]], "nn.InstanceNorm1d": [[322, null]], "nn.InstanceNorm2d": [[323, null]], "nn.InstanceNorm3d": [[324, null]], "nn.LayerNorm": [[325, null]], "nn.LeakyReLU": [[280, null]], "nn.Linear": [[310, null]], "nn.MSELoss": [[315, null]], "nn.MaxPool1d": [[333, null]], "nn.MaxPool2d": [[334, null]], "nn.MaxPool3d": [[335, null]], "nn.Module": [[197, null]], "nn.ModuleDict": [[199, null]], "nn.ModuleList": [[200, null]], "nn.MultiHeadAttention": [[289, null]], "nn.NLLLoss": [[316, null]], "nn.Parameter": [[198, null]], "nn.ParameterDict": [[201, null]], "nn.ParameterList": [[202, null]], "nn.ReLU": [[281, null]], "nn.ReLU6": [[282, null]], "nn.Rearrange": [[305, null]], "nn.SELU": [[283, null]], "nn.SEModule": [[265, null]], "nn.ScaledDotProductAttention": [[290, null]], "nn.SelectiveKernel": [[266, null]], "nn.Sequential": [[203, null]], "nn.Sigmoid": [[284, null]], "nn.Softmax": [[285, null]], "nn.Swish": [[286, null]], "nn.Tanh": [[287, null]], "nn.Transformer": [[339, null]], "nn.TransformerDecoder": [[340, null]], "nn.TransformerDecoderLayer": [[341, null]], "nn.TransformerEncoder": [[342, null]], "nn.TransformerEncoderLayer": [[343, null]], "nn.Unfold": [[295, null]], "nn.Upsample": [[345, null]], "nn.functional.adaptive_avg_pool1d": [[245, null]], "nn.functional.adaptive_avg_pool2d": [[246, null]], "nn.functional.adaptive_avg_pool3d": [[247, null]], "nn.functional.alpha_dropout": [[221, null]], "nn.functional.avg_pool1d": [[248, null]], "nn.functional.avg_pool2d": [[249, null]], "nn.functional.avg_pool3d": [[250, null]], "nn.functional.batch_norm": [[239, null]], "nn.functional.bilinear": [[230, null]], "nn.functional.binary_cross_entropy": [[233, null]], "nn.functional.conv1d": [[216, null]], "nn.functional.conv2d": [[217, null]], "nn.functional.conv3d": [[218, null]], "nn.functional.cross_entropy": [[234, null]], "nn.functional.drop_block": [[222, null]], "nn.functional.drop_path": [[223, null]], "nn.functional.dropout": [[224, null]], "nn.functional.dropout1d": [[225, null]], "nn.functional.dropout2d": [[226, null]], "nn.functional.dropout3d": [[227, null]], "nn.functional.elu": [[205, null]], "nn.functional.embedding": [[255, null]], "nn.functional.gelu": [[206, null]], "nn.functional.global_response_norm": [[240, null]], "nn.functional.huber_loss": [[235, null]], "nn.functional.instance_norm": [[242, null]], "nn.functional.interpolate": [[257, null]], "nn.functional.layer_norm": [[243, null]], "nn.functional.leaky_relu": [[208, null]], "nn.functional.linear": [[232, null]], "nn.functional.max_pool1d": [[252, null]], "nn.functional.max_pool2d": [[253, null]], "nn.functional.max_pool3d": [[254, null]], "nn.functional.mse_loss": [[237, null]], "nn.functional.nll_loss": [[238, null]], "nn.functional.normalize": [[244, null]], "nn.functional.relu": [[209, null]], "nn.functional.rotate": [[258, null]], "nn.functional.scaled_dot_product_attention": [[215, null]], "nn.functional.selu": [[210, null]], "nn.functional.sigmoid": [[211, null]], "nn.functional.softmax": [[212, null]], "nn.functional.tanh": [[213, null]], "nn.functional.unfold": [[220, null]], "nn.init.constant": [[268, null]], "nn.init.kaiming_normal": [[270, null]], "nn.init.kaiming_uniform": [[271, null]], "nn.init.normal": [[272, null]], "nn.init.uniform": [[273, null]], "nn.init.xavier_normal": [[274, null]], "nn.init.xavier_uniform": [[275, null]], "optim.ASGD": [[360, null]], "optim.Adadelta": [[361, null]], "optim.Adagrad": [[362, null]], "optim.Adam": [[363, null]], "optim.AdamW": [[364, null]], "optim.Adamax": [[365, null]], "optim.NAdam": [[366, null]], "optim.Optimizer": [[348, null]], "optim.RAdam": [[367, null]], "optim.RMSprop": [[368, null]], "optim.Rprop": [[369, null]], "optim.SGD": [[370, null]], "optim.lr_scheduler": [[349, null]], "pvt_huge": [[166, null]], "pvt_large": [[167, null]], "pvt_medium": [[168, null]], "pvt_small": [[169, null]], "pvt_tiny": [[170, null]], "pvt_v2_b0": [[171, null]], "pvt_v2_b1": [[172, null]], "pvt_v2_b2": [[173, null]], "pvt_v2_b2_li": [[174, null]], "pvt_v2_b3": [[175, null]], "pvt_v2_b4": [[176, null]], "pvt_v2_b5": [[177, null]], "rearrange": [[10, "rearrange"]], "reduce": [[10, "reduce"]], "repeat": [[10, "repeat"]], "resnest_101": [[104, null]], "resnest_14": [[105, null]], "resnest_200": [[106, null]], "resnest_26": [[107, null]], "resnest_269": [[108, null]], "resnest_50": [[109, null]], "resnest_50_1s4x24d": [[110, null]], "resnest_50_4s2x40d": [[111, null]], "resnet_1001": [[113, null]], "resnet_101": [[114, null]], "resnet_152": [[115, null]], "resnet_18": [[116, null]], "resnet_200": [[117, null]], "resnet_269": [[118, null]], "resnet_34": [[119, null]], "resnet_50": [[120, null]], "resnext_101_32x16d": [[124, null]], "resnext_101_32x32d": [[125, null]], "resnext_101_32x4d": [[126, null]], "resnext_101_32x8d": [[127, null]], "resnext_101_64x4d": [[128, null]], "resnext_50_32x4d": [[129, null]], "se_resnet_101": [[131, null]], "se_resnet_152": [[132, null]], "se_resnet_18": [[133, null]], "se_resnet_34": [[134, null]], "se_resnet_50": [[135, null]], "se_resnext_101_32x4d": [[136, null]], "se_resnext_101_32x8d": [[137, null]], "se_resnext_101_64x4d": [[138, null]], "se_resnext_50_32x4d": [[139, null]], "sk_resnet_18": [[141, null]], "sk_resnet_34": [[142, null]], "sk_resnet_50": [[143, null]], "sk_resnext_50_32x4d": [[144, null]], "swin_base": [[180, null]], "swin_large": [[181, null]], "swin_small": [[182, null]], "swin_tiny": [[183, null]], "swin_v2_base": [[184, null]], "swin_v2_giant": [[185, null]], "swin_v2_huge": [[186, null]], "swin_v2_large": [[187, null]], "swin_v2_small": [[188, null]], "swin_v2_tiny": [[189, null]], "transformer_base": [[157, null]], "transformer_big": [[158, null]], "transforms.CenterCrop": [[459, null]], "transforms.Compose": [[457, null]], "transforms.Normalize": [[460, null]], "transforms.RandomCrop": [[461, null]], "transforms.RandomGrayscale": [[462, null]], "transforms.RandomHorizontalFlip": [[463, null]], "transforms.RandomRotation": [[464, null]], "transforms.RandomVerticalFlip": [[465, null]], "transforms.Resize": [[466, null]], "transforms.ToTensor": [[458, null]], "vggnet_11": [[146, null]], "vggnet_13": [[147, null]], "vggnet_16": [[148, null]], "vggnet_19": [[149, null]], "vit_base": [[191, null]], "vit_huge": [[192, null]], "vit_large": [[193, null]], "vit_small": [[194, null]], "vit_tiny": [[195, null]], "wide_resnet_101": [[121, null]], "wide_resnet_50": [[122, null]], "xception": [[151, null]], "zfnet": [[153, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/CIFAR10", "datasets/image/CIFAR100", "datasets/image/FashionMNIST", "datasets/image/MNIST", "datasets/image/index", "einops/einops", "einops/functions/index", "einops/functions/rearrange", "einops/functions/reduce", "einops/functions/repeat", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/conv/alex/AlexNet_", "models/conv/alex/alexnet", "models/conv/coatnet/CoAtNet", "models/conv/coatnet/coatnet_0", "models/conv/coatnet/coatnet_1", "models/conv/coatnet/coatnet_2", "models/conv/coatnet/coatnet_3", "models/conv/coatnet/coatnet_4", "models/conv/coatnet/coatnet_5", "models/conv/coatnet/coatnet_6", "models/conv/coatnet/coatnet_7", "models/conv/convnext/ConvNeXt", "models/conv/convnext/ConvNeXt_V2", "models/conv/convnext/convnext_base", "models/conv/convnext/convnext_large", "models/conv/convnext/convnext_small", "models/conv/convnext/convnext_tiny", "models/conv/convnext/convnext_v2_atto", "models/conv/convnext/convnext_v2_base", "models/conv/convnext/convnext_v2_femto", "models/conv/convnext/convnext_v2_huge", "models/conv/convnext/convnext_v2_large", "models/conv/convnext/convnext_v2_nano", "models/conv/convnext/convnext_v2_pico", "models/conv/convnext/convnext_v2_tiny", "models/conv/convnext/convnext_xlarge", "models/conv/dense/DenseNet", "models/conv/dense/densenet_121", "models/conv/dense/densenet_169", "models/conv/dense/densenet_201", "models/conv/dense/densenet_264", "models/conv/efficient/EfficientNet", "models/conv/efficient/EfficientNet_V2", "models/conv/efficient/efficientnet_b0", "models/conv/efficient/efficientnet_b1", "models/conv/efficient/efficientnet_b2", "models/conv/efficient/efficientnet_b3", "models/conv/efficient/efficientnet_b4", "models/conv/efficient/efficientnet_b5", "models/conv/efficient/efficientnet_b6", "models/conv/efficient/efficientnet_b7", "models/conv/efficient/efficientnet_v2_l", "models/conv/efficient/efficientnet_v2_m", "models/conv/efficient/efficientnet_v2_s", "models/conv/efficient/efficientnet_v2_xl", "models/conv/inception/Inception", "models/conv/inception/inception_v1", "models/conv/inception/inception_v3", "models/conv/inception/inception_v4", "models/conv/inception_next/InceptionNeXt", "models/conv/inception_next/inception_next_atto", "models/conv/inception_next/inception_next_base", "models/conv/inception_next/inception_next_small", "models/conv/inception_next/inception_next_tiny", "models/conv/inception_res/InceptionResNet", "models/conv/inception_res/inception_resnet_v1", "models/conv/inception_res/inception_resnet_v2", "models/conv/index", "models/conv/lenet/LeNet", "models/conv/lenet/lenet_1", "models/conv/lenet/lenet_4", "models/conv/lenet/lenet_5", "models/conv/mobile/MobileNet_", "models/conv/mobile/MobileNet_V2_", "models/conv/mobile/MobileNet_V3", "models/conv/mobile/MobileNet_V4", "models/conv/mobile/mobilenet", "models/conv/mobile/mobilenet_v2", "models/conv/mobile/mobilenet_v3_large", "models/conv/mobile/mobilenet_v3_small", "models/conv/mobile/mobilenet_v4_conv_large", "models/conv/mobile/mobilenet_v4_conv_medium", "models/conv/mobile/mobilenet_v4_conv_small", "models/conv/mobile/mobilenet_v4_hybrid_large", "models/conv/mobile/mobilenet_v4_hybrid_medium", "models/conv/resnest/ResNeSt", "models/conv/resnest/resnest_101", "models/conv/resnest/resnest_14", "models/conv/resnest/resnest_200", "models/conv/resnest/resnest_26", "models/conv/resnest/resnest_269", "models/conv/resnest/resnest_50", "models/conv/resnest/resnest_50_1s4x24d", "models/conv/resnest/resnest_50_4s2x40d", "models/conv/resnet/ResNet", "models/conv/resnet/resnet_1001", "models/conv/resnet/resnet_101", "models/conv/resnet/resnet_152", "models/conv/resnet/resnet_18", "models/conv/resnet/resnet_200", "models/conv/resnet/resnet_269", "models/conv/resnet/resnet_34", "models/conv/resnet/resnet_50", "models/conv/resnet/wide_resnet_101", "models/conv/resnet/wide_resnet_50", "models/conv/resnext/ResNeXt", "models/conv/resnext/resnext_101_32x16d", "models/conv/resnext/resnext_101_32x32d", "models/conv/resnext/resnext_101_32x4d", "models/conv/resnext/resnext_101_32x8d", "models/conv/resnext/resnext_101_64x4d", "models/conv/resnext/resnext_50_32x4d", "models/conv/senet/SENet", "models/conv/senet/se_resnet_101", "models/conv/senet/se_resnet_152", "models/conv/senet/se_resnet_18", "models/conv/senet/se_resnet_34", "models/conv/senet/se_resnet_50", "models/conv/senet/se_resnext_101_32x4d", "models/conv/senet/se_resnext_101_32x8d", "models/conv/senet/se_resnext_101_64x4d", "models/conv/senet/se_resnext_50_32x4d", "models/conv/sknet/SKNet", "models/conv/sknet/sk_resnet_18", "models/conv/sknet/sk_resnet_34", "models/conv/sknet/sk_resnet_50", "models/conv/sknet/sk_resnext_50_32x4d", "models/conv/vgg/VGGNet", "models/conv/vgg/vggnet_11", "models/conv/vgg/vggnet_13", "models/conv/vgg/vggnet_16", "models/conv/vgg/vggnet_19", "models/conv/xception/Xception_", "models/conv/xception/xception", "models/conv/zfnet/ZFNet_", "models/conv/zfnet/zfnet", "models/models", "models/summarize", "models/transformer/base/Transformer", "models/transformer/base/transformer_base", "models/transformer/base/transformer_big", "models/transformer/cvt/CvT", "models/transformer/cvt/cvt_13", "models/transformer/cvt/cvt_21", "models/transformer/cvt/cvt_w24", "models/transformer/index", "models/transformer/pvt/PVT", "models/transformer/pvt/PVT_V2", "models/transformer/pvt/pvt_huge", "models/transformer/pvt/pvt_large", "models/transformer/pvt/pvt_medium", "models/transformer/pvt/pvt_small", "models/transformer/pvt/pvt_tiny", "models/transformer/pvt/pvt_v2_b0", "models/transformer/pvt/pvt_v2_b1", "models/transformer/pvt/pvt_v2_b2", "models/transformer/pvt/pvt_v2_b2_li", "models/transformer/pvt/pvt_v2_b3", "models/transformer/pvt/pvt_v2_b4", "models/transformer/pvt/pvt_v2_b5", "models/transformer/swin/SwinTransformer", "models/transformer/swin/SwinTransformer_V2", "models/transformer/swin/swin_base", "models/transformer/swin/swin_large", "models/transformer/swin/swin_small", "models/transformer/swin/swin_tiny", "models/transformer/swin/swin_v2_base", "models/transformer/swin/swin_v2_giant", "models/transformer/swin/swin_v2_huge", "models/transformer/swin/swin_v2_large", "models/transformer/swin/swin_v2_small", "models/transformer/swin/swin_v2_tiny", "models/transformer/vit/ViT", "models/transformer/vit/vit_base", "models/transformer/vit/vit_huge", "models/transformer/vit/vit_large", "models/transformer/vit/vit_small", "models/transformer/vit/vit_tiny", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/attention/index", "nn/functions/attention/scaled_dot_product_attention", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/drop_block", "nn/functions/drop/drop_path", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/global_response_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/norm/normalize", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/util/embedding", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/fused/ConvBNReLU1d", "nn/fused/ConvBNReLU2d", "nn/fused/ConvBNReLU3d", "nn/fused/DepthSeparableConv1d", "nn/fused/DepthSeparableConv2d", "nn/fused/DepthSeparableConv3d", "nn/fused/SEModule", "nn/fused/SelectiveKernel", "nn/fused/index", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/HardSigmoid", "nn/modules/activation/HardSwish", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/ReLU6", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Swish", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/attention/MultiHeadAttention", "nn/modules/attention/ScaledDotProductAttention", "nn/modules/attention/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/Unfold", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/DropBlock", "nn/modules/drop/DropPath", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/einops/Rearrange", "nn/modules/einops/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/GlobalResponseNorm", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/modules/sparse/Embedding", "nn/modules/sparse/index", "nn/modules/transformer/Transformer", "nn/modules/transformer/TransformerDecoder", "nn/modules/transformer/TransformerDecoderLayer", "nn/modules/transformer/TransformerEncoder", "nn/modules/transformer/TransformerEncoderLayer", "nn/modules/transformer/index", "nn/modules/vision/Upsample", "nn/modules/vision/index", "nn/nn", "optim/Optimizer", "optim/lr_scheduler", "optim/lr_scheduler/CosineAnnealingLR", "optim/lr_scheduler/CyclicLR", "optim/lr_scheduler/ExponentialLR", "optim/lr_scheduler/LRScheduler", "optim/lr_scheduler/LambdaLR", "optim/lr_scheduler/MultiStepLR", "optim/lr_scheduler/ReduceLROnPlateau", "optim/lr_scheduler/StepLR", "optim/lr_scheduler/index", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/Numeric", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "random/functions/bernoulli", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/multiply", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/linspace", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/log2", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/swapaxes", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/broadcast_to", "tensor/utilities/chunk", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/masked_fill", "tensor/utilities/meshgrid", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/roll", "tensor/utilities/split", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/tril", "tensor/utilities/triu", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/CIFAR10.rst", "datasets/image/CIFAR100.rst", "datasets/image/FashionMNIST.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "einops/einops.rst", "einops/functions/index.rst", "einops/functions/rearrange.rst", "einops/functions/reduce.rst", "einops/functions/repeat.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/conv/alex/AlexNet_.rst", "models/conv/alex/alexnet.rst", "models/conv/coatnet/CoAtNet.rst", "models/conv/coatnet/coatnet_0.rst", "models/conv/coatnet/coatnet_1.rst", "models/conv/coatnet/coatnet_2.rst", "models/conv/coatnet/coatnet_3.rst", "models/conv/coatnet/coatnet_4.rst", "models/conv/coatnet/coatnet_5.rst", "models/conv/coatnet/coatnet_6.rst", "models/conv/coatnet/coatnet_7.rst", "models/conv/convnext/ConvNeXt.rst", "models/conv/convnext/ConvNeXt_V2.rst", "models/conv/convnext/convnext_base.rst", "models/conv/convnext/convnext_large.rst", "models/conv/convnext/convnext_small.rst", "models/conv/convnext/convnext_tiny.rst", "models/conv/convnext/convnext_v2_atto.rst", "models/conv/convnext/convnext_v2_base.rst", "models/conv/convnext/convnext_v2_femto.rst", "models/conv/convnext/convnext_v2_huge.rst", "models/conv/convnext/convnext_v2_large.rst", "models/conv/convnext/convnext_v2_nano.rst", "models/conv/convnext/convnext_v2_pico.rst", "models/conv/convnext/convnext_v2_tiny.rst", "models/conv/convnext/convnext_xlarge.rst", "models/conv/dense/DenseNet.rst", "models/conv/dense/densenet_121.rst", "models/conv/dense/densenet_169.rst", "models/conv/dense/densenet_201.rst", "models/conv/dense/densenet_264.rst", "models/conv/efficient/EfficientNet.rst", "models/conv/efficient/EfficientNet_V2.rst", "models/conv/efficient/efficientnet_b0.rst", "models/conv/efficient/efficientnet_b1.rst", "models/conv/efficient/efficientnet_b2.rst", "models/conv/efficient/efficientnet_b3.rst", "models/conv/efficient/efficientnet_b4.rst", "models/conv/efficient/efficientnet_b5.rst", "models/conv/efficient/efficientnet_b6.rst", "models/conv/efficient/efficientnet_b7.rst", "models/conv/efficient/efficientnet_v2_l.rst", "models/conv/efficient/efficientnet_v2_m.rst", "models/conv/efficient/efficientnet_v2_s.rst", "models/conv/efficient/efficientnet_v2_xl.rst", "models/conv/inception/Inception.rst", "models/conv/inception/inception_v1.rst", "models/conv/inception/inception_v3.rst", "models/conv/inception/inception_v4.rst", "models/conv/inception_next/InceptionNeXt.rst", "models/conv/inception_next/inception_next_atto.rst", "models/conv/inception_next/inception_next_base.rst", "models/conv/inception_next/inception_next_small.rst", "models/conv/inception_next/inception_next_tiny.rst", "models/conv/inception_res/InceptionResNet.rst", "models/conv/inception_res/inception_resnet_v1.rst", "models/conv/inception_res/inception_resnet_v2.rst", "models/conv/index.rst", "models/conv/lenet/LeNet.rst", "models/conv/lenet/lenet_1.rst", "models/conv/lenet/lenet_4.rst", "models/conv/lenet/lenet_5.rst", "models/conv/mobile/MobileNet_.rst", "models/conv/mobile/MobileNet_V2_.rst", "models/conv/mobile/MobileNet_V3.rst", "models/conv/mobile/MobileNet_V4.rst", "models/conv/mobile/mobilenet.rst", "models/conv/mobile/mobilenet_v2.rst", "models/conv/mobile/mobilenet_v3_large.rst", "models/conv/mobile/mobilenet_v3_small.rst", "models/conv/mobile/mobilenet_v4_conv_large.rst", "models/conv/mobile/mobilenet_v4_conv_medium.rst", "models/conv/mobile/mobilenet_v4_conv_small.rst", "models/conv/mobile/mobilenet_v4_hybrid_large.rst", "models/conv/mobile/mobilenet_v4_hybrid_medium.rst", "models/conv/resnest/ResNeSt.rst", "models/conv/resnest/resnest_101.rst", "models/conv/resnest/resnest_14.rst", "models/conv/resnest/resnest_200.rst", "models/conv/resnest/resnest_26.rst", "models/conv/resnest/resnest_269.rst", "models/conv/resnest/resnest_50.rst", "models/conv/resnest/resnest_50_1s4x24d.rst", "models/conv/resnest/resnest_50_4s2x40d.rst", "models/conv/resnet/ResNet.rst", "models/conv/resnet/resnet_1001.rst", "models/conv/resnet/resnet_101.rst", "models/conv/resnet/resnet_152.rst", "models/conv/resnet/resnet_18.rst", "models/conv/resnet/resnet_200.rst", "models/conv/resnet/resnet_269.rst", "models/conv/resnet/resnet_34.rst", "models/conv/resnet/resnet_50.rst", "models/conv/resnet/wide_resnet_101.rst", "models/conv/resnet/wide_resnet_50.rst", "models/conv/resnext/ResNeXt.rst", "models/conv/resnext/resnext_101_32x16d.rst", "models/conv/resnext/resnext_101_32x32d.rst", "models/conv/resnext/resnext_101_32x4d.rst", "models/conv/resnext/resnext_101_32x8d.rst", "models/conv/resnext/resnext_101_64x4d.rst", "models/conv/resnext/resnext_50_32x4d.rst", "models/conv/senet/SENet.rst", "models/conv/senet/se_resnet_101.rst", "models/conv/senet/se_resnet_152.rst", "models/conv/senet/se_resnet_18.rst", "models/conv/senet/se_resnet_34.rst", "models/conv/senet/se_resnet_50.rst", "models/conv/senet/se_resnext_101_32x4d.rst", "models/conv/senet/se_resnext_101_32x8d.rst", "models/conv/senet/se_resnext_101_64x4d.rst", "models/conv/senet/se_resnext_50_32x4d.rst", "models/conv/sknet/SKNet.rst", "models/conv/sknet/sk_resnet_18.rst", "models/conv/sknet/sk_resnet_34.rst", "models/conv/sknet/sk_resnet_50.rst", "models/conv/sknet/sk_resnext_50_32x4d.rst", "models/conv/vgg/VGGNet.rst", "models/conv/vgg/vggnet_11.rst", "models/conv/vgg/vggnet_13.rst", "models/conv/vgg/vggnet_16.rst", "models/conv/vgg/vggnet_19.rst", "models/conv/xception/Xception_.rst", "models/conv/xception/xception.rst", "models/conv/zfnet/ZFNet_.rst", "models/conv/zfnet/zfnet.rst", "models/models.rst", "models/summarize.rst", "models/transformer/base/Transformer.rst", "models/transformer/base/transformer_base.rst", "models/transformer/base/transformer_big.rst", "models/transformer/cvt/CvT.rst", "models/transformer/cvt/cvt_13.rst", "models/transformer/cvt/cvt_21.rst", "models/transformer/cvt/cvt_w24.rst", "models/transformer/index.rst", "models/transformer/pvt/PVT.rst", "models/transformer/pvt/PVT_V2.rst", "models/transformer/pvt/pvt_huge.rst", "models/transformer/pvt/pvt_large.rst", "models/transformer/pvt/pvt_medium.rst", "models/transformer/pvt/pvt_small.rst", "models/transformer/pvt/pvt_tiny.rst", "models/transformer/pvt/pvt_v2_b0.rst", "models/transformer/pvt/pvt_v2_b1.rst", "models/transformer/pvt/pvt_v2_b2.rst", "models/transformer/pvt/pvt_v2_b2_li.rst", "models/transformer/pvt/pvt_v2_b3.rst", "models/transformer/pvt/pvt_v2_b4.rst", "models/transformer/pvt/pvt_v2_b5.rst", "models/transformer/swin/SwinTransformer.rst", "models/transformer/swin/SwinTransformer_V2.rst", "models/transformer/swin/swin_base.rst", "models/transformer/swin/swin_large.rst", "models/transformer/swin/swin_small.rst", "models/transformer/swin/swin_tiny.rst", "models/transformer/swin/swin_v2_base.rst", "models/transformer/swin/swin_v2_giant.rst", "models/transformer/swin/swin_v2_huge.rst", "models/transformer/swin/swin_v2_large.rst", "models/transformer/swin/swin_v2_small.rst", "models/transformer/swin/swin_v2_tiny.rst", "models/transformer/vit/ViT.rst", "models/transformer/vit/vit_base.rst", "models/transformer/vit/vit_huge.rst", "models/transformer/vit/vit_large.rst", "models/transformer/vit/vit_small.rst", "models/transformer/vit/vit_tiny.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/attention/index.rst", "nn/functions/attention/scaled_dot_product_attention.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/drop_block.rst", "nn/functions/drop/drop_path.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/global_response_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/norm/normalize.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/util/embedding.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/fused/ConvBNReLU1d.rst", "nn/fused/ConvBNReLU2d.rst", "nn/fused/ConvBNReLU3d.rst", "nn/fused/DepthSeparableConv1d.rst", "nn/fused/DepthSeparableConv2d.rst", "nn/fused/DepthSeparableConv3d.rst", "nn/fused/SEModule.rst", "nn/fused/SelectiveKernel.rst", "nn/fused/index.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/HardSigmoid.rst", "nn/modules/activation/HardSwish.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/ReLU6.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Swish.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/attention/MultiHeadAttention.rst", "nn/modules/attention/ScaledDotProductAttention.rst", "nn/modules/attention/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/Unfold.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/DropBlock.rst", "nn/modules/drop/DropPath.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/einops/Rearrange.rst", "nn/modules/einops/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/GlobalResponseNorm.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/modules/sparse/Embedding.rst", "nn/modules/sparse/index.rst", "nn/modules/transformer/Transformer.rst", "nn/modules/transformer/TransformerDecoder.rst", "nn/modules/transformer/TransformerDecoderLayer.rst", "nn/modules/transformer/TransformerEncoder.rst", "nn/modules/transformer/TransformerEncoderLayer.rst", "nn/modules/transformer/index.rst", "nn/modules/vision/Upsample.rst", "nn/modules/vision/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/lr_scheduler.rst", "optim/lr_scheduler/CosineAnnealingLR.rst", "optim/lr_scheduler/CyclicLR.rst", "optim/lr_scheduler/ExponentialLR.rst", "optim/lr_scheduler/LRScheduler.rst", "optim/lr_scheduler/LambdaLR.rst", "optim/lr_scheduler/MultiStepLR.rst", "optim/lr_scheduler/ReduceLROnPlateau.rst", "optim/lr_scheduler/StepLR.rst", "optim/lr_scheduler/index.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/Numeric.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "random/functions/bernoulli.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/multiply.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/linspace.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/log2.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/swapaxes.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/broadcast_to.rst", "tensor/utilities/chunk.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/masked_fill.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/roll.rst", "tensor/utilities/split.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/tril.rst", "tensor/utilities/triu.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"abs() (in module lucid)": [[408, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[361, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[362, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[363, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[365, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[364, "lucid.optim.AdamW", false]], "adaptive_avg_pool1d() (in module lucid.nn.functional)": [[245, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[246, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[247, "lucid.nn.functional.adaptive_avg_pool3d", false]], "adaptiveavgpool1d (class in lucid.nn)": [[327, "lucid.nn.AdaptiveAvgPool1d", false]], "adaptiveavgpool2d (class in lucid.nn)": [[328, "lucid.nn.AdaptiveAvgPool2d", false]], "adaptiveavgpool3d (class in lucid.nn)": [[329, "lucid.nn.AdaptiveAvgPool3d", false]], "add() (in module lucid)": [[386, "lucid.add", false]], "alexnet (class in lucid.models)": [[28, "lucid.models.AlexNet", false]], "alexnet() (in module lucid.models)": [[29, "lucid.models.alexnet", false]], "alpha_dropout() (in module lucid.nn.functional)": [[221, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[297, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[397, "lucid.arange", false]], "arccos() (in module lucid)": [[409, "lucid.arccos", false]], "arcsin() (in module lucid)": [[410, "lucid.arcsin", false]], "arctan() (in module lucid)": [[411, "lucid.arctan", false]], "asgd (class in lucid.optim)": [[360, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[248, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[249, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[250, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[330, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[331, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[332, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[239, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[318, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[319, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[320, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[312, "lucid.nn.BCELoss", false]], "bernoulli() (in module lucid.random)": [[377, "lucid.random.bernoulli", false]], "bilinear (class in lucid.nn)": [[308, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[230, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[233, "lucid.nn.functional.binary_cross_entropy", false]], "broadcast_to() (in module lucid)": [[436, "lucid.broadcast_to", false]], "buffer (class in lucid.nn)": [[196, "lucid.nn.Buffer", false]], "centercrop (class in lucid.transforms)": [[459, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[17, "lucid.linalg.cholesky", false]], "chunk() (in module lucid)": [[437, "lucid.chunk", false]], "cifar10 (class in lucid.datasets)": [[5, "lucid.datasets.CIFAR10", false]], "cifar100 (class in lucid.datasets)": [[6, "lucid.datasets.CIFAR100", false]], "clip() (in module lucid)": [[412, "lucid.clip", false]], "coatnet (class in lucid.models)": [[30, "lucid.models.CoAtNet", false]], "coatnet_0() (in module lucid.models)": [[31, "lucid.models.coatnet_0", false]], "coatnet_1() (in module lucid.models)": [[32, "lucid.models.coatnet_1", false]], "coatnet_2() (in module lucid.models)": [[33, "lucid.models.coatnet_2", false]], "coatnet_3() (in module lucid.models)": [[34, "lucid.models.coatnet_3", false]], "coatnet_4() (in module lucid.models)": [[35, "lucid.models.coatnet_4", false]], "coatnet_5() (in module lucid.models)": [[36, "lucid.models.coatnet_5", false]], "coatnet_6() (in module lucid.models)": [[37, "lucid.models.coatnet_6", false]], "coatnet_7() (in module lucid.models)": [[38, "lucid.models.coatnet_7", false]], "compose (class in lucid.transforms)": [[457, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[438, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[268, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[292, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[216, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[293, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[217, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[294, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[218, "lucid.nn.functional.conv3d", false]], "convbnrelu1d (class in lucid.nn)": [[259, "lucid.nn.ConvBNReLU1d", false]], "convbnrelu2d (class in lucid.nn)": [[260, "lucid.nn.ConvBNReLU2d", false]], "convbnrelu3d (class in lucid.nn)": [[261, "lucid.nn.ConvBNReLU3d", false]], "convnext (class in lucid.models)": [[39, "lucid.models.ConvNeXt", false]], "convnext_base() (in module lucid.models)": [[41, "lucid.models.convnext_base", false]], "convnext_large() (in module lucid.models)": [[42, "lucid.models.convnext_large", false]], "convnext_small() (in module lucid.models)": [[43, "lucid.models.convnext_small", false]], "convnext_tiny() (in module lucid.models)": [[44, "lucid.models.convnext_tiny", false]], "convnext_v2 (class in lucid.models)": [[40, "lucid.models.ConvNeXt_V2", false]], "convnext_v2_atto() (in module lucid.models)": [[45, "lucid.models.convnext_v2_atto", false]], "convnext_v2_base() (in module lucid.models)": [[46, "lucid.models.convnext_v2_base", false]], "convnext_v2_femto() (in module lucid.models)": [[47, "lucid.models.convnext_v2_femto", false]], "convnext_v2_huge() (in module lucid.models)": [[48, "lucid.models.convnext_v2_huge", false]], "convnext_v2_large() (in module lucid.models)": [[49, "lucid.models.convnext_v2_large", false]], "convnext_v2_nano() (in module lucid.models)": [[50, "lucid.models.convnext_v2_nano", false]], "convnext_v2_pico() (in module lucid.models)": [[51, "lucid.models.convnext_v2_pico", false]], "convnext_v2_tiny() (in module lucid.models)": [[52, "lucid.models.convnext_v2_tiny", false]], "convnext_xlarge() (in module lucid.models)": [[53, "lucid.models.convnext_xlarge", false]], "cos() (in module lucid)": [[413, "lucid.cos", false]], "cosh() (in module lucid)": [[414, "lucid.cosh", false]], "cosineannealinglr (class in lucid.optim.lr_scheduler)": [[350, "lucid.optim.lr_scheduler.CosineAnnealingLR", false]], "cross_entropy() (in module lucid.nn.functional)": [[234, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[313, "lucid.nn.CrossEntropyLoss", false]], "cube() (in module lucid)": [[415, "lucid.cube", false]], "cvt (class in lucid.models)": [[159, "lucid.models.CvT", false]], "cvt_13() (in module lucid.models)": [[160, "lucid.models.cvt_13", false]], "cvt_21() (in module lucid.models)": [[161, "lucid.models.cvt_21", false]], "cvt_w24() (in module lucid.models)": [[162, "lucid.models.cvt_w24", false]], "cycliclr (class in lucid.optim.lr_scheduler)": [[351, "lucid.optim.lr_scheduler.CyclicLR", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "densenet (class in lucid.models)": [[54, "lucid.models.DenseNet", false]], "densenet_121() (in module lucid.models)": [[55, "lucid.models.densenet_121", false]], "densenet_169() (in module lucid.models)": [[56, "lucid.models.densenet_169", false]], "densenet_201() (in module lucid.models)": [[57, "lucid.models.densenet_201", false]], "densenet_264() (in module lucid.models)": [[58, "lucid.models.densenet_264", false]], "depthseparableconv1d (class in lucid.nn)": [[262, "lucid.nn.DepthSeparableConv1d", false]], "depthseparableconv2d (class in lucid.nn)": [[263, "lucid.nn.DepthSeparableConv2d", false]], "depthseparableconv3d (class in lucid.nn)": [[264, "lucid.nn.DepthSeparableConv3d", false]], "det() (in module lucid.linalg)": [[18, "lucid.linalg.det", false]], "diag() (in module lucid)": [[398, "lucid.diag", false]], "div() (in module lucid)": [[387, "lucid.div", false]], "dot() (in module lucid)": [[388, "lucid.dot", false]], "drop_block() (in module lucid.nn.functional)": [[222, "lucid.nn.functional.drop_block", false]], "drop_path() (in module lucid.nn.functional)": [[223, "lucid.nn.functional.drop_path", false]], "dropblock (class in lucid.nn)": [[298, "lucid.nn.DropBlock", false]], "dropout (class in lucid.nn)": [[300, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[224, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[301, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[225, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[302, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[226, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[303, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[227, "lucid.nn.functional.dropout3d", false]], "droppath (class in lucid.nn)": [[299, "lucid.nn.DropPath", false]], "efficientnet (class in lucid.models)": [[59, "lucid.models.EfficientNet", false]], "efficientnet_b0() (in module lucid.models)": [[61, "lucid.models.efficientnet_b0", false]], "efficientnet_b1() (in module lucid.models)": [[62, "lucid.models.efficientnet_b1", false]], "efficientnet_b2() (in module lucid.models)": [[63, "lucid.models.efficientnet_b2", false]], "efficientnet_b3() (in module lucid.models)": [[64, "lucid.models.efficientnet_b3", false]], "efficientnet_b4() (in module lucid.models)": [[65, "lucid.models.efficientnet_b4", false]], "efficientnet_b5() (in module lucid.models)": [[66, "lucid.models.efficientnet_b5", false]], "efficientnet_b6() (in module lucid.models)": [[67, "lucid.models.efficientnet_b6", false]], "efficientnet_b7() (in module lucid.models)": [[68, "lucid.models.efficientnet_b7", false]], "efficientnet_v2 (class in lucid.models)": [[60, "lucid.models.EfficientNet_V2", false]], "efficientnet_v2_l() (in module lucid.models)": [[69, "lucid.models.efficientnet_v2_l", false]], "efficientnet_v2_m() (in module lucid.models)": [[70, "lucid.models.efficientnet_v2_m", false]], "efficientnet_v2_s() (in module lucid.models)": [[71, "lucid.models.efficientnet_v2_s", false]], "efficientnet_v2_xl() (in module lucid.models)": [[72, "lucid.models.efficientnet_v2_xl", false]], "eig() (in module lucid.linalg)": [[19, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[276, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[205, "lucid.nn.functional.elu", false]], "embedding (class in lucid.nn)": [[337, "lucid.nn.Embedding", false]], "embedding() (in module lucid.nn.functional)": [[255, "lucid.nn.functional.embedding", false]], "empty() (in module lucid)": [[399, "lucid.empty", false]], "empty_like() (in module lucid)": [[400, "lucid.empty_like", false]], "exp() (in module lucid)": [[416, "lucid.exp", false]], "exponentiallr (class in lucid.optim.lr_scheduler)": [[352, "lucid.optim.lr_scheduler.ExponentialLR", false]], "eye() (in module lucid)": [[401, "lucid.eye", false]], "fashionmnist (class in lucid.datasets)": [[7, "lucid.datasets.FashionMNIST", false]], "flatten() (in module lucid)": [[439, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[277, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[206, "lucid.nn.functional.gelu", false]], "global_response_norm() (in module lucid.nn.functional)": [[240, "lucid.nn.functional.global_response_norm", false]], "globalresponsenorm (class in lucid.nn)": [[321, "lucid.nn.GlobalResponseNorm", false]], "grad_enabled() (in module lucid)": [[373, "lucid.grad_enabled", false]], "hardsigmoid (class in lucid.nn)": [[278, "lucid.nn.HardSigmoid", false]], "hardswish (class in lucid.nn)": [[279, "lucid.nn.HardSwish", false]], "hstack() (in module lucid)": [[440, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[235, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[314, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[309, "lucid.nn.Identity", false]], "inception (class in lucid.models)": [[73, "lucid.models.Inception", false]], "inception_next_atto() (in module lucid.models)": [[78, "lucid.models.inception_next_atto", false]], "inception_next_base() (in module lucid.models)": [[79, "lucid.models.inception_next_base", false]], "inception_next_small() (in module lucid.models)": [[80, "lucid.models.inception_next_small", false]], "inception_next_tiny() (in module lucid.models)": [[81, "lucid.models.inception_next_tiny", false]], "inception_resnet_v1() (in module lucid.models)": [[83, "lucid.models.inception_resnet_v1", false]], "inception_resnet_v2() (in module lucid.models)": [[84, "lucid.models.inception_resnet_v2", false]], "inception_v1() (in module lucid.models)": [[74, "lucid.models.inception_v1", false]], "inception_v3() (in module lucid.models)": [[75, "lucid.models.inception_v3", false]], "inception_v4() (in module lucid.models)": [[76, "lucid.models.inception_v4", false]], "inceptionnext (class in lucid.models)": [[77, "lucid.models.InceptionNeXt", false]], "inceptionresnet (class in lucid.models)": [[82, "lucid.models.InceptionResNet", false]], "inner() (in module lucid)": [[389, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[242, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[322, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[323, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[324, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[257, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[21, "lucid.linalg.inv", false]], "kaiming_normal() (in module lucid.nn.init)": [[270, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[271, "lucid.nn.init.kaiming_uniform", false]], "lambdalr (class in lucid.optim.lr_scheduler)": [[354, "lucid.optim.lr_scheduler.LambdaLR", false]], "layer_norm() (in module lucid.nn.functional)": [[243, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[325, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[208, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[280, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[86, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[87, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[88, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[89, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[310, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[232, "lucid.nn.functional.linear", false]], "linspace() (in module lucid)": [[402, "lucid.linspace", false]], "log() (in module lucid)": [[417, "lucid.log", false]], "log2() (in module lucid)": [[418, "lucid.log2", false]], "lrscheduler (class in lucid.optim.lr_scheduler)": [[353, "lucid.optim.lr_scheduler.LRScheduler", false]], "lucid": [[15, "module-lucid", false]], "masked_fill() (in module lucid)": [[442, "lucid.masked_fill", false]], "matmul() (in module lucid)": [[390, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[22, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[419, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[252, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[253, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[254, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[391, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[333, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[334, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[335, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[420, "lucid.mean", false]], "meshgrid() (in module lucid)": [[443, "lucid.meshgrid", false]], "min() (in module lucid)": [[421, "lucid.min", false]], "minimum() (in module lucid)": [[392, "lucid.minimum", false]], "mnist (class in lucid.datasets)": [[8, "lucid.datasets.MNIST", false]], "mobilenet (class in lucid.models)": [[90, "lucid.models.MobileNet", false]], "mobilenet() (in module lucid.models)": [[94, "lucid.models.mobilenet", false]], "mobilenet_v2 (class in lucid.models)": [[91, "lucid.models.MobileNet_V2", false]], "mobilenet_v2() (in module lucid.models)": [[95, "lucid.models.mobilenet_v2", false]], "mobilenet_v3 (class in lucid.models)": [[92, "lucid.models.MobileNet_V3", false]], "mobilenet_v3_large() (in module lucid.models)": [[96, "lucid.models.mobilenet_v3_large", false]], "mobilenet_v3_small() (in module lucid.models)": [[97, "lucid.models.mobilenet_v3_small", false]], "mobilenet_v4 (class in lucid.models)": [[93, "lucid.models.MobileNet_V4", false]], "mobilenet_v4_conv_large() (in module lucid.models)": [[98, "lucid.models.mobilenet_v4_conv_large", false]], "mobilenet_v4_conv_medium() (in module lucid.models)": [[99, "lucid.models.mobilenet_v4_conv_medium", false]], "mobilenet_v4_conv_small() (in module lucid.models)": [[100, "lucid.models.mobilenet_v4_conv_small", false]], "mobilenet_v4_hybrid_large() (in module lucid.models)": [[101, "lucid.models.mobilenet_v4_hybrid_large", false]], "mobilenet_v4_hybrid_medium() (in module lucid.models)": [[102, "lucid.models.mobilenet_v4_hybrid_medium", false]], "module": [[15, "module-lucid", false]], "module (class in lucid.nn)": [[197, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[199, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[200, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[237, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[315, "lucid.nn.MSELoss", false]], "multiheadattention (class in lucid.nn)": [[289, "lucid.nn.MultiHeadAttention", false]], "multiply() (in module lucid)": [[393, "lucid.multiply", false]], "multisteplr (class in lucid.optim.lr_scheduler)": [[355, "lucid.optim.lr_scheduler.MultiStepLR", false]], "nadam (class in lucid.optim)": [[366, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[238, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[316, "lucid.nn.NLLLoss", false]], "no_grad() (in module lucid)": [[375, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[23, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[272, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[460, "lucid.transforms.Normalize", false]], "normalize() (in module lucid.nn.functional)": [[244, "lucid.nn.functional.normalize", false]], "numeric (class in lucid.types)": [[372, "lucid.types.Numeric", false]], "ones() (in module lucid)": [[403, "lucid.ones", false]], "ones_like() (in module lucid)": [[404, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[348, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[394, "lucid.outer", false]], "pad() (in module lucid)": [[444, "lucid.pad", false]], "parameter (class in lucid.nn)": [[198, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[201, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[202, "lucid.nn.ParameterList", false]], "pinv() (in module lucid.linalg)": [[24, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[395, "lucid.power", false]], "pvt (class in lucid.models)": [[164, "lucid.models.PVT", false]], "pvt_huge() (in module lucid.models)": [[166, "lucid.models.pvt_huge", false]], "pvt_large() (in module lucid.models)": [[167, "lucid.models.pvt_large", false]], "pvt_medium() (in module lucid.models)": [[168, "lucid.models.pvt_medium", false]], "pvt_small() (in module lucid.models)": [[169, "lucid.models.pvt_small", false]], "pvt_tiny() (in module lucid.models)": [[170, "lucid.models.pvt_tiny", false]], "pvt_v2 (class in lucid.models)": [[165, "lucid.models.PVT_V2", false]], "pvt_v2_b0() (in module lucid.models)": [[171, "lucid.models.pvt_v2_b0", false]], "pvt_v2_b1() (in module lucid.models)": [[172, "lucid.models.pvt_v2_b1", false]], "pvt_v2_b2() (in module lucid.models)": [[173, "lucid.models.pvt_v2_b2", false]], "pvt_v2_b2_li() (in module lucid.models)": [[174, "lucid.models.pvt_v2_b2_li", false]], "pvt_v2_b3() (in module lucid.models)": [[175, "lucid.models.pvt_v2_b3", false]], "pvt_v2_b4() (in module lucid.models)": [[176, "lucid.models.pvt_v2_b4", false]], "pvt_v2_b5() (in module lucid.models)": [[177, "lucid.models.pvt_v2_b5", false]], "qr() (in module lucid.linalg)": [[25, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[367, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[379, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[380, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[381, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[461, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[462, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[463, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[464, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[465, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[445, "lucid.ravel", false]], "rearrange (class in lucid.nn)": [[305, "lucid.nn.Rearrange", false]], "rearrange() (in module lucid.einops)": [[12, "lucid.einops.rearrange", false]], "reciprocal() (in module lucid)": [[422, "lucid.reciprocal", false]], "reduce() (in module lucid.einops)": [[13, "lucid.einops.reduce", false]], "reducelronplateau (class in lucid.optim.lr_scheduler)": [[356, "lucid.optim.lr_scheduler.ReduceLROnPlateau", false]], "register_model() (in module lucid)": [[376, "lucid.register_model", false]], "relu (class in lucid.nn)": [[281, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[209, "lucid.nn.functional.relu", false]], "relu6 (class in lucid.nn)": [[282, "lucid.nn.ReLU6", false]], "repeat() (in module lucid)": [[446, "lucid.repeat", false]], "repeat() (in module lucid.einops)": [[14, "lucid.einops.repeat", false]], "reshape() (in module lucid)": [[447, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[466, "lucid.transforms.Resize", false]], "resnest (class in lucid.models)": [[103, "lucid.models.ResNeSt", false]], "resnest_101() (in module lucid.models)": [[104, "lucid.models.resnest_101", false]], "resnest_14() (in module lucid.models)": [[105, "lucid.models.resnest_14", false]], "resnest_200() (in module lucid.models)": [[106, "lucid.models.resnest_200", false]], "resnest_26() (in module lucid.models)": [[107, "lucid.models.resnest_26", false]], "resnest_269() (in module lucid.models)": [[108, "lucid.models.resnest_269", false]], "resnest_50() (in module lucid.models)": [[109, "lucid.models.resnest_50", false]], "resnest_50_1s4x24d() (in module lucid.models)": [[110, "lucid.models.resnest_50_1s4x24d", false]], "resnest_50_4s2x40d() (in module lucid.models)": [[111, "lucid.models.resnest_50_4s2x40d", false]], "resnet (class in lucid.models)": [[112, "lucid.models.ResNet", false]], "resnet_1001() (in module lucid.models)": [[113, "lucid.models.resnet_1001", false]], "resnet_101() (in module lucid.models)": [[114, "lucid.models.resnet_101", false]], "resnet_152() (in module lucid.models)": [[115, "lucid.models.resnet_152", false]], "resnet_18() (in module lucid.models)": [[116, "lucid.models.resnet_18", false]], "resnet_200() (in module lucid.models)": [[117, "lucid.models.resnet_200", false]], "resnet_269() (in module lucid.models)": [[118, "lucid.models.resnet_269", false]], "resnet_34() (in module lucid.models)": [[119, "lucid.models.resnet_34", false]], "resnet_50() (in module lucid.models)": [[120, "lucid.models.resnet_50", false]], "resnext (class in lucid.models)": [[123, "lucid.models.ResNeXt", false]], "resnext_101_32x16d() (in module lucid.models)": [[124, "lucid.models.resnext_101_32x16d", false]], "resnext_101_32x32d() (in module lucid.models)": [[125, "lucid.models.resnext_101_32x32d", false]], "resnext_101_32x4d() (in module lucid.models)": [[126, "lucid.models.resnext_101_32x4d", false]], "resnext_101_32x8d() (in module lucid.models)": [[127, "lucid.models.resnext_101_32x8d", false]], "resnext_101_64x4d() (in module lucid.models)": [[128, "lucid.models.resnext_101_64x4d", false]], "resnext_50_32x4d() (in module lucid.models)": [[129, "lucid.models.resnext_50_32x4d", false]], "rmsprop (class in lucid.optim)": [[368, "lucid.optim.RMSprop", false]], "roll() (in module lucid)": [[448, "lucid.roll", false]], "rotate() (in module lucid.nn.functional)": [[258, "lucid.nn.functional.rotate", false]], "rprop (class in lucid.optim)": [[369, "lucid.optim.Rprop", false]], "scaled_dot_product_attention() (in module lucid.nn.functional)": [[215, "lucid.nn.functional.scaled_dot_product_attention", false]], "scaleddotproductattention (class in lucid.nn)": [[290, "lucid.nn.ScaledDotProductAttention", false]], "se_resnet_101() (in module lucid.models)": [[131, "lucid.models.se_resnet_101", false]], "se_resnet_152() (in module lucid.models)": [[132, "lucid.models.se_resnet_152", false]], "se_resnet_18() (in module lucid.models)": [[133, "lucid.models.se_resnet_18", false]], "se_resnet_34() (in module lucid.models)": [[134, "lucid.models.se_resnet_34", false]], "se_resnet_50() (in module lucid.models)": [[135, "lucid.models.se_resnet_50", false]], "se_resnext_101_32x4d() (in module lucid.models)": [[136, "lucid.models.se_resnext_101_32x4d", false]], "se_resnext_101_32x8d() (in module lucid.models)": [[137, "lucid.models.se_resnext_101_32x8d", false]], "se_resnext_101_64x4d() (in module lucid.models)": [[138, "lucid.models.se_resnext_101_64x4d", false]], "se_resnext_50_32x4d() (in module lucid.models)": [[139, "lucid.models.se_resnext_50_32x4d", false]], "seed() (in module lucid.random)": [[382, "lucid.random.seed", false]], "selectivekernel (class in lucid.nn)": [[266, "lucid.nn.SelectiveKernel", false]], "selu (class in lucid.nn)": [[283, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[210, "lucid.nn.functional.selu", false]], "semodule (class in lucid.nn)": [[265, "lucid.nn.SEModule", false]], "senet (class in lucid.models)": [[130, "lucid.models.SENet", false]], "sequential (class in lucid.nn)": [[203, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[370, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[284, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[211, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[423, "lucid.sign", false]], "sin() (in module lucid)": [[424, "lucid.sin", false]], "sinh() (in module lucid)": [[425, "lucid.sinh", false]], "sk_resnet_18() (in module lucid.models)": [[141, "lucid.models.sk_resnet_18", false]], "sk_resnet_34() (in module lucid.models)": [[142, "lucid.models.sk_resnet_34", false]], "sk_resnet_50() (in module lucid.models)": [[143, "lucid.models.sk_resnet_50", false]], "sk_resnext_50_32x4d() (in module lucid.models)": [[144, "lucid.models.sk_resnext_50_32x4d", false]], "sknet (class in lucid.models)": [[140, "lucid.models.SKNet", false]], "softmax (class in lucid.nn)": [[285, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[212, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[26, "lucid.linalg.solve", false]], "split() (in module lucid)": [[449, "lucid.split", false]], "sqrt() (in module lucid)": [[426, "lucid.sqrt", false]], "square() (in module lucid)": [[427, "lucid.square", false]], "squeeze() (in module lucid)": [[450, "lucid.squeeze", false]], "stack() (in module lucid)": [[451, "lucid.stack", false]], "steplr (class in lucid.optim.lr_scheduler)": [[357, "lucid.optim.lr_scheduler.StepLR", false]], "sub() (in module lucid)": [[396, "lucid.sub", false]], "sum() (in module lucid)": [[428, "lucid.sum", false]], "summarize() (in module lucid.models)": [[155, "lucid.models.summarize", false]], "svd() (in module lucid.linalg)": [[27, "lucid.linalg.svd", false]], "swapaxes() (in module lucid)": [[429, "lucid.swapaxes", false]], "swin_base() (in module lucid.models)": [[180, "lucid.models.swin_base", false]], "swin_large() (in module lucid.models)": [[181, "lucid.models.swin_large", false]], "swin_small() (in module lucid.models)": [[182, "lucid.models.swin_small", false]], "swin_tiny() (in module lucid.models)": [[183, "lucid.models.swin_tiny", false]], "swin_v2_base() (in module lucid.models)": [[184, "lucid.models.swin_v2_base", false]], "swin_v2_giant() (in module lucid.models)": [[185, "lucid.models.swin_v2_giant", false]], "swin_v2_huge() (in module lucid.models)": [[186, "lucid.models.swin_v2_huge", false]], "swin_v2_large() (in module lucid.models)": [[187, "lucid.models.swin_v2_large", false]], "swin_v2_small() (in module lucid.models)": [[188, "lucid.models.swin_v2_small", false]], "swin_v2_tiny() (in module lucid.models)": [[189, "lucid.models.swin_v2_tiny", false]], "swintransformer (class in lucid.models)": [[178, "lucid.models.SwinTransformer", false]], "swintransformer_v2 (class in lucid.models)": [[179, "lucid.models.SwinTransformer_V2", false]], "swish (class in lucid.nn)": [[286, "lucid.nn.Swish", false]], "tan() (in module lucid)": [[430, "lucid.tan", false]], "tanh (class in lucid.nn)": [[287, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[431, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[213, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[385, "lucid.Tensor", false]], "tensor() (in module lucid)": [[435, "lucid.tensor", false]], "tile() (in module lucid)": [[452, "lucid.tile", false]], "totensor (class in lucid.transforms)": [[458, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[432, "lucid.trace", false]], "transformer (class in lucid.models)": [[156, "lucid.models.Transformer", false]], "transformer (class in lucid.nn)": [[339, "lucid.nn.Transformer", false]], "transformer_base() (in module lucid.models)": [[157, "lucid.models.transformer_base", false]], "transformer_big() (in module lucid.models)": [[158, "lucid.models.transformer_big", false]], "transformerdecoder (class in lucid.nn)": [[340, "lucid.nn.TransformerDecoder", false]], "transformerdecoderlayer (class in lucid.nn)": [[341, "lucid.nn.TransformerDecoderLayer", false]], "transformerencoder (class in lucid.nn)": [[342, "lucid.nn.TransformerEncoder", false]], "transformerencoderlayer (class in lucid.nn)": [[343, "lucid.nn.TransformerEncoderLayer", false]], "transpose() (in module lucid)": [[433, "lucid.transpose", false]], "tril() (in module lucid)": [[453, "lucid.tril", false]], "triu() (in module lucid)": [[454, "lucid.triu", false]], "unfold (class in lucid.nn)": [[295, "lucid.nn.Unfold", false]], "unfold() (in module lucid.nn.functional)": [[220, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[273, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[383, "lucid.random.uniform", false]], "unsqueeze() (in module lucid)": [[455, "lucid.unsqueeze", false]], "upsample (class in lucid.nn)": [[345, "lucid.nn.Upsample", false]], "var() (in module lucid)": [[434, "lucid.var", false]], "vggnet (class in lucid.models)": [[145, "lucid.models.VGGNet", false]], "vggnet_11() (in module lucid.models)": [[146, "lucid.models.vggnet_11", false]], "vggnet_13() (in module lucid.models)": [[147, "lucid.models.vggnet_13", false]], "vggnet_16() (in module lucid.models)": [[148, "lucid.models.vggnet_16", false]], "vggnet_19() (in module lucid.models)": [[149, "lucid.models.vggnet_19", false]], "vit (class in lucid.models)": [[190, "lucid.models.ViT", false]], "vit_base() (in module lucid.models)": [[191, "lucid.models.vit_base", false]], "vit_huge() (in module lucid.models)": [[192, "lucid.models.vit_huge", false]], "vit_large() (in module lucid.models)": [[193, "lucid.models.vit_large", false]], "vit_small() (in module lucid.models)": [[194, "lucid.models.vit_small", false]], "vit_tiny() (in module lucid.models)": [[195, "lucid.models.vit_tiny", false]], "vstack() (in module lucid)": [[456, "lucid.vstack", false]], "wide_resnet_101() (in module lucid.models)": [[121, "lucid.models.wide_resnet_101", false]], "wide_resnet_50() (in module lucid.models)": [[122, "lucid.models.wide_resnet_50", false]], "xavier_normal() (in module lucid.nn.init)": [[274, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[275, "lucid.nn.init.xavier_uniform", false]], "xception (class in lucid.models)": [[150, "lucid.models.Xception", false]], "xception() (in module lucid.models)": [[151, "lucid.models.xception", false]], "zeros() (in module lucid)": [[405, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[406, "lucid.zeros_like", false]], "zfnet (class in lucid.models)": [[152, "lucid.models.ZFNet", false]], "zfnet() (in module lucid.models)": [[153, "lucid.models.zfnet", false]]}, "objects": {"": [[15, 0, 0, "-", "lucid"]], "lucid": [[385, 1, 1, "", "Tensor"], [408, 2, 1, "", "abs"], [386, 2, 1, "", "add"], [397, 2, 1, "", "arange"], [409, 2, 1, "", "arccos"], [410, 2, 1, "", "arcsin"], [411, 2, 1, "", "arctan"], [436, 2, 1, "", "broadcast_to"], [437, 2, 1, "", "chunk"], [412, 2, 1, "", "clip"], [438, 2, 1, "", "concatenate"], [413, 2, 1, "", "cos"], [414, 2, 1, "", "cosh"], [415, 2, 1, "", "cube"], [398, 2, 1, "", "diag"], [387, 2, 1, "", "div"], [388, 2, 1, "", "dot"], [399, 2, 1, "", "empty"], [400, 2, 1, "", "empty_like"], [416, 2, 1, "", "exp"], [401, 2, 1, "", "eye"], [439, 2, 1, "", "flatten"], [373, 2, 1, "", "grad_enabled"], [440, 2, 1, "", "hstack"], [389, 2, 1, "", "inner"], [402, 2, 1, "", "linspace"], [417, 2, 1, "", "log"], [418, 2, 1, "", "log2"], [442, 2, 1, "", "masked_fill"], [390, 2, 1, "", "matmul"], [419, 2, 1, "", "max"], [391, 2, 1, "", "maximum"], [420, 2, 1, "", "mean"], [443, 2, 1, "", "meshgrid"], [421, 2, 1, "", "min"], [392, 2, 1, "", "minimum"], [393, 2, 1, "", "multiply"], [375, 2, 1, "", "no_grad"], [403, 2, 1, "", "ones"], [404, 2, 1, "", "ones_like"], [394, 2, 1, "", "outer"], [444, 2, 1, "", "pad"], [395, 2, 1, "", "power"], [445, 2, 1, "", "ravel"], [422, 2, 1, "", "reciprocal"], [376, 2, 1, "", "register_model"], [446, 2, 1, "", "repeat"], [447, 2, 1, "", "reshape"], [448, 2, 1, "", "roll"], [423, 2, 1, "", "sign"], [424, 2, 1, "", "sin"], [425, 2, 1, "", "sinh"], [449, 2, 1, "", "split"], [426, 2, 1, "", "sqrt"], [427, 2, 1, "", "square"], [450, 2, 1, "", "squeeze"], [451, 2, 1, "", "stack"], [396, 2, 1, "", "sub"], [428, 2, 1, "", "sum"], [429, 2, 1, "", "swapaxes"], [430, 2, 1, "", "tan"], [431, 2, 1, "", "tanh"], [435, 2, 1, "", "tensor"], [452, 2, 1, "", "tile"], [432, 2, 1, "", "trace"], [433, 2, 1, "", "transpose"], [453, 2, 1, "", "tril"], [454, 2, 1, "", "triu"], [455, 2, 1, "", "unsqueeze"], [434, 2, 1, "", "var"], [456, 2, 1, "", "vstack"], [405, 2, 1, "", "zeros"], [406, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "CIFAR10"], [6, 1, 1, "", "CIFAR100"], [7, 1, 1, "", "FashionMNIST"], [8, 1, 1, "", "MNIST"]], "lucid.einops": [[12, 2, 1, "", "rearrange"], [13, 2, 1, "", "reduce"], [14, 2, 1, "", "repeat"]], "lucid.linalg": [[17, 2, 1, "", "cholesky"], [18, 2, 1, "", "det"], [19, 2, 1, "", "eig"], [21, 2, 1, "", "inv"], [22, 2, 1, "", "matrix_power"], [23, 2, 1, "", "norm"], [24, 2, 1, "", "pinv"], [25, 2, 1, "", "qr"], [26, 2, 1, "", "solve"], [27, 2, 1, "", "svd"]], "lucid.models": [[28, 1, 1, "", "AlexNet"], [30, 1, 1, "", "CoAtNet"], [39, 1, 1, "", "ConvNeXt"], [40, 1, 1, "", "ConvNeXt_V2"], [159, 1, 1, "", "CvT"], [54, 1, 1, "", "DenseNet"], [59, 1, 1, "", "EfficientNet"], [60, 1, 1, "", "EfficientNet_V2"], [73, 1, 1, "", "Inception"], [77, 1, 1, "", "InceptionNeXt"], [82, 1, 1, "", "InceptionResNet"], [86, 1, 1, "", "LeNet"], [90, 1, 1, "", "MobileNet"], [91, 1, 1, "", "MobileNet_V2"], [92, 1, 1, "", "MobileNet_V3"], [93, 1, 1, "", "MobileNet_V4"], [164, 1, 1, "", "PVT"], [165, 1, 1, "", "PVT_V2"], [103, 1, 1, "", "ResNeSt"], [123, 1, 1, "", "ResNeXt"], [112, 1, 1, "", "ResNet"], [130, 1, 1, "", "SENet"], [140, 1, 1, "", "SKNet"], [178, 1, 1, "", "SwinTransformer"], [179, 1, 1, "", "SwinTransformer_V2"], [156, 1, 1, "", "Transformer"], [145, 1, 1, "", "VGGNet"], [190, 1, 1, "", "ViT"], [150, 1, 1, "", "Xception"], [152, 1, 1, "", "ZFNet"], [29, 2, 1, "", "alexnet"], [31, 2, 1, "", "coatnet_0"], [32, 2, 1, "", "coatnet_1"], [33, 2, 1, "", "coatnet_2"], [34, 2, 1, "", "coatnet_3"], [35, 2, 1, "", "coatnet_4"], [36, 2, 1, "", "coatnet_5"], [37, 2, 1, "", "coatnet_6"], [38, 2, 1, "", "coatnet_7"], [41, 2, 1, "", "convnext_base"], [42, 2, 1, "", "convnext_large"], [43, 2, 1, "", "convnext_small"], [44, 2, 1, "", "convnext_tiny"], [45, 2, 1, "", "convnext_v2_atto"], [46, 2, 1, "", "convnext_v2_base"], [47, 2, 1, "", "convnext_v2_femto"], [48, 2, 1, "", "convnext_v2_huge"], [49, 2, 1, "", "convnext_v2_large"], [50, 2, 1, "", "convnext_v2_nano"], [51, 2, 1, "", "convnext_v2_pico"], [52, 2, 1, "", "convnext_v2_tiny"], [53, 2, 1, "", "convnext_xlarge"], [160, 2, 1, "", "cvt_13"], [161, 2, 1, "", "cvt_21"], [162, 2, 1, "", "cvt_w24"], [55, 2, 1, "", "densenet_121"], [56, 2, 1, "", "densenet_169"], [57, 2, 1, "", "densenet_201"], [58, 2, 1, "", "densenet_264"], [61, 2, 1, "", "efficientnet_b0"], [62, 2, 1, "", "efficientnet_b1"], [63, 2, 1, "", "efficientnet_b2"], [64, 2, 1, "", "efficientnet_b3"], [65, 2, 1, "", "efficientnet_b4"], [66, 2, 1, "", "efficientnet_b5"], [67, 2, 1, "", "efficientnet_b6"], [68, 2, 1, "", "efficientnet_b7"], [69, 2, 1, "", "efficientnet_v2_l"], [70, 2, 1, "", "efficientnet_v2_m"], [71, 2, 1, "", "efficientnet_v2_s"], [72, 2, 1, "", "efficientnet_v2_xl"], [78, 2, 1, "", "inception_next_atto"], [79, 2, 1, "", "inception_next_base"], [80, 2, 1, "", "inception_next_small"], [81, 2, 1, "", "inception_next_tiny"], [83, 2, 1, "", "inception_resnet_v1"], [84, 2, 1, "", "inception_resnet_v2"], [74, 2, 1, "", "inception_v1"], [75, 2, 1, "", "inception_v3"], [76, 2, 1, "", "inception_v4"], [87, 2, 1, "", "lenet_1"], [88, 2, 1, "", "lenet_4"], [89, 2, 1, "", "lenet_5"], [94, 2, 1, "", "mobilenet"], [95, 2, 1, "", "mobilenet_v2"], [96, 2, 1, "", "mobilenet_v3_large"], [97, 2, 1, "", "mobilenet_v3_small"], [98, 2, 1, "", "mobilenet_v4_conv_large"], [99, 2, 1, "", "mobilenet_v4_conv_medium"], [100, 2, 1, "", "mobilenet_v4_conv_small"], [101, 2, 1, "", "mobilenet_v4_hybrid_large"], [102, 2, 1, "", "mobilenet_v4_hybrid_medium"], [166, 2, 1, "", "pvt_huge"], [167, 2, 1, "", "pvt_large"], [168, 2, 1, "", "pvt_medium"], [169, 2, 1, "", "pvt_small"], [170, 2, 1, "", "pvt_tiny"], [171, 2, 1, "", "pvt_v2_b0"], [172, 2, 1, "", "pvt_v2_b1"], [173, 2, 1, "", "pvt_v2_b2"], [174, 2, 1, "", "pvt_v2_b2_li"], [175, 2, 1, "", "pvt_v2_b3"], [176, 2, 1, "", "pvt_v2_b4"], [177, 2, 1, "", "pvt_v2_b5"], [104, 2, 1, "", "resnest_101"], [105, 2, 1, "", "resnest_14"], [106, 2, 1, "", "resnest_200"], [107, 2, 1, "", "resnest_26"], [108, 2, 1, "", "resnest_269"], [109, 2, 1, "", "resnest_50"], [110, 2, 1, "", "resnest_50_1s4x24d"], [111, 2, 1, "", "resnest_50_4s2x40d"], [113, 2, 1, "", "resnet_1001"], [114, 2, 1, "", "resnet_101"], [115, 2, 1, "", "resnet_152"], [116, 2, 1, "", "resnet_18"], [117, 2, 1, "", "resnet_200"], [118, 2, 1, "", "resnet_269"], [119, 2, 1, "", "resnet_34"], [120, 2, 1, "", "resnet_50"], [124, 2, 1, "", "resnext_101_32x16d"], [125, 2, 1, "", "resnext_101_32x32d"], [126, 2, 1, "", "resnext_101_32x4d"], [127, 2, 1, "", "resnext_101_32x8d"], [128, 2, 1, "", "resnext_101_64x4d"], [129, 2, 1, "", "resnext_50_32x4d"], [131, 2, 1, "", "se_resnet_101"], [132, 2, 1, "", "se_resnet_152"], [133, 2, 1, "", "se_resnet_18"], [134, 2, 1, "", "se_resnet_34"], [135, 2, 1, "", "se_resnet_50"], [136, 2, 1, "", "se_resnext_101_32x4d"], [137, 2, 1, "", "se_resnext_101_32x8d"], [138, 2, 1, "", "se_resnext_101_64x4d"], [139, 2, 1, "", "se_resnext_50_32x4d"], [141, 2, 1, "", "sk_resnet_18"], [142, 2, 1, "", "sk_resnet_34"], [143, 2, 1, "", "sk_resnet_50"], [144, 2, 1, "", "sk_resnext_50_32x4d"], [155, 2, 1, "", "summarize"], [180, 2, 1, "", "swin_base"], [181, 2, 1, "", "swin_large"], [182, 2, 1, "", "swin_small"], [183, 2, 1, "", "swin_tiny"], [184, 2, 1, "", "swin_v2_base"], [185, 2, 1, "", "swin_v2_giant"], [186, 2, 1, "", "swin_v2_huge"], [187, 2, 1, "", "swin_v2_large"], [188, 2, 1, "", "swin_v2_small"], [189, 2, 1, "", "swin_v2_tiny"], [157, 2, 1, "", "transformer_base"], [158, 2, 1, "", "transformer_big"], [146, 2, 1, "", "vggnet_11"], [147, 2, 1, "", "vggnet_13"], [148, 2, 1, "", "vggnet_16"], [149, 2, 1, "", "vggnet_19"], [191, 2, 1, "", "vit_base"], [192, 2, 1, "", "vit_huge"], [193, 2, 1, "", "vit_large"], [194, 2, 1, "", "vit_small"], [195, 2, 1, "", "vit_tiny"], [121, 2, 1, "", "wide_resnet_101"], [122, 2, 1, "", "wide_resnet_50"], [151, 2, 1, "", "xception"], [153, 2, 1, "", "zfnet"]], "lucid.nn": [[327, 1, 1, "", "AdaptiveAvgPool1d"], [328, 1, 1, "", "AdaptiveAvgPool2d"], [329, 1, 1, "", "AdaptiveAvgPool3d"], [297, 1, 1, "", "AlphaDropout"], [330, 1, 1, "", "AvgPool1d"], [331, 1, 1, "", "AvgPool2d"], [332, 1, 1, "", "AvgPool3d"], [312, 1, 1, "", "BCELoss"], [318, 1, 1, "", "BatchNorm1d"], [319, 1, 1, "", "BatchNorm2d"], [320, 1, 1, "", "BatchNorm3d"], [308, 1, 1, "", "Bilinear"], [196, 1, 1, "", "Buffer"], [292, 1, 1, "", "Conv1d"], [293, 1, 1, "", "Conv2d"], [294, 1, 1, "", "Conv3d"], [259, 1, 1, "", "ConvBNReLU1d"], [260, 1, 1, "", "ConvBNReLU2d"], [261, 1, 1, "", "ConvBNReLU3d"], [313, 1, 1, "", "CrossEntropyLoss"], [262, 1, 1, "", "DepthSeparableConv1d"], [263, 1, 1, "", "DepthSeparableConv2d"], [264, 1, 1, "", "DepthSeparableConv3d"], [298, 1, 1, "", "DropBlock"], [299, 1, 1, "", "DropPath"], [300, 1, 1, "", "Dropout"], [301, 1, 1, "", "Dropout1d"], [302, 1, 1, "", "Dropout2d"], [303, 1, 1, "", "Dropout3d"], [276, 1, 1, "", "ELU"], [337, 1, 1, "", "Embedding"], [277, 1, 1, "", "GELU"], [321, 1, 1, "", "GlobalResponseNorm"], [278, 1, 1, "", "HardSigmoid"], [279, 1, 1, "", "HardSwish"], [314, 1, 1, "", "HuberLoss"], [309, 1, 1, "", "Identity"], [322, 1, 1, "", "InstanceNorm1d"], [323, 1, 1, "", "InstanceNorm2d"], [324, 1, 1, "", "InstanceNorm3d"], [325, 1, 1, "", "LayerNorm"], [280, 1, 1, "", "LeakyReLU"], [310, 1, 1, "", "Linear"], [315, 1, 1, "", "MSELoss"], [333, 1, 1, "", "MaxPool1d"], [334, 1, 1, "", "MaxPool2d"], [335, 1, 1, "", "MaxPool3d"], [197, 1, 1, "", "Module"], [199, 1, 1, "", "ModuleDict"], [200, 1, 1, "", "ModuleList"], [289, 1, 1, "", "MultiHeadAttention"], [316, 1, 1, "", "NLLLoss"], [198, 1, 1, "", "Parameter"], [201, 1, 1, "", "ParameterDict"], [202, 1, 1, "", "ParameterList"], [281, 1, 1, "", "ReLU"], [282, 1, 1, "", "ReLU6"], [305, 1, 1, "", "Rearrange"], [283, 1, 1, "", "SELU"], [265, 1, 1, "", "SEModule"], [290, 1, 1, "", "ScaledDotProductAttention"], [266, 1, 1, "", "SelectiveKernel"], [203, 1, 1, "", "Sequential"], [284, 1, 1, "", "Sigmoid"], [285, 1, 1, "", "Softmax"], [286, 1, 1, "", "Swish"], [287, 1, 1, "", "Tanh"], [339, 1, 1, "", "Transformer"], [340, 1, 1, "", "TransformerDecoder"], [341, 1, 1, "", "TransformerDecoderLayer"], [342, 1, 1, "", "TransformerEncoder"], [343, 1, 1, "", "TransformerEncoderLayer"], [295, 1, 1, "", "Unfold"], [345, 1, 1, "", "Upsample"]], "lucid.nn.functional": [[245, 2, 1, "", "adaptive_avg_pool1d"], [246, 2, 1, "", "adaptive_avg_pool2d"], [247, 2, 1, "", "adaptive_avg_pool3d"], [221, 2, 1, "", "alpha_dropout"], [248, 2, 1, "", "avg_pool1d"], [249, 2, 1, "", "avg_pool2d"], [250, 2, 1, "", "avg_pool3d"], [239, 2, 1, "", "batch_norm"], [230, 2, 1, "", "bilinear"], [233, 2, 1, "", "binary_cross_entropy"], [216, 2, 1, "", "conv1d"], [217, 2, 1, "", "conv2d"], [218, 2, 1, "", "conv3d"], [234, 2, 1, "", "cross_entropy"], [222, 2, 1, "", "drop_block"], [223, 2, 1, "", "drop_path"], [224, 2, 1, "", "dropout"], [225, 2, 1, "", "dropout1d"], [226, 2, 1, "", "dropout2d"], [227, 2, 1, "", "dropout3d"], [205, 2, 1, "", "elu"], [255, 2, 1, "", "embedding"], [206, 2, 1, "", "gelu"], [240, 2, 1, "", "global_response_norm"], [235, 2, 1, "", "huber_loss"], [242, 2, 1, "", "instance_norm"], [257, 2, 1, "", "interpolate"], [243, 2, 1, "", "layer_norm"], [208, 2, 1, "", "leaky_relu"], [232, 2, 1, "", "linear"], [252, 2, 1, "", "max_pool1d"], [253, 2, 1, "", "max_pool2d"], [254, 2, 1, "", "max_pool3d"], [237, 2, 1, "", "mse_loss"], [238, 2, 1, "", "nll_loss"], [244, 2, 1, "", "normalize"], [209, 2, 1, "", "relu"], [258, 2, 1, "", "rotate"], [215, 2, 1, "", "scaled_dot_product_attention"], [210, 2, 1, "", "selu"], [211, 2, 1, "", "sigmoid"], [212, 2, 1, "", "softmax"], [213, 2, 1, "", "tanh"], [220, 2, 1, "", "unfold"]], "lucid.nn.init": [[268, 2, 1, "", "constant"], [270, 2, 1, "", "kaiming_normal"], [271, 2, 1, "", "kaiming_uniform"], [272, 2, 1, "", "normal"], [273, 2, 1, "", "uniform"], [274, 2, 1, "", "xavier_normal"], [275, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[360, 1, 1, "", "ASGD"], [361, 1, 1, "", "Adadelta"], [362, 1, 1, "", "Adagrad"], [363, 1, 1, "", "Adam"], [364, 1, 1, "", "AdamW"], [365, 1, 1, "", "Adamax"], [366, 1, 1, "", "NAdam"], [348, 1, 1, "", "Optimizer"], [367, 1, 1, "", "RAdam"], [368, 1, 1, "", "RMSprop"], [369, 1, 1, "", "Rprop"], [370, 1, 1, "", "SGD"]], "lucid.optim.lr_scheduler": [[350, 1, 1, "", "CosineAnnealingLR"], [351, 1, 1, "", "CyclicLR"], [352, 1, 1, "", "ExponentialLR"], [353, 1, 1, "", "LRScheduler"], [354, 1, 1, "", "LambdaLR"], [355, 1, 1, "", "MultiStepLR"], [356, 1, 1, "", "ReduceLROnPlateau"], [357, 1, 1, "", "StepLR"]], "lucid.random": [[377, 2, 1, "", "bernoulli"], [379, 2, 1, "", "rand"], [380, 2, 1, "", "randint"], [381, 2, 1, "", "randn"], [382, 2, 1, "", "seed"], [383, 2, 1, "", "uniform"]], "lucid.transforms": [[459, 1, 1, "", "CenterCrop"], [457, 1, 1, "", "Compose"], [460, 1, 1, "", "Normalize"], [461, 1, 1, "", "RandomCrop"], [462, 1, 1, "", "RandomGrayscale"], [463, 1, 1, "", "RandomHorizontalFlip"], [464, 1, 1, "", "RandomRotation"], [465, 1, 1, "", "RandomVerticalFlip"], [466, 1, 1, "", "Resize"], [458, 1, 1, "", "ToTensor"]], "lucid.types": [[372, 1, 1, "", "Numeric"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [3, 15, 16, 22, 24, 27, 71, 85, 96, 97, 102, 104, 105, 106, 107, 108, 109, 155, 156, 163, 167, 190, 194, 196, 197, 198, 199, 201, 202, 203, 215, 245, 246, 247, 266, 290, 295, 313, 316, 327, 328, 329, 330, 333, 334, 339, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 372, 374, 376, 385, 390, 398, 420, 428, 429, 432, 434, 435, 448, 450, 458, 460, 468], "0": [0, 1, 3, 4, 5, 6, 7, 8, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 31, 39, 40, 59, 60, 69, 70, 71, 72, 75, 77, 82, 85, 86, 94, 130, 156, 163, 164, 165, 166, 167, 168, 169, 170, 178, 179, 190, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 405, 406, 408, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 428, 429, 430, 431, 433, 434, 435, 437, 438, 439, 440, 442, 444, 445, 446, 449, 450, 451, 453, 454, 455, 456, 457, 459, 460, 461, 462, 463, 464, 465, 466, 468], "000": [5, 6, 7, 8, 157, 158, 163, 172, 185, 399, 400], "0000": [313, 314, 316], "0001": [356, 360], "000e": [399, 400], "001": [351, 360, 363, 364, 366, 367, 370], "002": [365, 366], "003": [163, 169], "004": 366, "005": 280, "006": 351, "008": [85, 94], "00808": 85, "009": [163, 172], "01": [15, 208, 280, 348, 350, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370], "01051757": 381, "011": [37, 85], "013": [57, 85], "016": [85, 113], "0205": 313, "0217": 313, "0227": 313, "024": [85, 100, 135], "026": [85, 124], "028": [85, 129], "0299": 313, "032": [69, 85, 120], "03545": 85, "044715": [206, 277], "0450": 313, "0451": 313, "046": [67, 85], "047": [85, 147], "04719755": 409, "0474259": 211, "048": [85, 137, 163, 169], "0480": 313, "04861": 85, "05": [239, 242, 243, 259, 260, 261, 280, 318, 319, 320, 322, 323, 324, 325, 339, 341, 343], "050": [163, 194], "0507": [210, 283], "06": [39, 77, 240, 321, 361, 369], "066": [51, 85], "069": [85, 107, 118], "07": [222, 233, 234, 298, 312, 313], "070": [85, 102], "0700": 313, "0706508": 287, "071": [85, 113], "072": [163, 176], "0721": 313, "073": [85, 143], "07722396": 286, "0794": 316, "08": [356, 363, 364, 365, 366, 367, 368], "0802": 316, "083": [81, 85], "08333333": 24, "085537": 416, "088": [85, 135], "08955": 85, "0900": [285, 313], "096": [33, 85, 151], "0986": [212, 285], "09861229": 417, "09883": 163, "0992": 313, "1": [0, 1, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 130, 136, 137, 138, 139, 140, 144, 145, 150, 152, 155, 156, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 190, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 345, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 377, 379, 380, 381, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468], "10": [0, 1, 2, 3, 5, 6, 7, 15, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 54, 85, 86, 87, 88, 89, 104, 105, 106, 107, 108, 109, 110, 111, 145, 152, 153, 155, 160, 166, 199, 200, 203, 217, 218, 230, 232, 245, 289, 292, 293, 294, 302, 303, 308, 310, 319, 320, 323, 327, 331, 332, 334, 339, 340, 341, 342, 343, 349, 352, 354, 355, 356, 362, 376, 380, 383, 384, 387, 390, 393, 394, 402, 411, 428, 459, 461, 462, 464], "100": [6, 15, 29, 69, 70, 71, 72, 85, 146, 147, 148, 149, 350, 376, 468], "1000": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], "1000000": 360, "1001": [85, 113, 313], "1003": 313, "1007": 85, "10096": 85, "101": [85, 103, 104, 114, 121, 124, 125, 126, 127, 128, 131, 136, 137, 138], "10106": 85, "1014": 210, "102": [85, 118], "1024": [15, 33, 38, 158, 162, 305], "1025": [200, 203], "1026": [200, 203], "1027": [200, 203], "10499": 211, "1050": 284, "1054": 316, "1056": [200, 203], "10590": 85, "106": [163, 188], "107": [38, 85], "108": [70, 85], "1097": 85, "11": [85, 102, 116, 133, 145, 146, 230, 292, 293, 294, 302, 308, 319, 320, 323, 331, 332, 334, 390, 459, 460, 461, 462, 464], "110": [85, 108], "1105": 85, "1109": 85, "111": [63, 85], "1111": 312, "112": [85, 96, 109], "1134": 230, "114b": 462, "119": 230, "1192": [211, 212, 285], "12": [19, 24, 35, 36, 54, 55, 56, 57, 58, 64, 85, 87, 88, 157, 158, 162, 163, 166, 170, 178, 179, 181, 182, 183, 185, 186, 187, 188, 189, 190, 201, 230, 244, 247, 292, 293, 294, 302, 303, 308, 319, 320, 323, 329, 331, 332, 334, 390, 394, 395, 459, 461, 462, 464], "120": [69, 85, 86, 89, 96, 97], "12000": [157, 158], "121": [54, 55, 85], "12122": 163, "123": [270, 271, 272, 273, 274, 275, 382, 383], "124": [36, 85, 270, 271, 274, 275], "125": 332, "1250": 314, "1251": 85, "1258": 85, "126": [85, 121], "128": [15, 30, 33, 39, 44, 67, 83, 85, 112, 121, 122, 145, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 180, 203, 266, 457, 468], "1280": [36, 92], "128x128": [457, 468], "13": [74, 85, 145, 147, 160, 163, 230, 292, 293, 294, 308, 320, 331, 332, 334, 390, 459, 461, 462, 464], "1314": 85, "132": [85, 146], "1324": 85, "133": [85, 147], "136": [71, 85, 102], "138": [85, 148], "14": [32, 33, 34, 56, 85, 105, 163, 172, 292, 293, 294, 302, 303, 308, 320, 331, 332, 334, 390, 394, 459, 461, 462, 464], "14030": 163, "1409": 85, "143": [85, 149], "144": 97, "145": 230, "148": [43, 85], "149": [56, 85, 113], "15": [0, 50, 85, 230, 292, 293, 294, 308, 320, 331, 332, 334, 390, 394, 432, 459, 461, 462, 464, 468], "1513": 316, "152": [85, 101, 115, 132], "1536": [34, 35, 37], "155": 390, "1556": 85, "156": [78, 85], "157": [34, 85], "1588": [206, 277], "16": [54, 55, 85, 86, 89, 92, 96, 97, 124, 130, 145, 148, 161, 162, 164, 180, 184, 190, 191, 192, 193, 194, 195, 200, 201, 203, 215, 246, 247, 259, 260, 261, 265, 266, 289, 290, 292, 293, 294, 302, 303, 305, 308, 319, 320, 328, 329, 331, 332, 334, 339, 340, 341, 342, 343, 347, 390, 394, 426, 459, 461, 462, 464], "160": [85, 96, 114, 171], "16227766": 25, "16425": 316, "1643": 312, "166": 390, "167": 279, "169": [54, 56, 85], "16x16": 163, "17": [85, 107, 292, 293, 294, 308, 320, 332, 389, 459, 461, 462, 464], "170": 230, "1704": 85, "174": [31, 85], "17520119": 425, "177": [85, 126], "18": [85, 88, 116, 133, 141, 163, 168, 175, 180, 181, 182, 184, 185, 186, 187, 188, 292, 293, 294, 302, 308, 320, 332, 393, 394, 459, 461, 462, 464], "1800": 313, "184": 96, "18877099": 286, "19": [65, 85, 145, 149, 160, 163, 217, 218, 230, 293, 294, 320, 388, 390], "192": [31, 32, 34, 35, 37, 39, 40, 77, 85, 87, 88, 115, 160, 161, 162, 163, 170, 181], "194": [85, 124], "196": [53, 85, 162, 163, 181, 187], "1966": [212, 284, 285], "197": [42, 49, 85], "198": [85, 96], "199": [163, 192], "1998": [85, 313], "1_53": 85, "1d": [216, 245, 248, 252, 259, 262, 295, 318, 322, 327, 383, 390, 398, 432, 443, 444, 445, 446, 452], "1e": [19, 24, 39, 77, 171, 172, 173, 175, 176, 177, 222, 233, 234, 239, 240, 242, 243, 244, 259, 260, 261, 298, 312, 313, 318, 319, 320, 321, 322, 323, 324, 325, 339, 341, 343, 356, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370], "1e6": 360, "1s4x24d": 110, "1st": [28, 152], "2": [1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 59, 60, 69, 70, 71, 72, 85, 87, 88, 89, 92, 96, 97, 103, 104, 105, 106, 107, 108, 109, 111, 116, 133, 141, 152, 155, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 196, 197, 198, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 345, 347, 350, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 377, 379, 380, 381, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468], "20": [0, 5, 6, 7, 8, 57, 85, 162, 163, 199, 200, 203, 293, 294, 302, 320, 340, 341, 349, 353, 355, 357, 394, 416], "200": [85, 96, 106, 117], "2004": 85, "201": [57, 85, 106], "2011": 265, "2012": 85, "2014": 85, "2015": 85, "2016": 85, "2017": [85, 163, 339], "2018": [85, 265], "2019": 85, "2020": [85, 163], "2021": [85, 163], "2022": [85, 163], "2023": [85, 265], "2024": 85, "2039": 316, "204": 294, "2048": [36, 37, 38, 156, 339, 341, 343], "21": [71, 85, 119, 134, 161, 163, 201, 230, 293, 294, 320, 394], "210": [72, 85], "2102": 163, "2103": 163, "211": 390, "2111": 163, "213": [158, 163], "21841": [48, 53], "22": [83, 85, 151, 163, 174, 194, 230, 293, 294, 302, 320, 388, 390], "2201": 85, "221": [72, 85], "2231": [313, 316], "224": [28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 85, 94, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 122, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 152, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], "2247": [318, 319, 320, 322, 323, 324, 325], "224x224": [59, 74, 136, 137, 138, 139, 144], "226": 390, "22752314": 381, "2278": 85, "23": [104, 114, 121, 124, 125, 126, 127, 128, 131, 163, 169, 293, 294, 320], "2301": 85, "232": [85, 94, 138], "2324": [85, 283], "233": [47, 85], "234": [270, 271, 272, 273, 274, 275, 383], "235": [64, 85], "237": [158, 163], "238": [85, 97, 163, 175], "23840584": 286, "24": [54, 55, 92, 96, 97, 106, 110, 117, 178, 179, 181, 182, 183, 185, 186, 187, 188, 189, 230, 246, 293, 294, 302, 320, 328, 394], "240": [32, 47, 85, 96, 97, 149], "240x240": 59, "2424": [212, 285], "2447": 285, "246": [85, 87], "24d": 110, "25": [0, 85, 110, 120, 129, 141, 163, 173, 211, 223, 284, 294, 315, 320, 331, 332, 387, 402, 422, 434], "2500": [312, 314, 316], "2512": 276, "2547": 283, "256": [30, 33, 36, 38, 39, 112, 145, 164, 165, 166, 171], "258": [163, 182], "26": [85, 107, 201, 232, 294, 310, 320, 394], "260": 85, "260x260": 59, "26325684": 381, "264": [58, 85], "2689": [212, 284, 285], "26894142": 286, "269": [85, 108, 118], "27": [31, 85, 109, 139, 167, 176, 230, 292, 294, 320, 415], "272": [85, 128], "274": [85, 104, 144], "276": [270, 271, 274, 275], "277": [35, 85, 162, 163], "28": [35, 36, 44, 52, 81, 85, 87, 88, 135, 163, 183, 189, 230, 294, 394], "280": [51, 85], "286": [163, 166], "288": [85, 97, 106, 163, 183], "289": [48, 61, 85], "28x28": [7, 8, 87, 88], "29": [85, 144, 294], "299": [85, 150], "299r": 462, "299x299": [75, 76, 83, 84], "2_i": [322, 323, 324], "2c": 351, "2d": [217, 226, 246, 249, 253, 260, 263, 319, 323, 328, 390, 398, 401, 429, 432, 439, 443, 444, 446, 452, 464], "2e": 365, "2nd": [28, 152], "2x": 111, "2x2": [220, 459, 461], "3": [1, 2, 3, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 85, 87, 92, 94, 95, 96, 97, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 152, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 185, 188, 189, 190, 196, 197, 198, 200, 201, 202, 203, 206, 211, 212, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 235, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 345, 347, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 412, 414, 415, 416, 417, 418, 419, 420, 421, 425, 426, 427, 428, 429, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466], "30": [66, 75, 85, 108, 111, 118, 200, 258, 294, 351, 355, 356, 464], "300": 85, "300x300": 59, "301": [35, 85], "302": [70, 85], "3026": 316, "304": [163, 193], "3072": [38, 190], "308": [163, 187], "30823025": 286, "31": [161, 163, 230, 294, 390], "310": [399, 400], "31622777": 25, "319": 85, "32": [15, 30, 54, 56, 57, 85, 89, 98, 103, 104, 105, 106, 107, 108, 109, 124, 125, 126, 127, 129, 171, 180, 184, 200, 203, 230, 232, 246, 259, 260, 261, 265, 266, 293, 294, 305, 310, 328, 347, 372, 388, 389, 394], "320": [85, 107, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177], "321": [270, 271, 274, 275], "326": [85, 131, 163, 193], "32x16d": 85, "32x32": [5, 6, 86, 89], "32x32d": 85, "32x4d": [85, 136, 139, 144], "32x8d": [85, 137], "33": [58, 85, 200, 203, 232, 294, 310], "330": [32, 85], "3333": 244, "33333333": 24, "336": [37, 42, 85, 127, 146], "337": [58, 85], "34": [85, 119, 134, 142, 200, 203, 230, 294, 390, 394], "342": [270, 271, 274, 275], "344": [65, 85], "345": [270, 271, 272, 273, 274, 275, 383], "349": [163, 189], "35": [84, 85, 200, 203, 294], "350": [53, 85], "352": [74, 85], "354": [163, 183], "355": [68, 85], "3567": [312, 316], "357": [85, 148, 153], "359": [163, 167], "36": [106, 115, 117, 132, 294], "362": [163, 173], "3679": [205, 210, 276], "368": [85, 141, 143], "36th": 85, "37": [85, 101, 292], "370": [63, 85], "372": 230, "375": 315, "3750": 314, "37754067": 286, "378": [85, 88], "380": 85, "380x380": 59, "38344152": 379, "384": [31, 32, 34, 35, 37, 39, 40, 77, 160, 161, 163], "38629436": 417, "389056": 416, "38th": 85, "392": [75, 85, 162, 163], "393": [66, 74, 85], "3935": 276, "3965": 85, "3977": 85, "3d": [218, 227, 247, 250, 254, 261, 264, 294, 295, 320, 324, 329], "3x3": [85, 295, 384], "4": [0, 1, 2, 3, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 54, 59, 77, 78, 85, 86, 87, 88, 94, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 134, 135, 142, 143, 155, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 201, 203, 215, 216, 217, 218, 220, 222, 223, 225, 226, 227, 230, 232, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 262, 263, 264, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 308, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 345, 356, 360, 363, 367, 368, 370, 374, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 404, 406, 412, 417, 418, 419, 420, 421, 422, 424, 426, 427, 428, 429, 430, 432, 433, 434, 435, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466], "40": [76, 85, 92, 96, 97, 111, 177, 355], "400": [45, 85, 89, 163, 184, 192], "4044": 312, "4076": 313, "4096": [28, 152], "40d": 111, "41": [163, 168], "41421356": 17, "415": 163, "416": [85, 118, 136, 163, 195], "41666667": 24, "417": [85, 111], "41808962": 381, "419974": 213, "4199743": 287, "42": [37, 38, 185, 230, 265, 384], "421": [270, 271, 274, 275], "423": [270, 271, 272, 273], "424": 163, "42718872": 25, "4278": 85, "4284": 85, "4286": [244, 312], "43": [67, 85, 388, 390], "431": [80, 85], "432": [66, 85], "4323": 276, "4375": 314, "43758721": 379, "44": [85, 114, 126], "440": [71, 85], "4472": 244, "4472136": 19, "448": [68, 85], "4495": [320, 324], "45": [85, 142, 163, 175, 230, 258, 464], "4510": 85, "4520": 85, "4545": 297, "455": [85, 128], "456": 85, "456x456": 59, "457": [163, 170], "46": [43, 85], "464": [41, 85, 111], "468": [85, 125], "4700": 85, "4708": 85, "47112767": 411, "472": [85, 125, 158, 163], "476": [163, 181], "48": [54, 57, 58, 85, 97, 104, 108, 118, 136, 181, 185, 186, 187, 232, 310], "480": [56, 85, 96, 160, 163], "481": [85, 96], "483": [85, 109], "49": [80, 85, 131, 163, 182, 188], "492": [163, 168], "496": [52, 85], "4979": 276, "4s2x40d": [85, 111], "4x": 110, "4x4": 466, "5": [1, 2, 12, 13, 16, 21, 22, 23, 24, 28, 31, 36, 39, 47, 59, 61, 75, 85, 86, 87, 88, 89, 92, 96, 97, 140, 141, 142, 143, 152, 155, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 195, 197, 198, 199, 200, 201, 203, 206, 211, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 235, 237, 239, 242, 243, 245, 248, 249, 255, 257, 259, 260, 261, 266, 268, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 325, 327, 330, 331, 332, 334, 335, 339, 341, 343, 349, 351, 353, 355, 356, 357, 369, 374, 377, 380, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 400, 401, 402, 404, 406, 408, 409, 410, 419, 420, 421, 422, 423, 428, 429, 432, 433, 434, 435, 440, 443, 447, 448, 449, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468], "50": [5, 6, 85, 103, 109, 110, 111, 112, 120, 122, 129, 135, 139, 143, 144, 232, 310, 350, 369, 388, 390, 402, 462, 463, 465, 468], "5000": [156, 312, 314, 316], "504": [85, 95], "50_1s4x24d": 85, "510": 85, "5108": 316, "512": [30, 33, 36, 38, 39, 84, 85, 99, 112, 116, 142, 156, 157, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 289, 339, 340, 341, 342, 343], "516": [33, 85], "519": 85, "520": [78, 85], "52359878": 410, "528": 85, "528x528": 59, "53": [32, 85, 230, 389], "530": [85, 125], "532": [163, 181], "536": [64, 85], "537": [85, 97], "543": [270, 271, 272, 273, 274, 275, 383], "54308063": 414, "544": [80, 85, 148, 157, 163], "545": 395, "5455": 297, "549": [85, 114], "55": [70, 85, 163, 167], "553": [163, 174], "556": [163, 176], "557": [85, 120], "558": [37, 85], "559": [85, 139], "560": [62, 85, 105], "563": [270, 271, 274, 275], "564": [163, 185], "567": [163, 191], "5672": 85, "568": [72, 85], "5683": 85, "569": [85, 137], "57": [85, 143, 230], "57079633": [409, 410], "5714": 244, "5720": 85, "5730": 85, "57366333": 382, "576": 97, "584": [157, 163], "5849625": 418, "586": [76, 85], "587g": 462, "589": [44, 85], "590": [85, 98], "591": [41, 85], "592": [85, 133], "5987": 85, "5995": 85, "5998": 163, "5th": [28, 152], "6": [16, 24, 28, 30, 32, 33, 34, 37, 39, 54, 55, 56, 57, 58, 59, 77, 85, 86, 89, 103, 109, 112, 119, 120, 122, 129, 134, 135, 142, 143, 152, 156, 160, 161, 164, 165, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 185, 186, 187, 188, 189, 201, 202, 216, 217, 218, 220, 222, 227, 230, 232, 240, 244, 245, 255, 271, 275, 278, 282, 292, 293, 294, 295, 298, 300, 301, 302, 303, 308, 310, 312, 318, 319, 320, 321, 322, 323, 324, 325, 327, 331, 332, 334, 335, 339, 340, 342, 361, 369, 374, 383, 385, 386, 387, 388, 389, 390, 393, 394, 395, 396, 397, 398, 399, 400, 404, 406, 419, 420, 421, 428, 429, 432, 433, 434, 435, 437, 440, 446, 447, 448, 449, 453, 454, 456, 458, 459, 460, 461, 462, 464, 466], "60": [5, 6, 85, 115, 166], "600": [59, 85], "6008": 163, "600x600": 59, "6052": 316, "606": [163, 182], "6065": 276, "608": [36, 85, 153], "61": [29, 85, 89], "6105": 85, "611": [85, 105], "6114": 85, "6124": [318, 319, 320, 322, 323, 324, 325], "617": [69, 85], "62": [85, 153, 157, 163, 176, 230], "622": [161, 163], "623": [50, 85], "62686041": 425, "630": 85, "632": [35, 85, 163, 192, 193], "6321": [205, 276], "63245553": 25, "635": [52, 85], "636": [61, 85], "64": [30, 39, 54, 58, 85, 92, 96, 103, 104, 105, 106, 107, 108, 109, 112, 117, 128, 140, 145, 160, 161, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 200, 203, 230, 265, 266, 372], "640": [48, 65, 85], "645": 85, "64589411": 379, "647": [85, 141], "648": [163, 168], "64x4d": [85, 138], "654": [270, 271, 272, 273, 274, 275, 383], "656": [34, 85, 163, 191], "657": [163, 186, 270, 271, 274, 275], "6590": [212, 285], "66": [68, 85, 132], "660": [48, 85], "664": [163, 194], "6652": 285, "666": [163, 171], "66666667": 24, "6667": [244, 312], "667": [85, 149], "668": [163, 186], "6682": 312, "669": [85, 117], "67": 390, "672": [85, 96, 119], "67326": 283, "6733": 210, "676": [85, 110], "678": [270, 271, 272, 273, 274, 275], "688": [38, 85], "68811989": 381, "689": [85, 116], "69314718": 417, "696": [85, 121, 161, 163, 175], "7": [10, 13, 23, 38, 55, 62, 85, 145, 163, 165, 171, 172, 173, 174, 175, 176, 177, 178, 179, 201, 216, 217, 218, 220, 222, 227, 230, 232, 233, 234, 245, 255, 266, 277, 282, 283, 284, 287, 292, 293, 294, 295, 298, 302, 303, 308, 310, 312, 313, 315, 319, 320, 323, 324, 327, 331, 332, 334, 335, 377, 380, 383, 386, 388, 389, 390, 394, 396, 398, 402, 416, 420, 428, 429, 432, 433, 434, 449, 452, 453, 454, 458, 459, 460, 461, 462, 464, 466], "70": [7, 8, 85, 106], "7001": 313, "704": [58, 85, 126], "706": [85, 89, 163, 166], "70710678": [19, 424], "708": [45, 85], "7132": 85, "7141": 85, "7147": 316, "715": [85, 99], "717": [46, 85, 163, 195], "7182818": 416, "72": [92, 96, 97], "726791": 85, "731": [163, 188], "7311": [212, 284, 285], "739": [83, 85], "74": 390, "745": [163, 187], "748": [79, 85], "75": [232, 310, 315, 360, 402], "755": [85, 101], "7581": 210, "760": [85, 104, 144, 163, 171], "76159416": [286, 431], "7616": [213, 287], "76219569": 414, "7635": 283, "767": [42, 85], "768": [31, 32, 34, 35, 37, 39, 40, 77, 162, 163, 166, 180, 190], "770": [36, 85], "772": 395, "774": [85, 100], "778": [85, 133], "78": [85, 122], "78357324": 381, "784": 15, "78539816": 411, "790": [34, 85], "791": [85, 127], "79172504": 379, "792": [85, 124], "795": [62, 85], "796": [163, 186], "797": [85, 119], "7x7": 152, "8": [22, 26, 37, 38, 54, 59, 85, 108, 112, 115, 118, 124, 125, 126, 127, 128, 129, 132, 141, 142, 143, 155, 156, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 184, 200, 201, 203, 215, 216, 217, 218, 220, 222, 227, 230, 232, 233, 244, 245, 246, 247, 255, 259, 260, 261, 265, 277, 278, 283, 284, 287, 289, 290, 292, 293, 294, 295, 298, 300, 301, 302, 303, 308, 310, 312, 315, 319, 320, 323, 324, 327, 328, 329, 331, 332, 334, 335, 339, 340, 341, 342, 343, 356, 363, 364, 365, 366, 367, 368, 377, 380, 387, 388, 389, 390, 394, 395, 397, 398, 415, 420, 428, 429, 432, 433, 434, 449, 453, 454, 458, 459, 460, 461, 462, 464, 466], "80": [5, 6, 7, 8, 96], "800": [46, 50, 85], "8005": 313, "808": [85, 115], "817": [75, 85], "818": 85, "8182": 297, "82": [33, 85, 163, 177, 230], "821": [85, 132], "83": [85, 128], "832": [81, 85], "833": 85, "84": [86, 88, 89], "840": [29, 49, 79, 85], "8413": [206, 277], "842": [163, 189], "847": [84, 85], "848": [85, 132, 147, 163, 167], "856": [55, 85, 163, 173], "85772238": 286, "8584": 283, "86": [79, 85, 163, 191], "862": [85, 151], "863": [85, 146], "864": [85, 98, 117], "868": [85, 134], "869": [163, 185], "87": [163, 180, 184], "872": [85, 95, 110, 131], "876": [270, 271, 274, 275, 383], "88": [41, 46, 85, 97, 127, 138], "8808": [212, 284, 285], "882": [163, 177], "884": [43, 85], "886": [85, 121], "887": 395, "891773": 379, "8944": 244, "89442719": 19, "895": [85, 142], "896": [85, 139], "9": [0, 1, 3, 8, 26, 39, 40, 51, 63, 77, 85, 99, 217, 220, 222, 230, 232, 245, 255, 292, 293, 294, 295, 298, 302, 308, 310, 312, 319, 320, 323, 327, 331, 332, 334, 349, 352, 360, 361, 363, 364, 365, 366, 367, 368, 370, 377, 380, 383, 386, 390, 394, 395, 396, 398, 426, 427, 453, 454, 458, 459, 460, 461, 462, 464], "904": [85, 129], "90709145": 382, "9091": 297, "9120": 316, "9163": 316, "920": [163, 166], "922": [163, 184], "928": [57, 85], "929": [85, 108], "93": [85, 137], "94": 113, "944": [31, 85], "9486833": 25, "949e": [399, 400], "95": 354, "9526": 211, "9545": 277, "955": [85, 136], "956": [49, 85], "958": [85, 134], "96": [31, 32, 39, 40, 77, 97, 178, 179], "960": 96, "96366276": 379, "9640": 287, "96402758": 431, "968": [53, 85], "973": [85, 122], "978": [38, 55, 85], "984": [76, 85, 138, 163, 177], "99": 368, "9957": 316, "997": [160, 163], "99734545": 382, "999": [0, 363, 364, 365, 366, 367], "A": [1, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 39, 60, 82, 85, 86, 90, 93, 103, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 145, 146, 147, 148, 149, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 197, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 230, 232, 233, 234, 238, 239, 240, 242, 243, 244, 257, 266, 290, 297, 298, 300, 301, 302, 303, 305, 312, 313, 316, 318, 319, 320, 321, 322, 323, 324, 325, 337, 339, 340, 341, 342, 343, 347, 348, 349, 354, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 375, 377, 379, 380, 381, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 464], "As": 382, "At": [15, 345, 356], "Be": [0, 10], "By": [0, 2, 3, 15, 93, 100, 113, 114, 115, 116, 117, 118, 119, 120, 198, 258, 347, 367, 374, 377, 379, 380, 381, 383, 458, 468], "For": [2, 3, 4, 13, 17, 18, 19, 21, 22, 23, 24, 26, 98, 99, 100, 102, 203, 205, 206, 208, 209, 210, 211, 213, 230, 232, 244, 257, 270, 271, 274, 275, 283, 292, 293, 294, 295, 308, 310, 318, 319, 320, 322, 323, 324, 347, 359, 382, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 416, 417, 418, 419, 420, 421, 424, 426, 428, 429, 432, 433, 434, 444, 446, 450, 452, 455, 468], "If": [0, 1, 2, 5, 6, 7, 8, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 112, 155, 197, 199, 200, 201, 202, 205, 206, 208, 209, 210, 211, 213, 215, 216, 217, 218, 223, 227, 230, 232, 239, 242, 246, 247, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 270, 271, 289, 290, 292, 293, 294, 299, 308, 310, 312, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 325, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 345, 348, 350, 351, 352, 353, 354, 355, 356, 357, 363, 364, 368, 369, 372, 376, 377, 379, 380, 381, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 455, 456, 458, 462, 463, 465, 466], "In": [3, 24, 216, 217, 218, 313, 316, 373, 374, 375, 457, 468], "It": [1, 2, 3, 7, 10, 15, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 52, 55, 56, 57, 58, 73, 74, 75, 85, 86, 87, 88, 89, 91, 92, 94, 102, 112, 113, 114, 115, 116, 117, 118, 119, 120, 133, 145, 151, 163, 168, 175, 177, 179, 186, 188, 197, 199, 200, 201, 202, 203, 223, 227, 230, 255, 257, 258, 259, 260, 261, 265, 277, 278, 281, 282, 287, 289, 290, 299, 305, 308, 309, 312, 313, 314, 315, 316, 327, 328, 329, 337, 339, 340, 342, 345, 347, 348, 359, 360, 366, 368, 369, 370, 372, 374, 382, 385, 386, 387, 388, 391, 392, 393, 395, 396, 402, 419, 421, 438, 440, 443, 444, 445, 446, 447, 449, 450, 451, 452, 456, 457, 458], "Its": [26, 384], "Near": 24, "No": [220, 223], "Not": 309, "One": [87, 468], "Such": 385, "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468], "There": 447, "These": [4, 10, 16, 19, 22, 25, 27, 30, 69, 70, 71, 72, 98, 99, 100, 101, 102, 121, 122, 141, 142, 143, 151, 154, 166, 297, 300, 301, 302, 303, 312, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 325, 369, 384, 468], "To": [3, 15, 85, 163, 349, 359, 377, 381, 384, 399, 400, 443, 468], "With": [3, 85, 172, 176, 220, 223, 458, 468], "_": [12, 13, 14, 22, 199, 200, 202, 203, 205, 206, 208, 209, 210, 211, 213, 232, 255, 257, 305, 319, 320, 322, 323, 324, 330, 331, 332, 333, 334, 335, 337, 360, 361, 363, 364, 365, 366, 368, 370, 388, 389, 390, 394, 432, 433, 453, 454, 459, 460, 461, 463, 464, 465], "_1": [19, 199, 200, 201, 202, 203, 230, 308, 394, 438, 440, 456], "_2": [19, 199, 200, 201, 202, 203, 230, 308, 394, 438, 440, 456], "__call__": [1, 197], "__getitem__": [0, 2, 3, 5, 6, 7, 8], "__init__": [0, 1, 2, 3, 15, 28, 30, 39, 40, 59, 60, 73, 77, 82, 86, 90, 91, 92, 93, 103, 145, 152, 155, 164, 165, 196, 197, 198, 199, 200, 201, 202, 223, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 297, 298, 299, 300, 301, 305, 308, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 347, 348, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 376, 385, 457, 458], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5, 6, 7, 8], "__repr__": 348, "__setattr__": 197, "_activ": 212, "_arraylik": [398, 400, 404, 406], "_arraylikeint": 444, "_arrayorscalar": [196, 198, 377, 385, 435], "_backward_op": 15, "_base_activ": 86, "_base_dtyp": [399, 402], "_block": 298, "_builtinnumer": 385, "_c": 460, "_decai": 366, "_devicetyp": [377, 379, 380, 381, 383, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406], "_dtype_bit": 372, "_einopspattern": [12, 13, 14, 305], "_fanmod": [270, 271], "_grad_en": [373, 375], "_i": [19, 23, 212, 223, 230, 285, 299, 315, 318, 325, 330, 333, 385, 388, 389, 391, 392, 394, 395, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 438, 440, 446, 450, 455, 456], "_in": [270, 271, 274, 275], "_interpolatetyp": 345, "_j": [212, 285, 330, 333, 394, 420, 428, 433, 434], "_k": 451, "_layer": [340, 342], "_left": 257, "_make_lay": 145, "_mlphead": 77, "_mlx_dtype": 372, "_mlxarrai": 385, "_modul": 197, "_n": [19, 199, 200, 201, 202, 203, 438, 440, 456], "_np_dtype": 372, "_out": [270, 271, 274, 275, 446, 452], "_p": [23, 244, 255, 337], "_pad": 444, "_paddingstr": [259, 260, 261, 262, 263, 264, 292, 293, 294], "_paramet": 197, "_reducestr": 13, "_reductiontyp": [233, 234, 235, 237, 238, 312, 313, 314, 315, 316], "_resnestbottleneck": 103, "_right": 257, "_scalar": [215, 268, 272, 273, 274, 275, 290, 397, 402, 412, 442], "_scaled_channel": 30, "_scaled_num_block": 30, "_seresnetbottleneck": [131, 132, 135], "_seresnetmodul": [133, 134], "_shapelik": [155, 243, 325, 380, 403, 405, 436, 447, 450, 455], "_size": [245, 246, 247, 298], "_skresnetmodul": [141, 142, 143], "_slope": 280, "_statedict": 348, "_t": [367, 368], "_tensor": [289, 339, 341, 343], "_tensorop": 385, "_u": 24, "_v": 24, "_valu": [412, 444], "_weight": 337, "_width": 444, "a_": [30, 341], "a_1": [289, 449], "a_2": 449, "a_h": 289, "a_i": [289, 391, 392, 395, 449], "a_k": 449, "aaai": 85, "ab": [356, 407], "abc": [2, 348], "abil": [85, 468], "about": [10, 155], "abov": [373, 375, 382, 398, 401, 453], "abs_pos_emb": [178, 179], "absolut": [22, 23, 30, 178, 179, 235, 356, 365, 408], "abstract": [2, 3, 166, 168, 347, 348, 359, 360, 368, 370, 372], "abstractmethod": 348, "abund": [48, 101], "acceler": [85, 283, 318, 319, 320, 351, 360, 366, 368, 370, 385], "accept": [309, 379], "access": [0, 2, 3, 4, 5, 6, 7, 8, 124, 125, 126, 127, 128, 129, 196, 198, 199, 200, 201, 202, 203, 447], "accord": [12, 14, 223, 257, 292, 293, 294, 305, 308, 310, 313, 316, 361, 362, 363, 364, 365, 366, 367, 433, 436], "accordingli": [18, 429], "account": [22, 24, 25, 286], "accumul": [360, 361, 362, 385, 386, 387, 391, 392, 393, 396, 436], "accur": 132, "accuraci": [46, 48, 49, 50, 51, 69, 70, 71, 72, 79, 81, 85, 90, 91, 92, 98, 99, 100, 101, 102, 135, 191, 192, 193], "achiev": [12, 85, 123, 124, 125, 126, 127, 128, 129, 172, 216, 217, 218, 245, 305, 327, 328, 329, 366, 463, 465], "across": [0, 5, 6, 10, 12, 13, 15, 30, 39, 52, 85, 94, 166, 171, 172, 173, 175, 176, 177, 179, 187, 196, 200, 203, 240, 243, 245, 246, 247, 274, 275, 318, 319, 320, 322, 323, 324, 325, 327, 328, 329, 372, 377, 379, 380, 381, 382, 383, 384, 399, 400, 420, 434], "act": [15, 364, 448], "act_lay": 159, "activ": [28, 39, 85, 86, 96, 97, 113, 117, 118, 130, 145, 152, 159, 199, 203, 205, 206, 208, 209, 210, 211, 212, 213, 221, 259, 260, 261, 265, 266, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 297, 298, 300, 301, 302, 303, 312, 313, 316, 318, 319, 320, 325, 339, 341, 343, 419, 421], "actual": [198, 312, 313, 315, 316, 461], "acycl": 15, "ad": [14, 54, 85, 92, 112, 163, 197, 199, 200, 201, 202, 203, 216, 217, 218, 222, 230, 232, 233, 234, 239, 240, 242, 243, 248, 249, 250, 252, 253, 254, 259, 260, 261, 289, 292, 293, 294, 295, 298, 312, 313, 318, 319, 320, 321, 322, 323, 324, 325, 330, 331, 332, 333, 334, 335, 339, 341, 343, 361, 362, 363, 364, 365, 366, 367, 368, 376, 455, 468], "adadelta": 371, "adagrad": [361, 371], "adam": [85, 364, 365, 366, 367, 371], "adamax": 371, "adamw": 371, "adapt": [10, 28, 73, 85, 86, 98, 101, 103, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152, 245, 246, 247, 265, 266, 327, 328, 329, 352, 356, 361, 362, 363, 366, 367, 368, 369], "adaptive_avg_pool1d": [229, 251, 327], "adaptive_avg_pool2d": [229, 251, 328], "adaptive_avg_pool3d": [229, 251, 329], "adaptiveavgpool1d": [307, 336], "adaptiveavgpool2d": [28, 130, 145, 152, 307, 336], "adaptiveavgpool3d": [307, 336], "add": [4, 15, 197, 199, 200, 203, 230, 232, 289, 292, 293, 294, 308, 310, 325, 348, 360, 363, 368, 370, 374, 407, 444, 455], "add_bias_kv": 289, "add_modul": [197, 203], "add_param_group": 348, "add_zero_attn": 289, "addit": [4, 22, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 200, 203, 230, 232, 239, 242, 308, 310, 318, 319, 320, 322, 323, 324, 360, 366, 374, 384, 386, 451], "addition": 366, "address": [313, 316, 363, 364, 367], "adjust": [83, 90, 92, 94, 102, 136, 137, 138, 139, 140, 144, 245, 246, 247, 266, 297, 298, 318, 319, 320, 322, 323, 324, 325, 327, 328, 329, 349, 350, 353, 354, 355, 356, 357, 359, 363, 367, 368, 369, 440, 456], "adopt": 385, "advanc": [3, 15, 24, 60, 77, 85, 91, 101, 117, 163, 167, 169, 184, 186, 200, 203, 216, 217, 218, 245, 246, 247, 327, 328, 329, 347, 360], "advantag": [84, 375], "affect": [373, 445, 450, 457], "affin": [259, 260, 261, 318, 319, 320, 322, 323, 324, 325, 464], "after": [10, 14, 15, 22, 28, 96, 97, 152, 178, 179, 198, 199, 200, 201, 202, 203, 227, 265, 266, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 293, 294, 297, 300, 301, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 322, 325, 330, 331, 332, 333, 334, 335, 339, 341, 343, 349, 356, 364, 375, 385, 386, 387, 391, 392, 393, 395, 396, 402, 444, 449, 458], "afterward": 375, "aggreg": [10, 85, 266, 394, 446, 452], "agnost": 372, "aim": 4, "al": [74, 85, 163, 339], "alex": [5, 6, 85], "alexei": 163, "alexnet": 152, "algebra": [16, 401], "algorithm": [7, 22, 24, 25, 348, 359, 384], "align": [10, 26, 101, 257, 345, 389, 390, 429], "align_corn": [257, 345], "all": [0, 3, 4, 15, 25, 59, 85, 163, 197, 199, 200, 201, 202, 203, 217, 218, 244, 245, 246, 247, 249, 250, 253, 254, 257, 260, 261, 266, 280, 281, 289, 294, 327, 328, 329, 331, 332, 335, 339, 347, 348, 353, 359, 360, 363, 368, 369, 370, 385, 395, 419, 420, 421, 428, 432, 434, 438, 439, 440, 446, 450, 451, 452, 453, 454, 456, 459, 460, 468], "allevi": [85, 205], "alloc": [15, 399, 400], "allow": [0, 1, 3, 4, 10, 12, 24, 25, 84, 85, 86, 93, 96, 97, 99, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 123, 136, 137, 138, 139, 140, 144, 165, 166, 178, 182, 183, 184, 185, 186, 188, 198, 199, 200, 201, 202, 203, 205, 208, 209, 212, 218, 220, 258, 266, 276, 277, 280, 283, 284, 285, 287, 290, 292, 293, 294, 305, 337, 345, 347, 349, 350, 352, 354, 356, 361, 362, 374, 397, 403, 405, 406, 429, 433, 435, 443, 457, 458, 468], "along": [10, 13, 14, 212, 244, 257, 266, 285, 389, 390, 394, 419, 420, 421, 428, 432, 434, 436, 437, 438, 440, 443, 446, 448, 449, 451, 452, 455, 456, 463, 465], "alongsid": 196, "alpha": [205, 208, 210, 221, 276, 283, 297, 360, 368], "alpha_dropout": [228, 229, 297], "alphadropout": [304, 307], "alphadropoutmodel": 297, "alreadi": 376, "also": [155, 205, 206, 208, 209, 210, 211, 213, 230, 232, 257, 366, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 436, 438, 440, 444, 445, 446, 447, 450, 451, 452, 455, 456], "alter": [203, 447, 448], "altern": [1, 15, 277, 361, 390], "alwai": [10, 198, 349, 442, 445, 462, 463, 465], "among": [75, 266], "amount": [216, 217, 218, 248, 249, 250, 252, 253, 254, 262, 263, 264, 295, 366], "ampl": 98, "amsgrad": [363, 364], "an": [0, 1, 3, 10, 12, 13, 14, 15, 19, 21, 22, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 94, 95, 96, 97, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 151, 152, 153, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 199, 200, 201, 202, 203, 206, 216, 217, 218, 220, 221, 224, 225, 226, 227, 230, 246, 247, 255, 257, 258, 262, 263, 264, 266, 274, 275, 276, 282, 284, 289, 292, 293, 294, 295, 297, 299, 300, 301, 302, 303, 305, 308, 310, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 340, 342, 343, 348, 349, 354, 359, 360, 363, 366, 368, 372, 375, 376, 385, 390, 398, 401, 412, 420, 428, 434, 436, 438, 446, 449, 452, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468], "analog": [446, 452], "analysi": [4, 265, 292, 293, 294, 324, 330, 332, 333, 335], "andreetto": 85, "andrew": 85, "angl": [258, 464], "ani": [0, 1, 2, 3, 12, 15, 22, 24, 29, 112, 140, 151, 153, 196, 197, 198, 199, 201, 202, 205, 206, 208, 209, 210, 211, 213, 221, 224, 230, 232, 239, 242, 284, 305, 325, 347, 348, 353, 373, 375, 376, 382, 385, 397, 398, 399, 401, 403, 404, 405, 406, 419, 421, 433, 435, 438, 439, 440, 444, 446, 451, 452, 455, 456, 457, 468], "anneal": 350, "anoth": [93, 202, 396, 404, 406, 458, 468], "api": [4, 15, 327, 328, 329, 468], "appear": 348, "append": [200, 202, 203, 289], "appl": [15, 372, 385], "appli": [2, 4, 5, 6, 7, 8, 10, 12, 13, 22, 28, 30, 39, 59, 60, 77, 85, 123, 140, 150, 152, 156, 163, 178, 179, 190, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 240, 244, 259, 260, 261, 265, 266, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 293, 294, 297, 298, 299, 300, 301, 302, 303, 305, 308, 310, 312, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 340, 341, 342, 343, 353, 354, 360, 361, 362, 364, 365, 366, 367, 390, 444, 446, 453, 454, 457, 460, 462, 463, 464, 465, 466, 468], "applic": [4, 10, 13, 15, 24, 41, 42, 43, 46, 48, 53, 54, 80, 83, 84, 85, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 195, 216, 242, 292, 293, 294, 308, 310, 384, 397, 405, 444, 449, 453, 454, 466], "approach": [3, 10, 12, 14, 82, 159, 203, 305, 350, 364], "appropri": [24, 85, 92, 96, 97, 197, 201, 203, 223, 292, 293, 294, 297, 300, 301, 313, 331, 332, 372, 373, 375], "approx": 210, "approxim": [24, 206, 277, 278, 279, 331, 334], "ar": [1, 2, 3, 4, 13, 14, 15, 18, 19, 21, 22, 24, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 69, 70, 71, 72, 73, 74, 75, 85, 98, 100, 101, 154, 160, 161, 162, 165, 166, 167, 168, 169, 170, 174, 196, 197, 198, 199, 200, 201, 202, 203, 212, 216, 217, 218, 220, 223, 230, 232, 240, 246, 247, 255, 257, 262, 263, 264, 265, 266, 270, 271, 273, 274, 275, 278, 285, 289, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 308, 310, 313, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 343, 345, 347, 351, 355, 360, 363, 364, 366, 367, 368, 369, 370, 373, 375, 376, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 400, 402, 408, 412, 416, 419, 420, 421, 422, 423, 428, 429, 432, 433, 436, 437, 438, 443, 446, 447, 448, 449, 452, 453, 454, 457, 458, 459, 461, 462, 466, 468], "arang": 407, "arbitrari": [200, 309, 399, 400, 412, 417, 418, 420, 424, 426, 428, 433, 434], "arcco": 407, "arch": 376, "architectur": [10, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 170, 172, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 199, 200, 201, 202, 203, 206, 265, 278, 279, 281, 286, 289, 290, 305, 308, 309, 339, 347, 376], "arcsin": 407, "arctan": 407, "area": [257, 345], "arg": [197, 309, 376, 399], "argument": [3, 4, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 86, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 197, 203, 309, 379, 399, 433], "around": [19, 258, 287], "arr": [438, 440, 451, 456], "arrai": [15, 196, 198, 374, 377, 385, 390, 398, 400, 404, 406, 435, 445, 446, 458, 468], "art": [48, 85, 192], "artifici": 85, "arxiv": [85, 163], "asgd": 371, "ashish": 163, "aspect": 466, "assign": [15, 197, 199, 201, 203, 257, 313, 316, 442], "assist": [73, 74, 75], "associ": [201, 202], "assum": [0, 1, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 348, 359, 373], "astyp": 385, "attempt": [199, 203], "attend": [215, 290, 340, 342, 343], "attent": [30, 85, 103, 110, 111, 140, 154, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 202, 230, 265, 289, 290, 339, 340, 341, 342, 343], "attn": [215, 290], "attn_drop_r": [164, 165, 178, 179], "attn_mask": [215, 290], "atto": [45, 78, 85], "attribut": [15, 197, 349], "audio": 292, "augment": [3, 4, 133, 258, 384, 446, 452, 457, 461, 462, 463, 464, 465, 468], "auto_pars": 372, "autodiff": 385, "autoencod": 85, "autograd": [15, 347], "automat": [4, 198, 199, 200, 201, 202, 347, 377, 379, 380, 381, 383, 385, 399, 400, 406, 443, 458], "autoregress": [215, 290], "auxiliari": [73, 74, 75, 196], "avail": [4, 5, 6, 7, 8], "avd": 103, "averag": [13, 28, 87, 88, 89, 103, 112, 123, 130, 140, 145, 152, 196, 245, 246, 247, 248, 249, 250, 257, 265, 266, 315, 327, 328, 329, 330, 331, 332, 360, 361, 363, 368, 420], "avg_down": 112, "avg_pool": [330, 331, 332], "avg_pool1d": [229, 251], "avg_pool2d": [229, 251], "avg_pool3d": [229, 251], "avgpool": [28, 130, 145, 152, 266], "avgpool1d": [307, 336], "avgpool1dmodel": 330, "avgpool2d": [307, 336], "avgpool2dmodel": 331, "avgpool3d": [307, 336], "avgpool3dmodel": 332, "avoid": [2, 3, 12, 13, 24, 60, 174, 201, 244, 305, 351, 375, 402], "awar": 187, "ax": [10, 12, 13, 14, 16, 305, 374, 419, 420, 421, 428, 429, 433, 434, 436, 446, 450, 452], "axi": [13, 23, 212, 244, 285, 389, 390, 419, 420, 421, 428, 434, 437, 438, 439, 440, 443, 444, 446, 448, 449, 450, 451, 452, 455, 456, 463, 465], "axis1": 429, "axis2": 429, "b": [12, 13, 14, 16, 26, 30, 85, 163, 191, 230, 232, 273, 292, 293, 294, 305, 308, 310, 374, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 436, 438, 440, 443, 451, 456, 462], "b0": [59, 61, 85, 163, 171], "b1": [59, 62, 85, 163, 172, 173], "b2": [59, 63, 85, 163, 173, 174], "b3": [59, 64, 85, 163, 175], "b4": [59, 65, 85, 163, 176], "b5": [59, 66, 85, 163, 177], "b6": [59, 67, 85], "b7": [59, 68, 85], "b_": 30, "b_1": [341, 343], "b_2": [341, 343], "b_i": [391, 392, 395], "b_k": 289, "b_v": 289, "back": [15, 257, 289, 331, 332, 376, 389, 394, 437, 446, 452], "backbon": [141, 142, 143, 163, 175], "backend": 385, "backpropag": [10, 15, 18, 19, 21, 22, 24, 25, 27, 85, 196, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 230, 232, 257, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 292, 293, 294, 295, 297, 298, 300, 301, 302, 303, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 325, 330, 331, 332, 333, 334, 335, 337, 347, 375, 381, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 416, 419, 421, 435, 436, 437, 442, 444, 446, 448, 452, 453, 454, 458], "backward": [15, 196, 198, 295, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 385, 402, 437, 442, 448, 458], "balanc": [31, 32, 33, 34, 35, 36, 37, 38, 43, 46, 47, 50, 60, 69, 70, 71, 72, 81, 85, 92, 93, 99, 100, 102, 124, 125, 126, 127, 128, 129, 160, 166, 169, 191, 194, 314], "bar": 360, "base": [3, 12, 13, 15, 16, 21, 22, 25, 26, 30, 41, 44, 46, 54, 73, 74, 75, 76, 79, 82, 83, 84, 85, 86, 93, 99, 100, 102, 103, 110, 111, 123, 124, 125, 126, 127, 128, 129, 140, 145, 150, 156, 157, 163, 180, 184, 191, 195, 197, 199, 200, 201, 202, 215, 220, 230, 245, 246, 247, 266, 290, 295, 297, 305, 313, 314, 327, 328, 329, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 364, 368, 369, 370, 372, 377, 386, 387, 391, 392, 393, 395, 396, 406, 416, 417, 418, 419, 421, 433, 443, 444, 449, 461, 462, 463, 464, 465], "base_dtyp": 372, "base_lr": 351, "base_width": [103, 104, 105, 106, 107, 108, 109, 121, 122, 123, 140], "baselin": 163, "basic": [28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 150, 152, 155, 215, 216, 217, 218, 222, 223, 245, 246, 247, 255, 259, 260, 261, 262, 263, 264, 265, 270, 271, 274, 275, 290, 298, 327, 328, 329, 337, 402, 436, 459, 460, 461, 462, 463, 464, 465, 466], "basicblock": [112, 116, 119], "batch": [1, 2, 3, 14, 15, 16, 22, 25, 27, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 76, 77, 83, 84, 130, 136, 137, 138, 139, 144, 215, 216, 217, 218, 220, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 257, 258, 259, 260, 261, 289, 290, 292, 293, 294, 295, 308, 310, 312, 313, 316, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 331, 332, 333, 334, 335, 339, 340, 341, 342, 343, 367, 390, 429, 459, 460, 461, 462, 464, 466], "batch_norm": [229, 241, 318, 319, 320], "batch_norm1": 203, "batch_norm2": 203, "batch_siz": [1, 2, 3, 150, 266], "batch_tensor": 429, "batchnorm": [259, 260, 261], "batchnorm1d": [259, 307, 326], "batchnorm1dmodel": 318, "batchnorm2d": [203, 260, 307, 326], "batchnorm2dmodel": 319, "batchnorm3d": [261, 307, 326], "batchnorm3dmodel": 320, "bceloss": [307, 317], "becaus": [2, 380], "becom": [23, 197, 361, 369], "been": [286, 442], "befor": [10, 14, 22, 30, 130, 155, 198, 215, 290, 339, 341, 343, 350, 356, 360, 366, 375, 382, 444, 448, 460, 468], "begin": [1, 23, 205, 208, 209, 210, 223, 276, 278, 279, 280, 281, 283, 299, 314, 315, 316, 330, 331, 332, 333, 334, 335, 367, 369, 374, 384, 391, 392, 394, 408, 412, 419, 421, 423, 442, 444, 453, 454], "behav": [299, 314, 432], "behavior": [10, 15, 85, 200, 203, 215, 244, 290, 295, 353, 373, 384, 390, 400, 468], "being": [202, 258, 297, 300, 301, 302, 303, 367, 373, 375, 385, 437, 438, 440, 456], "belong": 0, "below": [25, 31, 32, 33, 34, 35, 36, 37, 38, 74, 75, 76, 83, 84, 86, 87, 88, 89, 390, 398, 401, 454], "benchmark": [5, 6, 7, 8, 15, 101], "benefici": 203, "benefit": [102, 205, 347, 366], "bernoulli": [297, 300, 301, 302, 303, 378], "best": [101, 270, 271, 274, 275], "beta": [240, 318, 319, 320, 321, 322, 323, 324, 325, 363, 364, 365, 366, 367], "beta1": [363, 364, 365, 366, 367], "beta2": [363, 364, 365, 366, 367], "beta_1": [363, 364, 365, 366, 367], "beta_2": [363, 364, 365, 366, 367], "beta_c": [240, 321], "better": [21, 85, 100, 152, 173, 174, 179, 187, 206, 270, 271, 274, 275, 286, 298, 322, 323, 324, 347, 356, 357, 364, 366, 368, 460], "between": [43, 46, 50, 69, 70, 71, 72, 81, 85, 93, 99, 100, 102, 124, 125, 126, 127, 128, 129, 169, 191, 194, 197, 216, 217, 218, 220, 230, 235, 259, 260, 261, 262, 263, 264, 266, 282, 292, 293, 294, 295, 297, 300, 301, 302, 303, 308, 312, 313, 314, 315, 316, 351, 356, 357, 360, 368, 369, 370, 384, 386, 387, 390, 393, 396, 397, 402, 434, 462, 463, 465, 466], "beyond": [10, 200, 356], "bia": [30, 164, 165, 171, 172, 173, 175, 176, 177, 178, 179, 216, 217, 218, 230, 232, 239, 242, 243, 259, 260, 261, 262, 263, 264, 289, 292, 293, 294, 308, 310, 318, 319, 320, 322, 323, 324, 325, 339, 341, 343, 363, 364, 365, 366, 367], "bias": [159, 163, 292, 293, 294, 310, 325, 347], "bias1": 201, "bias2": 201, "big": [163, 262, 263, 264], "bilinear": [229, 231, 257, 307, 311, 345], "bilinearmodel": 308, "binari": [211, 233, 284, 297, 300, 301, 302, 303, 312], "binary_cross_entropi": [229, 236], "bit": 372, "black": 15, "blend": 102, "block": [30, 31, 32, 33, 34, 35, 36, 37, 38, 54, 55, 56, 57, 58, 59, 60, 77, 82, 85, 91, 92, 93, 95, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 197, 220, 222, 223, 259, 260, 261, 266, 292, 293, 294, 295, 298, 375], "block1": [155, 347], "block2": [155, 347], "block_arg": [112, 130], "block_cfg": 60, "block_config": 54, "block_siz": [222, 298], "block_typ": 30, "blue": 462, "bmatrix": 394, "bn": [259, 260, 261], "bn_affin": [259, 260, 261], "bool": [1, 5, 6, 7, 8, 23, 27, 59, 73, 74, 75, 103, 112, 155, 164, 165, 171, 172, 173, 175, 176, 177, 178, 179, 197, 198, 215, 221, 223, 224, 225, 226, 227, 239, 242, 257, 259, 260, 261, 262, 263, 264, 289, 290, 292, 293, 294, 299, 308, 310, 318, 319, 320, 322, 323, 324, 325, 339, 340, 341, 342, 343, 345, 350, 351, 352, 353, 354, 355, 356, 357, 363, 364, 368, 372, 373, 377, 379, 380, 381, 383, 385, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 419, 420, 421, 428, 434, 435, 458], "boolean": 442, "boost": 98, "both": [30, 93, 159, 165, 166, 178, 180, 181, 182, 183, 216, 232, 246, 248, 252, 259, 277, 286, 292, 293, 295, 328, 330, 331, 333, 334, 343, 345, 372, 388, 389, 390, 394, 398, 443, 449, 466], "bottleneck": [54, 85, 91, 92, 95, 112, 113, 114, 115, 117, 118, 120, 121, 122, 123, 265], "bottleneck_cfg": 92, "bottom": 257, "bound": [271, 273, 275, 351, 369, 383, 385], "box": [4, 15], "branch": [73, 74, 75, 85, 266], "break": [10, 347], "brief": 468, "bright": 468, "bring": [10, 305], "broadcast": [14, 15, 302, 303, 420, 428, 434, 447, 455], "broadcast_to": 441, "budget": [50, 175], "buffer": [15, 360, 366, 368, 370], "build": [15, 40, 60, 84, 85, 92, 93, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 140, 141, 142, 143, 156, 189, 197, 200, 203, 347, 468], "built": [3, 15, 113, 117, 118, 203, 347, 372], "burg": 8, "c": [5, 6, 8, 12, 30, 85, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 220, 222, 225, 226, 227, 234, 238, 239, 240, 242, 245, 246, 247, 248, 249, 250, 252, 253, 254, 257, 258, 265, 295, 302, 303, 305, 313, 316, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335, 351, 374, 440, 456, 460], "c_": [292, 293, 294], "c_in": [216, 217, 218, 259, 260, 261], "c_out": [216, 217, 218], "calcul": [0, 1, 16, 198, 345, 361, 362, 365, 366, 367, 375, 380], "calculu": [17, 24], "call": [1, 15, 197, 349, 373, 376, 386, 387, 390, 391, 392, 393, 395, 396], "callabl": [171, 172, 173, 175, 176, 177, 339, 341, 343, 348, 351, 354, 376, 385, 457], "can": [0, 2, 3, 4, 12, 13, 15, 17, 19, 21, 22, 24, 25, 27, 59, 85, 92, 98, 99, 101, 102, 112, 121, 122, 136, 137, 138, 139, 150, 151, 155, 196, 198, 199, 200, 201, 202, 203, 208, 216, 217, 218, 223, 258, 266, 277, 280, 282, 287, 292, 293, 294, 295, 322, 323, 324, 331, 332, 333, 334, 335, 337, 340, 347, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 373, 374, 375, 383, 384, 385, 390, 399, 400, 401, 403, 405, 406, 420, 428, 429, 434, 436, 440, 443, 444, 446, 447, 452, 455, 456, 457, 458, 461, 463, 464, 465, 468], "cannot": [18, 19, 21, 22, 25, 26, 27, 377, 437], "cap": 282, "capabl": [10, 30, 52, 110, 111, 163, 397, 398, 401, 403, 404, 405, 406], "capac": [41, 42, 43, 49, 53, 85, 90, 98, 121, 122, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144, 158, 163, 167, 172, 176, 177, 186, 192], "captur": [15, 30, 85, 140, 159, 163, 166, 167, 168, 178, 180, 181, 182, 183, 184, 185, 188, 220, 292, 293, 294, 308], "cardin": [85, 103, 104, 105, 106, 107, 108, 109, 110, 111, 123, 124, 125, 126, 127, 128, 129, 140], "care": 375, "carefulli": 349, "cartesian": 443, "case": [3, 23, 86, 92, 94, 205, 208, 209, 210, 223, 276, 278, 279, 280, 281, 283, 299, 314, 315, 316, 330, 331, 332, 333, 334, 335, 347, 355, 362, 367, 369, 374, 391, 392, 408, 412, 419, 421, 423, 442, 444, 453, 454, 468], "categor": [255, 337], "categori": [7, 113, 114, 115, 116, 117, 118, 119, 120, 337, 372], "caus": [3, 24, 349, 360, 368, 370], "causal": [215, 290], "cautiou": [0, 10], "cdot": [15, 17, 18, 21, 22, 23, 26, 205, 206, 208, 210, 211, 215, 216, 217, 218, 230, 232, 240, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 265, 274, 275, 277, 278, 279, 284, 286, 290, 295, 297, 308, 310, 312, 313, 314, 316, 318, 319, 320, 321, 322, 323, 324, 325, 337, 350, 351, 352, 354, 355, 357, 361, 362, 363, 364, 365, 366, 367, 369, 388, 389, 390, 393, 395], "center": [258, 287, 368, 459, 468], "centercrop": [467, 468], "certain": [18, 206, 215, 230, 286, 290, 308, 343, 356, 363, 364, 373, 419, 421], "cfg": [93, 96, 97], "chain": [15, 21, 22, 203, 457, 468], "challeng": [7, 85, 166], "cham": 85, "chanc": [462, 463, 465], "chang": [10, 85, 235, 314, 355, 369, 374, 375, 376, 385, 445, 447, 455, 462, 468], "chanlumerico": 15, "channel": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 54, 59, 85, 86, 87, 88, 89, 90, 92, 94, 96, 97, 103, 110, 111, 112, 123, 124, 125, 126, 127, 128, 129, 134, 136, 137, 138, 139, 144, 145, 150, 159, 160, 161, 162, 164, 165, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 216, 217, 218, 220, 225, 226, 227, 239, 240, 242, 245, 246, 247, 248, 249, 250, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 292, 293, 294, 302, 303, 318, 319, 320, 321, 322, 323, 324, 327, 330, 331, 332, 333, 334, 335, 460, 462, 466], "character": [121, 122], "check": [15, 373, 385, 459, 461], "checkpoint": 359, "chen": 85, "choic": [100, 102, 443], "choleski": 20, "chollet": 85, "choos": 85, "chosen": [297, 298, 349], "christian": 85, "christoph": 8, "chu": 85, "chunk": 441, "cifar": [5, 6], "cifar10": 9, "cifar100": 9, "cifar100_train": 6, "cifar10_train": 5, "clariti": [12, 13, 14], "class": [3, 4, 15, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 155, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 212, 223, 234, 238, 347, 359, 376, 468], "classic": 89, "classif": [4, 5, 6, 7, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 211, 212, 233, 234, 238, 284, 285, 312, 313, 316], "classifi": [28, 73, 74, 75, 86, 87, 88, 89, 112, 123, 140, 145, 150, 152], "cleaner": [1, 375, 390], "clear": [198, 399, 400, 402], "clf_in_featur": 86, "clf_layer": 86, "clip": [258, 278, 282, 369, 407], "clockwis": 258, "close": [21, 24, 283, 312, 368], "closer": 276, "closur": [348, 359], "cloth": 7, "cnn": [30, 85, 163], "co": [85, 350, 407, 424], "coatnet": [31, 32, 33, 34, 35, 36, 37, 38], "coatnet_0": 85, "coatnet_1": 85, "coatnet_2": 85, "coatnet_3": 85, "coatnet_4": 85, "coatnet_5": 85, "coatnet_6": 85, "coatnet_7": 85, "code": [10, 15, 22, 199, 201, 203, 373, 375, 384], "coeffici": [26, 59, 257, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370], "col": 220, "collaps": 10, "collect": [4, 16, 154, 199, 200, 202, 203, 359], "color": [462, 468], "colorjitt": 468, "column": [18, 19, 21, 25, 26, 27, 155, 220, 295, 401, 440, 443], "com": [7, 8, 15], "combin": [1, 3, 12, 30, 76, 82, 83, 85, 102, 144, 163, 167, 200, 203, 205, 206, 259, 260, 261, 265, 266, 277, 295, 298, 305, 313, 347, 366, 367, 420, 428, 434, 438, 468], "combined_dataset": [0, 1], "common": [180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 220, 258, 359, 372, 468], "commonli": [90, 91, 92, 94, 95, 96, 97, 100, 102, 206, 211, 212, 213, 216, 218, 223, 230, 237, 239, 242, 255, 258, 265, 274, 275, 278, 279, 282, 285, 290, 294, 312, 315, 316, 330, 331, 332, 333, 334, 335, 337, 339, 374, 403, 450, 458, 459, 460, 461, 463, 464, 465, 468], "compact": [44, 45, 47, 52, 81, 100, 171, 172], "compar": [30, 43, 44, 85, 121, 122, 152, 162, 165, 173, 384, 451], "compat": [4, 10, 15, 16, 140, 305, 309, 325, 347, 374, 384, 402, 436, 458, 468], "competit": [45, 51, 52], "complet": [156, 339, 340, 342], "complex": [2, 3, 10, 15, 19, 30, 42, 48, 53, 84, 101, 112, 115, 118, 119, 132, 134, 155, 158, 165, 166, 167, 168, 169, 173, 174, 175, 185, 196, 198, 199, 200, 203, 209, 215, 258, 268, 272, 273, 274, 275, 281, 290, 333, 335, 347, 354, 359, 363, 364, 365, 366, 367, 369, 372, 377, 383, 385, 397, 398, 399, 400, 401, 402, 403, 405, 412, 435, 442, 458, 468], "complex64": 372, "compon": [24, 73, 74, 75, 76, 82, 83, 84, 156, 197, 200, 359, 385, 468], "compos": [5, 6, 7, 8, 150, 292, 293, 294, 330, 331, 332, 333, 334, 335, 347, 468], "compound": 60, "comprehens": 3, "compris": [121, 122], "compromis": [99, 102], "comput": [10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 43, 44, 45, 47, 48, 50, 51, 78, 81, 85, 90, 92, 93, 96, 97, 98, 99, 100, 101, 102, 110, 111, 112, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 144, 159, 163, 165, 166, 169, 170, 174, 178, 192, 193, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 220, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 244, 245, 246, 247, 257, 259, 260, 261, 262, 263, 264, 265, 266, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 297, 298, 300, 301, 302, 303, 308, 310, 312, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 325, 330, 331, 332, 333, 334, 335, 339, 340, 341, 342, 343, 347, 348, 350, 351, 352, 353, 354, 355, 357, 359, 360, 368, 373, 374, 375, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 443, 444, 446, 452, 458, 468], "computation": [3, 12, 24, 113, 278, 279, 305], "compute_grad": 437, "compute_loss": [359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370], "concat": 289, "concaten": [0, 216, 217, 218, 289, 440, 441, 451, 456], "concept": [24, 85, 91, 154], "concis": [10, 12, 14], "condit": [17, 18, 21], "confer": [85, 163], "config": 145, "configur": [15, 29, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 153, 158, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 202, 259, 260, 261, 290, 372], "confirm": 15, "conjunct": [220, 316], "connect": [28, 39, 54, 55, 56, 57, 58, 59, 60, 76, 82, 83, 84, 85, 86, 87, 88, 89, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 145, 150, 152, 232, 265, 266, 292, 293, 294, 310, 341, 343], "consecut": 145, "consid": [3, 21, 24, 54, 98, 99, 100, 102, 203, 270, 271, 274, 275, 295, 347, 369, 372, 373, 399, 400, 453, 454, 468], "consider": 24, "consist": [2, 4, 7, 13, 28, 87, 88, 89, 112, 196, 245, 246, 247, 266, 289, 327, 328, 329, 339, 341, 343, 382, 384, 444, 459, 466, 468], "consistent_tensor": 384, "consol": 155, "constant": [233, 234, 239, 240, 242, 243, 244, 269, 283, 312, 313, 318, 319, 320, 321, 322, 323, 324, 325, 339, 341, 343, 357, 361, 362, 363, 364, 365, 366, 367, 368, 442, 444], "constant_pad": 444, "constrain": [45, 47, 50, 100], "constraint": [1, 12, 30, 90, 92, 99, 174, 266, 305], "construct": [15, 55, 56, 57, 58, 77, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 141, 142, 143, 146, 147, 148, 149, 156, 200, 347, 398, 446, 452, 453, 454], "constructor": [15, 31, 32, 33, 34, 35, 36, 37, 38, 55, 56, 57, 58, 69, 70, 71, 72, 94, 95, 96, 97, 104, 105, 106, 107, 108, 109, 110, 111, 121, 122, 136, 137, 138, 139, 144, 146, 147, 148, 149], "consumpt": 102, "contain": [1, 5, 6, 7, 8, 18, 19, 24, 25, 26, 27, 82, 86, 112, 123, 124, 125, 126, 127, 128, 129, 130, 140, 145, 155, 197, 199, 200, 201, 202, 203, 212, 215, 220, 230, 232, 233, 234, 238, 255, 257, 312, 313, 316, 348, 386, 387, 388, 389, 391, 392, 393, 394, 396, 397, 400, 402, 408, 409, 410, 411, 413, 414, 415, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 434, 437, 439, 443, 449], "content": 258, "context": [85, 184, 186, 187, 373, 375, 385], "contextmanag": 375, "contextu": [160, 161, 162, 166, 180, 181, 182, 183], "contigu": [222, 298, 445], "continu": [280, 352, 357, 381], "contract": 12, "contrast": [156, 322, 323, 324, 468], "contribut": [222, 257, 297, 300, 301, 302, 303, 330, 333, 334, 335, 360, 366, 432], "control": [10, 14, 30, 39, 123, 165, 166, 266, 276, 314, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 373, 384, 385, 458, 468], "conv": [77, 82, 85, 130, 259, 260, 261, 319, 320], "conv1": [87, 88, 89, 203, 292, 293, 294, 330, 331, 332, 333, 334, 335], "conv1d": [219, 229, 259, 262, 296, 307, 330, 333], "conv1dmodel": 292, "conv2": [87, 88, 89, 203, 292, 293, 294], "conv2d": [200, 203, 219, 229, 260, 263, 296, 305, 307, 319, 331, 334, 347], "conv2dmodel": 293, "conv3d": [219, 229, 261, 264, 296, 307, 320, 332, 335], "conv3dmodel": 294, "conv_bia": [259, 260, 261], "conv_config": 145, "conv_lay": [86, 200], "convblock": 347, "convbnrelu1d": 267, "convbnrelu2d": 267, "convbnrelu3d": 267, "conveni": [4, 29, 153], "convent": 390, "converg": [24, 287, 349, 350, 351, 353, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 460], "convers": [313, 316, 462, 468], "convert": [5, 6, 7, 8, 145, 196, 198, 212, 255, 285, 443, 457, 458, 462, 468], "convnet": 154, "convnetwork": 200, "convnext": [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "convnext_bas": 85, "convnext_larg": 85, "convnext_smal": 85, "convnext_tini": 85, "convnext_v2": [45, 46, 47, 48, 49, 50, 51, 52], "convnext_v2_atto": 85, "convnext_v2_bas": 85, "convnext_v2_femto": 85, "convnext_v2_hug": 85, "convnext_v2_larg": 85, "convnext_v2_nano": 85, "convnext_v2_pico": 85, "convnext_v2_tini": 85, "convnext_xlarg": 85, "convolut": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 54, 59, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 82, 85, 86, 87, 88, 89, 90, 92, 96, 97, 98, 99, 100, 101, 102, 103, 110, 111, 112, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 140, 144, 145, 150, 152, 153, 154, 159, 160, 161, 162, 200, 216, 217, 218, 220, 259, 260, 261, 262, 263, 264, 265, 266, 292, 293, 294, 295, 331, 332, 334, 335, 429, 444], "convolv": [216, 217, 218, 292, 293, 294], "cooldown": 356, "coordin": 443, "copi": [10, 436], "core": [0, 1, 2, 3, 197, 347, 348, 372, 385, 468], "corinna": 8, "corner": [257, 345, 459, 461], "correct": [199, 313, 316, 363, 364, 365, 366, 367, 442, 453, 454, 458], "correctli": [24, 197, 199, 200, 201, 202, 203, 313, 316, 384, 436, 437], "correspond": [0, 1, 2, 5, 6, 7, 8, 19, 93, 94, 96, 97, 121, 122, 141, 142, 143, 180, 181, 182, 183, 189, 199, 201, 203, 205, 206, 208, 209, 210, 211, 212, 213, 216, 217, 218, 220, 230, 232, 255, 257, 278, 281, 285, 308, 310, 318, 319, 320, 322, 323, 324, 331, 332, 337, 360, 368, 370, 372, 377, 388, 389, 391, 392, 395, 416, 417, 418, 424, 426, 436, 437, 440, 444, 446, 448, 452, 456], "cort": 8, "cosh": [407, 425, 431], "cosin": [350, 409, 413, 414, 424], "cosineannealinglr": 358, "cost": [85, 90, 92, 93, 99, 100, 102, 123, 159, 174, 262, 263, 264], "could": 197, "count": [85, 93, 155, 163, 171, 172, 173, 175, 176, 177, 350, 355, 438], "counterclockwis": [258, 464], "cover": [16, 216, 217, 218], "coverag": [245, 246, 247], "cpu": [15, 196, 198, 372, 377, 379, 380, 381, 383, 385, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406], "craft": 15, "creat": [2, 3, 15, 28, 29, 30, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 83, 84, 87, 88, 89, 92, 94, 95, 96, 97, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 157, 158, 196, 197, 200, 203, 266, 282, 289, 339, 340, 341, 342, 343, 347, 374, 376, 384, 397, 401, 402, 403, 404, 405, 406, 436, 443, 451, 457, 468], "creation": [69, 70, 71, 72, 200, 203, 468], "criterion": [312, 313, 314, 315, 316], "critic": [24, 100, 176, 359, 384], "crop": [459, 461, 468], "cross": [178, 233, 234, 312, 313, 339, 340, 341], "cross_entropi": [229, 236], "crossentropyloss": [307, 317], "crucial": [10, 349], "cube": 407, "cumul": [206, 277], "current": [197, 350, 351, 352, 353, 354, 355, 356, 357, 360, 363, 369, 373], "custom": [4, 15, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 83, 84, 86, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 151, 152, 153, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 258, 259, 260, 261, 276, 280, 295, 339, 347, 351, 354, 384, 401, 402, 449], "custom_config": 145, "custom_decod": 339, "custom_encod": 339, "custom_lenet": 86, "customiz": [171, 468], "custommodul": 196, "customnetwork": 199, "customparametermodel": [201, 202], "cut": 101, "cvf": [85, 163], "cvpr": 85, "cvt": [160, 161, 162], "cvt_13": 163, "cvt_21": 163, "cvt_w24": 163, "cvtspec": 159, "cycl": 351, "cycle_momentum": 351, "cyclic": [350, 351, 448], "cycliclr": 358, "d": [30, 85, 215, 218, 227, 247, 250, 254, 261, 290, 295, 320, 324, 325, 329, 332, 335, 374, 398, 464], "d_": [218, 247, 250, 254, 289, 294, 329, 332, 335, 339, 340, 341, 342, 343], "d_1": [12, 13, 14, 305, 325], "d_2": [12, 13, 14, 305, 325], "d_h": [289, 295, 341, 343], "d_k": 30, "d_model": [156, 157, 158, 190, 339, 340, 341, 342, 343], "d_n": [12, 13, 14, 305, 325], "d_out": [218, 250, 254], "d_w": 295, "dag": 15, "dai": 85, "dampen": [360, 368, 370], "data": [4, 5, 6, 7, 8, 10, 15, 22, 85, 154, 163, 185, 196, 198, 202, 213, 216, 218, 220, 226, 227, 232, 255, 258, 259, 260, 261, 266, 281, 287, 292, 293, 294, 310, 324, 330, 332, 335, 342, 348, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 374, 384, 385, 386, 387, 393, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 429, 435, 436, 444, 445, 446, 447, 449, 450, 452, 457, 458, 461, 462, 463, 464, 465, 468], "data_dtyp": 372, "databas": 8, "dataload": [2, 3], "dataset": [3, 5, 6, 7, 8, 42, 69, 70, 71, 72, 87, 88, 89, 90, 93, 98, 112, 113, 114, 115, 116, 117, 118, 119, 120, 166, 177, 258, 362, 375, 457, 459, 468], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 394, "debug": [15, 155, 203, 373, 382, 468], "decai": [298, 349, 350, 352, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370], "declar": [12, 13, 14, 305], "decod": [156, 339, 340, 341], "decoder_lay": [340, 341], "decoderlay": 340, "decompos": [17, 25, 27], "decomposit": [16, 17, 21, 24, 25, 27], "decor": [124, 125, 126, 127, 128, 129, 376], "decoupl": [85, 361, 362, 364, 365, 366, 367], "decreas": [351, 356, 363, 364, 369], "deep": [1, 3, 4, 10, 13, 15, 79, 80, 82, 85, 112, 113, 114, 115, 117, 118, 124, 125, 126, 127, 128, 129, 131, 132, 135, 154, 163, 166, 239, 277, 283, 305, 347, 349, 384, 402, 449, 453, 454, 457, 458, 468], "deepen": 175, "deeper": [74, 76, 84, 85, 112, 119, 161, 165, 168, 173, 176, 185, 186, 283], "def": [0, 1, 2, 3, 10, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 297, 298, 299, 300, 301, 305, 308, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 340, 341, 342, 343, 347, 348, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 375, 376, 377, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "default": [1, 5, 6, 7, 8, 13, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 208, 212, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 270, 271, 272, 273, 274, 275, 276, 280, 285, 289, 290, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 308, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 345, 348, 350, 351, 352, 353, 354, 355, 356, 357, 359, 366, 373, 377, 379, 380, 381, 383, 385, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 419, 420, 421, 428, 433, 434, 435, 437, 438, 440, 443, 444, 446, 448, 449, 451, 453, 454, 456, 458, 462, 463, 465], "defer": 15, "defin": [1, 3, 4, 10, 13, 15, 30, 39, 54, 60, 73, 74, 75, 76, 82, 83, 84, 86, 92, 102, 103, 112, 130, 141, 142, 143, 145, 159, 199, 200, 201, 202, 203, 223, 277, 279, 282, 286, 312, 313, 314, 315, 316, 330, 345, 347, 349, 351, 354, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 380, 381, 395, 400, 412, 433, 457, 468], "definit": [15, 17, 259, 260, 261, 468], "degre": [258, 464, 468], "delai": 360, "deliv": [15, 100, 101, 177], "delta": [12, 212, 235, 285, 305, 314, 361], "delta_": [12, 212, 285, 305], "demand": [101, 175, 176], "demonstr": [16, 136, 137, 138, 139, 144, 154, 347], "demystifi": 15, "denomin": [239, 240, 242, 243, 259, 260, 261, 318, 319, 320, 321, 322, 323, 324, 325, 339, 341, 343, 361, 362, 363, 364, 365, 366, 367, 368, 387], "denot": [22, 110, 111, 284, 289, 292, 293, 294, 297, 300, 301, 302, 303, 433], "dens": [54, 55, 56, 57, 58, 85, 163, 178, 180, 181, 182, 183, 223, 255, 337, 362], "densenet": [55, 56, 57, 58, 265], "densenet_121": 85, "densenet_169": 85, "densenet_201": 85, "densenet_264": 85, "densiti": [206, 277], "depend": [15, 22, 23, 30, 92, 154, 163, 166, 167, 178, 180, 181, 182, 183, 184, 185, 202, 233, 234, 235, 237, 238, 257, 292, 388, 398, 419, 421, 446, 452, 461, 462, 466], "deploy": [102, 171, 174], "depth": [30, 39, 40, 41, 42, 43, 44, 53, 59, 60, 77, 85, 98, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 200, 218, 223, 227, 247, 250, 254, 294, 299, 320, 324, 329, 332, 335], "depth_coef": 59, "depthseparableconv1d": 267, "depthseparableconv2d": 267, "depthseparableconv3d": 267, "depthwis": [30, 39, 77, 85, 90, 150, 159, 160, 161, 162, 163, 216, 217, 218, 262, 263, 264], "depthwise_separ": [262, 263, 264], "der": 85, "deriv": [15, 24, 25, 212, 245, 246, 247, 277, 285, 287, 292, 293, 294, 308, 310, 376], "descend": 27, "descent": [360, 370], "describ": [10, 18, 19], "descript": [154, 468], "deseri": 196, "design": [3, 4, 13, 16, 28, 29, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 52, 69, 70, 71, 72, 74, 75, 76, 78, 81, 85, 87, 88, 89, 92, 93, 98, 99, 100, 101, 102, 113, 114, 115, 116, 117, 118, 119, 120, 131, 134, 150, 153, 154, 160, 161, 162, 163, 164, 166, 169, 176, 178, 185, 186, 192, 198, 200, 201, 202, 203, 205, 210, 283, 297, 347, 468], "desir": [10, 14, 151, 196, 245, 246, 247, 298, 327, 328, 329, 345, 349, 433, 435], "despit": 244, "destin": 197, "det": [16, 20], "det_a": 18, "detail": [155, 159, 166, 185, 359, 384, 390], "detect": [85, 163, 177, 184, 185, 186, 187, 188, 356], "determin": [0, 16, 17, 18, 86, 121, 122, 245, 246, 247, 270, 271, 274, 275, 292, 293, 294, 327, 328, 329, 331, 332, 334, 335, 351, 368, 373, 377, 379, 380, 381, 383, 399, 400, 449, 459, 461], "determinist": 258, "develop": [10, 15, 93, 347, 384, 468], "deviat": [270, 272, 274, 457, 460, 468], "devic": [91, 92, 98, 99, 196, 198, 372, 377, 379, 380, 381, 383, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406], "diag": [24, 407], "diagon": [24, 25, 27, 398, 401, 432, 453, 454], "diagonaliz": 19, "dict": [10, 12, 13, 14, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 86, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 122, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 141, 142, 143, 144, 151, 153, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 199, 201, 305, 309, 348, 353], "dictionari": [86, 93, 100, 197, 198, 199, 201, 203, 348, 353], "differ": [0, 10, 13, 22, 73, 77, 86, 92, 93, 99, 100, 136, 137, 138, 139, 144, 160, 161, 162, 164, 166, 167, 168, 169, 170, 179, 188, 200, 203, 212, 230, 257, 266, 285, 308, 315, 349, 356, 359, 372, 374, 382, 384, 396, 406, 434, 450, 468], "differenti": [17, 26, 255, 277, 347, 377, 379, 380, 381, 383, 385, 397, 399, 400, 403, 405], "difficult": 168, "digit": [7, 8, 85, 89], "dilat": [216, 217, 218, 259, 260, 261, 262, 263, 264, 292, 293, 294, 295], "dilation_height": 220, "dilation_width": 220, "dim": [39, 40, 77, 215, 244, 290, 313, 316, 448], "dim_feedforward": [156, 339, 341, 343], "dimens": [10, 12, 13, 14, 18, 19, 21, 22, 25, 26, 27, 28, 39, 41, 42, 43, 44, 53, 85, 112, 123, 140, 145, 152, 156, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 190, 198, 212, 215, 230, 232, 239, 240, 242, 243, 244, 246, 247, 257, 265, 266, 285, 289, 290, 292, 293, 294, 295, 298, 305, 318, 319, 320, 322, 323, 324, 325, 328, 329, 331, 332, 333, 334, 335, 339, 341, 342, 343, 345, 374, 379, 383, 385, 389, 399, 419, 420, 421, 428, 429, 432, 433, 434, 436, 437, 438, 440, 444, 446, 448, 450, 451, 452, 455, 456, 459, 461, 466], "dimension": [10, 22, 24, 25, 27, 77, 216, 217, 218, 248, 249, 250, 252, 253, 254, 266, 289, 292, 293, 294, 295, 301, 302, 303, 318, 319, 320, 322, 323, 324, 330, 331, 332, 333, 334, 335, 339, 341, 343, 374, 389, 390, 394, 398, 416, 420, 428, 429, 432, 434, 439, 445, 446, 450, 452, 453, 454], "diminish": [349, 362], "direct": [15, 19, 312, 313, 314, 315, 316, 360, 368, 369, 370, 448], "directli": [69, 70, 71, 72, 85, 199, 200, 201, 202, 257, 305, 345, 361, 362, 364, 365, 366, 367, 382, 384, 435, 468], "directori": [3, 4, 5, 6, 7, 8], "disabl": [223, 298, 299, 373, 375], "discontinu": 423, "discrep": [312, 313, 316], "discret": [377, 380, 384], "disk": 3, "displai": [29, 153, 155], "distinct": [93, 156], "distribut": [185, 206, 212, 222, 257, 270, 271, 272, 273, 274, 275, 277, 285, 292, 293, 294, 297, 298, 300, 301, 302, 303, 308, 310, 313, 316, 330, 331, 332, 377, 379, 380, 381, 383, 384, 420, 428, 432, 434, 451, 460, 462, 463, 464, 465], "div": 407, "divers": [46, 85, 258, 463, 465, 468], "diversifi": 468, "divid": [1, 24, 85, 163, 178, 179, 190, 191, 192, 193, 194, 195, 200, 203, 212, 216, 217, 218, 285, 312, 313, 314, 315, 316, 387, 437, 449, 460], "divis": [24, 216, 217, 218, 244, 289, 297, 300, 301, 302, 303, 339, 341, 343, 361, 362, 363, 364, 365, 366, 367, 368, 387, 449], "dl": 15, "do": [24, 26, 196, 199, 200, 201, 202, 221, 224, 225, 226, 347, 349, 367, 373, 406, 432, 444], "do_ev": 155, "doc": 154, "document": [4, 85, 359, 384], "doe": [22, 23, 24, 25, 27, 155, 156, 196, 199, 200, 201, 202, 203, 244, 275, 356, 363, 364, 369, 373, 375, 377, 379, 380, 381, 382, 383, 397, 398, 399, 400, 401, 403, 404, 405, 406, 436, 442, 447, 448], "doesn": 375, "doi": 85, "domain": [4, 174], "don": 375, "dosovitskii": 163, "dot": [12, 13, 14, 19, 22, 164, 165, 199, 200, 201, 202, 203, 215, 289, 290, 305, 325, 333, 334, 335, 389, 394, 407, 438, 440, 451, 456], "down": [3, 347, 466], "download": [4, 5, 6, 7, 8], "downsampl": 103, "drawback": 205, "drawn": [379, 380, 381, 383, 384, 464], "drop": [39, 40, 77, 222, 223, 297, 298, 299, 300, 301, 302, 303], "drop_block": [228, 229], "drop_path": [39, 40, 228, 229, 299], "drop_path_r": [60, 77, 164, 165, 178, 179], "drop_prob": 299, "drop_rat": [77, 164, 165, 178, 179], "dropblock": [222, 304, 307], "dropout": [28, 59, 60, 69, 70, 71, 72, 75, 77, 85, 145, 152, 156, 164, 165, 178, 179, 190, 206, 215, 221, 225, 226, 227, 289, 290, 297, 298, 301, 302, 303, 339, 341, 343], "dropout1d": [228, 229, 304, 307], "dropout1dmodel": 301, "dropout2d": [228, 229, 304, 307], "dropout3d": [228, 229, 304, 307], "dropout_p": [215, 290], "dropout_prob": 75, "dropout_r": 190, "dropoutmodel": 300, "droppath": [304, 307], "dtype": [196, 198, 255, 337, 372, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 435, 458], "due": [22, 24, 54, 101, 216, 217, 281, 464], "dummi": 155, "duplic": [10, 14, 199, 201], "dure": [3, 15, 18, 19, 21, 24, 25, 27, 30, 60, 73, 74, 75, 85, 112, 165, 196, 197, 198, 199, 200, 201, 202, 203, 212, 221, 222, 223, 224, 225, 226, 227, 239, 242, 258, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 330, 331, 332, 333, 334, 335, 337, 345, 347, 349, 353, 356, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 373, 375, 385, 386, 419, 420, 421, 428, 434, 442, 448, 458, 461, 464, 468], "dy": [208, 280], "dynam": [0, 2, 3, 15, 30, 85, 140, 144, 197, 200, 201, 202, 203, 245, 246, 247, 266, 298, 325, 327, 328, 329, 349, 353, 354, 356, 362, 367, 372, 373], "dynamicnetwork": 200, "e": [0, 10, 15, 18, 19, 21, 22, 25, 27, 59, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 76, 83, 84, 86, 87, 88, 89, 103, 145, 154, 159, 178, 179, 196, 212, 266, 284, 285, 286, 289, 297, 313, 348, 361, 368, 369, 372, 385, 401, 414, 416, 417, 425, 431, 432, 438, 462], "each": [1, 2, 3, 4, 15, 19, 22, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 54, 60, 77, 85, 86, 90, 92, 93, 94, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 145, 152, 156, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 216, 217, 218, 220, 230, 232, 239, 242, 245, 246, 247, 255, 265, 266, 278, 281, 285, 289, 292, 293, 294, 295, 297, 300, 301, 302, 303, 308, 310, 312, 313, 316, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 347, 349, 350, 351, 352, 353, 354, 355, 357, 361, 362, 363, 364, 365, 366, 367, 368, 369, 377, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 402, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 434, 437, 438, 440, 443, 444, 446, 448, 449, 451, 452, 456, 457, 458, 459, 460, 461, 462, 464, 466, 468], "earli": [30, 85, 367], "earlier": 93, "eas": 4, "easi": [2, 3, 4, 10, 124, 125, 126, 127, 128, 129, 198, 199, 201], "easier": [3, 199, 200, 203], "easili": [4, 93, 198, 202, 468], "eccv": 85, "economi": 27, "edg": [15, 92, 101, 171, 444], "edu": [5, 6], "educ": 154, "effect": [13, 85, 159, 163, 184, 188, 199, 200, 201, 202, 203, 212, 216, 217, 218, 220, 276, 277, 281, 284, 285, 287, 318, 319, 320, 322, 323, 324, 325, 345, 349, 350, 351, 356, 373, 374, 375, 440, 456], "effici": [1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 21, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 43, 44, 45, 47, 50, 51, 52, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 80, 81, 83, 84, 85, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144, 150, 154, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 178, 180, 181, 182, 183, 185, 191, 194, 220, 262, 263, 264, 278, 279, 282, 305, 313, 347, 349, 350, 375], "efficientnet": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "efficientnet_b0": 85, "efficientnet_b1": 85, "efficientnet_b2": 85, "efficientnet_b3": 85, "efficientnet_b4": 85, "efficientnet_b5": 85, "efficientnet_b6": 85, "efficientnet_b7": 85, "efficientnet_v2": [69, 70, 71, 72], "efficientnet_v2_": 85, "efficientnet_v2_l": 85, "efficientnet_v2_m": 85, "efficientnet_v2_xl": 85, "efficientnetv2": 85, "eig": 20, "eigenvalu": [19, 25], "eigenvector": 19, "eigval": 19, "eigvec": 19, "einop": 305, "einstein": [10, 12, 13, 14, 305], "either": [15, 232, 345, 377, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 435, 443], "element": [0, 10, 12, 14, 24, 25, 75, 85, 198, 202, 205, 206, 208, 209, 210, 211, 212, 213, 216, 217, 218, 220, 221, 223, 224, 225, 226, 227, 255, 259, 260, 261, 262, 263, 264, 265, 278, 279, 281, 285, 286, 292, 293, 294, 295, 297, 299, 300, 301, 302, 303, 305, 312, 313, 314, 315, 316, 325, 330, 331, 332, 333, 334, 335, 374, 377, 385, 386, 387, 390, 391, 392, 393, 394, 395, 396, 397, 401, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 434, 439, 442, 443, 444, 446, 447, 448, 449, 450, 452, 453, 454], "elementwise_affin": 325, "elimin": [12, 14], "elsewher": [333, 334, 335, 401], "elu": [207, 229, 288, 307], "elumodel": 276, "embed": [90, 91, 92, 93, 95, 96, 97, 100, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 190, 215, 229, 256, 289, 290, 307, 338, 339, 341, 342, 343], "embed_dim": [160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 289, 339, 340, 341, 342, 343], "embedding_dim": [190, 255, 337], "embedding_lay": 337, "embedding_matrix": 255, "emphas": [93, 100], "emploi": [30, 60, 101], "empti": [197, 203, 407, 437], "empty_lik": 407, "enabl": [0, 1, 2, 3, 10, 12, 13, 14, 22, 27, 59, 83, 85, 103, 140, 141, 142, 143, 154, 160, 161, 162, 163, 164, 165, 170, 174, 178, 180, 181, 189, 197, 198, 199, 200, 201, 202, 215, 223, 281, 289, 290, 292, 293, 294, 308, 310, 339, 341, 343, 347, 359, 372, 373, 375, 377, 379, 380, 381, 383, 385, 457], "encapsul": [15, 290, 347, 372, 385], "encod": [30, 85, 156, 190, 313, 316, 339, 340, 341, 342, 343, 372], "encoder_lay": [342, 343], "encoderlay": 342, "encompass": 59, "encourag": [222, 298, 300, 301, 302, 303, 312, 313, 316, 363], "end": [23, 177, 205, 208, 209, 210, 223, 276, 278, 279, 280, 281, 283, 299, 314, 315, 316, 330, 331, 332, 333, 334, 335, 367, 369, 391, 392, 394, 397, 402, 408, 412, 419, 421, 423, 438, 442, 444, 453, 454, 468], "enforc": [12, 197, 199, 201, 305, 340, 341, 342, 343], "engin": [15, 24, 385], "enhanc": [30, 40, 41, 75, 76, 77, 83, 84, 85, 88, 91, 101, 102, 110, 111, 121, 122, 136, 137, 138, 139, 144, 152, 153, 159, 160, 161, 162, 163, 169, 172, 179, 188, 199, 201, 266, 282, 353, 468], "enough": 15, "ensur": [3, 5, 6, 7, 8, 10, 12, 13, 14, 24, 25, 26, 60, 69, 70, 71, 72, 167, 187, 196, 197, 198, 199, 200, 201, 202, 203, 212, 215, 244, 245, 246, 247, 255, 259, 260, 261, 280, 285, 290, 297, 298, 299, 300, 301, 302, 303, 305, 312, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 325, 327, 328, 329, 331, 332, 333, 334, 335, 337, 347, 348, 349, 360, 361, 363, 364, 366, 367, 368, 369, 370, 373, 374, 375, 377, 379, 380, 381, 382, 383, 384, 395, 402, 420, 428, 434, 436, 437, 442, 444, 448, 453, 454, 458, 459, 460, 461, 462, 466, 468], "enter": 375, "entir": [3, 15, 223, 225, 226, 227, 299, 302, 303, 384], "entri": [60, 86, 96, 97, 442, 448, 450], "entropi": [233, 234, 312, 313], "environ": [15, 45, 47, 96, 97, 100, 385], "ep": [19, 171, 172, 173, 175, 176, 177, 222, 233, 234, 239, 240, 242, 243, 244, 259, 260, 261, 298, 312, 313, 318, 319, 320, 321, 322, 323, 324, 325, 356, 361, 362, 363, 364, 365, 366, 367, 368], "epoch": [1, 3, 15, 349, 350, 351, 352, 353, 354, 355, 356, 357], "epsilon": [30, 240, 244, 312, 313, 318, 319, 320, 321, 322, 323, 324, 325, 361, 362, 363, 364, 365, 366, 367, 368], "equal": [22, 257, 330, 331, 332, 402, 437, 449, 459, 461], "equat": [19, 24, 26], "equival": [390, 432, 445], "error": [0, 3, 10, 12, 14, 15, 19, 21, 60, 197, 200, 201, 202, 203, 206, 235, 237, 277, 299, 305, 312, 313, 314, 315, 347, 348, 375, 402, 436], "escap": 351, "especi": [3, 15, 199, 201, 202, 284, 374, 375, 382, 457, 458, 462, 468], "essenti": [1, 3, 16, 22, 24, 82, 217, 220, 347, 382, 384, 419, 457, 458, 462, 468], "estim": [315, 363, 364, 365, 366, 367, 368], "et": [74, 85, 163, 339], "eta": 369, "eta_": [350, 351, 356, 369], "eta_0": [350, 352, 354, 355, 357], "eta_min": 350, "eta_t": [350, 351, 352, 354, 355, 356, 357], "etc": [10, 54, 60, 93, 103, 312, 345, 458], "euclidean": [23, 244], "european": 85, "eval": [15, 299, 385], "evalu": [197, 239, 242, 297, 298, 299, 300, 301, 302, 303, 318, 319, 320, 322, 323, 324, 385, 468], "evaluate_model": 356, "even": [361, 375, 397, 398, 401, 403, 404, 405, 406], "evenli": [245, 246, 247, 327, 328, 329, 397, 402, 437, 449], "everi": [1, 15, 352, 357, 468], "everywher": 423, "exact": [197, 200, 433, 462, 464], "exactli": 203, "exampl": [4, 15, 349, 390], "excel": [76, 100, 166, 167], "except": [0, 177, 423, 438, 440, 456], "excit": [59, 85, 92, 96, 97, 130, 133, 136, 137, 138, 139, 265], "exclud": [453, 454], "exclus": [380, 383, 397], "exdb": 8, "execut": [15, 200, 375, 385], "exist": [14, 26, 199, 201, 203, 376, 438], "exit": 375, "exp": [205, 210, 211, 213, 276, 283, 407], "exp_rang": 351, "expand": [4, 10, 14, 49, 85, 220, 436, 446, 452], "expans": [10, 12, 14, 53, 77, 93, 96, 97, 164, 165, 170, 171, 172, 173, 175, 176, 177], "expansion_factor": 92, "expect": [17, 200, 203, 223, 289, 297, 299, 300, 301, 302, 303, 325, 339, 340, 341, 342, 343, 347], "expens": 3, "experi": [15, 93, 382, 384, 468], "experiment": [15, 384], "explan": [22, 24, 28, 39, 145, 152, 245, 246, 247, 327, 328, 329, 360], "explicit": [12, 13, 14, 203, 305], "explicitli": [14, 15, 85, 199, 201, 385], "explod": [283, 318, 319, 320], "explor": [15, 99, 347, 384], "expon": [22, 244, 395], "exponenti": [205, 210, 212, 276, 283, 285, 297, 352, 354, 363, 364, 365, 366, 367, 416], "exponentiallr": [349, 358], "expos": 15, "express": [10, 12, 14, 42, 166], "extend": [4, 85, 103, 123, 140, 179, 186, 295], "extens": [85, 359], "extern": 4, "extra": [53, 72, 101, 186, 436], "extract": [30, 73, 79, 82, 85, 112, 123, 140, 150, 154, 160, 161, 162, 163, 165, 166, 169, 185, 186, 187, 189, 220, 294, 295, 330, 332, 372, 376, 398, 419, 421, 453, 454, 459, 461], "extractor": [86, 87, 88, 89, 150], "extrem": [24, 85, 113, 185, 192], "ey": 407, "f": [1, 4, 5, 6, 7, 8, 15, 85, 201, 202, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 282, 285, 339, 341, 343, 349, 350, 351, 352, 353, 354, 355, 356, 357], "f_1": 265, "f_2": 265, "facilit": [10, 13, 73, 199, 203, 212, 285, 292, 293, 294, 347, 359, 460, 468], "factor": [59, 75, 93, 164, 205, 215, 216, 217, 218, 220, 265, 274, 275, 289, 290, 345, 349, 351, 352, 354, 355, 356, 357, 360, 367, 368, 369, 370], "factori": 151, "failur": [199, 200, 201, 202, 347], "faithfulli": 15, "fals": [1, 5, 6, 7, 8, 23, 27, 59, 96, 97, 112, 155, 164, 165, 171, 172, 173, 175, 176, 177, 178, 179, 196, 197, 198, 215, 221, 223, 224, 225, 226, 227, 239, 242, 257, 268, 270, 271, 272, 273, 274, 275, 289, 290, 292, 293, 294, 299, 308, 310, 339, 340, 341, 342, 343, 345, 350, 351, 352, 353, 354, 355, 356, 357, 363, 364, 368, 373, 377, 379, 380, 381, 383, 385, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 419, 420, 421, 428, 434, 435, 442, 458], "famili": [53, 85, 93, 172, 176, 177, 186, 376], "fan": [270, 271, 274, 275], "fan_in": [270, 271], "fan_out": [270, 271], "fashion": 7, "fashion_train": 7, "fashionmnist": 9, "fast": 367, "faster": [85, 165, 349, 362, 366, 375], "fc": [15, 82, 112, 123, 130, 140, 200, 265, 293, 294, 330, 331, 332, 333, 334, 335], "fc1": [15, 88, 89, 155, 199, 203, 277, 278, 279, 281, 282, 283, 284, 286, 287, 310], "fc2": [15, 88, 89, 155, 199, 203, 277, 278, 279, 281, 283, 284, 286, 287, 310], "fc3": 89, "featur": [3, 15, 28, 30, 39, 42, 43, 53, 54, 73, 76, 77, 79, 82, 85, 86, 87, 88, 89, 102, 110, 111, 112, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 140, 141, 142, 143, 145, 150, 152, 153, 154, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 177, 185, 186, 187, 189, 222, 230, 232, 239, 240, 259, 260, 261, 265, 266, 294, 298, 300, 301, 302, 303, 308, 310, 318, 319, 320, 321, 322, 323, 324, 325, 330, 331, 332, 333, 334, 335, 337, 347, 362], "feature_extractor": 86, "fed": [3, 468], "feed": [3, 468], "feedforward": [155, 156, 190, 339, 341, 343], "femto": [47, 85], "fergu": [85, 152], "fetch": 0, "few": 155, "fewer": [1, 85, 104, 105, 106, 107, 108, 109, 174, 436], "field": [5, 6, 8, 85, 140, 144, 174, 266], "file": [3, 376], "fill": [268, 272, 273, 379, 380, 381, 383, 403, 404, 405, 406], "filter": [60, 85, 93, 152, 216, 217, 218, 220, 259, 260, 261, 293, 294], "filter_height": 220, "filter_s": 220, "filter_width": 220, "final": [39, 54, 55, 56, 57, 58, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 92, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 156, 190, 199, 200, 201, 202, 203, 215, 266, 289, 339, 340, 342, 385, 457, 468], "find": [26, 419, 421], "fine": [99, 102, 265, 468], "finer": 165, "finest": 166, "finish": 375, "first": [5, 6, 7, 8, 19, 86, 152, 155, 178, 179, 180, 181, 200, 201, 230, 265, 308, 349, 363, 364, 365, 366, 367, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 429, 437, 443, 456, 457, 458, 468], "fit": [14, 347], "fix": [163, 174, 178, 200, 352, 355, 357, 385, 444], "flag": 15, "flat": [163, 178], "flatten": [12, 82, 86, 203, 220, 295, 394, 441, 445, 446, 448], "flexibl": [1, 3, 4, 10, 12, 14, 40, 73, 82, 83, 84, 85, 86, 93, 94, 103, 112, 136, 137, 138, 139, 144, 145, 150, 199, 200, 201, 202, 203, 305, 345, 347, 354, 359, 385, 403, 404, 458, 468], "flexibli": 13, "flip": [463, 465, 468], "float": [2, 5, 6, 7, 8, 19, 24, 39, 40, 59, 60, 75, 77, 90, 94, 156, 164, 165, 166, 167, 168, 169, 170, 178, 179, 190, 196, 198, 205, 208, 215, 221, 222, 223, 224, 225, 226, 227, 233, 234, 235, 239, 240, 242, 243, 244, 255, 258, 259, 260, 261, 268, 272, 273, 274, 275, 276, 280, 289, 290, 297, 298, 299, 300, 301, 302, 303, 312, 313, 314, 318, 319, 320, 321, 322, 323, 324, 325, 337, 339, 341, 343, 345, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 377, 383, 385, 397, 398, 399, 400, 401, 402, 403, 405, 412, 435, 442, 458, 460, 462, 463, 464, 465], "float32": [196, 198, 372, 385, 397, 398, 401, 403, 405, 435, 458], "float64": [372, 406, 435, 458], "floor": 357, "flow": [30, 76, 82, 85, 130, 203, 222, 275, 277, 284, 287, 292, 293, 294, 308, 310, 373, 442], "fluctuat": 351, "fly": [2, 3], "fname": 3, "focu": 30, "follow": [0, 12, 14, 16, 19, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 55, 56, 57, 58, 59, 96, 97, 136, 137, 138, 139, 144, 145, 150, 152, 155, 156, 205, 206, 208, 209, 210, 211, 212, 213, 215, 230, 232, 257, 259, 260, 261, 262, 263, 264, 265, 266, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 297, 299, 300, 301, 302, 303, 305, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 340, 341, 342, 343, 347, 351, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 373, 376, 384, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 419, 421, 429, 436, 443, 447, 459, 460, 461, 462, 463, 464, 465, 468], "foral": [340, 342], "forc": [15, 222], "form": [15, 25, 266, 340, 342, 394, 443, 446, 452, 468], "format": [2, 3, 5, 6, 7, 8, 155, 313, 316, 458], "formul": [206, 244], "formula": [19, 27, 212, 245, 246, 247, 285, 286, 314, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 390, 434, 462], "forward": [15, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 152, 155, 196, 197, 347, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370], "foundat": [15, 82, 93, 130, 197, 347, 359], "four": [55, 56, 57, 58, 104, 105, 106, 107, 108, 109, 171, 172, 173, 175, 176, 177, 444], "frac": [13, 15, 17, 18, 19, 21, 22, 23, 24, 26, 27, 30, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 223, 230, 232, 240, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 297, 299, 300, 301, 302, 303, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 330, 331, 332, 333, 334, 335, 337, 341, 343, 350, 361, 362, 363, 364, 365, 366, 367, 368, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 438, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 460], "frame": 227, "framework": [4, 10, 15, 154, 313, 316, 318, 319, 320, 322, 323, 324, 348, 359, 468], "free": [15, 372], "frequent": [313, 316], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 14, 15, 22, 24, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 77, 78, 79, 80, 81, 82, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 155, 165, 196, 197, 198, 199, 200, 201, 202, 203, 220, 222, 230, 239, 242, 255, 257, 259, 260, 261, 265, 266, 268, 270, 271, 272, 273, 274, 275, 282, 289, 292, 293, 294, 295, 297, 298, 300, 301, 302, 303, 308, 310, 312, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 325, 330, 331, 332, 340, 342, 343, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 372, 374, 375, 376, 377, 379, 380, 381, 383, 384, 385, 390, 391, 392, 396, 398, 419, 420, 421, 428, 434, 438, 440, 443, 446, 449, 450, 451, 452, 456, 459, 460, 461, 462, 463, 464, 465, 468], "full": [15, 27, 94, 96, 97, 156, 190], "full_matric": 27, "fulli": [4, 16, 28, 39, 54, 55, 56, 57, 58, 59, 60, 82, 85, 86, 87, 88, 89, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 145, 150, 152, 232, 265, 266, 310, 384, 385], "func": 376, "function": [3, 4, 5, 6, 7, 8, 10, 15, 16, 77, 159, 197, 199, 200, 201, 202, 203, 259, 260, 261, 265, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 297, 298, 300, 301, 302, 303, 305, 312, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 325, 327, 328, 329, 339, 341, 343, 347, 350, 351, 353, 354, 357, 359, 384, 457, 468], "fundament": [215, 232, 310, 385, 458], "further": [13, 41, 42, 43, 44, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 92, 94, 95, 96, 97, 99, 101, 110, 111, 187, 384, 420, 428, 434], "fuse": [30, 140], "fusion": [141, 142, 143], "futur": [215, 290, 309, 342, 343], "g": [0, 10, 15, 18, 19, 22, 25, 27, 59, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 76, 83, 84, 85, 86, 87, 88, 89, 103, 145, 154, 159, 163, 178, 179, 265, 266, 297, 348, 361, 368, 372, 385, 438, 462], "g_": 362, "g_t": 368, "gain": [274, 275], "gamma": [240, 318, 319, 320, 321, 322, 323, 324, 325, 349, 351, 352, 353, 355, 357], "gamma_c": [240, 321], "gap": [112, 123, 140, 265], "gaussian": [206, 277], "gelu": [159, 207, 229, 288, 307], "gelunetwork": 277, "gener": [15, 24, 41, 46, 50, 155, 156, 223, 258, 295, 297, 298, 300, 301, 302, 303, 323, 339, 364, 366, 367, 375, 377, 379, 380, 381, 382, 383, 384, 389, 397, 399, 400, 402, 443, 461, 462, 463, 465, 468], "geoffrei": [5, 6], "geq": 453, "get": [5, 6, 7, 8], "get_lr": [350, 351, 352, 353, 354, 355, 356, 357], "git": 15, "github": [7, 15], "give": [360, 368], "given": [12, 13, 14, 18, 19, 22, 24, 25, 27, 157, 220, 244, 255, 289, 290, 295, 305, 312, 313, 316, 348, 372, 373, 377, 404, 406, 442, 449, 457, 462, 463, 465, 468], "global": [0, 59, 85, 112, 123, 130, 140, 159, 160, 161, 162, 163, 164, 166, 169, 170, 174, 178, 180, 181, 182, 183, 185, 186, 187, 240, 265, 321, 373, 375, 382, 384], "global_response_norm": [229, 241], "globalresponsenorm": [307, 326], "go": [10, 74, 85], "goal": [312, 313, 316], "googlenet": [74, 85], "gpu": [85, 196, 198, 372, 377, 379, 380, 381, 383, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406], "grad": [15, 196, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 220, 223, 230, 232, 257, 262, 263, 264, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 292, 293, 294, 295, 297, 299, 300, 301, 302, 303, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 325, 330, 331, 332, 333, 334, 335, 348, 359, 377, 379, 380, 381, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 400, 402, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 459, 460, 461, 463, 465, 466], "grad_output": 22, "gradient": [10, 15, 16, 30, 76, 82, 85, 196, 198, 295, 298, 347, 348, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 373, 375, 377, 379, 380, 381, 383, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 435, 458], "gradual": [349, 350, 352], "grain": 265, "graph": [15, 275, 385, 397, 398, 401, 403, 404, 405, 406, 458], "grayscal": [7, 8, 86, 87, 88, 89, 462, 468], "great": 169, "greater": [49, 168, 412, 437], "green": 462, "grid": [154, 443], "grn": 321, "groundbreak": 85, "group": [85, 93, 103, 110, 111, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 140, 144, 200, 216, 217, 218, 259, 260, 261, 266, 292, 293, 294, 348, 349, 359], "group1": 200, "group2": 200, "groupedconvblock": 123, "grow": 15, "growth_rat": [54, 55, 56, 57, 58], "guarante": 382, "h": [10, 12, 13, 14, 85, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 163, 192, 215, 217, 218, 220, 222, 226, 227, 240, 246, 247, 249, 250, 253, 254, 257, 258, 260, 261, 265, 289, 290, 305, 319, 320, 321, 323, 324, 328, 329, 332, 335, 339, 341, 343, 459, 461], "h_": [217, 218, 246, 247, 249, 250, 253, 254, 257, 293, 294, 295, 328, 329, 331, 332, 334, 335], "h_out": [217, 218, 249, 250, 253, 254], "h_stack": 440, "ha": [0, 19, 41, 155, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 203, 216, 217, 218, 259, 260, 261, 282, 286, 312, 313, 318, 319, 320, 322, 323, 324, 325, 345, 348, 359, 385, 390, 432, 436, 438, 440, 451, 456, 462], "hackabl": 15, "haip": 163, "half": [351, 426], "han": 7, "hand": 26, "handl": [0, 3, 10, 15, 24, 163, 185, 197, 199, 200, 201, 202, 203, 255, 313, 316, 347, 359, 372, 375], "handwritten": [7, 8, 89], "hang": 85, "hard": [96, 97, 279], "hard_sigmoid": 278, "hardsigmoid": [279, 288, 307], "hardswish": [288, 307], "hashabl": 385, "hat": [30, 363, 364, 365, 366, 367], "have": [0, 1, 15, 18, 19, 21, 24, 25, 27, 198, 200, 202, 203, 217, 218, 222, 244, 255, 275, 337, 347, 401, 403, 404, 405, 406, 419, 421, 438, 440, 442, 443, 450, 451, 456, 460, 466], "he": 85, "head": [30, 39, 77, 92, 150, 156, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 215, 289, 290, 339, 341, 343], "head_fn": 77, "heart": 15, "height": [30, 150, 217, 218, 220, 226, 227, 240, 246, 247, 249, 250, 253, 254, 257, 258, 266, 293, 294, 295, 319, 320, 321, 323, 324, 328, 329, 331, 332, 334, 335, 345, 459, 461, 466], "help": [30, 75, 159, 208, 210, 227, 255, 276, 280, 282, 283, 287, 318, 319, 320, 330, 331, 333, 334, 337, 349, 351, 356, 357, 360, 363, 364, 366, 373, 374, 375, 429], "henc": 447, "here": [3, 17, 197, 230, 347, 359, 374, 375, 384, 457, 458, 468], "hidden": [28, 152, 156, 166, 167, 168, 169, 178, 179, 190, 200], "hidden_s": 200, "hierarch": [39, 40, 85, 163, 164, 165, 166, 167, 168, 169, 170, 171, 176, 178, 179, 200, 203, 347], "hierarchi": 293, "hierarchicalnetwork": 200, "high": [42, 48, 49, 69, 70, 71, 72, 79, 92, 100, 101, 120, 135, 144, 162, 165, 167, 175, 176, 177, 185, 186, 187, 192, 193, 349, 380, 383], "higher": [49, 60, 90, 98, 123, 185, 313, 316, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 389, 390, 394, 416, 429], "highest": [53, 101, 380], "highli": [15, 30, 45, 53, 85, 95, 163, 166, 184, 354], "highlight": [265, 333, 334, 335], "hinton": [5, 6], "histor": 362, "histori": [377, 379, 380, 381, 383, 397, 398, 399, 400, 401, 403, 404, 405, 406], "hold": [93, 199, 200, 201, 202], "horizont": [440, 451, 463, 468], "hot": [313, 316], "how": [2, 3, 12, 14, 136, 137, 138, 139, 144, 166, 200, 203, 305, 347, 468], "howard": 85, "howev": [196, 275], "hstack": 441, "html": [5, 6], "http": [5, 6, 7, 8, 15], "hu": [85, 265], "huang": 85, "huber": [235, 314], "huber_loss": [229, 236], "huberloss": [307, 317], "huberregressionmodel": 314, "hue": 468, "huge": [48, 85, 163, 166], "hybrid": [85, 101, 102, 159, 163], "hyperbol": [213, 287, 414, 425, 431], "hyperparamet": [104, 105, 106, 107, 108, 109, 112, 123, 151, 157, 164, 348, 360], "i": [0, 1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 69, 70, 71, 72, 73, 74, 75, 76, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 409, 410, 411, 412, 413, 414, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468], "i_1": [12, 13, 14, 305], "i_2": [12, 13, 14, 305], "i_k": 14, "i_m": [12, 14, 305], "iccv": 85, "iclr": 163, "idea": 85, "ideal": [42, 46, 50, 90, 93, 102, 166, 203], "ident": [21, 22, 77, 85, 258, 299, 307, 311, 382, 384, 401, 447], "identifi": 201, "idx": [2, 3], "ieee": [85, 163, 265], "ignor": [339, 340, 341, 342, 343], "ii": 432, "ij": [30, 212, 257, 285, 388, 389, 390, 394, 443, 453, 454], "ik": [388, 389, 390], "ill": [18, 24], "ilsvrc": 85, "imag": [3, 4, 5, 6, 7, 8, 14, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 60, 69, 70, 71, 72, 74, 75, 76, 82, 83, 84, 85, 86, 87, 88, 89, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 153, 154, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 217, 242, 258, 260, 265, 293, 295, 323, 443, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468], "image_dir": 3, "image_path": 3, "image_s": [190, 191, 192, 193, 194, 195], "imagedataset": 3, "imageio": 3, "imagenet": [55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 77, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 121, 122, 136, 137, 138, 139, 144], "imbal": [313, 316], "img_siz": [30, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], "impact": [85, 366], "implement": [2, 3, 15, 24, 28, 30, 39, 54, 59, 73, 74, 75, 76, 77, 83, 84, 85, 86, 90, 91, 92, 112, 121, 122, 124, 125, 126, 127, 128, 129, 130, 150, 152, 156, 159, 163, 164, 165, 178, 190, 197, 220, 223, 262, 263, 264, 266, 289, 290, 295, 299, 321, 341, 343, 348, 353, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 440, 456, 462], "impli": [292, 293], "implicit": 295, "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 122, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 222, 223, 224, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468], "improp": [10, 200, 203, 384], "improv": [30, 39, 60, 74, 75, 76, 80, 82, 84, 85, 102, 103, 112, 123, 136, 137, 138, 139, 140, 152, 158, 159, 161, 163, 165, 172, 174, 178, 179, 186, 187, 189, 222, 223, 239, 255, 258, 265, 277, 283, 287, 305, 337, 349, 350, 351, 356, 360, 361, 362, 363, 364, 365, 366, 367, 368, 461, 464, 468], "imread": 3, "in1_featur": [230, 308], "in2_featur": [230, 308], "in_channel": [30, 112, 159, 164, 165, 171, 172, 173, 174, 175, 176, 177, 178, 179, 190, 200, 203, 259, 260, 261, 262, 263, 264, 265, 266, 292, 293, 294, 319, 320, 330, 331, 332, 333, 334, 335, 347], "in_featur": [199, 200, 203, 232, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 293, 294, 297, 300, 301, 308, 310, 312, 313, 314, 315, 316, 318, 322, 325, 330, 331, 332, 333, 334, 335], "incept": [74, 75, 76, 77, 82, 83, 84], "inception_next": 77, "inception_next_atto": 85, "inception_next_bas": 85, "inception_next_smal": 85, "inception_next_tini": 85, "inception_resnet_v1": 85, "inception_resnet_v2": 85, "inception_v1": 85, "inception_v3": 85, "inception_v4": 85, "inceptionnext": [78, 79, 80, 81], "inceptionresnet": [83, 84], "includ": [3, 4, 7, 15, 16, 22, 23, 28, 39, 73, 74, 75, 83, 86, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 145, 151, 152, 155, 156, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 197, 198, 200, 202, 203, 257, 259, 260, 261, 262, 263, 264, 341, 343, 345, 347, 348, 353, 359, 366, 384, 390, 444, 453, 454], "inclus": [198, 201, 380, 383, 402], "incom": [232, 310], "incompat": 436, "incomplet": 2, "incompletedataset": 2, "incorpor": [27, 30, 85, 95, 123, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 186, 188, 277], "increas": [42, 43, 90, 98, 101, 123, 124, 125, 126, 127, 128, 129, 140, 158, 166, 167, 169, 172, 177, 216, 217, 218, 220, 258, 351, 356, 362, 369, 374, 440, 456, 462, 463, 465, 468], "independ": [200, 216, 217, 218, 289, 297, 300, 301, 302, 303, 325, 390, 400, 460, 462, 464, 466], "index": [0, 2, 5, 6, 7, 8, 10, 12, 240, 255, 305, 321, 337, 350, 351, 352, 353, 354, 355, 357, 374, 385, 397, 398, 401, 443, 447], "indexerror": 0, "indic": [0, 1, 13, 14, 15, 110, 111, 145, 155, 160, 161, 162, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 198, 200, 202, 203, 234, 238, 255, 313, 316, 330, 337, 339, 340, 341, 342, 343, 355, 372, 373, 385, 459, 461], "individu": [3, 200, 203, 314, 325, 359, 362, 369], "induc": [210, 283], "induct": [159, 163], "inf": 430, "infer": [136, 137, 138, 139, 144, 165, 200, 203, 372, 375], "infin": [25, 27, 365], "inform": [30, 85, 155, 163, 166, 180, 181, 182, 183, 188, 196, 265, 353, 359, 361, 375], "infti": [23, 367], "inherit": [1, 360, 368, 370], "init": 269, "initi": [1, 15, 30, 39, 54, 77, 82, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 146, 147, 148, 149, 151, 157, 184, 185, 186, 187, 196, 198, 199, 200, 201, 202, 203, 266, 268, 270, 271, 272, 273, 274, 275, 289, 292, 293, 294, 308, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 325, 337, 341, 343, 345, 347, 348, 350, 352, 354, 355, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 379, 382, 383, 384, 397, 401, 402, 403, 404, 405, 406, 435], "initial_accumulator_valu": 362, "inner": [388, 407], "innov": [92, 102], "input": [10, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 123, 136, 137, 138, 139, 140, 144, 150, 152, 155, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 345, 347, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 375, 384, 385, 386, 388, 389, 390, 394, 398, 400, 404, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468], "input1": 308, "input2": 308, "input_": [28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 152, 205, 206, 208, 209, 210, 211, 212, 213, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 321, 327, 328, 329, 337, 437, 453, 454], "input_1": 230, "input_2": 230, "input_data": [276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 292, 293, 294, 297, 300, 301, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 322, 325, 330, 331, 332, 333, 334, 335], "input_indic": [255, 337], "input_s": [200, 202, 285, 313, 316], "input_shap": 155, "input_tensor": [54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 150, 196, 199, 200, 201, 202, 203, 212, 222, 223, 244, 262, 263, 264, 265, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 325, 330, 331, 332, 333, 334, 335, 345, 347, 459, 460, 461, 462, 463, 464, 465, 466], "insid": [3, 373, 375], "insight": 85, "inspect": [15, 197, 198, 203, 348], "inspir": [10, 12, 14, 15, 39, 85], "instabl": [24, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370], "instanc": [0, 1, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 151, 153, 155, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 198, 199, 201, 202, 203, 242, 282, 322, 323, 324, 325, 339, 340, 342, 348, 372, 376, 435, 446, 452, 468], "instance_norm": [229, 241, 322, 323, 324], "instancenorm1d": [307, 326], "instancenorm1dmodel": 322, "instancenorm2d": [307, 326], "instancenorm3d": [307, 326], "instanti": [2, 31, 32, 33, 34, 35, 36, 37, 38, 59, 69, 70, 71, 72, 77, 78, 79, 80, 81, 98, 99, 100, 101, 136, 137, 138, 139, 144, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 188, 189, 191, 192, 193, 194, 195, 376], "instead": [155, 199, 200, 201, 202, 203, 270, 271, 274, 275, 337, 339, 341, 343, 363, 364, 365, 375, 399, 400], "int": [0, 1, 2, 5, 6, 7, 8, 12, 13, 14, 22, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 212, 215, 216, 217, 218, 220, 222, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 272, 273, 274, 275, 285, 289, 290, 292, 293, 294, 295, 298, 305, 308, 310, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 345, 350, 351, 352, 353, 354, 355, 356, 357, 363, 364, 365, 366, 367, 369, 372, 376, 377, 379, 380, 381, 382, 383, 385, 397, 398, 399, 400, 401, 402, 403, 405, 412, 419, 420, 421, 428, 429, 433, 434, 435, 436, 437, 438, 439, 442, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 458, 459, 461, 466], "int32": 337, "int64": [372, 385], "integ": [1, 3, 22, 130, 145, 216, 217, 218, 246, 247, 289, 292, 293, 294, 295, 325, 328, 329, 331, 332, 333, 334, 335, 380, 381, 383, 384, 399, 403, 405, 420, 428, 433, 434, 444, 446, 447, 449, 452], "integr": [1, 2, 4, 5, 6, 7, 8, 13, 15, 16, 85, 101, 103, 156, 159, 160, 161, 162, 198, 200, 202, 203, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 292, 293, 294, 305, 308, 310, 330, 331, 332, 333, 334, 335, 385], "intellig": [85, 265], "intend": [10, 167, 196, 201, 202], "intens": [24, 54, 113, 460, 462], "interact": [178, 230, 308, 347, 384], "interdepend": 85, "interfac": [2, 15, 197, 200, 359], "interfer": [373, 375], "intermedi": [24, 110, 111, 166, 265, 339, 341, 343, 385], "intern": [15, 85, 113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 163, 199, 200, 201, 202, 203, 313, 316, 347, 459, 460, 461, 462, 463, 464, 465, 466], "interpol": [229, 256, 345, 402, 466], "interpret": [10, 85, 212, 285, 438], "interv": [355, 357, 379, 383, 397], "introduc": [40, 60, 74, 75, 85, 90, 91, 92, 123, 159, 163, 164, 165, 173, 189, 209, 265, 277, 281, 282, 284, 287, 297, 300, 301, 302, 303, 339, 461, 464, 468], "introspect": [15, 203], "intuit": [10, 12, 15, 199, 201, 347, 468], "inv": 20, "inv_a": 21, "invari": [331, 334], "invers": [18, 21, 22, 24, 351, 362, 409, 410, 411], "invert": [18, 21, 22, 26, 85, 91, 92, 95], "invit": 15, "invok": 376, "involv": [12, 14, 15, 17, 18, 19, 21, 24, 25, 27, 140, 205, 206, 208, 209, 210, 211, 213, 230, 232, 257, 292, 293, 294, 305, 308, 310, 377, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 406, 416, 417, 418, 419, 421, 424, 426, 443, 444, 446, 452], "is_all_fre": 385, "is_bit_fre": 372, "is_caus": [215, 290, 342, 343], "is_fre": 385, "is_leaf": 385, "isn": 15, "issu": [3, 15, 283, 318, 319, 320, 363, 364], "item": [7, 15, 315], "iter": [0, 1, 2, 3, 196, 197, 200, 202, 340, 342, 348, 351, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 397], "ith": [212, 285], "its": [4, 15, 22, 24, 28, 40, 85, 93, 101, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 131, 132, 133, 134, 135, 141, 142, 143, 152, 155, 165, 196, 199, 200, 201, 202, 216, 217, 218, 220, 258, 266, 275, 277, 281, 286, 298, 333, 334, 335, 347, 348, 361, 369, 373, 374, 375, 376, 397, 399, 400, 405, 419, 421, 435, 436, 447, 449, 460, 463, 465, 468], "itself": [17, 22, 199, 200, 201, 202, 349], "j": [8, 10, 12, 13, 14, 30, 212, 255, 265, 285, 305, 318, 319, 320, 322, 323, 324, 330, 331, 333, 334, 337, 443, 451, 453, 454, 459, 461], "j_1": [12, 14, 305], "j_2": [12, 14, 305], "j_k": 14, "j_n": [12, 14, 305], "jie": 85, "jk": 389, "join": [3, 438], "json": 376, "k": [22, 30, 85, 165, 215, 216, 289, 290, 292, 313, 319, 320, 323, 324, 330, 333, 334, 343, 388, 389, 398, 401, 438, 449], "k_d": [218, 294, 332, 335], "k_h": [217, 218, 293, 294, 295, 331, 332, 335], "k_i": 289, "k_j": 30, "k_w": [217, 218, 293, 294, 295, 331, 332, 335], "kaim": [85, 270, 271, 274, 275], "kaiming_norm": 269, "kaiming_uniform": 269, "kalenichenko": 85, "karen": 85, "kashif": 7, "kdim": 289, "keep": [197, 223, 281, 361, 375, 447, 453, 454], "keep_grad": [198, 377, 379, 380, 381, 383, 385, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 435, 458], "keep_var": 197, "keepdim": [23, 419, 420, 421, 428, 434], "kei": [15, 93, 154, 159, 164, 170, 171, 172, 173, 175, 176, 177, 178, 179, 197, 199, 201, 203, 215, 289, 290, 343, 348], "kept": [420, 428, 434], "kernel": [85, 86, 87, 88, 89, 93, 96, 97, 140, 141, 142, 143, 144, 152, 216, 217, 218, 220, 245, 246, 247, 248, 249, 250, 252, 253, 254, 259, 260, 261, 262, 263, 264, 266, 292, 293, 294, 295, 327, 328, 329, 331, 332, 335], "kernel_s": [92, 96, 97, 140, 141, 142, 143, 200, 203, 248, 249, 250, 252, 253, 254, 259, 260, 261, 262, 263, 264, 266, 292, 293, 294, 295, 305, 319, 320, 330, 331, 332, 333, 334, 335], "keyerror": 197, "keyword": [29, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 197, 309], "kj": [388, 390], "known": 85, "kriz": [5, 6], "krizhevski": [5, 6, 85], "kroneck": [12, 212, 285, 305], "kwarg": [29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 309, 376], "l": [17, 24, 69, 85, 163, 193, 215, 216, 225, 245, 248, 252, 259, 265, 290, 295, 297, 300, 301, 302, 303, 312, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 325, 327, 342, 343, 429, 436], "l1": 244, "l2": [244, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370], "l_": [163, 216, 245, 248, 252, 292, 327, 330, 333, 339], "l_k": 289, "l_m": [340, 341], "l_out": [216, 248, 252], "l_q": 289, "l_t": [339, 340, 341], "l_v": 289, "label": [4, 5, 6, 7, 8, 75, 312, 313, 316], "lambd": 360, "lambda": [19, 210, 283, 354, 360, 364], "lambda_1": 19, "lambda_2": 19, "lambda_fn": 354, "lambda_i": 19, "lambda_n": 19, "lambdalr": 358, "languag": [4, 292, 308, 330, 333, 339], "larg": [0, 3, 24, 42, 48, 49, 53, 54, 69, 72, 85, 92, 96, 98, 101, 102, 113, 114, 115, 118, 131, 132, 163, 166, 167, 177, 181, 185, 186, 187, 191, 192, 193, 262, 263, 264, 282, 314, 347, 360, 363, 364, 365, 368, 369, 370, 375], "larger": [41, 59, 60, 112, 140, 158, 161, 162, 186, 199, 201, 216, 217, 218, 220, 222, 298, 360, 391, 437, 444, 459, 461, 466], "largest": [53, 166, 177, 185, 419], "last": [1, 212, 243, 285, 350, 351, 352, 353, 354, 355, 357, 389, 390, 437, 438, 463, 465], "last_channel": 92, "last_epoch": [350, 351, 352, 353, 354, 355, 357], "last_lr": [349, 350, 351, 352, 353, 354, 355, 356, 357], "later": [30, 85], "latest": [4, 15], "layer": [10, 15, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 54, 55, 56, 57, 58, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 145, 146, 147, 148, 149, 152, 154, 155, 156, 159, 163, 164, 165, 166, 170, 171, 172, 173, 175, 176, 177, 178, 179, 185, 186, 190, 197, 199, 200, 203, 212, 223, 232, 239, 242, 243, 259, 260, 261, 262, 263, 264, 265, 266, 270, 271, 274, 275, 285, 290, 292, 293, 294, 299, 308, 309, 310, 316, 325, 330, 331, 332, 333, 334, 335, 339, 340, 341, 342, 343, 347, 384, 444, 458], "layer1": 376, "layer2": 376, "layer_group": 200, "layer_norm": [229, 241, 325], "layer_norm_ep": [339, 341, 343], "layer_scale_init": 39, "layer_sequ": [200, 203], "layernorm": [159, 164, 165, 171, 172, 173, 175, 176, 177, 178, 179, 307, 326, 339, 340, 341, 342, 343], "layernormmodel": 325, "le": 85, "lead": [10, 15, 200, 203, 244, 277, 322, 323, 324, 325, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 384, 436], "leaf": 385, "leaki": [208, 280], "leaky_relu": [207, 229, 280], "leakyrelu": [288, 307], "learn": [1, 3, 4, 7, 8, 10, 13, 15, 22, 24, 30, 60, 79, 80, 85, 123, 124, 125, 126, 127, 128, 129, 152, 153, 154, 163, 166, 170, 199, 200, 201, 202, 209, 212, 265, 276, 280, 281, 285, 292, 293, 294, 300, 301, 302, 303, 305, 308, 310, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 374, 382, 402, 449, 453, 454, 457, 458, 468], "learnabl": [30, 178, 179, 196, 197, 198, 239, 240, 242, 243, 259, 260, 261, 289, 292, 293, 294, 308, 310, 318, 319, 320, 321, 322, 323, 324, 325, 343, 347], "least": [24, 25, 27, 345, 432, 453, 454], "lecun": [8, 85], "left": [22, 23, 24, 27, 30, 206, 212, 244, 277, 285, 289, 295, 312, 313, 314, 316, 318, 319, 320, 322, 323, 324, 325, 333, 334, 335, 341, 343, 429, 459, 461], "leftarrow": 366, "len": [0, 1, 2, 3, 443], "lenet": [87, 88, 89], "lenet_1": 85, "lenet_4": 85, "lenet_5": 85, "length": [200, 215, 216, 225, 245, 248, 252, 292, 309, 318, 322, 327, 330, 333, 342, 343, 444, 460], "leq": [278, 279, 314, 355, 367, 395, 412, 454], "lerp": 257, "less": [0, 205, 208, 235, 276, 280, 313, 314, 316, 402, 412], "let": 19, "level": [82, 166, 167, 168, 169, 295], "leverag": [12, 13, 14, 15, 26, 30, 76, 77, 84, 85, 98, 101, 124, 125, 126, 127, 128, 129, 150, 154, 171, 174, 180, 181, 182, 183, 184, 185, 266, 347], "lfloor": [295, 357], "li": [85, 174], "librari": [3, 10, 15, 16, 197, 347, 348, 359, 376, 384, 385, 468], "lie": 377, "lightweight": [15, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 91, 96, 97, 104, 105, 106, 107, 108, 109, 116, 133, 170, 174, 182, 183, 189, 195, 266, 279, 282], "like": [12, 13, 14, 15, 60, 82, 85, 93, 101, 124, 125, 126, 127, 128, 129, 141, 142, 143, 154, 156, 163, 187, 196, 197, 200, 203, 216, 222, 274, 275, 283, 297, 298, 305, 318, 319, 320, 322, 323, 324, 373, 374, 435, 458, 468], "likelihood": [238, 313, 316], "limit": [44, 51, 96, 97, 98, 100, 155, 282, 361, 412], "linalg": 20, "linalgerror": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27], "line": 15, "linear": [15, 16, 17, 24, 25, 26, 77, 85, 91, 95, 130, 155, 163, 165, 171, 172, 173, 174, 175, 176, 177, 199, 200, 201, 203, 205, 206, 208, 209, 210, 223, 270, 271, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 293, 294, 295, 297, 299, 300, 301, 308, 309, 312, 313, 314, 315, 316, 318, 322, 325, 330, 331, 332, 333, 334, 335, 339, 341, 343, 349, 376, 401], "linearli": 314, "linspac": 407, "linspace_tensor": 402, "list": [0, 1, 15, 30, 39, 40, 60, 77, 86, 92, 103, 112, 123, 130, 140, 145, 155, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 196, 198, 199, 200, 201, 202, 243, 266, 309, 325, 348, 350, 351, 352, 353, 354, 355, 356, 357, 377, 379, 380, 381, 383, 385, 398, 399, 400, 403, 404, 405, 406, 433, 436, 447, 449, 450, 455, 457], "listdir": 3, "liter": [13, 112, 196, 198, 233, 234, 235, 237, 238, 257, 259, 260, 261, 262, 263, 264, 266, 270, 271, 292, 293, 294, 312, 313, 314, 315, 316, 345, 351, 356, 372, 377, 379, 380, 381, 383, 385, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 443], "liu": [85, 163], "ln": 395, "load": [3, 4, 5, 6, 7, 8, 196, 197, 198, 348, 353, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 376], "load_state_dict": [197, 348, 353, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370], "loader": [1, 2, 3], "local": [15, 30, 85, 159, 160, 161, 162, 163, 164, 166, 169, 178, 179, 180, 181, 182, 183, 220, 292, 295, 351], "locat": [85, 257], "log": [179, 238, 312, 313, 316, 350, 351, 352, 353, 354, 355, 356, 357, 407, 418], "log2": 407, "log_2": 418, "log_softmax": 316, "logarithm": [395, 416, 417, 418], "logic": [3, 327, 328, 329, 347, 348], "logit": [28, 39, 152, 212, 285, 313], "logsoftmax": [313, 316], "long": [30, 154, 163, 167, 366, 433], "lookup": [255, 337], "loop": [1, 12, 13, 14, 15, 200, 305, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370], "loss": [15, 24, 199, 200, 201, 202, 203, 212, 233, 234, 235, 237, 238, 276, 277, 280, 281, 283, 284, 285, 287, 297, 300, 301, 302, 303, 309, 312, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 325, 348, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370], "low": [82, 91, 96, 97, 100, 380, 383], "lower": [17, 90, 273, 295, 340, 341, 342, 343, 351, 360, 368, 369, 370, 383, 453, 454], "lower_triangular": 453, "lowest": 380, "lp": 244, "lr": [15, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370], "lr_lambda": 354, "lr_schedul": 358, "lrschedul": 358, "ls_init_valu": 77, "lu": 21, "lucid": [0, 1, 2, 5, 6, 7, 8, 11, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 378, 407, 441, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466], "m": [70, 85, 145, 199, 200, 203, 289, 331, 332, 334, 335, 339, 340, 343, 355, 363, 364, 365, 366, 367, 401, 453, 454], "m1": 15, "m2": 15, "m3": 15, "m_": [363, 364, 365, 366, 367, 453, 454], "m_m": 341, "m_t": [341, 366, 367], "maaten": 85, "mac": 15, "machin": [3, 7, 8, 24, 85, 156, 265, 339, 363, 374, 382], "magnitud": [223, 255, 337, 368, 369, 468], "mai": [3, 10, 12, 14, 15, 19, 21, 24, 100, 200, 202, 244, 258, 299, 305, 314, 349, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 375, 384, 437, 462, 468], "main": [25, 82, 200, 398, 401, 453, 454], "maintain": [24, 30, 40, 45, 69, 70, 71, 72, 80, 85, 90, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144, 160, 161, 162, 168, 169, 170, 172, 173, 174, 175, 179, 196, 197, 199, 200, 201, 203, 210, 223, 270, 271, 274, 275, 276, 277, 283, 297, 299, 300, 301, 302, 303, 318, 319, 320, 322, 323, 324, 363, 368, 459, 462, 466], "major": 15, "make": [1, 3, 10, 30, 42, 43, 46, 47, 73, 82, 85, 86, 91, 93, 95, 96, 97, 99, 100, 102, 112, 163, 166, 175, 180, 181, 182, 183, 184, 188, 189, 191, 194, 200, 203, 284, 313, 314, 325, 331, 334, 347, 362, 363, 364, 365, 374, 376, 384, 390, 443, 449, 457, 468], "manag": [197, 199, 200, 201, 202, 203, 347, 359, 373, 375, 376, 384], "manhattan": 23, "mani": 155, "manipul": [10, 12, 199, 201, 468], "manner": [10, 12, 13, 178, 200, 203, 372], "manual": [10, 233, 234, 238, 295, 312, 313, 316, 375], "map": [12, 14, 77, 85, 110, 111, 112, 123, 133, 140, 197, 211, 213, 222, 240, 265, 284, 287, 299, 305, 321, 337, 437], "mark": 442, "marri": 85, "mask": [85, 196, 215, 289, 290, 297, 300, 301, 302, 303, 339, 340, 341, 342, 343, 442, 453, 454], "masked_fil": 441, "match": [10, 14, 15, 26, 197, 200, 203, 215, 233, 235, 237, 243, 259, 260, 261, 298, 337, 348, 416, 436, 446, 447, 449, 452, 455, 460, 468], "math": [289, 413, 424, 430], "mathbb": [289, 449], "mathbf": [12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 150, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 230, 232, 257, 262, 263, 264, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 290, 292, 293, 294, 297, 300, 301, 302, 303, 305, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 325, 330, 331, 332, 333, 334, 335, 388, 389, 390, 394, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 438, 440, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 456, 459, 460, 461, 462, 463, 464, 465, 466], "mathcal": [270, 272, 274, 297, 300, 301, 302, 303, 312, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 325], "mathemat": [15, 21, 259, 260, 261, 461, 463, 464, 465], "mathrm": 24, "matmul": [295, 407], "matric": [16, 18, 19, 21, 24, 26, 27, 289, 343, 388, 389, 390, 401, 443, 453, 454], "matrix": [12, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 27, 30, 220, 230, 255, 295, 309, 310, 337, 347, 388, 429, 443], "matrix_pow": 20, "matthew": 85, "max": [10, 23, 130, 145, 209, 244, 252, 253, 254, 255, 278, 279, 281, 282, 333, 334, 335, 337, 350, 351, 356, 365, 391, 407, 412], "max_lr": 351, "max_norm": [255, 337], "max_pool": [333, 334, 335], "max_pool1d": [229, 251], "max_pool2d": [229, 251], "max_pool3d": [229, 251], "max_valu": 412, "maxim": [3, 48, 101], "maximum": [23, 281, 282, 333, 334, 335, 350, 351, 363, 365, 407, 412, 419, 464], "maxpool": [28, 152], "maxpool1d": [307, 336], "maxpool1dmodel": 333, "maxpool2d": [200, 203, 293, 307, 336], "maxpool2dmodel": 334, "maxpool3d": [294, 307, 336], "maxpool3dmodel": 335, "mean": [5, 6, 7, 8, 10, 12, 13, 14, 25, 110, 111, 155, 196, 210, 216, 217, 218, 221, 233, 234, 235, 237, 238, 239, 242, 259, 260, 261, 272, 276, 277, 278, 280, 281, 283, 284, 287, 294, 297, 305, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 325, 356, 363, 364, 365, 366, 367, 368, 373, 381, 407, 412, 416, 417, 418, 419, 421, 424, 426, 428, 432, 433, 434, 457, 460, 468], "meaning": [13, 203], "measur": [312, 313, 315, 316], "mechan": [30, 110, 111, 130, 140, 144, 154, 156, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 174, 179, 180, 181, 182, 183, 184, 187, 188, 190, 202, 230, 289, 437], "media": 163, "medium": [47, 51, 70, 85, 98, 99, 102, 163, 168], "meet": 85, "mem_is_caus": [340, 341], "mem_key_padding_mask": [339, 340, 341], "mem_mask": [339, 340, 341], "membership": 312, "memori": [2, 3, 15, 54, 174, 339, 340, 341, 375, 399, 400], "merg": [12, 305], "meshgrid": 441, "metal": [372, 385], "method": [3, 10, 13, 15, 16, 21, 60, 130, 150, 151, 199, 200, 201, 202, 203, 233, 234, 235, 237, 238, 270, 271, 274, 275, 312, 313, 314, 315, 316, 345, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 384], "metric": 356, "mha": 289, "mid": [80, 194], "mid_channel": [96, 97], "middl": 374, "might": 347, "migrat": 15, "mileston": 355, "min": [278, 279, 282, 350, 351, 356, 392, 407, 412], "min_lr": 356, "min_valu": 412, "mind": [0, 3, 200, 203, 375], "mingx": 85, "mini": 1, "minim": [4, 78, 85, 92, 203, 312, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 325, 359], "minima": 351, "minimalist": 15, "minimum": [350, 351, 356, 407, 412, 421], "minu": 284, "mirror": [404, 406], "mismatch": [10, 12, 14, 60, 197, 305, 347, 348], "miss": [197, 347], "mitig": [208, 276, 280, 283, 318, 319, 320], "mix": 77, "mixer": 77, "mlp": [15, 77, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 266], "mlp_dim": 190, "mlp_ratio": [77, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179], "mlx": [372, 385], "mnist": [4, 7, 9, 87, 88], "mnist_train": [4, 8], "mobil": [85, 90, 91, 92, 93, 95, 96, 97, 100, 171], "mobilenet": [91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 282], "mobilenet_v2": 85, "mobilenet_v3": [96, 97], "mobilenet_v3_larg": 85, "mobilenet_v3_smal": 85, "mobilenet_v4": [98, 99, 100, 101, 102], "mobilenet_v4_conv_larg": 85, "mobilenet_v4_conv_medium": 85, "mobilenet_v4_conv_smal": 85, "mobilenet_v4_hybrid_larg": 85, "mobilenet_v4_hybrid_medium": 85, "mobilenetv2": [85, 91], "mobilenetv3": [85, 92, 96, 97], "mode": [15, 227, 239, 242, 257, 270, 271, 297, 299, 300, 301, 302, 303, 345, 351, 356, 385, 444], "model": [1, 3, 4, 10, 15, 22, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 212, 215, 222, 255, 258, 259, 260, 261, 266, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 297, 299, 300, 301, 305, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 322, 325, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 375, 376, 384, 457, 458, 468], "model_b0": 59, "model_b7": 59, "model_kwarg": 155, "model_tini": 77, "moder": [43, 47, 81, 99, 134, 175], "modern": [15, 39, 40, 77, 85], "modif": [151, 203, 375], "modifi": [15, 29, 98, 112, 150, 153, 199, 200, 201, 202, 268, 270, 271, 272, 273, 274, 275, 297, 349, 373, 375, 382, 385, 440, 442, 448, 456], "modul": [5, 6, 7, 8, 10, 15, 28, 29, 30, 39, 40, 59, 60, 73, 76, 77, 82, 83, 84, 85, 86, 90, 91, 92, 93, 102, 112, 123, 130, 140, 145, 150, 152, 153, 155, 156, 159, 164, 165, 178, 179, 196, 198, 199, 200, 201, 202, 203, 223, 259, 260, 261, 262, 263, 264, 265, 266, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 345, 347, 348, 349, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 376, 384, 458, 468], "modular": [3, 15, 154, 156, 197, 200, 203, 347, 468], "moduledict": [200, 201, 203, 204], "modulelist": [202, 203, 204], "moment": [363, 364, 365, 366, 367], "momentum": [239, 242, 259, 260, 261, 318, 319, 320, 322, 323, 324, 351, 360, 366, 368, 370], "momentum_decai": 366, "monitor": 356, "monoton": 286, "moor": 24, "more": [3, 4, 7, 10, 19, 42, 112, 119, 158, 162, 167, 168, 169, 173, 185, 186, 188, 189, 199, 200, 203, 222, 262, 263, 264, 276, 300, 301, 302, 303, 339, 347, 348, 359, 360, 361, 364, 365, 368, 369, 370, 381, 390, 432, 451, 453, 454, 468], "most": [16, 46, 85, 166, 334, 458, 459, 468], "move": [15, 360, 368], "mse": [235, 237, 314, 315], "mse_loss": [15, 229, 236], "mseloss": [307, 317], "mu": [30, 272, 318, 319, 320, 322, 323, 324, 325, 434], "mu_c": 460, "mu_i": [322, 323, 324], "much": [166, 468], "mul": 393, "multi": [3, 4, 77, 83, 85, 140, 141, 142, 143, 156, 160, 161, 162, 163, 164, 165, 170, 171, 172, 173, 175, 176, 177, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 212, 215, 234, 238, 266, 285, 289, 313, 316, 339, 341, 343, 385, 420, 428, 434], "multidimension": [379, 383, 399], "multiheadattent": [291, 307], "multipl": [1, 3, 12, 15, 16, 22, 26, 28, 112, 130, 144, 201, 202, 203, 220, 257, 258, 265, 266, 289, 295, 297, 300, 301, 302, 303, 305, 313, 316, 340, 342, 347, 349, 352, 356, 374, 377, 379, 380, 381, 383, 388, 393, 399, 400, 429, 437, 449, 457, 462, 468], "multipli": [22, 94, 202, 232, 310, 345, 355, 356, 357, 369, 394, 407, 418], "multisteplr": 358, "must": [0, 1, 3, 15, 17, 18, 19, 21, 22, 25, 26, 27, 155, 197, 199, 200, 201, 202, 203, 223, 243, 289, 297, 299, 300, 301, 302, 303, 316, 337, 339, 341, 343, 345, 348, 353, 375, 377, 432, 436, 437, 438, 440, 442, 444, 446, 447, 449, 451, 452, 453, 454, 456, 459, 460, 461, 462, 463, 465], "mx": [372, 385], "my_simple_model": 376, "mymodel": [197, 198, 347, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370], "myoptim": [348, 359], "n": [12, 22, 23, 85, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 163, 199, 200, 203, 215, 216, 217, 218, 220, 222, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 265, 270, 272, 274, 289, 290, 292, 293, 294, 295, 302, 303, 308, 310, 312, 313, 315, 316, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 340, 341, 342, 343, 401, 420, 432, 434], "n1": 23, "nabla_": [361, 362, 363, 364, 365, 366, 367, 369], "nabla_t": 367, "nadam": 371, "nair": [5, 6], "name": [10, 12, 13, 14, 85, 155, 163, 197, 199, 201, 203, 305, 376], "nan": [25, 27], "nano": [50, 85], "natur": [24, 154, 292, 308, 330, 333, 339, 395, 416, 417], "ndarrai": [15, 196, 198, 377, 385, 398, 400, 404, 406, 435], "ndim": [25, 27, 198, 385], "ne": 22, "nearest": [257, 345], "nearli": 385, "necessari": [4, 5, 6, 7, 8, 15, 24, 375, 440, 456], "need": [2, 4, 13, 14, 102, 163, 200, 201, 202, 212, 308, 339, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 375, 399, 400, 457, 458, 468], "neg": [22, 24, 27, 205, 238, 258, 276, 280, 281, 283, 313, 316, 369, 438], "negative_slop": [208, 280], "neglect": 202, "neighbor": 257, "neq": 23, "nest": [155, 200, 203, 347], "nestedmodel": 155, "nesterov": 366, "net": [85, 152], "network": [3, 4, 10, 13, 28, 29, 30, 39, 40, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 76, 82, 85, 89, 90, 93, 94, 98, 101, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 130, 131, 132, 133, 134, 135, 140, 145, 153, 154, 155, 156, 161, 163, 190, 196, 197, 198, 199, 200, 201, 202, 203, 206, 209, 210, 211, 212, 213, 216, 217, 218, 222, 223, 230, 232, 239, 258, 265, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 325, 330, 331, 332, 333, 334, 335, 337, 339, 341, 343, 347, 348, 359, 360, 368, 370, 383, 384, 385, 397, 403, 405, 419, 421, 444, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468], "neural": [3, 4, 10, 13, 28, 29, 30, 39, 59, 61, 62, 63, 64, 65, 66, 67, 68, 82, 85, 89, 153, 154, 155, 163, 196, 197, 198, 199, 200, 201, 202, 203, 206, 209, 210, 211, 212, 213, 216, 217, 218, 223, 230, 232, 239, 258, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 325, 330, 331, 332, 333, 334, 335, 337, 347, 348, 359, 360, 368, 370, 383, 384, 385, 397, 403, 405, 419, 421, 444, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468], "neuralnetwork": [278, 279, 281, 286], "neuron": 280, "never": 462, "new": [14, 197, 198, 205, 206, 208, 209, 210, 211, 213, 230, 232, 257, 266, 270, 271, 272, 273, 274, 275, 348, 353, 356, 376, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 400, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 435, 436, 438, 440, 442, 444, 446, 447, 448, 451, 452, 453, 454, 455, 456], "new_tensor": 429, "next": [203, 457], "nll": 238, "nll_loss": [229, 236], "nllloss": [307, 317], "nlp": [255, 337], "nn": [5, 6, 7, 8, 28, 30, 39, 40, 54, 59, 60, 73, 77, 82, 86, 90, 91, 92, 93, 112, 123, 130, 136, 137, 138, 139, 140, 144, 145, 152, 155, 159, 164, 165, 171, 172, 173, 175, 176, 177, 178, 179, 204, 207, 214, 219, 228, 231, 236, 241, 251, 256, 267, 269, 288, 291, 296, 304, 306, 307, 311, 317, 326, 336, 338, 344, 346, 348, 349, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 376, 458, 468], "no_grad": [15, 373], "node": [15, 385], "nois": [27, 384], "non": [19, 22, 24, 27, 163, 202, 206, 208, 209, 270, 271, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 297, 300, 301, 302, 303, 339, 340, 341, 342, 343, 363, 364, 375, 395, 412], "nonconform": 15, "none": [0, 1, 2, 5, 6, 7, 8, 23, 30, 59, 60, 73, 77, 82, 86, 90, 91, 92, 93, 103, 112, 150, 155, 159, 164, 165, 178, 179, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 223, 230, 232, 233, 234, 235, 237, 238, 239, 242, 243, 255, 258, 259, 260, 261, 262, 263, 264, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 345, 348, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 374, 377, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 438, 440, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 463, 465, 466], "norm": [16, 20, 159, 164, 165, 178, 179, 244, 255, 337, 340, 342, 365], "norm_first": [339, 341, 343], "norm_lay": [159, 164, 165, 171, 172, 173, 175, 176, 177, 178, 179], "norm_typ": [255, 337], "normal": [5, 6, 7, 8, 30, 39, 85, 130, 159, 164, 165, 171, 172, 173, 175, 176, 177, 178, 179, 184, 185, 186, 187, 188, 189, 206, 210, 212, 213, 222, 239, 240, 242, 243, 255, 259, 260, 261, 269, 270, 274, 277, 283, 285, 297, 318, 319, 320, 321, 322, 323, 324, 325, 337, 339, 340, 341, 342, 343, 368, 381, 384, 457, 467, 468], "normalized_shap": [243, 325], "notat": [10, 12, 13, 14, 305], "note": [216, 297], "noth": [221, 224, 225, 226], "notimplementederror": [2, 197, 348], "notin": 412, "nov": 85, "novel": [7, 85], "now": 15, "np": [112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 196, 198, 265, 313, 316, 337, 372, 385, 390, 397, 398, 401, 403, 405, 406, 429, 435, 458], "npy": [5, 6, 7, 8], "num": [340, 342, 402], "num_block": 30, "num_class": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 285, 313, 316], "num_decoder_lay": [156, 339], "num_embed": [255, 337], "num_encoder_lay": [156, 339], "num_featur": [203, 259, 260, 261, 318, 319, 320, 322, 323, 324], "num_head": [30, 156, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 289, 339, 340, 341, 342, 343], "num_init_featur": [54, 55, 56, 57, 58], "num_lay": [190, 340, 342], "num_paramet": 202, "num_stag": 165, "number": [0, 1, 2, 5, 6, 7, 8, 10, 12, 14, 18, 19, 21, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 200, 202, 203, 215, 216, 217, 218, 220, 225, 226, 227, 230, 232, 234, 238, 239, 240, 242, 245, 246, 247, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 270, 271, 274, 275, 284, 289, 292, 293, 294, 295, 305, 308, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 350, 351, 355, 356, 357, 360, 372, 379, 382, 383, 385, 395, 397, 399, 401, 402, 419, 420, 421, 433, 434, 437, 438, 440, 444, 446, 447, 448, 450, 452, 456, 460, 462, 463, 465, 468], "numer": [13, 21, 24, 222, 233, 234, 239, 240, 242, 243, 244, 259, 260, 261, 282, 298, 312, 313, 318, 319, 320, 321, 322, 323, 324, 325, 339, 341, 343, 361, 362, 363, 364, 365, 366, 367, 368, 385, 387, 397, 398, 399, 400, 401, 402, 403, 405, 435, 458], "numpi": [15, 196, 198, 313, 316, 372, 385, 390, 429, 432, 436, 444, 446, 452, 458, 468], "o": [3, 289, 332, 335, 403, 404], "object": [1, 3, 16, 85, 140, 184, 185, 186, 187, 188, 197, 201, 202, 315, 347, 372, 375, 386, 387, 391, 392, 393, 396, 435], "observ": 363, "obtain": 1, "occur": [14, 258, 375, 376, 438], "occurr": 22, "odot": [297, 300, 301, 302, 303], "off": [43, 99, 373], "offer": [4, 10, 40, 41, 43, 53, 80, 99, 162, 168, 169, 171, 173, 191, 347, 359, 384, 468], "offset": 401, "often": [22, 121, 122, 216, 217, 218, 220, 255, 298, 313, 316, 397, 405, 458, 462, 466, 468], "old": 356, "older": 366, "onc": 375, "one": [0, 13, 136, 137, 138, 139, 144, 202, 203, 212, 216, 232, 248, 252, 259, 260, 261, 283, 284, 285, 292, 301, 313, 316, 318, 322, 330, 333, 345, 348, 374, 381, 396, 404, 419, 421, 439, 445, 451, 458], "ones": [15, 230, 232, 292, 293, 294, 310, 318, 319, 320, 322, 323, 324, 325, 347, 401, 404, 407, 437], "ones_lik": 407, "onli": [155, 257, 278, 281, 297, 298, 300, 301, 302, 303, 312, 313, 316, 318, 319, 320, 322, 323, 324, 325, 333, 334, 335, 369, 373, 397, 412, 419, 421, 429, 432, 444, 445, 447, 448, 450, 453, 454], "onto": [25, 27], "openml": [5, 6, 7, 8, 15], "oper": [3, 10, 12, 13, 14, 15, 16, 21, 24, 30, 110, 111, 130, 131, 132, 133, 134, 135, 174, 196, 197, 200, 205, 206, 208, 209, 210, 211, 213, 215, 216, 217, 218, 220, 223, 227, 230, 232, 245, 246, 247, 248, 249, 250, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 290, 292, 293, 294, 295, 297, 299, 300, 301, 302, 303, 305, 308, 309, 310, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 347, 373, 374, 375, 377, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 399, 400, 403, 405, 416, 417, 418, 419, 420, 421, 424, 426, 428, 429, 432, 434, 438, 440, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 460, 466], "operand": 385, "operatornam": [22, 24, 289, 339, 340, 341, 342, 343], "opposit": [360, 448], "optim": [3, 10, 13, 15, 16, 22, 24, 25, 27, 39, 44, 45, 48, 51, 53, 54, 60, 69, 70, 71, 72, 73, 74, 75, 76, 79, 82, 83, 84, 85, 91, 92, 96, 97, 99, 100, 101, 102, 166, 184, 185, 196, 198, 201, 202, 220, 292, 293, 294, 337, 347, 350, 351, 352, 353, 354, 355, 356, 357, 375], "optimizer_st": [348, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370], "option": [1, 5, 6, 7, 8, 10, 12, 13, 14, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 208, 212, 215, 217, 218, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 270, 271, 272, 273, 274, 275, 276, 280, 285, 290, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 345, 348, 350, 351, 352, 353, 354, 355, 356, 357, 360, 368, 370, 377, 379, 380, 381, 383, 385, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 419, 420, 421, 428, 433, 434, 435, 437, 438, 443, 446, 448, 449, 450, 451, 453, 454, 458, 462, 463, 465], "ord": [23, 244], "order": [1, 3, 10, 15, 23, 27, 199, 200, 201, 202, 203, 433, 457], "ordered_dict": 203, "ordereddict": [197, 199, 200, 203], "organ": [199, 200, 201, 203, 376], "orient": 468, "origin": [31, 32, 33, 34, 35, 36, 37, 38, 40, 75, 89, 163, 178, 179, 189, 221, 258, 265, 287, 437, 444, 445, 446, 447, 448, 452, 455, 466], "orthogon": [24, 25, 27], "orthonorm": 25, "oscil": [360, 368, 370], "other": [2, 3, 21, 75, 84, 86, 89, 99, 164, 196, 197, 200, 203, 270, 271, 297, 298, 347, 348, 373, 375, 384, 397, 399, 403, 405, 432, 443, 468], "otherwis": [113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 205, 208, 209, 210, 212, 223, 276, 278, 279, 280, 281, 283, 285, 299, 300, 301, 302, 303, 314, 330, 331, 332, 333, 334, 335, 340, 342, 348, 369, 376, 391, 392, 419, 421, 442, 453, 454], "otim": [24, 230, 308], "out": [0, 3, 4, 10, 15, 205, 206, 208, 209, 210, 211, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 270, 271, 274, 275, 290, 292, 293, 294, 295, 297, 299, 300, 301, 302, 303, 305, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 341, 360, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 438, 439, 440, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 456], "out_channel": [86, 92, 96, 97, 200, 203, 259, 260, 261, 262, 263, 264, 266, 292, 293, 294, 319, 320, 330, 331, 332, 333, 334, 335, 347], "out_featur": [199, 200, 203, 230, 232, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 293, 294, 297, 300, 301, 308, 310, 312, 313, 314, 315, 316, 318, 322, 325, 330, 331, 332, 333, 334, 335], "outcom": [462, 463, 465], "outer": 407, "outlier": [235, 314], "output": [0, 1, 2, 10, 14, 15, 22, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 230, 232, 244, 245, 246, 247, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 345, 347, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 373, 374, 375, 377, 380, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 398, 400, 401, 403, 405, 406, 416, 417, 418, 419, 420, 421, 424, 426, 428, 429, 432, 433, 434, 442, 443, 444, 446, 448, 449, 452, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466], "output_height": 220, "output_lay": [200, 203], "output_s": [200, 245, 246, 247, 327, 328, 329], "output_width": 220, "output_with_norm": [255, 337], "output_with_pad": [255, 337], "outsid": [0, 299], "over": [0, 1, 2, 3, 13, 16, 91, 101, 110, 111, 140, 152, 197, 200, 202, 212, 245, 246, 247, 265, 285, 292, 293, 294, 313, 316, 318, 319, 320, 322, 323, 324, 325, 328, 329, 330, 331, 332, 333, 334, 335, 349, 351, 357, 360, 361, 362, 363, 364, 379, 383, 419, 420, 421, 428, 432, 434, 462, 463, 465], "overal": [150, 223], "overdetermin": 24, "overfit": [1, 28, 152, 224, 227, 298, 300, 301, 302, 303, 360, 363, 368, 370], "overhead": [85, 92, 265], "overlap": 163, "overli": 282, "overrid": [2, 3, 99, 100, 101, 178, 179], "overridden": [197, 348], "overshoot": 349, "overwrit": [199, 201], "own": [4, 15, 199, 200, 201, 202, 216, 217, 218, 275, 347, 460], "p": [23, 24, 59, 198, 201, 202, 221, 222, 223, 224, 225, 226, 227, 244, 255, 295, 297, 298, 300, 301, 302, 303, 330, 333, 334, 337, 462, 463, 465, 468], "p_d": [332, 335], "p_h": [295, 331, 332, 335], "p_w": [295, 331, 332, 335], "packag": [2, 3, 4, 10, 16, 154, 347, 359, 376, 382, 384, 458, 468], "pad": [86, 200, 203, 216, 217, 218, 220, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 259, 260, 261, 262, 263, 264, 266, 292, 293, 294, 295, 319, 320, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 441], "pad_after_dim1": 444, "pad_after_dim2": 444, "pad_before_dim1": 444, "pad_before_dim2": 444, "pad_width": 444, "padding_height": 220, "padding_idx": [255, 337], "padding_width": 220, "pair": 230, "panda": 15, "pang": 85, "paper": [31, 32, 33, 34, 35, 36, 37, 38, 74, 174], "paradigm": 85, "parallel": [1, 3, 85, 140, 154, 163, 289], "param": [197, 198, 201, 202, 348, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370], "param1": 197, "param_dict": 201, "param_group": [348, 359], "param_groups_setup": 348, "param_list": 202, "param_s": 376, "paramet": [0, 2, 15, 85, 87, 88, 89, 163, 197, 347, 348, 349, 359, 384, 468], "parameter": 93, "parameterdict": 204, "parameterlist": 204, "parent": [15, 347, 385], "pars": 372, "part": [196, 197, 275, 337, 347, 373, 375, 384, 397, 398, 401, 403, 404, 405, 406, 437, 449, 453, 454, 458, 468], "partialparticip": [15, 198, 458], "particular": [199, 201], "particularli": [24, 91, 99, 124, 125, 126, 127, 128, 129, 200, 201, 202, 203, 212, 222, 232, 259, 260, 261, 262, 263, 264, 285, 310, 313, 316, 322, 323, 324, 325, 350, 364, 373, 376, 402, 457], "partit": 449, "pass": [2, 15, 24, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 155, 174, 197, 198, 199, 200, 201, 202, 203, 257, 259, 260, 261, 265, 266, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 293, 294, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 322, 325, 330, 331, 332, 333, 334, 335, 339, 340, 341, 342, 343, 347, 385, 402, 420, 428, 432, 433, 434, 438, 440, 445, 447, 450, 453, 454, 456, 458, 468], "past": [360, 361, 363, 368], "patch": [163, 164, 165, 178, 179, 190, 191, 192, 193, 194, 195, 220, 295, 331], "patch_norm": [178, 179], "patch_siz": [164, 165, 171, 172, 173, 174, 175, 176, 177, 178, 179, 190, 191, 192, 193, 194, 195], "path": [3, 5, 6, 7, 8, 39, 40, 77, 165, 223, 299], "pathwai": 85, "patienc": 356, "pattern": [10, 12, 13, 14, 15, 30, 85, 209, 265, 281, 292, 293, 294, 305], "pedagog": 15, "penal": [360, 368, 370], "penalti": [361, 362, 363, 364, 365, 366, 367], "penros": 24, "per": [1, 12, 92, 124, 125, 126, 127, 128, 129, 141, 142, 143, 165, 171, 172, 173, 175, 176, 177, 215, 245, 289, 295, 305, 322, 323, 324, 325, 327, 343, 351, 436], "perceptron": 77, "perform": [3, 10, 13, 15, 16, 17, 24, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 60, 69, 70, 71, 72, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 99, 100, 101, 102, 120, 136, 137, 138, 139, 140, 145, 152, 158, 160, 161, 162, 163, 166, 167, 168, 169, 171, 174, 179, 185, 186, 187, 194, 197, 198, 202, 206, 215, 216, 217, 218, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 262, 263, 264, 265, 266, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 292, 293, 294, 295, 297, 300, 301, 302, 303, 305, 308, 309, 310, 318, 319, 320, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 345, 348, 349, 353, 356, 373, 375, 382, 384, 386, 387, 390, 393, 396, 416, 419, 421, 428, 433, 436, 449, 457, 459, 461, 466, 468], "period": 350, "permut": [12, 305, 433], "persist": [196, 377, 379, 380, 381, 383, 399, 400], "perturb": [19, 26, 27, 468], "phase": 30, "phi": [206, 277], "pi": [206, 277, 350, 413, 424, 430], "pico": [51, 85], "piecewis": [278, 279], "pil": [458, 468], "pinv": 20, "pioneer": 85, "pip": 15, "pipelin": [5, 6, 7, 8, 305, 384, 457, 458, 460], "pixel": [5, 6, 7, 8, 257, 345, 460, 462], "place": [268, 270, 271, 272, 273, 274, 275, 385, 442, 448], "placehold": [197, 309], "placement": [15, 385], "plai": 384, "platform": 372, "plot": 443, "point": [4, 258, 355, 373], "pointwis": [262, 263, 264], "pool": [10, 28, 85, 86, 87, 88, 89, 103, 112, 123, 130, 140, 145, 152, 245, 246, 247, 248, 249, 250, 252, 253, 254, 265, 266, 293, 294, 327, 328, 329, 330, 331, 332, 333, 334, 335, 419, 421], "pool1": 203, "pool2": 203, "poorli": 21, "popul": 197, "popular": [4, 85], "portion": [437, 453, 454, 468], "pose": 24, "posit": [1, 17, 22, 30, 85, 156, 178, 179, 190, 197, 203, 215, 258, 276, 280, 281, 283, 290, 330, 331, 332, 333, 334, 335, 339, 340, 341, 342, 343, 369, 374, 395, 437, 442, 446, 452, 461], "possibl": 468, "potenti": [24, 309, 368, 450], "power": [10, 15, 22, 50, 85, 91, 96, 97, 103, 165, 166, 168, 172, 175, 184, 192, 265, 305, 349, 374, 375, 407, 457, 458, 468], "pp": [85, 163], "practic": [24, 80, 313, 316], "practition": 468, "pre": [30, 69, 70, 71, 72, 85, 113, 117, 118], "preactbottleneck": [113, 117, 118], "preced": [85, 198, 345], "precis": [176, 372], "preconfigur": [61, 62, 63, 64, 65, 66, 67, 68, 83, 84], "pred": 15, "predecessor": [40, 165], "predefin": [4, 31, 32, 33, 34, 35, 36, 37, 38, 154, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 200, 283, 337, 349, 372], "predict": [150, 163, 178, 180, 181, 182, 183, 312, 313, 315, 316], "prefer": 357, "prefix": [197, 376], "prepar": [3, 374, 444, 446, 452, 458, 468], "prepend": [197, 436], "preprint": [85, 163], "preprocess": [3, 4, 220, 258, 384, 457, 458, 468], "present": [312, 313, 314, 316, 318, 319, 320, 322, 323, 324, 325, 331], "preserv": [13, 85, 166, 221, 223, 258, 297, 299, 397, 398, 401, 403, 404, 405, 406, 420, 428, 429, 434, 437, 448], "preset": 4, "prevent": [1, 10, 15, 199, 200, 201, 202, 203, 215, 224, 227, 244, 282, 290, 298, 300, 301, 302, 303, 312, 313, 342, 343, 349, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 375], "previou": [85, 360, 369, 375], "previous": [353, 363], "primarili": 203, "principl": 85, "print": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 345, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 372, 373, 374, 375, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 466], "print_grad": 385, "priorit": [96, 97, 101, 266, 278], "prob": 377, "probabilist": 384, "probabl": [59, 75, 156, 164, 178, 179, 190, 206, 212, 215, 221, 222, 223, 224, 225, 226, 227, 233, 277, 285, 289, 290, 297, 298, 299, 300, 301, 302, 303, 312, 313, 316, 339, 341, 343, 377, 462, 463, 465, 468], "problem": [24, 25, 27, 85, 208, 276, 280, 367], "proceed": [85, 163], "process": [2, 3, 4, 22, 25, 27, 28, 39, 83, 85, 110, 111, 112, 140, 151, 152, 154, 163, 164, 178, 202, 216, 217, 218, 242, 258, 259, 260, 261, 265, 266, 283, 287, 292, 294, 308, 318, 319, 320, 322, 323, 324, 325, 330, 332, 333, 335, 339, 340, 342, 360, 443, 458, 459, 460, 461, 466, 468], "produc": [15, 28, 152, 155, 245, 246, 247, 265, 292, 293, 294, 327, 328, 329, 382, 384], "product": [25, 27, 164, 165, 215, 279, 284, 286, 289, 290, 308, 325, 347, 388, 389, 393, 394], "program": [373, 384], "progress": [60, 163, 164, 166, 167, 168, 169, 170, 352, 354, 355, 362], "project": [25, 27, 156, 159, 164, 165, 170, 171, 172, 173, 175, 176, 177, 178, 179, 289], "projector": 24, "promin": [330, 332, 333, 334, 335], "promot": [203, 313, 316, 347], "propag": [15, 18, 19, 21, 24, 25, 26, 27, 85, 197, 203, 230, 232, 257, 265, 331, 332, 368, 369, 377, 388, 389, 390, 394, 419, 421, 437, 443, 444, 447, 455], "proper": [255, 437], "properli": [0, 202, 212, 285, 347, 349], "properti": [16, 18, 21, 22, 206, 210, 221, 277, 283, 297, 362, 367], "proport": [5, 6, 7, 8, 434], "proportion": 466, "propos": 174, "provid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 29, 41, 50, 52, 73, 74, 75, 82, 85, 86, 93, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 145, 150, 151, 153, 154, 156, 166, 168, 169, 176, 178, 179, 187, 190, 192, 193, 197, 199, 200, 201, 202, 206, 215, 232, 246, 247, 255, 258, 290, 305, 312, 313, 314, 316, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 342, 345, 347, 348, 349, 353, 354, 359, 360, 361, 368, 370, 373, 375, 382, 384, 385, 390, 397, 404, 419, 421, 433, 435, 446, 450, 452, 468], "pseudo": [21, 24], "purpos": [41, 46, 50, 379, 383, 397, 403, 405], "pvt": [165, 166, 167, 168, 169, 170], "pvt_huge": 163, "pvt_larg": 163, "pvt_medium": 163, "pvt_small": 163, "pvt_tini": 163, "pvt_v2": [171, 172, 173, 174, 175, 176, 177], "pvt_v2_b0": 163, "pvt_v2_b1": 163, "pvt_v2_b2": [163, 174], "pvt_v2_b2_li": 163, "pvt_v2_b3": 163, "pvt_v2_b4": 163, "pvt_v2_b5": 163, "pvtv2": [163, 171, 172, 173, 174, 175, 176, 177], "pypi": 15, "pyramid": [164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177], "python": [15, 372, 385], "pytorch": [15, 435], "q": [25, 85, 165, 215, 289, 290, 343], "q_i": [30, 289], "qk": [30, 341, 343], "qk_scale": [164, 165, 178, 179], "qkv_bia": [164, 165, 171, 172, 173, 175, 176, 177, 178, 179], "qr": 20, "quad": [24, 255, 289, 312, 313, 314, 315, 316, 333, 334, 335, 340, 342, 386, 387, 391, 392, 393, 396, 453, 454, 459], "quadrat": [165, 174, 314], "qualifi": 356, "queri": [159, 164, 165, 171, 172, 173, 175, 176, 177, 178, 179, 215, 289, 290, 343], "quickli": 349, "quoc": 85, "quotient": 387, "r": [13, 14, 25, 30, 85, 289, 449, 462, 463, 464, 465], "r_t": 367, "radam": 371, "radix": [103, 104, 105, 106, 107, 108, 109, 110, 111], "rais": [0, 1, 2, 197, 347, 348, 395, 436], "rand": [378, 384], "randint": [378, 384], "randn": [12, 14, 15, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 94, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 150, 152, 215, 262, 263, 264, 265, 266, 289, 290, 305, 339, 340, 341, 342, 343, 347, 378, 382, 384], "random": [1, 2, 3, 12, 14, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 94, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 150, 215, 262, 263, 264, 265, 266, 289, 299, 305, 337, 339, 340, 341, 342, 343, 461, 462, 463, 464, 465, 468], "random_integ": 384, "random_tensor": 384, "randomcrop": [467, 468], "randomgrayscal": [467, 468], "randomhorizontalflip": [467, 468], "randomli": [1, 221, 223, 224, 225, 226, 227, 258, 297, 300, 301, 302, 303, 461, 462, 463, 464, 465, 468], "randomnoisedataset": [0, 1, 2], "randomrot": [467, 468], "randomverticalflip": 467, "rang": [0, 1, 15, 16, 30, 43, 52, 85, 102, 112, 120, 154, 163, 167, 188, 202, 211, 213, 216, 217, 223, 234, 238, 275, 282, 284, 287, 299, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 368, 370, 377, 380, 402, 409, 410, 412, 460, 464, 468], "rank": 24, "rasul": 7, "rate": [39, 40, 59, 60, 77, 164, 165, 178, 179, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370], "rather": [7, 12, 14, 201, 202, 305, 355, 364, 447], "ratio": [59, 77, 130, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 265, 266, 466], "ravel": 441, "raw": [212, 285, 313, 385], "rcond": 24, "re": [15, 198, 375], "reach": 355, "readabl": [10, 15, 199, 200, 201, 203, 305, 347], "readi": [3, 136, 137, 138, 139, 144, 154, 156], "real": [24, 27, 91, 284], "rearrang": [11, 220, 306, 307], "reassembl": 85, "recalibr": [85, 131, 133, 134, 136, 137, 138, 139, 265], "receiv": [333, 334, 335, 444, 453, 454], "recent": 368, "recept": [85, 140, 144, 174, 266], "reciproc": [24, 407, 417, 418, 426], "recognit": [85, 89, 110, 111, 163, 168, 178, 180, 181, 182, 183, 189, 293], "recommend": 15, "rectangular": 401, "rectif": 367, "rectifi": [208, 209, 280, 281, 367], "recurr": [163, 200, 325], "recurs": [155, 197], "red": 462, "reduc": [11, 28, 30, 85, 90, 112, 123, 140, 145, 152, 159, 163, 165, 174, 262, 263, 264, 265, 318, 319, 320, 322, 323, 324, 330, 331, 332, 333, 334, 335, 349, 352, 355, 356, 357, 366, 369, 375, 419, 420, 421, 428, 434, 462], "reducelronplateau": 358, "reduct": [10, 13, 27, 59, 130, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 233, 234, 235, 237, 238, 265, 266, 312, 313, 314, 315, 316, 350, 356, 357, 419, 421], "reevalu": 348, "refer": [4, 174, 197, 384, 398, 401, 438], "refin": [85, 187, 349], "reflect": [167, 373], "regardless": [24, 445], "region": [218, 222, 245, 246, 247, 257, 278, 298, 328, 329, 444, 459, 468], "regist": [15, 31, 32, 33, 34, 35, 36, 37, 38, 99, 121, 122, 124, 125, 126, 127, 128, 129, 151, 196, 197, 198, 202, 347, 376, 385], "register_buff": 196, "register_hook": 385, "register_model": [29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 141, 142, 143, 146, 147, 148, 149, 151, 153, 157, 158, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195], "register_paramet": 197, "registr": [15, 197, 347], "registri": [124, 125, 126, 127, 128, 129, 376], "registry_path": 376, "regress": [4, 237, 314, 315], "regul": [255, 337], "regular": [24, 28, 39, 59, 60, 75, 152, 178, 179, 223, 227, 290, 298, 300, 301, 302, 303, 355, 357, 360, 361, 362, 365, 366, 367, 368, 370], "reimagin": 85, "rel": [30, 85, 178, 179, 349, 356], "relat": [375, 401, 403], "relationship": [30, 166, 168, 466], "relev": [257, 360, 368, 370], "reli": [222, 375], "reliabl": [5, 6, 7, 8], "reliant": [300, 301, 302, 303], "relu": [15, 28, 85, 130, 145, 152, 155, 199, 200, 201, 203, 205, 207, 208, 229, 259, 260, 261, 265, 266, 270, 271, 274, 275, 276, 280, 282, 286, 288, 292, 293, 294, 307, 308, 309, 310, 339, 341, 343], "relu1": 203, "relu2": 203, "relu3": 203, "relu6": [288, 307], "remain": [5, 6, 7, 8, 15, 52, 196, 223, 243, 297, 299, 300, 301, 302, 303, 337, 369], "rememb": 384, "remov": [376, 450], "reorder": [10, 12, 305, 429, 448], "rep": 452, "repeat": [11, 441, 443, 452], "repetit": [10, 14, 446, 452], "replac": [7, 163, 339, 384, 442, 462], "replic": [14, 15, 295, 340, 342, 436], "repr": 372, "repres": [7, 12, 13, 14, 21, 23, 27, 86, 93, 104, 105, 106, 107, 108, 109, 160, 161, 162, 164, 170, 197, 198, 203, 230, 232, 239, 242, 243, 255, 292, 293, 294, 305, 308, 310, 313, 316, 325, 337, 340, 348, 357, 359, 360, 366, 367, 368, 369, 370, 372, 377, 386, 387, 393, 396, 398, 420, 432, 433, 434, 443, 459, 461, 463, 464, 465, 466], "represent": [30, 85, 103, 110, 111, 121, 122, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 140, 144, 156, 163, 165, 166, 167, 168, 169, 172, 176, 177, 190, 255, 265, 331, 334, 337, 348], "reproduc": [377, 379, 380, 381, 382, 383, 384, 468], "requir": [2, 3, 4, 13, 15, 42, 48, 49, 81, 92, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 124, 125, 126, 127, 128, 129, 140, 158, 193, 195, 196, 199, 203, 205, 206, 208, 209, 210, 211, 213, 230, 232, 257, 265, 266, 275, 309, 313, 316, 347, 355, 373, 375, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 401, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 436, 438, 440, 442, 443, 444, 445, 446, 447, 450, 451, 452, 455, 456, 458, 459, 466], "requires_grad": [15, 196, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 220, 230, 232, 255, 257, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 292, 293, 294, 295, 297, 300, 301, 302, 303, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 325, 330, 331, 332, 333, 334, 335, 345, 347, 377, 379, 380, 381, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458], "rescal": [233, 234, 238, 312, 313, 316], "research": [15, 347], "reset": [198, 350, 382, 385], "reshap": [10, 12, 130, 232, 293, 294, 305, 345, 374, 429, 441, 445], "resid": 385, "residu": [76, 82, 83, 84, 85, 91, 92, 95, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 131, 132, 133, 134, 135, 165, 341, 343], "residualblock": 112, "resili": 369, "resiz": [257, 457, 467, 468], "resnest": [104, 105, 106, 107, 108, 109, 110, 111], "resnest_101": 85, "resnest_14": 85, "resnest_200": 85, "resnest_26": 85, "resnest_269": 85, "resnest_50": 85, "resnest_50_1s4x24d": 85, "resnest_50_4s2x40d": 85, "resnet": [82, 83, 84, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 131, 132, 133, 134, 135, 140, 141, 142, 143, 265], "resnet_1001": 85, "resnet_101": 85, "resnet_152": 85, "resnet_18": 85, "resnet_200": 85, "resnet_269": 85, "resnet_34": 85, "resnet_50": 85, "resnet_arg": 140, "resnext": [124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144], "resnext_101_32x16d": 85, "resnext_101_32x32d": 85, "resnext_101_32x4d": 85, "resnext_101_32x8d": 85, "resnext_101_64x4d": 85, "resnext_50_32x4d": 85, "resolut": [30, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 77, 85, 136, 137, 138, 139, 144, 163, 165, 166, 174, 179, 385], "resolv": [12, 13, 14, 305, 372], "resourc": [15, 44, 45, 47, 48, 51, 52, 78, 85, 92, 96, 97, 98, 99, 100, 101, 102, 193, 375], "respect": [12, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 86, 145, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 196, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 230, 232, 257, 266, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 292, 293, 294, 295, 297, 300, 301, 302, 303, 305, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 325, 330, 331, 332, 333, 334, 335, 351, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 412, 416, 417, 418, 419, 420, 421, 424, 426, 428, 432, 433, 434, 443, 444, 446, 452, 462], "respons": [85, 136, 137, 138, 139, 199, 240, 321, 359], "rest": [453, 454], "restor": [265, 353, 375], "restructur": 447, "result": [10, 12, 14, 17, 21, 22, 24, 85, 197, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 216, 217, 218, 220, 230, 232, 245, 246, 247, 248, 249, 250, 252, 253, 254, 257, 258, 266, 278, 282, 285, 289, 299, 305, 347, 348, 373, 375, 377, 379, 380, 381, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 435, 438, 440, 443, 444, 445, 446, 447, 449, 450, 451, 452, 455, 456, 458, 461, 462, 468], "resum": [350, 351, 352, 353, 354, 355, 356, 357, 359], "retain": [163, 165, 198, 222, 298, 385, 397, 405, 419, 420, 421, 428, 434, 437, 442, 453, 454, 458], "retent": 458, "rethink": 85, "retriev": [0, 2, 199, 201, 202, 255], "return": [0, 1, 2, 3, 5, 6, 7, 8, 15, 31, 32, 33, 34, 35, 36, 37, 38, 82, 86, 100, 102, 130, 196, 197, 199, 200, 201, 202, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 292, 293, 294, 297, 299, 300, 301, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 322, 325, 330, 331, 332, 333, 334, 335, 340, 342, 347, 348, 353, 354, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 376, 457, 468], "reus": [85, 458], "reusabl": [203, 299, 347, 457], "revers": [15, 203, 385, 433, 463, 465], "revert": 375, "revolution": 85, "rfloor": [295, 357], "rgb": [5, 6, 30, 74, 75, 76, 83, 84, 159, 164, 178, 179], "rho": 361, "rho_": 367, "rho_t": 367, "rich": [15, 176], "richer": 166, "right": [22, 23, 24, 26, 27, 30, 206, 212, 244, 277, 285, 289, 295, 312, 313, 314, 316, 318, 319, 320, 322, 323, 324, 325, 333, 334, 335, 341, 343, 429, 459], "rightarrow": [12, 289, 305, 449], "rmsprop": 371, "rob": 85, "robust": [41, 46, 79, 100, 188, 189, 222, 258, 297, 300, 301, 302, 303, 314, 347, 361, 461, 462, 464, 468], "roland": 7, "role": [384, 468], "roll": 441, "root": [4, 5, 6, 7, 8, 362, 368, 426], "rotat": [229, 256, 464, 468], "rotated_imag": 258, "rout": [333, 334, 335], "row": [18, 19, 21, 26, 232, 255, 401, 443, 453, 454, 456], "rprop": 371, "rule": [14, 15, 21, 22, 305, 374, 386, 387, 391, 392, 393, 395, 396], "run": [15, 196, 239, 242, 259, 260, 261, 318, 319, 320, 322, 323, 324, 361, 375, 382, 384], "running_mean": [196, 239, 242, 318, 319, 320, 322, 323, 324], "running_var": [239, 242, 318, 319, 320, 322, 323, 324], "runtim": [60, 200, 203, 299, 347, 402], "s_": 369, "s_1": 449, "s_2": 449, "s_d": [332, 335], "s_h": [295, 331, 332, 335], "s_i": 449, "s_n": 449, "s_w": [295, 331, 332, 335], "safeguard": 244, "sain": 85, "same": [18, 19, 21, 22, 26, 173, 212, 221, 222, 223, 224, 225, 226, 227, 239, 240, 242, 243, 244, 246, 247, 258, 259, 260, 261, 262, 263, 264, 266, 282, 292, 293, 294, 297, 300, 301, 302, 303, 309, 318, 319, 320, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 369, 372, 377, 382, 384, 390, 400, 404, 406, 416, 419, 420, 421, 429, 438, 440, 442, 445, 447, 450, 451, 453, 454, 456, 460], "sampl": [0, 1, 2, 3, 5, 6, 7, 8, 69, 70, 71, 72, 74, 75, 76, 83, 84, 86, 87, 88, 89, 94, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 136, 137, 138, 139, 144, 245, 246, 247, 270, 271, 272, 273, 274, 275, 297, 300, 301, 302, 303, 308, 310, 313, 316, 325, 327, 328, 329, 377, 381, 384, 402, 459, 461, 463, 464, 465, 466], "sandbox": 15, "sandler": 85, "satisfi": [17, 19, 26, 449], "satur": [276, 468], "save": [2, 196, 198, 348, 353, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 375, 376], "scalabl": [3, 46, 59, 85, 124, 125, 126, 127, 128, 129, 150, 179, 347], "scalar": [15, 18, 23, 233, 234, 235, 237, 238, 377, 385, 442], "scale": [13, 19, 24, 30, 39, 45, 47, 48, 49, 51, 53, 54, 59, 60, 77, 83, 85, 87, 88, 89, 90, 94, 98, 99, 101, 102, 103, 110, 111, 113, 114, 115, 118, 131, 132, 140, 141, 142, 143, 160, 161, 162, 163, 164, 165, 166, 170, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 205, 210, 212, 215, 223, 239, 240, 242, 243, 255, 265, 266, 274, 275, 276, 278, 280, 283, 284, 285, 287, 289, 290, 297, 299, 300, 301, 302, 303, 313, 318, 319, 320, 321, 322, 323, 324, 325, 337, 345, 351, 354, 360, 362, 363, 364, 384, 434, 466], "scale_by_keep": [223, 299], "scale_factor": 345, "scale_fn": 351, "scaled_dot_product_attent": [214, 229], "scaleddotproductattent": [291, 307], "scenario": [44, 49, 51, 99, 100, 101, 102, 174, 201, 202, 325, 350, 351, 357, 364, 365, 458, 462], "schedul": [298, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360], "scientif": 374, "score": [112, 123, 140, 212, 215, 290, 313], "scratch": 15, "script": 384, "se": [59, 85, 131, 132, 133, 134, 135, 136, 137, 138, 139], "se_resnet_101": 85, "se_resnet_152": 85, "se_resnet_18": 85, "se_resnet_34": 85, "se_resnet_50": 85, "se_resnext_101_32x4d": 85, "se_resnext_101_32x8d": 85, "se_resnext_101_64x4d": 85, "se_resnext_50_32x4d": 85, "se_scal": 59, "seamless": [0, 1, 3, 4, 13, 305, 347, 384], "seamlessli": [3, 4, 10, 12, 14, 16, 198, 200, 203, 347, 468], "search": 85, "second": [19, 165, 176, 200, 201, 230, 265, 308, 363, 364, 365, 366, 367, 374, 386, 388, 389, 390, 391, 392, 393, 394, 395, 396, 429, 440, 443, 465], "section": 390, "see": [15, 390], "seed": [377, 378, 379, 380, 381, 383, 384, 468], "seek": [15, 102], "seen": 361, "segment": [163, 177, 184, 185, 186, 187, 188, 189], "select": [13, 14, 85, 140, 141, 142, 143, 144, 257, 265, 266, 333, 335, 351, 428], "selectivekernel": 267, "self": [0, 1, 2, 3, 15, 28, 30, 59, 60, 73, 77, 82, 85, 86, 90, 91, 92, 93, 103, 130, 145, 152, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 190, 196, 197, 198, 199, 200, 201, 202, 210, 223, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 297, 298, 299, 300, 301, 305, 308, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 340, 341, 343, 347, 348, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 376, 385, 442, 448, 457, 458], "selfattent": 343, "selu": [207, 221, 229, 288, 297, 307], "selunetwork": 283, "semant": 175, "semodul": 267, "senet": [131, 132, 133, 134, 135, 136, 137, 138, 139], "sensit": [235, 314, 318, 319, 320], "sentiment": 4, "separ": [0, 85, 90, 110, 111, 150, 216, 217, 218, 262, 263, 264, 322, 323, 324], "seq_len": [215, 289, 290, 339, 340, 341, 342, 343], "sequenc": [22, 112, 123, 140, 156, 163, 199, 201, 215, 216, 289, 337, 339, 340, 342, 343, 397, 402, 438, 440, 444, 446, 451, 452, 456, 457], "sequenti": [28, 82, 86, 130, 145, 150, 152, 154, 155, 163, 199, 200, 204, 216, 259, 260, 261, 305, 309, 340, 342, 457, 468], "seri": [73, 87, 88, 140, 173, 175, 216, 259, 292, 330, 333], "serial": [196, 197, 359], "serv": [3, 7, 15, 54, 82, 130, 145, 156, 197, 199, 200, 201, 202, 203, 347, 369, 385, 458], "set": [3, 4, 5, 6, 7, 8, 15, 30, 98, 99, 100, 110, 111, 121, 122, 136, 137, 138, 139, 144, 155, 166, 198, 202, 215, 216, 217, 218, 255, 280, 281, 283, 290, 292, 293, 294, 297, 302, 303, 308, 310, 312, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 337, 348, 363, 364, 368, 377, 379, 380, 381, 382, 383, 384, 397, 399, 400, 405, 406, 412, 419, 421, 435, 442, 453, 454, 458, 462, 468], "setup": [4, 124, 125, 126, 127, 128, 129], "sever": [24, 292, 293, 294, 330, 331, 332, 333, 334, 335, 375, 457, 468], "sgd": [15, 349, 350, 351, 352, 353, 354, 355, 356, 357, 360, 367, 371], "sgn": 23, "shape": [3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 18, 19, 21, 22, 24, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 77, 78, 79, 80, 81, 82, 85, 86, 92, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 141, 142, 143, 144, 145, 150, 152, 155, 163, 196, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 265, 266, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 297, 298, 300, 301, 302, 303, 305, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 347, 351, 374, 377, 379, 380, 381, 383, 384, 385, 388, 399, 400, 401, 403, 404, 405, 406, 412, 417, 418, 419, 420, 421, 424, 426, 428, 429, 433, 434, 436, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 456, 459, 460, 461, 462, 463, 464, 465, 466, 468], "shapelik": 380, "share": 85, "sharp": 351, "shen": 265, "shift": [163, 178, 179, 180, 181, 182, 183, 184, 187, 188, 239, 240, 242, 243, 278, 318, 319, 320, 321, 322, 323, 324, 325, 448], "shorthand": 390, "should": [12, 13, 14, 15, 86, 196, 305, 339, 340, 341, 342, 343, 355, 375, 377, 379, 380, 381, 383, 385, 399, 400, 409, 410, 432, 436, 444, 457], "show": [373, 376], "shown": [286, 382], "shrink": 361, "shuffl": [1, 2, 3], "side": [26, 200, 203, 216, 217, 218, 248, 249, 250, 252, 253, 254, 259, 260, 261, 292, 293, 294, 295, 330, 331, 332, 333, 334, 335, 375], "sigma": [24, 30, 265, 270, 272, 274, 284, 286, 318, 319, 320, 322, 323, 324, 325, 433], "sigma_c": 460, "sigma_i": 24, "sigmoid": [207, 229, 265, 270, 271, 274, 275, 278, 279, 286, 288, 307, 312], "sigmoidnetwork": 284, "sign": [22, 314, 369, 407], "signal": [259, 292, 293, 294, 318, 322, 330, 331, 332, 333, 334, 335], "signific": [42, 375], "significantli": [85, 91, 123, 174, 175, 176, 177, 186, 265, 457], "silicon": [15, 372], "sim": [297, 300, 301, 302, 303], "similar": [10, 270, 271, 390, 429, 435, 436, 444], "similarli": [27, 432], "simonyan": 85, "simpl": [3, 4, 15, 155, 203, 216, 217, 218, 230, 232, 248, 249, 250, 252, 253, 254, 277, 278, 279, 281, 282, 283, 284, 286, 287, 292, 293, 294, 297, 300, 301, 302, 303, 308, 310, 312, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 325, 330, 331, 332, 333, 334, 335, 347, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 373, 374, 388, 389, 394, 457], "simplebinaryclassificationmodel": 312, "simpleblock": 223, "simpleclassificationmodel": [313, 316], "simplegelumodel": 277, "simplehardsigmoidmodel": 278, "simplehardswishmodel": 279, "simpleleakyrelumodel": 280, "simplemodel": [155, 282, 299, 310, 376], "simpleregressionmodel": 315, "simplerelumodel": 281, "simpleselumodel": 283, "simplesigmoidmodel": 284, "simpleswishmodel": 286, "simpletanhmodel": 287, "simpli": [15, 373, 432, 433, 447], "simplic": [85, 278, 281], "simplifi": [4, 12, 14, 69, 70, 71, 72, 85, 87, 151, 203, 259, 260, 261, 305], "simul": [155, 468], "simultan": 258, "sin": [407, 413], "sinc": [22, 25, 199, 200, 201, 202, 216, 217, 218, 275, 373, 375, 377, 381, 429, 443, 468], "sine": [410, 424, 425], "singl": [0, 4, 22, 25, 27, 112, 212, 259, 260, 261, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 292, 293, 294, 295, 313, 325, 331, 332, 333, 334, 335, 340, 341, 342, 343, 348, 383, 399, 402, 438, 450, 460, 462, 468], "singleton": [14, 325], "singular": [18, 21, 22, 24, 26, 27], "sinh": [407, 414, 431], "size": [0, 1, 2, 3, 10, 12, 13, 14, 27, 30, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 77, 80, 85, 86, 87, 88, 89, 93, 94, 96, 97, 112, 140, 152, 155, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 200, 215, 216, 217, 218, 220, 222, 225, 226, 227, 233, 234, 235, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 289, 292, 293, 294, 295, 298, 305, 308, 310, 312, 313, 316, 318, 319, 320, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 342, 343, 345, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 376, 380, 383, 384, 385, 419, 420, 421, 428, 434, 436, 437, 438, 440, 449, 450, 455, 456, 459, 461, 466, 468], "size_or_sect": 449, "sk": [85, 140, 141, 142, 143, 144, 266], "sk_resnet_18": 85, "sk_resnet_34": 85, "sk_resnet_50": 85, "sk_resnext_50_32x4d": 85, "skblock": 140, "skip": [85, 375], "sknet": [141, 142, 143, 144], "slice": [230, 385, 432], "slide": [220, 295, 330, 332, 333, 335], "slight": 265, "slightli": 468, "slope": [208, 276, 280], "slow": [3, 367], "small": [24, 43, 45, 47, 50, 69, 70, 71, 72, 79, 80, 85, 87, 88, 89, 92, 96, 97, 100, 163, 169, 182, 183, 188, 189, 194, 195, 208, 222, 233, 234, 239, 240, 242, 243, 244, 280, 283, 298, 312, 313, 314, 318, 319, 320, 321, 322, 323, 324, 325, 331, 334, 339, 341, 343, 349, 361, 362, 363, 364, 365, 366, 367, 368, 369], "smaller": [10, 44, 69, 70, 71, 72, 85, 98, 152, 162, 200, 203, 347, 362, 363, 392, 437, 459, 461, 466], "smallest": 421, "smooth": [75, 206, 276, 277, 286, 352, 360, 368, 468], "smoother": [352, 360], "so": [199, 200, 201, 202, 258, 347, 367, 399, 400, 457], "softmax": [30, 207, 215, 229, 266, 288, 289, 290, 307, 313, 341, 343], "softmaxmodel": 285, "solut": [24, 26], "solv": [16, 17, 20, 24, 25, 27], "solver": 16, "some": [205, 223, 224, 258, 297, 299, 300, 301, 318, 319, 320, 322, 323, 324, 362, 363, 364, 375, 437], "sometim": 374, "sophist": [200, 203], "sort": 15, "sourc": [156, 157, 158, 215, 339, 384], "space": [19, 25, 27, 156, 179, 216, 217, 218, 220, 245, 246, 247, 259, 260, 261, 262, 263, 264, 292, 293, 294, 295, 327, 328, 329, 397, 402, 468], "span": 4, "spars": [362, 363], "spatial": [28, 30, 85, 112, 123, 140, 145, 152, 154, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 184, 222, 240, 260, 265, 293, 294, 295, 318, 319, 320, 322, 323, 324, 325, 331, 332, 333, 334, 335, 345, 443], "spatial_dim": 265, "spatio": 294, "spec": 159, "special": [0, 1, 24, 196, 197, 198, 297, 384], "specif": [4, 55, 56, 57, 58, 69, 70, 71, 72, 82, 90, 98, 99, 100, 101, 102, 110, 111, 121, 122, 159, 199, 200, 201, 202, 203, 266, 275, 297, 300, 301, 302, 303, 322, 323, 324, 337, 347, 348, 355, 373, 384, 399, 419, 421, 442, 446, 452], "specifi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 23, 29, 54, 60, 86, 93, 94, 95, 98, 99, 100, 101, 103, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 142, 143, 145, 146, 147, 148, 149, 151, 153, 155, 160, 161, 162, 164, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 200, 212, 220, 227, 233, 234, 235, 237, 238, 243, 244, 245, 246, 247, 255, 257, 258, 265, 285, 289, 292, 293, 294, 295, 305, 312, 313, 314, 315, 316, 325, 327, 328, 329, 331, 332, 333, 334, 335, 337, 345, 348, 351, 355, 372, 379, 380, 381, 382, 383, 385, 395, 397, 398, 399, 400, 401, 402, 403, 405, 406, 412, 419, 420, 421, 428, 429, 433, 434, 435, 436, 437, 438, 440, 442, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 464, 466, 468], "speech": 322, "speed": [96, 97, 278, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370], "split": [4, 85, 103, 110, 111, 163, 289, 437, 438, 440, 441, 456], "split_tensor": 449, "springer": 85, "sqrt": [30, 206, 215, 240, 270, 271, 274, 275, 277, 289, 290, 318, 319, 320, 321, 322, 323, 324, 325, 341, 343, 361, 362, 363, 364, 366, 367, 368, 407, 409, 410], "squar": [1, 3, 17, 18, 19, 21, 22, 24, 25, 26, 27, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 222, 235, 237, 298, 314, 315, 361, 362, 363, 368, 407, 426], "squaredataset": [0, 1, 2, 3], "squeez": [59, 85, 92, 96, 97, 130, 133, 136, 137, 138, 139, 265, 441], "sr_ratio": [164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], "sra": 163, "src": [163, 339, 342, 343], "src_key_pad": 342, "src_key_padding_mask": [339, 343], "src_mask": [339, 342, 343], "src_vocab_s": [156, 157, 158], "stabil": [21, 24, 30, 85, 222, 233, 234, 239, 240, 242, 243, 244, 255, 259, 260, 261, 282, 298, 312, 313, 318, 319, 320, 321, 322, 323, 324, 325, 337, 339, 341, 343, 349, 360, 361, 362, 363, 364, 365, 366, 367, 368, 460], "stabl": [188, 270, 271, 274, 275, 297, 313, 360, 364, 365, 368, 369, 370], "stack": [14, 203, 266, 339, 340, 342, 440, 441, 456, 468], "stage": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 77, 85, 103, 104, 105, 106, 107, 108, 109, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "stage1": 130, "stage2": 130, "stage3": 130, "stage4": 130, "stall": 356, "stand": 174, "standalon": 282, "standard": [15, 41, 46, 79, 98, 101, 112, 121, 122, 156, 157, 206, 208, 262, 263, 264, 270, 272, 274, 276, 277, 280, 297, 339, 369, 381, 384, 390, 457, 460, 468], "start": [1, 3, 10, 349, 360, 362, 369, 385, 397, 402, 459, 461], "state": [48, 85, 192, 196, 197, 198, 200, 203, 348, 353, 373, 375, 382], "state_dict": [197, 198, 348, 353, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370], "static": 203, "statist": [24, 221, 239, 242], "std": [5, 6, 7, 8, 272, 457, 460, 468], "stem": [82, 85, 103, 112, 123, 140], "stem_typ": 112, "stem_width": [103, 104, 105, 106, 107, 108, 109, 112], "step": [10, 15, 30, 198, 220, 266, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 375, 397, 457, 458], "step_siz": [349, 351, 353, 357, 369], "step_size_down": 351, "step_size_up": 351, "steplr": [349, 353, 358], "still": [51, 361], "stochast": [39, 40, 59, 60, 77, 164, 178, 179, 223, 299, 360, 370], "stochastic_depth": 59, "stop": [356, 397, 402], "storag": [199, 201], "store": [2, 4, 5, 6, 7, 8, 15, 112, 123, 140, 196, 197, 198, 199, 200, 201, 202, 265, 327, 328, 329, 375, 459, 460, 461, 462, 463, 464, 465, 466], "str": [5, 6, 7, 8, 10, 12, 13, 14, 30, 93, 112, 145, 197, 199, 201, 203, 233, 234, 235, 237, 238, 257, 305, 345, 348, 351, 353, 356, 376, 385, 443], "straightforward": [370, 373, 386], "strategi": [30, 85, 101, 187, 349, 353, 359], "streamlin": [2, 3, 85], "strength": [30, 298], "strict": [197, 348], "stride": [60, 86, 87, 88, 89, 92, 93, 96, 97, 200, 203, 216, 217, 218, 220, 245, 246, 247, 248, 249, 250, 252, 253, 254, 259, 260, 261, 262, 263, 264, 266, 292, 293, 294, 295, 327, 328, 329, 330, 331, 332, 333, 334, 335], "stride_height": 220, "stride_width": 220, "strike": [46, 93, 100], "string": [10, 12, 13, 14, 197, 199, 201, 203, 292, 293, 294, 305, 348, 372], "strong": [30, 168, 171, 174, 191], "stronger": [169, 173, 187], "structur": [0, 10, 13, 25, 30, 60, 92, 150, 163, 179, 196, 197, 200, 222, 298, 305, 347, 348, 376, 385, 401, 458], "student": 15, "studi": 15, "style": [10, 15, 82, 242, 322, 323, 385, 443], "sub": [199, 200, 201, 202, 203, 347, 407, 437, 449, 459, 461], "subclass": [1, 2, 3, 15, 197, 198, 199, 347, 348, 353], "sublay": [155, 339, 341, 343], "submodul": [155, 197, 347], "subsequ": [200, 203, 275, 384], "subset": [110, 111, 300, 301], "subspac": 289, "substanti": 193, "subtract": [396, 460], "suffer": 362, "suffix": 174, "suit": [51, 55, 56, 57, 58, 75, 90, 98, 99, 101, 140, 174, 175, 177, 189, 191, 270, 271, 274, 275, 349], "suitabl": [41, 43, 44, 47, 49, 61, 62, 63, 64, 65, 66, 67, 68, 82, 85, 87, 88, 89, 91, 96, 97, 99, 102, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 133, 135, 157, 166, 171, 180, 181, 182, 183, 194, 314, 362, 363, 379], "sum": [10, 13, 15, 23, 199, 200, 201, 202, 203, 212, 215, 233, 234, 235, 237, 238, 244, 266, 285, 295, 312, 313, 314, 315, 316, 362, 385, 386, 389, 394, 407, 432, 434, 436, 438, 440, 443, 446, 449, 452, 456], "sum_": [12, 13, 22, 30, 212, 240, 285, 305, 312, 313, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 330, 331, 332, 355, 388, 389, 420, 428, 432, 434, 436, 443, 446], "sum_i": [23, 394], "sum_j": 394, "sum_k": 390, "summar": [31, 32, 33, 34, 35, 36, 37, 38, 59, 121, 122, 150, 330, 331, 332], "summari": [121, 122, 136, 137, 138, 139, 144], "summat": [10, 12, 13, 14, 22, 355], "sun": 265, "super": [15, 155, 196, 197, 198, 199, 200, 201, 202, 223, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 297, 299, 300, 301, 308, 310, 312, 313, 314, 315, 316, 318, 319, 320, 322, 325, 330, 331, 332, 333, 334, 335, 347, 348, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 376], "superior": [53, 85, 187], "supplementari": 101, "support": [1, 3, 4, 12, 15, 16, 22, 23, 24, 25, 27, 94, 112, 164, 199, 200, 201, 202, 203, 215, 257, 258, 290, 295, 337, 345, 347, 359, 366, 384, 385, 386, 387, 390, 391, 392, 393, 395, 396, 398, 401, 412, 417, 418, 420, 424, 426, 428, 432, 433, 434, 438, 443, 447, 449, 458, 468], "suppos": 468, "sure": [347, 468], "svd": [20, 24], "swap": [12, 305], "swapax": 407, "swin": [178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "swin_bas": 163, "swin_larg": 163, "swin_smal": 163, "swin_tini": 163, "swin_v2": 179, "swin_v2_bas": 163, "swin_v2_giant": 163, "swin_v2_hug": 163, "swin_v2_larg": 163, "swin_v2_smal": 163, "swin_v2_tini": 163, "swintransform": [180, 181, 182, 183], "swintransformer_v2": [184, 185, 186, 187, 188, 189], "swish": [96, 97, 288, 307], "symbol": [12, 13, 14, 305], "symmetr": [17, 245, 246, 247, 274, 275, 287], "syntax": [1, 10, 12, 13, 14, 305, 390], "system": [15, 16, 17, 24, 25, 26, 85, 100, 163, 373, 385, 443], "systemat": [85, 468], "szegedi": [74, 85], "t": [10, 15, 24, 30, 85, 163, 339, 340, 341, 343, 350, 351, 352, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 375, 385, 390, 435, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468], "t0": 360, "t1": [385, 435], "t2": [385, 435], "t_": [340, 350], "t_0": 340, "t_cpu": 385, "t_i": 340, "t_max": 350, "tabl": [31, 32, 33, 34, 35, 36, 37, 38, 59, 337], "tabular": 4, "tailor": [4, 92, 100, 104, 105, 106, 107, 108, 109, 347, 468], "take": [25, 330, 331, 332, 333, 334, 335, 345, 354, 375, 457], "taken": 432, "tan": [85, 407], "tangent": [213, 287, 411, 430, 431], "tanh": [86, 200, 203, 206, 207, 229, 270, 271, 274, 275, 277, 288, 307, 407], "tanhnetwork": 287, "target": [5, 6, 7, 8, 51, 156, 157, 158, 203, 233, 234, 235, 237, 238, 245, 246, 247, 257, 312, 313, 314, 315, 316, 327, 328, 329, 339, 340, 341, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 436, 459, 461, 466], "target_tensor": [312, 313, 314, 315, 316], "target_transform": [5, 6, 7, 8], "task": [4, 16, 28, 29, 30, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 79, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 150, 154, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 168, 169, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 211, 212, 217, 230, 233, 234, 237, 238, 265, 266, 284, 285, 292, 293, 294, 312, 313, 314, 315, 316, 322, 323, 324, 330, 332, 333, 335, 339, 363, 374, 384, 401, 402, 468], "techniqu": [17, 21, 39, 60, 77, 85, 101, 152, 184, 186, 189, 223, 239, 297, 298, 300, 301, 302, 303, 322, 323, 324, 349, 359, 466, 468], "templat": 156, "tempor": [292, 294, 332, 335], "temporarili": 375, "tensor": [2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 69, 70, 71, 72, 74, 75, 76, 82, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 112, 124, 125, 126, 127, 128, 129, 130, 141, 142, 143, 145, 150, 152, 155, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 345, 347, 373, 375, 377, 379, 380, 381, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468], "term": [12, 24, 52, 171, 172, 173, 175, 176, 177, 230, 259, 260, 261, 262, 263, 264, 289, 339, 341, 343, 360, 364, 366, 367, 368, 370], "test": [4, 5, 6, 7, 8, 402], "test_backward": 155, "test_siz": [5, 6, 7, 8], "text": [4, 18, 22, 23, 30, 112, 123, 140, 141, 142, 143, 150, 199, 205, 208, 209, 210, 212, 215, 216, 217, 218, 223, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 259, 260, 261, 262, 263, 264, 265, 266, 270, 271, 274, 275, 276, 278, 279, 280, 281, 282, 283, 285, 286, 289, 290, 292, 293, 294, 297, 298, 299, 300, 301, 302, 303, 312, 313, 314, 315, 316, 330, 331, 332, 333, 334, 335, 337, 339, 340, 342, 351, 356, 357, 360, 362, 363, 364, 365, 366, 367, 368, 369, 370, 380, 385, 386, 387, 389, 391, 392, 393, 395, 396, 408, 412, 419, 420, 421, 423, 428, 429, 434, 436, 438, 440, 442, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 459, 460, 461, 463, 464, 465], "tgt": [163, 339, 340, 341], "tgt_is_caus": [340, 341], "tgt_key_padding_mask": [339, 340, 341], "tgt_mask": [339, 340, 341], "tgt_vocab_s": [156, 157, 158], "th": [230, 312, 313, 315, 316, 322, 323, 324, 391, 392, 395], "than": [0, 1, 7, 12, 14, 201, 202, 205, 208, 235, 262, 263, 264, 276, 280, 286, 305, 314, 348, 355, 364, 402, 412, 432, 436, 437, 444, 451, 459, 461, 466], "thei": [0, 27, 85, 196, 200, 202, 203, 289, 443, 447, 459, 461, 468], "them": [3, 10, 15, 85, 163, 197, 202, 220, 295, 360, 374, 438, 451, 457, 460, 468], "therebi": [297, 331, 332, 334, 335], "theta": [360, 361, 464], "theta_": [360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370], "theta_t": [367, 368], "thi": [0, 1, 2, 3, 5, 6, 7, 8, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 74, 75, 76, 82, 83, 84, 85, 86, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 140, 141, 142, 143, 144, 150, 155, 156, 159, 160, 161, 162, 163, 166, 171, 174, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 209, 211, 212, 213, 216, 217, 218, 220, 222, 223, 230, 232, 245, 255, 257, 258, 262, 263, 264, 265, 266, 270, 271, 274, 275, 276, 277, 278, 280, 281, 283, 284, 285, 286, 287, 290, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 310, 312, 313, 314, 316, 318, 319, 320, 322, 323, 324, 325, 327, 330, 331, 332, 333, 334, 335, 337, 347, 349, 350, 351, 352, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 380, 381, 382, 384, 385, 389, 390, 394, 397, 399, 403, 404, 405, 406, 412, 416, 417, 418, 419, 420, 421, 424, 426, 428, 429, 432, 433, 434, 435, 436, 437, 442, 444, 446, 447, 448, 453, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468], "thing": 375, "third": [175, 176, 177], "those": [87, 88, 89, 202, 275], "three": [27, 89, 218, 247, 250, 254, 259, 260, 261, 294, 303, 320, 324, 329, 332, 335], "threshold": [24, 235, 314, 356], "threshold_mod": 356, "through": [0, 3, 4, 14, 19, 24, 25, 27, 28, 39, 73, 82, 85, 86, 93, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 141, 142, 143, 151, 152, 199, 200, 203, 222, 230, 232, 257, 265, 266, 276, 277, 278, 279, 280, 281, 283, 284, 286, 287, 292, 293, 294, 297, 300, 301, 302, 303, 308, 309, 310, 318, 319, 320, 322, 325, 330, 331, 332, 333, 334, 335, 339, 340, 342, 343, 377, 381, 388, 389, 394, 443, 445, 447, 450, 453, 454, 455, 468], "throughout": [156, 178, 179, 190, 210, 458], "ti": [163, 195], "tier": 48, "tight": 174, "tile": [14, 441], "time": [0, 3, 15, 22, 87, 88, 89, 91, 216, 259, 280, 283, 289, 292, 330, 331, 332, 333, 334, 335, 340, 342, 349, 356, 360, 361, 362, 363, 364, 368, 370, 375, 446, 452], "tini": [43, 44, 52, 77, 81, 85, 163, 170], "tinynet": 15, "to_tensor": [5, 6, 7, 8], "togeth": [203, 457, 468], "token": [77, 165, 172, 337], "token_mix": 77, "too": [15, 349, 369], "tool": [3, 347, 349, 374, 384, 457, 468], "top": [17, 18, 19, 25, 27, 48, 215, 230, 232, 257, 289, 290, 292, 293, 294, 308, 310, 459, 461], "topolog": 15, "torch": [145, 295, 435], "toronto": [5, 6], "total": [0, 1, 2, 5, 6, 7, 8, 10, 12, 14, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 155, 157, 158, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 198, 289, 305, 385, 447], "totensor": [457, 468], "touch": 15, "trace": [16, 407], "track": [15, 259, 260, 261, 318, 319, 320, 322, 323, 324, 347, 373, 375, 377, 379, 380, 381, 383, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 429, 435, 436, 442, 458], "track_running_stat": [259, 260, 261, 318, 319, 320, 322, 323, 324], "trade": [43, 99], "tradit": [7, 10, 30, 85, 102, 159, 163, 361, 362, 365, 366, 367], "trail": 243, "train": [1, 2, 3, 4, 5, 6, 7, 8, 30, 39, 60, 73, 74, 75, 85, 136, 137, 138, 139, 144, 155, 156, 163, 196, 197, 200, 202, 203, 212, 221, 222, 223, 224, 225, 226, 227, 239, 242, 255, 258, 277, 280, 283, 284, 285, 287, 297, 298, 299, 300, 301, 302, 303, 318, 319, 320, 322, 323, 324, 337, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 375, 457, 460, 461, 462, 463, 464, 465, 468], "trainabl": [155, 318, 319, 320, 322, 323, 324, 337, 347], "transact": 265, "transfer": [242, 322, 323], "transform": [2, 4, 5, 6, 7, 8, 10, 12, 13, 14, 19, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 85, 154, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 215, 230, 232, 289, 290, 295, 305, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 325, 340, 341, 342, 343, 374, 429, 443], "transform_pipelin": [457, 468], "transformed_imag": [457, 468], "transformer_bas": 163, "transformer_big": 163, "transformer_decod": 340, "transformer_encod": 342, "transformerdecod": [307, 339, 344], "transformerdecoderlay": [307, 339, 340, 344], "transformerencod": [307, 339, 344], "transformerencoderlay": [307, 339, 342, 344], "transit": [30, 54, 314], "translat": [156, 331, 334, 339], "transpar": 15, "transpos": [12, 17, 407], "transposit": [12, 305], "treat": [0, 196, 325, 347], "triangular": [17, 25, 340, 341, 342, 343, 351, 453, 454], "triangular2": 351, "tril": 441, "triu": 441, "true": [1, 2, 3, 4, 5, 6, 7, 8, 15, 27, 73, 74, 75, 96, 97, 103, 155, 171, 172, 173, 174, 175, 176, 177, 178, 179, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 220, 221, 223, 224, 225, 226, 227, 230, 232, 239, 242, 255, 257, 259, 260, 261, 262, 263, 264, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 297, 299, 300, 301, 302, 303, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 325, 330, 331, 332, 333, 334, 335, 339, 340, 341, 342, 343, 345, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 363, 364, 368, 372, 373, 377, 379, 380, 381, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 442, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456, 458], "truli": 15, "truncat": 155, "truncate_from": 155, "try": 0, "tune": [99, 102, 468], "tupl": [2, 3, 5, 6, 7, 8, 19, 23, 25, 27, 30, 54, 112, 155, 197, 198, 216, 217, 218, 220, 243, 246, 247, 248, 249, 250, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 292, 293, 294, 295, 309, 325, 328, 329, 330, 331, 332, 333, 334, 335, 345, 363, 364, 365, 366, 367, 369, 379, 380, 381, 383, 385, 399, 403, 405, 419, 420, 421, 428, 434, 436, 437, 438, 440, 443, 444, 447, 448, 449, 450, 451, 455, 456, 459, 460, 461, 466], "twice": 444, "two": [18, 19, 21, 22, 24, 25, 27, 87, 88, 89, 92, 110, 111, 141, 145, 216, 217, 218, 230, 249, 253, 265, 266, 293, 302, 308, 319, 323, 331, 334, 343, 363, 364, 365, 366, 367, 369, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 429, 432, 437, 443, 449], "type": [31, 32, 33, 34, 35, 36, 37, 38, 77, 86, 103, 112, 130, 140, 159, 164, 165, 178, 179, 196, 197, 198, 230, 308, 339, 341, 343, 372, 385, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 435, 443, 458], "typeerror": [0, 1, 2, 197, 348], "typic": [15, 16, 30, 93, 99, 112, 123, 140, 160, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 196, 212, 221, 222, 258, 265, 282, 283, 285, 298, 299, 316, 318, 319, 320, 322, 323, 324, 359, 360, 368, 370, 375, 455, 458, 460, 464, 466, 468], "u": [24, 27, 271, 273, 275], "u_": 365, "ultra": [45, 118, 185], "unchang": [15, 196, 227, 276, 280, 281, 283, 297, 300, 301, 302, 303, 309, 445, 450], "uncontrol": 15, "undefin": 395, "under": [124, 125, 126, 127, 128, 129, 347], "underbrac": 22, "underdetermin": 24, "undergo": [223, 343, 468], "underli": [0, 69, 70, 71, 72, 74, 75, 76, 83, 84, 385, 429, 435, 440, 445, 447, 456], "understand": [15, 85, 152, 155, 160, 161, 162, 175, 176, 186, 203, 468], "understood": 12, "unexpect": [10, 197, 200, 203, 244, 384], "unfold": [219, 229, 296, 307], "unifi": [0, 15, 372], "uniform": [269, 271, 275, 292, 293, 294, 308, 310, 378, 379, 380, 384, 462, 463, 464, 465], "uniformli": [379, 383], "uniniti": [399, 400], "unintend": [10, 13, 375], "union": 145, "uniqu": [17, 24, 26, 199, 201, 337], "unit": [28, 86, 152, 205, 206, 208, 209, 210, 270, 271, 274, 275, 276, 277, 280, 281, 283, 297], "unless": [113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135], "unlik": [30, 159, 163, 178, 196, 199, 200, 201, 202, 208, 276, 280, 297, 325, 361, 362, 364, 365, 366, 367, 369], "unnecessari": [10, 375], "unpad": 444, "unseen": 468, "unspecifi": 372, "unsqueez": 441, "unstabl": 21, "unsur": 10, "until": 15, "up": [163, 348, 353, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 464, 466], "updat": [4, 40, 196, 202, 203, 297, 300, 301, 302, 303, 312, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 375], "upon": [40, 75, 85, 92, 93, 187, 189, 199, 200, 201, 202], "upper": [25, 273, 351, 369, 383, 453, 454], "upper_triangular": 454, "upsampl": [307, 346], "upstream": 15, "us": [0, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 19, 21, 22, 24, 25, 27, 30, 39, 54, 59, 60, 73, 74, 75, 76, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 154, 155, 159, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 230, 232, 237, 239, 240, 242, 244, 246, 247, 255, 257, 258, 259, 260, 261, 265, 266, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 345, 347, 348, 349, 350, 352, 354, 355, 357, 359, 372, 373, 374, 375, 376, 377, 379, 380, 381, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 416, 419, 420, 421, 428, 429, 434, 442, 443, 444, 446, 449, 450, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468], "usag": [3, 16, 41, 42, 43, 44, 52, 53, 54, 150, 200, 203, 223, 262, 263, 264, 290, 298, 348, 359, 402, 459, 460, 461, 462, 463, 464, 465, 466], "use_aux": [73, 74, 75], "use_h": [96, 97], "use_s": [96, 97], "user": [1, 2, 3, 4, 15, 102, 199, 200, 201, 202, 347, 354, 362, 457, 458, 468], "usual": 313, "util": [3, 16, 30, 93, 141, 142, 143, 170, 187, 201, 202, 222, 347, 384], "v": [15, 19, 24, 27, 30, 85, 165, 215, 289, 290, 341, 343, 363, 364, 366, 367, 398], "v1": [73, 74, 82, 83, 84, 85, 90, 91], "v2": [45, 46, 47, 48, 49, 50, 51, 52, 60, 69, 70, 71, 72, 82, 84, 85, 91, 92, 95, 163, 165, 171, 172, 173, 175, 176, 177, 184, 185, 186, 187, 188, 189], "v3": [73, 75, 76, 85, 92, 96, 97], "v4": [73, 76, 85, 93, 99, 100, 101, 102], "v_": [360, 363, 364, 366, 367, 368, 370], "v_i": 289, "v_stack": 456, "v_t": [367, 368], "val": 268, "val_loss": 356, "valid": [259, 260, 261, 262, 263, 264, 266, 292, 293, 294, 356, 433], "valu": [10, 15, 18, 22, 23, 24, 27, 39, 77, 90, 93, 101, 121, 122, 155, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 197, 199, 201, 203, 205, 208, 211, 212, 213, 215, 216, 217, 218, 220, 222, 223, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 257, 258, 259, 260, 261, 265, 268, 270, 271, 272, 273, 274, 275, 276, 280, 281, 282, 283, 284, 287, 289, 290, 297, 298, 299, 300, 301, 302, 303, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 327, 330, 331, 332, 333, 334, 335, 339, 340, 341, 342, 343, 345, 349, 356, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 373, 377, 379, 380, 381, 382, 383, 384, 397, 398, 399, 400, 401, 402, 408, 409, 410, 412, 415, 416, 417, 418, 419, 421, 423, 424, 426, 427, 438, 442, 444, 445, 447, 455, 460, 462, 463, 465], "valuabl": 384, "valueerror": [1, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 348], "van": 85, "vanish": [85, 276, 283, 318, 319, 320], "var": 407, "varepsilon": 244, "vari": [39, 140, 200, 202, 245, 257, 327, 351, 464], "variabl": [197, 203, 245, 246, 247, 309, 327, 328, 329, 347, 373, 375, 379, 399, 461, 464], "varianc": [210, 221, 239, 242, 259, 260, 261, 270, 271, 274, 275, 283, 297, 318, 319, 320, 322, 323, 324, 325, 363, 364, 365, 366, 367, 381, 434, 464, 468], "variant": [31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 70, 71, 72, 78, 79, 80, 81, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 121, 122, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 158, 160, 161, 162, 166, 168, 169, 170, 171, 172, 174, 176, 185, 363, 364, 365], "variat": [262, 263, 264, 322, 323, 324, 461, 468], "varieti": [4, 82, 103, 384, 468], "variou": [7, 10, 12, 13, 30, 54, 73, 83, 84, 85, 86, 93, 94, 102, 154, 164, 281, 359, 384, 402, 419, 421, 444, 458], "vasudevan": 85, "vaswani": [163, 339], "vdim": 289, "vdot": 394, "vector": [14, 19, 24, 25, 26, 27, 230, 232, 255, 289, 308, 310, 337, 388, 389, 390, 394], "veloc": [360, 368, 370], "verbos": [12, 350, 351, 352, 353, 354, 355, 356, 357], "veri": [24, 47, 85, 115, 117, 166, 361], "verifi": 10, "versa": 369, "versatil": [30, 102, 163, 384, 443], "version": [15, 27, 39, 73, 77, 82, 85, 86, 87, 88, 99, 163, 165, 167, 174, 295, 305, 368, 394, 448, 462], "vertic": [451, 456, 465], "vgg": 145, "vggnet": [146, 147, 148, 149], "vggnet_11": 85, "vggnet_13": 85, "vggnet_16": 85, "vggnet_19": 85, "via": [3, 4, 15, 102, 140, 385], "vice": 369, "video": [218, 227, 261, 294, 324, 332, 335], "view": [82, 86, 200, 331, 332, 333, 334, 335, 436, 447], "vinod": [5, 6], "vision": [30, 85, 90, 91, 95, 103, 112, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 217, 293, 308, 468], "visual": [85, 152, 173], "vit": [30, 159, 178, 191, 192, 193, 194, 195], "vit_bas": 163, "vit_hug": 163, "vit_larg": 163, "vit_smal": 163, "vit_tini": 163, "vocabulari": [156, 157, 158, 337], "vol": 85, "vollgraf": 7, "volumetr": [218, 227, 261, 294, 324, 332, 335], "vstack": 441, "w": [10, 12, 13, 14, 30, 85, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 217, 218, 220, 222, 226, 227, 230, 232, 240, 246, 247, 249, 250, 253, 254, 257, 258, 260, 261, 265, 289, 292, 293, 294, 305, 308, 310, 319, 320, 321, 323, 324, 328, 329, 332, 335, 459, 461], "w24": [162, 163], "w_": [217, 218, 246, 247, 249, 250, 253, 254, 257, 293, 294, 295, 328, 329, 331, 332, 334, 335], "w_1": [341, 343], "w_2": [341, 343], "w_k": 30, "w_out": [217, 218, 249, 250, 253, 254], "wa": [15, 74, 297, 300, 301, 302, 303, 375], "wai": [1, 10, 12, 14, 29, 153, 305, 373, 375, 447], "wait": 356, "wang": [85, 163], "want": [0, 457, 459], "warn": [199, 201, 289], "we": [3, 374, 443], "wei": 85, "weight": [85, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 164, 165, 178, 179, 215, 216, 217, 218, 230, 232, 233, 234, 238, 239, 242, 243, 255, 257, 265, 266, 270, 271, 274, 275, 289, 290, 292, 293, 294, 297, 298, 300, 301, 302, 303, 308, 310, 312, 313, 316, 318, 319, 320, 322, 323, 324, 325, 337, 339, 340, 341, 342, 343, 347, 360, 361, 362, 363, 364, 365, 366, 367, 368, 370, 379, 384], "weight1": 201, "weight2": 201, "weight_decai": [360, 361, 362, 363, 364, 365, 366, 367, 368, 370], "weihao": 85, "weinberg": 85, "well": [51, 55, 56, 57, 58, 60, 75, 99, 140, 174, 175, 189, 191, 270, 271, 295], "wenhai": 163, "were": 203, "weyand": 85, "what": [12, 14, 305, 375], "when": [0, 1, 3, 10, 13, 15, 22, 59, 85, 197, 200, 202, 203, 205, 208, 216, 217, 218, 255, 276, 299, 309, 318, 319, 320, 322, 323, 324, 345, 348, 350, 351, 352, 353, 354, 355, 356, 357, 361, 369, 373, 375, 376, 384, 395, 436, 457, 459], "where": [3, 4, 5, 6, 7, 8, 12, 13, 14, 18, 19, 21, 22, 23, 24, 25, 27, 85, 96, 97, 98, 99, 100, 101, 150, 174, 176, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 223, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 265, 266, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 297, 300, 301, 302, 303, 305, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 350, 351, 352, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 375, 384, 385, 386, 387, 391, 392, 393, 395, 396, 399, 400, 412, 416, 417, 418, 419, 420, 421, 424, 426, 428, 432, 433, 434, 437, 438, 442, 444, 446, 449, 452, 453, 454, 457, 458, 459, 460, 461, 462, 463, 464, 465], "wherev": 442, "whether": [1, 15, 18, 30, 59, 73, 74, 75, 96, 97, 103, 164, 165, 171, 172, 173, 175, 176, 177, 178, 179, 197, 198, 270, 271, 299, 368, 373, 377, 379, 380, 381, 383, 385, 399, 400, 419, 420, 421, 428, 434], "which": [0, 7, 13, 15, 18, 19, 21, 22, 23, 24, 25, 27, 31, 32, 33, 34, 35, 36, 37, 38, 60, 76, 84, 85, 90, 91, 93, 94, 98, 104, 105, 106, 107, 108, 109, 110, 111, 136, 137, 138, 139, 140, 144, 146, 147, 148, 149, 156, 159, 163, 165, 169, 178, 180, 181, 182, 183, 197, 199, 201, 203, 208, 212, 235, 244, 258, 262, 263, 264, 266, 276, 277, 280, 282, 285, 287, 297, 314, 316, 318, 319, 320, 322, 323, 324, 325, 337, 341, 343, 355, 357, 363, 364, 366, 368, 373, 375, 379, 380, 383, 409, 410, 411, 412, 413, 414, 417, 418, 419, 420, 421, 422, 424, 425, 426, 428, 430, 431, 432, 434, 436, 437, 438, 446, 447, 448, 449, 451, 453, 454, 455, 458, 459, 461, 462, 463, 464, 465, 466, 468], "while": [15, 30, 40, 45, 51, 52, 69, 70, 71, 72, 80, 84, 85, 90, 100, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144, 154, 159, 160, 161, 162, 163, 168, 169, 170, 172, 173, 174, 175, 179, 193, 200, 203, 221, 222, 277, 281, 282, 299, 340, 347, 350, 360, 361, 363, 364, 365, 366, 367, 368, 369, 370, 375, 429, 442, 447, 451, 462, 468], "who": [199, 200, 201, 202], "whose": [27, 350, 351, 352, 353, 354, 355, 356, 357, 400, 404, 406, 408, 412, 416, 423, 429], "wide": [4, 5, 6, 8, 16, 24, 52, 85, 102, 112, 120, 121, 122, 188, 209, 281, 292, 293, 313], "wide_resnet_101": 85, "wide_resnet_50": 85, "wider": [43, 121, 122, 216, 217], "wideresnet": 85, "width": [30, 59, 60, 85, 90, 94, 103, 110, 111, 121, 122, 123, 124, 125, 126, 127, 128, 129, 140, 150, 217, 218, 220, 226, 227, 240, 246, 247, 249, 250, 253, 254, 257, 258, 266, 293, 294, 295, 319, 320, 321, 323, 324, 328, 329, 331, 332, 334, 335, 345, 372, 459, 461, 466], "width_coef": 59, "width_multipli": [90, 94], "window": [163, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 248, 249, 250, 252, 253, 254, 330, 331, 332, 333, 334, 335, 361, 419, 421], "windows_s": [178, 179], "wise": [10, 14, 85, 134, 136, 137, 138, 139, 205, 206, 208, 209, 210, 211, 212, 213, 223, 259, 260, 261, 265, 279, 285, 286, 297, 299, 300, 301, 302, 303, 347, 374, 386, 387, 390, 391, 392, 393, 395, 396, 408, 409, 410, 411, 412, 413, 414, 415, 417, 418, 422, 423, 424, 425, 426, 427, 430, 431, 432, 440, 456], "within": [2, 85, 155, 156, 163, 178, 190, 196, 199, 200, 201, 202, 203, 213, 257, 258, 275, 277, 278, 279, 281, 283, 284, 286, 287, 292, 293, 294, 295, 297, 300, 301, 305, 309, 312, 313, 314, 315, 316, 318, 319, 320, 322, 325, 330, 331, 332, 333, 334, 335, 359, 375, 397, 412, 464, 468], "without": [10, 15, 123, 163, 199, 200, 201, 230, 232, 292, 293, 294, 308, 310, 373, 376, 419, 445, 447, 455], "won": 375, "word": [163, 255, 337], "work": [1, 2, 3, 10, 12, 13, 14, 15, 17, 305, 374], "workflow": [13, 384, 468], "worth": 163, "wrap": [3, 347, 349, 375, 385, 435], "wrapper": 347, "wu": 163, "www": [5, 6], "x": [15, 16, 26, 30, 82, 85, 86, 130, 145, 150, 155, 196, 197, 199, 200, 201, 202, 203, 212, 223, 230, 232, 244, 258, 262, 263, 264, 266, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 295, 297, 299, 300, 301, 302, 303, 305, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 325, 330, 331, 332, 333, 334, 335, 341, 342, 343, 347, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 377, 379, 380, 381, 383, 399, 400, 416, 437, 442, 443, 448, 449, 453, 454, 459, 460, 461, 462, 463, 464, 465, 466], "x1": 308, "x2": 308, "x_": [30, 240, 313, 316, 321, 342, 443], "x_0": 342, "x_c": [313, 316], "x_i": [244, 312, 342, 385], "x_k": 313, "x_test": 15, "x_train": 15, "xavier": [270, 271, 274, 275], "xavier_norm": 269, "xavier_uniform": 269, "xiao": 7, "xie": 85, "xl": [72, 85], "xlarg": [53, 85], "xy": 443, "x\u2081": 308, "x\u2082": 308, "y": [15, 30, 85, 150, 199, 200, 201, 202, 203, 244, 258, 262, 263, 264, 276, 277, 278, 279, 280, 281, 283, 284, 286, 287, 292, 293, 294, 297, 300, 301, 302, 303, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 325, 330, 331, 332, 333, 334, 335, 339, 340, 341, 342, 343, 377, 379, 380, 381, 383, 385, 399, 400, 442, 443, 448, 462], "y1": 437, "y2": 437, "y_": [30, 240, 313, 316, 321, 443], "y_c": [313, 316], "y_i": [244, 312], "y_train": 15, "yann": [8, 85], "yet": [15, 50, 52, 100, 374], "yield": [0, 1, 197, 375], "you": [0, 12, 14, 15, 92, 155, 163, 200, 202, 203, 295, 305, 339, 347, 359, 373, 375, 384, 399, 400, 401, 406, 433, 435, 457, 459, 468], "your": [10, 15, 92, 100, 347, 359, 373, 375, 384, 468], "yu": 85, "z": [15, 85, 341, 343, 400, 405, 406], "zalandoresearch": 7, "ze": [85, 163], "zeiler": [85, 152], "zero": [22, 24, 25, 75, 155, 205, 208, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 244, 248, 249, 250, 252, 253, 254, 255, 268, 270, 271, 272, 273, 274, 275, 276, 278, 280, 281, 283, 289, 292, 293, 294, 295, 297, 299, 300, 301, 302, 303, 325, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 347, 348, 361, 362, 363, 364, 365, 366, 367, 368, 399, 400, 401, 406, 407, 412, 423, 444, 453, 454], "zero_grad": [15, 198, 348, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 385], "zeros_lik": [400, 407], "zhang": 85, "zhmoginov": 85, "zhu": 85, "zhuang": 85, "zihang": 85, "zisserman": 85, "\u03c3\u1d62": 24}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "CIFAR10", "CIFAR100", "FashionMNIST", "MNIST", "Image Datasets", "lucid.einops", "Einops Functions", "lucid.einops.rearrange", "lucid.einops.reduce", "lucid.einops.repeat", "Lucid \ud83d\udc8e\u00b2", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "alexnet", "CoAtNet", "coatnet_0", "coatnet_1", "coatnet_2", "coatnet_3", "coatnet_4", "coatnet_5", "coatnet_6", "coatnet_7", "ConvNeXt", "ConvNeXt_V2", "convnext_base", "convnext_large", "convnext_small", "convnext_tiny", "convnext_v2_atto", "convnext_v2_base", "convnext_v2_femto", "convnext_v2_huge", "convnext_v2_large", "convnext_v2_nano", "convnext_v2_pico", "convnext_v2_tiny", "convnext_xlarge", "DenseNet", "densenet_121", "densenet_169", "densenet_201", "densenet_264", "EfficientNet", "EfficientNet_V2", "efficientnet_b0", "efficientnet_b1", "efficientnet_b2", "efficientnet_b3", "efficientnet_b4", "efficientnet_b5", "efficientnet_b6", "efficientnet_b7", "efficientnet_v2_l", "efficientnet_v2_m", "efficientnet_v2_s", "efficientnet_v2_xl", "Inception", "inception_v1", "inception_v3", "inception_v4", "InceptionNeXt", "inception_next_atto", "inception_next_base", "inception_next_small", "inception_next_tiny", "InceptionResNet", "inception_resnet_v1", "inception_resnet_v2", "ConvNets", "LeNet", "lenet_1", "lenet_4", "lenet_5", "MobileNet", "MobileNet_V2", "MobileNet_V3", "MobileNet_V4", "mobilenet", "mobilenet_v2", "mobilenet_v3_large", "mobilenet_v3_small", "mobilenet_v4_conv_large", "mobilenet_v4_conv_medium", "mobilenet_v4_conv_small", "mobilenet_v4_hybrid_large", "mobilenet_v4_hybrid_medium", "ResNeSt", "resnest_101", "resnest_14", "resnest_200", "resnest_26", "resnest_269", "resnest_50", "resnest_50_1s4x24d", "resnest_50_4s2x40d", "ResNet", "resnet_1001", "resnet_101", "resnet_152", "resnet_18", "resnet_200", "resnet_269", "resnet_34", "resnet_50", "wide_resnet_101", "wide_resnet_50", "ResNeXt", "resnext_101_32x16d", "resnext_101_32x32d", "resnext_101_32x4d", "resnext_101_32x8d", "resnext_101_64x4d", "resnext_50_32x4d", "SENet", "se_resnet_101", "se_resnet_152", "se_resnet_18", "se_resnet_34", "se_resnet_50", "se_resnext_101_32x4d", "se_resnext_101_32x8d", "se_resnext_101_64x4d", "se_resnext_50_32x4d", "SKNet", "sk_resnet_18", "sk_resnet_34", "sk_resnet_50", "sk_resnext_50_32x4d", "VGGNet", "vggnet_11", "vggnet_13", "vggnet_16", "vggnet_19", "Xception", "xception", "ZFNet", "zfnet", "lucid.models", "models.summarize", "Transformer", "transformer_base", "transformer_big", "CvT", "cvt_13", "cvt_21", "cvt_w24", "Transformers", "PVT", "PVT_V2", "pvt_huge", "pvt_large", "pvt_medium", "pvt_small", "pvt_tiny", "pvt_v2_b0", "pvt_v2_b1", "pvt_v2_b2", "pvt_v2_b2_li", "pvt_v2_b3", "pvt_v2_b4", "pvt_v2_b5", "SwinTransformer", "SwinTransformer_V2", "swin_base", "swin_large", "swin_small", "swin_tiny", "swin_v2_base", "swin_v2_giant", "swin_v2_huge", "swin_v2_large", "swin_v2_small", "swin_v2_tiny", "ViT", "vit_base", "vit_huge", "vit_large", "vit_small", "vit_tiny", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "Attention Functions", "nn.functional.scaled_dot_product_attention", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.drop_block", "nn.functional.drop_path", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "nn.functional.global_response_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.normalize", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "nn.functional.embedding", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "nn.DepthSeparableConv1d", "nn.DepthSeparableConv2d", "nn.DepthSeparableConv3d", "nn.SEModule", "nn.SelectiveKernel", "Fused Layers", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.HardSigmoid", "nn.HardSwish", "nn.LeakyReLU", "nn.ReLU", "nn.ReLU6", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Swish", "nn.Tanh", "Activation Layers", "nn.MultiHeadAttention", "nn.ScaledDotProductAttention", "Attention Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "nn.Unfold", "Convolution Layers", "nn.AlphaDropout", "nn.DropBlock", "nn.DropPath", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "nn.Rearrange", "Einops Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.GlobalResponseNorm", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "nn.Embedding", "Sparse Layers", "nn.Transformer", "nn.TransformerDecoder", "nn.TransformerDecoderLayer", "nn.TransformerEncoder", "nn.TransformerEncoderLayer", "Transformer Layers", "nn.Upsample", "Vision Layers", "lucid.nn", "optim.Optimizer", "optim.lr_scheduler", "lr_scheduler.CosineAnnealingLR", "lr_scheduler.CyclicLR", "lr_scheduler.ExponentialLR", "lr_scheduler.LRScheduler", "lr_scheduler.LambdaLR", "lr_scheduler.MultiStepLR", "lr_scheduler.ReduceLROnPlateau", "lr_scheduler.StepLR", "LR Schedulers", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.Numeric", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.random.bernoulli", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.multiply", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.linspace", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.log2", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.swapaxes", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.broadcast_to", "lucid.chunk", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.masked_fill", "lucid.meshgrid", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.roll", "lucid.split", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.tril", "lucid.triu", "lucid.unsqueeze", "lucid.vstack", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": 374, "1d": 374, "2": 374, "2d": 374, "3": 374, "It": [373, 375], "The": 15, "ab": 408, "abstract": 15, "acceler": 15, "activ": [207, 229, 288, 307], "ad": 374, "adadelta": 361, "adagrad": 362, "adam": 363, "adamax": 365, "adamw": 364, "adaptive_avg_pool1d": 245, "adaptive_avg_pool2d": 246, "adaptive_avg_pool3d": 247, "adaptiveavgpool1d": 327, "adaptiveavgpool2d": 328, "adaptiveavgpool3d": 329, "add": 386, "addit": [24, 289], "advanc": [220, 468], "advantag": [10, 12, 13, 14, 305], "alexnet": [28, 29, 85], "algebra": 20, "algorithm": [360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370], "align": [15, 374], "alpha_dropout": 221, "alphadropout": 297, "also": 359, "anoth": 435, "arang": 397, "arcco": 409, "architectur": [28, 30, 39, 87, 88, 89, 121, 122, 152], "arcsin": 410, "arctan": 411, "asgd": 360, "attent": [214, 215, 229, 266, 291, 307], "attribut": [5, 6, 7, 8, 28, 82, 86, 112, 123, 130, 140, 145, 150, 152, 196, 198, 199, 200, 201, 202, 203, 259, 260, 261, 262, 263, 264, 265, 276, 277, 280, 281, 283, 284, 285, 287, 292, 293, 294, 297, 299, 300, 301, 302, 303, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 372, 385, 459, 460, 461, 462, 463, 464, 465, 466], "autodiff": 15, "automat": 15, "avg_pool1d": 248, "avg_pool2d": 249, "avg_pool3d": 250, "avgpool1d": 330, "avgpool2d": 331, "avgpool3d": 332, "axi": [374, 429], "backend": 15, "backpropag": 385, "backward": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 222, 230, 232, 257, 265, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 292, 293, 294, 297, 300, 301, 302, 303, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 325, 330, 331, 332, 333, 334, 335, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 438, 440, 443, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 456], "base": [358, 385], "basic": 15, "batch_norm": 239, "batchnorm": 267, "batchnorm1d": 318, "batchnorm2d": 319, "batchnorm3d": 320, "bceloss": 312, "behavior": [245, 246, 247, 327, 328, 329], "benefit": 375, "bernoulli": 377, "between": [15, 385], "bilinear": [230, 308], "binari": 407, "binary_cross_entropi": 233, "bottleneck": [96, 97], "broadcast": [374, 436], "broadcast_to": 436, "buffer": 196, "calcul": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 112, 123, 130, 140, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 220, 222, 223, 230, 232, 245, 246, 247, 257, 259, 260, 261, 262, 263, 264, 265, 266, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 438, 440, 443, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 456, 459, 460, 461, 462, 463, 464, 465, 466], "captur": 376, "centercrop": 459, "choleski": 17, "chunk": 437, "cifar10": 5, "cifar100": 6, "class": [0, 1, 2, 5, 6, 7, 8, 28, 30, 39, 40, 54, 59, 60, 73, 77, 82, 86, 90, 91, 92, 93, 103, 112, 123, 130, 140, 145, 150, 152, 156, 159, 178, 179, 190, 196, 197, 198, 199, 200, 201, 202, 203, 259, 260, 261, 262, 263, 264, 265, 266, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 345, 348, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 385, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466], "clip": 412, "co": 413, "coatnet": [30, 85], "coatnet_0": 31, "coatnet_1": 32, "coatnet_2": 33, "coatnet_3": 34, "coatnet_4": 35, "coatnet_5": 36, "coatnet_6": 37, "coatnet_7": 38, "combin": 0, "compon": [3, 347], "compos": 457, "comput": [437, 442, 448], "concatdataset": [0, 1], "concaten": 438, "conclus": [3, 10, 12, 13, 14, 15, 305, 347, 349, 373, 374, 375, 384, 458, 468], "configur": [31, 32, 33, 34, 35, 36, 37, 38, 59, 96, 97, 104, 105, 106, 107, 108, 109, 110, 111], "constant": 268, "contain": 204, "conv": 267, "conv1d": [216, 292], "conv2d": [217, 293], "conv3d": [218, 294], "convbnrelu1d": 259, "convbnrelu2d": 260, "convbnrelu3d": 261, "convnet": 85, "convnext": [39, 85], "convnext_bas": 41, "convnext_larg": 42, "convnext_smal": 43, "convnext_tini": 44, "convnext_v2": 40, "convnext_v2_atto": 45, "convnext_v2_bas": 46, "convnext_v2_femto": 47, "convnext_v2_hug": 48, "convnext_v2_larg": 49, "convnext_v2_nano": 50, "convnext_v2_pico": 51, "convnext_v2_tini": 52, "convnext_xlarg": 53, "convolut": [163, 219, 229, 267, 296, 307], "core": 15, "cosh": 414, "cosineannealinglr": 350, "creat": [198, 385, 435], "cross_entropi": 234, "crossentropyloss": 313, "cube": 415, "custom": [1, 2, 3, 197, 348, 359, 468], "cvt": [159, 163], "cvt_13": 160, "cvt_21": 161, "cvt_w24": 162, "cycliclr": 351, "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 9], "defin": [2, 197, 348, 359], "definit": [12, 13, 14, 244, 305], "densenet": [54, 85], "densenet_121": 55, "densenet_169": 56, "densenet_201": 57, "densenet_264": 58, "depthseparableconv1d": 262, "depthseparableconv2d": 263, "depthseparableconv3d": 264, "depthwis": 267, "descript": [124, 125, 126, 127, 128, 129, 141, 142, 143, 376], "design": 15, "det": 18, "detail": [24, 98, 99, 100, 101, 102, 121, 122, 289, 339, 340, 341, 342, 343], "devic": [15, 385], "diag": 398, "differ": 156, "differenti": 15, "dilat": 220, "div": 387, "dot": 388, "drop_block": 222, "drop_path": 223, "dropblock": 298, "dropout": [224, 228, 229, 300, 304, 307], "dropout1d": [225, 301], "dropout2d": [226, 302], "dropout3d": [227, 303], "droppath": 299, "dtype": 385, "educ": 15, "efficientnet": [59, 85], "efficientnet_b0": 61, "efficientnet_b1": 62, "efficientnet_b2": 63, "efficientnet_b3": 64, "efficientnet_b4": 65, "efficientnet_b5": 66, "efficientnet_b6": 67, "efficientnet_b7": 68, "efficientnet_v2": 60, "efficientnet_v2_": 71, "efficientnet_v2_l": 69, "efficientnet_v2_m": 70, "efficientnet_v2_xl": 72, "eig": 19, "einop": [10, 11, 12, 13, 14, 306, 307], "elu": [205, 276], "embed": [255, 337], "empti": 399, "empty_lik": 400, "enabl": 15, "enhanc": 165, "evalu": 15, "exampl": [0, 1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 345, 347, 348, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 468], "excit": 267, "exp": 416, "exponentiallr": 352, "express": [240, 449], "ey": 401, "fashionmnist": 7, "featur": [4, 16, 136, 137, 138, 139, 144, 359, 384, 468], "flatten": 439, "formula": [350, 351, 352, 354, 355, 356, 357], "forward": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 112, 123, 130, 140, 150, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 220, 223, 230, 232, 245, 246, 247, 257, 259, 260, 261, 262, 263, 264, 265, 266, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 339, 340, 341, 342, 343, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 438, 440, 443, 444, 445, 446, 447, 450, 451, 452, 453, 454, 455, 456, 459, 460, 461, 462, 463, 464, 465, 466], "free": 385, "from": [156, 435], "function": [11, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 155, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 268, 270, 271, 272, 273, 274, 275, 373, 375, 376, 377, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456], "fuse": 267, "futur": 4, "gelu": [206, 277], "gener": [378, 407], "get": 359, "global_response_norm": 240, "globalresponsenorm": 321, "gpu": [15, 385], "grad_en": 373, "gradient": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 222, 230, 232, 257, 265, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 292, 293, 294, 297, 300, 301, 302, 303, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 322, 323, 324, 325, 330, 331, 332, 333, 334, 335, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 436, 437, 438, 440, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 454, 455, 456], "hardsigmoid": 278, "hardswish": 279, "hook": [15, 385], "how": [15, 373, 375], "hstack": 440, "huber_loss": 235, "huberloss": 314, "hybrid": 30, "hyperparamet": [110, 111], "ident": 309, "imag": [9, 467], "incept": [73, 85], "inception_next_atto": 78, "inception_next_bas": 79, "inception_next_smal": 80, "inception_next_tini": 81, "inception_resnet_v1": 83, "inception_resnet_v2": 84, "inception_v1": 74, "inception_v3": 75, "inception_v4": 76, "inceptionnext": [77, 85], "inceptionresnet": 82, "infer": 385, "init": [268, 270, 271, 272, 273, 274, 275], "initi": 269, "inner": 389, "input": 435, "inspect": [359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370], "instal": 15, "instance_norm": 242, "instancenorm1d": 322, "instancenorm2d": 323, "instancenorm3d": 324, "integr": [3, 347, 384, 468], "interpol": 257, "inv": 21, "kaiming_norm": 270, "kaiming_uniform": 271, "kei": [3, 4, 136, 137, 138, 139, 144, 165, 347, 359, 384, 468], "kernel": 267, "lambdalr": 354, "layer": [104, 105, 106, 107, 108, 109, 267, 288, 291, 296, 304, 306, 307, 311, 317, 326, 336, 338, 344, 346], "layer_norm": 243, "layernorm": 325, "leaky_relu": 208, "leakyrelu": 280, "learn": 384, "lenet": [85, 86], "lenet_1": 87, "lenet_4": 88, "lenet_5": 89, "linalg": [16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27], "linear": [20, 229, 231, 232, 307, 310, 311], "linspac": 402, "list": 435, "load": 1, "log": 417, "log2": 418, "loss": [229, 236, 307, 317], "lr": 358, "lr_schedul": [349, 350, 351, 352, 353, 354, 355, 356, 357], "lrschedul": 353, "lucid": [3, 4, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 154, 229, 347, 359, 372, 373, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 468], "masked_fil": 442, "mathemat": [12, 13, 14, 240, 244, 289, 305, 339, 340, 341, 342, 343, 350, 351, 352, 354, 355, 356, 357, 385, 449], "matmul": 390, "matrix": 390, "matrix_pow": 22, "max": 419, "max_pool1d": 252, "max_pool2d": 253, "max_pool3d": 254, "maximum": 391, "maxpool1d": 333, "maxpool2d": 334, "maxpool3d": 335, "mean": 420, "mechan": [215, 266], "meshgrid": 443, "metadata": 376, "metal": 15, "method": [0, 1, 2, 5, 6, 7, 8, 82, 86, 145, 197, 198, 339, 340, 341, 342, 343, 348, 350, 351, 352, 353, 354, 355, 356, 357, 372, 385], "min": 421, "minimum": 392, "mlx": 15, "mnist": 8, "mobilenet": [85, 90, 94], "mobilenet_v2": [91, 95], "mobilenet_v3": 92, "mobilenet_v3_larg": 96, "mobilenet_v3_smal": 97, "mobilenet_v4": 93, "mobilenet_v4_conv_larg": 98, "mobilenet_v4_conv_medium": 99, "mobilenet_v4_conv_smal": 100, "mobilenet_v4_hybrid_larg": 101, "mobilenet_v4_hybrid_medium": 102, "model": [154, 155, 347], "modul": [197, 307], "moduledict": 199, "modulelist": 200, "more": 384, "move": 385, "mse_loss": 237, "mseloss": 315, "multiheadattent": 289, "multipl": [0, 390], "multipli": 393, "multisteplr": 355, "nadam": 366, "network": 15, "neural": 15, "new": 374, "newaxi": 374, "nll_loss": 238, "nllloss": 316, "nn": [15, 156, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 345, 347], "no_grad": 375, "norm": 23, "normal": [229, 241, 244, 272, 307, 326, 460], "number": 378, "numer": 372, "ones": 403, "ones_lik": 404, "oper": [20, 390, 407], "optim": [348, 349, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371], "option": 289, "organ": 347, "other": 15, "outer": 394, "overview": [3, 4, 10, 73, 74, 75, 76, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 98, 99, 100, 101, 102, 113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 289, 339, 340, 341, 342, 343, 347, 349, 359, 384, 468], "pad": 444, "paramet": [1, 5, 6, 7, 8, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 283, 284, 285, 287, 289, 290, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 345, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 375, 376, 377, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466], "parameterdict": 201, "parameterlist": 202, "pass": 150, "perform": 385, "pinv": 24, "pipelin": [3, 468], "pitfal": [373, 375], "pool": [229, 251, 307, 336], "potenti": [373, 375], "power": 395, "process": 255, "properti": [198, 385], "pvt": [163, 164], "pvt_huge": 166, "pvt_larg": 167, "pvt_medium": 168, "pvt_small": 169, "pvt_tini": 170, "pvt_v2": 165, "pvt_v2_b0": 171, "pvt_v2_b1": 172, "pvt_v2_b2": 173, "pvt_v2_b2_li": 174, "pvt_v2_b3": 175, "pvt_v2_b4": 176, "pvt_v2_b5": 177, "pyramid": 163, "qr": 25, "radam": 367, "rais": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27], "rand": 379, "randint": 380, "randn": 381, "random": [377, 378, 379, 380, 381, 382, 383, 384], "randomcrop": 461, "randomgrayscal": 462, "randomhorizontalflip": 463, "randomrot": 464, "randomverticalflip": 465, "ravel": 445, "rearrang": [10, 12, 305], "reciproc": 422, "reduc": [10, 13], "reducelronplateau": 356, "refer": [5, 6, 7, 8, 265, 359], "register_model": 376, "regular": 222, "relu": [209, 267, 281], "relu6": 282, "repeat": [10, 14, 446], "represent": [372, 385], "reshap": 447, "resiz": 466, "resnest": [85, 103], "resnest_101": 104, "resnest_14": 105, "resnest_200": 106, "resnest_26": 107, "resnest_269": 108, "resnest_50": 109, "resnest_50_1s4x24d": 110, "resnest_50_4s2x40d": 111, "resnet": [85, 112], "resnet_1001": 113, "resnet_101": 114, "resnet_152": 115, "resnet_18": 116, "resnet_200": 117, "resnet_269": 118, "resnet_34": 119, "resnet_50": 120, "resnext": [85, 123], "resnext_101_32x16d": 124, "resnext_101_32x32d": 125, "resnext_101_32x4d": 126, "resnext_101_32x8d": 127, "resnext_101_64x4d": 128, "resnext_50_32x4d": 129, "return": [12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 155, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 266, 268, 270, 271, 272, 273, 274, 275, 282, 305, 337, 373, 375, 377, 379, 380, 381, 382, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456], "rmsprop": 368, "roll": 448, "rotat": 258, "rprop": 369, "rule": [390, 429, 436], "scaled_dot_product_attent": 215, "scaleddotproductattent": 290, "schedul": 358, "se_resnet_101": 131, "se_resnet_152": 132, "se_resnet_18": 133, "se_resnet_34": 134, "se_resnet_50": 135, "se_resnext_101_32x4d": 136, "se_resnext_101_32x8d": 137, "se_resnext_101_64x4d": 138, "se_resnext_50_32x4d": 139, "see": 359, "seed": 382, "select": 267, "selectivekernel": 266, "selu": [210, 283], "semodul": 265, "senet": [85, 130], "separ": 267, "sequenti": 203, "sgd": 370, "shape": 15, "sigmoid": [211, 284], "sign": 423, "signatur": [0, 1, 2, 5, 6, 7, 8, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 295, 297, 298, 299, 300, 301, 302, 303, 305, 308, 309, 310, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 329, 330, 331, 332, 333, 334, 335, 337, 339, 340, 341, 342, 343, 345, 348, 350, 351, 352, 353, 354, 355, 356, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 375, 376, 377, 379, 380, 381, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466], "sin": 424, "sinh": 425, "sk_resnet_18": 141, "sk_resnet_34": 142, "sk_resnet_50": 143, "sk_resnext_50_32x4d": 144, "sknet": [85, 140], "softmax": [212, 285], "solv": 26, "spars": [307, 338], "split": 449, "sqrt": 426, "squar": 427, "squeez": [267, 450], "stack": 451, "start": 359, "state": [359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370], "steplr": 357, "sub": 396, "sum": 428, "summar": 155, "summari": 155, "svd": 27, "swap": 429, "swapax": 429, "swin": 163, "swin_bas": 180, "swin_larg": 181, "swin_smal": 182, "swin_tini": 183, "swin_v2_bas": 184, "swin_v2_giant": 185, "swin_v2_hug": 186, "swin_v2_larg": 187, "swin_v2_smal": 188, "swin_v2_tini": 189, "swintransform": 178, "swintransformer_v2": 179, "swish": 286, "switch": 15, "tabl": 155, "tan": 430, "tanh": [213, 287, 431], "tensor": [15, 374, 385, 407, 435, 441], "tile": 452, "totensor": 458, "trace": 432, "track": 385, "train": 15, "transform": [156, 163, 307, 339, 344, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468], "transformer_bas": 157, "transformer_big": 158, "transformerdecod": 340, "transformerdecoderlay": 341, "transformerencod": 342, "transformerencoderlay": 343, "transpos": 433, "tril": 453, "triu": 454, "unari": 407, "unfold": [220, 295], "uniform": [273, 383], "unsqueez": 455, "upsampl": 345, "us": [1, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 385, 435], "usag": [4, 69, 70, 71, 72, 74, 75, 76, 83, 84, 86, 87, 88, 89, 98, 99, 100, 101, 102, 136, 137, 138, 139, 144, 196, 258, 289, 339, 340, 341, 342, 343, 349, 350, 351, 352, 353, 354, 355, 356, 357, 372, 373, 374, 375, 443, 457, 458, 468], "util": [229, 256], "utilit": 441, "valu": 449, "var": 434, "verif": 15, "vggnet": [85, 145], "vggnet_11": 146, "vggnet_13": 147, "vggnet_16": 148, "vggnet_19": 149, "vision": [163, 307, 346], "visual": 163, "vit": [163, 190], "vit_bas": 191, "vit_hug": 192, "vit_larg": 193, "vit_smal": 194, "vit_tini": 195, "vstack": 456, "weight": 269, "wide_resnet_101": 121, "wide_resnet_50": 122, "work": [4, 373, 375], "xavier_norm": 274, "xavier_uniform": 275, "xception": [85, 150, 151], "zero": 405, "zeros_lik": 406, "zfnet": [85, 152, 153], "\u00b2": 15}})