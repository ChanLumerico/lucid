Search.setIndex({"alltitles": {"@ Operator": [[389, "operator"]], "Activation Functions": [[207, null], [229, null]], "Activation Layers": [[288, null], [306, null]], "Additional Details": [[24, "additional-details"]], "Additional Options": [[289, "additional-options"]], "Advanced Example with Dilation": [[220, "advanced-example-with-dilation"]], "Advanced Features": [[467, "advanced-features"]], "Advantages": [[10, "advantages"], [12, "advantages"], [13, "advantages"], [14, "advantages"], [304, "advantages"]], "AlexNet": [[28, null], [85, "alexnet"]], "Algorithm": [[359, "algorithm"], [360, "algorithm"], [361, "algorithm"], [362, "algorithm"], [363, "algorithm"], [364, "algorithm"], [365, "algorithm"], [366, "algorithm"], [367, "algorithm"], [368, "algorithm"], [369, "algorithm"]], "Architecture": [[28, "architecture"], [39, "architecture"], [87, "architecture"], [88, "architecture"], [89, "architecture"], [152, "architecture"]], "Architecture Details": [[121, "architecture-details"], [122, "architecture-details"]], "Attention Functions": [[214, null], [229, null]], "Attention Layers": [[291, null], [306, null]], "Attention Mechanism": [[215, "attention-mechanism"], [266, "attention-mechanism"]], "Attributes": [[5, "attributes"], [6, "attributes"], [7, "attributes"], [8, "attributes"], [28, "attributes"], [82, "attributes"], [86, "attributes"], [112, "attributes"], [123, "attributes"], [130, "attributes"], [140, "attributes"], [145, "attributes"], [150, "attributes"], [152, "attributes"], [196, "attributes"], [198, "attributes"], [199, "attributes"], [200, "attributes"], [201, "attributes"], [202, "attributes"], [203, "attributes"], [259, "attributes"], [260, "attributes"], [261, "attributes"], [262, "attributes"], [263, "attributes"], [264, "attributes"], [265, "attributes"], [276, "attributes"], [277, "attributes"], [280, "attributes"], [281, "attributes"], [283, "attributes"], [284, "attributes"], [285, "attributes"], [287, "attributes"], [292, "attributes"], [293, "attributes"], [294, "attributes"], [296, "attributes"], [298, "attributes"], [299, "attributes"], [300, "attributes"], [301, "attributes"], [302, "attributes"], [307, "attributes"], [308, "attributes"], [309, "attributes"], [311, "attributes"], [312, "attributes"], [313, "attributes"], [314, "attributes"], [315, "attributes"], [317, "attributes"], [318, "attributes"], [319, "attributes"], [321, "attributes"], [322, "attributes"], [323, "attributes"], [324, "attributes"], [326, "attributes"], [327, "attributes"], [328, "attributes"], [329, "attributes"], [330, "attributes"], [331, "attributes"], [332, "attributes"], [333, "attributes"], [334, "attributes"], [371, "attributes"], [384, "attributes"], [458, "attributes"], [459, "attributes"], [460, "attributes"], [461, "attributes"], [462, "attributes"], [463, "attributes"], [464, "attributes"], [465, "attributes"]], "Automatic Differentiation (Autodiff)": [[15, "automatic-differentiation-autodiff"]], "Axis Swapping Rules": [[428, "axis-swapping-rules"]], "Backward Gradient Calculation": [[17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [21, "backward-gradient-calculation"], [22, "backward-gradient-calculation"], [23, "backward-gradient-calculation"], [24, "backward-gradient-calculation"], [25, "backward-gradient-calculation"], [26, "backward-gradient-calculation"], [27, "backward-gradient-calculation"], [199, "backward-gradient-calculation"], [200, "backward-gradient-calculation"], [201, "backward-gradient-calculation"], [202, "backward-gradient-calculation"], [203, "backward-gradient-calculation"], [205, "backward-gradient-calculation"], [206, "backward-gradient-calculation"], [208, "backward-gradient-calculation"], [209, "backward-gradient-calculation"], [210, "backward-gradient-calculation"], [211, "backward-gradient-calculation"], [212, "backward-gradient-calculation"], [213, "backward-gradient-calculation"], [222, "backward-gradient-calculation"], [230, "backward-gradient-calculation"], [232, "backward-gradient-calculation"], [257, "backward-gradient-calculation"], [265, "backward-gradient-calculation"], [275, "backward-gradient-calculation"], [276, "backward-gradient-calculation"], [277, "backward-gradient-calculation"], [278, "backward-gradient-calculation"], [279, "backward-gradient-calculation"], [280, "backward-gradient-calculation"], [281, "backward-gradient-calculation"], [283, "backward-gradient-calculation"], [284, "backward-gradient-calculation"], [285, "backward-gradient-calculation"], [286, "backward-gradient-calculation"], [287, "backward-gradient-calculation"], [292, "backward-gradient-calculation"], [293, "backward-gradient-calculation"], [294, "backward-gradient-calculation"], [296, "backward-gradient-calculation"], [299, "backward-gradient-calculation"], [300, "backward-gradient-calculation"], [301, "backward-gradient-calculation"], [302, "backward-gradient-calculation"], [307, "backward-gradient-calculation"], [308, "backward-gradient-calculation"], [309, "backward-gradient-calculation"], [311, "backward-gradient-calculation"], [312, "backward-gradient-calculation"], [313, "backward-gradient-calculation"], [314, "backward-gradient-calculation"], [315, "backward-gradient-calculation"], [317, "backward-gradient-calculation"], [318, "backward-gradient-calculation"], [319, "backward-gradient-calculation"], [321, "backward-gradient-calculation"], [322, "backward-gradient-calculation"], [323, "backward-gradient-calculation"], [324, "backward-gradient-calculation"], [329, "backward-gradient-calculation"], [330, "backward-gradient-calculation"], [331, "backward-gradient-calculation"], [332, "backward-gradient-calculation"], [333, "backward-gradient-calculation"], [334, "backward-gradient-calculation"], [385, "backward-gradient-calculation"], [386, "backward-gradient-calculation"], [387, "backward-gradient-calculation"], [388, "backward-gradient-calculation"], [389, "backward-gradient-calculation"], [390, "backward-gradient-calculation"], [391, "backward-gradient-calculation"], [392, "backward-gradient-calculation"], [393, "backward-gradient-calculation"], [394, "backward-gradient-calculation"], [395, "backward-gradient-calculation"], [407, "backward-gradient-calculation"], [408, "backward-gradient-calculation"], [409, "backward-gradient-calculation"], [410, "backward-gradient-calculation"], [411, "backward-gradient-calculation"], [412, "backward-gradient-calculation"], [413, "backward-gradient-calculation"], [414, "backward-gradient-calculation"], [415, "backward-gradient-calculation"], [416, "backward-gradient-calculation"], [417, "backward-gradient-calculation"], [418, "backward-gradient-calculation"], [419, "backward-gradient-calculation"], [420, "backward-gradient-calculation"], [421, "backward-gradient-calculation"], [422, "backward-gradient-calculation"], [423, "backward-gradient-calculation"], [424, "backward-gradient-calculation"], [425, "backward-gradient-calculation"], [426, "backward-gradient-calculation"], [427, "backward-gradient-calculation"], [428, "backward-gradient-calculation"], [429, "backward-gradient-calculation"], [430, "backward-gradient-calculation"], [431, "backward-gradient-calculation"], [432, "backward-gradient-calculation"], [433, "backward-gradient-calculation"], [435, "backward-gradient-calculation"], [437, "backward-gradient-calculation"], [439, "backward-gradient-calculation"], [442, "backward-gradient-calculation"], [443, "backward-gradient-calculation"], [444, "backward-gradient-calculation"], [445, "backward-gradient-calculation"], [446, "backward-gradient-calculation"], [449, "backward-gradient-calculation"], [450, "backward-gradient-calculation"], [451, "backward-gradient-calculation"], [452, "backward-gradient-calculation"], [453, "backward-gradient-calculation"], [454, "backward-gradient-calculation"], [455, "backward-gradient-calculation"]], "Base Class": [[357, null]], "Basic Installation": [[15, "basic-installation"]], "Behavior": [[245, "behavior"], [246, "behavior"], [247, "behavior"], [326, "behavior"], [327, "behavior"], [328, "behavior"]], "Benefits": [[374, "benefits"]], "Binary Functions": [[406, null]], "Bottleneck Configuration": [[96, "bottleneck-configuration"], [97, "bottleneck-configuration"]], "Broadcasting Rules": [[435, "broadcasting-rules"]], "CIFAR10": [[5, null]], "CIFAR100": [[6, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [6, "class-signature"], [7, "class-signature"], [8, "class-signature"], [28, "class-signature"], [30, "class-signature"], [39, "class-signature"], [40, "class-signature"], [54, "class-signature"], [59, "class-signature"], [60, "class-signature"], [73, "class-signature"], [77, "class-signature"], [82, "class-signature"], [86, "class-signature"], [90, "class-signature"], [91, "class-signature"], [92, "class-signature"], [93, "class-signature"], [103, "class-signature"], [112, "class-signature"], [123, "class-signature"], [130, "class-signature"], [140, "class-signature"], [145, "class-signature"], [150, "class-signature"], [152, "class-signature"], [156, "class-signature"], [159, "class-signature"], [178, "class-signature"], [179, "class-signature"], [190, "class-signature"], [196, "class-signature"], [197, "class-signature"], [198, "class-signature"], [199, "class-signature"], [200, "class-signature"], [201, "class-signature"], [202, "class-signature"], [203, "class-signature"], [259, "class-signature"], [260, "class-signature"], [261, "class-signature"], [262, "class-signature"], [263, "class-signature"], [264, "class-signature"], [265, "class-signature"], [266, "class-signature"], [276, "class-signature"], [277, "class-signature"], [278, "class-signature"], [279, "class-signature"], [280, "class-signature"], [281, "class-signature"], [282, "class-signature"], [283, "class-signature"], [284, "class-signature"], [285, "class-signature"], [286, "class-signature"], [287, "class-signature"], [289, "class-signature"], [290, "class-signature"], [292, "class-signature"], [293, "class-signature"], [294, "class-signature"], [296, "class-signature"], [297, "class-signature"], [298, "class-signature"], [299, "class-signature"], [300, "class-signature"], [301, "class-signature"], [302, "class-signature"], [304, "class-signature"], [307, "class-signature"], [308, "class-signature"], [309, "class-signature"], [311, "class-signature"], [312, "class-signature"], [313, "class-signature"], [314, "class-signature"], [315, "class-signature"], [317, "class-signature"], [318, "class-signature"], [319, "class-signature"], [320, "class-signature"], [321, "class-signature"], [322, "class-signature"], [323, "class-signature"], [324, "class-signature"], [326, "class-signature"], [327, "class-signature"], [328, "class-signature"], [329, "class-signature"], [330, "class-signature"], [331, "class-signature"], [332, "class-signature"], [333, "class-signature"], [334, "class-signature"], [336, "class-signature"], [338, "class-signature"], [339, "class-signature"], [340, "class-signature"], [341, "class-signature"], [342, "class-signature"], [344, "class-signature"], [347, "class-signature"], [349, "class-signature"], [350, "class-signature"], [351, "class-signature"], [352, "class-signature"], [353, "class-signature"], [354, "class-signature"], [355, "class-signature"], [356, "class-signature"], [359, "class-signature"], [360, "class-signature"], [361, "class-signature"], [362, "class-signature"], [363, "class-signature"], [364, "class-signature"], [365, "class-signature"], [366, "class-signature"], [367, "class-signature"], [368, "class-signature"], [369, "class-signature"], [371, "class-signature"], [384, "class-signature"], [456, "class-signature"], [457, "class-signature"], [458, "class-signature"], [459, "class-signature"], [460, "class-signature"], [461, "class-signature"], [462, "class-signature"], [463, "class-signature"], [464, "class-signature"], [465, "class-signature"]], "CoAtNet": [[30, null], [85, "coatnet"]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [10, "conclusion"], [12, "conclusion"], [13, "conclusion"], [14, "conclusion"], [15, "conclusion"], [304, "conclusion"], [346, "conclusion"], [348, "conclusion"], [372, "conclusion"], [373, "conclusion"], [374, "conclusion"], [383, "conclusion"], [457, "conclusion"], [467, "conclusion"]], "Configuration": [[31, "configuration"], [32, "configuration"], [33, "configuration"], [34, "configuration"], [35, "configuration"], [36, "configuration"], [37, "configuration"], [38, "configuration"]], "Configurations": [[59, "configurations"]], "Containers": [[204, null]], "Conv-BatchNorm-ReLU": [[267, null]], "ConvNeXt": [[39, null], [85, "convnext"]], "ConvNeXt_V2": [[40, null]], "ConvNets": [[85, null]], "Convolution Functions": [[219, null], [229, null]], "Convolution Layers": [[295, null], [306, null]], "Convolutional Transformer (CvT)": [[163, "convolutional-transformer-cvt"]], "Create a Tensor from a list": [[434, null]], "Creating a Parameter": [[198, null]], "Creating a tensor on GPU with gradient tracking": [[384, null]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[467, "custom-pipelines"]], "CvT": [[159, null]], "Defining a Custom Optimizer": [[358, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[197, null]], "Defining a custom optimizer": [[347, null]], "DenseNet": [[54, null], [85, "densenet"]], "Depthwise Separable Convolution": [[267, null]], "Description": [[124, "description"], [125, "description"], [126, "description"], [127, "description"], [128, "description"], [129, "description"], [141, "description"], [142, "description"], [143, "description"], [375, "description"]], "Details": [[98, "details"], [99, "details"], [100, "details"], [101, "details"], [102, "details"]], "Device-based dtype inference": [[384, null]], "Differences from nn.Transformer": [[156, "differences-from-nn-transformer"]], "Dropout Functions": [[228, null], [229, null]], "Dropout Layers": [[303, null], [306, null]], "Educational by Design": [[15, "educational-by-design"]], "EfficientNet": [[59, null], [85, "efficientnet"]], "EfficientNet Configurations": [[59, "id1"]], "EfficientNet_V2": [[60, null]], "Einops Functions": [[11, null]], "Einops Layers": [[305, null], [306, null]], "Embedding Process": [[255, "embedding-process"]], "Enable GPU (Metal / MLX Acceleration)": [[15, "enable-gpu-metal-mlx-acceleration"]], "Example": [[3, null], [3, null], [3, null], [10, null], [10, null], [10, null], [17, "example"], [18, "example"], [19, "example"], [21, "example"], [22, "example"], [23, "example"], [24, "example"], [25, "example"], [26, "example"], [27, "example"], [78, "example"], [79, "example"], [80, "example"], [81, "example"], [94, "example"], [95, "example"], [220, "example"], [346, null], [346, null], [346, null], [372, "example"], [374, "example"], [376, "example"], [378, "example"], [379, "example"], [380, "example"], [381, "example"], [382, "example"], [383, null], [383, null], [383, null], [396, "example"], [397, "example"], [398, "example"], [399, "example"], [400, "example"], [402, "example"], [403, "example"], [404, "example"], [405, "example"], [407, "example"], [408, "example"], [409, "example"], [410, "example"], [411, "example"], [412, "example"], [413, "example"], [414, "example"], [416, "example"], [417, "example"], [419, "example"], [421, "example"], [422, "example"], [423, "example"], [424, "example"], [425, "example"], [426, "example"], [427, "example"], [429, "example"], [430, "example"], [431, "example"], [432, "example"], [433, "example"], [436, "example"], [437, "example"], [439, "example"], [444, "example"], [446, "example"], [449, "example"], [450, "example"], [452, "example"], [453, "example"], [454, "example"], [455, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[373, null]], "Example 2: Adding a new axis to a 2D tensor": [[373, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[373, null]], "Example Usage": [[74, "example-usage"], [75, "example-usage"], [76, "example-usage"], [83, "example-usage"], [84, "example-usage"], [86, "example-usage"], [87, "example-usage"], [88, "example-usage"], [89, "example-usage"], [136, "example-usage"], [137, "example-usage"], [138, "example-usage"], [139, "example-usage"], [144, "example-usage"], [258, "example-usage"], [456, "example-usage"], [457, "example-usage"], [467, "example-usage"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [6, "examples"], [7, "examples"], [8, "examples"], [12, "examples"], [13, "examples"], [14, "examples"], [16, "examples"], [28, "examples"], [29, "examples"], [30, "examples"], [31, "examples"], [32, "examples"], [33, "examples"], [34, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [47, "examples"], [48, "examples"], [49, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [53, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [61, "examples"], [62, "examples"], [63, "examples"], [64, "examples"], [65, "examples"], [66, "examples"], [67, "examples"], [68, "examples"], [69, "examples"], [70, "examples"], [71, "examples"], [72, "examples"], [77, "examples"], [92, "examples"], [96, "examples"], [97, "examples"], [103, "examples"], [104, "examples"], [105, "examples"], [106, "examples"], [107, "examples"], [108, "examples"], [109, "examples"], [110, "examples"], [111, "examples"], [112, "examples"], [113, "examples"], [114, "examples"], [115, "examples"], [116, "examples"], [117, "examples"], [118, "examples"], [119, "examples"], [120, "examples"], [121, "examples"], [122, "examples"], [124, "examples"], [125, "examples"], [126, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [131, "examples"], [132, "examples"], [133, "examples"], [134, "examples"], [135, "examples"], [141, "examples"], [142, "examples"], [143, "examples"], [145, "examples"], [146, "examples"], [147, "examples"], [148, "examples"], [149, "examples"], [150, "examples"], [151, "examples"], [152, "examples"], [153, "examples"], [155, "examples"], [156, "examples"], [157, "examples"], [158, "examples"], [159, "examples"], [160, "examples"], [161, "examples"], [162, "examples"], [164, "examples"], [166, "examples"], [167, "examples"], [168, "examples"], [169, "examples"], [170, "examples"], [171, "examples"], [172, "examples"], [173, "examples"], [174, "examples"], [175, "examples"], [176, "examples"], [177, "examples"], [178, "examples"], [179, "examples"], [180, "examples"], [181, "examples"], [182, "examples"], [183, "examples"], [184, "examples"], [185, "examples"], [186, "examples"], [187, "examples"], [188, "examples"], [189, "examples"], [190, "examples"], [191, "examples"], [192, "examples"], [193, "examples"], [194, "examples"], [195, "examples"], [196, "examples"], [197, "examples"], [198, "examples"], [199, "examples"], [200, "examples"], [201, "examples"], [202, "examples"], [203, "examples"], [205, "examples"], [206, "examples"], [208, "examples"], [209, "examples"], [210, "examples"], [211, "examples"], [212, "examples"], [213, "examples"], [215, "examples"], [216, "examples"], [217, "examples"], [218, "examples"], [221, "examples"], [222, "examples"], [223, "examples"], [224, "examples"], [225, "examples"], [226, "examples"], [227, "examples"], [230, "examples"], [232, "examples"], [233, "examples"], [234, "examples"], [235, "examples"], [237, "examples"], [238, "examples"], [239, "examples"], [240, "examples"], [242, "examples"], [243, "examples"], [244, "examples"], [245, "examples"], [246, "examples"], [247, "examples"], [248, "examples"], [249, "examples"], [250, "examples"], [252, "examples"], [253, "examples"], [254, "examples"], [255, "examples"], [257, "examples"], [259, "examples"], [260, "examples"], [261, "examples"], [262, "examples"], [263, "examples"], [264, "examples"], [265, "examples"], [266, "examples"], [268, "examples"], [270, "examples"], [271, "examples"], [272, "examples"], [273, "examples"], [274, "examples"], [275, "examples"], [276, "examples"], [277, "examples"], [278, "examples"], [279, "examples"], [280, "examples"], [281, "examples"], [282, "examples"], [283, "examples"], [284, "examples"], [285, "examples"], [286, "examples"], [287, "examples"], [290, "examples"], [292, "examples"], [293, "examples"], [294, "examples"], [296, "examples"], [297, "examples"], [298, "examples"], [299, "examples"], [300, "examples"], [301, "examples"], [302, "examples"], [304, "examples"], [307, "examples"], [308, "examples"], [309, "examples"], [311, "examples"], [312, "examples"], [313, "examples"], [314, "examples"], [315, "examples"], [317, "examples"], [318, "examples"], [319, "examples"], [320, "examples"], [321, "examples"], [322, "examples"], [323, "examples"], [324, "examples"], [326, "examples"], [327, "examples"], [328, "examples"], [329, "examples"], [330, "examples"], [331, "examples"], [332, "examples"], [333, "examples"], [334, "examples"], [336, "examples"], [344, "examples"], [347, "examples"], [358, "examples"], [359, "examples"], [360, "examples"], [361, "examples"], [362, "examples"], [363, "examples"], [364, "examples"], [365, "examples"], [366, "examples"], [367, "examples"], [368, "examples"], [369, "examples"], [375, "examples"], [384, "examples"], [385, "examples"], [386, "examples"], [387, "examples"], [388, "examples"], [390, "examples"], [391, "examples"], [392, "examples"], [393, "examples"], [394, "examples"], [395, "examples"], [401, "examples"], [415, "examples"], [418, "examples"], [420, "examples"], [428, "examples"], [434, "examples"], [435, "examples"], [438, "examples"], [441, "examples"], [442, "examples"], [443, "examples"], [445, "examples"], [447, "examples"], [448, "examples"], [451, "examples"], [458, "examples"], [459, "examples"], [460, "examples"], [461, "examples"], [462, "examples"], [463, "examples"], [464, "examples"], [465, "examples"]], "FashionMNIST": [[7, null]], "Features": [[16, "features"]], "Forward Calculation": [[17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [21, "forward-calculation"], [22, "forward-calculation"], [23, "forward-calculation"], [24, "forward-calculation"], [25, "forward-calculation"], [26, "forward-calculation"], [27, "forward-calculation"], [112, "forward-calculation"], [123, "forward-calculation"], [130, "forward-calculation"], [140, "forward-calculation"], [199, "forward-calculation"], [200, "forward-calculation"], [201, "forward-calculation"], [202, "forward-calculation"], [203, "forward-calculation"], [205, "forward-calculation"], [206, "forward-calculation"], [208, "forward-calculation"], [209, "forward-calculation"], [210, "forward-calculation"], [211, "forward-calculation"], [212, "forward-calculation"], [213, "forward-calculation"], [220, "forward-calculation"], [223, "forward-calculation"], [230, "forward-calculation"], [232, "forward-calculation"], [245, "forward-calculation"], [246, "forward-calculation"], [247, "forward-calculation"], [257, "forward-calculation"], [259, "forward-calculation"], [260, "forward-calculation"], [261, "forward-calculation"], [262, "forward-calculation"], [263, "forward-calculation"], [264, "forward-calculation"], [265, "forward-calculation"], [266, "forward-calculation"], [270, "forward-calculation"], [271, "forward-calculation"], [274, "forward-calculation"], [275, "forward-calculation"], [276, "forward-calculation"], [277, "forward-calculation"], [278, "forward-calculation"], [279, "forward-calculation"], [280, "forward-calculation"], [281, "forward-calculation"], [282, "forward-calculation"], [283, "forward-calculation"], [284, "forward-calculation"], [285, "forward-calculation"], [286, "forward-calculation"], [287, "forward-calculation"], [290, "forward-calculation"], [292, "forward-calculation"], [293, "forward-calculation"], [294, "forward-calculation"], [296, "forward-calculation"], [297, "forward-calculation"], [298, "forward-calculation"], [299, "forward-calculation"], [300, "forward-calculation"], [301, "forward-calculation"], [302, "forward-calculation"], [307, "forward-calculation"], [308, "forward-calculation"], [309, "forward-calculation"], [311, "forward-calculation"], [312, "forward-calculation"], [313, "forward-calculation"], [314, "forward-calculation"], [315, "forward-calculation"], [317, "forward-calculation"], [318, "forward-calculation"], [319, "forward-calculation"], [320, "forward-calculation"], [321, "forward-calculation"], [322, "forward-calculation"], [323, "forward-calculation"], [324, "forward-calculation"], [326, "forward-calculation"], [327, "forward-calculation"], [328, "forward-calculation"], [329, "forward-calculation"], [330, "forward-calculation"], [331, "forward-calculation"], [332, "forward-calculation"], [333, "forward-calculation"], [334, "forward-calculation"], [385, "forward-calculation"], [386, "forward-calculation"], [387, "forward-calculation"], [388, "forward-calculation"], [389, "forward-calculation"], [390, "forward-calculation"], [391, "forward-calculation"], [392, "forward-calculation"], [393, "forward-calculation"], [394, "forward-calculation"], [395, "forward-calculation"], [407, "forward-calculation"], [408, "forward-calculation"], [409, "forward-calculation"], [410, "forward-calculation"], [411, "forward-calculation"], [412, "forward-calculation"], [413, "forward-calculation"], [414, "forward-calculation"], [415, "forward-calculation"], [416, "forward-calculation"], [417, "forward-calculation"], [418, "forward-calculation"], [419, "forward-calculation"], [420, "forward-calculation"], [421, "forward-calculation"], [422, "forward-calculation"], [423, "forward-calculation"], [424, "forward-calculation"], [425, "forward-calculation"], [426, "forward-calculation"], [427, "forward-calculation"], [429, "forward-calculation"], [430, "forward-calculation"], [431, "forward-calculation"], [432, "forward-calculation"], [433, "forward-calculation"], [437, "forward-calculation"], [439, "forward-calculation"], [442, "forward-calculation"], [443, "forward-calculation"], [444, "forward-calculation"], [445, "forward-calculation"], [446, "forward-calculation"], [449, "forward-calculation"], [450, "forward-calculation"], [451, "forward-calculation"], [452, "forward-calculation"], [453, "forward-calculation"], [454, "forward-calculation"], [455, "forward-calculation"], [458, "forward-calculation"], [459, "forward-calculation"], [460, "forward-calculation"], [461, "forward-calculation"], [462, "forward-calculation"], [463, "forward-calculation"], [464, "forward-calculation"], [465, "forward-calculation"]], "Forward Method": [[338, "forward-method"], [339, "forward-method"], [340, "forward-method"], [341, "forward-method"], [342, "forward-method"]], "Forward Pass": [[150, "forward-pass"]], "Function Signature": [[12, "function-signature"], [13, "function-signature"], [14, "function-signature"], [17, "function-signature"], [18, "function-signature"], [19, "function-signature"], [21, "function-signature"], [22, "function-signature"], [23, "function-signature"], [24, "function-signature"], [25, "function-signature"], [26, "function-signature"], [27, "function-signature"], [29, "function-signature"], [31, "function-signature"], [32, "function-signature"], [33, "function-signature"], [34, "function-signature"], [35, "function-signature"], [36, "function-signature"], [37, "function-signature"], [38, "function-signature"], [41, "function-signature"], [42, "function-signature"], [43, "function-signature"], [44, "function-signature"], [45, "function-signature"], [46, "function-signature"], [47, "function-signature"], [48, "function-signature"], [49, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [53, "function-signature"], [55, "function-signature"], [56, "function-signature"], [57, "function-signature"], [58, "function-signature"], [61, "function-signature"], [62, "function-signature"], [63, "function-signature"], [64, "function-signature"], [65, "function-signature"], [66, "function-signature"], [67, "function-signature"], [68, "function-signature"], [69, "function-signature"], [70, "function-signature"], [71, "function-signature"], [72, "function-signature"], [74, "function-signature"], [75, "function-signature"], [76, "function-signature"], [78, "function-signature"], [79, "function-signature"], [80, "function-signature"], [81, "function-signature"], [83, "function-signature"], [84, "function-signature"], [87, "function-signature"], [88, "function-signature"], [89, "function-signature"], [94, "function-signature"], [95, "function-signature"], [96, "function-signature"], [97, "function-signature"], [98, "function-signature"], [99, "function-signature"], [100, "function-signature"], [101, "function-signature"], [102, "function-signature"], [104, "function-signature"], [105, "function-signature"], [106, "function-signature"], [107, "function-signature"], [108, "function-signature"], [109, "function-signature"], [110, "function-signature"], [111, "function-signature"], [113, "function-signature"], [114, "function-signature"], [115, "function-signature"], [116, "function-signature"], [117, "function-signature"], [118, "function-signature"], [119, "function-signature"], [120, "function-signature"], [121, "function-signature"], [122, "function-signature"], [124, "function-signature"], [125, "function-signature"], [126, "function-signature"], [127, "function-signature"], [128, "function-signature"], [129, "function-signature"], [131, "function-signature"], [132, "function-signature"], [133, "function-signature"], [134, "function-signature"], [135, "function-signature"], [136, "function-signature"], [137, "function-signature"], [138, "function-signature"], [139, "function-signature"], [141, "function-signature"], [142, "function-signature"], [143, "function-signature"], [144, "function-signature"], [146, "function-signature"], [147, "function-signature"], [148, "function-signature"], [149, "function-signature"], [151, "function-signature"], [153, "function-signature"], [155, "function-signature"], [157, "function-signature"], [158, "function-signature"], [160, "function-signature"], [161, "function-signature"], [162, "function-signature"], [164, "function-signature"], [165, "function-signature"], [166, "function-signature"], [167, "function-signature"], [168, "function-signature"], [169, "function-signature"], [170, "function-signature"], [171, "function-signature"], [172, "function-signature"], [173, "function-signature"], [174, "function-signature"], [175, "function-signature"], [176, "function-signature"], [177, "function-signature"], [180, "function-signature"], [181, "function-signature"], [182, "function-signature"], [183, "function-signature"], [184, "function-signature"], [185, "function-signature"], [186, "function-signature"], [187, "function-signature"], [188, "function-signature"], [189, "function-signature"], [191, "function-signature"], [192, "function-signature"], [193, "function-signature"], [194, "function-signature"], [195, "function-signature"], [205, "function-signature"], [206, "function-signature"], [208, "function-signature"], [209, "function-signature"], [210, "function-signature"], [211, "function-signature"], [212, "function-signature"], [213, "function-signature"], [215, "function-signature"], [216, "function-signature"], [217, "function-signature"], [218, "function-signature"], [220, "function-signature"], [221, "function-signature"], [222, "function-signature"], [223, "function-signature"], [224, "function-signature"], [225, "function-signature"], [226, "function-signature"], [227, "function-signature"], [230, "function-signature"], [232, "function-signature"], [233, "function-signature"], [234, "function-signature"], [235, "function-signature"], [237, "function-signature"], [238, "function-signature"], [239, "function-signature"], [240, "function-signature"], [242, "function-signature"], [243, "function-signature"], [244, "function-signature"], [245, "function-signature"], [246, "function-signature"], [247, "function-signature"], [248, "function-signature"], [249, "function-signature"], [250, "function-signature"], [252, "function-signature"], [253, "function-signature"], [254, "function-signature"], [255, "function-signature"], [257, "function-signature"], [258, "function-signature"], [268, "function-signature"], [270, "function-signature"], [271, "function-signature"], [272, "function-signature"], [273, "function-signature"], [274, "function-signature"], [275, "function-signature"], [372, "function-signature"], [374, "function-signature"], [375, "function-signature"], [376, "function-signature"], [378, "function-signature"], [379, "function-signature"], [380, "function-signature"], [381, "function-signature"], [382, "function-signature"], [385, "function-signature"], [386, "function-signature"], [387, "function-signature"], [388, "function-signature"], [389, "function-signature"], [390, "function-signature"], [391, "function-signature"], [392, "function-signature"], [393, "function-signature"], [394, "function-signature"], [395, "function-signature"], [396, "function-signature"], [397, "function-signature"], [398, "function-signature"], [399, "function-signature"], [400, "function-signature"], [401, "function-signature"], [402, "function-signature"], [403, "function-signature"], [404, "function-signature"], [405, "function-signature"], [407, "function-signature"], [408, "function-signature"], [409, "function-signature"], [410, "function-signature"], [411, "function-signature"], [412, "function-signature"], [413, "function-signature"], [414, "function-signature"], [415, "function-signature"], [416, "function-signature"], [417, "function-signature"], [418, "function-signature"], [419, "function-signature"], [420, "function-signature"], [421, "function-signature"], [422, "function-signature"], [423, "function-signature"], [424, "function-signature"], [425, "function-signature"], [426, "function-signature"], [427, "function-signature"], [428, "function-signature"], [429, "function-signature"], [430, "function-signature"], [431, "function-signature"], [432, "function-signature"], [433, "function-signature"], [434, "function-signature"], [435, "function-signature"], [436, "function-signature"], [437, "function-signature"], [438, "function-signature"], [439, "function-signature"], [441, "function-signature"], [442, "function-signature"], [443, "function-signature"], [444, "function-signature"], [445, "function-signature"], [446, "function-signature"], [447, "function-signature"], [448, "function-signature"], [449, "function-signature"], [450, "function-signature"], [451, "function-signature"], [452, "function-signature"], [453, "function-signature"], [454, "function-signature"], [455, "function-signature"]], "Fused Layers": [[267, null]], "Future Work": [[4, "future-work"]], "Getting Started": [[358, "getting-started"]], "Gradient Computation": [[436, "gradient-computation"], [441, "gradient-computation"], [447, "gradient-computation"]], "Gradient hooks": [[384, null]], "Hooks & Shape Alignment": [[15, "hooks-shape-alignment"]], "How It Works": [[372, "how-it-works"], [374, "how-it-works"]], "How to Install": [[15, "how-to-install"]], "Hybrid Architecture": [[30, "hybrid-architecture"]], "Hyperparameter Configuration": [[110, "hyperparameter-configuration"], [111, "hyperparameter-configuration"]], "Image Datasets": [[9, null]], "Image Transformations": [[466, null]], "Inception": [[73, null], [85, "inception"]], "Inception-ResNet": [[85, "inception-resnet"]], "InceptionNeXt": [[77, null], [85, "inceptionnext"]], "InceptionResNet": [[82, null]], "Inspecting Optimizer State": [[358, null], [359, null], [360, null], [361, null], [362, null], [363, null], [364, null], [365, null], [366, null], [367, null], [368, null], [369, null]], "Integration with lucid": [[3, "integration-with-lucid"], [346, "integration-with-lucid"], [383, "integration-with-lucid"], [467, "integration-with-lucid"]], "Key Components": [[3, "key-components"], [346, "key-components"]], "Key Enhancements": [[165, "key-enhancements"]], "Key Features": [[4, "key-features"], [136, "key-features"], [137, "key-features"], [138, "key-features"], [139, "key-features"], [144, "key-features"], [358, "key-features"], [383, "key-features"]], "Key Transformations": [[467, "key-transformations"]], "LR Schedulers": [[357, null]], "Layer Configuration": [[104, "layer-configuration"], [105, "layer-configuration"], [106, "layer-configuration"], [107, "layer-configuration"], [108, "layer-configuration"], [109, "layer-configuration"]], "LeNet": [[85, "lenet"], [86, null]], "Learn More": [[383, null]], "Linear Algebra Operations": [[20, null]], "Linear Functions": [[229, null], [231, null]], "Linear Layers": [[306, null], [310, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[229, null], [236, null]], "Loss Layers": [[306, null], [316, null]], "Lucid \ud83d\udc8e\u00b2": [[15, null]], "MNIST": [[8, null]], "Mathematical Definition": [[12, "mathematical-definition"], [13, "mathematical-definition"], [14, "mathematical-definition"], [244, "mathematical-definition"], [304, "mathematical-definition"]], "Mathematical Details": [[289, "mathematical-details"], [338, "mathematical-details"], [339, "mathematical-details"], [340, "mathematical-details"], [341, "mathematical-details"], [342, "mathematical-details"]], "Mathematical Expression": [[240, "mathematical-expression"], [448, "mathematical-expression"]], "Mathematical Formula": [[349, "mathematical-formula"], [350, "mathematical-formula"], [351, "mathematical-formula"], [353, "mathematical-formula"], [354, "mathematical-formula"], [355, "mathematical-formula"], [356, "mathematical-formula"]], "Mathematical Representation": [[384, "mathematical-representation"]], "Matrix Multiplication Rules": [[389, "matrix-multiplication-rules"]], "Metadata Captured": [[375, "metadata-captured"]], "Metal Acceleration (MLX Backend)": [[15, "metal-acceleration-mlx-backend"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [6, "methods"], [7, "methods"], [8, "methods"], [82, "methods"], [86, "methods"], [145, "methods"], [197, "methods"], [198, "methods"], [347, "methods"], [349, "methods"], [350, "methods"], [351, "methods"], [352, "methods"], [353, "methods"], [354, "methods"], [355, "methods"], [356, "methods"], [371, "methods"], [384, "methods"]], "MobileNet": [[85, "mobilenet"], [90, null]], "MobileNet_V2": [[91, null]], "MobileNet_V3": [[92, null]], "MobileNet_V4": [[93, null]], "Modules": [[306, null]], "Moving tensor between devices": [[384, null]], "Neural Networks with lucid.nn": [[15, "neural-networks-with-lucid-nn"]], "Normalization Functions": [[229, null], [241, null]], "Normalization Layers": [[306, null], [325, null]], "Optimizers": [[370, null]], "Organizing Models": [[346, "organizing-models"]], "Others": [[15, "others"]], "Overview": [[3, "overview"], [4, "overview"], [10, "overview"], [73, "overview"], [74, "overview"], [75, "overview"], [76, "overview"], [82, "overview"], [83, "overview"], [84, "overview"], [86, "overview"], [87, "overview"], [88, "overview"], [89, "overview"], [90, "overview"], [91, "overview"], [92, "overview"], [93, "overview"], [98, "overview"], [99, "overview"], [100, "overview"], [101, "overview"], [102, "overview"], [113, "overview"], [114, "overview"], [115, "overview"], [116, "overview"], [117, "overview"], [118, "overview"], [119, "overview"], [120, "overview"], [131, "overview"], [132, "overview"], [133, "overview"], [134, "overview"], [135, "overview"], [289, "overview"], [338, "overview"], [339, "overview"], [340, "overview"], [341, "overview"], [342, "overview"], [346, "overview"], [348, "overview"], [358, "overview"], [383, "overview"], [467, "overview"]], "PVT": [[164, null]], "PVT_V2": [[165, null]], "Parameters": [[1, "parameters"], [5, "parameters"], [6, "parameters"], [7, "parameters"], [8, "parameters"], [12, "parameters"], [13, "parameters"], [14, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [84, "parameters"], [86, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [104, "parameters"], [105, "parameters"], [106, "parameters"], [107, "parameters"], [108, "parameters"], [109, "parameters"], [110, "parameters"], [111, "parameters"], [112, "parameters"], [113, "parameters"], [114, "parameters"], [115, "parameters"], [116, "parameters"], [117, "parameters"], [118, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [122, "parameters"], [123, "parameters"], [124, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [155, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"], [159, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [164, "parameters"], [165, "parameters"], [166, "parameters"], [167, "parameters"], [168, "parameters"], [169, "parameters"], [170, "parameters"], [171, "parameters"], [172, "parameters"], [173, "parameters"], [174, "parameters"], [175, "parameters"], [176, "parameters"], [177, "parameters"], [178, "parameters"], [179, "parameters"], [180, "parameters"], [181, "parameters"], [182, "parameters"], [183, "parameters"], [184, "parameters"], [185, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [189, "parameters"], [190, "parameters"], [191, "parameters"], [192, "parameters"], [193, "parameters"], [194, "parameters"], [195, "parameters"], [196, "parameters"], [198, "parameters"], [199, "parameters"], [200, "parameters"], [201, "parameters"], [202, "parameters"], [203, "parameters"], [205, "parameters"], [206, "parameters"], [208, "parameters"], [209, "parameters"], [210, "parameters"], [211, "parameters"], [212, "parameters"], [213, "parameters"], [215, "parameters"], [216, "parameters"], [217, "parameters"], [218, "parameters"], [220, "parameters"], [221, "parameters"], [222, "parameters"], [223, "parameters"], [224, "parameters"], [225, "parameters"], [226, "parameters"], [227, "parameters"], [230, "parameters"], [232, "parameters"], [233, "parameters"], [234, "parameters"], [235, "parameters"], [237, "parameters"], [238, "parameters"], [239, "parameters"], [240, "parameters"], [242, "parameters"], [243, "parameters"], [244, "parameters"], [245, "parameters"], [246, "parameters"], [247, "parameters"], [248, "parameters"], [249, "parameters"], [250, "parameters"], [252, "parameters"], [253, "parameters"], [254, "parameters"], [255, "parameters"], [257, "parameters"], [258, "parameters"], [259, "parameters"], [260, "parameters"], [261, "parameters"], [262, "parameters"], [263, "parameters"], [264, "parameters"], [265, "parameters"], [266, "parameters"], [268, "parameters"], [270, "parameters"], [271, "parameters"], [272, "parameters"], [273, "parameters"], [274, "parameters"], [275, "parameters"], [276, "parameters"], [277, "parameters"], [280, "parameters"], [281, "parameters"], [283, "parameters"], [284, "parameters"], [285, "parameters"], [287, "parameters"], [289, "parameters"], [290, "parameters"], [292, "parameters"], [293, "parameters"], [294, "parameters"], [296, "parameters"], [297, "parameters"], [298, "parameters"], [299, "parameters"], [300, "parameters"], [301, "parameters"], [302, "parameters"], [304, "parameters"], [307, "parameters"], [308, "parameters"], [309, "parameters"], [311, "parameters"], [312, "parameters"], [313, "parameters"], [314, "parameters"], [315, "parameters"], [317, "parameters"], [318, "parameters"], [319, "parameters"], [320, "parameters"], [321, "parameters"], [322, "parameters"], [323, "parameters"], [324, "parameters"], [326, "parameters"], [327, "parameters"], [328, "parameters"], [329, "parameters"], [330, "parameters"], [331, "parameters"], [332, "parameters"], [333, "parameters"], [334, "parameters"], [336, "parameters"], [338, "parameters"], [339, "parameters"], [340, "parameters"], [341, "parameters"], [342, "parameters"], [344, "parameters"], [349, "parameters"], [350, "parameters"], [351, "parameters"], [352, "parameters"], [353, "parameters"], [354, "parameters"], [355, "parameters"], [356, "parameters"], [359, "parameters"], [360, "parameters"], [361, "parameters"], [362, "parameters"], [363, "parameters"], [364, "parameters"], [365, "parameters"], [366, "parameters"], [367, "parameters"], [368, "parameters"], [369, "parameters"], [371, "parameters"], [374, "parameters"], [375, "parameters"], [376, "parameters"], [378, "parameters"], [379, "parameters"], [380, "parameters"], [381, "parameters"], [382, "parameters"], [384, "parameters"], [385, "parameters"], [386, "parameters"], [387, "parameters"], [388, "parameters"], [389, "parameters"], [390, "parameters"], [391, "parameters"], [392, "parameters"], [393, "parameters"], [394, "parameters"], [395, "parameters"], [396, "parameters"], [397, "parameters"], [398, "parameters"], [399, "parameters"], [400, "parameters"], [401, "parameters"], [402, "parameters"], [403, "parameters"], [404, "parameters"], [405, "parameters"], [407, "parameters"], [408, "parameters"], [409, "parameters"], [410, "parameters"], [411, "parameters"], [412, "parameters"], [413, "parameters"], [414, "parameters"], [415, "parameters"], [416, "parameters"], [417, "parameters"], [418, "parameters"], [419, "parameters"], [420, "parameters"], [421, "parameters"], [422, "parameters"], [423, "parameters"], [424, "parameters"], [425, "parameters"], [426, "parameters"], [427, "parameters"], [428, "parameters"], [429, "parameters"], [430, "parameters"], [431, "parameters"], [432, "parameters"], [433, "parameters"], [434, "parameters"], [435, "parameters"], [436, "parameters"], [437, "parameters"], [438, "parameters"], [439, "parameters"], [441, "parameters"], [442, "parameters"], [443, "parameters"], [444, "parameters"], [445, "parameters"], [446, "parameters"], [447, "parameters"], [448, "parameters"], [449, "parameters"], [450, "parameters"], [451, "parameters"], [452, "parameters"], [453, "parameters"], [454, "parameters"], [455, "parameters"], [456, "parameters"], [457, "parameters"], [458, "parameters"], [459, "parameters"], [460, "parameters"], [461, "parameters"], [462, "parameters"], [463, "parameters"], [464, "parameters"], [465, "parameters"]], "Performing backpropagation": [[384, null]], "Pooling Functions": [[229, null], [251, null]], "Pooling Layers": [[306, null], [335, null]], "Potential Pitfalls": [[372, "potential-pitfalls"], [374, "potential-pitfalls"]], "Properties": [[198, "properties"], [384, "properties"]], "Pyramid Vision Transformer (PVT)": [[163, "pyramid-vision-transformer-pvt"]], "Raises": [[17, "raises"], [18, "raises"], [19, "raises"], [21, "raises"], [22, "raises"], [23, "raises"], [24, "raises"], [25, "raises"], [26, "raises"], [27, "raises"]], "Random Number Generations": [[377, null]], "References": [[5, "references"], [6, "references"], [7, "references"], [8, "references"], [265, "references"], [358, "references"]], "Regularization": [[222, "regularization"]], "Representation": [[371, "representation"]], "ResNeSt": [[85, "resnest"], [103, null]], "ResNeXt": [[85, "resnext"], [123, null]], "ResNet": [[85, "resnet"], [112, null]], "Return Values": [[448, "return-values"]], "Returns": [[12, "returns"], [13, "returns"], [14, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [21, "returns"], [22, "returns"], [23, "returns"], [24, "returns"], [25, "returns"], [26, "returns"], [27, "returns"], [29, "returns"], [41, "returns"], [42, "returns"], [43, "returns"], [44, "returns"], [45, "returns"], [46, "returns"], [47, "returns"], [48, "returns"], [49, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [53, "returns"], [55, "returns"], [56, "returns"], [57, "returns"], [58, "returns"], [61, "returns"], [62, "returns"], [63, "returns"], [64, "returns"], [65, "returns"], [66, "returns"], [67, "returns"], [68, "returns"], [69, "returns"], [70, "returns"], [71, "returns"], [72, "returns"], [74, "returns"], [75, "returns"], [76, "returns"], [78, "returns"], [79, "returns"], [80, "returns"], [81, "returns"], [83, "returns"], [84, "returns"], [87, "returns"], [88, "returns"], [89, "returns"], [94, "returns"], [95, "returns"], [96, "returns"], [97, "returns"], [104, "returns"], [105, "returns"], [106, "returns"], [107, "returns"], [108, "returns"], [109, "returns"], [110, "returns"], [111, "returns"], [113, "returns"], [114, "returns"], [115, "returns"], [116, "returns"], [117, "returns"], [118, "returns"], [119, "returns"], [120, "returns"], [121, "returns"], [122, "returns"], [124, "returns"], [125, "returns"], [126, "returns"], [127, "returns"], [128, "returns"], [129, "returns"], [131, "returns"], [132, "returns"], [133, "returns"], [134, "returns"], [135, "returns"], [136, "returns"], [137, "returns"], [138, "returns"], [139, "returns"], [141, "returns"], [142, "returns"], [143, "returns"], [144, "returns"], [146, "returns"], [147, "returns"], [148, "returns"], [149, "returns"], [151, "returns"], [153, "returns"], [155, "returns"], [157, "returns"], [158, "returns"], [160, "returns"], [161, "returns"], [162, "returns"], [164, "returns"], [165, "returns"], [166, "returns"], [167, "returns"], [168, "returns"], [169, "returns"], [170, "returns"], [171, "returns"], [172, "returns"], [173, "returns"], [174, "returns"], [175, "returns"], [176, "returns"], [177, "returns"], [180, "returns"], [181, "returns"], [182, "returns"], [183, "returns"], [184, "returns"], [185, "returns"], [186, "returns"], [187, "returns"], [188, "returns"], [189, "returns"], [191, "returns"], [192, "returns"], [193, "returns"], [194, "returns"], [195, "returns"], [205, "returns"], [206, "returns"], [208, "returns"], [209, "returns"], [210, "returns"], [211, "returns"], [212, "returns"], [213, "returns"], [215, "returns"], [216, "returns"], [217, "returns"], [218, "returns"], [220, "returns"], [221, "returns"], [222, "returns"], [223, "returns"], [224, "returns"], [225, "returns"], [226, "returns"], [227, "returns"], [230, "returns"], [232, "returns"], [233, "returns"], [234, "returns"], [235, "returns"], [237, "returns"], [238, "returns"], [239, "returns"], [240, "returns"], [242, "returns"], [243, "returns"], [244, "returns"], [245, "returns"], [246, "returns"], [247, "returns"], [248, "returns"], [249, "returns"], [250, "returns"], [252, "returns"], [253, "returns"], [254, "returns"], [255, "returns"], [257, "returns"], [258, "returns"], [266, "returns"], [268, "returns"], [270, "returns"], [271, "returns"], [272, "returns"], [273, "returns"], [274, "returns"], [275, "returns"], [282, "returns"], [304, "returns"], [336, "returns"], [372, "returns"], [374, "returns"], [376, "returns"], [378, "returns"], [379, "returns"], [380, "returns"], [381, "returns"], [382, "returns"], [385, "returns"], [386, "returns"], [387, "returns"], [388, "returns"], [389, "returns"], [390, "returns"], [391, "returns"], [392, "returns"], [393, "returns"], [394, "returns"], [395, "returns"], [396, "returns"], [397, "returns"], [398, "returns"], [399, "returns"], [400, "returns"], [401, "returns"], [402, "returns"], [403, "returns"], [404, "returns"], [405, "returns"], [407, "returns"], [408, "returns"], [409, "returns"], [410, "returns"], [411, "returns"], [412, "returns"], [413, "returns"], [414, "returns"], [415, "returns"], [416, "returns"], [417, "returns"], [418, "returns"], [419, "returns"], [420, "returns"], [421, "returns"], [422, "returns"], [423, "returns"], [424, "returns"], [425, "returns"], [426, "returns"], [427, "returns"], [428, "returns"], [429, "returns"], [430, "returns"], [431, "returns"], [432, "returns"], [433, "returns"], [434, "returns"], [435, "returns"], [436, "returns"], [437, "returns"], [438, "returns"], [439, "returns"], [441, "returns"], [442, "returns"], [443, "returns"], [444, "returns"], [445, "returns"], [446, "returns"], [447, "returns"], [449, "returns"], [450, "returns"], [451, "returns"], [452, "returns"], [453, "returns"], [454, "returns"], [455, "returns"]], "SENet": [[85, "senet"], [130, null]], "SKNet": [[85, "sknet"], [140, null]], "Schedulers": [[357, null]], "See Also": [[358, "see-also"]], "Selective Kernel": [[267, null]], "Sparse Layers": [[306, null], [337, null]], "Squeeze-and-Excitation": [[267, null]], "Summary Table": [[155, "summary-table"]], "Swin Transformer": [[163, "swin-transformer"]], "SwinTransformer": [[178, null]], "SwinTransformer_V2": [[179, null]], "Switching Between Devices": [[15, "switching-between-devices"]], "Tensor Generating Functions": [[406, null]], "Tensor Operations": [[406, null]], "Tensor Utilites": [[440, null]], "Tensor: The Core Abstraction": [[15, "tensor-the-core-abstraction"]], "Training & Evaluation": [[15, "training-evaluation"]], "Transformer": [[156, null], [163, "transformer"]], "Transformer Layers": [[306, null], [343, null]], "Transformers": [[163, null]], "Unary Functions": [[406, null]], "Usage": [[4, "usage"], [69, "usage"], [70, "usage"], [71, "usage"], [72, "usage"], [196, "usage"], [258, "usage"], [348, "usage"], [372, "usage"], [373, "usage"], [374, "usage"], [442, "usage"], [456, "usage"], [457, "usage"], [467, "usage"]], "Usage Example": [[98, "usage-example"], [99, "usage-example"], [100, "usage-example"], [101, "usage-example"], [102, "usage-example"], [289, "usage-example"], [338, "usage-example"], [339, "usage-example"], [340, "usage-example"], [341, "usage-example"], [342, "usage-example"], [349, "usage-example"], [350, "usage-example"], [351, "usage-example"], [352, "usage-example"], [353, "usage-example"], [354, "usage-example"], [355, "usage-example"], [356, "usage-example"]], "Usage Examples": [[371, "usage-examples"]], "Use another Tensor as input": [[434, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using free tensors": [[384, null]], "Using the ASGD Optimizer": [[359, null]], "Using the Adadelta Optimizer": [[360, null]], "Using the Adagrad Optimizer": [[361, null]], "Using the Adam Optimizer": [[362, null]], "Using the AdamW Optimizer": [[363, null]], "Using the Adamax Optimizer": [[364, null]], "Using the NAdam Optimizer": [[365, null]], "Using the RAdam Optimizer": [[366, null]], "Using the RMSprop Optimizer": [[367, null]], "Using the Rprop Optimizer": [[368, null]], "Using the SGD Optimizer": [[369, null]], "Utility Functions": [[229, null], [256, null]], "VGGNet": [[85, "vggnet"], [145, null]], "Verification": [[15, "verification"]], "ViT": [[190, null]], "Vision Layers": [[306, null], [345, null]], "Visual Transformer (ViT)": [[163, "visual-transformer-vit"]], "Weight Initializations": [[269, null]], "Xception": [[85, "xception"], [150, null]], "ZFNet": [[85, "zfnet"], [152, null]], "alexnet": [[29, null]], "coatnet_0": [[31, null]], "coatnet_1": [[32, null]], "coatnet_2": [[33, null]], "coatnet_3": [[34, null]], "coatnet_4": [[35, null]], "coatnet_5": [[36, null]], "coatnet_6": [[37, null]], "coatnet_7": [[38, null]], "convnext_base": [[41, null]], "convnext_large": [[42, null]], "convnext_small": [[43, null]], "convnext_tiny": [[44, null]], "convnext_v2_atto": [[45, null]], "convnext_v2_base": [[46, null]], "convnext_v2_femto": [[47, null]], "convnext_v2_huge": [[48, null]], "convnext_v2_large": [[49, null]], "convnext_v2_nano": [[50, null]], "convnext_v2_pico": [[51, null]], "convnext_v2_tiny": [[52, null]], "convnext_xlarge": [[53, null]], "cvt_13": [[160, null]], "cvt_21": [[161, null]], "cvt_w24": [[162, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "densenet_121": [[55, null]], "densenet_169": [[56, null]], "densenet_201": [[57, null]], "densenet_264": [[58, null]], "efficientnet_b0": [[61, null]], "efficientnet_b1": [[62, null]], "efficientnet_b2": [[63, null]], "efficientnet_b3": [[64, null]], "efficientnet_b4": [[65, null]], "efficientnet_b5": [[66, null]], "efficientnet_b6": [[67, null]], "efficientnet_b7": [[68, null]], "efficientnet_v2_l": [[69, null]], "efficientnet_v2_m": [[70, null]], "efficientnet_v2_s": [[71, null]], "efficientnet_v2_xl": [[72, null]], "inception_next_atto": [[78, null]], "inception_next_base": [[79, null]], "inception_next_small": [[80, null]], "inception_next_tiny": [[81, null]], "inception_resnet_v1": [[83, null]], "inception_resnet_v2": [[84, null]], "inception_v1": [[74, null]], "inception_v3": [[75, null]], "inception_v4": [[76, null]], "lenet_1": [[87, null]], "lenet_4": [[88, null]], "lenet_5": [[89, null]], "lr_scheduler.CosineAnnealingLR": [[349, null]], "lr_scheduler.CyclicLR": [[350, null]], "lr_scheduler.ExponentialLR": [[351, null]], "lr_scheduler.LRScheduler": [[352, null]], "lr_scheduler.LambdaLR": [[353, null]], "lr_scheduler.MultiStepLR": [[354, null]], "lr_scheduler.ReduceLROnPlateau": [[355, null]], "lr_scheduler.StepLR": [[356, null]], "lucid.Numeric": [[371, null]], "lucid.Tensor": [[384, null]], "lucid.abs": [[407, null]], "lucid.add": [[385, null]], "lucid.arange": [[396, null]], "lucid.arccos": [[408, null]], "lucid.arcsin": [[409, null]], "lucid.arctan": [[410, null]], "lucid.broadcast_to": [[435, null]], "lucid.chunk": [[436, null]], "lucid.clip": [[411, null]], "lucid.concatenate": [[437, null]], "lucid.cos": [[412, null]], "lucid.cosh": [[413, null]], "lucid.cube": [[414, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[397, null]], "lucid.div": [[386, null]], "lucid.dot": [[387, null]], "lucid.einops": [[10, null]], "lucid.einops.rearrange": [[12, null]], "lucid.einops.reduce": [[13, null]], "lucid.einops.repeat": [[14, null]], "lucid.empty": [[398, null]], "lucid.empty_like": [[399, null]], "lucid.exp": [[415, null]], "lucid.eye": [[400, null]], "lucid.flatten": [[438, null]], "lucid.grad_enabled": [[372, null]], "lucid.hstack": [[439, null]], "lucid.inner": [[388, null]], "lucid.linalg": [[16, null]], "lucid.linalg.cholesky": [[17, null]], "lucid.linalg.det": [[18, null]], "lucid.linalg.eig": [[19, null]], "lucid.linalg.inv": [[21, null]], "lucid.linalg.matrix_power": [[22, null]], "lucid.linalg.norm": [[23, null]], "lucid.linalg.pinv": [[24, null]], "lucid.linalg.qr": [[25, null]], "lucid.linalg.solve": [[26, null]], "lucid.linalg.svd": [[27, null]], "lucid.linspace": [[401, null]], "lucid.log": [[416, null]], "lucid.log2": [[417, null]], "lucid.masked_fill": [[441, null]], "lucid.matmul": [[389, null]], "lucid.max": [[418, null]], "lucid.maximum": [[390, null]], "lucid.mean": [[419, null]], "lucid.meshgrid": [[442, null]], "lucid.min": [[420, null]], "lucid.minimum": [[391, null]], "lucid.models": [[154, null]], "lucid.multiply": [[392, null]], "lucid.newaxis": [[373, null]], "lucid.nn": [[346, null]], "lucid.nn.functional": [[229, null]], "lucid.no_grad": [[374, null]], "lucid.ones": [[402, null]], "lucid.ones_like": [[403, null]], "lucid.optim": [[358, null]], "lucid.outer": [[393, null]], "lucid.pad": [[443, null]], "lucid.power": [[394, null]], "lucid.random": [[383, null]], "lucid.random.bernoulli": [[376, null]], "lucid.random.rand": [[378, null]], "lucid.random.randint": [[379, null]], "lucid.random.randn": [[380, null]], "lucid.random.seed": [[381, null]], "lucid.random.uniform": [[382, null]], "lucid.ravel": [[444, null]], "lucid.reciprocal": [[421, null]], "lucid.register_model": [[375, null]], "lucid.repeat": [[445, null]], "lucid.reshape": [[446, null]], "lucid.roll": [[447, null]], "lucid.sign": [[422, null]], "lucid.sin": [[423, null]], "lucid.sinh": [[424, null]], "lucid.split": [[448, null]], "lucid.sqrt": [[425, null]], "lucid.square": [[426, null]], "lucid.squeeze": [[449, null]], "lucid.stack": [[450, null]], "lucid.sub": [[395, null]], "lucid.sum": [[427, null]], "lucid.swapaxes": [[428, null]], "lucid.tan": [[429, null]], "lucid.tanh": [[430, null]], "lucid.tensor": [[434, null]], "lucid.tile": [[451, null]], "lucid.trace": [[431, null]], "lucid.transforms": [[467, null]], "lucid.transpose": [[432, null]], "lucid.tril": [[452, null]], "lucid.triu": [[453, null]], "lucid.unsqueeze": [[454, null]], "lucid.var": [[433, null]], "lucid.vstack": [[455, null]], "lucid.zeros": [[404, null]], "lucid.zeros_like": [[405, null]], "mobilenet": [[94, null]], "mobilenet_v2": [[95, null]], "mobilenet_v3_large": [[96, null]], "mobilenet_v3_small": [[97, null]], "mobilenet_v4_conv_large": [[98, null]], "mobilenet_v4_conv_medium": [[99, null]], "mobilenet_v4_conv_small": [[100, null]], "mobilenet_v4_hybrid_large": [[101, null]], "mobilenet_v4_hybrid_medium": [[102, null]], "models.summarize": [[155, null]], "nn.AdaptiveAvgPool1d": [[326, null]], "nn.AdaptiveAvgPool2d": [[327, null]], "nn.AdaptiveAvgPool3d": [[328, null]], "nn.AlphaDropout": [[296, null]], "nn.AvgPool1d": [[329, null]], "nn.AvgPool2d": [[330, null]], "nn.AvgPool3d": [[331, null]], "nn.BCELoss": [[311, null]], "nn.BatchNorm1d": [[317, null]], "nn.BatchNorm2d": [[318, null]], "nn.BatchNorm3d": [[319, null]], "nn.Bilinear": [[307, null]], "nn.Buffer": [[196, null]], "nn.Conv1d": [[292, null]], "nn.Conv2d": [[293, null]], "nn.Conv3d": [[294, null]], "nn.ConvBNReLU1d": [[259, null]], "nn.ConvBNReLU2d": [[260, null]], "nn.ConvBNReLU3d": [[261, null]], "nn.CrossEntropyLoss": [[312, null]], "nn.DepthSeparableConv1d": [[262, null]], "nn.DepthSeparableConv2d": [[263, null]], "nn.DepthSeparableConv3d": [[264, null]], "nn.DropBlock": [[297, null]], "nn.DropPath": [[298, null]], "nn.Dropout": [[299, null]], "nn.Dropout1d": [[300, null]], "nn.Dropout2d": [[301, null]], "nn.Dropout3d": [[302, null]], "nn.ELU": [[276, null]], "nn.Embedding": [[336, null]], "nn.GELU": [[277, null]], "nn.GlobalResponseNorm": [[320, null]], "nn.HardSigmoid": [[278, null]], "nn.HardSwish": [[279, null]], "nn.HuberLoss": [[313, null]], "nn.Identity": [[308, null]], "nn.InstanceNorm1d": [[321, null]], "nn.InstanceNorm2d": [[322, null]], "nn.InstanceNorm3d": [[323, null]], "nn.LayerNorm": [[324, null]], "nn.LeakyReLU": [[280, null]], "nn.Linear": [[309, null]], "nn.MSELoss": [[314, null]], "nn.MaxPool1d": [[332, null]], "nn.MaxPool2d": [[333, null]], "nn.MaxPool3d": [[334, null]], "nn.Module": [[197, null]], "nn.ModuleDict": [[199, null]], "nn.ModuleList": [[200, null]], "nn.MultiHeadAttention": [[289, null]], "nn.NLLLoss": [[315, null]], "nn.Parameter": [[198, null]], "nn.ParameterDict": [[201, null]], "nn.ParameterList": [[202, null]], "nn.ReLU": [[281, null]], "nn.ReLU6": [[282, null]], "nn.Rearrange": [[304, null]], "nn.SELU": [[283, null]], "nn.SEModule": [[265, null]], "nn.ScaledDotProductAttention": [[290, null]], "nn.SelectiveKernel": [[266, null]], "nn.Sequential": [[203, null]], "nn.Sigmoid": [[284, null]], "nn.Softmax": [[285, null]], "nn.Swish": [[286, null]], "nn.Tanh": [[287, null]], "nn.Transformer": [[338, null]], "nn.TransformerDecoder": [[339, null]], "nn.TransformerDecoderLayer": [[340, null]], "nn.TransformerEncoder": [[341, null]], "nn.TransformerEncoderLayer": [[342, null]], "nn.Upsample": [[344, null]], "nn.functional.adaptive_avg_pool1d": [[245, null]], "nn.functional.adaptive_avg_pool2d": [[246, null]], "nn.functional.adaptive_avg_pool3d": [[247, null]], "nn.functional.alpha_dropout": [[221, null]], "nn.functional.avg_pool1d": [[248, null]], "nn.functional.avg_pool2d": [[249, null]], "nn.functional.avg_pool3d": [[250, null]], "nn.functional.batch_norm": [[239, null]], "nn.functional.bilinear": [[230, null]], "nn.functional.binary_cross_entropy": [[233, null]], "nn.functional.conv1d": [[216, null]], "nn.functional.conv2d": [[217, null]], "nn.functional.conv3d": [[218, null]], "nn.functional.cross_entropy": [[234, null]], "nn.functional.drop_block": [[222, null]], "nn.functional.drop_path": [[223, null]], "nn.functional.dropout": [[224, null]], "nn.functional.dropout1d": [[225, null]], "nn.functional.dropout2d": [[226, null]], "nn.functional.dropout3d": [[227, null]], "nn.functional.elu": [[205, null]], "nn.functional.embedding": [[255, null]], "nn.functional.gelu": [[206, null]], "nn.functional.global_response_norm": [[240, null]], "nn.functional.huber_loss": [[235, null]], "nn.functional.instance_norm": [[242, null]], "nn.functional.interpolate": [[257, null]], "nn.functional.layer_norm": [[243, null]], "nn.functional.leaky_relu": [[208, null]], "nn.functional.linear": [[232, null]], "nn.functional.max_pool1d": [[252, null]], "nn.functional.max_pool2d": [[253, null]], "nn.functional.max_pool3d": [[254, null]], "nn.functional.mse_loss": [[237, null]], "nn.functional.nll_loss": [[238, null]], "nn.functional.normalize": [[244, null]], "nn.functional.relu": [[209, null]], "nn.functional.rotate": [[258, null]], "nn.functional.scaled_dot_product_attention": [[215, null]], "nn.functional.selu": [[210, null]], "nn.functional.sigmoid": [[211, null]], "nn.functional.softmax": [[212, null]], "nn.functional.tanh": [[213, null]], "nn.functional.unfold": [[220, null]], "nn.init.constant": [[268, null]], "nn.init.kaiming_normal": [[270, null]], "nn.init.kaiming_uniform": [[271, null]], "nn.init.normal": [[272, null]], "nn.init.uniform": [[273, null]], "nn.init.xavier_normal": [[274, null]], "nn.init.xavier_uniform": [[275, null]], "optim.ASGD": [[359, null]], "optim.Adadelta": [[360, null]], "optim.Adagrad": [[361, null]], "optim.Adam": [[362, null]], "optim.AdamW": [[363, null]], "optim.Adamax": [[364, null]], "optim.NAdam": [[365, null]], "optim.Optimizer": [[347, null]], "optim.RAdam": [[366, null]], "optim.RMSprop": [[367, null]], "optim.Rprop": [[368, null]], "optim.SGD": [[369, null]], "optim.lr_scheduler": [[348, null]], "pvt_huge": [[166, null]], "pvt_large": [[167, null]], "pvt_medium": [[168, null]], "pvt_small": [[169, null]], "pvt_tiny": [[170, null]], "pvt_v2_b0": [[171, null]], "pvt_v2_b1": [[172, null]], "pvt_v2_b2": [[173, null]], "pvt_v2_b2_li": [[174, null]], "pvt_v2_b3": [[175, null]], "pvt_v2_b4": [[176, null]], "pvt_v2_b5": [[177, null]], "rearrange": [[10, "rearrange"]], "reduce": [[10, "reduce"]], "repeat": [[10, "repeat"]], "resnest_101": [[104, null]], "resnest_14": [[105, null]], "resnest_200": [[106, null]], "resnest_26": [[107, null]], "resnest_269": [[108, null]], "resnest_50": [[109, null]], "resnest_50_1s4x24d": [[110, null]], "resnest_50_4s2x40d": [[111, null]], "resnet_1001": [[113, null]], "resnet_101": [[114, null]], "resnet_152": [[115, null]], "resnet_18": [[116, null]], "resnet_200": [[117, null]], "resnet_269": [[118, null]], "resnet_34": [[119, null]], "resnet_50": [[120, null]], "resnext_101_32x16d": [[124, null]], "resnext_101_32x32d": [[125, null]], "resnext_101_32x4d": [[126, null]], "resnext_101_32x8d": [[127, null]], "resnext_101_64x4d": [[128, null]], "resnext_50_32x4d": [[129, null]], "se_resnet_101": [[131, null]], "se_resnet_152": [[132, null]], "se_resnet_18": [[133, null]], "se_resnet_34": [[134, null]], "se_resnet_50": [[135, null]], "se_resnext_101_32x4d": [[136, null]], "se_resnext_101_32x8d": [[137, null]], "se_resnext_101_64x4d": [[138, null]], "se_resnext_50_32x4d": [[139, null]], "sk_resnet_18": [[141, null]], "sk_resnet_34": [[142, null]], "sk_resnet_50": [[143, null]], "sk_resnext_50_32x4d": [[144, null]], "swin_base": [[180, null]], "swin_large": [[181, null]], "swin_small": [[182, null]], "swin_tiny": [[183, null]], "swin_v2_base": [[184, null]], "swin_v2_giant": [[185, null]], "swin_v2_huge": [[186, null]], "swin_v2_large": [[187, null]], "swin_v2_small": [[188, null]], "swin_v2_tiny": [[189, null]], "transformer_base": [[157, null]], "transformer_big": [[158, null]], "transforms.CenterCrop": [[458, null]], "transforms.Compose": [[456, null]], "transforms.Normalize": [[459, null]], "transforms.RandomCrop": [[460, null]], "transforms.RandomGrayscale": [[461, null]], "transforms.RandomHorizontalFlip": [[462, null]], "transforms.RandomRotation": [[463, null]], "transforms.RandomVerticalFlip": [[464, null]], "transforms.Resize": [[465, null]], "transforms.ToTensor": [[457, null]], "vggnet_11": [[146, null]], "vggnet_13": [[147, null]], "vggnet_16": [[148, null]], "vggnet_19": [[149, null]], "vit_base": [[191, null]], "vit_huge": [[192, null]], "vit_large": [[193, null]], "vit_small": [[194, null]], "vit_tiny": [[195, null]], "wide_resnet_101": [[121, null]], "wide_resnet_50": [[122, null]], "xception": [[151, null]], "zfnet": [[153, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/CIFAR10", "datasets/image/CIFAR100", "datasets/image/FashionMNIST", "datasets/image/MNIST", "datasets/image/index", "einops/einops", "einops/functions/index", "einops/functions/rearrange", "einops/functions/reduce", "einops/functions/repeat", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/conv/alex/AlexNet_", "models/conv/alex/alexnet", "models/conv/coatnet/CoAtNet", "models/conv/coatnet/coatnet_0", "models/conv/coatnet/coatnet_1", "models/conv/coatnet/coatnet_2", "models/conv/coatnet/coatnet_3", "models/conv/coatnet/coatnet_4", "models/conv/coatnet/coatnet_5", "models/conv/coatnet/coatnet_6", "models/conv/coatnet/coatnet_7", "models/conv/convnext/ConvNeXt", "models/conv/convnext/ConvNeXt_V2", "models/conv/convnext/convnext_base", "models/conv/convnext/convnext_large", "models/conv/convnext/convnext_small", "models/conv/convnext/convnext_tiny", "models/conv/convnext/convnext_v2_atto", "models/conv/convnext/convnext_v2_base", "models/conv/convnext/convnext_v2_femto", "models/conv/convnext/convnext_v2_huge", "models/conv/convnext/convnext_v2_large", "models/conv/convnext/convnext_v2_nano", "models/conv/convnext/convnext_v2_pico", "models/conv/convnext/convnext_v2_tiny", "models/conv/convnext/convnext_xlarge", "models/conv/dense/DenseNet", "models/conv/dense/densenet_121", "models/conv/dense/densenet_169", "models/conv/dense/densenet_201", "models/conv/dense/densenet_264", "models/conv/efficient/EfficientNet", "models/conv/efficient/EfficientNet_V2", "models/conv/efficient/efficientnet_b0", "models/conv/efficient/efficientnet_b1", "models/conv/efficient/efficientnet_b2", "models/conv/efficient/efficientnet_b3", "models/conv/efficient/efficientnet_b4", "models/conv/efficient/efficientnet_b5", "models/conv/efficient/efficientnet_b6", "models/conv/efficient/efficientnet_b7", "models/conv/efficient/efficientnet_v2_l", "models/conv/efficient/efficientnet_v2_m", "models/conv/efficient/efficientnet_v2_s", "models/conv/efficient/efficientnet_v2_xl", "models/conv/inception/Inception", "models/conv/inception/inception_v1", "models/conv/inception/inception_v3", "models/conv/inception/inception_v4", "models/conv/inception_next/InceptionNeXt", "models/conv/inception_next/inception_next_atto", "models/conv/inception_next/inception_next_base", "models/conv/inception_next/inception_next_small", "models/conv/inception_next/inception_next_tiny", "models/conv/inception_res/InceptionResNet", "models/conv/inception_res/inception_resnet_v1", "models/conv/inception_res/inception_resnet_v2", "models/conv/index", "models/conv/lenet/LeNet", "models/conv/lenet/lenet_1", "models/conv/lenet/lenet_4", "models/conv/lenet/lenet_5", "models/conv/mobile/MobileNet_", "models/conv/mobile/MobileNet_V2_", "models/conv/mobile/MobileNet_V3", "models/conv/mobile/MobileNet_V4", "models/conv/mobile/mobilenet", "models/conv/mobile/mobilenet_v2", "models/conv/mobile/mobilenet_v3_large", "models/conv/mobile/mobilenet_v3_small", "models/conv/mobile/mobilenet_v4_conv_large", "models/conv/mobile/mobilenet_v4_conv_medium", "models/conv/mobile/mobilenet_v4_conv_small", "models/conv/mobile/mobilenet_v4_hybrid_large", "models/conv/mobile/mobilenet_v4_hybrid_medium", "models/conv/resnest/ResNeSt", "models/conv/resnest/resnest_101", "models/conv/resnest/resnest_14", "models/conv/resnest/resnest_200", "models/conv/resnest/resnest_26", "models/conv/resnest/resnest_269", "models/conv/resnest/resnest_50", "models/conv/resnest/resnest_50_1s4x24d", "models/conv/resnest/resnest_50_4s2x40d", "models/conv/resnet/ResNet", "models/conv/resnet/resnet_1001", "models/conv/resnet/resnet_101", "models/conv/resnet/resnet_152", "models/conv/resnet/resnet_18", "models/conv/resnet/resnet_200", "models/conv/resnet/resnet_269", "models/conv/resnet/resnet_34", "models/conv/resnet/resnet_50", "models/conv/resnet/wide_resnet_101", "models/conv/resnet/wide_resnet_50", "models/conv/resnext/ResNeXt", "models/conv/resnext/resnext_101_32x16d", "models/conv/resnext/resnext_101_32x32d", "models/conv/resnext/resnext_101_32x4d", "models/conv/resnext/resnext_101_32x8d", "models/conv/resnext/resnext_101_64x4d", "models/conv/resnext/resnext_50_32x4d", "models/conv/senet/SENet", "models/conv/senet/se_resnet_101", "models/conv/senet/se_resnet_152", "models/conv/senet/se_resnet_18", "models/conv/senet/se_resnet_34", "models/conv/senet/se_resnet_50", "models/conv/senet/se_resnext_101_32x4d", "models/conv/senet/se_resnext_101_32x8d", "models/conv/senet/se_resnext_101_64x4d", "models/conv/senet/se_resnext_50_32x4d", "models/conv/sknet/SKNet", "models/conv/sknet/sk_resnet_18", "models/conv/sknet/sk_resnet_34", "models/conv/sknet/sk_resnet_50", "models/conv/sknet/sk_resnext_50_32x4d", "models/conv/vgg/VGGNet", "models/conv/vgg/vggnet_11", "models/conv/vgg/vggnet_13", "models/conv/vgg/vggnet_16", "models/conv/vgg/vggnet_19", "models/conv/xception/Xception_", "models/conv/xception/xception", "models/conv/zfnet/ZFNet_", "models/conv/zfnet/zfnet", "models/models", "models/summarize", "models/transformer/base/Transformer", "models/transformer/base/transformer_base", "models/transformer/base/transformer_big", "models/transformer/cvt/CvT", "models/transformer/cvt/cvt_13", "models/transformer/cvt/cvt_21", "models/transformer/cvt/cvt_w24", "models/transformer/index", "models/transformer/pvt/PVT", "models/transformer/pvt/PVT_V2", "models/transformer/pvt/pvt_huge", "models/transformer/pvt/pvt_large", "models/transformer/pvt/pvt_medium", "models/transformer/pvt/pvt_small", "models/transformer/pvt/pvt_tiny", "models/transformer/pvt/pvt_v2_b0", "models/transformer/pvt/pvt_v2_b1", "models/transformer/pvt/pvt_v2_b2", "models/transformer/pvt/pvt_v2_b2_li", "models/transformer/pvt/pvt_v2_b3", "models/transformer/pvt/pvt_v2_b4", "models/transformer/pvt/pvt_v2_b5", "models/transformer/swin/SwinTransformer", "models/transformer/swin/SwinTransformer_V2", "models/transformer/swin/swin_base", "models/transformer/swin/swin_large", "models/transformer/swin/swin_small", "models/transformer/swin/swin_tiny", "models/transformer/swin/swin_v2_base", "models/transformer/swin/swin_v2_giant", "models/transformer/swin/swin_v2_huge", "models/transformer/swin/swin_v2_large", "models/transformer/swin/swin_v2_small", "models/transformer/swin/swin_v2_tiny", "models/transformer/vit/ViT", "models/transformer/vit/vit_base", "models/transformer/vit/vit_huge", "models/transformer/vit/vit_large", "models/transformer/vit/vit_small", "models/transformer/vit/vit_tiny", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/attention/index", "nn/functions/attention/scaled_dot_product_attention", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/drop_block", "nn/functions/drop/drop_path", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/global_response_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/norm/normalize", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/util/embedding", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/fused/ConvBNReLU1d", "nn/fused/ConvBNReLU2d", "nn/fused/ConvBNReLU3d", "nn/fused/DepthSeparableConv1d", "nn/fused/DepthSeparableConv2d", "nn/fused/DepthSeparableConv3d", "nn/fused/SEModule", "nn/fused/SelectiveKernel", "nn/fused/index", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/HardSigmoid", "nn/modules/activation/HardSwish", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/ReLU6", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Swish", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/attention/MultiHeadAttention", "nn/modules/attention/ScaledDotProductAttention", "nn/modules/attention/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/DropBlock", "nn/modules/drop/DropPath", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/einops/Rearrange", "nn/modules/einops/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/GlobalResponseNorm", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/modules/sparse/Embedding", "nn/modules/sparse/index", "nn/modules/transformer/Transformer", "nn/modules/transformer/TransformerDecoder", "nn/modules/transformer/TransformerDecoderLayer", "nn/modules/transformer/TransformerEncoder", "nn/modules/transformer/TransformerEncoderLayer", "nn/modules/transformer/index", "nn/modules/vision/Upsample", "nn/modules/vision/index", "nn/nn", "optim/Optimizer", "optim/lr_scheduler", "optim/lr_scheduler/CosineAnnealingLR", "optim/lr_scheduler/CyclicLR", "optim/lr_scheduler/ExponentialLR", "optim/lr_scheduler/LRScheduler", "optim/lr_scheduler/LambdaLR", "optim/lr_scheduler/MultiStepLR", "optim/lr_scheduler/ReduceLROnPlateau", "optim/lr_scheduler/StepLR", "optim/lr_scheduler/index", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/Numeric", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "random/functions/bernoulli", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/multiply", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/linspace", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/log2", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/swapaxes", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/broadcast_to", "tensor/utilities/chunk", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/masked_fill", "tensor/utilities/meshgrid", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/roll", "tensor/utilities/split", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/tril", "tensor/utilities/triu", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/CIFAR10.rst", "datasets/image/CIFAR100.rst", "datasets/image/FashionMNIST.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "einops/einops.rst", "einops/functions/index.rst", "einops/functions/rearrange.rst", "einops/functions/reduce.rst", "einops/functions/repeat.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/conv/alex/AlexNet_.rst", "models/conv/alex/alexnet.rst", "models/conv/coatnet/CoAtNet.rst", "models/conv/coatnet/coatnet_0.rst", "models/conv/coatnet/coatnet_1.rst", "models/conv/coatnet/coatnet_2.rst", "models/conv/coatnet/coatnet_3.rst", "models/conv/coatnet/coatnet_4.rst", "models/conv/coatnet/coatnet_5.rst", "models/conv/coatnet/coatnet_6.rst", "models/conv/coatnet/coatnet_7.rst", "models/conv/convnext/ConvNeXt.rst", "models/conv/convnext/ConvNeXt_V2.rst", "models/conv/convnext/convnext_base.rst", "models/conv/convnext/convnext_large.rst", "models/conv/convnext/convnext_small.rst", "models/conv/convnext/convnext_tiny.rst", "models/conv/convnext/convnext_v2_atto.rst", "models/conv/convnext/convnext_v2_base.rst", "models/conv/convnext/convnext_v2_femto.rst", "models/conv/convnext/convnext_v2_huge.rst", "models/conv/convnext/convnext_v2_large.rst", "models/conv/convnext/convnext_v2_nano.rst", "models/conv/convnext/convnext_v2_pico.rst", "models/conv/convnext/convnext_v2_tiny.rst", "models/conv/convnext/convnext_xlarge.rst", "models/conv/dense/DenseNet.rst", "models/conv/dense/densenet_121.rst", "models/conv/dense/densenet_169.rst", "models/conv/dense/densenet_201.rst", "models/conv/dense/densenet_264.rst", "models/conv/efficient/EfficientNet.rst", "models/conv/efficient/EfficientNet_V2.rst", "models/conv/efficient/efficientnet_b0.rst", "models/conv/efficient/efficientnet_b1.rst", "models/conv/efficient/efficientnet_b2.rst", "models/conv/efficient/efficientnet_b3.rst", "models/conv/efficient/efficientnet_b4.rst", "models/conv/efficient/efficientnet_b5.rst", "models/conv/efficient/efficientnet_b6.rst", "models/conv/efficient/efficientnet_b7.rst", "models/conv/efficient/efficientnet_v2_l.rst", "models/conv/efficient/efficientnet_v2_m.rst", "models/conv/efficient/efficientnet_v2_s.rst", "models/conv/efficient/efficientnet_v2_xl.rst", "models/conv/inception/Inception.rst", "models/conv/inception/inception_v1.rst", "models/conv/inception/inception_v3.rst", "models/conv/inception/inception_v4.rst", "models/conv/inception_next/InceptionNeXt.rst", "models/conv/inception_next/inception_next_atto.rst", "models/conv/inception_next/inception_next_base.rst", "models/conv/inception_next/inception_next_small.rst", "models/conv/inception_next/inception_next_tiny.rst", "models/conv/inception_res/InceptionResNet.rst", "models/conv/inception_res/inception_resnet_v1.rst", "models/conv/inception_res/inception_resnet_v2.rst", "models/conv/index.rst", "models/conv/lenet/LeNet.rst", "models/conv/lenet/lenet_1.rst", "models/conv/lenet/lenet_4.rst", "models/conv/lenet/lenet_5.rst", "models/conv/mobile/MobileNet_.rst", "models/conv/mobile/MobileNet_V2_.rst", "models/conv/mobile/MobileNet_V3.rst", "models/conv/mobile/MobileNet_V4.rst", "models/conv/mobile/mobilenet.rst", "models/conv/mobile/mobilenet_v2.rst", "models/conv/mobile/mobilenet_v3_large.rst", "models/conv/mobile/mobilenet_v3_small.rst", "models/conv/mobile/mobilenet_v4_conv_large.rst", "models/conv/mobile/mobilenet_v4_conv_medium.rst", "models/conv/mobile/mobilenet_v4_conv_small.rst", "models/conv/mobile/mobilenet_v4_hybrid_large.rst", "models/conv/mobile/mobilenet_v4_hybrid_medium.rst", "models/conv/resnest/ResNeSt.rst", "models/conv/resnest/resnest_101.rst", "models/conv/resnest/resnest_14.rst", "models/conv/resnest/resnest_200.rst", "models/conv/resnest/resnest_26.rst", "models/conv/resnest/resnest_269.rst", "models/conv/resnest/resnest_50.rst", "models/conv/resnest/resnest_50_1s4x24d.rst", "models/conv/resnest/resnest_50_4s2x40d.rst", "models/conv/resnet/ResNet.rst", "models/conv/resnet/resnet_1001.rst", "models/conv/resnet/resnet_101.rst", "models/conv/resnet/resnet_152.rst", "models/conv/resnet/resnet_18.rst", "models/conv/resnet/resnet_200.rst", "models/conv/resnet/resnet_269.rst", "models/conv/resnet/resnet_34.rst", "models/conv/resnet/resnet_50.rst", "models/conv/resnet/wide_resnet_101.rst", "models/conv/resnet/wide_resnet_50.rst", "models/conv/resnext/ResNeXt.rst", "models/conv/resnext/resnext_101_32x16d.rst", "models/conv/resnext/resnext_101_32x32d.rst", "models/conv/resnext/resnext_101_32x4d.rst", "models/conv/resnext/resnext_101_32x8d.rst", "models/conv/resnext/resnext_101_64x4d.rst", "models/conv/resnext/resnext_50_32x4d.rst", "models/conv/senet/SENet.rst", "models/conv/senet/se_resnet_101.rst", "models/conv/senet/se_resnet_152.rst", "models/conv/senet/se_resnet_18.rst", "models/conv/senet/se_resnet_34.rst", "models/conv/senet/se_resnet_50.rst", "models/conv/senet/se_resnext_101_32x4d.rst", "models/conv/senet/se_resnext_101_32x8d.rst", "models/conv/senet/se_resnext_101_64x4d.rst", "models/conv/senet/se_resnext_50_32x4d.rst", "models/conv/sknet/SKNet.rst", "models/conv/sknet/sk_resnet_18.rst", "models/conv/sknet/sk_resnet_34.rst", "models/conv/sknet/sk_resnet_50.rst", "models/conv/sknet/sk_resnext_50_32x4d.rst", "models/conv/vgg/VGGNet.rst", "models/conv/vgg/vggnet_11.rst", "models/conv/vgg/vggnet_13.rst", "models/conv/vgg/vggnet_16.rst", "models/conv/vgg/vggnet_19.rst", "models/conv/xception/Xception_.rst", "models/conv/xception/xception.rst", "models/conv/zfnet/ZFNet_.rst", "models/conv/zfnet/zfnet.rst", "models/models.rst", "models/summarize.rst", "models/transformer/base/Transformer.rst", "models/transformer/base/transformer_base.rst", "models/transformer/base/transformer_big.rst", "models/transformer/cvt/CvT.rst", "models/transformer/cvt/cvt_13.rst", "models/transformer/cvt/cvt_21.rst", "models/transformer/cvt/cvt_w24.rst", "models/transformer/index.rst", "models/transformer/pvt/PVT.rst", "models/transformer/pvt/PVT_V2.rst", "models/transformer/pvt/pvt_huge.rst", "models/transformer/pvt/pvt_large.rst", "models/transformer/pvt/pvt_medium.rst", "models/transformer/pvt/pvt_small.rst", "models/transformer/pvt/pvt_tiny.rst", "models/transformer/pvt/pvt_v2_b0.rst", "models/transformer/pvt/pvt_v2_b1.rst", "models/transformer/pvt/pvt_v2_b2.rst", "models/transformer/pvt/pvt_v2_b2_li.rst", "models/transformer/pvt/pvt_v2_b3.rst", "models/transformer/pvt/pvt_v2_b4.rst", "models/transformer/pvt/pvt_v2_b5.rst", "models/transformer/swin/SwinTransformer.rst", "models/transformer/swin/SwinTransformer_V2.rst", "models/transformer/swin/swin_base.rst", "models/transformer/swin/swin_large.rst", "models/transformer/swin/swin_small.rst", "models/transformer/swin/swin_tiny.rst", "models/transformer/swin/swin_v2_base.rst", "models/transformer/swin/swin_v2_giant.rst", "models/transformer/swin/swin_v2_huge.rst", "models/transformer/swin/swin_v2_large.rst", "models/transformer/swin/swin_v2_small.rst", "models/transformer/swin/swin_v2_tiny.rst", "models/transformer/vit/ViT.rst", "models/transformer/vit/vit_base.rst", "models/transformer/vit/vit_huge.rst", "models/transformer/vit/vit_large.rst", "models/transformer/vit/vit_small.rst", "models/transformer/vit/vit_tiny.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/attention/index.rst", "nn/functions/attention/scaled_dot_product_attention.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/drop_block.rst", "nn/functions/drop/drop_path.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/global_response_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/norm/normalize.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/util/embedding.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/fused/ConvBNReLU1d.rst", "nn/fused/ConvBNReLU2d.rst", "nn/fused/ConvBNReLU3d.rst", "nn/fused/DepthSeparableConv1d.rst", "nn/fused/DepthSeparableConv2d.rst", "nn/fused/DepthSeparableConv3d.rst", "nn/fused/SEModule.rst", "nn/fused/SelectiveKernel.rst", "nn/fused/index.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/HardSigmoid.rst", "nn/modules/activation/HardSwish.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/ReLU6.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Swish.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/attention/MultiHeadAttention.rst", "nn/modules/attention/ScaledDotProductAttention.rst", "nn/modules/attention/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/DropBlock.rst", "nn/modules/drop/DropPath.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/einops/Rearrange.rst", "nn/modules/einops/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/GlobalResponseNorm.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/modules/sparse/Embedding.rst", "nn/modules/sparse/index.rst", "nn/modules/transformer/Transformer.rst", "nn/modules/transformer/TransformerDecoder.rst", "nn/modules/transformer/TransformerDecoderLayer.rst", "nn/modules/transformer/TransformerEncoder.rst", "nn/modules/transformer/TransformerEncoderLayer.rst", "nn/modules/transformer/index.rst", "nn/modules/vision/Upsample.rst", "nn/modules/vision/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/lr_scheduler.rst", "optim/lr_scheduler/CosineAnnealingLR.rst", "optim/lr_scheduler/CyclicLR.rst", "optim/lr_scheduler/ExponentialLR.rst", "optim/lr_scheduler/LRScheduler.rst", "optim/lr_scheduler/LambdaLR.rst", "optim/lr_scheduler/MultiStepLR.rst", "optim/lr_scheduler/ReduceLROnPlateau.rst", "optim/lr_scheduler/StepLR.rst", "optim/lr_scheduler/index.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/Numeric.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "random/functions/bernoulli.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/multiply.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/linspace.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/log2.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/swapaxes.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/broadcast_to.rst", "tensor/utilities/chunk.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/masked_fill.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/roll.rst", "tensor/utilities/split.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/tril.rst", "tensor/utilities/triu.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"abs() (in module lucid)": [[407, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[360, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[361, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[362, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[364, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[363, "lucid.optim.AdamW", false]], "adaptive_avg_pool1d() (in module lucid.nn.functional)": [[245, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[246, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[247, "lucid.nn.functional.adaptive_avg_pool3d", false]], "adaptiveavgpool1d (class in lucid.nn)": [[326, "lucid.nn.AdaptiveAvgPool1d", false]], "adaptiveavgpool2d (class in lucid.nn)": [[327, "lucid.nn.AdaptiveAvgPool2d", false]], "adaptiveavgpool3d (class in lucid.nn)": [[328, "lucid.nn.AdaptiveAvgPool3d", false]], "add() (in module lucid)": [[385, "lucid.add", false]], "alexnet (class in lucid.models)": [[28, "lucid.models.AlexNet", false]], "alexnet() (in module lucid.models)": [[29, "lucid.models.alexnet", false]], "alpha_dropout() (in module lucid.nn.functional)": [[221, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[296, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[396, "lucid.arange", false]], "arccos() (in module lucid)": [[408, "lucid.arccos", false]], "arcsin() (in module lucid)": [[409, "lucid.arcsin", false]], "arctan() (in module lucid)": [[410, "lucid.arctan", false]], "asgd (class in lucid.optim)": [[359, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[248, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[249, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[250, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[329, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[330, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[331, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[239, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[317, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[318, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[319, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[311, "lucid.nn.BCELoss", false]], "bernoulli() (in module lucid.random)": [[376, "lucid.random.bernoulli", false]], "bilinear (class in lucid.nn)": [[307, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[230, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[233, "lucid.nn.functional.binary_cross_entropy", false]], "broadcast_to() (in module lucid)": [[435, "lucid.broadcast_to", false]], "buffer (class in lucid.nn)": [[196, "lucid.nn.Buffer", false]], "centercrop (class in lucid.transforms)": [[458, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[17, "lucid.linalg.cholesky", false]], "chunk() (in module lucid)": [[436, "lucid.chunk", false]], "cifar10 (class in lucid.datasets)": [[5, "lucid.datasets.CIFAR10", false]], "cifar100 (class in lucid.datasets)": [[6, "lucid.datasets.CIFAR100", false]], "clip() (in module lucid)": [[411, "lucid.clip", false]], "coatnet (class in lucid.models)": [[30, "lucid.models.CoAtNet", false]], "coatnet_0() (in module lucid.models)": [[31, "lucid.models.coatnet_0", false]], "coatnet_1() (in module lucid.models)": [[32, "lucid.models.coatnet_1", false]], "coatnet_2() (in module lucid.models)": [[33, "lucid.models.coatnet_2", false]], "coatnet_3() (in module lucid.models)": [[34, "lucid.models.coatnet_3", false]], "coatnet_4() (in module lucid.models)": [[35, "lucid.models.coatnet_4", false]], "coatnet_5() (in module lucid.models)": [[36, "lucid.models.coatnet_5", false]], "coatnet_6() (in module lucid.models)": [[37, "lucid.models.coatnet_6", false]], "coatnet_7() (in module lucid.models)": [[38, "lucid.models.coatnet_7", false]], "compose (class in lucid.transforms)": [[456, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[437, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[268, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[292, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[216, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[293, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[217, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[294, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[218, "lucid.nn.functional.conv3d", false]], "convbnrelu1d (class in lucid.nn)": [[259, "lucid.nn.ConvBNReLU1d", false]], "convbnrelu2d (class in lucid.nn)": [[260, "lucid.nn.ConvBNReLU2d", false]], "convbnrelu3d (class in lucid.nn)": [[261, "lucid.nn.ConvBNReLU3d", false]], "convnext (class in lucid.models)": [[39, "lucid.models.ConvNeXt", false]], "convnext_base() (in module lucid.models)": [[41, "lucid.models.convnext_base", false]], "convnext_large() (in module lucid.models)": [[42, "lucid.models.convnext_large", false]], "convnext_small() (in module lucid.models)": [[43, "lucid.models.convnext_small", false]], "convnext_tiny() (in module lucid.models)": [[44, "lucid.models.convnext_tiny", false]], "convnext_v2 (class in lucid.models)": [[40, "lucid.models.ConvNeXt_V2", false]], "convnext_v2_atto() (in module lucid.models)": [[45, "lucid.models.convnext_v2_atto", false]], "convnext_v2_base() (in module lucid.models)": [[46, "lucid.models.convnext_v2_base", false]], "convnext_v2_femto() (in module lucid.models)": [[47, "lucid.models.convnext_v2_femto", false]], "convnext_v2_huge() (in module lucid.models)": [[48, "lucid.models.convnext_v2_huge", false]], "convnext_v2_large() (in module lucid.models)": [[49, "lucid.models.convnext_v2_large", false]], "convnext_v2_nano() (in module lucid.models)": [[50, "lucid.models.convnext_v2_nano", false]], "convnext_v2_pico() (in module lucid.models)": [[51, "lucid.models.convnext_v2_pico", false]], "convnext_v2_tiny() (in module lucid.models)": [[52, "lucid.models.convnext_v2_tiny", false]], "convnext_xlarge() (in module lucid.models)": [[53, "lucid.models.convnext_xlarge", false]], "cos() (in module lucid)": [[412, "lucid.cos", false]], "cosh() (in module lucid)": [[413, "lucid.cosh", false]], "cosineannealinglr (class in lucid.optim.lr_scheduler)": [[349, "lucid.optim.lr_scheduler.CosineAnnealingLR", false]], "cross_entropy() (in module lucid.nn.functional)": [[234, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[312, "lucid.nn.CrossEntropyLoss", false]], "cube() (in module lucid)": [[414, "lucid.cube", false]], "cvt (class in lucid.models)": [[159, "lucid.models.CvT", false]], "cvt_13() (in module lucid.models)": [[160, "lucid.models.cvt_13", false]], "cvt_21() (in module lucid.models)": [[161, "lucid.models.cvt_21", false]], "cvt_w24() (in module lucid.models)": [[162, "lucid.models.cvt_w24", false]], "cycliclr (class in lucid.optim.lr_scheduler)": [[350, "lucid.optim.lr_scheduler.CyclicLR", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "densenet (class in lucid.models)": [[54, "lucid.models.DenseNet", false]], "densenet_121() (in module lucid.models)": [[55, "lucid.models.densenet_121", false]], "densenet_169() (in module lucid.models)": [[56, "lucid.models.densenet_169", false]], "densenet_201() (in module lucid.models)": [[57, "lucid.models.densenet_201", false]], "densenet_264() (in module lucid.models)": [[58, "lucid.models.densenet_264", false]], "depthseparableconv1d (class in lucid.nn)": [[262, "lucid.nn.DepthSeparableConv1d", false]], "depthseparableconv2d (class in lucid.nn)": [[263, "lucid.nn.DepthSeparableConv2d", false]], "depthseparableconv3d (class in lucid.nn)": [[264, "lucid.nn.DepthSeparableConv3d", false]], "det() (in module lucid.linalg)": [[18, "lucid.linalg.det", false]], "diag() (in module lucid)": [[397, "lucid.diag", false]], "div() (in module lucid)": [[386, "lucid.div", false]], "dot() (in module lucid)": [[387, "lucid.dot", false]], "drop_block() (in module lucid.nn.functional)": [[222, "lucid.nn.functional.drop_block", false]], "drop_path() (in module lucid.nn.functional)": [[223, "lucid.nn.functional.drop_path", false]], "dropblock (class in lucid.nn)": [[297, "lucid.nn.DropBlock", false]], "dropout (class in lucid.nn)": [[299, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[224, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[300, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[225, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[301, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[226, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[302, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[227, "lucid.nn.functional.dropout3d", false]], "droppath (class in lucid.nn)": [[298, "lucid.nn.DropPath", false]], "efficientnet (class in lucid.models)": [[59, "lucid.models.EfficientNet", false]], "efficientnet_b0() (in module lucid.models)": [[61, "lucid.models.efficientnet_b0", false]], "efficientnet_b1() (in module lucid.models)": [[62, "lucid.models.efficientnet_b1", false]], "efficientnet_b2() (in module lucid.models)": [[63, "lucid.models.efficientnet_b2", false]], "efficientnet_b3() (in module lucid.models)": [[64, "lucid.models.efficientnet_b3", false]], "efficientnet_b4() (in module lucid.models)": [[65, "lucid.models.efficientnet_b4", false]], "efficientnet_b5() (in module lucid.models)": [[66, "lucid.models.efficientnet_b5", false]], "efficientnet_b6() (in module lucid.models)": [[67, "lucid.models.efficientnet_b6", false]], "efficientnet_b7() (in module lucid.models)": [[68, "lucid.models.efficientnet_b7", false]], "efficientnet_v2 (class in lucid.models)": [[60, "lucid.models.EfficientNet_V2", false]], "efficientnet_v2_l() (in module lucid.models)": [[69, "lucid.models.efficientnet_v2_l", false]], "efficientnet_v2_m() (in module lucid.models)": [[70, "lucid.models.efficientnet_v2_m", false]], "efficientnet_v2_s() (in module lucid.models)": [[71, "lucid.models.efficientnet_v2_s", false]], "efficientnet_v2_xl() (in module lucid.models)": [[72, "lucid.models.efficientnet_v2_xl", false]], "eig() (in module lucid.linalg)": [[19, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[276, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[205, "lucid.nn.functional.elu", false]], "embedding (class in lucid.nn)": [[336, "lucid.nn.Embedding", false]], "embedding() (in module lucid.nn.functional)": [[255, "lucid.nn.functional.embedding", false]], "empty() (in module lucid)": [[398, "lucid.empty", false]], "empty_like() (in module lucid)": [[399, "lucid.empty_like", false]], "exp() (in module lucid)": [[415, "lucid.exp", false]], "exponentiallr (class in lucid.optim.lr_scheduler)": [[351, "lucid.optim.lr_scheduler.ExponentialLR", false]], "eye() (in module lucid)": [[400, "lucid.eye", false]], "fashionmnist (class in lucid.datasets)": [[7, "lucid.datasets.FashionMNIST", false]], "flatten() (in module lucid)": [[438, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[277, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[206, "lucid.nn.functional.gelu", false]], "global_response_norm() (in module lucid.nn.functional)": [[240, "lucid.nn.functional.global_response_norm", false]], "globalresponsenorm (class in lucid.nn)": [[320, "lucid.nn.GlobalResponseNorm", false]], "grad_enabled() (in module lucid)": [[372, "lucid.grad_enabled", false]], "hardsigmoid (class in lucid.nn)": [[278, "lucid.nn.HardSigmoid", false]], "hardswish (class in lucid.nn)": [[279, "lucid.nn.HardSwish", false]], "hstack() (in module lucid)": [[439, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[235, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[313, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[308, "lucid.nn.Identity", false]], "inception (class in lucid.models)": [[73, "lucid.models.Inception", false]], "inception_next_atto() (in module lucid.models)": [[78, "lucid.models.inception_next_atto", false]], "inception_next_base() (in module lucid.models)": [[79, "lucid.models.inception_next_base", false]], "inception_next_small() (in module lucid.models)": [[80, "lucid.models.inception_next_small", false]], "inception_next_tiny() (in module lucid.models)": [[81, "lucid.models.inception_next_tiny", false]], "inception_resnet_v1() (in module lucid.models)": [[83, "lucid.models.inception_resnet_v1", false]], "inception_resnet_v2() (in module lucid.models)": [[84, "lucid.models.inception_resnet_v2", false]], "inception_v1() (in module lucid.models)": [[74, "lucid.models.inception_v1", false]], "inception_v3() (in module lucid.models)": [[75, "lucid.models.inception_v3", false]], "inception_v4() (in module lucid.models)": [[76, "lucid.models.inception_v4", false]], "inceptionnext (class in lucid.models)": [[77, "lucid.models.InceptionNeXt", false]], "inceptionresnet (class in lucid.models)": [[82, "lucid.models.InceptionResNet", false]], "inner() (in module lucid)": [[388, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[242, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[321, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[322, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[323, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[257, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[21, "lucid.linalg.inv", false]], "kaiming_normal() (in module lucid.nn.init)": [[270, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[271, "lucid.nn.init.kaiming_uniform", false]], "lambdalr (class in lucid.optim.lr_scheduler)": [[353, "lucid.optim.lr_scheduler.LambdaLR", false]], "layer_norm() (in module lucid.nn.functional)": [[243, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[324, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[208, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[280, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[86, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[87, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[88, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[89, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[309, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[232, "lucid.nn.functional.linear", false]], "linspace() (in module lucid)": [[401, "lucid.linspace", false]], "log() (in module lucid)": [[416, "lucid.log", false]], "log2() (in module lucid)": [[417, "lucid.log2", false]], "lrscheduler (class in lucid.optim.lr_scheduler)": [[352, "lucid.optim.lr_scheduler.LRScheduler", false]], "lucid": [[15, "module-lucid", false]], "masked_fill() (in module lucid)": [[441, "lucid.masked_fill", false]], "matmul() (in module lucid)": [[389, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[22, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[418, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[252, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[253, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[254, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[390, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[332, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[333, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[334, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[419, "lucid.mean", false]], "meshgrid() (in module lucid)": [[442, "lucid.meshgrid", false]], "min() (in module lucid)": [[420, "lucid.min", false]], "minimum() (in module lucid)": [[391, "lucid.minimum", false]], "mnist (class in lucid.datasets)": [[8, "lucid.datasets.MNIST", false]], "mobilenet (class in lucid.models)": [[90, "lucid.models.MobileNet", false]], "mobilenet() (in module lucid.models)": [[94, "lucid.models.mobilenet", false]], "mobilenet_v2 (class in lucid.models)": [[91, "lucid.models.MobileNet_V2", false]], "mobilenet_v2() (in module lucid.models)": [[95, "lucid.models.mobilenet_v2", false]], "mobilenet_v3 (class in lucid.models)": [[92, "lucid.models.MobileNet_V3", false]], "mobilenet_v3_large() (in module lucid.models)": [[96, "lucid.models.mobilenet_v3_large", false]], "mobilenet_v3_small() (in module lucid.models)": [[97, "lucid.models.mobilenet_v3_small", false]], "mobilenet_v4 (class in lucid.models)": [[93, "lucid.models.MobileNet_V4", false]], "mobilenet_v4_conv_large() (in module lucid.models)": [[98, "lucid.models.mobilenet_v4_conv_large", false]], "mobilenet_v4_conv_medium() (in module lucid.models)": [[99, "lucid.models.mobilenet_v4_conv_medium", false]], "mobilenet_v4_conv_small() (in module lucid.models)": [[100, "lucid.models.mobilenet_v4_conv_small", false]], "mobilenet_v4_hybrid_large() (in module lucid.models)": [[101, "lucid.models.mobilenet_v4_hybrid_large", false]], "mobilenet_v4_hybrid_medium() (in module lucid.models)": [[102, "lucid.models.mobilenet_v4_hybrid_medium", false]], "module": [[15, "module-lucid", false]], "module (class in lucid.nn)": [[197, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[199, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[200, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[237, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[314, "lucid.nn.MSELoss", false]], "multiheadattention (class in lucid.nn)": [[289, "lucid.nn.MultiHeadAttention", false]], "multiply() (in module lucid)": [[392, "lucid.multiply", false]], "multisteplr (class in lucid.optim.lr_scheduler)": [[354, "lucid.optim.lr_scheduler.MultiStepLR", false]], "nadam (class in lucid.optim)": [[365, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[238, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[315, "lucid.nn.NLLLoss", false]], "no_grad() (in module lucid)": [[374, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[23, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[272, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[459, "lucid.transforms.Normalize", false]], "normalize() (in module lucid.nn.functional)": [[244, "lucid.nn.functional.normalize", false]], "numeric (class in lucid.types)": [[371, "lucid.types.Numeric", false]], "ones() (in module lucid)": [[402, "lucid.ones", false]], "ones_like() (in module lucid)": [[403, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[347, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[393, "lucid.outer", false]], "pad() (in module lucid)": [[443, "lucid.pad", false]], "parameter (class in lucid.nn)": [[198, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[201, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[202, "lucid.nn.ParameterList", false]], "pinv() (in module lucid.linalg)": [[24, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[394, "lucid.power", false]], "pvt (class in lucid.models)": [[164, "lucid.models.PVT", false]], "pvt_huge() (in module lucid.models)": [[166, "lucid.models.pvt_huge", false]], "pvt_large() (in module lucid.models)": [[167, "lucid.models.pvt_large", false]], "pvt_medium() (in module lucid.models)": [[168, "lucid.models.pvt_medium", false]], "pvt_small() (in module lucid.models)": [[169, "lucid.models.pvt_small", false]], "pvt_tiny() (in module lucid.models)": [[170, "lucid.models.pvt_tiny", false]], "pvt_v2 (class in lucid.models)": [[165, "lucid.models.PVT_V2", false]], "pvt_v2_b0() (in module lucid.models)": [[171, "lucid.models.pvt_v2_b0", false]], "pvt_v2_b1() (in module lucid.models)": [[172, "lucid.models.pvt_v2_b1", false]], "pvt_v2_b2() (in module lucid.models)": [[173, "lucid.models.pvt_v2_b2", false]], "pvt_v2_b2_li() (in module lucid.models)": [[174, "lucid.models.pvt_v2_b2_li", false]], "pvt_v2_b3() (in module lucid.models)": [[175, "lucid.models.pvt_v2_b3", false]], "pvt_v2_b4() (in module lucid.models)": [[176, "lucid.models.pvt_v2_b4", false]], "pvt_v2_b5() (in module lucid.models)": [[177, "lucid.models.pvt_v2_b5", false]], "qr() (in module lucid.linalg)": [[25, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[366, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[378, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[379, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[380, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[460, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[461, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[462, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[463, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[464, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[444, "lucid.ravel", false]], "rearrange (class in lucid.nn)": [[304, "lucid.nn.Rearrange", false]], "rearrange() (in module lucid.einops)": [[12, "lucid.einops.rearrange", false]], "reciprocal() (in module lucid)": [[421, "lucid.reciprocal", false]], "reduce() (in module lucid.einops)": [[13, "lucid.einops.reduce", false]], "reducelronplateau (class in lucid.optim.lr_scheduler)": [[355, "lucid.optim.lr_scheduler.ReduceLROnPlateau", false]], "register_model() (in module lucid)": [[375, "lucid.register_model", false]], "relu (class in lucid.nn)": [[281, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[209, "lucid.nn.functional.relu", false]], "relu6 (class in lucid.nn)": [[282, "lucid.nn.ReLU6", false]], "repeat() (in module lucid)": [[445, "lucid.repeat", false]], "repeat() (in module lucid.einops)": [[14, "lucid.einops.repeat", false]], "reshape() (in module lucid)": [[446, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[465, "lucid.transforms.Resize", false]], "resnest (class in lucid.models)": [[103, "lucid.models.ResNeSt", false]], "resnest_101() (in module lucid.models)": [[104, "lucid.models.resnest_101", false]], "resnest_14() (in module lucid.models)": [[105, "lucid.models.resnest_14", false]], "resnest_200() (in module lucid.models)": [[106, "lucid.models.resnest_200", false]], "resnest_26() (in module lucid.models)": [[107, "lucid.models.resnest_26", false]], "resnest_269() (in module lucid.models)": [[108, "lucid.models.resnest_269", false]], "resnest_50() (in module lucid.models)": [[109, "lucid.models.resnest_50", false]], "resnest_50_1s4x24d() (in module lucid.models)": [[110, "lucid.models.resnest_50_1s4x24d", false]], "resnest_50_4s2x40d() (in module lucid.models)": [[111, "lucid.models.resnest_50_4s2x40d", false]], "resnet (class in lucid.models)": [[112, "lucid.models.ResNet", false]], "resnet_1001() (in module lucid.models)": [[113, "lucid.models.resnet_1001", false]], "resnet_101() (in module lucid.models)": [[114, "lucid.models.resnet_101", false]], "resnet_152() (in module lucid.models)": [[115, "lucid.models.resnet_152", false]], "resnet_18() (in module lucid.models)": [[116, "lucid.models.resnet_18", false]], "resnet_200() (in module lucid.models)": [[117, "lucid.models.resnet_200", false]], "resnet_269() (in module lucid.models)": [[118, "lucid.models.resnet_269", false]], "resnet_34() (in module lucid.models)": [[119, "lucid.models.resnet_34", false]], "resnet_50() (in module lucid.models)": [[120, "lucid.models.resnet_50", false]], "resnext (class in lucid.models)": [[123, "lucid.models.ResNeXt", false]], "resnext_101_32x16d() (in module lucid.models)": [[124, "lucid.models.resnext_101_32x16d", false]], "resnext_101_32x32d() (in module lucid.models)": [[125, "lucid.models.resnext_101_32x32d", false]], "resnext_101_32x4d() (in module lucid.models)": [[126, "lucid.models.resnext_101_32x4d", false]], "resnext_101_32x8d() (in module lucid.models)": [[127, "lucid.models.resnext_101_32x8d", false]], "resnext_101_64x4d() (in module lucid.models)": [[128, "lucid.models.resnext_101_64x4d", false]], "resnext_50_32x4d() (in module lucid.models)": [[129, "lucid.models.resnext_50_32x4d", false]], "rmsprop (class in lucid.optim)": [[367, "lucid.optim.RMSprop", false]], "roll() (in module lucid)": [[447, "lucid.roll", false]], "rotate() (in module lucid.nn.functional)": [[258, "lucid.nn.functional.rotate", false]], "rprop (class in lucid.optim)": [[368, "lucid.optim.Rprop", false]], "scaled_dot_product_attention() (in module lucid.nn.functional)": [[215, "lucid.nn.functional.scaled_dot_product_attention", false]], "scaleddotproductattention (class in lucid.nn)": [[290, "lucid.nn.ScaledDotProductAttention", false]], "se_resnet_101() (in module lucid.models)": [[131, "lucid.models.se_resnet_101", false]], "se_resnet_152() (in module lucid.models)": [[132, "lucid.models.se_resnet_152", false]], "se_resnet_18() (in module lucid.models)": [[133, "lucid.models.se_resnet_18", false]], "se_resnet_34() (in module lucid.models)": [[134, "lucid.models.se_resnet_34", false]], "se_resnet_50() (in module lucid.models)": [[135, "lucid.models.se_resnet_50", false]], "se_resnext_101_32x4d() (in module lucid.models)": [[136, "lucid.models.se_resnext_101_32x4d", false]], "se_resnext_101_32x8d() (in module lucid.models)": [[137, "lucid.models.se_resnext_101_32x8d", false]], "se_resnext_101_64x4d() (in module lucid.models)": [[138, "lucid.models.se_resnext_101_64x4d", false]], "se_resnext_50_32x4d() (in module lucid.models)": [[139, "lucid.models.se_resnext_50_32x4d", false]], "seed() (in module lucid.random)": [[381, "lucid.random.seed", false]], "selectivekernel (class in lucid.nn)": [[266, "lucid.nn.SelectiveKernel", false]], "selu (class in lucid.nn)": [[283, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[210, "lucid.nn.functional.selu", false]], "semodule (class in lucid.nn)": [[265, "lucid.nn.SEModule", false]], "senet (class in lucid.models)": [[130, "lucid.models.SENet", false]], "sequential (class in lucid.nn)": [[203, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[369, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[284, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[211, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[422, "lucid.sign", false]], "sin() (in module lucid)": [[423, "lucid.sin", false]], "sinh() (in module lucid)": [[424, "lucid.sinh", false]], "sk_resnet_18() (in module lucid.models)": [[141, "lucid.models.sk_resnet_18", false]], "sk_resnet_34() (in module lucid.models)": [[142, "lucid.models.sk_resnet_34", false]], "sk_resnet_50() (in module lucid.models)": [[143, "lucid.models.sk_resnet_50", false]], "sk_resnext_50_32x4d() (in module lucid.models)": [[144, "lucid.models.sk_resnext_50_32x4d", false]], "sknet (class in lucid.models)": [[140, "lucid.models.SKNet", false]], "softmax (class in lucid.nn)": [[285, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[212, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[26, "lucid.linalg.solve", false]], "split() (in module lucid)": [[448, "lucid.split", false]], "sqrt() (in module lucid)": [[425, "lucid.sqrt", false]], "square() (in module lucid)": [[426, "lucid.square", false]], "squeeze() (in module lucid)": [[449, "lucid.squeeze", false]], "stack() (in module lucid)": [[450, "lucid.stack", false]], "steplr (class in lucid.optim.lr_scheduler)": [[356, "lucid.optim.lr_scheduler.StepLR", false]], "sub() (in module lucid)": [[395, "lucid.sub", false]], "sum() (in module lucid)": [[427, "lucid.sum", false]], "summarize() (in module lucid.models)": [[155, "lucid.models.summarize", false]], "svd() (in module lucid.linalg)": [[27, "lucid.linalg.svd", false]], "swapaxes() (in module lucid)": [[428, "lucid.swapaxes", false]], "swin_base() (in module lucid.models)": [[180, "lucid.models.swin_base", false]], "swin_large() (in module lucid.models)": [[181, "lucid.models.swin_large", false]], "swin_small() (in module lucid.models)": [[182, "lucid.models.swin_small", false]], "swin_tiny() (in module lucid.models)": [[183, "lucid.models.swin_tiny", false]], "swin_v2_base() (in module lucid.models)": [[184, "lucid.models.swin_v2_base", false]], "swin_v2_giant() (in module lucid.models)": [[185, "lucid.models.swin_v2_giant", false]], "swin_v2_huge() (in module lucid.models)": [[186, "lucid.models.swin_v2_huge", false]], "swin_v2_large() (in module lucid.models)": [[187, "lucid.models.swin_v2_large", false]], "swin_v2_small() (in module lucid.models)": [[188, "lucid.models.swin_v2_small", false]], "swin_v2_tiny() (in module lucid.models)": [[189, "lucid.models.swin_v2_tiny", false]], "swintransformer (class in lucid.models)": [[178, "lucid.models.SwinTransformer", false]], "swintransformer_v2 (class in lucid.models)": [[179, "lucid.models.SwinTransformer_V2", false]], "swish (class in lucid.nn)": [[286, "lucid.nn.Swish", false]], "tan() (in module lucid)": [[429, "lucid.tan", false]], "tanh (class in lucid.nn)": [[287, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[430, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[213, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[384, "lucid.Tensor", false]], "tensor() (in module lucid)": [[434, "lucid.tensor", false]], "tile() (in module lucid)": [[451, "lucid.tile", false]], "totensor (class in lucid.transforms)": [[457, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[431, "lucid.trace", false]], "transformer (class in lucid.models)": [[156, "lucid.models.Transformer", false]], "transformer (class in lucid.nn)": [[338, "lucid.nn.Transformer", false]], "transformer_base() (in module lucid.models)": [[157, "lucid.models.transformer_base", false]], "transformer_big() (in module lucid.models)": [[158, "lucid.models.transformer_big", false]], "transformerdecoder (class in lucid.nn)": [[339, "lucid.nn.TransformerDecoder", false]], "transformerdecoderlayer (class in lucid.nn)": [[340, "lucid.nn.TransformerDecoderLayer", false]], "transformerencoder (class in lucid.nn)": [[341, "lucid.nn.TransformerEncoder", false]], "transformerencoderlayer (class in lucid.nn)": [[342, "lucid.nn.TransformerEncoderLayer", false]], "transpose() (in module lucid)": [[432, "lucid.transpose", false]], "tril() (in module lucid)": [[452, "lucid.tril", false]], "triu() (in module lucid)": [[453, "lucid.triu", false]], "unfold() (in module lucid.nn.functional)": [[220, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[273, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[382, "lucid.random.uniform", false]], "unsqueeze() (in module lucid)": [[454, "lucid.unsqueeze", false]], "upsample (class in lucid.nn)": [[344, "lucid.nn.Upsample", false]], "var() (in module lucid)": [[433, "lucid.var", false]], "vggnet (class in lucid.models)": [[145, "lucid.models.VGGNet", false]], "vggnet_11() (in module lucid.models)": [[146, "lucid.models.vggnet_11", false]], "vggnet_13() (in module lucid.models)": [[147, "lucid.models.vggnet_13", false]], "vggnet_16() (in module lucid.models)": [[148, "lucid.models.vggnet_16", false]], "vggnet_19() (in module lucid.models)": [[149, "lucid.models.vggnet_19", false]], "vit (class in lucid.models)": [[190, "lucid.models.ViT", false]], "vit_base() (in module lucid.models)": [[191, "lucid.models.vit_base", false]], "vit_huge() (in module lucid.models)": [[192, "lucid.models.vit_huge", false]], "vit_large() (in module lucid.models)": [[193, "lucid.models.vit_large", false]], "vit_small() (in module lucid.models)": [[194, "lucid.models.vit_small", false]], "vit_tiny() (in module lucid.models)": [[195, "lucid.models.vit_tiny", false]], "vstack() (in module lucid)": [[455, "lucid.vstack", false]], "wide_resnet_101() (in module lucid.models)": [[121, "lucid.models.wide_resnet_101", false]], "wide_resnet_50() (in module lucid.models)": [[122, "lucid.models.wide_resnet_50", false]], "xavier_normal() (in module lucid.nn.init)": [[274, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[275, "lucid.nn.init.xavier_uniform", false]], "xception (class in lucid.models)": [[150, "lucid.models.Xception", false]], "xception() (in module lucid.models)": [[151, "lucid.models.xception", false]], "zeros() (in module lucid)": [[404, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[405, "lucid.zeros_like", false]], "zfnet (class in lucid.models)": [[152, "lucid.models.ZFNet", false]], "zfnet() (in module lucid.models)": [[153, "lucid.models.zfnet", false]]}, "objects": {"": [[15, 0, 0, "-", "lucid"]], "lucid": [[384, 1, 1, "", "Tensor"], [407, 2, 1, "", "abs"], [385, 2, 1, "", "add"], [396, 2, 1, "", "arange"], [408, 2, 1, "", "arccos"], [409, 2, 1, "", "arcsin"], [410, 2, 1, "", "arctan"], [435, 2, 1, "", "broadcast_to"], [436, 2, 1, "", "chunk"], [411, 2, 1, "", "clip"], [437, 2, 1, "", "concatenate"], [412, 2, 1, "", "cos"], [413, 2, 1, "", "cosh"], [414, 2, 1, "", "cube"], [397, 2, 1, "", "diag"], [386, 2, 1, "", "div"], [387, 2, 1, "", "dot"], [398, 2, 1, "", "empty"], [399, 2, 1, "", "empty_like"], [415, 2, 1, "", "exp"], [400, 2, 1, "", "eye"], [438, 2, 1, "", "flatten"], [372, 2, 1, "", "grad_enabled"], [439, 2, 1, "", "hstack"], [388, 2, 1, "", "inner"], [401, 2, 1, "", "linspace"], [416, 2, 1, "", "log"], [417, 2, 1, "", "log2"], [441, 2, 1, "", "masked_fill"], [389, 2, 1, "", "matmul"], [418, 2, 1, "", "max"], [390, 2, 1, "", "maximum"], [419, 2, 1, "", "mean"], [442, 2, 1, "", "meshgrid"], [420, 2, 1, "", "min"], [391, 2, 1, "", "minimum"], [392, 2, 1, "", "multiply"], [374, 2, 1, "", "no_grad"], [402, 2, 1, "", "ones"], [403, 2, 1, "", "ones_like"], [393, 2, 1, "", "outer"], [443, 2, 1, "", "pad"], [394, 2, 1, "", "power"], [444, 2, 1, "", "ravel"], [421, 2, 1, "", "reciprocal"], [375, 2, 1, "", "register_model"], [445, 2, 1, "", "repeat"], [446, 2, 1, "", "reshape"], [447, 2, 1, "", "roll"], [422, 2, 1, "", "sign"], [423, 2, 1, "", "sin"], [424, 2, 1, "", "sinh"], [448, 2, 1, "", "split"], [425, 2, 1, "", "sqrt"], [426, 2, 1, "", "square"], [449, 2, 1, "", "squeeze"], [450, 2, 1, "", "stack"], [395, 2, 1, "", "sub"], [427, 2, 1, "", "sum"], [428, 2, 1, "", "swapaxes"], [429, 2, 1, "", "tan"], [430, 2, 1, "", "tanh"], [434, 2, 1, "", "tensor"], [451, 2, 1, "", "tile"], [431, 2, 1, "", "trace"], [432, 2, 1, "", "transpose"], [452, 2, 1, "", "tril"], [453, 2, 1, "", "triu"], [454, 2, 1, "", "unsqueeze"], [433, 2, 1, "", "var"], [455, 2, 1, "", "vstack"], [404, 2, 1, "", "zeros"], [405, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "CIFAR10"], [6, 1, 1, "", "CIFAR100"], [7, 1, 1, "", "FashionMNIST"], [8, 1, 1, "", "MNIST"]], "lucid.einops": [[12, 2, 1, "", "rearrange"], [13, 2, 1, "", "reduce"], [14, 2, 1, "", "repeat"]], "lucid.linalg": [[17, 2, 1, "", "cholesky"], [18, 2, 1, "", "det"], [19, 2, 1, "", "eig"], [21, 2, 1, "", "inv"], [22, 2, 1, "", "matrix_power"], [23, 2, 1, "", "norm"], [24, 2, 1, "", "pinv"], [25, 2, 1, "", "qr"], [26, 2, 1, "", "solve"], [27, 2, 1, "", "svd"]], "lucid.models": [[28, 1, 1, "", "AlexNet"], [30, 1, 1, "", "CoAtNet"], [39, 1, 1, "", "ConvNeXt"], [40, 1, 1, "", "ConvNeXt_V2"], [159, 1, 1, "", "CvT"], [54, 1, 1, "", "DenseNet"], [59, 1, 1, "", "EfficientNet"], [60, 1, 1, "", "EfficientNet_V2"], [73, 1, 1, "", "Inception"], [77, 1, 1, "", "InceptionNeXt"], [82, 1, 1, "", "InceptionResNet"], [86, 1, 1, "", "LeNet"], [90, 1, 1, "", "MobileNet"], [91, 1, 1, "", "MobileNet_V2"], [92, 1, 1, "", "MobileNet_V3"], [93, 1, 1, "", "MobileNet_V4"], [164, 1, 1, "", "PVT"], [165, 1, 1, "", "PVT_V2"], [103, 1, 1, "", "ResNeSt"], [123, 1, 1, "", "ResNeXt"], [112, 1, 1, "", "ResNet"], [130, 1, 1, "", "SENet"], [140, 1, 1, "", "SKNet"], [178, 1, 1, "", "SwinTransformer"], [179, 1, 1, "", "SwinTransformer_V2"], [156, 1, 1, "", "Transformer"], [145, 1, 1, "", "VGGNet"], [190, 1, 1, "", "ViT"], [150, 1, 1, "", "Xception"], [152, 1, 1, "", "ZFNet"], [29, 2, 1, "", "alexnet"], [31, 2, 1, "", "coatnet_0"], [32, 2, 1, "", "coatnet_1"], [33, 2, 1, "", "coatnet_2"], [34, 2, 1, "", "coatnet_3"], [35, 2, 1, "", "coatnet_4"], [36, 2, 1, "", "coatnet_5"], [37, 2, 1, "", "coatnet_6"], [38, 2, 1, "", "coatnet_7"], [41, 2, 1, "", "convnext_base"], [42, 2, 1, "", "convnext_large"], [43, 2, 1, "", "convnext_small"], [44, 2, 1, "", "convnext_tiny"], [45, 2, 1, "", "convnext_v2_atto"], [46, 2, 1, "", "convnext_v2_base"], [47, 2, 1, "", "convnext_v2_femto"], [48, 2, 1, "", "convnext_v2_huge"], [49, 2, 1, "", "convnext_v2_large"], [50, 2, 1, "", "convnext_v2_nano"], [51, 2, 1, "", "convnext_v2_pico"], [52, 2, 1, "", "convnext_v2_tiny"], [53, 2, 1, "", "convnext_xlarge"], [160, 2, 1, "", "cvt_13"], [161, 2, 1, "", "cvt_21"], [162, 2, 1, "", "cvt_w24"], [55, 2, 1, "", "densenet_121"], [56, 2, 1, "", "densenet_169"], [57, 2, 1, "", "densenet_201"], [58, 2, 1, "", "densenet_264"], [61, 2, 1, "", "efficientnet_b0"], [62, 2, 1, "", "efficientnet_b1"], [63, 2, 1, "", "efficientnet_b2"], [64, 2, 1, "", "efficientnet_b3"], [65, 2, 1, "", "efficientnet_b4"], [66, 2, 1, "", "efficientnet_b5"], [67, 2, 1, "", "efficientnet_b6"], [68, 2, 1, "", "efficientnet_b7"], [69, 2, 1, "", "efficientnet_v2_l"], [70, 2, 1, "", "efficientnet_v2_m"], [71, 2, 1, "", "efficientnet_v2_s"], [72, 2, 1, "", "efficientnet_v2_xl"], [78, 2, 1, "", "inception_next_atto"], [79, 2, 1, "", "inception_next_base"], [80, 2, 1, "", "inception_next_small"], [81, 2, 1, "", "inception_next_tiny"], [83, 2, 1, "", "inception_resnet_v1"], [84, 2, 1, "", "inception_resnet_v2"], [74, 2, 1, "", "inception_v1"], [75, 2, 1, "", "inception_v3"], [76, 2, 1, "", "inception_v4"], [87, 2, 1, "", "lenet_1"], [88, 2, 1, "", "lenet_4"], [89, 2, 1, "", "lenet_5"], [94, 2, 1, "", "mobilenet"], [95, 2, 1, "", "mobilenet_v2"], [96, 2, 1, "", "mobilenet_v3_large"], [97, 2, 1, "", "mobilenet_v3_small"], [98, 2, 1, "", "mobilenet_v4_conv_large"], [99, 2, 1, "", "mobilenet_v4_conv_medium"], [100, 2, 1, "", "mobilenet_v4_conv_small"], [101, 2, 1, "", "mobilenet_v4_hybrid_large"], [102, 2, 1, "", "mobilenet_v4_hybrid_medium"], [166, 2, 1, "", "pvt_huge"], [167, 2, 1, "", "pvt_large"], [168, 2, 1, "", "pvt_medium"], [169, 2, 1, "", "pvt_small"], [170, 2, 1, "", "pvt_tiny"], [171, 2, 1, "", "pvt_v2_b0"], [172, 2, 1, "", "pvt_v2_b1"], [173, 2, 1, "", "pvt_v2_b2"], [174, 2, 1, "", "pvt_v2_b2_li"], [175, 2, 1, "", "pvt_v2_b3"], [176, 2, 1, "", "pvt_v2_b4"], [177, 2, 1, "", "pvt_v2_b5"], [104, 2, 1, "", "resnest_101"], [105, 2, 1, "", "resnest_14"], [106, 2, 1, "", "resnest_200"], [107, 2, 1, "", "resnest_26"], [108, 2, 1, "", "resnest_269"], [109, 2, 1, "", "resnest_50"], [110, 2, 1, "", "resnest_50_1s4x24d"], [111, 2, 1, "", "resnest_50_4s2x40d"], [113, 2, 1, "", "resnet_1001"], [114, 2, 1, "", "resnet_101"], [115, 2, 1, "", "resnet_152"], [116, 2, 1, "", "resnet_18"], [117, 2, 1, "", "resnet_200"], [118, 2, 1, "", "resnet_269"], [119, 2, 1, "", "resnet_34"], [120, 2, 1, "", "resnet_50"], [124, 2, 1, "", "resnext_101_32x16d"], [125, 2, 1, "", "resnext_101_32x32d"], [126, 2, 1, "", "resnext_101_32x4d"], [127, 2, 1, "", "resnext_101_32x8d"], [128, 2, 1, "", "resnext_101_64x4d"], [129, 2, 1, "", "resnext_50_32x4d"], [131, 2, 1, "", "se_resnet_101"], [132, 2, 1, "", "se_resnet_152"], [133, 2, 1, "", "se_resnet_18"], [134, 2, 1, "", "se_resnet_34"], [135, 2, 1, "", "se_resnet_50"], [136, 2, 1, "", "se_resnext_101_32x4d"], [137, 2, 1, "", "se_resnext_101_32x8d"], [138, 2, 1, "", "se_resnext_101_64x4d"], [139, 2, 1, "", "se_resnext_50_32x4d"], [141, 2, 1, "", "sk_resnet_18"], [142, 2, 1, "", "sk_resnet_34"], [143, 2, 1, "", "sk_resnet_50"], [144, 2, 1, "", "sk_resnext_50_32x4d"], [155, 2, 1, "", "summarize"], [180, 2, 1, "", "swin_base"], [181, 2, 1, "", "swin_large"], [182, 2, 1, "", "swin_small"], [183, 2, 1, "", "swin_tiny"], [184, 2, 1, "", "swin_v2_base"], [185, 2, 1, "", "swin_v2_giant"], [186, 2, 1, "", "swin_v2_huge"], [187, 2, 1, "", "swin_v2_large"], [188, 2, 1, "", "swin_v2_small"], [189, 2, 1, "", "swin_v2_tiny"], [157, 2, 1, "", "transformer_base"], [158, 2, 1, "", "transformer_big"], [146, 2, 1, "", "vggnet_11"], [147, 2, 1, "", "vggnet_13"], [148, 2, 1, "", "vggnet_16"], [149, 2, 1, "", "vggnet_19"], [191, 2, 1, "", "vit_base"], [192, 2, 1, "", "vit_huge"], [193, 2, 1, "", "vit_large"], [194, 2, 1, "", "vit_small"], [195, 2, 1, "", "vit_tiny"], [121, 2, 1, "", "wide_resnet_101"], [122, 2, 1, "", "wide_resnet_50"], [151, 2, 1, "", "xception"], [153, 2, 1, "", "zfnet"]], "lucid.nn": [[326, 1, 1, "", "AdaptiveAvgPool1d"], [327, 1, 1, "", "AdaptiveAvgPool2d"], [328, 1, 1, "", "AdaptiveAvgPool3d"], [296, 1, 1, "", "AlphaDropout"], [329, 1, 1, "", "AvgPool1d"], [330, 1, 1, "", "AvgPool2d"], [331, 1, 1, "", "AvgPool3d"], [311, 1, 1, "", "BCELoss"], [317, 1, 1, "", "BatchNorm1d"], [318, 1, 1, "", "BatchNorm2d"], [319, 1, 1, "", "BatchNorm3d"], [307, 1, 1, "", "Bilinear"], [196, 1, 1, "", "Buffer"], [292, 1, 1, "", "Conv1d"], [293, 1, 1, "", "Conv2d"], [294, 1, 1, "", "Conv3d"], [259, 1, 1, "", "ConvBNReLU1d"], [260, 1, 1, "", "ConvBNReLU2d"], [261, 1, 1, "", "ConvBNReLU3d"], [312, 1, 1, "", "CrossEntropyLoss"], [262, 1, 1, "", "DepthSeparableConv1d"], [263, 1, 1, "", "DepthSeparableConv2d"], [264, 1, 1, "", "DepthSeparableConv3d"], [297, 1, 1, "", "DropBlock"], [298, 1, 1, "", "DropPath"], [299, 1, 1, "", "Dropout"], [300, 1, 1, "", "Dropout1d"], [301, 1, 1, "", "Dropout2d"], [302, 1, 1, "", "Dropout3d"], [276, 1, 1, "", "ELU"], [336, 1, 1, "", "Embedding"], [277, 1, 1, "", "GELU"], [320, 1, 1, "", "GlobalResponseNorm"], [278, 1, 1, "", "HardSigmoid"], [279, 1, 1, "", "HardSwish"], [313, 1, 1, "", "HuberLoss"], [308, 1, 1, "", "Identity"], [321, 1, 1, "", "InstanceNorm1d"], [322, 1, 1, "", "InstanceNorm2d"], [323, 1, 1, "", "InstanceNorm3d"], [324, 1, 1, "", "LayerNorm"], [280, 1, 1, "", "LeakyReLU"], [309, 1, 1, "", "Linear"], [314, 1, 1, "", "MSELoss"], [332, 1, 1, "", "MaxPool1d"], [333, 1, 1, "", "MaxPool2d"], [334, 1, 1, "", "MaxPool3d"], [197, 1, 1, "", "Module"], [199, 1, 1, "", "ModuleDict"], [200, 1, 1, "", "ModuleList"], [289, 1, 1, "", "MultiHeadAttention"], [315, 1, 1, "", "NLLLoss"], [198, 1, 1, "", "Parameter"], [201, 1, 1, "", "ParameterDict"], [202, 1, 1, "", "ParameterList"], [281, 1, 1, "", "ReLU"], [282, 1, 1, "", "ReLU6"], [304, 1, 1, "", "Rearrange"], [283, 1, 1, "", "SELU"], [265, 1, 1, "", "SEModule"], [290, 1, 1, "", "ScaledDotProductAttention"], [266, 1, 1, "", "SelectiveKernel"], [203, 1, 1, "", "Sequential"], [284, 1, 1, "", "Sigmoid"], [285, 1, 1, "", "Softmax"], [286, 1, 1, "", "Swish"], [287, 1, 1, "", "Tanh"], [338, 1, 1, "", "Transformer"], [339, 1, 1, "", "TransformerDecoder"], [340, 1, 1, "", "TransformerDecoderLayer"], [341, 1, 1, "", "TransformerEncoder"], [342, 1, 1, "", "TransformerEncoderLayer"], [344, 1, 1, "", "Upsample"]], "lucid.nn.functional": [[245, 2, 1, "", "adaptive_avg_pool1d"], [246, 2, 1, "", "adaptive_avg_pool2d"], [247, 2, 1, "", "adaptive_avg_pool3d"], [221, 2, 1, "", "alpha_dropout"], [248, 2, 1, "", "avg_pool1d"], [249, 2, 1, "", "avg_pool2d"], [250, 2, 1, "", "avg_pool3d"], [239, 2, 1, "", "batch_norm"], [230, 2, 1, "", "bilinear"], [233, 2, 1, "", "binary_cross_entropy"], [216, 2, 1, "", "conv1d"], [217, 2, 1, "", "conv2d"], [218, 2, 1, "", "conv3d"], [234, 2, 1, "", "cross_entropy"], [222, 2, 1, "", "drop_block"], [223, 2, 1, "", "drop_path"], [224, 2, 1, "", "dropout"], [225, 2, 1, "", "dropout1d"], [226, 2, 1, "", "dropout2d"], [227, 2, 1, "", "dropout3d"], [205, 2, 1, "", "elu"], [255, 2, 1, "", "embedding"], [206, 2, 1, "", "gelu"], [240, 2, 1, "", "global_response_norm"], [235, 2, 1, "", "huber_loss"], [242, 2, 1, "", "instance_norm"], [257, 2, 1, "", "interpolate"], [243, 2, 1, "", "layer_norm"], [208, 2, 1, "", "leaky_relu"], [232, 2, 1, "", "linear"], [252, 2, 1, "", "max_pool1d"], [253, 2, 1, "", "max_pool2d"], [254, 2, 1, "", "max_pool3d"], [237, 2, 1, "", "mse_loss"], [238, 2, 1, "", "nll_loss"], [244, 2, 1, "", "normalize"], [209, 2, 1, "", "relu"], [258, 2, 1, "", "rotate"], [215, 2, 1, "", "scaled_dot_product_attention"], [210, 2, 1, "", "selu"], [211, 2, 1, "", "sigmoid"], [212, 2, 1, "", "softmax"], [213, 2, 1, "", "tanh"], [220, 2, 1, "", "unfold"]], "lucid.nn.init": [[268, 2, 1, "", "constant"], [270, 2, 1, "", "kaiming_normal"], [271, 2, 1, "", "kaiming_uniform"], [272, 2, 1, "", "normal"], [273, 2, 1, "", "uniform"], [274, 2, 1, "", "xavier_normal"], [275, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[359, 1, 1, "", "ASGD"], [360, 1, 1, "", "Adadelta"], [361, 1, 1, "", "Adagrad"], [362, 1, 1, "", "Adam"], [363, 1, 1, "", "AdamW"], [364, 1, 1, "", "Adamax"], [365, 1, 1, "", "NAdam"], [347, 1, 1, "", "Optimizer"], [366, 1, 1, "", "RAdam"], [367, 1, 1, "", "RMSprop"], [368, 1, 1, "", "Rprop"], [369, 1, 1, "", "SGD"]], "lucid.optim.lr_scheduler": [[349, 1, 1, "", "CosineAnnealingLR"], [350, 1, 1, "", "CyclicLR"], [351, 1, 1, "", "ExponentialLR"], [352, 1, 1, "", "LRScheduler"], [353, 1, 1, "", "LambdaLR"], [354, 1, 1, "", "MultiStepLR"], [355, 1, 1, "", "ReduceLROnPlateau"], [356, 1, 1, "", "StepLR"]], "lucid.random": [[376, 2, 1, "", "bernoulli"], [378, 2, 1, "", "rand"], [379, 2, 1, "", "randint"], [380, 2, 1, "", "randn"], [381, 2, 1, "", "seed"], [382, 2, 1, "", "uniform"]], "lucid.transforms": [[458, 1, 1, "", "CenterCrop"], [456, 1, 1, "", "Compose"], [459, 1, 1, "", "Normalize"], [460, 1, 1, "", "RandomCrop"], [461, 1, 1, "", "RandomGrayscale"], [462, 1, 1, "", "RandomHorizontalFlip"], [463, 1, 1, "", "RandomRotation"], [464, 1, 1, "", "RandomVerticalFlip"], [465, 1, 1, "", "Resize"], [457, 1, 1, "", "ToTensor"]], "lucid.types": [[371, 1, 1, "", "Numeric"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [3, 15, 16, 22, 24, 27, 71, 85, 96, 97, 102, 104, 105, 106, 107, 108, 109, 155, 156, 163, 167, 190, 194, 196, 197, 198, 199, 201, 202, 203, 215, 245, 246, 247, 266, 290, 312, 315, 326, 327, 328, 329, 332, 333, 338, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 371, 373, 375, 384, 389, 397, 419, 427, 428, 431, 433, 434, 447, 449, 457, 459, 467], "0": [0, 1, 3, 4, 5, 6, 7, 8, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 31, 39, 40, 59, 60, 69, 70, 71, 72, 75, 77, 82, 85, 86, 94, 130, 156, 163, 164, 165, 166, 167, 168, 169, 170, 178, 179, 190, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 404, 405, 407, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 427, 428, 429, 430, 432, 433, 434, 436, 437, 438, 439, 441, 443, 444, 445, 448, 449, 450, 452, 453, 454, 455, 456, 458, 459, 460, 461, 462, 463, 464, 465, 467], "000": [5, 6, 7, 8, 157, 158, 163, 172, 185, 398, 399], "0000": [312, 313, 315], "0001": [355, 359], "000e": [398, 399], "001": [350, 359, 362, 363, 365, 366, 369], "002": [364, 365], "003": [163, 169], "004": 365, "005": 280, "006": 350, "008": [85, 94], "00808": 85, "009": [163, 172], "01": [15, 208, 280, 347, 349, 358, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369], "01051757": 380, "011": [37, 85], "013": [57, 85], "016": [85, 113], "0205": 312, "0217": 312, "0227": 312, "024": [85, 100, 135], "026": [85, 124], "028": [85, 129], "0299": 312, "032": [69, 85, 120], "03545": 85, "044715": [206, 277], "0450": 312, "0451": 312, "046": [67, 85], "047": [85, 147], "04719755": 408, "0474259": 211, "048": [85, 137, 163, 169], "0480": 312, "04861": 85, "05": [239, 242, 243, 259, 260, 261, 280, 317, 318, 319, 321, 322, 323, 324, 338, 340, 342], "050": [163, 194], "0507": [210, 283], "06": [39, 77, 240, 320, 360, 368], "066": [51, 85], "069": [85, 107, 118], "07": [222, 233, 234, 297, 311, 312], "070": [85, 102], "0700": 312, "0706508": 287, "071": [85, 113], "072": [163, 176], "0721": 312, "073": [85, 143], "07722396": 286, "0794": 315, "08": [355, 362, 363, 364, 365, 366, 367], "0802": 315, "083": [81, 85], "08333333": 24, "085537": 415, "088": [85, 135], "08955": 85, "0900": [285, 312], "096": [33, 85, 151], "0986": [212, 285], "09861229": 416, "09883": 163, "0992": 312, "1": [0, 1, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 82, 85, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 130, 136, 137, 138, 139, 140, 144, 145, 150, 152, 155, 156, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 190, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 376, 378, 379, 380, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 403, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467], "10": [0, 1, 2, 3, 5, 6, 7, 15, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 54, 85, 86, 87, 88, 89, 104, 105, 106, 107, 108, 109, 110, 111, 145, 152, 153, 155, 160, 166, 199, 200, 203, 217, 218, 230, 232, 245, 289, 292, 293, 294, 301, 302, 307, 309, 318, 319, 322, 326, 330, 331, 333, 338, 339, 340, 341, 342, 348, 351, 353, 354, 355, 361, 375, 379, 382, 383, 386, 389, 392, 393, 401, 410, 427, 458, 460, 461, 463], "100": [6, 15, 29, 69, 70, 71, 72, 85, 146, 147, 148, 149, 349, 375, 467], "1000": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], "1000000": 359, "1001": [85, 113, 312], "1003": 312, "1007": 85, "10096": 85, "101": [85, 103, 104, 114, 121, 124, 125, 126, 127, 128, 131, 136, 137, 138], "10106": 85, "1014": 210, "102": [85, 118], "1024": [15, 33, 38, 158, 162, 304], "1025": [200, 203], "1026": [200, 203], "1027": [200, 203], "10499": 211, "1050": 284, "1054": 315, "1056": [200, 203], "10590": 85, "106": [163, 188], "107": [38, 85], "108": [70, 85], "1097": 85, "11": [85, 102, 116, 133, 145, 146, 230, 292, 293, 294, 301, 307, 318, 319, 322, 330, 331, 333, 389, 458, 459, 460, 461, 463], "110": [85, 108], "1105": 85, "1109": 85, "111": [63, 85], "1111": 311, "112": [85, 96, 109], "1134": 230, "114b": 461, "119": 230, "1192": [211, 212, 285], "12": [19, 24, 35, 36, 54, 55, 56, 57, 58, 64, 85, 87, 88, 157, 158, 162, 163, 166, 170, 178, 179, 181, 182, 183, 185, 186, 187, 188, 189, 190, 201, 230, 244, 247, 292, 293, 294, 301, 302, 307, 318, 319, 322, 328, 330, 331, 333, 389, 393, 394, 458, 460, 461, 463], "120": [69, 85, 86, 89, 96, 97], "12000": [157, 158], "121": [54, 55, 85], "12122": 163, "123": [270, 271, 272, 273, 274, 275, 381, 382], "124": [36, 85, 270, 271, 274, 275], "125": 331, "1250": 313, "1251": 85, "1258": 85, "126": [85, 121], "128": [15, 30, 33, 39, 44, 67, 83, 85, 112, 121, 122, 145, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 180, 203, 266, 456, 467], "1280": [36, 92], "128x128": [456, 467], "13": [74, 85, 145, 147, 160, 163, 230, 292, 293, 294, 307, 319, 330, 331, 333, 389, 458, 460, 461, 463], "1314": 85, "132": [85, 146], "1324": 85, "133": [85, 147], "136": [71, 85, 102], "138": [85, 148], "14": [32, 33, 34, 56, 85, 105, 163, 172, 292, 293, 294, 301, 302, 307, 319, 330, 331, 333, 389, 393, 458, 460, 461, 463], "14030": 163, "1409": 85, "143": [85, 149], "144": 97, "145": 230, "148": [43, 85], "149": [56, 85, 113], "15": [0, 50, 85, 230, 292, 293, 294, 307, 319, 330, 331, 333, 389, 393, 431, 458, 460, 461, 463, 467], "1513": 315, "152": [85, 101, 115, 132], "1536": [34, 35, 37], "155": 389, "1556": 85, "156": [78, 85], "157": [34, 85], "1588": [206, 277], "16": [54, 55, 85, 86, 89, 92, 96, 97, 124, 130, 145, 148, 161, 162, 164, 180, 184, 190, 191, 192, 193, 194, 195, 200, 201, 203, 215, 246, 247, 259, 260, 261, 265, 266, 289, 290, 292, 293, 294, 301, 302, 304, 307, 318, 319, 327, 328, 330, 331, 333, 338, 339, 340, 341, 342, 346, 389, 393, 425, 458, 460, 461, 463], "160": [85, 96, 114, 171], "16227766": 25, "16425": 315, "1643": 311, "166": 389, "167": 279, "169": [54, 56, 85], "16x16": 163, "17": [85, 107, 292, 293, 294, 307, 319, 331, 388, 458, 460, 461, 463], "170": 230, "1704": 85, "174": [31, 85], "17520119": 424, "177": [85, 126], "18": [85, 88, 116, 133, 141, 168, 175, 180, 181, 182, 184, 185, 186, 187, 188, 292, 293, 294, 301, 307, 319, 331, 392, 393, 458, 460, 461, 463], "1800": 312, "184": 96, "18877099": 286, "19": [65, 85, 145, 149, 160, 163, 217, 218, 230, 293, 294, 319, 387, 389], "192": [31, 32, 34, 35, 37, 39, 40, 77, 85, 87, 88, 115, 160, 161, 162, 163, 170, 181], "194": [85, 124], "196": [53, 85, 162, 163, 181, 187], "1966": [212, 284, 285], "197": [42, 49, 85], "198": [85, 96], "199": [163, 192], "1998": [85, 312], "1_53": 85, "1d": [216, 245, 248, 252, 259, 262, 317, 321, 326, 382, 389, 397, 431, 442, 443, 444, 445, 451], "1e": [19, 24, 39, 77, 171, 172, 173, 175, 176, 177, 222, 233, 234, 239, 240, 242, 243, 244, 259, 260, 261, 297, 311, 312, 317, 318, 319, 320, 321, 322, 323, 324, 338, 340, 342, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "1e6": 359, "1s4x24d": 110, "1st": [28, 152], "2": [1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 59, 60, 69, 70, 71, 72, 85, 87, 88, 89, 92, 96, 97, 103, 104, 105, 106, 107, 108, 109, 111, 116, 133, 141, 152, 155, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 196, 197, 198, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 344, 346, 349, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 376, 378, 379, 380, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467], "20": [0, 5, 6, 7, 8, 57, 85, 162, 199, 200, 203, 293, 294, 301, 319, 339, 340, 348, 352, 354, 356, 393, 415], "200": [85, 96, 106, 117], "2004": 85, "201": [57, 85, 106], "2011": 265, "2012": 85, "2014": 85, "2015": 85, "2016": 85, "2017": [85, 163, 338], "2018": [85, 265], "2019": 85, "2020": [85, 163], "2021": [85, 163], "2022": [85, 163], "2023": [85, 265], "2024": 85, "2039": 315, "204": 294, "2048": [36, 37, 38, 156, 338, 340, 342], "21": [71, 85, 119, 134, 161, 163, 201, 230, 293, 294, 319, 393], "210": [72, 85], "2102": 163, "2103": 163, "211": 389, "2111": 163, "213": [158, 163], "21841": [48, 53], "22": [83, 85, 151, 163, 174, 194, 230, 293, 294, 301, 319, 387, 389], "2201": 85, "221": [72, 85], "2231": [312, 315], "224": [28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 85, 94, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 122, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 152, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], "2247": [317, 318, 319, 321, 322, 323, 324], "224x224": [59, 74, 136, 137, 138, 139, 144], "226": 389, "22752314": 380, "2278": 85, "23": [104, 114, 121, 124, 125, 126, 127, 128, 131, 163, 169, 293, 294, 319], "2301": 85, "232": [85, 94, 138], "2324": [85, 283], "233": [47, 85], "234": [270, 271, 272, 273, 274, 275, 382], "235": [64, 85], "237": [158, 163], "238": [85, 97, 163, 175], "23840584": 286, "24": [54, 55, 92, 96, 97, 106, 110, 117, 178, 179, 181, 182, 183, 185, 186, 187, 188, 189, 230, 246, 293, 294, 301, 319, 327, 393], "240": [32, 47, 85, 96, 97, 149], "240x240": 59, "2424": [212, 285], "2447": 285, "246": [85, 87], "24d": 110, "25": [0, 85, 110, 120, 129, 141, 163, 173, 211, 223, 284, 294, 314, 319, 330, 331, 386, 401, 421, 433], "2500": [311, 313, 315], "2512": 276, "2547": 283, "256": [30, 33, 36, 38, 39, 112, 145, 164, 165, 166, 171], "258": [163, 182], "26": [85, 107, 201, 232, 294, 309, 319, 393], "260": 85, "260x260": 59, "26325684": 380, "264": [58, 85], "2689": [212, 284, 285], "26894142": 286, "269": [85, 108, 118], "27": [31, 85, 109, 139, 167, 176, 230, 292, 294, 319, 414], "272": [85, 128], "274": [85, 104, 144], "276": [270, 271, 274, 275], "277": [35, 85, 162, 163], "28": [35, 36, 44, 52, 81, 85, 87, 88, 135, 163, 183, 189, 230, 294, 393], "280": [51, 85], "286": [163, 166], "288": [85, 97, 106, 163, 183], "289": [48, 61, 85], "28x28": [7, 8, 87, 88], "29": [85, 144, 294], "299": [85, 150], "299r": 461, "299x299": [75, 76, 83, 84], "2_i": [321, 322, 323], "2c": 350, "2d": [217, 226, 246, 249, 253, 260, 263, 318, 322, 327, 389, 397, 400, 428, 431, 438, 442, 443, 445, 451, 463], "2e": 364, "2nd": [28, 152], "2x": 111, "2x2": [220, 458, 460], "3": [1, 2, 3, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 85, 87, 92, 94, 95, 96, 97, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 152, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 185, 188, 189, 190, 196, 197, 198, 200, 201, 202, 203, 206, 211, 212, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 235, 237, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 344, 346, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 411, 413, 414, 415, 416, 417, 418, 419, 420, 424, 425, 426, 427, 428, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465], "30": [66, 75, 85, 108, 111, 118, 200, 258, 294, 350, 354, 355, 463], "300": 85, "300x300": 59, "301": [35, 85], "302": [70, 85], "3026": 315, "304": [163, 193], "3072": [38, 190], "308": [163, 187], "30823025": 286, "31": [161, 163, 230, 294, 389], "310": [398, 399], "31622777": 25, "319": 85, "32": [15, 30, 54, 56, 57, 85, 89, 98, 103, 104, 105, 106, 107, 108, 109, 124, 125, 126, 127, 129, 171, 180, 184, 200, 203, 230, 232, 246, 259, 260, 261, 265, 266, 293, 294, 304, 309, 327, 346, 371, 387, 388, 393], "320": [85, 107, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177], "321": [270, 271, 274, 275], "326": [85, 131, 163, 193], "32x16d": 85, "32x32": [5, 6, 86, 89], "32x32d": 85, "32x4d": [85, 136, 139, 144], "32x8d": [85, 137], "33": [58, 85, 200, 203, 232, 294, 309], "330": [32, 85], "3333": 244, "33333333": 24, "336": [37, 42, 85, 127, 146], "337": [58, 85], "34": [85, 119, 134, 142, 200, 203, 230, 294, 389, 393], "342": [270, 271, 274, 275], "344": [65, 85], "345": [270, 271, 272, 273, 274, 275, 382], "349": [163, 189], "35": [84, 85, 200, 203, 294], "350": [53, 85], "352": [74, 85], "354": [163, 183], "355": [68, 85], "3567": [311, 315], "357": [85, 148, 153], "359": [163, 167], "36": [106, 115, 117, 132, 294], "362": [163, 173], "3679": [205, 210, 276], "368": [85, 141, 143], "36th": 85, "37": [85, 101, 292], "370": [63, 85], "372": 230, "375": 314, "3750": 313, "37754067": 286, "378": [85, 88], "380": 85, "380x380": 59, "38344152": 378, "384": [31, 32, 34, 35, 37, 39, 40, 77, 160, 161, 163], "38629436": 416, "389056": 415, "38th": 85, "392": [75, 85, 162, 163], "393": [66, 74, 85], "3935": 276, "3965": 85, "3977": 85, "3d": [218, 227, 247, 250, 254, 261, 264, 294, 319, 323, 328], "3x3": [85, 383], "4": [0, 1, 2, 3, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 54, 59, 77, 78, 85, 86, 87, 88, 94, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 134, 135, 142, 143, 155, 161, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 201, 203, 215, 216, 217, 218, 220, 222, 223, 225, 226, 227, 230, 232, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 262, 263, 264, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 307, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 344, 355, 359, 362, 366, 367, 369, 373, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 403, 405, 411, 416, 417, 418, 419, 420, 421, 423, 425, 426, 427, 428, 429, 431, 432, 433, 434, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 452, 453, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465], "40": [76, 85, 92, 96, 97, 111, 177, 354], "400": [45, 85, 89, 163, 184, 192], "4044": 311, "4076": 312, "4096": [28, 152], "40d": 111, "41": [163, 168], "41421356": 17, "415": 163, "416": [85, 118, 136, 163, 195], "41666667": 24, "417": [85, 111], "41808962": 380, "419974": 213, "4199743": 287, "42": [37, 38, 185, 230, 265, 383], "421": [270, 271, 274, 275], "423": [270, 271, 272, 273], "424": 163, "42718872": 25, "4278": 85, "4284": 85, "4286": [244, 311], "43": [67, 85, 387, 389], "431": [80, 85], "432": [66, 85], "4323": 276, "4375": 313, "43758721": 378, "44": [85, 114, 126], "440": [71, 85], "4472": 244, "4472136": 19, "448": [68, 85], "4495": [319, 323], "45": [85, 142, 163, 175, 230, 258, 463], "4510": 85, "4520": 85, "4545": 296, "455": [85, 128], "456": 85, "456x456": 59, "457": [163, 170], "46": [43, 85], "464": [41, 85, 111], "468": [85, 125], "4700": 85, "4708": 85, "47112767": 410, "472": [85, 125, 158, 163], "476": [163, 181], "48": [54, 57, 58, 85, 97, 104, 108, 118, 136, 181, 185, 186, 187, 232, 309], "480": [56, 85, 96, 160, 163], "481": [85, 96], "483": [85, 109], "49": [80, 85, 131, 163, 182, 188], "492": [163, 168], "496": [52, 85], "4979": 276, "4s2x40d": [85, 111], "4x": 110, "4x4": 465, "5": [1, 2, 12, 13, 16, 21, 22, 23, 24, 28, 31, 36, 39, 47, 59, 61, 75, 85, 86, 87, 88, 89, 92, 96, 97, 140, 141, 142, 143, 152, 155, 163, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 195, 197, 198, 199, 200, 201, 203, 206, 211, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 235, 237, 239, 242, 243, 245, 248, 249, 255, 257, 259, 260, 261, 266, 268, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 326, 329, 330, 331, 333, 334, 338, 340, 342, 348, 350, 352, 354, 355, 356, 368, 373, 376, 379, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 399, 400, 401, 403, 405, 407, 408, 409, 418, 419, 420, 421, 422, 427, 428, 431, 432, 433, 434, 439, 442, 446, 447, 448, 452, 453, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467], "50": [5, 6, 85, 103, 109, 110, 111, 112, 120, 122, 129, 135, 139, 143, 144, 232, 309, 349, 368, 387, 389, 401, 461, 462, 464, 467], "5000": [156, 311, 313, 315], "504": [85, 95], "50_1s4x24d": 85, "510": 85, "5108": 315, "512": [30, 33, 36, 38, 39, 84, 85, 99, 112, 116, 142, 156, 157, 163, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 289, 338, 339, 340, 341, 342], "516": [33, 85], "519": 85, "520": [78, 85], "52359878": 409, "528": 85, "528x528": 59, "53": [32, 85, 230, 388], "530": [85, 125], "532": [163, 181], "536": [64, 85], "537": [85, 97], "543": [270, 271, 272, 273, 274, 275, 382], "54308063": 413, "544": [80, 85, 148, 157, 163], "545": 394, "5455": 296, "549": [85, 114], "55": [70, 85, 163, 167], "553": [163, 174], "556": [163, 176], "557": [85, 120], "558": [37, 85], "559": [85, 139], "560": [62, 85, 105], "563": [270, 271, 274, 275], "564": [163, 185], "567": [163, 191], "5672": 85, "568": [72, 85], "5683": 85, "569": [85, 137], "57": [85, 143, 230], "57079633": [408, 409], "5714": 244, "5720": 85, "5730": 85, "57366333": 381, "576": 97, "584": [157, 163], "5849625": 417, "586": [76, 85], "587g": 461, "589": [44, 85], "590": [85, 98], "591": [41, 85], "592": [85, 133], "5987": 85, "5995": 85, "5998": 163, "5th": [28, 152], "6": [16, 24, 28, 30, 32, 33, 34, 37, 39, 54, 55, 56, 57, 58, 59, 77, 85, 86, 89, 103, 109, 112, 119, 120, 122, 129, 134, 135, 142, 143, 152, 156, 160, 161, 164, 165, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 185, 186, 187, 188, 189, 201, 202, 216, 217, 218, 220, 222, 227, 230, 232, 240, 244, 245, 255, 271, 275, 278, 282, 292, 293, 294, 297, 299, 300, 301, 302, 307, 309, 311, 317, 318, 319, 320, 321, 322, 323, 324, 326, 330, 331, 333, 334, 338, 339, 341, 360, 368, 373, 382, 384, 385, 386, 387, 388, 389, 392, 393, 394, 395, 396, 397, 398, 399, 403, 405, 418, 419, 420, 427, 428, 431, 432, 433, 434, 436, 439, 445, 446, 447, 448, 452, 453, 455, 457, 458, 459, 460, 461, 463, 465], "60": [5, 6, 85, 115, 166], "600": [59, 85], "6008": 163, "600x600": 59, "6052": 315, "606": [163, 182], "6065": 276, "608": [36, 85, 153], "61": [29, 85, 89], "6105": 85, "611": [85, 105], "6114": 85, "6124": [317, 318, 319, 321, 322, 323, 324], "617": [69, 85], "62": [85, 153, 157, 163, 176, 230], "622": [161, 163], "623": [50, 85], "62686041": 424, "630": 85, "632": [35, 85, 163, 192, 193], "6321": [205, 276], "63245553": 25, "635": [52, 85], "636": [61, 85], "64": [30, 39, 54, 58, 85, 92, 96, 103, 104, 105, 106, 107, 108, 109, 112, 117, 128, 140, 145, 160, 161, 164, 165, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 200, 203, 230, 265, 266, 371], "640": [48, 65, 85], "645": 85, "64589411": 378, "647": [85, 141], "648": [163, 168], "64x4d": [85, 138], "654": [270, 271, 272, 273, 274, 275, 382], "656": [34, 85, 163, 191], "657": [163, 186, 270, 271, 274, 275], "6590": [212, 285], "66": [68, 85, 132], "660": [48, 85], "664": [163, 194], "6652": 285, "666": [163, 171], "66666667": 24, "6667": [244, 311], "667": [85, 149], "668": [163, 186], "6682": 311, "669": [85, 117], "67": 389, "672": [85, 96, 119], "67326": 283, "6733": 210, "676": [85, 110], "678": [270, 271, 272, 273, 274, 275], "688": [38, 85], "68811989": 380, "689": [85, 116], "69314718": 416, "696": [85, 121, 161, 163, 175], "7": [10, 13, 23, 38, 55, 62, 85, 145, 163, 165, 171, 172, 173, 174, 175, 176, 177, 178, 179, 201, 216, 217, 218, 220, 222, 227, 230, 232, 233, 234, 245, 255, 266, 277, 282, 283, 284, 287, 292, 293, 294, 297, 301, 302, 307, 309, 311, 312, 314, 318, 319, 322, 323, 326, 330, 331, 333, 334, 376, 379, 382, 385, 387, 388, 389, 393, 395, 397, 401, 415, 419, 427, 428, 431, 432, 433, 448, 451, 452, 453, 457, 458, 459, 460, 461, 463, 465], "70": [7, 8, 85, 106], "7001": 312, "704": [58, 85, 126], "706": [85, 89, 163, 166], "70710678": [19, 423], "708": [45, 85], "7132": 85, "7141": 85, "7147": 315, "715": [85, 99], "717": [46, 85, 163, 195], "7182818": 415, "72": [92, 96, 97], "726791": 85, "731": [163, 188], "7311": [212, 284, 285], "739": [83, 85], "74": 389, "745": [163, 187], "748": [79, 85], "75": [232, 309, 314, 359, 401], "755": [85, 101], "7581": 210, "760": [85, 104, 144, 163, 171], "76159416": [286, 430], "7616": [213, 287], "76219569": 413, "7635": 283, "767": [42, 85], "768": [31, 32, 34, 35, 37, 39, 40, 77, 162, 163, 166, 180, 190], "770": [36, 85], "772": 394, "774": [85, 100], "778": [85, 133], "78": [85, 122], "78357324": 380, "784": 15, "78539816": 410, "790": [34, 85], "791": [85, 127], "79172504": 378, "792": [85, 124], "795": [62, 85], "796": [163, 186], "797": [85, 119], "7x7": 152, "8": [22, 26, 37, 38, 54, 59, 108, 112, 115, 118, 124, 125, 126, 127, 128, 129, 132, 141, 142, 143, 155, 156, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 184, 200, 201, 203, 215, 216, 217, 218, 220, 222, 227, 230, 232, 233, 244, 245, 246, 247, 255, 259, 260, 261, 265, 277, 278, 283, 284, 287, 289, 290, 292, 293, 294, 297, 299, 300, 301, 302, 307, 309, 311, 314, 318, 319, 322, 323, 326, 327, 328, 330, 331, 333, 334, 338, 339, 340, 341, 342, 355, 362, 363, 364, 365, 366, 367, 376, 379, 386, 387, 388, 389, 393, 394, 396, 397, 414, 419, 427, 428, 431, 432, 433, 448, 452, 453, 457, 458, 459, 460, 461, 463, 465], "80": [5, 6, 7, 8, 96], "800": [46, 50, 85], "8005": 312, "808": [85, 115], "817": [75, 85], "818": 85, "8182": 296, "82": [33, 85, 163, 177, 230], "821": [85, 132], "83": [85, 128], "832": [81, 85], "833": 85, "84": [86, 88, 89], "840": [29, 49, 79, 85], "8413": [206, 277], "842": [163, 189], "847": [84, 85], "848": [85, 132, 147, 163, 167], "856": [55, 85, 163, 173], "85772238": 286, "8584": 283, "86": [79, 85, 163, 191], "862": [85, 151], "863": [85, 146], "864": [85, 98, 117], "868": [85, 134], "869": [163, 185], "87": [163, 180, 184], "872": [85, 95, 110, 131], "876": [270, 271, 274, 275, 382], "88": [41, 46, 85, 97, 127, 138], "8808": [212, 284, 285], "882": [163, 177], "884": [43, 85], "886": [85, 121], "887": 394, "891773": 378, "8944": 244, "89442719": 19, "895": [85, 142], "896": [85, 139], "9": [0, 1, 3, 8, 26, 39, 40, 51, 63, 77, 85, 99, 217, 220, 222, 230, 232, 245, 255, 292, 293, 294, 297, 301, 307, 309, 311, 318, 319, 322, 326, 330, 331, 333, 348, 351, 359, 360, 362, 363, 364, 365, 366, 367, 369, 376, 379, 382, 385, 389, 393, 394, 395, 397, 425, 426, 452, 453, 457, 458, 459, 460, 461, 463], "904": [85, 129], "90709145": 381, "9091": 296, "9120": 315, "9163": 315, "920": [163, 166], "922": [163, 184], "928": [57, 85], "929": [85, 108], "93": [85, 137], "94": 113, "944": [31, 85], "9486833": 25, "949e": [398, 399], "95": 353, "9526": 211, "9545": 277, "955": [85, 136], "956": [49, 85], "958": [85, 134], "96": [31, 32, 39, 40, 77, 97, 178, 179], "960": 96, "96366276": 378, "9640": 287, "96402758": 430, "968": [53, 85], "973": [85, 122], "978": [38, 55, 85], "984": [76, 85, 138, 163, 177], "99": 367, "9957": 315, "997": [160, 163], "99734545": 381, "999": [0, 362, 363, 364, 365, 366], "A": [1, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 39, 60, 82, 85, 86, 90, 93, 103, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 145, 146, 147, 148, 149, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 197, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 230, 232, 233, 234, 238, 239, 240, 242, 243, 244, 257, 266, 290, 296, 297, 299, 300, 301, 302, 304, 311, 312, 315, 317, 318, 319, 320, 321, 322, 323, 324, 336, 338, 339, 340, 341, 342, 346, 347, 348, 353, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 374, 376, 378, 379, 380, 382, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 463], "As": 381, "At": [15, 344, 355], "Be": [0, 10], "By": [0, 2, 3, 15, 93, 100, 113, 114, 115, 116, 117, 118, 119, 120, 198, 258, 346, 366, 373, 376, 378, 379, 380, 382, 457, 467], "For": [2, 3, 4, 13, 17, 18, 19, 21, 22, 23, 24, 26, 98, 99, 100, 102, 203, 205, 206, 208, 209, 210, 211, 213, 230, 232, 244, 257, 270, 271, 274, 275, 283, 292, 293, 294, 307, 309, 317, 318, 319, 321, 322, 323, 346, 358, 381, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 415, 416, 417, 418, 419, 420, 423, 425, 427, 428, 431, 432, 433, 443, 445, 449, 451, 454, 467], "If": [0, 1, 2, 5, 6, 7, 8, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 112, 155, 197, 199, 200, 201, 202, 205, 206, 208, 209, 210, 211, 213, 215, 216, 217, 218, 223, 227, 230, 232, 239, 242, 246, 247, 255, 257, 258, 259, 260, 261, 262, 263, 264, 266, 270, 271, 289, 290, 292, 293, 294, 298, 307, 309, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 347, 349, 350, 351, 352, 353, 354, 355, 356, 362, 363, 367, 368, 371, 375, 376, 378, 379, 380, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 454, 455, 457, 461, 462, 464, 465], "In": [3, 24, 216, 217, 218, 312, 315, 372, 373, 374, 456, 467], "It": [1, 2, 3, 7, 10, 15, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 52, 55, 56, 57, 58, 73, 74, 75, 85, 86, 87, 88, 89, 91, 92, 94, 102, 112, 113, 114, 115, 116, 117, 118, 119, 120, 133, 145, 151, 163, 168, 175, 177, 179, 186, 188, 197, 199, 200, 201, 202, 203, 223, 227, 230, 255, 257, 258, 259, 260, 261, 265, 277, 278, 281, 282, 287, 289, 290, 298, 304, 307, 308, 311, 312, 313, 314, 315, 326, 327, 328, 336, 338, 339, 341, 344, 346, 347, 358, 359, 365, 367, 368, 369, 371, 373, 381, 384, 385, 386, 387, 390, 391, 392, 394, 395, 401, 418, 420, 437, 439, 442, 443, 444, 445, 446, 448, 449, 450, 451, 455, 456, 457], "Its": [26, 383], "Near": 24, "No": [220, 223], "Not": 308, "One": [87, 467], "Such": 384, "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467], "There": 446, "These": [4, 10, 16, 19, 22, 25, 27, 30, 69, 70, 71, 72, 98, 99, 100, 101, 102, 121, 122, 141, 142, 143, 151, 154, 166, 296, 299, 300, 301, 302, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 368, 383, 467], "To": [3, 15, 85, 163, 348, 358, 376, 380, 383, 398, 399, 442, 467], "With": [3, 85, 172, 176, 220, 223, 457, 467], "_": [12, 13, 14, 22, 199, 200, 202, 203, 205, 206, 208, 209, 210, 211, 213, 232, 255, 257, 304, 318, 319, 321, 322, 323, 329, 330, 331, 332, 333, 334, 336, 359, 360, 362, 363, 364, 365, 367, 369, 387, 388, 389, 393, 431, 432, 452, 453, 458, 459, 460, 462, 463, 464], "_1": [19, 199, 200, 201, 202, 203, 230, 307, 393, 437, 439, 455], "_2": [19, 199, 200, 201, 202, 203, 230, 307, 393, 437, 439, 455], "__call__": [1, 197], "__getitem__": [0, 2, 3, 5, 6, 7, 8], "__init__": [0, 1, 2, 3, 15, 28, 30, 39, 40, 59, 60, 73, 77, 82, 86, 90, 91, 92, 93, 103, 145, 152, 155, 164, 165, 196, 197, 198, 199, 200, 201, 202, 223, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 296, 297, 298, 299, 300, 304, 307, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 346, 347, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 375, 384, 456, 457], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5, 6, 7, 8], "__repr__": 347, "__setattr__": 197, "_activ": 212, "_arraylik": [397, 399, 403, 405], "_arraylikeint": 443, "_arrayorscalar": [196, 198, 376, 384, 434], "_backward_op": 15, "_base_activ": 86, "_base_dtyp": [398, 401], "_block": 297, "_builtinnumer": 384, "_c": 459, "_decai": 365, "_devicetyp": [376, 378, 379, 380, 382, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405], "_dtype_bit": 371, "_einopspattern": [12, 13, 14, 304], "_fanmod": [270, 271], "_grad_en": [372, 374], "_i": [19, 23, 212, 223, 230, 285, 298, 314, 317, 324, 329, 332, 384, 387, 388, 390, 391, 393, 394, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 437, 439, 445, 449, 454, 455], "_in": [270, 271, 274, 275], "_interpolatetyp": 344, "_j": [212, 285, 329, 332, 393, 419, 427, 432, 433], "_k": 450, "_layer": [339, 341], "_left": 257, "_make_lay": 145, "_mlphead": 77, "_mlx_dtype": 371, "_mlxarrai": 384, "_modul": 197, "_n": [19, 199, 200, 201, 202, 203, 437, 439, 455], "_np_dtype": 371, "_out": [270, 271, 274, 275, 445, 451], "_p": [23, 244, 255, 336], "_pad": 443, "_paddingstr": [259, 260, 261, 262, 263, 264, 292, 293, 294], "_paramet": 197, "_reducestr": 13, "_reductiontyp": [233, 234, 235, 237, 238, 311, 312, 313, 314, 315], "_resnestbottleneck": 103, "_right": 257, "_scalar": [215, 268, 272, 273, 274, 275, 290, 396, 401, 411, 441], "_scaled_channel": 30, "_scaled_num_block": 30, "_seresnetbottleneck": [131, 132, 135], "_seresnetmodul": [133, 134], "_shapelik": [155, 243, 324, 379, 402, 404, 435, 446, 449, 454], "_size": [245, 246, 247, 297], "_skresnetmodul": [141, 142, 143], "_slope": 280, "_statedict": 347, "_t": [366, 367], "_tensor": [289, 338, 340, 342], "_tensorop": 384, "_u": 24, "_v": 24, "_valu": [411, 443], "_weight": 336, "_width": 443, "a_": [30, 340], "a_1": [289, 448], "a_2": 448, "a_h": 289, "a_i": [289, 390, 391, 394, 448], "a_k": 448, "aaai": 85, "ab": [355, 406], "abc": [2, 347], "abil": [85, 467], "about": [10, 155], "abov": [372, 374, 381, 397, 400, 452], "abs_pos_emb": [178, 179], "absolut": [22, 23, 30, 178, 179, 235, 355, 364, 407], "abstract": [2, 3, 166, 168, 346, 347, 358, 359, 367, 369, 371], "abstractmethod": 347, "abund": [48, 101], "acceler": [85, 283, 317, 318, 319, 350, 359, 365, 367, 369, 384], "accept": [308, 378], "access": [0, 2, 3, 4, 5, 6, 7, 8, 124, 125, 126, 127, 128, 129, 196, 198, 199, 200, 201, 202, 203, 446], "accord": [12, 14, 223, 257, 292, 293, 294, 304, 307, 309, 312, 315, 360, 361, 362, 363, 364, 365, 366, 432, 435], "accordingli": [18, 428], "account": [22, 24, 25, 286], "accumul": [359, 360, 361, 384, 385, 386, 390, 391, 392, 395, 435], "accur": 132, "accuraci": [46, 48, 49, 50, 51, 69, 70, 71, 72, 79, 81, 85, 90, 91, 92, 98, 99, 100, 101, 102, 135, 191, 192, 193], "achiev": [12, 85, 123, 124, 125, 126, 127, 128, 129, 172, 216, 217, 218, 245, 304, 326, 327, 328, 365, 462, 464], "across": [0, 5, 6, 10, 12, 13, 15, 30, 39, 52, 85, 94, 166, 171, 172, 173, 175, 176, 177, 179, 187, 196, 200, 203, 240, 243, 245, 246, 247, 274, 275, 317, 318, 319, 321, 322, 323, 324, 326, 327, 328, 371, 376, 378, 379, 380, 381, 382, 383, 398, 399, 419, 433], "act": [15, 363, 447], "act_lay": 159, "activ": [28, 39, 85, 86, 96, 97, 113, 117, 118, 130, 145, 152, 159, 199, 203, 205, 206, 208, 209, 210, 211, 212, 213, 221, 259, 260, 261, 265, 266, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 296, 297, 299, 300, 301, 302, 311, 312, 315, 317, 318, 319, 324, 338, 340, 342, 418, 420], "actual": [198, 311, 312, 314, 315, 460], "acycl": 15, "ad": [14, 54, 92, 112, 163, 197, 199, 200, 201, 202, 203, 216, 217, 218, 222, 230, 232, 233, 234, 239, 240, 242, 243, 248, 249, 250, 252, 253, 254, 259, 260, 261, 289, 292, 293, 294, 297, 311, 312, 317, 318, 319, 320, 321, 322, 323, 324, 329, 330, 331, 332, 333, 334, 338, 340, 342, 360, 361, 362, 363, 364, 365, 366, 367, 375, 454, 467], "adadelta": 370, "adagrad": [360, 370], "adam": [85, 363, 364, 365, 366, 370], "adamax": 370, "adamw": 370, "adapt": [10, 28, 73, 85, 86, 98, 101, 103, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152, 245, 246, 247, 265, 266, 326, 327, 328, 351, 355, 360, 361, 362, 365, 366, 367, 368], "adaptive_avg_pool1d": [229, 251, 326], "adaptive_avg_pool2d": [229, 251, 327], "adaptive_avg_pool3d": [229, 251, 328], "adaptiveavgpool1d": [306, 335], "adaptiveavgpool2d": [28, 130, 145, 152, 306, 335], "adaptiveavgpool3d": [306, 335], "add": [4, 15, 197, 199, 200, 203, 230, 232, 289, 292, 293, 294, 307, 309, 324, 347, 359, 362, 367, 369, 373, 406, 443, 454], "add_bias_kv": 289, "add_modul": [197, 203], "add_param_group": 347, "add_zero_attn": 289, "addit": [4, 22, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 200, 203, 230, 232, 239, 242, 307, 309, 317, 318, 319, 321, 322, 323, 359, 365, 373, 383, 385, 450], "addition": 365, "address": [312, 315, 362, 363, 366], "adjust": [83, 90, 92, 94, 102, 136, 137, 138, 139, 140, 144, 245, 246, 247, 266, 296, 297, 317, 318, 319, 321, 322, 323, 324, 326, 327, 328, 348, 349, 352, 353, 354, 355, 356, 358, 362, 366, 367, 368, 439, 455], "adopt": 384, "advanc": [3, 15, 24, 60, 77, 85, 91, 101, 117, 163, 167, 169, 184, 186, 200, 203, 216, 217, 218, 245, 246, 247, 326, 327, 328, 346, 359], "advantag": [84, 374], "affect": [372, 444, 449, 456], "affin": [259, 260, 261, 317, 318, 319, 321, 322, 323, 324, 463], "after": [10, 14, 15, 22, 28, 96, 97, 152, 178, 179, 198, 199, 200, 201, 202, 203, 227, 265, 266, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 293, 294, 296, 299, 300, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 321, 324, 329, 330, 331, 332, 333, 334, 338, 340, 342, 348, 355, 363, 374, 384, 385, 386, 390, 391, 392, 394, 395, 401, 443, 448, 457], "afterward": 374, "aggreg": [10, 85, 266, 393, 445, 451], "agnost": 371, "aim": 4, "al": [74, 85, 163, 338], "alex": [5, 6, 85], "alexei": 163, "alexnet": 152, "algebra": [16, 400], "algorithm": [7, 22, 24, 25, 347, 358, 383], "align": [10, 26, 101, 257, 344, 388, 389, 428], "align_corn": [257, 344], "all": [0, 3, 4, 15, 25, 59, 85, 163, 197, 199, 200, 201, 202, 203, 217, 218, 244, 245, 246, 247, 249, 250, 253, 254, 257, 260, 261, 266, 280, 281, 289, 294, 326, 327, 328, 330, 331, 334, 338, 346, 347, 352, 358, 359, 362, 367, 368, 369, 384, 394, 418, 419, 420, 427, 431, 433, 437, 438, 439, 445, 449, 450, 451, 452, 453, 455, 458, 459, 467], "allevi": [85, 205], "alloc": [15, 398, 399], "allow": [0, 1, 3, 4, 10, 12, 24, 25, 84, 85, 86, 93, 96, 97, 99, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 123, 136, 137, 138, 139, 140, 144, 165, 166, 178, 182, 183, 184, 185, 186, 188, 198, 199, 200, 201, 202, 203, 205, 208, 209, 212, 218, 220, 258, 266, 276, 277, 280, 283, 284, 285, 287, 290, 292, 293, 294, 304, 336, 344, 346, 348, 349, 351, 353, 355, 360, 361, 373, 396, 402, 404, 405, 428, 432, 434, 442, 456, 457, 467], "along": [10, 13, 14, 212, 244, 257, 266, 285, 388, 389, 393, 418, 419, 420, 427, 431, 433, 435, 436, 437, 439, 442, 445, 447, 448, 450, 451, 454, 455, 462, 464], "alongsid": 196, "alpha": [205, 208, 210, 221, 276, 283, 296, 359, 367], "alpha_dropout": [228, 229, 296], "alphadropout": [303, 306], "alphadropoutmodel": 296, "alreadi": 375, "also": [155, 205, 206, 208, 209, 210, 211, 213, 230, 232, 257, 365, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 399, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 435, 437, 439, 443, 444, 445, 446, 449, 450, 451, 454, 455], "alter": [203, 446, 447], "altern": [1, 15, 277, 360, 389], "alwai": [10, 198, 348, 441, 444, 461, 462, 464], "among": [75, 266], "amount": [216, 217, 218, 248, 249, 250, 252, 253, 254, 262, 263, 264, 365], "ampl": 98, "amsgrad": [362, 363], "an": [0, 1, 3, 10, 12, 13, 14, 15, 19, 21, 22, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 91, 94, 95, 96, 97, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 151, 152, 153, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 199, 200, 201, 202, 203, 206, 216, 217, 218, 220, 221, 224, 225, 226, 227, 230, 246, 247, 255, 257, 258, 262, 263, 264, 266, 274, 275, 276, 282, 284, 289, 292, 293, 294, 296, 298, 299, 300, 301, 302, 304, 307, 309, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 338, 339, 341, 342, 347, 348, 353, 358, 359, 362, 365, 367, 371, 374, 375, 384, 389, 397, 400, 411, 419, 427, 433, 435, 437, 445, 448, 451, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467], "analog": [445, 451], "analysi": [4, 265, 292, 293, 294, 323, 329, 331, 332, 334], "andreetto": 85, "andrew": 85, "angl": [258, 463], "ani": [0, 1, 2, 3, 12, 15, 22, 24, 29, 112, 140, 151, 153, 196, 197, 198, 199, 201, 202, 205, 206, 208, 209, 210, 211, 213, 221, 224, 230, 232, 239, 242, 284, 304, 324, 346, 347, 352, 372, 374, 375, 381, 384, 396, 397, 398, 400, 402, 403, 404, 405, 418, 420, 432, 434, 437, 438, 439, 443, 445, 450, 451, 454, 455, 456, 467], "anneal": 349, "anoth": [93, 202, 395, 403, 405, 457, 467], "api": [4, 15, 326, 327, 328, 467], "appear": 347, "append": [200, 202, 203, 289], "appl": [15, 371, 384], "appli": [2, 4, 5, 6, 7, 8, 10, 12, 13, 22, 28, 30, 39, 59, 60, 77, 85, 123, 140, 150, 152, 156, 163, 178, 179, 190, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 240, 244, 259, 260, 261, 265, 266, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 307, 309, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 338, 339, 340, 341, 342, 352, 353, 359, 360, 361, 363, 364, 365, 366, 389, 443, 445, 452, 453, 456, 459, 461, 462, 463, 464, 465, 467], "applic": [4, 10, 13, 15, 24, 41, 42, 43, 46, 48, 53, 54, 80, 83, 84, 85, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 195, 216, 242, 292, 293, 294, 307, 309, 383, 396, 404, 443, 448, 452, 453, 465], "approach": [3, 10, 12, 14, 82, 159, 203, 304, 349, 363], "appropri": [24, 85, 92, 96, 97, 197, 201, 203, 223, 292, 293, 294, 296, 299, 300, 312, 330, 331, 371, 372, 374], "approx": 210, "approxim": [24, 206, 277, 278, 279, 330, 333], "ar": [1, 2, 3, 4, 13, 14, 15, 18, 19, 21, 22, 24, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 69, 70, 71, 72, 73, 74, 75, 85, 98, 100, 101, 154, 160, 161, 162, 165, 166, 167, 168, 169, 170, 174, 196, 197, 198, 199, 200, 201, 202, 203, 212, 216, 217, 218, 220, 223, 230, 232, 240, 246, 247, 255, 257, 262, 263, 264, 265, 266, 270, 271, 273, 274, 275, 278, 285, 289, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 307, 309, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 342, 344, 346, 350, 354, 359, 362, 363, 365, 366, 367, 368, 369, 372, 374, 375, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 401, 407, 411, 415, 418, 419, 420, 421, 422, 427, 428, 431, 432, 435, 436, 437, 442, 445, 446, 447, 448, 451, 452, 453, 456, 457, 458, 460, 461, 465, 467], "arang": 406, "arbitrari": [200, 308, 398, 399, 411, 416, 417, 419, 423, 425, 427, 432, 433], "arcco": 406, "arch": 375, "architectur": [10, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 170, 172, 179, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 199, 200, 201, 202, 203, 206, 265, 278, 279, 281, 286, 289, 290, 304, 307, 308, 338, 346, 375], "arcsin": 406, "arctan": 406, "area": [257, 344], "arg": [197, 308, 375, 398], "argument": [3, 4, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 86, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 197, 203, 308, 378, 398, 432], "around": [19, 258, 287], "arr": [437, 439, 450, 455], "arrai": [15, 196, 198, 373, 376, 384, 389, 397, 399, 403, 405, 434, 444, 445, 457, 467], "art": [48, 85, 192], "artifici": 85, "arxiv": [85, 163], "asgd": 370, "ashish": 163, "aspect": 465, "assign": [15, 197, 199, 201, 203, 257, 312, 315, 441], "assist": [73, 74, 75], "associ": [201, 202], "assum": [0, 1, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 347, 358, 372], "astyp": 384, "attempt": [199, 203], "attend": [215, 290, 339, 341, 342], "attent": [30, 85, 103, 110, 111, 140, 154, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 202, 230, 265, 289, 290, 338, 339, 340, 341, 342], "attn": [215, 290], "attn_drop_r": [164, 165, 178, 179], "attn_mask": [215, 290], "atto": [45, 78, 85], "attribut": [15, 197, 348], "audio": 292, "augment": [3, 4, 133, 258, 383, 445, 451, 456, 460, 461, 462, 463, 464, 467], "auto_pars": 371, "autodiff": 384, "autoencod": 85, "autograd": [15, 346], "automat": [4, 198, 199, 200, 201, 202, 346, 376, 378, 379, 380, 382, 384, 398, 399, 405, 442, 457], "autoregress": [215, 290], "auxiliari": [73, 74, 75, 196], "avail": [4, 5, 6, 7, 8], "avd": 103, "averag": [13, 28, 87, 88, 89, 103, 112, 123, 130, 140, 145, 152, 196, 245, 246, 247, 248, 249, 250, 257, 265, 266, 314, 326, 327, 328, 329, 330, 331, 359, 360, 362, 367, 419], "avg_down": 112, "avg_pool": [329, 330, 331], "avg_pool1d": [229, 251], "avg_pool2d": [229, 251], "avg_pool3d": [229, 251], "avgpool": [28, 130, 145, 152, 266], "avgpool1d": [306, 335], "avgpool1dmodel": 329, "avgpool2d": [306, 335], "avgpool2dmodel": 330, "avgpool3d": [306, 335], "avgpool3dmodel": 331, "avoid": [2, 3, 12, 13, 24, 60, 174, 201, 244, 304, 350, 374, 401], "awar": 187, "ax": [10, 12, 13, 14, 16, 304, 373, 418, 419, 420, 427, 428, 432, 433, 435, 445, 449, 451], "axi": [13, 23, 212, 244, 285, 388, 389, 418, 419, 420, 427, 433, 436, 437, 438, 439, 442, 443, 445, 447, 448, 449, 450, 451, 454, 455, 462, 464], "axis1": 428, "axis2": 428, "b": [12, 13, 14, 16, 26, 30, 85, 163, 191, 230, 232, 273, 292, 293, 294, 304, 307, 309, 373, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 435, 437, 439, 442, 450, 455, 461], "b0": [59, 61, 85, 163, 171], "b1": [59, 62, 85, 163, 172, 173], "b2": [59, 63, 85, 163, 173, 174], "b3": [59, 64, 85, 163, 175], "b4": [59, 65, 85, 163, 176], "b5": [59, 66, 85, 163, 177], "b6": [59, 67, 85], "b7": [59, 68, 85], "b_": 30, "b_1": [340, 342], "b_2": [340, 342], "b_i": [390, 391, 394], "b_k": 289, "b_v": 289, "back": [15, 257, 289, 330, 331, 375, 388, 393, 436, 445, 451], "backbon": [141, 142, 143, 163, 175], "backend": 384, "backpropag": [10, 15, 18, 19, 21, 22, 24, 25, 27, 85, 196, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 230, 232, 257, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 292, 293, 294, 296, 297, 299, 300, 301, 302, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 329, 330, 331, 332, 333, 334, 336, 346, 374, 380, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 415, 418, 420, 434, 435, 436, 441, 443, 445, 447, 451, 452, 453, 457], "backward": [15, 196, 198, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 384, 401, 436, 441, 447, 457], "balanc": [31, 32, 33, 34, 35, 36, 37, 38, 43, 46, 47, 50, 60, 69, 70, 71, 72, 81, 85, 92, 93, 99, 100, 102, 124, 125, 126, 127, 128, 129, 160, 166, 169, 191, 194, 313], "bar": 359, "base": [3, 12, 13, 15, 16, 21, 22, 25, 26, 30, 41, 44, 46, 54, 73, 74, 75, 76, 79, 82, 83, 84, 85, 86, 93, 99, 100, 102, 103, 110, 111, 123, 124, 125, 126, 127, 128, 129, 140, 145, 150, 156, 157, 163, 180, 184, 191, 195, 197, 199, 200, 201, 202, 215, 220, 230, 245, 246, 247, 266, 290, 296, 304, 312, 313, 326, 327, 328, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 363, 367, 368, 369, 371, 376, 385, 386, 390, 391, 392, 394, 395, 405, 415, 416, 417, 418, 420, 432, 442, 443, 448, 460, 461, 462, 463, 464], "base_dtyp": 371, "base_lr": 350, "base_width": [103, 104, 105, 106, 107, 108, 109, 121, 122, 123, 140], "baselin": 163, "basic": [28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 150, 152, 155, 215, 216, 217, 218, 222, 223, 245, 246, 247, 255, 259, 260, 261, 262, 263, 264, 265, 270, 271, 274, 275, 290, 297, 326, 327, 328, 336, 401, 435, 458, 459, 460, 461, 462, 463, 464, 465], "basicblock": [112, 116, 119], "batch": [1, 2, 3, 14, 15, 16, 22, 25, 27, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 76, 77, 83, 84, 130, 136, 137, 138, 139, 144, 215, 216, 217, 218, 220, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 257, 258, 259, 260, 261, 289, 290, 292, 293, 294, 307, 309, 311, 312, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 330, 331, 332, 333, 334, 338, 339, 340, 341, 342, 366, 389, 428, 458, 459, 460, 461, 463, 465], "batch_norm": [229, 241, 317, 318, 319], "batch_norm1": 203, "batch_norm2": 203, "batch_siz": [1, 2, 3, 150, 266], "batch_tensor": 428, "batchnorm": [259, 260, 261], "batchnorm1d": [259, 306, 325], "batchnorm1dmodel": 317, "batchnorm2d": [203, 260, 306, 325], "batchnorm2dmodel": 318, "batchnorm3d": [261, 306, 325], "batchnorm3dmodel": 319, "bceloss": [306, 316], "becaus": [2, 379], "becom": [23, 197, 360, 368], "been": [286, 441], "befor": [10, 14, 22, 30, 130, 155, 198, 215, 290, 338, 340, 342, 349, 355, 359, 365, 374, 381, 443, 447, 459, 467], "begin": [1, 23, 205, 208, 209, 210, 223, 276, 278, 279, 280, 281, 283, 298, 313, 314, 315, 329, 330, 331, 332, 333, 334, 366, 368, 373, 383, 390, 391, 393, 407, 411, 418, 420, 422, 441, 443, 452, 453], "behav": [298, 313, 431], "behavior": [10, 15, 85, 200, 203, 215, 244, 290, 352, 372, 383, 389, 399, 467], "being": [202, 258, 296, 299, 300, 301, 302, 366, 372, 374, 384, 436, 437, 439, 455], "belong": 0, "below": [25, 31, 32, 33, 34, 35, 36, 37, 38, 74, 75, 76, 83, 84, 86, 87, 88, 89, 389, 397, 400, 453], "benchmark": [5, 6, 7, 8, 15, 101], "benefici": 203, "benefit": [102, 205, 346, 365], "bernoulli": [296, 299, 300, 301, 302, 377], "best": [101, 270, 271, 274, 275], "beta": [240, 317, 318, 319, 320, 321, 322, 323, 324, 362, 363, 364, 365, 366], "beta1": [362, 363, 364, 365, 366], "beta2": [362, 363, 364, 365, 366], "beta_1": [362, 363, 364, 365, 366], "beta_2": [362, 363, 364, 365, 366], "beta_c": [240, 320], "better": [21, 85, 100, 152, 173, 174, 179, 187, 206, 270, 271, 274, 275, 286, 297, 321, 322, 323, 346, 355, 356, 363, 365, 367, 459], "between": [43, 46, 50, 69, 70, 71, 72, 81, 85, 93, 99, 100, 102, 124, 125, 126, 127, 128, 129, 169, 191, 194, 197, 216, 217, 218, 220, 230, 235, 259, 260, 261, 262, 263, 264, 266, 282, 292, 293, 294, 296, 299, 300, 301, 302, 307, 311, 312, 313, 314, 315, 350, 355, 356, 359, 367, 368, 369, 383, 385, 386, 389, 392, 395, 396, 401, 433, 461, 462, 464, 465], "beyond": [10, 200, 355], "bia": [30, 164, 165, 171, 172, 173, 175, 176, 177, 178, 179, 216, 217, 218, 230, 232, 239, 242, 243, 259, 260, 261, 262, 263, 264, 289, 292, 293, 294, 307, 309, 317, 318, 319, 321, 322, 323, 324, 338, 340, 342, 362, 363, 364, 365, 366], "bias": [159, 163, 292, 293, 294, 309, 324, 346], "bias1": 201, "bias2": 201, "big": [163, 262, 263, 264], "bilinear": [229, 231, 257, 306, 310, 344], "bilinearmodel": 307, "binari": [211, 233, 284, 296, 299, 300, 301, 302, 311], "binary_cross_entropi": [229, 236], "bit": 371, "black": 15, "blend": 102, "block": [30, 31, 32, 33, 34, 35, 36, 37, 38, 54, 55, 56, 57, 58, 59, 60, 77, 82, 85, 91, 92, 93, 95, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 197, 220, 222, 223, 259, 260, 261, 266, 292, 293, 294, 297, 374], "block1": [155, 346], "block2": [155, 346], "block_arg": [112, 130], "block_cfg": 60, "block_config": 54, "block_siz": [222, 297], "block_typ": 30, "blue": 461, "bmatrix": 393, "bn": [259, 260, 261], "bn_affin": [259, 260, 261], "bool": [1, 5, 6, 7, 8, 23, 27, 59, 73, 74, 75, 103, 112, 155, 164, 165, 171, 172, 173, 175, 176, 177, 178, 179, 197, 198, 215, 221, 223, 224, 225, 226, 227, 239, 242, 257, 259, 260, 261, 262, 263, 264, 289, 290, 292, 293, 294, 298, 307, 309, 317, 318, 319, 321, 322, 323, 324, 338, 339, 340, 341, 342, 344, 349, 350, 351, 352, 353, 354, 355, 356, 362, 363, 367, 371, 372, 376, 378, 379, 380, 382, 384, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 418, 419, 420, 427, 433, 434, 457], "boolean": 441, "boost": 98, "both": [30, 93, 159, 165, 166, 178, 180, 181, 182, 183, 216, 232, 246, 248, 252, 259, 277, 286, 292, 293, 327, 329, 330, 332, 333, 342, 344, 371, 387, 388, 389, 393, 397, 442, 448, 465], "bottleneck": [54, 85, 91, 92, 95, 112, 113, 114, 115, 117, 118, 120, 121, 122, 123, 265], "bottleneck_cfg": 92, "bottom": 257, "bound": [271, 273, 275, 350, 368, 382, 384], "box": [4, 15], "branch": [73, 74, 75, 85, 266], "break": [10, 346], "brief": 467, "bright": 467, "bring": [10, 304], "broadcast": [14, 15, 301, 302, 419, 427, 433, 446, 454], "broadcast_to": 440, "budget": [50, 175], "buffer": [15, 359, 365, 367, 369], "build": [15, 40, 60, 84, 85, 92, 93, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 140, 141, 142, 143, 156, 189, 197, 200, 203, 346, 467], "built": [3, 15, 113, 117, 118, 203, 346, 371], "burg": 8, "c": [5, 6, 8, 12, 30, 85, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 220, 222, 225, 226, 227, 234, 238, 239, 240, 242, 245, 246, 247, 248, 249, 250, 252, 253, 254, 257, 258, 265, 301, 302, 304, 312, 315, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 350, 373, 439, 455, 459], "c_": [292, 293, 294], "c_in": [216, 217, 218, 259, 260, 261], "c_out": [216, 217, 218], "calcul": [0, 1, 16, 198, 344, 360, 361, 364, 365, 366, 374, 379], "calculu": [17, 24], "call": [1, 15, 197, 348, 372, 375, 385, 386, 389, 390, 391, 392, 394, 395], "callabl": [171, 172, 173, 175, 176, 177, 338, 340, 342, 347, 350, 353, 375, 384, 456], "can": [0, 2, 3, 4, 12, 13, 15, 17, 19, 21, 22, 24, 25, 27, 59, 85, 92, 98, 99, 101, 102, 112, 121, 122, 136, 137, 138, 139, 150, 151, 155, 196, 198, 199, 200, 201, 202, 203, 208, 216, 217, 218, 223, 258, 266, 277, 280, 282, 287, 292, 293, 294, 321, 322, 323, 330, 331, 332, 333, 334, 336, 339, 346, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 372, 373, 374, 382, 383, 384, 389, 398, 399, 400, 402, 404, 405, 419, 427, 428, 433, 435, 439, 442, 443, 445, 446, 451, 454, 455, 456, 457, 460, 462, 463, 464, 467], "cannot": [18, 19, 21, 22, 25, 26, 27, 376, 436], "cap": 282, "capabl": [10, 30, 52, 110, 111, 163, 396, 397, 400, 402, 403, 404, 405], "capac": [41, 42, 43, 49, 53, 85, 90, 98, 121, 122, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144, 158, 163, 167, 172, 176, 177, 186, 192], "captur": [15, 30, 85, 140, 159, 163, 166, 167, 168, 178, 180, 181, 182, 183, 184, 185, 188, 220, 292, 293, 294, 307], "cardin": [85, 103, 104, 105, 106, 107, 108, 109, 110, 111, 123, 124, 125, 126, 127, 128, 129, 140], "care": 374, "carefulli": 348, "cartesian": 442, "case": [3, 23, 86, 92, 94, 205, 208, 209, 210, 223, 276, 278, 279, 280, 281, 283, 298, 313, 314, 315, 329, 330, 331, 332, 333, 334, 346, 354, 361, 366, 368, 373, 390, 391, 407, 411, 418, 420, 422, 441, 443, 452, 453, 467], "categor": [255, 336], "categori": [7, 113, 114, 115, 116, 117, 118, 119, 120, 336, 371], "caus": [3, 24, 348, 359, 367, 369], "causal": [215, 290], "cautiou": [0, 10], "cdot": [15, 17, 18, 21, 22, 23, 26, 205, 206, 208, 210, 211, 215, 216, 217, 218, 230, 232, 240, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 265, 274, 275, 277, 278, 279, 284, 286, 290, 296, 307, 309, 311, 312, 313, 315, 317, 318, 319, 320, 321, 322, 323, 324, 336, 349, 350, 351, 353, 354, 356, 360, 361, 362, 363, 364, 365, 366, 368, 387, 388, 389, 392, 394], "center": [258, 287, 367, 458, 467], "centercrop": [466, 467], "certain": [18, 206, 215, 230, 286, 290, 307, 342, 355, 362, 363, 372, 418, 420], "cfg": [93, 96, 97], "chain": [15, 21, 22, 203, 456, 467], "challeng": [7, 85, 166], "cham": 85, "chanc": [461, 462, 464], "chang": [10, 235, 313, 354, 368, 373, 374, 375, 384, 444, 446, 454, 461, 467], "chanlumerico": 15, "channel": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 54, 59, 85, 86, 87, 88, 89, 90, 92, 94, 96, 97, 103, 110, 111, 112, 123, 124, 125, 126, 127, 128, 129, 134, 136, 137, 138, 139, 144, 145, 150, 159, 160, 161, 162, 164, 165, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 216, 217, 218, 220, 225, 226, 227, 239, 240, 242, 245, 246, 247, 248, 249, 250, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 292, 293, 294, 301, 302, 317, 318, 319, 320, 321, 322, 323, 326, 329, 330, 331, 332, 333, 334, 459, 461, 465], "character": [121, 122], "check": [15, 372, 384, 458, 460], "checkpoint": 358, "chen": 85, "choic": [100, 102, 442], "choleski": 20, "chollet": 85, "choos": 85, "chosen": [296, 297, 348], "christian": 85, "christoph": 8, "chu": 85, "chunk": 440, "cifar": [5, 6], "cifar10": 9, "cifar100": 9, "cifar100_train": 6, "cifar10_train": 5, "clariti": [12, 13, 14], "class": [3, 4, 15, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 155, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 212, 223, 234, 238, 346, 358, 375, 467], "classic": 89, "classif": [4, 5, 6, 7, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 211, 212, 233, 234, 238, 284, 285, 311, 312, 315], "classifi": [28, 73, 74, 75, 86, 87, 88, 89, 112, 123, 140, 145, 150, 152], "cleaner": [1, 374, 389], "clear": [198, 398, 399, 401], "clf_in_featur": 86, "clf_layer": 86, "clip": [258, 278, 282, 368, 406], "clockwis": 258, "close": [21, 24, 283, 311, 367], "closer": 276, "closur": [347, 358], "cloth": 7, "cnn": [30, 85, 163], "co": [85, 349, 406, 423], "coatnet": [31, 32, 33, 34, 35, 36, 37, 38], "coatnet_0": 85, "coatnet_1": 85, "coatnet_2": 85, "coatnet_3": 85, "coatnet_4": 85, "coatnet_5": 85, "coatnet_6": 85, "coatnet_7": 85, "code": [10, 15, 22, 199, 201, 203, 372, 374, 383], "coeffici": [26, 59, 257, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369], "col": 220, "collaps": 10, "collect": [4, 16, 154, 199, 200, 202, 203, 358], "color": [461, 467], "colorjitt": 467, "column": [18, 19, 21, 25, 26, 27, 155, 220, 400, 439, 442], "com": [7, 8, 15], "combin": [1, 3, 12, 30, 76, 82, 83, 85, 102, 144, 163, 167, 200, 203, 205, 206, 259, 260, 261, 265, 266, 277, 297, 304, 312, 346, 365, 366, 419, 427, 433, 437, 467], "combined_dataset": [0, 1], "common": [180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 220, 258, 358, 371, 467], "commonli": [90, 91, 92, 94, 95, 96, 97, 100, 102, 206, 211, 212, 213, 216, 218, 223, 230, 237, 239, 242, 255, 258, 265, 274, 275, 278, 279, 282, 285, 290, 294, 311, 314, 315, 329, 330, 331, 332, 333, 334, 336, 338, 373, 402, 449, 457, 458, 459, 460, 462, 463, 464, 467], "compact": [44, 45, 47, 52, 81, 100, 171, 172], "compar": [30, 43, 44, 85, 121, 122, 152, 162, 165, 173, 383, 450], "compat": [4, 10, 15, 16, 140, 304, 308, 324, 346, 373, 383, 401, 435, 457, 467], "competit": [45, 51, 52], "complet": [156, 338, 339, 341], "complex": [2, 3, 10, 15, 19, 30, 42, 48, 53, 84, 101, 112, 115, 118, 119, 132, 134, 155, 158, 165, 166, 167, 168, 169, 173, 174, 175, 185, 196, 198, 199, 200, 203, 209, 215, 258, 268, 272, 273, 274, 275, 281, 290, 332, 334, 346, 353, 358, 362, 363, 364, 365, 366, 368, 371, 376, 382, 384, 396, 397, 398, 399, 400, 401, 402, 404, 411, 434, 441, 457, 467], "complex64": 371, "compon": [24, 73, 74, 75, 76, 82, 83, 84, 156, 197, 200, 358, 384, 467], "compos": [5, 6, 7, 8, 150, 292, 293, 294, 329, 330, 331, 332, 333, 334, 346, 467], "compound": 60, "comprehens": 3, "compris": [121, 122], "compromis": [99, 102], "comput": [10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 43, 44, 45, 47, 48, 50, 51, 78, 81, 85, 90, 92, 93, 96, 97, 98, 99, 100, 101, 102, 110, 111, 112, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 144, 159, 163, 165, 166, 169, 170, 174, 178, 192, 193, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 220, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 244, 245, 246, 247, 257, 259, 260, 261, 262, 263, 264, 265, 266, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 296, 297, 299, 300, 301, 302, 307, 309, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 329, 330, 331, 332, 333, 334, 338, 339, 340, 341, 342, 346, 347, 349, 350, 351, 352, 353, 354, 356, 358, 359, 367, 372, 373, 374, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 442, 443, 445, 451, 457, 467], "computation": [3, 12, 24, 113, 278, 279, 304], "compute_grad": 436, "compute_loss": [358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "concat": 289, "concaten": [0, 216, 217, 218, 289, 439, 440, 450, 455], "concept": [24, 85, 91, 154], "concis": [10, 12, 14], "condit": [17, 18, 21], "confer": [85, 163], "config": 145, "configur": [15, 29, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 153, 158, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 202, 259, 260, 261, 290, 371], "confirm": 15, "conjunct": [220, 315], "connect": [28, 39, 54, 55, 56, 57, 58, 59, 60, 76, 82, 83, 84, 85, 86, 87, 88, 89, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 145, 150, 152, 232, 265, 266, 292, 293, 294, 309, 340, 342], "consecut": 145, "consid": [3, 21, 24, 54, 98, 99, 100, 102, 203, 270, 271, 274, 275, 346, 368, 371, 372, 398, 399, 452, 453, 467], "consider": 24, "consist": [2, 4, 7, 13, 28, 87, 88, 89, 112, 196, 245, 246, 247, 266, 289, 326, 327, 328, 338, 340, 342, 381, 383, 443, 458, 465, 467], "consistent_tensor": 383, "consol": 155, "constant": [233, 234, 239, 240, 242, 243, 244, 269, 283, 311, 312, 317, 318, 319, 320, 321, 322, 323, 324, 338, 340, 342, 356, 360, 361, 362, 363, 364, 365, 366, 367, 441, 443], "constant_pad": 443, "constrain": [45, 47, 50, 100], "constraint": [1, 12, 30, 90, 92, 99, 174, 266, 304], "construct": [15, 55, 56, 57, 58, 77, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 141, 142, 143, 146, 147, 148, 149, 156, 200, 346, 397, 445, 451, 452, 453], "constructor": [15, 31, 32, 33, 34, 35, 36, 37, 38, 55, 56, 57, 58, 69, 70, 71, 72, 94, 95, 96, 97, 104, 105, 106, 107, 108, 109, 110, 111, 121, 122, 136, 137, 138, 139, 144, 146, 147, 148, 149], "consumpt": 102, "contain": [1, 5, 6, 7, 8, 18, 19, 24, 25, 26, 27, 82, 86, 112, 123, 124, 125, 126, 127, 128, 129, 130, 140, 145, 155, 197, 199, 200, 201, 202, 203, 212, 215, 220, 230, 232, 233, 234, 238, 255, 257, 311, 312, 315, 347, 385, 386, 387, 388, 390, 391, 392, 393, 395, 396, 399, 401, 407, 408, 409, 410, 412, 413, 414, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 433, 436, 438, 442, 448], "content": 258, "context": [85, 184, 186, 187, 372, 374, 384], "contextmanag": 374, "contextu": [160, 161, 162, 166, 180, 181, 182, 183], "contigu": [222, 297, 444], "continu": [280, 351, 356, 380], "contract": 12, "contrast": [156, 321, 322, 323, 467], "contribut": [222, 257, 296, 299, 300, 301, 302, 329, 332, 333, 334, 359, 365, 431], "control": [10, 14, 30, 39, 123, 165, 166, 266, 276, 313, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 383, 384, 457, 467], "conv": [77, 82, 85, 130, 259, 260, 261, 318, 319], "conv1": [87, 88, 89, 203, 292, 293, 294, 329, 330, 331, 332, 333, 334], "conv1d": [219, 229, 259, 262, 295, 306, 329, 332], "conv1dmodel": 292, "conv2": [87, 88, 89, 203, 292, 293, 294], "conv2d": [200, 203, 219, 229, 260, 263, 295, 304, 306, 318, 330, 333, 346], "conv2dmodel": 293, "conv3d": [219, 229, 261, 264, 295, 306, 319, 331, 334], "conv3dmodel": 294, "conv_bia": [259, 260, 261], "conv_config": 145, "conv_lay": [86, 200], "convblock": 346, "convbnrelu1d": 267, "convbnrelu2d": 267, "convbnrelu3d": 267, "conveni": [4, 29, 153], "convent": 389, "converg": [24, 287, 348, 349, 350, 352, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 459], "convers": [312, 315, 461, 467], "convert": [5, 6, 7, 8, 145, 196, 198, 212, 255, 285, 442, 456, 457, 461, 467], "convnet": 154, "convnetwork": 200, "convnext": [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53], "convnext_bas": 85, "convnext_larg": 85, "convnext_smal": 85, "convnext_tini": 85, "convnext_v2": [45, 46, 47, 48, 49, 50, 51, 52], "convnext_v2_atto": 85, "convnext_v2_bas": 85, "convnext_v2_femto": 85, "convnext_v2_hug": 85, "convnext_v2_larg": 85, "convnext_v2_nano": 85, "convnext_v2_pico": 85, "convnext_v2_tini": 85, "convnext_xlarg": 85, "convolut": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 54, 59, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 82, 85, 86, 87, 88, 89, 90, 92, 96, 97, 98, 99, 100, 101, 102, 103, 110, 111, 112, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 140, 144, 145, 150, 152, 153, 154, 159, 160, 161, 162, 200, 216, 217, 218, 220, 259, 260, 261, 262, 263, 264, 265, 266, 292, 293, 294, 330, 331, 333, 334, 428, 443], "convolv": [216, 217, 218, 292, 293, 294], "cooldown": 355, "coordin": 442, "copi": [10, 435], "core": [0, 1, 2, 3, 197, 346, 347, 371, 384, 467], "corinna": 8, "corner": [257, 344, 458, 460], "correct": [199, 312, 315, 362, 363, 364, 365, 366, 441, 452, 453, 457], "correctli": [24, 197, 199, 200, 201, 202, 203, 312, 315, 383, 435, 436], "correspond": [0, 1, 2, 5, 6, 7, 8, 19, 93, 94, 96, 97, 121, 122, 141, 142, 143, 180, 181, 182, 183, 189, 199, 201, 203, 205, 206, 208, 209, 210, 211, 212, 213, 216, 217, 218, 220, 230, 232, 255, 257, 278, 281, 285, 307, 309, 317, 318, 319, 321, 322, 323, 330, 331, 336, 359, 367, 369, 371, 376, 387, 388, 390, 391, 394, 415, 416, 417, 423, 425, 435, 436, 439, 443, 445, 447, 451, 455], "cort": 8, "cosh": [406, 424, 430], "cosin": [349, 408, 412, 413, 423], "cosineannealinglr": 357, "cost": [85, 90, 92, 93, 99, 100, 102, 123, 159, 174, 262, 263, 264], "could": 197, "count": [85, 93, 155, 163, 171, 172, 173, 175, 176, 177, 349, 354, 437], "counterclockwis": [258, 463], "cover": [16, 216, 217, 218], "coverag": [245, 246, 247], "cpu": [15, 196, 198, 371, 376, 378, 379, 380, 382, 384, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405], "craft": 15, "creat": [2, 3, 15, 28, 29, 30, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 83, 84, 87, 88, 89, 92, 94, 95, 96, 97, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 157, 158, 196, 197, 200, 203, 266, 282, 289, 338, 339, 340, 341, 342, 346, 373, 375, 383, 396, 400, 401, 402, 403, 404, 405, 435, 442, 450, 456, 467], "creation": [69, 70, 71, 72, 200, 203, 467], "criterion": [311, 312, 313, 314, 315], "critic": [24, 100, 176, 358, 383], "crop": [458, 460, 467], "cross": [178, 233, 234, 311, 312, 338, 339, 340], "cross_entropi": [229, 236], "crossentropyloss": [306, 316], "crucial": [10, 348], "cube": 406, "cumul": [206, 277], "current": [197, 349, 350, 351, 352, 353, 354, 355, 356, 359, 362, 368, 372], "custom": [4, 15, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 83, 84, 86, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 151, 152, 153, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 258, 259, 260, 261, 276, 280, 338, 346, 350, 353, 383, 400, 401, 448], "custom_config": 145, "custom_decod": 338, "custom_encod": 338, "custom_lenet": 86, "customiz": [171, 467], "custommodul": 196, "customnetwork": 199, "customparametermodel": [201, 202], "cut": 101, "cvf": [85, 163], "cvpr": 85, "cvt": [160, 161, 162], "cvt_13": 163, "cvt_21": 163, "cvt_w24": 163, "cvtspec": 159, "cycl": 350, "cycle_momentum": 350, "cyclic": [349, 350, 447], "cycliclr": 357, "d": [30, 85, 215, 218, 227, 247, 250, 254, 261, 290, 319, 323, 324, 328, 331, 334, 373, 397, 463], "d_": [218, 247, 250, 254, 289, 294, 328, 331, 334, 338, 339, 340, 341, 342], "d_1": [12, 13, 14, 304, 324], "d_2": [12, 13, 14, 304, 324], "d_h": [289, 340, 342], "d_k": 30, "d_model": [156, 157, 158, 190, 338, 339, 340, 341, 342], "d_n": [12, 13, 14, 304, 324], "d_out": [218, 250, 254], "dag": 15, "dai": 85, "dampen": [359, 367, 369], "data": [4, 5, 6, 7, 8, 10, 15, 22, 85, 154, 163, 185, 196, 198, 202, 213, 216, 218, 220, 226, 227, 232, 255, 258, 259, 260, 261, 266, 281, 287, 292, 293, 294, 309, 323, 329, 331, 334, 341, 347, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 373, 383, 384, 385, 386, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 428, 434, 435, 443, 444, 445, 446, 448, 449, 451, 456, 457, 460, 461, 462, 463, 464, 467], "data_dtyp": 371, "databas": 8, "dataload": [2, 3], "dataset": [3, 5, 6, 7, 8, 42, 69, 70, 71, 72, 87, 88, 89, 90, 93, 98, 112, 113, 114, 115, 116, 117, 118, 119, 120, 166, 177, 258, 361, 374, 456, 458, 467], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 393, "debug": [15, 155, 203, 372, 381, 467], "decai": [297, 348, 349, 351, 353, 354, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369], "declar": [12, 13, 14, 304], "decod": [156, 338, 339, 340], "decoder_lay": [339, 340], "decoderlay": 339, "decompos": [17, 25, 27], "decomposit": [16, 17, 21, 24, 25, 27], "decor": [124, 125, 126, 127, 128, 129, 375], "decoupl": [85, 360, 361, 363, 364, 365, 366], "decreas": [350, 355, 362, 363, 368], "deep": [1, 3, 4, 10, 13, 15, 79, 80, 82, 85, 112, 113, 114, 115, 117, 118, 124, 125, 126, 127, 128, 129, 131, 132, 135, 154, 163, 166, 239, 277, 283, 304, 346, 348, 383, 401, 448, 452, 453, 456, 457, 467], "deepen": 175, "deeper": [74, 76, 84, 85, 112, 119, 161, 165, 168, 173, 176, 185, 186, 283], "def": [0, 1, 2, 3, 10, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 296, 297, 298, 299, 300, 304, 307, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 338, 339, 340, 341, 342, 346, 347, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 374, 375, 376, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457], "default": [1, 5, 6, 7, 8, 13, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 208, 212, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 270, 271, 272, 273, 274, 275, 276, 280, 285, 289, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 307, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 347, 349, 350, 351, 352, 353, 354, 355, 356, 358, 365, 372, 376, 378, 379, 380, 382, 384, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 418, 419, 420, 427, 432, 433, 434, 436, 437, 439, 442, 443, 445, 447, 448, 450, 452, 453, 455, 457, 461, 462, 464], "defer": 15, "defin": [1, 3, 4, 10, 13, 15, 30, 39, 54, 60, 73, 74, 75, 76, 82, 83, 84, 86, 92, 102, 103, 112, 130, 141, 142, 143, 145, 159, 199, 200, 201, 202, 203, 223, 277, 279, 282, 286, 311, 312, 313, 314, 315, 329, 344, 346, 348, 350, 353, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 379, 380, 394, 399, 411, 432, 456, 467], "definit": [15, 17, 259, 260, 261, 467], "degre": [258, 463, 467], "delai": 359, "deliv": [15, 100, 101, 177], "delta": [12, 212, 235, 285, 304, 313, 360], "delta_": [12, 212, 285, 304], "demand": [101, 175, 176], "demonstr": [16, 136, 137, 138, 139, 144, 154, 346], "demystifi": 15, "denomin": [239, 240, 242, 243, 259, 260, 261, 317, 318, 319, 320, 321, 322, 323, 324, 338, 340, 342, 360, 361, 362, 363, 364, 365, 366, 367, 386], "denot": [22, 110, 111, 284, 289, 292, 293, 294, 296, 299, 300, 301, 302, 432], "dens": [54, 55, 56, 57, 58, 85, 163, 178, 180, 181, 182, 183, 223, 255, 336, 361], "densenet": [55, 56, 57, 58, 265], "densenet_121": 85, "densenet_169": 85, "densenet_201": 85, "densenet_264": 85, "densiti": [206, 277], "depend": [15, 22, 23, 30, 92, 154, 163, 166, 167, 178, 180, 181, 182, 183, 184, 185, 202, 233, 234, 235, 237, 238, 257, 292, 387, 397, 418, 420, 445, 451, 460, 461, 465], "deploy": [102, 171, 174], "depth": [30, 39, 40, 41, 42, 43, 44, 53, 59, 60, 77, 85, 98, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 200, 218, 223, 227, 247, 250, 254, 294, 298, 319, 323, 328, 331, 334], "depth_coef": 59, "depthseparableconv1d": 267, "depthseparableconv2d": 267, "depthseparableconv3d": 267, "depthwis": [30, 39, 77, 85, 90, 150, 159, 160, 161, 162, 163, 216, 217, 218, 262, 263, 264], "depthwise_separ": [262, 263, 264], "der": 85, "deriv": [15, 24, 25, 212, 245, 246, 247, 277, 285, 287, 292, 293, 294, 307, 309, 375], "descend": 27, "descent": [359, 369], "describ": [10, 18, 19], "descript": [154, 467], "deseri": 196, "design": [3, 4, 13, 16, 28, 29, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 52, 69, 70, 71, 72, 74, 75, 76, 78, 81, 85, 87, 88, 89, 92, 93, 98, 99, 100, 101, 102, 113, 114, 115, 116, 117, 118, 119, 120, 131, 134, 150, 153, 154, 160, 161, 162, 163, 164, 166, 169, 176, 178, 185, 186, 192, 198, 200, 201, 202, 203, 205, 210, 283, 296, 346, 467], "desir": [10, 14, 151, 196, 245, 246, 247, 297, 326, 327, 328, 344, 348, 432, 434], "despit": 244, "destin": 197, "det": [16, 20], "det_a": 18, "detail": [155, 159, 166, 185, 358, 383, 389], "detect": [85, 163, 177, 184, 185, 186, 187, 188, 355], "determin": [0, 16, 17, 18, 86, 121, 122, 245, 246, 247, 270, 271, 274, 275, 292, 293, 294, 326, 327, 328, 330, 331, 333, 334, 350, 367, 372, 376, 378, 379, 380, 382, 398, 399, 448, 458, 460], "determinist": 258, "develop": [10, 15, 93, 346, 383, 467], "deviat": [270, 272, 274, 456, 459, 467], "devic": [91, 92, 98, 99, 196, 198, 371, 376, 378, 379, 380, 382, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405], "diag": [24, 406], "diagon": [24, 25, 27, 397, 400, 431, 452, 453], "diagonaliz": 19, "dict": [10, 12, 13, 14, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 86, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 122, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 141, 142, 143, 144, 151, 153, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 199, 201, 304, 308, 347, 352], "dictionari": [86, 93, 100, 197, 198, 199, 201, 203, 347, 352], "differ": [0, 10, 13, 22, 73, 77, 86, 92, 93, 99, 100, 136, 137, 138, 139, 144, 160, 161, 162, 164, 166, 167, 168, 169, 170, 179, 188, 200, 203, 212, 230, 257, 266, 285, 307, 314, 348, 355, 358, 371, 373, 381, 383, 395, 405, 433, 449, 467], "differenti": [17, 26, 255, 277, 346, 376, 378, 379, 380, 382, 384, 396, 398, 399, 402, 404], "difficult": 168, "digit": [7, 8, 85, 89], "dilat": [216, 217, 218, 259, 260, 261, 262, 263, 264, 292, 293, 294], "dilation_height": 220, "dilation_width": 220, "dim": [39, 40, 77, 215, 244, 290, 312, 315, 447], "dim_feedforward": [156, 338, 340, 342], "dimens": [10, 12, 13, 14, 18, 19, 21, 22, 25, 26, 27, 28, 39, 41, 42, 43, 44, 53, 85, 112, 123, 140, 145, 152, 156, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 190, 198, 212, 215, 230, 232, 239, 240, 242, 243, 244, 246, 247, 257, 265, 266, 285, 289, 290, 292, 293, 294, 297, 304, 317, 318, 319, 321, 322, 323, 324, 327, 328, 330, 331, 332, 333, 334, 338, 340, 341, 342, 344, 373, 378, 382, 384, 388, 398, 418, 419, 420, 427, 428, 431, 432, 433, 435, 436, 437, 439, 443, 445, 447, 449, 450, 451, 454, 455, 458, 460, 465], "dimension": [10, 22, 24, 25, 27, 77, 216, 217, 218, 248, 249, 250, 252, 253, 254, 266, 289, 292, 293, 294, 300, 301, 302, 317, 318, 319, 321, 322, 323, 329, 330, 331, 332, 333, 334, 338, 340, 342, 373, 388, 389, 393, 397, 415, 419, 427, 428, 431, 433, 438, 444, 445, 449, 451, 452, 453], "diminish": [348, 361], "direct": [15, 19, 311, 312, 313, 314, 315, 359, 367, 368, 369, 447], "directli": [69, 70, 71, 72, 85, 199, 200, 201, 202, 257, 304, 344, 360, 361, 363, 364, 365, 366, 381, 383, 434, 467], "directori": [3, 4, 5, 6, 7, 8], "disabl": [223, 297, 298, 372, 374], "discontinu": 422, "discrep": [311, 312, 315], "discret": [376, 379, 383], "disk": 3, "displai": [29, 153, 155], "distinct": [93, 156], "distribut": [185, 206, 212, 222, 257, 270, 271, 272, 273, 274, 275, 277, 285, 292, 293, 294, 296, 297, 299, 300, 301, 302, 307, 309, 312, 315, 329, 330, 331, 376, 378, 379, 380, 382, 383, 419, 427, 431, 433, 450, 459, 461, 462, 463, 464], "div": 406, "divers": [46, 85, 258, 462, 464, 467], "diversifi": 467, "divid": [1, 24, 85, 163, 178, 179, 190, 191, 192, 193, 194, 195, 200, 203, 212, 216, 217, 218, 285, 311, 312, 313, 314, 315, 386, 436, 448, 459], "divis": [24, 216, 217, 218, 244, 289, 296, 299, 300, 301, 302, 338, 340, 342, 360, 361, 362, 363, 364, 365, 366, 367, 386, 448], "dl": 15, "do": [24, 26, 196, 199, 200, 201, 202, 221, 224, 225, 226, 346, 348, 366, 372, 405, 431, 443], "do_ev": 155, "doc": 154, "document": [4, 85, 358, 383], "doe": [22, 23, 24, 25, 27, 155, 156, 196, 199, 200, 201, 202, 203, 244, 275, 355, 362, 363, 368, 372, 374, 376, 378, 379, 380, 381, 382, 396, 397, 398, 399, 400, 402, 403, 404, 405, 435, 441, 446, 447], "doesn": 374, "doi": 85, "domain": [4, 174], "don": 374, "dosovitskii": 163, "dot": [12, 13, 14, 19, 22, 164, 165, 199, 200, 201, 202, 203, 215, 289, 290, 304, 324, 332, 333, 334, 388, 393, 406, 437, 439, 450, 455], "down": [3, 346, 465], "download": [4, 5, 6, 7, 8], "downsampl": 103, "drawback": 205, "drawn": [378, 379, 380, 382, 383, 463], "drop": [39, 40, 77, 222, 223, 296, 297, 298, 299, 300, 301, 302], "drop_block": [228, 229], "drop_path": [39, 40, 228, 229, 298], "drop_path_r": [60, 77, 164, 165, 178, 179], "drop_prob": 298, "drop_rat": [77, 164, 165, 178, 179], "dropblock": [222, 303, 306], "dropout": [28, 59, 60, 69, 70, 71, 72, 75, 77, 85, 145, 152, 156, 164, 165, 178, 179, 190, 206, 215, 221, 225, 226, 227, 289, 290, 296, 297, 300, 301, 302, 338, 340, 342], "dropout1d": [228, 229, 303, 306], "dropout1dmodel": 300, "dropout2d": [228, 229, 303, 306], "dropout3d": [228, 229, 303, 306], "dropout_p": [215, 290], "dropout_prob": 75, "dropout_r": 190, "dropoutmodel": 299, "droppath": [303, 306], "dtype": [196, 198, 255, 336, 371, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 434, 457], "due": [22, 24, 54, 101, 216, 217, 281, 463], "dummi": 155, "duplic": [10, 14, 199, 201], "dure": [3, 15, 18, 19, 21, 24, 25, 27, 30, 60, 73, 74, 75, 85, 112, 165, 196, 197, 198, 199, 200, 201, 202, 203, 212, 221, 222, 223, 224, 225, 226, 227, 239, 242, 258, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 329, 330, 331, 332, 333, 334, 336, 344, 346, 348, 352, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 372, 374, 384, 385, 418, 419, 420, 427, 433, 441, 447, 457, 460, 463, 467], "dy": [208, 280], "dynam": [0, 2, 3, 15, 30, 85, 140, 144, 197, 200, 201, 202, 203, 245, 246, 247, 266, 297, 324, 326, 327, 328, 348, 352, 353, 355, 361, 366, 371, 372], "dynamicnetwork": 200, "e": [0, 10, 15, 18, 19, 21, 22, 25, 27, 59, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 76, 83, 84, 86, 87, 88, 89, 103, 145, 154, 159, 178, 179, 196, 212, 266, 284, 285, 286, 289, 296, 312, 347, 360, 367, 368, 371, 384, 400, 413, 415, 416, 424, 430, 431, 437, 461], "each": [1, 2, 3, 4, 15, 19, 22, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 54, 60, 77, 85, 86, 90, 92, 93, 94, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 145, 152, 156, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 216, 217, 218, 220, 230, 232, 239, 242, 245, 246, 247, 255, 265, 266, 278, 281, 285, 289, 292, 293, 294, 296, 299, 300, 301, 302, 307, 309, 311, 312, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 346, 348, 349, 350, 351, 352, 353, 354, 356, 360, 361, 362, 363, 364, 365, 366, 367, 368, 376, 384, 385, 386, 389, 390, 391, 392, 393, 394, 395, 401, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 433, 436, 437, 439, 442, 443, 445, 447, 448, 450, 451, 455, 456, 457, 458, 459, 460, 461, 463, 465, 467], "earli": [30, 85, 366], "earlier": 93, "eas": 4, "easi": [2, 3, 4, 10, 124, 125, 126, 127, 128, 129, 198, 199, 201], "easier": [3, 199, 200, 203], "easili": [4, 93, 198, 202, 467], "eccv": 85, "economi": 27, "edg": [15, 92, 101, 171, 443], "edu": [5, 6], "educ": 154, "effect": [13, 85, 159, 163, 184, 188, 199, 200, 201, 202, 203, 212, 216, 217, 218, 220, 276, 277, 281, 284, 285, 287, 317, 318, 319, 321, 322, 323, 324, 344, 348, 349, 350, 355, 372, 373, 374, 439, 455], "effici": [1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 21, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 43, 44, 45, 47, 50, 51, 52, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 80, 81, 83, 84, 85, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144, 150, 154, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 178, 180, 181, 182, 183, 185, 191, 194, 220, 262, 263, 264, 278, 279, 282, 304, 312, 346, 348, 349, 374], "efficientnet": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72], "efficientnet_b0": 85, "efficientnet_b1": 85, "efficientnet_b2": 85, "efficientnet_b3": 85, "efficientnet_b4": 85, "efficientnet_b5": 85, "efficientnet_b6": 85, "efficientnet_b7": 85, "efficientnet_v2": [69, 70, 71, 72], "efficientnet_v2_": 85, "efficientnet_v2_l": 85, "efficientnet_v2_m": 85, "efficientnet_v2_xl": 85, "efficientnetv2": 85, "eig": 20, "eigenvalu": [19, 25], "eigenvector": 19, "eigval": 19, "eigvec": 19, "einop": 304, "einstein": [10, 12, 13, 14, 304], "either": [15, 232, 344, 376, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 434, 442], "element": [0, 10, 12, 14, 24, 25, 75, 85, 198, 202, 205, 206, 208, 209, 210, 211, 212, 213, 216, 217, 218, 220, 221, 223, 224, 225, 226, 227, 255, 259, 260, 261, 262, 263, 264, 265, 278, 279, 281, 285, 286, 292, 293, 294, 296, 298, 299, 300, 301, 302, 304, 311, 312, 313, 314, 315, 324, 329, 330, 331, 332, 333, 334, 373, 376, 384, 385, 386, 389, 390, 391, 392, 393, 394, 395, 396, 400, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 433, 438, 441, 442, 443, 445, 446, 447, 448, 449, 451, 452, 453], "elementwise_affin": 324, "elimin": [12, 14], "elsewher": [332, 333, 334, 400], "elu": [207, 229, 288, 306], "elumodel": 276, "embed": [90, 91, 92, 93, 95, 96, 97, 100, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 190, 215, 229, 256, 289, 290, 306, 337, 338, 340, 341, 342], "embed_dim": [160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 289, 338, 339, 340, 341, 342], "embedding_dim": [190, 255, 336], "embedding_lay": 336, "embedding_matrix": 255, "emphas": [93, 100], "emploi": [30, 60, 101], "empti": [197, 203, 406, 436], "empty_lik": 406, "enabl": [0, 1, 2, 3, 10, 12, 13, 14, 22, 27, 59, 83, 85, 103, 140, 141, 142, 143, 154, 160, 161, 162, 163, 164, 165, 170, 174, 178, 180, 181, 189, 197, 198, 199, 200, 201, 202, 215, 223, 281, 289, 290, 292, 293, 294, 307, 309, 338, 340, 342, 346, 358, 371, 372, 374, 376, 378, 379, 380, 382, 384, 456], "encapsul": [15, 290, 346, 371, 384], "encod": [30, 85, 156, 190, 312, 315, 338, 339, 340, 341, 342, 371], "encoder_lay": [341, 342], "encoderlay": 341, "encompass": 59, "encourag": [222, 297, 299, 300, 301, 302, 311, 312, 315, 362], "end": [23, 177, 205, 208, 209, 210, 223, 276, 278, 279, 280, 281, 283, 298, 313, 314, 315, 329, 330, 331, 332, 333, 334, 366, 368, 390, 391, 393, 396, 401, 407, 411, 418, 420, 422, 437, 441, 443, 452, 453, 467], "enforc": [12, 197, 199, 201, 304, 339, 340, 341, 342], "engin": [15, 24, 384], "enhanc": [30, 40, 41, 75, 76, 77, 83, 84, 85, 88, 91, 101, 102, 110, 111, 121, 122, 136, 137, 138, 139, 144, 152, 153, 159, 160, 161, 162, 163, 169, 172, 179, 188, 199, 201, 266, 282, 352, 467], "enough": 15, "ensur": [3, 5, 6, 7, 8, 10, 12, 13, 14, 24, 25, 26, 60, 69, 70, 71, 72, 167, 187, 196, 197, 198, 199, 200, 201, 202, 203, 212, 215, 244, 245, 246, 247, 255, 259, 260, 261, 280, 285, 290, 296, 297, 298, 299, 300, 301, 302, 304, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 326, 327, 328, 330, 331, 332, 333, 334, 336, 346, 347, 348, 359, 360, 362, 363, 365, 366, 367, 368, 369, 372, 373, 374, 376, 378, 379, 380, 381, 382, 383, 394, 401, 419, 427, 433, 435, 436, 441, 443, 447, 452, 453, 457, 458, 459, 460, 461, 465, 467], "enter": 374, "entir": [3, 15, 223, 225, 226, 227, 298, 301, 302, 383], "entri": [60, 86, 96, 97, 441, 447, 449], "entropi": [233, 234, 311, 312], "environ": [15, 45, 47, 96, 97, 100, 384], "ep": [19, 171, 172, 173, 175, 176, 177, 222, 233, 234, 239, 240, 242, 243, 244, 259, 260, 261, 297, 311, 312, 317, 318, 319, 320, 321, 322, 323, 324, 355, 360, 361, 362, 363, 364, 365, 366, 367], "epoch": [1, 3, 15, 348, 349, 350, 351, 352, 353, 354, 355, 356], "epsilon": [30, 240, 244, 311, 312, 317, 318, 319, 320, 321, 322, 323, 324, 360, 361, 362, 363, 364, 365, 366, 367], "equal": [22, 257, 329, 330, 331, 401, 436, 448, 458, 460], "equat": [19, 24, 26], "equival": [389, 431, 444], "error": [0, 3, 10, 12, 14, 15, 19, 21, 60, 197, 200, 201, 202, 203, 206, 235, 237, 277, 298, 304, 311, 312, 313, 314, 346, 347, 374, 401, 435], "escap": 350, "especi": [3, 15, 199, 201, 202, 284, 373, 374, 381, 456, 457, 461, 467], "essenti": [1, 3, 16, 22, 24, 82, 217, 220, 346, 381, 383, 418, 456, 457, 461, 467], "estim": [314, 362, 363, 364, 365, 366, 367], "et": [74, 85, 163, 338], "eta": 368, "eta_": [349, 350, 355, 368], "eta_0": [349, 351, 353, 354, 356], "eta_min": 349, "eta_t": [349, 350, 351, 353, 354, 355, 356], "etc": [10, 54, 60, 93, 103, 311, 344, 457], "euclidean": [23, 244], "european": 85, "eval": [15, 298, 384], "evalu": [197, 239, 242, 296, 297, 298, 299, 300, 301, 302, 317, 318, 319, 321, 322, 323, 384, 467], "evaluate_model": 355, "even": [360, 374, 396, 397, 400, 402, 403, 404, 405], "evenli": [245, 246, 247, 326, 327, 328, 396, 401, 436, 448], "everi": [1, 15, 351, 356, 467], "everywher": 422, "exact": [197, 200, 432, 461, 463], "exactli": 203, "exampl": [4, 15, 348, 389], "excel": [76, 100, 166, 167], "except": [0, 177, 422, 437, 439, 455], "excit": [59, 85, 92, 96, 97, 130, 133, 136, 137, 138, 139, 265], "exclud": [452, 453], "exclus": [379, 382, 396], "exdb": 8, "execut": [15, 200, 374, 384], "exist": [14, 26, 199, 201, 203, 375, 437], "exit": 374, "exp": [205, 210, 211, 213, 276, 283, 406], "exp_rang": 350, "expand": [4, 10, 14, 49, 85, 220, 435, 445, 451], "expans": [10, 12, 14, 53, 77, 93, 96, 97, 164, 165, 170, 171, 172, 173, 175, 176, 177], "expansion_factor": 92, "expect": [17, 200, 203, 223, 289, 296, 298, 299, 300, 301, 302, 324, 338, 339, 340, 341, 342, 346], "expens": 3, "experi": [15, 93, 381, 383, 467], "experiment": [15, 383], "explan": [22, 24, 28, 39, 145, 152, 245, 246, 247, 326, 327, 328, 359], "explicit": [12, 13, 14, 203, 304], "explicitli": [14, 15, 85, 199, 201, 384], "explod": [283, 317, 318, 319], "explor": [15, 99, 346, 383], "expon": [22, 244, 394], "exponenti": [205, 210, 212, 276, 283, 285, 296, 351, 353, 362, 363, 364, 365, 366, 415], "exponentiallr": [348, 357], "expos": 15, "express": [10, 12, 14, 42, 166], "extend": [4, 85, 103, 123, 140, 179, 186], "extens": [85, 358], "extern": 4, "extra": [53, 72, 101, 186, 435], "extract": [30, 73, 79, 82, 85, 112, 123, 140, 150, 154, 160, 161, 162, 163, 165, 166, 169, 185, 186, 187, 189, 220, 294, 329, 331, 371, 375, 397, 418, 420, 452, 453, 458, 460], "extractor": [86, 87, 88, 89, 150], "extrem": [24, 85, 113, 185, 192], "ey": 406, "f": [1, 4, 5, 6, 7, 8, 15, 85, 201, 202, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 282, 285, 338, 340, 342, 348, 349, 350, 351, 352, 353, 354, 355, 356], "f_1": 265, "f_2": 265, "facilit": [10, 13, 73, 199, 203, 212, 285, 292, 293, 294, 346, 358, 459, 467], "factor": [59, 75, 93, 164, 205, 215, 216, 217, 218, 220, 265, 274, 275, 289, 290, 344, 348, 350, 351, 353, 354, 355, 356, 359, 366, 367, 368, 369], "factori": 151, "failur": [199, 200, 201, 202, 346], "faithfulli": 15, "fals": [1, 5, 6, 7, 8, 23, 27, 59, 96, 97, 112, 155, 164, 165, 171, 172, 173, 175, 176, 177, 178, 179, 196, 197, 198, 215, 221, 223, 224, 225, 226, 227, 239, 242, 257, 268, 270, 271, 272, 273, 274, 275, 289, 290, 292, 293, 294, 298, 307, 309, 338, 339, 340, 341, 342, 344, 349, 350, 351, 352, 353, 354, 355, 356, 362, 363, 367, 372, 376, 378, 379, 380, 382, 384, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 418, 419, 420, 427, 433, 434, 441, 457], "famili": [53, 85, 93, 172, 176, 177, 186, 375], "fan": [270, 271, 274, 275], "fan_in": [270, 271], "fan_out": [270, 271], "fashion": 7, "fashion_train": 7, "fashionmnist": 9, "fast": 366, "faster": [85, 165, 348, 361, 365, 374], "fc": [15, 82, 112, 123, 130, 140, 200, 265, 293, 294, 329, 330, 331, 332, 333, 334], "fc1": [15, 88, 89, 155, 199, 203, 277, 278, 279, 281, 282, 283, 284, 286, 287, 309], "fc2": [15, 88, 89, 155, 199, 203, 277, 278, 279, 281, 283, 284, 286, 287, 309], "fc3": 89, "featur": [3, 15, 28, 30, 39, 42, 43, 53, 54, 73, 76, 77, 79, 82, 85, 86, 87, 88, 89, 102, 110, 111, 112, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 140, 141, 142, 143, 145, 150, 152, 153, 154, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 177, 185, 186, 187, 189, 222, 230, 232, 239, 240, 259, 260, 261, 265, 266, 294, 297, 299, 300, 301, 302, 307, 309, 317, 318, 319, 320, 321, 322, 323, 324, 329, 330, 331, 332, 333, 334, 336, 346, 361], "feature_extractor": 86, "fed": [3, 467], "feed": [3, 467], "feedforward": [155, 156, 190, 338, 340, 342], "femto": [47, 85], "fergu": [85, 152], "fetch": 0, "few": 155, "fewer": [1, 85, 104, 105, 106, 107, 108, 109, 174, 435], "field": [5, 6, 8, 85, 140, 144, 174, 266], "file": [3, 375], "fill": [268, 272, 273, 378, 379, 380, 382, 402, 403, 404, 405], "filter": [60, 85, 93, 152, 216, 217, 218, 220, 259, 260, 261, 293, 294], "filter_height": 220, "filter_s": 220, "filter_width": 220, "final": [39, 54, 55, 56, 57, 58, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 92, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 156, 190, 199, 200, 201, 202, 203, 215, 266, 289, 338, 339, 341, 384, 456, 467], "find": [26, 418, 420], "fine": [99, 102, 265, 467], "finer": 165, "finest": 166, "finish": 374, "first": [5, 6, 7, 8, 19, 86, 152, 155, 178, 179, 180, 181, 200, 201, 230, 265, 307, 348, 362, 363, 364, 365, 366, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 428, 436, 442, 455, 456, 457, 467], "fit": [14, 346], "fix": [163, 174, 178, 200, 351, 354, 356, 384, 443], "flag": 15, "flat": [163, 178], "flatten": [12, 82, 86, 203, 220, 393, 440, 444, 445, 447], "flexibl": [1, 3, 4, 10, 12, 14, 40, 73, 82, 83, 84, 85, 86, 93, 94, 103, 112, 136, 137, 138, 139, 144, 145, 150, 199, 200, 201, 202, 203, 304, 344, 346, 353, 358, 384, 402, 403, 457, 467], "flexibli": 13, "flip": [462, 464, 467], "float": [2, 5, 6, 7, 8, 19, 24, 39, 40, 59, 60, 75, 77, 90, 94, 156, 164, 165, 166, 167, 168, 169, 170, 178, 179, 190, 196, 198, 205, 208, 215, 221, 222, 223, 224, 225, 226, 227, 233, 234, 235, 239, 240, 242, 243, 244, 255, 258, 259, 260, 261, 268, 272, 273, 274, 275, 276, 280, 289, 290, 296, 297, 298, 299, 300, 301, 302, 311, 312, 313, 317, 318, 319, 320, 321, 322, 323, 324, 336, 338, 340, 342, 344, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 376, 382, 384, 396, 397, 398, 399, 400, 401, 402, 404, 411, 434, 441, 457, 459, 461, 462, 463, 464], "float32": [196, 198, 371, 384, 396, 397, 400, 402, 404, 434, 457], "float64": [371, 405, 434, 457], "floor": 356, "flow": [30, 76, 82, 85, 130, 203, 222, 275, 277, 284, 287, 292, 293, 294, 307, 309, 372, 441], "fluctuat": 350, "fly": [2, 3], "fname": 3, "focu": 30, "follow": [0, 12, 14, 16, 19, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 55, 56, 57, 58, 59, 96, 97, 136, 137, 138, 139, 144, 145, 150, 152, 155, 156, 205, 206, 208, 209, 210, 211, 212, 213, 215, 230, 232, 257, 259, 260, 261, 262, 263, 264, 265, 266, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 296, 298, 299, 300, 301, 302, 304, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 338, 339, 340, 341, 342, 346, 350, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 375, 383, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 418, 420, 428, 435, 442, 446, 458, 459, 460, 461, 462, 463, 464, 467], "foral": [339, 341], "forc": [15, 222], "form": [15, 25, 266, 339, 341, 393, 442, 445, 451, 467], "format": [2, 3, 5, 6, 7, 8, 155, 312, 315, 457], "formul": [206, 244], "formula": [19, 27, 212, 245, 246, 247, 285, 286, 313, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 389, 433, 461], "forward": [15, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 152, 155, 196, 197, 346, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "foundat": [15, 82, 93, 130, 197, 346, 358], "four": [55, 56, 57, 58, 104, 105, 106, 107, 108, 109, 171, 172, 173, 175, 176, 177, 443], "frac": [13, 15, 17, 18, 19, 21, 22, 23, 24, 26, 27, 30, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 223, 230, 232, 240, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 296, 298, 299, 300, 301, 302, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 329, 330, 331, 332, 333, 334, 336, 340, 342, 349, 360, 361, 362, 363, 364, 365, 366, 367, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 437, 439, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 459], "frame": 227, "framework": [4, 10, 15, 154, 312, 315, 317, 318, 319, 321, 322, 323, 347, 358, 467], "free": [15, 371], "frequent": [312, 315], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 14, 15, 22, 24, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 77, 78, 79, 80, 81, 82, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 155, 165, 196, 197, 198, 199, 200, 201, 202, 203, 220, 222, 230, 239, 242, 255, 257, 259, 260, 261, 265, 266, 268, 270, 271, 272, 273, 274, 275, 282, 289, 292, 293, 294, 296, 297, 299, 300, 301, 302, 307, 309, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 329, 330, 331, 339, 341, 342, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 363, 364, 365, 366, 367, 368, 369, 371, 373, 374, 375, 376, 378, 379, 380, 382, 383, 384, 389, 390, 391, 395, 397, 418, 419, 420, 427, 433, 437, 439, 442, 445, 448, 449, 450, 451, 455, 458, 459, 460, 461, 462, 463, 464, 467], "full": [15, 27, 94, 96, 97, 156, 190], "full_matric": 27, "fulli": [4, 16, 28, 39, 54, 55, 56, 57, 58, 59, 60, 82, 85, 86, 87, 88, 89, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 145, 150, 152, 232, 265, 266, 309, 383, 384], "func": 375, "function": [3, 4, 5, 6, 7, 8, 10, 15, 16, 77, 159, 197, 199, 200, 201, 202, 203, 259, 260, 261, 265, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 296, 297, 299, 300, 301, 302, 304, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 326, 327, 328, 338, 340, 342, 346, 349, 350, 352, 353, 356, 358, 383, 456, 467], "fundament": [215, 232, 309, 384, 457], "further": [13, 41, 42, 43, 44, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 92, 94, 95, 96, 97, 99, 101, 110, 111, 187, 383, 419, 427, 433], "fuse": [30, 140], "fusion": [141, 142, 143], "futur": [215, 290, 308, 341, 342], "g": [0, 10, 15, 18, 19, 22, 25, 27, 59, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 76, 83, 84, 85, 86, 87, 88, 89, 103, 145, 154, 159, 163, 178, 179, 265, 266, 296, 347, 360, 367, 371, 384, 437, 461], "g_": 361, "g_t": 367, "gain": [274, 275], "gamma": [240, 317, 318, 319, 320, 321, 322, 323, 324, 348, 350, 351, 352, 354, 356], "gamma_c": [240, 320], "gap": [112, 123, 140, 265], "gaussian": [206, 277], "gelu": [159, 207, 229, 288, 306], "gelunetwork": 277, "gener": [15, 24, 41, 46, 50, 155, 156, 223, 258, 296, 297, 299, 300, 301, 302, 322, 338, 363, 365, 366, 374, 376, 378, 379, 380, 381, 382, 383, 388, 396, 398, 399, 401, 442, 460, 461, 462, 464, 467], "geoffrei": [5, 6], "geq": 452, "get": [5, 6, 7, 8], "get_lr": [349, 350, 351, 352, 353, 354, 355, 356], "git": 15, "github": [7, 15], "give": [359, 367], "given": [12, 13, 14, 18, 19, 22, 24, 25, 27, 157, 220, 244, 255, 289, 290, 304, 311, 312, 315, 347, 371, 372, 376, 403, 405, 441, 448, 456, 461, 462, 464, 467], "global": [0, 59, 85, 112, 123, 130, 140, 159, 160, 161, 162, 163, 164, 166, 169, 170, 174, 178, 180, 181, 182, 183, 185, 186, 187, 240, 265, 320, 372, 374, 381, 383], "global_response_norm": [229, 241], "globalresponsenorm": [306, 325], "go": [10, 74, 85], "goal": [311, 312, 315], "googlenet": [74, 85], "gpu": [85, 196, 198, 371, 376, 378, 379, 380, 382, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405], "grad": [15, 196, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 220, 223, 230, 232, 257, 262, 263, 264, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 292, 293, 294, 296, 298, 299, 300, 301, 302, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 329, 330, 331, 332, 333, 334, 347, 358, 376, 378, 379, 380, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 398, 399, 401, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 441, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 458, 459, 460, 462, 464, 465], "grad_output": 22, "gradient": [10, 15, 16, 30, 76, 82, 85, 196, 198, 297, 346, 347, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 374, 376, 378, 379, 380, 382, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 434, 457], "gradual": [348, 349, 351], "grain": 265, "graph": [15, 275, 384, 396, 397, 400, 402, 403, 404, 405, 457], "grayscal": [7, 8, 86, 87, 88, 89, 461, 467], "great": 169, "greater": [49, 168, 411, 436], "green": 461, "grid": [154, 442], "grn": 320, "groundbreak": 85, "group": [85, 93, 103, 110, 111, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 140, 144, 200, 216, 217, 218, 259, 260, 261, 266, 292, 293, 294, 347, 348, 358], "group1": 200, "group2": 200, "groupedconvblock": 123, "grow": 15, "growth_rat": [54, 55, 56, 57, 58], "guarante": 381, "h": [10, 12, 13, 14, 85, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 163, 192, 215, 217, 218, 220, 222, 226, 227, 240, 246, 247, 249, 250, 253, 254, 257, 258, 260, 261, 265, 289, 290, 304, 318, 319, 320, 322, 323, 327, 328, 331, 334, 338, 340, 342, 458, 460], "h_": [217, 218, 246, 247, 249, 250, 253, 254, 257, 293, 294, 327, 328, 330, 331, 333, 334], "h_out": [217, 218, 249, 250, 253, 254], "h_stack": 439, "ha": [0, 19, 41, 155, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 203, 216, 217, 218, 259, 260, 261, 282, 286, 311, 312, 317, 318, 319, 321, 322, 323, 324, 344, 347, 358, 384, 389, 431, 435, 437, 439, 450, 455, 461], "hackabl": 15, "haip": 163, "half": [350, 425], "han": 7, "hand": 26, "handl": [0, 3, 10, 15, 24, 163, 185, 197, 199, 200, 201, 202, 203, 255, 312, 315, 346, 358, 371, 374], "handwritten": [7, 8, 89], "hang": 85, "hard": [96, 97, 279], "hard_sigmoid": 278, "hardsigmoid": [279, 288, 306], "hardswish": [288, 306], "hashabl": 384, "hat": [30, 362, 363, 364, 365, 366], "have": [0, 1, 15, 18, 19, 21, 24, 25, 27, 198, 200, 202, 203, 217, 218, 222, 244, 255, 275, 336, 346, 400, 402, 403, 404, 405, 418, 420, 437, 439, 441, 442, 449, 450, 455, 459, 465], "he": 85, "head": [30, 39, 77, 92, 150, 156, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 215, 289, 290, 338, 340, 342], "head_fn": 77, "heart": 15, "height": [30, 150, 217, 218, 220, 226, 227, 240, 246, 247, 249, 250, 253, 254, 257, 258, 266, 293, 294, 318, 319, 320, 322, 323, 327, 328, 330, 331, 333, 334, 344, 458, 460, 465], "help": [30, 75, 159, 208, 210, 227, 255, 276, 280, 282, 283, 287, 317, 318, 319, 329, 330, 332, 333, 336, 348, 350, 355, 356, 359, 362, 363, 365, 372, 373, 374, 428], "henc": 446, "here": [3, 17, 197, 230, 346, 358, 373, 374, 383, 456, 457, 467], "hidden": [28, 152, 156, 166, 167, 168, 169, 178, 179, 190, 200], "hidden_s": 200, "hierarch": [39, 40, 85, 163, 164, 165, 166, 167, 168, 169, 170, 171, 176, 178, 179, 200, 203, 346], "hierarchi": 293, "hierarchicalnetwork": 200, "high": [42, 48, 49, 69, 70, 71, 72, 79, 92, 100, 101, 120, 135, 144, 162, 165, 167, 175, 176, 177, 185, 186, 187, 192, 193, 348, 379, 382], "higher": [49, 60, 90, 98, 123, 185, 312, 315, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 388, 389, 393, 415, 428], "highest": [53, 101, 379], "highli": [15, 30, 45, 53, 85, 95, 163, 166, 184, 353], "highlight": [265, 332, 333, 334], "hinton": [5, 6], "histor": 361, "histori": [376, 378, 379, 380, 382, 396, 397, 398, 399, 400, 402, 403, 404, 405], "hold": [93, 199, 200, 201, 202], "horizont": [439, 450, 462, 467], "hot": [312, 315], "how": [2, 3, 12, 14, 136, 137, 138, 139, 144, 166, 200, 203, 304, 346, 467], "howard": 85, "howev": [196, 275], "hstack": 440, "html": [5, 6], "http": [5, 6, 7, 8, 15], "hu": [85, 265], "huang": 85, "huber": [235, 313], "huber_loss": [229, 236], "huberloss": [306, 316], "huberregressionmodel": 313, "hue": 467, "huge": [48, 85, 163, 166], "hybrid": [85, 101, 102, 159, 163], "hyperbol": [213, 287, 413, 424, 430], "hyperparamet": [104, 105, 106, 107, 108, 109, 112, 123, 151, 157, 164, 347, 359], "i": [0, 1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 69, 70, 71, 72, 73, 74, 75, 76, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 270, 271, 272, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 408, 409, 410, 411, 412, 413, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467], "i_1": [12, 13, 14, 304], "i_2": [12, 13, 14, 304], "i_k": 14, "i_m": [12, 14, 304], "iccv": 85, "iclr": 163, "idea": 85, "ideal": [42, 46, 50, 90, 93, 102, 166, 203], "ident": [21, 22, 77, 85, 258, 298, 306, 310, 381, 383, 400, 446], "identifi": 201, "idx": [2, 3], "ieee": [85, 163, 265], "ignor": [338, 339, 340, 341, 342], "ii": 431, "ij": [30, 212, 257, 285, 387, 388, 389, 393, 442, 452, 453], "ik": [387, 388, 389], "ill": [18, 24], "ilsvrc": 85, "imag": [3, 4, 5, 6, 7, 8, 14, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 60, 69, 70, 71, 72, 74, 75, 76, 82, 83, 84, 85, 86, 87, 88, 89, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 153, 154, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 217, 242, 258, 260, 265, 293, 322, 442, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467], "image_dir": 3, "image_path": 3, "image_s": [190, 191, 192, 193, 194, 195], "imagedataset": 3, "imageio": 3, "imagenet": [55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 77, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 121, 122, 136, 137, 138, 139, 144], "imbal": [312, 315], "img_siz": [30, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], "impact": [85, 365], "implement": [2, 3, 15, 24, 28, 30, 39, 54, 59, 73, 74, 75, 76, 77, 83, 84, 85, 86, 90, 91, 92, 112, 121, 122, 124, 125, 126, 127, 128, 129, 130, 150, 152, 156, 159, 163, 164, 165, 178, 190, 197, 220, 223, 262, 263, 264, 266, 289, 290, 298, 320, 340, 342, 347, 352, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 439, 455, 461], "impli": [292, 293], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 122, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 222, 223, 224, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467], "improp": [10, 200, 203, 383], "improv": [30, 39, 60, 74, 75, 76, 80, 82, 84, 85, 102, 103, 112, 123, 136, 137, 138, 139, 140, 152, 158, 159, 161, 163, 165, 172, 174, 178, 179, 186, 187, 189, 222, 223, 239, 255, 258, 265, 277, 283, 287, 304, 336, 348, 349, 350, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 460, 463, 467], "imread": 3, "in1_featur": [230, 307], "in2_featur": [230, 307], "in_channel": [30, 112, 159, 164, 165, 171, 172, 173, 174, 175, 176, 177, 178, 179, 190, 200, 203, 259, 260, 261, 262, 263, 264, 265, 266, 292, 293, 294, 318, 319, 329, 330, 331, 332, 333, 334, 346], "in_featur": [199, 200, 203, 232, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 293, 294, 296, 299, 300, 307, 309, 311, 312, 313, 314, 315, 317, 321, 324, 329, 330, 331, 332, 333, 334], "incept": [74, 75, 76, 77, 82, 83, 84], "inception_next": 77, "inception_next_atto": 85, "inception_next_bas": 85, "inception_next_smal": 85, "inception_next_tini": 85, "inception_resnet_v1": 85, "inception_resnet_v2": 85, "inception_v1": 85, "inception_v3": 85, "inception_v4": 85, "inceptionnext": [78, 79, 80, 81], "inceptionresnet": [83, 84], "includ": [3, 4, 7, 15, 16, 22, 23, 28, 39, 73, 74, 75, 83, 86, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 145, 151, 152, 155, 156, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 197, 198, 200, 202, 203, 257, 259, 260, 261, 262, 263, 264, 340, 342, 344, 346, 347, 352, 358, 365, 383, 389, 443, 452, 453], "inclus": [198, 201, 379, 382, 401], "incom": [232, 309], "incompat": 435, "incomplet": 2, "incompletedataset": 2, "incorpor": [27, 30, 85, 95, 123, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 186, 188, 277], "increas": [42, 43, 90, 98, 101, 123, 124, 125, 126, 127, 128, 129, 140, 158, 166, 167, 169, 172, 177, 216, 217, 218, 220, 258, 350, 355, 361, 368, 373, 439, 455, 461, 462, 464, 467], "independ": [200, 216, 217, 218, 289, 296, 299, 300, 301, 302, 324, 389, 399, 459, 461, 463, 465], "index": [0, 2, 5, 6, 7, 8, 10, 12, 240, 255, 304, 320, 336, 349, 350, 351, 352, 353, 354, 356, 373, 384, 396, 397, 400, 442, 446], "indexerror": 0, "indic": [0, 1, 13, 14, 15, 110, 111, 145, 155, 160, 161, 162, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 198, 200, 202, 203, 234, 238, 255, 312, 315, 329, 336, 338, 339, 340, 341, 342, 354, 371, 372, 384, 458, 460], "individu": [3, 200, 203, 313, 324, 358, 361, 368], "induc": [210, 283], "induct": [159, 163], "inf": 429, "infer": [136, 137, 138, 139, 144, 165, 200, 203, 371, 374], "infin": [25, 27, 364], "inform": [30, 85, 155, 163, 166, 180, 181, 182, 183, 188, 196, 265, 352, 358, 360, 374], "infti": [23, 366], "inherit": [1, 359, 367, 369], "init": 269, "initi": [1, 15, 30, 39, 54, 77, 82, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 146, 147, 148, 149, 151, 157, 184, 185, 186, 187, 196, 198, 199, 200, 201, 202, 203, 266, 268, 270, 271, 272, 273, 274, 275, 289, 292, 293, 294, 307, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 324, 336, 340, 342, 344, 346, 347, 349, 351, 353, 354, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 378, 381, 382, 383, 396, 400, 401, 402, 403, 404, 405, 434], "initial_accumulator_valu": 361, "inner": [387, 406], "innov": [92, 102], "input": [10, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 123, 136, 137, 138, 139, 140, 144, 150, 152, 155, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 346, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 374, 383, 384, 385, 387, 388, 389, 393, 397, 399, 403, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467], "input1": 307, "input2": 307, "input_": [28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 152, 205, 206, 208, 209, 210, 211, 212, 213, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 320, 326, 327, 328, 336, 436, 452, 453], "input_1": 230, "input_2": 230, "input_data": [276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 292, 293, 294, 296, 299, 300, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 321, 324, 329, 330, 331, 332, 333, 334], "input_indic": [255, 336], "input_s": [200, 202, 285, 312, 315], "input_shap": 155, "input_tensor": [54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 150, 196, 199, 200, 201, 202, 203, 212, 222, 223, 244, 262, 263, 264, 265, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 329, 330, 331, 332, 333, 334, 344, 346, 458, 459, 460, 461, 462, 463, 464, 465], "insid": [3, 372, 374], "insight": 85, "inspect": [15, 197, 198, 203, 347], "inspir": [10, 12, 14, 15, 39, 85], "instabl": [24, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369], "instanc": [0, 1, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 151, 153, 155, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 198, 199, 201, 202, 203, 242, 282, 321, 322, 323, 324, 338, 339, 341, 347, 371, 375, 434, 445, 451, 467], "instance_norm": [229, 241, 321, 322, 323], "instancenorm1d": [306, 325], "instancenorm1dmodel": 321, "instancenorm2d": [306, 325], "instancenorm3d": [306, 325], "instanti": [2, 31, 32, 33, 34, 35, 36, 37, 38, 59, 69, 70, 71, 72, 77, 78, 79, 80, 81, 98, 99, 100, 101, 136, 137, 138, 139, 144, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 188, 189, 191, 192, 193, 194, 195, 375], "instead": [155, 199, 200, 201, 202, 203, 270, 271, 274, 275, 336, 338, 340, 342, 362, 363, 364, 374, 398, 399], "int": [0, 1, 2, 5, 6, 7, 8, 12, 13, 14, 22, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 212, 215, 216, 217, 218, 220, 222, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 272, 273, 274, 275, 285, 289, 290, 292, 293, 294, 297, 304, 307, 309, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 349, 350, 351, 352, 353, 354, 355, 356, 362, 363, 364, 365, 366, 368, 371, 375, 376, 378, 379, 380, 381, 382, 384, 396, 397, 398, 399, 400, 401, 402, 404, 411, 418, 419, 420, 427, 428, 432, 433, 434, 435, 436, 437, 438, 441, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 457, 458, 460, 465], "int32": 336, "int64": [371, 384], "integ": [1, 3, 22, 130, 145, 216, 217, 218, 246, 247, 289, 292, 293, 294, 324, 327, 328, 330, 331, 332, 333, 334, 379, 380, 382, 383, 398, 402, 404, 419, 427, 432, 433, 443, 445, 446, 448, 451], "integr": [1, 2, 4, 5, 6, 7, 8, 13, 15, 16, 85, 101, 103, 156, 159, 160, 161, 162, 198, 200, 202, 203, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 292, 293, 294, 304, 307, 309, 329, 330, 331, 332, 333, 334, 384], "intellig": [85, 265], "intend": [10, 167, 196, 201, 202], "intens": [24, 54, 113, 459, 461], "interact": [178, 230, 307, 346, 383], "interdepend": 85, "interfac": [2, 15, 197, 200, 358], "interfer": [372, 374], "intermedi": [24, 110, 111, 166, 265, 338, 340, 342, 384], "intern": [15, 85, 113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 163, 199, 200, 201, 202, 203, 312, 315, 346, 458, 459, 460, 461, 462, 463, 464, 465], "interpol": [229, 256, 344, 401, 465], "interpret": [10, 85, 212, 285, 437], "interv": [354, 356, 378, 382, 396], "introduc": [40, 60, 74, 75, 85, 90, 91, 92, 123, 159, 163, 164, 165, 173, 189, 209, 265, 277, 281, 282, 284, 287, 296, 299, 300, 301, 302, 338, 460, 463, 467], "introspect": [15, 203], "intuit": [10, 12, 15, 199, 201, 346, 467], "inv": 20, "inv_a": 21, "invari": [330, 333], "invers": [18, 21, 22, 24, 350, 361, 408, 409, 410], "invert": [18, 21, 22, 26, 85, 91, 92, 95], "invit": 15, "invok": 375, "involv": [12, 14, 15, 17, 18, 19, 21, 24, 25, 27, 140, 205, 206, 208, 209, 210, 211, 213, 230, 232, 257, 292, 293, 294, 304, 307, 309, 376, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 405, 415, 416, 417, 418, 420, 423, 425, 442, 443, 445, 451], "is_all_fre": 384, "is_bit_fre": 371, "is_caus": [215, 290, 341, 342], "is_fre": 384, "is_leaf": 384, "isn": 15, "issu": [3, 15, 283, 317, 318, 319, 362, 363], "item": [7, 15, 314], "iter": [0, 1, 2, 3, 196, 197, 200, 202, 339, 341, 347, 350, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 396], "ith": [212, 285], "its": [4, 15, 22, 24, 28, 40, 85, 93, 101, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 131, 132, 133, 134, 135, 141, 142, 143, 152, 155, 165, 196, 199, 200, 201, 202, 216, 217, 218, 220, 258, 266, 275, 277, 281, 286, 297, 332, 333, 334, 346, 347, 360, 368, 372, 373, 374, 375, 396, 398, 399, 404, 418, 420, 434, 435, 446, 448, 459, 462, 464, 467], "itself": [17, 22, 199, 200, 201, 202, 348], "j": [8, 10, 12, 13, 14, 30, 212, 255, 265, 285, 304, 317, 318, 319, 321, 322, 323, 329, 330, 332, 333, 336, 442, 450, 452, 453, 458, 460], "j_1": [12, 14, 304], "j_2": [12, 14, 304], "j_k": 14, "j_n": [12, 14, 304], "jie": 85, "jk": 388, "join": [3, 437], "json": 375, "k": [22, 30, 85, 165, 215, 216, 289, 290, 292, 312, 318, 319, 322, 323, 329, 332, 333, 342, 387, 388, 397, 400, 437, 448], "k_d": [218, 294, 331, 334], "k_h": [217, 218, 293, 294, 330, 331, 334], "k_i": 289, "k_j": 30, "k_w": [217, 218, 293, 294, 330, 331, 334], "kaim": [85, 270, 271, 274, 275], "kaiming_norm": 269, "kaiming_uniform": 269, "kalenichenko": 85, "karen": 85, "kashif": 7, "kdim": 289, "keep": [197, 223, 281, 360, 374, 446, 452, 453], "keep_grad": [198, 376, 378, 379, 380, 382, 384, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 434, 457], "keep_var": 197, "keepdim": [23, 418, 419, 420, 427, 433], "kei": [15, 93, 154, 159, 164, 170, 171, 172, 173, 175, 176, 177, 178, 179, 197, 199, 201, 203, 215, 289, 290, 342, 347], "kept": [419, 427, 433], "kernel": [85, 86, 87, 88, 89, 93, 96, 97, 140, 141, 142, 143, 144, 152, 216, 217, 218, 220, 245, 246, 247, 248, 249, 250, 252, 253, 254, 259, 260, 261, 262, 263, 264, 266, 292, 293, 294, 326, 327, 328, 330, 331, 334], "kernel_s": [92, 96, 97, 140, 141, 142, 143, 200, 203, 248, 249, 250, 252, 253, 254, 259, 260, 261, 262, 263, 264, 266, 292, 293, 294, 304, 318, 319, 329, 330, 331, 332, 333, 334], "keyerror": 197, "keyword": [29, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 197, 308], "kj": [387, 389], "known": 85, "kriz": [5, 6], "krizhevski": [5, 6, 85], "kroneck": [12, 212, 285, 304], "kwarg": [29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 197, 308, 375], "l": [17, 24, 69, 85, 163, 193, 215, 216, 225, 245, 248, 252, 259, 265, 290, 296, 299, 300, 301, 302, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 326, 341, 342, 428, 435], "l1": 244, "l2": [244, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369], "l_": [163, 216, 245, 248, 252, 292, 326, 329, 332, 338], "l_k": 289, "l_m": [339, 340], "l_out": [216, 248, 252], "l_q": 289, "l_t": [338, 339, 340], "l_v": 289, "label": [4, 5, 6, 7, 8, 75, 311, 312, 315], "lambd": 359, "lambda": [19, 210, 283, 353, 359, 363], "lambda_1": 19, "lambda_2": 19, "lambda_fn": 353, "lambda_i": 19, "lambda_n": 19, "lambdalr": 357, "languag": [4, 292, 307, 329, 332, 338], "larg": [0, 3, 24, 42, 48, 49, 53, 54, 69, 72, 85, 92, 96, 98, 101, 102, 113, 114, 115, 118, 131, 132, 163, 166, 167, 177, 181, 185, 186, 187, 191, 192, 193, 262, 263, 264, 282, 313, 346, 359, 362, 363, 364, 367, 368, 369, 374], "larger": [41, 59, 60, 112, 140, 158, 161, 162, 186, 199, 201, 216, 217, 218, 220, 222, 297, 359, 390, 436, 443, 458, 460, 465], "largest": [53, 166, 177, 185, 418], "last": [1, 212, 243, 285, 349, 350, 351, 352, 353, 354, 356, 388, 389, 436, 437, 462, 464], "last_channel": 92, "last_epoch": [349, 350, 351, 352, 353, 354, 356], "last_lr": [348, 349, 350, 351, 352, 353, 354, 355, 356], "later": [30, 85], "latest": [4, 15], "layer": [10, 15, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 54, 55, 56, 57, 58, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 145, 146, 147, 148, 149, 152, 154, 155, 156, 159, 163, 164, 165, 166, 170, 171, 172, 173, 175, 176, 177, 178, 179, 185, 186, 190, 197, 199, 200, 203, 212, 223, 232, 239, 242, 243, 259, 260, 261, 262, 263, 264, 265, 266, 270, 271, 274, 275, 285, 290, 292, 293, 294, 298, 307, 308, 309, 315, 324, 329, 330, 331, 332, 333, 334, 338, 339, 340, 341, 342, 346, 383, 443, 457], "layer1": 375, "layer2": 375, "layer_group": 200, "layer_norm": [229, 241, 324], "layer_norm_ep": [338, 340, 342], "layer_scale_init": 39, "layer_sequ": [200, 203], "layernorm": [159, 164, 165, 171, 172, 173, 175, 176, 177, 178, 179, 306, 325, 338, 339, 340, 341, 342], "layernormmodel": 324, "le": 85, "lead": [10, 15, 200, 203, 244, 277, 321, 322, 323, 324, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 383, 435], "leaf": 384, "leaki": [208, 280], "leaky_relu": [207, 229, 280], "leakyrelu": [288, 306], "learn": [1, 3, 4, 7, 8, 10, 13, 15, 22, 24, 30, 60, 79, 80, 85, 123, 124, 125, 126, 127, 128, 129, 152, 153, 154, 163, 166, 170, 199, 200, 201, 202, 209, 212, 265, 276, 280, 281, 285, 292, 293, 294, 299, 300, 301, 302, 304, 307, 309, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 373, 381, 401, 448, 452, 453, 456, 457, 467], "learnabl": [30, 178, 179, 196, 197, 198, 239, 240, 242, 243, 259, 260, 261, 289, 292, 293, 294, 307, 309, 317, 318, 319, 320, 321, 322, 323, 324, 342, 346], "least": [24, 25, 27, 344, 431, 452, 453], "lecun": [8, 85], "left": [22, 23, 24, 27, 30, 206, 212, 244, 277, 285, 289, 311, 312, 313, 315, 317, 318, 319, 321, 322, 323, 324, 332, 333, 334, 340, 342, 428, 458, 460], "leftarrow": 365, "len": [0, 1, 2, 3, 442], "lenet": [87, 88, 89], "lenet_1": 85, "lenet_4": 85, "lenet_5": 85, "length": [200, 215, 216, 225, 245, 248, 252, 292, 308, 317, 321, 326, 329, 332, 341, 342, 443, 459], "leq": [278, 279, 313, 354, 366, 394, 411, 453], "lerp": 257, "less": [0, 205, 208, 235, 276, 280, 312, 313, 315, 401, 411], "let": 19, "level": [82, 166, 167, 168, 169], "leverag": [12, 13, 14, 15, 26, 30, 76, 77, 84, 85, 98, 101, 124, 125, 126, 127, 128, 129, 150, 154, 171, 174, 180, 181, 182, 183, 184, 185, 266, 346], "lfloor": 356, "li": [85, 174], "librari": [3, 10, 15, 16, 197, 346, 347, 358, 375, 383, 384, 467], "lie": 376, "lightweight": [15, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 91, 96, 97, 104, 105, 106, 107, 108, 109, 116, 133, 170, 174, 182, 183, 189, 195, 266, 279, 282], "like": [12, 13, 14, 15, 60, 82, 85, 93, 101, 124, 125, 126, 127, 128, 129, 141, 142, 143, 154, 156, 163, 187, 196, 197, 200, 203, 216, 222, 274, 275, 283, 296, 297, 304, 317, 318, 319, 321, 322, 323, 372, 373, 434, 457, 467], "likelihood": [238, 312, 315], "limit": [44, 51, 96, 97, 98, 100, 155, 282, 360, 411], "linalg": 20, "linalgerror": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27], "line": 15, "linear": [15, 16, 17, 24, 25, 26, 77, 85, 91, 95, 130, 155, 163, 165, 171, 172, 173, 174, 175, 176, 177, 199, 200, 201, 203, 205, 206, 208, 209, 210, 223, 270, 271, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 293, 294, 296, 298, 299, 300, 307, 308, 311, 312, 313, 314, 315, 317, 321, 324, 329, 330, 331, 332, 333, 334, 338, 340, 342, 348, 375, 400], "linearli": 313, "linspac": 406, "linspace_tensor": 401, "list": [0, 1, 15, 30, 39, 40, 60, 77, 86, 92, 103, 112, 123, 130, 140, 145, 155, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 196, 198, 199, 200, 201, 202, 243, 266, 308, 324, 347, 349, 350, 351, 352, 353, 354, 355, 356, 376, 378, 379, 380, 382, 384, 397, 398, 399, 402, 403, 404, 405, 432, 435, 446, 448, 449, 454, 456], "listdir": 3, "liter": [13, 112, 196, 198, 233, 234, 235, 237, 238, 257, 259, 260, 261, 262, 263, 264, 266, 270, 271, 292, 293, 294, 311, 312, 313, 314, 315, 344, 350, 355, 371, 376, 378, 379, 380, 382, 384, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 442], "liu": [85, 163], "ln": 394, "load": [3, 4, 5, 6, 7, 8, 196, 197, 198, 347, 352, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 375], "load_state_dict": [197, 347, 352, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "loader": [1, 2, 3], "local": [15, 30, 85, 159, 160, 161, 162, 163, 164, 166, 169, 178, 179, 180, 181, 182, 183, 220, 292, 350], "locat": [85, 257], "log": [179, 238, 311, 312, 315, 349, 350, 351, 352, 353, 354, 355, 356, 406, 417], "log2": 406, "log_2": 417, "log_softmax": 315, "logarithm": [394, 415, 416, 417], "logic": [3, 326, 327, 328, 346, 347], "logit": [28, 39, 152, 212, 285, 312], "logsoftmax": [312, 315], "long": [30, 154, 163, 167, 365, 432], "lookup": [255, 336], "loop": [1, 12, 13, 14, 15, 200, 304, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "loss": [15, 24, 199, 200, 201, 202, 203, 212, 233, 234, 235, 237, 238, 276, 277, 280, 281, 283, 284, 285, 287, 296, 299, 300, 301, 302, 308, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 347, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "low": [82, 91, 96, 97, 100, 379, 382], "lower": [17, 90, 273, 339, 340, 341, 342, 350, 359, 367, 368, 369, 382, 452, 453], "lower_triangular": 452, "lowest": 379, "lp": 244, "lr": [15, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "lr_lambda": 353, "lr_schedul": 357, "lrschedul": 357, "ls_init_valu": 77, "lu": 21, "lucid": [0, 1, 2, 5, 6, 7, 8, 11, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 377, 406, 440, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465], "m": [70, 85, 145, 199, 200, 203, 289, 330, 331, 333, 334, 338, 339, 342, 354, 362, 363, 364, 365, 366, 400, 452, 453], "m1": 15, "m2": 15, "m3": 15, "m_": [362, 363, 364, 365, 366, 452, 453], "m_m": 340, "m_t": [340, 365, 366], "maaten": 85, "mac": 15, "machin": [3, 7, 8, 24, 85, 156, 265, 338, 362, 373, 381], "magnitud": [223, 255, 336, 367, 368, 467], "mai": [3, 10, 12, 14, 15, 19, 21, 24, 100, 200, 202, 244, 258, 298, 304, 313, 348, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 374, 383, 436, 461, 467], "main": [25, 82, 200, 397, 400, 452, 453], "maintain": [24, 30, 40, 45, 69, 70, 71, 72, 80, 85, 90, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144, 160, 161, 162, 168, 169, 170, 172, 173, 174, 175, 179, 196, 197, 199, 200, 201, 203, 210, 223, 270, 271, 274, 275, 276, 277, 283, 296, 298, 299, 300, 301, 302, 317, 318, 319, 321, 322, 323, 362, 367, 458, 461, 465], "major": 15, "make": [1, 3, 10, 30, 42, 43, 46, 47, 73, 82, 85, 86, 91, 93, 95, 96, 97, 99, 100, 102, 112, 163, 166, 175, 180, 181, 182, 183, 184, 188, 189, 191, 194, 200, 203, 284, 312, 313, 324, 330, 333, 346, 361, 362, 363, 364, 373, 375, 383, 389, 442, 448, 456, 467], "manag": [197, 199, 200, 201, 202, 203, 346, 358, 372, 374, 375, 383], "manhattan": 23, "mani": 155, "manipul": [10, 12, 199, 201, 467], "manner": [10, 12, 13, 178, 200, 203, 371], "manual": [10, 233, 234, 238, 311, 312, 315, 374], "map": [12, 14, 77, 85, 110, 111, 112, 123, 133, 140, 197, 211, 213, 222, 240, 265, 284, 287, 298, 304, 320, 336, 436], "mark": 441, "marri": 85, "mask": [85, 196, 215, 289, 290, 296, 299, 300, 301, 302, 338, 339, 340, 341, 342, 441, 452, 453], "masked_fil": 440, "match": [10, 14, 15, 26, 197, 200, 203, 215, 233, 235, 237, 243, 259, 260, 261, 297, 336, 347, 415, 435, 445, 446, 448, 451, 454, 459, 467], "math": [289, 412, 423, 429], "mathbb": [289, 448], "mathbf": [12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 150, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 230, 232, 257, 262, 263, 264, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 290, 292, 293, 294, 296, 299, 300, 301, 302, 304, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 329, 330, 331, 332, 333, 334, 387, 388, 389, 393, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 437, 439, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465], "mathcal": [270, 272, 274, 296, 299, 300, 301, 302, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324], "mathemat": [15, 21, 259, 260, 261, 460, 462, 463, 464], "mathrm": 24, "matmul": 406, "matric": [16, 18, 19, 21, 24, 26, 27, 289, 342, 387, 388, 389, 400, 442, 452, 453], "matrix": [12, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 27, 30, 220, 230, 255, 308, 309, 336, 346, 387, 428, 442], "matrix_pow": 20, "matthew": 85, "max": [10, 23, 130, 145, 209, 244, 252, 253, 254, 255, 278, 279, 281, 282, 332, 333, 334, 336, 349, 350, 355, 364, 390, 406, 411], "max_lr": 350, "max_norm": [255, 336], "max_pool": [332, 333, 334], "max_pool1d": [229, 251], "max_pool2d": [229, 251], "max_pool3d": [229, 251], "max_valu": 411, "maxim": [3, 48, 101], "maximum": [23, 281, 282, 332, 333, 334, 349, 350, 362, 364, 406, 411, 418, 463], "maxpool": [28, 152], "maxpool1d": [306, 335], "maxpool1dmodel": 332, "maxpool2d": [200, 203, 293, 306, 335], "maxpool2dmodel": 333, "maxpool3d": [294, 306, 335], "maxpool3dmodel": 334, "mean": [5, 6, 7, 8, 10, 12, 13, 14, 25, 110, 111, 155, 196, 210, 216, 217, 218, 221, 233, 234, 235, 237, 238, 239, 242, 259, 260, 261, 272, 276, 277, 278, 280, 281, 283, 284, 287, 294, 296, 304, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 355, 362, 363, 364, 365, 366, 367, 372, 380, 406, 411, 415, 416, 417, 418, 420, 423, 425, 427, 431, 432, 433, 456, 459, 467], "meaning": [13, 203], "measur": [311, 312, 314, 315], "mechan": [30, 110, 111, 130, 140, 144, 154, 156, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 174, 179, 180, 181, 182, 183, 184, 187, 188, 190, 202, 230, 289, 436], "media": 163, "medium": [47, 51, 70, 85, 98, 99, 102, 163, 168], "meet": 85, "mem_is_caus": [339, 340], "mem_key_padding_mask": [338, 339, 340], "mem_mask": [338, 339, 340], "membership": 311, "memori": [2, 3, 15, 54, 174, 338, 339, 340, 374, 398, 399], "merg": [12, 304], "meshgrid": 440, "metal": [371, 384], "method": [3, 10, 13, 15, 16, 21, 60, 130, 150, 151, 199, 200, 201, 202, 203, 233, 234, 235, 237, 238, 270, 271, 274, 275, 311, 312, 313, 314, 315, 344, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 383], "metric": 355, "mha": 289, "mid": [80, 194], "mid_channel": [96, 97], "middl": 373, "might": 346, "migrat": 15, "mileston": 354, "min": [278, 279, 282, 349, 350, 355, 391, 406, 411], "min_lr": 355, "min_valu": 411, "mind": [0, 3, 200, 203, 374], "mingx": 85, "mini": 1, "minim": [4, 78, 85, 92, 203, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 358], "minima": 350, "minimalist": 15, "minimum": [349, 350, 355, 406, 411, 420], "minu": 284, "mirror": [403, 405], "mismatch": [10, 12, 14, 60, 197, 304, 346, 347], "miss": [197, 346], "mitig": [208, 276, 280, 283, 317, 318, 319], "mix": 77, "mixer": 77, "mlp": [15, 77, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 266], "mlp_dim": 190, "mlp_ratio": [77, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179], "mlx": [371, 384], "mnist": [4, 7, 9, 87, 88], "mnist_train": [4, 8], "mobil": [85, 90, 91, 92, 93, 95, 96, 97, 100, 171], "mobilenet": [91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 282], "mobilenet_v2": 85, "mobilenet_v3": [96, 97], "mobilenet_v3_larg": 85, "mobilenet_v3_smal": 85, "mobilenet_v4": [98, 99, 100, 101, 102], "mobilenet_v4_conv_larg": 85, "mobilenet_v4_conv_medium": 85, "mobilenet_v4_conv_smal": 85, "mobilenet_v4_hybrid_larg": 85, "mobilenet_v4_hybrid_medium": 85, "mobilenetv2": [85, 91], "mobilenetv3": [85, 92, 96, 97], "mode": [15, 227, 239, 242, 257, 270, 271, 296, 298, 299, 300, 301, 302, 344, 350, 355, 384, 443], "model": [1, 3, 4, 10, 15, 22, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 212, 215, 222, 255, 258, 259, 260, 261, 266, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 296, 298, 299, 300, 304, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 321, 324, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 374, 375, 383, 456, 457, 467], "model_b0": 59, "model_b7": 59, "model_kwarg": 155, "model_tini": 77, "moder": [43, 47, 81, 99, 134, 175], "modern": [15, 39, 40, 77, 85], "modif": [151, 203, 374], "modifi": [15, 29, 98, 112, 150, 153, 199, 200, 201, 202, 268, 270, 271, 272, 273, 274, 275, 296, 348, 372, 374, 381, 384, 439, 441, 447, 455], "modul": [5, 6, 7, 8, 10, 15, 28, 29, 30, 39, 40, 59, 60, 73, 76, 77, 82, 83, 84, 85, 86, 90, 91, 92, 93, 102, 112, 123, 130, 140, 145, 150, 152, 153, 155, 156, 159, 164, 165, 178, 179, 196, 198, 199, 200, 201, 202, 203, 223, 259, 260, 261, 262, 263, 264, 265, 266, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 346, 347, 348, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 375, 383, 457, 467], "modular": [3, 15, 154, 156, 197, 200, 203, 346, 467], "moduledict": [200, 201, 203, 204], "modulelist": [202, 203, 204], "moment": [362, 363, 364, 365, 366], "momentum": [239, 242, 259, 260, 261, 317, 318, 319, 321, 322, 323, 350, 359, 365, 367, 369], "momentum_decai": 365, "monitor": 355, "monoton": 286, "moor": 24, "more": [3, 4, 7, 10, 19, 42, 112, 119, 158, 162, 167, 168, 169, 173, 185, 186, 188, 189, 199, 200, 203, 222, 262, 263, 264, 276, 299, 300, 301, 302, 338, 346, 347, 358, 359, 360, 363, 364, 367, 368, 369, 380, 389, 431, 450, 452, 453, 467], "most": [16, 46, 85, 166, 333, 457, 458, 467], "move": [15, 359, 367], "mse": [235, 237, 313, 314], "mse_loss": [15, 229, 236], "mseloss": [306, 316], "mu": [30, 272, 317, 318, 319, 321, 322, 323, 324, 433], "mu_c": 459, "mu_i": [321, 322, 323], "much": [166, 467], "mul": 392, "multi": [3, 4, 77, 83, 85, 140, 141, 142, 143, 156, 160, 161, 162, 163, 164, 165, 170, 171, 172, 173, 175, 176, 177, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 212, 215, 234, 238, 266, 285, 289, 312, 315, 338, 340, 342, 384, 419, 427, 433], "multidimension": [378, 382, 398], "multiheadattent": [291, 306], "multipl": [1, 3, 12, 15, 16, 22, 26, 28, 112, 130, 144, 201, 202, 203, 220, 257, 258, 265, 266, 289, 296, 299, 300, 301, 302, 304, 312, 315, 339, 341, 346, 348, 351, 355, 373, 376, 378, 379, 380, 382, 387, 392, 398, 399, 428, 436, 448, 456, 461, 467], "multipli": [22, 94, 202, 232, 309, 344, 354, 355, 356, 368, 393, 406, 417], "multisteplr": 357, "must": [0, 1, 3, 15, 17, 18, 19, 21, 22, 25, 26, 27, 155, 197, 199, 200, 201, 202, 203, 223, 243, 289, 296, 298, 299, 300, 301, 302, 315, 336, 338, 340, 342, 344, 347, 352, 374, 376, 431, 435, 436, 437, 439, 441, 443, 445, 446, 448, 450, 451, 452, 453, 455, 458, 459, 460, 461, 462, 464], "mx": [371, 384], "my_simple_model": 375, "mymodel": [197, 198, 346, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "myoptim": [347, 358], "n": [12, 22, 23, 85, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 163, 199, 200, 203, 215, 216, 217, 218, 220, 222, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 265, 270, 272, 274, 289, 290, 292, 293, 294, 301, 302, 307, 309, 311, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333, 334, 338, 339, 340, 341, 342, 400, 419, 431, 433], "n1": 23, "nabla_": [360, 361, 362, 363, 364, 365, 366, 368], "nabla_t": 366, "nadam": 370, "nair": [5, 6], "name": [10, 12, 13, 14, 85, 155, 163, 197, 199, 201, 203, 304, 375], "nan": [25, 27], "nano": [50, 85], "natur": [24, 154, 292, 307, 329, 332, 338, 394, 415, 416], "ndarrai": [15, 196, 198, 376, 384, 397, 399, 403, 405, 434], "ndim": [25, 27, 198, 384], "ne": 22, "nearest": [257, 344], "nearli": 384, "necessari": [4, 5, 6, 7, 8, 15, 24, 374, 439, 455], "need": [2, 4, 13, 14, 102, 163, 200, 201, 202, 212, 307, 338, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 374, 398, 399, 456, 457, 467], "neg": [22, 24, 27, 205, 238, 258, 276, 280, 281, 283, 312, 315, 368, 437], "negative_slop": [208, 280], "neglect": 202, "neighbor": 257, "neq": 23, "nest": [155, 200, 203, 346], "nestedmodel": 155, "nesterov": 365, "net": [85, 152], "network": [3, 4, 10, 13, 28, 29, 30, 39, 40, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 76, 82, 85, 89, 90, 93, 94, 98, 101, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 130, 131, 132, 133, 134, 135, 140, 145, 153, 154, 155, 156, 161, 163, 190, 196, 197, 198, 199, 200, 201, 202, 203, 206, 209, 210, 211, 212, 213, 216, 217, 218, 222, 223, 230, 232, 239, 258, 265, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 324, 329, 330, 331, 332, 333, 334, 336, 338, 340, 342, 346, 347, 358, 359, 367, 369, 382, 383, 384, 396, 402, 404, 418, 420, 443, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467], "neural": [3, 4, 10, 13, 28, 29, 30, 39, 59, 61, 62, 63, 64, 65, 66, 67, 68, 82, 85, 89, 153, 154, 155, 163, 196, 197, 198, 199, 200, 201, 202, 203, 206, 209, 210, 211, 212, 213, 216, 217, 218, 223, 230, 232, 239, 258, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 324, 329, 330, 331, 332, 333, 334, 336, 346, 347, 358, 359, 367, 369, 382, 383, 384, 396, 402, 404, 418, 420, 443, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467], "neuralnetwork": [278, 279, 281, 286], "neuron": 280, "never": 461, "new": [14, 197, 198, 205, 206, 208, 209, 210, 211, 213, 230, 232, 257, 266, 270, 271, 272, 273, 274, 275, 347, 352, 355, 375, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 399, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 432, 434, 435, 437, 439, 441, 443, 445, 446, 447, 450, 451, 452, 453, 454, 455], "new_tensor": 428, "next": [203, 456], "nll": 238, "nll_loss": [229, 236], "nllloss": [306, 316], "nlp": [255, 336], "nn": [5, 6, 7, 8, 28, 30, 39, 40, 54, 59, 60, 73, 77, 82, 86, 90, 91, 92, 93, 112, 123, 130, 136, 137, 138, 139, 140, 144, 145, 152, 155, 159, 164, 165, 171, 172, 173, 175, 176, 177, 178, 179, 204, 207, 214, 219, 228, 231, 236, 241, 251, 256, 267, 269, 288, 291, 295, 303, 305, 306, 310, 316, 325, 335, 337, 343, 345, 347, 348, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 375, 457, 467], "no_grad": [15, 372], "node": [15, 384], "nois": [27, 383], "non": [19, 22, 24, 27, 163, 202, 206, 208, 209, 270, 271, 276, 277, 278, 280, 281, 282, 283, 284, 286, 287, 296, 299, 300, 301, 302, 338, 339, 340, 341, 342, 362, 363, 374, 394, 411], "nonconform": 15, "none": [0, 1, 2, 5, 6, 7, 8, 23, 30, 59, 60, 73, 77, 82, 86, 90, 91, 92, 93, 103, 112, 150, 155, 159, 164, 165, 178, 179, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 223, 230, 232, 233, 234, 235, 237, 238, 239, 242, 243, 255, 258, 259, 260, 261, 262, 263, 264, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 347, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 373, 376, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 437, 439, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 462, 464, 465], "norm": [16, 20, 159, 164, 165, 178, 179, 244, 255, 336, 339, 341, 364], "norm_first": [338, 340, 342], "norm_lay": [159, 164, 165, 171, 172, 173, 175, 176, 177, 178, 179], "norm_typ": [255, 336], "normal": [5, 6, 7, 8, 30, 39, 85, 130, 159, 164, 165, 171, 172, 173, 175, 176, 177, 178, 179, 184, 185, 186, 187, 188, 189, 206, 210, 212, 213, 222, 239, 240, 242, 243, 255, 259, 260, 261, 269, 270, 274, 277, 283, 285, 296, 317, 318, 319, 320, 321, 322, 323, 324, 336, 338, 339, 340, 341, 342, 367, 380, 383, 456, 466, 467], "normalized_shap": [243, 324], "notat": [10, 12, 13, 14, 304], "note": [216, 296], "noth": [221, 224, 225, 226], "notimplementederror": [2, 197, 347], "notin": 411, "nov": 85, "novel": [7, 85], "now": 15, "np": [112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 196, 198, 265, 312, 315, 336, 371, 384, 389, 396, 397, 400, 402, 404, 405, 428, 434, 457], "npy": [5, 6, 7, 8], "num": [339, 341, 401], "num_block": 30, "num_class": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 285, 312, 315], "num_decoder_lay": [156, 338], "num_embed": [255, 336], "num_encoder_lay": [156, 338], "num_featur": [203, 259, 260, 261, 317, 318, 319, 321, 322, 323], "num_head": [30, 156, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 289, 338, 339, 340, 341, 342], "num_init_featur": [54, 55, 56, 57, 58], "num_lay": [190, 339, 341], "num_paramet": 202, "num_stag": 165, "number": [0, 1, 2, 5, 6, 7, 8, 10, 12, 14, 18, 19, 21, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 200, 202, 203, 215, 216, 217, 218, 220, 225, 226, 227, 230, 232, 234, 238, 239, 240, 242, 245, 246, 247, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 270, 271, 274, 275, 284, 289, 292, 293, 294, 304, 307, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 349, 350, 354, 355, 356, 359, 371, 378, 381, 382, 384, 394, 396, 398, 400, 401, 418, 419, 420, 432, 433, 436, 437, 439, 443, 445, 446, 447, 449, 451, 455, 459, 461, 462, 464, 467], "numer": [13, 21, 24, 222, 233, 234, 239, 240, 242, 243, 244, 259, 260, 261, 282, 297, 311, 312, 317, 318, 319, 320, 321, 322, 323, 324, 338, 340, 342, 360, 361, 362, 363, 364, 365, 366, 367, 384, 386, 396, 397, 398, 399, 400, 401, 402, 404, 434, 457], "numpi": [15, 196, 198, 312, 315, 371, 384, 389, 428, 431, 435, 443, 445, 451, 457, 467], "o": [3, 289, 331, 334, 402, 403], "object": [1, 3, 16, 85, 140, 184, 185, 186, 187, 188, 197, 201, 202, 314, 346, 371, 374, 385, 386, 390, 391, 392, 395, 434], "observ": 362, "obtain": 1, "occur": [14, 258, 374, 375, 437], "occurr": 22, "odot": [296, 299, 300, 301, 302], "off": [43, 99, 372], "offer": [4, 10, 40, 41, 43, 53, 80, 99, 162, 168, 169, 171, 173, 191, 346, 358, 383, 467], "offset": 400, "often": [22, 121, 122, 216, 217, 218, 220, 255, 297, 312, 315, 396, 404, 457, 461, 465, 467], "old": 355, "older": 365, "onc": 374, "one": [0, 13, 136, 137, 138, 139, 144, 202, 203, 212, 216, 232, 248, 252, 259, 260, 261, 283, 284, 285, 292, 300, 312, 315, 317, 321, 329, 332, 344, 347, 373, 380, 395, 403, 418, 420, 438, 444, 450, 457], "ones": [15, 230, 232, 292, 293, 294, 309, 317, 318, 319, 321, 322, 323, 324, 346, 400, 403, 406, 436], "ones_lik": 406, "onli": [155, 257, 278, 281, 296, 297, 299, 300, 301, 302, 311, 312, 315, 317, 318, 319, 321, 322, 323, 324, 332, 333, 334, 368, 372, 396, 411, 418, 420, 428, 431, 443, 444, 446, 447, 449, 452, 453], "onto": [25, 27], "openml": [5, 6, 7, 8, 15], "oper": [3, 10, 12, 13, 14, 15, 16, 21, 24, 30, 110, 111, 130, 131, 132, 133, 134, 135, 174, 196, 197, 200, 205, 206, 208, 209, 210, 211, 213, 215, 216, 217, 218, 220, 223, 227, 230, 232, 245, 246, 247, 248, 249, 250, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 290, 292, 293, 294, 296, 298, 299, 300, 301, 302, 304, 307, 308, 309, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 346, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 398, 399, 402, 404, 415, 416, 417, 418, 419, 420, 423, 425, 427, 428, 431, 433, 437, 439, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 459, 465], "operand": 384, "operatornam": [22, 24, 289, 338, 339, 340, 341, 342], "opposit": [359, 447], "optim": [3, 10, 13, 15, 16, 22, 24, 25, 27, 39, 44, 45, 48, 51, 53, 54, 60, 69, 70, 71, 72, 73, 74, 75, 76, 79, 82, 83, 84, 85, 91, 92, 96, 97, 99, 100, 101, 102, 166, 184, 185, 196, 198, 201, 202, 220, 292, 293, 294, 336, 346, 349, 350, 351, 352, 353, 354, 355, 356, 374], "optimizer_st": [347, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "option": [1, 5, 6, 7, 8, 10, 12, 13, 14, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 208, 212, 215, 217, 218, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 270, 271, 272, 273, 274, 275, 276, 280, 285, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 347, 349, 350, 351, 352, 353, 354, 355, 356, 359, 367, 369, 376, 378, 379, 380, 382, 384, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 418, 419, 420, 427, 432, 433, 434, 436, 437, 442, 445, 447, 448, 449, 450, 452, 453, 457, 461, 462, 464], "ord": [23, 244], "order": [1, 3, 10, 15, 23, 27, 199, 200, 201, 202, 203, 432, 456], "ordered_dict": 203, "ordereddict": [197, 199, 200, 203], "organ": [199, 200, 201, 203, 375], "orient": 467, "origin": [31, 32, 33, 34, 35, 36, 37, 38, 40, 75, 89, 163, 178, 179, 189, 221, 258, 265, 287, 436, 443, 444, 445, 446, 447, 451, 454, 465], "orthogon": [24, 25, 27], "orthonorm": 25, "oscil": [359, 367, 369], "other": [2, 3, 21, 75, 84, 86, 89, 99, 164, 196, 197, 200, 203, 270, 271, 296, 297, 346, 347, 372, 374, 383, 396, 398, 402, 404, 431, 442, 467], "otherwis": [113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 205, 208, 209, 210, 212, 223, 276, 278, 279, 280, 281, 283, 285, 298, 299, 300, 301, 302, 313, 329, 330, 331, 332, 333, 334, 339, 341, 347, 368, 375, 390, 391, 418, 420, 441, 452, 453], "otim": [24, 230, 307], "out": [0, 3, 4, 10, 15, 205, 206, 208, 209, 210, 211, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 270, 271, 274, 275, 290, 292, 293, 294, 296, 298, 299, 300, 301, 302, 304, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 340, 359, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 437, 438, 439, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455], "out_channel": [86, 92, 96, 97, 200, 203, 259, 260, 261, 262, 263, 264, 266, 292, 293, 294, 318, 319, 329, 330, 331, 332, 333, 334, 346], "out_featur": [199, 200, 203, 230, 232, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 293, 294, 296, 299, 300, 307, 309, 311, 312, 313, 314, 315, 317, 321, 324, 329, 330, 331, 332, 333, 334], "outcom": [461, 462, 464], "outer": 406, "outlier": [235, 313], "output": [0, 1, 2, 10, 14, 15, 22, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 230, 232, 244, 245, 246, 247, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 346, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 373, 374, 376, 379, 380, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 397, 399, 400, 402, 404, 405, 415, 416, 417, 418, 419, 420, 423, 425, 427, 428, 431, 432, 433, 441, 442, 443, 445, 447, 448, 451, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465], "output_height": 220, "output_lay": [200, 203], "output_s": [200, 245, 246, 247, 326, 327, 328], "output_width": 220, "output_with_norm": [255, 336], "output_with_pad": [255, 336], "outsid": [0, 298], "over": [0, 1, 2, 3, 13, 16, 91, 101, 110, 111, 140, 152, 197, 200, 202, 212, 245, 246, 247, 265, 285, 292, 293, 294, 312, 315, 317, 318, 319, 321, 322, 323, 324, 327, 328, 329, 330, 331, 332, 333, 334, 348, 350, 356, 359, 360, 361, 362, 363, 378, 382, 418, 419, 420, 427, 431, 433, 461, 462, 464], "overal": [150, 223], "overdetermin": 24, "overfit": [1, 28, 152, 224, 227, 297, 299, 300, 301, 302, 359, 362, 367, 369], "overhead": [85, 92, 265], "overlap": 163, "overli": 282, "overrid": [2, 3, 99, 100, 101, 178, 179], "overridden": [197, 347], "overshoot": 348, "overwrit": [199, 201], "own": [4, 15, 199, 200, 201, 202, 216, 217, 218, 275, 346, 459], "p": [23, 24, 59, 198, 201, 202, 221, 222, 223, 224, 225, 226, 227, 244, 255, 296, 297, 299, 300, 301, 302, 329, 332, 333, 336, 461, 462, 464, 467], "p_d": [331, 334], "p_h": [330, 331, 334], "p_w": [330, 331, 334], "packag": [2, 3, 4, 10, 16, 154, 346, 358, 375, 381, 383, 457, 467], "pad": [86, 200, 203, 216, 217, 218, 220, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 259, 260, 261, 262, 263, 264, 266, 292, 293, 294, 318, 319, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 440], "pad_after_dim1": 443, "pad_after_dim2": 443, "pad_before_dim1": 443, "pad_before_dim2": 443, "pad_width": 443, "padding_height": 220, "padding_idx": [255, 336], "padding_width": 220, "pair": 230, "panda": 15, "pang": 85, "paper": [31, 32, 33, 34, 35, 36, 37, 38, 74, 174], "paradigm": 85, "parallel": [1, 3, 85, 140, 154, 163, 289], "param": [197, 198, 201, 202, 347, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "param1": 197, "param_dict": 201, "param_group": [347, 358], "param_groups_setup": 347, "param_list": 202, "param_s": 375, "paramet": [0, 2, 15, 85, 87, 88, 89, 163, 197, 346, 347, 348, 358, 383, 467], "parameter": 93, "parameterdict": 204, "parameterlist": 204, "parent": [15, 346, 384], "pars": 371, "part": [196, 197, 275, 336, 346, 372, 374, 383, 396, 397, 400, 402, 403, 404, 405, 436, 448, 452, 453, 457, 467], "partialparticip": [15, 198, 457], "particular": [199, 201], "particularli": [24, 91, 99, 124, 125, 126, 127, 128, 129, 200, 201, 202, 203, 212, 222, 232, 259, 260, 261, 262, 263, 264, 285, 309, 312, 315, 321, 322, 323, 324, 349, 363, 372, 375, 401, 456], "partit": 448, "pass": [2, 15, 24, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 155, 174, 197, 198, 199, 200, 201, 202, 203, 257, 259, 260, 261, 265, 266, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 293, 294, 296, 297, 298, 299, 300, 301, 302, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 321, 324, 329, 330, 331, 332, 333, 334, 338, 339, 340, 341, 342, 346, 384, 401, 419, 427, 431, 432, 433, 437, 439, 444, 446, 449, 452, 453, 455, 457, 467], "past": [359, 360, 362, 367], "patch": [163, 164, 165, 178, 179, 190, 191, 192, 193, 194, 195, 220, 330], "patch_norm": [178, 179], "patch_siz": [164, 165, 171, 172, 173, 174, 175, 176, 177, 178, 179, 190, 191, 192, 193, 194, 195], "path": [3, 5, 6, 7, 8, 39, 40, 77, 165, 223, 298], "pathwai": 85, "patienc": 355, "pattern": [10, 12, 13, 14, 15, 30, 85, 209, 265, 281, 292, 293, 294, 304], "pedagog": 15, "penal": [359, 367, 369], "penalti": [360, 361, 362, 363, 364, 365, 366], "penros": 24, "per": [1, 12, 92, 124, 125, 126, 127, 128, 129, 141, 142, 143, 165, 171, 172, 173, 175, 176, 177, 215, 245, 289, 304, 321, 322, 323, 324, 326, 342, 350, 435], "perceptron": 77, "perform": [3, 10, 13, 15, 16, 17, 24, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 60, 69, 70, 71, 72, 77, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 92, 93, 94, 95, 99, 100, 101, 102, 120, 136, 137, 138, 139, 140, 145, 152, 158, 160, 161, 162, 163, 166, 167, 168, 169, 171, 174, 179, 185, 186, 187, 194, 197, 198, 202, 206, 215, 216, 217, 218, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 262, 263, 264, 265, 266, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 292, 293, 294, 296, 299, 300, 301, 302, 304, 307, 308, 309, 317, 318, 319, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 344, 347, 348, 352, 355, 372, 374, 381, 383, 385, 386, 389, 392, 395, 415, 418, 420, 427, 432, 435, 448, 456, 458, 460, 465, 467], "period": 349, "permut": [12, 304, 432], "persist": [196, 376, 378, 379, 380, 382, 398, 399], "perturb": [19, 26, 27, 467], "phase": 30, "phi": [206, 277], "pi": [206, 277, 349, 412, 423, 429], "pico": [51, 85], "piecewis": [278, 279], "pil": [457, 467], "pinv": 20, "pioneer": 85, "pip": 15, "pipelin": [5, 6, 7, 8, 304, 383, 456, 457, 459], "pixel": [5, 6, 7, 8, 257, 344, 459, 461], "place": [268, 270, 271, 272, 273, 274, 275, 384, 441, 447], "placehold": [197, 308], "placement": [15, 384], "plai": 383, "platform": 371, "plot": 442, "point": [4, 258, 354, 372], "pointwis": [262, 263, 264], "pool": [10, 28, 85, 86, 87, 88, 89, 103, 112, 123, 130, 140, 145, 152, 245, 246, 247, 248, 249, 250, 252, 253, 254, 265, 266, 293, 294, 326, 327, 328, 329, 330, 331, 332, 333, 334, 418, 420], "pool1": 203, "pool2": 203, "poorli": 21, "popul": 197, "popular": [4, 85], "portion": [436, 452, 453, 467], "pose": 24, "posit": [1, 17, 22, 30, 85, 156, 178, 179, 190, 197, 203, 215, 258, 276, 280, 281, 283, 290, 329, 330, 331, 332, 333, 334, 338, 339, 340, 341, 342, 368, 373, 394, 436, 441, 445, 451, 460], "possibl": 467, "potenti": [24, 308, 367, 449], "power": [10, 15, 22, 50, 85, 91, 96, 97, 103, 165, 166, 168, 172, 175, 184, 192, 265, 304, 348, 373, 374, 406, 456, 457, 467], "pp": [85, 163], "practic": [24, 80, 312, 315], "practition": 467, "pre": [30, 69, 70, 71, 72, 85, 113, 117, 118], "preactbottleneck": [113, 117, 118], "preced": [85, 198, 344], "precis": [176, 371], "preconfigur": [61, 62, 63, 64, 65, 66, 67, 68, 83, 84], "pred": 15, "predecessor": [40, 165], "predefin": [4, 31, 32, 33, 34, 35, 36, 37, 38, 154, 180, 181, 182, 183, 184, 186, 187, 188, 189, 191, 192, 193, 194, 195, 200, 283, 336, 348, 371], "predict": [150, 163, 178, 180, 181, 182, 183, 311, 312, 314, 315], "prefer": 356, "prefix": [197, 375], "prepar": [3, 373, 443, 445, 451, 457, 467], "prepend": [197, 435], "preprint": [85, 163], "preprocess": [3, 4, 220, 258, 383, 456, 457, 467], "present": [311, 312, 313, 315, 317, 318, 319, 321, 322, 323, 324, 330], "preserv": [13, 85, 166, 221, 223, 258, 296, 298, 396, 397, 400, 402, 403, 404, 405, 419, 427, 428, 433, 436, 447], "preset": 4, "prevent": [1, 10, 15, 199, 200, 201, 202, 203, 215, 224, 227, 244, 282, 290, 297, 299, 300, 301, 302, 311, 312, 341, 342, 348, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 374], "previou": [85, 359, 368, 374], "previous": [352, 362], "primarili": 203, "principl": 85, "print": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 459, 460, 461, 462, 463, 464, 465], "print_grad": 384, "priorit": [96, 97, 101, 266, 278], "prob": 376, "probabilist": 383, "probabl": [59, 75, 156, 164, 178, 179, 190, 206, 212, 215, 221, 222, 223, 224, 225, 226, 227, 233, 277, 285, 289, 290, 296, 297, 298, 299, 300, 301, 302, 311, 312, 315, 338, 340, 342, 376, 461, 462, 464, 467], "problem": [24, 25, 27, 85, 208, 276, 280, 366], "proceed": [85, 163], "process": [2, 3, 4, 22, 25, 27, 28, 39, 83, 85, 110, 111, 112, 140, 151, 152, 154, 163, 164, 178, 202, 216, 217, 218, 242, 258, 259, 260, 261, 265, 266, 283, 287, 292, 294, 307, 317, 318, 319, 321, 322, 323, 324, 329, 331, 332, 334, 338, 339, 341, 359, 442, 457, 458, 459, 460, 465, 467], "produc": [15, 28, 152, 155, 245, 246, 247, 265, 292, 293, 294, 326, 327, 328, 381, 383], "product": [25, 27, 164, 165, 215, 279, 284, 286, 289, 290, 307, 324, 346, 387, 388, 392, 393], "program": [372, 383], "progress": [60, 163, 164, 166, 167, 168, 169, 170, 351, 353, 354, 361], "project": [25, 27, 156, 159, 164, 165, 170, 171, 172, 173, 175, 176, 177, 178, 179, 289], "projector": 24, "promin": [329, 331, 332, 333, 334], "promot": [203, 312, 315, 346], "propag": [15, 18, 19, 21, 24, 25, 26, 27, 85, 197, 203, 230, 232, 257, 265, 330, 331, 367, 368, 376, 387, 388, 389, 393, 418, 420, 436, 442, 443, 446, 454], "proper": [255, 436], "properli": [0, 202, 212, 285, 346, 348], "properti": [16, 18, 21, 22, 206, 210, 221, 277, 283, 296, 361, 366], "proport": [5, 6, 7, 8, 433], "proportion": 465, "propos": 174, "provid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 29, 41, 50, 52, 73, 74, 75, 82, 85, 86, 93, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 145, 150, 151, 153, 154, 156, 166, 168, 169, 176, 178, 179, 187, 190, 192, 193, 197, 199, 200, 201, 202, 206, 215, 232, 246, 247, 255, 258, 290, 304, 311, 312, 313, 315, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 341, 344, 346, 347, 348, 352, 353, 358, 359, 360, 367, 369, 372, 374, 381, 383, 384, 389, 396, 403, 418, 420, 432, 434, 445, 449, 451, 467], "pseudo": [21, 24], "purpos": [41, 46, 50, 378, 382, 396, 402, 404], "pvt": [165, 166, 167, 168, 169, 170], "pvt_huge": 163, "pvt_larg": 163, "pvt_medium": 163, "pvt_small": 163, "pvt_tini": 163, "pvt_v2": [171, 172, 173, 174, 175, 176, 177], "pvt_v2_b0": 163, "pvt_v2_b1": 163, "pvt_v2_b2": [163, 174], "pvt_v2_b2_li": 163, "pvt_v2_b3": 163, "pvt_v2_b4": 163, "pvt_v2_b5": 163, "pvtv2": [163, 171, 172, 173, 174, 175, 176, 177], "pypi": 15, "pyramid": [164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177], "python": [15, 371, 384], "pytorch": [15, 434], "q": [25, 85, 165, 215, 289, 290, 342], "q_i": [30, 289], "qk": [30, 340, 342], "qk_scale": [164, 165, 178, 179], "qkv_bia": [164, 165, 171, 172, 173, 175, 176, 177, 178, 179], "qr": 20, "quad": [24, 255, 289, 311, 312, 313, 314, 315, 332, 333, 334, 339, 341, 385, 386, 390, 391, 392, 395, 452, 453, 458], "quadrat": [165, 174, 313], "qualifi": 355, "queri": [159, 164, 165, 171, 172, 173, 175, 176, 177, 178, 179, 215, 289, 290, 342], "quickli": 348, "quoc": 85, "quotient": 386, "r": [13, 14, 25, 30, 85, 289, 448, 461, 462, 463, 464], "r_t": 366, "radam": 370, "radix": [103, 104, 105, 106, 107, 108, 109, 110, 111], "rais": [0, 1, 2, 197, 346, 347, 394, 435], "rand": [377, 383], "randint": [377, 383], "randn": [12, 14, 15, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 94, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 150, 152, 215, 262, 263, 264, 265, 266, 289, 290, 304, 338, 339, 340, 341, 342, 346, 377, 381, 383], "random": [1, 2, 3, 12, 14, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 94, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 150, 215, 262, 263, 264, 265, 266, 289, 298, 304, 336, 338, 339, 340, 341, 342, 460, 461, 462, 463, 464, 467], "random_integ": 383, "random_tensor": 383, "randomcrop": [466, 467], "randomgrayscal": [466, 467], "randomhorizontalflip": [466, 467], "randomli": [1, 221, 223, 224, 225, 226, 227, 258, 296, 299, 300, 301, 302, 460, 461, 462, 463, 464, 467], "randomnoisedataset": [0, 1, 2], "randomrot": [466, 467], "randomverticalflip": 466, "rang": [0, 1, 15, 16, 30, 43, 52, 85, 102, 112, 120, 154, 163, 167, 188, 202, 211, 213, 216, 217, 223, 234, 238, 275, 282, 284, 287, 298, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 367, 369, 376, 379, 401, 408, 409, 411, 459, 463, 467], "rank": 24, "rasul": 7, "rate": [39, 40, 59, 60, 77, 164, 165, 178, 179, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "rather": [7, 12, 14, 201, 202, 304, 354, 363, 446], "ratio": [59, 77, 130, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 265, 266, 465], "ravel": 440, "raw": [212, 285, 312, 384], "rcond": 24, "re": [15, 198, 374], "reach": 354, "readabl": [10, 15, 199, 200, 201, 203, 304, 346], "readi": [3, 136, 137, 138, 139, 144, 154, 156], "real": [24, 27, 91, 284], "rearrang": [11, 220, 305, 306], "reassembl": 85, "recalibr": [85, 131, 133, 134, 136, 137, 138, 139, 265], "receiv": [332, 333, 334, 443, 452, 453], "recent": 367, "recept": [85, 140, 144, 174, 266], "reciproc": [24, 406, 416, 417, 425], "recognit": [85, 89, 110, 111, 163, 168, 178, 180, 181, 182, 183, 189, 293], "recommend": 15, "rectangular": 400, "rectif": 366, "rectifi": [208, 209, 280, 281, 366], "recurr": [163, 200, 324], "recurs": [155, 197], "red": 461, "reduc": [11, 28, 30, 85, 90, 112, 123, 140, 145, 152, 159, 163, 165, 174, 262, 263, 264, 265, 317, 318, 319, 321, 322, 323, 329, 330, 331, 332, 333, 334, 348, 351, 354, 355, 356, 365, 368, 374, 418, 419, 420, 427, 433, 461], "reducelronplateau": 357, "reduct": [10, 13, 27, 59, 130, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 233, 234, 235, 237, 238, 265, 266, 311, 312, 313, 314, 315, 349, 355, 356, 418, 420], "reevalu": 347, "refer": [4, 174, 197, 383, 397, 400, 437], "refin": [85, 187, 348], "reflect": [167, 372], "regardless": [24, 444], "region": [218, 222, 245, 246, 247, 257, 278, 297, 327, 328, 443, 458, 467], "regist": [15, 31, 32, 33, 34, 35, 36, 37, 38, 99, 121, 122, 124, 125, 126, 127, 128, 129, 151, 196, 197, 198, 202, 346, 375, 384], "register_buff": 196, "register_hook": 384, "register_model": [29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 141, 142, 143, 146, 147, 148, 149, 151, 153, 157, 158, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195], "register_paramet": 197, "registr": [15, 197, 346], "registri": [124, 125, 126, 127, 128, 129, 375], "registry_path": 375, "regress": [4, 237, 313, 314], "regul": [255, 336], "regular": [24, 28, 39, 59, 60, 75, 152, 178, 179, 223, 227, 290, 297, 299, 300, 301, 302, 354, 356, 359, 360, 361, 364, 365, 366, 367, 369], "reimagin": 85, "rel": [30, 85, 178, 179, 348, 355], "relat": [374, 400, 402], "relationship": [30, 166, 168, 465], "relev": [257, 359, 367, 369], "reli": [222, 374], "reliabl": [5, 6, 7, 8], "reliant": [299, 300, 301, 302], "relu": [15, 28, 85, 130, 145, 152, 155, 199, 200, 201, 203, 205, 207, 208, 229, 259, 260, 261, 265, 266, 270, 271, 274, 275, 276, 280, 282, 286, 288, 292, 293, 294, 306, 307, 308, 309, 338, 340, 342], "relu1": 203, "relu2": 203, "relu3": 203, "relu6": [288, 306], "remain": [5, 6, 7, 8, 15, 52, 196, 223, 243, 296, 298, 299, 300, 301, 302, 336, 368], "rememb": 383, "remov": [375, 449], "reorder": [10, 12, 304, 428, 447], "rep": 451, "repeat": [11, 440, 442, 451], "repetit": [10, 14, 445, 451], "replac": [7, 163, 338, 383, 441, 461], "replic": [14, 15, 339, 341, 435], "repr": 371, "repres": [7, 12, 13, 14, 21, 23, 27, 86, 93, 104, 105, 106, 107, 108, 109, 160, 161, 162, 164, 170, 197, 198, 203, 230, 232, 239, 242, 243, 255, 292, 293, 294, 304, 307, 309, 312, 315, 324, 336, 339, 347, 356, 358, 359, 365, 366, 367, 368, 369, 371, 376, 385, 386, 392, 395, 397, 419, 431, 432, 433, 442, 458, 460, 462, 463, 464, 465], "represent": [30, 85, 103, 110, 111, 121, 122, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 140, 144, 156, 163, 165, 166, 167, 168, 169, 172, 176, 177, 190, 255, 265, 330, 333, 336, 347], "reproduc": [376, 378, 379, 380, 381, 382, 383, 467], "requir": [2, 3, 4, 13, 15, 42, 48, 49, 81, 92, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 124, 125, 126, 127, 128, 129, 140, 158, 193, 195, 196, 199, 203, 205, 206, 208, 209, 210, 211, 213, 230, 232, 257, 265, 266, 275, 308, 312, 315, 346, 354, 372, 374, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 435, 437, 439, 441, 442, 443, 444, 445, 446, 449, 450, 451, 454, 455, 457, 458, 465], "requires_grad": [15, 196, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 220, 230, 232, 255, 257, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 292, 293, 294, 296, 299, 300, 301, 302, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 329, 330, 331, 332, 333, 334, 344, 346, 376, 378, 379, 380, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 441, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 457], "rescal": [233, 234, 238, 311, 312, 315], "research": [15, 346], "reset": [198, 349, 381, 384], "reshap": [10, 12, 130, 232, 293, 294, 304, 344, 373, 428, 440, 444], "resid": 384, "residu": [76, 82, 83, 84, 85, 91, 92, 95, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 131, 132, 133, 134, 135, 165, 340, 342], "residualblock": 112, "resili": 368, "resiz": [257, 456, 466, 467], "resnest": [104, 105, 106, 107, 108, 109, 110, 111], "resnest_101": 85, "resnest_14": 85, "resnest_200": 85, "resnest_26": 85, "resnest_269": 85, "resnest_50": 85, "resnest_50_1s4x24d": 85, "resnest_50_4s2x40d": 85, "resnet": [82, 83, 84, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 131, 132, 133, 134, 135, 140, 141, 142, 143, 265], "resnet_1001": 85, "resnet_101": 85, "resnet_152": 85, "resnet_18": 85, "resnet_200": 85, "resnet_269": 85, "resnet_34": 85, "resnet_50": 85, "resnet_arg": 140, "resnext": [124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144], "resnext_101_32x16d": 85, "resnext_101_32x32d": 85, "resnext_101_32x4d": 85, "resnext_101_32x8d": 85, "resnext_101_64x4d": 85, "resnext_50_32x4d": 85, "resolut": [30, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 77, 85, 136, 137, 138, 139, 144, 163, 165, 166, 174, 179, 384], "resolv": [12, 13, 14, 304, 371], "resourc": [15, 44, 45, 47, 48, 51, 52, 78, 85, 92, 96, 97, 98, 99, 100, 101, 102, 193, 374], "respect": [12, 15, 17, 18, 19, 21, 22, 23, 24, 25, 27, 86, 145, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 196, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 230, 232, 257, 266, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 292, 293, 294, 296, 299, 300, 301, 302, 304, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 329, 330, 331, 332, 333, 334, 350, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 411, 415, 416, 417, 418, 419, 420, 423, 425, 427, 431, 432, 433, 442, 443, 445, 451, 461], "respons": [85, 136, 137, 138, 139, 199, 240, 320, 358], "rest": [452, 453], "restor": [265, 352, 374], "restructur": 446, "result": [10, 12, 14, 17, 21, 22, 24, 85, 197, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 216, 217, 218, 220, 230, 232, 245, 246, 247, 248, 249, 250, 252, 253, 254, 257, 258, 266, 278, 282, 285, 289, 298, 304, 346, 347, 372, 374, 376, 378, 379, 380, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 420, 421, 422, 423, 424, 425, 426, 428, 429, 430, 431, 434, 437, 439, 442, 443, 444, 445, 446, 448, 449, 450, 451, 454, 455, 457, 460, 461, 467], "resum": [349, 350, 351, 352, 353, 354, 355, 356, 358], "retain": [163, 165, 198, 222, 297, 384, 396, 404, 418, 419, 420, 427, 433, 436, 441, 452, 453, 457], "retent": 457, "rethink": 85, "retriev": [0, 2, 199, 201, 202, 255], "return": [0, 1, 2, 3, 5, 6, 7, 8, 15, 31, 32, 33, 34, 35, 36, 37, 38, 82, 86, 100, 102, 130, 196, 197, 199, 200, 201, 202, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 292, 293, 294, 296, 298, 299, 300, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 321, 324, 329, 330, 331, 332, 333, 334, 339, 341, 346, 347, 352, 353, 355, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 375, 456, 467], "reus": [85, 457], "reusabl": [203, 298, 346, 456], "revers": [15, 203, 384, 432, 462, 464], "revert": 374, "revolution": 85, "rfloor": 356, "rgb": [5, 6, 30, 74, 75, 76, 83, 84, 159, 164, 178, 179], "rho": 360, "rho_": 366, "rho_t": 366, "rich": [15, 176], "richer": 166, "right": [22, 23, 24, 26, 27, 30, 206, 212, 244, 277, 285, 289, 311, 312, 313, 315, 317, 318, 319, 321, 322, 323, 324, 332, 333, 334, 340, 342, 428, 458], "rightarrow": [12, 289, 304, 448], "rmsprop": 370, "rob": 85, "robust": [41, 46, 79, 100, 188, 189, 222, 258, 296, 299, 300, 301, 302, 313, 346, 360, 460, 461, 463, 467], "roland": 7, "role": [383, 467], "roll": 440, "root": [4, 5, 6, 7, 8, 361, 367, 425], "rotat": [229, 256, 463, 467], "rotated_imag": 258, "rout": [332, 333, 334], "row": [18, 19, 21, 26, 232, 255, 400, 442, 452, 453, 455], "rprop": 370, "rule": [14, 15, 21, 22, 304, 373, 385, 386, 390, 391, 392, 394, 395], "run": [15, 196, 239, 242, 259, 260, 261, 317, 318, 319, 321, 322, 323, 360, 374, 381, 383], "running_mean": [196, 239, 242, 317, 318, 319, 321, 322, 323], "running_var": [239, 242, 317, 318, 319, 321, 322, 323], "runtim": [60, 200, 203, 298, 346, 401], "s_": 368, "s_1": 448, "s_2": 448, "s_d": [331, 334], "s_h": [330, 331, 334], "s_i": 448, "s_n": 448, "s_w": [330, 331, 334], "safeguard": 244, "sain": 85, "same": [18, 19, 21, 22, 26, 173, 212, 221, 222, 223, 224, 225, 226, 227, 239, 240, 242, 243, 244, 246, 247, 258, 259, 260, 261, 262, 263, 264, 266, 282, 292, 293, 294, 296, 299, 300, 301, 302, 308, 317, 318, 319, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 368, 371, 376, 381, 383, 389, 399, 403, 405, 415, 418, 419, 420, 428, 437, 439, 441, 444, 446, 449, 450, 452, 453, 455, 459], "sampl": [0, 1, 2, 3, 5, 6, 7, 8, 69, 70, 71, 72, 74, 75, 76, 83, 84, 86, 87, 88, 89, 94, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 136, 137, 138, 139, 144, 245, 246, 247, 270, 271, 272, 273, 274, 275, 296, 299, 300, 301, 302, 307, 309, 312, 315, 324, 326, 327, 328, 376, 380, 383, 401, 458, 460, 462, 463, 464, 465], "sandbox": 15, "sandler": 85, "satisfi": [17, 19, 26, 448], "satur": [276, 467], "save": [2, 196, 198, 347, 352, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 374, 375], "scalabl": [3, 46, 59, 85, 124, 125, 126, 127, 128, 129, 150, 179, 346], "scalar": [15, 18, 23, 233, 234, 235, 237, 238, 376, 384, 441], "scale": [13, 19, 24, 30, 39, 45, 47, 48, 49, 51, 53, 54, 59, 60, 77, 83, 85, 87, 88, 89, 90, 94, 98, 99, 101, 102, 103, 110, 111, 113, 114, 115, 118, 131, 132, 140, 141, 142, 143, 160, 161, 162, 163, 164, 165, 166, 170, 174, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 205, 210, 212, 215, 223, 239, 240, 242, 243, 255, 265, 266, 274, 275, 276, 278, 280, 283, 284, 285, 287, 289, 290, 296, 298, 299, 300, 301, 302, 312, 317, 318, 319, 320, 321, 322, 323, 324, 336, 344, 350, 353, 359, 361, 362, 363, 383, 433, 465], "scale_by_keep": [223, 298], "scale_factor": 344, "scale_fn": 350, "scaled_dot_product_attent": [214, 229], "scaleddotproductattent": [291, 306], "scenario": [44, 49, 51, 99, 100, 101, 102, 174, 201, 202, 324, 349, 350, 356, 363, 364, 457, 461], "schedul": [297, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359], "scientif": 373, "score": [112, 123, 140, 212, 215, 290, 312], "scratch": 15, "script": 383, "se": [59, 85, 131, 132, 133, 134, 135, 136, 137, 138, 139], "se_resnet_101": 85, "se_resnet_152": 85, "se_resnet_18": 85, "se_resnet_34": 85, "se_resnet_50": 85, "se_resnext_101_32x4d": 85, "se_resnext_101_32x8d": 85, "se_resnext_101_64x4d": 85, "se_resnext_50_32x4d": 85, "se_scal": 59, "seamless": [0, 1, 3, 4, 13, 304, 346, 383], "seamlessli": [3, 4, 10, 12, 14, 16, 198, 200, 203, 346, 467], "search": 85, "second": [19, 165, 176, 200, 201, 230, 265, 307, 362, 363, 364, 365, 366, 373, 385, 387, 388, 389, 390, 391, 392, 393, 394, 395, 428, 439, 442, 464], "section": 389, "see": [15, 389], "seed": [376, 377, 378, 379, 380, 382, 383, 467], "seek": [15, 102], "seen": 360, "segment": [163, 177, 184, 185, 186, 187, 188, 189], "select": [13, 14, 85, 140, 141, 142, 143, 144, 257, 265, 266, 332, 334, 350, 427], "selectivekernel": 267, "self": [0, 1, 2, 3, 15, 28, 30, 59, 60, 73, 77, 82, 85, 86, 90, 91, 92, 93, 103, 130, 145, 152, 154, 155, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 190, 196, 197, 198, 199, 200, 201, 202, 210, 223, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 296, 297, 298, 299, 300, 304, 307, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 338, 339, 340, 342, 346, 347, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 375, 384, 441, 447, 456, 457], "selfattent": 342, "selu": [207, 221, 229, 288, 296, 306], "selunetwork": 283, "semant": 175, "semodul": 267, "senet": [131, 132, 133, 134, 135, 136, 137, 138, 139], "sensit": [235, 313, 317, 318, 319], "sentiment": 4, "separ": [0, 85, 90, 110, 111, 150, 216, 217, 218, 262, 263, 264, 321, 322, 323], "seq_len": [215, 289, 290, 338, 339, 340, 341, 342], "sequenc": [22, 112, 123, 140, 156, 163, 199, 201, 215, 216, 289, 336, 338, 339, 341, 342, 396, 401, 437, 439, 443, 445, 450, 451, 455, 456], "sequenti": [28, 82, 86, 130, 145, 150, 152, 154, 155, 163, 199, 200, 204, 216, 259, 260, 261, 304, 308, 339, 341, 456, 467], "seri": [73, 87, 88, 140, 173, 175, 216, 259, 292, 329, 332], "serial": [196, 197, 358], "serv": [3, 7, 15, 54, 82, 130, 145, 156, 197, 199, 200, 201, 202, 203, 346, 368, 384, 457], "set": [3, 4, 5, 6, 7, 8, 15, 30, 98, 99, 100, 110, 111, 121, 122, 136, 137, 138, 139, 144, 155, 166, 198, 202, 215, 216, 217, 218, 255, 280, 281, 283, 290, 292, 293, 294, 296, 301, 302, 307, 309, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 336, 347, 362, 363, 367, 376, 378, 379, 380, 381, 382, 383, 396, 398, 399, 404, 405, 411, 418, 420, 434, 441, 452, 453, 457, 461, 467], "setup": [4, 124, 125, 126, 127, 128, 129], "sever": [24, 292, 293, 294, 329, 330, 331, 332, 333, 334, 374, 456, 467], "sgd": [15, 348, 349, 350, 351, 352, 353, 354, 355, 356, 359, 366, 370], "sgn": 23, "shape": [3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 18, 19, 21, 22, 24, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 77, 78, 79, 80, 81, 82, 85, 86, 92, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 141, 142, 143, 144, 145, 150, 152, 155, 163, 196, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 265, 266, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 296, 297, 299, 300, 301, 302, 304, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 346, 350, 373, 376, 378, 379, 380, 382, 383, 384, 387, 398, 399, 400, 402, 403, 404, 405, 411, 416, 417, 418, 419, 420, 423, 425, 427, 428, 432, 433, 435, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 455, 458, 459, 460, 461, 462, 463, 464, 465, 467], "shapelik": 379, "share": 85, "sharp": 350, "shen": 265, "shift": [163, 178, 179, 180, 181, 182, 183, 184, 187, 188, 239, 240, 242, 243, 278, 317, 318, 319, 320, 321, 322, 323, 324, 447], "shorthand": 389, "should": [12, 13, 14, 15, 86, 196, 304, 338, 339, 340, 341, 342, 354, 374, 376, 378, 379, 380, 382, 384, 398, 399, 408, 409, 431, 435, 443, 456], "show": [372, 375], "shown": [286, 381], "shrink": 360, "shuffl": [1, 2, 3], "side": [26, 200, 203, 216, 217, 218, 248, 249, 250, 252, 253, 254, 259, 260, 261, 292, 293, 294, 329, 330, 331, 332, 333, 334, 374], "sigma": [24, 30, 265, 270, 272, 274, 284, 286, 317, 318, 319, 321, 322, 323, 324, 432], "sigma_c": 459, "sigma_i": 24, "sigmoid": [207, 229, 265, 270, 271, 274, 275, 278, 279, 286, 288, 306, 311], "sigmoidnetwork": 284, "sign": [22, 313, 368, 406], "signal": [259, 292, 293, 294, 317, 321, 329, 330, 331, 332, 333, 334], "signific": [42, 374], "significantli": [85, 91, 123, 174, 175, 176, 177, 186, 265, 456], "silicon": [15, 371], "sim": [296, 299, 300, 301, 302], "similar": [10, 270, 271, 389, 428, 434, 435, 443], "similarli": [27, 431], "simonyan": 85, "simpl": [3, 4, 15, 155, 203, 216, 217, 218, 230, 232, 248, 249, 250, 252, 253, 254, 277, 278, 279, 281, 282, 283, 284, 286, 287, 292, 293, 294, 296, 299, 300, 301, 302, 307, 309, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 329, 330, 331, 332, 333, 334, 346, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 373, 387, 388, 393, 456], "simplebinaryclassificationmodel": 311, "simpleblock": 223, "simpleclassificationmodel": [312, 315], "simplegelumodel": 277, "simplehardsigmoidmodel": 278, "simplehardswishmodel": 279, "simpleleakyrelumodel": 280, "simplemodel": [155, 282, 298, 309, 375], "simpleregressionmodel": 314, "simplerelumodel": 281, "simpleselumodel": 283, "simplesigmoidmodel": 284, "simpleswishmodel": 286, "simpletanhmodel": 287, "simpli": [15, 372, 431, 432, 446], "simplic": [85, 278, 281], "simplifi": [4, 12, 14, 69, 70, 71, 72, 85, 87, 151, 203, 259, 260, 261, 304], "simul": [155, 467], "simultan": 258, "sin": [406, 412], "sinc": [22, 25, 199, 200, 201, 202, 216, 217, 218, 275, 372, 374, 376, 380, 428, 442, 467], "sine": [409, 423, 424], "singl": [0, 4, 22, 25, 27, 112, 212, 259, 260, 261, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 292, 293, 294, 312, 324, 330, 331, 332, 333, 334, 339, 340, 341, 342, 347, 382, 398, 401, 437, 449, 459, 461, 467], "singleton": [14, 324], "singular": [18, 21, 22, 24, 26, 27], "sinh": [406, 413, 430], "size": [0, 1, 2, 3, 10, 12, 13, 14, 27, 30, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 77, 80, 85, 86, 87, 88, 89, 93, 94, 96, 97, 112, 140, 152, 155, 156, 157, 158, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 200, 215, 216, 217, 218, 220, 222, 225, 226, 227, 233, 234, 235, 237, 238, 239, 240, 242, 243, 245, 246, 247, 248, 249, 250, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 289, 292, 293, 294, 297, 304, 307, 309, 311, 312, 315, 317, 318, 319, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 341, 342, 344, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 375, 379, 382, 383, 384, 418, 419, 420, 427, 433, 435, 436, 437, 439, 448, 449, 454, 455, 458, 460, 465, 467], "size_or_sect": 448, "sk": [85, 140, 141, 142, 143, 144, 266], "sk_resnet_18": 85, "sk_resnet_34": 85, "sk_resnet_50": 85, "sk_resnext_50_32x4d": 85, "skblock": 140, "skip": [85, 374], "sknet": [141, 142, 143, 144], "slice": [230, 384, 431], "slide": [220, 329, 331, 332, 334], "slight": 265, "slightli": 467, "slope": [208, 276, 280], "slow": [3, 366], "small": [24, 43, 45, 47, 50, 69, 70, 71, 72, 79, 80, 85, 87, 88, 89, 92, 96, 97, 100, 163, 169, 182, 183, 188, 189, 194, 195, 208, 222, 233, 234, 239, 240, 242, 243, 244, 280, 283, 297, 311, 312, 313, 317, 318, 319, 320, 321, 322, 323, 324, 330, 333, 338, 340, 342, 348, 360, 361, 362, 363, 364, 365, 366, 367, 368], "smaller": [10, 44, 69, 70, 71, 72, 85, 98, 152, 162, 200, 203, 346, 361, 362, 391, 436, 458, 460, 465], "smallest": 420, "smooth": [75, 206, 276, 277, 286, 351, 359, 367, 467], "smoother": [351, 359], "so": [199, 200, 201, 202, 258, 346, 366, 398, 399, 456], "softmax": [30, 207, 215, 229, 266, 288, 289, 290, 306, 312, 340, 342], "softmaxmodel": 285, "solut": [24, 26], "solv": [16, 17, 20, 24, 25, 27], "solver": 16, "some": [205, 223, 224, 258, 296, 298, 299, 300, 317, 318, 319, 321, 322, 323, 361, 362, 363, 374, 436], "sometim": 373, "sophist": [200, 203], "sort": 15, "sourc": [156, 157, 158, 215, 338, 383], "space": [19, 25, 27, 156, 179, 216, 217, 218, 220, 245, 246, 247, 259, 260, 261, 262, 263, 264, 292, 293, 294, 326, 327, 328, 396, 401, 467], "span": 4, "spars": [361, 362], "spatial": [28, 30, 85, 112, 123, 140, 145, 152, 154, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 184, 222, 240, 260, 265, 293, 294, 317, 318, 319, 321, 322, 323, 324, 330, 331, 332, 333, 334, 344, 442], "spatial_dim": 265, "spatio": 294, "spec": 159, "special": [0, 1, 24, 196, 197, 198, 296, 383], "specif": [4, 55, 56, 57, 58, 69, 70, 71, 72, 82, 90, 98, 99, 100, 101, 102, 110, 111, 121, 122, 159, 199, 200, 201, 202, 203, 266, 275, 296, 299, 300, 301, 302, 321, 322, 323, 336, 346, 347, 354, 372, 383, 398, 418, 420, 441, 445, 451], "specifi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 23, 29, 54, 60, 86, 93, 94, 95, 98, 99, 100, 101, 103, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 142, 143, 145, 146, 147, 148, 149, 151, 153, 155, 160, 161, 162, 164, 166, 167, 168, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 200, 212, 220, 227, 233, 234, 235, 237, 238, 243, 244, 245, 246, 247, 255, 257, 258, 265, 285, 289, 292, 293, 294, 304, 311, 312, 313, 314, 315, 324, 326, 327, 328, 330, 331, 332, 333, 334, 336, 344, 347, 350, 354, 371, 378, 379, 380, 381, 382, 384, 394, 396, 397, 398, 399, 400, 401, 402, 404, 405, 411, 418, 419, 420, 427, 428, 432, 433, 434, 435, 436, 437, 439, 441, 443, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 463, 465, 467], "speech": 321, "speed": [96, 97, 278, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369], "split": [4, 85, 103, 110, 111, 163, 289, 436, 437, 439, 440, 455], "split_tensor": 448, "springer": 85, "sqrt": [30, 206, 215, 240, 270, 271, 274, 275, 277, 289, 290, 317, 318, 319, 320, 321, 322, 323, 324, 340, 342, 360, 361, 362, 363, 365, 366, 367, 406, 408, 409], "squar": [1, 3, 17, 18, 19, 21, 22, 24, 25, 26, 27, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 222, 235, 237, 297, 313, 314, 360, 361, 362, 367, 406, 425], "squaredataset": [0, 1, 2, 3], "squeez": [59, 85, 92, 96, 97, 130, 133, 136, 137, 138, 139, 265, 440], "sr_ratio": [164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177], "sra": 163, "src": [163, 338, 341, 342], "src_key_pad": 341, "src_key_padding_mask": [338, 342], "src_mask": [338, 341, 342], "src_vocab_s": [156, 157, 158], "stabil": [21, 24, 30, 85, 222, 233, 234, 239, 240, 242, 243, 244, 255, 259, 260, 261, 282, 297, 311, 312, 317, 318, 319, 320, 321, 322, 323, 324, 336, 338, 340, 342, 348, 359, 360, 361, 362, 363, 364, 365, 366, 367, 459], "stabl": [188, 270, 271, 274, 275, 296, 312, 359, 363, 364, 367, 368, 369], "stack": [14, 203, 266, 338, 339, 341, 439, 440, 455, 467], "stage": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 77, 85, 103, 104, 105, 106, 107, 108, 109, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "stage1": 130, "stage2": 130, "stage3": 130, "stage4": 130, "stall": 355, "stand": 174, "standalon": 282, "standard": [15, 41, 46, 79, 98, 101, 112, 121, 122, 156, 157, 206, 208, 262, 263, 264, 270, 272, 274, 276, 277, 280, 296, 338, 368, 380, 383, 389, 456, 459, 467], "start": [1, 3, 10, 348, 359, 361, 368, 384, 396, 401, 458, 460], "state": [48, 85, 192, 196, 197, 198, 200, 203, 347, 352, 372, 374, 381], "state_dict": [197, 198, 347, 352, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "static": 203, "statist": [24, 221, 239, 242], "std": [5, 6, 7, 8, 272, 456, 459, 467], "stem": [82, 85, 103, 112, 123, 140], "stem_typ": 112, "stem_width": [103, 104, 105, 106, 107, 108, 109, 112], "step": [10, 15, 30, 198, 220, 266, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 374, 396, 456, 457], "step_siz": [348, 350, 352, 356, 368], "step_size_down": 350, "step_size_up": 350, "steplr": [348, 352, 357], "still": [51, 360], "stochast": [39, 40, 59, 60, 77, 164, 178, 179, 223, 298, 359, 369], "stochastic_depth": 59, "stop": [355, 396, 401], "storag": [199, 201], "store": [2, 4, 5, 6, 7, 8, 15, 112, 123, 140, 196, 197, 198, 199, 200, 201, 202, 265, 326, 327, 328, 374, 458, 459, 460, 461, 462, 463, 464, 465], "str": [5, 6, 7, 8, 10, 12, 13, 14, 30, 93, 112, 145, 197, 199, 201, 203, 233, 234, 235, 237, 238, 257, 304, 344, 347, 350, 352, 355, 375, 384, 442], "straightforward": [369, 372, 385], "strategi": [30, 85, 101, 187, 348, 352, 358], "streamlin": [2, 3, 85], "strength": [30, 297], "strict": [197, 347], "stride": [60, 86, 87, 88, 89, 92, 93, 96, 97, 200, 203, 216, 217, 218, 220, 245, 246, 247, 248, 249, 250, 252, 253, 254, 259, 260, 261, 262, 263, 264, 266, 292, 293, 294, 326, 327, 328, 329, 330, 331, 332, 333, 334], "stride_height": 220, "stride_width": 220, "strike": [46, 93, 100], "string": [10, 12, 13, 14, 197, 199, 201, 203, 292, 293, 294, 304, 347, 371], "strong": [30, 168, 171, 174, 191], "stronger": [169, 173, 187], "structur": [0, 10, 13, 25, 30, 60, 92, 150, 163, 179, 196, 197, 200, 222, 297, 304, 346, 347, 375, 384, 400, 457], "student": 15, "studi": 15, "style": [10, 15, 82, 242, 321, 322, 384, 442], "sub": [199, 200, 201, 202, 203, 346, 406, 436, 448, 458, 460], "subclass": [1, 2, 3, 15, 197, 198, 199, 346, 347, 352], "sublay": [155, 338, 340, 342], "submodul": [155, 197, 346], "subsequ": [200, 203, 275, 383], "subset": [110, 111, 299, 300], "subspac": 289, "substanti": 193, "subtract": [395, 459], "suffer": 361, "suffix": 174, "suit": [51, 55, 56, 57, 58, 75, 90, 98, 99, 101, 140, 174, 175, 177, 189, 191, 270, 271, 274, 275, 348], "suitabl": [41, 43, 44, 47, 49, 61, 62, 63, 64, 65, 66, 67, 68, 82, 85, 87, 88, 89, 91, 96, 97, 99, 102, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 133, 135, 157, 166, 171, 180, 181, 182, 183, 194, 313, 361, 362, 378], "sum": [10, 13, 15, 23, 199, 200, 201, 202, 203, 212, 215, 233, 234, 235, 237, 238, 244, 266, 285, 311, 312, 313, 314, 315, 361, 384, 385, 388, 393, 406, 431, 433, 435, 437, 439, 442, 445, 448, 451, 455], "sum_": [12, 13, 22, 30, 212, 240, 285, 304, 311, 312, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 329, 330, 331, 354, 387, 388, 419, 427, 431, 433, 435, 442, 445], "sum_i": [23, 393], "sum_j": 393, "sum_k": 389, "summar": [31, 32, 33, 34, 35, 36, 37, 38, 59, 121, 122, 150, 329, 330, 331], "summari": [121, 122, 136, 137, 138, 139, 144], "summat": [10, 12, 13, 14, 22, 354], "sun": 265, "super": [15, 155, 196, 197, 198, 199, 200, 201, 202, 223, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 296, 298, 299, 300, 307, 309, 311, 312, 313, 314, 315, 317, 318, 319, 321, 324, 329, 330, 331, 332, 333, 334, 346, 347, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 375], "superior": [53, 85, 187], "supplementari": 101, "support": [1, 3, 4, 12, 15, 16, 22, 23, 24, 25, 27, 94, 112, 164, 199, 200, 201, 202, 203, 215, 257, 258, 290, 336, 344, 346, 358, 365, 383, 384, 385, 386, 389, 390, 391, 392, 394, 395, 397, 400, 411, 416, 417, 419, 423, 425, 427, 431, 432, 433, 437, 442, 446, 448, 457, 467], "suppos": 467, "sure": [346, 467], "svd": [20, 24], "swap": [12, 304], "swapax": 406, "swin": [178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189], "swin_bas": 163, "swin_larg": 163, "swin_smal": 163, "swin_tini": 163, "swin_v2": 179, "swin_v2_bas": 163, "swin_v2_giant": 163, "swin_v2_hug": 163, "swin_v2_larg": 163, "swin_v2_smal": 163, "swin_v2_tini": 163, "swintransform": [180, 181, 182, 183], "swintransformer_v2": [184, 185, 186, 187, 188, 189], "swish": [96, 97, 288, 306], "symbol": [12, 13, 14, 304], "symmetr": [17, 245, 246, 247, 274, 275, 287], "syntax": [1, 10, 12, 13, 14, 304, 389], "system": [15, 16, 17, 24, 25, 26, 85, 100, 163, 372, 384, 442], "systemat": [85, 467], "szegedi": [74, 85], "t": [10, 15, 24, 30, 85, 163, 338, 339, 340, 342, 349, 350, 351, 353, 354, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 374, 384, 389, 434, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467], "t0": 359, "t1": [384, 434], "t2": [384, 434], "t_": [339, 349], "t_0": 339, "t_cpu": 384, "t_i": 339, "t_max": 349, "tabl": [31, 32, 33, 34, 35, 36, 37, 38, 59, 336], "tabular": 4, "tailor": [4, 92, 100, 104, 105, 106, 107, 108, 109, 346, 467], "take": [25, 329, 330, 331, 332, 333, 334, 344, 353, 374, 456], "taken": 431, "tan": [85, 406], "tangent": [213, 287, 410, 429, 430], "tanh": [86, 200, 203, 206, 207, 229, 270, 271, 274, 275, 277, 288, 306, 406], "tanhnetwork": 287, "target": [5, 6, 7, 8, 51, 156, 157, 158, 203, 233, 234, 235, 237, 238, 245, 246, 247, 257, 311, 312, 313, 314, 315, 326, 327, 328, 338, 339, 340, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 435, 458, 460, 465], "target_tensor": [311, 312, 313, 314, 315], "target_transform": [5, 6, 7, 8], "task": [4, 16, 28, 29, 30, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 79, 82, 83, 84, 85, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 150, 154, 156, 157, 158, 160, 161, 162, 163, 165, 166, 167, 168, 169, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 211, 212, 217, 230, 233, 234, 237, 238, 265, 266, 284, 285, 292, 293, 294, 311, 312, 313, 314, 315, 321, 322, 323, 329, 331, 332, 334, 338, 362, 373, 383, 400, 401, 467], "techniqu": [17, 21, 39, 60, 77, 85, 101, 152, 184, 186, 189, 223, 239, 296, 297, 299, 300, 301, 302, 321, 322, 323, 348, 358, 465, 467], "templat": 156, "tempor": [292, 294, 331, 334], "temporarili": 374, "tensor": [2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 69, 70, 71, 72, 74, 75, 76, 82, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 112, 124, 125, 126, 127, 128, 129, 130, 141, 142, 143, 145, 150, 152, 155, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 346, 372, 374, 376, 378, 379, 380, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467], "term": [12, 24, 52, 171, 172, 173, 175, 176, 177, 230, 259, 260, 261, 262, 263, 264, 289, 338, 340, 342, 359, 363, 365, 366, 367, 369], "test": [4, 5, 6, 7, 8, 401], "test_backward": 155, "test_siz": [5, 6, 7, 8], "text": [4, 18, 22, 23, 30, 112, 123, 140, 141, 142, 143, 150, 199, 205, 208, 209, 210, 212, 215, 216, 217, 218, 223, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 259, 260, 261, 262, 263, 264, 265, 266, 270, 271, 274, 275, 276, 278, 279, 280, 281, 282, 283, 285, 286, 289, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 311, 312, 313, 314, 315, 329, 330, 331, 332, 333, 334, 336, 338, 339, 341, 350, 355, 356, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 379, 384, 385, 386, 388, 390, 391, 392, 394, 395, 407, 411, 418, 419, 420, 422, 427, 428, 433, 435, 437, 439, 441, 443, 444, 445, 446, 447, 448, 449, 451, 452, 453, 454, 455, 458, 459, 460, 462, 463, 464], "tgt": [163, 338, 339, 340], "tgt_is_caus": [339, 340], "tgt_key_padding_mask": [338, 339, 340], "tgt_mask": [338, 339, 340], "tgt_vocab_s": [156, 157, 158], "th": [230, 311, 312, 314, 315, 321, 322, 323, 390, 391, 394], "than": [0, 1, 7, 12, 14, 201, 202, 205, 208, 235, 262, 263, 264, 276, 280, 286, 304, 313, 347, 354, 363, 401, 411, 431, 435, 436, 443, 450, 458, 460, 465], "thei": [0, 27, 85, 196, 200, 202, 203, 289, 442, 446, 458, 460, 467], "them": [3, 10, 15, 85, 163, 197, 202, 220, 359, 373, 437, 450, 456, 459, 467], "therebi": [296, 330, 331, 333, 334], "theta": [359, 360, 463], "theta_": [359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "theta_t": [366, 367], "thi": [0, 1, 2, 3, 5, 6, 7, 8, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 74, 75, 76, 82, 83, 84, 85, 86, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 140, 141, 142, 143, 144, 150, 155, 156, 159, 160, 161, 162, 163, 166, 171, 174, 178, 180, 181, 182, 183, 184, 185, 186, 187, 189, 191, 192, 193, 194, 195, 196, 198, 200, 201, 202, 203, 209, 211, 212, 213, 216, 217, 218, 220, 222, 223, 230, 232, 245, 255, 257, 258, 262, 263, 264, 265, 266, 270, 271, 274, 275, 276, 277, 278, 280, 281, 283, 284, 285, 286, 287, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 307, 308, 309, 311, 312, 313, 315, 317, 318, 319, 321, 322, 323, 324, 326, 329, 330, 331, 332, 333, 334, 336, 346, 348, 349, 350, 351, 353, 354, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 379, 380, 381, 383, 384, 388, 389, 393, 396, 398, 402, 403, 404, 405, 411, 415, 416, 417, 418, 419, 420, 423, 425, 427, 428, 431, 432, 433, 434, 435, 436, 441, 443, 445, 446, 447, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467], "thing": 374, "third": [175, 176, 177], "those": [87, 88, 89, 202, 275], "three": [27, 89, 218, 247, 250, 254, 259, 260, 261, 294, 302, 319, 323, 328, 331, 334], "threshold": [24, 235, 313, 355], "threshold_mod": 355, "through": [0, 3, 4, 14, 19, 24, 25, 27, 28, 39, 73, 82, 85, 86, 93, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 141, 142, 143, 151, 152, 199, 200, 203, 222, 230, 232, 257, 265, 266, 276, 277, 278, 279, 280, 281, 283, 284, 286, 287, 292, 293, 294, 296, 299, 300, 301, 302, 307, 308, 309, 317, 318, 319, 321, 324, 329, 330, 331, 332, 333, 334, 338, 339, 341, 342, 376, 380, 387, 388, 393, 442, 444, 446, 449, 452, 453, 454, 467], "throughout": [156, 178, 179, 190, 210, 457], "ti": [163, 195], "tier": 48, "tight": 174, "tile": [14, 440], "time": [0, 3, 15, 22, 87, 88, 89, 91, 216, 259, 280, 283, 289, 292, 329, 330, 331, 332, 333, 334, 339, 341, 348, 355, 359, 360, 361, 362, 363, 367, 369, 374, 445, 451], "tini": [43, 44, 52, 77, 81, 85, 163, 170], "tinynet": 15, "to_tensor": [5, 6, 7, 8], "togeth": [203, 456, 467], "token": [77, 165, 172, 336], "token_mix": 77, "too": [15, 348, 368], "tool": [3, 346, 348, 373, 383, 456, 467], "top": [17, 18, 19, 25, 27, 48, 215, 230, 232, 257, 289, 290, 292, 293, 294, 307, 309, 458, 460], "topolog": 15, "torch": [145, 434], "toronto": [5, 6], "total": [0, 1, 2, 5, 6, 7, 8, 10, 12, 14, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 155, 157, 158, 160, 161, 162, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 198, 289, 304, 384, 446], "totensor": [456, 467], "touch": 15, "trace": [16, 406], "track": [15, 259, 260, 261, 317, 318, 319, 321, 322, 323, 346, 372, 374, 376, 378, 379, 380, 382, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 428, 434, 435, 441, 457], "track_running_stat": [259, 260, 261, 317, 318, 319, 321, 322, 323], "trade": [43, 99], "tradit": [7, 10, 30, 85, 102, 159, 163, 360, 361, 364, 365, 366], "trail": 243, "train": [1, 2, 3, 4, 5, 6, 7, 8, 30, 39, 60, 73, 74, 75, 85, 136, 137, 138, 139, 144, 155, 156, 163, 196, 197, 200, 202, 203, 212, 221, 222, 223, 224, 225, 226, 227, 239, 242, 255, 258, 277, 280, 283, 284, 285, 287, 296, 297, 298, 299, 300, 301, 302, 317, 318, 319, 321, 322, 323, 336, 346, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 374, 456, 459, 460, 461, 462, 463, 464, 467], "trainabl": [155, 317, 318, 319, 321, 322, 323, 336, 346], "transact": 265, "transfer": [242, 321, 322], "transform": [2, 4, 5, 6, 7, 8, 10, 12, 13, 14, 19, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 85, 154, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 215, 230, 232, 289, 290, 304, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 339, 340, 341, 342, 373, 428, 442], "transform_pipelin": [456, 467], "transformed_imag": [456, 467], "transformer_bas": 163, "transformer_big": 163, "transformer_decod": 339, "transformer_encod": 341, "transformerdecod": [306, 338, 343], "transformerdecoderlay": [306, 338, 339, 343], "transformerencod": [306, 338, 343], "transformerencoderlay": [306, 338, 341, 343], "transit": [30, 54, 313], "translat": [156, 330, 333, 338], "transpar": 15, "transpos": [12, 17, 406], "transposit": [12, 304], "treat": [0, 196, 324, 346], "triangular": [17, 25, 339, 340, 341, 342, 350, 452, 453], "triangular2": 350, "tril": 440, "triu": 440, "true": [1, 2, 3, 4, 5, 6, 7, 8, 15, 27, 73, 74, 75, 96, 97, 103, 155, 171, 172, 173, 174, 175, 176, 177, 178, 179, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 220, 221, 223, 224, 225, 226, 227, 230, 232, 239, 242, 255, 257, 259, 260, 261, 262, 263, 264, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 296, 298, 299, 300, 301, 302, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 329, 330, 331, 332, 333, 334, 338, 339, 340, 341, 342, 344, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 362, 363, 367, 371, 372, 376, 378, 379, 380, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 439, 441, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455, 457], "truli": 15, "truncat": 155, "truncate_from": 155, "try": 0, "tune": [99, 102, 467], "tupl": [2, 3, 5, 6, 7, 8, 19, 23, 25, 27, 30, 54, 112, 155, 197, 198, 216, 217, 218, 220, 243, 246, 247, 248, 249, 250, 252, 253, 254, 257, 258, 259, 260, 261, 262, 263, 264, 292, 293, 294, 308, 324, 327, 328, 329, 330, 331, 332, 333, 334, 344, 362, 363, 364, 365, 366, 368, 378, 379, 380, 382, 384, 398, 402, 404, 418, 419, 420, 427, 433, 435, 436, 437, 439, 442, 443, 446, 447, 448, 449, 450, 454, 455, 458, 459, 460, 465], "twice": 443, "two": [18, 19, 21, 22, 24, 25, 27, 87, 88, 89, 92, 110, 111, 141, 145, 216, 217, 218, 230, 249, 253, 265, 266, 293, 301, 307, 318, 322, 330, 333, 342, 362, 363, 364, 365, 366, 368, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 428, 431, 436, 442, 448], "type": [31, 32, 33, 34, 35, 36, 37, 38, 77, 86, 103, 112, 130, 140, 159, 164, 165, 178, 179, 196, 197, 198, 230, 307, 338, 340, 342, 371, 384, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 434, 442, 457], "typeerror": [0, 1, 2, 197, 347], "typic": [15, 16, 30, 93, 99, 112, 123, 140, 160, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 196, 212, 221, 222, 258, 265, 282, 283, 285, 297, 298, 315, 317, 318, 319, 321, 322, 323, 358, 359, 367, 369, 374, 454, 457, 459, 463, 465, 467], "u": [24, 27, 271, 273, 275], "u_": 364, "ultra": [45, 118, 185], "unchang": [15, 196, 227, 276, 280, 281, 283, 296, 299, 300, 301, 302, 308, 444, 449], "uncontrol": 15, "undefin": 394, "under": [124, 125, 126, 127, 128, 129, 346], "underbrac": 22, "underdetermin": 24, "undergo": [223, 342, 467], "underli": [0, 69, 70, 71, 72, 74, 75, 76, 83, 84, 384, 428, 434, 439, 444, 446, 455], "understand": [15, 85, 152, 155, 160, 161, 162, 175, 176, 186, 203, 467], "understood": 12, "unexpect": [10, 197, 200, 203, 244, 383], "unfold": [219, 229], "unifi": [0, 15, 371], "uniform": [269, 271, 275, 292, 293, 294, 307, 309, 377, 378, 379, 383, 461, 462, 463, 464], "uniformli": [378, 382], "uniniti": [398, 399], "unintend": [10, 13, 374], "union": 145, "uniqu": [17, 24, 26, 199, 201, 336], "unit": [28, 86, 152, 205, 206, 208, 209, 210, 270, 271, 274, 275, 276, 277, 280, 281, 283, 296], "unless": [113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135], "unlik": [30, 159, 163, 178, 196, 199, 200, 201, 202, 208, 276, 280, 296, 324, 360, 361, 363, 364, 365, 366, 368], "unnecessari": [10, 374], "unpad": 443, "unseen": 467, "unspecifi": 371, "unsqueez": 440, "unstabl": 21, "unsur": 10, "until": 15, "up": [163, 347, 352, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 463, 465], "updat": [4, 40, 196, 202, 203, 296, 299, 300, 301, 302, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 374], "upon": [40, 75, 85, 92, 93, 187, 189, 199, 200, 201, 202], "upper": [25, 273, 350, 368, 382, 452, 453], "upper_triangular": 453, "upsampl": [306, 345], "upstream": 15, "us": [0, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 19, 21, 22, 24, 25, 27, 30, 39, 54, 59, 60, 73, 74, 75, 76, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 154, 155, 159, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 189, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 230, 232, 237, 239, 240, 242, 244, 246, 247, 255, 257, 258, 259, 260, 261, 265, 266, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338, 344, 346, 347, 348, 349, 351, 353, 354, 356, 358, 371, 372, 373, 374, 375, 376, 378, 379, 380, 382, 383, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 415, 418, 419, 420, 427, 428, 433, 441, 442, 443, 445, 448, 449, 451, 452, 453, 454, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467], "usag": [3, 16, 41, 42, 43, 44, 52, 53, 54, 150, 200, 203, 223, 262, 263, 264, 290, 297, 347, 358, 401, 458, 459, 460, 461, 462, 463, 464, 465], "use_aux": [73, 74, 75], "use_h": [96, 97], "use_s": [96, 97], "user": [1, 2, 3, 4, 15, 102, 199, 200, 201, 202, 346, 353, 361, 456, 457, 467], "usual": 312, "util": [3, 16, 30, 93, 141, 142, 143, 170, 187, 201, 202, 222, 346, 383], "v": [15, 19, 24, 27, 30, 85, 165, 215, 289, 290, 340, 342, 362, 363, 365, 366, 397], "v1": [73, 74, 82, 83, 84, 85, 90, 91], "v2": [45, 46, 47, 48, 49, 50, 51, 52, 60, 69, 70, 71, 72, 82, 84, 85, 91, 92, 95, 163, 165, 171, 172, 173, 175, 176, 177, 184, 185, 186, 187, 188, 189], "v3": [73, 75, 76, 85, 92, 96, 97], "v4": [73, 76, 85, 93, 99, 100, 101, 102], "v_": [359, 362, 363, 365, 366, 367, 369], "v_i": 289, "v_stack": 455, "v_t": [366, 367], "val": 268, "val_loss": 355, "valid": [259, 260, 261, 262, 263, 264, 266, 292, 293, 294, 355, 432], "valu": [10, 15, 18, 22, 23, 24, 27, 39, 77, 90, 93, 101, 121, 122, 155, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 197, 199, 201, 203, 205, 208, 211, 212, 213, 215, 216, 217, 218, 220, 222, 223, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 257, 258, 259, 260, 261, 265, 268, 270, 271, 272, 273, 274, 275, 276, 280, 281, 282, 283, 284, 287, 289, 290, 296, 297, 298, 299, 300, 301, 302, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 329, 330, 331, 332, 333, 334, 338, 339, 340, 341, 342, 344, 348, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 376, 378, 379, 380, 381, 382, 383, 396, 397, 398, 399, 400, 401, 407, 408, 409, 411, 414, 415, 416, 417, 418, 420, 422, 423, 425, 426, 437, 441, 443, 444, 446, 454, 459, 461, 462, 464], "valuabl": 383, "valueerror": [1, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 347], "van": 85, "vanish": [85, 276, 283, 317, 318, 319], "var": 406, "varepsilon": 244, "vari": [39, 140, 200, 202, 245, 257, 326, 350, 463], "variabl": [197, 203, 245, 246, 247, 308, 326, 327, 328, 346, 372, 374, 378, 398, 460, 463], "varianc": [210, 221, 239, 242, 259, 260, 261, 270, 271, 274, 275, 283, 296, 317, 318, 319, 321, 322, 323, 324, 362, 363, 364, 365, 366, 380, 433, 463, 467], "variant": [31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 70, 71, 72, 78, 79, 80, 81, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 121, 122, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 158, 160, 161, 162, 166, 168, 169, 170, 171, 172, 174, 176, 185, 362, 363, 364], "variat": [262, 263, 264, 321, 322, 323, 460, 467], "varieti": [4, 82, 103, 383, 467], "variou": [7, 10, 12, 13, 30, 54, 73, 83, 84, 85, 86, 93, 94, 102, 154, 164, 281, 358, 383, 401, 418, 420, 443, 457], "vasudevan": 85, "vaswani": [163, 338], "vdim": 289, "vdot": 393, "vector": [14, 19, 24, 25, 26, 27, 230, 232, 255, 289, 307, 309, 336, 387, 388, 389, 393], "veloc": [359, 367, 369], "verbos": [12, 349, 350, 351, 352, 353, 354, 355, 356], "veri": [24, 47, 85, 115, 117, 166, 360], "verifi": 10, "versa": 368, "versatil": [30, 102, 163, 383, 442], "version": [15, 27, 39, 73, 77, 82, 86, 87, 88, 99, 163, 165, 167, 174, 304, 367, 393, 447, 461], "vertic": [450, 455, 464], "vgg": 145, "vggnet": [146, 147, 148, 149], "vggnet_11": 85, "vggnet_13": 85, "vggnet_16": 85, "vggnet_19": 85, "via": [3, 4, 15, 102, 140, 384], "vice": 368, "video": [218, 227, 261, 294, 323, 331, 334], "view": [82, 86, 200, 330, 331, 332, 333, 334, 435, 446], "vinod": [5, 6], "vision": [30, 85, 90, 91, 95, 103, 112, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 217, 293, 307, 467], "visual": [85, 152, 173], "vit": [30, 159, 178, 191, 192, 193, 194, 195], "vit_bas": 163, "vit_hug": 163, "vit_larg": 163, "vit_smal": 163, "vit_tini": 163, "vocabulari": [156, 157, 158, 336], "vol": 85, "vollgraf": 7, "volumetr": [218, 227, 261, 294, 323, 331, 334], "vstack": 440, "w": [10, 12, 13, 14, 30, 85, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 217, 218, 220, 222, 226, 227, 230, 232, 240, 246, 247, 249, 250, 253, 254, 257, 258, 260, 261, 265, 289, 292, 293, 294, 304, 307, 309, 318, 319, 320, 322, 323, 327, 328, 331, 334, 458, 460], "w24": [162, 163], "w_": [217, 218, 246, 247, 249, 250, 253, 254, 257, 293, 294, 327, 328, 330, 331, 333, 334], "w_1": [340, 342], "w_2": [340, 342], "w_k": 30, "w_out": [217, 218, 249, 250, 253, 254], "wa": [15, 74, 296, 299, 300, 301, 302, 374], "wai": [1, 10, 12, 14, 29, 153, 304, 372, 374, 446], "wait": 355, "wang": [85, 163], "want": [0, 456, 458], "warn": [199, 201, 289], "we": [3, 373, 442], "wei": 85, "weight": [85, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 164, 165, 178, 179, 215, 216, 217, 218, 230, 232, 233, 234, 238, 239, 242, 243, 255, 257, 265, 266, 270, 271, 274, 275, 289, 290, 292, 293, 294, 296, 297, 299, 300, 301, 302, 307, 309, 311, 312, 315, 317, 318, 319, 321, 322, 323, 324, 336, 338, 339, 340, 341, 342, 346, 359, 360, 361, 362, 363, 364, 365, 366, 367, 369, 378, 383], "weight1": 201, "weight2": 201, "weight_decai": [359, 360, 361, 362, 363, 364, 365, 366, 367, 369], "weihao": 85, "weinberg": 85, "well": [51, 55, 56, 57, 58, 60, 75, 99, 140, 174, 175, 189, 191, 270, 271], "wenhai": 163, "were": 203, "weyand": 85, "what": [12, 14, 304, 374], "when": [0, 1, 3, 10, 13, 15, 22, 59, 85, 197, 200, 202, 203, 205, 208, 216, 217, 218, 255, 276, 298, 308, 317, 318, 319, 321, 322, 323, 344, 347, 349, 350, 351, 352, 353, 354, 355, 356, 360, 368, 372, 374, 375, 383, 394, 435, 456, 458], "where": [3, 4, 5, 6, 7, 8, 12, 13, 14, 18, 19, 21, 22, 23, 24, 25, 27, 85, 96, 97, 98, 99, 100, 101, 150, 174, 176, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 223, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 265, 266, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 296, 299, 300, 301, 302, 304, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 349, 350, 351, 353, 354, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 374, 383, 384, 385, 386, 390, 391, 392, 394, 395, 398, 399, 411, 415, 416, 417, 418, 419, 420, 423, 425, 427, 431, 432, 433, 436, 437, 441, 443, 445, 448, 451, 452, 453, 456, 457, 458, 459, 460, 461, 462, 463, 464], "wherev": 441, "whether": [1, 15, 18, 30, 59, 73, 74, 75, 96, 97, 103, 164, 165, 171, 172, 173, 175, 176, 177, 178, 179, 197, 198, 270, 271, 298, 367, 372, 376, 378, 379, 380, 382, 384, 398, 399, 418, 419, 420, 427, 433], "which": [0, 7, 13, 15, 18, 19, 21, 22, 23, 24, 25, 27, 31, 32, 33, 34, 35, 36, 37, 38, 60, 76, 84, 85, 90, 91, 93, 94, 98, 104, 105, 106, 107, 108, 109, 110, 111, 136, 137, 138, 139, 140, 144, 146, 147, 148, 149, 156, 159, 163, 165, 169, 178, 180, 181, 182, 183, 197, 199, 201, 203, 208, 212, 235, 244, 258, 262, 263, 264, 266, 276, 277, 280, 282, 285, 287, 296, 313, 315, 317, 318, 319, 321, 322, 323, 324, 336, 340, 342, 354, 356, 362, 363, 365, 367, 372, 374, 378, 379, 382, 408, 409, 410, 411, 412, 413, 416, 417, 418, 419, 420, 421, 423, 424, 425, 427, 429, 430, 431, 433, 435, 436, 437, 445, 446, 447, 448, 450, 452, 453, 454, 457, 458, 460, 461, 462, 463, 464, 465, 467], "while": [15, 30, 40, 45, 51, 52, 69, 70, 71, 72, 80, 84, 85, 90, 100, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144, 154, 159, 160, 161, 162, 163, 168, 169, 170, 172, 173, 174, 175, 179, 193, 200, 203, 221, 222, 277, 281, 282, 298, 339, 346, 349, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 374, 428, 441, 446, 450, 461, 467], "who": [199, 200, 201, 202], "whose": [27, 349, 350, 351, 352, 353, 354, 355, 356, 399, 403, 405, 407, 411, 415, 422, 428], "wide": [4, 5, 6, 8, 16, 24, 52, 85, 102, 112, 120, 121, 122, 188, 209, 281, 292, 293, 312], "wide_resnet_101": 85, "wide_resnet_50": 85, "wider": [43, 121, 122, 216, 217], "wideresnet": 85, "width": [30, 59, 60, 85, 90, 94, 103, 110, 111, 121, 122, 123, 124, 125, 126, 127, 128, 129, 140, 150, 217, 218, 220, 226, 227, 240, 246, 247, 249, 250, 253, 254, 257, 258, 266, 293, 294, 318, 319, 320, 322, 323, 327, 328, 330, 331, 333, 334, 344, 371, 458, 460, 465], "width_coef": 59, "width_multipli": [90, 94], "window": [163, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 248, 249, 250, 252, 253, 254, 329, 330, 331, 332, 333, 334, 360, 418, 420], "windows_s": [178, 179], "wise": [10, 14, 85, 134, 136, 137, 138, 139, 205, 206, 208, 209, 210, 211, 212, 213, 223, 259, 260, 261, 265, 279, 285, 286, 296, 298, 299, 300, 301, 302, 346, 373, 385, 386, 389, 390, 391, 392, 394, 395, 407, 408, 409, 410, 411, 412, 413, 414, 416, 417, 421, 422, 423, 424, 425, 426, 429, 430, 431, 439, 455], "within": [2, 85, 155, 156, 163, 178, 190, 196, 199, 200, 201, 202, 203, 213, 257, 258, 275, 277, 278, 279, 281, 283, 284, 286, 287, 292, 293, 294, 296, 299, 300, 304, 308, 311, 312, 313, 314, 315, 317, 318, 319, 321, 324, 329, 330, 331, 332, 333, 334, 358, 374, 396, 411, 463, 467], "without": [10, 15, 123, 163, 199, 200, 201, 230, 232, 292, 293, 294, 307, 309, 372, 375, 418, 444, 446, 454], "won": 374, "word": [163, 255, 336], "work": [1, 2, 3, 10, 12, 13, 14, 15, 17, 304, 373], "workflow": [13, 383, 467], "worth": 163, "wrap": [3, 346, 348, 374, 384, 434], "wrapper": 346, "wu": 163, "www": [5, 6], "x": [15, 16, 26, 30, 82, 85, 86, 130, 145, 150, 155, 196, 197, 199, 200, 201, 202, 203, 212, 223, 230, 232, 244, 258, 262, 263, 264, 266, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 296, 298, 299, 300, 301, 302, 304, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 329, 330, 331, 332, 333, 334, 340, 341, 342, 346, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 376, 378, 379, 380, 382, 398, 399, 415, 436, 441, 442, 447, 448, 452, 453, 458, 459, 460, 461, 462, 463, 464, 465], "x1": 307, "x2": 307, "x_": [30, 240, 312, 315, 320, 341, 442], "x_0": 341, "x_c": [312, 315], "x_i": [244, 311, 341, 384], "x_k": 312, "x_test": 15, "x_train": 15, "xavier": [270, 271, 274, 275], "xavier_norm": 269, "xavier_uniform": 269, "xiao": 7, "xie": 85, "xl": [72, 85], "xlarg": [53, 85], "xy": 442, "x\u2081": 307, "x\u2082": 307, "y": [15, 30, 85, 150, 199, 200, 201, 202, 203, 244, 258, 262, 263, 264, 276, 277, 278, 279, 280, 281, 283, 284, 286, 287, 292, 293, 294, 296, 299, 300, 301, 302, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 329, 330, 331, 332, 333, 334, 338, 339, 340, 341, 342, 376, 378, 379, 380, 382, 384, 398, 399, 441, 442, 447, 461], "y1": 436, "y2": 436, "y_": [30, 240, 312, 315, 320, 442], "y_c": [312, 315], "y_i": [244, 311], "y_train": 15, "yann": [8, 85], "yet": [15, 50, 52, 100, 373], "yield": [0, 1, 197, 374], "you": [0, 12, 14, 15, 92, 155, 163, 200, 202, 203, 304, 338, 346, 358, 372, 374, 383, 398, 399, 400, 405, 432, 434, 456, 458, 467], "your": [10, 15, 92, 100, 346, 358, 372, 374, 383, 467], "yu": 85, "z": [15, 85, 340, 342, 399, 404, 405], "zalandoresearch": 7, "ze": [85, 163], "zeiler": [85, 152], "zero": [22, 24, 25, 75, 155, 205, 208, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 244, 248, 249, 250, 252, 253, 254, 255, 268, 270, 271, 272, 273, 274, 275, 276, 278, 280, 281, 283, 289, 292, 293, 294, 296, 298, 299, 300, 301, 302, 324, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 346, 347, 360, 361, 362, 363, 364, 365, 366, 367, 398, 399, 400, 405, 406, 411, 422, 443, 452, 453], "zero_grad": [15, 198, 347, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 384], "zeros_lik": [399, 406], "zhang": 85, "zhmoginov": 85, "zhu": 85, "zhuang": 85, "zihang": 85, "zisserman": 85, "\u03c3\u1d62": 24}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "CIFAR10", "CIFAR100", "FashionMNIST", "MNIST", "Image Datasets", "lucid.einops", "Einops Functions", "lucid.einops.rearrange", "lucid.einops.reduce", "lucid.einops.repeat", "Lucid \ud83d\udc8e\u00b2", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "alexnet", "CoAtNet", "coatnet_0", "coatnet_1", "coatnet_2", "coatnet_3", "coatnet_4", "coatnet_5", "coatnet_6", "coatnet_7", "ConvNeXt", "ConvNeXt_V2", "convnext_base", "convnext_large", "convnext_small", "convnext_tiny", "convnext_v2_atto", "convnext_v2_base", "convnext_v2_femto", "convnext_v2_huge", "convnext_v2_large", "convnext_v2_nano", "convnext_v2_pico", "convnext_v2_tiny", "convnext_xlarge", "DenseNet", "densenet_121", "densenet_169", "densenet_201", "densenet_264", "EfficientNet", "EfficientNet_V2", "efficientnet_b0", "efficientnet_b1", "efficientnet_b2", "efficientnet_b3", "efficientnet_b4", "efficientnet_b5", "efficientnet_b6", "efficientnet_b7", "efficientnet_v2_l", "efficientnet_v2_m", "efficientnet_v2_s", "efficientnet_v2_xl", "Inception", "inception_v1", "inception_v3", "inception_v4", "InceptionNeXt", "inception_next_atto", "inception_next_base", "inception_next_small", "inception_next_tiny", "InceptionResNet", "inception_resnet_v1", "inception_resnet_v2", "ConvNets", "LeNet", "lenet_1", "lenet_4", "lenet_5", "MobileNet", "MobileNet_V2", "MobileNet_V3", "MobileNet_V4", "mobilenet", "mobilenet_v2", "mobilenet_v3_large", "mobilenet_v3_small", "mobilenet_v4_conv_large", "mobilenet_v4_conv_medium", "mobilenet_v4_conv_small", "mobilenet_v4_hybrid_large", "mobilenet_v4_hybrid_medium", "ResNeSt", "resnest_101", "resnest_14", "resnest_200", "resnest_26", "resnest_269", "resnest_50", "resnest_50_1s4x24d", "resnest_50_4s2x40d", "ResNet", "resnet_1001", "resnet_101", "resnet_152", "resnet_18", "resnet_200", "resnet_269", "resnet_34", "resnet_50", "wide_resnet_101", "wide_resnet_50", "ResNeXt", "resnext_101_32x16d", "resnext_101_32x32d", "resnext_101_32x4d", "resnext_101_32x8d", "resnext_101_64x4d", "resnext_50_32x4d", "SENet", "se_resnet_101", "se_resnet_152", "se_resnet_18", "se_resnet_34", "se_resnet_50", "se_resnext_101_32x4d", "se_resnext_101_32x8d", "se_resnext_101_64x4d", "se_resnext_50_32x4d", "SKNet", "sk_resnet_18", "sk_resnet_34", "sk_resnet_50", "sk_resnext_50_32x4d", "VGGNet", "vggnet_11", "vggnet_13", "vggnet_16", "vggnet_19", "Xception", "xception", "ZFNet", "zfnet", "lucid.models", "models.summarize", "Transformer", "transformer_base", "transformer_big", "CvT", "cvt_13", "cvt_21", "cvt_w24", "Transformers", "PVT", "PVT_V2", "pvt_huge", "pvt_large", "pvt_medium", "pvt_small", "pvt_tiny", "pvt_v2_b0", "pvt_v2_b1", "pvt_v2_b2", "pvt_v2_b2_li", "pvt_v2_b3", "pvt_v2_b4", "pvt_v2_b5", "SwinTransformer", "SwinTransformer_V2", "swin_base", "swin_large", "swin_small", "swin_tiny", "swin_v2_base", "swin_v2_giant", "swin_v2_huge", "swin_v2_large", "swin_v2_small", "swin_v2_tiny", "ViT", "vit_base", "vit_huge", "vit_large", "vit_small", "vit_tiny", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "Attention Functions", "nn.functional.scaled_dot_product_attention", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.drop_block", "nn.functional.drop_path", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "nn.functional.global_response_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.normalize", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "nn.functional.embedding", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "nn.DepthSeparableConv1d", "nn.DepthSeparableConv2d", "nn.DepthSeparableConv3d", "nn.SEModule", "nn.SelectiveKernel", "Fused Layers", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.HardSigmoid", "nn.HardSwish", "nn.LeakyReLU", "nn.ReLU", "nn.ReLU6", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Swish", "nn.Tanh", "Activation Layers", "nn.MultiHeadAttention", "nn.ScaledDotProductAttention", "Attention Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.DropBlock", "nn.DropPath", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "nn.Rearrange", "Einops Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.GlobalResponseNorm", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "nn.Embedding", "Sparse Layers", "nn.Transformer", "nn.TransformerDecoder", "nn.TransformerDecoderLayer", "nn.TransformerEncoder", "nn.TransformerEncoderLayer", "Transformer Layers", "nn.Upsample", "Vision Layers", "lucid.nn", "optim.Optimizer", "optim.lr_scheduler", "lr_scheduler.CosineAnnealingLR", "lr_scheduler.CyclicLR", "lr_scheduler.ExponentialLR", "lr_scheduler.LRScheduler", "lr_scheduler.LambdaLR", "lr_scheduler.MultiStepLR", "lr_scheduler.ReduceLROnPlateau", "lr_scheduler.StepLR", "LR Schedulers", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.Numeric", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.random.bernoulli", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.multiply", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.linspace", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.log2", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.swapaxes", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.broadcast_to", "lucid.chunk", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.masked_fill", "lucid.meshgrid", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.roll", "lucid.split", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.tril", "lucid.triu", "lucid.unsqueeze", "lucid.vstack", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": 373, "1d": 373, "2": 373, "2d": 373, "3": 373, "It": [372, 374], "The": 15, "ab": 407, "abstract": 15, "acceler": 15, "activ": [207, 229, 288, 306], "ad": 373, "adadelta": 360, "adagrad": 361, "adam": 362, "adamax": 364, "adamw": 363, "adaptive_avg_pool1d": 245, "adaptive_avg_pool2d": 246, "adaptive_avg_pool3d": 247, "adaptiveavgpool1d": 326, "adaptiveavgpool2d": 327, "adaptiveavgpool3d": 328, "add": 385, "addit": [24, 289], "advanc": [220, 467], "advantag": [10, 12, 13, 14, 304], "alexnet": [28, 29, 85], "algebra": 20, "algorithm": [359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "align": [15, 373], "alpha_dropout": 221, "alphadropout": 296, "also": 358, "anoth": 434, "arang": 396, "arcco": 408, "architectur": [28, 30, 39, 87, 88, 89, 121, 122, 152], "arcsin": 409, "arctan": 410, "asgd": 359, "attent": [214, 215, 229, 266, 291, 306], "attribut": [5, 6, 7, 8, 28, 82, 86, 112, 123, 130, 140, 145, 150, 152, 196, 198, 199, 200, 201, 202, 203, 259, 260, 261, 262, 263, 264, 265, 276, 277, 280, 281, 283, 284, 285, 287, 292, 293, 294, 296, 298, 299, 300, 301, 302, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 371, 384, 458, 459, 460, 461, 462, 463, 464, 465], "autodiff": 15, "automat": 15, "avg_pool1d": 248, "avg_pool2d": 249, "avg_pool3d": 250, "avgpool1d": 329, "avgpool2d": 330, "avgpool3d": 331, "axi": [373, 428], "backend": 15, "backpropag": 384, "backward": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 222, 230, 232, 257, 265, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 292, 293, 294, 296, 299, 300, 301, 302, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 329, 330, 331, 332, 333, 334, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 437, 439, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455], "base": [357, 384], "basic": 15, "batch_norm": 239, "batchnorm": 267, "batchnorm1d": 317, "batchnorm2d": 318, "batchnorm3d": 319, "bceloss": 311, "behavior": [245, 246, 247, 326, 327, 328], "benefit": 374, "bernoulli": 376, "between": [15, 384], "bilinear": [230, 307], "binari": 406, "binary_cross_entropi": 233, "bottleneck": [96, 97], "broadcast": [373, 435], "broadcast_to": 435, "buffer": 196, "calcul": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 112, 123, 130, 140, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 220, 222, 223, 230, 232, 245, 246, 247, 257, 259, 260, 261, 262, 263, 264, 265, 266, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 437, 439, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465], "captur": 375, "centercrop": 458, "choleski": 17, "chunk": 436, "cifar10": 5, "cifar100": 6, "class": [0, 1, 2, 5, 6, 7, 8, 28, 30, 39, 40, 54, 59, 60, 73, 77, 82, 86, 90, 91, 92, 93, 103, 112, 123, 130, 140, 145, 150, 152, 156, 159, 178, 179, 190, 196, 197, 198, 199, 200, 201, 202, 203, 259, 260, 261, 262, 263, 264, 265, 266, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 347, 349, 350, 351, 352, 353, 354, 355, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 384, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465], "clip": 411, "co": 412, "coatnet": [30, 85], "coatnet_0": 31, "coatnet_1": 32, "coatnet_2": 33, "coatnet_3": 34, "coatnet_4": 35, "coatnet_5": 36, "coatnet_6": 37, "coatnet_7": 38, "combin": 0, "compon": [3, 346], "compos": 456, "comput": [436, 441, 447], "concatdataset": [0, 1], "concaten": 437, "conclus": [3, 10, 12, 13, 14, 15, 304, 346, 348, 372, 373, 374, 383, 457, 467], "configur": [31, 32, 33, 34, 35, 36, 37, 38, 59, 96, 97, 104, 105, 106, 107, 108, 109, 110, 111], "constant": 268, "contain": 204, "conv": 267, "conv1d": [216, 292], "conv2d": [217, 293], "conv3d": [218, 294], "convbnrelu1d": 259, "convbnrelu2d": 260, "convbnrelu3d": 261, "convnet": 85, "convnext": [39, 85], "convnext_bas": 41, "convnext_larg": 42, "convnext_smal": 43, "convnext_tini": 44, "convnext_v2": 40, "convnext_v2_atto": 45, "convnext_v2_bas": 46, "convnext_v2_femto": 47, "convnext_v2_hug": 48, "convnext_v2_larg": 49, "convnext_v2_nano": 50, "convnext_v2_pico": 51, "convnext_v2_tini": 52, "convnext_xlarg": 53, "convolut": [163, 219, 229, 267, 295, 306], "core": 15, "cosh": 413, "cosineannealinglr": 349, "creat": [198, 384, 434], "cross_entropi": 234, "crossentropyloss": 312, "cube": 414, "custom": [1, 2, 3, 197, 347, 358, 467], "cvt": [159, 163], "cvt_13": 160, "cvt_21": 161, "cvt_w24": 162, "cycliclr": 350, "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 9], "defin": [2, 197, 347, 358], "definit": [12, 13, 14, 244, 304], "densenet": [54, 85], "densenet_121": 55, "densenet_169": 56, "densenet_201": 57, "densenet_264": 58, "depthseparableconv1d": 262, "depthseparableconv2d": 263, "depthseparableconv3d": 264, "depthwis": 267, "descript": [124, 125, 126, 127, 128, 129, 141, 142, 143, 375], "design": 15, "det": 18, "detail": [24, 98, 99, 100, 101, 102, 121, 122, 289, 338, 339, 340, 341, 342], "devic": [15, 384], "diag": 397, "differ": 156, "differenti": 15, "dilat": 220, "div": 386, "dot": 387, "drop_block": 222, "drop_path": 223, "dropblock": 297, "dropout": [224, 228, 229, 299, 303, 306], "dropout1d": [225, 300], "dropout2d": [226, 301], "dropout3d": [227, 302], "droppath": 298, "dtype": 384, "educ": 15, "efficientnet": [59, 85], "efficientnet_b0": 61, "efficientnet_b1": 62, "efficientnet_b2": 63, "efficientnet_b3": 64, "efficientnet_b4": 65, "efficientnet_b5": 66, "efficientnet_b6": 67, "efficientnet_b7": 68, "efficientnet_v2": 60, "efficientnet_v2_": 71, "efficientnet_v2_l": 69, "efficientnet_v2_m": 70, "efficientnet_v2_xl": 72, "eig": 19, "einop": [10, 11, 12, 13, 14, 305, 306], "elu": [205, 276], "embed": [255, 336], "empti": 398, "empty_lik": 399, "enabl": 15, "enhanc": 165, "evalu": 15, "exampl": [0, 1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 346, 347, 349, 350, 351, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 467], "excit": 267, "exp": 415, "exponentiallr": 351, "express": [240, 448], "ey": 400, "fashionmnist": 7, "featur": [4, 16, 136, 137, 138, 139, 144, 358, 383, 467], "flatten": 438, "formula": [349, 350, 351, 353, 354, 355, 356], "forward": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 112, 123, 130, 140, 150, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 220, 223, 230, 232, 245, 246, 247, 257, 259, 260, 261, 262, 263, 264, 265, 266, 270, 271, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 338, 339, 340, 341, 342, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 429, 430, 431, 432, 433, 437, 439, 442, 443, 444, 445, 446, 449, 450, 451, 452, 453, 454, 455, 458, 459, 460, 461, 462, 463, 464, 465], "free": 384, "from": [156, 434], "function": [11, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 155, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 268, 270, 271, 272, 273, 274, 275, 372, 374, 375, 376, 378, 379, 380, 381, 382, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455], "fuse": 267, "futur": 4, "gelu": [206, 277], "gener": [377, 406], "get": 358, "global_response_norm": 240, "globalresponsenorm": 320, "gpu": [15, 384], "grad_en": 372, "gradient": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 222, 230, 232, 257, 265, 275, 276, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 292, 293, 294, 296, 299, 300, 301, 302, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 321, 322, 323, 324, 329, 330, 331, 332, 333, 334, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 436, 437, 439, 441, 442, 443, 444, 445, 446, 447, 449, 450, 451, 452, 453, 454, 455], "hardsigmoid": 278, "hardswish": 279, "hook": [15, 384], "how": [15, 372, 374], "hstack": 439, "huber_loss": 235, "huberloss": 313, "hybrid": 30, "hyperparamet": [110, 111], "ident": 308, "imag": [9, 466], "incept": [73, 85], "inception_next_atto": 78, "inception_next_bas": 79, "inception_next_smal": 80, "inception_next_tini": 81, "inception_resnet_v1": 83, "inception_resnet_v2": 84, "inception_v1": 74, "inception_v3": 75, "inception_v4": 76, "inceptionnext": [77, 85], "inceptionresnet": 82, "infer": 384, "init": [268, 270, 271, 272, 273, 274, 275], "initi": 269, "inner": 388, "input": 434, "inspect": [358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "instal": 15, "instance_norm": 242, "instancenorm1d": 321, "instancenorm2d": 322, "instancenorm3d": 323, "integr": [3, 346, 383, 467], "interpol": 257, "inv": 21, "kaiming_norm": 270, "kaiming_uniform": 271, "kei": [3, 4, 136, 137, 138, 139, 144, 165, 346, 358, 383, 467], "kernel": 267, "lambdalr": 353, "layer": [104, 105, 106, 107, 108, 109, 267, 288, 291, 295, 303, 305, 306, 310, 316, 325, 335, 337, 343, 345], "layer_norm": 243, "layernorm": 324, "leaky_relu": 208, "leakyrelu": 280, "learn": 383, "lenet": [85, 86], "lenet_1": 87, "lenet_4": 88, "lenet_5": 89, "linalg": [16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27], "linear": [20, 229, 231, 232, 306, 309, 310], "linspac": 401, "list": 434, "load": 1, "log": 416, "log2": 417, "loss": [229, 236, 306, 316], "lr": 357, "lr_schedul": [348, 349, 350, 351, 352, 353, 354, 355, 356], "lrschedul": 352, "lucid": [3, 4, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 154, 229, 346, 358, 371, 372, 373, 374, 375, 376, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 467], "masked_fil": 441, "mathemat": [12, 13, 14, 240, 244, 289, 304, 338, 339, 340, 341, 342, 349, 350, 351, 353, 354, 355, 356, 384, 448], "matmul": 389, "matrix": 389, "matrix_pow": 22, "max": 418, "max_pool1d": 252, "max_pool2d": 253, "max_pool3d": 254, "maximum": 390, "maxpool1d": 332, "maxpool2d": 333, "maxpool3d": 334, "mean": 419, "mechan": [215, 266], "meshgrid": 442, "metadata": 375, "metal": 15, "method": [0, 1, 2, 5, 6, 7, 8, 82, 86, 145, 197, 198, 338, 339, 340, 341, 342, 347, 349, 350, 351, 352, 353, 354, 355, 356, 371, 384], "min": 420, "minimum": 391, "mlx": 15, "mnist": 8, "mobilenet": [85, 90, 94], "mobilenet_v2": [91, 95], "mobilenet_v3": 92, "mobilenet_v3_larg": 96, "mobilenet_v3_smal": 97, "mobilenet_v4": 93, "mobilenet_v4_conv_larg": 98, "mobilenet_v4_conv_medium": 99, "mobilenet_v4_conv_smal": 100, "mobilenet_v4_hybrid_larg": 101, "mobilenet_v4_hybrid_medium": 102, "model": [154, 155, 346], "modul": [197, 306], "moduledict": 199, "modulelist": 200, "more": 383, "move": 384, "mse_loss": 237, "mseloss": 314, "multiheadattent": 289, "multipl": [0, 389], "multipli": 392, "multisteplr": 354, "nadam": 365, "network": 15, "neural": 15, "new": 373, "newaxi": 373, "nll_loss": 238, "nllloss": 315, "nn": [15, 156, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 346], "no_grad": 374, "norm": 23, "normal": [229, 241, 244, 272, 306, 325, 459], "number": 377, "numer": 371, "ones": 402, "ones_lik": 403, "oper": [20, 389, 406], "optim": [347, 348, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370], "option": 289, "organ": 346, "other": 15, "outer": 393, "overview": [3, 4, 10, 73, 74, 75, 76, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 98, 99, 100, 101, 102, 113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 289, 338, 339, 340, 341, 342, 346, 348, 358, 383, 467], "pad": 443, "paramet": [1, 5, 6, 7, 8, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 280, 281, 283, 284, 285, 287, 289, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 374, 375, 376, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465], "parameterdict": 201, "parameterlist": 202, "pass": 150, "perform": 384, "pinv": 24, "pipelin": [3, 467], "pitfal": [372, 374], "pool": [229, 251, 306, 335], "potenti": [372, 374], "power": 394, "process": 255, "properti": [198, 384], "pvt": [163, 164], "pvt_huge": 166, "pvt_larg": 167, "pvt_medium": 168, "pvt_small": 169, "pvt_tini": 170, "pvt_v2": 165, "pvt_v2_b0": 171, "pvt_v2_b1": 172, "pvt_v2_b2": 173, "pvt_v2_b2_li": 174, "pvt_v2_b3": 175, "pvt_v2_b4": 176, "pvt_v2_b5": 177, "pyramid": 163, "qr": 25, "radam": 366, "rais": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27], "rand": 378, "randint": 379, "randn": 380, "random": [376, 377, 378, 379, 380, 381, 382, 383], "randomcrop": 460, "randomgrayscal": 461, "randomhorizontalflip": 462, "randomrot": 463, "randomverticalflip": 464, "ravel": 444, "rearrang": [10, 12, 304], "reciproc": 421, "reduc": [10, 13], "reducelronplateau": 355, "refer": [5, 6, 7, 8, 265, 358], "register_model": 375, "regular": 222, "relu": [209, 267, 281], "relu6": 282, "repeat": [10, 14, 445], "represent": [371, 384], "reshap": 446, "resiz": 465, "resnest": [85, 103], "resnest_101": 104, "resnest_14": 105, "resnest_200": 106, "resnest_26": 107, "resnest_269": 108, "resnest_50": 109, "resnest_50_1s4x24d": 110, "resnest_50_4s2x40d": 111, "resnet": [85, 112], "resnet_1001": 113, "resnet_101": 114, "resnet_152": 115, "resnet_18": 116, "resnet_200": 117, "resnet_269": 118, "resnet_34": 119, "resnet_50": 120, "resnext": [85, 123], "resnext_101_32x16d": 124, "resnext_101_32x32d": 125, "resnext_101_32x4d": 126, "resnext_101_32x8d": 127, "resnext_101_64x4d": 128, "resnext_50_32x4d": 129, "return": [12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 155, 157, 158, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 192, 193, 194, 195, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 266, 268, 270, 271, 272, 273, 274, 275, 282, 304, 336, 372, 374, 376, 378, 379, 380, 381, 382, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455], "rmsprop": 367, "roll": 447, "rotat": 258, "rprop": 368, "rule": [389, 428, 435], "scaled_dot_product_attent": 215, "scaleddotproductattent": 290, "schedul": 357, "se_resnet_101": 131, "se_resnet_152": 132, "se_resnet_18": 133, "se_resnet_34": 134, "se_resnet_50": 135, "se_resnext_101_32x4d": 136, "se_resnext_101_32x8d": 137, "se_resnext_101_64x4d": 138, "se_resnext_50_32x4d": 139, "see": 358, "seed": 381, "select": 267, "selectivekernel": 266, "selu": [210, 283], "semodul": 265, "senet": [85, 130], "separ": 267, "sequenti": 203, "sgd": 369, "shape": 15, "sigmoid": [211, 284], "sign": 422, "signatur": [0, 1, 2, 5, 6, 7, 8, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 230, 232, 233, 234, 235, 237, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 254, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 307, 308, 309, 311, 312, 313, 314, 315, 317, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 338, 339, 340, 341, 342, 344, 347, 349, 350, 351, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 374, 375, 376, 378, 379, 380, 381, 382, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465], "sin": 423, "sinh": 424, "sk_resnet_18": 141, "sk_resnet_34": 142, "sk_resnet_50": 143, "sk_resnext_50_32x4d": 144, "sknet": [85, 140], "softmax": [212, 285], "solv": 26, "spars": [306, 337], "split": 448, "sqrt": 425, "squar": 426, "squeez": [267, 449], "stack": 450, "start": 358, "state": [358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369], "steplr": 356, "sub": 395, "sum": 427, "summar": 155, "summari": 155, "svd": 27, "swap": 428, "swapax": 428, "swin": 163, "swin_bas": 180, "swin_larg": 181, "swin_smal": 182, "swin_tini": 183, "swin_v2_bas": 184, "swin_v2_giant": 185, "swin_v2_hug": 186, "swin_v2_larg": 187, "swin_v2_smal": 188, "swin_v2_tini": 189, "swintransform": 178, "swintransformer_v2": 179, "swish": 286, "switch": 15, "tabl": 155, "tan": 429, "tanh": [213, 287, 430], "tensor": [15, 373, 384, 406, 434, 440], "tile": 451, "totensor": 457, "trace": 431, "track": 384, "train": 15, "transform": [156, 163, 306, 338, 343, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467], "transformer_bas": 157, "transformer_big": 158, "transformerdecod": 339, "transformerdecoderlay": 340, "transformerencod": 341, "transformerencoderlay": 342, "transpos": 432, "tril": 452, "triu": 453, "unari": 406, "unfold": 220, "uniform": [273, 382], "unsqueez": 454, "upsampl": 344, "us": [1, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 384, 434], "usag": [4, 69, 70, 71, 72, 74, 75, 76, 83, 84, 86, 87, 88, 89, 98, 99, 100, 101, 102, 136, 137, 138, 139, 144, 196, 258, 289, 338, 339, 340, 341, 342, 348, 349, 350, 351, 352, 353, 354, 355, 356, 371, 372, 373, 374, 442, 456, 457, 467], "util": [229, 256], "utilit": 440, "valu": 448, "var": 433, "verif": 15, "vggnet": [85, 145], "vggnet_11": 146, "vggnet_13": 147, "vggnet_16": 148, "vggnet_19": 149, "vision": [163, 306, 345], "visual": 163, "vit": [163, 190], "vit_bas": 191, "vit_hug": 192, "vit_larg": 193, "vit_smal": 194, "vit_tini": 195, "vstack": 455, "weight": 269, "wide_resnet_101": 121, "wide_resnet_50": 122, "work": [4, 372, 374], "xavier_norm": 274, "xavier_uniform": 275, "xception": [85, 150, 151], "zero": 404, "zeros_lik": 405, "zfnet": [85, 152, 153], "\u00b2": 15}})