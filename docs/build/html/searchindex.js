Search.setIndex({"alltitles": {"@ Operator": [[173, "operator"]], "Activation Functions": [[41, null]], "Activation Layers": [[102, null], [113, null]], "Additional Details": [[16, "additional-details"]], "Admonitions and Usage Guidelines": [[160, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[52, "advanced-example-with-dilation"]], "Advanced Features": [[241, "advanced-features"]], "AlexNet": [[20, null]], "Algorithm": [[145, "algorithm"], [146, "algorithm"], [147, "algorithm"], [148, "algorithm"], [149, "algorithm"], [150, "algorithm"], [151, "algorithm"], [152, "algorithm"], [153, "algorithm"], [154, "algorithm"], [155, "algorithm"]], "Architecture": [[20, "architecture"], [24, "architecture"], [25, "architecture"], [26, "architecture"], [27, "architecture"]], "Attributes": [[5, "attributes"], [20, "attributes"], [23, "attributes"], [27, "attributes"], [30, "attributes"], [32, "attributes"], [33, "attributes"], [34, "attributes"], [35, "attributes"], [36, "attributes"], [37, "attributes"], [94, "attributes"], [95, "attributes"], [96, "attributes"], [97, "attributes"], [98, "attributes"], [99, "attributes"], [100, "attributes"], [101, "attributes"], [103, "attributes"], [104, "attributes"], [105, "attributes"], [107, "attributes"], [108, "attributes"], [109, "attributes"], [110, "attributes"], [111, "attributes"], [114, "attributes"], [115, "attributes"], [116, "attributes"], [118, "attributes"], [119, "attributes"], [120, "attributes"], [121, "attributes"], [122, "attributes"], [124, "attributes"], [125, "attributes"], [126, "attributes"], [127, "attributes"], [128, "attributes"], [129, "attributes"], [130, "attributes"], [132, "attributes"], [133, "attributes"], [134, "attributes"], [135, "attributes"], [136, "attributes"], [137, "attributes"], [138, "attributes"], [139, "attributes"], [140, "attributes"], [168, "attributes"], [232, "attributes"], [233, "attributes"], [234, "attributes"], [235, "attributes"], [236, "attributes"], [237, "attributes"], [238, "attributes"], [239, "attributes"]], "Backward Gradient Calculation": [[9, "backward-gradient-calculation"], [10, "backward-gradient-calculation"], [11, "backward-gradient-calculation"], [13, "backward-gradient-calculation"], [14, "backward-gradient-calculation"], [15, "backward-gradient-calculation"], [16, "backward-gradient-calculation"], [17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [33, "backward-gradient-calculation"], [34, "backward-gradient-calculation"], [35, "backward-gradient-calculation"], [36, "backward-gradient-calculation"], [37, "backward-gradient-calculation"], [39, "backward-gradient-calculation"], [40, "backward-gradient-calculation"], [42, "backward-gradient-calculation"], [43, "backward-gradient-calculation"], [44, "backward-gradient-calculation"], [45, "backward-gradient-calculation"], [46, "backward-gradient-calculation"], [47, "backward-gradient-calculation"], [60, "backward-gradient-calculation"], [62, "backward-gradient-calculation"], [84, "backward-gradient-calculation"], [93, "backward-gradient-calculation"], [94, "backward-gradient-calculation"], [95, "backward-gradient-calculation"], [96, "backward-gradient-calculation"], [97, "backward-gradient-calculation"], [98, "backward-gradient-calculation"], [99, "backward-gradient-calculation"], [100, "backward-gradient-calculation"], [101, "backward-gradient-calculation"], [103, "backward-gradient-calculation"], [104, "backward-gradient-calculation"], [105, "backward-gradient-calculation"], [107, "backward-gradient-calculation"], [108, "backward-gradient-calculation"], [109, "backward-gradient-calculation"], [110, "backward-gradient-calculation"], [111, "backward-gradient-calculation"], [114, "backward-gradient-calculation"], [115, "backward-gradient-calculation"], [116, "backward-gradient-calculation"], [118, "backward-gradient-calculation"], [119, "backward-gradient-calculation"], [120, "backward-gradient-calculation"], [121, "backward-gradient-calculation"], [122, "backward-gradient-calculation"], [124, "backward-gradient-calculation"], [125, "backward-gradient-calculation"], [126, "backward-gradient-calculation"], [127, "backward-gradient-calculation"], [128, "backward-gradient-calculation"], [129, "backward-gradient-calculation"], [130, "backward-gradient-calculation"], [135, "backward-gradient-calculation"], [136, "backward-gradient-calculation"], [137, "backward-gradient-calculation"], [138, "backward-gradient-calculation"], [139, "backward-gradient-calculation"], [140, "backward-gradient-calculation"], [169, "backward-gradient-calculation"], [170, "backward-gradient-calculation"], [171, "backward-gradient-calculation"], [172, "backward-gradient-calculation"], [173, "backward-gradient-calculation"], [174, "backward-gradient-calculation"], [175, "backward-gradient-calculation"], [176, "backward-gradient-calculation"], [177, "backward-gradient-calculation"], [178, "backward-gradient-calculation"], [179, "backward-gradient-calculation"], [190, "backward-gradient-calculation"], [191, "backward-gradient-calculation"], [192, "backward-gradient-calculation"], [193, "backward-gradient-calculation"], [194, "backward-gradient-calculation"], [195, "backward-gradient-calculation"], [196, "backward-gradient-calculation"], [197, "backward-gradient-calculation"], [198, "backward-gradient-calculation"], [199, "backward-gradient-calculation"], [200, "backward-gradient-calculation"], [201, "backward-gradient-calculation"], [202, "backward-gradient-calculation"], [203, "backward-gradient-calculation"], [204, "backward-gradient-calculation"], [205, "backward-gradient-calculation"], [206, "backward-gradient-calculation"], [207, "backward-gradient-calculation"], [208, "backward-gradient-calculation"], [209, "backward-gradient-calculation"], [210, "backward-gradient-calculation"], [211, "backward-gradient-calculation"], [212, "backward-gradient-calculation"], [213, "backward-gradient-calculation"], [214, "backward-gradient-calculation"], [216, "backward-gradient-calculation"], [218, "backward-gradient-calculation"], [220, "backward-gradient-calculation"], [221, "backward-gradient-calculation"], [222, "backward-gradient-calculation"], [223, "backward-gradient-calculation"], [224, "backward-gradient-calculation"], [225, "backward-gradient-calculation"], [226, "backward-gradient-calculation"], [227, "backward-gradient-calculation"], [228, "backward-gradient-calculation"], [229, "backward-gradient-calculation"]], "Behavior": [[73, "behavior"], [74, "behavior"], [75, "behavior"], [132, "behavior"], [133, "behavior"], [134, "behavior"]], "Benefits": [[159, "benefits"]], "Binary Functions": [[189, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [20, "class-signature"], [23, "class-signature"], [27, "class-signature"], [30, "class-signature"], [31, "class-signature"], [32, "class-signature"], [33, "class-signature"], [34, "class-signature"], [35, "class-signature"], [36, "class-signature"], [37, "class-signature"], [94, "class-signature"], [95, "class-signature"], [96, "class-signature"], [97, "class-signature"], [98, "class-signature"], [99, "class-signature"], [100, "class-signature"], [101, "class-signature"], [103, "class-signature"], [104, "class-signature"], [105, "class-signature"], [107, "class-signature"], [108, "class-signature"], [109, "class-signature"], [110, "class-signature"], [111, "class-signature"], [114, "class-signature"], [115, "class-signature"], [116, "class-signature"], [118, "class-signature"], [119, "class-signature"], [120, "class-signature"], [121, "class-signature"], [122, "class-signature"], [124, "class-signature"], [125, "class-signature"], [126, "class-signature"], [127, "class-signature"], [128, "class-signature"], [129, "class-signature"], [130, "class-signature"], [132, "class-signature"], [133, "class-signature"], [134, "class-signature"], [135, "class-signature"], [136, "class-signature"], [137, "class-signature"], [138, "class-signature"], [139, "class-signature"], [140, "class-signature"], [143, "class-signature"], [145, "class-signature"], [146, "class-signature"], [147, "class-signature"], [148, "class-signature"], [149, "class-signature"], [150, "class-signature"], [151, "class-signature"], [152, "class-signature"], [153, "class-signature"], [154, "class-signature"], [155, "class-signature"], [168, "class-signature"], [230, "class-signature"], [231, "class-signature"], [232, "class-signature"], [233, "class-signature"], [234, "class-signature"], [235, "class-signature"], [236, "class-signature"], [237, "class-signature"], [238, "class-signature"], [239, "class-signature"]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [7, "conclusion"], [142, "conclusion"], [157, "conclusion"], [158, "conclusion"], [159, "conclusion"], [167, "conclusion"], [231, "conclusion"], [241, "conclusion"]], "Containers": [[38, null]], "ConvNets": [[22, null], [29, "convnets"]], "Convolution Functions": [[51, null], [59, null]], "Convolution Layers": [[106, null], [113, null]], "Core Components": [[7, "core-components"]], "Create a Tensor from a list": [[215, null]], "Creating a Parameter": [[32, null]], "Creating a tensor with gradient tracking": [[168, null]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[241, "custom-pipelines"]], "Defining a Custom Optimizer": [[144, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[31, null]], "Defining a custom optimizer": [[143, null]], "Dropout Functions": [[58, null], [59, null]], "Dropout Layers": [[112, null], [113, null]], "Example": [[3, null], [3, null], [3, null], [9, "example"], [10, "example"], [11, "example"], [13, "example"], [14, "example"], [15, "example"], [16, "example"], [17, "example"], [18, "example"], [19, "example"], [52, "example"], [142, null], [142, null], [142, null], [157, "example"], [159, "example"], [162, "example"], [163, "example"], [164, "example"], [165, "example"], [166, "example"], [167, null], [167, null], [167, null], [180, "example"], [181, "example"], [182, "example"], [183, "example"], [184, "example"], [185, "example"], [186, "example"], [187, "example"], [188, "example"], [190, "example"], [191, "example"], [192, "example"], [193, "example"], [194, "example"], [195, "example"], [196, "example"], [197, "example"], [199, "example"], [201, "example"], [203, "example"], [204, "example"], [205, "example"], [206, "example"], [207, "example"], [208, "example"], [209, "example"], [210, "example"], [211, "example"], [212, "example"], [213, "example"], [214, "example"], [216, "example"], [218, "example"], [222, "example"], [224, "example"], [225, "example"], [226, "example"], [228, "example"], [229, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[158, null]], "Example 2: Adding a new axis to a 2D tensor": [[158, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[158, null]], "Example Usage": [[7, "example-usage"], [23, "example-usage"], [24, "example-usage"], [25, "example-usage"], [26, "example-usage"], [85, "example-usage"], [230, "example-usage"], [231, "example-usage"], [241, "example-usage"]], "Example Use Cases": [[160, "example-use-cases"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [8, "examples"], [20, "examples"], [21, "examples"], [27, "examples"], [28, "examples"], [30, "examples"], [31, "examples"], [32, "examples"], [33, "examples"], [34, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [39, "examples"], [40, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [47, "examples"], [48, "examples"], [49, "examples"], [50, "examples"], [53, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [60, "examples"], [62, "examples"], [63, "examples"], [64, "examples"], [65, "examples"], [67, "examples"], [68, "examples"], [69, "examples"], [71, "examples"], [72, "examples"], [73, "examples"], [74, "examples"], [75, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [80, "examples"], [81, "examples"], [82, "examples"], [84, "examples"], [86, "examples"], [88, "examples"], [89, "examples"], [90, "examples"], [91, "examples"], [92, "examples"], [93, "examples"], [94, "examples"], [95, "examples"], [96, "examples"], [97, "examples"], [98, "examples"], [99, "examples"], [100, "examples"], [101, "examples"], [103, "examples"], [104, "examples"], [105, "examples"], [107, "examples"], [108, "examples"], [109, "examples"], [110, "examples"], [111, "examples"], [114, "examples"], [115, "examples"], [116, "examples"], [118, "examples"], [119, "examples"], [120, "examples"], [121, "examples"], [122, "examples"], [124, "examples"], [125, "examples"], [126, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [130, "examples"], [132, "examples"], [133, "examples"], [134, "examples"], [135, "examples"], [136, "examples"], [137, "examples"], [138, "examples"], [139, "examples"], [140, "examples"], [143, "examples"], [144, "examples"], [145, "examples"], [146, "examples"], [147, "examples"], [148, "examples"], [149, "examples"], [150, "examples"], [151, "examples"], [152, "examples"], [153, "examples"], [154, "examples"], [155, "examples"], [168, "examples"], [169, "examples"], [170, "examples"], [171, "examples"], [172, "examples"], [174, "examples"], [175, "examples"], [176, "examples"], [177, "examples"], [178, "examples"], [179, "examples"], [198, "examples"], [200, "examples"], [202, "examples"], [215, "examples"], [217, "examples"], [220, "examples"], [221, "examples"], [223, "examples"], [227, "examples"], [232, "examples"], [233, "examples"], [234, "examples"], [235, "examples"], [236, "examples"], [237, "examples"], [238, "examples"], [239, "examples"]], "Features": [[8, "features"]], "Forward Calculation": [[9, "forward-calculation"], [10, "forward-calculation"], [11, "forward-calculation"], [13, "forward-calculation"], [14, "forward-calculation"], [15, "forward-calculation"], [16, "forward-calculation"], [17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [33, "forward-calculation"], [34, "forward-calculation"], [35, "forward-calculation"], [36, "forward-calculation"], [37, "forward-calculation"], [39, "forward-calculation"], [40, "forward-calculation"], [42, "forward-calculation"], [43, "forward-calculation"], [44, "forward-calculation"], [45, "forward-calculation"], [46, "forward-calculation"], [47, "forward-calculation"], [52, "forward-calculation"], [60, "forward-calculation"], [62, "forward-calculation"], [73, "forward-calculation"], [74, "forward-calculation"], [75, "forward-calculation"], [84, "forward-calculation"], [88, "forward-calculation"], [89, "forward-calculation"], [92, "forward-calculation"], [93, "forward-calculation"], [94, "forward-calculation"], [95, "forward-calculation"], [96, "forward-calculation"], [97, "forward-calculation"], [98, "forward-calculation"], [99, "forward-calculation"], [100, "forward-calculation"], [101, "forward-calculation"], [103, "forward-calculation"], [104, "forward-calculation"], [105, "forward-calculation"], [107, "forward-calculation"], [108, "forward-calculation"], [109, "forward-calculation"], [110, "forward-calculation"], [111, "forward-calculation"], [114, "forward-calculation"], [115, "forward-calculation"], [116, "forward-calculation"], [118, "forward-calculation"], [119, "forward-calculation"], [120, "forward-calculation"], [121, "forward-calculation"], [122, "forward-calculation"], [124, "forward-calculation"], [125, "forward-calculation"], [126, "forward-calculation"], [127, "forward-calculation"], [128, "forward-calculation"], [129, "forward-calculation"], [130, "forward-calculation"], [132, "forward-calculation"], [133, "forward-calculation"], [134, "forward-calculation"], [135, "forward-calculation"], [136, "forward-calculation"], [137, "forward-calculation"], [138, "forward-calculation"], [139, "forward-calculation"], [140, "forward-calculation"], [169, "forward-calculation"], [170, "forward-calculation"], [171, "forward-calculation"], [172, "forward-calculation"], [173, "forward-calculation"], [174, "forward-calculation"], [175, "forward-calculation"], [176, "forward-calculation"], [177, "forward-calculation"], [178, "forward-calculation"], [179, "forward-calculation"], [190, "forward-calculation"], [191, "forward-calculation"], [192, "forward-calculation"], [193, "forward-calculation"], [194, "forward-calculation"], [195, "forward-calculation"], [196, "forward-calculation"], [197, "forward-calculation"], [198, "forward-calculation"], [199, "forward-calculation"], [200, "forward-calculation"], [201, "forward-calculation"], [202, "forward-calculation"], [203, "forward-calculation"], [204, "forward-calculation"], [205, "forward-calculation"], [206, "forward-calculation"], [207, "forward-calculation"], [208, "forward-calculation"], [209, "forward-calculation"], [210, "forward-calculation"], [211, "forward-calculation"], [212, "forward-calculation"], [213, "forward-calculation"], [214, "forward-calculation"], [216, "forward-calculation"], [218, "forward-calculation"], [220, "forward-calculation"], [221, "forward-calculation"], [222, "forward-calculation"], [223, "forward-calculation"], [224, "forward-calculation"], [225, "forward-calculation"], [226, "forward-calculation"], [227, "forward-calculation"], [228, "forward-calculation"], [229, "forward-calculation"], [232, "forward-calculation"], [233, "forward-calculation"], [234, "forward-calculation"], [235, "forward-calculation"], [236, "forward-calculation"], [237, "forward-calculation"], [238, "forward-calculation"], [239, "forward-calculation"]], "Function Signature": [[9, "function-signature"], [10, "function-signature"], [11, "function-signature"], [13, "function-signature"], [14, "function-signature"], [15, "function-signature"], [16, "function-signature"], [17, "function-signature"], [18, "function-signature"], [19, "function-signature"], [21, "function-signature"], [24, "function-signature"], [25, "function-signature"], [26, "function-signature"], [28, "function-signature"], [39, "function-signature"], [40, "function-signature"], [42, "function-signature"], [43, "function-signature"], [44, "function-signature"], [45, "function-signature"], [46, "function-signature"], [47, "function-signature"], [48, "function-signature"], [49, "function-signature"], [50, "function-signature"], [52, "function-signature"], [53, "function-signature"], [54, "function-signature"], [55, "function-signature"], [56, "function-signature"], [57, "function-signature"], [60, "function-signature"], [62, "function-signature"], [63, "function-signature"], [64, "function-signature"], [65, "function-signature"], [67, "function-signature"], [68, "function-signature"], [69, "function-signature"], [71, "function-signature"], [72, "function-signature"], [73, "function-signature"], [74, "function-signature"], [75, "function-signature"], [76, "function-signature"], [77, "function-signature"], [78, "function-signature"], [80, "function-signature"], [81, "function-signature"], [82, "function-signature"], [84, "function-signature"], [85, "function-signature"], [86, "function-signature"], [88, "function-signature"], [89, "function-signature"], [90, "function-signature"], [91, "function-signature"], [92, "function-signature"], [93, "function-signature"], [157, "function-signature"], [159, "function-signature"], [162, "function-signature"], [163, "function-signature"], [164, "function-signature"], [165, "function-signature"], [166, "function-signature"], [169, "function-signature"], [170, "function-signature"], [171, "function-signature"], [172, "function-signature"], [173, "function-signature"], [174, "function-signature"], [175, "function-signature"], [176, "function-signature"], [177, "function-signature"], [178, "function-signature"], [179, "function-signature"], [180, "function-signature"], [181, "function-signature"], [182, "function-signature"], [183, "function-signature"], [184, "function-signature"], [185, "function-signature"], [186, "function-signature"], [187, "function-signature"], [188, "function-signature"], [190, "function-signature"], [191, "function-signature"], [192, "function-signature"], [193, "function-signature"], [194, "function-signature"], [195, "function-signature"], [196, "function-signature"], [197, "function-signature"], [198, "function-signature"], [199, "function-signature"], [200, "function-signature"], [201, "function-signature"], [202, "function-signature"], [203, "function-signature"], [204, "function-signature"], [205, "function-signature"], [206, "function-signature"], [207, "function-signature"], [208, "function-signature"], [209, "function-signature"], [210, "function-signature"], [211, "function-signature"], [212, "function-signature"], [213, "function-signature"], [214, "function-signature"], [215, "function-signature"], [216, "function-signature"], [217, "function-signature"], [218, "function-signature"], [220, "function-signature"], [221, "function-signature"], [222, "function-signature"], [223, "function-signature"], [224, "function-signature"], [225, "function-signature"], [226, "function-signature"], [227, "function-signature"], [228, "function-signature"], [229, "function-signature"]], "Future Work": [[4, "future-work"]], "Getting Started": [[144, "getting-started"]], "How It Works": [[157, "how-it-works"], [159, "how-it-works"]], "Image Datasets": [[6, null]], "Image Transformations": [[240, null]], "Indexing and slicing": [[168, null]], "Inspecting Optimizer State": [[144, null], [145, null], [146, null], [147, null], [148, null], [149, null], [150, null], [151, null], [152, null], [153, null], [154, null], [155, null]], "Integration with lucid": [[3, "integration-with-lucid"], [142, "integration-with-lucid"], [167, "integration-with-lucid"], [241, "integration-with-lucid"]], "Iterating through a tensor": [[168, null]], "Key Components": [[3, "key-components"], [142, "key-components"]], "Key Features": [[4, "key-features"], [7, "key-features"], [144, "key-features"], [167, "key-features"]], "Key Transformations": [[241, "key-transformations"]], "LeNet": [[23, null]], "Learn More": [[167, null]], "Limitations": [[7, "limitations"]], "Linear Algebra Operations": [[12, null]], "Linear Functions": [[59, null], [61, null]], "Linear Layers": [[113, null], [117, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[59, null], [66, null]], "Loss Layers": [[113, null], [123, null]], "Lucid": [[7, null]], "Matrix Multiplication Rules": [[173, "matrix-multiplication-rules"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [23, "methods"], [31, "methods"], [32, "methods"], [143, "methods"], [168, "methods"]], "Modules": [[113, null]], "Normalization Functions": [[59, null], [70, null]], "Normalization Layers": [[113, null], [131, null]], "Notes": [[7, "notes"]], "Optimizers": [[156, null]], "Organizing Models": [[142, "organizing-models"]], "Overview": [[3, "overview"], [4, "overview"], [7, "overview"], [23, "overview"], [24, "overview"], [25, "overview"], [26, "overview"], [142, "overview"], [144, "overview"], [167, "overview"], [241, "overview"]], "Parameters": [[1, "parameters"], [5, "parameters"], [9, "parameters"], [10, "parameters"], [11, "parameters"], [13, "parameters"], [14, "parameters"], [15, "parameters"], [16, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [20, "parameters"], [21, "parameters"], [23, "parameters"], [27, "parameters"], [28, "parameters"], [30, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [39, "parameters"], [40, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [60, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [88, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [103, "parameters"], [104, "parameters"], [105, "parameters"], [107, "parameters"], [108, "parameters"], [109, "parameters"], [110, "parameters"], [111, "parameters"], [114, "parameters"], [115, "parameters"], [116, "parameters"], [118, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [122, "parameters"], [124, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [154, "parameters"], [155, "parameters"], [159, "parameters"], [162, "parameters"], [163, "parameters"], [164, "parameters"], [165, "parameters"], [166, "parameters"], [168, "parameters"], [169, "parameters"], [170, "parameters"], [171, "parameters"], [172, "parameters"], [173, "parameters"], [174, "parameters"], [175, "parameters"], [176, "parameters"], [177, "parameters"], [178, "parameters"], [179, "parameters"], [180, "parameters"], [181, "parameters"], [182, "parameters"], [183, "parameters"], [184, "parameters"], [185, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [190, "parameters"], [191, "parameters"], [192, "parameters"], [193, "parameters"], [194, "parameters"], [195, "parameters"], [196, "parameters"], [197, "parameters"], [198, "parameters"], [199, "parameters"], [200, "parameters"], [201, "parameters"], [202, "parameters"], [203, "parameters"], [204, "parameters"], [205, "parameters"], [206, "parameters"], [207, "parameters"], [208, "parameters"], [209, "parameters"], [210, "parameters"], [211, "parameters"], [212, "parameters"], [213, "parameters"], [214, "parameters"], [215, "parameters"], [216, "parameters"], [217, "parameters"], [218, "parameters"], [220, "parameters"], [221, "parameters"], [222, "parameters"], [223, "parameters"], [224, "parameters"], [225, "parameters"], [226, "parameters"], [227, "parameters"], [228, "parameters"], [229, "parameters"], [230, "parameters"], [231, "parameters"], [232, "parameters"], [233, "parameters"], [234, "parameters"], [235, "parameters"], [236, "parameters"], [237, "parameters"], [238, "parameters"], [239, "parameters"]], "Performing backpropagation": [[168, null]], "Pooling Functions": [[59, null], [79, null]], "Pooling Layers": [[113, null], [141, null]], "Potential Pitfalls": [[157, "potential-pitfalls"], [159, "potential-pitfalls"]], "Properties": [[32, "properties"], [168, "properties"]], "Raises": [[9, "raises"], [10, "raises"], [11, "raises"], [13, "raises"], [14, "raises"], [15, "raises"], [16, "raises"], [17, "raises"], [18, "raises"], [19, "raises"]], "Random Number Generations": [[161, null]], "References": [[5, "references"], [144, "references"]], "Returns": [[9, "returns"], [10, "returns"], [11, "returns"], [13, "returns"], [14, "returns"], [15, "returns"], [16, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [21, "returns"], [24, "returns"], [25, "returns"], [26, "returns"], [28, "returns"], [39, "returns"], [40, "returns"], [42, "returns"], [43, "returns"], [44, "returns"], [45, "returns"], [46, "returns"], [47, "returns"], [48, "returns"], [49, "returns"], [50, "returns"], [52, "returns"], [53, "returns"], [54, "returns"], [55, "returns"], [56, "returns"], [57, "returns"], [60, "returns"], [62, "returns"], [63, "returns"], [64, "returns"], [65, "returns"], [67, "returns"], [68, "returns"], [69, "returns"], [71, "returns"], [72, "returns"], [73, "returns"], [74, "returns"], [75, "returns"], [76, "returns"], [77, "returns"], [78, "returns"], [80, "returns"], [81, "returns"], [82, "returns"], [84, "returns"], [85, "returns"], [86, "returns"], [88, "returns"], [89, "returns"], [90, "returns"], [91, "returns"], [92, "returns"], [93, "returns"], [157, "returns"], [159, "returns"], [162, "returns"], [163, "returns"], [164, "returns"], [165, "returns"], [166, "returns"], [169, "returns"], [170, "returns"], [171, "returns"], [172, "returns"], [173, "returns"], [174, "returns"], [175, "returns"], [176, "returns"], [177, "returns"], [178, "returns"], [179, "returns"], [180, "returns"], [181, "returns"], [182, "returns"], [183, "returns"], [184, "returns"], [185, "returns"], [186, "returns"], [187, "returns"], [188, "returns"], [190, "returns"], [191, "returns"], [192, "returns"], [193, "returns"], [194, "returns"], [195, "returns"], [196, "returns"], [197, "returns"], [198, "returns"], [199, "returns"], [200, "returns"], [201, "returns"], [202, "returns"], [203, "returns"], [204, "returns"], [205, "returns"], [206, "returns"], [207, "returns"], [208, "returns"], [209, "returns"], [210, "returns"], [211, "returns"], [212, "returns"], [213, "returns"], [214, "returns"], [215, "returns"], [216, "returns"], [217, "returns"], [218, "returns"], [220, "returns"], [221, "returns"], [222, "returns"], [223, "returns"], [224, "returns"], [225, "returns"], [226, "returns"], [227, "returns"], [228, "returns"], [229, "returns"]], "See Also": [[144, "see-also"]], "Tensor Generating Functions": [[189, null]], "Tensor Operations": [[189, null]], "Tensor Utilites": [[219, null]], "Type Definitions": [[160, "type-definitions"]], "Unary Functions": [[189, null]], "Usage": [[4, "usage"], [30, "usage"], [85, "usage"], [157, "usage"], [158, "usage"], [159, "usage"], [220, "usage"], [230, "usage"], [231, "usage"], [241, "usage"]], "Use another Tensor as input": [[215, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using the ASGD Optimizer": [[145, null]], "Using the Adadelta Optimizer": [[146, null]], "Using the Adagrad Optimizer": [[147, null]], "Using the Adam Optimizer": [[148, null]], "Using the AdamW Optimizer": [[149, null]], "Using the Adamax Optimizer": [[150, null]], "Using the NAdam Optimizer": [[151, null]], "Using the RAdam Optimizer": [[152, null]], "Using the RMSprop Optimizer": [[153, null]], "Using the Rprop Optimizer": [[154, null]], "Using the SGD Optimizer": [[155, null]], "Utility Functions": [[59, null], [83, null]], "Weight Initializations": [[87, null]], "Why Use Type Aliases?": [[160, null]], "ZFNet": [[27, null]], "activation Functions": [[59, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "datasets.MNIST": [[5, null]], "lucid.Tensor": [[168, null]], "lucid.abs": [[190, null]], "lucid.add": [[169, null]], "lucid.arange": [[180, null]], "lucid.arccos": [[191, null]], "lucid.arcsin": [[192, null]], "lucid.arctan": [[193, null]], "lucid.clip": [[194, null]], "lucid.concatenate": [[216, null]], "lucid.cos": [[195, null]], "lucid.cosh": [[196, null]], "lucid.cube": [[197, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[181, null]], "lucid.div": [[170, null]], "lucid.dot": [[171, null]], "lucid.empty": [[182, null]], "lucid.empty_like": [[183, null]], "lucid.exp": [[198, null]], "lucid.eye": [[184, null]], "lucid.flatten": [[217, null]], "lucid.grad_enabled": [[157, null]], "lucid.hstack": [[218, null]], "lucid.inner": [[172, null]], "lucid.linalg": [[8, null]], "lucid.linalg.cholesky": [[9, null]], "lucid.linalg.det": [[10, null]], "lucid.linalg.eig": [[11, null]], "lucid.linalg.inv": [[13, null]], "lucid.linalg.matrix_power": [[14, null]], "lucid.linalg.norm": [[15, null]], "lucid.linalg.pinv": [[16, null]], "lucid.linalg.qr": [[17, null]], "lucid.linalg.solve": [[18, null]], "lucid.linalg.svd": [[19, null]], "lucid.log": [[199, null]], "lucid.matmul": [[173, null]], "lucid.max": [[200, null]], "lucid.maximum": [[174, null]], "lucid.mean": [[201, null]], "lucid.meshgrid": [[220, null]], "lucid.min": [[202, null]], "lucid.minimum": [[175, null]], "lucid.models": [[29, null]], "lucid.mul": [[176, null]], "lucid.newaxis": [[158, null]], "lucid.nn": [[142, null]], "lucid.nn.functional": [[59, null]], "lucid.no_grad": [[159, null]], "lucid.ones": [[185, null]], "lucid.ones_like": [[186, null]], "lucid.optim": [[144, null]], "lucid.outer": [[177, null]], "lucid.pad": [[221, null]], "lucid.power": [[178, null]], "lucid.random": [[167, null]], "lucid.random.rand": [[162, null]], "lucid.random.randint": [[163, null]], "lucid.random.randn": [[164, null]], "lucid.random.seed": [[165, null]], "lucid.random.uniform": [[166, null]], "lucid.ravel": [[222, null]], "lucid.reciprocal": [[203, null]], "lucid.repeat": [[223, null]], "lucid.reshape": [[224, null]], "lucid.sign": [[204, null]], "lucid.sin": [[205, null]], "lucid.sinh": [[206, null]], "lucid.sqrt": [[207, null]], "lucid.square": [[208, null]], "lucid.squeeze": [[225, null]], "lucid.stack": [[226, null]], "lucid.sub": [[179, null]], "lucid.sum": [[209, null]], "lucid.tan": [[210, null]], "lucid.tanh": [[211, null]], "lucid.tensor": [[215, null]], "lucid.tile": [[227, null]], "lucid.trace": [[212, null]], "lucid.transforms": [[241, null]], "lucid.transpose": [[213, null]], "lucid.types": [[160, null]], "lucid.unsqueeze": [[228, null]], "lucid.var": [[214, null]], "lucid.vstack": [[229, null]], "lucid.zeros": [[187, null]], "lucid.zeros_like": [[188, null]], "models.alexnet": [[21, null]], "models.lenet_1": [[24, null]], "models.lenet_4": [[25, null]], "models.lenet_5": [[26, null]], "models.zfnet": [[28, null]], "nn.AdaptiveAvgPool1d": [[132, null]], "nn.AdaptiveAvgPool2d": [[133, null]], "nn.AdaptiveAvgPool3d": [[134, null]], "nn.AlphaDropout": [[107, null]], "nn.AvgPool1d": [[135, null]], "nn.AvgPool2d": [[136, null]], "nn.AvgPool3d": [[137, null]], "nn.BCELoss": [[118, null]], "nn.BatchNorm1d": [[124, null]], "nn.BatchNorm2d": [[125, null]], "nn.BatchNorm3d": [[126, null]], "nn.Bilinear": [[114, null]], "nn.Buffer": [[30, null]], "nn.Conv1d": [[103, null]], "nn.Conv2d": [[104, null]], "nn.Conv3d": [[105, null]], "nn.CrossEntropyLoss": [[119, null]], "nn.Dropout": [[108, null]], "nn.Dropout1d": [[109, null]], "nn.Dropout2d": [[110, null]], "nn.Dropout3d": [[111, null]], "nn.ELU": [[94, null]], "nn.GELU": [[95, null]], "nn.HuberLoss": [[120, null]], "nn.Identity": [[115, null]], "nn.InstanceNorm1d": [[127, null]], "nn.InstanceNorm2d": [[128, null]], "nn.InstanceNorm3d": [[129, null]], "nn.LayerNorm": [[130, null]], "nn.LeakyReLU": [[96, null]], "nn.Linear": [[116, null]], "nn.MSELoss": [[121, null]], "nn.MaxPool1d": [[138, null]], "nn.MaxPool2d": [[139, null]], "nn.MaxPool3d": [[140, null]], "nn.Module": [[31, null]], "nn.ModuleDict": [[33, null]], "nn.ModuleList": [[34, null]], "nn.NLLLoss": [[122, null]], "nn.Parameter": [[32, null]], "nn.ParameterDict": [[35, null]], "nn.ParameterList": [[36, null]], "nn.ReLU": [[97, null]], "nn.SELU": [[98, null]], "nn.Sequential": [[37, null]], "nn.Sigmoid": [[99, null]], "nn.Softmax": [[100, null]], "nn.Tanh": [[101, null]], "nn.functional.adaptive_avg_pool1d": [[73, null]], "nn.functional.adaptive_avg_pool2d": [[74, null]], "nn.functional.adaptive_avg_pool3d": [[75, null]], "nn.functional.alpha_dropout": [[53, null]], "nn.functional.avg_pool1d": [[76, null]], "nn.functional.avg_pool2d": [[77, null]], "nn.functional.avg_pool3d": [[78, null]], "nn.functional.batch_norm": [[69, null]], "nn.functional.bilinear": [[60, null]], "nn.functional.binary_cross_entropy": [[63, null]], "nn.functional.conv1d": [[48, null]], "nn.functional.conv2d": [[49, null]], "nn.functional.conv3d": [[50, null]], "nn.functional.cross_entropy": [[64, null]], "nn.functional.dropout": [[54, null]], "nn.functional.dropout1d": [[55, null]], "nn.functional.dropout2d": [[56, null]], "nn.functional.dropout3d": [[57, null]], "nn.functional.elu": [[39, null]], "nn.functional.gelu": [[40, null]], "nn.functional.huber_loss": [[65, null]], "nn.functional.instance_norm": [[71, null]], "nn.functional.interpolate": [[84, null]], "nn.functional.layer_norm": [[72, null]], "nn.functional.leaky_relu": [[42, null]], "nn.functional.linear": [[62, null]], "nn.functional.max_pool1d": [[80, null]], "nn.functional.max_pool2d": [[81, null]], "nn.functional.max_pool3d": [[82, null]], "nn.functional.mse_loss": [[67, null]], "nn.functional.nll_loss": [[68, null]], "nn.functional.relu": [[43, null]], "nn.functional.rotate": [[85, null]], "nn.functional.selu": [[44, null]], "nn.functional.sigmoid": [[45, null]], "nn.functional.softmax": [[46, null]], "nn.functional.tanh": [[47, null]], "nn.functional.unfold": [[52, null]], "nn.init.constant": [[86, null]], "nn.init.kaiming_normal": [[88, null]], "nn.init.kaiming_uniform": [[89, null]], "nn.init.normal": [[90, null]], "nn.init.uniform": [[91, null]], "nn.init.xavier_normal": [[92, null]], "nn.init.xavier_uniform": [[93, null]], "optim.ASGD": [[145, null]], "optim.Adadelta": [[146, null]], "optim.Adagrad": [[147, null]], "optim.Adam": [[148, null]], "optim.AdamW": [[149, null]], "optim.Adamax": [[150, null]], "optim.NAdam": [[151, null]], "optim.Optimizer": [[143, null]], "optim.RAdam": [[152, null]], "optim.RMSprop": [[153, null]], "optim.Rprop": [[154, null]], "optim.SGD": [[155, null]], "transforms.CenterCrop": [[232, null]], "transforms.Compose": [[230, null]], "transforms.Normalize": [[233, null]], "transforms.RandomCrop": [[234, null]], "transforms.RandomGrayscale": [[235, null]], "transforms.RandomHorizontalFlip": [[236, null]], "transforms.RandomRotation": [[237, null]], "transforms.RandomVerticalFlip": [[238, null]], "transforms.Resize": [[239, null]], "transforms.ToTensor": [[231, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/MNIST", "datasets/image/index", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/convnets/alex/AlexNet", "models/convnets/alex/alexnet", "models/convnets/index", "models/convnets/lenet/LeNet", "models/convnets/lenet/lenet_1", "models/convnets/lenet/lenet_4", "models/convnets/lenet/lenet_5", "models/convnets/zfnet/ZFNet", "models/convnets/zfnet/zfnet", "models/models", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/nn", "optim/Optimizer", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/types", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/meshgrid", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/convnets/alex/AlexNet.rst", "models/convnets/alex/alexnet.rst", "models/convnets/index.rst", "models/convnets/lenet/LeNet.rst", "models/convnets/lenet/lenet_1.rst", "models/convnets/lenet/lenet_4.rst", "models/convnets/lenet/lenet_5.rst", "models/convnets/zfnet/ZFNet.rst", "models/convnets/zfnet/zfnet.rst", "models/models.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/types.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"abs() (in module lucid)": [[190, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[146, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[147, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[148, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[150, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[149, "lucid.optim.AdamW", false]], "adaptive_avg_pool1d() (in module lucid.nn.functional)": [[73, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[74, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[75, "lucid.nn.functional.adaptive_avg_pool3d", false]], "adaptiveavgpool1d (class in lucid.nn)": [[132, "lucid.nn.AdaptiveAvgPool1d", false]], "adaptiveavgpool2d (class in lucid.nn)": [[133, "lucid.nn.AdaptiveAvgPool2d", false]], "adaptiveavgpool3d (class in lucid.nn)": [[134, "lucid.nn.AdaptiveAvgPool3d", false]], "add() (in module lucid)": [[169, "lucid.add", false]], "alexnet (class in lucid.models)": [[20, "lucid.models.AlexNet", false]], "alexnet() (in module lucid.models)": [[21, "lucid.models.alexnet", false]], "alpha_dropout() (in module lucid.nn.functional)": [[53, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[107, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[180, "lucid.arange", false]], "arccos() (in module lucid)": [[191, "lucid.arccos", false]], "arcsin() (in module lucid)": [[192, "lucid.arcsin", false]], "arctan() (in module lucid)": [[193, "lucid.arctan", false]], "asgd (class in lucid.optim)": [[145, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[76, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[77, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[78, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[135, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[136, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[137, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[69, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[124, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[125, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[126, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[118, "lucid.nn.BCELoss", false]], "bilinear (class in lucid.nn)": [[114, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[60, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[63, "lucid.nn.functional.binary_cross_entropy", false]], "buffer (class in lucid.nn)": [[30, "lucid.nn.Buffer", false]], "centercrop (class in lucid.transforms)": [[232, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[9, "lucid.linalg.cholesky", false]], "clip() (in module lucid)": [[194, "lucid.clip", false]], "compose (class in lucid.transforms)": [[230, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[216, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[86, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[103, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[48, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[104, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[49, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[105, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[50, "lucid.nn.functional.conv3d", false]], "cos() (in module lucid)": [[195, "lucid.cos", false]], "cosh() (in module lucid)": [[196, "lucid.cosh", false]], "cross_entropy() (in module lucid.nn.functional)": [[64, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[119, "lucid.nn.CrossEntropyLoss", false]], "cube() (in module lucid)": [[197, "lucid.cube", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "det() (in module lucid.linalg)": [[10, "lucid.linalg.det", false]], "diag() (in module lucid)": [[181, "lucid.diag", false]], "div() (in module lucid)": [[170, "lucid.div", false]], "dot() (in module lucid)": [[171, "lucid.dot", false]], "dropout (class in lucid.nn)": [[108, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[54, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[109, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[55, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[110, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[56, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[111, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[57, "lucid.nn.functional.dropout3d", false]], "eig() (in module lucid.linalg)": [[11, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[94, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[39, "lucid.nn.functional.elu", false]], "empty() (in module lucid)": [[182, "lucid.empty", false]], "empty_like() (in module lucid)": [[183, "lucid.empty_like", false]], "exp() (in module lucid)": [[198, "lucid.exp", false]], "eye() (in module lucid)": [[184, "lucid.eye", false]], "flatten() (in module lucid)": [[217, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[95, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[40, "lucid.nn.functional.gelu", false]], "grad_enabled() (in module lucid)": [[157, "lucid.grad_enabled", false]], "hstack() (in module lucid)": [[218, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[65, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[120, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[115, "lucid.nn.Identity", false]], "inner() (in module lucid)": [[172, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[71, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[127, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[128, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[129, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[84, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[13, "lucid.linalg.inv", false]], "kaiming_normal() (in module lucid.nn.init)": [[88, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[89, "lucid.nn.init.kaiming_uniform", false]], "layer_norm() (in module lucid.nn.functional)": [[72, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[130, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[42, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[96, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[23, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[24, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[25, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[26, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[116, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[62, "lucid.nn.functional.linear", false]], "log() (in module lucid)": [[199, "lucid.log", false]], "lucid": [[7, "module-lucid", false]], "matmul() (in module lucid)": [[173, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[14, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[200, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[80, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[81, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[82, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[174, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[138, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[139, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[140, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[201, "lucid.mean", false]], "meshgrid() (in module lucid)": [[220, "lucid.meshgrid", false]], "min() (in module lucid)": [[202, "lucid.min", false]], "minimum() (in module lucid)": [[175, "lucid.minimum", false]], "mnist (class in lucid.datasets)": [[5, "lucid.datasets.MNIST", false]], "module": [[7, "module-lucid", false]], "module (class in lucid.nn)": [[31, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[33, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[34, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[67, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[121, "lucid.nn.MSELoss", false]], "mul() (in module lucid)": [[176, "lucid.mul", false]], "nadam (class in lucid.optim)": [[151, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[68, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[122, "lucid.nn.NLLLoss", false]], "no_grad() (in module lucid)": [[159, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[15, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[90, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[233, "lucid.transforms.Normalize", false]], "ones() (in module lucid)": [[185, "lucid.ones", false]], "ones_like() (in module lucid)": [[186, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[143, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[177, "lucid.outer", false]], "pad() (in module lucid)": [[221, "lucid.pad", false]], "parameter (class in lucid.nn)": [[32, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[35, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[36, "lucid.nn.ParameterList", false]], "pinv() (in module lucid.linalg)": [[16, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[178, "lucid.power", false]], "qr() (in module lucid.linalg)": [[17, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[152, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[162, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[163, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[164, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[234, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[235, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[236, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[237, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[238, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[222, "lucid.ravel", false]], "reciprocal() (in module lucid)": [[203, "lucid.reciprocal", false]], "relu (class in lucid.nn)": [[97, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[43, "lucid.nn.functional.relu", false]], "repeat() (in module lucid)": [[223, "lucid.repeat", false]], "reshape() (in module lucid)": [[224, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[239, "lucid.transforms.Resize", false]], "rmsprop (class in lucid.optim)": [[153, "lucid.optim.RMSprop", false]], "rotate() (in module lucid.nn.functional)": [[85, "lucid.nn.functional.rotate", false]], "rprop (class in lucid.optim)": [[154, "lucid.optim.Rprop", false]], "seed() (in module lucid.random)": [[165, "lucid.random.seed", false]], "selu (class in lucid.nn)": [[98, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[44, "lucid.nn.functional.selu", false]], "sequential (class in lucid.nn)": [[37, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[155, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[99, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[45, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[204, "lucid.sign", false]], "sin() (in module lucid)": [[205, "lucid.sin", false]], "sinh() (in module lucid)": [[206, "lucid.sinh", false]], "softmax (class in lucid.nn)": [[100, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[46, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[18, "lucid.linalg.solve", false]], "sqrt() (in module lucid)": [[207, "lucid.sqrt", false]], "square() (in module lucid)": [[208, "lucid.square", false]], "squeeze() (in module lucid)": [[225, "lucid.squeeze", false]], "stack() (in module lucid)": [[226, "lucid.stack", false]], "sub() (in module lucid)": [[179, "lucid.sub", false]], "sum() (in module lucid)": [[209, "lucid.sum", false]], "svd() (in module lucid.linalg)": [[19, "lucid.linalg.svd", false]], "tan() (in module lucid)": [[210, "lucid.tan", false]], "tanh (class in lucid.nn)": [[101, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[211, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[47, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[168, "lucid.Tensor", false]], "tensor() (in module lucid)": [[215, "lucid.tensor", false]], "tile() (in module lucid)": [[227, "lucid.tile", false]], "totensor (class in lucid.transforms)": [[231, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[212, "lucid.trace", false]], "transpose() (in module lucid)": [[213, "lucid.transpose", false]], "unfold() (in module lucid.nn.functional)": [[52, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[91, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[166, "lucid.random.uniform", false]], "unsqueeze() (in module lucid)": [[228, "lucid.unsqueeze", false]], "var() (in module lucid)": [[214, "lucid.var", false]], "vstack() (in module lucid)": [[229, "lucid.vstack", false]], "xavier_normal() (in module lucid.nn.init)": [[92, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[93, "lucid.nn.init.xavier_uniform", false]], "zeros() (in module lucid)": [[187, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[188, "lucid.zeros_like", false]], "zfnet (class in lucid.models)": [[27, "lucid.models.ZFNet", false]], "zfnet() (in module lucid.models)": [[28, "lucid.models.zfnet", false]]}, "objects": {"": [[7, 0, 0, "-", "lucid"]], "lucid": [[168, 1, 1, "", "Tensor"], [190, 2, 1, "", "abs"], [169, 2, 1, "", "add"], [180, 2, 1, "", "arange"], [191, 2, 1, "", "arccos"], [192, 2, 1, "", "arcsin"], [193, 2, 1, "", "arctan"], [194, 2, 1, "", "clip"], [216, 2, 1, "", "concatenate"], [195, 2, 1, "", "cos"], [196, 2, 1, "", "cosh"], [197, 2, 1, "", "cube"], [181, 2, 1, "", "diag"], [170, 2, 1, "", "div"], [171, 2, 1, "", "dot"], [182, 2, 1, "", "empty"], [183, 2, 1, "", "empty_like"], [198, 2, 1, "", "exp"], [184, 2, 1, "", "eye"], [217, 2, 1, "", "flatten"], [157, 2, 1, "", "grad_enabled"], [218, 2, 1, "", "hstack"], [172, 2, 1, "", "inner"], [199, 2, 1, "", "log"], [173, 2, 1, "", "matmul"], [200, 2, 1, "", "max"], [174, 2, 1, "", "maximum"], [201, 2, 1, "", "mean"], [220, 2, 1, "", "meshgrid"], [202, 2, 1, "", "min"], [175, 2, 1, "", "minimum"], [176, 2, 1, "", "mul"], [159, 2, 1, "", "no_grad"], [185, 2, 1, "", "ones"], [186, 2, 1, "", "ones_like"], [177, 2, 1, "", "outer"], [221, 2, 1, "", "pad"], [178, 2, 1, "", "power"], [222, 2, 1, "", "ravel"], [203, 2, 1, "", "reciprocal"], [223, 2, 1, "", "repeat"], [224, 2, 1, "", "reshape"], [204, 2, 1, "", "sign"], [205, 2, 1, "", "sin"], [206, 2, 1, "", "sinh"], [207, 2, 1, "", "sqrt"], [208, 2, 1, "", "square"], [225, 2, 1, "", "squeeze"], [226, 2, 1, "", "stack"], [179, 2, 1, "", "sub"], [209, 2, 1, "", "sum"], [210, 2, 1, "", "tan"], [211, 2, 1, "", "tanh"], [215, 2, 1, "", "tensor"], [227, 2, 1, "", "tile"], [212, 2, 1, "", "trace"], [213, 2, 1, "", "transpose"], [228, 2, 1, "", "unsqueeze"], [214, 2, 1, "", "var"], [229, 2, 1, "", "vstack"], [187, 2, 1, "", "zeros"], [188, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "MNIST"]], "lucid.linalg": [[9, 2, 1, "", "cholesky"], [10, 2, 1, "", "det"], [11, 2, 1, "", "eig"], [13, 2, 1, "", "inv"], [14, 2, 1, "", "matrix_power"], [15, 2, 1, "", "norm"], [16, 2, 1, "", "pinv"], [17, 2, 1, "", "qr"], [18, 2, 1, "", "solve"], [19, 2, 1, "", "svd"]], "lucid.models": [[20, 1, 1, "", "AlexNet"], [23, 1, 1, "", "LeNet"], [27, 1, 1, "", "ZFNet"], [21, 2, 1, "", "alexnet"], [24, 2, 1, "", "lenet_1"], [25, 2, 1, "", "lenet_4"], [26, 2, 1, "", "lenet_5"], [28, 2, 1, "", "zfnet"]], "lucid.nn": [[132, 1, 1, "", "AdaptiveAvgPool1d"], [133, 1, 1, "", "AdaptiveAvgPool2d"], [134, 1, 1, "", "AdaptiveAvgPool3d"], [107, 1, 1, "", "AlphaDropout"], [135, 1, 1, "", "AvgPool1d"], [136, 1, 1, "", "AvgPool2d"], [137, 1, 1, "", "AvgPool3d"], [118, 1, 1, "", "BCELoss"], [124, 1, 1, "", "BatchNorm1d"], [125, 1, 1, "", "BatchNorm2d"], [126, 1, 1, "", "BatchNorm3d"], [114, 1, 1, "", "Bilinear"], [30, 1, 1, "", "Buffer"], [103, 1, 1, "", "Conv1d"], [104, 1, 1, "", "Conv2d"], [105, 1, 1, "", "Conv3d"], [119, 1, 1, "", "CrossEntropyLoss"], [108, 1, 1, "", "Dropout"], [109, 1, 1, "", "Dropout1d"], [110, 1, 1, "", "Dropout2d"], [111, 1, 1, "", "Dropout3d"], [94, 1, 1, "", "ELU"], [95, 1, 1, "", "GELU"], [120, 1, 1, "", "HuberLoss"], [115, 1, 1, "", "Identity"], [127, 1, 1, "", "InstanceNorm1d"], [128, 1, 1, "", "InstanceNorm2d"], [129, 1, 1, "", "InstanceNorm3d"], [130, 1, 1, "", "LayerNorm"], [96, 1, 1, "", "LeakyReLU"], [116, 1, 1, "", "Linear"], [121, 1, 1, "", "MSELoss"], [138, 1, 1, "", "MaxPool1d"], [139, 1, 1, "", "MaxPool2d"], [140, 1, 1, "", "MaxPool3d"], [31, 1, 1, "", "Module"], [33, 1, 1, "", "ModuleDict"], [34, 1, 1, "", "ModuleList"], [122, 1, 1, "", "NLLLoss"], [32, 1, 1, "", "Parameter"], [35, 1, 1, "", "ParameterDict"], [36, 1, 1, "", "ParameterList"], [97, 1, 1, "", "ReLU"], [98, 1, 1, "", "SELU"], [37, 1, 1, "", "Sequential"], [99, 1, 1, "", "Sigmoid"], [100, 1, 1, "", "Softmax"], [101, 1, 1, "", "Tanh"]], "lucid.nn.functional": [[73, 2, 1, "", "adaptive_avg_pool1d"], [74, 2, 1, "", "adaptive_avg_pool2d"], [75, 2, 1, "", "adaptive_avg_pool3d"], [53, 2, 1, "", "alpha_dropout"], [76, 2, 1, "", "avg_pool1d"], [77, 2, 1, "", "avg_pool2d"], [78, 2, 1, "", "avg_pool3d"], [69, 2, 1, "", "batch_norm"], [60, 2, 1, "", "bilinear"], [63, 2, 1, "", "binary_cross_entropy"], [48, 2, 1, "", "conv1d"], [49, 2, 1, "", "conv2d"], [50, 2, 1, "", "conv3d"], [64, 2, 1, "", "cross_entropy"], [54, 2, 1, "", "dropout"], [55, 2, 1, "", "dropout1d"], [56, 2, 1, "", "dropout2d"], [57, 2, 1, "", "dropout3d"], [39, 2, 1, "", "elu"], [40, 2, 1, "", "gelu"], [65, 2, 1, "", "huber_loss"], [71, 2, 1, "", "instance_norm"], [84, 2, 1, "", "interpolate"], [72, 2, 1, "", "layer_norm"], [42, 2, 1, "", "leaky_relu"], [62, 2, 1, "", "linear"], [80, 2, 1, "", "max_pool1d"], [81, 2, 1, "", "max_pool2d"], [82, 2, 1, "", "max_pool3d"], [67, 2, 1, "", "mse_loss"], [68, 2, 1, "", "nll_loss"], [43, 2, 1, "", "relu"], [85, 2, 1, "", "rotate"], [44, 2, 1, "", "selu"], [45, 2, 1, "", "sigmoid"], [46, 2, 1, "", "softmax"], [47, 2, 1, "", "tanh"], [52, 2, 1, "", "unfold"]], "lucid.nn.init": [[86, 2, 1, "", "constant"], [88, 2, 1, "", "kaiming_normal"], [89, 2, 1, "", "kaiming_uniform"], [90, 2, 1, "", "normal"], [91, 2, 1, "", "uniform"], [92, 2, 1, "", "xavier_normal"], [93, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[145, 1, 1, "", "ASGD"], [146, 1, 1, "", "Adadelta"], [147, 1, 1, "", "Adagrad"], [148, 1, 1, "", "Adam"], [149, 1, 1, "", "AdamW"], [150, 1, 1, "", "Adamax"], [151, 1, 1, "", "NAdam"], [143, 1, 1, "", "Optimizer"], [152, 1, 1, "", "RAdam"], [153, 1, 1, "", "RMSprop"], [154, 1, 1, "", "Rprop"], [155, 1, 1, "", "SGD"]], "lucid.random": [[162, 2, 1, "", "rand"], [163, 2, 1, "", "randint"], [164, 2, 1, "", "randn"], [165, 2, 1, "", "seed"], [166, 2, 1, "", "uniform"]], "lucid.transforms": [[232, 1, 1, "", "CenterCrop"], [230, 1, 1, "", "Compose"], [233, 1, 1, "", "Normalize"], [234, 1, 1, "", "RandomCrop"], [235, 1, 1, "", "RandomGrayscale"], [236, 1, 1, "", "RandomHorizontalFlip"], [237, 1, 1, "", "RandomRotation"], [238, 1, 1, "", "RandomVerticalFlip"], [239, 1, 1, "", "Resize"], [231, 1, 1, "", "ToTensor"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [3, 7, 8, 14, 16, 19, 30, 31, 32, 33, 35, 36, 37, 73, 74, 75, 119, 122, 132, 133, 134, 135, 138, 139, 142, 143, 144, 158, 173, 181, 199, 201, 209, 212, 214, 215, 225, 231, 233, 241], "0": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 23, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 60, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 213, 214, 215, 216, 218, 221, 222, 223, 225, 226, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 241], "000": [5, 182, 183], "0000": [119, 120, 122], "0001": 145, "000e": [182, 183], "001": [145, 148, 149, 151, 152, 155], "002": [150, 151], "004": 151, "005": 96, "01": [42, 96, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155], "01051757": 164, "0205": 119, "0217": 119, "0227": 119, "0299": 119, "044715": [40, 95], "0450": 119, "0451": 119, "04719755": 191, "0474259": 45, "0480": 119, "05": [69, 71, 72, 96, 124, 125, 126, 127, 128, 129, 130], "0507": [44, 98], "06": [146, 154], "07": [63, 64, 118, 119], "0700": 119, "0706508": 101, "0721": 119, "0794": 122, "08": [148, 149, 150, 151, 152, 153], "0802": 122, "08333333": 16, "085537": 198, "0900": [100, 119], "0986": [46, 100], "09861229": 199, "0992": 119, "1": [0, 1, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 60, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 160, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241], "10": [0, 1, 2, 3, 20, 21, 23, 24, 25, 26, 27, 28, 29, 33, 34, 37, 49, 50, 60, 62, 73, 103, 104, 105, 110, 111, 114, 116, 125, 126, 128, 132, 136, 137, 139, 147, 163, 166, 167, 170, 173, 176, 177, 193, 209, 232, 234, 235, 237], "100": [29, 241], "1000": [20, 21, 27, 28], "1000000": 145, "1001": 119, "1003": 119, "1007": 29, "1014": 44, "1025": [34, 37], "1026": [34, 37], "1027": [34, 37], "10499": 45, "1050": 99, "1054": 122, "1056": [34, 37], "10590": 29, "1097": 29, "11": [29, 60, 103, 104, 105, 110, 114, 125, 126, 128, 136, 137, 139, 173, 232, 233, 234, 235, 237], "1105": 29, "1109": 29, "1111": 118, "1134": 60, "114b": 235, "119": 60, "1192": [45, 46, 100], "12": [24, 25, 35, 60, 75, 103, 104, 105, 110, 111, 114, 125, 126, 128, 134, 136, 137, 139, 173, 177, 178, 232, 234, 235, 237], "120": [23, 26], "123": [88, 89, 90, 91, 92, 93, 165, 166], "124": [88, 89, 92, 93], "125": 137, "1250": 120, "128": [37, 230, 241], "128x128": [230, 241], "13": [60, 103, 104, 105, 114, 126, 136, 137, 139, 173, 232, 234, 235, 237], "14": [103, 104, 105, 110, 111, 114, 126, 136, 137, 139, 160, 173, 177, 232, 234, 235, 237], "145": 60, "15": [0, 60, 103, 104, 105, 114, 126, 136, 137, 139, 173, 177, 212, 232, 234, 235, 237, 241], "1513": 122, "155": 173, "1588": [40, 95], "16": [23, 26, 34, 35, 37, 74, 75, 103, 104, 105, 110, 111, 114, 125, 126, 133, 134, 136, 137, 139, 142, 173, 177, 207, 232, 234, 235, 237], "16227766": 17, "16425": 122, "1643": 118, "166": 173, "17": [103, 104, 105, 114, 126, 137, 172, 232, 234, 235, 237], "170": 60, "17520119": 206, "18": [25, 29, 103, 104, 105, 110, 114, 126, 137, 176, 177, 232, 234, 235, 237], "1800": 119, "19": [49, 50, 60, 104, 105, 126, 171, 173], "192": [24, 25], "1966": [46, 99, 100], "1998": [29, 119], "1_53": 29, "1d": [48, 73, 76, 80, 124, 127, 132, 166, 173, 181, 212, 220, 221, 222, 223, 227], "1e": [63, 64, 69, 71, 72, 118, 119, 124, 125, 126, 127, 128, 129, 130, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "1e6": 145, "1st": [20, 27], "2": [1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 27, 30, 31, 32, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 60, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 160, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241], "20": [0, 5, 33, 34, 37, 104, 105, 110, 126, 177, 198], "2012": 29, "2014": 29, "2039": 122, "204": 105, "21": [35, 60, 104, 105, 126, 177], "211": 173, "22": [60, 104, 105, 110, 126, 171, 173], "2231": [119, 122], "224": [20, 27, 29], "2247": [124, 125, 126, 127, 128, 129, 130], "226": 173, "22752314": 164, "2278": 29, "23": [104, 105, 126], "2324": [29, 98], "234": [88, 89, 90, 91, 92, 93, 166], "24": [60, 74, 104, 105, 110, 126, 133, 177], "2424": [46, 100], "2447": 100, "246": [24, 29], "25": [0, 29, 45, 99, 105, 121, 126, 136, 137, 170, 203, 214], "2500": [118, 120, 122], "2512": 94, "2547": 98, "26": [35, 62, 105, 116, 126, 177], "26325684": 164, "2689": [46, 99, 100], "27": [60, 103, 105, 126, 197], "276": [88, 89, 92, 93], "28": [24, 25, 29, 60, 105, 177], "28x28": [5, 24, 25], "29": 105, "299r": 235, "2_i": [127, 128, 129], "2d": [49, 56, 74, 77, 81, 125, 128, 133, 173, 181, 184, 212, 217, 220, 221, 223, 227, 237], "2e": 150, "2nd": [20, 27], "2x2": [52, 232, 234], "3": [1, 2, 3, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 24, 27, 29, 30, 31, 32, 34, 35, 36, 37, 40, 45, 46, 48, 49, 50, 52, 53, 54, 55, 56, 57, 60, 62, 65, 67, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 194, 196, 197, 198, 199, 200, 201, 202, 206, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239], "30": [34, 85, 105, 237], "3026": 122, "31": [60, 105, 173], "310": [182, 183], "31622777": 17, "319": 29, "32": [26, 29, 34, 37, 60, 62, 74, 104, 105, 116, 133, 142, 171, 172, 177], "321": [88, 89, 92, 93], "32x32": [23, 26], "33": [34, 37, 62, 105, 116], "33333333": 16, "34": [34, 37, 60, 105, 173, 177], "342": [88, 89, 92, 93], "345": [88, 89, 90, 91, 92, 93, 166], "35": [34, 37, 105], "3567": [118, 122], "357": 29, "36": 105, "3679": [39, 44, 94], "37": 103, "372": 60, "375": 121, "3750": 120, "378": [25, 29], "38344152": 162, "38629436": 199, "389056": 198, "3935": 94, "3d": [50, 57, 75, 78, 82, 105, 126, 129, 134], "3x3": 167, "4": [0, 1, 2, 3, 8, 9, 10, 11, 13, 15, 16, 17, 23, 24, 25, 29, 35, 37, 48, 49, 50, 52, 55, 56, 57, 60, 62, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 145, 148, 152, 153, 155, 158, 160, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 186, 188, 194, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239], "400": 26, "4044": 118, "4076": 119, "4096": [20, 27], "41421356": 9, "41666667": 16, "41808962": 164, "419974": 47, "4199743": 101, "42": [60, 160, 167], "421": [88, 89, 92, 93], "423": [88, 89, 90, 91], "42718872": 17, "4286": 118, "43": [171, 173], "4323": 94, "4375": 120, "43758721": 162, "4472136": 11, "4495": [126, 129], "45": [60, 85, 237], "4545": 107, "47112767": 193, "48": [62, 116], "4979": 94, "4x4": 239, "5": [1, 2, 7, 8, 13, 14, 15, 16, 20, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 37, 40, 45, 48, 49, 50, 52, 53, 54, 55, 56, 57, 60, 62, 65, 67, 69, 71, 72, 73, 76, 77, 84, 86, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 135, 136, 137, 139, 140, 154, 158, 160, 163, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 186, 188, 190, 191, 192, 200, 201, 202, 203, 204, 209, 212, 213, 214, 215, 218, 220, 224, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241], "50": [62, 116, 154, 171, 173, 235, 236, 238, 241], "5000": [118, 120, 122], "5108": 122, "52359878": 192, "53": [60, 172], "543": [88, 89, 90, 91, 92, 93, 166], "54308063": 196, "545": 178, "5455": 107, "563": [88, 89, 92, 93], "57": 60, "57079633": [191, 192], "57366333": 165, "587g": 235, "5th": [20, 27], "6": [8, 16, 20, 23, 26, 27, 35, 36, 48, 49, 50, 52, 57, 60, 62, 73, 89, 93, 103, 104, 105, 108, 109, 110, 111, 114, 116, 118, 124, 125, 126, 127, 128, 129, 130, 132, 136, 137, 139, 140, 146, 154, 158, 160, 166, 169, 170, 171, 172, 173, 176, 177, 178, 179, 180, 181, 182, 183, 186, 188, 200, 201, 202, 209, 212, 213, 214, 215, 218, 223, 224, 229, 231, 232, 233, 234, 235, 237, 239], "6052": 122, "6065": 94, "608": 29, "61": [26, 29], "6124": [124, 125, 126, 127, 128, 129, 130], "62": [29, 60], "62686041": 206, "6321": [39, 94], "63245553": 17, "64": [34, 37, 60], "64589411": 162, "654": [88, 89, 90, 91, 92, 93, 166], "657": [88, 89, 92, 93], "6590": [46, 100], "6652": 100, "66666667": 16, "6667": 118, "6682": 118, "67": 173, "67326": 98, "6733": 44, "678": [88, 89, 90, 91, 92, 93], "68811989": 164, "69314718": 199, "7": [15, 35, 48, 49, 50, 52, 57, 60, 62, 63, 64, 73, 95, 98, 99, 101, 103, 104, 105, 110, 111, 114, 116, 118, 119, 121, 125, 126, 128, 129, 132, 136, 137, 139, 140, 160, 163, 166, 169, 171, 172, 173, 177, 179, 181, 198, 201, 209, 212, 213, 214, 227, 231, 232, 233, 234, 235, 237, 239], "70": 5, "7001": 119, "706": [26, 29], "70710678": [11, 205], "7147": 122, "7182818": 198, "726791": 29, "7311": [46, 99, 100], "74": 173, "75": [62, 116, 121, 145], "7581": 44, "76159416": 211, "7616": [47, 101], "76219569": 196, "7635": 98, "772": 178, "78357324": 164, "78539816": 193, "79172504": 162, "7x7": 27, "8": [14, 18, 34, 35, 37, 48, 49, 50, 52, 57, 60, 62, 63, 73, 74, 75, 95, 98, 99, 101, 103, 104, 105, 108, 109, 110, 111, 114, 116, 118, 121, 125, 126, 128, 129, 132, 133, 134, 136, 137, 139, 140, 148, 149, 150, 151, 152, 153, 160, 163, 170, 171, 172, 173, 177, 178, 180, 181, 197, 201, 209, 212, 213, 214, 231, 232, 233, 234, 235, 237, 239], "80": 5, "8005": 119, "818": 29, "8182": 107, "82": 60, "833": 29, "84": [23, 25, 26], "840": 29, "8413": [40, 95], "8584": 98, "86": 29, "876": [88, 89, 92, 93, 166], "8808": [46, 99, 100], "887": 178, "891773": 162, "89442719": 11, "9": [0, 1, 3, 5, 18, 49, 52, 60, 62, 73, 103, 104, 105, 110, 114, 116, 118, 125, 126, 128, 132, 136, 137, 139, 145, 146, 148, 149, 150, 151, 152, 153, 155, 160, 163, 166, 169, 173, 177, 178, 179, 181, 207, 208, 231, 232, 233, 234, 235, 237], "90709145": 165, "9091": 107, "9120": 122, "9163": 122, "9486833": 17, "949e": [182, 183], "9526": 45, "9545": 95, "96366276": 162, "9640": 101, "96402758": 211, "978": 29, "99": 153, "9957": 122, "99734545": 165, "999": [0, 148, 149, 150, 151, 152], "A": [1, 3, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 23, 31, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 60, 62, 63, 64, 68, 69, 71, 72, 84, 107, 108, 109, 110, 111, 118, 119, 122, 124, 125, 126, 127, 128, 129, 130, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 162, 163, 164, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 237], "As": 165, "Be": 0, "By": [0, 2, 3, 7, 32, 85, 142, 152, 158, 162, 163, 164, 166, 231, 241], "For": [2, 3, 4, 7, 9, 10, 11, 13, 14, 15, 16, 18, 37, 39, 40, 42, 43, 44, 45, 47, 60, 62, 84, 88, 89, 92, 93, 98, 103, 104, 105, 114, 116, 124, 125, 126, 127, 128, 129, 142, 144, 165, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 198, 199, 200, 201, 202, 205, 207, 209, 212, 213, 214, 221, 223, 225, 227, 228, 241], "If": [0, 1, 2, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 31, 33, 34, 35, 36, 39, 40, 42, 43, 44, 45, 47, 48, 49, 50, 57, 60, 62, 69, 71, 74, 75, 84, 85, 88, 89, 103, 104, 105, 114, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 143, 148, 149, 153, 154, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 235, 236, 238, 239], "In": [3, 7, 16, 48, 49, 50, 119, 122, 157, 158, 159, 230, 241], "It": [1, 2, 3, 7, 16, 17, 18, 20, 23, 24, 25, 26, 29, 31, 33, 34, 35, 36, 37, 57, 60, 84, 85, 95, 97, 101, 114, 115, 118, 119, 120, 121, 122, 132, 133, 134, 142, 143, 144, 145, 151, 153, 154, 155, 158, 165, 169, 170, 171, 174, 175, 176, 178, 179, 200, 202, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 230, 231], "Its": [18, 167], "Near": 16, "No": 52, "Not": 115, "One": [24, 241], "The": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 60, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241], "There": 224, "These": [4, 7, 8, 11, 14, 17, 19, 29, 107, 108, 109, 110, 111, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 154, 160, 167, 241], "To": [3, 29, 144, 164, 167, 182, 183, 220, 241], "With": [3, 52, 231, 241], "_": [14, 33, 34, 36, 37, 39, 40, 42, 43, 44, 45, 47, 62, 84, 125, 126, 127, 128, 129, 135, 136, 137, 138, 139, 140, 145, 146, 148, 149, 150, 151, 153, 155, 171, 172, 173, 177, 212, 213, 232, 233, 234, 236, 237, 238], "_1": [11, 33, 34, 35, 36, 37, 60, 114, 177, 216, 218, 229], "_2": [11, 33, 34, 35, 36, 37, 60, 114, 177, 216, 218, 229], "__call__": [1, 31], "__getitem__": [0, 2, 3, 5], "__init__": [0, 1, 2, 3, 7, 20, 23, 27, 30, 31, 32, 33, 34, 35, 36, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 114, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 168, 230, 231], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5], "__repr__": 143, "__setattr__": 31, "_activ": 46, "_arraylik": [160, 181, 183, 186, 188], "_arraylikeint": 221, "_arrayorscalar": [30, 32, 160, 168, 215], "_base_dtyp": [180, 182, 185, 187], "_c": 233, "_decai": 151, "_fanmod": [88, 89], "_grad_en": [157, 159], "_i": [11, 15, 46, 60, 100, 121, 124, 130, 135, 138, 171, 172, 174, 175, 177, 178, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 223, 225, 228, 229], "_in": [88, 89, 92, 93], "_j": [46, 100, 135, 138, 177, 201, 209, 213, 214], "_k": 226, "_left": 84, "_modul": 31, "_n": [11, 33, 34, 35, 36, 37, 216, 218, 229], "_numpyarrai": 160, "_out": [88, 89, 92, 93, 223, 227], "_p": 15, "_pad": 221, "_paddingstr": [103, 104, 105], "_paramet": 31, "_reductiontyp": [63, 64, 65, 67, 68, 118, 119, 120, 121, 122], "_right": 84, "_scalar": [86, 90, 91, 92, 93, 160, 180, 194], "_shapelik": [72, 130, 160, 163, 185, 187, 224, 225, 228], "_size": [73, 74, 75], "_slope": 96, "_statedict": 143, "_t": [152, 153], "_tensor": [30, 32, 181, 215], "_tensorop": 168, "_u": 16, "_v": 16, "_valu": [194, 221], "_width": 221, "a_i": [174, 175, 178], "ab": 189, "abc": [2, 143], "abil": [7, 241], "about": 7, "abov": [7, 157, 159, 165, 181, 184], "absolut": [14, 15, 65, 150, 190], "abstract": [2, 3, 142, 143, 144, 145, 153, 155], "abstractmethod": 143, "acceler": [29, 98, 124, 125, 126, 145, 151, 153, 155], "accept": [115, 162, 168], "access": [0, 2, 3, 4, 5, 30, 32, 33, 34, 35, 36, 37, 224], "accord": [84, 103, 104, 105, 114, 116, 119, 122, 146, 147, 148, 149, 150, 151, 152, 213], "accordingli": 10, "account": [14, 16, 17], "accumul": [145, 146, 147, 169, 170, 174, 175, 176, 179], "achiev": [29, 48, 49, 50, 73, 132, 133, 134, 151, 236, 238], "across": [0, 30, 34, 37, 72, 73, 74, 75, 92, 93, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 160, 162, 163, 164, 165, 166, 167, 182, 183, 201, 214], "act": 149, "activ": [7, 20, 27, 29, 33, 37, 39, 40, 42, 43, 44, 45, 46, 47, 53, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 107, 108, 109, 110, 111, 118, 119, 122, 124, 125, 126, 130, 200, 202], "actual": [32, 118, 119, 121, 122, 168, 234], "ad": [31, 33, 34, 35, 36, 37, 48, 49, 50, 60, 62, 63, 64, 69, 71, 72, 76, 77, 78, 80, 81, 82, 103, 104, 105, 118, 119, 124, 125, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 146, 147, 148, 149, 150, 151, 152, 153, 228, 241], "adadelta": 156, "adagrad": [146, 156], "adam": [149, 150, 151, 152, 156], "adamax": 156, "adamw": 156, "adapt": [20, 23, 27, 73, 74, 75, 132, 133, 134, 146, 147, 148, 151, 152, 153, 154], "adaptive_avg_pool1d": [59, 79, 132], "adaptive_avg_pool2d": [59, 79, 133], "adaptive_avg_pool3d": [59, 79, 134], "adaptiveavgpool1d": [113, 141], "adaptiveavgpool2d": [20, 27, 113, 141], "adaptiveavgpool3d": [113, 141], "add": [4, 31, 33, 34, 37, 60, 62, 103, 104, 105, 114, 116, 130, 143, 145, 148, 153, 155, 158, 189, 221, 228], "add_modul": [31, 37], "add_param_group": 143, "addit": [4, 7, 14, 21, 28, 31, 34, 37, 60, 62, 69, 71, 114, 116, 124, 125, 126, 127, 128, 129, 145, 151, 158, 167, 169, 226], "addition": 151, "address": [119, 122, 148, 149, 152], "adjust": [73, 74, 75, 107, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 144, 148, 152, 153, 154, 218, 229], "advanc": [3, 16, 29, 34, 37, 48, 49, 50, 73, 74, 75, 132, 133, 134, 142, 145], "advantag": 159, "affect": [157, 222, 225, 230], "affin": [124, 125, 126, 127, 128, 129, 130, 237], "after": [14, 20, 27, 32, 33, 34, 35, 36, 37, 57, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 107, 108, 109, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 135, 136, 137, 138, 139, 140, 149, 159, 168, 169, 170, 174, 175, 176, 178, 179, 221, 231], "afterward": 159, "aggreg": [177, 223, 227], "aim": [4, 7], "al": 29, "alex": 29, "alexnet": [22, 27, 29], "algebra": [7, 8, 184], "algorithm": [7, 14, 16, 17, 143, 144, 167], "align": [18, 84, 172, 173], "align_corn": 84, "all": [0, 3, 4, 7, 17, 31, 33, 34, 35, 36, 37, 49, 50, 73, 74, 75, 77, 78, 81, 82, 84, 96, 97, 105, 132, 133, 134, 136, 137, 140, 142, 143, 144, 145, 148, 153, 154, 155, 178, 200, 201, 202, 209, 212, 214, 216, 217, 218, 223, 225, 226, 227, 229, 232, 233, 241], "allevi": 39, "alloc": [182, 183], "allow": [0, 1, 3, 4, 7, 16, 17, 23, 32, 33, 34, 35, 36, 37, 39, 42, 43, 46, 50, 52, 85, 94, 95, 96, 98, 99, 100, 101, 103, 104, 105, 142, 146, 147, 158, 180, 185, 187, 188, 213, 215, 220, 230, 231, 241], "along": [46, 84, 100, 172, 173, 177, 200, 201, 202, 209, 212, 214, 216, 218, 220, 223, 226, 227, 228, 229, 236, 238], "alongsid": 30, "alpha": [39, 42, 44, 53, 94, 98, 107, 145, 153], "alpha_dropout": [58, 59, 107], "alphadropout": [112, 113], "alphadropoutmodel": 107, "also": [39, 40, 42, 43, 44, 45, 47, 60, 62, 84, 151, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 187, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 216, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229], "alter": [37, 224], "altern": [1, 95, 146, 173], "alwai": [32, 222, 235, 236, 238], "amount": [48, 49, 50, 76, 77, 78, 80, 81, 82, 151], "amsgrad": [148, 149], "an": [0, 1, 3, 7, 11, 13, 14, 16, 17, 19, 21, 23, 24, 25, 26, 27, 28, 31, 33, 34, 35, 36, 37, 40, 48, 49, 50, 52, 53, 54, 55, 56, 57, 60, 74, 75, 84, 85, 92, 93, 94, 99, 103, 104, 105, 107, 108, 109, 110, 111, 114, 116, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 144, 145, 148, 151, 153, 159, 160, 168, 173, 181, 184, 194, 201, 209, 214, 216, 223, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241], "analog": [223, 227], "analysi": [4, 103, 104, 105, 129, 135, 137, 138, 140], "angl": [85, 237], "ani": [0, 1, 2, 3, 14, 16, 21, 28, 30, 31, 32, 33, 35, 36, 39, 40, 42, 43, 44, 45, 47, 53, 54, 60, 62, 69, 71, 99, 130, 142, 143, 157, 159, 165, 168, 180, 181, 182, 184, 185, 186, 187, 188, 200, 202, 213, 215, 216, 217, 218, 221, 223, 226, 227, 228, 229, 230, 241], "anoth": [36, 179, 186, 188, 231, 241], "api": [4, 132, 133, 134, 241], "appear": 143, "append": [34, 36, 37], "appli": [2, 4, 5, 7, 14, 20, 27, 29, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 50, 52, 53, 54, 55, 56, 57, 60, 62, 63, 64, 65, 67, 68, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 107, 108, 109, 110, 111, 114, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 145, 146, 147, 149, 150, 151, 152, 173, 221, 223, 230, 233, 235, 236, 237, 238, 239, 241], "applic": [4, 16, 48, 71, 103, 104, 105, 114, 116, 167, 180, 187, 221, 239], "approach": [3, 37, 149], "appropri": [16, 31, 35, 37, 103, 104, 105, 107, 108, 109, 119, 136, 137, 157, 159], "approx": 44, "approxim": [16, 40, 95, 136, 139], "ar": [1, 2, 3, 4, 7, 10, 11, 13, 14, 16, 17, 18, 19, 29, 30, 31, 32, 33, 34, 35, 36, 37, 46, 48, 49, 50, 52, 60, 62, 74, 75, 84, 88, 89, 91, 92, 93, 100, 103, 104, 105, 107, 108, 109, 110, 111, 114, 116, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 145, 148, 149, 151, 152, 153, 154, 155, 157, 159, 160, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 190, 194, 198, 200, 201, 202, 203, 204, 209, 212, 213, 216, 220, 223, 224, 227, 230, 231, 232, 234, 235, 239, 241], "arang": 189, "arbitrari": [34, 115, 182, 183, 194, 199, 201, 205, 207, 209, 213, 214], "arcco": 189, "architectur": [21, 23, 28, 29, 33, 34, 35, 36, 37, 40, 97, 114, 115, 142], "arcsin": 189, "arctan": 189, "area": 84, "arg": [31, 115, 182], "argument": [3, 4, 21, 23, 28, 31, 37, 115, 162, 182, 213], "around": [11, 85, 101], "arr": [160, 216, 218, 226, 229], "arrai": [7, 30, 32, 158, 160, 168, 173, 181, 186, 188, 215, 222, 223, 231, 241], "art": 29, "asarrai": 160, "asgd": 156, "aspect": 239, "assign": [31, 33, 35, 37, 84, 119, 122], "associ": [35, 36], "assum": [0, 1, 143, 144, 157], "attempt": [33, 37], "attent": [36, 60], "attribut": 31, "audio": 103, "augment": [3, 4, 85, 167, 223, 227, 230, 234, 235, 236, 237, 238, 241], "autodiff": 7, "autograd": 142, "automat": [4, 7, 32, 33, 34, 35, 36, 142, 162, 163, 164, 166, 168, 182, 183, 188, 220, 231], "auxiliari": 30, "avail": [4, 5, 7], "averag": [20, 24, 25, 26, 27, 30, 73, 74, 75, 76, 77, 78, 84, 121, 132, 133, 134, 135, 136, 137, 145, 146, 148, 153, 201], "avg_pool": [135, 136, 137], "avg_pool1d": [59, 79], "avg_pool2d": [59, 79], "avg_pool3d": [59, 79], "avgpool": [20, 27], "avgpool1d": [113, 141], "avgpool1dmodel": 135, "avgpool2d": [113, 141], "avgpool2dmodel": 136, "avgpool3d": [113, 141], "avgpool3dmodel": 137, "avoid": [2, 3, 16, 35, 159], "ax": [8, 158, 200, 201, 202, 209, 213, 214, 223, 225, 227], "axi": [46, 100, 172, 173, 200, 201, 202, 209, 214, 216, 218, 220, 221, 223, 225, 226, 227, 228, 229, 236, 238], "b": [8, 18, 60, 62, 91, 103, 104, 105, 114, 116, 158, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 216, 218, 226, 229, 235], "b_i": [174, 175, 178], "back": [84, 136, 137, 172, 177, 223, 227], "backpropag": [7, 10, 11, 13, 14, 16, 17, 19, 30, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 60, 62, 84, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 142, 159, 164, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 198, 200, 202, 215, 221, 223, 227, 231], "backward": [7, 30, 32, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 168, 231], "balanc": 120, "bar": 145, "base": [3, 8, 13, 14, 17, 18, 23, 29, 31, 33, 34, 35, 36, 52, 60, 73, 74, 75, 107, 119, 120, 132, 133, 134, 142, 143, 144, 145, 149, 153, 154, 155, 169, 170, 174, 175, 176, 178, 179, 188, 198, 199, 200, 202, 213, 220, 221, 234, 235, 236, 237, 238], "basic": [7, 20, 27, 48, 49, 50, 73, 74, 75, 88, 89, 92, 93, 132, 133, 134, 232, 233, 234, 235, 236, 237, 238, 239], "batch": [1, 2, 3, 8, 14, 17, 19, 48, 49, 50, 52, 55, 56, 57, 60, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 103, 104, 105, 114, 116, 118, 119, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 152, 173, 232, 233, 234, 235, 237, 239], "batch_norm": [59, 70, 124, 125, 126], "batch_norm1": 37, "batch_norm2": 37, "batch_siz": [1, 2, 3], "batchnorm1d": [113, 131], "batchnorm1dmodel": 124, "batchnorm2d": [37, 113, 131], "batchnorm2dmodel": 125, "batchnorm3d": [113, 131], "batchnorm3dmodel": 126, "bceloss": [113, 123], "becaus": [2, 163], "becom": [15, 31, 146, 154], "befor": [14, 32, 145, 151, 159, 165, 221, 233, 241], "begin": [1, 15, 39, 42, 43, 44, 94, 96, 97, 98, 120, 121, 122, 135, 136, 137, 138, 139, 140, 152, 154, 158, 167, 174, 175, 177, 190, 194, 200, 202, 204, 221], "behav": [120, 212], "behavior": [29, 34, 37, 157, 167, 173, 183, 241], "being": [36, 85, 107, 108, 109, 110, 111, 152, 157, 159, 216, 218, 229], "belong": 0, "below": [17, 23, 24, 25, 26, 173, 181, 184], "benchmark": 5, "benefici": 37, "benefit": [39, 142, 151, 160], "bernoulli": [107, 108, 109, 110, 111], "best": [88, 89, 92, 93], "beta": [124, 125, 126, 127, 128, 129, 130, 148, 149, 150, 151, 152], "beta1": [148, 149, 150, 151, 152], "beta2": [148, 149, 150, 151, 152], "beta_1": [148, 149, 150, 151, 152], "beta_2": [148, 149, 150, 151, 152], "better": [13, 27, 29, 40, 88, 89, 92, 93, 127, 128, 129, 142, 149, 151, 153, 233], "between": [31, 48, 49, 50, 52, 60, 65, 103, 104, 105, 107, 108, 109, 110, 111, 114, 118, 119, 120, 121, 122, 145, 153, 154, 155, 167, 169, 170, 173, 176, 179, 180, 214, 235, 236, 238, 239], "beyond": [7, 34], "bia": [48, 49, 50, 60, 62, 69, 71, 72, 103, 104, 105, 114, 116, 124, 125, 126, 127, 128, 129, 130, 148, 149, 150, 151, 152], "bias": [103, 104, 105, 116, 130, 142], "bias1": 35, "bias2": 35, "bilinear": [59, 61, 84, 113, 117], "bilinearmodel": 114, "binari": [45, 63, 99, 107, 108, 109, 110, 111, 118], "binary_cross_entropi": [59, 66], "block": [31, 52, 103, 104, 105, 159], "block1": 142, "block2": 142, "blue": 235, "bmatrix": 177, "bool": [1, 5, 19, 31, 32, 53, 54, 55, 56, 57, 69, 71, 84, 103, 104, 105, 114, 116, 124, 125, 126, 127, 128, 129, 130, 148, 149, 153, 157, 162, 163, 164, 166, 168, 180, 181, 182, 183, 184, 185, 186, 187, 188, 200, 201, 202, 209, 214, 215, 231], "both": [48, 62, 74, 76, 80, 95, 103, 104, 133, 135, 136, 138, 139, 171, 172, 173, 177, 181, 220, 239], "bottom": 84, "bound": [89, 91, 93, 154, 166], "box": 4, "break": 142, "brief": 241, "bright": 241, "broadcast": [110, 111, 201, 209, 214, 224, 228], "buffer": [145, 151, 153, 155], "build": [7, 31, 34, 37, 142, 241], "built": [3, 7, 37, 142], "burg": 5, "c": [5, 52, 55, 56, 57, 64, 68, 69, 71, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 110, 111, 119, 122, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 158, 218, 229, 233], "c_": [103, 104, 105], "c_in": [48, 49, 50], "c_out": [48, 49, 50], "calcul": [0, 1, 7, 8, 32, 146, 147, 150, 151, 152, 159, 163, 168], "calculu": [9, 16], "call": [1, 31, 157, 169, 170, 173, 174, 175, 176, 178, 179], "callabl": [143, 230], "can": [0, 2, 3, 4, 7, 9, 11, 13, 14, 16, 17, 19, 30, 32, 33, 34, 35, 36, 37, 42, 48, 49, 50, 85, 95, 96, 101, 103, 104, 105, 127, 128, 129, 136, 137, 138, 139, 140, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 157, 158, 159, 160, 166, 167, 168, 173, 182, 183, 184, 185, 187, 188, 201, 209, 214, 218, 220, 221, 223, 224, 227, 228, 229, 230, 231, 234, 236, 237, 238, 241], "cannot": [10, 11, 13, 14, 17, 18, 19], "capabl": [7, 180, 181, 184, 185, 186, 187, 188], "captur": [52, 103, 104, 105, 114], "care": 159, "cartesian": 220, "case": [3, 15, 23, 39, 42, 43, 44, 94, 96, 97, 98, 120, 121, 122, 135, 136, 137, 138, 139, 140, 142, 147, 152, 154, 158, 174, 175, 190, 194, 200, 202, 204, 221, 241], "caus": [3, 16, 145, 153, 155], "cautiou": 0, "cdot": [9, 10, 13, 14, 15, 18, 39, 40, 42, 44, 45, 48, 49, 50, 60, 62, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 92, 93, 95, 99, 107, 114, 116, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 146, 147, 148, 149, 150, 151, 152, 154, 171, 172, 173, 176, 178], "center": [85, 101, 153, 232, 241], "centercrop": [240, 241], "central": 160, "certain": [10, 40, 60, 114, 148, 149, 157, 200, 202], "chain": [13, 14, 37, 230, 241], "challeng": 29, "cham": 29, "chanc": [235, 236, 238], "chang": [65, 120, 154, 158, 159, 222, 224, 228, 235, 241], "channel": [23, 24, 25, 26, 48, 49, 50, 52, 55, 56, 57, 69, 71, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 103, 104, 105, 110, 111, 124, 125, 126, 127, 128, 129, 132, 135, 136, 137, 138, 139, 140, 233, 235, 239], "check": [157, 232, 234], "checkpoint": 144, "choic": 220, "choleski": 12, "chosen": 107, "christoph": 5, "clariti": 160, "class": [3, 4, 7, 21, 24, 25, 26, 28, 46, 64, 68, 142, 144, 181, 184, 215, 241], "classic": 26, "classif": [4, 20, 21, 24, 25, 26, 27, 28, 29, 45, 46, 63, 64, 68, 99, 100, 118, 119, 122], "classifi": [20, 23, 24, 25, 26, 27], "cleaner": [1, 159, 173], "clear": [32, 168, 182, 183], "clearli": 160, "clf_in_featur": 23, "clf_layer": 23, "clip": [85, 154, 189], "clockwis": 85, "close": [13, 16, 98, 118, 153], "closer": 94, "closur": [143, 144], "cnn": 29, "co": [189, 205], "code": [14, 33, 35, 37, 157, 159, 160, 167], "coeffici": [18, 84, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155], "col": 52, "collect": [4, 8, 29, 33, 34, 36, 37, 144], "color": [235, 241], "colorjitt": 241, "column": [10, 11, 13, 17, 18, 19, 52, 184, 218, 220], "com": 5, "combin": [1, 3, 29, 34, 37, 39, 40, 95, 119, 142, 151, 152, 201, 209, 214, 216, 241], "combined_dataset": [0, 1], "common": [52, 85, 144, 241], "commonli": [7, 40, 45, 46, 47, 48, 50, 60, 67, 69, 71, 85, 92, 93, 100, 105, 118, 121, 122, 135, 136, 137, 138, 139, 140, 158, 160, 185, 225, 231, 232, 233, 234, 236, 237, 238, 241], "compar": [27, 167, 226], "compat": [4, 8, 115, 130, 142, 158, 167, 231, 241], "complex": [2, 3, 7, 11, 33, 34, 37, 43, 97, 138, 140, 142, 144, 241], "compon": [16, 31, 34, 144, 168, 241], "compos": [5, 103, 104, 105, 135, 136, 137, 138, 139, 140, 142, 241], "comprehens": 3, "comput": [7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 29, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 52, 60, 62, 63, 64, 65, 67, 68, 69, 71, 73, 74, 75, 84, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 153, 157, 158, 159, 160, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 220, 221, 223, 227, 231, 241], "computation": [3, 16], "compute_loss": [144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "concaten": [0, 48, 49, 50, 218, 219, 226, 229], "concept": [7, 16, 29], "condit": [9, 10, 13], "confer": 29, "configur": [21, 23, 24, 25, 26, 28, 36], "conjunct": [52, 122], "connect": [20, 23, 24, 25, 26, 27, 29, 62, 103, 104, 105, 116], "consid": [3, 13, 16, 37, 88, 89, 92, 93, 142, 154, 157, 182, 183, 241], "consider": 16, "consist": [2, 4, 20, 24, 25, 26, 30, 73, 74, 75, 132, 133, 134, 160, 165, 167, 221, 232, 239, 241], "consistent_tensor": 167, "constant": [63, 64, 69, 71, 72, 87, 98, 118, 119, 124, 125, 126, 127, 128, 129, 130, 146, 147, 148, 149, 150, 151, 152, 153, 160, 221], "constant_pad": 221, "constraint": 1, "construct": [7, 34, 142, 181, 223, 227], "contain": [1, 5, 10, 11, 16, 17, 18, 19, 23, 31, 33, 34, 35, 36, 37, 46, 52, 60, 62, 63, 64, 68, 84, 118, 119, 122, 143, 169, 170, 171, 172, 174, 175, 176, 177, 179, 180, 183, 190, 191, 192, 193, 195, 196, 197, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 217, 220], "content": 85, "context": [157, 159], "contextmanag": 159, "contigu": 222, "continu": [96, 164], "contrast": [127, 128, 129, 241], "contribut": [84, 107, 108, 109, 110, 111, 135, 138, 139, 140, 145, 151, 212], "control": [94, 120, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 167, 231, 241], "conv": [125, 126], "conv1": [24, 25, 26, 37, 103, 104, 105, 135, 136, 137, 138, 139, 140], "conv1d": [51, 59, 106, 113, 135, 138], "conv1dmodel": 103, "conv2": [24, 25, 26, 37, 103, 104, 105], "conv2d": [34, 37, 51, 59, 106, 113, 125, 136, 139, 142], "conv2dmodel": 104, "conv3d": [51, 59, 106, 113, 126, 137, 140], "conv3dmodel": 105, "conv_lay": [23, 34], "convblock": 142, "conveni": [4, 21, 28], "convent": 173, "converg": [16, 101, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 233], "convers": [119, 122, 235, 241], "convert": [5, 30, 32, 46, 100, 168, 220, 230, 231, 235, 241], "convnetwork": 34, "convolut": [20, 21, 23, 24, 25, 26, 27, 28, 29, 34, 48, 49, 50, 52, 103, 104, 105, 136, 137, 139, 140, 221], "convolv": [48, 49, 50, 103, 104, 105], "coordin": 220, "core": [0, 1, 2, 3, 31, 142, 143, 168, 241], "corinna": 5, "corner": [84, 232, 234], "correct": [33, 119, 122, 148, 149, 150, 151, 152, 231], "correctli": [16, 31, 33, 34, 35, 36, 37, 119, 122, 167], "correspond": [0, 1, 2, 5, 11, 33, 35, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 60, 62, 84, 97, 100, 114, 116, 124, 125, 126, 127, 128, 129, 136, 137, 145, 153, 155, 171, 172, 174, 175, 178, 198, 199, 205, 207, 218, 221, 223, 227, 229], "cort": 5, "cosh": [189, 206, 211], "cosin": [191, 195, 196, 205], "could": 31, "count": [29, 216], "counterclockwis": [85, 237], "cover": [8, 48, 49, 50], "coverag": [73, 74, 75], "creat": [2, 3, 7, 20, 21, 24, 25, 26, 27, 28, 30, 31, 34, 37, 142, 158, 167, 180, 184, 185, 186, 187, 188, 220, 226, 230, 241], "creation": [34, 37, 241], "criterion": [118, 119, 120, 121, 122], "critic": [16, 144, 167], "crop": [232, 234, 241], "cross": [63, 64, 118, 119], "cross_entropi": [59, 66], "crossentropyloss": [113, 123], "cube": 189, "cumul": [40, 95], "current": [31, 145, 148, 154, 157], "custom": [4, 7, 20, 21, 23, 27, 28, 30, 33, 34, 35, 36, 37, 85, 94, 96, 142, 167, 184], "custom_lenet": 23, "customiz": 241, "custommodul": 30, "customnetwork": 33, "customparametermodel": [35, 36], "d": [29, 50, 57, 75, 78, 82, 126, 129, 130, 134, 137, 140, 158, 181, 237], "d_": [50, 75, 78, 82, 105, 134, 137, 140], "d_1": 130, "d_2": 130, "d_n": 130, "d_out": [50, 78, 82], "dampen": [145, 153, 155], "data": [4, 5, 7, 14, 30, 32, 36, 47, 48, 50, 52, 56, 57, 62, 85, 97, 101, 103, 104, 105, 116, 129, 135, 137, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 160, 167, 168, 169, 170, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 215, 221, 222, 223, 224, 225, 227, 230, 231, 234, 235, 236, 237, 238, 241], "databas": 5, "dataload": [2, 3], "dataset": [3, 24, 25, 26, 85, 147, 159, 230, 232, 241], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 177, "debug": [37, 157, 165, 241], "decai": [145, 146, 147, 148, 149, 150, 151, 152, 153, 155], "decompos": [9, 17, 19], "decomposit": [8, 9, 13, 16, 17, 19], "decoupl": [146, 147, 149, 150, 151, 152], "decreas": [148, 149, 154], "deep": [1, 3, 4, 7, 29, 69, 95, 98, 142, 167, 230, 231, 241], "deeper": [7, 98], "def": [0, 1, 2, 3, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 60, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 114, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 159, 160, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231], "default": [1, 5, 15, 19, 20, 21, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 42, 46, 48, 49, 50, 53, 54, 55, 56, 57, 63, 64, 65, 67, 68, 69, 71, 72, 76, 77, 78, 80, 81, 82, 84, 85, 88, 89, 90, 91, 92, 93, 94, 96, 100, 103, 104, 105, 107, 108, 109, 110, 111, 114, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 143, 144, 151, 157, 162, 163, 164, 166, 168, 180, 181, 182, 183, 184, 185, 186, 187, 188, 200, 201, 202, 209, 213, 214, 215, 216, 218, 220, 221, 223, 226, 229, 231, 235, 236, 238], "defin": [1, 3, 4, 7, 23, 33, 34, 35, 36, 37, 95, 118, 119, 120, 121, 122, 135, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 160, 163, 164, 178, 183, 194, 213, 230, 241], "definit": [7, 9, 241], "degre": [85, 237, 241], "delai": 145, "delta": [46, 65, 100, 120, 146], "delta_": [46, 100], "demonstr": [7, 8, 29, 142, 160], "denomin": [69, 71, 72, 124, 125, 126, 127, 128, 129, 130, 146, 147, 148, 149, 150, 151, 152, 153, 170], "denot": [14, 99, 103, 104, 105, 107, 108, 109, 110, 111, 213], "dens": [7, 147], "dense1": 7, "dense2": 7, "densiti": [40, 95], "depend": [7, 14, 15, 36, 63, 64, 65, 67, 68, 84, 103, 171, 181, 200, 202, 223, 227, 234, 235, 239], "depth": [34, 50, 57, 75, 78, 82, 105, 126, 129, 134, 137, 140], "depthwis": [48, 49, 50], "deriv": [16, 17, 46, 73, 74, 75, 95, 100, 101, 103, 104, 105, 114, 116], "descend": 19, "descent": [7, 145, 155], "describ": [10, 11], "descript": 241, "deseri": 30, "design": [3, 4, 7, 8, 20, 21, 24, 25, 26, 28, 29, 32, 34, 35, 36, 37, 39, 44, 98, 107, 142, 160, 241], "desir": [30, 73, 74, 75, 132, 133, 134, 213, 215], "destin": 31, "det": [8, 12], "det_a": 10, "detail": [7, 144, 167, 173], "determin": [0, 7, 8, 9, 10, 23, 73, 74, 75, 88, 89, 92, 93, 103, 104, 105, 132, 133, 134, 136, 137, 139, 140, 153, 157, 162, 163, 164, 166, 182, 183, 232, 234], "determinist": 85, "develop": [7, 142, 167, 241], "deviat": [88, 90, 92, 230, 233, 241], "diag": [16, 189], "diagon": [16, 17, 19, 181, 184, 212], "diagonaliz": 11, "dict": [21, 23, 28, 31, 33, 35, 115, 143], "dictionari": [23, 31, 32, 33, 35, 37, 143], "differ": [0, 14, 23, 34, 37, 46, 60, 84, 100, 114, 121, 144, 158, 165, 167, 179, 188, 214, 225, 241], "differenti": [7, 9, 18, 95, 142, 162, 163, 164, 166, 168, 180, 182, 183, 185, 187], "digit": [5, 26, 29], "dilat": [48, 49, 50, 103, 104, 105], "dilation_height": 52, "dilation_width": 52, "dim": [119, 122], "dimens": [10, 11, 13, 14, 17, 18, 19, 20, 27, 32, 46, 60, 62, 69, 71, 72, 74, 75, 84, 100, 103, 104, 105, 124, 125, 126, 127, 128, 129, 130, 133, 134, 136, 137, 138, 139, 140, 158, 160, 162, 166, 168, 172, 182, 200, 201, 202, 209, 212, 213, 214, 216, 218, 221, 223, 225, 226, 227, 228, 229, 232, 234, 239], "dimension": [14, 16, 17, 19, 48, 49, 50, 76, 77, 78, 80, 81, 82, 103, 104, 105, 109, 110, 111, 124, 125, 126, 127, 128, 129, 135, 136, 137, 138, 139, 140, 158, 172, 173, 177, 181, 198, 201, 209, 212, 214, 217, 222, 223, 225, 227], "diminish": 147, "direct": [11, 118, 119, 120, 121, 122, 145, 153, 154, 155], "directli": [33, 34, 35, 36, 84, 146, 147, 149, 150, 151, 152, 165, 167, 215, 241], "directori": [3, 4, 5], "disabl": [157, 159], "discontinu": 204, "discrep": [118, 119, 122], "discret": [163, 167], "disk": 3, "displai": [21, 28], "distribut": [40, 46, 84, 88, 89, 90, 91, 92, 93, 95, 100, 103, 104, 105, 107, 108, 109, 110, 111, 114, 116, 119, 122, 135, 136, 137, 162, 163, 164, 166, 167, 201, 209, 212, 214, 226, 233, 235, 236, 237, 238], "div": 189, "divers": [85, 236, 238, 241], "diversifi": 241, "divid": [1, 16, 34, 37, 46, 48, 49, 50, 100, 118, 119, 120, 121, 122, 170, 233], "divis": [7, 16, 48, 49, 50, 107, 108, 109, 110, 111, 146, 147, 148, 149, 150, 151, 152, 153, 170], "do": [16, 18, 30, 33, 34, 35, 36, 53, 54, 55, 56, 142, 152, 157, 188, 212, 221], "document": [4, 7, 29, 144, 160, 167], "doe": [7, 14, 15, 16, 17, 19, 30, 33, 34, 35, 36, 37, 93, 148, 149, 154, 157, 159, 162, 163, 164, 165, 166, 180, 181, 182, 183, 184, 185, 186, 187, 188, 224], "doesn": 159, "doi": 29, "domain": 4, "don": 159, "dot": [11, 14, 33, 34, 35, 36, 37, 130, 138, 139, 140, 172, 177, 189, 216, 218, 226, 229], "down": [3, 142, 239], "download": [4, 5], "drawback": 39, "drawn": [162, 163, 164, 166, 167, 237], "drop": [107, 108, 109, 110, 111], "dropout": [20, 27, 29, 40, 53, 55, 56, 57, 107, 109, 110, 111], "dropout1d": [58, 59, 112, 113], "dropout1dmodel": 109, "dropout2d": [58, 59, 112, 113], "dropout3d": [58, 59, 112, 113], "dropoutmodel": 108, "dtype": [30, 32, 168, 180, 181, 182, 183, 184, 185, 186, 187, 188, 215, 231], "due": [14, 16, 48, 49, 97, 237], "duplic": [33, 35], "dure": [3, 7, 10, 11, 13, 16, 17, 19, 30, 31, 32, 33, 34, 35, 36, 37, 46, 53, 54, 55, 56, 57, 69, 71, 85, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 157, 159, 168, 169, 200, 201, 202, 209, 214, 231, 234, 237, 241], "dy": [42, 96], "dynam": [0, 2, 3, 31, 34, 35, 36, 37, 73, 74, 75, 130, 132, 133, 134, 147, 152, 157], "dynamicnetwork": 34, "e": [0, 10, 11, 13, 14, 17, 19, 23, 24, 25, 26, 30, 46, 99, 100, 107, 119, 143, 146, 153, 154, 184, 196, 198, 199, 206, 211, 212, 216, 235], "each": [1, 2, 3, 4, 11, 14, 16, 17, 19, 20, 23, 27, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 60, 62, 69, 71, 73, 74, 75, 97, 100, 103, 104, 105, 107, 108, 109, 110, 111, 114, 116, 118, 119, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 146, 147, 148, 149, 150, 151, 152, 153, 154, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 216, 218, 220, 221, 223, 226, 227, 229, 230, 231, 232, 233, 234, 235, 237, 239, 241], "earli": 152, "eas": [4, 7], "easi": [2, 3, 4, 7, 32, 33, 35], "easier": [3, 33, 34, 37], "easili": [4, 32, 36, 241], "eccv": 29, "economi": 19, "edg": 221, "educ": [7, 29], "effect": [33, 34, 35, 36, 37, 46, 48, 49, 50, 52, 94, 95, 97, 99, 100, 101, 124, 125, 126, 127, 128, 129, 130, 157, 158, 159, 218, 229], "effici": [1, 2, 3, 5, 7, 8, 13, 18, 52, 119, 142, 159], "eig": 12, "eigenvalu": [11, 17], "eigenvector": 11, "eigval": 11, "eigvec": 11, "either": [62, 160, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 215, 220], "element": [0, 16, 17, 32, 36, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 97, 100, 103, 104, 105, 107, 108, 109, 110, 111, 118, 119, 120, 121, 122, 130, 135, 136, 137, 138, 139, 140, 158, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 214, 217, 220, 221, 223, 224, 225, 227], "elementwise_affin": 130, "elsewher": [138, 139, 140, 184], "elu": [41, 59, 102, 113], "elumodel": 94, "empti": [31, 37, 189], "empty_lik": 189, "enabl": [0, 1, 2, 3, 7, 14, 19, 31, 32, 33, 34, 35, 36, 97, 103, 104, 105, 114, 116, 142, 144, 157, 159, 162, 163, 164, 166, 168, 230], "encapsul": [142, 168], "encod": [119, 122], "encourag": [108, 109, 110, 111, 118, 119, 122, 148], "end": [15, 39, 42, 43, 44, 94, 96, 97, 98, 120, 121, 122, 135, 136, 137, 138, 139, 140, 152, 154, 174, 175, 177, 180, 190, 194, 200, 202, 204, 216, 221, 241], "enforc": [31, 33, 35], "engin": 16, "enhanc": [25, 27, 28, 33, 35, 241], "ensur": [3, 5, 16, 17, 18, 30, 31, 32, 33, 34, 35, 36, 37, 46, 73, 74, 75, 96, 100, 107, 108, 109, 110, 111, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 136, 137, 138, 139, 140, 142, 143, 145, 146, 148, 149, 151, 152, 153, 154, 155, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 178, 201, 209, 214, 221, 231, 232, 233, 234, 235, 239, 241], "enter": 159, "entir": [3, 55, 56, 57, 110, 111, 167], "entri": [23, 225], "entropi": [63, 64, 118, 119], "environ": 7, "ep": [63, 64, 69, 71, 72, 118, 119, 124, 125, 126, 127, 128, 129, 130, 146, 147, 148, 149, 150, 151, 152, 153], "epoch": [1, 3], "epsilon": [118, 119, 124, 125, 126, 127, 128, 129, 130, 146, 147, 148, 149, 150, 151, 152, 153], "equal": [14, 84, 135, 136, 137, 232, 234], "equat": [11, 16, 18], "equival": [173, 212, 222], "error": [0, 3, 11, 13, 31, 34, 35, 36, 37, 40, 65, 67, 95, 118, 119, 120, 121, 142, 143, 159, 160], "especi": [3, 33, 35, 36, 99, 158, 159, 160, 165, 230, 231, 235, 241], "essenti": [1, 3, 7, 8, 14, 16, 49, 52, 142, 165, 167, 200, 230, 231, 235, 241], "estim": [121, 148, 149, 150, 151, 152, 153], "et": 29, "eta": 154, "eta_": 154, "etc": [118, 231], "euclidean": 15, "european": 29, "evalu": [31, 69, 71, 107, 108, 109, 110, 111, 124, 125, 126, 127, 128, 129, 241], "even": [146, 159, 180, 181, 184, 185, 186, 187, 188], "evenli": [73, 74, 75, 132, 133, 134, 180], "everi": [1, 241], "everywher": 204, "exact": [31, 34, 213, 235, 237], "exactli": 37, "exampl": [4, 173], "except": [0, 204, 216, 218, 229], "exclus": [163, 166, 180], "exdb": 5, "execut": [34, 159], "exist": [18, 33, 35, 37, 216], "exit": 159, "exp": [39, 44, 45, 47, 94, 98, 189], "expand": [4, 52, 223, 227], "expect": [9, 34, 37, 107, 108, 109, 110, 111, 130, 142, 160], "expens": 3, "experi": [7, 165, 167, 241], "experiment": 167, "explan": [14, 16, 20, 27, 73, 74, 75, 132, 133, 134, 145], "explicit": 37, "explicitli": [33, 35], "explod": [98, 124, 125, 126], "explor": [142, 167], "expon": [14, 178], "exponenti": [39, 44, 46, 94, 98, 100, 107, 148, 149, 150, 151, 152, 198], "extend": 4, "extens": 144, "extern": [4, 7], "extract": [29, 52, 105, 135, 137, 181, 200, 202, 232, 234], "extractor": [23, 24, 25, 26], "extrem": 16, "ey": 189, "f": [1, 4, 5, 7, 35, 36, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 60, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 100], "facilit": [33, 37, 46, 100, 103, 104, 105, 142, 144, 233, 241], "factor": [39, 48, 49, 50, 52, 92, 93, 145, 152, 153, 154, 155, 160], "failur": [33, 34, 35, 36, 142], "fals": [1, 5, 19, 30, 31, 32, 53, 54, 55, 56, 57, 69, 71, 84, 86, 88, 89, 90, 91, 92, 93, 103, 104, 105, 114, 116, 148, 149, 153, 157, 162, 163, 164, 166, 168, 180, 181, 182, 183, 184, 185, 186, 187, 188, 200, 201, 202, 209, 214, 215, 231], "fan": [88, 89, 92, 93], "fan_in": [88, 89], "fan_out": [88, 89], "fast": 152, "faster": [147, 151, 159], "fc": [34, 104, 105, 135, 136, 137, 138, 139, 140], "fc1": [25, 26, 33, 37, 95, 97, 98, 99, 101, 116], "fc2": [25, 26, 33, 37, 95, 97, 98, 99, 101, 116], "fc3": 26, "featur": [3, 20, 23, 24, 25, 26, 27, 28, 29, 60, 62, 69, 105, 108, 109, 110, 111, 114, 116, 124, 125, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 142, 147], "feature_extractor": 23, "fed": [3, 241], "feed": [3, 168, 241], "fergu": [27, 29], "fetch": 0, "fewer": 1, "field": [5, 29], "file": 3, "fill": [86, 90, 91, 162, 163, 164, 166, 185, 186, 187, 188], "filter": [27, 29, 48, 49, 50, 52, 104, 105], "filter_height": 52, "filter_s": 52, "filter_width": 52, "final": [33, 34, 35, 36, 37, 230, 241], "find": [18, 200, 202], "fine": 241, "finish": 159, "first": [5, 11, 23, 27, 34, 35, 60, 114, 148, 149, 150, 151, 152, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 220, 229, 230, 231, 241], "fit": 142, "fix": [34, 221], "flatten": [23, 37, 52, 177, 219, 222, 223], "flexibl": [1, 3, 4, 7, 23, 33, 34, 35, 36, 37, 142, 144, 160, 185, 186, 231, 241], "flip": [236, 238, 241], "float": [2, 5, 30, 32, 39, 42, 53, 54, 55, 56, 57, 63, 64, 65, 69, 71, 72, 85, 86, 90, 91, 92, 93, 94, 96, 107, 108, 109, 110, 111, 118, 119, 120, 124, 125, 126, 127, 128, 129, 130, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 160, 166, 168, 180, 183, 194, 215, 233, 235, 236, 237, 238], "float32": [30, 32, 168, 180, 181, 184, 185, 187, 215, 231], "float64": [188, 215, 231], "flow": [37, 93, 95, 99, 101, 103, 104, 105, 114, 116, 157], "fly": [2, 3], "fname": 3, "focu": 7, "focus": 7, "follow": [0, 7, 8, 11, 17, 18, 19, 20, 27, 39, 40, 42, 43, 44, 45, 46, 47, 60, 62, 84, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 160, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 200, 202, 220, 224, 232, 233, 234, 235, 236, 237, 238, 241], "form": [17, 177, 220, 223, 227, 241], "format": [2, 3, 5, 119, 122, 231], "formul": 40, "formula": [11, 19, 46, 73, 74, 75, 100, 120, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 173, 214, 235], "forward": [7, 20, 23, 24, 25, 26, 27, 30, 31, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "found": 7, "foundat": [31, 142, 144, 168], "four": 221, "frac": [9, 10, 11, 13, 14, 15, 16, 18, 19, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 60, 62, 73, 74, 75, 76, 77, 78, 80, 81, 82, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 146, 147, 148, 149, 150, 151, 152, 153, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233], "frame": 57, "framework": [4, 7, 29, 119, 122, 124, 125, 126, 127, 128, 129, 143, 144, 241], "frequent": [119, 122], "from": [0, 1, 2, 3, 4, 5, 7, 14, 16, 30, 31, 32, 33, 34, 35, 36, 37, 52, 60, 69, 71, 84, 86, 88, 89, 90, 91, 92, 93, 103, 104, 105, 107, 108, 109, 110, 111, 114, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 135, 136, 137, 142, 143, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 162, 163, 164, 166, 167, 168, 173, 174, 175, 179, 181, 200, 201, 202, 209, 214, 216, 218, 220, 223, 225, 226, 227, 229, 232, 233, 234, 235, 236, 237, 238, 241], "full": 19, "full_matric": 19, "fulli": [4, 8, 20, 23, 24, 25, 26, 27, 29, 62, 116, 167], "function": [3, 4, 5, 7, 8, 31, 33, 34, 35, 36, 37, 94, 95, 96, 97, 98, 99, 100, 101, 107, 108, 109, 110, 111, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 142, 144, 160, 167, 230, 241], "fundament": [7, 62, 116, 231], "further": [7, 167, 201, 209, 214], "futur": 115, "g": [0, 10, 11, 14, 17, 19, 23, 24, 25, 26, 107, 143, 146, 153, 216, 235], "g_": 147, "g_t": 153, "gain": [92, 93], "gamma": [124, 125, 126, 127, 128, 129, 130], "gaussian": [40, 95], "gelu": [41, 59, 102, 113], "gelunetwork": 95, "gener": [16, 85, 107, 108, 109, 110, 111, 128, 149, 151, 152, 159, 162, 163, 164, 165, 166, 167, 172, 180, 182, 183, 220, 234, 235, 236, 238, 241], "get": 5, "give": [7, 145, 153], "given": [10, 11, 14, 16, 17, 19, 52, 118, 119, 122, 143, 157, 186, 188, 230, 235, 236, 238, 241], "global": [0, 157, 159, 165, 167], "goal": [118, 119, 122], "gpu": 29, "grad": [30, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 52, 60, 62, 84, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 143, 144, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 236, 238, 239], "grad_output": 14, "gradient": [7, 8, 29, 30, 32, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 159, 162, 163, 164, 166, 180, 181, 182, 183, 184, 185, 186, 187, 188, 215, 231], "graph": [7, 93, 168, 180, 181, 184, 185, 186, 187, 188, 231], "grayscal": [5, 23, 24, 25, 26, 235, 241], "greater": 194, "green": 235, "grid": 220, "groundbreak": 29, "group": [34, 48, 49, 50, 103, 104, 105, 143, 144], "group1": 34, "group2": 34, "guarante": 165, "h": [49, 50, 52, 56, 57, 74, 75, 77, 78, 81, 82, 84, 85, 125, 126, 128, 129, 133, 134, 137, 140, 232, 234], "h_": [49, 50, 74, 75, 77, 78, 81, 82, 84, 104, 105, 133, 134, 136, 137, 139, 140], "h_out": [49, 50, 77, 78, 81, 82], "h_stack": 218, "ha": [0, 11, 37, 48, 49, 50, 118, 119, 124, 125, 126, 127, 128, 129, 130, 143, 144, 173, 212, 216, 218, 226, 229, 235], "half": 207, "hand": 18, "handl": [0, 3, 7, 16, 31, 33, 34, 35, 36, 37, 119, 122, 142, 144, 159], "handwritten": [5, 26], "hardwar": 7, "hat": [148, 149, 150, 151, 152], "have": [0, 1, 10, 11, 13, 16, 17, 19, 32, 34, 36, 37, 49, 50, 93, 142, 184, 185, 186, 187, 188, 200, 202, 216, 218, 220, 225, 226, 229, 233, 239], "height": [49, 50, 52, 56, 57, 74, 75, 77, 78, 81, 82, 84, 85, 104, 105, 125, 126, 128, 129, 133, 134, 136, 137, 139, 140, 232, 234, 239], "help": [7, 42, 44, 57, 94, 96, 98, 101, 124, 125, 126, 135, 136, 138, 139, 145, 148, 149, 151, 157, 158, 159, 160], "henc": 224, "here": [3, 9, 31, 60, 142, 144, 158, 159, 160, 167, 230, 231, 241], "hidden": [20, 27, 34], "hidden_s": 34, "hierarch": [34, 37, 142], "hierarchi": 104, "hierarchicalnetwork": 34, "high": [7, 163, 166], "higher": [119, 122, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 172, 173, 177, 198], "highest": 163, "highlight": [138, 139, 140], "hint": 160, "histor": 147, "histori": [162, 163, 164, 166, 180, 181, 182, 183, 184, 185, 186, 187, 188], "hold": [33, 34, 35, 36], "horizont": [218, 226, 236, 241], "hot": [119, 122], "how": [2, 3, 7, 34, 37, 142, 160, 241], "howev": [30, 93], "hstack": 219, "http": 5, "huber": [65, 120], "huber_loss": [59, 66], "huberloss": [113, 123], "huberregressionmodel": 120, "hue": 241, "hyperbol": [47, 101, 196, 206, 211], "hyperparamet": [143, 145], "i": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 60, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241], "ideal": [7, 37], "ident": [13, 14, 85, 113, 117, 165, 167, 184, 224], "identifi": 35, "idx": [2, 3], "ieee": 29, "ii": 212, "ij": [46, 84, 100, 171, 172, 173, 177, 220], "ik": [171, 172, 173], "ill": [10, 16], "ilsvrc": 29, "imag": [3, 4, 5, 20, 21, 23, 24, 25, 26, 28, 29, 49, 71, 85, 104, 128, 220, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241], "image_dir": 3, "image_path": 3, "imagedataset": 3, "imageio": 3, "imagenet": 29, "imbal": [119, 122], "impact": 151, "implement": [2, 3, 7, 16, 20, 23, 27, 29, 31, 52, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 218, 229, 235], "impli": [103, 104], "import": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 54, 57, 60, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241], "improp": [34, 37, 167], "improv": [27, 29, 69, 85, 95, 98, 101, 145, 146, 147, 148, 149, 150, 151, 152, 153, 160, 234, 237, 241], "imread": 3, "in1_featur": [60, 114], "in2_featur": [60, 114], "in_channel": [34, 37, 103, 104, 105, 125, 126, 135, 136, 137, 138, 139, 140, 142], "in_featur": [33, 34, 37, 62, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 107, 108, 109, 114, 116, 118, 119, 120, 121, 122, 124, 127, 130, 135, 136, 137, 138, 139, 140], "includ": [3, 4, 7, 8, 14, 15, 20, 23, 27, 31, 32, 34, 36, 37, 84, 142, 143, 144, 151, 160, 167, 173, 221], "inclus": [32, 35, 163, 166], "incom": [62, 116], "incomplet": 2, "incompletedataset": 2, "incorpor": [19, 95], "increas": [48, 49, 50, 52, 85, 147, 154, 158, 218, 229, 235, 236, 238, 241], "independ": [34, 48, 49, 50, 107, 108, 109, 110, 111, 130, 173, 183, 233, 235, 237, 239], "index": [0, 2, 5, 158, 180, 181, 184, 220, 224], "indexerror": 0, "indic": [0, 1, 32, 34, 36, 37, 64, 68, 119, 122, 135, 157, 168, 232, 234], "individu": [3, 34, 37, 120, 130, 144, 147, 154], "induc": [44, 98], "inf": 210, "infer": [34, 37, 159], "infin": [17, 19, 150], "inform": [7, 29, 30, 144, 146, 159], "infti": [15, 152], "inherit": [1, 145, 153, 155], "init": 87, "initi": [1, 30, 32, 33, 34, 35, 36, 37, 86, 88, 89, 90, 91, 92, 93, 103, 104, 105, 114, 116, 118, 119, 120, 121, 122, 124, 125, 126, 130, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 162, 165, 166, 167, 180, 184, 185, 186, 187, 188, 215], "initial_accumulator_valu": 147, "inner": [7, 171, 189], "input": [7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 29, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 60, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 167, 168, 169, 171, 172, 173, 177, 181, 183, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241], "input1": 114, "input2": 114, "input_": [20, 27, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 132, 133, 134], "input_1": 60, "input_2": 60, "input_data": [94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 135, 136, 137, 138, 139, 140], "input_s": [34, 36, 100, 119, 122], "input_tensor": [7, 23, 24, 25, 26, 30, 33, 34, 35, 36, 37, 46, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 142, 232, 233, 234, 235, 236, 237, 238, 239], "insid": [3, 157, 159], "insight": [7, 29], "inspect": [31, 32, 37, 143], "instabl": [16, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155], "instal": 7, "instanc": [0, 1, 7, 21, 24, 25, 26, 28, 31, 32, 33, 35, 36, 37, 71, 127, 128, 129, 130, 143, 215, 223, 227, 241], "instance_norm": [59, 70, 127, 128, 129], "instancenorm1d": [113, 131], "instancenorm1dmodel": 127, "instancenorm2d": [113, 131], "instancenorm3d": [113, 131], "instanti": 2, "instead": [7, 33, 34, 35, 36, 37, 88, 89, 92, 93, 148, 149, 150, 159, 160, 182, 183], "int": [0, 1, 2, 5, 14, 15, 20, 21, 23, 27, 28, 30, 32, 46, 48, 49, 50, 52, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 90, 91, 92, 93, 100, 103, 104, 105, 114, 116, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 148, 149, 150, 151, 152, 154, 162, 163, 164, 165, 166, 168, 180, 181, 182, 184, 185, 187, 194, 200, 201, 202, 209, 213, 214, 215, 216, 221, 223, 224, 225, 226, 227, 228, 232, 234, 239], "integ": [1, 3, 14, 48, 49, 50, 74, 75, 103, 104, 105, 130, 133, 134, 136, 137, 138, 139, 140, 160, 163, 164, 166, 167, 182, 185, 187, 201, 209, 213, 214, 221, 223, 224, 227], "integr": [1, 2, 4, 5, 8, 32, 34, 36, 37, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 114, 116, 135, 136, 137, 138, 139, 140], "intend": [30, 35, 36], "intens": [16, 233, 235], "intent": 160, "interact": [60, 114, 142, 167], "interfac": [2, 31, 34, 144], "interfer": [157, 159], "intermedi": 16, "intern": [33, 34, 35, 36, 37, 119, 122, 142, 232, 233, 234, 235, 236, 237, 238, 239], "interpol": [59, 83, 239], "interpret": [29, 46, 100, 160, 216], "interv": [162, 166, 180], "introduc": [29, 43, 95, 97, 99, 101, 107, 108, 109, 110, 111, 234, 237, 241], "introspect": 37, "intuit": [7, 33, 35, 142, 241], "inv": 12, "inv_a": 13, "invari": [136, 139], "invers": [7, 10, 13, 14, 16, 147, 191, 192, 193], "invert": [10, 13, 14, 18], "involv": [9, 10, 11, 13, 16, 17, 19, 39, 40, 42, 43, 44, 45, 47, 60, 62, 84, 103, 104, 105, 114, 116, 160, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 188, 198, 199, 200, 202, 205, 207, 220, 221, 223, 227], "is_leaf": 168, "issu": [3, 98, 124, 125, 126, 148, 149], "item": 121, "iter": [0, 1, 2, 3, 30, 31, 34, 36, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 180], "ith": [46, 100], "its": [4, 14, 16, 20, 27, 29, 30, 33, 34, 35, 36, 48, 49, 50, 52, 85, 93, 95, 97, 138, 139, 140, 142, 143, 146, 154, 157, 158, 159, 180, 182, 183, 187, 200, 202, 215, 224, 233, 236, 238, 241], "itself": [9, 14, 33, 34, 35, 36], "j": [5, 46, 100, 124, 125, 126, 127, 128, 129, 135, 136, 138, 139, 220, 226, 232, 234], "jk": 172, "join": [3, 216], "k": [14, 48, 103, 119, 125, 126, 128, 129, 135, 138, 139, 171, 172, 181, 184, 216], "k_d": [50, 105, 137, 140], "k_h": [49, 50, 104, 105, 136, 137, 140], "k_w": [49, 50, 104, 105, 136, 137, 140], "kaim": [88, 89, 92, 93], "kaiming_norm": 87, "kaiming_uniform": 87, "keep": [31, 97, 146, 159, 224], "keep_grad": [32, 162, 163, 164, 166, 168, 180, 181, 182, 183, 184, 185, 186, 187, 188, 215, 231], "keep_var": 31, "keepdim": [200, 201, 202, 209, 214], "kei": [29, 31, 33, 35, 37, 143], "kept": [201, 209, 214], "kernel": [23, 24, 25, 26, 27, 48, 49, 50, 52, 73, 74, 75, 76, 77, 78, 80, 81, 82, 103, 104, 105, 132, 133, 134, 136, 137, 140], "kernel_s": [34, 37, 76, 77, 78, 80, 81, 82, 103, 104, 105, 125, 126, 135, 136, 137, 138, 139, 140], "keyerror": 31, "keyword": [21, 28, 31, 115], "kj": [171, 173], "known": 29, "krizhevski": 29, "kroneck": [46, 100], "kwarg": [21, 24, 25, 26, 28, 31, 115], "l": [9, 16, 48, 55, 73, 76, 80, 107, 108, 109, 110, 111, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132], "l2": [145, 146, 147, 148, 149, 150, 151, 152, 153, 155], "l_": [48, 73, 76, 80, 103, 132, 135, 138], "l_out": [48, 76, 80], "label": [4, 5, 118, 119, 122], "lambd": 145, "lambda": [11, 44, 98, 145, 149], "lambda_1": 11, "lambda_2": 11, "lambda_i": 11, "lambda_n": 11, "languag": [4, 103, 114, 135, 138], "larg": [0, 3, 16, 29, 120, 142, 145, 148, 149, 150, 153, 154, 155, 159], "larger": [33, 35, 48, 49, 50, 52, 145, 174, 221, 232, 234, 239], "largest": 200, "last": [1, 46, 72, 100, 172, 173, 216, 236, 238], "latest": 4, "layer": [7, 20, 23, 24, 25, 26, 27, 29, 31, 33, 34, 37, 46, 62, 69, 71, 72, 88, 89, 92, 93, 100, 103, 104, 105, 114, 115, 116, 122, 130, 135, 136, 137, 138, 139, 140, 142, 167, 221, 231], "layer_group": 34, "layer_norm": [59, 70, 130], "layer_sequ": [34, 37], "layernorm": [113, 131], "layernormmodel": 130, "lead": [34, 37, 95, 127, 128, 129, 130, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 167], "leaf": 168, "leaki": [42, 96], "leaky_relu": [41, 59, 96], "leakyrelu": [102, 113], "learn": [1, 3, 4, 5, 7, 14, 16, 27, 28, 29, 33, 34, 35, 36, 43, 46, 94, 96, 97, 100, 103, 104, 105, 108, 109, 110, 111, 114, 116, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 165, 230, 231, 241], "learnabl": [30, 31, 32, 69, 71, 72, 103, 104, 105, 114, 116, 124, 125, 126, 127, 128, 129, 130, 142], "least": [16, 17, 19, 212], "lecun": [5, 29], "left": [14, 15, 16, 19, 40, 46, 95, 100, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 138, 139, 140, 232, 234], "leftarrow": 151, "len": [0, 1, 2, 3, 220], "lenet": [22, 24, 25, 26, 29], "lenet_1": 29, "lenet_4": 29, "lenet_5": 29, "length": [34, 48, 55, 73, 76, 80, 103, 115, 124, 127, 132, 135, 138, 221, 233], "leq": [120, 152, 178, 194], "lerp": 84, "less": [0, 39, 42, 65, 94, 96, 119, 120, 122, 194], "let": 11, "level": 7, "leverag": [18, 29, 142], "librari": [3, 7, 8, 31, 142, 143, 144, 160, 167, 168, 241], "lightweight": 7, "like": [7, 29, 30, 31, 34, 37, 48, 92, 93, 98, 107, 124, 125, 126, 127, 128, 129, 157, 158, 160, 215, 231, 241], "likelihood": [68, 119, 122], "limit": [146, 194], "linalg": [7, 12], "linalgerror": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "linear": [7, 8, 9, 16, 17, 18, 33, 34, 35, 37, 39, 40, 42, 43, 44, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 107, 108, 109, 114, 115, 118, 119, 120, 121, 122, 124, 127, 130, 135, 136, 137, 138, 139, 140, 184], "linearli": 120, "list": [0, 1, 23, 30, 32, 33, 34, 35, 36, 72, 115, 130, 143, 160, 162, 163, 164, 166, 168, 181, 182, 183, 185, 186, 187, 188, 213, 224, 225, 228, 230], "listdir": 3, "liter": [63, 64, 65, 67, 68, 84, 88, 89, 103, 104, 105, 118, 119, 120, 121, 122, 220], "ln": 178, "load": [3, 4, 5, 30, 31, 32, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "load_state_dict": [31, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "loader": [1, 2, 3], "local": [29, 52, 103], "locat": 84, "log": [68, 118, 119, 122, 189], "log_softmax": 122, "logarithm": [178, 198, 199], "logic": [3, 132, 133, 134, 142, 143], "logit": [20, 27, 46, 100, 119], "logsoftmax": [119, 122], "long": [151, 213], "loop": [1, 34, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "loss": [7, 16, 33, 34, 35, 36, 37, 46, 63, 64, 65, 67, 68, 94, 95, 96, 97, 98, 99, 100, 101, 107, 108, 109, 110, 111, 115, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "low": [7, 163, 166], "lower": [9, 91, 145, 153, 154, 155, 166], "lowest": 163, "lr": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "lu": 13, "lucid": [0, 1, 2, 5, 12, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 60, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 161, 189, 219, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239], "m": [33, 34, 37, 136, 137, 139, 140, 148, 149, 150, 151, 152, 184], "m_": [148, 149, 150, 151, 152], "m_t": [151, 152], "machin": [3, 5, 7, 16, 148, 158, 165], "magnitud": [153, 154, 241], "mai": [3, 7, 11, 13, 16, 34, 36, 85, 120, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 159, 167, 235, 241], "main": [7, 17, 34, 181, 184], "maintain": [16, 30, 31, 33, 34, 35, 37, 44, 88, 89, 92, 93, 94, 95, 98, 107, 108, 109, 110, 111, 124, 125, 126, 127, 128, 129, 148, 153, 232, 235, 239], "make": [1, 3, 7, 23, 34, 37, 99, 119, 120, 130, 136, 139, 142, 147, 148, 149, 150, 158, 167, 168, 173, 220, 230, 241], "manag": [7, 31, 33, 34, 35, 36, 37, 142, 144, 157, 159, 167], "manhattan": 15, "manipul": [7, 33, 35, 241], "manner": [34, 37], "manual": [63, 64, 68, 118, 119, 122, 159], "map": [31, 45, 47, 99, 101], "mask": [30, 107, 108, 109, 110, 111], "match": [18, 31, 34, 37, 63, 65, 67, 72, 143, 198, 223, 224, 227, 228, 233, 241], "math": [195, 205, 210], "mathbf": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 60, 62, 84, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 171, 172, 173, 177, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239], "mathcal": [88, 90, 92, 107, 108, 109, 110, 111, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130], "mathemat": [13, 234, 236, 237, 238], "mathrm": 16, "matmul": 189, "matric": [8, 10, 11, 13, 16, 18, 19, 171, 172, 173, 184, 220], "matrix": [7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 52, 60, 115, 116, 142, 171, 220], "matrix_pow": 12, "matthew": 29, "max": [15, 43, 80, 81, 82, 97, 138, 139, 140, 150, 174, 189, 194], "max_pool": [138, 139, 140], "max_pool1d": [59, 79], "max_pool2d": [59, 79], "max_pool3d": [59, 79], "max_valu": 194, "maxim": 3, "maximum": [15, 97, 138, 139, 140, 148, 150, 189, 194, 200, 237], "maxpool": [20, 27], "maxpool1d": [113, 141], "maxpool1dmodel": 138, "maxpool2d": [34, 37, 104, 113, 141], "maxpool2dmodel": 139, "maxpool3d": [105, 113, 141], "maxpool3dmodel": 140, "mean": [5, 17, 30, 44, 48, 49, 50, 53, 63, 64, 65, 67, 68, 69, 71, 90, 94, 95, 96, 97, 98, 99, 101, 105, 107, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 148, 149, 150, 151, 152, 153, 157, 164, 189, 194, 198, 199, 200, 202, 205, 207, 209, 212, 213, 214, 230, 233, 241], "meaning": [37, 160], "measur": [118, 119, 121, 122], "mechan": [7, 36, 60], "membership": 118, "memori": [2, 3, 159, 182, 183], "meshgrid": 219, "method": [3, 7, 8, 13, 33, 34, 35, 36, 37, 63, 64, 65, 67, 68, 88, 89, 92, 93, 118, 119, 120, 121, 122, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 167], "middl": 158, "might": 142, "min": [175, 189, 194], "min_valu": 194, "mind": [0, 3, 7, 34, 37, 159], "mini": 1, "minim": [4, 7, 37, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 144], "minimalist": 7, "minimum": [189, 194, 202], "minu": 99, "mirror": [186, 188], "mismatch": [31, 142, 143], "miss": [31, 142], "mitig": [42, 94, 96, 98, 124, 125, 126], "mnist": [4, 6, 24, 25], "mnist_train": [4, 5], "mode": [7, 57, 69, 71, 84, 88, 89, 107, 108, 109, 110, 111, 221], "model": [1, 3, 4, 7, 14, 17, 19, 20, 23, 27, 30, 31, 32, 33, 34, 35, 36, 37, 46, 85, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 167, 230, 231, 241], "modern": 29, "modif": [37, 159], "modifi": [21, 28, 33, 34, 35, 36, 86, 88, 89, 90, 91, 92, 93, 107, 157, 159, 165, 218, 229], "modul": [5, 7, 20, 21, 23, 27, 28, 30, 32, 33, 34, 35, 36, 37, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 160, 167, 231, 241], "modular": [3, 7, 29, 31, 34, 37, 142, 241], "moduledict": [34, 35, 37, 38], "modulelist": [36, 37, 38], "moment": [148, 149, 150, 151, 152], "momentum": [69, 71, 124, 125, 126, 127, 128, 129, 145, 151, 153, 155], "momentum_decai": 151, "moor": 16, "more": [3, 4, 7, 11, 33, 34, 37, 94, 108, 109, 110, 111, 142, 143, 144, 145, 146, 149, 150, 153, 154, 155, 164, 173, 212, 226, 241], "most": [8, 139, 231, 232, 241], "move": [145, 153], "mse": [65, 67, 120, 121], "mse_loss": [59, 66], "mseloss": [113, 123], "mu": [90, 124, 125, 126, 127, 128, 129, 130, 214], "mu_c": 233, "mu_i": [127, 128, 129], "much": 241, "mul": 189, "multi": [3, 4, 46, 64, 68, 100, 119, 122, 201, 209, 214], "multidimension": [162, 166, 182], "multipl": [1, 3, 7, 8, 14, 18, 20, 35, 36, 37, 52, 84, 85, 107, 108, 109, 110, 111, 119, 122, 142, 158, 162, 163, 164, 166, 171, 176, 182, 183, 230, 235, 241], "multipli": [14, 36, 62, 116, 154, 176, 177], "must": [0, 1, 3, 9, 10, 11, 13, 14, 17, 18, 19, 31, 33, 34, 35, 36, 37, 72, 107, 108, 109, 110, 111, 122, 143, 159, 212, 216, 218, 221, 223, 224, 226, 227, 229, 232, 233, 234, 235, 236, 238], "mymodel": [31, 32, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "myoptim": [143, 144], "n": [14, 15, 29, 33, 34, 37, 48, 49, 50, 52, 55, 56, 57, 60, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 88, 90, 92, 103, 104, 105, 110, 111, 114, 116, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 184, 201, 212, 214], "n1": 15, "nabla_": [146, 147, 148, 149, 150, 151, 152, 154], "nabla_t": 152, "nadam": 156, "name": [29, 31, 33, 35, 37, 160], "nan": [17, 19], "natur": [16, 29, 103, 114, 135, 138, 178, 198, 199], "ndarrai": [30, 32, 160, 168, 181, 183, 186, 188, 215], "ndim": [17, 19, 32, 168], "ne": 14, "nearest": 84, "necessari": [4, 5, 16, 159, 218, 229], "need": [2, 4, 34, 35, 36, 46, 114, 142, 159, 182, 183, 230, 231, 241], "neg": [14, 16, 19, 39, 68, 85, 94, 96, 97, 98, 119, 122, 154, 216], "negative_slop": [42, 96], "neglect": 36, "neighbor": 84, "neq": 15, "nest": [34, 37, 142], "nesterov": 151, "net": [27, 29], "network": [3, 4, 7, 20, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 60, 62, 69, 85, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 153, 155, 166, 167, 168, 180, 185, 187, 200, 202, 221, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241], "neural": [3, 4, 7, 20, 21, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 43, 44, 45, 46, 47, 48, 49, 50, 60, 62, 69, 85, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 153, 155, 166, 167, 168, 180, 185, 187, 200, 202, 221, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241], "neuralnetwork": 97, "neuron": 96, "never": 235, "new": [31, 32, 39, 40, 42, 43, 44, 45, 47, 60, 62, 84, 88, 89, 90, 91, 92, 93, 143, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 183, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 213, 215, 216, 218, 221, 223, 224, 226, 227, 228, 229], "next": [37, 230], "nll": 68, "nll_loss": [59, 66], "nllloss": [113, 123], "nn": [5, 7, 20, 23, 27, 38, 41, 51, 58, 61, 66, 70, 79, 83, 87, 102, 106, 112, 113, 117, 123, 131, 141, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 231, 241], "no_grad": 157, "node": 168, "nois": [19, 167], "non": [11, 14, 16, 19, 36, 40, 42, 43, 88, 89, 94, 95, 96, 97, 98, 99, 101, 107, 108, 109, 110, 111, 148, 149, 159, 178, 194], "none": [0, 1, 2, 5, 23, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 60, 62, 63, 64, 65, 67, 68, 69, 71, 72, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 186, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 239], "norm": [8, 12, 150], "normal": [5, 40, 44, 46, 47, 69, 71, 72, 87, 88, 92, 95, 98, 100, 107, 124, 125, 126, 127, 128, 129, 130, 153, 164, 167, 230, 240, 241], "normalized_shap": [72, 130], "note": [48, 107], "noth": [53, 54, 55, 56], "notimplementederror": [2, 31, 143], "notin": 194, "nov": 29, "np": [30, 32, 119, 122, 160, 168, 173, 180, 181, 184, 185, 187, 188, 199, 215, 231], "npy": 5, "num_class": [20, 21, 27, 28, 100, 119, 122], "num_featur": [37, 124, 125, 126, 127, 128, 129], "num_paramet": 36, "number": [0, 1, 2, 5, 10, 11, 13, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 32, 34, 36, 37, 48, 49, 50, 52, 55, 56, 57, 60, 62, 64, 68, 69, 71, 73, 74, 75, 84, 85, 88, 89, 92, 93, 99, 103, 104, 105, 114, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 140, 145, 162, 165, 166, 168, 178, 180, 182, 184, 200, 201, 202, 213, 214, 216, 218, 221, 223, 224, 225, 227, 229, 233, 235, 236, 238, 241], "numer": [13, 16, 63, 64, 69, 71, 72, 118, 119, 124, 125, 126, 127, 128, 129, 130, 146, 147, 148, 149, 150, 151, 152, 153, 160, 170, 180, 185, 187], "numpi": [7, 30, 32, 119, 122, 160, 168, 173, 181, 184, 199, 212, 215, 221, 223, 227, 231, 241], "o": [3, 137, 140, 185, 186], "object": [1, 3, 8, 29, 31, 35, 36, 121, 142, 159, 169, 170, 174, 175, 176, 179, 215], "observ": 148, "obtain": 1, "occur": [85, 159, 216], "occurr": 14, "odot": [107, 108, 109, 110, 111], "off": 157, "offer": [4, 7, 142, 144, 167, 241], "offset": 184, "often": [14, 48, 49, 50, 52, 119, 122, 180, 187, 231, 235, 239, 241], "older": 151, "onc": 159, "one": [0, 36, 37, 46, 48, 62, 76, 80, 98, 99, 100, 103, 109, 119, 122, 124, 127, 135, 138, 143, 158, 160, 164, 179, 186, 200, 202, 217, 222, 226, 231], "ones": [60, 62, 103, 104, 105, 116, 124, 125, 126, 127, 128, 129, 130, 142, 184, 186, 189], "ones_lik": 189, "onli": [7, 84, 97, 107, 108, 109, 110, 111, 118, 119, 122, 124, 125, 126, 127, 128, 129, 130, 138, 139, 140, 154, 157, 180, 194, 200, 202, 212, 221, 222, 224, 225], "onto": [17, 19], "openml": 5, "oper": [3, 7, 8, 13, 16, 30, 31, 34, 39, 40, 42, 43, 44, 45, 47, 48, 49, 50, 52, 57, 60, 62, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 157, 158, 159, 160, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 182, 183, 185, 187, 198, 199, 200, 201, 202, 205, 207, 209, 212, 214, 216, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 239], "operatornam": [14, 16], "opposit": 145, "optim": [3, 7, 8, 14, 16, 17, 19, 30, 32, 35, 36, 52, 103, 104, 105, 142, 159], "optimizer_st": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "option": [1, 5, 15, 19, 20, 21, 23, 27, 28, 30, 31, 32, 33, 34, 35, 36, 39, 42, 46, 49, 50, 53, 54, 55, 56, 57, 60, 62, 63, 64, 65, 67, 68, 69, 71, 72, 76, 77, 78, 80, 81, 82, 84, 85, 88, 89, 90, 91, 92, 93, 94, 96, 100, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 143, 145, 153, 155, 162, 163, 164, 166, 168, 180, 181, 182, 183, 184, 185, 186, 187, 188, 200, 201, 202, 209, 213, 214, 215, 216, 220, 223, 225, 226, 231, 235, 236, 238], "ord": 15, "order": [1, 3, 15, 19, 33, 34, 35, 36, 37, 213, 230], "ordered_dict": 37, "ordereddict": [31, 33, 34, 37], "organ": [33, 34, 35, 37], "orient": 241, "origin": [26, 53, 85, 101, 221, 222, 223, 224, 227, 228, 239], "orthogon": [16, 17, 19], "orthonorm": 17, "oscil": [145, 153, 155], "other": [2, 3, 7, 13, 23, 26, 30, 31, 34, 37, 88, 89, 107, 142, 143, 157, 159, 167, 168, 180, 182, 185, 187, 212, 220, 241], "otherwis": [39, 42, 43, 44, 46, 94, 96, 97, 98, 100, 108, 109, 110, 111, 120, 135, 136, 137, 138, 139, 140, 143, 154, 174, 175, 200, 202], "otim": [16, 60, 114], "out": [0, 3, 4, 39, 40, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 60, 62, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 88, 89, 92, 93, 103, 104, 105, 107, 108, 109, 110, 111, 132, 133, 134, 135, 136, 137, 138, 139, 140, 145, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229], "out_channel": [23, 34, 37, 103, 104, 105, 125, 126, 135, 136, 137, 138, 139, 140, 142], "out_featur": [33, 34, 37, 60, 62, 94, 95, 96, 97, 98, 99, 100, 101, 104, 105, 107, 108, 109, 114, 116, 118, 119, 120, 121, 122, 124, 127, 130, 135, 136, 137, 138, 139, 140], "outcom": [235, 236, 238], "outer": 189, "outlier": [65, 120], "output": [0, 1, 2, 7, 14, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 60, 62, 73, 74, 75, 84, 85, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 163, 164, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 183, 184, 185, 187, 188, 198, 199, 200, 201, 202, 205, 207, 209, 212, 213, 214, 220, 221, 223, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239], "output_height": 52, "output_lay": [34, 37], "output_s": [34, 73, 74, 75, 132, 133, 134], "output_width": 52, "outsid": 0, "over": [0, 1, 2, 3, 8, 27, 31, 34, 36, 46, 73, 74, 75, 100, 103, 104, 105, 119, 122, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 145, 146, 147, 148, 149, 162, 166, 200, 201, 202, 209, 212, 214, 235, 236, 238], "overdetermin": 16, "overfit": [1, 20, 27, 54, 57, 108, 109, 110, 111, 145, 148, 153, 155], "overrid": [2, 3], "overridden": [31, 143], "overwrit": [33, 35], "own": [4, 33, 34, 35, 36, 48, 49, 50, 93, 142, 233], "p": [15, 16, 32, 35, 36, 53, 54, 55, 56, 57, 107, 108, 109, 110, 111, 135, 138, 139, 235, 236, 238, 241], "p_d": [137, 140], "p_h": [136, 137, 140], "p_w": [136, 137, 140], "packag": [2, 3, 4, 8, 29, 142, 144, 165, 167, 231, 241], "pad": [23, 34, 37, 48, 49, 50, 52, 73, 74, 75, 76, 77, 78, 80, 81, 82, 103, 104, 105, 125, 126, 132, 133, 134, 135, 136, 137, 138, 139, 140, 219], "pad_after_dim1": 221, "pad_after_dim2": 221, "pad_before_dim1": 221, "pad_before_dim2": 221, "pad_width": 221, "padding_height": 52, "padding_width": 52, "pair": 60, "parallel": [1, 3], "param": [31, 32, 35, 36, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "param1": 31, "param_dict": 35, "param_group": [143, 144], "param_groups_setup": 143, "param_list": 36, "paramet": [0, 2, 7, 24, 25, 26, 29, 31, 142, 143, 144, 160, 167, 241], "parameterdict": 38, "parameterlist": 38, "parent": 142, "part": [30, 31, 93, 142, 157, 159, 167, 180, 181, 184, 185, 186, 187, 188, 231, 241], "partial": [9, 10, 11, 13, 14, 15, 16, 18, 19, 39, 40, 42, 43, 44, 45, 46, 47, 60, 62, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "particip": [32, 231], "particular": [33, 35], "particularli": [7, 16, 34, 35, 36, 37, 46, 62, 100, 116, 119, 122, 127, 128, 129, 130, 149, 157, 230], "pass": [2, 7, 16, 20, 23, 24, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 84, 94, 95, 96, 97, 98, 99, 101, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 135, 136, 137, 138, 139, 140, 142, 160, 168, 201, 209, 212, 213, 214, 216, 218, 222, 224, 225, 229, 231, 241], "past": [145, 146, 148, 153], "patch": [52, 136], "path": [3, 5], "pattern": [43, 97, 103, 104, 105], "penal": [145, 153, 155], "penalti": [146, 147, 148, 149, 150, 151, 152], "penros": 16, "per": [1, 73, 127, 128, 129, 130, 132], "perform": [3, 7, 8, 9, 16, 20, 23, 24, 25, 26, 27, 29, 31, 32, 36, 40, 48, 49, 50, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 157, 159, 165, 167, 169, 170, 173, 176, 179, 198, 200, 202, 209, 213, 230, 232, 234, 239, 241], "permut": 213, "persist": [30, 162, 163, 164, 166, 182, 183], "perturb": [11, 18, 19, 241], "phi": [40, 95], "pi": [40, 95, 195, 205, 210], "pil": [231, 241], "pinv": 12, "pioneer": 29, "pipelin": [5, 167, 230, 231, 233], "pixel": [5, 84, 233, 235], "place": [86, 88, 89, 90, 91, 92, 93], "placehold": [31, 115], "plai": [160, 167], "plot": 220, "point": [4, 85, 157], "pool": [20, 23, 24, 25, 26, 27, 29, 73, 74, 75, 76, 77, 78, 80, 81, 82, 104, 105, 132, 133, 134, 135, 136, 137, 138, 139, 140, 200, 202], "pool1": 37, "pool2": 37, "poorli": 13, "popul": 31, "popular": [4, 29], "portion": 241, "pose": 16, "posit": [1, 9, 14, 31, 37, 85, 94, 96, 97, 98, 135, 136, 137, 138, 139, 140, 154, 158, 178, 223, 227, 234], "possibl": [7, 241], "potenti": [16, 115, 153, 225], "power": [7, 14, 158, 159, 189, 230, 231, 241], "pp": 29, "practic": [16, 119, 122], "practition": 241, "preced": [32, 168], "predefin": [4, 29, 34, 98], "predict": [118, 119, 121, 122], "prefix": 31, "prepar": [3, 158, 221, 223, 227, 231, 241], "prepend": 31, "preprocess": [3, 4, 52, 85, 167, 230, 231, 241], "present": [118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 136], "preserv": [53, 85, 107, 180, 181, 184, 185, 186, 187, 188, 201, 209, 214], "preset": 4, "prevent": [1, 33, 34, 35, 36, 37, 54, 57, 108, 109, 110, 111, 118, 119, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 159], "previou": [145, 154, 159], "previous": 148, "primari": [7, 160], "primarili": 37, "print": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 60, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 157, 158, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239], "probabilist": 167, "probabl": [40, 46, 53, 54, 55, 56, 57, 63, 95, 100, 107, 108, 109, 110, 111, 118, 119, 122, 235, 236, 238, 241], "problem": [16, 17, 19, 42, 94, 96, 152], "proceed": 29, "process": [2, 3, 4, 14, 17, 19, 20, 27, 29, 36, 48, 49, 50, 71, 85, 98, 101, 103, 105, 114, 124, 125, 126, 127, 128, 129, 130, 135, 137, 138, 140, 145, 160, 220, 231, 232, 233, 234, 239, 241], "produc": [20, 27, 73, 74, 75, 103, 104, 105, 132, 133, 134, 165, 167], "product": [7, 17, 19, 99, 114, 130, 142, 171, 172, 176, 177], "program": [157, 167], "progress": 147, "project": [17, 19], "projector": 16, "promin": [135, 137, 138, 139, 140], "promot": [37, 119, 122, 142], "propag": [10, 11, 13, 16, 17, 18, 19, 31, 37, 60, 62, 84, 136, 137, 153, 154, 171, 172, 173, 177, 200, 202, 220, 221, 224, 228], "properli": [0, 36, 46, 100, 142], "properti": [8, 10, 13, 14, 40, 44, 53, 95, 98, 107, 147, 152], "proport": [5, 214], "proportion": 239, "provid": [0, 1, 2, 3, 4, 5, 7, 8, 21, 23, 28, 29, 31, 33, 34, 35, 36, 40, 62, 74, 75, 85, 118, 119, 120, 122, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 153, 155, 157, 159, 160, 165, 167, 168, 173, 180, 186, 200, 202, 213, 215, 223, 225, 227, 241], "pseudo": [13, 16], "purpos": [162, 166, 180, 185, 187], "python": 160, "pytorch": 215, "q": 17, "qr": 12, "quad": [16, 118, 119, 120, 121, 122, 138, 139, 140, 169, 170, 174, 175, 176, 179, 232], "quadrat": 120, "quotient": 170, "r": [17, 235, 236, 237, 238], "r_t": 152, "radam": 156, "rais": [0, 1, 2, 31, 142, 143, 178], "rand": [161, 167], "randint": [161, 167], "randn": [20, 27, 142, 161, 165, 167], "random": [1, 2, 3, 234, 235, 236, 237, 238, 241], "random_integ": 167, "random_tensor": 167, "randomcrop": [240, 241], "randomgrayscal": [240, 241], "randomhorizontalflip": [240, 241], "randomli": [1, 53, 54, 55, 56, 57, 85, 107, 108, 109, 110, 111, 234, 235, 236, 237, 238, 241], "randomnoisedataset": [0, 1, 2], "randomrot": [240, 241], "randomverticalflip": 240, "rang": [0, 1, 8, 36, 45, 47, 48, 49, 64, 68, 93, 99, 101, 145, 153, 155, 163, 191, 192, 194, 233, 237, 241], "rank": 16, "rate": [143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "rather": [35, 36, 149, 224], "ratio": 239, "ravel": 219, "raw": [46, 100, 119, 160], "re": [32, 159], "readabl": [33, 34, 35, 37, 142, 160], "readi": [3, 7, 29], "real": [16, 19, 99], "rearrang": 52, "receiv": [138, 139, 140, 221], "recent": 153, "recept": 29, "reciproc": [16, 189, 199, 207], "recognit": [26, 29, 104], "rectangular": 184, "rectif": 152, "rectifi": [42, 43, 96, 97, 152], "recurr": [34, 130], "recurs": 31, "red": 235, "reduc": [20, 27, 124, 125, 126, 127, 128, 129, 135, 136, 137, 138, 139, 140, 151, 154, 159, 160, 200, 201, 202, 209, 214, 235], "reduct": [19, 63, 64, 65, 67, 68, 118, 119, 120, 121, 122, 200, 202], "reevalu": 143, "refer": [4, 7, 31, 167, 181, 184, 216], "reflect": 157, "regardless": [16, 222], "region": [50, 73, 74, 75, 84, 133, 134, 221, 232, 241], "regist": [30, 31, 32, 36, 142], "register_buff": 30, "register_paramet": 31, "registr": [31, 142], "regress": [4, 67, 120, 121], "regular": [16, 20, 27, 57, 108, 109, 110, 111, 145, 146, 147, 150, 151, 152, 153, 155], "relat": [159, 184, 185], "relationship": 239, "relev": [84, 145, 153, 155], "reli": 159, "reliabl": 5, "reliant": [108, 109, 110, 111], "relu": [7, 20, 27, 29, 33, 34, 35, 37, 39, 41, 42, 59, 88, 89, 92, 93, 94, 96, 102, 103, 104, 105, 113, 114, 115, 116], "relu1": 37, "relu2": 37, "relu3": 37, "remain": [5, 30, 72, 107, 108, 109, 110, 111, 154], "rememb": 167, "remov": 225, "rep": 227, "repeat": [219, 220, 227], "repetit": [223, 227], "replac": [167, 235], "repres": [13, 15, 19, 23, 31, 32, 37, 60, 62, 69, 71, 72, 103, 104, 105, 114, 116, 119, 122, 130, 143, 144, 145, 151, 152, 153, 154, 155, 160, 169, 170, 176, 179, 181, 201, 212, 213, 214, 220, 232, 234, 236, 237, 238, 239], "represent": [136, 139, 143], "reproduc": [162, 163, 164, 165, 166, 167, 241], "requir": [2, 3, 4, 7, 30, 33, 37, 39, 40, 42, 43, 44, 45, 47, 60, 62, 84, 93, 115, 119, 122, 142, 157, 159, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 239], "requires_grad": [30, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 52, 60, 62, 84, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 142, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "rescal": [63, 64, 68, 118, 119, 122], "research": 142, "reset": [32, 165, 168], "reshap": [7, 62, 104, 105, 158, 160, 219, 222], "resili": 154, "resiz": [84, 230, 240, 241], "resourc": 159, "respect": [9, 10, 11, 13, 14, 15, 16, 17, 19, 23, 30, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 60, 62, 84, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 194, 198, 199, 200, 201, 202, 205, 207, 209, 212, 213, 214, 220, 221, 223, 227, 235], "respons": [33, 144], "restor": 159, "restructur": 224, "result": [9, 13, 14, 16, 29, 31, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 60, 62, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 100, 142, 143, 157, 159, 162, 163, 164, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 202, 203, 204, 205, 206, 207, 208, 210, 211, 212, 215, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 234, 235, 241], "resum": 144, "retain": [32, 168, 180, 187, 200, 201, 202, 209, 214, 231], "retent": 231, "retriev": [0, 2, 33, 35, 36], "return": [0, 1, 2, 3, 5, 7, 23, 30, 31, 33, 34, 35, 36, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 160, 230, 241], "reus": 231, "reusabl": [37, 142, 230], "revers": [7, 37, 213, 236, 238], "revert": 159, "rho": 146, "rho_": 152, "rho_t": 152, "right": [14, 15, 16, 18, 19, 40, 46, 95, 100, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 138, 139, 140, 232], "risk": 160, "rmsprop": 156, "rob": 29, "robust": [85, 107, 108, 109, 110, 111, 120, 142, 146, 234, 235, 237, 241], "role": [160, 167, 241], "root": [4, 5, 147, 153, 207], "rotat": [59, 83, 237, 241], "rotated_imag": 85, "rout": [138, 139, 140], "routin": 7, "row": [10, 11, 13, 18, 62, 184, 220, 229], "rprop": 156, "rule": [13, 14, 158, 169, 170, 174, 175, 176, 178, 179], "run": [7, 30, 69, 71, 124, 125, 126, 127, 128, 129, 146, 159, 165, 167], "running_mean": [30, 69, 71, 124, 125, 126, 127, 128, 129], "running_var": [69, 71, 124, 125, 126, 127, 128, 129], "runtim": [34, 37, 142], "s_": 154, "s_d": [137, 140], "s_h": [136, 137, 140], "s_w": [136, 137, 140], "same": [10, 11, 13, 14, 18, 46, 53, 54, 55, 56, 57, 69, 71, 72, 74, 75, 85, 103, 104, 105, 107, 108, 109, 110, 111, 115, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 154, 165, 167, 173, 183, 186, 188, 198, 200, 201, 202, 216, 218, 222, 224, 225, 226, 229, 233], "sampl": [0, 1, 2, 3, 5, 7, 23, 24, 25, 26, 73, 74, 75, 88, 89, 90, 91, 92, 93, 107, 108, 109, 110, 111, 114, 116, 119, 122, 130, 132, 133, 134, 164, 167, 232, 234, 236, 237, 238, 239], "satisfi": [9, 11, 18], "satur": [94, 241], "save": [2, 30, 32, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159], "scalabl": [3, 142], "scalar": [10, 15, 63, 64, 65, 67, 68, 160], "scale": [11, 16, 24, 25, 26, 29, 39, 44, 46, 69, 71, 72, 92, 93, 94, 96, 98, 99, 100, 101, 107, 108, 109, 110, 111, 119, 124, 125, 126, 127, 128, 129, 130, 145, 147, 148, 149, 160, 167, 214, 239], "scenario": [35, 36, 130, 149, 150, 231, 235], "schedul": 145, "scientif": 158, "score": [46, 119], "scratch": 7, "script": 167, "seamless": [0, 1, 3, 4, 142, 167], "seamlessli": [3, 4, 8, 32, 34, 37, 142, 160, 241], "second": [11, 34, 35, 60, 114, 148, 149, 150, 151, 152, 158, 169, 171, 172, 173, 174, 175, 176, 177, 178, 179, 218, 220, 238], "section": 173, "see": [7, 173], "seed": [161, 162, 163, 164, 166, 167, 241], "seen": 146, "select": [84, 138, 140, 209], "self": [0, 1, 2, 3, 7, 20, 23, 27, 30, 31, 32, 33, 34, 35, 36, 44, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 114, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 220, 230, 231], "selu": [41, 53, 59, 102, 107, 113], "selunetwork": 98, "sensit": [65, 120, 124, 125, 126], "sentiment": 4, "separ": [0, 48, 49, 50, 127, 128, 129], "sequenc": [14, 33, 35, 48, 180, 216, 218, 221, 223, 226, 227, 229, 230], "sequenti": [20, 23, 27, 33, 34, 38, 48, 115, 230, 241], "seri": [24, 25, 48, 103, 135, 138], "serial": [30, 31, 144], "serv": [3, 31, 33, 34, 35, 36, 37, 142, 154, 231], "set": [3, 4, 5, 32, 36, 48, 49, 50, 96, 97, 98, 103, 104, 105, 107, 110, 111, 114, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 143, 148, 149, 153, 162, 163, 164, 165, 166, 167, 168, 180, 182, 183, 187, 188, 194, 200, 202, 215, 231, 235, 241], "setup": [4, 7], "sever": [16, 103, 104, 105, 135, 136, 137, 138, 139, 140, 159, 230, 241], "sgd": [7, 145, 152, 156], "sgn": 15, "shape": [3, 4, 5, 7, 10, 11, 13, 14, 16, 20, 23, 27, 29, 30, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 60, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 158, 160, 162, 163, 164, 166, 167, 168, 171, 182, 183, 184, 185, 186, 187, 188, 194, 199, 200, 201, 202, 205, 207, 209, 213, 214, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 232, 233, 234, 235, 236, 237, 238, 239, 241], "shapelik": 163, "share": 29, "shift": [69, 71, 72, 124, 125, 126, 127, 128, 129, 130], "shorthand": 173, "should": [23, 30, 159, 162, 163, 164, 166, 182, 183, 191, 192, 212, 221, 230], "show": 157, "showcas": 7, "shown": 165, "shrink": 146, "shuffl": [1, 2, 3], "side": [18, 34, 37, 48, 49, 50, 76, 77, 78, 80, 81, 82, 103, 104, 105, 135, 136, 137, 138, 139, 140, 159], "sigma": [16, 88, 90, 92, 99, 124, 125, 126, 127, 128, 129, 130, 213], "sigma_c": 233, "sigma_i": 16, "sigmoid": [41, 59, 88, 89, 92, 93, 102, 113, 118], "sigmoidnetwork": 99, "sign": [14, 120, 154, 189], "signal": [103, 104, 105, 124, 127, 135, 136, 137, 138, 139, 140], "signific": 159, "significantli": 230, "sim": [107, 108, 109, 110, 111], "similar": [7, 88, 89, 173, 199, 215, 221], "similarli": [19, 212], "simpl": [3, 4, 7, 37, 48, 49, 50, 60, 62, 76, 77, 78, 80, 81, 82, 95, 97, 98, 99, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 171, 172, 177, 230], "simplebinaryclassificationmodel": 118, "simpleclassificationmodel": [119, 122], "simplegelumodel": 95, "simpleleakyrelumodel": 96, "simplemodel": [7, 116], "simpleregressionmodel": 121, "simplerelumodel": 97, "simpleselumodel": 98, "simplesigmoidmodel": 99, "simpletanhmodel": 101, "simpli": [157, 212, 213, 224], "simplic": 97, "simplifi": [4, 24, 37], "simul": 241, "simultan": 85, "sin": [189, 195], "sinc": [14, 17, 33, 34, 35, 36, 48, 49, 50, 93, 157, 159, 164, 220, 241], "sine": [192, 205, 206], "singl": [0, 4, 14, 17, 19, 46, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 119, 130, 136, 137, 138, 139, 140, 143, 160, 166, 182, 216, 225, 233, 235, 241], "singleton": 130, "singular": [10, 13, 14, 16, 18, 19], "sinh": [189, 196, 211], "size": [0, 1, 2, 3, 19, 23, 24, 25, 26, 27, 32, 34, 48, 49, 50, 52, 55, 56, 57, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 103, 104, 105, 114, 116, 118, 119, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 163, 166, 167, 168, 200, 201, 202, 209, 214, 216, 218, 225, 228, 229, 232, 234, 239, 241], "skip": 159, "slice": [60, 212], "slide": [52, 135, 137, 138, 140], "slightli": 241, "slope": [42, 94, 96], "slow": [3, 152], "small": [16, 24, 25, 26, 42, 63, 64, 69, 71, 72, 96, 98, 118, 119, 120, 124, 125, 126, 127, 128, 129, 130, 136, 139, 146, 147, 148, 149, 150, 151, 152, 153, 154], "smaller": [27, 29, 34, 37, 142, 147, 148, 175, 232, 234, 239], "smallest": 202, "smooth": [40, 94, 95, 145, 153, 241], "smoother": 145, "so": [33, 34, 35, 36, 85, 142, 152, 182, 183, 230], "softmax": [41, 59, 102, 113, 119], "softmaxmodel": 100, "solut": [16, 18], "solv": [8, 9, 12, 16, 17, 19], "solver": 8, "some": [39, 54, 85, 107, 108, 109, 124, 125, 126, 127, 128, 129, 147, 148, 149, 159, 160], "sometim": 158, "sophist": [34, 37], "sourc": 167, "space": [11, 17, 19, 48, 49, 50, 52, 73, 74, 75, 103, 104, 105, 132, 133, 134, 180, 241], "span": 4, "spars": [147, 148], "spatial": [20, 27, 104, 105, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 140, 220], "spatio": 105, "special": [0, 1, 7, 16, 30, 31, 32, 107, 167], "specif": [4, 7, 33, 34, 35, 36, 37, 93, 107, 108, 109, 110, 111, 127, 128, 129, 142, 143, 157, 167, 182, 200, 202, 223, 227], "specifi": [0, 1, 2, 3, 4, 5, 7, 15, 21, 23, 28, 34, 46, 52, 57, 63, 64, 65, 67, 68, 72, 73, 74, 75, 84, 85, 100, 103, 104, 105, 118, 119, 120, 121, 122, 130, 132, 133, 134, 136, 137, 138, 139, 140, 143, 160, 162, 163, 164, 165, 166, 178, 180, 181, 182, 183, 184, 185, 187, 188, 194, 200, 201, 202, 209, 213, 214, 215, 216, 218, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 239, 241], "speech": 127, "speed": [145, 146, 147, 148, 149, 150, 151, 152, 153, 155], "split": [4, 216, 218, 229], "springer": 29, "sqrt": [40, 88, 89, 92, 93, 95, 124, 125, 126, 127, 128, 129, 130, 146, 147, 148, 149, 151, 152, 153, 189, 191, 192], "squar": [1, 3, 9, 10, 11, 13, 14, 16, 17, 18, 19, 65, 67, 120, 121, 146, 147, 148, 153, 189, 207], "squaredataset": [0, 1, 2, 3], "squeez": 219, "stabil": [13, 16, 63, 64, 69, 71, 72, 118, 119, 124, 125, 126, 127, 128, 129, 130, 145, 146, 147, 148, 149, 150, 151, 152, 153, 233], "stabl": [88, 89, 92, 93, 107, 119, 145, 149, 150, 153, 154, 155], "stack": [37, 218, 219, 229, 241], "standard": [40, 42, 88, 90, 92, 94, 95, 96, 107, 154, 164, 167, 173, 230, 233, 241], "start": [1, 3, 145, 147, 154, 180, 232, 234], "state": [29, 30, 31, 32, 34, 37, 143, 157, 159, 165], "state_dict": [31, 32, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "static": 37, "statist": [16, 53, 69, 71], "std": [5, 90, 230, 233, 241], "step": [32, 52, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 180, 230, 231], "step_siz": 154, "still": 146, "stochast": [7, 145, 155], "stop": 180, "storag": [33, 35, 168], "store": [2, 4, 5, 30, 31, 32, 33, 34, 35, 36, 132, 133, 134, 159, 168, 232, 233, 234, 235, 236, 237, 238, 239], "str": [5, 31, 33, 35, 37, 63, 64, 65, 67, 68, 84, 143, 220], "straightforward": [155, 157, 169], "strategi": 144, "streamlin": [2, 3], "strict": [31, 143], "stride": [23, 24, 25, 26, 34, 37, 48, 49, 50, 52, 73, 74, 75, 76, 77, 78, 80, 81, 82, 103, 104, 105, 132, 133, 134, 135, 136, 137, 138, 139, 140], "stride_height": 52, "stride_width": 52, "string": [31, 33, 35, 37, 103, 104, 105, 143], "structur": [0, 7, 17, 30, 31, 34, 142, 143, 160, 184, 231], "style": [71, 127, 128, 220], "sub": [33, 34, 35, 36, 37, 142, 189, 232, 234], "sub_tensor": 168, "subclass": [1, 2, 3, 7, 31, 32, 33, 142, 143], "submodul": [31, 142], "subsequ": [34, 37, 93, 167], "subset": [108, 109], "subtract": [7, 179, 233], "suffer": 147, "suit": [88, 89, 92, 93], "suitabl": [24, 25, 26, 120, 147, 148, 162], "sum": [15, 33, 34, 35, 36, 37, 46, 63, 64, 65, 67, 68, 100, 118, 119, 120, 121, 122, 147, 169, 172, 177, 189, 212, 214, 216, 218, 220, 223, 227, 229], "sum_": [14, 46, 100, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 130, 135, 136, 137, 171, 172, 201, 209, 212, 214, 220, 223], "sum_i": [15, 177], "sum_j": 177, "sum_k": 173, "summar": [135, 136, 137], "summat": 14, "super": [7, 30, 31, 32, 33, 34, 35, 36, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 114, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "support": [1, 3, 4, 7, 8, 14, 15, 16, 17, 19, 33, 34, 35, 36, 37, 84, 85, 142, 144, 151, 167, 168, 169, 170, 173, 174, 175, 176, 178, 179, 181, 184, 194, 199, 201, 205, 207, 209, 212, 213, 214, 216, 220, 224, 231, 241], "suppos": 241, "sure": [142, 241], "svd": [12, 16], "symmetr": [9, 73, 74, 75, 92, 93, 101], "syntax": [1, 173], "system": [8, 9, 16, 17, 18, 29, 157, 220], "systemat": 241, "t": [16, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 168, 173, 215, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241], "t0": 145, "t1": 215, "t2": 215, "tabular": 4, "tailor": [4, 142, 241], "take": [17, 135, 136, 137, 138, 139, 140, 159, 230], "taken": 212, "tan": 189, "tangent": [47, 101, 193, 210, 211], "tanh": [34, 37, 40, 41, 59, 88, 89, 92, 93, 95, 102, 113, 189], "tanhnetwork": 101, "target": [5, 37, 63, 64, 65, 67, 68, 73, 74, 75, 84, 118, 119, 120, 121, 122, 132, 133, 134, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 232, 234, 239], "target_tensor": [118, 119, 120, 121, 122], "target_transform": 5, "task": [4, 7, 8, 20, 21, 24, 25, 26, 29, 45, 46, 49, 60, 63, 64, 67, 68, 99, 100, 103, 104, 105, 118, 119, 120, 121, 122, 127, 128, 129, 135, 137, 138, 140, 148, 158, 167, 184, 241], "techniqu": [9, 13, 27, 69, 107, 108, 109, 110, 111, 127, 128, 129, 144, 239, 241], "tempor": [103, 105, 137, 140], "temporarili": 159, "tensor": [2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 60, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 157, 159, 160, 162, 163, 164, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241], "term": [16, 60, 145, 149, 151, 152, 153, 155], "test": [4, 5], "test_siz": 5, "text": [4, 10, 14, 15, 33, 39, 42, 43, 44, 46, 48, 49, 50, 73, 74, 75, 76, 77, 78, 80, 81, 82, 88, 89, 92, 93, 94, 96, 97, 98, 100, 103, 104, 105, 107, 108, 109, 110, 111, 118, 119, 120, 121, 122, 135, 136, 137, 138, 139, 140, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 163, 169, 170, 172, 174, 175, 176, 178, 179, 190, 194, 200, 201, 202, 204, 209, 214, 216, 218, 221, 222, 223, 224, 225, 227, 228, 229, 232, 233, 234, 236, 237, 238], "th": [60, 118, 119, 121, 122, 127, 128, 129, 174, 175, 178], "than": [0, 1, 35, 36, 39, 42, 65, 94, 96, 120, 143, 149, 194, 212, 221, 226, 232, 234, 239], "thei": [0, 7, 19, 30, 34, 36, 37, 160, 220, 224, 232, 234, 241], "them": [3, 31, 36, 52, 145, 158, 216, 226, 230, 233, 241], "therebi": [107, 136, 137, 139, 140], "theta": [145, 146, 237], "theta_": [145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "theta_t": [152, 153], "thi": [0, 1, 2, 3, 5, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 23, 30, 32, 34, 35, 36, 37, 43, 45, 46, 47, 48, 49, 50, 52, 60, 62, 73, 84, 85, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 122, 124, 125, 126, 127, 128, 129, 130, 132, 135, 136, 137, 138, 139, 140, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 163, 164, 165, 167, 168, 172, 173, 177, 180, 182, 185, 186, 187, 188, 194, 198, 199, 200, 201, 202, 205, 207, 209, 212, 213, 214, 215, 221, 223, 224, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241], "thing": 159, "those": [7, 24, 25, 26, 36, 93], "three": [19, 26, 50, 75, 78, 82, 105, 111, 126, 129, 134, 137, 140], "threshold": [16, 65, 120], "through": [0, 3, 4, 7, 11, 16, 17, 19, 20, 23, 27, 33, 34, 37, 60, 62, 84, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 124, 125, 126, 127, 130, 135, 136, 137, 138, 139, 140, 164, 171, 172, 177, 220, 222, 224, 225, 228, 241], "throughout": [44, 231], "tile": 219, "time": [0, 3, 14, 24, 25, 26, 48, 96, 98, 103, 135, 136, 137, 138, 139, 140, 145, 146, 147, 148, 149, 153, 155, 159, 223, 227], "to_tensor": 5, "togeth": [37, 230, 241], "too": 154, "tool": [3, 7, 142, 158, 167, 230, 241], "top": [9, 10, 11, 17, 19, 60, 62, 84, 103, 104, 105, 114, 116, 232, 234], "torch": 215, "total": [0, 1, 2, 5, 24, 25, 26, 32, 168, 224], "totensor": [230, 241], "trace": [8, 189], "track": [7, 124, 125, 126, 127, 128, 129, 142, 157, 159, 162, 163, 164, 166, 180, 181, 182, 183, 184, 185, 186, 187, 188, 215, 231], "track_running_stat": [124, 125, 126, 127, 128, 129], "tradit": [146, 147, 150, 151, 152], "trail": 72, "train": [1, 2, 3, 4, 5, 7, 30, 31, 34, 36, 37, 46, 53, 54, 55, 56, 57, 69, 71, 85, 95, 96, 98, 99, 100, 101, 107, 108, 109, 110, 111, 124, 125, 126, 127, 128, 129, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 230, 233, 234, 235, 236, 237, 238, 241], "trainabl": [124, 125, 126, 127, 128, 129, 142], "transfer": [71, 127, 128], "transform": [2, 4, 5, 7, 11, 35, 60, 62, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 158, 220], "transform_pipelin": [230, 241], "transformed_imag": [230, 241], "transit": 120, "translat": [136, 139], "transpos": [7, 9, 189], "treat": [0, 30, 130, 142], "triangular": [9, 17], "true": [1, 2, 3, 4, 5, 19, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 52, 53, 54, 55, 56, 57, 60, 62, 69, 71, 84, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 142, 143, 148, 149, 153, 157, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231], "try": 0, "tune": 241, "tupl": [2, 3, 5, 11, 17, 19, 31, 32, 48, 49, 50, 52, 72, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 103, 104, 105, 115, 130, 133, 134, 135, 136, 137, 138, 139, 140, 148, 149, 150, 151, 152, 154, 160, 162, 163, 164, 166, 168, 182, 185, 187, 200, 201, 202, 209, 214, 216, 218, 220, 221, 224, 225, 226, 228, 229, 232, 233, 234, 239], "twice": 221, "two": [7, 10, 11, 13, 14, 16, 17, 19, 24, 25, 26, 48, 49, 50, 60, 77, 81, 104, 110, 114, 125, 128, 136, 139, 148, 149, 150, 151, 152, 154, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 212, 220], "type": [30, 31, 32, 60, 114, 168, 180, 181, 182, 183, 184, 185, 186, 187, 188, 215, 220, 231], "typeerror": [0, 1, 2, 31, 143], "typic": [8, 30, 46, 53, 85, 98, 100, 122, 124, 125, 126, 127, 128, 129, 144, 145, 153, 155, 159, 160, 228, 231, 233, 237, 239, 241], "u": [16, 19, 89, 91, 93], "u_": 150, "unchang": [30, 57, 94, 96, 97, 98, 107, 108, 109, 110, 111, 115, 222, 225], "undefin": 178, "under": 142, "underbrac": 14, "underdetermin": 16, "undergo": 241, "underli": [0, 7, 215, 218, 222, 224, 229], "understand": [7, 27, 29, 37, 241], "unexpect": [31, 34, 37, 167], "unfold": [51, 59], "unifi": 0, "uniform": [87, 89, 93, 103, 104, 105, 114, 116, 161, 162, 163, 167, 235, 236, 237, 238], "uniformli": [162, 166], "uniniti": [182, 183], "unintend": 159, "uniqu": [9, 16, 18, 33, 35], "unit": [20, 23, 27, 39, 40, 42, 43, 44, 88, 89, 92, 93, 94, 95, 96, 97, 98, 107], "unless": 168, "unlik": [30, 33, 34, 35, 36, 42, 94, 96, 107, 130, 146, 147, 149, 150, 151, 152, 154], "unnecessari": 159, "unpad": 221, "unseen": 241, "unsqueez": 219, "unstabl": 13, "up": [143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 237, 239], "updat": [4, 30, 36, 37, 107, 108, 109, 110, 111, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159], "upon": [29, 33, 34, 35, 36], "upper": [17, 91, 154, 166], "us": [0, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 16, 17, 19, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 60, 62, 67, 69, 71, 74, 75, 84, 85, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 157, 158, 159, 162, 163, 164, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 198, 200, 201, 202, 209, 214, 220, 221, 223, 225, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241], "usag": [3, 8, 34, 37, 143, 144, 232, 233, 234, 235, 236, 237, 238, 239], "user": [1, 2, 3, 4, 7, 33, 34, 35, 36, 142, 147, 230, 231, 241], "usual": 119, "util": [3, 7, 8, 35, 36, 142, 167], "v": [11, 16, 19, 148, 149, 151, 152, 181], "v_": [145, 148, 149, 151, 152, 153, 155], "v_stack": 229, "v_t": [152, 153], "val": 86, "valid": [103, 104, 105, 213], "valu": [7, 10, 14, 15, 16, 19, 31, 33, 35, 37, 39, 42, 45, 46, 47, 48, 49, 50, 52, 63, 64, 65, 67, 68, 69, 71, 72, 73, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 101, 107, 108, 109, 110, 111, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 135, 136, 137, 138, 139, 140, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 160, 162, 163, 164, 165, 166, 167, 180, 181, 182, 183, 184, 190, 191, 192, 194, 197, 198, 199, 200, 202, 204, 205, 207, 208, 216, 221, 222, 224, 228, 233, 235, 236, 238], "valuabl": 167, "valueerror": [1, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 143], "vanish": [94, 98, 124, 125, 126], "var": 189, "vari": [34, 36, 73, 84, 132, 237], "variabl": [31, 37, 73, 74, 75, 115, 132, 133, 134, 142, 157, 159, 162, 182, 234, 237], "varianc": [44, 53, 69, 71, 88, 89, 92, 93, 98, 107, 124, 125, 126, 127, 128, 129, 130, 148, 149, 150, 151, 152, 164, 214, 237, 241], "variant": [148, 149, 150], "variat": [127, 128, 129, 234, 241], "varieti": [4, 167, 241], "variou": [23, 29, 97, 144, 167, 200, 202, 221, 231], "vdot": 177, "vector": [11, 16, 17, 18, 19, 60, 62, 114, 116, 171, 172, 173, 177], "veloc": [145, 153, 155], "veri": [16, 146], "versa": 154, "versatil": [167, 220], "version": [19, 23, 24, 25, 153, 177, 235], "vertic": [226, 229, 238], "via": [3, 4], "vice": 154, "video": [50, 57, 105, 129, 137, 140], "view": [23, 34, 136, 137, 138, 139, 140, 224], "vision": [29, 49, 104, 114, 241], "visual": [27, 29], "vol": 29, "volumetr": [50, 57, 105, 129, 137, 140], "vstack": 219, "w": [49, 50, 52, 56, 57, 60, 62, 74, 75, 77, 78, 81, 82, 84, 85, 103, 104, 105, 114, 116, 125, 126, 128, 129, 133, 134, 137, 140, 232, 234], "w_": [49, 50, 74, 75, 77, 78, 81, 82, 84, 104, 105, 133, 134, 136, 137, 139, 140], "w_out": [49, 50, 77, 78, 81, 82], "wa": [107, 108, 109, 110, 111, 159], "wai": [1, 21, 28, 157, 159, 224], "want": [0, 7, 230, 232], "warn": [33, 35], "we": [3, 7, 158, 220], "weight": [29, 48, 49, 50, 60, 62, 63, 64, 68, 69, 71, 72, 84, 88, 89, 92, 93, 103, 104, 105, 107, 108, 109, 110, 111, 114, 116, 118, 119, 122, 124, 125, 126, 127, 128, 129, 130, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 162, 167], "weight1": 35, "weight2": 35, "weight_decai": [145, 146, 147, 148, 149, 150, 151, 152, 153, 155], "well": [88, 89], "were": 37, "what": 159, "when": [0, 1, 3, 7, 14, 31, 34, 36, 37, 39, 42, 48, 49, 50, 94, 115, 124, 125, 126, 127, 128, 129, 143, 146, 154, 157, 159, 160, 167, 178, 230, 232], "where": [3, 4, 5, 10, 11, 13, 14, 15, 16, 17, 19, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 55, 56, 57, 60, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 167, 169, 170, 174, 175, 176, 178, 179, 182, 183, 194, 198, 199, 200, 201, 202, 205, 207, 209, 212, 213, 214, 216, 221, 223, 227, 230, 231, 232, 233, 234, 235, 236, 237, 238], "whether": [1, 10, 31, 32, 88, 89, 153, 157, 162, 163, 164, 166, 168, 182, 183, 200, 201, 202, 209, 214], "which": [0, 7, 10, 11, 13, 14, 15, 16, 17, 19, 31, 33, 35, 37, 42, 46, 65, 85, 94, 95, 96, 100, 101, 107, 120, 122, 124, 125, 126, 127, 128, 129, 130, 148, 149, 151, 153, 157, 159, 160, 162, 163, 166, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 205, 206, 207, 209, 210, 211, 212, 214, 216, 223, 224, 226, 228, 231, 232, 234, 235, 236, 237, 238, 239, 241], "while": [7, 29, 34, 37, 53, 95, 97, 142, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 159, 224, 226, 235, 241], "who": [7, 33, 34, 35, 36], "whose": [19, 183, 186, 188, 190, 194, 198, 204], "wide": [4, 5, 8, 16, 43, 97, 103, 104, 119], "wider": [48, 49], "width": [49, 50, 52, 56, 57, 74, 75, 77, 78, 81, 82, 84, 85, 104, 105, 125, 126, 128, 129, 133, 134, 136, 137, 139, 140, 232, 234, 239], "window": [76, 77, 78, 80, 81, 82, 135, 136, 137, 138, 139, 140, 146, 200, 202], "wise": [39, 40, 42, 43, 44, 45, 46, 47, 100, 107, 108, 109, 110, 111, 142, 158, 169, 170, 173, 174, 175, 176, 178, 179, 190, 191, 192, 193, 194, 195, 196, 197, 199, 203, 204, 205, 206, 207, 208, 210, 211, 212, 218, 229], "within": [2, 30, 33, 34, 35, 36, 37, 47, 84, 85, 93, 95, 97, 98, 99, 101, 103, 104, 105, 107, 108, 109, 115, 118, 119, 120, 121, 122, 124, 125, 126, 127, 130, 135, 136, 137, 138, 139, 140, 144, 159, 180, 194, 237, 241], "without": [7, 33, 34, 35, 60, 62, 103, 104, 105, 114, 116, 157, 200, 222, 224, 228], "won": 159, "work": [1, 2, 3, 7, 9, 158, 160], "workflow": [167, 241], "workload": 7, "wrap": [3, 142, 159, 215], "wrapper": 142, "x": [7, 8, 18, 23, 30, 31, 33, 34, 35, 36, 37, 46, 60, 62, 85, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 162, 163, 164, 166, 182, 183, 198, 220, 232, 233, 234, 235, 236, 237, 238, 239], "x1": 114, "x2": 114, "x_": [119, 122, 220], "x_c": [119, 122], "x_i": 118, "x_k": 119, "xavier": [88, 89, 92, 93], "xavier_norm": 87, "xavier_uniform": 87, "xy": 220, "x\u2081": 114, "x\u2082": 114, "y": [33, 34, 35, 36, 37, 85, 94, 95, 96, 97, 98, 99, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 162, 163, 164, 166, 182, 183, 220, 235], "y_": [119, 122, 220], "y_c": [119, 122], "y_i": 118, "yann": [5, 29], "yet": [7, 158], "yield": [0, 1, 31, 159], "you": [0, 34, 36, 37, 142, 144, 157, 159, 167, 182, 183, 184, 188, 213, 215, 230, 232, 241], "your": [142, 144, 157, 159, 167, 241], "z": [183, 187, 188], "zeiler": [27, 29], "zero": [14, 16, 17, 39, 42, 48, 49, 50, 53, 54, 55, 56, 57, 76, 77, 78, 80, 81, 82, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 103, 104, 105, 107, 108, 109, 110, 111, 130, 135, 136, 137, 138, 139, 140, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 182, 183, 184, 188, 189, 194, 204, 221], "zero_grad": [32, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 168], "zeros_lik": [183, 189], "zfnet": [22, 29], "\u03c3\u1d62": 16}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "datasets.MNIST", "Image Datasets", "Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "models.alexnet", "ConvNets", "LeNet", "models.lenet_1", "models.lenet_4", "models.lenet_5", "ZFNet", "models.zfnet", "lucid.models", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.LeakyReLU", "nn.ReLU", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Tanh", "Activation Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "lucid.nn", "optim.Optimizer", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.types", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.meshgrid", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.unsqueeze", "lucid.vstack", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": 158, "1d": 158, "2": 158, "2d": 158, "3": 158, "It": [157, 159], "ab": 190, "activ": [41, 59, 102, 113], "ad": 158, "adadelta": 146, "adagrad": 147, "adam": 148, "adamax": 150, "adamw": 149, "adaptive_avg_pool1d": 73, "adaptive_avg_pool2d": 74, "adaptive_avg_pool3d": 75, "adaptiveavgpool1d": 132, "adaptiveavgpool2d": 133, "adaptiveavgpool3d": 134, "add": 169, "addit": 16, "admonit": 160, "advanc": [52, 241], "alexnet": [20, 21], "algebra": 12, "algorithm": [145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "alias": 160, "align": 158, "alpha_dropout": 53, "alphadropout": 107, "also": 144, "anoth": 215, "arang": 180, "arcco": 191, "architectur": [20, 24, 25, 26, 27], "arcsin": 192, "arctan": 193, "asgd": 145, "attribut": [5, 20, 23, 27, 30, 32, 33, 34, 35, 36, 37, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 168, 232, 233, 234, 235, 236, 237, 238, 239], "avg_pool1d": 76, "avg_pool2d": 77, "avg_pool3d": 78, "avgpool1d": 135, "avgpool2d": 136, "avgpool3d": 137, "axi": 158, "backpropag": 168, "backward": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 60, 62, 84, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "batch_norm": 69, "batchnorm1d": 124, "batchnorm2d": 125, "batchnorm3d": 126, "bceloss": 118, "behavior": [73, 74, 75, 132, 133, 134], "benefit": 159, "bilinear": [60, 114], "binari": 189, "binary_cross_entropi": 63, "broadcast": 158, "buffer": 30, "calcul": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 52, 60, 62, 73, 74, 75, 84, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239], "case": 160, "centercrop": 232, "choleski": 9, "class": [0, 1, 2, 5, 20, 23, 27, 30, 31, 32, 33, 34, 35, 36, 37, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 168, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239], "clip": 194, "co": 195, "combin": 0, "compon": [3, 7, 142], "compos": 230, "concatdataset": [0, 1], "concaten": 216, "conclus": [3, 7, 142, 157, 158, 159, 167, 231, 241], "constant": 86, "contain": 38, "conv1d": [48, 103], "conv2d": [49, 104], "conv3d": [50, 105], "convnet": [22, 29], "convolut": [51, 59, 106, 113], "core": 7, "cosh": 196, "creat": [32, 168, 215], "cross_entropi": 64, "crossentropyloss": 119, "cube": 197, "custom": [1, 2, 3, 31, 143, 144, 241], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 5, 6], "defin": [2, 31, 143, 144], "definit": 160, "det": 10, "detail": 16, "diag": 181, "dilat": 52, "div": 170, "dot": 171, "dropout": [54, 58, 59, 108, 112, 113], "dropout1d": [55, 109], "dropout2d": [56, 110], "dropout3d": [57, 111], "eig": 11, "elu": [39, 94], "empti": 182, "empty_lik": 183, "exampl": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 60, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241], "exp": 198, "ey": 184, "featur": [4, 7, 8, 144, 167, 241], "flatten": 217, "forward": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 52, 60, 62, 73, 74, 75, 84, 88, 89, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239], "from": 215, "function": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 24, 25, 26, 28, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 157, 159, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "futur": 4, "gelu": [40, 95], "gener": [161, 189], "get": 144, "grad_en": 157, "gradient": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 60, 62, 84, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 135, 136, 137, 138, 139, 140, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "guidelin": 160, "how": [157, 159], "hstack": 218, "huber_loss": 65, "huberloss": 120, "ident": 115, "imag": [6, 240], "index": 168, "init": [86, 88, 89, 90, 91, 92, 93], "initi": 87, "inner": 172, "input": 215, "inspect": [144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "instance_norm": 71, "instancenorm1d": 127, "instancenorm2d": 128, "instancenorm3d": 129, "integr": [3, 142, 167, 241], "interpol": 84, "inv": 13, "iter": 168, "kaiming_norm": 88, "kaiming_uniform": 89, "kei": [3, 4, 7, 142, 144, 167, 241], "layer": [102, 106, 112, 113, 117, 123, 131, 141], "layer_norm": 72, "layernorm": 130, "leaky_relu": 42, "leakyrelu": 96, "learn": 167, "lenet": 23, "lenet_1": 24, "lenet_4": 25, "lenet_5": 26, "limit": 7, "linalg": [8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "linear": [12, 59, 61, 62, 113, 116, 117], "list": 215, "load": 1, "log": 199, "loss": [59, 66, 113, 123], "lucid": [3, 4, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 29, 59, 142, 144, 157, 158, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 241], "matmul": 173, "matrix": 173, "matrix_pow": 14, "max": 200, "max_pool1d": 80, "max_pool2d": 81, "max_pool3d": 82, "maximum": 174, "maxpool1d": 138, "maxpool2d": 139, "maxpool3d": 140, "mean": 201, "meshgrid": 220, "method": [0, 1, 2, 5, 23, 31, 32, 143, 168], "min": 202, "minimum": 175, "mnist": 5, "model": [21, 24, 25, 26, 28, 29, 142], "modul": [31, 113], "moduledict": 33, "modulelist": 34, "more": 167, "mse_loss": 67, "mseloss": 121, "mul": 176, "multipl": [0, 173], "nadam": 151, "new": 158, "newaxi": 158, "nll_loss": 68, "nllloss": 122, "nn": [30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 142], "no_grad": 159, "norm": 15, "normal": [59, 70, 90, 113, 131, 233], "note": 7, "number": 161, "ones": 185, "ones_lik": 186, "oper": [12, 173, 189], "optim": [143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156], "organ": 142, "outer": 177, "overview": [3, 4, 7, 23, 24, 25, 26, 142, 144, 167, 241], "pad": 221, "paramet": [1, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 28, 30, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 60, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239], "parameterdict": 35, "parameterlist": 36, "perform": 168, "pinv": 16, "pipelin": [3, 241], "pitfal": [157, 159], "pool": [59, 79, 113, 141], "potenti": [157, 159], "power": 178, "properti": [32, 168], "qr": 17, "radam": 152, "rais": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "rand": 162, "randint": 163, "randn": 164, "random": [161, 162, 163, 164, 165, 166, 167], "randomcrop": 234, "randomgrayscal": 235, "randomhorizontalflip": 236, "randomrot": 237, "randomverticalflip": 238, "ravel": 222, "reciproc": 203, "refer": [5, 144], "relu": [43, 97], "repeat": 223, "reshap": 224, "resiz": 239, "return": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 24, 25, 26, 28, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 60, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 157, 159, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229], "rmsprop": 153, "rotat": 85, "rprop": 154, "rule": 173, "see": 144, "seed": 165, "selu": [44, 98], "sequenti": 37, "sgd": 155, "sigmoid": [45, 99], "sign": 204, "signatur": [0, 1, 2, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 60, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 103, 104, 105, 107, 108, 109, 110, 111, 114, 115, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 159, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239], "sin": 205, "sinh": 206, "slice": 168, "softmax": [46, 100], "solv": 18, "sqrt": 207, "squar": 208, "squeez": 225, "stack": 226, "start": 144, "state": [144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155], "sub": 179, "sum": 209, "svd": 19, "tan": 210, "tanh": [47, 101, 211], "tensor": [158, 168, 189, 215, 219], "through": 168, "tile": 227, "totensor": 231, "trace": 212, "track": 168, "transform": [230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241], "transpos": 213, "type": 160, "unari": 189, "unfold": 52, "uniform": [91, 166], "unsqueez": 228, "us": [1, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 160, 215], "usag": [4, 7, 23, 24, 25, 26, 30, 85, 157, 158, 159, 160, 220, 230, 231, 241], "util": [59, 83], "utilit": 219, "var": 214, "vstack": 229, "weight": 87, "why": 160, "work": [4, 157, 159], "xavier_norm": 92, "xavier_uniform": 93, "zero": 187, "zeros_lik": 188, "zfnet": [27, 28]}})