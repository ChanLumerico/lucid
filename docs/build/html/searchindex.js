Search.setIndex({"alltitles": {"@ Operator": [[188, "operator"]], "Activation Functions": [[51, null]], "Activation Layers": [[112, null], [127, null]], "Additional Details": [[16, "additional-details"]], "Admonitions and Usage Guidelines": [[175, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[62, "advanced-example-with-dilation"]], "Advanced Features": [[256, "advanced-features"]], "AlexNet": [[20, null]], "Algorithm": [[159, "algorithm"], [160, "algorithm"], [161, "algorithm"], [162, "algorithm"], [163, "algorithm"], [164, "algorithm"], [165, "algorithm"], [166, "algorithm"], [167, "algorithm"], [168, "algorithm"], [169, "algorithm"]], "Architecture": [[20, "architecture"], [28, "architecture"], [29, "architecture"], [30, "architecture"], [36, "architecture"]], "Attributes": [[5, "attributes"], [20, "attributes"], [27, "attributes"], [31, "attributes"], [36, "attributes"], [40, "attributes"], [42, "attributes"], [43, "attributes"], [44, "attributes"], [45, "attributes"], [46, "attributes"], [47, "attributes"], [104, "attributes"], [105, "attributes"], [106, "attributes"], [107, "attributes"], [108, "attributes"], [109, "attributes"], [110, "attributes"], [111, "attributes"], [113, "attributes"], [114, "attributes"], [115, "attributes"], [117, "attributes"], [118, "attributes"], [119, "attributes"], [120, "attributes"], [121, "attributes"], [123, "attributes"], [124, "attributes"], [125, "attributes"], [128, "attributes"], [129, "attributes"], [130, "attributes"], [132, "attributes"], [133, "attributes"], [134, "attributes"], [135, "attributes"], [136, "attributes"], [138, "attributes"], [139, "attributes"], [140, "attributes"], [141, "attributes"], [142, "attributes"], [143, "attributes"], [144, "attributes"], [146, "attributes"], [147, "attributes"], [148, "attributes"], [149, "attributes"], [150, "attributes"], [151, "attributes"], [152, "attributes"], [153, "attributes"], [154, "attributes"], [183, "attributes"], [247, "attributes"], [248, "attributes"], [249, "attributes"], [250, "attributes"], [251, "attributes"], [252, "attributes"], [253, "attributes"], [254, "attributes"]], "Backward Gradient Calculation": [[9, "backward-gradient-calculation"], [10, "backward-gradient-calculation"], [11, "backward-gradient-calculation"], [13, "backward-gradient-calculation"], [14, "backward-gradient-calculation"], [15, "backward-gradient-calculation"], [16, "backward-gradient-calculation"], [17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [43, "backward-gradient-calculation"], [44, "backward-gradient-calculation"], [45, "backward-gradient-calculation"], [46, "backward-gradient-calculation"], [47, "backward-gradient-calculation"], [49, "backward-gradient-calculation"], [50, "backward-gradient-calculation"], [52, "backward-gradient-calculation"], [53, "backward-gradient-calculation"], [54, "backward-gradient-calculation"], [55, "backward-gradient-calculation"], [56, "backward-gradient-calculation"], [57, "backward-gradient-calculation"], [70, "backward-gradient-calculation"], [72, "backward-gradient-calculation"], [94, "backward-gradient-calculation"], [103, "backward-gradient-calculation"], [104, "backward-gradient-calculation"], [105, "backward-gradient-calculation"], [106, "backward-gradient-calculation"], [107, "backward-gradient-calculation"], [108, "backward-gradient-calculation"], [109, "backward-gradient-calculation"], [110, "backward-gradient-calculation"], [111, "backward-gradient-calculation"], [113, "backward-gradient-calculation"], [114, "backward-gradient-calculation"], [115, "backward-gradient-calculation"], [117, "backward-gradient-calculation"], [118, "backward-gradient-calculation"], [119, "backward-gradient-calculation"], [120, "backward-gradient-calculation"], [121, "backward-gradient-calculation"], [128, "backward-gradient-calculation"], [129, "backward-gradient-calculation"], [130, "backward-gradient-calculation"], [132, "backward-gradient-calculation"], [133, "backward-gradient-calculation"], [134, "backward-gradient-calculation"], [135, "backward-gradient-calculation"], [136, "backward-gradient-calculation"], [138, "backward-gradient-calculation"], [139, "backward-gradient-calculation"], [140, "backward-gradient-calculation"], [141, "backward-gradient-calculation"], [142, "backward-gradient-calculation"], [143, "backward-gradient-calculation"], [144, "backward-gradient-calculation"], [149, "backward-gradient-calculation"], [150, "backward-gradient-calculation"], [151, "backward-gradient-calculation"], [152, "backward-gradient-calculation"], [153, "backward-gradient-calculation"], [154, "backward-gradient-calculation"], [184, "backward-gradient-calculation"], [185, "backward-gradient-calculation"], [186, "backward-gradient-calculation"], [187, "backward-gradient-calculation"], [188, "backward-gradient-calculation"], [189, "backward-gradient-calculation"], [190, "backward-gradient-calculation"], [191, "backward-gradient-calculation"], [192, "backward-gradient-calculation"], [193, "backward-gradient-calculation"], [194, "backward-gradient-calculation"], [205, "backward-gradient-calculation"], [206, "backward-gradient-calculation"], [207, "backward-gradient-calculation"], [208, "backward-gradient-calculation"], [209, "backward-gradient-calculation"], [210, "backward-gradient-calculation"], [211, "backward-gradient-calculation"], [212, "backward-gradient-calculation"], [213, "backward-gradient-calculation"], [214, "backward-gradient-calculation"], [215, "backward-gradient-calculation"], [216, "backward-gradient-calculation"], [217, "backward-gradient-calculation"], [218, "backward-gradient-calculation"], [219, "backward-gradient-calculation"], [220, "backward-gradient-calculation"], [221, "backward-gradient-calculation"], [222, "backward-gradient-calculation"], [223, "backward-gradient-calculation"], [224, "backward-gradient-calculation"], [225, "backward-gradient-calculation"], [226, "backward-gradient-calculation"], [227, "backward-gradient-calculation"], [228, "backward-gradient-calculation"], [229, "backward-gradient-calculation"], [231, "backward-gradient-calculation"], [233, "backward-gradient-calculation"], [235, "backward-gradient-calculation"], [236, "backward-gradient-calculation"], [237, "backward-gradient-calculation"], [238, "backward-gradient-calculation"], [239, "backward-gradient-calculation"], [240, "backward-gradient-calculation"], [241, "backward-gradient-calculation"], [242, "backward-gradient-calculation"], [243, "backward-gradient-calculation"], [244, "backward-gradient-calculation"]], "Behavior": [[83, "behavior"], [84, "behavior"], [85, "behavior"], [146, "behavior"], [147, "behavior"], [148, "behavior"]], "Benefits": [[173, "benefits"]], "Binary Functions": [[204, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [20, "class-signature"], [22, "class-signature"], [27, "class-signature"], [31, "class-signature"], [36, "class-signature"], [40, "class-signature"], [41, "class-signature"], [42, "class-signature"], [43, "class-signature"], [44, "class-signature"], [45, "class-signature"], [46, "class-signature"], [47, "class-signature"], [104, "class-signature"], [105, "class-signature"], [106, "class-signature"], [107, "class-signature"], [108, "class-signature"], [109, "class-signature"], [110, "class-signature"], [111, "class-signature"], [113, "class-signature"], [114, "class-signature"], [115, "class-signature"], [117, "class-signature"], [118, "class-signature"], [119, "class-signature"], [120, "class-signature"], [121, "class-signature"], [123, "class-signature"], [124, "class-signature"], [125, "class-signature"], [128, "class-signature"], [129, "class-signature"], [130, "class-signature"], [132, "class-signature"], [133, "class-signature"], [134, "class-signature"], [135, "class-signature"], [136, "class-signature"], [138, "class-signature"], [139, "class-signature"], [140, "class-signature"], [141, "class-signature"], [142, "class-signature"], [143, "class-signature"], [144, "class-signature"], [146, "class-signature"], [147, "class-signature"], [148, "class-signature"], [149, "class-signature"], [150, "class-signature"], [151, "class-signature"], [152, "class-signature"], [153, "class-signature"], [154, "class-signature"], [157, "class-signature"], [159, "class-signature"], [160, "class-signature"], [161, "class-signature"], [162, "class-signature"], [163, "class-signature"], [164, "class-signature"], [165, "class-signature"], [166, "class-signature"], [167, "class-signature"], [168, "class-signature"], [169, "class-signature"], [183, "class-signature"], [245, "class-signature"], [246, "class-signature"], [247, "class-signature"], [248, "class-signature"], [249, "class-signature"], [250, "class-signature"], [251, "class-signature"], [252, "class-signature"], [253, "class-signature"], [254, "class-signature"]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [7, "conclusion"], [156, "conclusion"], [171, "conclusion"], [172, "conclusion"], [173, "conclusion"], [182, "conclusion"], [246, "conclusion"], [256, "conclusion"]], "Containers": [[48, null]], "ConvNets": [[26, null], [38, "convnets"]], "Convolution Functions": [[61, null], [69, null]], "Convolution Layers": [[116, null], [127, null]], "Core Components": [[7, "core-components"]], "Create a Tensor from a list": [[230, null]], "Creating a Parameter": [[42, null]], "Creating a tensor with gradient tracking": [[183, null]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[256, "custom-pipelines"]], "Defining a Custom Optimizer": [[158, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[41, null]], "Defining a custom optimizer": [[157, null]], "Description": [[174, "description"]], "Dropout Functions": [[68, null], [69, null]], "Dropout Layers": [[122, null], [127, null]], "Example": [[3, null], [3, null], [3, null], [9, "example"], [10, "example"], [11, "example"], [13, "example"], [14, "example"], [15, "example"], [16, "example"], [17, "example"], [18, "example"], [19, "example"], [62, "example"], [156, null], [156, null], [156, null], [171, "example"], [173, "example"], [177, "example"], [178, "example"], [179, "example"], [180, "example"], [181, "example"], [182, null], [182, null], [182, null], [195, "example"], [196, "example"], [197, "example"], [198, "example"], [199, "example"], [200, "example"], [201, "example"], [202, "example"], [203, "example"], [205, "example"], [206, "example"], [207, "example"], [208, "example"], [209, "example"], [210, "example"], [211, "example"], [212, "example"], [214, "example"], [216, "example"], [218, "example"], [219, "example"], [220, "example"], [221, "example"], [222, "example"], [223, "example"], [224, "example"], [225, "example"], [226, "example"], [227, "example"], [228, "example"], [229, "example"], [231, "example"], [233, "example"], [237, "example"], [239, "example"], [240, "example"], [241, "example"], [243, "example"], [244, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[172, null]], "Example 2: Adding a new axis to a 2D tensor": [[172, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[172, null]], "Example Usage": [[7, "example-usage"], [23, "example-usage"], [24, "example-usage"], [25, "example-usage"], [27, "example-usage"], [28, "example-usage"], [29, "example-usage"], [30, "example-usage"], [95, "example-usage"], [245, "example-usage"], [246, "example-usage"], [256, "example-usage"]], "Example Use Cases": [[175, "example-use-cases"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [8, "examples"], [20, "examples"], [21, "examples"], [31, "examples"], [32, "examples"], [33, "examples"], [34, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [47, "examples"], [49, "examples"], [50, "examples"], [52, "examples"], [53, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [60, "examples"], [63, "examples"], [64, "examples"], [65, "examples"], [66, "examples"], [67, "examples"], [70, "examples"], [72, "examples"], [73, "examples"], [74, "examples"], [75, "examples"], [77, "examples"], [78, "examples"], [79, "examples"], [81, "examples"], [82, "examples"], [83, "examples"], [84, "examples"], [85, "examples"], [86, "examples"], [87, "examples"], [88, "examples"], [90, "examples"], [91, "examples"], [92, "examples"], [94, "examples"], [96, "examples"], [98, "examples"], [99, "examples"], [100, "examples"], [101, "examples"], [102, "examples"], [103, "examples"], [104, "examples"], [105, "examples"], [106, "examples"], [107, "examples"], [108, "examples"], [109, "examples"], [110, "examples"], [111, "examples"], [113, "examples"], [114, "examples"], [115, "examples"], [117, "examples"], [118, "examples"], [119, "examples"], [120, "examples"], [121, "examples"], [123, "examples"], [124, "examples"], [125, "examples"], [128, "examples"], [129, "examples"], [130, "examples"], [132, "examples"], [133, "examples"], [134, "examples"], [135, "examples"], [136, "examples"], [138, "examples"], [139, "examples"], [140, "examples"], [141, "examples"], [142, "examples"], [143, "examples"], [144, "examples"], [146, "examples"], [147, "examples"], [148, "examples"], [149, "examples"], [150, "examples"], [151, "examples"], [152, "examples"], [153, "examples"], [154, "examples"], [157, "examples"], [158, "examples"], [159, "examples"], [160, "examples"], [161, "examples"], [162, "examples"], [163, "examples"], [164, "examples"], [165, "examples"], [166, "examples"], [167, "examples"], [168, "examples"], [169, "examples"], [174, "examples"], [183, "examples"], [184, "examples"], [185, "examples"], [186, "examples"], [187, "examples"], [189, "examples"], [190, "examples"], [191, "examples"], [192, "examples"], [193, "examples"], [194, "examples"], [213, "examples"], [215, "examples"], [217, "examples"], [230, "examples"], [232, "examples"], [235, "examples"], [236, "examples"], [238, "examples"], [242, "examples"], [247, "examples"], [248, "examples"], [249, "examples"], [250, "examples"], [251, "examples"], [252, "examples"], [253, "examples"], [254, "examples"]], "Features": [[8, "features"]], "Forward Calculation": [[9, "forward-calculation"], [10, "forward-calculation"], [11, "forward-calculation"], [13, "forward-calculation"], [14, "forward-calculation"], [15, "forward-calculation"], [16, "forward-calculation"], [17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [43, "forward-calculation"], [44, "forward-calculation"], [45, "forward-calculation"], [46, "forward-calculation"], [47, "forward-calculation"], [49, "forward-calculation"], [50, "forward-calculation"], [52, "forward-calculation"], [53, "forward-calculation"], [54, "forward-calculation"], [55, "forward-calculation"], [56, "forward-calculation"], [57, "forward-calculation"], [62, "forward-calculation"], [70, "forward-calculation"], [72, "forward-calculation"], [83, "forward-calculation"], [84, "forward-calculation"], [85, "forward-calculation"], [94, "forward-calculation"], [98, "forward-calculation"], [99, "forward-calculation"], [102, "forward-calculation"], [103, "forward-calculation"], [104, "forward-calculation"], [105, "forward-calculation"], [106, "forward-calculation"], [107, "forward-calculation"], [108, "forward-calculation"], [109, "forward-calculation"], [110, "forward-calculation"], [111, "forward-calculation"], [113, "forward-calculation"], [114, "forward-calculation"], [115, "forward-calculation"], [117, "forward-calculation"], [118, "forward-calculation"], [119, "forward-calculation"], [120, "forward-calculation"], [121, "forward-calculation"], [123, "forward-calculation"], [124, "forward-calculation"], [125, "forward-calculation"], [128, "forward-calculation"], [129, "forward-calculation"], [130, "forward-calculation"], [132, "forward-calculation"], [133, "forward-calculation"], [134, "forward-calculation"], [135, "forward-calculation"], [136, "forward-calculation"], [138, "forward-calculation"], [139, "forward-calculation"], [140, "forward-calculation"], [141, "forward-calculation"], [142, "forward-calculation"], [143, "forward-calculation"], [144, "forward-calculation"], [146, "forward-calculation"], [147, "forward-calculation"], [148, "forward-calculation"], [149, "forward-calculation"], [150, "forward-calculation"], [151, "forward-calculation"], [152, "forward-calculation"], [153, "forward-calculation"], [154, "forward-calculation"], [184, "forward-calculation"], [185, "forward-calculation"], [186, "forward-calculation"], [187, "forward-calculation"], [188, "forward-calculation"], [189, "forward-calculation"], [190, "forward-calculation"], [191, "forward-calculation"], [192, "forward-calculation"], [193, "forward-calculation"], [194, "forward-calculation"], [205, "forward-calculation"], [206, "forward-calculation"], [207, "forward-calculation"], [208, "forward-calculation"], [209, "forward-calculation"], [210, "forward-calculation"], [211, "forward-calculation"], [212, "forward-calculation"], [213, "forward-calculation"], [214, "forward-calculation"], [215, "forward-calculation"], [216, "forward-calculation"], [217, "forward-calculation"], [218, "forward-calculation"], [219, "forward-calculation"], [220, "forward-calculation"], [221, "forward-calculation"], [222, "forward-calculation"], [223, "forward-calculation"], [224, "forward-calculation"], [225, "forward-calculation"], [226, "forward-calculation"], [227, "forward-calculation"], [228, "forward-calculation"], [229, "forward-calculation"], [231, "forward-calculation"], [233, "forward-calculation"], [235, "forward-calculation"], [236, "forward-calculation"], [237, "forward-calculation"], [238, "forward-calculation"], [239, "forward-calculation"], [240, "forward-calculation"], [241, "forward-calculation"], [242, "forward-calculation"], [243, "forward-calculation"], [244, "forward-calculation"], [247, "forward-calculation"], [248, "forward-calculation"], [249, "forward-calculation"], [250, "forward-calculation"], [251, "forward-calculation"], [252, "forward-calculation"], [253, "forward-calculation"], [254, "forward-calculation"]], "Function Signature": [[9, "function-signature"], [10, "function-signature"], [11, "function-signature"], [13, "function-signature"], [14, "function-signature"], [15, "function-signature"], [16, "function-signature"], [17, "function-signature"], [18, "function-signature"], [19, "function-signature"], [21, "function-signature"], [23, "function-signature"], [24, "function-signature"], [25, "function-signature"], [28, "function-signature"], [29, "function-signature"], [30, "function-signature"], [32, "function-signature"], [33, "function-signature"], [34, "function-signature"], [35, "function-signature"], [37, "function-signature"], [39, "function-signature"], [49, "function-signature"], [50, "function-signature"], [52, "function-signature"], [53, "function-signature"], [54, "function-signature"], [55, "function-signature"], [56, "function-signature"], [57, "function-signature"], [58, "function-signature"], [59, "function-signature"], [60, "function-signature"], [62, "function-signature"], [63, "function-signature"], [64, "function-signature"], [65, "function-signature"], [66, "function-signature"], [67, "function-signature"], [70, "function-signature"], [72, "function-signature"], [73, "function-signature"], [74, "function-signature"], [75, "function-signature"], [77, "function-signature"], [78, "function-signature"], [79, "function-signature"], [81, "function-signature"], [82, "function-signature"], [83, "function-signature"], [84, "function-signature"], [85, "function-signature"], [86, "function-signature"], [87, "function-signature"], [88, "function-signature"], [90, "function-signature"], [91, "function-signature"], [92, "function-signature"], [94, "function-signature"], [95, "function-signature"], [96, "function-signature"], [98, "function-signature"], [99, "function-signature"], [100, "function-signature"], [101, "function-signature"], [102, "function-signature"], [103, "function-signature"], [171, "function-signature"], [173, "function-signature"], [174, "function-signature"], [177, "function-signature"], [178, "function-signature"], [179, "function-signature"], [180, "function-signature"], [181, "function-signature"], [184, "function-signature"], [185, "function-signature"], [186, "function-signature"], [187, "function-signature"], [188, "function-signature"], [189, "function-signature"], [190, "function-signature"], [191, "function-signature"], [192, "function-signature"], [193, "function-signature"], [194, "function-signature"], [195, "function-signature"], [196, "function-signature"], [197, "function-signature"], [198, "function-signature"], [199, "function-signature"], [200, "function-signature"], [201, "function-signature"], [202, "function-signature"], [203, "function-signature"], [205, "function-signature"], [206, "function-signature"], [207, "function-signature"], [208, "function-signature"], [209, "function-signature"], [210, "function-signature"], [211, "function-signature"], [212, "function-signature"], [213, "function-signature"], [214, "function-signature"], [215, "function-signature"], [216, "function-signature"], [217, "function-signature"], [218, "function-signature"], [219, "function-signature"], [220, "function-signature"], [221, "function-signature"], [222, "function-signature"], [223, "function-signature"], [224, "function-signature"], [225, "function-signature"], [226, "function-signature"], [227, "function-signature"], [228, "function-signature"], [229, "function-signature"], [230, "function-signature"], [231, "function-signature"], [232, "function-signature"], [233, "function-signature"], [235, "function-signature"], [236, "function-signature"], [237, "function-signature"], [238, "function-signature"], [239, "function-signature"], [240, "function-signature"], [241, "function-signature"], [242, "function-signature"], [243, "function-signature"], [244, "function-signature"]], "Fused Layers": [[126, null], [127, null]], "Future Work": [[4, "future-work"]], "Getting Started": [[158, "getting-started"]], "How It Works": [[171, "how-it-works"], [173, "how-it-works"]], "Image Datasets": [[6, null]], "Image Transformations": [[255, null]], "Inception": [[22, null]], "Indexing and slicing": [[183, null]], "Inspecting Optimizer State": [[158, null], [159, null], [160, null], [161, null], [162, null], [163, null], [164, null], [165, null], [166, null], [167, null], [168, null], [169, null]], "Integration with lucid": [[3, "integration-with-lucid"], [156, "integration-with-lucid"], [182, "integration-with-lucid"], [256, "integration-with-lucid"]], "Iterating through a tensor": [[183, null]], "Key Components": [[3, "key-components"], [156, "key-components"]], "Key Features": [[4, "key-features"], [7, "key-features"], [158, "key-features"], [182, "key-features"]], "Key Transformations": [[256, "key-transformations"]], "LeNet": [[27, null]], "Learn More": [[182, null]], "Limitations": [[7, "limitations"]], "Linear Algebra Operations": [[12, null]], "Linear Functions": [[69, null], [71, null]], "Linear Layers": [[127, null], [131, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[69, null], [76, null]], "Loss Layers": [[127, null], [137, null]], "Lucid": [[7, null]], "Matrix Multiplication Rules": [[188, "matrix-multiplication-rules"]], "Metadata Captured": [[174, "metadata-captured"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [27, "methods"], [31, "methods"], [41, "methods"], [42, "methods"], [157, "methods"], [183, "methods"]], "Modules": [[127, null]], "Normalization Functions": [[69, null], [80, null]], "Normalization Layers": [[127, null], [145, null]], "Notes": [[7, "notes"]], "Optimizers": [[170, null]], "Organizing Models": [[156, "organizing-models"]], "Overview": [[3, "overview"], [4, "overview"], [7, "overview"], [22, "overview"], [23, "overview"], [24, "overview"], [25, "overview"], [27, "overview"], [28, "overview"], [29, "overview"], [30, "overview"], [156, "overview"], [158, "overview"], [182, "overview"], [256, "overview"]], "Parameters": [[1, "parameters"], [5, "parameters"], [9, "parameters"], [10, "parameters"], [11, "parameters"], [13, "parameters"], [14, "parameters"], [15, "parameters"], [16, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [20, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [27, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [39, "parameters"], [40, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [49, "parameters"], [50, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [70, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [75, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [87, "parameters"], [88, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [104, "parameters"], [105, "parameters"], [106, "parameters"], [107, "parameters"], [108, "parameters"], [109, "parameters"], [110, "parameters"], [111, "parameters"], [113, "parameters"], [114, "parameters"], [115, "parameters"], [117, "parameters"], [118, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [123, "parameters"], [124, "parameters"], [125, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [154, "parameters"], [159, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [163, "parameters"], [164, "parameters"], [165, "parameters"], [166, "parameters"], [167, "parameters"], [168, "parameters"], [169, "parameters"], [173, "parameters"], [174, "parameters"], [177, "parameters"], [178, "parameters"], [179, "parameters"], [180, "parameters"], [181, "parameters"], [183, "parameters"], [184, "parameters"], [185, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [189, "parameters"], [190, "parameters"], [191, "parameters"], [192, "parameters"], [193, "parameters"], [194, "parameters"], [195, "parameters"], [196, "parameters"], [197, "parameters"], [198, "parameters"], [199, "parameters"], [200, "parameters"], [201, "parameters"], [202, "parameters"], [203, "parameters"], [205, "parameters"], [206, "parameters"], [207, "parameters"], [208, "parameters"], [209, "parameters"], [210, "parameters"], [211, "parameters"], [212, "parameters"], [213, "parameters"], [214, "parameters"], [215, "parameters"], [216, "parameters"], [217, "parameters"], [218, "parameters"], [219, "parameters"], [220, "parameters"], [221, "parameters"], [222, "parameters"], [223, "parameters"], [224, "parameters"], [225, "parameters"], [226, "parameters"], [227, "parameters"], [228, "parameters"], [229, "parameters"], [230, "parameters"], [231, "parameters"], [232, "parameters"], [233, "parameters"], [235, "parameters"], [236, "parameters"], [237, "parameters"], [238, "parameters"], [239, "parameters"], [240, "parameters"], [241, "parameters"], [242, "parameters"], [243, "parameters"], [244, "parameters"], [245, "parameters"], [246, "parameters"], [247, "parameters"], [248, "parameters"], [249, "parameters"], [250, "parameters"], [251, "parameters"], [252, "parameters"], [253, "parameters"], [254, "parameters"]], "Performing backpropagation": [[183, null]], "Pooling Functions": [[69, null], [89, null]], "Pooling Layers": [[127, null], [155, null]], "Potential Pitfalls": [[171, "potential-pitfalls"], [173, "potential-pitfalls"]], "Properties": [[42, "properties"], [183, "properties"]], "Raises": [[9, "raises"], [10, "raises"], [11, "raises"], [13, "raises"], [14, "raises"], [15, "raises"], [16, "raises"], [17, "raises"], [18, "raises"], [19, "raises"]], "Random Number Generations": [[176, null]], "References": [[5, "references"], [158, "references"]], "Returns": [[9, "returns"], [10, "returns"], [11, "returns"], [13, "returns"], [14, "returns"], [15, "returns"], [16, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [21, "returns"], [23, "returns"], [24, "returns"], [25, "returns"], [28, "returns"], [29, "returns"], [30, "returns"], [32, "returns"], [33, "returns"], [34, "returns"], [35, "returns"], [37, "returns"], [39, "returns"], [49, "returns"], [50, "returns"], [52, "returns"], [53, "returns"], [54, "returns"], [55, "returns"], [56, "returns"], [57, "returns"], [58, "returns"], [59, "returns"], [60, "returns"], [62, "returns"], [63, "returns"], [64, "returns"], [65, "returns"], [66, "returns"], [67, "returns"], [70, "returns"], [72, "returns"], [73, "returns"], [74, "returns"], [75, "returns"], [77, "returns"], [78, "returns"], [79, "returns"], [81, "returns"], [82, "returns"], [83, "returns"], [84, "returns"], [85, "returns"], [86, "returns"], [87, "returns"], [88, "returns"], [90, "returns"], [91, "returns"], [92, "returns"], [94, "returns"], [95, "returns"], [96, "returns"], [98, "returns"], [99, "returns"], [100, "returns"], [101, "returns"], [102, "returns"], [103, "returns"], [171, "returns"], [173, "returns"], [177, "returns"], [178, "returns"], [179, "returns"], [180, "returns"], [181, "returns"], [184, "returns"], [185, "returns"], [186, "returns"], [187, "returns"], [188, "returns"], [189, "returns"], [190, "returns"], [191, "returns"], [192, "returns"], [193, "returns"], [194, "returns"], [195, "returns"], [196, "returns"], [197, "returns"], [198, "returns"], [199, "returns"], [200, "returns"], [201, "returns"], [202, "returns"], [203, "returns"], [205, "returns"], [206, "returns"], [207, "returns"], [208, "returns"], [209, "returns"], [210, "returns"], [211, "returns"], [212, "returns"], [213, "returns"], [214, "returns"], [215, "returns"], [216, "returns"], [217, "returns"], [218, "returns"], [219, "returns"], [220, "returns"], [221, "returns"], [222, "returns"], [223, "returns"], [224, "returns"], [225, "returns"], [226, "returns"], [227, "returns"], [228, "returns"], [229, "returns"], [230, "returns"], [231, "returns"], [232, "returns"], [233, "returns"], [235, "returns"], [236, "returns"], [237, "returns"], [238, "returns"], [239, "returns"], [240, "returns"], [241, "returns"], [242, "returns"], [243, "returns"], [244, "returns"]], "See Also": [[158, "see-also"]], "Summary Table": [[39, "summary-table"]], "Tensor Generating Functions": [[204, null]], "Tensor Operations": [[204, null]], "Tensor Utilites": [[234, null]], "Type Definitions": [[175, "type-definitions"]], "Unary Functions": [[204, null]], "Usage": [[4, "usage"], [40, "usage"], [95, "usage"], [171, "usage"], [172, "usage"], [173, "usage"], [235, "usage"], [245, "usage"], [246, "usage"], [256, "usage"]], "Use another Tensor as input": [[230, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using the ASGD Optimizer": [[159, null]], "Using the Adadelta Optimizer": [[160, null]], "Using the Adagrad Optimizer": [[161, null]], "Using the Adam Optimizer": [[162, null]], "Using the AdamW Optimizer": [[163, null]], "Using the Adamax Optimizer": [[164, null]], "Using the NAdam Optimizer": [[165, null]], "Using the RAdam Optimizer": [[166, null]], "Using the RMSprop Optimizer": [[167, null]], "Using the Rprop Optimizer": [[168, null]], "Using the SGD Optimizer": [[169, null]], "Utility Functions": [[69, null], [93, null]], "VGGNet": [[31, null]], "Weight Initializations": [[97, null]], "Why Use Type Aliases?": [[175, null]], "ZFNet": [[36, null]], "activation Functions": [[69, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "datasets.MNIST": [[5, null]], "lucid.Tensor": [[183, null]], "lucid.abs": [[205, null]], "lucid.add": [[184, null]], "lucid.arange": [[195, null]], "lucid.arccos": [[206, null]], "lucid.arcsin": [[207, null]], "lucid.arctan": [[208, null]], "lucid.clip": [[209, null]], "lucid.concatenate": [[231, null]], "lucid.cos": [[210, null]], "lucid.cosh": [[211, null]], "lucid.cube": [[212, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[196, null]], "lucid.div": [[185, null]], "lucid.dot": [[186, null]], "lucid.empty": [[197, null]], "lucid.empty_like": [[198, null]], "lucid.exp": [[213, null]], "lucid.eye": [[199, null]], "lucid.flatten": [[232, null]], "lucid.grad_enabled": [[171, null]], "lucid.hstack": [[233, null]], "lucid.inner": [[187, null]], "lucid.linalg": [[8, null]], "lucid.linalg.cholesky": [[9, null]], "lucid.linalg.det": [[10, null]], "lucid.linalg.eig": [[11, null]], "lucid.linalg.inv": [[13, null]], "lucid.linalg.matrix_power": [[14, null]], "lucid.linalg.norm": [[15, null]], "lucid.linalg.pinv": [[16, null]], "lucid.linalg.qr": [[17, null]], "lucid.linalg.solve": [[18, null]], "lucid.linalg.svd": [[19, null]], "lucid.log": [[214, null]], "lucid.matmul": [[188, null]], "lucid.max": [[215, null]], "lucid.maximum": [[189, null]], "lucid.mean": [[216, null]], "lucid.meshgrid": [[235, null]], "lucid.min": [[217, null]], "lucid.minimum": [[190, null]], "lucid.models": [[38, null]], "lucid.mul": [[191, null]], "lucid.newaxis": [[172, null]], "lucid.nn": [[156, null]], "lucid.nn.functional": [[69, null]], "lucid.no_grad": [[173, null]], "lucid.ones": [[200, null]], "lucid.ones_like": [[201, null]], "lucid.optim": [[158, null]], "lucid.outer": [[192, null]], "lucid.pad": [[236, null]], "lucid.power": [[193, null]], "lucid.random": [[182, null]], "lucid.random.rand": [[177, null]], "lucid.random.randint": [[178, null]], "lucid.random.randn": [[179, null]], "lucid.random.seed": [[180, null]], "lucid.random.uniform": [[181, null]], "lucid.ravel": [[237, null]], "lucid.reciprocal": [[218, null]], "lucid.register_model": [[174, null]], "lucid.repeat": [[238, null]], "lucid.reshape": [[239, null]], "lucid.sign": [[219, null]], "lucid.sin": [[220, null]], "lucid.sinh": [[221, null]], "lucid.sqrt": [[222, null]], "lucid.square": [[223, null]], "lucid.squeeze": [[240, null]], "lucid.stack": [[241, null]], "lucid.sub": [[194, null]], "lucid.sum": [[224, null]], "lucid.tan": [[225, null]], "lucid.tanh": [[226, null]], "lucid.tensor": [[230, null]], "lucid.tile": [[242, null]], "lucid.trace": [[227, null]], "lucid.transforms": [[256, null]], "lucid.transpose": [[228, null]], "lucid.types": [[175, null]], "lucid.unsqueeze": [[243, null]], "lucid.var": [[229, null]], "lucid.vstack": [[244, null]], "lucid.zeros": [[202, null]], "lucid.zeros_like": [[203, null]], "models.alexnet": [[21, null]], "models.inception_v1": [[23, null]], "models.inception_v3": [[24, null]], "models.inception_v4": [[25, null]], "models.lenet_1": [[28, null]], "models.lenet_4": [[29, null]], "models.lenet_5": [[30, null]], "models.summarize": [[39, null]], "models.vggnet_11": [[32, null]], "models.vggnet_13": [[33, null]], "models.vggnet_16": [[34, null]], "models.vggnet_19": [[35, null]], "models.zfnet": [[37, null]], "nn.AdaptiveAvgPool1d": [[146, null]], "nn.AdaptiveAvgPool2d": [[147, null]], "nn.AdaptiveAvgPool3d": [[148, null]], "nn.AlphaDropout": [[117, null]], "nn.AvgPool1d": [[149, null]], "nn.AvgPool2d": [[150, null]], "nn.AvgPool3d": [[151, null]], "nn.BCELoss": [[132, null]], "nn.BatchNorm1d": [[138, null]], "nn.BatchNorm2d": [[139, null]], "nn.BatchNorm3d": [[140, null]], "nn.Bilinear": [[128, null]], "nn.Buffer": [[40, null]], "nn.Conv1d": [[113, null]], "nn.Conv2d": [[114, null]], "nn.Conv3d": [[115, null]], "nn.ConvBNReLU1d": [[123, null]], "nn.ConvBNReLU2d": [[124, null]], "nn.ConvBNReLU3d": [[125, null]], "nn.CrossEntropyLoss": [[133, null]], "nn.Dropout": [[118, null]], "nn.Dropout1d": [[119, null]], "nn.Dropout2d": [[120, null]], "nn.Dropout3d": [[121, null]], "nn.ELU": [[104, null]], "nn.GELU": [[105, null]], "nn.HuberLoss": [[134, null]], "nn.Identity": [[129, null]], "nn.InstanceNorm1d": [[141, null]], "nn.InstanceNorm2d": [[142, null]], "nn.InstanceNorm3d": [[143, null]], "nn.LayerNorm": [[144, null]], "nn.LeakyReLU": [[106, null]], "nn.Linear": [[130, null]], "nn.MSELoss": [[135, null]], "nn.MaxPool1d": [[152, null]], "nn.MaxPool2d": [[153, null]], "nn.MaxPool3d": [[154, null]], "nn.Module": [[41, null]], "nn.ModuleDict": [[43, null]], "nn.ModuleList": [[44, null]], "nn.NLLLoss": [[136, null]], "nn.Parameter": [[42, null]], "nn.ParameterDict": [[45, null]], "nn.ParameterList": [[46, null]], "nn.ReLU": [[107, null]], "nn.SELU": [[108, null]], "nn.Sequential": [[47, null]], "nn.Sigmoid": [[109, null]], "nn.Softmax": [[110, null]], "nn.Tanh": [[111, null]], "nn.functional.adaptive_avg_pool1d": [[83, null]], "nn.functional.adaptive_avg_pool2d": [[84, null]], "nn.functional.adaptive_avg_pool3d": [[85, null]], "nn.functional.alpha_dropout": [[63, null]], "nn.functional.avg_pool1d": [[86, null]], "nn.functional.avg_pool2d": [[87, null]], "nn.functional.avg_pool3d": [[88, null]], "nn.functional.batch_norm": [[79, null]], "nn.functional.bilinear": [[70, null]], "nn.functional.binary_cross_entropy": [[73, null]], "nn.functional.conv1d": [[58, null]], "nn.functional.conv2d": [[59, null]], "nn.functional.conv3d": [[60, null]], "nn.functional.cross_entropy": [[74, null]], "nn.functional.dropout": [[64, null]], "nn.functional.dropout1d": [[65, null]], "nn.functional.dropout2d": [[66, null]], "nn.functional.dropout3d": [[67, null]], "nn.functional.elu": [[49, null]], "nn.functional.gelu": [[50, null]], "nn.functional.huber_loss": [[75, null]], "nn.functional.instance_norm": [[81, null]], "nn.functional.interpolate": [[94, null]], "nn.functional.layer_norm": [[82, null]], "nn.functional.leaky_relu": [[52, null]], "nn.functional.linear": [[72, null]], "nn.functional.max_pool1d": [[90, null]], "nn.functional.max_pool2d": [[91, null]], "nn.functional.max_pool3d": [[92, null]], "nn.functional.mse_loss": [[77, null]], "nn.functional.nll_loss": [[78, null]], "nn.functional.relu": [[53, null]], "nn.functional.rotate": [[95, null]], "nn.functional.selu": [[54, null]], "nn.functional.sigmoid": [[55, null]], "nn.functional.softmax": [[56, null]], "nn.functional.tanh": [[57, null]], "nn.functional.unfold": [[62, null]], "nn.init.constant": [[96, null]], "nn.init.kaiming_normal": [[98, null]], "nn.init.kaiming_uniform": [[99, null]], "nn.init.normal": [[100, null]], "nn.init.uniform": [[101, null]], "nn.init.xavier_normal": [[102, null]], "nn.init.xavier_uniform": [[103, null]], "optim.ASGD": [[159, null]], "optim.Adadelta": [[160, null]], "optim.Adagrad": [[161, null]], "optim.Adam": [[162, null]], "optim.AdamW": [[163, null]], "optim.Adamax": [[164, null]], "optim.NAdam": [[165, null]], "optim.Optimizer": [[157, null]], "optim.RAdam": [[166, null]], "optim.RMSprop": [[167, null]], "optim.Rprop": [[168, null]], "optim.SGD": [[169, null]], "transforms.CenterCrop": [[247, null]], "transforms.Compose": [[245, null]], "transforms.Normalize": [[248, null]], "transforms.RandomCrop": [[249, null]], "transforms.RandomGrayscale": [[250, null]], "transforms.RandomHorizontalFlip": [[251, null]], "transforms.RandomRotation": [[252, null]], "transforms.RandomVerticalFlip": [[253, null]], "transforms.Resize": [[254, null]], "transforms.ToTensor": [[246, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/MNIST", "datasets/image/index", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/conv/alex/AlexNet", "models/conv/alex/alexnet", "models/conv/inception/Inception", "models/conv/inception/inception_v1", "models/conv/inception/inception_v3", "models/conv/inception/inception_v4", "models/conv/index", "models/conv/lenet/LeNet", "models/conv/lenet/lenet_1", "models/conv/lenet/lenet_4", "models/conv/lenet/lenet_5", "models/conv/vgg/VGGNet", "models/conv/vgg/vggnet_11", "models/conv/vgg/vggnet_13", "models/conv/vgg/vggnet_16", "models/conv/vgg/vggnet_19", "models/conv/zfnet/ZFNet", "models/conv/zfnet/zfnet", "models/models", "models/summarize", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/fused/ConvBNReLU1d", "nn/modules/fused/ConvBNReLU2d", "nn/modules/fused/ConvBNReLU3d", "nn/modules/fused/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/nn", "optim/Optimizer", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "others/types", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/meshgrid", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/conv/alex/AlexNet.rst", "models/conv/alex/alexnet.rst", "models/conv/inception/Inception.rst", "models/conv/inception/inception_v1.rst", "models/conv/inception/inception_v3.rst", "models/conv/inception/inception_v4.rst", "models/conv/index.rst", "models/conv/lenet/LeNet.rst", "models/conv/lenet/lenet_1.rst", "models/conv/lenet/lenet_4.rst", "models/conv/lenet/lenet_5.rst", "models/conv/vgg/VGGNet.rst", "models/conv/vgg/vggnet_11.rst", "models/conv/vgg/vggnet_13.rst", "models/conv/vgg/vggnet_16.rst", "models/conv/vgg/vggnet_19.rst", "models/conv/zfnet/ZFNet.rst", "models/conv/zfnet/zfnet.rst", "models/models.rst", "models/summarize.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/fused/ConvBNReLU1d.rst", "nn/modules/fused/ConvBNReLU2d.rst", "nn/modules/fused/ConvBNReLU3d.rst", "nn/modules/fused/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "others/types.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"abs() (in module lucid)": [[205, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[160, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[161, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[162, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[164, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[163, "lucid.optim.AdamW", false]], "adaptive_avg_pool1d() (in module lucid.nn.functional)": [[83, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[84, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[85, "lucid.nn.functional.adaptive_avg_pool3d", false]], "adaptiveavgpool1d (class in lucid.nn)": [[146, "lucid.nn.AdaptiveAvgPool1d", false]], "adaptiveavgpool2d (class in lucid.nn)": [[147, "lucid.nn.AdaptiveAvgPool2d", false]], "adaptiveavgpool3d (class in lucid.nn)": [[148, "lucid.nn.AdaptiveAvgPool3d", false]], "add() (in module lucid)": [[184, "lucid.add", false]], "alexnet (class in lucid.models)": [[20, "lucid.models.AlexNet", false]], "alexnet() (in module lucid.models)": [[21, "lucid.models.alexnet", false]], "alpha_dropout() (in module lucid.nn.functional)": [[63, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[117, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[195, "lucid.arange", false]], "arccos() (in module lucid)": [[206, "lucid.arccos", false]], "arcsin() (in module lucid)": [[207, "lucid.arcsin", false]], "arctan() (in module lucid)": [[208, "lucid.arctan", false]], "asgd (class in lucid.optim)": [[159, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[86, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[87, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[88, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[149, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[150, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[151, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[79, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[138, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[139, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[140, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[132, "lucid.nn.BCELoss", false]], "bilinear (class in lucid.nn)": [[128, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[70, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[73, "lucid.nn.functional.binary_cross_entropy", false]], "buffer (class in lucid.nn)": [[40, "lucid.nn.Buffer", false]], "centercrop (class in lucid.transforms)": [[247, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[9, "lucid.linalg.cholesky", false]], "clip() (in module lucid)": [[209, "lucid.clip", false]], "compose (class in lucid.transforms)": [[245, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[231, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[96, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[113, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[58, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[114, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[59, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[115, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[60, "lucid.nn.functional.conv3d", false]], "convbnrelu1d (class in lucid.nn)": [[123, "lucid.nn.ConvBNReLU1d", false]], "convbnrelu2d (class in lucid.nn)": [[124, "lucid.nn.ConvBNReLU2d", false]], "convbnrelu3d (class in lucid.nn)": [[125, "lucid.nn.ConvBNReLU3d", false]], "cos() (in module lucid)": [[210, "lucid.cos", false]], "cosh() (in module lucid)": [[211, "lucid.cosh", false]], "cross_entropy() (in module lucid.nn.functional)": [[74, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[133, "lucid.nn.CrossEntropyLoss", false]], "cube() (in module lucid)": [[212, "lucid.cube", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "det() (in module lucid.linalg)": [[10, "lucid.linalg.det", false]], "diag() (in module lucid)": [[196, "lucid.diag", false]], "div() (in module lucid)": [[185, "lucid.div", false]], "dot() (in module lucid)": [[186, "lucid.dot", false]], "dropout (class in lucid.nn)": [[118, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[64, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[119, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[65, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[120, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[66, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[121, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[67, "lucid.nn.functional.dropout3d", false]], "eig() (in module lucid.linalg)": [[11, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[104, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[49, "lucid.nn.functional.elu", false]], "empty() (in module lucid)": [[197, "lucid.empty", false]], "empty_like() (in module lucid)": [[198, "lucid.empty_like", false]], "exp() (in module lucid)": [[213, "lucid.exp", false]], "eye() (in module lucid)": [[199, "lucid.eye", false]], "flatten() (in module lucid)": [[232, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[105, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[50, "lucid.nn.functional.gelu", false]], "grad_enabled() (in module lucid)": [[171, "lucid.grad_enabled", false]], "hstack() (in module lucid)": [[233, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[75, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[134, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[129, "lucid.nn.Identity", false]], "inception (class in lucid.models)": [[22, "lucid.models.Inception", false]], "inception_v1() (in module lucid.models)": [[23, "lucid.models.inception_v1", false]], "inception_v3() (in module lucid.models)": [[24, "lucid.models.inception_v3", false]], "inception_v4() (in module lucid.models)": [[25, "lucid.models.inception_v4", false]], "inner() (in module lucid)": [[187, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[81, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[141, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[142, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[143, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[94, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[13, "lucid.linalg.inv", false]], "kaiming_normal() (in module lucid.nn.init)": [[98, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[99, "lucid.nn.init.kaiming_uniform", false]], "layer_norm() (in module lucid.nn.functional)": [[82, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[144, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[52, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[106, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[27, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[28, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[29, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[30, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[130, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[72, "lucid.nn.functional.linear", false]], "log() (in module lucid)": [[214, "lucid.log", false]], "lucid": [[7, "module-lucid", false]], "matmul() (in module lucid)": [[188, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[14, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[215, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[90, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[91, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[92, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[189, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[152, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[153, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[154, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[216, "lucid.mean", false]], "meshgrid() (in module lucid)": [[235, "lucid.meshgrid", false]], "min() (in module lucid)": [[217, "lucid.min", false]], "minimum() (in module lucid)": [[190, "lucid.minimum", false]], "mnist (class in lucid.datasets)": [[5, "lucid.datasets.MNIST", false]], "module": [[7, "module-lucid", false]], "module (class in lucid.nn)": [[41, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[43, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[44, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[77, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[135, "lucid.nn.MSELoss", false]], "mul() (in module lucid)": [[191, "lucid.mul", false]], "nadam (class in lucid.optim)": [[165, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[78, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[136, "lucid.nn.NLLLoss", false]], "no_grad() (in module lucid)": [[173, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[15, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[100, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[248, "lucid.transforms.Normalize", false]], "ones() (in module lucid)": [[200, "lucid.ones", false]], "ones_like() (in module lucid)": [[201, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[157, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[192, "lucid.outer", false]], "pad() (in module lucid)": [[236, "lucid.pad", false]], "parameter (class in lucid.nn)": [[42, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[45, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[46, "lucid.nn.ParameterList", false]], "pinv() (in module lucid.linalg)": [[16, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[193, "lucid.power", false]], "qr() (in module lucid.linalg)": [[17, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[166, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[177, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[178, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[179, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[249, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[250, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[251, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[252, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[253, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[237, "lucid.ravel", false]], "reciprocal() (in module lucid)": [[218, "lucid.reciprocal", false]], "register_model() (in module lucid)": [[174, "lucid.register_model", false]], "relu (class in lucid.nn)": [[107, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[53, "lucid.nn.functional.relu", false]], "repeat() (in module lucid)": [[238, "lucid.repeat", false]], "reshape() (in module lucid)": [[239, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[254, "lucid.transforms.Resize", false]], "rmsprop (class in lucid.optim)": [[167, "lucid.optim.RMSprop", false]], "rotate() (in module lucid.nn.functional)": [[95, "lucid.nn.functional.rotate", false]], "rprop (class in lucid.optim)": [[168, "lucid.optim.Rprop", false]], "seed() (in module lucid.random)": [[180, "lucid.random.seed", false]], "selu (class in lucid.nn)": [[108, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[54, "lucid.nn.functional.selu", false]], "sequential (class in lucid.nn)": [[47, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[169, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[109, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[55, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[219, "lucid.sign", false]], "sin() (in module lucid)": [[220, "lucid.sin", false]], "sinh() (in module lucid)": [[221, "lucid.sinh", false]], "softmax (class in lucid.nn)": [[110, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[56, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[18, "lucid.linalg.solve", false]], "sqrt() (in module lucid)": [[222, "lucid.sqrt", false]], "square() (in module lucid)": [[223, "lucid.square", false]], "squeeze() (in module lucid)": [[240, "lucid.squeeze", false]], "stack() (in module lucid)": [[241, "lucid.stack", false]], "sub() (in module lucid)": [[194, "lucid.sub", false]], "sum() (in module lucid)": [[224, "lucid.sum", false]], "summarize() (in module lucid.models)": [[39, "lucid.models.summarize", false]], "svd() (in module lucid.linalg)": [[19, "lucid.linalg.svd", false]], "tan() (in module lucid)": [[225, "lucid.tan", false]], "tanh (class in lucid.nn)": [[111, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[226, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[57, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[183, "lucid.Tensor", false]], "tensor() (in module lucid)": [[230, "lucid.tensor", false]], "tile() (in module lucid)": [[242, "lucid.tile", false]], "totensor (class in lucid.transforms)": [[246, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[227, "lucid.trace", false]], "transpose() (in module lucid)": [[228, "lucid.transpose", false]], "unfold() (in module lucid.nn.functional)": [[62, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[101, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[181, "lucid.random.uniform", false]], "unsqueeze() (in module lucid)": [[243, "lucid.unsqueeze", false]], "var() (in module lucid)": [[229, "lucid.var", false]], "vggnet (class in lucid.models)": [[31, "lucid.models.VGGNet", false]], "vggnet_11() (in module lucid.models)": [[32, "lucid.models.vggnet_11", false]], "vggnet_13() (in module lucid.models)": [[33, "lucid.models.vggnet_13", false]], "vggnet_16() (in module lucid.models)": [[34, "lucid.models.vggnet_16", false]], "vggnet_19() (in module lucid.models)": [[35, "lucid.models.vggnet_19", false]], "vstack() (in module lucid)": [[244, "lucid.vstack", false]], "xavier_normal() (in module lucid.nn.init)": [[102, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[103, "lucid.nn.init.xavier_uniform", false]], "zeros() (in module lucid)": [[202, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[203, "lucid.zeros_like", false]], "zfnet (class in lucid.models)": [[36, "lucid.models.ZFNet", false]], "zfnet() (in module lucid.models)": [[37, "lucid.models.zfnet", false]]}, "objects": {"": [[7, 0, 0, "-", "lucid"]], "lucid": [[183, 1, 1, "", "Tensor"], [205, 2, 1, "", "abs"], [184, 2, 1, "", "add"], [195, 2, 1, "", "arange"], [206, 2, 1, "", "arccos"], [207, 2, 1, "", "arcsin"], [208, 2, 1, "", "arctan"], [209, 2, 1, "", "clip"], [231, 2, 1, "", "concatenate"], [210, 2, 1, "", "cos"], [211, 2, 1, "", "cosh"], [212, 2, 1, "", "cube"], [196, 2, 1, "", "diag"], [185, 2, 1, "", "div"], [186, 2, 1, "", "dot"], [197, 2, 1, "", "empty"], [198, 2, 1, "", "empty_like"], [213, 2, 1, "", "exp"], [199, 2, 1, "", "eye"], [232, 2, 1, "", "flatten"], [171, 2, 1, "", "grad_enabled"], [233, 2, 1, "", "hstack"], [187, 2, 1, "", "inner"], [214, 2, 1, "", "log"], [188, 2, 1, "", "matmul"], [215, 2, 1, "", "max"], [189, 2, 1, "", "maximum"], [216, 2, 1, "", "mean"], [235, 2, 1, "", "meshgrid"], [217, 2, 1, "", "min"], [190, 2, 1, "", "minimum"], [191, 2, 1, "", "mul"], [173, 2, 1, "", "no_grad"], [200, 2, 1, "", "ones"], [201, 2, 1, "", "ones_like"], [192, 2, 1, "", "outer"], [236, 2, 1, "", "pad"], [193, 2, 1, "", "power"], [237, 2, 1, "", "ravel"], [218, 2, 1, "", "reciprocal"], [174, 2, 1, "", "register_model"], [238, 2, 1, "", "repeat"], [239, 2, 1, "", "reshape"], [219, 2, 1, "", "sign"], [220, 2, 1, "", "sin"], [221, 2, 1, "", "sinh"], [222, 2, 1, "", "sqrt"], [223, 2, 1, "", "square"], [240, 2, 1, "", "squeeze"], [241, 2, 1, "", "stack"], [194, 2, 1, "", "sub"], [224, 2, 1, "", "sum"], [225, 2, 1, "", "tan"], [226, 2, 1, "", "tanh"], [230, 2, 1, "", "tensor"], [242, 2, 1, "", "tile"], [227, 2, 1, "", "trace"], [228, 2, 1, "", "transpose"], [243, 2, 1, "", "unsqueeze"], [229, 2, 1, "", "var"], [244, 2, 1, "", "vstack"], [202, 2, 1, "", "zeros"], [203, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "MNIST"]], "lucid.linalg": [[9, 2, 1, "", "cholesky"], [10, 2, 1, "", "det"], [11, 2, 1, "", "eig"], [13, 2, 1, "", "inv"], [14, 2, 1, "", "matrix_power"], [15, 2, 1, "", "norm"], [16, 2, 1, "", "pinv"], [17, 2, 1, "", "qr"], [18, 2, 1, "", "solve"], [19, 2, 1, "", "svd"]], "lucid.models": [[20, 1, 1, "", "AlexNet"], [22, 1, 1, "", "Inception"], [27, 1, 1, "", "LeNet"], [31, 1, 1, "", "VGGNet"], [36, 1, 1, "", "ZFNet"], [21, 2, 1, "", "alexnet"], [23, 2, 1, "", "inception_v1"], [24, 2, 1, "", "inception_v3"], [25, 2, 1, "", "inception_v4"], [28, 2, 1, "", "lenet_1"], [29, 2, 1, "", "lenet_4"], [30, 2, 1, "", "lenet_5"], [39, 2, 1, "", "summarize"], [32, 2, 1, "", "vggnet_11"], [33, 2, 1, "", "vggnet_13"], [34, 2, 1, "", "vggnet_16"], [35, 2, 1, "", "vggnet_19"], [37, 2, 1, "", "zfnet"]], "lucid.nn": [[146, 1, 1, "", "AdaptiveAvgPool1d"], [147, 1, 1, "", "AdaptiveAvgPool2d"], [148, 1, 1, "", "AdaptiveAvgPool3d"], [117, 1, 1, "", "AlphaDropout"], [149, 1, 1, "", "AvgPool1d"], [150, 1, 1, "", "AvgPool2d"], [151, 1, 1, "", "AvgPool3d"], [132, 1, 1, "", "BCELoss"], [138, 1, 1, "", "BatchNorm1d"], [139, 1, 1, "", "BatchNorm2d"], [140, 1, 1, "", "BatchNorm3d"], [128, 1, 1, "", "Bilinear"], [40, 1, 1, "", "Buffer"], [113, 1, 1, "", "Conv1d"], [114, 1, 1, "", "Conv2d"], [115, 1, 1, "", "Conv3d"], [123, 1, 1, "", "ConvBNReLU1d"], [124, 1, 1, "", "ConvBNReLU2d"], [125, 1, 1, "", "ConvBNReLU3d"], [133, 1, 1, "", "CrossEntropyLoss"], [118, 1, 1, "", "Dropout"], [119, 1, 1, "", "Dropout1d"], [120, 1, 1, "", "Dropout2d"], [121, 1, 1, "", "Dropout3d"], [104, 1, 1, "", "ELU"], [105, 1, 1, "", "GELU"], [134, 1, 1, "", "HuberLoss"], [129, 1, 1, "", "Identity"], [141, 1, 1, "", "InstanceNorm1d"], [142, 1, 1, "", "InstanceNorm2d"], [143, 1, 1, "", "InstanceNorm3d"], [144, 1, 1, "", "LayerNorm"], [106, 1, 1, "", "LeakyReLU"], [130, 1, 1, "", "Linear"], [135, 1, 1, "", "MSELoss"], [152, 1, 1, "", "MaxPool1d"], [153, 1, 1, "", "MaxPool2d"], [154, 1, 1, "", "MaxPool3d"], [41, 1, 1, "", "Module"], [43, 1, 1, "", "ModuleDict"], [44, 1, 1, "", "ModuleList"], [136, 1, 1, "", "NLLLoss"], [42, 1, 1, "", "Parameter"], [45, 1, 1, "", "ParameterDict"], [46, 1, 1, "", "ParameterList"], [107, 1, 1, "", "ReLU"], [108, 1, 1, "", "SELU"], [47, 1, 1, "", "Sequential"], [109, 1, 1, "", "Sigmoid"], [110, 1, 1, "", "Softmax"], [111, 1, 1, "", "Tanh"]], "lucid.nn.functional": [[83, 2, 1, "", "adaptive_avg_pool1d"], [84, 2, 1, "", "adaptive_avg_pool2d"], [85, 2, 1, "", "adaptive_avg_pool3d"], [63, 2, 1, "", "alpha_dropout"], [86, 2, 1, "", "avg_pool1d"], [87, 2, 1, "", "avg_pool2d"], [88, 2, 1, "", "avg_pool3d"], [79, 2, 1, "", "batch_norm"], [70, 2, 1, "", "bilinear"], [73, 2, 1, "", "binary_cross_entropy"], [58, 2, 1, "", "conv1d"], [59, 2, 1, "", "conv2d"], [60, 2, 1, "", "conv3d"], [74, 2, 1, "", "cross_entropy"], [64, 2, 1, "", "dropout"], [65, 2, 1, "", "dropout1d"], [66, 2, 1, "", "dropout2d"], [67, 2, 1, "", "dropout3d"], [49, 2, 1, "", "elu"], [50, 2, 1, "", "gelu"], [75, 2, 1, "", "huber_loss"], [81, 2, 1, "", "instance_norm"], [94, 2, 1, "", "interpolate"], [82, 2, 1, "", "layer_norm"], [52, 2, 1, "", "leaky_relu"], [72, 2, 1, "", "linear"], [90, 2, 1, "", "max_pool1d"], [91, 2, 1, "", "max_pool2d"], [92, 2, 1, "", "max_pool3d"], [77, 2, 1, "", "mse_loss"], [78, 2, 1, "", "nll_loss"], [53, 2, 1, "", "relu"], [95, 2, 1, "", "rotate"], [54, 2, 1, "", "selu"], [55, 2, 1, "", "sigmoid"], [56, 2, 1, "", "softmax"], [57, 2, 1, "", "tanh"], [62, 2, 1, "", "unfold"]], "lucid.nn.init": [[96, 2, 1, "", "constant"], [98, 2, 1, "", "kaiming_normal"], [99, 2, 1, "", "kaiming_uniform"], [100, 2, 1, "", "normal"], [101, 2, 1, "", "uniform"], [102, 2, 1, "", "xavier_normal"], [103, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[159, 1, 1, "", "ASGD"], [160, 1, 1, "", "Adadelta"], [161, 1, 1, "", "Adagrad"], [162, 1, 1, "", "Adam"], [163, 1, 1, "", "AdamW"], [164, 1, 1, "", "Adamax"], [165, 1, 1, "", "NAdam"], [157, 1, 1, "", "Optimizer"], [166, 1, 1, "", "RAdam"], [167, 1, 1, "", "RMSprop"], [168, 1, 1, "", "Rprop"], [169, 1, 1, "", "SGD"]], "lucid.random": [[177, 2, 1, "", "rand"], [178, 2, 1, "", "randint"], [179, 2, 1, "", "randn"], [180, 2, 1, "", "seed"], [181, 2, 1, "", "uniform"]], "lucid.transforms": [[247, 1, 1, "", "CenterCrop"], [245, 1, 1, "", "Compose"], [248, 1, 1, "", "Normalize"], [249, 1, 1, "", "RandomCrop"], [250, 1, 1, "", "RandomGrayscale"], [251, 1, 1, "", "RandomHorizontalFlip"], [252, 1, 1, "", "RandomRotation"], [253, 1, 1, "", "RandomVerticalFlip"], [254, 1, 1, "", "Resize"], [246, 1, 1, "", "ToTensor"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [3, 7, 8, 14, 16, 19, 39, 40, 41, 42, 43, 45, 46, 47, 83, 84, 85, 133, 136, 146, 147, 148, 149, 152, 153, 156, 157, 158, 172, 174, 188, 196, 214, 216, 224, 227, 229, 230, 240, 246, 248, 256], "0": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 24, 27, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 205, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 233, 236, 237, 238, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 254, 256], "000": [5, 197, 198], "0000": [133, 134, 136], "0001": 159, "000e": [197, 198], "001": [159, 162, 163, 165, 166, 169], "002": [164, 165], "004": 165, "005": 106, "01": [52, 106, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169], "01051757": 179, "0205": 133, "0217": 133, "0227": 133, "0299": 133, "044715": [50, 105], "0450": 133, "0451": 133, "047": [33, 38], "04719755": 206, "0474259": 55, "0480": 133, "05": [79, 81, 82, 106, 123, 124, 125, 138, 139, 140, 141, 142, 143, 144], "0507": [54, 108], "06": [160, 168], "07": [73, 74, 132, 133], "0700": 133, "0706508": 111, "0721": 133, "0794": 136, "08": [162, 163, 164, 165, 166, 167], "0802": 136, "08333333": 16, "085537": 213, "0900": [110, 133], "0986": [56, 110], "09861229": 214, "0992": 133, "1": [0, 1, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 27, 28, 29, 30, 31, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 175, 177, 178, 179, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256], "10": [0, 1, 2, 3, 20, 21, 27, 28, 29, 30, 31, 36, 37, 38, 39, 43, 44, 47, 59, 60, 70, 72, 83, 113, 114, 115, 120, 121, 128, 130, 139, 140, 142, 146, 150, 151, 153, 161, 174, 178, 181, 182, 185, 188, 191, 192, 208, 224, 247, 249, 250, 252], "100": [21, 32, 33, 34, 35, 38, 174, 256], "1000": [20, 21, 23, 24, 25, 31, 32, 33, 34, 35, 36, 37], "1000000": 159, "1001": 133, "1003": 133, "1007": 38, "1014": 54, "1025": [44, 47], "1026": [44, 47], "1027": [44, 47], "10499": 55, "1050": 109, "1054": 136, "1056": [44, 47], "10590": 38, "1097": 38, "11": [31, 32, 38, 70, 113, 114, 115, 120, 128, 139, 140, 142, 150, 151, 153, 188, 247, 248, 249, 250, 252], "1105": 38, "1109": 38, "1111": 132, "1134": 70, "114b": 250, "119": 70, "1192": [55, 56, 110], "12": [28, 29, 45, 70, 85, 113, 114, 115, 120, 121, 128, 139, 140, 142, 148, 150, 151, 153, 188, 192, 193, 247, 249, 250, 252], "120": [27, 30], "123": [98, 99, 100, 101, 102, 103, 180, 181], "124": [98, 99, 102, 103], "125": 151, "1250": 134, "128": [31, 47, 245, 256], "128x128": [245, 256], "13": [23, 31, 33, 38, 70, 113, 114, 115, 128, 140, 150, 151, 153, 188, 247, 249, 250, 252], "132": [32, 38], "133": [33, 38], "138": [34, 38], "14": [113, 114, 115, 120, 121, 128, 140, 150, 151, 153, 175, 188, 192, 247, 249, 250, 252], "1409": 38, "143": [35, 38], "145": 70, "15": [0, 70, 113, 114, 115, 128, 140, 150, 151, 153, 188, 192, 227, 247, 249, 250, 252, 256], "1513": 136, "155": 188, "1556": 38, "1588": [50, 105], "16": [27, 30, 31, 34, 38, 44, 45, 47, 84, 85, 113, 114, 115, 120, 121, 123, 124, 125, 128, 139, 140, 147, 148, 150, 151, 153, 156, 188, 192, 222, 247, 249, 250, 252], "16227766": 17, "16425": 136, "1643": 132, "166": 188, "17": [113, 114, 115, 128, 140, 151, 187, 247, 249, 250, 252], "170": 70, "17520119": 221, "18": [29, 38, 113, 114, 115, 120, 128, 140, 151, 191, 192, 247, 249, 250, 252], "1800": 133, "19": [31, 35, 38, 59, 60, 70, 114, 115, 140, 186, 188], "192": [28, 29], "1966": [56, 109, 110], "1998": [38, 133], "1_53": 38, "1d": [58, 83, 86, 90, 123, 138, 141, 146, 181, 188, 196, 227, 235, 236, 237, 238, 242], "1e": [73, 74, 79, 81, 82, 123, 124, 125, 132, 133, 138, 139, 140, 141, 142, 143, 144, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "1e6": 159, "1st": [20, 36], "2": [1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 28, 29, 30, 36, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 175, 177, 178, 179, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256], "20": [0, 5, 43, 44, 47, 114, 115, 120, 140, 192, 213], "2012": 38, "2014": 38, "2015": 38, "2039": 136, "204": 115, "21": [45, 70, 114, 115, 140, 192], "211": 188, "22": [70, 114, 115, 120, 140, 186, 188], "2231": [133, 136], "224": [20, 31, 36, 38], "2247": [138, 139, 140, 141, 142, 143, 144], "224x224": 23, "226": 188, "22752314": 179, "2278": 38, "23": [114, 115, 140], "2324": [38, 108], "234": [98, 99, 100, 101, 102, 103, 181], "24": [70, 84, 114, 115, 120, 140, 147, 192], "240": [35, 38], "2424": [56, 110], "2447": 110, "246": [28, 38], "25": [0, 38, 55, 109, 115, 135, 140, 150, 151, 185, 218, 229], "2500": [132, 134, 136], "2512": 104, "2547": 108, "256": 31, "26": [45, 72, 115, 130, 140, 192], "26325684": 179, "2689": [56, 109, 110], "27": [70, 113, 115, 140, 212], "276": [98, 99, 102, 103], "28": [28, 29, 38, 70, 115, 192], "28x28": [5, 28, 29], "29": 115, "299": 38, "299r": 250, "299x299": [24, 25], "2_i": [141, 142, 143], "2d": [59, 66, 84, 87, 91, 124, 139, 142, 147, 188, 196, 199, 227, 232, 235, 236, 238, 242, 252], "2e": 164, "2nd": [20, 36], "2x2": [62, 247, 249], "3": [1, 2, 3, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 28, 31, 36, 38, 40, 41, 42, 44, 45, 46, 47, 50, 55, 56, 58, 59, 60, 62, 63, 64, 65, 66, 67, 70, 72, 75, 77, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 209, 211, 212, 213, 214, 215, 216, 217, 221, 222, 223, 224, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254], "30": [24, 38, 44, 95, 115, 252], "3026": 136, "31": [70, 115, 188], "310": [197, 198], "31622777": 17, "319": 38, "32": [30, 38, 44, 47, 70, 72, 84, 114, 115, 123, 124, 125, 130, 147, 156, 186, 187, 192], "321": [98, 99, 102, 103], "32x32": [27, 30], "33": [44, 47, 72, 115, 130], "33333333": 16, "336": [32, 38], "34": [44, 47, 70, 115, 188, 192], "342": [98, 99, 102, 103], "345": [98, 99, 100, 101, 102, 103, 181], "35": [44, 47, 115], "352": [23, 38], "3567": [132, 136], "357": [34, 37, 38], "36": 115, "3679": [49, 54, 104], "37": 113, "372": 70, "375": 135, "3750": 134, "378": [29, 38], "38344152": 177, "38629436": 214, "389056": 213, "392": [24, 38], "393": [23, 38], "3935": 104, "3d": [60, 67, 85, 88, 92, 115, 125, 140, 143, 148], "3x3": [38, 182], "4": [0, 1, 2, 3, 8, 9, 10, 11, 13, 15, 16, 17, 27, 28, 29, 38, 39, 45, 47, 58, 59, 60, 62, 65, 66, 67, 70, 72, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 128, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 159, 162, 166, 167, 169, 172, 175, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 201, 203, 209, 214, 215, 216, 217, 218, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 241, 242, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254], "40": [25, 38], "400": 30, "4044": 132, "4076": 133, "4096": [20, 36], "41421356": 9, "41666667": 16, "41808962": 179, "419974": 57, "4199743": 111, "42": [70, 175, 182], "421": [98, 99, 102, 103], "423": [98, 99, 100, 101], "42718872": 17, "4286": 132, "43": [186, 188], "4323": 104, "4375": 134, "43758721": 177, "4472136": 11, "4495": [140, 143], "45": [70, 95, 252], "4545": 117, "47112767": 208, "48": [72, 130], "4979": 104, "4x4": 254, "5": [1, 2, 7, 8, 13, 14, 15, 16, 20, 24, 27, 28, 29, 30, 36, 38, 39, 41, 42, 43, 44, 45, 47, 50, 55, 58, 59, 60, 62, 63, 64, 65, 66, 67, 70, 72, 75, 77, 79, 81, 82, 83, 86, 87, 94, 96, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 149, 150, 151, 153, 154, 168, 172, 175, 178, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 201, 203, 205, 206, 207, 215, 216, 217, 218, 219, 224, 227, 228, 229, 230, 233, 235, 239, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256], "50": [72, 130, 168, 186, 188, 250, 251, 253, 256], "5000": [132, 134, 136], "5108": 136, "52359878": 207, "53": [70, 187], "543": [98, 99, 100, 101, 102, 103, 181], "54308063": 211, "544": [34, 38], "545": 193, "5455": 117, "563": [98, 99, 102, 103], "57": 70, "57079633": [206, 207], "57366333": 180, "586": [25, 38], "587g": 250, "5th": [20, 36], "6": [8, 16, 20, 27, 30, 36, 45, 46, 58, 59, 60, 62, 67, 70, 72, 83, 99, 103, 113, 114, 115, 118, 119, 120, 121, 128, 130, 132, 138, 139, 140, 141, 142, 143, 144, 146, 150, 151, 153, 154, 160, 168, 172, 175, 181, 184, 185, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 201, 203, 215, 216, 217, 224, 227, 228, 229, 230, 233, 238, 239, 244, 246, 247, 248, 249, 250, 252, 254], "6052": 136, "6065": 104, "608": [37, 38], "61": [21, 30, 38], "6124": [138, 139, 140, 141, 142, 143, 144], "62": [37, 38, 70], "62686041": 221, "6321": [49, 104], "63245553": 17, "64": [31, 44, 47, 70], "64589411": 177, "654": [98, 99, 100, 101, 102, 103, 181], "657": [98, 99, 102, 103], "6590": [56, 110], "6652": 110, "66666667": 16, "6667": 132, "667": [35, 38], "6682": 132, "67": 188, "67326": 108, "6733": 54, "678": [98, 99, 100, 101, 102, 103], "68811989": 179, "69314718": 214, "7": [15, 31, 45, 58, 59, 60, 62, 67, 70, 72, 73, 74, 83, 105, 108, 109, 111, 113, 114, 115, 120, 121, 128, 130, 132, 133, 135, 139, 140, 142, 143, 146, 150, 151, 153, 154, 175, 178, 181, 184, 186, 187, 188, 192, 194, 196, 213, 216, 224, 227, 228, 229, 242, 246, 247, 248, 249, 250, 252, 254], "70": 5, "7001": 133, "706": [30, 38], "70710678": [11, 220], "7147": 136, "7182818": 213, "726791": 38, "7311": [56, 109, 110], "74": 188, "75": [72, 130, 135, 159], "7581": 54, "76159416": 226, "7616": [57, 111], "76219569": 211, "7635": 108, "772": 193, "78357324": 179, "78539816": 208, "79172504": 177, "7x7": 36, "8": [14, 18, 39, 44, 45, 47, 58, 59, 60, 62, 67, 70, 72, 73, 83, 84, 85, 105, 108, 109, 111, 113, 114, 115, 118, 119, 120, 121, 123, 124, 125, 128, 130, 132, 135, 139, 140, 142, 143, 146, 147, 148, 150, 151, 153, 154, 162, 163, 164, 165, 166, 167, 175, 178, 185, 186, 187, 188, 192, 193, 195, 196, 212, 216, 224, 227, 228, 229, 246, 247, 248, 249, 250, 252, 254], "80": 5, "8005": 133, "817": [24, 38], "818": 38, "8182": 117, "82": 70, "833": 38, "84": [27, 29, 30], "840": [21, 38], "8413": [50, 105], "848": [33, 38], "8584": 108, "86": 38, "863": [32, 38], "876": [98, 99, 102, 103, 181], "8808": [56, 109, 110], "887": 193, "891773": 177, "89442719": 11, "9": [0, 1, 3, 5, 18, 38, 59, 62, 70, 72, 83, 113, 114, 115, 120, 128, 130, 132, 139, 140, 142, 146, 150, 151, 153, 159, 160, 162, 163, 164, 165, 166, 167, 169, 175, 178, 181, 184, 188, 192, 193, 194, 196, 222, 223, 246, 247, 248, 249, 250, 252], "90709145": 180, "9091": 117, "9120": 136, "9163": 136, "9486833": 17, "949e": [197, 198], "9526": 55, "9545": 105, "96366276": 177, "9640": 111, "96402758": 226, "978": 38, "984": [25, 38], "99": 167, "9957": 136, "99734545": 180, "999": [0, 162, 163, 164, 165, 166], "A": [1, 3, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 27, 31, 32, 33, 34, 35, 41, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 70, 72, 73, 74, 78, 79, 81, 82, 94, 117, 118, 119, 120, 121, 132, 133, 136, 138, 139, 140, 141, 142, 143, 144, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 175, 177, 178, 179, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 252], "As": 180, "Be": 0, "By": [0, 2, 3, 7, 42, 95, 156, 166, 172, 177, 178, 179, 181, 246, 256], "For": [2, 3, 4, 7, 9, 10, 11, 13, 14, 15, 16, 18, 47, 49, 50, 52, 53, 54, 55, 57, 70, 72, 94, 98, 99, 102, 103, 108, 113, 114, 115, 128, 130, 138, 139, 140, 141, 142, 143, 156, 158, 180, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 213, 214, 215, 216, 217, 220, 222, 224, 227, 228, 229, 236, 238, 240, 242, 243, 256], "If": [0, 1, 2, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 39, 41, 43, 44, 45, 46, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 67, 70, 72, 79, 81, 84, 85, 94, 95, 98, 99, 113, 114, 115, 123, 124, 125, 128, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 157, 162, 163, 167, 168, 174, 177, 178, 179, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 250, 251, 253, 254], "In": [3, 7, 16, 58, 59, 60, 133, 136, 171, 172, 173, 245, 256], "It": [1, 2, 3, 7, 16, 17, 18, 20, 22, 23, 24, 27, 28, 29, 30, 31, 38, 41, 43, 44, 45, 46, 47, 67, 70, 94, 95, 105, 107, 111, 123, 124, 125, 128, 129, 132, 133, 134, 135, 136, 146, 147, 148, 156, 157, 158, 159, 165, 167, 168, 169, 172, 180, 184, 185, 186, 189, 190, 191, 193, 194, 215, 217, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 244, 245, 246], "Its": [18, 182], "Near": 16, "No": 62, "Not": 129, "One": [28, 256], "The": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256], "There": 239, "These": [4, 7, 8, 11, 14, 17, 19, 38, 117, 118, 119, 120, 121, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 168, 175, 182, 256], "To": [3, 38, 158, 179, 182, 197, 198, 235, 256], "With": [3, 62, 246, 256], "_": [14, 43, 44, 46, 47, 49, 50, 52, 53, 54, 55, 57, 72, 94, 139, 140, 141, 142, 143, 149, 150, 151, 152, 153, 154, 159, 160, 162, 163, 164, 165, 167, 169, 186, 187, 188, 192, 227, 228, 247, 248, 249, 251, 252, 253], "_1": [11, 43, 44, 45, 46, 47, 70, 128, 192, 231, 233, 244], "_2": [11, 43, 44, 45, 46, 47, 70, 128, 192, 231, 233, 244], "__call__": [1, 41], "__getitem__": [0, 2, 3, 5], "__init__": [0, 1, 2, 3, 7, 20, 22, 27, 31, 36, 39, 40, 41, 42, 43, 44, 45, 46, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 128, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 174, 183, 245, 246], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5], "__repr__": 157, "__setattr__": 41, "_activ": 56, "_arraylik": [175, 196, 198, 201, 203], "_arraylikeint": 236, "_arrayorscalar": [40, 42, 175, 183, 230], "_base_dtyp": [195, 197, 200, 202], "_c": 248, "_decai": 165, "_fanmod": [98, 99], "_grad_en": [171, 173], "_i": [11, 15, 56, 70, 110, 135, 138, 144, 149, 152, 186, 187, 189, 190, 192, 193, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 238, 240, 243, 244], "_in": [98, 99, 102, 103], "_j": [56, 110, 149, 152, 192, 216, 224, 228, 229], "_k": 241, "_left": 94, "_make_lay": 31, "_modul": 41, "_n": [11, 43, 44, 45, 46, 47, 231, 233, 244], "_numpyarrai": 175, "_out": [98, 99, 102, 103, 238, 242], "_p": 15, "_pad": 236, "_paddingstr": [113, 114, 115, 123, 124, 125], "_paramet": 41, "_reductiontyp": [73, 74, 75, 77, 78, 132, 133, 134, 135, 136], "_right": 94, "_scalar": [96, 100, 101, 102, 103, 175, 195, 209], "_shapelik": [39, 82, 144, 175, 178, 200, 202, 239, 240, 243], "_size": [83, 84, 85], "_slope": 106, "_statedict": 157, "_t": [166, 167], "_tensor": [40, 42, 196, 230], "_tensorop": 183, "_u": 16, "_v": 16, "_valu": [209, 236], "_width": 236, "a_i": [189, 190, 193], "ab": 204, "abc": [2, 157], "abil": [7, 256], "about": [7, 39], "abov": [7, 171, 173, 180, 196, 199], "absolut": [14, 15, 75, 164, 205], "abstract": [2, 3, 156, 157, 158, 159, 167, 169], "abstractmethod": 157, "acceler": [38, 108, 138, 139, 140, 159, 165, 167, 169], "accept": [129, 177, 183], "access": [0, 2, 3, 4, 5, 40, 42, 43, 44, 45, 46, 47, 239], "accord": [94, 113, 114, 115, 128, 130, 133, 136, 160, 161, 162, 163, 164, 165, 166, 228], "accordingli": 10, "account": [14, 16, 17], "accumul": [159, 160, 161, 184, 185, 189, 190, 191, 194], "accuraci": 38, "achiev": [38, 58, 59, 60, 83, 146, 147, 148, 165, 251, 253], "across": [0, 40, 44, 47, 82, 83, 84, 85, 102, 103, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 175, 177, 178, 179, 180, 181, 182, 197, 198, 216, 229], "act": 163, "activ": [7, 20, 31, 36, 38, 43, 47, 49, 50, 52, 53, 54, 55, 56, 57, 63, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 117, 118, 119, 120, 121, 123, 124, 125, 132, 133, 136, 138, 139, 140, 144, 215, 217], "actual": [42, 132, 133, 135, 136, 183, 249], "ad": [41, 43, 44, 45, 46, 47, 58, 59, 60, 70, 72, 73, 74, 79, 81, 82, 86, 87, 88, 90, 91, 92, 113, 114, 115, 123, 124, 125, 132, 133, 138, 139, 140, 141, 142, 143, 144, 149, 150, 151, 152, 153, 154, 160, 161, 162, 163, 164, 165, 166, 167, 174, 243, 256], "adadelta": 170, "adagrad": [160, 170], "adam": [163, 164, 165, 166, 170], "adamax": 170, "adamw": 170, "adapt": [20, 22, 27, 31, 36, 83, 84, 85, 146, 147, 148, 160, 161, 162, 165, 166, 167, 168], "adaptive_avg_pool1d": [69, 89, 146], "adaptive_avg_pool2d": [69, 89, 147], "adaptive_avg_pool3d": [69, 89, 148], "adaptiveavgpool1d": [127, 155], "adaptiveavgpool2d": [20, 31, 36, 127, 155], "adaptiveavgpool3d": [127, 155], "add": [4, 41, 43, 44, 47, 70, 72, 113, 114, 115, 128, 130, 144, 157, 159, 162, 167, 169, 172, 204, 236, 243], "add_modul": [41, 47], "add_param_group": 157, "addit": [4, 7, 14, 21, 22, 23, 24, 25, 32, 33, 34, 35, 37, 41, 44, 47, 70, 72, 79, 81, 128, 130, 138, 139, 140, 141, 142, 143, 159, 165, 172, 182, 184, 241], "addition": 165, "address": [133, 136, 162, 163, 166], "adjust": [83, 84, 85, 117, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 158, 162, 166, 167, 168, 233, 244], "advanc": [3, 16, 38, 44, 47, 58, 59, 60, 83, 84, 85, 146, 147, 148, 156, 159], "advantag": 173, "affect": [171, 237, 240, 245], "affin": [123, 124, 125, 138, 139, 140, 141, 142, 143, 144, 252], "after": [14, 20, 36, 42, 43, 44, 45, 46, 47, 67, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 117, 118, 119, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 144, 149, 150, 151, 152, 153, 154, 163, 173, 183, 184, 185, 189, 190, 191, 193, 194, 236, 246], "afterward": 173, "aggreg": [192, 238, 242], "aim": [4, 7], "al": [23, 38], "alex": 38, "alexnet": [26, 36, 38], "algebra": [7, 8, 199], "algorithm": [7, 14, 16, 17, 157, 158, 182], "align": [18, 94, 187, 188], "align_corn": 94, "all": [0, 3, 4, 7, 17, 41, 43, 44, 45, 46, 47, 59, 60, 83, 84, 85, 87, 88, 91, 92, 94, 106, 107, 115, 124, 125, 146, 147, 148, 150, 151, 154, 156, 157, 158, 159, 162, 167, 168, 169, 193, 215, 216, 217, 224, 227, 229, 231, 232, 233, 238, 240, 241, 242, 244, 247, 248, 256], "allevi": 49, "alloc": [197, 198], "allow": [0, 1, 3, 4, 7, 16, 17, 27, 42, 43, 44, 45, 46, 47, 49, 52, 53, 56, 60, 62, 95, 104, 105, 106, 108, 109, 110, 111, 113, 114, 115, 156, 160, 161, 172, 195, 200, 202, 203, 228, 230, 235, 245, 246, 256], "along": [56, 94, 110, 187, 188, 192, 215, 216, 217, 224, 227, 229, 231, 233, 235, 238, 241, 242, 243, 244, 251, 253], "alongsid": 40, "alpha": [49, 52, 54, 63, 104, 108, 117, 159, 167], "alpha_dropout": [68, 69, 117], "alphadropout": [122, 127], "alphadropoutmodel": 117, "alreadi": 174, "also": [39, 49, 50, 52, 53, 54, 55, 57, 70, 72, 94, 165, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 202, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 225, 226, 231, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244], "alter": [47, 239], "altern": [1, 105, 160, 188], "alwai": [42, 237, 250, 251, 253], "among": 24, "amount": [58, 59, 60, 86, 87, 88, 90, 91, 92, 165], "amsgrad": [162, 163], "an": [0, 1, 3, 7, 11, 13, 14, 16, 17, 19, 21, 23, 24, 25, 27, 28, 29, 30, 36, 37, 39, 41, 43, 44, 45, 46, 47, 50, 58, 59, 60, 62, 63, 64, 65, 66, 67, 70, 84, 85, 94, 95, 102, 103, 104, 109, 113, 114, 115, 117, 118, 119, 120, 121, 128, 130, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 158, 159, 162, 165, 167, 173, 174, 175, 183, 188, 196, 199, 209, 216, 224, 229, 231, 238, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256], "analog": [238, 242], "analysi": [4, 113, 114, 115, 143, 149, 151, 152, 154], "andrew": 38, "angl": [95, 252], "ani": [0, 1, 2, 3, 14, 16, 21, 37, 40, 41, 42, 43, 45, 46, 49, 50, 52, 53, 54, 55, 57, 63, 64, 70, 72, 79, 81, 109, 144, 156, 157, 171, 173, 174, 180, 183, 195, 196, 197, 199, 200, 201, 202, 203, 215, 217, 228, 230, 231, 232, 233, 236, 238, 241, 242, 243, 244, 245, 256], "anoth": [46, 194, 201, 203, 246, 256], "api": [4, 146, 147, 148, 256], "appear": 157, "append": [44, 46, 47], "appli": [2, 4, 5, 7, 14, 20, 36, 38, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 60, 62, 63, 64, 65, 66, 67, 70, 72, 73, 74, 75, 77, 78, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 159, 160, 161, 163, 164, 165, 166, 188, 236, 238, 245, 248, 250, 251, 252, 253, 254, 256], "applic": [4, 16, 58, 81, 113, 114, 115, 128, 130, 182, 195, 202, 236, 254], "approach": [3, 47, 163], "appropri": [16, 41, 45, 47, 113, 114, 115, 117, 118, 119, 133, 150, 151, 171, 173], "approx": 54, "approxim": [16, 50, 105, 150, 153], "ar": [1, 2, 3, 4, 7, 10, 11, 13, 14, 16, 17, 18, 19, 22, 23, 24, 38, 40, 41, 42, 43, 44, 45, 46, 47, 56, 58, 59, 60, 62, 70, 72, 84, 85, 94, 98, 99, 101, 102, 103, 110, 113, 114, 115, 117, 118, 119, 120, 121, 128, 130, 133, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 159, 162, 163, 165, 166, 167, 168, 169, 171, 173, 174, 175, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 205, 209, 213, 215, 216, 217, 218, 219, 224, 227, 228, 231, 235, 238, 239, 242, 245, 246, 247, 249, 250, 254, 256], "arang": 204, "arbitrari": [44, 129, 197, 198, 209, 214, 216, 220, 222, 224, 228, 229], "arcco": 204, "arch": 174, "architectur": [21, 22, 23, 24, 25, 27, 31, 32, 33, 34, 35, 37, 38, 39, 43, 44, 45, 46, 47, 50, 107, 128, 129, 156, 174], "arcsin": 204, "arctan": 204, "area": 94, "arg": [41, 129, 174, 197], "argument": [3, 4, 21, 22, 23, 24, 25, 27, 32, 33, 34, 35, 37, 41, 47, 129, 177, 197, 228], "around": [11, 95, 111], "arr": [175, 231, 233, 241, 244], "arrai": [7, 40, 42, 172, 175, 183, 188, 196, 201, 203, 230, 237, 238, 246, 256], "art": 38, "arxiv": 38, "asarrai": 175, "asgd": 170, "aspect": 254, "assign": [41, 43, 45, 47, 94, 133, 136], "assist": [22, 23, 24], "associ": [45, 46], "assum": [0, 1, 157, 158, 171], "attempt": [43, 47], "attent": [46, 70], "attribut": 41, "audio": 113, "augment": [3, 4, 95, 182, 238, 242, 245, 249, 250, 251, 252, 253, 256], "autodiff": 7, "autograd": 156, "automat": [4, 7, 42, 43, 44, 45, 46, 156, 177, 178, 179, 181, 183, 197, 198, 203, 235, 246], "auxiliari": [22, 23, 24, 40], "avail": [4, 5, 7], "averag": [20, 28, 29, 30, 31, 36, 40, 83, 84, 85, 86, 87, 88, 94, 135, 146, 147, 148, 149, 150, 151, 159, 160, 162, 167, 216], "avg_pool": [149, 150, 151], "avg_pool1d": [69, 89], "avg_pool2d": [69, 89], "avg_pool3d": [69, 89], "avgpool": [20, 31, 36], "avgpool1d": [127, 155], "avgpool1dmodel": 149, "avgpool2d": [127, 155], "avgpool2dmodel": 150, "avgpool3d": [127, 155], "avgpool3dmodel": 151, "avoid": [2, 3, 16, 45, 173], "ax": [8, 172, 215, 216, 217, 224, 228, 229, 238, 240, 242], "axi": [56, 110, 187, 188, 215, 216, 217, 224, 229, 231, 233, 235, 236, 238, 240, 241, 242, 243, 244, 251, 253], "b": [8, 18, 70, 72, 101, 113, 114, 115, 128, 130, 172, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 231, 233, 241, 244, 250], "b_i": [189, 190, 193], "back": [94, 150, 151, 174, 187, 192, 238, 242], "backpropag": [7, 10, 11, 13, 14, 16, 17, 19, 40, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 70, 72, 94, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 149, 150, 151, 152, 153, 154, 156, 173, 179, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 213, 215, 217, 230, 236, 238, 242, 246], "backward": [7, 40, 42, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 183, 246], "balanc": 134, "bar": 159, "base": [3, 8, 13, 14, 17, 18, 22, 23, 24, 25, 27, 31, 38, 41, 43, 44, 45, 46, 62, 70, 83, 84, 85, 117, 133, 134, 146, 147, 148, 156, 157, 158, 159, 163, 167, 168, 169, 184, 185, 189, 190, 191, 193, 194, 203, 213, 214, 215, 217, 228, 235, 236, 249, 250, 251, 252, 253], "basic": [7, 20, 36, 39, 58, 59, 60, 83, 84, 85, 98, 99, 102, 103, 123, 124, 125, 146, 147, 148, 247, 248, 249, 250, 251, 252, 253, 254], "batch": [1, 2, 3, 8, 14, 17, 19, 23, 24, 25, 58, 59, 60, 62, 65, 66, 67, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 113, 114, 115, 123, 124, 125, 128, 130, 132, 133, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 152, 153, 154, 166, 188, 247, 248, 249, 250, 252, 254], "batch_norm": [69, 80, 138, 139, 140], "batch_norm1": 47, "batch_norm2": 47, "batch_siz": [1, 2, 3], "batchnorm": [123, 124, 125], "batchnorm1d": [123, 127, 145], "batchnorm1dmodel": 138, "batchnorm2d": [47, 124, 127, 145], "batchnorm2dmodel": 139, "batchnorm3d": [125, 127, 145], "batchnorm3dmodel": 140, "bceloss": [127, 137], "becaus": [2, 178], "becom": [15, 41, 160, 168], "befor": [14, 39, 42, 159, 165, 173, 180, 236, 248, 256], "begin": [1, 15, 49, 52, 53, 54, 104, 106, 107, 108, 134, 135, 136, 149, 150, 151, 152, 153, 154, 166, 168, 172, 182, 189, 190, 192, 205, 209, 215, 217, 219, 236], "behav": [134, 227], "behavior": [38, 44, 47, 171, 182, 188, 198, 256], "being": [46, 95, 117, 118, 119, 120, 121, 166, 171, 173, 231, 233, 244], "belong": 0, "below": [17, 23, 24, 25, 27, 28, 29, 30, 188, 196, 199], "benchmark": 5, "benefici": 47, "benefit": [49, 156, 165, 175], "bernoulli": [117, 118, 119, 120, 121], "best": [98, 99, 102, 103], "beta": [138, 139, 140, 141, 142, 143, 144, 162, 163, 164, 165, 166], "beta1": [162, 163, 164, 165, 166], "beta2": [162, 163, 164, 165, 166], "beta_1": [162, 163, 164, 165, 166], "beta_2": [162, 163, 164, 165, 166], "better": [13, 36, 38, 50, 98, 99, 102, 103, 141, 142, 143, 156, 163, 165, 167, 248], "between": [41, 58, 59, 60, 62, 70, 75, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 132, 133, 134, 135, 136, 159, 167, 168, 169, 182, 184, 185, 188, 191, 194, 195, 229, 250, 251, 253, 254], "beyond": [7, 44], "bia": [58, 59, 60, 70, 72, 79, 81, 82, 113, 114, 115, 123, 124, 125, 128, 130, 138, 139, 140, 141, 142, 143, 144, 162, 163, 164, 165, 166], "bias": [113, 114, 115, 130, 144, 156], "bias1": 45, "bias2": 45, "bilinear": [69, 71, 94, 127, 131], "bilinearmodel": 128, "binari": [55, 73, 109, 117, 118, 119, 120, 121, 132], "binary_cross_entropi": [69, 76], "block": [41, 62, 113, 114, 115, 123, 124, 125, 173], "block1": [39, 156], "block2": [39, 156], "blue": 250, "bmatrix": 192, "bn": [123, 124, 125], "bn_affin": [123, 124, 125], "bool": [1, 5, 19, 22, 23, 24, 39, 41, 42, 63, 64, 65, 66, 67, 79, 81, 94, 113, 114, 115, 123, 124, 125, 128, 130, 138, 139, 140, 141, 142, 143, 144, 162, 163, 167, 171, 177, 178, 179, 181, 183, 195, 196, 197, 198, 199, 200, 201, 202, 203, 215, 216, 217, 224, 229, 230, 246], "both": [58, 72, 84, 86, 90, 105, 113, 114, 123, 147, 149, 150, 152, 153, 186, 187, 188, 192, 196, 235, 254], "bottom": 94, "bound": [99, 101, 103, 168, 181], "box": 4, "branch": [22, 23, 24, 38], "break": 156, "brief": 256, "bright": 256, "broadcast": [120, 121, 216, 224, 229, 239, 243], "buffer": [159, 165, 167, 169], "build": [7, 41, 44, 47, 156, 256], "built": [3, 7, 47, 156], "burg": 5, "c": [5, 62, 65, 66, 67, 74, 78, 79, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 120, 121, 133, 136, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 172, 233, 244, 248], "c_": [113, 114, 115], "c_in": [58, 59, 60, 123, 124, 125], "c_out": [58, 59, 60], "calcul": [0, 1, 7, 8, 42, 160, 161, 164, 165, 166, 173, 178, 183], "calculu": [9, 16], "call": [1, 41, 171, 174, 184, 185, 188, 189, 190, 191, 193, 194], "callabl": [157, 174, 245], "can": [0, 2, 3, 4, 7, 9, 11, 13, 14, 16, 17, 19, 39, 40, 42, 43, 44, 45, 46, 47, 52, 58, 59, 60, 95, 105, 106, 111, 113, 114, 115, 141, 142, 143, 150, 151, 152, 153, 154, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 171, 172, 173, 175, 181, 182, 183, 188, 197, 198, 199, 200, 202, 203, 216, 224, 229, 233, 235, 236, 238, 239, 242, 243, 244, 245, 246, 249, 251, 252, 253, 256], "cannot": [10, 11, 13, 14, 17, 18, 19], "capabl": [7, 195, 196, 199, 200, 201, 202, 203], "captur": [62, 113, 114, 115, 128], "care": 173, "cartesian": 235, "case": [3, 15, 27, 49, 52, 53, 54, 104, 106, 107, 108, 134, 135, 136, 149, 150, 151, 152, 153, 154, 156, 161, 166, 168, 172, 189, 190, 205, 209, 215, 217, 219, 236, 256], "caus": [3, 16, 159, 167, 169], "cautiou": 0, "cdot": [9, 10, 13, 14, 15, 18, 49, 50, 52, 54, 55, 58, 59, 60, 70, 72, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 102, 103, 105, 109, 117, 128, 130, 132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 160, 161, 162, 163, 164, 165, 166, 168, 186, 187, 188, 191, 193], "center": [95, 111, 167, 247, 256], "centercrop": [255, 256], "central": 175, "certain": [10, 50, 70, 128, 162, 163, 171, 215, 217], "chain": [13, 14, 47, 245, 256], "challeng": 38, "cham": 38, "chanc": [250, 251, 253], "chang": [75, 134, 168, 172, 173, 174, 237, 239, 243, 250, 256], "channel": [27, 28, 29, 30, 31, 58, 59, 60, 62, 65, 66, 67, 79, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 113, 114, 115, 120, 121, 123, 124, 125, 138, 139, 140, 141, 142, 143, 146, 149, 150, 151, 152, 153, 154, 248, 250, 254], "check": [171, 247, 249], "checkpoint": 158, "choic": 235, "choleski": 12, "chosen": 117, "christian": 38, "christoph": 5, "clariti": 175, "class": [3, 4, 7, 21, 23, 24, 25, 28, 29, 30, 32, 33, 34, 35, 37, 39, 56, 74, 78, 156, 158, 174, 196, 199, 230, 256], "classic": 30, "classif": [4, 20, 21, 22, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 55, 56, 73, 74, 78, 109, 110, 132, 133, 136], "classifi": [20, 22, 23, 24, 27, 28, 29, 30, 31, 36], "cleaner": [1, 173, 188], "clear": [42, 183, 197, 198], "clearli": 175, "clf_in_featur": 27, "clf_layer": 27, "clip": [95, 168, 204], "clockwis": 95, "close": [13, 16, 108, 132, 167], "closer": 104, "closur": [157, 158], "cnn": 38, "co": [204, 220], "code": [14, 43, 45, 47, 171, 173, 175, 182], "coeffici": [18, 94, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169], "col": 62, "collect": [4, 8, 38, 43, 44, 46, 47, 158], "color": [250, 256], "colorjitt": 256, "column": [10, 11, 13, 17, 18, 19, 39, 62, 199, 233, 235], "com": 5, "combin": [1, 3, 25, 38, 44, 47, 49, 50, 105, 123, 124, 125, 133, 156, 165, 166, 216, 224, 229, 231, 256], "combined_dataset": [0, 1], "common": [62, 95, 158, 256], "commonli": [7, 50, 55, 56, 57, 58, 60, 70, 77, 79, 81, 95, 102, 103, 110, 115, 132, 135, 136, 149, 150, 151, 152, 153, 154, 172, 175, 200, 240, 246, 247, 248, 249, 251, 252, 253, 256], "compar": [36, 182, 241], "compat": [4, 8, 129, 144, 156, 172, 182, 246, 256], "complex": [2, 3, 7, 11, 39, 43, 44, 47, 53, 107, 152, 154, 156, 158, 256], "compon": [16, 22, 23, 24, 25, 41, 44, 158, 183, 256], "compos": [5, 113, 114, 115, 149, 150, 151, 152, 153, 154, 156, 256], "comprehens": 3, "comput": [7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 38, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 62, 70, 72, 73, 74, 75, 77, 78, 79, 81, 83, 84, 85, 94, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 167, 171, 172, 173, 175, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 205, 206, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 235, 236, 238, 242, 246, 256], "computation": [3, 16], "compute_loss": [158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "concaten": [0, 58, 59, 60, 233, 234, 241, 244], "concept": [7, 16, 38], "condit": [9, 10, 13], "confer": 38, "config": 31, "configur": [21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 37, 46, 123, 124, 125], "conjunct": [62, 136], "connect": [20, 25, 27, 28, 29, 30, 31, 36, 38, 72, 113, 114, 115, 130], "consecut": 31, "consid": [3, 13, 16, 47, 98, 99, 102, 103, 156, 168, 171, 197, 198, 256], "consider": 16, "consist": [2, 4, 20, 28, 29, 30, 40, 83, 84, 85, 146, 147, 148, 175, 180, 182, 236, 247, 254, 256], "consistent_tensor": 182, "consol": 39, "constant": [73, 74, 79, 81, 82, 97, 108, 132, 133, 138, 139, 140, 141, 142, 143, 144, 160, 161, 162, 163, 164, 165, 166, 167, 175, 236], "constant_pad": 236, "constraint": 1, "construct": [7, 32, 33, 34, 35, 44, 156, 196, 238, 242], "constructor": [32, 33, 34, 35], "contain": [1, 5, 10, 11, 16, 17, 18, 19, 27, 31, 39, 41, 43, 44, 45, 46, 47, 56, 62, 70, 72, 73, 74, 78, 94, 132, 133, 136, 157, 184, 185, 186, 187, 189, 190, 191, 192, 194, 195, 198, 205, 206, 207, 208, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 232, 235], "content": 95, "context": [171, 173], "contextmanag": 173, "contigu": 237, "continu": [106, 179], "contrast": [141, 142, 143, 256], "contribut": [94, 117, 118, 119, 120, 121, 149, 152, 153, 154, 159, 165, 227], "control": [104, 134, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 182, 246, 256], "conv": [123, 124, 125, 139, 140], "conv1": [28, 29, 30, 47, 113, 114, 115, 149, 150, 151, 152, 153, 154], "conv1d": [61, 69, 116, 123, 127, 149, 152], "conv1dmodel": 113, "conv2": [28, 29, 30, 47, 113, 114, 115], "conv2d": [44, 47, 61, 69, 116, 124, 127, 139, 150, 153, 156], "conv2dmodel": 114, "conv3d": [61, 69, 116, 125, 127, 140, 151, 154], "conv3dmodel": 115, "conv_bia": [123, 124, 125], "conv_config": 31, "conv_lay": [27, 44], "convblock": 156, "convbnrelu1d": [126, 127], "convbnrelu2d": [126, 127], "convbnrelu3d": [126, 127], "conveni": [4, 21, 37], "convent": 188, "converg": [16, 111, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 248], "convers": [133, 136, 250, 256], "convert": [5, 31, 40, 42, 56, 110, 183, 235, 245, 246, 250, 256], "convnetwork": 44, "convolut": [20, 21, 23, 24, 27, 28, 29, 30, 31, 36, 37, 38, 44, 58, 59, 60, 62, 113, 114, 115, 123, 124, 125, 150, 151, 153, 154, 236], "convolv": [58, 59, 60, 113, 114, 115], "coordin": 235, "core": [0, 1, 2, 3, 41, 156, 157, 183, 256], "corinna": 5, "corner": [94, 247, 249], "correct": [43, 133, 136, 162, 163, 164, 165, 166, 246], "correctli": [16, 41, 43, 44, 45, 46, 47, 133, 136, 182], "correspond": [0, 1, 2, 5, 11, 43, 45, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 70, 72, 94, 107, 110, 128, 130, 138, 139, 140, 141, 142, 143, 150, 151, 159, 167, 169, 186, 187, 189, 190, 193, 213, 214, 220, 222, 233, 236, 238, 242, 244], "cort": 5, "cosh": [204, 221, 226], "cosin": [206, 210, 211, 220], "cost": 38, "could": 41, "count": [38, 39, 231], "counterclockwis": [95, 252], "cover": [8, 58, 59, 60], "coverag": [83, 84, 85], "creat": [2, 3, 7, 20, 21, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 44, 47, 156, 172, 174, 182, 195, 199, 200, 201, 202, 203, 235, 241, 245, 256], "creation": [44, 47, 256], "criterion": [132, 133, 134, 135, 136], "critic": [16, 158, 182], "crop": [247, 249, 256], "cross": [73, 74, 132, 133], "cross_entropi": [69, 76], "crossentropyloss": [127, 137], "cube": 204, "cumul": [50, 105], "current": [41, 159, 162, 168, 171], "custom": [4, 7, 20, 21, 27, 31, 36, 37, 40, 43, 44, 45, 46, 47, 95, 104, 106, 123, 124, 125, 156, 182, 199], "custom_config": 31, "custom_lenet": 27, "customiz": 256, "custommodul": 40, "customnetwork": 43, "customparametermodel": [45, 46], "cvpr": 38, "d": [38, 60, 67, 85, 88, 92, 125, 140, 143, 144, 148, 151, 154, 172, 196, 252], "d_": [60, 85, 88, 92, 115, 148, 151, 154], "d_1": 144, "d_2": 144, "d_n": 144, "d_out": [60, 88, 92], "dampen": [159, 167, 169], "data": [4, 5, 7, 14, 40, 42, 46, 57, 58, 60, 62, 66, 67, 72, 95, 107, 111, 113, 114, 115, 123, 124, 125, 130, 143, 149, 151, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 175, 182, 183, 184, 185, 191, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 230, 236, 237, 238, 239, 240, 242, 245, 246, 249, 250, 251, 252, 253, 256], "databas": 5, "dataload": [2, 3], "dataset": [3, 28, 29, 30, 95, 161, 173, 245, 247, 256], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 192, "debug": [39, 47, 171, 180, 256], "decai": [159, 160, 161, 162, 163, 164, 165, 166, 167, 169], "decompos": [9, 17, 19], "decomposit": [8, 9, 13, 16, 17, 19], "decor": 174, "decoupl": [160, 161, 163, 164, 165, 166], "decreas": [162, 163, 168], "deep": [1, 3, 4, 7, 38, 79, 105, 108, 156, 182, 245, 246, 256], "deeper": [7, 23, 25, 38, 108], "def": [0, 1, 2, 3, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 128, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 175, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246], "default": [1, 5, 15, 19, 20, 21, 22, 23, 24, 25, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 49, 52, 56, 58, 59, 60, 63, 64, 65, 66, 67, 73, 74, 75, 77, 78, 79, 81, 82, 86, 87, 88, 90, 91, 92, 94, 95, 98, 99, 100, 101, 102, 103, 104, 106, 110, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 149, 150, 151, 152, 153, 154, 157, 158, 165, 171, 177, 178, 179, 181, 183, 195, 196, 197, 198, 199, 200, 201, 202, 203, 215, 216, 217, 224, 228, 229, 230, 231, 233, 235, 236, 238, 241, 244, 246, 250, 251, 253], "defin": [1, 3, 4, 7, 22, 23, 24, 25, 27, 31, 43, 44, 45, 46, 47, 105, 132, 133, 134, 135, 136, 149, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 175, 178, 179, 193, 198, 209, 228, 245, 256], "definit": [7, 9, 123, 124, 125, 256], "degre": [95, 252, 256], "delai": 159, "delta": [56, 75, 110, 134, 160], "delta_": [56, 110], "demonstr": [7, 8, 38, 156, 175], "denomin": [79, 81, 82, 123, 124, 125, 138, 139, 140, 141, 142, 143, 144, 160, 161, 162, 163, 164, 165, 166, 167, 185], "denot": [14, 109, 113, 114, 115, 117, 118, 119, 120, 121, 228], "dens": [7, 161], "dense1": 7, "dense2": 7, "densiti": [50, 105], "depend": [7, 14, 15, 46, 73, 74, 75, 77, 78, 94, 113, 186, 196, 215, 217, 238, 242, 249, 250, 254], "depth": [44, 60, 67, 85, 88, 92, 115, 140, 143, 148, 151, 154], "depthwis": [58, 59, 60], "deriv": [16, 17, 56, 83, 84, 85, 105, 110, 111, 113, 114, 115, 128, 130, 174], "descend": 19, "descent": [7, 159, 169], "describ": [10, 11], "descript": 256, "deseri": 40, "design": [3, 4, 7, 8, 20, 21, 23, 24, 25, 28, 29, 30, 37, 38, 42, 44, 45, 46, 47, 49, 54, 108, 117, 156, 175, 256], "desir": [40, 83, 84, 85, 146, 147, 148, 228, 230], "destin": 41, "det": [8, 12], "det_a": 10, "detail": [7, 39, 158, 182, 188], "determin": [0, 7, 8, 9, 10, 27, 83, 84, 85, 98, 99, 102, 103, 113, 114, 115, 146, 147, 148, 150, 151, 153, 154, 167, 171, 177, 178, 179, 181, 197, 198, 247, 249], "determinist": 95, "develop": [7, 156, 182, 256], "deviat": [98, 100, 102, 245, 248, 256], "diag": [16, 204], "diagon": [16, 17, 19, 196, 199, 227], "diagonaliz": 11, "dict": [21, 23, 24, 25, 27, 37, 41, 43, 45, 129, 157], "dictionari": [27, 41, 42, 43, 45, 47, 157], "differ": [0, 14, 22, 27, 44, 47, 56, 70, 94, 110, 128, 135, 158, 172, 180, 182, 194, 203, 229, 240, 256], "differenti": [7, 9, 18, 105, 156, 177, 178, 179, 181, 183, 195, 197, 198, 200, 202], "digit": [5, 30, 38], "dilat": [58, 59, 60, 113, 114, 115, 123, 124, 125], "dilation_height": 62, "dilation_width": 62, "dim": [133, 136], "dimens": [10, 11, 13, 14, 17, 18, 19, 20, 31, 36, 42, 56, 70, 72, 79, 81, 82, 84, 85, 94, 110, 113, 114, 115, 138, 139, 140, 141, 142, 143, 144, 147, 148, 150, 151, 152, 153, 154, 172, 175, 177, 181, 183, 187, 197, 215, 216, 217, 224, 227, 228, 229, 231, 233, 236, 238, 240, 241, 242, 243, 244, 247, 249, 254], "dimension": [14, 16, 17, 19, 58, 59, 60, 86, 87, 88, 90, 91, 92, 113, 114, 115, 119, 120, 121, 138, 139, 140, 141, 142, 143, 149, 150, 151, 152, 153, 154, 172, 187, 188, 192, 196, 213, 216, 224, 227, 229, 232, 237, 238, 240, 242], "diminish": 161, "direct": [11, 132, 133, 134, 135, 136, 159, 167, 168, 169], "directli": [43, 44, 45, 46, 94, 160, 161, 163, 164, 165, 166, 180, 182, 230, 256], "directori": [3, 4, 5], "disabl": [171, 173], "discontinu": 219, "discrep": [132, 133, 136], "discret": [178, 182], "disk": 3, "displai": [21, 37, 39], "distribut": [50, 56, 94, 98, 99, 100, 101, 102, 103, 105, 110, 113, 114, 115, 117, 118, 119, 120, 121, 128, 130, 133, 136, 149, 150, 151, 177, 178, 179, 181, 182, 216, 224, 227, 229, 241, 248, 250, 251, 252, 253], "div": 204, "divers": [95, 251, 253, 256], "diversifi": 256, "divid": [1, 16, 44, 47, 56, 58, 59, 60, 110, 132, 133, 134, 135, 136, 185, 248], "divis": [7, 16, 58, 59, 60, 117, 118, 119, 120, 121, 160, 161, 162, 163, 164, 165, 166, 167, 185], "do": [16, 18, 40, 43, 44, 45, 46, 63, 64, 65, 66, 156, 166, 171, 203, 227, 236], "document": [4, 7, 38, 158, 175, 182], "doe": [7, 14, 15, 16, 17, 19, 39, 40, 43, 44, 45, 46, 47, 103, 162, 163, 168, 171, 173, 177, 178, 179, 180, 181, 195, 196, 197, 198, 199, 200, 201, 202, 203, 239], "doesn": 173, "doi": 38, "domain": 4, "don": 173, "dot": [11, 14, 43, 44, 45, 46, 47, 144, 152, 153, 154, 187, 192, 204, 231, 233, 241, 244], "down": [3, 156, 254], "download": [4, 5], "drawback": 49, "drawn": [177, 178, 179, 181, 182, 252], "drop": [117, 118, 119, 120, 121], "dropout": [20, 24, 31, 36, 38, 50, 63, 65, 66, 67, 117, 119, 120, 121], "dropout1d": [68, 69, 122, 127], "dropout1dmodel": 119, "dropout2d": [68, 69, 122, 127], "dropout3d": [68, 69, 122, 127], "dropout_prob": 24, "dropoutmodel": 118, "dtype": [40, 42, 183, 195, 196, 197, 198, 199, 200, 201, 202, 203, 230, 246], "due": [14, 16, 58, 59, 107, 252], "dummi": 39, "duplic": [43, 45], "dure": [3, 7, 10, 11, 13, 16, 17, 19, 22, 23, 24, 40, 41, 42, 43, 44, 45, 46, 47, 56, 63, 64, 65, 66, 67, 79, 81, 95, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 149, 150, 151, 152, 153, 154, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 171, 173, 183, 184, 215, 216, 217, 224, 229, 246, 249, 252, 256], "dy": [52, 106], "dynam": [0, 2, 3, 41, 44, 45, 46, 47, 83, 84, 85, 144, 146, 147, 148, 161, 166, 171], "dynamicnetwork": 44, "e": [0, 10, 11, 13, 14, 17, 19, 23, 24, 25, 27, 28, 29, 30, 31, 40, 56, 109, 110, 117, 133, 157, 160, 167, 168, 199, 211, 213, 214, 221, 226, 227, 231, 250], "each": [1, 2, 3, 4, 11, 14, 16, 17, 19, 20, 27, 31, 36, 38, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 70, 72, 79, 81, 83, 84, 85, 107, 110, 113, 114, 115, 117, 118, 119, 120, 121, 128, 130, 132, 133, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 160, 161, 162, 163, 164, 165, 166, 167, 168, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 216, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 233, 235, 236, 238, 241, 242, 244, 245, 246, 247, 248, 249, 250, 252, 254, 256], "earli": 166, "eas": [4, 7], "easi": [2, 3, 4, 7, 42, 43, 45], "easier": [3, 43, 44, 47], "easili": [4, 42, 46, 256], "eccv": 38, "economi": 19, "edg": 236, "educ": [7, 38], "effect": [38, 43, 44, 45, 46, 47, 56, 58, 59, 60, 62, 104, 105, 107, 109, 110, 111, 138, 139, 140, 141, 142, 143, 144, 171, 172, 173, 233, 244], "effici": [1, 2, 3, 5, 7, 8, 13, 18, 38, 62, 133, 156, 173], "eig": 12, "eigenvalu": [11, 17], "eigenvector": 11, "eigval": 11, "eigvec": 11, "either": [72, 175, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 230, 235], "element": [0, 16, 17, 24, 42, 46, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 107, 110, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 132, 133, 134, 135, 136, 144, 149, 150, 151, 152, 153, 154, 172, 183, 184, 185, 188, 189, 190, 191, 192, 193, 194, 195, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 229, 232, 235, 236, 238, 239, 240, 242], "elementwise_affin": 144, "elsewher": [152, 153, 154, 199], "elu": [51, 69, 112, 127], "elumodel": 104, "empti": [41, 47, 204], "empty_lik": 204, "enabl": [0, 1, 2, 3, 7, 14, 19, 41, 42, 43, 44, 45, 46, 107, 113, 114, 115, 128, 130, 156, 158, 171, 173, 177, 178, 179, 181, 183, 245], "encapsul": [156, 183], "encod": [133, 136], "encourag": [118, 119, 120, 121, 132, 133, 136, 162], "end": [15, 49, 52, 53, 54, 104, 106, 107, 108, 134, 135, 136, 149, 150, 151, 152, 153, 154, 166, 168, 189, 190, 192, 195, 205, 209, 215, 217, 219, 231, 236, 256], "enforc": [41, 43, 45], "engin": 16, "enhanc": [24, 25, 29, 36, 37, 43, 45, 256], "ensur": [3, 5, 16, 17, 18, 40, 41, 42, 43, 44, 45, 46, 47, 56, 83, 84, 85, 106, 110, 117, 118, 119, 120, 121, 123, 124, 125, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 152, 153, 154, 156, 157, 159, 160, 162, 163, 165, 166, 167, 168, 169, 171, 172, 173, 175, 177, 178, 179, 180, 181, 182, 193, 216, 224, 229, 236, 246, 247, 248, 249, 250, 254, 256], "enter": 173, "entir": [3, 65, 66, 67, 120, 121, 182], "entri": [27, 240], "entropi": [73, 74, 132, 133], "environ": 7, "ep": [73, 74, 79, 81, 82, 123, 124, 125, 132, 133, 138, 139, 140, 141, 142, 143, 144, 160, 161, 162, 163, 164, 165, 166, 167], "epoch": [1, 3], "epsilon": [132, 133, 138, 139, 140, 141, 142, 143, 144, 160, 161, 162, 163, 164, 165, 166, 167], "equal": [14, 94, 149, 150, 151, 247, 249], "equat": [11, 16, 18], "equival": [188, 227, 237], "error": [0, 3, 11, 13, 41, 44, 45, 46, 47, 50, 75, 77, 105, 132, 133, 134, 135, 156, 157, 173, 175], "especi": [3, 43, 45, 46, 109, 172, 173, 175, 180, 245, 246, 250, 256], "essenti": [1, 3, 7, 8, 14, 16, 59, 62, 156, 180, 182, 215, 245, 246, 250, 256], "estim": [135, 162, 163, 164, 165, 166, 167], "et": [23, 38], "eta": 168, "eta_": 168, "etc": [132, 246], "euclidean": 15, "european": 38, "evalu": [41, 79, 81, 117, 118, 119, 120, 121, 138, 139, 140, 141, 142, 143, 256], "even": [160, 173, 195, 196, 199, 200, 201, 202, 203], "evenli": [83, 84, 85, 146, 147, 148, 195], "everi": [1, 256], "everywher": 219, "exact": [41, 44, 228, 250, 252], "exactli": 47, "exampl": [4, 188], "excel": 25, "except": [0, 219, 231, 233, 244], "exclus": [178, 181, 195], "exdb": 5, "execut": [44, 173], "exist": [18, 43, 45, 47, 174, 231], "exit": 173, "exp": [49, 54, 55, 57, 104, 108, 204], "expand": [4, 62, 238, 242], "expect": [9, 44, 47, 117, 118, 119, 120, 121, 144, 156, 175], "expens": 3, "experi": [7, 180, 182, 256], "experiment": 182, "explan": [14, 16, 20, 31, 36, 83, 84, 85, 146, 147, 148, 159], "explicit": 47, "explicitli": [43, 45], "explod": [108, 138, 139, 140], "explor": [156, 182], "expon": [14, 193], "exponenti": [49, 54, 56, 104, 108, 110, 117, 162, 163, 164, 165, 166, 213], "extend": 4, "extens": 158, "extern": [4, 7], "extract": [22, 38, 62, 115, 149, 151, 174, 196, 215, 217, 247, 249], "extractor": [27, 28, 29, 30], "extrem": 16, "ey": 204, "f": [1, 4, 5, 7, 45, 46, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 110], "facilit": [22, 43, 47, 56, 110, 113, 114, 115, 156, 158, 248, 256], "factor": [24, 49, 58, 59, 60, 62, 102, 103, 159, 166, 167, 168, 169, 175], "failur": [43, 44, 45, 46, 156], "fals": [1, 5, 19, 40, 41, 42, 63, 64, 65, 66, 67, 79, 81, 94, 96, 98, 99, 100, 101, 102, 103, 113, 114, 115, 128, 130, 162, 163, 167, 171, 177, 178, 179, 181, 183, 195, 196, 197, 198, 199, 200, 201, 202, 203, 215, 216, 217, 224, 229, 230, 246], "famili": 174, "fan": [98, 99, 102, 103], "fan_in": [98, 99], "fan_out": [98, 99], "fast": 166, "faster": [161, 165, 173], "fc": [44, 114, 115, 149, 150, 151, 152, 153, 154], "fc1": [29, 30, 39, 43, 47, 105, 107, 108, 109, 111, 130], "fc2": [29, 30, 39, 43, 47, 105, 107, 108, 109, 111, 130], "fc3": 30, "featur": [3, 20, 22, 25, 27, 28, 29, 30, 31, 36, 37, 38, 70, 72, 79, 115, 118, 119, 120, 121, 123, 124, 125, 128, 130, 138, 139, 140, 141, 142, 143, 144, 149, 150, 151, 152, 153, 154, 156, 161], "feature_extractor": 27, "fed": [3, 256], "feed": [3, 183, 256], "feedforward": 39, "fergu": [36, 38], "fetch": 0, "few": 39, "fewer": 1, "field": [5, 38], "file": [3, 174], "fill": [96, 100, 101, 177, 178, 179, 181, 200, 201, 202, 203], "filter": [36, 38, 58, 59, 60, 62, 114, 115, 123, 124, 125], "filter_height": 62, "filter_s": 62, "filter_width": 62, "final": [22, 23, 24, 25, 43, 44, 45, 46, 47, 245, 256], "find": [18, 215, 217], "fine": 256, "finish": 173, "first": [5, 11, 27, 36, 39, 44, 45, 70, 128, 162, 163, 164, 165, 166, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 235, 244, 245, 246, 256], "fit": 156, "fix": [44, 236], "flatten": [27, 47, 62, 192, 234, 237, 238], "flexibl": [1, 3, 4, 7, 22, 27, 31, 43, 44, 45, 46, 47, 156, 158, 175, 200, 201, 246, 256], "flip": [251, 253, 256], "float": [2, 5, 24, 40, 42, 49, 52, 63, 64, 65, 66, 67, 73, 74, 75, 79, 81, 82, 95, 96, 100, 101, 102, 103, 104, 106, 117, 118, 119, 120, 121, 123, 124, 125, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 175, 181, 183, 195, 198, 209, 230, 248, 250, 251, 252, 253], "float32": [40, 42, 183, 195, 196, 199, 200, 202, 230, 246], "float64": [203, 230, 246], "flow": [25, 47, 103, 105, 109, 111, 113, 114, 115, 128, 130, 171], "fly": [2, 3], "fname": 3, "focu": 7, "focus": 7, "follow": [0, 7, 8, 11, 17, 18, 19, 20, 31, 36, 39, 49, 50, 52, 53, 54, 55, 56, 57, 70, 72, 94, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 174, 175, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 215, 217, 235, 239, 247, 248, 249, 250, 251, 252, 253, 256], "form": [17, 192, 235, 238, 242, 256], "format": [2, 3, 5, 39, 133, 136, 246], "formul": 50, "formula": [11, 19, 56, 83, 84, 85, 110, 134, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 188, 229, 250], "forward": [7, 20, 23, 24, 25, 27, 28, 29, 30, 31, 36, 39, 40, 41, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "found": 7, "foundat": [41, 156, 158, 183], "four": 236, "frac": [9, 10, 11, 13, 14, 15, 16, 18, 19, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 70, 72, 83, 84, 85, 86, 87, 88, 90, 91, 92, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 149, 150, 151, 152, 153, 154, 160, 161, 162, 163, 164, 165, 166, 167, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 248], "frame": 67, "framework": [4, 7, 38, 133, 136, 138, 139, 140, 141, 142, 143, 157, 158, 256], "frequent": [133, 136], "from": [0, 1, 2, 3, 4, 5, 7, 14, 16, 32, 33, 34, 35, 39, 40, 41, 42, 43, 44, 45, 46, 47, 62, 70, 79, 81, 94, 96, 98, 99, 100, 101, 102, 103, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 149, 150, 151, 156, 157, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 177, 178, 179, 181, 182, 183, 188, 189, 190, 194, 196, 215, 216, 217, 224, 229, 231, 233, 235, 238, 240, 241, 242, 244, 247, 248, 249, 250, 251, 252, 253, 256], "full": 19, "full_matric": 19, "fulli": [4, 8, 20, 27, 28, 29, 30, 31, 36, 38, 72, 130, 182], "func": 174, "function": [3, 4, 5, 7, 8, 41, 43, 44, 45, 46, 47, 104, 105, 106, 107, 108, 109, 110, 111, 117, 118, 119, 120, 121, 123, 124, 125, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 156, 158, 175, 182, 245, 256], "fundament": [7, 72, 130, 246], "further": [7, 182, 216, 224, 229], "futur": 129, "g": [0, 10, 11, 14, 17, 19, 23, 24, 25, 27, 28, 29, 30, 31, 117, 157, 160, 167, 231, 250], "g_": 161, "g_t": 167, "gain": [102, 103], "gamma": [138, 139, 140, 141, 142, 143, 144], "gaussian": [50, 105], "gelu": [51, 69, 112, 127], "gelunetwork": 105, "gener": [16, 39, 95, 117, 118, 119, 120, 121, 142, 163, 165, 166, 173, 177, 178, 179, 180, 181, 182, 187, 195, 197, 198, 235, 249, 250, 251, 253, 256], "get": 5, "give": [7, 159, 167], "given": [10, 11, 14, 16, 17, 19, 62, 132, 133, 136, 157, 171, 201, 203, 245, 250, 251, 253, 256], "global": [0, 171, 173, 180, 182], "go": [23, 38], "goal": [132, 133, 136], "googlenet": [23, 38], "gpu": 38, "grad": [40, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 62, 70, 72, 94, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 149, 150, 151, 152, 153, 154, 157, 158, 177, 178, 179, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 251, 253, 254], "grad_output": 14, "gradient": [7, 8, 25, 38, 40, 42, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 177, 178, 179, 181, 195, 196, 197, 198, 199, 200, 201, 202, 203, 230, 246], "graph": [7, 103, 183, 195, 196, 199, 200, 201, 202, 203, 246], "grayscal": [5, 27, 28, 29, 30, 250, 256], "greater": 209, "green": 250, "grid": 235, "groundbreak": 38, "group": [44, 58, 59, 60, 113, 114, 115, 123, 124, 125, 157, 158], "group1": 44, "group2": 44, "guarante": 180, "h": [59, 60, 62, 66, 67, 84, 85, 87, 88, 91, 92, 94, 95, 124, 125, 139, 140, 142, 143, 147, 148, 151, 154, 247, 249], "h_": [59, 60, 84, 85, 87, 88, 91, 92, 94, 114, 115, 147, 148, 150, 151, 153, 154], "h_out": [59, 60, 87, 88, 91, 92], "h_stack": 233, "ha": [0, 11, 39, 47, 58, 59, 60, 123, 124, 125, 132, 133, 138, 139, 140, 141, 142, 143, 144, 157, 158, 188, 227, 231, 233, 241, 244, 250], "half": 222, "hand": 18, "handl": [0, 3, 7, 16, 41, 43, 44, 45, 46, 47, 133, 136, 156, 158, 173], "handwritten": [5, 30], "hardwar": 7, "hat": [162, 163, 164, 165, 166], "have": [0, 1, 10, 11, 13, 16, 17, 19, 42, 44, 46, 47, 59, 60, 103, 156, 199, 200, 201, 202, 203, 215, 217, 231, 233, 235, 240, 241, 244, 248, 254], "height": [59, 60, 62, 66, 67, 84, 85, 87, 88, 91, 92, 94, 95, 114, 115, 139, 140, 142, 143, 147, 148, 150, 151, 153, 154, 247, 249, 254], "help": [7, 24, 52, 54, 67, 104, 106, 108, 111, 138, 139, 140, 149, 150, 152, 153, 159, 162, 163, 165, 171, 172, 173, 175], "henc": 239, "here": [3, 9, 41, 70, 156, 158, 172, 173, 175, 182, 245, 246, 256], "hidden": [20, 36, 44], "hidden_s": 44, "hierarch": [44, 47, 156], "hierarchi": 114, "hierarchicalnetwork": 44, "high": [7, 178, 181], "higher": [133, 136, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 187, 188, 192, 213], "highest": 178, "highli": 38, "highlight": [152, 153, 154], "hint": 175, "histor": 161, "histori": [177, 178, 179, 181, 195, 196, 197, 198, 199, 200, 201, 202, 203], "hold": [43, 44, 45, 46], "horizont": [233, 241, 251, 256], "hot": [133, 136], "how": [2, 3, 7, 44, 47, 156, 175, 256], "howev": [40, 103], "hstack": 234, "http": 5, "huber": [75, 134], "huber_loss": [69, 76], "huberloss": [127, 137], "huberregressionmodel": 134, "hue": 256, "hyperbol": [57, 111, 211, 221, 226], "hyperparamet": [157, 159], "i": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 98, 99, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 213, 214, 215, 216, 217, 219, 220, 221, 222, 224, 225, 226, 227, 228, 229, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256], "ideal": [7, 47], "ident": [13, 14, 95, 127, 131, 180, 182, 199, 239], "identifi": 45, "idx": [2, 3], "ieee": 38, "ii": 227, "ij": [56, 94, 110, 186, 187, 188, 192, 235], "ik": [186, 187, 188], "ill": [10, 16], "ilsvrc": 38, "imag": [3, 4, 5, 20, 21, 23, 24, 25, 27, 28, 29, 30, 37, 38, 59, 81, 95, 114, 124, 142, 235, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256], "image_dir": 3, "image_path": 3, "imagedataset": 3, "imageio": 3, "imagenet": 38, "imbal": [133, 136], "impact": 165, "implement": [2, 3, 7, 16, 20, 22, 23, 24, 25, 27, 36, 38, 41, 62, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 233, 244, 250], "impli": [113, 114], "import": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 64, 67, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256], "improp": [44, 47, 182], "improv": [23, 24, 25, 36, 38, 79, 95, 105, 108, 111, 159, 160, 161, 162, 163, 164, 165, 166, 167, 175, 249, 252, 256], "imread": 3, "in1_featur": [70, 128], "in2_featur": [70, 128], "in_channel": [44, 47, 113, 114, 115, 123, 124, 125, 139, 140, 149, 150, 151, 152, 153, 154, 156], "in_featur": [43, 44, 47, 72, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 117, 118, 119, 128, 130, 132, 133, 134, 135, 136, 138, 141, 144, 149, 150, 151, 152, 153, 154], "incept": [23, 24, 25, 26, 38], "inception_v1": 38, "inception_v3": 38, "inception_v4": 38, "includ": [3, 4, 7, 8, 14, 15, 20, 22, 23, 24, 27, 31, 36, 39, 41, 42, 44, 46, 47, 94, 123, 124, 125, 156, 157, 158, 165, 175, 182, 188, 236], "inclus": [42, 45, 178, 181], "incom": [72, 130], "incomplet": 2, "incompletedataset": 2, "incorpor": [19, 105], "increas": [58, 59, 60, 62, 95, 161, 168, 172, 233, 244, 250, 251, 253, 256], "independ": [44, 58, 59, 60, 117, 118, 119, 120, 121, 144, 188, 198, 248, 250, 252, 254], "index": [0, 2, 5, 172, 195, 196, 199, 235, 239], "indexerror": 0, "indic": [0, 1, 31, 39, 42, 44, 46, 47, 74, 78, 133, 136, 149, 171, 183, 247, 249], "individu": [3, 44, 47, 134, 144, 158, 161, 168], "induc": [54, 108], "inf": 225, "infer": [44, 47, 173], "infin": [17, 19, 164], "inform": [7, 38, 39, 40, 158, 160, 173], "infti": [15, 166], "inherit": [1, 159, 167, 169], "init": 97, "initi": [1, 32, 33, 34, 35, 40, 42, 43, 44, 45, 46, 47, 96, 98, 99, 100, 101, 102, 103, 113, 114, 115, 128, 130, 132, 133, 134, 135, 136, 138, 139, 140, 144, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 177, 180, 181, 182, 195, 199, 200, 201, 202, 203, 230], "initial_accumulator_valu": 161, "inner": [7, 186, 204], "input": [7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 27, 28, 29, 30, 36, 38, 39, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 175, 182, 183, 184, 186, 187, 188, 192, 196, 198, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256], "input1": 128, "input2": 128, "input_": [20, 36, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 123, 124, 125, 146, 147, 148], "input_1": 70, "input_2": 70, "input_data": [104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 144, 149, 150, 151, 152, 153, 154], "input_s": [44, 46, 110, 133, 136], "input_shap": 39, "input_tensor": [7, 23, 24, 25, 27, 28, 29, 30, 31, 40, 43, 44, 45, 46, 47, 56, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 149, 150, 151, 152, 153, 154, 156, 247, 248, 249, 250, 251, 252, 253, 254], "insid": [3, 171, 173], "insight": [7, 38], "inspect": [41, 42, 47, 157], "instabl": [16, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169], "instal": 7, "instanc": [0, 1, 7, 21, 23, 24, 25, 28, 29, 30, 37, 39, 41, 42, 43, 45, 46, 47, 81, 141, 142, 143, 144, 157, 174, 230, 238, 242, 256], "instance_norm": [69, 80, 141, 142, 143], "instancenorm1d": [127, 145], "instancenorm1dmodel": 141, "instancenorm2d": [127, 145], "instancenorm3d": [127, 145], "instanti": [2, 174], "instead": [7, 39, 43, 44, 45, 46, 47, 98, 99, 102, 103, 162, 163, 164, 173, 175, 197, 198], "int": [0, 1, 2, 5, 14, 15, 20, 21, 22, 23, 24, 25, 27, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 56, 58, 59, 60, 62, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 100, 101, 102, 103, 110, 113, 114, 115, 123, 124, 125, 128, 130, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 162, 163, 164, 165, 166, 168, 174, 177, 178, 179, 180, 181, 183, 195, 196, 197, 199, 200, 202, 209, 215, 216, 217, 224, 228, 229, 230, 231, 236, 238, 239, 240, 241, 242, 243, 247, 249, 254], "integ": [1, 3, 14, 31, 58, 59, 60, 84, 85, 113, 114, 115, 144, 147, 148, 150, 151, 152, 153, 154, 175, 178, 179, 181, 182, 197, 200, 202, 216, 224, 228, 229, 236, 238, 239, 242], "integr": [1, 2, 4, 5, 8, 42, 44, 46, 47, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 128, 130, 149, 150, 151, 152, 153, 154], "intend": [40, 45, 46], "intens": [16, 248, 250], "intent": 175, "interact": [70, 128, 156, 182], "interfac": [2, 41, 44, 158], "interfer": [171, 173], "intermedi": 16, "intern": [43, 44, 45, 46, 47, 133, 136, 156, 247, 248, 249, 250, 251, 252, 253, 254], "interpol": [69, 93, 254], "interpret": [38, 56, 110, 175, 231], "interv": [177, 181, 195], "introduc": [23, 24, 38, 53, 105, 107, 109, 111, 117, 118, 119, 120, 121, 249, 252, 256], "introspect": 47, "intuit": [7, 43, 45, 156, 256], "inv": 12, "inv_a": 13, "invari": [150, 153], "invers": [7, 10, 13, 14, 16, 161, 206, 207, 208], "invert": [10, 13, 14, 18], "invok": 174, "involv": [9, 10, 11, 13, 16, 17, 19, 49, 50, 52, 53, 54, 55, 57, 70, 72, 94, 113, 114, 115, 128, 130, 175, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 203, 213, 214, 215, 217, 220, 222, 235, 236, 238, 242], "is_leaf": 183, "issu": [3, 108, 138, 139, 140, 162, 163], "item": 135, "iter": [0, 1, 2, 3, 40, 41, 44, 46, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 195], "ith": [56, 110], "its": [4, 14, 16, 20, 36, 38, 39, 40, 43, 44, 45, 46, 58, 59, 60, 62, 95, 103, 105, 107, 152, 153, 154, 156, 157, 160, 168, 171, 172, 173, 174, 195, 197, 198, 202, 215, 217, 230, 239, 248, 251, 253, 256], "itself": [9, 14, 43, 44, 45, 46], "j": [5, 56, 110, 138, 139, 140, 141, 142, 143, 149, 150, 152, 153, 235, 241, 247, 249], "jk": 187, "join": [3, 231], "json": 174, "k": [14, 58, 113, 133, 139, 140, 142, 143, 149, 152, 153, 186, 187, 196, 199, 231], "k_d": [60, 115, 151, 154], "k_h": [59, 60, 114, 115, 150, 151, 154], "k_w": [59, 60, 114, 115, 150, 151, 154], "kaim": [98, 99, 102, 103], "kaiming_norm": 97, "kaiming_uniform": 97, "karen": 38, "keep": [41, 107, 160, 173, 239], "keep_grad": [42, 177, 178, 179, 181, 183, 195, 196, 197, 198, 199, 200, 201, 202, 203, 230, 246], "keep_var": 41, "keepdim": [215, 216, 217, 224, 229], "kei": [38, 41, 43, 45, 47, 157], "kept": [216, 224, 229], "kernel": [27, 28, 29, 30, 36, 58, 59, 60, 62, 83, 84, 85, 86, 87, 88, 90, 91, 92, 113, 114, 115, 123, 124, 125, 146, 147, 148, 150, 151, 154], "kernel_s": [44, 47, 86, 87, 88, 90, 91, 92, 113, 114, 115, 123, 124, 125, 139, 140, 149, 150, 151, 152, 153, 154], "keyerror": 41, "keyword": [21, 32, 33, 34, 35, 37, 41, 129], "kj": [186, 188], "known": 38, "krizhevski": 38, "kroneck": [56, 110], "kwarg": [21, 23, 24, 25, 28, 29, 30, 32, 33, 34, 35, 37, 41, 129, 174], "l": [9, 16, 58, 65, 83, 86, 90, 117, 118, 119, 120, 121, 123, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146], "l2": [159, 160, 161, 162, 163, 164, 165, 166, 167, 169], "l_": [58, 83, 86, 90, 113, 146, 149, 152], "l_out": [58, 86, 90], "label": [4, 5, 24, 132, 133, 136], "lambd": 159, "lambda": [11, 54, 108, 159, 163], "lambda_1": 11, "lambda_2": 11, "lambda_i": 11, "lambda_n": 11, "languag": [4, 113, 128, 149, 152], "larg": [0, 3, 16, 38, 134, 156, 159, 162, 163, 164, 167, 168, 169, 173], "larger": [43, 45, 58, 59, 60, 62, 159, 189, 236, 247, 249, 254], "largest": 215, "last": [1, 56, 82, 110, 187, 188, 231, 251, 253], "latest": 4, "layer": [7, 20, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 41, 43, 44, 47, 56, 72, 79, 81, 82, 98, 99, 102, 103, 110, 113, 114, 115, 123, 124, 125, 128, 129, 130, 136, 144, 149, 150, 151, 152, 153, 154, 156, 182, 236, 246], "layer1": 174, "layer2": 174, "layer_group": 44, "layer_norm": [69, 80, 144], "layer_sequ": [44, 47], "layernorm": [127, 145], "layernormmodel": 144, "lead": [44, 47, 105, 141, 142, 143, 144, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 182], "leaf": 183, "leaki": [52, 106], "leaky_relu": [51, 69, 106], "leakyrelu": [112, 127], "learn": [1, 3, 4, 5, 7, 14, 16, 36, 37, 38, 43, 44, 45, 46, 53, 56, 104, 106, 107, 110, 113, 114, 115, 118, 119, 120, 121, 128, 130, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 180, 245, 246, 256], "learnabl": [40, 41, 42, 79, 81, 82, 113, 114, 115, 123, 124, 125, 128, 130, 138, 139, 140, 141, 142, 143, 144, 156], "least": [16, 17, 19, 227], "lecun": [5, 38], "left": [14, 15, 16, 19, 50, 56, 105, 110, 132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 152, 153, 154, 247, 249], "leftarrow": 165, "len": [0, 1, 2, 3, 235], "lenet": [26, 28, 29, 30, 38], "lenet_1": 38, "lenet_4": 38, "lenet_5": 38, "length": [44, 58, 65, 83, 86, 90, 113, 129, 138, 141, 146, 149, 152, 236, 248], "leq": [134, 166, 193, 209], "lerp": 94, "less": [0, 49, 52, 75, 104, 106, 133, 134, 136, 209], "let": 11, "level": 7, "leverag": [18, 25, 38, 156], "librari": [3, 7, 8, 41, 156, 157, 158, 174, 175, 182, 183, 256], "lightweight": 7, "like": [7, 38, 40, 41, 44, 47, 58, 102, 103, 108, 117, 138, 139, 140, 141, 142, 143, 171, 172, 175, 230, 246, 256], "likelihood": [78, 133, 136], "limit": [39, 160, 209], "linalg": [7, 12], "linalgerror": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "linear": [7, 8, 9, 16, 17, 18, 39, 43, 44, 45, 47, 49, 50, 52, 53, 54, 98, 99, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 117, 118, 119, 128, 129, 132, 133, 134, 135, 136, 138, 141, 144, 149, 150, 151, 152, 153, 154, 174, 199], "linearli": 134, "list": [0, 1, 27, 31, 39, 40, 42, 43, 44, 45, 46, 82, 129, 144, 157, 175, 177, 178, 179, 181, 183, 196, 197, 198, 200, 201, 202, 203, 228, 239, 240, 243, 245], "listdir": 3, "liter": [73, 74, 75, 77, 78, 94, 98, 99, 113, 114, 115, 123, 124, 125, 132, 133, 134, 135, 136, 235], "ln": 193, "load": [3, 4, 5, 40, 41, 42, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 174], "load_state_dict": [41, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "loader": [1, 2, 3], "local": [38, 62, 113], "locat": 94, "log": [78, 132, 133, 136, 204], "log_softmax": 136, "logarithm": [193, 213, 214], "logic": [3, 146, 147, 148, 156, 157], "logit": [20, 36, 56, 110, 133], "logsoftmax": [133, 136], "long": [165, 228], "loop": [1, 44, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "loss": [7, 16, 43, 44, 45, 46, 47, 56, 73, 74, 75, 77, 78, 104, 105, 106, 107, 108, 109, 110, 111, 117, 118, 119, 120, 121, 129, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "low": [7, 178, 181], "lower": [9, 101, 159, 167, 168, 169, 181], "lowest": 178, "lr": [157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "lu": 13, "lucid": [0, 1, 2, 5, 12, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 176, 204, 234, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254], "m": [31, 43, 44, 47, 150, 151, 153, 154, 162, 163, 164, 165, 166, 199], "m_": [162, 163, 164, 165, 166], "m_t": [165, 166], "machin": [3, 5, 7, 16, 162, 172, 180], "magnitud": [167, 168, 256], "mai": [3, 7, 11, 13, 16, 44, 46, 95, 134, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 173, 182, 250, 256], "main": [7, 17, 44, 196, 199], "maintain": [16, 40, 41, 43, 44, 45, 47, 54, 98, 99, 102, 103, 104, 105, 108, 117, 118, 119, 120, 121, 138, 139, 140, 141, 142, 143, 162, 167, 247, 250, 254], "make": [1, 3, 7, 22, 27, 38, 44, 47, 109, 133, 134, 144, 150, 153, 156, 161, 162, 163, 164, 172, 174, 182, 183, 188, 235, 245, 256], "manag": [7, 41, 43, 44, 45, 46, 47, 156, 158, 171, 173, 174, 182], "manhattan": 15, "mani": 39, "manipul": [7, 43, 45, 256], "manner": [44, 47], "manual": [73, 74, 78, 132, 133, 136, 173], "map": [41, 55, 57, 109, 111], "mask": [40, 117, 118, 119, 120, 121], "match": [18, 41, 44, 47, 73, 75, 77, 82, 123, 124, 125, 157, 213, 238, 239, 242, 243, 248, 256], "math": [210, 220, 225], "mathbf": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 70, 72, 94, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 149, 150, 151, 152, 153, 154, 186, 187, 188, 192, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254], "mathcal": [98, 100, 102, 117, 118, 119, 120, 121, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144], "mathemat": [13, 123, 124, 125, 249, 251, 252, 253], "mathrm": 16, "matmul": 204, "matric": [8, 10, 11, 13, 16, 18, 19, 186, 187, 188, 199, 235], "matrix": [7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 62, 70, 129, 130, 156, 186, 235], "matrix_pow": 12, "matthew": 38, "max": [15, 31, 53, 90, 91, 92, 107, 152, 153, 154, 164, 189, 204, 209], "max_pool": [152, 153, 154], "max_pool1d": [69, 89], "max_pool2d": [69, 89], "max_pool3d": [69, 89], "max_valu": 209, "maxim": 3, "maximum": [15, 107, 152, 153, 154, 162, 164, 204, 209, 215, 252], "maxpool": [20, 36], "maxpool1d": [127, 155], "maxpool1dmodel": 152, "maxpool2d": [44, 47, 114, 127, 155], "maxpool2dmodel": 153, "maxpool3d": [115, 127, 155], "maxpool3dmodel": 154, "mean": [5, 17, 39, 40, 54, 58, 59, 60, 63, 73, 74, 75, 77, 78, 79, 81, 100, 104, 105, 106, 107, 108, 109, 111, 115, 117, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 162, 163, 164, 165, 166, 167, 171, 179, 204, 209, 213, 214, 215, 217, 220, 222, 224, 227, 228, 229, 245, 248, 256], "meaning": [47, 175], "measur": [132, 133, 135, 136], "mechan": [7, 46, 70], "membership": 132, "memori": [2, 3, 173, 197, 198], "meshgrid": 234, "method": [3, 7, 8, 13, 43, 44, 45, 46, 47, 73, 74, 75, 77, 78, 98, 99, 102, 103, 132, 133, 134, 135, 136, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 182], "middl": 172, "might": 156, "min": [190, 204, 209], "min_valu": 209, "mind": [0, 3, 7, 44, 47, 173], "mini": 1, "minim": [4, 7, 47, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 158], "minimalist": 7, "minimum": [204, 209, 217], "minu": 109, "mirror": [201, 203], "mismatch": [41, 156, 157], "miss": [41, 156], "mitig": [52, 104, 106, 108, 138, 139, 140], "mnist": [4, 6, 28, 29], "mnist_train": [4, 5], "mode": [7, 67, 79, 81, 94, 98, 99, 117, 118, 119, 120, 121, 236], "model": [1, 3, 4, 7, 14, 17, 19, 20, 22, 27, 31, 36, 40, 41, 42, 43, 44, 45, 46, 47, 56, 95, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 144, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 174, 182, 245, 246, 256], "modern": 38, "modif": [47, 173], "modifi": [21, 37, 43, 44, 45, 46, 96, 98, 99, 100, 101, 102, 103, 117, 171, 173, 180, 233, 244], "modul": [5, 7, 20, 21, 22, 25, 27, 31, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 174, 175, 182, 246, 256], "modular": [3, 7, 38, 41, 44, 47, 156, 256], "moduledict": [44, 45, 47, 48], "modulelist": [46, 47, 48], "moment": [162, 163, 164, 165, 166], "momentum": [79, 81, 123, 124, 125, 138, 139, 140, 141, 142, 143, 159, 165, 167, 169], "momentum_decai": 165, "moor": 16, "more": [3, 4, 7, 11, 43, 44, 47, 104, 118, 119, 120, 121, 156, 157, 158, 159, 160, 163, 164, 167, 168, 169, 179, 188, 227, 241, 256], "most": [8, 153, 246, 247, 256], "move": [159, 167], "mse": [75, 77, 134, 135], "mse_loss": [69, 76], "mseloss": [127, 137], "mu": [100, 138, 139, 140, 141, 142, 143, 144, 229], "mu_c": 248, "mu_i": [141, 142, 143], "much": 256, "mul": 204, "multi": [3, 4, 38, 56, 74, 78, 110, 133, 136, 216, 224, 229], "multidimension": [177, 181, 197], "multipl": [1, 3, 7, 8, 14, 18, 20, 45, 46, 47, 62, 94, 95, 117, 118, 119, 120, 121, 133, 136, 156, 172, 177, 178, 179, 181, 186, 191, 197, 198, 245, 250, 256], "multipli": [14, 46, 72, 130, 168, 191, 192], "must": [0, 1, 3, 9, 10, 11, 13, 14, 17, 18, 19, 39, 41, 43, 44, 45, 46, 47, 82, 117, 118, 119, 120, 121, 136, 157, 173, 227, 231, 233, 236, 238, 239, 241, 242, 244, 247, 248, 249, 250, 251, 253], "my_simple_model": 174, "mymodel": [41, 42, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "myoptim": [157, 158], "n": [14, 15, 38, 43, 44, 47, 58, 59, 60, 62, 65, 66, 67, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 98, 100, 102, 113, 114, 115, 120, 121, 123, 124, 125, 128, 130, 132, 133, 135, 136, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 199, 216, 227, 229], "n1": 15, "nabla_": [160, 161, 162, 163, 164, 165, 166, 168], "nabla_t": 166, "nadam": 170, "name": [38, 39, 41, 43, 45, 47, 174, 175], "nan": [17, 19], "natur": [16, 38, 113, 128, 149, 152, 193, 213, 214], "ndarrai": [40, 42, 175, 183, 196, 198, 201, 203, 230], "ndim": [17, 19, 42, 183], "ne": 14, "nearest": 94, "necessari": [4, 5, 16, 173, 233, 244], "need": [2, 4, 44, 45, 46, 56, 128, 156, 173, 197, 198, 245, 246, 256], "neg": [14, 16, 19, 49, 78, 95, 104, 106, 107, 108, 133, 136, 168, 231], "negative_slop": [52, 106], "neglect": 46, "neighbor": 94, "neq": 15, "nest": [39, 44, 47, 156], "nestedmodel": 39, "nesterov": 165, "net": [36, 38], "network": [3, 4, 7, 20, 21, 25, 30, 31, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 53, 54, 55, 56, 57, 58, 59, 60, 70, 72, 79, 95, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 144, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 167, 169, 181, 182, 183, 195, 200, 202, 215, 217, 236, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256], "neural": [3, 4, 7, 20, 21, 30, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 53, 54, 55, 56, 57, 58, 59, 60, 70, 72, 79, 95, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 144, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 167, 169, 181, 182, 183, 195, 200, 202, 215, 217, 236, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256], "neuralnetwork": 107, "neuron": 106, "never": 250, "new": [41, 42, 49, 50, 52, 53, 54, 55, 57, 70, 72, 94, 98, 99, 100, 101, 102, 103, 157, 174, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 198, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 230, 231, 233, 236, 238, 239, 241, 242, 243, 244], "next": [47, 245], "nll": 78, "nll_loss": [69, 76], "nllloss": [127, 137], "nn": [5, 7, 20, 22, 27, 31, 36, 39, 48, 51, 61, 68, 71, 76, 80, 89, 93, 97, 112, 116, 122, 126, 127, 131, 137, 145, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 174, 246, 256], "no_grad": 171, "node": 183, "nois": [19, 182], "non": [11, 14, 16, 19, 46, 50, 52, 53, 98, 99, 104, 105, 106, 107, 108, 109, 111, 117, 118, 119, 120, 121, 162, 163, 173, 193, 209], "none": [0, 1, 2, 5, 22, 27, 39, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 149, 150, 151, 152, 153, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 172, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 199, 201, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251, 253, 254], "norm": [8, 12, 164], "normal": [5, 50, 54, 56, 57, 79, 81, 82, 97, 98, 102, 105, 108, 110, 117, 123, 124, 125, 138, 139, 140, 141, 142, 143, 144, 167, 179, 182, 245, 255, 256], "normalized_shap": [82, 144], "note": [58, 117], "noth": [63, 64, 65, 66], "notimplementederror": [2, 41, 157], "notin": 209, "nov": 38, "np": [40, 42, 133, 136, 175, 183, 188, 195, 196, 199, 200, 202, 203, 214, 230, 246], "npy": 5, "num_class": [20, 21, 22, 23, 24, 25, 31, 32, 33, 34, 35, 36, 37, 110, 133, 136], "num_featur": [47, 123, 124, 125, 138, 139, 140, 141, 142, 143], "num_paramet": 46, "number": [0, 1, 2, 5, 10, 11, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 42, 44, 46, 47, 58, 59, 60, 62, 65, 66, 67, 70, 72, 74, 78, 79, 81, 83, 84, 85, 94, 95, 98, 99, 102, 103, 109, 113, 114, 115, 123, 124, 125, 128, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 150, 151, 152, 153, 154, 159, 177, 180, 181, 183, 193, 195, 197, 199, 215, 216, 217, 228, 229, 231, 233, 236, 238, 239, 240, 242, 244, 248, 250, 251, 253, 256], "numer": [13, 16, 73, 74, 79, 81, 82, 123, 124, 125, 132, 133, 138, 139, 140, 141, 142, 143, 144, 160, 161, 162, 163, 164, 165, 166, 167, 175, 185, 195, 200, 202], "numpi": [7, 40, 42, 133, 136, 175, 183, 188, 196, 199, 214, 227, 230, 236, 238, 242, 246, 256], "o": [3, 151, 154, 200, 201], "object": [1, 3, 8, 38, 41, 45, 46, 135, 156, 173, 184, 185, 189, 190, 191, 194, 230], "observ": 162, "obtain": 1, "occur": [95, 173, 174, 231], "occurr": 14, "odot": [117, 118, 119, 120, 121], "off": 171, "offer": [4, 7, 156, 158, 182, 256], "offset": 199, "often": [14, 58, 59, 60, 62, 133, 136, 195, 202, 246, 250, 254, 256], "older": 165, "onc": 173, "one": [0, 46, 47, 56, 58, 72, 86, 90, 108, 109, 110, 113, 119, 123, 124, 125, 133, 136, 138, 141, 149, 152, 157, 172, 175, 179, 194, 201, 215, 217, 232, 237, 241, 246], "ones": [70, 72, 113, 114, 115, 130, 138, 139, 140, 141, 142, 143, 144, 156, 199, 201, 204], "ones_lik": 204, "onli": [7, 39, 94, 107, 117, 118, 119, 120, 121, 132, 133, 136, 138, 139, 140, 141, 142, 143, 144, 152, 153, 154, 168, 171, 195, 209, 215, 217, 227, 236, 237, 239, 240], "onto": [17, 19], "openml": 5, "oper": [3, 7, 8, 13, 16, 40, 41, 44, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 62, 67, 70, 72, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 171, 172, 173, 175, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 197, 198, 200, 202, 213, 214, 215, 216, 217, 220, 222, 224, 227, 229, 231, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 254], "operatornam": [14, 16], "opposit": 159, "optim": [3, 7, 8, 14, 16, 17, 19, 22, 23, 24, 25, 40, 42, 45, 46, 62, 113, 114, 115, 156, 173], "optimizer_st": [157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "option": [1, 5, 15, 19, 20, 21, 22, 23, 24, 25, 27, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 49, 52, 56, 59, 60, 63, 64, 65, 66, 67, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 86, 87, 88, 90, 91, 92, 94, 95, 98, 99, 100, 101, 102, 103, 104, 106, 110, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 149, 150, 151, 152, 153, 154, 157, 159, 167, 169, 177, 178, 179, 181, 183, 195, 196, 197, 198, 199, 200, 201, 202, 203, 215, 216, 217, 224, 228, 229, 230, 231, 235, 238, 240, 241, 246, 250, 251, 253], "ord": 15, "order": [1, 3, 15, 19, 43, 44, 45, 46, 47, 228, 245], "ordered_dict": 47, "ordereddict": [41, 43, 44, 47], "organ": [43, 44, 45, 47, 174], "orient": 256, "origin": [24, 30, 63, 95, 111, 236, 237, 238, 239, 242, 243, 254], "orthogon": [16, 17, 19], "orthonorm": 17, "oscil": [159, 167, 169], "other": [2, 3, 7, 13, 24, 27, 30, 40, 41, 44, 47, 98, 99, 117, 156, 157, 171, 173, 182, 183, 195, 197, 200, 202, 227, 235, 256], "otherwis": [49, 52, 53, 54, 56, 104, 106, 107, 108, 110, 118, 119, 120, 121, 134, 149, 150, 151, 152, 153, 154, 157, 168, 174, 189, 190, 215, 217], "otim": [16, 70, 128], "out": [0, 3, 4, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 70, 72, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 98, 99, 102, 103, 113, 114, 115, 117, 118, 119, 120, 121, 146, 147, 148, 149, 150, 151, 152, 153, 154, 159, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244], "out_channel": [27, 44, 47, 113, 114, 115, 123, 124, 125, 139, 140, 149, 150, 151, 152, 153, 154, 156], "out_featur": [43, 44, 47, 70, 72, 104, 105, 106, 107, 108, 109, 110, 111, 114, 115, 117, 118, 119, 128, 130, 132, 133, 134, 135, 136, 138, 141, 144, 149, 150, 151, 152, 153, 154], "outcom": [250, 251, 253], "outer": 204, "outlier": [75, 134], "output": [0, 1, 2, 7, 14, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 64, 65, 66, 67, 70, 72, 83, 84, 85, 94, 95, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 178, 179, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 198, 199, 200, 202, 203, 213, 214, 215, 216, 217, 220, 222, 224, 227, 228, 229, 235, 236, 238, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254], "output_height": 62, "output_lay": [44, 47], "output_s": [44, 83, 84, 85, 146, 147, 148], "output_width": 62, "outsid": 0, "over": [0, 1, 2, 3, 8, 36, 41, 44, 46, 56, 83, 84, 85, 110, 113, 114, 115, 133, 136, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 159, 160, 161, 162, 163, 177, 181, 215, 216, 217, 224, 227, 229, 250, 251, 253], "overdetermin": 16, "overfit": [1, 20, 36, 64, 67, 118, 119, 120, 121, 159, 162, 167, 169], "overrid": [2, 3], "overridden": [41, 157], "overwrit": [43, 45], "own": [4, 43, 44, 45, 46, 58, 59, 60, 103, 156, 248], "p": [15, 16, 42, 45, 46, 63, 64, 65, 66, 67, 117, 118, 119, 120, 121, 149, 152, 153, 250, 251, 253, 256], "p_d": [151, 154], "p_h": [150, 151, 154], "p_w": [150, 151, 154], "packag": [2, 3, 4, 8, 38, 156, 158, 174, 180, 182, 246, 256], "pad": [27, 44, 47, 58, 59, 60, 62, 83, 84, 85, 86, 87, 88, 90, 91, 92, 113, 114, 115, 123, 124, 125, 139, 140, 146, 147, 148, 149, 150, 151, 152, 153, 154, 234], "pad_after_dim1": 236, "pad_after_dim2": 236, "pad_before_dim1": 236, "pad_before_dim2": 236, "pad_width": 236, "padding_height": 62, "padding_width": 62, "pair": 70, "paper": 23, "parallel": [1, 3, 38], "param": [41, 42, 45, 46, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "param1": 41, "param_dict": 45, "param_group": [157, 158], "param_groups_setup": 157, "param_list": 46, "param_s": 174, "paramet": [0, 2, 7, 28, 29, 30, 38, 41, 156, 157, 158, 175, 182, 256], "parameterdict": 48, "parameterlist": 48, "parent": 156, "part": [40, 41, 103, 156, 171, 173, 182, 195, 196, 199, 200, 201, 202, 203, 246, 256], "partial": [9, 10, 11, 13, 14, 15, 16, 18, 19, 49, 50, 52, 53, 54, 55, 56, 57, 70, 72, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 149, 150, 151, 152, 153, 154, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244], "particip": [42, 246], "particular": [43, 45], "particularli": [7, 16, 44, 45, 46, 47, 56, 72, 110, 123, 124, 125, 130, 133, 136, 141, 142, 143, 144, 163, 171, 174, 245], "pass": [2, 7, 16, 20, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 39, 41, 42, 43, 44, 45, 46, 47, 94, 104, 105, 106, 107, 108, 109, 111, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 144, 149, 150, 151, 152, 153, 154, 156, 175, 183, 216, 224, 227, 228, 229, 231, 233, 237, 239, 240, 244, 246, 256], "past": [159, 160, 162, 167], "patch": [62, 150], "path": [3, 5], "pattern": [38, 53, 107, 113, 114, 115], "penal": [159, 167, 169], "penalti": [160, 161, 162, 163, 164, 165, 166], "penros": 16, "per": [1, 83, 141, 142, 143, 144, 146], "perform": [3, 7, 8, 9, 16, 20, 27, 28, 29, 30, 31, 36, 38, 41, 42, 46, 50, 58, 59, 60, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 117, 118, 119, 120, 121, 128, 129, 130, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 171, 173, 180, 182, 184, 185, 188, 191, 194, 213, 215, 217, 224, 228, 245, 247, 249, 254, 256], "permut": 228, "persist": [40, 177, 178, 179, 181, 197, 198], "perturb": [11, 18, 19, 256], "phi": [50, 105], "pi": [50, 105, 210, 220, 225], "pil": [246, 256], "pinv": 12, "pioneer": 38, "pipelin": [5, 182, 245, 246, 248], "pixel": [5, 94, 248, 250], "place": [96, 98, 99, 100, 101, 102, 103], "placehold": [41, 129], "plai": [175, 182], "plot": 235, "point": [4, 95, 171], "pool": [20, 27, 28, 29, 30, 31, 36, 38, 83, 84, 85, 86, 87, 88, 90, 91, 92, 114, 115, 146, 147, 148, 149, 150, 151, 152, 153, 154, 215, 217], "pool1": 47, "pool2": 47, "poorli": 13, "popul": 41, "popular": [4, 38], "portion": 256, "pose": 16, "posit": [1, 9, 14, 41, 47, 95, 104, 106, 107, 108, 149, 150, 151, 152, 153, 154, 168, 172, 193, 238, 242, 249], "possibl": [7, 256], "potenti": [16, 129, 167, 240], "power": [7, 14, 172, 173, 204, 245, 246, 256], "pp": 38, "practic": [16, 133, 136], "practition": 256, "preced": [42, 183], "predefin": [4, 38, 44, 108], "predict": [132, 133, 135, 136], "prefix": [41, 174], "prepar": [3, 172, 236, 238, 242, 246, 256], "prepend": 41, "preprint": 38, "preprocess": [3, 4, 62, 95, 182, 245, 246, 256], "present": [132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 150], "preserv": [63, 95, 117, 195, 196, 199, 200, 201, 202, 203, 216, 224, 229], "preset": 4, "prevent": [1, 43, 44, 45, 46, 47, 64, 67, 118, 119, 120, 121, 132, 133, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 173], "previou": [159, 168, 173], "previous": 162, "primari": [7, 175], "primarili": 47, "print": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 171, 172, 173, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254], "probabilist": 182, "probabl": [24, 50, 56, 63, 64, 65, 66, 67, 73, 105, 110, 117, 118, 119, 120, 121, 132, 133, 136, 250, 251, 253, 256], "problem": [16, 17, 19, 52, 104, 106, 166], "proceed": 38, "process": [2, 3, 4, 14, 17, 19, 20, 36, 38, 46, 58, 59, 60, 81, 95, 108, 111, 113, 115, 123, 124, 125, 128, 138, 139, 140, 141, 142, 143, 144, 149, 151, 152, 154, 159, 175, 235, 246, 247, 248, 249, 254, 256], "produc": [20, 36, 39, 83, 84, 85, 113, 114, 115, 146, 147, 148, 180, 182], "product": [7, 17, 19, 109, 128, 144, 156, 186, 187, 191, 192], "program": [171, 182], "progress": 161, "project": [17, 19], "projector": 16, "promin": [149, 151, 152, 153, 154], "promot": [47, 133, 136, 156], "propag": [10, 11, 13, 16, 17, 18, 19, 41, 47, 70, 72, 94, 150, 151, 167, 168, 186, 187, 188, 192, 215, 217, 235, 236, 239, 243], "properli": [0, 46, 56, 110, 156], "properti": [8, 10, 13, 14, 50, 54, 63, 105, 108, 117, 161, 166], "proport": [5, 229], "proportion": 254, "provid": [0, 1, 2, 3, 4, 5, 7, 8, 21, 22, 23, 24, 27, 31, 37, 38, 41, 43, 44, 45, 46, 50, 72, 84, 85, 95, 132, 133, 134, 136, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 167, 169, 171, 173, 175, 180, 182, 183, 188, 195, 201, 215, 217, 228, 230, 238, 240, 242, 256], "pseudo": [13, 16], "purpos": [177, 181, 195, 200, 202], "python": 175, "pytorch": 230, "q": 17, "qr": 12, "quad": [16, 132, 133, 134, 135, 136, 152, 153, 154, 184, 185, 189, 190, 191, 194, 247], "quadrat": 134, "quotient": 185, "r": [17, 250, 251, 252, 253], "r_t": 166, "radam": 170, "rais": [0, 1, 2, 41, 156, 157, 193], "rand": [176, 182], "randint": [176, 182], "randn": [20, 31, 36, 156, 176, 180, 182], "random": [1, 2, 3, 249, 250, 251, 252, 253, 256], "random_integ": 182, "random_tensor": 182, "randomcrop": [255, 256], "randomgrayscal": [255, 256], "randomhorizontalflip": [255, 256], "randomli": [1, 63, 64, 65, 66, 67, 95, 117, 118, 119, 120, 121, 249, 250, 251, 252, 253, 256], "randomnoisedataset": [0, 1, 2], "randomrot": [255, 256], "randomverticalflip": 255, "rang": [0, 1, 8, 46, 55, 57, 58, 59, 74, 78, 103, 109, 111, 159, 167, 169, 178, 206, 207, 209, 248, 252, 256], "rank": 16, "rate": [157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "rather": [45, 46, 163, 239], "ratio": 254, "ravel": 234, "raw": [56, 110, 133, 175], "re": [42, 173], "readabl": [43, 44, 45, 47, 156, 175], "readi": [3, 7, 38], "real": [16, 19, 109], "rearrang": 62, "receiv": [152, 153, 154, 236], "recent": 167, "recept": 38, "reciproc": [16, 204, 214, 222], "recognit": [30, 38, 114], "rectangular": 199, "rectif": 166, "rectifi": [52, 53, 106, 107, 166], "recurr": [44, 144], "recurs": [39, 41], "red": 250, "reduc": [20, 31, 36, 38, 138, 139, 140, 141, 142, 143, 149, 150, 151, 152, 153, 154, 165, 168, 173, 175, 215, 216, 217, 224, 229, 250], "reduct": [19, 73, 74, 75, 77, 78, 132, 133, 134, 135, 136, 215, 217], "reevalu": 157, "refer": [4, 7, 41, 182, 196, 199, 231], "reflect": 171, "regardless": [16, 237], "region": [60, 83, 84, 85, 94, 147, 148, 236, 247, 256], "regist": [40, 41, 42, 46, 156, 174], "register_buff": 40, "register_model": [21, 23, 24, 25, 28, 29, 30, 32, 33, 34, 35, 37], "register_paramet": 41, "registr": [41, 156], "registri": 174, "registry_path": 174, "regress": [4, 77, 134, 135], "regular": [16, 20, 24, 36, 67, 118, 119, 120, 121, 159, 160, 161, 164, 165, 166, 167, 169], "relat": [173, 199, 200], "relationship": 254, "relev": [94, 159, 167, 169], "reli": 173, "reliabl": 5, "reliant": [118, 119, 120, 121], "relu": [7, 20, 31, 36, 38, 39, 43, 44, 45, 47, 49, 51, 52, 69, 98, 99, 102, 103, 104, 106, 112, 113, 114, 115, 123, 124, 125, 127, 128, 129, 130], "relu1": 47, "relu2": 47, "relu3": 47, "remain": [5, 40, 82, 117, 118, 119, 120, 121, 168], "rememb": 182, "remov": [174, 240], "rep": 242, "repeat": [234, 235, 242], "repetit": [238, 242], "replac": [182, 250], "repres": [13, 15, 19, 27, 41, 42, 47, 70, 72, 79, 81, 82, 113, 114, 115, 128, 130, 133, 136, 144, 157, 158, 159, 165, 166, 167, 168, 169, 175, 184, 185, 191, 194, 196, 216, 227, 228, 229, 235, 247, 249, 251, 252, 253, 254], "represent": [150, 153, 157], "reproduc": [177, 178, 179, 180, 181, 182, 256], "requir": [2, 3, 4, 7, 40, 43, 47, 49, 50, 52, 53, 54, 55, 57, 70, 72, 94, 103, 129, 133, 136, 156, 171, 173, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 225, 226, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 254], "requires_grad": [40, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 62, 70, 72, 94, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 149, 150, 151, 152, 153, 154, 156, 177, 178, 179, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246], "rescal": [73, 74, 78, 132, 133, 136], "research": 156, "reset": [42, 180, 183], "reshap": [7, 72, 114, 115, 172, 175, 234, 237], "residu": 25, "resili": 168, "resiz": [94, 245, 255, 256], "resourc": 173, "respect": [9, 10, 11, 13, 14, 15, 16, 17, 19, 27, 31, 40, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 70, 72, 94, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 149, 150, 151, 152, 153, 154, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 209, 213, 214, 215, 216, 217, 220, 222, 224, 227, 228, 229, 235, 236, 238, 242, 250], "respons": [43, 158], "restor": 173, "restructur": 239, "result": [9, 13, 14, 16, 38, 41, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 70, 72, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 110, 156, 157, 171, 173, 177, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 230, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 249, 250, 256], "resum": 158, "retain": [42, 183, 195, 202, 215, 216, 217, 224, 229, 246], "retent": 246, "retriev": [0, 2, 43, 45, 46], "return": [0, 1, 2, 3, 5, 7, 27, 40, 41, 43, 44, 45, 46, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 144, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 174, 175, 245, 256], "reus": 246, "reusabl": [47, 156, 245], "revers": [7, 47, 228, 251, 253], "revert": 173, "rgb": [23, 24, 25], "rho": 160, "rho_": 166, "rho_t": 166, "right": [14, 15, 16, 18, 19, 50, 56, 105, 110, 132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 152, 153, 154, 247], "risk": 175, "rmsprop": 170, "rob": 38, "robust": [95, 117, 118, 119, 120, 121, 134, 156, 160, 249, 250, 252, 256], "role": [175, 182, 256], "root": [4, 5, 161, 167, 222], "rotat": [69, 93, 252, 256], "rotated_imag": 95, "rout": [152, 153, 154], "routin": 7, "row": [10, 11, 13, 18, 72, 199, 235, 244], "rprop": 170, "rule": [13, 14, 172, 184, 185, 189, 190, 191, 193, 194], "run": [7, 40, 79, 81, 123, 124, 125, 138, 139, 140, 141, 142, 143, 160, 173, 180, 182], "running_mean": [40, 79, 81, 138, 139, 140, 141, 142, 143], "running_var": [79, 81, 138, 139, 140, 141, 142, 143], "runtim": [44, 47, 156], "s_": 168, "s_d": [151, 154], "s_h": [150, 151, 154], "s_w": [150, 151, 154], "same": [10, 11, 13, 14, 18, 56, 63, 64, 65, 66, 67, 79, 81, 82, 84, 85, 95, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 129, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 168, 180, 182, 188, 198, 201, 203, 213, 215, 216, 217, 231, 233, 237, 239, 240, 241, 244, 248], "sampl": [0, 1, 2, 3, 5, 7, 23, 24, 25, 27, 28, 29, 30, 83, 84, 85, 98, 99, 100, 101, 102, 103, 117, 118, 119, 120, 121, 128, 130, 133, 136, 144, 146, 147, 148, 179, 182, 247, 249, 251, 252, 253, 254], "satisfi": [9, 11, 18], "satur": [104, 256], "save": [2, 40, 42, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 174], "scalabl": [3, 156], "scalar": [10, 15, 73, 74, 75, 77, 78, 175], "scale": [11, 16, 28, 29, 30, 38, 49, 54, 56, 79, 81, 82, 102, 103, 104, 106, 108, 109, 110, 111, 117, 118, 119, 120, 121, 133, 138, 139, 140, 141, 142, 143, 144, 159, 161, 162, 163, 175, 182, 229, 254], "scenario": [45, 46, 144, 163, 164, 246, 250], "schedul": 159, "scientif": 172, "score": [56, 133], "scratch": 7, "script": 182, "seamless": [0, 1, 3, 4, 156, 182], "seamlessli": [3, 4, 8, 42, 44, 47, 156, 175, 256], "second": [11, 44, 45, 70, 128, 162, 163, 164, 165, 166, 172, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 233, 235, 253], "section": 188, "see": [7, 188], "seed": [176, 177, 178, 179, 181, 182, 256], "seen": 160, "select": [94, 152, 154, 224], "self": [0, 1, 2, 3, 7, 20, 22, 27, 31, 36, 39, 40, 41, 42, 43, 44, 45, 46, 54, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 128, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 174, 235, 245, 246], "selu": [51, 63, 69, 112, 117, 127], "selunetwork": 108, "sensit": [75, 134, 138, 139, 140], "sentiment": 4, "separ": [0, 58, 59, 60, 141, 142, 143], "sequenc": [14, 43, 45, 58, 195, 231, 233, 236, 238, 241, 242, 244, 245], "sequenti": [20, 27, 31, 36, 39, 43, 44, 48, 58, 123, 124, 125, 129, 245, 256], "seri": [22, 28, 29, 58, 113, 123, 149, 152], "serial": [40, 41, 158], "serv": [3, 31, 41, 43, 44, 45, 46, 47, 156, 168, 246], "set": [3, 4, 5, 39, 42, 46, 58, 59, 60, 106, 107, 108, 113, 114, 115, 117, 120, 121, 128, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 157, 162, 163, 167, 177, 178, 179, 180, 181, 182, 183, 195, 197, 198, 202, 203, 209, 215, 217, 230, 246, 250, 256], "setup": [4, 7], "sever": [16, 113, 114, 115, 149, 150, 151, 152, 153, 154, 173, 245, 256], "sgd": [7, 159, 166, 170], "sgn": 15, "shape": [3, 4, 5, 7, 10, 11, 13, 14, 16, 20, 27, 31, 36, 38, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 172, 175, 177, 178, 179, 181, 182, 183, 186, 197, 198, 199, 200, 201, 202, 203, 209, 214, 215, 216, 217, 220, 222, 224, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 244, 247, 248, 249, 250, 251, 252, 253, 254, 256], "shapelik": 178, "share": 38, "shift": [79, 81, 82, 138, 139, 140, 141, 142, 143, 144], "shorthand": 188, "should": [27, 40, 173, 177, 178, 179, 181, 197, 198, 206, 207, 227, 236, 245], "show": [171, 174], "showcas": 7, "shown": 180, "shrink": 160, "shuffl": [1, 2, 3], "side": [18, 44, 47, 58, 59, 60, 86, 87, 88, 90, 91, 92, 113, 114, 115, 123, 124, 125, 149, 150, 151, 152, 153, 154, 173], "sigma": [16, 98, 100, 102, 109, 138, 139, 140, 141, 142, 143, 144, 228], "sigma_c": 248, "sigma_i": 16, "sigmoid": [51, 69, 98, 99, 102, 103, 112, 127, 132], "sigmoidnetwork": 109, "sign": [14, 134, 168, 204], "signal": [113, 114, 115, 123, 138, 141, 149, 150, 151, 152, 153, 154], "signific": 173, "significantli": [38, 245], "sim": [117, 118, 119, 120, 121], "similar": [7, 98, 99, 188, 214, 230, 236], "similarli": [19, 227], "simonyan": 38, "simpl": [3, 4, 7, 39, 47, 58, 59, 60, 70, 72, 86, 87, 88, 90, 91, 92, 105, 107, 108, 109, 111, 113, 114, 115, 117, 118, 119, 120, 121, 128, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 186, 187, 192, 245], "simplebinaryclassificationmodel": 132, "simpleclassificationmodel": [133, 136], "simplegelumodel": 105, "simpleleakyrelumodel": 106, "simplemodel": [7, 39, 130, 174], "simpleregressionmodel": 135, "simplerelumodel": 107, "simpleselumodel": 108, "simplesigmoidmodel": 109, "simpletanhmodel": 111, "simpli": [171, 227, 228, 239], "simplic": [38, 107], "simplifi": [4, 28, 47, 123, 124, 125], "simul": [39, 256], "simultan": 95, "sin": [204, 210], "sinc": [14, 17, 43, 44, 45, 46, 58, 59, 60, 103, 171, 173, 179, 235, 256], "sine": [207, 220, 221], "singl": [0, 4, 14, 17, 19, 56, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 123, 124, 125, 133, 144, 150, 151, 152, 153, 154, 157, 175, 181, 197, 231, 240, 248, 250, 256], "singleton": 144, "singular": [10, 13, 14, 16, 18, 19], "sinh": [204, 211, 226], "size": [0, 1, 2, 3, 19, 27, 28, 29, 30, 36, 39, 42, 44, 58, 59, 60, 62, 65, 66, 67, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 113, 114, 115, 123, 124, 125, 128, 130, 132, 133, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 174, 178, 181, 182, 183, 215, 216, 217, 224, 229, 231, 233, 240, 243, 244, 247, 249, 254, 256], "skip": 173, "slice": [70, 227], "slide": [62, 149, 151, 152, 154], "slightli": 256, "slope": [52, 104, 106], "slow": [3, 166], "small": [16, 28, 29, 30, 38, 52, 73, 74, 79, 81, 82, 106, 108, 132, 133, 134, 138, 139, 140, 141, 142, 143, 144, 150, 153, 160, 161, 162, 163, 164, 165, 166, 167, 168], "smaller": [36, 38, 44, 47, 156, 161, 162, 190, 247, 249, 254], "smallest": 217, "smooth": [24, 50, 104, 105, 159, 167, 256], "smoother": 159, "so": [43, 44, 45, 46, 95, 156, 166, 197, 198, 245], "softmax": [51, 69, 112, 127, 133], "softmaxmodel": 110, "solut": [16, 18], "solv": [8, 9, 12, 16, 17, 19], "solver": 8, "some": [49, 64, 95, 117, 118, 119, 138, 139, 140, 141, 142, 143, 161, 162, 163, 173, 175], "sometim": 172, "sophist": [44, 47], "sourc": 182, "space": [11, 17, 19, 58, 59, 60, 62, 83, 84, 85, 113, 114, 115, 123, 124, 125, 146, 147, 148, 195, 256], "span": 4, "spars": [161, 162], "spatial": [20, 31, 36, 114, 115, 124, 138, 139, 140, 141, 142, 143, 144, 150, 151, 152, 153, 154, 235], "spatio": 115, "special": [0, 1, 7, 16, 40, 41, 42, 117, 182], "specif": [4, 7, 43, 44, 45, 46, 47, 103, 117, 118, 119, 120, 121, 141, 142, 143, 156, 157, 171, 182, 197, 215, 217, 238, 242], "specifi": [0, 1, 2, 3, 4, 5, 7, 15, 21, 27, 31, 32, 33, 34, 35, 37, 39, 44, 56, 62, 67, 73, 74, 75, 77, 78, 82, 83, 84, 85, 94, 95, 110, 113, 114, 115, 132, 133, 134, 135, 136, 144, 146, 147, 148, 150, 151, 152, 153, 154, 157, 175, 177, 178, 179, 180, 181, 193, 195, 196, 197, 198, 199, 200, 202, 203, 209, 215, 216, 217, 224, 228, 229, 230, 231, 233, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 252, 254, 256], "speech": 141, "speed": [159, 160, 161, 162, 163, 164, 165, 166, 167, 169], "split": [4, 231, 233, 244], "springer": 38, "sqrt": [50, 98, 99, 102, 103, 105, 138, 139, 140, 141, 142, 143, 144, 160, 161, 162, 163, 165, 166, 167, 204, 206, 207], "squar": [1, 3, 9, 10, 11, 13, 14, 16, 17, 18, 19, 75, 77, 134, 135, 160, 161, 162, 167, 204, 222], "squaredataset": [0, 1, 2, 3], "squeez": 234, "stabil": [13, 16, 73, 74, 79, 81, 82, 123, 124, 125, 132, 133, 138, 139, 140, 141, 142, 143, 144, 159, 160, 161, 162, 163, 164, 165, 166, 167, 248], "stabl": [98, 99, 102, 103, 117, 133, 159, 163, 164, 167, 168, 169], "stack": [47, 233, 234, 244, 256], "standard": [50, 52, 98, 100, 102, 104, 105, 106, 117, 168, 179, 182, 188, 245, 248, 256], "start": [1, 3, 159, 161, 168, 195, 247, 249], "state": [38, 40, 41, 42, 44, 47, 157, 171, 173, 180], "state_dict": [41, 42, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "static": 47, "statist": [16, 63, 79, 81], "std": [5, 100, 245, 248, 256], "step": [42, 62, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 195, 245, 246], "step_siz": 168, "still": 160, "stochast": [7, 159, 169], "stop": 195, "storag": [43, 45, 183], "store": [2, 4, 5, 40, 41, 42, 43, 44, 45, 46, 146, 147, 148, 173, 183, 247, 248, 249, 250, 251, 252, 253, 254], "str": [5, 31, 41, 43, 45, 47, 73, 74, 75, 77, 78, 94, 157, 174, 235], "straightforward": [169, 171, 184], "strategi": 158, "streamlin": [2, 3], "strict": [41, 157], "stride": [27, 28, 29, 30, 44, 47, 58, 59, 60, 62, 83, 84, 85, 86, 87, 88, 90, 91, 92, 113, 114, 115, 123, 124, 125, 146, 147, 148, 149, 150, 151, 152, 153, 154], "stride_height": 62, "stride_width": 62, "string": [41, 43, 45, 47, 113, 114, 115, 157], "structur": [0, 7, 17, 40, 41, 44, 156, 157, 174, 175, 199, 246], "style": [81, 141, 142, 235], "sub": [43, 44, 45, 46, 47, 156, 204, 247, 249], "sub_tensor": 183, "subclass": [1, 2, 3, 7, 41, 42, 43, 156, 157], "sublay": 39, "submodul": [39, 41, 156], "subsequ": [44, 47, 103, 182], "subset": [118, 119], "subtract": [7, 194, 248], "suffer": 161, "suit": [24, 98, 99, 102, 103], "suitabl": [28, 29, 30, 134, 161, 162, 177], "sum": [15, 43, 44, 45, 46, 47, 56, 73, 74, 75, 77, 78, 110, 132, 133, 134, 135, 136, 161, 184, 187, 192, 204, 227, 229, 231, 233, 235, 238, 242, 244], "sum_": [14, 56, 110, 132, 133, 135, 136, 138, 139, 140, 141, 142, 143, 144, 149, 150, 151, 186, 187, 216, 224, 227, 229, 235, 238], "sum_i": [15, 192], "sum_j": 192, "sum_k": 188, "summar": [149, 150, 151], "summat": 14, "super": [7, 39, 40, 41, 42, 43, 44, 45, 46, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 128, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 144, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 174], "support": [1, 3, 4, 7, 8, 14, 15, 16, 17, 19, 43, 44, 45, 46, 47, 94, 95, 156, 158, 165, 182, 183, 184, 185, 188, 189, 190, 191, 193, 194, 196, 199, 209, 214, 216, 220, 222, 224, 227, 228, 229, 231, 235, 239, 246, 256], "suppos": 256, "sure": [156, 256], "svd": [12, 16], "symmetr": [9, 83, 84, 85, 102, 103, 111], "syntax": [1, 188], "system": [8, 9, 16, 17, 18, 38, 171, 235], "systemat": 256, "szegedi": [23, 38], "t": [16, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 183, 188, 230, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256], "t0": 159, "t1": 230, "t2": 230, "tabular": 4, "tailor": [4, 156, 256], "take": [17, 149, 150, 151, 152, 153, 154, 173, 245], "taken": 227, "tan": 204, "tangent": [57, 111, 208, 225, 226], "tanh": [44, 47, 50, 51, 69, 98, 99, 102, 103, 105, 112, 127, 204], "tanhnetwork": 111, "target": [5, 47, 73, 74, 75, 77, 78, 83, 84, 85, 94, 132, 133, 134, 135, 136, 146, 147, 148, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 247, 249, 254], "target_tensor": [132, 133, 134, 135, 136], "target_transform": 5, "task": [4, 7, 8, 20, 21, 23, 24, 25, 28, 29, 30, 38, 55, 56, 59, 70, 73, 74, 77, 78, 109, 110, 113, 114, 115, 132, 133, 134, 135, 136, 141, 142, 143, 149, 151, 152, 154, 162, 172, 182, 199, 256], "techniqu": [9, 13, 36, 79, 117, 118, 119, 120, 121, 141, 142, 143, 158, 254, 256], "tempor": [113, 115, 151, 154], "temporarili": 173, "tensor": [2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 27, 28, 29, 30, 31, 36, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 171, 173, 175, 177, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256], "term": [16, 70, 123, 124, 125, 159, 163, 165, 166, 167, 169], "test": [4, 5], "test_siz": 5, "text": [4, 10, 14, 15, 43, 49, 52, 53, 54, 56, 58, 59, 60, 83, 84, 85, 86, 87, 88, 90, 91, 92, 98, 99, 102, 103, 104, 106, 107, 108, 110, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 132, 133, 134, 135, 136, 149, 150, 151, 152, 153, 154, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 178, 184, 185, 187, 189, 190, 191, 193, 194, 205, 209, 215, 216, 217, 219, 224, 229, 231, 233, 236, 237, 238, 239, 240, 242, 243, 244, 247, 248, 249, 251, 252, 253], "th": [70, 132, 133, 135, 136, 141, 142, 143, 189, 190, 193], "than": [0, 1, 45, 46, 49, 52, 75, 104, 106, 134, 157, 163, 209, 227, 236, 241, 247, 249, 254], "thei": [0, 7, 19, 40, 44, 46, 47, 175, 235, 239, 247, 249, 256], "them": [3, 41, 46, 62, 159, 172, 231, 241, 245, 248, 256], "therebi": [117, 150, 151, 153, 154], "theta": [159, 160, 252], "theta_": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "theta_t": [166, 167], "thi": [0, 1, 2, 3, 5, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 27, 38, 39, 40, 42, 44, 45, 46, 47, 53, 55, 56, 57, 58, 59, 60, 62, 70, 72, 83, 94, 95, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 128, 129, 130, 132, 133, 134, 136, 138, 139, 140, 141, 142, 143, 144, 146, 149, 150, 151, 152, 153, 154, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 178, 179, 180, 182, 183, 187, 188, 192, 195, 197, 200, 201, 202, 203, 209, 213, 214, 215, 216, 217, 220, 222, 224, 227, 228, 229, 230, 236, 238, 239, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256], "thing": 173, "those": [7, 28, 29, 30, 46, 103], "three": [19, 30, 60, 85, 88, 92, 115, 121, 123, 124, 125, 140, 143, 148, 151, 154], "threshold": [16, 75, 134], "through": [0, 3, 4, 7, 11, 16, 17, 19, 20, 22, 27, 36, 43, 44, 47, 70, 72, 94, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 117, 118, 119, 120, 121, 128, 129, 130, 138, 139, 140, 141, 144, 149, 150, 151, 152, 153, 154, 179, 186, 187, 192, 235, 237, 239, 240, 243, 256], "throughout": [54, 246], "tile": 234, "time": [0, 3, 14, 28, 29, 30, 58, 106, 108, 113, 123, 149, 150, 151, 152, 153, 154, 159, 160, 161, 162, 163, 167, 169, 173, 238, 242], "to_tensor": 5, "togeth": [47, 245, 256], "too": 168, "tool": [3, 7, 156, 172, 182, 245, 256], "top": [9, 10, 11, 17, 19, 70, 72, 94, 113, 114, 115, 128, 130, 247, 249], "torch": [31, 230], "total": [0, 1, 2, 5, 21, 23, 24, 25, 28, 29, 30, 32, 33, 34, 35, 37, 39, 42, 183, 239], "totensor": [245, 256], "trace": [8, 204], "track": [7, 123, 124, 125, 138, 139, 140, 141, 142, 143, 156, 171, 173, 177, 178, 179, 181, 195, 196, 197, 198, 199, 200, 201, 202, 203, 230, 246], "track_running_stat": [123, 124, 125, 138, 139, 140, 141, 142, 143], "tradit": [160, 161, 164, 165, 166], "trail": 82, "train": [1, 2, 3, 4, 5, 7, 22, 23, 24, 39, 40, 41, 44, 46, 47, 56, 63, 64, 65, 66, 67, 79, 81, 95, 105, 106, 108, 109, 110, 111, 117, 118, 119, 120, 121, 138, 139, 140, 141, 142, 143, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 245, 248, 249, 250, 251, 252, 253, 256], "trainabl": [39, 138, 139, 140, 141, 142, 143, 156], "transfer": [81, 141, 142], "transform": [2, 4, 5, 7, 11, 45, 70, 72, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 172, 235], "transform_pipelin": [245, 256], "transformed_imag": [245, 256], "transit": 134, "translat": [150, 153], "transpos": [7, 9, 204], "treat": [0, 40, 144, 156], "triangular": [9, 17], "true": [1, 2, 3, 4, 5, 19, 22, 23, 24, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 62, 63, 64, 65, 66, 67, 70, 72, 79, 81, 94, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 149, 150, 151, 152, 153, 154, 156, 157, 162, 163, 167, 171, 177, 178, 179, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 233, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246], "truncat": 39, "truncate_from": 39, "try": 0, "tune": 256, "tupl": [2, 3, 5, 11, 17, 19, 39, 41, 42, 58, 59, 60, 62, 82, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 113, 114, 115, 123, 124, 125, 129, 144, 147, 148, 149, 150, 151, 152, 153, 154, 162, 163, 164, 165, 166, 168, 175, 177, 178, 179, 181, 183, 197, 200, 202, 215, 216, 217, 224, 229, 231, 233, 235, 236, 239, 240, 241, 243, 244, 247, 248, 249, 254], "twice": 236, "two": [7, 10, 11, 13, 14, 16, 17, 19, 28, 29, 30, 31, 58, 59, 60, 70, 87, 91, 114, 120, 128, 139, 142, 150, 153, 162, 163, 164, 165, 166, 168, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 227, 235], "type": [40, 41, 42, 70, 128, 183, 195, 196, 197, 198, 199, 200, 201, 202, 203, 230, 235, 246], "typeerror": [0, 1, 2, 41, 157], "typic": [8, 40, 56, 63, 95, 108, 110, 136, 138, 139, 140, 141, 142, 143, 158, 159, 167, 169, 173, 175, 243, 246, 248, 252, 254, 256], "u": [16, 19, 99, 101, 103], "u_": 164, "unchang": [40, 67, 104, 106, 107, 108, 117, 118, 119, 120, 121, 129, 237, 240], "undefin": 193, "under": 156, "underbrac": 14, "underdetermin": 16, "undergo": 256, "underli": [0, 7, 23, 24, 25, 230, 233, 237, 239, 244], "understand": [7, 36, 38, 39, 47, 256], "unexpect": [41, 44, 47, 182], "unfold": [61, 69], "unifi": 0, "uniform": [97, 99, 103, 113, 114, 115, 128, 130, 176, 177, 178, 182, 250, 251, 252, 253], "uniformli": [177, 181], "uniniti": [197, 198], "unintend": 173, "union": 31, "uniqu": [9, 16, 18, 43, 45], "unit": [20, 27, 36, 49, 50, 52, 53, 54, 98, 99, 102, 103, 104, 105, 106, 107, 108, 117], "unless": 183, "unlik": [40, 43, 44, 45, 46, 52, 104, 106, 117, 144, 160, 161, 163, 164, 165, 166, 168], "unnecessari": 173, "unpad": 236, "unseen": 256, "unsqueez": 234, "unstabl": 13, "up": [157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 252, 254], "updat": [4, 40, 46, 47, 117, 118, 119, 120, 121, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173], "upon": [24, 38, 43, 44, 45, 46], "upper": [17, 101, 168, 181], "us": [0, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 16, 17, 19, 22, 23, 24, 25, 27, 28, 29, 30, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 70, 72, 77, 79, 81, 84, 85, 94, 95, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 171, 172, 173, 174, 177, 178, 179, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 213, 215, 216, 217, 224, 229, 235, 236, 238, 240, 242, 243, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256], "usag": [3, 8, 44, 47, 157, 158, 247, 248, 249, 250, 251, 252, 253, 254], "use_aux": [22, 23, 24], "user": [1, 2, 3, 4, 7, 43, 44, 45, 46, 156, 161, 245, 246, 256], "usual": 133, "util": [3, 7, 8, 45, 46, 156, 182], "v": [11, 16, 19, 162, 163, 165, 166, 196], "v1": [22, 23, 38], "v3": [22, 24, 25, 38], "v4": [22, 25, 38], "v_": [159, 162, 163, 165, 166, 167, 169], "v_stack": 244, "v_t": [166, 167], "val": 96, "valid": [113, 114, 115, 123, 124, 125, 228], "valu": [7, 10, 14, 15, 16, 19, 39, 41, 43, 45, 47, 49, 52, 55, 56, 57, 58, 59, 60, 62, 73, 74, 75, 77, 78, 79, 81, 82, 83, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 111, 117, 118, 119, 120, 121, 123, 124, 125, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 149, 150, 151, 152, 153, 154, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 175, 177, 178, 179, 180, 181, 182, 195, 196, 197, 198, 199, 205, 206, 207, 209, 212, 213, 214, 215, 217, 219, 220, 222, 223, 231, 236, 237, 239, 243, 248, 250, 251, 253], "valuabl": 182, "valueerror": [1, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 157], "vanish": [104, 108, 138, 139, 140], "var": 204, "vari": [44, 46, 83, 94, 146, 252], "variabl": [41, 47, 83, 84, 85, 129, 146, 147, 148, 156, 171, 173, 177, 197, 249, 252], "varianc": [54, 63, 79, 81, 98, 99, 102, 103, 108, 117, 123, 124, 125, 138, 139, 140, 141, 142, 143, 144, 162, 163, 164, 165, 166, 179, 229, 252, 256], "variant": [31, 32, 33, 34, 35, 162, 163, 164], "variat": [141, 142, 143, 249, 256], "varieti": [4, 182, 256], "variou": [22, 27, 38, 107, 158, 182, 215, 217, 236, 246], "vdot": 192, "vector": [11, 16, 17, 18, 19, 70, 72, 128, 130, 186, 187, 188, 192], "veloc": [159, 167, 169], "veri": [16, 38, 160], "versa": 168, "versatil": [182, 235], "version": [19, 22, 27, 28, 29, 167, 192, 250], "vertic": [241, 244, 253], "vgg": 31, "vggnet": [26, 32, 33, 34, 35, 38], "vggnet_11": 38, "vggnet_13": 38, "vggnet_16": 38, "vggnet_19": 38, "via": [3, 4], "vice": 168, "video": [60, 67, 115, 125, 143, 151, 154], "view": [27, 44, 150, 151, 152, 153, 154, 239], "vision": [38, 59, 114, 128, 256], "visual": [36, 38], "vol": 38, "volumetr": [60, 67, 115, 125, 143, 151, 154], "vstack": 234, "w": [59, 60, 62, 66, 67, 70, 72, 84, 85, 87, 88, 91, 92, 94, 95, 113, 114, 115, 124, 125, 128, 130, 139, 140, 142, 143, 147, 148, 151, 154, 247, 249], "w_": [59, 60, 84, 85, 87, 88, 91, 92, 94, 114, 115, 147, 148, 150, 151, 153, 154], "w_out": [59, 60, 87, 88, 91, 92], "wa": [23, 117, 118, 119, 120, 121, 173], "wai": [1, 21, 37, 171, 173, 239], "want": [0, 7, 245, 247], "warn": [43, 45], "we": [3, 7, 172, 235], "weight": [38, 58, 59, 60, 70, 72, 73, 74, 78, 79, 81, 82, 94, 98, 99, 102, 103, 113, 114, 115, 117, 118, 119, 120, 121, 128, 130, 132, 133, 136, 138, 139, 140, 141, 142, 143, 144, 156, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 177, 182], "weight1": 45, "weight2": 45, "weight_decai": [159, 160, 161, 162, 163, 164, 165, 166, 167, 169], "well": [24, 98, 99], "were": 47, "what": 173, "when": [0, 1, 3, 7, 14, 41, 44, 46, 47, 49, 52, 58, 59, 60, 104, 129, 138, 139, 140, 141, 142, 143, 157, 160, 168, 171, 173, 174, 175, 182, 193, 245, 247], "where": [3, 4, 5, 10, 11, 13, 14, 15, 16, 17, 19, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 65, 66, 67, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 149, 150, 151, 152, 153, 154, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 175, 182, 184, 185, 189, 190, 191, 193, 194, 197, 198, 209, 213, 214, 215, 216, 217, 220, 222, 224, 227, 228, 229, 231, 236, 238, 242, 245, 246, 247, 248, 249, 250, 251, 252, 253], "whether": [1, 10, 22, 23, 24, 41, 42, 98, 99, 167, 171, 177, 178, 179, 181, 183, 197, 198, 215, 216, 217, 224, 229], "which": [0, 7, 10, 11, 13, 14, 15, 16, 17, 19, 25, 32, 33, 34, 35, 38, 41, 43, 45, 47, 52, 56, 75, 95, 104, 105, 106, 110, 111, 117, 134, 136, 138, 139, 140, 141, 142, 143, 144, 162, 163, 165, 167, 171, 173, 175, 177, 178, 181, 206, 207, 208, 209, 210, 211, 214, 215, 216, 217, 218, 220, 221, 222, 224, 225, 226, 227, 229, 231, 238, 239, 241, 243, 246, 247, 249, 250, 251, 252, 253, 254, 256], "while": [7, 38, 44, 47, 63, 105, 107, 156, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 173, 239, 241, 250, 256], "who": [7, 43, 44, 45, 46], "whose": [19, 198, 201, 203, 205, 209, 213, 219], "wide": [4, 5, 8, 16, 53, 107, 113, 114, 133], "wider": [58, 59], "width": [59, 60, 62, 66, 67, 84, 85, 87, 88, 91, 92, 94, 95, 114, 115, 139, 140, 142, 143, 147, 148, 150, 151, 153, 154, 247, 249, 254], "window": [86, 87, 88, 90, 91, 92, 149, 150, 151, 152, 153, 154, 160, 215, 217], "wise": [49, 50, 52, 53, 54, 55, 56, 57, 110, 117, 118, 119, 120, 121, 123, 124, 125, 156, 172, 184, 185, 188, 189, 190, 191, 193, 194, 205, 206, 207, 208, 209, 210, 211, 212, 214, 218, 219, 220, 221, 222, 223, 225, 226, 227, 233, 244], "within": [2, 38, 39, 40, 43, 44, 45, 46, 47, 57, 94, 95, 103, 105, 107, 108, 109, 111, 113, 114, 115, 117, 118, 119, 129, 132, 133, 134, 135, 136, 138, 139, 140, 141, 144, 149, 150, 151, 152, 153, 154, 158, 173, 195, 209, 252, 256], "without": [7, 43, 44, 45, 70, 72, 113, 114, 115, 128, 130, 171, 174, 215, 237, 239, 243], "won": 173, "work": [1, 2, 3, 7, 9, 172, 175], "workflow": [182, 256], "workload": 7, "wrap": [3, 156, 173, 230], "wrapper": 156, "x": [7, 8, 18, 27, 31, 39, 40, 41, 43, 44, 45, 46, 47, 56, 70, 72, 95, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 177, 178, 179, 181, 197, 198, 213, 235, 247, 248, 249, 250, 251, 252, 253, 254], "x1": 128, "x2": 128, "x_": [133, 136, 235], "x_c": [133, 136], "x_i": 132, "x_k": 133, "xavier": [98, 99, 102, 103], "xavier_norm": 97, "xavier_uniform": 97, "xy": 235, "x\u2081": 128, "x\u2082": 128, "y": [43, 44, 45, 46, 47, 95, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 117, 118, 119, 120, 121, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 149, 150, 151, 152, 153, 154, 177, 178, 179, 181, 197, 198, 235, 250], "y_": [133, 136, 235], "y_c": [133, 136], "y_i": 132, "yann": [5, 38], "yet": [7, 172], "yield": [0, 1, 41, 173], "you": [0, 39, 44, 46, 47, 156, 158, 171, 173, 182, 197, 198, 199, 203, 228, 230, 245, 247, 256], "your": [156, 158, 171, 173, 182, 256], "z": [198, 202, 203], "zeiler": [36, 38], "zero": [14, 16, 17, 24, 39, 49, 52, 58, 59, 60, 63, 64, 65, 66, 67, 86, 87, 88, 90, 91, 92, 96, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 113, 114, 115, 117, 118, 119, 120, 121, 144, 149, 150, 151, 152, 153, 154, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 197, 198, 199, 203, 204, 209, 219, 236], "zero_grad": [42, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 183], "zeros_lik": [198, 204], "zfnet": [26, 38], "zisserman": 38, "\u03c3\u1d62": 16}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "datasets.MNIST", "Image Datasets", "Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "models.alexnet", "Inception", "models.inception_v1", "models.inception_v3", "models.inception_v4", "ConvNets", "LeNet", "models.lenet_1", "models.lenet_4", "models.lenet_5", "VGGNet", "models.vggnet_11", "models.vggnet_13", "models.vggnet_16", "models.vggnet_19", "ZFNet", "models.zfnet", "lucid.models", "models.summarize", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.LeakyReLU", "nn.ReLU", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Tanh", "Activation Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "Fused Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "lucid.nn", "optim.Optimizer", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.types", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.meshgrid", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.unsqueeze", "lucid.vstack", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": 172, "1d": 172, "2": 172, "2d": 172, "3": 172, "It": [171, 173], "ab": 205, "activ": [51, 69, 112, 127], "ad": 172, "adadelta": 160, "adagrad": 161, "adam": 162, "adamax": 164, "adamw": 163, "adaptive_avg_pool1d": 83, "adaptive_avg_pool2d": 84, "adaptive_avg_pool3d": 85, "adaptiveavgpool1d": 146, "adaptiveavgpool2d": 147, "adaptiveavgpool3d": 148, "add": 184, "addit": 16, "admonit": 175, "advanc": [62, 256], "alexnet": [20, 21], "algebra": 12, "algorithm": [159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "alias": 175, "align": 172, "alpha_dropout": 63, "alphadropout": 117, "also": 158, "anoth": 230, "arang": 195, "arcco": 206, "architectur": [20, 28, 29, 30, 36], "arcsin": 207, "arctan": 208, "asgd": 159, "attribut": [5, 20, 27, 31, 36, 40, 42, 43, 44, 45, 46, 47, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 183, 247, 248, 249, 250, 251, 252, 253, 254], "avg_pool1d": 86, "avg_pool2d": 87, "avg_pool3d": 88, "avgpool1d": 149, "avgpool2d": 150, "avgpool3d": 151, "axi": 172, "backpropag": 183, "backward": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 70, 72, 94, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 149, 150, 151, 152, 153, 154, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244], "batch_norm": 79, "batchnorm1d": 138, "batchnorm2d": 139, "batchnorm3d": 140, "bceloss": 132, "behavior": [83, 84, 85, 146, 147, 148], "benefit": 173, "bilinear": [70, 128], "binari": 204, "binary_cross_entropi": 73, "broadcast": 172, "buffer": 40, "calcul": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 62, 70, 72, 83, 84, 85, 94, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254], "captur": 174, "case": 175, "centercrop": 247, "choleski": 9, "class": [0, 1, 2, 5, 20, 22, 27, 31, 36, 40, 41, 42, 43, 44, 45, 46, 47, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 183, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254], "clip": 209, "co": 210, "combin": 0, "compon": [3, 7, 156], "compos": 245, "concatdataset": [0, 1], "concaten": 231, "conclus": [3, 7, 156, 171, 172, 173, 182, 246, 256], "constant": 96, "contain": 48, "conv1d": [58, 113], "conv2d": [59, 114], "conv3d": [60, 115], "convbnrelu1d": 123, "convbnrelu2d": 124, "convbnrelu3d": 125, "convnet": [26, 38], "convolut": [61, 69, 116, 127], "core": 7, "cosh": 211, "creat": [42, 183, 230], "cross_entropi": 74, "crossentropyloss": 133, "cube": 212, "custom": [1, 2, 3, 41, 157, 158, 256], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 5, 6], "defin": [2, 41, 157, 158], "definit": 175, "descript": 174, "det": 10, "detail": 16, "diag": 196, "dilat": 62, "div": 185, "dot": 186, "dropout": [64, 68, 69, 118, 122, 127], "dropout1d": [65, 119], "dropout2d": [66, 120], "dropout3d": [67, 121], "eig": 11, "elu": [49, 104], "empti": 197, "empty_lik": 198, "exampl": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 256], "exp": 213, "ey": 199, "featur": [4, 7, 8, 158, 182, 256], "flatten": 232, "forward": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 62, 70, 72, 83, 84, 85, 94, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 248, 249, 250, 251, 252, 253, 254], "from": 230, "function": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 28, 29, 30, 32, 33, 34, 35, 37, 39, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 171, 173, 174, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244], "fuse": [126, 127], "futur": 4, "gelu": [50, 105], "gener": [176, 204], "get": 158, "grad_en": 171, "gradient": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 70, 72, 94, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 149, 150, 151, 152, 153, 154, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244], "guidelin": 175, "how": [171, 173], "hstack": 233, "huber_loss": 75, "huberloss": 134, "ident": 129, "imag": [6, 255], "incept": 22, "inception_v1": 23, "inception_v3": 24, "inception_v4": 25, "index": 183, "init": [96, 98, 99, 100, 101, 102, 103], "initi": 97, "inner": 187, "input": 230, "inspect": [158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "instance_norm": 81, "instancenorm1d": 141, "instancenorm2d": 142, "instancenorm3d": 143, "integr": [3, 156, 182, 256], "interpol": 94, "inv": 13, "iter": 183, "kaiming_norm": 98, "kaiming_uniform": 99, "kei": [3, 4, 7, 156, 158, 182, 256], "layer": [112, 116, 122, 126, 127, 131, 137, 145, 155], "layer_norm": 82, "layernorm": 144, "leaky_relu": 52, "leakyrelu": 106, "learn": 182, "lenet": 27, "lenet_1": 28, "lenet_4": 29, "lenet_5": 30, "limit": 7, "linalg": [8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "linear": [12, 69, 71, 72, 127, 130, 131], "list": 230, "load": 1, "log": 214, "loss": [69, 76, 127, 137], "lucid": [3, 4, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 38, 69, 156, 158, 171, 172, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 256], "matmul": 188, "matrix": 188, "matrix_pow": 14, "max": 215, "max_pool1d": 90, "max_pool2d": 91, "max_pool3d": 92, "maximum": 189, "maxpool1d": 152, "maxpool2d": 153, "maxpool3d": 154, "mean": 216, "meshgrid": 235, "metadata": 174, "method": [0, 1, 2, 5, 27, 31, 41, 42, 157, 183], "min": 217, "minimum": 190, "mnist": 5, "model": [21, 23, 24, 25, 28, 29, 30, 32, 33, 34, 35, 37, 38, 39, 156], "modul": [41, 127], "moduledict": 43, "modulelist": 44, "more": 182, "mse_loss": 77, "mseloss": 135, "mul": 191, "multipl": [0, 188], "nadam": 165, "new": 172, "newaxi": 172, "nll_loss": 78, "nllloss": 136, "nn": [40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 69, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156], "no_grad": 173, "norm": 15, "normal": [69, 80, 100, 127, 145, 248], "note": 7, "number": 176, "ones": 200, "ones_lik": 201, "oper": [12, 188, 204], "optim": [157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170], "organ": 156, "outer": 192, "overview": [3, 4, 7, 22, 23, 24, 25, 27, 28, 29, 30, 156, 158, 182, 256], "pad": 236, "paramet": [1, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 31, 32, 33, 34, 35, 36, 37, 39, 40, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 173, 174, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254], "parameterdict": 45, "parameterlist": 46, "perform": 183, "pinv": 16, "pipelin": [3, 256], "pitfal": [171, 173], "pool": [69, 89, 127, 155], "potenti": [171, 173], "power": 193, "properti": [42, 183], "qr": 17, "radam": 166, "rais": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "rand": 177, "randint": 178, "randn": 179, "random": [176, 177, 178, 179, 180, 181, 182], "randomcrop": 249, "randomgrayscal": 250, "randomhorizontalflip": 251, "randomrot": 252, "randomverticalflip": 253, "ravel": 237, "reciproc": 218, "refer": [5, 158], "register_model": 174, "relu": [53, 107], "repeat": 238, "reshap": 239, "resiz": 254, "return": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 28, 29, 30, 32, 33, 34, 35, 37, 39, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 171, 173, 177, 178, 179, 180, 181, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244], "rmsprop": 167, "rotat": 95, "rprop": 168, "rule": 188, "see": 158, "seed": 180, "selu": [54, 108], "sequenti": 47, "sgd": 169, "sigmoid": [55, 109], "sign": 219, "signatur": [0, 1, 2, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 64, 65, 66, 67, 70, 72, 73, 74, 75, 77, 78, 79, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 119, 120, 121, 123, 124, 125, 128, 129, 130, 132, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 174, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254], "sin": 220, "sinh": 221, "slice": 183, "softmax": [56, 110], "solv": 18, "sqrt": 222, "squar": 223, "squeez": 240, "stack": 241, "start": 158, "state": [158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169], "sub": 194, "sum": 224, "summar": 39, "summari": 39, "svd": 19, "tabl": 39, "tan": 225, "tanh": [57, 111, 226], "tensor": [172, 183, 204, 230, 234], "through": 183, "tile": 242, "totensor": 246, "trace": 227, "track": 183, "transform": [245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256], "transpos": 228, "type": 175, "unari": 204, "unfold": 62, "uniform": [101, 181], "unsqueez": 243, "us": [1, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 175, 230], "usag": [4, 7, 23, 24, 25, 27, 28, 29, 30, 40, 95, 171, 172, 173, 175, 235, 245, 246, 256], "util": [69, 93], "utilit": 234, "var": 229, "vggnet": 31, "vggnet_11": 32, "vggnet_13": 33, "vggnet_16": 34, "vggnet_19": 35, "vstack": 244, "weight": 97, "why": 175, "work": [4, 171, 173], "xavier_norm": 102, "xavier_uniform": 103, "zero": 202, "zeros_lik": 203, "zfnet": [36, 37]}})