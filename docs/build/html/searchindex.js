Search.setIndex({"alltitles": {"@ Operator": [[106, "operator"]], "Activation Functions": [[18, null]], "Activation Layers": [[65, null], [70, null]], "Additional Details": [[9, "additional-details"]], "Admonitions and Usage Guidelines": [[94, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[29, "advanced-example-with-dilation"]], "Attributes": [[13, "attributes"], [15, "attributes"], [57, "attributes"], [58, "attributes"], [59, "attributes"], [60, "attributes"], [61, "attributes"], [62, "attributes"], [63, "attributes"], [64, "attributes"], [66, "attributes"], [67, "attributes"], [68, "attributes"], [71, "attributes"], [72, "attributes"], [73, "attributes"], [75, "attributes"], [76, "attributes"], [77, "attributes"], [78, "attributes"], [79, "attributes"], [80, "attributes"], [81, "attributes"], [83, "attributes"], [84, "attributes"], [85, "attributes"], [86, "attributes"], [87, "attributes"], [88, "attributes"], [101, "attributes"]], "Backward Gradient Calculation": [[2, "backward-gradient-calculation"], [3, "backward-gradient-calculation"], [4, "backward-gradient-calculation"], [6, "backward-gradient-calculation"], [7, "backward-gradient-calculation"], [8, "backward-gradient-calculation"], [9, "backward-gradient-calculation"], [10, "backward-gradient-calculation"], [11, "backward-gradient-calculation"], [12, "backward-gradient-calculation"], [16, "backward-gradient-calculation"], [17, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [20, "backward-gradient-calculation"], [21, "backward-gradient-calculation"], [22, "backward-gradient-calculation"], [23, "backward-gradient-calculation"], [24, "backward-gradient-calculation"], [37, "backward-gradient-calculation"], [39, "backward-gradient-calculation"], [57, "backward-gradient-calculation"], [58, "backward-gradient-calculation"], [59, "backward-gradient-calculation"], [60, "backward-gradient-calculation"], [61, "backward-gradient-calculation"], [62, "backward-gradient-calculation"], [63, "backward-gradient-calculation"], [64, "backward-gradient-calculation"], [66, "backward-gradient-calculation"], [67, "backward-gradient-calculation"], [68, "backward-gradient-calculation"], [71, "backward-gradient-calculation"], [72, "backward-gradient-calculation"], [73, "backward-gradient-calculation"], [75, "backward-gradient-calculation"], [76, "backward-gradient-calculation"], [77, "backward-gradient-calculation"], [78, "backward-gradient-calculation"], [79, "backward-gradient-calculation"], [80, "backward-gradient-calculation"], [81, "backward-gradient-calculation"], [83, "backward-gradient-calculation"], [84, "backward-gradient-calculation"], [85, "backward-gradient-calculation"], [86, "backward-gradient-calculation"], [87, "backward-gradient-calculation"], [88, "backward-gradient-calculation"], [102, "backward-gradient-calculation"], [103, "backward-gradient-calculation"], [104, "backward-gradient-calculation"], [105, "backward-gradient-calculation"], [106, "backward-gradient-calculation"], [107, "backward-gradient-calculation"], [108, "backward-gradient-calculation"], [109, "backward-gradient-calculation"], [110, "backward-gradient-calculation"], [111, "backward-gradient-calculation"], [112, "backward-gradient-calculation"], [120, "backward-gradient-calculation"], [121, "backward-gradient-calculation"], [122, "backward-gradient-calculation"], [123, "backward-gradient-calculation"], [124, "backward-gradient-calculation"], [125, "backward-gradient-calculation"], [126, "backward-gradient-calculation"], [127, "backward-gradient-calculation"], [128, "backward-gradient-calculation"], [129, "backward-gradient-calculation"], [130, "backward-gradient-calculation"], [131, "backward-gradient-calculation"], [132, "backward-gradient-calculation"], [133, "backward-gradient-calculation"], [134, "backward-gradient-calculation"], [135, "backward-gradient-calculation"], [136, "backward-gradient-calculation"], [137, "backward-gradient-calculation"], [138, "backward-gradient-calculation"], [139, "backward-gradient-calculation"], [140, "backward-gradient-calculation"], [141, "backward-gradient-calculation"], [142, "backward-gradient-calculation"], [143, "backward-gradient-calculation"], [144, "backward-gradient-calculation"], [146, "backward-gradient-calculation"], [148, "backward-gradient-calculation"], [150, "backward-gradient-calculation"], [151, "backward-gradient-calculation"], [152, "backward-gradient-calculation"], [153, "backward-gradient-calculation"], [154, "backward-gradient-calculation"], [155, "backward-gradient-calculation"], [156, "backward-gradient-calculation"], [157, "backward-gradient-calculation"], [158, "backward-gradient-calculation"]], "Benefits": [[93, "benefits"]], "Binary Functions": [[119, null]], "Class Signature": [[13, "class-signature"], [14, "class-signature"], [15, "class-signature"], [57, "class-signature"], [58, "class-signature"], [59, "class-signature"], [60, "class-signature"], [61, "class-signature"], [62, "class-signature"], [63, "class-signature"], [64, "class-signature"], [66, "class-signature"], [67, "class-signature"], [68, "class-signature"], [71, "class-signature"], [72, "class-signature"], [73, "class-signature"], [75, "class-signature"], [76, "class-signature"], [77, "class-signature"], [78, "class-signature"], [79, "class-signature"], [80, "class-signature"], [81, "class-signature"], [83, "class-signature"], [84, "class-signature"], [85, "class-signature"], [86, "class-signature"], [87, "class-signature"], [88, "class-signature"], [101, "class-signature"]], "Conclusion": [[0, "conclusion"], [90, "conclusion"], [91, "conclusion"], [92, "conclusion"], [93, "conclusion"], [100, "conclusion"]], "Convolution Functions": [[28, null], [36, null]], "Convolution Layers": [[69, null], [70, null]], "Core Components": [[0, "core-components"]], "Create a Tensor from a list": [[145, null]], "Creating a Parameter": [[15, null]], "Creating a tensor with gradient tracking": [[101, null]], "Defining a custom module": [[14, null]], "Dropout Functions": [[35, null], [36, null]], "Example": [[2, "example"], [3, "example"], [4, "example"], [6, "example"], [7, "example"], [8, "example"], [9, "example"], [10, "example"], [11, "example"], [12, "example"], [29, "example"], [90, null], [90, null], [90, null], [91, "example"], [93, "example"], [96, "example"], [97, "example"], [98, "example"], [99, "example"], [100, null], [100, null], [100, null], [113, "example"], [114, "example"], [115, "example"], [116, "example"], [117, "example"], [118, "example"], [120, "example"], [121, "example"], [122, "example"], [123, "example"], [124, "example"], [125, "example"], [126, "example"], [127, "example"], [129, "example"], [131, "example"], [133, "example"], [134, "example"], [135, "example"], [136, "example"], [137, "example"], [138, "example"], [139, "example"], [140, "example"], [141, "example"], [142, "example"], [143, "example"], [144, "example"], [146, "example"], [148, "example"], [151, "example"], [153, "example"], [154, "example"], [155, "example"], [157, "example"], [158, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[92, null]], "Example 2: Adding a new axis to a 2D tensor": [[92, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[92, null]], "Example Usage": [[0, "example-usage"]], "Example Use Cases": [[94, "example-use-cases"]], "Examples": [[1, "examples"], [13, "examples"], [14, "examples"], [15, "examples"], [16, "examples"], [17, "examples"], [19, "examples"], [20, "examples"], [21, "examples"], [22, "examples"], [23, "examples"], [24, "examples"], [25, "examples"], [26, "examples"], [27, "examples"], [30, "examples"], [31, "examples"], [32, "examples"], [33, "examples"], [34, "examples"], [37, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [48, "examples"], [49, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [60, "examples"], [61, "examples"], [62, "examples"], [63, "examples"], [64, "examples"], [66, "examples"], [67, "examples"], [68, "examples"], [71, "examples"], [72, "examples"], [73, "examples"], [75, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [79, "examples"], [80, "examples"], [81, "examples"], [83, "examples"], [84, "examples"], [85, "examples"], [86, "examples"], [87, "examples"], [88, "examples"], [101, "examples"], [102, "examples"], [103, "examples"], [104, "examples"], [105, "examples"], [107, "examples"], [108, "examples"], [109, "examples"], [110, "examples"], [111, "examples"], [112, "examples"], [128, "examples"], [130, "examples"], [132, "examples"], [145, "examples"], [147, "examples"], [150, "examples"], [152, "examples"], [156, "examples"]], "Features": [[1, "features"]], "Forward Calculation": [[2, "forward-calculation"], [3, "forward-calculation"], [4, "forward-calculation"], [6, "forward-calculation"], [7, "forward-calculation"], [8, "forward-calculation"], [9, "forward-calculation"], [10, "forward-calculation"], [11, "forward-calculation"], [12, "forward-calculation"], [16, "forward-calculation"], [17, "forward-calculation"], [19, "forward-calculation"], [20, "forward-calculation"], [21, "forward-calculation"], [22, "forward-calculation"], [23, "forward-calculation"], [24, "forward-calculation"], [29, "forward-calculation"], [37, "forward-calculation"], [39, "forward-calculation"], [57, "forward-calculation"], [58, "forward-calculation"], [59, "forward-calculation"], [60, "forward-calculation"], [61, "forward-calculation"], [62, "forward-calculation"], [63, "forward-calculation"], [64, "forward-calculation"], [66, "forward-calculation"], [67, "forward-calculation"], [68, "forward-calculation"], [71, "forward-calculation"], [72, "forward-calculation"], [73, "forward-calculation"], [75, "forward-calculation"], [76, "forward-calculation"], [77, "forward-calculation"], [78, "forward-calculation"], [79, "forward-calculation"], [80, "forward-calculation"], [81, "forward-calculation"], [83, "forward-calculation"], [84, "forward-calculation"], [85, "forward-calculation"], [86, "forward-calculation"], [87, "forward-calculation"], [88, "forward-calculation"], [102, "forward-calculation"], [103, "forward-calculation"], [104, "forward-calculation"], [105, "forward-calculation"], [106, "forward-calculation"], [107, "forward-calculation"], [108, "forward-calculation"], [109, "forward-calculation"], [110, "forward-calculation"], [111, "forward-calculation"], [112, "forward-calculation"], [120, "forward-calculation"], [121, "forward-calculation"], [122, "forward-calculation"], [123, "forward-calculation"], [124, "forward-calculation"], [125, "forward-calculation"], [126, "forward-calculation"], [127, "forward-calculation"], [128, "forward-calculation"], [129, "forward-calculation"], [130, "forward-calculation"], [131, "forward-calculation"], [132, "forward-calculation"], [133, "forward-calculation"], [134, "forward-calculation"], [135, "forward-calculation"], [136, "forward-calculation"], [137, "forward-calculation"], [138, "forward-calculation"], [139, "forward-calculation"], [140, "forward-calculation"], [141, "forward-calculation"], [142, "forward-calculation"], [143, "forward-calculation"], [144, "forward-calculation"], [146, "forward-calculation"], [148, "forward-calculation"], [150, "forward-calculation"], [151, "forward-calculation"], [152, "forward-calculation"], [153, "forward-calculation"], [154, "forward-calculation"], [155, "forward-calculation"], [156, "forward-calculation"], [157, "forward-calculation"], [158, "forward-calculation"]], "Function Signature": [[2, "function-signature"], [3, "function-signature"], [4, "function-signature"], [6, "function-signature"], [7, "function-signature"], [8, "function-signature"], [9, "function-signature"], [10, "function-signature"], [11, "function-signature"], [12, "function-signature"], [16, "function-signature"], [17, "function-signature"], [19, "function-signature"], [20, "function-signature"], [21, "function-signature"], [22, "function-signature"], [23, "function-signature"], [24, "function-signature"], [25, "function-signature"], [26, "function-signature"], [27, "function-signature"], [29, "function-signature"], [30, "function-signature"], [31, "function-signature"], [32, "function-signature"], [33, "function-signature"], [34, "function-signature"], [37, "function-signature"], [39, "function-signature"], [40, "function-signature"], [41, "function-signature"], [42, "function-signature"], [44, "function-signature"], [45, "function-signature"], [46, "function-signature"], [48, "function-signature"], [49, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [54, "function-signature"], [55, "function-signature"], [56, "function-signature"], [91, "function-signature"], [93, "function-signature"], [96, "function-signature"], [97, "function-signature"], [98, "function-signature"], [99, "function-signature"], [102, "function-signature"], [103, "function-signature"], [104, "function-signature"], [105, "function-signature"], [106, "function-signature"], [107, "function-signature"], [108, "function-signature"], [109, "function-signature"], [110, "function-signature"], [111, "function-signature"], [112, "function-signature"], [113, "function-signature"], [114, "function-signature"], [115, "function-signature"], [116, "function-signature"], [117, "function-signature"], [118, "function-signature"], [120, "function-signature"], [121, "function-signature"], [122, "function-signature"], [123, "function-signature"], [124, "function-signature"], [125, "function-signature"], [126, "function-signature"], [127, "function-signature"], [128, "function-signature"], [129, "function-signature"], [130, "function-signature"], [131, "function-signature"], [132, "function-signature"], [133, "function-signature"], [134, "function-signature"], [135, "function-signature"], [136, "function-signature"], [137, "function-signature"], [138, "function-signature"], [139, "function-signature"], [140, "function-signature"], [141, "function-signature"], [142, "function-signature"], [143, "function-signature"], [144, "function-signature"], [145, "function-signature"], [146, "function-signature"], [147, "function-signature"], [148, "function-signature"], [150, "function-signature"], [151, "function-signature"], [152, "function-signature"], [153, "function-signature"], [154, "function-signature"], [155, "function-signature"], [156, "function-signature"], [157, "function-signature"], [158, "function-signature"]], "How It Works": [[91, "how-it-works"], [93, "how-it-works"]], "Indexing and slicing": [[101, null]], "Integration with lucid": [[90, "integration-with-lucid"], [100, "integration-with-lucid"]], "Iterating through a tensor": [[101, null]], "Key Components": [[90, "key-components"]], "Key Features": [[0, "key-features"], [100, "key-features"]], "Learn More": [[100, null]], "Limitations": [[0, "limitations"]], "Linear Algebra Operations": [[5, null]], "Linear Functions": [[36, null], [38, null]], "Linear Layers": [[70, null], [74, null]], "Loss Functions": [[36, null], [43, null]], "Lucid": [[0, null]], "Matrix Multiplication Rules": [[106, "matrix-multiplication-rules"]], "Methods": [[14, "methods"], [15, "methods"], [101, "methods"]], "Modules": [[70, null]], "Normalization Functions": [[36, null], [47, null]], "Normalization Layers": [[70, null], [82, null]], "Notes": [[0, "notes"]], "Organizing Models": [[90, "organizing-models"]], "Overview": [[0, "overview"], [90, "overview"], [100, "overview"]], "Parameters": [[2, "parameters"], [3, "parameters"], [4, "parameters"], [6, "parameters"], [7, "parameters"], [8, "parameters"], [9, "parameters"], [10, "parameters"], [11, "parameters"], [12, "parameters"], [13, "parameters"], [15, "parameters"], [16, "parameters"], [17, "parameters"], [19, "parameters"], [20, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [37, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [83, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [87, "parameters"], [88, "parameters"], [93, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [104, "parameters"], [105, "parameters"], [106, "parameters"], [107, "parameters"], [108, "parameters"], [109, "parameters"], [110, "parameters"], [111, "parameters"], [112, "parameters"], [113, "parameters"], [114, "parameters"], [115, "parameters"], [116, "parameters"], [117, "parameters"], [118, "parameters"], [120, "parameters"], [121, "parameters"], [122, "parameters"], [123, "parameters"], [124, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [154, "parameters"], [155, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"]], "Performing backpropagation": [[101, null]], "Pooling Functions": [[36, null], [53, null]], "Pooling Layers": [[70, null], [89, null]], "Potential Pitfalls": [[91, "potential-pitfalls"], [93, "potential-pitfalls"]], "Properties": [[15, "properties"], [101, "properties"]], "Raises": [[2, "raises"], [3, "raises"], [4, "raises"], [6, "raises"], [7, "raises"], [8, "raises"], [9, "raises"], [10, "raises"], [11, "raises"], [12, "raises"]], "Random Number Generations": [[95, null]], "Returns": [[2, "returns"], [3, "returns"], [4, "returns"], [6, "returns"], [7, "returns"], [8, "returns"], [9, "returns"], [10, "returns"], [11, "returns"], [12, "returns"], [16, "returns"], [17, "returns"], [19, "returns"], [20, "returns"], [21, "returns"], [22, "returns"], [23, "returns"], [24, "returns"], [25, "returns"], [26, "returns"], [27, "returns"], [29, "returns"], [30, "returns"], [31, "returns"], [32, "returns"], [33, "returns"], [34, "returns"], [37, "returns"], [39, "returns"], [40, "returns"], [41, "returns"], [42, "returns"], [44, "returns"], [45, "returns"], [46, "returns"], [48, "returns"], [49, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [54, "returns"], [55, "returns"], [56, "returns"], [91, "returns"], [93, "returns"], [96, "returns"], [97, "returns"], [98, "returns"], [99, "returns"], [102, "returns"], [103, "returns"], [104, "returns"], [105, "returns"], [106, "returns"], [107, "returns"], [108, "returns"], [109, "returns"], [110, "returns"], [111, "returns"], [112, "returns"], [113, "returns"], [114, "returns"], [115, "returns"], [116, "returns"], [117, "returns"], [118, "returns"], [120, "returns"], [121, "returns"], [122, "returns"], [123, "returns"], [124, "returns"], [125, "returns"], [126, "returns"], [127, "returns"], [128, "returns"], [129, "returns"], [130, "returns"], [131, "returns"], [132, "returns"], [133, "returns"], [134, "returns"], [135, "returns"], [136, "returns"], [137, "returns"], [138, "returns"], [139, "returns"], [140, "returns"], [141, "returns"], [142, "returns"], [143, "returns"], [144, "returns"], [145, "returns"], [146, "returns"], [147, "returns"], [148, "returns"], [150, "returns"], [151, "returns"], [152, "returns"], [153, "returns"], [154, "returns"], [155, "returns"], [156, "returns"], [157, "returns"], [158, "returns"]], "Tensor Generating Functions": [[119, null]], "Tensor Operations": [[119, null]], "Tensor Utilites": [[149, null]], "Type Definitions": [[94, "type-definitions"]], "Unary Functions": [[119, null]], "Usage": [[13, "usage"], [91, "usage"], [92, "usage"], [93, "usage"]], "Use another Tensor as input": [[145, null]], "Why Use Type Aliases?": [[94, null]], "activation Functions": [[36, null]], "lucid.Tensor": [[101, null]], "lucid.abs": [[120, null]], "lucid.add": [[102, null]], "lucid.arccos": [[121, null]], "lucid.arcsin": [[122, null]], "lucid.arctan": [[123, null]], "lucid.clip": [[124, null]], "lucid.concatenate": [[146, null]], "lucid.cos": [[125, null]], "lucid.cosh": [[126, null]], "lucid.cube": [[127, null]], "lucid.diag": [[113, null]], "lucid.div": [[103, null]], "lucid.dot": [[104, null]], "lucid.exp": [[128, null]], "lucid.eye": [[114, null]], "lucid.flatten": [[147, null]], "lucid.grad_enabled": [[91, null]], "lucid.hstack": [[148, null]], "lucid.inner": [[105, null]], "lucid.linalg": [[1, null]], "lucid.linalg.cholesky": [[2, null]], "lucid.linalg.det": [[3, null]], "lucid.linalg.eig": [[4, null]], "lucid.linalg.inv": [[6, null]], "lucid.linalg.matrix_power": [[7, null]], "lucid.linalg.norm": [[8, null]], "lucid.linalg.pinv": [[9, null]], "lucid.linalg.qr": [[10, null]], "lucid.linalg.solve": [[11, null]], "lucid.linalg.svd": [[12, null]], "lucid.log": [[129, null]], "lucid.matmul": [[106, null]], "lucid.max": [[130, null]], "lucid.maximum": [[107, null]], "lucid.mean": [[131, null]], "lucid.min": [[132, null]], "lucid.minimum": [[108, null]], "lucid.mul": [[109, null]], "lucid.newaxis": [[92, null]], "lucid.nn": [[90, null]], "lucid.nn.functional": [[36, null]], "lucid.no_grad": [[93, null]], "lucid.ones": [[115, null]], "lucid.ones_like": [[116, null]], "lucid.outer": [[110, null]], "lucid.pad": [[150, null]], "lucid.power": [[111, null]], "lucid.random": [[100, null]], "lucid.random.rand": [[96, null]], "lucid.random.randint": [[97, null]], "lucid.random.randn": [[98, null]], "lucid.random.seed": [[99, null]], "lucid.ravel": [[151, null]], "lucid.reciprocal": [[133, null]], "lucid.repeat": [[152, null]], "lucid.reshape": [[153, null]], "lucid.sign": [[134, null]], "lucid.sin": [[135, null]], "lucid.sinh": [[136, null]], "lucid.sqrt": [[137, null]], "lucid.square": [[138, null]], "lucid.squeeze": [[154, null]], "lucid.stack": [[155, null]], "lucid.sub": [[112, null]], "lucid.sum": [[139, null]], "lucid.tan": [[140, null]], "lucid.tanh": [[141, null]], "lucid.tensor": [[145, null]], "lucid.tile": [[156, null]], "lucid.trace": [[142, null]], "lucid.transpose": [[143, null]], "lucid.types": [[94, null]], "lucid.unsqueeze": [[157, null]], "lucid.var": [[144, null]], "lucid.vstack": [[158, null]], "lucid.zeros": [[117, null]], "lucid.zeros_like": [[118, null]], "nn.AvgPool1d": [[83, null]], "nn.AvgPool2d": [[84, null]], "nn.AvgPool3d": [[85, null]], "nn.BatchNorm1d": [[75, null]], "nn.BatchNorm2d": [[76, null]], "nn.BatchNorm3d": [[77, null]], "nn.Bilinear": [[71, null]], "nn.Buffer": [[13, null]], "nn.Conv1d": [[66, null]], "nn.Conv2d": [[67, null]], "nn.Conv3d": [[68, null]], "nn.ELU": [[57, null]], "nn.GELU": [[58, null]], "nn.Identity": [[72, null]], "nn.InstanceNorm1d": [[78, null]], "nn.InstanceNorm2d": [[79, null]], "nn.InstanceNorm3d": [[80, null]], "nn.LayerNorm": [[81, null]], "nn.LeakyReLU": [[59, null]], "nn.Linear": [[73, null]], "nn.MaxPool1d": [[86, null]], "nn.MaxPool2d": [[87, null]], "nn.MaxPool3d": [[88, null]], "nn.Module": [[14, null]], "nn.Parameter": [[15, null]], "nn.ReLU": [[60, null]], "nn.SELU": [[61, null]], "nn.Sigmoid": [[62, null]], "nn.Softmax": [[63, null]], "nn.Tanh": [[64, null]], "nn.functional.alpha_dropout": [[30, null]], "nn.functional.avg_pool1d": [[50, null]], "nn.functional.avg_pool2d": [[51, null]], "nn.functional.avg_pool3d": [[52, null]], "nn.functional.batch_norm": [[46, null]], "nn.functional.bilinear": [[37, null]], "nn.functional.binary_cross_entropy": [[40, null]], "nn.functional.conv1d": [[25, null]], "nn.functional.conv2d": [[26, null]], "nn.functional.conv3d": [[27, null]], "nn.functional.cross_entropy": [[41, null]], "nn.functional.dropout": [[31, null]], "nn.functional.dropout1d": [[32, null]], "nn.functional.dropout2d": [[33, null]], "nn.functional.dropout3d": [[34, null]], "nn.functional.elu": [[16, null]], "nn.functional.gelu": [[17, null]], "nn.functional.huber_loss": [[42, null]], "nn.functional.instance_norm": [[48, null]], "nn.functional.layer_norm": [[49, null]], "nn.functional.leaky_relu": [[19, null]], "nn.functional.linear": [[39, null]], "nn.functional.max_pool1d": [[54, null]], "nn.functional.max_pool2d": [[55, null]], "nn.functional.max_pool3d": [[56, null]], "nn.functional.mse_loss": [[44, null]], "nn.functional.nll_loss": [[45, null]], "nn.functional.relu": [[20, null]], "nn.functional.selu": [[21, null]], "nn.functional.sigmoid": [[22, null]], "nn.functional.softmax": [[23, null]], "nn.functional.tanh": [[24, null]], "nn.functional.unfold": [[29, null]]}, "docnames": ["index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/nn", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/types", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/unsqueeze", "tensor/utilities/vstack"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/nn.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/types.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst"], "indexentries": {"abs() (in module lucid)": [[120, "lucid.abs", false]], "add() (in module lucid)": [[102, "lucid.add", false]], "alpha_dropout() (in module lucid.nn.functional)": [[30, "lucid.nn.functional.alpha_dropout", false]], "arccos() (in module lucid)": [[121, "lucid.arccos", false]], "arcsin() (in module lucid)": [[122, "lucid.arcsin", false]], "arctan() (in module lucid)": [[123, "lucid.arctan", false]], "avg_pool1d() (in module lucid.nn.functional)": [[50, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[51, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[52, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[83, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[84, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[85, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[46, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[75, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[76, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[77, "lucid.nn.BatchNorm3d", false]], "bilinear (class in lucid.nn)": [[71, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[37, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[40, "lucid.nn.functional.binary_cross_entropy", false]], "buffer (class in lucid.nn)": [[13, "lucid.nn.Buffer", false]], "cholesky() (in module lucid.linalg)": [[2, "lucid.linalg.cholesky", false]], "clip() (in module lucid)": [[124, "lucid.clip", false]], "concatenate() (in module lucid)": [[146, "lucid.concatenate", false]], "conv1d (class in lucid.nn)": [[66, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[25, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[67, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[26, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[68, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[27, "lucid.nn.functional.conv3d", false]], "cos() (in module lucid)": [[125, "lucid.cos", false]], "cosh() (in module lucid)": [[126, "lucid.cosh", false]], "cross_entropy() (in module lucid.nn.functional)": [[41, "lucid.nn.functional.cross_entropy", false]], "cube() (in module lucid)": [[127, "lucid.cube", false]], "det() (in module lucid.linalg)": [[3, "lucid.linalg.det", false]], "diag() (in module lucid)": [[113, "lucid.diag", false]], "div() (in module lucid)": [[103, "lucid.div", false]], "dot() (in module lucid)": [[104, "lucid.dot", false]], "dropout() (in module lucid.nn.functional)": [[31, "lucid.nn.functional.dropout", false]], "dropout1d() (in module lucid.nn.functional)": [[32, "lucid.nn.functional.dropout1d", false]], "dropout2d() (in module lucid.nn.functional)": [[33, "lucid.nn.functional.dropout2d", false]], "dropout3d() (in module lucid.nn.functional)": [[34, "lucid.nn.functional.dropout3d", false]], "eig() (in module lucid.linalg)": [[4, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[57, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[16, "lucid.nn.functional.elu", false]], "exp() (in module lucid)": [[128, "lucid.exp", false]], "eye() (in module lucid)": [[114, "lucid.eye", false]], "flatten() (in module lucid)": [[147, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[58, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[17, "lucid.nn.functional.gelu", false]], "grad_enabled() (in module lucid)": [[91, "lucid.grad_enabled", false]], "hstack() (in module lucid)": [[148, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[42, "lucid.nn.functional.huber_loss", false]], "identity (class in lucid.nn)": [[72, "lucid.nn.Identity", false]], "inner() (in module lucid)": [[105, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[48, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[78, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[79, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[80, "lucid.nn.InstanceNorm3d", false]], "inv() (in module lucid.linalg)": [[6, "lucid.linalg.inv", false]], "layer_norm() (in module lucid.nn.functional)": [[49, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[81, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[19, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[59, "lucid.nn.LeakyReLU", false]], "linear (class in lucid.nn)": [[73, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[39, "lucid.nn.functional.linear", false]], "log() (in module lucid)": [[129, "lucid.log", false]], "lucid": [[0, "module-lucid", false]], "matmul() (in module lucid)": [[106, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[7, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[130, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[54, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[55, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[56, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[107, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[86, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[87, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[88, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[131, "lucid.mean", false]], "min() (in module lucid)": [[132, "lucid.min", false]], "minimum() (in module lucid)": [[108, "lucid.minimum", false]], "module": [[0, "module-lucid", false]], "module (class in lucid.nn)": [[14, "lucid.nn.Module", false]], "mse_loss() (in module lucid.nn.functional)": [[44, "lucid.nn.functional.mse_loss", false]], "mul() (in module lucid)": [[109, "lucid.mul", false]], "nll_loss() (in module lucid.nn.functional)": [[45, "lucid.nn.functional.nll_loss", false]], "no_grad() (in module lucid)": [[93, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[8, "lucid.linalg.norm", false]], "ones() (in module lucid)": [[115, "lucid.ones", false]], "ones_like() (in module lucid)": [[116, "lucid.ones_like", false]], "outer() (in module lucid)": [[110, "lucid.outer", false]], "pad() (in module lucid)": [[150, "lucid.pad", false]], "parameter (class in lucid.nn)": [[15, "lucid.nn.Parameter", false]], "pinv() (in module lucid.linalg)": [[9, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[111, "lucid.power", false]], "qr() (in module lucid.linalg)": [[10, "lucid.linalg.qr", false]], "rand() (in module lucid.random)": [[96, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[97, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[98, "lucid.random.randn", false]], "ravel() (in module lucid)": [[151, "lucid.ravel", false]], "reciprocal() (in module lucid)": [[133, "lucid.reciprocal", false]], "relu (class in lucid.nn)": [[60, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[20, "lucid.nn.functional.relu", false]], "repeat() (in module lucid)": [[152, "lucid.repeat", false]], "reshape() (in module lucid)": [[153, "lucid.reshape", false]], "seed() (in module lucid.random)": [[99, "lucid.random.seed", false]], "selu (class in lucid.nn)": [[61, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[21, "lucid.nn.functional.selu", false]], "sigmoid (class in lucid.nn)": [[62, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[22, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[134, "lucid.sign", false]], "sin() (in module lucid)": [[135, "lucid.sin", false]], "sinh() (in module lucid)": [[136, "lucid.sinh", false]], "softmax (class in lucid.nn)": [[63, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[23, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[11, "lucid.linalg.solve", false]], "sqrt() (in module lucid)": [[137, "lucid.sqrt", false]], "square() (in module lucid)": [[138, "lucid.square", false]], "squeeze() (in module lucid)": [[154, "lucid.squeeze", false]], "stack() (in module lucid)": [[155, "lucid.stack", false]], "sub() (in module lucid)": [[112, "lucid.sub", false]], "sum() (in module lucid)": [[139, "lucid.sum", false]], "svd() (in module lucid.linalg)": [[12, "lucid.linalg.svd", false]], "tan() (in module lucid)": [[140, "lucid.tan", false]], "tanh (class in lucid.nn)": [[64, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[141, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[24, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[101, "lucid.Tensor", false]], "tensor() (in module lucid)": [[145, "lucid.tensor", false]], "tile() (in module lucid)": [[156, "lucid.tile", false]], "trace() (in module lucid)": [[142, "lucid.trace", false]], "transpose() (in module lucid)": [[143, "lucid.transpose", false]], "unfold() (in module lucid.nn.functional)": [[29, "lucid.nn.functional.unfold", false]], "unsqueeze() (in module lucid)": [[157, "lucid.unsqueeze", false]], "var() (in module lucid)": [[144, "lucid.var", false]], "vstack() (in module lucid)": [[158, "lucid.vstack", false]], "zeros() (in module lucid)": [[117, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[118, "lucid.zeros_like", false]]}, "objects": {"": [[0, 0, 0, "-", "lucid"]], "lucid": [[101, 1, 1, "", "Tensor"], [120, 2, 1, "", "abs"], [102, 2, 1, "", "add"], [121, 2, 1, "", "arccos"], [122, 2, 1, "", "arcsin"], [123, 2, 1, "", "arctan"], [124, 2, 1, "", "clip"], [146, 2, 1, "", "concatenate"], [125, 2, 1, "", "cos"], [126, 2, 1, "", "cosh"], [127, 2, 1, "", "cube"], [113, 2, 1, "", "diag"], [103, 2, 1, "", "div"], [104, 2, 1, "", "dot"], [128, 2, 1, "", "exp"], [114, 2, 1, "", "eye"], [147, 2, 1, "", "flatten"], [91, 2, 1, "", "grad_enabled"], [148, 2, 1, "", "hstack"], [105, 2, 1, "", "inner"], [129, 2, 1, "", "log"], [106, 2, 1, "", "matmul"], [130, 2, 1, "", "max"], [107, 2, 1, "", "maximum"], [131, 2, 1, "", "mean"], [132, 2, 1, "", "min"], [108, 2, 1, "", "minimum"], [109, 2, 1, "", "mul"], [93, 2, 1, "", "no_grad"], [115, 2, 1, "", "ones"], [116, 2, 1, "", "ones_like"], [110, 2, 1, "", "outer"], [150, 2, 1, "", "pad"], [111, 2, 1, "", "power"], [151, 2, 1, "", "ravel"], [133, 2, 1, "", "reciprocal"], [152, 2, 1, "", "repeat"], [153, 2, 1, "", "reshape"], [134, 2, 1, "", "sign"], [135, 2, 1, "", "sin"], [136, 2, 1, "", "sinh"], [137, 2, 1, "", "sqrt"], [138, 2, 1, "", "square"], [154, 2, 1, "", "squeeze"], [155, 2, 1, "", "stack"], [112, 2, 1, "", "sub"], [139, 2, 1, "", "sum"], [140, 2, 1, "", "tan"], [141, 2, 1, "", "tanh"], [145, 2, 1, "", "tensor"], [156, 2, 1, "", "tile"], [142, 2, 1, "", "trace"], [143, 2, 1, "", "transpose"], [157, 2, 1, "", "unsqueeze"], [144, 2, 1, "", "var"], [158, 2, 1, "", "vstack"], [117, 2, 1, "", "zeros"], [118, 2, 1, "", "zeros_like"]], "lucid.linalg": [[2, 2, 1, "", "cholesky"], [3, 2, 1, "", "det"], [4, 2, 1, "", "eig"], [6, 2, 1, "", "inv"], [7, 2, 1, "", "matrix_power"], [8, 2, 1, "", "norm"], [9, 2, 1, "", "pinv"], [10, 2, 1, "", "qr"], [11, 2, 1, "", "solve"], [12, 2, 1, "", "svd"]], "lucid.nn": [[83, 1, 1, "", "AvgPool1d"], [84, 1, 1, "", "AvgPool2d"], [85, 1, 1, "", "AvgPool3d"], [75, 1, 1, "", "BatchNorm1d"], [76, 1, 1, "", "BatchNorm2d"], [77, 1, 1, "", "BatchNorm3d"], [71, 1, 1, "", "Bilinear"], [13, 1, 1, "", "Buffer"], [66, 1, 1, "", "Conv1d"], [67, 1, 1, "", "Conv2d"], [68, 1, 1, "", "Conv3d"], [57, 1, 1, "", "ELU"], [58, 1, 1, "", "GELU"], [72, 1, 1, "", "Identity"], [78, 1, 1, "", "InstanceNorm1d"], [79, 1, 1, "", "InstanceNorm2d"], [80, 1, 1, "", "InstanceNorm3d"], [81, 1, 1, "", "LayerNorm"], [59, 1, 1, "", "LeakyReLU"], [73, 1, 1, "", "Linear"], [86, 1, 1, "", "MaxPool1d"], [87, 1, 1, "", "MaxPool2d"], [88, 1, 1, "", "MaxPool3d"], [14, 1, 1, "", "Module"], [15, 1, 1, "", "Parameter"], [60, 1, 1, "", "ReLU"], [61, 1, 1, "", "SELU"], [62, 1, 1, "", "Sigmoid"], [63, 1, 1, "", "Softmax"], [64, 1, 1, "", "Tanh"]], "lucid.nn.functional": [[30, 2, 1, "", "alpha_dropout"], [50, 2, 1, "", "avg_pool1d"], [51, 2, 1, "", "avg_pool2d"], [52, 2, 1, "", "avg_pool3d"], [46, 2, 1, "", "batch_norm"], [37, 2, 1, "", "bilinear"], [40, 2, 1, "", "binary_cross_entropy"], [25, 2, 1, "", "conv1d"], [26, 2, 1, "", "conv2d"], [27, 2, 1, "", "conv3d"], [41, 2, 1, "", "cross_entropy"], [31, 2, 1, "", "dropout"], [32, 2, 1, "", "dropout1d"], [33, 2, 1, "", "dropout2d"], [34, 2, 1, "", "dropout3d"], [16, 2, 1, "", "elu"], [17, 2, 1, "", "gelu"], [42, 2, 1, "", "huber_loss"], [48, 2, 1, "", "instance_norm"], [49, 2, 1, "", "layer_norm"], [19, 2, 1, "", "leaky_relu"], [39, 2, 1, "", "linear"], [54, 2, 1, "", "max_pool1d"], [55, 2, 1, "", "max_pool2d"], [56, 2, 1, "", "max_pool3d"], [44, 2, 1, "", "mse_loss"], [45, 2, 1, "", "nll_loss"], [20, 2, 1, "", "relu"], [21, 2, 1, "", "selu"], [22, 2, 1, "", "sigmoid"], [23, 2, 1, "", "softmax"], [24, 2, 1, "", "tanh"], [29, 2, 1, "", "unfold"]], "lucid.random": [[96, 2, 1, "", "rand"], [97, 2, 1, "", "randint"], [98, 2, 1, "", "randn"], [99, 2, 1, "", "seed"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [0, 1, 7, 9, 12, 13, 14, 15, 83, 86, 87, 90, 92, 106, 113, 129, 131, 139, 142, 144, 145, 154], "0": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 140, 141, 143, 144, 145, 146, 148, 150, 151, 152, 154, 155, 157, 158], "005": 59, "01": [19, 59], "01051757": 98, "044715": [17, 58], "04719755": 121, "0474259": 22, "05": [46, 48, 49, 59, 75, 76, 77, 78, 79, 80, 81], "0507": [21, 61], "07": [40, 41], "0706508": 64, "08333333": 9, "085537": 128, "0900": 63, "0986": [23, 63], "09861229": 129, "1": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 94, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "10": [26, 27, 37, 39, 66, 67, 68, 71, 73, 76, 77, 79, 84, 85, 87, 97, 100, 103, 106, 109, 110, 123, 139], "1014": 21, "10499": 22, "1050": 62, "11": [37, 66, 67, 68, 71, 76, 77, 79, 84, 85, 87, 106], "1134": 37, "119": 37, "1192": [22, 23, 63], "12": [37, 66, 67, 68, 71, 76, 77, 79, 84, 85, 87, 106, 110, 111], "123": 99, "125": 85, "13": [37, 66, 67, 68, 71, 77, 84, 85, 87, 106], "14": [66, 67, 68, 71, 77, 84, 85, 87, 94, 106, 110], "145": 37, "15": [37, 66, 67, 68, 71, 77, 84, 85, 87, 106, 110, 142], "155": 106, "1588": [17, 58], "16": [66, 67, 68, 71, 76, 77, 84, 85, 87, 90, 106, 110, 137], "16227766": 10, "166": 106, "17": [66, 67, 68, 71, 77, 85, 105], "170": 37, "17520119": 136, "18": [66, 67, 68, 71, 77, 85, 109, 110], "19": [26, 27, 37, 67, 68, 77, 104, 106], "1966": [23, 62, 63], "1d": [25, 50, 54, 75, 78, 106, 113, 142, 150, 151, 152, 156], "1e": [40, 41, 46, 48, 49, 75, 76, 77, 78, 79, 80, 81], "2": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 94, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "20": [67, 68, 77, 110, 128], "204": 68, "21": [37, 67, 68, 77, 110], "211": 106, "22": [37, 67, 68, 77, 104, 106], "2247": [75, 76, 77, 78, 79, 80, 81], "226": 106, "22752314": 98, "23": [67, 68, 77], "2324": 61, "24": [37, 67, 68, 77, 110], "2424": [23, 63], "2447": 63, "25": [22, 62, 68, 77, 84, 85, 103, 133, 144], "2512": 57, "2547": 61, "26": [39, 68, 73, 77, 110], "26325684": 98, "2689": [23, 62, 63], "27": [37, 66, 68, 77, 127], "28": [37, 68, 110], "29": 68, "2_i": [78, 79, 80], "2d": [26, 33, 51, 55, 76, 79, 106, 113, 114, 142, 147, 150, 152, 156], "2x2": 29, "3": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 22, 23, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 42, 44, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 124, 126, 127, 128, 129, 130, 131, 132, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "30": 68, "31": [37, 68, 106], "31622777": 10, "32": [37, 39, 67, 68, 73, 90, 104, 105, 110], "33": [39, 68, 73], "33333333": 9, "34": [37, 68, 106, 110], "35": 68, "36": 68, "3679": [16, 21, 57], "37": 66, "372": 37, "38344152": 96, "38629436": 129, "389056": 128, "3935": 57, "3d": [27, 34, 52, 56, 68, 77, 80], "3x3": 100, "4": [1, 2, 3, 4, 6, 8, 9, 10, 25, 26, 27, 29, 32, 33, 34, 37, 39, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 92, 94, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 116, 118, 124, 129, 130, 131, 132, 133, 135, 137, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 155, 156, 158], "41421356": 2, "41666667": 9, "41808962": 98, "419974": 24, "4199743": 64, "42": [37, 94, 100], "42718872": 10, "43": [104, 106], "4323": 57, "43758721": 96, "4472136": 4, "4495": [77, 80], "45": 37, "47112767": 123, "48": [39, 73], "4979": 57, "5": [0, 1, 6, 7, 8, 9, 14, 15, 17, 22, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 42, 44, 46, 48, 49, 50, 51, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 87, 88, 92, 94, 97, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 118, 120, 121, 122, 130, 131, 132, 133, 134, 139, 142, 143, 144, 145, 148, 153, 158], "50": [39, 73, 104, 106], "52359878": 122, "53": [37, 105], "54308063": 126, "545": 111, "57": 37, "57079633": [121, 122], "57366333": 99, "6": [1, 9, 25, 26, 27, 29, 34, 37, 39, 66, 67, 68, 71, 73, 75, 76, 77, 78, 79, 80, 81, 84, 85, 87, 88, 92, 94, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 116, 118, 130, 131, 132, 139, 142, 143, 144, 145, 148, 152, 153, 158], "6065": 57, "6124": [75, 76, 77, 78, 79, 80, 81], "62": 37, "62686041": 136, "6321": [16, 57], "63245553": 10, "64": 37, "64589411": 96, "6590": [23, 63], "6652": 63, "66666667": 9, "67": 106, "67326": 61, "6733": 21, "68811989": 98, "69314718": 129, "7": [8, 25, 26, 27, 29, 34, 37, 39, 40, 41, 58, 61, 62, 64, 66, 67, 68, 71, 73, 76, 77, 79, 80, 84, 85, 87, 88, 94, 97, 102, 104, 105, 106, 110, 112, 113, 128, 131, 139, 142, 143, 144, 156], "70710678": [4, 135], "7182818": 128, "7311": [23, 62, 63], "74": 106, "75": [39, 73], "7581": 21, "76159416": 141, "7616": [24, 64], "76219569": 126, "7635": 61, "772": 111, "78357324": 98, "78539816": 123, "79172504": 96, "8": [7, 11, 25, 26, 27, 29, 34, 37, 39, 40, 58, 61, 62, 64, 66, 67, 68, 71, 73, 76, 77, 79, 80, 84, 85, 87, 88, 94, 97, 103, 104, 105, 106, 110, 111, 113, 127, 131, 139, 142, 143, 144], "82": 37, "8413": [17, 58], "8584": 61, "8808": [23, 62, 63], "887": 111, "891773": 96, "89442719": 4, "9": [11, 26, 29, 37, 39, 66, 67, 68, 71, 73, 76, 77, 79, 84, 85, 87, 94, 97, 102, 106, 110, 111, 112, 113, 137, 138], "90709145": 99, "9486833": 10, "9526": 22, "9545": 58, "96366276": 96, "9640": 64, "96402758": 141, "99734545": 99, "A": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 37, 39, 40, 41, 45, 46, 48, 49, 75, 76, 77, 78, 79, 80, 81, 90, 93, 94, 96, 97, 98, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "As": 99, "By": [0, 15, 90, 92, 96, 97, 98], "For": [0, 2, 3, 4, 6, 7, 8, 9, 11, 16, 17, 19, 20, 21, 22, 24, 37, 39, 61, 66, 67, 68, 71, 73, 75, 76, 77, 78, 79, 80, 90, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 128, 129, 130, 131, 132, 135, 137, 139, 142, 143, 144, 150, 152, 154, 156, 157], "If": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 34, 37, 39, 46, 48, 66, 67, 68, 71, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "In": [0, 9, 25, 26, 27, 91, 92, 93], "It": [0, 9, 10, 11, 14, 34, 37, 58, 60, 64, 71, 72, 90, 92, 99, 102, 103, 104, 107, 108, 109, 111, 112, 130, 132, 146, 148, 150, 151, 152, 153, 154, 155, 156, 158], "Its": [11, 100], "Near": 9, "No": 29, "Not": 72, "The": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "There": 153, "These": [0, 1, 4, 7, 10, 12, 75, 76, 77, 78, 79, 80, 81, 94, 100], "To": [98, 100], "With": 29, "_": [7, 16, 17, 19, 20, 21, 22, 24, 39, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 104, 105, 106, 110, 142, 143], "_1": [4, 37, 71, 110, 146, 148, 158], "_2": [4, 37, 71, 110, 146, 148, 158], "__call__": 14, "__init__": [0, 13, 14, 15, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 73, 75, 76, 77, 78, 81, 83, 84, 85, 86, 87, 88, 90, 101], "__setattr__": 14, "_activ": 23, "_arraylik": [94, 113, 116, 118], "_arraylikeint": 150, "_arrayorscalar": [13, 15, 94, 101, 145], "_grad_en": [91, 93], "_i": [4, 8, 23, 37, 63, 75, 81, 83, 86, 104, 105, 107, 108, 110, 111, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 152, 154, 157, 158], "_j": [23, 63, 83, 86, 110, 131, 139, 143, 144], "_k": 155, "_modul": 14, "_n": [4, 146, 148, 158], "_numpyarrai": 94, "_out": [152, 156], "_p": 8, "_pad": 150, "_paddingstr": [66, 67, 68], "_paramet": 14, "_reductiontyp": [40, 41, 42, 44, 45], "_scalar": [94, 124], "_shapelik": [49, 81, 94, 97, 115, 117, 153, 154, 157], "_slope": 59, "_tensor": [13, 15, 113, 145], "_tensorop": 101, "_u": 9, "_v": 9, "_valu": [124, 150], "_width": 150, "a_i": [107, 108, 111], "ab": 119, "abil": 0, "about": 0, "abov": [0, 91, 93, 99, 113, 114], "absolut": [7, 8, 42, 120], "abstract": 90, "acceler": [61, 75, 76, 77], "accept": [72, 96, 101], "access": [13, 15, 153], "accord": [66, 67, 68, 71, 73, 143], "accordingli": 3, "account": [7, 9, 10], "accumul": [102, 103, 107, 108, 109, 112], "achiev": [25, 26, 27], "across": [13, 49, 75, 76, 77, 78, 79, 80, 81, 94, 96, 97, 98, 99, 100, 131, 144], "activ": [0, 16, 17, 19, 20, 21, 22, 23, 24, 30, 57, 58, 59, 60, 61, 62, 63, 64, 75, 76, 77, 81, 130, 132], "actual": [15, 101], "ad": [14, 25, 26, 27, 37, 39, 40, 41, 46, 48, 49, 50, 51, 52, 54, 55, 56, 66, 67, 68, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 157], "add": [14, 37, 39, 66, 67, 68, 71, 73, 81, 92, 119, 150, 157], "add_modul": 14, "addit": [0, 7, 14, 37, 39, 46, 48, 71, 73, 75, 76, 77, 78, 79, 80, 92, 100, 102, 155], "adjust": [75, 76, 77, 78, 79, 80, 81, 148, 158], "advanc": [9, 25, 26, 27, 90], "advantag": 93, "affect": [91, 151, 154], "affin": [75, 76, 77, 78, 79, 80, 81], "after": [7, 15, 34, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 71, 72, 73, 75, 76, 77, 78, 81, 83, 84, 85, 86, 87, 88, 93, 101, 102, 103, 107, 108, 109, 111, 112, 150], "afterward": 93, "aggreg": [110, 152, 156], "aim": 0, "algebra": [0, 1, 114], "algorithm": [0, 7, 9, 10, 100], "align": [11, 105, 106], "all": [0, 10, 14, 26, 27, 51, 52, 55, 56, 59, 60, 68, 84, 85, 88, 90, 111, 130, 131, 132, 139, 142, 144, 146, 147, 148, 152, 154, 155, 156, 158], "allevi": 16, "allow": [0, 9, 10, 15, 16, 19, 20, 23, 27, 29, 57, 58, 59, 61, 62, 63, 64, 66, 67, 68, 90, 92, 115, 117, 118, 143, 145], "along": [23, 63, 105, 106, 110, 130, 131, 132, 139, 142, 144, 146, 148, 152, 155, 156, 157, 158], "alongsid": 13, "alpha": [16, 19, 21, 30, 57, 61], "alpha_dropout": [35, 36], "also": [16, 17, 19, 20, 21, 22, 24, 37, 39, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "alter": 153, "altern": [58, 106], "alwai": [15, 151], "amount": [25, 26, 27, 50, 51, 52, 54, 55, 56], "an": [0, 4, 6, 7, 9, 10, 12, 14, 17, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 57, 62, 66, 67, 68, 71, 73, 81, 83, 84, 85, 86, 87, 88, 93, 94, 101, 106, 113, 114, 124, 131, 139, 144, 146, 152, 156, 157], "analog": [152, 156], "analysi": [66, 67, 68, 80, 83, 85, 86, 88], "ani": [7, 9, 13, 14, 15, 16, 17, 19, 20, 21, 22, 24, 30, 31, 37, 39, 46, 48, 62, 81, 90, 91, 93, 99, 101, 113, 114, 115, 116, 117, 118, 130, 132, 143, 145, 146, 147, 148, 150, 152, 155, 156, 157, 158], "anoth": [112, 116, 118], "appli": [0, 7, 16, 17, 19, 20, 21, 22, 23, 24, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 71, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 106, 150, 152], "applic": [9, 25, 48, 66, 67, 68, 71, 73, 100, 117, 150], "appropri": [9, 14, 66, 67, 68, 84, 85, 91, 93], "approx": 21, "approxim": [9, 17, 58, 84, 87], "ar": [0, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 23, 25, 26, 27, 29, 37, 39, 63, 66, 67, 68, 71, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 124, 128, 130, 131, 132, 133, 134, 139, 142, 143, 146, 152, 153, 156], "arbitrari": [72, 124, 129, 131, 135, 137, 139, 143, 144], "arcco": 119, "architectur": [17, 60, 71, 72, 90], "arcsin": 119, "arctan": 119, "arg": [14, 72], "argument": [14, 72, 96, 143], "around": [4, 64], "arr": [94, 146, 148, 155, 158], "arrai": [0, 13, 15, 92, 94, 101, 106, 113, 116, 118, 145, 151, 152], "asarrai": 94, "assign": 14, "assum": 91, "attent": 37, "attribut": 14, "audio": 66, "augment": [100, 152, 156], "autodiff": 0, "autograd": 90, "automat": [0, 15, 90, 96, 97, 98, 101, 118], "auxiliari": 13, "avail": 0, "averag": [13, 50, 51, 52, 83, 84, 85, 131], "avg_pool": [83, 84, 85], "avg_pool1d": [36, 53], "avg_pool2d": [36, 53], "avg_pool3d": [36, 53], "avgpool1d": [70, 89], "avgpool1dmodel": 83, "avgpool2d": [70, 89], "avgpool2dmodel": 84, "avgpool3d": [70, 89], "avgpool3dmodel": 85, "avoid": [9, 93], "ax": [1, 92, 130, 131, 132, 139, 143, 144, 152, 154, 156], "axi": [23, 63, 105, 106, 130, 131, 132, 139, 144, 146, 148, 150, 152, 154, 155, 156, 157, 158], "b": [1, 11, 37, 39, 66, 67, 68, 71, 73, 92, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 146, 148, 155, 158], "b_i": [107, 108, 111], "back": [84, 85, 105, 110, 152, 156], "backpropag": [0, 3, 4, 6, 7, 9, 10, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 37, 39, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 93, 98, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 128, 130, 132, 145, 150, 152, 156], "backward": [0, 13, 15, 101], "base": [1, 6, 7, 10, 11, 14, 29, 37, 90, 102, 103, 107, 108, 109, 111, 112, 118, 128, 129, 130, 132, 143, 150], "basic": [0, 25, 26, 27], "batch": [1, 7, 10, 12, 25, 26, 27, 29, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 66, 67, 68, 71, 73, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 106], "batch_norm": [36, 47, 75, 76, 77], "batchnorm1d": [70, 82], "batchnorm1dmodel": 75, "batchnorm2d": [70, 82], "batchnorm2dmodel": 76, "batchnorm3d": [70, 82], "batchnorm3dmodel": 77, "becaus": 97, "becom": [8, 14], "befor": [7, 15, 93, 99, 150], "begin": [8, 16, 19, 20, 21, 57, 59, 60, 61, 83, 84, 85, 86, 87, 88, 92, 100, 107, 108, 110, 120, 124, 130, 132, 134, 150], "behav": 142, "behavior": [91, 100, 106], "being": [91, 93, 146, 148, 158], "below": [10, 106, 113, 114], "benefit": [16, 90, 94], "beta": [75, 76, 77, 78, 79, 80, 81], "better": [6, 17, 78, 79, 80, 90], "between": [14, 25, 26, 27, 29, 37, 42, 66, 67, 68, 71, 100, 102, 103, 106, 109, 112, 144], "beyond": 0, "bia": [25, 26, 27, 37, 39, 46, 48, 49, 66, 67, 68, 71, 73, 75, 76, 77, 78, 79, 80, 81], "bias": [66, 67, 68, 73, 81, 90], "bilinear": [36, 38, 70, 74], "bilinearmodel": 71, "binari": [22, 40, 62], "binary_cross_entropi": [36, 43], "block": [14, 29, 66, 67, 68, 93], "block1": 90, "block2": 90, "bmatrix": 110, "bool": [12, 14, 15, 30, 31, 32, 33, 34, 46, 48, 66, 67, 68, 71, 73, 75, 76, 77, 78, 79, 80, 81, 91, 96, 97, 98, 101, 113, 114, 115, 116, 117, 118, 130, 131, 132, 139, 144, 145], "both": [25, 39, 50, 54, 58, 66, 67, 83, 84, 86, 87, 104, 105, 106, 110, 113], "break": 90, "broadcast": [131, 139, 144, 153, 157], "build": [0, 14, 90], "built": [0, 90], "c": [29, 32, 33, 34, 41, 45, 46, 48, 50, 51, 52, 54, 55, 56, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 92, 148, 158], "c_": [66, 67, 68], "c_in": [25, 26, 27], "c_out": [25, 26, 27], "calcul": [0, 1, 15, 93, 97, 101], "calculu": [2, 9], "call": [14, 91, 102, 103, 106, 107, 108, 109, 111, 112], "can": [0, 2, 4, 6, 7, 9, 10, 12, 13, 15, 19, 25, 26, 27, 58, 59, 64, 66, 67, 68, 78, 79, 80, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 100, 101, 106, 114, 115, 117, 118, 131, 139, 144, 148, 150, 152, 153, 156, 157, 158], "cannot": [3, 4, 6, 7, 10, 11, 12], "capabl": [0, 113, 114, 115, 116, 117, 118], "captur": [29, 66, 67, 68, 71], "care": 93, "case": [8, 16, 19, 20, 21, 57, 59, 60, 61, 83, 84, 85, 86, 87, 88, 90, 92, 107, 108, 120, 124, 130, 132, 134, 150], "caus": 9, "cdot": [2, 3, 6, 7, 8, 11, 16, 17, 19, 21, 22, 25, 26, 27, 37, 39, 50, 51, 52, 54, 55, 56, 58, 62, 71, 73, 75, 76, 77, 78, 79, 80, 81, 104, 105, 106, 109, 111], "center": 64, "central": 94, "certain": [3, 17, 37, 71, 91, 130, 132], "chain": [6, 7], "chang": [42, 92, 93, 151, 153, 157], "channel": [25, 26, 27, 29, 32, 33, 34, 46, 48, 50, 51, 52, 54, 55, 56, 66, 67, 68, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88], "check": 91, "choleski": 5, "clariti": 94, "class": [0, 23, 41, 45, 90, 113, 114, 115, 117, 145], "classif": [22, 23, 40, 41, 45, 62, 63], "cleaner": [93, 106], "clear": [15, 101], "clearli": 94, "clip": 119, "close": [6, 9, 61], "closer": 57, "co": [119, 135], "code": [7, 91, 93, 94, 100], "coeffici": 11, "col": 29, "collect": 1, "column": [3, 4, 6, 10, 11, 12, 29, 114, 148], "combin": [16, 17, 58, 90, 131, 139, 144, 146], "common": 29, "commonli": [0, 17, 22, 23, 24, 25, 27, 37, 44, 46, 48, 63, 68, 83, 84, 85, 86, 87, 88, 92, 94, 115, 154], "compar": [100, 155], "compat": [1, 72, 81, 90, 92, 100], "complex": [0, 4, 20, 60, 86, 88, 90], "compon": [9, 14, 101], "compos": [66, 67, 68, 83, 84, 85, 86, 87, 88, 90], "comput": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 29, 37, 39, 40, 41, 42, 44, 45, 46, 48, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 150, 152, 156], "computation": 9, "concaten": [25, 26, 27, 148, 149, 155, 158], "concept": [0, 9], "condit": [2, 3, 6], "conjunct": 29, "connect": [39, 66, 67, 68, 73], "consid": [6, 9, 90, 91], "consider": 9, "consist": [13, 94, 99, 100, 150], "consistent_tensor": 100, "constant": [40, 41, 46, 48, 49, 61, 75, 76, 77, 78, 79, 80, 81, 94, 150], "constant_pad": 150, "construct": [0, 90, 113, 152, 156], "contain": [3, 4, 9, 10, 11, 12, 14, 23, 29, 37, 39, 40, 41, 45, 102, 103, 104, 105, 107, 108, 109, 110, 112, 120, 121, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 147], "context": [91, 93], "contextmanag": 93, "contigu": 151, "continu": [59, 98], "contrast": [78, 79, 80], "contribut": [83, 86, 87, 88, 142], "control": [57, 91, 100], "conv": [76, 77], "conv1": [66, 67, 68, 83, 84, 85, 86, 87, 88], "conv1d": [28, 36, 69, 70, 83, 86], "conv1dmodel": 66, "conv2": [66, 67, 68], "conv2d": [28, 36, 69, 70, 76, 84, 87, 90], "conv2dmodel": 67, "conv3d": [28, 36, 69, 70, 77, 85, 88], "conv3dmodel": 68, "convblock": 90, "convent": 106, "converg": [9, 64], "convert": [13, 15, 23, 63, 101], "convolut": [25, 26, 27, 29, 66, 67, 68, 84, 85, 87, 88, 150], "convolv": [25, 26, 27, 66, 67, 68], "core": [14, 90, 101], "correctli": [9, 14, 100], "correspond": [4, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 37, 39, 60, 63, 71, 73, 75, 76, 77, 78, 79, 80, 84, 85, 104, 105, 107, 108, 111, 128, 129, 135, 137, 148, 150, 152, 156, 158], "cosh": [119, 136, 141], "cosin": [121, 125, 126, 135], "could": 14, "count": 146, "cover": [1, 25, 26, 27], "creat": [0, 13, 14, 90, 92, 100, 114, 115, 116, 117, 118, 155], "critic": [9, 100], "cross": [40, 41], "cross_entropi": [36, 43], "cube": 119, "cumul": [17, 58], "current": [14, 91], "custom": [0, 13, 57, 59, 90, 100, 114], "custommodul": 13, "d": [27, 34, 52, 56, 77, 80, 81, 85, 88, 92, 113], "d_": [27, 52, 56, 68, 85, 88], "d_1": 81, "d_2": 81, "d_n": 81, "d_out": [27, 52, 56], "data": [0, 7, 13, 15, 24, 25, 27, 29, 33, 34, 39, 60, 64, 66, 67, 68, 73, 80, 83, 85, 88, 92, 94, 100, 101, 102, 103, 109, 112, 113, 114, 115, 116, 117, 118, 145, 150, 151, 152, 153, 154, 156], "dataset": 93, "ddot": 110, "debug": [91, 99], "decompos": [2, 10, 12], "decomposit": [1, 2, 6, 9, 10, 12], "deep": [0, 46, 58, 61, 90, 100], "deeper": [0, 61], "def": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 73, 75, 76, 77, 78, 81, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "default": [8, 12, 13, 14, 15, 16, 19, 23, 25, 26, 27, 30, 31, 32, 33, 34, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 63, 66, 67, 68, 71, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 96, 97, 98, 101, 113, 114, 115, 116, 117, 118, 130, 131, 132, 139, 143, 144, 145, 146, 148, 150, 152, 155, 158], "defin": [0, 58, 83, 90, 94, 97, 98, 111, 124, 143], "definit": [0, 2], "delta": [23, 42, 63], "delta_": [23, 63], "demonstr": [0, 1, 90, 94], "denomin": [46, 48, 49, 75, 76, 77, 78, 79, 80, 81, 103], "denot": [7, 62, 66, 67, 68, 143], "dens": 0, "dense1": 0, "dense2": 0, "densiti": [17, 58], "depend": [0, 7, 8, 40, 41, 42, 44, 45, 66, 104, 113, 130, 132, 152, 156], "depth": [27, 34, 52, 56, 68, 77, 80, 85, 88], "depthwis": [25, 26, 27], "deriv": [9, 10, 23, 58, 63, 64, 66, 67, 68, 71, 73], "descend": 12, "descent": 0, "describ": [3, 4], "deseri": 13, "design": [0, 1, 15, 16, 21, 61, 90, 94], "desir": [13, 143, 145], "destin": 14, "det": [1, 5], "det_a": 3, "detail": [0, 100, 106], "determin": [0, 1, 2, 3, 66, 67, 68, 84, 85, 87, 88, 91, 96, 97, 98], "develop": [0, 90, 100], "diag": [9, 119], "diagon": [9, 10, 12, 113, 114, 142], "diagonaliz": 4, "dict": [14, 72], "dictionari": [14, 15], "differ": [7, 23, 37, 63, 71, 92, 99, 100, 112, 118, 144, 154], "differenti": [0, 2, 11, 58, 90, 96, 97, 98, 101, 115, 117], "dilat": [25, 26, 27, 66, 67, 68], "dilation_height": 29, "dilation_width": 29, "dimens": [3, 4, 6, 7, 10, 11, 12, 15, 23, 37, 39, 46, 48, 49, 63, 66, 67, 68, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 92, 94, 96, 101, 105, 130, 131, 132, 139, 142, 143, 144, 146, 148, 150, 152, 154, 155, 156, 157, 158], "dimension": [7, 9, 10, 12, 25, 26, 27, 50, 51, 52, 54, 55, 56, 66, 67, 68, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 92, 105, 106, 110, 113, 128, 131, 139, 142, 144, 147, 151, 152, 154, 156], "direct": 4, "directli": [99, 100, 145], "disabl": [91, 93], "discontinu": 134, "discret": [97, 100], "distribut": [17, 23, 58, 63, 66, 67, 68, 71, 73, 83, 84, 85, 96, 97, 98, 100, 131, 139, 142, 144, 155], "div": 119, "divid": [9, 23, 25, 26, 27, 63, 103], "divis": [0, 9, 25, 26, 27, 103], "do": [9, 11, 13, 30, 31, 32, 33, 90, 91, 118, 142, 150], "document": [0, 94, 100], "doe": [0, 7, 8, 9, 10, 12, 13, 91, 93, 96, 97, 98, 99, 113, 114, 115, 116, 117, 118, 153], "doesn": 93, "don": 93, "dot": [4, 7, 81, 86, 87, 88, 105, 110, 119, 146, 148, 155, 158], "down": 90, "drawback": 16, "drawn": [96, 97, 98, 100], "dropout": [17, 30, 32, 33, 34], "dropout1d": [35, 36], "dropout2d": [35, 36], "dropout3d": [35, 36], "dtype": [13, 15, 101, 113, 114, 115, 116, 117, 118, 145], "due": [7, 9, 25, 26, 60], "dure": [0, 3, 4, 6, 9, 10, 12, 13, 14, 15, 23, 30, 31, 32, 33, 34, 46, 48, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 93, 101, 102, 130, 131, 132, 139, 144], "dy": [19, 59], "dynam": [14, 81, 91], "e": [3, 4, 6, 7, 10, 12, 13, 23, 62, 63, 114, 126, 128, 129, 136, 141, 142, 146], "each": [4, 7, 9, 10, 12, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 37, 39, 46, 48, 60, 63, 66, 67, 68, 71, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 148, 150, 152, 155, 156, 158], "eas": 0, "easi": [0, 15], "easili": 15, "economi": 12, "edg": 150, "educ": 0, "effect": [23, 25, 26, 27, 29, 57, 58, 60, 62, 63, 64, 75, 76, 77, 78, 79, 80, 81, 91, 92, 93, 148, 158], "effici": [0, 1, 6, 11, 29, 90, 93], "eig": 5, "eigenvalu": [4, 10], "eigenvector": 4, "eigval": 4, "eigvec": 4, "either": [39, 94, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 145], "element": [9, 10, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 60, 63, 66, 67, 68, 81, 83, 84, 85, 86, 87, 88, 92, 101, 102, 103, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 147, 150, 152, 153, 154, 156], "elementwise_affin": 81, "elsewher": [86, 87, 88, 114], "elu": [18, 36, 65, 70], "elumodel": 57, "empti": 14, "enabl": [0, 7, 12, 14, 15, 60, 66, 67, 68, 71, 73, 90, 91, 93, 96, 97, 98, 101], "encapsul": [90, 101], "end": [8, 16, 19, 20, 21, 57, 59, 60, 61, 83, 84, 85, 86, 87, 88, 107, 108, 110, 120, 124, 130, 132, 134, 146, 150], "enforc": 14, "engin": 9, "ensur": [9, 10, 11, 13, 14, 15, 23, 59, 63, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 111, 131, 139, 144, 150], "enter": 93, "entir": [32, 33, 34, 100], "entri": 154, "entropi": [40, 41], "environ": 0, "ep": [40, 41, 46, 48, 49, 75, 76, 77, 78, 79, 80, 81], "epsilon": [75, 76, 77, 78, 79, 80, 81], "equal": [7, 83, 84, 85], "equat": [4, 9, 11], "equival": [106, 142, 151], "error": [4, 6, 14, 17, 42, 44, 58, 90, 93, 94], "especi": [62, 92, 93, 94, 99], "essenti": [0, 1, 7, 9, 26, 29, 90, 99, 100, 130], "euclidean": 8, "evalu": [14, 46, 48, 75, 76, 77, 78, 79, 80], "even": [93, 113, 114, 115, 116, 117, 118], "everywher": 134, "exact": [14, 143], "exampl": 106, "except": [134, 146, 148, 158], "exclus": 97, "execut": 93, "exist": [11, 146], "exit": 93, "exp": [16, 21, 22, 24, 57, 61, 119], "expand": [29, 152, 156], "expect": [2, 81, 90, 94], "experi": [0, 99, 100], "experiment": 100, "explan": [7, 9], "explod": [61, 75, 76, 77], "explor": [90, 100], "expon": [7, 111], "exponenti": [16, 21, 23, 57, 61, 63, 128], "extern": 0, "extract": [29, 68, 83, 85, 113, 130, 132], "extrem": 9, "ey": 119, "f": [0, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 63], "facilit": [23, 63, 66, 67, 68, 90], "factor": [16, 25, 26, 27, 29, 94], "failur": 90, "fals": [12, 13, 14, 15, 30, 31, 32, 33, 34, 46, 48, 66, 67, 68, 71, 73, 91, 96, 97, 98, 101, 113, 114, 115, 116, 117, 118, 130, 131, 132, 139, 144, 145], "faster": 93, "fc": [67, 68, 83, 84, 85, 86, 87, 88], "fc1": [58, 60, 61, 62, 64, 73], "fc2": [58, 60, 61, 62, 64, 73], "featur": [37, 39, 46, 68, 71, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90], "feed": 101, "fill": [96, 97, 98, 115, 116, 117, 118], "filter": [25, 26, 27, 29, 67, 68], "filter_height": 29, "filter_s": 29, "filter_width": 29, "find": [11, 130, 132], "finish": 93, "first": [4, 37, 71, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 158], "fit": 90, "fix": 150, "flatten": [29, 110, 149, 151, 152], "flexibl": [0, 90, 94, 115, 116], "float": [13, 15, 16, 19, 30, 31, 32, 33, 34, 40, 41, 42, 46, 48, 49, 57, 59, 75, 76, 77, 78, 79, 80, 81, 94, 101, 124, 145], "float32": [13, 15, 101, 113, 114, 115, 117, 145], "float64": [118, 145], "flow": [58, 62, 64, 66, 67, 68, 71, 73, 91], "focu": 0, "focus": 0, "follow": [0, 1, 4, 10, 11, 12, 16, 17, 19, 20, 21, 22, 23, 24, 37, 39, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 94, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 130, 132, 153], "form": [10, 110, 152, 156], "formul": 17, "formula": [4, 12, 23, 63, 106, 144], "forward": [0, 13, 14, 90], "found": 0, "foundat": [14, 90, 101], "four": 150, "frac": [2, 3, 4, 6, 7, 8, 9, 11, 12, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 37, 39, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "frame": 34, "framework": [0, 75, 76, 77, 78, 79, 80], "from": [0, 7, 9, 13, 14, 15, 29, 37, 46, 48, 66, 67, 68, 71, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 90, 92, 93, 94, 96, 97, 98, 100, 101, 106, 107, 108, 112, 113, 130, 131, 132, 139, 144, 146, 148, 152, 154, 155, 156, 158], "full": 12, "full_matric": 12, "fulli": [1, 39, 73, 100], "function": [0, 1, 14, 57, 58, 59, 60, 61, 62, 63, 64, 75, 76, 77, 78, 79, 80, 81, 90, 94, 100], "fundament": [0, 39, 73], "further": [0, 100, 131, 139, 144], "futur": 72, "g": [3, 4, 7, 10, 12, 146], "gamma": [75, 76, 77, 78, 79, 80, 81], "gaussian": [17, 58], "gelu": [18, 36, 65, 70], "gelunetwork": 58, "gener": [9, 79, 93, 96, 97, 98, 99, 100, 105], "give": 0, "given": [3, 4, 7, 9, 10, 12, 29, 91, 116, 118], "global": [91, 93, 99, 100], "grad": [13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 29, 37, 39, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "grad_output": 7, "gradient": [0, 1, 13, 15, 90, 91, 93, 96, 97, 98, 113, 114, 115, 116, 117, 118, 145], "graph": [0, 101, 113, 114, 115, 116, 117, 118], "greater": 124, "group": [25, 26, 27, 66, 67, 68], "guarante": 99, "h": [26, 27, 29, 33, 34, 51, 52, 55, 56, 76, 77, 79, 80, 85, 88], "h_": [26, 27, 51, 52, 55, 56, 67, 68, 84, 85, 87, 88], "h_out": [26, 27, 51, 52, 55, 56], "h_stack": 148, "ha": [4, 25, 26, 27, 75, 76, 77, 78, 79, 80, 81, 106, 142, 146, 148, 155, 158], "half": 137, "hand": 11, "handl": [0, 9, 14, 90, 93], "hardwar": 0, "have": [3, 4, 6, 9, 10, 12, 15, 26, 27, 90, 114, 115, 116, 117, 118, 130, 132, 146, 148, 154, 155, 158], "height": [26, 27, 29, 33, 34, 51, 52, 55, 56, 67, 68, 76, 77, 79, 80, 84, 85, 87, 88], "help": [0, 19, 21, 34, 57, 59, 61, 64, 75, 76, 77, 83, 84, 86, 87, 91, 92, 93, 94], "henc": 153, "here": [2, 14, 37, 90, 92, 93, 94, 100], "hierarch": 90, "hierarchi": 67, "high": [0, 97], "higher": [105, 106, 110, 128], "highest": 97, "highlight": [86, 87, 88], "hint": 94, "histori": [96, 97, 98, 113, 114, 115, 116, 117, 118], "horizont": [148, 155], "how": [0, 90, 94], "howev": 13, "hstack": 149, "huber": 42, "huber_loss": [36, 43], "hyperbol": [24, 64, 126, 136, 141], "i": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "ideal": 0, "ident": [6, 7, 70, 74, 99, 100, 114, 153], "ii": 142, "ij": [23, 63, 104, 105, 106, 110], "ik": [104, 105, 106], "ill": [3, 9], "imag": [26, 48, 67, 79], "implement": [0, 9, 14, 29, 148, 158], "impli": [66, 67], "import": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 31, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "improp": 100, "improv": [46, 58, 61, 64, 94], "in1_featur": [37, 71], "in2_featur": [37, 71], "in_channel": [66, 67, 68, 76, 77, 83, 84, 85, 86, 87, 88, 90], "in_featur": [39, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 71, 73, 75, 78, 81, 83, 84, 85, 86, 87, 88], "includ": [0, 1, 7, 8, 14, 15, 90, 94, 100, 106, 150], "inclus": [15, 97], "incom": [39, 73], "incorpor": [12, 58], "increas": [25, 26, 27, 29, 92, 148, 158], "independ": [25, 26, 27, 81, 106], "index": [92, 113, 114, 153], "indic": [15, 41, 45, 83, 91, 101], "individu": 81, "induc": [21, 61], "inf": 140, "infer": 93, "infin": [10, 12], "inform": [0, 13, 93], "infti": 8, "initi": [13, 15, 66, 67, 68, 71, 73, 75, 76, 77, 81, 90, 96, 99, 100, 114, 115, 116, 117, 118, 145], "inner": [0, 104, 119], "input": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 93, 94, 100, 101, 102, 104, 105, 106, 110, 113, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "input1": 71, "input2": 71, "input_": [16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56], "input_1": 37, "input_2": 37, "input_data": [57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 72, 73, 75, 76, 77, 78, 81, 83, 84, 85, 86, 87, 88], "input_s": 63, "input_tensor": [0, 13, 23, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90], "insid": [91, 93], "insight": 0, "inspect": [14, 15], "instabl": 9, "instal": 0, "instanc": [0, 14, 15, 48, 78, 79, 80, 81, 145, 152, 156], "instance_norm": [36, 47, 78, 79, 80], "instancenorm1d": [70, 82], "instancenorm1dmodel": 78, "instancenorm2d": [70, 82], "instancenorm3d": [70, 82], "instead": [0, 93, 94], "int": [7, 8, 13, 15, 23, 25, 26, 27, 29, 49, 50, 51, 52, 54, 55, 56, 63, 66, 67, 68, 71, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 96, 97, 98, 99, 101, 113, 114, 115, 117, 124, 130, 131, 132, 139, 143, 144, 145, 146, 150, 152, 153, 154, 155, 156, 157], "integ": [7, 25, 26, 27, 66, 67, 68, 81, 84, 85, 86, 87, 88, 94, 97, 98, 100, 115, 117, 131, 139, 143, 144, 150, 152, 153, 156], "integr": [1, 15, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 73, 83, 84, 85, 86, 87, 88], "intend": 13, "intens": 9, "intent": 94, "interact": [37, 71, 90, 100], "interfac": 14, "interfer": [91, 93], "intermedi": 9, "intern": 90, "interpret": [23, 63, 94, 146], "interv": 96, "introduc": [20, 58, 60, 62, 64], "intuit": [0, 90], "inv": 5, "inv_a": 6, "invari": [84, 87], "invers": [0, 3, 6, 7, 9, 121, 122, 123], "invert": [3, 6, 7, 11], "involv": [2, 3, 4, 6, 9, 10, 12, 16, 17, 19, 20, 21, 22, 24, 37, 39, 66, 67, 68, 71, 73, 94, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 118, 128, 129, 130, 132, 135, 137, 150, 152, 156], "is_leaf": 101, "issu": [61, 75, 76, 77], "iter": [13, 14], "ith": [23, 63], "its": [7, 9, 13, 25, 26, 27, 29, 58, 60, 86, 87, 88, 90, 91, 92, 93, 117, 130, 132, 145, 153], "itself": [2, 7], "j": [23, 63, 75, 76, 77, 78, 79, 80, 83, 84, 86, 87, 155], "jk": 105, "join": 146, "k": [7, 25, 66, 76, 77, 79, 80, 83, 86, 87, 104, 105, 113, 114, 146], "k_d": [27, 68, 85, 88], "k_h": [26, 27, 67, 68, 84, 85, 88], "k_w": [26, 27, 67, 68, 84, 85, 88], "keep": [14, 60, 93, 153], "keep_grad": [15, 96, 97, 98, 101, 113, 114, 115, 116, 117, 118, 145], "keep_var": 14, "keepdim": [130, 131, 132, 139, 144], "kei": 14, "kept": [131, 139, 144], "kernel": [25, 26, 27, 29, 50, 51, 52, 54, 55, 56, 66, 67, 68, 84, 85, 88], "kernel_s": [50, 51, 52, 54, 55, 56, 66, 67, 68, 76, 77, 83, 84, 85, 86, 87, 88], "keyerror": 14, "keyword": [14, 72], "kj": [104, 106], "kroneck": [23, 63], "kwarg": [14, 72], "l": [2, 9, 25, 32, 50, 54, 75, 76, 77, 78, 79, 80, 81], "l_": [25, 50, 54, 66, 83, 86], "l_out": [25, 50, 54], "lambda": [4, 21, 61], "lambda_1": 4, "lambda_2": 4, "lambda_i": 4, "lambda_n": 4, "languag": [66, 71, 83, 86], "larg": [9, 90, 93], "larger": [25, 26, 27, 29, 107, 150], "largest": 130, "last": [23, 49, 63, 105, 106, 146], "layer": [0, 14, 23, 39, 46, 48, 49, 63, 66, 67, 68, 71, 72, 73, 81, 83, 84, 85, 86, 87, 88, 90, 100, 150], "layer_norm": [36, 47, 81], "layernorm": [70, 82], "layernormmodel": 81, "lead": [58, 78, 79, 80, 81, 100], "leaf": 101, "leaki": [19, 59], "leaky_relu": [18, 36, 59], "leakyrelu": [65, 70], "learn": [0, 7, 9, 20, 23, 57, 59, 60, 63, 66, 67, 68, 71, 73, 90, 92, 99], "learnabl": [13, 14, 15, 46, 48, 49, 66, 67, 68, 71, 73, 75, 76, 77, 78, 79, 80, 81, 90], "least": [9, 10, 12, 142], "left": [7, 8, 9, 12, 17, 23, 58, 63, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88], "length": [25, 32, 50, 54, 66, 72, 75, 78, 83, 86, 150], "leq": [111, 124], "less": [16, 19, 42, 57, 59, 124], "let": 4, "level": 0, "leverag": [11, 90], "librari": [0, 1, 14, 90, 94, 100, 101], "lightweight": 0, "like": [0, 13, 14, 25, 61, 75, 76, 77, 78, 79, 80, 91, 92, 94, 145], "likelihood": 45, "limit": 124, "linalg": [0, 5], "linalgerror": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12], "linear": [0, 1, 2, 9, 10, 11, 16, 17, 19, 20, 21, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 71, 72, 75, 78, 81, 83, 84, 85, 86, 87, 88, 114], "list": [13, 15, 49, 72, 81, 94, 97, 101, 113, 115, 116, 117, 118, 143, 153, 154, 157], "liter": [40, 41, 42, 44, 45, 66, 67, 68], "ln": 111, "load": [13, 14, 15], "load_state_dict": 14, "local": [29, 66], "log": [45, 119], "logarithm": [111, 128, 129], "logic": 90, "logit": [23, 63], "long": 143, "loss": [0, 9, 23, 40, 41, 42, 44, 45, 57, 58, 59, 60, 61, 62, 63, 64, 72, 75, 76, 77, 78, 79, 80, 81], "low": [0, 97], "lower": 2, "lowest": 97, "lu": 6, "lucid": [5, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 95, 119, 149], "m": [84, 85, 87, 88, 114], "machin": [0, 9, 92, 99], "mai": [0, 4, 6, 9, 93, 100], "main": [0, 10, 113, 114], "maintain": [9, 13, 14, 21, 57, 58, 61, 75, 76, 77, 78, 79, 80], "make": [0, 62, 81, 84, 87, 90, 92, 100, 101, 106], "manag": [0, 14, 90, 91, 93, 100], "manhattan": 8, "manipul": 0, "manual": [40, 41, 45, 93], "map": [14, 22, 24, 62, 64], "mask": 13, "match": [11, 14, 40, 42, 44, 49, 128, 152, 153, 156, 157], "math": [125, 135, 140], "mathbf": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 17, 19, 20, 21, 22, 23, 24, 37, 39, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 104, 105, 106, 110, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "mathcal": [75, 76, 77, 78, 79, 80, 81], "mathemat": 6, "mathrm": 9, "matmul": 119, "matric": [1, 3, 4, 6, 9, 11, 12, 104, 105, 106, 114], "matrix": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 29, 37, 72, 73, 90, 104], "matrix_pow": 5, "max": [8, 20, 54, 55, 56, 60, 86, 87, 88, 107, 119, 124], "max_pool": [86, 87, 88], "max_pool1d": [36, 53], "max_pool2d": [36, 53], "max_pool3d": [36, 53], "max_valu": 124, "maximum": [8, 60, 86, 87, 88, 119, 124, 130], "maxpool1d": [70, 89], "maxpool1dmodel": 86, "maxpool2d": [67, 70, 89], "maxpool2dmodel": 87, "maxpool3d": [68, 70, 89], "maxpool3dmodel": 88, "mean": [10, 13, 21, 25, 26, 27, 30, 40, 41, 42, 44, 45, 46, 48, 57, 58, 59, 60, 61, 62, 64, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 91, 98, 119, 124, 128, 129, 130, 132, 135, 137, 139, 142, 143, 144], "meaning": 94, "mechan": [0, 37], "memori": 93, "method": [0, 1, 6, 40, 41, 42, 44, 45, 100], "middl": 92, "might": 90, "min": [108, 119, 124], "min_valu": 124, "mind": [0, 93], "minim": [0, 75, 76, 77, 78, 79, 80, 81], "minimalist": 0, "minimum": [119, 124, 132], "minu": 62, "mirror": [116, 118], "mismatch": [14, 90], "miss": [14, 90], "mitig": [19, 57, 59, 61, 75, 76, 77], "mode": [0, 34, 46, 48, 150], "model": [0, 7, 10, 12, 13, 14, 15, 23, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 81, 83, 84, 85, 86, 87, 88, 93, 100], "modif": 93, "modifi": [91, 93, 99, 148, 158], "modul": [0, 13, 15, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 94, 100], "modular": [0, 14, 90], "momentum": [46, 48, 75, 76, 77, 78, 79, 80], "moor": 9, "more": [0, 4, 57, 90, 98, 106, 142, 155], "most": [1, 87], "mse": [42, 44], "mse_loss": [36, 43], "mu": [75, 76, 77, 78, 79, 80, 81, 144], "mu_i": [78, 79, 80], "mul": 119, "multi": [23, 41, 45, 63, 131, 139, 144], "multidimension": 96, "multipl": [0, 1, 7, 11, 29, 90, 92, 96, 97, 98, 104, 109], "multipli": [7, 39, 73, 109, 110], "must": [2, 3, 4, 6, 7, 10, 11, 12, 14, 49, 93, 142, 146, 148, 150, 152, 153, 155, 156, 158], "mymodel": [14, 15, 90], "n": [7, 8, 25, 26, 27, 29, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 66, 67, 68, 71, 73, 75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 114, 131, 142, 144], "n1": 8, "name": [14, 94], "nan": [10, 12], "natur": [9, 66, 71, 83, 86, 111, 128, 129], "ndarrai": [13, 15, 94, 101, 113, 116, 118, 145], "ndim": [10, 12, 15, 101], "ne": 7, "necessari": [9, 93, 148, 158], "need": [23, 71, 90, 93], "neg": [7, 9, 12, 16, 45, 57, 59, 60, 61, 146], "negative_slop": [19, 59], "neq": 8, "nest": 90, "network": [0, 13, 14, 15, 17, 20, 21, 22, 23, 24, 25, 26, 27, 37, 39, 46, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 81, 83, 84, 85, 86, 87, 88, 90, 100, 101, 115, 117, 130, 132, 150], "neural": [0, 13, 14, 15, 17, 20, 21, 22, 23, 24, 25, 26, 27, 37, 39, 46, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 81, 83, 84, 85, 86, 87, 88, 90, 100, 101, 115, 117, 130, 132, 150], "neuralnetwork": 60, "neuron": 59, "new": [14, 15, 16, 17, 19, 20, 21, 22, 24, 37, 39, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 145, 146, 148, 150, 152, 153, 155, 156, 157, 158], "nll": 45, "nll_loss": [36, 43], "nn": [0, 18, 28, 35, 38, 43, 47, 53, 65, 69, 70, 74, 82, 89], "no_grad": 91, "node": 101, "nois": [12, 100], "non": [4, 7, 9, 12, 17, 19, 20, 57, 58, 59, 60, 61, 62, 64, 93, 111, 124], "none": [14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 92, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "norm": [1, 5], "normal": [17, 21, 23, 24, 46, 48, 49, 58, 61, 63, 75, 76, 77, 78, 79, 80, 81, 98, 100], "normalized_shap": [49, 81], "note": 25, "noth": [30, 31, 32, 33], "notimplementederror": 14, "notin": 124, "np": [13, 15, 94, 101, 106, 113, 114, 115, 117, 118, 129, 145], "num_class": 63, "num_featur": [75, 76, 77, 78, 79, 80], "number": [3, 4, 6, 9, 11, 12, 15, 25, 26, 27, 29, 32, 33, 34, 37, 39, 41, 45, 46, 48, 62, 66, 67, 68, 71, 73, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 96, 99, 101, 111, 114, 130, 131, 132, 143, 144, 146, 148, 150, 152, 153, 154, 156, 158], "numer": [6, 9, 40, 41, 46, 48, 49, 75, 76, 77, 78, 79, 80, 81, 94, 103, 115, 117], "numpi": [0, 13, 15, 94, 101, 106, 113, 114, 115, 117, 129, 142, 145, 150, 152, 156], "o": [85, 88, 115, 116], "object": [1, 14, 90, 93, 102, 103, 107, 108, 109, 112, 145], "occur": [93, 146], "occurr": 7, "off": 91, "offer": [0, 90, 100], "offset": 114, "often": [7, 25, 26, 27, 29, 117], "onc": 93, "one": [23, 25, 39, 50, 54, 61, 62, 63, 66, 75, 78, 83, 86, 92, 94, 98, 112, 116, 130, 132, 147, 151, 155], "ones": [37, 39, 66, 67, 68, 73, 75, 76, 77, 78, 79, 80, 81, 90, 114, 116, 119], "ones_lik": 119, "onli": [0, 60, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88, 91, 124, 130, 132, 142, 150, 151, 153, 154], "onto": [10, 12], "oper": [0, 1, 6, 9, 13, 14, 16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 29, 34, 37, 39, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 71, 72, 73, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 115, 117, 128, 129, 130, 131, 132, 135, 137, 139, 142, 144, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "operatornam": [7, 9], "optim": [0, 1, 7, 9, 10, 12, 13, 15, 29, 66, 67, 68, 90, 93], "option": [8, 12, 13, 14, 15, 16, 19, 23, 26, 27, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 59, 63, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 96, 97, 98, 101, 113, 114, 115, 116, 117, 118, 130, 131, 132, 139, 143, 144, 145, 146, 152, 154, 155], "ord": 8, "order": [8, 12, 143], "ordereddict": 14, "origin": [30, 64, 150, 151, 152, 153, 156, 157], "orthogon": [9, 10, 12], "orthonorm": 10, "other": [0, 6, 13, 14, 90, 91, 93, 100, 101, 115, 117, 142], "otherwis": [16, 19, 20, 21, 23, 57, 59, 60, 61, 63, 83, 84, 85, 86, 87, 88, 107, 108, 130, 132], "otim": [9, 37, 71], "out": [16, 17, 19, 20, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 46, 48, 49, 50, 51, 52, 54, 55, 56, 66, 67, 68, 83, 84, 85, 86, 87, 88, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "out_channel": [66, 67, 68, 76, 77, 83, 84, 85, 86, 87, 88, 90], "out_featur": [37, 39, 57, 58, 59, 60, 61, 62, 63, 64, 67, 68, 71, 73, 75, 78, 81, 83, 84, 85, 86, 87, 88], "outer": 119, "outlier": 42, "output": [0, 7, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 30, 31, 32, 33, 34, 37, 39, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 128, 129, 130, 131, 132, 135, 137, 139, 142, 143, 144, 150, 152, 156], "output_height": 29, "output_width": 29, "over": [1, 14, 23, 63, 66, 67, 68, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 96, 130, 131, 132, 139, 142, 144], "overdetermin": 9, "overfit": [31, 34], "overridden": 14, "own": [25, 26, 27, 90], "p": [8, 9, 15, 30, 31, 32, 33, 34, 83, 86, 87], "p_d": [85, 88], "p_h": [84, 85, 88], "p_w": [84, 85, 88], "packag": [1, 90, 99, 100], "pad": [25, 26, 27, 29, 50, 51, 52, 54, 55, 56, 66, 67, 68, 76, 77, 83, 84, 85, 86, 87, 88, 149], "pad_after_dim1": 150, "pad_after_dim2": 150, "pad_before_dim1": 150, "pad_before_dim2": 150, "pad_width": 150, "padding_height": 29, "padding_width": 29, "pair": 37, "param": [14, 15], "param1": 14, "paramet": [0, 14, 90, 94, 100], "parent": 90, "part": [13, 14, 90, 91, 93, 100, 113, 114, 115, 116, 117, 118], "partial": [2, 3, 4, 6, 7, 8, 9, 11, 12, 16, 17, 19, 20, 21, 22, 23, 24, 37, 39, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "particip": 15, "particularli": [0, 9, 23, 39, 63, 73, 78, 79, 80, 81, 91], "pass": [0, 9, 14, 15, 57, 58, 59, 60, 61, 62, 64, 67, 68, 71, 72, 73, 75, 76, 77, 78, 81, 83, 84, 85, 86, 87, 88, 90, 94, 101, 131, 139, 142, 143, 144, 146, 148, 151, 153, 154, 158], "patch": [29, 84], "pattern": [20, 60, 66, 67, 68], "penros": 9, "per": [78, 79, 80, 81], "perform": [0, 1, 2, 9, 14, 15, 17, 25, 26, 27, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 93, 99, 100, 102, 103, 106, 109, 112, 128, 130, 132, 139, 143], "permut": 143, "persist": [13, 96, 97, 98], "perturb": [4, 11, 12], "phi": [17, 58], "pi": [17, 58, 125, 135, 140], "pinv": 5, "pipelin": 100, "placehold": [14, 72], "plai": [94, 100], "point": 91, "pool": [50, 51, 52, 54, 55, 56, 67, 68, 83, 84, 85, 86, 87, 88, 130, 132], "poorli": 6, "popul": 14, "pose": 9, "posit": [2, 7, 14, 57, 59, 60, 61, 83, 84, 85, 86, 87, 88, 92, 111, 152, 156], "possibl": 0, "potenti": [9, 72, 154], "power": [0, 7, 92, 93, 119], "practic": 9, "preced": [15, 101], "predefin": 61, "prefix": 14, "prepar": [92, 150, 152, 156], "prepend": 14, "preprocess": [29, 100], "present": [75, 76, 77, 78, 79, 80, 81, 84], "preserv": [30, 113, 114, 115, 116, 117, 118, 131, 139, 144], "prevent": [31, 34, 93], "previou": 93, "primari": [0, 94], "print": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "probabilist": 100, "probabl": [17, 23, 30, 31, 32, 33, 34, 40, 58, 63], "problem": [9, 10, 12, 19, 57, 59], "process": [7, 10, 12, 25, 26, 27, 48, 61, 64, 66, 68, 71, 75, 76, 77, 78, 79, 80, 81, 83, 85, 86, 88, 94], "produc": [66, 67, 68, 99, 100], "product": [0, 10, 12, 62, 71, 81, 90, 104, 105, 109, 110], "program": [91, 100], "project": [10, 12], "projector": 9, "promin": [83, 85, 86, 87, 88], "promot": 90, "propag": [3, 4, 6, 9, 10, 11, 12, 14, 37, 39, 84, 85, 104, 105, 106, 110, 130, 132, 150, 153, 157], "properli": [23, 63, 90], "properti": [1, 3, 6, 7, 17, 21, 30, 58, 61], "proport": 144, "provid": [0, 1, 14, 17, 39, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 99, 100, 101, 106, 116, 130, 132, 143, 145, 152, 154, 156], "pseudo": [6, 9], "purpos": [96, 115, 117], "python": 94, "pytorch": 145, "q": 10, "qr": 5, "quad": [9, 86, 87, 88, 102, 103, 107, 108, 109, 112], "quotient": 103, "r": 10, "rais": [14, 90, 111], "rand": [95, 100], "randint": [95, 100], "randn": [90, 95, 99, 100], "random_integ": 100, "random_tensor": 100, "randomli": [30, 31, 32, 33, 34], "rang": [1, 22, 24, 25, 26, 41, 45, 62, 64, 97, 121, 122, 124], "rank": 9, "rather": 153, "ravel": 149, "raw": [23, 63, 94], "re": [15, 93], "readabl": [90, 94], "readi": 0, "real": [9, 12, 62], "rearrang": 29, "receiv": [86, 87, 88, 150], "reciproc": [9, 119, 129, 137], "recognit": 67, "rectangular": 114, "rectifi": [19, 20, 59, 60], "recurr": 81, "recurs": 14, "reduc": [75, 76, 77, 78, 79, 80, 83, 84, 85, 86, 87, 88, 93, 94, 130, 131, 132, 139, 144], "reduct": [12, 40, 41, 42, 44, 45, 130, 132], "refer": [0, 14, 100, 113, 114, 146], "reflect": 91, "regardless": [9, 151], "region": [27, 150], "regist": [13, 14, 15, 90], "register_buff": 13, "register_paramet": 14, "registr": [14, 90], "regress": 44, "regular": [9, 34], "relat": [93, 114, 115], "reli": 93, "relu": [0, 16, 18, 19, 36, 57, 59, 65, 66, 67, 68, 70, 71, 72, 73], "remain": [13, 49], "rememb": 100, "remov": 154, "rep": 156, "repeat": [149, 156], "repetit": [152, 156], "replac": 100, "repres": [6, 8, 12, 14, 15, 37, 39, 46, 48, 49, 66, 67, 68, 71, 73, 81, 94, 102, 103, 109, 112, 113, 131, 142, 143, 144], "represent": [84, 87], "reproduc": [96, 97, 98, 99, 100], "requir": [0, 13, 16, 17, 19, 20, 21, 22, 24, 37, 39, 72, 90, 91, 93, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "requires_grad": [13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 29, 37, 39, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "rescal": [40, 41, 45], "research": 90, "reset": [15, 99, 101], "reshap": [0, 39, 67, 68, 92, 94, 149, 151], "resourc": 93, "respect": [2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 16, 17, 19, 20, 21, 22, 23, 24, 37, 39, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 128, 129, 130, 131, 132, 135, 137, 139, 142, 143, 144, 150, 152, 156], "restor": 93, "restructur": 153, "result": [2, 6, 7, 9, 14, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 37, 39, 50, 51, 52, 54, 55, 56, 63, 90, 91, 93, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "retain": [15, 101, 117, 130, 131, 132, 139, 144], "return": [0, 13, 14, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 81, 83, 84, 85, 86, 87, 88, 90, 94], "reusabl": 90, "revers": [0, 143], "revert": 93, "right": [7, 8, 9, 11, 12, 17, 23, 58, 63, 75, 76, 77, 78, 79, 80, 81, 86, 87, 88], "risk": 94, "robust": 90, "role": [94, 100], "root": 137, "rout": [86, 87, 88], "routin": 0, "row": [3, 4, 6, 11, 39, 114, 158], "rule": [6, 7, 92, 102, 103, 107, 108, 109, 111, 112], "run": [0, 13, 46, 48, 75, 76, 77, 78, 79, 80, 93, 99, 100], "running_mean": [13, 46, 48, 75, 76, 77, 78, 79, 80], "running_var": [46, 48, 75, 76, 77, 78, 79, 80], "runtim": 90, "s_d": [85, 88], "s_h": [84, 85, 88], "s_w": [84, 85, 88], "same": [3, 4, 6, 7, 11, 23, 30, 31, 32, 33, 34, 46, 48, 49, 66, 67, 68, 72, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 99, 100, 106, 116, 118, 128, 130, 131, 132, 146, 148, 151, 153, 154, 155, 158], "sampl": [0, 71, 73, 81, 98, 100], "satisfi": [2, 4, 11], "satur": 57, "save": [13, 15, 93], "scalabl": 90, "scalar": [3, 8, 40, 41, 42, 44, 45, 94], "scale": [4, 9, 16, 21, 23, 46, 48, 49, 57, 59, 61, 62, 63, 64, 75, 76, 77, 78, 79, 80, 81, 94, 100, 144], "scenario": 81, "scientif": 92, "score": 23, "scratch": 0, "script": 100, "seamless": [90, 100], "seamlessli": [1, 15, 90, 94], "second": [4, 37, 71, 92, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 148], "section": 106, "see": [0, 106], "seed": [95, 96, 97, 98, 100], "select": [86, 88, 139], "self": [0, 13, 14, 15, 21, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 73, 75, 76, 77, 78, 81, 83, 84, 85, 86, 87, 88, 90], "selu": [18, 30, 36, 65, 70], "selunetwork": 61, "sensit": [42, 75, 76, 77], "separ": [25, 26, 27, 78, 79, 80], "sequenc": [7, 25, 146, 148, 150, 152, 155, 156, 158], "sequenti": [25, 72], "seri": [25, 66, 83, 86], "serial": [13, 14], "serv": [14, 90], "set": [15, 25, 26, 27, 59, 60, 61, 66, 67, 68, 71, 73, 75, 76, 77, 78, 79, 80, 96, 97, 98, 99, 100, 101, 117, 118, 124, 130, 132, 145], "setup": 0, "sever": [9, 66, 67, 68, 83, 84, 85, 86, 87, 88, 93], "sgd": 0, "sgn": 8, "shape": [0, 3, 4, 6, 7, 9, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 92, 94, 96, 97, 98, 100, 101, 104, 114, 115, 116, 117, 118, 124, 129, 130, 131, 132, 135, 137, 139, 143, 144, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 158], "shapelik": 97, "shift": [46, 48, 49, 75, 76, 77, 78, 79, 80, 81], "shorthand": 106, "should": [13, 93, 96, 97, 98, 121, 122, 142, 150], "show": 91, "showcas": 0, "shown": 99, "side": [11, 25, 26, 27, 50, 51, 52, 54, 55, 56, 66, 67, 68, 83, 84, 85, 86, 87, 88, 93], "sigma": [9, 62, 75, 76, 77, 78, 79, 80, 81, 143], "sigma_i": 9, "sigmoid": [18, 36, 65, 70], "sigmoidnetwork": 62, "sign": [7, 119], "signal": [66, 67, 68, 75, 78, 83, 84, 85, 86, 87, 88], "signific": 93, "similar": [0, 106, 129, 145, 150], "similarli": [12, 142], "simpl": [0, 25, 26, 27, 37, 39, 50, 51, 52, 54, 55, 56, 58, 60, 61, 62, 64, 66, 67, 68, 71, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 104, 105, 110], "simplegelumodel": 58, "simpleleakyrelumodel": 59, "simplemodel": [0, 73], "simplerelumodel": 60, "simpleselumodel": 61, "simplesigmoidmodel": 62, "simpletanhmodel": 64, "simpli": [91, 142, 143, 153], "simplic": 60, "sin": [119, 125], "sinc": [7, 10, 25, 26, 27, 91, 93, 98], "sine": [122, 135, 136], "singl": [7, 10, 12, 23, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 81, 84, 85, 86, 87, 88, 94, 146, 154], "singleton": 81, "singular": [3, 6, 7, 9, 11, 12], "sinh": [119, 126, 141], "size": [12, 15, 25, 26, 27, 29, 32, 33, 34, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 66, 67, 68, 71, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 97, 100, 101, 130, 131, 132, 139, 144, 146, 148, 154, 157, 158], "skip": 93, "slice": [37, 142], "slide": [29, 83, 85, 86, 88], "slope": [19, 57, 59], "small": [9, 19, 40, 41, 46, 48, 49, 59, 61, 75, 76, 77, 78, 79, 80, 81, 84, 87], "smaller": [90, 108], "smallest": 132, "smooth": [17, 57, 58], "so": 90, "softmax": [18, 36, 65, 70], "softmaxmodel": 63, "solut": [9, 11], "solv": [1, 2, 5, 9, 10, 12], "solver": 1, "some": [16, 31, 75, 76, 77, 78, 79, 80, 93, 94], "sometim": 92, "sourc": 100, "space": [4, 10, 12, 25, 26, 27, 29, 66, 67, 68], "spatial": [67, 68, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88], "spatio": 68, "special": [0, 9, 13, 14, 15, 100], "specif": [0, 78, 79, 80, 90, 91, 100, 130, 132, 152, 156], "specifi": [0, 8, 23, 29, 34, 40, 41, 42, 44, 45, 49, 63, 66, 67, 68, 81, 84, 85, 86, 87, 88, 94, 96, 97, 98, 99, 111, 113, 114, 115, 117, 118, 124, 130, 131, 132, 139, 143, 144, 145, 146, 148, 150, 152, 153, 154, 155, 156, 157, 158], "speech": 78, "split": [146, 148, 158], "sqrt": [17, 58, 75, 76, 77, 78, 79, 80, 81, 119, 121, 122], "squar": [2, 3, 4, 6, 7, 9, 10, 11, 12, 42, 44, 119, 137], "squeez": 149, "stabil": [6, 9, 40, 41, 46, 48, 49, 75, 76, 77, 78, 79, 80, 81], "stack": [148, 149, 158], "standard": [17, 19, 57, 58, 59, 98, 100, 106], "state": [13, 14, 15, 91, 93, 99], "state_dict": [14, 15], "statist": [9, 30, 46, 48], "step": [15, 29, 93], "stochast": 0, "storag": 101, "store": [13, 14, 15, 93, 101], "str": [14, 40, 41, 42, 44, 45], "straightforward": [91, 102], "strict": 14, "stride": [25, 26, 27, 29, 50, 51, 52, 54, 55, 56, 66, 67, 68, 83, 84, 85, 86, 87, 88], "stride_height": 29, "stride_width": 29, "string": [14, 66, 67, 68], "structur": [0, 10, 13, 14, 90, 94, 114], "style": [48, 78, 79], "sub": [90, 119], "sub_tensor": 101, "subclass": [0, 14, 15, 90], "submodul": [14, 90], "subsequ": 100, "subtract": [0, 112], "suitabl": 96, "sum": [8, 23, 40, 41, 42, 44, 45, 63, 102, 105, 110, 119, 142, 144, 146, 148, 152, 156, 158], "sum_": [7, 23, 63, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 104, 105, 131, 139, 142, 144, 152], "sum_i": [8, 110], "sum_j": 110, "sum_k": 106, "summar": [83, 84, 85], "summat": 7, "super": [0, 13, 14, 15, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 73, 75, 76, 77, 78, 81, 83, 84, 85, 86, 87, 88, 90], "support": [0, 1, 7, 8, 9, 10, 12, 90, 100, 101, 102, 103, 106, 107, 108, 109, 111, 112, 113, 114, 124, 129, 131, 135, 137, 139, 142, 143, 144, 146, 153], "sure": 90, "svd": [5, 9], "symmetr": [2, 64], "syntax": 106, "system": [1, 2, 9, 10, 11, 91], "t": [9, 93, 101, 106, 145], "t1": 145, "t2": 145, "tailor": 90, "take": [10, 83, 84, 85, 86, 87, 88, 93], "taken": 142, "tan": 119, "tangent": [24, 64, 123, 140, 141], "tanh": [17, 18, 36, 58, 65, 70, 119], "tanhnetwork": 64, "target": [40, 41, 42, 44, 45], "task": [0, 1, 22, 23, 26, 37, 40, 41, 44, 45, 62, 63, 66, 67, 68, 78, 79, 80, 83, 85, 86, 88, 92, 100, 114], "techniqu": [2, 6, 46, 78, 79, 80], "tempor": [66, 68, 85, 88], "temporarili": 93, "tensor": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 93, 94, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "term": [9, 37], "text": [3, 7, 8, 16, 19, 20, 21, 23, 25, 26, 27, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 63, 66, 67, 68, 83, 84, 85, 86, 87, 88, 97, 102, 103, 105, 107, 108, 109, 111, 112, 120, 124, 130, 131, 132, 134, 139, 144, 146, 148, 150, 151, 152, 153, 154, 156, 157, 158], "th": [37, 78, 79, 80, 107, 108, 111], "than": [16, 19, 42, 57, 59, 124, 142, 150, 155], "thei": [0, 12, 13, 94, 153], "them": [14, 29, 92, 146, 155], "therebi": [84, 85, 87, 88], "thi": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 20, 22, 23, 24, 25, 26, 27, 29, 37, 39, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 105, 106, 110, 115, 116, 117, 118, 124, 128, 129, 130, 131, 132, 135, 137, 139, 142, 143, 144, 145, 150, 152, 153], "thing": 93, "those": 0, "three": [12, 27, 52, 56, 68, 77, 80, 85, 88], "threshold": [9, 42], "through": [0, 4, 9, 10, 12, 37, 39, 57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 81, 83, 84, 85, 86, 87, 88, 98, 104, 105, 110, 151, 153, 154, 157], "throughout": 21, "tile": 149, "time": [7, 25, 59, 61, 66, 83, 84, 85, 86, 87, 88, 93, 152, 156], "tool": [0, 90, 92, 100], "top": [2, 3, 4, 10, 12, 37, 39, 66, 67, 68, 71, 73], "torch": 145, "total": [15, 101, 153], "trace": [1, 119], "track": [0, 75, 76, 77, 78, 79, 80, 90, 91, 93, 96, 97, 98, 113, 114, 115, 116, 117, 118, 145], "track_running_stat": [75, 76, 77, 78, 79, 80], "trail": 49, "train": [0, 13, 14, 23, 30, 31, 32, 33, 34, 46, 48, 58, 59, 61, 62, 63, 64, 75, 76, 77, 78, 79, 80, 90, 93], "trainabl": [75, 76, 77, 78, 79, 80, 90], "transfer": [48, 78, 79], "transform": [0, 4, 37, 39, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 92], "translat": [84, 87], "transpos": [0, 2, 119], "treat": [13, 81, 90], "triangular": [2, 10], "true": [12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 29, 30, 31, 32, 33, 34, 37, 39, 46, 48, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 96, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "tupl": [4, 10, 12, 14, 15, 25, 26, 27, 29, 49, 50, 51, 52, 54, 55, 56, 66, 67, 68, 72, 81, 83, 84, 85, 86, 87, 88, 94, 97, 101, 115, 117, 130, 131, 132, 139, 144, 146, 148, 150, 153, 154, 155, 157, 158], "twice": 150, "two": [0, 3, 4, 6, 7, 9, 10, 12, 25, 26, 27, 37, 51, 55, 67, 71, 76, 79, 84, 87, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 142], "type": [13, 14, 15, 37, 71, 101, 113, 114, 115, 116, 117, 118, 145], "typeerror": 14, "typic": [1, 13, 23, 30, 61, 63, 75, 76, 77, 78, 79, 80, 93, 94, 157], "u": [9, 12], "unchang": [13, 34, 57, 59, 60, 61, 72, 151, 154], "undefin": 111, "under": 90, "underbrac": 7, "underdetermin": 9, "underli": [0, 145, 148, 151, 153, 158], "understand": 0, "unexpect": [14, 100], "unfold": [28, 36], "uniform": [66, 67, 68, 71, 73, 96, 97, 100], "uniformli": 96, "unintend": 93, "uniqu": [2, 9, 11], "unit": [16, 17, 19, 20, 21, 57, 58, 59, 60, 61], "unless": 101, "unlik": [13, 19, 57, 59, 81], "unnecessari": 93, "unpad": 150, "unsqueez": 149, "unstabl": 6, "updat": [13, 75, 76, 77, 78, 79, 80, 90, 93], "upper": 10, "us": [0, 1, 2, 4, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 37, 39, 44, 46, 48, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 96, 97, 98, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 128, 130, 131, 132, 139, 144, 150, 152, 154, 156, 157], "usag": 1, "user": [0, 90], "util": [0, 1, 90, 100], "v": [4, 9, 12, 113], "v_stack": 158, "valid": [66, 67, 68, 143], "valu": [0, 3, 7, 8, 9, 12, 14, 16, 19, 22, 23, 24, 25, 26, 27, 29, 40, 41, 42, 44, 45, 46, 48, 49, 57, 59, 60, 61, 62, 64, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 94, 96, 97, 98, 99, 100, 113, 114, 120, 121, 122, 124, 127, 128, 129, 130, 132, 134, 135, 137, 138, 146, 150, 151, 153, 157], "valuabl": 100, "valueerror": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12], "vanish": [57, 61, 75, 76, 77], "var": 119, "variabl": [14, 72, 90, 91, 93, 96], "varianc": [21, 30, 46, 48, 61, 75, 76, 77, 78, 79, 80, 81, 98, 144], "variat": [78, 79, 80], "varieti": 100, "variou": [60, 100, 130, 132, 150], "vdot": 110, "vector": [4, 9, 10, 11, 12, 37, 39, 71, 73, 104, 105, 106, 110], "veri": 9, "versatil": 100, "version": [12, 110], "vertic": [155, 158], "video": [27, 34, 68, 80, 85, 88], "view": [84, 85, 86, 87, 88, 153], "vision": [26, 67, 71], "volumetr": [27, 34, 68, 80, 85, 88], "vstack": 149, "w": [26, 27, 29, 33, 34, 37, 39, 51, 52, 55, 56, 66, 67, 68, 71, 73, 76, 77, 79, 80, 85, 88], "w_": [26, 27, 51, 52, 55, 56, 67, 68, 84, 85, 87, 88], "w_out": [26, 27, 51, 52, 55, 56], "wa": 93, "wai": [91, 93, 153], "want": 0, "we": [0, 92], "weight": [25, 26, 27, 37, 39, 40, 41, 45, 46, 48, 49, 66, 67, 68, 71, 73, 75, 76, 77, 78, 79, 80, 81, 90, 96, 100], "what": 93, "when": [0, 7, 14, 16, 19, 25, 26, 27, 57, 72, 75, 76, 77, 78, 79, 80, 91, 93, 94, 100, 111], "where": [3, 4, 6, 7, 8, 9, 10, 12, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 93, 94, 100, 102, 103, 107, 108, 109, 111, 112, 124, 128, 129, 130, 131, 132, 135, 137, 139, 142, 143, 144, 146, 150, 152, 156], "whether": [3, 14, 15, 91, 96, 97, 98, 101, 130, 131, 132, 139, 144], "which": [0, 3, 4, 6, 7, 8, 9, 10, 12, 14, 19, 23, 42, 57, 58, 59, 63, 64, 75, 76, 77, 78, 79, 80, 81, 91, 93, 94, 96, 97, 121, 122, 123, 124, 125, 126, 129, 130, 131, 132, 133, 135, 136, 137, 139, 140, 141, 142, 144, 146, 152, 153, 155, 157], "while": [0, 30, 58, 60, 90, 93, 153, 155], "who": 0, "whose": [12, 116, 118, 120, 124, 128, 134], "wide": [1, 9, 20, 60, 66, 67], "wider": [25, 26], "width": [26, 27, 29, 33, 34, 51, 52, 55, 56, 67, 68, 76, 77, 79, 80, 84, 85, 87, 88], "window": [50, 51, 52, 54, 55, 56, 83, 84, 85, 86, 87, 88, 130, 132], "wise": [16, 17, 19, 20, 21, 22, 23, 24, 63, 90, 92, 102, 103, 106, 107, 108, 109, 111, 112, 120, 121, 122, 123, 124, 125, 126, 127, 129, 133, 134, 135, 136, 137, 138, 140, 141, 142, 148, 158], "within": [13, 24, 58, 60, 61, 62, 64, 66, 67, 68, 72, 75, 76, 77, 78, 81, 83, 84, 85, 86, 87, 88, 93, 124], "without": [0, 37, 39, 66, 67, 68, 71, 73, 91, 130, 151, 153, 157], "won": 93, "work": [0, 2, 92, 94], "workflow": 100, "workload": 0, "wrap": [90, 93, 145], "wrapper": 90, "x": [0, 1, 11, 13, 14, 23, 37, 39, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 96, 97, 98, 128], "x1": 71, "x2": 71, "x\u2081": 71, "x\u2082": 71, "y": [57, 58, 59, 60, 61, 62, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 96, 97, 98], "yet": [0, 92], "yield": [14, 93], "you": [90, 91, 93, 100, 114, 118, 143, 145], "your": [90, 91, 93, 100], "z": [117, 118], "zero": [7, 9, 10, 16, 19, 25, 26, 27, 30, 31, 32, 33, 34, 50, 51, 52, 54, 55, 56, 57, 59, 60, 61, 66, 67, 68, 81, 83, 84, 85, 86, 87, 88, 90, 114, 118, 119, 124, 134, 150], "zero_grad": [15, 101], "zeros_lik": 119, "\u03c3\u1d62": 9}, "titles": ["Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "nn.ELU", "nn.GELU", "nn.LeakyReLU", "nn.ReLU", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Tanh", "Activation Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "lucid.nn", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.types", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.diag", "lucid.eye", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.unsqueeze", "lucid.vstack"], "titleterms": {"1": 92, "1d": 92, "2": 92, "2d": 92, "3": 92, "It": [91, 93], "ab": 120, "activ": [18, 36, 65, 70], "ad": 92, "add": 102, "addit": 9, "admonit": 94, "advanc": 29, "algebra": 5, "alias": 94, "align": 92, "alpha_dropout": 30, "anoth": 145, "arcco": 121, "arcsin": 122, "arctan": 123, "attribut": [13, 15, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 101], "avg_pool1d": 50, "avg_pool2d": 51, "avg_pool3d": 52, "avgpool1d": 83, "avgpool2d": 84, "avgpool3d": 85, "axi": 92, "backpropag": 101, "backward": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 17, 19, 20, 21, 22, 23, 24, 37, 39, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "batch_norm": 46, "batchnorm1d": 75, "batchnorm2d": 76, "batchnorm3d": 77, "benefit": 93, "bilinear": [37, 71], "binari": 119, "binary_cross_entropi": 40, "broadcast": 92, "buffer": 13, "calcul": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 17, 19, 20, 21, 22, 23, 24, 29, 37, 39, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "case": 94, "choleski": 2, "class": [13, 14, 15, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 101], "clip": 124, "co": 125, "compon": [0, 90], "concaten": 146, "conclus": [0, 90, 91, 92, 93, 100], "conv1d": [25, 66], "conv2d": [26, 67], "conv3d": [27, 68], "convolut": [28, 36, 69, 70], "core": 0, "cosh": 126, "creat": [15, 101, 145], "cross_entropi": 41, "cube": 127, "custom": 14, "defin": 14, "definit": 94, "det": 3, "detail": 9, "diag": 113, "dilat": 29, "div": 103, "dot": 104, "dropout": [31, 35, 36], "dropout1d": 32, "dropout2d": 33, "dropout3d": 34, "eig": 4, "elu": [16, 57], "exampl": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "exp": 128, "ey": 114, "featur": [0, 1, 100], "flatten": 147, "forward": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 17, 19, 20, 21, 22, 23, 24, 29, 37, 39, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "from": 145, "function": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 91, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "gelu": [17, 58], "gener": [95, 119], "grad_en": 91, "gradient": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 17, 19, 20, 21, 22, 23, 24, 37, 39, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "guidelin": 94, "how": [91, 93], "hstack": 148, "huber_loss": 42, "ident": 72, "index": 101, "inner": 105, "input": 145, "instance_norm": 48, "instancenorm1d": 78, "instancenorm2d": 79, "instancenorm3d": 80, "integr": [90, 100], "inv": 6, "iter": 101, "kei": [0, 90, 100], "layer": [65, 69, 70, 74, 82, 89], "layer_norm": 49, "layernorm": 81, "leaky_relu": 19, "leakyrelu": 59, "learn": 100, "limit": 0, "linalg": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12], "linear": [5, 36, 38, 39, 70, 73, 74], "list": 145, "log": 129, "loss": [36, 43], "lucid": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 36, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "matmul": 106, "matrix": 106, "matrix_pow": 7, "max": 130, "max_pool1d": 54, "max_pool2d": 55, "max_pool3d": 56, "maximum": 107, "maxpool1d": 86, "maxpool2d": 87, "maxpool3d": 88, "mean": 131, "method": [14, 15, 101], "min": 132, "minimum": 108, "model": 90, "modul": [14, 70], "more": 100, "mse_loss": 44, "mul": 109, "multipl": 106, "new": 92, "newaxi": 92, "nll_loss": 45, "nn": [13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90], "no_grad": 93, "norm": 8, "normal": [36, 47, 70, 82], "note": 0, "number": 95, "ones": 115, "ones_lik": 116, "oper": [5, 106, 119], "organ": 90, "outer": 110, "overview": [0, 90, 100], "pad": 150, "paramet": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 93, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "perform": 101, "pinv": 9, "pitfal": [91, 93], "pool": [36, 53, 70, 89], "potenti": [91, 93], "power": 111, "properti": [15, 101], "qr": 10, "rais": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12], "rand": 96, "randint": 97, "randn": 98, "random": [95, 96, 97, 98, 99, 100], "ravel": 151, "reciproc": 133, "relu": [20, 60], "repeat": 152, "reshap": 153, "return": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 91, 93, 96, 97, 98, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "rule": 106, "seed": 99, "selu": [21, 61], "sigmoid": [22, 62], "sign": 134, "signatur": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 44, 45, 46, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 91, 93, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158], "sin": 135, "sinh": 136, "slice": 101, "softmax": [23, 63], "solv": 11, "sqrt": 137, "squar": 138, "squeez": 154, "stack": 155, "sub": 112, "sum": 139, "svd": 12, "tan": 140, "tanh": [24, 64, 141], "tensor": [92, 101, 119, 145, 149], "through": 101, "tile": 156, "trace": 142, "track": 101, "transpos": 143, "type": 94, "unari": 119, "unfold": 29, "unsqueez": 157, "us": [94, 145], "usag": [0, 13, 91, 92, 93, 94], "utilit": 149, "var": 144, "vstack": 158, "why": 94, "work": [91, 93], "zero": 117, "zeros_lik": 118}})