Search.setIndex({"alltitles": {"@ Operator": [[183, "operator"]], "Activation Functions": [[46, null]], "Activation Layers": [[107, null], [122, null]], "Additional Details": [[16, "additional-details"]], "Admonitions and Usage Guidelines": [[170, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[57, "advanced-example-with-dilation"]], "Advanced Features": [[251, "advanced-features"]], "AlexNet": [[20, null]], "Algorithm": [[154, "algorithm"], [155, "algorithm"], [156, "algorithm"], [157, "algorithm"], [158, "algorithm"], [159, "algorithm"], [160, "algorithm"], [161, "algorithm"], [162, "algorithm"], [163, "algorithm"], [164, "algorithm"]], "Architecture": [[20, "architecture"], [24, "architecture"], [25, "architecture"], [26, "architecture"], [32, "architecture"]], "Attributes": [[5, "attributes"], [20, "attributes"], [23, "attributes"], [27, "attributes"], [32, "attributes"], [35, "attributes"], [37, "attributes"], [38, "attributes"], [39, "attributes"], [40, "attributes"], [41, "attributes"], [42, "attributes"], [99, "attributes"], [100, "attributes"], [101, "attributes"], [102, "attributes"], [103, "attributes"], [104, "attributes"], [105, "attributes"], [106, "attributes"], [108, "attributes"], [109, "attributes"], [110, "attributes"], [112, "attributes"], [113, "attributes"], [114, "attributes"], [115, "attributes"], [116, "attributes"], [118, "attributes"], [119, "attributes"], [120, "attributes"], [123, "attributes"], [124, "attributes"], [125, "attributes"], [127, "attributes"], [128, "attributes"], [129, "attributes"], [130, "attributes"], [131, "attributes"], [133, "attributes"], [134, "attributes"], [135, "attributes"], [136, "attributes"], [137, "attributes"], [138, "attributes"], [139, "attributes"], [141, "attributes"], [142, "attributes"], [143, "attributes"], [144, "attributes"], [145, "attributes"], [146, "attributes"], [147, "attributes"], [148, "attributes"], [149, "attributes"], [178, "attributes"], [242, "attributes"], [243, "attributes"], [244, "attributes"], [245, "attributes"], [246, "attributes"], [247, "attributes"], [248, "attributes"], [249, "attributes"]], "Backward Gradient Calculation": [[9, "backward-gradient-calculation"], [10, "backward-gradient-calculation"], [11, "backward-gradient-calculation"], [13, "backward-gradient-calculation"], [14, "backward-gradient-calculation"], [15, "backward-gradient-calculation"], [16, "backward-gradient-calculation"], [17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [38, "backward-gradient-calculation"], [39, "backward-gradient-calculation"], [40, "backward-gradient-calculation"], [41, "backward-gradient-calculation"], [42, "backward-gradient-calculation"], [44, "backward-gradient-calculation"], [45, "backward-gradient-calculation"], [47, "backward-gradient-calculation"], [48, "backward-gradient-calculation"], [49, "backward-gradient-calculation"], [50, "backward-gradient-calculation"], [51, "backward-gradient-calculation"], [52, "backward-gradient-calculation"], [65, "backward-gradient-calculation"], [67, "backward-gradient-calculation"], [89, "backward-gradient-calculation"], [98, "backward-gradient-calculation"], [99, "backward-gradient-calculation"], [100, "backward-gradient-calculation"], [101, "backward-gradient-calculation"], [102, "backward-gradient-calculation"], [103, "backward-gradient-calculation"], [104, "backward-gradient-calculation"], [105, "backward-gradient-calculation"], [106, "backward-gradient-calculation"], [108, "backward-gradient-calculation"], [109, "backward-gradient-calculation"], [110, "backward-gradient-calculation"], [112, "backward-gradient-calculation"], [113, "backward-gradient-calculation"], [114, "backward-gradient-calculation"], [115, "backward-gradient-calculation"], [116, "backward-gradient-calculation"], [123, "backward-gradient-calculation"], [124, "backward-gradient-calculation"], [125, "backward-gradient-calculation"], [127, "backward-gradient-calculation"], [128, "backward-gradient-calculation"], [129, "backward-gradient-calculation"], [130, "backward-gradient-calculation"], [131, "backward-gradient-calculation"], [133, "backward-gradient-calculation"], [134, "backward-gradient-calculation"], [135, "backward-gradient-calculation"], [136, "backward-gradient-calculation"], [137, "backward-gradient-calculation"], [138, "backward-gradient-calculation"], [139, "backward-gradient-calculation"], [144, "backward-gradient-calculation"], [145, "backward-gradient-calculation"], [146, "backward-gradient-calculation"], [147, "backward-gradient-calculation"], [148, "backward-gradient-calculation"], [149, "backward-gradient-calculation"], [179, "backward-gradient-calculation"], [180, "backward-gradient-calculation"], [181, "backward-gradient-calculation"], [182, "backward-gradient-calculation"], [183, "backward-gradient-calculation"], [184, "backward-gradient-calculation"], [185, "backward-gradient-calculation"], [186, "backward-gradient-calculation"], [187, "backward-gradient-calculation"], [188, "backward-gradient-calculation"], [189, "backward-gradient-calculation"], [200, "backward-gradient-calculation"], [201, "backward-gradient-calculation"], [202, "backward-gradient-calculation"], [203, "backward-gradient-calculation"], [204, "backward-gradient-calculation"], [205, "backward-gradient-calculation"], [206, "backward-gradient-calculation"], [207, "backward-gradient-calculation"], [208, "backward-gradient-calculation"], [209, "backward-gradient-calculation"], [210, "backward-gradient-calculation"], [211, "backward-gradient-calculation"], [212, "backward-gradient-calculation"], [213, "backward-gradient-calculation"], [214, "backward-gradient-calculation"], [215, "backward-gradient-calculation"], [216, "backward-gradient-calculation"], [217, "backward-gradient-calculation"], [218, "backward-gradient-calculation"], [219, "backward-gradient-calculation"], [220, "backward-gradient-calculation"], [221, "backward-gradient-calculation"], [222, "backward-gradient-calculation"], [223, "backward-gradient-calculation"], [224, "backward-gradient-calculation"], [226, "backward-gradient-calculation"], [228, "backward-gradient-calculation"], [230, "backward-gradient-calculation"], [231, "backward-gradient-calculation"], [232, "backward-gradient-calculation"], [233, "backward-gradient-calculation"], [234, "backward-gradient-calculation"], [235, "backward-gradient-calculation"], [236, "backward-gradient-calculation"], [237, "backward-gradient-calculation"], [238, "backward-gradient-calculation"], [239, "backward-gradient-calculation"]], "Behavior": [[78, "behavior"], [79, "behavior"], [80, "behavior"], [141, "behavior"], [142, "behavior"], [143, "behavior"]], "Benefits": [[168, "benefits"]], "Binary Functions": [[199, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [20, "class-signature"], [23, "class-signature"], [27, "class-signature"], [32, "class-signature"], [35, "class-signature"], [36, "class-signature"], [37, "class-signature"], [38, "class-signature"], [39, "class-signature"], [40, "class-signature"], [41, "class-signature"], [42, "class-signature"], [99, "class-signature"], [100, "class-signature"], [101, "class-signature"], [102, "class-signature"], [103, "class-signature"], [104, "class-signature"], [105, "class-signature"], [106, "class-signature"], [108, "class-signature"], [109, "class-signature"], [110, "class-signature"], [112, "class-signature"], [113, "class-signature"], [114, "class-signature"], [115, "class-signature"], [116, "class-signature"], [118, "class-signature"], [119, "class-signature"], [120, "class-signature"], [123, "class-signature"], [124, "class-signature"], [125, "class-signature"], [127, "class-signature"], [128, "class-signature"], [129, "class-signature"], [130, "class-signature"], [131, "class-signature"], [133, "class-signature"], [134, "class-signature"], [135, "class-signature"], [136, "class-signature"], [137, "class-signature"], [138, "class-signature"], [139, "class-signature"], [141, "class-signature"], [142, "class-signature"], [143, "class-signature"], [144, "class-signature"], [145, "class-signature"], [146, "class-signature"], [147, "class-signature"], [148, "class-signature"], [149, "class-signature"], [152, "class-signature"], [154, "class-signature"], [155, "class-signature"], [156, "class-signature"], [157, "class-signature"], [158, "class-signature"], [159, "class-signature"], [160, "class-signature"], [161, "class-signature"], [162, "class-signature"], [163, "class-signature"], [164, "class-signature"], [178, "class-signature"], [240, "class-signature"], [241, "class-signature"], [242, "class-signature"], [243, "class-signature"], [244, "class-signature"], [245, "class-signature"], [246, "class-signature"], [247, "class-signature"], [248, "class-signature"], [249, "class-signature"]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [7, "conclusion"], [151, "conclusion"], [166, "conclusion"], [167, "conclusion"], [168, "conclusion"], [177, "conclusion"], [241, "conclusion"], [251, "conclusion"]], "Containers": [[43, null]], "ConvNets": [[22, null]], "Convolution Functions": [[56, null], [64, null]], "Convolution Layers": [[111, null], [122, null]], "Core Components": [[7, "core-components"]], "Create a Tensor from a list": [[225, null]], "Creating a Parameter": [[37, null]], "Creating a tensor with gradient tracking": [[178, null]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[251, "custom-pipelines"]], "Defining a Custom Optimizer": [[153, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[36, null]], "Defining a custom optimizer": [[152, null]], "Description": [[169, "description"]], "Dropout Functions": [[63, null], [64, null]], "Dropout Layers": [[117, null], [122, null]], "Example": [[3, null], [3, null], [3, null], [9, "example"], [10, "example"], [11, "example"], [13, "example"], [14, "example"], [15, "example"], [16, "example"], [17, "example"], [18, "example"], [19, "example"], [57, "example"], [151, null], [151, null], [151, null], [166, "example"], [168, "example"], [172, "example"], [173, "example"], [174, "example"], [175, "example"], [176, "example"], [177, null], [177, null], [177, null], [190, "example"], [191, "example"], [192, "example"], [193, "example"], [194, "example"], [195, "example"], [196, "example"], [197, "example"], [198, "example"], [200, "example"], [201, "example"], [202, "example"], [203, "example"], [204, "example"], [205, "example"], [206, "example"], [207, "example"], [209, "example"], [211, "example"], [213, "example"], [214, "example"], [215, "example"], [216, "example"], [217, "example"], [218, "example"], [219, "example"], [220, "example"], [221, "example"], [222, "example"], [223, "example"], [224, "example"], [226, "example"], [228, "example"], [232, "example"], [234, "example"], [235, "example"], [236, "example"], [238, "example"], [239, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[167, null]], "Example 2: Adding a new axis to a 2D tensor": [[167, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[167, null]], "Example Usage": [[7, "example-usage"], [23, "example-usage"], [24, "example-usage"], [25, "example-usage"], [26, "example-usage"], [90, "example-usage"], [240, "example-usage"], [241, "example-usage"], [251, "example-usage"]], "Example Use Cases": [[170, "example-use-cases"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [8, "examples"], [20, "examples"], [21, "examples"], [27, "examples"], [28, "examples"], [29, "examples"], [30, "examples"], [31, "examples"], [32, "examples"], [33, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [44, "examples"], [45, "examples"], [47, "examples"], [48, "examples"], [49, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [53, "examples"], [54, "examples"], [55, "examples"], [58, "examples"], [59, "examples"], [60, "examples"], [61, "examples"], [62, "examples"], [65, "examples"], [67, "examples"], [68, "examples"], [69, "examples"], [70, "examples"], [72, "examples"], [73, "examples"], [74, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [79, "examples"], [80, "examples"], [81, "examples"], [82, "examples"], [83, "examples"], [85, "examples"], [86, "examples"], [87, "examples"], [89, "examples"], [91, "examples"], [93, "examples"], [94, "examples"], [95, "examples"], [96, "examples"], [97, "examples"], [98, "examples"], [99, "examples"], [100, "examples"], [101, "examples"], [102, "examples"], [103, "examples"], [104, "examples"], [105, "examples"], [106, "examples"], [108, "examples"], [109, "examples"], [110, "examples"], [112, "examples"], [113, "examples"], [114, "examples"], [115, "examples"], [116, "examples"], [118, "examples"], [119, "examples"], [120, "examples"], [123, "examples"], [124, "examples"], [125, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [130, "examples"], [131, "examples"], [133, "examples"], [134, "examples"], [135, "examples"], [136, "examples"], [137, "examples"], [138, "examples"], [139, "examples"], [141, "examples"], [142, "examples"], [143, "examples"], [144, "examples"], [145, "examples"], [146, "examples"], [147, "examples"], [148, "examples"], [149, "examples"], [152, "examples"], [153, "examples"], [154, "examples"], [155, "examples"], [156, "examples"], [157, "examples"], [158, "examples"], [159, "examples"], [160, "examples"], [161, "examples"], [162, "examples"], [163, "examples"], [164, "examples"], [169, "examples"], [178, "examples"], [179, "examples"], [180, "examples"], [181, "examples"], [182, "examples"], [184, "examples"], [185, "examples"], [186, "examples"], [187, "examples"], [188, "examples"], [189, "examples"], [208, "examples"], [210, "examples"], [212, "examples"], [225, "examples"], [227, "examples"], [230, "examples"], [231, "examples"], [233, "examples"], [237, "examples"], [242, "examples"], [243, "examples"], [244, "examples"], [245, "examples"], [246, "examples"], [247, "examples"], [248, "examples"], [249, "examples"]], "Features": [[8, "features"]], "Forward Calculation": [[9, "forward-calculation"], [10, "forward-calculation"], [11, "forward-calculation"], [13, "forward-calculation"], [14, "forward-calculation"], [15, "forward-calculation"], [16, "forward-calculation"], [17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [38, "forward-calculation"], [39, "forward-calculation"], [40, "forward-calculation"], [41, "forward-calculation"], [42, "forward-calculation"], [44, "forward-calculation"], [45, "forward-calculation"], [47, "forward-calculation"], [48, "forward-calculation"], [49, "forward-calculation"], [50, "forward-calculation"], [51, "forward-calculation"], [52, "forward-calculation"], [57, "forward-calculation"], [65, "forward-calculation"], [67, "forward-calculation"], [78, "forward-calculation"], [79, "forward-calculation"], [80, "forward-calculation"], [89, "forward-calculation"], [93, "forward-calculation"], [94, "forward-calculation"], [97, "forward-calculation"], [98, "forward-calculation"], [99, "forward-calculation"], [100, "forward-calculation"], [101, "forward-calculation"], [102, "forward-calculation"], [103, "forward-calculation"], [104, "forward-calculation"], [105, "forward-calculation"], [106, "forward-calculation"], [108, "forward-calculation"], [109, "forward-calculation"], [110, "forward-calculation"], [112, "forward-calculation"], [113, "forward-calculation"], [114, "forward-calculation"], [115, "forward-calculation"], [116, "forward-calculation"], [118, "forward-calculation"], [119, "forward-calculation"], [120, "forward-calculation"], [123, "forward-calculation"], [124, "forward-calculation"], [125, "forward-calculation"], [127, "forward-calculation"], [128, "forward-calculation"], [129, "forward-calculation"], [130, "forward-calculation"], [131, "forward-calculation"], [133, "forward-calculation"], [134, "forward-calculation"], [135, "forward-calculation"], [136, "forward-calculation"], [137, "forward-calculation"], [138, "forward-calculation"], [139, "forward-calculation"], [141, "forward-calculation"], [142, "forward-calculation"], [143, "forward-calculation"], [144, "forward-calculation"], [145, "forward-calculation"], [146, "forward-calculation"], [147, "forward-calculation"], [148, "forward-calculation"], [149, "forward-calculation"], [179, "forward-calculation"], [180, "forward-calculation"], [181, "forward-calculation"], [182, "forward-calculation"], [183, "forward-calculation"], [184, "forward-calculation"], [185, "forward-calculation"], [186, "forward-calculation"], [187, "forward-calculation"], [188, "forward-calculation"], [189, "forward-calculation"], [200, "forward-calculation"], [201, "forward-calculation"], [202, "forward-calculation"], [203, "forward-calculation"], [204, "forward-calculation"], [205, "forward-calculation"], [206, "forward-calculation"], [207, "forward-calculation"], [208, "forward-calculation"], [209, "forward-calculation"], [210, "forward-calculation"], [211, "forward-calculation"], [212, "forward-calculation"], [213, "forward-calculation"], [214, "forward-calculation"], [215, "forward-calculation"], [216, "forward-calculation"], [217, "forward-calculation"], [218, "forward-calculation"], [219, "forward-calculation"], [220, "forward-calculation"], [221, "forward-calculation"], [222, "forward-calculation"], [223, "forward-calculation"], [224, "forward-calculation"], [226, "forward-calculation"], [228, "forward-calculation"], [230, "forward-calculation"], [231, "forward-calculation"], [232, "forward-calculation"], [233, "forward-calculation"], [234, "forward-calculation"], [235, "forward-calculation"], [236, "forward-calculation"], [237, "forward-calculation"], [238, "forward-calculation"], [239, "forward-calculation"], [242, "forward-calculation"], [243, "forward-calculation"], [244, "forward-calculation"], [245, "forward-calculation"], [246, "forward-calculation"], [247, "forward-calculation"], [248, "forward-calculation"], [249, "forward-calculation"]], "Function Signature": [[9, "function-signature"], [10, "function-signature"], [11, "function-signature"], [13, "function-signature"], [14, "function-signature"], [15, "function-signature"], [16, "function-signature"], [17, "function-signature"], [18, "function-signature"], [19, "function-signature"], [21, "function-signature"], [24, "function-signature"], [25, "function-signature"], [26, "function-signature"], [28, "function-signature"], [29, "function-signature"], [30, "function-signature"], [31, "function-signature"], [33, "function-signature"], [44, "function-signature"], [45, "function-signature"], [47, "function-signature"], [48, "function-signature"], [49, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [53, "function-signature"], [54, "function-signature"], [55, "function-signature"], [57, "function-signature"], [58, "function-signature"], [59, "function-signature"], [60, "function-signature"], [61, "function-signature"], [62, "function-signature"], [65, "function-signature"], [67, "function-signature"], [68, "function-signature"], [69, "function-signature"], [70, "function-signature"], [72, "function-signature"], [73, "function-signature"], [74, "function-signature"], [76, "function-signature"], [77, "function-signature"], [78, "function-signature"], [79, "function-signature"], [80, "function-signature"], [81, "function-signature"], [82, "function-signature"], [83, "function-signature"], [85, "function-signature"], [86, "function-signature"], [87, "function-signature"], [89, "function-signature"], [90, "function-signature"], [91, "function-signature"], [93, "function-signature"], [94, "function-signature"], [95, "function-signature"], [96, "function-signature"], [97, "function-signature"], [98, "function-signature"], [166, "function-signature"], [168, "function-signature"], [169, "function-signature"], [172, "function-signature"], [173, "function-signature"], [174, "function-signature"], [175, "function-signature"], [176, "function-signature"], [179, "function-signature"], [180, "function-signature"], [181, "function-signature"], [182, "function-signature"], [183, "function-signature"], [184, "function-signature"], [185, "function-signature"], [186, "function-signature"], [187, "function-signature"], [188, "function-signature"], [189, "function-signature"], [190, "function-signature"], [191, "function-signature"], [192, "function-signature"], [193, "function-signature"], [194, "function-signature"], [195, "function-signature"], [196, "function-signature"], [197, "function-signature"], [198, "function-signature"], [200, "function-signature"], [201, "function-signature"], [202, "function-signature"], [203, "function-signature"], [204, "function-signature"], [205, "function-signature"], [206, "function-signature"], [207, "function-signature"], [208, "function-signature"], [209, "function-signature"], [210, "function-signature"], [211, "function-signature"], [212, "function-signature"], [213, "function-signature"], [214, "function-signature"], [215, "function-signature"], [216, "function-signature"], [217, "function-signature"], [218, "function-signature"], [219, "function-signature"], [220, "function-signature"], [221, "function-signature"], [222, "function-signature"], [223, "function-signature"], [224, "function-signature"], [225, "function-signature"], [226, "function-signature"], [227, "function-signature"], [228, "function-signature"], [230, "function-signature"], [231, "function-signature"], [232, "function-signature"], [233, "function-signature"], [234, "function-signature"], [235, "function-signature"], [236, "function-signature"], [237, "function-signature"], [238, "function-signature"], [239, "function-signature"]], "Fused Layers": [[121, null], [122, null]], "Future Work": [[4, "future-work"]], "Getting Started": [[153, "getting-started"]], "How It Works": [[166, "how-it-works"], [168, "how-it-works"]], "Image Datasets": [[6, null]], "Image Transformations": [[250, null]], "Indexing and slicing": [[178, null]], "Inspecting Optimizer State": [[153, null], [154, null], [155, null], [156, null], [157, null], [158, null], [159, null], [160, null], [161, null], [162, null], [163, null], [164, null]], "Integration with lucid": [[3, "integration-with-lucid"], [151, "integration-with-lucid"], [177, "integration-with-lucid"], [251, "integration-with-lucid"]], "Iterating through a tensor": [[178, null]], "Key Components": [[3, "key-components"], [151, "key-components"]], "Key Features": [[4, "key-features"], [7, "key-features"], [153, "key-features"], [177, "key-features"]], "Key Transformations": [[251, "key-transformations"]], "LeNet": [[23, null]], "Learn More": [[177, null]], "Limitations": [[7, "limitations"]], "Linear Algebra Operations": [[12, null]], "Linear Functions": [[64, null], [66, null]], "Linear Layers": [[122, null], [126, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[64, null], [71, null]], "Loss Layers": [[122, null], [132, null]], "Lucid": [[7, null]], "Matrix Multiplication Rules": [[183, "matrix-multiplication-rules"]], "Metadata Captured": [[169, "metadata-captured"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [23, "methods"], [27, "methods"], [36, "methods"], [37, "methods"], [152, "methods"], [178, "methods"]], "Modules": [[122, null]], "Normalization Functions": [[64, null], [75, null]], "Normalization Layers": [[122, null], [140, null]], "Notes": [[7, "notes"]], "Optimizers": [[165, null]], "Organizing Models": [[151, "organizing-models"]], "Overview": [[3, "overview"], [4, "overview"], [7, "overview"], [23, "overview"], [24, "overview"], [25, "overview"], [26, "overview"], [151, "overview"], [153, "overview"], [177, "overview"], [251, "overview"]], "Parameters": [[1, "parameters"], [5, "parameters"], [9, "parameters"], [10, "parameters"], [11, "parameters"], [13, "parameters"], [14, "parameters"], [15, "parameters"], [16, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [20, "parameters"], [21, "parameters"], [23, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [35, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [44, "parameters"], [45, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [65, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [85, "parameters"], [86, "parameters"], [87, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [104, "parameters"], [105, "parameters"], [106, "parameters"], [108, "parameters"], [109, "parameters"], [110, "parameters"], [112, "parameters"], [113, "parameters"], [114, "parameters"], [115, "parameters"], [116, "parameters"], [118, "parameters"], [119, "parameters"], [120, "parameters"], [123, "parameters"], [124, "parameters"], [125, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [133, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [154, "parameters"], [155, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"], [159, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [163, "parameters"], [164, "parameters"], [168, "parameters"], [169, "parameters"], [172, "parameters"], [173, "parameters"], [174, "parameters"], [175, "parameters"], [176, "parameters"], [178, "parameters"], [179, "parameters"], [180, "parameters"], [181, "parameters"], [182, "parameters"], [183, "parameters"], [184, "parameters"], [185, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [189, "parameters"], [190, "parameters"], [191, "parameters"], [192, "parameters"], [193, "parameters"], [194, "parameters"], [195, "parameters"], [196, "parameters"], [197, "parameters"], [198, "parameters"], [200, "parameters"], [201, "parameters"], [202, "parameters"], [203, "parameters"], [204, "parameters"], [205, "parameters"], [206, "parameters"], [207, "parameters"], [208, "parameters"], [209, "parameters"], [210, "parameters"], [211, "parameters"], [212, "parameters"], [213, "parameters"], [214, "parameters"], [215, "parameters"], [216, "parameters"], [217, "parameters"], [218, "parameters"], [219, "parameters"], [220, "parameters"], [221, "parameters"], [222, "parameters"], [223, "parameters"], [224, "parameters"], [225, "parameters"], [226, "parameters"], [227, "parameters"], [228, "parameters"], [230, "parameters"], [231, "parameters"], [232, "parameters"], [233, "parameters"], [234, "parameters"], [235, "parameters"], [236, "parameters"], [237, "parameters"], [238, "parameters"], [239, "parameters"], [240, "parameters"], [241, "parameters"], [242, "parameters"], [243, "parameters"], [244, "parameters"], [245, "parameters"], [246, "parameters"], [247, "parameters"], [248, "parameters"], [249, "parameters"]], "Performing backpropagation": [[178, null]], "Pooling Functions": [[64, null], [84, null]], "Pooling Layers": [[122, null], [150, null]], "Potential Pitfalls": [[166, "potential-pitfalls"], [168, "potential-pitfalls"]], "Properties": [[37, "properties"], [178, "properties"]], "Raises": [[9, "raises"], [10, "raises"], [11, "raises"], [13, "raises"], [14, "raises"], [15, "raises"], [16, "raises"], [17, "raises"], [18, "raises"], [19, "raises"]], "Random Number Generations": [[171, null]], "References": [[5, "references"], [153, "references"]], "Returns": [[9, "returns"], [10, "returns"], [11, "returns"], [13, "returns"], [14, "returns"], [15, "returns"], [16, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [21, "returns"], [24, "returns"], [25, "returns"], [26, "returns"], [28, "returns"], [29, "returns"], [30, "returns"], [31, "returns"], [33, "returns"], [44, "returns"], [45, "returns"], [47, "returns"], [48, "returns"], [49, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [53, "returns"], [54, "returns"], [55, "returns"], [57, "returns"], [58, "returns"], [59, "returns"], [60, "returns"], [61, "returns"], [62, "returns"], [65, "returns"], [67, "returns"], [68, "returns"], [69, "returns"], [70, "returns"], [72, "returns"], [73, "returns"], [74, "returns"], [76, "returns"], [77, "returns"], [78, "returns"], [79, "returns"], [80, "returns"], [81, "returns"], [82, "returns"], [83, "returns"], [85, "returns"], [86, "returns"], [87, "returns"], [89, "returns"], [90, "returns"], [91, "returns"], [93, "returns"], [94, "returns"], [95, "returns"], [96, "returns"], [97, "returns"], [98, "returns"], [166, "returns"], [168, "returns"], [172, "returns"], [173, "returns"], [174, "returns"], [175, "returns"], [176, "returns"], [179, "returns"], [180, "returns"], [181, "returns"], [182, "returns"], [183, "returns"], [184, "returns"], [185, "returns"], [186, "returns"], [187, "returns"], [188, "returns"], [189, "returns"], [190, "returns"], [191, "returns"], [192, "returns"], [193, "returns"], [194, "returns"], [195, "returns"], [196, "returns"], [197, "returns"], [198, "returns"], [200, "returns"], [201, "returns"], [202, "returns"], [203, "returns"], [204, "returns"], [205, "returns"], [206, "returns"], [207, "returns"], [208, "returns"], [209, "returns"], [210, "returns"], [211, "returns"], [212, "returns"], [213, "returns"], [214, "returns"], [215, "returns"], [216, "returns"], [217, "returns"], [218, "returns"], [219, "returns"], [220, "returns"], [221, "returns"], [222, "returns"], [223, "returns"], [224, "returns"], [225, "returns"], [226, "returns"], [227, "returns"], [228, "returns"], [230, "returns"], [231, "returns"], [232, "returns"], [233, "returns"], [234, "returns"], [235, "returns"], [236, "returns"], [237, "returns"], [238, "returns"], [239, "returns"]], "See Also": [[153, "see-also"]], "Tensor Generating Functions": [[199, null]], "Tensor Operations": [[199, null]], "Tensor Utilites": [[229, null]], "Type Definitions": [[170, "type-definitions"]], "Unary Functions": [[199, null]], "Usage": [[4, "usage"], [35, "usage"], [90, "usage"], [166, "usage"], [167, "usage"], [168, "usage"], [230, "usage"], [240, "usage"], [241, "usage"], [251, "usage"]], "Use another Tensor as input": [[225, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using the ASGD Optimizer": [[154, null]], "Using the Adadelta Optimizer": [[155, null]], "Using the Adagrad Optimizer": [[156, null]], "Using the Adam Optimizer": [[157, null]], "Using the AdamW Optimizer": [[158, null]], "Using the Adamax Optimizer": [[159, null]], "Using the NAdam Optimizer": [[160, null]], "Using the RAdam Optimizer": [[161, null]], "Using the RMSprop Optimizer": [[162, null]], "Using the Rprop Optimizer": [[163, null]], "Using the SGD Optimizer": [[164, null]], "Utility Functions": [[64, null], [88, null]], "VGGNet": [[27, null]], "Weight Initializations": [[92, null]], "Why Use Type Aliases?": [[170, null]], "ZFNet": [[32, null]], "activation Functions": [[64, null]], "conv": [[34, "conv"]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "datasets.MNIST": [[5, null]], "lucid.Tensor": [[178, null]], "lucid.abs": [[200, null]], "lucid.add": [[179, null]], "lucid.arange": [[190, null]], "lucid.arccos": [[201, null]], "lucid.arcsin": [[202, null]], "lucid.arctan": [[203, null]], "lucid.clip": [[204, null]], "lucid.concatenate": [[226, null]], "lucid.cos": [[205, null]], "lucid.cosh": [[206, null]], "lucid.cube": [[207, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[191, null]], "lucid.div": [[180, null]], "lucid.dot": [[181, null]], "lucid.empty": [[192, null]], "lucid.empty_like": [[193, null]], "lucid.exp": [[208, null]], "lucid.eye": [[194, null]], "lucid.flatten": [[227, null]], "lucid.grad_enabled": [[166, null]], "lucid.hstack": [[228, null]], "lucid.inner": [[182, null]], "lucid.linalg": [[8, null]], "lucid.linalg.cholesky": [[9, null]], "lucid.linalg.det": [[10, null]], "lucid.linalg.eig": [[11, null]], "lucid.linalg.inv": [[13, null]], "lucid.linalg.matrix_power": [[14, null]], "lucid.linalg.norm": [[15, null]], "lucid.linalg.pinv": [[16, null]], "lucid.linalg.qr": [[17, null]], "lucid.linalg.solve": [[18, null]], "lucid.linalg.svd": [[19, null]], "lucid.log": [[209, null]], "lucid.matmul": [[183, null]], "lucid.max": [[210, null]], "lucid.maximum": [[184, null]], "lucid.mean": [[211, null]], "lucid.meshgrid": [[230, null]], "lucid.min": [[212, null]], "lucid.minimum": [[185, null]], "lucid.models": [[34, null]], "lucid.mul": [[186, null]], "lucid.newaxis": [[167, null]], "lucid.nn": [[151, null]], "lucid.nn.functional": [[64, null]], "lucid.no_grad": [[168, null]], "lucid.ones": [[195, null]], "lucid.ones_like": [[196, null]], "lucid.optim": [[153, null]], "lucid.outer": [[187, null]], "lucid.pad": [[231, null]], "lucid.power": [[188, null]], "lucid.random": [[177, null]], "lucid.random.rand": [[172, null]], "lucid.random.randint": [[173, null]], "lucid.random.randn": [[174, null]], "lucid.random.seed": [[175, null]], "lucid.random.uniform": [[176, null]], "lucid.ravel": [[232, null]], "lucid.reciprocal": [[213, null]], "lucid.register_model": [[169, null]], "lucid.repeat": [[233, null]], "lucid.reshape": [[234, null]], "lucid.sign": [[214, null]], "lucid.sin": [[215, null]], "lucid.sinh": [[216, null]], "lucid.sqrt": [[217, null]], "lucid.square": [[218, null]], "lucid.squeeze": [[235, null]], "lucid.stack": [[236, null]], "lucid.sub": [[189, null]], "lucid.sum": [[219, null]], "lucid.tan": [[220, null]], "lucid.tanh": [[221, null]], "lucid.tensor": [[225, null]], "lucid.tile": [[237, null]], "lucid.trace": [[222, null]], "lucid.transforms": [[251, null]], "lucid.transpose": [[223, null]], "lucid.types": [[170, null]], "lucid.unsqueeze": [[238, null]], "lucid.var": [[224, null]], "lucid.vstack": [[239, null]], "lucid.zeros": [[197, null]], "lucid.zeros_like": [[198, null]], "models.alexnet": [[21, null]], "models.lenet_1": [[24, null]], "models.lenet_4": [[25, null]], "models.lenet_5": [[26, null]], "models.vggnet_11": [[28, null]], "models.vggnet_13": [[29, null]], "models.vggnet_16": [[30, null]], "models.vggnet_19": [[31, null]], "models.zfnet": [[33, null]], "nn.AdaptiveAvgPool1d": [[141, null]], "nn.AdaptiveAvgPool2d": [[142, null]], "nn.AdaptiveAvgPool3d": [[143, null]], "nn.AlphaDropout": [[112, null]], "nn.AvgPool1d": [[144, null]], "nn.AvgPool2d": [[145, null]], "nn.AvgPool3d": [[146, null]], "nn.BCELoss": [[127, null]], "nn.BatchNorm1d": [[133, null]], "nn.BatchNorm2d": [[134, null]], "nn.BatchNorm3d": [[135, null]], "nn.Bilinear": [[123, null]], "nn.Buffer": [[35, null]], "nn.Conv1d": [[108, null]], "nn.Conv2d": [[109, null]], "nn.Conv3d": [[110, null]], "nn.ConvBNReLU1d": [[118, null]], "nn.ConvBNReLU2d": [[119, null]], "nn.ConvBNReLU3d": [[120, null]], "nn.CrossEntropyLoss": [[128, null]], "nn.Dropout": [[113, null]], "nn.Dropout1d": [[114, null]], "nn.Dropout2d": [[115, null]], "nn.Dropout3d": [[116, null]], "nn.ELU": [[99, null]], "nn.GELU": [[100, null]], "nn.HuberLoss": [[129, null]], "nn.Identity": [[124, null]], "nn.InstanceNorm1d": [[136, null]], "nn.InstanceNorm2d": [[137, null]], "nn.InstanceNorm3d": [[138, null]], "nn.LayerNorm": [[139, null]], "nn.LeakyReLU": [[101, null]], "nn.Linear": [[125, null]], "nn.MSELoss": [[130, null]], "nn.MaxPool1d": [[147, null]], "nn.MaxPool2d": [[148, null]], "nn.MaxPool3d": [[149, null]], "nn.Module": [[36, null]], "nn.ModuleDict": [[38, null]], "nn.ModuleList": [[39, null]], "nn.NLLLoss": [[131, null]], "nn.Parameter": [[37, null]], "nn.ParameterDict": [[40, null]], "nn.ParameterList": [[41, null]], "nn.ReLU": [[102, null]], "nn.SELU": [[103, null]], "nn.Sequential": [[42, null]], "nn.Sigmoid": [[104, null]], "nn.Softmax": [[105, null]], "nn.Tanh": [[106, null]], "nn.functional.adaptive_avg_pool1d": [[78, null]], "nn.functional.adaptive_avg_pool2d": [[79, null]], "nn.functional.adaptive_avg_pool3d": [[80, null]], "nn.functional.alpha_dropout": [[58, null]], "nn.functional.avg_pool1d": [[81, null]], "nn.functional.avg_pool2d": [[82, null]], "nn.functional.avg_pool3d": [[83, null]], "nn.functional.batch_norm": [[74, null]], "nn.functional.bilinear": [[65, null]], "nn.functional.binary_cross_entropy": [[68, null]], "nn.functional.conv1d": [[53, null]], "nn.functional.conv2d": [[54, null]], "nn.functional.conv3d": [[55, null]], "nn.functional.cross_entropy": [[69, null]], "nn.functional.dropout": [[59, null]], "nn.functional.dropout1d": [[60, null]], "nn.functional.dropout2d": [[61, null]], "nn.functional.dropout3d": [[62, null]], "nn.functional.elu": [[44, null]], "nn.functional.gelu": [[45, null]], "nn.functional.huber_loss": [[70, null]], "nn.functional.instance_norm": [[76, null]], "nn.functional.interpolate": [[89, null]], "nn.functional.layer_norm": [[77, null]], "nn.functional.leaky_relu": [[47, null]], "nn.functional.linear": [[67, null]], "nn.functional.max_pool1d": [[85, null]], "nn.functional.max_pool2d": [[86, null]], "nn.functional.max_pool3d": [[87, null]], "nn.functional.mse_loss": [[72, null]], "nn.functional.nll_loss": [[73, null]], "nn.functional.relu": [[48, null]], "nn.functional.rotate": [[90, null]], "nn.functional.selu": [[49, null]], "nn.functional.sigmoid": [[50, null]], "nn.functional.softmax": [[51, null]], "nn.functional.tanh": [[52, null]], "nn.functional.unfold": [[57, null]], "nn.init.constant": [[91, null]], "nn.init.kaiming_normal": [[93, null]], "nn.init.kaiming_uniform": [[94, null]], "nn.init.normal": [[95, null]], "nn.init.uniform": [[96, null]], "nn.init.xavier_normal": [[97, null]], "nn.init.xavier_uniform": [[98, null]], "optim.ASGD": [[154, null]], "optim.Adadelta": [[155, null]], "optim.Adagrad": [[156, null]], "optim.Adam": [[157, null]], "optim.AdamW": [[158, null]], "optim.Adamax": [[159, null]], "optim.NAdam": [[160, null]], "optim.Optimizer": [[152, null]], "optim.RAdam": [[161, null]], "optim.RMSprop": [[162, null]], "optim.Rprop": [[163, null]], "optim.SGD": [[164, null]], "transforms.CenterCrop": [[242, null]], "transforms.Compose": [[240, null]], "transforms.Normalize": [[243, null]], "transforms.RandomCrop": [[244, null]], "transforms.RandomGrayscale": [[245, null]], "transforms.RandomHorizontalFlip": [[246, null]], "transforms.RandomRotation": [[247, null]], "transforms.RandomVerticalFlip": [[248, null]], "transforms.Resize": [[249, null]], "transforms.ToTensor": [[241, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/MNIST", "datasets/image/index", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/conv/alex/AlexNet", "models/conv/alex/alexnet", "models/conv/index", "models/conv/lenet/LeNet", "models/conv/lenet/lenet_1", "models/conv/lenet/lenet_4", "models/conv/lenet/lenet_5", "models/conv/vgg/VGGNet", "models/conv/vgg/vggnet_11", "models/conv/vgg/vggnet_13", "models/conv/vgg/vggnet_16", "models/conv/vgg/vggnet_19", "models/conv/zfnet/ZFNet", "models/conv/zfnet/zfnet", "models/models", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/fused/ConvBNReLU1d", "nn/modules/fused/ConvBNReLU2d", "nn/modules/fused/ConvBNReLU3d", "nn/modules/fused/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/nn", "optim/Optimizer", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "others/types", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/meshgrid", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/conv/alex/AlexNet.rst", "models/conv/alex/alexnet.rst", "models/conv/index.rst", "models/conv/lenet/LeNet.rst", "models/conv/lenet/lenet_1.rst", "models/conv/lenet/lenet_4.rst", "models/conv/lenet/lenet_5.rst", "models/conv/vgg/VGGNet.rst", "models/conv/vgg/vggnet_11.rst", "models/conv/vgg/vggnet_13.rst", "models/conv/vgg/vggnet_16.rst", "models/conv/vgg/vggnet_19.rst", "models/conv/zfnet/ZFNet.rst", "models/conv/zfnet/zfnet.rst", "models/models.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/fused/ConvBNReLU1d.rst", "nn/modules/fused/ConvBNReLU2d.rst", "nn/modules/fused/ConvBNReLU3d.rst", "nn/modules/fused/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "others/types.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"abs() (in module lucid)": [[200, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[155, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[156, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[157, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[159, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[158, "lucid.optim.AdamW", false]], "adaptive_avg_pool1d() (in module lucid.nn.functional)": [[78, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[79, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[80, "lucid.nn.functional.adaptive_avg_pool3d", false]], "adaptiveavgpool1d (class in lucid.nn)": [[141, "lucid.nn.AdaptiveAvgPool1d", false]], "adaptiveavgpool2d (class in lucid.nn)": [[142, "lucid.nn.AdaptiveAvgPool2d", false]], "adaptiveavgpool3d (class in lucid.nn)": [[143, "lucid.nn.AdaptiveAvgPool3d", false]], "add() (in module lucid)": [[179, "lucid.add", false]], "alexnet (class in lucid.models)": [[20, "lucid.models.AlexNet", false]], "alexnet() (in module lucid.models)": [[21, "lucid.models.alexnet", false]], "alpha_dropout() (in module lucid.nn.functional)": [[58, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[112, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[190, "lucid.arange", false]], "arccos() (in module lucid)": [[201, "lucid.arccos", false]], "arcsin() (in module lucid)": [[202, "lucid.arcsin", false]], "arctan() (in module lucid)": [[203, "lucid.arctan", false]], "asgd (class in lucid.optim)": [[154, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[81, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[82, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[83, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[144, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[145, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[146, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[74, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[133, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[134, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[135, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[127, "lucid.nn.BCELoss", false]], "bilinear (class in lucid.nn)": [[123, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[65, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[68, "lucid.nn.functional.binary_cross_entropy", false]], "buffer (class in lucid.nn)": [[35, "lucid.nn.Buffer", false]], "centercrop (class in lucid.transforms)": [[242, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[9, "lucid.linalg.cholesky", false]], "clip() (in module lucid)": [[204, "lucid.clip", false]], "compose (class in lucid.transforms)": [[240, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[226, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[91, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[108, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[53, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[109, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[54, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[110, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[55, "lucid.nn.functional.conv3d", false]], "convbnrelu1d (class in lucid.nn)": [[118, "lucid.nn.ConvBNReLU1d", false]], "convbnrelu2d (class in lucid.nn)": [[119, "lucid.nn.ConvBNReLU2d", false]], "convbnrelu3d (class in lucid.nn)": [[120, "lucid.nn.ConvBNReLU3d", false]], "cos() (in module lucid)": [[205, "lucid.cos", false]], "cosh() (in module lucid)": [[206, "lucid.cosh", false]], "cross_entropy() (in module lucid.nn.functional)": [[69, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[128, "lucid.nn.CrossEntropyLoss", false]], "cube() (in module lucid)": [[207, "lucid.cube", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "det() (in module lucid.linalg)": [[10, "lucid.linalg.det", false]], "diag() (in module lucid)": [[191, "lucid.diag", false]], "div() (in module lucid)": [[180, "lucid.div", false]], "dot() (in module lucid)": [[181, "lucid.dot", false]], "dropout (class in lucid.nn)": [[113, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[59, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[114, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[60, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[115, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[61, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[116, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[62, "lucid.nn.functional.dropout3d", false]], "eig() (in module lucid.linalg)": [[11, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[99, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[44, "lucid.nn.functional.elu", false]], "empty() (in module lucid)": [[192, "lucid.empty", false]], "empty_like() (in module lucid)": [[193, "lucid.empty_like", false]], "exp() (in module lucid)": [[208, "lucid.exp", false]], "eye() (in module lucid)": [[194, "lucid.eye", false]], "flatten() (in module lucid)": [[227, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[100, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[45, "lucid.nn.functional.gelu", false]], "grad_enabled() (in module lucid)": [[166, "lucid.grad_enabled", false]], "hstack() (in module lucid)": [[228, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[70, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[129, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[124, "lucid.nn.Identity", false]], "inner() (in module lucid)": [[182, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[76, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[136, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[137, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[138, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[89, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[13, "lucid.linalg.inv", false]], "kaiming_normal() (in module lucid.nn.init)": [[93, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[94, "lucid.nn.init.kaiming_uniform", false]], "layer_norm() (in module lucid.nn.functional)": [[77, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[139, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[47, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[101, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[23, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[24, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[25, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[26, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[125, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[67, "lucid.nn.functional.linear", false]], "log() (in module lucid)": [[209, "lucid.log", false]], "lucid": [[7, "module-lucid", false]], "matmul() (in module lucid)": [[183, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[14, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[210, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[85, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[86, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[87, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[184, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[147, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[148, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[149, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[211, "lucid.mean", false]], "meshgrid() (in module lucid)": [[230, "lucid.meshgrid", false]], "min() (in module lucid)": [[212, "lucid.min", false]], "minimum() (in module lucid)": [[185, "lucid.minimum", false]], "mnist (class in lucid.datasets)": [[5, "lucid.datasets.MNIST", false]], "module": [[7, "module-lucid", false]], "module (class in lucid.nn)": [[36, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[38, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[39, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[72, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[130, "lucid.nn.MSELoss", false]], "mul() (in module lucid)": [[186, "lucid.mul", false]], "nadam (class in lucid.optim)": [[160, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[73, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[131, "lucid.nn.NLLLoss", false]], "no_grad() (in module lucid)": [[168, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[15, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[95, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[243, "lucid.transforms.Normalize", false]], "ones() (in module lucid)": [[195, "lucid.ones", false]], "ones_like() (in module lucid)": [[196, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[152, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[187, "lucid.outer", false]], "pad() (in module lucid)": [[231, "lucid.pad", false]], "parameter (class in lucid.nn)": [[37, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[40, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[41, "lucid.nn.ParameterList", false]], "pinv() (in module lucid.linalg)": [[16, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[188, "lucid.power", false]], "qr() (in module lucid.linalg)": [[17, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[161, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[172, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[173, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[174, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[244, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[245, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[246, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[247, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[248, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[232, "lucid.ravel", false]], "reciprocal() (in module lucid)": [[213, "lucid.reciprocal", false]], "register_model() (in module lucid)": [[169, "lucid.register_model", false]], "relu (class in lucid.nn)": [[102, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[48, "lucid.nn.functional.relu", false]], "repeat() (in module lucid)": [[233, "lucid.repeat", false]], "reshape() (in module lucid)": [[234, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[249, "lucid.transforms.Resize", false]], "rmsprop (class in lucid.optim)": [[162, "lucid.optim.RMSprop", false]], "rotate() (in module lucid.nn.functional)": [[90, "lucid.nn.functional.rotate", false]], "rprop (class in lucid.optim)": [[163, "lucid.optim.Rprop", false]], "seed() (in module lucid.random)": [[175, "lucid.random.seed", false]], "selu (class in lucid.nn)": [[103, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[49, "lucid.nn.functional.selu", false]], "sequential (class in lucid.nn)": [[42, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[164, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[104, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[50, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[214, "lucid.sign", false]], "sin() (in module lucid)": [[215, "lucid.sin", false]], "sinh() (in module lucid)": [[216, "lucid.sinh", false]], "softmax (class in lucid.nn)": [[105, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[51, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[18, "lucid.linalg.solve", false]], "sqrt() (in module lucid)": [[217, "lucid.sqrt", false]], "square() (in module lucid)": [[218, "lucid.square", false]], "squeeze() (in module lucid)": [[235, "lucid.squeeze", false]], "stack() (in module lucid)": [[236, "lucid.stack", false]], "sub() (in module lucid)": [[189, "lucid.sub", false]], "sum() (in module lucid)": [[219, "lucid.sum", false]], "svd() (in module lucid.linalg)": [[19, "lucid.linalg.svd", false]], "tan() (in module lucid)": [[220, "lucid.tan", false]], "tanh (class in lucid.nn)": [[106, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[221, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[52, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[178, "lucid.Tensor", false]], "tensor() (in module lucid)": [[225, "lucid.tensor", false]], "tile() (in module lucid)": [[237, "lucid.tile", false]], "totensor (class in lucid.transforms)": [[241, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[222, "lucid.trace", false]], "transpose() (in module lucid)": [[223, "lucid.transpose", false]], "unfold() (in module lucid.nn.functional)": [[57, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[96, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[176, "lucid.random.uniform", false]], "unsqueeze() (in module lucid)": [[238, "lucid.unsqueeze", false]], "var() (in module lucid)": [[224, "lucid.var", false]], "vggnet (class in lucid.models)": [[27, "lucid.models.VGGNet", false]], "vggnet_11() (in module lucid.models)": [[28, "lucid.models.vggnet_11", false]], "vggnet_13() (in module lucid.models)": [[29, "lucid.models.vggnet_13", false]], "vggnet_16() (in module lucid.models)": [[30, "lucid.models.vggnet_16", false]], "vggnet_19() (in module lucid.models)": [[31, "lucid.models.vggnet_19", false]], "vstack() (in module lucid)": [[239, "lucid.vstack", false]], "xavier_normal() (in module lucid.nn.init)": [[97, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[98, "lucid.nn.init.xavier_uniform", false]], "zeros() (in module lucid)": [[197, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[198, "lucid.zeros_like", false]], "zfnet (class in lucid.models)": [[32, "lucid.models.ZFNet", false]], "zfnet() (in module lucid.models)": [[33, "lucid.models.zfnet", false]]}, "objects": {"": [[7, 0, 0, "-", "lucid"]], "lucid": [[178, 1, 1, "", "Tensor"], [200, 2, 1, "", "abs"], [179, 2, 1, "", "add"], [190, 2, 1, "", "arange"], [201, 2, 1, "", "arccos"], [202, 2, 1, "", "arcsin"], [203, 2, 1, "", "arctan"], [204, 2, 1, "", "clip"], [226, 2, 1, "", "concatenate"], [205, 2, 1, "", "cos"], [206, 2, 1, "", "cosh"], [207, 2, 1, "", "cube"], [191, 2, 1, "", "diag"], [180, 2, 1, "", "div"], [181, 2, 1, "", "dot"], [192, 2, 1, "", "empty"], [193, 2, 1, "", "empty_like"], [208, 2, 1, "", "exp"], [194, 2, 1, "", "eye"], [227, 2, 1, "", "flatten"], [166, 2, 1, "", "grad_enabled"], [228, 2, 1, "", "hstack"], [182, 2, 1, "", "inner"], [209, 2, 1, "", "log"], [183, 2, 1, "", "matmul"], [210, 2, 1, "", "max"], [184, 2, 1, "", "maximum"], [211, 2, 1, "", "mean"], [230, 2, 1, "", "meshgrid"], [212, 2, 1, "", "min"], [185, 2, 1, "", "minimum"], [186, 2, 1, "", "mul"], [168, 2, 1, "", "no_grad"], [195, 2, 1, "", "ones"], [196, 2, 1, "", "ones_like"], [187, 2, 1, "", "outer"], [231, 2, 1, "", "pad"], [188, 2, 1, "", "power"], [232, 2, 1, "", "ravel"], [213, 2, 1, "", "reciprocal"], [169, 2, 1, "", "register_model"], [233, 2, 1, "", "repeat"], [234, 2, 1, "", "reshape"], [214, 2, 1, "", "sign"], [215, 2, 1, "", "sin"], [216, 2, 1, "", "sinh"], [217, 2, 1, "", "sqrt"], [218, 2, 1, "", "square"], [235, 2, 1, "", "squeeze"], [236, 2, 1, "", "stack"], [189, 2, 1, "", "sub"], [219, 2, 1, "", "sum"], [220, 2, 1, "", "tan"], [221, 2, 1, "", "tanh"], [225, 2, 1, "", "tensor"], [237, 2, 1, "", "tile"], [222, 2, 1, "", "trace"], [223, 2, 1, "", "transpose"], [238, 2, 1, "", "unsqueeze"], [224, 2, 1, "", "var"], [239, 2, 1, "", "vstack"], [197, 2, 1, "", "zeros"], [198, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "MNIST"]], "lucid.linalg": [[9, 2, 1, "", "cholesky"], [10, 2, 1, "", "det"], [11, 2, 1, "", "eig"], [13, 2, 1, "", "inv"], [14, 2, 1, "", "matrix_power"], [15, 2, 1, "", "norm"], [16, 2, 1, "", "pinv"], [17, 2, 1, "", "qr"], [18, 2, 1, "", "solve"], [19, 2, 1, "", "svd"]], "lucid.models": [[20, 1, 1, "", "AlexNet"], [23, 1, 1, "", "LeNet"], [27, 1, 1, "", "VGGNet"], [32, 1, 1, "", "ZFNet"], [21, 2, 1, "", "alexnet"], [24, 2, 1, "", "lenet_1"], [25, 2, 1, "", "lenet_4"], [26, 2, 1, "", "lenet_5"], [28, 2, 1, "", "vggnet_11"], [29, 2, 1, "", "vggnet_13"], [30, 2, 1, "", "vggnet_16"], [31, 2, 1, "", "vggnet_19"], [33, 2, 1, "", "zfnet"]], "lucid.nn": [[141, 1, 1, "", "AdaptiveAvgPool1d"], [142, 1, 1, "", "AdaptiveAvgPool2d"], [143, 1, 1, "", "AdaptiveAvgPool3d"], [112, 1, 1, "", "AlphaDropout"], [144, 1, 1, "", "AvgPool1d"], [145, 1, 1, "", "AvgPool2d"], [146, 1, 1, "", "AvgPool3d"], [127, 1, 1, "", "BCELoss"], [133, 1, 1, "", "BatchNorm1d"], [134, 1, 1, "", "BatchNorm2d"], [135, 1, 1, "", "BatchNorm3d"], [123, 1, 1, "", "Bilinear"], [35, 1, 1, "", "Buffer"], [108, 1, 1, "", "Conv1d"], [109, 1, 1, "", "Conv2d"], [110, 1, 1, "", "Conv3d"], [118, 1, 1, "", "ConvBNReLU1d"], [119, 1, 1, "", "ConvBNReLU2d"], [120, 1, 1, "", "ConvBNReLU3d"], [128, 1, 1, "", "CrossEntropyLoss"], [113, 1, 1, "", "Dropout"], [114, 1, 1, "", "Dropout1d"], [115, 1, 1, "", "Dropout2d"], [116, 1, 1, "", "Dropout3d"], [99, 1, 1, "", "ELU"], [100, 1, 1, "", "GELU"], [129, 1, 1, "", "HuberLoss"], [124, 1, 1, "", "Identity"], [136, 1, 1, "", "InstanceNorm1d"], [137, 1, 1, "", "InstanceNorm2d"], [138, 1, 1, "", "InstanceNorm3d"], [139, 1, 1, "", "LayerNorm"], [101, 1, 1, "", "LeakyReLU"], [125, 1, 1, "", "Linear"], [130, 1, 1, "", "MSELoss"], [147, 1, 1, "", "MaxPool1d"], [148, 1, 1, "", "MaxPool2d"], [149, 1, 1, "", "MaxPool3d"], [36, 1, 1, "", "Module"], [38, 1, 1, "", "ModuleDict"], [39, 1, 1, "", "ModuleList"], [131, 1, 1, "", "NLLLoss"], [37, 1, 1, "", "Parameter"], [40, 1, 1, "", "ParameterDict"], [41, 1, 1, "", "ParameterList"], [102, 1, 1, "", "ReLU"], [103, 1, 1, "", "SELU"], [42, 1, 1, "", "Sequential"], [104, 1, 1, "", "Sigmoid"], [105, 1, 1, "", "Softmax"], [106, 1, 1, "", "Tanh"]], "lucid.nn.functional": [[78, 2, 1, "", "adaptive_avg_pool1d"], [79, 2, 1, "", "adaptive_avg_pool2d"], [80, 2, 1, "", "adaptive_avg_pool3d"], [58, 2, 1, "", "alpha_dropout"], [81, 2, 1, "", "avg_pool1d"], [82, 2, 1, "", "avg_pool2d"], [83, 2, 1, "", "avg_pool3d"], [74, 2, 1, "", "batch_norm"], [65, 2, 1, "", "bilinear"], [68, 2, 1, "", "binary_cross_entropy"], [53, 2, 1, "", "conv1d"], [54, 2, 1, "", "conv2d"], [55, 2, 1, "", "conv3d"], [69, 2, 1, "", "cross_entropy"], [59, 2, 1, "", "dropout"], [60, 2, 1, "", "dropout1d"], [61, 2, 1, "", "dropout2d"], [62, 2, 1, "", "dropout3d"], [44, 2, 1, "", "elu"], [45, 2, 1, "", "gelu"], [70, 2, 1, "", "huber_loss"], [76, 2, 1, "", "instance_norm"], [89, 2, 1, "", "interpolate"], [77, 2, 1, "", "layer_norm"], [47, 2, 1, "", "leaky_relu"], [67, 2, 1, "", "linear"], [85, 2, 1, "", "max_pool1d"], [86, 2, 1, "", "max_pool2d"], [87, 2, 1, "", "max_pool3d"], [72, 2, 1, "", "mse_loss"], [73, 2, 1, "", "nll_loss"], [48, 2, 1, "", "relu"], [90, 2, 1, "", "rotate"], [49, 2, 1, "", "selu"], [50, 2, 1, "", "sigmoid"], [51, 2, 1, "", "softmax"], [52, 2, 1, "", "tanh"], [57, 2, 1, "", "unfold"]], "lucid.nn.init": [[91, 2, 1, "", "constant"], [93, 2, 1, "", "kaiming_normal"], [94, 2, 1, "", "kaiming_uniform"], [95, 2, 1, "", "normal"], [96, 2, 1, "", "uniform"], [97, 2, 1, "", "xavier_normal"], [98, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[154, 1, 1, "", "ASGD"], [155, 1, 1, "", "Adadelta"], [156, 1, 1, "", "Adagrad"], [157, 1, 1, "", "Adam"], [158, 1, 1, "", "AdamW"], [159, 1, 1, "", "Adamax"], [160, 1, 1, "", "NAdam"], [152, 1, 1, "", "Optimizer"], [161, 1, 1, "", "RAdam"], [162, 1, 1, "", "RMSprop"], [163, 1, 1, "", "Rprop"], [164, 1, 1, "", "SGD"]], "lucid.random": [[172, 2, 1, "", "rand"], [173, 2, 1, "", "randint"], [174, 2, 1, "", "randn"], [175, 2, 1, "", "seed"], [176, 2, 1, "", "uniform"]], "lucid.transforms": [[242, 1, 1, "", "CenterCrop"], [240, 1, 1, "", "Compose"], [243, 1, 1, "", "Normalize"], [244, 1, 1, "", "RandomCrop"], [245, 1, 1, "", "RandomGrayscale"], [246, 1, 1, "", "RandomHorizontalFlip"], [247, 1, 1, "", "RandomRotation"], [248, 1, 1, "", "RandomVerticalFlip"], [249, 1, 1, "", "Resize"], [241, 1, 1, "", "ToTensor"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [3, 7, 8, 14, 16, 19, 35, 36, 37, 38, 40, 41, 42, 78, 79, 80, 128, 131, 141, 142, 143, 144, 147, 148, 151, 152, 153, 167, 169, 183, 191, 209, 211, 219, 222, 224, 225, 235, 241, 243, 251], "0": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 23, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 197, 198, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 219, 220, 221, 223, 224, 225, 226, 228, 231, 232, 233, 235, 236, 238, 239, 240, 242, 243, 244, 245, 246, 247, 248, 249, 251], "000": [5, 192, 193], "0000": [128, 129, 131], "0001": 154, "000e": [192, 193], "001": [154, 157, 158, 160, 161, 164], "002": [159, 160], "004": 160, "005": 101, "01": [47, 101, 152, 153, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164], "01051757": 174, "0205": 128, "0217": 128, "0227": 128, "0299": 128, "044715": [45, 100], "0450": 128, "0451": 128, "047": [29, 34], "04719755": 201, "0474259": 50, "0480": 128, "05": [74, 76, 77, 101, 118, 119, 120, 133, 134, 135, 136, 137, 138, 139], "0507": [49, 103], "06": [155, 163], "07": [68, 69, 127, 128], "0700": 128, "0706508": 106, "0721": 128, "0794": 131, "08": [157, 158, 159, 160, 161, 162], "0802": 131, "08333333": 16, "085537": 208, "0900": [105, 128], "0986": [51, 105], "09861229": 209, "0992": 128, "1": [0, 1, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 32, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 170, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251], "10": [0, 1, 2, 3, 20, 21, 23, 24, 25, 26, 27, 32, 33, 34, 38, 39, 42, 54, 55, 65, 67, 78, 108, 109, 110, 115, 116, 123, 125, 134, 135, 137, 141, 145, 146, 148, 156, 169, 173, 176, 177, 180, 183, 186, 187, 203, 219, 242, 244, 245, 247], "100": [21, 28, 29, 30, 31, 34, 169, 251], "1000": [20, 21, 27, 28, 29, 30, 31, 32, 33], "1000000": 154, "1001": 128, "1003": 128, "1007": 34, "1014": 49, "1025": [39, 42], "1026": [39, 42], "1027": [39, 42], "10499": 50, "1050": 104, "1054": 131, "1056": [39, 42], "10590": 34, "1097": 34, "11": [27, 28, 34, 65, 108, 109, 110, 115, 123, 134, 135, 137, 145, 146, 148, 183, 242, 243, 244, 245, 247], "1105": 34, "1109": 34, "1111": 127, "1134": 65, "114b": 245, "119": 65, "1192": [50, 51, 105], "12": [24, 25, 40, 65, 80, 108, 109, 110, 115, 116, 123, 134, 135, 137, 143, 145, 146, 148, 183, 187, 188, 242, 244, 245, 247], "120": [23, 26], "123": [93, 94, 95, 96, 97, 98, 175, 176], "124": [93, 94, 97, 98], "125": 146, "1250": 129, "128": [27, 42, 240, 251], "128x128": [240, 251], "13": [27, 29, 34, 65, 108, 109, 110, 123, 135, 145, 146, 148, 183, 242, 244, 245, 247], "132": [28, 34], "133": [29, 34], "138": [30, 34], "14": [108, 109, 110, 115, 116, 123, 135, 145, 146, 148, 170, 183, 187, 242, 244, 245, 247], "1409": 34, "143": [31, 34], "145": 65, "15": [0, 65, 108, 109, 110, 123, 135, 145, 146, 148, 183, 187, 222, 242, 244, 245, 247, 251], "1513": 131, "155": 183, "1556": 34, "1588": [45, 100], "16": [23, 26, 27, 30, 34, 39, 40, 42, 79, 80, 108, 109, 110, 115, 116, 118, 119, 120, 123, 134, 135, 142, 143, 145, 146, 148, 151, 183, 187, 217, 242, 244, 245, 247], "16227766": 17, "16425": 131, "1643": 127, "166": 183, "17": [108, 109, 110, 123, 135, 146, 182, 242, 244, 245, 247], "170": 65, "17520119": 216, "18": [25, 34, 108, 109, 110, 115, 123, 135, 146, 186, 187, 242, 244, 245, 247], "1800": 128, "19": [27, 31, 34, 54, 55, 65, 109, 110, 135, 181, 183], "192": [24, 25], "1966": [51, 104, 105], "1998": [34, 128], "1_53": 34, "1d": [53, 78, 81, 85, 118, 133, 136, 141, 176, 183, 191, 222, 230, 231, 232, 233, 237], "1e": [68, 69, 74, 76, 77, 118, 119, 120, 127, 128, 133, 134, 135, 136, 137, 138, 139, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "1e6": 154, "1st": [20, 32], "2": [1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 24, 25, 26, 32, 35, 36, 37, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 170, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251], "20": [0, 5, 38, 39, 42, 109, 110, 115, 135, 187, 208], "2012": 34, "2014": 34, "2039": 131, "204": 110, "21": [40, 65, 109, 110, 135, 187], "211": 183, "22": [65, 109, 110, 115, 135, 181, 183], "2231": [128, 131], "224": [20, 27, 32, 34], "2247": [133, 134, 135, 136, 137, 138, 139], "226": 183, "22752314": 174, "2278": 34, "23": [109, 110, 135], "2324": [34, 103], "234": [93, 94, 95, 96, 97, 98, 176], "24": [65, 79, 109, 110, 115, 135, 142, 187], "240": [31, 34], "2424": [51, 105], "2447": 105, "246": [24, 34], "25": [0, 34, 50, 104, 110, 130, 135, 145, 146, 180, 213, 224], "2500": [127, 129, 131], "2512": 99, "2547": 103, "256": 27, "26": [40, 67, 110, 125, 135, 187], "26325684": 174, "2689": [51, 104, 105], "27": [65, 108, 110, 135, 207], "276": [93, 94, 97, 98], "28": [24, 25, 34, 65, 110, 187], "28x28": [5, 24, 25], "29": 110, "299r": 245, "2_i": [136, 137, 138], "2d": [54, 61, 79, 82, 86, 119, 134, 137, 142, 183, 191, 194, 222, 227, 230, 231, 233, 237, 247], "2e": 159, "2nd": [20, 32], "2x2": [57, 242, 244], "3": [1, 2, 3, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 24, 27, 32, 34, 35, 36, 37, 39, 40, 41, 42, 45, 50, 51, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 70, 72, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 204, 206, 207, 208, 209, 210, 211, 212, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249], "30": [39, 90, 110, 247], "3026": 131, "31": [65, 110, 183], "310": [192, 193], "31622777": 17, "319": 34, "32": [26, 34, 39, 42, 65, 67, 79, 109, 110, 118, 119, 120, 125, 142, 151, 181, 182, 187], "321": [93, 94, 97, 98], "32x32": [23, 26], "33": [39, 42, 67, 110, 125], "33333333": 16, "336": [28, 34], "34": [39, 42, 65, 110, 183, 187], "342": [93, 94, 97, 98], "345": [93, 94, 95, 96, 97, 98, 176], "35": [39, 42, 110], "3567": [127, 131], "357": [30, 33, 34], "36": 110, "3679": [44, 49, 99], "37": 108, "372": 65, "375": 130, "3750": 129, "378": [25, 34], "38344152": 172, "38629436": 209, "389056": 208, "3935": 99, "3d": [55, 62, 80, 83, 87, 110, 120, 135, 138, 143], "3x3": [34, 177], "4": [0, 1, 2, 3, 8, 9, 10, 11, 13, 15, 16, 17, 23, 24, 25, 34, 40, 42, 53, 54, 55, 57, 60, 61, 62, 65, 67, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 123, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 154, 157, 161, 162, 164, 167, 170, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 196, 198, 204, 209, 210, 211, 212, 213, 215, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 236, 237, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249], "400": 26, "4044": 127, "4076": 128, "4096": [20, 32], "41421356": 9, "41666667": 16, "41808962": 174, "419974": 52, "4199743": 106, "42": [65, 170, 177], "421": [93, 94, 97, 98], "423": [93, 94, 95, 96], "42718872": 17, "4286": 127, "43": [181, 183], "4323": 99, "4375": 129, "43758721": 172, "4472136": 11, "4495": [135, 138], "45": [65, 90, 247], "4545": 112, "47112767": 203, "48": [67, 125], "4979": 99, "4x4": 249, "5": [1, 2, 7, 8, 13, 14, 15, 16, 20, 23, 24, 25, 26, 32, 34, 36, 37, 38, 39, 40, 42, 45, 50, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 70, 72, 74, 76, 77, 78, 81, 82, 89, 91, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 144, 145, 146, 148, 149, 163, 167, 170, 173, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 196, 198, 200, 201, 202, 210, 211, 212, 213, 214, 219, 222, 223, 224, 225, 228, 230, 234, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251], "50": [67, 125, 163, 181, 183, 245, 246, 248, 251], "5000": [127, 129, 131], "5108": 131, "52359878": 202, "53": [65, 182], "543": [93, 94, 95, 96, 97, 98, 176], "54308063": 206, "544": [30, 34], "545": 188, "5455": 112, "563": [93, 94, 97, 98], "57": 65, "57079633": [201, 202], "57366333": 175, "587g": 245, "5th": [20, 32], "6": [8, 16, 20, 23, 26, 32, 40, 41, 53, 54, 55, 57, 62, 65, 67, 78, 94, 98, 108, 109, 110, 113, 114, 115, 116, 123, 125, 127, 133, 134, 135, 136, 137, 138, 139, 141, 145, 146, 148, 149, 155, 163, 167, 170, 176, 179, 180, 181, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 196, 198, 210, 211, 212, 219, 222, 223, 224, 225, 228, 233, 234, 239, 241, 242, 243, 244, 245, 247, 249], "6052": 131, "6065": 99, "608": [33, 34], "61": [21, 26, 34], "6124": [133, 134, 135, 136, 137, 138, 139], "62": [33, 34, 65], "62686041": 216, "6321": [44, 99], "63245553": 17, "64": [27, 39, 42, 65], "64589411": 172, "654": [93, 94, 95, 96, 97, 98, 176], "657": [93, 94, 97, 98], "6590": [51, 105], "6652": 105, "66666667": 16, "6667": 127, "667": [31, 34], "6682": 127, "67": 183, "67326": 103, "6733": 49, "678": [93, 94, 95, 96, 97, 98], "68811989": 174, "69314718": 209, "7": [15, 27, 40, 53, 54, 55, 57, 62, 65, 67, 68, 69, 78, 100, 103, 104, 106, 108, 109, 110, 115, 116, 123, 125, 127, 128, 130, 134, 135, 137, 138, 141, 145, 146, 148, 149, 170, 173, 176, 179, 181, 182, 183, 187, 189, 191, 208, 211, 219, 222, 223, 224, 237, 241, 242, 243, 244, 245, 247, 249], "70": 5, "7001": 128, "706": [26, 34], "70710678": [11, 215], "7147": 131, "7182818": 208, "726791": 34, "7311": [51, 104, 105], "74": 183, "75": [67, 125, 130, 154], "7581": 49, "76159416": 221, "7616": [52, 106], "76219569": 206, "7635": 103, "772": 188, "78357324": 174, "78539816": 203, "79172504": 172, "7x7": 32, "8": [14, 18, 39, 40, 42, 53, 54, 55, 57, 62, 65, 67, 68, 78, 79, 80, 100, 103, 104, 106, 108, 109, 110, 113, 114, 115, 116, 118, 119, 120, 123, 125, 127, 130, 134, 135, 137, 138, 141, 142, 143, 145, 146, 148, 149, 157, 158, 159, 160, 161, 162, 170, 173, 180, 181, 182, 183, 187, 188, 190, 191, 207, 211, 219, 222, 223, 224, 241, 242, 243, 244, 245, 247, 249], "80": 5, "8005": 128, "818": 34, "8182": 112, "82": 65, "833": 34, "84": [23, 25, 26], "840": [21, 34], "8413": [45, 100], "848": [29, 34], "8584": 103, "86": 34, "863": [28, 34], "876": [93, 94, 97, 98, 176], "8808": [51, 104, 105], "887": 188, "891773": 172, "89442719": 11, "9": [0, 1, 3, 5, 18, 54, 57, 65, 67, 78, 108, 109, 110, 115, 123, 125, 127, 134, 135, 137, 141, 145, 146, 148, 154, 155, 157, 158, 159, 160, 161, 162, 164, 170, 173, 176, 179, 183, 187, 188, 189, 191, 217, 218, 241, 242, 243, 244, 245, 247], "90709145": 175, "9091": 112, "9120": 131, "9163": 131, "9486833": 17, "949e": [192, 193], "9526": 50, "9545": 100, "96366276": 172, "9640": 106, "96402758": 221, "978": 34, "99": 162, "9957": 131, "99734545": 175, "999": [0, 157, 158, 159, 160, 161], "A": [1, 3, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 23, 27, 28, 29, 30, 31, 36, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 65, 67, 68, 69, 73, 74, 76, 77, 89, 112, 113, 114, 115, 116, 127, 128, 131, 133, 134, 135, 136, 137, 138, 139, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 170, 172, 173, 174, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 247], "As": 175, "Be": 0, "By": [0, 2, 3, 7, 37, 90, 151, 161, 167, 172, 173, 174, 176, 241, 251], "For": [2, 3, 4, 7, 9, 10, 11, 13, 14, 15, 16, 18, 42, 44, 45, 47, 48, 49, 50, 52, 65, 67, 89, 93, 94, 97, 98, 103, 108, 109, 110, 123, 125, 133, 134, 135, 136, 137, 138, 151, 153, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 208, 209, 210, 211, 212, 215, 217, 219, 222, 223, 224, 231, 233, 235, 237, 238, 251], "If": [0, 1, 2, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 36, 38, 39, 40, 41, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 62, 65, 67, 74, 76, 79, 80, 89, 90, 93, 94, 108, 109, 110, 118, 119, 120, 123, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 152, 157, 158, 162, 163, 169, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 245, 246, 248, 249], "In": [3, 7, 16, 53, 54, 55, 128, 131, 166, 167, 168, 240, 251], "It": [1, 2, 3, 7, 16, 17, 18, 20, 23, 24, 25, 26, 27, 34, 36, 38, 39, 40, 41, 42, 62, 65, 89, 90, 100, 102, 106, 118, 119, 120, 123, 124, 127, 128, 129, 130, 131, 141, 142, 143, 151, 152, 153, 154, 160, 162, 163, 164, 167, 175, 179, 180, 181, 184, 185, 186, 188, 189, 210, 212, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241], "Its": [18, 177], "Near": 16, "No": 57, "Not": 124, "One": [24, 251], "The": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251], "There": 234, "These": [4, 7, 8, 11, 14, 17, 19, 34, 112, 113, 114, 115, 116, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 163, 170, 177, 251], "To": [3, 34, 153, 174, 177, 192, 193, 230, 251], "With": [3, 57, 241, 251], "_": [14, 38, 39, 41, 42, 44, 45, 47, 48, 49, 50, 52, 67, 89, 134, 135, 136, 137, 138, 144, 145, 146, 147, 148, 149, 154, 155, 157, 158, 159, 160, 162, 164, 181, 182, 183, 187, 222, 223, 242, 243, 244, 246, 247, 248], "_1": [11, 38, 39, 40, 41, 42, 65, 123, 187, 226, 228, 239], "_2": [11, 38, 39, 40, 41, 42, 65, 123, 187, 226, 228, 239], "__call__": [1, 36], "__getitem__": [0, 2, 3, 5], "__init__": [0, 1, 2, 3, 7, 20, 23, 27, 32, 35, 36, 37, 38, 39, 40, 41, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 123, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 169, 178, 240, 241], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5], "__repr__": 152, "__setattr__": 36, "_activ": 51, "_arraylik": [170, 191, 193, 196, 198], "_arraylikeint": 231, "_arrayorscalar": [35, 37, 170, 178, 225], "_base_dtyp": [190, 192, 195, 197], "_c": 243, "_decai": 160, "_fanmod": [93, 94], "_grad_en": [166, 168], "_i": [11, 15, 51, 65, 105, 130, 133, 139, 144, 147, 181, 182, 184, 185, 187, 188, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 228, 233, 235, 238, 239], "_in": [93, 94, 97, 98], "_j": [51, 105, 144, 147, 187, 211, 219, 223, 224], "_k": 236, "_left": 89, "_make_lay": 27, "_modul": 36, "_n": [11, 38, 39, 40, 41, 42, 226, 228, 239], "_numpyarrai": 170, "_out": [93, 94, 97, 98, 233, 237], "_p": 15, "_pad": 231, "_paddingstr": [108, 109, 110, 118, 119, 120], "_paramet": 36, "_reductiontyp": [68, 69, 70, 72, 73, 127, 128, 129, 130, 131], "_right": 89, "_scalar": [91, 95, 96, 97, 98, 170, 190, 204], "_shapelik": [77, 139, 170, 173, 195, 197, 234, 235, 238], "_size": [78, 79, 80], "_slope": 101, "_statedict": 152, "_t": [161, 162], "_tensor": [35, 37, 191, 225], "_tensorop": 178, "_u": 16, "_v": 16, "_valu": [204, 231], "_width": 231, "a_i": [184, 185, 188], "ab": 199, "abc": [2, 152], "abil": [7, 251], "about": 7, "abov": [7, 166, 168, 175, 191, 194], "absolut": [14, 15, 70, 159, 200], "abstract": [2, 3, 151, 152, 153, 154, 162, 164], "abstractmethod": 152, "acceler": [34, 103, 133, 134, 135, 154, 160, 162, 164], "accept": [124, 172, 178], "access": [0, 2, 3, 4, 5, 35, 37, 38, 39, 40, 41, 42, 234], "accord": [89, 108, 109, 110, 123, 125, 128, 131, 155, 156, 157, 158, 159, 160, 161, 223], "accordingli": 10, "account": [14, 16, 17], "accumul": [154, 155, 156, 179, 180, 184, 185, 186, 189], "accuraci": 34, "achiev": [34, 53, 54, 55, 78, 141, 142, 143, 160, 246, 248], "across": [0, 35, 39, 42, 77, 78, 79, 80, 97, 98, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 170, 172, 173, 174, 175, 176, 177, 192, 193, 211, 224], "act": 158, "activ": [7, 20, 27, 32, 34, 38, 42, 44, 45, 47, 48, 49, 50, 51, 52, 58, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 112, 113, 114, 115, 116, 118, 119, 120, 127, 128, 131, 133, 134, 135, 139, 210, 212], "actual": [37, 127, 128, 130, 131, 178, 244], "ad": [36, 38, 39, 40, 41, 42, 53, 54, 55, 65, 67, 68, 69, 74, 76, 77, 81, 82, 83, 85, 86, 87, 108, 109, 110, 118, 119, 120, 127, 128, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 155, 156, 157, 158, 159, 160, 161, 162, 169, 238, 251], "adadelta": 165, "adagrad": [155, 165], "adam": [158, 159, 160, 161, 165], "adamax": 165, "adamw": 165, "adapt": [20, 23, 27, 32, 78, 79, 80, 141, 142, 143, 155, 156, 157, 160, 161, 162, 163], "adaptive_avg_pool1d": [64, 84, 141], "adaptive_avg_pool2d": [64, 84, 142], "adaptive_avg_pool3d": [64, 84, 143], "adaptiveavgpool1d": [122, 150], "adaptiveavgpool2d": [20, 27, 32, 122, 150], "adaptiveavgpool3d": [122, 150], "add": [4, 36, 38, 39, 42, 65, 67, 108, 109, 110, 123, 125, 139, 152, 154, 157, 162, 164, 167, 199, 231, 238], "add_modul": [36, 42], "add_param_group": 152, "addit": [4, 7, 14, 21, 28, 29, 30, 31, 33, 36, 39, 42, 65, 67, 74, 76, 123, 125, 133, 134, 135, 136, 137, 138, 154, 160, 167, 177, 179, 236], "addition": 160, "address": [128, 131, 157, 158, 161], "adjust": [78, 79, 80, 112, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 153, 157, 161, 162, 163, 228, 239], "advanc": [3, 16, 34, 39, 42, 53, 54, 55, 78, 79, 80, 141, 142, 143, 151, 154], "advantag": 168, "affect": [166, 232, 235, 240], "affin": [118, 119, 120, 133, 134, 135, 136, 137, 138, 139, 247], "after": [14, 20, 32, 37, 38, 39, 40, 41, 42, 62, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 112, 113, 114, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 144, 145, 146, 147, 148, 149, 158, 168, 178, 179, 180, 184, 185, 186, 188, 189, 231, 241], "afterward": 168, "aggreg": [187, 233, 237], "aim": [4, 7], "al": 34, "alex": 34, "alexnet": [22, 32, 34], "algebra": [7, 8, 194], "algorithm": [7, 14, 16, 17, 152, 153, 177], "align": [18, 89, 182, 183], "align_corn": 89, "all": [0, 3, 4, 7, 17, 36, 38, 39, 40, 41, 42, 54, 55, 78, 79, 80, 82, 83, 86, 87, 89, 101, 102, 110, 119, 120, 141, 142, 143, 145, 146, 149, 151, 152, 153, 154, 157, 162, 163, 164, 188, 210, 211, 212, 219, 222, 224, 226, 227, 228, 233, 235, 236, 237, 239, 242, 243, 251], "allevi": 44, "alloc": [192, 193], "allow": [0, 1, 3, 4, 7, 16, 17, 23, 37, 38, 39, 40, 41, 42, 44, 47, 48, 51, 55, 57, 90, 99, 100, 101, 103, 104, 105, 106, 108, 109, 110, 151, 155, 156, 167, 190, 195, 197, 198, 223, 225, 230, 240, 241, 251], "along": [51, 89, 105, 182, 183, 187, 210, 211, 212, 219, 222, 224, 226, 228, 230, 233, 236, 237, 238, 239, 246, 248], "alongsid": 35, "alpha": [44, 47, 49, 58, 99, 103, 112, 154, 162], "alpha_dropout": [63, 64, 112], "alphadropout": [117, 122], "alphadropoutmodel": 112, "alreadi": 169, "also": [44, 45, 47, 48, 49, 50, 52, 65, 67, 89, 160, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 193, 197, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 221, 226, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239], "alter": [42, 234], "altern": [1, 100, 155, 183], "alwai": [37, 232, 245, 246, 248], "amount": [53, 54, 55, 81, 82, 83, 85, 86, 87, 160], "amsgrad": [157, 158], "an": [0, 1, 3, 7, 11, 13, 14, 16, 17, 19, 21, 23, 24, 25, 26, 32, 33, 36, 38, 39, 40, 41, 42, 45, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 79, 80, 89, 90, 97, 98, 99, 104, 108, 109, 110, 112, 113, 114, 115, 116, 123, 125, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 157, 160, 162, 168, 169, 170, 178, 183, 191, 194, 204, 211, 219, 224, 226, 233, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251], "analog": [233, 237], "analysi": [4, 108, 109, 110, 138, 144, 146, 147, 149], "andrew": 34, "angl": [90, 247], "ani": [0, 1, 2, 3, 14, 16, 21, 33, 35, 36, 37, 38, 40, 41, 44, 45, 47, 48, 49, 50, 52, 58, 59, 65, 67, 74, 76, 104, 139, 151, 152, 166, 168, 175, 178, 190, 191, 192, 194, 195, 196, 197, 198, 210, 212, 223, 225, 226, 227, 228, 231, 233, 236, 237, 238, 239, 240, 251], "anoth": [41, 189, 196, 198, 241, 251], "api": [4, 141, 142, 143, 251], "appear": 152, "append": [39, 41, 42], "appli": [2, 4, 5, 7, 14, 20, 32, 34, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 55, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 154, 155, 156, 158, 159, 160, 161, 183, 231, 233, 240, 243, 245, 246, 247, 248, 249, 251], "applic": [4, 16, 53, 76, 108, 109, 110, 123, 125, 177, 190, 197, 231, 249], "approach": [3, 42, 158], "appropri": [16, 36, 40, 42, 108, 109, 110, 112, 113, 114, 128, 145, 146, 166, 168], "approx": 49, "approxim": [16, 45, 100, 145, 148], "ar": [1, 2, 3, 4, 7, 10, 11, 13, 14, 16, 17, 18, 19, 34, 35, 36, 37, 38, 39, 40, 41, 42, 51, 53, 54, 55, 57, 65, 67, 79, 80, 89, 93, 94, 96, 97, 98, 105, 108, 109, 110, 112, 113, 114, 115, 116, 123, 125, 128, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 154, 157, 158, 160, 161, 162, 163, 164, 166, 168, 169, 170, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 200, 204, 208, 210, 211, 212, 213, 214, 219, 222, 223, 226, 230, 233, 234, 237, 240, 241, 242, 244, 245, 249, 251], "arang": 199, "arbitrari": [39, 124, 192, 193, 204, 209, 211, 215, 217, 219, 223, 224], "arcco": 199, "arch": 169, "architectur": [21, 23, 27, 28, 29, 30, 31, 33, 34, 38, 39, 40, 41, 42, 45, 102, 123, 124, 151, 169], "arcsin": 199, "arctan": 199, "area": 89, "arg": [36, 124, 169, 192], "argument": [3, 4, 21, 23, 28, 29, 30, 31, 33, 36, 42, 124, 172, 192, 223], "around": [11, 90, 106], "arr": [170, 226, 228, 236, 239], "arrai": [7, 35, 37, 167, 170, 178, 183, 191, 196, 198, 225, 232, 233, 241, 251], "art": 34, "arxiv": 34, "asarrai": 170, "asgd": 165, "aspect": 249, "assign": [36, 38, 40, 42, 89, 128, 131], "associ": [40, 41], "assum": [0, 1, 152, 153, 166], "attempt": [38, 42], "attent": [41, 65], "attribut": 36, "audio": 108, "augment": [3, 4, 90, 177, 233, 237, 240, 244, 245, 246, 247, 248, 251], "autodiff": 7, "autograd": 151, "automat": [4, 7, 37, 38, 39, 40, 41, 151, 172, 173, 174, 176, 178, 192, 193, 198, 230, 241], "auxiliari": 35, "avail": [4, 5, 7], "averag": [20, 24, 25, 26, 27, 32, 35, 78, 79, 80, 81, 82, 83, 89, 130, 141, 142, 143, 144, 145, 146, 154, 155, 157, 162, 211], "avg_pool": [144, 145, 146], "avg_pool1d": [64, 84], "avg_pool2d": [64, 84], "avg_pool3d": [64, 84], "avgpool": [20, 27, 32], "avgpool1d": [122, 150], "avgpool1dmodel": 144, "avgpool2d": [122, 150], "avgpool2dmodel": 145, "avgpool3d": [122, 150], "avgpool3dmodel": 146, "avoid": [2, 3, 16, 40, 168], "ax": [8, 167, 210, 211, 212, 219, 223, 224, 233, 235, 237], "axi": [51, 105, 182, 183, 210, 211, 212, 219, 224, 226, 228, 230, 231, 233, 235, 236, 237, 238, 239, 246, 248], "b": [8, 18, 65, 67, 96, 108, 109, 110, 123, 125, 167, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 226, 228, 236, 239, 245], "b_i": [184, 185, 188], "back": [89, 145, 146, 169, 182, 187, 233, 237], "backpropag": [7, 10, 11, 13, 14, 16, 17, 19, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 65, 67, 89, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 151, 168, 174, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 208, 210, 212, 225, 231, 233, 237, 241], "backward": [7, 35, 37, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 178, 241], "balanc": 129, "bar": 154, "base": [3, 8, 13, 14, 17, 18, 23, 27, 34, 36, 38, 39, 40, 41, 57, 65, 78, 79, 80, 112, 128, 129, 141, 142, 143, 151, 152, 153, 154, 158, 162, 163, 164, 179, 180, 184, 185, 186, 188, 189, 198, 208, 209, 210, 212, 223, 230, 231, 244, 245, 246, 247, 248], "basic": [7, 20, 32, 53, 54, 55, 78, 79, 80, 93, 94, 97, 98, 118, 119, 120, 141, 142, 143, 242, 243, 244, 245, 246, 247, 248, 249], "batch": [1, 2, 3, 8, 14, 17, 19, 53, 54, 55, 57, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 108, 109, 110, 118, 119, 120, 123, 125, 127, 128, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 161, 183, 242, 243, 244, 245, 247, 249], "batch_norm": [64, 75, 133, 134, 135], "batch_norm1": 42, "batch_norm2": 42, "batch_siz": [1, 2, 3], "batchnorm": [118, 119, 120], "batchnorm1d": [118, 122, 140], "batchnorm1dmodel": 133, "batchnorm2d": [42, 119, 122, 140], "batchnorm2dmodel": 134, "batchnorm3d": [120, 122, 140], "batchnorm3dmodel": 135, "bceloss": [122, 132], "becaus": [2, 173], "becom": [15, 36, 155, 163], "befor": [14, 37, 154, 160, 168, 175, 231, 243, 251], "begin": [1, 15, 44, 47, 48, 49, 99, 101, 102, 103, 129, 130, 131, 144, 145, 146, 147, 148, 149, 161, 163, 167, 177, 184, 185, 187, 200, 204, 210, 212, 214, 231], "behav": [129, 222], "behavior": [34, 39, 42, 166, 177, 183, 193, 251], "being": [41, 90, 112, 113, 114, 115, 116, 161, 166, 168, 226, 228, 239], "belong": 0, "below": [17, 23, 24, 25, 26, 183, 191, 194], "benchmark": 5, "benefici": 42, "benefit": [44, 151, 160, 170], "bernoulli": [112, 113, 114, 115, 116], "best": [93, 94, 97, 98], "beta": [133, 134, 135, 136, 137, 138, 139, 157, 158, 159, 160, 161], "beta1": [157, 158, 159, 160, 161], "beta2": [157, 158, 159, 160, 161], "beta_1": [157, 158, 159, 160, 161], "beta_2": [157, 158, 159, 160, 161], "better": [13, 32, 34, 45, 93, 94, 97, 98, 136, 137, 138, 151, 158, 160, 162, 243], "between": [36, 53, 54, 55, 57, 65, 70, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 127, 128, 129, 130, 131, 154, 162, 163, 164, 177, 179, 180, 183, 186, 189, 190, 224, 245, 246, 248, 249], "beyond": [7, 39], "bia": [53, 54, 55, 65, 67, 74, 76, 77, 108, 109, 110, 118, 119, 120, 123, 125, 133, 134, 135, 136, 137, 138, 139, 157, 158, 159, 160, 161], "bias": [108, 109, 110, 125, 139, 151], "bias1": 40, "bias2": 40, "bilinear": [64, 66, 89, 122, 126], "bilinearmodel": 123, "binari": [50, 68, 104, 112, 113, 114, 115, 116, 127], "binary_cross_entropi": [64, 71], "block": [36, 57, 108, 109, 110, 118, 119, 120, 168], "block1": 151, "block2": 151, "blue": 245, "bmatrix": 187, "bn": [118, 119, 120], "bn_affin": [118, 119, 120], "bool": [1, 5, 19, 36, 37, 58, 59, 60, 61, 62, 74, 76, 89, 108, 109, 110, 118, 119, 120, 123, 125, 133, 134, 135, 136, 137, 138, 139, 157, 158, 162, 166, 172, 173, 174, 176, 178, 190, 191, 192, 193, 194, 195, 196, 197, 198, 210, 211, 212, 219, 224, 225, 241], "both": [53, 67, 79, 81, 85, 100, 108, 109, 118, 142, 144, 145, 147, 148, 181, 182, 183, 187, 191, 230, 249], "bottom": 89, "bound": [94, 96, 98, 163, 176], "box": 4, "break": 151, "brief": 251, "bright": 251, "broadcast": [115, 116, 211, 219, 224, 234, 238], "buffer": [154, 160, 162, 164], "build": [7, 36, 39, 42, 151, 251], "built": [3, 7, 42, 151], "burg": 5, "c": [5, 57, 60, 61, 62, 69, 73, 74, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 115, 116, 128, 131, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 167, 228, 239, 243], "c_": [108, 109, 110], "c_in": [53, 54, 55, 118, 119, 120], "c_out": [53, 54, 55], "calcul": [0, 1, 7, 8, 37, 155, 156, 159, 160, 161, 168, 173, 178], "calculu": [9, 16], "call": [1, 36, 166, 169, 179, 180, 183, 184, 185, 186, 188, 189], "callabl": [152, 169, 240], "can": [0, 2, 3, 4, 7, 9, 11, 13, 14, 16, 17, 19, 35, 37, 38, 39, 40, 41, 42, 47, 53, 54, 55, 90, 100, 101, 106, 108, 109, 110, 136, 137, 138, 145, 146, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 176, 177, 178, 183, 192, 193, 194, 195, 197, 198, 211, 219, 224, 228, 230, 231, 233, 234, 237, 238, 239, 240, 241, 244, 246, 247, 248, 251], "cannot": [10, 11, 13, 14, 17, 18, 19], "capabl": [7, 190, 191, 194, 195, 196, 197, 198], "captur": [57, 108, 109, 110, 123], "care": 168, "cartesian": 230, "case": [3, 15, 23, 44, 47, 48, 49, 99, 101, 102, 103, 129, 130, 131, 144, 145, 146, 147, 148, 149, 151, 156, 161, 163, 167, 184, 185, 200, 204, 210, 212, 214, 231, 251], "caus": [3, 16, 154, 162, 164], "cautiou": 0, "cdot": [9, 10, 13, 14, 15, 18, 44, 45, 47, 49, 50, 53, 54, 55, 65, 67, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 97, 98, 100, 104, 112, 123, 125, 127, 128, 129, 131, 133, 134, 135, 136, 137, 138, 139, 155, 156, 157, 158, 159, 160, 161, 163, 181, 182, 183, 186, 188], "center": [90, 106, 162, 242, 251], "centercrop": [250, 251], "central": 170, "certain": [10, 45, 65, 123, 157, 158, 166, 210, 212], "chain": [13, 14, 42, 240, 251], "challeng": 34, "cham": 34, "chanc": [245, 246, 248], "chang": [70, 129, 163, 167, 168, 169, 232, 234, 238, 245, 251], "channel": [23, 24, 25, 26, 27, 53, 54, 55, 57, 60, 61, 62, 74, 76, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 108, 109, 110, 115, 116, 118, 119, 120, 133, 134, 135, 136, 137, 138, 141, 144, 145, 146, 147, 148, 149, 243, 245, 249], "check": [166, 242, 244], "checkpoint": 153, "choic": 230, "choleski": 12, "chosen": 112, "christoph": 5, "clariti": 170, "class": [3, 4, 7, 21, 24, 25, 26, 28, 29, 30, 31, 33, 51, 69, 73, 151, 153, 169, 191, 194, 225, 251], "classic": 26, "classif": [4, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 50, 51, 68, 69, 73, 104, 105, 127, 128, 131], "classifi": [20, 23, 24, 25, 26, 27, 32], "cleaner": [1, 168, 183], "clear": [37, 178, 192, 193], "clearli": 170, "clf_in_featur": 23, "clf_layer": 23, "clip": [90, 163, 199], "clockwis": 90, "close": [13, 16, 103, 127, 162], "closer": 99, "closur": [152, 153], "cnn": 34, "co": [199, 215], "code": [14, 38, 40, 42, 166, 168, 170, 177], "coeffici": [18, 89, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164], "col": 57, "collect": [4, 8, 34, 38, 39, 41, 42, 153], "color": [245, 251], "colorjitt": 251, "column": [10, 11, 13, 17, 18, 19, 57, 194, 228, 230], "com": 5, "combin": [1, 3, 34, 39, 42, 44, 45, 100, 118, 119, 120, 128, 151, 160, 161, 211, 219, 224, 226, 251], "combined_dataset": [0, 1], "common": [57, 90, 153, 251], "commonli": [7, 45, 50, 51, 52, 53, 55, 65, 72, 74, 76, 90, 97, 98, 105, 110, 127, 130, 131, 144, 145, 146, 147, 148, 149, 167, 170, 195, 235, 241, 242, 243, 244, 246, 247, 248, 251], "compar": [32, 177, 236], "compat": [4, 8, 124, 139, 151, 167, 177, 241, 251], "complex": [2, 3, 7, 11, 38, 39, 42, 48, 102, 147, 149, 151, 153, 251], "compon": [16, 36, 39, 153, 178, 251], "compos": [5, 108, 109, 110, 144, 145, 146, 147, 148, 149, 151, 251], "comprehens": 3, "comput": [7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 34, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 57, 65, 67, 68, 69, 70, 72, 73, 74, 76, 78, 79, 80, 89, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 162, 166, 167, 168, 170, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 230, 231, 233, 237, 241, 251], "computation": [3, 16], "compute_loss": [153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "concaten": [0, 53, 54, 55, 228, 229, 236, 239], "concept": [7, 16, 34], "condit": [9, 10, 13], "confer": 34, "config": 27, "configur": [21, 23, 24, 25, 26, 27, 33, 41, 118, 119, 120], "conjunct": [57, 131], "connect": [20, 23, 24, 25, 26, 27, 32, 34, 67, 108, 109, 110, 125], "consecut": 27, "consid": [3, 13, 16, 42, 93, 94, 97, 98, 151, 163, 166, 192, 193, 251], "consider": 16, "consist": [2, 4, 20, 24, 25, 26, 35, 78, 79, 80, 141, 142, 143, 170, 175, 177, 231, 242, 249, 251], "consistent_tensor": 177, "constant": [68, 69, 74, 76, 77, 92, 103, 127, 128, 133, 134, 135, 136, 137, 138, 139, 155, 156, 157, 158, 159, 160, 161, 162, 170, 231], "constant_pad": 231, "constraint": 1, "construct": [7, 28, 29, 30, 31, 39, 151, 191, 233, 237], "constructor": [28, 29, 30, 31], "contain": [1, 5, 10, 11, 16, 17, 18, 19, 23, 27, 36, 38, 39, 40, 41, 42, 51, 57, 65, 67, 68, 69, 73, 89, 127, 128, 131, 152, 179, 180, 181, 182, 184, 185, 186, 187, 189, 190, 193, 200, 201, 202, 203, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 227, 230], "content": 90, "context": [166, 168], "contextmanag": 168, "contigu": 232, "continu": [101, 174], "contrast": [136, 137, 138, 251], "contribut": [89, 112, 113, 114, 115, 116, 144, 147, 148, 149, 154, 160, 222], "control": [99, 129, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 177, 241, 251], "conv": [118, 119, 120, 134, 135], "conv1": [24, 25, 26, 42, 108, 109, 110, 144, 145, 146, 147, 148, 149], "conv1d": [56, 64, 111, 118, 122, 144, 147], "conv1dmodel": 108, "conv2": [24, 25, 26, 42, 108, 109, 110], "conv2d": [39, 42, 56, 64, 111, 119, 122, 134, 145, 148, 151], "conv2dmodel": 109, "conv3d": [56, 64, 111, 120, 122, 135, 146, 149], "conv3dmodel": 110, "conv_bia": [118, 119, 120], "conv_config": 27, "conv_lay": [23, 39], "convblock": 151, "convbnrelu1d": [121, 122], "convbnrelu2d": [121, 122], "convbnrelu3d": [121, 122], "conveni": [4, 21, 33], "convent": 183, "converg": [16, 106, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 243], "convers": [128, 131, 245, 251], "convert": [5, 27, 35, 37, 51, 105, 178, 230, 240, 241, 245, 251], "convnetwork": 39, "convolut": [20, 21, 23, 24, 25, 26, 27, 32, 33, 34, 39, 53, 54, 55, 57, 108, 109, 110, 118, 119, 120, 145, 146, 148, 149, 231], "convolv": [53, 54, 55, 108, 109, 110], "coordin": 230, "core": [0, 1, 2, 3, 36, 151, 152, 178, 251], "corinna": 5, "corner": [89, 242, 244], "correct": [38, 128, 131, 157, 158, 159, 160, 161, 241], "correctli": [16, 36, 38, 39, 40, 41, 42, 128, 131, 177], "correspond": [0, 1, 2, 5, 11, 38, 40, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 65, 67, 89, 102, 105, 123, 125, 133, 134, 135, 136, 137, 138, 145, 146, 154, 162, 164, 181, 182, 184, 185, 188, 208, 209, 215, 217, 228, 231, 233, 237, 239], "cort": 5, "cosh": [199, 216, 221], "cosin": [201, 205, 206, 215], "could": 36, "count": [34, 226], "counterclockwis": [90, 247], "cover": [8, 53, 54, 55], "coverag": [78, 79, 80], "creat": [2, 3, 7, 20, 21, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 39, 42, 151, 167, 169, 177, 190, 194, 195, 196, 197, 198, 230, 236, 240, 251], "creation": [39, 42, 251], "criterion": [127, 128, 129, 130, 131], "critic": [16, 153, 177], "crop": [242, 244, 251], "cross": [68, 69, 127, 128], "cross_entropi": [64, 71], "crossentropyloss": [122, 132], "cube": 199, "cumul": [45, 100], "current": [36, 154, 157, 163, 166], "custom": [4, 7, 20, 21, 23, 27, 32, 33, 35, 38, 39, 40, 41, 42, 90, 99, 101, 118, 119, 120, 151, 177, 194], "custom_config": 27, "custom_lenet": 23, "customiz": 251, "custommodul": 35, "customnetwork": 38, "customparametermodel": [40, 41], "d": [34, 55, 62, 80, 83, 87, 120, 135, 138, 139, 143, 146, 149, 167, 191, 247], "d_": [55, 80, 83, 87, 110, 143, 146, 149], "d_1": 139, "d_2": 139, "d_n": 139, "d_out": [55, 83, 87], "dampen": [154, 162, 164], "data": [4, 5, 7, 14, 35, 37, 41, 52, 53, 55, 57, 61, 62, 67, 90, 102, 106, 108, 109, 110, 118, 119, 120, 125, 138, 144, 146, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 170, 177, 178, 179, 180, 186, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 225, 231, 232, 233, 234, 235, 237, 240, 241, 244, 245, 246, 247, 248, 251], "databas": 5, "dataload": [2, 3], "dataset": [3, 24, 25, 26, 90, 156, 168, 240, 242, 251], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 187, "debug": [42, 166, 175, 251], "decai": [154, 155, 156, 157, 158, 159, 160, 161, 162, 164], "decompos": [9, 17, 19], "decomposit": [8, 9, 13, 16, 17, 19], "decor": 169, "decoupl": [155, 156, 158, 159, 160, 161], "decreas": [157, 158, 163], "deep": [1, 3, 4, 7, 34, 74, 100, 103, 151, 177, 240, 241, 251], "deeper": [7, 103], "def": [0, 1, 2, 3, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 123, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241], "default": [1, 5, 15, 19, 20, 21, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 44, 47, 51, 53, 54, 55, 58, 59, 60, 61, 62, 68, 69, 70, 72, 73, 74, 76, 77, 81, 82, 83, 85, 86, 87, 89, 90, 93, 94, 95, 96, 97, 98, 99, 101, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 152, 153, 160, 166, 172, 173, 174, 176, 178, 190, 191, 192, 193, 194, 195, 196, 197, 198, 210, 211, 212, 219, 223, 224, 225, 226, 228, 230, 231, 233, 236, 239, 241, 245, 246, 248], "defin": [1, 3, 4, 7, 23, 27, 38, 39, 40, 41, 42, 100, 127, 128, 129, 130, 131, 144, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 170, 173, 174, 188, 193, 204, 223, 240, 251], "definit": [7, 9, 118, 119, 120, 251], "degre": [90, 247, 251], "delai": 154, "delta": [51, 70, 105, 129, 155], "delta_": [51, 105], "demonstr": [7, 8, 34, 151, 170], "denomin": [74, 76, 77, 118, 119, 120, 133, 134, 135, 136, 137, 138, 139, 155, 156, 157, 158, 159, 160, 161, 162, 180], "denot": [14, 104, 108, 109, 110, 112, 113, 114, 115, 116, 223], "dens": [7, 156], "dense1": 7, "dense2": 7, "densiti": [45, 100], "depend": [7, 14, 15, 41, 68, 69, 70, 72, 73, 89, 108, 181, 191, 210, 212, 233, 237, 244, 245, 249], "depth": [39, 55, 62, 80, 83, 87, 110, 135, 138, 143, 146, 149], "depthwis": [53, 54, 55], "deriv": [16, 17, 51, 78, 79, 80, 100, 105, 106, 108, 109, 110, 123, 125, 169], "descend": 19, "descent": [7, 154, 164], "describ": [10, 11], "descript": 251, "deseri": 35, "design": [3, 4, 7, 8, 20, 21, 24, 25, 26, 33, 34, 37, 39, 40, 41, 42, 44, 49, 103, 112, 151, 170, 251], "desir": [35, 78, 79, 80, 141, 142, 143, 223, 225], "destin": 36, "det": [8, 12], "det_a": 10, "detail": [7, 153, 177, 183], "determin": [0, 7, 8, 9, 10, 23, 78, 79, 80, 93, 94, 97, 98, 108, 109, 110, 141, 142, 143, 145, 146, 148, 149, 162, 166, 172, 173, 174, 176, 192, 193, 242, 244], "determinist": 90, "develop": [7, 151, 177, 251], "deviat": [93, 95, 97, 240, 243, 251], "diag": [16, 199], "diagon": [16, 17, 19, 191, 194, 222], "diagonaliz": 11, "dict": [21, 23, 33, 36, 38, 40, 124, 152], "dictionari": [23, 36, 37, 38, 40, 42, 152], "differ": [0, 14, 23, 39, 42, 51, 65, 89, 105, 123, 130, 153, 167, 175, 177, 189, 198, 224, 235, 251], "differenti": [7, 9, 18, 100, 151, 172, 173, 174, 176, 178, 190, 192, 193, 195, 197], "digit": [5, 26, 34], "dilat": [53, 54, 55, 108, 109, 110, 118, 119, 120], "dilation_height": 57, "dilation_width": 57, "dim": [128, 131], "dimens": [10, 11, 13, 14, 17, 18, 19, 20, 27, 32, 37, 51, 65, 67, 74, 76, 77, 79, 80, 89, 105, 108, 109, 110, 133, 134, 135, 136, 137, 138, 139, 142, 143, 145, 146, 147, 148, 149, 167, 170, 172, 176, 178, 182, 192, 210, 211, 212, 219, 222, 223, 224, 226, 228, 231, 233, 235, 236, 237, 238, 239, 242, 244, 249], "dimension": [14, 16, 17, 19, 53, 54, 55, 81, 82, 83, 85, 86, 87, 108, 109, 110, 114, 115, 116, 133, 134, 135, 136, 137, 138, 144, 145, 146, 147, 148, 149, 167, 182, 183, 187, 191, 208, 211, 219, 222, 224, 227, 232, 233, 235, 237], "diminish": 156, "direct": [11, 127, 128, 129, 130, 131, 154, 162, 163, 164], "directli": [38, 39, 40, 41, 89, 155, 156, 158, 159, 160, 161, 175, 177, 225, 251], "directori": [3, 4, 5], "disabl": [166, 168], "discontinu": 214, "discrep": [127, 128, 131], "discret": [173, 177], "disk": 3, "displai": [21, 33], "distribut": [45, 51, 89, 93, 94, 95, 96, 97, 98, 100, 105, 108, 109, 110, 112, 113, 114, 115, 116, 123, 125, 128, 131, 144, 145, 146, 172, 173, 174, 176, 177, 211, 219, 222, 224, 236, 243, 245, 246, 247, 248], "div": 199, "divers": [90, 246, 248, 251], "diversifi": 251, "divid": [1, 16, 39, 42, 51, 53, 54, 55, 105, 127, 128, 129, 130, 131, 180, 243], "divis": [7, 16, 53, 54, 55, 112, 113, 114, 115, 116, 155, 156, 157, 158, 159, 160, 161, 162, 180], "do": [16, 18, 35, 38, 39, 40, 41, 58, 59, 60, 61, 151, 161, 166, 198, 222, 231], "document": [4, 7, 34, 153, 170, 177], "doe": [7, 14, 15, 16, 17, 19, 35, 38, 39, 40, 41, 42, 98, 157, 158, 163, 166, 168, 172, 173, 174, 175, 176, 190, 191, 192, 193, 194, 195, 196, 197, 198, 234], "doesn": 168, "doi": 34, "domain": 4, "don": 168, "dot": [11, 14, 38, 39, 40, 41, 42, 139, 147, 148, 149, 182, 187, 199, 226, 228, 236, 239], "down": [3, 151, 249], "download": [4, 5], "drawback": 44, "drawn": [172, 173, 174, 176, 177, 247], "drop": [112, 113, 114, 115, 116], "dropout": [20, 27, 32, 34, 45, 58, 60, 61, 62, 112, 114, 115, 116], "dropout1d": [63, 64, 117, 122], "dropout1dmodel": 114, "dropout2d": [63, 64, 117, 122], "dropout3d": [63, 64, 117, 122], "dropoutmodel": 113, "dtype": [35, 37, 178, 190, 191, 192, 193, 194, 195, 196, 197, 198, 225, 241], "due": [14, 16, 53, 54, 102, 247], "duplic": [38, 40], "dure": [3, 7, 10, 11, 13, 16, 17, 19, 35, 36, 37, 38, 39, 40, 41, 42, 51, 58, 59, 60, 61, 62, 74, 76, 90, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 168, 178, 179, 210, 211, 212, 219, 224, 241, 244, 247, 251], "dy": [47, 101], "dynam": [0, 2, 3, 36, 39, 40, 41, 42, 78, 79, 80, 139, 141, 142, 143, 156, 161, 166], "dynamicnetwork": 39, "e": [0, 10, 11, 13, 14, 17, 19, 23, 24, 25, 26, 27, 35, 51, 104, 105, 112, 128, 152, 155, 162, 163, 194, 206, 208, 209, 216, 221, 222, 226, 245], "each": [1, 2, 3, 4, 11, 14, 16, 17, 19, 20, 23, 27, 32, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 65, 67, 74, 76, 78, 79, 80, 102, 105, 108, 109, 110, 112, 113, 114, 115, 116, 123, 125, 127, 128, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 155, 156, 157, 158, 159, 160, 161, 162, 163, 178, 179, 180, 183, 184, 185, 186, 187, 188, 189, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 226, 228, 230, 231, 233, 236, 237, 239, 240, 241, 242, 243, 244, 245, 247, 249, 251], "earli": 161, "eas": [4, 7], "easi": [2, 3, 4, 7, 37, 38, 40], "easier": [3, 38, 39, 42], "easili": [4, 37, 41, 251], "eccv": 34, "economi": 19, "edg": 231, "educ": [7, 34], "effect": [38, 39, 40, 41, 42, 51, 53, 54, 55, 57, 99, 100, 102, 104, 105, 106, 133, 134, 135, 136, 137, 138, 139, 166, 167, 168, 228, 239], "effici": [1, 2, 3, 5, 7, 8, 13, 18, 57, 128, 151, 168], "eig": 12, "eigenvalu": [11, 17], "eigenvector": 11, "eigval": 11, "eigvec": 11, "either": [67, 170, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 225, 230], "element": [0, 16, 17, 37, 41, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 102, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 127, 128, 129, 130, 131, 139, 144, 145, 146, 147, 148, 149, 167, 178, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 227, 230, 231, 233, 234, 235, 237], "elementwise_affin": 139, "elsewher": [147, 148, 149, 194], "elu": [46, 64, 107, 122], "elumodel": 99, "empti": [36, 42, 199], "empty_lik": 199, "enabl": [0, 1, 2, 3, 7, 14, 19, 36, 37, 38, 39, 40, 41, 102, 108, 109, 110, 123, 125, 151, 153, 166, 168, 172, 173, 174, 176, 178, 240], "encapsul": [151, 178], "encod": [128, 131], "encourag": [113, 114, 115, 116, 127, 128, 131, 157], "end": [15, 44, 47, 48, 49, 99, 101, 102, 103, 129, 130, 131, 144, 145, 146, 147, 148, 149, 161, 163, 184, 185, 187, 190, 200, 204, 210, 212, 214, 226, 231, 251], "enforc": [36, 38, 40], "engin": 16, "enhanc": [25, 32, 33, 38, 40, 251], "ensur": [3, 5, 16, 17, 18, 35, 36, 37, 38, 39, 40, 41, 42, 51, 78, 79, 80, 101, 105, 112, 113, 114, 115, 116, 118, 119, 120, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 145, 146, 147, 148, 149, 151, 152, 154, 155, 157, 158, 160, 161, 162, 163, 164, 166, 167, 168, 170, 172, 173, 174, 175, 176, 177, 188, 211, 219, 224, 231, 241, 242, 243, 244, 245, 249, 251], "enter": 168, "entir": [3, 60, 61, 62, 115, 116, 177], "entri": [23, 235], "entropi": [68, 69, 127, 128], "environ": 7, "ep": [68, 69, 74, 76, 77, 118, 119, 120, 127, 128, 133, 134, 135, 136, 137, 138, 139, 155, 156, 157, 158, 159, 160, 161, 162], "epoch": [1, 3], "epsilon": [127, 128, 133, 134, 135, 136, 137, 138, 139, 155, 156, 157, 158, 159, 160, 161, 162], "equal": [14, 89, 144, 145, 146, 242, 244], "equat": [11, 16, 18], "equival": [183, 222, 232], "error": [0, 3, 11, 13, 36, 39, 40, 41, 42, 45, 70, 72, 100, 127, 128, 129, 130, 151, 152, 168, 170], "especi": [3, 38, 40, 41, 104, 167, 168, 170, 175, 240, 241, 245, 251], "essenti": [1, 3, 7, 8, 14, 16, 54, 57, 151, 175, 177, 210, 240, 241, 245, 251], "estim": [130, 157, 158, 159, 160, 161, 162], "et": 34, "eta": 163, "eta_": 163, "etc": [127, 241], "euclidean": 15, "european": 34, "evalu": [36, 74, 76, 112, 113, 114, 115, 116, 133, 134, 135, 136, 137, 138, 251], "even": [155, 168, 190, 191, 194, 195, 196, 197, 198], "evenli": [78, 79, 80, 141, 142, 143, 190], "everi": [1, 251], "everywher": 214, "exact": [36, 39, 223, 245, 247], "exactli": 42, "exampl": [4, 183], "except": [0, 214, 226, 228, 239], "exclus": [173, 176, 190], "exdb": 5, "execut": [39, 168], "exist": [18, 38, 40, 42, 169, 226], "exit": 168, "exp": [44, 49, 50, 52, 99, 103, 199], "expand": [4, 57, 233, 237], "expect": [9, 39, 42, 112, 113, 114, 115, 116, 139, 151, 170], "expens": 3, "experi": [7, 175, 177, 251], "experiment": 177, "explan": [14, 16, 20, 27, 32, 78, 79, 80, 141, 142, 143, 154], "explicit": 42, "explicitli": [38, 40], "explod": [103, 133, 134, 135], "explor": [151, 177], "expon": [14, 188], "exponenti": [44, 49, 51, 99, 103, 105, 112, 157, 158, 159, 160, 161, 208], "extend": 4, "extens": 153, "extern": [4, 7], "extract": [34, 57, 110, 144, 146, 169, 191, 210, 212, 242, 244], "extractor": [23, 24, 25, 26], "extrem": 16, "ey": 199, "f": [1, 4, 5, 7, 40, 41, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 105], "facilit": [38, 42, 51, 105, 108, 109, 110, 151, 153, 243, 251], "factor": [44, 53, 54, 55, 57, 97, 98, 154, 161, 162, 163, 164, 170], "failur": [38, 39, 40, 41, 151], "fals": [1, 5, 19, 35, 36, 37, 58, 59, 60, 61, 62, 74, 76, 89, 91, 93, 94, 95, 96, 97, 98, 108, 109, 110, 123, 125, 157, 158, 162, 166, 172, 173, 174, 176, 178, 190, 191, 192, 193, 194, 195, 196, 197, 198, 210, 211, 212, 219, 224, 225, 241], "famili": 169, "fan": [93, 94, 97, 98], "fan_in": [93, 94], "fan_out": [93, 94], "fast": 161, "faster": [156, 160, 168], "fc": [39, 109, 110, 144, 145, 146, 147, 148, 149], "fc1": [25, 26, 38, 42, 100, 102, 103, 104, 106, 125], "fc2": [25, 26, 38, 42, 100, 102, 103, 104, 106, 125], "fc3": 26, "featur": [3, 20, 23, 24, 25, 26, 27, 32, 33, 34, 65, 67, 74, 110, 113, 114, 115, 116, 118, 119, 120, 123, 125, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 151, 156], "feature_extractor": 23, "fed": [3, 251], "feed": [3, 178, 251], "fergu": [32, 34], "fetch": 0, "fewer": 1, "field": [5, 34], "file": [3, 169], "fill": [91, 95, 96, 172, 173, 174, 176, 195, 196, 197, 198], "filter": [32, 34, 53, 54, 55, 57, 109, 110, 118, 119, 120], "filter_height": 57, "filter_s": 57, "filter_width": 57, "final": [38, 39, 40, 41, 42, 240, 251], "find": [18, 210, 212], "fine": 251, "finish": 168, "first": [5, 11, 23, 32, 39, 40, 65, 123, 157, 158, 159, 160, 161, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 230, 239, 240, 241, 251], "fit": 151, "fix": [39, 231], "flatten": [23, 42, 57, 187, 229, 232, 233], "flexibl": [1, 3, 4, 7, 23, 27, 38, 39, 40, 41, 42, 151, 153, 170, 195, 196, 241, 251], "flip": [246, 248, 251], "float": [2, 5, 35, 37, 44, 47, 58, 59, 60, 61, 62, 68, 69, 70, 74, 76, 77, 90, 91, 95, 96, 97, 98, 99, 101, 112, 113, 114, 115, 116, 118, 119, 120, 127, 128, 129, 133, 134, 135, 136, 137, 138, 139, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 170, 176, 178, 190, 193, 204, 225, 243, 245, 246, 247, 248], "float32": [35, 37, 178, 190, 191, 194, 195, 197, 225, 241], "float64": [198, 225, 241], "flow": [42, 98, 100, 104, 106, 108, 109, 110, 123, 125, 166], "fly": [2, 3], "fname": 3, "focu": 7, "focus": 7, "follow": [0, 7, 8, 11, 17, 18, 19, 20, 27, 32, 44, 45, 47, 48, 49, 50, 51, 52, 65, 67, 89, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 169, 170, 177, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 210, 212, 230, 234, 242, 243, 244, 245, 246, 247, 248, 251], "form": [17, 187, 230, 233, 237, 251], "format": [2, 3, 5, 128, 131, 241], "formul": 45, "formula": [11, 19, 51, 78, 79, 80, 105, 129, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 183, 224, 245], "forward": [7, 20, 23, 24, 25, 26, 27, 32, 35, 36, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "found": 7, "foundat": [36, 151, 153, 178], "four": 231, "frac": [9, 10, 11, 13, 14, 15, 16, 18, 19, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 65, 67, 78, 79, 80, 81, 82, 83, 85, 86, 87, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 155, 156, 157, 158, 159, 160, 161, 162, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 243], "frame": 62, "framework": [4, 7, 34, 128, 131, 133, 134, 135, 136, 137, 138, 152, 153, 251], "frequent": [128, 131], "from": [0, 1, 2, 3, 4, 5, 7, 14, 16, 28, 29, 30, 31, 35, 36, 37, 38, 39, 40, 41, 42, 57, 65, 74, 76, 89, 91, 93, 94, 95, 96, 97, 98, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 151, 152, 154, 155, 156, 158, 159, 160, 161, 162, 163, 164, 167, 168, 169, 170, 172, 173, 174, 176, 177, 178, 183, 184, 185, 189, 191, 210, 211, 212, 219, 224, 226, 228, 230, 233, 235, 236, 237, 239, 242, 243, 244, 245, 246, 247, 248, 251], "full": 19, "full_matric": 19, "fulli": [4, 8, 20, 23, 24, 25, 26, 27, 32, 34, 67, 125, 177], "func": 169, "function": [3, 4, 5, 7, 8, 36, 38, 39, 40, 41, 42, 99, 100, 101, 102, 103, 104, 105, 106, 112, 113, 114, 115, 116, 118, 119, 120, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 151, 153, 170, 177, 240, 251], "fundament": [7, 67, 125, 241], "further": [7, 177, 211, 219, 224], "futur": 124, "g": [0, 10, 11, 14, 17, 19, 23, 24, 25, 26, 27, 112, 152, 155, 162, 226, 245], "g_": 156, "g_t": 162, "gain": [97, 98], "gamma": [133, 134, 135, 136, 137, 138, 139], "gaussian": [45, 100], "gelu": [46, 64, 107, 122], "gelunetwork": 100, "gener": [16, 90, 112, 113, 114, 115, 116, 137, 158, 160, 161, 168, 172, 173, 174, 175, 176, 177, 182, 190, 192, 193, 230, 244, 245, 246, 248, 251], "get": 5, "give": [7, 154, 162], "given": [10, 11, 14, 16, 17, 19, 57, 127, 128, 131, 152, 166, 196, 198, 240, 245, 246, 248, 251], "global": [0, 166, 168, 175, 177], "goal": [127, 128, 131], "gpu": 34, "grad": [35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 57, 65, 67, 89, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 152, 153, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 246, 248, 249], "grad_output": 14, "gradient": [7, 8, 34, 35, 37, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 172, 173, 174, 176, 190, 191, 192, 193, 194, 195, 196, 197, 198, 225, 241], "graph": [7, 98, 178, 190, 191, 194, 195, 196, 197, 198, 241], "grayscal": [5, 23, 24, 25, 26, 245, 251], "greater": 204, "green": 245, "grid": 230, "groundbreak": 34, "group": [39, 53, 54, 55, 108, 109, 110, 118, 119, 120, 152, 153], "group1": 39, "group2": 39, "guarante": 175, "h": [54, 55, 57, 61, 62, 79, 80, 82, 83, 86, 87, 89, 90, 119, 120, 134, 135, 137, 138, 142, 143, 146, 149, 242, 244], "h_": [54, 55, 79, 80, 82, 83, 86, 87, 89, 109, 110, 142, 143, 145, 146, 148, 149], "h_out": [54, 55, 82, 83, 86, 87], "h_stack": 228, "ha": [0, 11, 42, 53, 54, 55, 118, 119, 120, 127, 128, 133, 134, 135, 136, 137, 138, 139, 152, 153, 183, 222, 226, 228, 236, 239, 245], "half": 217, "hand": 18, "handl": [0, 3, 7, 16, 36, 38, 39, 40, 41, 42, 128, 131, 151, 153, 168], "handwritten": [5, 26], "hardwar": 7, "hat": [157, 158, 159, 160, 161], "have": [0, 1, 10, 11, 13, 16, 17, 19, 37, 39, 41, 42, 54, 55, 98, 151, 194, 195, 196, 197, 198, 210, 212, 226, 228, 230, 235, 236, 239, 243, 249], "height": [54, 55, 57, 61, 62, 79, 80, 82, 83, 86, 87, 89, 90, 109, 110, 134, 135, 137, 138, 142, 143, 145, 146, 148, 149, 242, 244, 249], "help": [7, 47, 49, 62, 99, 101, 103, 106, 133, 134, 135, 144, 145, 147, 148, 154, 157, 158, 160, 166, 167, 168, 170], "henc": 234, "here": [3, 9, 36, 65, 151, 153, 167, 168, 170, 177, 240, 241, 251], "hidden": [20, 32, 39], "hidden_s": 39, "hierarch": [39, 42, 151], "hierarchi": 109, "hierarchicalnetwork": 39, "high": [7, 173, 176], "higher": [128, 131, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 182, 183, 187, 208], "highest": 173, "highlight": [147, 148, 149], "hint": 170, "histor": 156, "histori": [172, 173, 174, 176, 190, 191, 192, 193, 194, 195, 196, 197, 198], "hold": [38, 39, 40, 41], "horizont": [228, 236, 246, 251], "hot": [128, 131], "how": [2, 3, 7, 39, 42, 151, 170, 251], "howev": [35, 98], "hstack": 229, "http": 5, "huber": [70, 129], "huber_loss": [64, 71], "huberloss": [122, 132], "huberregressionmodel": 129, "hue": 251, "hyperbol": [52, 106, 206, 216, 221], "hyperparamet": [152, 154], "i": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 219, 220, 221, 222, 223, 224, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251], "ideal": [7, 42], "ident": [13, 14, 90, 122, 126, 175, 177, 194, 234], "identifi": 40, "idx": [2, 3], "ieee": 34, "ii": 222, "ij": [51, 89, 105, 181, 182, 183, 187, 230], "ik": [181, 182, 183], "ill": [10, 16], "ilsvrc": 34, "imag": [3, 4, 5, 20, 21, 23, 24, 25, 26, 33, 34, 54, 76, 90, 109, 119, 137, 230, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251], "image_dir": 3, "image_path": 3, "imagedataset": 3, "imageio": 3, "imagenet": 34, "imbal": [128, 131], "impact": 160, "implement": [2, 3, 7, 16, 20, 23, 32, 34, 36, 57, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 228, 239, 245], "impli": [108, 109], "import": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251], "improp": [39, 42, 177], "improv": [32, 34, 74, 90, 100, 103, 106, 154, 155, 156, 157, 158, 159, 160, 161, 162, 170, 244, 247, 251], "imread": 3, "in1_featur": [65, 123], "in2_featur": [65, 123], "in_channel": [39, 42, 108, 109, 110, 118, 119, 120, 134, 135, 144, 145, 146, 147, 148, 149, 151], "in_featur": [38, 39, 42, 67, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 112, 113, 114, 123, 125, 127, 128, 129, 130, 131, 133, 136, 139, 144, 145, 146, 147, 148, 149], "includ": [3, 4, 7, 8, 14, 15, 20, 23, 27, 32, 36, 37, 39, 41, 42, 89, 118, 119, 120, 151, 152, 153, 160, 170, 177, 183, 231], "inclus": [37, 40, 173, 176], "incom": [67, 125], "incomplet": 2, "incompletedataset": 2, "incorpor": [19, 100], "increas": [53, 54, 55, 57, 90, 156, 163, 167, 228, 239, 245, 246, 248, 251], "independ": [39, 53, 54, 55, 112, 113, 114, 115, 116, 139, 183, 193, 243, 245, 247, 249], "index": [0, 2, 5, 167, 190, 191, 194, 230, 234], "indexerror": 0, "indic": [0, 1, 27, 37, 39, 41, 42, 69, 73, 128, 131, 144, 166, 178, 242, 244], "individu": [3, 39, 42, 129, 139, 153, 156, 163], "induc": [49, 103], "inf": 220, "infer": [39, 42, 168], "infin": [17, 19, 159], "inform": [7, 34, 35, 153, 155, 168], "infti": [15, 161], "inherit": [1, 154, 162, 164], "init": 92, "initi": [1, 28, 29, 30, 31, 35, 37, 38, 39, 40, 41, 42, 91, 93, 94, 95, 96, 97, 98, 108, 109, 110, 123, 125, 127, 128, 129, 130, 131, 133, 134, 135, 139, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 172, 175, 176, 177, 190, 194, 195, 196, 197, 198, 225], "initial_accumulator_valu": 156, "inner": [7, 181, 199], "input": [7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 32, 34, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 170, 177, 178, 179, 181, 182, 183, 187, 191, 193, 196, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251], "input1": 123, "input2": 123, "input_": [20, 32, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 118, 119, 120, 141, 142, 143], "input_1": 65, "input_2": 65, "input_data": [99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 144, 145, 146, 147, 148, 149], "input_s": [39, 41, 105, 128, 131], "input_tensor": [7, 23, 24, 25, 26, 27, 35, 38, 39, 40, 41, 42, 51, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 151, 242, 243, 244, 245, 246, 247, 248, 249], "insid": [3, 166, 168], "insight": [7, 34], "inspect": [36, 37, 42, 152], "instabl": [16, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164], "instal": 7, "instanc": [0, 1, 7, 21, 24, 25, 26, 33, 36, 37, 38, 40, 41, 42, 76, 136, 137, 138, 139, 152, 169, 225, 233, 237, 251], "instance_norm": [64, 75, 136, 137, 138], "instancenorm1d": [122, 140], "instancenorm1dmodel": 136, "instancenorm2d": [122, 140], "instancenorm3d": [122, 140], "instanti": [2, 169], "instead": [7, 38, 39, 40, 41, 42, 93, 94, 97, 98, 157, 158, 159, 168, 170, 192, 193], "int": [0, 1, 2, 5, 14, 15, 20, 21, 23, 27, 28, 29, 30, 31, 32, 33, 35, 37, 51, 53, 54, 55, 57, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 95, 96, 97, 98, 105, 108, 109, 110, 118, 119, 120, 123, 125, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 157, 158, 159, 160, 161, 163, 169, 172, 173, 174, 175, 176, 178, 190, 191, 192, 194, 195, 197, 204, 210, 211, 212, 219, 223, 224, 225, 226, 231, 233, 234, 235, 236, 237, 238, 242, 244, 249], "integ": [1, 3, 14, 27, 53, 54, 55, 79, 80, 108, 109, 110, 139, 142, 143, 145, 146, 147, 148, 149, 170, 173, 174, 176, 177, 192, 195, 197, 211, 219, 223, 224, 231, 233, 234, 237], "integr": [1, 2, 4, 5, 8, 37, 39, 41, 42, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 123, 125, 144, 145, 146, 147, 148, 149], "intend": [35, 40, 41], "intens": [16, 243, 245], "intent": 170, "interact": [65, 123, 151, 177], "interfac": [2, 36, 39, 153], "interfer": [166, 168], "intermedi": 16, "intern": [38, 39, 40, 41, 42, 128, 131, 151, 242, 243, 244, 245, 246, 247, 248, 249], "interpol": [64, 88, 249], "interpret": [34, 51, 105, 170, 226], "interv": [172, 176, 190], "introduc": [34, 48, 100, 102, 104, 106, 112, 113, 114, 115, 116, 244, 247, 251], "introspect": 42, "intuit": [7, 38, 40, 151, 251], "inv": 12, "inv_a": 13, "invari": [145, 148], "invers": [7, 10, 13, 14, 16, 156, 201, 202, 203], "invert": [10, 13, 14, 18], "invok": 169, "involv": [9, 10, 11, 13, 16, 17, 19, 44, 45, 47, 48, 49, 50, 52, 65, 67, 89, 108, 109, 110, 123, 125, 170, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 198, 208, 209, 210, 212, 215, 217, 230, 231, 233, 237], "is_leaf": 178, "issu": [3, 103, 133, 134, 135, 157, 158], "item": 130, "iter": [0, 1, 2, 3, 35, 36, 39, 41, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 190], "ith": [51, 105], "its": [4, 14, 16, 20, 32, 34, 35, 38, 39, 40, 41, 53, 54, 55, 57, 90, 98, 100, 102, 147, 148, 149, 151, 152, 155, 163, 166, 167, 168, 169, 190, 192, 193, 197, 210, 212, 225, 234, 243, 246, 248, 251], "itself": [9, 14, 38, 39, 40, 41], "j": [5, 51, 105, 133, 134, 135, 136, 137, 138, 144, 145, 147, 148, 230, 236, 242, 244], "jk": 182, "join": [3, 226], "json": 169, "k": [14, 53, 108, 128, 134, 135, 137, 138, 144, 147, 148, 181, 182, 191, 194, 226], "k_d": [55, 110, 146, 149], "k_h": [54, 55, 109, 110, 145, 146, 149], "k_w": [54, 55, 109, 110, 145, 146, 149], "kaim": [93, 94, 97, 98], "kaiming_norm": 92, "kaiming_uniform": 92, "karen": 34, "keep": [36, 102, 155, 168, 234], "keep_grad": [37, 172, 173, 174, 176, 178, 190, 191, 192, 193, 194, 195, 196, 197, 198, 225, 241], "keep_var": 36, "keepdim": [210, 211, 212, 219, 224], "kei": [34, 36, 38, 40, 42, 152], "kept": [211, 219, 224], "kernel": [23, 24, 25, 26, 32, 53, 54, 55, 57, 78, 79, 80, 81, 82, 83, 85, 86, 87, 108, 109, 110, 118, 119, 120, 141, 142, 143, 145, 146, 149], "kernel_s": [39, 42, 81, 82, 83, 85, 86, 87, 108, 109, 110, 118, 119, 120, 134, 135, 144, 145, 146, 147, 148, 149], "keyerror": 36, "keyword": [21, 28, 29, 30, 31, 33, 36, 124], "kj": [181, 183], "known": 34, "krizhevski": 34, "kroneck": [51, 105], "kwarg": [21, 24, 25, 26, 28, 29, 30, 31, 33, 36, 124, 169], "l": [9, 16, 53, 60, 78, 81, 85, 112, 113, 114, 115, 116, 118, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141], "l2": [154, 155, 156, 157, 158, 159, 160, 161, 162, 164], "l_": [53, 78, 81, 85, 108, 141, 144, 147], "l_out": [53, 81, 85], "label": [4, 5, 127, 128, 131], "lambd": 154, "lambda": [11, 49, 103, 154, 158], "lambda_1": 11, "lambda_2": 11, "lambda_i": 11, "lambda_n": 11, "languag": [4, 108, 123, 144, 147], "larg": [0, 3, 16, 34, 129, 151, 154, 157, 158, 159, 162, 163, 164, 168], "larger": [38, 40, 53, 54, 55, 57, 154, 184, 231, 242, 244, 249], "largest": 210, "last": [1, 51, 77, 105, 182, 183, 226, 246, 248], "latest": 4, "layer": [7, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 38, 39, 42, 51, 67, 74, 76, 77, 93, 94, 97, 98, 105, 108, 109, 110, 118, 119, 120, 123, 124, 125, 131, 139, 144, 145, 146, 147, 148, 149, 151, 177, 231, 241], "layer1": 169, "layer2": 169, "layer_group": 39, "layer_norm": [64, 75, 139], "layer_sequ": [39, 42], "layernorm": [122, 140], "layernormmodel": 139, "lead": [39, 42, 100, 136, 137, 138, 139, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 177], "leaf": 178, "leaki": [47, 101], "leaky_relu": [46, 64, 101], "leakyrelu": [107, 122], "learn": [1, 3, 4, 5, 7, 14, 16, 32, 33, 34, 38, 39, 40, 41, 48, 51, 99, 101, 102, 105, 108, 109, 110, 113, 114, 115, 116, 123, 125, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 175, 240, 241, 251], "learnabl": [35, 36, 37, 74, 76, 77, 108, 109, 110, 118, 119, 120, 123, 125, 133, 134, 135, 136, 137, 138, 139, 151], "least": [16, 17, 19, 222], "lecun": [5, 34], "left": [14, 15, 16, 19, 45, 51, 100, 105, 127, 128, 129, 131, 133, 134, 135, 136, 137, 138, 139, 147, 148, 149, 242, 244], "leftarrow": 160, "len": [0, 1, 2, 3, 230], "lenet": [22, 24, 25, 26, 34], "lenet_1": 34, "lenet_4": 34, "lenet_5": 34, "length": [39, 53, 60, 78, 81, 85, 108, 124, 133, 136, 141, 144, 147, 231, 243], "leq": [129, 161, 188, 204], "lerp": 89, "less": [0, 44, 47, 70, 99, 101, 128, 129, 131, 204], "let": 11, "level": 7, "leverag": [18, 34, 151], "librari": [3, 7, 8, 36, 151, 152, 153, 169, 170, 177, 178, 251], "lightweight": 7, "like": [7, 34, 35, 36, 39, 42, 53, 97, 98, 103, 112, 133, 134, 135, 136, 137, 138, 166, 167, 170, 225, 241, 251], "likelihood": [73, 128, 131], "limit": [155, 204], "linalg": [7, 12], "linalgerror": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "linear": [7, 8, 9, 16, 17, 18, 38, 39, 40, 42, 44, 45, 47, 48, 49, 93, 94, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 112, 113, 114, 123, 124, 127, 128, 129, 130, 131, 133, 136, 139, 144, 145, 146, 147, 148, 149, 169, 194], "linearli": 129, "list": [0, 1, 23, 27, 35, 37, 38, 39, 40, 41, 77, 124, 139, 152, 170, 172, 173, 174, 176, 178, 191, 192, 193, 195, 196, 197, 198, 223, 234, 235, 238, 240], "listdir": 3, "liter": [68, 69, 70, 72, 73, 89, 93, 94, 108, 109, 110, 118, 119, 120, 127, 128, 129, 130, 131, 230], "ln": 188, "load": [3, 4, 5, 35, 36, 37, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 169], "load_state_dict": [36, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "loader": [1, 2, 3], "local": [34, 57, 108], "locat": 89, "log": [73, 127, 128, 131, 199], "log_softmax": 131, "logarithm": [188, 208, 209], "logic": [3, 141, 142, 143, 151, 152], "logit": [20, 32, 51, 105, 128], "logsoftmax": [128, 131], "long": [160, 223], "loop": [1, 39, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "loss": [7, 16, 38, 39, 40, 41, 42, 51, 68, 69, 70, 72, 73, 99, 100, 101, 102, 103, 104, 105, 106, 112, 113, 114, 115, 116, 124, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "low": [7, 173, 176], "lower": [9, 96, 154, 162, 163, 164, 176], "lowest": 173, "lr": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "lu": 13, "lucid": [0, 1, 2, 5, 12, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 171, 199, 229, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249], "m": [27, 38, 39, 42, 145, 146, 148, 149, 157, 158, 159, 160, 161, 194], "m_": [157, 158, 159, 160, 161], "m_t": [160, 161], "machin": [3, 5, 7, 16, 157, 167, 175], "magnitud": [162, 163, 251], "mai": [3, 7, 11, 13, 16, 39, 41, 90, 129, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 168, 177, 245, 251], "main": [7, 17, 39, 191, 194], "maintain": [16, 35, 36, 38, 39, 40, 42, 49, 93, 94, 97, 98, 99, 100, 103, 112, 113, 114, 115, 116, 133, 134, 135, 136, 137, 138, 157, 162, 242, 245, 249], "make": [1, 3, 7, 23, 39, 42, 104, 128, 129, 139, 145, 148, 151, 156, 157, 158, 159, 167, 169, 177, 178, 183, 230, 240, 251], "manag": [7, 36, 38, 39, 40, 41, 42, 151, 153, 166, 168, 169, 177], "manhattan": 15, "manipul": [7, 38, 40, 251], "manner": [39, 42], "manual": [68, 69, 73, 127, 128, 131, 168], "map": [36, 50, 52, 104, 106], "mask": [35, 112, 113, 114, 115, 116], "match": [18, 36, 39, 42, 68, 70, 72, 77, 118, 119, 120, 152, 208, 233, 234, 237, 238, 243, 251], "math": [205, 215, 220], "mathbf": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 65, 67, 89, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 181, 182, 183, 187, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249], "mathcal": [93, 95, 97, 112, 113, 114, 115, 116, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139], "mathemat": [13, 118, 119, 120, 244, 246, 247, 248], "mathrm": 16, "matmul": 199, "matric": [8, 10, 11, 13, 16, 18, 19, 181, 182, 183, 194, 230], "matrix": [7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 57, 65, 124, 125, 151, 181, 230], "matrix_pow": 12, "matthew": 34, "max": [15, 27, 48, 85, 86, 87, 102, 147, 148, 149, 159, 184, 199, 204], "max_pool": [147, 148, 149], "max_pool1d": [64, 84], "max_pool2d": [64, 84], "max_pool3d": [64, 84], "max_valu": 204, "maxim": 3, "maximum": [15, 102, 147, 148, 149, 157, 159, 199, 204, 210, 247], "maxpool": [20, 32], "maxpool1d": [122, 150], "maxpool1dmodel": 147, "maxpool2d": [39, 42, 109, 122, 150], "maxpool2dmodel": 148, "maxpool3d": [110, 122, 150], "maxpool3dmodel": 149, "mean": [5, 17, 35, 49, 53, 54, 55, 58, 68, 69, 70, 72, 73, 74, 76, 95, 99, 100, 101, 102, 103, 104, 106, 110, 112, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 157, 158, 159, 160, 161, 162, 166, 174, 199, 204, 208, 209, 210, 212, 215, 217, 219, 222, 223, 224, 240, 243, 251], "meaning": [42, 170], "measur": [127, 128, 130, 131], "mechan": [7, 41, 65], "membership": 127, "memori": [2, 3, 168, 192, 193], "meshgrid": 229, "method": [3, 7, 8, 13, 38, 39, 40, 41, 42, 68, 69, 70, 72, 73, 93, 94, 97, 98, 127, 128, 129, 130, 131, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 177], "middl": 167, "might": 151, "min": [185, 199, 204], "min_valu": 204, "mind": [0, 3, 7, 39, 42, 168], "mini": 1, "minim": [4, 7, 42, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 153], "minimalist": 7, "minimum": [199, 204, 212], "minu": 104, "mirror": [196, 198], "mismatch": [36, 151, 152], "miss": [36, 151], "mitig": [47, 99, 101, 103, 133, 134, 135], "mnist": [4, 6, 24, 25], "mnist_train": [4, 5], "mode": [7, 62, 74, 76, 89, 93, 94, 112, 113, 114, 115, 116, 231], "model": [1, 3, 4, 7, 14, 17, 19, 20, 23, 27, 32, 35, 36, 37, 38, 39, 40, 41, 42, 51, 90, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 169, 177, 240, 241, 251], "modern": 34, "modif": [42, 168], "modifi": [21, 33, 38, 39, 40, 41, 91, 93, 94, 95, 96, 97, 98, 112, 166, 168, 175, 228, 239], "modul": [5, 7, 20, 21, 23, 27, 32, 33, 35, 37, 38, 39, 40, 41, 42, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 169, 170, 177, 241, 251], "modular": [3, 7, 34, 36, 39, 42, 151, 251], "moduledict": [39, 40, 42, 43], "modulelist": [41, 42, 43], "moment": [157, 158, 159, 160, 161], "momentum": [74, 76, 118, 119, 120, 133, 134, 135, 136, 137, 138, 154, 160, 162, 164], "momentum_decai": 160, "moor": 16, "more": [3, 4, 7, 11, 38, 39, 42, 99, 113, 114, 115, 116, 151, 152, 153, 154, 155, 158, 159, 162, 163, 164, 174, 183, 222, 236, 251], "most": [8, 148, 241, 242, 251], "move": [154, 162], "mse": [70, 72, 129, 130], "mse_loss": [64, 71], "mseloss": [122, 132], "mu": [95, 133, 134, 135, 136, 137, 138, 139, 224], "mu_c": 243, "mu_i": [136, 137, 138], "much": 251, "mul": 199, "multi": [3, 4, 51, 69, 73, 105, 128, 131, 211, 219, 224], "multidimension": [172, 176, 192], "multipl": [1, 3, 7, 8, 14, 18, 20, 40, 41, 42, 57, 89, 90, 112, 113, 114, 115, 116, 128, 131, 151, 167, 172, 173, 174, 176, 181, 186, 192, 193, 240, 245, 251], "multipli": [14, 41, 67, 125, 163, 186, 187], "must": [0, 1, 3, 9, 10, 11, 13, 14, 17, 18, 19, 36, 38, 39, 40, 41, 42, 77, 112, 113, 114, 115, 116, 131, 152, 168, 222, 226, 228, 231, 233, 234, 236, 237, 239, 242, 243, 244, 245, 246, 248], "my_simple_model": 169, "mymodel": [36, 37, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "myoptim": [152, 153], "n": [14, 15, 34, 38, 39, 42, 53, 54, 55, 57, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 93, 95, 97, 108, 109, 110, 115, 116, 118, 119, 120, 123, 125, 127, 128, 130, 131, 133, 134, 135, 136, 137, 138, 141, 142, 143, 144, 145, 146, 147, 148, 149, 194, 211, 222, 224], "n1": 15, "nabla_": [155, 156, 157, 158, 159, 160, 161, 163], "nabla_t": 161, "nadam": 165, "name": [34, 36, 38, 40, 42, 169, 170], "nan": [17, 19], "natur": [16, 34, 108, 123, 144, 147, 188, 208, 209], "ndarrai": [35, 37, 170, 178, 191, 193, 196, 198, 225], "ndim": [17, 19, 37, 178], "ne": 14, "nearest": 89, "necessari": [4, 5, 16, 168, 228, 239], "need": [2, 4, 39, 40, 41, 51, 123, 151, 168, 192, 193, 240, 241, 251], "neg": [14, 16, 19, 44, 73, 90, 99, 101, 102, 103, 128, 131, 163, 226], "negative_slop": [47, 101], "neglect": 41, "neighbor": 89, "neq": 15, "nest": [39, 42, 151], "nesterov": 160, "net": [32, 34], "network": [3, 4, 7, 20, 21, 26, 27, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 48, 49, 50, 51, 52, 53, 54, 55, 65, 67, 74, 90, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 162, 164, 176, 177, 178, 190, 195, 197, 210, 212, 231, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251], "neural": [3, 4, 7, 20, 21, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 45, 48, 49, 50, 51, 52, 53, 54, 55, 65, 67, 74, 90, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 162, 164, 176, 177, 178, 190, 195, 197, 210, 212, 231, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251], "neuralnetwork": 102, "neuron": 101, "never": 245, "new": [36, 37, 44, 45, 47, 48, 49, 50, 52, 65, 67, 89, 93, 94, 95, 96, 97, 98, 152, 169, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 193, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 228, 231, 233, 234, 236, 237, 238, 239], "next": [42, 240], "nll": 73, "nll_loss": [64, 71], "nllloss": [122, 132], "nn": [5, 7, 20, 23, 27, 32, 43, 46, 56, 63, 66, 71, 75, 84, 88, 92, 107, 111, 117, 121, 122, 126, 132, 140, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 169, 241, 251], "no_grad": 166, "node": 178, "nois": [19, 177], "non": [11, 14, 16, 19, 41, 45, 47, 48, 93, 94, 99, 100, 101, 102, 103, 104, 106, 112, 113, 114, 115, 116, 157, 158, 168, 188, 204], "none": [0, 1, 2, 5, 23, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 192, 193, 194, 196, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 248, 249], "norm": [8, 12, 159], "normal": [5, 45, 49, 51, 52, 74, 76, 77, 92, 93, 97, 100, 103, 105, 112, 118, 119, 120, 133, 134, 135, 136, 137, 138, 139, 162, 174, 177, 240, 250, 251], "normalized_shap": [77, 139], "note": [53, 112], "noth": [58, 59, 60, 61], "notimplementederror": [2, 36, 152], "notin": 204, "nov": 34, "np": [35, 37, 128, 131, 170, 178, 183, 190, 191, 194, 195, 197, 198, 209, 225, 241], "npy": 5, "num_class": [20, 21, 27, 28, 29, 30, 31, 32, 33, 105, 128, 131], "num_featur": [42, 118, 119, 120, 133, 134, 135, 136, 137, 138], "num_paramet": 41, "number": [0, 1, 2, 5, 10, 11, 13, 16, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 37, 39, 41, 42, 53, 54, 55, 57, 60, 61, 62, 65, 67, 69, 73, 74, 76, 78, 79, 80, 89, 90, 93, 94, 97, 98, 104, 108, 109, 110, 118, 119, 120, 123, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 145, 146, 147, 148, 149, 154, 172, 175, 176, 178, 188, 190, 192, 194, 210, 211, 212, 223, 224, 226, 228, 231, 233, 234, 235, 237, 239, 243, 245, 246, 248, 251], "numer": [13, 16, 68, 69, 74, 76, 77, 118, 119, 120, 127, 128, 133, 134, 135, 136, 137, 138, 139, 155, 156, 157, 158, 159, 160, 161, 162, 170, 180, 190, 195, 197], "numpi": [7, 35, 37, 128, 131, 170, 178, 183, 191, 194, 209, 222, 225, 231, 233, 237, 241, 251], "o": [3, 146, 149, 195, 196], "object": [1, 3, 8, 34, 36, 40, 41, 130, 151, 168, 179, 180, 184, 185, 186, 189, 225], "observ": 157, "obtain": 1, "occur": [90, 168, 169, 226], "occurr": 14, "odot": [112, 113, 114, 115, 116], "off": 166, "offer": [4, 7, 151, 153, 177, 251], "offset": 194, "often": [14, 53, 54, 55, 57, 128, 131, 190, 197, 241, 245, 249, 251], "older": 160, "onc": 168, "one": [0, 41, 42, 51, 53, 67, 81, 85, 103, 104, 105, 108, 114, 118, 119, 120, 128, 131, 133, 136, 144, 147, 152, 167, 170, 174, 189, 196, 210, 212, 227, 232, 236, 241], "ones": [65, 67, 108, 109, 110, 125, 133, 134, 135, 136, 137, 138, 139, 151, 194, 196, 199], "ones_lik": 199, "onli": [7, 89, 102, 112, 113, 114, 115, 116, 127, 128, 131, 133, 134, 135, 136, 137, 138, 139, 147, 148, 149, 163, 166, 190, 204, 210, 212, 222, 231, 232, 234, 235], "onto": [17, 19], "openml": 5, "oper": [3, 7, 8, 13, 16, 35, 36, 39, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 57, 62, 65, 67, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 166, 167, 168, 170, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 192, 193, 195, 197, 208, 209, 210, 211, 212, 215, 217, 219, 222, 224, 226, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 243, 249], "operatornam": [14, 16], "opposit": 154, "optim": [3, 7, 8, 14, 16, 17, 19, 35, 37, 40, 41, 57, 108, 109, 110, 151, 168], "optimizer_st": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "option": [1, 5, 15, 19, 20, 21, 23, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 44, 47, 51, 54, 55, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 81, 82, 83, 85, 86, 87, 89, 90, 93, 94, 95, 96, 97, 98, 99, 101, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 152, 154, 162, 164, 172, 173, 174, 176, 178, 190, 191, 192, 193, 194, 195, 196, 197, 198, 210, 211, 212, 219, 223, 224, 225, 226, 230, 233, 235, 236, 241, 245, 246, 248], "ord": 15, "order": [1, 3, 15, 19, 38, 39, 40, 41, 42, 223, 240], "ordered_dict": 42, "ordereddict": [36, 38, 39, 42], "organ": [38, 39, 40, 42, 169], "orient": 251, "origin": [26, 58, 90, 106, 231, 232, 233, 234, 237, 238, 249], "orthogon": [16, 17, 19], "orthonorm": 17, "oscil": [154, 162, 164], "other": [2, 3, 7, 13, 23, 26, 35, 36, 39, 42, 93, 94, 112, 151, 152, 166, 168, 177, 178, 190, 192, 195, 197, 222, 230, 251], "otherwis": [44, 47, 48, 49, 51, 99, 101, 102, 103, 105, 113, 114, 115, 116, 129, 144, 145, 146, 147, 148, 149, 152, 163, 169, 184, 185, 210, 212], "otim": [16, 65, 123], "out": [0, 3, 4, 44, 45, 47, 48, 49, 50, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 93, 94, 97, 98, 108, 109, 110, 112, 113, 114, 115, 116, 141, 142, 143, 144, 145, 146, 147, 148, 149, 154, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239], "out_channel": [23, 39, 42, 108, 109, 110, 118, 119, 120, 134, 135, 144, 145, 146, 147, 148, 149, 151], "out_featur": [38, 39, 42, 65, 67, 99, 100, 101, 102, 103, 104, 105, 106, 109, 110, 112, 113, 114, 123, 125, 127, 128, 129, 130, 131, 133, 136, 139, 144, 145, 146, 147, 148, 149], "outcom": [245, 246, 248], "outer": 199, "outlier": [70, 129], "output": [0, 1, 2, 7, 14, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 58, 59, 60, 61, 62, 65, 67, 78, 79, 80, 89, 90, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 173, 174, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 191, 193, 194, 195, 197, 198, 208, 209, 210, 211, 212, 215, 217, 219, 222, 223, 224, 230, 231, 233, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249], "output_height": 57, "output_lay": [39, 42], "output_s": [39, 78, 79, 80, 141, 142, 143], "output_width": 57, "outsid": 0, "over": [0, 1, 2, 3, 8, 32, 36, 39, 41, 51, 78, 79, 80, 105, 108, 109, 110, 128, 131, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 172, 176, 210, 211, 212, 219, 222, 224, 245, 246, 248], "overdetermin": 16, "overfit": [1, 20, 32, 59, 62, 113, 114, 115, 116, 154, 157, 162, 164], "overrid": [2, 3], "overridden": [36, 152], "overwrit": [38, 40], "own": [4, 38, 39, 40, 41, 53, 54, 55, 98, 151, 243], "p": [15, 16, 37, 40, 41, 58, 59, 60, 61, 62, 112, 113, 114, 115, 116, 144, 147, 148, 245, 246, 248, 251], "p_d": [146, 149], "p_h": [145, 146, 149], "p_w": [145, 146, 149], "packag": [2, 3, 4, 8, 34, 151, 153, 169, 175, 177, 241, 251], "pad": [23, 39, 42, 53, 54, 55, 57, 78, 79, 80, 81, 82, 83, 85, 86, 87, 108, 109, 110, 118, 119, 120, 134, 135, 141, 142, 143, 144, 145, 146, 147, 148, 149, 229], "pad_after_dim1": 231, "pad_after_dim2": 231, "pad_before_dim1": 231, "pad_before_dim2": 231, "pad_width": 231, "padding_height": 57, "padding_width": 57, "pair": 65, "parallel": [1, 3], "param": [36, 37, 40, 41, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "param1": 36, "param_dict": 40, "param_group": [152, 153], "param_groups_setup": 152, "param_list": 41, "param_s": 169, "paramet": [0, 2, 7, 24, 25, 26, 34, 36, 151, 152, 153, 170, 177, 251], "parameterdict": 43, "parameterlist": 43, "parent": 151, "part": [35, 36, 98, 151, 166, 168, 177, 190, 191, 194, 195, 196, 197, 198, 241, 251], "partial": [9, 10, 11, 13, 14, 15, 16, 18, 19, 44, 45, 47, 48, 49, 50, 51, 52, 65, 67, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239], "particip": [37, 241], "particular": [38, 40], "particularli": [7, 16, 39, 40, 41, 42, 51, 67, 105, 118, 119, 120, 125, 128, 131, 136, 137, 138, 139, 158, 166, 169, 240], "pass": [2, 7, 16, 20, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 36, 37, 38, 39, 40, 41, 42, 89, 99, 100, 101, 102, 103, 104, 106, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 144, 145, 146, 147, 148, 149, 151, 170, 178, 211, 219, 222, 223, 224, 226, 228, 232, 234, 235, 239, 241, 251], "past": [154, 155, 157, 162], "patch": [57, 145], "path": [3, 5], "pattern": [48, 102, 108, 109, 110], "penal": [154, 162, 164], "penalti": [155, 156, 157, 158, 159, 160, 161], "penros": 16, "per": [1, 78, 136, 137, 138, 139, 141], "perform": [3, 7, 8, 9, 16, 20, 23, 24, 25, 26, 27, 32, 34, 36, 37, 41, 45, 53, 54, 55, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 112, 113, 114, 115, 116, 123, 124, 125, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 166, 168, 175, 177, 179, 180, 183, 186, 189, 208, 210, 212, 219, 223, 240, 242, 244, 249, 251], "permut": 223, "persist": [35, 172, 173, 174, 176, 192, 193], "perturb": [11, 18, 19, 251], "phi": [45, 100], "pi": [45, 100, 205, 215, 220], "pil": [241, 251], "pinv": 12, "pioneer": 34, "pipelin": [5, 177, 240, 241, 243], "pixel": [5, 89, 243, 245], "place": [91, 93, 94, 95, 96, 97, 98], "placehold": [36, 124], "plai": [170, 177], "plot": 230, "point": [4, 90, 166], "pool": [20, 23, 24, 25, 26, 27, 32, 34, 78, 79, 80, 81, 82, 83, 85, 86, 87, 109, 110, 141, 142, 143, 144, 145, 146, 147, 148, 149, 210, 212], "pool1": 42, "pool2": 42, "poorli": 13, "popul": 36, "popular": [4, 34], "portion": 251, "pose": 16, "posit": [1, 9, 14, 36, 42, 90, 99, 101, 102, 103, 144, 145, 146, 147, 148, 149, 163, 167, 188, 233, 237, 244], "possibl": [7, 251], "potenti": [16, 124, 162, 235], "power": [7, 14, 167, 168, 199, 240, 241, 251], "pp": 34, "practic": [16, 128, 131], "practition": 251, "preced": [37, 178], "predefin": [4, 34, 39, 103], "predict": [127, 128, 130, 131], "prefix": [36, 169], "prepar": [3, 167, 231, 233, 237, 241, 251], "prepend": 36, "preprint": 34, "preprocess": [3, 4, 57, 90, 177, 240, 241, 251], "present": [127, 128, 129, 131, 133, 134, 135, 136, 137, 138, 139, 145], "preserv": [58, 90, 112, 190, 191, 194, 195, 196, 197, 198, 211, 219, 224], "preset": 4, "prevent": [1, 38, 39, 40, 41, 42, 59, 62, 113, 114, 115, 116, 127, 128, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 168], "previou": [154, 163, 168], "previous": 157, "primari": [7, 170], "primarili": 42, "print": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 166, 167, 168, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249], "probabilist": 177, "probabl": [45, 51, 58, 59, 60, 61, 62, 68, 100, 105, 112, 113, 114, 115, 116, 127, 128, 131, 245, 246, 248, 251], "problem": [16, 17, 19, 47, 99, 101, 161], "proceed": 34, "process": [2, 3, 4, 14, 17, 19, 20, 32, 34, 41, 53, 54, 55, 76, 90, 103, 106, 108, 110, 118, 119, 120, 123, 133, 134, 135, 136, 137, 138, 139, 144, 146, 147, 149, 154, 170, 230, 241, 242, 243, 244, 249, 251], "produc": [20, 32, 78, 79, 80, 108, 109, 110, 141, 142, 143, 175, 177], "product": [7, 17, 19, 104, 123, 139, 151, 181, 182, 186, 187], "program": [166, 177], "progress": 156, "project": [17, 19], "projector": 16, "promin": [144, 146, 147, 148, 149], "promot": [42, 128, 131, 151], "propag": [10, 11, 13, 16, 17, 18, 19, 36, 42, 65, 67, 89, 145, 146, 162, 163, 181, 182, 183, 187, 210, 212, 230, 231, 234, 238], "properli": [0, 41, 51, 105, 151], "properti": [8, 10, 13, 14, 45, 49, 58, 100, 103, 112, 156, 161], "proport": [5, 224], "proportion": 249, "provid": [0, 1, 2, 3, 4, 5, 7, 8, 21, 23, 27, 33, 34, 36, 38, 39, 40, 41, 45, 67, 79, 80, 90, 127, 128, 129, 131, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 162, 164, 166, 168, 170, 175, 177, 178, 183, 190, 196, 210, 212, 223, 225, 233, 235, 237, 251], "pseudo": [13, 16], "purpos": [172, 176, 190, 195, 197], "python": 170, "pytorch": 225, "q": 17, "qr": 12, "quad": [16, 127, 128, 129, 130, 131, 147, 148, 149, 179, 180, 184, 185, 186, 189, 242], "quadrat": 129, "quotient": 180, "r": [17, 245, 246, 247, 248], "r_t": 161, "radam": 165, "rais": [0, 1, 2, 36, 151, 152, 188], "rand": [171, 177], "randint": [171, 177], "randn": [20, 27, 32, 151, 171, 175, 177], "random": [1, 2, 3, 244, 245, 246, 247, 248, 251], "random_integ": 177, "random_tensor": 177, "randomcrop": [250, 251], "randomgrayscal": [250, 251], "randomhorizontalflip": [250, 251], "randomli": [1, 58, 59, 60, 61, 62, 90, 112, 113, 114, 115, 116, 244, 245, 246, 247, 248, 251], "randomnoisedataset": [0, 1, 2], "randomrot": [250, 251], "randomverticalflip": 250, "rang": [0, 1, 8, 41, 50, 52, 53, 54, 69, 73, 98, 104, 106, 154, 162, 164, 173, 201, 202, 204, 243, 247, 251], "rank": 16, "rate": [152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "rather": [40, 41, 158, 234], "ratio": 249, "ravel": 229, "raw": [51, 105, 128, 170], "re": [37, 168], "readabl": [38, 39, 40, 42, 151, 170], "readi": [3, 7, 34], "real": [16, 19, 104], "rearrang": 57, "receiv": [147, 148, 149, 231], "recent": 162, "recept": 34, "reciproc": [16, 199, 209, 217], "recognit": [26, 34, 109], "rectangular": 194, "rectif": 161, "rectifi": [47, 48, 101, 102, 161], "recurr": [39, 139], "recurs": 36, "red": 245, "reduc": [20, 27, 32, 133, 134, 135, 136, 137, 138, 144, 145, 146, 147, 148, 149, 160, 163, 168, 170, 210, 211, 212, 219, 224, 245], "reduct": [19, 68, 69, 70, 72, 73, 127, 128, 129, 130, 131, 210, 212], "reevalu": 152, "refer": [4, 7, 36, 177, 191, 194, 226], "reflect": 166, "regardless": [16, 232], "region": [55, 78, 79, 80, 89, 142, 143, 231, 242, 251], "regist": [35, 36, 37, 41, 151, 169], "register_buff": 35, "register_paramet": 36, "registr": [36, 151], "registri": 169, "registry_path": 169, "regress": [4, 72, 129, 130], "regular": [16, 20, 32, 62, 113, 114, 115, 116, 154, 155, 156, 159, 160, 161, 162, 164], "relat": [168, 194, 195], "relationship": 249, "relev": [89, 154, 162, 164], "reli": 168, "reliabl": 5, "reliant": [113, 114, 115, 116], "relu": [7, 20, 27, 32, 34, 38, 39, 40, 42, 44, 46, 47, 64, 93, 94, 97, 98, 99, 101, 107, 108, 109, 110, 118, 119, 120, 122, 123, 124, 125], "relu1": 42, "relu2": 42, "relu3": 42, "remain": [5, 35, 77, 112, 113, 114, 115, 116, 163], "rememb": 177, "remov": [169, 235], "rep": 237, "repeat": [229, 230, 237], "repetit": [233, 237], "replac": [177, 245], "repres": [13, 15, 19, 23, 36, 37, 42, 65, 67, 74, 76, 77, 108, 109, 110, 123, 125, 128, 131, 139, 152, 153, 154, 160, 161, 162, 163, 164, 170, 179, 180, 186, 189, 191, 211, 222, 223, 224, 230, 242, 244, 246, 247, 248, 249], "represent": [145, 148, 152], "reproduc": [172, 173, 174, 175, 176, 177, 251], "requir": [2, 3, 4, 7, 35, 38, 42, 44, 45, 47, 48, 49, 50, 52, 65, 67, 89, 98, 124, 128, 131, 151, 166, 168, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 221, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 242, 249], "requires_grad": [35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 57, 65, 67, 89, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 151, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241], "rescal": [68, 69, 73, 127, 128, 131], "research": 151, "reset": [37, 175, 178], "reshap": [7, 67, 109, 110, 167, 170, 229, 232], "resili": 163, "resiz": [89, 240, 250, 251], "resourc": 168, "respect": [9, 10, 11, 13, 14, 15, 16, 17, 19, 23, 27, 35, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 65, 67, 89, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 204, 208, 209, 210, 211, 212, 215, 217, 219, 222, 223, 224, 230, 231, 233, 237, 245], "respons": [38, 153], "restor": 168, "restructur": 234, "result": [9, 13, 14, 16, 34, 36, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 65, 67, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 105, 151, 152, 166, 168, 172, 173, 174, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 225, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241, 244, 245, 251], "resum": 153, "retain": [37, 178, 190, 197, 210, 211, 212, 219, 224, 241], "retent": 241, "retriev": [0, 2, 38, 40, 41], "return": [0, 1, 2, 3, 5, 7, 23, 35, 36, 38, 39, 40, 41, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 169, 170, 240, 251], "reus": 241, "reusabl": [42, 151, 240], "revers": [7, 42, 223, 246, 248], "revert": 168, "rho": 155, "rho_": 161, "rho_t": 161, "right": [14, 15, 16, 18, 19, 45, 51, 100, 105, 127, 128, 129, 131, 133, 134, 135, 136, 137, 138, 139, 147, 148, 149, 242], "risk": 170, "rmsprop": 165, "rob": 34, "robust": [90, 112, 113, 114, 115, 116, 129, 151, 155, 244, 245, 247, 251], "role": [170, 177, 251], "root": [4, 5, 156, 162, 217], "rotat": [64, 88, 247, 251], "rotated_imag": 90, "rout": [147, 148, 149], "routin": 7, "row": [10, 11, 13, 18, 67, 194, 230, 239], "rprop": 165, "rule": [13, 14, 167, 179, 180, 184, 185, 186, 188, 189], "run": [7, 35, 74, 76, 118, 119, 120, 133, 134, 135, 136, 137, 138, 155, 168, 175, 177], "running_mean": [35, 74, 76, 133, 134, 135, 136, 137, 138], "running_var": [74, 76, 133, 134, 135, 136, 137, 138], "runtim": [39, 42, 151], "s_": 163, "s_d": [146, 149], "s_h": [145, 146, 149], "s_w": [145, 146, 149], "same": [10, 11, 13, 14, 18, 51, 58, 59, 60, 61, 62, 74, 76, 77, 79, 80, 90, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 124, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 163, 175, 177, 183, 193, 196, 198, 208, 210, 211, 212, 226, 228, 232, 234, 235, 236, 239, 243], "sampl": [0, 1, 2, 3, 5, 7, 23, 24, 25, 26, 78, 79, 80, 93, 94, 95, 96, 97, 98, 112, 113, 114, 115, 116, 123, 125, 128, 131, 139, 141, 142, 143, 174, 177, 242, 244, 246, 247, 248, 249], "satisfi": [9, 11, 18], "satur": [99, 251], "save": [2, 35, 37, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 169], "scalabl": [3, 151], "scalar": [10, 15, 68, 69, 70, 72, 73, 170], "scale": [11, 16, 24, 25, 26, 34, 44, 49, 51, 74, 76, 77, 97, 98, 99, 101, 103, 104, 105, 106, 112, 113, 114, 115, 116, 128, 133, 134, 135, 136, 137, 138, 139, 154, 156, 157, 158, 170, 177, 224, 249], "scenario": [40, 41, 139, 158, 159, 241, 245], "schedul": 154, "scientif": 167, "score": [51, 128], "scratch": 7, "script": 177, "seamless": [0, 1, 3, 4, 151, 177], "seamlessli": [3, 4, 8, 37, 39, 42, 151, 170, 251], "second": [11, 39, 40, 65, 123, 157, 158, 159, 160, 161, 167, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 228, 230, 248], "section": 183, "see": [7, 183], "seed": [171, 172, 173, 174, 176, 177, 251], "seen": 155, "select": [89, 147, 149, 219], "self": [0, 1, 2, 3, 7, 20, 23, 27, 32, 35, 36, 37, 38, 39, 40, 41, 49, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 123, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 169, 230, 240, 241], "selu": [46, 58, 64, 107, 112, 122], "selunetwork": 103, "sensit": [70, 129, 133, 134, 135], "sentiment": 4, "separ": [0, 53, 54, 55, 136, 137, 138], "sequenc": [14, 38, 40, 53, 190, 226, 228, 231, 233, 236, 237, 239, 240], "sequenti": [20, 23, 27, 32, 38, 39, 43, 53, 118, 119, 120, 124, 240, 251], "seri": [24, 25, 53, 108, 118, 144, 147], "serial": [35, 36, 153], "serv": [3, 27, 36, 38, 39, 40, 41, 42, 151, 163, 241], "set": [3, 4, 5, 37, 41, 53, 54, 55, 101, 102, 103, 108, 109, 110, 112, 115, 116, 123, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 152, 157, 158, 162, 172, 173, 174, 175, 176, 177, 178, 190, 192, 193, 197, 198, 204, 210, 212, 225, 241, 245, 251], "setup": [4, 7], "sever": [16, 108, 109, 110, 144, 145, 146, 147, 148, 149, 168, 240, 251], "sgd": [7, 154, 161, 165], "sgn": 15, "shape": [3, 4, 5, 7, 10, 11, 13, 14, 16, 20, 23, 27, 32, 34, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 167, 170, 172, 173, 174, 176, 177, 178, 181, 192, 193, 194, 195, 196, 197, 198, 204, 209, 210, 211, 212, 215, 217, 219, 223, 224, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 239, 242, 243, 244, 245, 246, 247, 248, 249, 251], "shapelik": 173, "share": 34, "shift": [74, 76, 77, 133, 134, 135, 136, 137, 138, 139], "shorthand": 183, "should": [23, 35, 168, 172, 173, 174, 176, 192, 193, 201, 202, 222, 231, 240], "show": [166, 169], "showcas": 7, "shown": 175, "shrink": 155, "shuffl": [1, 2, 3], "side": [18, 39, 42, 53, 54, 55, 81, 82, 83, 85, 86, 87, 108, 109, 110, 118, 119, 120, 144, 145, 146, 147, 148, 149, 168], "sigma": [16, 93, 95, 97, 104, 133, 134, 135, 136, 137, 138, 139, 223], "sigma_c": 243, "sigma_i": 16, "sigmoid": [46, 64, 93, 94, 97, 98, 107, 122, 127], "sigmoidnetwork": 104, "sign": [14, 129, 163, 199], "signal": [108, 109, 110, 118, 133, 136, 144, 145, 146, 147, 148, 149], "signific": 168, "significantli": [34, 240], "sim": [112, 113, 114, 115, 116], "similar": [7, 93, 94, 183, 209, 225, 231], "similarli": [19, 222], "simonyan": 34, "simpl": [3, 4, 7, 42, 53, 54, 55, 65, 67, 81, 82, 83, 85, 86, 87, 100, 102, 103, 104, 106, 108, 109, 110, 112, 113, 114, 115, 116, 123, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 181, 182, 187, 240], "simplebinaryclassificationmodel": 127, "simpleclassificationmodel": [128, 131], "simplegelumodel": 100, "simpleleakyrelumodel": 101, "simplemodel": [7, 125, 169], "simpleregressionmodel": 130, "simplerelumodel": 102, "simpleselumodel": 103, "simplesigmoidmodel": 104, "simpletanhmodel": 106, "simpli": [166, 222, 223, 234], "simplic": [34, 102], "simplifi": [4, 24, 42, 118, 119, 120], "simul": 251, "simultan": 90, "sin": [199, 205], "sinc": [14, 17, 38, 39, 40, 41, 53, 54, 55, 98, 166, 168, 174, 230, 251], "sine": [202, 215, 216], "singl": [0, 4, 14, 17, 19, 51, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 118, 119, 120, 128, 139, 145, 146, 147, 148, 149, 152, 170, 176, 192, 226, 235, 243, 245, 251], "singleton": 139, "singular": [10, 13, 14, 16, 18, 19], "sinh": [199, 206, 221], "size": [0, 1, 2, 3, 19, 23, 24, 25, 26, 32, 37, 39, 53, 54, 55, 57, 60, 61, 62, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 108, 109, 110, 118, 119, 120, 123, 125, 127, 128, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 169, 173, 176, 177, 178, 210, 211, 212, 219, 224, 226, 228, 235, 238, 239, 242, 244, 249, 251], "skip": 168, "slice": [65, 222], "slide": [57, 144, 146, 147, 149], "slightli": 251, "slope": [47, 99, 101], "slow": [3, 161], "small": [16, 24, 25, 26, 34, 47, 68, 69, 74, 76, 77, 101, 103, 127, 128, 129, 133, 134, 135, 136, 137, 138, 139, 145, 148, 155, 156, 157, 158, 159, 160, 161, 162, 163], "smaller": [32, 34, 39, 42, 151, 156, 157, 185, 242, 244, 249], "smallest": 212, "smooth": [45, 99, 100, 154, 162, 251], "smoother": 154, "so": [38, 39, 40, 41, 90, 151, 161, 192, 193, 240], "softmax": [46, 64, 107, 122, 128], "softmaxmodel": 105, "solut": [16, 18], "solv": [8, 9, 12, 16, 17, 19], "solver": 8, "some": [44, 59, 90, 112, 113, 114, 133, 134, 135, 136, 137, 138, 156, 157, 158, 168, 170], "sometim": 167, "sophist": [39, 42], "sourc": 177, "space": [11, 17, 19, 53, 54, 55, 57, 78, 79, 80, 108, 109, 110, 118, 119, 120, 141, 142, 143, 190, 251], "span": 4, "spars": [156, 157], "spatial": [20, 27, 32, 109, 110, 119, 133, 134, 135, 136, 137, 138, 139, 145, 146, 147, 148, 149, 230], "spatio": 110, "special": [0, 1, 7, 16, 35, 36, 37, 112, 177], "specif": [4, 7, 38, 39, 40, 41, 42, 98, 112, 113, 114, 115, 116, 136, 137, 138, 151, 152, 166, 177, 192, 210, 212, 233, 237], "specifi": [0, 1, 2, 3, 4, 5, 7, 15, 21, 23, 27, 28, 29, 30, 31, 33, 39, 51, 57, 62, 68, 69, 70, 72, 73, 77, 78, 79, 80, 89, 90, 105, 108, 109, 110, 127, 128, 129, 130, 131, 139, 141, 142, 143, 145, 146, 147, 148, 149, 152, 170, 172, 173, 174, 175, 176, 188, 190, 191, 192, 193, 194, 195, 197, 198, 204, 210, 211, 212, 219, 223, 224, 225, 226, 228, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 249, 251], "speech": 136, "speed": [154, 155, 156, 157, 158, 159, 160, 161, 162, 164], "split": [4, 226, 228, 239], "springer": 34, "sqrt": [45, 93, 94, 97, 98, 100, 133, 134, 135, 136, 137, 138, 139, 155, 156, 157, 158, 160, 161, 162, 199, 201, 202], "squar": [1, 3, 9, 10, 11, 13, 14, 16, 17, 18, 19, 70, 72, 129, 130, 155, 156, 157, 162, 199, 217], "squaredataset": [0, 1, 2, 3], "squeez": 229, "stabil": [13, 16, 68, 69, 74, 76, 77, 118, 119, 120, 127, 128, 133, 134, 135, 136, 137, 138, 139, 154, 155, 156, 157, 158, 159, 160, 161, 162, 243], "stabl": [93, 94, 97, 98, 112, 128, 154, 158, 159, 162, 163, 164], "stack": [42, 228, 229, 239, 251], "standard": [45, 47, 93, 95, 97, 99, 100, 101, 112, 163, 174, 177, 183, 240, 243, 251], "start": [1, 3, 154, 156, 163, 190, 242, 244], "state": [34, 35, 36, 37, 39, 42, 152, 166, 168, 175], "state_dict": [36, 37, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "static": 42, "statist": [16, 58, 74, 76], "std": [5, 95, 240, 243, 251], "step": [37, 57, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 190, 240, 241], "step_siz": 163, "still": 155, "stochast": [7, 154, 164], "stop": 190, "storag": [38, 40, 178], "store": [2, 4, 5, 35, 36, 37, 38, 39, 40, 41, 141, 142, 143, 168, 178, 242, 243, 244, 245, 246, 247, 248, 249], "str": [5, 27, 36, 38, 40, 42, 68, 69, 70, 72, 73, 89, 152, 169, 230], "straightforward": [164, 166, 179], "strategi": 153, "streamlin": [2, 3], "strict": [36, 152], "stride": [23, 24, 25, 26, 39, 42, 53, 54, 55, 57, 78, 79, 80, 81, 82, 83, 85, 86, 87, 108, 109, 110, 118, 119, 120, 141, 142, 143, 144, 145, 146, 147, 148, 149], "stride_height": 57, "stride_width": 57, "string": [36, 38, 40, 42, 108, 109, 110, 152], "structur": [0, 7, 17, 35, 36, 39, 151, 152, 169, 170, 194, 241], "style": [76, 136, 137, 230], "sub": [38, 39, 40, 41, 42, 151, 199, 242, 244], "sub_tensor": 178, "subclass": [1, 2, 3, 7, 36, 37, 38, 151, 152], "submodul": [36, 151], "subsequ": [39, 42, 98, 177], "subset": [113, 114], "subtract": [7, 189, 243], "suffer": 156, "suit": [93, 94, 97, 98], "suitabl": [24, 25, 26, 129, 156, 157, 172], "sum": [15, 38, 39, 40, 41, 42, 51, 68, 69, 70, 72, 73, 105, 127, 128, 129, 130, 131, 156, 179, 182, 187, 199, 222, 224, 226, 228, 230, 233, 237, 239], "sum_": [14, 51, 105, 127, 128, 130, 131, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 181, 182, 211, 219, 222, 224, 230, 233], "sum_i": [15, 187], "sum_j": 187, "sum_k": 183, "summar": [144, 145, 146], "summat": 14, "super": [7, 35, 36, 37, 38, 39, 40, 41, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 123, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 169], "support": [1, 3, 4, 7, 8, 14, 15, 16, 17, 19, 38, 39, 40, 41, 42, 89, 90, 151, 153, 160, 177, 178, 179, 180, 183, 184, 185, 186, 188, 189, 191, 194, 204, 209, 211, 215, 217, 219, 222, 223, 224, 226, 230, 234, 241, 251], "suppos": 251, "sure": [151, 251], "svd": [12, 16], "symmetr": [9, 78, 79, 80, 97, 98, 106], "syntax": [1, 183], "system": [8, 9, 16, 17, 18, 34, 166, 230], "systemat": 251, "t": [16, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 178, 183, 225, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251], "t0": 154, "t1": 225, "t2": 225, "tabular": 4, "tailor": [4, 151, 251], "take": [17, 144, 145, 146, 147, 148, 149, 168, 240], "taken": 222, "tan": 199, "tangent": [52, 106, 203, 220, 221], "tanh": [39, 42, 45, 46, 64, 93, 94, 97, 98, 100, 107, 122, 199], "tanhnetwork": 106, "target": [5, 42, 68, 69, 70, 72, 73, 78, 79, 80, 89, 127, 128, 129, 130, 131, 141, 142, 143, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 242, 244, 249], "target_tensor": [127, 128, 129, 130, 131], "target_transform": 5, "task": [4, 7, 8, 20, 21, 24, 25, 26, 34, 50, 51, 54, 65, 68, 69, 72, 73, 104, 105, 108, 109, 110, 127, 128, 129, 130, 131, 136, 137, 138, 144, 146, 147, 149, 157, 167, 177, 194, 251], "techniqu": [9, 13, 32, 74, 112, 113, 114, 115, 116, 136, 137, 138, 153, 249, 251], "tempor": [108, 110, 146, 149], "temporarili": 168, "tensor": [2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 32, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 166, 168, 170, 172, 173, 174, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251], "term": [16, 65, 118, 119, 120, 154, 158, 160, 161, 162, 164], "test": [4, 5], "test_siz": 5, "text": [4, 10, 14, 15, 38, 44, 47, 48, 49, 51, 53, 54, 55, 78, 79, 80, 81, 82, 83, 85, 86, 87, 93, 94, 97, 98, 99, 101, 102, 103, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 127, 128, 129, 130, 131, 144, 145, 146, 147, 148, 149, 154, 156, 157, 158, 159, 160, 161, 162, 163, 164, 173, 179, 180, 182, 184, 185, 186, 188, 189, 200, 204, 210, 211, 212, 214, 219, 224, 226, 228, 231, 232, 233, 234, 235, 237, 238, 239, 242, 243, 244, 246, 247, 248], "th": [65, 127, 128, 130, 131, 136, 137, 138, 184, 185, 188], "than": [0, 1, 40, 41, 44, 47, 70, 99, 101, 129, 152, 158, 204, 222, 231, 236, 242, 244, 249], "thei": [0, 7, 19, 35, 39, 41, 42, 170, 230, 234, 242, 244, 251], "them": [3, 36, 41, 57, 154, 167, 226, 236, 240, 243, 251], "therebi": [112, 145, 146, 148, 149], "theta": [154, 155, 247], "theta_": [154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "theta_t": [161, 162], "thi": [0, 1, 2, 3, 5, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 23, 35, 37, 39, 40, 41, 42, 48, 50, 51, 52, 53, 54, 55, 57, 65, 67, 78, 89, 90, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 123, 124, 125, 127, 128, 129, 131, 133, 134, 135, 136, 137, 138, 139, 141, 144, 145, 146, 147, 148, 149, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 173, 174, 175, 177, 178, 182, 183, 187, 190, 192, 195, 196, 197, 198, 204, 208, 209, 210, 211, 212, 215, 217, 219, 222, 223, 224, 225, 231, 233, 234, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251], "thing": 168, "those": [7, 24, 25, 26, 41, 98], "three": [19, 26, 55, 80, 83, 87, 110, 116, 118, 119, 120, 135, 138, 143, 146, 149], "threshold": [16, 70, 129], "through": [0, 3, 4, 7, 11, 16, 17, 19, 20, 23, 32, 38, 39, 42, 65, 67, 89, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 112, 113, 114, 115, 116, 123, 124, 125, 133, 134, 135, 136, 139, 144, 145, 146, 147, 148, 149, 174, 181, 182, 187, 230, 232, 234, 235, 238, 251], "throughout": [49, 241], "tile": 229, "time": [0, 3, 14, 24, 25, 26, 53, 101, 103, 108, 118, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 162, 164, 168, 233, 237], "to_tensor": 5, "togeth": [42, 240, 251], "too": 163, "tool": [3, 7, 151, 167, 177, 240, 251], "top": [9, 10, 11, 17, 19, 65, 67, 89, 108, 109, 110, 123, 125, 242, 244], "torch": [27, 225], "total": [0, 1, 2, 5, 21, 24, 25, 26, 28, 29, 30, 31, 33, 37, 178, 234], "totensor": [240, 251], "trace": [8, 199], "track": [7, 118, 119, 120, 133, 134, 135, 136, 137, 138, 151, 166, 168, 172, 173, 174, 176, 190, 191, 192, 193, 194, 195, 196, 197, 198, 225, 241], "track_running_stat": [118, 119, 120, 133, 134, 135, 136, 137, 138], "tradit": [155, 156, 159, 160, 161], "trail": 77, "train": [1, 2, 3, 4, 5, 7, 35, 36, 39, 41, 42, 51, 58, 59, 60, 61, 62, 74, 76, 90, 100, 101, 103, 104, 105, 106, 112, 113, 114, 115, 116, 133, 134, 135, 136, 137, 138, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 240, 243, 244, 245, 246, 247, 248, 251], "trainabl": [133, 134, 135, 136, 137, 138, 151], "transfer": [76, 136, 137], "transform": [2, 4, 5, 7, 11, 40, 65, 67, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 167, 230], "transform_pipelin": [240, 251], "transformed_imag": [240, 251], "transit": 129, "translat": [145, 148], "transpos": [7, 9, 199], "treat": [0, 35, 139, 151], "triangular": [9, 17], "true": [1, 2, 3, 4, 5, 19, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 57, 58, 59, 60, 61, 62, 65, 67, 74, 76, 89, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 151, 152, 157, 158, 162, 166, 172, 173, 174, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 241], "try": 0, "tune": 251, "tupl": [2, 3, 5, 11, 17, 19, 36, 37, 53, 54, 55, 57, 77, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 108, 109, 110, 118, 119, 120, 124, 139, 142, 143, 144, 145, 146, 147, 148, 149, 157, 158, 159, 160, 161, 163, 170, 172, 173, 174, 176, 178, 192, 195, 197, 210, 211, 212, 219, 224, 226, 228, 230, 231, 234, 235, 236, 238, 239, 242, 243, 244, 249], "twice": 231, "two": [7, 10, 11, 13, 14, 16, 17, 19, 24, 25, 26, 27, 53, 54, 55, 65, 82, 86, 109, 115, 123, 134, 137, 145, 148, 157, 158, 159, 160, 161, 163, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 222, 230], "type": [35, 36, 37, 65, 123, 178, 190, 191, 192, 193, 194, 195, 196, 197, 198, 225, 230, 241], "typeerror": [0, 1, 2, 36, 152], "typic": [8, 35, 51, 58, 90, 103, 105, 131, 133, 134, 135, 136, 137, 138, 153, 154, 162, 164, 168, 170, 238, 241, 243, 247, 249, 251], "u": [16, 19, 94, 96, 98], "u_": 159, "unchang": [35, 62, 99, 101, 102, 103, 112, 113, 114, 115, 116, 124, 232, 235], "undefin": 188, "under": 151, "underbrac": 14, "underdetermin": 16, "undergo": 251, "underli": [0, 7, 225, 228, 232, 234, 239], "understand": [7, 32, 34, 42, 251], "unexpect": [36, 39, 42, 177], "unfold": [56, 64], "unifi": 0, "uniform": [92, 94, 98, 108, 109, 110, 123, 125, 171, 172, 173, 177, 245, 246, 247, 248], "uniformli": [172, 176], "uniniti": [192, 193], "unintend": 168, "union": 27, "uniqu": [9, 16, 18, 38, 40], "unit": [20, 23, 32, 44, 45, 47, 48, 49, 93, 94, 97, 98, 99, 100, 101, 102, 103, 112], "unless": 178, "unlik": [35, 38, 39, 40, 41, 47, 99, 101, 112, 139, 155, 156, 158, 159, 160, 161, 163], "unnecessari": 168, "unpad": 231, "unseen": 251, "unsqueez": 229, "unstabl": 13, "up": [152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 247, 249], "updat": [4, 35, 41, 42, 112, 113, 114, 115, 116, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168], "upon": [34, 38, 39, 40, 41], "upper": [17, 96, 163, 176], "us": [0, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 16, 17, 19, 23, 24, 25, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 65, 67, 72, 74, 76, 79, 80, 89, 90, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 166, 167, 168, 169, 172, 173, 174, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 208, 210, 211, 212, 219, 224, 230, 231, 233, 235, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251], "usag": [3, 8, 39, 42, 152, 153, 242, 243, 244, 245, 246, 247, 248, 249], "user": [1, 2, 3, 4, 7, 38, 39, 40, 41, 151, 156, 240, 241, 251], "usual": 128, "util": [3, 7, 8, 40, 41, 151, 177], "v": [11, 16, 19, 157, 158, 160, 161, 191], "v_": [154, 157, 158, 160, 161, 162, 164], "v_stack": 239, "v_t": [161, 162], "val": 91, "valid": [108, 109, 110, 118, 119, 120, 223], "valu": [7, 10, 14, 15, 16, 19, 36, 38, 40, 42, 44, 47, 50, 51, 52, 53, 54, 55, 57, 68, 69, 70, 72, 73, 74, 76, 77, 78, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 106, 112, 113, 114, 115, 116, 118, 119, 120, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 170, 172, 173, 174, 175, 176, 177, 190, 191, 192, 193, 194, 200, 201, 202, 204, 207, 208, 209, 210, 212, 214, 215, 217, 218, 226, 231, 232, 234, 238, 243, 245, 246, 248], "valuabl": 177, "valueerror": [1, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 152], "vanish": [99, 103, 133, 134, 135], "var": 199, "vari": [39, 41, 78, 89, 141, 247], "variabl": [36, 42, 78, 79, 80, 124, 141, 142, 143, 151, 166, 168, 172, 192, 244, 247], "varianc": [49, 58, 74, 76, 93, 94, 97, 98, 103, 112, 118, 119, 120, 133, 134, 135, 136, 137, 138, 139, 157, 158, 159, 160, 161, 174, 224, 247, 251], "variant": [27, 28, 29, 30, 31, 157, 158, 159], "variat": [136, 137, 138, 244, 251], "varieti": [4, 177, 251], "variou": [23, 34, 102, 153, 177, 210, 212, 231, 241], "vdot": 187, "vector": [11, 16, 17, 18, 19, 65, 67, 123, 125, 181, 182, 183, 187], "veloc": [154, 162, 164], "veri": [16, 34, 155], "versa": 163, "versatil": [177, 230], "version": [19, 23, 24, 25, 162, 187, 245], "vertic": [236, 239, 248], "vgg": 27, "vggnet": [22, 28, 29, 30, 31, 34], "vggnet_11": 34, "vggnet_13": 34, "vggnet_16": 34, "vggnet_19": 34, "via": [3, 4], "vice": 163, "video": [55, 62, 110, 120, 138, 146, 149], "view": [23, 39, 145, 146, 147, 148, 149, 234], "vision": [34, 54, 109, 123, 251], "visual": [32, 34], "vol": 34, "volumetr": [55, 62, 110, 120, 138, 146, 149], "vstack": 229, "w": [54, 55, 57, 61, 62, 65, 67, 79, 80, 82, 83, 86, 87, 89, 90, 108, 109, 110, 119, 120, 123, 125, 134, 135, 137, 138, 142, 143, 146, 149, 242, 244], "w_": [54, 55, 79, 80, 82, 83, 86, 87, 89, 109, 110, 142, 143, 145, 146, 148, 149], "w_out": [54, 55, 82, 83, 86, 87], "wa": [112, 113, 114, 115, 116, 168], "wai": [1, 21, 33, 166, 168, 234], "want": [0, 7, 240, 242], "warn": [38, 40], "we": [3, 7, 167, 230], "weight": [34, 53, 54, 55, 65, 67, 68, 69, 73, 74, 76, 77, 89, 93, 94, 97, 98, 108, 109, 110, 112, 113, 114, 115, 116, 123, 125, 127, 128, 131, 133, 134, 135, 136, 137, 138, 139, 151, 154, 155, 156, 157, 158, 159, 160, 161, 162, 164, 172, 177], "weight1": 40, "weight2": 40, "weight_decai": [154, 155, 156, 157, 158, 159, 160, 161, 162, 164], "well": [93, 94], "were": 42, "what": 168, "when": [0, 1, 3, 7, 14, 36, 39, 41, 42, 44, 47, 53, 54, 55, 99, 124, 133, 134, 135, 136, 137, 138, 152, 155, 163, 166, 168, 169, 170, 177, 188, 240, 242], "where": [3, 4, 5, 10, 11, 13, 14, 15, 16, 17, 19, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 170, 177, 179, 180, 184, 185, 186, 188, 189, 192, 193, 204, 208, 209, 210, 211, 212, 215, 217, 219, 222, 223, 224, 226, 231, 233, 237, 240, 241, 242, 243, 244, 245, 246, 247, 248], "whether": [1, 10, 36, 37, 93, 94, 162, 166, 172, 173, 174, 176, 178, 192, 193, 210, 211, 212, 219, 224], "which": [0, 7, 10, 11, 13, 14, 15, 16, 17, 19, 28, 29, 30, 31, 34, 36, 38, 40, 42, 47, 51, 70, 90, 99, 100, 101, 105, 106, 112, 129, 131, 133, 134, 135, 136, 137, 138, 139, 157, 158, 160, 162, 166, 168, 170, 172, 173, 176, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 215, 216, 217, 219, 220, 221, 222, 224, 226, 233, 234, 236, 238, 241, 242, 244, 245, 246, 247, 248, 249, 251], "while": [7, 34, 39, 42, 58, 100, 102, 151, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 168, 234, 236, 245, 251], "who": [7, 38, 39, 40, 41], "whose": [19, 193, 196, 198, 200, 204, 208, 214], "wide": [4, 5, 8, 16, 48, 102, 108, 109, 128], "wider": [53, 54], "width": [54, 55, 57, 61, 62, 79, 80, 82, 83, 86, 87, 89, 90, 109, 110, 134, 135, 137, 138, 142, 143, 145, 146, 148, 149, 242, 244, 249], "window": [81, 82, 83, 85, 86, 87, 144, 145, 146, 147, 148, 149, 155, 210, 212], "wise": [44, 45, 47, 48, 49, 50, 51, 52, 105, 112, 113, 114, 115, 116, 118, 119, 120, 151, 167, 179, 180, 183, 184, 185, 186, 188, 189, 200, 201, 202, 203, 204, 205, 206, 207, 209, 213, 214, 215, 216, 217, 218, 220, 221, 222, 228, 239], "within": [2, 35, 38, 39, 40, 41, 42, 52, 89, 90, 98, 100, 102, 103, 104, 106, 108, 109, 110, 112, 113, 114, 124, 127, 128, 129, 130, 131, 133, 134, 135, 136, 139, 144, 145, 146, 147, 148, 149, 153, 168, 190, 204, 247, 251], "without": [7, 38, 39, 40, 65, 67, 108, 109, 110, 123, 125, 166, 169, 210, 232, 234, 238], "won": 168, "work": [1, 2, 3, 7, 9, 167, 170], "workflow": [177, 251], "workload": 7, "wrap": [3, 151, 168, 225], "wrapper": 151, "x": [7, 8, 18, 23, 27, 35, 36, 38, 39, 40, 41, 42, 51, 65, 67, 90, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 172, 173, 174, 176, 192, 193, 208, 230, 242, 243, 244, 245, 246, 247, 248, 249], "x1": 123, "x2": 123, "x_": [128, 131, 230], "x_c": [128, 131], "x_i": 127, "x_k": 128, "xavier": [93, 94, 97, 98], "xavier_norm": 92, "xavier_uniform": 92, "xy": 230, "x\u2081": 123, "x\u2082": 123, "y": [38, 39, 40, 41, 42, 90, 99, 100, 101, 102, 103, 104, 106, 108, 109, 110, 112, 113, 114, 115, 116, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 172, 173, 174, 176, 192, 193, 230, 245], "y_": [128, 131, 230], "y_c": [128, 131], "y_i": 127, "yann": [5, 34], "yet": [7, 167], "yield": [0, 1, 36, 168], "you": [0, 39, 41, 42, 151, 153, 166, 168, 177, 192, 193, 194, 198, 223, 225, 240, 242, 251], "your": [151, 153, 166, 168, 177, 251], "z": [193, 197, 198], "zeiler": [32, 34], "zero": [14, 16, 17, 44, 47, 53, 54, 55, 58, 59, 60, 61, 62, 81, 82, 83, 85, 86, 87, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 108, 109, 110, 112, 113, 114, 115, 116, 139, 144, 145, 146, 147, 148, 149, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 192, 193, 194, 198, 199, 204, 214, 231], "zero_grad": [37, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 178], "zeros_lik": [193, 199], "zfnet": [22, 34], "zisserman": 34, "\u03c3\u1d62": 16}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "datasets.MNIST", "Image Datasets", "Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "models.alexnet", "ConvNets", "LeNet", "models.lenet_1", "models.lenet_4", "models.lenet_5", "VGGNet", "models.vggnet_11", "models.vggnet_13", "models.vggnet_16", "models.vggnet_19", "ZFNet", "models.zfnet", "lucid.models", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.LeakyReLU", "nn.ReLU", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Tanh", "Activation Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "Fused Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "lucid.nn", "optim.Optimizer", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.types", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.meshgrid", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.unsqueeze", "lucid.vstack", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": 167, "1d": 167, "2": 167, "2d": 167, "3": 167, "It": [166, 168], "ab": 200, "activ": [46, 64, 107, 122], "ad": 167, "adadelta": 155, "adagrad": 156, "adam": 157, "adamax": 159, "adamw": 158, "adaptive_avg_pool1d": 78, "adaptive_avg_pool2d": 79, "adaptive_avg_pool3d": 80, "adaptiveavgpool1d": 141, "adaptiveavgpool2d": 142, "adaptiveavgpool3d": 143, "add": 179, "addit": 16, "admonit": 170, "advanc": [57, 251], "alexnet": [20, 21], "algebra": 12, "algorithm": [154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "alias": 170, "align": 167, "alpha_dropout": 58, "alphadropout": 112, "also": 153, "anoth": 225, "arang": 190, "arcco": 201, "architectur": [20, 24, 25, 26, 32], "arcsin": 202, "arctan": 203, "asgd": 154, "attribut": [5, 20, 23, 27, 32, 35, 37, 38, 39, 40, 41, 42, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 178, 242, 243, 244, 245, 246, 247, 248, 249], "avg_pool1d": 81, "avg_pool2d": 82, "avg_pool3d": 83, "avgpool1d": 144, "avgpool2d": 145, "avgpool3d": 146, "axi": 167, "backpropag": 178, "backward": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 65, 67, 89, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239], "batch_norm": 74, "batchnorm1d": 133, "batchnorm2d": 134, "batchnorm3d": 135, "bceloss": 127, "behavior": [78, 79, 80, 141, 142, 143], "benefit": 168, "bilinear": [65, 123], "binari": 199, "binary_cross_entropi": 68, "broadcast": 167, "buffer": 35, "calcul": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 57, 65, 67, 78, 79, 80, 89, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249], "captur": 169, "case": 170, "centercrop": 242, "choleski": 9, "class": [0, 1, 2, 5, 20, 23, 27, 32, 35, 36, 37, 38, 39, 40, 41, 42, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 178, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249], "clip": 204, "co": 205, "combin": 0, "compon": [3, 7, 151], "compos": 240, "concatdataset": [0, 1], "concaten": 226, "conclus": [3, 7, 151, 166, 167, 168, 177, 241, 251], "constant": 91, "contain": 43, "conv": 34, "conv1d": [53, 108], "conv2d": [54, 109], "conv3d": [55, 110], "convbnrelu1d": 118, "convbnrelu2d": 119, "convbnrelu3d": 120, "convnet": 22, "convolut": [56, 64, 111, 122], "core": 7, "cosh": 206, "creat": [37, 178, 225], "cross_entropi": 69, "crossentropyloss": 128, "cube": 207, "custom": [1, 2, 3, 36, 152, 153, 251], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 5, 6], "defin": [2, 36, 152, 153], "definit": 170, "descript": 169, "det": 10, "detail": 16, "diag": 191, "dilat": 57, "div": 180, "dot": 181, "dropout": [59, 63, 64, 113, 117, 122], "dropout1d": [60, 114], "dropout2d": [61, 115], "dropout3d": [62, 116], "eig": 11, "elu": [44, 99], "empti": 192, "empty_lik": 193, "exampl": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 251], "exp": 208, "ey": 194, "featur": [4, 7, 8, 153, 177, 251], "flatten": 227, "forward": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 57, 65, 67, 78, 79, 80, 89, 93, 94, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 242, 243, 244, 245, 246, 247, 248, 249], "from": 225, "function": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 24, 25, 26, 28, 29, 30, 31, 33, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 166, 168, 169, 172, 173, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239], "fuse": [121, 122], "futur": 4, "gelu": [45, 100], "gener": [171, 199], "get": 153, "grad_en": 166, "gradient": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 65, 67, 89, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239], "guidelin": 170, "how": [166, 168], "hstack": 228, "huber_loss": 70, "huberloss": 129, "ident": 124, "imag": [6, 250], "index": 178, "init": [91, 93, 94, 95, 96, 97, 98], "initi": 92, "inner": 182, "input": 225, "inspect": [153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "instance_norm": 76, "instancenorm1d": 136, "instancenorm2d": 137, "instancenorm3d": 138, "integr": [3, 151, 177, 251], "interpol": 89, "inv": 13, "iter": 178, "kaiming_norm": 93, "kaiming_uniform": 94, "kei": [3, 4, 7, 151, 153, 177, 251], "layer": [107, 111, 117, 121, 122, 126, 132, 140, 150], "layer_norm": 77, "layernorm": 139, "leaky_relu": 47, "leakyrelu": 101, "learn": 177, "lenet": 23, "lenet_1": 24, "lenet_4": 25, "lenet_5": 26, "limit": 7, "linalg": [8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "linear": [12, 64, 66, 67, 122, 125, 126], "list": 225, "load": 1, "log": 209, "loss": [64, 71, 122, 132], "lucid": [3, 4, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 34, 64, 151, 153, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 251], "matmul": 183, "matrix": 183, "matrix_pow": 14, "max": 210, "max_pool1d": 85, "max_pool2d": 86, "max_pool3d": 87, "maximum": 184, "maxpool1d": 147, "maxpool2d": 148, "maxpool3d": 149, "mean": 211, "meshgrid": 230, "metadata": 169, "method": [0, 1, 2, 5, 23, 27, 36, 37, 152, 178], "min": 212, "minimum": 185, "mnist": 5, "model": [21, 24, 25, 26, 28, 29, 30, 31, 33, 34, 151], "modul": [36, 122], "moduledict": 38, "modulelist": 39, "more": 177, "mse_loss": 72, "mseloss": 130, "mul": 186, "multipl": [0, 183], "nadam": 160, "new": 167, "newaxi": 167, "nll_loss": 73, "nllloss": 131, "nn": [35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151], "no_grad": 168, "norm": 15, "normal": [64, 75, 95, 122, 140, 243], "note": 7, "number": 171, "ones": 195, "ones_lik": 196, "oper": [12, 183, 199], "optim": [152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165], "organ": 151, "outer": 187, "overview": [3, 4, 7, 23, 24, 25, 26, 151, 153, 177, 251], "pad": 231, "paramet": [1, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 27, 28, 29, 30, 31, 32, 33, 35, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 168, 169, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249], "parameterdict": 40, "parameterlist": 41, "perform": 178, "pinv": 16, "pipelin": [3, 251], "pitfal": [166, 168], "pool": [64, 84, 122, 150], "potenti": [166, 168], "power": 188, "properti": [37, 178], "qr": 17, "radam": 161, "rais": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "rand": 172, "randint": 173, "randn": 174, "random": [171, 172, 173, 174, 175, 176, 177], "randomcrop": 244, "randomgrayscal": 245, "randomhorizontalflip": 246, "randomrot": 247, "randomverticalflip": 248, "ravel": 232, "reciproc": 213, "refer": [5, 153], "register_model": 169, "relu": [48, 102], "repeat": 233, "reshap": 234, "resiz": 249, "return": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 24, 25, 26, 28, 29, 30, 31, 33, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 166, 168, 172, 173, 174, 175, 176, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239], "rmsprop": 162, "rotat": 90, "rprop": 163, "rule": 183, "see": 153, "seed": 175, "selu": [49, 103], "sequenti": 42, "sgd": 164, "sigmoid": [50, 104], "sign": 214, "signatur": [0, 1, 2, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 44, 45, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 58, 59, 60, 61, 62, 65, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 172, 173, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249], "sin": 215, "sinh": 216, "slice": 178, "softmax": [51, 105], "solv": 18, "sqrt": 217, "squar": 218, "squeez": 235, "stack": 236, "start": 153, "state": [153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164], "sub": 189, "sum": 219, "svd": 19, "tan": 220, "tanh": [52, 106, 221], "tensor": [167, 178, 199, 225, 229], "through": 178, "tile": 237, "totensor": 241, "trace": 222, "track": 178, "transform": [240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251], "transpos": 223, "type": 170, "unari": 199, "unfold": 57, "uniform": [96, 176], "unsqueez": 238, "us": [1, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 170, 225], "usag": [4, 7, 23, 24, 25, 26, 35, 90, 166, 167, 168, 170, 230, 240, 241, 251], "util": [64, 88], "utilit": 229, "var": 224, "vggnet": 27, "vggnet_11": 28, "vggnet_13": 29, "vggnet_16": 30, "vggnet_19": 31, "vstack": 239, "weight": 92, "why": 170, "work": [4, 166, 168], "xavier_norm": 97, "xavier_uniform": 98, "zero": 197, "zeros_lik": 198, "zfnet": [32, 33]}})