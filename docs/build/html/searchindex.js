Search.setIndex({"alltitles": {"@ Operator": [[130, "operator"]], "Activation Functions": [[24, null]], "Activation Layers": [[71, null], [82, null]], "Additional Details": [[9, "additional-details"]], "Admonitions and Usage Guidelines": [[118, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[35, "advanced-example-with-dilation"]], "Algorithm": [[111, "algorithm"], [112, "algorithm"], [113, "algorithm"]], "Attributes": [[13, "attributes"], [15, "attributes"], [16, "attributes"], [17, "attributes"], [18, "attributes"], [19, "attributes"], [20, "attributes"], [63, "attributes"], [64, "attributes"], [65, "attributes"], [66, "attributes"], [67, "attributes"], [68, "attributes"], [69, "attributes"], [70, "attributes"], [72, "attributes"], [73, "attributes"], [74, "attributes"], [76, "attributes"], [77, "attributes"], [78, "attributes"], [79, "attributes"], [80, "attributes"], [83, "attributes"], [84, "attributes"], [85, "attributes"], [87, "attributes"], [88, "attributes"], [89, "attributes"], [90, "attributes"], [91, "attributes"], [93, "attributes"], [94, "attributes"], [95, "attributes"], [96, "attributes"], [97, "attributes"], [98, "attributes"], [99, "attributes"], [101, "attributes"], [102, "attributes"], [103, "attributes"], [104, "attributes"], [105, "attributes"], [106, "attributes"], [125, "attributes"]], "Backward Gradient Calculation": [[2, "backward-gradient-calculation"], [3, "backward-gradient-calculation"], [4, "backward-gradient-calculation"], [6, "backward-gradient-calculation"], [7, "backward-gradient-calculation"], [8, "backward-gradient-calculation"], [9, "backward-gradient-calculation"], [10, "backward-gradient-calculation"], [11, "backward-gradient-calculation"], [12, "backward-gradient-calculation"], [16, "backward-gradient-calculation"], [17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [20, "backward-gradient-calculation"], [22, "backward-gradient-calculation"], [23, "backward-gradient-calculation"], [25, "backward-gradient-calculation"], [26, "backward-gradient-calculation"], [27, "backward-gradient-calculation"], [28, "backward-gradient-calculation"], [29, "backward-gradient-calculation"], [30, "backward-gradient-calculation"], [43, "backward-gradient-calculation"], [45, "backward-gradient-calculation"], [63, "backward-gradient-calculation"], [64, "backward-gradient-calculation"], [65, "backward-gradient-calculation"], [66, "backward-gradient-calculation"], [67, "backward-gradient-calculation"], [68, "backward-gradient-calculation"], [69, "backward-gradient-calculation"], [70, "backward-gradient-calculation"], [72, "backward-gradient-calculation"], [73, "backward-gradient-calculation"], [74, "backward-gradient-calculation"], [76, "backward-gradient-calculation"], [77, "backward-gradient-calculation"], [78, "backward-gradient-calculation"], [79, "backward-gradient-calculation"], [80, "backward-gradient-calculation"], [83, "backward-gradient-calculation"], [84, "backward-gradient-calculation"], [85, "backward-gradient-calculation"], [87, "backward-gradient-calculation"], [88, "backward-gradient-calculation"], [89, "backward-gradient-calculation"], [90, "backward-gradient-calculation"], [91, "backward-gradient-calculation"], [93, "backward-gradient-calculation"], [94, "backward-gradient-calculation"], [95, "backward-gradient-calculation"], [96, "backward-gradient-calculation"], [97, "backward-gradient-calculation"], [98, "backward-gradient-calculation"], [99, "backward-gradient-calculation"], [101, "backward-gradient-calculation"], [102, "backward-gradient-calculation"], [103, "backward-gradient-calculation"], [104, "backward-gradient-calculation"], [105, "backward-gradient-calculation"], [106, "backward-gradient-calculation"], [126, "backward-gradient-calculation"], [127, "backward-gradient-calculation"], [128, "backward-gradient-calculation"], [129, "backward-gradient-calculation"], [130, "backward-gradient-calculation"], [131, "backward-gradient-calculation"], [132, "backward-gradient-calculation"], [133, "backward-gradient-calculation"], [134, "backward-gradient-calculation"], [135, "backward-gradient-calculation"], [136, "backward-gradient-calculation"], [145, "backward-gradient-calculation"], [146, "backward-gradient-calculation"], [147, "backward-gradient-calculation"], [148, "backward-gradient-calculation"], [149, "backward-gradient-calculation"], [150, "backward-gradient-calculation"], [151, "backward-gradient-calculation"], [152, "backward-gradient-calculation"], [153, "backward-gradient-calculation"], [154, "backward-gradient-calculation"], [155, "backward-gradient-calculation"], [156, "backward-gradient-calculation"], [157, "backward-gradient-calculation"], [158, "backward-gradient-calculation"], [159, "backward-gradient-calculation"], [160, "backward-gradient-calculation"], [161, "backward-gradient-calculation"], [162, "backward-gradient-calculation"], [163, "backward-gradient-calculation"], [164, "backward-gradient-calculation"], [165, "backward-gradient-calculation"], [166, "backward-gradient-calculation"], [167, "backward-gradient-calculation"], [168, "backward-gradient-calculation"], [169, "backward-gradient-calculation"], [171, "backward-gradient-calculation"], [173, "backward-gradient-calculation"], [175, "backward-gradient-calculation"], [176, "backward-gradient-calculation"], [177, "backward-gradient-calculation"], [178, "backward-gradient-calculation"], [179, "backward-gradient-calculation"], [180, "backward-gradient-calculation"], [181, "backward-gradient-calculation"], [182, "backward-gradient-calculation"], [183, "backward-gradient-calculation"]], "Benefits": [[117, "benefits"]], "Binary Functions": [[144, null]], "Class Signature": [[13, "class-signature"], [14, "class-signature"], [15, "class-signature"], [16, "class-signature"], [17, "class-signature"], [18, "class-signature"], [19, "class-signature"], [20, "class-signature"], [63, "class-signature"], [64, "class-signature"], [65, "class-signature"], [66, "class-signature"], [67, "class-signature"], [68, "class-signature"], [69, "class-signature"], [70, "class-signature"], [72, "class-signature"], [73, "class-signature"], [74, "class-signature"], [76, "class-signature"], [77, "class-signature"], [78, "class-signature"], [79, "class-signature"], [80, "class-signature"], [83, "class-signature"], [84, "class-signature"], [85, "class-signature"], [87, "class-signature"], [88, "class-signature"], [89, "class-signature"], [90, "class-signature"], [91, "class-signature"], [93, "class-signature"], [94, "class-signature"], [95, "class-signature"], [96, "class-signature"], [97, "class-signature"], [98, "class-signature"], [99, "class-signature"], [101, "class-signature"], [102, "class-signature"], [103, "class-signature"], [104, "class-signature"], [105, "class-signature"], [106, "class-signature"], [109, "class-signature"], [111, "class-signature"], [112, "class-signature"], [113, "class-signature"], [125, "class-signature"]], "Conclusion": [[0, "conclusion"], [108, "conclusion"], [115, "conclusion"], [116, "conclusion"], [117, "conclusion"], [124, "conclusion"]], "Containers": [[21, null]], "Convolution Functions": [[34, null], [42, null]], "Convolution Layers": [[75, null], [82, null]], "Core Components": [[0, "core-components"]], "Create a Tensor from a list": [[170, null]], "Creating a Parameter": [[15, null]], "Creating a tensor with gradient tracking": [[125, null]], "Defining a Custom Optimizer": [[110, null]], "Defining a custom module": [[14, null]], "Defining a custom optimizer": [[109, null]], "Dropout Functions": [[41, null], [42, null]], "Dropout Layers": [[81, null], [82, null]], "Example": [[2, "example"], [3, "example"], [4, "example"], [6, "example"], [7, "example"], [8, "example"], [9, "example"], [10, "example"], [11, "example"], [12, "example"], [35, "example"], [108, null], [108, null], [108, null], [115, "example"], [117, "example"], [120, "example"], [121, "example"], [122, "example"], [123, "example"], [124, null], [124, null], [124, null], [137, "example"], [138, "example"], [139, "example"], [140, "example"], [141, "example"], [142, "example"], [143, "example"], [145, "example"], [146, "example"], [147, "example"], [148, "example"], [149, "example"], [150, "example"], [151, "example"], [152, "example"], [154, "example"], [156, "example"], [158, "example"], [159, "example"], [160, "example"], [161, "example"], [162, "example"], [163, "example"], [164, "example"], [165, "example"], [166, "example"], [167, "example"], [168, "example"], [169, "example"], [171, "example"], [173, "example"], [176, "example"], [178, "example"], [179, "example"], [180, "example"], [182, "example"], [183, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[116, null]], "Example 2: Adding a new axis to a 2D tensor": [[116, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[116, null]], "Example Usage": [[0, "example-usage"]], "Example Use Cases": [[118, "example-use-cases"]], "Examples": [[1, "examples"], [13, "examples"], [14, "examples"], [15, "examples"], [16, "examples"], [17, "examples"], [18, "examples"], [19, "examples"], [20, "examples"], [22, "examples"], [23, "examples"], [25, "examples"], [26, "examples"], [27, "examples"], [28, "examples"], [29, "examples"], [30, "examples"], [31, "examples"], [32, "examples"], [33, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [40, "examples"], [43, "examples"], [45, "examples"], [46, "examples"], [47, "examples"], [48, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [60, "examples"], [61, "examples"], [62, "examples"], [63, "examples"], [64, "examples"], [65, "examples"], [66, "examples"], [67, "examples"], [68, "examples"], [69, "examples"], [70, "examples"], [72, "examples"], [73, "examples"], [74, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [79, "examples"], [80, "examples"], [83, "examples"], [84, "examples"], [85, "examples"], [87, "examples"], [88, "examples"], [89, "examples"], [90, "examples"], [91, "examples"], [93, "examples"], [94, "examples"], [95, "examples"], [96, "examples"], [97, "examples"], [98, "examples"], [99, "examples"], [101, "examples"], [102, "examples"], [103, "examples"], [104, "examples"], [105, "examples"], [106, "examples"], [109, "examples"], [110, "examples"], [111, "examples"], [112, "examples"], [113, "examples"], [125, "examples"], [126, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [131, "examples"], [132, "examples"], [133, "examples"], [134, "examples"], [135, "examples"], [136, "examples"], [153, "examples"], [155, "examples"], [157, "examples"], [170, "examples"], [172, "examples"], [175, "examples"], [177, "examples"], [181, "examples"]], "Features": [[1, "features"]], "Forward Calculation": [[2, "forward-calculation"], [3, "forward-calculation"], [4, "forward-calculation"], [6, "forward-calculation"], [7, "forward-calculation"], [8, "forward-calculation"], [9, "forward-calculation"], [10, "forward-calculation"], [11, "forward-calculation"], [12, "forward-calculation"], [16, "forward-calculation"], [17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [20, "forward-calculation"], [22, "forward-calculation"], [23, "forward-calculation"], [25, "forward-calculation"], [26, "forward-calculation"], [27, "forward-calculation"], [28, "forward-calculation"], [29, "forward-calculation"], [30, "forward-calculation"], [35, "forward-calculation"], [43, "forward-calculation"], [45, "forward-calculation"], [63, "forward-calculation"], [64, "forward-calculation"], [65, "forward-calculation"], [66, "forward-calculation"], [67, "forward-calculation"], [68, "forward-calculation"], [69, "forward-calculation"], [70, "forward-calculation"], [72, "forward-calculation"], [73, "forward-calculation"], [74, "forward-calculation"], [76, "forward-calculation"], [77, "forward-calculation"], [78, "forward-calculation"], [79, "forward-calculation"], [80, "forward-calculation"], [83, "forward-calculation"], [84, "forward-calculation"], [85, "forward-calculation"], [87, "forward-calculation"], [88, "forward-calculation"], [89, "forward-calculation"], [90, "forward-calculation"], [91, "forward-calculation"], [93, "forward-calculation"], [94, "forward-calculation"], [95, "forward-calculation"], [96, "forward-calculation"], [97, "forward-calculation"], [98, "forward-calculation"], [99, "forward-calculation"], [101, "forward-calculation"], [102, "forward-calculation"], [103, "forward-calculation"], [104, "forward-calculation"], [105, "forward-calculation"], [106, "forward-calculation"], [126, "forward-calculation"], [127, "forward-calculation"], [128, "forward-calculation"], [129, "forward-calculation"], [130, "forward-calculation"], [131, "forward-calculation"], [132, "forward-calculation"], [133, "forward-calculation"], [134, "forward-calculation"], [135, "forward-calculation"], [136, "forward-calculation"], [145, "forward-calculation"], [146, "forward-calculation"], [147, "forward-calculation"], [148, "forward-calculation"], [149, "forward-calculation"], [150, "forward-calculation"], [151, "forward-calculation"], [152, "forward-calculation"], [153, "forward-calculation"], [154, "forward-calculation"], [155, "forward-calculation"], [156, "forward-calculation"], [157, "forward-calculation"], [158, "forward-calculation"], [159, "forward-calculation"], [160, "forward-calculation"], [161, "forward-calculation"], [162, "forward-calculation"], [163, "forward-calculation"], [164, "forward-calculation"], [165, "forward-calculation"], [166, "forward-calculation"], [167, "forward-calculation"], [168, "forward-calculation"], [169, "forward-calculation"], [171, "forward-calculation"], [173, "forward-calculation"], [175, "forward-calculation"], [176, "forward-calculation"], [177, "forward-calculation"], [178, "forward-calculation"], [179, "forward-calculation"], [180, "forward-calculation"], [181, "forward-calculation"], [182, "forward-calculation"], [183, "forward-calculation"]], "Function Signature": [[2, "function-signature"], [3, "function-signature"], [4, "function-signature"], [6, "function-signature"], [7, "function-signature"], [8, "function-signature"], [9, "function-signature"], [10, "function-signature"], [11, "function-signature"], [12, "function-signature"], [22, "function-signature"], [23, "function-signature"], [25, "function-signature"], [26, "function-signature"], [27, "function-signature"], [28, "function-signature"], [29, "function-signature"], [30, "function-signature"], [31, "function-signature"], [32, "function-signature"], [33, "function-signature"], [35, "function-signature"], [36, "function-signature"], [37, "function-signature"], [38, "function-signature"], [39, "function-signature"], [40, "function-signature"], [43, "function-signature"], [45, "function-signature"], [46, "function-signature"], [47, "function-signature"], [48, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [54, "function-signature"], [55, "function-signature"], [56, "function-signature"], [57, "function-signature"], [58, "function-signature"], [60, "function-signature"], [61, "function-signature"], [62, "function-signature"], [115, "function-signature"], [117, "function-signature"], [120, "function-signature"], [121, "function-signature"], [122, "function-signature"], [123, "function-signature"], [126, "function-signature"], [127, "function-signature"], [128, "function-signature"], [129, "function-signature"], [130, "function-signature"], [131, "function-signature"], [132, "function-signature"], [133, "function-signature"], [134, "function-signature"], [135, "function-signature"], [136, "function-signature"], [137, "function-signature"], [138, "function-signature"], [139, "function-signature"], [140, "function-signature"], [141, "function-signature"], [142, "function-signature"], [143, "function-signature"], [145, "function-signature"], [146, "function-signature"], [147, "function-signature"], [148, "function-signature"], [149, "function-signature"], [150, "function-signature"], [151, "function-signature"], [152, "function-signature"], [153, "function-signature"], [154, "function-signature"], [155, "function-signature"], [156, "function-signature"], [157, "function-signature"], [158, "function-signature"], [159, "function-signature"], [160, "function-signature"], [161, "function-signature"], [162, "function-signature"], [163, "function-signature"], [164, "function-signature"], [165, "function-signature"], [166, "function-signature"], [167, "function-signature"], [168, "function-signature"], [169, "function-signature"], [170, "function-signature"], [171, "function-signature"], [172, "function-signature"], [173, "function-signature"], [175, "function-signature"], [176, "function-signature"], [177, "function-signature"], [178, "function-signature"], [179, "function-signature"], [180, "function-signature"], [181, "function-signature"], [182, "function-signature"], [183, "function-signature"]], "Getting Started": [[110, "getting-started"]], "How It Works": [[115, "how-it-works"], [117, "how-it-works"]], "Indexing and slicing": [[125, null]], "Inspecting Optimizer State": [[110, null], [111, null], [112, null], [113, null]], "Integration with lucid": [[108, "integration-with-lucid"], [124, "integration-with-lucid"]], "Iterating through a tensor": [[125, null]], "Key Components": [[108, "key-components"]], "Key Features": [[0, "key-features"], [110, "key-features"], [124, "key-features"]], "Learn More": [[124, null]], "Limitations": [[0, "limitations"]], "Linear Algebra Operations": [[5, null]], "Linear Functions": [[42, null], [44, null]], "Linear Layers": [[82, null], [86, null]], "Loss Functions": [[42, null], [49, null]], "Loss Layers": [[82, null], [92, null]], "Lucid": [[0, null]], "Matrix Multiplication Rules": [[130, "matrix-multiplication-rules"]], "Methods": [[14, "methods"], [15, "methods"], [109, "methods"], [125, "methods"]], "Modules": [[82, null]], "Normalization Functions": [[42, null], [53, null]], "Normalization Layers": [[82, null], [100, null]], "Notes": [[0, "notes"]], "Optimizers": [[114, null]], "Organizing Models": [[108, "organizing-models"]], "Overview": [[0, "overview"], [108, "overview"], [110, "overview"], [124, "overview"]], "Parameters": [[2, "parameters"], [3, "parameters"], [4, "parameters"], [6, "parameters"], [7, "parameters"], [8, "parameters"], [9, "parameters"], [10, "parameters"], [11, "parameters"], [12, "parameters"], [13, "parameters"], [15, "parameters"], [16, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [20, "parameters"], [22, "parameters"], [23, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [43, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [83, "parameters"], [84, "parameters"], [85, "parameters"], [87, "parameters"], [88, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [104, "parameters"], [105, "parameters"], [106, "parameters"], [111, "parameters"], [112, "parameters"], [113, "parameters"], [117, "parameters"], [120, "parameters"], [121, "parameters"], [122, "parameters"], [123, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [154, "parameters"], [155, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"], [159, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [163, "parameters"], [164, "parameters"], [165, "parameters"], [166, "parameters"], [167, "parameters"], [168, "parameters"], [169, "parameters"], [170, "parameters"], [171, "parameters"], [172, "parameters"], [173, "parameters"], [175, "parameters"], [176, "parameters"], [177, "parameters"], [178, "parameters"], [179, "parameters"], [180, "parameters"], [181, "parameters"], [182, "parameters"], [183, "parameters"]], "Performing backpropagation": [[125, null]], "Pooling Functions": [[42, null], [59, null]], "Pooling Layers": [[82, null], [107, null]], "Potential Pitfalls": [[115, "potential-pitfalls"], [117, "potential-pitfalls"]], "Properties": [[15, "properties"], [125, "properties"]], "Raises": [[2, "raises"], [3, "raises"], [4, "raises"], [6, "raises"], [7, "raises"], [8, "raises"], [9, "raises"], [10, "raises"], [11, "raises"], [12, "raises"]], "Random Number Generations": [[119, null]], "References": [[110, "references"]], "Returns": [[2, "returns"], [3, "returns"], [4, "returns"], [6, "returns"], [7, "returns"], [8, "returns"], [9, "returns"], [10, "returns"], [11, "returns"], [12, "returns"], [22, "returns"], [23, "returns"], [25, "returns"], [26, "returns"], [27, "returns"], [28, "returns"], [29, "returns"], [30, "returns"], [31, "returns"], [32, "returns"], [33, "returns"], [35, "returns"], [36, "returns"], [37, "returns"], [38, "returns"], [39, "returns"], [40, "returns"], [43, "returns"], [45, "returns"], [46, "returns"], [47, "returns"], [48, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [54, "returns"], [55, "returns"], [56, "returns"], [57, "returns"], [58, "returns"], [60, "returns"], [61, "returns"], [62, "returns"], [115, "returns"], [117, "returns"], [120, "returns"], [121, "returns"], [122, "returns"], [123, "returns"], [126, "returns"], [127, "returns"], [128, "returns"], [129, "returns"], [130, "returns"], [131, "returns"], [132, "returns"], [133, "returns"], [134, "returns"], [135, "returns"], [136, "returns"], [137, "returns"], [138, "returns"], [139, "returns"], [140, "returns"], [141, "returns"], [142, "returns"], [143, "returns"], [145, "returns"], [146, "returns"], [147, "returns"], [148, "returns"], [149, "returns"], [150, "returns"], [151, "returns"], [152, "returns"], [153, "returns"], [154, "returns"], [155, "returns"], [156, "returns"], [157, "returns"], [158, "returns"], [159, "returns"], [160, "returns"], [161, "returns"], [162, "returns"], [163, "returns"], [164, "returns"], [165, "returns"], [166, "returns"], [167, "returns"], [168, "returns"], [169, "returns"], [170, "returns"], [171, "returns"], [172, "returns"], [173, "returns"], [175, "returns"], [176, "returns"], [177, "returns"], [178, "returns"], [179, "returns"], [180, "returns"], [181, "returns"], [182, "returns"], [183, "returns"]], "SGD Series": [[114, null]], "See Also": [[110, "see-also"]], "Tensor Generating Functions": [[144, null]], "Tensor Operations": [[144, null]], "Tensor Utilites": [[174, null]], "Type Definitions": [[118, "type-definitions"]], "Unary Functions": [[144, null]], "Usage": [[13, "usage"], [115, "usage"], [116, "usage"], [117, "usage"]], "Use another Tensor as input": [[170, null]], "Using the ASGD Optimizer": [[111, null]], "Using the RMSprop Optimizer": [[112, null]], "Using the SGD Optimizer": [[113, null]], "Why Use Type Aliases?": [[118, null]], "activation Functions": [[42, null]], "lucid.Tensor": [[125, null]], "lucid.abs": [[145, null]], "lucid.add": [[126, null]], "lucid.arange": [[137, null]], "lucid.arccos": [[146, null]], "lucid.arcsin": [[147, null]], "lucid.arctan": [[148, null]], "lucid.clip": [[149, null]], "lucid.concatenate": [[171, null]], "lucid.cos": [[150, null]], "lucid.cosh": [[151, null]], "lucid.cube": [[152, null]], "lucid.diag": [[138, null]], "lucid.div": [[127, null]], "lucid.dot": [[128, null]], "lucid.exp": [[153, null]], "lucid.eye": [[139, null]], "lucid.flatten": [[172, null]], "lucid.grad_enabled": [[115, null]], "lucid.hstack": [[173, null]], "lucid.inner": [[129, null]], "lucid.linalg": [[1, null]], "lucid.linalg.cholesky": [[2, null]], "lucid.linalg.det": [[3, null]], "lucid.linalg.eig": [[4, null]], "lucid.linalg.inv": [[6, null]], "lucid.linalg.matrix_power": [[7, null]], "lucid.linalg.norm": [[8, null]], "lucid.linalg.pinv": [[9, null]], "lucid.linalg.qr": [[10, null]], "lucid.linalg.solve": [[11, null]], "lucid.linalg.svd": [[12, null]], "lucid.log": [[154, null]], "lucid.matmul": [[130, null]], "lucid.max": [[155, null]], "lucid.maximum": [[131, null]], "lucid.mean": [[156, null]], "lucid.min": [[157, null]], "lucid.minimum": [[132, null]], "lucid.mul": [[133, null]], "lucid.newaxis": [[116, null]], "lucid.nn": [[108, null]], "lucid.nn.functional": [[42, null]], "lucid.no_grad": [[117, null]], "lucid.ones": [[140, null]], "lucid.ones_like": [[141, null]], "lucid.optim": [[110, null]], "lucid.outer": [[134, null]], "lucid.pad": [[175, null]], "lucid.power": [[135, null]], "lucid.random": [[124, null]], "lucid.random.rand": [[120, null]], "lucid.random.randint": [[121, null]], "lucid.random.randn": [[122, null]], "lucid.random.seed": [[123, null]], "lucid.ravel": [[176, null]], "lucid.reciprocal": [[158, null]], "lucid.repeat": [[177, null]], "lucid.reshape": [[178, null]], "lucid.sign": [[159, null]], "lucid.sin": [[160, null]], "lucid.sinh": [[161, null]], "lucid.sqrt": [[162, null]], "lucid.square": [[163, null]], "lucid.squeeze": [[179, null]], "lucid.stack": [[180, null]], "lucid.sub": [[136, null]], "lucid.sum": [[164, null]], "lucid.tan": [[165, null]], "lucid.tanh": [[166, null]], "lucid.tensor": [[170, null]], "lucid.tile": [[181, null]], "lucid.trace": [[167, null]], "lucid.transpose": [[168, null]], "lucid.types": [[118, null]], "lucid.unsqueeze": [[182, null]], "lucid.var": [[169, null]], "lucid.vstack": [[183, null]], "lucid.zeros": [[142, null]], "lucid.zeros_like": [[143, null]], "nn.AlphaDropout": [[76, null]], "nn.AvgPool1d": [[101, null]], "nn.AvgPool2d": [[102, null]], "nn.AvgPool3d": [[103, null]], "nn.BCELoss": [[87, null]], "nn.BatchNorm1d": [[93, null]], "nn.BatchNorm2d": [[94, null]], "nn.BatchNorm3d": [[95, null]], "nn.Bilinear": [[83, null]], "nn.Buffer": [[13, null]], "nn.Conv1d": [[72, null]], "nn.Conv2d": [[73, null]], "nn.Conv3d": [[74, null]], "nn.CrossEntropyLoss": [[88, null]], "nn.Dropout": [[77, null]], "nn.Dropout1d": [[78, null]], "nn.Dropout2d": [[79, null]], "nn.Dropout3d": [[80, null]], "nn.ELU": [[63, null]], "nn.GELU": [[64, null]], "nn.HuberLoss": [[89, null]], "nn.Identity": [[84, null]], "nn.InstanceNorm1d": [[96, null]], "nn.InstanceNorm2d": [[97, null]], "nn.InstanceNorm3d": [[98, null]], "nn.LayerNorm": [[99, null]], "nn.LeakyReLU": [[65, null]], "nn.Linear": [[85, null]], "nn.MSELoss": [[90, null]], "nn.MaxPool1d": [[104, null]], "nn.MaxPool2d": [[105, null]], "nn.MaxPool3d": [[106, null]], "nn.Module": [[14, null]], "nn.ModuleDict": [[16, null]], "nn.ModuleList": [[17, null]], "nn.NLLLoss": [[91, null]], "nn.Parameter": [[15, null]], "nn.ParameterDict": [[18, null]], "nn.ParameterList": [[19, null]], "nn.ReLU": [[66, null]], "nn.SELU": [[67, null]], "nn.Sequential": [[20, null]], "nn.Sigmoid": [[68, null]], "nn.Softmax": [[69, null]], "nn.Tanh": [[70, null]], "nn.functional.alpha_dropout": [[36, null]], "nn.functional.avg_pool1d": [[56, null]], "nn.functional.avg_pool2d": [[57, null]], "nn.functional.avg_pool3d": [[58, null]], "nn.functional.batch_norm": [[52, null]], "nn.functional.bilinear": [[43, null]], "nn.functional.binary_cross_entropy": [[46, null]], "nn.functional.conv1d": [[31, null]], "nn.functional.conv2d": [[32, null]], "nn.functional.conv3d": [[33, null]], "nn.functional.cross_entropy": [[47, null]], "nn.functional.dropout": [[37, null]], "nn.functional.dropout1d": [[38, null]], "nn.functional.dropout2d": [[39, null]], "nn.functional.dropout3d": [[40, null]], "nn.functional.elu": [[22, null]], "nn.functional.gelu": [[23, null]], "nn.functional.huber_loss": [[48, null]], "nn.functional.instance_norm": [[54, null]], "nn.functional.layer_norm": [[55, null]], "nn.functional.leaky_relu": [[25, null]], "nn.functional.linear": [[45, null]], "nn.functional.max_pool1d": [[60, null]], "nn.functional.max_pool2d": [[61, null]], "nn.functional.max_pool3d": [[62, null]], "nn.functional.mse_loss": [[50, null]], "nn.functional.nll_loss": [[51, null]], "nn.functional.relu": [[26, null]], "nn.functional.selu": [[27, null]], "nn.functional.sigmoid": [[28, null]], "nn.functional.softmax": [[29, null]], "nn.functional.tanh": [[30, null]], "nn.functional.unfold": [[35, null]], "optim.ASGD": [[111, null]], "optim.Optimizer": [[109, null]], "optim.RMSprop": [[112, null]], "optim.SGD": [[113, null]]}, "docnames": ["index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/nn", "optim/Optimizer", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/RMSprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/types", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/unsqueeze", "tensor/utilities/vstack"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/types.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst"], "indexentries": {"abs() (in module lucid)": [[145, "lucid.abs", false]], "add() (in module lucid)": [[126, "lucid.add", false]], "alpha_dropout() (in module lucid.nn.functional)": [[36, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[76, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[137, "lucid.arange", false]], "arccos() (in module lucid)": [[146, "lucid.arccos", false]], "arcsin() (in module lucid)": [[147, "lucid.arcsin", false]], "arctan() (in module lucid)": [[148, "lucid.arctan", false]], "asgd (class in lucid.optim)": [[111, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[56, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[57, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[58, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[101, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[102, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[103, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[52, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[93, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[94, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[95, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[87, "lucid.nn.BCELoss", false]], "bilinear (class in lucid.nn)": [[83, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[43, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[46, "lucid.nn.functional.binary_cross_entropy", false]], "buffer (class in lucid.nn)": [[13, "lucid.nn.Buffer", false]], "cholesky() (in module lucid.linalg)": [[2, "lucid.linalg.cholesky", false]], "clip() (in module lucid)": [[149, "lucid.clip", false]], "concatenate() (in module lucid)": [[171, "lucid.concatenate", false]], "conv1d (class in lucid.nn)": [[72, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[31, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[73, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[32, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[74, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[33, "lucid.nn.functional.conv3d", false]], "cos() (in module lucid)": [[150, "lucid.cos", false]], "cosh() (in module lucid)": [[151, "lucid.cosh", false]], "cross_entropy() (in module lucid.nn.functional)": [[47, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[88, "lucid.nn.CrossEntropyLoss", false]], "cube() (in module lucid)": [[152, "lucid.cube", false]], "det() (in module lucid.linalg)": [[3, "lucid.linalg.det", false]], "diag() (in module lucid)": [[138, "lucid.diag", false]], "div() (in module lucid)": [[127, "lucid.div", false]], "dot() (in module lucid)": [[128, "lucid.dot", false]], "dropout (class in lucid.nn)": [[77, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[37, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[78, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[38, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[79, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[39, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[80, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[40, "lucid.nn.functional.dropout3d", false]], "eig() (in module lucid.linalg)": [[4, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[63, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[22, "lucid.nn.functional.elu", false]], "exp() (in module lucid)": [[153, "lucid.exp", false]], "eye() (in module lucid)": [[139, "lucid.eye", false]], "flatten() (in module lucid)": [[172, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[64, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[23, "lucid.nn.functional.gelu", false]], "grad_enabled() (in module lucid)": [[115, "lucid.grad_enabled", false]], "hstack() (in module lucid)": [[173, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[48, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[89, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[84, "lucid.nn.Identity", false]], "inner() (in module lucid)": [[129, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[54, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[96, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[97, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[98, "lucid.nn.InstanceNorm3d", false]], "inv() (in module lucid.linalg)": [[6, "lucid.linalg.inv", false]], "layer_norm() (in module lucid.nn.functional)": [[55, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[99, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[25, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[65, "lucid.nn.LeakyReLU", false]], "linear (class in lucid.nn)": [[85, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[45, "lucid.nn.functional.linear", false]], "log() (in module lucid)": [[154, "lucid.log", false]], "lucid": [[0, "module-lucid", false]], "matmul() (in module lucid)": [[130, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[7, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[155, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[60, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[61, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[62, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[131, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[104, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[105, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[106, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[156, "lucid.mean", false]], "min() (in module lucid)": [[157, "lucid.min", false]], "minimum() (in module lucid)": [[132, "lucid.minimum", false]], "module": [[0, "module-lucid", false]], "module (class in lucid.nn)": [[14, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[16, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[17, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[50, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[90, "lucid.nn.MSELoss", false]], "mul() (in module lucid)": [[133, "lucid.mul", false]], "nll_loss() (in module lucid.nn.functional)": [[51, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[91, "lucid.nn.NLLLoss", false]], "no_grad() (in module lucid)": [[117, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[8, "lucid.linalg.norm", false]], "ones() (in module lucid)": [[140, "lucid.ones", false]], "ones_like() (in module lucid)": [[141, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[109, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[134, "lucid.outer", false]], "pad() (in module lucid)": [[175, "lucid.pad", false]], "parameter (class in lucid.nn)": [[15, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[18, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[19, "lucid.nn.ParameterList", false]], "pinv() (in module lucid.linalg)": [[9, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[135, "lucid.power", false]], "qr() (in module lucid.linalg)": [[10, "lucid.linalg.qr", false]], "rand() (in module lucid.random)": [[120, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[121, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[122, "lucid.random.randn", false]], "ravel() (in module lucid)": [[176, "lucid.ravel", false]], "reciprocal() (in module lucid)": [[158, "lucid.reciprocal", false]], "relu (class in lucid.nn)": [[66, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[26, "lucid.nn.functional.relu", false]], "repeat() (in module lucid)": [[177, "lucid.repeat", false]], "reshape() (in module lucid)": [[178, "lucid.reshape", false]], "rmsprop (class in lucid.optim)": [[112, "lucid.optim.RMSprop", false]], "seed() (in module lucid.random)": [[123, "lucid.random.seed", false]], "selu (class in lucid.nn)": [[67, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[27, "lucid.nn.functional.selu", false]], "sequential (class in lucid.nn)": [[20, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[113, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[68, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[28, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[159, "lucid.sign", false]], "sin() (in module lucid)": [[160, "lucid.sin", false]], "sinh() (in module lucid)": [[161, "lucid.sinh", false]], "softmax (class in lucid.nn)": [[69, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[29, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[11, "lucid.linalg.solve", false]], "sqrt() (in module lucid)": [[162, "lucid.sqrt", false]], "square() (in module lucid)": [[163, "lucid.square", false]], "squeeze() (in module lucid)": [[179, "lucid.squeeze", false]], "stack() (in module lucid)": [[180, "lucid.stack", false]], "sub() (in module lucid)": [[136, "lucid.sub", false]], "sum() (in module lucid)": [[164, "lucid.sum", false]], "svd() (in module lucid.linalg)": [[12, "lucid.linalg.svd", false]], "tan() (in module lucid)": [[165, "lucid.tan", false]], "tanh (class in lucid.nn)": [[70, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[166, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[30, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[125, "lucid.Tensor", false]], "tensor() (in module lucid)": [[170, "lucid.tensor", false]], "tile() (in module lucid)": [[181, "lucid.tile", false]], "trace() (in module lucid)": [[167, "lucid.trace", false]], "transpose() (in module lucid)": [[168, "lucid.transpose", false]], "unfold() (in module lucid.nn.functional)": [[35, "lucid.nn.functional.unfold", false]], "unsqueeze() (in module lucid)": [[182, "lucid.unsqueeze", false]], "var() (in module lucid)": [[169, "lucid.var", false]], "vstack() (in module lucid)": [[183, "lucid.vstack", false]], "zeros() (in module lucid)": [[142, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[143, "lucid.zeros_like", false]]}, "objects": {"": [[0, 0, 0, "-", "lucid"]], "lucid": [[125, 1, 1, "", "Tensor"], [145, 2, 1, "", "abs"], [126, 2, 1, "", "add"], [137, 2, 1, "", "arange"], [146, 2, 1, "", "arccos"], [147, 2, 1, "", "arcsin"], [148, 2, 1, "", "arctan"], [149, 2, 1, "", "clip"], [171, 2, 1, "", "concatenate"], [150, 2, 1, "", "cos"], [151, 2, 1, "", "cosh"], [152, 2, 1, "", "cube"], [138, 2, 1, "", "diag"], [127, 2, 1, "", "div"], [128, 2, 1, "", "dot"], [153, 2, 1, "", "exp"], [139, 2, 1, "", "eye"], [172, 2, 1, "", "flatten"], [115, 2, 1, "", "grad_enabled"], [173, 2, 1, "", "hstack"], [129, 2, 1, "", "inner"], [154, 2, 1, "", "log"], [130, 2, 1, "", "matmul"], [155, 2, 1, "", "max"], [131, 2, 1, "", "maximum"], [156, 2, 1, "", "mean"], [157, 2, 1, "", "min"], [132, 2, 1, "", "minimum"], [133, 2, 1, "", "mul"], [117, 2, 1, "", "no_grad"], [140, 2, 1, "", "ones"], [141, 2, 1, "", "ones_like"], [134, 2, 1, "", "outer"], [175, 2, 1, "", "pad"], [135, 2, 1, "", "power"], [176, 2, 1, "", "ravel"], [158, 2, 1, "", "reciprocal"], [177, 2, 1, "", "repeat"], [178, 2, 1, "", "reshape"], [159, 2, 1, "", "sign"], [160, 2, 1, "", "sin"], [161, 2, 1, "", "sinh"], [162, 2, 1, "", "sqrt"], [163, 2, 1, "", "square"], [179, 2, 1, "", "squeeze"], [180, 2, 1, "", "stack"], [136, 2, 1, "", "sub"], [164, 2, 1, "", "sum"], [165, 2, 1, "", "tan"], [166, 2, 1, "", "tanh"], [170, 2, 1, "", "tensor"], [181, 2, 1, "", "tile"], [167, 2, 1, "", "trace"], [168, 2, 1, "", "transpose"], [182, 2, 1, "", "unsqueeze"], [169, 2, 1, "", "var"], [183, 2, 1, "", "vstack"], [142, 2, 1, "", "zeros"], [143, 2, 1, "", "zeros_like"]], "lucid.linalg": [[2, 2, 1, "", "cholesky"], [3, 2, 1, "", "det"], [4, 2, 1, "", "eig"], [6, 2, 1, "", "inv"], [7, 2, 1, "", "matrix_power"], [8, 2, 1, "", "norm"], [9, 2, 1, "", "pinv"], [10, 2, 1, "", "qr"], [11, 2, 1, "", "solve"], [12, 2, 1, "", "svd"]], "lucid.nn": [[76, 1, 1, "", "AlphaDropout"], [101, 1, 1, "", "AvgPool1d"], [102, 1, 1, "", "AvgPool2d"], [103, 1, 1, "", "AvgPool3d"], [87, 1, 1, "", "BCELoss"], [93, 1, 1, "", "BatchNorm1d"], [94, 1, 1, "", "BatchNorm2d"], [95, 1, 1, "", "BatchNorm3d"], [83, 1, 1, "", "Bilinear"], [13, 1, 1, "", "Buffer"], [72, 1, 1, "", "Conv1d"], [73, 1, 1, "", "Conv2d"], [74, 1, 1, "", "Conv3d"], [88, 1, 1, "", "CrossEntropyLoss"], [77, 1, 1, "", "Dropout"], [78, 1, 1, "", "Dropout1d"], [79, 1, 1, "", "Dropout2d"], [80, 1, 1, "", "Dropout3d"], [63, 1, 1, "", "ELU"], [64, 1, 1, "", "GELU"], [89, 1, 1, "", "HuberLoss"], [84, 1, 1, "", "Identity"], [96, 1, 1, "", "InstanceNorm1d"], [97, 1, 1, "", "InstanceNorm2d"], [98, 1, 1, "", "InstanceNorm3d"], [99, 1, 1, "", "LayerNorm"], [65, 1, 1, "", "LeakyReLU"], [85, 1, 1, "", "Linear"], [90, 1, 1, "", "MSELoss"], [104, 1, 1, "", "MaxPool1d"], [105, 1, 1, "", "MaxPool2d"], [106, 1, 1, "", "MaxPool3d"], [14, 1, 1, "", "Module"], [16, 1, 1, "", "ModuleDict"], [17, 1, 1, "", "ModuleList"], [91, 1, 1, "", "NLLLoss"], [15, 1, 1, "", "Parameter"], [18, 1, 1, "", "ParameterDict"], [19, 1, 1, "", "ParameterList"], [66, 1, 1, "", "ReLU"], [67, 1, 1, "", "SELU"], [20, 1, 1, "", "Sequential"], [68, 1, 1, "", "Sigmoid"], [69, 1, 1, "", "Softmax"], [70, 1, 1, "", "Tanh"]], "lucid.nn.functional": [[36, 2, 1, "", "alpha_dropout"], [56, 2, 1, "", "avg_pool1d"], [57, 2, 1, "", "avg_pool2d"], [58, 2, 1, "", "avg_pool3d"], [52, 2, 1, "", "batch_norm"], [43, 2, 1, "", "bilinear"], [46, 2, 1, "", "binary_cross_entropy"], [31, 2, 1, "", "conv1d"], [32, 2, 1, "", "conv2d"], [33, 2, 1, "", "conv3d"], [47, 2, 1, "", "cross_entropy"], [37, 2, 1, "", "dropout"], [38, 2, 1, "", "dropout1d"], [39, 2, 1, "", "dropout2d"], [40, 2, 1, "", "dropout3d"], [22, 2, 1, "", "elu"], [23, 2, 1, "", "gelu"], [48, 2, 1, "", "huber_loss"], [54, 2, 1, "", "instance_norm"], [55, 2, 1, "", "layer_norm"], [25, 2, 1, "", "leaky_relu"], [45, 2, 1, "", "linear"], [60, 2, 1, "", "max_pool1d"], [61, 2, 1, "", "max_pool2d"], [62, 2, 1, "", "max_pool3d"], [50, 2, 1, "", "mse_loss"], [51, 2, 1, "", "nll_loss"], [26, 2, 1, "", "relu"], [27, 2, 1, "", "selu"], [28, 2, 1, "", "sigmoid"], [29, 2, 1, "", "softmax"], [30, 2, 1, "", "tanh"], [35, 2, 1, "", "unfold"]], "lucid.optim": [[111, 1, 1, "", "ASGD"], [109, 1, 1, "", "Optimizer"], [112, 1, 1, "", "RMSprop"], [113, 1, 1, "", "SGD"]], "lucid.random": [[120, 2, 1, "", "rand"], [121, 2, 1, "", "randint"], [122, 2, 1, "", "randn"], [123, 2, 1, "", "seed"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [0, 1, 7, 9, 12, 13, 14, 15, 16, 18, 19, 20, 88, 91, 101, 104, 105, 108, 109, 110, 116, 130, 138, 154, 156, 164, 167, 169, 170, 179], "0": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 164, 165, 166, 168, 169, 170, 171, 173, 175, 176, 177, 179, 180, 182, 183], "0000": [88, 89, 91], "0001": 111, "001": [111, 113], "005": 65, "01": [25, 65, 109, 110, 111, 112, 113], "01051757": 122, "0205": 88, "0217": 88, "0227": 88, "0299": 88, "044715": [23, 64], "0450": 88, "0451": 88, "04719755": 146, "0474259": 28, "0480": 88, "05": [52, 54, 55, 65, 93, 94, 95, 96, 97, 98, 99], "0507": [27, 67], "07": [46, 47, 87, 88], "0700": 88, "0706508": 70, "0721": 88, "0794": 91, "08": 112, "0802": 91, "08333333": 9, "085537": 153, "0900": [69, 88], "0986": [29, 69], "09861229": 154, "0992": 88, "1": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 118, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183], "10": [16, 17, 20, 32, 33, 43, 45, 72, 73, 74, 79, 80, 83, 85, 94, 95, 97, 102, 103, 105, 121, 124, 127, 130, 133, 134, 148, 164], "1000000": 111, "1001": 88, "1003": 88, "1014": 27, "1025": [17, 20], "1026": [17, 20], "1027": [17, 20], "10499": 28, "1050": 68, "1054": 91, "1056": [17, 20], "11": [43, 72, 73, 74, 79, 83, 94, 95, 97, 102, 103, 105, 130], "1111": 87, "1134": 43, "119": 43, "1192": [28, 29, 69], "12": [18, 43, 72, 73, 74, 79, 80, 83, 94, 95, 97, 102, 103, 105, 130, 134, 135], "123": 123, "125": 103, "1250": 89, "128": 20, "13": [43, 72, 73, 74, 83, 95, 102, 103, 105, 130], "14": [72, 73, 74, 79, 80, 83, 95, 102, 103, 105, 118, 130, 134], "145": 43, "15": [43, 72, 73, 74, 83, 95, 102, 103, 105, 130, 134, 167], "1513": 91, "155": 130, "1588": [23, 64], "16": [17, 18, 20, 72, 73, 74, 79, 80, 83, 94, 95, 102, 103, 105, 108, 130, 134, 162], "16227766": 10, "16425": 91, "1643": 87, "166": 130, "17": [72, 73, 74, 83, 95, 103, 129], "170": 43, "17520119": 161, "18": [72, 73, 74, 79, 83, 95, 103, 133, 134], "1800": 88, "19": [32, 33, 43, 73, 74, 95, 128, 130], "1966": [29, 68, 69], "1998": 88, "1d": [31, 56, 60, 93, 96, 130, 138, 167, 175, 176, 177, 181], "1e": [46, 47, 52, 54, 55, 87, 88, 93, 94, 95, 96, 97, 98, 99, 111, 112, 113], "1e6": 111, "2": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 118, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183], "20": [16, 17, 20, 73, 74, 79, 95, 134, 153], "2039": 91, "204": 74, "21": [18, 43, 73, 74, 95, 134], "211": 130, "22": [43, 73, 74, 79, 95, 128, 130], "2231": [88, 91], "2247": [93, 94, 95, 96, 97, 98, 99], "226": 130, "22752314": 122, "23": [73, 74, 95], "2324": 67, "24": [43, 73, 74, 79, 95, 134], "2424": [29, 69], "2447": 69, "25": [28, 68, 74, 90, 95, 102, 103, 127, 158, 169], "2500": [87, 89, 91], "2512": 63, "2547": 67, "26": [18, 45, 74, 85, 95, 134], "26325684": 122, "2689": [29, 68, 69], "27": [43, 72, 74, 95, 152], "28": [43, 74, 134], "29": 74, "2_i": [96, 97, 98], "2d": [32, 39, 57, 61, 94, 97, 130, 138, 139, 167, 172, 175, 177, 181], "2x2": 35, "3": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 17, 18, 19, 20, 23, 28, 29, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 48, 50, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 149, 151, 152, 153, 154, 155, 156, 157, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183], "30": [17, 74], "3026": 91, "31": [43, 74, 130], "31622777": 10, "32": [17, 20, 43, 45, 73, 74, 85, 108, 128, 129, 134], "33": [17, 20, 45, 74, 85], "33333333": 9, "34": [17, 20, 43, 74, 130, 134], "35": [17, 20, 74], "3567": [87, 91], "36": 74, "3679": [22, 27, 63], "37": 72, "372": 43, "375": 90, "3750": 89, "38344152": 120, "38629436": 154, "389056": 153, "3935": 63, "3d": [33, 40, 58, 62, 74, 95, 98], "3x3": 124, "4": [1, 2, 3, 4, 6, 8, 9, 10, 18, 20, 31, 32, 33, 35, 38, 39, 40, 43, 45, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 111, 112, 113, 116, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 141, 143, 149, 154, 155, 156, 157, 158, 160, 162, 163, 164, 165, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 180, 181, 183], "4044": 87, "4076": 88, "41421356": 2, "41666667": 9, "41808962": 122, "419974": 30, "4199743": 70, "42": [43, 118, 124], "42718872": 10, "4286": 87, "43": [128, 130], "4323": 63, "4375": 89, "43758721": 120, "4472136": 4, "4495": [95, 98], "45": 43, "4545": 76, "47112767": 148, "48": [45, 85], "4979": 63, "5": [0, 1, 6, 7, 8, 9, 14, 15, 16, 17, 18, 20, 23, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 48, 50, 52, 54, 55, 56, 57, 63, 64, 65, 66, 67, 68, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 105, 106, 116, 118, 121, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 145, 146, 147, 155, 156, 157, 158, 159, 164, 167, 168, 169, 170, 173, 178, 183], "50": [45, 85, 128, 130], "5000": [87, 89, 91], "5108": 91, "52359878": 147, "53": [43, 129], "54308063": 151, "545": 135, "5455": 76, "57": 43, "57079633": [146, 147], "57366333": 123, "6": [1, 9, 18, 19, 31, 32, 33, 35, 40, 43, 45, 72, 73, 74, 77, 78, 79, 80, 83, 85, 87, 93, 94, 95, 96, 97, 98, 99, 102, 103, 105, 106, 116, 118, 126, 127, 128, 129, 130, 133, 134, 135, 136, 137, 138, 141, 143, 155, 156, 157, 164, 167, 168, 169, 170, 173, 177, 178, 183], "6052": 91, "6065": 63, "6124": [93, 94, 95, 96, 97, 98, 99], "62": 43, "62686041": 161, "6321": [22, 63], "63245553": 10, "64": [17, 20, 43], "64589411": 120, "6590": [29, 69], "6652": 69, "66666667": 9, "6667": 87, "6682": 87, "67": 130, "67326": 67, "6733": 27, "68811989": 122, "69314718": 154, "7": [8, 18, 31, 32, 33, 35, 40, 43, 45, 46, 47, 64, 67, 68, 70, 72, 73, 74, 79, 80, 83, 85, 87, 88, 90, 94, 95, 97, 98, 102, 103, 105, 106, 118, 121, 126, 128, 129, 130, 134, 136, 138, 153, 156, 164, 167, 168, 169, 181], "7001": 88, "70710678": [4, 160], "7147": 91, "7182818": 153, "7311": [29, 68, 69], "74": 130, "75": [45, 85, 90, 111], "7581": 27, "76159416": 166, "7616": [30, 70], "76219569": 151, "7635": 67, "772": 135, "78357324": 122, "78539816": 148, "79172504": 120, "8": [7, 11, 17, 18, 20, 31, 32, 33, 35, 40, 43, 45, 46, 64, 67, 68, 70, 72, 73, 74, 77, 78, 79, 80, 83, 85, 87, 90, 94, 95, 97, 98, 102, 103, 105, 106, 112, 118, 121, 127, 128, 129, 130, 134, 135, 137, 138, 152, 156, 164, 167, 168, 169], "8005": 88, "8182": 76, "82": 43, "8413": [23, 64], "8584": 67, "8808": [29, 68, 69], "887": 135, "891773": 120, "89442719": 4, "9": [11, 32, 35, 43, 45, 72, 73, 74, 79, 83, 85, 87, 94, 95, 97, 102, 103, 105, 111, 112, 113, 118, 121, 126, 130, 134, 135, 136, 138, 162, 163], "90709145": 123, "9091": 76, "9120": 91, "9163": 91, "9486833": 10, "9526": 28, "9545": 64, "96366276": 120, "9640": 70, "96402758": 166, "99": 112, "9957": 91, "99734545": 123, "A": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 43, 45, 46, 47, 51, 52, 54, 55, 76, 77, 78, 79, 80, 87, 88, 91, 93, 94, 95, 96, 97, 98, 99, 108, 109, 111, 112, 113, 117, 118, 120, 121, 122, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183], "As": 123, "By": [0, 15, 108, 116, 120, 121, 122], "For": [0, 2, 3, 4, 6, 7, 8, 9, 11, 20, 22, 23, 25, 26, 27, 28, 30, 43, 45, 67, 72, 73, 74, 83, 85, 93, 94, 95, 96, 97, 98, 108, 110, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 153, 154, 155, 156, 157, 160, 162, 164, 167, 168, 169, 175, 177, 179, 181, 182], "If": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 19, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 40, 43, 45, 52, 54, 72, 73, 74, 83, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 109, 112, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183], "In": [0, 9, 31, 32, 33, 88, 91, 115, 116, 117], "It": [0, 9, 10, 11, 14, 16, 17, 18, 19, 20, 40, 43, 64, 66, 70, 83, 84, 87, 88, 89, 90, 91, 108, 109, 110, 111, 112, 113, 116, 123, 126, 127, 128, 131, 132, 133, 135, 136, 155, 157, 171, 173, 175, 176, 177, 178, 179, 180, 181, 183], "Its": [11, 124], "Near": 9, "No": 35, "Not": 84, "The": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183], "There": 178, "These": [0, 1, 4, 7, 10, 12, 76, 77, 78, 79, 80, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 118, 124], "To": [110, 122, 124], "With": 35, "_": [7, 16, 17, 19, 20, 22, 23, 25, 26, 27, 28, 30, 45, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 111, 112, 113, 128, 129, 130, 134, 167, 168], "_1": [4, 16, 17, 18, 19, 20, 43, 83, 134, 171, 173, 183], "_2": [4, 16, 17, 18, 19, 20, 43, 83, 134, 171, 173, 183], "__call__": 14, "__init__": [0, 13, 14, 15, 16, 17, 18, 19, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 83, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 125], "__repr__": 109, "__setattr__": 14, "_activ": 29, "_arraylik": [118, 138, 141, 143], "_arraylikeint": 175, "_arrayorscalar": [13, 15, 118, 125, 170], "_grad_en": [115, 117], "_i": [4, 8, 29, 43, 69, 90, 93, 99, 101, 104, 128, 129, 131, 132, 134, 135, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 177, 179, 182, 183], "_j": [29, 69, 101, 104, 134, 156, 164, 168, 169], "_k": 180, "_modul": 14, "_n": [4, 16, 17, 18, 19, 20, 171, 173, 183], "_numpyarrai": 118, "_out": [177, 181], "_p": 8, "_pad": 175, "_paddingstr": [72, 73, 74], "_paramet": 14, "_reductiontyp": [46, 47, 48, 50, 51, 87, 88, 89, 90, 91], "_scalar": [118, 137, 149], "_shapelik": [55, 99, 118, 121, 140, 142, 178, 179, 182], "_slope": 65, "_statedict": 109, "_t": 112, "_tensor": [13, 15, 138, 170], "_tensorop": 125, "_u": 9, "_v": 9, "_valu": [149, 175], "_width": 175, "a_i": [131, 132, 135], "ab": 144, "abc": 109, "abil": 0, "about": 0, "abov": [0, 115, 117, 123, 138, 139], "absolut": [7, 8, 48, 145], "abstract": [108, 109, 110, 111, 112, 113], "abstractmethod": 109, "acceler": [67, 93, 94, 95, 111, 112, 113], "accept": [84, 120, 125], "access": [13, 15, 16, 17, 18, 19, 20, 178], "accord": [72, 73, 74, 83, 85, 88, 91, 168], "accordingli": 3, "account": [7, 9, 10], "accumul": [111, 126, 127, 131, 132, 133, 136], "achiev": [31, 32, 33], "across": [13, 17, 20, 55, 93, 94, 95, 96, 97, 98, 99, 118, 120, 121, 122, 123, 124, 156, 169], "activ": [0, 16, 20, 22, 23, 25, 26, 27, 28, 29, 30, 36, 63, 64, 65, 66, 67, 68, 69, 70, 76, 77, 78, 79, 80, 87, 88, 91, 93, 94, 95, 99, 155, 157], "actual": [15, 87, 88, 90, 91, 125], "ad": [14, 16, 17, 18, 19, 20, 31, 32, 33, 43, 45, 46, 47, 52, 54, 55, 56, 57, 58, 60, 61, 62, 72, 73, 74, 87, 88, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 112, 182], "adapt": 112, "add": [14, 16, 17, 20, 43, 45, 72, 73, 74, 83, 85, 99, 109, 111, 112, 113, 116, 144, 175, 182], "add_modul": [14, 20], "add_param_group": 109, "addit": [0, 7, 14, 17, 20, 43, 45, 52, 54, 83, 85, 93, 94, 95, 96, 97, 98, 111, 116, 124, 126, 180], "address": [88, 91], "adjust": [76, 93, 94, 95, 96, 97, 98, 99, 110, 112, 173, 183], "advanc": [9, 17, 20, 31, 32, 33, 108, 111], "advantag": 117, "affect": [115, 176, 179], "affin": [93, 94, 95, 96, 97, 98, 99], "after": [7, 15, 16, 17, 18, 19, 20, 40, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 76, 77, 78, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 99, 101, 102, 103, 104, 105, 106, 117, 125, 126, 127, 131, 132, 133, 135, 136, 175], "afterward": 117, "aggreg": [134, 177, 181], "aim": 0, "algebra": [0, 1, 139], "algorithm": [0, 7, 9, 10, 109, 110, 124], "align": [11, 129, 130], "all": [0, 10, 14, 16, 17, 18, 19, 20, 32, 33, 57, 58, 61, 62, 65, 66, 74, 102, 103, 106, 108, 109, 110, 111, 112, 113, 135, 155, 156, 157, 164, 167, 169, 171, 172, 173, 177, 179, 180, 181, 183], "allevi": 22, "allow": [0, 9, 10, 15, 16, 17, 18, 19, 20, 22, 25, 26, 29, 33, 35, 63, 64, 65, 67, 68, 69, 70, 72, 73, 74, 108, 116, 137, 140, 142, 143, 168, 170], "along": [29, 69, 129, 130, 134, 155, 156, 157, 164, 167, 169, 171, 173, 177, 180, 181, 182, 183], "alongsid": 13, "alpha": [22, 25, 27, 36, 63, 67, 76, 111, 112], "alpha_dropout": [41, 42, 76], "alphadropout": [81, 82], "alphadropoutmodel": 76, "also": [22, 23, 25, 26, 27, 28, 30, 43, 45, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 142, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183], "alter": [20, 178], "altern": [64, 130], "alwai": [15, 176], "amount": [31, 32, 33, 56, 57, 58, 60, 61, 62], "an": [0, 4, 6, 7, 9, 10, 12, 14, 16, 17, 18, 19, 20, 23, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 63, 68, 72, 73, 74, 76, 77, 78, 79, 80, 83, 85, 99, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 117, 118, 125, 130, 138, 139, 149, 156, 164, 169, 171, 177, 181, 182], "analog": [177, 181], "analysi": [72, 73, 74, 98, 101, 103, 104, 106], "ani": [7, 9, 13, 14, 15, 16, 18, 19, 22, 23, 25, 26, 27, 28, 30, 36, 37, 43, 45, 52, 54, 68, 99, 108, 109, 115, 117, 123, 125, 137, 138, 139, 140, 141, 142, 143, 155, 157, 168, 170, 171, 172, 173, 175, 177, 180, 181, 182, 183], "anoth": [19, 136, 141, 143], "appear": 109, "append": [17, 19, 20], "appli": [0, 7, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 76, 77, 78, 79, 80, 83, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 111, 130, 175, 177], "applic": [9, 31, 54, 72, 73, 74, 83, 85, 124, 137, 142, 175], "approach": 20, "appropri": [9, 14, 18, 20, 72, 73, 74, 76, 77, 78, 88, 102, 103, 115, 117], "approx": 27, "approxim": [9, 23, 64, 102, 105], "ar": [0, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 29, 31, 32, 33, 35, 43, 45, 69, 72, 73, 74, 76, 77, 78, 79, 80, 83, 85, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 111, 112, 113, 115, 117, 118, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 145, 149, 153, 155, 156, 157, 158, 159, 164, 167, 168, 171, 177, 178, 181], "arang": 144, "arbitrari": [17, 84, 149, 154, 156, 160, 162, 164, 168, 169], "arcco": 144, "architectur": [16, 17, 18, 19, 20, 23, 66, 83, 84, 108], "arcsin": 144, "arctan": 144, "arg": [14, 84], "argument": [14, 20, 84, 120, 168], "around": [4, 70], "arr": [118, 171, 173, 180, 183], "arrai": [0, 13, 15, 116, 118, 125, 130, 138, 141, 143, 170, 176, 177], "asarrai": 118, "asgd": 114, "assign": [14, 16, 18, 20, 88, 91], "associ": [18, 19], "assum": [109, 110, 115], "attempt": [16, 20], "attent": [19, 43], "attribut": 14, "audio": 72, "augment": [124, 177, 181], "autodiff": 0, "autograd": 108, "automat": [0, 15, 16, 17, 18, 19, 108, 120, 121, 122, 125, 143], "auxiliari": 13, "avail": 0, "averag": [13, 56, 57, 58, 90, 101, 102, 103, 111, 112, 156], "avg_pool": [101, 102, 103], "avg_pool1d": [42, 59], "avg_pool2d": [42, 59], "avg_pool3d": [42, 59], "avgpool1d": [82, 107], "avgpool1dmodel": 101, "avgpool2d": [82, 107], "avgpool2dmodel": 102, "avgpool3d": [82, 107], "avgpool3dmodel": 103, "avoid": [9, 18, 117], "ax": [1, 116, 155, 156, 157, 164, 168, 169, 177, 179, 181], "axi": [29, 69, 129, 130, 155, 156, 157, 164, 169, 171, 173, 175, 177, 179, 180, 181, 182, 183], "b": [1, 11, 43, 45, 72, 73, 74, 83, 85, 116, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 171, 173, 180, 183], "b_i": [131, 132, 135], "back": [102, 103, 129, 134, 177, 181], "backpropag": [0, 3, 4, 6, 7, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 43, 45, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 117, 122, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 153, 155, 157, 170, 175, 177, 181], "backward": [0, 13, 15, 110, 111, 112, 113, 125], "balanc": 89, "bar": 111, "base": [1, 6, 7, 10, 11, 14, 16, 17, 18, 19, 35, 43, 76, 88, 89, 108, 109, 110, 111, 112, 113, 126, 127, 131, 132, 133, 135, 136, 143, 153, 154, 155, 157, 168, 175], "basic": [0, 31, 32, 33], "batch": [1, 7, 10, 12, 31, 32, 33, 35, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 72, 73, 74, 83, 85, 87, 88, 91, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 130], "batch_norm": [42, 53, 93, 94, 95], "batch_norm1": 20, "batch_norm2": 20, "batchnorm1d": [82, 100], "batchnorm1dmodel": 93, "batchnorm2d": [20, 82, 100], "batchnorm2dmodel": 94, "batchnorm3d": [82, 100], "batchnorm3dmodel": 95, "bceloss": [82, 92], "becaus": 121, "becom": [8, 14], "befor": [7, 15, 111, 117, 123, 175], "begin": [8, 22, 25, 26, 27, 63, 65, 66, 67, 89, 90, 91, 101, 102, 103, 104, 105, 106, 116, 124, 131, 132, 134, 145, 149, 155, 157, 159, 175], "behav": [89, 167], "behavior": [17, 20, 115, 124, 130], "being": [19, 76, 77, 78, 79, 80, 115, 117, 171, 173, 183], "below": [10, 130, 138, 139], "benefici": 20, "benefit": [22, 108, 118], "bernoulli": [76, 77, 78, 79, 80], "beta": [93, 94, 95, 96, 97, 98, 99], "better": [6, 23, 96, 97, 98, 108, 112], "between": [14, 31, 32, 33, 35, 43, 48, 72, 73, 74, 76, 77, 78, 79, 80, 83, 87, 88, 89, 90, 91, 111, 112, 113, 124, 126, 127, 130, 133, 136, 137, 169], "beyond": [0, 17], "bia": [31, 32, 33, 43, 45, 52, 54, 55, 72, 73, 74, 83, 85, 93, 94, 95, 96, 97, 98, 99], "bias": [72, 73, 74, 85, 99, 108], "bias1": 18, "bias2": 18, "bilinear": [42, 44, 82, 86], "bilinearmodel": 83, "binari": [28, 46, 68, 76, 77, 78, 79, 80, 87], "binary_cross_entropi": [42, 49], "block": [14, 35, 72, 73, 74, 117], "block1": 108, "block2": 108, "bmatrix": 134, "bool": [12, 14, 15, 36, 37, 38, 39, 40, 52, 54, 72, 73, 74, 83, 85, 93, 94, 95, 96, 97, 98, 99, 112, 115, 120, 121, 122, 125, 137, 138, 139, 140, 141, 142, 143, 155, 156, 157, 164, 169, 170], "both": [31, 45, 56, 60, 64, 72, 73, 101, 102, 104, 105, 128, 129, 130, 134, 138], "break": 108, "broadcast": [79, 80, 156, 164, 169, 178, 182], "buffer": [111, 112, 113], "build": [0, 14, 17, 20, 108], "built": [0, 20, 108], "c": [35, 38, 39, 40, 47, 51, 52, 54, 56, 57, 58, 60, 61, 62, 79, 80, 88, 91, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 116, 173, 183], "c_": [72, 73, 74], "c_in": [31, 32, 33], "c_out": [31, 32, 33], "calcul": [0, 1, 15, 117, 121, 125], "calculu": [2, 9], "call": [14, 115, 126, 127, 130, 131, 132, 133, 135, 136], "callabl": 109, "can": [0, 2, 4, 6, 7, 9, 10, 12, 13, 15, 16, 17, 18, 19, 20, 25, 31, 32, 33, 64, 65, 70, 72, 73, 74, 96, 97, 98, 102, 103, 104, 105, 106, 108, 111, 112, 113, 115, 116, 117, 118, 124, 125, 130, 139, 140, 142, 143, 156, 164, 169, 173, 175, 177, 178, 181, 182, 183], "cannot": [3, 4, 6, 7, 10, 11, 12], "capabl": [0, 137, 138, 139, 140, 141, 142, 143], "captur": [35, 72, 73, 74, 83], "care": 117, "case": [8, 22, 25, 26, 27, 63, 65, 66, 67, 89, 90, 91, 101, 102, 103, 104, 105, 106, 108, 116, 131, 132, 145, 149, 155, 157, 159, 175], "caus": [9, 111, 112, 113], "cdot": [2, 3, 6, 7, 8, 11, 22, 23, 25, 27, 28, 31, 32, 33, 43, 45, 56, 57, 58, 60, 61, 62, 64, 68, 76, 83, 85, 87, 88, 89, 91, 93, 94, 95, 96, 97, 98, 99, 128, 129, 130, 133, 135], "center": [70, 112], "central": 118, "certain": [3, 23, 43, 83, 115, 155, 157], "chain": [6, 7, 20], "chang": [48, 89, 116, 117, 176, 178, 182], "channel": [31, 32, 33, 35, 38, 39, 40, 52, 54, 56, 57, 58, 60, 61, 62, 72, 73, 74, 79, 80, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106], "check": 115, "checkpoint": 110, "choleski": 5, "chosen": 76, "clariti": 118, "class": [0, 29, 47, 51, 108, 110, 138, 139, 140, 142, 170], "classif": [28, 29, 46, 47, 51, 68, 69, 87, 88, 91], "cleaner": [117, 130], "clear": [15, 125], "clearli": 118, "clip": 144, "close": [6, 9, 67, 87, 112], "closer": 63, "closur": [109, 110], "co": [144, 160], "code": [7, 16, 18, 20, 115, 117, 118, 124], "coeffici": [11, 111, 112, 113], "col": 35, "collect": [1, 16, 17, 19, 20, 110], "column": [3, 4, 6, 10, 11, 12, 35, 139, 173], "combin": [17, 20, 22, 23, 64, 88, 108, 156, 164, 169, 171], "common": [35, 110], "commonli": [0, 23, 28, 29, 30, 31, 33, 43, 50, 52, 54, 69, 74, 87, 90, 91, 101, 102, 103, 104, 105, 106, 116, 118, 140, 179], "compar": [124, 180], "compat": [1, 84, 99, 108, 116, 124], "complex": [0, 4, 16, 17, 20, 26, 66, 104, 106, 108, 110], "compon": [9, 14, 17, 110, 125], "compos": [72, 73, 74, 101, 102, 103, 104, 105, 106, 108], "comput": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 35, 43, 45, 46, 47, 48, 50, 51, 52, 54, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 115, 116, 117, 118, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 175, 177, 181], "computation": 9, "compute_loss": [110, 111, 112, 113], "concaten": [31, 32, 33, 173, 174, 180, 183], "concept": [0, 9], "condit": [2, 3, 6], "configur": 19, "conjunct": [35, 91], "connect": [45, 72, 73, 74, 85], "consid": [6, 9, 20, 108, 115], "consider": 9, "consist": [13, 118, 123, 124, 175], "consistent_tensor": 124, "constant": [46, 47, 52, 54, 55, 67, 87, 88, 93, 94, 95, 96, 97, 98, 99, 112, 118, 175], "constant_pad": 175, "construct": [0, 17, 108, 138, 177, 181], "contain": [3, 4, 9, 10, 11, 12, 14, 16, 17, 18, 19, 20, 29, 35, 43, 45, 46, 47, 51, 87, 88, 91, 109, 126, 127, 128, 129, 131, 132, 133, 134, 136, 137, 145, 146, 147, 148, 150, 151, 152, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 172], "context": [115, 117], "contextmanag": 117, "contigu": 176, "continu": [65, 122], "contrast": [96, 97, 98], "contribut": [76, 77, 78, 79, 80, 101, 104, 105, 106, 111, 167], "control": [63, 89, 111, 112, 113, 115, 124], "conv": [94, 95], "conv1": [20, 72, 73, 74, 101, 102, 103, 104, 105, 106], "conv1d": [34, 42, 75, 82, 101, 104], "conv1dmodel": 72, "conv2": [20, 72, 73, 74], "conv2d": [17, 20, 34, 42, 75, 82, 94, 102, 105, 108], "conv2dmodel": 73, "conv3d": [34, 42, 75, 82, 95, 103, 106], "conv3dmodel": 74, "conv_lay": 17, "convblock": 108, "convent": 130, "converg": [9, 70, 111, 112, 113], "convers": [88, 91], "convert": [13, 15, 29, 69, 125], "convnetwork": 17, "convolut": [17, 31, 32, 33, 35, 72, 73, 74, 102, 103, 105, 106, 175], "convolv": [31, 32, 33, 72, 73, 74], "core": [14, 108, 109, 125], "correct": [16, 88, 91], "correctli": [9, 14, 16, 17, 18, 19, 20, 88, 91, 124], "correspond": [4, 16, 18, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 43, 45, 66, 69, 83, 85, 93, 94, 95, 96, 97, 98, 102, 103, 111, 112, 113, 128, 129, 131, 132, 135, 153, 154, 160, 162, 173, 175, 177, 181, 183], "cosh": [144, 161, 166], "cosin": [146, 150, 151, 160], "could": 14, "count": 171, "cover": [1, 31, 32, 33], "creat": [0, 13, 14, 17, 20, 108, 116, 124, 137, 139, 140, 141, 142, 143, 180], "creation": [17, 20], "criterion": [87, 88, 89, 90, 91], "critic": [9, 110, 124], "cross": [46, 47, 87, 88], "cross_entropi": [42, 49], "crossentropyloss": [82, 92], "cube": 144, "cumul": [23, 64], "current": [14, 111, 115], "custom": [0, 13, 16, 17, 18, 19, 20, 63, 65, 108, 124, 139], "custommodul": 13, "customnetwork": 16, "customparametermodel": [18, 19], "d": [33, 40, 58, 62, 95, 98, 99, 103, 106, 116, 138], "d_": [33, 58, 62, 74, 103, 106], "d_1": 99, "d_2": 99, "d_n": 99, "d_out": [33, 58, 62], "dampen": [111, 112, 113], "data": [0, 7, 13, 15, 19, 30, 31, 33, 35, 39, 40, 45, 66, 70, 72, 73, 74, 85, 98, 101, 103, 106, 109, 110, 111, 112, 113, 116, 118, 124, 125, 126, 127, 133, 136, 137, 138, 139, 140, 141, 142, 143, 170, 175, 176, 177, 178, 179, 181], "dataset": 117, "ddot": 134, "debug": [20, 115, 123], "decai": [111, 112, 113], "decompos": [2, 10, 12], "decomposit": [1, 2, 6, 9, 10, 12], "deep": [0, 52, 64, 67, 108, 124], "deeper": [0, 67], "def": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 83, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 115, 117, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183], "default": [8, 12, 13, 14, 15, 16, 17, 18, 19, 22, 25, 29, 31, 32, 33, 36, 37, 38, 39, 40, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 69, 72, 73, 74, 76, 77, 78, 79, 80, 83, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 109, 110, 115, 120, 121, 122, 125, 137, 138, 139, 140, 141, 142, 143, 155, 156, 157, 164, 168, 169, 170, 171, 173, 175, 177, 180, 183], "defin": [0, 16, 17, 18, 19, 20, 64, 87, 88, 89, 90, 91, 101, 108, 111, 112, 113, 118, 121, 122, 135, 149, 168], "definit": [0, 2], "delai": 111, "delta": [29, 48, 69, 89], "delta_": [29, 69], "demonstr": [0, 1, 108, 118], "denomin": [52, 54, 55, 93, 94, 95, 96, 97, 98, 99, 112, 127], "denot": [7, 68, 72, 73, 74, 76, 77, 78, 79, 80, 168], "dens": 0, "dense1": 0, "dense2": 0, "densiti": [23, 64], "depend": [0, 7, 8, 19, 46, 47, 48, 50, 51, 72, 128, 138, 155, 157, 177, 181], "depth": [17, 33, 40, 58, 62, 74, 95, 98, 103, 106], "depthwis": [31, 32, 33], "deriv": [9, 10, 29, 64, 69, 70, 72, 73, 74, 83, 85], "descend": 12, "descent": [0, 111, 113], "describ": [3, 4], "deseri": 13, "design": [0, 1, 15, 17, 18, 19, 20, 22, 27, 67, 76, 108, 118], "desir": [13, 168, 170], "destin": 14, "det": [1, 5], "det_a": 3, "detail": [0, 110, 124, 130], "determin": [0, 1, 2, 3, 72, 73, 74, 102, 103, 105, 106, 112, 115, 120, 121, 122], "develop": [0, 108, 124], "diag": [9, 144], "diagon": [9, 10, 12, 138, 139, 167], "diagonaliz": 4, "dict": [14, 16, 18, 84, 109], "dictionari": [14, 15, 16, 18, 20, 109], "differ": [7, 17, 20, 29, 43, 69, 83, 90, 110, 116, 123, 124, 136, 143, 169, 179], "differenti": [0, 2, 11, 64, 108, 120, 121, 122, 125, 137, 140, 142], "dilat": [31, 32, 33, 72, 73, 74], "dilation_height": 35, "dilation_width": 35, "dim": [88, 91], "dimens": [3, 4, 6, 7, 10, 11, 12, 15, 29, 43, 45, 52, 54, 55, 69, 72, 73, 74, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 116, 118, 120, 125, 129, 155, 156, 157, 164, 167, 168, 169, 171, 173, 175, 177, 179, 180, 181, 182, 183], "dimension": [7, 9, 10, 12, 31, 32, 33, 56, 57, 58, 60, 61, 62, 72, 73, 74, 78, 79, 80, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 116, 129, 130, 134, 138, 153, 156, 164, 167, 169, 172, 176, 177, 179, 181], "direct": [4, 87, 88, 89, 90, 91, 111, 112, 113], "directli": [16, 17, 18, 19, 123, 124, 170], "disabl": [115, 117], "discontinu": 159, "discrep": [87, 88, 91], "discret": [121, 124], "distribut": [23, 29, 64, 69, 72, 73, 74, 76, 77, 78, 79, 80, 83, 85, 88, 91, 101, 102, 103, 120, 121, 122, 124, 156, 164, 167, 169, 180], "div": 144, "divid": [9, 17, 20, 29, 31, 32, 33, 69, 87, 88, 89, 90, 91, 127], "divis": [0, 9, 31, 32, 33, 76, 77, 78, 79, 80, 112, 127], "do": [9, 11, 13, 16, 17, 18, 19, 36, 37, 38, 39, 108, 115, 143, 167, 175], "document": [0, 110, 118, 124], "doe": [0, 7, 8, 9, 10, 12, 13, 16, 17, 18, 19, 20, 115, 117, 120, 121, 122, 123, 137, 138, 139, 140, 141, 142, 143, 178], "doesn": 117, "don": 117, "dot": [4, 7, 16, 17, 18, 19, 20, 99, 104, 105, 106, 129, 134, 144, 171, 173, 180, 183], "down": 108, "drawback": 22, "drawn": [120, 121, 122, 124], "drop": [76, 77, 78, 79, 80], "dropout": [23, 36, 38, 39, 40, 76, 78, 79, 80], "dropout1d": [41, 42, 81, 82], "dropout1dmodel": 78, "dropout2d": [41, 42, 81, 82], "dropout3d": [41, 42, 81, 82], "dropoutmodel": 77, "dtype": [13, 15, 125, 137, 138, 139, 140, 141, 142, 143, 170], "due": [7, 9, 31, 32, 66], "duplic": [16, 18], "dure": [0, 3, 4, 6, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 29, 36, 37, 38, 39, 40, 52, 54, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 111, 112, 113, 115, 117, 125, 126, 155, 156, 157, 164, 169], "dy": [25, 65], "dynam": [14, 17, 18, 19, 20, 99, 115], "dynamicnetwork": 17, "e": [3, 4, 6, 7, 10, 12, 13, 29, 68, 69, 76, 88, 109, 112, 139, 151, 153, 154, 161, 166, 167, 171], "each": [4, 7, 9, 10, 12, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 43, 45, 52, 54, 66, 69, 72, 73, 74, 76, 77, 78, 79, 80, 83, 85, 87, 88, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 112, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 156, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 171, 173, 175, 177, 180, 181, 183], "eas": 0, "easi": [0, 15, 16, 18], "easier": [16, 17, 20], "easili": [15, 19], "economi": 12, "edg": 175, "educ": 0, "effect": [16, 17, 18, 19, 20, 29, 31, 32, 33, 35, 63, 64, 66, 68, 69, 70, 93, 94, 95, 96, 97, 98, 99, 115, 116, 117, 173, 183], "effici": [0, 1, 6, 11, 35, 88, 108, 117], "eig": 5, "eigenvalu": [4, 10], "eigenvector": 4, "eigval": 4, "eigvec": 4, "either": [45, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 170], "element": [9, 10, 15, 19, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 66, 69, 72, 73, 74, 76, 77, 78, 79, 80, 87, 88, 89, 90, 91, 99, 101, 102, 103, 104, 105, 106, 116, 125, 126, 127, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 169, 172, 175, 177, 178, 179, 181], "elementwise_affin": 99, "elsewher": [104, 105, 106, 139], "elu": [24, 42, 71, 82], "elumodel": 63, "empti": [14, 20], "enabl": [0, 7, 12, 14, 15, 16, 17, 18, 19, 66, 72, 73, 74, 83, 85, 108, 110, 115, 117, 120, 121, 122, 125], "encapsul": [108, 125], "encod": [88, 91], "encourag": [77, 78, 79, 80, 87, 88, 91], "end": [8, 22, 25, 26, 27, 63, 65, 66, 67, 89, 90, 91, 101, 102, 103, 104, 105, 106, 131, 132, 134, 137, 145, 149, 155, 157, 159, 171, 175], "enforc": [14, 16, 18], "engin": 9, "enhanc": [16, 18], "ensur": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 29, 65, 69, 76, 77, 78, 79, 80, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 108, 109, 111, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 135, 156, 164, 169, 175], "enter": 117, "entir": [38, 39, 40, 79, 80, 124], "entri": 179, "entropi": [46, 47, 87, 88], "environ": 0, "ep": [46, 47, 52, 54, 55, 87, 88, 93, 94, 95, 96, 97, 98, 99, 112], "epsilon": [87, 88, 93, 94, 95, 96, 97, 98, 99, 112], "equal": [7, 101, 102, 103], "equat": [4, 9, 11], "equival": [130, 167, 176], "error": [4, 6, 14, 17, 18, 19, 20, 23, 48, 50, 64, 87, 88, 89, 90, 108, 109, 117, 118], "especi": [16, 18, 19, 68, 116, 117, 118, 123], "essenti": [0, 1, 7, 9, 32, 35, 108, 123, 124, 155], "estim": [90, 112], "etc": 87, "euclidean": 8, "evalu": [14, 52, 54, 76, 77, 78, 79, 80, 93, 94, 95, 96, 97, 98], "even": [117, 137, 138, 139, 140, 141, 142, 143], "evenli": 137, "everywher": 159, "exact": [14, 17, 168], "exactli": 20, "exampl": 130, "except": [159, 171, 173, 183], "exclus": [121, 137], "execut": [17, 117], "exist": [11, 16, 18, 20, 171], "exit": 117, "exp": [22, 27, 28, 30, 63, 67, 144], "expand": [35, 177, 181], "expect": [2, 17, 20, 76, 77, 78, 79, 80, 99, 108, 118], "experi": [0, 123, 124], "experiment": 124, "explan": [7, 9, 111], "explicit": 20, "explicitli": [16, 18], "explod": [67, 93, 94, 95], "explor": [108, 124], "expon": [7, 135], "exponenti": [22, 27, 29, 63, 67, 69, 76, 153], "extens": 110, "extern": 0, "extract": [35, 74, 101, 103, 138, 155, 157], "extrem": 9, "ey": 144, "f": [0, 18, 19, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 69], "facilit": [16, 20, 29, 69, 72, 73, 74, 108, 110], "factor": [22, 31, 32, 33, 35, 111, 112, 113, 118], "failur": [16, 17, 18, 19, 108], "fals": [12, 13, 14, 15, 36, 37, 38, 39, 40, 52, 54, 72, 73, 74, 83, 85, 112, 115, 120, 121, 122, 125, 137, 138, 139, 140, 141, 142, 143, 155, 156, 157, 164, 169, 170], "faster": 117, "fc": [17, 73, 74, 101, 102, 103, 104, 105, 106], "fc1": [16, 20, 64, 66, 67, 68, 70, 85], "fc2": [16, 20, 64, 66, 67, 68, 70, 85], "featur": [43, 45, 52, 74, 77, 78, 79, 80, 83, 85, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108], "feed": 125, "fill": [120, 121, 122, 140, 141, 142, 143], "filter": [31, 32, 33, 35, 73, 74], "filter_height": 35, "filter_s": 35, "filter_width": 35, "final": [16, 17, 18, 19, 20], "find": [11, 155, 157], "finish": 117, "first": [4, 17, 18, 43, 83, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 183], "fit": 108, "fix": [17, 175], "flatten": [20, 35, 134, 174, 176, 177], "flexibl": [0, 16, 17, 18, 19, 20, 108, 110, 118, 140, 141], "float": [13, 15, 22, 25, 36, 37, 38, 39, 40, 46, 47, 48, 52, 54, 55, 63, 65, 76, 77, 78, 79, 80, 87, 88, 89, 93, 94, 95, 96, 97, 98, 99, 111, 112, 113, 118, 125, 137, 149, 170], "float32": [13, 15, 125, 137, 138, 139, 140, 142, 170], "float64": [143, 170], "flow": [20, 64, 68, 70, 72, 73, 74, 83, 85, 115], "focu": 0, "focus": 0, "follow": [0, 1, 4, 10, 11, 12, 22, 23, 25, 26, 27, 28, 29, 30, 43, 45, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 111, 112, 113, 115, 118, 124, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 155, 157, 178], "form": [10, 134, 177, 181], "format": [88, 91], "formul": 23, "formula": [4, 12, 29, 69, 89, 111, 112, 113, 130, 169], "forward": [0, 13, 14, 108, 110, 111, 112, 113], "found": 0, "foundat": [14, 108, 110, 125], "four": 175, "frac": [2, 3, 4, 6, 7, 8, 9, 11, 12, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 43, 45, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 112, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183], "frame": 40, "framework": [0, 88, 91, 93, 94, 95, 96, 97, 98, 109, 110], "frequent": [88, 91], "from": [0, 7, 9, 13, 14, 15, 16, 17, 18, 19, 20, 35, 43, 52, 54, 72, 73, 74, 76, 77, 78, 79, 80, 83, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 108, 109, 111, 112, 113, 116, 117, 118, 120, 121, 122, 124, 125, 130, 131, 132, 136, 138, 155, 156, 157, 164, 169, 171, 173, 177, 179, 180, 181, 183], "full": 12, "full_matric": 12, "fulli": [1, 45, 85, 124], "function": [0, 1, 14, 16, 17, 18, 19, 20, 63, 64, 65, 66, 67, 68, 69, 70, 76, 77, 78, 79, 80, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 108, 110, 118, 124], "fundament": [0, 45, 85], "further": [0, 124, 156, 164, 169], "futur": 84, "g": [3, 4, 7, 10, 12, 76, 109, 112, 171], "g_t": 112, "gamma": [93, 94, 95, 96, 97, 98, 99], "gaussian": [23, 64], "gelu": [24, 42, 71, 82], "gelunetwork": 64, "gener": [9, 76, 77, 78, 79, 80, 97, 117, 120, 121, 122, 123, 124, 129, 137], "give": [0, 111, 112], "given": [3, 4, 7, 9, 10, 12, 35, 87, 88, 91, 109, 115, 141, 143], "global": [115, 117, 123, 124], "goal": [87, 88, 91], "grad": [13, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 35, 43, 45, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 109, 110, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183], "grad_output": 7, "gradient": [0, 1, 13, 15, 108, 109, 110, 111, 112, 113, 115, 117, 120, 121, 122, 137, 138, 139, 140, 141, 142, 143, 170], "graph": [0, 125, 137, 138, 139, 140, 141, 142, 143], "greater": 149, "group": [17, 31, 32, 33, 72, 73, 74, 109, 110], "group1": 17, "group2": 17, "guarante": 123, "h": [32, 33, 35, 39, 40, 57, 58, 61, 62, 94, 95, 97, 98, 103, 106], "h_": [32, 33, 57, 58, 61, 62, 73, 74, 102, 103, 105, 106], "h_out": [32, 33, 57, 58, 61, 62], "h_stack": 173, "ha": [4, 20, 31, 32, 33, 87, 88, 93, 94, 95, 96, 97, 98, 99, 109, 110, 130, 167, 171, 173, 180, 183], "half": 162, "hand": 11, "handl": [0, 9, 14, 16, 17, 18, 19, 20, 88, 91, 108, 110, 117], "hardwar": 0, "have": [3, 4, 6, 9, 10, 12, 15, 17, 19, 20, 32, 33, 108, 139, 140, 141, 142, 143, 155, 157, 171, 173, 179, 180, 183], "height": [32, 33, 35, 39, 40, 57, 58, 61, 62, 73, 74, 94, 95, 97, 98, 102, 103, 105, 106], "help": [0, 25, 27, 40, 63, 65, 67, 70, 93, 94, 95, 101, 102, 104, 105, 111, 115, 116, 117, 118], "henc": 178, "here": [2, 14, 43, 108, 110, 116, 117, 118, 124], "hidden": 17, "hidden_s": 17, "hierarch": [17, 20, 108], "hierarchi": 73, "hierarchicalnetwork": 17, "high": [0, 121], "higher": [88, 91, 111, 112, 113, 129, 130, 134, 153], "highest": 121, "highlight": [104, 105, 106], "hint": 118, "histori": [120, 121, 122, 137, 138, 139, 140, 141, 142, 143], "hold": [16, 17, 18, 19], "horizont": [173, 180], "hot": [88, 91], "how": [0, 17, 20, 108, 118], "howev": 13, "hstack": 174, "huber": [48, 89], "huber_loss": [42, 49], "huberloss": [82, 92], "huberregressionmodel": 89, "hyperbol": [30, 70, 151, 161, 166], "hyperparamet": [109, 111], "i": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183], "ideal": [0, 20], "ident": [6, 7, 82, 86, 123, 124, 139, 178], "identifi": 18, "ii": 167, "ij": [29, 69, 128, 129, 130, 134], "ik": [128, 129, 130], "ill": [3, 9], "imag": [32, 54, 73, 97], "imbal": [88, 91], "implement": [0, 9, 14, 35, 109, 110, 111, 112, 113, 173, 183], "impli": [72, 73], "import": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 37, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183], "improp": [17, 20, 124], "improv": [52, 64, 67, 70, 111, 112, 118], "in1_featur": [43, 83], "in2_featur": [43, 83], "in_channel": [17, 20, 72, 73, 74, 94, 95, 101, 102, 103, 104, 105, 106, 108], "in_featur": [16, 17, 20, 45, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 76, 77, 78, 83, 85, 87, 88, 89, 90, 91, 93, 96, 99, 101, 102, 103, 104, 105, 106], "includ": [0, 1, 7, 8, 14, 15, 17, 19, 20, 108, 109, 110, 118, 124, 130, 175], "inclus": [15, 18, 121], "incom": [45, 85], "incorpor": [12, 64], "increas": [31, 32, 33, 35, 116, 173, 183], "independ": [17, 31, 32, 33, 76, 77, 78, 79, 80, 99, 130], "index": [116, 137, 138, 139, 178], "indic": [15, 17, 19, 20, 47, 51, 88, 91, 101, 115, 125], "individu": [17, 20, 89, 99, 110], "induc": [27, 67], "inf": 165, "infer": [17, 20, 117], "infin": [10, 12], "inform": [0, 13, 110, 117], "infti": 8, "inherit": [111, 112, 113], "initi": [13, 15, 16, 17, 18, 19, 20, 72, 73, 74, 83, 85, 87, 88, 89, 90, 91, 93, 94, 95, 99, 108, 109, 110, 111, 112, 113, 120, 123, 124, 137, 139, 140, 141, 142, 143, 170], "inner": [0, 128, 144], "input": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 117, 118, 124, 125, 126, 128, 129, 130, 134, 138, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183], "input1": 83, "input2": 83, "input_": [22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62], "input_1": 43, "input_2": 43, "input_data": [63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 99, 101, 102, 103, 104, 105, 106], "input_s": [17, 19, 69, 88, 91], "input_tensor": [0, 13, 16, 17, 18, 19, 20, 29, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108], "insid": [115, 117], "insight": 0, "inspect": [14, 15, 20, 109], "instabl": [9, 111, 112, 113], "instal": 0, "instanc": [0, 14, 15, 16, 18, 19, 20, 54, 96, 97, 98, 99, 109, 170, 177, 181], "instance_norm": [42, 53, 96, 97, 98], "instancenorm1d": [82, 100], "instancenorm1dmodel": 96, "instancenorm2d": [82, 100], "instancenorm3d": [82, 100], "instead": [0, 16, 17, 18, 19, 20, 117, 118], "int": [7, 8, 13, 15, 29, 31, 32, 33, 35, 55, 56, 57, 58, 60, 61, 62, 69, 72, 73, 74, 83, 85, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 120, 121, 122, 123, 125, 137, 138, 139, 140, 142, 149, 155, 156, 157, 164, 168, 169, 170, 171, 175, 177, 178, 179, 180, 181, 182], "integ": [7, 31, 32, 33, 72, 73, 74, 99, 102, 103, 104, 105, 106, 118, 121, 122, 124, 140, 142, 156, 164, 168, 169, 175, 177, 178, 181], "integr": [1, 15, 17, 19, 20, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 83, 85, 101, 102, 103, 104, 105, 106], "intend": [13, 18, 19], "intens": 9, "intent": 118, "interact": [43, 83, 108, 124], "interfac": [14, 17, 110], "interfer": [115, 117], "intermedi": 9, "intern": [16, 17, 18, 19, 20, 88, 91, 108], "interpret": [29, 69, 118, 171], "interv": [120, 137], "introduc": [26, 64, 66, 68, 70, 76, 77, 78, 79, 80], "introspect": 20, "intuit": [0, 16, 18, 108], "inv": 5, "inv_a": 6, "invari": [102, 105], "invers": [0, 3, 6, 7, 9, 146, 147, 148], "invert": [3, 6, 7, 11], "involv": [2, 3, 4, 6, 9, 10, 12, 22, 23, 25, 26, 27, 28, 30, 43, 45, 72, 73, 74, 83, 85, 118, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 143, 153, 154, 155, 157, 160, 162, 175, 177, 181], "is_leaf": 125, "issu": [67, 93, 94, 95], "item": 90, "iter": [13, 14, 17, 19, 109, 111, 112, 113, 137], "ith": [29, 69], "its": [7, 9, 13, 16, 17, 18, 19, 31, 32, 33, 35, 64, 66, 104, 105, 106, 108, 109, 115, 116, 117, 137, 142, 155, 157, 170, 178], "itself": [2, 7, 16, 17, 18, 19], "j": [29, 69, 93, 94, 95, 96, 97, 98, 101, 102, 104, 105, 180], "jk": 129, "join": 171, "k": [7, 31, 72, 88, 94, 95, 97, 98, 101, 104, 105, 128, 129, 138, 139, 171], "k_d": [33, 74, 103, 106], "k_h": [32, 33, 73, 74, 102, 103, 106], "k_w": [32, 33, 73, 74, 102, 103, 106], "keep": [14, 66, 117, 178], "keep_grad": [15, 120, 121, 122, 125, 137, 138, 139, 140, 141, 142, 143, 170], "keep_var": 14, "keepdim": [155, 156, 157, 164, 169], "kei": [14, 16, 18, 20, 109], "kept": [156, 164, 169], "kernel": [31, 32, 33, 35, 56, 57, 58, 60, 61, 62, 72, 73, 74, 102, 103, 106], "kernel_s": [17, 20, 56, 57, 58, 60, 61, 62, 72, 73, 74, 94, 95, 101, 102, 103, 104, 105, 106], "keyerror": 14, "keyword": [14, 84], "kj": [128, 130], "kroneck": [29, 69], "kwarg": [14, 84], "l": [2, 9, 31, 38, 56, 60, 76, 77, 78, 79, 80, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99], "l2": [111, 112, 113], "l_": [31, 56, 60, 72, 101, 104], "l_out": [31, 56, 60], "label": [87, 88, 91], "lambd": 111, "lambda": [4, 27, 67, 111], "lambda_1": 4, "lambda_2": 4, "lambda_i": 4, "lambda_n": 4, "languag": [72, 83, 101, 104], "larg": [9, 89, 108, 111, 112, 113, 117], "larger": [16, 18, 31, 32, 33, 35, 111, 131, 175], "largest": 155, "last": [29, 55, 69, 129, 130, 171], "layer": [0, 14, 16, 17, 20, 29, 45, 52, 54, 55, 69, 72, 73, 74, 83, 84, 85, 91, 99, 101, 102, 103, 104, 105, 106, 108, 124, 175], "layer_group": 17, "layer_norm": [42, 53, 99], "layer_sequ": [17, 20], "layernorm": [82, 100], "layernormmodel": 99, "lead": [17, 20, 64, 96, 97, 98, 99, 111, 112, 124], "leaf": 125, "leaki": [25, 65], "leaky_relu": [24, 42, 65], "leakyrelu": [71, 82], "learn": [0, 7, 9, 16, 17, 18, 19, 26, 29, 63, 65, 66, 69, 72, 73, 74, 77, 78, 79, 80, 83, 85, 108, 109, 111, 112, 113, 116, 123], "learnabl": [13, 14, 15, 52, 54, 55, 72, 73, 74, 83, 85, 93, 94, 95, 96, 97, 98, 99, 108], "least": [9, 10, 12, 167], "left": [7, 8, 9, 12, 23, 29, 64, 69, 87, 88, 89, 91, 93, 94, 95, 96, 97, 98, 99, 104, 105, 106], "length": [17, 31, 38, 56, 60, 72, 84, 93, 96, 101, 104, 175], "leq": [89, 135, 149], "less": [22, 25, 48, 63, 65, 88, 89, 91, 149], "let": 4, "level": 0, "leverag": [11, 108], "librari": [0, 1, 14, 108, 109, 110, 118, 124, 125], "lightweight": 0, "like": [0, 13, 14, 17, 20, 31, 67, 76, 93, 94, 95, 96, 97, 98, 115, 116, 118, 170], "likelihood": [51, 88, 91], "limit": 149, "linalg": [0, 5], "linalgerror": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12], "linear": [0, 1, 2, 9, 10, 11, 16, 17, 18, 20, 22, 23, 25, 26, 27, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 76, 77, 78, 83, 84, 87, 88, 89, 90, 91, 93, 96, 99, 101, 102, 103, 104, 105, 106, 139], "linearli": 89, "list": [13, 15, 16, 17, 18, 19, 55, 84, 99, 109, 118, 121, 125, 138, 140, 141, 142, 143, 168, 178, 179, 182], "liter": [46, 47, 48, 50, 51, 72, 73, 74, 87, 88, 89, 90, 91], "ln": 135, "load": [13, 14, 15, 109, 110, 111, 112, 113], "load_state_dict": [14, 109, 110, 111, 112, 113], "local": [35, 72], "log": [51, 87, 88, 91, 144], "log_softmax": 91, "logarithm": [135, 153, 154], "logic": [108, 109], "logit": [29, 69, 88], "logsoftmax": [88, 91], "long": 168, "loop": [17, 110, 111, 112, 113], "loss": [0, 9, 16, 17, 18, 19, 20, 29, 46, 47, 48, 50, 51, 63, 64, 65, 66, 67, 68, 69, 70, 76, 77, 78, 79, 80, 84, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 109, 110, 111, 112, 113], "low": [0, 121], "lower": [2, 111, 112, 113], "lowest": 121, "lr": [109, 110, 111, 112, 113], "lu": 6, "lucid": [5, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 109, 111, 112, 113, 119, 144, 174], "m": [16, 17, 20, 102, 103, 105, 106, 139], "machin": [0, 9, 116, 123], "magnitud": 112, "mai": [0, 4, 6, 9, 17, 19, 89, 111, 112, 113, 117, 124], "main": [0, 10, 17, 138, 139], "maintain": [9, 13, 14, 16, 17, 18, 20, 27, 63, 64, 67, 76, 77, 78, 79, 80, 93, 94, 95, 96, 97, 98, 112], "make": [0, 17, 20, 68, 88, 89, 99, 102, 105, 108, 116, 124, 125, 130], "manag": [0, 14, 16, 17, 18, 19, 20, 108, 110, 115, 117, 124], "manhattan": 8, "manipul": [0, 16, 18], "manner": [17, 20], "manual": [46, 47, 51, 87, 88, 91, 117], "map": [14, 28, 30, 68, 70], "mask": [13, 76, 77, 78, 79, 80], "match": [11, 14, 17, 20, 46, 48, 50, 55, 109, 153, 177, 178, 181, 182], "math": [150, 160, 165], "mathbf": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 43, 45, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 128, 129, 130, 134, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183], "mathcal": [76, 77, 78, 79, 80, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99], "mathemat": 6, "mathrm": 9, "matmul": 144, "matric": [1, 3, 4, 6, 9, 11, 12, 128, 129, 130, 139], "matrix": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 35, 43, 84, 85, 108, 128], "matrix_pow": 5, "max": [8, 26, 60, 61, 62, 66, 104, 105, 106, 131, 144, 149], "max_pool": [104, 105, 106], "max_pool1d": [42, 59], "max_pool2d": [42, 59], "max_pool3d": [42, 59], "max_valu": 149, "maximum": [8, 66, 104, 105, 106, 144, 149, 155], "maxpool1d": [82, 107], "maxpool1dmodel": 104, "maxpool2d": [17, 20, 73, 82, 107], "maxpool2dmodel": 105, "maxpool3d": [74, 82, 107], "maxpool3dmodel": 106, "mean": [10, 13, 27, 31, 32, 33, 36, 46, 47, 48, 50, 51, 52, 54, 63, 64, 65, 66, 67, 68, 70, 74, 76, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 112, 115, 122, 144, 149, 153, 154, 155, 157, 160, 162, 164, 167, 168, 169], "meaning": [20, 118], "measur": [87, 88, 90, 91], "mechan": [0, 19, 43], "membership": 87, "memori": 117, "method": [0, 1, 6, 16, 17, 18, 19, 20, 46, 47, 48, 50, 51, 87, 88, 89, 90, 91, 110, 111, 112, 113, 124], "middl": 116, "might": 108, "min": [132, 144, 149], "min_valu": 149, "mind": [0, 17, 20, 117], "minim": [0, 20, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 110], "minimalist": 0, "minimum": [144, 149, 157], "minu": 68, "mirror": [141, 143], "mismatch": [14, 108, 109], "miss": [14, 108], "mitig": [25, 63, 65, 67, 93, 94, 95], "mode": [0, 40, 52, 54, 76, 77, 78, 79, 80, 175], "model": [0, 7, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 29, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 99, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 117, 124], "modif": [20, 117], "modifi": [16, 17, 18, 19, 76, 115, 117, 123, 173, 183], "modul": [0, 13, 15, 16, 17, 18, 19, 20, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 118, 124], "modular": [0, 14, 17, 20, 108], "moduledict": [17, 18, 20, 21], "modulelist": [19, 20, 21], "momentum": [52, 54, 93, 94, 95, 96, 97, 98, 111, 112, 113], "moor": 9, "more": [0, 4, 16, 17, 20, 63, 77, 78, 79, 80, 108, 109, 110, 111, 112, 113, 122, 130, 167, 180], "most": [1, 105], "move": [111, 112], "mse": [48, 50, 89, 90], "mse_loss": [42, 49], "mseloss": [82, 92], "mu": [93, 94, 95, 96, 97, 98, 99, 169], "mu_i": [96, 97, 98], "mul": 144, "multi": [29, 47, 51, 69, 88, 91, 156, 164, 169], "multidimension": 120, "multipl": [0, 1, 7, 11, 18, 19, 20, 35, 76, 77, 78, 79, 80, 88, 91, 108, 116, 120, 121, 122, 128, 133], "multipli": [7, 19, 45, 85, 133, 134], "must": [2, 3, 4, 6, 7, 10, 11, 12, 14, 16, 17, 18, 19, 20, 55, 76, 77, 78, 79, 80, 91, 109, 117, 167, 171, 173, 175, 177, 178, 180, 181, 183], "mymodel": [14, 15, 108, 110, 111, 112, 113], "myoptim": [109, 110], "n": [7, 8, 16, 17, 20, 31, 32, 33, 35, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 72, 73, 74, 79, 80, 83, 85, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 139, 156, 167, 169], "n1": 8, "name": [14, 16, 18, 20, 118], "nan": [10, 12], "natur": [9, 72, 83, 101, 104, 135, 153, 154], "ndarrai": [13, 15, 118, 125, 138, 141, 143, 170], "ndim": [10, 12, 15, 125], "ne": 7, "necessari": [9, 117, 173, 183], "need": [17, 18, 19, 29, 83, 108, 117], "neg": [7, 9, 12, 22, 51, 63, 65, 66, 67, 88, 91, 171], "negative_slop": [25, 65], "neglect": 19, "neq": 8, "nest": [17, 20, 108], "network": [0, 13, 14, 15, 16, 17, 18, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 33, 43, 45, 52, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 124, 125, 137, 140, 142, 155, 157, 175], "neural": [0, 13, 14, 15, 16, 17, 18, 19, 20, 23, 26, 27, 28, 29, 30, 31, 32, 33, 43, 45, 52, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 124, 125, 137, 140, 142, 155, 157, 175], "neuralnetwork": 66, "neuron": 65, "new": [14, 15, 22, 23, 25, 26, 27, 28, 30, 43, 45, 109, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 170, 171, 173, 175, 177, 178, 180, 181, 182, 183], "next": 20, "nll": 51, "nll_loss": [42, 49], "nllloss": [82, 92], "nn": [0, 21, 24, 34, 41, 44, 49, 53, 59, 71, 75, 81, 82, 86, 92, 100, 107, 109, 110, 111, 112, 113], "no_grad": 115, "node": 125, "nois": [12, 124], "non": [4, 7, 9, 12, 19, 23, 25, 26, 63, 64, 65, 66, 67, 68, 70, 76, 77, 78, 79, 80, 117, 135, 149], "none": [14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 109, 110, 111, 112, 113, 116, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 139, 141, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183], "norm": [1, 5], "normal": [23, 27, 29, 30, 52, 54, 55, 64, 67, 69, 76, 93, 94, 95, 96, 97, 98, 99, 112, 122, 124], "normalized_shap": [55, 99], "note": [31, 76], "noth": [36, 37, 38, 39], "notimplementederror": [14, 109], "notin": 149, "np": [13, 15, 88, 91, 118, 125, 130, 137, 138, 139, 140, 142, 143, 154, 170], "num_class": [69, 88, 91], "num_featur": [20, 93, 94, 95, 96, 97, 98], "num_paramet": 19, "number": [3, 4, 6, 9, 11, 12, 15, 17, 19, 20, 31, 32, 33, 35, 38, 39, 40, 43, 45, 47, 51, 52, 54, 68, 72, 73, 74, 83, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106, 111, 120, 123, 125, 135, 137, 139, 155, 156, 157, 168, 169, 171, 173, 175, 177, 178, 179, 181, 183], "numer": [6, 9, 46, 47, 52, 54, 55, 87, 88, 93, 94, 95, 96, 97, 98, 99, 112, 118, 127, 137, 140, 142], "numpi": [0, 13, 15, 88, 91, 118, 125, 130, 138, 139, 140, 142, 154, 167, 170, 175, 177, 181], "o": [103, 106, 140, 141], "object": [1, 14, 18, 19, 90, 108, 117, 126, 127, 131, 132, 133, 136, 170], "occur": [117, 171], "occurr": 7, "odot": [76, 77, 78, 79, 80], "off": 115, "offer": [0, 108, 110, 124], "offset": 139, "often": [7, 31, 32, 33, 35, 88, 91, 137, 142], "onc": 117, "one": [19, 20, 29, 31, 45, 56, 60, 67, 68, 69, 72, 78, 88, 91, 93, 96, 101, 104, 109, 116, 118, 122, 136, 141, 155, 157, 172, 176, 180], "ones": [43, 45, 72, 73, 74, 85, 93, 94, 95, 96, 97, 98, 99, 108, 139, 141, 144], "ones_lik": 144, "onli": [0, 66, 76, 77, 78, 79, 80, 87, 88, 91, 93, 94, 95, 96, 97, 98, 99, 104, 105, 106, 115, 137, 149, 155, 157, 167, 175, 176, 178, 179], "onto": [10, 12], "oper": [0, 1, 6, 9, 13, 14, 17, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 35, 40, 43, 45, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 101, 102, 103, 104, 105, 106, 108, 115, 116, 117, 118, 120, 121, 122, 123, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 140, 142, 153, 154, 155, 156, 157, 160, 162, 164, 167, 169, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183], "operatornam": [7, 9], "opposit": 111, "optim": [0, 1, 7, 9, 10, 12, 13, 15, 18, 19, 35, 72, 73, 74, 108, 117], "optimizer_st": [109, 110, 111, 112, 113], "option": [8, 12, 13, 14, 15, 16, 17, 18, 19, 22, 25, 29, 32, 33, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 65, 69, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 109, 111, 112, 113, 120, 121, 122, 125, 137, 138, 139, 140, 141, 142, 143, 155, 156, 157, 164, 168, 169, 170, 171, 177, 179, 180], "ord": 8, "order": [8, 12, 16, 17, 18, 19, 20, 168], "ordered_dict": 20, "ordereddict": [14, 16, 17, 20], "organ": [16, 17, 18, 20], "origin": [36, 70, 175, 176, 177, 178, 181, 182], "orthogon": [9, 10, 12], "orthonorm": 10, "oscil": [111, 112, 113], "other": [0, 6, 13, 14, 17, 20, 76, 108, 109, 115, 117, 124, 125, 137, 140, 142, 167], "otherwis": [22, 25, 26, 27, 29, 63, 65, 66, 67, 69, 77, 78, 79, 80, 89, 101, 102, 103, 104, 105, 106, 109, 131, 132, 155, 157], "otim": [9, 43, 83], "out": [22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 52, 54, 55, 56, 57, 58, 60, 61, 62, 72, 73, 74, 76, 77, 78, 79, 80, 101, 102, 103, 104, 105, 106, 111, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183], "out_channel": [17, 20, 72, 73, 74, 94, 95, 101, 102, 103, 104, 105, 106, 108], "out_featur": [16, 17, 20, 43, 45, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 76, 77, 78, 83, 85, 87, 88, 89, 90, 91, 93, 96, 99, 101, 102, 103, 104, 105, 106], "outer": 144, "outlier": [48, 89], "output": [0, 7, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 36, 37, 38, 39, 40, 43, 45, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 115, 116, 117, 118, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 138, 139, 140, 142, 143, 153, 154, 155, 156, 157, 160, 162, 164, 167, 168, 169, 175, 177, 181], "output_height": 35, "output_lay": [17, 20], "output_s": 17, "output_width": 35, "over": [1, 14, 17, 19, 29, 69, 72, 73, 74, 88, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 111, 120, 155, 156, 157, 164, 167, 169], "overdetermin": 9, "overfit": [37, 40, 77, 78, 79, 80, 111, 112, 113], "overridden": [14, 109], "overwrit": [16, 18], "own": [16, 17, 18, 19, 31, 32, 33, 108], "p": [8, 9, 15, 18, 19, 36, 37, 38, 39, 40, 76, 77, 78, 79, 80, 101, 104, 105], "p_d": [103, 106], "p_h": [102, 103, 106], "p_w": [102, 103, 106], "packag": [1, 108, 110, 123, 124], "pad": [17, 20, 31, 32, 33, 35, 56, 57, 58, 60, 61, 62, 72, 73, 74, 94, 95, 101, 102, 103, 104, 105, 106, 174], "pad_after_dim1": 175, "pad_after_dim2": 175, "pad_before_dim1": 175, "pad_before_dim2": 175, "pad_width": 175, "padding_height": 35, "padding_width": 35, "pair": 43, "param": [14, 15, 18, 19, 109, 110, 111, 112, 113], "param1": 14, "param_dict": 18, "param_group": [109, 110], "param_groups_setup": 109, "param_list": 19, "paramet": [0, 14, 108, 109, 110, 118, 124], "parameterdict": 21, "parameterlist": 21, "parent": 108, "part": [13, 14, 108, 115, 117, 124, 137, 138, 139, 140, 141, 142, 143], "partial": [2, 3, 4, 6, 7, 8, 9, 11, 12, 22, 23, 25, 26, 27, 28, 29, 30, 43, 45, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183], "particip": 15, "particular": [16, 18], "particularli": [0, 9, 17, 18, 19, 20, 29, 45, 69, 85, 88, 91, 96, 97, 98, 99, 115], "pass": [0, 9, 14, 15, 16, 17, 18, 19, 20, 63, 64, 65, 66, 67, 68, 70, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 99, 101, 102, 103, 104, 105, 106, 108, 118, 125, 156, 164, 167, 168, 169, 171, 173, 176, 178, 179, 183], "past": [111, 112], "patch": [35, 102], "pattern": [26, 66, 72, 73, 74], "penal": [111, 112, 113], "penros": 9, "per": [96, 97, 98, 99], "perform": [0, 1, 2, 9, 14, 15, 19, 23, 31, 32, 33, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 109, 115, 117, 123, 124, 126, 127, 130, 133, 136, 153, 155, 157, 164, 168], "permut": 168, "persist": [13, 120, 121, 122], "perturb": [4, 11, 12], "phi": [23, 64], "pi": [23, 64, 150, 160, 165], "pinv": 5, "pipelin": 124, "placehold": [14, 84], "plai": [118, 124], "point": 115, "pool": [56, 57, 58, 60, 61, 62, 73, 74, 101, 102, 103, 104, 105, 106, 155, 157], "pool1": 20, "pool2": 20, "poorli": 6, "popul": 14, "pose": 9, "posit": [2, 7, 14, 20, 63, 65, 66, 67, 101, 102, 103, 104, 105, 106, 116, 135, 177, 181], "possibl": 0, "potenti": [9, 84, 112, 179], "power": [0, 7, 116, 117, 144], "practic": [9, 88, 91], "preced": [15, 125], "predefin": [17, 67], "predict": [87, 88, 90, 91], "prefix": 14, "prepar": [116, 175, 177, 181], "prepend": 14, "preprocess": [35, 124], "present": [87, 88, 89, 91, 93, 94, 95, 96, 97, 98, 99, 102], "preserv": [36, 76, 137, 138, 139, 140, 141, 142, 143, 156, 164, 169], "prevent": [16, 17, 18, 19, 20, 37, 40, 77, 78, 79, 80, 87, 88, 111, 112, 113, 117], "previou": [111, 117], "primari": [0, 118], "primarili": 20, "print": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 115, 116, 117, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183], "probabilist": 124, "probabl": [23, 29, 36, 37, 38, 39, 40, 46, 64, 69, 76, 77, 78, 79, 80, 87, 88, 91], "problem": [9, 10, 12, 25, 63, 65], "process": [7, 10, 12, 19, 31, 32, 33, 54, 67, 70, 72, 74, 83, 93, 94, 95, 96, 97, 98, 99, 101, 103, 104, 106, 111, 118], "produc": [72, 73, 74, 123, 124], "product": [0, 10, 12, 68, 83, 99, 108, 128, 129, 133, 134], "program": [115, 124], "project": [10, 12], "projector": 9, "promin": [101, 103, 104, 105, 106], "promot": [20, 88, 91, 108], "propag": [3, 4, 6, 9, 10, 11, 12, 14, 20, 43, 45, 102, 103, 112, 128, 129, 130, 134, 155, 157, 175, 178, 182], "properli": [19, 29, 69, 108], "properti": [1, 3, 6, 7, 23, 27, 36, 64, 67, 76], "proport": 169, "provid": [0, 1, 14, 16, 17, 18, 19, 23, 45, 87, 88, 89, 91, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 115, 117, 118, 123, 124, 125, 130, 137, 141, 155, 157, 168, 170, 177, 179, 181], "pseudo": [6, 9], "purpos": [120, 137, 140, 142], "python": 118, "pytorch": 170, "q": 10, "qr": 5, "quad": [9, 87, 88, 89, 90, 91, 104, 105, 106, 126, 127, 131, 132, 133, 136], "quadrat": 89, "quotient": 127, "r": 10, "rais": [14, 108, 109, 135], "rand": [119, 124], "randint": [119, 124], "randn": [108, 119, 123, 124], "random_integ": 124, "random_tensor": 124, "randomli": [36, 37, 38, 39, 40, 76, 77, 78, 79, 80], "rang": [1, 19, 28, 30, 31, 32, 47, 51, 68, 70, 111, 112, 113, 121, 146, 147, 149], "rank": 9, "rate": [109, 111, 112, 113], "rather": [18, 19, 178], "ravel": 174, "raw": [29, 69, 88, 118], "re": [15, 117], "readabl": [16, 17, 18, 20, 108, 118], "readi": 0, "real": [9, 12, 68], "rearrang": 35, "receiv": [104, 105, 106, 175], "recent": 112, "reciproc": [9, 144, 154, 162], "recognit": 73, "rectangular": 139, "rectifi": [25, 26, 65, 66], "recurr": [17, 99], "recurs": 14, "reduc": [93, 94, 95, 96, 97, 98, 101, 102, 103, 104, 105, 106, 117, 118, 155, 156, 157, 164, 169], "reduct": [12, 46, 47, 48, 50, 51, 87, 88, 89, 90, 91, 155, 157], "reevalu": 109, "refer": [0, 14, 124, 138, 139, 171], "reflect": 115, "regardless": [9, 176], "region": [33, 175], "regist": [13, 14, 15, 19, 108], "register_buff": 13, "register_paramet": 14, "registr": [14, 108], "regress": [50, 89, 90], "regular": [9, 40, 77, 78, 79, 80, 111, 112, 113], "relat": [117, 139, 140], "relev": [111, 112, 113], "reli": 117, "reliant": [77, 78, 79, 80], "relu": [0, 16, 17, 18, 20, 22, 24, 25, 42, 63, 65, 71, 72, 73, 74, 82, 83, 84, 85], "relu1": 20, "relu2": 20, "relu3": 20, "remain": [13, 55, 76, 77, 78, 79, 80], "rememb": 124, "remov": 179, "rep": 181, "repeat": [174, 181], "repetit": [177, 181], "replac": 124, "repres": [6, 8, 12, 14, 15, 20, 43, 45, 52, 54, 55, 72, 73, 74, 83, 85, 88, 91, 99, 109, 110, 111, 112, 113, 118, 126, 127, 133, 136, 138, 156, 167, 168, 169], "represent": [102, 105, 109], "reproduc": [120, 121, 122, 123, 124], "requir": [0, 13, 16, 20, 22, 23, 25, 26, 27, 28, 30, 43, 45, 84, 88, 91, 108, 115, 117, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183], "requires_grad": [13, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 35, 43, 45, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183], "rescal": [46, 47, 51, 87, 88, 91], "research": 108, "reset": [15, 123, 125], "reshap": [0, 45, 73, 74, 116, 118, 174, 176], "resourc": 117, "respect": [2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 43, 45, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 111, 112, 113, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 149, 153, 154, 155, 156, 157, 160, 162, 164, 167, 168, 169, 175, 177, 181], "respons": [16, 110], "restor": 117, "restructur": 178, "result": [2, 6, 7, 9, 14, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 43, 45, 56, 57, 58, 60, 61, 62, 69, 108, 109, 115, 117, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 170, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183], "resum": 110, "retain": [15, 125, 137, 142, 155, 156, 157, 164, 169], "retriev": [16, 18, 19], "return": [0, 13, 14, 16, 17, 18, 19, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 118], "reusabl": [20, 108], "revers": [0, 20, 168], "revert": 117, "right": [7, 8, 9, 11, 12, 23, 29, 64, 69, 87, 88, 89, 91, 93, 94, 95, 96, 97, 98, 99, 104, 105, 106], "risk": 118, "rmsprop": 114, "robust": [76, 77, 78, 79, 80, 89, 108], "role": [118, 124], "root": [112, 162], "rout": [104, 105, 106], "routin": 0, "row": [3, 4, 6, 11, 45, 139, 183], "rule": [6, 7, 116, 126, 127, 131, 132, 133, 135, 136], "run": [0, 13, 52, 54, 93, 94, 95, 96, 97, 98, 117, 123, 124], "running_mean": [13, 52, 54, 93, 94, 95, 96, 97, 98], "running_var": [52, 54, 93, 94, 95, 96, 97, 98], "runtim": [17, 20, 108], "s_d": [103, 106], "s_h": [102, 103, 106], "s_w": [102, 103, 106], "same": [3, 4, 6, 7, 11, 29, 36, 37, 38, 39, 40, 52, 54, 55, 72, 73, 74, 76, 77, 78, 79, 80, 84, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 123, 124, 130, 141, 143, 153, 155, 156, 157, 171, 173, 176, 178, 179, 180, 183], "sampl": [0, 76, 77, 78, 79, 80, 83, 85, 88, 91, 99, 122, 124], "satisfi": [2, 4, 11], "satur": 63, "save": [13, 15, 109, 110, 111, 112, 113, 117], "scalabl": 108, "scalar": [3, 8, 46, 47, 48, 50, 51, 118], "scale": [4, 9, 22, 27, 29, 52, 54, 55, 63, 65, 67, 68, 69, 70, 76, 77, 78, 79, 80, 88, 93, 94, 95, 96, 97, 98, 99, 111, 118, 124, 169], "scenario": [18, 19, 99], "schedul": 111, "scientif": 116, "score": [29, 88], "scratch": 0, "script": 124, "seamless": [108, 124], "seamlessli": [1, 15, 17, 20, 108, 118], "second": [4, 17, 18, 43, 83, 116, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 173], "section": 130, "see": [0, 130], "seed": [119, 120, 121, 122, 124], "select": [104, 106, 164], "self": [0, 13, 14, 15, 16, 17, 18, 19, 27, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 83, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113], "selu": [24, 36, 42, 71, 76, 82], "selunetwork": 67, "sensit": [48, 89, 93, 94, 95], "separ": [31, 32, 33, 96, 97, 98], "sequenc": [7, 16, 18, 31, 137, 171, 173, 175, 177, 180, 181, 183], "sequenti": [16, 17, 21, 31, 84], "seri": [31, 72, 101, 104], "serial": [13, 14, 110], "serv": [14, 16, 17, 18, 19, 20, 108], "set": [15, 19, 31, 32, 33, 65, 66, 67, 72, 73, 74, 76, 79, 80, 83, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 109, 112, 120, 121, 122, 123, 124, 125, 137, 142, 143, 149, 155, 157, 170], "setup": 0, "sever": [9, 72, 73, 74, 101, 102, 103, 104, 105, 106, 117], "sgd": [0, 111], "sgn": 8, "shape": [0, 3, 4, 6, 7, 9, 13, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 116, 118, 120, 121, 122, 124, 125, 128, 139, 140, 141, 142, 143, 149, 154, 155, 156, 157, 160, 162, 164, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 183], "shapelik": 121, "shift": [52, 54, 55, 93, 94, 95, 96, 97, 98, 99], "shorthand": 130, "should": [13, 117, 120, 121, 122, 146, 147, 167, 175], "show": 115, "showcas": 0, "shown": 123, "side": [11, 17, 20, 31, 32, 33, 56, 57, 58, 60, 61, 62, 72, 73, 74, 101, 102, 103, 104, 105, 106, 117], "sigma": [9, 68, 93, 94, 95, 96, 97, 98, 99, 168], "sigma_i": 9, "sigmoid": [24, 42, 71, 82, 87], "sigmoidnetwork": 68, "sign": [7, 89, 144], "signal": [72, 73, 74, 93, 96, 101, 102, 103, 104, 105, 106], "signific": 117, "sim": [76, 77, 78, 79, 80], "similar": [0, 130, 154, 170, 175], "similarli": [12, 167], "simpl": [0, 20, 31, 32, 33, 43, 45, 56, 57, 58, 60, 61, 62, 64, 66, 67, 68, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 115, 116, 128, 129, 134], "simplebinaryclassificationmodel": 87, "simpleclassificationmodel": [88, 91], "simplegelumodel": 64, "simpleleakyrelumodel": 65, "simplemodel": [0, 85], "simpleregressionmodel": 90, "simplerelumodel": 66, "simpleselumodel": 67, "simplesigmoidmodel": 68, "simpletanhmodel": 70, "simpli": [115, 167, 168, 178], "simplic": 66, "simplifi": 20, "sin": [144, 150], "sinc": [7, 10, 16, 17, 18, 19, 31, 32, 33, 115, 117, 122], "sine": [147, 160, 161], "singl": [7, 10, 12, 29, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 88, 99, 102, 103, 104, 105, 106, 109, 118, 171, 179], "singleton": 99, "singular": [3, 6, 7, 9, 11, 12], "sinh": [144, 151, 166], "size": [12, 15, 17, 31, 32, 33, 35, 38, 39, 40, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 72, 73, 74, 83, 85, 87, 88, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 111, 112, 113, 121, 124, 125, 155, 156, 157, 164, 169, 171, 173, 179, 182, 183], "skip": 117, "slice": [43, 167], "slide": [35, 101, 103, 104, 106], "slope": [25, 63, 65], "small": [9, 25, 46, 47, 52, 54, 55, 65, 67, 87, 88, 89, 93, 94, 95, 96, 97, 98, 99, 102, 105, 112], "smaller": [17, 20, 108, 132], "smallest": 157, "smooth": [23, 63, 64, 111, 112], "smoother": 111, "so": [16, 17, 18, 19, 108], "softmax": [24, 42, 71, 82, 88], "softmaxmodel": 69, "solut": [9, 11], "solv": [1, 2, 5, 9, 10, 12], "solver": 1, "some": [22, 37, 76, 77, 78, 93, 94, 95, 96, 97, 98, 117, 118], "sometim": 116, "sophist": [17, 20], "sourc": 124, "space": [4, 10, 12, 31, 32, 33, 35, 72, 73, 74, 137], "spatial": [73, 74, 93, 94, 95, 96, 97, 98, 99, 102, 103, 104, 105, 106], "spatio": 74, "special": [0, 9, 13, 14, 15, 76, 124], "specif": [0, 16, 17, 18, 19, 20, 76, 77, 78, 79, 80, 96, 97, 98, 108, 109, 115, 124, 155, 157, 177, 181], "specifi": [0, 8, 17, 29, 35, 40, 46, 47, 48, 50, 51, 55, 69, 72, 73, 74, 87, 88, 89, 90, 91, 99, 102, 103, 104, 105, 106, 109, 118, 120, 121, 122, 123, 135, 137, 138, 139, 140, 142, 143, 149, 155, 156, 157, 164, 168, 169, 170, 171, 173, 175, 177, 178, 179, 180, 181, 182, 183], "speech": 96, "speed": [111, 112, 113], "split": [171, 173, 183], "sqrt": [23, 64, 93, 94, 95, 96, 97, 98, 99, 112, 144, 146, 147], "squar": [2, 3, 4, 6, 7, 9, 10, 11, 12, 48, 50, 89, 90, 112, 144, 162], "squeez": 174, "stabil": [6, 9, 46, 47, 52, 54, 55, 87, 88, 93, 94, 95, 96, 97, 98, 99, 111, 112], "stabl": [76, 88, 111, 112, 113], "stack": [20, 173, 174, 183], "standard": [23, 25, 63, 64, 65, 76, 122, 124, 130], "start": [111, 137], "state": [13, 14, 15, 17, 20, 109, 115, 117, 123], "state_dict": [14, 15, 109, 110, 111, 112, 113], "static": 20, "statist": [9, 36, 52, 54], "step": [15, 35, 109, 110, 111, 112, 113, 117, 137], "stochast": [0, 111, 113], "stop": 137, "storag": [16, 18, 125], "store": [13, 14, 15, 16, 17, 18, 19, 117, 125], "str": [14, 16, 18, 20, 46, 47, 48, 50, 51, 109], "straightforward": [113, 115, 126], "strategi": 110, "strict": [14, 109], "stride": [17, 20, 31, 32, 33, 35, 56, 57, 58, 60, 61, 62, 72, 73, 74, 101, 102, 103, 104, 105, 106], "stride_height": 35, "stride_width": 35, "string": [14, 16, 18, 20, 72, 73, 74, 109], "structur": [0, 10, 13, 14, 17, 108, 109, 118, 139], "style": [54, 96, 97], "sub": [16, 17, 18, 19, 20, 108, 144], "sub_tensor": 125, "subclass": [0, 14, 15, 16, 108, 109], "submodul": [14, 108], "subsequ": [17, 20, 124], "subset": [77, 78], "subtract": [0, 136], "suitabl": [89, 120], "sum": [8, 16, 17, 18, 19, 20, 29, 46, 47, 48, 50, 51, 69, 87, 88, 89, 90, 91, 126, 129, 134, 144, 167, 169, 171, 173, 177, 181, 183], "sum_": [7, 29, 69, 87, 88, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 128, 129, 156, 164, 167, 169, 177], "sum_i": [8, 134], "sum_j": 134, "sum_k": 130, "summar": [101, 102, 103], "summat": 7, "super": [0, 13, 14, 15, 16, 17, 18, 19, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 83, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113], "support": [0, 1, 7, 8, 9, 10, 12, 16, 17, 18, 19, 20, 108, 110, 124, 125, 126, 127, 130, 131, 132, 133, 135, 136, 138, 139, 149, 154, 156, 160, 162, 164, 167, 168, 169, 171, 178], "sure": 108, "svd": [5, 9], "symmetr": [2, 70], "syntax": 130, "system": [1, 2, 9, 10, 11, 115], "t": [9, 111, 112, 113, 117, 125, 130, 170], "t0": 111, "t1": 170, "t2": 170, "tailor": 108, "take": [10, 101, 102, 103, 104, 105, 106, 117], "taken": 167, "tan": 144, "tangent": [30, 70, 148, 165, 166], "tanh": [17, 20, 23, 24, 42, 64, 71, 82, 144], "tanhnetwork": 70, "target": [20, 46, 47, 48, 50, 51, 87, 88, 89, 90, 91, 110, 111, 112, 113], "target_tensor": [87, 88, 89, 90, 91], "task": [0, 1, 28, 29, 32, 43, 46, 47, 50, 51, 68, 69, 72, 73, 74, 87, 88, 89, 90, 91, 96, 97, 98, 101, 103, 104, 106, 116, 124, 139], "techniqu": [2, 6, 52, 76, 77, 78, 79, 80, 96, 97, 98, 110], "tempor": [72, 74, 103, 106], "temporarili": 117, "tensor": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 115, 117, 118, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183], "term": [9, 43, 111, 112, 113], "text": [3, 7, 8, 16, 22, 25, 26, 27, 29, 31, 32, 33, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 69, 72, 73, 74, 76, 77, 78, 79, 80, 87, 88, 89, 90, 91, 101, 102, 103, 104, 105, 106, 111, 112, 113, 121, 126, 127, 129, 131, 132, 133, 135, 136, 145, 149, 155, 156, 157, 159, 164, 169, 171, 173, 175, 176, 177, 178, 179, 181, 182, 183], "th": [43, 87, 88, 90, 91, 96, 97, 98, 131, 132, 135], "than": [18, 19, 22, 25, 48, 63, 65, 89, 109, 149, 167, 175, 180], "thei": [0, 12, 13, 17, 19, 20, 118, 178], "them": [14, 19, 35, 111, 116, 171, 180], "therebi": [76, 102, 103, 105, 106], "theta": 111, "theta_": [111, 112, 113], "theta_t": 112, "thi": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 17, 18, 19, 20, 26, 28, 29, 30, 31, 32, 33, 35, 43, 45, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 111, 112, 113, 115, 116, 117, 118, 121, 122, 123, 124, 125, 129, 130, 134, 137, 140, 141, 142, 143, 149, 153, 154, 155, 156, 157, 160, 162, 164, 167, 168, 169, 170, 175, 177, 178], "thing": 117, "those": [0, 19], "three": [12, 33, 58, 62, 74, 80, 95, 98, 103, 106], "threshold": [9, 48, 89], "through": [0, 4, 9, 10, 12, 16, 17, 20, 43, 45, 63, 64, 65, 66, 67, 68, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 93, 94, 95, 96, 99, 101, 102, 103, 104, 105, 106, 122, 128, 129, 134, 176, 178, 179, 182], "throughout": 27, "tile": 174, "time": [7, 31, 65, 67, 72, 101, 102, 103, 104, 105, 106, 111, 112, 113, 117, 177, 181], "togeth": 20, "tool": [0, 108, 116, 124], "top": [2, 3, 4, 10, 12, 43, 45, 72, 73, 74, 83, 85], "torch": 170, "total": [15, 125, 178], "trace": [1, 144], "track": [0, 93, 94, 95, 96, 97, 98, 108, 115, 117, 120, 121, 122, 137, 138, 139, 140, 141, 142, 143, 170], "track_running_stat": [93, 94, 95, 96, 97, 98], "trail": 55, "train": [0, 13, 14, 17, 19, 20, 29, 36, 37, 38, 39, 40, 52, 54, 64, 65, 67, 68, 69, 70, 76, 77, 78, 79, 80, 93, 94, 95, 96, 97, 98, 108, 110, 111, 112, 113, 117], "trainabl": [93, 94, 95, 96, 97, 98, 108], "transfer": [54, 96, 97], "transform": [0, 4, 18, 43, 45, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 116], "transit": 89, "translat": [102, 105], "transpos": [0, 2, 144], "treat": [13, 99, 108], "triangular": [2, 10], "true": [12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 35, 36, 37, 38, 39, 40, 43, 45, 52, 54, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 112, 115, 120, 121, 122, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183], "tupl": [4, 10, 12, 14, 15, 31, 32, 33, 35, 55, 56, 57, 58, 60, 61, 62, 72, 73, 74, 84, 99, 101, 102, 103, 104, 105, 106, 118, 121, 125, 140, 142, 155, 156, 157, 164, 169, 171, 173, 175, 178, 179, 180, 182, 183], "twice": 175, "two": [0, 3, 4, 6, 7, 9, 10, 12, 31, 32, 33, 43, 57, 61, 73, 79, 83, 94, 97, 102, 105, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 167], "type": [13, 14, 15, 43, 83, 125, 137, 138, 139, 140, 141, 142, 143, 170], "typeerror": [14, 109], "typic": [1, 13, 29, 36, 67, 69, 91, 93, 94, 95, 96, 97, 98, 110, 111, 112, 113, 117, 118, 182], "u": [9, 12], "unchang": [13, 40, 63, 65, 66, 67, 76, 77, 78, 79, 80, 84, 176, 179], "undefin": 135, "under": 108, "underbrac": 7, "underdetermin": 9, "underli": [0, 170, 173, 176, 178, 183], "understand": [0, 20], "unexpect": [14, 17, 20, 124], "unfold": [34, 42], "uniform": [72, 73, 74, 83, 85, 120, 121, 124], "uniformli": 120, "unintend": 117, "uniqu": [2, 9, 11, 16, 18], "unit": [22, 23, 25, 26, 27, 63, 64, 65, 66, 67, 76], "unless": 125, "unlik": [13, 16, 17, 18, 19, 25, 63, 65, 76, 99], "unnecessari": 117, "unpad": 175, "unsqueez": 174, "unstabl": 6, "up": [109, 111, 112, 113], "updat": [13, 19, 20, 76, 77, 78, 79, 80, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 108, 109, 110, 111, 112, 113, 117], "upon": [16, 17, 18, 19], "upper": 10, "us": [0, 1, 2, 4, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 43, 45, 50, 52, 54, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 115, 116, 117, 120, 121, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 153, 155, 156, 157, 164, 169, 175, 177, 179, 181, 182], "usag": [1, 17, 20, 109, 110], "user": [0, 16, 17, 18, 19, 108], "usual": 88, "util": [0, 1, 18, 19, 108, 124], "v": [4, 9, 12, 138], "v_": [111, 112, 113], "v_stack": 183, "v_t": 112, "valid": [72, 73, 74, 168], "valu": [0, 3, 7, 8, 9, 12, 14, 16, 18, 20, 22, 25, 28, 29, 30, 31, 32, 33, 35, 46, 47, 48, 50, 51, 52, 54, 55, 63, 65, 66, 67, 68, 70, 76, 77, 78, 79, 80, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 111, 112, 113, 115, 118, 120, 121, 122, 123, 124, 137, 138, 139, 145, 146, 147, 149, 152, 153, 154, 155, 157, 159, 160, 162, 163, 171, 175, 176, 178, 182], "valuabl": 124, "valueerror": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 109], "vanish": [63, 67, 93, 94, 95], "var": 144, "vari": [17, 19], "variabl": [14, 20, 84, 108, 115, 117, 120], "varianc": [27, 36, 52, 54, 67, 76, 93, 94, 95, 96, 97, 98, 99, 122, 169], "variat": [96, 97, 98], "varieti": 124, "variou": [66, 110, 124, 155, 157, 175], "vdot": 134, "vector": [4, 9, 10, 11, 12, 43, 45, 83, 85, 128, 129, 130, 134], "veloc": [111, 112, 113], "veri": 9, "versatil": 124, "version": [12, 112, 134], "vertic": [180, 183], "video": [33, 40, 74, 98, 103, 106], "view": [17, 102, 103, 104, 105, 106, 178], "vision": [32, 73, 83], "volumetr": [33, 40, 74, 98, 103, 106], "vstack": 174, "w": [32, 33, 35, 39, 40, 43, 45, 57, 58, 61, 62, 72, 73, 74, 83, 85, 94, 95, 97, 98, 103, 106], "w_": [32, 33, 57, 58, 61, 62, 73, 74, 102, 103, 105, 106], "w_out": [32, 33, 57, 58, 61, 62], "wa": [76, 77, 78, 79, 80, 117], "wai": [115, 117, 178], "want": 0, "warn": [16, 18], "we": [0, 116], "weight": [31, 32, 33, 43, 45, 46, 47, 51, 52, 54, 55, 72, 73, 74, 76, 77, 78, 79, 80, 83, 85, 87, 88, 91, 93, 94, 95, 96, 97, 98, 99, 108, 111, 112, 113, 120, 124], "weight1": 18, "weight2": 18, "weight_decai": [111, 112, 113], "were": 20, "what": 117, "when": [0, 7, 14, 17, 19, 20, 22, 25, 31, 32, 33, 63, 84, 93, 94, 95, 96, 97, 98, 109, 115, 117, 118, 124, 135], "where": [3, 4, 6, 7, 8, 9, 10, 12, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 111, 112, 113, 117, 118, 124, 126, 127, 131, 132, 133, 135, 136, 149, 153, 154, 155, 156, 157, 160, 162, 164, 167, 168, 169, 171, 175, 177, 181], "whether": [3, 14, 15, 112, 115, 120, 121, 122, 125, 155, 156, 157, 164, 169], "which": [0, 3, 4, 6, 7, 8, 9, 10, 12, 14, 16, 18, 20, 25, 29, 48, 63, 64, 65, 69, 70, 76, 89, 91, 93, 94, 95, 96, 97, 98, 99, 112, 115, 117, 118, 120, 121, 146, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 160, 161, 162, 164, 165, 166, 167, 169, 171, 177, 178, 180, 182], "while": [0, 17, 20, 36, 64, 66, 108, 111, 112, 113, 117, 178, 180], "who": [0, 16, 17, 18, 19], "whose": [12, 141, 143, 145, 149, 153, 159], "wide": [1, 9, 26, 66, 72, 73, 88], "wider": [31, 32], "width": [32, 33, 35, 39, 40, 57, 58, 61, 62, 73, 74, 94, 95, 97, 98, 102, 103, 105, 106], "window": [56, 57, 58, 60, 61, 62, 101, 102, 103, 104, 105, 106, 155, 157], "wise": [22, 23, 25, 26, 27, 28, 29, 30, 69, 76, 77, 78, 79, 80, 108, 116, 126, 127, 130, 131, 132, 133, 135, 136, 145, 146, 147, 148, 149, 150, 151, 152, 154, 158, 159, 160, 161, 162, 163, 165, 166, 167, 173, 183], "within": [13, 16, 17, 18, 19, 20, 30, 64, 66, 67, 68, 70, 72, 73, 74, 76, 77, 78, 84, 87, 88, 89, 90, 91, 93, 94, 95, 96, 99, 101, 102, 103, 104, 105, 106, 110, 117, 137, 149], "without": [0, 16, 17, 18, 43, 45, 72, 73, 74, 83, 85, 115, 155, 176, 178, 182], "won": 117, "work": [0, 2, 116, 118], "workflow": 124, "workload": 0, "wrap": [108, 117, 170], "wrapper": 108, "x": [0, 1, 11, 13, 14, 16, 17, 18, 19, 20, 29, 43, 45, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 120, 121, 122, 153], "x1": 83, "x2": 83, "x_": [88, 91], "x_c": [88, 91], "x_i": 87, "x_k": 88, "x\u2081": 83, "x\u2082": 83, "y": [16, 17, 18, 19, 20, 63, 64, 65, 66, 67, 68, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 120, 121, 122], "y_": [88, 91], "y_c": [88, 91], "y_i": 87, "yet": [0, 116], "yield": [14, 117], "you": [17, 19, 20, 108, 110, 115, 117, 124, 139, 143, 168, 170], "your": [108, 110, 115, 117, 124], "z": [142, 143], "zero": [7, 9, 10, 22, 25, 31, 32, 33, 36, 37, 38, 39, 40, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 72, 73, 74, 76, 77, 78, 79, 80, 99, 101, 102, 103, 104, 105, 106, 108, 109, 112, 139, 143, 144, 149, 159, 175], "zero_grad": [15, 109, 110, 111, 112, 113, 125], "zeros_lik": 144, "\u03c3\u1d62": 9}, "titles": ["Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "nn.ELU", "nn.GELU", "nn.LeakyReLU", "nn.ReLU", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Tanh", "Activation Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "lucid.nn", "optim.Optimizer", "lucid.optim", "optim.ASGD", "optim.RMSprop", "optim.SGD", "Optimizers", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.types", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.eye", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.unsqueeze", "lucid.vstack"], "titleterms": {"1": 116, "1d": 116, "2": 116, "2d": 116, "3": 116, "It": [115, 117], "ab": 145, "activ": [24, 42, 71, 82], "ad": 116, "add": 126, "addit": 9, "admonit": 118, "advanc": 35, "algebra": 5, "algorithm": [111, 112, 113], "alias": 118, "align": 116, "alpha_dropout": 36, "alphadropout": 76, "also": 110, "anoth": 170, "arang": 137, "arcco": 146, "arcsin": 147, "arctan": 148, "asgd": 111, "attribut": [13, 15, 16, 17, 18, 19, 20, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 125], "avg_pool1d": 56, "avg_pool2d": 57, "avg_pool3d": 58, "avgpool1d": 101, "avgpool2d": 102, "avgpool3d": 103, "axi": 116, "backpropag": 125, "backward": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 43, 45, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183], "batch_norm": 52, "batchnorm1d": 93, "batchnorm2d": 94, "batchnorm3d": 95, "bceloss": 87, "benefit": 117, "bilinear": [43, 83], "binari": 144, "binary_cross_entropi": 46, "broadcast": 116, "buffer": 13, "calcul": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 35, 43, 45, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183], "case": 118, "choleski": 2, "class": [13, 14, 15, 16, 17, 18, 19, 20, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 109, 111, 112, 113, 125], "clip": 149, "co": 150, "compon": [0, 108], "concaten": 171, "conclus": [0, 108, 115, 116, 117, 124], "contain": 21, "conv1d": [31, 72], "conv2d": [32, 73], "conv3d": [33, 74], "convolut": [34, 42, 75, 82], "core": 0, "cosh": 151, "creat": [15, 125, 170], "cross_entropi": 47, "crossentropyloss": 88, "cube": 152, "custom": [14, 109, 110], "defin": [14, 109, 110], "definit": 118, "det": 3, "detail": 9, "diag": 138, "dilat": 35, "div": 127, "dot": 128, "dropout": [37, 41, 42, 77, 81, 82], "dropout1d": [38, 78], "dropout2d": [39, 79], "dropout3d": [40, 80], "eig": 4, "elu": [22, 63], "exampl": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108, 109, 110, 111, 112, 113, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183], "exp": 153, "ey": 139, "featur": [0, 1, 110, 124], "flatten": 172, "forward": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 35, 43, 45, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183], "from": 170, "function": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 115, 117, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183], "gelu": [23, 64], "gener": [119, 144], "get": 110, "grad_en": 115, "gradient": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 43, 45, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 171, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183], "guidelin": 118, "how": [115, 117], "hstack": 173, "huber_loss": 48, "huberloss": 89, "ident": 84, "index": 125, "inner": 129, "input": 170, "inspect": [110, 111, 112, 113], "instance_norm": 54, "instancenorm1d": 96, "instancenorm2d": 97, "instancenorm3d": 98, "integr": [108, 124], "inv": 6, "iter": 125, "kei": [0, 108, 110, 124], "layer": [71, 75, 81, 82, 86, 92, 100, 107], "layer_norm": 55, "layernorm": 99, "leaky_relu": 25, "leakyrelu": 65, "learn": 124, "limit": 0, "linalg": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12], "linear": [5, 42, 44, 45, 82, 85, 86], "list": 170, "log": 154, "loss": [42, 49, 82, 92], "lucid": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 42, 108, 110, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183], "matmul": 130, "matrix": 130, "matrix_pow": 7, "max": 155, "max_pool1d": 60, "max_pool2d": 61, "max_pool3d": 62, "maximum": 131, "maxpool1d": 104, "maxpool2d": 105, "maxpool3d": 106, "mean": 156, "method": [14, 15, 109, 125], "min": 157, "minimum": 132, "model": 108, "modul": [14, 82], "moduledict": 16, "modulelist": 17, "more": 124, "mse_loss": 50, "mseloss": 90, "mul": 133, "multipl": 130, "new": 116, "newaxi": 116, "nll_loss": 51, "nllloss": 91, "nn": [13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 108], "no_grad": 117, "norm": 8, "normal": [42, 53, 82, 100], "note": 0, "number": 119, "ones": 140, "ones_lik": 141, "oper": [5, 130, 144], "optim": [109, 110, 111, 112, 113, 114], "organ": 108, "outer": 134, "overview": [0, 108, 110, 124], "pad": 175, "paramet": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 111, 112, 113, 117, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183], "parameterdict": 18, "parameterlist": 19, "perform": 125, "pinv": 9, "pitfal": [115, 117], "pool": [42, 59, 82, 107], "potenti": [115, 117], "power": 135, "properti": [15, 125], "qr": 10, "rais": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12], "rand": 120, "randint": 121, "randn": 122, "random": [119, 120, 121, 122, 123, 124], "ravel": 176, "reciproc": 158, "refer": 110, "relu": [26, 66], "repeat": 177, "reshap": 178, "return": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 115, 117, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183], "rmsprop": 112, "rule": 130, "see": 110, "seed": 123, "selu": [27, 67], "sequenti": 20, "seri": 114, "sgd": [113, 114], "sigmoid": [28, 68], "sign": 159, "signatur": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 43, 45, 46, 47, 48, 50, 51, 52, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 72, 73, 74, 76, 77, 78, 79, 80, 83, 84, 85, 87, 88, 89, 90, 91, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 109, 111, 112, 113, 115, 117, 120, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 178, 179, 180, 181, 182, 183], "sin": 160, "sinh": 161, "slice": 125, "softmax": [29, 69], "solv": 11, "sqrt": 162, "squar": 163, "squeez": 179, "stack": 180, "start": 110, "state": [110, 111, 112, 113], "sub": 136, "sum": 164, "svd": 12, "tan": 165, "tanh": [30, 70, 166], "tensor": [116, 125, 144, 170, 174], "through": 125, "tile": 181, "trace": 167, "track": 125, "transpos": 168, "type": 118, "unari": 144, "unfold": 35, "unsqueez": 182, "us": [111, 112, 113, 118, 170], "usag": [0, 13, 115, 116, 117, 118], "utilit": 174, "var": 169, "vstack": 183, "why": 118, "work": [115, 117], "zero": 142, "zeros_lik": 143}})