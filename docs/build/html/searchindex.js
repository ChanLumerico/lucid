Search.setIndex({"alltitles": {"@ Operator": [[214, "operator"]], "Activation Functions": [[75, null]], "Activation Layers": [[142, null], [153, null]], "Additional Details": [[16, "additional-details"]], "Admonitions and Usage Guidelines": [[201, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[86, "advanced-example-with-dilation"]], "Advanced Features": [[282, "advanced-features"]], "AlexNet": [[20, null]], "Algorithm": [[185, "algorithm"], [186, "algorithm"], [187, "algorithm"], [188, "algorithm"], [189, "algorithm"], [190, "algorithm"], [191, "algorithm"], [192, "algorithm"], [193, "algorithm"], [194, "algorithm"], [195, "algorithm"]], "Architecture": [[20, "architecture"], [31, "architecture"], [32, "architecture"], [33, "architecture"], [60, "architecture"]], "Architecture Details": [[43, "architecture-details"], [44, "architecture-details"]], "Attention Mechanism": [[124, "attention-mechanism"]], "Attributes": [[5, "attributes"], [20, "attributes"], [26, "attributes"], [30, "attributes"], [34, "attributes"], [45, "attributes"], [51, "attributes"], [55, "attributes"], [60, "attributes"], [64, "attributes"], [66, "attributes"], [67, "attributes"], [68, "attributes"], [69, "attributes"], [70, "attributes"], [71, "attributes"], [120, "attributes"], [121, "attributes"], [122, "attributes"], [123, "attributes"], [134, "attributes"], [135, "attributes"], [136, "attributes"], [137, "attributes"], [138, "attributes"], [139, "attributes"], [140, "attributes"], [141, "attributes"], [143, "attributes"], [144, "attributes"], [145, "attributes"], [147, "attributes"], [148, "attributes"], [149, "attributes"], [150, "attributes"], [151, "attributes"], [154, "attributes"], [155, "attributes"], [156, "attributes"], [158, "attributes"], [159, "attributes"], [160, "attributes"], [161, "attributes"], [162, "attributes"], [164, "attributes"], [165, "attributes"], [166, "attributes"], [167, "attributes"], [168, "attributes"], [169, "attributes"], [170, "attributes"], [172, "attributes"], [173, "attributes"], [174, "attributes"], [175, "attributes"], [176, "attributes"], [177, "attributes"], [178, "attributes"], [179, "attributes"], [180, "attributes"], [209, "attributes"], [273, "attributes"], [274, "attributes"], [275, "attributes"], [276, "attributes"], [277, "attributes"], [278, "attributes"], [279, "attributes"], [280, "attributes"]], "Backward Gradient Calculation": [[9, "backward-gradient-calculation"], [10, "backward-gradient-calculation"], [11, "backward-gradient-calculation"], [13, "backward-gradient-calculation"], [14, "backward-gradient-calculation"], [15, "backward-gradient-calculation"], [16, "backward-gradient-calculation"], [17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [67, "backward-gradient-calculation"], [68, "backward-gradient-calculation"], [69, "backward-gradient-calculation"], [70, "backward-gradient-calculation"], [71, "backward-gradient-calculation"], [73, "backward-gradient-calculation"], [74, "backward-gradient-calculation"], [76, "backward-gradient-calculation"], [77, "backward-gradient-calculation"], [78, "backward-gradient-calculation"], [79, "backward-gradient-calculation"], [80, "backward-gradient-calculation"], [81, "backward-gradient-calculation"], [94, "backward-gradient-calculation"], [96, "backward-gradient-calculation"], [118, "backward-gradient-calculation"], [123, "backward-gradient-calculation"], [133, "backward-gradient-calculation"], [134, "backward-gradient-calculation"], [135, "backward-gradient-calculation"], [136, "backward-gradient-calculation"], [137, "backward-gradient-calculation"], [138, "backward-gradient-calculation"], [139, "backward-gradient-calculation"], [140, "backward-gradient-calculation"], [141, "backward-gradient-calculation"], [143, "backward-gradient-calculation"], [144, "backward-gradient-calculation"], [145, "backward-gradient-calculation"], [147, "backward-gradient-calculation"], [148, "backward-gradient-calculation"], [149, "backward-gradient-calculation"], [150, "backward-gradient-calculation"], [151, "backward-gradient-calculation"], [154, "backward-gradient-calculation"], [155, "backward-gradient-calculation"], [156, "backward-gradient-calculation"], [158, "backward-gradient-calculation"], [159, "backward-gradient-calculation"], [160, "backward-gradient-calculation"], [161, "backward-gradient-calculation"], [162, "backward-gradient-calculation"], [164, "backward-gradient-calculation"], [165, "backward-gradient-calculation"], [166, "backward-gradient-calculation"], [167, "backward-gradient-calculation"], [168, "backward-gradient-calculation"], [169, "backward-gradient-calculation"], [170, "backward-gradient-calculation"], [175, "backward-gradient-calculation"], [176, "backward-gradient-calculation"], [177, "backward-gradient-calculation"], [178, "backward-gradient-calculation"], [179, "backward-gradient-calculation"], [180, "backward-gradient-calculation"], [210, "backward-gradient-calculation"], [211, "backward-gradient-calculation"], [212, "backward-gradient-calculation"], [213, "backward-gradient-calculation"], [214, "backward-gradient-calculation"], [215, "backward-gradient-calculation"], [216, "backward-gradient-calculation"], [217, "backward-gradient-calculation"], [218, "backward-gradient-calculation"], [219, "backward-gradient-calculation"], [220, "backward-gradient-calculation"], [231, "backward-gradient-calculation"], [232, "backward-gradient-calculation"], [233, "backward-gradient-calculation"], [234, "backward-gradient-calculation"], [235, "backward-gradient-calculation"], [236, "backward-gradient-calculation"], [237, "backward-gradient-calculation"], [238, "backward-gradient-calculation"], [239, "backward-gradient-calculation"], [240, "backward-gradient-calculation"], [241, "backward-gradient-calculation"], [242, "backward-gradient-calculation"], [243, "backward-gradient-calculation"], [244, "backward-gradient-calculation"], [245, "backward-gradient-calculation"], [246, "backward-gradient-calculation"], [247, "backward-gradient-calculation"], [248, "backward-gradient-calculation"], [249, "backward-gradient-calculation"], [250, "backward-gradient-calculation"], [251, "backward-gradient-calculation"], [252, "backward-gradient-calculation"], [253, "backward-gradient-calculation"], [254, "backward-gradient-calculation"], [255, "backward-gradient-calculation"], [257, "backward-gradient-calculation"], [259, "backward-gradient-calculation"], [261, "backward-gradient-calculation"], [262, "backward-gradient-calculation"], [263, "backward-gradient-calculation"], [264, "backward-gradient-calculation"], [265, "backward-gradient-calculation"], [266, "backward-gradient-calculation"], [267, "backward-gradient-calculation"], [268, "backward-gradient-calculation"], [269, "backward-gradient-calculation"], [270, "backward-gradient-calculation"]], "Behavior": [[107, "behavior"], [108, "behavior"], [109, "behavior"], [172, "behavior"], [173, "behavior"], [174, "behavior"]], "Benefits": [[199, "benefits"]], "Binary Functions": [[230, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [20, "class-signature"], [22, "class-signature"], [26, "class-signature"], [30, "class-signature"], [34, "class-signature"], [45, "class-signature"], [51, "class-signature"], [55, "class-signature"], [60, "class-signature"], [64, "class-signature"], [65, "class-signature"], [66, "class-signature"], [67, "class-signature"], [68, "class-signature"], [69, "class-signature"], [70, "class-signature"], [71, "class-signature"], [120, "class-signature"], [121, "class-signature"], [122, "class-signature"], [123, "class-signature"], [124, "class-signature"], [134, "class-signature"], [135, "class-signature"], [136, "class-signature"], [137, "class-signature"], [138, "class-signature"], [139, "class-signature"], [140, "class-signature"], [141, "class-signature"], [143, "class-signature"], [144, "class-signature"], [145, "class-signature"], [147, "class-signature"], [148, "class-signature"], [149, "class-signature"], [150, "class-signature"], [151, "class-signature"], [154, "class-signature"], [155, "class-signature"], [156, "class-signature"], [158, "class-signature"], [159, "class-signature"], [160, "class-signature"], [161, "class-signature"], [162, "class-signature"], [164, "class-signature"], [165, "class-signature"], [166, "class-signature"], [167, "class-signature"], [168, "class-signature"], [169, "class-signature"], [170, "class-signature"], [172, "class-signature"], [173, "class-signature"], [174, "class-signature"], [175, "class-signature"], [176, "class-signature"], [177, "class-signature"], [178, "class-signature"], [179, "class-signature"], [180, "class-signature"], [183, "class-signature"], [185, "class-signature"], [186, "class-signature"], [187, "class-signature"], [188, "class-signature"], [189, "class-signature"], [190, "class-signature"], [191, "class-signature"], [192, "class-signature"], [193, "class-signature"], [194, "class-signature"], [195, "class-signature"], [209, "class-signature"], [271, "class-signature"], [272, "class-signature"], [273, "class-signature"], [274, "class-signature"], [275, "class-signature"], [276, "class-signature"], [277, "class-signature"], [278, "class-signature"], [279, "class-signature"], [280, "class-signature"]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [7, "conclusion"], [182, "conclusion"], [197, "conclusion"], [198, "conclusion"], [199, "conclusion"], [208, "conclusion"], [272, "conclusion"], [282, "conclusion"]], "Containers": [[72, null]], "Conv-BatchNorm-ReLU": [[125, null]], "ConvNets": [[29, null], [62, "convnets"]], "Convolution Functions": [[85, null], [93, null]], "Convolution Layers": [[146, null], [153, null]], "Core Components": [[7, "core-components"]], "Create a Tensor from a list": [[256, null]], "Creating a Parameter": [[66, null]], "Creating a tensor with gradient tracking": [[209, null]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[282, "custom-pipelines"]], "Defining a Custom Optimizer": [[184, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[65, null]], "Defining a custom optimizer": [[183, null]], "Description": [[52, "description"], [53, "description"], [54, "description"], [200, "description"]], "Dropout Functions": [[92, null], [93, null]], "Dropout Layers": [[152, null], [153, null]], "Example": [[3, null], [3, null], [3, null], [9, "example"], [10, "example"], [11, "example"], [13, "example"], [14, "example"], [15, "example"], [16, "example"], [17, "example"], [18, "example"], [19, "example"], [86, "example"], [182, null], [182, null], [182, null], [197, "example"], [199, "example"], [203, "example"], [204, "example"], [205, "example"], [206, "example"], [207, "example"], [208, null], [208, null], [208, null], [221, "example"], [222, "example"], [223, "example"], [224, "example"], [225, "example"], [226, "example"], [227, "example"], [228, "example"], [229, "example"], [231, "example"], [232, "example"], [233, "example"], [234, "example"], [235, "example"], [236, "example"], [237, "example"], [238, "example"], [240, "example"], [242, "example"], [244, "example"], [245, "example"], [246, "example"], [247, "example"], [248, "example"], [249, "example"], [250, "example"], [251, "example"], [252, "example"], [253, "example"], [254, "example"], [255, "example"], [257, "example"], [259, "example"], [263, "example"], [265, "example"], [266, "example"], [267, "example"], [269, "example"], [270, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[198, null]], "Example 2: Adding a new axis to a 2D tensor": [[198, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[198, null]], "Example Usage": [[7, "example-usage"], [23, "example-usage"], [24, "example-usage"], [25, "example-usage"], [27, "example-usage"], [28, "example-usage"], [30, "example-usage"], [31, "example-usage"], [32, "example-usage"], [33, "example-usage"], [119, "example-usage"], [271, "example-usage"], [272, "example-usage"], [282, "example-usage"]], "Example Use Cases": [[201, "example-use-cases"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [8, "examples"], [20, "examples"], [21, "examples"], [34, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [46, "examples"], [47, "examples"], [48, "examples"], [49, "examples"], [50, "examples"], [52, "examples"], [53, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [60, "examples"], [61, "examples"], [63, "examples"], [64, "examples"], [65, "examples"], [66, "examples"], [67, "examples"], [68, "examples"], [69, "examples"], [70, "examples"], [71, "examples"], [73, "examples"], [74, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [79, "examples"], [80, "examples"], [81, "examples"], [82, "examples"], [83, "examples"], [84, "examples"], [87, "examples"], [88, "examples"], [89, "examples"], [90, "examples"], [91, "examples"], [94, "examples"], [96, "examples"], [97, "examples"], [98, "examples"], [99, "examples"], [101, "examples"], [102, "examples"], [103, "examples"], [105, "examples"], [106, "examples"], [107, "examples"], [108, "examples"], [109, "examples"], [110, "examples"], [111, "examples"], [112, "examples"], [114, "examples"], [115, "examples"], [116, "examples"], [118, "examples"], [120, "examples"], [121, "examples"], [122, "examples"], [123, "examples"], [124, "examples"], [126, "examples"], [128, "examples"], [129, "examples"], [130, "examples"], [131, "examples"], [132, "examples"], [133, "examples"], [134, "examples"], [135, "examples"], [136, "examples"], [137, "examples"], [138, "examples"], [139, "examples"], [140, "examples"], [141, "examples"], [143, "examples"], [144, "examples"], [145, "examples"], [147, "examples"], [148, "examples"], [149, "examples"], [150, "examples"], [151, "examples"], [154, "examples"], [155, "examples"], [156, "examples"], [158, "examples"], [159, "examples"], [160, "examples"], [161, "examples"], [162, "examples"], [164, "examples"], [165, "examples"], [166, "examples"], [167, "examples"], [168, "examples"], [169, "examples"], [170, "examples"], [172, "examples"], [173, "examples"], [174, "examples"], [175, "examples"], [176, "examples"], [177, "examples"], [178, "examples"], [179, "examples"], [180, "examples"], [183, "examples"], [184, "examples"], [185, "examples"], [186, "examples"], [187, "examples"], [188, "examples"], [189, "examples"], [190, "examples"], [191, "examples"], [192, "examples"], [193, "examples"], [194, "examples"], [195, "examples"], [200, "examples"], [209, "examples"], [210, "examples"], [211, "examples"], [212, "examples"], [213, "examples"], [215, "examples"], [216, "examples"], [217, "examples"], [218, "examples"], [219, "examples"], [220, "examples"], [239, "examples"], [241, "examples"], [243, "examples"], [256, "examples"], [258, "examples"], [261, "examples"], [262, "examples"], [264, "examples"], [268, "examples"], [273, "examples"], [274, "examples"], [275, "examples"], [276, "examples"], [277, "examples"], [278, "examples"], [279, "examples"], [280, "examples"]], "Features": [[8, "features"]], "Forward Calculation": [[9, "forward-calculation"], [10, "forward-calculation"], [11, "forward-calculation"], [13, "forward-calculation"], [14, "forward-calculation"], [15, "forward-calculation"], [16, "forward-calculation"], [17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [34, "forward-calculation"], [45, "forward-calculation"], [51, "forward-calculation"], [67, "forward-calculation"], [68, "forward-calculation"], [69, "forward-calculation"], [70, "forward-calculation"], [71, "forward-calculation"], [73, "forward-calculation"], [74, "forward-calculation"], [76, "forward-calculation"], [77, "forward-calculation"], [78, "forward-calculation"], [79, "forward-calculation"], [80, "forward-calculation"], [81, "forward-calculation"], [86, "forward-calculation"], [94, "forward-calculation"], [96, "forward-calculation"], [107, "forward-calculation"], [108, "forward-calculation"], [109, "forward-calculation"], [118, "forward-calculation"], [120, "forward-calculation"], [121, "forward-calculation"], [122, "forward-calculation"], [123, "forward-calculation"], [124, "forward-calculation"], [128, "forward-calculation"], [129, "forward-calculation"], [132, "forward-calculation"], [133, "forward-calculation"], [134, "forward-calculation"], [135, "forward-calculation"], [136, "forward-calculation"], [137, "forward-calculation"], [138, "forward-calculation"], [139, "forward-calculation"], [140, "forward-calculation"], [141, "forward-calculation"], [143, "forward-calculation"], [144, "forward-calculation"], [145, "forward-calculation"], [147, "forward-calculation"], [148, "forward-calculation"], [149, "forward-calculation"], [150, "forward-calculation"], [151, "forward-calculation"], [154, "forward-calculation"], [155, "forward-calculation"], [156, "forward-calculation"], [158, "forward-calculation"], [159, "forward-calculation"], [160, "forward-calculation"], [161, "forward-calculation"], [162, "forward-calculation"], [164, "forward-calculation"], [165, "forward-calculation"], [166, "forward-calculation"], [167, "forward-calculation"], [168, "forward-calculation"], [169, "forward-calculation"], [170, "forward-calculation"], [172, "forward-calculation"], [173, "forward-calculation"], [174, "forward-calculation"], [175, "forward-calculation"], [176, "forward-calculation"], [177, "forward-calculation"], [178, "forward-calculation"], [179, "forward-calculation"], [180, "forward-calculation"], [210, "forward-calculation"], [211, "forward-calculation"], [212, "forward-calculation"], [213, "forward-calculation"], [214, "forward-calculation"], [215, "forward-calculation"], [216, "forward-calculation"], [217, "forward-calculation"], [218, "forward-calculation"], [219, "forward-calculation"], [220, "forward-calculation"], [231, "forward-calculation"], [232, "forward-calculation"], [233, "forward-calculation"], [234, "forward-calculation"], [235, "forward-calculation"], [236, "forward-calculation"], [237, "forward-calculation"], [238, "forward-calculation"], [239, "forward-calculation"], [240, "forward-calculation"], [241, "forward-calculation"], [242, "forward-calculation"], [243, "forward-calculation"], [244, "forward-calculation"], [245, "forward-calculation"], [246, "forward-calculation"], [247, "forward-calculation"], [248, "forward-calculation"], [249, "forward-calculation"], [250, "forward-calculation"], [251, "forward-calculation"], [252, "forward-calculation"], [253, "forward-calculation"], [254, "forward-calculation"], [255, "forward-calculation"], [257, "forward-calculation"], [259, "forward-calculation"], [261, "forward-calculation"], [262, "forward-calculation"], [263, "forward-calculation"], [264, "forward-calculation"], [265, "forward-calculation"], [266, "forward-calculation"], [267, "forward-calculation"], [268, "forward-calculation"], [269, "forward-calculation"], [270, "forward-calculation"], [273, "forward-calculation"], [274, "forward-calculation"], [275, "forward-calculation"], [276, "forward-calculation"], [277, "forward-calculation"], [278, "forward-calculation"], [279, "forward-calculation"], [280, "forward-calculation"]], "Function Signature": [[9, "function-signature"], [10, "function-signature"], [11, "function-signature"], [13, "function-signature"], [14, "function-signature"], [15, "function-signature"], [16, "function-signature"], [17, "function-signature"], [18, "function-signature"], [19, "function-signature"], [21, "function-signature"], [23, "function-signature"], [24, "function-signature"], [25, "function-signature"], [27, "function-signature"], [28, "function-signature"], [31, "function-signature"], [32, "function-signature"], [33, "function-signature"], [35, "function-signature"], [36, "function-signature"], [37, "function-signature"], [38, "function-signature"], [39, "function-signature"], [40, "function-signature"], [41, "function-signature"], [42, "function-signature"], [43, "function-signature"], [44, "function-signature"], [46, "function-signature"], [47, "function-signature"], [48, "function-signature"], [49, "function-signature"], [50, "function-signature"], [52, "function-signature"], [53, "function-signature"], [54, "function-signature"], [56, "function-signature"], [57, "function-signature"], [58, "function-signature"], [59, "function-signature"], [61, "function-signature"], [63, "function-signature"], [73, "function-signature"], [74, "function-signature"], [76, "function-signature"], [77, "function-signature"], [78, "function-signature"], [79, "function-signature"], [80, "function-signature"], [81, "function-signature"], [82, "function-signature"], [83, "function-signature"], [84, "function-signature"], [86, "function-signature"], [87, "function-signature"], [88, "function-signature"], [89, "function-signature"], [90, "function-signature"], [91, "function-signature"], [94, "function-signature"], [96, "function-signature"], [97, "function-signature"], [98, "function-signature"], [99, "function-signature"], [101, "function-signature"], [102, "function-signature"], [103, "function-signature"], [105, "function-signature"], [106, "function-signature"], [107, "function-signature"], [108, "function-signature"], [109, "function-signature"], [110, "function-signature"], [111, "function-signature"], [112, "function-signature"], [114, "function-signature"], [115, "function-signature"], [116, "function-signature"], [118, "function-signature"], [119, "function-signature"], [126, "function-signature"], [128, "function-signature"], [129, "function-signature"], [130, "function-signature"], [131, "function-signature"], [132, "function-signature"], [133, "function-signature"], [197, "function-signature"], [199, "function-signature"], [200, "function-signature"], [203, "function-signature"], [204, "function-signature"], [205, "function-signature"], [206, "function-signature"], [207, "function-signature"], [210, "function-signature"], [211, "function-signature"], [212, "function-signature"], [213, "function-signature"], [214, "function-signature"], [215, "function-signature"], [216, "function-signature"], [217, "function-signature"], [218, "function-signature"], [219, "function-signature"], [220, "function-signature"], [221, "function-signature"], [222, "function-signature"], [223, "function-signature"], [224, "function-signature"], [225, "function-signature"], [226, "function-signature"], [227, "function-signature"], [228, "function-signature"], [229, "function-signature"], [231, "function-signature"], [232, "function-signature"], [233, "function-signature"], [234, "function-signature"], [235, "function-signature"], [236, "function-signature"], [237, "function-signature"], [238, "function-signature"], [239, "function-signature"], [240, "function-signature"], [241, "function-signature"], [242, "function-signature"], [243, "function-signature"], [244, "function-signature"], [245, "function-signature"], [246, "function-signature"], [247, "function-signature"], [248, "function-signature"], [249, "function-signature"], [250, "function-signature"], [251, "function-signature"], [252, "function-signature"], [253, "function-signature"], [254, "function-signature"], [255, "function-signature"], [256, "function-signature"], [257, "function-signature"], [258, "function-signature"], [259, "function-signature"], [261, "function-signature"], [262, "function-signature"], [263, "function-signature"], [264, "function-signature"], [265, "function-signature"], [266, "function-signature"], [267, "function-signature"], [268, "function-signature"], [269, "function-signature"], [270, "function-signature"]], "Fused Layers": [[125, null]], "Future Work": [[4, "future-work"]], "Getting Started": [[184, "getting-started"]], "How It Works": [[197, "how-it-works"], [199, "how-it-works"]], "Image Datasets": [[6, null]], "Image Transformations": [[281, null]], "Inception": [[22, null]], "InceptionResNet": [[26, null]], "Indexing and slicing": [[209, null]], "Inspecting Optimizer State": [[184, null], [185, null], [186, null], [187, null], [188, null], [189, null], [190, null], [191, null], [192, null], [193, null], [194, null], [195, null]], "Integration with lucid": [[3, "integration-with-lucid"], [182, "integration-with-lucid"], [208, "integration-with-lucid"], [282, "integration-with-lucid"]], "Iterating through a tensor": [[209, null]], "Key Components": [[3, "key-components"], [182, "key-components"]], "Key Features": [[4, "key-features"], [7, "key-features"], [184, "key-features"], [208, "key-features"]], "Key Transformations": [[282, "key-transformations"]], "LeNet": [[30, null]], "Learn More": [[208, null]], "Limitations": [[7, "limitations"]], "Linear Algebra Operations": [[12, null]], "Linear Functions": [[93, null], [95, null]], "Linear Layers": [[153, null], [157, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[93, null], [100, null]], "Loss Layers": [[153, null], [163, null]], "Lucid": [[7, null]], "MNIST": [[5, null]], "Matrix Multiplication Rules": [[214, "matrix-multiplication-rules"]], "Metadata Captured": [[200, "metadata-captured"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [26, "methods"], [30, "methods"], [55, "methods"], [65, "methods"], [66, "methods"], [183, "methods"], [209, "methods"]], "Modules": [[153, null]], "Normalization Functions": [[93, null], [104, null]], "Normalization Layers": [[153, null], [171, null]], "Notes": [[7, "notes"]], "Optimizers": [[196, null]], "Organizing Models": [[182, "organizing-models"]], "Overview": [[3, "overview"], [4, "overview"], [7, "overview"], [22, "overview"], [23, "overview"], [24, "overview"], [25, "overview"], [26, "overview"], [27, "overview"], [28, "overview"], [30, "overview"], [31, "overview"], [32, "overview"], [33, "overview"], [35, "overview"], [36, "overview"], [37, "overview"], [38, "overview"], [39, "overview"], [40, "overview"], [41, "overview"], [42, "overview"], [46, "overview"], [47, "overview"], [48, "overview"], [49, "overview"], [50, "overview"], [182, "overview"], [184, "overview"], [208, "overview"], [282, "overview"]], "Parameters": [[1, "parameters"], [5, "parameters"], [9, "parameters"], [10, "parameters"], [11, "parameters"], [13, "parameters"], [14, "parameters"], [15, "parameters"], [16, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [20, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [30, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [63, "parameters"], [64, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [71, "parameters"], [73, "parameters"], [74, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [84, "parameters"], [86, "parameters"], [87, "parameters"], [88, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [94, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [105, "parameters"], [106, "parameters"], [107, "parameters"], [108, "parameters"], [109, "parameters"], [110, "parameters"], [111, "parameters"], [112, "parameters"], [114, "parameters"], [115, "parameters"], [116, "parameters"], [118, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [122, "parameters"], [123, "parameters"], [124, "parameters"], [126, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [141, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [154, "parameters"], [155, "parameters"], [156, "parameters"], [158, "parameters"], [159, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [164, "parameters"], [165, "parameters"], [166, "parameters"], [167, "parameters"], [168, "parameters"], [169, "parameters"], [170, "parameters"], [172, "parameters"], [173, "parameters"], [174, "parameters"], [175, "parameters"], [176, "parameters"], [177, "parameters"], [178, "parameters"], [179, "parameters"], [180, "parameters"], [185, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [189, "parameters"], [190, "parameters"], [191, "parameters"], [192, "parameters"], [193, "parameters"], [194, "parameters"], [195, "parameters"], [199, "parameters"], [200, "parameters"], [203, "parameters"], [204, "parameters"], [205, "parameters"], [206, "parameters"], [207, "parameters"], [209, "parameters"], [210, "parameters"], [211, "parameters"], [212, "parameters"], [213, "parameters"], [214, "parameters"], [215, "parameters"], [216, "parameters"], [217, "parameters"], [218, "parameters"], [219, "parameters"], [220, "parameters"], [221, "parameters"], [222, "parameters"], [223, "parameters"], [224, "parameters"], [225, "parameters"], [226, "parameters"], [227, "parameters"], [228, "parameters"], [229, "parameters"], [231, "parameters"], [232, "parameters"], [233, "parameters"], [234, "parameters"], [235, "parameters"], [236, "parameters"], [237, "parameters"], [238, "parameters"], [239, "parameters"], [240, "parameters"], [241, "parameters"], [242, "parameters"], [243, "parameters"], [244, "parameters"], [245, "parameters"], [246, "parameters"], [247, "parameters"], [248, "parameters"], [249, "parameters"], [250, "parameters"], [251, "parameters"], [252, "parameters"], [253, "parameters"], [254, "parameters"], [255, "parameters"], [256, "parameters"], [257, "parameters"], [258, "parameters"], [259, "parameters"], [261, "parameters"], [262, "parameters"], [263, "parameters"], [264, "parameters"], [265, "parameters"], [266, "parameters"], [267, "parameters"], [268, "parameters"], [269, "parameters"], [270, "parameters"], [271, "parameters"], [272, "parameters"], [273, "parameters"], [274, "parameters"], [275, "parameters"], [276, "parameters"], [277, "parameters"], [278, "parameters"], [279, "parameters"], [280, "parameters"]], "Performing backpropagation": [[209, null]], "Pooling Functions": [[93, null], [113, null]], "Pooling Layers": [[153, null], [181, null]], "Potential Pitfalls": [[197, "potential-pitfalls"], [199, "potential-pitfalls"]], "Properties": [[66, "properties"], [209, "properties"]], "Raises": [[9, "raises"], [10, "raises"], [11, "raises"], [13, "raises"], [14, "raises"], [15, "raises"], [16, "raises"], [17, "raises"], [18, "raises"], [19, "raises"]], "Random Number Generations": [[202, null]], "References": [[5, "references"], [123, "references"], [184, "references"]], "ResNet": [[34, null]], "Returns": [[9, "returns"], [10, "returns"], [11, "returns"], [13, "returns"], [14, "returns"], [15, "returns"], [16, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [21, "returns"], [23, "returns"], [24, "returns"], [25, "returns"], [27, "returns"], [28, "returns"], [31, "returns"], [32, "returns"], [33, "returns"], [35, "returns"], [36, "returns"], [37, "returns"], [38, "returns"], [39, "returns"], [40, "returns"], [41, "returns"], [42, "returns"], [43, "returns"], [44, "returns"], [46, "returns"], [47, "returns"], [48, "returns"], [49, "returns"], [50, "returns"], [52, "returns"], [53, "returns"], [54, "returns"], [56, "returns"], [57, "returns"], [58, "returns"], [59, "returns"], [61, "returns"], [63, "returns"], [73, "returns"], [74, "returns"], [76, "returns"], [77, "returns"], [78, "returns"], [79, "returns"], [80, "returns"], [81, "returns"], [82, "returns"], [83, "returns"], [84, "returns"], [86, "returns"], [87, "returns"], [88, "returns"], [89, "returns"], [90, "returns"], [91, "returns"], [94, "returns"], [96, "returns"], [97, "returns"], [98, "returns"], [99, "returns"], [101, "returns"], [102, "returns"], [103, "returns"], [105, "returns"], [106, "returns"], [107, "returns"], [108, "returns"], [109, "returns"], [110, "returns"], [111, "returns"], [112, "returns"], [114, "returns"], [115, "returns"], [116, "returns"], [118, "returns"], [119, "returns"], [124, "returns"], [126, "returns"], [128, "returns"], [129, "returns"], [130, "returns"], [131, "returns"], [132, "returns"], [133, "returns"], [197, "returns"], [199, "returns"], [203, "returns"], [204, "returns"], [205, "returns"], [206, "returns"], [207, "returns"], [210, "returns"], [211, "returns"], [212, "returns"], [213, "returns"], [214, "returns"], [215, "returns"], [216, "returns"], [217, "returns"], [218, "returns"], [219, "returns"], [220, "returns"], [221, "returns"], [222, "returns"], [223, "returns"], [224, "returns"], [225, "returns"], [226, "returns"], [227, "returns"], [228, "returns"], [229, "returns"], [231, "returns"], [232, "returns"], [233, "returns"], [234, "returns"], [235, "returns"], [236, "returns"], [237, "returns"], [238, "returns"], [239, "returns"], [240, "returns"], [241, "returns"], [242, "returns"], [243, "returns"], [244, "returns"], [245, "returns"], [246, "returns"], [247, "returns"], [248, "returns"], [249, "returns"], [250, "returns"], [251, "returns"], [252, "returns"], [253, "returns"], [254, "returns"], [255, "returns"], [256, "returns"], [257, "returns"], [258, "returns"], [259, "returns"], [261, "returns"], [262, "returns"], [263, "returns"], [264, "returns"], [265, "returns"], [266, "returns"], [267, "returns"], [268, "returns"], [269, "returns"], [270, "returns"]], "SENet": [[45, null]], "SKNet": [[51, null]], "See Also": [[184, "see-also"]], "Selective Kernel": [[125, null]], "Squeeze-and-Excitation": [[125, null]], "Summary Table": [[63, "summary-table"]], "Tensor Generating Functions": [[230, null]], "Tensor Operations": [[230, null]], "Tensor Utilites": [[260, null]], "Type Definitions": [[201, "type-definitions"]], "Unary Functions": [[230, null]], "Usage": [[4, "usage"], [64, "usage"], [119, "usage"], [197, "usage"], [198, "usage"], [199, "usage"], [261, "usage"], [271, "usage"], [272, "usage"], [282, "usage"]], "Use another Tensor as input": [[256, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using the ASGD Optimizer": [[185, null]], "Using the Adadelta Optimizer": [[186, null]], "Using the Adagrad Optimizer": [[187, null]], "Using the Adam Optimizer": [[188, null]], "Using the AdamW Optimizer": [[189, null]], "Using the Adamax Optimizer": [[190, null]], "Using the NAdam Optimizer": [[191, null]], "Using the RAdam Optimizer": [[192, null]], "Using the RMSprop Optimizer": [[193, null]], "Using the Rprop Optimizer": [[194, null]], "Using the SGD Optimizer": [[195, null]], "Utility Functions": [[93, null], [117, null]], "VGGNet": [[55, null]], "Weight Initializations": [[127, null]], "Why Use Type Aliases?": [[201, null]], "ZFNet": [[60, null]], "activation Functions": [[93, null]], "alexnet": [[21, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "inception_resnet_v1": [[27, null]], "inception_resnet_v2": [[28, null]], "inception_v1": [[23, null]], "inception_v3": [[24, null]], "inception_v4": [[25, null]], "lenet_1": [[31, null]], "lenet_4": [[32, null]], "lenet_5": [[33, null]], "lucid.Tensor": [[209, null]], "lucid.abs": [[231, null]], "lucid.add": [[210, null]], "lucid.arange": [[221, null]], "lucid.arccos": [[232, null]], "lucid.arcsin": [[233, null]], "lucid.arctan": [[234, null]], "lucid.clip": [[235, null]], "lucid.concatenate": [[257, null]], "lucid.cos": [[236, null]], "lucid.cosh": [[237, null]], "lucid.cube": [[238, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[222, null]], "lucid.div": [[211, null]], "lucid.dot": [[212, null]], "lucid.empty": [[223, null]], "lucid.empty_like": [[224, null]], "lucid.exp": [[239, null]], "lucid.eye": [[225, null]], "lucid.flatten": [[258, null]], "lucid.grad_enabled": [[197, null]], "lucid.hstack": [[259, null]], "lucid.inner": [[213, null]], "lucid.linalg": [[8, null]], "lucid.linalg.cholesky": [[9, null]], "lucid.linalg.det": [[10, null]], "lucid.linalg.eig": [[11, null]], "lucid.linalg.inv": [[13, null]], "lucid.linalg.matrix_power": [[14, null]], "lucid.linalg.norm": [[15, null]], "lucid.linalg.pinv": [[16, null]], "lucid.linalg.qr": [[17, null]], "lucid.linalg.solve": [[18, null]], "lucid.linalg.svd": [[19, null]], "lucid.log": [[240, null]], "lucid.matmul": [[214, null]], "lucid.max": [[241, null]], "lucid.maximum": [[215, null]], "lucid.mean": [[242, null]], "lucid.meshgrid": [[261, null]], "lucid.min": [[243, null]], "lucid.minimum": [[216, null]], "lucid.models": [[62, null]], "lucid.mul": [[217, null]], "lucid.newaxis": [[198, null]], "lucid.nn": [[182, null]], "lucid.nn.functional": [[93, null]], "lucid.no_grad": [[199, null]], "lucid.ones": [[226, null]], "lucid.ones_like": [[227, null]], "lucid.optim": [[184, null]], "lucid.outer": [[218, null]], "lucid.pad": [[262, null]], "lucid.power": [[219, null]], "lucid.random": [[208, null]], "lucid.random.rand": [[203, null]], "lucid.random.randint": [[204, null]], "lucid.random.randn": [[205, null]], "lucid.random.seed": [[206, null]], "lucid.random.uniform": [[207, null]], "lucid.ravel": [[263, null]], "lucid.reciprocal": [[244, null]], "lucid.register_model": [[200, null]], "lucid.repeat": [[264, null]], "lucid.reshape": [[265, null]], "lucid.sign": [[245, null]], "lucid.sin": [[246, null]], "lucid.sinh": [[247, null]], "lucid.sqrt": [[248, null]], "lucid.square": [[249, null]], "lucid.squeeze": [[266, null]], "lucid.stack": [[267, null]], "lucid.sub": [[220, null]], "lucid.sum": [[250, null]], "lucid.tan": [[251, null]], "lucid.tanh": [[252, null]], "lucid.tensor": [[256, null]], "lucid.tile": [[268, null]], "lucid.trace": [[253, null]], "lucid.transforms": [[282, null]], "lucid.transpose": [[254, null]], "lucid.types": [[201, null]], "lucid.unsqueeze": [[269, null]], "lucid.var": [[255, null]], "lucid.vstack": [[270, null]], "lucid.zeros": [[228, null]], "lucid.zeros_like": [[229, null]], "models.sk_resnet_18": [[52, null]], "models.sk_resnet_34": [[53, null]], "models.sk_resnet_50": [[54, null]], "models.summarize": [[63, null]], "nn.AdaptiveAvgPool1d": [[172, null]], "nn.AdaptiveAvgPool2d": [[173, null]], "nn.AdaptiveAvgPool3d": [[174, null]], "nn.AlphaDropout": [[147, null]], "nn.AvgPool1d": [[175, null]], "nn.AvgPool2d": [[176, null]], "nn.AvgPool3d": [[177, null]], "nn.BCELoss": [[158, null]], "nn.BatchNorm1d": [[164, null]], "nn.BatchNorm2d": [[165, null]], "nn.BatchNorm3d": [[166, null]], "nn.Bilinear": [[154, null]], "nn.Buffer": [[64, null]], "nn.Conv1d": [[143, null]], "nn.Conv2d": [[144, null]], "nn.Conv3d": [[145, null]], "nn.ConvBNReLU1d": [[120, null]], "nn.ConvBNReLU2d": [[121, null]], "nn.ConvBNReLU3d": [[122, null]], "nn.CrossEntropyLoss": [[159, null]], "nn.Dropout": [[148, null]], "nn.Dropout1d": [[149, null]], "nn.Dropout2d": [[150, null]], "nn.Dropout3d": [[151, null]], "nn.ELU": [[134, null]], "nn.GELU": [[135, null]], "nn.HuberLoss": [[160, null]], "nn.Identity": [[155, null]], "nn.InstanceNorm1d": [[167, null]], "nn.InstanceNorm2d": [[168, null]], "nn.InstanceNorm3d": [[169, null]], "nn.LayerNorm": [[170, null]], "nn.LeakyReLU": [[136, null]], "nn.Linear": [[156, null]], "nn.MSELoss": [[161, null]], "nn.MaxPool1d": [[178, null]], "nn.MaxPool2d": [[179, null]], "nn.MaxPool3d": [[180, null]], "nn.Module": [[65, null]], "nn.ModuleDict": [[67, null]], "nn.ModuleList": [[68, null]], "nn.NLLLoss": [[162, null]], "nn.Parameter": [[66, null]], "nn.ParameterDict": [[69, null]], "nn.ParameterList": [[70, null]], "nn.ReLU": [[137, null]], "nn.SELU": [[138, null]], "nn.SEModule": [[123, null]], "nn.SelectiveKernel": [[124, null]], "nn.Sequential": [[71, null]], "nn.Sigmoid": [[139, null]], "nn.Softmax": [[140, null]], "nn.Tanh": [[141, null]], "nn.functional.adaptive_avg_pool1d": [[107, null]], "nn.functional.adaptive_avg_pool2d": [[108, null]], "nn.functional.adaptive_avg_pool3d": [[109, null]], "nn.functional.alpha_dropout": [[87, null]], "nn.functional.avg_pool1d": [[110, null]], "nn.functional.avg_pool2d": [[111, null]], "nn.functional.avg_pool3d": [[112, null]], "nn.functional.batch_norm": [[103, null]], "nn.functional.bilinear": [[94, null]], "nn.functional.binary_cross_entropy": [[97, null]], "nn.functional.conv1d": [[82, null]], "nn.functional.conv2d": [[83, null]], "nn.functional.conv3d": [[84, null]], "nn.functional.cross_entropy": [[98, null]], "nn.functional.dropout": [[88, null]], "nn.functional.dropout1d": [[89, null]], "nn.functional.dropout2d": [[90, null]], "nn.functional.dropout3d": [[91, null]], "nn.functional.elu": [[73, null]], "nn.functional.gelu": [[74, null]], "nn.functional.huber_loss": [[99, null]], "nn.functional.instance_norm": [[105, null]], "nn.functional.interpolate": [[118, null]], "nn.functional.layer_norm": [[106, null]], "nn.functional.leaky_relu": [[76, null]], "nn.functional.linear": [[96, null]], "nn.functional.max_pool1d": [[114, null]], "nn.functional.max_pool2d": [[115, null]], "nn.functional.max_pool3d": [[116, null]], "nn.functional.mse_loss": [[101, null]], "nn.functional.nll_loss": [[102, null]], "nn.functional.relu": [[77, null]], "nn.functional.rotate": [[119, null]], "nn.functional.selu": [[78, null]], "nn.functional.sigmoid": [[79, null]], "nn.functional.softmax": [[80, null]], "nn.functional.tanh": [[81, null]], "nn.functional.unfold": [[86, null]], "nn.init.constant": [[126, null]], "nn.init.kaiming_normal": [[128, null]], "nn.init.kaiming_uniform": [[129, null]], "nn.init.normal": [[130, null]], "nn.init.uniform": [[131, null]], "nn.init.xavier_normal": [[132, null]], "nn.init.xavier_uniform": [[133, null]], "optim.ASGD": [[185, null]], "optim.Adadelta": [[186, null]], "optim.Adagrad": [[187, null]], "optim.Adam": [[188, null]], "optim.AdamW": [[189, null]], "optim.Adamax": [[190, null]], "optim.NAdam": [[191, null]], "optim.Optimizer": [[183, null]], "optim.RAdam": [[192, null]], "optim.RMSprop": [[193, null]], "optim.Rprop": [[194, null]], "optim.SGD": [[195, null]], "resnet_1001": [[35, null]], "resnet_101": [[36, null]], "resnet_152": [[37, null]], "resnet_18": [[38, null]], "resnet_200": [[39, null]], "resnet_269": [[40, null]], "resnet_34": [[41, null]], "resnet_50": [[42, null]], "se_resnet_101": [[46, null]], "se_resnet_152": [[47, null]], "se_resnet_18": [[48, null]], "se_resnet_34": [[49, null]], "se_resnet_50": [[50, null]], "transforms.CenterCrop": [[273, null]], "transforms.Compose": [[271, null]], "transforms.Normalize": [[274, null]], "transforms.RandomCrop": [[275, null]], "transforms.RandomGrayscale": [[276, null]], "transforms.RandomHorizontalFlip": [[277, null]], "transforms.RandomRotation": [[278, null]], "transforms.RandomVerticalFlip": [[279, null]], "transforms.Resize": [[280, null]], "transforms.ToTensor": [[272, null]], "vggnet_11": [[56, null]], "vggnet_13": [[57, null]], "vggnet_16": [[58, null]], "vggnet_19": [[59, null]], "wide_resnet_101": [[43, null]], "wide_resnet_50": [[44, null]], "zfnet": [[61, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/MNIST", "datasets/image/index", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/conv/alex/AlexNet", "models/conv/alex/alexnet", "models/conv/inception/Inception", "models/conv/inception/inception_v1", "models/conv/inception/inception_v3", "models/conv/inception/inception_v4", "models/conv/inception_res/InceptionResNet", "models/conv/inception_res/inception_resnet_v1", "models/conv/inception_res/inception_resnet_v2", "models/conv/index", "models/conv/lenet/LeNet", "models/conv/lenet/lenet_1", "models/conv/lenet/lenet_4", "models/conv/lenet/lenet_5", "models/conv/resnet/ResNet", "models/conv/resnet/resnet_1001", "models/conv/resnet/resnet_101", "models/conv/resnet/resnet_152", "models/conv/resnet/resnet_18", "models/conv/resnet/resnet_200", "models/conv/resnet/resnet_269", "models/conv/resnet/resnet_34", "models/conv/resnet/resnet_50", "models/conv/resnet/wide_resnet_101", "models/conv/resnet/wide_resnet_50", "models/conv/senet/SENet", "models/conv/senet/se_resnet_101", "models/conv/senet/se_resnet_152", "models/conv/senet/se_resnet_18", "models/conv/senet/se_resnet_34", "models/conv/senet/se_resnet_50", "models/conv/sknet/SKNet", "models/conv/sknet/sk_resnet_18", "models/conv/sknet/sk_resnet_34", "models/conv/sknet/sk_resnet_50", "models/conv/vgg/VGGNet", "models/conv/vgg/vggnet_11", "models/conv/vgg/vggnet_13", "models/conv/vgg/vggnet_16", "models/conv/vgg/vggnet_19", "models/conv/zfnet/ZFNet", "models/conv/zfnet/zfnet", "models/models", "models/summarize", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/fused/ConvBNReLU1d", "nn/fused/ConvBNReLU2d", "nn/fused/ConvBNReLU3d", "nn/fused/SEModule", "nn/fused/SelectiveKernel", "nn/fused/index", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/nn", "optim/Optimizer", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "others/types", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/meshgrid", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/conv/alex/AlexNet.rst", "models/conv/alex/alexnet.rst", "models/conv/inception/Inception.rst", "models/conv/inception/inception_v1.rst", "models/conv/inception/inception_v3.rst", "models/conv/inception/inception_v4.rst", "models/conv/inception_res/InceptionResNet.rst", "models/conv/inception_res/inception_resnet_v1.rst", "models/conv/inception_res/inception_resnet_v2.rst", "models/conv/index.rst", "models/conv/lenet/LeNet.rst", "models/conv/lenet/lenet_1.rst", "models/conv/lenet/lenet_4.rst", "models/conv/lenet/lenet_5.rst", "models/conv/resnet/ResNet.rst", "models/conv/resnet/resnet_1001.rst", "models/conv/resnet/resnet_101.rst", "models/conv/resnet/resnet_152.rst", "models/conv/resnet/resnet_18.rst", "models/conv/resnet/resnet_200.rst", "models/conv/resnet/resnet_269.rst", "models/conv/resnet/resnet_34.rst", "models/conv/resnet/resnet_50.rst", "models/conv/resnet/wide_resnet_101.rst", "models/conv/resnet/wide_resnet_50.rst", "models/conv/senet/SENet.rst", "models/conv/senet/se_resnet_101.rst", "models/conv/senet/se_resnet_152.rst", "models/conv/senet/se_resnet_18.rst", "models/conv/senet/se_resnet_34.rst", "models/conv/senet/se_resnet_50.rst", "models/conv/sknet/SKNet.rst", "models/conv/sknet/sk_resnet_18.rst", "models/conv/sknet/sk_resnet_34.rst", "models/conv/sknet/sk_resnet_50.rst", "models/conv/vgg/VGGNet.rst", "models/conv/vgg/vggnet_11.rst", "models/conv/vgg/vggnet_13.rst", "models/conv/vgg/vggnet_16.rst", "models/conv/vgg/vggnet_19.rst", "models/conv/zfnet/ZFNet.rst", "models/conv/zfnet/zfnet.rst", "models/models.rst", "models/summarize.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/fused/ConvBNReLU1d.rst", "nn/fused/ConvBNReLU2d.rst", "nn/fused/ConvBNReLU3d.rst", "nn/fused/SEModule.rst", "nn/fused/SelectiveKernel.rst", "nn/fused/index.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "others/types.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"abs() (in module lucid)": [[231, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[186, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[187, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[188, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[190, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[189, "lucid.optim.AdamW", false]], "adaptive_avg_pool1d() (in module lucid.nn.functional)": [[107, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[108, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[109, "lucid.nn.functional.adaptive_avg_pool3d", false]], "adaptiveavgpool1d (class in lucid.nn)": [[172, "lucid.nn.AdaptiveAvgPool1d", false]], "adaptiveavgpool2d (class in lucid.nn)": [[173, "lucid.nn.AdaptiveAvgPool2d", false]], "adaptiveavgpool3d (class in lucid.nn)": [[174, "lucid.nn.AdaptiveAvgPool3d", false]], "add() (in module lucid)": [[210, "lucid.add", false]], "alexnet (class in lucid.models)": [[20, "lucid.models.AlexNet", false]], "alexnet() (in module lucid.models)": [[21, "lucid.models.alexnet", false]], "alpha_dropout() (in module lucid.nn.functional)": [[87, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[147, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[221, "lucid.arange", false]], "arccos() (in module lucid)": [[232, "lucid.arccos", false]], "arcsin() (in module lucid)": [[233, "lucid.arcsin", false]], "arctan() (in module lucid)": [[234, "lucid.arctan", false]], "asgd (class in lucid.optim)": [[185, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[110, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[111, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[112, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[175, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[176, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[177, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[103, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[164, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[165, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[166, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[158, "lucid.nn.BCELoss", false]], "bilinear (class in lucid.nn)": [[154, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[94, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[97, "lucid.nn.functional.binary_cross_entropy", false]], "buffer (class in lucid.nn)": [[64, "lucid.nn.Buffer", false]], "centercrop (class in lucid.transforms)": [[273, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[9, "lucid.linalg.cholesky", false]], "clip() (in module lucid)": [[235, "lucid.clip", false]], "compose (class in lucid.transforms)": [[271, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[257, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[126, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[143, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[82, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[144, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[83, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[145, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[84, "lucid.nn.functional.conv3d", false]], "convbnrelu1d (class in lucid.nn)": [[120, "lucid.nn.ConvBNReLU1d", false]], "convbnrelu2d (class in lucid.nn)": [[121, "lucid.nn.ConvBNReLU2d", false]], "convbnrelu3d (class in lucid.nn)": [[122, "lucid.nn.ConvBNReLU3d", false]], "cos() (in module lucid)": [[236, "lucid.cos", false]], "cosh() (in module lucid)": [[237, "lucid.cosh", false]], "cross_entropy() (in module lucid.nn.functional)": [[98, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[159, "lucid.nn.CrossEntropyLoss", false]], "cube() (in module lucid)": [[238, "lucid.cube", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "det() (in module lucid.linalg)": [[10, "lucid.linalg.det", false]], "diag() (in module lucid)": [[222, "lucid.diag", false]], "div() (in module lucid)": [[211, "lucid.div", false]], "dot() (in module lucid)": [[212, "lucid.dot", false]], "dropout (class in lucid.nn)": [[148, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[88, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[149, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[89, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[150, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[90, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[151, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[91, "lucid.nn.functional.dropout3d", false]], "eig() (in module lucid.linalg)": [[11, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[134, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[73, "lucid.nn.functional.elu", false]], "empty() (in module lucid)": [[223, "lucid.empty", false]], "empty_like() (in module lucid)": [[224, "lucid.empty_like", false]], "exp() (in module lucid)": [[239, "lucid.exp", false]], "eye() (in module lucid)": [[225, "lucid.eye", false]], "flatten() (in module lucid)": [[258, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[135, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[74, "lucid.nn.functional.gelu", false]], "grad_enabled() (in module lucid)": [[197, "lucid.grad_enabled", false]], "hstack() (in module lucid)": [[259, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[99, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[160, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[155, "lucid.nn.Identity", false]], "inception (class in lucid.models)": [[22, "lucid.models.Inception", false]], "inception_resnet_v1() (in module lucid.models)": [[27, "lucid.models.inception_resnet_v1", false]], "inception_resnet_v2() (in module lucid.models)": [[28, "lucid.models.inception_resnet_v2", false]], "inception_v1() (in module lucid.models)": [[23, "lucid.models.inception_v1", false]], "inception_v3() (in module lucid.models)": [[24, "lucid.models.inception_v3", false]], "inception_v4() (in module lucid.models)": [[25, "lucid.models.inception_v4", false]], "inceptionresnet (class in lucid.models)": [[26, "lucid.models.InceptionResNet", false]], "inner() (in module lucid)": [[213, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[105, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[167, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[168, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[169, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[118, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[13, "lucid.linalg.inv", false]], "kaiming_normal() (in module lucid.nn.init)": [[128, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[129, "lucid.nn.init.kaiming_uniform", false]], "layer_norm() (in module lucid.nn.functional)": [[106, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[170, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[76, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[136, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[30, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[31, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[32, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[33, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[156, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[96, "lucid.nn.functional.linear", false]], "log() (in module lucid)": [[240, "lucid.log", false]], "lucid": [[7, "module-lucid", false]], "matmul() (in module lucid)": [[214, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[14, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[241, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[114, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[115, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[116, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[215, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[178, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[179, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[180, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[242, "lucid.mean", false]], "meshgrid() (in module lucid)": [[261, "lucid.meshgrid", false]], "min() (in module lucid)": [[243, "lucid.min", false]], "minimum() (in module lucid)": [[216, "lucid.minimum", false]], "mnist (class in lucid.datasets)": [[5, "lucid.datasets.MNIST", false]], "module": [[7, "module-lucid", false]], "module (class in lucid.nn)": [[65, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[67, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[68, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[101, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[161, "lucid.nn.MSELoss", false]], "mul() (in module lucid)": [[217, "lucid.mul", false]], "nadam (class in lucid.optim)": [[191, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[102, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[162, "lucid.nn.NLLLoss", false]], "no_grad() (in module lucid)": [[199, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[15, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[130, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[274, "lucid.transforms.Normalize", false]], "ones() (in module lucid)": [[226, "lucid.ones", false]], "ones_like() (in module lucid)": [[227, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[183, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[218, "lucid.outer", false]], "pad() (in module lucid)": [[262, "lucid.pad", false]], "parameter (class in lucid.nn)": [[66, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[69, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[70, "lucid.nn.ParameterList", false]], "pinv() (in module lucid.linalg)": [[16, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[219, "lucid.power", false]], "qr() (in module lucid.linalg)": [[17, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[192, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[203, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[204, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[205, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[275, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[276, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[277, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[278, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[279, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[263, "lucid.ravel", false]], "reciprocal() (in module lucid)": [[244, "lucid.reciprocal", false]], "register_model() (in module lucid)": [[200, "lucid.register_model", false]], "relu (class in lucid.nn)": [[137, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[77, "lucid.nn.functional.relu", false]], "repeat() (in module lucid)": [[264, "lucid.repeat", false]], "reshape() (in module lucid)": [[265, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[280, "lucid.transforms.Resize", false]], "resnet (class in lucid.models)": [[34, "lucid.models.ResNet", false]], "resnet_1001() (in module lucid.models)": [[35, "lucid.models.resnet_1001", false]], "resnet_101() (in module lucid.models)": [[36, "lucid.models.resnet_101", false]], "resnet_152() (in module lucid.models)": [[37, "lucid.models.resnet_152", false]], "resnet_18() (in module lucid.models)": [[38, "lucid.models.resnet_18", false]], "resnet_200() (in module lucid.models)": [[39, "lucid.models.resnet_200", false]], "resnet_269() (in module lucid.models)": [[40, "lucid.models.resnet_269", false]], "resnet_34() (in module lucid.models)": [[41, "lucid.models.resnet_34", false]], "resnet_50() (in module lucid.models)": [[42, "lucid.models.resnet_50", false]], "rmsprop (class in lucid.optim)": [[193, "lucid.optim.RMSprop", false]], "rotate() (in module lucid.nn.functional)": [[119, "lucid.nn.functional.rotate", false]], "rprop (class in lucid.optim)": [[194, "lucid.optim.Rprop", false]], "se_resnet_101() (in module lucid.models)": [[46, "lucid.models.se_resnet_101", false]], "se_resnet_152() (in module lucid.models)": [[47, "lucid.models.se_resnet_152", false]], "se_resnet_18() (in module lucid.models)": [[48, "lucid.models.se_resnet_18", false]], "se_resnet_34() (in module lucid.models)": [[49, "lucid.models.se_resnet_34", false]], "se_resnet_50() (in module lucid.models)": [[50, "lucid.models.se_resnet_50", false]], "seed() (in module lucid.random)": [[206, "lucid.random.seed", false]], "selectivekernel (class in lucid.nn)": [[124, "lucid.nn.SelectiveKernel", false]], "selu (class in lucid.nn)": [[138, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[78, "lucid.nn.functional.selu", false]], "semodule (class in lucid.nn)": [[123, "lucid.nn.SEModule", false]], "senet (class in lucid.models)": [[45, "lucid.models.SENet", false]], "sequential (class in lucid.nn)": [[71, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[195, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[139, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[79, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[245, "lucid.sign", false]], "sin() (in module lucid)": [[246, "lucid.sin", false]], "sinh() (in module lucid)": [[247, "lucid.sinh", false]], "sk_resnet_18() (in module lucid.models)": [[52, "lucid.models.sk_resnet_18", false]], "sk_resnet_34() (in module lucid.models)": [[53, "lucid.models.sk_resnet_34", false]], "sk_resnet_50() (in module lucid.models)": [[54, "lucid.models.sk_resnet_50", false]], "sknet (class in lucid.models)": [[51, "lucid.models.SKNet", false]], "softmax (class in lucid.nn)": [[140, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[80, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[18, "lucid.linalg.solve", false]], "sqrt() (in module lucid)": [[248, "lucid.sqrt", false]], "square() (in module lucid)": [[249, "lucid.square", false]], "squeeze() (in module lucid)": [[266, "lucid.squeeze", false]], "stack() (in module lucid)": [[267, "lucid.stack", false]], "sub() (in module lucid)": [[220, "lucid.sub", false]], "sum() (in module lucid)": [[250, "lucid.sum", false]], "summarize() (in module lucid.models)": [[63, "lucid.models.summarize", false]], "svd() (in module lucid.linalg)": [[19, "lucid.linalg.svd", false]], "tan() (in module lucid)": [[251, "lucid.tan", false]], "tanh (class in lucid.nn)": [[141, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[252, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[81, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[209, "lucid.Tensor", false]], "tensor() (in module lucid)": [[256, "lucid.tensor", false]], "tile() (in module lucid)": [[268, "lucid.tile", false]], "totensor (class in lucid.transforms)": [[272, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[253, "lucid.trace", false]], "transpose() (in module lucid)": [[254, "lucid.transpose", false]], "unfold() (in module lucid.nn.functional)": [[86, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[131, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[207, "lucid.random.uniform", false]], "unsqueeze() (in module lucid)": [[269, "lucid.unsqueeze", false]], "var() (in module lucid)": [[255, "lucid.var", false]], "vggnet (class in lucid.models)": [[55, "lucid.models.VGGNet", false]], "vggnet_11() (in module lucid.models)": [[56, "lucid.models.vggnet_11", false]], "vggnet_13() (in module lucid.models)": [[57, "lucid.models.vggnet_13", false]], "vggnet_16() (in module lucid.models)": [[58, "lucid.models.vggnet_16", false]], "vggnet_19() (in module lucid.models)": [[59, "lucid.models.vggnet_19", false]], "vstack() (in module lucid)": [[270, "lucid.vstack", false]], "wide_resnet_101() (in module lucid.models)": [[43, "lucid.models.wide_resnet_101", false]], "wide_resnet_50() (in module lucid.models)": [[44, "lucid.models.wide_resnet_50", false]], "xavier_normal() (in module lucid.nn.init)": [[132, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[133, "lucid.nn.init.xavier_uniform", false]], "zeros() (in module lucid)": [[228, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[229, "lucid.zeros_like", false]], "zfnet (class in lucid.models)": [[60, "lucid.models.ZFNet", false]], "zfnet() (in module lucid.models)": [[61, "lucid.models.zfnet", false]]}, "objects": {"": [[7, 0, 0, "-", "lucid"]], "lucid": [[209, 1, 1, "", "Tensor"], [231, 2, 1, "", "abs"], [210, 2, 1, "", "add"], [221, 2, 1, "", "arange"], [232, 2, 1, "", "arccos"], [233, 2, 1, "", "arcsin"], [234, 2, 1, "", "arctan"], [235, 2, 1, "", "clip"], [257, 2, 1, "", "concatenate"], [236, 2, 1, "", "cos"], [237, 2, 1, "", "cosh"], [238, 2, 1, "", "cube"], [222, 2, 1, "", "diag"], [211, 2, 1, "", "div"], [212, 2, 1, "", "dot"], [223, 2, 1, "", "empty"], [224, 2, 1, "", "empty_like"], [239, 2, 1, "", "exp"], [225, 2, 1, "", "eye"], [258, 2, 1, "", "flatten"], [197, 2, 1, "", "grad_enabled"], [259, 2, 1, "", "hstack"], [213, 2, 1, "", "inner"], [240, 2, 1, "", "log"], [214, 2, 1, "", "matmul"], [241, 2, 1, "", "max"], [215, 2, 1, "", "maximum"], [242, 2, 1, "", "mean"], [261, 2, 1, "", "meshgrid"], [243, 2, 1, "", "min"], [216, 2, 1, "", "minimum"], [217, 2, 1, "", "mul"], [199, 2, 1, "", "no_grad"], [226, 2, 1, "", "ones"], [227, 2, 1, "", "ones_like"], [218, 2, 1, "", "outer"], [262, 2, 1, "", "pad"], [219, 2, 1, "", "power"], [263, 2, 1, "", "ravel"], [244, 2, 1, "", "reciprocal"], [200, 2, 1, "", "register_model"], [264, 2, 1, "", "repeat"], [265, 2, 1, "", "reshape"], [245, 2, 1, "", "sign"], [246, 2, 1, "", "sin"], [247, 2, 1, "", "sinh"], [248, 2, 1, "", "sqrt"], [249, 2, 1, "", "square"], [266, 2, 1, "", "squeeze"], [267, 2, 1, "", "stack"], [220, 2, 1, "", "sub"], [250, 2, 1, "", "sum"], [251, 2, 1, "", "tan"], [252, 2, 1, "", "tanh"], [256, 2, 1, "", "tensor"], [268, 2, 1, "", "tile"], [253, 2, 1, "", "trace"], [254, 2, 1, "", "transpose"], [269, 2, 1, "", "unsqueeze"], [255, 2, 1, "", "var"], [270, 2, 1, "", "vstack"], [228, 2, 1, "", "zeros"], [229, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "MNIST"]], "lucid.linalg": [[9, 2, 1, "", "cholesky"], [10, 2, 1, "", "det"], [11, 2, 1, "", "eig"], [13, 2, 1, "", "inv"], [14, 2, 1, "", "matrix_power"], [15, 2, 1, "", "norm"], [16, 2, 1, "", "pinv"], [17, 2, 1, "", "qr"], [18, 2, 1, "", "solve"], [19, 2, 1, "", "svd"]], "lucid.models": [[20, 1, 1, "", "AlexNet"], [22, 1, 1, "", "Inception"], [26, 1, 1, "", "InceptionResNet"], [30, 1, 1, "", "LeNet"], [34, 1, 1, "", "ResNet"], [45, 1, 1, "", "SENet"], [51, 1, 1, "", "SKNet"], [55, 1, 1, "", "VGGNet"], [60, 1, 1, "", "ZFNet"], [21, 2, 1, "", "alexnet"], [27, 2, 1, "", "inception_resnet_v1"], [28, 2, 1, "", "inception_resnet_v2"], [23, 2, 1, "", "inception_v1"], [24, 2, 1, "", "inception_v3"], [25, 2, 1, "", "inception_v4"], [31, 2, 1, "", "lenet_1"], [32, 2, 1, "", "lenet_4"], [33, 2, 1, "", "lenet_5"], [35, 2, 1, "", "resnet_1001"], [36, 2, 1, "", "resnet_101"], [37, 2, 1, "", "resnet_152"], [38, 2, 1, "", "resnet_18"], [39, 2, 1, "", "resnet_200"], [40, 2, 1, "", "resnet_269"], [41, 2, 1, "", "resnet_34"], [42, 2, 1, "", "resnet_50"], [46, 2, 1, "", "se_resnet_101"], [47, 2, 1, "", "se_resnet_152"], [48, 2, 1, "", "se_resnet_18"], [49, 2, 1, "", "se_resnet_34"], [50, 2, 1, "", "se_resnet_50"], [52, 2, 1, "", "sk_resnet_18"], [53, 2, 1, "", "sk_resnet_34"], [54, 2, 1, "", "sk_resnet_50"], [63, 2, 1, "", "summarize"], [56, 2, 1, "", "vggnet_11"], [57, 2, 1, "", "vggnet_13"], [58, 2, 1, "", "vggnet_16"], [59, 2, 1, "", "vggnet_19"], [43, 2, 1, "", "wide_resnet_101"], [44, 2, 1, "", "wide_resnet_50"], [61, 2, 1, "", "zfnet"]], "lucid.nn": [[172, 1, 1, "", "AdaptiveAvgPool1d"], [173, 1, 1, "", "AdaptiveAvgPool2d"], [174, 1, 1, "", "AdaptiveAvgPool3d"], [147, 1, 1, "", "AlphaDropout"], [175, 1, 1, "", "AvgPool1d"], [176, 1, 1, "", "AvgPool2d"], [177, 1, 1, "", "AvgPool3d"], [158, 1, 1, "", "BCELoss"], [164, 1, 1, "", "BatchNorm1d"], [165, 1, 1, "", "BatchNorm2d"], [166, 1, 1, "", "BatchNorm3d"], [154, 1, 1, "", "Bilinear"], [64, 1, 1, "", "Buffer"], [143, 1, 1, "", "Conv1d"], [144, 1, 1, "", "Conv2d"], [145, 1, 1, "", "Conv3d"], [120, 1, 1, "", "ConvBNReLU1d"], [121, 1, 1, "", "ConvBNReLU2d"], [122, 1, 1, "", "ConvBNReLU3d"], [159, 1, 1, "", "CrossEntropyLoss"], [148, 1, 1, "", "Dropout"], [149, 1, 1, "", "Dropout1d"], [150, 1, 1, "", "Dropout2d"], [151, 1, 1, "", "Dropout3d"], [134, 1, 1, "", "ELU"], [135, 1, 1, "", "GELU"], [160, 1, 1, "", "HuberLoss"], [155, 1, 1, "", "Identity"], [167, 1, 1, "", "InstanceNorm1d"], [168, 1, 1, "", "InstanceNorm2d"], [169, 1, 1, "", "InstanceNorm3d"], [170, 1, 1, "", "LayerNorm"], [136, 1, 1, "", "LeakyReLU"], [156, 1, 1, "", "Linear"], [161, 1, 1, "", "MSELoss"], [178, 1, 1, "", "MaxPool1d"], [179, 1, 1, "", "MaxPool2d"], [180, 1, 1, "", "MaxPool3d"], [65, 1, 1, "", "Module"], [67, 1, 1, "", "ModuleDict"], [68, 1, 1, "", "ModuleList"], [162, 1, 1, "", "NLLLoss"], [66, 1, 1, "", "Parameter"], [69, 1, 1, "", "ParameterDict"], [70, 1, 1, "", "ParameterList"], [137, 1, 1, "", "ReLU"], [138, 1, 1, "", "SELU"], [123, 1, 1, "", "SEModule"], [124, 1, 1, "", "SelectiveKernel"], [71, 1, 1, "", "Sequential"], [139, 1, 1, "", "Sigmoid"], [140, 1, 1, "", "Softmax"], [141, 1, 1, "", "Tanh"]], "lucid.nn.functional": [[107, 2, 1, "", "adaptive_avg_pool1d"], [108, 2, 1, "", "adaptive_avg_pool2d"], [109, 2, 1, "", "adaptive_avg_pool3d"], [87, 2, 1, "", "alpha_dropout"], [110, 2, 1, "", "avg_pool1d"], [111, 2, 1, "", "avg_pool2d"], [112, 2, 1, "", "avg_pool3d"], [103, 2, 1, "", "batch_norm"], [94, 2, 1, "", "bilinear"], [97, 2, 1, "", "binary_cross_entropy"], [82, 2, 1, "", "conv1d"], [83, 2, 1, "", "conv2d"], [84, 2, 1, "", "conv3d"], [98, 2, 1, "", "cross_entropy"], [88, 2, 1, "", "dropout"], [89, 2, 1, "", "dropout1d"], [90, 2, 1, "", "dropout2d"], [91, 2, 1, "", "dropout3d"], [73, 2, 1, "", "elu"], [74, 2, 1, "", "gelu"], [99, 2, 1, "", "huber_loss"], [105, 2, 1, "", "instance_norm"], [118, 2, 1, "", "interpolate"], [106, 2, 1, "", "layer_norm"], [76, 2, 1, "", "leaky_relu"], [96, 2, 1, "", "linear"], [114, 2, 1, "", "max_pool1d"], [115, 2, 1, "", "max_pool2d"], [116, 2, 1, "", "max_pool3d"], [101, 2, 1, "", "mse_loss"], [102, 2, 1, "", "nll_loss"], [77, 2, 1, "", "relu"], [119, 2, 1, "", "rotate"], [78, 2, 1, "", "selu"], [79, 2, 1, "", "sigmoid"], [80, 2, 1, "", "softmax"], [81, 2, 1, "", "tanh"], [86, 2, 1, "", "unfold"]], "lucid.nn.init": [[126, 2, 1, "", "constant"], [128, 2, 1, "", "kaiming_normal"], [129, 2, 1, "", "kaiming_uniform"], [130, 2, 1, "", "normal"], [131, 2, 1, "", "uniform"], [132, 2, 1, "", "xavier_normal"], [133, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[185, 1, 1, "", "ASGD"], [186, 1, 1, "", "Adadelta"], [187, 1, 1, "", "Adagrad"], [188, 1, 1, "", "Adam"], [189, 1, 1, "", "AdamW"], [190, 1, 1, "", "Adamax"], [191, 1, 1, "", "NAdam"], [183, 1, 1, "", "Optimizer"], [192, 1, 1, "", "RAdam"], [193, 1, 1, "", "RMSprop"], [194, 1, 1, "", "Rprop"], [195, 1, 1, "", "SGD"]], "lucid.random": [[203, 2, 1, "", "rand"], [204, 2, 1, "", "randint"], [205, 2, 1, "", "randn"], [206, 2, 1, "", "seed"], [207, 2, 1, "", "uniform"]], "lucid.transforms": [[273, 1, 1, "", "CenterCrop"], [271, 1, 1, "", "Compose"], [274, 1, 1, "", "Normalize"], [275, 1, 1, "", "RandomCrop"], [276, 1, 1, "", "RandomGrayscale"], [277, 1, 1, "", "RandomHorizontalFlip"], [278, 1, 1, "", "RandomRotation"], [279, 1, 1, "", "RandomVerticalFlip"], [280, 1, 1, "", "Resize"], [272, 1, 1, "", "ToTensor"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [3, 7, 8, 14, 16, 19, 62, 63, 64, 65, 66, 67, 69, 70, 71, 107, 108, 109, 124, 159, 162, 172, 173, 174, 175, 178, 179, 182, 183, 184, 198, 200, 214, 222, 240, 242, 250, 253, 255, 256, 266, 272, 274, 282], "0": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 24, 26, 30, 45, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 229, 231, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 251, 252, 254, 255, 256, 257, 259, 262, 263, 264, 266, 267, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 282], "000": [5, 223, 224], "0000": [159, 160, 162], "0001": 185, "000e": [223, 224], "001": [185, 188, 189, 191, 192, 195], "002": [190, 191], "004": 191, "005": 136, "01": [76, 136, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195], "01051757": 205, "016": [35, 62], "0205": 159, "0217": 159, "0227": 159, "024": [50, 62], "0299": 159, "032": [42, 62], "044715": [74, 135], "0450": 159, "0451": 159, "047": [57, 62], "04719755": 232, "0474259": 79, "0480": 159, "05": [103, 105, 106, 120, 121, 122, 136, 164, 165, 166, 167, 168, 169, 170], "0507": [78, 138], "06": [186, 194], "069": [40, 62], "07": [97, 98, 158, 159], "0700": 159, "0706508": 141, "071": [35, 62], "0721": 159, "073": [54, 62], "0794": 162, "08": [188, 189, 190, 191, 192, 193], "0802": 162, "08333333": 16, "085537": 239, "088": [50, 62], "0900": [140, 159], "0986": [80, 140], "09861229": 240, "0992": 159, "1": [0, 1, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 26, 30, 31, 32, 33, 45, 51, 55, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 203, 204, 205, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 226, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282], "10": [0, 1, 2, 3, 20, 21, 30, 31, 32, 33, 55, 60, 61, 62, 63, 67, 68, 71, 83, 84, 94, 96, 107, 143, 144, 145, 150, 151, 154, 156, 165, 166, 168, 172, 176, 177, 179, 187, 200, 204, 207, 208, 211, 214, 217, 218, 234, 250, 273, 275, 276, 278], "100": [21, 56, 57, 58, 59, 62, 200, 282], "1000": [20, 21, 23, 24, 25, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61], "1000000": 185, "1001": [35, 62, 159], "1003": 159, "1007": 62, "101": [36, 43, 46, 62], "1014": 78, "102": [40, 62], "1025": [68, 71], "1026": [68, 71], "1027": [68, 71], "10499": 79, "1050": 139, "1054": 162, "1056": [68, 71], "10590": 62, "1097": 62, "11": [38, 48, 55, 56, 62, 94, 143, 144, 145, 150, 154, 165, 166, 168, 176, 177, 179, 214, 273, 274, 275, 276, 278], "1105": 62, "1109": 62, "1111": 158, "1134": 94, "114b": 276, "119": 94, "1192": [79, 80, 140], "12": [31, 32, 69, 94, 109, 143, 144, 145, 150, 151, 154, 165, 166, 168, 174, 176, 177, 179, 214, 218, 219, 273, 275, 276, 278], "120": [30, 33], "123": [128, 129, 130, 131, 132, 133, 206, 207], "124": [128, 129, 132, 133], "125": 177, "1250": 160, "126": [43, 62], "128": [27, 34, 43, 44, 55, 62, 71, 124, 271, 282], "128x128": [271, 282], "13": [23, 55, 57, 62, 94, 143, 144, 145, 154, 166, 176, 177, 179, 214, 273, 275, 276, 278], "132": [56, 62], "133": [57, 62], "138": [58, 62], "14": [143, 144, 145, 150, 151, 154, 166, 176, 177, 179, 201, 214, 218, 273, 275, 276, 278], "1409": 62, "143": [59, 62], "145": 94, "149": [35, 62], "15": [0, 94, 143, 144, 145, 154, 166, 176, 177, 179, 214, 218, 253, 273, 275, 276, 278, 282], "1513": 162, "152": [37, 47, 62], "155": 214, "1556": 62, "1588": [74, 135], "16": [30, 33, 45, 55, 58, 62, 68, 69, 71, 108, 109, 120, 121, 122, 123, 124, 143, 144, 145, 150, 151, 154, 165, 166, 173, 174, 176, 177, 179, 182, 214, 218, 248, 273, 275, 276, 278], "160": [36, 62], "16227766": 17, "16425": 162, "1643": 158, "166": 214, "17": [143, 144, 145, 154, 166, 177, 213, 273, 275, 276, 278], "170": 94, "17520119": 247, "18": [32, 38, 48, 52, 62, 143, 144, 145, 150, 154, 166, 177, 217, 218, 273, 275, 276, 278], "1800": 159, "19": [55, 59, 62, 83, 84, 94, 144, 145, 166, 212, 214], "192": [31, 32, 37, 62], "1966": [80, 139, 140], "1998": [62, 159], "1_53": 62, "1d": [82, 107, 110, 114, 120, 164, 167, 172, 207, 214, 222, 253, 261, 262, 263, 264, 268], "1e": [97, 98, 103, 105, 106, 120, 121, 122, 158, 159, 164, 165, 166, 167, 168, 169, 170, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], "1e6": 185, "1st": [20, 60], "2": [1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 31, 32, 33, 38, 48, 52, 60, 63, 64, 65, 66, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 124, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 203, 204, 205, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282], "20": [0, 5, 67, 68, 71, 144, 145, 150, 166, 218, 239], "200": [39, 62], "2011": 123, "2012": 62, "2014": 62, "2015": 62, "2016": 62, "2017": 62, "2018": [62, 123], "2019": 62, "2023": 123, "2039": 162, "204": 145, "21": [41, 49, 62, 69, 94, 144, 145, 166, 218], "211": 214, "22": [27, 62, 94, 144, 145, 150, 166, 212, 214], "2231": [159, 162], "224": [20, 34, 44, 52, 53, 54, 55, 60, 62], "2247": [164, 165, 166, 167, 168, 169, 170], "224x224": 23, "226": 214, "22752314": 205, "2278": 62, "23": [36, 43, 46, 144, 145, 166], "2324": [62, 138], "234": [128, 129, 130, 131, 132, 133, 207], "24": [39, 94, 108, 144, 145, 150, 166, 173, 218], "240": [59, 62], "2424": [80, 140], "2447": 140, "246": [31, 62], "25": [0, 42, 52, 62, 79, 139, 145, 161, 166, 176, 177, 211, 244, 255], "2500": [158, 160, 162], "2512": 134, "2547": 138, "256": [34, 55], "26": [69, 96, 145, 156, 166, 218], "26325684": 205, "2689": [80, 139, 140], "269": [40, 62], "27": [94, 143, 145, 166, 238], "276": [128, 129, 132, 133], "28": [31, 32, 50, 62, 94, 145, 218], "28x28": [5, 31, 32], "29": 145, "299": 62, "299r": 276, "299x299": [24, 25, 27, 28], "2_i": [167, 168, 169], "2d": [83, 90, 108, 111, 115, 121, 165, 168, 173, 214, 222, 225, 253, 258, 261, 262, 264, 268, 278], "2e": 190, "2nd": [20, 60], "2x2": [86, 273, 275], "3": [1, 2, 3, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 31, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 53, 54, 55, 60, 62, 64, 65, 66, 68, 69, 70, 71, 74, 79, 80, 82, 83, 84, 86, 87, 88, 89, 90, 91, 94, 96, 99, 101, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 235, 237, 238, 239, 240, 241, 242, 243, 247, 248, 249, 250, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280], "30": [24, 40, 62, 68, 119, 145, 278], "3026": 162, "31": [94, 145, 214], "310": [223, 224], "31622777": 17, "319": 62, "32": [33, 62, 68, 71, 94, 96, 108, 120, 121, 122, 123, 124, 144, 145, 156, 173, 182, 212, 213, 218], "321": [128, 129, 132, 133], "326": [46, 62], "32x32": [30, 33], "33": [68, 71, 96, 145, 156], "33333333": 16, "336": [56, 62], "34": [41, 49, 53, 62, 68, 71, 94, 145, 214, 218], "342": [128, 129, 132, 133], "345": [128, 129, 130, 131, 132, 133, 207], "35": [28, 62, 68, 71, 145], "352": [23, 62], "3567": [158, 162], "357": [58, 61, 62], "36": [37, 39, 47, 145], "3679": [73, 78, 134], "368": [52, 54, 62], "37": 143, "372": 94, "375": 161, "3750": 160, "378": [32, 62], "38344152": 203, "38629436": 240, "389056": 239, "392": [24, 62], "393": [23, 62], "3935": 134, "3d": [84, 91, 109, 112, 116, 122, 145, 166, 169, 174], "3x3": [62, 208], "4": [0, 1, 2, 3, 8, 9, 10, 11, 13, 15, 16, 17, 30, 31, 32, 34, 36, 41, 42, 43, 44, 46, 49, 50, 53, 54, 62, 63, 69, 71, 82, 83, 84, 86, 89, 90, 91, 94, 96, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 185, 188, 192, 193, 195, 198, 201, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 227, 229, 235, 240, 241, 242, 243, 244, 246, 248, 249, 250, 251, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 267, 268, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280], "40": [25, 62], "400": 33, "4044": 158, "4076": 159, "4096": [20, 60], "41421356": 9, "416": [40, 62], "41666667": 16, "41808962": 205, "419974": 81, "4199743": 141, "42": [94, 123, 201, 208], "421": [128, 129, 132, 133], "423": [128, 129, 130, 131], "42718872": 17, "4278": 62, "4284": 62, "4286": 158, "43": [212, 214], "4323": 134, "4375": 160, "43758721": 203, "44": [36, 62], "4472136": 11, "4495": [166, 169], "45": [53, 62, 94, 119, 278], "4545": 147, "47112767": 234, "48": [40, 96, 156], "49": [46, 62], "4979": 134, "4x4": 280, "5": [1, 2, 7, 8, 13, 14, 15, 16, 20, 24, 30, 31, 32, 33, 51, 52, 53, 54, 60, 62, 63, 65, 66, 67, 68, 69, 71, 74, 79, 82, 83, 84, 86, 87, 88, 89, 90, 91, 94, 96, 99, 101, 103, 105, 106, 107, 110, 111, 118, 120, 121, 122, 124, 126, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 175, 176, 177, 179, 180, 194, 198, 201, 204, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 224, 225, 227, 229, 231, 232, 233, 241, 242, 243, 244, 245, 250, 253, 254, 255, 256, 259, 261, 265, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282], "50": [34, 42, 44, 50, 54, 62, 96, 156, 194, 212, 214, 276, 277, 279, 282], "5000": [158, 160, 162], "510": 62, "5108": 162, "512": [28, 34, 38, 53, 62], "519": 62, "52359878": 233, "53": [94, 213], "543": [128, 129, 130, 131, 132, 133, 207], "54308063": 237, "544": [58, 62], "545": 219, "5455": 147, "549": [36, 62], "557": [42, 62], "563": [128, 129, 132, 133], "57": [54, 62, 94], "57079633": [232, 233], "57366333": 206, "586": [25, 62], "587g": 276, "592": [48, 62], "5987": 62, "5995": 62, "5th": [20, 60], "6": [8, 16, 20, 30, 33, 34, 41, 42, 44, 49, 50, 53, 54, 60, 69, 70, 82, 83, 84, 86, 91, 94, 96, 107, 129, 133, 143, 144, 145, 148, 149, 150, 151, 154, 156, 158, 164, 165, 166, 167, 168, 169, 170, 172, 176, 177, 179, 180, 186, 194, 198, 201, 207, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 222, 223, 224, 227, 229, 241, 242, 243, 250, 253, 254, 255, 256, 259, 264, 265, 270, 272, 273, 274, 275, 276, 278, 280], "60": [37, 62], "6052": 162, "6065": 134, "608": [61, 62], "61": [21, 33, 62], "6124": [164, 165, 166, 167, 168, 169, 170], "62": [61, 62, 94], "62686041": 247, "630": 62, "6321": [73, 134], "63245553": 17, "64": [34, 39, 51, 55, 62, 68, 71, 94, 123, 124], "645": 62, "64589411": 203, "647": [52, 62], "654": [128, 129, 130, 131, 132, 133, 207], "657": [128, 129, 132, 133], "6590": [80, 140], "66": [47, 62], "6652": 140, "66666667": 16, "6667": 158, "667": [59, 62], "6682": 158, "669": [39, 62], "67": 214, "672": [41, 62], "67326": 138, "6733": 78, "678": [128, 129, 130, 131, 132, 133], "68811989": 205, "689": [38, 62], "69314718": 240, "696": [43, 62], "7": [15, 55, 69, 82, 83, 84, 86, 91, 94, 96, 97, 98, 107, 124, 135, 138, 139, 141, 143, 144, 145, 150, 151, 154, 156, 158, 159, 161, 165, 166, 168, 169, 172, 176, 177, 179, 180, 201, 204, 207, 210, 212, 213, 214, 218, 220, 222, 239, 242, 250, 253, 254, 255, 268, 272, 273, 274, 275, 276, 278, 280], "70": 5, "7001": 159, "706": [33, 62], "70710678": [11, 246], "7132": 62, "7141": 62, "7147": 162, "7182818": 239, "726791": 62, "7311": [80, 139, 140], "739": [27, 62], "74": 214, "75": [96, 156, 161, 185], "7581": 78, "76159416": 252, "7616": [81, 141], "76219569": 237, "7635": 138, "770": 62, "772": 219, "778": [48, 62], "78": [44, 62], "78357324": 205, "78539816": 234, "79172504": 203, "797": [41, 62], "7x7": 60, "8": [14, 18, 34, 37, 40, 47, 52, 53, 54, 63, 68, 69, 71, 82, 83, 84, 86, 91, 94, 96, 97, 107, 108, 109, 120, 121, 122, 123, 135, 138, 139, 141, 143, 144, 145, 148, 149, 150, 151, 154, 156, 158, 161, 165, 166, 168, 169, 172, 173, 174, 176, 177, 179, 180, 188, 189, 190, 191, 192, 193, 201, 204, 211, 212, 213, 214, 218, 219, 221, 222, 238, 242, 250, 253, 254, 255, 272, 273, 274, 275, 276, 278, 280], "80": 5, "8005": 159, "808": [37, 62], "817": [24, 62], "818": 62, "8182": 147, "82": 94, "821": [47, 62], "833": 62, "84": [30, 32, 33], "840": [21, 62], "8413": [74, 135], "847": [28, 62], "848": [47, 57, 62], "8584": 138, "86": 62, "863": [56, 62], "864": [39, 62], "868": [49, 62], "872": [46, 62], "876": [128, 129, 132, 133, 207], "8808": [80, 139, 140], "886": [43, 62], "887": 219, "891773": 203, "89442719": 11, "895": [53, 62], "9": [0, 1, 3, 5, 18, 62, 83, 86, 94, 96, 107, 143, 144, 145, 150, 154, 156, 158, 165, 166, 168, 172, 176, 177, 179, 185, 186, 188, 189, 190, 191, 192, 193, 195, 201, 204, 207, 210, 214, 218, 219, 220, 222, 248, 249, 272, 273, 274, 275, 276, 278], "90709145": 206, "9091": 147, "9120": 162, "9163": 162, "94": 35, "9486833": 17, "949e": [223, 224], "9526": 79, "9545": 135, "958": [49, 62], "96366276": 203, "9640": 141, "96402758": 252, "973": [44, 62], "978": 62, "984": [25, 62], "99": 193, "9957": 162, "99734545": 206, "999": [0, 188, 189, 190, 191, 192], "A": [1, 3, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 26, 30, 34, 43, 44, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 65, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 94, 96, 97, 98, 102, 103, 105, 106, 118, 124, 147, 148, 149, 150, 151, 158, 159, 162, 164, 165, 166, 167, 168, 169, 170, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 201, 203, 204, 205, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 278], "As": 206, "Be": 0, "By": [0, 2, 3, 7, 35, 36, 37, 38, 39, 40, 41, 42, 66, 119, 182, 192, 198, 203, 204, 205, 207, 272, 282], "For": [2, 3, 4, 7, 9, 10, 11, 13, 14, 15, 16, 18, 71, 73, 74, 76, 77, 78, 79, 81, 94, 96, 118, 128, 129, 132, 133, 138, 143, 144, 145, 154, 156, 164, 165, 166, 167, 168, 169, 182, 184, 206, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 239, 240, 241, 242, 243, 246, 248, 250, 253, 254, 255, 262, 264, 266, 268, 269, 282], "If": [0, 1, 2, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 34, 63, 65, 67, 68, 69, 70, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 91, 94, 96, 103, 105, 108, 109, 118, 119, 120, 121, 122, 124, 128, 129, 143, 144, 145, 154, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 183, 188, 189, 193, 194, 200, 203, 204, 205, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 276, 277, 279, 280], "In": [3, 7, 16, 82, 83, 84, 159, 162, 197, 198, 199, 271, 282], "It": [1, 2, 3, 7, 16, 17, 18, 20, 22, 23, 24, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 48, 55, 62, 65, 67, 68, 69, 70, 71, 91, 94, 118, 119, 120, 121, 122, 123, 135, 137, 141, 154, 155, 158, 159, 160, 161, 162, 172, 173, 174, 182, 183, 184, 185, 191, 193, 194, 195, 198, 206, 210, 211, 212, 215, 216, 217, 219, 220, 241, 243, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272], "Its": [18, 208], "Near": 16, "No": 86, "Not": 155, "One": [31, 282], "The": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282], "There": 265, "These": [4, 7, 8, 11, 14, 17, 19, 43, 44, 52, 53, 54, 62, 147, 148, 149, 150, 151, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 194, 201, 208, 282], "To": [3, 62, 184, 205, 208, 223, 224, 261, 282], "With": [3, 86, 272, 282], "_": [14, 67, 68, 70, 71, 73, 74, 76, 77, 78, 79, 81, 96, 118, 165, 166, 167, 168, 169, 175, 176, 177, 178, 179, 180, 185, 186, 188, 189, 190, 191, 193, 195, 212, 213, 214, 218, 253, 254, 273, 274, 275, 277, 278, 279], "_1": [11, 67, 68, 69, 70, 71, 94, 154, 218, 257, 259, 270], "_2": [11, 67, 68, 69, 70, 71, 94, 154, 218, 257, 259, 270], "__call__": [1, 65], "__getitem__": [0, 2, 3, 5], "__init__": [0, 1, 2, 3, 7, 20, 22, 26, 30, 55, 60, 63, 64, 65, 66, 67, 68, 69, 70, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 154, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 200, 209, 271, 272], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5], "__repr__": 183, "__setattr__": 65, "_activ": 80, "_arraylik": [201, 222, 224, 227, 229], "_arraylikeint": 262, "_arrayorscalar": [64, 66, 201, 209, 256], "_base_dtyp": [221, 223, 226, 228], "_c": 274, "_decai": 191, "_fanmod": [128, 129], "_grad_en": [197, 199], "_i": [11, 15, 80, 94, 140, 161, 164, 170, 175, 178, 212, 213, 215, 216, 218, 219, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 264, 266, 269, 270], "_in": [128, 129, 132, 133], "_j": [80, 140, 175, 178, 218, 242, 250, 254, 255], "_k": 267, "_left": 118, "_make_lay": 55, "_modul": 65, "_n": [11, 67, 68, 69, 70, 71, 257, 259, 270], "_numpyarrai": 201, "_out": [128, 129, 132, 133, 264, 268], "_p": 15, "_pad": 262, "_paddingstr": [120, 121, 122, 143, 144, 145], "_paramet": 65, "_reductiontyp": [97, 98, 99, 101, 102, 158, 159, 160, 161, 162], "_right": 118, "_scalar": [126, 130, 131, 132, 133, 201, 221, 235], "_seresnetbottleneck": [46, 47, 50], "_seresnetmodul": [48, 49], "_shapelik": [63, 106, 170, 201, 204, 226, 228, 265, 266, 269], "_size": [107, 108, 109], "_skresnetmodul": [52, 53, 54], "_slope": 136, "_statedict": 183, "_t": [192, 193], "_tensor": [64, 66, 222, 256], "_tensorop": 209, "_u": 16, "_v": 16, "_valu": [235, 262], "_width": 262, "a_i": [215, 216, 219], "aaai": 62, "ab": 230, "abc": [2, 183], "abil": [7, 62, 282], "about": [7, 63], "abov": [7, 197, 199, 206, 222, 225], "absolut": [14, 15, 99, 190, 231], "abstract": [2, 3, 182, 183, 184, 185, 193, 195], "abstractmethod": 183, "acceler": [62, 138, 164, 165, 166, 185, 191, 193, 195], "accept": [155, 203, 209], "access": [0, 2, 3, 4, 5, 64, 66, 67, 68, 69, 70, 71, 265], "accord": [118, 143, 144, 145, 154, 156, 159, 162, 186, 187, 188, 189, 190, 191, 192, 254], "accordingli": 10, "account": [14, 16, 17], "accumul": [185, 186, 187, 210, 211, 215, 216, 217, 220], "accur": 47, "accuraci": [50, 62], "achiev": [62, 82, 83, 84, 107, 172, 173, 174, 191, 277, 279], "across": [0, 64, 68, 71, 106, 107, 108, 109, 132, 133, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 201, 203, 204, 205, 206, 207, 208, 223, 224, 242, 255], "act": 189, "activ": [7, 20, 35, 39, 40, 45, 55, 60, 62, 67, 71, 73, 74, 76, 77, 78, 79, 80, 81, 87, 120, 121, 122, 123, 124, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 147, 148, 149, 150, 151, 158, 159, 162, 164, 165, 166, 170, 241, 243], "actual": [66, 158, 159, 161, 162, 209, 275], "ad": [34, 65, 67, 68, 69, 70, 71, 82, 83, 84, 94, 96, 97, 98, 103, 105, 106, 110, 111, 112, 114, 115, 116, 120, 121, 122, 143, 144, 145, 158, 159, 164, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 179, 180, 186, 187, 188, 189, 190, 191, 192, 193, 200, 269, 282], "adadelta": 196, "adagrad": [186, 196], "adam": [189, 190, 191, 192, 196], "adamax": 196, "adamw": 196, "adapt": [20, 22, 30, 46, 48, 51, 52, 53, 54, 55, 60, 62, 107, 108, 109, 123, 124, 172, 173, 174, 186, 187, 188, 191, 192, 193, 194], "adaptive_avg_pool1d": [93, 113, 172], "adaptive_avg_pool2d": [93, 113, 173], "adaptive_avg_pool3d": [93, 113, 174], "adaptiveavgpool1d": [153, 181], "adaptiveavgpool2d": [20, 45, 55, 60, 153, 181], "adaptiveavgpool3d": [153, 181], "add": [4, 65, 67, 68, 71, 94, 96, 143, 144, 145, 154, 156, 170, 183, 185, 188, 193, 195, 198, 230, 262, 269], "add_modul": [65, 71], "add_param_group": 183, "addit": [4, 7, 14, 21, 22, 23, 24, 25, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 61, 65, 68, 71, 94, 96, 103, 105, 154, 156, 164, 165, 166, 167, 168, 169, 185, 191, 198, 208, 210, 267], "addition": 191, "address": [159, 162, 188, 189, 192], "adjust": [27, 51, 107, 108, 109, 124, 147, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 184, 188, 192, 193, 194, 259, 270], "advanc": [3, 16, 39, 62, 68, 71, 82, 83, 84, 107, 108, 109, 172, 173, 174, 182, 185], "advantag": [28, 199], "affect": [197, 263, 266, 271], "affin": [120, 121, 122, 164, 165, 166, 167, 168, 169, 170, 278], "after": [14, 20, 60, 66, 67, 68, 69, 70, 71, 91, 123, 124, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 147, 148, 149, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 170, 175, 176, 177, 178, 179, 180, 189, 199, 209, 210, 211, 215, 216, 217, 219, 220, 262, 272], "afterward": 199, "aggreg": [62, 124, 218, 264, 268], "aim": [4, 7], "al": [23, 62], "alex": 62, "alexnet": [29, 60, 62], "algebra": [7, 8, 225], "algorithm": [7, 14, 16, 17, 183, 184, 208], "align": [18, 118, 213, 214], "align_corn": 118, "all": [0, 3, 4, 7, 17, 65, 67, 68, 69, 70, 71, 83, 84, 107, 108, 109, 111, 112, 115, 116, 118, 121, 122, 124, 136, 137, 145, 172, 173, 174, 176, 177, 180, 182, 183, 184, 185, 188, 193, 194, 195, 219, 241, 242, 243, 250, 253, 255, 257, 258, 259, 264, 266, 267, 268, 270, 273, 274, 282], "allevi": [62, 73], "alloc": [223, 224], "allow": [0, 1, 3, 4, 7, 16, 17, 28, 30, 34, 51, 62, 66, 67, 68, 69, 70, 71, 73, 76, 77, 80, 84, 86, 119, 124, 134, 135, 136, 138, 139, 140, 141, 143, 144, 145, 182, 186, 187, 198, 221, 226, 228, 229, 254, 256, 261, 271, 272, 282], "along": [80, 118, 124, 140, 213, 214, 218, 241, 242, 243, 250, 253, 255, 257, 259, 261, 264, 267, 268, 269, 270, 277, 279], "alongsid": 64, "alpha": [73, 76, 78, 87, 134, 138, 147, 185, 193], "alpha_dropout": [92, 93, 147], "alphadropout": [152, 153], "alphadropoutmodel": 147, "alreadi": 200, "also": [63, 73, 74, 76, 77, 78, 79, 81, 94, 96, 118, 191, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 224, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 252, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270], "alter": [71, 265], "altern": [1, 135, 186, 214], "alwai": [66, 263, 276, 277, 279], "among": [24, 124], "amount": [82, 83, 84, 110, 111, 112, 114, 115, 116, 191], "amsgrad": [188, 189], "an": [0, 1, 3, 7, 11, 13, 14, 16, 17, 19, 21, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 51, 60, 61, 62, 63, 65, 67, 68, 69, 70, 71, 74, 82, 83, 84, 86, 87, 88, 89, 90, 91, 94, 108, 109, 118, 119, 124, 132, 133, 134, 139, 143, 144, 145, 147, 148, 149, 150, 151, 154, 156, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 184, 185, 188, 191, 193, 199, 200, 201, 209, 214, 222, 225, 235, 242, 250, 255, 257, 264, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282], "analog": [264, 268], "analysi": [4, 123, 143, 144, 145, 169, 175, 177, 178, 180], "andrew": 62, "angl": [119, 278], "ani": [0, 1, 2, 3, 14, 16, 21, 34, 51, 61, 64, 65, 66, 67, 69, 70, 73, 74, 76, 77, 78, 79, 81, 87, 88, 94, 96, 103, 105, 139, 170, 182, 183, 197, 199, 200, 206, 209, 221, 222, 223, 225, 226, 227, 228, 229, 241, 243, 254, 256, 257, 258, 259, 262, 264, 267, 268, 269, 270, 271, 282], "anoth": [70, 220, 227, 229, 272, 282], "api": [4, 172, 173, 174, 282], "appear": 183, "append": [68, 70, 71], "appli": [2, 4, 5, 7, 14, 20, 51, 60, 62, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 84, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 99, 101, 102, 120, 121, 122, 123, 124, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 147, 148, 149, 150, 151, 154, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 185, 186, 187, 189, 190, 191, 192, 214, 262, 264, 271, 274, 276, 277, 278, 279, 280, 282], "applic": [4, 16, 27, 28, 82, 105, 143, 144, 145, 154, 156, 208, 221, 228, 262, 280], "approach": [3, 26, 71, 189], "appropri": [16, 62, 65, 69, 71, 143, 144, 145, 147, 148, 149, 159, 176, 177, 197, 199], "approx": 78, "approxim": [16, 74, 135, 176, 179], "ar": [1, 2, 3, 4, 7, 10, 11, 13, 14, 16, 17, 18, 19, 22, 23, 24, 62, 64, 65, 66, 67, 68, 69, 70, 71, 80, 82, 83, 84, 86, 94, 96, 108, 109, 118, 123, 124, 128, 129, 131, 132, 133, 140, 143, 144, 145, 147, 148, 149, 150, 151, 154, 156, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 185, 188, 189, 191, 192, 193, 194, 195, 197, 199, 200, 201, 203, 204, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 231, 235, 239, 241, 242, 243, 244, 245, 250, 253, 254, 257, 261, 264, 265, 268, 271, 272, 273, 275, 276, 280, 282], "arang": 230, "arbitrari": [68, 155, 223, 224, 235, 240, 242, 246, 248, 250, 254, 255], "arcco": 230, "arch": 200, "architectur": [21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 45, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 67, 68, 69, 70, 71, 74, 123, 137, 154, 155, 182, 200], "arcsin": 230, "arctan": 230, "area": 118, "arg": [65, 155, 200, 223], "argument": [3, 4, 21, 22, 23, 24, 25, 27, 28, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 61, 65, 71, 155, 203, 223, 254], "around": [11, 119, 141], "arr": [201, 257, 259, 267, 270], "arrai": [7, 64, 66, 198, 201, 209, 214, 222, 227, 229, 256, 263, 264, 272, 282], "art": 62, "artifici": 62, "arxiv": 62, "asarrai": 201, "asgd": 196, "aspect": 280, "assign": [65, 67, 69, 71, 118, 159, 162], "assist": [22, 23, 24], "associ": [69, 70], "assum": [0, 1, 183, 184, 197], "attempt": [67, 71], "attent": [51, 70, 94, 123], "attribut": 65, "audio": 143, "augment": [3, 4, 48, 119, 208, 264, 268, 271, 275, 276, 277, 278, 279, 282], "autodiff": 7, "autograd": 182, "automat": [4, 7, 66, 67, 68, 69, 70, 182, 203, 204, 205, 207, 209, 223, 224, 229, 261, 272], "auxiliari": [22, 23, 24, 64], "avail": [4, 5, 7], "averag": [20, 31, 32, 33, 34, 45, 51, 55, 60, 64, 107, 108, 109, 110, 111, 112, 118, 123, 124, 161, 172, 173, 174, 175, 176, 177, 185, 186, 188, 193, 242], "avg_down": 34, "avg_pool": [175, 176, 177], "avg_pool1d": [93, 113], "avg_pool2d": [93, 113], "avg_pool3d": [93, 113], "avgpool": [20, 45, 55, 60, 124], "avgpool1d": [153, 181], "avgpool1dmodel": 175, "avgpool2d": [153, 181], "avgpool2dmodel": 176, "avgpool3d": [153, 181], "avgpool3dmodel": 177, "avoid": [2, 3, 16, 69, 199], "ax": [8, 198, 241, 242, 243, 250, 254, 255, 264, 266, 268], "axi": [80, 140, 213, 214, 241, 242, 243, 250, 255, 257, 259, 261, 262, 264, 266, 267, 268, 269, 270, 277, 279], "b": [8, 18, 94, 96, 131, 143, 144, 145, 154, 156, 198, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 257, 259, 267, 270, 276], "b_i": [215, 216, 219], "back": [118, 176, 177, 200, 213, 218, 264, 268], "backbon": [52, 53, 54], "backpropag": [7, 10, 11, 13, 14, 16, 17, 19, 62, 64, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 94, 96, 118, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 179, 180, 182, 199, 205, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 239, 241, 243, 256, 262, 264, 268, 272], "backward": [7, 64, 66, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 209, 272], "balanc": 160, "bar": 185, "base": [3, 8, 13, 14, 17, 18, 22, 23, 24, 25, 26, 27, 28, 30, 51, 55, 62, 65, 67, 68, 69, 70, 86, 94, 107, 108, 109, 124, 147, 159, 160, 172, 173, 174, 182, 183, 184, 185, 189, 193, 194, 195, 210, 211, 215, 216, 217, 219, 220, 229, 239, 240, 241, 243, 254, 261, 262, 275, 276, 277, 278, 279], "base_width": [43, 44, 51], "basic": [7, 20, 34, 52, 53, 54, 60, 63, 82, 83, 84, 107, 108, 109, 120, 121, 122, 123, 128, 129, 132, 133, 172, 173, 174, 273, 274, 275, 276, 277, 278, 279, 280], "basicblock": [34, 38, 41], "batch": [1, 2, 3, 8, 14, 17, 19, 23, 24, 25, 27, 28, 45, 82, 83, 84, 86, 89, 90, 91, 94, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 143, 144, 145, 154, 156, 158, 159, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 176, 177, 178, 179, 180, 192, 214, 273, 274, 275, 276, 278, 280], "batch_norm": [93, 104, 164, 165, 166], "batch_norm1": 71, "batch_norm2": 71, "batch_siz": [1, 2, 3, 124], "batchnorm": [120, 121, 122], "batchnorm1d": [120, 153, 171], "batchnorm1dmodel": 164, "batchnorm2d": [71, 121, 153, 171], "batchnorm2dmodel": 165, "batchnorm3d": [122, 153, 171], "batchnorm3dmodel": 166, "bceloss": [153, 163], "becaus": [2, 204], "becom": [15, 65, 186, 194], "befor": [14, 45, 63, 66, 185, 191, 199, 206, 262, 274, 282], "begin": [1, 15, 73, 76, 77, 78, 134, 136, 137, 138, 160, 161, 162, 175, 176, 177, 178, 179, 180, 192, 194, 198, 208, 215, 216, 218, 231, 235, 241, 243, 245, 262], "behav": [160, 253], "behavior": [62, 68, 71, 197, 208, 214, 224, 282], "being": [70, 119, 147, 148, 149, 150, 151, 192, 197, 199, 257, 259, 270], "belong": 0, "below": [17, 23, 24, 25, 27, 28, 30, 31, 32, 33, 214, 222, 225], "benchmark": 5, "benefici": 71, "benefit": [73, 182, 191, 201], "bernoulli": [147, 148, 149, 150, 151], "best": [128, 129, 132, 133], "beta": [164, 165, 166, 167, 168, 169, 170, 188, 189, 190, 191, 192], "beta1": [188, 189, 190, 191, 192], "beta2": [188, 189, 190, 191, 192], "beta_1": [188, 189, 190, 191, 192], "beta_2": [188, 189, 190, 191, 192], "better": [13, 60, 62, 74, 128, 129, 132, 133, 167, 168, 169, 182, 189, 191, 193, 274], "between": [65, 82, 83, 84, 86, 94, 99, 120, 121, 122, 124, 143, 144, 145, 147, 148, 149, 150, 151, 154, 158, 159, 160, 161, 162, 185, 193, 194, 195, 208, 210, 211, 214, 217, 220, 221, 255, 276, 277, 279, 280], "beyond": [7, 68], "bia": [82, 83, 84, 94, 96, 103, 105, 106, 120, 121, 122, 143, 144, 145, 154, 156, 164, 165, 166, 167, 168, 169, 170, 188, 189, 190, 191, 192], "bias": [143, 144, 145, 156, 170, 182], "bias1": 69, "bias2": 69, "bilinear": [93, 95, 118, 153, 157], "bilinearmodel": 154, "binari": [79, 97, 139, 147, 148, 149, 150, 151, 158], "binary_cross_entropi": [93, 100], "block": [26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 62, 65, 86, 120, 121, 122, 124, 143, 144, 145, 199], "block1": [63, 182], "block2": [63, 182], "block_arg": 34, "blue": 276, "bmatrix": 218, "bn": [120, 121, 122], "bn_affin": [120, 121, 122], "bool": [1, 5, 19, 22, 23, 24, 34, 63, 65, 66, 87, 88, 89, 90, 91, 103, 105, 118, 120, 121, 122, 143, 144, 145, 154, 156, 164, 165, 166, 167, 168, 169, 170, 188, 189, 193, 197, 203, 204, 205, 207, 209, 221, 222, 223, 224, 225, 226, 227, 228, 229, 241, 242, 243, 250, 255, 256, 272], "both": [82, 96, 108, 110, 114, 120, 135, 143, 144, 173, 175, 176, 178, 179, 212, 213, 214, 218, 222, 261, 280], "bottleneck": [34, 35, 36, 37, 39, 40, 42, 43, 44, 123], "bottom": 118, "bound": [129, 131, 133, 194, 207], "box": 4, "branch": [22, 23, 24, 62, 124], "break": 182, "brief": 282, "bright": 282, "broadcast": [150, 151, 242, 250, 255, 265, 269], "buffer": [185, 191, 193, 195], "build": [7, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 51, 52, 53, 54, 62, 65, 68, 71, 182, 282], "built": [3, 7, 35, 39, 40, 71, 182], "burg": 5, "c": [5, 34, 52, 53, 54, 86, 89, 90, 91, 98, 102, 103, 105, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 123, 150, 151, 159, 162, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 198, 259, 270, 274], "c_": [143, 144, 145], "c_in": [82, 83, 84, 120, 121, 122], "c_out": [82, 83, 84], "calcul": [0, 1, 7, 8, 66, 186, 187, 190, 191, 192, 199, 204, 209], "calculu": [9, 16], "call": [1, 65, 197, 200, 210, 211, 214, 215, 216, 217, 219, 220], "callabl": [183, 200, 271], "can": [0, 2, 3, 4, 7, 9, 11, 13, 14, 16, 17, 19, 34, 43, 44, 63, 64, 66, 67, 68, 69, 70, 71, 76, 82, 83, 84, 119, 124, 135, 136, 141, 143, 144, 145, 167, 168, 169, 176, 177, 178, 179, 180, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 198, 199, 201, 207, 208, 209, 214, 223, 224, 225, 226, 228, 229, 242, 250, 255, 259, 261, 262, 264, 265, 268, 269, 270, 271, 272, 275, 277, 278, 279, 282], "cannot": [10, 11, 13, 14, 17, 18, 19], "capabl": [7, 221, 222, 225, 226, 227, 228, 229], "capac": [43, 44, 62], "captur": [51, 62, 86, 143, 144, 145, 154], "cardin": [51, 62], "care": 199, "cartesian": 261, "case": [3, 15, 30, 73, 76, 77, 78, 134, 136, 137, 138, 160, 161, 162, 175, 176, 177, 178, 179, 180, 182, 187, 192, 194, 198, 215, 216, 231, 235, 241, 243, 245, 262, 282], "categori": [35, 36, 37, 38, 39, 40, 41, 42], "caus": [3, 16, 185, 193, 195], "cautiou": 0, "cdot": [9, 10, 13, 14, 15, 18, 73, 74, 76, 78, 79, 82, 83, 84, 94, 96, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 123, 132, 133, 135, 139, 147, 154, 156, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 186, 187, 188, 189, 190, 191, 192, 194, 212, 213, 214, 217, 219], "center": [119, 141, 193, 273, 282], "centercrop": [281, 282], "central": 201, "certain": [10, 74, 94, 154, 188, 189, 197, 241, 243], "chain": [13, 14, 71, 271, 282], "challeng": 62, "cham": 62, "chanc": [276, 277, 279], "chang": [99, 160, 194, 198, 199, 200, 263, 265, 269, 276, 282], "channel": [30, 31, 32, 33, 34, 49, 55, 62, 82, 83, 84, 86, 89, 90, 91, 103, 105, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 143, 144, 145, 150, 151, 164, 165, 166, 167, 168, 169, 172, 175, 176, 177, 178, 179, 180, 274, 276, 280], "character": [43, 44], "check": [197, 273, 275], "checkpoint": 184, "choic": 261, "choleski": 12, "choos": 62, "chosen": 147, "christian": 62, "christoph": 5, "clariti": 201, "class": [3, 4, 7, 21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 61, 63, 80, 98, 102, 182, 184, 200, 222, 225, 256, 282], "classic": 33, "classif": [4, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 55, 56, 57, 58, 59, 60, 61, 62, 79, 80, 97, 98, 102, 139, 140, 158, 159, 162], "classifi": [20, 22, 23, 24, 30, 31, 32, 33, 34, 51, 55, 60], "cleaner": [1, 199, 214], "clear": [66, 209, 223, 224], "clearli": 201, "clf_in_featur": 30, "clf_layer": 30, "clip": [119, 194, 230], "clockwis": 119, "close": [13, 16, 138, 158, 193], "closer": 134, "closur": [183, 184], "cnn": 62, "co": [230, 246], "code": [14, 67, 69, 71, 197, 199, 201, 208], "coeffici": [18, 118, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195], "col": 86, "collect": [4, 8, 62, 67, 68, 70, 71, 184], "color": [276, 282], "colorjitt": 282, "column": [10, 11, 13, 17, 18, 19, 63, 86, 225, 259, 261], "com": 5, "combin": [1, 3, 25, 26, 27, 62, 68, 71, 73, 74, 120, 121, 122, 123, 124, 135, 159, 182, 191, 192, 242, 250, 255, 257, 282], "combined_dataset": [0, 1], "common": [86, 119, 184, 282], "commonli": [7, 74, 79, 80, 81, 82, 84, 94, 101, 103, 105, 119, 123, 132, 133, 140, 145, 158, 161, 162, 175, 176, 177, 178, 179, 180, 198, 201, 226, 266, 272, 273, 274, 275, 277, 278, 279, 282], "compar": [43, 44, 60, 208, 267], "compat": [4, 8, 51, 155, 170, 182, 198, 208, 272, 282], "complex": [2, 3, 7, 11, 28, 34, 37, 40, 41, 47, 49, 63, 67, 68, 71, 77, 137, 178, 180, 182, 184, 282], "compon": [16, 22, 23, 24, 25, 26, 27, 28, 65, 68, 184, 209, 282], "compos": [5, 143, 144, 145, 175, 176, 177, 178, 179, 180, 182, 282], "comprehens": 3, "compris": [43, 44], "comput": [7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 34, 45, 62, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 86, 94, 96, 97, 98, 99, 101, 102, 103, 105, 107, 108, 109, 118, 120, 121, 122, 123, 124, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 193, 197, 198, 199, 201, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 261, 262, 264, 268, 272, 282], "computation": [3, 16, 35], "compute_loss": [184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], "concaten": [0, 82, 83, 84, 259, 260, 267, 270], "concept": [7, 16, 62], "condit": [9, 10, 13], "confer": 62, "config": 55, "configur": [21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 61, 70, 120, 121, 122], "conjunct": [86, 162], "connect": [20, 25, 26, 27, 28, 30, 31, 32, 33, 34, 43, 44, 45, 51, 52, 53, 54, 55, 60, 62, 96, 123, 124, 143, 144, 145, 156], "consecut": 55, "consid": [3, 13, 16, 71, 128, 129, 132, 133, 182, 194, 197, 223, 224, 282], "consider": 16, "consist": [2, 4, 20, 31, 32, 33, 34, 64, 107, 108, 109, 124, 172, 173, 174, 201, 206, 208, 262, 273, 280, 282], "consistent_tensor": 208, "consol": 63, "constant": [97, 98, 103, 105, 106, 127, 138, 158, 159, 164, 165, 166, 167, 168, 169, 170, 186, 187, 188, 189, 190, 191, 192, 193, 201, 262], "constant_pad": 262, "constraint": [1, 124], "construct": [7, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 68, 182, 222, 264, 268], "constructor": [43, 44, 56, 57, 58, 59], "contain": [1, 5, 10, 11, 16, 17, 18, 19, 26, 30, 34, 45, 51, 55, 63, 65, 67, 68, 69, 70, 71, 80, 86, 94, 96, 97, 98, 102, 118, 158, 159, 162, 183, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 224, 231, 232, 233, 234, 236, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 258, 261], "content": 119, "context": [197, 199], "contextmanag": 199, "contigu": 263, "continu": [136, 205], "contrast": [167, 168, 169, 282], "contribut": [118, 147, 148, 149, 150, 151, 175, 178, 179, 180, 185, 191, 253], "control": [124, 134, 160, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 208, 272, 282], "conv": [26, 45, 120, 121, 122, 165, 166], "conv1": [31, 32, 33, 71, 143, 144, 145, 175, 176, 177, 178, 179, 180], "conv1d": [85, 93, 120, 146, 153, 175, 178], "conv1dmodel": 143, "conv2": [31, 32, 33, 71, 143, 144, 145], "conv2d": [68, 71, 85, 93, 121, 146, 153, 165, 176, 179, 182], "conv2dmodel": 144, "conv3d": [85, 93, 122, 146, 153, 166, 177, 180], "conv3dmodel": 145, "conv_bia": [120, 121, 122], "conv_config": 55, "conv_lay": [30, 68], "convblock": 182, "convbnrelu1d": 125, "convbnrelu2d": 125, "convbnrelu3d": 125, "conveni": [4, 21, 61], "convent": 214, "converg": [16, 141, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 274], "convers": [159, 162, 276, 282], "convert": [5, 55, 64, 66, 80, 140, 209, 261, 271, 272, 276, 282], "convnetwork": 68, "convolut": [20, 21, 23, 24, 26, 30, 31, 32, 33, 34, 45, 51, 55, 60, 61, 62, 68, 82, 83, 84, 86, 120, 121, 122, 123, 124, 143, 144, 145, 176, 177, 179, 180, 262], "convolv": [82, 83, 84, 143, 144, 145], "coordin": 261, "core": [0, 1, 2, 3, 65, 182, 183, 209, 282], "corinna": 5, "corner": [118, 273, 275], "correct": [67, 159, 162, 188, 189, 190, 191, 192, 272], "correctli": [16, 65, 67, 68, 69, 70, 71, 159, 162, 208], "correspond": [0, 1, 2, 5, 11, 43, 44, 52, 53, 54, 67, 69, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 94, 96, 118, 137, 140, 154, 156, 164, 165, 166, 167, 168, 169, 176, 177, 185, 193, 195, 212, 213, 215, 216, 219, 239, 240, 246, 248, 259, 262, 264, 268, 270], "cort": 5, "cosh": [230, 247, 252], "cosin": [232, 236, 237, 246], "cost": 62, "could": 65, "count": [62, 63, 257], "counterclockwis": [119, 278], "cover": [8, 82, 83, 84], "coverag": [107, 108, 109], "creat": [2, 3, 7, 20, 21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 68, 71, 124, 182, 198, 200, 208, 221, 225, 226, 227, 228, 229, 261, 267, 271, 282], "creation": [68, 71, 282], "criterion": [158, 159, 160, 161, 162], "critic": [16, 184, 208], "crop": [273, 275, 282], "cross": [97, 98, 158, 159], "cross_entropi": [93, 100], "crossentropyloss": [153, 163], "cube": 230, "cumul": [74, 135], "current": [65, 185, 188, 194, 197], "custom": [4, 7, 20, 21, 27, 28, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 55, 60, 61, 64, 67, 68, 69, 70, 71, 119, 120, 121, 122, 134, 136, 182, 208, 225], "custom_config": 55, "custom_lenet": 30, "customiz": 282, "custommodul": 64, "customnetwork": 67, "customparametermodel": [69, 70], "cvpr": 62, "d": [62, 84, 91, 109, 112, 116, 122, 166, 169, 170, 174, 177, 180, 198, 222, 278], "d_": [84, 109, 112, 116, 145, 174, 177, 180], "d_1": 170, "d_2": 170, "d_n": 170, "d_out": [84, 112, 116], "dampen": [185, 193, 195], "data": [4, 5, 7, 14, 64, 66, 70, 81, 82, 84, 86, 90, 91, 96, 119, 120, 121, 122, 124, 137, 141, 143, 144, 145, 156, 169, 175, 177, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 201, 208, 209, 210, 211, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 256, 262, 263, 264, 265, 266, 268, 271, 272, 275, 276, 277, 278, 279, 282], "databas": 5, "dataload": [2, 3], "dataset": [3, 5, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 119, 187, 199, 271, 273, 282], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 218, "debug": [63, 71, 197, 206, 282], "decai": [185, 186, 187, 188, 189, 190, 191, 192, 193, 195], "decompos": [9, 17, 19], "decomposit": [8, 9, 13, 16, 17, 19], "decor": 200, "decoupl": [186, 187, 189, 190, 191, 192], "decreas": [188, 189, 194], "deep": [1, 3, 4, 7, 26, 34, 35, 36, 37, 39, 40, 46, 47, 50, 62, 103, 135, 138, 182, 208, 271, 272, 282], "deeper": [7, 23, 25, 28, 34, 41, 62, 138], "def": [0, 1, 2, 3, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 154, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272], "default": [1, 5, 15, 19, 20, 21, 22, 23, 24, 25, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 73, 76, 80, 82, 83, 84, 87, 88, 89, 90, 91, 97, 98, 99, 101, 102, 103, 105, 106, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 128, 129, 130, 131, 132, 133, 134, 136, 140, 143, 144, 145, 147, 148, 149, 150, 151, 154, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 179, 180, 183, 184, 191, 197, 203, 204, 205, 207, 209, 221, 222, 223, 224, 225, 226, 227, 228, 229, 241, 242, 243, 250, 254, 255, 256, 257, 259, 261, 262, 264, 267, 270, 272, 276, 277, 279], "defin": [1, 3, 4, 7, 22, 23, 24, 25, 26, 27, 28, 30, 34, 45, 52, 53, 54, 55, 67, 68, 69, 70, 71, 135, 158, 159, 160, 161, 162, 175, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 204, 205, 219, 224, 235, 254, 271, 282], "definit": [7, 9, 120, 121, 122, 282], "degre": [119, 278, 282], "delai": 185, "delta": [80, 99, 140, 160, 186], "delta_": [80, 140], "demonstr": [7, 8, 62, 182, 201], "denomin": [103, 105, 106, 120, 121, 122, 164, 165, 166, 167, 168, 169, 170, 186, 187, 188, 189, 190, 191, 192, 193, 211], "denot": [14, 139, 143, 144, 145, 147, 148, 149, 150, 151, 254], "dens": [7, 187], "dense1": 7, "dense2": 7, "densenet": 123, "densiti": [74, 135], "depend": [7, 14, 15, 70, 97, 98, 99, 101, 102, 118, 143, 212, 222, 241, 243, 264, 268, 275, 276, 280], "depth": [68, 84, 91, 109, 112, 116, 145, 166, 169, 174, 177, 180], "depthwis": [82, 83, 84], "deriv": [16, 17, 80, 107, 108, 109, 135, 140, 141, 143, 144, 145, 154, 156, 200], "descend": 19, "descent": [7, 185, 195], "describ": [10, 11], "descript": 282, "deseri": 64, "design": [3, 4, 7, 8, 20, 21, 23, 24, 25, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 46, 49, 61, 62, 66, 68, 69, 70, 71, 73, 78, 138, 147, 182, 201, 282], "desir": [64, 107, 108, 109, 172, 173, 174, 254, 256], "destin": 65, "det": [8, 12], "det_a": 10, "detail": [7, 63, 184, 208, 214], "detect": 62, "determin": [0, 7, 8, 9, 10, 30, 43, 44, 107, 108, 109, 128, 129, 132, 133, 143, 144, 145, 172, 173, 174, 176, 177, 179, 180, 193, 197, 203, 204, 205, 207, 223, 224, 273, 275], "determinist": 119, "develop": [7, 182, 208, 282], "deviat": [128, 130, 132, 271, 274, 282], "diag": [16, 230], "diagon": [16, 17, 19, 222, 225, 253], "diagonaliz": 11, "dict": [21, 23, 24, 25, 27, 28, 30, 34, 43, 44, 52, 53, 54, 61, 65, 67, 69, 155, 183], "dictionari": [30, 65, 66, 67, 69, 71, 183], "differ": [0, 14, 22, 30, 68, 71, 80, 94, 118, 124, 140, 154, 161, 184, 198, 206, 208, 220, 229, 255, 266, 282], "differenti": [7, 9, 18, 135, 182, 203, 204, 205, 207, 209, 221, 223, 224, 226, 228], "digit": [5, 33, 62], "dilat": [82, 83, 84, 120, 121, 122, 143, 144, 145], "dilation_height": 86, "dilation_width": 86, "dim": [159, 162], "dimens": [10, 11, 13, 14, 17, 18, 19, 20, 34, 51, 55, 60, 62, 66, 80, 94, 96, 103, 105, 106, 108, 109, 118, 123, 124, 140, 143, 144, 145, 164, 165, 166, 167, 168, 169, 170, 173, 174, 176, 177, 178, 179, 180, 198, 201, 203, 207, 209, 213, 223, 241, 242, 243, 250, 253, 254, 255, 257, 259, 262, 264, 266, 267, 268, 269, 270, 273, 275, 280], "dimension": [14, 16, 17, 19, 82, 83, 84, 110, 111, 112, 114, 115, 116, 124, 143, 144, 145, 149, 150, 151, 164, 165, 166, 167, 168, 169, 175, 176, 177, 178, 179, 180, 198, 213, 214, 218, 222, 239, 242, 250, 253, 255, 258, 263, 264, 266, 268], "diminish": 187, "direct": [11, 158, 159, 160, 161, 162, 185, 193, 194, 195], "directli": [67, 68, 69, 70, 118, 186, 187, 189, 190, 191, 192, 206, 208, 256, 282], "directori": [3, 4, 5], "disabl": [197, 199], "discontinu": 245, "discrep": [158, 159, 162], "discret": [204, 208], "disk": 3, "displai": [21, 61, 63], "distribut": [74, 80, 118, 128, 129, 130, 131, 132, 133, 135, 140, 143, 144, 145, 147, 148, 149, 150, 151, 154, 156, 159, 162, 175, 176, 177, 203, 204, 205, 207, 208, 242, 250, 253, 255, 267, 274, 276, 277, 278, 279], "div": 230, "divers": [119, 277, 279, 282], "diversifi": 282, "divid": [1, 16, 68, 71, 80, 82, 83, 84, 140, 158, 159, 160, 161, 162, 211, 274], "divis": [7, 16, 82, 83, 84, 147, 148, 149, 150, 151, 186, 187, 188, 189, 190, 191, 192, 193, 211], "do": [16, 18, 64, 67, 68, 69, 70, 87, 88, 89, 90, 182, 192, 197, 229, 253, 262], "document": [4, 7, 62, 184, 201, 208], "doe": [7, 14, 15, 16, 17, 19, 63, 64, 67, 68, 69, 70, 71, 133, 188, 189, 194, 197, 199, 203, 204, 205, 206, 207, 221, 222, 223, 224, 225, 226, 227, 228, 229, 265], "doesn": 199, "doi": 62, "domain": 4, "don": 199, "dot": [11, 14, 67, 68, 69, 70, 71, 170, 178, 179, 180, 213, 218, 230, 257, 259, 267, 270], "down": [3, 182, 280], "download": [4, 5], "drawback": 73, "drawn": [203, 204, 205, 207, 208, 278], "drop": [147, 148, 149, 150, 151], "dropout": [20, 24, 55, 60, 62, 74, 87, 89, 90, 91, 147, 149, 150, 151], "dropout1d": [92, 93, 152, 153], "dropout1dmodel": 149, "dropout2d": [92, 93, 152, 153], "dropout3d": [92, 93, 152, 153], "dropout_prob": 24, "dropoutmodel": 148, "dtype": [64, 66, 209, 221, 222, 223, 224, 225, 226, 227, 228, 229, 256, 272], "due": [14, 16, 82, 83, 137, 278], "dummi": 63, "duplic": [67, 69], "dure": [3, 7, 10, 11, 13, 16, 17, 19, 22, 23, 24, 34, 64, 65, 66, 67, 68, 69, 70, 71, 80, 87, 88, 89, 90, 91, 103, 105, 119, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 179, 180, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 197, 199, 209, 210, 241, 242, 243, 250, 255, 272, 275, 278, 282], "dy": [76, 136], "dynam": [0, 2, 3, 51, 62, 65, 68, 69, 70, 71, 107, 108, 109, 124, 170, 172, 173, 174, 187, 192, 197], "dynamicnetwork": 68, "e": [0, 10, 11, 13, 14, 17, 19, 23, 24, 25, 27, 28, 30, 31, 32, 33, 55, 64, 80, 124, 139, 140, 147, 159, 183, 186, 193, 194, 225, 237, 239, 240, 247, 252, 253, 257, 276], "each": [1, 2, 3, 4, 11, 14, 16, 17, 19, 20, 30, 34, 43, 44, 45, 51, 52, 53, 54, 55, 60, 62, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 94, 96, 103, 105, 107, 108, 109, 123, 124, 137, 140, 143, 144, 145, 147, 148, 149, 150, 151, 154, 156, 158, 159, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 186, 187, 188, 189, 190, 191, 192, 193, 194, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 257, 259, 261, 262, 264, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 280, 282], "earli": 192, "eas": [4, 7], "easi": [2, 3, 4, 7, 66, 67, 69], "easier": [3, 67, 68, 71], "easili": [4, 66, 70, 282], "eccv": 62, "economi": 19, "edg": 262, "educ": [7, 62], "effect": [62, 67, 68, 69, 70, 71, 80, 82, 83, 84, 86, 134, 135, 137, 139, 140, 141, 164, 165, 166, 167, 168, 169, 170, 197, 198, 199, 259, 270], "effici": [1, 2, 3, 5, 7, 8, 13, 18, 27, 28, 62, 86, 159, 182, 199], "eig": 12, "eigenvalu": [11, 17], "eigenvector": 11, "eigval": 11, "eigvec": 11, "either": [96, 201, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 256, 261], "element": [0, 16, 17, 24, 66, 70, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 120, 121, 122, 123, 137, 140, 143, 144, 145, 147, 148, 149, 150, 151, 158, 159, 160, 161, 162, 170, 175, 176, 177, 178, 179, 180, 198, 209, 210, 211, 214, 215, 216, 217, 218, 219, 220, 221, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 255, 258, 261, 262, 264, 265, 266, 268], "elementwise_affin": 170, "elsewher": [178, 179, 180, 225], "elu": [75, 93, 142, 153], "elumodel": 134, "empti": [65, 71, 230], "empty_lik": 230, "enabl": [0, 1, 2, 3, 7, 14, 19, 27, 51, 52, 53, 54, 62, 65, 66, 67, 68, 69, 70, 137, 143, 144, 145, 154, 156, 182, 184, 197, 199, 203, 204, 205, 207, 209, 271], "encapsul": [182, 209], "encod": [159, 162], "encourag": [148, 149, 150, 151, 158, 159, 162, 188], "end": [15, 73, 76, 77, 78, 134, 136, 137, 138, 160, 161, 162, 175, 176, 177, 178, 179, 180, 192, 194, 215, 216, 218, 221, 231, 235, 241, 243, 245, 257, 262, 282], "enforc": [65, 67, 69], "engin": 16, "enhanc": [24, 25, 27, 28, 32, 43, 44, 60, 61, 62, 67, 69, 124, 282], "ensur": [3, 5, 16, 17, 18, 64, 65, 66, 67, 68, 69, 70, 71, 80, 107, 108, 109, 120, 121, 122, 136, 140, 147, 148, 149, 150, 151, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 185, 186, 188, 189, 191, 192, 193, 194, 195, 197, 198, 199, 201, 203, 204, 205, 206, 207, 208, 219, 242, 250, 255, 262, 272, 273, 274, 275, 276, 280, 282], "enter": 199, "entir": [3, 89, 90, 91, 150, 151, 208], "entri": [30, 266], "entropi": [97, 98, 158, 159], "environ": 7, "ep": [97, 98, 103, 105, 106, 120, 121, 122, 158, 159, 164, 165, 166, 167, 168, 169, 170, 186, 187, 188, 189, 190, 191, 192, 193], "epoch": [1, 3], "epsilon": [158, 159, 164, 165, 166, 167, 168, 169, 170, 186, 187, 188, 189, 190, 191, 192, 193], "equal": [14, 118, 175, 176, 177, 273, 275], "equat": [11, 16, 18], "equival": [214, 253, 263], "error": [0, 3, 11, 13, 65, 68, 69, 70, 71, 74, 99, 101, 135, 158, 159, 160, 161, 182, 183, 199, 201], "especi": [3, 67, 69, 70, 139, 198, 199, 201, 206, 271, 272, 276, 282], "essenti": [1, 3, 7, 8, 14, 16, 26, 83, 86, 182, 206, 208, 241, 271, 272, 276, 282], "estim": [161, 188, 189, 190, 191, 192, 193], "et": [23, 62], "eta": 194, "eta_": 194, "etc": [158, 272], "euclidean": 15, "european": 62, "evalu": [65, 103, 105, 147, 148, 149, 150, 151, 164, 165, 166, 167, 168, 169, 282], "even": [186, 199, 221, 222, 225, 226, 227, 228, 229], "evenli": [107, 108, 109, 172, 173, 174, 221], "everi": [1, 282], "everywher": 245, "exact": [65, 68, 254, 276, 278], "exactli": 71, "exampl": [4, 214], "excel": 25, "except": [0, 245, 257, 259, 270], "excit": [45, 48, 62, 123], "exclus": [204, 207, 221], "exdb": 5, "execut": [68, 199], "exist": [18, 67, 69, 71, 200, 257], "exit": 199, "exp": [73, 78, 79, 81, 134, 138, 230], "expand": [4, 86, 264, 268], "expect": [9, 68, 71, 147, 148, 149, 150, 151, 170, 182, 201], "expens": 3, "experi": [7, 206, 208, 282], "experiment": 208, "explan": [14, 16, 20, 55, 60, 107, 108, 109, 172, 173, 174, 185], "explicit": 71, "explicitli": [62, 67, 69], "explod": [138, 164, 165, 166], "explor": [182, 208], "expon": [14, 219], "exponenti": [73, 78, 80, 134, 138, 140, 147, 188, 189, 190, 191, 192, 239], "extend": [4, 51], "extens": [62, 184], "extern": [4, 7], "extract": [22, 26, 34, 51, 62, 86, 145, 175, 177, 200, 222, 241, 243, 273, 275], "extractor": [30, 31, 32, 33], "extrem": [16, 35, 62], "ey": 230, "f": [1, 4, 5, 7, 69, 70, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 140], "f_1": 123, "f_2": 123, "facilit": [22, 67, 71, 80, 140, 143, 144, 145, 182, 184, 274, 282], "factor": [24, 73, 82, 83, 84, 86, 123, 132, 133, 185, 192, 193, 194, 195, 201], "failur": [67, 68, 69, 70, 182], "fals": [1, 5, 19, 34, 63, 64, 65, 66, 87, 88, 89, 90, 91, 103, 105, 118, 126, 128, 129, 130, 131, 132, 133, 143, 144, 145, 154, 156, 188, 189, 193, 197, 203, 204, 205, 207, 209, 221, 222, 223, 224, 225, 226, 227, 228, 229, 241, 242, 243, 250, 255, 256, 272], "famili": 200, "fan": [128, 129, 132, 133], "fan_in": [128, 129], "fan_out": [128, 129], "fast": 192, "faster": [187, 191, 199], "fc": [26, 34, 45, 51, 68, 123, 144, 145, 175, 176, 177, 178, 179, 180], "fc1": [32, 33, 63, 67, 71, 135, 137, 138, 139, 141, 156], "fc2": [32, 33, 63, 67, 71, 135, 137, 138, 139, 141, 156], "fc3": 33, "featur": [3, 20, 22, 25, 26, 30, 31, 32, 33, 34, 46, 48, 49, 51, 52, 53, 54, 55, 60, 61, 62, 94, 96, 103, 120, 121, 122, 123, 124, 145, 148, 149, 150, 151, 154, 156, 164, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 179, 180, 182, 187], "feature_extractor": 30, "fed": [3, 282], "feed": [3, 209, 282], "feedforward": 63, "fergu": [60, 62], "fetch": 0, "few": 63, "fewer": 1, "field": [5, 51, 62, 124], "file": [3, 200], "fill": [126, 130, 131, 203, 204, 205, 207, 226, 227, 228, 229], "filter": [60, 62, 82, 83, 84, 86, 120, 121, 122, 144, 145], "filter_height": 86, "filter_s": 86, "filter_width": 86, "final": [22, 23, 24, 25, 26, 27, 28, 34, 43, 44, 45, 51, 52, 53, 54, 67, 68, 69, 70, 71, 124, 271, 282], "find": [18, 241, 243], "fine": [123, 282], "finish": 199, "first": [5, 11, 30, 60, 63, 68, 69, 94, 123, 154, 188, 189, 190, 191, 192, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 261, 270, 271, 272, 282], "fit": 182, "fix": [68, 262], "flatten": [26, 30, 71, 86, 218, 260, 263, 264], "flexibl": [1, 3, 4, 7, 22, 26, 27, 28, 30, 34, 55, 62, 67, 68, 69, 70, 71, 182, 184, 201, 226, 227, 272, 282], "flip": [277, 279, 282], "float": [2, 5, 24, 64, 66, 73, 76, 87, 88, 89, 90, 91, 97, 98, 99, 103, 105, 106, 119, 120, 121, 122, 126, 130, 131, 132, 133, 134, 136, 147, 148, 149, 150, 151, 158, 159, 160, 164, 165, 166, 167, 168, 169, 170, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 207, 209, 221, 224, 235, 256, 274, 276, 277, 278, 279], "float32": [64, 66, 209, 221, 222, 225, 226, 228, 256, 272], "float64": [229, 256, 272], "flow": [25, 26, 45, 62, 71, 133, 135, 139, 141, 143, 144, 145, 154, 156, 197], "fly": [2, 3], "fname": 3, "focu": 7, "focus": 7, "follow": [0, 7, 8, 11, 17, 18, 19, 20, 55, 60, 63, 73, 74, 76, 77, 78, 79, 80, 81, 94, 96, 118, 120, 121, 122, 123, 124, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 200, 201, 208, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 241, 243, 261, 265, 273, 274, 275, 276, 277, 278, 279, 282], "form": [17, 124, 218, 261, 264, 268, 282], "format": [2, 3, 5, 63, 159, 162, 272], "formul": 74, "formula": [11, 19, 80, 107, 108, 109, 140, 160, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 214, 255, 276], "forward": [7, 20, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 52, 53, 54, 55, 60, 63, 64, 65, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], "found": 7, "foundat": [26, 45, 65, 182, 184, 209], "four": 262, "frac": [9, 10, 11, 13, 14, 15, 16, 18, 19, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 94, 96, 107, 108, 109, 110, 111, 112, 114, 115, 116, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 179, 180, 186, 187, 188, 189, 190, 191, 192, 193, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 274], "frame": 91, "framework": [4, 7, 62, 159, 162, 164, 165, 166, 167, 168, 169, 183, 184, 282], "frequent": [159, 162], "from": [0, 1, 2, 3, 4, 5, 7, 14, 16, 26, 34, 52, 53, 54, 56, 57, 58, 59, 63, 64, 65, 66, 67, 68, 69, 70, 71, 86, 94, 103, 105, 118, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 143, 144, 145, 147, 148, 149, 150, 151, 154, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 175, 176, 177, 182, 183, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 198, 199, 200, 201, 203, 204, 205, 207, 208, 209, 214, 215, 216, 220, 222, 241, 242, 243, 250, 255, 257, 259, 261, 264, 266, 267, 268, 270, 273, 274, 275, 276, 277, 278, 279, 282], "full": 19, "full_matric": 19, "fulli": [4, 8, 20, 26, 30, 31, 32, 33, 34, 43, 44, 45, 51, 52, 53, 54, 55, 60, 62, 96, 123, 124, 156, 208], "func": 200, "function": [3, 4, 5, 7, 8, 65, 67, 68, 69, 70, 71, 120, 121, 122, 123, 134, 135, 136, 137, 138, 139, 140, 141, 147, 148, 149, 150, 151, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 182, 184, 201, 208, 271, 282], "fundament": [7, 96, 156, 272], "further": [7, 208, 242, 250, 255], "fuse": 51, "fusion": [52, 53, 54], "futur": 155, "g": [0, 10, 11, 14, 17, 19, 23, 24, 25, 27, 28, 30, 31, 32, 33, 55, 123, 124, 147, 183, 186, 193, 257, 276], "g_": 187, "g_t": 193, "gain": [132, 133], "gamma": [164, 165, 166, 167, 168, 169, 170], "gap": [34, 51, 123], "gaussian": [74, 135], "gelu": [75, 93, 142, 153], "gelunetwork": 135, "gener": [16, 63, 119, 147, 148, 149, 150, 151, 168, 189, 191, 192, 199, 203, 204, 205, 206, 207, 208, 213, 221, 223, 224, 261, 275, 276, 277, 279, 282], "get": 5, "give": [7, 185, 193], "given": [10, 11, 14, 16, 17, 19, 86, 158, 159, 162, 183, 197, 227, 229, 271, 276, 277, 279, 282], "global": [0, 34, 45, 51, 123, 197, 199, 206, 208], "go": [23, 62], "goal": [158, 159, 162], "googlenet": [23, 62], "gpu": 62, "grad": [64, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 86, 94, 96, 118, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 179, 180, 183, 184, 203, 204, 205, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 277, 279, 280], "grad_output": 14, "gradient": [7, 8, 25, 26, 62, 64, 66, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 203, 204, 205, 207, 221, 222, 223, 224, 225, 226, 227, 228, 229, 256, 272], "grain": 123, "graph": [7, 133, 209, 221, 222, 225, 226, 227, 228, 229, 272], "grayscal": [5, 30, 31, 32, 33, 276, 282], "greater": 235, "green": 276, "grid": 261, "groundbreak": 62, "group": [51, 62, 68, 82, 83, 84, 120, 121, 122, 124, 143, 144, 145, 183, 184], "group1": 68, "group2": 68, "guarante": 206, "h": [34, 52, 53, 54, 83, 84, 86, 90, 91, 108, 109, 111, 112, 115, 116, 118, 119, 121, 122, 123, 165, 166, 168, 169, 173, 174, 177, 180, 273, 275], "h_": [83, 84, 108, 109, 111, 112, 115, 116, 118, 144, 145, 173, 174, 176, 177, 179, 180], "h_out": [83, 84, 111, 112, 115, 116], "h_stack": 259, "ha": [0, 11, 63, 71, 82, 83, 84, 120, 121, 122, 158, 159, 164, 165, 166, 167, 168, 169, 170, 183, 184, 214, 253, 257, 259, 267, 270, 276], "half": 248, "hand": 18, "handl": [0, 3, 7, 16, 65, 67, 68, 69, 70, 71, 159, 162, 182, 184, 199], "handwritten": [5, 33], "hardwar": 7, "hat": [188, 189, 190, 191, 192], "have": [0, 1, 10, 11, 13, 16, 17, 19, 66, 68, 70, 71, 83, 84, 133, 182, 225, 226, 227, 228, 229, 241, 243, 257, 259, 261, 266, 267, 270, 274, 280], "he": 62, "height": [83, 84, 86, 90, 91, 108, 109, 111, 112, 115, 116, 118, 119, 124, 144, 145, 165, 166, 168, 169, 173, 174, 176, 177, 179, 180, 273, 275, 280], "help": [7, 24, 76, 78, 91, 134, 136, 138, 141, 164, 165, 166, 175, 176, 178, 179, 185, 188, 189, 191, 197, 198, 199, 201], "henc": 265, "here": [3, 9, 65, 94, 182, 184, 198, 199, 201, 208, 271, 272, 282], "hidden": [20, 60, 68], "hidden_s": 68, "hierarch": [68, 71, 182], "hierarchi": 144, "hierarchicalnetwork": 68, "high": [7, 42, 50, 204, 207], "higher": [159, 162, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 213, 214, 218, 239], "highest": 204, "highli": 62, "highlight": [123, 178, 179, 180], "hint": 201, "histor": 187, "histori": [203, 204, 205, 207, 221, 222, 223, 224, 225, 226, 227, 228, 229], "hold": [67, 68, 69, 70], "horizont": [259, 267, 277, 282], "hot": [159, 162], "how": [2, 3, 7, 68, 71, 182, 201, 282], "howev": [64, 133], "hstack": 260, "http": 5, "hu": [62, 123], "huber": [99, 160], "huber_loss": [93, 100], "huberloss": [153, 163], "huberregressionmodel": 160, "hue": 282, "hyperbol": [81, 141, 237, 247, 252], "hyperparamet": [34, 183, 185], "i": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 128, 129, 130, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 232, 233, 234, 235, 236, 237, 239, 240, 241, 242, 243, 245, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282], "iccv": 62, "ideal": [7, 71], "ident": [13, 14, 62, 119, 153, 157, 206, 208, 225, 265], "identifi": 69, "idx": [2, 3], "ieee": [62, 123], "ii": 253, "ij": [80, 118, 140, 212, 213, 214, 218, 261], "ik": [212, 213, 214], "ill": [10, 16], "ilsvrc": 62, "imag": [3, 4, 5, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 61, 62, 83, 105, 119, 121, 123, 144, 168, 261, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282], "image_dir": 3, "image_path": 3, "imagedataset": 3, "imageio": 3, "imagenet": [43, 44, 62], "imbal": [159, 162], "impact": [62, 191], "implement": [2, 3, 7, 16, 20, 22, 23, 24, 25, 27, 28, 30, 34, 43, 44, 45, 60, 62, 65, 86, 124, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 259, 270, 276], "impli": [143, 144], "import": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 43, 44, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 88, 91, 94, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282], "improp": [68, 71, 208], "improv": [23, 24, 25, 26, 28, 34, 51, 60, 62, 103, 119, 123, 135, 138, 141, 185, 186, 187, 188, 189, 190, 191, 192, 193, 201, 275, 278, 282], "imread": 3, "in1_featur": [94, 154], "in2_featur": [94, 154], "in_channel": [34, 68, 71, 120, 121, 122, 123, 124, 143, 144, 145, 165, 166, 175, 176, 177, 178, 179, 180, 182], "in_featur": [67, 68, 71, 96, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 147, 148, 149, 154, 156, 158, 159, 160, 161, 162, 164, 167, 170, 175, 176, 177, 178, 179, 180], "incept": [23, 24, 25, 26, 27, 28, 29, 62], "inception_resnet_v1": 62, "inception_resnet_v2": 62, "inception_v1": 62, "inception_v3": 62, "inception_v4": 62, "inceptionresnet": [27, 28], "includ": [3, 4, 7, 8, 14, 15, 20, 22, 23, 24, 27, 30, 34, 43, 44, 45, 51, 55, 60, 63, 65, 66, 68, 70, 71, 118, 120, 121, 122, 182, 183, 184, 191, 201, 208, 214, 262], "inclus": [66, 69, 204, 207], "incom": [96, 156], "incomplet": 2, "incompletedataset": 2, "incorpor": [19, 45, 46, 47, 48, 49, 50, 51, 62, 135], "increas": [51, 82, 83, 84, 86, 119, 187, 194, 198, 259, 270, 276, 277, 279, 282], "independ": [68, 82, 83, 84, 147, 148, 149, 150, 151, 170, 214, 224, 274, 276, 278, 280], "index": [0, 2, 5, 198, 221, 222, 225, 261, 265], "indexerror": 0, "indic": [0, 1, 55, 63, 66, 68, 70, 71, 98, 102, 159, 162, 175, 197, 209, 273, 275], "individu": [3, 68, 71, 160, 170, 184, 187, 194], "induc": [78, 138], "inf": 251, "infer": [68, 71, 199], "infin": [17, 19, 190], "inform": [7, 62, 63, 64, 123, 184, 186, 199], "infti": [15, 192], "inherit": [1, 185, 193, 195], "init": 127, "initi": [1, 26, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 64, 66, 67, 68, 69, 70, 71, 124, 126, 128, 129, 130, 131, 132, 133, 143, 144, 145, 154, 156, 158, 159, 160, 161, 162, 164, 165, 166, 170, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 203, 206, 207, 208, 221, 225, 226, 227, 228, 229, 256], "initial_accumulator_valu": 187, "inner": [7, 212, 230], "input": [7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 51, 60, 62, 63, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 201, 208, 209, 210, 212, 213, 214, 218, 222, 224, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282], "input1": 154, "input2": 154, "input_": [20, 60, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 172, 173, 174], "input_1": 94, "input_2": 94, "input_data": [134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 170, 175, 176, 177, 178, 179, 180], "input_s": [68, 70, 140, 159, 162], "input_shap": 63, "input_tensor": [7, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 52, 53, 54, 55, 64, 67, 68, 69, 70, 71, 80, 123, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 179, 180, 182, 273, 274, 275, 276, 277, 278, 279, 280], "insid": [3, 197, 199], "insight": [7, 62], "inspect": [65, 66, 71, 183], "instabl": [16, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195], "instal": 7, "instanc": [0, 1, 7, 21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 52, 53, 54, 61, 63, 65, 66, 67, 69, 70, 71, 105, 167, 168, 169, 170, 183, 200, 256, 264, 268, 282], "instance_norm": [93, 104, 167, 168, 169], "instancenorm1d": [153, 171], "instancenorm1dmodel": 167, "instancenorm2d": [153, 171], "instancenorm3d": [153, 171], "instanti": [2, 200], "instead": [7, 63, 67, 68, 69, 70, 71, 128, 129, 132, 133, 188, 189, 190, 199, 201, 223, 224], "int": [0, 1, 2, 5, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 80, 82, 83, 84, 86, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 130, 131, 132, 133, 140, 143, 144, 145, 154, 156, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 188, 189, 190, 191, 192, 194, 200, 203, 204, 205, 206, 207, 209, 221, 222, 223, 225, 226, 228, 235, 241, 242, 243, 250, 254, 255, 256, 257, 262, 264, 265, 266, 267, 268, 269, 273, 275, 280], "integ": [1, 3, 14, 45, 55, 82, 83, 84, 108, 109, 143, 144, 145, 170, 173, 174, 176, 177, 178, 179, 180, 201, 204, 205, 207, 208, 223, 226, 228, 242, 250, 254, 255, 262, 264, 265, 268], "integr": [1, 2, 4, 5, 8, 62, 66, 68, 70, 71, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 154, 156, 175, 176, 177, 178, 179, 180], "intellig": [62, 123], "intend": [64, 69, 70], "intens": [16, 35, 274, 276], "intent": 201, "interact": [94, 154, 182, 208], "interdepend": 62, "interfac": [2, 65, 68, 184], "interfer": [197, 199], "intermedi": [16, 123], "intern": [35, 36, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 62, 67, 68, 69, 70, 71, 159, 162, 182, 273, 274, 275, 276, 277, 278, 279, 280], "interpol": [93, 117, 280], "interpret": [62, 80, 140, 201, 257], "interv": [203, 207, 221], "introduc": [23, 24, 62, 77, 123, 135, 137, 139, 141, 147, 148, 149, 150, 151, 275, 278, 282], "introspect": 71, "intuit": [7, 67, 69, 182, 282], "inv": 12, "inv_a": 13, "invari": [176, 179], "invers": [7, 10, 13, 14, 16, 187, 232, 233, 234], "invert": [10, 13, 14, 18], "invok": 200, "involv": [9, 10, 11, 13, 16, 17, 19, 51, 73, 74, 76, 77, 78, 79, 81, 94, 96, 118, 143, 144, 145, 154, 156, 201, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 229, 239, 240, 241, 243, 246, 248, 261, 262, 264, 268], "is_leaf": 209, "issu": [3, 138, 164, 165, 166, 188, 189], "item": 161, "iter": [0, 1, 2, 3, 64, 65, 68, 70, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 221], "ith": [80, 140], "its": [4, 14, 16, 20, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 60, 62, 63, 64, 67, 68, 69, 70, 82, 83, 84, 86, 119, 124, 133, 135, 137, 178, 179, 180, 182, 183, 186, 194, 197, 198, 199, 200, 221, 223, 224, 228, 241, 243, 256, 265, 274, 277, 279, 282], "itself": [9, 14, 67, 68, 69, 70], "j": [5, 80, 123, 140, 164, 165, 166, 167, 168, 169, 175, 176, 178, 179, 261, 267, 273, 275], "jie": 62, "jk": 213, "join": [3, 257], "json": 200, "k": [14, 82, 143, 159, 165, 166, 168, 169, 175, 178, 179, 212, 213, 222, 225, 257], "k_d": [84, 145, 177, 180], "k_h": [83, 84, 144, 145, 176, 177, 180], "k_w": [83, 84, 144, 145, 176, 177, 180], "kaim": [62, 128, 129, 132, 133], "kaiming_norm": 127, "kaiming_uniform": 127, "karen": 62, "keep": [65, 137, 186, 199, 265], "keep_grad": [66, 203, 204, 205, 207, 209, 221, 222, 223, 224, 225, 226, 227, 228, 229, 256, 272], "keep_var": 65, "keepdim": [241, 242, 243, 250, 255], "kei": [62, 65, 67, 69, 71, 183], "kept": [242, 250, 255], "kernel": [30, 31, 32, 33, 51, 52, 53, 54, 60, 62, 82, 83, 84, 86, 107, 108, 109, 110, 111, 112, 114, 115, 116, 120, 121, 122, 124, 143, 144, 145, 172, 173, 174, 176, 177, 180], "kernel_s": [51, 52, 53, 54, 68, 71, 110, 111, 112, 114, 115, 116, 120, 121, 122, 124, 143, 144, 145, 165, 166, 175, 176, 177, 178, 179, 180], "keyerror": 65, "keyword": [21, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 61, 65, 155], "kj": [212, 214], "known": 62, "krizhevski": 62, "kroneck": [80, 140], "kwarg": [21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 61, 65, 155, 200], "l": [9, 16, 82, 89, 107, 110, 114, 120, 123, 147, 148, 149, 150, 151, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172], "l2": [185, 186, 187, 188, 189, 190, 191, 192, 193, 195], "l_": [82, 107, 110, 114, 143, 172, 175, 178], "l_out": [82, 110, 114], "label": [4, 5, 24, 158, 159, 162], "lambd": 185, "lambda": [11, 78, 138, 185, 189], "lambda_1": 11, "lambda_2": 11, "lambda_i": 11, "lambda_n": 11, "languag": [4, 143, 154, 175, 178], "larg": [0, 3, 16, 35, 36, 37, 40, 46, 47, 62, 160, 182, 185, 188, 189, 190, 193, 194, 195, 199], "larger": [34, 51, 67, 69, 82, 83, 84, 86, 185, 215, 262, 273, 275, 280], "largest": 241, "last": [1, 80, 106, 140, 213, 214, 257, 277, 279], "latest": 4, "layer": [7, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 62, 63, 65, 67, 68, 71, 80, 96, 103, 105, 106, 120, 121, 122, 123, 124, 128, 129, 132, 133, 140, 143, 144, 145, 154, 155, 156, 162, 170, 175, 176, 177, 178, 179, 180, 182, 208, 262, 272], "layer1": 200, "layer2": 200, "layer_group": 68, "layer_norm": [93, 104, 170], "layer_sequ": [68, 71], "layernorm": [153, 171], "layernormmodel": 170, "lead": [68, 71, 135, 167, 168, 169, 170, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 208], "leaf": 209, "leaki": [76, 136], "leaky_relu": [75, 93, 136], "leakyrelu": [142, 153], "learn": [1, 3, 4, 5, 7, 14, 16, 60, 61, 62, 67, 68, 69, 70, 77, 80, 123, 134, 136, 137, 140, 143, 144, 145, 148, 149, 150, 151, 154, 156, 182, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 206, 271, 272, 282], "learnabl": [64, 65, 66, 103, 105, 106, 120, 121, 122, 143, 144, 145, 154, 156, 164, 165, 166, 167, 168, 169, 170, 182], "least": [16, 17, 19, 253], "lecun": [5, 62], "left": [14, 15, 16, 19, 74, 80, 135, 140, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 178, 179, 180, 273, 275], "leftarrow": 191, "len": [0, 1, 2, 3, 261], "lenet": [29, 31, 32, 33, 62], "lenet_1": 62, "lenet_4": 62, "lenet_5": 62, "length": [68, 82, 89, 107, 110, 114, 143, 155, 164, 167, 172, 175, 178, 262, 274], "leq": [160, 192, 219, 235], "lerp": 118, "less": [0, 73, 76, 99, 134, 136, 159, 160, 162, 235], "let": 11, "level": [7, 26], "leverag": [18, 25, 28, 62, 124, 182], "li": 62, "librari": [3, 7, 8, 65, 182, 183, 184, 200, 201, 208, 209, 282], "lightweight": [7, 38, 48, 124], "like": [7, 26, 52, 53, 54, 62, 64, 65, 68, 71, 82, 132, 133, 138, 147, 164, 165, 166, 167, 168, 169, 197, 198, 201, 256, 272, 282], "likelihood": [102, 159, 162], "limit": [63, 186, 235], "linalg": [7, 12], "linalgerror": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "linear": [7, 8, 9, 16, 17, 18, 45, 63, 67, 68, 69, 71, 73, 74, 76, 77, 78, 128, 129, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 147, 148, 149, 154, 155, 158, 159, 160, 161, 162, 164, 167, 170, 175, 176, 177, 178, 179, 180, 200, 225], "linearli": 160, "list": [0, 1, 30, 34, 45, 51, 55, 63, 64, 66, 67, 68, 69, 70, 106, 124, 155, 170, 183, 201, 203, 204, 205, 207, 209, 222, 223, 224, 226, 227, 228, 229, 254, 265, 266, 269, 271], "listdir": 3, "liter": [34, 97, 98, 99, 101, 102, 118, 120, 121, 122, 124, 128, 129, 143, 144, 145, 158, 159, 160, 161, 162, 261], "ln": 219, "load": [3, 4, 5, 64, 65, 66, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 200], "load_state_dict": [65, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], "loader": [1, 2, 3], "local": [62, 86, 143], "locat": [62, 118], "log": [102, 158, 159, 162, 230], "log_softmax": 162, "logarithm": [219, 239, 240], "logic": [3, 172, 173, 174, 182, 183], "logit": [20, 60, 80, 140, 159], "logsoftmax": [159, 162], "long": [191, 254], "loop": [1, 68, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], "loss": [7, 16, 67, 68, 69, 70, 71, 80, 97, 98, 99, 101, 102, 134, 135, 136, 137, 138, 139, 140, 141, 147, 148, 149, 150, 151, 155, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], "low": [7, 26, 204, 207], "lower": [9, 131, 185, 193, 194, 195, 207], "lowest": 204, "lr": [183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], "lu": 13, "lucid": [0, 1, 2, 5, 12, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 202, 230, 260, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "m": [55, 67, 68, 71, 176, 177, 179, 180, 188, 189, 190, 191, 192, 225], "m_": [188, 189, 190, 191, 192], "m_t": [191, 192], "machin": [3, 5, 7, 16, 123, 188, 198, 206], "magnitud": [193, 194, 282], "mai": [3, 7, 11, 13, 16, 68, 70, 119, 160, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 199, 208, 276, 282], "main": [7, 17, 26, 68, 222, 225], "maintain": [16, 64, 65, 67, 68, 69, 71, 78, 128, 129, 132, 133, 134, 135, 138, 147, 148, 149, 150, 151, 164, 165, 166, 167, 168, 169, 188, 193, 273, 276, 280], "make": [1, 3, 7, 22, 26, 30, 34, 62, 68, 71, 139, 159, 160, 170, 176, 179, 182, 187, 188, 189, 190, 198, 200, 208, 209, 214, 261, 271, 282], "manag": [7, 65, 67, 68, 69, 70, 71, 182, 184, 197, 199, 200, 208], "manhattan": 15, "mani": 63, "manipul": [7, 67, 69, 282], "manner": [68, 71], "manual": [97, 98, 102, 158, 159, 162, 199], "map": [34, 48, 51, 62, 65, 79, 81, 123, 139, 141], "mask": [64, 147, 148, 149, 150, 151], "match": [18, 65, 68, 71, 97, 99, 101, 106, 120, 121, 122, 183, 239, 264, 265, 268, 269, 274, 282], "math": [236, 246, 251], "mathbf": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 94, 96, 118, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 179, 180, 212, 213, 214, 218, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280], "mathcal": [128, 130, 132, 147, 148, 149, 150, 151, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170], "mathemat": [13, 120, 121, 122, 275, 277, 278, 279], "mathrm": 16, "matmul": 230, "matric": [8, 10, 11, 13, 16, 18, 19, 212, 213, 214, 225, 261], "matrix": [7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 86, 94, 155, 156, 182, 212, 261], "matrix_pow": 12, "matthew": 62, "max": [15, 45, 55, 77, 114, 115, 116, 137, 178, 179, 180, 190, 215, 230, 235], "max_pool": [178, 179, 180], "max_pool1d": [93, 113], "max_pool2d": [93, 113], "max_pool3d": [93, 113], "max_valu": 235, "maxim": 3, "maximum": [15, 137, 178, 179, 180, 188, 190, 230, 235, 241, 278], "maxpool": [20, 60], "maxpool1d": [153, 181], "maxpool1dmodel": 178, "maxpool2d": [68, 71, 144, 153, 181], "maxpool2dmodel": 179, "maxpool3d": [145, 153, 181], "maxpool3dmodel": 180, "mean": [5, 17, 63, 64, 78, 82, 83, 84, 87, 97, 98, 99, 101, 102, 103, 105, 120, 121, 122, 130, 134, 135, 136, 137, 138, 139, 141, 145, 147, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 188, 189, 190, 191, 192, 193, 197, 205, 230, 235, 239, 240, 241, 243, 246, 248, 250, 253, 254, 255, 271, 274, 282], "meaning": [71, 201], "measur": [158, 159, 161, 162], "mechan": [7, 45, 51, 70, 94], "membership": 158, "memori": [2, 3, 199, 223, 224], "meshgrid": 260, "method": [3, 7, 8, 13, 45, 67, 68, 69, 70, 71, 97, 98, 99, 101, 102, 128, 129, 132, 133, 158, 159, 160, 161, 162, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 208], "middl": 198, "might": 182, "min": [216, 230, 235], "min_valu": 235, "mind": [0, 3, 7, 68, 71, 199], "mini": 1, "minim": [4, 7, 71, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 184], "minimalist": 7, "minimum": [230, 235, 243], "minu": 139, "mirror": [227, 229], "mismatch": [65, 182, 183], "miss": [65, 182], "mitig": [76, 134, 136, 138, 164, 165, 166], "mlp": 124, "mnist": [4, 6, 31, 32], "mnist_train": [4, 5], "mode": [7, 91, 103, 105, 118, 128, 129, 147, 148, 149, 150, 151, 262], "model": [1, 3, 4, 7, 14, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 80, 119, 120, 121, 122, 124, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 170, 175, 176, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 200, 208, 271, 272, 282], "moder": 49, "modern": 62, "modif": [71, 199], "modifi": [21, 34, 61, 67, 68, 69, 70, 126, 128, 129, 130, 131, 132, 133, 147, 197, 199, 206, 259, 270], "modul": [5, 7, 20, 21, 22, 25, 26, 27, 28, 30, 34, 45, 51, 55, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 120, 121, 122, 123, 124, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 200, 201, 208, 272, 282], "modular": [3, 7, 62, 65, 68, 71, 182, 282], "moduledict": [68, 69, 71, 72], "modulelist": [70, 71, 72], "moment": [188, 189, 190, 191, 192], "momentum": [103, 105, 120, 121, 122, 164, 165, 166, 167, 168, 169, 185, 191, 193, 195], "momentum_decai": 191, "moor": 16, "more": [3, 4, 7, 11, 34, 41, 67, 68, 71, 134, 148, 149, 150, 151, 182, 183, 184, 185, 186, 189, 190, 193, 194, 195, 205, 214, 253, 267, 282], "most": [8, 62, 179, 272, 273, 282], "move": [185, 193], "mse": [99, 101, 160, 161], "mse_loss": [93, 100], "mseloss": [153, 163], "mu": [130, 164, 165, 166, 167, 168, 169, 170, 255], "mu_c": 274, "mu_i": [167, 168, 169], "much": 282, "mul": 230, "multi": [3, 4, 27, 51, 52, 53, 54, 62, 80, 98, 102, 124, 140, 159, 162, 242, 250, 255], "multidimension": [203, 207, 223], "multipl": [1, 3, 7, 8, 14, 18, 20, 34, 45, 69, 70, 71, 86, 118, 119, 123, 124, 147, 148, 149, 150, 151, 159, 162, 182, 198, 203, 204, 205, 207, 212, 217, 223, 224, 271, 276, 282], "multipli": [14, 70, 96, 156, 194, 217, 218], "must": [0, 1, 3, 9, 10, 11, 13, 14, 17, 18, 19, 63, 65, 67, 68, 69, 70, 71, 106, 147, 148, 149, 150, 151, 162, 183, 199, 253, 257, 259, 262, 264, 265, 267, 268, 270, 273, 274, 275, 276, 277, 279], "my_simple_model": 200, "mymodel": [65, 66, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], "myoptim": [183, 184], "n": [14, 15, 34, 52, 53, 54, 62, 67, 68, 71, 82, 83, 84, 86, 89, 90, 91, 94, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 128, 130, 132, 143, 144, 145, 150, 151, 154, 156, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 172, 173, 174, 175, 176, 177, 178, 179, 180, 225, 242, 253, 255], "n1": 15, "nabla_": [186, 187, 188, 189, 190, 191, 192, 194], "nabla_t": 192, "nadam": 196, "name": [62, 63, 65, 67, 69, 71, 200, 201], "nan": [17, 19], "natur": [16, 62, 143, 154, 175, 178, 219, 239, 240], "ndarrai": [64, 66, 201, 209, 222, 224, 227, 229, 256], "ndim": [17, 19, 66, 209], "ne": 14, "nearest": 118, "necessari": [4, 5, 16, 199, 259, 270], "need": [2, 4, 68, 69, 70, 80, 154, 182, 199, 223, 224, 271, 272, 282], "neg": [14, 16, 19, 73, 102, 119, 134, 136, 137, 138, 159, 162, 194, 257], "negative_slop": [76, 136], "neglect": 70, "neighbor": 118, "neq": 15, "nest": [63, 68, 71, 182], "nestedmodel": 63, "nesterov": 191, "net": [60, 62], "network": [3, 4, 7, 20, 21, 25, 26, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 55, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 77, 78, 79, 80, 81, 82, 83, 84, 94, 96, 103, 119, 123, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 170, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 193, 195, 207, 208, 209, 221, 226, 228, 241, 243, 262, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282], "neural": [3, 4, 7, 20, 21, 26, 33, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 77, 78, 79, 80, 81, 82, 83, 84, 94, 96, 103, 119, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 170, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 193, 195, 207, 208, 209, 221, 226, 228, 241, 243, 262, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282], "neuralnetwork": 137, "neuron": 136, "never": 276, "new": [65, 66, 73, 74, 76, 77, 78, 79, 81, 94, 96, 118, 124, 128, 129, 130, 131, 132, 133, 183, 200, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 254, 256, 257, 259, 262, 264, 265, 267, 268, 269, 270], "next": [71, 271], "nll": 102, "nll_loss": [93, 100], "nllloss": [153, 163], "nn": [5, 7, 20, 22, 26, 30, 34, 45, 51, 55, 60, 63, 72, 75, 85, 92, 95, 100, 104, 113, 117, 125, 127, 142, 146, 152, 153, 157, 163, 171, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 200, 272, 282], "no_grad": 197, "node": 209, "nois": [19, 208], "non": [11, 14, 16, 19, 70, 74, 76, 77, 128, 129, 134, 135, 136, 137, 138, 139, 141, 147, 148, 149, 150, 151, 188, 189, 199, 219, 235], "none": [0, 1, 2, 5, 22, 26, 30, 34, 63, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 94, 96, 97, 98, 99, 101, 102, 103, 105, 106, 119, 120, 121, 122, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 179, 180, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 198, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 227, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 279, 280], "norm": [8, 12, 190], "normal": [5, 45, 74, 78, 80, 81, 103, 105, 106, 120, 121, 122, 127, 128, 132, 135, 138, 140, 147, 164, 165, 166, 167, 168, 169, 170, 193, 205, 208, 271, 281, 282], "normalized_shap": [106, 170], "note": [82, 147], "noth": [87, 88, 89, 90], "notimplementederror": [2, 65, 183], "notin": 235, "nov": 62, "novel": 62, "np": [34, 52, 53, 54, 64, 66, 123, 159, 162, 201, 209, 214, 221, 222, 225, 226, 228, 229, 240, 256, 272], "npy": 5, "num_class": [20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 140, 159, 162], "num_featur": [71, 120, 121, 122, 164, 165, 166, 167, 168, 169], "num_paramet": 70, "number": [0, 1, 2, 5, 10, 11, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 66, 68, 70, 71, 82, 83, 84, 86, 89, 90, 91, 94, 96, 98, 102, 103, 105, 107, 108, 109, 118, 119, 120, 121, 122, 123, 124, 128, 129, 132, 133, 139, 143, 144, 145, 154, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 176, 177, 178, 179, 180, 185, 203, 206, 207, 209, 219, 221, 223, 225, 241, 242, 243, 254, 255, 257, 259, 262, 264, 265, 266, 268, 270, 274, 276, 277, 279, 282], "numer": [13, 16, 97, 98, 103, 105, 106, 120, 121, 122, 158, 159, 164, 165, 166, 167, 168, 169, 170, 186, 187, 188, 189, 190, 191, 192, 193, 201, 211, 221, 226, 228], "numpi": [7, 64, 66, 159, 162, 201, 209, 214, 222, 225, 240, 253, 256, 262, 264, 268, 272, 282], "o": [3, 177, 180, 226, 227], "object": [1, 3, 8, 51, 62, 65, 69, 70, 161, 182, 199, 210, 211, 215, 216, 217, 220, 256], "observ": 188, "obtain": 1, "occur": [119, 199, 200, 257], "occurr": 14, "odot": [147, 148, 149, 150, 151], "off": 197, "offer": [4, 7, 182, 184, 208, 282], "offset": 225, "often": [14, 43, 44, 82, 83, 84, 86, 159, 162, 221, 228, 272, 276, 280, 282], "older": 191, "onc": 199, "one": [0, 70, 71, 80, 82, 96, 110, 114, 120, 121, 122, 138, 139, 140, 143, 149, 159, 162, 164, 167, 175, 178, 183, 198, 201, 205, 220, 227, 241, 243, 258, 263, 267, 272], "ones": [94, 96, 143, 144, 145, 156, 164, 165, 166, 167, 168, 169, 170, 182, 225, 227, 230], "ones_lik": 230, "onli": [7, 63, 118, 137, 147, 148, 149, 150, 151, 158, 159, 162, 164, 165, 166, 167, 168, 169, 170, 178, 179, 180, 194, 197, 221, 235, 241, 243, 253, 262, 263, 265, 266], "onto": [17, 19], "openml": 5, "oper": [3, 7, 8, 13, 16, 45, 46, 47, 48, 49, 50, 64, 65, 68, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 91, 94, 96, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 197, 198, 199, 201, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 223, 224, 226, 228, 239, 240, 241, 242, 243, 246, 248, 250, 253, 255, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 274, 280], "operatornam": [14, 16], "opposit": 185, "optim": [3, 7, 8, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 64, 66, 69, 70, 86, 143, 144, 145, 182, 199], "optimizer_st": [183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], "option": [1, 5, 15, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 73, 76, 80, 83, 84, 87, 88, 89, 90, 91, 94, 96, 97, 98, 99, 101, 102, 103, 105, 106, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 128, 129, 130, 131, 132, 133, 134, 136, 140, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 179, 180, 183, 185, 193, 195, 203, 204, 205, 207, 209, 221, 222, 223, 224, 225, 226, 227, 228, 229, 241, 242, 243, 250, 254, 255, 256, 257, 261, 264, 266, 267, 272, 276, 277, 279], "ord": 15, "order": [1, 3, 15, 19, 67, 68, 69, 70, 71, 254, 271], "ordered_dict": 71, "ordereddict": [65, 67, 68, 71], "organ": [67, 68, 69, 71, 200], "orient": 282, "origin": [24, 33, 87, 119, 123, 141, 262, 263, 264, 265, 268, 269, 280], "orthogon": [16, 17, 19], "orthonorm": 17, "oscil": [185, 193, 195], "other": [2, 3, 7, 13, 24, 28, 30, 33, 64, 65, 68, 71, 128, 129, 147, 182, 183, 197, 199, 208, 209, 221, 223, 226, 228, 253, 261, 282], "otherwis": [35, 36, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 73, 76, 77, 78, 80, 134, 136, 137, 138, 140, 148, 149, 150, 151, 160, 175, 176, 177, 178, 179, 180, 183, 194, 200, 215, 216, 241, 243], "otim": [16, 94, 154], "out": [0, 3, 4, 73, 74, 76, 77, 78, 79, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 94, 96, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 128, 129, 132, 133, 143, 144, 145, 147, 148, 149, 150, 151, 172, 173, 174, 175, 176, 177, 178, 179, 180, 185, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270], "out_channel": [30, 68, 71, 120, 121, 122, 124, 143, 144, 145, 165, 166, 175, 176, 177, 178, 179, 180, 182], "out_featur": [67, 68, 71, 94, 96, 134, 135, 136, 137, 138, 139, 140, 141, 144, 145, 147, 148, 149, 154, 156, 158, 159, 160, 161, 162, 164, 167, 170, 175, 176, 177, 178, 179, 180], "outcom": [276, 277, 279], "outer": 230, "outlier": [99, 160], "output": [0, 1, 2, 7, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 94, 96, 107, 108, 109, 118, 119, 120, 121, 122, 123, 124, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 201, 204, 205, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 224, 225, 226, 228, 229, 239, 240, 241, 242, 243, 246, 248, 250, 253, 254, 255, 261, 262, 264, 268, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "output_height": 86, "output_lay": [68, 71], "output_s": [68, 107, 108, 109, 172, 173, 174], "output_width": 86, "outsid": 0, "over": [0, 1, 2, 3, 8, 51, 60, 65, 68, 70, 80, 107, 108, 109, 123, 140, 143, 144, 145, 159, 162, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 185, 186, 187, 188, 189, 203, 207, 241, 242, 243, 250, 253, 255, 276, 277, 279], "overdetermin": 16, "overfit": [1, 20, 60, 88, 91, 148, 149, 150, 151, 185, 188, 193, 195], "overhead": 123, "overrid": [2, 3], "overridden": [65, 183], "overwrit": [67, 69], "own": [4, 67, 68, 69, 70, 82, 83, 84, 133, 182, 274], "p": [15, 16, 66, 69, 70, 87, 88, 89, 90, 91, 147, 148, 149, 150, 151, 175, 178, 179, 276, 277, 279, 282], "p_d": [177, 180], "p_h": [176, 177, 180], "p_w": [176, 177, 180], "packag": [2, 3, 4, 8, 62, 182, 184, 200, 206, 208, 272, 282], "pad": [30, 68, 71, 82, 83, 84, 86, 107, 108, 109, 110, 111, 112, 114, 115, 116, 120, 121, 122, 124, 143, 144, 145, 165, 166, 172, 173, 174, 175, 176, 177, 178, 179, 180, 260], "pad_after_dim1": 262, "pad_after_dim2": 262, "pad_before_dim1": 262, "pad_before_dim2": 262, "pad_width": 262, "padding_height": 86, "padding_width": 86, "pair": 94, "paper": 23, "parallel": [1, 3, 51, 62], "param": [65, 66, 69, 70, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], "param1": 65, "param_dict": 69, "param_group": [183, 184], "param_groups_setup": 183, "param_list": 70, "param_s": 200, "paramet": [0, 2, 7, 31, 32, 33, 62, 65, 182, 183, 184, 201, 208, 282], "parameterdict": 72, "parameterlist": 72, "parent": 182, "part": [64, 65, 133, 182, 197, 199, 208, 221, 222, 225, 226, 227, 228, 229, 272, 282], "partial": [9, 10, 11, 13, 14, 15, 16, 18, 19, 73, 74, 76, 77, 78, 79, 80, 81, 94, 96, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 179, 180, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270], "particip": [66, 272], "particular": [67, 69], "particularli": [7, 16, 68, 69, 70, 71, 80, 96, 120, 121, 122, 140, 156, 159, 162, 167, 168, 169, 170, 189, 197, 200, 271], "pass": [2, 7, 16, 20, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 43, 44, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 71, 118, 120, 121, 122, 123, 124, 134, 135, 136, 137, 138, 139, 141, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 170, 175, 176, 177, 178, 179, 180, 182, 201, 209, 242, 250, 253, 254, 255, 257, 259, 263, 265, 266, 270, 272, 282], "past": [185, 186, 188, 193], "patch": [86, 176], "path": [3, 5], "pathwai": 62, "pattern": [62, 77, 123, 137, 143, 144, 145], "penal": [185, 193, 195], "penalti": [186, 187, 188, 189, 190, 191, 192], "penros": 16, "per": [1, 52, 53, 54, 107, 167, 168, 169, 170, 172], "perform": [3, 7, 8, 9, 16, 20, 26, 27, 28, 30, 31, 32, 33, 42, 51, 55, 60, 62, 65, 66, 70, 74, 82, 83, 84, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 123, 124, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 197, 199, 206, 208, 210, 211, 214, 217, 220, 239, 241, 243, 250, 254, 271, 273, 275, 280, 282], "permut": 254, "persist": [64, 203, 204, 205, 207, 223, 224], "perturb": [11, 18, 19, 282], "phi": [74, 135], "pi": [74, 135, 236, 246, 251], "pil": [272, 282], "pinv": 12, "pioneer": 62, "pipelin": [5, 208, 271, 272, 274], "pixel": [5, 118, 274, 276], "place": [126, 128, 129, 130, 131, 132, 133], "placehold": [65, 155], "plai": [201, 208], "plot": 261, "point": [4, 119, 197], "pool": [20, 30, 31, 32, 33, 34, 45, 51, 55, 60, 62, 107, 108, 109, 110, 111, 112, 114, 115, 116, 123, 124, 144, 145, 172, 173, 174, 175, 176, 177, 178, 179, 180, 241, 243], "pool1": 71, "pool2": 71, "poorli": 13, "popul": 65, "popular": [4, 62], "portion": 282, "pose": 16, "posit": [1, 9, 14, 65, 71, 119, 134, 136, 137, 138, 175, 176, 177, 178, 179, 180, 194, 198, 219, 264, 268, 275], "possibl": [7, 282], "potenti": [16, 155, 193, 266], "power": [7, 14, 62, 123, 198, 199, 230, 271, 272, 282], "pp": 62, "practic": [16, 159, 162], "practition": 282, "pre": [35, 39, 40], "preactbottleneck": [35, 39, 40], "preced": [66, 209], "preconfigur": [27, 28], "predefin": [4, 62, 68, 138], "predict": [158, 159, 161, 162], "prefix": [65, 200], "prepar": [3, 198, 262, 264, 268, 272, 282], "prepend": 65, "preprint": 62, "preprocess": [3, 4, 86, 119, 208, 271, 272, 282], "present": [158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 176], "preserv": [87, 119, 147, 221, 222, 225, 226, 227, 228, 229, 242, 250, 255], "preset": 4, "prevent": [1, 67, 68, 69, 70, 71, 88, 91, 148, 149, 150, 151, 158, 159, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 199], "previou": [185, 194, 199], "previous": 188, "primari": [7, 201], "primarili": 71, "print": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 197, 198, 199, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 274, 275, 276, 277, 278, 279, 280], "priorit": 124, "probabilist": 208, "probabl": [24, 74, 80, 87, 88, 89, 90, 91, 97, 135, 140, 147, 148, 149, 150, 151, 158, 159, 162, 276, 277, 279, 282], "problem": [16, 17, 19, 62, 76, 134, 136, 192], "proceed": 62, "process": [2, 3, 4, 14, 17, 19, 20, 27, 34, 51, 60, 62, 70, 82, 83, 84, 105, 119, 120, 121, 122, 123, 124, 138, 141, 143, 145, 154, 164, 165, 166, 167, 168, 169, 170, 175, 177, 178, 180, 185, 201, 261, 272, 273, 274, 275, 280, 282], "produc": [20, 60, 63, 107, 108, 109, 123, 143, 144, 145, 172, 173, 174, 206, 208], "product": [7, 17, 19, 139, 154, 170, 182, 212, 213, 217, 218], "program": [197, 208], "progress": 187, "project": [17, 19], "projector": 16, "promin": [175, 177, 178, 179, 180], "promot": [71, 159, 162, 182], "propag": [10, 11, 13, 16, 17, 18, 19, 65, 71, 94, 96, 118, 123, 176, 177, 193, 194, 212, 213, 214, 218, 241, 243, 261, 262, 265, 269], "properli": [0, 70, 80, 140, 182], "properti": [8, 10, 13, 14, 74, 78, 87, 135, 138, 147, 187, 192], "proport": [5, 255], "proportion": 280, "provid": [0, 1, 2, 3, 4, 5, 7, 8, 21, 22, 23, 24, 26, 30, 34, 55, 61, 62, 65, 67, 68, 69, 70, 74, 96, 108, 109, 119, 158, 159, 160, 162, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 193, 195, 197, 199, 201, 206, 208, 209, 214, 221, 227, 241, 243, 254, 256, 264, 266, 268, 282], "pseudo": [13, 16], "purpos": [203, 207, 221, 226, 228], "python": 201, "pytorch": 256, "q": 17, "qr": 12, "quad": [16, 158, 159, 160, 161, 162, 178, 179, 180, 210, 211, 215, 216, 217, 220, 273], "quadrat": 160, "quotient": 211, "r": [17, 276, 277, 278, 279], "r_t": 192, "radam": 196, "rais": [0, 1, 2, 65, 182, 183, 219], "rand": [202, 208], "randint": [202, 208], "randn": [20, 34, 52, 53, 54, 55, 60, 123, 124, 182, 202, 206, 208], "random": [1, 2, 3, 34, 52, 53, 54, 123, 124, 275, 276, 277, 278, 279, 282], "random_integ": 208, "random_tensor": 208, "randomcrop": [281, 282], "randomgrayscal": [281, 282], "randomhorizontalflip": [281, 282], "randomli": [1, 87, 88, 89, 90, 91, 119, 147, 148, 149, 150, 151, 275, 276, 277, 278, 279, 282], "randomnoisedataset": [0, 1, 2], "randomrot": [281, 282], "randomverticalflip": 281, "rang": [0, 1, 8, 34, 42, 62, 70, 79, 81, 82, 83, 98, 102, 133, 139, 141, 185, 193, 195, 204, 232, 233, 235, 274, 278, 282], "rank": 16, "rate": [183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], "rather": [69, 70, 189, 265], "ratio": [45, 123, 124, 280], "ravel": 260, "raw": [80, 140, 159, 201], "re": [66, 199], "readabl": [67, 68, 69, 71, 182, 201], "readi": [3, 7, 62], "real": [16, 19, 139], "rearrang": 86, "recalibr": [46, 48, 49, 62, 123], "receiv": [178, 179, 180, 262], "recent": 193, "recept": [51, 62, 124], "reciproc": [16, 230, 240, 248], "recognit": [33, 62, 144], "rectangular": 225, "rectif": 192, "rectifi": [76, 77, 136, 137, 192], "recurr": [68, 170], "recurs": [63, 65], "red": 276, "reduc": [20, 34, 51, 55, 60, 62, 123, 164, 165, 166, 167, 168, 169, 175, 176, 177, 178, 179, 180, 191, 194, 199, 201, 241, 242, 243, 250, 255, 276], "reduct": [19, 45, 97, 98, 99, 101, 102, 123, 124, 158, 159, 160, 161, 162, 241, 243], "reevalu": 183, "refer": [4, 7, 65, 208, 222, 225, 257], "reflect": 197, "regardless": [16, 263], "region": [84, 107, 108, 109, 118, 173, 174, 262, 273, 282], "regist": [43, 44, 64, 65, 66, 70, 182, 200], "register_buff": 64, "register_model": [21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 61], "register_paramet": 65, "registr": [65, 182], "registri": 200, "registry_path": 200, "regress": [4, 101, 160, 161], "regular": [16, 20, 24, 60, 91, 148, 149, 150, 151, 185, 186, 187, 190, 191, 192, 193, 195], "relat": [199, 225, 226], "relationship": 280, "relev": [118, 185, 193, 195], "reli": 199, "reliabl": 5, "reliant": [148, 149, 150, 151], "relu": [7, 20, 45, 55, 60, 62, 63, 67, 68, 69, 71, 73, 75, 76, 93, 120, 121, 122, 123, 124, 128, 129, 132, 133, 134, 136, 142, 143, 144, 145, 153, 154, 155, 156], "relu1": 71, "relu2": 71, "relu3": 71, "remain": [5, 64, 106, 147, 148, 149, 150, 151, 194], "rememb": 208, "remov": [200, 266], "rep": 268, "repeat": [260, 261, 268], "repetit": [264, 268], "replac": [208, 276], "repres": [13, 15, 19, 30, 65, 66, 71, 94, 96, 103, 105, 106, 143, 144, 145, 154, 156, 159, 162, 170, 183, 184, 185, 191, 192, 193, 194, 195, 201, 210, 211, 217, 220, 222, 242, 253, 254, 255, 261, 273, 275, 277, 278, 279, 280], "represent": [43, 44, 51, 62, 123, 176, 179, 183], "reproduc": [203, 204, 205, 206, 207, 208, 282], "requir": [2, 3, 4, 7, 51, 64, 67, 71, 73, 74, 76, 77, 78, 79, 81, 94, 96, 118, 123, 124, 133, 155, 159, 162, 182, 197, 199, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 252, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 273, 280], "requires_grad": [64, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 86, 94, 96, 118, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 179, 180, 182, 203, 204, 205, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272], "rescal": [97, 98, 102, 158, 159, 162], "research": 182, "reset": [66, 206, 209], "reshap": [7, 45, 96, 144, 145, 198, 201, 260, 263], "residu": [25, 26, 27, 28, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 62], "residualblock": 34, "resili": 194, "resiz": [118, 271, 281, 282], "resnet": [26, 27, 28, 29, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 51, 52, 53, 54, 62, 123], "resnet_1001": 62, "resnet_101": 62, "resnet_152": 62, "resnet_18": 62, "resnet_200": 62, "resnet_269": 62, "resnet_34": 62, "resnet_50": 62, "resnet_arg": 51, "resnext": 62, "resourc": 199, "respect": [9, 10, 11, 13, 14, 15, 16, 17, 19, 30, 55, 64, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 94, 96, 118, 124, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 235, 239, 240, 241, 242, 243, 246, 248, 250, 253, 254, 255, 261, 262, 264, 268, 276], "respons": [62, 67, 184], "restor": [123, 199], "restructur": 265, "result": [9, 13, 14, 16, 62, 65, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 94, 96, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 124, 140, 182, 183, 197, 199, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 251, 252, 253, 256, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272, 275, 276, 282], "resum": 184, "retain": [66, 209, 221, 228, 241, 242, 243, 250, 255, 272], "retent": 272, "retriev": [0, 2, 67, 69, 70], "return": [0, 1, 2, 3, 5, 7, 26, 30, 45, 64, 65, 67, 68, 69, 70, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 170, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 200, 201, 271, 282], "reus": 272, "reusabl": [71, 182, 271], "revers": [7, 71, 254, 277, 279], "revert": 199, "revolution": 62, "rgb": [23, 24, 25, 27, 28], "rho": 186, "rho_": 192, "rho_t": 192, "right": [14, 15, 16, 18, 19, 74, 80, 135, 140, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 178, 179, 180, 273], "risk": 201, "rmsprop": 196, "rob": 62, "robust": [119, 147, 148, 149, 150, 151, 160, 182, 186, 275, 276, 278, 282], "role": [201, 208, 282], "root": [4, 5, 187, 193, 248], "rotat": [93, 117, 278, 282], "rotated_imag": 119, "rout": [178, 179, 180], "routin": 7, "row": [10, 11, 13, 18, 96, 225, 261, 270], "rprop": 196, "rule": [13, 14, 198, 210, 211, 215, 216, 217, 219, 220], "run": [7, 64, 103, 105, 120, 121, 122, 164, 165, 166, 167, 168, 169, 186, 199, 206, 208], "running_mean": [64, 103, 105, 164, 165, 166, 167, 168, 169], "running_var": [103, 105, 164, 165, 166, 167, 168, 169], "runtim": [68, 71, 182], "s_": 194, "s_d": [177, 180], "s_h": [176, 177, 180], "s_w": [176, 177, 180], "sain": 62, "same": [10, 11, 13, 14, 18, 80, 87, 88, 89, 90, 91, 103, 105, 106, 108, 109, 119, 120, 121, 122, 124, 143, 144, 145, 147, 148, 149, 150, 151, 155, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 194, 206, 208, 214, 224, 227, 229, 239, 241, 242, 243, 257, 259, 263, 265, 266, 267, 270, 274], "sampl": [0, 1, 2, 3, 5, 7, 23, 24, 25, 27, 28, 30, 31, 32, 33, 107, 108, 109, 128, 129, 130, 131, 132, 133, 147, 148, 149, 150, 151, 154, 156, 159, 162, 170, 172, 173, 174, 205, 208, 273, 275, 277, 278, 279, 280], "satisfi": [9, 11, 18], "satur": [134, 282], "save": [2, 64, 66, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 200], "scalabl": [3, 62, 182], "scalar": [10, 15, 97, 98, 99, 101, 102, 201], "scale": [11, 16, 27, 31, 32, 33, 35, 36, 37, 40, 46, 47, 51, 52, 53, 54, 62, 73, 78, 80, 103, 105, 106, 123, 124, 132, 133, 134, 136, 138, 139, 140, 141, 147, 148, 149, 150, 151, 159, 164, 165, 166, 167, 168, 169, 170, 185, 187, 188, 189, 201, 208, 255, 280], "scenario": [69, 70, 170, 189, 190, 272, 276], "schedul": 185, "scientif": 198, "score": [34, 51, 80, 159], "scratch": 7, "script": 208, "se": [46, 47, 48, 49, 50, 62], "se_resnet_101": 62, "se_resnet_152": 62, "se_resnet_18": 62, "se_resnet_34": 62, "se_resnet_50": 62, "seamless": [0, 1, 3, 4, 182, 208], "seamlessli": [3, 4, 8, 66, 68, 71, 182, 201, 282], "second": [11, 68, 69, 94, 123, 154, 188, 189, 190, 191, 192, 198, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 259, 261, 279], "section": 214, "see": [7, 214], "seed": [202, 203, 204, 205, 207, 208, 282], "seen": 186, "select": [51, 52, 53, 54, 62, 118, 123, 124, 178, 180, 250], "selectivekernel": 125, "self": [0, 1, 2, 3, 7, 20, 22, 26, 30, 45, 55, 60, 63, 64, 65, 66, 67, 68, 69, 70, 78, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 154, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 200, 261, 271, 272], "selu": [75, 87, 93, 142, 147, 153], "selunetwork": 138, "semodul": 125, "senet": [29, 46, 47, 48, 49, 50, 62], "sensit": [99, 160, 164, 165, 166], "sentiment": 4, "separ": [0, 82, 83, 84, 167, 168, 169], "sequenc": [14, 34, 51, 67, 69, 82, 221, 257, 259, 262, 264, 267, 268, 270, 271], "sequenti": [20, 26, 30, 45, 55, 60, 63, 67, 68, 72, 82, 120, 121, 122, 155, 271, 282], "seri": [22, 31, 32, 51, 82, 120, 143, 175, 178], "serial": [64, 65, 184], "serv": [3, 26, 45, 55, 65, 67, 68, 69, 70, 71, 182, 194, 272], "set": [3, 4, 5, 43, 44, 63, 66, 70, 82, 83, 84, 136, 137, 138, 143, 144, 145, 147, 150, 151, 154, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 183, 188, 189, 193, 203, 204, 205, 206, 207, 208, 209, 221, 223, 224, 228, 229, 235, 241, 243, 256, 272, 276, 282], "setup": [4, 7], "sever": [16, 143, 144, 145, 175, 176, 177, 178, 179, 180, 199, 271, 282], "sgd": [7, 185, 192, 196], "sgn": 15, "shape": [3, 4, 5, 7, 10, 11, 13, 14, 16, 20, 26, 30, 34, 45, 52, 53, 54, 55, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 198, 201, 203, 204, 205, 207, 208, 209, 212, 223, 224, 225, 226, 227, 228, 229, 235, 240, 241, 242, 243, 246, 248, 250, 254, 255, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 270, 273, 274, 275, 276, 277, 278, 279, 280, 282], "shapelik": 204, "share": 62, "shen": 123, "shift": [103, 105, 106, 164, 165, 166, 167, 168, 169, 170], "shorthand": 214, "should": [30, 64, 199, 203, 204, 205, 207, 223, 224, 232, 233, 253, 262, 271], "show": [197, 200], "showcas": 7, "shown": 206, "shrink": 186, "shuffl": [1, 2, 3], "side": [18, 68, 71, 82, 83, 84, 110, 111, 112, 114, 115, 116, 120, 121, 122, 143, 144, 145, 175, 176, 177, 178, 179, 180, 199], "sigma": [16, 123, 128, 130, 132, 139, 164, 165, 166, 167, 168, 169, 170, 254], "sigma_c": 274, "sigma_i": 16, "sigmoid": [75, 93, 123, 128, 129, 132, 133, 142, 153, 158], "sigmoidnetwork": 139, "sign": [14, 160, 194, 230], "signal": [120, 143, 144, 145, 164, 167, 175, 176, 177, 178, 179, 180], "signific": 199, "significantli": [62, 123, 271], "sim": [147, 148, 149, 150, 151], "similar": [7, 128, 129, 214, 240, 256, 262], "similarli": [19, 253], "simonyan": 62, "simpl": [3, 4, 7, 63, 71, 82, 83, 84, 94, 96, 110, 111, 112, 114, 115, 116, 135, 137, 138, 139, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 212, 213, 218, 271], "simplebinaryclassificationmodel": 158, "simpleclassificationmodel": [159, 162], "simplegelumodel": 135, "simpleleakyrelumodel": 136, "simplemodel": [7, 63, 156, 200], "simpleregressionmodel": 161, "simplerelumodel": 137, "simpleselumodel": 138, "simplesigmoidmodel": 139, "simpletanhmodel": 141, "simpli": [197, 253, 254, 265], "simplic": [62, 137], "simplifi": [4, 31, 71, 120, 121, 122], "simul": [63, 282], "simultan": 119, "sin": [230, 236], "sinc": [14, 17, 67, 68, 69, 70, 82, 83, 84, 133, 197, 199, 205, 261, 282], "sine": [233, 246, 247], "singl": [0, 4, 14, 17, 19, 34, 80, 120, 121, 122, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 159, 170, 176, 177, 178, 179, 180, 183, 201, 207, 223, 257, 266, 274, 276, 282], "singleton": 170, "singular": [10, 13, 14, 16, 18, 19], "sinh": [230, 237, 252], "size": [0, 1, 2, 3, 19, 30, 31, 32, 33, 34, 51, 60, 62, 63, 66, 68, 82, 83, 84, 86, 89, 90, 91, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 143, 144, 145, 154, 156, 158, 159, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 200, 204, 207, 208, 209, 241, 242, 243, 250, 255, 257, 259, 266, 269, 270, 273, 275, 280, 282], "sk": [51, 52, 53, 54, 62, 124], "sk_resnet_18": 62, "sk_resnet_34": 62, "sk_resnet_50": 62, "skblock": 51, "skip": [62, 199], "sknet": [29, 52, 53, 54, 62], "slice": [94, 253], "slide": [86, 175, 177, 178, 180], "slight": 123, "slightli": 282, "slope": [76, 134, 136], "slow": [3, 192], "small": [16, 31, 32, 33, 62, 76, 97, 98, 103, 105, 106, 136, 138, 158, 159, 160, 164, 165, 166, 167, 168, 169, 170, 176, 179, 186, 187, 188, 189, 190, 191, 192, 193, 194], "smaller": [60, 62, 68, 71, 182, 187, 188, 216, 273, 275, 280], "smallest": 243, "smooth": [24, 74, 134, 135, 185, 193, 282], "smoother": 185, "so": [67, 68, 69, 70, 119, 182, 192, 223, 224, 271], "softmax": [75, 93, 124, 142, 153, 159], "softmaxmodel": 140, "solut": [16, 18], "solv": [8, 9, 12, 16, 17, 19], "solver": 8, "some": [73, 88, 119, 147, 148, 149, 164, 165, 166, 167, 168, 169, 187, 188, 189, 199, 201], "sometim": 198, "sophist": [68, 71], "sourc": 208, "space": [11, 17, 19, 82, 83, 84, 86, 107, 108, 109, 120, 121, 122, 143, 144, 145, 172, 173, 174, 221, 282], "span": 4, "spars": [187, 188], "spatial": [20, 34, 51, 55, 60, 62, 121, 123, 144, 145, 164, 165, 166, 167, 168, 169, 170, 176, 177, 178, 179, 180, 261], "spatial_dim": 123, "spatio": 145, "special": [0, 1, 7, 16, 64, 65, 66, 147, 208], "specif": [4, 7, 26, 43, 44, 67, 68, 69, 70, 71, 124, 133, 147, 148, 149, 150, 151, 167, 168, 169, 182, 183, 197, 208, 223, 241, 243, 264, 268], "specifi": [0, 1, 2, 3, 4, 5, 7, 15, 21, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 59, 61, 63, 68, 80, 86, 91, 97, 98, 99, 101, 102, 106, 107, 108, 109, 118, 119, 123, 140, 143, 144, 145, 158, 159, 160, 161, 162, 170, 172, 173, 174, 176, 177, 178, 179, 180, 183, 201, 203, 204, 205, 206, 207, 219, 221, 222, 223, 224, 225, 226, 228, 229, 235, 241, 242, 243, 250, 254, 255, 256, 257, 259, 262, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 280, 282], "speech": 167, "speed": [185, 186, 187, 188, 189, 190, 191, 192, 193, 195], "split": [4, 257, 259, 270], "springer": 62, "sqrt": [74, 128, 129, 132, 133, 135, 164, 165, 166, 167, 168, 169, 170, 186, 187, 188, 189, 191, 192, 193, 230, 232, 233], "squar": [1, 3, 9, 10, 11, 13, 14, 16, 17, 18, 19, 99, 101, 160, 161, 186, 187, 188, 193, 230, 248], "squaredataset": [0, 1, 2, 3], "squeez": [45, 48, 62, 123, 260], "stabil": [13, 16, 62, 97, 98, 103, 105, 106, 120, 121, 122, 158, 159, 164, 165, 166, 167, 168, 169, 170, 185, 186, 187, 188, 189, 190, 191, 192, 193, 274], "stabl": [128, 129, 132, 133, 147, 159, 185, 189, 190, 193, 194, 195], "stack": [71, 124, 259, 260, 270, 282], "stage": [34, 43, 44, 45, 51, 52, 53, 54], "stage1": 45, "stage2": 45, "stage3": 45, "stage4": 45, "standard": [34, 43, 44, 74, 76, 128, 130, 132, 134, 135, 136, 147, 194, 205, 208, 214, 271, 274, 282], "start": [1, 3, 185, 187, 194, 221, 273, 275], "state": [62, 64, 65, 66, 68, 71, 183, 197, 199, 206], "state_dict": [65, 66, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], "static": 71, "statist": [16, 87, 103, 105], "std": [5, 130, 271, 274, 282], "stem": [26, 34, 51], "stem_typ": 34, "stem_width": 34, "step": [66, 86, 124, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 221, 271, 272], "step_siz": 194, "still": 186, "stochast": [7, 185, 195], "stop": 221, "storag": [67, 69, 209], "store": [2, 4, 5, 34, 51, 64, 65, 66, 67, 68, 69, 70, 123, 172, 173, 174, 199, 209, 273, 274, 275, 276, 277, 278, 279, 280], "str": [5, 34, 55, 65, 67, 69, 71, 97, 98, 99, 101, 102, 118, 183, 200, 261], "straightforward": [195, 197, 210], "strategi": 184, "streamlin": [2, 3], "strict": [65, 183], "stride": [30, 31, 32, 33, 68, 71, 82, 83, 84, 86, 107, 108, 109, 110, 111, 112, 114, 115, 116, 120, 121, 122, 124, 143, 144, 145, 172, 173, 174, 175, 176, 177, 178, 179, 180], "stride_height": 86, "stride_width": 86, "string": [65, 67, 69, 71, 143, 144, 145, 183], "structur": [0, 7, 17, 64, 65, 68, 182, 183, 200, 201, 225, 272], "style": [26, 105, 167, 168, 261], "sub": [67, 68, 69, 70, 71, 182, 230, 273, 275], "sub_tensor": 209, "subclass": [1, 2, 3, 7, 65, 66, 67, 182, 183], "sublay": 63, "submodul": [63, 65, 182], "subsequ": [68, 71, 133, 208], "subset": [148, 149], "subtract": [7, 220, 274], "suffer": 187, "suit": [24, 51, 128, 129, 132, 133], "suitabl": [26, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 47, 48, 50, 62, 160, 187, 188, 203], "sum": [15, 67, 68, 69, 70, 71, 80, 97, 98, 99, 101, 102, 124, 140, 158, 159, 160, 161, 162, 187, 210, 213, 218, 230, 253, 255, 257, 259, 261, 264, 268, 270], "sum_": [14, 80, 140, 158, 159, 161, 162, 164, 165, 166, 167, 168, 169, 170, 175, 176, 177, 212, 213, 242, 250, 253, 255, 261, 264], "sum_i": [15, 218], "sum_j": 218, "sum_k": 214, "summar": [43, 44, 175, 176, 177], "summari": [43, 44], "summat": 14, "sun": 123, "super": [7, 63, 64, 65, 66, 67, 68, 69, 70, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 154, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 170, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 200], "support": [1, 3, 4, 7, 8, 14, 15, 16, 17, 19, 34, 67, 68, 69, 70, 71, 118, 119, 182, 184, 191, 208, 209, 210, 211, 214, 215, 216, 217, 219, 220, 222, 225, 235, 240, 242, 246, 248, 250, 253, 254, 255, 257, 261, 265, 272, 282], "suppos": 282, "sure": [182, 282], "svd": [12, 16], "symmetr": [9, 107, 108, 109, 132, 133, 141], "syntax": [1, 214], "system": [8, 9, 16, 17, 18, 62, 197, 261], "systemat": 282, "szegedi": [23, 62], "t": [16, 62, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 209, 214, 256, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282], "t0": 185, "t1": 256, "t2": 256, "tabular": 4, "tailor": [4, 182, 282], "take": [17, 175, 176, 177, 178, 179, 180, 199, 271], "taken": 253, "tan": 230, "tangent": [81, 141, 234, 251, 252], "tanh": [68, 71, 74, 75, 93, 128, 129, 132, 133, 135, 142, 153, 230], "tanhnetwork": 141, "target": [5, 71, 97, 98, 99, 101, 102, 107, 108, 109, 118, 158, 159, 160, 161, 162, 172, 173, 174, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 273, 275, 280], "target_tensor": [158, 159, 160, 161, 162], "target_transform": 5, "task": [4, 7, 8, 20, 21, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 51, 62, 79, 80, 83, 94, 97, 98, 101, 102, 123, 124, 139, 140, 143, 144, 145, 158, 159, 160, 161, 162, 167, 168, 169, 175, 177, 178, 180, 188, 198, 208, 225, 282], "techniqu": [9, 13, 60, 103, 147, 148, 149, 150, 151, 167, 168, 169, 184, 280, 282], "tempor": [143, 145, 177, 180], "temporarili": 199, "tensor": [2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 45, 52, 53, 54, 55, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 197, 199, 201, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282], "term": [16, 94, 120, 121, 122, 185, 189, 191, 192, 193, 195], "test": [4, 5], "test_backward": 63, "test_siz": 5, "text": [4, 10, 14, 15, 34, 51, 52, 53, 54, 67, 73, 76, 77, 78, 80, 82, 83, 84, 107, 108, 109, 110, 111, 112, 114, 115, 116, 120, 121, 122, 123, 124, 128, 129, 132, 133, 134, 136, 137, 138, 140, 143, 144, 145, 147, 148, 149, 150, 151, 158, 159, 160, 161, 162, 175, 176, 177, 178, 179, 180, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 204, 210, 211, 213, 215, 216, 217, 219, 220, 231, 235, 241, 242, 243, 245, 250, 255, 257, 259, 262, 263, 264, 265, 266, 268, 269, 270, 273, 274, 275, 277, 278, 279], "th": [94, 158, 159, 161, 162, 167, 168, 169, 215, 216, 219], "than": [0, 1, 69, 70, 73, 76, 99, 134, 136, 160, 183, 189, 235, 253, 262, 267, 273, 275, 280], "thei": [0, 7, 19, 62, 64, 68, 70, 71, 201, 261, 265, 273, 275, 282], "them": [3, 65, 70, 86, 185, 198, 257, 267, 271, 274, 282], "therebi": [147, 176, 177, 179, 180], "theta": [185, 186, 278], "theta_": [185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], "theta_t": [192, 193], "thi": [0, 1, 2, 3, 5, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 30, 34, 43, 44, 51, 52, 53, 54, 62, 63, 64, 66, 68, 69, 70, 71, 77, 79, 80, 81, 82, 83, 84, 86, 94, 96, 107, 118, 119, 123, 124, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 162, 164, 165, 166, 167, 168, 169, 170, 172, 175, 176, 177, 178, 179, 180, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 213, 214, 218, 221, 223, 226, 227, 228, 229, 235, 239, 240, 241, 242, 243, 246, 248, 250, 253, 254, 255, 256, 262, 264, 265, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282], "thing": 199, "those": [7, 31, 32, 33, 70, 133], "three": [19, 33, 84, 109, 112, 116, 120, 121, 122, 145, 151, 166, 169, 174, 177, 180], "threshold": [16, 99, 160], "through": [0, 3, 4, 7, 11, 16, 17, 19, 20, 22, 26, 30, 35, 36, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 52, 53, 54, 60, 67, 68, 71, 94, 96, 118, 123, 124, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 164, 165, 166, 167, 170, 175, 176, 177, 178, 179, 180, 205, 212, 213, 218, 261, 263, 265, 266, 269, 282], "throughout": [78, 272], "tile": 260, "time": [0, 3, 14, 31, 32, 33, 82, 120, 136, 138, 143, 175, 176, 177, 178, 179, 180, 185, 186, 187, 188, 189, 193, 195, 199, 264, 268], "to_tensor": 5, "togeth": [71, 271, 282], "too": 194, "tool": [3, 7, 182, 198, 208, 271, 282], "top": [9, 10, 11, 17, 19, 94, 96, 118, 143, 144, 145, 154, 156, 273, 275], "torch": [55, 256], "total": [0, 1, 2, 5, 21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 61, 63, 66, 209, 265], "totensor": [271, 282], "trace": [8, 230], "track": [7, 120, 121, 122, 164, 165, 166, 167, 168, 169, 182, 197, 199, 203, 204, 205, 207, 221, 222, 223, 224, 225, 226, 227, 228, 229, 256, 272], "track_running_stat": [120, 121, 122, 164, 165, 166, 167, 168, 169], "tradit": [186, 187, 190, 191, 192], "trail": 106, "train": [1, 2, 3, 4, 5, 7, 22, 23, 24, 62, 63, 64, 65, 68, 70, 71, 80, 87, 88, 89, 90, 91, 103, 105, 119, 135, 136, 138, 139, 140, 141, 147, 148, 149, 150, 151, 164, 165, 166, 167, 168, 169, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 271, 274, 275, 276, 277, 278, 279, 282], "trainabl": [63, 164, 165, 166, 167, 168, 169, 182], "transact": 123, "transfer": [105, 167, 168], "transform": [2, 4, 5, 7, 11, 62, 69, 94, 96, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 198, 261], "transform_pipelin": [271, 282], "transformed_imag": [271, 282], "transit": 160, "translat": [176, 179], "transpos": [7, 9, 230], "treat": [0, 64, 170, 182], "triangular": [9, 17], "true": [1, 2, 3, 4, 5, 19, 22, 23, 24, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 86, 87, 88, 89, 90, 91, 94, 96, 103, 105, 118, 120, 121, 122, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 179, 180, 182, 183, 188, 189, 193, 197, 203, 204, 205, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259, 262, 263, 264, 265, 266, 267, 268, 269, 270, 272], "truncat": 63, "truncate_from": 63, "try": 0, "tune": 282, "tupl": [2, 3, 5, 11, 17, 19, 34, 63, 65, 66, 82, 83, 84, 86, 106, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 143, 144, 145, 155, 170, 173, 174, 175, 176, 177, 178, 179, 180, 188, 189, 190, 191, 192, 194, 201, 203, 204, 205, 207, 209, 223, 226, 228, 241, 242, 243, 250, 255, 257, 259, 261, 262, 265, 266, 267, 269, 270, 273, 274, 275, 280], "twice": 262, "two": [7, 10, 11, 13, 14, 16, 17, 19, 31, 32, 33, 52, 55, 82, 83, 84, 94, 111, 115, 123, 124, 144, 150, 154, 165, 168, 176, 179, 188, 189, 190, 191, 192, 194, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 253, 261], "type": [34, 45, 51, 64, 65, 66, 94, 154, 209, 221, 222, 223, 224, 225, 226, 227, 228, 229, 256, 261, 272], "typeerror": [0, 1, 2, 65, 183], "typic": [8, 34, 51, 64, 80, 87, 119, 123, 138, 140, 162, 164, 165, 166, 167, 168, 169, 184, 185, 193, 195, 199, 201, 269, 272, 274, 278, 280, 282], "u": [16, 19, 129, 131, 133], "u_": 190, "ultra": 40, "unchang": [64, 91, 134, 136, 137, 138, 147, 148, 149, 150, 151, 155, 263, 266], "undefin": 219, "under": 182, "underbrac": 14, "underdetermin": 16, "undergo": 282, "underli": [0, 7, 23, 24, 25, 27, 28, 256, 259, 263, 265, 270], "understand": [7, 60, 62, 63, 71, 282], "unexpect": [65, 68, 71, 208], "unfold": [85, 93], "unifi": 0, "uniform": [127, 129, 133, 143, 144, 145, 154, 156, 202, 203, 204, 208, 276, 277, 278, 279], "uniformli": [203, 207], "uniniti": [223, 224], "unintend": 199, "union": 55, "uniqu": [9, 16, 18, 67, 69], "unit": [20, 30, 60, 73, 74, 76, 77, 78, 128, 129, 132, 133, 134, 135, 136, 137, 138, 147], "unless": [35, 36, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 209], "unlik": [64, 67, 68, 69, 70, 76, 134, 136, 147, 170, 186, 187, 189, 190, 191, 192, 194], "unnecessari": 199, "unpad": 262, "unseen": 282, "unsqueez": 260, "unstabl": 13, "up": [183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 278, 280], "updat": [4, 64, 70, 71, 147, 148, 149, 150, 151, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199], "upon": [24, 62, 67, 68, 69, 70], "upper": [17, 131, 194, 207], "us": [0, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 16, 17, 19, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 94, 96, 101, 103, 105, 108, 109, 118, 119, 120, 121, 122, 123, 124, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 197, 198, 199, 200, 203, 204, 205, 207, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 239, 241, 242, 243, 250, 255, 261, 262, 264, 266, 268, 269, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282], "usag": [3, 8, 68, 71, 183, 184, 273, 274, 275, 276, 277, 278, 279, 280], "use_aux": [22, 23, 24], "user": [1, 2, 3, 4, 7, 67, 68, 69, 70, 182, 187, 271, 272, 282], "usual": 159, "util": [3, 7, 8, 52, 53, 54, 69, 70, 182, 208], "v": [11, 16, 19, 188, 189, 191, 192, 222], "v1": [22, 23, 26, 27, 28, 62], "v2": [26, 28, 62], "v3": [22, 24, 25, 62], "v4": [22, 25, 62], "v_": [185, 188, 189, 191, 192, 193, 195], "v_stack": 270, "v_t": [192, 193], "val": 126, "valid": [120, 121, 122, 124, 143, 144, 145, 254], "valu": [7, 10, 14, 15, 16, 19, 43, 44, 63, 65, 67, 69, 71, 73, 76, 79, 80, 81, 82, 83, 84, 86, 97, 98, 99, 101, 102, 103, 105, 106, 107, 118, 119, 120, 121, 122, 123, 126, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 139, 141, 147, 148, 149, 150, 151, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 175, 176, 177, 178, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 201, 203, 204, 205, 206, 207, 208, 221, 222, 223, 224, 225, 231, 232, 233, 235, 238, 239, 240, 241, 243, 245, 246, 248, 249, 257, 262, 263, 265, 269, 274, 276, 277, 279], "valuabl": 208, "valueerror": [1, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 183], "vanish": [62, 134, 138, 164, 165, 166], "var": 230, "vari": [51, 68, 70, 107, 118, 172, 278], "variabl": [65, 71, 107, 108, 109, 155, 172, 173, 174, 182, 197, 199, 203, 223, 275, 278], "varianc": [78, 87, 103, 105, 120, 121, 122, 128, 129, 132, 133, 138, 147, 164, 165, 166, 167, 168, 169, 170, 188, 189, 190, 191, 192, 205, 255, 278, 282], "variant": [43, 44, 52, 53, 54, 55, 56, 57, 58, 59, 188, 189, 190], "variat": [167, 168, 169, 275, 282], "varieti": [4, 26, 208, 282], "variou": [22, 27, 28, 30, 62, 137, 184, 208, 241, 243, 262, 272], "vdot": 218, "vector": [11, 16, 17, 18, 19, 94, 96, 154, 156, 212, 213, 214, 218], "veloc": [185, 193, 195], "veri": [16, 37, 39, 62, 186], "versa": 194, "versatil": [208, 261], "version": [19, 22, 26, 30, 31, 32, 193, 218, 276], "vertic": [267, 270, 279], "vgg": 55, "vggnet": [29, 56, 57, 58, 59, 62], "vggnet_11": 62, "vggnet_13": 62, "vggnet_16": 62, "vggnet_19": 62, "via": [3, 4, 51], "vice": 194, "video": [84, 91, 122, 145, 169, 177, 180], "view": [26, 30, 68, 176, 177, 178, 179, 180, 265], "vision": [34, 62, 83, 144, 154, 282], "visual": [60, 62], "vol": 62, "volumetr": [84, 91, 122, 145, 169, 177, 180], "vstack": 260, "w": [34, 52, 53, 54, 83, 84, 86, 90, 91, 94, 96, 108, 109, 111, 112, 115, 116, 118, 119, 121, 122, 123, 143, 144, 145, 154, 156, 165, 166, 168, 169, 173, 174, 177, 180, 273, 275], "w_": [83, 84, 108, 109, 111, 112, 115, 116, 118, 144, 145, 173, 174, 176, 177, 179, 180], "w_out": [83, 84, 111, 112, 115, 116], "wa": [23, 147, 148, 149, 150, 151, 199], "wai": [1, 21, 61, 197, 199, 265], "wang": 62, "want": [0, 7, 271, 273], "warn": [67, 69], "we": [3, 7, 198, 261], "weight": [35, 36, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 62, 82, 83, 84, 94, 96, 97, 98, 102, 103, 105, 106, 118, 123, 124, 128, 129, 132, 133, 143, 144, 145, 147, 148, 149, 150, 151, 154, 156, 158, 159, 162, 164, 165, 166, 167, 168, 169, 170, 182, 185, 186, 187, 188, 189, 190, 191, 192, 193, 195, 203, 208], "weight1": 69, "weight2": 69, "weight_decai": [185, 186, 187, 188, 189, 190, 191, 192, 193, 195], "well": [24, 51, 128, 129], "were": 71, "what": 199, "when": [0, 1, 3, 7, 14, 65, 68, 70, 71, 73, 76, 82, 83, 84, 134, 155, 164, 165, 166, 167, 168, 169, 183, 186, 194, 197, 199, 200, 201, 208, 219, 271, 273], "where": [3, 4, 5, 10, 11, 13, 14, 15, 16, 17, 19, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 89, 90, 91, 94, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 123, 124, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 201, 208, 210, 211, 215, 216, 217, 219, 220, 223, 224, 235, 239, 240, 241, 242, 243, 246, 248, 250, 253, 254, 255, 257, 262, 264, 268, 271, 272, 273, 274, 275, 276, 277, 278, 279], "whether": [1, 10, 22, 23, 24, 65, 66, 128, 129, 193, 197, 203, 204, 205, 207, 209, 223, 224, 241, 242, 243, 250, 255], "which": [0, 7, 10, 11, 13, 14, 15, 16, 17, 19, 25, 28, 51, 56, 57, 58, 59, 62, 65, 67, 69, 71, 76, 80, 99, 119, 124, 134, 135, 136, 140, 141, 147, 160, 162, 164, 165, 166, 167, 168, 169, 170, 188, 189, 191, 193, 197, 199, 201, 203, 204, 207, 232, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 246, 247, 248, 250, 251, 252, 253, 255, 257, 264, 265, 267, 269, 272, 273, 275, 276, 277, 278, 279, 280, 282], "while": [7, 28, 62, 68, 71, 87, 135, 137, 182, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 199, 265, 267, 276, 282], "who": [7, 67, 68, 69, 70], "whose": [19, 224, 227, 229, 231, 235, 239, 245], "wide": [4, 5, 8, 16, 34, 42, 43, 44, 62, 77, 137, 143, 144, 159], "wide_resnet_101": 62, "wide_resnet_50": 62, "wider": [43, 44, 82, 83], "wideresnet": 62, "width": [43, 44, 51, 83, 84, 86, 90, 91, 108, 109, 111, 112, 115, 116, 118, 119, 124, 144, 145, 165, 166, 168, 169, 173, 174, 176, 177, 179, 180, 273, 275, 280], "window": [110, 111, 112, 114, 115, 116, 175, 176, 177, 178, 179, 180, 186, 241, 243], "wise": [49, 62, 73, 74, 76, 77, 78, 79, 80, 81, 120, 121, 122, 123, 140, 147, 148, 149, 150, 151, 182, 198, 210, 211, 214, 215, 216, 217, 219, 220, 231, 232, 233, 234, 235, 236, 237, 238, 240, 244, 245, 246, 247, 248, 249, 251, 252, 253, 259, 270], "within": [2, 62, 63, 64, 67, 68, 69, 70, 71, 81, 118, 119, 133, 135, 137, 138, 139, 141, 143, 144, 145, 147, 148, 149, 155, 158, 159, 160, 161, 162, 164, 165, 166, 167, 170, 175, 176, 177, 178, 179, 180, 184, 199, 221, 235, 278, 282], "without": [7, 67, 68, 69, 94, 96, 143, 144, 145, 154, 156, 197, 200, 241, 263, 265, 269], "won": 199, "work": [1, 2, 3, 7, 9, 198, 201], "workflow": [208, 282], "workload": 7, "wrap": [3, 182, 199, 256], "wrapper": 182, "x": [7, 8, 18, 26, 30, 45, 55, 62, 63, 64, 65, 67, 68, 69, 70, 71, 80, 94, 96, 119, 124, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 179, 180, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 203, 204, 205, 207, 223, 224, 239, 261, 273, 274, 275, 276, 277, 278, 279, 280], "x1": 154, "x2": 154, "x_": [159, 162, 261], "x_c": [159, 162], "x_i": 158, "x_k": 159, "xavier": [128, 129, 132, 133], "xavier_norm": 127, "xavier_uniform": 127, "xie": 62, "xy": 261, "x\u2081": 154, "x\u2082": 154, "y": [67, 68, 69, 70, 71, 119, 134, 135, 136, 137, 138, 139, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 179, 180, 203, 204, 205, 207, 223, 224, 261, 276], "y_": [159, 162, 261], "y_c": [159, 162], "y_i": 158, "yann": [5, 62], "yet": [7, 198], "yield": [0, 1, 65, 199], "you": [0, 63, 68, 70, 71, 182, 184, 197, 199, 208, 223, 224, 225, 229, 254, 256, 271, 273, 282], "your": [182, 184, 197, 199, 208, 282], "z": [224, 228, 229], "zeiler": [60, 62], "zero": [14, 16, 17, 24, 63, 73, 76, 82, 83, 84, 87, 88, 89, 90, 91, 110, 111, 112, 114, 115, 116, 126, 128, 129, 130, 131, 132, 133, 134, 136, 137, 138, 143, 144, 145, 147, 148, 149, 150, 151, 170, 175, 176, 177, 178, 179, 180, 182, 183, 186, 187, 188, 189, 190, 191, 192, 193, 223, 224, 225, 229, 230, 235, 245, 262], "zero_grad": [66, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 209], "zeros_lik": [224, 230], "zfnet": [29, 62], "zhang": 62, "zisserman": 62, "\u03c3\u1d62": 16}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "MNIST", "Image Datasets", "Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "alexnet", "Inception", "inception_v1", "inception_v3", "inception_v4", "InceptionResNet", "inception_resnet_v1", "inception_resnet_v2", "ConvNets", "LeNet", "lenet_1", "lenet_4", "lenet_5", "ResNet", "resnet_1001", "resnet_101", "resnet_152", "resnet_18", "resnet_200", "resnet_269", "resnet_34", "resnet_50", "wide_resnet_101", "wide_resnet_50", "SENet", "se_resnet_101", "se_resnet_152", "se_resnet_18", "se_resnet_34", "se_resnet_50", "SKNet", "models.sk_resnet_18", "models.sk_resnet_34", "models.sk_resnet_50", "VGGNet", "vggnet_11", "vggnet_13", "vggnet_16", "vggnet_19", "ZFNet", "zfnet", "lucid.models", "models.summarize", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "nn.SEModule", "nn.SelectiveKernel", "Fused Layers", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.LeakyReLU", "nn.ReLU", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Tanh", "Activation Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "lucid.nn", "optim.Optimizer", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.types", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.meshgrid", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.unsqueeze", "lucid.vstack", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": 198, "1d": 198, "2": 198, "2d": 198, "3": 198, "It": [197, 199], "ab": 231, "activ": [75, 93, 142, 153], "ad": 198, "adadelta": 186, "adagrad": 187, "adam": 188, "adamax": 190, "adamw": 189, "adaptive_avg_pool1d": 107, "adaptive_avg_pool2d": 108, "adaptive_avg_pool3d": 109, "adaptiveavgpool1d": 172, "adaptiveavgpool2d": 173, "adaptiveavgpool3d": 174, "add": 210, "addit": 16, "admonit": 201, "advanc": [86, 282], "alexnet": [20, 21], "algebra": 12, "algorithm": [185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], "alias": 201, "align": 198, "alpha_dropout": 87, "alphadropout": 147, "also": 184, "anoth": 256, "arang": 221, "arcco": 232, "architectur": [20, 31, 32, 33, 43, 44, 60], "arcsin": 233, "arctan": 234, "asgd": 185, "attent": 124, "attribut": [5, 20, 26, 30, 34, 45, 51, 55, 60, 64, 66, 67, 68, 69, 70, 71, 120, 121, 122, 123, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 209, 273, 274, 275, 276, 277, 278, 279, 280], "avg_pool1d": 110, "avg_pool2d": 111, "avg_pool3d": 112, "avgpool1d": 175, "avgpool2d": 176, "avgpool3d": 177, "axi": 198, "backpropag": 209, "backward": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 94, 96, 118, 123, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 179, 180, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270], "batch_norm": 103, "batchnorm": 125, "batchnorm1d": 164, "batchnorm2d": 165, "batchnorm3d": 166, "bceloss": 158, "behavior": [107, 108, 109, 172, 173, 174], "benefit": 199, "bilinear": [94, 154], "binari": 230, "binary_cross_entropi": 97, "broadcast": 198, "buffer": 64, "calcul": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 34, 45, 51, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 86, 94, 96, 107, 108, 109, 118, 120, 121, 122, 123, 124, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280], "captur": 200, "case": 201, "centercrop": 273, "choleski": 9, "class": [0, 1, 2, 5, 20, 22, 26, 30, 34, 45, 51, 55, 60, 64, 65, 66, 67, 68, 69, 70, 71, 120, 121, 122, 123, 124, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 209, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "clip": 235, "co": 236, "combin": 0, "compon": [3, 7, 182], "compos": 271, "concatdataset": [0, 1], "concaten": 257, "conclus": [3, 7, 182, 197, 198, 199, 208, 272, 282], "constant": 126, "contain": 72, "conv": 125, "conv1d": [82, 143], "conv2d": [83, 144], "conv3d": [84, 145], "convbnrelu1d": 120, "convbnrelu2d": 121, "convbnrelu3d": 122, "convnet": [29, 62], "convolut": [85, 93, 146, 153], "core": 7, "cosh": 237, "creat": [66, 209, 256], "cross_entropi": 98, "crossentropyloss": 159, "cube": 238, "custom": [1, 2, 3, 65, 183, 184, 282], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 6], "defin": [2, 65, 183, 184], "definit": 201, "descript": [52, 53, 54, 200], "det": 10, "detail": [16, 43, 44], "diag": 222, "dilat": 86, "div": 211, "dot": 212, "dropout": [88, 92, 93, 148, 152, 153], "dropout1d": [89, 149], "dropout2d": [90, 150], "dropout3d": [91, 151], "eig": 11, "elu": [73, 134], "empti": 223, "empty_lik": 224, "exampl": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282], "excit": 125, "exp": 239, "ey": 225, "featur": [4, 7, 8, 184, 208, 282], "flatten": 258, "forward": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 34, 45, 51, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 86, 94, 96, 107, 108, 109, 118, 120, 121, 122, 123, 124, 128, 129, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 276, 277, 278, 279, 280], "from": 256, "function": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 61, 63, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 126, 128, 129, 130, 131, 132, 133, 197, 199, 200, 203, 204, 205, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270], "fuse": 125, "futur": 4, "gelu": [74, 135], "gener": [202, 230], "get": 184, "grad_en": 197, "gradient": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 94, 96, 118, 123, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 179, 180, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270], "guidelin": 201, "how": [197, 199], "hstack": 259, "huber_loss": 99, "huberloss": 160, "ident": 155, "imag": [6, 281], "incept": 22, "inception_resnet_v1": 27, "inception_resnet_v2": 28, "inception_v1": 23, "inception_v3": 24, "inception_v4": 25, "inceptionresnet": 26, "index": 209, "init": [126, 128, 129, 130, 131, 132, 133], "initi": 127, "inner": 213, "input": 256, "inspect": [184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], "instance_norm": 105, "instancenorm1d": 167, "instancenorm2d": 168, "instancenorm3d": 169, "integr": [3, 182, 208, 282], "interpol": 118, "inv": 13, "iter": 209, "kaiming_norm": 128, "kaiming_uniform": 129, "kei": [3, 4, 7, 182, 184, 208, 282], "kernel": 125, "layer": [125, 142, 146, 152, 153, 157, 163, 171, 181], "layer_norm": 106, "layernorm": 170, "leaky_relu": 76, "leakyrelu": 136, "learn": 208, "lenet": 30, "lenet_1": 31, "lenet_4": 32, "lenet_5": 33, "limit": 7, "linalg": [8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "linear": [12, 93, 95, 96, 153, 156, 157], "list": 256, "load": 1, "log": 240, "loss": [93, 100, 153, 163], "lucid": [3, 4, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 62, 93, 182, 184, 197, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 282], "matmul": 214, "matrix": 214, "matrix_pow": 14, "max": 241, "max_pool1d": 114, "max_pool2d": 115, "max_pool3d": 116, "maximum": 215, "maxpool1d": 178, "maxpool2d": 179, "maxpool3d": 180, "mean": 242, "mechan": 124, "meshgrid": 261, "metadata": 200, "method": [0, 1, 2, 5, 26, 30, 55, 65, 66, 183, 209], "min": 243, "minimum": 216, "mnist": 5, "model": [52, 53, 54, 62, 63, 182], "modul": [65, 153], "moduledict": 67, "modulelist": 68, "more": 208, "mse_loss": 101, "mseloss": 161, "mul": 217, "multipl": [0, 214], "nadam": 191, "new": 198, "newaxi": 198, "nll_loss": 102, "nllloss": 162, "nn": [64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182], "no_grad": 199, "norm": 15, "normal": [93, 104, 130, 153, 171, 274], "note": 7, "number": 202, "ones": 226, "ones_lik": 227, "oper": [12, 214, 230], "optim": [183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196], "organ": 182, "outer": 218, "overview": [3, 4, 7, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 46, 47, 48, 49, 50, 182, 184, 208, 282], "pad": 262, "paramet": [1, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 199, 200, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "parameterdict": 69, "parameterlist": 70, "perform": 209, "pinv": 16, "pipelin": [3, 282], "pitfal": [197, 199], "pool": [93, 113, 153, 181], "potenti": [197, 199], "power": 219, "properti": [66, 209], "qr": 17, "radam": 192, "rais": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "rand": 203, "randint": 204, "randn": 205, "random": [202, 203, 204, 205, 206, 207, 208], "randomcrop": 275, "randomgrayscal": 276, "randomhorizontalflip": 277, "randomrot": 278, "randomverticalflip": 279, "ravel": 263, "reciproc": 244, "refer": [5, 123, 184], "register_model": 200, "relu": [77, 125, 137], "repeat": 264, "reshap": 265, "resiz": 280, "resnet": 34, "resnet_1001": 35, "resnet_101": 36, "resnet_152": 37, "resnet_18": 38, "resnet_200": 39, "resnet_269": 40, "resnet_34": 41, "resnet_50": 42, "return": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 46, 47, 48, 49, 50, 52, 53, 54, 56, 57, 58, 59, 61, 63, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 124, 126, 128, 129, 130, 131, 132, 133, 197, 199, 203, 204, 205, 206, 207, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270], "rmsprop": 193, "rotat": 119, "rprop": 194, "rule": 214, "se_resnet_101": 46, "se_resnet_152": 47, "se_resnet_18": 48, "se_resnet_34": 49, "se_resnet_50": 50, "see": 184, "seed": 206, "select": 125, "selectivekernel": 124, "selu": [78, 138], "semodul": 123, "senet": 45, "sequenti": 71, "sgd": 195, "sigmoid": [79, 139], "sign": 245, "signatur": [0, 1, 2, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 63, 64, 65, 66, 67, 68, 69, 70, 71, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 94, 96, 97, 98, 99, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 143, 144, 145, 147, 148, 149, 150, 151, 154, 155, 156, 158, 159, 160, 161, 162, 164, 165, 166, 167, 168, 169, 170, 172, 173, 174, 175, 176, 177, 178, 179, 180, 183, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 197, 199, 200, 203, 204, 205, 206, 207, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280], "sin": 246, "sinh": 247, "sk_resnet_18": 52, "sk_resnet_34": 53, "sk_resnet_50": 54, "sknet": 51, "slice": 209, "softmax": [80, 140], "solv": 18, "sqrt": 248, "squar": 249, "squeez": [125, 266], "stack": 267, "start": 184, "state": [184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195], "sub": 220, "sum": 250, "summar": 63, "summari": 63, "svd": 19, "tabl": 63, "tan": 251, "tanh": [81, 141, 252], "tensor": [198, 209, 230, 256, 260], "through": 209, "tile": 268, "totensor": 272, "trace": 253, "track": 209, "transform": [271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282], "transpos": 254, "type": 201, "unari": 230, "unfold": 86, "uniform": [131, 207], "unsqueez": 269, "us": [1, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 201, 256], "usag": [4, 7, 23, 24, 25, 27, 28, 30, 31, 32, 33, 64, 119, 197, 198, 199, 201, 261, 271, 272, 282], "util": [93, 117], "utilit": 260, "var": 255, "vggnet": 55, "vggnet_11": 56, "vggnet_13": 57, "vggnet_16": 58, "vggnet_19": 59, "vstack": 270, "weight": 127, "why": 201, "wide_resnet_101": 43, "wide_resnet_50": 44, "work": [4, 197, 199], "xavier_norm": 132, "xavier_uniform": 133, "zero": 228, "zeros_lik": 229, "zfnet": [60, 61]}})