Search.setIndex({"alltitles": {"@ Operator": [[363, "operator"]], "Activation Functions": [[182, null], [204, null]], "Activation Layers": [[262, null], [280, null]], "Additional Details": [[24, "additional-details"]], "Additional Options": [[263, "additional-options"]], "Admonitions and Usage Guidelines": [[349, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[195, "advanced-example-with-dilation"]], "Advanced Features": [[440, "advanced-features"]], "Advantages": [[10, "advantages"], [12, "advantages"], [13, "advantages"], [14, "advantages"], [278, "advantages"]], "AlexNet": [[28, null]], "Algorithm": [[333, "algorithm"], [334, "algorithm"], [335, "algorithm"], [336, "algorithm"], [337, "algorithm"], [338, "algorithm"], [339, "algorithm"], [340, "algorithm"], [341, "algorithm"], [342, "algorithm"], [343, "algorithm"]], "Architecture": [[28, "architecture"], [39, "architecture"], [87, "architecture"], [88, "architecture"], [89, "architecture"], [152, "architecture"]], "Architecture Details": [[121, "architecture-details"], [122, "architecture-details"]], "Attention Functions": [[189, null], [204, null]], "Attention Layers": [[265, null], [280, null]], "Attention Mechanism": [[190, "attention-mechanism"], [240, "attention-mechanism"]], "Attributes": [[5, "attributes"], [6, "attributes"], [7, "attributes"], [8, "attributes"], [28, "attributes"], [82, "attributes"], [86, "attributes"], [112, "attributes"], [123, "attributes"], [130, "attributes"], [140, "attributes"], [145, "attributes"], [150, "attributes"], [152, "attributes"], [171, "attributes"], [173, "attributes"], [174, "attributes"], [175, "attributes"], [176, "attributes"], [177, "attributes"], [178, "attributes"], [233, "attributes"], [234, "attributes"], [235, "attributes"], [236, "attributes"], [237, "attributes"], [238, "attributes"], [239, "attributes"], [250, "attributes"], [251, "attributes"], [254, "attributes"], [255, "attributes"], [257, "attributes"], [258, "attributes"], [259, "attributes"], [261, "attributes"], [266, "attributes"], [267, "attributes"], [268, "attributes"], [270, "attributes"], [272, "attributes"], [273, "attributes"], [274, "attributes"], [275, "attributes"], [276, "attributes"], [281, "attributes"], [282, "attributes"], [283, "attributes"], [285, "attributes"], [286, "attributes"], [287, "attributes"], [288, "attributes"], [289, "attributes"], [291, "attributes"], [292, "attributes"], [293, "attributes"], [295, "attributes"], [296, "attributes"], [297, "attributes"], [298, "attributes"], [300, "attributes"], [301, "attributes"], [302, "attributes"], [303, "attributes"], [304, "attributes"], [305, "attributes"], [306, "attributes"], [307, "attributes"], [308, "attributes"], [358, "attributes"], [431, "attributes"], [432, "attributes"], [433, "attributes"], [434, "attributes"], [435, "attributes"], [436, "attributes"], [437, "attributes"], [438, "attributes"]], "Axis Swapping Rules": [[401, "axis-swapping-rules"]], "Backward Gradient Calculation": [[17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [21, "backward-gradient-calculation"], [22, "backward-gradient-calculation"], [23, "backward-gradient-calculation"], [24, "backward-gradient-calculation"], [25, "backward-gradient-calculation"], [26, "backward-gradient-calculation"], [27, "backward-gradient-calculation"], [174, "backward-gradient-calculation"], [175, "backward-gradient-calculation"], [176, "backward-gradient-calculation"], [177, "backward-gradient-calculation"], [178, "backward-gradient-calculation"], [180, "backward-gradient-calculation"], [181, "backward-gradient-calculation"], [183, "backward-gradient-calculation"], [184, "backward-gradient-calculation"], [185, "backward-gradient-calculation"], [186, "backward-gradient-calculation"], [187, "backward-gradient-calculation"], [188, "backward-gradient-calculation"], [197, "backward-gradient-calculation"], [205, "backward-gradient-calculation"], [207, "backward-gradient-calculation"], [231, "backward-gradient-calculation"], [239, "backward-gradient-calculation"], [249, "backward-gradient-calculation"], [250, "backward-gradient-calculation"], [251, "backward-gradient-calculation"], [252, "backward-gradient-calculation"], [253, "backward-gradient-calculation"], [254, "backward-gradient-calculation"], [255, "backward-gradient-calculation"], [257, "backward-gradient-calculation"], [258, "backward-gradient-calculation"], [259, "backward-gradient-calculation"], [260, "backward-gradient-calculation"], [261, "backward-gradient-calculation"], [266, "backward-gradient-calculation"], [267, "backward-gradient-calculation"], [268, "backward-gradient-calculation"], [270, "backward-gradient-calculation"], [273, "backward-gradient-calculation"], [274, "backward-gradient-calculation"], [275, "backward-gradient-calculation"], [276, "backward-gradient-calculation"], [281, "backward-gradient-calculation"], [282, "backward-gradient-calculation"], [283, "backward-gradient-calculation"], [285, "backward-gradient-calculation"], [286, "backward-gradient-calculation"], [287, "backward-gradient-calculation"], [288, "backward-gradient-calculation"], [289, "backward-gradient-calculation"], [291, "backward-gradient-calculation"], [292, "backward-gradient-calculation"], [293, "backward-gradient-calculation"], [295, "backward-gradient-calculation"], [296, "backward-gradient-calculation"], [297, "backward-gradient-calculation"], [298, "backward-gradient-calculation"], [303, "backward-gradient-calculation"], [304, "backward-gradient-calculation"], [305, "backward-gradient-calculation"], [306, "backward-gradient-calculation"], [307, "backward-gradient-calculation"], [308, "backward-gradient-calculation"], [359, "backward-gradient-calculation"], [360, "backward-gradient-calculation"], [361, "backward-gradient-calculation"], [362, "backward-gradient-calculation"], [363, "backward-gradient-calculation"], [364, "backward-gradient-calculation"], [365, "backward-gradient-calculation"], [366, "backward-gradient-calculation"], [367, "backward-gradient-calculation"], [368, "backward-gradient-calculation"], [369, "backward-gradient-calculation"], [381, "backward-gradient-calculation"], [382, "backward-gradient-calculation"], [383, "backward-gradient-calculation"], [384, "backward-gradient-calculation"], [385, "backward-gradient-calculation"], [386, "backward-gradient-calculation"], [387, "backward-gradient-calculation"], [388, "backward-gradient-calculation"], [389, "backward-gradient-calculation"], [390, "backward-gradient-calculation"], [391, "backward-gradient-calculation"], [392, "backward-gradient-calculation"], [393, "backward-gradient-calculation"], [394, "backward-gradient-calculation"], [395, "backward-gradient-calculation"], [396, "backward-gradient-calculation"], [397, "backward-gradient-calculation"], [398, "backward-gradient-calculation"], [399, "backward-gradient-calculation"], [400, "backward-gradient-calculation"], [401, "backward-gradient-calculation"], [402, "backward-gradient-calculation"], [403, "backward-gradient-calculation"], [404, "backward-gradient-calculation"], [405, "backward-gradient-calculation"], [406, "backward-gradient-calculation"], [408, "backward-gradient-calculation"], [410, "backward-gradient-calculation"], [412, "backward-gradient-calculation"], [415, "backward-gradient-calculation"], [416, "backward-gradient-calculation"], [417, "backward-gradient-calculation"], [418, "backward-gradient-calculation"], [419, "backward-gradient-calculation"], [422, "backward-gradient-calculation"], [423, "backward-gradient-calculation"], [424, "backward-gradient-calculation"], [425, "backward-gradient-calculation"], [426, "backward-gradient-calculation"], [427, "backward-gradient-calculation"], [428, "backward-gradient-calculation"]], "Base Class": [[331, null]], "Behavior": [[219, "behavior"], [220, "behavior"], [221, "behavior"], [300, "behavior"], [301, "behavior"], [302, "behavior"]], "Benefits": [[347, "benefits"]], "Binary Functions": [[380, null]], "Bottleneck Configuration": [[96, "bottleneck-configuration"], [97, "bottleneck-configuration"]], "Broadcasting Rules": [[408, "broadcasting-rules"]], "CIFAR10": [[5, null]], "CIFAR100": [[6, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [6, "class-signature"], [7, "class-signature"], [8, "class-signature"], [28, "class-signature"], [30, "class-signature"], [39, "class-signature"], [40, "class-signature"], [54, "class-signature"], [59, "class-signature"], [60, "class-signature"], [73, "class-signature"], [77, "class-signature"], [82, "class-signature"], [86, "class-signature"], [90, "class-signature"], [91, "class-signature"], [92, "class-signature"], [93, "class-signature"], [103, "class-signature"], [112, "class-signature"], [123, "class-signature"], [130, "class-signature"], [140, "class-signature"], [145, "class-signature"], [150, "class-signature"], [152, "class-signature"], [156, "class-signature"], [160, "class-signature"], [165, "class-signature"], [171, "class-signature"], [172, "class-signature"], [173, "class-signature"], [174, "class-signature"], [175, "class-signature"], [176, "class-signature"], [177, "class-signature"], [178, "class-signature"], [233, "class-signature"], [234, "class-signature"], [235, "class-signature"], [236, "class-signature"], [237, "class-signature"], [238, "class-signature"], [239, "class-signature"], [240, "class-signature"], [250, "class-signature"], [251, "class-signature"], [252, "class-signature"], [253, "class-signature"], [254, "class-signature"], [255, "class-signature"], [256, "class-signature"], [257, "class-signature"], [258, "class-signature"], [259, "class-signature"], [260, "class-signature"], [261, "class-signature"], [263, "class-signature"], [264, "class-signature"], [266, "class-signature"], [267, "class-signature"], [268, "class-signature"], [270, "class-signature"], [271, "class-signature"], [272, "class-signature"], [273, "class-signature"], [274, "class-signature"], [275, "class-signature"], [276, "class-signature"], [278, "class-signature"], [281, "class-signature"], [282, "class-signature"], [283, "class-signature"], [285, "class-signature"], [286, "class-signature"], [287, "class-signature"], [288, "class-signature"], [289, "class-signature"], [291, "class-signature"], [292, "class-signature"], [293, "class-signature"], [294, "class-signature"], [295, "class-signature"], [296, "class-signature"], [297, "class-signature"], [298, "class-signature"], [300, "class-signature"], [301, "class-signature"], [302, "class-signature"], [303, "class-signature"], [304, "class-signature"], [305, "class-signature"], [306, "class-signature"], [307, "class-signature"], [308, "class-signature"], [310, "class-signature"], [312, "class-signature"], [313, "class-signature"], [314, "class-signature"], [315, "class-signature"], [316, "class-signature"], [318, "class-signature"], [321, "class-signature"], [323, "class-signature"], [324, "class-signature"], [325, "class-signature"], [326, "class-signature"], [327, "class-signature"], [328, "class-signature"], [329, "class-signature"], [330, "class-signature"], [333, "class-signature"], [334, "class-signature"], [335, "class-signature"], [336, "class-signature"], [337, "class-signature"], [338, "class-signature"], [339, "class-signature"], [340, "class-signature"], [341, "class-signature"], [342, "class-signature"], [343, "class-signature"], [358, "class-signature"], [429, "class-signature"], [430, "class-signature"], [431, "class-signature"], [432, "class-signature"], [433, "class-signature"], [434, "class-signature"], [435, "class-signature"], [436, "class-signature"], [437, "class-signature"], [438, "class-signature"]], "CoAtNet": [[30, null]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [10, "conclusion"], [12, "conclusion"], [13, "conclusion"], [14, "conclusion"], [15, "conclusion"], [278, "conclusion"], [320, "conclusion"], [322, "conclusion"], [345, "conclusion"], [346, "conclusion"], [347, "conclusion"], [357, "conclusion"], [430, "conclusion"], [440, "conclusion"]], "Configuration": [[31, "configuration"], [32, "configuration"], [33, "configuration"], [34, "configuration"], [35, "configuration"], [36, "configuration"], [37, "configuration"], [38, "configuration"]], "Configurations": [[59, "configurations"]], "Containers": [[179, null]], "Conv-BatchNorm-ReLU": [[241, null]], "ConvNeXt": [[39, null]], "ConvNeXt_V2": [[40, null]], "ConvNets": [[85, null], [154, "convnets"]], "Convolution Functions": [[194, null], [204, null]], "Convolution Layers": [[269, null], [280, null]], "Core Components": [[15, "core-components"]], "Create a Tensor from a list": [[407, null]], "Creating a Parameter": [[173, null]], "Creating a tensor with gradient tracking": [[358, null]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[440, "custom-pipelines"]], "Defining a Custom Optimizer": [[332, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[172, null]], "Defining a custom optimizer": [[321, null]], "DenseNet": [[54, null]], "Depthwise Separable Convolution": [[241, null]], "Description": [[124, "description"], [125, "description"], [126, "description"], [127, "description"], [128, "description"], [129, "description"], [141, "description"], [142, "description"], [143, "description"], [348, "description"]], "Details": [[98, "details"], [99, "details"], [100, "details"], [101, "details"], [102, "details"]], "Differences from nn.Transformer": [[156, "differences-from-nn-transformer"]], "Dropout Functions": [[203, null], [204, null]], "Dropout Layers": [[277, null], [280, null]], "EfficientNet": [[59, null]], "EfficientNet Configurations": [[59, "id1"]], "EfficientNet_V2": [[60, null]], "Einops Functions": [[11, null]], "Einops Layers": [[279, null], [280, null]], "Embedding Process": [[229, "embedding-process"]], "Example": [[3, null], [3, null], [3, null], [10, null], [10, null], [10, null], [17, "example"], [18, "example"], [19, "example"], [21, "example"], [22, "example"], [23, "example"], [24, "example"], [25, "example"], [26, "example"], [27, "example"], [78, "example"], [79, "example"], [80, "example"], [81, "example"], [94, "example"], [95, "example"], [195, "example"], [320, null], [320, null], [320, null], [345, "example"], [347, "example"], [350, "example"], [352, "example"], [353, "example"], [354, "example"], [355, "example"], [356, "example"], [357, null], [357, null], [357, null], [370, "example"], [371, "example"], [372, "example"], [373, "example"], [374, "example"], [376, "example"], [377, "example"], [378, "example"], [379, "example"], [381, "example"], [382, "example"], [383, "example"], [384, "example"], [385, "example"], [386, "example"], [387, "example"], [388, "example"], [390, "example"], [392, "example"], [394, "example"], [395, "example"], [396, "example"], [397, "example"], [398, "example"], [399, "example"], [400, "example"], [402, "example"], [403, "example"], [404, "example"], [405, "example"], [406, "example"], [409, "example"], [410, "example"], [412, "example"], [417, "example"], [419, "example"], [422, "example"], [423, "example"], [425, "example"], [426, "example"], [427, "example"], [428, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[346, null]], "Example 2: Adding a new axis to a 2D tensor": [[346, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[346, null]], "Example Usage": [[15, "example-usage"], [74, "example-usage"], [75, "example-usage"], [76, "example-usage"], [83, "example-usage"], [84, "example-usage"], [86, "example-usage"], [87, "example-usage"], [88, "example-usage"], [89, "example-usage"], [136, "example-usage"], [137, "example-usage"], [138, "example-usage"], [139, "example-usage"], [144, "example-usage"], [232, "example-usage"], [429, "example-usage"], [430, "example-usage"], [440, "example-usage"]], "Example Use Cases": [[349, "example-use-cases"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [6, "examples"], [7, "examples"], [8, "examples"], [12, "examples"], [13, "examples"], [14, "examples"], [16, "examples"], [28, "examples"], [29, "examples"], [30, "examples"], [31, "examples"], [32, "examples"], [33, "examples"], [34, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [47, "examples"], [48, "examples"], [49, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [53, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [61, "examples"], [62, "examples"], [63, "examples"], [64, "examples"], [65, "examples"], [66, "examples"], [67, "examples"], [68, "examples"], [69, "examples"], [70, "examples"], [71, "examples"], [72, "examples"], [77, "examples"], [92, "examples"], [96, "examples"], [97, "examples"], [103, "examples"], [104, "examples"], [105, "examples"], [106, "examples"], [107, "examples"], [108, "examples"], [109, "examples"], [110, "examples"], [111, "examples"], [112, "examples"], [113, "examples"], [114, "examples"], [115, "examples"], [116, "examples"], [117, "examples"], [118, "examples"], [119, "examples"], [120, "examples"], [121, "examples"], [122, "examples"], [124, "examples"], [125, "examples"], [126, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [131, "examples"], [132, "examples"], [133, "examples"], [134, "examples"], [135, "examples"], [141, "examples"], [142, "examples"], [143, "examples"], [145, "examples"], [146, "examples"], [147, "examples"], [148, "examples"], [149, "examples"], [150, "examples"], [151, "examples"], [152, "examples"], [153, "examples"], [155, "examples"], [156, "examples"], [157, "examples"], [158, "examples"], [160, "examples"], [161, "examples"], [162, "examples"], [163, "examples"], [164, "examples"], [165, "examples"], [166, "examples"], [167, "examples"], [168, "examples"], [169, "examples"], [170, "examples"], [171, "examples"], [172, "examples"], [173, "examples"], [174, "examples"], [175, "examples"], [176, "examples"], [177, "examples"], [178, "examples"], [180, "examples"], [181, "examples"], [183, "examples"], [184, "examples"], [185, "examples"], [186, "examples"], [187, "examples"], [188, "examples"], [190, "examples"], [191, "examples"], [192, "examples"], [193, "examples"], [196, "examples"], [197, "examples"], [198, "examples"], [199, "examples"], [200, "examples"], [201, "examples"], [202, "examples"], [205, "examples"], [207, "examples"], [208, "examples"], [209, "examples"], [210, "examples"], [212, "examples"], [213, "examples"], [214, "examples"], [215, "examples"], [217, "examples"], [218, "examples"], [219, "examples"], [220, "examples"], [221, "examples"], [222, "examples"], [223, "examples"], [224, "examples"], [226, "examples"], [227, "examples"], [228, "examples"], [229, "examples"], [231, "examples"], [233, "examples"], [234, "examples"], [235, "examples"], [236, "examples"], [237, "examples"], [238, "examples"], [239, "examples"], [240, "examples"], [242, "examples"], [244, "examples"], [245, "examples"], [246, "examples"], [247, "examples"], [248, "examples"], [249, "examples"], [250, "examples"], [251, "examples"], [252, "examples"], [253, "examples"], [254, "examples"], [255, "examples"], [256, "examples"], [257, "examples"], [258, "examples"], [259, "examples"], [260, "examples"], [261, "examples"], [264, "examples"], [266, "examples"], [267, "examples"], [268, "examples"], [270, "examples"], [271, "examples"], [272, "examples"], [273, "examples"], [274, "examples"], [275, "examples"], [276, "examples"], [278, "examples"], [281, "examples"], [282, "examples"], [283, "examples"], [285, "examples"], [286, "examples"], [287, "examples"], [288, "examples"], [289, "examples"], [291, "examples"], [292, "examples"], [293, "examples"], [294, "examples"], [295, "examples"], [296, "examples"], [297, "examples"], [298, "examples"], [300, "examples"], [301, "examples"], [302, "examples"], [303, "examples"], [304, "examples"], [305, "examples"], [306, "examples"], [307, "examples"], [308, "examples"], [310, "examples"], [318, "examples"], [321, "examples"], [332, "examples"], [333, "examples"], [334, "examples"], [335, "examples"], [336, "examples"], [337, "examples"], [338, "examples"], [339, "examples"], [340, "examples"], [341, "examples"], [342, "examples"], [343, "examples"], [348, "examples"], [358, "examples"], [359, "examples"], [360, "examples"], [361, "examples"], [362, "examples"], [364, "examples"], [365, "examples"], [366, "examples"], [367, "examples"], [368, "examples"], [369, "examples"], [375, "examples"], [389, "examples"], [391, "examples"], [393, "examples"], [401, "examples"], [407, "examples"], [408, "examples"], [411, "examples"], [414, "examples"], [415, "examples"], [416, "examples"], [418, "examples"], [420, "examples"], [421, "examples"], [424, "examples"], [431, "examples"], [432, "examples"], [433, "examples"], [434, "examples"], [435, "examples"], [436, "examples"], [437, "examples"], [438, "examples"]], "FashionMNIST": [[7, null]], "Features": [[16, "features"]], "Forward Calculation": [[17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [21, "forward-calculation"], [22, "forward-calculation"], [23, "forward-calculation"], [24, "forward-calculation"], [25, "forward-calculation"], [26, "forward-calculation"], [27, "forward-calculation"], [112, "forward-calculation"], [123, "forward-calculation"], [130, "forward-calculation"], [140, "forward-calculation"], [174, "forward-calculation"], [175, "forward-calculation"], [176, "forward-calculation"], [177, "forward-calculation"], [178, "forward-calculation"], [180, "forward-calculation"], [181, "forward-calculation"], [183, "forward-calculation"], [184, "forward-calculation"], [185, "forward-calculation"], [186, "forward-calculation"], [187, "forward-calculation"], [188, "forward-calculation"], [195, "forward-calculation"], [198, "forward-calculation"], [205, "forward-calculation"], [207, "forward-calculation"], [219, "forward-calculation"], [220, "forward-calculation"], [221, "forward-calculation"], [231, "forward-calculation"], [233, "forward-calculation"], [234, "forward-calculation"], [235, "forward-calculation"], [236, "forward-calculation"], [237, "forward-calculation"], [238, "forward-calculation"], [239, "forward-calculation"], [240, "forward-calculation"], [244, "forward-calculation"], [245, "forward-calculation"], [248, "forward-calculation"], [249, "forward-calculation"], [250, "forward-calculation"], [251, "forward-calculation"], [252, "forward-calculation"], [253, "forward-calculation"], [254, "forward-calculation"], [255, "forward-calculation"], [256, "forward-calculation"], [257, "forward-calculation"], [258, "forward-calculation"], [259, "forward-calculation"], [260, "forward-calculation"], [261, "forward-calculation"], [264, "forward-calculation"], [266, "forward-calculation"], [267, "forward-calculation"], [268, "forward-calculation"], [270, "forward-calculation"], [271, "forward-calculation"], [272, "forward-calculation"], [273, "forward-calculation"], [274, "forward-calculation"], [275, "forward-calculation"], [276, "forward-calculation"], [281, "forward-calculation"], [282, "forward-calculation"], [283, "forward-calculation"], [285, "forward-calculation"], [286, "forward-calculation"], [287, "forward-calculation"], [288, "forward-calculation"], [289, "forward-calculation"], [291, "forward-calculation"], [292, "forward-calculation"], [293, "forward-calculation"], [294, "forward-calculation"], [295, "forward-calculation"], [296, "forward-calculation"], [297, "forward-calculation"], [298, "forward-calculation"], [300, "forward-calculation"], [301, "forward-calculation"], [302, "forward-calculation"], [303, "forward-calculation"], [304, "forward-calculation"], [305, "forward-calculation"], [306, "forward-calculation"], [307, "forward-calculation"], [308, "forward-calculation"], [359, "forward-calculation"], [360, "forward-calculation"], [361, "forward-calculation"], [362, "forward-calculation"], [363, "forward-calculation"], [364, "forward-calculation"], [365, "forward-calculation"], [366, "forward-calculation"], [367, "forward-calculation"], [368, "forward-calculation"], [369, "forward-calculation"], [381, "forward-calculation"], [382, "forward-calculation"], [383, "forward-calculation"], [384, "forward-calculation"], [385, "forward-calculation"], [386, "forward-calculation"], [387, "forward-calculation"], [388, "forward-calculation"], [389, "forward-calculation"], [390, "forward-calculation"], [391, "forward-calculation"], [392, "forward-calculation"], [393, "forward-calculation"], [394, "forward-calculation"], [395, "forward-calculation"], [396, "forward-calculation"], [397, "forward-calculation"], [398, "forward-calculation"], [399, "forward-calculation"], [400, "forward-calculation"], [402, "forward-calculation"], [403, "forward-calculation"], [404, "forward-calculation"], [405, "forward-calculation"], [406, "forward-calculation"], [410, "forward-calculation"], [412, "forward-calculation"], [415, "forward-calculation"], [416, "forward-calculation"], [417, "forward-calculation"], [418, "forward-calculation"], [419, "forward-calculation"], [422, "forward-calculation"], [423, "forward-calculation"], [424, "forward-calculation"], [425, "forward-calculation"], [426, "forward-calculation"], [427, "forward-calculation"], [428, "forward-calculation"], [431, "forward-calculation"], [432, "forward-calculation"], [433, "forward-calculation"], [434, "forward-calculation"], [435, "forward-calculation"], [436, "forward-calculation"], [437, "forward-calculation"], [438, "forward-calculation"]], "Forward Method": [[312, "forward-method"], [313, "forward-method"], [314, "forward-method"], [315, "forward-method"], [316, "forward-method"]], "Forward Pass": [[150, "forward-pass"]], "Function Signature": [[12, "function-signature"], [13, "function-signature"], [14, "function-signature"], [17, "function-signature"], [18, "function-signature"], [19, "function-signature"], [21, "function-signature"], [22, "function-signature"], [23, "function-signature"], [24, "function-signature"], [25, "function-signature"], [26, "function-signature"], [27, "function-signature"], [29, "function-signature"], [31, "function-signature"], [32, "function-signature"], [33, "function-signature"], [34, "function-signature"], [35, "function-signature"], [36, "function-signature"], [37, "function-signature"], [38, "function-signature"], [41, "function-signature"], [42, "function-signature"], [43, "function-signature"], [44, "function-signature"], [45, "function-signature"], [46, "function-signature"], [47, "function-signature"], [48, "function-signature"], [49, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [53, "function-signature"], [55, "function-signature"], [56, "function-signature"], [57, "function-signature"], [58, "function-signature"], [61, "function-signature"], [62, "function-signature"], [63, "function-signature"], [64, "function-signature"], [65, "function-signature"], [66, "function-signature"], [67, "function-signature"], [68, "function-signature"], [69, "function-signature"], [70, "function-signature"], [71, "function-signature"], [72, "function-signature"], [74, "function-signature"], [75, "function-signature"], [76, "function-signature"], [78, "function-signature"], [79, "function-signature"], [80, "function-signature"], [81, "function-signature"], [83, "function-signature"], [84, "function-signature"], [87, "function-signature"], [88, "function-signature"], [89, "function-signature"], [94, "function-signature"], [95, "function-signature"], [96, "function-signature"], [97, "function-signature"], [98, "function-signature"], [99, "function-signature"], [100, "function-signature"], [101, "function-signature"], [102, "function-signature"], [104, "function-signature"], [105, "function-signature"], [106, "function-signature"], [107, "function-signature"], [108, "function-signature"], [109, "function-signature"], [110, "function-signature"], [111, "function-signature"], [113, "function-signature"], [114, "function-signature"], [115, "function-signature"], [116, "function-signature"], [117, "function-signature"], [118, "function-signature"], [119, "function-signature"], [120, "function-signature"], [121, "function-signature"], [122, "function-signature"], [124, "function-signature"], [125, "function-signature"], [126, "function-signature"], [127, "function-signature"], [128, "function-signature"], [129, "function-signature"], [131, "function-signature"], [132, "function-signature"], [133, "function-signature"], [134, "function-signature"], [135, "function-signature"], [136, "function-signature"], [137, "function-signature"], [138, "function-signature"], [139, "function-signature"], [141, "function-signature"], [142, "function-signature"], [143, "function-signature"], [144, "function-signature"], [146, "function-signature"], [147, "function-signature"], [148, "function-signature"], [149, "function-signature"], [151, "function-signature"], [153, "function-signature"], [155, "function-signature"], [157, "function-signature"], [158, "function-signature"], [161, "function-signature"], [162, "function-signature"], [163, "function-signature"], [164, "function-signature"], [166, "function-signature"], [167, "function-signature"], [168, "function-signature"], [169, "function-signature"], [170, "function-signature"], [180, "function-signature"], [181, "function-signature"], [183, "function-signature"], [184, "function-signature"], [185, "function-signature"], [186, "function-signature"], [187, "function-signature"], [188, "function-signature"], [190, "function-signature"], [191, "function-signature"], [192, "function-signature"], [193, "function-signature"], [195, "function-signature"], [196, "function-signature"], [197, "function-signature"], [198, "function-signature"], [199, "function-signature"], [200, "function-signature"], [201, "function-signature"], [202, "function-signature"], [205, "function-signature"], [207, "function-signature"], [208, "function-signature"], [209, "function-signature"], [210, "function-signature"], [212, "function-signature"], [213, "function-signature"], [214, "function-signature"], [215, "function-signature"], [217, "function-signature"], [218, "function-signature"], [219, "function-signature"], [220, "function-signature"], [221, "function-signature"], [222, "function-signature"], [223, "function-signature"], [224, "function-signature"], [226, "function-signature"], [227, "function-signature"], [228, "function-signature"], [229, "function-signature"], [231, "function-signature"], [232, "function-signature"], [242, "function-signature"], [244, "function-signature"], [245, "function-signature"], [246, "function-signature"], [247, "function-signature"], [248, "function-signature"], [249, "function-signature"], [345, "function-signature"], [347, "function-signature"], [348, "function-signature"], [350, "function-signature"], [352, "function-signature"], [353, "function-signature"], [354, "function-signature"], [355, "function-signature"], [356, "function-signature"], [359, "function-signature"], [360, "function-signature"], [361, "function-signature"], [362, "function-signature"], [363, "function-signature"], [364, "function-signature"], [365, "function-signature"], [366, "function-signature"], [367, "function-signature"], [368, "function-signature"], [369, "function-signature"], [370, "function-signature"], [371, "function-signature"], [372, "function-signature"], [373, "function-signature"], [374, "function-signature"], [375, "function-signature"], [376, "function-signature"], [377, "function-signature"], [378, "function-signature"], [379, "function-signature"], [381, "function-signature"], [382, "function-signature"], [383, "function-signature"], [384, "function-signature"], [385, "function-signature"], [386, "function-signature"], [387, "function-signature"], [388, "function-signature"], [389, "function-signature"], [390, "function-signature"], [391, "function-signature"], [392, "function-signature"], [393, "function-signature"], [394, "function-signature"], [395, "function-signature"], [396, "function-signature"], [397, "function-signature"], [398, "function-signature"], [399, "function-signature"], [400, "function-signature"], [401, "function-signature"], [402, "function-signature"], [403, "function-signature"], [404, "function-signature"], [405, "function-signature"], [406, "function-signature"], [407, "function-signature"], [408, "function-signature"], [409, "function-signature"], [410, "function-signature"], [411, "function-signature"], [412, "function-signature"], [414, "function-signature"], [415, "function-signature"], [416, "function-signature"], [417, "function-signature"], [418, "function-signature"], [419, "function-signature"], [420, "function-signature"], [421, "function-signature"], [422, "function-signature"], [423, "function-signature"], [424, "function-signature"], [425, "function-signature"], [426, "function-signature"], [427, "function-signature"], [428, "function-signature"]], "Fused Layers": [[241, null]], "Future Work": [[4, "future-work"]], "Getting Started": [[332, "getting-started"]], "Gradient Computation": [[409, "gradient-computation"], [414, "gradient-computation"], [420, "gradient-computation"]], "How It Works": [[345, "how-it-works"], [347, "how-it-works"]], "Hybrid Architecture": [[30, "hybrid-architecture"]], "Hyperparameter Configuration": [[110, "hyperparameter-configuration"], [111, "hyperparameter-configuration"]], "Image Datasets": [[9, null]], "Image Transformations": [[439, null]], "Inception": [[73, null]], "InceptionNeXt": [[77, null]], "InceptionResNet": [[82, null]], "Indexing and slicing": [[358, null]], "Inspecting Optimizer State": [[332, null], [333, null], [334, null], [335, null], [336, null], [337, null], [338, null], [339, null], [340, null], [341, null], [342, null], [343, null]], "Integration with lucid": [[3, "integration-with-lucid"], [320, "integration-with-lucid"], [357, "integration-with-lucid"], [440, "integration-with-lucid"]], "Iterating through a tensor": [[358, null]], "Key Components": [[3, "key-components"], [320, "key-components"]], "Key Features": [[4, "key-features"], [15, "key-features"], [136, "key-features"], [137, "key-features"], [138, "key-features"], [139, "key-features"], [144, "key-features"], [332, "key-features"], [357, "key-features"]], "Key Transformations": [[440, "key-transformations"]], "LR Schedulers": [[331, null]], "Layer Configuration": [[104, "layer-configuration"], [105, "layer-configuration"], [106, "layer-configuration"], [107, "layer-configuration"], [108, "layer-configuration"], [109, "layer-configuration"]], "LeNet": [[86, null]], "Learn More": [[357, null]], "Limitations": [[15, "limitations"]], "Linear Algebra Operations": [[20, null]], "Linear Functions": [[204, null], [206, null]], "Linear Layers": [[280, null], [284, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[204, null], [211, null]], "Loss Layers": [[280, null], [290, null]], "Lucid": [[15, null]], "MNIST": [[8, null]], "Mathematical Definition": [[12, "mathematical-definition"], [13, "mathematical-definition"], [14, "mathematical-definition"], [278, "mathematical-definition"]], "Mathematical Details": [[263, "mathematical-details"], [312, "mathematical-details"], [313, "mathematical-details"], [314, "mathematical-details"], [315, "mathematical-details"], [316, "mathematical-details"]], "Mathematical Expression": [[215, "mathematical-expression"], [421, "mathematical-expression"]], "Mathematical Formula": [[323, "mathematical-formula"], [324, "mathematical-formula"], [325, "mathematical-formula"], [327, "mathematical-formula"], [328, "mathematical-formula"], [329, "mathematical-formula"], [330, "mathematical-formula"]], "Matrix Multiplication Rules": [[363, "matrix-multiplication-rules"]], "Metadata Captured": [[348, "metadata-captured"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [6, "methods"], [7, "methods"], [8, "methods"], [82, "methods"], [86, "methods"], [145, "methods"], [172, "methods"], [173, "methods"], [321, "methods"], [323, "methods"], [324, "methods"], [325, "methods"], [326, "methods"], [327, "methods"], [328, "methods"], [329, "methods"], [330, "methods"], [358, "methods"]], "MobileNet": [[90, null]], "MobileNet_V2": [[91, null]], "MobileNet_V3": [[92, null]], "MobileNet_V4": [[93, null]], "Modules": [[280, null]], "Normalization Functions": [[204, null], [216, null]], "Normalization Layers": [[280, null], [299, null]], "Notes": [[15, "notes"]], "Optimizers": [[344, null]], "Organizing Models": [[320, "organizing-models"]], "Overview": [[3, "overview"], [4, "overview"], [10, "overview"], [15, "overview"], [73, "overview"], [74, "overview"], [75, "overview"], [76, "overview"], [82, "overview"], [83, "overview"], [84, "overview"], [86, "overview"], [87, "overview"], [88, "overview"], [89, "overview"], [90, "overview"], [91, "overview"], [92, "overview"], [93, "overview"], [98, "overview"], [99, "overview"], [100, "overview"], [101, "overview"], [102, "overview"], [113, "overview"], [114, "overview"], [115, "overview"], [116, "overview"], [117, "overview"], [118, "overview"], [119, "overview"], [120, "overview"], [131, "overview"], [132, "overview"], [133, "overview"], [134, "overview"], [135, "overview"], [263, "overview"], [312, "overview"], [313, "overview"], [314, "overview"], [315, "overview"], [316, "overview"], [320, "overview"], [322, "overview"], [332, "overview"], [357, "overview"], [440, "overview"]], "Parameters": [[1, "parameters"], [5, "parameters"], [6, "parameters"], [7, "parameters"], [8, "parameters"], [12, "parameters"], [13, "parameters"], [14, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [84, "parameters"], [86, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [104, "parameters"], [105, "parameters"], [106, "parameters"], [107, "parameters"], [108, "parameters"], [109, "parameters"], [110, "parameters"], [111, "parameters"], [112, "parameters"], [113, "parameters"], [114, "parameters"], [115, "parameters"], [116, "parameters"], [117, "parameters"], [118, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [122, "parameters"], [123, "parameters"], [124, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [155, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [163, "parameters"], [164, "parameters"], [165, "parameters"], [166, "parameters"], [167, "parameters"], [168, "parameters"], [169, "parameters"], [170, "parameters"], [171, "parameters"], [173, "parameters"], [174, "parameters"], [175, "parameters"], [176, "parameters"], [177, "parameters"], [178, "parameters"], [180, "parameters"], [181, "parameters"], [183, "parameters"], [184, "parameters"], [185, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [190, "parameters"], [191, "parameters"], [192, "parameters"], [193, "parameters"], [195, "parameters"], [196, "parameters"], [197, "parameters"], [198, "parameters"], [199, "parameters"], [200, "parameters"], [201, "parameters"], [202, "parameters"], [205, "parameters"], [207, "parameters"], [208, "parameters"], [209, "parameters"], [210, "parameters"], [212, "parameters"], [213, "parameters"], [214, "parameters"], [215, "parameters"], [217, "parameters"], [218, "parameters"], [219, "parameters"], [220, "parameters"], [221, "parameters"], [222, "parameters"], [223, "parameters"], [224, "parameters"], [226, "parameters"], [227, "parameters"], [228, "parameters"], [229, "parameters"], [231, "parameters"], [232, "parameters"], [233, "parameters"], [234, "parameters"], [235, "parameters"], [236, "parameters"], [237, "parameters"], [238, "parameters"], [239, "parameters"], [240, "parameters"], [242, "parameters"], [244, "parameters"], [245, "parameters"], [246, "parameters"], [247, "parameters"], [248, "parameters"], [249, "parameters"], [250, "parameters"], [251, "parameters"], [254, "parameters"], [255, "parameters"], [257, "parameters"], [258, "parameters"], [259, "parameters"], [261, "parameters"], [263, "parameters"], [264, "parameters"], [266, "parameters"], [267, "parameters"], [268, "parameters"], [270, "parameters"], [271, "parameters"], [272, "parameters"], [273, "parameters"], [274, "parameters"], [275, "parameters"], [276, "parameters"], [278, "parameters"], [281, "parameters"], [282, "parameters"], [283, "parameters"], [285, "parameters"], [286, "parameters"], [287, "parameters"], [288, "parameters"], [289, "parameters"], [291, "parameters"], [292, "parameters"], [293, "parameters"], [294, "parameters"], [295, "parameters"], [296, "parameters"], [297, "parameters"], [298, "parameters"], [300, "parameters"], [301, "parameters"], [302, "parameters"], [303, "parameters"], [304, "parameters"], [305, "parameters"], [306, "parameters"], [307, "parameters"], [308, "parameters"], [310, "parameters"], [312, "parameters"], [313, "parameters"], [314, "parameters"], [315, "parameters"], [316, "parameters"], [318, "parameters"], [323, "parameters"], [324, "parameters"], [325, "parameters"], [326, "parameters"], [327, "parameters"], [328, "parameters"], [329, "parameters"], [330, "parameters"], [333, "parameters"], [334, "parameters"], [335, "parameters"], [336, "parameters"], [337, "parameters"], [338, "parameters"], [339, "parameters"], [340, "parameters"], [341, "parameters"], [342, "parameters"], [343, "parameters"], [347, "parameters"], [348, "parameters"], [350, "parameters"], [352, "parameters"], [353, "parameters"], [354, "parameters"], [355, "parameters"], [356, "parameters"], [358, "parameters"], [359, "parameters"], [360, "parameters"], [361, "parameters"], [362, "parameters"], [363, "parameters"], [364, "parameters"], [365, "parameters"], [366, "parameters"], [367, "parameters"], [368, "parameters"], [369, "parameters"], [370, "parameters"], [371, "parameters"], [372, "parameters"], [373, "parameters"], [374, "parameters"], [375, "parameters"], [376, "parameters"], [377, "parameters"], [378, "parameters"], [379, "parameters"], [381, "parameters"], [382, "parameters"], [383, "parameters"], [384, "parameters"], [385, "parameters"], [386, "parameters"], [387, "parameters"], [388, "parameters"], [389, "parameters"], [390, "parameters"], [391, "parameters"], [392, "parameters"], [393, "parameters"], [394, "parameters"], [395, "parameters"], [396, "parameters"], [397, "parameters"], [398, "parameters"], [399, "parameters"], [400, "parameters"], [401, "parameters"], [402, "parameters"], [403, "parameters"], [404, "parameters"], [405, "parameters"], [406, "parameters"], [407, "parameters"], [408, "parameters"], [409, "parameters"], [410, "parameters"], [411, "parameters"], [412, "parameters"], [414, "parameters"], [415, "parameters"], [416, "parameters"], [417, "parameters"], [418, "parameters"], [419, "parameters"], [420, "parameters"], [421, "parameters"], [422, "parameters"], [423, "parameters"], [424, "parameters"], [425, "parameters"], [426, "parameters"], [427, "parameters"], [428, "parameters"], [429, "parameters"], [430, "parameters"], [431, "parameters"], [432, "parameters"], [433, "parameters"], [434, "parameters"], [435, "parameters"], [436, "parameters"], [437, "parameters"], [438, "parameters"]], "Performing backpropagation": [[358, null]], "Pooling Functions": [[204, null], [225, null]], "Pooling Layers": [[280, null], [309, null]], "Potential Pitfalls": [[345, "potential-pitfalls"], [347, "potential-pitfalls"]], "Properties": [[173, "properties"], [358, "properties"]], "Raises": [[17, "raises"], [18, "raises"], [19, "raises"], [21, "raises"], [22, "raises"], [23, "raises"], [24, "raises"], [25, "raises"], [26, "raises"], [27, "raises"]], "Random Number Generations": [[351, null]], "References": [[5, "references"], [6, "references"], [7, "references"], [8, "references"], [239, "references"], [332, "references"]], "Regularization": [[197, "regularization"]], "ResNeSt": [[103, null]], "ResNeXt": [[123, null]], "ResNet": [[112, null]], "Return Values": [[421, "return-values"]], "Returns": [[12, "returns"], [13, "returns"], [14, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [21, "returns"], [22, "returns"], [23, "returns"], [24, "returns"], [25, "returns"], [26, "returns"], [27, "returns"], [29, "returns"], [41, "returns"], [42, "returns"], [43, "returns"], [44, "returns"], [45, "returns"], [46, "returns"], [47, "returns"], [48, "returns"], [49, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [53, "returns"], [55, "returns"], [56, "returns"], [57, "returns"], [58, "returns"], [61, "returns"], [62, "returns"], [63, "returns"], [64, "returns"], [65, "returns"], [66, "returns"], [67, "returns"], [68, "returns"], [69, "returns"], [70, "returns"], [71, "returns"], [72, "returns"], [74, "returns"], [75, "returns"], [76, "returns"], [78, "returns"], [79, "returns"], [80, "returns"], [81, "returns"], [83, "returns"], [84, "returns"], [87, "returns"], [88, "returns"], [89, "returns"], [94, "returns"], [95, "returns"], [96, "returns"], [97, "returns"], [104, "returns"], [105, "returns"], [106, "returns"], [107, "returns"], [108, "returns"], [109, "returns"], [110, "returns"], [111, "returns"], [113, "returns"], [114, "returns"], [115, "returns"], [116, "returns"], [117, "returns"], [118, "returns"], [119, "returns"], [120, "returns"], [121, "returns"], [122, "returns"], [124, "returns"], [125, "returns"], [126, "returns"], [127, "returns"], [128, "returns"], [129, "returns"], [131, "returns"], [132, "returns"], [133, "returns"], [134, "returns"], [135, "returns"], [136, "returns"], [137, "returns"], [138, "returns"], [139, "returns"], [141, "returns"], [142, "returns"], [143, "returns"], [144, "returns"], [146, "returns"], [147, "returns"], [148, "returns"], [149, "returns"], [151, "returns"], [153, "returns"], [155, "returns"], [157, "returns"], [158, "returns"], [161, "returns"], [162, "returns"], [163, "returns"], [164, "returns"], [166, "returns"], [167, "returns"], [168, "returns"], [169, "returns"], [170, "returns"], [180, "returns"], [181, "returns"], [183, "returns"], [184, "returns"], [185, "returns"], [186, "returns"], [187, "returns"], [188, "returns"], [190, "returns"], [191, "returns"], [192, "returns"], [193, "returns"], [195, "returns"], [196, "returns"], [197, "returns"], [198, "returns"], [199, "returns"], [200, "returns"], [201, "returns"], [202, "returns"], [205, "returns"], [207, "returns"], [208, "returns"], [209, "returns"], [210, "returns"], [212, "returns"], [213, "returns"], [214, "returns"], [215, "returns"], [217, "returns"], [218, "returns"], [219, "returns"], [220, "returns"], [221, "returns"], [222, "returns"], [223, "returns"], [224, "returns"], [226, "returns"], [227, "returns"], [228, "returns"], [229, "returns"], [231, "returns"], [232, "returns"], [240, "returns"], [242, "returns"], [244, "returns"], [245, "returns"], [246, "returns"], [247, "returns"], [248, "returns"], [249, "returns"], [256, "returns"], [278, "returns"], [310, "returns"], [345, "returns"], [347, "returns"], [350, "returns"], [352, "returns"], [353, "returns"], [354, "returns"], [355, "returns"], [356, "returns"], [359, "returns"], [360, "returns"], [361, "returns"], [362, "returns"], [363, "returns"], [364, "returns"], [365, "returns"], [366, "returns"], [367, "returns"], [368, "returns"], [369, "returns"], [370, "returns"], [371, "returns"], [372, "returns"], [373, "returns"], [374, "returns"], [375, "returns"], [376, "returns"], [377, "returns"], [378, "returns"], [379, "returns"], [381, "returns"], [382, "returns"], [383, "returns"], [384, "returns"], [385, "returns"], [386, "returns"], [387, "returns"], [388, "returns"], [389, "returns"], [390, "returns"], [391, "returns"], [392, "returns"], [393, "returns"], [394, "returns"], [395, "returns"], [396, "returns"], [397, "returns"], [398, "returns"], [399, "returns"], [400, "returns"], [401, "returns"], [402, "returns"], [403, "returns"], [404, "returns"], [405, "returns"], [406, "returns"], [407, "returns"], [408, "returns"], [409, "returns"], [410, "returns"], [411, "returns"], [412, "returns"], [414, "returns"], [415, "returns"], [416, "returns"], [417, "returns"], [418, "returns"], [419, "returns"], [420, "returns"], [422, "returns"], [423, "returns"], [424, "returns"], [425, "returns"], [426, "returns"], [427, "returns"], [428, "returns"]], "SENet": [[130, null]], "SKNet": [[140, null]], "Schedulers": [[331, null]], "See Also": [[332, "see-also"]], "Selective Kernel": [[241, null]], "Sparse Layers": [[280, null], [311, null]], "Squeeze-and-Excitation": [[241, null]], "Summary Table": [[155, "summary-table"]], "SwinTransformer": [[160, null]], "Tensor Generating Functions": [[380, null]], "Tensor Operations": [[380, null]], "Tensor Utilites": [[413, null]], "Transformer": [[156, null]], "Transformer Layers": [[280, null], [317, null]], "Transformers": [[154, "transformers"], [159, null]], "Type Definitions": [[349, "type-definitions"]], "Unary Functions": [[380, null]], "Usage": [[4, "usage"], [69, "usage"], [70, "usage"], [71, "usage"], [72, "usage"], [171, "usage"], [232, "usage"], [322, "usage"], [345, "usage"], [346, "usage"], [347, "usage"], [415, "usage"], [429, "usage"], [430, "usage"], [440, "usage"]], "Usage Example": [[98, "usage-example"], [99, "usage-example"], [100, "usage-example"], [101, "usage-example"], [102, "usage-example"], [263, "usage-example"], [312, "usage-example"], [313, "usage-example"], [314, "usage-example"], [315, "usage-example"], [316, "usage-example"], [323, "usage-example"], [324, "usage-example"], [325, "usage-example"], [326, "usage-example"], [327, "usage-example"], [328, "usage-example"], [329, "usage-example"], [330, "usage-example"]], "Use another Tensor as input": [[407, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using the ASGD Optimizer": [[333, null]], "Using the Adadelta Optimizer": [[334, null]], "Using the Adagrad Optimizer": [[335, null]], "Using the Adam Optimizer": [[336, null]], "Using the AdamW Optimizer": [[337, null]], "Using the Adamax Optimizer": [[338, null]], "Using the NAdam Optimizer": [[339, null]], "Using the RAdam Optimizer": [[340, null]], "Using the RMSprop Optimizer": [[341, null]], "Using the Rprop Optimizer": [[342, null]], "Using the SGD Optimizer": [[343, null]], "Utility Functions": [[204, null], [230, null]], "VGGNet": [[145, null]], "ViT": [[165, null]], "Vision Layers": [[280, null], [319, null]], "Weight Initializations": [[243, null]], "Why Use Type Aliases?": [[349, null]], "Xception": [[150, null]], "ZFNet": [[152, null]], "alexnet": [[29, null]], "coatnet_0": [[31, null]], "coatnet_1": [[32, null]], "coatnet_2": [[33, null]], "coatnet_3": [[34, null]], "coatnet_4": [[35, null]], "coatnet_5": [[36, null]], "coatnet_6": [[37, null]], "coatnet_7": [[38, null]], "convnext_base": [[41, null]], "convnext_large": [[42, null]], "convnext_small": [[43, null]], "convnext_tiny": [[44, null]], "convnext_v2_atto": [[45, null]], "convnext_v2_base": [[46, null]], "convnext_v2_femto": [[47, null]], "convnext_v2_huge": [[48, null]], "convnext_v2_large": [[49, null]], "convnext_v2_nano": [[50, null]], "convnext_v2_pico": [[51, null]], "convnext_v2_tiny": [[52, null]], "convnext_xlarge": [[53, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "densenet_121": [[55, null]], "densenet_169": [[56, null]], "densenet_201": [[57, null]], "densenet_264": [[58, null]], "efficientnet_b0": [[61, null]], "efficientnet_b1": [[62, null]], "efficientnet_b2": [[63, null]], "efficientnet_b3": [[64, null]], "efficientnet_b4": [[65, null]], "efficientnet_b5": [[66, null]], "efficientnet_b6": [[67, null]], "efficientnet_b7": [[68, null]], "efficientnet_v2_l": [[69, null]], "efficientnet_v2_m": [[70, null]], "efficientnet_v2_s": [[71, null]], "efficientnet_v2_xl": [[72, null]], "inception_next_atto": [[78, null]], "inception_next_base": [[79, null]], "inception_next_small": [[80, null]], "inception_next_tiny": [[81, null]], "inception_resnet_v1": [[83, null]], "inception_resnet_v2": [[84, null]], "inception_v1": [[74, null]], "inception_v3": [[75, null]], "inception_v4": [[76, null]], "lenet_1": [[87, null]], "lenet_4": [[88, null]], "lenet_5": [[89, null]], "lr_scheduler.CosineAnnealingLR": [[323, null]], "lr_scheduler.CyclicLR": [[324, null]], "lr_scheduler.ExponentialLR": [[325, null]], "lr_scheduler.LRScheduler": [[326, null]], "lr_scheduler.LambdaLR": [[327, null]], "lr_scheduler.MultiStepLR": [[328, null]], "lr_scheduler.ReduceLROnPlateau": [[329, null]], "lr_scheduler.StepLR": [[330, null]], "lucid.Tensor": [[358, null]], "lucid.abs": [[381, null]], "lucid.add": [[359, null]], "lucid.arange": [[370, null]], "lucid.arccos": [[382, null]], "lucid.arcsin": [[383, null]], "lucid.arctan": [[384, null]], "lucid.broadcast_to": [[408, null]], "lucid.chunk": [[409, null]], "lucid.clip": [[385, null]], "lucid.concatenate": [[410, null]], "lucid.cos": [[386, null]], "lucid.cosh": [[387, null]], "lucid.cube": [[388, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[371, null]], "lucid.div": [[360, null]], "lucid.dot": [[361, null]], "lucid.einops": [[10, null]], "lucid.einops.rearrange": [[12, null]], "lucid.einops.reduce": [[13, null]], "lucid.einops.repeat": [[14, null]], "lucid.empty": [[372, null]], "lucid.empty_like": [[373, null]], "lucid.exp": [[389, null]], "lucid.eye": [[374, null]], "lucid.flatten": [[411, null]], "lucid.grad_enabled": [[345, null]], "lucid.hstack": [[412, null]], "lucid.inner": [[362, null]], "lucid.linalg": [[16, null]], "lucid.linalg.cholesky": [[17, null]], "lucid.linalg.det": [[18, null]], "lucid.linalg.eig": [[19, null]], "lucid.linalg.inv": [[21, null]], "lucid.linalg.matrix_power": [[22, null]], "lucid.linalg.norm": [[23, null]], "lucid.linalg.pinv": [[24, null]], "lucid.linalg.qr": [[25, null]], "lucid.linalg.solve": [[26, null]], "lucid.linalg.svd": [[27, null]], "lucid.linspace": [[375, null]], "lucid.log": [[390, null]], "lucid.masked_fill": [[414, null]], "lucid.matmul": [[363, null]], "lucid.max": [[391, null]], "lucid.maximum": [[364, null]], "lucid.mean": [[392, null]], "lucid.meshgrid": [[415, null]], "lucid.min": [[393, null]], "lucid.minimum": [[365, null]], "lucid.models": [[154, null]], "lucid.mul": [[366, null]], "lucid.newaxis": [[346, null]], "lucid.nn": [[320, null]], "lucid.nn.functional": [[204, null]], "lucid.no_grad": [[347, null]], "lucid.ones": [[376, null]], "lucid.ones_like": [[377, null]], "lucid.optim": [[332, null]], "lucid.outer": [[367, null]], "lucid.pad": [[416, null]], "lucid.power": [[368, null]], "lucid.random": [[357, null]], "lucid.random.bernoulli": [[350, null]], "lucid.random.rand": [[352, null]], "lucid.random.randint": [[353, null]], "lucid.random.randn": [[354, null]], "lucid.random.seed": [[355, null]], "lucid.random.uniform": [[356, null]], "lucid.ravel": [[417, null]], "lucid.reciprocal": [[394, null]], "lucid.register_model": [[348, null]], "lucid.repeat": [[418, null]], "lucid.reshape": [[419, null]], "lucid.roll": [[420, null]], "lucid.sign": [[395, null]], "lucid.sin": [[396, null]], "lucid.sinh": [[397, null]], "lucid.split": [[421, null]], "lucid.sqrt": [[398, null]], "lucid.square": [[399, null]], "lucid.squeeze": [[422, null]], "lucid.stack": [[423, null]], "lucid.sub": [[369, null]], "lucid.sum": [[400, null]], "lucid.swapaxes": [[401, null]], "lucid.tan": [[402, null]], "lucid.tanh": [[403, null]], "lucid.tensor": [[407, null]], "lucid.tile": [[424, null]], "lucid.trace": [[404, null]], "lucid.transforms": [[440, null]], "lucid.transpose": [[405, null]], "lucid.tril": [[425, null]], "lucid.triu": [[426, null]], "lucid.types": [[349, null]], "lucid.unsqueeze": [[427, null]], "lucid.var": [[406, null]], "lucid.vstack": [[428, null]], "lucid.zeros": [[378, null]], "lucid.zeros_like": [[379, null]], "mobilenet": [[94, null]], "mobilenet_v2": [[95, null]], "mobilenet_v3_large": [[96, null]], "mobilenet_v3_small": [[97, null]], "mobilenet_v4_conv_large": [[98, null]], "mobilenet_v4_conv_medium": [[99, null]], "mobilenet_v4_conv_small": [[100, null]], "mobilenet_v4_hybrid_large": [[101, null]], "mobilenet_v4_hybrid_medium": [[102, null]], "models.summarize": [[155, null]], "nn.AdaptiveAvgPool1d": [[300, null]], "nn.AdaptiveAvgPool2d": [[301, null]], "nn.AdaptiveAvgPool3d": [[302, null]], "nn.AlphaDropout": [[270, null]], "nn.AvgPool1d": [[303, null]], "nn.AvgPool2d": [[304, null]], "nn.AvgPool3d": [[305, null]], "nn.BCELoss": [[285, null]], "nn.BatchNorm1d": [[291, null]], "nn.BatchNorm2d": [[292, null]], "nn.BatchNorm3d": [[293, null]], "nn.Bilinear": [[281, null]], "nn.Buffer": [[171, null]], "nn.Conv1d": [[266, null]], "nn.Conv2d": [[267, null]], "nn.Conv3d": [[268, null]], "nn.ConvBNReLU1d": [[233, null]], "nn.ConvBNReLU2d": [[234, null]], "nn.ConvBNReLU3d": [[235, null]], "nn.CrossEntropyLoss": [[286, null]], "nn.DepthSeparableConv1d": [[236, null]], "nn.DepthSeparableConv2d": [[237, null]], "nn.DepthSeparableConv3d": [[238, null]], "nn.DropBlock": [[271, null]], "nn.DropPath": [[272, null]], "nn.Dropout": [[273, null]], "nn.Dropout1d": [[274, null]], "nn.Dropout2d": [[275, null]], "nn.Dropout3d": [[276, null]], "nn.ELU": [[250, null]], "nn.Embedding": [[310, null]], "nn.GELU": [[251, null]], "nn.GlobalResponseNorm": [[294, null]], "nn.HardSigmoid": [[252, null]], "nn.HardSwish": [[253, null]], "nn.HuberLoss": [[287, null]], "nn.Identity": [[282, null]], "nn.InstanceNorm1d": [[295, null]], "nn.InstanceNorm2d": [[296, null]], "nn.InstanceNorm3d": [[297, null]], "nn.LayerNorm": [[298, null]], "nn.LeakyReLU": [[254, null]], "nn.Linear": [[283, null]], "nn.MSELoss": [[288, null]], "nn.MaxPool1d": [[306, null]], "nn.MaxPool2d": [[307, null]], "nn.MaxPool3d": [[308, null]], "nn.Module": [[172, null]], "nn.ModuleDict": [[174, null]], "nn.ModuleList": [[175, null]], "nn.MultiHeadAttention": [[263, null]], "nn.NLLLoss": [[289, null]], "nn.Parameter": [[173, null]], "nn.ParameterDict": [[176, null]], "nn.ParameterList": [[177, null]], "nn.ReLU": [[255, null]], "nn.ReLU6": [[256, null]], "nn.Rearrange": [[278, null]], "nn.SELU": [[257, null]], "nn.SEModule": [[239, null]], "nn.ScaledDotProductAttention": [[264, null]], "nn.SelectiveKernel": [[240, null]], "nn.Sequential": [[178, null]], "nn.Sigmoid": [[258, null]], "nn.Softmax": [[259, null]], "nn.Swish": [[260, null]], "nn.Tanh": [[261, null]], "nn.Transformer": [[312, null]], "nn.TransformerDecoder": [[313, null]], "nn.TransformerDecoderLayer": [[314, null]], "nn.TransformerEncoder": [[315, null]], "nn.TransformerEncoderLayer": [[316, null]], "nn.Upsample": [[318, null]], "nn.functional.adaptive_avg_pool1d": [[219, null]], "nn.functional.adaptive_avg_pool2d": [[220, null]], "nn.functional.adaptive_avg_pool3d": [[221, null]], "nn.functional.alpha_dropout": [[196, null]], "nn.functional.avg_pool1d": [[222, null]], "nn.functional.avg_pool2d": [[223, null]], "nn.functional.avg_pool3d": [[224, null]], "nn.functional.batch_norm": [[214, null]], "nn.functional.bilinear": [[205, null]], "nn.functional.binary_cross_entropy": [[208, null]], "nn.functional.conv1d": [[191, null]], "nn.functional.conv2d": [[192, null]], "nn.functional.conv3d": [[193, null]], "nn.functional.cross_entropy": [[209, null]], "nn.functional.drop_block": [[197, null]], "nn.functional.drop_path": [[198, null]], "nn.functional.dropout": [[199, null]], "nn.functional.dropout1d": [[200, null]], "nn.functional.dropout2d": [[201, null]], "nn.functional.dropout3d": [[202, null]], "nn.functional.elu": [[180, null]], "nn.functional.embedding": [[229, null]], "nn.functional.gelu": [[181, null]], "nn.functional.global_response_norm": [[215, null]], "nn.functional.huber_loss": [[210, null]], "nn.functional.instance_norm": [[217, null]], "nn.functional.interpolate": [[231, null]], "nn.functional.layer_norm": [[218, null]], "nn.functional.leaky_relu": [[183, null]], "nn.functional.linear": [[207, null]], "nn.functional.max_pool1d": [[226, null]], "nn.functional.max_pool2d": [[227, null]], "nn.functional.max_pool3d": [[228, null]], "nn.functional.mse_loss": [[212, null]], "nn.functional.nll_loss": [[213, null]], "nn.functional.relu": [[184, null]], "nn.functional.rotate": [[232, null]], "nn.functional.scaled_dot_product_attention": [[190, null]], "nn.functional.selu": [[185, null]], "nn.functional.sigmoid": [[186, null]], "nn.functional.softmax": [[187, null]], "nn.functional.tanh": [[188, null]], "nn.functional.unfold": [[195, null]], "nn.init.constant": [[242, null]], "nn.init.kaiming_normal": [[244, null]], "nn.init.kaiming_uniform": [[245, null]], "nn.init.normal": [[246, null]], "nn.init.uniform": [[247, null]], "nn.init.xavier_normal": [[248, null]], "nn.init.xavier_uniform": [[249, null]], "optim.ASGD": [[333, null]], "optim.Adadelta": [[334, null]], "optim.Adagrad": [[335, null]], "optim.Adam": [[336, null]], "optim.AdamW": [[337, null]], "optim.Adamax": [[338, null]], "optim.NAdam": [[339, null]], "optim.Optimizer": [[321, null]], "optim.RAdam": [[340, null]], "optim.RMSprop": [[341, null]], "optim.Rprop": [[342, null]], "optim.SGD": [[343, null]], "optim.lr_scheduler": [[322, null]], "rearrange": [[10, "rearrange"]], "reduce": [[10, "reduce"]], "repeat": [[10, "repeat"]], "resnest_101": [[104, null]], "resnest_14": [[105, null]], "resnest_200": [[106, null]], "resnest_26": [[107, null]], "resnest_269": [[108, null]], "resnest_50": [[109, null]], "resnest_50_1s4x24d": [[110, null]], "resnest_50_4s2x40d": [[111, null]], "resnet_1001": [[113, null]], "resnet_101": [[114, null]], "resnet_152": [[115, null]], "resnet_18": [[116, null]], "resnet_200": [[117, null]], "resnet_269": [[118, null]], "resnet_34": [[119, null]], "resnet_50": [[120, null]], "resnext_101_32x16d": [[124, null]], "resnext_101_32x32d": [[125, null]], "resnext_101_32x4d": [[126, null]], "resnext_101_32x8d": [[127, null]], "resnext_101_64x4d": [[128, null]], "resnext_50_32x4d": [[129, null]], "se_resnet_101": [[131, null]], "se_resnet_152": [[132, null]], "se_resnet_18": [[133, null]], "se_resnet_34": [[134, null]], "se_resnet_50": [[135, null]], "se_resnext_101_32x4d": [[136, null]], "se_resnext_101_32x8d": [[137, null]], "se_resnext_101_64x4d": [[138, null]], "se_resnext_50_32x4d": [[139, null]], "sk_resnet_18": [[141, null]], "sk_resnet_34": [[142, null]], "sk_resnet_50": [[143, null]], "sk_resnext_50_32x4d": [[144, null]], "swin_base": [[161, null]], "swin_large": [[162, null]], "swin_small": [[163, null]], "swin_tiny": [[164, null]], "transformer_base": [[157, null]], "transformer_big": [[158, null]], "transforms.CenterCrop": [[431, null]], "transforms.Compose": [[429, null]], "transforms.Normalize": [[432, null]], "transforms.RandomCrop": [[433, null]], "transforms.RandomGrayscale": [[434, null]], "transforms.RandomHorizontalFlip": [[435, null]], "transforms.RandomRotation": [[436, null]], "transforms.RandomVerticalFlip": [[437, null]], "transforms.Resize": [[438, null]], "transforms.ToTensor": [[430, null]], "vggnet_11": [[146, null]], "vggnet_13": [[147, null]], "vggnet_16": [[148, null]], "vggnet_19": [[149, null]], "vit_base": [[166, null]], "vit_huge": [[167, null]], "vit_large": [[168, null]], "vit_small": [[169, null]], "vit_tiny": [[170, null]], "wide_resnet_101": [[121, null]], "wide_resnet_50": [[122, null]], "xception": [[151, null]], "zfnet": [[153, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/CIFAR10", "datasets/image/CIFAR100", "datasets/image/FashionMNIST", "datasets/image/MNIST", "datasets/image/index", "einops/einops", "einops/functions/index", "einops/functions/rearrange", "einops/functions/reduce", "einops/functions/repeat", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/conv/alex/AlexNet_", "models/conv/alex/alexnet", "models/conv/coatnet/CoAtNet", "models/conv/coatnet/coatnet_0", "models/conv/coatnet/coatnet_1", "models/conv/coatnet/coatnet_2", "models/conv/coatnet/coatnet_3", "models/conv/coatnet/coatnet_4", "models/conv/coatnet/coatnet_5", "models/conv/coatnet/coatnet_6", "models/conv/coatnet/coatnet_7", "models/conv/convnext/ConvNeXt", "models/conv/convnext/ConvNeXt_V2", "models/conv/convnext/convnext_base", "models/conv/convnext/convnext_large", "models/conv/convnext/convnext_small", "models/conv/convnext/convnext_tiny", "models/conv/convnext/convnext_v2_atto", "models/conv/convnext/convnext_v2_base", "models/conv/convnext/convnext_v2_femto", "models/conv/convnext/convnext_v2_huge", "models/conv/convnext/convnext_v2_large", "models/conv/convnext/convnext_v2_nano", "models/conv/convnext/convnext_v2_pico", "models/conv/convnext/convnext_v2_tiny", "models/conv/convnext/convnext_xlarge", "models/conv/dense/DenseNet", "models/conv/dense/densenet_121", "models/conv/dense/densenet_169", "models/conv/dense/densenet_201", "models/conv/dense/densenet_264", "models/conv/efficient/EfficientNet", "models/conv/efficient/EfficientNet_V2", "models/conv/efficient/efficientnet_b0", "models/conv/efficient/efficientnet_b1", "models/conv/efficient/efficientnet_b2", "models/conv/efficient/efficientnet_b3", "models/conv/efficient/efficientnet_b4", "models/conv/efficient/efficientnet_b5", "models/conv/efficient/efficientnet_b6", "models/conv/efficient/efficientnet_b7", "models/conv/efficient/efficientnet_v2_l", "models/conv/efficient/efficientnet_v2_m", "models/conv/efficient/efficientnet_v2_s", "models/conv/efficient/efficientnet_v2_xl", "models/conv/inception/Inception", "models/conv/inception/inception_v1", "models/conv/inception/inception_v3", "models/conv/inception/inception_v4", "models/conv/inception_next/InceptionNeXt", "models/conv/inception_next/inception_next_atto", "models/conv/inception_next/inception_next_base", "models/conv/inception_next/inception_next_small", "models/conv/inception_next/inception_next_tiny", "models/conv/inception_res/InceptionResNet", "models/conv/inception_res/inception_resnet_v1", "models/conv/inception_res/inception_resnet_v2", "models/conv/index", "models/conv/lenet/LeNet", "models/conv/lenet/lenet_1", "models/conv/lenet/lenet_4", "models/conv/lenet/lenet_5", "models/conv/mobile/MobileNet_", "models/conv/mobile/MobileNet_V2_", "models/conv/mobile/MobileNet_V3", "models/conv/mobile/MobileNet_V4", "models/conv/mobile/mobilenet", "models/conv/mobile/mobilenet_v2", "models/conv/mobile/mobilenet_v3_large", "models/conv/mobile/mobilenet_v3_small", "models/conv/mobile/mobilenet_v4_conv_large", "models/conv/mobile/mobilenet_v4_conv_medium", "models/conv/mobile/mobilenet_v4_conv_small", "models/conv/mobile/mobilenet_v4_hybrid_large", "models/conv/mobile/mobilenet_v4_hybrid_medium", "models/conv/resnest/ResNeSt", "models/conv/resnest/resnest_101", "models/conv/resnest/resnest_14", "models/conv/resnest/resnest_200", "models/conv/resnest/resnest_26", "models/conv/resnest/resnest_269", "models/conv/resnest/resnest_50", "models/conv/resnest/resnest_50_1s4x24d", "models/conv/resnest/resnest_50_4s2x40d", "models/conv/resnet/ResNet", "models/conv/resnet/resnet_1001", "models/conv/resnet/resnet_101", "models/conv/resnet/resnet_152", "models/conv/resnet/resnet_18", "models/conv/resnet/resnet_200", "models/conv/resnet/resnet_269", "models/conv/resnet/resnet_34", "models/conv/resnet/resnet_50", "models/conv/resnet/wide_resnet_101", "models/conv/resnet/wide_resnet_50", "models/conv/resnext/ResNeXt", "models/conv/resnext/resnext_101_32x16d", "models/conv/resnext/resnext_101_32x32d", "models/conv/resnext/resnext_101_32x4d", "models/conv/resnext/resnext_101_32x8d", "models/conv/resnext/resnext_101_64x4d", "models/conv/resnext/resnext_50_32x4d", "models/conv/senet/SENet", "models/conv/senet/se_resnet_101", "models/conv/senet/se_resnet_152", "models/conv/senet/se_resnet_18", "models/conv/senet/se_resnet_34", "models/conv/senet/se_resnet_50", "models/conv/senet/se_resnext_101_32x4d", "models/conv/senet/se_resnext_101_32x8d", "models/conv/senet/se_resnext_101_64x4d", "models/conv/senet/se_resnext_50_32x4d", "models/conv/sknet/SKNet", "models/conv/sknet/sk_resnet_18", "models/conv/sknet/sk_resnet_34", "models/conv/sknet/sk_resnet_50", "models/conv/sknet/sk_resnext_50_32x4d", "models/conv/vgg/VGGNet", "models/conv/vgg/vggnet_11", "models/conv/vgg/vggnet_13", "models/conv/vgg/vggnet_16", "models/conv/vgg/vggnet_19", "models/conv/xception/Xception_", "models/conv/xception/xception", "models/conv/zfnet/ZFNet_", "models/conv/zfnet/zfnet", "models/models", "models/summarize", "models/transformer/base/Transformer", "models/transformer/base/transformer_base", "models/transformer/base/transformer_big", "models/transformer/index", "models/transformer/swin/SwinTransformer", "models/transformer/swin/swin_base", "models/transformer/swin/swin_large", "models/transformer/swin/swin_small", "models/transformer/swin/swin_tiny", "models/transformer/vit/ViT", "models/transformer/vit/vit_base", "models/transformer/vit/vit_huge", "models/transformer/vit/vit_large", "models/transformer/vit/vit_small", "models/transformer/vit/vit_tiny", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/attention/index", "nn/functions/attention/scaled_dot_product_attention", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/drop_block", "nn/functions/drop/drop_path", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/global_response_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/util/embedding", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/fused/ConvBNReLU1d", "nn/fused/ConvBNReLU2d", "nn/fused/ConvBNReLU3d", "nn/fused/DepthSeparableConv1d", "nn/fused/DepthSeparableConv2d", "nn/fused/DepthSeparableConv3d", "nn/fused/SEModule", "nn/fused/SelectiveKernel", "nn/fused/index", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/HardSigmoid", "nn/modules/activation/HardSwish", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/ReLU6", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Swish", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/attention/MultiHeadAttention", "nn/modules/attention/ScaledDotProductAttention", "nn/modules/attention/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/DropBlock", "nn/modules/drop/DropPath", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/einops/Rearrange", "nn/modules/einops/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/GlobalResponseNorm", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/modules/sparse/Embedding", "nn/modules/sparse/index", "nn/modules/transformer/Transformer", "nn/modules/transformer/TransformerDecoder", "nn/modules/transformer/TransformerDecoderLayer", "nn/modules/transformer/TransformerEncoder", "nn/modules/transformer/TransformerEncoderLayer", "nn/modules/transformer/index", "nn/modules/vision/Upsample", "nn/modules/vision/index", "nn/nn", "optim/Optimizer", "optim/lr_scheduler", "optim/lr_scheduler/CosineAnnealingLR", "optim/lr_scheduler/CyclicLR", "optim/lr_scheduler/ExponentialLR", "optim/lr_scheduler/LRScheduler", "optim/lr_scheduler/LambdaLR", "optim/lr_scheduler/MultiStepLR", "optim/lr_scheduler/ReduceLROnPlateau", "optim/lr_scheduler/StepLR", "optim/lr_scheduler/index", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "others/types", "random/functions/bernoulli", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/linspace", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/swapaxes", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/broadcast_to", "tensor/utilities/chunk", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/masked_fill", "tensor/utilities/meshgrid", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/roll", "tensor/utilities/split", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/tril", "tensor/utilities/triu", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/CIFAR10.rst", "datasets/image/CIFAR100.rst", "datasets/image/FashionMNIST.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "einops/einops.rst", "einops/functions/index.rst", "einops/functions/rearrange.rst", "einops/functions/reduce.rst", "einops/functions/repeat.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/conv/alex/AlexNet_.rst", "models/conv/alex/alexnet.rst", "models/conv/coatnet/CoAtNet.rst", "models/conv/coatnet/coatnet_0.rst", "models/conv/coatnet/coatnet_1.rst", "models/conv/coatnet/coatnet_2.rst", "models/conv/coatnet/coatnet_3.rst", "models/conv/coatnet/coatnet_4.rst", "models/conv/coatnet/coatnet_5.rst", "models/conv/coatnet/coatnet_6.rst", "models/conv/coatnet/coatnet_7.rst", "models/conv/convnext/ConvNeXt.rst", "models/conv/convnext/ConvNeXt_V2.rst", "models/conv/convnext/convnext_base.rst", "models/conv/convnext/convnext_large.rst", "models/conv/convnext/convnext_small.rst", "models/conv/convnext/convnext_tiny.rst", "models/conv/convnext/convnext_v2_atto.rst", "models/conv/convnext/convnext_v2_base.rst", "models/conv/convnext/convnext_v2_femto.rst", "models/conv/convnext/convnext_v2_huge.rst", "models/conv/convnext/convnext_v2_large.rst", "models/conv/convnext/convnext_v2_nano.rst", "models/conv/convnext/convnext_v2_pico.rst", "models/conv/convnext/convnext_v2_tiny.rst", "models/conv/convnext/convnext_xlarge.rst", "models/conv/dense/DenseNet.rst", "models/conv/dense/densenet_121.rst", "models/conv/dense/densenet_169.rst", "models/conv/dense/densenet_201.rst", "models/conv/dense/densenet_264.rst", "models/conv/efficient/EfficientNet.rst", "models/conv/efficient/EfficientNet_V2.rst", "models/conv/efficient/efficientnet_b0.rst", "models/conv/efficient/efficientnet_b1.rst", "models/conv/efficient/efficientnet_b2.rst", "models/conv/efficient/efficientnet_b3.rst", "models/conv/efficient/efficientnet_b4.rst", "models/conv/efficient/efficientnet_b5.rst", "models/conv/efficient/efficientnet_b6.rst", "models/conv/efficient/efficientnet_b7.rst", "models/conv/efficient/efficientnet_v2_l.rst", "models/conv/efficient/efficientnet_v2_m.rst", "models/conv/efficient/efficientnet_v2_s.rst", "models/conv/efficient/efficientnet_v2_xl.rst", "models/conv/inception/Inception.rst", "models/conv/inception/inception_v1.rst", "models/conv/inception/inception_v3.rst", "models/conv/inception/inception_v4.rst", "models/conv/inception_next/InceptionNeXt.rst", "models/conv/inception_next/inception_next_atto.rst", "models/conv/inception_next/inception_next_base.rst", "models/conv/inception_next/inception_next_small.rst", "models/conv/inception_next/inception_next_tiny.rst", "models/conv/inception_res/InceptionResNet.rst", "models/conv/inception_res/inception_resnet_v1.rst", "models/conv/inception_res/inception_resnet_v2.rst", "models/conv/index.rst", "models/conv/lenet/LeNet.rst", "models/conv/lenet/lenet_1.rst", "models/conv/lenet/lenet_4.rst", "models/conv/lenet/lenet_5.rst", "models/conv/mobile/MobileNet_.rst", "models/conv/mobile/MobileNet_V2_.rst", "models/conv/mobile/MobileNet_V3.rst", "models/conv/mobile/MobileNet_V4.rst", "models/conv/mobile/mobilenet.rst", "models/conv/mobile/mobilenet_v2.rst", "models/conv/mobile/mobilenet_v3_large.rst", "models/conv/mobile/mobilenet_v3_small.rst", "models/conv/mobile/mobilenet_v4_conv_large.rst", "models/conv/mobile/mobilenet_v4_conv_medium.rst", "models/conv/mobile/mobilenet_v4_conv_small.rst", "models/conv/mobile/mobilenet_v4_hybrid_large.rst", "models/conv/mobile/mobilenet_v4_hybrid_medium.rst", "models/conv/resnest/ResNeSt.rst", "models/conv/resnest/resnest_101.rst", "models/conv/resnest/resnest_14.rst", "models/conv/resnest/resnest_200.rst", "models/conv/resnest/resnest_26.rst", "models/conv/resnest/resnest_269.rst", "models/conv/resnest/resnest_50.rst", "models/conv/resnest/resnest_50_1s4x24d.rst", "models/conv/resnest/resnest_50_4s2x40d.rst", "models/conv/resnet/ResNet.rst", "models/conv/resnet/resnet_1001.rst", "models/conv/resnet/resnet_101.rst", "models/conv/resnet/resnet_152.rst", "models/conv/resnet/resnet_18.rst", "models/conv/resnet/resnet_200.rst", "models/conv/resnet/resnet_269.rst", "models/conv/resnet/resnet_34.rst", "models/conv/resnet/resnet_50.rst", "models/conv/resnet/wide_resnet_101.rst", "models/conv/resnet/wide_resnet_50.rst", "models/conv/resnext/ResNeXt.rst", "models/conv/resnext/resnext_101_32x16d.rst", "models/conv/resnext/resnext_101_32x32d.rst", "models/conv/resnext/resnext_101_32x4d.rst", "models/conv/resnext/resnext_101_32x8d.rst", "models/conv/resnext/resnext_101_64x4d.rst", "models/conv/resnext/resnext_50_32x4d.rst", "models/conv/senet/SENet.rst", "models/conv/senet/se_resnet_101.rst", "models/conv/senet/se_resnet_152.rst", "models/conv/senet/se_resnet_18.rst", "models/conv/senet/se_resnet_34.rst", "models/conv/senet/se_resnet_50.rst", "models/conv/senet/se_resnext_101_32x4d.rst", "models/conv/senet/se_resnext_101_32x8d.rst", "models/conv/senet/se_resnext_101_64x4d.rst", "models/conv/senet/se_resnext_50_32x4d.rst", "models/conv/sknet/SKNet.rst", "models/conv/sknet/sk_resnet_18.rst", "models/conv/sknet/sk_resnet_34.rst", "models/conv/sknet/sk_resnet_50.rst", "models/conv/sknet/sk_resnext_50_32x4d.rst", "models/conv/vgg/VGGNet.rst", "models/conv/vgg/vggnet_11.rst", "models/conv/vgg/vggnet_13.rst", "models/conv/vgg/vggnet_16.rst", "models/conv/vgg/vggnet_19.rst", "models/conv/xception/Xception_.rst", "models/conv/xception/xception.rst", "models/conv/zfnet/ZFNet_.rst", "models/conv/zfnet/zfnet.rst", "models/models.rst", "models/summarize.rst", "models/transformer/base/Transformer.rst", "models/transformer/base/transformer_base.rst", "models/transformer/base/transformer_big.rst", "models/transformer/index.rst", "models/transformer/swin/SwinTransformer.rst", "models/transformer/swin/swin_base.rst", "models/transformer/swin/swin_large.rst", "models/transformer/swin/swin_small.rst", "models/transformer/swin/swin_tiny.rst", "models/transformer/vit/ViT.rst", "models/transformer/vit/vit_base.rst", "models/transformer/vit/vit_huge.rst", "models/transformer/vit/vit_large.rst", "models/transformer/vit/vit_small.rst", "models/transformer/vit/vit_tiny.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/attention/index.rst", "nn/functions/attention/scaled_dot_product_attention.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/drop_block.rst", "nn/functions/drop/drop_path.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/global_response_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/util/embedding.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/fused/ConvBNReLU1d.rst", "nn/fused/ConvBNReLU2d.rst", "nn/fused/ConvBNReLU3d.rst", "nn/fused/DepthSeparableConv1d.rst", "nn/fused/DepthSeparableConv2d.rst", "nn/fused/DepthSeparableConv3d.rst", "nn/fused/SEModule.rst", "nn/fused/SelectiveKernel.rst", "nn/fused/index.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/HardSigmoid.rst", "nn/modules/activation/HardSwish.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/ReLU6.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Swish.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/attention/MultiHeadAttention.rst", "nn/modules/attention/ScaledDotProductAttention.rst", "nn/modules/attention/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/DropBlock.rst", "nn/modules/drop/DropPath.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/einops/Rearrange.rst", "nn/modules/einops/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/GlobalResponseNorm.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/modules/sparse/Embedding.rst", "nn/modules/sparse/index.rst", "nn/modules/transformer/Transformer.rst", "nn/modules/transformer/TransformerDecoder.rst", "nn/modules/transformer/TransformerDecoderLayer.rst", "nn/modules/transformer/TransformerEncoder.rst", "nn/modules/transformer/TransformerEncoderLayer.rst", "nn/modules/transformer/index.rst", "nn/modules/vision/Upsample.rst", "nn/modules/vision/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/lr_scheduler.rst", "optim/lr_scheduler/CosineAnnealingLR.rst", "optim/lr_scheduler/CyclicLR.rst", "optim/lr_scheduler/ExponentialLR.rst", "optim/lr_scheduler/LRScheduler.rst", "optim/lr_scheduler/LambdaLR.rst", "optim/lr_scheduler/MultiStepLR.rst", "optim/lr_scheduler/ReduceLROnPlateau.rst", "optim/lr_scheduler/StepLR.rst", "optim/lr_scheduler/index.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "others/types.rst", "random/functions/bernoulli.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/linspace.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/swapaxes.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/broadcast_to.rst", "tensor/utilities/chunk.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/masked_fill.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/roll.rst", "tensor/utilities/split.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/tril.rst", "tensor/utilities/triu.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"abs() (in module lucid)": [[381, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[334, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[335, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[336, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[338, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[337, "lucid.optim.AdamW", false]], "adaptive_avg_pool1d() (in module lucid.nn.functional)": [[219, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[220, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[221, "lucid.nn.functional.adaptive_avg_pool3d", false]], "adaptiveavgpool1d (class in lucid.nn)": [[300, "lucid.nn.AdaptiveAvgPool1d", false]], "adaptiveavgpool2d (class in lucid.nn)": [[301, "lucid.nn.AdaptiveAvgPool2d", false]], "adaptiveavgpool3d (class in lucid.nn)": [[302, "lucid.nn.AdaptiveAvgPool3d", false]], "add() (in module lucid)": [[359, "lucid.add", false]], "alexnet (class in lucid.models)": [[28, "lucid.models.AlexNet", false]], "alexnet() (in module lucid.models)": [[29, "lucid.models.alexnet", false]], "alpha_dropout() (in module lucid.nn.functional)": [[196, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[270, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[370, "lucid.arange", false]], "arccos() (in module lucid)": [[382, "lucid.arccos", false]], "arcsin() (in module lucid)": [[383, "lucid.arcsin", false]], "arctan() (in module lucid)": [[384, "lucid.arctan", false]], "asgd (class in lucid.optim)": [[333, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[222, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[223, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[224, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[303, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[304, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[305, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[214, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[291, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[292, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[293, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[285, "lucid.nn.BCELoss", false]], "bernoulli() (in module lucid.random)": [[350, "lucid.random.bernoulli", false]], "bilinear (class in lucid.nn)": [[281, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[205, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[208, "lucid.nn.functional.binary_cross_entropy", false]], "broadcast_to() (in module lucid)": [[408, "lucid.broadcast_to", false]], "buffer (class in lucid.nn)": [[171, "lucid.nn.Buffer", false]], "centercrop (class in lucid.transforms)": [[431, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[17, "lucid.linalg.cholesky", false]], "chunk() (in module lucid)": [[409, "lucid.chunk", false]], "cifar10 (class in lucid.datasets)": [[5, "lucid.datasets.CIFAR10", false]], "cifar100 (class in lucid.datasets)": [[6, "lucid.datasets.CIFAR100", false]], "clip() (in module lucid)": [[385, "lucid.clip", false]], "coatnet (class in lucid.models)": [[30, "lucid.models.CoAtNet", false]], "coatnet_0() (in module lucid.models)": [[31, "lucid.models.coatnet_0", false]], "coatnet_1() (in module lucid.models)": [[32, "lucid.models.coatnet_1", false]], "coatnet_2() (in module lucid.models)": [[33, "lucid.models.coatnet_2", false]], "coatnet_3() (in module lucid.models)": [[34, "lucid.models.coatnet_3", false]], "coatnet_4() (in module lucid.models)": [[35, "lucid.models.coatnet_4", false]], "coatnet_5() (in module lucid.models)": [[36, "lucid.models.coatnet_5", false]], "coatnet_6() (in module lucid.models)": [[37, "lucid.models.coatnet_6", false]], "coatnet_7() (in module lucid.models)": [[38, "lucid.models.coatnet_7", false]], "compose (class in lucid.transforms)": [[429, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[410, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[242, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[266, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[191, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[267, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[192, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[268, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[193, "lucid.nn.functional.conv3d", false]], "convbnrelu1d (class in lucid.nn)": [[233, "lucid.nn.ConvBNReLU1d", false]], "convbnrelu2d (class in lucid.nn)": [[234, "lucid.nn.ConvBNReLU2d", false]], "convbnrelu3d (class in lucid.nn)": [[235, "lucid.nn.ConvBNReLU3d", false]], "convnext (class in lucid.models)": [[39, "lucid.models.ConvNeXt", false]], "convnext_base() (in module lucid.models)": [[41, "lucid.models.convnext_base", false]], "convnext_large() (in module lucid.models)": [[42, "lucid.models.convnext_large", false]], "convnext_small() (in module lucid.models)": [[43, "lucid.models.convnext_small", false]], "convnext_tiny() (in module lucid.models)": [[44, "lucid.models.convnext_tiny", false]], "convnext_v2 (class in lucid.models)": [[40, "lucid.models.ConvNeXt_V2", false]], "convnext_v2_atto() (in module lucid.models)": [[45, "lucid.models.convnext_v2_atto", false]], "convnext_v2_base() (in module lucid.models)": [[46, "lucid.models.convnext_v2_base", false]], "convnext_v2_femto() (in module lucid.models)": [[47, "lucid.models.convnext_v2_femto", false]], "convnext_v2_huge() (in module lucid.models)": [[48, "lucid.models.convnext_v2_huge", false]], "convnext_v2_large() (in module lucid.models)": [[49, "lucid.models.convnext_v2_large", false]], "convnext_v2_nano() (in module lucid.models)": [[50, "lucid.models.convnext_v2_nano", false]], "convnext_v2_pico() (in module lucid.models)": [[51, "lucid.models.convnext_v2_pico", false]], "convnext_v2_tiny() (in module lucid.models)": [[52, "lucid.models.convnext_v2_tiny", false]], "convnext_xlarge() (in module lucid.models)": [[53, "lucid.models.convnext_xlarge", false]], "cos() (in module lucid)": [[386, "lucid.cos", false]], "cosh() (in module lucid)": [[387, "lucid.cosh", false]], "cosineannealinglr (class in lucid.optim.lr_scheduler)": [[323, "lucid.optim.lr_scheduler.CosineAnnealingLR", false]], "cross_entropy() (in module lucid.nn.functional)": [[209, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[286, "lucid.nn.CrossEntropyLoss", false]], "cube() (in module lucid)": [[388, "lucid.cube", false]], "cycliclr (class in lucid.optim.lr_scheduler)": [[324, "lucid.optim.lr_scheduler.CyclicLR", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "densenet (class in lucid.models)": [[54, "lucid.models.DenseNet", false]], "densenet_121() (in module lucid.models)": [[55, "lucid.models.densenet_121", false]], "densenet_169() (in module lucid.models)": [[56, "lucid.models.densenet_169", false]], "densenet_201() (in module lucid.models)": [[57, "lucid.models.densenet_201", false]], "densenet_264() (in module lucid.models)": [[58, "lucid.models.densenet_264", false]], "depthseparableconv1d (class in lucid.nn)": [[236, "lucid.nn.DepthSeparableConv1d", false]], "depthseparableconv2d (class in lucid.nn)": [[237, "lucid.nn.DepthSeparableConv2d", false]], "depthseparableconv3d (class in lucid.nn)": [[238, "lucid.nn.DepthSeparableConv3d", false]], "det() (in module lucid.linalg)": [[18, "lucid.linalg.det", false]], "diag() (in module lucid)": [[371, "lucid.diag", false]], "div() (in module lucid)": [[360, "lucid.div", false]], "dot() (in module lucid)": [[361, "lucid.dot", false]], "drop_block() (in module lucid.nn.functional)": [[197, "lucid.nn.functional.drop_block", false]], "drop_path() (in module lucid.nn.functional)": [[198, "lucid.nn.functional.drop_path", false]], "dropblock (class in lucid.nn)": [[271, "lucid.nn.DropBlock", false]], "dropout (class in lucid.nn)": [[273, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[199, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[274, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[200, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[275, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[201, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[276, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[202, "lucid.nn.functional.dropout3d", false]], "droppath (class in lucid.nn)": [[272, "lucid.nn.DropPath", false]], "efficientnet (class in lucid.models)": [[59, "lucid.models.EfficientNet", false]], "efficientnet_b0() (in module lucid.models)": [[61, "lucid.models.efficientnet_b0", false]], "efficientnet_b1() (in module lucid.models)": [[62, "lucid.models.efficientnet_b1", false]], "efficientnet_b2() (in module lucid.models)": [[63, "lucid.models.efficientnet_b2", false]], "efficientnet_b3() (in module lucid.models)": [[64, "lucid.models.efficientnet_b3", false]], "efficientnet_b4() (in module lucid.models)": [[65, "lucid.models.efficientnet_b4", false]], "efficientnet_b5() (in module lucid.models)": [[66, "lucid.models.efficientnet_b5", false]], "efficientnet_b6() (in module lucid.models)": [[67, "lucid.models.efficientnet_b6", false]], "efficientnet_b7() (in module lucid.models)": [[68, "lucid.models.efficientnet_b7", false]], "efficientnet_v2 (class in lucid.models)": [[60, "lucid.models.EfficientNet_V2", false]], "efficientnet_v2_l() (in module lucid.models)": [[69, "lucid.models.efficientnet_v2_l", false]], "efficientnet_v2_m() (in module lucid.models)": [[70, "lucid.models.efficientnet_v2_m", false]], "efficientnet_v2_s() (in module lucid.models)": [[71, "lucid.models.efficientnet_v2_s", false]], "efficientnet_v2_xl() (in module lucid.models)": [[72, "lucid.models.efficientnet_v2_xl", false]], "eig() (in module lucid.linalg)": [[19, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[250, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[180, "lucid.nn.functional.elu", false]], "embedding (class in lucid.nn)": [[310, "lucid.nn.Embedding", false]], "embedding() (in module lucid.nn.functional)": [[229, "lucid.nn.functional.embedding", false]], "empty() (in module lucid)": [[372, "lucid.empty", false]], "empty_like() (in module lucid)": [[373, "lucid.empty_like", false]], "exp() (in module lucid)": [[389, "lucid.exp", false]], "exponentiallr (class in lucid.optim.lr_scheduler)": [[325, "lucid.optim.lr_scheduler.ExponentialLR", false]], "eye() (in module lucid)": [[374, "lucid.eye", false]], "fashionmnist (class in lucid.datasets)": [[7, "lucid.datasets.FashionMNIST", false]], "flatten() (in module lucid)": [[411, "lucid.flatten", false]], "forward() (lucid.models.swintransformer method)": [[160, "lucid.models.SwinTransformer.forward", false]], "gelu (class in lucid.nn)": [[251, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[181, "lucid.nn.functional.gelu", false]], "global_response_norm() (in module lucid.nn.functional)": [[215, "lucid.nn.functional.global_response_norm", false]], "globalresponsenorm (class in lucid.nn)": [[294, "lucid.nn.GlobalResponseNorm", false]], "grad_enabled() (in module lucid)": [[345, "lucid.grad_enabled", false]], "hardsigmoid (class in lucid.nn)": [[252, "lucid.nn.HardSigmoid", false]], "hardswish (class in lucid.nn)": [[253, "lucid.nn.HardSwish", false]], "hstack() (in module lucid)": [[412, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[210, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[287, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[282, "lucid.nn.Identity", false]], "inception (class in lucid.models)": [[73, "lucid.models.Inception", false]], "inception_next_atto() (in module lucid.models)": [[78, "lucid.models.inception_next_atto", false]], "inception_next_base() (in module lucid.models)": [[79, "lucid.models.inception_next_base", false]], "inception_next_small() (in module lucid.models)": [[80, "lucid.models.inception_next_small", false]], "inception_next_tiny() (in module lucid.models)": [[81, "lucid.models.inception_next_tiny", false]], "inception_resnet_v1() (in module lucid.models)": [[83, "lucid.models.inception_resnet_v1", false]], "inception_resnet_v2() (in module lucid.models)": [[84, "lucid.models.inception_resnet_v2", false]], "inception_v1() (in module lucid.models)": [[74, "lucid.models.inception_v1", false]], "inception_v3() (in module lucid.models)": [[75, "lucid.models.inception_v3", false]], "inception_v4() (in module lucid.models)": [[76, "lucid.models.inception_v4", false]], "inceptionnext (class in lucid.models)": [[77, "lucid.models.InceptionNeXt", false]], "inceptionresnet (class in lucid.models)": [[82, "lucid.models.InceptionResNet", false]], "inner() (in module lucid)": [[362, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[217, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[295, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[296, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[297, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[231, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[21, "lucid.linalg.inv", false]], "kaiming_normal() (in module lucid.nn.init)": [[244, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[245, "lucid.nn.init.kaiming_uniform", false]], "lambdalr (class in lucid.optim.lr_scheduler)": [[327, "lucid.optim.lr_scheduler.LambdaLR", false]], "layer_norm() (in module lucid.nn.functional)": [[218, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[298, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[183, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[254, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[86, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[87, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[88, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[89, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[283, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[207, "lucid.nn.functional.linear", false]], "linspace() (in module lucid)": [[375, "lucid.linspace", false]], "log() (in module lucid)": [[390, "lucid.log", false]], "lrscheduler (class in lucid.optim.lr_scheduler)": [[326, "lucid.optim.lr_scheduler.LRScheduler", false]], "lucid": [[15, "module-lucid", false]], "masked_fill() (in module lucid)": [[414, "lucid.masked_fill", false]], "matmul() (in module lucid)": [[363, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[22, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[391, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[226, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[227, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[228, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[364, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[306, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[307, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[308, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[392, "lucid.mean", false]], "meshgrid() (in module lucid)": [[415, "lucid.meshgrid", false]], "min() (in module lucid)": [[393, "lucid.min", false]], "minimum() (in module lucid)": [[365, "lucid.minimum", false]], "mnist (class in lucid.datasets)": [[8, "lucid.datasets.MNIST", false]], "mobilenet (class in lucid.models)": [[90, "lucid.models.MobileNet", false]], "mobilenet() (in module lucid.models)": [[94, "lucid.models.mobilenet", false]], "mobilenet_v2 (class in lucid.models)": [[91, "lucid.models.MobileNet_V2", false]], "mobilenet_v2() (in module lucid.models)": [[95, "lucid.models.mobilenet_v2", false]], "mobilenet_v3 (class in lucid.models)": [[92, "lucid.models.MobileNet_V3", false]], "mobilenet_v3_large() (in module lucid.models)": [[96, "lucid.models.mobilenet_v3_large", false]], "mobilenet_v3_small() (in module lucid.models)": [[97, "lucid.models.mobilenet_v3_small", false]], "mobilenet_v4 (class in lucid.models)": [[93, "lucid.models.MobileNet_V4", false]], "mobilenet_v4_conv_large() (in module lucid.models)": [[98, "lucid.models.mobilenet_v4_conv_large", false]], "mobilenet_v4_conv_medium() (in module lucid.models)": [[99, "lucid.models.mobilenet_v4_conv_medium", false]], "mobilenet_v4_conv_small() (in module lucid.models)": [[100, "lucid.models.mobilenet_v4_conv_small", false]], "mobilenet_v4_hybrid_large() (in module lucid.models)": [[101, "lucid.models.mobilenet_v4_hybrid_large", false]], "mobilenet_v4_hybrid_medium() (in module lucid.models)": [[102, "lucid.models.mobilenet_v4_hybrid_medium", false]], "module": [[15, "module-lucid", false]], "module (class in lucid.nn)": [[172, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[174, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[175, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[212, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[288, "lucid.nn.MSELoss", false]], "mul() (in module lucid)": [[366, "lucid.mul", false]], "multiheadattention (class in lucid.nn)": [[263, "lucid.nn.MultiHeadAttention", false]], "multisteplr (class in lucid.optim.lr_scheduler)": [[328, "lucid.optim.lr_scheduler.MultiStepLR", false]], "nadam (class in lucid.optim)": [[339, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[213, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[289, "lucid.nn.NLLLoss", false]], "no_grad() (in module lucid)": [[347, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[23, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[246, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[432, "lucid.transforms.Normalize", false]], "ones() (in module lucid)": [[376, "lucid.ones", false]], "ones_like() (in module lucid)": [[377, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[321, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[367, "lucid.outer", false]], "pad() (in module lucid)": [[416, "lucid.pad", false]], "parameter (class in lucid.nn)": [[173, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[176, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[177, "lucid.nn.ParameterList", false]], "pinv() (in module lucid.linalg)": [[24, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[368, "lucid.power", false]], "qr() (in module lucid.linalg)": [[25, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[340, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[352, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[353, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[354, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[433, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[434, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[435, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[436, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[437, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[417, "lucid.ravel", false]], "rearrange (class in lucid.nn)": [[278, "lucid.nn.Rearrange", false]], "rearrange() (in module lucid.einops)": [[12, "lucid.einops.rearrange", false]], "reciprocal() (in module lucid)": [[394, "lucid.reciprocal", false]], "reduce() (in module lucid.einops)": [[13, "lucid.einops.reduce", false]], "reducelronplateau (class in lucid.optim.lr_scheduler)": [[329, "lucid.optim.lr_scheduler.ReduceLROnPlateau", false]], "register_model() (in module lucid)": [[348, "lucid.register_model", false]], "relu (class in lucid.nn)": [[255, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[184, "lucid.nn.functional.relu", false]], "relu6 (class in lucid.nn)": [[256, "lucid.nn.ReLU6", false]], "repeat() (in module lucid)": [[418, "lucid.repeat", false]], "repeat() (in module lucid.einops)": [[14, "lucid.einops.repeat", false]], "reshape() (in module lucid)": [[419, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[438, "lucid.transforms.Resize", false]], "resnest (class in lucid.models)": [[103, "lucid.models.ResNeSt", false]], "resnest_101() (in module lucid.models)": [[104, "lucid.models.resnest_101", false]], "resnest_14() (in module lucid.models)": [[105, "lucid.models.resnest_14", false]], "resnest_200() (in module lucid.models)": [[106, "lucid.models.resnest_200", false]], "resnest_26() (in module lucid.models)": [[107, "lucid.models.resnest_26", false]], "resnest_269() (in module lucid.models)": [[108, "lucid.models.resnest_269", false]], "resnest_50() (in module lucid.models)": [[109, "lucid.models.resnest_50", false]], "resnest_50_1s4x24d() (in module lucid.models)": [[110, "lucid.models.resnest_50_1s4x24d", false]], "resnest_50_4s2x40d() (in module lucid.models)": [[111, "lucid.models.resnest_50_4s2x40d", false]], "resnet (class in lucid.models)": [[112, "lucid.models.ResNet", false]], "resnet_1001() (in module lucid.models)": [[113, "lucid.models.resnet_1001", false]], "resnet_101() (in module lucid.models)": [[114, "lucid.models.resnet_101", false]], "resnet_152() (in module lucid.models)": [[115, "lucid.models.resnet_152", false]], "resnet_18() (in module lucid.models)": [[116, "lucid.models.resnet_18", false]], "resnet_200() (in module lucid.models)": [[117, "lucid.models.resnet_200", false]], "resnet_269() (in module lucid.models)": [[118, "lucid.models.resnet_269", false]], "resnet_34() (in module lucid.models)": [[119, "lucid.models.resnet_34", false]], "resnet_50() (in module lucid.models)": [[120, "lucid.models.resnet_50", false]], "resnext (class in lucid.models)": [[123, "lucid.models.ResNeXt", false]], "resnext_101_32x16d() (in module lucid.models)": [[124, "lucid.models.resnext_101_32x16d", false]], "resnext_101_32x32d() (in module lucid.models)": [[125, "lucid.models.resnext_101_32x32d", false]], "resnext_101_32x4d() (in module lucid.models)": [[126, "lucid.models.resnext_101_32x4d", false]], "resnext_101_32x8d() (in module lucid.models)": [[127, "lucid.models.resnext_101_32x8d", false]], "resnext_101_64x4d() (in module lucid.models)": [[128, "lucid.models.resnext_101_64x4d", false]], "resnext_50_32x4d() (in module lucid.models)": [[129, "lucid.models.resnext_50_32x4d", false]], "rmsprop (class in lucid.optim)": [[341, "lucid.optim.RMSprop", false]], "roll() (in module lucid)": [[420, "lucid.roll", false]], "rotate() (in module lucid.nn.functional)": [[232, "lucid.nn.functional.rotate", false]], "rprop (class in lucid.optim)": [[342, "lucid.optim.Rprop", false]], "scaled_dot_product_attention() (in module lucid.nn.functional)": [[190, "lucid.nn.functional.scaled_dot_product_attention", false]], "scaleddotproductattention (class in lucid.nn)": [[264, "lucid.nn.ScaledDotProductAttention", false]], "se_resnet_101() (in module lucid.models)": [[131, "lucid.models.se_resnet_101", false]], "se_resnet_152() (in module lucid.models)": [[132, "lucid.models.se_resnet_152", false]], "se_resnet_18() (in module lucid.models)": [[133, "lucid.models.se_resnet_18", false]], "se_resnet_34() (in module lucid.models)": [[134, "lucid.models.se_resnet_34", false]], "se_resnet_50() (in module lucid.models)": [[135, "lucid.models.se_resnet_50", false]], "se_resnext_101_32x4d() (in module lucid.models)": [[136, "lucid.models.se_resnext_101_32x4d", false]], "se_resnext_101_32x8d() (in module lucid.models)": [[137, "lucid.models.se_resnext_101_32x8d", false]], "se_resnext_101_64x4d() (in module lucid.models)": [[138, "lucid.models.se_resnext_101_64x4d", false]], "se_resnext_50_32x4d() (in module lucid.models)": [[139, "lucid.models.se_resnext_50_32x4d", false]], "seed() (in module lucid.random)": [[355, "lucid.random.seed", false]], "selectivekernel (class in lucid.nn)": [[240, "lucid.nn.SelectiveKernel", false]], "selu (class in lucid.nn)": [[257, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[185, "lucid.nn.functional.selu", false]], "semodule (class in lucid.nn)": [[239, "lucid.nn.SEModule", false]], "senet (class in lucid.models)": [[130, "lucid.models.SENet", false]], "sequential (class in lucid.nn)": [[178, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[343, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[258, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[186, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[395, "lucid.sign", false]], "sin() (in module lucid)": [[396, "lucid.sin", false]], "sinh() (in module lucid)": [[397, "lucid.sinh", false]], "sk_resnet_18() (in module lucid.models)": [[141, "lucid.models.sk_resnet_18", false]], "sk_resnet_34() (in module lucid.models)": [[142, "lucid.models.sk_resnet_34", false]], "sk_resnet_50() (in module lucid.models)": [[143, "lucid.models.sk_resnet_50", false]], "sk_resnext_50_32x4d() (in module lucid.models)": [[144, "lucid.models.sk_resnext_50_32x4d", false]], "sknet (class in lucid.models)": [[140, "lucid.models.SKNet", false]], "softmax (class in lucid.nn)": [[259, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[187, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[26, "lucid.linalg.solve", false]], "split() (in module lucid)": [[421, "lucid.split", false]], "sqrt() (in module lucid)": [[398, "lucid.sqrt", false]], "square() (in module lucid)": [[399, "lucid.square", false]], "squeeze() (in module lucid)": [[422, "lucid.squeeze", false]], "stack() (in module lucid)": [[423, "lucid.stack", false]], "steplr (class in lucid.optim.lr_scheduler)": [[330, "lucid.optim.lr_scheduler.StepLR", false]], "sub() (in module lucid)": [[369, "lucid.sub", false]], "sum() (in module lucid)": [[400, "lucid.sum", false]], "summarize() (in module lucid.models)": [[155, "lucid.models.summarize", false]], "svd() (in module lucid.linalg)": [[27, "lucid.linalg.svd", false]], "swapaxes() (in module lucid)": [[401, "lucid.swapaxes", false]], "swin_base() (in module lucid.models)": [[161, "lucid.models.swin_base", false]], "swin_large() (in module lucid.models)": [[162, "lucid.models.swin_large", false]], "swin_small() (in module lucid.models)": [[163, "lucid.models.swin_small", false]], "swin_tiny() (in module lucid.models)": [[164, "lucid.models.swin_tiny", false]], "swintransformer (class in lucid.models)": [[160, "lucid.models.SwinTransformer", false]], "swish (class in lucid.nn)": [[260, "lucid.nn.Swish", false]], "tan() (in module lucid)": [[402, "lucid.tan", false]], "tanh (class in lucid.nn)": [[261, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[403, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[188, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[358, "lucid.Tensor", false]], "tensor() (in module lucid)": [[407, "lucid.tensor", false]], "tile() (in module lucid)": [[424, "lucid.tile", false]], "totensor (class in lucid.transforms)": [[430, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[404, "lucid.trace", false]], "transformer (class in lucid.models)": [[156, "lucid.models.Transformer", false]], "transformer (class in lucid.nn)": [[312, "lucid.nn.Transformer", false]], "transformer_base() (in module lucid.models)": [[157, "lucid.models.transformer_base", false]], "transformer_big() (in module lucid.models)": [[158, "lucid.models.transformer_big", false]], "transformerdecoder (class in lucid.nn)": [[313, "lucid.nn.TransformerDecoder", false]], "transformerdecoderlayer (class in lucid.nn)": [[314, "lucid.nn.TransformerDecoderLayer", false]], "transformerencoder (class in lucid.nn)": [[315, "lucid.nn.TransformerEncoder", false]], "transformerencoderlayer (class in lucid.nn)": [[316, "lucid.nn.TransformerEncoderLayer", false]], "transpose() (in module lucid)": [[405, "lucid.transpose", false]], "tril() (in module lucid)": [[425, "lucid.tril", false]], "triu() (in module lucid)": [[426, "lucid.triu", false]], "unfold() (in module lucid.nn.functional)": [[195, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[247, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[356, "lucid.random.uniform", false]], "unsqueeze() (in module lucid)": [[427, "lucid.unsqueeze", false]], "upsample (class in lucid.nn)": [[318, "lucid.nn.Upsample", false]], "var() (in module lucid)": [[406, "lucid.var", false]], "vggnet (class in lucid.models)": [[145, "lucid.models.VGGNet", false]], "vggnet_11() (in module lucid.models)": [[146, "lucid.models.vggnet_11", false]], "vggnet_13() (in module lucid.models)": [[147, "lucid.models.vggnet_13", false]], "vggnet_16() (in module lucid.models)": [[148, "lucid.models.vggnet_16", false]], "vggnet_19() (in module lucid.models)": [[149, "lucid.models.vggnet_19", false]], "vit (class in lucid.models)": [[165, "lucid.models.ViT", false]], "vit_base() (in module lucid.models)": [[166, "lucid.models.vit_base", false]], "vit_huge() (in module lucid.models)": [[167, "lucid.models.vit_huge", false]], "vit_large() (in module lucid.models)": [[168, "lucid.models.vit_large", false]], "vit_small() (in module lucid.models)": [[169, "lucid.models.vit_small", false]], "vit_tiny() (in module lucid.models)": [[170, "lucid.models.vit_tiny", false]], "vstack() (in module lucid)": [[428, "lucid.vstack", false]], "wide_resnet_101() (in module lucid.models)": [[121, "lucid.models.wide_resnet_101", false]], "wide_resnet_50() (in module lucid.models)": [[122, "lucid.models.wide_resnet_50", false]], "xavier_normal() (in module lucid.nn.init)": [[248, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[249, "lucid.nn.init.xavier_uniform", false]], "xception (class in lucid.models)": [[150, "lucid.models.Xception", false]], "xception() (in module lucid.models)": [[151, "lucid.models.xception", false]], "zeros() (in module lucid)": [[378, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[379, "lucid.zeros_like", false]], "zfnet (class in lucid.models)": [[152, "lucid.models.ZFNet", false]], "zfnet() (in module lucid.models)": [[153, "lucid.models.zfnet", false]]}, "objects": {"": [[15, 0, 0, "-", "lucid"]], "lucid": [[358, 1, 1, "", "Tensor"], [381, 2, 1, "", "abs"], [359, 2, 1, "", "add"], [370, 2, 1, "", "arange"], [382, 2, 1, "", "arccos"], [383, 2, 1, "", "arcsin"], [384, 2, 1, "", "arctan"], [408, 2, 1, "", "broadcast_to"], [409, 2, 1, "", "chunk"], [385, 2, 1, "", "clip"], [410, 2, 1, "", "concatenate"], [386, 2, 1, "", "cos"], [387, 2, 1, "", "cosh"], [388, 2, 1, "", "cube"], [371, 2, 1, "", "diag"], [360, 2, 1, "", "div"], [361, 2, 1, "", "dot"], [372, 2, 1, "", "empty"], [373, 2, 1, "", "empty_like"], [389, 2, 1, "", "exp"], [374, 2, 1, "", "eye"], [411, 2, 1, "", "flatten"], [345, 2, 1, "", "grad_enabled"], [412, 2, 1, "", "hstack"], [362, 2, 1, "", "inner"], [375, 2, 1, "", "linspace"], [390, 2, 1, "", "log"], [414, 2, 1, "", "masked_fill"], [363, 2, 1, "", "matmul"], [391, 2, 1, "", "max"], [364, 2, 1, "", "maximum"], [392, 2, 1, "", "mean"], [415, 2, 1, "", "meshgrid"], [393, 2, 1, "", "min"], [365, 2, 1, "", "minimum"], [366, 2, 1, "", "mul"], [347, 2, 1, "", "no_grad"], [376, 2, 1, "", "ones"], [377, 2, 1, "", "ones_like"], [367, 2, 1, "", "outer"], [416, 2, 1, "", "pad"], [368, 2, 1, "", "power"], [417, 2, 1, "", "ravel"], [394, 2, 1, "", "reciprocal"], [348, 2, 1, "", "register_model"], [418, 2, 1, "", "repeat"], [419, 2, 1, "", "reshape"], [420, 2, 1, "", "roll"], [395, 2, 1, "", "sign"], [396, 2, 1, "", "sin"], [397, 2, 1, "", "sinh"], [421, 2, 1, "", "split"], [398, 2, 1, "", "sqrt"], [399, 2, 1, "", "square"], [422, 2, 1, "", "squeeze"], [423, 2, 1, "", "stack"], [369, 2, 1, "", "sub"], [400, 2, 1, "", "sum"], [401, 2, 1, "", "swapaxes"], [402, 2, 1, "", "tan"], [403, 2, 1, "", "tanh"], [407, 2, 1, "", "tensor"], [424, 2, 1, "", "tile"], [404, 2, 1, "", "trace"], [405, 2, 1, "", "transpose"], [425, 2, 1, "", "tril"], [426, 2, 1, "", "triu"], [427, 2, 1, "", "unsqueeze"], [406, 2, 1, "", "var"], [428, 2, 1, "", "vstack"], [378, 2, 1, "", "zeros"], [379, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "CIFAR10"], [6, 1, 1, "", "CIFAR100"], [7, 1, 1, "", "FashionMNIST"], [8, 1, 1, "", "MNIST"]], "lucid.einops": [[12, 2, 1, "", "rearrange"], [13, 2, 1, "", "reduce"], [14, 2, 1, "", "repeat"]], "lucid.linalg": [[17, 2, 1, "", "cholesky"], [18, 2, 1, "", "det"], [19, 2, 1, "", "eig"], [21, 2, 1, "", "inv"], [22, 2, 1, "", "matrix_power"], [23, 2, 1, "", "norm"], [24, 2, 1, "", "pinv"], [25, 2, 1, "", "qr"], [26, 2, 1, "", "solve"], [27, 2, 1, "", "svd"]], "lucid.models": [[28, 1, 1, "", "AlexNet"], [30, 1, 1, "", "CoAtNet"], [39, 1, 1, "", "ConvNeXt"], [40, 1, 1, "", "ConvNeXt_V2"], [54, 1, 1, "", "DenseNet"], [59, 1, 1, "", "EfficientNet"], [60, 1, 1, "", "EfficientNet_V2"], [73, 1, 1, "", "Inception"], [77, 1, 1, "", "InceptionNeXt"], [82, 1, 1, "", "InceptionResNet"], [86, 1, 1, "", "LeNet"], [90, 1, 1, "", "MobileNet"], [91, 1, 1, "", "MobileNet_V2"], [92, 1, 1, "", "MobileNet_V3"], [93, 1, 1, "", "MobileNet_V4"], [103, 1, 1, "", "ResNeSt"], [123, 1, 1, "", "ResNeXt"], [112, 1, 1, "", "ResNet"], [130, 1, 1, "", "SENet"], [140, 1, 1, "", "SKNet"], [160, 1, 1, "", "SwinTransformer"], [156, 1, 1, "", "Transformer"], [145, 1, 1, "", "VGGNet"], [165, 1, 1, "", "ViT"], [150, 1, 1, "", "Xception"], [152, 1, 1, "", "ZFNet"], [29, 2, 1, "", "alexnet"], [31, 2, 1, "", "coatnet_0"], [32, 2, 1, "", "coatnet_1"], [33, 2, 1, "", "coatnet_2"], [34, 2, 1, "", "coatnet_3"], [35, 2, 1, "", "coatnet_4"], [36, 2, 1, "", "coatnet_5"], [37, 2, 1, "", "coatnet_6"], [38, 2, 1, "", "coatnet_7"], [41, 2, 1, "", "convnext_base"], [42, 2, 1, "", "convnext_large"], [43, 2, 1, "", "convnext_small"], [44, 2, 1, "", "convnext_tiny"], [45, 2, 1, "", "convnext_v2_atto"], [46, 2, 1, "", "convnext_v2_base"], [47, 2, 1, "", "convnext_v2_femto"], [48, 2, 1, "", "convnext_v2_huge"], [49, 2, 1, "", "convnext_v2_large"], [50, 2, 1, "", "convnext_v2_nano"], [51, 2, 1, "", "convnext_v2_pico"], [52, 2, 1, "", "convnext_v2_tiny"], [53, 2, 1, "", "convnext_xlarge"], [55, 2, 1, "", "densenet_121"], [56, 2, 1, "", "densenet_169"], [57, 2, 1, "", "densenet_201"], [58, 2, 1, "", "densenet_264"], [61, 2, 1, "", "efficientnet_b0"], [62, 2, 1, "", "efficientnet_b1"], [63, 2, 1, "", "efficientnet_b2"], [64, 2, 1, "", "efficientnet_b3"], [65, 2, 1, "", "efficientnet_b4"], [66, 2, 1, "", "efficientnet_b5"], [67, 2, 1, "", "efficientnet_b6"], [68, 2, 1, "", "efficientnet_b7"], [69, 2, 1, "", "efficientnet_v2_l"], [70, 2, 1, "", "efficientnet_v2_m"], [71, 2, 1, "", "efficientnet_v2_s"], [72, 2, 1, "", "efficientnet_v2_xl"], [78, 2, 1, "", "inception_next_atto"], [79, 2, 1, "", "inception_next_base"], [80, 2, 1, "", "inception_next_small"], [81, 2, 1, "", "inception_next_tiny"], [83, 2, 1, "", "inception_resnet_v1"], [84, 2, 1, "", "inception_resnet_v2"], [74, 2, 1, "", "inception_v1"], [75, 2, 1, "", "inception_v3"], [76, 2, 1, "", "inception_v4"], [87, 2, 1, "", "lenet_1"], [88, 2, 1, "", "lenet_4"], [89, 2, 1, "", "lenet_5"], [94, 2, 1, "", "mobilenet"], [95, 2, 1, "", "mobilenet_v2"], [96, 2, 1, "", "mobilenet_v3_large"], [97, 2, 1, "", "mobilenet_v3_small"], [98, 2, 1, "", "mobilenet_v4_conv_large"], [99, 2, 1, "", "mobilenet_v4_conv_medium"], [100, 2, 1, "", "mobilenet_v4_conv_small"], [101, 2, 1, "", "mobilenet_v4_hybrid_large"], [102, 2, 1, "", "mobilenet_v4_hybrid_medium"], [104, 2, 1, "", "resnest_101"], [105, 2, 1, "", "resnest_14"], [106, 2, 1, "", "resnest_200"], [107, 2, 1, "", "resnest_26"], [108, 2, 1, "", "resnest_269"], [109, 2, 1, "", "resnest_50"], [110, 2, 1, "", "resnest_50_1s4x24d"], [111, 2, 1, "", "resnest_50_4s2x40d"], [113, 2, 1, "", "resnet_1001"], [114, 2, 1, "", "resnet_101"], [115, 2, 1, "", "resnet_152"], [116, 2, 1, "", "resnet_18"], [117, 2, 1, "", "resnet_200"], [118, 2, 1, "", "resnet_269"], [119, 2, 1, "", "resnet_34"], [120, 2, 1, "", "resnet_50"], [124, 2, 1, "", "resnext_101_32x16d"], [125, 2, 1, "", "resnext_101_32x32d"], [126, 2, 1, "", "resnext_101_32x4d"], [127, 2, 1, "", "resnext_101_32x8d"], [128, 2, 1, "", "resnext_101_64x4d"], [129, 2, 1, "", "resnext_50_32x4d"], [131, 2, 1, "", "se_resnet_101"], [132, 2, 1, "", "se_resnet_152"], [133, 2, 1, "", "se_resnet_18"], [134, 2, 1, "", "se_resnet_34"], [135, 2, 1, "", "se_resnet_50"], [136, 2, 1, "", "se_resnext_101_32x4d"], [137, 2, 1, "", "se_resnext_101_32x8d"], [138, 2, 1, "", "se_resnext_101_64x4d"], [139, 2, 1, "", "se_resnext_50_32x4d"], [141, 2, 1, "", "sk_resnet_18"], [142, 2, 1, "", "sk_resnet_34"], [143, 2, 1, "", "sk_resnet_50"], [144, 2, 1, "", "sk_resnext_50_32x4d"], [155, 2, 1, "", "summarize"], [161, 2, 1, "", "swin_base"], [162, 2, 1, "", "swin_large"], [163, 2, 1, "", "swin_small"], [164, 2, 1, "", "swin_tiny"], [157, 2, 1, "", "transformer_base"], [158, 2, 1, "", "transformer_big"], [146, 2, 1, "", "vggnet_11"], [147, 2, 1, "", "vggnet_13"], [148, 2, 1, "", "vggnet_16"], [149, 2, 1, "", "vggnet_19"], [166, 2, 1, "", "vit_base"], [167, 2, 1, "", "vit_huge"], [168, 2, 1, "", "vit_large"], [169, 2, 1, "", "vit_small"], [170, 2, 1, "", "vit_tiny"], [121, 2, 1, "", "wide_resnet_101"], [122, 2, 1, "", "wide_resnet_50"], [151, 2, 1, "", "xception"], [153, 2, 1, "", "zfnet"]], "lucid.models.SwinTransformer": [[160, 3, 1, "", "forward"]], "lucid.nn": [[300, 1, 1, "", "AdaptiveAvgPool1d"], [301, 1, 1, "", "AdaptiveAvgPool2d"], [302, 1, 1, "", "AdaptiveAvgPool3d"], [270, 1, 1, "", "AlphaDropout"], [303, 1, 1, "", "AvgPool1d"], [304, 1, 1, "", "AvgPool2d"], [305, 1, 1, "", "AvgPool3d"], [285, 1, 1, "", "BCELoss"], [291, 1, 1, "", "BatchNorm1d"], [292, 1, 1, "", "BatchNorm2d"], [293, 1, 1, "", "BatchNorm3d"], [281, 1, 1, "", "Bilinear"], [171, 1, 1, "", "Buffer"], [266, 1, 1, "", "Conv1d"], [267, 1, 1, "", "Conv2d"], [268, 1, 1, "", "Conv3d"], [233, 1, 1, "", "ConvBNReLU1d"], [234, 1, 1, "", "ConvBNReLU2d"], [235, 1, 1, "", "ConvBNReLU3d"], [286, 1, 1, "", "CrossEntropyLoss"], [236, 1, 1, "", "DepthSeparableConv1d"], [237, 1, 1, "", "DepthSeparableConv2d"], [238, 1, 1, "", "DepthSeparableConv3d"], [271, 1, 1, "", "DropBlock"], [272, 1, 1, "", "DropPath"], [273, 1, 1, "", "Dropout"], [274, 1, 1, "", "Dropout1d"], [275, 1, 1, "", "Dropout2d"], [276, 1, 1, "", "Dropout3d"], [250, 1, 1, "", "ELU"], [310, 1, 1, "", "Embedding"], [251, 1, 1, "", "GELU"], [294, 1, 1, "", "GlobalResponseNorm"], [252, 1, 1, "", "HardSigmoid"], [253, 1, 1, "", "HardSwish"], [287, 1, 1, "", "HuberLoss"], [282, 1, 1, "", "Identity"], [295, 1, 1, "", "InstanceNorm1d"], [296, 1, 1, "", "InstanceNorm2d"], [297, 1, 1, "", "InstanceNorm3d"], [298, 1, 1, "", "LayerNorm"], [254, 1, 1, "", "LeakyReLU"], [283, 1, 1, "", "Linear"], [288, 1, 1, "", "MSELoss"], [306, 1, 1, "", "MaxPool1d"], [307, 1, 1, "", "MaxPool2d"], [308, 1, 1, "", "MaxPool3d"], [172, 1, 1, "", "Module"], [174, 1, 1, "", "ModuleDict"], [175, 1, 1, "", "ModuleList"], [263, 1, 1, "", "MultiHeadAttention"], [289, 1, 1, "", "NLLLoss"], [173, 1, 1, "", "Parameter"], [176, 1, 1, "", "ParameterDict"], [177, 1, 1, "", "ParameterList"], [255, 1, 1, "", "ReLU"], [256, 1, 1, "", "ReLU6"], [278, 1, 1, "", "Rearrange"], [257, 1, 1, "", "SELU"], [239, 1, 1, "", "SEModule"], [264, 1, 1, "", "ScaledDotProductAttention"], [240, 1, 1, "", "SelectiveKernel"], [178, 1, 1, "", "Sequential"], [258, 1, 1, "", "Sigmoid"], [259, 1, 1, "", "Softmax"], [260, 1, 1, "", "Swish"], [261, 1, 1, "", "Tanh"], [312, 1, 1, "", "Transformer"], [313, 1, 1, "", "TransformerDecoder"], [314, 1, 1, "", "TransformerDecoderLayer"], [315, 1, 1, "", "TransformerEncoder"], [316, 1, 1, "", "TransformerEncoderLayer"], [318, 1, 1, "", "Upsample"]], "lucid.nn.functional": [[219, 2, 1, "", "adaptive_avg_pool1d"], [220, 2, 1, "", "adaptive_avg_pool2d"], [221, 2, 1, "", "adaptive_avg_pool3d"], [196, 2, 1, "", "alpha_dropout"], [222, 2, 1, "", "avg_pool1d"], [223, 2, 1, "", "avg_pool2d"], [224, 2, 1, "", "avg_pool3d"], [214, 2, 1, "", "batch_norm"], [205, 2, 1, "", "bilinear"], [208, 2, 1, "", "binary_cross_entropy"], [191, 2, 1, "", "conv1d"], [192, 2, 1, "", "conv2d"], [193, 2, 1, "", "conv3d"], [209, 2, 1, "", "cross_entropy"], [197, 2, 1, "", "drop_block"], [198, 2, 1, "", "drop_path"], [199, 2, 1, "", "dropout"], [200, 2, 1, "", "dropout1d"], [201, 2, 1, "", "dropout2d"], [202, 2, 1, "", "dropout3d"], [180, 2, 1, "", "elu"], [229, 2, 1, "", "embedding"], [181, 2, 1, "", "gelu"], [215, 2, 1, "", "global_response_norm"], [210, 2, 1, "", "huber_loss"], [217, 2, 1, "", "instance_norm"], [231, 2, 1, "", "interpolate"], [218, 2, 1, "", "layer_norm"], [183, 2, 1, "", "leaky_relu"], [207, 2, 1, "", "linear"], [226, 2, 1, "", "max_pool1d"], [227, 2, 1, "", "max_pool2d"], [228, 2, 1, "", "max_pool3d"], [212, 2, 1, "", "mse_loss"], [213, 2, 1, "", "nll_loss"], [184, 2, 1, "", "relu"], [232, 2, 1, "", "rotate"], [190, 2, 1, "", "scaled_dot_product_attention"], [185, 2, 1, "", "selu"], [186, 2, 1, "", "sigmoid"], [187, 2, 1, "", "softmax"], [188, 2, 1, "", "tanh"], [195, 2, 1, "", "unfold"]], "lucid.nn.init": [[242, 2, 1, "", "constant"], [244, 2, 1, "", "kaiming_normal"], [245, 2, 1, "", "kaiming_uniform"], [246, 2, 1, "", "normal"], [247, 2, 1, "", "uniform"], [248, 2, 1, "", "xavier_normal"], [249, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[333, 1, 1, "", "ASGD"], [334, 1, 1, "", "Adadelta"], [335, 1, 1, "", "Adagrad"], [336, 1, 1, "", "Adam"], [337, 1, 1, "", "AdamW"], [338, 1, 1, "", "Adamax"], [339, 1, 1, "", "NAdam"], [321, 1, 1, "", "Optimizer"], [340, 1, 1, "", "RAdam"], [341, 1, 1, "", "RMSprop"], [342, 1, 1, "", "Rprop"], [343, 1, 1, "", "SGD"]], "lucid.optim.lr_scheduler": [[323, 1, 1, "", "CosineAnnealingLR"], [324, 1, 1, "", "CyclicLR"], [325, 1, 1, "", "ExponentialLR"], [326, 1, 1, "", "LRScheduler"], [327, 1, 1, "", "LambdaLR"], [328, 1, 1, "", "MultiStepLR"], [329, 1, 1, "", "ReduceLROnPlateau"], [330, 1, 1, "", "StepLR"]], "lucid.random": [[350, 2, 1, "", "bernoulli"], [352, 2, 1, "", "rand"], [353, 2, 1, "", "randint"], [354, 2, 1, "", "randn"], [355, 2, 1, "", "seed"], [356, 2, 1, "", "uniform"]], "lucid.transforms": [[431, 1, 1, "", "CenterCrop"], [429, 1, 1, "", "Compose"], [432, 1, 1, "", "Normalize"], [433, 1, 1, "", "RandomCrop"], [434, 1, 1, "", "RandomGrayscale"], [435, 1, 1, "", "RandomHorizontalFlip"], [436, 1, 1, "", "RandomRotation"], [437, 1, 1, "", "RandomVerticalFlip"], [438, 1, 1, "", "Resize"], [430, 1, 1, "", "ToTensor"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"], "3": ["py", "method", "Python method"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function", "3": "py:method"}, "terms": {"": [3, 15, 16, 22, 24, 27, 71, 96, 97, 102, 104, 105, 106, 107, 108, 109, 154, 155, 156, 165, 169, 171, 172, 173, 174, 176, 177, 178, 190, 219, 220, 221, 240, 264, 286, 289, 300, 301, 302, 303, 306, 307, 312, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 346, 348, 363, 371, 390, 392, 400, 401, 404, 406, 407, 420, 422, 430, 432, 440], "0": [0, 1, 3, 4, 5, 6, 7, 8, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 31, 39, 40, 59, 60, 69, 70, 71, 72, 75, 77, 82, 86, 94, 130, 154, 156, 160, 165, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 205, 207, 208, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 318, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 378, 379, 381, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 394, 395, 396, 397, 400, 401, 402, 403, 405, 406, 407, 409, 410, 412, 414, 416, 417, 418, 421, 422, 423, 425, 426, 427, 428, 429, 431, 432, 433, 434, 435, 436, 437, 438, 440], "000": [5, 6, 7, 8, 157, 158, 372, 373], "0000": [286, 287, 289], "0001": [329, 333], "000e": [372, 373], "001": [324, 333, 336, 337, 339, 340, 343], "002": [338, 339], "004": 339, "005": 254, "006": 324, "008": [94, 154], "00808": 154, "01": [183, 254, 321, 323, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343], "01051757": 354, "011": [37, 154], "013": [57, 154], "016": [113, 154], "0205": 286, "0217": 286, "0227": 286, "024": [100, 135, 154], "026": [124, 154], "028": [129, 154], "0299": 286, "032": [69, 120, 154], "03545": 154, "044715": [181, 251], "0450": 286, "0451": 286, "046": [67, 154], "047": [147, 154], "04719755": 382, "0474259": 186, "048": [137, 154], "0480": 286, "04861": 154, "05": [214, 217, 218, 233, 234, 235, 254, 291, 292, 293, 295, 296, 297, 298, 312, 314, 316], "050": [154, 169], "0507": [185, 257], "06": [39, 77, 215, 294, 334, 342], "066": [51, 154], "069": [107, 118, 154], "07": [197, 208, 209, 271, 285, 286], "070": [102, 154], "0700": 286, "0706508": 261, "071": [113, 154], "0721": 286, "073": [143, 154], "07722396": 260, "0794": 289, "08": [329, 336, 337, 338, 339, 340, 341], "0802": 289, "083": [81, 154], "08333333": 24, "085537": 389, "088": [135, 154], "08955": 154, "0900": [259, 286], "096": [33, 151, 154], "0986": [187, 259], "09861229": 390, "0992": 286, "1": [0, 1, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 82, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 130, 136, 137, 138, 139, 140, 144, 145, 150, 152, 154, 155, 156, 160, 165, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 205, 207, 208, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 318, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 349, 350, 352, 353, 354, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 376, 377, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440], "10": [0, 1, 2, 3, 5, 6, 7, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 54, 86, 87, 88, 89, 104, 105, 106, 107, 108, 109, 110, 111, 145, 152, 153, 154, 155, 174, 175, 178, 192, 193, 205, 207, 219, 263, 266, 267, 268, 275, 276, 281, 283, 292, 293, 296, 300, 304, 305, 307, 312, 313, 314, 315, 316, 322, 325, 327, 328, 329, 335, 348, 353, 356, 357, 360, 363, 366, 367, 375, 384, 400, 431, 433, 434, 436], "100": [6, 29, 69, 70, 71, 72, 146, 147, 148, 149, 154, 323, 348, 440], "1000": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170], "1000000": 333, "1001": [113, 154, 286], "1003": 286, "1007": 154, "10096": 154, "101": [103, 104, 114, 121, 124, 125, 126, 127, 128, 131, 136, 137, 138, 154], "10106": 154, "1014": 185, "102": [118, 154], "1024": [33, 38, 158, 278], "1025": [175, 178], "1026": [175, 178], "1027": [175, 178], "10499": 186, "1050": 258, "1054": 289, "1056": [175, 178], "10590": 154, "107": [38, 154], "108": [70, 154], "1097": 154, "11": [102, 116, 133, 145, 146, 154, 205, 266, 267, 268, 275, 281, 292, 293, 296, 304, 305, 307, 363, 431, 432, 433, 434, 436], "110": [108, 154], "1105": 154, "1109": 154, "111": [63, 154], "1111": 285, "112": [96, 109, 154], "1134": 205, "114b": 434, "119": 205, "1192": [186, 187, 259], "12": [35, 36, 54, 55, 56, 57, 58, 64, 87, 88, 154, 157, 158, 160, 162, 163, 164, 165, 176, 205, 221, 266, 267, 268, 275, 276, 281, 292, 293, 296, 302, 304, 305, 307, 363, 367, 368, 431, 433, 434, 436], "120": [69, 86, 89, 96, 97, 154], "12000": [157, 158], "121": [54, 55, 154], "123": [244, 245, 246, 247, 248, 249, 355, 356], "124": [36, 154, 244, 245, 248, 249], "125": 305, "1250": 287, "1251": 154, "1258": 154, "126": [121, 154], "128": [30, 33, 39, 44, 67, 83, 112, 121, 122, 145, 154, 161, 178, 240, 429, 440], "1280": [36, 92], "128x128": [429, 440], "13": [74, 145, 147, 154, 205, 266, 267, 268, 281, 293, 304, 305, 307, 363, 431, 433, 434, 436], "1314": 154, "132": [146, 154], "1324": 154, "133": [147, 154], "136": [71, 102, 154], "138": [148, 154], "14": [32, 33, 34, 56, 105, 154, 266, 267, 268, 275, 276, 281, 293, 304, 305, 307, 349, 363, 367, 431, 433, 434, 436], "14030": 154, "1409": 154, "143": [149, 154], "144": 97, "145": 205, "148": [43, 154], "149": [56, 113, 154], "15": [0, 50, 154, 205, 266, 267, 268, 281, 293, 304, 305, 307, 363, 367, 404, 431, 433, 434, 436, 440], "1513": 289, "152": [101, 115, 132, 154], "1536": [34, 35, 37], "155": 363, "1556": 154, "156": [78, 154], "157": [34, 154], "1588": [181, 251], "16": [54, 55, 86, 89, 92, 96, 97, 124, 130, 145, 148, 154, 161, 165, 166, 167, 168, 169, 170, 175, 176, 178, 190, 220, 221, 233, 234, 235, 239, 240, 263, 264, 266, 267, 268, 275, 276, 278, 281, 292, 293, 301, 302, 304, 305, 307, 312, 313, 314, 315, 316, 320, 363, 367, 398, 431, 433, 434, 436], "160": [96, 114, 154], "16227766": 25, "16425": 289, "1643": 285, "166": 363, "167": 253, "169": [54, 56, 154], "16x16": 154, "17": [107, 154, 266, 267, 268, 281, 293, 305, 362, 431, 433, 434, 436], "170": 205, "1704": 154, "174": [31, 154], "17520119": 397, "177": [126, 154], "18": [88, 116, 133, 141, 154, 161, 162, 163, 266, 267, 268, 275, 281, 293, 305, 366, 367, 431, 433, 434, 436], "1800": 286, "184": 96, "18877099": 260, "19": [65, 145, 149, 154, 192, 193, 205, 267, 268, 293, 361, 363], "192": [31, 32, 34, 35, 37, 39, 40, 77, 87, 88, 115, 154, 162], "194": [124, 154], "196": [53, 154, 162], "1966": [187, 258, 259], "197": [42, 49, 154], "198": [96, 154], "199": [154, 167], "1998": [154, 286], "1_53": 154, "1d": [191, 219, 222, 226, 233, 236, 291, 295, 300, 356, 363, 371, 404, 415, 416, 417, 418, 424], "1e": [39, 77, 197, 208, 209, 214, 215, 217, 218, 233, 234, 235, 271, 285, 286, 291, 292, 293, 294, 295, 296, 297, 298, 312, 314, 316, 329, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "1e6": 333, "1s4x24d": 110, "1st": [28, 152], "2": [1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 59, 60, 69, 70, 71, 72, 87, 88, 89, 92, 96, 97, 103, 104, 105, 106, 107, 108, 109, 111, 116, 133, 141, 152, 154, 155, 160, 161, 162, 163, 164, 171, 172, 173, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 205, 207, 208, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 240, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 318, 320, 323, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 349, 350, 352, 353, 354, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440], "20": [0, 5, 6, 7, 8, 57, 154, 174, 175, 178, 267, 268, 275, 293, 313, 314, 322, 326, 328, 330, 367, 389], "200": [96, 106, 117, 154], "2004": 154, "201": [57, 106, 154], "2011": 239, "2012": 154, "2014": 154, "2015": 154, "2016": 154, "2017": [154, 312], "2018": [154, 239], "2019": 154, "2020": 154, "2021": 154, "2022": 154, "2023": [154, 239], "2024": 154, "2039": 289, "204": 268, "2048": [36, 37, 38, 156, 312, 314, 316], "21": [71, 119, 134, 154, 176, 205, 267, 268, 293, 367], "210": [72, 154], "2103": 154, "211": 363, "213": [154, 158], "21841": [48, 53], "22": [83, 151, 154, 169, 205, 267, 268, 275, 293, 361, 363], "2201": 154, "221": [72, 154], "2231": [286, 289], "224": [28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 94, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 122, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 152, 154, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170], "2247": [291, 292, 293, 295, 296, 297, 298], "224x224": [59, 74, 136, 137, 138, 139, 144], "226": 363, "22752314": 354, "2278": 154, "23": [104, 114, 121, 124, 125, 126, 127, 128, 131, 267, 268, 293], "2301": 154, "232": [94, 138, 154], "2324": [154, 257], "233": [47, 154], "234": [244, 245, 246, 247, 248, 249, 356], "235": [64, 154], "237": [154, 158], "238": [97, 154], "23840584": 260, "24": [54, 55, 92, 96, 97, 106, 110, 117, 160, 162, 163, 164, 205, 220, 267, 268, 275, 293, 301, 367], "240": [32, 47, 96, 97, 149, 154], "240x240": 59, "2424": [187, 259], "2447": 259, "246": [87, 154], "24d": 110, "25": [0, 110, 120, 129, 141, 154, 186, 198, 258, 268, 288, 293, 304, 305, 360, 375, 394, 406], "2500": [285, 287, 289], "2512": 250, "2547": 257, "256": [30, 33, 36, 38, 39, 112, 145], "258": [154, 163], "26": [107, 154, 176, 207, 268, 283, 293, 367], "260": 154, "260x260": 59, "26325684": 354, "264": [58, 154], "2689": [187, 258, 259], "26894142": 260, "269": [108, 118, 154], "27": [31, 109, 139, 154, 205, 266, 268, 293, 388], "272": [128, 154], "274": [104, 144, 154], "276": [244, 245, 248, 249], "277": [35, 154], "28": [35, 36, 44, 52, 81, 87, 88, 135, 154, 164, 205, 268, 367], "280": [51, 154], "288": [97, 106, 154, 164], "289": [48, 61, 154], "28x28": [7, 8, 87, 88], "29": [144, 154, 268], "299": [150, 154], "299r": 434, "299x299": [75, 76, 83, 84], "2_i": [295, 296, 297], "2c": 324, "2d": [192, 201, 220, 223, 227, 234, 237, 292, 296, 301, 363, 371, 374, 401, 404, 411, 415, 416, 418, 424, 436], "2e": 338, "2nd": [28, 152], "2x": 111, "2x2": [195, 431, 433], "3": [1, 2, 3, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 87, 92, 94, 95, 96, 97, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 152, 154, 160, 163, 164, 165, 171, 172, 173, 175, 176, 177, 178, 181, 186, 187, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 205, 207, 210, 212, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 318, 320, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 385, 387, 388, 389, 390, 391, 392, 393, 397, 398, 399, 400, 401, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438], "30": [66, 75, 108, 111, 118, 154, 175, 232, 268, 324, 328, 329, 436], "300": 154, "300x300": 59, "301": [35, 154], "302": [70, 154], "3026": 289, "304": [154, 168], "3072": [38, 165], "30823025": 260, "31": [205, 268, 363], "310": [372, 373], "31622777": 25, "319": 154, "32": [30, 54, 56, 57, 89, 98, 103, 104, 105, 106, 107, 108, 109, 124, 125, 126, 127, 129, 154, 161, 175, 178, 205, 207, 220, 233, 234, 235, 239, 240, 267, 268, 278, 283, 301, 320, 361, 362, 367], "320": [107, 154], "321": [244, 245, 248, 249], "326": [131, 154, 168], "32x16d": 154, "32x32": [5, 6, 86, 89], "32x32d": 154, "32x4d": [136, 139, 144, 154], "32x8d": [137, 154], "33": [58, 154, 175, 178, 207, 268, 283], "330": [32, 154], "33333333": 24, "336": [37, 42, 127, 146, 154], "337": [58, 154], "34": [119, 134, 142, 154, 175, 178, 205, 268, 363, 367], "342": [244, 245, 248, 249], "344": [65, 154], "345": [244, 245, 246, 247, 248, 249, 356], "35": [84, 154, 175, 178, 268], "350": [53, 154], "352": [74, 154], "354": [154, 164], "355": [68, 154], "3567": [285, 289], "357": [148, 153, 154], "36": [106, 115, 117, 132, 268], "3679": [180, 185, 250], "368": [141, 143, 154], "36th": 154, "37": [101, 154, 266], "370": [63, 154], "372": 205, "375": 288, "3750": 287, "37754067": 260, "378": [88, 154], "380": 154, "380x380": 59, "38344152": 352, "384": [31, 32, 34, 35, 37, 39, 40, 77], "38629436": 390, "389056": 389, "38th": 154, "392": [75, 154], "393": [66, 74, 154], "3935": 250, "3965": 154, "3977": 154, "3d": [193, 202, 221, 224, 228, 235, 238, 268, 293, 297, 302], "3x3": [154, 357], "4": [0, 1, 2, 3, 10, 12, 13, 14, 16, 17, 18, 19, 21, 23, 24, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 54, 59, 77, 78, 86, 87, 88, 94, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 134, 135, 142, 143, 154, 155, 160, 161, 162, 163, 164, 176, 178, 190, 191, 192, 193, 195, 197, 198, 200, 201, 202, 205, 207, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 236, 237, 238, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 281, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 318, 329, 333, 336, 340, 341, 343, 346, 349, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 377, 379, 385, 390, 391, 392, 393, 394, 396, 398, 399, 400, 401, 402, 404, 405, 406, 407, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 423, 424, 425, 426, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438], "40": [76, 92, 96, 97, 111, 154, 328], "400": [45, 89, 154, 167], "4044": 285, "4076": 286, "4096": [28, 152], "40d": 111, "41421356": 17, "416": [118, 136, 154, 170], "41666667": 24, "417": [111, 154], "41808962": 354, "419974": 188, "4199743": 261, "42": [37, 38, 205, 239, 349, 357], "421": [244, 245, 248, 249], "423": [244, 245, 246, 247], "42718872": 25, "4278": 154, "4284": 154, "4286": 285, "43": [67, 154, 361, 363], "431": [80, 154], "432": [66, 154], "4323": 250, "4375": 287, "43758721": 352, "44": [114, 126, 154], "440": [71, 154], "4472136": 19, "448": [68, 154], "4495": [293, 297], "45": [142, 154, 205, 232, 436], "4510": 154, "4520": 154, "4545": 270, "455": [128, 154], "456": 154, "456x456": 59, "46": [43, 154], "464": [41, 111, 154], "468": [125, 154], "4700": 154, "4708": 154, "47112767": 384, "472": [125, 154, 158], "476": [154, 162], "48": [54, 57, 58, 97, 104, 108, 118, 136, 154, 162, 207, 283], "480": [56, 96, 154], "481": [96, 154], "483": [109, 154], "49": [80, 131, 154, 163], "496": [52, 154], "4979": 250, "4s2x40d": [111, 154], "4x": 110, "4x4": 438, "5": [1, 2, 12, 13, 15, 16, 21, 22, 23, 24, 28, 31, 36, 39, 47, 59, 61, 75, 86, 87, 88, 89, 92, 96, 97, 140, 141, 142, 143, 152, 154, 155, 170, 172, 173, 174, 175, 176, 178, 181, 186, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 205, 207, 210, 212, 214, 217, 218, 219, 222, 223, 229, 231, 233, 234, 235, 240, 242, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 300, 303, 304, 305, 307, 308, 312, 314, 316, 322, 324, 326, 328, 329, 330, 342, 346, 349, 350, 353, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 373, 374, 375, 377, 379, 381, 382, 383, 391, 392, 393, 394, 395, 400, 401, 404, 405, 406, 407, 412, 415, 419, 420, 421, 425, 426, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440], "50": [5, 6, 103, 109, 110, 111, 112, 120, 122, 129, 135, 139, 143, 144, 154, 207, 283, 323, 342, 361, 363, 375, 434, 435, 437, 440], "5000": [156, 285, 287, 289], "504": [95, 154], "50_1s4x24d": 154, "510": 154, "5108": 289, "512": [30, 33, 36, 38, 39, 84, 99, 112, 116, 142, 154, 156, 157, 263, 312, 313, 314, 315, 316], "516": [33, 154], "519": 154, "520": [78, 154], "52359878": 383, "528": 154, "528x528": 59, "53": [32, 154, 205, 362], "530": [125, 154], "532": [154, 162], "536": [64, 154], "537": [97, 154], "543": [244, 245, 246, 247, 248, 249, 356], "54308063": 387, "544": [80, 148, 154, 157], "545": 368, "5455": 270, "549": [114, 154], "55": [70, 154], "557": [120, 154], "558": [37, 154], "559": [139, 154], "560": [62, 105, 154], "563": [244, 245, 248, 249], "567": [154, 166], "5672": 154, "568": [72, 154], "5683": 154, "569": [137, 154], "57": [143, 154, 205], "57079633": [382, 383], "5720": 154, "5730": 154, "57366333": 355, "576": 97, "584": [154, 157], "586": [76, 154], "587g": 434, "589": [44, 154], "590": [98, 154], "591": [41, 154], "592": [133, 154], "5987": 154, "5995": 154, "5998": 154, "5th": [28, 152], "6": [16, 24, 28, 30, 32, 33, 34, 37, 39, 54, 55, 56, 57, 58, 59, 77, 86, 89, 103, 109, 112, 119, 120, 122, 129, 134, 135, 142, 143, 152, 154, 156, 160, 162, 163, 164, 176, 177, 191, 192, 193, 195, 197, 202, 205, 207, 215, 219, 229, 245, 249, 252, 256, 266, 267, 268, 271, 273, 274, 275, 276, 281, 283, 285, 291, 292, 293, 294, 295, 296, 297, 298, 300, 304, 305, 307, 308, 312, 313, 315, 334, 342, 346, 349, 356, 359, 360, 361, 362, 363, 366, 367, 368, 369, 370, 371, 372, 373, 377, 379, 391, 392, 393, 400, 401, 404, 405, 406, 407, 409, 412, 418, 419, 420, 421, 425, 426, 428, 430, 431, 432, 433, 434, 436, 438], "60": [5, 6, 115, 154], "600": [59, 154], "6008": 154, "600x600": 59, "6052": 289, "606": [154, 163], "6065": 250, "608": [36, 153, 154], "61": [29, 89, 154], "6105": 154, "611": [105, 154], "6114": 154, "6124": [291, 292, 293, 295, 296, 297, 298], "617": [69, 154], "62": [153, 154, 157, 205], "623": [50, 154], "62686041": 397, "630": 154, "632": [35, 154, 167, 168], "6321": [180, 250], "63245553": 25, "635": [52, 154], "636": [61, 154], "64": [30, 39, 54, 58, 92, 96, 103, 104, 105, 106, 107, 108, 109, 112, 117, 128, 140, 145, 154, 175, 178, 205, 239, 240], "640": [48, 65, 154], "645": 154, "64589411": 352, "647": [141, 154], "64x4d": [138, 154], "654": [244, 245, 246, 247, 248, 249, 356], "656": [34, 154, 166], "657": [244, 245, 248, 249], "6590": [187, 259], "66": [68, 132, 154], "660": [48, 154], "664": [154, 169], "6652": 259, "66666667": 24, "6667": 285, "667": [149, 154], "6682": 285, "669": [117, 154], "67": 363, "672": [96, 119, 154], "67326": 257, "6733": 185, "676": [110, 154], "678": [244, 245, 246, 247, 248, 249], "688": [38, 154], "68811989": 354, "689": [116, 154], "69314718": 390, "696": [121, 154], "7": [10, 13, 23, 38, 55, 62, 145, 154, 160, 176, 191, 192, 193, 195, 197, 202, 205, 207, 208, 209, 219, 229, 240, 251, 256, 257, 258, 261, 266, 267, 268, 271, 275, 276, 281, 283, 285, 286, 288, 292, 293, 296, 297, 300, 304, 305, 307, 308, 349, 350, 353, 356, 359, 361, 362, 363, 367, 369, 371, 375, 389, 392, 400, 401, 404, 405, 406, 421, 424, 425, 426, 430, 431, 432, 433, 434, 436, 438], "70": [7, 8, 106, 154], "7001": 286, "704": [58, 126, 154], "706": [89, 154], "70710678": [19, 396], "708": [45, 154], "7132": 154, "7141": 154, "7147": 289, "715": [99, 154], "717": [46, 154, 170], "7182818": 389, "72": [92, 96, 97], "726791": 154, "7311": [187, 258, 259], "739": [83, 154], "74": 363, "748": [79, 154], "75": [207, 283, 288, 333, 375], "755": [101, 154], "7581": 185, "760": [104, 144, 154], "76159416": [260, 403], "7616": [188, 261], "76219569": 387, "7635": 257, "767": [42, 154], "768": [31, 32, 34, 35, 37, 39, 40, 77, 154, 161, 165], "770": [36, 154], "772": 368, "774": [100, 154], "778": [133, 154], "78": [122, 154], "78357324": 354, "78539816": 384, "790": [34, 154], "791": [127, 154], "79172504": 352, "792": [124, 154], "795": [62, 154], "797": [119, 154], "7x7": 152, "8": [22, 26, 37, 38, 54, 59, 108, 112, 115, 118, 124, 125, 126, 127, 128, 129, 132, 141, 142, 143, 155, 156, 161, 175, 176, 178, 190, 191, 192, 193, 195, 197, 202, 205, 207, 208, 219, 220, 221, 229, 233, 234, 235, 239, 251, 252, 257, 258, 261, 263, 264, 266, 267, 268, 271, 273, 274, 275, 276, 281, 283, 285, 288, 292, 293, 296, 297, 300, 301, 302, 304, 305, 307, 308, 312, 313, 314, 315, 316, 329, 336, 337, 338, 339, 340, 341, 349, 350, 353, 360, 361, 362, 363, 367, 368, 370, 371, 388, 392, 400, 401, 404, 405, 406, 421, 425, 426, 430, 431, 432, 433, 434, 436, 438], "80": [5, 6, 7, 8, 96], "800": [46, 50, 154], "8005": 286, "808": [115, 154], "817": [75, 154], "818": 154, "8182": 270, "82": [33, 154, 205], "821": [132, 154], "83": [128, 154], "832": [81, 154], "833": 154, "84": [86, 88, 89], "840": [29, 49, 79, 154], "8413": [181, 251], "847": [84, 154], "848": [132, 147, 154], "856": [55, 154], "85772238": 260, "8584": 257, "86": [79, 154, 166], "862": [151, 154], "863": [146, 154], "864": [98, 117, 154], "868": [134, 154], "87": [154, 161], "872": [95, 110, 131, 154], "876": [244, 245, 248, 249, 356], "88": [41, 46, 97, 127, 138, 154], "8808": [187, 258, 259], "884": [43, 154], "886": [121, 154], "887": 368, "891773": 352, "89442719": 19, "895": [142, 154], "896": [139, 154], "9": [0, 1, 3, 8, 26, 39, 40, 51, 63, 77, 99, 154, 192, 195, 197, 205, 207, 219, 229, 266, 267, 268, 271, 275, 281, 283, 285, 292, 293, 296, 300, 304, 305, 307, 322, 325, 333, 334, 336, 337, 338, 339, 340, 341, 343, 349, 350, 353, 356, 359, 363, 367, 368, 369, 371, 398, 399, 425, 426, 430, 431, 432, 433, 434, 436], "904": [129, 154], "90709145": 355, "9091": 270, "9120": 289, "9163": 289, "928": [57, 154], "929": [108, 154], "93": [137, 154], "94": 113, "944": [31, 154], "9486833": 25, "949e": [372, 373], "95": 327, "9526": 186, "9545": 251, "955": [136, 154], "956": [49, 154], "958": [134, 154], "96": [31, 32, 39, 40, 77, 97, 160], "960": 96, "96366276": 352, "9640": 261, "96402758": 403, "968": [53, 154], "973": [122, 154], "978": [38, 55, 154], "984": [76, 138, 154], "99": 341, "9957": 289, "99734545": 355, "999": [0, 336, 337, 338, 339, 340], "A": [1, 3, 5, 6, 7, 8, 10, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 39, 60, 82, 86, 90, 93, 103, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 145, 146, 147, 148, 149, 154, 160, 161, 162, 163, 164, 172, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 205, 207, 208, 209, 213, 214, 215, 217, 218, 231, 240, 264, 270, 271, 273, 274, 275, 276, 278, 285, 286, 289, 291, 292, 293, 294, 295, 296, 297, 298, 310, 312, 313, 314, 315, 316, 320, 321, 322, 327, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 347, 349, 350, 352, 353, 354, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 436], "As": 355, "At": [318, 329], "Be": [0, 10], "By": [0, 2, 3, 15, 93, 100, 113, 114, 115, 116, 117, 118, 119, 120, 173, 232, 320, 340, 346, 350, 352, 353, 354, 356, 430, 440], "For": [2, 3, 4, 13, 15, 17, 18, 19, 21, 22, 23, 24, 26, 98, 99, 100, 102, 178, 180, 181, 183, 184, 185, 186, 188, 205, 207, 231, 244, 245, 248, 249, 257, 266, 267, 268, 281, 283, 291, 292, 293, 295, 296, 297, 320, 332, 355, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 389, 390, 391, 392, 393, 396, 398, 400, 401, 404, 405, 406, 416, 418, 422, 424, 427, 440], "If": [0, 1, 2, 5, 6, 7, 8, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 112, 155, 172, 174, 175, 176, 177, 180, 181, 183, 184, 185, 186, 188, 190, 191, 192, 193, 198, 202, 205, 207, 214, 217, 220, 221, 229, 231, 232, 233, 234, 235, 236, 237, 238, 240, 244, 245, 263, 264, 266, 267, 268, 272, 281, 283, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 318, 321, 323, 324, 325, 326, 327, 328, 329, 330, 336, 337, 341, 342, 348, 350, 352, 353, 354, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 427, 428, 430, 434, 435, 437, 438], "In": [3, 15, 24, 191, 192, 193, 286, 289, 345, 346, 347, 429, 440], "It": [1, 2, 3, 7, 10, 15, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 52, 55, 56, 57, 58, 73, 74, 75, 86, 87, 88, 89, 91, 92, 94, 102, 112, 113, 114, 115, 116, 117, 118, 119, 120, 133, 145, 151, 154, 172, 174, 175, 176, 177, 178, 198, 202, 205, 229, 231, 232, 233, 234, 235, 239, 251, 252, 255, 256, 261, 263, 264, 272, 278, 281, 282, 285, 286, 287, 288, 289, 300, 301, 302, 310, 312, 313, 315, 318, 320, 321, 332, 333, 339, 341, 342, 343, 346, 355, 359, 360, 361, 364, 365, 366, 368, 369, 375, 391, 393, 410, 412, 415, 416, 417, 418, 419, 421, 422, 423, 424, 428, 429, 430], "Its": [26, 357], "Near": 24, "No": [195, 198], "Not": 282, "One": [87, 440], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 205, 207, 208, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440], "There": 419, "These": [4, 10, 15, 16, 19, 22, 25, 27, 30, 69, 70, 71, 72, 98, 99, 100, 101, 102, 121, 122, 141, 142, 143, 151, 154, 270, 273, 274, 275, 276, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 342, 349, 357, 440], "To": [3, 154, 322, 332, 350, 354, 357, 372, 373, 415, 440], "With": [3, 154, 195, 198, 430, 440], "_": [12, 13, 14, 22, 174, 175, 177, 178, 180, 181, 183, 184, 185, 186, 188, 207, 229, 231, 278, 292, 293, 295, 296, 297, 303, 304, 305, 306, 307, 308, 310, 333, 334, 336, 337, 338, 339, 341, 343, 361, 362, 363, 367, 404, 405, 425, 426, 431, 432, 433, 435, 436, 437], "_1": [19, 174, 175, 176, 177, 178, 205, 281, 367, 410, 412, 428], "_2": [19, 174, 175, 176, 177, 178, 205, 281, 367, 410, 412, 428], "__call__": [1, 172], "__getitem__": [0, 2, 3, 5, 6, 7, 8], "__init__": [0, 1, 2, 3, 15, 28, 30, 39, 40, 59, 60, 73, 77, 82, 86, 90, 91, 92, 93, 103, 145, 152, 155, 171, 172, 173, 174, 175, 176, 177, 198, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 270, 271, 272, 273, 274, 278, 281, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 320, 321, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 348, 358, 429, 430], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5, 6, 7, 8], "__repr__": 321, "__setattr__": 172, "_activ": 187, "_arraylik": [349, 371, 373, 377, 379], "_arraylikeint": 416, "_arrayorscalar": [171, 173, 349, 350, 358, 407], "_base_activ": 86, "_base_dtyp": [370, 372, 375, 376, 378], "_block": 271, "_c": 432, "_decai": 339, "_einopspattern": [12, 13, 14, 278], "_fanmod": [244, 245], "_grad_en": [345, 347], "_i": [19, 23, 187, 198, 205, 259, 272, 288, 291, 298, 303, 306, 361, 362, 364, 365, 367, 368, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 410, 412, 418, 422, 427, 428], "_in": [244, 245, 248, 249], "_interpolatetyp": 318, "_j": [187, 259, 303, 306, 367, 392, 400, 405, 406], "_k": 423, "_layer": [313, 315], "_left": 231, "_make_lay": 145, "_mlphead": 77, "_modul": 172, "_n": [19, 174, 175, 176, 177, 178, 410, 412, 428], "_numpyarrai": 349, "_out": [244, 245, 248, 249, 418, 424], "_p": [23, 229, 310], "_pad": 416, "_paddingstr": [233, 234, 235, 236, 237, 238, 266, 267, 268], "_paramet": 172, "_reducestr": 13, "_reductiontyp": [208, 209, 210, 212, 213, 285, 286, 287, 288, 289], "_resnestbottleneck": 103, "_right": 231, "_scalar": [190, 242, 246, 247, 248, 249, 264, 349, 370, 375, 385, 414], "_scaled_channel": 30, "_scaled_num_block": 30, "_seresnetbottleneck": [131, 132, 135], "_seresnetmodul": [133, 134], "_shapelik": [155, 218, 298, 349, 353, 376, 378, 408, 419, 422, 427], "_size": [219, 220, 221, 271], "_skresnetmodul": [141, 142, 143], "_slope": 254, "_statedict": 321, "_t": [340, 341], "_tensor": [171, 173, 263, 312, 314, 316, 371, 407], "_tensorop": 358, "_u": 24, "_v": 24, "_valu": [385, 416], "_weight": 310, "_width": 416, "a_": [30, 314], "a_1": [263, 421], "a_2": 421, "a_h": 263, "a_i": [263, 364, 365, 368, 421], "a_k": 421, "aaai": 154, "ab": [329, 380], "abc": [2, 321], "abil": [15, 154, 440], "about": [10, 15, 155], "abov": [15, 345, 347, 355, 371, 374, 425], "abs_pos_emb": 160, "absolut": [22, 23, 30, 160, 210, 329, 338, 381], "abstract": [2, 3, 320, 321, 332, 333, 341, 343], "abstractmethod": 321, "abund": [48, 101], "acceler": [154, 257, 291, 292, 293, 324, 333, 339, 341, 343], "accept": [282, 352, 358], "access": [0, 2, 3, 4, 5, 6, 7, 8, 124, 125, 126, 127, 128, 129, 171, 173, 174, 175, 176, 177, 178, 419], "accord": [12, 14, 198, 231, 266, 267, 268, 278, 281, 283, 286, 289, 334, 335, 336, 337, 338, 339, 340, 405, 408], "accordingli": [18, 401], "account": [22, 24, 25, 260], "accumul": [333, 334, 335, 359, 360, 364, 365, 366, 369, 408], "accur": 132, "accuraci": [46, 48, 49, 50, 51, 69, 70, 71, 72, 79, 81, 90, 91, 92, 98, 99, 100, 101, 102, 135, 154, 166, 167, 168], "achiev": [12, 123, 124, 125, 126, 127, 128, 129, 154, 191, 192, 193, 219, 278, 300, 301, 302, 339, 435, 437], "across": [0, 5, 6, 10, 12, 13, 30, 39, 52, 94, 154, 171, 175, 178, 215, 218, 219, 220, 221, 248, 249, 291, 292, 293, 295, 296, 297, 298, 300, 301, 302, 349, 350, 352, 353, 354, 355, 356, 357, 372, 373, 392, 406], "act": [337, 420], "activ": [15, 28, 39, 86, 96, 97, 113, 117, 118, 130, 145, 152, 154, 174, 178, 180, 181, 183, 184, 185, 186, 187, 188, 196, 233, 234, 235, 239, 240, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 270, 271, 273, 274, 275, 276, 285, 286, 289, 291, 292, 293, 298, 312, 314, 316, 391, 393], "actual": [173, 285, 286, 288, 289, 358, 433], "ad": [14, 54, 92, 112, 172, 174, 175, 176, 177, 178, 191, 192, 193, 197, 205, 207, 208, 209, 214, 215, 217, 218, 222, 223, 224, 226, 227, 228, 233, 234, 235, 263, 266, 267, 268, 271, 285, 286, 291, 292, 293, 294, 295, 296, 297, 298, 303, 304, 305, 306, 307, 308, 312, 314, 316, 334, 335, 336, 337, 338, 339, 340, 341, 348, 427, 440], "adadelta": 344, "adagrad": [334, 344], "adam": [154, 337, 338, 339, 340, 344], "adamax": 344, "adamw": 344, "adapt": [10, 28, 73, 86, 98, 101, 103, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152, 154, 219, 220, 221, 239, 240, 300, 301, 302, 325, 329, 334, 335, 336, 339, 340, 341, 342], "adaptive_avg_pool1d": [204, 225, 300], "adaptive_avg_pool2d": [204, 225, 301], "adaptive_avg_pool3d": [204, 225, 302], "adaptiveavgpool1d": [280, 309], "adaptiveavgpool2d": [28, 130, 145, 152, 280, 309], "adaptiveavgpool3d": [280, 309], "add": [4, 172, 174, 175, 178, 205, 207, 263, 266, 267, 268, 281, 283, 298, 321, 333, 336, 341, 343, 346, 380, 416, 427], "add_bias_kv": 263, "add_modul": [172, 178], "add_param_group": 321, "add_zero_attn": 263, "addit": [4, 15, 22, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 161, 162, 163, 164, 166, 167, 168, 169, 170, 172, 175, 178, 205, 207, 214, 217, 281, 283, 291, 292, 293, 295, 296, 297, 333, 339, 346, 357, 359, 423], "addition": 339, "address": [286, 289, 336, 337, 340], "adjust": [83, 90, 92, 94, 102, 136, 137, 138, 139, 140, 144, 219, 220, 221, 240, 270, 271, 291, 292, 293, 295, 296, 297, 298, 300, 301, 302, 322, 323, 326, 327, 328, 329, 330, 332, 336, 340, 341, 342, 412, 428], "advanc": [3, 24, 60, 77, 91, 101, 117, 154, 175, 178, 191, 192, 193, 219, 220, 221, 300, 301, 302, 320, 333], "advantag": [84, 347], "affect": [345, 417, 422, 429], "affin": [233, 234, 235, 291, 292, 293, 295, 296, 297, 298, 436], "after": [10, 14, 22, 28, 96, 97, 152, 160, 173, 174, 175, 176, 177, 178, 202, 239, 240, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 267, 268, 270, 273, 274, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 295, 298, 303, 304, 305, 306, 307, 308, 312, 314, 316, 322, 329, 337, 347, 358, 359, 360, 364, 365, 366, 368, 369, 375, 416, 421, 430], "afterward": 347, "aggreg": [10, 154, 240, 367, 418, 424], "aim": [4, 15], "al": [74, 154, 312], "alex": [5, 6, 154], "alexei": 154, "alexnet": [85, 152, 154], "algebra": [15, 16, 374], "algorithm": [7, 15, 22, 24, 25, 321, 332, 357], "align": [10, 26, 101, 231, 318, 362, 363, 401], "align_corn": [231, 318], "all": [0, 3, 4, 15, 25, 59, 154, 172, 174, 175, 176, 177, 178, 192, 193, 219, 220, 221, 223, 224, 227, 228, 231, 234, 235, 240, 254, 255, 263, 268, 300, 301, 302, 304, 305, 308, 312, 320, 321, 326, 332, 333, 336, 341, 342, 343, 368, 391, 392, 393, 400, 404, 406, 410, 411, 412, 418, 422, 423, 424, 425, 426, 428, 431, 432, 440], "allevi": [154, 180], "alloc": [372, 373], "allow": [0, 1, 3, 4, 10, 12, 15, 24, 25, 84, 86, 93, 96, 97, 99, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 123, 136, 137, 138, 139, 140, 144, 154, 160, 163, 164, 173, 174, 175, 176, 177, 178, 180, 183, 184, 187, 193, 195, 232, 240, 250, 251, 254, 257, 258, 259, 261, 264, 266, 267, 268, 278, 310, 318, 320, 322, 323, 325, 327, 329, 334, 335, 346, 370, 376, 378, 379, 401, 405, 407, 415, 429, 430, 440], "along": [10, 13, 14, 187, 231, 240, 259, 362, 363, 367, 391, 392, 393, 400, 404, 406, 408, 409, 410, 412, 415, 418, 420, 421, 423, 424, 427, 428, 435, 437], "alongsid": 171, "alpha": [180, 183, 185, 196, 250, 257, 270, 333, 341], "alpha_dropout": [203, 204, 270], "alphadropout": [277, 280], "alphadropoutmodel": 270, "alreadi": 348, "also": [155, 180, 181, 183, 184, 185, 186, 188, 205, 207, 231, 339, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 373, 378, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 408, 410, 412, 416, 417, 418, 419, 422, 423, 424, 427, 428], "alter": [178, 419, 420], "altern": [1, 251, 334, 363], "alwai": [10, 173, 322, 414, 417, 434, 435, 437], "among": [75, 240], "amount": [191, 192, 193, 222, 223, 224, 226, 227, 228, 236, 237, 238, 339], "ampl": 98, "amsgrad": [336, 337], "an": [0, 1, 3, 10, 12, 13, 14, 15, 19, 21, 22, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 91, 94, 95, 96, 97, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 151, 152, 153, 154, 155, 157, 158, 161, 162, 163, 164, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 181, 191, 192, 193, 195, 196, 199, 200, 201, 202, 205, 220, 221, 229, 231, 232, 236, 237, 238, 240, 248, 249, 250, 256, 258, 263, 266, 267, 268, 270, 272, 273, 274, 275, 276, 278, 281, 283, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 312, 313, 315, 316, 321, 322, 327, 332, 333, 336, 339, 341, 347, 348, 349, 358, 363, 371, 374, 385, 392, 400, 406, 408, 410, 418, 421, 424, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440], "analog": [418, 424], "analysi": [4, 239, 266, 267, 268, 297, 303, 305, 306, 308], "andreetto": 154, "andrew": 154, "angl": [232, 436], "ani": [0, 1, 2, 3, 12, 22, 24, 29, 112, 140, 151, 153, 171, 172, 173, 174, 176, 177, 180, 181, 183, 184, 185, 186, 188, 196, 199, 205, 207, 214, 217, 258, 278, 298, 320, 321, 326, 345, 347, 348, 355, 358, 370, 371, 372, 374, 376, 377, 378, 379, 391, 393, 405, 407, 410, 411, 412, 416, 418, 423, 424, 427, 428, 429, 440], "anneal": 323, "anoth": [93, 177, 369, 377, 379, 430, 440], "api": [4, 300, 301, 302, 440], "appear": 321, "append": [175, 177, 178, 263], "appli": [2, 4, 5, 6, 7, 8, 10, 12, 13, 15, 22, 28, 30, 39, 59, 60, 77, 123, 140, 150, 152, 154, 156, 160, 165, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 193, 195, 196, 197, 198, 199, 200, 201, 202, 205, 207, 208, 209, 210, 212, 213, 215, 233, 234, 235, 239, 240, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 281, 283, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 312, 313, 314, 315, 316, 326, 327, 333, 334, 335, 337, 338, 339, 340, 363, 416, 418, 425, 426, 429, 432, 434, 435, 436, 437, 438, 440], "applic": [4, 10, 13, 24, 41, 42, 43, 46, 48, 53, 54, 80, 83, 84, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 154, 170, 191, 217, 266, 267, 268, 281, 283, 357, 370, 378, 416, 421, 425, 426, 438], "approach": [3, 10, 12, 14, 82, 178, 278, 323, 337], "appropri": [24, 92, 96, 97, 154, 172, 176, 178, 198, 266, 267, 268, 270, 273, 274, 286, 304, 305, 345, 347], "approx": 185, "approxim": [24, 181, 251, 252, 253, 304, 307], "ar": [1, 2, 3, 4, 13, 14, 15, 18, 19, 21, 22, 24, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 69, 70, 71, 72, 73, 74, 75, 98, 100, 101, 154, 171, 172, 173, 174, 175, 176, 177, 178, 187, 191, 192, 193, 195, 198, 205, 207, 215, 220, 221, 229, 231, 236, 237, 238, 239, 240, 244, 245, 247, 248, 249, 252, 259, 263, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 281, 283, 286, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 316, 318, 320, 324, 328, 333, 336, 337, 339, 340, 341, 342, 343, 345, 347, 348, 349, 352, 353, 354, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 373, 375, 381, 385, 389, 391, 392, 393, 394, 395, 400, 401, 404, 405, 408, 409, 410, 415, 418, 419, 420, 421, 424, 425, 426, 429, 430, 431, 433, 434, 438, 440], "arang": 380, "arbitrari": [175, 282, 372, 373, 385, 390, 392, 396, 398, 400, 405, 406], "arcco": 380, "arch": 348, "architectur": [10, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 161, 162, 163, 164, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 181, 239, 252, 253, 255, 260, 263, 264, 278, 281, 282, 312, 320, 348], "arcsin": 380, "arctan": 380, "area": [231, 318], "arg": [172, 282, 348, 372], "argument": [3, 4, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 86, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 172, 178, 282, 352, 372, 405], "around": [19, 232, 261], "arr": [349, 410, 412, 423, 428], "arrai": [15, 171, 173, 346, 349, 358, 363, 371, 377, 379, 407, 417, 418, 430, 440], "art": [48, 154, 167], "artifici": 154, "arxiv": 154, "asarrai": 349, "asgd": 344, "ashish": 154, "aspect": 438, "assign": [172, 174, 176, 178, 231, 286, 289, 414], "assist": [73, 74, 75], "associ": [176, 177], "assum": [0, 1, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 321, 332, 345], "attempt": [174, 178], "attend": [190, 264, 313, 315, 316], "attent": [30, 103, 110, 111, 140, 154, 156, 160, 161, 162, 163, 164, 165, 177, 205, 239, 263, 264, 312, 313, 314, 315, 316], "attn": [190, 264], "attn_drop_r": 160, "attn_mask": [190, 264], "atto": [45, 78, 154], "attribut": [172, 322], "audio": 266, "augment": [3, 4, 133, 232, 357, 418, 424, 429, 433, 434, 435, 436, 437, 440], "autodiff": 15, "autoencod": 154, "autograd": 320, "automat": [4, 15, 173, 174, 175, 176, 177, 320, 350, 352, 353, 354, 356, 358, 372, 373, 379, 415, 430], "autoregress": [190, 264], "auxiliari": [73, 74, 75, 171], "avail": [4, 5, 6, 7, 8, 15], "avd": 103, "averag": [13, 28, 87, 88, 89, 103, 112, 123, 130, 140, 145, 152, 171, 219, 220, 221, 222, 223, 224, 231, 239, 240, 288, 300, 301, 302, 303, 304, 305, 333, 334, 336, 341, 392], "avg_down": 112, "avg_pool": [303, 304, 305], "avg_pool1d": [204, 225], "avg_pool2d": [204, 225], "avg_pool3d": [204, 225], "avgpool": [28, 130, 145, 152, 240], "avgpool1d": [280, 309], "avgpool1dmodel": 303, "avgpool2d": [280, 309], "avgpool2dmodel": 304, "avgpool3d": [280, 309], "avgpool3dmodel": 305, "avoid": [2, 3, 12, 13, 24, 60, 176, 278, 324, 347, 375], "ax": [10, 12, 13, 14, 16, 278, 346, 391, 392, 393, 400, 401, 405, 406, 408, 418, 422, 424], "axi": [13, 23, 187, 259, 362, 363, 391, 392, 393, 400, 406, 409, 410, 412, 415, 416, 418, 420, 421, 422, 423, 424, 427, 428, 435, 437], "axis1": 401, "axis2": 401, "b": [12, 13, 14, 16, 26, 30, 154, 166, 205, 207, 247, 266, 267, 268, 278, 281, 283, 346, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 408, 410, 412, 415, 423, 428, 434], "b0": [59, 61, 154], "b1": [59, 62, 154], "b2": [59, 63, 154], "b3": [59, 64, 154], "b4": [59, 65, 154], "b5": [59, 66, 154], "b6": [59, 67, 154], "b7": [59, 68, 154], "b_": 30, "b_1": [314, 316], "b_2": [314, 316], "b_i": [364, 365, 368], "b_k": 263, "b_v": 263, "back": [231, 263, 304, 305, 348, 362, 367, 409, 418, 424], "backbon": [141, 142, 143], "backpropag": [10, 15, 18, 19, 21, 22, 24, 25, 27, 154, 171, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 205, 207, 231, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 266, 267, 268, 270, 271, 273, 274, 275, 276, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 303, 304, 305, 306, 307, 308, 310, 320, 347, 354, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 389, 391, 393, 407, 408, 409, 414, 416, 418, 420, 424, 425, 426, 430], "backward": [15, 171, 173, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 358, 375, 409, 414, 420, 430], "balanc": [31, 32, 33, 34, 35, 36, 37, 38, 43, 46, 47, 50, 60, 69, 70, 71, 72, 81, 92, 93, 99, 100, 102, 124, 125, 126, 127, 128, 129, 154, 166, 169, 287], "bar": 333, "base": [3, 12, 13, 16, 21, 22, 25, 26, 30, 41, 44, 46, 54, 73, 74, 75, 76, 79, 82, 83, 84, 86, 93, 99, 100, 102, 103, 110, 111, 123, 124, 125, 126, 127, 128, 129, 140, 145, 150, 154, 156, 157, 160, 161, 166, 170, 172, 174, 175, 176, 177, 190, 195, 205, 219, 220, 221, 240, 264, 270, 278, 286, 287, 300, 301, 302, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 337, 341, 342, 343, 350, 359, 360, 364, 365, 366, 368, 369, 379, 389, 390, 391, 393, 405, 415, 416, 421, 433, 434, 435, 436, 437], "base_lr": 324, "base_width": [103, 104, 105, 106, 107, 108, 109, 121, 122, 123, 140], "basic": [15, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 150, 152, 155, 190, 191, 192, 193, 197, 198, 219, 220, 221, 229, 233, 234, 235, 236, 237, 238, 239, 244, 245, 248, 249, 264, 271, 300, 301, 302, 310, 375, 408, 431, 432, 433, 434, 435, 436, 437, 438], "basicblock": [112, 116, 119], "batch": [1, 2, 3, 14, 16, 22, 25, 27, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 76, 77, 83, 84, 130, 136, 137, 138, 139, 144, 190, 191, 192, 193, 195, 200, 201, 202, 205, 207, 208, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 231, 232, 233, 234, 235, 263, 264, 266, 267, 268, 281, 283, 285, 286, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 304, 305, 306, 307, 308, 312, 313, 314, 315, 316, 340, 363, 401, 431, 432, 433, 434, 436, 438], "batch_norm": [204, 216, 291, 292, 293], "batch_norm1": 178, "batch_norm2": 178, "batch_siz": [1, 2, 3, 150, 240], "batch_tensor": 401, "batchnorm": [233, 234, 235], "batchnorm1d": [233, 280, 299], "batchnorm1dmodel": 291, "batchnorm2d": [178, 234, 280, 299], "batchnorm2dmodel": 292, "batchnorm3d": [235, 280, 299], "batchnorm3dmodel": 293, "bceloss": [280, 290], "becaus": [2, 353], "becom": [23, 172, 334, 342], "been": [260, 414], "befor": [10, 14, 22, 30, 130, 155, 173, 190, 264, 312, 314, 316, 323, 329, 333, 339, 347, 355, 416, 420, 432, 440], "begin": [1, 23, 180, 183, 184, 185, 198, 250, 252, 253, 254, 255, 257, 272, 287, 288, 289, 303, 304, 305, 306, 307, 308, 340, 342, 346, 357, 364, 365, 367, 381, 385, 391, 393, 395, 414, 416, 425, 426], "behav": [272, 287, 404], "behavior": [10, 154, 175, 178, 190, 264, 326, 345, 357, 363, 373, 440], "being": [177, 232, 270, 273, 274, 275, 276, 340, 345, 347, 409, 410, 412, 428], "belong": 0, "below": [25, 31, 32, 33, 34, 35, 36, 37, 38, 74, 75, 76, 83, 84, 86, 87, 88, 89, 363, 371, 374, 426], "benchmark": [5, 6, 7, 8, 101], "benefici": 178, "benefit": [102, 180, 320, 339, 349], "bernoulli": [270, 273, 274, 275, 276, 351], "best": [101, 244, 245, 248, 249], "beta": [215, 291, 292, 293, 294, 295, 296, 297, 298, 336, 337, 338, 339, 340], "beta1": [336, 337, 338, 339, 340], "beta2": [336, 337, 338, 339, 340], "beta_1": [336, 337, 338, 339, 340], "beta_2": [336, 337, 338, 339, 340], "beta_c": [215, 294], "better": [21, 100, 152, 154, 181, 244, 245, 248, 249, 260, 271, 295, 296, 297, 320, 329, 330, 337, 339, 341, 432], "between": [43, 46, 50, 69, 70, 71, 72, 81, 93, 99, 100, 102, 124, 125, 126, 127, 128, 129, 154, 166, 169, 172, 191, 192, 193, 195, 205, 210, 233, 234, 235, 236, 237, 238, 240, 256, 266, 267, 268, 270, 273, 274, 275, 276, 281, 285, 286, 287, 288, 289, 324, 329, 330, 333, 341, 342, 343, 357, 359, 360, 363, 366, 369, 370, 375, 406, 434, 435, 437, 438], "beyond": [10, 15, 175, 329], "bia": [30, 160, 191, 192, 193, 205, 207, 214, 217, 218, 233, 234, 235, 236, 237, 238, 263, 266, 267, 268, 281, 283, 291, 292, 293, 295, 296, 297, 298, 312, 314, 316, 336, 337, 338, 339, 340], "bias": [266, 267, 268, 283, 298, 320], "bias1": 176, "bias2": 176, "big": [154, 236, 237, 238], "bilinear": [204, 206, 231, 280, 284, 318], "bilinearmodel": 281, "binari": [186, 208, 258, 270, 273, 274, 275, 276, 285], "binary_cross_entropi": [204, 211], "blend": 102, "block": [30, 31, 32, 33, 34, 35, 36, 37, 38, 54, 55, 56, 57, 58, 59, 60, 77, 82, 91, 92, 93, 95, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 154, 160, 161, 162, 163, 164, 165, 172, 195, 197, 198, 233, 234, 235, 240, 266, 267, 268, 271, 347], "block1": [155, 320], "block2": [155, 320], "block_arg": [112, 130], "block_cfg": 60, "block_config": 54, "block_siz": [197, 271], "block_typ": 30, "blue": 434, "bmatrix": 367, "bn": [233, 234, 235], "bn_affin": [233, 234, 235], "bool": [1, 5, 6, 7, 8, 23, 27, 59, 73, 74, 75, 103, 112, 155, 160, 172, 173, 190, 196, 198, 199, 200, 201, 202, 214, 217, 231, 233, 234, 235, 236, 237, 238, 263, 264, 266, 267, 268, 272, 281, 283, 291, 292, 293, 295, 296, 297, 298, 312, 313, 314, 315, 316, 318, 323, 324, 325, 326, 327, 328, 329, 330, 336, 337, 341, 345, 350, 352, 353, 354, 356, 358, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 391, 392, 393, 400, 406, 407, 430], "boolean": 414, "boost": 98, "both": [30, 93, 160, 161, 162, 163, 164, 191, 207, 220, 222, 226, 233, 251, 260, 266, 267, 301, 303, 304, 306, 307, 316, 318, 361, 362, 363, 367, 371, 415, 421, 438], "bottleneck": [54, 91, 92, 95, 112, 113, 114, 115, 117, 118, 120, 121, 122, 123, 154, 239], "bottleneck_cfg": 92, "bottom": 231, "bound": [245, 247, 249, 324, 342, 356], "box": 4, "branch": [73, 74, 75, 154, 240], "break": [10, 320], "brief": 440, "bright": 440, "bring": [10, 278], "broadcast": [14, 275, 276, 392, 400, 406, 419, 427], "broadcast_to": 413, "budget": 50, "buffer": [333, 339, 341, 343], "build": [15, 40, 60, 84, 92, 93, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 140, 141, 142, 143, 154, 156, 172, 175, 178, 320, 440], "built": [3, 15, 113, 117, 118, 178, 320], "burg": 8, "c": [5, 6, 8, 12, 30, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 154, 195, 197, 200, 201, 202, 209, 213, 214, 215, 217, 219, 220, 221, 222, 223, 224, 226, 227, 228, 231, 232, 239, 275, 276, 278, 286, 289, 291, 292, 293, 294, 295, 296, 297, 300, 301, 302, 303, 304, 305, 306, 307, 308, 324, 346, 412, 428, 432], "c_": [266, 267, 268], "c_in": [191, 192, 193, 233, 234, 235], "c_out": [191, 192, 193], "calcul": [0, 1, 15, 16, 173, 318, 334, 335, 338, 339, 340, 347, 353, 358], "calculu": [17, 24], "call": [1, 172, 322, 345, 348, 359, 360, 363, 364, 365, 366, 368, 369], "callabl": [312, 314, 316, 321, 324, 327, 348, 429], "can": [0, 2, 3, 4, 12, 13, 15, 17, 19, 21, 22, 24, 25, 27, 59, 92, 98, 99, 101, 102, 112, 121, 122, 136, 137, 138, 139, 150, 151, 154, 155, 171, 173, 174, 175, 176, 177, 178, 183, 191, 192, 193, 198, 232, 240, 251, 254, 256, 261, 266, 267, 268, 295, 296, 297, 304, 305, 306, 307, 308, 310, 313, 320, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 345, 346, 347, 349, 356, 357, 358, 363, 372, 373, 374, 376, 378, 379, 392, 400, 401, 406, 408, 412, 415, 416, 418, 419, 424, 427, 428, 429, 430, 433, 435, 436, 437, 440], "cannot": [18, 19, 21, 22, 25, 26, 27, 350, 409], "cap": 256, "capabl": [10, 15, 30, 52, 110, 111, 370, 371, 374, 376, 377, 378, 379], "capac": [41, 42, 43, 49, 53, 90, 98, 121, 122, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144, 154, 158, 167], "captur": [30, 140, 154, 160, 161, 162, 163, 164, 195, 266, 267, 268, 281], "cardin": [103, 104, 105, 106, 107, 108, 109, 110, 111, 123, 124, 125, 126, 127, 128, 129, 140, 154], "care": 347, "carefulli": 322, "cartesian": 415, "case": [3, 23, 86, 92, 94, 180, 183, 184, 185, 198, 250, 252, 253, 254, 255, 257, 272, 287, 288, 289, 303, 304, 305, 306, 307, 308, 320, 328, 335, 340, 342, 346, 364, 365, 381, 385, 391, 393, 395, 414, 416, 425, 426, 440], "categor": [229, 310], "categori": [7, 113, 114, 115, 116, 117, 118, 119, 120, 310], "caus": [3, 24, 322, 333, 341, 343], "causal": [190, 264], "cautiou": [0, 10], "cdot": [17, 18, 21, 22, 23, 26, 180, 181, 183, 185, 186, 190, 191, 192, 193, 205, 207, 215, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 239, 248, 249, 251, 252, 253, 258, 260, 264, 270, 281, 283, 285, 286, 287, 289, 291, 292, 293, 294, 295, 296, 297, 298, 310, 323, 324, 325, 327, 328, 330, 334, 335, 336, 337, 338, 339, 340, 342, 361, 362, 363, 366, 368], "center": [232, 261, 341, 431, 440], "centercrop": [439, 440], "central": 349, "certain": [18, 181, 190, 205, 260, 264, 281, 316, 329, 336, 337, 345, 391, 393], "cfg": [93, 96, 97], "chain": [21, 22, 178, 429, 440], "challeng": [7, 154], "cham": 154, "chanc": [434, 435, 437], "chang": [10, 210, 287, 328, 342, 346, 347, 348, 417, 419, 427, 434, 440], "channel": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 54, 59, 86, 87, 88, 89, 90, 92, 94, 96, 97, 103, 110, 111, 112, 123, 124, 125, 126, 127, 128, 129, 134, 136, 137, 138, 139, 144, 145, 150, 154, 160, 191, 192, 193, 195, 200, 201, 202, 214, 215, 217, 219, 220, 221, 222, 223, 224, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 266, 267, 268, 275, 276, 291, 292, 293, 294, 295, 296, 297, 300, 303, 304, 305, 306, 307, 308, 432, 434, 438], "character": [121, 122], "check": [345, 431, 433], "checkpoint": 332, "chen": 154, "choic": [100, 102, 415], "choleski": 20, "chollet": 154, "choos": 154, "chosen": [270, 271, 322], "christian": 154, "christoph": 8, "chu": 154, "chunk": 413, "cifar": [5, 6], "cifar10": 9, "cifar100": 9, "cifar100_train": 6, "cifar10_train": 5, "clariti": [12, 13, 14, 349], "class": [3, 4, 15, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 155, 157, 158, 161, 162, 163, 164, 166, 167, 168, 169, 170, 187, 198, 209, 213, 320, 332, 348, 371, 374, 375, 407, 440], "classic": 89, "classif": [4, 5, 6, 7, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 186, 187, 208, 209, 213, 258, 259, 285, 286, 289], "classifi": [28, 73, 74, 75, 86, 87, 88, 89, 112, 123, 140, 145, 150, 152], "cleaner": [1, 347, 363], "clear": [173, 358, 372, 373, 375], "clearli": 349, "clf_in_featur": 86, "clf_layer": 86, "clip": [232, 252, 256, 342, 380], "clockwis": 232, "close": [21, 24, 257, 285, 341], "closer": 250, "closur": [321, 332], "cloth": 7, "cnn": [30, 154], "co": [154, 323, 380, 396], "coatnet": [31, 32, 33, 34, 35, 36, 37, 38, 85, 154], "coatnet_0": 154, "coatnet_1": 154, "coatnet_2": 154, "coatnet_3": 154, "coatnet_4": 154, "coatnet_5": 154, "coatnet_6": 154, "coatnet_7": 154, "code": [10, 22, 174, 176, 178, 345, 347, 349, 357], "coeffici": [26, 59, 231, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343], "col": 195, "collaps": 10, "collect": [4, 16, 154, 174, 175, 177, 178, 332], "color": [434, 440], "colorjitt": 440, "column": [18, 19, 21, 25, 26, 27, 155, 195, 374, 412, 415], "com": [7, 8], "combin": [1, 3, 12, 30, 76, 82, 83, 102, 144, 154, 175, 178, 180, 181, 233, 234, 235, 239, 240, 251, 271, 278, 286, 320, 339, 340, 392, 400, 406, 410, 440], "combined_dataset": [0, 1], "common": [161, 162, 163, 164, 195, 232, 332, 440], "commonli": [15, 90, 91, 92, 94, 95, 96, 97, 100, 102, 181, 186, 187, 188, 191, 193, 198, 205, 212, 214, 217, 229, 232, 239, 248, 249, 252, 253, 256, 259, 264, 268, 285, 288, 289, 303, 304, 305, 306, 307, 308, 310, 312, 346, 349, 376, 422, 430, 431, 432, 433, 435, 436, 437, 440], "compact": [44, 45, 47, 52, 81, 100], "compar": [30, 43, 44, 121, 122, 152, 154, 357, 423], "compat": [4, 10, 16, 140, 278, 282, 298, 320, 346, 357, 375, 408, 430, 440], "competit": [45, 51, 52], "complet": [156, 312, 313, 315], "complex": [2, 3, 10, 15, 19, 30, 42, 48, 53, 84, 101, 112, 115, 118, 119, 132, 134, 155, 158, 174, 175, 178, 184, 255, 306, 308, 320, 327, 332, 440], "compon": [24, 73, 74, 75, 76, 82, 83, 84, 156, 172, 175, 332, 358, 440], "compos": [5, 6, 7, 8, 150, 266, 267, 268, 303, 304, 305, 306, 307, 308, 320, 440], "compound": 60, "comprehens": 3, "compris": [121, 122], "compromis": [99, 102], "comput": [10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 43, 44, 45, 47, 48, 50, 51, 78, 81, 90, 92, 93, 96, 97, 98, 99, 100, 101, 102, 110, 111, 112, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 144, 154, 160, 167, 168, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 195, 205, 207, 208, 209, 210, 212, 213, 214, 215, 217, 219, 220, 221, 231, 233, 234, 235, 236, 237, 238, 239, 240, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 270, 271, 273, 274, 275, 276, 281, 283, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 303, 304, 305, 306, 307, 308, 312, 313, 314, 315, 316, 320, 321, 323, 324, 325, 326, 327, 328, 330, 332, 333, 341, 345, 346, 347, 349, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 415, 416, 418, 424, 430, 440], "computation": [3, 12, 24, 113, 252, 253, 278], "compute_grad": 409, "compute_loss": [332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "concat": 263, "concaten": [0, 191, 192, 193, 263, 412, 413, 423, 428], "concept": [15, 24, 91, 154], "concis": [10, 12, 14], "condit": [17, 18, 21], "confer": 154, "config": 145, "configur": [29, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 153, 158, 161, 162, 163, 164, 166, 167, 168, 169, 170, 177, 233, 234, 235, 264], "conjunct": [195, 289], "connect": [28, 39, 54, 55, 56, 57, 58, 59, 60, 76, 82, 83, 84, 86, 87, 88, 89, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 145, 150, 152, 154, 207, 239, 240, 266, 267, 268, 283, 314, 316], "consecut": 145, "consid": [3, 21, 24, 54, 98, 99, 100, 102, 178, 244, 245, 248, 249, 320, 342, 345, 372, 373, 425, 426, 440], "consider": 24, "consist": [2, 4, 7, 13, 28, 87, 88, 89, 112, 171, 219, 220, 221, 240, 263, 300, 301, 302, 312, 314, 316, 349, 355, 357, 416, 431, 438, 440], "consistent_tensor": 357, "consol": 155, "constant": [208, 209, 214, 215, 217, 218, 243, 257, 285, 286, 291, 292, 293, 294, 295, 296, 297, 298, 312, 314, 316, 330, 334, 335, 336, 337, 338, 339, 340, 341, 349, 414, 416], "constant_pad": 416, "constrain": [45, 47, 50, 100], "constraint": [1, 12, 30, 90, 92, 99, 240, 278], "construct": [15, 55, 56, 57, 58, 77, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 141, 142, 143, 146, 147, 148, 149, 156, 175, 320, 371, 418, 424, 425, 426], "constructor": [31, 32, 33, 34, 35, 36, 37, 38, 55, 56, 57, 58, 69, 70, 71, 72, 94, 95, 96, 97, 104, 105, 106, 107, 108, 109, 110, 111, 121, 122, 136, 137, 138, 139, 144, 146, 147, 148, 149], "consumpt": 102, "contain": [1, 5, 6, 7, 8, 18, 19, 24, 25, 26, 27, 82, 86, 112, 123, 124, 125, 126, 127, 128, 129, 130, 140, 145, 155, 172, 174, 175, 176, 177, 178, 187, 190, 195, 205, 207, 208, 209, 213, 229, 231, 285, 286, 289, 321, 359, 360, 361, 362, 364, 365, 366, 367, 369, 370, 373, 375, 381, 382, 383, 384, 386, 387, 388, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 406, 409, 411, 415, 421], "content": 232, "context": [154, 345, 347], "contextmanag": 347, "contextu": [161, 162, 163, 164], "contigu": [197, 271, 417], "continu": [254, 325, 330, 354], "contract": 12, "contrast": [156, 295, 296, 297, 440], "contribut": [197, 231, 270, 273, 274, 275, 276, 303, 306, 307, 308, 333, 339, 404], "control": [10, 14, 30, 39, 123, 240, 250, 287, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 357, 430, 440], "conv": [77, 82, 130, 154, 233, 234, 235, 292, 293], "conv1": [87, 88, 89, 178, 266, 267, 268, 303, 304, 305, 306, 307, 308], "conv1d": [194, 204, 233, 236, 269, 280, 303, 306], "conv1dmodel": 266, "conv2": [87, 88, 89, 178, 266, 267, 268], "conv2d": [175, 178, 194, 204, 234, 237, 269, 278, 280, 292, 304, 307, 320], "conv2dmodel": 267, "conv3d": [194, 204, 235, 238, 269, 280, 293, 305, 308], "conv3dmodel": 268, "conv_bia": [233, 234, 235], "conv_config": 145, "conv_lay": [86, 175], "convblock": 320, "convbnrelu1d": 241, "convbnrelu2d": 241, "convbnrelu3d": 241, "conveni": [4, 29, 153], "convent": 363, "converg": [24, 261, 322, 323, 324, 326, 329, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 432], "convers": [286, 289, 434, 440], "convert": [5, 6, 7, 8, 145, 171, 173, 187, 229, 259, 358, 415, 429, 430, 434, 440], "convnetwork": 175, "convnext": [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 85, 154], "convnext_bas": 154, "convnext_larg": 154, "convnext_smal": 154, "convnext_tini": 154, "convnext_v2": [45, 46, 47, 48, 49, 50, 51, 52], "convnext_v2_atto": 154, "convnext_v2_bas": 154, "convnext_v2_femto": 154, "convnext_v2_hug": 154, "convnext_v2_larg": 154, "convnext_v2_nano": 154, "convnext_v2_pico": 154, "convnext_v2_tini": 154, "convnext_xlarg": 154, "convolut": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 54, 59, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 82, 86, 87, 88, 89, 90, 92, 96, 97, 98, 99, 100, 101, 102, 103, 110, 111, 112, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 140, 144, 145, 150, 152, 153, 154, 175, 191, 192, 193, 195, 233, 234, 235, 236, 237, 238, 239, 240, 266, 267, 268, 304, 305, 307, 308, 401, 416], "convolv": [191, 192, 193, 266, 267, 268], "cooldown": 329, "coordin": 415, "copi": [10, 408], "core": [0, 1, 2, 3, 172, 320, 321, 358, 440], "corinna": 8, "corner": [231, 318, 431, 433], "correct": [174, 286, 289, 336, 337, 338, 339, 340, 414, 425, 426, 430], "correctli": [24, 172, 174, 175, 176, 177, 178, 286, 289, 357, 408, 409], "correspond": [0, 1, 2, 5, 6, 7, 8, 19, 93, 94, 96, 97, 121, 122, 141, 142, 143, 161, 162, 163, 164, 174, 176, 178, 180, 181, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 205, 207, 229, 231, 252, 255, 259, 281, 283, 291, 292, 293, 295, 296, 297, 304, 305, 310, 333, 341, 343, 350, 361, 362, 364, 365, 368, 389, 390, 396, 398, 408, 409, 412, 416, 418, 420, 424, 428], "cort": 8, "cosh": [380, 397, 403], "cosin": [323, 382, 386, 387, 396], "cosineannealinglr": 331, "cost": [90, 92, 93, 99, 100, 102, 123, 154, 236, 237, 238], "could": 172, "count": [93, 154, 155, 323, 328, 410], "counterclockwis": [232, 436], "cover": [16, 191, 192, 193], "coverag": [219, 220, 221], "creat": [2, 3, 15, 28, 29, 30, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 83, 84, 87, 88, 89, 92, 94, 95, 96, 97, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 157, 158, 171, 172, 175, 178, 240, 256, 263, 312, 313, 314, 315, 316, 320, 346, 348, 357, 370, 374, 375, 376, 377, 378, 379, 408, 415, 423, 429, 440], "creation": [69, 70, 71, 72, 175, 178, 440], "criterion": [285, 286, 287, 288, 289], "critic": [24, 100, 332, 357], "crop": [431, 433, 440], "cross": [160, 208, 209, 285, 286, 312, 313, 314], "cross_entropi": [204, 211], "crossentropyloss": [280, 290], "crucial": [10, 322], "cube": 380, "cumul": [181, 251], "current": [172, 323, 324, 325, 326, 327, 328, 329, 330, 333, 336, 342, 345], "custom": [4, 15, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 83, 84, 86, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 151, 152, 153, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 174, 175, 176, 177, 178, 232, 233, 234, 235, 250, 254, 312, 320, 324, 327, 357, 374, 375, 421], "custom_config": 145, "custom_decod": 312, "custom_encod": 312, "custom_lenet": 86, "customiz": 440, "custommodul": 171, "customnetwork": 174, "customparametermodel": [176, 177], "cut": 101, "cvf": 154, "cvpr": 154, "cycl": 324, "cycle_momentum": 324, "cyclic": [323, 324, 420], "cycliclr": 331, "d": [30, 154, 190, 193, 202, 221, 224, 228, 235, 264, 293, 297, 298, 302, 305, 308, 346, 371, 436], "d_": [193, 221, 224, 228, 263, 268, 302, 305, 308, 312, 313, 314, 315, 316], "d_1": [12, 13, 14, 278, 298], "d_2": [12, 13, 14, 278, 298], "d_h": [263, 314, 316], "d_k": 30, "d_model": [156, 157, 158, 165, 312, 313, 314, 315, 316], "d_n": [12, 13, 14, 278, 298], "d_out": [193, 224, 228], "dai": 154, "dampen": [333, 341, 343], "data": [4, 5, 6, 7, 8, 10, 15, 22, 154, 171, 173, 177, 188, 191, 193, 195, 201, 202, 207, 229, 232, 233, 234, 235, 240, 255, 261, 266, 267, 268, 283, 297, 303, 305, 308, 315, 321, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 346, 349, 357, 358, 359, 360, 366, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 401, 407, 408, 416, 417, 418, 419, 421, 422, 424, 429, 430, 433, 434, 435, 436, 437, 440], "databas": 8, "dataload": [2, 3], "dataset": [3, 5, 6, 7, 8, 42, 69, 70, 71, 72, 87, 88, 89, 90, 93, 98, 112, 113, 114, 115, 116, 117, 118, 119, 120, 232, 335, 347, 429, 431, 440], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 367, "debug": [155, 178, 345, 355, 440], "decai": [271, 322, 323, 325, 327, 328, 329, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343], "declar": [12, 13, 14, 278], "decod": [156, 312, 313, 314], "decoder_lay": [313, 314], "decoderlay": 313, "decompos": [17, 25, 27], "decomposit": [16, 17, 21, 24, 25, 27], "decor": [124, 125, 126, 127, 128, 129, 348], "decoupl": [154, 334, 335, 337, 338, 339, 340], "decreas": [324, 329, 336, 337, 342], "deep": [1, 3, 4, 10, 13, 15, 79, 80, 82, 112, 113, 114, 115, 117, 118, 124, 125, 126, 127, 128, 129, 131, 132, 135, 154, 214, 251, 257, 278, 320, 322, 357, 375, 421, 425, 426, 429, 430, 440], "deeper": [15, 74, 76, 84, 112, 119, 154, 257], "def": [0, 1, 2, 3, 10, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 157, 158, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 205, 207, 208, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 270, 271, 272, 273, 274, 278, 281, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 312, 313, 314, 315, 316, 320, 321, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430], "default": [1, 5, 6, 7, 8, 13, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 183, 187, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 208, 209, 210, 212, 213, 214, 215, 217, 218, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 245, 246, 247, 248, 249, 250, 254, 259, 263, 264, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 281, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 318, 321, 323, 324, 325, 326, 327, 328, 329, 330, 332, 339, 345, 350, 352, 353, 354, 356, 358, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 391, 392, 393, 400, 405, 406, 407, 409, 410, 412, 415, 416, 418, 420, 421, 423, 425, 426, 428, 430, 434, 435, 437], "defin": [1, 3, 4, 10, 13, 15, 30, 39, 54, 60, 73, 74, 75, 76, 82, 83, 84, 86, 92, 102, 103, 112, 130, 141, 142, 143, 145, 174, 175, 176, 177, 178, 198, 251, 253, 256, 260, 285, 286, 287, 288, 289, 303, 318, 320, 322, 324, 327, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 349, 353, 354, 368, 373, 385, 405, 429, 440], "definit": [15, 17, 233, 234, 235, 440], "degre": [232, 436, 440], "delai": 333, "deliv": [100, 101], "delta": [12, 187, 210, 259, 278, 287, 334], "delta_": [12, 187, 259, 278], "demand": 101, "demonstr": [15, 16, 136, 137, 138, 139, 144, 154, 320, 349], "denomin": [214, 215, 217, 218, 233, 234, 235, 291, 292, 293, 294, 295, 296, 297, 298, 312, 314, 316, 334, 335, 336, 337, 338, 339, 340, 341, 360], "denot": [22, 110, 111, 258, 263, 266, 267, 268, 270, 273, 274, 275, 276, 405], "dens": [15, 54, 55, 56, 57, 58, 154, 160, 161, 162, 163, 164, 198, 229, 310, 335], "dense1": 15, "dense2": 15, "densenet": [55, 56, 57, 58, 85, 154, 239], "densenet_121": 154, "densenet_169": 154, "densenet_201": 154, "densenet_264": 154, "densiti": [181, 251], "depend": [15, 22, 23, 30, 92, 154, 160, 161, 162, 163, 164, 177, 208, 209, 210, 212, 213, 231, 266, 361, 371, 391, 393, 418, 424, 433, 434, 438], "deploy": 102, "depth": [30, 39, 40, 41, 42, 43, 44, 53, 59, 60, 77, 98, 154, 160, 161, 162, 163, 164, 165, 175, 193, 198, 202, 221, 224, 228, 268, 272, 293, 297, 302, 305, 308], "depth_coef": 59, "depthseparableconv1d": 241, "depthseparableconv2d": 241, "depthseparableconv3d": 241, "depthwis": [30, 39, 77, 90, 150, 154, 191, 192, 193, 236, 237, 238], "depthwise_separ": [236, 237, 238], "der": 154, "deriv": [24, 25, 187, 219, 220, 221, 251, 259, 261, 266, 267, 268, 281, 283, 348], "descend": 27, "descent": [15, 333, 343], "describ": [10, 18, 19], "descript": 440, "deseri": 171, "design": [3, 4, 13, 15, 16, 28, 29, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 52, 69, 70, 71, 72, 74, 75, 76, 78, 81, 87, 88, 89, 92, 93, 98, 99, 100, 101, 102, 113, 114, 115, 116, 117, 118, 119, 120, 131, 134, 150, 153, 154, 160, 167, 173, 175, 176, 177, 178, 180, 185, 257, 270, 320, 349, 440], "desir": [10, 14, 151, 171, 219, 220, 221, 271, 300, 301, 302, 318, 322, 405, 407], "destin": 172, "det": [16, 20], "det_a": 18, "detail": [15, 155, 332, 357, 363], "detect": [154, 329], "determin": [0, 15, 16, 17, 18, 86, 121, 122, 219, 220, 221, 244, 245, 248, 249, 266, 267, 268, 300, 301, 302, 304, 305, 307, 308, 324, 341, 345, 350, 352, 353, 354, 356, 372, 373, 421, 431, 433], "determinist": 232, "develop": [10, 15, 93, 320, 357, 440], "deviat": [244, 246, 248, 429, 432, 440], "devic": [91, 92, 98, 99], "diag": [24, 380], "diagon": [24, 25, 27, 371, 374, 404, 425, 426], "diagonaliz": 19, "dict": [10, 12, 13, 14, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 86, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 122, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 141, 142, 143, 144, 151, 153, 161, 162, 163, 164, 166, 167, 168, 169, 170, 172, 174, 176, 278, 282, 321, 326], "dictionari": [86, 93, 100, 172, 173, 174, 176, 178, 321, 326], "differ": [0, 10, 13, 22, 73, 77, 86, 92, 93, 99, 100, 136, 137, 138, 139, 144, 175, 178, 187, 205, 231, 240, 259, 281, 288, 322, 329, 332, 346, 355, 357, 369, 379, 406, 422, 440], "differenti": [15, 17, 26, 229, 251, 320, 350, 352, 353, 354, 356, 358, 370, 372, 373, 376, 378], "digit": [7, 8, 89, 154], "dilat": [191, 192, 193, 233, 234, 235, 236, 237, 238, 266, 267, 268], "dilation_height": 195, "dilation_width": 195, "dim": [39, 40, 77, 190, 264, 286, 289, 420], "dim_feedforward": [156, 312, 314, 316], "dimens": [10, 12, 13, 14, 18, 19, 21, 22, 25, 26, 27, 28, 39, 41, 42, 43, 44, 53, 112, 123, 140, 145, 152, 154, 156, 160, 161, 162, 165, 173, 187, 190, 205, 207, 214, 215, 217, 218, 220, 221, 231, 239, 240, 259, 263, 264, 266, 267, 268, 271, 278, 291, 292, 293, 295, 296, 297, 298, 301, 302, 304, 305, 306, 307, 308, 312, 314, 315, 316, 318, 346, 349, 352, 356, 358, 362, 372, 391, 392, 393, 400, 401, 404, 405, 406, 408, 409, 410, 412, 416, 418, 420, 422, 423, 424, 427, 428, 431, 433, 438], "dimension": [10, 22, 24, 25, 27, 77, 191, 192, 193, 222, 223, 224, 226, 227, 228, 240, 263, 266, 267, 268, 274, 275, 276, 291, 292, 293, 295, 296, 297, 303, 304, 305, 306, 307, 308, 312, 314, 316, 346, 362, 363, 367, 371, 389, 392, 400, 401, 404, 406, 411, 417, 418, 422, 424, 425, 426], "diminish": [322, 335], "direct": [19, 285, 286, 287, 288, 289, 333, 341, 342, 343, 420], "directli": [69, 70, 71, 72, 154, 174, 175, 176, 177, 231, 278, 318, 334, 335, 337, 338, 339, 340, 355, 357, 407, 440], "directori": [3, 4, 5, 6, 7, 8], "disabl": [198, 271, 272, 345, 347], "discontinu": 395, "discrep": [285, 286, 289], "discret": [350, 353, 357], "disk": 3, "displai": [29, 153, 155], "distinct": [93, 156], "distribut": [181, 187, 197, 231, 244, 245, 246, 247, 248, 249, 251, 259, 266, 267, 268, 270, 271, 273, 274, 275, 276, 281, 283, 286, 289, 303, 304, 305, 350, 352, 353, 354, 356, 357, 392, 400, 404, 406, 423, 432, 434, 435, 436, 437], "div": 380, "divers": [46, 154, 232, 435, 437, 440], "diversifi": 440, "divid": [1, 24, 154, 160, 165, 166, 167, 168, 169, 170, 175, 178, 187, 191, 192, 193, 259, 285, 286, 287, 288, 289, 360, 409, 421, 432], "divis": [15, 24, 191, 192, 193, 263, 270, 273, 274, 275, 276, 312, 314, 316, 334, 335, 336, 337, 338, 339, 340, 341, 360, 421], "do": [24, 26, 171, 174, 175, 176, 177, 196, 199, 200, 201, 320, 322, 340, 345, 379, 404, 416], "document": [4, 15, 154, 332, 349, 357], "doe": [15, 22, 23, 24, 25, 27, 155, 156, 171, 174, 175, 176, 177, 178, 249, 329, 336, 337, 342, 345, 347, 350, 352, 353, 354, 355, 356, 370, 371, 372, 373, 374, 376, 377, 378, 379, 408, 414, 419, 420], "doesn": 347, "doi": 154, "domain": 4, "don": 347, "dosovitskii": 154, "dot": [12, 13, 14, 19, 22, 174, 175, 176, 177, 178, 190, 263, 264, 278, 298, 306, 307, 308, 362, 367, 380, 410, 412, 423, 428], "down": [3, 320, 438], "download": [4, 5, 6, 7, 8], "downsampl": 103, "drawback": 180, "drawn": [352, 353, 354, 356, 357, 436], "drop": [39, 40, 77, 197, 198, 270, 271, 272, 273, 274, 275, 276], "drop_block": [203, 204], "drop_path": [39, 40, 203, 204, 272], "drop_path_r": [60, 77, 160], "drop_prob": 272, "drop_rat": [77, 160], "dropblock": [197, 277, 280], "dropout": [28, 59, 60, 69, 70, 71, 72, 75, 77, 145, 152, 154, 156, 160, 165, 181, 190, 196, 200, 201, 202, 263, 264, 270, 271, 274, 275, 276, 312, 314, 316], "dropout1d": [203, 204, 277, 280], "dropout1dmodel": 274, "dropout2d": [203, 204, 277, 280], "dropout3d": [203, 204, 277, 280], "dropout_p": [190, 264], "dropout_prob": 75, "dropout_r": 165, "dropoutmodel": 273, "droppath": [277, 280], "dtype": [171, 173, 229, 310, 358, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 407, 430], "due": [22, 24, 54, 101, 191, 192, 255, 436], "dummi": 155, "duplic": [10, 14, 174, 176], "dure": [3, 15, 18, 19, 21, 24, 25, 27, 30, 60, 73, 74, 75, 112, 154, 171, 172, 173, 174, 175, 176, 177, 178, 187, 196, 197, 198, 199, 200, 201, 202, 214, 217, 232, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 303, 304, 305, 306, 307, 308, 310, 318, 320, 322, 326, 329, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 345, 347, 358, 359, 391, 392, 393, 400, 406, 414, 420, 430, 433, 436, 440], "dy": [183, 254], "dynam": [0, 2, 3, 30, 140, 144, 154, 172, 175, 176, 177, 178, 219, 220, 221, 240, 271, 298, 300, 301, 302, 322, 326, 327, 329, 335, 340, 345], "dynamicnetwork": 175, "e": [0, 10, 18, 19, 21, 22, 25, 27, 59, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 76, 83, 84, 86, 87, 88, 89, 103, 145, 160, 171, 187, 240, 258, 259, 260, 263, 270, 286, 321, 334, 341, 342, 374, 387, 389, 390, 397, 403, 404, 410, 434], "each": [1, 2, 3, 4, 19, 22, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 54, 60, 77, 86, 90, 92, 93, 94, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 145, 152, 154, 156, 160, 161, 162, 163, 164, 165, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 205, 207, 214, 217, 219, 220, 221, 229, 239, 240, 252, 255, 259, 263, 266, 267, 268, 270, 273, 274, 275, 276, 281, 283, 285, 286, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 320, 322, 323, 324, 325, 326, 327, 328, 330, 334, 335, 336, 337, 338, 339, 340, 341, 342, 350, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369, 375, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 406, 409, 410, 412, 415, 416, 418, 420, 421, 423, 424, 428, 429, 430, 431, 432, 433, 434, 436, 438, 440], "earli": [30, 154, 340], "earlier": 93, "eas": [4, 15], "easi": [2, 3, 4, 10, 15, 124, 125, 126, 127, 128, 129, 173, 174, 176], "easier": [3, 174, 175, 178], "easili": [4, 93, 173, 177, 440], "eccv": 154, "economi": 27, "edg": [92, 101, 416], "edu": [5, 6], "educ": [15, 154], "effect": [13, 154, 174, 175, 176, 177, 178, 187, 191, 192, 193, 195, 250, 251, 255, 258, 259, 261, 291, 292, 293, 295, 296, 297, 298, 318, 322, 323, 324, 329, 345, 346, 347, 412, 428], "effici": [1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 21, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 43, 44, 45, 47, 50, 51, 52, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 80, 81, 83, 84, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144, 150, 154, 160, 161, 162, 163, 164, 166, 169, 195, 236, 237, 238, 252, 253, 256, 278, 286, 320, 322, 323, 347], "efficientnet": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 85, 154], "efficientnet_b0": 154, "efficientnet_b1": 154, "efficientnet_b2": 154, "efficientnet_b3": 154, "efficientnet_b4": 154, "efficientnet_b5": 154, "efficientnet_b6": 154, "efficientnet_b7": 154, "efficientnet_v2": [69, 70, 71, 72], "efficientnet_v2_": 154, "efficientnet_v2_l": 154, "efficientnet_v2_m": 154, "efficientnet_v2_xl": 154, "efficientnetv2": 154, "eig": 20, "eigenvalu": [19, 25], "eigenvector": 19, "eigval": 19, "eigvec": 19, "einop": 278, "einstein": [10, 12, 13, 14, 278], "either": [207, 318, 349, 350, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 407, 415], "element": [0, 10, 12, 14, 24, 25, 75, 154, 173, 177, 180, 181, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 198, 199, 200, 201, 202, 229, 233, 234, 235, 236, 237, 238, 239, 252, 253, 255, 259, 260, 266, 267, 268, 270, 272, 273, 274, 275, 276, 278, 285, 286, 287, 288, 289, 298, 303, 304, 305, 306, 307, 308, 346, 350, 358, 359, 360, 363, 364, 365, 366, 367, 368, 369, 370, 374, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 406, 411, 414, 415, 416, 418, 419, 420, 421, 422, 424, 425, 426], "elementwise_affin": 298, "elimin": [12, 14], "elsewher": [306, 307, 308, 374], "elu": [182, 204, 262, 280], "elumodel": 250, "embed": [90, 91, 92, 93, 95, 96, 97, 100, 160, 161, 162, 165, 190, 204, 230, 263, 264, 280, 311, 312, 314, 315, 316], "embed_dim": [160, 161, 162, 263, 312, 313, 314, 315, 316], "embedding_dim": [165, 229, 310], "embedding_lay": 310, "embedding_matrix": 229, "emphas": [93, 100], "emploi": [30, 60, 101], "empti": [172, 178, 380, 409], "empty_lik": 380, "enabl": [0, 1, 2, 3, 10, 12, 13, 14, 15, 22, 27, 59, 83, 103, 140, 141, 142, 143, 154, 160, 161, 162, 172, 173, 174, 175, 176, 177, 190, 198, 255, 263, 264, 266, 267, 268, 281, 283, 312, 314, 316, 320, 332, 345, 347, 350, 352, 353, 354, 356, 358, 429], "encapsul": [264, 320, 358], "encod": [30, 154, 156, 165, 286, 289, 312, 313, 314, 315, 316], "encoder_lay": [315, 316], "encoderlay": 315, "encompass": 59, "encourag": [197, 271, 273, 274, 275, 276, 285, 286, 289, 336], "end": [23, 180, 183, 184, 185, 198, 250, 252, 253, 254, 255, 257, 272, 287, 288, 289, 303, 304, 305, 306, 307, 308, 340, 342, 364, 365, 367, 370, 375, 381, 385, 391, 393, 395, 410, 414, 416, 425, 426, 440], "enforc": [12, 172, 174, 176, 278, 313, 314, 315, 316], "engin": 24, "enhanc": [30, 40, 41, 75, 76, 77, 83, 84, 88, 91, 101, 102, 110, 111, 121, 122, 136, 137, 138, 139, 144, 152, 153, 154, 174, 176, 240, 256, 326, 440], "ensur": [3, 5, 6, 7, 8, 10, 12, 13, 14, 24, 25, 26, 60, 69, 70, 71, 72, 171, 172, 173, 174, 175, 176, 177, 178, 187, 190, 219, 220, 221, 229, 233, 234, 235, 254, 259, 264, 270, 271, 272, 273, 274, 275, 276, 278, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 300, 301, 302, 304, 305, 306, 307, 308, 310, 320, 321, 322, 333, 334, 336, 337, 339, 340, 341, 342, 343, 345, 346, 347, 349, 350, 352, 353, 354, 355, 356, 357, 368, 375, 392, 400, 406, 408, 409, 414, 416, 420, 425, 426, 430, 431, 432, 433, 434, 438, 440], "enter": 347, "entir": [3, 198, 200, 201, 202, 272, 275, 276, 357], "entri": [60, 86, 96, 97, 414, 420, 422], "entropi": [208, 209, 285, 286], "environ": [15, 45, 47, 96, 97, 100], "ep": [197, 208, 209, 214, 215, 217, 218, 233, 234, 235, 271, 285, 286, 291, 292, 293, 294, 295, 296, 297, 298, 329, 334, 335, 336, 337, 338, 339, 340, 341], "epoch": [1, 3, 322, 323, 324, 325, 326, 327, 328, 329, 330], "epsilon": [30, 215, 285, 286, 291, 292, 293, 294, 295, 296, 297, 298, 334, 335, 336, 337, 338, 339, 340, 341], "equal": [22, 231, 303, 304, 305, 375, 409, 421, 431, 433], "equat": [19, 24, 26], "equival": [363, 404, 417], "error": [0, 3, 10, 12, 14, 19, 21, 60, 172, 175, 176, 177, 178, 181, 210, 212, 251, 272, 278, 285, 286, 287, 288, 320, 321, 347, 349, 375, 408], "escap": 324, "especi": [3, 174, 176, 177, 258, 346, 347, 349, 355, 429, 430, 434, 440], "essenti": [1, 3, 15, 16, 22, 24, 82, 192, 195, 320, 355, 357, 391, 429, 430, 434, 440], "estim": [288, 336, 337, 338, 339, 340, 341], "et": [74, 154, 312], "eta": 342, "eta_": [323, 324, 329, 342], "eta_0": [323, 325, 327, 328, 330], "eta_min": 323, "eta_t": [323, 324, 325, 327, 328, 329, 330], "etc": [10, 54, 60, 93, 103, 285, 318, 430], "euclidean": 23, "european": 154, "eval": 272, "evalu": [172, 214, 217, 270, 271, 272, 273, 274, 275, 276, 291, 292, 293, 295, 296, 297, 440], "evaluate_model": 329, "even": [334, 347, 370, 371, 374, 376, 377, 378, 379], "evenli": [219, 220, 221, 300, 301, 302, 370, 375, 409, 421], "everi": [1, 325, 330, 440], "everywher": 395, "exact": [172, 175, 405, 434, 436], "exactli": 178, "exampl": [4, 322, 363], "excel": [76, 100], "except": [0, 395, 410, 412, 428], "excit": [59, 92, 96, 97, 130, 133, 136, 137, 138, 139, 154, 239], "exclud": [425, 426], "exclus": [353, 356, 370], "exdb": 8, "execut": [175, 347], "exist": [14, 26, 174, 176, 178, 348, 410], "exit": 347, "exp": [180, 185, 186, 188, 250, 257, 380], "exp_rang": 324, "expand": [4, 10, 14, 49, 154, 195, 408, 418, 424], "expans": [10, 12, 14, 53, 77, 93, 96, 97], "expansion_factor": 92, "expect": [17, 175, 178, 198, 263, 270, 272, 273, 274, 275, 276, 298, 312, 313, 314, 315, 316, 320, 349], "expens": 3, "experi": [15, 93, 355, 357, 440], "experiment": 357, "explan": [22, 24, 28, 39, 145, 152, 219, 220, 221, 300, 301, 302, 333], "explicit": [12, 13, 14, 178, 278], "explicitli": [14, 154, 174, 176], "explod": [257, 291, 292, 293], "explor": [99, 320, 357], "expon": [22, 368], "exponenti": [180, 185, 187, 250, 257, 259, 270, 325, 327, 336, 337, 338, 339, 340, 389], "exponentiallr": [322, 331], "express": [10, 12, 14, 42], "extend": [4, 103, 123, 140, 154], "extens": [154, 332], "extern": [4, 15], "extra": [53, 72, 101, 408], "extract": [30, 73, 79, 82, 112, 123, 140, 150, 154, 195, 268, 303, 305, 348, 371, 391, 393, 425, 426, 431, 433], "extractor": [86, 87, 88, 89, 150], "extrem": [24, 113, 154, 167], "ey": 380, "f": [1, 4, 5, 6, 7, 8, 15, 154, 176, 177, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 205, 207, 208, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 256, 259, 312, 314, 316, 322, 323, 324, 325, 326, 327, 328, 329, 330], "f_1": 239, "f_2": 239, "facilit": [10, 13, 73, 174, 178, 187, 259, 266, 267, 268, 320, 332, 432, 440], "factor": [59, 75, 93, 180, 190, 191, 192, 193, 195, 239, 248, 249, 263, 264, 318, 322, 324, 325, 327, 328, 329, 330, 333, 340, 341, 342, 343, 349], "factori": 151, "failur": [174, 175, 176, 177, 320], "fals": [1, 5, 6, 7, 8, 23, 27, 59, 96, 97, 112, 155, 160, 171, 172, 173, 190, 196, 198, 199, 200, 201, 202, 214, 217, 231, 242, 244, 245, 246, 247, 248, 249, 263, 264, 266, 267, 268, 272, 281, 283, 312, 313, 314, 315, 316, 318, 323, 324, 325, 326, 327, 328, 329, 330, 336, 337, 341, 345, 350, 352, 353, 354, 356, 358, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 391, 392, 393, 400, 406, 407, 414, 430], "famili": [53, 93, 154, 348], "fan": [244, 245, 248, 249], "fan_in": [244, 245], "fan_out": [244, 245], "fashion": 7, "fashion_train": 7, "fashionmnist": 9, "fast": 340, "faster": [154, 322, 335, 339, 347], "fc": [82, 112, 123, 130, 140, 175, 239, 267, 268, 303, 304, 305, 306, 307, 308], "fc1": [88, 89, 155, 174, 178, 251, 252, 253, 255, 256, 257, 258, 260, 261, 283], "fc2": [88, 89, 155, 174, 178, 251, 252, 253, 255, 257, 258, 260, 261, 283], "fc3": 89, "featur": [3, 28, 30, 39, 42, 43, 53, 54, 73, 76, 77, 79, 82, 86, 87, 88, 89, 102, 110, 111, 112, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 140, 141, 142, 143, 145, 150, 152, 153, 154, 197, 205, 207, 214, 215, 233, 234, 235, 239, 240, 268, 271, 273, 274, 275, 276, 281, 283, 291, 292, 293, 294, 295, 296, 297, 298, 303, 304, 305, 306, 307, 308, 310, 320, 335], "feature_extractor": 86, "fed": [3, 440], "feed": [3, 358, 440], "feedforward": [155, 156, 165, 312, 314, 316], "femto": [47, 154], "fergu": [152, 154], "fetch": 0, "few": 155, "fewer": [1, 104, 105, 106, 107, 108, 109, 154, 408], "field": [5, 6, 8, 140, 144, 154, 240], "file": [3, 348], "fill": [242, 246, 247, 352, 353, 354, 356, 376, 377, 378, 379], "filter": [60, 93, 152, 154, 191, 192, 193, 195, 233, 234, 235, 267, 268], "filter_height": 195, "filter_s": 195, "filter_width": 195, "final": [39, 54, 55, 56, 57, 58, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 92, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 156, 165, 174, 175, 176, 177, 178, 190, 240, 263, 312, 313, 315, 429, 440], "find": [26, 391, 393], "fine": [99, 102, 239, 440], "finish": 347, "first": [5, 6, 7, 8, 19, 86, 152, 155, 160, 161, 162, 175, 176, 205, 239, 281, 322, 336, 337, 338, 339, 340, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 401, 409, 415, 428, 429, 430, 440], "fit": [14, 320], "fix": [154, 160, 175, 325, 328, 330, 416], "flat": [154, 160], "flatten": [12, 82, 86, 178, 195, 367, 413, 417, 418, 420], "flexibl": [1, 3, 4, 10, 12, 14, 15, 40, 73, 82, 83, 84, 86, 93, 94, 103, 112, 136, 137, 138, 139, 144, 145, 150, 154, 174, 175, 176, 177, 178, 278, 318, 320, 327, 332, 349, 376, 377, 430, 440], "flexibli": 13, "flip": [435, 437, 440], "float": [2, 5, 6, 7, 8, 39, 40, 59, 60, 75, 77, 90, 94, 156, 160, 165, 171, 173, 180, 183, 190, 196, 197, 198, 199, 200, 201, 202, 208, 209, 210, 214, 215, 217, 218, 229, 232, 233, 234, 235, 242, 246, 247, 248, 249, 250, 254, 263, 264, 270, 271, 272, 273, 274, 275, 276, 285, 286, 287, 291, 292, 293, 294, 295, 296, 297, 298, 310, 312, 314, 316, 318, 323, 324, 325, 326, 327, 328, 329, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 349, 350, 356, 358, 370, 373, 375, 385, 407, 414, 432, 434, 435, 436, 437], "float32": [171, 173, 358, 370, 371, 374, 375, 376, 378, 407, 430], "float64": [379, 407, 430], "floor": 330, "flow": [30, 76, 82, 130, 154, 178, 197, 249, 251, 258, 261, 266, 267, 268, 281, 283, 345, 414], "fluctuat": 324, "fly": [2, 3], "fname": 3, "focu": [15, 30], "focus": 15, "follow": [0, 12, 14, 15, 16, 19, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 55, 56, 57, 58, 59, 96, 97, 136, 137, 138, 139, 144, 145, 150, 152, 155, 156, 180, 181, 183, 184, 185, 186, 187, 188, 190, 205, 207, 231, 233, 234, 235, 236, 237, 238, 239, 240, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 270, 272, 273, 274, 275, 276, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 312, 313, 314, 315, 316, 320, 324, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 348, 349, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 391, 393, 401, 408, 415, 419, 431, 432, 433, 434, 435, 436, 437, 440], "foral": [313, 315], "forc": 197, "form": [25, 240, 313, 315, 367, 415, 418, 424, 440], "format": [2, 3, 5, 6, 7, 8, 155, 286, 289, 430], "formul": 181, "formula": [19, 27, 187, 219, 220, 221, 259, 260, 287, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 363, 406, 434], "forward": [15, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 152, 155, 160, 171, 172, 320, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "found": 15, "foundat": [82, 93, 130, 172, 320, 332, 358], "four": [55, 56, 57, 58, 104, 105, 106, 107, 108, 109, 416], "frac": [13, 17, 18, 19, 21, 22, 23, 24, 26, 27, 30, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 198, 205, 207, 215, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 270, 272, 273, 274, 275, 276, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 303, 304, 305, 306, 307, 308, 310, 314, 316, 323, 334, 335, 336, 337, 338, 339, 340, 341, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 410, 412, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 432], "frame": 202, "framework": [4, 10, 15, 154, 286, 289, 291, 292, 293, 295, 296, 297, 321, 332, 440], "frequent": [286, 289], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 14, 15, 22, 24, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 77, 78, 79, 80, 81, 82, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 155, 171, 172, 173, 174, 175, 176, 177, 178, 195, 197, 205, 214, 217, 229, 231, 233, 234, 235, 239, 240, 242, 244, 245, 246, 247, 248, 249, 256, 263, 266, 267, 268, 270, 271, 273, 274, 275, 276, 281, 283, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 303, 304, 305, 313, 315, 316, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 346, 347, 348, 349, 350, 352, 353, 354, 356, 357, 358, 363, 364, 365, 369, 371, 391, 392, 393, 400, 406, 410, 412, 415, 418, 421, 422, 423, 424, 428, 431, 432, 433, 434, 435, 436, 437, 440], "full": [27, 94, 96, 97, 156, 165], "full_matric": 27, "fulli": [4, 16, 28, 39, 54, 55, 56, 57, 58, 59, 60, 82, 86, 87, 88, 89, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 145, 150, 152, 154, 207, 239, 240, 283, 357], "func": 348, "function": [3, 4, 5, 6, 7, 8, 10, 15, 16, 77, 172, 174, 175, 176, 177, 178, 233, 234, 235, 239, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 270, 271, 273, 274, 275, 276, 278, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 300, 301, 302, 312, 314, 316, 320, 323, 324, 326, 327, 330, 332, 349, 357, 429, 440], "fundament": [15, 190, 207, 283, 430], "further": [13, 15, 41, 42, 43, 44, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 92, 94, 95, 96, 97, 99, 101, 110, 111, 357, 392, 400, 406], "fuse": [30, 140], "fusion": [141, 142, 143], "futur": [190, 264, 282, 315, 316], "g": [0, 10, 18, 19, 22, 25, 27, 59, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 76, 83, 84, 86, 87, 88, 89, 103, 145, 154, 160, 239, 240, 270, 321, 334, 341, 410, 434], "g_": 335, "g_t": 341, "gain": [248, 249], "gamma": [215, 291, 292, 293, 294, 295, 296, 297, 298, 322, 324, 325, 326, 328, 330], "gamma_c": [215, 294], "gap": [112, 123, 140, 239], "gaussian": [181, 251], "gelu": [182, 204, 262, 280], "gelunetwork": 251, "gener": [24, 41, 46, 50, 155, 156, 198, 232, 270, 271, 273, 274, 275, 276, 296, 312, 337, 339, 340, 347, 350, 352, 353, 354, 355, 356, 357, 362, 370, 372, 373, 375, 415, 433, 434, 435, 437, 440], "geoffrei": [5, 6], "geq": 425, "get": [5, 6, 7, 8], "get_lr": [323, 324, 325, 326, 327, 328, 329, 330], "github": 7, "give": [15, 333, 341], "given": [12, 13, 14, 18, 19, 22, 24, 25, 27, 157, 195, 229, 263, 264, 278, 285, 286, 289, 321, 345, 350, 377, 379, 414, 421, 429, 434, 435, 437, 440], "global": [0, 59, 112, 123, 130, 140, 154, 160, 161, 162, 163, 164, 215, 239, 294, 345, 347, 355, 357], "global_response_norm": [204, 216], "globalresponsenorm": [280, 299], "go": [10, 74, 154], "goal": [285, 286, 289], "googlenet": [74, 154], "gpu": 154, "grad": [171, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 195, 198, 205, 207, 231, 236, 237, 238, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 266, 267, 268, 270, 272, 273, 274, 275, 276, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 303, 304, 305, 306, 307, 308, 321, 332, 350, 352, 353, 354, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 373, 375, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 412, 414, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 431, 432, 433, 435, 437, 438], "grad_output": 22, "gradient": [10, 15, 16, 30, 76, 82, 154, 171, 173, 271, 320, 321, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 347, 350, 352, 353, 354, 356, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 407, 430], "gradual": [322, 323, 325], "grain": 239, "graph": [15, 249, 358, 370, 371, 374, 376, 377, 378, 379, 430], "grayscal": [7, 8, 86, 87, 88, 89, 434, 440], "greater": [49, 385, 409], "green": 434, "grid": 415, "grn": 294, "groundbreak": 154, "group": [93, 103, 110, 111, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 140, 144, 154, 175, 191, 192, 193, 233, 234, 235, 240, 266, 267, 268, 321, 322, 332], "group1": 175, "group2": 175, "groupedconvblock": 123, "growth_rat": [54, 55, 56, 57, 58], "guarante": 355, "h": [10, 12, 13, 14, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 154, 167, 190, 192, 193, 195, 197, 201, 202, 215, 220, 221, 223, 224, 227, 228, 231, 232, 234, 235, 239, 263, 264, 278, 292, 293, 294, 296, 297, 301, 302, 305, 308, 312, 314, 316, 431, 433], "h_": [192, 193, 220, 221, 223, 224, 227, 228, 231, 267, 268, 301, 302, 304, 305, 307, 308], "h_out": [192, 193, 223, 224, 227, 228], "h_stack": 412, "ha": [0, 19, 41, 155, 161, 162, 163, 164, 178, 191, 192, 193, 233, 234, 235, 256, 260, 285, 286, 291, 292, 293, 295, 296, 297, 298, 318, 321, 332, 363, 404, 408, 410, 412, 423, 428, 434], "half": [324, 398], "han": 7, "hand": 26, "handl": [0, 3, 10, 15, 24, 154, 172, 174, 175, 176, 177, 178, 229, 286, 289, 320, 332, 347], "handwritten": [7, 8, 89], "hang": 154, "hard": [96, 97, 253], "hard_sigmoid": 252, "hardsigmoid": [253, 262, 280], "hardswish": [262, 280], "hardwar": 15, "hat": [30, 336, 337, 338, 339, 340], "have": [0, 1, 18, 19, 21, 24, 25, 27, 173, 175, 177, 178, 192, 193, 197, 229, 249, 310, 320, 374, 376, 377, 378, 379, 391, 393, 410, 412, 414, 415, 422, 423, 428, 432, 438], "he": 154, "head": [30, 39, 77, 92, 150, 156, 160, 161, 162, 163, 164, 165, 190, 263, 264, 312, 314, 316], "head_fn": 77, "height": [30, 150, 192, 193, 195, 201, 202, 215, 220, 221, 223, 224, 227, 228, 231, 232, 240, 267, 268, 292, 293, 294, 296, 297, 301, 302, 304, 305, 307, 308, 318, 431, 433, 438], "help": [15, 30, 75, 183, 185, 202, 229, 250, 254, 256, 257, 261, 291, 292, 293, 303, 304, 306, 307, 310, 322, 324, 329, 330, 333, 336, 337, 339, 345, 346, 347, 349, 401], "henc": 419, "here": [3, 17, 172, 205, 320, 332, 346, 347, 349, 357, 429, 430, 440], "hidden": [28, 152, 156, 160, 165, 175], "hidden_s": 175, "hierarch": [39, 40, 154, 160, 175, 178, 320], "hierarchi": 267, "hierarchicalnetwork": 175, "high": [15, 42, 48, 49, 69, 70, 71, 72, 79, 92, 100, 101, 120, 135, 144, 167, 168, 322, 353, 356], "higher": [49, 60, 90, 98, 123, 286, 289, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 362, 363, 367, 389, 401], "highest": [53, 101, 353], "highli": [30, 45, 53, 95, 154, 327], "highlight": [239, 306, 307, 308], "hint": 349, "hinton": [5, 6], "histor": 335, "histori": [350, 352, 353, 354, 356, 370, 371, 372, 373, 374, 376, 377, 378, 379], "hold": [93, 174, 175, 176, 177], "horizont": [412, 423, 435, 440], "hot": [286, 289], "how": [2, 3, 12, 14, 15, 136, 137, 138, 139, 144, 175, 178, 278, 320, 349, 440], "howard": 154, "howev": [171, 249], "hstack": 413, "html": [5, 6], "http": [5, 6, 7, 8], "hu": [154, 239], "huang": 154, "huber": [210, 287], "huber_loss": [204, 211], "huberloss": [280, 290], "huberregressionmodel": 287, "hue": 440, "huge": [48, 154], "hybrid": [101, 102, 154], "hyperbol": [188, 261, 387, 397, 403], "hyperparamet": [104, 105, 106, 107, 108, 109, 112, 123, 151, 157, 321, 333], "i": [0, 1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 69, 70, 71, 72, 73, 74, 75, 76, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 205, 207, 208, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 389, 390, 391, 392, 393, 395, 396, 397, 398, 400, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440], "i_1": [12, 13, 14, 278], "i_2": [12, 13, 14, 278], "i_k": 14, "i_m": [12, 14, 278], "iccv": 154, "iclr": 154, "idea": 154, "ideal": [15, 42, 46, 50, 90, 93, 102, 178], "ident": [21, 22, 77, 154, 232, 272, 280, 284, 355, 357, 374, 419], "identifi": 176, "idx": [2, 3], "ieee": [154, 239], "ignor": [312, 313, 314, 315, 316], "ii": 404, "ij": [30, 187, 231, 259, 361, 362, 363, 367, 415, 425, 426], "ik": [361, 362, 363], "ill": [18, 24], "ilsvrc": 154, "imag": [3, 4, 5, 6, 7, 8, 14, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 60, 69, 70, 71, 72, 74, 75, 76, 82, 83, 84, 86, 87, 88, 89, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 153, 154, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 192, 217, 232, 234, 239, 267, 296, 415, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440], "image_dir": 3, "image_path": 3, "image_s": [165, 166, 167, 168, 169, 170], "imagedataset": 3, "imageio": 3, "imagenet": [55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 77, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 121, 122, 136, 137, 138, 139, 144, 154], "imbal": [286, 289], "img_siz": [30, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170], "impact": [154, 339], "implement": [2, 3, 15, 24, 28, 30, 39, 54, 59, 73, 74, 75, 76, 77, 83, 84, 86, 90, 91, 92, 112, 121, 122, 124, 125, 126, 127, 128, 129, 130, 150, 152, 154, 156, 160, 165, 172, 195, 198, 236, 237, 238, 240, 263, 264, 272, 294, 314, 316, 321, 326, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 412, 428, 434], "impli": [266, 267], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 122, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 197, 198, 199, 202, 205, 207, 208, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 318, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440], "improp": [10, 175, 178, 357], "improv": [30, 39, 60, 74, 75, 76, 80, 82, 84, 102, 103, 112, 123, 136, 137, 138, 139, 140, 152, 154, 158, 160, 197, 198, 214, 229, 232, 239, 251, 257, 261, 278, 310, 322, 323, 324, 329, 333, 334, 335, 336, 337, 338, 339, 340, 341, 349, 433, 436, 440], "imread": 3, "in1_featur": [205, 281], "in2_featur": [205, 281], "in_channel": [30, 112, 160, 165, 175, 178, 233, 234, 235, 236, 237, 238, 239, 240, 266, 267, 268, 292, 293, 303, 304, 305, 306, 307, 308, 320], "in_featur": [174, 175, 178, 207, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 267, 268, 270, 273, 274, 281, 283, 285, 286, 287, 288, 289, 291, 295, 298, 303, 304, 305, 306, 307, 308], "incept": [74, 75, 76, 77, 82, 83, 84, 85, 154], "inception_next": 77, "inception_next_atto": 154, "inception_next_bas": 154, "inception_next_smal": 154, "inception_next_tini": 154, "inception_resnet_v1": 154, "inception_resnet_v2": 154, "inception_v1": 154, "inception_v3": 154, "inception_v4": 154, "inceptionnext": [78, 79, 80, 81, 85, 154], "inceptionresnet": [83, 84], "includ": [3, 4, 7, 15, 16, 22, 23, 28, 39, 73, 74, 75, 83, 86, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 145, 151, 152, 155, 156, 160, 161, 162, 163, 164, 165, 172, 173, 175, 177, 178, 231, 233, 234, 235, 236, 237, 238, 314, 316, 318, 320, 321, 326, 332, 339, 349, 357, 363, 416, 425, 426], "inclus": [173, 176, 353, 356, 375], "incom": [207, 283], "incompat": 408, "incomplet": 2, "incompletedataset": 2, "incorpor": [27, 30, 95, 123, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 154, 251], "increas": [42, 43, 90, 98, 101, 123, 124, 125, 126, 127, 128, 129, 140, 158, 191, 192, 193, 195, 232, 324, 329, 335, 342, 346, 412, 428, 434, 435, 437, 440], "independ": [175, 191, 192, 193, 263, 270, 273, 274, 275, 276, 298, 363, 373, 432, 434, 436, 438], "index": [0, 2, 5, 6, 7, 8, 10, 12, 215, 229, 278, 294, 310, 323, 324, 325, 326, 327, 328, 330, 346, 370, 371, 374, 415, 419], "indexerror": 0, "indic": [0, 1, 13, 14, 110, 111, 145, 155, 161, 162, 163, 164, 173, 175, 177, 178, 209, 213, 229, 286, 289, 303, 310, 312, 313, 314, 315, 316, 328, 345, 358, 431, 433], "individu": [3, 175, 178, 287, 298, 332, 335, 342], "induc": [185, 257], "inf": 402, "infer": [136, 137, 138, 139, 144, 175, 178, 347], "infin": [25, 27, 338], "inform": [15, 30, 154, 155, 161, 162, 163, 164, 171, 239, 326, 332, 334, 347], "infti": [23, 340], "inherit": [1, 333, 341, 343], "init": 243, "initi": [1, 30, 39, 54, 77, 82, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 146, 147, 148, 149, 151, 157, 171, 173, 174, 175, 176, 177, 178, 240, 242, 244, 245, 246, 247, 248, 249, 263, 266, 267, 268, 281, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 298, 310, 314, 316, 318, 320, 321, 323, 325, 327, 328, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 352, 355, 356, 357, 370, 374, 375, 376, 377, 378, 379, 407], "initial_accumulator_valu": 335, "inner": [15, 361, 380], "innov": [92, 102], "input": [10, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 123, 136, 137, 138, 139, 140, 144, 150, 152, 154, 155, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 205, 207, 208, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 318, 320, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 347, 349, 357, 358, 359, 361, 362, 363, 367, 371, 373, 377, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440], "input1": 281, "input2": 281, "input_": [28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 152, 180, 181, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 207, 208, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 294, 300, 301, 302, 310, 409, 414, 420, 425, 426], "input_1": 205, "input_2": 205, "input_data": [250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 266, 267, 268, 270, 273, 274, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 295, 298, 303, 304, 305, 306, 307, 308], "input_indic": [229, 310], "input_s": [175, 177, 259, 286, 289], "input_shap": 155, "input_tensor": [15, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 150, 171, 174, 175, 176, 177, 178, 187, 197, 198, 236, 237, 238, 239, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 303, 304, 305, 306, 307, 308, 318, 320, 431, 432, 433, 434, 435, 436, 437, 438], "insid": [3, 345, 347], "insight": [15, 154], "inspect": [172, 173, 178, 321], "inspir": [10, 12, 14, 39, 154], "instabl": [24, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343], "instal": 15, "instanc": [0, 1, 15, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 151, 153, 155, 157, 158, 161, 162, 163, 164, 166, 167, 168, 169, 170, 172, 173, 174, 176, 177, 178, 217, 256, 295, 296, 297, 298, 312, 313, 315, 321, 348, 407, 418, 424, 440], "instance_norm": [204, 216, 295, 296, 297], "instancenorm1d": [280, 299], "instancenorm1dmodel": 295, "instancenorm2d": [280, 299], "instancenorm3d": [280, 299], "instanti": [2, 31, 32, 33, 34, 35, 36, 37, 38, 59, 69, 70, 71, 72, 77, 78, 79, 80, 81, 98, 99, 100, 101, 136, 137, 138, 139, 144, 161, 162, 163, 164, 166, 167, 168, 169, 170, 348], "instead": [15, 155, 174, 175, 176, 177, 178, 244, 245, 248, 249, 310, 312, 314, 316, 336, 337, 338, 347, 349, 372, 373], "int": [0, 1, 2, 5, 6, 7, 8, 12, 13, 14, 22, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 187, 190, 191, 192, 193, 195, 197, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 246, 247, 248, 249, 259, 263, 264, 266, 267, 268, 271, 278, 281, 283, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 318, 323, 324, 325, 326, 327, 328, 329, 330, 336, 337, 338, 339, 340, 342, 348, 350, 352, 353, 354, 355, 356, 358, 370, 371, 372, 374, 375, 376, 378, 385, 391, 392, 393, 400, 401, 405, 406, 407, 408, 409, 410, 414, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 431, 433, 438], "int32": 310, "integ": [1, 3, 22, 130, 145, 191, 192, 193, 220, 221, 263, 266, 267, 268, 298, 301, 302, 304, 305, 306, 307, 308, 349, 353, 354, 356, 357, 372, 376, 378, 392, 400, 405, 406, 416, 418, 419, 421, 424], "integr": [1, 2, 4, 5, 6, 7, 8, 13, 16, 101, 103, 154, 156, 173, 175, 177, 178, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 266, 267, 268, 278, 281, 283, 303, 304, 305, 306, 307, 308], "intellig": [154, 239], "intend": [10, 171, 176, 177], "intens": [24, 54, 113, 432, 434], "intent": 349, "interact": [160, 205, 281, 320, 357], "interdepend": 154, "interfac": [2, 172, 175, 332], "interfer": [345, 347], "intermedi": [24, 110, 111, 239, 312, 314, 316], "intern": [113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 154, 174, 175, 176, 177, 178, 286, 289, 320, 431, 432, 433, 434, 435, 436, 437, 438], "interpol": [204, 230, 318, 375, 438], "interpret": [10, 154, 187, 259, 349, 410], "interv": [328, 330, 352, 356, 370], "introduc": [40, 60, 74, 75, 90, 91, 92, 123, 154, 184, 239, 251, 255, 256, 258, 261, 270, 273, 274, 275, 276, 312, 433, 436, 440], "introspect": 178, "intuit": [10, 12, 15, 174, 176, 320, 440], "inv": 20, "inv_a": 21, "invari": [304, 307], "invers": [15, 18, 21, 22, 24, 324, 335, 382, 383, 384], "invert": [18, 21, 22, 26, 91, 92, 95, 154], "invok": 348, "involv": [12, 14, 17, 18, 19, 21, 24, 25, 27, 140, 180, 181, 183, 184, 185, 186, 188, 205, 207, 231, 266, 267, 268, 278, 281, 283, 349, 350, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 379, 389, 390, 391, 393, 396, 398, 415, 416, 418, 424], "is_caus": [190, 264, 315, 316], "is_leaf": 358, "issu": [3, 257, 291, 292, 293, 336, 337], "item": [7, 288], "iter": [0, 1, 2, 3, 171, 172, 175, 177, 313, 315, 321, 324, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 370], "ith": [187, 259], "its": [4, 22, 24, 28, 40, 93, 101, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 131, 132, 133, 134, 135, 141, 142, 143, 152, 154, 155, 171, 174, 175, 176, 177, 191, 192, 193, 195, 232, 240, 249, 251, 255, 260, 271, 306, 307, 308, 320, 321, 334, 342, 345, 346, 347, 348, 370, 372, 373, 378, 391, 393, 407, 408, 419, 421, 432, 435, 437, 440], "itself": [17, 22, 174, 175, 176, 177, 322], "j": [8, 10, 12, 13, 14, 30, 187, 229, 239, 259, 278, 291, 292, 293, 295, 296, 297, 303, 304, 306, 307, 310, 415, 423, 425, 426, 431, 433], "j_1": [12, 14, 278], "j_2": [12, 14, 278], "j_k": 14, "j_n": [12, 14, 278], "jie": 154, "jk": 362, "join": [3, 410], "json": 348, "k": [22, 30, 154, 190, 191, 263, 264, 266, 286, 292, 293, 296, 297, 303, 306, 307, 316, 361, 362, 371, 374, 410, 421], "k_d": [193, 268, 305, 308], "k_h": [192, 193, 267, 268, 304, 305, 308], "k_i": 263, "k_j": 30, "k_w": [192, 193, 267, 268, 304, 305, 308], "kaim": [154, 244, 245, 248, 249], "kaiming_norm": 243, "kaiming_uniform": 243, "kalenichenko": 154, "karen": 154, "kashif": 7, "kdim": 263, "keep": [172, 198, 255, 334, 347, 419, 425, 426], "keep_grad": [173, 350, 352, 353, 354, 356, 358, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 407, 430], "keep_var": 172, "keepdim": [23, 391, 392, 393, 400, 406], "kei": [93, 154, 160, 172, 174, 176, 178, 190, 263, 264, 316, 321], "kept": [392, 400, 406], "kernel": [86, 87, 88, 89, 93, 96, 97, 140, 141, 142, 143, 144, 152, 154, 191, 192, 193, 195, 219, 220, 221, 222, 223, 224, 226, 227, 228, 233, 234, 235, 236, 237, 238, 240, 266, 267, 268, 300, 301, 302, 304, 305, 308], "kernel_s": [92, 96, 97, 140, 141, 142, 143, 175, 178, 222, 223, 224, 226, 227, 228, 233, 234, 235, 236, 237, 238, 240, 266, 267, 268, 278, 292, 293, 303, 304, 305, 306, 307, 308], "keyerror": 172, "keyword": [29, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 172, 282], "kj": [361, 363], "known": 154, "kriz": [5, 6], "krizhevski": [5, 6, 154], "kroneck": [12, 187, 259, 278], "kwarg": [29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 161, 162, 163, 164, 166, 167, 168, 169, 170, 172, 282, 348], "l": [17, 24, 69, 154, 168, 190, 191, 200, 219, 222, 226, 233, 239, 264, 270, 273, 274, 275, 276, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 300, 315, 316, 401, 408], "l2": [333, 334, 335, 336, 337, 338, 339, 340, 341, 343], "l_": [154, 191, 219, 222, 226, 266, 300, 303, 306, 312], "l_k": 263, "l_m": [313, 314], "l_out": [191, 222, 226], "l_q": 263, "l_t": [312, 313, 314], "l_v": 263, "label": [4, 5, 6, 7, 8, 75, 285, 286, 289], "lambd": 333, "lambda": [19, 185, 257, 327, 333, 337], "lambda_1": 19, "lambda_2": 19, "lambda_fn": 327, "lambda_i": 19, "lambda_n": 19, "lambdalr": 331, "languag": [4, 266, 281, 303, 306, 312], "larg": [0, 3, 24, 42, 48, 49, 53, 54, 69, 72, 92, 96, 98, 101, 102, 113, 114, 115, 118, 131, 132, 154, 162, 166, 167, 168, 236, 237, 238, 256, 287, 320, 333, 336, 337, 338, 341, 342, 343, 347], "larger": [41, 59, 60, 112, 140, 158, 174, 176, 191, 192, 193, 195, 197, 271, 333, 364, 409, 416, 431, 433, 438], "largest": [53, 391], "last": [1, 187, 218, 259, 323, 324, 325, 326, 327, 328, 330, 362, 363, 409, 410, 435, 437], "last_channel": 92, "last_epoch": [323, 324, 325, 326, 327, 328, 330], "last_lr": [322, 323, 324, 325, 326, 327, 328, 329, 330], "later": [30, 154], "latest": 4, "layer": [10, 15, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 54, 55, 56, 57, 58, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 145, 146, 147, 148, 149, 152, 154, 155, 156, 160, 165, 172, 174, 175, 178, 187, 198, 207, 214, 217, 218, 233, 234, 235, 236, 237, 238, 239, 240, 244, 245, 248, 249, 259, 264, 266, 267, 268, 272, 281, 282, 283, 289, 298, 303, 304, 305, 306, 307, 308, 312, 313, 314, 315, 316, 320, 357, 416, 430], "layer1": 348, "layer2": 348, "layer_group": 175, "layer_norm": [204, 216, 298], "layer_norm_ep": [312, 314, 316], "layer_scale_init": 39, "layer_sequ": [175, 178], "layernorm": [160, 280, 299, 312, 313, 314, 315, 316], "layernormmodel": 298, "le": 154, "lead": [10, 175, 178, 251, 295, 296, 297, 298, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 357, 408], "leaf": 358, "leaki": [183, 254], "leaky_relu": [182, 204, 254], "leakyrelu": [262, 280], "learn": [1, 3, 4, 7, 8, 10, 13, 15, 22, 24, 30, 60, 79, 80, 123, 124, 125, 126, 127, 128, 129, 152, 153, 154, 174, 175, 176, 177, 184, 187, 239, 250, 254, 255, 259, 266, 267, 268, 273, 274, 275, 276, 278, 281, 283, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 346, 355, 375, 421, 425, 426, 429, 430, 440], "learnabl": [30, 160, 171, 172, 173, 214, 215, 217, 218, 233, 234, 235, 263, 266, 267, 268, 281, 283, 291, 292, 293, 294, 295, 296, 297, 298, 316, 320], "least": [24, 25, 27, 318, 404, 425, 426], "lecun": [8, 154], "left": [22, 23, 24, 27, 30, 181, 187, 251, 259, 263, 285, 286, 287, 289, 291, 292, 293, 295, 296, 297, 298, 306, 307, 308, 314, 316, 401, 431, 433], "leftarrow": 339, "len": [0, 1, 2, 3, 415], "lenet": [85, 87, 88, 89, 154], "lenet_1": 154, "lenet_4": 154, "lenet_5": 154, "length": [175, 190, 191, 200, 219, 222, 226, 266, 282, 291, 295, 300, 303, 306, 315, 316, 416, 432], "leq": [252, 253, 287, 328, 340, 368, 385, 426], "lerp": 231, "less": [0, 180, 183, 210, 250, 254, 286, 287, 289, 375, 385], "let": 19, "level": [15, 82], "leverag": [12, 13, 14, 26, 30, 76, 77, 84, 98, 101, 124, 125, 126, 127, 128, 129, 150, 154, 161, 162, 163, 164, 240, 320], "lfloor": 330, "li": 154, "librari": [3, 10, 15, 16, 172, 320, 321, 332, 348, 349, 357, 358, 440], "lie": 350, "lightweight": [15, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 91, 96, 97, 104, 105, 106, 107, 108, 109, 116, 133, 163, 164, 170, 240, 253, 256], "like": [12, 13, 14, 15, 60, 82, 93, 101, 124, 125, 126, 127, 128, 129, 141, 142, 143, 154, 156, 171, 172, 175, 178, 191, 197, 248, 249, 257, 270, 271, 278, 291, 292, 293, 295, 296, 297, 345, 346, 349, 407, 430, 440], "likelihood": [213, 286, 289], "limit": [44, 51, 96, 97, 98, 100, 155, 256, 334, 385], "linalg": [15, 20], "linalgerror": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27], "linear": [15, 16, 17, 24, 25, 26, 77, 91, 95, 130, 154, 155, 174, 175, 176, 178, 180, 181, 183, 184, 185, 198, 244, 245, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 267, 268, 270, 272, 273, 274, 281, 282, 285, 286, 287, 288, 289, 291, 295, 298, 303, 304, 305, 306, 307, 308, 312, 314, 316, 322, 348, 374], "linearli": 287, "linspac": 380, "linspace_tensor": 375, "list": [0, 1, 30, 39, 40, 60, 77, 86, 92, 103, 112, 123, 130, 140, 145, 155, 160, 161, 162, 163, 164, 171, 173, 174, 175, 176, 177, 218, 240, 282, 298, 321, 323, 324, 325, 326, 327, 328, 329, 330, 349, 350, 352, 353, 354, 356, 358, 371, 372, 373, 376, 377, 378, 379, 405, 408, 419, 421, 422, 427, 429], "listdir": 3, "liter": [13, 112, 208, 209, 210, 212, 213, 231, 233, 234, 235, 236, 237, 238, 240, 244, 245, 266, 267, 268, 285, 286, 287, 288, 289, 318, 324, 329, 415], "liu": 154, "ln": 368, "load": [3, 4, 5, 6, 7, 8, 171, 172, 173, 321, 326, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 348], "load_state_dict": [172, 321, 326, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "loader": [1, 2, 3], "local": [30, 154, 160, 161, 162, 163, 164, 195, 266, 324], "locat": [154, 231], "log": [213, 285, 286, 289, 323, 324, 325, 326, 327, 328, 329, 330, 380], "log_softmax": 289, "logarithm": [368, 389, 390], "logic": [3, 300, 301, 302, 320, 321], "logit": [28, 39, 152, 187, 259, 286], "logsoftmax": [286, 289], "long": [30, 154, 339, 405], "lookup": [229, 310], "loop": [1, 12, 13, 14, 175, 278, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "loss": [15, 24, 174, 175, 176, 177, 178, 187, 208, 209, 210, 212, 213, 250, 251, 254, 255, 257, 258, 259, 261, 270, 273, 274, 275, 276, 282, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 321, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "low": [15, 82, 91, 96, 97, 100, 353, 356], "lower": [17, 90, 247, 313, 314, 315, 316, 324, 333, 341, 342, 343, 356, 425, 426], "lower_triangular": 425, "lowest": 353, "lr": [321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "lr_lambda": 327, "lr_schedul": 331, "lrschedul": 331, "ls_init_valu": 77, "lu": 21, "lucid": [0, 1, 2, 5, 6, 7, 8, 11, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 205, 207, 208, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 318, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 351, 380, 413, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438], "m": [70, 145, 154, 174, 175, 178, 263, 304, 305, 307, 308, 312, 313, 316, 328, 336, 337, 338, 339, 340, 374, 425, 426], "m_": [336, 337, 338, 339, 340, 425, 426], "m_m": 314, "m_t": [314, 339, 340], "maaten": 154, "machin": [3, 7, 8, 15, 24, 154, 156, 239, 312, 336, 346, 355], "magnitud": [198, 229, 310, 341, 342, 440], "mai": [3, 10, 12, 14, 15, 19, 21, 24, 100, 175, 177, 232, 272, 278, 287, 322, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 347, 357, 409, 434, 440], "main": [15, 25, 82, 175, 371, 374, 425, 426], "maintain": [24, 30, 40, 45, 69, 70, 71, 72, 80, 90, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144, 154, 171, 172, 174, 175, 176, 178, 185, 198, 244, 245, 248, 249, 250, 251, 257, 270, 272, 273, 274, 275, 276, 291, 292, 293, 295, 296, 297, 336, 341, 431, 434, 438], "make": [1, 3, 10, 15, 30, 42, 43, 46, 47, 73, 82, 86, 91, 93, 95, 96, 97, 99, 100, 102, 112, 154, 161, 162, 163, 164, 166, 169, 175, 178, 258, 286, 287, 298, 304, 307, 320, 335, 336, 337, 338, 346, 348, 357, 358, 363, 415, 421, 429, 440], "manag": [15, 172, 174, 175, 176, 177, 178, 320, 332, 345, 347, 348, 357], "manhattan": 23, "mani": 155, "manipul": [10, 12, 15, 174, 176, 440], "manner": [10, 12, 13, 160, 175, 178], "manual": [10, 208, 209, 213, 285, 286, 289, 347], "map": [12, 14, 77, 110, 111, 112, 123, 133, 140, 154, 172, 186, 188, 197, 215, 239, 258, 261, 272, 278, 294, 310, 409], "mark": 414, "marri": 154, "mask": [154, 171, 190, 263, 264, 270, 273, 274, 275, 276, 312, 313, 314, 315, 316, 414, 425, 426], "masked_fil": 413, "match": [10, 14, 26, 172, 175, 178, 190, 208, 210, 212, 218, 233, 234, 235, 271, 310, 321, 389, 408, 418, 419, 421, 424, 427, 432, 440], "math": [263, 386, 396, 402], "mathbb": [263, 421], "mathbf": [12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 150, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 205, 207, 231, 236, 237, 238, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 264, 266, 267, 268, 270, 273, 274, 275, 276, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 303, 304, 305, 306, 307, 308, 361, 362, 363, 367, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 410, 412, 416, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 431, 432, 433, 434, 435, 436, 437, 438], "mathcal": [244, 246, 248, 270, 273, 274, 275, 276, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298], "mathemat": [21, 233, 234, 235, 433, 435, 436, 437], "mathrm": 24, "matmul": 380, "matric": [16, 18, 19, 21, 24, 26, 27, 263, 316, 361, 362, 363, 374, 415, 425, 426], "matrix": [12, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 27, 30, 195, 205, 229, 282, 283, 310, 320, 361, 401, 415], "matrix_pow": 20, "matthew": 154, "max": [10, 23, 130, 145, 184, 226, 227, 228, 229, 252, 253, 255, 256, 306, 307, 308, 310, 323, 324, 329, 338, 364, 380, 385], "max_lr": 324, "max_norm": [229, 310], "max_pool": [306, 307, 308], "max_pool1d": [204, 225], "max_pool2d": [204, 225], "max_pool3d": [204, 225], "max_valu": 385, "maxim": [3, 48, 101], "maximum": [23, 255, 256, 306, 307, 308, 323, 324, 336, 338, 380, 385, 391, 436], "maxpool": [28, 152], "maxpool1d": [280, 309], "maxpool1dmodel": 306, "maxpool2d": [175, 178, 267, 280, 309], "maxpool2dmodel": 307, "maxpool3d": [268, 280, 309], "maxpool3dmodel": 308, "mean": [5, 6, 7, 8, 10, 12, 13, 14, 25, 110, 111, 155, 171, 185, 191, 192, 193, 196, 208, 209, 210, 212, 213, 214, 217, 233, 234, 235, 246, 250, 251, 252, 254, 255, 257, 258, 261, 268, 270, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 329, 336, 337, 338, 339, 340, 341, 345, 354, 380, 385, 389, 390, 391, 393, 396, 398, 400, 404, 405, 406, 429, 432, 440], "meaning": [13, 178, 349], "measur": [285, 286, 288, 289], "mechan": [15, 30, 110, 111, 130, 140, 144, 154, 156, 161, 162, 163, 164, 165, 177, 205, 263, 409], "medium": [47, 51, 70, 98, 99, 102, 154], "meet": 154, "mem_is_caus": [313, 314], "mem_key_padding_mask": [312, 313, 314], "mem_mask": [312, 313, 314], "membership": 285, "memori": [2, 3, 54, 312, 313, 314, 347, 372, 373], "merg": [12, 278], "meshgrid": 413, "method": [3, 10, 13, 15, 16, 21, 60, 130, 150, 151, 174, 175, 176, 177, 178, 208, 209, 210, 212, 213, 244, 245, 248, 249, 285, 286, 287, 288, 289, 318, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 357], "metric": 329, "mha": 263, "mid": [80, 169], "mid_channel": [96, 97], "middl": 346, "might": 320, "mileston": 328, "min": [252, 253, 256, 323, 324, 329, 365, 380, 385], "min_lr": 329, "min_valu": 385, "mind": [0, 3, 15, 175, 178, 347], "mingx": 154, "mini": 1, "minim": [4, 15, 78, 92, 154, 178, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 332], "minima": 324, "minimalist": 15, "minimum": [323, 324, 329, 380, 385, 393], "minu": 258, "mirror": [377, 379], "mismatch": [10, 12, 14, 60, 172, 278, 320, 321], "miss": [172, 320], "mitig": [183, 250, 254, 257, 291, 292, 293], "mix": 77, "mixer": 77, "mlp": [77, 160, 240], "mlp_dim": 165, "mlp_ratio": [77, 160], "mnist": [4, 7, 9, 87, 88], "mnist_train": [4, 8], "mobil": [90, 91, 92, 93, 95, 96, 97, 100, 154], "mobilenet": [85, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 154, 256], "mobilenet_v2": 154, "mobilenet_v3": [96, 97], "mobilenet_v3_larg": 154, "mobilenet_v3_smal": 154, "mobilenet_v4": [98, 99, 100, 101, 102], "mobilenet_v4_conv_larg": 154, "mobilenet_v4_conv_medium": 154, "mobilenet_v4_conv_smal": 154, "mobilenet_v4_hybrid_larg": 154, "mobilenet_v4_hybrid_medium": 154, "mobilenetv2": [91, 154], "mobilenetv3": [92, 96, 97, 154], "mode": [15, 202, 214, 217, 231, 244, 245, 270, 272, 273, 274, 275, 276, 318, 324, 329, 416], "model": [1, 3, 4, 10, 15, 22, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 187, 190, 197, 229, 232, 233, 234, 235, 240, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 270, 272, 273, 274, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 295, 298, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 347, 348, 357, 429, 430, 440], "model_b0": 59, "model_b7": 59, "model_kwarg": 155, "model_tini": 77, "moder": [43, 47, 81, 99, 134], "modern": [39, 40, 77, 154], "modif": [151, 178, 347], "modifi": [29, 98, 112, 150, 153, 174, 175, 176, 177, 242, 244, 245, 246, 247, 248, 249, 270, 322, 345, 347, 355, 412, 414, 420, 428], "modul": [5, 6, 7, 8, 10, 15, 28, 29, 30, 39, 40, 59, 60, 73, 76, 77, 82, 83, 84, 86, 90, 91, 92, 93, 102, 112, 123, 130, 140, 145, 150, 152, 153, 154, 155, 156, 160, 171, 173, 174, 175, 176, 177, 178, 198, 233, 234, 235, 236, 237, 238, 239, 240, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 318, 320, 321, 322, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 348, 349, 357, 430, 440], "modular": [3, 15, 154, 156, 172, 175, 178, 320, 440], "moduledict": [175, 176, 178, 179], "modulelist": [177, 178, 179], "moment": [336, 337, 338, 339, 340], "momentum": [214, 217, 233, 234, 235, 291, 292, 293, 295, 296, 297, 324, 333, 339, 341, 343], "momentum_decai": 339, "monitor": 329, "monoton": 260, "moor": 24, "more": [3, 4, 7, 10, 15, 19, 42, 112, 119, 158, 174, 175, 178, 197, 236, 237, 238, 250, 273, 274, 275, 276, 312, 320, 321, 332, 333, 334, 337, 338, 341, 342, 343, 354, 363, 404, 423, 425, 426, 440], "most": [16, 46, 154, 307, 430, 431, 440], "move": [333, 341], "mse": [210, 212, 287, 288], "mse_loss": [204, 211], "mseloss": [280, 290], "mu": [30, 246, 291, 292, 293, 295, 296, 297, 298, 406], "mu_c": 432, "mu_i": [295, 296, 297], "much": 440, "mul": 380, "multi": [3, 4, 77, 83, 140, 141, 142, 143, 154, 156, 161, 162, 163, 164, 165, 187, 190, 209, 213, 240, 259, 263, 286, 289, 312, 314, 316, 392, 400, 406], "multidimension": [352, 356, 372], "multiheadattent": [265, 280], "multipl": [1, 3, 12, 15, 16, 22, 26, 28, 112, 130, 144, 176, 177, 178, 195, 231, 232, 239, 240, 263, 270, 273, 274, 275, 276, 278, 286, 289, 313, 315, 320, 322, 325, 329, 346, 350, 352, 353, 354, 356, 361, 366, 372, 373, 401, 409, 421, 429, 434, 440], "multipli": [22, 94, 177, 207, 283, 318, 328, 329, 330, 342, 366, 367], "multisteplr": 331, "must": [0, 1, 3, 17, 18, 19, 21, 22, 25, 26, 27, 155, 172, 174, 175, 176, 177, 178, 198, 218, 263, 270, 272, 273, 274, 275, 276, 289, 310, 312, 314, 316, 318, 321, 326, 347, 350, 404, 408, 409, 410, 412, 414, 416, 418, 419, 421, 423, 424, 425, 426, 428, 431, 432, 433, 434, 435, 437], "my_simple_model": 348, "mymodel": [172, 173, 320, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "myoptim": [321, 332], "n": [12, 22, 23, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 154, 174, 175, 178, 190, 191, 192, 193, 195, 197, 200, 201, 202, 205, 207, 208, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 239, 244, 246, 248, 263, 264, 266, 267, 268, 275, 276, 281, 283, 285, 286, 288, 289, 291, 292, 293, 294, 295, 296, 297, 300, 301, 302, 303, 304, 305, 306, 307, 308, 312, 313, 314, 315, 316, 374, 392, 404, 406], "n1": 23, "nabla_": [334, 335, 336, 337, 338, 339, 340, 342], "nabla_t": 340, "nadam": 344, "nair": [5, 6], "name": [10, 12, 13, 14, 154, 155, 172, 174, 176, 178, 278, 348, 349], "nan": [25, 27], "nano": [50, 154], "natur": [24, 154, 266, 281, 303, 306, 312, 368, 389, 390], "ndarrai": [171, 173, 349, 350, 358, 371, 373, 377, 379, 407], "ndim": [25, 27, 173, 358], "ne": 22, "nearest": [231, 318], "necessari": [4, 5, 6, 7, 8, 24, 347, 412, 428], "need": [2, 4, 13, 14, 102, 154, 175, 176, 177, 187, 281, 312, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 347, 372, 373, 429, 430, 440], "neg": [22, 24, 27, 180, 213, 232, 250, 254, 255, 257, 286, 289, 342, 410], "negative_slop": [183, 254], "neglect": 177, "neighbor": 231, "neq": 23, "nest": [155, 175, 178, 320], "nestedmodel": 155, "nesterov": 339, "net": [152, 154], "network": [3, 4, 10, 13, 15, 28, 29, 30, 39, 40, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 76, 82, 89, 90, 93, 94, 98, 101, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 130, 131, 132, 133, 134, 135, 140, 145, 153, 154, 155, 156, 165, 171, 172, 173, 174, 175, 176, 177, 178, 181, 184, 185, 186, 187, 188, 191, 192, 193, 197, 198, 205, 207, 214, 232, 239, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 303, 304, 305, 306, 307, 308, 310, 312, 314, 316, 320, 321, 332, 333, 341, 343, 356, 357, 358, 370, 376, 378, 391, 393, 416, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440], "neural": [3, 4, 10, 13, 15, 28, 29, 30, 39, 59, 61, 62, 63, 64, 65, 66, 67, 68, 82, 89, 153, 154, 155, 171, 172, 173, 174, 175, 176, 177, 178, 181, 184, 185, 186, 187, 188, 191, 192, 193, 198, 205, 207, 214, 232, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 303, 304, 305, 306, 307, 308, 310, 320, 321, 332, 333, 341, 343, 356, 357, 358, 370, 376, 378, 391, 393, 416, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440], "neuralnetwork": [252, 253, 255, 260], "neuron": 254, "never": 434, "new": [14, 172, 173, 180, 181, 183, 184, 185, 186, 188, 205, 207, 231, 240, 244, 245, 246, 247, 248, 249, 321, 326, 329, 348, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 373, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 405, 407, 408, 410, 412, 414, 416, 418, 419, 420, 423, 424, 425, 426, 427, 428], "new_tensor": 401, "next": [178, 429], "nll": 213, "nll_loss": [204, 211], "nllloss": [280, 290], "nlp": [229, 310], "nn": [5, 6, 7, 8, 15, 28, 30, 39, 40, 54, 59, 60, 73, 77, 82, 86, 90, 91, 92, 93, 112, 123, 130, 136, 137, 138, 139, 140, 144, 145, 152, 155, 160, 179, 182, 189, 194, 203, 206, 211, 216, 225, 230, 241, 243, 262, 265, 269, 277, 279, 280, 284, 290, 299, 309, 311, 317, 319, 321, 322, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 348, 430, 440], "no_grad": 345, "node": 358, "nois": [27, 357], "non": [19, 22, 24, 27, 154, 177, 181, 183, 184, 244, 245, 250, 251, 252, 254, 255, 256, 257, 258, 260, 261, 270, 273, 274, 275, 276, 312, 313, 314, 315, 316, 336, 337, 347, 368, 385], "none": [0, 1, 2, 5, 6, 7, 8, 23, 30, 59, 60, 73, 77, 82, 86, 90, 91, 92, 93, 103, 112, 150, 155, 160, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 198, 205, 207, 208, 209, 210, 212, 213, 214, 217, 218, 229, 232, 233, 234, 235, 236, 237, 238, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 318, 321, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 346, 350, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 372, 373, 374, 375, 377, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 410, 412, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 435, 437, 438], "norm": [16, 20, 160, 229, 310, 313, 315, 338], "norm_first": [312, 314, 316], "norm_lay": 160, "norm_typ": [229, 310], "normal": [5, 6, 7, 8, 30, 39, 130, 154, 160, 181, 185, 187, 188, 197, 214, 215, 217, 218, 229, 233, 234, 235, 243, 244, 248, 251, 257, 259, 270, 291, 292, 293, 294, 295, 296, 297, 298, 310, 312, 313, 314, 315, 316, 341, 354, 357, 429, 439, 440], "normalized_shap": [218, 298], "notat": [10, 12, 13, 14, 278], "note": [191, 270], "noth": [196, 199, 200, 201], "notimplementederror": [2, 172, 321], "notin": 385, "nov": 154, "novel": [7, 154], "np": [112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 171, 173, 239, 286, 289, 310, 349, 358, 363, 370, 371, 374, 376, 378, 379, 390, 401, 407, 430], "npy": [5, 6, 7, 8], "num": [313, 315, 375], "num_block": 30, "num_class": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 259, 286, 289], "num_decoder_lay": [156, 312], "num_embed": [229, 310], "num_encoder_lay": [156, 312], "num_featur": [178, 233, 234, 235, 291, 292, 293, 295, 296, 297], "num_head": [30, 156, 160, 161, 162, 163, 164, 165, 263, 312, 313, 314, 315, 316], "num_init_featur": [54, 55, 56, 57, 58], "num_lay": [165, 313, 315], "num_paramet": 177, "number": [0, 1, 2, 5, 6, 7, 8, 10, 12, 14, 18, 19, 21, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 175, 177, 178, 190, 191, 192, 193, 195, 200, 201, 202, 205, 207, 209, 213, 214, 215, 217, 219, 220, 221, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 245, 248, 249, 258, 263, 266, 267, 268, 278, 281, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 323, 324, 328, 329, 330, 333, 352, 355, 356, 358, 368, 370, 372, 374, 375, 391, 392, 393, 405, 406, 409, 410, 412, 416, 418, 419, 420, 422, 424, 428, 432, 434, 435, 437, 440], "numer": [13, 21, 24, 197, 208, 209, 214, 215, 217, 218, 233, 234, 235, 256, 271, 285, 286, 291, 292, 293, 294, 295, 296, 297, 298, 312, 314, 316, 334, 335, 336, 337, 338, 339, 340, 341, 349, 360, 370, 376, 378], "numpi": [15, 171, 173, 286, 289, 349, 358, 363, 371, 374, 375, 390, 401, 404, 407, 408, 416, 418, 424, 430, 440], "o": [3, 263, 305, 308, 376, 377], "object": [1, 3, 16, 140, 154, 172, 176, 177, 288, 320, 347, 359, 360, 364, 365, 366, 369, 407], "observ": 336, "obtain": 1, "occur": [14, 232, 347, 348, 410], "occurr": 22, "odot": [270, 273, 274, 275, 276], "off": [43, 99, 345], "offer": [4, 10, 15, 40, 41, 43, 53, 80, 99, 166, 320, 332, 357, 440], "offset": 374, "often": [22, 121, 122, 191, 192, 193, 195, 229, 271, 286, 289, 370, 378, 430, 434, 438, 440], "old": 329, "older": 339, "onc": 347, "one": [0, 13, 136, 137, 138, 139, 144, 177, 178, 187, 191, 207, 222, 226, 233, 234, 235, 257, 258, 259, 266, 274, 286, 289, 291, 295, 303, 306, 318, 321, 346, 349, 354, 369, 377, 391, 393, 411, 417, 423, 430], "ones": [205, 207, 266, 267, 268, 283, 291, 292, 293, 295, 296, 297, 298, 320, 374, 377, 380, 409], "ones_lik": 380, "onli": [15, 155, 231, 252, 255, 270, 271, 273, 274, 275, 276, 285, 286, 289, 291, 292, 293, 295, 296, 297, 298, 306, 307, 308, 342, 345, 370, 385, 391, 393, 401, 404, 416, 417, 419, 420, 422, 425, 426], "onto": [25, 27], "openml": [5, 6, 7, 8], "oper": [3, 10, 12, 13, 14, 15, 16, 21, 24, 30, 110, 111, 130, 131, 132, 133, 134, 135, 171, 172, 175, 180, 181, 183, 184, 185, 186, 188, 190, 191, 192, 193, 195, 198, 202, 205, 207, 219, 220, 221, 222, 223, 224, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 264, 266, 267, 268, 270, 272, 273, 274, 275, 276, 278, 281, 282, 283, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 320, 345, 346, 347, 349, 350, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 372, 373, 376, 378, 389, 390, 391, 392, 393, 396, 398, 400, 401, 404, 406, 410, 412, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 432, 438], "operatornam": [22, 24, 263, 312, 313, 314, 315, 316], "opposit": [333, 420], "optim": [3, 10, 13, 15, 16, 22, 24, 25, 27, 39, 44, 45, 48, 51, 53, 54, 60, 69, 70, 71, 72, 73, 74, 75, 76, 79, 82, 83, 84, 91, 92, 96, 97, 99, 100, 101, 102, 154, 171, 173, 176, 177, 195, 266, 267, 268, 310, 320, 323, 324, 325, 326, 327, 328, 329, 330, 347], "optimizer_st": [321, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "option": [1, 5, 6, 7, 8, 10, 12, 13, 14, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 180, 183, 187, 190, 192, 193, 196, 197, 198, 199, 200, 201, 202, 205, 207, 208, 209, 210, 212, 213, 214, 215, 217, 218, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 245, 246, 247, 248, 249, 250, 254, 259, 264, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 318, 321, 323, 324, 325, 326, 327, 328, 329, 330, 333, 341, 343, 350, 352, 353, 354, 356, 358, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 391, 392, 393, 400, 405, 406, 407, 409, 410, 415, 418, 420, 421, 422, 423, 425, 426, 430, 434, 435, 437], "ord": 23, "order": [1, 3, 10, 23, 27, 174, 175, 176, 177, 178, 405, 429], "ordered_dict": 178, "ordereddict": [172, 174, 175, 178], "organ": [174, 175, 176, 178, 348], "orient": 440, "origin": [31, 32, 33, 34, 35, 36, 37, 38, 40, 75, 89, 154, 160, 196, 232, 239, 261, 409, 416, 417, 418, 419, 420, 424, 427, 438], "orthogon": [24, 25, 27], "orthonorm": 25, "oscil": [333, 341, 343], "other": [2, 3, 15, 21, 75, 84, 86, 89, 99, 171, 172, 175, 178, 244, 245, 270, 271, 320, 321, 345, 347, 357, 358, 370, 372, 376, 378, 404, 415, 440], "otherwis": [113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 180, 183, 184, 185, 187, 198, 250, 252, 253, 254, 255, 257, 259, 272, 273, 274, 275, 276, 287, 303, 304, 305, 306, 307, 308, 313, 315, 321, 342, 348, 364, 365, 391, 393, 414, 425, 426], "otim": [24, 205, 281], "out": [0, 3, 4, 10, 180, 181, 183, 184, 185, 186, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 205, 207, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 244, 245, 248, 249, 264, 266, 267, 268, 270, 272, 273, 274, 275, 276, 278, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 314, 333, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 410, 411, 412, 416, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428], "out_channel": [86, 92, 96, 97, 175, 178, 233, 234, 235, 236, 237, 238, 240, 266, 267, 268, 292, 293, 303, 304, 305, 306, 307, 308, 320], "out_featur": [174, 175, 178, 205, 207, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 267, 268, 270, 273, 274, 281, 283, 285, 286, 287, 288, 289, 291, 295, 298, 303, 304, 305, 306, 307, 308], "outcom": [434, 435, 437], "outer": 380, "outlier": [210, 287], "output": [0, 1, 2, 10, 14, 15, 22, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 205, 207, 219, 220, 221, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 318, 320, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 349, 350, 353, 354, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 373, 374, 376, 378, 379, 389, 390, 391, 392, 393, 396, 398, 400, 401, 404, 405, 406, 414, 415, 416, 418, 420, 421, 424, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438], "output_height": 195, "output_lay": [175, 178], "output_s": [175, 219, 220, 221, 300, 301, 302], "output_width": 195, "output_with_norm": [229, 310], "output_with_pad": [229, 310], "outsid": [0, 272], "over": [0, 1, 2, 3, 13, 16, 91, 101, 110, 111, 140, 152, 172, 175, 177, 187, 219, 220, 221, 239, 259, 266, 267, 268, 286, 289, 291, 292, 293, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 322, 324, 330, 333, 334, 335, 336, 337, 352, 356, 391, 392, 393, 400, 404, 406, 434, 435, 437], "overal": [150, 198], "overdetermin": 24, "overfit": [1, 28, 152, 199, 202, 271, 273, 274, 275, 276, 333, 336, 341, 343], "overhead": [92, 154, 239], "overlap": 154, "overli": 256, "overrid": [2, 3, 99, 100, 101, 160], "overridden": [172, 321], "overshoot": 322, "overwrit": [174, 176], "own": [4, 174, 175, 176, 177, 191, 192, 193, 249, 320, 432], "p": [23, 24, 59, 173, 176, 177, 196, 197, 198, 199, 200, 201, 202, 229, 270, 271, 273, 274, 275, 276, 303, 306, 307, 310, 434, 435, 437, 440], "p_d": [305, 308], "p_h": [304, 305, 308], "p_w": [304, 305, 308], "packag": [2, 3, 4, 10, 16, 154, 320, 332, 348, 355, 357, 430, 440], "pad": [86, 175, 178, 191, 192, 193, 195, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 233, 234, 235, 236, 237, 238, 240, 266, 267, 268, 292, 293, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 413], "pad_after_dim1": 416, "pad_after_dim2": 416, "pad_before_dim1": 416, "pad_before_dim2": 416, "pad_width": 416, "padding_height": 195, "padding_idx": [229, 310], "padding_width": 195, "pair": 205, "pang": 154, "paper": [31, 32, 33, 34, 35, 36, 37, 38, 74], "paradigm": 154, "parallel": [1, 3, 140, 154, 263], "param": [172, 173, 176, 177, 321, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "param1": 172, "param_dict": 176, "param_group": [321, 332], "param_groups_setup": 321, "param_list": 177, "param_s": 348, "paramet": [0, 2, 15, 87, 88, 89, 154, 172, 320, 321, 322, 332, 349, 357, 440], "parameter": 93, "parameterdict": 179, "parameterlist": 179, "parent": 320, "part": [171, 172, 249, 310, 320, 345, 347, 357, 370, 371, 374, 376, 377, 378, 379, 409, 421, 425, 426, 430, 440], "partial": [17, 18, 19, 21, 22, 23, 24, 26, 27, 180, 181, 183, 184, 185, 186, 187, 188, 205, 207, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 266, 267, 268, 270, 273, 274, 275, 276, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 303, 304, 305, 306, 307, 308, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 410, 412, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428], "particip": [173, 430], "particular": [174, 176], "particularli": [15, 24, 91, 99, 124, 125, 126, 127, 128, 129, 175, 176, 177, 178, 187, 197, 207, 233, 234, 235, 236, 237, 238, 259, 283, 286, 289, 295, 296, 297, 298, 323, 337, 345, 348, 375, 429], "partit": 421, "pass": [2, 15, 24, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 155, 172, 173, 174, 175, 176, 177, 178, 231, 233, 234, 235, 239, 240, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 267, 268, 270, 271, 272, 273, 274, 275, 276, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 295, 298, 303, 304, 305, 306, 307, 308, 312, 313, 314, 315, 316, 320, 349, 358, 375, 392, 400, 404, 405, 406, 410, 412, 417, 419, 422, 425, 426, 428, 430, 440], "past": [333, 334, 336, 341], "patch": [154, 160, 165, 166, 167, 168, 169, 170, 195, 304], "patch_norm": 160, "patch_siz": [160, 165, 166, 167, 168, 169, 170], "path": [3, 5, 6, 7, 8, 39, 40, 77, 198, 272], "pathwai": 154, "patienc": 329, "pattern": [10, 12, 13, 14, 30, 154, 184, 239, 255, 266, 267, 268, 278], "penal": [333, 341, 343], "penalti": [334, 335, 336, 337, 338, 339, 340], "penros": 24, "per": [1, 12, 92, 124, 125, 126, 127, 128, 129, 141, 142, 143, 190, 219, 263, 278, 295, 296, 297, 298, 300, 316, 324, 408], "perceptron": 77, "perform": [3, 10, 13, 15, 16, 17, 24, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 60, 69, 70, 71, 72, 77, 78, 80, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 99, 100, 101, 102, 120, 136, 137, 138, 139, 140, 145, 152, 154, 158, 169, 172, 173, 177, 181, 190, 191, 192, 193, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 236, 237, 238, 239, 240, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 260, 261, 266, 267, 268, 270, 273, 274, 275, 276, 278, 281, 282, 283, 291, 292, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 318, 321, 322, 326, 329, 345, 347, 355, 357, 359, 360, 363, 366, 369, 389, 391, 393, 400, 405, 408, 421, 429, 431, 433, 438, 440], "period": 323, "permut": [12, 278, 405], "persist": [171, 350, 352, 353, 354, 356, 372, 373], "perturb": [19, 26, 27, 440], "phase": 30, "phi": [181, 251], "pi": [181, 251, 323, 386, 396, 402], "pico": [51, 154], "piecewis": [252, 253], "pil": [430, 440], "pinv": 20, "pioneer": 154, "pipelin": [5, 6, 7, 8, 278, 357, 429, 430, 432], "pixel": [5, 6, 7, 8, 231, 318, 432, 434], "place": [242, 244, 245, 246, 247, 248, 249, 414, 420], "placehold": [172, 282], "plai": [349, 357], "plot": 415, "point": [4, 232, 328, 345], "pointwis": [236, 237, 238], "pool": [10, 28, 86, 87, 88, 89, 103, 112, 123, 130, 140, 145, 152, 154, 219, 220, 221, 222, 223, 224, 226, 227, 228, 239, 240, 267, 268, 300, 301, 302, 303, 304, 305, 306, 307, 308, 391, 393], "pool1": 178, "pool2": 178, "poorli": 21, "popul": 172, "popular": [4, 154], "portion": [409, 425, 426, 440], "pose": 24, "posit": [1, 17, 22, 30, 154, 156, 160, 165, 172, 178, 190, 232, 250, 254, 255, 257, 264, 303, 304, 305, 306, 307, 308, 312, 313, 314, 315, 316, 342, 346, 368, 409, 414, 418, 424, 433], "possibl": [15, 440], "potenti": [24, 282, 341, 422], "power": [10, 15, 22, 50, 91, 96, 97, 103, 154, 167, 239, 278, 322, 346, 347, 380, 429, 430, 440], "pp": 154, "practic": [24, 80, 286, 289], "practition": 440, "pre": [30, 69, 70, 71, 72, 113, 117, 118, 154], "preactbottleneck": [113, 117, 118], "preced": [154, 173, 318, 358], "preconfigur": [61, 62, 63, 64, 65, 66, 67, 68, 83, 84], "predecessor": 40, "predefin": [4, 31, 32, 33, 34, 35, 36, 37, 38, 154, 161, 162, 163, 164, 166, 167, 168, 169, 170, 175, 257, 310, 322], "predict": [150, 154, 160, 161, 162, 163, 164, 285, 286, 288, 289], "prefer": 330, "prefix": [172, 348], "prepar": [3, 346, 416, 418, 424, 430, 440], "prepend": [172, 408], "preprint": 154, "preprocess": [3, 4, 195, 232, 357, 429, 430, 440], "present": [285, 286, 287, 289, 291, 292, 293, 295, 296, 297, 298, 304], "preserv": [13, 154, 196, 198, 232, 270, 272, 370, 371, 374, 376, 377, 378, 379, 392, 400, 401, 406, 409, 420], "preset": 4, "prevent": [1, 10, 174, 175, 176, 177, 178, 190, 199, 202, 256, 264, 271, 273, 274, 275, 276, 285, 286, 315, 316, 322, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 347], "previou": [154, 333, 342, 347], "previous": [326, 336], "primari": [15, 349], "primarili": 178, "principl": 154, "print": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 205, 207, 208, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 318, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 345, 346, 347, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 430, 431, 432, 433, 434, 435, 436, 437, 438], "priorit": [96, 97, 101, 240, 252], "prob": 350, "probabilist": 357, "probabl": [59, 75, 156, 160, 165, 181, 187, 190, 196, 197, 198, 199, 200, 201, 202, 208, 251, 259, 263, 264, 270, 271, 272, 273, 274, 275, 276, 285, 286, 289, 312, 314, 316, 350, 434, 435, 437, 440], "problem": [24, 25, 27, 154, 183, 250, 254, 340], "proceed": 154, "process": [2, 3, 4, 22, 25, 27, 28, 39, 83, 110, 111, 112, 140, 151, 152, 154, 160, 177, 191, 192, 193, 217, 232, 233, 234, 235, 239, 240, 257, 261, 266, 268, 281, 291, 292, 293, 295, 296, 297, 298, 303, 305, 306, 308, 312, 313, 315, 333, 349, 415, 430, 431, 432, 433, 438, 440], "produc": [28, 152, 155, 219, 220, 221, 239, 266, 267, 268, 300, 301, 302, 355, 357], "product": [15, 25, 27, 190, 253, 258, 260, 263, 264, 281, 298, 320, 361, 362, 366, 367], "program": [345, 357], "progress": [60, 325, 327, 328, 335], "project": [25, 27, 156, 160, 263], "projector": 24, "promin": [303, 305, 306, 307, 308], "promot": [178, 286, 289, 320], "propag": [18, 19, 21, 24, 25, 26, 27, 154, 172, 178, 205, 207, 231, 239, 304, 305, 341, 342, 350, 361, 362, 363, 367, 391, 393, 409, 415, 416, 419, 427], "proper": [229, 409], "properli": [0, 177, 187, 259, 320, 322], "properti": [16, 18, 21, 22, 181, 185, 196, 251, 257, 270, 335, 340], "proport": [5, 6, 7, 8, 406], "proportion": 438, "provid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 29, 41, 50, 52, 73, 74, 75, 82, 86, 93, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 145, 150, 151, 153, 154, 156, 160, 165, 167, 168, 172, 174, 175, 176, 177, 181, 190, 207, 220, 221, 229, 232, 264, 278, 285, 286, 287, 289, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 315, 318, 320, 321, 322, 326, 327, 332, 333, 334, 341, 343, 345, 347, 349, 355, 357, 358, 363, 370, 377, 391, 393, 405, 407, 418, 422, 424, 440], "pseudo": [21, 24], "purpos": [41, 46, 50, 352, 356, 370, 376, 378], "python": 349, "pytorch": 407, "q": [25, 154, 190, 263, 264, 316], "q_i": [30, 263], "qk": [30, 314, 316], "qk_scale": 160, "qkv_bia": 160, "qr": 20, "quad": [24, 229, 263, 285, 286, 287, 288, 289, 306, 307, 308, 313, 315, 359, 360, 364, 365, 366, 369, 425, 426, 431], "quadrat": 287, "qualifi": 329, "queri": [160, 190, 263, 264, 316], "quickli": 322, "quoc": 154, "quotient": 360, "r": [13, 14, 25, 30, 154, 263, 421, 434, 435, 436, 437], "r_t": 340, "radam": 344, "radix": [103, 104, 105, 106, 107, 108, 109, 110, 111], "rais": [0, 1, 2, 172, 320, 321, 368, 408], "rand": [351, 357], "randint": [351, 357], "randn": [12, 14, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 94, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 150, 152, 190, 236, 237, 238, 239, 240, 263, 264, 278, 312, 313, 314, 315, 316, 320, 351, 355, 357], "random": [1, 2, 3, 12, 14, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 94, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 150, 190, 236, 237, 238, 239, 240, 263, 272, 278, 310, 312, 313, 314, 315, 316, 433, 434, 435, 436, 437, 440], "random_integ": 357, "random_tensor": 357, "randomcrop": [439, 440], "randomgrayscal": [439, 440], "randomhorizontalflip": [439, 440], "randomli": [1, 196, 198, 199, 200, 201, 202, 232, 270, 273, 274, 275, 276, 433, 434, 435, 436, 437, 440], "randomnoisedataset": [0, 1, 2], "randomrot": [439, 440], "randomverticalflip": 439, "rang": [0, 1, 16, 30, 43, 52, 102, 112, 120, 154, 177, 186, 188, 191, 192, 198, 209, 213, 249, 256, 258, 261, 272, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 341, 343, 350, 353, 375, 382, 383, 385, 432, 436, 440], "rank": 24, "rasul": 7, "rate": [39, 40, 59, 60, 77, 160, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "rather": [7, 12, 14, 176, 177, 278, 328, 337, 419], "ratio": [59, 77, 130, 160, 239, 240, 438], "ravel": 413, "raw": [187, 259, 286, 349], "re": [173, 347], "reach": 328, "readabl": [10, 174, 175, 176, 178, 278, 320, 349], "readi": [3, 15, 136, 137, 138, 139, 144, 154, 156], "real": [24, 27, 91, 258], "rearrang": [11, 195, 279, 280], "reassembl": 154, "recalibr": [131, 133, 134, 136, 137, 138, 139, 154, 239], "receiv": [306, 307, 308, 416, 425, 426], "recent": 341, "recept": [140, 144, 154, 240], "reciproc": [24, 380, 390, 398], "recognit": [89, 110, 111, 154, 160, 161, 162, 163, 164, 267], "rectangular": 374, "rectif": 340, "rectifi": [183, 184, 254, 255, 340], "recurr": [154, 175, 298], "recurs": [155, 172], "red": 434, "reduc": [11, 28, 30, 90, 112, 123, 140, 145, 152, 154, 236, 237, 238, 239, 291, 292, 293, 295, 296, 297, 303, 304, 305, 306, 307, 308, 322, 325, 328, 329, 330, 339, 342, 347, 349, 391, 392, 393, 400, 406, 434], "reducelronplateau": 331, "reduct": [10, 13, 27, 59, 130, 208, 209, 210, 212, 213, 239, 240, 285, 286, 287, 288, 289, 323, 329, 330, 391, 393], "reevalu": 321, "refer": [4, 15, 172, 357, 371, 374, 410], "refin": [154, 322], "reflect": 345, "regardless": [24, 417], "region": [193, 197, 219, 220, 221, 231, 252, 271, 301, 302, 416, 431, 440], "regist": [31, 32, 33, 34, 35, 36, 37, 38, 99, 121, 122, 124, 125, 126, 127, 128, 129, 151, 171, 172, 173, 177, 320, 348], "register_buff": 171, "register_model": [29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 141, 142, 143, 146, 147, 148, 149, 151, 153, 157, 158, 161, 162, 163, 164, 166, 167, 168, 169, 170], "register_paramet": 172, "registr": [172, 320], "registri": [124, 125, 126, 127, 128, 129, 348], "registry_path": 348, "regress": [4, 212, 287, 288], "regul": [229, 310], "regular": [24, 28, 39, 59, 60, 75, 152, 160, 198, 202, 264, 271, 273, 274, 275, 276, 328, 330, 333, 334, 335, 338, 339, 340, 341, 343], "reimagin": 154, "rel": [30, 154, 160, 322, 329], "relat": [347, 374, 376], "relationship": [30, 438], "relev": [231, 333, 341, 343], "reli": [197, 347], "reliabl": [5, 6, 7, 8], "reliant": [273, 274, 275, 276], "relu": [15, 28, 130, 145, 152, 154, 155, 174, 175, 176, 178, 180, 182, 183, 204, 233, 234, 235, 239, 240, 244, 245, 248, 249, 250, 254, 256, 260, 262, 266, 267, 268, 280, 281, 282, 283, 312, 314, 316], "relu1": 178, "relu2": 178, "relu3": 178, "relu6": [262, 280], "remain": [5, 6, 7, 8, 52, 171, 198, 218, 270, 272, 273, 274, 275, 276, 310, 342], "rememb": 357, "remov": [348, 422], "reorder": [10, 12, 278, 401, 420], "rep": 424, "repeat": [11, 413, 415, 424], "repetit": [10, 14, 418, 424], "replac": [7, 154, 312, 357, 414, 434], "replic": [14, 313, 315, 408], "repres": [7, 12, 13, 14, 21, 23, 27, 86, 93, 104, 105, 106, 107, 108, 109, 172, 173, 178, 205, 207, 214, 217, 218, 229, 266, 267, 268, 278, 281, 283, 286, 289, 298, 310, 313, 321, 330, 332, 333, 339, 340, 341, 342, 343, 349, 350, 359, 360, 366, 369, 371, 392, 404, 405, 406, 415, 431, 433, 435, 436, 437, 438], "represent": [30, 103, 110, 111, 121, 122, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 140, 144, 154, 156, 165, 229, 239, 304, 307, 310, 321], "reproduc": [350, 352, 353, 354, 355, 356, 357, 440], "requir": [2, 3, 4, 13, 15, 42, 48, 49, 81, 92, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 124, 125, 126, 127, 128, 129, 140, 158, 168, 170, 171, 174, 178, 180, 181, 183, 184, 185, 186, 188, 205, 207, 231, 239, 240, 249, 282, 286, 289, 320, 328, 345, 347, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 374, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 408, 410, 412, 414, 415, 416, 417, 418, 419, 422, 423, 424, 427, 428, 430, 431, 438], "requires_grad": [171, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 195, 205, 207, 229, 231, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 266, 267, 268, 270, 273, 274, 275, 276, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 303, 304, 305, 306, 307, 308, 318, 320, 350, 352, 353, 354, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 414, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 430], "rescal": [208, 209, 213, 285, 286, 289], "research": 320, "reset": [173, 323, 355, 358], "reshap": [10, 12, 15, 130, 207, 267, 268, 278, 318, 346, 349, 401, 413, 417], "residu": [76, 82, 83, 84, 91, 92, 95, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 131, 132, 133, 134, 135, 154, 314, 316], "residualblock": 112, "resili": 342, "resiz": [231, 429, 439, 440], "resnest": [85, 104, 105, 106, 107, 108, 109, 110, 111, 154], "resnest_101": 154, "resnest_14": 154, "resnest_200": 154, "resnest_26": 154, "resnest_269": 154, "resnest_50": 154, "resnest_50_1s4x24d": 154, "resnest_50_4s2x40d": 154, "resnet": [82, 83, 84, 85, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 131, 132, 133, 134, 135, 140, 141, 142, 143, 154, 239], "resnet_1001": 154, "resnet_101": 154, "resnet_152": 154, "resnet_18": 154, "resnet_200": 154, "resnet_269": 154, "resnet_34": 154, "resnet_50": 154, "resnet_arg": 140, "resnext": [85, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144, 154], "resnext_101_32x16d": 154, "resnext_101_32x32d": 154, "resnext_101_32x4d": 154, "resnext_101_32x8d": 154, "resnext_101_64x4d": 154, "resnext_50_32x4d": 154, "resolut": [30, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 77, 136, 137, 138, 139, 144, 154], "resolv": [12, 13, 14, 278], "resourc": [44, 45, 47, 48, 51, 52, 78, 92, 96, 97, 98, 99, 100, 101, 102, 154, 168, 347], "respect": [12, 17, 18, 19, 21, 22, 23, 24, 25, 27, 86, 145, 161, 162, 163, 164, 171, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 205, 207, 231, 240, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 266, 267, 268, 270, 273, 274, 275, 276, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 303, 304, 305, 306, 307, 308, 324, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 385, 389, 390, 391, 392, 393, 396, 398, 400, 404, 405, 406, 415, 416, 418, 424, 434], "respons": [136, 137, 138, 139, 154, 174, 215, 294, 332], "rest": [425, 426], "restor": [239, 326, 347], "restructur": 419, "result": [10, 12, 14, 17, 21, 22, 24, 154, 172, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 191, 192, 193, 195, 205, 207, 219, 220, 221, 222, 223, 224, 226, 227, 228, 231, 232, 240, 252, 256, 259, 263, 272, 278, 320, 321, 345, 347, 350, 352, 353, 354, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 393, 394, 395, 396, 397, 398, 399, 401, 402, 403, 404, 407, 410, 412, 415, 416, 417, 418, 419, 421, 422, 423, 424, 427, 428, 430, 433, 434, 440], "resum": [323, 324, 325, 326, 327, 328, 329, 330, 332], "retain": [173, 197, 271, 358, 370, 378, 391, 392, 393, 400, 406, 409, 414, 425, 426, 430], "retent": 430, "rethink": 154, "retriev": [0, 2, 174, 176, 177, 229], "return": [0, 1, 2, 3, 5, 6, 7, 8, 15, 31, 32, 33, 34, 35, 36, 37, 38, 82, 86, 100, 102, 130, 171, 172, 174, 175, 176, 177, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 266, 267, 268, 270, 272, 273, 274, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 295, 298, 303, 304, 305, 306, 307, 308, 313, 315, 320, 321, 326, 327, 329, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 348, 349, 429, 440], "reus": [154, 430], "reusabl": [178, 272, 320, 429], "revers": [15, 178, 405, 435, 437], "revert": 347, "revolution": 154, "rfloor": 330, "rgb": [5, 6, 30, 74, 75, 76, 83, 84, 160], "rho": 334, "rho_": 340, "rho_t": 340, "right": [22, 23, 24, 26, 27, 30, 181, 187, 251, 259, 263, 285, 286, 287, 289, 291, 292, 293, 295, 296, 297, 298, 306, 307, 308, 314, 316, 401, 431], "rightarrow": [12, 263, 278, 421], "risk": 349, "rmsprop": 344, "rob": 154, "robust": [41, 46, 79, 100, 197, 232, 270, 273, 274, 275, 276, 287, 320, 334, 433, 434, 436, 440], "roland": 7, "role": [349, 357, 440], "roll": 413, "root": [4, 5, 6, 7, 8, 335, 341, 398], "rotat": [204, 230, 436, 440], "rotated_imag": 232, "rout": [306, 307, 308], "routin": 15, "row": [18, 19, 21, 26, 207, 229, 374, 415, 425, 426, 428], "rprop": 344, "rule": [14, 21, 22, 278, 346, 359, 360, 364, 365, 366, 368, 369], "run": [15, 171, 214, 217, 233, 234, 235, 291, 292, 293, 295, 296, 297, 334, 347, 355, 357], "running_mean": [171, 214, 217, 291, 292, 293, 295, 296, 297], "running_var": [214, 217, 291, 292, 293, 295, 296, 297], "runtim": [60, 175, 178, 272, 320, 375], "s_": 342, "s_1": 421, "s_2": 421, "s_d": [305, 308], "s_h": [304, 305, 308], "s_i": 421, "s_n": 421, "s_w": [304, 305, 308], "sain": 154, "same": [18, 19, 21, 22, 26, 187, 196, 197, 198, 199, 200, 201, 202, 214, 215, 217, 218, 220, 221, 232, 233, 234, 235, 236, 237, 238, 240, 256, 266, 267, 268, 270, 273, 274, 275, 276, 282, 291, 292, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 342, 350, 355, 357, 363, 373, 377, 379, 389, 391, 392, 393, 401, 410, 412, 414, 417, 419, 422, 423, 425, 426, 428, 432], "sampl": [0, 1, 2, 3, 5, 6, 7, 8, 15, 69, 70, 71, 72, 74, 75, 76, 83, 84, 86, 87, 88, 89, 94, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 136, 137, 138, 139, 144, 219, 220, 221, 244, 245, 246, 247, 248, 249, 270, 273, 274, 275, 276, 281, 283, 286, 289, 298, 300, 301, 302, 350, 354, 357, 375, 431, 433, 435, 436, 437, 438], "sandler": 154, "satisfi": [17, 19, 26, 421], "satur": [250, 440], "save": [2, 171, 173, 321, 326, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 347, 348], "scalabl": [3, 46, 59, 124, 125, 126, 127, 128, 129, 150, 154, 320], "scalar": [18, 23, 208, 209, 210, 212, 213, 349, 350, 414], "scale": [13, 19, 24, 30, 39, 45, 47, 48, 49, 51, 53, 54, 59, 60, 77, 83, 87, 88, 89, 90, 94, 98, 99, 101, 102, 103, 110, 111, 113, 114, 115, 118, 131, 132, 140, 141, 142, 143, 154, 160, 161, 162, 163, 164, 166, 167, 168, 169, 180, 185, 187, 190, 198, 214, 215, 217, 218, 229, 239, 240, 248, 249, 250, 252, 254, 257, 258, 259, 261, 263, 264, 270, 272, 273, 274, 275, 276, 286, 291, 292, 293, 294, 295, 296, 297, 298, 310, 318, 324, 327, 333, 335, 336, 337, 349, 357, 406, 438], "scale_by_keep": [198, 272], "scale_factor": 318, "scale_fn": 324, "scaled_dot_product_attent": [189, 204], "scaleddotproductattent": [265, 280], "scenario": [44, 49, 51, 99, 100, 101, 102, 176, 177, 298, 323, 324, 330, 337, 338, 430, 434], "schedul": [271, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333], "scientif": 346, "score": [112, 123, 140, 187, 190, 264, 286], "scratch": 15, "script": 357, "se": [59, 131, 132, 133, 134, 135, 136, 137, 138, 139, 154], "se_resnet_101": 154, "se_resnet_152": 154, "se_resnet_18": 154, "se_resnet_34": 154, "se_resnet_50": 154, "se_resnext_101_32x4d": 154, "se_resnext_101_32x8d": 154, "se_resnext_101_64x4d": 154, "se_resnext_50_32x4d": 154, "se_scal": 59, "seamless": [0, 1, 3, 4, 13, 278, 320, 357], "seamlessli": [3, 4, 10, 12, 14, 16, 173, 175, 178, 320, 349, 440], "search": 154, "second": [19, 175, 176, 205, 239, 281, 336, 337, 338, 339, 340, 346, 359, 361, 362, 363, 364, 365, 366, 367, 368, 369, 401, 412, 415, 437], "section": 363, "see": [15, 363], "seed": [350, 351, 352, 353, 354, 356, 357, 440], "seek": 102, "seen": 334, "select": [13, 14, 140, 141, 142, 143, 144, 154, 231, 239, 240, 306, 308, 324, 400], "selectivekernel": 241, "self": [0, 1, 2, 3, 15, 28, 30, 59, 60, 73, 77, 82, 86, 90, 91, 92, 93, 103, 130, 145, 152, 154, 155, 156, 160, 165, 171, 172, 173, 174, 175, 176, 177, 185, 198, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 270, 271, 272, 273, 274, 278, 281, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 312, 313, 314, 316, 320, 321, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 348, 414, 420, 429, 430], "selfattent": 316, "selu": [182, 196, 204, 262, 270, 280], "selunetwork": 257, "semodul": 241, "senet": [85, 131, 132, 133, 134, 135, 136, 137, 138, 139, 154], "sensit": [210, 287, 291, 292, 293], "sentiment": 4, "separ": [0, 90, 110, 111, 150, 154, 191, 192, 193, 236, 237, 238, 295, 296, 297], "seq_len": [190, 263, 264, 312, 313, 314, 315, 316], "sequenc": [22, 112, 123, 140, 154, 156, 174, 176, 190, 191, 263, 310, 312, 313, 315, 316, 370, 375, 410, 412, 416, 418, 423, 424, 428, 429], "sequenti": [28, 82, 86, 130, 145, 150, 152, 154, 155, 174, 175, 179, 191, 233, 234, 235, 278, 282, 313, 315, 429, 440], "seri": [73, 87, 88, 140, 191, 233, 266, 303, 306], "serial": [171, 172, 332], "serv": [3, 7, 54, 82, 130, 145, 156, 172, 174, 175, 176, 177, 178, 320, 342, 430], "set": [3, 4, 5, 6, 7, 8, 30, 98, 99, 100, 110, 111, 121, 122, 136, 137, 138, 139, 144, 155, 173, 177, 190, 191, 192, 193, 229, 254, 255, 257, 264, 266, 267, 268, 270, 275, 276, 281, 283, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 310, 321, 336, 337, 341, 350, 352, 353, 354, 355, 356, 357, 358, 370, 372, 373, 378, 379, 385, 391, 393, 407, 414, 425, 426, 430, 434, 440], "setup": [4, 15, 124, 125, 126, 127, 128, 129], "sever": [24, 266, 267, 268, 303, 304, 305, 306, 307, 308, 347, 429, 440], "sgd": [15, 322, 323, 324, 325, 326, 327, 328, 329, 330, 333, 340, 344], "sgn": 23, "shape": [3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 18, 19, 21, 22, 24, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 77, 78, 79, 80, 81, 82, 86, 92, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 141, 142, 143, 144, 145, 150, 152, 154, 155, 171, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 205, 207, 208, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 239, 240, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 270, 271, 273, 274, 275, 276, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 320, 324, 346, 349, 350, 352, 353, 354, 356, 357, 358, 361, 372, 373, 374, 376, 377, 378, 379, 385, 390, 391, 392, 393, 396, 398, 400, 401, 405, 406, 408, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 428, 431, 432, 433, 434, 435, 436, 437, 438, 440], "shapelik": 353, "share": 154, "sharp": 324, "shen": 239, "shift": [154, 160, 161, 162, 163, 164, 214, 215, 217, 218, 252, 291, 292, 293, 294, 295, 296, 297, 298, 420], "shorthand": 363, "should": [12, 13, 14, 86, 171, 278, 312, 313, 314, 315, 316, 328, 347, 350, 352, 353, 354, 356, 372, 373, 382, 383, 404, 408, 416, 429], "show": [345, 348], "showcas": 15, "shown": [260, 355], "shrink": 334, "shuffl": [1, 2, 3], "side": [26, 175, 178, 191, 192, 193, 222, 223, 224, 226, 227, 228, 233, 234, 235, 266, 267, 268, 303, 304, 305, 306, 307, 308, 347], "sigma": [24, 30, 239, 244, 246, 248, 258, 260, 291, 292, 293, 295, 296, 297, 298, 405], "sigma_c": 432, "sigma_i": 24, "sigmoid": [182, 204, 239, 244, 245, 248, 249, 252, 253, 260, 262, 280, 285], "sigmoidnetwork": 258, "sign": [22, 287, 342, 380], "signal": [233, 266, 267, 268, 291, 295, 303, 304, 305, 306, 307, 308], "signific": [42, 347], "significantli": [91, 123, 154, 239, 429], "sim": [270, 273, 274, 275, 276], "similar": [10, 15, 244, 245, 363, 390, 401, 407, 408, 416], "similarli": [27, 404], "simonyan": 154, "simpl": [3, 4, 15, 155, 178, 191, 192, 193, 205, 207, 222, 223, 224, 226, 227, 228, 251, 252, 253, 255, 256, 257, 258, 260, 261, 266, 267, 268, 270, 273, 274, 275, 276, 281, 283, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 303, 304, 305, 306, 307, 308, 320, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 361, 362, 367, 429], "simplebinaryclassificationmodel": 285, "simpleblock": 198, "simpleclassificationmodel": [286, 289], "simplegelumodel": 251, "simplehardsigmoidmodel": 252, "simplehardswishmodel": 253, "simpleleakyrelumodel": 254, "simplemodel": [15, 155, 256, 272, 283, 348], "simpleregressionmodel": 288, "simplerelumodel": 255, "simpleselumodel": 257, "simplesigmoidmodel": 258, "simpleswishmodel": 260, "simpletanhmodel": 261, "simpli": [345, 404, 405, 419], "simplic": [154, 252, 255], "simplifi": [4, 12, 14, 69, 70, 71, 72, 87, 151, 154, 178, 233, 234, 235, 278], "simul": [155, 440], "simultan": 232, "sin": [380, 386], "sinc": [22, 25, 174, 175, 176, 177, 191, 192, 193, 249, 345, 347, 350, 354, 401, 415, 440], "sine": [383, 396, 397], "singl": [0, 4, 22, 25, 27, 112, 187, 233, 234, 235, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 266, 267, 268, 286, 298, 304, 305, 306, 307, 308, 313, 314, 315, 316, 321, 349, 356, 372, 375, 410, 422, 432, 434, 440], "singleton": [14, 298], "singular": [18, 21, 22, 24, 26, 27], "sinh": [380, 387, 403], "size": [0, 1, 2, 3, 10, 12, 13, 14, 27, 30, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 77, 80, 86, 87, 88, 89, 93, 94, 96, 97, 112, 140, 152, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 175, 190, 191, 192, 193, 195, 197, 200, 201, 202, 208, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 263, 266, 267, 268, 271, 278, 281, 283, 285, 286, 289, 291, 292, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 315, 316, 318, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 348, 353, 356, 357, 358, 391, 392, 393, 400, 406, 408, 409, 410, 412, 421, 422, 427, 428, 431, 433, 438, 440], "size_or_sect": 421, "sk": [140, 141, 142, 143, 144, 154, 240], "sk_resnet_18": 154, "sk_resnet_34": 154, "sk_resnet_50": 154, "sk_resnext_50_32x4d": 154, "skblock": 140, "skip": [154, 347], "sknet": [85, 141, 142, 143, 144, 154], "slice": [205, 404], "slide": [195, 303, 305, 306, 308], "slight": 239, "slightli": 440, "slope": [183, 250, 254], "slow": [3, 340], "small": [24, 43, 45, 47, 50, 69, 70, 71, 72, 79, 80, 87, 88, 89, 92, 96, 97, 100, 154, 163, 164, 169, 170, 183, 197, 208, 209, 214, 215, 217, 218, 254, 257, 271, 285, 286, 287, 291, 292, 293, 294, 295, 296, 297, 298, 304, 307, 312, 314, 316, 322, 334, 335, 336, 337, 338, 339, 340, 341, 342], "smaller": [10, 44, 69, 70, 71, 72, 98, 152, 154, 175, 178, 320, 335, 336, 365, 409, 431, 433, 438], "smallest": 393, "smooth": [75, 181, 250, 251, 260, 325, 333, 341, 440], "smoother": [325, 333], "so": [174, 175, 176, 177, 232, 320, 340, 372, 373, 429], "softmax": [30, 182, 190, 204, 240, 262, 263, 264, 280, 286, 314, 316], "softmaxmodel": 259, "solut": [24, 26], "solv": [16, 17, 20, 24, 25, 27], "solver": 16, "some": [180, 198, 199, 232, 270, 272, 273, 274, 291, 292, 293, 295, 296, 297, 335, 336, 337, 347, 349, 409], "sometim": 346, "sophist": [175, 178], "sourc": [156, 157, 158, 190, 312, 357], "space": [19, 25, 27, 156, 191, 192, 193, 195, 219, 220, 221, 233, 234, 235, 236, 237, 238, 266, 267, 268, 300, 301, 302, 370, 375, 440], "span": 4, "spars": [335, 336], "spatial": [28, 30, 112, 123, 140, 145, 152, 154, 197, 215, 234, 239, 267, 268, 291, 292, 293, 295, 296, 297, 298, 304, 305, 306, 307, 308, 318, 415], "spatial_dim": 239, "spatio": 268, "special": [0, 1, 15, 24, 171, 172, 173, 270, 357], "specif": [4, 15, 55, 56, 57, 58, 69, 70, 71, 72, 82, 90, 98, 99, 100, 101, 102, 110, 111, 121, 122, 174, 175, 176, 177, 178, 240, 249, 270, 273, 274, 275, 276, 295, 296, 297, 310, 320, 321, 328, 345, 357, 372, 391, 393, 414, 418, 424], "specifi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 23, 29, 54, 60, 86, 93, 94, 95, 98, 99, 100, 101, 103, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 142, 143, 145, 146, 147, 148, 149, 151, 153, 155, 160, 161, 162, 163, 164, 175, 187, 195, 202, 208, 209, 210, 212, 213, 218, 219, 220, 221, 229, 231, 232, 239, 259, 263, 266, 267, 268, 278, 285, 286, 287, 288, 289, 298, 300, 301, 302, 304, 305, 306, 307, 308, 310, 318, 321, 324, 328, 349, 352, 353, 354, 355, 356, 368, 370, 371, 372, 373, 374, 375, 376, 378, 379, 385, 391, 392, 393, 400, 401, 405, 406, 407, 408, 409, 410, 412, 414, 416, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 436, 438, 440], "speech": 295, "speed": [96, 97, 252, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343], "split": [4, 103, 110, 111, 154, 263, 409, 410, 412, 413, 428], "split_tensor": 421, "springer": 154, "sqrt": [30, 181, 190, 215, 244, 245, 248, 249, 251, 263, 264, 291, 292, 293, 294, 295, 296, 297, 298, 314, 316, 334, 335, 336, 337, 339, 340, 341, 380, 382, 383], "squar": [1, 3, 17, 18, 19, 21, 22, 24, 25, 26, 27, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 197, 210, 212, 271, 287, 288, 334, 335, 336, 341, 380, 398], "squaredataset": [0, 1, 2, 3], "squeez": [59, 92, 96, 97, 130, 133, 136, 137, 138, 139, 154, 239, 413], "src": [154, 312, 315, 316], "src_key_pad": 315, "src_key_padding_mask": [312, 316], "src_mask": [312, 315, 316], "src_vocab_s": [156, 157, 158], "stabil": [21, 24, 30, 154, 197, 208, 209, 214, 215, 217, 218, 229, 233, 234, 235, 256, 271, 285, 286, 291, 292, 293, 294, 295, 296, 297, 298, 310, 312, 314, 316, 322, 333, 334, 335, 336, 337, 338, 339, 340, 341, 432], "stabl": [244, 245, 248, 249, 270, 286, 333, 337, 338, 341, 342, 343], "stack": [14, 178, 240, 312, 313, 315, 412, 413, 428, 440], "stage": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 77, 103, 104, 105, 106, 107, 108, 109, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 154, 160, 161, 162, 163, 164], "stage1": 130, "stage2": 130, "stage3": 130, "stage4": 130, "stall": 329, "standalon": 256, "standard": [41, 46, 79, 98, 101, 112, 121, 122, 156, 157, 181, 183, 236, 237, 238, 244, 246, 248, 250, 251, 254, 270, 312, 342, 354, 357, 363, 429, 432, 440], "start": [1, 3, 10, 322, 333, 335, 342, 370, 375, 431, 433], "state": [48, 154, 167, 171, 172, 173, 175, 178, 321, 326, 345, 347, 355], "state_dict": [172, 173, 321, 326, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "static": 178, "statist": [24, 196, 214, 217], "std": [5, 6, 7, 8, 246, 429, 432, 440], "stem": [82, 103, 112, 123, 140, 154], "stem_typ": 112, "stem_width": [103, 104, 105, 106, 107, 108, 109, 112], "step": [10, 30, 173, 195, 240, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 347, 370, 429, 430], "step_siz": [322, 324, 326, 330, 342], "step_size_down": 324, "step_size_up": 324, "steplr": [322, 326, 331], "still": [51, 334], "stochast": [15, 39, 40, 59, 60, 77, 160, 198, 272, 333, 343], "stochastic_depth": 59, "stop": [329, 370, 375], "storag": [174, 176, 358], "store": [2, 4, 5, 6, 7, 8, 112, 123, 140, 171, 172, 173, 174, 175, 176, 177, 239, 300, 301, 302, 347, 358, 431, 432, 433, 434, 435, 436, 437, 438], "str": [5, 6, 7, 8, 10, 12, 13, 14, 30, 93, 112, 145, 172, 174, 176, 178, 208, 209, 210, 212, 213, 231, 278, 318, 321, 324, 326, 329, 348, 415], "straightforward": [343, 345, 359], "strategi": [30, 101, 154, 322, 326, 332], "streamlin": [2, 3, 154], "strength": [30, 271], "strict": [172, 321], "stride": [60, 86, 87, 88, 89, 92, 93, 96, 97, 175, 178, 191, 192, 193, 195, 219, 220, 221, 222, 223, 224, 226, 227, 228, 233, 234, 235, 236, 237, 238, 240, 266, 267, 268, 300, 301, 302, 303, 304, 305, 306, 307, 308], "stride_height": 195, "stride_width": 195, "strike": [46, 93, 100], "string": [10, 12, 13, 14, 172, 174, 176, 178, 266, 267, 268, 278, 321], "strong": [30, 166], "structur": [0, 10, 13, 15, 25, 30, 60, 92, 150, 171, 172, 175, 197, 271, 278, 320, 321, 348, 349, 374, 430], "style": [10, 82, 217, 295, 296, 415], "sub": [174, 175, 176, 177, 178, 320, 380, 409, 421, 431, 433], "sub_tensor": 358, "subclass": [1, 2, 3, 15, 172, 173, 174, 320, 321, 326], "sublay": [155, 312, 314, 316], "submodul": [155, 172, 320], "subsequ": [175, 178, 249, 357], "subset": [110, 111, 273, 274], "subspac": 263, "substanti": 168, "subtract": [15, 369, 432], "suffer": 335, "suit": [51, 55, 56, 57, 58, 75, 90, 98, 99, 101, 140, 166, 244, 245, 248, 249, 322], "suitabl": [41, 43, 44, 47, 49, 61, 62, 63, 64, 65, 66, 67, 68, 82, 87, 88, 89, 91, 96, 97, 99, 102, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 133, 135, 154, 157, 161, 162, 163, 164, 169, 287, 335, 336, 352], "sum": [10, 13, 23, 174, 175, 176, 177, 178, 187, 190, 208, 209, 210, 212, 213, 240, 259, 285, 286, 287, 288, 289, 335, 359, 362, 367, 380, 404, 406, 408, 410, 412, 415, 418, 421, 424, 428], "sum_": [12, 13, 22, 30, 187, 215, 259, 278, 285, 286, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 303, 304, 305, 328, 361, 362, 392, 400, 404, 406, 408, 415, 418], "sum_i": [23, 367], "sum_j": 367, "sum_k": 363, "summar": [31, 32, 33, 34, 35, 36, 37, 38, 59, 121, 122, 150, 303, 304, 305], "summari": [121, 122, 136, 137, 138, 139, 144], "summat": [10, 12, 13, 14, 22, 328], "sun": 239, "super": [15, 155, 171, 172, 173, 174, 175, 176, 177, 198, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 270, 272, 273, 274, 281, 283, 285, 286, 287, 288, 289, 291, 292, 293, 295, 298, 303, 304, 305, 306, 307, 308, 320, 321, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 348], "superior": [53, 154], "supplementari": 101, "support": [1, 3, 4, 12, 15, 16, 22, 23, 24, 25, 27, 94, 112, 174, 175, 176, 177, 178, 190, 231, 232, 264, 310, 318, 320, 332, 339, 357, 358, 359, 360, 363, 364, 365, 366, 368, 369, 371, 374, 385, 390, 392, 396, 398, 400, 404, 405, 406, 410, 415, 419, 421, 430, 440], "suppos": 440, "sure": [320, 440], "svd": [20, 24], "swap": [12, 278], "swapax": 380, "swin": [154, 159, 160, 161, 162, 163, 164], "swint": 154, "swintransform": [161, 162, 163, 164], "swish": [96, 97, 262, 280], "symbol": [12, 13, 14, 278], "symmetr": [17, 219, 220, 221, 248, 249, 261], "syntax": [1, 10, 12, 13, 14, 278, 363], "system": [16, 17, 24, 25, 26, 100, 154, 345, 415], "systemat": [154, 440], "szegedi": [74, 154], "t": [10, 24, 30, 154, 312, 313, 314, 316, 323, 324, 325, 327, 328, 329, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 347, 358, 363, 407, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440], "t0": 333, "t1": 407, "t2": 407, "t_": [313, 323], "t_0": 313, "t_i": 313, "t_max": 323, "tabl": [31, 32, 33, 34, 35, 36, 37, 38, 59, 310], "tabular": 4, "tailor": [4, 92, 100, 104, 105, 106, 107, 108, 109, 320, 440], "take": [25, 303, 304, 305, 306, 307, 308, 318, 327, 347, 429], "taken": 404, "tan": [154, 380], "tangent": [188, 261, 384, 402, 403], "tanh": [86, 175, 178, 181, 182, 204, 244, 245, 248, 249, 251, 262, 280, 380], "tanhnetwork": 261, "target": [5, 6, 7, 8, 51, 156, 157, 158, 178, 208, 209, 210, 212, 213, 219, 220, 221, 231, 285, 286, 287, 288, 289, 300, 301, 302, 312, 313, 314, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 408, 431, 433, 438], "target_tensor": [285, 286, 287, 288, 289], "target_transform": [5, 6, 7, 8], "task": [4, 15, 16, 28, 29, 30, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 79, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 150, 154, 156, 157, 158, 160, 161, 162, 163, 164, 166, 167, 168, 169, 186, 187, 192, 205, 208, 209, 212, 213, 239, 240, 258, 259, 266, 267, 268, 285, 286, 287, 288, 289, 295, 296, 297, 303, 305, 306, 308, 312, 336, 346, 357, 374, 375, 440], "techniqu": [17, 21, 39, 60, 77, 101, 152, 154, 198, 214, 270, 271, 273, 274, 275, 276, 295, 296, 297, 322, 332, 438, 440], "templat": 156, "tempor": [266, 268, 305, 308], "temporarili": 347, "tensor": [2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 69, 70, 71, 72, 74, 75, 76, 82, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 112, 124, 125, 126, 127, 128, 129, 130, 141, 142, 143, 145, 150, 152, 155, 160, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 205, 207, 208, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 318, 320, 345, 347, 349, 350, 352, 353, 354, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440], "term": [12, 24, 52, 205, 233, 234, 235, 236, 237, 238, 263, 312, 314, 316, 333, 337, 339, 340, 341, 343], "test": [4, 5, 6, 7, 8, 375], "test_backward": 155, "test_siz": [5, 6, 7, 8], "text": [4, 18, 22, 23, 30, 112, 123, 140, 141, 142, 143, 150, 174, 180, 183, 184, 185, 187, 190, 191, 192, 193, 198, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 233, 234, 235, 236, 237, 238, 239, 240, 244, 245, 248, 249, 250, 252, 253, 254, 255, 256, 257, 259, 260, 263, 264, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 285, 286, 287, 288, 289, 303, 304, 305, 306, 307, 308, 310, 312, 313, 315, 324, 329, 330, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 353, 359, 360, 362, 364, 365, 366, 368, 369, 381, 385, 391, 392, 393, 395, 400, 401, 406, 408, 410, 412, 414, 416, 417, 418, 419, 420, 421, 422, 424, 425, 426, 427, 428, 431, 432, 433, 435, 436, 437], "tgt": [154, 312, 313, 314], "tgt_is_caus": [313, 314], "tgt_key_padding_mask": [312, 313, 314], "tgt_mask": [312, 313, 314], "tgt_vocab_s": [156, 157, 158], "th": [205, 285, 286, 288, 289, 295, 296, 297, 364, 365, 368], "than": [0, 1, 7, 12, 14, 176, 177, 180, 183, 210, 236, 237, 238, 250, 254, 260, 278, 287, 321, 328, 337, 375, 385, 404, 408, 409, 416, 423, 431, 433, 438], "thei": [0, 15, 27, 154, 171, 175, 177, 178, 263, 349, 415, 419, 431, 433, 440], "them": [3, 10, 154, 172, 177, 195, 333, 346, 410, 423, 429, 432, 440], "therebi": [270, 304, 305, 307, 308], "theta": [333, 334, 436], "theta_": [333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "theta_t": [340, 341], "thi": [0, 1, 2, 3, 5, 6, 7, 8, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 74, 75, 76, 82, 83, 84, 86, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 140, 141, 142, 143, 144, 150, 154, 155, 156, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 173, 175, 176, 177, 178, 184, 186, 187, 188, 191, 192, 193, 195, 197, 198, 205, 207, 219, 229, 231, 232, 236, 237, 238, 239, 240, 244, 245, 248, 249, 250, 251, 252, 254, 255, 257, 258, 259, 260, 261, 264, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 281, 282, 283, 285, 286, 287, 289, 291, 292, 293, 295, 296, 297, 298, 300, 303, 304, 305, 306, 307, 308, 310, 320, 322, 323, 324, 325, 327, 328, 329, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 353, 354, 355, 357, 358, 362, 363, 367, 370, 372, 376, 377, 378, 379, 385, 389, 390, 391, 392, 393, 396, 398, 400, 401, 404, 405, 406, 407, 408, 409, 414, 416, 418, 419, 420, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440], "thing": 347, "those": [15, 87, 88, 89, 177, 249], "three": [27, 89, 193, 221, 224, 228, 233, 234, 235, 268, 276, 293, 297, 302, 305, 308], "threshold": [24, 210, 287, 329], "threshold_mod": 329, "through": [0, 3, 4, 14, 15, 19, 24, 25, 27, 28, 39, 73, 82, 86, 93, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 141, 142, 143, 151, 152, 154, 174, 175, 178, 197, 205, 207, 231, 239, 240, 250, 251, 252, 253, 254, 255, 257, 258, 260, 261, 266, 267, 268, 270, 273, 274, 275, 276, 281, 282, 283, 291, 292, 293, 295, 298, 303, 304, 305, 306, 307, 308, 312, 313, 315, 316, 350, 354, 361, 362, 367, 415, 417, 419, 422, 425, 426, 427, 440], "throughout": [156, 160, 165, 185, 430], "ti": [154, 170], "tier": 48, "tile": [14, 413], "time": [0, 3, 22, 87, 88, 89, 91, 191, 233, 254, 257, 263, 266, 303, 304, 305, 306, 307, 308, 313, 315, 322, 329, 333, 334, 335, 336, 337, 341, 343, 347, 418, 424], "tini": [43, 44, 52, 77, 81, 154], "to_tensor": [5, 6, 7, 8], "togeth": [178, 429, 440], "token": [77, 310], "token_mix": 77, "too": [322, 342], "tool": [3, 15, 320, 322, 346, 357, 429, 440], "top": [17, 18, 19, 25, 27, 48, 190, 205, 207, 231, 263, 264, 266, 267, 268, 281, 283, 431, 433], "torch": [145, 407], "toronto": [5, 6], "total": [0, 1, 2, 5, 6, 7, 8, 10, 12, 14, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 155, 157, 158, 161, 162, 163, 164, 166, 167, 168, 169, 170, 173, 263, 278, 358, 419], "totensor": [429, 440], "trace": [16, 380], "track": [15, 233, 234, 235, 291, 292, 293, 295, 296, 297, 320, 345, 347, 350, 352, 353, 354, 356, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 401, 407, 408, 414, 430], "track_running_stat": [233, 234, 235, 291, 292, 293, 295, 296, 297], "trade": [43, 99], "tradit": [7, 10, 30, 102, 154, 334, 335, 338, 339, 340], "trail": 218, "train": [1, 2, 3, 4, 5, 6, 7, 8, 15, 30, 39, 60, 73, 74, 75, 136, 137, 138, 139, 144, 154, 155, 156, 171, 172, 175, 177, 178, 187, 196, 197, 198, 199, 200, 201, 202, 214, 217, 229, 232, 251, 254, 257, 258, 259, 261, 270, 271, 272, 273, 274, 275, 276, 291, 292, 293, 295, 296, 297, 310, 320, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 347, 429, 432, 433, 434, 435, 436, 437, 440], "trainabl": [155, 291, 292, 293, 295, 296, 297, 310, 320], "transact": 239, "transfer": [217, 295, 296], "transform": [2, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 19, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 176, 190, 205, 207, 263, 264, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 313, 314, 315, 316, 346, 401, 415], "transform_pipelin": [429, 440], "transformed_imag": [429, 440], "transformer_bas": 154, "transformer_big": 154, "transformer_decod": 313, "transformer_encod": 315, "transformerdecod": [280, 312, 317], "transformerdecoderlay": [280, 312, 313, 317], "transformerencod": [280, 312, 317], "transformerencoderlay": [280, 312, 315, 317], "transit": [30, 54, 287], "translat": [156, 304, 307, 312], "transpos": [12, 15, 17, 380], "transposit": [12, 278], "treat": [0, 171, 298, 320], "triangular": [17, 25, 313, 314, 315, 316, 324, 425, 426], "triangular2": 324, "tril": 413, "triu": 413, "true": [1, 2, 3, 4, 5, 6, 7, 8, 27, 73, 74, 75, 96, 97, 103, 155, 160, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 195, 196, 198, 199, 200, 201, 202, 205, 207, 214, 217, 229, 231, 233, 234, 235, 236, 237, 238, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 270, 272, 273, 274, 275, 276, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 303, 304, 305, 306, 307, 308, 312, 313, 314, 315, 316, 318, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 336, 337, 341, 345, 350, 352, 353, 354, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 412, 414, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 430], "truncat": 155, "truncate_from": 155, "try": 0, "tune": [99, 102, 440], "tupl": [2, 3, 5, 6, 7, 8, 19, 23, 25, 27, 30, 54, 112, 155, 172, 173, 191, 192, 193, 195, 218, 220, 221, 222, 223, 224, 226, 227, 228, 231, 232, 233, 234, 235, 236, 237, 238, 266, 267, 268, 282, 298, 301, 302, 303, 304, 305, 306, 307, 308, 318, 336, 337, 338, 339, 340, 342, 349, 352, 353, 354, 356, 358, 372, 376, 378, 391, 392, 393, 400, 406, 408, 409, 410, 412, 415, 416, 419, 420, 421, 422, 423, 427, 428, 431, 432, 433, 438], "twice": 416, "two": [15, 18, 19, 21, 22, 24, 25, 27, 87, 88, 89, 92, 110, 111, 141, 145, 191, 192, 193, 205, 223, 227, 239, 240, 267, 275, 281, 292, 296, 304, 307, 316, 336, 337, 338, 339, 340, 342, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 401, 404, 409, 415, 421], "type": [31, 32, 33, 34, 35, 36, 37, 38, 77, 86, 103, 112, 130, 140, 160, 171, 172, 173, 205, 281, 312, 314, 316, 358, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 407, 415, 430], "typeerror": [0, 1, 2, 172, 321], "typic": [16, 30, 93, 99, 112, 123, 140, 161, 162, 163, 164, 171, 187, 196, 197, 232, 239, 256, 257, 259, 271, 272, 289, 291, 292, 293, 295, 296, 297, 332, 333, 341, 343, 347, 349, 427, 430, 432, 436, 438, 440], "u": [24, 27, 245, 247, 249], "u_": 338, "ultra": [45, 118], "unchang": [171, 202, 250, 254, 255, 257, 270, 273, 274, 275, 276, 282, 417, 422], "undefin": 368, "under": [124, 125, 126, 127, 128, 129, 320], "underbrac": 22, "underdetermin": 24, "undergo": [198, 316, 440], "underli": [0, 15, 69, 70, 71, 72, 74, 75, 76, 83, 84, 401, 407, 412, 417, 419, 428], "understand": [15, 152, 154, 155, 178, 440], "understood": 12, "unexpect": [10, 172, 175, 178, 357], "unfold": [194, 204], "unifi": 0, "uniform": [243, 245, 249, 266, 267, 268, 281, 283, 351, 352, 353, 357, 434, 435, 436, 437], "uniformli": [352, 356], "uniniti": [372, 373], "unintend": [10, 13, 347], "union": 145, "uniqu": [17, 24, 26, 174, 176, 310], "unit": [28, 86, 152, 180, 181, 183, 184, 185, 244, 245, 248, 249, 250, 251, 254, 255, 257, 270], "unless": [113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 358], "unlik": [30, 154, 160, 171, 174, 175, 176, 177, 183, 250, 254, 270, 298, 334, 335, 337, 338, 339, 340, 342], "unnecessari": [10, 347], "unpad": 416, "unseen": 440, "unsqueez": 413, "unstabl": 21, "unsur": 10, "up": [321, 326, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 436, 438], "updat": [4, 40, 171, 177, 178, 270, 273, 274, 275, 276, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 347], "upon": [40, 75, 92, 93, 154, 174, 175, 176, 177], "upper": [25, 247, 324, 342, 356, 425, 426], "upper_triangular": 426, "upsampl": [280, 319], "us": [0, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 19, 21, 22, 24, 25, 27, 30, 39, 54, 59, 60, 73, 74, 75, 76, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 154, 155, 160, 161, 162, 163, 164, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 205, 207, 212, 214, 215, 217, 220, 221, 229, 231, 232, 233, 234, 235, 239, 240, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 318, 320, 321, 322, 323, 325, 327, 328, 330, 332, 345, 346, 347, 348, 350, 352, 353, 354, 356, 357, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 389, 391, 392, 393, 400, 401, 406, 414, 415, 416, 418, 421, 422, 424, 425, 426, 427, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440], "usag": [3, 16, 41, 42, 43, 44, 52, 53, 54, 150, 175, 178, 198, 236, 237, 238, 264, 271, 321, 332, 375, 431, 432, 433, 434, 435, 436, 437, 438], "use_aux": [73, 74, 75], "use_h": [96, 97], "use_s": [96, 97], "user": [1, 2, 3, 4, 15, 102, 174, 175, 176, 177, 320, 327, 335, 429, 430, 440], "usual": 286, "util": [3, 15, 16, 30, 93, 141, 142, 143, 176, 177, 197, 320, 357], "v": [19, 24, 27, 30, 154, 190, 263, 264, 314, 316, 336, 337, 339, 340, 371], "v1": [73, 74, 82, 83, 84, 90, 91, 154], "v2": [45, 46, 47, 48, 49, 50, 51, 52, 60, 69, 70, 71, 72, 82, 84, 85, 91, 92, 95, 154], "v3": [73, 75, 76, 85, 92, 96, 97, 154], "v4": [73, 76, 85, 93, 99, 100, 101, 102, 154], "v_": [333, 336, 337, 339, 340, 341, 343], "v_i": 263, "v_stack": 428, "v_t": [340, 341], "val": 242, "val_loss": 329, "valid": [233, 234, 235, 236, 237, 238, 240, 266, 267, 268, 329, 405], "valu": [10, 15, 18, 22, 23, 24, 27, 39, 77, 90, 93, 101, 121, 122, 155, 160, 172, 174, 176, 178, 180, 183, 186, 187, 188, 190, 191, 192, 193, 195, 197, 198, 208, 209, 210, 212, 213, 214, 215, 217, 218, 219, 231, 232, 233, 234, 235, 239, 242, 244, 245, 246, 247, 248, 249, 250, 254, 255, 256, 257, 258, 261, 263, 264, 270, 271, 272, 273, 274, 275, 276, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 303, 304, 305, 306, 307, 308, 312, 313, 314, 315, 316, 318, 322, 329, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 349, 350, 352, 353, 354, 355, 356, 357, 370, 371, 372, 373, 374, 375, 381, 382, 383, 385, 388, 389, 390, 391, 393, 395, 396, 398, 399, 410, 414, 416, 417, 419, 427, 432, 434, 435, 437], "valuabl": 357, "valueerror": [1, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 321], "van": 154, "vanish": [154, 250, 257, 291, 292, 293], "var": 380, "vari": [39, 140, 175, 177, 219, 231, 300, 324, 436], "variabl": [172, 178, 219, 220, 221, 282, 300, 301, 302, 320, 345, 347, 352, 372, 433, 436], "varianc": [185, 196, 214, 217, 233, 234, 235, 244, 245, 248, 249, 257, 270, 291, 292, 293, 295, 296, 297, 298, 336, 337, 338, 339, 340, 354, 406, 436, 440], "variant": [31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 70, 71, 72, 78, 79, 80, 81, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 121, 122, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 158, 336, 337, 338], "variat": [236, 237, 238, 295, 296, 297, 433, 440], "varieti": [4, 82, 103, 357, 440], "variou": [7, 10, 12, 13, 30, 54, 73, 83, 84, 86, 93, 94, 102, 154, 255, 332, 357, 375, 391, 393, 416, 430], "vasudevan": 154, "vaswani": [154, 312], "vdim": 263, "vdot": 367, "vector": [14, 19, 24, 25, 26, 27, 205, 207, 229, 263, 281, 283, 310, 361, 362, 363, 367], "veloc": [333, 341, 343], "verbos": [12, 323, 324, 325, 326, 327, 328, 329, 330], "veri": [24, 47, 115, 117, 154, 334], "verifi": 10, "versa": 342, "versatil": [30, 102, 357, 415], "version": [27, 39, 73, 77, 82, 86, 87, 88, 99, 278, 341, 367, 420, 434], "vertic": [423, 428, 437], "vgg": 145, "vggnet": [85, 146, 147, 148, 149, 154], "vggnet_11": 154, "vggnet_13": 154, "vggnet_16": 154, "vggnet_19": 154, "via": [3, 4, 102, 140], "vice": 342, "video": [193, 202, 235, 268, 297, 305, 308], "view": [82, 86, 175, 304, 305, 306, 307, 308, 408, 419], "vinod": [5, 6], "vision": [30, 90, 91, 95, 103, 112, 154, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 192, 267, 281, 440], "visual": [152, 154], "vit": [30, 154, 159, 160, 166, 167, 168, 169, 170], "vit_bas": 154, "vit_hug": 154, "vit_larg": 154, "vit_smal": 154, "vit_tini": 154, "vocabulari": [156, 157, 158, 310], "vol": 154, "vollgraf": 7, "volumetr": [193, 202, 235, 268, 297, 305, 308], "vstack": 413, "w": [10, 12, 13, 14, 30, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 154, 192, 193, 195, 197, 201, 202, 205, 207, 215, 220, 221, 223, 224, 227, 228, 231, 232, 234, 235, 239, 263, 266, 267, 268, 278, 281, 283, 292, 293, 294, 296, 297, 301, 302, 305, 308, 431, 433], "w_": [192, 193, 220, 221, 223, 224, 227, 228, 231, 267, 268, 301, 302, 304, 305, 307, 308], "w_1": [314, 316], "w_2": [314, 316], "w_k": 30, "w_out": [192, 193, 223, 224, 227, 228], "wa": [74, 270, 273, 274, 275, 276, 347], "wai": [1, 10, 12, 14, 29, 153, 278, 345, 347, 419], "wait": 329, "wang": 154, "want": [0, 15, 429, 431], "warn": [174, 176, 263], "we": [3, 15, 346, 415], "wei": 154, "weight": [110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 154, 160, 190, 191, 192, 193, 205, 207, 208, 209, 213, 214, 217, 218, 229, 231, 239, 240, 244, 245, 248, 249, 263, 264, 266, 267, 268, 270, 271, 273, 274, 275, 276, 281, 283, 285, 286, 289, 291, 292, 293, 295, 296, 297, 298, 310, 312, 313, 314, 315, 316, 320, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 352, 357], "weight1": 176, "weight2": 176, "weight_decai": [333, 334, 335, 336, 337, 338, 339, 340, 341, 343], "weihao": 154, "weinberg": 154, "well": [51, 55, 56, 57, 58, 60, 75, 99, 140, 166, 244, 245], "were": 178, "weyand": 154, "what": [12, 14, 278, 347], "when": [0, 1, 3, 10, 13, 15, 22, 59, 154, 172, 175, 177, 178, 180, 183, 191, 192, 193, 229, 250, 272, 282, 291, 292, 293, 295, 296, 297, 318, 321, 323, 324, 325, 326, 327, 328, 329, 330, 334, 342, 345, 347, 348, 349, 357, 368, 408, 429, 431], "where": [3, 4, 5, 6, 7, 8, 12, 13, 14, 18, 19, 21, 22, 23, 24, 25, 27, 96, 97, 98, 99, 100, 101, 150, 154, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 198, 200, 201, 202, 205, 207, 208, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 239, 240, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 270, 273, 274, 275, 276, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 323, 324, 325, 327, 328, 329, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 347, 349, 357, 359, 360, 364, 365, 366, 368, 369, 372, 373, 385, 389, 390, 391, 392, 393, 396, 398, 400, 404, 405, 406, 409, 410, 414, 416, 418, 421, 424, 425, 426, 429, 430, 431, 432, 433, 434, 435, 436, 437], "wherev": 414, "whether": [1, 18, 30, 59, 73, 74, 75, 96, 97, 103, 160, 172, 173, 244, 245, 272, 341, 345, 350, 352, 353, 354, 356, 358, 372, 373, 391, 392, 393, 400, 406], "which": [0, 7, 13, 15, 18, 19, 21, 22, 23, 24, 25, 27, 31, 32, 33, 34, 35, 36, 37, 38, 60, 76, 84, 90, 91, 93, 94, 98, 104, 105, 106, 107, 108, 109, 110, 111, 136, 137, 138, 139, 140, 144, 146, 147, 148, 149, 154, 156, 160, 161, 162, 163, 164, 172, 174, 176, 178, 183, 187, 210, 232, 236, 237, 238, 240, 250, 251, 254, 256, 259, 261, 270, 287, 289, 291, 292, 293, 295, 296, 297, 298, 310, 314, 316, 328, 330, 336, 337, 339, 341, 345, 347, 349, 352, 353, 356, 382, 383, 384, 385, 386, 387, 390, 391, 392, 393, 394, 396, 397, 398, 400, 402, 403, 404, 406, 408, 409, 410, 418, 419, 420, 421, 423, 425, 426, 427, 430, 431, 433, 434, 435, 436, 437, 438, 440], "while": [15, 30, 40, 45, 51, 52, 69, 70, 71, 72, 80, 84, 90, 100, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144, 154, 168, 175, 178, 196, 197, 251, 255, 256, 272, 313, 320, 323, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 347, 401, 414, 419, 423, 434, 440], "who": [15, 174, 175, 176, 177], "whose": [27, 323, 324, 325, 326, 327, 328, 329, 330, 373, 377, 379, 381, 385, 389, 395, 401], "wide": [4, 5, 6, 8, 16, 24, 52, 102, 112, 120, 121, 122, 154, 184, 255, 266, 267, 286], "wide_resnet_101": 154, "wide_resnet_50": 154, "wider": [43, 121, 122, 191, 192], "wideresnet": 154, "width": [30, 59, 60, 90, 94, 103, 110, 111, 121, 122, 123, 124, 125, 126, 127, 128, 129, 140, 150, 154, 192, 193, 195, 201, 202, 215, 220, 221, 223, 224, 227, 228, 231, 232, 240, 267, 268, 292, 293, 294, 296, 297, 301, 302, 304, 305, 307, 308, 318, 431, 433, 438], "width_coef": 59, "width_multipli": [90, 94], "window": [154, 160, 161, 162, 163, 164, 222, 223, 224, 226, 227, 228, 303, 304, 305, 306, 307, 308, 334, 391, 393], "windows_s": 160, "wise": [10, 14, 134, 136, 137, 138, 139, 154, 180, 181, 183, 184, 185, 186, 187, 188, 198, 233, 234, 235, 239, 253, 259, 260, 270, 272, 273, 274, 275, 276, 320, 346, 359, 360, 363, 364, 365, 366, 368, 369, 381, 382, 383, 384, 385, 386, 387, 388, 390, 394, 395, 396, 397, 398, 399, 402, 403, 404, 412, 428], "within": [2, 154, 155, 156, 160, 165, 171, 174, 175, 176, 177, 178, 188, 231, 232, 249, 251, 252, 253, 255, 257, 258, 260, 261, 266, 267, 268, 270, 273, 274, 278, 282, 285, 286, 287, 288, 289, 291, 292, 293, 295, 298, 303, 304, 305, 306, 307, 308, 332, 347, 370, 385, 436, 440], "without": [10, 15, 123, 174, 175, 176, 205, 207, 266, 267, 268, 281, 283, 345, 348, 391, 417, 419, 427], "won": 347, "word": [154, 229, 310], "work": [1, 2, 3, 10, 12, 13, 14, 15, 17, 278, 346, 349], "workflow": [13, 357, 440], "workload": 15, "worth": 154, "wrap": [3, 320, 322, 347, 407], "wrapper": 320, "www": [5, 6], "x": [15, 16, 26, 30, 82, 86, 130, 145, 150, 154, 155, 160, 171, 172, 174, 175, 176, 177, 178, 187, 198, 205, 207, 232, 236, 237, 238, 240, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 266, 267, 268, 270, 272, 273, 274, 275, 276, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 303, 304, 305, 306, 307, 308, 314, 315, 316, 320, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 350, 352, 353, 354, 356, 372, 373, 389, 409, 414, 415, 420, 421, 425, 426, 431, 432, 433, 434, 435, 436, 437, 438], "x1": 281, "x2": 281, "x_": [30, 215, 286, 289, 294, 315, 415], "x_0": 315, "x_c": [286, 289], "x_i": [285, 315], "x_k": 286, "xavier": [244, 245, 248, 249], "xavier_norm": 243, "xavier_uniform": 243, "xception": [85, 154], "xiao": 7, "xie": 154, "xl": [72, 154], "xlarg": [53, 154], "xy": 415, "x\u2081": 281, "x\u2082": 281, "y": [30, 150, 154, 174, 175, 176, 177, 178, 232, 236, 237, 238, 250, 251, 252, 253, 254, 255, 257, 258, 260, 261, 266, 267, 268, 270, 273, 274, 275, 276, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 303, 304, 305, 306, 307, 308, 312, 313, 314, 315, 316, 350, 352, 353, 354, 356, 372, 373, 414, 415, 420, 434], "y1": 409, "y2": 409, "y_": [30, 215, 286, 289, 294, 415], "y_c": [286, 289], "y_i": 285, "yann": [8, 154], "yet": [15, 50, 52, 100, 346], "yield": [0, 1, 172, 347], "you": [0, 12, 14, 92, 154, 155, 175, 177, 178, 278, 312, 320, 332, 345, 347, 357, 372, 373, 374, 379, 405, 407, 429, 431, 440], "your": [10, 92, 100, 320, 332, 345, 347, 357, 440], "yu": 154, "z": [154, 314, 316, 373, 378, 379], "zalandoresearch": 7, "ze": 154, "zeiler": [152, 154], "zero": [22, 24, 25, 75, 155, 180, 183, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 222, 223, 224, 226, 227, 228, 229, 242, 244, 245, 246, 247, 248, 249, 250, 252, 254, 255, 257, 263, 266, 267, 268, 270, 272, 273, 274, 275, 276, 298, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 320, 321, 334, 335, 336, 337, 338, 339, 340, 341, 372, 373, 374, 379, 380, 385, 395, 416, 425, 426], "zero_grad": [173, 321, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 358], "zeros_lik": [373, 380], "zfnet": [85, 154], "zhang": 154, "zhmoginov": 154, "zhu": 154, "zhuang": 154, "zihang": 154, "zisserman": 154, "\u03c3\u1d62": 24}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "CIFAR10", "CIFAR100", "FashionMNIST", "MNIST", "Image Datasets", "lucid.einops", "Einops Functions", "lucid.einops.rearrange", "lucid.einops.reduce", "lucid.einops.repeat", "Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "alexnet", "CoAtNet", "coatnet_0", "coatnet_1", "coatnet_2", "coatnet_3", "coatnet_4", "coatnet_5", "coatnet_6", "coatnet_7", "ConvNeXt", "ConvNeXt_V2", "convnext_base", "convnext_large", "convnext_small", "convnext_tiny", "convnext_v2_atto", "convnext_v2_base", "convnext_v2_femto", "convnext_v2_huge", "convnext_v2_large", "convnext_v2_nano", "convnext_v2_pico", "convnext_v2_tiny", "convnext_xlarge", "DenseNet", "densenet_121", "densenet_169", "densenet_201", "densenet_264", "EfficientNet", "EfficientNet_V2", "efficientnet_b0", "efficientnet_b1", "efficientnet_b2", "efficientnet_b3", "efficientnet_b4", "efficientnet_b5", "efficientnet_b6", "efficientnet_b7", "efficientnet_v2_l", "efficientnet_v2_m", "efficientnet_v2_s", "efficientnet_v2_xl", "Inception", "inception_v1", "inception_v3", "inception_v4", "InceptionNeXt", "inception_next_atto", "inception_next_base", "inception_next_small", "inception_next_tiny", "InceptionResNet", "inception_resnet_v1", "inception_resnet_v2", "ConvNets", "LeNet", "lenet_1", "lenet_4", "lenet_5", "MobileNet", "MobileNet_V2", "MobileNet_V3", "MobileNet_V4", "mobilenet", "mobilenet_v2", "mobilenet_v3_large", "mobilenet_v3_small", "mobilenet_v4_conv_large", "mobilenet_v4_conv_medium", "mobilenet_v4_conv_small", "mobilenet_v4_hybrid_large", "mobilenet_v4_hybrid_medium", "ResNeSt", "resnest_101", "resnest_14", "resnest_200", "resnest_26", "resnest_269", "resnest_50", "resnest_50_1s4x24d", "resnest_50_4s2x40d", "ResNet", "resnet_1001", "resnet_101", "resnet_152", "resnet_18", "resnet_200", "resnet_269", "resnet_34", "resnet_50", "wide_resnet_101", "wide_resnet_50", "ResNeXt", "resnext_101_32x16d", "resnext_101_32x32d", "resnext_101_32x4d", "resnext_101_32x8d", "resnext_101_64x4d", "resnext_50_32x4d", "SENet", "se_resnet_101", "se_resnet_152", "se_resnet_18", "se_resnet_34", "se_resnet_50", "se_resnext_101_32x4d", "se_resnext_101_32x8d", "se_resnext_101_64x4d", "se_resnext_50_32x4d", "SKNet", "sk_resnet_18", "sk_resnet_34", "sk_resnet_50", "sk_resnext_50_32x4d", "VGGNet", "vggnet_11", "vggnet_13", "vggnet_16", "vggnet_19", "Xception", "xception", "ZFNet", "zfnet", "lucid.models", "models.summarize", "Transformer", "transformer_base", "transformer_big", "Transformers", "SwinTransformer", "swin_base", "swin_large", "swin_small", "swin_tiny", "ViT", "vit_base", "vit_huge", "vit_large", "vit_small", "vit_tiny", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "Attention Functions", "nn.functional.scaled_dot_product_attention", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.drop_block", "nn.functional.drop_path", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "nn.functional.global_response_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "nn.functional.embedding", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "nn.DepthSeparableConv1d", "nn.DepthSeparableConv2d", "nn.DepthSeparableConv3d", "nn.SEModule", "nn.SelectiveKernel", "Fused Layers", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.HardSigmoid", "nn.HardSwish", "nn.LeakyReLU", "nn.ReLU", "nn.ReLU6", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Swish", "nn.Tanh", "Activation Layers", "nn.MultiHeadAttention", "nn.ScaledDotProductAttention", "Attention Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.DropBlock", "nn.DropPath", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "nn.Rearrange", "Einops Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.GlobalResponseNorm", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "nn.Embedding", "Sparse Layers", "nn.Transformer", "nn.TransformerDecoder", "nn.TransformerDecoderLayer", "nn.TransformerEncoder", "nn.TransformerEncoderLayer", "Transformer Layers", "nn.Upsample", "Vision Layers", "lucid.nn", "optim.Optimizer", "optim.lr_scheduler", "lr_scheduler.CosineAnnealingLR", "lr_scheduler.CyclicLR", "lr_scheduler.ExponentialLR", "lr_scheduler.LRScheduler", "lr_scheduler.LambdaLR", "lr_scheduler.MultiStepLR", "lr_scheduler.ReduceLROnPlateau", "lr_scheduler.StepLR", "LR Schedulers", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.types", "lucid.random.bernoulli", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.linspace", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.swapaxes", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.broadcast_to", "lucid.chunk", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.masked_fill", "lucid.meshgrid", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.roll", "lucid.split", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.tril", "lucid.triu", "lucid.unsqueeze", "lucid.vstack", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": 346, "1d": 346, "2": 346, "2d": 346, "3": 346, "It": [345, 347], "ab": 381, "activ": [182, 204, 262, 280], "ad": 346, "adadelta": 334, "adagrad": 335, "adam": 336, "adamax": 338, "adamw": 337, "adaptive_avg_pool1d": 219, "adaptive_avg_pool2d": 220, "adaptive_avg_pool3d": 221, "adaptiveavgpool1d": 300, "adaptiveavgpool2d": 301, "adaptiveavgpool3d": 302, "add": 359, "addit": [24, 263], "admonit": 349, "advanc": [195, 440], "advantag": [10, 12, 13, 14, 278], "alexnet": [28, 29], "algebra": 20, "algorithm": [333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "alias": 349, "align": 346, "alpha_dropout": 196, "alphadropout": 270, "also": 332, "anoth": 407, "arang": 370, "arcco": 382, "architectur": [28, 30, 39, 87, 88, 89, 121, 122, 152], "arcsin": 383, "arctan": 384, "asgd": 333, "attent": [189, 190, 204, 240, 265, 280], "attribut": [5, 6, 7, 8, 28, 82, 86, 112, 123, 130, 140, 145, 150, 152, 171, 173, 174, 175, 176, 177, 178, 233, 234, 235, 236, 237, 238, 239, 250, 251, 254, 255, 257, 258, 259, 261, 266, 267, 268, 270, 272, 273, 274, 275, 276, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 358, 431, 432, 433, 434, 435, 436, 437, 438], "avg_pool1d": 222, "avg_pool2d": 223, "avg_pool3d": 224, "avgpool1d": 303, "avgpool2d": 304, "avgpool3d": 305, "axi": [346, 401], "backpropag": 358, "backward": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 197, 205, 207, 231, 239, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 266, 267, 268, 270, 273, 274, 275, 276, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 303, 304, 305, 306, 307, 308, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 410, 412, 415, 416, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428], "base": 331, "batch_norm": 214, "batchnorm": 241, "batchnorm1d": 291, "batchnorm2d": 292, "batchnorm3d": 293, "bceloss": 285, "behavior": [219, 220, 221, 300, 301, 302], "benefit": 347, "bernoulli": 350, "bilinear": [205, 281], "binari": 380, "binary_cross_entropi": 208, "bottleneck": [96, 97], "broadcast": [346, 408], "broadcast_to": 408, "buffer": 171, "calcul": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 112, 123, 130, 140, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 195, 197, 198, 205, 207, 219, 220, 221, 231, 233, 234, 235, 236, 237, 238, 239, 240, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 410, 412, 415, 416, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 431, 432, 433, 434, 435, 436, 437, 438], "captur": 348, "case": 349, "centercrop": 431, "choleski": 17, "chunk": 409, "cifar10": 5, "cifar100": 6, "class": [0, 1, 2, 5, 6, 7, 8, 28, 30, 39, 40, 54, 59, 60, 73, 77, 82, 86, 90, 91, 92, 93, 103, 112, 123, 130, 140, 145, 150, 152, 156, 160, 165, 171, 172, 173, 174, 175, 176, 177, 178, 233, 234, 235, 236, 237, 238, 239, 240, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 318, 321, 323, 324, 325, 326, 327, 328, 329, 330, 331, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 358, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438], "clip": 385, "co": 386, "coatnet": 30, "coatnet_0": 31, "coatnet_1": 32, "coatnet_2": 33, "coatnet_3": 34, "coatnet_4": 35, "coatnet_5": 36, "coatnet_6": 37, "coatnet_7": 38, "combin": 0, "compon": [3, 15, 320], "compos": 429, "comput": [409, 414, 420], "concatdataset": [0, 1], "concaten": 410, "conclus": [3, 10, 12, 13, 14, 15, 278, 320, 322, 345, 346, 347, 357, 430, 440], "configur": [31, 32, 33, 34, 35, 36, 37, 38, 59, 96, 97, 104, 105, 106, 107, 108, 109, 110, 111], "constant": 242, "contain": 179, "conv": 241, "conv1d": [191, 266], "conv2d": [192, 267], "conv3d": [193, 268], "convbnrelu1d": 233, "convbnrelu2d": 234, "convbnrelu3d": 235, "convnet": [85, 154], "convnext": 39, "convnext_bas": 41, "convnext_larg": 42, "convnext_smal": 43, "convnext_tini": 44, "convnext_v2": 40, "convnext_v2_atto": 45, "convnext_v2_bas": 46, "convnext_v2_femto": 47, "convnext_v2_hug": 48, "convnext_v2_larg": 49, "convnext_v2_nano": 50, "convnext_v2_pico": 51, "convnext_v2_tini": 52, "convnext_xlarg": 53, "convolut": [194, 204, 241, 269, 280], "core": 15, "cosh": 387, "cosineannealinglr": 323, "creat": [173, 358, 407], "cross_entropi": 209, "crossentropyloss": 286, "cube": 388, "custom": [1, 2, 3, 172, 321, 332, 440], "cycliclr": 324, "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 9], "defin": [2, 172, 321, 332], "definit": [12, 13, 14, 278, 349], "densenet": 54, "densenet_121": 55, "densenet_169": 56, "densenet_201": 57, "densenet_264": 58, "depthseparableconv1d": 236, "depthseparableconv2d": 237, "depthseparableconv3d": 238, "depthwis": 241, "descript": [124, 125, 126, 127, 128, 129, 141, 142, 143, 348], "det": 18, "detail": [24, 98, 99, 100, 101, 102, 121, 122, 263, 312, 313, 314, 315, 316], "diag": 371, "differ": 156, "dilat": 195, "div": 360, "dot": 361, "drop_block": 197, "drop_path": 198, "dropblock": 271, "dropout": [199, 203, 204, 273, 277, 280], "dropout1d": [200, 274], "dropout2d": [201, 275], "dropout3d": [202, 276], "droppath": 272, "efficientnet": 59, "efficientnet_b0": 61, "efficientnet_b1": 62, "efficientnet_b2": 63, "efficientnet_b3": 64, "efficientnet_b4": 65, "efficientnet_b5": 66, "efficientnet_b6": 67, "efficientnet_b7": 68, "efficientnet_v2": 60, "efficientnet_v2_": 71, "efficientnet_v2_l": 69, "efficientnet_v2_m": 70, "efficientnet_v2_xl": 72, "eig": 19, "einop": [10, 11, 12, 13, 14, 279, 280], "elu": [180, 250], "embed": [229, 310], "empti": 372, "empty_lik": 373, "exampl": [0, 1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 205, 207, 208, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 318, 320, 321, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440], "excit": 241, "exp": 389, "exponentiallr": 325, "express": [215, 421], "ey": 374, "fashionmnist": 7, "featur": [4, 15, 16, 136, 137, 138, 139, 144, 332, 357, 440], "flatten": 411, "formula": [323, 324, 325, 327, 328, 329, 330], "forward": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 112, 123, 130, 140, 150, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 195, 198, 205, 207, 219, 220, 221, 231, 233, 234, 235, 236, 237, 238, 239, 240, 244, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 264, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 312, 313, 314, 315, 316, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 402, 403, 404, 405, 406, 410, 412, 415, 416, 417, 418, 419, 422, 423, 424, 425, 426, 427, 428, 431, 432, 433, 434, 435, 436, 437, 438], "from": [156, 407], "function": [11, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 155, 157, 158, 161, 162, 163, 164, 166, 167, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 242, 244, 245, 246, 247, 248, 249, 345, 347, 348, 350, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428], "fuse": 241, "futur": 4, "gelu": [181, 251], "gener": [351, 380], "get": 332, "global_response_norm": 215, "globalresponsenorm": 294, "grad_en": 345, "gradient": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 197, 205, 207, 231, 239, 249, 250, 251, 252, 253, 254, 255, 257, 258, 259, 260, 261, 266, 267, 268, 270, 273, 274, 275, 276, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 295, 296, 297, 298, 303, 304, 305, 306, 307, 308, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 408, 409, 410, 412, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428], "guidelin": 349, "hardsigmoid": 252, "hardswish": 253, "how": [345, 347], "hstack": 412, "huber_loss": 210, "huberloss": 287, "hybrid": 30, "hyperparamet": [110, 111], "ident": 282, "imag": [9, 439], "incept": 73, "inception_next_atto": 78, "inception_next_bas": 79, "inception_next_smal": 80, "inception_next_tini": 81, "inception_resnet_v1": 83, "inception_resnet_v2": 84, "inception_v1": 74, "inception_v3": 75, "inception_v4": 76, "inceptionnext": 77, "inceptionresnet": 82, "index": 358, "init": [242, 244, 245, 246, 247, 248, 249], "initi": 243, "inner": 362, "input": 407, "inspect": [332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "instance_norm": 217, "instancenorm1d": 295, "instancenorm2d": 296, "instancenorm3d": 297, "integr": [3, 320, 357, 440], "interpol": 231, "inv": 21, "iter": 358, "kaiming_norm": 244, "kaiming_uniform": 245, "kei": [3, 4, 15, 136, 137, 138, 139, 144, 320, 332, 357, 440], "kernel": 241, "lambdalr": 327, "layer": [104, 105, 106, 107, 108, 109, 241, 262, 265, 269, 277, 279, 280, 284, 290, 299, 309, 311, 317, 319], "layer_norm": 218, "layernorm": 298, "leaky_relu": 183, "leakyrelu": 254, "learn": 357, "lenet": 86, "lenet_1": 87, "lenet_4": 88, "lenet_5": 89, "limit": 15, "linalg": [16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27], "linear": [20, 204, 206, 207, 280, 283, 284], "linspac": 375, "list": 407, "load": 1, "log": 390, "loss": [204, 211, 280, 290], "lr": 331, "lr_schedul": [322, 323, 324, 325, 326, 327, 328, 329, 330], "lrschedul": 326, "lucid": [3, 4, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 154, 204, 320, 332, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 440], "masked_fil": 414, "mathemat": [12, 13, 14, 215, 263, 278, 312, 313, 314, 315, 316, 323, 324, 325, 327, 328, 329, 330, 421], "matmul": 363, "matrix": 363, "matrix_pow": 22, "max": 391, "max_pool1d": 226, "max_pool2d": 227, "max_pool3d": 228, "maximum": 364, "maxpool1d": 306, "maxpool2d": 307, "maxpool3d": 308, "mean": 392, "mechan": [190, 240], "meshgrid": 415, "metadata": 348, "method": [0, 1, 2, 5, 6, 7, 8, 82, 86, 145, 172, 173, 312, 313, 314, 315, 316, 321, 323, 324, 325, 326, 327, 328, 329, 330, 358], "min": 393, "minimum": 365, "mnist": 8, "mobilenet": [90, 94], "mobilenet_v2": [91, 95], "mobilenet_v3": 92, "mobilenet_v3_larg": 96, "mobilenet_v3_smal": 97, "mobilenet_v4": 93, "mobilenet_v4_conv_larg": 98, "mobilenet_v4_conv_medium": 99, "mobilenet_v4_conv_smal": 100, "mobilenet_v4_hybrid_larg": 101, "mobilenet_v4_hybrid_medium": 102, "model": [154, 155, 320], "modul": [172, 280], "moduledict": 174, "modulelist": 175, "more": 357, "mse_loss": 212, "mseloss": 288, "mul": 366, "multiheadattent": 263, "multipl": [0, 363], "multisteplr": 328, "nadam": 339, "new": 346, "newaxi": 346, "nll_loss": 213, "nllloss": 289, "nn": [156, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 204, 205, 207, 208, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 318, 320], "no_grad": 347, "norm": 23, "normal": [204, 216, 246, 280, 299, 432], "note": 15, "number": 351, "ones": 376, "ones_lik": 377, "oper": [20, 363, 380], "optim": [321, 322, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344], "option": 263, "organ": 320, "outer": 367, "overview": [3, 4, 10, 15, 73, 74, 75, 76, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 98, 99, 100, 101, 102, 113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 263, 312, 313, 314, 315, 316, 320, 322, 332, 357, 440], "pad": 416, "paramet": [1, 5, 6, 7, 8, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 205, 207, 208, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 254, 255, 257, 258, 259, 261, 263, 264, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 318, 323, 324, 325, 326, 327, 328, 329, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 347, 348, 350, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438], "parameterdict": 176, "parameterlist": 177, "pass": 150, "perform": 358, "pinv": 24, "pipelin": [3, 440], "pitfal": [345, 347], "pool": [204, 225, 280, 309], "potenti": [345, 347], "power": 368, "process": 229, "properti": [173, 358], "qr": 25, "radam": 340, "rais": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27], "rand": 352, "randint": 353, "randn": 354, "random": [350, 351, 352, 353, 354, 355, 356, 357], "randomcrop": 433, "randomgrayscal": 434, "randomhorizontalflip": 435, "randomrot": 436, "randomverticalflip": 437, "ravel": 417, "rearrang": [10, 12, 278], "reciproc": 394, "reduc": [10, 13], "reducelronplateau": 329, "refer": [5, 6, 7, 8, 239, 332], "register_model": 348, "regular": 197, "relu": [184, 241, 255], "relu6": 256, "repeat": [10, 14, 418], "reshap": 419, "resiz": 438, "resnest": 103, "resnest_101": 104, "resnest_14": 105, "resnest_200": 106, "resnest_26": 107, "resnest_269": 108, "resnest_50": 109, "resnest_50_1s4x24d": 110, "resnest_50_4s2x40d": 111, "resnet": 112, "resnet_1001": 113, "resnet_101": 114, "resnet_152": 115, "resnet_18": 116, "resnet_200": 117, "resnet_269": 118, "resnet_34": 119, "resnet_50": 120, "resnext": 123, "resnext_101_32x16d": 124, "resnext_101_32x32d": 125, "resnext_101_32x4d": 126, "resnext_101_32x8d": 127, "resnext_101_64x4d": 128, "resnext_50_32x4d": 129, "return": [12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 155, 157, 158, 161, 162, 163, 164, 166, 167, 168, 169, 170, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 205, 207, 208, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 240, 242, 244, 245, 246, 247, 248, 249, 256, 278, 310, 345, 347, 350, 352, 353, 354, 355, 356, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428], "rmsprop": 341, "roll": 420, "rotat": 232, "rprop": 342, "rule": [363, 401, 408], "scaled_dot_product_attent": 190, "scaleddotproductattent": 264, "schedul": 331, "se_resnet_101": 131, "se_resnet_152": 132, "se_resnet_18": 133, "se_resnet_34": 134, "se_resnet_50": 135, "se_resnext_101_32x4d": 136, "se_resnext_101_32x8d": 137, "se_resnext_101_64x4d": 138, "se_resnext_50_32x4d": 139, "see": 332, "seed": 355, "select": 241, "selectivekernel": 240, "selu": [185, 257], "semodul": 239, "senet": 130, "separ": 241, "sequenti": 178, "sgd": 343, "sigmoid": [186, 258], "sign": 395, "signatur": [0, 1, 2, 5, 6, 7, 8, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 183, 184, 185, 186, 187, 188, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 205, 207, 208, 209, 210, 212, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 226, 227, 228, 229, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 242, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 263, 264, 266, 267, 268, 270, 271, 272, 273, 274, 275, 276, 278, 281, 282, 283, 285, 286, 287, 288, 289, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 313, 314, 315, 316, 318, 321, 323, 324, 325, 326, 327, 328, 329, 330, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 345, 347, 348, 350, 352, 353, 354, 355, 356, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438], "sin": 396, "sinh": 397, "sk_resnet_18": 141, "sk_resnet_34": 142, "sk_resnet_50": 143, "sk_resnext_50_32x4d": 144, "sknet": 140, "slice": 358, "softmax": [187, 259], "solv": 26, "spars": [280, 311], "split": 421, "sqrt": 398, "squar": 399, "squeez": [241, 422], "stack": 423, "start": 332, "state": [332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343], "steplr": 330, "sub": 369, "sum": 400, "summar": 155, "summari": 155, "svd": 27, "swap": 401, "swapax": 401, "swin_bas": 161, "swin_larg": 162, "swin_smal": 163, "swin_tini": 164, "swintransform": 160, "swish": 260, "tabl": 155, "tan": 402, "tanh": [188, 261, 403], "tensor": [346, 358, 380, 407, 413], "through": 358, "tile": 424, "totensor": 430, "trace": 404, "track": 358, "transform": [154, 156, 159, 280, 312, 317, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440], "transformer_bas": 157, "transformer_big": 158, "transformerdecod": 313, "transformerdecoderlay": 314, "transformerencod": 315, "transformerencoderlay": 316, "transpos": 405, "tril": 425, "triu": 426, "type": 349, "unari": 380, "unfold": 195, "uniform": [247, 356], "unsqueez": 427, "upsampl": 318, "us": [1, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 349, 407], "usag": [4, 15, 69, 70, 71, 72, 74, 75, 76, 83, 84, 86, 87, 88, 89, 98, 99, 100, 101, 102, 136, 137, 138, 139, 144, 171, 232, 263, 312, 313, 314, 315, 316, 322, 323, 324, 325, 326, 327, 328, 329, 330, 345, 346, 347, 349, 415, 429, 430, 440], "util": [204, 230], "utilit": 413, "valu": 421, "var": 406, "vggnet": 145, "vggnet_11": 146, "vggnet_13": 147, "vggnet_16": 148, "vggnet_19": 149, "vision": [280, 319], "vit": 165, "vit_bas": 166, "vit_hug": 167, "vit_larg": 168, "vit_smal": 169, "vit_tini": 170, "vstack": 428, "weight": 243, "why": 349, "wide_resnet_101": 121, "wide_resnet_50": 122, "work": [4, 345, 347], "xavier_norm": 248, "xavier_uniform": 249, "xception": [150, 151], "zero": 378, "zeros_lik": 379, "zfnet": [152, 153]}})