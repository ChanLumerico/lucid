Search.setIndex({"alltitles": {"1-D ascending": [[493, null]], "@ Operator": [[439, "operator"]], "About Dagger (^\\dagger) Variants": [[57, "about-dagger-dagger-variants"], [59, "about-dagger-dagger-variants"], [61, "about-dagger-dagger-variants"]], "Activation Functions": [[239, null], [264, null]], "Activation Layers": [[329, null], [351, null]], "Additional Details": [[25, "additional-details"]], "Additional Options": [[330, "additional-options"]], "Advanced Example with Dilation": [[255, "advanced-example-with-dilation"]], "Advanced Features": [[535, "advanced-features"]], "Advantages": [[10, "advantages"], [13, "advantages"], [14, "advantages"], [15, "advantages"], [349, "advantages"]], "AlexNet": [[29, null], [100, "alexnet"]], "Algorithm": [[407, "algorithm"], [408, "algorithm"], [409, "algorithm"], [410, "algorithm"], [411, "algorithm"], [412, "algorithm"], [413, "algorithm"], [414, "algorithm"], [415, "algorithm"], [416, "algorithm"], [417, "algorithm"]], "Along axis, keeping dims": [[492, null]], "Architecture": [[29, "architecture"], [40, "architecture"], [55, "architecture"], [102, "architecture"], [103, "architecture"], [104, "architecture"], [105, "architecture"], [205, "architecture"], [208, "architecture"], [212, "architecture"], [213, "architecture"]], "Architecture Details": [[156, "architecture-details"], [157, "architecture-details"]], "Attention Functions": [[246, null], [264, null]], "Attention Layers": [[332, null], [351, null]], "Attention Mechanism": [[247, "attention-mechanism"], [307, "attention-mechanism"]], "Attributes": [[5, "attributes"], [6, "attributes"], [7, "attributes"], [8, "attributes"], [29, "attributes"], [97, "attributes"], [101, "attributes"], [147, "attributes"], [158, "attributes"], [165, "attributes"], [175, "attributes"], [192, "attributes"], [203, "attributes"], [205, "attributes"], [228, "attributes"], [230, "attributes"], [231, "attributes"], [232, "attributes"], [233, "attributes"], [234, "attributes"], [235, "attributes"], [300, "attributes"], [301, "attributes"], [302, "attributes"], [303, "attributes"], [304, "attributes"], [305, "attributes"], [306, "attributes"], [317, "attributes"], [318, "attributes"], [321, "attributes"], [322, "attributes"], [324, "attributes"], [325, "attributes"], [326, "attributes"], [328, "attributes"], [333, "attributes"], [334, "attributes"], [335, "attributes"], [336, "attributes"], [337, "attributes"], [338, "attributes"], [341, "attributes"], [343, "attributes"], [344, "attributes"], [345, "attributes"], [346, "attributes"], [347, "attributes"], [352, "attributes"], [353, "attributes"], [354, "attributes"], [356, "attributes"], [357, "attributes"], [358, "attributes"], [359, "attributes"], [360, "attributes"], [362, "attributes"], [363, "attributes"], [364, "attributes"], [366, "attributes"], [367, "attributes"], [368, "attributes"], [369, "attributes"], [371, "attributes"], [372, "attributes"], [373, "attributes"], [374, "attributes"], [375, "attributes"], [376, "attributes"], [377, "attributes"], [378, "attributes"], [379, "attributes"], [380, "attributes"], [381, "attributes"], [382, "attributes"], [419, "attributes"], [434, "attributes"], [526, "attributes"], [527, "attributes"], [528, "attributes"], [529, "attributes"], [530, "attributes"], [531, "attributes"], [532, "attributes"], [533, "attributes"]], "Automatic Differentiation (Autodiff)": [[16, "automatic-differentiation-autodiff"]], "Axis Swapping Rules": [[484, "axis-swapping-rules"]], "Backward Gradient Calculation": [[18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [20, "backward-gradient-calculation"], [22, "backward-gradient-calculation"], [23, "backward-gradient-calculation"], [24, "backward-gradient-calculation"], [25, "backward-gradient-calculation"], [26, "backward-gradient-calculation"], [27, "backward-gradient-calculation"], [28, "backward-gradient-calculation"], [231, "backward-gradient-calculation"], [232, "backward-gradient-calculation"], [233, "backward-gradient-calculation"], [234, "backward-gradient-calculation"], [235, "backward-gradient-calculation"], [237, "backward-gradient-calculation"], [238, "backward-gradient-calculation"], [240, "backward-gradient-calculation"], [241, "backward-gradient-calculation"], [242, "backward-gradient-calculation"], [243, "backward-gradient-calculation"], [244, "backward-gradient-calculation"], [245, "backward-gradient-calculation"], [257, "backward-gradient-calculation"], [265, "backward-gradient-calculation"], [267, "backward-gradient-calculation"], [293, "backward-gradient-calculation"], [298, "backward-gradient-calculation"], [306, "backward-gradient-calculation"], [316, "backward-gradient-calculation"], [317, "backward-gradient-calculation"], [318, "backward-gradient-calculation"], [319, "backward-gradient-calculation"], [320, "backward-gradient-calculation"], [321, "backward-gradient-calculation"], [322, "backward-gradient-calculation"], [324, "backward-gradient-calculation"], [325, "backward-gradient-calculation"], [326, "backward-gradient-calculation"], [327, "backward-gradient-calculation"], [328, "backward-gradient-calculation"], [333, "backward-gradient-calculation"], [334, "backward-gradient-calculation"], [335, "backward-gradient-calculation"], [336, "backward-gradient-calculation"], [337, "backward-gradient-calculation"], [338, "backward-gradient-calculation"], [341, "backward-gradient-calculation"], [344, "backward-gradient-calculation"], [345, "backward-gradient-calculation"], [346, "backward-gradient-calculation"], [347, "backward-gradient-calculation"], [352, "backward-gradient-calculation"], [353, "backward-gradient-calculation"], [354, "backward-gradient-calculation"], [356, "backward-gradient-calculation"], [357, "backward-gradient-calculation"], [358, "backward-gradient-calculation"], [359, "backward-gradient-calculation"], [360, "backward-gradient-calculation"], [362, "backward-gradient-calculation"], [363, "backward-gradient-calculation"], [364, "backward-gradient-calculation"], [366, "backward-gradient-calculation"], [367, "backward-gradient-calculation"], [368, "backward-gradient-calculation"], [369, "backward-gradient-calculation"], [377, "backward-gradient-calculation"], [378, "backward-gradient-calculation"], [379, "backward-gradient-calculation"], [380, "backward-gradient-calculation"], [381, "backward-gradient-calculation"], [382, "backward-gradient-calculation"], [435, "backward-gradient-calculation"], [436, "backward-gradient-calculation"], [437, "backward-gradient-calculation"], [438, "backward-gradient-calculation"], [439, "backward-gradient-calculation"], [440, "backward-gradient-calculation"], [441, "backward-gradient-calculation"], [442, "backward-gradient-calculation"], [443, "backward-gradient-calculation"], [444, "backward-gradient-calculation"], [445, "backward-gradient-calculation"], [446, "backward-gradient-calculation"], [460, "backward-gradient-calculation"], [461, "backward-gradient-calculation"], [462, "backward-gradient-calculation"], [463, "backward-gradient-calculation"], [465, "backward-gradient-calculation"], [466, "backward-gradient-calculation"], [467, "backward-gradient-calculation"], [468, "backward-gradient-calculation"], [469, "backward-gradient-calculation"], [471, "backward-gradient-calculation"], [472, "backward-gradient-calculation"], [473, "backward-gradient-calculation"], [474, "backward-gradient-calculation"], [475, "backward-gradient-calculation"], [476, "backward-gradient-calculation"], [478, "backward-gradient-calculation"], [479, "backward-gradient-calculation"], [480, "backward-gradient-calculation"], [481, "backward-gradient-calculation"], [482, "backward-gradient-calculation"], [483, "backward-gradient-calculation"], [484, "backward-gradient-calculation"], [485, "backward-gradient-calculation"], [486, "backward-gradient-calculation"], [487, "backward-gradient-calculation"], [488, "backward-gradient-calculation"], [489, "backward-gradient-calculation"], [494, "backward-gradient-calculation"], [496, "backward-gradient-calculation"], [501, "backward-gradient-calculation"], [504, "backward-gradient-calculation"], [506, "backward-gradient-calculation"], [507, "backward-gradient-calculation"], [508, "backward-gradient-calculation"], [509, "backward-gradient-calculation"], [513, "backward-gradient-calculation"], [514, "backward-gradient-calculation"], [515, "backward-gradient-calculation"], [517, "backward-gradient-calculation"], [518, "backward-gradient-calculation"], [519, "backward-gradient-calculation"], [521, "backward-gradient-calculation"], [522, "backward-gradient-calculation"]], "Base Class": [[405, null]], "Basic Installation": [[16, "basic-installation"]], "Behavior": [[280, "behavior"], [281, "behavior"], [282, "behavior"], [283, "behavior"], [284, "behavior"], [285, "behavior"], [371, "behavior"], [372, "behavior"], [373, "behavior"], [374, "behavior"], [375, "behavior"], [376, "behavior"]], "Benefits": [[420, "benefits"], [423, "benefits"]], "Binary Functions": [[459, null]], "Bottleneck Configuration": [[117, "bottleneck-configuration"], [118, "bottleneck-configuration"]], "Broadcasting Rules": [[494, "broadcasting-rules"]], "CIFAR10": [[5, null]], "CIFAR100": [[6, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [6, "class-signature"], [7, "class-signature"], [8, "class-signature"], [29, "class-signature"], [31, "class-signature"], [40, "class-signature"], [41, "class-signature"], [55, "class-signature"], [65, "class-signature"], [69, "class-signature"], [74, "class-signature"], [75, "class-signature"], [88, "class-signature"], [92, "class-signature"], [97, "class-signature"], [101, "class-signature"], [105, "class-signature"], [111, "class-signature"], [112, "class-signature"], [113, "class-signature"], [114, "class-signature"], [138, "class-signature"], [147, "class-signature"], [158, "class-signature"], [165, "class-signature"], [175, "class-signature"], [180, "class-signature"], [181, "class-signature"], [192, "class-signature"], [197, "class-signature"], [203, "class-signature"], [205, "class-signature"], [208, "class-signature"], [212, "class-signature"], [213, "class-signature"], [225, "class-signature"], [228, "class-signature"], [229, "class-signature"], [230, "class-signature"], [231, "class-signature"], [232, "class-signature"], [233, "class-signature"], [234, "class-signature"], [235, "class-signature"], [300, "class-signature"], [301, "class-signature"], [302, "class-signature"], [303, "class-signature"], [304, "class-signature"], [305, "class-signature"], [306, "class-signature"], [307, "class-signature"], [317, "class-signature"], [318, "class-signature"], [319, "class-signature"], [320, "class-signature"], [321, "class-signature"], [322, "class-signature"], [323, "class-signature"], [324, "class-signature"], [325, "class-signature"], [326, "class-signature"], [327, "class-signature"], [328, "class-signature"], [330, "class-signature"], [331, "class-signature"], [333, "class-signature"], [334, "class-signature"], [335, "class-signature"], [336, "class-signature"], [337, "class-signature"], [338, "class-signature"], [339, "class-signature"], [341, "class-signature"], [342, "class-signature"], [343, "class-signature"], [344, "class-signature"], [345, "class-signature"], [346, "class-signature"], [347, "class-signature"], [349, "class-signature"], [352, "class-signature"], [353, "class-signature"], [354, "class-signature"], [356, "class-signature"], [357, "class-signature"], [358, "class-signature"], [359, "class-signature"], [360, "class-signature"], [362, "class-signature"], [363, "class-signature"], [364, "class-signature"], [365, "class-signature"], [366, "class-signature"], [367, "class-signature"], [368, "class-signature"], [369, "class-signature"], [371, "class-signature"], [372, "class-signature"], [373, "class-signature"], [374, "class-signature"], [375, "class-signature"], [376, "class-signature"], [377, "class-signature"], [378, "class-signature"], [379, "class-signature"], [380, "class-signature"], [381, "class-signature"], [382, "class-signature"], [384, "class-signature"], [386, "class-signature"], [387, "class-signature"], [388, "class-signature"], [389, "class-signature"], [390, "class-signature"], [392, "class-signature"], [395, "class-signature"], [397, "class-signature"], [398, "class-signature"], [399, "class-signature"], [400, "class-signature"], [401, "class-signature"], [402, "class-signature"], [403, "class-signature"], [404, "class-signature"], [407, "class-signature"], [408, "class-signature"], [409, "class-signature"], [410, "class-signature"], [411, "class-signature"], [412, "class-signature"], [413, "class-signature"], [414, "class-signature"], [415, "class-signature"], [416, "class-signature"], [417, "class-signature"], [419, "class-signature"], [434, "class-signature"], [524, "class-signature"], [525, "class-signature"], [526, "class-signature"], [527, "class-signature"], [528, "class-signature"], [529, "class-signature"], [530, "class-signature"], [531, "class-signature"], [532, "class-signature"], [533, "class-signature"]], "Classes": [[221, null]], "CoAtNet": [[31, null], [100, "coatnet"]], "Combining multiple datasets": [[0, null]], "Computer Vision": [[207, "computer-vision"]], "Conclusion": [[3, "conclusion"], [10, "conclusion"], [13, "conclusion"], [14, "conclusion"], [15, "conclusion"], [16, "conclusion"], [349, "conclusion"], [394, "conclusion"], [396, "conclusion"], [421, "conclusion"], [422, "conclusion"], [433, "conclusion"], [525, "conclusion"], [535, "conclusion"]], "Configuration": [[32, "configuration"], [33, "configuration"], [34, "configuration"], [35, "configuration"], [36, "configuration"], [37, "configuration"], [38, "configuration"], [39, "configuration"]], "Configurations": [[74, "configurations"]], "Constructor": [[214, "constructor"], [215, "constructor"], [216, "constructor"], [217, "constructor"]], "Containers": [[236, null]], "Conv-BatchNorm-ReLU": [[308, null]], "ConvNeXt": [[40, null], [100, "convnext"]], "ConvNeXt_V2": [[41, null]], "Convolution Functions": [[254, null], [264, null]], "Convolution Layers": [[340, null], [351, null]], "Convolutional Transformer (CvT)": [[100, "convolutional-transformer-cvt"]], "Create a Tensor from a list": [[490, null]], "Creating a Parameter": [[230, null]], "Creating a tensor on GPU with gradient tracking": [[434, null]], "CrossViT": [[55, null], [100, "crossvit"]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[535, "custom-pipelines"]], "CvT": [[65, null]], "Defining a Custom Optimizer": [[406, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[229, null]], "Defining a custom optimizer": [[395, null]], "DenseNet": [[69, null], [100, "densenet"]], "Depthwise Separable Convolution": [[308, null]], "Descending, heapsort kernel": [[493, null]], "Description": [[159, "description"], [160, "description"], [161, "description"], [162, "description"], [163, "description"], [164, "description"], [176, "description"], [177, "description"], [178, "description"], [424, "description"]], "Details": [[119, "details"], [120, "details"], [121, "details"], [122, "details"], [123, "details"]], "Device-based dtype inference": [[434, null]], "Differences from nn.Transformer": [[225, "differences-from-nn-transformer"]], "Dropout Functions": [[263, null], [264, null]], "Dropout Layers": [[348, null], [351, null]], "Educational by Design": [[16, "educational-by-design"]], "EfficientNet": [[74, null], [100, "efficientnet"]], "EfficientNet Configurations": [[74, "id1"]], "EfficientNet_V2": [[75, null]], "Einops Functions": [[12, null]], "Einops Layers": [[350, null], [351, null]], "Embedding Process": [[296, "embedding-process"]], "Enable GPU (Metal / MLX Acceleration)": [[16, "enable-gpu-metal-mlx-acceleration"]], "Example": [[3, null], [3, null], [3, null], [10, null], [10, null], [10, null], [18, "example"], [19, "example"], [20, "example"], [22, "example"], [23, "example"], [24, "example"], [25, "example"], [26, "example"], [27, "example"], [28, "example"], [93, "example"], [94, "example"], [95, "example"], [96, "example"], [106, "example"], [107, "example"], [108, "example"], [109, "example"], [110, "example"], [115, "example"], [116, "example"], [214, "example"], [215, "example"], [216, "example"], [217, "example"], [218, "example"], [219, "example"], [220, "example"], [222, "example"], [223, "example"], [255, "example"], [394, null], [394, null], [394, null], [421, "example"], [425, "example"], [427, "example"], [428, "example"], [429, "example"], [430, "example"], [431, "example"], [432, "example"], [433, null], [433, null], [433, null], [447, "example"], [448, "example"], [449, "example"], [450, "example"], [451, "example"], [455, "example"], [456, "example"], [457, "example"], [458, "example"], [460, "example"], [461, "example"], [462, "example"], [463, "example"], [465, "example"], [466, "example"], [467, "example"], [468, "example"], [471, "example"], [472, "example"], [474, "example"], [476, "example"], [478, "example"], [479, "example"], [480, "example"], [481, "example"], [482, "example"], [483, "example"], [485, "example"], [486, "example"], [487, "example"], [488, "example"], [489, "example"], [495, "example"], [496, "example"], [498, "example"], [499, "example"], [500, "example"], [501, "example"], [507, "example"], [509, "example"], [511, "example"], [513, "example"], [514, "example"], [516, "example"], [517, "example"], [518, "example"], [521, "example"], [522, "example"], [523, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[422, null]], "Example 2: Adding a new axis to a 2D tensor": [[422, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[422, null]], "Example Usage": [[89, "example-usage"], [90, "example-usage"], [91, "example-usage"], [98, "example-usage"], [99, "example-usage"], [101, "example-usage"], [102, "example-usage"], [103, "example-usage"], [104, "example-usage"], [171, "example-usage"], [172, "example-usage"], [173, "example-usage"], [174, "example-usage"], [179, "example-usage"], [299, "example-usage"], [524, "example-usage"], [525, "example-usage"], [535, "example-usage"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [6, "examples"], [7, "examples"], [8, "examples"], [11, "examples"], [13, "examples"], [14, "examples"], [15, "examples"], [17, "examples"], [29, "examples"], [30, "examples"], [31, "examples"], [32, "examples"], [33, "examples"], [34, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [47, "examples"], [48, "examples"], [49, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [53, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [60, "examples"], [61, "examples"], [62, "examples"], [63, "examples"], [64, "examples"], [65, "examples"], [66, "examples"], [67, "examples"], [68, "examples"], [69, "examples"], [70, "examples"], [71, "examples"], [72, "examples"], [73, "examples"], [74, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [79, "examples"], [80, "examples"], [81, "examples"], [82, "examples"], [83, "examples"], [84, "examples"], [85, "examples"], [86, "examples"], [87, "examples"], [92, "examples"], [105, "examples"], [113, "examples"], [117, "examples"], [118, "examples"], [124, "examples"], [126, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [130, "examples"], [131, "examples"], [132, "examples"], [133, "examples"], [134, "examples"], [135, "examples"], [136, "examples"], [137, "examples"], [138, "examples"], [139, "examples"], [140, "examples"], [141, "examples"], [142, "examples"], [143, "examples"], [144, "examples"], [145, "examples"], [146, "examples"], [147, "examples"], [148, "examples"], [149, "examples"], [150, "examples"], [151, "examples"], [152, "examples"], [153, "examples"], [154, "examples"], [155, "examples"], [156, "examples"], [157, "examples"], [159, "examples"], [160, "examples"], [161, "examples"], [162, "examples"], [163, "examples"], [164, "examples"], [166, "examples"], [167, "examples"], [168, "examples"], [169, "examples"], [170, "examples"], [176, "examples"], [177, "examples"], [178, "examples"], [180, "examples"], [181, "examples"], [182, "examples"], [183, "examples"], [184, "examples"], [185, "examples"], [186, "examples"], [187, "examples"], [188, "examples"], [189, "examples"], [190, "examples"], [191, "examples"], [192, "examples"], [193, "examples"], [194, "examples"], [195, "examples"], [196, "examples"], [197, "examples"], [198, "examples"], [199, "examples"], [200, "examples"], [201, "examples"], [202, "examples"], [203, "examples"], [204, "examples"], [205, "examples"], [206, "examples"], [208, "examples"], [209, "examples"], [210, "examples"], [212, "examples"], [213, "examples"], [225, "examples"], [226, "examples"], [227, "examples"], [228, "examples"], [229, "examples"], [230, "examples"], [231, "examples"], [232, "examples"], [233, "examples"], [234, "examples"], [235, "examples"], [237, "examples"], [238, "examples"], [240, "examples"], [241, "examples"], [242, "examples"], [243, "examples"], [244, "examples"], [245, "examples"], [247, "examples"], [248, "examples"], [249, "examples"], [250, "examples"], [251, "examples"], [252, "examples"], [253, "examples"], [256, "examples"], [257, "examples"], [258, "examples"], [259, "examples"], [260, "examples"], [261, "examples"], [262, "examples"], [265, "examples"], [267, "examples"], [268, "examples"], [269, "examples"], [270, "examples"], [272, "examples"], [273, "examples"], [274, "examples"], [275, "examples"], [277, "examples"], [278, "examples"], [279, "examples"], [280, "examples"], [281, "examples"], [282, "examples"], [283, "examples"], [284, "examples"], [285, "examples"], [286, "examples"], [287, "examples"], [288, "examples"], [290, "examples"], [291, "examples"], [292, "examples"], [293, "examples"], [294, "examples"], [296, "examples"], [298, "examples"], [300, "examples"], [301, "examples"], [302, "examples"], [303, "examples"], [304, "examples"], [305, "examples"], [306, "examples"], [307, "examples"], [309, "examples"], [311, "examples"], [312, "examples"], [313, "examples"], [314, "examples"], [315, "examples"], [316, "examples"], [317, "examples"], [318, "examples"], [319, "examples"], [320, "examples"], [321, "examples"], [322, "examples"], [323, "examples"], [324, "examples"], [325, "examples"], [326, "examples"], [327, "examples"], [328, "examples"], [331, "examples"], [333, "examples"], [334, "examples"], [335, "examples"], [336, "examples"], [337, "examples"], [338, "examples"], [339, "examples"], [341, "examples"], [342, "examples"], [343, "examples"], [344, "examples"], [345, "examples"], [346, "examples"], [347, "examples"], [349, "examples"], [352, "examples"], [353, "examples"], [354, "examples"], [356, "examples"], [357, "examples"], [358, "examples"], [359, "examples"], [360, "examples"], [362, "examples"], [363, "examples"], [364, "examples"], [365, "examples"], [366, "examples"], [367, "examples"], [368, "examples"], [369, "examples"], [371, "examples"], [372, "examples"], [373, "examples"], [374, "examples"], [375, "examples"], [376, "examples"], [377, "examples"], [378, "examples"], [379, "examples"], [380, "examples"], [381, "examples"], [382, "examples"], [384, "examples"], [392, "examples"], [395, "examples"], [406, "examples"], [407, "examples"], [408, "examples"], [409, "examples"], [410, "examples"], [411, "examples"], [412, "examples"], [413, "examples"], [414, "examples"], [415, "examples"], [416, "examples"], [417, "examples"], [420, "examples"], [423, "examples"], [424, "examples"], [434, "examples"], [435, "examples"], [436, "examples"], [437, "examples"], [438, "examples"], [440, "examples"], [441, "examples"], [442, "examples"], [443, "examples"], [444, "examples"], [445, "examples"], [446, "examples"], [452, "examples"], [453, "examples"], [454, "examples"], [464, "examples"], [469, "examples"], [470, "examples"], [473, "examples"], [475, "examples"], [477, "examples"], [484, "examples"], [490, "examples"], [491, "examples"], [492, "examples"], [493, "examples"], [494, "examples"], [497, "examples"], [503, "examples"], [504, "examples"], [505, "examples"], [506, "examples"], [508, "examples"], [510, "examples"], [512, "examples"], [515, "examples"], [519, "examples"], [520, "examples"], [526, "examples"], [527, "examples"], [528, "examples"], [529, "examples"], [530, "examples"], [531, "examples"], [532, "examples"], [533, "examples"]], "FashionMNIST": [[7, null]], "Fast R-CNN": [[211, "fast-r-cnn"], [212, null]], "Faster R-CNN": [[208, null], [211, "faster-r-cnn"]], "Features": [[17, "features"]], "Flattened maximum index": [[491, null]], "Forward Calculation": [[11, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [20, "forward-calculation"], [22, "forward-calculation"], [23, "forward-calculation"], [24, "forward-calculation"], [25, "forward-calculation"], [26, "forward-calculation"], [27, "forward-calculation"], [28, "forward-calculation"], [147, "forward-calculation"], [158, "forward-calculation"], [165, "forward-calculation"], [175, "forward-calculation"], [231, "forward-calculation"], [232, "forward-calculation"], [233, "forward-calculation"], [234, "forward-calculation"], [235, "forward-calculation"], [237, "forward-calculation"], [238, "forward-calculation"], [240, "forward-calculation"], [241, "forward-calculation"], [242, "forward-calculation"], [243, "forward-calculation"], [244, "forward-calculation"], [245, "forward-calculation"], [255, "forward-calculation"], [258, "forward-calculation"], [265, "forward-calculation"], [267, "forward-calculation"], [280, "forward-calculation"], [281, "forward-calculation"], [282, "forward-calculation"], [283, "forward-calculation"], [293, "forward-calculation"], [294, "forward-calculation"], [298, "forward-calculation"], [300, "forward-calculation"], [301, "forward-calculation"], [302, "forward-calculation"], [303, "forward-calculation"], [304, "forward-calculation"], [305, "forward-calculation"], [306, "forward-calculation"], [307, "forward-calculation"], [311, "forward-calculation"], [312, "forward-calculation"], [315, "forward-calculation"], [316, "forward-calculation"], [317, "forward-calculation"], [318, "forward-calculation"], [319, "forward-calculation"], [320, "forward-calculation"], [321, "forward-calculation"], [322, "forward-calculation"], [323, "forward-calculation"], [324, "forward-calculation"], [325, "forward-calculation"], [326, "forward-calculation"], [327, "forward-calculation"], [328, "forward-calculation"], [331, "forward-calculation"], [333, "forward-calculation"], [334, "forward-calculation"], [335, "forward-calculation"], [336, "forward-calculation"], [337, "forward-calculation"], [338, "forward-calculation"], [339, "forward-calculation"], [341, "forward-calculation"], [342, "forward-calculation"], [343, "forward-calculation"], [344, "forward-calculation"], [345, "forward-calculation"], [346, "forward-calculation"], [347, "forward-calculation"], [352, "forward-calculation"], [353, "forward-calculation"], [354, "forward-calculation"], [356, "forward-calculation"], [357, "forward-calculation"], [358, "forward-calculation"], [359, "forward-calculation"], [360, "forward-calculation"], [362, "forward-calculation"], [363, "forward-calculation"], [364, "forward-calculation"], [365, "forward-calculation"], [366, "forward-calculation"], [367, "forward-calculation"], [368, "forward-calculation"], [369, "forward-calculation"], [371, "forward-calculation"], [372, "forward-calculation"], [373, "forward-calculation"], [374, "forward-calculation"], [375, "forward-calculation"], [376, "forward-calculation"], [377, "forward-calculation"], [378, "forward-calculation"], [379, "forward-calculation"], [380, "forward-calculation"], [381, "forward-calculation"], [382, "forward-calculation"], [435, "forward-calculation"], [436, "forward-calculation"], [437, "forward-calculation"], [438, "forward-calculation"], [439, "forward-calculation"], [440, "forward-calculation"], [441, "forward-calculation"], [442, "forward-calculation"], [443, "forward-calculation"], [444, "forward-calculation"], [445, "forward-calculation"], [446, "forward-calculation"], [460, "forward-calculation"], [461, "forward-calculation"], [462, "forward-calculation"], [463, "forward-calculation"], [465, "forward-calculation"], [466, "forward-calculation"], [467, "forward-calculation"], [468, "forward-calculation"], [469, "forward-calculation"], [471, "forward-calculation"], [472, "forward-calculation"], [473, "forward-calculation"], [474, "forward-calculation"], [475, "forward-calculation"], [476, "forward-calculation"], [478, "forward-calculation"], [479, "forward-calculation"], [480, "forward-calculation"], [481, "forward-calculation"], [482, "forward-calculation"], [483, "forward-calculation"], [485, "forward-calculation"], [486, "forward-calculation"], [487, "forward-calculation"], [488, "forward-calculation"], [489, "forward-calculation"], [496, "forward-calculation"], [501, "forward-calculation"], [504, "forward-calculation"], [506, "forward-calculation"], [507, "forward-calculation"], [508, "forward-calculation"], [509, "forward-calculation"], [513, "forward-calculation"], [514, "forward-calculation"], [515, "forward-calculation"], [517, "forward-calculation"], [518, "forward-calculation"], [521, "forward-calculation"], [522, "forward-calculation"], [526, "forward-calculation"], [527, "forward-calculation"], [528, "forward-calculation"], [529, "forward-calculation"], [530, "forward-calculation"], [531, "forward-calculation"], [532, "forward-calculation"], [533, "forward-calculation"]], "Forward Input & Output": [[214, "forward-input-output"]], "Forward Method": [[386, "forward-method"], [387, "forward-method"], [388, "forward-method"], [389, "forward-method"], [390, "forward-method"]], "Forward Pass": [[203, "forward-pass"]], "Function Signature": [[11, "function-signature"], [13, "function-signature"], [14, "function-signature"], [15, "function-signature"], [18, "function-signature"], [19, "function-signature"], [20, "function-signature"], [22, "function-signature"], [23, "function-signature"], [24, "function-signature"], [25, "function-signature"], [26, "function-signature"], [27, "function-signature"], [28, "function-signature"], [30, "function-signature"], [32, "function-signature"], [33, "function-signature"], [34, "function-signature"], [35, "function-signature"], [36, "function-signature"], [37, "function-signature"], [38, "function-signature"], [39, "function-signature"], [42, "function-signature"], [43, "function-signature"], [44, "function-signature"], [45, "function-signature"], [46, "function-signature"], [47, "function-signature"], [48, "function-signature"], [49, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [53, "function-signature"], [54, "function-signature"], [56, "function-signature"], [57, "function-signature"], [58, "function-signature"], [59, "function-signature"], [60, "function-signature"], [61, "function-signature"], [62, "function-signature"], [63, "function-signature"], [64, "function-signature"], [66, "function-signature"], [67, "function-signature"], [68, "function-signature"], [70, "function-signature"], [71, "function-signature"], [72, "function-signature"], [73, "function-signature"], [76, "function-signature"], [77, "function-signature"], [78, "function-signature"], [79, "function-signature"], [80, "function-signature"], [81, "function-signature"], [82, "function-signature"], [83, "function-signature"], [84, "function-signature"], [85, "function-signature"], [86, "function-signature"], [87, "function-signature"], [89, "function-signature"], [90, "function-signature"], [91, "function-signature"], [93, "function-signature"], [94, "function-signature"], [95, "function-signature"], [96, "function-signature"], [98, "function-signature"], [99, "function-signature"], [102, "function-signature"], [103, "function-signature"], [104, "function-signature"], [106, "function-signature"], [107, "function-signature"], [108, "function-signature"], [109, "function-signature"], [110, "function-signature"], [115, "function-signature"], [116, "function-signature"], [117, "function-signature"], [118, "function-signature"], [119, "function-signature"], [120, "function-signature"], [121, "function-signature"], [122, "function-signature"], [123, "function-signature"], [124, "function-signature"], [125, "function-signature"], [126, "function-signature"], [127, "function-signature"], [128, "function-signature"], [129, "function-signature"], [130, "function-signature"], [131, "function-signature"], [132, "function-signature"], [133, "function-signature"], [134, "function-signature"], [135, "function-signature"], [136, "function-signature"], [137, "function-signature"], [139, "function-signature"], [140, "function-signature"], [141, "function-signature"], [142, "function-signature"], [143, "function-signature"], [144, "function-signature"], [145, "function-signature"], [146, "function-signature"], [148, "function-signature"], [149, "function-signature"], [150, "function-signature"], [151, "function-signature"], [152, "function-signature"], [153, "function-signature"], [154, "function-signature"], [155, "function-signature"], [156, "function-signature"], [157, "function-signature"], [159, "function-signature"], [160, "function-signature"], [161, "function-signature"], [162, "function-signature"], [163, "function-signature"], [164, "function-signature"], [166, "function-signature"], [167, "function-signature"], [168, "function-signature"], [169, "function-signature"], [170, "function-signature"], [171, "function-signature"], [172, "function-signature"], [173, "function-signature"], [174, "function-signature"], [176, "function-signature"], [177, "function-signature"], [178, "function-signature"], [179, "function-signature"], [182, "function-signature"], [183, "function-signature"], [184, "function-signature"], [185, "function-signature"], [186, "function-signature"], [187, "function-signature"], [188, "function-signature"], [189, "function-signature"], [190, "function-signature"], [191, "function-signature"], [193, "function-signature"], [194, "function-signature"], [195, "function-signature"], [196, "function-signature"], [198, "function-signature"], [199, "function-signature"], [200, "function-signature"], [201, "function-signature"], [202, "function-signature"], [204, "function-signature"], [206, "function-signature"], [209, "function-signature"], [210, "function-signature"], [218, "function-signature"], [219, "function-signature"], [220, "function-signature"], [222, "function-signature"], [223, "function-signature"], [226, "function-signature"], [227, "function-signature"], [237, "function-signature"], [238, "function-signature"], [240, "function-signature"], [241, "function-signature"], [242, "function-signature"], [243, "function-signature"], [244, "function-signature"], [245, "function-signature"], [247, "function-signature"], [248, "function-signature"], [249, "function-signature"], [250, "function-signature"], [251, "function-signature"], [252, "function-signature"], [253, "function-signature"], [255, "function-signature"], [256, "function-signature"], [257, "function-signature"], [258, "function-signature"], [259, "function-signature"], [260, "function-signature"], [261, "function-signature"], [262, "function-signature"], [265, "function-signature"], [267, "function-signature"], [268, "function-signature"], [269, "function-signature"], [270, "function-signature"], [272, "function-signature"], [273, "function-signature"], [274, "function-signature"], [275, "function-signature"], [277, "function-signature"], [278, "function-signature"], [279, "function-signature"], [280, "function-signature"], [281, "function-signature"], [282, "function-signature"], [283, "function-signature"], [284, "function-signature"], [285, "function-signature"], [286, "function-signature"], [287, "function-signature"], [288, "function-signature"], [290, "function-signature"], [291, "function-signature"], [292, "function-signature"], [293, "function-signature"], [294, "function-signature"], [296, "function-signature"], [298, "function-signature"], [299, "function-signature"], [309, "function-signature"], [311, "function-signature"], [312, "function-signature"], [313, "function-signature"], [314, "function-signature"], [315, "function-signature"], [316, "function-signature"], [420, "function-signature"], [421, "function-signature"], [423, "function-signature"], [424, "function-signature"], [425, "function-signature"], [427, "function-signature"], [428, "function-signature"], [429, "function-signature"], [430, "function-signature"], [431, "function-signature"], [432, "function-signature"], [435, "function-signature"], [436, "function-signature"], [437, "function-signature"], [438, "function-signature"], [439, "function-signature"], [440, "function-signature"], [441, "function-signature"], [442, "function-signature"], [443, "function-signature"], [444, "function-signature"], [445, "function-signature"], [446, "function-signature"], [447, "function-signature"], [448, "function-signature"], [449, "function-signature"], [450, "function-signature"], [451, "function-signature"], [452, "function-signature"], [453, "function-signature"], [454, "function-signature"], [455, "function-signature"], [456, "function-signature"], [457, "function-signature"], [458, "function-signature"], [460, "function-signature"], [461, "function-signature"], [462, "function-signature"], [463, "function-signature"], [464, "function-signature"], [465, "function-signature"], [466, "function-signature"], [467, "function-signature"], [468, "function-signature"], [469, "function-signature"], [470, "function-signature"], [471, "function-signature"], [472, "function-signature"], [473, "function-signature"], [474, "function-signature"], [475, "function-signature"], [476, "function-signature"], [477, "function-signature"], [478, "function-signature"], [479, "function-signature"], [480, "function-signature"], [481, "function-signature"], [482, "function-signature"], [483, "function-signature"], [484, "function-signature"], [485, "function-signature"], [486, "function-signature"], [487, "function-signature"], [488, "function-signature"], [489, "function-signature"], [490, "function-signature"], [491, "function-signature"], [492, "function-signature"], [493, "function-signature"], [494, "function-signature"], [495, "function-signature"], [496, "function-signature"], [497, "function-signature"], [498, "function-signature"], [499, "function-signature"], [500, "function-signature"], [501, "function-signature"], [503, "function-signature"], [504, "function-signature"], [505, "function-signature"], [506, "function-signature"], [507, "function-signature"], [508, "function-signature"], [509, "function-signature"], [510, "function-signature"], [511, "function-signature"], [512, "function-signature"], [513, "function-signature"], [514, "function-signature"], [515, "function-signature"], [516, "function-signature"], [517, "function-signature"], [518, "function-signature"], [519, "function-signature"], [520, "function-signature"], [521, "function-signature"], [522, "function-signature"], [523, "function-signature"]], "Functions": [[221, null]], "Fused Layers": [[308, null]], "Future Work": [[4, "future-work"]], "Getting Started": [[406, "getting-started"]], "Global minimum index": [[492, null]], "Gradient Calculation": [[523, "gradient-calculation"]], "Gradient Computation": [[495, "gradient-computation"], [503, "gradient-computation"], [510, "gradient-computation"], [511, "gradient-computation"], [516, "gradient-computation"]], "Gradient hooks": [[434, null]], "Hooks & Shape Alignment": [[16, "hooks-shape-alignment"]], "How It Works": [[421, "how-it-works"]], "How to Install": [[16, "how-to-install"]], "Hybrid Architecture": [[31, "hybrid-architecture"]], "Hyperparameter Configuration": [[145, "hyperparameter-configuration"], [146, "hyperparameter-configuration"]], "Image Classification": [[100, null]], "Image Datasets": [[9, null]], "Image Transformations": [[534, null]], "Implementation Details": [[55, "implementation-details"], [105, "implementation-details"]], "Inception": [[88, null], [100, "inception"]], "Inception-ResNet": [[100, "inception-resnet"]], "InceptionNeXt": [[92, null], [100, "inceptionnext"]], "InceptionResNet": [[97, null]], "Input & Output": [[215, "input-output"], [216, "input-output"]], "Inspecting Optimizer State": [[406, null], [407, null], [408, null], [409, null], [410, null], [411, null], [412, null], [413, null], [414, null], [415, null], [416, null], [417, null]], "Integration with lucid": [[3, "integration-with-lucid"], [394, "integration-with-lucid"], [433, "integration-with-lucid"], [535, "integration-with-lucid"]], "Key Components": [[3, "key-components"], [394, "key-components"]], "Key Enhancements": [[125, "key-enhancements"]], "Key Features": [[4, "key-features"], [171, "key-features"], [172, "key-features"], [173, "key-features"], [174, "key-features"], [179, "key-features"], [406, "key-features"], [433, "key-features"]], "Key Transformations": [[535, "key-transformations"]], "LR Schedulers": [[405, null]], "Layer Configuration": [[139, "layer-configuration"], [140, "layer-configuration"], [141, "layer-configuration"], [142, "layer-configuration"], [143, "layer-configuration"], [144, "layer-configuration"]], "LeNet": [[100, "lenet"], [101, null]], "Learn More": [[433, null]], "Linear Algebra Operations": [[21, null]], "Linear Functions": [[264, null], [266, null]], "Linear Layers": [[351, null], [355, null]], "Loading a custom dataset": [[1, null]], "Loss Dictionary": [[208, "loss-dictionary"]], "Loss Functions": [[264, null], [271, null]], "Loss Layers": [[351, null], [361, null]], "Lucid\u00b2 \ud83d\udc8e": [[16, null]], "MNIST": [[8, null]], "Mathematical Definition": [[13, "mathematical-definition"], [14, "mathematical-definition"], [15, "mathematical-definition"], [279, "mathematical-definition"], [349, "mathematical-definition"]], "Mathematical Details": [[330, "mathematical-details"], [386, "mathematical-details"], [387, "mathematical-details"], [388, "mathematical-details"], [389, "mathematical-details"], [390, "mathematical-details"]], "Mathematical Expression": [[275, "mathematical-expression"], [464, "mathematical-expression"], [470, "mathematical-expression"], [477, "mathematical-expression"], [512, "mathematical-expression"]], "Mathematical Formula": [[397, "mathematical-formula"], [398, "mathematical-formula"], [399, "mathematical-formula"], [401, "mathematical-formula"], [402, "mathematical-formula"], [403, "mathematical-formula"], [404, "mathematical-formula"]], "Mathematical Representation": [[55, "mathematical-representation"], [105, "mathematical-representation"], [434, "mathematical-representation"]], "Matrix Multiplication Rules": [[439, "matrix-multiplication-rules"]], "Max index by row": [[491, null]], "MaxViT": [[100, "maxvit"], [105, null]], "Metadata Captured": [[424, "metadata-captured"]], "Metal Acceleration (MLX Backend)": [[16, "metal-acceleration-mlx-backend"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [6, "methods"], [7, "methods"], [8, "methods"], [97, "methods"], [101, "methods"], [192, "methods"], [229, "methods"], [230, "methods"], [395, "methods"], [397, "methods"], [398, "methods"], [399, "methods"], [400, "methods"], [401, "methods"], [402, "methods"], [403, "methods"], [404, "methods"], [419, "methods"], [434, "methods"]], "MobileNet": [[100, "mobilenet"], [111, null]], "MobileNet_V2": [[112, null]], "MobileNet_V3": [[113, null]], "MobileNet_V4": [[114, null]], "Model Configuration": [[106, "model-configuration"], [107, "model-configuration"], [108, "model-configuration"], [109, "model-configuration"], [110, "model-configuration"]], "Modules": [[351, null]], "Moving tensor between devices": [[434, null]], "Natural Language Processing": [[207, "natural-language-processing"]], "Neural Networks with lucid.nn": [[16, "neural-networks-with-lucid-nn"]], "Normalization Functions": [[264, null], [276, null]], "Normalization Layers": [[351, null], [370, null]], "Notes": [[11, "notes"], [294, "notes"], [452, "notes"], [453, "notes"]], "Object Detection Utilities": [[221, null]], "Object detection": [[211, null]], "Optimizers": [[418, null]], "Organizing Models": [[394, "organizing-models"]], "Others": [[16, "others"]], "Overview": [[3, "overview"], [4, "overview"], [10, "overview"], [88, "overview"], [89, "overview"], [90, "overview"], [91, "overview"], [97, "overview"], [98, "overview"], [99, "overview"], [101, "overview"], [102, "overview"], [103, "overview"], [104, "overview"], [111, "overview"], [112, "overview"], [113, "overview"], [114, "overview"], [119, "overview"], [120, "overview"], [121, "overview"], [122, "overview"], [123, "overview"], [148, "overview"], [149, "overview"], [150, "overview"], [151, "overview"], [152, "overview"], [153, "overview"], [154, "overview"], [155, "overview"], [166, "overview"], [167, "overview"], [168, "overview"], [169, "overview"], [170, "overview"], [330, "overview"], [386, "overview"], [387, "overview"], [388, "overview"], [389, "overview"], [390, "overview"], [394, "overview"], [396, "overview"], [406, "overview"], [420, "overview"], [423, "overview"], [433, "overview"], [535, "overview"]], "PVT": [[124, null]], "PVT_V2": [[125, null]], "Parameters": [[1, "parameters"], [5, "parameters"], [6, "parameters"], [7, "parameters"], [8, "parameters"], [11, "parameters"], [13, "parameters"], [14, "parameters"], [15, "parameters"], [18, "parameters"], [19, "parameters"], [20, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [87, "parameters"], [88, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [101, "parameters"], [105, "parameters"], [106, "parameters"], [107, "parameters"], [108, "parameters"], [109, "parameters"], [110, "parameters"], [111, "parameters"], [112, "parameters"], [113, "parameters"], [114, "parameters"], [115, "parameters"], [116, "parameters"], [117, "parameters"], [118, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [122, "parameters"], [123, "parameters"], [124, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [154, "parameters"], [155, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"], [159, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [163, "parameters"], [164, "parameters"], [165, "parameters"], [166, "parameters"], [167, "parameters"], [168, "parameters"], [169, "parameters"], [170, "parameters"], [171, "parameters"], [172, "parameters"], [173, "parameters"], [174, "parameters"], [175, "parameters"], [176, "parameters"], [177, "parameters"], [178, "parameters"], [179, "parameters"], [180, "parameters"], [181, "parameters"], [182, "parameters"], [183, "parameters"], [184, "parameters"], [185, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [189, "parameters"], [190, "parameters"], [191, "parameters"], [192, "parameters"], [193, "parameters"], [194, "parameters"], [195, "parameters"], [196, "parameters"], [197, "parameters"], [198, "parameters"], [199, "parameters"], [200, "parameters"], [201, "parameters"], [202, "parameters"], [203, "parameters"], [204, "parameters"], [205, "parameters"], [206, "parameters"], [208, "parameters"], [209, "parameters"], [210, "parameters"], [212, "parameters"], [213, "parameters"], [214, "parameters"], [215, "parameters"], [216, "parameters"], [217, "parameters"], [218, "parameters"], [219, "parameters"], [220, "parameters"], [222, "parameters"], [223, "parameters"], [225, "parameters"], [226, "parameters"], [227, "parameters"], [228, "parameters"], [230, "parameters"], [231, "parameters"], [232, "parameters"], [233, "parameters"], [234, "parameters"], [235, "parameters"], [237, "parameters"], [238, "parameters"], [240, "parameters"], [241, "parameters"], [242, "parameters"], [243, "parameters"], [244, "parameters"], [245, "parameters"], [247, "parameters"], [248, "parameters"], [249, "parameters"], [250, "parameters"], [251, "parameters"], [252, "parameters"], [253, "parameters"], [255, "parameters"], [256, "parameters"], [257, "parameters"], [258, "parameters"], [259, "parameters"], [260, "parameters"], [261, "parameters"], [262, "parameters"], [265, "parameters"], [267, "parameters"], [268, "parameters"], [269, "parameters"], [270, "parameters"], [272, "parameters"], [273, "parameters"], [274, "parameters"], [275, "parameters"], [277, "parameters"], [278, "parameters"], [279, "parameters"], [280, "parameters"], [281, "parameters"], [282, "parameters"], [283, "parameters"], [284, "parameters"], [285, "parameters"], [286, "parameters"], [287, "parameters"], [288, "parameters"], [290, "parameters"], [291, "parameters"], [292, "parameters"], [293, "parameters"], [294, "parameters"], [296, "parameters"], [298, "parameters"], [299, "parameters"], [300, "parameters"], [301, "parameters"], [302, "parameters"], [303, "parameters"], [304, "parameters"], [305, "parameters"], [306, "parameters"], [307, "parameters"], [309, "parameters"], [311, "parameters"], [312, "parameters"], [313, "parameters"], [314, "parameters"], [315, "parameters"], [316, "parameters"], [317, "parameters"], [318, "parameters"], [321, "parameters"], [322, "parameters"], [324, "parameters"], [325, "parameters"], [326, "parameters"], [328, "parameters"], [330, "parameters"], [331, "parameters"], [333, "parameters"], [334, "parameters"], [335, "parameters"], [336, "parameters"], [337, "parameters"], [338, "parameters"], [339, "parameters"], [341, "parameters"], [342, "parameters"], [343, "parameters"], [344, "parameters"], [345, "parameters"], [346, "parameters"], [347, "parameters"], [349, "parameters"], [352, "parameters"], [353, "parameters"], [354, "parameters"], [356, "parameters"], [357, "parameters"], [358, "parameters"], [359, "parameters"], [360, "parameters"], [362, "parameters"], [363, "parameters"], [364, "parameters"], [365, "parameters"], [366, "parameters"], [367, "parameters"], [368, "parameters"], [369, "parameters"], [371, "parameters"], [372, "parameters"], [373, "parameters"], [374, "parameters"], [375, "parameters"], [376, "parameters"], [377, "parameters"], [378, "parameters"], [379, "parameters"], [380, "parameters"], [381, "parameters"], [382, "parameters"], [384, "parameters"], [386, "parameters"], [387, "parameters"], [388, "parameters"], [389, "parameters"], [390, "parameters"], [392, "parameters"], [397, "parameters"], [398, "parameters"], [399, "parameters"], [400, "parameters"], [401, "parameters"], [402, "parameters"], [403, "parameters"], [404, "parameters"], [407, "parameters"], [408, "parameters"], [409, "parameters"], [410, "parameters"], [411, "parameters"], [412, "parameters"], [413, "parameters"], [414, "parameters"], [415, "parameters"], [416, "parameters"], [417, "parameters"], [419, "parameters"], [420, "parameters"], [423, "parameters"], [424, "parameters"], [425, "parameters"], [427, "parameters"], [428, "parameters"], [429, "parameters"], [430, "parameters"], [431, "parameters"], [432, "parameters"], [434, "parameters"], [435, "parameters"], [436, "parameters"], [437, "parameters"], [438, "parameters"], [439, "parameters"], [440, "parameters"], [441, "parameters"], [442, "parameters"], [443, "parameters"], [444, "parameters"], [445, "parameters"], [446, "parameters"], [447, "parameters"], [448, "parameters"], [449, "parameters"], [450, "parameters"], [451, "parameters"], [452, "parameters"], [453, "parameters"], [454, "parameters"], [455, "parameters"], [456, "parameters"], [457, "parameters"], [458, "parameters"], [460, "parameters"], [461, "parameters"], [462, "parameters"], [463, "parameters"], [464, "parameters"], [465, "parameters"], [466, "parameters"], [467, "parameters"], [468, "parameters"], [469, "parameters"], [470, "parameters"], [471, "parameters"], [472, "parameters"], [473, "parameters"], [474, "parameters"], [475, "parameters"], [476, "parameters"], [477, "parameters"], [478, "parameters"], [479, "parameters"], [480, "parameters"], [481, "parameters"], [482, "parameters"], [483, "parameters"], [484, "parameters"], [485, "parameters"], [486, "parameters"], [487, "parameters"], [488, "parameters"], [489, "parameters"], [490, "parameters"], [491, "parameters"], [492, "parameters"], [493, "parameters"], [494, "parameters"], [495, "parameters"], [496, "parameters"], [497, "parameters"], [498, "parameters"], [499, "parameters"], [500, "parameters"], [501, "parameters"], [503, "parameters"], [504, "parameters"], [505, "parameters"], [506, "parameters"], [507, "parameters"], [508, "parameters"], [509, "parameters"], [510, "parameters"], [511, "parameters"], [512, "parameters"], [513, "parameters"], [514, "parameters"], [515, "parameters"], [516, "parameters"], [517, "parameters"], [518, "parameters"], [519, "parameters"], [520, "parameters"], [521, "parameters"], [522, "parameters"], [523, "parameters"], [524, "parameters"], [525, "parameters"], [526, "parameters"], [527, "parameters"], [528, "parameters"], [529, "parameters"], [530, "parameters"], [531, "parameters"], [532, "parameters"], [533, "parameters"]], "Performance / FLOPs": [[493, "performance-flops"]], "Performing backpropagation": [[434, null]], "Pooling Functions": [[264, null], [289, null]], "Pooling Layers": [[351, null], [383, null]], "Potential Pitfalls": [[421, "potential-pitfalls"]], "Properties": [[230, "properties"], [434, "properties"]], "Pyramid Vision Transformer (PVT)": [[100, "pyramid-vision-transformer-pvt"]], "R-CNN": [[211, "r-cnn"], [213, null]], "Raises": [[18, "raises"], [19, "raises"], [20, "raises"], [22, "raises"], [23, "raises"], [24, "raises"], [25, "raises"], [26, "raises"], [27, "raises"], [28, "raises"]], "Random Number Generations": [[426, null]], "References": [[5, "references"], [6, "references"], [7, "references"], [8, "references"], [306, "references"], [406, "references"]], "Regularization": [[257, "regularization"]], "Representation": [[419, "representation"]], "ResNeSt": [[100, "resnest"], [138, null]], "ResNeXt": [[100, "resnext"], [158, null]], "ResNet": [[100, "resnet"], [147, null]], "Return Values": [[512, "return-values"]], "Returns": [[11, "returns"], [13, "returns"], [14, "returns"], [15, "returns"], [18, "returns"], [19, "returns"], [20, "returns"], [22, "returns"], [23, "returns"], [24, "returns"], [25, "returns"], [26, "returns"], [27, "returns"], [28, "returns"], [30, "returns"], [42, "returns"], [43, "returns"], [44, "returns"], [45, "returns"], [46, "returns"], [47, "returns"], [48, "returns"], [49, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [53, "returns"], [54, "returns"], [56, "returns"], [57, "returns"], [58, "returns"], [59, "returns"], [60, "returns"], [61, "returns"], [62, "returns"], [63, "returns"], [64, "returns"], [66, "returns"], [67, "returns"], [68, "returns"], [70, "returns"], [71, "returns"], [72, "returns"], [73, "returns"], [76, "returns"], [77, "returns"], [78, "returns"], [79, "returns"], [80, "returns"], [81, "returns"], [82, "returns"], [83, "returns"], [84, "returns"], [85, "returns"], [86, "returns"], [87, "returns"], [89, "returns"], [90, "returns"], [91, "returns"], [93, "returns"], [94, "returns"], [95, "returns"], [96, "returns"], [98, "returns"], [99, "returns"], [102, "returns"], [103, "returns"], [104, "returns"], [115, "returns"], [116, "returns"], [117, "returns"], [118, "returns"], [124, "returns"], [125, "returns"], [126, "returns"], [127, "returns"], [128, "returns"], [129, "returns"], [130, "returns"], [131, "returns"], [132, "returns"], [133, "returns"], [134, "returns"], [135, "returns"], [136, "returns"], [137, "returns"], [139, "returns"], [140, "returns"], [141, "returns"], [142, "returns"], [143, "returns"], [144, "returns"], [145, "returns"], [146, "returns"], [148, "returns"], [149, "returns"], [150, "returns"], [151, "returns"], [152, "returns"], [153, "returns"], [154, "returns"], [155, "returns"], [156, "returns"], [157, "returns"], [159, "returns"], [160, "returns"], [161, "returns"], [162, "returns"], [163, "returns"], [164, "returns"], [166, "returns"], [167, "returns"], [168, "returns"], [169, "returns"], [170, "returns"], [171, "returns"], [172, "returns"], [173, "returns"], [174, "returns"], [176, "returns"], [177, "returns"], [178, "returns"], [179, "returns"], [182, "returns"], [183, "returns"], [184, "returns"], [185, "returns"], [186, "returns"], [187, "returns"], [188, "returns"], [189, "returns"], [190, "returns"], [191, "returns"], [193, "returns"], [194, "returns"], [195, "returns"], [196, "returns"], [198, "returns"], [199, "returns"], [200, "returns"], [201, "returns"], [202, "returns"], [204, "returns"], [206, "returns"], [209, "returns"], [210, "returns"], [214, "returns"], [215, "returns"], [216, "returns"], [217, "returns"], [218, "returns"], [219, "returns"], [220, "returns"], [222, "returns"], [223, "returns"], [226, "returns"], [227, "returns"], [237, "returns"], [238, "returns"], [240, "returns"], [241, "returns"], [242, "returns"], [243, "returns"], [244, "returns"], [245, "returns"], [247, "returns"], [248, "returns"], [249, "returns"], [250, "returns"], [251, "returns"], [252, "returns"], [253, "returns"], [255, "returns"], [256, "returns"], [257, "returns"], [258, "returns"], [259, "returns"], [260, "returns"], [261, "returns"], [262, "returns"], [265, "returns"], [267, "returns"], [268, "returns"], [269, "returns"], [270, "returns"], [272, "returns"], [273, "returns"], [274, "returns"], [275, "returns"], [277, "returns"], [278, "returns"], [279, "returns"], [280, "returns"], [281, "returns"], [282, "returns"], [283, "returns"], [284, "returns"], [285, "returns"], [286, "returns"], [287, "returns"], [288, "returns"], [290, "returns"], [291, "returns"], [292, "returns"], [293, "returns"], [294, "returns"], [296, "returns"], [298, "returns"], [299, "returns"], [307, "returns"], [309, "returns"], [311, "returns"], [312, "returns"], [313, "returns"], [314, "returns"], [315, "returns"], [316, "returns"], [323, "returns"], [349, "returns"], [384, "returns"], [420, "returns"], [421, "returns"], [423, "returns"], [425, "returns"], [427, "returns"], [428, "returns"], [429, "returns"], [430, "returns"], [431, "returns"], [432, "returns"], [435, "returns"], [436, "returns"], [437, "returns"], [438, "returns"], [439, "returns"], [440, "returns"], [441, "returns"], [442, "returns"], [443, "returns"], [444, "returns"], [445, "returns"], [446, "returns"], [447, "returns"], [448, "returns"], [449, "returns"], [450, "returns"], [451, "returns"], [452, "returns"], [453, "returns"], [454, "returns"], [455, "returns"], [456, "returns"], [457, "returns"], [458, "returns"], [460, "returns"], [461, "returns"], [462, "returns"], [463, "returns"], [464, "returns"], [465, "returns"], [466, "returns"], [467, "returns"], [468, "returns"], [469, "returns"], [470, "returns"], [471, "returns"], [472, "returns"], [473, "returns"], [474, "returns"], [475, "returns"], [476, "returns"], [477, "returns"], [478, "returns"], [479, "returns"], [480, "returns"], [481, "returns"], [482, "returns"], [483, "returns"], [484, "returns"], [485, "returns"], [486, "returns"], [487, "returns"], [488, "returns"], [489, "returns"], [490, "returns"], [491, "returns"], [492, "returns"], [493, "returns"], [494, "returns"], [495, "returns"], [496, "returns"], [497, "returns"], [498, "returns"], [499, "returns"], [500, "returns"], [501, "returns"], [503, "returns"], [504, "returns"], [505, "returns"], [506, "returns"], [507, "returns"], [508, "returns"], [509, "returns"], [510, "returns"], [511, "returns"], [513, "returns"], [514, "returns"], [515, "returns"], [516, "returns"], [517, "returns"], [518, "returns"], [519, "returns"], [520, "returns"], [521, "returns"], [522, "returns"], [523, "returns"]], "SENet": [[100, "senet"], [165, null]], "SKNet": [[100, "sknet"], [175, null]], "Schedulers": [[405, null]], "See Also": [[406, "see-also"]], "Selective Kernel": [[308, null]], "Sequence-to-Sequence": [[224, null]], "Sparse Layers": [[351, null], [385, null]], "Spatial Functions": [[264, null], [295, null]], "Specifications": [[56, "specifications"], [57, "specifications"], [58, "specifications"], [59, "specifications"], [60, "specifications"], [61, "specifications"], [62, "specifications"], [63, "specifications"], [64, "specifications"]], "Squeeze-and-Excitation": [[308, null]], "Stable sort with duplicates": [[493, null]], "Swin Transformer": [[100, "swin-transformer"]], "SwinTransformer": [[180, null]], "SwinTransformer_V2": [[181, null]], "Switching Between Devices": [[16, "switching-between-devices"]], "Tensor Contraction Rules": [[446, "tensor-contraction-rules"]], "Tensor Generating Functions": [[459, null]], "Tensor Operations": [[459, null]], "Tensor Utilities": [[502, null]], "Tensor: The Core Abstraction": [[16, "tensor-the-core-abstraction"]], "Training & Evaluation": [[16, "training-evaluation"]], "Training Notes": [[209, "training-notes"], [210, "training-notes"]], "Transformer": [[224, "transformer"], [225, null]], "Transformer Layers": [[351, null], [391, null]], "Unary Functions": [[459, null]], "Usage": [[4, "usage"], [84, "usage"], [85, "usage"], [86, "usage"], [87, "usage"], [228, "usage"], [299, "usage"], [396, "usage"], [421, "usage"], [422, "usage"], [504, "usage"], [524, "usage"], [525, "usage"], [535, "usage"]], "Usage Example": [[119, "usage-example"], [120, "usage-example"], [121, "usage-example"], [122, "usage-example"], [123, "usage-example"], [330, "usage-example"], [386, "usage-example"], [387, "usage-example"], [388, "usage-example"], [389, "usage-example"], [390, "usage-example"], [397, "usage-example"], [398, "usage-example"], [399, "usage-example"], [400, "usage-example"], [401, "usage-example"], [402, "usage-example"], [403, "usage-example"], [404, "usage-example"]], "Usage Examples": [[419, "usage-examples"]], "Use another Tensor as input": [[490, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using free tensors": [[434, null]], "Using the ASGD Optimizer": [[407, null]], "Using the Adadelta Optimizer": [[408, null]], "Using the Adagrad Optimizer": [[409, null]], "Using the Adam Optimizer": [[410, null]], "Using the AdamW Optimizer": [[411, null]], "Using the Adamax Optimizer": [[412, null]], "Using the NAdam Optimizer": [[413, null]], "Using the RAdam Optimizer": [[414, null]], "Using the RMSprop Optimizer": [[415, null]], "Using the Rprop Optimizer": [[416, null]], "Using the SGD Optimizer": [[417, null]], "Utility Functions": [[264, null], [297, null]], "VGGNet": [[100, "vggnet"], [192, null]], "Verification": [[16, "verification"]], "ViT": [[197, null]], "Vision Layers": [[351, null], [393, null]], "Visual Transformer (ViT)": [[100, "visual-transformer-vit"]], "Weight Initializations": [[310, null]], "Xception": [[100, "xception"], [203, null]], "ZFNet": [[100, "zfnet"], [205, null]], "alexnet": [[30, null]], "coatnet_0": [[32, null]], "coatnet_1": [[33, null]], "coatnet_2": [[34, null]], "coatnet_3": [[35, null]], "coatnet_4": [[36, null]], "coatnet_5": [[37, null]], "coatnet_6": [[38, null]], "coatnet_7": [[39, null]], "convnext_base": [[42, null]], "convnext_large": [[43, null]], "convnext_small": [[44, null]], "convnext_tiny": [[45, null]], "convnext_v2_atto": [[46, null]], "convnext_v2_base": [[47, null]], "convnext_v2_femto": [[48, null]], "convnext_v2_huge": [[49, null]], "convnext_v2_large": [[50, null]], "convnext_v2_nano": [[51, null]], "convnext_v2_pico": [[52, null]], "convnext_v2_tiny": [[53, null]], "convnext_xlarge": [[54, null]], "crossvit_15": [[56, null]], "crossvit_15_dagger": [[57, null]], "crossvit_18": [[58, null]], "crossvit_18_dagger": [[59, null]], "crossvit_9": [[60, null]], "crossvit_9_dagger": [[61, null]], "crossvit_base": [[62, null]], "crossvit_small": [[63, null]], "crossvit_tiny": [[64, null]], "cvt_13": [[66, null]], "cvt_21": [[67, null]], "cvt_w24": [[68, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "densenet_121": [[70, null]], "densenet_169": [[71, null]], "densenet_201": [[72, null]], "densenet_264": [[73, null]], "efficientnet_b0": [[76, null]], "efficientnet_b1": [[77, null]], "efficientnet_b2": [[78, null]], "efficientnet_b3": [[79, null]], "efficientnet_b4": [[80, null]], "efficientnet_b5": [[81, null]], "efficientnet_b6": [[82, null]], "efficientnet_b7": [[83, null]], "efficientnet_v2_l": [[84, null]], "efficientnet_v2_m": [[85, null]], "efficientnet_v2_s": [[86, null]], "efficientnet_v2_xl": [[87, null]], "faster_rcnn_resnet_101_fpn": [[209, null]], "faster_rcnn_resnet_50_fpn": [[210, null]], "inception_next_atto": [[93, null]], "inception_next_base": [[94, null]], "inception_next_small": [[95, null]], "inception_next_tiny": [[96, null]], "inception_resnet_v1": [[98, null]], "inception_resnet_v2": [[99, null]], "inception_v1": [[89, null]], "inception_v3": [[90, null]], "inception_v4": [[91, null]], "lenet_1": [[102, null]], "lenet_4": [[103, null]], "lenet_5": [[104, null]], "lr_scheduler.CosineAnnealingLR": [[397, null]], "lr_scheduler.CyclicLR": [[398, null]], "lr_scheduler.ExponentialLR": [[399, null]], "lr_scheduler.LRScheduler": [[400, null]], "lr_scheduler.LambdaLR": [[401, null]], "lr_scheduler.MultiStepLR": [[402, null]], "lr_scheduler.ReduceLROnPlateau": [[403, null]], "lr_scheduler.StepLR": [[404, null]], "lucid.Numeric": [[419, null]], "lucid.Tensor": [[434, null]], "lucid.abs": [[460, null]], "lucid.add": [[435, null]], "lucid.arange": [[447, null]], "lucid.arccos": [[461, null]], "lucid.arcsin": [[462, null]], "lucid.arctan": [[463, null]], "lucid.argmax": [[491, null]], "lucid.argmin": [[492, null]], "lucid.argsort": [[493, null]], "lucid.broadcast_to": [[494, null]], "lucid.ceil": [[464, null]], "lucid.chunk": [[495, null]], "lucid.clip": [[465, null]], "lucid.concatenate": [[496, null]], "lucid.cos": [[466, null]], "lucid.cosh": [[467, null]], "lucid.count_flops": [[420, null]], "lucid.cube": [[468, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[448, null]], "lucid.div": [[436, null]], "lucid.dot": [[437, null]], "lucid.einops": [[10, null]], "lucid.einops.einsum": [[11, null]], "lucid.einops.rearrange": [[13, null]], "lucid.einops.reduce": [[14, null]], "lucid.einops.repeat": [[15, null]], "lucid.empty": [[449, null]], "lucid.empty_like": [[450, null]], "lucid.exp": [[469, null]], "lucid.eye": [[451, null]], "lucid.flatten": [[497, null]], "lucid.floor": [[470, null]], "lucid.full": [[452, null]], "lucid.full_like": [[453, null]], "lucid.grad_enabled": [[421, null]], "lucid.histogram": [[498, null]], "lucid.histogram2d": [[499, null]], "lucid.histogramdd": [[500, null]], "lucid.hstack": [[501, null]], "lucid.inner": [[438, null]], "lucid.linalg": [[17, null]], "lucid.linalg.cholesky": [[18, null]], "lucid.linalg.det": [[19, null]], "lucid.linalg.eig": [[20, null]], "lucid.linalg.inv": [[22, null]], "lucid.linalg.matrix_power": [[23, null]], "lucid.linalg.norm": [[24, null]], "lucid.linalg.pinv": [[25, null]], "lucid.linalg.qr": [[26, null]], "lucid.linalg.solve": [[27, null]], "lucid.linalg.svd": [[28, null]], "lucid.linspace": [[454, null]], "lucid.log": [[471, null]], "lucid.log2": [[472, null]], "lucid.masked_fill": [[503, null]], "lucid.matmul": [[439, null]], "lucid.max": [[473, null]], "lucid.maximum": [[440, null]], "lucid.mean": [[474, null]], "lucid.meshgrid": [[504, null]], "lucid.min": [[475, null]], "lucid.minimum": [[441, null]], "lucid.models": [[207, null]], "lucid.multiply": [[442, null]], "lucid.newaxis": [[422, null]], "lucid.nn": [[394, null]], "lucid.nn.functional": [[264, null]], "lucid.no_grad": [[423, null]], "lucid.nonzero": [[505, null]], "lucid.ones": [[455, null]], "lucid.ones_like": [[456, null]], "lucid.optim": [[406, null]], "lucid.outer": [[443, null]], "lucid.pad": [[506, null]], "lucid.power": [[444, null]], "lucid.random": [[433, null]], "lucid.random.bernoulli": [[425, null]], "lucid.random.permutation": [[427, null]], "lucid.random.rand": [[428, null]], "lucid.random.randint": [[429, null]], "lucid.random.randn": [[430, null]], "lucid.random.seed": [[431, null]], "lucid.random.uniform": [[432, null]], "lucid.ravel": [[507, null]], "lucid.reciprocal": [[476, null]], "lucid.register_model": [[424, null]], "lucid.repeat": [[508, null]], "lucid.reshape": [[509, null]], "lucid.roll": [[510, null]], "lucid.round": [[477, null]], "lucid.sign": [[478, null]], "lucid.sin": [[479, null]], "lucid.sinh": [[480, null]], "lucid.sort": [[511, null]], "lucid.split": [[512, null]], "lucid.sqrt": [[481, null]], "lucid.square": [[482, null]], "lucid.squeeze": [[513, null]], "lucid.stack": [[514, null]], "lucid.sub": [[445, null]], "lucid.sum": [[483, null]], "lucid.swapaxes": [[484, null]], "lucid.tan": [[485, null]], "lucid.tanh": [[486, null]], "lucid.tensor": [[490, null]], "lucid.tensordot": [[446, null]], "lucid.tile": [[515, null]], "lucid.topk": [[516, null]], "lucid.trace": [[487, null]], "lucid.transforms": [[535, null]], "lucid.transpose": [[488, null]], "lucid.tril": [[517, null]], "lucid.triu": [[518, null]], "lucid.unbind": [[519, null]], "lucid.unique": [[520, null]], "lucid.unsqueeze": [[521, null]], "lucid.var": [[489, null]], "lucid.vstack": [[522, null]], "lucid.where": [[523, null]], "lucid.zeros": [[457, null]], "lucid.zeros_like": [[458, null]], "maxvit_base": [[106, null], [107, null]], "maxvit_small": [[108, null]], "maxvit_tiny": [[109, null]], "maxvit_xlarge": [[110, null]], "mobilenet": [[115, null]], "mobilenet_v2": [[116, null]], "mobilenet_v3_large": [[117, null]], "mobilenet_v3_small": [[118, null]], "mobilenet_v4_conv_large": [[119, null]], "mobilenet_v4_conv_medium": [[120, null]], "mobilenet_v4_conv_small": [[121, null]], "mobilenet_v4_hybrid_large": [[122, null]], "mobilenet_v4_hybrid_medium": [[123, null]], "nn.AdaptiveAvgPool1d": [[371, null]], "nn.AdaptiveAvgPool2d": [[372, null]], "nn.AdaptiveAvgPool3d": [[373, null]], "nn.AdaptiveMaxPool1d": [[374, null]], "nn.AdaptiveMaxPool2d": [[375, null]], "nn.AdaptiveMaxPool3d": [[376, null]], "nn.AlphaDropout": [[341, null]], "nn.AvgPool1d": [[377, null]], "nn.AvgPool2d": [[378, null]], "nn.AvgPool3d": [[379, null]], "nn.BCELoss": [[356, null]], "nn.BatchNorm1d": [[362, null]], "nn.BatchNorm2d": [[363, null]], "nn.BatchNorm3d": [[364, null]], "nn.Bilinear": [[352, null]], "nn.Buffer": [[228, null]], "nn.Conv1d": [[333, null]], "nn.Conv2d": [[334, null]], "nn.Conv3d": [[335, null]], "nn.ConvBNReLU1d": [[300, null]], "nn.ConvBNReLU2d": [[301, null]], "nn.ConvBNReLU3d": [[302, null]], "nn.ConvTranspose1d": [[336, null]], "nn.ConvTranspose2d": [[337, null]], "nn.ConvTranspose3d": [[338, null]], "nn.CrossEntropyLoss": [[357, null]], "nn.DepthSeparableConv1d": [[303, null]], "nn.DepthSeparableConv2d": [[304, null]], "nn.DepthSeparableConv3d": [[305, null]], "nn.DropBlock": [[342, null]], "nn.DropPath": [[343, null]], "nn.Dropout": [[344, null]], "nn.Dropout1d": [[345, null]], "nn.Dropout2d": [[346, null]], "nn.Dropout3d": [[347, null]], "nn.ELU": [[317, null]], "nn.Embedding": [[384, null]], "nn.GELU": [[318, null]], "nn.GlobalResponseNorm": [[365, null]], "nn.HardSigmoid": [[319, null]], "nn.HardSwish": [[320, null]], "nn.HuberLoss": [[358, null]], "nn.Identity": [[353, null]], "nn.InstanceNorm1d": [[366, null]], "nn.InstanceNorm2d": [[367, null]], "nn.InstanceNorm3d": [[368, null]], "nn.LayerNorm": [[369, null]], "nn.LeakyReLU": [[321, null]], "nn.Linear": [[354, null]], "nn.MSELoss": [[359, null]], "nn.MaxPool1d": [[380, null]], "nn.MaxPool2d": [[381, null]], "nn.MaxPool3d": [[382, null]], "nn.Module": [[229, null]], "nn.ModuleDict": [[231, null]], "nn.ModuleList": [[232, null]], "nn.MultiHeadAttention": [[330, null]], "nn.NLLLoss": [[360, null]], "nn.Parameter": [[230, null]], "nn.ParameterDict": [[233, null]], "nn.ParameterList": [[234, null]], "nn.ReLU": [[322, null]], "nn.ReLU6": [[323, null]], "nn.Rearrange": [[349, null]], "nn.SELU": [[324, null]], "nn.SEModule": [[306, null]], "nn.ScaledDotProductAttention": [[331, null]], "nn.SelectiveKernel": [[307, null]], "nn.Sequential": [[235, null]], "nn.Sigmoid": [[325, null]], "nn.Softmax": [[326, null]], "nn.Swish": [[327, null]], "nn.Tanh": [[328, null]], "nn.Transformer": [[386, null]], "nn.TransformerDecoder": [[387, null]], "nn.TransformerDecoderLayer": [[388, null]], "nn.TransformerEncoder": [[389, null]], "nn.TransformerEncoderLayer": [[390, null]], "nn.Unfold": [[339, null]], "nn.Upsample": [[392, null]], "nn.functional.adaptive_avg_pool1d": [[280, null]], "nn.functional.adaptive_avg_pool2d": [[281, null]], "nn.functional.adaptive_avg_pool3d": [[282, null]], "nn.functional.adaptive_max_pool1d": [[283, null]], "nn.functional.adaptive_max_pool2d": [[284, null]], "nn.functional.adaptive_max_pool3d": [[285, null]], "nn.functional.affine_grid": [[293, null]], "nn.functional.alpha_dropout": [[256, null]], "nn.functional.avg_pool1d": [[286, null]], "nn.functional.avg_pool2d": [[287, null]], "nn.functional.avg_pool3d": [[288, null]], "nn.functional.batch_norm": [[274, null]], "nn.functional.bilinear": [[265, null]], "nn.functional.binary_cross_entropy": [[268, null]], "nn.functional.conv1d": [[248, null]], "nn.functional.conv2d": [[249, null]], "nn.functional.conv3d": [[250, null]], "nn.functional.conv_transpose1d": [[251, null]], "nn.functional.conv_transpose2d": [[252, null]], "nn.functional.conv_transpose3d": [[253, null]], "nn.functional.cross_entropy": [[269, null]], "nn.functional.drop_block": [[257, null]], "nn.functional.drop_path": [[258, null]], "nn.functional.dropout": [[259, null]], "nn.functional.dropout1d": [[260, null]], "nn.functional.dropout2d": [[261, null]], "nn.functional.dropout3d": [[262, null]], "nn.functional.elu": [[237, null]], "nn.functional.embedding": [[296, null]], "nn.functional.gelu": [[238, null]], "nn.functional.global_response_norm": [[275, null]], "nn.functional.grid_sample": [[294, null]], "nn.functional.huber_loss": [[270, null]], "nn.functional.instance_norm": [[277, null]], "nn.functional.interpolate": [[298, null]], "nn.functional.layer_norm": [[278, null]], "nn.functional.leaky_relu": [[240, null]], "nn.functional.linear": [[267, null]], "nn.functional.max_pool1d": [[290, null]], "nn.functional.max_pool2d": [[291, null]], "nn.functional.max_pool3d": [[292, null]], "nn.functional.mse_loss": [[272, null]], "nn.functional.nll_loss": [[273, null]], "nn.functional.normalize": [[279, null]], "nn.functional.relu": [[241, null]], "nn.functional.rotate": [[299, null]], "nn.functional.scaled_dot_product_attention": [[247, null]], "nn.functional.selu": [[242, null]], "nn.functional.sigmoid": [[243, null]], "nn.functional.softmax": [[244, null]], "nn.functional.tanh": [[245, null]], "nn.functional.unfold": [[255, null]], "nn.init.constant": [[309, null]], "nn.init.kaiming_normal": [[311, null]], "nn.init.kaiming_uniform": [[312, null]], "nn.init.normal": [[313, null]], "nn.init.uniform": [[314, null]], "nn.init.xavier_normal": [[315, null]], "nn.init.xavier_uniform": [[316, null]], "optim.ASGD": [[407, null]], "optim.Adadelta": [[408, null]], "optim.Adagrad": [[409, null]], "optim.Adam": [[410, null]], "optim.AdamW": [[411, null]], "optim.Adamax": [[412, null]], "optim.NAdam": [[413, null]], "optim.Optimizer": [[395, null]], "optim.RAdam": [[414, null]], "optim.RMSprop": [[415, null]], "optim.Rprop": [[416, null]], "optim.SGD": [[417, null]], "optim.lr_scheduler": [[396, null]], "pvt_huge": [[126, null]], "pvt_large": [[127, null]], "pvt_medium": [[128, null]], "pvt_small": [[129, null]], "pvt_tiny": [[130, null]], "pvt_v2_b0": [[131, null]], "pvt_v2_b1": [[132, null]], "pvt_v2_b2": [[133, null]], "pvt_v2_b2_li": [[134, null]], "pvt_v2_b3": [[135, null]], "pvt_v2_b4": [[136, null]], "pvt_v2_b5": [[137, null]], "rearrange": [[10, "rearrange"]], "reduce": [[10, "reduce"]], "repeat": [[10, "repeat"]], "resnest_101": [[139, null]], "resnest_14": [[140, null]], "resnest_200": [[141, null]], "resnest_26": [[142, null]], "resnest_269": [[143, null]], "resnest_50": [[144, null]], "resnest_50_1s4x24d": [[145, null]], "resnest_50_4s2x40d": [[146, null]], "resnet_1001": [[148, null]], "resnet_101": [[149, null]], "resnet_152": [[150, null]], "resnet_18": [[151, null]], "resnet_200": [[152, null]], "resnet_269": [[153, null]], "resnet_34": [[154, null]], "resnet_50": [[155, null]], "resnext_101_32x16d": [[159, null]], "resnext_101_32x32d": [[160, null]], "resnext_101_32x4d": [[161, null]], "resnext_101_32x8d": [[162, null]], "resnext_101_64x4d": [[163, null]], "resnext_50_32x4d": [[164, null]], "se_resnet_101": [[166, null]], "se_resnet_152": [[167, null]], "se_resnet_18": [[168, null]], "se_resnet_34": [[169, null]], "se_resnet_50": [[170, null]], "se_resnext_101_32x4d": [[171, null]], "se_resnext_101_32x8d": [[172, null]], "se_resnext_101_64x4d": [[173, null]], "se_resnext_50_32x4d": [[174, null]], "sk_resnet_18": [[176, null]], "sk_resnet_34": [[177, null]], "sk_resnet_50": [[178, null]], "sk_resnext_50_32x4d": [[179, null]], "swin_base": [[182, null]], "swin_large": [[183, null]], "swin_small": [[184, null]], "swin_tiny": [[185, null]], "swin_v2_base": [[186, null]], "swin_v2_giant": [[187, null]], "swin_v2_huge": [[188, null]], "swin_v2_large": [[189, null]], "swin_v2_small": [[190, null]], "swin_v2_tiny": [[191, null]], "transformer_base": [[226, null]], "transformer_big": [[227, null]], "transforms.CenterCrop": [[526, null]], "transforms.Compose": [[524, null]], "transforms.Normalize": [[527, null]], "transforms.RandomCrop": [[528, null]], "transforms.RandomGrayscale": [[529, null]], "transforms.RandomHorizontalFlip": [[530, null]], "transforms.RandomRotation": [[531, null]], "transforms.RandomVerticalFlip": [[532, null]], "transforms.Resize": [[533, null]], "transforms.ToTensor": [[525, null]], "util.FPN": [[214, null]], "util.MultiScaleROIAlign": [[215, null]], "util.ROIAlign": [[216, null]], "util.SelectiveSearch": [[217, null]], "util.apply_deltas": [[218, null]], "util.bbox_to_delta": [[219, null]], "util.clip_boxes": [[220, null]], "util.iou": [[222, null]], "util.nms": [[223, null]], "vggnet_11": [[193, null]], "vggnet_13": [[194, null]], "vggnet_16": [[195, null]], "vggnet_19": [[196, null]], "vit_base": [[198, null]], "vit_huge": [[199, null]], "vit_large": [[200, null]], "vit_small": [[201, null]], "vit_tiny": [[202, null]], "wide_resnet_101": [[156, null]], "wide_resnet_50": [[157, null]], "xception": [[204, null]], "zfnet": [[206, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/CIFAR10", "datasets/image/CIFAR100", "datasets/image/FashionMNIST", "datasets/image/MNIST", "datasets/image/index", "einops/einops", "einops/functions/einsum", "einops/functions/index", "einops/functions/rearrange", "einops/functions/reduce", "einops/functions/repeat", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/imgclf/alex/AlexNet_", "models/imgclf/alex/alexnet", "models/imgclf/coatnet/CoAtNet", "models/imgclf/coatnet/coatnet_0", "models/imgclf/coatnet/coatnet_1", "models/imgclf/coatnet/coatnet_2", "models/imgclf/coatnet/coatnet_3", "models/imgclf/coatnet/coatnet_4", "models/imgclf/coatnet/coatnet_5", "models/imgclf/coatnet/coatnet_6", "models/imgclf/coatnet/coatnet_7", "models/imgclf/convnext/ConvNeXt", "models/imgclf/convnext/ConvNeXt_V2", "models/imgclf/convnext/convnext_base", "models/imgclf/convnext/convnext_large", "models/imgclf/convnext/convnext_small", "models/imgclf/convnext/convnext_tiny", "models/imgclf/convnext/convnext_v2_atto", "models/imgclf/convnext/convnext_v2_base", "models/imgclf/convnext/convnext_v2_femto", "models/imgclf/convnext/convnext_v2_huge", "models/imgclf/convnext/convnext_v2_large", "models/imgclf/convnext/convnext_v2_nano", "models/imgclf/convnext/convnext_v2_pico", "models/imgclf/convnext/convnext_v2_tiny", "models/imgclf/convnext/convnext_xlarge", "models/imgclf/crossvit/CrossViT", "models/imgclf/crossvit/crossvit_15", "models/imgclf/crossvit/crossvit_15_dagger", "models/imgclf/crossvit/crossvit_18", "models/imgclf/crossvit/crossvit_18_dagger", "models/imgclf/crossvit/crossvit_9", "models/imgclf/crossvit/crossvit_9_dagger", "models/imgclf/crossvit/crossvit_base", "models/imgclf/crossvit/crossvit_small", "models/imgclf/crossvit/crossvit_tiny", "models/imgclf/cvt/CvT", "models/imgclf/cvt/cvt_13", "models/imgclf/cvt/cvt_21", "models/imgclf/cvt/cvt_w24", "models/imgclf/dense/DenseNet", "models/imgclf/dense/densenet_121", "models/imgclf/dense/densenet_169", "models/imgclf/dense/densenet_201", "models/imgclf/dense/densenet_264", "models/imgclf/efficient/EfficientNet", "models/imgclf/efficient/EfficientNet_V2", "models/imgclf/efficient/efficientnet_b0", "models/imgclf/efficient/efficientnet_b1", "models/imgclf/efficient/efficientnet_b2", "models/imgclf/efficient/efficientnet_b3", "models/imgclf/efficient/efficientnet_b4", "models/imgclf/efficient/efficientnet_b5", "models/imgclf/efficient/efficientnet_b6", "models/imgclf/efficient/efficientnet_b7", "models/imgclf/efficient/efficientnet_v2_l", "models/imgclf/efficient/efficientnet_v2_m", "models/imgclf/efficient/efficientnet_v2_s", "models/imgclf/efficient/efficientnet_v2_xl", "models/imgclf/inception/Inception", "models/imgclf/inception/inception_v1", "models/imgclf/inception/inception_v3", "models/imgclf/inception/inception_v4", "models/imgclf/inception_next/InceptionNeXt", "models/imgclf/inception_next/inception_next_atto", "models/imgclf/inception_next/inception_next_base", "models/imgclf/inception_next/inception_next_small", "models/imgclf/inception_next/inception_next_tiny", "models/imgclf/inception_res/InceptionResNet", "models/imgclf/inception_res/inception_resnet_v1", "models/imgclf/inception_res/inception_resnet_v2", "models/imgclf/index", "models/imgclf/lenet/LeNet", "models/imgclf/lenet/lenet_1", "models/imgclf/lenet/lenet_4", "models/imgclf/lenet/lenet_5", "models/imgclf/maxvit/MaxViT", "models/imgclf/maxvit/maxvit_base", "models/imgclf/maxvit/maxvit_large", "models/imgclf/maxvit/maxvit_small", "models/imgclf/maxvit/maxvit_tiny", "models/imgclf/maxvit/maxvit_xlarge", "models/imgclf/mobile/MobileNet_", "models/imgclf/mobile/MobileNet_V2_", "models/imgclf/mobile/MobileNet_V3", "models/imgclf/mobile/MobileNet_V4", "models/imgclf/mobile/mobilenet", "models/imgclf/mobile/mobilenet_v2", "models/imgclf/mobile/mobilenet_v3_large", "models/imgclf/mobile/mobilenet_v3_small", "models/imgclf/mobile/mobilenet_v4_conv_large", "models/imgclf/mobile/mobilenet_v4_conv_medium", "models/imgclf/mobile/mobilenet_v4_conv_small", "models/imgclf/mobile/mobilenet_v4_hybrid_large", "models/imgclf/mobile/mobilenet_v4_hybrid_medium", "models/imgclf/pvt/PVT", "models/imgclf/pvt/PVT_V2", "models/imgclf/pvt/pvt_huge", "models/imgclf/pvt/pvt_large", "models/imgclf/pvt/pvt_medium", "models/imgclf/pvt/pvt_small", "models/imgclf/pvt/pvt_tiny", "models/imgclf/pvt/pvt_v2_b0", "models/imgclf/pvt/pvt_v2_b1", "models/imgclf/pvt/pvt_v2_b2", "models/imgclf/pvt/pvt_v2_b2_li", "models/imgclf/pvt/pvt_v2_b3", "models/imgclf/pvt/pvt_v2_b4", "models/imgclf/pvt/pvt_v2_b5", "models/imgclf/resnest/ResNeSt", "models/imgclf/resnest/resnest_101", "models/imgclf/resnest/resnest_14", "models/imgclf/resnest/resnest_200", "models/imgclf/resnest/resnest_26", "models/imgclf/resnest/resnest_269", "models/imgclf/resnest/resnest_50", "models/imgclf/resnest/resnest_50_1s4x24d", "models/imgclf/resnest/resnest_50_4s2x40d", "models/imgclf/resnet/ResNet", "models/imgclf/resnet/resnet_1001", "models/imgclf/resnet/resnet_101", "models/imgclf/resnet/resnet_152", "models/imgclf/resnet/resnet_18", "models/imgclf/resnet/resnet_200", "models/imgclf/resnet/resnet_269", "models/imgclf/resnet/resnet_34", "models/imgclf/resnet/resnet_50", "models/imgclf/resnet/wide_resnet_101", "models/imgclf/resnet/wide_resnet_50", "models/imgclf/resnext/ResNeXt", "models/imgclf/resnext/resnext_101_32x16d", "models/imgclf/resnext/resnext_101_32x32d", "models/imgclf/resnext/resnext_101_32x4d", "models/imgclf/resnext/resnext_101_32x8d", "models/imgclf/resnext/resnext_101_64x4d", "models/imgclf/resnext/resnext_50_32x4d", "models/imgclf/senet/SENet", "models/imgclf/senet/se_resnet_101", "models/imgclf/senet/se_resnet_152", "models/imgclf/senet/se_resnet_18", "models/imgclf/senet/se_resnet_34", "models/imgclf/senet/se_resnet_50", "models/imgclf/senet/se_resnext_101_32x4d", "models/imgclf/senet/se_resnext_101_32x8d", "models/imgclf/senet/se_resnext_101_64x4d", "models/imgclf/senet/se_resnext_50_32x4d", "models/imgclf/sknet/SKNet", "models/imgclf/sknet/sk_resnet_18", "models/imgclf/sknet/sk_resnet_34", "models/imgclf/sknet/sk_resnet_50", "models/imgclf/sknet/sk_resnext_50_32x4d", "models/imgclf/swin/SwinTransformer", "models/imgclf/swin/SwinTransformer_V2", "models/imgclf/swin/swin_base", "models/imgclf/swin/swin_large", "models/imgclf/swin/swin_small", "models/imgclf/swin/swin_tiny", "models/imgclf/swin/swin_v2_base", "models/imgclf/swin/swin_v2_giant", "models/imgclf/swin/swin_v2_huge", "models/imgclf/swin/swin_v2_large", "models/imgclf/swin/swin_v2_small", "models/imgclf/swin/swin_v2_tiny", "models/imgclf/vgg/VGGNet", "models/imgclf/vgg/vggnet_11", "models/imgclf/vgg/vggnet_13", "models/imgclf/vgg/vggnet_16", "models/imgclf/vgg/vggnet_19", "models/imgclf/vit/ViT", "models/imgclf/vit/vit_base", "models/imgclf/vit/vit_huge", "models/imgclf/vit/vit_large", "models/imgclf/vit/vit_small", "models/imgclf/vit/vit_tiny", "models/imgclf/xception/Xception_", "models/imgclf/xception/xception", "models/imgclf/zfnet/ZFNet_", "models/imgclf/zfnet/zfnet", "models/models", "models/objdet/faster_rcnn/FasterRCNN", "models/objdet/faster_rcnn/faster_rcnn_resnet_101_fpn", "models/objdet/faster_rcnn/faster_rcnn_resnet_50_fpn", "models/objdet/index", "models/objdet/rcnn/FastRCNN", "models/objdet/rcnn/RCNN", "models/objdet/utilities/FPN", "models/objdet/utilities/MultiScaleROIAlign", "models/objdet/utilities/ROIAlign", "models/objdet/utilities/SelectiveSearch", "models/objdet/utilities/apply_deltas", "models/objdet/utilities/bbox_to_delta", "models/objdet/utilities/clip_boxes", "models/objdet/utilities/index", "models/objdet/utilities/iou", "models/objdet/utilities/nms", "models/seq2seq/index", "models/seq2seq/transformer/Transformer", "models/seq2seq/transformer/transformer_base", "models/seq2seq/transformer/transformer_big", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/attention/index", "nn/functions/attention/scaled_dot_product_attention", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/conv_transpose1d", "nn/functions/conv/conv_transpose2d", "nn/functions/conv/conv_transpose3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/drop_block", "nn/functions/drop/drop_path", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/global_response_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/norm/normalize", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/adaptive_max_pool1d", "nn/functions/pool/adaptive_max_pool2d", "nn/functions/pool/adaptive_max_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/spatial/affine_grid", "nn/functions/spatial/grid_sample", "nn/functions/spatial/index", "nn/functions/util/embedding", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/fused/ConvBNReLU1d", "nn/fused/ConvBNReLU2d", "nn/fused/ConvBNReLU3d", "nn/fused/DepthSeparableConv1d", "nn/fused/DepthSeparableConv2d", "nn/fused/DepthSeparableConv3d", "nn/fused/SEModule", "nn/fused/SelectiveKernel", "nn/fused/index", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/HardSigmoid", "nn/modules/activation/HardSwish", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/ReLU6", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Swish", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/attention/MultiHeadAttention", "nn/modules/attention/ScaledDotProductAttention", "nn/modules/attention/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/ConvTranspose1d", "nn/modules/conv/ConvTranspose2d", "nn/modules/conv/ConvTranspose3d", "nn/modules/conv/Unfold", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/DropBlock", "nn/modules/drop/DropPath", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/einops/Rearrange", "nn/modules/einops/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/GlobalResponseNorm", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AdaptiveMaxPool1d", "nn/modules/pool/AdaptiveMaxPool2d", "nn/modules/pool/AdaptiveMaxPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/modules/sparse/Embedding", "nn/modules/sparse/index", "nn/modules/transformer/Transformer", "nn/modules/transformer/TransformerDecoder", "nn/modules/transformer/TransformerDecoderLayer", "nn/modules/transformer/TransformerEncoder", "nn/modules/transformer/TransformerEncoderLayer", "nn/modules/transformer/index", "nn/modules/vision/Upsample", "nn/modules/vision/index", "nn/nn", "optim/Optimizer", "optim/lr_scheduler", "optim/lr_scheduler/CosineAnnealingLR", "optim/lr_scheduler/CyclicLR", "optim/lr_scheduler/ExponentialLR", "optim/lr_scheduler/LRScheduler", "optim/lr_scheduler/LambdaLR", "optim/lr_scheduler/MultiStepLR", "optim/lr_scheduler/ReduceLROnPlateau", "optim/lr_scheduler/StepLR", "optim/lr_scheduler/index", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/Numeric", "others/count_flops", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "random/functions/bernoulli", "random/functions/index", "random/functions/permutation", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/multiply", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/bfunc/tensordot", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/full", "tensor/operations/gfunc/full_like", "tensor/operations/gfunc/linspace", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/ceil", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/floor", "tensor/operations/ufunc/log", "tensor/operations/ufunc/log2", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/round", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/swapaxes", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/argmax", "tensor/utilities/argmin", "tensor/utilities/argsort", "tensor/utilities/broadcast_to", "tensor/utilities/chunk", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/histogram", "tensor/utilities/histogram2d", "tensor/utilities/histogramdd", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/masked_fill", "tensor/utilities/meshgrid", "tensor/utilities/nonzero", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/roll", "tensor/utilities/sort", "tensor/utilities/split", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/topk", "tensor/utilities/tril", "tensor/utilities/triu", "tensor/utilities/unbind", "tensor/utilities/unique", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "tensor/utilities/where", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/CIFAR10.rst", "datasets/image/CIFAR100.rst", "datasets/image/FashionMNIST.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "einops/einops.rst", "einops/functions/einsum.rst", "einops/functions/index.rst", "einops/functions/rearrange.rst", "einops/functions/reduce.rst", "einops/functions/repeat.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/imgclf/alex/AlexNet_.rst", "models/imgclf/alex/alexnet.rst", "models/imgclf/coatnet/CoAtNet.rst", "models/imgclf/coatnet/coatnet_0.rst", "models/imgclf/coatnet/coatnet_1.rst", "models/imgclf/coatnet/coatnet_2.rst", "models/imgclf/coatnet/coatnet_3.rst", "models/imgclf/coatnet/coatnet_4.rst", "models/imgclf/coatnet/coatnet_5.rst", "models/imgclf/coatnet/coatnet_6.rst", "models/imgclf/coatnet/coatnet_7.rst", "models/imgclf/convnext/ConvNeXt.rst", "models/imgclf/convnext/ConvNeXt_V2.rst", "models/imgclf/convnext/convnext_base.rst", "models/imgclf/convnext/convnext_large.rst", "models/imgclf/convnext/convnext_small.rst", "models/imgclf/convnext/convnext_tiny.rst", "models/imgclf/convnext/convnext_v2_atto.rst", "models/imgclf/convnext/convnext_v2_base.rst", "models/imgclf/convnext/convnext_v2_femto.rst", "models/imgclf/convnext/convnext_v2_huge.rst", "models/imgclf/convnext/convnext_v2_large.rst", "models/imgclf/convnext/convnext_v2_nano.rst", "models/imgclf/convnext/convnext_v2_pico.rst", "models/imgclf/convnext/convnext_v2_tiny.rst", "models/imgclf/convnext/convnext_xlarge.rst", "models/imgclf/crossvit/CrossViT.rst", "models/imgclf/crossvit/crossvit_15.rst", "models/imgclf/crossvit/crossvit_15_dagger.rst", "models/imgclf/crossvit/crossvit_18.rst", "models/imgclf/crossvit/crossvit_18_dagger.rst", "models/imgclf/crossvit/crossvit_9.rst", "models/imgclf/crossvit/crossvit_9_dagger.rst", "models/imgclf/crossvit/crossvit_base.rst", "models/imgclf/crossvit/crossvit_small.rst", "models/imgclf/crossvit/crossvit_tiny.rst", "models/imgclf/cvt/CvT.rst", "models/imgclf/cvt/cvt_13.rst", "models/imgclf/cvt/cvt_21.rst", "models/imgclf/cvt/cvt_w24.rst", "models/imgclf/dense/DenseNet.rst", "models/imgclf/dense/densenet_121.rst", "models/imgclf/dense/densenet_169.rst", "models/imgclf/dense/densenet_201.rst", "models/imgclf/dense/densenet_264.rst", "models/imgclf/efficient/EfficientNet.rst", "models/imgclf/efficient/EfficientNet_V2.rst", "models/imgclf/efficient/efficientnet_b0.rst", "models/imgclf/efficient/efficientnet_b1.rst", "models/imgclf/efficient/efficientnet_b2.rst", "models/imgclf/efficient/efficientnet_b3.rst", "models/imgclf/efficient/efficientnet_b4.rst", "models/imgclf/efficient/efficientnet_b5.rst", "models/imgclf/efficient/efficientnet_b6.rst", "models/imgclf/efficient/efficientnet_b7.rst", "models/imgclf/efficient/efficientnet_v2_l.rst", "models/imgclf/efficient/efficientnet_v2_m.rst", "models/imgclf/efficient/efficientnet_v2_s.rst", "models/imgclf/efficient/efficientnet_v2_xl.rst", "models/imgclf/inception/Inception.rst", "models/imgclf/inception/inception_v1.rst", "models/imgclf/inception/inception_v3.rst", "models/imgclf/inception/inception_v4.rst", "models/imgclf/inception_next/InceptionNeXt.rst", "models/imgclf/inception_next/inception_next_atto.rst", "models/imgclf/inception_next/inception_next_base.rst", "models/imgclf/inception_next/inception_next_small.rst", "models/imgclf/inception_next/inception_next_tiny.rst", "models/imgclf/inception_res/InceptionResNet.rst", "models/imgclf/inception_res/inception_resnet_v1.rst", "models/imgclf/inception_res/inception_resnet_v2.rst", "models/imgclf/index.rst", "models/imgclf/lenet/LeNet.rst", "models/imgclf/lenet/lenet_1.rst", "models/imgclf/lenet/lenet_4.rst", "models/imgclf/lenet/lenet_5.rst", "models/imgclf/maxvit/MaxViT.rst", "models/imgclf/maxvit/maxvit_base.rst", "models/imgclf/maxvit/maxvit_large.rst", "models/imgclf/maxvit/maxvit_small.rst", "models/imgclf/maxvit/maxvit_tiny.rst", "models/imgclf/maxvit/maxvit_xlarge.rst", "models/imgclf/mobile/MobileNet_.rst", "models/imgclf/mobile/MobileNet_V2_.rst", "models/imgclf/mobile/MobileNet_V3.rst", "models/imgclf/mobile/MobileNet_V4.rst", "models/imgclf/mobile/mobilenet.rst", "models/imgclf/mobile/mobilenet_v2.rst", "models/imgclf/mobile/mobilenet_v3_large.rst", "models/imgclf/mobile/mobilenet_v3_small.rst", "models/imgclf/mobile/mobilenet_v4_conv_large.rst", "models/imgclf/mobile/mobilenet_v4_conv_medium.rst", "models/imgclf/mobile/mobilenet_v4_conv_small.rst", "models/imgclf/mobile/mobilenet_v4_hybrid_large.rst", "models/imgclf/mobile/mobilenet_v4_hybrid_medium.rst", "models/imgclf/pvt/PVT.rst", "models/imgclf/pvt/PVT_V2.rst", "models/imgclf/pvt/pvt_huge.rst", "models/imgclf/pvt/pvt_large.rst", "models/imgclf/pvt/pvt_medium.rst", "models/imgclf/pvt/pvt_small.rst", "models/imgclf/pvt/pvt_tiny.rst", "models/imgclf/pvt/pvt_v2_b0.rst", "models/imgclf/pvt/pvt_v2_b1.rst", "models/imgclf/pvt/pvt_v2_b2.rst", "models/imgclf/pvt/pvt_v2_b2_li.rst", "models/imgclf/pvt/pvt_v2_b3.rst", "models/imgclf/pvt/pvt_v2_b4.rst", "models/imgclf/pvt/pvt_v2_b5.rst", "models/imgclf/resnest/ResNeSt.rst", "models/imgclf/resnest/resnest_101.rst", "models/imgclf/resnest/resnest_14.rst", "models/imgclf/resnest/resnest_200.rst", "models/imgclf/resnest/resnest_26.rst", "models/imgclf/resnest/resnest_269.rst", "models/imgclf/resnest/resnest_50.rst", "models/imgclf/resnest/resnest_50_1s4x24d.rst", "models/imgclf/resnest/resnest_50_4s2x40d.rst", "models/imgclf/resnet/ResNet.rst", "models/imgclf/resnet/resnet_1001.rst", "models/imgclf/resnet/resnet_101.rst", "models/imgclf/resnet/resnet_152.rst", "models/imgclf/resnet/resnet_18.rst", "models/imgclf/resnet/resnet_200.rst", "models/imgclf/resnet/resnet_269.rst", "models/imgclf/resnet/resnet_34.rst", "models/imgclf/resnet/resnet_50.rst", "models/imgclf/resnet/wide_resnet_101.rst", "models/imgclf/resnet/wide_resnet_50.rst", "models/imgclf/resnext/ResNeXt.rst", "models/imgclf/resnext/resnext_101_32x16d.rst", "models/imgclf/resnext/resnext_101_32x32d.rst", "models/imgclf/resnext/resnext_101_32x4d.rst", "models/imgclf/resnext/resnext_101_32x8d.rst", "models/imgclf/resnext/resnext_101_64x4d.rst", "models/imgclf/resnext/resnext_50_32x4d.rst", "models/imgclf/senet/SENet.rst", "models/imgclf/senet/se_resnet_101.rst", "models/imgclf/senet/se_resnet_152.rst", "models/imgclf/senet/se_resnet_18.rst", "models/imgclf/senet/se_resnet_34.rst", "models/imgclf/senet/se_resnet_50.rst", "models/imgclf/senet/se_resnext_101_32x4d.rst", "models/imgclf/senet/se_resnext_101_32x8d.rst", "models/imgclf/senet/se_resnext_101_64x4d.rst", "models/imgclf/senet/se_resnext_50_32x4d.rst", "models/imgclf/sknet/SKNet.rst", "models/imgclf/sknet/sk_resnet_18.rst", "models/imgclf/sknet/sk_resnet_34.rst", "models/imgclf/sknet/sk_resnet_50.rst", "models/imgclf/sknet/sk_resnext_50_32x4d.rst", "models/imgclf/swin/SwinTransformer.rst", "models/imgclf/swin/SwinTransformer_V2.rst", "models/imgclf/swin/swin_base.rst", "models/imgclf/swin/swin_large.rst", "models/imgclf/swin/swin_small.rst", "models/imgclf/swin/swin_tiny.rst", "models/imgclf/swin/swin_v2_base.rst", "models/imgclf/swin/swin_v2_giant.rst", "models/imgclf/swin/swin_v2_huge.rst", "models/imgclf/swin/swin_v2_large.rst", "models/imgclf/swin/swin_v2_small.rst", "models/imgclf/swin/swin_v2_tiny.rst", "models/imgclf/vgg/VGGNet.rst", "models/imgclf/vgg/vggnet_11.rst", "models/imgclf/vgg/vggnet_13.rst", "models/imgclf/vgg/vggnet_16.rst", "models/imgclf/vgg/vggnet_19.rst", "models/imgclf/vit/ViT.rst", "models/imgclf/vit/vit_base.rst", "models/imgclf/vit/vit_huge.rst", "models/imgclf/vit/vit_large.rst", "models/imgclf/vit/vit_small.rst", "models/imgclf/vit/vit_tiny.rst", "models/imgclf/xception/Xception_.rst", "models/imgclf/xception/xception.rst", "models/imgclf/zfnet/ZFNet_.rst", "models/imgclf/zfnet/zfnet.rst", "models/models.rst", "models/objdet/faster_rcnn/FasterRCNN.rst", "models/objdet/faster_rcnn/faster_rcnn_resnet_101_fpn.rst", "models/objdet/faster_rcnn/faster_rcnn_resnet_50_fpn.rst", "models/objdet/index.rst", "models/objdet/rcnn/FastRCNN.rst", "models/objdet/rcnn/RCNN.rst", "models/objdet/utilities/FPN.rst", "models/objdet/utilities/MultiScaleROIAlign.rst", "models/objdet/utilities/ROIAlign.rst", "models/objdet/utilities/SelectiveSearch.rst", "models/objdet/utilities/apply_deltas.rst", "models/objdet/utilities/bbox_to_delta.rst", "models/objdet/utilities/clip_boxes.rst", "models/objdet/utilities/index.rst", "models/objdet/utilities/iou.rst", "models/objdet/utilities/nms.rst", "models/seq2seq/index.rst", "models/seq2seq/transformer/Transformer.rst", "models/seq2seq/transformer/transformer_base.rst", "models/seq2seq/transformer/transformer_big.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/attention/index.rst", "nn/functions/attention/scaled_dot_product_attention.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/conv_transpose1d.rst", "nn/functions/conv/conv_transpose2d.rst", "nn/functions/conv/conv_transpose3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/drop_block.rst", "nn/functions/drop/drop_path.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/global_response_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/norm/normalize.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/adaptive_max_pool1d.rst", "nn/functions/pool/adaptive_max_pool2d.rst", "nn/functions/pool/adaptive_max_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/spatial/affine_grid.rst", "nn/functions/spatial/grid_sample.rst", "nn/functions/spatial/index.rst", "nn/functions/util/embedding.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/fused/ConvBNReLU1d.rst", "nn/fused/ConvBNReLU2d.rst", "nn/fused/ConvBNReLU3d.rst", "nn/fused/DepthSeparableConv1d.rst", "nn/fused/DepthSeparableConv2d.rst", "nn/fused/DepthSeparableConv3d.rst", "nn/fused/SEModule.rst", "nn/fused/SelectiveKernel.rst", "nn/fused/index.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/HardSigmoid.rst", "nn/modules/activation/HardSwish.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/ReLU6.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Swish.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/attention/MultiHeadAttention.rst", "nn/modules/attention/ScaledDotProductAttention.rst", "nn/modules/attention/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/ConvTranspose1d.rst", "nn/modules/conv/ConvTranspose2d.rst", "nn/modules/conv/ConvTranspose3d.rst", "nn/modules/conv/Unfold.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/DropBlock.rst", "nn/modules/drop/DropPath.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/einops/Rearrange.rst", "nn/modules/einops/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/GlobalResponseNorm.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AdaptiveMaxPool1d.rst", "nn/modules/pool/AdaptiveMaxPool2d.rst", "nn/modules/pool/AdaptiveMaxPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/modules/sparse/Embedding.rst", "nn/modules/sparse/index.rst", "nn/modules/transformer/Transformer.rst", "nn/modules/transformer/TransformerDecoder.rst", "nn/modules/transformer/TransformerDecoderLayer.rst", "nn/modules/transformer/TransformerEncoder.rst", "nn/modules/transformer/TransformerEncoderLayer.rst", "nn/modules/transformer/index.rst", "nn/modules/vision/Upsample.rst", "nn/modules/vision/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/lr_scheduler.rst", "optim/lr_scheduler/CosineAnnealingLR.rst", "optim/lr_scheduler/CyclicLR.rst", "optim/lr_scheduler/ExponentialLR.rst", "optim/lr_scheduler/LRScheduler.rst", "optim/lr_scheduler/LambdaLR.rst", "optim/lr_scheduler/MultiStepLR.rst", "optim/lr_scheduler/ReduceLROnPlateau.rst", "optim/lr_scheduler/StepLR.rst", "optim/lr_scheduler/index.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/Numeric.rst", "others/count_flops.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "random/functions/bernoulli.rst", "random/functions/index.rst", "random/functions/permutation.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/multiply.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/bfunc/tensordot.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/full.rst", "tensor/operations/gfunc/full_like.rst", "tensor/operations/gfunc/linspace.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/ceil.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/floor.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/log2.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/round.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/swapaxes.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/argmax.rst", "tensor/utilities/argmin.rst", "tensor/utilities/argsort.rst", "tensor/utilities/broadcast_to.rst", "tensor/utilities/chunk.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/histogram.rst", "tensor/utilities/histogram2d.rst", "tensor/utilities/histogramdd.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/masked_fill.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/nonzero.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/roll.rst", "tensor/utilities/sort.rst", "tensor/utilities/split.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/topk.rst", "tensor/utilities/tril.rst", "tensor/utilities/triu.rst", "tensor/utilities/unbind.rst", "tensor/utilities/unique.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "tensor/utilities/where.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"abs() (in module lucid)": [[460, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[408, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[409, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[410, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[412, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[411, "lucid.optim.AdamW", false]], "adaptive_avg_pool1d() (in module lucid.nn.functional)": [[280, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[281, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[282, "lucid.nn.functional.adaptive_avg_pool3d", false]], "adaptive_max_pool1d() (in module lucid.nn.functional)": [[283, "lucid.nn.functional.adaptive_max_pool1d", false]], "adaptive_max_pool2d() (in module lucid.nn.functional)": [[284, "lucid.nn.functional.adaptive_max_pool2d", false]], "adaptive_max_pool3d() (in module lucid.nn.functional)": [[285, "lucid.nn.functional.adaptive_max_pool3d", false]], "adaptiveavgpool1d (class in lucid.nn)": [[371, "lucid.nn.AdaptiveAvgPool1d", false]], "adaptiveavgpool2d (class in lucid.nn)": [[372, "lucid.nn.AdaptiveAvgPool2d", false]], "adaptiveavgpool3d (class in lucid.nn)": [[373, "lucid.nn.AdaptiveAvgPool3d", false]], "adaptivemaxpool1d (class in lucid.nn)": [[374, "lucid.nn.AdaptiveMaxPool1d", false]], "adaptivemaxpool2d (class in lucid.nn)": [[375, "lucid.nn.AdaptiveMaxPool2d", false]], "adaptivemaxpool3d (class in lucid.nn)": [[376, "lucid.nn.AdaptiveMaxPool3d", false]], "add() (in module lucid)": [[435, "lucid.add", false]], "affine_grid() (in module lucid.nn.functional)": [[293, "lucid.nn.functional.affine_grid", false]], "alexnet (class in lucid.models)": [[29, "lucid.models.AlexNet", false]], "alexnet() (in module lucid.models)": [[30, "lucid.models.alexnet", false]], "alpha_dropout() (in module lucid.nn.functional)": [[256, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[341, "lucid.nn.AlphaDropout", false]], "apply_deltas() (in module lucid.models.objdet.util)": [[218, "lucid.models.objdet.util.apply_deltas", false]], "arange() (in module lucid)": [[447, "lucid.arange", false]], "arccos() (in module lucid)": [[461, "lucid.arccos", false]], "arcsin() (in module lucid)": [[462, "lucid.arcsin", false]], "arctan() (in module lucid)": [[463, "lucid.arctan", false]], "argmax() (in module lucid)": [[491, "lucid.argmax", false]], "argmin() (in module lucid)": [[492, "lucid.argmin", false]], "argsort() (in module lucid)": [[493, "lucid.argsort", false]], "asgd (class in lucid.optim)": [[407, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[286, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[287, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[288, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[377, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[378, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[379, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[274, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[362, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[363, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[364, "lucid.nn.BatchNorm3d", false]], "bbox_to_delta() (in module lucid.models.objdet.util)": [[219, "lucid.models.objdet.util.bbox_to_delta", false]], "bceloss (class in lucid.nn)": [[356, "lucid.nn.BCELoss", false]], "bernoulli() (in module lucid.random)": [[425, "lucid.random.bernoulli", false]], "bilinear (class in lucid.nn)": [[352, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[265, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[268, "lucid.nn.functional.binary_cross_entropy", false]], "broadcast_to() (in module lucid)": [[494, "lucid.broadcast_to", false]], "buffer (class in lucid.nn)": [[228, "lucid.nn.Buffer", false]], "ceil() (in module lucid)": [[464, "lucid.ceil", false]], "centercrop (class in lucid.transforms)": [[526, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[18, "lucid.linalg.cholesky", false]], "chunk() (in module lucid)": [[495, "lucid.chunk", false]], "cifar10 (class in lucid.datasets)": [[5, "lucid.datasets.CIFAR10", false]], "cifar100 (class in lucid.datasets)": [[6, "lucid.datasets.CIFAR100", false]], "clip() (in module lucid)": [[465, "lucid.clip", false]], "clip_boxes() (in module lucid.models.objdet.util)": [[220, "lucid.models.objdet.util.clip_boxes", false]], "coatnet (class in lucid.models)": [[31, "lucid.models.CoAtNet", false]], "coatnet_0() (in module lucid.models)": [[32, "lucid.models.coatnet_0", false]], "coatnet_1() (in module lucid.models)": [[33, "lucid.models.coatnet_1", false]], "coatnet_2() (in module lucid.models)": [[34, "lucid.models.coatnet_2", false]], "coatnet_3() (in module lucid.models)": [[35, "lucid.models.coatnet_3", false]], "coatnet_4() (in module lucid.models)": [[36, "lucid.models.coatnet_4", false]], "coatnet_5() (in module lucid.models)": [[37, "lucid.models.coatnet_5", false]], "coatnet_6() (in module lucid.models)": [[38, "lucid.models.coatnet_6", false]], "coatnet_7() (in module lucid.models)": [[39, "lucid.models.coatnet_7", false]], "compose (class in lucid.transforms)": [[524, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[496, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[309, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[333, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[248, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[334, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[249, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[335, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[250, "lucid.nn.functional.conv3d", false]], "conv_transpose1d() (in module lucid.nn.functional)": [[251, "lucid.nn.functional.conv_transpose1d", false]], "conv_transpose2d() (in module lucid.nn.functional)": [[252, "lucid.nn.functional.conv_transpose2d", false]], "conv_transpose3d() (in module lucid.nn.functional)": [[253, "lucid.nn.functional.conv_transpose3d", false]], "convbnrelu1d (class in lucid.nn)": [[300, "lucid.nn.ConvBNReLU1d", false]], "convbnrelu2d (class in lucid.nn)": [[301, "lucid.nn.ConvBNReLU2d", false]], "convbnrelu3d (class in lucid.nn)": [[302, "lucid.nn.ConvBNReLU3d", false]], "convnext (class in lucid.models)": [[40, "lucid.models.ConvNeXt", false]], "convnext_base() (in module lucid.models)": [[42, "lucid.models.convnext_base", false]], "convnext_large() (in module lucid.models)": [[43, "lucid.models.convnext_large", false]], "convnext_small() (in module lucid.models)": [[44, "lucid.models.convnext_small", false]], "convnext_tiny() (in module lucid.models)": [[45, "lucid.models.convnext_tiny", false]], "convnext_v2 (class in lucid.models)": [[41, "lucid.models.ConvNeXt_V2", false]], "convnext_v2_atto() (in module lucid.models)": [[46, "lucid.models.convnext_v2_atto", false]], "convnext_v2_base() (in module lucid.models)": [[47, "lucid.models.convnext_v2_base", false]], "convnext_v2_femto() (in module lucid.models)": [[48, "lucid.models.convnext_v2_femto", false]], "convnext_v2_huge() (in module lucid.models)": [[49, "lucid.models.convnext_v2_huge", false]], "convnext_v2_large() (in module lucid.models)": [[50, "lucid.models.convnext_v2_large", false]], "convnext_v2_nano() (in module lucid.models)": [[51, "lucid.models.convnext_v2_nano", false]], "convnext_v2_pico() (in module lucid.models)": [[52, "lucid.models.convnext_v2_pico", false]], "convnext_v2_tiny() (in module lucid.models)": [[53, "lucid.models.convnext_v2_tiny", false]], "convnext_xlarge() (in module lucid.models)": [[54, "lucid.models.convnext_xlarge", false]], "convtranspose1d (class in lucid.nn)": [[336, "lucid.nn.ConvTranspose1d", false]], "convtranspose2d (class in lucid.nn)": [[337, "lucid.nn.ConvTranspose2d", false]], "convtranspose3d (class in lucid.nn)": [[338, "lucid.nn.ConvTranspose3d", false]], "cos() (in module lucid)": [[466, "lucid.cos", false]], "cosh() (in module lucid)": [[467, "lucid.cosh", false]], "cosineannealinglr (class in lucid.optim.lr_scheduler)": [[397, "lucid.optim.lr_scheduler.CosineAnnealingLR", false]], "count_flops() (in module lucid)": [[420, "lucid.count_flops", false]], "cross_entropy() (in module lucid.nn.functional)": [[269, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[357, "lucid.nn.CrossEntropyLoss", false]], "crossvit (class in lucid.models)": [[55, "lucid.models.CrossViT", false]], "crossvit_15() (in module lucid.models)": [[56, "lucid.models.crossvit_15", false]], "crossvit_15_dagger() (in module lucid.models)": [[57, "lucid.models.crossvit_15_dagger", false]], "crossvit_18() (in module lucid.models)": [[58, "lucid.models.crossvit_18", false]], "crossvit_18_dagger() (in module lucid.models)": [[59, "lucid.models.crossvit_18_dagger", false]], "crossvit_9() (in module lucid.models)": [[60, "lucid.models.crossvit_9", false]], "crossvit_9_dagger() (in module lucid.models)": [[61, "lucid.models.crossvit_9_dagger", false]], "crossvit_base() (in module lucid.models)": [[62, "lucid.models.crossvit_base", false]], "crossvit_small() (in module lucid.models)": [[63, "lucid.models.crossvit_small", false]], "crossvit_tiny() (in module lucid.models)": [[64, "lucid.models.crossvit_tiny", false]], "cube() (in module lucid)": [[468, "lucid.cube", false]], "cvt (class in lucid.models)": [[65, "lucid.models.CvT", false]], "cvt_13() (in module lucid.models)": [[66, "lucid.models.cvt_13", false]], "cvt_21() (in module lucid.models)": [[67, "lucid.models.cvt_21", false]], "cvt_w24() (in module lucid.models)": [[68, "lucid.models.cvt_w24", false]], "cycliclr (class in lucid.optim.lr_scheduler)": [[398, "lucid.optim.lr_scheduler.CyclicLR", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "densenet (class in lucid.models)": [[69, "lucid.models.DenseNet", false]], "densenet_121() (in module lucid.models)": [[70, "lucid.models.densenet_121", false]], "densenet_169() (in module lucid.models)": [[71, "lucid.models.densenet_169", false]], "densenet_201() (in module lucid.models)": [[72, "lucid.models.densenet_201", false]], "densenet_264() (in module lucid.models)": [[73, "lucid.models.densenet_264", false]], "depthseparableconv1d (class in lucid.nn)": [[303, "lucid.nn.DepthSeparableConv1d", false]], "depthseparableconv2d (class in lucid.nn)": [[304, "lucid.nn.DepthSeparableConv2d", false]], "depthseparableconv3d (class in lucid.nn)": [[305, "lucid.nn.DepthSeparableConv3d", false]], "det() (in module lucid.linalg)": [[19, "lucid.linalg.det", false]], "diag() (in module lucid)": [[448, "lucid.diag", false]], "div() (in module lucid)": [[436, "lucid.div", false]], "dot() (in module lucid)": [[437, "lucid.dot", false]], "drop_block() (in module lucid.nn.functional)": [[257, "lucid.nn.functional.drop_block", false]], "drop_path() (in module lucid.nn.functional)": [[258, "lucid.nn.functional.drop_path", false]], "dropblock (class in lucid.nn)": [[342, "lucid.nn.DropBlock", false]], "dropout (class in lucid.nn)": [[344, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[259, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[345, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[260, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[346, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[261, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[347, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[262, "lucid.nn.functional.dropout3d", false]], "droppath (class in lucid.nn)": [[343, "lucid.nn.DropPath", false]], "efficientnet (class in lucid.models)": [[74, "lucid.models.EfficientNet", false]], "efficientnet_b0() (in module lucid.models)": [[76, "lucid.models.efficientnet_b0", false]], "efficientnet_b1() (in module lucid.models)": [[77, "lucid.models.efficientnet_b1", false]], "efficientnet_b2() (in module lucid.models)": [[78, "lucid.models.efficientnet_b2", false]], "efficientnet_b3() (in module lucid.models)": [[79, "lucid.models.efficientnet_b3", false]], "efficientnet_b4() (in module lucid.models)": [[80, "lucid.models.efficientnet_b4", false]], "efficientnet_b5() (in module lucid.models)": [[81, "lucid.models.efficientnet_b5", false]], "efficientnet_b6() (in module lucid.models)": [[82, "lucid.models.efficientnet_b6", false]], "efficientnet_b7() (in module lucid.models)": [[83, "lucid.models.efficientnet_b7", false]], "efficientnet_v2 (class in lucid.models)": [[75, "lucid.models.EfficientNet_V2", false]], "efficientnet_v2_l() (in module lucid.models)": [[84, "lucid.models.efficientnet_v2_l", false]], "efficientnet_v2_m() (in module lucid.models)": [[85, "lucid.models.efficientnet_v2_m", false]], "efficientnet_v2_s() (in module lucid.models)": [[86, "lucid.models.efficientnet_v2_s", false]], "efficientnet_v2_xl() (in module lucid.models)": [[87, "lucid.models.efficientnet_v2_xl", false]], "eig() (in module lucid.linalg)": [[20, "lucid.linalg.eig", false]], "einsum() (in module lucid.einops)": [[11, "lucid.einops.einsum", false]], "elu (class in lucid.nn)": [[317, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[237, "lucid.nn.functional.elu", false]], "embedding (class in lucid.nn)": [[384, "lucid.nn.Embedding", false]], "embedding() (in module lucid.nn.functional)": [[296, "lucid.nn.functional.embedding", false]], "empty() (in module lucid)": [[449, "lucid.empty", false]], "empty_like() (in module lucid)": [[450, "lucid.empty_like", false]], "exp() (in module lucid)": [[469, "lucid.exp", false]], "exponentiallr (class in lucid.optim.lr_scheduler)": [[399, "lucid.optim.lr_scheduler.ExponentialLR", false]], "eye() (in module lucid)": [[451, "lucid.eye", false]], "fashionmnist (class in lucid.datasets)": [[7, "lucid.datasets.FashionMNIST", false]], "faster_rcnn_resnet_101_fpn() (in module lucid.models)": [[209, "lucid.models.faster_rcnn_resnet_101_fpn", false]], "faster_rcnn_resnet_50_fpn() (in module lucid.models)": [[210, "lucid.models.faster_rcnn_resnet_50_fpn", false]], "fasterrcnn (class in lucid.models)": [[208, "lucid.models.FasterRCNN", false]], "fastrcnn (class in lucid.models)": [[212, "lucid.models.FastRCNN", false]], "flatten() (in module lucid)": [[497, "lucid.flatten", false]], "floor() (in module lucid)": [[470, "lucid.floor", false]], "fpn (class in lucid.models.objdet.util)": [[214, "lucid.models.objdet.util.FPN", false]], "full() (in module lucid)": [[452, "lucid.full", false]], "full_like() (in module lucid)": [[453, "lucid.full_like", false]], "gelu (class in lucid.nn)": [[318, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[238, "lucid.nn.functional.gelu", false]], "global_response_norm() (in module lucid.nn.functional)": [[275, "lucid.nn.functional.global_response_norm", false]], "globalresponsenorm (class in lucid.nn)": [[365, "lucid.nn.GlobalResponseNorm", false]], "grad_enabled() (in module lucid)": [[421, "lucid.grad_enabled", false]], "grid_sample() (in module lucid.nn.functional)": [[294, "lucid.nn.functional.grid_sample", false]], "hardsigmoid (class in lucid.nn)": [[319, "lucid.nn.HardSigmoid", false]], "hardswish (class in lucid.nn)": [[320, "lucid.nn.HardSwish", false]], "histogram() (in module lucid)": [[498, "lucid.histogram", false]], "histogram2d() (in module lucid)": [[499, "lucid.histogram2d", false]], "histogramdd() (in module lucid)": [[500, "lucid.histogramdd", false]], "hstack() (in module lucid)": [[501, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[270, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[358, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[353, "lucid.nn.Identity", false]], "inception (class in lucid.models)": [[88, "lucid.models.Inception", false]], "inception_next_atto() (in module lucid.models)": [[93, "lucid.models.inception_next_atto", false]], "inception_next_base() (in module lucid.models)": [[94, "lucid.models.inception_next_base", false]], "inception_next_small() (in module lucid.models)": [[95, "lucid.models.inception_next_small", false]], "inception_next_tiny() (in module lucid.models)": [[96, "lucid.models.inception_next_tiny", false]], "inception_resnet_v1() (in module lucid.models)": [[98, "lucid.models.inception_resnet_v1", false]], "inception_resnet_v2() (in module lucid.models)": [[99, "lucid.models.inception_resnet_v2", false]], "inception_v1() (in module lucid.models)": [[89, "lucid.models.inception_v1", false]], "inception_v3() (in module lucid.models)": [[90, "lucid.models.inception_v3", false]], "inception_v4() (in module lucid.models)": [[91, "lucid.models.inception_v4", false]], "inceptionnext (class in lucid.models)": [[92, "lucid.models.InceptionNeXt", false]], "inceptionresnet (class in lucid.models)": [[97, "lucid.models.InceptionResNet", false]], "inner() (in module lucid)": [[438, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[277, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[366, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[367, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[368, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[298, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[22, "lucid.linalg.inv", false]], "iou() (in module lucid.models.objdet.util)": [[222, "lucid.models.objdet.util.iou", false]], "kaiming_normal() (in module lucid.nn.init)": [[311, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[312, "lucid.nn.init.kaiming_uniform", false]], "lambdalr (class in lucid.optim.lr_scheduler)": [[401, "lucid.optim.lr_scheduler.LambdaLR", false]], "layer_norm() (in module lucid.nn.functional)": [[278, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[369, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[240, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[321, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[101, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[102, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[103, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[104, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[354, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[267, "lucid.nn.functional.linear", false]], "linspace() (in module lucid)": [[454, "lucid.linspace", false]], "log() (in module lucid)": [[471, "lucid.log", false]], "log2() (in module lucid)": [[472, "lucid.log2", false]], "lrscheduler (class in lucid.optim.lr_scheduler)": [[400, "lucid.optim.lr_scheduler.LRScheduler", false]], "lucid": [[16, "module-lucid", false]], "masked_fill() (in module lucid)": [[503, "lucid.masked_fill", false]], "matmul() (in module lucid)": [[439, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[23, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[473, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[290, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[291, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[292, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[440, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[380, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[381, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[382, "lucid.nn.MaxPool3d", false]], "maxvit (class in lucid.models)": [[105, "lucid.models.MaxViT", false]], "maxvit_base() (in module lucid.models)": [[106, "lucid.models.maxvit_base", false]], "maxvit_large() (in module lucid.models)": [[107, "lucid.models.maxvit_large", false]], "maxvit_small() (in module lucid.models)": [[108, "lucid.models.maxvit_small", false]], "maxvit_tiny() (in module lucid.models)": [[109, "lucid.models.maxvit_tiny", false]], "maxvit_xlarge() (in module lucid.models)": [[110, "lucid.models.maxvit_xlarge", false]], "mean() (in module lucid)": [[474, "lucid.mean", false]], "meshgrid() (in module lucid)": [[504, "lucid.meshgrid", false]], "min() (in module lucid)": [[475, "lucid.min", false]], "minimum() (in module lucid)": [[441, "lucid.minimum", false]], "mnist (class in lucid.datasets)": [[8, "lucid.datasets.MNIST", false]], "mobilenet (class in lucid.models)": [[111, "lucid.models.MobileNet", false]], "mobilenet() (in module lucid.models)": [[115, "lucid.models.mobilenet", false]], "mobilenet_v2 (class in lucid.models)": [[112, "lucid.models.MobileNet_V2", false]], "mobilenet_v2() (in module lucid.models)": [[116, "lucid.models.mobilenet_v2", false]], "mobilenet_v3 (class in lucid.models)": [[113, "lucid.models.MobileNet_V3", false]], "mobilenet_v3_large() (in module lucid.models)": [[117, "lucid.models.mobilenet_v3_large", false]], "mobilenet_v3_small() (in module lucid.models)": [[118, "lucid.models.mobilenet_v3_small", false]], "mobilenet_v4 (class in lucid.models)": [[114, "lucid.models.MobileNet_V4", false]], "mobilenet_v4_conv_large() (in module lucid.models)": [[119, "lucid.models.mobilenet_v4_conv_large", false]], "mobilenet_v4_conv_medium() (in module lucid.models)": [[120, "lucid.models.mobilenet_v4_conv_medium", false]], "mobilenet_v4_conv_small() (in module lucid.models)": [[121, "lucid.models.mobilenet_v4_conv_small", false]], "mobilenet_v4_hybrid_large() (in module lucid.models)": [[122, "lucid.models.mobilenet_v4_hybrid_large", false]], "mobilenet_v4_hybrid_medium() (in module lucid.models)": [[123, "lucid.models.mobilenet_v4_hybrid_medium", false]], "module": [[16, "module-lucid", false]], "module (class in lucid.nn)": [[229, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[231, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[232, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[272, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[359, "lucid.nn.MSELoss", false]], "multiheadattention (class in lucid.nn)": [[330, "lucid.nn.MultiHeadAttention", false]], "multiply() (in module lucid)": [[442, "lucid.multiply", false]], "multiscaleroialign (class in lucid.models.objdet.util)": [[215, "lucid.models.objdet.util.MultiScaleROIAlign", false]], "multisteplr (class in lucid.optim.lr_scheduler)": [[402, "lucid.optim.lr_scheduler.MultiStepLR", false]], "nadam (class in lucid.optim)": [[413, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[273, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[360, "lucid.nn.NLLLoss", false]], "nms() (in module lucid.models.objdet.util)": [[223, "lucid.models.objdet.util.nms", false]], "no_grad (in module lucid)": [[423, "lucid.no_grad", false]], "nonzero() (in module lucid)": [[505, "lucid.nonzero", false]], "norm() (in module lucid.linalg)": [[24, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[313, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[527, "lucid.transforms.Normalize", false]], "normalize() (in module lucid.nn.functional)": [[279, "lucid.nn.functional.normalize", false]], "numeric (class in lucid.types)": [[419, "lucid.types.Numeric", false]], "ones() (in module lucid)": [[455, "lucid.ones", false]], "ones_like() (in module lucid)": [[456, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[395, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[443, "lucid.outer", false]], "pad() (in module lucid)": [[506, "lucid.pad", false]], "parameter (class in lucid.nn)": [[230, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[233, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[234, "lucid.nn.ParameterList", false]], "permutation() (in module lucid.random)": [[427, "lucid.random.permutation", false]], "pinv() (in module lucid.linalg)": [[25, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[444, "lucid.power", false]], "pvt (class in lucid.models)": [[124, "lucid.models.PVT", false]], "pvt_huge() (in module lucid.models)": [[126, "lucid.models.pvt_huge", false]], "pvt_large() (in module lucid.models)": [[127, "lucid.models.pvt_large", false]], "pvt_medium() (in module lucid.models)": [[128, "lucid.models.pvt_medium", false]], "pvt_small() (in module lucid.models)": [[129, "lucid.models.pvt_small", false]], "pvt_tiny() (in module lucid.models)": [[130, "lucid.models.pvt_tiny", false]], "pvt_v2 (class in lucid.models)": [[125, "lucid.models.PVT_V2", false]], "pvt_v2_b0() (in module lucid.models)": [[131, "lucid.models.pvt_v2_b0", false]], "pvt_v2_b1() (in module lucid.models)": [[132, "lucid.models.pvt_v2_b1", false]], "pvt_v2_b2() (in module lucid.models)": [[133, "lucid.models.pvt_v2_b2", false]], "pvt_v2_b2_li() (in module lucid.models)": [[134, "lucid.models.pvt_v2_b2_li", false]], "pvt_v2_b3() (in module lucid.models)": [[135, "lucid.models.pvt_v2_b3", false]], "pvt_v2_b4() (in module lucid.models)": [[136, "lucid.models.pvt_v2_b4", false]], "pvt_v2_b5() (in module lucid.models)": [[137, "lucid.models.pvt_v2_b5", false]], "qr() (in module lucid.linalg)": [[26, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[414, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[428, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[429, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[430, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[528, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[529, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[530, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[531, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[532, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[507, "lucid.ravel", false]], "rcnn (class in lucid.models)": [[213, "lucid.models.RCNN", false]], "rearrange (class in lucid.nn)": [[349, "lucid.nn.Rearrange", false]], "rearrange() (in module lucid.einops)": [[13, "lucid.einops.rearrange", false]], "reciprocal() (in module lucid)": [[476, "lucid.reciprocal", false]], "reduce() (in module lucid.einops)": [[14, "lucid.einops.reduce", false]], "reducelronplateau (class in lucid.optim.lr_scheduler)": [[403, "lucid.optim.lr_scheduler.ReduceLROnPlateau", false]], "register_model() (in module lucid)": [[424, "lucid.register_model", false]], "relu (class in lucid.nn)": [[322, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[241, "lucid.nn.functional.relu", false]], "relu6 (class in lucid.nn)": [[323, "lucid.nn.ReLU6", false]], "repeat() (in module lucid)": [[508, "lucid.repeat", false]], "repeat() (in module lucid.einops)": [[15, "lucid.einops.repeat", false]], "reshape() (in module lucid)": [[509, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[533, "lucid.transforms.Resize", false]], "resnest (class in lucid.models)": [[138, "lucid.models.ResNeSt", false]], "resnest_101() (in module lucid.models)": [[139, "lucid.models.resnest_101", false]], "resnest_14() (in module lucid.models)": [[140, "lucid.models.resnest_14", false]], "resnest_200() (in module lucid.models)": [[141, "lucid.models.resnest_200", false]], "resnest_26() (in module lucid.models)": [[142, "lucid.models.resnest_26", false]], "resnest_269() (in module lucid.models)": [[143, "lucid.models.resnest_269", false]], "resnest_50() (in module lucid.models)": [[144, "lucid.models.resnest_50", false]], "resnest_50_1s4x24d() (in module lucid.models)": [[145, "lucid.models.resnest_50_1s4x24d", false]], "resnest_50_4s2x40d() (in module lucid.models)": [[146, "lucid.models.resnest_50_4s2x40d", false]], "resnet (class in lucid.models)": [[147, "lucid.models.ResNet", false]], "resnet_1001() (in module lucid.models)": [[148, "lucid.models.resnet_1001", false]], "resnet_101() (in module lucid.models)": [[149, "lucid.models.resnet_101", false]], "resnet_152() (in module lucid.models)": [[150, "lucid.models.resnet_152", false]], "resnet_18() (in module lucid.models)": [[151, "lucid.models.resnet_18", false]], "resnet_200() (in module lucid.models)": [[152, "lucid.models.resnet_200", false]], "resnet_269() (in module lucid.models)": [[153, "lucid.models.resnet_269", false]], "resnet_34() (in module lucid.models)": [[154, "lucid.models.resnet_34", false]], "resnet_50() (in module lucid.models)": [[155, "lucid.models.resnet_50", false]], "resnext (class in lucid.models)": [[158, "lucid.models.ResNeXt", false]], "resnext_101_32x16d() (in module lucid.models)": [[159, "lucid.models.resnext_101_32x16d", false]], "resnext_101_32x32d() (in module lucid.models)": [[160, "lucid.models.resnext_101_32x32d", false]], "resnext_101_32x4d() (in module lucid.models)": [[161, "lucid.models.resnext_101_32x4d", false]], "resnext_101_32x8d() (in module lucid.models)": [[162, "lucid.models.resnext_101_32x8d", false]], "resnext_101_64x4d() (in module lucid.models)": [[163, "lucid.models.resnext_101_64x4d", false]], "resnext_50_32x4d() (in module lucid.models)": [[164, "lucid.models.resnext_50_32x4d", false]], "rmsprop (class in lucid.optim)": [[415, "lucid.optim.RMSprop", false]], "roialign (class in lucid.models.objdet.util)": [[216, "lucid.models.objdet.util.ROIAlign", false]], "roll() (in module lucid)": [[510, "lucid.roll", false]], "rotate() (in module lucid.nn.functional)": [[299, "lucid.nn.functional.rotate", false]], "round() (in module lucid)": [[477, "lucid.round", false]], "rprop (class in lucid.optim)": [[416, "lucid.optim.Rprop", false]], "scaled_dot_product_attention() (in module lucid.nn.functional)": [[247, "lucid.nn.functional.scaled_dot_product_attention", false]], "scaleddotproductattention (class in lucid.nn)": [[331, "lucid.nn.ScaledDotProductAttention", false]], "se_resnet_101() (in module lucid.models)": [[166, "lucid.models.se_resnet_101", false]], "se_resnet_152() (in module lucid.models)": [[167, "lucid.models.se_resnet_152", false]], "se_resnet_18() (in module lucid.models)": [[168, "lucid.models.se_resnet_18", false]], "se_resnet_34() (in module lucid.models)": [[169, "lucid.models.se_resnet_34", false]], "se_resnet_50() (in module lucid.models)": [[170, "lucid.models.se_resnet_50", false]], "se_resnext_101_32x4d() (in module lucid.models)": [[171, "lucid.models.se_resnext_101_32x4d", false]], "se_resnext_101_32x8d() (in module lucid.models)": [[172, "lucid.models.se_resnext_101_32x8d", false]], "se_resnext_101_64x4d() (in module lucid.models)": [[173, "lucid.models.se_resnext_101_64x4d", false]], "se_resnext_50_32x4d() (in module lucid.models)": [[174, "lucid.models.se_resnext_50_32x4d", false]], "seed() (in module lucid.random)": [[431, "lucid.random.seed", false]], "selectivekernel (class in lucid.nn)": [[307, "lucid.nn.SelectiveKernel", false]], "selectivesearch (class in lucid.models.objdet.util)": [[217, "lucid.models.objdet.util.SelectiveSearch", false]], "selu (class in lucid.nn)": [[324, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[242, "lucid.nn.functional.selu", false]], "semodule (class in lucid.nn)": [[306, "lucid.nn.SEModule", false]], "senet (class in lucid.models)": [[165, "lucid.models.SENet", false]], "sequential (class in lucid.nn)": [[235, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[417, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[325, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[243, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[478, "lucid.sign", false]], "sin() (in module lucid)": [[479, "lucid.sin", false]], "sinh() (in module lucid)": [[480, "lucid.sinh", false]], "sk_resnet_18() (in module lucid.models)": [[176, "lucid.models.sk_resnet_18", false]], "sk_resnet_34() (in module lucid.models)": [[177, "lucid.models.sk_resnet_34", false]], "sk_resnet_50() (in module lucid.models)": [[178, "lucid.models.sk_resnet_50", false]], "sk_resnext_50_32x4d() (in module lucid.models)": [[179, "lucid.models.sk_resnext_50_32x4d", false]], "sknet (class in lucid.models)": [[175, "lucid.models.SKNet", false]], "softmax (class in lucid.nn)": [[326, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[244, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[27, "lucid.linalg.solve", false]], "sort() (in module lucid)": [[511, "lucid.sort", false]], "split() (in module lucid)": [[512, "lucid.split", false]], "sqrt() (in module lucid)": [[481, "lucid.sqrt", false]], "square() (in module lucid)": [[482, "lucid.square", false]], "squeeze() (in module lucid)": [[513, "lucid.squeeze", false]], "stack() (in module lucid)": [[514, "lucid.stack", false]], "steplr (class in lucid.optim.lr_scheduler)": [[404, "lucid.optim.lr_scheduler.StepLR", false]], "sub() (in module lucid)": [[445, "lucid.sub", false]], "sum() (in module lucid)": [[483, "lucid.sum", false]], "svd() (in module lucid.linalg)": [[28, "lucid.linalg.svd", false]], "swapaxes() (in module lucid)": [[484, "lucid.swapaxes", false]], "swin_base() (in module lucid.models)": [[182, "lucid.models.swin_base", false]], "swin_large() (in module lucid.models)": [[183, "lucid.models.swin_large", false]], "swin_small() (in module lucid.models)": [[184, "lucid.models.swin_small", false]], "swin_tiny() (in module lucid.models)": [[185, "lucid.models.swin_tiny", false]], "swin_v2_base() (in module lucid.models)": [[186, "lucid.models.swin_v2_base", false]], "swin_v2_giant() (in module lucid.models)": [[187, "lucid.models.swin_v2_giant", false]], "swin_v2_huge() (in module lucid.models)": [[188, "lucid.models.swin_v2_huge", false]], "swin_v2_large() (in module lucid.models)": [[189, "lucid.models.swin_v2_large", false]], "swin_v2_small() (in module lucid.models)": [[190, "lucid.models.swin_v2_small", false]], "swin_v2_tiny() (in module lucid.models)": [[191, "lucid.models.swin_v2_tiny", false]], "swintransformer (class in lucid.models)": [[180, "lucid.models.SwinTransformer", false]], "swintransformer_v2 (class in lucid.models)": [[181, "lucid.models.SwinTransformer_V2", false]], "swish (class in lucid.nn)": [[327, "lucid.nn.Swish", false]], "tan() (in module lucid)": [[485, "lucid.tan", false]], "tanh (class in lucid.nn)": [[328, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[486, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[245, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[434, "lucid.Tensor", false]], "tensor() (in module lucid)": [[490, "lucid.tensor", false]], "tensordot() (in module lucid)": [[446, "lucid.tensordot", false]], "tile() (in module lucid)": [[515, "lucid.tile", false]], "topk() (in module lucid)": [[516, "lucid.topk", false]], "totensor (class in lucid.transforms)": [[525, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[487, "lucid.trace", false]], "transformer (class in lucid.models)": [[225, "lucid.models.Transformer", false]], "transformer (class in lucid.nn)": [[386, "lucid.nn.Transformer", false]], "transformer_base() (in module lucid.models)": [[226, "lucid.models.transformer_base", false]], "transformer_big() (in module lucid.models)": [[227, "lucid.models.transformer_big", false]], "transformerdecoder (class in lucid.nn)": [[387, "lucid.nn.TransformerDecoder", false]], "transformerdecoderlayer (class in lucid.nn)": [[388, "lucid.nn.TransformerDecoderLayer", false]], "transformerencoder (class in lucid.nn)": [[389, "lucid.nn.TransformerEncoder", false]], "transformerencoderlayer (class in lucid.nn)": [[390, "lucid.nn.TransformerEncoderLayer", false]], "transpose() (in module lucid)": [[488, "lucid.transpose", false]], "tril() (in module lucid)": [[517, "lucid.tril", false]], "triu() (in module lucid)": [[518, "lucid.triu", false]], "unbind() (in module lucid)": [[519, "lucid.unbind", false]], "unfold (class in lucid.nn)": [[339, "lucid.nn.Unfold", false]], "unfold() (in module lucid.nn.functional)": [[255, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[314, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[432, "lucid.random.uniform", false]], "unique() (in module lucid)": [[520, "lucid.unique", false]], "unsqueeze() (in module lucid)": [[521, "lucid.unsqueeze", false]], "upsample (class in lucid.nn)": [[392, "lucid.nn.Upsample", false]], "var() (in module lucid)": [[489, "lucid.var", false]], "vggnet (class in lucid.models)": [[192, "lucid.models.VGGNet", false]], "vggnet_11() (in module lucid.models)": [[193, "lucid.models.vggnet_11", false]], "vggnet_13() (in module lucid.models)": [[194, "lucid.models.vggnet_13", false]], "vggnet_16() (in module lucid.models)": [[195, "lucid.models.vggnet_16", false]], "vggnet_19() (in module lucid.models)": [[196, "lucid.models.vggnet_19", false]], "vit (class in lucid.models)": [[197, "lucid.models.ViT", false]], "vit_base() (in module lucid.models)": [[198, "lucid.models.vit_base", false]], "vit_huge() (in module lucid.models)": [[199, "lucid.models.vit_huge", false]], "vit_large() (in module lucid.models)": [[200, "lucid.models.vit_large", false]], "vit_small() (in module lucid.models)": [[201, "lucid.models.vit_small", false]], "vit_tiny() (in module lucid.models)": [[202, "lucid.models.vit_tiny", false]], "vstack() (in module lucid)": [[522, "lucid.vstack", false]], "where() (in module lucid)": [[523, "lucid.where", false]], "wide_resnet_101() (in module lucid.models)": [[156, "lucid.models.wide_resnet_101", false]], "wide_resnet_50() (in module lucid.models)": [[157, "lucid.models.wide_resnet_50", false]], "xavier_normal() (in module lucid.nn.init)": [[315, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[316, "lucid.nn.init.xavier_uniform", false]], "xception (class in lucid.models)": [[203, "lucid.models.Xception", false]], "xception() (in module lucid.models)": [[204, "lucid.models.xception", false]], "zeros() (in module lucid)": [[457, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[458, "lucid.zeros_like", false]], "zfnet (class in lucid.models)": [[205, "lucid.models.ZFNet", false]], "zfnet() (in module lucid.models)": [[206, "lucid.models.zfnet", false]]}, "objects": {"": [[16, 0, 0, "-", "lucid"]], "lucid": [[434, 1, 1, "", "Tensor"], [460, 2, 1, "", "abs"], [435, 2, 1, "", "add"], [447, 2, 1, "", "arange"], [461, 2, 1, "", "arccos"], [462, 2, 1, "", "arcsin"], [463, 2, 1, "", "arctan"], [491, 2, 1, "", "argmax"], [492, 2, 1, "", "argmin"], [493, 2, 1, "", "argsort"], [494, 2, 1, "", "broadcast_to"], [464, 2, 1, "", "ceil"], [495, 2, 1, "", "chunk"], [465, 2, 1, "", "clip"], [496, 2, 1, "", "concatenate"], [466, 2, 1, "", "cos"], [467, 2, 1, "", "cosh"], [420, 2, 1, "", "count_flops"], [468, 2, 1, "", "cube"], [448, 2, 1, "", "diag"], [436, 2, 1, "", "div"], [437, 2, 1, "", "dot"], [449, 2, 1, "", "empty"], [450, 2, 1, "", "empty_like"], [469, 2, 1, "", "exp"], [451, 2, 1, "", "eye"], [497, 2, 1, "", "flatten"], [470, 2, 1, "", "floor"], [452, 2, 1, "", "full"], [453, 2, 1, "", "full_like"], [421, 2, 1, "", "grad_enabled"], [498, 2, 1, "", "histogram"], [499, 2, 1, "", "histogram2d"], [500, 2, 1, "", "histogramdd"], [501, 2, 1, "", "hstack"], [438, 2, 1, "", "inner"], [454, 2, 1, "", "linspace"], [471, 2, 1, "", "log"], [472, 2, 1, "", "log2"], [503, 2, 1, "", "masked_fill"], [439, 2, 1, "", "matmul"], [473, 2, 1, "", "max"], [440, 2, 1, "", "maximum"], [474, 2, 1, "", "mean"], [504, 2, 1, "", "meshgrid"], [475, 2, 1, "", "min"], [441, 2, 1, "", "minimum"], [442, 2, 1, "", "multiply"], [423, 3, 1, "", "no_grad"], [505, 2, 1, "", "nonzero"], [455, 2, 1, "", "ones"], [456, 2, 1, "", "ones_like"], [443, 2, 1, "", "outer"], [506, 2, 1, "", "pad"], [444, 2, 1, "", "power"], [507, 2, 1, "", "ravel"], [476, 2, 1, "", "reciprocal"], [424, 2, 1, "", "register_model"], [508, 2, 1, "", "repeat"], [509, 2, 1, "", "reshape"], [510, 2, 1, "", "roll"], [477, 2, 1, "", "round"], [478, 2, 1, "", "sign"], [479, 2, 1, "", "sin"], [480, 2, 1, "", "sinh"], [511, 2, 1, "", "sort"], [512, 2, 1, "", "split"], [481, 2, 1, "", "sqrt"], [482, 2, 1, "", "square"], [513, 2, 1, "", "squeeze"], [514, 2, 1, "", "stack"], [445, 2, 1, "", "sub"], [483, 2, 1, "", "sum"], [484, 2, 1, "", "swapaxes"], [485, 2, 1, "", "tan"], [486, 2, 1, "", "tanh"], [490, 2, 1, "", "tensor"], [446, 2, 1, "", "tensordot"], [515, 2, 1, "", "tile"], [516, 2, 1, "", "topk"], [487, 2, 1, "", "trace"], [488, 2, 1, "", "transpose"], [517, 2, 1, "", "tril"], [518, 2, 1, "", "triu"], [519, 2, 1, "", "unbind"], [520, 2, 1, "", "unique"], [521, 2, 1, "", "unsqueeze"], [489, 2, 1, "", "var"], [522, 2, 1, "", "vstack"], [523, 2, 1, "", "where"], [457, 2, 1, "", "zeros"], [458, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "CIFAR10"], [6, 1, 1, "", "CIFAR100"], [7, 1, 1, "", "FashionMNIST"], [8, 1, 1, "", "MNIST"]], "lucid.einops": [[11, 2, 1, "", "einsum"], [13, 2, 1, "", "rearrange"], [14, 2, 1, "", "reduce"], [15, 2, 1, "", "repeat"]], "lucid.linalg": [[18, 2, 1, "", "cholesky"], [19, 2, 1, "", "det"], [20, 2, 1, "", "eig"], [22, 2, 1, "", "inv"], [23, 2, 1, "", "matrix_power"], [24, 2, 1, "", "norm"], [25, 2, 1, "", "pinv"], [26, 2, 1, "", "qr"], [27, 2, 1, "", "solve"], [28, 2, 1, "", "svd"]], "lucid.models": [[29, 1, 1, "", "AlexNet"], [31, 1, 1, "", "CoAtNet"], [40, 1, 1, "", "ConvNeXt"], [41, 1, 1, "", "ConvNeXt_V2"], [55, 1, 1, "", "CrossViT"], [65, 1, 1, "", "CvT"], [69, 1, 1, "", "DenseNet"], [74, 1, 1, "", "EfficientNet"], [75, 1, 1, "", "EfficientNet_V2"], [212, 1, 1, "", "FastRCNN"], [208, 1, 1, "", "FasterRCNN"], [88, 1, 1, "", "Inception"], [92, 1, 1, "", "InceptionNeXt"], [97, 1, 1, "", "InceptionResNet"], [101, 1, 1, "", "LeNet"], [105, 1, 1, "", "MaxViT"], [111, 1, 1, "", "MobileNet"], [112, 1, 1, "", "MobileNet_V2"], [113, 1, 1, "", "MobileNet_V3"], [114, 1, 1, "", "MobileNet_V4"], [124, 1, 1, "", "PVT"], [125, 1, 1, "", "PVT_V2"], [213, 1, 1, "", "RCNN"], [138, 1, 1, "", "ResNeSt"], [158, 1, 1, "", "ResNeXt"], [147, 1, 1, "", "ResNet"], [165, 1, 1, "", "SENet"], [175, 1, 1, "", "SKNet"], [180, 1, 1, "", "SwinTransformer"], [181, 1, 1, "", "SwinTransformer_V2"], [225, 1, 1, "", "Transformer"], [192, 1, 1, "", "VGGNet"], [197, 1, 1, "", "ViT"], [203, 1, 1, "", "Xception"], [205, 1, 1, "", "ZFNet"], [30, 2, 1, "", "alexnet"], [32, 2, 1, "", "coatnet_0"], [33, 2, 1, "", "coatnet_1"], [34, 2, 1, "", "coatnet_2"], [35, 2, 1, "", "coatnet_3"], [36, 2, 1, "", "coatnet_4"], [37, 2, 1, "", "coatnet_5"], [38, 2, 1, "", "coatnet_6"], [39, 2, 1, "", "coatnet_7"], [42, 2, 1, "", "convnext_base"], [43, 2, 1, "", "convnext_large"], [44, 2, 1, "", "convnext_small"], [45, 2, 1, "", "convnext_tiny"], [46, 2, 1, "", "convnext_v2_atto"], [47, 2, 1, "", "convnext_v2_base"], [48, 2, 1, "", "convnext_v2_femto"], [49, 2, 1, "", "convnext_v2_huge"], [50, 2, 1, "", "convnext_v2_large"], [51, 2, 1, "", "convnext_v2_nano"], [52, 2, 1, "", "convnext_v2_pico"], [53, 2, 1, "", "convnext_v2_tiny"], [54, 2, 1, "", "convnext_xlarge"], [56, 2, 1, "", "crossvit_15"], [57, 2, 1, "", "crossvit_15_dagger"], [58, 2, 1, "", "crossvit_18"], [59, 2, 1, "", "crossvit_18_dagger"], [60, 2, 1, "", "crossvit_9"], [61, 2, 1, "", "crossvit_9_dagger"], [62, 2, 1, "", "crossvit_base"], [63, 2, 1, "", "crossvit_small"], [64, 2, 1, "", "crossvit_tiny"], [66, 2, 1, "", "cvt_13"], [67, 2, 1, "", "cvt_21"], [68, 2, 1, "", "cvt_w24"], [70, 2, 1, "", "densenet_121"], [71, 2, 1, "", "densenet_169"], [72, 2, 1, "", "densenet_201"], [73, 2, 1, "", "densenet_264"], [76, 2, 1, "", "efficientnet_b0"], [77, 2, 1, "", "efficientnet_b1"], [78, 2, 1, "", "efficientnet_b2"], [79, 2, 1, "", "efficientnet_b3"], [80, 2, 1, "", "efficientnet_b4"], [81, 2, 1, "", "efficientnet_b5"], [82, 2, 1, "", "efficientnet_b6"], [83, 2, 1, "", "efficientnet_b7"], [84, 2, 1, "", "efficientnet_v2_l"], [85, 2, 1, "", "efficientnet_v2_m"], [86, 2, 1, "", "efficientnet_v2_s"], [87, 2, 1, "", "efficientnet_v2_xl"], [209, 2, 1, "", "faster_rcnn_resnet_101_fpn"], [210, 2, 1, "", "faster_rcnn_resnet_50_fpn"], [93, 2, 1, "", "inception_next_atto"], [94, 2, 1, "", "inception_next_base"], [95, 2, 1, "", "inception_next_small"], [96, 2, 1, "", "inception_next_tiny"], [98, 2, 1, "", "inception_resnet_v1"], [99, 2, 1, "", "inception_resnet_v2"], [89, 2, 1, "", "inception_v1"], [90, 2, 1, "", "inception_v3"], [91, 2, 1, "", "inception_v4"], [102, 2, 1, "", "lenet_1"], [103, 2, 1, "", "lenet_4"], [104, 2, 1, "", "lenet_5"], [106, 2, 1, "", "maxvit_base"], [107, 2, 1, "", "maxvit_large"], [108, 2, 1, "", "maxvit_small"], [109, 2, 1, "", "maxvit_tiny"], [110, 2, 1, "", "maxvit_xlarge"], [115, 2, 1, "", "mobilenet"], [116, 2, 1, "", "mobilenet_v2"], [117, 2, 1, "", "mobilenet_v3_large"], [118, 2, 1, "", "mobilenet_v3_small"], [119, 2, 1, "", "mobilenet_v4_conv_large"], [120, 2, 1, "", "mobilenet_v4_conv_medium"], [121, 2, 1, "", "mobilenet_v4_conv_small"], [122, 2, 1, "", "mobilenet_v4_hybrid_large"], [123, 2, 1, "", "mobilenet_v4_hybrid_medium"], [126, 2, 1, "", "pvt_huge"], [127, 2, 1, "", "pvt_large"], [128, 2, 1, "", "pvt_medium"], [129, 2, 1, "", "pvt_small"], [130, 2, 1, "", "pvt_tiny"], [131, 2, 1, "", "pvt_v2_b0"], [132, 2, 1, "", "pvt_v2_b1"], [133, 2, 1, "", "pvt_v2_b2"], [134, 2, 1, "", "pvt_v2_b2_li"], [135, 2, 1, "", "pvt_v2_b3"], [136, 2, 1, "", "pvt_v2_b4"], [137, 2, 1, "", "pvt_v2_b5"], [139, 2, 1, "", "resnest_101"], [140, 2, 1, "", "resnest_14"], [141, 2, 1, "", "resnest_200"], [142, 2, 1, "", "resnest_26"], [143, 2, 1, "", "resnest_269"], [144, 2, 1, "", "resnest_50"], [145, 2, 1, "", "resnest_50_1s4x24d"], [146, 2, 1, "", "resnest_50_4s2x40d"], [148, 2, 1, "", "resnet_1001"], [149, 2, 1, "", "resnet_101"], [150, 2, 1, "", "resnet_152"], [151, 2, 1, "", "resnet_18"], [152, 2, 1, "", "resnet_200"], [153, 2, 1, "", "resnet_269"], [154, 2, 1, "", "resnet_34"], [155, 2, 1, "", "resnet_50"], [159, 2, 1, "", "resnext_101_32x16d"], [160, 2, 1, "", "resnext_101_32x32d"], [161, 2, 1, "", "resnext_101_32x4d"], [162, 2, 1, "", "resnext_101_32x8d"], [163, 2, 1, "", "resnext_101_64x4d"], [164, 2, 1, "", "resnext_50_32x4d"], [166, 2, 1, "", "se_resnet_101"], [167, 2, 1, "", "se_resnet_152"], [168, 2, 1, "", "se_resnet_18"], [169, 2, 1, "", "se_resnet_34"], [170, 2, 1, "", "se_resnet_50"], [171, 2, 1, "", "se_resnext_101_32x4d"], [172, 2, 1, "", "se_resnext_101_32x8d"], [173, 2, 1, "", "se_resnext_101_64x4d"], [174, 2, 1, "", "se_resnext_50_32x4d"], [176, 2, 1, "", "sk_resnet_18"], [177, 2, 1, "", "sk_resnet_34"], [178, 2, 1, "", "sk_resnet_50"], [179, 2, 1, "", "sk_resnext_50_32x4d"], [182, 2, 1, "", "swin_base"], [183, 2, 1, "", "swin_large"], [184, 2, 1, "", "swin_small"], [185, 2, 1, "", "swin_tiny"], [186, 2, 1, "", "swin_v2_base"], [187, 2, 1, "", "swin_v2_giant"], [188, 2, 1, "", "swin_v2_huge"], [189, 2, 1, "", "swin_v2_large"], [190, 2, 1, "", "swin_v2_small"], [191, 2, 1, "", "swin_v2_tiny"], [226, 2, 1, "", "transformer_base"], [227, 2, 1, "", "transformer_big"], [193, 2, 1, "", "vggnet_11"], [194, 2, 1, "", "vggnet_13"], [195, 2, 1, "", "vggnet_16"], [196, 2, 1, "", "vggnet_19"], [198, 2, 1, "", "vit_base"], [199, 2, 1, "", "vit_huge"], [200, 2, 1, "", "vit_large"], [201, 2, 1, "", "vit_small"], [202, 2, 1, "", "vit_tiny"], [156, 2, 1, "", "wide_resnet_101"], [157, 2, 1, "", "wide_resnet_50"], [204, 2, 1, "", "xception"], [206, 2, 1, "", "zfnet"]], "lucid.models.objdet.util": [[214, 1, 1, "", "FPN"], [215, 1, 1, "", "MultiScaleROIAlign"], [216, 1, 1, "", "ROIAlign"], [217, 1, 1, "", "SelectiveSearch"], [218, 2, 1, "", "apply_deltas"], [219, 2, 1, "", "bbox_to_delta"], [220, 2, 1, "", "clip_boxes"], [222, 2, 1, "", "iou"], [223, 2, 1, "", "nms"]], "lucid.nn": [[371, 1, 1, "", "AdaptiveAvgPool1d"], [372, 1, 1, "", "AdaptiveAvgPool2d"], [373, 1, 1, "", "AdaptiveAvgPool3d"], [374, 1, 1, "", "AdaptiveMaxPool1d"], [375, 1, 1, "", "AdaptiveMaxPool2d"], [376, 1, 1, "", "AdaptiveMaxPool3d"], [341, 1, 1, "", "AlphaDropout"], [377, 1, 1, "", "AvgPool1d"], [378, 1, 1, "", "AvgPool2d"], [379, 1, 1, "", "AvgPool3d"], [356, 1, 1, "", "BCELoss"], [362, 1, 1, "", "BatchNorm1d"], [363, 1, 1, "", "BatchNorm2d"], [364, 1, 1, "", "BatchNorm3d"], [352, 1, 1, "", "Bilinear"], [228, 1, 1, "", "Buffer"], [333, 1, 1, "", "Conv1d"], [334, 1, 1, "", "Conv2d"], [335, 1, 1, "", "Conv3d"], [300, 1, 1, "", "ConvBNReLU1d"], [301, 1, 1, "", "ConvBNReLU2d"], [302, 1, 1, "", "ConvBNReLU3d"], [336, 1, 1, "", "ConvTranspose1d"], [337, 1, 1, "", "ConvTranspose2d"], [338, 1, 1, "", "ConvTranspose3d"], [357, 1, 1, "", "CrossEntropyLoss"], [303, 1, 1, "", "DepthSeparableConv1d"], [304, 1, 1, "", "DepthSeparableConv2d"], [305, 1, 1, "", "DepthSeparableConv3d"], [342, 1, 1, "", "DropBlock"], [343, 1, 1, "", "DropPath"], [344, 1, 1, "", "Dropout"], [345, 1, 1, "", "Dropout1d"], [346, 1, 1, "", "Dropout2d"], [347, 1, 1, "", "Dropout3d"], [317, 1, 1, "", "ELU"], [384, 1, 1, "", "Embedding"], [318, 1, 1, "", "GELU"], [365, 1, 1, "", "GlobalResponseNorm"], [319, 1, 1, "", "HardSigmoid"], [320, 1, 1, "", "HardSwish"], [358, 1, 1, "", "HuberLoss"], [353, 1, 1, "", "Identity"], [366, 1, 1, "", "InstanceNorm1d"], [367, 1, 1, "", "InstanceNorm2d"], [368, 1, 1, "", "InstanceNorm3d"], [369, 1, 1, "", "LayerNorm"], [321, 1, 1, "", "LeakyReLU"], [354, 1, 1, "", "Linear"], [359, 1, 1, "", "MSELoss"], [380, 1, 1, "", "MaxPool1d"], [381, 1, 1, "", "MaxPool2d"], [382, 1, 1, "", "MaxPool3d"], [229, 1, 1, "", "Module"], [231, 1, 1, "", "ModuleDict"], [232, 1, 1, "", "ModuleList"], [330, 1, 1, "", "MultiHeadAttention"], [360, 1, 1, "", "NLLLoss"], [230, 1, 1, "", "Parameter"], [233, 1, 1, "", "ParameterDict"], [234, 1, 1, "", "ParameterList"], [322, 1, 1, "", "ReLU"], [323, 1, 1, "", "ReLU6"], [349, 1, 1, "", "Rearrange"], [324, 1, 1, "", "SELU"], [306, 1, 1, "", "SEModule"], [331, 1, 1, "", "ScaledDotProductAttention"], [307, 1, 1, "", "SelectiveKernel"], [235, 1, 1, "", "Sequential"], [325, 1, 1, "", "Sigmoid"], [326, 1, 1, "", "Softmax"], [327, 1, 1, "", "Swish"], [328, 1, 1, "", "Tanh"], [386, 1, 1, "", "Transformer"], [387, 1, 1, "", "TransformerDecoder"], [388, 1, 1, "", "TransformerDecoderLayer"], [389, 1, 1, "", "TransformerEncoder"], [390, 1, 1, "", "TransformerEncoderLayer"], [339, 1, 1, "", "Unfold"], [392, 1, 1, "", "Upsample"]], "lucid.nn.functional": [[280, 2, 1, "", "adaptive_avg_pool1d"], [281, 2, 1, "", "adaptive_avg_pool2d"], [282, 2, 1, "", "adaptive_avg_pool3d"], [283, 2, 1, "", "adaptive_max_pool1d"], [284, 2, 1, "", "adaptive_max_pool2d"], [285, 2, 1, "", "adaptive_max_pool3d"], [293, 2, 1, "", "affine_grid"], [256, 2, 1, "", "alpha_dropout"], [286, 2, 1, "", "avg_pool1d"], [287, 2, 1, "", "avg_pool2d"], [288, 2, 1, "", "avg_pool3d"], [274, 2, 1, "", "batch_norm"], [265, 2, 1, "", "bilinear"], [268, 2, 1, "", "binary_cross_entropy"], [248, 2, 1, "", "conv1d"], [249, 2, 1, "", "conv2d"], [250, 2, 1, "", "conv3d"], [251, 2, 1, "", "conv_transpose1d"], [252, 2, 1, "", "conv_transpose2d"], [253, 2, 1, "", "conv_transpose3d"], [269, 2, 1, "", "cross_entropy"], [257, 2, 1, "", "drop_block"], [258, 2, 1, "", "drop_path"], [259, 2, 1, "", "dropout"], [260, 2, 1, "", "dropout1d"], [261, 2, 1, "", "dropout2d"], [262, 2, 1, "", "dropout3d"], [237, 2, 1, "", "elu"], [296, 2, 1, "", "embedding"], [238, 2, 1, "", "gelu"], [275, 2, 1, "", "global_response_norm"], [294, 2, 1, "", "grid_sample"], [270, 2, 1, "", "huber_loss"], [277, 2, 1, "", "instance_norm"], [298, 2, 1, "", "interpolate"], [278, 2, 1, "", "layer_norm"], [240, 2, 1, "", "leaky_relu"], [267, 2, 1, "", "linear"], [290, 2, 1, "", "max_pool1d"], [291, 2, 1, "", "max_pool2d"], [292, 2, 1, "", "max_pool3d"], [272, 2, 1, "", "mse_loss"], [273, 2, 1, "", "nll_loss"], [279, 2, 1, "", "normalize"], [241, 2, 1, "", "relu"], [299, 2, 1, "", "rotate"], [247, 2, 1, "", "scaled_dot_product_attention"], [242, 2, 1, "", "selu"], [243, 2, 1, "", "sigmoid"], [244, 2, 1, "", "softmax"], [245, 2, 1, "", "tanh"], [255, 2, 1, "", "unfold"]], "lucid.nn.init": [[309, 2, 1, "", "constant"], [311, 2, 1, "", "kaiming_normal"], [312, 2, 1, "", "kaiming_uniform"], [313, 2, 1, "", "normal"], [314, 2, 1, "", "uniform"], [315, 2, 1, "", "xavier_normal"], [316, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[407, 1, 1, "", "ASGD"], [408, 1, 1, "", "Adadelta"], [409, 1, 1, "", "Adagrad"], [410, 1, 1, "", "Adam"], [411, 1, 1, "", "AdamW"], [412, 1, 1, "", "Adamax"], [413, 1, 1, "", "NAdam"], [395, 1, 1, "", "Optimizer"], [414, 1, 1, "", "RAdam"], [415, 1, 1, "", "RMSprop"], [416, 1, 1, "", "Rprop"], [417, 1, 1, "", "SGD"]], "lucid.optim.lr_scheduler": [[397, 1, 1, "", "CosineAnnealingLR"], [398, 1, 1, "", "CyclicLR"], [399, 1, 1, "", "ExponentialLR"], [400, 1, 1, "", "LRScheduler"], [401, 1, 1, "", "LambdaLR"], [402, 1, 1, "", "MultiStepLR"], [403, 1, 1, "", "ReduceLROnPlateau"], [404, 1, 1, "", "StepLR"]], "lucid.random": [[425, 2, 1, "", "bernoulli"], [427, 2, 1, "", "permutation"], [428, 2, 1, "", "rand"], [429, 2, 1, "", "randint"], [430, 2, 1, "", "randn"], [431, 2, 1, "", "seed"], [432, 2, 1, "", "uniform"]], "lucid.transforms": [[526, 1, 1, "", "CenterCrop"], [524, 1, 1, "", "Compose"], [527, 1, 1, "", "Normalize"], [528, 1, 1, "", "RandomCrop"], [529, 1, 1, "", "RandomGrayscale"], [530, 1, 1, "", "RandomHorizontalFlip"], [531, 1, 1, "", "RandomRotation"], [532, 1, 1, "", "RandomVerticalFlip"], [533, 1, 1, "", "Resize"], [525, 1, 1, "", "ToTensor"]], "lucid.types": [[419, 1, 1, "", "Numeric"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"], "3": ["py", "attribute", "Python attribute"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function", "3": "py:attribute"}, "terms": {"": [3, 16, 17, 23, 25, 28, 55, 86, 100, 105, 117, 118, 123, 127, 139, 140, 141, 142, 143, 144, 197, 201, 208, 210, 213, 214, 215, 225, 228, 229, 230, 231, 233, 234, 235, 247, 280, 281, 282, 307, 331, 339, 357, 360, 371, 372, 373, 377, 380, 381, 386, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 419, 422, 424, 434, 439, 448, 474, 483, 484, 487, 489, 490, 510, 513, 525, 527, 535], "0": [0, 1, 3, 4, 5, 6, 7, 8, 11, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 32, 40, 41, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 74, 75, 84, 85, 86, 87, 90, 92, 97, 100, 101, 105, 115, 124, 125, 126, 127, 128, 129, 130, 165, 180, 181, 197, 208, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 225, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 268, 269, 270, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 286, 287, 288, 290, 291, 292, 293, 294, 296, 298, 299, 300, 301, 302, 303, 304, 305, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 453, 454, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 483, 484, 485, 486, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 505, 506, 507, 508, 511, 512, 513, 514, 516, 517, 518, 519, 520, 521, 522, 523, 524, 526, 527, 528, 529, 530, 531, 532, 533, 535], "000": [5, 6, 7, 8, 100, 132, 187, 226, 227, 449, 450], "0000": [357, 358, 360], "0001": [403, 407], "000e": [449, 450], "001": [398, 407, 410, 411, 413, 414, 417], "002": [412, 413], "003": [100, 129], "004": 413, "005": 321, "006": 398, "008": [57, 100, 115], "00808": 100, "009": [100, 132], "00b": 100, "01": [16, 240, 321, 395, 397, 406, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417], "01051757": 430, "011": [38, 100], "013": [72, 100], "014": [64, 100], "016": [100, 148], "01697": 100, "01b": 100, "0205": 357, "0217": 357, "0227": 357, "024": [100, 110, 121, 170], "025": [62, 100], "026": [100, 159], "028": [100, 164], "0299": 357, "02b": 100, "030": [209, 211], "032": [84, 100, 155], "03545": 100, "03b": 100, "044715": [238, 318], "0450": 357, "0451": 357, "046": [82, 100], "047": [100, 194], "04719755": 461, "0474259": 243, "048": [100, 129, 172], "0480": 357, "04861": 100, "04b": 100, "05": [274, 277, 278, 300, 301, 302, 321, 362, 363, 364, 366, 367, 368, 369, 386, 388, 390], "050": [100, 201], "0507": [242, 324], "05m": 100, "06": [40, 92, 275, 365, 408, 416], "066": [52, 100], "069": [100, 142, 153], "06m": 100, "07": [257, 268, 269, 342, 356, 357], "070": [100, 123], "0700": 357, "0706508": 328, "071": [100, 148], "072": [100, 136], "0721": 357, "073": [100, 178], "07722396": 327, "0794": 360, "08": [403, 410, 411, 412, 413, 414, 415], "0802": 360, "081": [100, 109], "083": [96, 100], "08333333": 25, "085537": 469, "088": [100, 170], "08955": 100, "08b": 100, "08m": 100, "0900": [326, 357], "096": [34, 100, 204], "0986": [244, 326], "09861229": 471, "09883": 100, "0992": 357, "09b": 100, "1": [0, 1, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 97, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 165, 171, 172, 173, 174, 175, 179, 180, 181, 192, 197, 203, 205, 208, 209, 210, 212, 213, 214, 215, 216, 218, 219, 220, 225, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 268, 269, 270, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 392, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 423, 425, 427, 428, 429, 430, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 453, 454, 455, 456, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 494, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535], "10": [0, 1, 2, 3, 5, 6, 7, 16, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 69, 100, 101, 102, 103, 104, 105, 126, 139, 140, 141, 142, 143, 144, 145, 146, 192, 205, 206, 215, 218, 219, 220, 222, 223, 231, 232, 235, 249, 250, 265, 267, 280, 330, 333, 334, 335, 346, 347, 352, 354, 363, 364, 367, 371, 378, 379, 381, 386, 387, 388, 389, 390, 396, 399, 401, 402, 403, 409, 424, 429, 432, 433, 436, 439, 442, 443, 454, 463, 477, 483, 493, 498, 499, 516, 523, 526, 528, 529, 531], "100": [6, 16, 30, 55, 84, 85, 86, 87, 100, 193, 194, 195, 196, 217, 220, 223, 397, 424, 535], "1000": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210], "1000000": 407, "1001": [100, 148, 357], "1003": 357, "1007": 100, "10096": 100, "101": [100, 138, 139, 149, 156, 159, 160, 161, 162, 163, 166, 171, 172, 173, 209, 211], "10106": 100, "1014": 242, "102": [100, 153], "1024": [16, 34, 39, 68, 212, 227, 349], "1025": [232, 235], "1026": [232, 235], "1027": [232, 235], "10499": 243, "105": [62, 100], "1050": 325, "1054": 360, "1056": [232, 235], "10590": 100, "106": [100, 190], "107": [39, 100], "108": [85, 100], "1097": 100, "11": [11, 100, 123, 151, 168, 192, 193, 265, 333, 334, 335, 346, 352, 363, 364, 367, 378, 379, 381, 439, 526, 527, 528, 529, 531], "110": [100, 143, 223], "1105": 100, "1109": 100, "111": [78, 100], "1111": 356, "112": [100, 117, 144, 213], "1134": 265, "114b": 529, "119": [100, 265], "1192": [243, 244, 326], "12": [20, 25, 36, 37, 55, 62, 68, 69, 70, 71, 72, 73, 79, 100, 102, 103, 126, 130, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 197, 219, 223, 226, 227, 233, 265, 279, 282, 333, 334, 335, 346, 347, 352, 363, 364, 367, 373, 378, 379, 381, 439, 443, 444, 526, 528, 529, 531], "120": [84, 100, 101, 104, 117, 118, 220], "12000": [226, 227], "121": [69, 70, 100], "12122": 100, "123": [311, 312, 313, 314, 315, 316, 431, 432], "124": [37, 100, 311, 312, 315, 316], "125": 379, "1250": 358, "1251": 100, "1258": 100, "126": [100, 156], "128": [16, 31, 34, 40, 45, 60, 61, 82, 98, 100, 105, 109, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 147, 156, 157, 182, 192, 208, 214, 235, 307, 524, 535], "1280": [37, 113], "128x128": [524, 535], "12b": 100, "13": [66, 89, 100, 192, 194, 265, 333, 334, 335, 352, 364, 378, 379, 381, 439, 526, 528, 529, 531], "130": 220, "1314": 100, "132": [100, 193], "1324": 100, "133": [100, 194], "136": [86, 100, 123], "138": [100, 195], "13b": 100, "13k": 100, "14": [33, 34, 35, 71, 100, 106, 107, 110, 132, 140, 333, 334, 335, 346, 347, 352, 364, 378, 379, 381, 439, 443, 452, 477, 526, 528, 529, 531], "14030": 100, "1409": 100, "1415": 477, "14285715": 222, "143": [100, 196], "144": 118, "1440": 211, "1448": 211, "145": 265, "148": [44, 100], "14899": 100, "149": [71, 100, 148], "14b": 100, "15": [0, 11, 51, 56, 57, 100, 222, 265, 333, 334, 335, 352, 364, 378, 379, 381, 439, 443, 487, 526, 528, 529, 531, 535], "150": 217, "1513": 360, "152": [100, 122, 150, 167], "1536": [35, 36, 38, 110], "155": 439, "1556": 100, "156": [93, 100], "157": [35, 100], "1588": [238, 318], "15b": 100, "15m": 100, "16": [55, 67, 68, 69, 70, 100, 101, 104, 113, 117, 118, 124, 159, 165, 182, 186, 192, 195, 197, 198, 199, 200, 201, 202, 208, 212, 213, 214, 215, 232, 233, 235, 247, 281, 282, 300, 301, 302, 306, 307, 330, 331, 333, 334, 335, 337, 338, 346, 347, 349, 352, 363, 364, 372, 373, 378, 379, 381, 386, 387, 388, 389, 390, 394, 439, 443, 481, 526, 528, 529, 531], "160": [100, 117, 131, 149], "16227766": 26, "16425": 360, "1643": 356, "166": 439, "167": [100, 320], "169": [69, 71, 100], "16b": 100, "16x16": 100, "17": [100, 142, 333, 334, 335, 352, 364, 379, 438, 526, 528, 529, 531], "170": 265, "1704": 100, "171": [100, 107], "174": [32, 100], "17520119": 480, "177": [100, 161], "17b": 100, "18": [58, 59, 100, 103, 128, 135, 151, 168, 176, 182, 183, 184, 186, 187, 188, 189, 190, 333, 334, 335, 346, 352, 364, 379, 442, 443, 526, 528, 529, 531], "1800": 357, "182": [100, 219], "184": 117, "187": [100, 107], "18877099": 327, "189": 100, "19": [11, 66, 80, 100, 192, 196, 249, 250, 265, 334, 335, 364, 437, 439, 446], "192": [32, 33, 35, 36, 38, 40, 41, 55, 56, 57, 63, 64, 66, 67, 68, 92, 100, 102, 103, 106, 107, 108, 110, 130, 150, 183], "194": [100, 159], "196": [54, 68, 100, 183, 189], "1966": [244, 325, 326], "197": [43, 50, 100], "198": [100, 117], "199": [100, 199], "1998": [100, 357], "19b": 100, "1_53": 100, "1d": [223, 248, 251, 280, 283, 286, 290, 300, 303, 339, 362, 366, 371, 374, 428, 432, 439, 448, 487, 498, 499, 504, 506, 507, 508, 515, 520], "1e": [20, 25, 40, 92, 131, 132, 133, 135, 136, 137, 257, 268, 269, 274, 275, 277, 278, 279, 300, 301, 302, 342, 356, 357, 362, 363, 364, 365, 366, 367, 368, 369, 386, 388, 390, 403, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417], "1e6": 407, "1s4x24d": 145, "1st": [29, 205], "1x1": 214, "2": [1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 55, 57, 59, 61, 66, 68, 74, 75, 84, 85, 86, 87, 100, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 117, 118, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 151, 168, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 205, 208, 211, 212, 213, 215, 218, 219, 223, 228, 229, 230, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 268, 269, 270, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 290, 291, 292, 293, 294, 296, 298, 299, 300, 301, 302, 303, 304, 305, 307, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 384, 392, 394, 397, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 425, 427, 428, 429, 430, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535], "20": [0, 5, 6, 7, 8, 68, 72, 100, 217, 218, 219, 222, 223, 231, 232, 235, 334, 335, 346, 364, 387, 388, 396, 400, 402, 404, 443, 469, 523], "200": [100, 117, 141, 152], "2000": 217, "2004": 100, "201": [72, 100, 141], "2011": 306, "2012": 100, "2014": [100, 211], "2015": [100, 211], "2016": 100, "2017": [100, 211, 224, 386], "2018": [100, 306], "2019": 100, "2020": 100, "2021": 100, "2022": 100, "2023": [100, 306], "2024": 100, "2039": 360, "204": 335, "2048": [37, 38, 39, 208, 225, 386, 388, 390], "209": [57, 100], "20b": 100, "21": [67, 86, 100, 154, 169, 209, 210, 233, 265, 334, 335, 364, 443], "210": [87, 100], "2102": 100, "2103": 100, "211": 439, "2111": 100, "213": [224, 227], "21841": [49, 54], "21m": 100, "22": [11, 98, 100, 134, 201, 204, 218, 223, 265, 334, 335, 346, 364, 437, 439], "2201": 100, "2204": 100, "221": [87, 100], "2231": [357, 360], "224": [29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 100, 105, 106, 107, 108, 109, 110, 115, 116, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 157, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 197, 198, 199, 200, 201, 202, 205, 209, 210, 213, 215], "2247": [362, 363, 364, 366, 367, 368, 369], "224x224": [74, 89, 171, 172, 173, 174, 179, 210, 213], "226": 439, "22752314": 430, "2278": 100, "22b": 100, "23": [100, 129, 139, 149, 156, 159, 160, 161, 162, 163, 166, 334, 335, 364, 477], "2301": 100, "232": [62, 100, 115, 173], "2324": [100, 324], "233": [48, 100], "234": [311, 312, 313, 314, 315, 316, 432], "2345": 477, "235": [79, 100], "237": [224, 227], "238": [100, 118, 135], "23840584": 327, "23b": 100, "24": [69, 70, 113, 117, 118, 141, 145, 152, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 216, 219, 265, 281, 334, 335, 346, 364, 372, 443, 446], "240": [33, 48, 56, 57, 58, 59, 60, 61, 62, 63, 64, 100, 117, 118, 196], "240x240": 74, "2424": [244, 326], "2447": 326, "246": [100, 102], "24d": 145, "25": [0, 100, 109, 133, 145, 155, 164, 176, 222, 243, 252, 253, 258, 325, 335, 359, 364, 378, 379, 436, 454, 476, 489], "2500": [356, 358, 360], "2512": 317, "2547": 324, "256": [31, 34, 37, 39, 40, 55, 60, 61, 105, 109, 124, 125, 126, 131, 147, 192, 208, 212, 214, 215, 216, 217], "258": [100, 184], "25m": 100, "26": [63, 100, 142, 233, 267, 335, 354, 364, 443], "260": 100, "260x260": 74, "26325684": 430, "264": [73, 100], "265": 100, "266": [59, 100], "2689": [244, 325, 326], "26894142": 327, "269": [100, 143, 153], "27": [32, 56, 100, 127, 136, 144, 174, 265, 333, 335, 364, 468], "271": [58, 100], "272": [63, 100, 163], "274": [100, 139, 179], "276": [311, 312, 315, 316], "277": [36, 68, 100], "27b": 100, "28": [36, 37, 45, 53, 57, 96, 100, 102, 103, 170, 185, 191, 219, 265, 335, 443], "280": [52, 100], "286": [100, 126], "288": [100, 118, 141, 185], "289": [49, 76, 100], "28x28": [7, 8, 102, 103], "29": [100, 179, 335], "293": 100, "296": [60, 100], "299": [100, 203], "299r": 529, "299x299": [90, 91, 98, 99], "29b": 100, "2_i": [366, 367, 368], "2c": 398, "2d": [249, 252, 261, 281, 284, 287, 291, 293, 301, 304, 337, 363, 367, 372, 375, 439, 448, 451, 484, 487, 497, 499, 500, 504, 505, 506, 508, 515, 531], "2e": 412, "2fh": 211, "2k": 213, "2nd": [29, 205], "2x": 146, "2x2": [255, 526, 528], "2x3": 293, "3": [1, 2, 3, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 100, 102, 105, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 121, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 187, 190, 191, 192, 197, 203, 205, 208, 209, 210, 211, 212, 213, 217, 223, 228, 229, 230, 232, 233, 234, 235, 238, 243, 244, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 270, 272, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 286, 287, 288, 290, 291, 292, 293, 294, 296, 298, 299, 300, 301, 302, 303, 304, 305, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 392, 394, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 464, 465, 467, 468, 469, 470, 471, 472, 473, 474, 475, 477, 480, 481, 482, 483, 484, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533], "30": [81, 90, 100, 143, 146, 153, 232, 299, 335, 398, 402, 403, 523, 531], "300": [100, 209, 210, 217], "300x300": 74, "301": [36, 100], "302": [85, 100], "3026": 360, "304": [100, 108, 200], "3072": [39, 197], "308": [100, 189], "30823025": 327, "31": [67, 100, 265, 335, 439], "310": [449, 450], "31622777": 26, "319": 100, "31b": 100, "32": [11, 16, 31, 55, 69, 71, 72, 100, 104, 105, 119, 131, 138, 139, 140, 141, 142, 143, 144, 159, 160, 161, 162, 164, 182, 186, 212, 213, 214, 215, 216, 232, 235, 265, 267, 281, 300, 301, 302, 306, 307, 334, 335, 337, 349, 354, 372, 394, 419, 437, 438, 443], "320": [100, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 142], "321": [311, 312, 315, 316], "326": [100, 166, 200], "32b": 100, "32m": 100, "32x16d": 100, "32x32": [5, 6, 101, 104], "32x32d": 100, "32x4d": [100, 171, 174, 179], "32x8d": [100, 172], "33": [73, 100, 232, 235, 267, 335, 354], "330": [33, 100], "3333": 279, "33333333": 25, "336": [38, 43, 100, 162, 193, 219], "337": [73, 100], "33b": 100, "34": [100, 154, 169, 177, 232, 235, 265, 335, 439, 443], "342": [311, 312, 315, 316], "344": [80, 100], "345": [311, 312, 313, 314, 315, 316, 432], "349": [100, 191], "34b": 100, "35": [99, 100, 232, 235, 335], "350": [54, 100], "352": [89, 100], "354": [100, 185], "355": [83, 100], "3567": [356, 360], "357": [100, 195, 206], "359": [100, 127], "35b": 100, "36": [100, 141, 150, 152, 167, 335], "362": [100, 133], "364": 100, "367": 100, "3679": [237, 242, 317], "368": [100, 176, 178], "36b": 100, "36th": 100, "37": [100, 122, 333], "370": [78, 100], "372": 265, "375": 359, "3750": 358, "37754067": 327, "378": [100, 103], "37b": 100, "38": 100, "380": 100, "380x380": 74, "383": [100, 110], "38344152": 428, "384": [32, 33, 35, 36, 38, 40, 41, 55, 56, 57, 62, 63, 66, 67, 92, 100, 106, 107, 108, 110, 208], "38629436": 471, "389056": 469, "38b": 100, "38th": 100, "392": [68, 90, 100], "393": [81, 89, 100], "3935": 317, "3965": 100, "3977": 100, "39b": 100, "39m": 100, "3d": [250, 253, 262, 282, 285, 288, 292, 302, 305, 335, 338, 339, 364, 368, 373, 376], "3x3": [100, 214, 339, 433], "4": [0, 1, 2, 3, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 32, 33, 34, 35, 36, 37, 38, 39, 40, 55, 60, 61, 62, 63, 64, 67, 69, 74, 92, 93, 100, 101, 102, 103, 105, 115, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 169, 170, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 208, 209, 210, 212, 215, 216, 217, 218, 219, 220, 222, 223, 233, 235, 247, 248, 249, 250, 251, 252, 255, 257, 258, 260, 261, 262, 265, 267, 274, 275, 277, 278, 279, 280, 281, 282, 283, 286, 287, 288, 290, 291, 292, 293, 294, 296, 298, 299, 300, 301, 303, 304, 305, 311, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 352, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 377, 378, 379, 380, 381, 382, 384, 392, 403, 407, 410, 414, 415, 417, 422, 427, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 453, 456, 458, 465, 471, 472, 473, 474, 475, 476, 479, 481, 482, 483, 484, 485, 487, 488, 489, 490, 491, 492, 493, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 514, 515, 516, 517, 518, 519, 520, 522, 523, 525, 526, 527, 528, 529, 530, 531, 532, 533], "40": [91, 100, 113, 117, 118, 137, 146, 215, 402, 523], "400": [46, 100, 104, 186, 199], "4044": 356, "406": 213, "4076": 357, "408": [58, 100], "4096": [29, 205, 208, 212], "40b": 100, "40d": 146, "41": [100, 128], "41421356": 18, "415": 100, "416": [100, 109, 153, 171, 202], "41666667": 25, "417": [100, 146], "41808962": 430, "419974": 245, "4199743": 328, "41b": 100, "42": [38, 39, 187, 265, 306, 433], "421": [311, 312, 315, 316], "423": [311, 312, 313, 314], "424": 100, "42718872": 26, "4278": 100, "4284": 100, "4286": [279, 356], "42b": 100, "43": [11, 58, 82, 100, 210, 211, 437, 439, 446], "431": [95, 100], "432": [81, 100], "4323": 317, "4375": 358, "43758721": 428, "43b": 100, "44": [59, 100, 149, 161], "440": [86, 100], "4472": 279, "4472136": 20, "448": [58, 59, 83, 100], "4495": [364, 368], "45": [100, 135, 177, 265, 299, 531], "4510": 100, "4520": 100, "4545": 341, "455": [100, 163], "456": [100, 213], "456x456": 74, "457": [100, 130], "45b": 100, "46": [44, 100], "463": 100, "464": [42, 56, 100, 146], "468": [100, 160], "46b": 100, "4700": 100, "4708": 100, "47112767": 463, "472": [100, 160, 224, 227], "476": [100, 183], "47b": 100, "48": [69, 72, 73, 100, 118, 139, 143, 153, 171, 183, 187, 188, 189, 267, 354], "480": [66, 71, 100, 117], "481": [100, 117], "483": [100, 144], "485": 213, "48b": 100, "48m": 100, "49": [95, 100, 166, 184, 190], "492": [100, 128], "496": [53, 100], "4979": 317, "49b": 100, "49k": 100, "4s2x40d": [100, 146], "4x": 145, "4x4": 533, "5": [1, 2, 11, 13, 14, 17, 22, 23, 24, 25, 29, 32, 37, 40, 48, 55, 56, 57, 74, 76, 90, 100, 101, 102, 103, 104, 105, 108, 109, 113, 117, 118, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 175, 176, 177, 178, 202, 205, 208, 212, 213, 215, 216, 218, 220, 222, 223, 229, 230, 231, 232, 233, 235, 238, 243, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 270, 272, 274, 277, 278, 280, 283, 286, 287, 293, 294, 296, 298, 300, 301, 302, 307, 309, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 333, 334, 335, 336, 339, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 366, 367, 368, 369, 371, 374, 377, 378, 379, 381, 382, 386, 388, 390, 396, 398, 400, 402, 403, 404, 416, 422, 425, 427, 429, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 450, 451, 454, 456, 458, 460, 461, 462, 473, 474, 475, 476, 478, 483, 484, 487, 488, 489, 490, 491, 498, 499, 500, 501, 504, 509, 510, 511, 512, 516, 517, 518, 519, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535], "50": [5, 6, 11, 100, 138, 144, 145, 146, 147, 155, 157, 164, 170, 174, 178, 179, 209, 210, 211, 217, 220, 267, 354, 397, 416, 437, 439, 454, 529, 530, 532, 535], "5000": [225, 356, 358, 360], "504": [100, 116], "508": [209, 211], "50_1s4x24d": 100, "50b": 100, "510": 100, "5108": 360, "512": [31, 34, 37, 39, 40, 55, 99, 100, 105, 109, 120, 124, 125, 126, 127, 128, 129, 130, 132, 133, 134, 135, 136, 137, 147, 151, 177, 208, 212, 213, 214, 225, 226, 330, 386, 387, 388, 389, 390], "515": [210, 211], "516": [34, 100], "519": 100, "51b": 100, "520": [93, 100], "52359878": 462, "528": [56, 100], "528x528": 74, "52b": 100, "53": [33, 100, 265, 438], "530": [100, 160], "531": 100, "532": [100, 183], "536": [79, 100], "537": [100, 118], "543": [311, 312, 313, 314, 315, 316, 432], "54308063": 467, "544": [95, 100, 195, 224, 226], "545": 444, "5455": 341, "549": [100, 149], "54b": 100, "55": [85, 100, 108, 127], "553": [60, 100, 134], "556": [100, 136], "557": [100, 155], "558": [38, 100], "559": [100, 174], "55b": 100, "560": [77, 100, 140], "563": [311, 312, 315, 316], "564": [100, 187], "567": [100, 198], "5672": 100, "568": [87, 100], "5683": 100, "569": [100, 172], "57": [100, 178, 265], "57079633": [461, 462], "5714": 279, "5720": 100, "5730": 100, "57366333": 431, "576": 118, "57b": 100, "580": 211, "582": 100, "584": [100, 224, 226], "5849625": 472, "586": [91, 100], "587": 211, "587g": 529, "589": [45, 100], "590": [100, 119], "591": [42, 100], "592": [61, 100, 168], "5987": 100, "5995": 100, "5998": 224, "59b": 100, "5ch": 211, "5d": 253, "5th": [29, 205], "6": [11, 17, 25, 29, 31, 33, 34, 35, 38, 40, 55, 56, 57, 58, 59, 63, 66, 67, 69, 70, 71, 72, 73, 74, 92, 100, 101, 104, 106, 107, 110, 124, 125, 129, 131, 132, 133, 134, 135, 136, 137, 138, 144, 147, 154, 155, 157, 164, 169, 170, 177, 178, 180, 181, 183, 184, 185, 187, 188, 189, 190, 191, 205, 225, 233, 234, 248, 249, 250, 251, 255, 257, 262, 265, 267, 275, 279, 280, 283, 284, 293, 294, 296, 312, 316, 319, 323, 333, 334, 335, 339, 342, 344, 345, 346, 347, 352, 354, 356, 362, 363, 364, 365, 366, 367, 368, 369, 371, 374, 375, 378, 379, 381, 382, 386, 387, 389, 408, 416, 422, 427, 432, 434, 435, 436, 437, 438, 439, 442, 443, 444, 445, 446, 447, 448, 449, 450, 456, 458, 473, 474, 475, 483, 484, 487, 488, 489, 490, 495, 501, 508, 509, 510, 511, 512, 517, 518, 519, 522, 525, 526, 527, 528, 529, 531, 533], "60": [5, 6, 100, 126, 150, 220, 446], "600": [74, 100, 213], "6008": 224, "600x600": 74, "6052": 360, "606": [100, 184], "6065": 317, "608": [37, 100, 206], "60b": 100, "61": [30, 100, 104], "6105": 100, "611": [100, 140], "6114": 100, "6124": [362, 363, 364, 366, 367, 368, 369], "617": [84, 100], "62": [100, 136, 206, 209, 211, 224, 226, 265], "622": [67, 100], "623": [51, 100], "626": [100, 106], "62686041": 480, "62b": 100, "630": 100, "632": [36, 100, 199, 200], "6321": [237, 317], "63245553": 26, "635": [53, 100], "636": [76, 100], "63b": 100, "64": [31, 40, 66, 67, 69, 73, 100, 105, 106, 107, 108, 109, 113, 117, 124, 125, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 152, 163, 175, 192, 208, 212, 213, 214, 215, 232, 235, 265, 306, 307, 419], "640": [49, 80, 100], "641": 100, "645": 100, "64589411": 428, "647": [100, 176], "648": [100, 128], "64b": 100, "64x4d": [100, 173], "654": [311, 312, 313, 314, 315, 316, 432], "656": [35, 100, 198], "657": [100, 188, 311, 312, 315, 316], "6590": [244, 326], "65b": 100, "66": [83, 100, 167], "660": [49, 100], "664": [100, 201], "6652": 326, "666": [100, 131], "66666667": 25, "6667": [279, 356], "667": [100, 196], "668": [100, 188], "6682": 356, "669": [100, 152], "66b": 100, "67": 439, "672": [100, 117, 154], "67326": 324, "6733": 242, "676": [100, 145], "677": 100, "678": [311, 312, 313, 314, 315, 316], "67b": 100, "67m": 100, "688": [39, 100], "68811989": 430, "689": [100, 151], "68b": 100, "69314718": 471, "696": [67, 100, 135, 156], "69b": 100, "7": [10, 11, 14, 24, 39, 58, 59, 64, 70, 77, 100, 105, 125, 131, 132, 133, 134, 135, 136, 137, 180, 181, 192, 208, 212, 215, 216, 233, 248, 249, 250, 255, 257, 262, 265, 267, 268, 269, 280, 293, 294, 296, 307, 318, 323, 324, 325, 328, 333, 334, 335, 339, 342, 346, 347, 352, 354, 356, 357, 359, 363, 364, 367, 368, 371, 374, 378, 379, 381, 382, 425, 429, 432, 435, 437, 438, 439, 443, 445, 446, 448, 452, 454, 469, 474, 483, 484, 487, 488, 489, 500, 512, 515, 517, 518, 525, 526, 527, 528, 529, 531, 533], "70": [7, 8, 100, 141], "7001": 357, "704": [73, 100, 161], "706": [100, 104, 126], "70710678": [20, 479], "708": [46, 100], "70b": 100, "7132": 100, "7141": 100, "7147": 360, "715": [100, 120], "717": [47, 100, 202], "7182": 477, "7182818": 469, "71b": 100, "72": [113, 117, 118, 477], "726791": 100, "72b": 100, "73": 100, "731": [100, 190], "7311": [244, 325, 326], "734": [100, 110], "739": [98, 100], "73b": 100, "74": 439, "745": [100, 189], "748": [94, 100], "74b": 100, "75": [223, 252, 267, 354, 359, 407, 454], "755": [100, 122], "757": [100, 108], "7581": 242, "75b": 100, "760": [100, 131, 139, 179], "76159416": [327, 486], "7616": [245, 328], "76219569": 467, "7635": 324, "767": [43, 100], "768": [32, 33, 35, 36, 38, 40, 41, 62, 68, 92, 100, 106, 107, 108, 110, 126, 182, 197], "770": [37, 100], "772": 444, "774": [100, 121], "776": [61, 100, 106], "778": [100, 168], "77b": 100, "78": [100, 157], "78357324": 430, "784": 16, "78539816": 463, "789": 100, "78b": 100, "790": [35, 100], "791": [100, 162], "79172504": 428, "792": [100, 159], "795": [77, 100], "796": [100, 188], "797": [100, 154], "79b": 100, "7x7": 205, "8": [11, 23, 27, 38, 39, 55, 60, 61, 69, 74, 100, 105, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 143, 147, 150, 153, 159, 160, 161, 162, 163, 164, 167, 176, 177, 178, 182, 186, 214, 215, 217, 223, 225, 232, 233, 235, 247, 248, 249, 250, 252, 255, 257, 262, 265, 267, 268, 279, 280, 281, 282, 285, 293, 294, 296, 300, 301, 302, 306, 318, 319, 324, 325, 328, 330, 331, 333, 334, 335, 337, 338, 339, 342, 344, 345, 346, 347, 352, 354, 356, 359, 363, 364, 367, 368, 371, 372, 373, 374, 376, 378, 379, 381, 382, 386, 387, 388, 389, 390, 403, 410, 411, 412, 413, 414, 415, 425, 429, 436, 437, 438, 439, 443, 444, 446, 447, 448, 464, 468, 474, 483, 484, 487, 488, 489, 500, 512, 516, 517, 518, 525, 526, 527, 528, 529, 531, 533], "80": [5, 6, 7, 8, 117], "800": [47, 51, 64, 100, 213], "8005": 357, "808": [100, 150], "80b": 100, "817": [90, 100], "818": 100, "8182": 341, "81b": 100, "82": [34, 100, 137, 265], "821": [100, 167], "82b": 100, "83": [100, 163], "832": [96, 100], "833": 100, "83b": 100, "84": [101, 103, 104], "840": [30, 50, 94, 100], "8413": [238, 318], "842": [100, 191], "847": [99, 100], "848": [100, 127, 167, 194], "849": 100, "84b": 100, "856": [63, 70, 100, 133], "85772238": 327, "8584": 324, "85b": 100, "86": [94, 100, 198], "862": [100, 204], "863": [100, 193], "864": [100, 119, 152], "868": [100, 169], "869": [100, 187], "87": [100, 182, 186], "872": [100, 116, 145, 166], "876": [311, 312, 315, 316, 432], "87m": 100, "88": [42, 47, 100, 118, 162, 173], "880": [100, 107], "8808": [244, 325, 326], "882": [100, 137], "884": [44, 100], "886": [100, 156], "887": 444, "88m": 100, "891773": 428, "893": 100, "8944": 279, "89442719": 20, "895": [100, 177], "896": [100, 174], "89b": 100, "9": [0, 1, 3, 8, 27, 40, 41, 52, 60, 61, 78, 92, 100, 120, 218, 223, 249, 255, 257, 265, 267, 280, 293, 296, 333, 334, 335, 339, 342, 346, 352, 354, 356, 363, 364, 367, 371, 378, 379, 381, 396, 399, 407, 408, 410, 411, 412, 413, 414, 415, 417, 425, 429, 432, 435, 439, 443, 444, 445, 448, 453, 470, 481, 482, 493, 516, 517, 518, 525, 526, 527, 528, 529, 531], "902": [210, 211], "904": [100, 164], "90709145": 431, "9091": 341, "9120": 360, "9163": 360, "91m": 100, "920": [100, 126], "922": [100, 186], "928": [72, 100], "929": [100, 143], "92b": 100, "93": [100, 172], "93b": 100, "93k": 100, "94": 148, "944": [32, 100], "9486833": 26, "949e": [449, 450], "94b": 100, "95": 401, "9526": 243, "9545": 318, "955": [100, 171], "956": [50, 100], "958": [100, 169], "95b": 100, "96": [32, 33, 40, 41, 64, 92, 100, 105, 106, 107, 108, 118, 180, 181], "960": 117, "96366276": 428, "9640": 328, "96402758": 486, "968": [54, 100], "973": [100, 157], "976": [59, 100], "978": [39, 70, 100], "97b": 100, "984": [91, 100, 137, 173], "98b": 100, "99": [220, 415], "9957": 360, "997": [66, 100], "99734545": 431, "999": [0, 410, 411, 412, 413, 414], "99b": 100, "A": [1, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 31, 40, 66, 67, 68, 75, 97, 100, 101, 111, 114, 124, 126, 127, 128, 129, 130, 138, 147, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 207, 209, 212, 213, 214, 215, 216, 217, 219, 220, 222, 223, 229, 235, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 255, 256, 257, 258, 259, 260, 261, 265, 267, 268, 269, 273, 274, 275, 277, 278, 279, 293, 294, 298, 307, 331, 341, 342, 344, 345, 346, 347, 349, 356, 357, 360, 362, 363, 364, 365, 366, 367, 368, 369, 384, 386, 387, 388, 389, 390, 394, 395, 396, 401, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 425, 427, 428, 429, 430, 432, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 531], "As": [337, 431], "At": [16, 392, 403], "Be": [0, 10], "By": [0, 2, 3, 16, 114, 121, 148, 149, 150, 151, 152, 153, 154, 155, 230, 299, 394, 414, 422, 425, 428, 429, 430, 432, 525, 535], "For": [2, 3, 4, 11, 14, 18, 19, 20, 22, 23, 24, 25, 27, 119, 120, 121, 123, 208, 213, 235, 237, 238, 240, 241, 242, 243, 245, 251, 265, 267, 279, 298, 311, 312, 315, 316, 324, 333, 334, 335, 336, 339, 352, 354, 362, 363, 364, 366, 367, 368, 394, 406, 427, 431, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 469, 471, 472, 473, 474, 475, 479, 481, 483, 484, 487, 488, 489, 493, 506, 508, 513, 515, 519, 521, 535], "If": [0, 1, 2, 5, 6, 7, 8, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 55, 147, 212, 213, 229, 231, 232, 233, 234, 237, 238, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 258, 262, 265, 267, 274, 277, 281, 282, 293, 294, 296, 298, 299, 300, 301, 302, 303, 304, 305, 307, 311, 312, 330, 331, 333, 334, 335, 336, 337, 338, 343, 352, 354, 356, 357, 358, 359, 360, 362, 363, 364, 366, 367, 368, 369, 372, 373, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 392, 395, 397, 398, 399, 400, 401, 402, 403, 404, 410, 411, 415, 416, 419, 424, 425, 428, 429, 430, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 504, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 520, 521, 522, 525, 529, 530, 532, 533], "In": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535], "It": [1, 2, 3, 7, 10, 11, 16, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 53, 55, 70, 71, 72, 73, 88, 89, 90, 100, 101, 102, 103, 104, 105, 106, 107, 110, 112, 113, 115, 123, 128, 135, 137, 147, 148, 149, 150, 151, 152, 153, 154, 155, 168, 181, 188, 190, 192, 204, 207, 211, 212, 213, 214, 215, 217, 218, 223, 224, 229, 231, 232, 233, 234, 235, 251, 252, 253, 258, 262, 265, 294, 296, 298, 299, 300, 301, 302, 306, 318, 319, 322, 323, 328, 330, 331, 336, 338, 343, 349, 352, 353, 356, 357, 358, 359, 360, 371, 372, 373, 384, 386, 387, 389, 392, 394, 395, 406, 407, 413, 415, 416, 417, 419, 422, 423, 427, 431, 434, 435, 436, 437, 440, 441, 442, 444, 445, 454, 473, 475, 493, 496, 501, 504, 505, 506, 507, 508, 509, 512, 513, 514, 515, 519, 520, 522, 524, 525], "Its": [11, 27, 433], "Near": 25, "No": [255, 258, 420], "Not": [294, 353], "One": [11, 102, 212, 535], "Such": 434, "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 268, 269, 270, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535], "Then": [209, 446], "There": 509, "These": [4, 10, 17, 20, 23, 26, 28, 31, 84, 85, 86, 87, 105, 110, 119, 120, 121, 122, 123, 126, 156, 157, 176, 177, 178, 204, 207, 213, 341, 344, 345, 346, 347, 356, 357, 358, 359, 360, 362, 363, 364, 366, 367, 368, 369, 416, 433, 535], "To": [3, 16, 100, 210, 211, 224, 396, 406, 425, 427, 430, 433, 449, 450, 504, 520, 535], "With": [3, 100, 132, 136, 255, 258, 452, 453, 525, 535], "_": [13, 14, 15, 23, 231, 232, 234, 235, 237, 238, 240, 241, 242, 243, 245, 267, 293, 296, 298, 336, 337, 349, 363, 364, 366, 367, 368, 377, 378, 379, 380, 381, 382, 384, 407, 408, 410, 411, 412, 413, 415, 417, 437, 438, 439, 443, 487, 488, 517, 518, 519, 526, 527, 528, 530, 531, 532], "_1": [20, 231, 232, 233, 234, 235, 265, 352, 443, 496, 501, 522], "_2": [20, 231, 232, 233, 234, 235, 265, 352, 443, 496, 501, 522], "__call__": [1, 229, 423], "__enter__": 423, "__exit__": 423, "__getitem__": [0, 2, 3, 5, 6, 7, 8], "__init__": [0, 1, 2, 3, 16, 29, 31, 40, 41, 55, 74, 75, 88, 92, 97, 101, 105, 111, 112, 113, 114, 124, 125, 138, 192, 205, 208, 212, 213, 214, 215, 216, 217, 228, 229, 230, 231, 232, 233, 234, 258, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 333, 334, 335, 336, 337, 338, 341, 342, 343, 344, 345, 349, 352, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 394, 395, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 424, 434, 524, 525], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5, 6, 7, 8], "__repr__": 395, "__setattr__": 229, "_a": 446, "_activ": 244, "_arraylik": [448, 450, 453, 456, 458], "_arraylikeint": 506, "_arrayorscalar": [228, 230, 425, 434, 490], "_b": 446, "_backward_op": 16, "_base_activ": 101, "_base_dtyp": [449, 454], "_block": 342, "_builtinnumer": [434, 452, 453], "_c": 527, "_channel": 214, "_d": 253, "_decai": 413, "_devicetyp": [425, 427, 428, 429, 430, 432, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458], "_dtype_bit": 419, "_einopspattern": [13, 14, 15, 349], "_fanmod": [311, 312], "_fasterrcnnloss": 208, "_grad_en": 421, "_h": [252, 253], "_i": [20, 24, 244, 258, 265, 326, 343, 359, 362, 369, 377, 380, 434, 437, 438, 440, 441, 443, 444, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 472, 474, 476, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 496, 501, 508, 513, 516, 519, 521, 522], "_in": [311, 312, 315, 316], "_interpolatetyp": [294, 392], "_j": [244, 326, 377, 380, 443, 474, 483, 488, 489], "_k": 514, "_layer": [387, 389], "_left": 298, "_make_lay": 192, "_mlphead": 92, "_mlx_dtype": 419, "_mlxarrai": 434, "_modul": 229, "_n": [20, 231, 232, 233, 234, 235, 293, 496, 501, 522], "_nograd": 423, "_np_dtype": 419, "_out": [311, 312, 315, 316, 508, 515], "_p": [24, 279, 296, 384], "_pad": 506, "_paddingstr": [300, 301, 302, 303, 304, 305, 333, 334, 335, 336, 337, 338], "_paddingtyp": 294, "_paramet": 229, "_reducestr": 14, "_reductiontyp": [268, 269, 270, 272, 273, 356, 357, 358, 359, 360], "_resnestbottleneck": 138, "_right": 298, "_scalar": [247, 309, 313, 314, 315, 316, 331, 447, 452, 453, 454, 465, 503], "_scaled_channel": 31, "_scaled_num_block": 31, "_seresnetbottleneck": [166, 167, 170], "_seresnetmodul": [168, 169], "_shapelik": [278, 369, 428, 429, 452, 455, 457, 494, 509, 513, 521], "_size": [280, 281, 282, 283, 342], "_skresnetmodul": [176, 177, 178], "_slope": 321, "_sortkind": 493, "_statedict": 395, "_t": [414, 415], "_tensor": [330, 386, 388, 390], "_tensorop": 434, "_u": 25, "_util": 519, "_v": 25, "_valu": [465, 506], "_w": [252, 253], "_weight": 384, "_width": 506, "a_": [11, 31, 388], "a_1": [330, 512], "a_2": 512, "a_h": 330, "a_i": [330, 440, 441, 444, 512], "a_k": 512, "aaai": 100, "ab": [403, 459], "abc": [2, 395], "abil": [100, 535], "about": 10, "abov": [421, 431, 448, 451, 517], "abs_pos_emb": [180, 181], "absolut": [23, 24, 31, 180, 181, 222, 270, 403, 412, 460], "abstract": [2, 3, 126, 128, 394, 395, 406, 407, 415, 417, 419], "abstractmethod": 395, "abund": [49, 122], "acceler": [100, 212, 324, 362, 363, 364, 398, 407, 413, 415, 417, 434], "accept": [217, 336, 353, 493], "access": [0, 2, 3, 4, 5, 6, 7, 8, 159, 160, 161, 162, 163, 164, 209, 228, 230, 231, 232, 233, 234, 235, 420, 509], "accord": [11, 13, 15, 258, 294, 298, 333, 334, 335, 349, 352, 354, 357, 360, 408, 409, 410, 411, 412, 413, 414, 488, 494, 523], "accordingli": [19, 484, 523], "account": [23, 25, 26, 327, 420], "accumul": [294, 407, 408, 409, 420, 434, 435, 436, 440, 441, 442, 445, 494], "accur": [167, 211], "accuraci": [47, 49, 50, 51, 52, 84, 85, 86, 87, 94, 96, 100, 111, 112, 113, 119, 120, 121, 122, 123, 170, 198, 199, 200, 209, 210], "achiev": [13, 100, 132, 158, 159, 160, 161, 162, 163, 164, 248, 249, 250, 280, 349, 371, 372, 373, 376, 413, 530, 532], "across": [0, 5, 6, 10, 13, 14, 16, 31, 40, 53, 100, 105, 115, 126, 131, 132, 133, 135, 136, 137, 181, 189, 213, 215, 228, 232, 235, 275, 278, 280, 281, 282, 315, 316, 362, 363, 364, 366, 367, 368, 369, 371, 372, 373, 419, 425, 428, 429, 430, 431, 432, 433, 449, 450, 474, 489], "act": [16, 411, 510], "act_lay": [65, 105], "activ": [29, 40, 57, 59, 61, 65, 100, 101, 105, 108, 109, 117, 118, 148, 152, 153, 165, 192, 205, 231, 235, 237, 238, 240, 241, 242, 243, 244, 245, 256, 300, 301, 302, 306, 307, 311, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 341, 342, 344, 345, 346, 347, 356, 357, 360, 362, 363, 364, 369, 386, 388, 390, 420, 473, 475], "actual": [230, 356, 357, 359, 360, 528], "acycl": 16, "ad": [15, 69, 113, 147, 218, 229, 231, 232, 233, 234, 235, 248, 249, 250, 251, 252, 257, 265, 267, 268, 269, 274, 275, 277, 278, 286, 287, 288, 290, 291, 292, 300, 301, 302, 330, 333, 334, 335, 336, 337, 338, 339, 342, 356, 357, 362, 363, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 386, 388, 390, 408, 409, 410, 411, 412, 413, 414, 415, 424, 521, 535], "adadelta": 418, "adagrad": [408, 418], "adam": [100, 411, 412, 413, 414, 418], "adamax": 418, "adamw": 418, "adapt": [10, 29, 88, 100, 101, 119, 122, 138, 166, 168, 171, 172, 173, 174, 175, 176, 177, 178, 179, 192, 205, 280, 281, 282, 283, 284, 285, 306, 307, 371, 372, 373, 374, 375, 376, 399, 403, 408, 409, 410, 413, 414, 415, 416], "adaptive_avg_pool1d": [264, 289, 371], "adaptive_avg_pool2d": [264, 289, 372], "adaptive_avg_pool3d": [264, 289, 373], "adaptive_max_pool1d": [264, 289, 374], "adaptive_max_pool2d": [264, 289, 375], "adaptive_max_pool3d": [264, 289, 376], "adaptiveavgpool1d": [351, 383], "adaptiveavgpool2d": [29, 165, 192, 205, 213, 351, 383], "adaptiveavgpool3d": [351, 383], "adaptivemaxpool1d": [351, 383], "adaptivemaxpool2d": [351, 383], "adaptivemaxpool3d": [351, 383], "add": [4, 16, 55, 213, 229, 231, 232, 235, 265, 267, 330, 333, 334, 335, 336, 337, 338, 352, 354, 369, 395, 407, 410, 415, 417, 422, 459, 506, 521], "add_bias_kv": 330, "add_modul": [229, 235], "add_on": [213, 218, 219], "add_param_group": 395, "add_zero_attn": 330, "addit": [4, 23, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 206, 209, 210, 229, 232, 235, 265, 267, 274, 277, 336, 337, 338, 352, 354, 362, 363, 364, 366, 367, 368, 407, 413, 422, 433, 435, 493, 514], "addition": 413, "address": [357, 360, 410, 411, 414], "adjust": [98, 111, 113, 115, 123, 171, 172, 173, 174, 175, 179, 212, 213, 280, 281, 282, 307, 341, 342, 362, 363, 364, 366, 367, 368, 369, 371, 372, 373, 374, 376, 396, 397, 400, 401, 402, 403, 404, 406, 410, 414, 415, 416, 501, 522], "adopt": 434, "advanc": [3, 16, 25, 75, 92, 100, 112, 122, 127, 129, 152, 186, 188, 224, 232, 235, 248, 249, 250, 280, 281, 282, 371, 372, 373, 394, 407], "advantag": 99, "affect": [210, 293, 421, 507, 513, 524], "affin": [293, 294, 300, 301, 302, 362, 363, 364, 366, 367, 368, 369, 531], "affine_grid": [264, 294, 295], "after": [10, 15, 16, 23, 29, 117, 118, 180, 181, 205, 208, 212, 223, 230, 231, 232, 233, 234, 235, 262, 283, 306, 307, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 334, 335, 341, 344, 345, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 366, 369, 375, 377, 378, 379, 380, 381, 382, 386, 388, 390, 396, 403, 411, 420, 434, 435, 436, 440, 441, 442, 444, 445, 452, 453, 454, 506, 511, 512, 525], "afterward": 420, "aggreg": [10, 55, 100, 307, 443, 508, 515], "agnost": 419, "aim": 4, "al": [55, 89, 100, 105, 211, 213, 224, 386], "alex": [5, 6, 100], "alexei": 100, "alexnet": 205, "algebra": [11, 17, 451], "algorithm": [7, 23, 25, 26, 395, 406, 433, 493], "alia": 423, "align": [10, 27, 122, 214, 215, 216, 218, 219, 293, 298, 392, 438, 439, 484], "align_corn": [293, 294, 298, 392], "all": [0, 3, 4, 11, 16, 26, 74, 100, 213, 214, 224, 229, 231, 232, 233, 234, 235, 249, 250, 253, 279, 280, 281, 282, 285, 287, 288, 291, 292, 298, 301, 302, 307, 321, 322, 330, 335, 371, 372, 373, 378, 379, 382, 386, 394, 395, 400, 406, 407, 410, 415, 416, 417, 420, 427, 434, 444, 473, 474, 475, 483, 487, 489, 496, 497, 500, 501, 508, 513, 514, 515, 517, 518, 522, 526, 527, 535], "allevi": [100, 237], "alloc": [16, 449, 450], "allow": [0, 1, 3, 4, 10, 11, 13, 25, 26, 55, 99, 100, 101, 105, 114, 117, 118, 120, 123, 125, 126, 139, 140, 141, 142, 143, 144, 145, 146, 147, 158, 171, 172, 173, 174, 175, 179, 180, 184, 185, 186, 187, 188, 190, 207, 230, 231, 232, 233, 234, 235, 237, 240, 241, 244, 250, 255, 299, 307, 317, 318, 321, 324, 325, 326, 328, 331, 333, 334, 335, 349, 384, 392, 394, 396, 397, 399, 401, 403, 408, 409, 422, 447, 452, 455, 457, 458, 484, 488, 490, 504, 524, 525, 535], "along": [10, 14, 15, 244, 279, 298, 307, 326, 420, 438, 439, 443, 473, 474, 475, 483, 487, 489, 491, 493, 494, 495, 496, 499, 501, 504, 508, 510, 511, 512, 514, 515, 516, 519, 520, 521, 522, 530, 532], "alongsid": 228, "alpha": [237, 240, 242, 256, 317, 324, 341, 407, 415], "alpha_dropout": [263, 264, 341], "alphadropout": [348, 351], "alphadropoutmodel": 341, "alreadi": 424, "also": [237, 238, 240, 241, 242, 243, 245, 251, 265, 267, 298, 337, 413, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 450, 457, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 472, 473, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 494, 496, 501, 506, 507, 508, 509, 513, 514, 515, 521, 522], "alter": [235, 509, 510], "altern": [1, 16, 105, 318, 408, 439], "alwai": [10, 230, 396, 464, 470, 477, 503, 507, 523, 529, 530, 532], "among": [90, 307], "amount": [248, 249, 250, 286, 287, 288, 290, 291, 292, 303, 304, 305, 339, 413], "ampl": 119, "amsgrad": [410, 411], "an": [0, 1, 3, 10, 13, 14, 15, 16, 20, 22, 23, 25, 26, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 98, 99, 100, 101, 102, 103, 104, 112, 115, 116, 117, 118, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 198, 199, 200, 201, 202, 204, 205, 206, 207, 208, 210, 217, 226, 227, 229, 231, 232, 233, 234, 235, 238, 248, 249, 250, 255, 256, 259, 260, 261, 262, 265, 281, 282, 294, 296, 298, 299, 303, 304, 305, 307, 315, 316, 317, 323, 325, 330, 333, 334, 335, 336, 337, 339, 341, 343, 344, 345, 346, 347, 349, 352, 354, 369, 371, 372, 373, 374, 377, 378, 379, 380, 381, 382, 386, 387, 389, 390, 395, 396, 401, 406, 407, 410, 413, 415, 419, 420, 423, 424, 434, 439, 448, 451, 453, 474, 483, 489, 493, 494, 496, 500, 508, 512, 515, 518, 519, 521, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535], "analog": [508, 515], "analysi": [4, 207, 211, 306, 333, 334, 335, 368, 377, 379, 380, 382], "analyz": 207, "anchor": [208, 209, 210], "anchor_s": 208, "anchor_strid": 208, "andreetto": 100, "andrew": 100, "angl": [299, 531], "ani": [0, 1, 2, 3, 13, 16, 23, 25, 30, 106, 107, 108, 109, 110, 147, 175, 204, 206, 210, 228, 229, 230, 231, 233, 234, 237, 238, 240, 241, 242, 243, 245, 256, 259, 265, 267, 274, 277, 294, 325, 349, 369, 394, 395, 400, 420, 421, 423, 424, 431, 434, 447, 448, 449, 451, 452, 455, 456, 457, 458, 473, 475, 488, 490, 496, 497, 501, 506, 508, 514, 515, 521, 522, 524, 535], "anneal": 397, "anoth": [114, 207, 222, 234, 445, 456, 458, 525, 535], "api": [4, 16, 371, 372, 373, 374, 535], "appear": [395, 520], "append": [232, 234, 235, 330], "appl": [16, 110, 419, 434], "appli": [2, 4, 5, 6, 7, 8, 10, 11, 13, 14, 23, 29, 31, 40, 74, 75, 92, 100, 158, 175, 180, 181, 197, 203, 205, 208, 212, 213, 216, 225, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 247, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 268, 269, 270, 272, 273, 275, 279, 283, 285, 293, 294, 300, 301, 302, 306, 307, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 334, 335, 338, 341, 342, 343, 344, 345, 346, 347, 349, 352, 354, 356, 357, 358, 359, 360, 362, 363, 364, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 386, 387, 388, 389, 390, 400, 401, 407, 408, 409, 411, 412, 413, 414, 439, 452, 464, 470, 506, 508, 517, 518, 520, 524, 527, 529, 530, 531, 532, 533, 535], "applic": [4, 10, 14, 16, 25, 42, 43, 44, 47, 49, 54, 69, 95, 98, 99, 100, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 202, 248, 253, 277, 333, 334, 335, 336, 352, 354, 433, 447, 457, 464, 506, 512, 517, 518, 533], "apply_delta": 221, "approach": [3, 10, 13, 15, 55, 57, 59, 61, 65, 97, 212, 235, 349, 397, 411], "appropri": [25, 100, 113, 117, 118, 215, 229, 233, 235, 258, 333, 334, 335, 341, 344, 345, 357, 375, 378, 379, 419, 421], "approx": 242, "approxim": [25, 238, 318, 319, 320, 378, 381, 420], "ar": [1, 2, 3, 4, 11, 14, 15, 16, 19, 20, 22, 23, 25, 26, 27, 28, 32, 33, 34, 35, 36, 37, 38, 39, 66, 67, 68, 84, 85, 86, 87, 88, 89, 90, 100, 119, 121, 122, 125, 126, 127, 128, 129, 130, 134, 207, 208, 209, 212, 213, 214, 217, 219, 220, 222, 223, 228, 229, 230, 231, 232, 233, 234, 235, 244, 248, 249, 250, 252, 253, 255, 258, 265, 267, 275, 281, 282, 284, 285, 293, 294, 296, 298, 303, 304, 305, 306, 307, 311, 312, 314, 315, 316, 319, 326, 330, 333, 334, 335, 336, 339, 341, 342, 343, 344, 345, 346, 347, 352, 354, 357, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 377, 378, 379, 380, 381, 382, 384, 390, 392, 394, 398, 402, 407, 410, 411, 413, 414, 415, 416, 417, 420, 421, 423, 424, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 454, 460, 465, 469, 473, 474, 475, 476, 478, 483, 484, 487, 488, 494, 495, 496, 504, 508, 509, 510, 511, 512, 515, 516, 517, 518, 519, 523, 524, 525, 526, 528, 529, 533, 535], "arang": [446, 459], "arbitrari": [232, 353, 449, 450, 465, 471, 472, 474, 479, 481, 483, 488, 489], "arcco": 459, "arch": 424, "architectur": [10, 30, 32, 33, 34, 35, 36, 37, 38, 39, 41, 45, 46, 47, 48, 49, 50, 51, 52, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 130, 132, 138, 139, 140, 141, 142, 143, 144, 147, 158, 159, 160, 161, 162, 163, 164, 165, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206, 207, 209, 210, 224, 225, 231, 232, 233, 234, 235, 238, 251, 306, 319, 320, 322, 327, 330, 331, 349, 352, 353, 386, 394, 424], "arcsin": 459, "arctan": 459, "area": [222, 294, 298, 392], "arg": [229, 353, 424, 449], "argmax": [423, 502], "argmin": 502, "argsort": 502, "argument": [3, 4, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 101, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 193, 194, 195, 196, 204, 206, 209, 210, 229, 235, 293, 353, 420, 423, 449, 488], "around": [20, 207, 299, 328], "arr": [496, 501, 514, 522], "arrai": [16, 228, 230, 422, 425, 434, 439, 448, 450, 453, 456, 458, 490, 507, 508, 525, 535], "art": [49, 100, 199], "artifact": 216, "artifici": [100, 207], "arxiv": 100, "ascend": [511, 516], "asgd": 418, "ashish": 224, "aspect": [208, 533], "aspect_ratio": 208, "assign": [16, 207, 229, 231, 233, 235, 298, 357, 360, 503], "assist": [88, 89, 90], "associ": [233, 234], "assum": [0, 1, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 197, 198, 199, 200, 201, 202, 395, 406, 421], "astyp": 434, "attach": [208, 420], "attempt": [231, 235], "attend": [247, 331, 387, 389, 390], "attent": [31, 55, 65, 66, 67, 68, 100, 105, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 145, 146, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 197, 224, 225, 234, 265, 306, 330, 331, 386, 387, 388, 389, 390, 446], "attn": [247, 331], "attn_drop": 105, "attn_drop_r": [55, 124, 125, 180, 181], "attn_mask": [247, 331], "atto": [46, 93, 100], "attribut": [16, 229, 396], "audio": [333, 336], "augment": [3, 4, 168, 299, 433, 508, 515, 524, 528, 529, 530, 531, 532, 535], "auto": 215, "auto_pars": 419, "autodiff": [11, 434], "autoencod": [100, 251, 336, 338], "autograd": [16, 394, 511], "automat": [4, 216, 230, 231, 232, 233, 234, 374, 375, 376, 394, 420, 425, 428, 429, 430, 432, 434, 449, 450, 458, 493, 504, 525], "autoregress": [247, 331], "auxiliari": [88, 89, 90, 228], "avail": [4, 5, 6, 7, 8], "avd": 138, "averag": [14, 29, 102, 103, 104, 105, 138, 147, 158, 165, 175, 192, 205, 228, 280, 281, 282, 286, 287, 288, 298, 306, 307, 359, 371, 372, 373, 377, 378, 379, 407, 408, 410, 415, 474], "avg_down": 147, "avg_pool": [377, 378, 379], "avg_pool1d": [264, 289], "avg_pool2d": [264, 289], "avg_pool3d": [264, 289], "avgpool": [29, 165, 192, 205, 307], "avgpool1d": [351, 383], "avgpool1dmodel": 377, "avgpool2d": [351, 383], "avgpool2dmodel": 378, "avgpool3d": [351, 383], "avgpool3dmodel": 379, "avoid": [2, 3, 13, 14, 25, 75, 134, 216, 219, 233, 279, 349, 398, 420, 423, 454, 464, 470], "awar": 189, "ax": [10, 13, 14, 15, 17, 349, 422, 446, 473, 474, 475, 483, 484, 488, 489, 494, 508, 513, 515], "axes_a": 446, "axes_b": 446, "axi": [14, 24, 100, 105, 244, 279, 326, 438, 439, 446, 473, 474, 475, 483, 489, 491, 493, 495, 496, 497, 499, 501, 504, 506, 508, 510, 511, 512, 513, 514, 515, 516, 519, 520, 521, 522, 530, 532], "axis1": 484, "axis2": 484, "b": [11, 13, 14, 15, 17, 27, 31, 100, 198, 222, 265, 267, 314, 333, 334, 335, 336, 337, 338, 349, 352, 354, 422, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 494, 496, 499, 500, 501, 504, 514, 522, 523, 529], "b0": [74, 76, 100, 131], "b1": [74, 77, 100, 132, 133], "b2": [74, 78, 100, 133, 134], "b3": [74, 79, 100, 135], "b4": [74, 80, 100, 136], "b5": [74, 81, 100, 137], "b6": [74, 82, 100], "b7": [74, 83, 100], "b_": [11, 31], "b_1": [388, 390], "b_2": [388, 390], "b_i": [440, 441, 444], "b_k": 330, "b_v": 330, "back": [11, 16, 209, 293, 298, 330, 378, 379, 424, 438, 443, 491, 492, 493, 495, 508, 511, 515, 519], "backbon": [100, 135, 176, 177, 178, 208, 209, 210, 211, 212, 213, 214], "backbone_net": 210, "backbone_num_class": [209, 210], "backend": [110, 434, 452, 493], "background": [208, 212, 213], "backprop": 338, "backpropag": [10, 16, 19, 20, 22, 23, 25, 26, 28, 100, 228, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 265, 267, 293, 294, 298, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 333, 334, 335, 339, 341, 342, 344, 345, 346, 347, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 384, 394, 430, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 469, 473, 475, 490, 494, 495, 503, 506, 508, 510, 515, 517, 518, 525], "backward": [16, 228, 230, 294, 339, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 423, 434, 452, 453, 454, 495, 503, 510, 511, 516, 525], "balanc": [32, 33, 34, 35, 36, 37, 38, 39, 44, 47, 48, 51, 62, 63, 66, 75, 84, 85, 86, 87, 96, 100, 113, 114, 120, 121, 123, 126, 129, 159, 160, 161, 162, 163, 164, 198, 201, 210, 358], "bar": 407, "base": [3, 13, 14, 16, 17, 22, 23, 26, 27, 31, 42, 45, 47, 62, 69, 88, 89, 90, 91, 94, 97, 98, 99, 100, 101, 106, 107, 114, 120, 121, 123, 138, 145, 146, 158, 159, 160, 161, 162, 163, 164, 175, 182, 186, 192, 198, 202, 203, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 223, 224, 225, 226, 229, 231, 232, 233, 234, 247, 255, 265, 280, 281, 282, 307, 331, 339, 341, 349, 357, 358, 371, 372, 373, 374, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 411, 415, 416, 417, 419, 425, 435, 436, 440, 441, 442, 444, 445, 458, 469, 470, 471, 472, 473, 475, 488, 504, 506, 512, 523, 528, 529, 530, 531, 532], "base_dtyp": 419, "base_lr": 398, "base_width": [138, 139, 140, 141, 142, 143, 144, 156, 157, 158, 175], "baselin": 100, "basic": [29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 105, 147, 159, 160, 161, 162, 163, 164, 176, 177, 178, 203, 205, 208, 209, 210, 212, 213, 247, 248, 249, 250, 251, 252, 253, 257, 258, 280, 281, 282, 296, 300, 301, 302, 303, 304, 305, 306, 311, 312, 315, 316, 331, 336, 337, 338, 342, 371, 372, 373, 384, 454, 494, 526, 527, 528, 529, 530, 531, 532, 533], "basicblock": [147, 151, 154], "batch": [1, 2, 3, 11, 15, 16, 17, 23, 26, 28, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 89, 90, 91, 92, 98, 99, 165, 171, 172, 173, 174, 179, 216, 247, 248, 249, 250, 251, 252, 253, 255, 260, 261, 262, 265, 267, 268, 269, 270, 272, 273, 274, 275, 277, 278, 280, 281, 282, 286, 287, 288, 290, 291, 292, 293, 294, 298, 299, 300, 301, 302, 330, 331, 333, 334, 335, 339, 352, 354, 356, 357, 360, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 378, 379, 380, 381, 382, 386, 387, 388, 389, 390, 414, 423, 439, 446, 484, 526, 527, 528, 529, 531, 533], "batch_idx": [215, 216], "batch_norm": [264, 276, 362, 363, 364], "batch_norm1": 235, "batch_norm2": 235, "batch_siz": [1, 2, 3, 203, 307], "batch_tensor": 484, "batchnorm": [300, 301, 302], "batchnorm1d": [300, 351, 370], "batchnorm1dmodel": 362, "batchnorm2d": [105, 235, 301, 351, 370], "batchnorm2dmodel": 363, "batchnorm3d": [302, 351, 370], "batchnorm3dmodel": 364, "bbox_delta": [209, 210], "bbox_reg_mean": 212, "bbox_reg_std": 212, "bbox_to_delta": [218, 221], "bceloss": [351, 361], "becaus": [2, 420, 423, 429], "becom": [24, 229, 408, 416], "been": [327, 503], "befor": [10, 15, 23, 31, 165, 209, 230, 247, 331, 386, 388, 390, 397, 403, 407, 413, 427, 431, 506, 510, 527, 535], "begin": [1, 24, 218, 219, 237, 240, 241, 242, 258, 293, 317, 319, 320, 321, 322, 324, 343, 358, 359, 360, 377, 378, 379, 380, 381, 382, 414, 416, 422, 433, 440, 441, 443, 460, 465, 473, 475, 478, 491, 492, 503, 506, 516, 517, 518], "behav": [343, 358, 487], "behavior": [10, 16, 100, 232, 235, 247, 279, 331, 339, 400, 421, 433, 439, 450, 520, 535], "being": [234, 299, 341, 344, 345, 346, 347, 414, 421, 434, 495, 496, 501, 522], "belong": 0, "below": [26, 32, 33, 34, 35, 36, 37, 38, 39, 89, 90, 91, 98, 99, 101, 102, 103, 104, 213, 439, 448, 451, 518], "benchmark": [5, 6, 7, 8, 16, 106, 107, 122], "benefici": 235, "benefit": [123, 237, 394, 413], "bernoulli": [341, 344, 345, 346, 347, 426], "best": [122, 283, 311, 312, 315, 316], "beta": [275, 362, 363, 364, 365, 366, 367, 368, 369, 410, 411, 412, 413, 414], "beta1": [410, 411, 412, 413, 414], "beta2": [410, 411, 412, 413, 414], "beta_1": [410, 411, 412, 413, 414], "beta_2": [410, 411, 412, 413, 414], "beta_c": [275, 365], "better": [22, 57, 59, 61, 100, 121, 133, 134, 181, 189, 205, 238, 311, 312, 315, 316, 327, 342, 366, 367, 368, 394, 403, 404, 411, 413, 415, 527], "between": [44, 47, 51, 55, 63, 84, 85, 86, 87, 96, 100, 105, 114, 120, 121, 123, 129, 159, 160, 161, 162, 163, 164, 198, 201, 220, 222, 229, 248, 249, 250, 251, 252, 253, 255, 265, 270, 300, 301, 302, 303, 304, 305, 307, 323, 333, 334, 335, 336, 337, 338, 339, 341, 344, 345, 346, 347, 352, 356, 357, 358, 359, 360, 398, 403, 404, 407, 415, 416, 417, 433, 435, 436, 439, 442, 445, 447, 454, 489, 529, 530, 532, 533], "beyond": [10, 232, 403], "bia": [31, 55, 57, 59, 61, 124, 125, 131, 132, 133, 135, 136, 137, 180, 181, 248, 249, 250, 251, 252, 253, 265, 267, 274, 277, 278, 300, 301, 302, 303, 304, 305, 330, 333, 334, 335, 336, 337, 338, 352, 354, 362, 363, 364, 366, 367, 368, 369, 386, 388, 390, 410, 411, 412, 413, 414], "bias": [65, 100, 333, 334, 335, 354, 369, 394], "bias1": 233, "bias2": 233, "big": [224, 303, 304, 305], "bij": 11, "bik": 11, "bilinear": [215, 216, 264, 266, 293, 294, 298, 351, 355, 392], "bilinearmodel": 352, "bin": [498, 499, 500], "binari": [243, 268, 325, 341, 344, 345, 346, 347, 356], "binary_cross_entropi": [264, 271], "bit": 419, "bjk": 11, "black": 16, "blend": 123, "block": [31, 32, 33, 34, 35, 36, 37, 38, 39, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 92, 97, 100, 105, 106, 107, 109, 112, 113, 114, 116, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 197, 229, 251, 255, 257, 258, 300, 301, 302, 307, 333, 334, 335, 336, 337, 338, 339, 342, 420, 423], "block1": 394, "block2": 394, "block_arg": [147, 165], "block_cfg": 75, "block_config": 69, "block_siz": [257, 342], "block_typ": 31, "blue": 529, "bmatrix": [293, 443], "bn": [300, 301, 302], "bn_affin": [300, 301, 302], "bookkeep": 423, "bool": [1, 5, 6, 7, 8, 24, 28, 55, 74, 88, 89, 90, 124, 125, 131, 132, 133, 135, 136, 137, 138, 147, 180, 181, 208, 213, 229, 230, 247, 256, 258, 259, 260, 261, 262, 274, 277, 293, 294, 298, 300, 301, 302, 303, 304, 305, 330, 331, 333, 334, 335, 336, 337, 338, 343, 352, 354, 362, 363, 364, 366, 367, 368, 369, 386, 387, 388, 389, 390, 392, 397, 398, 399, 400, 401, 402, 403, 404, 410, 411, 415, 419, 421, 425, 427, 428, 429, 430, 432, 434, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 473, 474, 475, 483, 489, 490, 491, 492, 493, 498, 499, 500, 511, 516, 520, 525], "boolean": [503, 523], "boost": 119, "border": 294, "both": [31, 55, 57, 59, 61, 65, 100, 105, 110, 114, 125, 126, 180, 182, 183, 184, 185, 208, 248, 251, 252, 267, 281, 286, 290, 300, 318, 327, 333, 334, 336, 337, 338, 339, 372, 377, 378, 380, 381, 390, 392, 419, 423, 437, 438, 439, 443, 446, 448, 504, 511, 512, 533], "bottleneck": [69, 100, 112, 113, 116, 147, 148, 149, 150, 152, 153, 155, 156, 157, 158, 306], "bottleneck_cfg": 113, "bottom": 298, "bound": [207, 208, 211, 212, 213, 216, 218, 219, 220, 222, 223, 294, 312, 314, 316, 398, 416, 432, 434, 464, 465], "boundari": 220, "box": [4, 16, 207, 208, 211, 212, 213, 216, 217, 218, 219, 220, 222, 223], "boxes_a": 222, "boxes_b": 222, "branch": [55, 88, 89, 90, 100, 307], "break": [10, 394], "breakdown": 208, "brief": 535, "bright": 535, "bring": [10, 349], "broadcast": [15, 16, 346, 347, 446, 474, 483, 489, 509, 521], "broadcast_to": 502, "bucket": 464, "budget": [51, 135], "buffer": [16, 407, 413, 415, 417], "build": [16, 41, 75, 99, 100, 113, 114, 147, 148, 149, 150, 151, 152, 153, 154, 155, 158, 175, 176, 177, 178, 191, 211, 212, 225, 229, 232, 235, 394, 535], "built": [3, 16, 148, 152, 153, 235, 394, 419, 423, 452, 453], "burg": 8, "c": [5, 6, 8, 11, 13, 31, 100, 147, 159, 160, 161, 162, 163, 164, 176, 177, 178, 210, 213, 214, 215, 216, 255, 257, 260, 261, 262, 269, 273, 274, 275, 277, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 298, 299, 306, 339, 346, 347, 349, 357, 360, 362, 363, 364, 365, 366, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 398, 422, 501, 522, 527], "c2": 214, "c3": 214, "c4": 214, "c5": 214, "c_": [11, 211, 333, 334, 335, 336, 337, 338], "c_in": [248, 249, 250, 251, 252, 253, 300, 301, 302], "c_out": [248, 249, 250, 251, 252, 253], "calcul": [0, 1, 17, 230, 392, 408, 409, 412, 413, 414, 423, 429], "calculu": [18, 25], "call": [1, 16, 216, 229, 252, 337, 396, 421, 423, 424, 427, 435, 436, 439, 440, 441, 442, 444, 445], "callabl": [131, 132, 133, 135, 136, 137, 212, 217, 386, 388, 390, 395, 398, 401, 424, 434, 524], "can": [0, 2, 3, 4, 13, 14, 16, 18, 20, 22, 23, 25, 26, 28, 55, 74, 100, 113, 119, 120, 122, 123, 147, 156, 157, 171, 172, 173, 174, 203, 204, 209, 210, 213, 222, 228, 230, 231, 232, 233, 234, 235, 240, 248, 249, 250, 258, 293, 294, 299, 307, 318, 321, 323, 328, 333, 334, 335, 336, 339, 366, 367, 368, 378, 379, 380, 381, 382, 384, 387, 394, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 421, 422, 423, 428, 432, 433, 434, 439, 449, 450, 451, 452, 453, 455, 457, 458, 474, 477, 483, 484, 489, 491, 492, 494, 501, 504, 506, 508, 509, 511, 515, 521, 522, 524, 525, 528, 530, 531, 532, 535], "candid": [213, 217], "cannot": [19, 20, 22, 23, 26, 27, 28, 425, 495], "canocical_scal": 215, "canon": 215, "canonical_level": 215, "cap": [222, 323], "capabl": [10, 31, 53, 100, 145, 146, 447, 448, 451, 455, 456, 457, 458], "capac": [42, 43, 44, 50, 54, 100, 105, 106, 107, 108, 110, 111, 119, 127, 132, 136, 137, 156, 157, 158, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 179, 188, 199, 227], "captur": [16, 31, 55, 57, 59, 61, 65, 100, 105, 126, 127, 128, 175, 180, 182, 183, 184, 185, 186, 187, 190, 224, 255, 333, 334, 335, 352], "cardin": [100, 138, 139, 140, 141, 142, 143, 144, 145, 146, 158, 159, 160, 161, 162, 163, 164, 175], "care": 55, "carefulli": [396, 420], "cartesian": 504, "case": [3, 24, 101, 113, 115, 237, 240, 241, 242, 251, 252, 258, 317, 319, 320, 321, 322, 324, 343, 358, 359, 360, 377, 378, 379, 380, 381, 382, 394, 402, 409, 414, 416, 422, 440, 441, 446, 460, 465, 473, 475, 478, 491, 492, 493, 503, 506, 516, 517, 518, 535], "cast": 452, "categor": [296, 384], "categori": [7, 106, 107, 148, 149, 150, 151, 152, 153, 154, 155, 208, 209, 212, 213, 384, 419], "caus": [3, 25, 396, 407, 415, 417], "causal": [247, 331], "cautiou": [0, 10], "cdot": [16, 18, 19, 22, 23, 24, 27, 55, 105, 211, 215, 218, 224, 237, 238, 240, 242, 243, 247, 248, 249, 250, 251, 252, 253, 265, 267, 275, 280, 281, 282, 283, 286, 287, 288, 290, 291, 292, 293, 296, 298, 306, 315, 316, 318, 319, 320, 325, 327, 331, 339, 341, 352, 354, 356, 357, 358, 360, 362, 363, 364, 365, 366, 367, 368, 369, 384, 397, 398, 399, 401, 402, 404, 408, 409, 410, 411, 412, 413, 414, 416, 437, 438, 439, 442, 444, 446, 477], "ceil": 459, "center": [219, 293, 294, 299, 328, 415, 526, 535], "centercrop": [534, 535], "certain": [19, 238, 247, 265, 327, 331, 352, 390, 403, 410, 411, 421, 473, 475], "cfg": [114, 117, 118], "chain": [16, 22, 23, 235, 524, 535], "challeng": [7, 100, 126], "cham": 100, "chanc": [529, 530, 532], "chang": [10, 218, 270, 293, 294, 358, 402, 416, 420, 422, 424, 434, 507, 509, 521, 529, 535], "chanlumerico": 16, "channel": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 65, 66, 67, 68, 69, 74, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 115, 117, 118, 124, 125, 130, 131, 132, 133, 134, 135, 136, 137, 138, 145, 146, 147, 158, 159, 160, 161, 162, 163, 164, 169, 171, 172, 173, 174, 179, 180, 181, 192, 203, 208, 210, 212, 213, 214, 248, 249, 250, 251, 252, 253, 255, 260, 261, 262, 274, 275, 277, 280, 281, 282, 286, 287, 288, 290, 291, 292, 293, 294, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 333, 334, 335, 336, 337, 338, 346, 347, 362, 363, 364, 365, 366, 367, 368, 371, 377, 378, 379, 380, 381, 382, 527, 529, 533], "character": [156, 157], "check": [16, 421, 434, 526, 528], "checkpoint": 406, "chen": [55, 100], "choic": [121, 123, 504], "choleski": 21, "chollet": 100, "choos": [100, 493, 523], "chosen": [341, 342, 396, 523], "christian": 100, "christoph": 8, "chu": 100, "chun": 100, "chunk": 502, "cifar": [5, 6, 210], "cifar10": 9, "cifar100": 9, "cifar100_train": 6, "cifar10_train": 5, "clariti": [13, 14, 15], "class": [3, 4, 16, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 98, 99, 102, 103, 104, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 206, 207, 209, 210, 214, 215, 216, 217, 226, 227, 244, 258, 269, 273, 394, 406, 423, 424, 427, 535], "classic": [104, 213], "classif": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535], "classifi": [29, 88, 89, 90, 101, 102, 103, 104, 105, 147, 158, 175, 192, 203, 205, 207, 208, 209, 210, 211, 212, 213], "clean": 423, "cleaner": [1, 439], "cleanli": 105, "cleanup": 420, "clear": [230, 449, 450, 454], "clf_in_featur": 101, "clf_layer": 101, "clip": [218, 220, 299, 319, 323, 416, 459], "clip_box": 221, "clockwis": 299, "close": [22, 25, 324, 356, 415], "closer": 317, "closur": [395, 406], "cloth": 7, "cls_logit": [209, 210], "cnn": [31, 57, 59, 61, 100, 209, 210, 217], "co": [100, 397, 459, 479], "coars": 100, "coatnet": [32, 33, 34, 35, 36, 37, 38, 39], "coatnet_0": 100, "coatnet_1": 100, "coatnet_2": 100, "coatnet_3": 100, "coatnet_4": 100, "coatnet_5": 100, "coatnet_6": 100, "coatnet_7": 100, "code": [10, 16, 23, 231, 233, 235, 420, 421, 423, 433], "coeffici": [27, 74, 298, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417], "col": 255, "collaps": 10, "collect": [4, 17, 207, 231, 232, 234, 235, 406], "color": [213, 217, 529, 535], "colorjitt": 535, "column": [19, 20, 22, 26, 27, 28, 255, 339, 451, 501, 504], "com": [7, 8, 16], "combin": [1, 3, 13, 31, 55, 91, 97, 98, 100, 105, 123, 127, 179, 207, 211, 232, 235, 237, 238, 300, 301, 302, 306, 307, 318, 339, 342, 349, 357, 394, 413, 414, 474, 483, 489, 496, 535], "combined_dataset": [0, 1], "common": [182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 255, 299, 406, 419, 535], "commonli": [111, 112, 113, 115, 116, 117, 118, 121, 123, 219, 238, 243, 244, 245, 248, 250, 251, 252, 253, 258, 265, 272, 274, 277, 294, 296, 299, 306, 315, 316, 319, 320, 323, 326, 331, 335, 336, 337, 356, 359, 360, 377, 378, 379, 380, 381, 382, 384, 386, 422, 455, 513, 525, 526, 527, 528, 530, 531, 532, 535], "compact": [45, 46, 48, 53, 96, 108, 121, 131, 132], "compar": [31, 44, 45, 68, 100, 108, 125, 133, 156, 157, 205, 209, 433, 514], "compat": [4, 10, 11, 16, 17, 175, 349, 353, 369, 394, 422, 433, 454, 494, 525, 535], "competit": [46, 52, 53], "complet": [225, 386, 387, 389], "complex": [2, 3, 10, 11, 16, 20, 31, 43, 49, 54, 99, 106, 107, 122, 125, 126, 127, 128, 129, 133, 134, 135, 147, 150, 153, 154, 167, 169, 187, 209, 227, 228, 230, 231, 232, 235, 241, 247, 299, 309, 313, 314, 315, 316, 322, 331, 380, 382, 394, 401, 406, 410, 411, 412, 413, 414, 416, 419, 425, 427, 432, 434, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 465, 490, 493, 503, 525, 535], "complex64": 419, "compon": [25, 88, 89, 90, 91, 97, 98, 99, 108, 109, 208, 213, 217, 225, 229, 232, 406, 434, 535], "compos": [5, 6, 7, 8, 105, 203, 333, 334, 335, 377, 378, 379, 380, 381, 382, 394, 523, 535], "compound": 75, "comprehens": [3, 62], "compris": [156, 157], "compromis": [120, 123], "comput": [10, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 31, 44, 45, 46, 48, 49, 51, 52, 55, 65, 93, 96, 100, 105, 111, 113, 114, 117, 118, 119, 120, 121, 122, 123, 125, 126, 129, 130, 134, 145, 146, 147, 158, 159, 160, 161, 162, 163, 164, 165, 171, 172, 173, 174, 179, 180, 199, 200, 208, 211, 212, 218, 219, 222, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 251, 255, 265, 267, 268, 269, 270, 272, 273, 274, 275, 277, 279, 280, 281, 282, 283, 284, 285, 294, 298, 300, 301, 302, 303, 304, 305, 306, 307, 311, 312, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 330, 331, 333, 334, 335, 337, 339, 341, 342, 344, 345, 346, 347, 352, 354, 356, 357, 358, 359, 360, 362, 363, 364, 366, 367, 368, 369, 374, 375, 376, 377, 378, 379, 380, 381, 382, 386, 387, 388, 389, 390, 394, 395, 397, 398, 399, 400, 401, 402, 404, 406, 407, 415, 420, 421, 422, 423, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 454, 455, 456, 457, 458, 460, 461, 462, 463, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 494, 504, 506, 508, 515, 525, 535], "computation": [3, 13, 25, 148, 319, 320, 349], "compute_grad": 495, "compute_loss": [406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417], "concat": 330, "concaten": [0, 248, 249, 250, 330, 446, 501, 502, 514, 522], "concept": [25, 100, 112, 207, 446], "concis": [10, 11, 13, 15], "concurr": 420, "cond": 523, "condit": [18, 19, 22, 523], "confer": [100, 211], "confid": [208, 223], "config": 192, "configur": [16, 30, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 96, 98, 99, 101, 102, 103, 104, 105, 113, 114, 115, 116, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 198, 199, 200, 201, 202, 204, 206, 208, 209, 210, 212, 213, 227, 234, 300, 301, 302, 331, 419], "confirm": 16, "conjunct": [255, 360], "connect": [29, 40, 69, 70, 71, 72, 73, 74, 75, 91, 97, 98, 99, 100, 101, 102, 103, 104, 105, 147, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 175, 176, 177, 178, 192, 203, 205, 208, 212, 213, 214, 217, 251, 267, 306, 307, 333, 334, 335, 336, 337, 338, 354, 388, 390], "consecut": 192, "consid": [3, 22, 25, 69, 119, 120, 121, 123, 209, 235, 311, 312, 315, 316, 339, 394, 416, 419, 421, 449, 450, 517, 518, 535], "consider": 25, "consist": [2, 4, 7, 11, 14, 29, 55, 102, 103, 104, 147, 213, 228, 280, 281, 282, 307, 330, 371, 372, 373, 386, 388, 390, 431, 433, 506, 526, 533, 535], "consistent_tensor": 433, "constant": [268, 269, 274, 275, 277, 278, 279, 310, 324, 356, 357, 362, 363, 364, 365, 366, 367, 368, 369, 386, 388, 390, 404, 408, 409, 410, 411, 412, 413, 414, 415, 452, 453, 493, 503, 506], "constant_pad": 506, "constrain": [46, 48, 51, 121, 220], "constraint": [1, 13, 31, 111, 113, 120, 134, 307, 349], "construct": [16, 70, 71, 72, 73, 92, 106, 107, 108, 123, 138, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 176, 177, 178, 193, 194, 195, 196, 209, 210, 214, 225, 232, 394, 448, 508, 515, 517, 518], "constructor": [16, 32, 33, 34, 35, 36, 37, 38, 39, 70, 71, 72, 73, 84, 85, 86, 87, 106, 107, 108, 109, 110, 115, 116, 117, 118, 139, 140, 141, 142, 143, 144, 145, 146, 156, 157, 171, 172, 173, 174, 179, 193, 194, 195, 196], "consumpt": 123, "contain": [1, 5, 6, 7, 8, 19, 20, 25, 26, 27, 28, 97, 101, 147, 158, 159, 160, 161, 162, 163, 164, 165, 175, 192, 208, 215, 216, 219, 222, 223, 229, 231, 232, 233, 234, 235, 244, 247, 255, 265, 267, 268, 269, 273, 294, 296, 298, 356, 357, 360, 395, 427, 435, 436, 437, 438, 440, 441, 442, 443, 445, 447, 450, 454, 460, 461, 462, 463, 466, 467, 468, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 485, 486, 487, 489, 495, 497, 500, 504, 512, 516], "content": [207, 299], "context": [100, 105, 186, 188, 189, 293, 420, 421, 423, 434], "contextmanag": 420, "contextu": [66, 67, 68, 126, 182, 183, 184, 185], "contigu": [257, 342, 507], "continu": [321, 399, 404, 430, 470], "contract": [11, 13], "contrast": [225, 366, 367, 368, 535], "contribut": [257, 298, 341, 344, 345, 346, 347, 377, 380, 381, 382, 407, 413, 487], "control": [10, 15, 31, 40, 125, 126, 158, 217, 307, 317, 358, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 421, 433, 434, 452, 525, 535], "conv": [97, 100, 165, 208, 212, 213, 214, 300, 301, 302, 363, 364], "conv1": [102, 103, 104, 235, 333, 334, 335, 377, 378, 379, 380, 381, 382], "conv1d": [254, 264, 300, 303, 336, 340, 351, 377, 380], "conv1dmodel": 333, "conv2": [102, 103, 104, 235, 333, 334, 335], "conv2d": [208, 212, 213, 232, 235, 254, 264, 301, 304, 337, 340, 349, 351, 363, 378, 381, 394], "conv2dmodel": 334, "conv3d": [254, 264, 302, 305, 340, 351, 364, 379, 382], "conv3dmodel": 335, "conv_bia": [300, 301, 302], "conv_config": 192, "conv_lay": [101, 232], "conv_transpose1d": [254, 264], "conv_transpose2d": [254, 264], "conv_transpose3d": [254, 264], "convblock": 394, "convbnrelu1d": 308, "convbnrelu2d": 308, "convbnrelu3d": 308, "conveni": [4, 30, 56, 57, 58, 59, 60, 61, 62, 63, 64, 206, 493], "convent": [11, 439], "converg": [25, 328, 396, 397, 398, 400, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 527], "convers": [357, 360, 529, 535], "convert": [5, 6, 7, 8, 55, 192, 228, 230, 244, 296, 326, 504, 524, 525, 529, 535], "convnet": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535], "convnetwork": 232, "convnext": [41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], "convnext_bas": 100, "convnext_larg": 100, "convnext_smal": 100, "convnext_tini": 100, "convnext_v2": [46, 47, 48, 49, 50, 51, 52, 53], "convnext_v2_atto": 100, "convnext_v2_bas": 100, "convnext_v2_femto": 100, "convnext_v2_hug": 100, "convnext_v2_larg": 100, "convnext_v2_nano": 100, "convnext_v2_pico": 100, "convnext_v2_tini": 100, "convnext_xlarg": 100, "convolut": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 55, 57, 59, 61, 65, 66, 67, 68, 69, 74, 76, 77, 78, 79, 80, 81, 82, 83, 89, 90, 92, 97, 101, 102, 103, 104, 105, 111, 113, 117, 118, 119, 120, 121, 122, 123, 138, 145, 146, 147, 158, 159, 160, 161, 162, 163, 164, 165, 171, 172, 173, 174, 175, 179, 192, 203, 205, 206, 208, 211, 212, 213, 232, 248, 249, 250, 251, 252, 253, 255, 300, 301, 302, 303, 304, 305, 306, 307, 333, 334, 335, 336, 337, 338, 339, 378, 379, 381, 382, 484, 506], "convolv": [248, 249, 250, 251, 252, 333, 334, 335, 336, 337, 338], "convtranspose1d": [340, 351], "convtranspose2d": [338, 340, 351], "convtranspose3d": [340, 351], "cooldown": 403, "coordin": [216, 218, 219, 220, 222, 293, 294, 499, 504, 505], "copi": [10, 494, 519], "core": [0, 1, 2, 3, 55, 229, 394, 395, 419, 434, 535], "corinna": 8, "corner": [293, 294, 298, 392, 526, 528], "correct": [231, 357, 360, 410, 411, 412, 413, 414, 503, 511, 517, 518, 525], "correctli": [25, 229, 231, 232, 233, 234, 235, 357, 360, 433, 494, 495], "correl": [336, 337], "correspond": [0, 1, 2, 5, 6, 7, 8, 20, 114, 115, 117, 118, 156, 157, 176, 177, 178, 182, 183, 184, 185, 191, 215, 223, 231, 233, 235, 237, 238, 240, 241, 242, 243, 244, 245, 248, 249, 250, 255, 265, 267, 296, 298, 319, 322, 326, 352, 354, 362, 363, 364, 366, 367, 368, 378, 379, 384, 407, 415, 417, 419, 425, 437, 438, 440, 441, 444, 464, 469, 470, 471, 472, 479, 481, 493, 494, 495, 501, 505, 506, 508, 510, 515, 519, 522], "cort": 8, "cosh": [459, 480, 486], "cosin": [397, 461, 466, 467, 479], "cosineannealinglr": 405, "cost": [65, 100, 111, 113, 114, 120, 121, 123, 134, 158, 303, 304, 305, 420], "could": 229, "count": [100, 114, 131, 132, 133, 135, 136, 137, 211, 224, 397, 402, 420, 493, 496, 498, 499], "counterclockwis": [299, 531], "cover": [17, 248, 249, 250, 427], "coverag": [105, 280, 281, 282], "cpu": [11, 16, 228, 230, 419, 425, 427, 428, 429, 430, 432, 434, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 490, 493, 505], "craft": 16, "creat": [2, 3, 16, 29, 30, 31, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 98, 99, 102, 103, 104, 113, 115, 116, 117, 118, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 179, 192, 193, 194, 195, 196, 204, 205, 206, 210, 226, 227, 228, 229, 232, 235, 293, 307, 323, 330, 386, 387, 388, 389, 390, 394, 422, 423, 424, 433, 447, 451, 452, 453, 454, 455, 456, 457, 458, 494, 504, 514, 524, 535], "creation": [84, 85, 86, 87, 232, 235, 420, 535], "criterion": [356, 357, 358, 359, 360], "critic": [25, 121, 136, 406, 433], "crop": [212, 213, 215, 216, 526, 528, 535], "cross": [55, 100, 180, 268, 269, 336, 337, 356, 357, 386, 387, 388], "cross_entropi": [264, 271], "crossattent": 55, "crossentropyloss": [210, 351, 361], "crossvit": [56, 57, 58, 59, 60, 61, 62, 63, 64], "crossvit_15": 100, "crossvit_15_dagg": 100, "crossvit_18": 100, "crossvit_18_dagg": 100, "crossvit_9": 100, "crossvit_9_dagg": 100, "crossvit_bas": 100, "crossvit_smal": 100, "crossvit_tini": 100, "crucial": [10, 396], "cube": 459, "cumul": [238, 318], "cup": 222, "current": [229, 397, 398, 399, 400, 401, 402, 403, 404, 407, 410, 416, 421, 493], "custom": [4, 16, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 69, 76, 77, 78, 79, 80, 81, 82, 83, 93, 94, 95, 96, 98, 99, 101, 105, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 166, 167, 168, 169, 170, 171, 172, 173, 174, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 198, 199, 200, 201, 202, 204, 205, 206, 208, 210, 212, 213, 228, 231, 232, 233, 234, 235, 299, 300, 301, 302, 317, 321, 339, 386, 394, 398, 401, 420, 433, 451, 454, 512], "custom_config": 192, "custom_decod": 386, "custom_encod": 386, "custom_lenet": 101, "customiz": [131, 535], "custommodul": 228, "customnetwork": 231, "customparametermodel": [233, 234], "cut": 122, "cv": 207, "cvf": 100, "cvpr": 100, "cvt": [66, 67, 68], "cvt_13": 100, "cvt_21": 100, "cvt_w24": 100, "cvtspec": 65, "cycl": 398, "cycle_momentum": 398, "cyclic": [397, 398, 510], "cycliclr": 405, "d": [31, 100, 247, 250, 253, 262, 282, 285, 288, 292, 302, 331, 338, 339, 364, 368, 369, 373, 376, 379, 382, 422, 448, 477, 500, 505, 531], "d_": [224, 250, 253, 282, 285, 288, 292, 330, 335, 338, 373, 376, 379, 382, 386, 387, 388, 389, 390], "d_1": [13, 14, 15, 349, 369], "d_2": [13, 14, 15, 349, 369], "d_h": [330, 339, 388, 390], "d_k": [31, 55, 105], "d_model": [197, 225, 226, 227, 386, 387, 388, 389, 390], "d_n": [13, 14, 15, 349, 369], "d_out": [250, 253, 288, 292], "d_w": 339, "dag": 16, "dai": 100, "dampen": [407, 415, 417], "data": [4, 5, 6, 7, 8, 10, 16, 23, 100, 187, 207, 224, 228, 230, 234, 245, 248, 250, 253, 255, 261, 262, 267, 296, 299, 300, 301, 302, 307, 322, 328, 333, 334, 335, 354, 368, 377, 379, 382, 389, 395, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 422, 427, 433, 434, 435, 436, 442, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 477, 484, 490, 493, 494, 498, 506, 507, 508, 509, 511, 512, 513, 515, 524, 525, 528, 529, 530, 531, 532, 535], "data_dtyp": 419, "databas": 8, "dataload": [2, 3], "dataset": [3, 5, 6, 7, 8, 43, 84, 85, 86, 87, 102, 103, 104, 105, 106, 107, 110, 111, 114, 119, 126, 137, 147, 148, 149, 150, 151, 152, 153, 154, 155, 209, 210, 299, 409, 524, 526, 535], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 443, "debug": [16, 235, 421, 431, 535], "decai": [342, 396, 397, 399, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417], "decim": 477, "declar": [13, 14, 15, 349], "decod": [225, 251, 252, 253, 336, 337, 338, 386, 387, 388], "decoder3d": 338, "decoder_lay": [387, 388], "decoderlay": 387, "decompos": [18, 26, 28], "decomposit": [17, 18, 22, 25, 26, 28], "deconv": 338, "deconv1": [336, 337], "deconv1d": 336, "deconv2d": 337, "deconv3d": 338, "deconvolut": [251, 252, 253, 336, 337], "decor": [159, 160, 161, 162, 163, 164, 423, 424], "decoupl": [100, 408, 409, 411, 412, 413, 414], "decreas": [214, 398, 403, 410, 411, 416], "deep": [1, 3, 4, 10, 14, 16, 94, 95, 97, 100, 126, 147, 148, 149, 150, 152, 153, 159, 160, 161, 162, 163, 164, 166, 167, 170, 207, 224, 274, 318, 324, 349, 394, 396, 433, 454, 512, 517, 518, 524, 525, 535], "deepen": 135, "deeper": [67, 89, 91, 99, 100, 106, 107, 125, 128, 133, 136, 147, 154, 187, 188, 209, 324], "defdefault": [1, 5, 6, 7, 8, 14, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 240, 244, 247, 248, 249, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 268, 269, 270, 272, 273, 274, 275, 277, 278, 279, 286, 287, 288, 290, 291, 292, 293, 294, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 311, 312, 313, 314, 315, 316, 317, 321, 326, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 352, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 392, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 413, 421, 425, 427, 428, 429, 430, 432, 434, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 465, 473, 474, 475, 477, 483, 488, 489, 490, 491, 492, 493, 495, 496, 498, 499, 501, 504, 506, 508, 510, 511, 512, 514, 516, 517, 518, 519, 520, 522, 525, 529, 530, 532], "defer": 16, "defin": [1, 3, 4, 10, 14, 16, 31, 40, 55, 65, 69, 75, 88, 89, 90, 91, 97, 98, 99, 101, 113, 123, 138, 147, 165, 176, 177, 178, 192, 212, 213, 231, 232, 233, 234, 235, 258, 318, 320, 323, 327, 356, 357, 358, 359, 360, 377, 392, 394, 396, 398, 401, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 429, 430, 444, 450, 465, 488, 524, 535], "definit": [16, 18, 300, 301, 302, 535], "degre": [299, 531, 535], "delai": 407, "deliv": [16, 121, 122, 137], "delta": [13, 218, 219, 244, 270, 326, 349, 358, 408], "delta_": [13, 244, 326, 349], "demand": [110, 122, 135, 136], "demonstr": [17, 171, 172, 173, 174, 179, 207, 394], "demystifi": 16, "denomin": [274, 275, 277, 278, 300, 301, 302, 362, 363, 364, 365, 366, 367, 368, 369, 386, 388, 390, 408, 409, 410, 411, 412, 413, 414, 415, 436], "denot": [23, 145, 146, 325, 330, 333, 334, 335, 341, 344, 345, 346, 347, 488], "dens": [69, 70, 71, 72, 73, 100, 180, 182, 183, 184, 185, 208, 212, 258, 296, 384, 409], "densenet": [70, 71, 72, 73, 306], "densenet_121": 100, "densenet_169": 100, "densenet_201": 100, "densenet_264": 100, "densiti": [238, 318, 498, 499, 500], "depend": [11, 16, 23, 24, 31, 100, 105, 113, 126, 127, 180, 182, 183, 184, 185, 186, 187, 224, 234, 268, 269, 270, 272, 273, 298, 333, 437, 446, 448, 473, 475, 508, 515, 516, 528, 529, 533], "deploy": [123, 131, 134], "depth": [31, 40, 41, 42, 43, 44, 45, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 74, 75, 92, 100, 105, 106, 107, 108, 109, 110, 119, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 197, 232, 250, 253, 258, 262, 282, 285, 288, 292, 335, 343, 364, 368, 373, 379, 382], "depth_coef": 74, "depthseparableconv1d": 308, "depthseparableconv2d": 308, "depthseparableconv3d": 308, "depthwis": [31, 40, 65, 66, 67, 68, 92, 100, 111, 203, 248, 249, 250, 251, 252, 303, 304, 305], "depthwise_separ": [303, 304, 305], "der": 100, "deriv": [16, 25, 26, 244, 280, 281, 282, 318, 326, 328, 333, 334, 335, 352, 354, 424], "descend": [28, 511, 516], "descent": [407, 417], "describ": [10, 11, 19, 20, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64], "descript": [207, 535], "deseri": 228, "design": [3, 4, 14, 17, 29, 30, 40, 41, 43, 45, 46, 47, 48, 49, 50, 51, 53, 55, 66, 67, 68, 84, 85, 86, 87, 89, 90, 91, 93, 96, 100, 102, 103, 104, 105, 106, 107, 113, 114, 119, 120, 121, 122, 123, 124, 126, 129, 136, 148, 149, 150, 151, 152, 153, 154, 155, 166, 169, 180, 187, 188, 199, 203, 206, 207, 224, 230, 232, 233, 234, 235, 237, 242, 324, 341, 394, 535], "desir": [10, 15, 204, 215, 228, 280, 281, 282, 283, 284, 285, 342, 371, 372, 373, 374, 392, 396, 452, 453, 488, 490], "despit": 279, "destin": 229, "det": [17, 21], "det_a": 19, "detail": [57, 59, 61, 65, 126, 187, 208, 406, 433, 439], "detect": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535], "detector": [209, 210], "determin": [0, 17, 18, 19, 55, 101, 105, 156, 157, 280, 281, 282, 283, 311, 312, 315, 316, 333, 334, 335, 371, 372, 373, 378, 379, 381, 382, 398, 415, 421, 425, 428, 429, 430, 432, 446, 449, 450, 512, 520, 526, 528], "determinist": 299, "develop": [10, 16, 114, 394, 433, 535], "deviat": [311, 313, 315, 524, 527, 535], "devic": [11, 112, 113, 119, 120, 228, 230, 419, 425, 427, 428, 429, 430, 432, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 464, 470, 477, 490, 505], "diag": [25, 459], "diagon": [25, 26, 28, 448, 451, 487, 517, 518], "diagonaliz": 20, "dict": [10, 13, 14, 15, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 98, 99, 101, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 147, 156, 157, 159, 160, 161, 162, 163, 164, 165, 171, 172, 173, 174, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 198, 199, 200, 201, 202, 204, 206, 209, 210, 229, 231, 233, 349, 353, 395, 400], "dictionari": [101, 114, 121, 229, 230, 231, 233, 235, 395, 400], "differ": [0, 10, 14, 23, 55, 66, 67, 68, 88, 92, 100, 101, 113, 114, 120, 121, 124, 126, 127, 128, 129, 130, 171, 172, 173, 174, 179, 181, 190, 215, 232, 235, 244, 265, 298, 307, 326, 352, 359, 396, 403, 406, 419, 422, 431, 433, 445, 458, 489, 513, 535], "differenti": [18, 27, 222, 223, 293, 294, 296, 318, 394, 425, 427, 428, 429, 430, 432, 434, 447, 449, 450, 455, 457, 464, 470, 477, 505, 520, 523], "difficult": 128, "digit": [7, 8, 100, 104], "dilat": [248, 249, 250, 251, 252, 253, 300, 301, 302, 303, 304, 305, 333, 334, 335, 336, 337, 338, 339], "dilation_height": 255, "dilation_width": 255, "dim": [40, 41, 55, 92, 247, 279, 331, 357, 360, 510], "dim_feedforward": [225, 386, 388, 390], "dimens": [10, 13, 14, 15, 19, 20, 22, 23, 26, 27, 28, 29, 40, 42, 43, 44, 45, 54, 55, 66, 67, 68, 100, 105, 109, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 147, 158, 175, 180, 181, 182, 183, 192, 197, 205, 210, 213, 214, 223, 225, 230, 244, 247, 252, 253, 265, 267, 274, 275, 277, 278, 279, 281, 282, 284, 285, 298, 306, 307, 326, 330, 331, 333, 334, 335, 336, 339, 342, 349, 362, 363, 364, 366, 367, 368, 369, 372, 373, 375, 376, 378, 379, 380, 381, 382, 386, 388, 389, 390, 392, 422, 428, 432, 434, 438, 446, 449, 473, 474, 475, 483, 484, 487, 488, 489, 491, 492, 494, 495, 496, 500, 501, 505, 506, 508, 510, 513, 514, 515, 519, 521, 522, 526, 528, 533], "dimension": [10, 11, 23, 25, 26, 28, 92, 213, 248, 249, 250, 251, 252, 253, 286, 287, 288, 290, 291, 292, 307, 330, 333, 334, 335, 336, 339, 345, 346, 347, 362, 363, 364, 366, 367, 368, 377, 378, 379, 380, 381, 382, 386, 388, 390, 422, 427, 438, 439, 443, 446, 448, 469, 474, 483, 484, 487, 489, 497, 500, 507, 508, 513, 515, 517, 518], "diminish": [396, 409], "direct": [16, 20, 356, 357, 358, 359, 360, 407, 415, 416, 417, 510], "directli": [84, 85, 86, 87, 100, 212, 231, 232, 233, 234, 298, 349, 392, 408, 409, 411, 412, 413, 414, 431, 433, 490, 519, 535], "directori": [3, 4, 5, 6, 7, 8], "disabl": [258, 342, 343, 421, 423], "discard": [210, 213], "discontinu": 478, "discrep": [356, 357, 360], "discret": [425, 429, 433, 470], "disk": 3, "displai": [30, 56, 57, 58, 59, 60, 61, 62, 63, 64, 206], "disrupt": 464, "distinct": [105, 114, 225], "distribut": [187, 238, 244, 257, 298, 311, 312, 313, 314, 315, 316, 318, 326, 333, 334, 335, 341, 342, 344, 345, 346, 347, 352, 354, 357, 360, 377, 378, 379, 425, 428, 429, 430, 432, 433, 474, 483, 487, 489, 511, 514, 527, 529, 530, 531, 532], "div": 459, "divers": [47, 100, 105, 299, 530, 532, 535], "diversifi": 535, "divid": [1, 25, 100, 105, 180, 181, 197, 198, 199, 200, 201, 202, 232, 235, 244, 248, 249, 250, 252, 326, 356, 357, 358, 359, 360, 436, 495, 512, 527], "divis": [25, 248, 249, 250, 253, 279, 330, 341, 344, 345, 346, 347, 386, 388, 390, 408, 409, 410, 411, 412, 413, 414, 415, 436, 512], "dl": 16, "do": [25, 27, 228, 231, 232, 233, 234, 256, 259, 260, 261, 394, 396, 414, 421, 423, 458, 487, 506], "doc": 207, "document": [4, 100, 406, 433], "doe": [23, 24, 25, 26, 28, 209, 210, 225, 228, 231, 232, 233, 234, 235, 279, 316, 403, 410, 411, 416, 420, 421, 423, 425, 428, 429, 430, 431, 432, 447, 448, 449, 450, 451, 455, 456, 457, 458, 493, 494, 503, 505, 509, 510, 520], "doi": 100, "domain": [4, 134], "dosovitskii": 100, "dot": [11, 13, 14, 15, 20, 23, 124, 125, 231, 232, 233, 234, 235, 247, 330, 331, 349, 369, 380, 381, 382, 438, 443, 446, 459, 496, 501, 514, 522], "down": [3, 214, 394, 470, 533], "download": [4, 5, 6, 7, 8], "downsampl": 138, "draw": 207, "drawback": 237, "drawn": [428, 429, 430, 432, 433, 531], "drop": [40, 41, 92, 105, 257, 258, 341, 342, 343, 344, 345, 346, 347], "drop_block": [263, 264], "drop_path": [40, 41, 105, 263, 264, 343], "drop_path_r": [55, 75, 92, 124, 125, 180, 181], "drop_prob": 343, "drop_rat": [55, 92, 124, 125, 180, 181], "dropblock": [257, 348, 351], "dropout": [29, 55, 74, 75, 84, 85, 86, 87, 90, 92, 100, 105, 108, 109, 124, 125, 180, 181, 192, 197, 205, 208, 212, 225, 238, 247, 256, 260, 261, 262, 330, 331, 341, 342, 345, 346, 347, 386, 388, 390], "dropout1d": [263, 264, 348, 351], "dropout1dmodel": 345, "dropout2d": [263, 264, 348, 351], "dropout3d": [263, 264, 348, 351], "dropout_p": [247, 331], "dropout_prob": 90, "dropout_r": 197, "dropoutmodel": 344, "droppath": [348, 351], "dtype": [223, 228, 230, 296, 384, 419, 427, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 490, 505, 520, 525], "due": [23, 25, 69, 110, 122, 248, 249, 251, 252, 322, 470, 531], "dummi": [209, 212, 213], "duplic": [10, 15, 223, 231, 233], "dure": [3, 16, 19, 20, 22, 25, 26, 28, 31, 75, 88, 89, 90, 100, 125, 147, 209, 210, 213, 217, 218, 228, 229, 230, 231, 232, 233, 234, 235, 244, 256, 257, 258, 259, 260, 261, 262, 274, 277, 299, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 333, 334, 335, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 384, 392, 394, 396, 400, 403, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 420, 421, 423, 427, 434, 435, 464, 470, 473, 474, 475, 483, 489, 503, 510, 525, 528, 531, 535], "dy": [240, 321], "dynam": [0, 2, 3, 16, 31, 100, 175, 179, 215, 229, 232, 233, 234, 235, 280, 281, 282, 283, 307, 342, 369, 371, 372, 373, 374, 376, 396, 400, 401, 403, 409, 414, 419, 421], "dynamicnetwork": 232, "e": [0, 10, 11, 16, 19, 20, 22, 23, 26, 28, 55, 65, 74, 76, 77, 78, 79, 80, 81, 82, 83, 89, 90, 91, 98, 99, 101, 102, 103, 104, 110, 138, 180, 181, 192, 209, 210, 213, 214, 217, 228, 244, 307, 325, 326, 327, 330, 337, 341, 357, 395, 408, 415, 416, 419, 434, 451, 452, 467, 469, 471, 480, 486, 487, 496, 529], "each": [1, 2, 3, 4, 16, 20, 23, 25, 26, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 66, 67, 68, 69, 75, 92, 100, 101, 105, 111, 113, 114, 115, 117, 118, 124, 125, 126, 127, 128, 129, 130, 133, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 197, 205, 207, 208, 211, 212, 213, 214, 215, 216, 220, 222, 223, 225, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 248, 249, 250, 251, 252, 255, 265, 267, 274, 277, 280, 281, 282, 283, 284, 285, 293, 294, 296, 306, 307, 319, 322, 326, 330, 333, 334, 335, 339, 341, 344, 345, 346, 347, 352, 354, 356, 357, 360, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 394, 396, 397, 398, 399, 400, 401, 402, 404, 408, 409, 410, 411, 412, 413, 414, 415, 416, 420, 425, 434, 435, 436, 439, 440, 441, 442, 443, 444, 445, 454, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 474, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 489, 493, 495, 496, 500, 501, 504, 505, 506, 508, 510, 511, 512, 514, 515, 519, 522, 524, 525, 526, 527, 528, 529, 531, 533, 535], "earli": [31, 100, 414], "earlier": 114, "eas": 4, "easi": [2, 3, 4, 10, 159, 160, 161, 162, 163, 164, 230, 231, 233], "easier": [3, 231, 232, 235], "easili": [4, 114, 230, 234, 535], "eccv": 100, "economi": 28, "edg": [16, 113, 122, 131, 498, 499, 500, 506], "edu": [5, 6], "educ": 207, "effect": [14, 55, 57, 59, 61, 65, 100, 109, 186, 190, 224, 231, 232, 233, 234, 235, 244, 248, 249, 250, 255, 317, 318, 322, 325, 326, 328, 362, 363, 364, 366, 367, 368, 369, 392, 396, 397, 398, 403, 421, 422, 501, 522], "effici": [1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 22, 27, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 44, 45, 46, 48, 51, 52, 53, 55, 60, 65, 66, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 92, 93, 95, 96, 98, 99, 100, 105, 108, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 158, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 179, 180, 182, 183, 184, 185, 187, 198, 201, 203, 212, 255, 303, 304, 305, 319, 320, 323, 349, 357, 394, 396, 397], "efficientnet": [75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87], "efficientnet_b0": 100, "efficientnet_b1": 100, "efficientnet_b2": 100, "efficientnet_b3": 100, "efficientnet_b4": 100, "efficientnet_b5": 100, "efficientnet_b6": 100, "efficientnet_b7": 100, "efficientnet_v2": [84, 85, 86, 87], "efficientnet_v2_": 100, "efficientnet_v2_l": 100, "efficientnet_v2_m": 100, "efficientnet_v2_xl": 100, "efficientnetv2": 100, "eig": 21, "eigenvalu": [20, 26], "eigenvector": 20, "eigval": 20, "eigvec": 20, "einop": 349, "einstein": [10, 11, 13, 14, 15, 349], "einsum": 12, "either": [16, 267, 392, 423, 425, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 490, 504, 523], "element": [0, 10, 13, 15, 25, 26, 90, 100, 222, 230, 234, 237, 238, 240, 241, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 255, 256, 258, 259, 260, 261, 262, 296, 300, 301, 302, 303, 304, 305, 306, 319, 320, 322, 326, 327, 333, 334, 335, 336, 337, 338, 339, 341, 343, 344, 345, 346, 347, 349, 356, 357, 358, 359, 360, 369, 376, 377, 378, 379, 380, 381, 382, 422, 425, 427, 434, 435, 436, 439, 440, 441, 442, 443, 444, 445, 447, 451, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 485, 486, 487, 489, 493, 497, 503, 504, 505, 506, 508, 509, 510, 511, 512, 513, 515, 516, 517, 518, 520, 523], "elementwise_affin": 369, "elimin": [13, 15, 208], "elsewher": [380, 381, 382, 451], "elu": [239, 264, 329, 351], "elumodel": 317, "embed": [55, 57, 59, 61, 66, 67, 68, 105, 109, 111, 112, 113, 114, 116, 117, 118, 121, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 180, 181, 182, 183, 197, 247, 264, 297, 330, 331, 351, 385, 386, 388, 389, 390, 519], "embed_dim": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 105, 106, 107, 108, 109, 110, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 180, 181, 182, 183, 330, 386, 387, 388, 389, 390], "embedding_dim": [197, 296, 384], "embedding_lay": 384, "embedding_matrix": 296, "emphas": [114, 121], "emploi": [31, 55, 57, 59, 61, 75, 122], "empti": [229, 235, 459, 495], "empty_lik": 459, "enabl": [0, 1, 2, 3, 10, 11, 13, 14, 15, 23, 28, 66, 67, 68, 74, 98, 100, 105, 108, 124, 125, 130, 134, 138, 175, 176, 177, 178, 180, 182, 183, 191, 207, 211, 224, 229, 230, 231, 232, 233, 234, 247, 258, 322, 330, 331, 333, 334, 335, 337, 338, 352, 354, 386, 388, 390, 394, 406, 419, 420, 421, 425, 428, 429, 430, 432, 434, 452, 524], "encapsul": [16, 331, 376, 394, 419, 434], "enclos": [420, 423], "encod": [31, 55, 100, 197, 225, 357, 360, 386, 387, 388, 389, 390, 419], "encoder_lay": [389, 390], "encoderlay": 389, "encompass": 74, "encourag": [257, 342, 344, 345, 346, 347, 356, 357, 360, 410], "end": [24, 137, 211, 218, 219, 237, 240, 241, 242, 258, 293, 317, 319, 320, 321, 322, 324, 343, 358, 359, 360, 377, 378, 379, 380, 381, 382, 414, 416, 440, 441, 443, 447, 454, 460, 465, 473, 475, 478, 491, 492, 493, 496, 503, 506, 516, 517, 518, 535], "enforc": [13, 229, 231, 233, 349, 387, 388, 389, 390], "engin": [16, 25, 434], "enhanc": [31, 41, 42, 57, 59, 61, 65, 66, 67, 68, 90, 91, 92, 98, 99, 100, 103, 106, 107, 112, 122, 123, 129, 132, 145, 146, 156, 157, 171, 172, 173, 174, 179, 181, 190, 205, 206, 208, 214, 231, 233, 307, 323, 400, 535], "enough": 16, "ensur": [3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 25, 26, 27, 75, 84, 85, 86, 87, 105, 127, 189, 210, 212, 218, 228, 229, 230, 231, 232, 233, 234, 235, 244, 247, 253, 279, 280, 281, 282, 296, 300, 301, 302, 321, 326, 331, 341, 342, 343, 344, 345, 346, 347, 349, 356, 357, 358, 359, 360, 362, 363, 364, 366, 367, 368, 369, 371, 372, 373, 378, 379, 380, 381, 382, 384, 394, 395, 396, 407, 408, 410, 411, 413, 414, 415, 416, 417, 421, 422, 425, 428, 429, 430, 431, 432, 433, 444, 454, 464, 474, 483, 489, 493, 494, 495, 503, 506, 510, 511, 516, 517, 518, 525, 526, 527, 528, 529, 533, 535], "entir": [3, 16, 209, 211, 212, 258, 260, 261, 262, 343, 346, 347, 433], "entri": [75, 101, 117, 118, 503, 510, 513], "entropi": [268, 269, 356, 357], "environ": [16, 46, 48, 117, 118, 121, 434], "ep": [20, 131, 132, 133, 135, 136, 137, 257, 268, 269, 274, 275, 277, 278, 279, 300, 301, 302, 342, 356, 357, 362, 363, 364, 365, 366, 367, 368, 369, 403, 408, 409, 410, 411, 412, 413, 414, 415], "epoch": [1, 3, 16, 396, 397, 398, 399, 400, 401, 402, 403, 404], "epsilon": [31, 215, 219, 275, 279, 356, 357, 362, 363, 364, 365, 366, 367, 368, 369, 408, 409, 410, 411, 412, 413, 414, 415], "equal": [23, 298, 377, 378, 379, 454, 464, 470, 493, 495, 512, 526, 528], "equat": [20, 25, 27], "equival": [11, 439, 487, 507, 519], "error": [0, 3, 10, 11, 13, 15, 16, 20, 22, 75, 229, 232, 233, 234, 235, 238, 270, 272, 318, 343, 349, 356, 357, 358, 359, 394, 395, 454, 494], "escap": 398, "especi": [3, 16, 110, 231, 233, 234, 253, 325, 338, 422, 431, 524, 525, 529, 535], "essenti": [1, 3, 17, 23, 25, 97, 249, 255, 394, 431, 433, 473, 524, 525, 529, 535], "estim": [359, 410, 411, 412, 413, 414, 415, 420], "et": [55, 89, 100, 105, 211, 213, 224, 386], "eta": 416, "eta_": [397, 398, 403, 416], "eta_0": [397, 399, 401, 402, 404], "eta_min": 397, "eta_t": [397, 398, 399, 401, 402, 403, 404], "etc": [10, 69, 75, 114, 138, 209, 210, 356, 392, 525], "euclidean": [24, 279], "european": 100, "eval": [16, 343, 434], "evalu": [229, 274, 277, 341, 342, 343, 344, 345, 346, 347, 362, 363, 364, 366, 367, 368, 423, 434, 477, 491, 492, 535], "evaluate_model": 403, "even": [408, 420, 423, 447, 448, 451, 455, 456, 457, 458], "evenli": [280, 281, 282, 371, 372, 373, 375, 447, 454, 495, 512], "everi": [1, 16, 399, 404, 420, 535], "everywher": 478, "exact": [229, 232, 488, 529, 531], "exactli": [235, 293], "exampl": [4, 16, 396, 439], "exc_typ": 423, "exc_valu": 423, "excel": [91, 121, 126, 127], "except": [0, 11, 137, 420, 423, 478, 496, 501, 522], "exchang": 55, "excit": [74, 100, 113, 117, 118, 165, 168, 171, 172, 173, 174, 306], "exclud": [208, 212, 213, 517, 518], "exclus": [429, 432, 447], "exdb": 8, "execut": [16, 232, 420, 423, 434], "exist": [15, 27, 231, 233, 235, 424, 453, 496], "exit": 420, "exp": [218, 237, 242, 243, 245, 317, 324, 459], "exp_rang": 398, "expand": [4, 10, 15, 50, 100, 255, 494, 508, 515], "expans": [10, 13, 15, 54, 92, 114, 117, 118, 124, 125, 130, 131, 132, 133, 135, 136, 137], "expansion_factor": 113, "expect": [18, 209, 222, 232, 235, 253, 258, 330, 341, 343, 344, 345, 346, 347, 369, 386, 387, 388, 389, 390, 394], "expens": 3, "experi": [16, 114, 431, 433, 535], "experiment": [16, 433], "explan": [23, 25, 29, 40, 192, 205, 212, 213, 280, 281, 282, 371, 372, 373, 407], "explicit": [13, 14, 15, 235, 349], "explicitli": [15, 16, 100, 231, 233, 434, 446, 452], "explod": [324, 362, 363, 364], "explor": [16, 120, 394, 433], "expon": [23, 279, 444], "exponenti": [237, 242, 244, 317, 324, 326, 341, 399, 401, 410, 411, 412, 413, 414, 469], "exponentiallr": [396, 405], "expos": [16, 420], "express": [10, 11, 13, 15, 43, 106, 107, 108, 126], "extend": [4, 55, 100, 138, 158, 175, 181, 188, 338, 339, 446], "extens": [100, 406], "extern": [4, 208, 420], "extra": [54, 87, 122, 188, 494], "extract": [31, 57, 59, 61, 66, 67, 68, 88, 94, 97, 100, 125, 126, 129, 147, 158, 175, 187, 188, 189, 191, 203, 207, 208, 210, 211, 212, 213, 216, 217, 255, 335, 339, 377, 379, 419, 424, 448, 473, 475, 516, 517, 518, 520, 526, 528], "extractor": [101, 102, 103, 104, 203, 212, 213], "extrem": [25, 100, 148, 187, 199, 294], "extrema": 293, "ey": 459, "f": [1, 4, 5, 6, 7, 8, 16, 100, 211, 233, 234, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 268, 269, 270, 272, 273, 274, 275, 277, 278, 280, 281, 282, 286, 287, 288, 290, 291, 292, 293, 294, 296, 298, 299, 323, 326, 386, 388, 390, 396, 397, 398, 399, 400, 401, 402, 403, 404, 420], "f_1": 306, "f_2": 306, "facilit": [10, 14, 88, 231, 235, 244, 326, 333, 334, 335, 394, 406, 527, 535], "factor": [74, 90, 114, 124, 213, 215, 216, 237, 247, 248, 249, 250, 255, 306, 315, 316, 330, 331, 392, 396, 398, 399, 401, 402, 403, 404, 407, 414, 415, 416, 417, 493], "factori": 204, "failur": [231, 232, 233, 234, 394], "faithfulli": 16, "fals": [1, 5, 6, 7, 8, 24, 28, 55, 74, 117, 118, 124, 125, 131, 132, 133, 135, 136, 137, 147, 180, 181, 208, 213, 228, 229, 230, 247, 256, 258, 259, 260, 261, 262, 274, 277, 293, 294, 298, 309, 311, 312, 313, 314, 315, 316, 330, 331, 333, 334, 335, 336, 343, 352, 354, 386, 387, 388, 389, 390, 392, 397, 398, 399, 400, 401, 402, 403, 404, 410, 411, 415, 421, 425, 427, 428, 429, 430, 432, 434, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 473, 474, 475, 483, 489, 490, 491, 492, 493, 498, 499, 500, 503, 511, 520, 523, 525], "famili": [54, 100, 114, 132, 136, 137, 188, 424], "fan": [100, 311, 312, 315, 316], "fan_in": [311, 312], "fan_out": [311, 312], "fashion": [7, 57, 59, 61], "fashion_train": 7, "fashionmnist": 9, "fast": [208, 414], "faster": [100, 125, 209, 210, 396, 409, 413, 423], "faster_rcnn_resnet_101_fpn": 211, "faster_rcnn_resnet_50_fpn": 211, "fasterrcnn": [208, 209, 210, 211], "fastrcnn": [211, 212], "fc": [16, 97, 147, 158, 165, 175, 232, 306, 334, 335, 377, 378, 379, 380, 381, 382], "fc1": [16, 103, 104, 231, 235, 318, 319, 320, 322, 323, 324, 325, 327, 328, 354], "fc2": [16, 103, 104, 231, 235, 318, 319, 320, 322, 324, 325, 327, 328, 354], "fc3": 104, "feat": 214, "feat_channel": [208, 212], "feat_dim": 213, "featur": [3, 16, 29, 31, 40, 43, 44, 54, 55, 57, 59, 61, 65, 66, 67, 68, 69, 88, 91, 92, 94, 97, 100, 101, 102, 103, 104, 105, 110, 123, 124, 125, 126, 127, 128, 129, 130, 133, 137, 145, 146, 147, 158, 159, 160, 161, 162, 163, 164, 166, 168, 169, 175, 176, 177, 178, 187, 188, 189, 191, 192, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 252, 257, 265, 267, 274, 275, 300, 301, 302, 306, 307, 335, 337, 342, 344, 345, 346, 347, 352, 354, 362, 363, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 384, 394, 409], "feature_extractor": 101, "fed": [3, 535], "feed": [3, 535], "feedforward": [197, 225, 386, 388, 390], "femto": [48, 100], "fergu": [100, 205], "fetch": 0, "fewer": [1, 100, 134, 139, 140, 141, 142, 143, 144, 494, 519], "field": [5, 6, 8, 100, 105, 134, 175, 179, 207, 307], "file": [3, 424], "fill": [213, 309, 313, 314, 428, 429, 430, 432, 452, 453, 455, 456, 457, 458], "fill_valu": [452, 453], "filter": [75, 100, 114, 205, 213, 223, 248, 249, 250, 251, 252, 253, 255, 300, 301, 302, 334, 335], "filter_height": 255, "filter_s": 255, "filter_width": 255, "final": [40, 55, 69, 70, 71, 72, 73, 74, 75, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 113, 147, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 175, 176, 177, 178, 197, 208, 209, 210, 213, 225, 231, 232, 233, 234, 235, 247, 307, 330, 386, 387, 389, 420, 434, 524, 535], "find": [27, 473, 475, 491, 492, 505, 516], "fine": [55, 100, 105, 120, 123, 209, 210, 306, 535], "finer": 125, "finest": 126, "first": [5, 6, 7, 8, 20, 101, 180, 181, 182, 183, 205, 211, 213, 223, 232, 233, 265, 306, 352, 396, 410, 411, 412, 413, 414, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 484, 495, 499, 504, 516, 520, 522, 524, 525, 535], "fit": [15, 394], "fix": [100, 134, 180, 208, 212, 213, 216, 232, 399, 402, 404, 434, 506], "flag": [16, 420, 423, 493], "flat": [100, 180], "flatten": [13, 97, 101, 213, 235, 255, 339, 443, 492, 502, 507, 508, 510, 520], "flexibl": [1, 3, 4, 10, 11, 13, 15, 41, 88, 97, 98, 99, 100, 101, 114, 115, 138, 147, 171, 172, 173, 174, 179, 192, 203, 231, 232, 233, 234, 235, 349, 392, 394, 401, 406, 434, 446, 455, 456, 525, 535], "flexibli": 14, "flip": [530, 532, 535], "float": [2, 5, 6, 7, 8, 20, 25, 40, 41, 55, 74, 75, 90, 92, 105, 111, 115, 124, 125, 126, 127, 128, 129, 130, 180, 181, 197, 208, 212, 213, 215, 216, 217, 218, 219, 223, 225, 228, 230, 237, 240, 247, 256, 257, 258, 259, 260, 261, 262, 268, 269, 270, 274, 275, 277, 278, 279, 296, 299, 300, 301, 302, 309, 313, 314, 315, 316, 317, 321, 330, 331, 341, 342, 343, 344, 345, 346, 347, 356, 357, 358, 362, 363, 364, 365, 366, 367, 368, 369, 384, 386, 388, 390, 392, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 425, 427, 432, 434, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 465, 477, 490, 498, 499, 500, 503, 525, 527, 529, 530, 531, 532], "float32": [228, 230, 419, 434, 447, 448, 451, 452, 453, 455, 457, 490, 525], "float64": [419, 458, 490, 525], "floor": [404, 459], "flop": [100, 224, 420, 511], "flow": [31, 91, 97, 100, 165, 235, 257, 316, 318, 325, 328, 333, 334, 335, 352, 354, 421, 427, 464, 503], "fluctuat": 398, "fly": [2, 3], "fn": 423, "fname": 3, "focu": 31, "follow": [0, 13, 15, 17, 20, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 71, 72, 73, 74, 105, 106, 107, 108, 109, 117, 118, 171, 172, 173, 174, 179, 192, 203, 205, 210, 213, 225, 237, 238, 240, 241, 242, 243, 244, 245, 247, 265, 267, 298, 300, 301, 302, 303, 304, 305, 306, 307, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 333, 334, 335, 338, 341, 343, 344, 345, 346, 347, 349, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 366, 367, 368, 369, 371, 372, 373, 377, 378, 379, 380, 381, 382, 386, 387, 388, 389, 390, 394, 398, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 421, 424, 433, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 473, 475, 484, 494, 504, 509, 519, 526, 527, 528, 529, 530, 531, 532, 535], "footprint": 109, "foral": [387, 389], "forc": [16, 257], "form": [16, 26, 55, 219, 307, 387, 389, 443, 498, 500, 504, 508, 515, 535], "format": [2, 3, 5, 6, 7, 8, 215, 218, 219, 220, 222, 223, 293, 357, 360, 525], "formul": [238, 279], "formula": [20, 28, 244, 280, 281, 282, 326, 327, 358, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 439, 489, 529], "forward": [16, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 113, 115, 116, 117, 118, 138, 139, 140, 141, 142, 143, 144, 145, 146, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 176, 177, 178, 179, 192, 205, 208, 210, 212, 213, 215, 216, 228, 229, 394, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420], "foundat": [16, 97, 114, 165, 229, 394, 406], "four": [70, 71, 72, 73, 105, 131, 132, 133, 135, 136, 137, 139, 140, 141, 142, 143, 144, 506], "fpn": [208, 209, 210, 211, 215, 221], "frac": [14, 16, 18, 19, 20, 22, 23, 24, 25, 27, 28, 31, 55, 105, 215, 218, 219, 222, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 258, 265, 267, 275, 279, 280, 281, 282, 283, 286, 287, 288, 290, 291, 292, 296, 311, 312, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 330, 331, 333, 334, 335, 336, 337, 339, 341, 343, 344, 345, 346, 347, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 384, 388, 390, 397, 408, 409, 410, 411, 412, 413, 414, 415, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 494, 496, 501, 503, 504, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 521, 522, 523, 527], "fraction": [251, 252, 253], "frame": 262, "framework": [4, 10, 16, 207, 357, 360, 362, 363, 364, 366, 367, 368, 395, 406, 535], "free": [16, 419, 491, 492, 493], "frequent": [357, 360], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 11, 15, 16, 23, 25, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 54, 55, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 92, 93, 94, 95, 96, 97, 105, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 125, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 176, 177, 178, 179, 193, 194, 195, 196, 207, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 228, 229, 230, 231, 232, 233, 234, 235, 251, 255, 257, 265, 274, 277, 283, 284, 285, 293, 294, 296, 298, 300, 301, 302, 306, 307, 309, 311, 312, 313, 314, 315, 316, 323, 330, 333, 334, 335, 336, 339, 341, 342, 344, 345, 346, 347, 352, 354, 356, 357, 358, 359, 360, 362, 363, 364, 366, 367, 368, 369, 377, 378, 379, 387, 389, 390, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 411, 412, 413, 414, 415, 416, 417, 419, 422, 424, 425, 427, 428, 429, 430, 432, 433, 434, 439, 440, 441, 445, 446, 448, 473, 474, 475, 483, 489, 491, 492, 493, 496, 501, 504, 505, 508, 512, 513, 514, 515, 516, 520, 522, 523, 526, 527, 528, 529, 530, 531, 532, 535], "fu": 100, "full": [16, 28, 115, 117, 118, 197, 209, 212, 225, 338, 427, 459], "full_lik": 459, "full_matric": 28, "fulli": [4, 11, 17, 29, 40, 69, 70, 71, 72, 73, 74, 75, 97, 100, 101, 102, 103, 104, 147, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 175, 176, 177, 178, 192, 203, 205, 208, 212, 213, 267, 306, 307, 354, 433, 434, 511], "func": 424, "function": [3, 4, 5, 6, 7, 8, 10, 16, 17, 65, 92, 212, 229, 231, 232, 233, 234, 235, 300, 301, 302, 306, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 341, 342, 344, 345, 346, 347, 349, 356, 357, 358, 359, 360, 362, 363, 364, 366, 367, 368, 369, 371, 372, 373, 374, 386, 388, 390, 394, 397, 398, 400, 401, 404, 406, 433, 524, 535], "fundament": [247, 267, 354, 434, 525], "further": [14, 42, 43, 44, 45, 54, 75, 76, 77, 78, 79, 80, 81, 82, 83, 113, 115, 116, 117, 118, 120, 122, 145, 146, 189, 427, 433, 474, 483, 489], "fuse": [31, 100, 175, 214, 420], "fusion": [55, 176, 177, 178], "futur": [247, 331, 353, 389, 390], "g": [0, 10, 11, 16, 19, 20, 23, 26, 28, 55, 65, 74, 76, 77, 78, 79, 80, 81, 82, 83, 89, 90, 91, 98, 99, 100, 101, 102, 103, 104, 110, 138, 180, 181, 192, 209, 210, 213, 214, 217, 293, 306, 307, 337, 341, 395, 408, 415, 419, 434, 452, 496, 529], "g_": 409, "g_t": 415, "gain": [315, 316], "gamma": [275, 362, 363, 364, 365, 366, 367, 368, 369, 396, 398, 399, 400, 402, 404], "gamma_c": [275, 365], "gan": [252, 336, 337], "gap": [147, 158, 175, 306], "gaussian": [238, 318], "gelu": [65, 105, 239, 264, 329, 351], "gelunetwork": 318, "gener": [11, 16, 25, 42, 47, 51, 207, 208, 211, 212, 213, 217, 225, 251, 252, 258, 293, 294, 299, 336, 337, 339, 341, 342, 344, 345, 346, 347, 367, 386, 411, 413, 414, 420, 425, 427, 428, 429, 430, 431, 432, 433, 438, 446, 447, 449, 450, 454, 504, 528, 529, 530, 532, 535], "geoffrei": [5, 6], "geometr": 470, "geq": 517, "get": [5, 6, 7, 8], "get_loss": 208, "get_lr": [397, 398, 399, 400, 401, 402, 403, 404], "girshick": [211, 213], "git": 16, "github": [7, 16], "give": [407, 415], "given": [13, 14, 15, 19, 20, 23, 25, 26, 28, 216, 226, 255, 279, 284, 285, 293, 296, 330, 331, 339, 349, 356, 357, 360, 376, 395, 419, 421, 425, 452, 456, 458, 503, 511, 512, 516, 524, 529, 530, 532, 535], "global": [0, 55, 57, 59, 61, 65, 66, 67, 68, 74, 100, 105, 124, 126, 129, 130, 134, 147, 158, 165, 175, 180, 182, 183, 184, 185, 187, 188, 189, 275, 306, 365, 420, 421, 423, 431, 433], "global_response_norm": [264, 276], "globalresponsenorm": [351, 370], "go": [10, 89, 100], "goal": [356, 357, 360], "googlenet": [89, 100], "gpu": [11, 100, 110, 228, 230, 419, 425, 427, 428, 429, 430, 432, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 490, 493], "grad": [11, 16, 228, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 255, 258, 265, 267, 293, 294, 298, 303, 304, 305, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 333, 334, 335, 336, 337, 338, 339, 341, 343, 344, 345, 346, 347, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 395, 406, 425, 427, 428, 429, 430, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 449, 450, 452, 453, 454, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 501, 503, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 526, 527, 528, 530, 532, 533], "grad_output": 23, "gradient": [10, 11, 16, 17, 31, 91, 97, 100, 216, 222, 228, 230, 294, 339, 342, 394, 395, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 421, 423, 425, 427, 428, 429, 430, 432, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 464, 470, 477, 490, 491, 492, 493, 505, 520, 525], "gradual": [396, 397, 399], "grain": [55, 100, 105, 306], "granular": 217, "graph": [16, 217, 316, 420, 423, 434, 447, 448, 451, 455, 456, 457, 458, 525], "grayscal": [7, 8, 101, 102, 103, 104, 529, 535], "great": 129, "greater": [50, 128, 223, 464, 495], "green": 529, "grid": [100, 105, 215, 216, 293, 294, 464, 504], "grid_sampl": [264, 293, 295], "grid_window_s": 105, "gridattent": 105, "grn": 365, "ground": 208, "groundbreak": 100, "group": [100, 114, 138, 145, 146, 158, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 175, 179, 210, 232, 248, 249, 250, 251, 252, 253, 300, 301, 302, 307, 333, 334, 335, 336, 337, 338, 395, 396, 406], "group1": 232, "group2": 232, "groupedconvblock": 158, "grow": 16, "growth_rat": [69, 70, 71, 72, 73], "guarante": 431, "h": [10, 13, 14, 15, 100, 147, 159, 160, 161, 162, 163, 164, 176, 177, 178, 199, 211, 215, 216, 218, 219, 220, 247, 249, 250, 252, 253, 255, 257, 261, 262, 275, 281, 282, 284, 285, 287, 288, 291, 292, 293, 298, 299, 301, 302, 306, 330, 331, 338, 349, 363, 364, 365, 367, 368, 372, 373, 375, 376, 379, 382, 386, 388, 390, 526, 528], "h_": [215, 216, 218, 219, 249, 250, 252, 253, 281, 282, 284, 285, 287, 288, 291, 292, 298, 334, 335, 337, 338, 339, 372, 373, 375, 376, 378, 379, 381, 382], "h_in": 294, "h_l": [214, 215], "h_out": [249, 250, 252, 253, 287, 288, 291, 292, 294], "h_stack": 501, "h_t": [218, 219], "ha": [0, 20, 42, 55, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 215, 235, 248, 249, 250, 251, 300, 301, 302, 323, 327, 356, 357, 362, 363, 364, 366, 367, 368, 369, 392, 395, 406, 434, 439, 464, 470, 477, 487, 494, 496, 501, 505, 514, 520, 522, 529], "hackabl": 16, "haip": 100, "half": [398, 481], "han": 7, "hand": 27, "handl": [0, 3, 10, 16, 25, 187, 224, 229, 231, 232, 233, 234, 235, 296, 357, 360, 394, 406, 419, 446], "handwritten": [7, 8, 104], "hang": 100, "hard": [117, 118, 320], "hard_sigmoid": 319, "hardsigmoid": [320, 329, 351], "hardswish": [329, 351], "hardwar": 110, "hashabl": 434, "hat": [31, 410, 411, 412, 413, 414], "have": [0, 1, 16, 19, 20, 22, 25, 26, 28, 223, 230, 232, 234, 235, 249, 250, 257, 279, 296, 316, 384, 394, 451, 455, 456, 457, 458, 473, 475, 496, 501, 503, 504, 513, 514, 519, 520, 522, 527, 533], "he": 100, "head": [31, 40, 55, 66, 67, 68, 92, 105, 113, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 197, 203, 208, 209, 210, 211, 212, 213, 225, 247, 330, 331, 386, 388, 390], "head_dim": 55, "head_fn": 92, "heapsort": 511, "heart": 16, "height": [31, 203, 218, 219, 249, 250, 252, 253, 255, 261, 262, 275, 281, 282, 284, 285, 287, 288, 291, 292, 294, 298, 299, 307, 334, 335, 339, 363, 364, 365, 367, 368, 372, 373, 375, 378, 379, 381, 382, 392, 526, 528, 533], "help": [31, 57, 59, 61, 65, 90, 240, 242, 262, 296, 317, 321, 323, 324, 328, 362, 363, 364, 377, 378, 380, 381, 384, 396, 398, 403, 404, 407, 410, 411, 413, 421, 422, 484], "henc": 509, "here": [3, 18, 209, 229, 251, 265, 394, 406, 422, 433, 524, 525, 535], "heurist": 213, "hidden": [29, 55, 105, 126, 127, 128, 129, 180, 181, 197, 205, 212, 225, 232], "hidden_dim": [208, 212], "hidden_s": 232, "hierarch": [40, 41, 57, 59, 61, 100, 124, 125, 126, 127, 128, 129, 130, 131, 136, 180, 181, 232, 235, 394], "hierarchi": [211, 334], "hierarchicalnetwork": 232, "high": [11, 43, 49, 50, 68, 84, 85, 86, 87, 94, 100, 105, 106, 107, 110, 113, 121, 122, 125, 127, 135, 136, 137, 155, 170, 179, 187, 188, 189, 199, 200, 208, 217, 396, 429, 432, 446], "higher": [50, 75, 111, 119, 158, 187, 357, 360, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 438, 439, 443, 446, 469, 484], "highest": [54, 110, 122, 429], "highli": [16, 31, 46, 54, 100, 116, 126, 186, 224, 401], "highlight": [306, 380, 381, 382], "hinton": [5, 6], "hist": [498, 499, 500], "histogram": [499, 500, 502], "histogram2d": 502, "histogramdd": 502, "histor": 409, "histori": [425, 427, 428, 429, 430, 432, 447, 448, 449, 450, 451, 455, 456, 457, 458], "hold": [114, 231, 232, 233, 234], "horizont": [501, 514, 530, 535], "hot": [357, 360], "how": [2, 3, 13, 15, 126, 171, 172, 173, 174, 179, 232, 235, 293, 294, 349, 394, 535], "howard": 100, "howev": [228, 316, 470], "hstack": 502, "html": [5, 6], "http": [5, 6, 7, 8, 16], "hu": [100, 306], "huang": 100, "huber": [270, 358], "huber_loss": [264, 271], "huberloss": [351, 361], "huberregressionmodel": 358, "hue": 535, "huge": [49, 100, 126], "human": 207, "hybrid": [65, 100, 122, 123], "hyperbol": [245, 328, 467, 480, 486], "hyperparamet": [124, 139, 140, 141, 142, 143, 144, 147, 158, 204, 226, 395, 407], "i": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 84, 85, 86, 87, 88, 89, 90, 91, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 268, 269, 270, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 285, 286, 287, 288, 290, 291, 292, 293, 294, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 461, 462, 463, 464, 465, 466, 467, 469, 470, 471, 472, 473, 474, 475, 477, 478, 479, 480, 481, 483, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535], "i_": 446, "i_0": 446, "i_1": [13, 14, 15, 349, 446], "i_2": [13, 14, 15, 349], "i_k": [15, 446], "i_m": [13, 15, 349], "iccv": 100, "iclr": 100, "idea": 100, "ideal": [43, 47, 51, 110, 111, 114, 123, 126, 235], "ident": [22, 23, 92, 100, 293, 294, 299, 343, 351, 355, 431, 433, 451, 509], "identifi": [207, 233], "idx": [2, 3, 493], "ieee": [100, 211, 306], "ignor": [386, 387, 388, 389, 390, 493], "ii": 487, "ij": [11, 31, 244, 298, 326, 437, 438, 439, 443, 504, 517, 518], "ik": [11, 437, 438, 439], "ill": [19, 25], "ilsvrc": 100, "imag": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535], "image_dir": 3, "image_mean": 213, "image_path": 3, "image_s": [197, 198, 199, 200, 201, 202], "image_shap": 220, "imagedataset": 3, "imageio": 3, "imagenet": [70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 92, 100, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 156, 157, 171, 172, 173, 174, 179, 209, 210, 213], "imbal": [357, 360], "img": 217, "img_siz": [31, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 197, 198, 199, 200, 201, 202], "imgclf": [65, 92], "impact": [100, 413], "implement": [2, 3, 16, 25, 29, 31, 40, 65, 69, 74, 88, 89, 90, 91, 92, 98, 99, 100, 101, 111, 112, 113, 124, 125, 147, 156, 157, 159, 160, 161, 162, 163, 164, 165, 180, 197, 203, 205, 208, 211, 212, 213, 217, 224, 225, 229, 255, 258, 294, 303, 304, 305, 307, 330, 331, 339, 343, 365, 388, 390, 395, 400, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 501, 522, 529], "impli": [333, 334], "implicit": [339, 452], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 156, 157, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 257, 258, 259, 262, 265, 267, 268, 269, 270, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 421, 422, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 493, 494, 495, 496, 497, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535], "improp": [10, 232, 235, 433], "improv": [31, 40, 57, 59, 61, 65, 67, 75, 89, 90, 91, 95, 97, 99, 100, 105, 123, 125, 132, 134, 138, 147, 158, 171, 172, 173, 174, 175, 180, 181, 188, 189, 191, 205, 208, 209, 211, 212, 227, 257, 258, 274, 296, 299, 306, 318, 324, 328, 349, 384, 396, 397, 398, 403, 407, 408, 409, 410, 411, 412, 413, 414, 415, 528, 531, 535], "imread": 3, "in1_featur": [265, 352], "in2_featur": [265, 352], "in_channel": [31, 55, 65, 105, 106, 107, 108, 109, 110, 124, 125, 131, 132, 133, 134, 135, 136, 137, 147, 180, 181, 197, 232, 235, 300, 301, 302, 303, 304, 305, 306, 307, 333, 334, 335, 336, 337, 338, 363, 364, 377, 378, 379, 380, 381, 382, 394], "in_channels_list": 214, "in_featur": [231, 232, 235, 267, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 334, 335, 341, 344, 345, 352, 354, 356, 357, 358, 359, 360, 362, 366, 369, 377, 378, 379, 380, 381, 382], "incept": [89, 90, 91, 92, 97, 98, 99], "inception_next": 92, "inception_next_atto": 100, "inception_next_bas": 100, "inception_next_smal": 100, "inception_next_tini": 100, "inception_resnet_v1": 100, "inception_resnet_v2": 100, "inception_v1": 100, "inception_v3": 100, "inception_v4": 100, "inceptionnext": [93, 94, 95, 96], "inceptionresnet": [98, 99], "includ": [3, 4, 7, 11, 16, 17, 23, 24, 29, 40, 66, 67, 68, 88, 89, 90, 98, 101, 105, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 147, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 197, 204, 205, 216, 225, 229, 230, 232, 234, 235, 298, 300, 301, 302, 303, 304, 305, 388, 390, 392, 394, 395, 400, 406, 413, 420, 433, 439, 506, 517, 518], "inclus": [230, 233, 429, 432, 454], "incom": [267, 354], "incompat": [209, 494], "incomplet": 2, "incompletedataset": 2, "incorpor": [28, 31, 100, 116, 158, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 188, 190, 318], "increas": [43, 44, 105, 108, 110, 111, 119, 122, 126, 127, 129, 132, 137, 158, 159, 160, 161, 162, 163, 164, 175, 227, 248, 249, 250, 251, 252, 255, 299, 398, 403, 409, 416, 422, 501, 522, 529, 530, 532, 535], "independ": [55, 213, 232, 248, 249, 250, 251, 330, 341, 344, 345, 346, 347, 369, 439, 450, 527, 529, 531, 533], "index": [0, 2, 5, 6, 7, 8, 10, 13, 213, 216, 275, 296, 349, 365, 384, 397, 398, 399, 400, 401, 402, 404, 422, 434, 447, 448, 451, 470, 493, 504, 505, 509], "indexerror": 0, "indic": [0, 1, 11, 14, 15, 16, 66, 67, 68, 130, 145, 146, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 213, 223, 230, 232, 234, 235, 269, 273, 296, 357, 360, 377, 384, 386, 387, 388, 389, 390, 402, 419, 421, 434, 491, 492, 493, 505, 511, 516, 523, 526, 528], "individu": [3, 232, 235, 358, 369, 406, 409, 416], "induc": [242, 324], "induct": [57, 59, 61, 65, 100], "inf": 485, "infer": [125, 171, 172, 173, 174, 179, 209, 211, 212, 213, 223, 232, 235, 419, 423], "infin": [26, 28, 412], "inform": [31, 55, 100, 126, 182, 183, 184, 185, 190, 207, 224, 228, 306, 400, 406, 408], "infti": [24, 414], "inherit": [1, 407, 415, 417], "init": 310, "initi": [1, 16, 31, 40, 69, 92, 97, 105, 109, 138, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 186, 187, 188, 189, 193, 194, 195, 196, 204, 209, 210, 226, 228, 230, 231, 232, 233, 234, 235, 307, 309, 311, 312, 313, 314, 315, 316, 330, 333, 334, 335, 352, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 369, 384, 388, 390, 392, 394, 395, 397, 399, 401, 402, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 428, 431, 432, 433, 447, 451, 454, 455, 456, 457, 458, 490], "initial_accumulator_valu": 409, "inner": [437, 446, 459], "innov": [113, 123], "input": [10, 11, 13, 14, 15, 16, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 65, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 158, 171, 172, 173, 174, 175, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 197, 198, 199, 200, 201, 202, 203, 205, 209, 210, 211, 212, 213, 223, 224, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 268, 269, 270, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 294, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 392, 394, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 423, 433, 434, 435, 437, 438, 439, 443, 446, 448, 450, 453, 456, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535], "input1": 352, "input2": 352, "input_": [29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 205, 213, 237, 238, 240, 241, 242, 243, 244, 245, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 267, 268, 269, 270, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 296, 298, 299, 300, 301, 302, 365, 371, 372, 373, 374, 375, 376, 384, 495, 511, 516, 517, 518], "input_1": 265, "input_2": 265, "input_data": [317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 333, 334, 335, 341, 344, 345, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 366, 369, 377, 378, 379, 380, 381, 382], "input_indic": [296, 384], "input_s": [232, 234, 326, 357, 360], "input_tensor": [55, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 176, 177, 178, 179, 192, 203, 228, 231, 232, 233, 234, 235, 244, 257, 258, 279, 303, 304, 305, 306, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 333, 334, 335, 341, 342, 343, 344, 345, 346, 347, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 392, 394, 526, 527, 528, 529, 530, 531, 532, 533], "insert": 493, "insid": [3, 420, 421], "insight": 100, "inspect": [16, 229, 230, 235, 395], "inspir": [10, 13, 15, 16, 40, 100], "instabl": [25, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417], "instanc": [0, 1, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 98, 99, 102, 103, 104, 109, 115, 116, 117, 118, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 198, 199, 200, 201, 202, 204, 206, 210, 226, 227, 229, 230, 231, 233, 234, 235, 277, 323, 366, 367, 368, 369, 386, 387, 389, 395, 419, 423, 424, 490, 508, 515, 535], "instance_norm": [264, 276, 366, 367, 368], "instancenorm1d": [351, 370], "instancenorm1dmodel": 366, "instancenorm2d": [351, 370], "instancenorm3d": [351, 370], "instanti": [2, 32, 33, 34, 35, 36, 37, 38, 39, 66, 67, 68, 74, 84, 85, 86, 87, 92, 93, 94, 95, 96, 119, 120, 121, 122, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 171, 172, 173, 174, 179, 182, 183, 184, 185, 190, 191, 198, 199, 200, 201, 202, 212, 213, 424], "instead": [57, 59, 61, 231, 232, 233, 234, 235, 311, 312, 315, 316, 384, 386, 388, 390, 410, 411, 412, 449, 450], "int": [0, 1, 2, 5, 6, 7, 8, 13, 14, 15, 23, 24, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 214, 215, 216, 217, 220, 225, 226, 227, 228, 230, 244, 247, 248, 249, 250, 251, 252, 253, 255, 257, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 313, 314, 315, 316, 326, 330, 331, 333, 334, 335, 336, 337, 338, 339, 342, 349, 352, 354, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 392, 397, 398, 399, 400, 401, 402, 403, 404, 410, 411, 412, 413, 414, 416, 419, 424, 425, 427, 428, 429, 430, 431, 432, 434, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 465, 473, 474, 475, 477, 483, 484, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 503, 506, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 525, 526, 528, 533], "int32": [384, 493, 505], "int64": [223, 419, 427, 434, 491, 492], "integ": [1, 3, 23, 165, 192, 223, 248, 249, 250, 281, 282, 330, 333, 334, 335, 336, 339, 369, 372, 373, 378, 379, 380, 381, 382, 427, 428, 429, 430, 432, 433, 446, 449, 455, 457, 464, 470, 474, 477, 483, 488, 489, 500, 506, 508, 509, 512, 515], "integr": [1, 2, 4, 5, 6, 7, 8, 14, 16, 17, 55, 65, 66, 67, 68, 100, 105, 122, 138, 212, 213, 225, 230, 232, 234, 235, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 333, 334, 335, 349, 352, 354, 377, 378, 379, 380, 381, 382, 434], "intellig": [100, 207, 211, 306], "intend": [10, 127, 228, 233, 234], "intens": [25, 69, 148, 527, 529], "interact": [105, 180, 265, 352, 394, 433], "interdepend": 100, "interest": [212, 216], "interfac": [2, 16, 229, 232, 374, 406], "interfer": [421, 519], "intermedi": [25, 126, 145, 146, 306, 386, 388, 390, 434], "intern": [16, 100, 148, 149, 150, 151, 152, 153, 154, 155, 166, 167, 168, 169, 170, 209, 210, 211, 231, 232, 233, 234, 235, 357, 360, 394, 446, 526, 527, 528, 529, 530, 531, 532, 533], "interpol": [216, 264, 294, 297, 392, 454, 533], "interpret": [10, 100, 207, 244, 326, 496], "intersect": [222, 223], "interv": [402, 404, 428, 432, 447], "introduc": [41, 57, 59, 61, 65, 75, 89, 90, 100, 105, 111, 112, 113, 124, 125, 133, 158, 191, 208, 211, 212, 213, 224, 241, 251, 306, 318, 322, 323, 325, 328, 341, 344, 345, 346, 347, 386, 528, 531, 535], "introspect": [16, 235], "intuit": [10, 13, 16, 231, 233, 394, 535], "inv": 21, "inv_a": 22, "invari": [378, 381], "invers": [19, 22, 23, 25, 218, 398, 409, 461, 462, 463], "invert": [19, 22, 23, 27, 100, 112, 113, 116], "invit": 16, "invok": 424, "involv": [13, 15, 16, 18, 19, 20, 22, 25, 26, 28, 175, 207, 237, 238, 240, 241, 242, 243, 245, 265, 267, 298, 333, 334, 335, 349, 352, 354, 425, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 458, 469, 471, 472, 473, 475, 479, 481, 504, 506, 508, 515], "iou": [213, 217, 221, 223], "iou_matrix": 222, "iou_thresh": [217, 223], "is_all_fre": 434, "is_bit_fre": 419, "is_caus": [247, 331, 389, 390], "is_fre": 434, "is_leaf": 434, "isn": 16, "issu": [3, 16, 324, 362, 363, 364, 410, 411], "item": [7, 16, 359], "iter": [0, 1, 2, 3, 228, 229, 232, 234, 387, 389, 395, 398, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 447], "ith": [244, 326], "its": [4, 16, 23, 25, 29, 41, 100, 110, 114, 122, 125, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 166, 167, 168, 169, 170, 176, 177, 178, 205, 208, 215, 228, 231, 232, 233, 234, 248, 249, 250, 251, 252, 255, 293, 299, 307, 316, 318, 322, 327, 336, 342, 380, 381, 382, 394, 395, 408, 416, 420, 421, 422, 424, 447, 449, 450, 457, 464, 470, 473, 475, 477, 490, 494, 509, 511, 512, 519, 527, 530, 532, 535], "itself": [18, 23, 231, 232, 233, 234, 396, 423], "j": [8, 10, 13, 14, 15, 31, 222, 244, 296, 306, 326, 349, 362, 363, 364, 366, 367, 368, 377, 378, 380, 381, 384, 504, 514, 517, 518, 526, 528], "j_": 446, "j_1": [13, 15, 349], "j_2": [13, 15, 349], "j_k": [15, 446], "j_n": [13, 15, 349], "jie": 100, "jk": [11, 438], "join": [3, 496], "jointli": 208, "json": 424, "k": [23, 31, 55, 100, 105, 125, 211, 215, 216, 247, 248, 251, 330, 331, 333, 336, 357, 363, 364, 367, 368, 377, 380, 381, 390, 437, 438, 446, 448, 451, 496, 512, 516], "k_2": 55, "k_d": [250, 253, 335, 379, 382], "k_h": [249, 250, 252, 253, 334, 335, 339, 378, 379, 382], "k_i": 330, "k_j": 31, "k_w": [249, 250, 252, 253, 334, 335, 339, 378, 379, 382], "kaim": [100, 311, 312, 315, 316], "kaiming_norm": 310, "kaiming_uniform": 310, "kalenichenko": 100, "karen": 100, "kashif": 7, "kd": 338, "kdim": 330, "keep": [223, 229, 258, 322, 408, 420, 477, 493, 509, 517, 518], "keep_grad": [230, 425, 427, 428, 429, 430, 432, 434, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 490, 525], "keep_var": 229, "keepdim": [24, 473, 474, 475, 483, 489, 491, 492], "kei": [16, 55, 65, 105, 114, 124, 130, 131, 132, 133, 135, 136, 137, 180, 181, 207, 229, 231, 233, 235, 247, 330, 331, 390, 395], "kept": [223, 474, 483, 489], "kernel": [100, 101, 102, 103, 104, 114, 117, 118, 175, 176, 177, 178, 179, 205, 248, 249, 250, 251, 252, 253, 255, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 300, 301, 302, 303, 304, 305, 307, 333, 334, 335, 336, 337, 338, 339, 371, 372, 373, 374, 375, 376, 378, 379, 382, 420], "kernel_s": [113, 117, 118, 175, 176, 177, 178, 208, 212, 213, 232, 235, 286, 287, 288, 290, 291, 292, 300, 301, 302, 303, 304, 305, 307, 333, 334, 335, 336, 337, 338, 339, 349, 363, 364, 377, 378, 379, 380, 381, 382], "keyerror": 229, "keyword": [30, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 106, 107, 108, 109, 110, 117, 118, 119, 120, 121, 122, 123, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 193, 194, 195, 196, 206, 209, 210, 229, 353], "kh": [337, 338], "kind": [493, 511], "kj": [437, 439], "known": [100, 251, 253], "kriz": [5, 6], "krizhevski": [5, 6, 100], "kroneck": [13, 244, 326, 349], "kw": [337, 338], "kwarg": [30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 98, 99, 102, 103, 104, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 206, 209, 210, 229, 353, 424], "l": [18, 25, 84, 100, 200, 215, 247, 248, 251, 260, 280, 283, 286, 290, 300, 306, 331, 339, 341, 344, 345, 346, 347, 356, 357, 358, 359, 360, 362, 363, 364, 366, 367, 368, 369, 371, 374, 389, 390, 484, 494], "l1": 279, "l2": [279, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417], "l_": [224, 248, 251, 280, 283, 286, 290, 333, 336, 371, 374, 377, 380, 386], "l_0": 215, "l_k": 330, "l_m": [387, 388], "l_out": [248, 251, 286, 290], "l_q": 330, "l_t": [386, 387, 388], "l_v": 330, "label": [4, 5, 6, 7, 8, 11, 90, 207, 208, 212, 213, 356, 357, 360], "lambd": 407, "lambda": [20, 242, 324, 401, 407, 411], "lambda_1": 20, "lambda_2": 20, "lambda_fn": 401, "lambda_i": 20, "lambda_n": 20, "lambdalr": 405, "languag": [4, 333, 352, 377, 380, 386], "larg": [0, 3, 25, 43, 49, 50, 54, 57, 59, 61, 69, 84, 87, 100, 105, 106, 107, 110, 113, 117, 119, 122, 123, 126, 127, 137, 148, 149, 150, 153, 166, 167, 183, 187, 188, 189, 198, 199, 200, 209, 303, 304, 305, 323, 358, 394, 407, 410, 411, 412, 415, 416, 417], "larger": [42, 55, 58, 67, 68, 74, 75, 105, 106, 107, 147, 175, 188, 227, 231, 233, 248, 249, 250, 255, 257, 342, 407, 440, 495, 506, 526, 528, 533], "largest": [54, 126, 137, 187, 473, 516], "last": [1, 244, 278, 326, 397, 398, 399, 400, 401, 402, 404, 438, 439, 446, 493, 495, 496, 511, 530, 532], "last_channel": 113, "last_epoch": [397, 398, 399, 400, 401, 402, 404], "last_lr": [396, 397, 398, 399, 400, 401, 402, 403, 404], "later": [31, 100, 214], "latest": [4, 16], "layer": [10, 16, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 56, 57, 58, 59, 60, 61, 65, 69, 70, 71, 72, 73, 74, 75, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 111, 113, 114, 115, 117, 118, 123, 124, 125, 126, 130, 131, 132, 133, 135, 136, 137, 138, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 180, 181, 187, 188, 192, 193, 194, 195, 196, 197, 205, 207, 208, 209, 210, 212, 214, 224, 225, 229, 231, 232, 235, 244, 258, 267, 274, 277, 278, 300, 301, 302, 303, 304, 305, 306, 307, 311, 312, 315, 316, 326, 331, 333, 334, 335, 343, 352, 353, 354, 360, 369, 377, 378, 379, 380, 381, 382, 386, 387, 388, 389, 390, 394, 433, 506, 525], "layer1": 424, "layer2": 424, "layer_group": 232, "layer_norm": [264, 276, 369], "layer_norm_ep": [386, 388, 390], "layer_scale_init": 40, "layer_sequ": [232, 235], "layernorm": [55, 65, 105, 124, 125, 131, 132, 133, 135, 136, 137, 180, 181, 351, 370, 386, 387, 388, 389, 390], "layernormmodel": 369, "layout": 253, "lceil": 464, "ldot": [491, 492], "le": 100, "lead": [10, 16, 209, 232, 235, 279, 318, 366, 367, 368, 369, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 433, 494], "leaf": 434, "leaki": [240, 321], "leaky_relu": [239, 264, 321], "leakyrelu": [329, 351], "learn": [1, 3, 4, 7, 8, 10, 14, 16, 23, 25, 31, 75, 94, 95, 100, 105, 126, 130, 158, 159, 160, 161, 162, 163, 164, 205, 206, 207, 208, 209, 210, 224, 231, 232, 233, 234, 241, 244, 306, 317, 321, 322, 326, 333, 334, 335, 344, 345, 346, 347, 349, 352, 354, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 422, 431, 454, 512, 517, 518, 524, 525, 535], "learnabl": [31, 55, 180, 181, 208, 228, 229, 230, 274, 275, 277, 278, 300, 301, 302, 330, 333, 334, 335, 336, 337, 338, 352, 354, 362, 363, 364, 365, 366, 367, 368, 369, 390, 394], "least": [25, 26, 28, 392, 487, 517, 518], "lecun": [8, 100], "left": [23, 24, 25, 28, 31, 55, 105, 215, 219, 238, 244, 279, 318, 326, 330, 339, 356, 357, 358, 360, 362, 363, 364, 366, 367, 368, 369, 380, 381, 382, 388, 390, 484, 493, 526, 528], "leftarrow": 413, "len": [0, 1, 2, 3, 504], "lenet": [102, 103, 104], "lenet_1": 100, "lenet_4": 100, "lenet_5": 100, "length": [55, 105, 232, 247, 248, 251, 260, 280, 283, 286, 290, 333, 353, 362, 366, 371, 374, 377, 380, 389, 390, 427, 493, 506, 527], "leq": [218, 319, 320, 358, 402, 414, 444, 465, 518], "lerp": 298, "less": [0, 237, 240, 270, 317, 321, 357, 358, 360, 454, 470], "let": [20, 446, 493], "level": [97, 105, 126, 127, 128, 129, 214, 215, 339], "leverag": [13, 14, 15, 16, 27, 31, 91, 92, 99, 100, 119, 122, 131, 134, 159, 160, 161, 162, 163, 164, 182, 183, 184, 185, 186, 187, 203, 207, 307, 394], "lfloor": [339, 404, 470], "li": [100, 134], "librari": [3, 10, 16, 17, 229, 394, 395, 406, 424, 433, 434, 535], "lie": [220, 425], "lightweight": [16, 52, 60, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 93, 109, 112, 117, 118, 130, 134, 139, 140, 141, 142, 143, 144, 151, 168, 184, 185, 191, 202, 307, 320, 323], "like": [13, 14, 15, 16, 57, 59, 61, 75, 97, 100, 114, 122, 159, 160, 161, 162, 163, 164, 176, 177, 178, 189, 207, 209, 217, 225, 228, 229, 232, 235, 248, 253, 257, 315, 316, 324, 341, 342, 349, 362, 363, 364, 366, 367, 368, 421, 422, 453, 490, 525, 535], "likelihood": [273, 357, 360], "limit": [45, 52, 117, 118, 119, 121, 323, 408, 465], "linalg": 21, "linalgerror": [18, 19, 20, 22, 23, 24, 25, 26, 27, 28], "line": [16, 423], "linear": [11, 16, 17, 18, 25, 26, 27, 92, 100, 105, 112, 116, 125, 131, 132, 133, 134, 135, 136, 137, 165, 231, 232, 233, 235, 237, 238, 240, 241, 242, 258, 311, 312, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 334, 335, 339, 341, 343, 344, 345, 352, 353, 356, 357, 358, 359, 360, 362, 366, 369, 377, 378, 379, 380, 381, 382, 386, 388, 390, 396, 424, 451], "linearli": 358, "linguist": 207, "linspac": 459, "linspace_tensor": 454, "list": [0, 1, 16, 31, 40, 41, 55, 66, 67, 68, 75, 92, 101, 113, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 147, 158, 165, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 214, 215, 228, 230, 231, 232, 233, 234, 278, 307, 353, 369, 395, 397, 398, 399, 400, 401, 402, 403, 404, 425, 428, 429, 430, 432, 434, 446, 448, 449, 450, 452, 453, 455, 456, 457, 458, 488, 494, 499, 500, 509, 512, 513, 521, 524], "listdir": 3, "liter": [14, 147, 217, 228, 230, 268, 269, 270, 272, 273, 294, 298, 300, 301, 302, 303, 304, 305, 307, 311, 312, 333, 334, 335, 336, 337, 338, 356, 357, 358, 359, 360, 392, 398, 403, 419, 425, 427, 428, 429, 430, 432, 434, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 490, 493, 504, 511], "liu": 100, "ln": 444, "load": [3, 4, 5, 6, 7, 8, 209, 228, 229, 230, 395, 400, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 424], "load_state_dict": [209, 210, 229, 395, 400, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417], "loader": [1, 2, 3], "local": [16, 31, 57, 59, 61, 65, 66, 67, 68, 100, 105, 124, 126, 129, 180, 181, 182, 183, 184, 185, 207, 213, 255, 333, 339, 398], "locat": [100, 294, 298, 511], "log": [181, 219, 273, 356, 357, 360, 397, 398, 399, 400, 401, 402, 403, 404, 459, 472, 493], "log2": 459, "log_2": [215, 472], "log_softmax": 360, "logarithm": [444, 469, 471, 472], "logic": [3, 210, 371, 372, 373, 394, 395, 470], "logit": [29, 40, 205, 244, 326, 357, 420], "logsoftmax": [357, 360], "long": [31, 105, 127, 224, 293, 413, 488], "lookup": [296, 384], "loop": [1, 13, 14, 15, 16, 232, 349, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417], "loss": [16, 25, 231, 232, 233, 234, 235, 244, 268, 269, 270, 272, 273, 293, 317, 318, 321, 322, 324, 325, 326, 328, 341, 344, 345, 346, 347, 353, 356, 357, 358, 359, 360, 362, 363, 364, 366, 367, 368, 369, 395, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 511, 516], "low": [97, 112, 117, 118, 121, 429, 432], "lower": [18, 111, 209, 314, 339, 387, 388, 389, 390, 398, 407, 415, 416, 417, 432, 465, 500, 517, 518], "lower_triangular": 517, "lowest": 429, "lp": 279, "lr": [16, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417], "lr_lambda": 401, "lr_schedul": 405, "lrschedul": 405, "ls_init_valu": 92, "lu": 22, "lucid": [0, 1, 2, 5, 6, 7, 8, 12, 21, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 268, 269, 270, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 392, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 426, 459, 502, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533], "m": [85, 100, 192, 222, 224, 231, 232, 235, 330, 378, 379, 381, 382, 386, 387, 390, 402, 410, 411, 412, 413, 414, 446, 451, 517, 518], "m1": 16, "m2": 16, "m3": 16, "m_": [410, 411, 412, 413, 414, 517, 518], "m_m": 388, "m_t": [388, 413, 414], "maaten": 100, "mac": 16, "machin": [3, 7, 8, 25, 100, 207, 211, 225, 306, 386, 410, 422, 431], "magnitud": [258, 296, 384, 415, 416, 535], "mai": [3, 10, 13, 15, 16, 20, 22, 25, 121, 209, 232, 234, 279, 299, 343, 349, 358, 396, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 420, 433, 495, 519, 529, 535], "main": [26, 97, 232, 448, 451, 517, 518], "maintain": [25, 31, 41, 46, 55, 64, 66, 67, 68, 84, 85, 86, 87, 95, 100, 108, 111, 128, 129, 130, 132, 133, 134, 135, 158, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 179, 181, 214, 218, 228, 229, 231, 232, 233, 235, 242, 258, 311, 312, 315, 316, 317, 318, 324, 341, 343, 344, 345, 346, 347, 362, 363, 364, 366, 367, 368, 410, 415, 526, 529, 533], "major": 16, "make": [1, 3, 10, 31, 43, 44, 47, 48, 88, 97, 100, 101, 110, 112, 114, 116, 117, 118, 120, 121, 123, 126, 135, 147, 182, 183, 184, 185, 186, 190, 191, 198, 201, 207, 232, 235, 325, 357, 358, 369, 378, 381, 394, 409, 410, 411, 412, 422, 424, 433, 439, 504, 512, 524, 535], "manag": [229, 231, 232, 233, 234, 235, 394, 406, 420, 421, 423, 424, 433], "manhattan": 24, "manipul": [10, 13, 231, 233, 535], "manner": [10, 13, 14, 180, 232, 235, 419], "manual": [10, 268, 269, 273, 339, 356, 357, 360], "map": [13, 15, 92, 100, 105, 145, 146, 147, 158, 168, 175, 208, 211, 212, 214, 215, 216, 229, 243, 245, 252, 257, 275, 294, 306, 325, 328, 337, 343, 349, 365, 384, 420, 495, 511], "mark": 503, "marri": 100, "mask": [100, 228, 247, 330, 331, 341, 344, 345, 346, 347, 386, 387, 388, 389, 390, 503, 517, 518, 523], "masked_fil": 502, "match": [10, 11, 15, 16, 27, 55, 209, 210, 216, 223, 229, 232, 235, 247, 251, 253, 268, 270, 272, 278, 283, 285, 300, 301, 302, 342, 376, 384, 395, 446, 453, 469, 494, 508, 509, 512, 515, 521, 527, 535], "math": [330, 466, 479, 485], "mathbb": [330, 512], "mathbf": [13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 31, 203, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 247, 265, 267, 293, 298, 303, 304, 305, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 331, 333, 334, 335, 336, 337, 338, 341, 344, 345, 346, 347, 349, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 437, 438, 439, 443, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 496, 501, 506, 507, 508, 509, 513, 514, 515, 517, 518, 519, 521, 522, 526, 527, 528, 529, 530, 531, 532, 533], "mathcal": [211, 311, 313, 315, 341, 344, 345, 346, 347, 356, 357, 358, 359, 360, 362, 363, 364, 366, 367, 368, 369, 493], "mathemat": [16, 22, 300, 301, 302, 528, 530, 531, 532], "mathrm": [25, 477], "matmul": [339, 446, 459], "matric": [17, 19, 20, 22, 25, 27, 28, 293, 330, 390, 437, 438, 439, 451, 504, 517, 518], "matrix": [11, 13, 16, 17, 18, 19, 20, 22, 23, 25, 26, 27, 28, 31, 255, 265, 293, 296, 339, 353, 354, 384, 394, 437, 446, 484, 504], "matrix_pow": 21, "matthew": 100, "max": [10, 24, 165, 192, 241, 279, 283, 284, 285, 290, 291, 292, 296, 319, 320, 322, 323, 374, 375, 376, 380, 381, 382, 384, 397, 398, 403, 412, 440, 459, 465, 498], "max_box": 217, "max_lr": 398, "max_norm": [296, 384], "max_pool": [380, 381, 382], "max_pool1d": [264, 289], "max_pool2d": [264, 289], "max_pool3d": [264, 289], "max_valu": 465, "maxim": [3, 49, 122], "maximum": [24, 110, 211, 213, 217, 223, 322, 323, 380, 381, 382, 397, 398, 410, 412, 459, 465, 473, 498, 531], "maxpool": [29, 205], "maxpool1d": [351, 383], "maxpool1dmodel": 380, "maxpool2d": [232, 235, 334, 351, 383], "maxpool2dmodel": 381, "maxpool3d": [335, 351, 383], "maxpool3dmodel": 382, "maxvit": [106, 107, 108, 109, 110], "maxvit_bas": 100, "maxvit_larg": [100, 107], "maxvit_smal": 100, "maxvit_tini": [100, 108], "maxvit_xlarg": 100, "mbconv": 105, "mean": [5, 6, 7, 8, 10, 13, 14, 15, 26, 145, 146, 212, 213, 216, 228, 242, 248, 249, 250, 256, 268, 269, 270, 272, 273, 274, 277, 300, 301, 302, 313, 317, 318, 319, 321, 322, 324, 325, 328, 335, 341, 349, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 366, 367, 368, 369, 403, 410, 411, 412, 413, 414, 415, 421, 430, 459, 465, 469, 471, 472, 473, 475, 479, 481, 483, 487, 488, 489, 524, 527, 535], "meaning": [14, 235], "meant": 223, "measur": [356, 357, 359, 360], "mechan": [31, 55, 65, 66, 67, 68, 100, 105, 125, 126, 127, 128, 129, 134, 145, 146, 165, 175, 179, 181, 182, 183, 184, 185, 186, 189, 190, 197, 208, 224, 225, 234, 265, 330, 495], "media": 100, "medic": [253, 338], "medium": [48, 52, 56, 85, 100, 119, 120, 123, 128], "meet": [100, 374], "mem_is_caus": [387, 388], "mem_key_padding_mask": [386, 387, 388], "mem_mask": [386, 387, 388], "membership": 356, "memori": [2, 3, 16, 69, 134, 386, 387, 388, 423, 449, 450], "merg": [13, 213, 217, 349], "mergesort": [493, 511], "meshgrid": 502, "metal": [419, 434], "method": [3, 10, 14, 16, 17, 22, 75, 165, 203, 204, 208, 231, 232, 233, 234, 235, 268, 269, 270, 272, 273, 294, 311, 312, 315, 316, 356, 357, 358, 359, 360, 392, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 433], "metric": 403, "mha": 330, "mid": [95, 201], "mid_channel": [117, 118], "middl": [106, 107, 422], "might": 394, "migrat": 16, "mileston": 402, "mimic": 453, "min": [319, 320, 323, 397, 398, 403, 441, 459, 465, 498], "min_lr": 403, "min_siz": 217, "min_valu": 465, "mind": [0, 3, 232, 235, 423, 477], "mingx": 100, "mini": 1, "minibackbon": 212, "minim": [4, 93, 100, 113, 235, 356, 357, 358, 359, 360, 362, 363, 364, 366, 367, 368, 369, 406], "minima": 398, "minimalist": 16, "minimum": [217, 218, 397, 398, 403, 459, 465, 475, 498], "minu": 325, "mirror": [456, 458], "mismatch": [10, 13, 15, 75, 105, 209, 210, 229, 349, 394, 395], "miss": [229, 394], "mitig": [240, 317, 321, 324, 362, 363, 364], "mix": [92, 420, 423], "mixer": 92, "mlp": [16, 55, 92, 105, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 180, 181, 307], "mlp_dim": 197, "mlp_ratio": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 92, 105, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 180, 181], "mlx": [110, 419, 434, 452, 493], "mnist": [4, 7, 9, 102, 103], "mnist_train": [4, 8], "mobil": [100, 111, 112, 113, 114, 116, 117, 118, 121, 131], "mobilenet": [112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 323], "mobilenet_v2": 100, "mobilenet_v3": [117, 118], "mobilenet_v3_larg": 100, "mobilenet_v3_smal": 100, "mobilenet_v4": [119, 120, 121, 122, 123], "mobilenet_v4_conv_larg": 100, "mobilenet_v4_conv_medium": 100, "mobilenet_v4_conv_smal": 100, "mobilenet_v4_hybrid_larg": 100, "mobilenet_v4_hybrid_medium": 100, "mobilenetv2": [100, 112], "mobilenetv3": [100, 113, 117, 118], "mode": [16, 262, 274, 277, 293, 294, 298, 311, 312, 341, 343, 344, 345, 346, 347, 392, 398, 403, 434, 506], "model": [1, 3, 4, 10, 16, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 244, 247, 251, 252, 257, 296, 299, 300, 301, 302, 307, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 333, 334, 335, 336, 338, 339, 341, 343, 344, 345, 349, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 366, 369, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 423, 424, 433, 464, 524, 525, 535], "model_b0": 74, "model_b7": 74, "model_tini": 92, "moder": [44, 48, 96, 120, 135, 169], "modern": [16, 40, 41, 92, 100], "modif": [204, 235], "modifi": [16, 30, 56, 57, 58, 59, 60, 61, 62, 63, 64, 119, 147, 203, 206, 231, 232, 233, 234, 309, 311, 312, 313, 314, 315, 316, 341, 396, 421, 431, 434, 493, 501, 503, 510, 519, 522], "modul": [5, 6, 7, 8, 10, 16, 29, 30, 31, 40, 41, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 74, 75, 88, 91, 92, 97, 98, 99, 100, 101, 105, 111, 112, 113, 114, 123, 124, 125, 147, 158, 165, 175, 180, 181, 192, 203, 205, 206, 208, 212, 213, 214, 215, 216, 217, 225, 228, 230, 231, 232, 233, 234, 235, 258, 300, 301, 302, 303, 304, 305, 306, 307, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 392, 394, 395, 396, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 424, 433, 525, 535], "modular": [3, 16, 207, 225, 229, 232, 235, 394, 535], "moduledict": [232, 233, 235, 236], "modulelist": [234, 235, 236], "moment": [410, 411, 412, 413, 414], "momentum": [274, 277, 300, 301, 302, 362, 363, 364, 366, 367, 368, 398, 407, 413, 415, 417], "momentum_decai": 413, "monitor": 403, "monoton": 327, "moor": 25, "more": [3, 4, 7, 10, 11, 20, 43, 57, 59, 61, 68, 106, 107, 108, 127, 128, 129, 133, 147, 154, 187, 188, 190, 191, 209, 212, 227, 231, 232, 235, 257, 303, 304, 305, 317, 344, 345, 346, 347, 386, 394, 395, 406, 407, 408, 411, 412, 415, 416, 417, 430, 439, 446, 487, 514, 517, 518, 535], "most": [17, 47, 100, 126, 207, 381, 525, 526, 535], "mostli": 477, "move": [16, 407, 415], "mse": [270, 272, 358, 359], "mse_loss": [16, 264, 271], "mseloss": [351, 361], "mu": [31, 313, 362, 363, 364, 366, 367, 368, 369, 489], "mu_c": 527, "mu_i": [366, 367, 368], "much": [126, 535], "mul": 442, "multi": [3, 4, 11, 55, 57, 59, 61, 66, 67, 68, 92, 98, 100, 105, 124, 125, 130, 131, 132, 133, 135, 136, 137, 175, 176, 177, 178, 182, 183, 184, 185, 186, 188, 189, 190, 191, 197, 214, 217, 225, 244, 247, 269, 273, 307, 326, 330, 357, 360, 386, 388, 390, 420, 434, 474, 483, 489], "multi_conv": [55, 57, 59, 61], "multidimension": [428, 432, 449], "multiheadattent": [332, 351], "multipl": [1, 3, 11, 13, 16, 17, 23, 27, 29, 55, 57, 59, 61, 147, 165, 179, 207, 215, 233, 234, 235, 255, 298, 299, 306, 307, 330, 339, 341, 344, 345, 346, 347, 349, 357, 360, 387, 389, 394, 396, 399, 403, 422, 425, 428, 429, 430, 432, 437, 442, 446, 449, 450, 484, 495, 512, 519, 524, 529, 535], "multipli": [23, 115, 234, 267, 354, 392, 402, 403, 404, 416, 443, 459, 472], "multiscaleroialign": 221, "multisteplr": 405, "must": [0, 1, 3, 16, 18, 19, 20, 22, 23, 26, 27, 28, 55, 209, 210, 216, 223, 229, 231, 232, 233, 234, 235, 251, 258, 278, 330, 341, 343, 344, 345, 346, 347, 360, 384, 386, 388, 390, 392, 395, 400, 425, 487, 494, 495, 496, 501, 503, 506, 508, 509, 512, 514, 515, 517, 518, 522, 526, 527, 528, 529, 530, 532], "mx": [419, 434], "my_simple_model": 424, "mymodel": [229, 230, 394, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417], "myoptim": [395, 406], "n": [13, 23, 24, 100, 147, 159, 160, 161, 162, 163, 164, 176, 177, 178, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 231, 232, 235, 247, 248, 249, 250, 251, 252, 253, 255, 257, 260, 261, 262, 265, 267, 268, 269, 270, 272, 273, 274, 275, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 296, 298, 299, 300, 301, 302, 306, 311, 313, 315, 330, 331, 333, 334, 335, 336, 337, 338, 339, 346, 347, 352, 354, 356, 357, 359, 360, 362, 363, 364, 365, 366, 367, 368, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 386, 387, 388, 389, 390, 427, 446, 451, 474, 477, 487, 489, 493, 500, 505], "n1": 24, "nabla": 519, "nabla_": [408, 409, 410, 411, 412, 413, 414, 416], "nabla_t": 414, "nadam": 418, "nair": [5, 6], "name": [10, 13, 14, 15, 100, 211, 224, 229, 231, 233, 235, 349, 424], "nan": [26, 28], "nano": [51, 100], "natur": [25, 333, 352, 377, 380, 386, 444, 469, 470, 471], "ndarrai": [16, 228, 230, 425, 434, 448, 450, 453, 456, 458, 490], "ndim": [26, 28, 230, 434], "ne": 23, "nearest": [294, 298, 392, 470, 477], "nearli": 434, "necessari": [4, 5, 6, 7, 8, 16, 25, 218, 501, 522], "need": [2, 4, 14, 15, 123, 208, 224, 232, 233, 234, 244, 251, 252, 352, 386, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 449, 450, 524, 525, 535], "neg": [23, 25, 28, 237, 273, 299, 317, 321, 322, 324, 357, 360, 416, 477, 493, 496, 523], "negative_slop": [240, 321], "neglect": 234, "neighbor": [294, 298], "neq": 24, "nest": [232, 235, 394, 420, 423], "nesterov": 413, "net": [100, 205, 209, 210, 212, 213], "network": [3, 4, 10, 14, 29, 30, 31, 40, 41, 67, 69, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 91, 97, 100, 104, 111, 114, 115, 119, 122, 138, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 165, 166, 167, 168, 169, 170, 175, 192, 197, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 225, 228, 229, 230, 231, 232, 233, 234, 235, 238, 241, 242, 243, 244, 245, 248, 249, 250, 252, 257, 258, 265, 267, 274, 294, 299, 306, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 333, 334, 335, 337, 338, 341, 342, 343, 344, 345, 346, 347, 349, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 369, 377, 378, 379, 380, 381, 382, 384, 386, 388, 390, 394, 395, 406, 407, 415, 417, 432, 433, 434, 447, 455, 457, 473, 475, 506, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535], "neural": [3, 4, 10, 14, 29, 30, 31, 40, 74, 76, 77, 78, 79, 80, 81, 82, 83, 97, 100, 104, 206, 207, 208, 212, 213, 224, 228, 229, 230, 231, 232, 233, 234, 235, 238, 241, 242, 243, 244, 245, 248, 249, 250, 258, 265, 267, 274, 299, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 333, 334, 335, 341, 342, 343, 344, 345, 346, 347, 349, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 369, 377, 378, 379, 380, 381, 382, 384, 394, 395, 406, 407, 415, 417, 432, 433, 434, 447, 455, 457, 473, 475, 506, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535], "neuralnetwork": [319, 320, 322, 327], "neuron": 321, "never": [493, 529], "new": [11, 15, 220, 229, 230, 237, 238, 240, 241, 242, 243, 245, 265, 267, 298, 307, 311, 312, 313, 314, 315, 316, 395, 400, 403, 423, 424, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 450, 453, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 475, 476, 477, 478, 479, 480, 481, 482, 484, 485, 486, 487, 488, 490, 494, 496, 501, 503, 506, 508, 509, 510, 514, 515, 517, 518, 521, 522, 523], "new_box": 218, "new_tensor": 484, "next": [235, 524], "nll": 273, "nll_loss": [264, 271], "nllloss": [351, 361], "nlp": [207, 296, 384], "nm": [210, 213, 217, 221], "nms_iou_thresh": 213, "nn": [5, 6, 7, 8, 29, 31, 40, 41, 55, 65, 69, 74, 75, 88, 92, 97, 101, 105, 111, 112, 113, 114, 124, 125, 131, 132, 133, 135, 136, 137, 147, 158, 165, 171, 172, 173, 174, 175, 179, 180, 181, 192, 205, 208, 210, 212, 213, 214, 215, 216, 217, 236, 239, 246, 254, 263, 266, 271, 276, 289, 295, 297, 308, 310, 329, 332, 340, 348, 350, 351, 355, 361, 370, 383, 385, 391, 393, 395, 396, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 424, 525, 535], "no_grad": [16, 421], "node": [16, 434], "nois": [28, 433], "non": [20, 23, 25, 28, 100, 105, 211, 213, 217, 223, 234, 238, 240, 241, 293, 311, 312, 317, 318, 319, 321, 322, 323, 324, 325, 327, 328, 341, 344, 345, 346, 347, 386, 387, 388, 389, 390, 410, 411, 427, 444, 446, 464, 465, 470, 477, 505, 520], "nonconform": 16, "none": [0, 1, 2, 5, 6, 7, 8, 11, 24, 31, 55, 65, 74, 75, 88, 92, 97, 101, 111, 112, 113, 114, 124, 125, 138, 147, 180, 181, 203, 212, 214, 215, 216, 217, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 258, 265, 267, 268, 269, 270, 272, 273, 274, 277, 278, 296, 299, 300, 301, 302, 303, 304, 305, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 333, 334, 335, 336, 337, 338, 341, 342, 343, 344, 345, 346, 347, 349, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 392, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 422, 425, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 496, 498, 499, 501, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 530, 532, 533], "nonzero": 502, "norm": [17, 21, 55, 65, 105, 108, 109, 124, 125, 180, 181, 279, 296, 384, 387, 389, 412], "norm_first": [386, 388, 390], "norm_lay": [55, 65, 105, 124, 125, 131, 132, 133, 135, 136, 137, 180, 181], "norm_layer_tf": 105, "norm_typ": [296, 384], "normal": [5, 6, 7, 8, 31, 40, 55, 65, 100, 105, 124, 125, 131, 132, 133, 135, 136, 137, 165, 180, 181, 186, 187, 188, 189, 190, 191, 212, 213, 238, 242, 244, 245, 257, 274, 275, 277, 278, 293, 294, 296, 300, 301, 302, 310, 311, 315, 318, 324, 326, 341, 362, 363, 364, 365, 366, 367, 368, 369, 384, 386, 387, 388, 389, 390, 415, 430, 433, 498, 499, 500, 524, 534, 535], "normalized_shap": [278, 369], "notat": [10, 11, 13, 14, 15, 349], "note": [248, 341], "noth": [256, 259, 260, 261], "notimplementederror": [2, 229, 395], "notin": 465, "nov": 100, "novel": [7, 100, 105], "now": [16, 210], "np": [147, 159, 160, 161, 162, 163, 164, 176, 177, 178, 228, 230, 306, 357, 360, 384, 419, 427, 434, 439, 446, 447, 448, 451, 455, 457, 458, 484, 490, 525], "npy": [5, 6, 7, 8], "num": [387, 389, 454], "num_block": 31, "num_class": [29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 326, 357, 360], "num_decoder_lay": [225, 386], "num_embed": [296, 384], "num_encoder_lay": [225, 386], "num_featur": [235, 300, 301, 302, 362, 363, 364, 366, 367, 368], "num_head": [31, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 105, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 197, 225, 330, 386, 387, 388, 389, 390], "num_init_featur": [69, 70, 71, 72, 73], "num_lay": [197, 387, 389], "num_paramet": 234, "num_stag": 125, "number": [0, 1, 2, 5, 6, 7, 8, 10, 13, 15, 19, 20, 22, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 214, 216, 217, 225, 230, 232, 234, 235, 247, 248, 249, 250, 251, 252, 253, 255, 260, 261, 262, 265, 267, 269, 273, 274, 275, 277, 280, 281, 282, 294, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 311, 312, 315, 316, 325, 330, 333, 334, 335, 336, 337, 338, 339, 349, 352, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 397, 398, 402, 403, 404, 407, 419, 427, 428, 431, 432, 434, 444, 447, 449, 451, 454, 473, 474, 475, 477, 488, 489, 491, 492, 495, 496, 498, 499, 500, 501, 505, 506, 508, 509, 510, 513, 515, 516, 522, 527, 529, 530, 532, 535], "numer": [14, 22, 25, 218, 257, 268, 269, 274, 275, 277, 278, 279, 300, 301, 302, 323, 342, 356, 357, 362, 363, 364, 365, 366, 367, 368, 369, 386, 388, 390, 408, 409, 410, 411, 412, 413, 414, 415, 427, 434, 436, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 490, 525], "numpi": [16, 228, 230, 357, 360, 419, 427, 434, 439, 452, 484, 487, 494, 506, 508, 515, 525, 535], "o": [3, 211, 224, 330, 379, 382, 455, 456, 493], "objdet": [214, 215, 216, 217, 218, 219, 220, 222, 223], "object": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535], "observ": 410, "obtain": [1, 105], "occur": [15, 299, 420, 423, 424, 496], "occurr": 23, "odot": [341, 344, 345, 346, 347], "off": [44, 120, 421], "offer": [4, 10, 41, 42, 44, 54, 68, 95, 106, 107, 110, 120, 128, 129, 131, 133, 198, 209, 394, 406, 433, 493, 535], "offset": [218, 219, 451], "often": [23, 156, 157, 248, 249, 250, 252, 253, 255, 294, 296, 336, 342, 357, 360, 447, 457, 525, 529, 533, 535], "old": 403, "older": 413, "onc": [208, 210, 211, 212], "one": [0, 11, 14, 171, 172, 173, 174, 179, 207, 234, 235, 244, 248, 251, 267, 286, 290, 300, 301, 302, 324, 325, 326, 333, 336, 345, 357, 360, 362, 366, 377, 380, 392, 395, 420, 422, 423, 430, 445, 452, 453, 456, 473, 475, 497, 507, 514, 519, 525], "ones": [16, 265, 267, 284, 285, 333, 334, 335, 354, 362, 363, 364, 366, 367, 368, 369, 375, 376, 394, 451, 452, 456, 459, 495], "ones_lik": 459, "onli": [293, 294, 298, 319, 322, 341, 342, 344, 345, 346, 347, 356, 357, 360, 362, 363, 364, 366, 367, 368, 369, 380, 381, 382, 416, 420, 421, 447, 465, 473, 475, 484, 487, 493, 506, 507, 509, 510, 513, 516, 517, 518], "onto": [26, 28, 212], "openml": [5, 6, 7, 8, 16], "oper": [3, 10, 11, 13, 14, 15, 16, 17, 22, 25, 31, 55, 57, 59, 61, 105, 134, 145, 146, 165, 166, 167, 168, 169, 170, 212, 228, 229, 232, 237, 238, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 255, 258, 262, 265, 267, 280, 281, 282, 286, 287, 288, 290, 291, 292, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 331, 333, 334, 335, 336, 337, 339, 341, 343, 344, 345, 346, 347, 349, 352, 353, 354, 371, 372, 373, 374, 377, 378, 379, 380, 381, 382, 384, 394, 420, 421, 422, 425, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 447, 449, 450, 455, 457, 469, 471, 472, 473, 474, 475, 477, 479, 481, 483, 484, 487, 489, 496, 501, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 525, 527, 533], "operand": 434, "operatornam": [23, 25, 330, 386, 387, 388, 389, 390, 427, 491, 492, 493], "opposit": [407, 510], "optim": [3, 10, 14, 16, 17, 23, 25, 26, 28, 40, 45, 46, 49, 52, 54, 60, 63, 64, 69, 75, 84, 85, 86, 87, 88, 89, 90, 91, 94, 97, 98, 99, 100, 112, 113, 117, 118, 120, 121, 122, 123, 126, 186, 187, 210, 228, 230, 233, 234, 255, 333, 334, 335, 384, 394, 397, 398, 399, 400, 401, 402, 403, 404], "optimizer_st": [395, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417], "option": [1, 5, 6, 7, 8, 10, 13, 14, 15, 24, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 237, 240, 244, 247, 249, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 265, 267, 268, 269, 270, 272, 273, 274, 275, 277, 278, 279, 286, 287, 288, 290, 291, 292, 293, 294, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 311, 312, 313, 314, 315, 316, 317, 321, 326, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 392, 395, 397, 398, 399, 400, 401, 402, 403, 404, 407, 415, 417, 425, 427, 428, 429, 430, 432, 434, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 465, 473, 474, 475, 477, 483, 488, 489, 490, 491, 492, 493, 495, 496, 498, 499, 500, 504, 508, 510, 511, 512, 513, 514, 516, 517, 518, 519, 520, 525, 529, 530, 532], "ord": [24, 279], "order": [1, 3, 10, 16, 24, 28, 231, 232, 233, 234, 235, 427, 446, 488, 493, 511, 516, 520, 524], "ordered_dict": 235, "ordereddict": [229, 231, 232, 235], "organ": [55, 231, 232, 233, 235, 424], "orient": 535, "origin": [32, 33, 34, 35, 36, 37, 38, 39, 41, 90, 100, 104, 180, 181, 191, 212, 213, 256, 299, 306, 328, 420, 464, 470, 493, 495, 506, 507, 508, 509, 510, 511, 515, 516, 520, 521, 533], "orthogon": [25, 26, 28], "orthonorm": 26, "oscil": [407, 415, 417], "other": [2, 3, 22, 57, 59, 61, 90, 99, 101, 104, 120, 124, 212, 228, 229, 232, 235, 311, 312, 341, 342, 394, 395, 421, 433, 447, 449, 455, 457, 487, 504, 516, 535], "otherwis": [148, 149, 150, 151, 152, 153, 154, 155, 166, 167, 168, 169, 170, 210, 237, 240, 241, 242, 244, 258, 317, 319, 320, 321, 322, 324, 326, 343, 344, 345, 346, 347, 358, 377, 378, 379, 380, 381, 382, 387, 389, 395, 416, 424, 440, 441, 473, 475, 491, 492, 503, 516, 517, 518, 520], "otim": [25, 265, 352], "out": [0, 3, 4, 10, 16, 213, 214, 215, 216, 237, 238, 240, 241, 242, 243, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 274, 275, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 296, 298, 311, 312, 315, 316, 331, 333, 334, 335, 336, 337, 338, 339, 341, 343, 344, 345, 346, 347, 349, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 388, 407, 427, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 491, 492, 493, 496, 497, 501, 506, 507, 508, 509, 513, 514, 515, 517, 518, 521, 522, 523], "out_channel": [101, 113, 117, 118, 214, 232, 235, 300, 301, 302, 303, 304, 305, 307, 333, 334, 335, 336, 337, 338, 363, 364, 377, 378, 379, 380, 381, 382, 394], "out_featur": [231, 232, 235, 265, 267, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 334, 335, 341, 344, 345, 352, 354, 356, 357, 358, 359, 360, 362, 366, 369, 377, 378, 379, 380, 381, 382], "outcom": [529, 530, 532], "outer": [11, 459], "outlier": [270, 358], "outputoutput_height": 255, "output_lay": [232, 235], "output_pad": [251, 252, 253, 336, 337, 338], "output_s": [215, 216, 232, 280, 281, 282, 283, 284, 285, 371, 372, 373, 374, 375, 376], "output_width": 255, "output_with_norm": [296, 384], "output_with_pad": [296, 384], "outsid": [0, 343, 420], "over": [0, 1, 2, 3, 11, 14, 17, 112, 122, 145, 146, 175, 205, 208, 209, 212, 222, 223, 229, 232, 234, 244, 280, 281, 282, 283, 284, 285, 306, 326, 333, 334, 335, 336, 337, 338, 357, 360, 362, 363, 364, 366, 367, 368, 369, 372, 373, 376, 377, 378, 379, 380, 381, 382, 396, 398, 404, 407, 408, 409, 410, 411, 428, 432, 446, 473, 474, 475, 483, 487, 489, 529, 530, 532], "overal": [203, 258], "overdetermin": 25, "overfit": [1, 29, 205, 259, 262, 342, 344, 345, 346, 347, 407, 410, 415, 417], "overhead": [100, 113, 306], "overlap": [100, 105, 213, 217, 223], "overli": 323, "overrid": [2, 3, 55, 108, 109, 120, 121, 122, 180, 181, 493], "overridden": [229, 395], "overshoot": 396, "overwrit": [231, 233], "own": [4, 16, 210, 231, 232, 233, 234, 248, 249, 250, 251, 252, 316, 394, 527], "p": [24, 25, 74, 230, 233, 234, 256, 257, 258, 259, 260, 261, 262, 279, 296, 339, 341, 342, 344, 345, 346, 347, 377, 380, 381, 384, 529, 530, 532, 535], "p_": 211, "p_d": [379, 382], "p_h": [339, 378, 379, 382], "p_w": [339, 378, 379, 382], "packag": [2, 3, 4, 10, 17, 207, 394, 406, 424, 431, 433, 525, 535], "pad": [101, 208, 212, 213, 232, 235, 248, 249, 250, 251, 252, 253, 255, 280, 281, 282, 283, 286, 287, 288, 290, 291, 292, 294, 296, 300, 301, 302, 303, 304, 305, 307, 333, 334, 335, 336, 337, 338, 339, 363, 364, 371, 372, 373, 374, 377, 378, 379, 380, 381, 382, 384, 502], "pad_after_dim1": 506, "pad_after_dim2": 506, "pad_before_dim1": 506, "pad_before_dim2": 506, "pad_width": 506, "padding_height": 255, "padding_idx": [296, 384], "padding_mod": 294, "padding_width": 255, "pair": 265, "panda": [16, 100], "pang": 100, "paper": [32, 33, 34, 35, 36, 37, 38, 39, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 89, 134], "paradigm": 100, "parallel": [1, 3, 55, 100, 175, 224, 330], "param": [229, 230, 233, 234, 395, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417], "param1": 229, "param_dict": 233, "param_group": [395, 406], "param_groups_setup": 395, "param_list": 234, "param_s": 424, "paramet": [0, 2, 16, 100, 102, 103, 104, 211, 224, 229, 394, 395, 396, 406, 433, 535], "parameter": 114, "parameterdict": 236, "parameterlist": 236, "parent": [16, 394, 434], "pars": 419, "part": [228, 229, 251, 316, 336, 337, 384, 394, 421, 433, 447, 448, 451, 455, 456, 457, 458, 495, 512, 517, 518, 525, 535], "partial": [16, 18, 19, 20, 22, 23, 24, 25, 27, 28, 237, 238, 240, 241, 242, 243, 244, 245, 265, 267, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 333, 334, 335, 336, 337, 341, 344, 345, 346, 347, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 494, 496, 501, 503, 504, 506, 507, 508, 509, 510, 513, 514, 515, 516, 517, 518, 521, 522, 523], "particip": [16, 230, 525], "particular": [231, 233], "particularli": [25, 55, 57, 59, 61, 105, 112, 120, 159, 160, 161, 162, 163, 164, 209, 232, 233, 234, 235, 244, 257, 267, 300, 301, 302, 303, 304, 305, 326, 354, 357, 360, 366, 367, 368, 369, 397, 411, 421, 424, 454, 470, 524], "partit": [105, 375, 464, 512], "pascal": [209, 210], "pass": [2, 16, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 134, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 156, 157, 158, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 175, 176, 177, 178, 179, 192, 193, 194, 195, 196, 205, 210, 212, 213, 229, 230, 231, 232, 233, 234, 235, 293, 298, 300, 301, 302, 306, 307, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 334, 335, 336, 337, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 366, 369, 377, 378, 379, 380, 381, 382, 386, 387, 388, 389, 390, 394, 420, 434, 452, 453, 454, 474, 483, 487, 488, 489, 493, 496, 501, 507, 509, 513, 517, 518, 522, 525, 535], "past": [407, 408, 410, 415], "patch": [55, 57, 59, 61, 100, 105, 124, 125, 180, 181, 197, 198, 199, 200, 201, 202, 213, 255, 339, 378], "patch_norm": [180, 181], "patch_siz": [55, 124, 125, 131, 132, 133, 134, 135, 136, 137, 180, 181, 197, 198, 199, 200, 201, 202], "path": [3, 5, 6, 7, 8, 40, 41, 55, 92, 105, 125, 258, 343], "pathwai": 100, "patienc": 403, "pattern": [10, 11, 13, 14, 15, 16, 31, 57, 59, 61, 100, 211, 241, 306, 322, 333, 334, 335, 349], "pedagog": 16, "penal": [407, 415, 417], "penalti": [408, 409, 410, 411, 412, 413, 414], "penros": 25, "per": [1, 13, 109, 113, 125, 131, 132, 133, 135, 136, 137, 159, 160, 161, 162, 163, 164, 176, 177, 178, 208, 211, 212, 213, 214, 217, 247, 280, 284, 330, 339, 349, 366, 367, 368, 369, 371, 376, 390, 398, 494], "perceptron": 92, "perform": [3, 10, 11, 14, 16, 17, 18, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 57, 59, 61, 63, 64, 66, 67, 68, 75, 84, 85, 86, 87, 92, 93, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 109, 113, 114, 115, 116, 120, 121, 122, 123, 126, 127, 128, 129, 131, 134, 155, 171, 172, 173, 174, 175, 181, 187, 188, 189, 192, 201, 205, 207, 212, 215, 216, 227, 229, 230, 234, 238, 247, 248, 249, 250, 251, 252, 253, 274, 275, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 303, 304, 305, 306, 307, 311, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 327, 328, 333, 334, 335, 336, 337, 339, 341, 344, 345, 346, 347, 349, 352, 353, 354, 362, 363, 364, 366, 367, 368, 369, 371, 372, 373, 374, 376, 377, 378, 379, 380, 381, 382, 392, 395, 396, 400, 403, 420, 421, 431, 433, 435, 436, 439, 442, 445, 446, 469, 473, 475, 477, 483, 488, 494, 512, 523, 524, 526, 528, 533, 535], "period": 397, "permut": [13, 349, 426, 446, 488], "persist": [228, 425, 428, 429, 430, 432, 449, 450], "perturb": [20, 27, 28, 535], "phase": [31, 210], "phi": [238, 318], "pi": [238, 318, 397, 466, 479, 485], "pick": [294, 493], "pico": [52, 100], "piecewis": [319, 320], "pil": [525, 535], "pinv": 21, "pioneer": 100, "pip": 16, "pipelin": [5, 6, 7, 8, 210, 212, 213, 217, 222, 349, 433, 524, 525, 527], "pixel": [5, 6, 7, 8, 213, 217, 293, 294, 298, 392, 527, 529], "pixel_scal": 213, "place": [208, 309, 311, 312, 313, 314, 315, 316, 427, 434, 477, 503, 510], "placehold": [229, 353], "placement": [16, 434], "plai": 433, "platform": 419, "plot": 504, "point": [4, 216, 299, 402, 420, 421], "pointwis": [303, 304, 305], "pool": [10, 29, 100, 101, 102, 103, 104, 105, 138, 147, 158, 165, 175, 192, 205, 208, 211, 212, 213, 215, 216, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 306, 307, 334, 335, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 473, 475], "pool1": 235, "pool2": 235, "pool_siz": [208, 212], "poorli": 22, "popul": 229, "popular": [4, 100], "portion": [495, 517, 518, 535], "pose": 25, "posit": [1, 18, 23, 31, 100, 180, 181, 197, 222, 225, 229, 235, 247, 299, 317, 321, 322, 324, 331, 377, 378, 379, 380, 381, 382, 386, 387, 388, 389, 390, 416, 422, 444, 495, 503, 508, 511, 515, 516, 523, 528], "possibl": 535, "post": 223, "potenti": [25, 353, 415, 513], "power": [10, 16, 23, 51, 100, 110, 112, 117, 118, 125, 126, 128, 132, 135, 138, 186, 199, 306, 349, 396, 422, 459, 477, 524, 525, 535], "pp": [100, 224], "practic": [25, 95, 357, 360], "practition": 535, "pre": [31, 84, 85, 86, 87, 100, 148, 152, 153, 210], "preactbottleneck": [148, 152, 153], "preced": [100, 230, 392], "precis": [136, 213, 419, 452, 477], "precomput": 212, "preconfigur": [76, 77, 78, 79, 80, 81, 82, 83, 98, 99, 109], "pred": [16, 423], "predecessor": [41, 125], "predefin": [4, 32, 33, 34, 35, 36, 37, 38, 39, 182, 183, 184, 185, 186, 188, 189, 190, 191, 198, 199, 200, 201, 202, 207, 232, 324, 384, 396, 419], "predict": [55, 100, 180, 182, 183, 184, 185, 203, 207, 208, 212, 213, 218, 223, 356, 357, 359, 360], "prefer": 404, "prefix": [229, 424], "prepar": [3, 422, 506, 508, 515, 525, 535], "prepend": [229, 494], "preprint": 100, "preprocess": [3, 4, 255, 299, 433, 477, 524, 525, 535], "present": [356, 357, 358, 360, 362, 363, 364, 366, 367, 368, 369, 378], "preserv": [14, 100, 126, 216, 256, 258, 294, 299, 341, 343, 427, 447, 448, 451, 455, 456, 457, 458, 474, 483, 484, 489, 491, 492, 493, 495, 510, 520], "preset": [4, 106, 107, 108, 109], "pretrain": [209, 210], "prevent": [1, 10, 16, 105, 218, 231, 232, 233, 234, 235, 247, 259, 262, 279, 323, 331, 342, 344, 345, 346, 347, 356, 357, 389, 390, 396, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 423], "previou": [100, 407, 416, 420, 423], "previous": [400, 410], "primarili": 235, "principl": 100, "printprint_grad": 434, "prior": [217, 420], "priorit": [117, 118, 122, 307, 319], "prob": 425, "probabilist": 433, "probabl": [74, 90, 124, 180, 181, 197, 208, 212, 225, 238, 244, 247, 256, 257, 258, 259, 260, 261, 262, 268, 318, 326, 330, 331, 341, 342, 343, 344, 345, 346, 347, 356, 357, 360, 386, 388, 390, 425, 498, 500, 529, 530, 532, 535], "problem": [25, 26, 28, 100, 240, 317, 321, 414], "proce": [209, 210], "proceed": [100, 211], "process": [2, 3, 4, 23, 26, 28, 29, 40, 55, 57, 59, 61, 98, 100, 105, 124, 145, 146, 147, 175, 180, 204, 205, 208, 213, 223, 224, 234, 248, 249, 250, 277, 299, 300, 301, 302, 306, 307, 324, 328, 333, 335, 352, 362, 363, 364, 366, 367, 368, 369, 377, 379, 380, 382, 386, 387, 389, 407, 504, 525, 526, 527, 528, 533, 535], "produc": [16, 29, 205, 208, 213, 280, 281, 282, 283, 284, 306, 333, 334, 335, 371, 372, 373, 374, 375, 420, 427, 431, 433], "product": [11, 26, 28, 124, 125, 247, 320, 325, 327, 330, 331, 352, 369, 394, 437, 438, 442, 443, 446], "profil": 420, "program": [421, 433], "progress": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535], "project": [26, 28, 55, 57, 59, 61, 65, 105, 124, 125, 130, 131, 132, 133, 135, 136, 137, 180, 181, 212, 225, 330], "projector": 25, "promin": [377, 379, 380, 381, 382], "promot": [235, 357, 360, 394], "propag": [11, 16, 19, 20, 22, 25, 26, 27, 28, 100, 222, 229, 235, 265, 267, 293, 298, 306, 336, 378, 379, 415, 416, 425, 437, 438, 439, 443, 446, 473, 475, 491, 492, 493, 495, 504, 505, 506, 509, 511, 516, 519, 520, 521], "proper": [296, 495, 516], "properli": [0, 210, 234, 244, 326, 394, 396], "properti": [17, 19, 22, 23, 238, 242, 256, 318, 324, 341, 409, 414, 420], "proport": [5, 6, 7, 8, 489], "proportion": 533, "propos": [134, 208, 211, 212, 213, 217], "proposal_gener": 212, "provid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 13, 15, 16, 17, 30, 42, 51, 53, 56, 57, 58, 59, 60, 61, 62, 63, 64, 88, 89, 90, 97, 100, 101, 114, 120, 123, 126, 128, 129, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 180, 181, 189, 192, 197, 199, 200, 203, 204, 206, 207, 208, 209, 210, 225, 229, 231, 232, 233, 234, 238, 247, 267, 281, 282, 296, 299, 331, 349, 356, 357, 358, 360, 372, 373, 374, 377, 378, 379, 380, 381, 382, 384, 386, 387, 389, 392, 394, 395, 396, 400, 401, 406, 407, 408, 415, 417, 421, 431, 433, 434, 439, 447, 456, 473, 475, 488, 490, 500, 508, 513, 515, 535], "pseudo": [22, 25], "purpos": [42, 47, 51, 428, 432, 447, 455, 457], "pvt": [125, 126, 127, 128, 129, 130], "pvt_huge": 100, "pvt_larg": 100, "pvt_medium": 100, "pvt_small": 100, "pvt_tini": 100, "pvt_v2": [131, 132, 133, 134, 135, 136, 137], "pvt_v2_b0": 100, "pvt_v2_b1": 100, "pvt_v2_b2": [100, 134], "pvt_v2_b2_li": 100, "pvt_v2_b3": 100, "pvt_v2_b4": 100, "pvt_v2_b5": 100, "pvtv2": [100, 131, 132, 133, 134, 135, 136, 137], "pypi": 16, "pyramid": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 208, 209, 210, 214, 215], "python": [16, 419, 434, 452], "pytorch": [16, 490], "q": [26, 55, 100, 105, 125, 247, 330, 331, 390], "q_1": 55, "q_i": [31, 330], "qk": [31, 55, 105, 388, 390], "qk_scale": [55, 124, 125, 180, 181], "qkv_bia": [55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 124, 125, 131, 132, 133, 135, 136, 137, 180, 181], "qr": 21, "quad": [25, 55, 218, 296, 330, 336, 356, 357, 358, 359, 360, 380, 381, 382, 387, 389, 435, 436, 440, 441, 442, 445, 517, 518, 526], "quadrat": [125, 134, 358], "qualifi": 403, "quanfu": 100, "quantiz": 216, "queri": [55, 65, 124, 125, 131, 132, 133, 135, 136, 137, 180, 181, 247, 330, 331, 390], "quick": 420, "quickli": 396, "quicksort": [493, 511], "quoc": 100, "quotient": 436, "r": [14, 15, 26, 31, 100, 209, 210, 217, 293, 294, 330, 336, 337, 512, 529, 530, 531, 532], "r_t": 414, "radam": 418, "radix": [138, 139, 140, 141, 142, 143, 144, 145, 146, 493], "rais": [0, 1, 2, 11, 229, 394, 395, 444, 494], "rameswar": 100, "rand": [426, 433], "randint": [426, 433], "randn": [13, 15, 16, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 105, 106, 107, 108, 109, 110, 115, 116, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 176, 177, 178, 179, 192, 203, 205, 208, 209, 210, 212, 213, 214, 215, 216, 217, 247, 303, 304, 305, 306, 307, 330, 331, 336, 337, 338, 349, 386, 387, 388, 389, 390, 394, 426, 431, 433], "random": [1, 2, 3, 13, 15, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 92, 93, 94, 95, 96, 115, 116, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 176, 177, 178, 179, 203, 208, 209, 210, 212, 213, 214, 215, 216, 217, 247, 303, 304, 305, 306, 307, 330, 343, 349, 384, 386, 387, 388, 389, 390, 528, 529, 530, 531, 532, 535], "random_integ": 433, "random_tensor": 433, "randomcrop": [534, 535], "randomgrayscal": [534, 535], "randomhorizontalflip": [534, 535], "randomli": [1, 256, 258, 259, 260, 261, 262, 299, 341, 344, 345, 346, 347, 427, 528, 529, 530, 531, 532, 535], "randomnoisedataset": [0, 1, 2], "randomrot": [534, 535], "randomverticalflip": 534, "rang": [0, 1, 16, 17, 31, 44, 53, 100, 105, 123, 127, 147, 155, 190, 210, 224, 234, 243, 245, 248, 249, 258, 269, 273, 293, 294, 316, 323, 325, 328, 343, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 415, 417, 425, 427, 429, 454, 461, 462, 465, 498, 499, 500, 527, 531, 535], "rank": 25, "rasul": 7, "rate": [40, 41, 55, 74, 75, 92, 105, 124, 125, 180, 181, 209, 210, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417], "rather": [7, 13, 15, 233, 234, 349, 402, 411, 509], "ratio": [55, 74, 92, 105, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 165, 180, 181, 208, 306, 307, 533], "ravel": 502, "raw": [244, 326, 357, 434], "rceil": 464, "rcnn": [211, 213], "rcond": 25, "re": [16, 230], "reach": [285, 375, 402], "readabl": [10, 16, 231, 232, 233, 235, 349, 394], "readi": [3, 171, 172, 173, 174, 179, 207, 225], "real": [25, 28, 112, 211, 325], "rearrang": [12, 255, 350, 351], "reassembl": 100, "recalibr": [100, 166, 168, 169, 171, 172, 173, 174, 306], "receiv": [380, 381, 382, 506, 516, 517, 518], "recent": 415, "recept": [100, 105, 134, 175, 179, 307], "reciproc": [25, 459, 471, 472, 481], "recogn": 55, "recognit": [100, 104, 128, 145, 146, 180, 182, 183, 184, 185, 191, 211, 334], "recommend": [16, 110], "reconstruct": [218, 253, 511], "rectangular": 451, "rectif": 414, "rectifi": [240, 241, 321, 322, 414], "recurr": [224, 232, 369], "recurs": 229, "red": 529, "reduc": [12, 29, 31, 65, 100, 111, 125, 134, 147, 158, 175, 192, 205, 210, 284, 303, 304, 305, 306, 362, 363, 364, 366, 367, 368, 377, 378, 379, 380, 381, 382, 396, 399, 402, 403, 404, 413, 416, 423, 473, 474, 475, 483, 489, 491, 492, 529], "reducelronplateau": 405, "reduct": [10, 11, 14, 28, 74, 100, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 165, 268, 269, 270, 272, 273, 306, 307, 356, 357, 358, 359, 360, 397, 403, 404, 446, 473, 475], "redund": [212, 213], "reevalu": 395, "ref_box": 218, "refer": [4, 57, 59, 61, 134, 215, 218, 229, 336, 433, 448, 451, 453, 496], "refin": [100, 189, 208, 396], "reflect": [127, 293, 294, 421], "regardless": [25, 507], "region": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535], "regist": [16, 32, 33, 34, 35, 36, 37, 38, 39, 120, 156, 157, 159, 160, 161, 162, 163, 164, 204, 228, 229, 230, 234, 394, 424, 434], "register_buff": 228, "register_hook": 434, "register_model": [30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 98, 99, 102, 103, 104, 115, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 176, 177, 178, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 206, 209, 210, 226, 227], "register_paramet": 229, "registr": [16, 229, 394], "registri": [159, 160, 161, 162, 163, 164, 424], "registry_path": 424, "regress": [4, 208, 211, 212, 213, 218, 219, 272, 358, 359], "regul": [296, 384], "regular": [25, 29, 40, 74, 75, 90, 180, 181, 205, 258, 262, 331, 342, 344, 345, 346, 347, 402, 404, 407, 408, 409, 412, 413, 414, 415, 417], "reimagin": 100, "rel": [31, 100, 180, 181, 208, 218, 396, 403, 493], "relat": [451, 455], "relationship": [31, 126, 128, 533], "relev": [298, 407, 415, 417], "reli": 257, "reliabl": [5, 6, 7, 8], "reliant": [344, 345, 346, 347], "reload": 210, "relu": [16, 29, 100, 165, 192, 205, 208, 212, 213, 231, 232, 233, 235, 237, 239, 240, 264, 300, 301, 302, 306, 307, 311, 312, 315, 316, 317, 321, 323, 327, 329, 333, 334, 335, 336, 337, 338, 351, 352, 353, 354, 386, 388, 390], "relu1": 235, "relu2": 235, "relu3": 235, "relu6": [329, 351], "remain": [5, 6, 7, 8, 16, 53, 220, 228, 258, 278, 341, 343, 344, 345, 346, 347, 384, 416], "rememb": 433, "remov": [212, 213, 223, 424, 513, 519], "ren": 211, "reorder": [10, 13, 349, 484, 510], "rep": 515, "repeat": [11, 12, 502, 504, 515], "repetit": [10, 15, 427, 508, 515], "replac": [7, 57, 59, 61, 208, 212, 224, 386, 433, 503, 529], "replic": [15, 16, 339, 387, 389, 494], "repr": 419, "repres": [7, 13, 14, 15, 22, 24, 28, 55, 66, 67, 68, 101, 114, 124, 130, 139, 140, 141, 142, 143, 144, 218, 220, 222, 223, 229, 230, 235, 265, 267, 274, 277, 278, 293, 296, 333, 334, 335, 349, 352, 354, 357, 360, 369, 384, 387, 395, 404, 406, 407, 413, 414, 415, 416, 417, 419, 425, 435, 436, 442, 445, 448, 474, 487, 488, 489, 499, 500, 504, 505, 526, 528, 530, 531, 532, 533], "represent": [31, 100, 108, 125, 126, 127, 128, 129, 132, 136, 137, 138, 145, 146, 156, 157, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 175, 179, 197, 214, 225, 296, 306, 378, 381, 384, 395], "reproduc": [425, 427, 428, 429, 430, 431, 432, 433, 535], "requir": [2, 3, 4, 14, 16, 43, 49, 50, 96, 109, 113, 119, 120, 121, 122, 123, 139, 140, 141, 142, 143, 144, 159, 160, 161, 162, 163, 164, 175, 200, 202, 219, 227, 228, 231, 235, 237, 238, 240, 241, 242, 243, 245, 265, 267, 298, 306, 307, 316, 336, 353, 357, 360, 394, 402, 421, 423, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 451, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 472, 473, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 494, 496, 501, 503, 504, 506, 507, 508, 509, 513, 514, 515, 521, 522, 525, 526, 533], "requires_grad": [16, 228, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 255, 265, 267, 293, 294, 296, 298, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 333, 334, 335, 336, 337, 338, 339, 341, 344, 345, 346, 347, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 392, 394, 425, 427, 428, 429, 430, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 494, 495, 496, 501, 503, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523, 525], "rescal": [268, 269, 273, 356, 357, 360], "research": [16, 394], "reset": [230, 397, 431, 434], "reshap": [10, 13, 165, 267, 334, 335, 349, 392, 422, 446, 484, 502, 507], "resid": 434, "residu": [91, 97, 98, 99, 100, 105, 112, 113, 116, 125, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 166, 167, 168, 169, 170, 388, 390], "residualblock": 147, "resili": 416, "resiz": [213, 215, 298, 524, 534, 535], "resnest": [139, 140, 141, 142, 143, 144, 145, 146], "resnest_101": 100, "resnest_14": 100, "resnest_200": 100, "resnest_26": 100, "resnest_269": 100, "resnest_50": 100, "resnest_50_1s4x24d": 100, "resnest_50_4s2x40d": 100, "resnet": [57, 59, 61, 97, 98, 99, 138, 139, 140, 141, 142, 143, 144, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 166, 167, 168, 169, 170, 175, 176, 177, 178, 209, 210, 211, 306], "resnet_1001": 100, "resnet_101": 100, "resnet_152": 100, "resnet_18": 100, "resnet_200": 100, "resnet_269": 100, "resnet_34": 100, "resnet_50": [100, 210], "resnet_arg": 175, "resnext": [159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 179], "resnext_101_32x16d": 100, "resnext_101_32x32d": 100, "resnext_101_32x4d": 100, "resnext_101_32x8d": 100, "resnext_101_64x4d": 100, "resnext_50_32x4d": 100, "resolut": [31, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 92, 100, 105, 106, 107, 110, 125, 126, 134, 171, 172, 173, 174, 179, 181, 213, 214, 215, 251, 252, 434], "resolv": [13, 14, 15, 349, 419], "resourc": [16, 45, 46, 48, 49, 52, 53, 93, 100, 113, 117, 118, 119, 120, 121, 122, 123, 200], "respect": [13, 16, 18, 19, 20, 22, 23, 24, 25, 26, 28, 101, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 219, 228, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 265, 267, 293, 298, 307, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 333, 334, 335, 336, 339, 341, 344, 345, 346, 347, 349, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 398, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 465, 469, 471, 472, 473, 474, 475, 479, 481, 483, 487, 488, 489, 504, 506, 508, 515, 529], "respons": [100, 171, 172, 173, 174, 231, 275, 365, 406], "rest": [517, 518], "restor": [306, 400, 420, 423], "restructur": 509, "result": [10, 11, 13, 15, 18, 22, 23, 25, 100, 229, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 248, 249, 250, 251, 255, 265, 267, 280, 281, 282, 285, 286, 287, 288, 290, 291, 292, 293, 294, 298, 299, 307, 319, 323, 326, 330, 343, 349, 394, 395, 421, 425, 427, 428, 429, 430, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 454, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 472, 473, 475, 476, 478, 479, 480, 481, 482, 484, 485, 486, 487, 490, 496, 498, 500, 501, 504, 506, 507, 508, 509, 511, 512, 513, 514, 515, 516, 520, 521, 522, 525, 528, 529, 535], "resum": [397, 398, 399, 400, 401, 402, 403, 404, 406], "retain": [100, 125, 230, 257, 342, 434, 447, 452, 453, 457, 473, 474, 475, 483, 489, 491, 492, 495, 503, 517, 518, 525], "retent": 525, "rethink": 100, "retriev": [0, 2, 231, 233, 234, 296, 516], "return": [0, 1, 2, 3, 5, 6, 7, 8, 16, 32, 33, 34, 35, 36, 37, 38, 39, 97, 101, 109, 110, 121, 123, 165, 208, 212, 213, 228, 229, 231, 232, 233, 234, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 333, 334, 335, 336, 337, 338, 341, 343, 344, 345, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 366, 369, 377, 378, 379, 380, 381, 382, 387, 389, 394, 395, 400, 401, 403, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 424, 524, 535], "return_invers": 520, "reus": [100, 209, 212, 525], "reusabl": [235, 343, 394, 524], "rev": [336, 337], "revers": [16, 235, 434, 488, 511, 530, 532], "revolution": 100, "rfloor": [339, 404, 470], "rgb": [5, 6, 31, 65, 89, 90, 91, 98, 99, 109, 110, 124, 180, 181, 213], "rho": 408, "rho_": 414, "rho_t": 414, "rich": [16, 136, 211, 214], "richer": 126, "right": [23, 24, 25, 27, 28, 31, 55, 105, 215, 219, 238, 244, 279, 318, 326, 330, 339, 356, 357, 358, 360, 362, 363, 364, 366, 367, 368, 369, 380, 381, 382, 388, 390, 484, 493, 526], "rightarrow": [13, 330, 349, 512], "rmsprop": 418, "rob": 100, "robust": [42, 47, 94, 121, 190, 191, 257, 299, 341, 344, 345, 346, 347, 358, 394, 408, 528, 529, 531, 535], "roi": [208, 211, 212, 215, 216], "roi_align": 216, "roi_cls_loss": 208, "roi_reg_loss": 208, "roialign": [212, 221], "roipool": 212, "roland": 7, "role": [433, 535], "roll": 502, "root": [4, 5, 6, 7, 8, 409, 415, 481], "ross": [211, 213], "rotat": [264, 297, 531, 535], "rotated_imag": 299, "round": [459, 464, 470], "rout": [380, 381, 382, 516], "row": [19, 20, 22, 27, 216, 222, 267, 296, 451, 504, 505, 511, 517, 518, 522], "rpn": [208, 211], "rpn_cls_loss": 208, "rpn_reg_loss": 208, "rprop": 418, "rule": [15, 16, 22, 23, 338, 349, 422, 435, 436, 440, 441, 442, 444, 445, 452], "run": [16, 228, 274, 277, 300, 301, 302, 362, 363, 364, 366, 367, 368, 408, 420, 431, 433], "running_mean": [228, 274, 277, 362, 363, 364, 366, 367, 368], "running_var": [274, 277, 362, 363, 364, 366, 367, 368], "runtim": [11, 75, 232, 235, 343, 394, 454], "s_": 416, "s_0": 215, "s_1": [446, 512], "s_2": 512, "s_d": [379, 382], "s_h": [339, 378, 379, 382], "s_i": 512, "s_k": 446, "s_n": 512, "s_w": [339, 378, 379, 382], "safe": [420, 423], "safeguard": 279, "sain": 100, "same": [19, 20, 22, 23, 27, 133, 214, 219, 244, 256, 257, 258, 259, 260, 261, 262, 274, 275, 277, 278, 279, 281, 282, 299, 300, 301, 302, 303, 304, 305, 307, 323, 333, 334, 335, 336, 337, 338, 341, 344, 345, 346, 347, 353, 362, 363, 364, 366, 367, 368, 369, 371, 372, 373, 377, 378, 379, 380, 381, 382, 416, 419, 425, 431, 433, 439, 450, 453, 456, 458, 464, 469, 470, 473, 474, 475, 477, 484, 493, 496, 501, 503, 507, 509, 511, 513, 514, 517, 518, 520, 522, 527], "sampl": [0, 1, 2, 3, 5, 6, 7, 8, 84, 85, 86, 87, 89, 90, 91, 98, 99, 101, 102, 103, 104, 115, 116, 138, 139, 140, 141, 142, 143, 144, 145, 146, 171, 172, 173, 174, 179, 215, 216, 280, 281, 282, 293, 294, 311, 312, 313, 314, 315, 316, 341, 344, 345, 346, 347, 352, 354, 357, 360, 369, 371, 372, 373, 425, 430, 433, 454, 500, 526, 528, 530, 531, 532, 533], "sampling_ratio": [215, 216], "sandbox": 16, "sandler": 100, "satisfi": [18, 20, 27, 512], "satur": [317, 535], "save": [2, 209, 210, 228, 230, 395, 400, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 423, 424], "scalabl": [3, 47, 74, 100, 159, 160, 161, 162, 163, 164, 181, 203, 394], "scalar": [16, 19, 24, 268, 269, 270, 272, 273, 425, 434, 452, 453, 503], "scale": [14, 20, 25, 31, 40, 46, 48, 49, 50, 52, 54, 55, 57, 59, 61, 66, 67, 68, 69, 74, 75, 92, 98, 100, 102, 103, 104, 105, 106, 107, 110, 111, 115, 119, 120, 122, 123, 124, 125, 126, 130, 134, 137, 138, 145, 146, 148, 149, 150, 153, 166, 167, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 198, 199, 200, 201, 208, 209, 212, 213, 214, 215, 216, 217, 219, 237, 242, 244, 247, 258, 274, 275, 277, 278, 296, 306, 307, 315, 316, 317, 319, 321, 324, 325, 326, 328, 330, 331, 341, 343, 344, 345, 346, 347, 357, 362, 363, 364, 365, 366, 367, 368, 369, 384, 392, 398, 401, 407, 409, 410, 411, 433, 489, 533], "scale_by_keep": [258, 343], "scale_factor": 392, "scale_fn": 398, "scaled_dot_product_attent": [246, 264], "scaleddotproductattent": [332, 351], "scenario": [45, 50, 52, 120, 121, 122, 123, 134, 233, 234, 369, 397, 398, 404, 411, 412, 525, 529], "schedul": [342, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407], "scientif": 422, "score": [147, 158, 175, 208, 212, 213, 223, 244, 247, 331, 357, 446], "score_thresh": 213, "scratch": [16, 210], "script": 433, "se": [74, 100, 166, 167, 168, 169, 170, 171, 172, 173, 174], "se_resnet_101": 100, "se_resnet_152": 100, "se_resnet_18": 100, "se_resnet_34": 100, "se_resnet_50": 100, "se_resnext_101_32x4d": 100, "se_resnext_101_32x8d": 100, "se_resnext_101_64x4d": 100, "se_resnext_50_32x4d": 100, "se_scal": 74, "seamless": [0, 1, 3, 4, 14, 349, 394, 433], "seamlessli": [3, 4, 10, 13, 15, 17, 230, 232, 235, 394, 535], "search": [100, 211, 213], "second": [20, 125, 136, 232, 233, 265, 306, 352, 410, 411, 412, 413, 414, 422, 435, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 484, 501, 504, 516, 532], "section": 439, "see": [16, 439], "seed": [425, 426, 427, 428, 429, 430, 432, 433, 535], "seek": [16, 123], "seen": 408, "segment": [100, 137, 186, 187, 188, 189, 190, 191, 211, 217, 252, 253, 337, 338], "select": [14, 15, 100, 175, 176, 177, 178, 179, 208, 211, 213, 215, 298, 306, 307, 380, 382, 398, 483, 493, 516, 523], "selectivekernel": 308, "selectivesearch": 221, "self": [0, 1, 2, 3, 16, 29, 31, 55, 65, 66, 67, 68, 74, 75, 88, 92, 97, 100, 101, 111, 112, 113, 114, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 165, 180, 181, 192, 197, 205, 208, 212, 213, 216, 224, 225, 228, 229, 230, 231, 232, 233, 234, 242, 258, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 333, 334, 335, 336, 337, 338, 341, 342, 343, 344, 345, 349, 352, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 386, 387, 388, 390, 394, 395, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 423, 424, 434, 503, 510, 524, 525], "selfattent": 390, "selu": [239, 256, 264, 329, 341, 351], "selunetwork": 324, "semant": [55, 135, 211, 214, 337], "semodul": 308, "senet": [166, 167, 168, 169, 170, 171, 172, 173, 174], "sens": 207, "sensit": [270, 358, 362, 363, 364], "sentenc": 207, "sentiment": [4, 207], "separ": [0, 55, 100, 111, 145, 146, 203, 209, 248, 249, 250, 252, 303, 304, 305, 366, 367, 368], "seq_len": [247, 330, 331, 386, 387, 388, 389, 390], "sequenc": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535], "sequenti": [29, 97, 101, 165, 192, 203, 205, 208, 212, 213, 224, 231, 232, 236, 248, 300, 301, 302, 349, 353, 387, 389, 524, 535], "seri": [88, 102, 103, 105, 133, 135, 175, 248, 300, 333, 377, 380], "serial": [210, 228, 229, 406], "serv": [3, 7, 16, 69, 97, 165, 192, 225, 229, 231, 232, 233, 234, 235, 394, 416, 434, 525], "set": [3, 4, 5, 6, 7, 8, 16, 31, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 119, 120, 121, 126, 145, 146, 156, 157, 171, 172, 173, 174, 179, 208, 209, 212, 218, 219, 222, 230, 234, 247, 248, 249, 250, 252, 296, 321, 322, 324, 331, 333, 334, 335, 341, 346, 347, 352, 354, 356, 357, 358, 359, 360, 362, 363, 364, 366, 367, 368, 384, 395, 410, 411, 415, 425, 428, 429, 430, 431, 432, 433, 447, 449, 450, 452, 453, 457, 458, 473, 475, 490, 491, 492, 493, 503, 517, 518, 520, 525, 529, 535], "setup": [4, 108, 109, 159, 160, 161, 162, 163, 164, 210], "sever": [25, 333, 334, 335, 377, 378, 379, 380, 381, 382, 524, 535], "sgd": [16, 210, 396, 397, 398, 399, 400, 401, 402, 403, 404, 407, 414, 418], "sgn": 24, "shaoq": 211, "shape": [3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 19, 20, 22, 23, 25, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 92, 93, 94, 95, 96, 97, 100, 101, 105, 106, 107, 108, 109, 110, 113, 117, 118, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 159, 160, 161, 162, 163, 164, 165, 171, 172, 173, 174, 176, 177, 178, 179, 192, 203, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 228, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 268, 269, 270, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 296, 298, 299, 300, 301, 302, 306, 307, 311, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 344, 345, 346, 347, 349, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 394, 398, 422, 425, 427, 428, 429, 430, 432, 433, 434, 437, 446, 449, 450, 451, 452, 453, 455, 456, 457, 458, 464, 465, 470, 471, 472, 473, 474, 475, 477, 479, 481, 483, 484, 488, 489, 491, 492, 493, 494, 496, 497, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 513, 514, 515, 517, 518, 520, 522, 526, 527, 528, 529, 530, 531, 532, 533, 535], "shapelik": 429, "share": [55, 100, 211, 212, 213], "sharp": 398, "shen": 306, "shift": [100, 105, 180, 181, 182, 183, 184, 185, 186, 189, 190, 213, 274, 275, 277, 278, 319, 362, 363, 364, 365, 366, 367, 368, 369, 510], "shorthand": 439, "should": [13, 14, 15, 16, 101, 208, 209, 210, 228, 293, 349, 386, 387, 388, 389, 390, 402, 425, 427, 428, 429, 430, 432, 434, 449, 450, 461, 462, 487, 494, 506, 524], "show": [294, 421, 424], "shown": [55, 327, 431], "shrink": 408, "shuffl": [1, 2, 3, 427], "side": [27, 232, 235, 248, 249, 250, 251, 252, 286, 287, 288, 290, 291, 292, 300, 301, 302, 333, 334, 335, 336, 337, 338, 339, 377, 378, 379, 380, 381, 382], "sigma": [25, 31, 306, 311, 313, 315, 325, 327, 362, 363, 364, 366, 367, 368, 369, 488], "sigma_c": 527, "sigma_i": 25, "sigmoid": [239, 264, 306, 311, 312, 315, 316, 319, 320, 327, 329, 351, 356], "sigmoidnetwork": 325, "sign": [23, 358, 416, 459], "signal": [300, 333, 334, 335, 362, 366, 377, 378, 379, 380, 381, 382], "signific": 43, "significantli": [100, 110, 112, 134, 135, 136, 137, 158, 188, 306, 524], "silicon": [16, 110, 419], "sim": [341, 344, 345, 346, 347], "similar": [10, 57, 59, 61, 207, 213, 311, 312, 439, 452, 484, 490, 494, 506, 519], "similarli": [28, 487], "simonyan": 100, "simpl": [3, 4, 16, 213, 235, 248, 249, 250, 251, 265, 267, 286, 287, 288, 290, 291, 292, 318, 319, 320, 322, 323, 324, 325, 327, 328, 333, 334, 335, 341, 344, 345, 346, 347, 352, 354, 356, 357, 358, 359, 360, 362, 363, 364, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 394, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 421, 422, 437, 438, 443, 524], "simplebackbon": 208, "simplebinaryclassificationmodel": 356, "simpleblock": 258, "simpleclassificationmodel": [357, 360], "simplegelumodel": 318, "simplehardsigmoidmodel": 319, "simplehardswishmodel": 320, "simpleleakyrelumodel": 321, "simplemodel": [323, 343, 354, 424], "simpleregressionmodel": 359, "simplerelumodel": 322, "simpleselumodel": 324, "simplesigmoidmodel": 325, "simpleswishmodel": 327, "simpletanhmodel": 328, "simpli": [16, 421, 487, 488, 509], "simplic": [100, 319, 322], "simplifi": [4, 13, 15, 84, 85, 86, 87, 100, 102, 204, 235, 300, 301, 302, 349], "simul": 535, "simultan": [55, 299], "sin": [459, 466], "sinc": [23, 26, 231, 232, 233, 234, 248, 249, 250, 316, 421, 425, 430, 484, 504, 523, 535], "sine": [462, 479, 480], "singl": [0, 4, 23, 26, 28, 57, 59, 61, 147, 211, 212, 244, 300, 301, 302, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 333, 334, 335, 339, 357, 369, 378, 379, 380, 381, 382, 387, 388, 389, 390, 395, 420, 428, 432, 449, 454, 496, 513, 527, 529, 535], "singleton": [15, 369], "singular": [19, 22, 23, 25, 27, 28], "sinh": [459, 467, 486], "size": [0, 1, 2, 3, 10, 13, 14, 15, 28, 31, 55, 56, 63, 64, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 85, 92, 95, 100, 101, 102, 103, 104, 105, 114, 115, 117, 118, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 147, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 197, 198, 199, 200, 201, 202, 205, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 225, 226, 227, 230, 232, 247, 248, 249, 250, 251, 252, 253, 255, 257, 260, 261, 262, 268, 269, 270, 272, 273, 274, 275, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 330, 333, 334, 335, 336, 337, 338, 339, 342, 349, 352, 354, 356, 357, 360, 362, 363, 364, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 389, 390, 392, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 424, 429, 432, 433, 434, 473, 474, 475, 483, 489, 491, 492, 494, 495, 496, 501, 512, 513, 521, 522, 526, 528, 533, 535], "size_or_sect": 512, "sk": [100, 175, 176, 177, 178, 179, 307], "sk_resnet_18": 100, "sk_resnet_34": 100, "sk_resnet_50": 100, "sk_resnext_50_32x4d": 100, "skblock": 175, "skip": [100, 423], "sknet": [176, 177, 178, 179], "slice": [265, 434, 487, 493, 519, 520], "slide": [255, 339, 377, 379, 380, 382], "slight": 306, "slightli": 535, "slope": [240, 317, 321], "slow": [3, 414], "small": [25, 44, 46, 48, 51, 63, 84, 85, 86, 87, 94, 95, 100, 102, 103, 104, 109, 113, 117, 118, 121, 129, 184, 185, 190, 191, 201, 202, 217, 240, 257, 268, 269, 274, 275, 277, 278, 279, 321, 324, 342, 356, 357, 358, 362, 363, 364, 365, 366, 367, 368, 369, 378, 381, 386, 388, 390, 396, 408, 409, 410, 411, 412, 413, 414, 415, 416], "smallbackbon": 213, "smaller": [10, 45, 55, 57, 59, 61, 64, 68, 84, 85, 86, 87, 100, 119, 205, 213, 232, 235, 394, 409, 410, 441, 493, 495, 526, 528, 533], "smallest": [464, 475, 516], "smooth": [90, 214, 238, 317, 318, 327, 399, 407, 415, 535], "smoother": [399, 407], "so": [231, 232, 233, 234, 299, 394, 414, 420, 423, 449, 450, 464, 470, 477, 524], "softmax": [31, 55, 105, 239, 247, 264, 307, 329, 330, 331, 351, 357, 388, 390], "softmaxmodel": 326, "solut": [25, 27], "solv": [17, 18, 21, 25, 26, 28], "solver": 17, "some": [237, 258, 259, 299, 341, 343, 344, 345, 362, 363, 364, 366, 367, 368, 409, 410, 411, 495], "sometim": 422, "sophist": [232, 235], "sort": [16, 502, 516, 520], "sourc": [219, 225, 226, 227, 247, 386, 433], "space": [20, 26, 28, 57, 59, 61, 105, 181, 225, 248, 249, 250, 251, 252, 253, 255, 280, 281, 282, 300, 301, 302, 303, 304, 305, 333, 334, 335, 336, 337, 338, 339, 371, 372, 373, 447, 454, 535], "span": 4, "spars": [409, 410], "spatial": [29, 31, 100, 105, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 147, 158, 175, 186, 192, 205, 208, 210, 212, 214, 215, 216, 220, 253, 257, 275, 284, 285, 293, 294, 301, 306, 334, 335, 336, 339, 362, 363, 364, 366, 367, 368, 369, 375, 376, 378, 379, 380, 381, 382, 392, 464, 504], "spatial_dim": 306, "spatial_scal": [215, 216], "spatio": 335, "spec": 65, "special": [0, 1, 25, 228, 229, 230, 341, 433], "specif": [4, 11, 65, 70, 71, 72, 73, 84, 85, 86, 87, 97, 111, 119, 120, 121, 122, 123, 145, 146, 156, 157, 231, 232, 233, 234, 235, 307, 316, 341, 344, 345, 346, 347, 366, 367, 368, 384, 394, 395, 402, 421, 433, 449, 473, 475, 503, 508, 515], "specifi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 24, 30, 66, 67, 68, 69, 75, 101, 114, 115, 116, 119, 120, 121, 122, 124, 126, 127, 128, 129, 130, 138, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 175, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 204, 206, 232, 244, 255, 262, 268, 269, 270, 272, 273, 278, 279, 280, 281, 282, 283, 284, 294, 296, 298, 299, 306, 326, 330, 333, 334, 335, 336, 339, 349, 356, 357, 358, 359, 360, 369, 371, 372, 373, 374, 376, 378, 379, 380, 381, 382, 384, 392, 395, 398, 402, 419, 427, 428, 429, 430, 431, 432, 434, 444, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 457, 458, 465, 473, 474, 475, 477, 483, 484, 488, 489, 490, 491, 492, 493, 494, 495, 496, 499, 501, 503, 506, 508, 509, 510, 511, 512, 513, 514, 515, 517, 518, 519, 520, 521, 522, 524, 525, 526, 527, 528, 531, 533, 535], "speech": [207, 366], "speed": [117, 118, 210, 319, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 423], "split": [4, 100, 138, 145, 146, 252, 330, 495, 496, 501, 502, 519, 522], "split_tensor": 512, "springer": 100, "sqrt": [31, 55, 105, 215, 238, 247, 275, 311, 312, 315, 316, 318, 330, 331, 362, 363, 364, 365, 366, 367, 368, 369, 388, 390, 408, 409, 410, 411, 413, 414, 415, 459, 461, 462], "squar": [1, 3, 18, 19, 20, 22, 23, 25, 26, 27, 28, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 197, 198, 199, 200, 201, 202, 257, 270, 272, 342, 358, 359, 408, 409, 410, 415, 459, 481], "squaredataset": [0, 1, 2, 3], "squeez": [74, 100, 113, 117, 118, 165, 168, 171, 172, 173, 174, 306, 502, 519], "sr_ratio": [124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137], "sra": 100, "src": [219, 224, 386, 389, 390], "src_key_pad": 389, "src_key_padding_mask": [386, 390], "src_mask": [386, 389, 390], "src_vocab_s": [225, 226, 227], "ss": 217, "stabil": [22, 25, 31, 100, 105, 210, 218, 257, 268, 269, 274, 275, 277, 278, 279, 296, 300, 301, 302, 323, 342, 356, 357, 362, 363, 364, 365, 366, 367, 368, 369, 384, 386, 388, 390, 396, 407, 408, 409, 410, 411, 412, 413, 414, 415, 527], "stabl": [190, 311, 312, 315, 316, 341, 357, 407, 411, 412, 415, 416, 417, 511], "stack": [15, 235, 307, 336, 386, 387, 389, 499, 501, 502, 522, 535], "stage": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 55, 66, 67, 68, 92, 100, 105, 106, 107, 109, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 147, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 209, 210], "stage1": 165, "stage2": 165, "stage3": 165, "stage4": 165, "stall": 403, "stand": 134, "standalon": 323, "standard": [16, 42, 47, 57, 59, 61, 94, 119, 122, 147, 156, 157, 209, 210, 225, 226, 238, 240, 303, 304, 305, 311, 313, 315, 317, 318, 321, 336, 341, 386, 416, 420, 430, 433, 439, 524, 527, 535], "star": [336, 337, 338], "start": [1, 3, 10, 396, 407, 409, 416, 434, 447, 454, 526, 528], "state": [49, 100, 199, 228, 229, 230, 232, 235, 395, 400, 420, 421, 423, 431], "state_dict": [209, 210, 229, 230, 395, 400, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417], "statement": [420, 423], "static": 235, "statist": [25, 256, 274, 277], "std": [5, 6, 7, 8, 212, 313, 524, 527, 535], "stem": [97, 100, 105, 138, 147, 158, 175], "stem_typ": 147, "stem_width": [138, 139, 140, 141, 142, 143, 144, 147], "step": [10, 16, 31, 223, 230, 255, 307, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 423, 447, 524, 525], "step_siz": [396, 398, 400, 404, 416], "step_size_down": 398, "step_size_up": 398, "steplr": [396, 400, 405], "still": [52, 408], "stn": 294, "stochast": [40, 41, 55, 74, 75, 92, 105, 124, 180, 181, 258, 343, 407, 417], "stochastic_depth": 74, "stop": [403, 447, 454], "storag": [231, 233], "store": [2, 4, 5, 6, 7, 8, 16, 147, 158, 175, 228, 229, 230, 231, 232, 233, 234, 306, 371, 372, 373, 374, 375, 376, 423, 526, 527, 528, 529, 530, 531, 532, 533], "str": [5, 6, 7, 8, 10, 11, 13, 14, 15, 31, 114, 147, 192, 229, 231, 233, 235, 268, 269, 270, 272, 273, 294, 298, 349, 392, 395, 398, 400, 403, 424, 434, 504], "straight": 493, "straightforward": [417, 421, 435], "strategi": [31, 100, 122, 189, 210, 294, 396, 400, 406], "stream": 212, "streamlin": [2, 3, 100], "strength": [31, 342], "strict": [229, 395], "stride": [57, 59, 61, 75, 101, 102, 103, 104, 113, 114, 117, 118, 208, 212, 213, 232, 235, 248, 249, 250, 251, 252, 253, 255, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 300, 301, 302, 303, 304, 305, 307, 333, 334, 335, 336, 337, 338, 339, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382], "stride_height": 255, "stride_width": 255, "strike": [47, 114, 121], "string": [10, 11, 13, 14, 15, 229, 231, 233, 235, 333, 334, 335, 349, 395, 419], "strong": [31, 128, 131, 134, 198], "stronger": [108, 129, 133, 189], "structur": [0, 10, 14, 26, 31, 75, 100, 113, 181, 203, 208, 228, 229, 232, 257, 342, 349, 394, 395, 424, 434, 451, 525], "student": 16, "studi": 16, "style": [10, 16, 97, 210, 277, 366, 367, 434, 504], "sub": [231, 232, 233, 234, 235, 394, 459, 495, 512, 519, 526, 528], "subclass": [1, 2, 3, 16, 229, 230, 231, 394, 395, 400], "sublay": [386, 388, 390], "submodul": [229, 394], "subscript": 11, "subsequ": [232, 235, 316, 433], "subset": [145, 146, 253, 344, 345], "subspac": 330, "substanti": 200, "subtract": [445, 527], "subvolum": 285, "suffer": 409, "suffix": 134, "suit": [52, 70, 71, 72, 73, 90, 111, 119, 120, 122, 134, 135, 137, 175, 191, 198, 311, 312, 315, 316, 396], "suitabl": [42, 44, 45, 48, 50, 76, 77, 78, 79, 80, 81, 82, 83, 97, 100, 102, 103, 104, 106, 107, 109, 110, 112, 117, 118, 120, 123, 126, 131, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 167, 168, 170, 182, 183, 184, 185, 201, 210, 226, 358, 409, 410, 428], "sum": [10, 11, 14, 16, 24, 231, 232, 233, 234, 235, 244, 247, 268, 269, 270, 272, 273, 279, 293, 294, 307, 326, 336, 337, 339, 356, 357, 358, 359, 360, 409, 434, 435, 438, 443, 446, 459, 487, 489, 494, 496, 501, 504, 508, 511, 512, 515, 516, 522], "sum_": [13, 14, 23, 31, 244, 275, 326, 349, 356, 357, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 377, 378, 379, 402, 437, 438, 446, 474, 483, 487, 489, 494, 504, 508], "sum_i": [24, 443], "sum_j": [11, 443], "sum_k": 439, "summar": [32, 33, 34, 35, 36, 37, 38, 39, 74, 156, 157, 203, 207, 377, 378, 379], "summari": [156, 157, 171, 172, 173, 174, 179], "summat": [10, 11, 13, 14, 15, 23, 402], "sun": 306, "super": [16, 208, 212, 213, 228, 229, 230, 231, 232, 233, 234, 258, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 333, 334, 335, 336, 337, 338, 341, 343, 344, 345, 352, 354, 356, 357, 358, 359, 360, 362, 363, 364, 366, 369, 377, 378, 379, 380, 381, 382, 394, 395, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 424], "superior": [54, 100, 189], "superpixel": 213, "supplementari": 122, "support": [1, 3, 4, 11, 13, 16, 17, 23, 24, 25, 26, 28, 115, 124, 147, 208, 231, 232, 233, 234, 235, 247, 294, 298, 299, 331, 339, 384, 392, 394, 406, 413, 433, 434, 435, 436, 439, 440, 441, 442, 444, 445, 448, 451, 465, 471, 472, 474, 479, 481, 483, 487, 488, 489, 493, 496, 504, 509, 511, 512, 525, 535], "suppos": 535, "suppress": [211, 213, 217, 223], "sure": [394, 535], "svd": [21, 25], "swap": [13, 218, 349], "swapax": 459, "swin": [180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191], "swin_bas": 100, "swin_larg": 100, "swin_smal": 100, "swin_tini": 100, "swin_v2": 181, "swin_v2_bas": 100, "swin_v2_giant": 100, "swin_v2_hug": 100, "swin_v2_larg": 100, "swin_v2_smal": 100, "swin_v2_tini": 100, "swintransform": [182, 183, 184, 185], "swintransformer_v2": [186, 187, 188, 189, 190, 191], "swish": [117, 118, 329, 351], "symbol": [13, 14, 15, 349], "symmetr": [18, 280, 281, 282, 283, 315, 316, 328], "syntax": [1, 10, 13, 14, 15, 349, 423, 439], "system": [16, 17, 18, 25, 26, 27, 100, 121, 224, 294, 421, 434, 504], "systemat": [100, 535], "szegedi": [89, 100], "t": [10, 16, 25, 31, 55, 100, 105, 293, 294, 336, 337, 386, 387, 388, 390, 397, 398, 399, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 434, 439, 452, 453, 490, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535], "t0": 407, "t1": [434, 490], "t2": [434, 490], "t_": [387, 397], "t_0": 387, "t_cpu": 434, "t_i": 387, "t_max": 397, "tabl": [32, 33, 34, 35, 36, 37, 38, 39, 74, 384], "tabular": 4, "tailor": [4, 113, 121, 139, 140, 141, 142, 143, 144, 394, 535], "take": [26, 216, 375, 377, 378, 379, 380, 381, 382, 392, 401, 420, 423, 524], "taken": 487, "tan": [100, 459], "tangent": [245, 328, 463, 485, 486], "tanh": [101, 232, 235, 238, 239, 264, 311, 312, 315, 316, 318, 329, 351, 459], "tanhnetwork": 328, "target": [5, 6, 7, 8, 52, 208, 210, 212, 216, 219, 225, 226, 227, 235, 268, 269, 270, 272, 273, 280, 281, 282, 285, 293, 298, 356, 357, 358, 359, 360, 371, 372, 373, 374, 375, 376, 386, 387, 388, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 453, 494, 519, 526, 528, 533], "target_tensor": [356, 357, 358, 359, 360], "target_transform": [5, 6, 7, 8], "task": [4, 17, 29, 30, 31, 40, 41, 42, 43, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 57, 59, 61, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 94, 97, 98, 99, 100, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 198, 199, 200, 201, 203, 207, 209, 210, 225, 226, 227, 243, 244, 249, 251, 252, 253, 265, 268, 269, 272, 273, 306, 307, 325, 326, 333, 334, 335, 336, 337, 356, 357, 358, 359, 360, 366, 367, 368, 377, 379, 380, 382, 386, 410, 422, 433, 451, 454, 535], "teach": 207, "techniqu": [18, 22, 40, 75, 92, 100, 122, 186, 188, 191, 205, 258, 274, 341, 342, 344, 345, 346, 347, 366, 367, 368, 396, 406, 533, 535], "templat": 225, "tempor": [251, 333, 335, 379, 382], "temporarili": [420, 423], "ten": 477, "tensor": [2, 3, 4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 84, 85, 86, 87, 89, 90, 91, 97, 98, 99, 101, 102, 103, 104, 113, 115, 116, 117, 118, 147, 159, 160, 161, 162, 163, 164, 165, 176, 177, 178, 192, 203, 205, 208, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 268, 269, 270, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 392, 394, 420, 421, 423, 425, 427, 428, 429, 430, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535], "tensordot": 459, "term": [13, 25, 53, 131, 132, 133, 135, 136, 137, 208, 265, 300, 301, 302, 303, 304, 305, 330, 386, 388, 390, 407, 411, 413, 414, 415, 417], "test": [4, 5, 6, 7, 8, 454], "test_siz": [5, 6, 7, 8], "text": [4, 19, 23, 24, 31, 55, 105, 147, 158, 175, 176, 177, 178, 203, 207, 211, 214, 215, 216, 222, 231, 237, 240, 241, 242, 244, 247, 248, 249, 250, 251, 252, 253, 258, 280, 281, 282, 283, 286, 287, 288, 290, 291, 292, 296, 300, 301, 302, 303, 304, 305, 306, 307, 311, 312, 315, 316, 317, 319, 320, 321, 322, 323, 324, 326, 327, 330, 331, 333, 334, 335, 336, 337, 338, 341, 342, 343, 344, 345, 346, 347, 356, 357, 358, 359, 360, 377, 378, 379, 380, 381, 382, 384, 386, 387, 389, 398, 403, 404, 407, 409, 410, 411, 412, 413, 414, 415, 416, 417, 427, 429, 434, 435, 436, 438, 440, 441, 442, 444, 445, 446, 460, 464, 465, 470, 473, 474, 475, 477, 478, 483, 484, 489, 491, 492, 493, 494, 496, 501, 503, 506, 507, 508, 509, 510, 512, 513, 515, 516, 517, 518, 519, 521, 522, 523, 526, 527, 528, 530, 531, 532], "textur": 213, "tgt": [219, 224, 386, 387, 388], "tgt_is_caus": [387, 388], "tgt_key_padding_mask": [386, 387, 388], "tgt_mask": [386, 387, 388], "tgt_vocab_s": [225, 226, 227], "th": [265, 356, 357, 359, 360, 366, 367, 368, 440, 441, 444], "than": [0, 1, 7, 13, 15, 223, 233, 234, 237, 240, 270, 303, 304, 305, 317, 321, 327, 349, 358, 395, 402, 411, 446, 454, 464, 470, 487, 494, 495, 506, 514, 519, 526, 528, 533], "thei": [0, 28, 55, 100, 228, 232, 234, 235, 294, 330, 504, 509, 526, 528, 535], "them": [3, 10, 16, 100, 229, 234, 255, 339, 407, 422, 496, 514, 519, 524, 527, 535], "therebi": [341, 378, 379, 381, 382], "theta": [293, 294, 407, 408, 531], "theta_": [407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417], "theta_t": [414, 415], "thi": [0, 1, 2, 3, 5, 6, 7, 8, 11, 13, 14, 15, 16, 19, 20, 22, 23, 24, 25, 26, 27, 28, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 57, 59, 61, 65, 66, 67, 68, 69, 70, 71, 72, 73, 89, 90, 91, 97, 98, 99, 100, 101, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 119, 120, 121, 122, 123, 126, 131, 134, 147, 156, 157, 158, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 182, 183, 184, 185, 186, 187, 188, 189, 191, 198, 199, 200, 201, 202, 203, 208, 209, 210, 212, 218, 219, 222, 223, 225, 228, 230, 232, 233, 234, 235, 241, 243, 244, 245, 248, 249, 250, 251, 252, 255, 257, 258, 265, 267, 280, 283, 293, 296, 298, 299, 303, 304, 305, 306, 307, 311, 312, 315, 316, 317, 318, 319, 321, 322, 324, 325, 326, 327, 328, 331, 333, 334, 335, 336, 337, 339, 341, 342, 343, 344, 345, 346, 347, 349, 352, 353, 354, 356, 357, 358, 360, 362, 363, 364, 366, 367, 368, 369, 371, 374, 377, 378, 379, 380, 381, 382, 384, 394, 396, 397, 398, 399, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 424, 425, 427, 429, 430, 431, 433, 434, 438, 439, 443, 447, 449, 452, 453, 455, 456, 457, 458, 464, 465, 469, 470, 471, 472, 473, 474, 475, 477, 479, 481, 483, 484, 487, 488, 489, 490, 493, 494, 495, 503, 505, 506, 508, 509, 510, 511, 517, 518, 519, 520, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535], "third": [135, 136, 137, 293], "those": [102, 103, 104, 215, 234, 316, 516], "thread": 420, "three": [28, 104, 250, 253, 282, 285, 288, 292, 300, 301, 302, 335, 347, 364, 368, 373, 379, 382], "threshold": [25, 209, 210, 213, 217, 223, 270, 358, 403], "threshold_mod": 403, "through": [0, 3, 4, 15, 20, 25, 26, 28, 29, 40, 55, 88, 97, 100, 101, 114, 148, 149, 150, 151, 152, 153, 154, 155, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 176, 177, 178, 204, 205, 207, 212, 213, 216, 231, 232, 235, 257, 265, 267, 293, 294, 298, 306, 307, 317, 318, 319, 320, 321, 322, 324, 325, 327, 328, 333, 334, 335, 341, 344, 345, 346, 347, 352, 353, 354, 362, 363, 364, 366, 369, 377, 378, 379, 380, 381, 382, 386, 387, 389, 390, 420, 425, 427, 430, 437, 438, 443, 491, 492, 504, 505, 507, 509, 513, 516, 517, 518, 520, 521, 535], "throughout": [180, 181, 197, 225, 242, 525], "ti": [100, 202], "tier": 49, "tight": 134, "tile": [15, 502], "time": [0, 3, 16, 23, 102, 103, 104, 112, 211, 248, 300, 321, 324, 330, 333, 377, 378, 379, 380, 381, 382, 387, 389, 396, 403, 407, 408, 409, 410, 411, 415, 417, 508, 515], "tini": [44, 45, 53, 64, 92, 96, 100, 109, 130], "tinynet": 16, "to_tensor": [5, 6, 7, 8], "togeth": [235, 524, 535], "toggl": [420, 423], "token": [55, 92, 100, 125, 132, 384], "token_mix": 92, "too": [16, 396, 416], "tool": [3, 394, 396, 420, 422, 433, 524, 535], "top": [18, 19, 20, 26, 28, 49, 214, 247, 265, 267, 298, 330, 331, 333, 334, 335, 352, 354, 446, 516, 526, 528], "topk": 502, "topk_indic": 516, "topolog": 16, "torch": [192, 339, 490], "toronto": [5, 6], "total": [0, 1, 2, 5, 6, 7, 8, 10, 13, 15, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 98, 99, 102, 103, 104, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 206, 208, 209, 210, 226, 227, 230, 330, 349, 420, 434, 509], "total_loss": 208, "total_op": 420, "totensor": [524, 535], "touch": 16, "toward": 211, "toybackbon": [212, 213], "trace": [17, 459], "traceback": 423, "track": [16, 300, 301, 302, 362, 363, 364, 366, 367, 368, 394, 420, 421, 423, 425, 427, 428, 429, 430, 432, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 484, 490, 493, 494, 503, 505, 511, 520, 525], "track_running_stat": [300, 301, 302, 362, 363, 364, 366, 367, 368], "trade": [44, 120], "tradit": [7, 10, 31, 55, 65, 100, 123, 224, 408, 409, 412, 413, 414], "trail": 278, "train": [1, 2, 3, 4, 5, 6, 7, 8, 31, 40, 75, 88, 89, 90, 100, 105, 171, 172, 173, 174, 179, 208, 211, 222, 224, 225, 228, 229, 232, 234, 235, 244, 256, 257, 258, 259, 260, 261, 262, 274, 277, 296, 299, 318, 321, 324, 325, 326, 328, 341, 342, 343, 344, 345, 346, 347, 362, 363, 364, 366, 367, 368, 384, 394, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 423, 464, 470, 524, 527, 528, 529, 530, 531, 532, 535], "trainabl": [362, 363, 364, 366, 367, 368, 384, 394], "transact": [211, 306], "transfer": [277, 366, 367, 427], "transform": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523], "transform_pipelin": [524, 535], "transformed_imag": [524, 535], "transformer_bas": 224, "transformer_big": 224, "transformer_decod": 387, "transformer_encod": 389, "transformerdecod": [351, 386, 391], "transformerdecoderlay": [351, 386, 387, 391], "transformerencod": [351, 386, 391], "transformerencoderlay": [351, 386, 389, 391], "transit": [31, 69, 358], "translat": [207, 219, 225, 293, 378, 381, 386], "transpar": 16, "transpos": [13, 18, 251, 252, 253, 336, 337, 338, 459], "transposit": [11, 13, 349], "treat": [0, 228, 369, 394], "triangular": [18, 26, 387, 388, 389, 390, 398, 517, 518], "triangular2": 398, "tril": 502, "triu": 502, "true": [1, 2, 3, 4, 5, 6, 7, 8, 16, 28, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 88, 89, 90, 117, 118, 131, 132, 133, 134, 135, 136, 137, 138, 180, 181, 208, 213, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 247, 255, 256, 258, 259, 260, 261, 262, 265, 267, 274, 277, 293, 294, 296, 298, 300, 301, 302, 303, 304, 305, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 343, 344, 345, 346, 347, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 386, 387, 388, 389, 390, 392, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 410, 411, 415, 419, 421, 425, 428, 429, 430, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 498, 499, 500, 501, 503, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 525], "truli": 16, "truth": 208, "try": 0, "tu": [100, 105], "tune": [120, 123, 209, 210, 535], "tupl": [2, 3, 5, 6, 7, 8, 20, 24, 26, 28, 31, 69, 105, 147, 208, 212, 213, 215, 216, 217, 220, 229, 230, 248, 249, 250, 251, 252, 253, 255, 278, 281, 282, 284, 285, 286, 287, 288, 290, 291, 292, 293, 298, 299, 300, 301, 302, 303, 304, 305, 333, 334, 335, 336, 337, 338, 339, 353, 369, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 392, 410, 411, 412, 413, 414, 416, 428, 429, 430, 432, 434, 446, 449, 452, 455, 457, 473, 474, 475, 483, 489, 494, 495, 496, 498, 499, 500, 501, 504, 506, 509, 510, 511, 512, 513, 514, 516, 519, 520, 521, 522, 526, 527, 528, 533], "twice": 506, "two": [19, 20, 22, 23, 25, 26, 28, 102, 103, 104, 105, 113, 145, 146, 176, 192, 209, 210, 212, 222, 248, 249, 250, 252, 265, 287, 291, 306, 307, 334, 346, 352, 363, 367, 378, 381, 390, 410, 411, 412, 413, 414, 416, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 484, 487, 495, 504, 512, 516], "type": [32, 33, 34, 35, 36, 37, 38, 39, 55, 65, 92, 101, 105, 124, 125, 138, 147, 165, 175, 180, 181, 207, 228, 229, 230, 265, 352, 386, 388, 390, 419, 427, 434, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 490, 504, 525], "typeddict": 208, "typeerror": [0, 1, 2, 229, 395], "typic": [16, 17, 31, 66, 114, 120, 147, 158, 175, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 212, 214, 217, 223, 228, 244, 256, 257, 299, 306, 323, 324, 326, 342, 343, 360, 362, 363, 364, 366, 367, 368, 406, 407, 415, 417, 521, 525, 527, 531, 533, 535], "u": [25, 28, 312, 314, 316], "u_": 412, "ultra": [46, 153, 187], "unbind": 502, "unbound": 519, "unchang": [16, 228, 262, 317, 321, 322, 324, 341, 344, 345, 346, 347, 353, 507, 513], "uncontract": 446, "uncontrol": 16, "undefin": 444, "under": [159, 160, 161, 162, 163, 164, 394], "underbrac": 23, "underdetermin": 25, "undergo": [258, 390, 535], "underli": [0, 84, 85, 86, 87, 89, 90, 91, 98, 99, 434, 484, 490, 501, 507, 509, 522], "understand": [16, 66, 67, 68, 100, 135, 136, 188, 205, 207, 235, 535], "understood": [13, 336], "unexpect": [10, 229, 232, 235, 279, 433], "unfold": [254, 264, 340, 351], "unifi": [0, 16, 208, 211, 419], "uniform": [310, 312, 316, 333, 334, 335, 352, 354, 426, 428, 429, 433, 453, 529, 530, 531, 532], "uniformli": [215, 428, 432], "uniniti": [449, 450], "unintend": [10, 14], "union": [192, 222, 223], "uniqu": [18, 25, 27, 231, 233, 384, 427, 502], "unit": [29, 101, 205, 208, 212, 237, 238, 240, 241, 242, 311, 312, 315, 316, 317, 318, 321, 322, 324, 341], "unless": [148, 149, 150, 151, 152, 153, 154, 155, 166, 167, 168, 169, 170, 213, 420, 493], "unlik": [31, 65, 100, 180, 216, 228, 231, 232, 233, 234, 240, 317, 321, 341, 369, 408, 409, 411, 412, 413, 414, 416], "unnecessari": 10, "unpad": 506, "unseen": 535, "unspecifi": [419, 452], "unsqueez": 502, "unstabl": 22, "unsur": 10, "until": 16, "up": [100, 395, 400, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 423, 464, 531, 533], "updat": [4, 41, 228, 234, 235, 341, 344, 345, 346, 347, 356, 357, 358, 359, 360, 362, 363, 364, 366, 367, 368, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 423], "upon": [41, 90, 100, 113, 114, 189, 191, 211, 212, 231, 232, 233, 234], "upper": [26, 314, 398, 416, 432, 464, 465, 500, 517, 518], "upper_triangular": 518, "upsampl": [251, 252, 253, 336, 337, 338, 351, 393], "upstream": 16, "us": [0, 2, 3, 4, 5, 6, 7, 8, 10, 13, 14, 15, 16, 17, 18, 20, 22, 23, 25, 26, 28, 31, 40, 55, 57, 59, 61, 65, 69, 74, 75, 88, 89, 90, 91, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 165, 166, 167, 168, 169, 170, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 191, 202, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 222, 223, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 265, 267, 272, 274, 275, 277, 279, 281, 282, 293, 294, 296, 298, 299, 300, 301, 302, 306, 307, 311, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 372, 373, 377, 378, 379, 380, 381, 382, 384, 386, 392, 394, 395, 396, 397, 399, 401, 402, 404, 406, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 432, 433, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 464, 465, 469, 470, 473, 474, 475, 477, 483, 484, 489, 493, 498, 500, 503, 504, 506, 508, 511, 512, 513, 515, 517, 518, 521, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535], "usag": [3, 17, 42, 43, 44, 45, 53, 54, 55, 69, 105, 203, 208, 209, 210, 212, 213, 232, 235, 258, 303, 304, 305, 331, 336, 342, 395, 406, 420, 423, 454, 526, 527, 528, 529, 530, 531, 532, 533], "use_aux": [88, 89, 90], "use_fpn": 208, "use_h": [117, 118], "use_s": [117, 118], "user": [1, 2, 3, 4, 16, 123, 208, 231, 232, 233, 234, 394, 401, 409, 524, 525, 535], "usual": [215, 294, 357], "util": [3, 17, 31, 114, 130, 176, 177, 178, 189, 233, 234, 257, 394, 433], "v": [16, 20, 25, 28, 31, 55, 100, 105, 125, 247, 330, 331, 388, 390, 410, 411, 413, 414, 448], "v1": [88, 89, 97, 98, 99, 100, 111, 112], "v2": [46, 47, 48, 49, 50, 51, 52, 53, 75, 84, 85, 86, 87, 97, 99, 100, 112, 113, 116, 125, 131, 132, 133, 135, 136, 137, 186, 187, 188, 189, 190, 191], "v3": [88, 90, 91, 100, 113, 117, 118], "v4": [88, 91, 100, 114, 120, 121, 122, 123], "v_": [407, 410, 411, 413, 414, 415, 417], "v_2": 55, "v_i": 330, "v_stack": 522, "v_t": [414, 415], "val": 309, "val_loss": 403, "valid": [11, 300, 301, 302, 303, 304, 305, 307, 333, 334, 335, 336, 337, 338, 403, 488], "valu": [10, 16, 19, 23, 24, 25, 28, 40, 55, 65, 66, 67, 68, 92, 110, 111, 114, 122, 124, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 156, 157, 180, 181, 213, 217, 218, 229, 231, 233, 235, 237, 240, 243, 244, 245, 247, 248, 249, 250, 255, 257, 258, 268, 269, 270, 272, 273, 274, 275, 277, 278, 279, 280, 293, 294, 298, 299, 300, 301, 302, 306, 309, 311, 312, 313, 314, 315, 316, 317, 321, 322, 323, 324, 325, 328, 330, 331, 341, 342, 343, 344, 345, 346, 347, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 371, 377, 378, 379, 380, 381, 382, 386, 387, 388, 389, 390, 392, 396, 403, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 421, 425, 427, 428, 429, 430, 431, 432, 433, 447, 448, 449, 450, 451, 452, 453, 454, 460, 461, 462, 464, 465, 468, 469, 470, 471, 472, 473, 475, 478, 479, 481, 482, 491, 492, 493, 496, 498, 499, 503, 506, 507, 509, 511, 516, 520, 521, 523, 527, 529, 530, 532], "valuabl": 433, "valueerror": [1, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 395], "van": 100, "vanish": [100, 317, 324, 362, 363, 364], "var": 459, "varepsilon": 279, "vari": [40, 175, 232, 234, 280, 298, 371, 398, 531], "variabl": [217, 229, 235, 280, 281, 282, 353, 371, 372, 373, 394, 421, 449, 528, 531], "varianc": [242, 256, 274, 277, 300, 301, 302, 311, 312, 315, 316, 324, 341, 362, 363, 364, 366, 367, 368, 369, 410, 411, 412, 413, 414, 430, 489, 531, 535], "variant": [32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 58, 60, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 84, 85, 86, 87, 93, 94, 95, 96, 106, 107, 108, 110, 113, 114, 117, 118, 119, 120, 121, 122, 123, 126, 128, 129, 130, 131, 132, 134, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 156, 157, 171, 172, 173, 174, 176, 177, 178, 179, 187, 192, 193, 194, 195, 196, 209, 227, 410, 411, 412], "variat": [303, 304, 305, 366, 367, 368, 528, 535], "varieti": [4, 97, 138, 433, 535], "variou": [7, 10, 13, 14, 31, 69, 88, 98, 99, 100, 101, 114, 115, 123, 124, 207, 322, 406, 433, 454, 473, 475, 506, 525], "vasudevan": 100, "vaswani": [224, 386], "vdim": 330, "vdot": 443, "vector": [15, 20, 25, 26, 27, 28, 265, 267, 296, 330, 352, 354, 384, 437, 438, 439, 443], "veloc": [407, 415, 417], "verbos": [13, 397, 398, 399, 400, 401, 402, 403, 404], "veri": [25, 48, 100, 126, 150, 152, 408], "verifi": 10, "versa": 416, "versatil": [31, 100, 123, 433, 504], "version": [16, 28, 40, 88, 92, 97, 101, 102, 103, 120, 125, 127, 134, 336, 339, 349, 415, 443, 510, 529], "vertic": [514, 522, 532], "vgg": 192, "vggnet": [193, 194, 195, 196], "vggnet_11": 100, "vggnet_13": 100, "vggnet_16": 100, "vggnet_19": 100, "via": [3, 4, 16, 105, 123, 175, 210, 215, 434], "vice": 416, "video": [207, 250, 262, 302, 335, 338, 368, 379, 382], "view": [97, 101, 232, 378, 379, 380, 381, 382, 493, 494, 509, 519], "vinod": [5, 6], "vision": [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 421, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535], "visual": [55, 109, 133, 205, 207], "vit": [31, 65, 180, 198, 199, 200, 201, 202], "vit_bas": 100, "vit_hug": 100, "vit_larg": 100, "vit_smal": 100, "vit_tini": 100, "voc": [209, 210], "vocabulari": [225, 226, 227, 384], "vol": 100, "vollgraf": 7, "volum": [285, 376], "volumetr": [250, 253, 262, 302, 335, 338, 368, 376, 379, 382], "vstack": 502, "w": [10, 13, 14, 15, 31, 100, 147, 159, 160, 161, 162, 163, 164, 176, 177, 178, 211, 215, 216, 218, 219, 220, 249, 250, 252, 253, 255, 257, 261, 262, 265, 267, 275, 281, 282, 284, 285, 287, 288, 291, 292, 293, 294, 298, 299, 301, 302, 306, 330, 333, 334, 335, 336, 337, 338, 349, 352, 354, 363, 364, 365, 367, 368, 372, 373, 375, 376, 379, 382, 526, 528], "w24": [68, 100], "w_": [215, 216, 218, 219, 249, 250, 252, 253, 281, 282, 284, 285, 287, 288, 291, 292, 298, 334, 335, 337, 338, 339, 372, 373, 375, 376, 378, 379, 381, 382], "w_1": [388, 390], "w_2": [388, 390], "w_in": 294, "w_k": [31, 55, 105], "w_l": [214, 215], "w_out": [249, 250, 252, 253, 287, 288, 291, 292, 294], "w_q": [55, 105], "w_t": [218, 219], "w_v": [55, 105], "wa": [16, 89, 341, 344, 345, 346, 347, 420], "wai": [1, 10, 13, 15, 30, 56, 57, 58, 59, 60, 61, 62, 63, 64, 206, 207, 349, 421, 509], "wait": 403, "wang": 100, "want": [0, 524, 526], "warn": [231, 233, 330, 493], "warp": [211, 213], "warper_output_s": 213, "we": [3, 422, 504], "wei": 100, "weight": [55, 100, 105, 124, 125, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 166, 167, 168, 169, 170, 180, 181, 209, 210, 247, 248, 249, 250, 251, 252, 253, 265, 267, 268, 269, 273, 274, 277, 278, 296, 298, 306, 307, 311, 312, 315, 316, 330, 331, 333, 334, 335, 336, 337, 338, 341, 342, 344, 345, 346, 347, 352, 354, 356, 357, 360, 362, 363, 364, 366, 367, 368, 369, 384, 386, 387, 388, 389, 390, 394, 407, 408, 409, 410, 411, 412, 413, 414, 415, 417, 428, 433], "weight1": 233, "weight2": 233, "weight_decai": [407, 408, 409, 410, 411, 412, 413, 414, 415, 417], "weihao": 100, "weinberg": 100, "well": [52, 70, 71, 72, 73, 75, 90, 120, 134, 135, 175, 191, 198, 311, 312, 339], "wenhai": 100, "were": 235, "weyand": 100, "what": [13, 15, 349], "whatev": 420, "when": [0, 1, 3, 10, 14, 16, 23, 55, 74, 100, 208, 209, 210, 216, 218, 219, 229, 232, 234, 235, 237, 240, 248, 249, 250, 251, 252, 296, 317, 343, 353, 362, 363, 364, 366, 367, 368, 392, 395, 397, 398, 399, 400, 401, 402, 403, 404, 408, 416, 420, 421, 423, 424, 433, 444, 453, 493, 494, 524, 526], "where": [3, 4, 5, 6, 7, 8, 13, 14, 15, 19, 20, 22, 23, 24, 25, 26, 28, 55, 100, 117, 118, 119, 120, 121, 122, 134, 136, 203, 207, 215, 216, 219, 220, 222, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 258, 260, 261, 262, 265, 267, 268, 269, 270, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 286, 287, 288, 290, 291, 292, 293, 294, 296, 298, 299, 306, 307, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 333, 334, 335, 336, 339, 341, 344, 345, 346, 347, 349, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 397, 398, 399, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 433, 434, 435, 436, 440, 441, 442, 444, 445, 449, 450, 464, 465, 469, 470, 471, 472, 473, 474, 475, 479, 481, 483, 487, 488, 489, 495, 496, 502, 503, 505, 506, 508, 512, 515, 517, 518, 519, 524, 525, 526, 527, 528, 529, 530, 531, 532], "wherev": 503, "whether": [1, 16, 19, 31, 55, 74, 88, 89, 90, 117, 118, 124, 125, 131, 132, 133, 135, 136, 137, 138, 180, 181, 208, 229, 230, 311, 312, 343, 415, 421, 425, 427, 428, 429, 430, 432, 434, 449, 450, 452, 453, 473, 474, 475, 483, 489, 511, 520, 523], "which": [0, 7, 14, 16, 19, 20, 22, 23, 24, 25, 26, 28, 32, 33, 34, 35, 36, 37, 38, 39, 55, 57, 59, 61, 65, 75, 91, 99, 100, 105, 111, 112, 114, 115, 119, 125, 129, 139, 140, 141, 142, 143, 144, 145, 146, 171, 172, 173, 174, 175, 179, 180, 182, 183, 184, 185, 193, 194, 195, 196, 212, 213, 216, 225, 229, 231, 233, 235, 240, 244, 270, 279, 299, 303, 304, 305, 307, 317, 318, 321, 323, 326, 328, 341, 358, 360, 362, 363, 364, 366, 367, 368, 369, 384, 388, 390, 402, 404, 410, 411, 413, 415, 421, 427, 428, 429, 432, 446, 461, 462, 463, 466, 467, 471, 472, 473, 474, 475, 476, 479, 480, 481, 483, 485, 486, 487, 489, 491, 492, 493, 494, 495, 496, 505, 508, 509, 510, 511, 512, 514, 516, 517, 518, 519, 520, 521, 523, 525, 526, 528, 529, 530, 531, 532, 533, 535], "while": [16, 31, 41, 46, 52, 53, 64, 65, 66, 67, 68, 84, 85, 86, 87, 95, 99, 100, 108, 111, 121, 128, 129, 130, 132, 133, 134, 135, 158, 159, 160, 161, 162, 163, 164, 171, 172, 173, 174, 179, 181, 200, 207, 232, 235, 256, 257, 318, 322, 323, 343, 387, 394, 397, 407, 408, 410, 411, 412, 413, 414, 415, 416, 417, 420, 484, 503, 509, 514, 529, 535], "who": [231, 232, 233, 234], "whose": [28, 397, 398, 399, 400, 401, 402, 403, 404, 450, 453, 456, 458, 460, 465, 469, 478, 484, 493], "wide": [4, 5, 6, 8, 17, 25, 53, 100, 123, 147, 155, 156, 157, 190, 210, 241, 252, 322, 333, 334, 357], "wide_resnet_101": 100, "wide_resnet_50": 100, "wider": [44, 156, 157, 248, 249], "wideresnet": 100, "width": [31, 62, 74, 75, 100, 108, 109, 110, 111, 115, 138, 145, 146, 156, 157, 158, 159, 160, 161, 162, 163, 164, 175, 203, 218, 219, 249, 250, 252, 253, 255, 261, 262, 275, 281, 282, 284, 285, 287, 288, 291, 292, 294, 298, 299, 307, 334, 335, 339, 363, 364, 365, 367, 368, 372, 373, 375, 378, 379, 381, 382, 392, 419, 526, 528, 533], "width_coef": 74, "width_multipli": [111, 115], "window": [100, 105, 180, 181, 182, 183, 184, 185, 186, 189, 190, 191, 286, 287, 288, 290, 291, 292, 377, 378, 379, 380, 381, 382, 408, 473, 475], "windows_s": [180, 181], "wise": [10, 15, 100, 105, 169, 171, 172, 173, 174, 208, 237, 238, 240, 241, 242, 243, 244, 245, 258, 300, 301, 302, 306, 320, 326, 327, 341, 343, 344, 345, 346, 347, 394, 422, 435, 436, 439, 440, 441, 442, 444, 445, 460, 461, 462, 463, 464, 465, 466, 467, 468, 470, 471, 472, 476, 478, 479, 480, 481, 482, 485, 486, 487, 501, 511, 522, 523], "within": [2, 100, 180, 197, 207, 220, 225, 228, 231, 232, 233, 234, 235, 245, 298, 299, 316, 318, 319, 320, 322, 324, 325, 327, 328, 333, 334, 335, 338, 339, 341, 344, 345, 349, 353, 356, 357, 358, 359, 360, 362, 363, 364, 366, 369, 377, 378, 379, 380, 381, 382, 406, 420, 447, 465, 531, 535], "without": [10, 16, 100, 158, 231, 232, 233, 265, 267, 333, 334, 335, 352, 354, 420, 421, 424, 427, 473, 507, 509, 521], "word": [100, 296, 384], "work": [0, 1, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 391, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418, 419, 420, 422, 423, 424, 425, 426, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 502, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535], "workflow": [14, 433, 535], "world": 207, "worth": 100, "would": [493, 511], "wrap": [3, 374, 375, 394, 396, 420, 423, 434, 490], "wrapper": 394, "wu": 100, "www": [5, 6], "x": [11, 16, 17, 27, 31, 97, 100, 101, 105, 165, 192, 203, 208, 209, 210, 212, 213, 218, 219, 220, 228, 229, 231, 232, 233, 234, 235, 244, 258, 265, 267, 279, 293, 294, 299, 303, 304, 305, 307, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 333, 334, 335, 336, 337, 338, 339, 341, 343, 344, 345, 346, 347, 349, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 388, 389, 390, 394, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 420, 423, 425, 428, 429, 430, 432, 449, 450, 464, 469, 470, 477, 491, 492, 493, 495, 498, 500, 503, 504, 505, 510, 511, 512, 516, 517, 518, 519, 520, 526, 527, 528, 529, 530, 531, 532, 533], "x1": 352, "x2": 352, "x_": [31, 219, 275, 357, 360, 365, 389, 504], "x_0": 389, "x_1": [55, 215, 216, 218, 219, 220, 222, 223], "x_2": [55, 215, 216, 218, 219, 220, 222, 223], "x_c": [218, 357, 360], "x_i": [279, 356, 389, 434, 464, 470, 477, 516], "x_k": 357, "x_t": 219, "x_test": 16, "x_train": 16, "xavier": [311, 312, 315, 316], "xavier_norm": 310, "xavier_uniform": 310, "xiao": 7, "xie": 100, "xl": [87, 100], "xlarg": [54, 100, 110], "xmax": 499, "xmin": 499, "xy": 504, "x\u2081": 352, "x\u2082": 352, "y": [11, 16, 31, 100, 203, 218, 219, 220, 231, 232, 233, 234, 235, 279, 293, 299, 303, 304, 305, 317, 318, 319, 320, 321, 322, 324, 325, 327, 328, 333, 334, 335, 336, 337, 338, 341, 344, 345, 346, 347, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 386, 387, 388, 389, 390, 425, 428, 429, 430, 432, 434, 449, 450, 503, 504, 510, 519, 520, 529], "y0": 519, "y1": [495, 519], "y2": [495, 519], "y_": [31, 219, 275, 357, 360, 365, 504], "y_1": [215, 216, 218, 219, 220, 222, 223], "y_2": [215, 216, 218, 219, 220, 222, 223], "y_c": [218, 357, 360], "y_i": [279, 356], "y_t": 219, "y_train": 16, "yann": [8, 100], "yet": [16, 51, 53, 108, 121, 294, 422], "yield": [0, 1, 229, 493], "ymax": 499, "ymin": 499, "you": [0, 13, 15, 16, 113, 209, 210, 224, 232, 234, 235, 251, 339, 349, 386, 394, 406, 420, 421, 433, 449, 450, 451, 458, 488, 490, 491, 492, 493, 524, 526, 535], "your": [10, 16, 113, 121, 210, 394, 406, 421, 433, 535], "yu": 100, "z": [11, 16, 100, 336, 338, 388, 390, 450, 457, 458, 493], "zalandoresearch": 7, "ze": 100, "zeiler": [100, 205], "zero": [23, 25, 26, 90, 218, 219, 237, 240, 248, 249, 250, 251, 252, 253, 256, 257, 258, 259, 260, 261, 262, 279, 286, 287, 288, 290, 291, 292, 293, 294, 296, 309, 311, 312, 313, 314, 315, 316, 317, 319, 321, 322, 324, 330, 333, 334, 335, 336, 337, 338, 339, 341, 343, 344, 345, 346, 347, 369, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 394, 395, 408, 409, 410, 411, 412, 413, 414, 415, 449, 450, 451, 452, 458, 459, 464, 465, 470, 477, 478, 505, 506, 516, 517, 518, 523], "zero_grad": [16, 230, 395, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 434], "zeros_lik": [450, 459], "zhang": 100, "zhmoginov": 100, "zhu": 100, "zhuang": 100, "zihang": 100, "zip": 214, "zisserman": 100, "\u03c3\u1d62": 25}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "CIFAR10", "CIFAR100", "FashionMNIST", "MNIST", "Image Datasets", "lucid.einops", "lucid.einops.einsum", "Einops Functions", "lucid.einops.rearrange", "lucid.einops.reduce", "lucid.einops.repeat", "Lucid\u00b2 \ud83d\udc8e", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "alexnet", "CoAtNet", "coatnet_0", "coatnet_1", "coatnet_2", "coatnet_3", "coatnet_4", "coatnet_5", "coatnet_6", "coatnet_7", "ConvNeXt", "ConvNeXt_V2", "convnext_base", "convnext_large", "convnext_small", "convnext_tiny", "convnext_v2_atto", "convnext_v2_base", "convnext_v2_femto", "convnext_v2_huge", "convnext_v2_large", "convnext_v2_nano", "convnext_v2_pico", "convnext_v2_tiny", "convnext_xlarge", "CrossViT", "crossvit_15", "crossvit_15_dagger", "crossvit_18", "crossvit_18_dagger", "crossvit_9", "crossvit_9_dagger", "crossvit_base", "crossvit_small", "crossvit_tiny", "CvT", "cvt_13", "cvt_21", "cvt_w24", "DenseNet", "densenet_121", "densenet_169", "densenet_201", "densenet_264", "EfficientNet", "EfficientNet_V2", "efficientnet_b0", "efficientnet_b1", "efficientnet_b2", "efficientnet_b3", "efficientnet_b4", "efficientnet_b5", "efficientnet_b6", "efficientnet_b7", "efficientnet_v2_l", "efficientnet_v2_m", "efficientnet_v2_s", "efficientnet_v2_xl", "Inception", "inception_v1", "inception_v3", "inception_v4", "InceptionNeXt", "inception_next_atto", "inception_next_base", "inception_next_small", "inception_next_tiny", "InceptionResNet", "inception_resnet_v1", "inception_resnet_v2", "Image Classification", "LeNet", "lenet_1", "lenet_4", "lenet_5", "MaxViT", "maxvit_base", "maxvit_base", "maxvit_small", "maxvit_tiny", "maxvit_xlarge", "MobileNet", "MobileNet_V2", "MobileNet_V3", "MobileNet_V4", "mobilenet", "mobilenet_v2", "mobilenet_v3_large", "mobilenet_v3_small", "mobilenet_v4_conv_large", "mobilenet_v4_conv_medium", "mobilenet_v4_conv_small", "mobilenet_v4_hybrid_large", "mobilenet_v4_hybrid_medium", "PVT", "PVT_V2", "pvt_huge", "pvt_large", "pvt_medium", "pvt_small", "pvt_tiny", "pvt_v2_b0", "pvt_v2_b1", "pvt_v2_b2", "pvt_v2_b2_li", "pvt_v2_b3", "pvt_v2_b4", "pvt_v2_b5", "ResNeSt", "resnest_101", "resnest_14", "resnest_200", "resnest_26", "resnest_269", "resnest_50", "resnest_50_1s4x24d", "resnest_50_4s2x40d", "ResNet", "resnet_1001", "resnet_101", "resnet_152", "resnet_18", "resnet_200", "resnet_269", "resnet_34", "resnet_50", "wide_resnet_101", "wide_resnet_50", "ResNeXt", "resnext_101_32x16d", "resnext_101_32x32d", "resnext_101_32x4d", "resnext_101_32x8d", "resnext_101_64x4d", "resnext_50_32x4d", "SENet", "se_resnet_101", "se_resnet_152", "se_resnet_18", "se_resnet_34", "se_resnet_50", "se_resnext_101_32x4d", "se_resnext_101_32x8d", "se_resnext_101_64x4d", "se_resnext_50_32x4d", "SKNet", "sk_resnet_18", "sk_resnet_34", "sk_resnet_50", "sk_resnext_50_32x4d", "SwinTransformer", "SwinTransformer_V2", "swin_base", "swin_large", "swin_small", "swin_tiny", "swin_v2_base", "swin_v2_giant", "swin_v2_huge", "swin_v2_large", "swin_v2_small", "swin_v2_tiny", "VGGNet", "vggnet_11", "vggnet_13", "vggnet_16", "vggnet_19", "ViT", "vit_base", "vit_huge", "vit_large", "vit_small", "vit_tiny", "Xception", "xception", "ZFNet", "zfnet", "lucid.models", "Faster R-CNN", "faster_rcnn_resnet_101_fpn", "faster_rcnn_resnet_50_fpn", "Object detection", "Fast R-CNN", "R-CNN", "util.FPN", "util.MultiScaleROIAlign", "util.ROIAlign", "util.SelectiveSearch", "util.apply_deltas", "util.bbox_to_delta", "util.clip_boxes", "Object Detection Utilities", "util.iou", "util.nms", "Sequence-to-Sequence", "Transformer", "transformer_base", "transformer_big", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "Attention Functions", "nn.functional.scaled_dot_product_attention", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "nn.functional.conv_transpose1d", "nn.functional.conv_transpose2d", "nn.functional.conv_transpose3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.drop_block", "nn.functional.drop_path", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "nn.functional.global_response_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.normalize", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.adaptive_max_pool1d", "nn.functional.adaptive_max_pool2d", "nn.functional.adaptive_max_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "nn.functional.affine_grid", "nn.functional.grid_sample", "Spatial Functions", "nn.functional.embedding", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "nn.DepthSeparableConv1d", "nn.DepthSeparableConv2d", "nn.DepthSeparableConv3d", "nn.SEModule", "nn.SelectiveKernel", "Fused Layers", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.HardSigmoid", "nn.HardSwish", "nn.LeakyReLU", "nn.ReLU", "nn.ReLU6", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Swish", "nn.Tanh", "Activation Layers", "nn.MultiHeadAttention", "nn.ScaledDotProductAttention", "Attention Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "nn.ConvTranspose1d", "nn.ConvTranspose2d", "nn.ConvTranspose3d", "nn.Unfold", "Convolution Layers", "nn.AlphaDropout", "nn.DropBlock", "nn.DropPath", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "nn.Rearrange", "Einops Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.GlobalResponseNorm", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AdaptiveMaxPool1d", "nn.AdaptiveMaxPool2d", "nn.AdaptiveMaxPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "nn.Embedding", "Sparse Layers", "nn.Transformer", "nn.TransformerDecoder", "nn.TransformerDecoderLayer", "nn.TransformerEncoder", "nn.TransformerEncoderLayer", "Transformer Layers", "nn.Upsample", "Vision Layers", "lucid.nn", "optim.Optimizer", "optim.lr_scheduler", "lr_scheduler.CosineAnnealingLR", "lr_scheduler.CyclicLR", "lr_scheduler.ExponentialLR", "lr_scheduler.LRScheduler", "lr_scheduler.LambdaLR", "lr_scheduler.MultiStepLR", "lr_scheduler.ReduceLROnPlateau", "lr_scheduler.StepLR", "LR Schedulers", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.Numeric", "lucid.count_flops", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.random.bernoulli", "Random Number Generations", "lucid.random.permutation", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.multiply", "lucid.outer", "lucid.power", "lucid.sub", "lucid.tensordot", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.full", "lucid.full_like", "lucid.linspace", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.ceil", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.floor", "lucid.log", "lucid.log2", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.round", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.swapaxes", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.argmax", "lucid.argmin", "lucid.argsort", "lucid.broadcast_to", "lucid.chunk", "lucid.concatenate", "lucid.flatten", "lucid.histogram", "lucid.histogram2d", "lucid.histogramdd", "lucid.hstack", "Tensor Utilities", "lucid.masked_fill", "lucid.meshgrid", "lucid.nonzero", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.roll", "lucid.sort", "lucid.split", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.topk", "lucid.tril", "lucid.triu", "lucid.unbind", "lucid.unique", "lucid.unsqueeze", "lucid.vstack", "lucid.where", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": [422, 493], "1d": 422, "2": 422, "2d": 422, "3": 422, "It": 421, "The": 16, "ab": 460, "about": [57, 59, 61], "abstract": 16, "acceler": 16, "activ": [239, 264, 329, 351], "ad": 422, "adadelta": 408, "adagrad": 409, "adam": 410, "adamax": 412, "adamw": 411, "adaptive_avg_pool1d": 280, "adaptive_avg_pool2d": 281, "adaptive_avg_pool3d": 282, "adaptive_max_pool1d": 283, "adaptive_max_pool2d": 284, "adaptive_max_pool3d": 285, "adaptiveavgpool1d": 371, "adaptiveavgpool2d": 372, "adaptiveavgpool3d": 373, "adaptivemaxpool1d": 374, "adaptivemaxpool2d": 375, "adaptivemaxpool3d": 376, "add": 435, "addit": [25, 330], "advanc": [255, 535], "advantag": [10, 13, 14, 15, 349], "affine_grid": 293, "alexnet": [29, 30, 100], "algebra": 21, "algorithm": [407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417], "align": [16, 422], "along": 492, "alpha_dropout": 256, "alphadropout": 341, "also": 406, "anoth": 490, "apply_delta": 218, "arang": 447, "arcco": 461, "architectur": [29, 31, 40, 55, 102, 103, 104, 105, 156, 157, 205, 208, 212, 213], "arcsin": 462, "arctan": 463, "argmax": 491, "argmin": 492, "argsort": 493, "ascend": 493, "asgd": 407, "attent": [246, 247, 264, 307, 332, 351], "attribut": [5, 6, 7, 8, 29, 97, 101, 147, 158, 165, 175, 192, 203, 205, 228, 230, 231, 232, 233, 234, 235, 300, 301, 302, 303, 304, 305, 306, 317, 318, 321, 322, 324, 325, 326, 328, 333, 334, 335, 336, 337, 338, 341, 343, 344, 345, 346, 347, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 419, 434, 526, 527, 528, 529, 530, 531, 532, 533], "autodiff": 16, "automat": 16, "avg_pool1d": 286, "avg_pool2d": 287, "avg_pool3d": 288, "avgpool1d": 377, "avgpool2d": 378, "avgpool3d": 379, "axi": [422, 484, 492], "backend": 16, "backpropag": 434, "backward": [18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 257, 265, 267, 293, 298, 306, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 333, 334, 335, 336, 337, 338, 341, 344, 345, 346, 347, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 494, 496, 501, 504, 506, 507, 508, 509, 513, 514, 515, 517, 518, 519, 521, 522], "base": [405, 434], "basic": 16, "batch_norm": 274, "batchnorm": 308, "batchnorm1d": 362, "batchnorm2d": 363, "batchnorm3d": 364, "bbox_to_delta": 219, "bceloss": 356, "behavior": [280, 281, 282, 283, 284, 285, 371, 372, 373, 374, 375, 376], "benefit": [420, 423], "bernoulli": 425, "between": [16, 434], "bilinear": [265, 352], "binari": 459, "binary_cross_entropi": 268, "bottleneck": [117, 118], "broadcast": [422, 494], "broadcast_to": 494, "buffer": 228, "calcul": [11, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 147, 158, 165, 175, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 255, 257, 258, 265, 267, 280, 281, 282, 283, 293, 294, 298, 300, 301, 302, 303, 304, 305, 306, 307, 311, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 494, 496, 501, 504, 506, 507, 508, 509, 513, 514, 515, 517, 518, 519, 521, 522, 523, 526, 527, 528, 529, 530, 531, 532, 533], "captur": 424, "ceil": 464, "centercrop": 526, "choleski": 18, "chunk": 495, "cifar10": 5, "cifar100": 6, "class": [0, 1, 2, 5, 6, 7, 8, 29, 31, 40, 41, 55, 65, 69, 74, 75, 88, 92, 97, 101, 105, 111, 112, 113, 114, 138, 147, 158, 165, 175, 180, 181, 192, 197, 203, 205, 208, 212, 213, 221, 225, 228, 229, 230, 231, 232, 233, 234, 235, 300, 301, 302, 303, 304, 305, 306, 307, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 392, 395, 397, 398, 399, 400, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 434, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533], "classif": 100, "clip": 465, "clip_box": 220, "cnn": [208, 211, 212, 213], "co": 466, "coatnet": [31, 100], "coatnet_0": 32, "coatnet_1": 33, "coatnet_2": 34, "coatnet_3": 35, "coatnet_4": 36, "coatnet_5": 37, "coatnet_6": 38, "coatnet_7": 39, "combin": 0, "compon": [3, 394], "compos": 524, "comput": [207, 495, 503, 510, 511, 516], "concatdataset": [0, 1], "concaten": 496, "conclus": [3, 10, 13, 14, 15, 16, 349, 394, 396, 421, 422, 433, 525, 535], "configur": [32, 33, 34, 35, 36, 37, 38, 39, 74, 106, 107, 108, 109, 110, 117, 118, 139, 140, 141, 142, 143, 144, 145, 146], "constant": 309, "constructor": [214, 215, 216, 217], "contain": 236, "contract": 446, "conv": 308, "conv1d": [248, 333], "conv2d": [249, 334], "conv3d": [250, 335], "conv_transpose1d": 251, "conv_transpose2d": 252, "conv_transpose3d": 253, "convbnrelu1d": 300, "convbnrelu2d": 301, "convbnrelu3d": 302, "convnext": [40, 100], "convnext_bas": 42, "convnext_larg": 43, "convnext_smal": 44, "convnext_tini": 45, "convnext_v2": 41, "convnext_v2_atto": 46, "convnext_v2_bas": 47, "convnext_v2_femto": 48, "convnext_v2_hug": 49, "convnext_v2_larg": 50, "convnext_v2_nano": 51, "convnext_v2_pico": 52, "convnext_v2_tini": 53, "convnext_xlarg": 54, "convolut": [100, 254, 264, 308, 340, 351], "convtranspose1d": 336, "convtranspose2d": 337, "convtranspose3d": 338, "core": 16, "cosh": 467, "cosineannealinglr": 397, "count_flop": 420, "creat": [230, 434, 490], "cross_entropi": 269, "crossentropyloss": 357, "crossvit": [55, 100], "crossvit_15": 56, "crossvit_15_dagg": 57, "crossvit_18": 58, "crossvit_18_dagg": 59, "crossvit_9": 60, "crossvit_9_dagg": 61, "crossvit_bas": 62, "crossvit_smal": 63, "crossvit_tini": 64, "cube": 468, "custom": [1, 2, 3, 229, 395, 406, 535], "cvt": [65, 100], "cvt_13": 66, "cvt_21": 67, "cvt_w24": 68, "cycliclr": 398, "d": 493, "dagger": [57, 59, 61], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 9], "defin": [2, 229, 395, 406], "definit": [13, 14, 15, 279, 349], "densenet": [69, 100], "densenet_121": 70, "densenet_169": 71, "densenet_201": 72, "densenet_264": 73, "depthseparableconv1d": 303, "depthseparableconv2d": 304, "depthseparableconv3d": 305, "depthwis": 308, "descend": 493, "descript": [159, 160, 161, 162, 163, 164, 176, 177, 178, 424], "design": 16, "det": 19, "detail": [25, 55, 105, 119, 120, 121, 122, 123, 156, 157, 330, 386, 387, 388, 389, 390], "detect": [211, 221], "devic": [16, 434], "diag": 448, "dictionari": 208, "differ": 225, "differenti": 16, "dilat": 255, "dim": 492, "div": 436, "dot": 437, "drop_block": 257, "drop_path": 258, "dropblock": 342, "dropout": [259, 263, 264, 344, 348, 351], "dropout1d": [260, 345], "dropout2d": [261, 346], "dropout3d": [262, 347], "droppath": 343, "dtype": 434, "duplic": 493, "educ": 16, "efficientnet": [74, 100], "efficientnet_b0": 76, "efficientnet_b1": 77, "efficientnet_b2": 78, "efficientnet_b3": 79, "efficientnet_b4": 80, "efficientnet_b5": 81, "efficientnet_b6": 82, "efficientnet_b7": 83, "efficientnet_v2": 75, "efficientnet_v2_": 86, "efficientnet_v2_l": 84, "efficientnet_v2_m": 85, "efficientnet_v2_xl": 87, "eig": 20, "einop": [10, 11, 12, 13, 14, 15, 350, 351], "einsum": 11, "elu": [237, 317], "embed": [296, 384], "empti": 449, "empty_lik": 450, "enabl": 16, "enhanc": 125, "evalu": 16, "exampl": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 92, 93, 94, 95, 96, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 268, 269, 270, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 392, 394, 395, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 535], "excit": 308, "exp": 469, "exponentiallr": 399, "express": [275, 464, 470, 477, 512], "ey": 451, "fashionmnist": 7, "fast": [211, 212], "faster": [208, 211], "faster_rcnn_resnet_101_fpn": 209, "faster_rcnn_resnet_50_fpn": 210, "featur": [4, 17, 171, 172, 173, 174, 179, 406, 433, 535], "flatten": [491, 497], "floor": 470, "flop": 493, "formula": [397, 398, 399, 401, 402, 403, 404], "forward": [11, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 147, 158, 165, 175, 203, 214, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 255, 258, 265, 267, 280, 281, 282, 283, 293, 294, 298, 300, 301, 302, 303, 304, 305, 306, 307, 311, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 386, 387, 388, 389, 390, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 485, 486, 487, 488, 489, 496, 501, 504, 506, 507, 508, 509, 513, 514, 515, 517, 518, 521, 522, 526, 527, 528, 529, 530, 531, 532, 533], "fpn": 214, "free": 434, "from": [225, 490], "full": 452, "full_lik": 453, "function": [11, 12, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 32, 33, 34, 35, 36, 37, 38, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 98, 99, 102, 103, 104, 106, 107, 108, 109, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 206, 209, 210, 218, 219, 220, 221, 222, 223, 226, 227, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 309, 311, 312, 313, 314, 315, 316, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 459, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523], "fuse": 308, "futur": 4, "gelu": [238, 318], "gener": [426, 459], "get": 406, "global": 492, "global_response_norm": 275, "globalresponsenorm": 365, "gpu": [16, 434], "grad_en": 421, "gradient": [18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 257, 265, 267, 293, 298, 306, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 333, 334, 335, 336, 337, 338, 341, 344, 345, 346, 347, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 366, 367, 368, 369, 377, 378, 379, 380, 381, 382, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 460, 461, 462, 463, 465, 466, 467, 468, 469, 471, 472, 473, 474, 475, 476, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 494, 495, 496, 501, 503, 504, 506, 507, 508, 509, 510, 511, 513, 514, 515, 516, 517, 518, 519, 521, 522, 523], "grid_sampl": 294, "hardsigmoid": 319, "hardswish": 320, "heapsort": 493, "histogram": 498, "histogram2d": 499, "histogramdd": 500, "hook": [16, 434], "how": [16, 421], "hstack": 501, "huber_loss": 270, "huberloss": 358, "hybrid": 31, "hyperparamet": [145, 146], "ident": 353, "imag": [9, 100, 534], "implement": [55, 105], "incept": [88, 100], "inception_next_atto": 93, "inception_next_bas": 94, "inception_next_smal": 95, "inception_next_tini": 96, "inception_resnet_v1": 98, "inception_resnet_v2": 99, "inception_v1": 89, "inception_v3": 90, "inception_v4": 91, "inceptionnext": [92, 100], "inceptionresnet": 97, "index": [491, 492], "infer": 434, "init": [309, 311, 312, 313, 314, 315, 316], "initi": 310, "inner": 438, "input": [214, 215, 216, 490], "inspect": [406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417], "instal": 16, "instance_norm": 277, "instancenorm1d": 366, "instancenorm2d": 367, "instancenorm3d": 368, "integr": [3, 394, 433, 535], "interpol": 298, "inv": 22, "iou": 222, "kaiming_norm": 311, "kaiming_uniform": 312, "keep": 492, "kei": [3, 4, 125, 171, 172, 173, 174, 179, 394, 406, 433, 535], "kernel": [308, 493], "lambdalr": 401, "languag": 207, "layer": [139, 140, 141, 142, 143, 144, 308, 329, 332, 340, 348, 350, 351, 355, 361, 370, 383, 385, 391, 393], "layer_norm": 278, "layernorm": 369, "leaky_relu": 240, "leakyrelu": 321, "learn": 433, "lenet": [100, 101], "lenet_1": 102, "lenet_4": 103, "lenet_5": 104, "linalg": [17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28], "linear": [21, 264, 266, 267, 351, 354, 355], "linspac": 454, "list": 490, "load": 1, "log": 471, "log2": 472, "loss": [208, 264, 271, 351, 361], "lr": 405, "lr_schedul": [396, 397, 398, 399, 400, 401, 402, 403, 404], "lrschedul": 400, "lucid": [3, 4, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 207, 264, 394, 406, 419, 420, 421, 422, 423, 424, 425, 427, 428, 429, 430, 431, 432, 433, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 535], "lucid\u00b2": 16, "masked_fil": 503, "mathemat": [13, 14, 15, 55, 105, 275, 279, 330, 349, 386, 387, 388, 389, 390, 397, 398, 399, 401, 402, 403, 404, 434, 464, 470, 477, 512], "matmul": 439, "matrix": 439, "matrix_pow": 23, "max": [473, 491], "max_pool1d": 290, "max_pool2d": 291, "max_pool3d": 292, "maximum": [440, 491], "maxpool1d": 380, "maxpool2d": 381, "maxpool3d": 382, "maxvit": [100, 105], "maxvit_bas": [106, 107], "maxvit_smal": 108, "maxvit_tini": 109, "maxvit_xlarg": 110, "mean": 474, "mechan": [247, 307], "meshgrid": 504, "metadata": 424, "metal": 16, "method": [0, 1, 2, 5, 6, 7, 8, 97, 101, 192, 229, 230, 386, 387, 388, 389, 390, 395, 397, 398, 399, 400, 401, 402, 403, 404, 419, 434], "min": 475, "minimum": [441, 492], "mlx": 16, "mnist": 8, "mobilenet": [100, 111, 115], "mobilenet_v2": [112, 116], "mobilenet_v3": 113, "mobilenet_v3_larg": 117, "mobilenet_v3_smal": 118, "mobilenet_v4": 114, "mobilenet_v4_conv_larg": 119, "mobilenet_v4_conv_medium": 120, "mobilenet_v4_conv_smal": 121, "mobilenet_v4_hybrid_larg": 122, "mobilenet_v4_hybrid_medium": 123, "model": [106, 107, 108, 109, 110, 207, 394], "modul": [229, 351], "moduledict": 231, "modulelist": 232, "more": 433, "move": 434, "mse_loss": 272, "mseloss": 359, "multiheadattent": 330, "multipl": [0, 439], "multipli": 442, "multiscaleroialign": 215, "multisteplr": 402, "nadam": 413, "natur": 207, "network": 16, "neural": 16, "new": 422, "newaxi": 422, "nll_loss": 273, "nllloss": 360, "nm": 223, "nn": [16, 225, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 264, 265, 267, 268, 269, 270, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 392, 394], "no_grad": 423, "nonzero": 505, "norm": 24, "normal": [264, 276, 279, 313, 351, 370, 527], "note": [11, 209, 210, 294, 452, 453], "number": 426, "numer": 419, "object": [211, 221], "ones": 455, "ones_lik": 456, "oper": [21, 439, 459], "optim": [395, 396, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 418], "option": 330, "organ": 394, "other": 16, "outer": 443, "output": [214, 215, 216], "overview": [3, 4, 10, 88, 89, 90, 91, 97, 98, 99, 101, 102, 103, 104, 111, 112, 113, 114, 119, 120, 121, 122, 123, 148, 149, 150, 151, 152, 153, 154, 155, 166, 167, 168, 169, 170, 330, 386, 387, 388, 389, 390, 394, 396, 406, 420, 423, 433, 535], "pad": 506, "paramet": [1, 5, 6, 7, 8, 11, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 268, 269, 270, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 321, 322, 324, 325, 326, 328, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 392, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 423, 424, 425, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533], "parameterdict": 233, "parameterlist": 234, "pass": 203, "perform": [434, 493], "permut": 427, "pinv": 25, "pipelin": [3, 535], "pitfal": 421, "pool": [264, 289, 351, 383], "potenti": 421, "power": 444, "process": [207, 296], "properti": [230, 434], "pvt": [100, 124], "pvt_huge": 126, "pvt_larg": 127, "pvt_medium": 128, "pvt_small": 129, "pvt_tini": 130, "pvt_v2": 125, "pvt_v2_b0": 131, "pvt_v2_b1": 132, "pvt_v2_b2": 133, "pvt_v2_b2_li": 134, "pvt_v2_b3": 135, "pvt_v2_b4": 136, "pvt_v2_b5": 137, "pyramid": 100, "qr": 26, "r": [208, 211, 212, 213], "radam": 414, "rais": [18, 19, 20, 22, 23, 24, 25, 26, 27, 28], "rand": 428, "randint": 429, "randn": 430, "random": [425, 426, 427, 428, 429, 430, 431, 432, 433], "randomcrop": 528, "randomgrayscal": 529, "randomhorizontalflip": 530, "randomrot": 531, "randomverticalflip": 532, "ravel": 507, "rearrang": [10, 13, 349], "reciproc": 476, "reduc": [10, 14], "reducelronplateau": 403, "refer": [5, 6, 7, 8, 306, 406], "register_model": 424, "regular": 257, "relu": [241, 308, 322], "relu6": 323, "repeat": [10, 15, 508], "represent": [55, 105, 419, 434], "reshap": 509, "resiz": 533, "resnest": [100, 138], "resnest_101": 139, "resnest_14": 140, "resnest_200": 141, "resnest_26": 142, "resnest_269": 143, "resnest_50": 144, "resnest_50_1s4x24d": 145, "resnest_50_4s2x40d": 146, "resnet": [100, 147], "resnet_1001": 148, "resnet_101": 149, "resnet_152": 150, "resnet_18": 151, "resnet_200": 152, "resnet_269": 153, "resnet_34": 154, "resnet_50": 155, "resnext": [100, 158], "resnext_101_32x16d": 159, "resnext_101_32x32d": 160, "resnext_101_32x4d": 161, "resnext_101_32x8d": 162, "resnext_101_64x4d": 163, "resnext_50_32x4d": 164, "return": [11, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 30, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 56, 57, 58, 59, 60, 61, 62, 63, 64, 66, 67, 68, 70, 71, 72, 73, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 89, 90, 91, 93, 94, 95, 96, 98, 99, 102, 103, 104, 115, 116, 117, 118, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 198, 199, 200, 201, 202, 204, 206, 209, 210, 214, 215, 216, 217, 218, 219, 220, 222, 223, 226, 227, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 268, 269, 270, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 296, 298, 299, 307, 309, 311, 312, 313, 314, 315, 316, 323, 349, 384, 420, 421, 423, 425, 427, 428, 429, 430, 431, 432, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523], "rmsprop": 415, "roialign": 216, "roll": 510, "rotat": 299, "round": 477, "row": 491, "rprop": 416, "rule": [439, 446, 484, 494], "scaled_dot_product_attent": 247, "scaleddotproductattent": 331, "schedul": 405, "se_resnet_101": 166, "se_resnet_152": 167, "se_resnet_18": 168, "se_resnet_34": 169, "se_resnet_50": 170, "se_resnext_101_32x4d": 171, "se_resnext_101_32x8d": 172, "se_resnext_101_64x4d": 173, "se_resnext_50_32x4d": 174, "see": 406, "seed": 431, "select": 308, "selectivekernel": 307, "selectivesearch": 217, "selu": [242, 324], "semodul": 306, "senet": [100, 165], "separ": 308, "sequenc": 224, "sequenti": 235, "sgd": 417, "shape": 16, "sigmoid": [243, 325], "sign": 478, "signatur": [0, 1, 2, 5, 6, 7, 8, 11, 13, 14, 15, 18, 19, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 212, 213, 218, 219, 220, 222, 223, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 237, 238, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 256, 257, 258, 259, 260, 261, 262, 265, 267, 268, 269, 270, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 290, 291, 292, 293, 294, 296, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 331, 333, 334, 335, 336, 337, 338, 339, 341, 342, 343, 344, 345, 346, 347, 349, 352, 353, 354, 356, 357, 358, 359, 360, 362, 363, 364, 365, 366, 367, 368, 369, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 386, 387, 388, 389, 390, 392, 395, 397, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 419, 420, 421, 423, 424, 425, 427, 428, 429, 430, 431, 432, 434, 435, 436, 437, 438, 439, 440, 441, 442, 443, 444, 445, 446, 447, 448, 449, 450, 451, 452, 453, 454, 455, 456, 457, 458, 460, 461, 462, 463, 464, 465, 466, 467, 468, 469, 470, 471, 472, 473, 474, 475, 476, 477, 478, 479, 480, 481, 482, 483, 484, 485, 486, 487, 488, 489, 490, 491, 492, 493, 494, 495, 496, 497, 498, 499, 500, 501, 503, 504, 505, 506, 507, 508, 509, 510, 511, 512, 513, 514, 515, 516, 517, 518, 519, 520, 521, 522, 523, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533], "sin": 479, "sinh": 480, "sk_resnet_18": 176, "sk_resnet_34": 177, "sk_resnet_50": 178, "sk_resnext_50_32x4d": 179, "sknet": [100, 175], "softmax": [244, 326], "solv": 27, "sort": [493, 511], "spars": [351, 385], "spatial": [264, 295], "specif": [56, 57, 58, 59, 60, 61, 62, 63, 64], "split": 512, "sqrt": 481, "squar": 482, "squeez": [308, 513], "stabl": 493, "stack": 514, "start": 406, "state": [406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417], "steplr": 404, "sub": 445, "sum": 483, "svd": 28, "swap": 484, "swapax": 484, "swin": 100, "swin_bas": 182, "swin_larg": 183, "swin_smal": 184, "swin_tini": 185, "swin_v2_bas": 186, "swin_v2_giant": 187, "swin_v2_hug": 188, "swin_v2_larg": 189, "swin_v2_smal": 190, "swin_v2_tini": 191, "swintransform": 180, "swintransformer_v2": 181, "swish": 327, "switch": 16, "tan": 485, "tanh": [245, 328, 486], "tensor": [16, 422, 434, 446, 459, 490, 502], "tensordot": 446, "tile": 515, "topk": 516, "totensor": 525, "trace": 487, "track": 434, "train": [16, 209, 210], "transform": [100, 224, 225, 351, 386, 391, 524, 525, 526, 527, 528, 529, 530, 531, 532, 533, 534, 535], "transformer_bas": 226, "transformer_big": 227, "transformerdecod": 387, "transformerdecoderlay": 388, "transformerencod": 389, "transformerencoderlay": 390, "transpos": 488, "tril": 517, "triu": 518, "unari": 459, "unbind": 519, "unfold": [255, 339], "uniform": [314, 432], "uniqu": 520, "unsqueez": 521, "upsampl": 392, "us": [1, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416, 417, 434, 490], "usag": [4, 84, 85, 86, 87, 89, 90, 91, 98, 99, 101, 102, 103, 104, 119, 120, 121, 122, 123, 171, 172, 173, 174, 179, 228, 299, 330, 386, 387, 388, 389, 390, 396, 397, 398, 399, 400, 401, 402, 403, 404, 419, 421, 422, 504, 524, 525, 535], "util": [214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 264, 297, 502], "valu": 512, "var": 489, "variant": [57, 59, 61], "verif": 16, "vggnet": [100, 192], "vggnet_11": 193, "vggnet_13": 194, "vggnet_16": 195, "vggnet_19": 196, "vision": [100, 207, 351, 393], "visual": 100, "vit": [100, 197], "vit_bas": 198, "vit_hug": 199, "vit_larg": 200, "vit_smal": 201, "vit_tini": 202, "vstack": 522, "weight": 310, "where": 523, "wide_resnet_101": 156, "wide_resnet_50": 157, "work": [4, 421], "xavier_norm": 315, "xavier_uniform": 316, "xception": [100, 203, 204], "zero": 457, "zeros_lik": 458, "zfnet": [100, 205, 206]}})