Search.setIndex({"alltitles": {"@ Operator": [[237, "operator"]], "Activation Functions": [[95, null]], "Activation Layers": [[165, null], [176, null]], "Additional Details": [[17, "additional-details"]], "Admonitions and Usage Guidelines": [[224, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[106, "advanced-example-with-dilation"]], "Advanced Features": [[305, "advanced-features"]], "AlexNet": [[21, null]], "Algorithm": [[208, "algorithm"], [209, "algorithm"], [210, "algorithm"], [211, "algorithm"], [212, "algorithm"], [213, "algorithm"], [214, "algorithm"], [215, "algorithm"], [216, "algorithm"], [217, "algorithm"], [218, "algorithm"]], "Architecture": [[21, "architecture"], [37, "architecture"], [38, "architecture"], [39, "architecture"], [80, "architecture"]], "Architecture Details": [[49, "architecture-details"], [50, "architecture-details"]], "Attention Mechanism": [[147, "attention-mechanism"]], "Attributes": [[5, "attributes"], [6, "attributes"], [21, "attributes"], [32, "attributes"], [36, "attributes"], [40, "attributes"], [51, "attributes"], [58, "attributes"], [68, "attributes"], [73, "attributes"], [78, "attributes"], [80, "attributes"], [84, "attributes"], [86, "attributes"], [87, "attributes"], [88, "attributes"], [89, "attributes"], [90, "attributes"], [91, "attributes"], [140, "attributes"], [141, "attributes"], [142, "attributes"], [143, "attributes"], [144, "attributes"], [145, "attributes"], [146, "attributes"], [157, "attributes"], [158, "attributes"], [159, "attributes"], [160, "attributes"], [161, "attributes"], [162, "attributes"], [163, "attributes"], [164, "attributes"], [166, "attributes"], [167, "attributes"], [168, "attributes"], [170, "attributes"], [171, "attributes"], [172, "attributes"], [173, "attributes"], [174, "attributes"], [177, "attributes"], [178, "attributes"], [179, "attributes"], [181, "attributes"], [182, "attributes"], [183, "attributes"], [184, "attributes"], [185, "attributes"], [187, "attributes"], [188, "attributes"], [189, "attributes"], [190, "attributes"], [191, "attributes"], [192, "attributes"], [193, "attributes"], [195, "attributes"], [196, "attributes"], [197, "attributes"], [198, "attributes"], [199, "attributes"], [200, "attributes"], [201, "attributes"], [202, "attributes"], [203, "attributes"], [232, "attributes"], [296, "attributes"], [297, "attributes"], [298, "attributes"], [299, "attributes"], [300, "attributes"], [301, "attributes"], [302, "attributes"], [303, "attributes"]], "Backward Gradient Calculation": [[10, "backward-gradient-calculation"], [11, "backward-gradient-calculation"], [12, "backward-gradient-calculation"], [14, "backward-gradient-calculation"], [15, "backward-gradient-calculation"], [16, "backward-gradient-calculation"], [17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [20, "backward-gradient-calculation"], [87, "backward-gradient-calculation"], [88, "backward-gradient-calculation"], [89, "backward-gradient-calculation"], [90, "backward-gradient-calculation"], [91, "backward-gradient-calculation"], [93, "backward-gradient-calculation"], [94, "backward-gradient-calculation"], [96, "backward-gradient-calculation"], [97, "backward-gradient-calculation"], [98, "backward-gradient-calculation"], [99, "backward-gradient-calculation"], [100, "backward-gradient-calculation"], [101, "backward-gradient-calculation"], [114, "backward-gradient-calculation"], [116, "backward-gradient-calculation"], [138, "backward-gradient-calculation"], [146, "backward-gradient-calculation"], [156, "backward-gradient-calculation"], [157, "backward-gradient-calculation"], [158, "backward-gradient-calculation"], [159, "backward-gradient-calculation"], [160, "backward-gradient-calculation"], [161, "backward-gradient-calculation"], [162, "backward-gradient-calculation"], [163, "backward-gradient-calculation"], [164, "backward-gradient-calculation"], [166, "backward-gradient-calculation"], [167, "backward-gradient-calculation"], [168, "backward-gradient-calculation"], [170, "backward-gradient-calculation"], [171, "backward-gradient-calculation"], [172, "backward-gradient-calculation"], [173, "backward-gradient-calculation"], [174, "backward-gradient-calculation"], [177, "backward-gradient-calculation"], [178, "backward-gradient-calculation"], [179, "backward-gradient-calculation"], [181, "backward-gradient-calculation"], [182, "backward-gradient-calculation"], [183, "backward-gradient-calculation"], [184, "backward-gradient-calculation"], [185, "backward-gradient-calculation"], [187, "backward-gradient-calculation"], [188, "backward-gradient-calculation"], [189, "backward-gradient-calculation"], [190, "backward-gradient-calculation"], [191, "backward-gradient-calculation"], [192, "backward-gradient-calculation"], [193, "backward-gradient-calculation"], [198, "backward-gradient-calculation"], [199, "backward-gradient-calculation"], [200, "backward-gradient-calculation"], [201, "backward-gradient-calculation"], [202, "backward-gradient-calculation"], [203, "backward-gradient-calculation"], [233, "backward-gradient-calculation"], [234, "backward-gradient-calculation"], [235, "backward-gradient-calculation"], [236, "backward-gradient-calculation"], [237, "backward-gradient-calculation"], [238, "backward-gradient-calculation"], [239, "backward-gradient-calculation"], [240, "backward-gradient-calculation"], [241, "backward-gradient-calculation"], [242, "backward-gradient-calculation"], [243, "backward-gradient-calculation"], [254, "backward-gradient-calculation"], [255, "backward-gradient-calculation"], [256, "backward-gradient-calculation"], [257, "backward-gradient-calculation"], [258, "backward-gradient-calculation"], [259, "backward-gradient-calculation"], [260, "backward-gradient-calculation"], [261, "backward-gradient-calculation"], [262, "backward-gradient-calculation"], [263, "backward-gradient-calculation"], [264, "backward-gradient-calculation"], [265, "backward-gradient-calculation"], [266, "backward-gradient-calculation"], [267, "backward-gradient-calculation"], [268, "backward-gradient-calculation"], [269, "backward-gradient-calculation"], [270, "backward-gradient-calculation"], [271, "backward-gradient-calculation"], [272, "backward-gradient-calculation"], [273, "backward-gradient-calculation"], [274, "backward-gradient-calculation"], [275, "backward-gradient-calculation"], [276, "backward-gradient-calculation"], [277, "backward-gradient-calculation"], [278, "backward-gradient-calculation"], [280, "backward-gradient-calculation"], [282, "backward-gradient-calculation"], [284, "backward-gradient-calculation"], [285, "backward-gradient-calculation"], [286, "backward-gradient-calculation"], [287, "backward-gradient-calculation"], [288, "backward-gradient-calculation"], [289, "backward-gradient-calculation"], [290, "backward-gradient-calculation"], [291, "backward-gradient-calculation"], [292, "backward-gradient-calculation"], [293, "backward-gradient-calculation"]], "Behavior": [[127, "behavior"], [128, "behavior"], [129, "behavior"], [195, "behavior"], [196, "behavior"], [197, "behavior"]], "Benefits": [[222, "benefits"]], "Binary Functions": [[253, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [6, "class-signature"], [21, "class-signature"], [23, "class-signature"], [28, "class-signature"], [32, "class-signature"], [36, "class-signature"], [40, "class-signature"], [51, "class-signature"], [58, "class-signature"], [68, "class-signature"], [73, "class-signature"], [78, "class-signature"], [80, "class-signature"], [84, "class-signature"], [85, "class-signature"], [86, "class-signature"], [87, "class-signature"], [88, "class-signature"], [89, "class-signature"], [90, "class-signature"], [91, "class-signature"], [140, "class-signature"], [141, "class-signature"], [142, "class-signature"], [143, "class-signature"], [144, "class-signature"], [145, "class-signature"], [146, "class-signature"], [147, "class-signature"], [157, "class-signature"], [158, "class-signature"], [159, "class-signature"], [160, "class-signature"], [161, "class-signature"], [162, "class-signature"], [163, "class-signature"], [164, "class-signature"], [166, "class-signature"], [167, "class-signature"], [168, "class-signature"], [170, "class-signature"], [171, "class-signature"], [172, "class-signature"], [173, "class-signature"], [174, "class-signature"], [177, "class-signature"], [178, "class-signature"], [179, "class-signature"], [181, "class-signature"], [182, "class-signature"], [183, "class-signature"], [184, "class-signature"], [185, "class-signature"], [187, "class-signature"], [188, "class-signature"], [189, "class-signature"], [190, "class-signature"], [191, "class-signature"], [192, "class-signature"], [193, "class-signature"], [195, "class-signature"], [196, "class-signature"], [197, "class-signature"], [198, "class-signature"], [199, "class-signature"], [200, "class-signature"], [201, "class-signature"], [202, "class-signature"], [203, "class-signature"], [206, "class-signature"], [208, "class-signature"], [209, "class-signature"], [210, "class-signature"], [211, "class-signature"], [212, "class-signature"], [213, "class-signature"], [214, "class-signature"], [215, "class-signature"], [216, "class-signature"], [217, "class-signature"], [218, "class-signature"], [232, "class-signature"], [294, "class-signature"], [295, "class-signature"], [296, "class-signature"], [297, "class-signature"], [298, "class-signature"], [299, "class-signature"], [300, "class-signature"], [301, "class-signature"], [302, "class-signature"], [303, "class-signature"]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [8, "conclusion"], [205, "conclusion"], [220, "conclusion"], [221, "conclusion"], [222, "conclusion"], [231, "conclusion"], [295, "conclusion"], [305, "conclusion"]], "Containers": [[92, null]], "Conv-BatchNorm-ReLU": [[148, null]], "ConvNets": [[35, null], [82, "convnets"]], "Convolution Functions": [[105, null], [113, null]], "Convolution Layers": [[169, null], [176, null]], "Core Components": [[8, "core-components"]], "Create a Tensor from a list": [[279, null]], "Creating a Parameter": [[86, null]], "Creating a tensor with gradient tracking": [[232, null]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[305, "custom-pipelines"]], "Defining a Custom Optimizer": [[207, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[85, null]], "Defining a custom optimizer": [[206, null]], "DenseNet": [[23, null]], "Depthwise Separable Convolution": [[148, null]], "Description": [[52, "description"], [53, "description"], [54, "description"], [55, "description"], [56, "description"], [57, "description"], [69, "description"], [70, "description"], [71, "description"], [223, "description"]], "Dropout Functions": [[112, null], [113, null]], "Dropout Layers": [[175, null], [176, null]], "Example": [[3, null], [3, null], [3, null], [10, "example"], [11, "example"], [12, "example"], [14, "example"], [15, "example"], [16, "example"], [17, "example"], [18, "example"], [19, "example"], [20, "example"], [106, "example"], [205, null], [205, null], [205, null], [220, "example"], [222, "example"], [226, "example"], [227, "example"], [228, "example"], [229, "example"], [230, "example"], [231, null], [231, null], [231, null], [244, "example"], [245, "example"], [246, "example"], [247, "example"], [248, "example"], [249, "example"], [250, "example"], [251, "example"], [252, "example"], [254, "example"], [255, "example"], [256, "example"], [257, "example"], [258, "example"], [259, "example"], [260, "example"], [261, "example"], [263, "example"], [265, "example"], [267, "example"], [268, "example"], [269, "example"], [270, "example"], [271, "example"], [272, "example"], [273, "example"], [274, "example"], [275, "example"], [276, "example"], [277, "example"], [278, "example"], [280, "example"], [282, "example"], [286, "example"], [288, "example"], [289, "example"], [290, "example"], [292, "example"], [293, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[221, null]], "Example 2: Adding a new axis to a 2D tensor": [[221, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[221, null]], "Example Usage": [[8, "example-usage"], [29, "example-usage"], [30, "example-usage"], [31, "example-usage"], [33, "example-usage"], [34, "example-usage"], [36, "example-usage"], [37, "example-usage"], [38, "example-usage"], [39, "example-usage"], [64, "example-usage"], [65, "example-usage"], [66, "example-usage"], [67, "example-usage"], [72, "example-usage"], [139, "example-usage"], [294, "example-usage"], [295, "example-usage"], [305, "example-usage"]], "Example Use Cases": [[224, "example-use-cases"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [6, "examples"], [9, "examples"], [21, "examples"], [22, "examples"], [23, "examples"], [24, "examples"], [25, "examples"], [26, "examples"], [27, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [47, "examples"], [48, "examples"], [49, "examples"], [50, "examples"], [52, "examples"], [53, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [59, "examples"], [60, "examples"], [61, "examples"], [62, "examples"], [63, "examples"], [69, "examples"], [70, "examples"], [71, "examples"], [73, "examples"], [74, "examples"], [75, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [79, "examples"], [80, "examples"], [81, "examples"], [83, "examples"], [84, "examples"], [85, "examples"], [86, "examples"], [87, "examples"], [88, "examples"], [89, "examples"], [90, "examples"], [91, "examples"], [93, "examples"], [94, "examples"], [96, "examples"], [97, "examples"], [98, "examples"], [99, "examples"], [100, "examples"], [101, "examples"], [102, "examples"], [103, "examples"], [104, "examples"], [107, "examples"], [108, "examples"], [109, "examples"], [110, "examples"], [111, "examples"], [114, "examples"], [116, "examples"], [117, "examples"], [118, "examples"], [119, "examples"], [121, "examples"], [122, "examples"], [123, "examples"], [125, "examples"], [126, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [130, "examples"], [131, "examples"], [132, "examples"], [134, "examples"], [135, "examples"], [136, "examples"], [138, "examples"], [140, "examples"], [141, "examples"], [142, "examples"], [143, "examples"], [144, "examples"], [145, "examples"], [146, "examples"], [147, "examples"], [149, "examples"], [151, "examples"], [152, "examples"], [153, "examples"], [154, "examples"], [155, "examples"], [156, "examples"], [157, "examples"], [158, "examples"], [159, "examples"], [160, "examples"], [161, "examples"], [162, "examples"], [163, "examples"], [164, "examples"], [166, "examples"], [167, "examples"], [168, "examples"], [170, "examples"], [171, "examples"], [172, "examples"], [173, "examples"], [174, "examples"], [177, "examples"], [178, "examples"], [179, "examples"], [181, "examples"], [182, "examples"], [183, "examples"], [184, "examples"], [185, "examples"], [187, "examples"], [188, "examples"], [189, "examples"], [190, "examples"], [191, "examples"], [192, "examples"], [193, "examples"], [195, "examples"], [196, "examples"], [197, "examples"], [198, "examples"], [199, "examples"], [200, "examples"], [201, "examples"], [202, "examples"], [203, "examples"], [206, "examples"], [207, "examples"], [208, "examples"], [209, "examples"], [210, "examples"], [211, "examples"], [212, "examples"], [213, "examples"], [214, "examples"], [215, "examples"], [216, "examples"], [217, "examples"], [218, "examples"], [223, "examples"], [232, "examples"], [233, "examples"], [234, "examples"], [235, "examples"], [236, "examples"], [238, "examples"], [239, "examples"], [240, "examples"], [241, "examples"], [242, "examples"], [243, "examples"], [262, "examples"], [264, "examples"], [266, "examples"], [279, "examples"], [281, "examples"], [284, "examples"], [285, "examples"], [287, "examples"], [291, "examples"], [296, "examples"], [297, "examples"], [298, "examples"], [299, "examples"], [300, "examples"], [301, "examples"], [302, "examples"], [303, "examples"]], "FashionMNIST": [[5, null]], "Features": [[9, "features"]], "Forward Calculation": [[10, "forward-calculation"], [11, "forward-calculation"], [12, "forward-calculation"], [14, "forward-calculation"], [15, "forward-calculation"], [16, "forward-calculation"], [17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [20, "forward-calculation"], [40, "forward-calculation"], [51, "forward-calculation"], [58, "forward-calculation"], [68, "forward-calculation"], [87, "forward-calculation"], [88, "forward-calculation"], [89, "forward-calculation"], [90, "forward-calculation"], [91, "forward-calculation"], [93, "forward-calculation"], [94, "forward-calculation"], [96, "forward-calculation"], [97, "forward-calculation"], [98, "forward-calculation"], [99, "forward-calculation"], [100, "forward-calculation"], [101, "forward-calculation"], [106, "forward-calculation"], [114, "forward-calculation"], [116, "forward-calculation"], [127, "forward-calculation"], [128, "forward-calculation"], [129, "forward-calculation"], [138, "forward-calculation"], [140, "forward-calculation"], [141, "forward-calculation"], [142, "forward-calculation"], [143, "forward-calculation"], [144, "forward-calculation"], [145, "forward-calculation"], [146, "forward-calculation"], [147, "forward-calculation"], [151, "forward-calculation"], [152, "forward-calculation"], [155, "forward-calculation"], [156, "forward-calculation"], [157, "forward-calculation"], [158, "forward-calculation"], [159, "forward-calculation"], [160, "forward-calculation"], [161, "forward-calculation"], [162, "forward-calculation"], [163, "forward-calculation"], [164, "forward-calculation"], [166, "forward-calculation"], [167, "forward-calculation"], [168, "forward-calculation"], [170, "forward-calculation"], [171, "forward-calculation"], [172, "forward-calculation"], [173, "forward-calculation"], [174, "forward-calculation"], [177, "forward-calculation"], [178, "forward-calculation"], [179, "forward-calculation"], [181, "forward-calculation"], [182, "forward-calculation"], [183, "forward-calculation"], [184, "forward-calculation"], [185, "forward-calculation"], [187, "forward-calculation"], [188, "forward-calculation"], [189, "forward-calculation"], [190, "forward-calculation"], [191, "forward-calculation"], [192, "forward-calculation"], [193, "forward-calculation"], [195, "forward-calculation"], [196, "forward-calculation"], [197, "forward-calculation"], [198, "forward-calculation"], [199, "forward-calculation"], [200, "forward-calculation"], [201, "forward-calculation"], [202, "forward-calculation"], [203, "forward-calculation"], [233, "forward-calculation"], [234, "forward-calculation"], [235, "forward-calculation"], [236, "forward-calculation"], [237, "forward-calculation"], [238, "forward-calculation"], [239, "forward-calculation"], [240, "forward-calculation"], [241, "forward-calculation"], [242, "forward-calculation"], [243, "forward-calculation"], [254, "forward-calculation"], [255, "forward-calculation"], [256, "forward-calculation"], [257, "forward-calculation"], [258, "forward-calculation"], [259, "forward-calculation"], [260, "forward-calculation"], [261, "forward-calculation"], [262, "forward-calculation"], [263, "forward-calculation"], [264, "forward-calculation"], [265, "forward-calculation"], [266, "forward-calculation"], [267, "forward-calculation"], [268, "forward-calculation"], [269, "forward-calculation"], [270, "forward-calculation"], [271, "forward-calculation"], [272, "forward-calculation"], [273, "forward-calculation"], [274, "forward-calculation"], [275, "forward-calculation"], [276, "forward-calculation"], [277, "forward-calculation"], [278, "forward-calculation"], [280, "forward-calculation"], [282, "forward-calculation"], [284, "forward-calculation"], [285, "forward-calculation"], [286, "forward-calculation"], [287, "forward-calculation"], [288, "forward-calculation"], [289, "forward-calculation"], [290, "forward-calculation"], [291, "forward-calculation"], [292, "forward-calculation"], [293, "forward-calculation"], [296, "forward-calculation"], [297, "forward-calculation"], [298, "forward-calculation"], [299, "forward-calculation"], [300, "forward-calculation"], [301, "forward-calculation"], [302, "forward-calculation"], [303, "forward-calculation"]], "Forward Pass": [[78, "forward-pass"]], "Function Signature": [[10, "function-signature"], [11, "function-signature"], [12, "function-signature"], [14, "function-signature"], [15, "function-signature"], [16, "function-signature"], [17, "function-signature"], [18, "function-signature"], [19, "function-signature"], [20, "function-signature"], [22, "function-signature"], [24, "function-signature"], [25, "function-signature"], [26, "function-signature"], [27, "function-signature"], [29, "function-signature"], [30, "function-signature"], [31, "function-signature"], [33, "function-signature"], [34, "function-signature"], [37, "function-signature"], [38, "function-signature"], [39, "function-signature"], [41, "function-signature"], [42, "function-signature"], [43, "function-signature"], [44, "function-signature"], [45, "function-signature"], [46, "function-signature"], [47, "function-signature"], [48, "function-signature"], [49, "function-signature"], [50, "function-signature"], [52, "function-signature"], [53, "function-signature"], [54, "function-signature"], [55, "function-signature"], [56, "function-signature"], [57, "function-signature"], [59, "function-signature"], [60, "function-signature"], [61, "function-signature"], [62, "function-signature"], [63, "function-signature"], [64, "function-signature"], [65, "function-signature"], [66, "function-signature"], [67, "function-signature"], [69, "function-signature"], [70, "function-signature"], [71, "function-signature"], [72, "function-signature"], [74, "function-signature"], [75, "function-signature"], [76, "function-signature"], [77, "function-signature"], [79, "function-signature"], [81, "function-signature"], [83, "function-signature"], [93, "function-signature"], [94, "function-signature"], [96, "function-signature"], [97, "function-signature"], [98, "function-signature"], [99, "function-signature"], [100, "function-signature"], [101, "function-signature"], [102, "function-signature"], [103, "function-signature"], [104, "function-signature"], [106, "function-signature"], [107, "function-signature"], [108, "function-signature"], [109, "function-signature"], [110, "function-signature"], [111, "function-signature"], [114, "function-signature"], [116, "function-signature"], [117, "function-signature"], [118, "function-signature"], [119, "function-signature"], [121, "function-signature"], [122, "function-signature"], [123, "function-signature"], [125, "function-signature"], [126, "function-signature"], [127, "function-signature"], [128, "function-signature"], [129, "function-signature"], [130, "function-signature"], [131, "function-signature"], [132, "function-signature"], [134, "function-signature"], [135, "function-signature"], [136, "function-signature"], [138, "function-signature"], [139, "function-signature"], [149, "function-signature"], [151, "function-signature"], [152, "function-signature"], [153, "function-signature"], [154, "function-signature"], [155, "function-signature"], [156, "function-signature"], [220, "function-signature"], [222, "function-signature"], [223, "function-signature"], [226, "function-signature"], [227, "function-signature"], [228, "function-signature"], [229, "function-signature"], [230, "function-signature"], [233, "function-signature"], [234, "function-signature"], [235, "function-signature"], [236, "function-signature"], [237, "function-signature"], [238, "function-signature"], [239, "function-signature"], [240, "function-signature"], [241, "function-signature"], [242, "function-signature"], [243, "function-signature"], [244, "function-signature"], [245, "function-signature"], [246, "function-signature"], [247, "function-signature"], [248, "function-signature"], [249, "function-signature"], [250, "function-signature"], [251, "function-signature"], [252, "function-signature"], [254, "function-signature"], [255, "function-signature"], [256, "function-signature"], [257, "function-signature"], [258, "function-signature"], [259, "function-signature"], [260, "function-signature"], [261, "function-signature"], [262, "function-signature"], [263, "function-signature"], [264, "function-signature"], [265, "function-signature"], [266, "function-signature"], [267, "function-signature"], [268, "function-signature"], [269, "function-signature"], [270, "function-signature"], [271, "function-signature"], [272, "function-signature"], [273, "function-signature"], [274, "function-signature"], [275, "function-signature"], [276, "function-signature"], [277, "function-signature"], [278, "function-signature"], [279, "function-signature"], [280, "function-signature"], [281, "function-signature"], [282, "function-signature"], [284, "function-signature"], [285, "function-signature"], [286, "function-signature"], [287, "function-signature"], [288, "function-signature"], [289, "function-signature"], [290, "function-signature"], [291, "function-signature"], [292, "function-signature"], [293, "function-signature"]], "Fused Layers": [[148, null]], "Future Work": [[4, "future-work"]], "Getting Started": [[207, "getting-started"]], "How It Works": [[220, "how-it-works"], [222, "how-it-works"]], "Image Datasets": [[7, null]], "Image Transformations": [[304, null]], "Inception": [[28, null]], "InceptionResNet": [[32, null]], "Indexing and slicing": [[232, null]], "Inspecting Optimizer State": [[207, null], [208, null], [209, null], [210, null], [211, null], [212, null], [213, null], [214, null], [215, null], [216, null], [217, null], [218, null]], "Integration with lucid": [[3, "integration-with-lucid"], [205, "integration-with-lucid"], [231, "integration-with-lucid"], [305, "integration-with-lucid"]], "Iterating through a tensor": [[232, null]], "Key Components": [[3, "key-components"], [205, "key-components"]], "Key Features": [[4, "key-features"], [8, "key-features"], [64, "key-features"], [65, "key-features"], [66, "key-features"], [67, "key-features"], [72, "key-features"], [207, "key-features"], [231, "key-features"]], "Key Transformations": [[305, "key-transformations"]], "LeNet": [[36, null]], "Learn More": [[231, null]], "Limitations": [[8, "limitations"]], "Linear Algebra Operations": [[13, null]], "Linear Functions": [[113, null], [115, null]], "Linear Layers": [[176, null], [180, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[113, null], [120, null]], "Loss Layers": [[176, null], [186, null]], "Lucid": [[8, null]], "MNIST": [[6, null]], "Matrix Multiplication Rules": [[237, "matrix-multiplication-rules"]], "Metadata Captured": [[223, "metadata-captured"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [6, "methods"], [32, "methods"], [36, "methods"], [73, "methods"], [85, "methods"], [86, "methods"], [206, "methods"], [232, "methods"]], "Modules": [[176, null]], "Normalization Functions": [[113, null], [124, null]], "Normalization Layers": [[176, null], [194, null]], "Notes": [[8, "notes"]], "Optimizers": [[219, null]], "Organizing Models": [[205, "organizing-models"]], "Overview": [[3, "overview"], [4, "overview"], [8, "overview"], [28, "overview"], [29, "overview"], [30, "overview"], [31, "overview"], [32, "overview"], [33, "overview"], [34, "overview"], [36, "overview"], [37, "overview"], [38, "overview"], [39, "overview"], [41, "overview"], [42, "overview"], [43, "overview"], [44, "overview"], [45, "overview"], [46, "overview"], [47, "overview"], [48, "overview"], [59, "overview"], [60, "overview"], [61, "overview"], [62, "overview"], [63, "overview"], [205, "overview"], [207, "overview"], [231, "overview"], [305, "overview"]], "Parameters": [[1, "parameters"], [5, "parameters"], [6, "parameters"], [10, "parameters"], [11, "parameters"], [12, "parameters"], [14, "parameters"], [15, "parameters"], [16, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [20, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [36, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [83, "parameters"], [84, "parameters"], [86, "parameters"], [87, "parameters"], [88, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [93, "parameters"], [94, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [104, "parameters"], [106, "parameters"], [107, "parameters"], [108, "parameters"], [109, "parameters"], [110, "parameters"], [111, "parameters"], [114, "parameters"], [116, "parameters"], [117, "parameters"], [118, "parameters"], [119, "parameters"], [121, "parameters"], [122, "parameters"], [123, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [149, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [154, "parameters"], [155, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"], [159, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [163, "parameters"], [164, "parameters"], [166, "parameters"], [167, "parameters"], [168, "parameters"], [170, "parameters"], [171, "parameters"], [172, "parameters"], [173, "parameters"], [174, "parameters"], [177, "parameters"], [178, "parameters"], [179, "parameters"], [181, "parameters"], [182, "parameters"], [183, "parameters"], [184, "parameters"], [185, "parameters"], [187, "parameters"], [188, "parameters"], [189, "parameters"], [190, "parameters"], [191, "parameters"], [192, "parameters"], [193, "parameters"], [195, "parameters"], [196, "parameters"], [197, "parameters"], [198, "parameters"], [199, "parameters"], [200, "parameters"], [201, "parameters"], [202, "parameters"], [203, "parameters"], [208, "parameters"], [209, "parameters"], [210, "parameters"], [211, "parameters"], [212, "parameters"], [213, "parameters"], [214, "parameters"], [215, "parameters"], [216, "parameters"], [217, "parameters"], [218, "parameters"], [222, "parameters"], [223, "parameters"], [226, "parameters"], [227, "parameters"], [228, "parameters"], [229, "parameters"], [230, "parameters"], [232, "parameters"], [233, "parameters"], [234, "parameters"], [235, "parameters"], [236, "parameters"], [237, "parameters"], [238, "parameters"], [239, "parameters"], [240, "parameters"], [241, "parameters"], [242, "parameters"], [243, "parameters"], [244, "parameters"], [245, "parameters"], [246, "parameters"], [247, "parameters"], [248, "parameters"], [249, "parameters"], [250, "parameters"], [251, "parameters"], [252, "parameters"], [254, "parameters"], [255, "parameters"], [256, "parameters"], [257, "parameters"], [258, "parameters"], [259, "parameters"], [260, "parameters"], [261, "parameters"], [262, "parameters"], [263, "parameters"], [264, "parameters"], [265, "parameters"], [266, "parameters"], [267, "parameters"], [268, "parameters"], [269, "parameters"], [270, "parameters"], [271, "parameters"], [272, "parameters"], [273, "parameters"], [274, "parameters"], [275, "parameters"], [276, "parameters"], [277, "parameters"], [278, "parameters"], [279, "parameters"], [280, "parameters"], [281, "parameters"], [282, "parameters"], [284, "parameters"], [285, "parameters"], [286, "parameters"], [287, "parameters"], [288, "parameters"], [289, "parameters"], [290, "parameters"], [291, "parameters"], [292, "parameters"], [293, "parameters"], [294, "parameters"], [295, "parameters"], [296, "parameters"], [297, "parameters"], [298, "parameters"], [299, "parameters"], [300, "parameters"], [301, "parameters"], [302, "parameters"], [303, "parameters"]], "Performing backpropagation": [[232, null]], "Pooling Functions": [[113, null], [133, null]], "Pooling Layers": [[176, null], [204, null]], "Potential Pitfalls": [[220, "potential-pitfalls"], [222, "potential-pitfalls"]], "Properties": [[86, "properties"], [232, "properties"]], "Raises": [[10, "raises"], [11, "raises"], [12, "raises"], [14, "raises"], [15, "raises"], [16, "raises"], [17, "raises"], [18, "raises"], [19, "raises"], [20, "raises"]], "Random Number Generations": [[225, null]], "References": [[5, "references"], [6, "references"], [146, "references"], [207, "references"]], "ResNeXt": [[51, null]], "ResNet": [[40, null]], "Returns": [[10, "returns"], [11, "returns"], [12, "returns"], [14, "returns"], [15, "returns"], [16, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [20, "returns"], [22, "returns"], [24, "returns"], [25, "returns"], [26, "returns"], [27, "returns"], [29, "returns"], [30, "returns"], [31, "returns"], [33, "returns"], [34, "returns"], [37, "returns"], [38, "returns"], [39, "returns"], [41, "returns"], [42, "returns"], [43, "returns"], [44, "returns"], [45, "returns"], [46, "returns"], [47, "returns"], [48, "returns"], [49, "returns"], [50, "returns"], [52, "returns"], [53, "returns"], [54, "returns"], [55, "returns"], [56, "returns"], [57, "returns"], [59, "returns"], [60, "returns"], [61, "returns"], [62, "returns"], [63, "returns"], [64, "returns"], [65, "returns"], [66, "returns"], [67, "returns"], [69, "returns"], [70, "returns"], [71, "returns"], [72, "returns"], [74, "returns"], [75, "returns"], [76, "returns"], [77, "returns"], [79, "returns"], [81, "returns"], [83, "returns"], [93, "returns"], [94, "returns"], [96, "returns"], [97, "returns"], [98, "returns"], [99, "returns"], [100, "returns"], [101, "returns"], [102, "returns"], [103, "returns"], [104, "returns"], [106, "returns"], [107, "returns"], [108, "returns"], [109, "returns"], [110, "returns"], [111, "returns"], [114, "returns"], [116, "returns"], [117, "returns"], [118, "returns"], [119, "returns"], [121, "returns"], [122, "returns"], [123, "returns"], [125, "returns"], [126, "returns"], [127, "returns"], [128, "returns"], [129, "returns"], [130, "returns"], [131, "returns"], [132, "returns"], [134, "returns"], [135, "returns"], [136, "returns"], [138, "returns"], [139, "returns"], [147, "returns"], [149, "returns"], [151, "returns"], [152, "returns"], [153, "returns"], [154, "returns"], [155, "returns"], [156, "returns"], [220, "returns"], [222, "returns"], [226, "returns"], [227, "returns"], [228, "returns"], [229, "returns"], [230, "returns"], [233, "returns"], [234, "returns"], [235, "returns"], [236, "returns"], [237, "returns"], [238, "returns"], [239, "returns"], [240, "returns"], [241, "returns"], [242, "returns"], [243, "returns"], [244, "returns"], [245, "returns"], [246, "returns"], [247, "returns"], [248, "returns"], [249, "returns"], [250, "returns"], [251, "returns"], [252, "returns"], [254, "returns"], [255, "returns"], [256, "returns"], [257, "returns"], [258, "returns"], [259, "returns"], [260, "returns"], [261, "returns"], [262, "returns"], [263, "returns"], [264, "returns"], [265, "returns"], [266, "returns"], [267, "returns"], [268, "returns"], [269, "returns"], [270, "returns"], [271, "returns"], [272, "returns"], [273, "returns"], [274, "returns"], [275, "returns"], [276, "returns"], [277, "returns"], [278, "returns"], [279, "returns"], [280, "returns"], [281, "returns"], [282, "returns"], [284, "returns"], [285, "returns"], [286, "returns"], [287, "returns"], [288, "returns"], [289, "returns"], [290, "returns"], [291, "returns"], [292, "returns"], [293, "returns"]], "SENet": [[58, null]], "SKNet": [[68, null]], "See Also": [[207, "see-also"]], "Selective Kernel": [[148, null]], "Squeeze-and-Excitation": [[148, null]], "Summary Table": [[83, "summary-table"]], "Tensor Generating Functions": [[253, null]], "Tensor Operations": [[253, null]], "Tensor Utilites": [[283, null]], "Type Definitions": [[224, "type-definitions"]], "Unary Functions": [[253, null]], "Usage": [[4, "usage"], [84, "usage"], [139, "usage"], [220, "usage"], [221, "usage"], [222, "usage"], [284, "usage"], [294, "usage"], [295, "usage"], [305, "usage"]], "Use another Tensor as input": [[279, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using the ASGD Optimizer": [[208, null]], "Using the Adadelta Optimizer": [[209, null]], "Using the Adagrad Optimizer": [[210, null]], "Using the Adam Optimizer": [[211, null]], "Using the AdamW Optimizer": [[212, null]], "Using the Adamax Optimizer": [[213, null]], "Using the NAdam Optimizer": [[214, null]], "Using the RAdam Optimizer": [[215, null]], "Using the RMSprop Optimizer": [[216, null]], "Using the Rprop Optimizer": [[217, null]], "Using the SGD Optimizer": [[218, null]], "Utility Functions": [[113, null], [137, null]], "VGGNet": [[73, null]], "Weight Initializations": [[150, null]], "Why Use Type Aliases?": [[224, null]], "Xception": [[78, null]], "ZFNet": [[80, null]], "activation Functions": [[113, null]], "alexnet": [[22, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "densenet_121": [[24, null]], "densenet_169": [[25, null]], "densenet_201": [[26, null]], "densenet_264": [[27, null]], "inception_resnet_v1": [[33, null]], "inception_resnet_v2": [[34, null]], "inception_v1": [[29, null]], "inception_v3": [[30, null]], "inception_v4": [[31, null]], "lenet_1": [[37, null]], "lenet_4": [[38, null]], "lenet_5": [[39, null]], "lucid.Tensor": [[232, null]], "lucid.abs": [[254, null]], "lucid.add": [[233, null]], "lucid.arange": [[244, null]], "lucid.arccos": [[255, null]], "lucid.arcsin": [[256, null]], "lucid.arctan": [[257, null]], "lucid.clip": [[258, null]], "lucid.concatenate": [[280, null]], "lucid.cos": [[259, null]], "lucid.cosh": [[260, null]], "lucid.cube": [[261, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[245, null]], "lucid.div": [[234, null]], "lucid.dot": [[235, null]], "lucid.empty": [[246, null]], "lucid.empty_like": [[247, null]], "lucid.exp": [[262, null]], "lucid.eye": [[248, null]], "lucid.flatten": [[281, null]], "lucid.grad_enabled": [[220, null]], "lucid.hstack": [[282, null]], "lucid.inner": [[236, null]], "lucid.linalg": [[9, null]], "lucid.linalg.cholesky": [[10, null]], "lucid.linalg.det": [[11, null]], "lucid.linalg.eig": [[12, null]], "lucid.linalg.inv": [[14, null]], "lucid.linalg.matrix_power": [[15, null]], "lucid.linalg.norm": [[16, null]], "lucid.linalg.pinv": [[17, null]], "lucid.linalg.qr": [[18, null]], "lucid.linalg.solve": [[19, null]], "lucid.linalg.svd": [[20, null]], "lucid.log": [[263, null]], "lucid.matmul": [[237, null]], "lucid.max": [[264, null]], "lucid.maximum": [[238, null]], "lucid.mean": [[265, null]], "lucid.meshgrid": [[284, null]], "lucid.min": [[266, null]], "lucid.minimum": [[239, null]], "lucid.models": [[82, null]], "lucid.mul": [[240, null]], "lucid.newaxis": [[221, null]], "lucid.nn": [[205, null]], "lucid.nn.functional": [[113, null]], "lucid.no_grad": [[222, null]], "lucid.ones": [[249, null]], "lucid.ones_like": [[250, null]], "lucid.optim": [[207, null]], "lucid.outer": [[241, null]], "lucid.pad": [[285, null]], "lucid.power": [[242, null]], "lucid.random": [[231, null]], "lucid.random.rand": [[226, null]], "lucid.random.randint": [[227, null]], "lucid.random.randn": [[228, null]], "lucid.random.seed": [[229, null]], "lucid.random.uniform": [[230, null]], "lucid.ravel": [[286, null]], "lucid.reciprocal": [[267, null]], "lucid.register_model": [[223, null]], "lucid.repeat": [[287, null]], "lucid.reshape": [[288, null]], "lucid.sign": [[268, null]], "lucid.sin": [[269, null]], "lucid.sinh": [[270, null]], "lucid.sqrt": [[271, null]], "lucid.square": [[272, null]], "lucid.squeeze": [[289, null]], "lucid.stack": [[290, null]], "lucid.sub": [[243, null]], "lucid.sum": [[273, null]], "lucid.tan": [[274, null]], "lucid.tanh": [[275, null]], "lucid.tensor": [[279, null]], "lucid.tile": [[291, null]], "lucid.trace": [[276, null]], "lucid.transforms": [[305, null]], "lucid.transpose": [[277, null]], "lucid.types": [[224, null]], "lucid.unsqueeze": [[292, null]], "lucid.var": [[278, null]], "lucid.vstack": [[293, null]], "lucid.zeros": [[251, null]], "lucid.zeros_like": [[252, null]], "models.summarize": [[83, null]], "nn.AdaptiveAvgPool1d": [[195, null]], "nn.AdaptiveAvgPool2d": [[196, null]], "nn.AdaptiveAvgPool3d": [[197, null]], "nn.AlphaDropout": [[170, null]], "nn.AvgPool1d": [[198, null]], "nn.AvgPool2d": [[199, null]], "nn.AvgPool3d": [[200, null]], "nn.BCELoss": [[181, null]], "nn.BatchNorm1d": [[187, null]], "nn.BatchNorm2d": [[188, null]], "nn.BatchNorm3d": [[189, null]], "nn.Bilinear": [[177, null]], "nn.Buffer": [[84, null]], "nn.Conv1d": [[166, null]], "nn.Conv2d": [[167, null]], "nn.Conv3d": [[168, null]], "nn.ConvBNReLU1d": [[140, null]], "nn.ConvBNReLU2d": [[141, null]], "nn.ConvBNReLU3d": [[142, null]], "nn.CrossEntropyLoss": [[182, null]], "nn.DepthSeparableConv1d": [[143, null]], "nn.DepthSeparableConv2d": [[144, null]], "nn.DepthSeparableConv3d": [[145, null]], "nn.Dropout": [[171, null]], "nn.Dropout1d": [[172, null]], "nn.Dropout2d": [[173, null]], "nn.Dropout3d": [[174, null]], "nn.ELU": [[157, null]], "nn.GELU": [[158, null]], "nn.HuberLoss": [[183, null]], "nn.Identity": [[178, null]], "nn.InstanceNorm1d": [[190, null]], "nn.InstanceNorm2d": [[191, null]], "nn.InstanceNorm3d": [[192, null]], "nn.LayerNorm": [[193, null]], "nn.LeakyReLU": [[159, null]], "nn.Linear": [[179, null]], "nn.MSELoss": [[184, null]], "nn.MaxPool1d": [[201, null]], "nn.MaxPool2d": [[202, null]], "nn.MaxPool3d": [[203, null]], "nn.Module": [[85, null]], "nn.ModuleDict": [[87, null]], "nn.ModuleList": [[88, null]], "nn.NLLLoss": [[185, null]], "nn.Parameter": [[86, null]], "nn.ParameterDict": [[89, null]], "nn.ParameterList": [[90, null]], "nn.ReLU": [[160, null]], "nn.SELU": [[161, null]], "nn.SEModule": [[146, null]], "nn.SelectiveKernel": [[147, null]], "nn.Sequential": [[91, null]], "nn.Sigmoid": [[162, null]], "nn.Softmax": [[163, null]], "nn.Tanh": [[164, null]], "nn.functional.adaptive_avg_pool1d": [[127, null]], "nn.functional.adaptive_avg_pool2d": [[128, null]], "nn.functional.adaptive_avg_pool3d": [[129, null]], "nn.functional.alpha_dropout": [[107, null]], "nn.functional.avg_pool1d": [[130, null]], "nn.functional.avg_pool2d": [[131, null]], "nn.functional.avg_pool3d": [[132, null]], "nn.functional.batch_norm": [[123, null]], "nn.functional.bilinear": [[114, null]], "nn.functional.binary_cross_entropy": [[117, null]], "nn.functional.conv1d": [[102, null]], "nn.functional.conv2d": [[103, null]], "nn.functional.conv3d": [[104, null]], "nn.functional.cross_entropy": [[118, null]], "nn.functional.dropout": [[108, null]], "nn.functional.dropout1d": [[109, null]], "nn.functional.dropout2d": [[110, null]], "nn.functional.dropout3d": [[111, null]], "nn.functional.elu": [[93, null]], "nn.functional.gelu": [[94, null]], "nn.functional.huber_loss": [[119, null]], "nn.functional.instance_norm": [[125, null]], "nn.functional.interpolate": [[138, null]], "nn.functional.layer_norm": [[126, null]], "nn.functional.leaky_relu": [[96, null]], "nn.functional.linear": [[116, null]], "nn.functional.max_pool1d": [[134, null]], "nn.functional.max_pool2d": [[135, null]], "nn.functional.max_pool3d": [[136, null]], "nn.functional.mse_loss": [[121, null]], "nn.functional.nll_loss": [[122, null]], "nn.functional.relu": [[97, null]], "nn.functional.rotate": [[139, null]], "nn.functional.selu": [[98, null]], "nn.functional.sigmoid": [[99, null]], "nn.functional.softmax": [[100, null]], "nn.functional.tanh": [[101, null]], "nn.functional.unfold": [[106, null]], "nn.init.constant": [[149, null]], "nn.init.kaiming_normal": [[151, null]], "nn.init.kaiming_uniform": [[152, null]], "nn.init.normal": [[153, null]], "nn.init.uniform": [[154, null]], "nn.init.xavier_normal": [[155, null]], "nn.init.xavier_uniform": [[156, null]], "optim.ASGD": [[208, null]], "optim.Adadelta": [[209, null]], "optim.Adagrad": [[210, null]], "optim.Adam": [[211, null]], "optim.AdamW": [[212, null]], "optim.Adamax": [[213, null]], "optim.NAdam": [[214, null]], "optim.Optimizer": [[206, null]], "optim.RAdam": [[215, null]], "optim.RMSprop": [[216, null]], "optim.Rprop": [[217, null]], "optim.SGD": [[218, null]], "resnet_1001": [[41, null]], "resnet_101": [[42, null]], "resnet_152": [[43, null]], "resnet_18": [[44, null]], "resnet_200": [[45, null]], "resnet_269": [[46, null]], "resnet_34": [[47, null]], "resnet_50": [[48, null]], "resnext_101_32x16d": [[52, null]], "resnext_101_32x32d": [[53, null]], "resnext_101_32x4d": [[54, null]], "resnext_101_32x8d": [[55, null]], "resnext_101_64x4d": [[56, null]], "resnext_50_32x4d": [[57, null]], "se_resnet_101": [[59, null]], "se_resnet_152": [[60, null]], "se_resnet_18": [[61, null]], "se_resnet_34": [[62, null]], "se_resnet_50": [[63, null]], "se_resnext_101_32x4d": [[64, null]], "se_resnext_101_32x8d": [[65, null]], "se_resnext_101_64x4d": [[66, null]], "se_resnext_50_32x4d": [[67, null]], "sk_resnet_18": [[69, null]], "sk_resnet_34": [[70, null]], "sk_resnet_50": [[71, null]], "sk_resnext_50_32x4d": [[72, null]], "transforms.CenterCrop": [[296, null]], "transforms.Compose": [[294, null]], "transforms.Normalize": [[297, null]], "transforms.RandomCrop": [[298, null]], "transforms.RandomGrayscale": [[299, null]], "transforms.RandomHorizontalFlip": [[300, null]], "transforms.RandomRotation": [[301, null]], "transforms.RandomVerticalFlip": [[302, null]], "transforms.Resize": [[303, null]], "transforms.ToTensor": [[295, null]], "vggnet_11": [[74, null]], "vggnet_13": [[75, null]], "vggnet_16": [[76, null]], "vggnet_19": [[77, null]], "wide_resnet_101": [[49, null]], "wide_resnet_50": [[50, null]], "xception": [[79, null]], "zfnet": [[81, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/FashionMNIST", "datasets/image/MNIST", "datasets/image/index", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/conv/alex/AlexNet", "models/conv/alex/alexnet", "models/conv/dense/DenseNet", "models/conv/dense/densenet_121", "models/conv/dense/densenet_169", "models/conv/dense/densenet_201", "models/conv/dense/densenet_264", "models/conv/inception/Inception", "models/conv/inception/inception_v1", "models/conv/inception/inception_v3", "models/conv/inception/inception_v4", "models/conv/inception_res/InceptionResNet", "models/conv/inception_res/inception_resnet_v1", "models/conv/inception_res/inception_resnet_v2", "models/conv/index", "models/conv/lenet/LeNet", "models/conv/lenet/lenet_1", "models/conv/lenet/lenet_4", "models/conv/lenet/lenet_5", "models/conv/resnet/ResNet", "models/conv/resnet/resnet_1001", "models/conv/resnet/resnet_101", "models/conv/resnet/resnet_152", "models/conv/resnet/resnet_18", "models/conv/resnet/resnet_200", "models/conv/resnet/resnet_269", "models/conv/resnet/resnet_34", "models/conv/resnet/resnet_50", "models/conv/resnet/wide_resnet_101", "models/conv/resnet/wide_resnet_50", "models/conv/resnext/ResNeXt", "models/conv/resnext/resnext_101_32x16d", "models/conv/resnext/resnext_101_32x32d", "models/conv/resnext/resnext_101_32x4d", "models/conv/resnext/resnext_101_32x8d", "models/conv/resnext/resnext_101_64x4d", "models/conv/resnext/resnext_50_32x4d", "models/conv/senet/SENet", "models/conv/senet/se_resnet_101", "models/conv/senet/se_resnet_152", "models/conv/senet/se_resnet_18", "models/conv/senet/se_resnet_34", "models/conv/senet/se_resnet_50", "models/conv/senet/se_resnext_101_32x4d", "models/conv/senet/se_resnext_101_32x8d", "models/conv/senet/se_resnext_101_64x4d", "models/conv/senet/se_resnext_50_32x4d", "models/conv/sknet/SKNet", "models/conv/sknet/sk_resnet_18", "models/conv/sknet/sk_resnet_34", "models/conv/sknet/sk_resnet_50", "models/conv/sknet/sk_resnext_50_32x4d", "models/conv/vgg/VGGNet", "models/conv/vgg/vggnet_11", "models/conv/vgg/vggnet_13", "models/conv/vgg/vggnet_16", "models/conv/vgg/vggnet_19", "models/conv/xception/Xception", "models/conv/xception/xception", "models/conv/zfnet/ZFNet", "models/conv/zfnet/zfnet", "models/models", "models/summarize", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/fused/ConvBNReLU1d", "nn/fused/ConvBNReLU2d", "nn/fused/ConvBNReLU3d", "nn/fused/DepthSeparableConv1d", "nn/fused/DepthSeparableConv2d", "nn/fused/DepthSeparableConv3d", "nn/fused/SEModule", "nn/fused/SelectiveKernel", "nn/fused/index", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/nn", "optim/Optimizer", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "others/types", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/meshgrid", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/FashionMNIST.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/conv/alex/AlexNet.rst", "models/conv/alex/alexnet.rst", "models/conv/dense/DenseNet.rst", "models/conv/dense/densenet_121.rst", "models/conv/dense/densenet_169.rst", "models/conv/dense/densenet_201.rst", "models/conv/dense/densenet_264.rst", "models/conv/inception/Inception.rst", "models/conv/inception/inception_v1.rst", "models/conv/inception/inception_v3.rst", "models/conv/inception/inception_v4.rst", "models/conv/inception_res/InceptionResNet.rst", "models/conv/inception_res/inception_resnet_v1.rst", "models/conv/inception_res/inception_resnet_v2.rst", "models/conv/index.rst", "models/conv/lenet/LeNet.rst", "models/conv/lenet/lenet_1.rst", "models/conv/lenet/lenet_4.rst", "models/conv/lenet/lenet_5.rst", "models/conv/resnet/ResNet.rst", "models/conv/resnet/resnet_1001.rst", "models/conv/resnet/resnet_101.rst", "models/conv/resnet/resnet_152.rst", "models/conv/resnet/resnet_18.rst", "models/conv/resnet/resnet_200.rst", "models/conv/resnet/resnet_269.rst", "models/conv/resnet/resnet_34.rst", "models/conv/resnet/resnet_50.rst", "models/conv/resnet/wide_resnet_101.rst", "models/conv/resnet/wide_resnet_50.rst", "models/conv/resnext/ResNeXt.rst", "models/conv/resnext/resnext_101_32x16d.rst", "models/conv/resnext/resnext_101_32x32d.rst", "models/conv/resnext/resnext_101_32x4d.rst", "models/conv/resnext/resnext_101_32x8d.rst", "models/conv/resnext/resnext_101_64x4d.rst", "models/conv/resnext/resnext_50_32x4d.rst", "models/conv/senet/SENet.rst", "models/conv/senet/se_resnet_101.rst", "models/conv/senet/se_resnet_152.rst", "models/conv/senet/se_resnet_18.rst", "models/conv/senet/se_resnet_34.rst", "models/conv/senet/se_resnet_50.rst", "models/conv/senet/se_resnext_101_32x4d.rst", "models/conv/senet/se_resnext_101_32x8d.rst", "models/conv/senet/se_resnext_101_64x4d.rst", "models/conv/senet/se_resnext_50_32x4d.rst", "models/conv/sknet/SKNet.rst", "models/conv/sknet/sk_resnet_18.rst", "models/conv/sknet/sk_resnet_34.rst", "models/conv/sknet/sk_resnet_50.rst", "models/conv/sknet/sk_resnext_50_32x4d.rst", "models/conv/vgg/VGGNet.rst", "models/conv/vgg/vggnet_11.rst", "models/conv/vgg/vggnet_13.rst", "models/conv/vgg/vggnet_16.rst", "models/conv/vgg/vggnet_19.rst", "models/conv/xception/Xception.rst", "models/conv/xception/xception.rst", "models/conv/zfnet/ZFNet.rst", "models/conv/zfnet/zfnet.rst", "models/models.rst", "models/summarize.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/fused/ConvBNReLU1d.rst", "nn/fused/ConvBNReLU2d.rst", "nn/fused/ConvBNReLU3d.rst", "nn/fused/DepthSeparableConv1d.rst", "nn/fused/DepthSeparableConv2d.rst", "nn/fused/DepthSeparableConv3d.rst", "nn/fused/SEModule.rst", "nn/fused/SelectiveKernel.rst", "nn/fused/index.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "others/types.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"abs() (in module lucid)": [[254, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[209, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[210, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[211, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[213, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[212, "lucid.optim.AdamW", false]], "adaptive_avg_pool1d() (in module lucid.nn.functional)": [[127, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[128, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[129, "lucid.nn.functional.adaptive_avg_pool3d", false]], "adaptiveavgpool1d (class in lucid.nn)": [[195, "lucid.nn.AdaptiveAvgPool1d", false]], "adaptiveavgpool2d (class in lucid.nn)": [[196, "lucid.nn.AdaptiveAvgPool2d", false]], "adaptiveavgpool3d (class in lucid.nn)": [[197, "lucid.nn.AdaptiveAvgPool3d", false]], "add() (in module lucid)": [[233, "lucid.add", false]], "alexnet (class in lucid.models)": [[21, "lucid.models.AlexNet", false]], "alexnet() (in module lucid.models)": [[22, "lucid.models.alexnet", false]], "alpha_dropout() (in module lucid.nn.functional)": [[107, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[170, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[244, "lucid.arange", false]], "arccos() (in module lucid)": [[255, "lucid.arccos", false]], "arcsin() (in module lucid)": [[256, "lucid.arcsin", false]], "arctan() (in module lucid)": [[257, "lucid.arctan", false]], "asgd (class in lucid.optim)": [[208, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[130, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[131, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[132, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[198, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[199, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[200, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[123, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[187, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[188, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[189, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[181, "lucid.nn.BCELoss", false]], "bilinear (class in lucid.nn)": [[177, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[114, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[117, "lucid.nn.functional.binary_cross_entropy", false]], "buffer (class in lucid.nn)": [[84, "lucid.nn.Buffer", false]], "centercrop (class in lucid.transforms)": [[296, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[10, "lucid.linalg.cholesky", false]], "clip() (in module lucid)": [[258, "lucid.clip", false]], "compose (class in lucid.transforms)": [[294, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[280, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[149, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[166, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[102, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[167, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[103, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[168, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[104, "lucid.nn.functional.conv3d", false]], "convbnrelu1d (class in lucid.nn)": [[140, "lucid.nn.ConvBNReLU1d", false]], "convbnrelu2d (class in lucid.nn)": [[141, "lucid.nn.ConvBNReLU2d", false]], "convbnrelu3d (class in lucid.nn)": [[142, "lucid.nn.ConvBNReLU3d", false]], "cos() (in module lucid)": [[259, "lucid.cos", false]], "cosh() (in module lucid)": [[260, "lucid.cosh", false]], "cross_entropy() (in module lucid.nn.functional)": [[118, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[182, "lucid.nn.CrossEntropyLoss", false]], "cube() (in module lucid)": [[261, "lucid.cube", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "densenet (class in lucid.models)": [[23, "lucid.models.DenseNet", false]], "densenet_121() (in module lucid.models)": [[24, "lucid.models.densenet_121", false]], "densenet_169() (in module lucid.models)": [[25, "lucid.models.densenet_169", false]], "densenet_201() (in module lucid.models)": [[26, "lucid.models.densenet_201", false]], "densenet_264() (in module lucid.models)": [[27, "lucid.models.densenet_264", false]], "depthseparableconv1d (class in lucid.nn)": [[143, "lucid.nn.DepthSeparableConv1d", false]], "depthseparableconv2d (class in lucid.nn)": [[144, "lucid.nn.DepthSeparableConv2d", false]], "depthseparableconv3d (class in lucid.nn)": [[145, "lucid.nn.DepthSeparableConv3d", false]], "det() (in module lucid.linalg)": [[11, "lucid.linalg.det", false]], "diag() (in module lucid)": [[245, "lucid.diag", false]], "div() (in module lucid)": [[234, "lucid.div", false]], "dot() (in module lucid)": [[235, "lucid.dot", false]], "dropout (class in lucid.nn)": [[171, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[108, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[172, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[109, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[173, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[110, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[174, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[111, "lucid.nn.functional.dropout3d", false]], "eig() (in module lucid.linalg)": [[12, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[157, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[93, "lucid.nn.functional.elu", false]], "empty() (in module lucid)": [[246, "lucid.empty", false]], "empty_like() (in module lucid)": [[247, "lucid.empty_like", false]], "exp() (in module lucid)": [[262, "lucid.exp", false]], "eye() (in module lucid)": [[248, "lucid.eye", false]], "fashionmnist (class in lucid.datasets)": [[5, "lucid.datasets.FashionMNIST", false]], "flatten() (in module lucid)": [[281, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[158, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[94, "lucid.nn.functional.gelu", false]], "grad_enabled() (in module lucid)": [[220, "lucid.grad_enabled", false]], "hstack() (in module lucid)": [[282, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[119, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[183, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[178, "lucid.nn.Identity", false]], "inception (class in lucid.models)": [[28, "lucid.models.Inception", false]], "inception_resnet_v1() (in module lucid.models)": [[33, "lucid.models.inception_resnet_v1", false]], "inception_resnet_v2() (in module lucid.models)": [[34, "lucid.models.inception_resnet_v2", false]], "inception_v1() (in module lucid.models)": [[29, "lucid.models.inception_v1", false]], "inception_v3() (in module lucid.models)": [[30, "lucid.models.inception_v3", false]], "inception_v4() (in module lucid.models)": [[31, "lucid.models.inception_v4", false]], "inceptionresnet (class in lucid.models)": [[32, "lucid.models.InceptionResNet", false]], "inner() (in module lucid)": [[236, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[125, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[190, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[191, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[192, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[138, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[14, "lucid.linalg.inv", false]], "kaiming_normal() (in module lucid.nn.init)": [[151, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[152, "lucid.nn.init.kaiming_uniform", false]], "layer_norm() (in module lucid.nn.functional)": [[126, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[193, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[96, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[159, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[36, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[37, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[38, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[39, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[179, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[116, "lucid.nn.functional.linear", false]], "log() (in module lucid)": [[263, "lucid.log", false]], "lucid": [[8, "module-lucid", false]], "matmul() (in module lucid)": [[237, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[15, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[264, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[134, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[135, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[136, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[238, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[201, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[202, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[203, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[265, "lucid.mean", false]], "meshgrid() (in module lucid)": [[284, "lucid.meshgrid", false]], "min() (in module lucid)": [[266, "lucid.min", false]], "minimum() (in module lucid)": [[239, "lucid.minimum", false]], "mnist (class in lucid.datasets)": [[6, "lucid.datasets.MNIST", false]], "module": [[8, "module-lucid", false]], "module (class in lucid.nn)": [[85, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[87, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[88, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[121, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[184, "lucid.nn.MSELoss", false]], "mul() (in module lucid)": [[240, "lucid.mul", false]], "nadam (class in lucid.optim)": [[214, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[122, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[185, "lucid.nn.NLLLoss", false]], "no_grad() (in module lucid)": [[222, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[16, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[153, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[297, "lucid.transforms.Normalize", false]], "ones() (in module lucid)": [[249, "lucid.ones", false]], "ones_like() (in module lucid)": [[250, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[206, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[241, "lucid.outer", false]], "pad() (in module lucid)": [[285, "lucid.pad", false]], "parameter (class in lucid.nn)": [[86, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[89, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[90, "lucid.nn.ParameterList", false]], "pinv() (in module lucid.linalg)": [[17, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[242, "lucid.power", false]], "qr() (in module lucid.linalg)": [[18, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[215, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[226, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[227, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[228, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[298, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[299, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[300, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[301, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[302, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[286, "lucid.ravel", false]], "reciprocal() (in module lucid)": [[267, "lucid.reciprocal", false]], "register_model() (in module lucid)": [[223, "lucid.register_model", false]], "relu (class in lucid.nn)": [[160, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[97, "lucid.nn.functional.relu", false]], "repeat() (in module lucid)": [[287, "lucid.repeat", false]], "reshape() (in module lucid)": [[288, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[303, "lucid.transforms.Resize", false]], "resnet (class in lucid.models)": [[40, "lucid.models.ResNet", false]], "resnet_1001() (in module lucid.models)": [[41, "lucid.models.resnet_1001", false]], "resnet_101() (in module lucid.models)": [[42, "lucid.models.resnet_101", false]], "resnet_152() (in module lucid.models)": [[43, "lucid.models.resnet_152", false]], "resnet_18() (in module lucid.models)": [[44, "lucid.models.resnet_18", false]], "resnet_200() (in module lucid.models)": [[45, "lucid.models.resnet_200", false]], "resnet_269() (in module lucid.models)": [[46, "lucid.models.resnet_269", false]], "resnet_34() (in module lucid.models)": [[47, "lucid.models.resnet_34", false]], "resnet_50() (in module lucid.models)": [[48, "lucid.models.resnet_50", false]], "resnext (class in lucid.models)": [[51, "lucid.models.ResNeXt", false]], "resnext_101_32x16d() (in module lucid.models)": [[52, "lucid.models.resnext_101_32x16d", false]], "resnext_101_32x32d() (in module lucid.models)": [[53, "lucid.models.resnext_101_32x32d", false]], "resnext_101_32x4d() (in module lucid.models)": [[54, "lucid.models.resnext_101_32x4d", false]], "resnext_101_32x8d() (in module lucid.models)": [[55, "lucid.models.resnext_101_32x8d", false]], "resnext_101_64x4d() (in module lucid.models)": [[56, "lucid.models.resnext_101_64x4d", false]], "resnext_50_32x4d() (in module lucid.models)": [[57, "lucid.models.resnext_50_32x4d", false]], "rmsprop (class in lucid.optim)": [[216, "lucid.optim.RMSprop", false]], "rotate() (in module lucid.nn.functional)": [[139, "lucid.nn.functional.rotate", false]], "rprop (class in lucid.optim)": [[217, "lucid.optim.Rprop", false]], "se_resnet_101() (in module lucid.models)": [[59, "lucid.models.se_resnet_101", false]], "se_resnet_152() (in module lucid.models)": [[60, "lucid.models.se_resnet_152", false]], "se_resnet_18() (in module lucid.models)": [[61, "lucid.models.se_resnet_18", false]], "se_resnet_34() (in module lucid.models)": [[62, "lucid.models.se_resnet_34", false]], "se_resnet_50() (in module lucid.models)": [[63, "lucid.models.se_resnet_50", false]], "se_resnext_101_32x4d() (in module lucid.models)": [[64, "lucid.models.se_resnext_101_32x4d", false]], "se_resnext_101_32x8d() (in module lucid.models)": [[65, "lucid.models.se_resnext_101_32x8d", false]], "se_resnext_101_64x4d() (in module lucid.models)": [[66, "lucid.models.se_resnext_101_64x4d", false]], "se_resnext_50_32x4d() (in module lucid.models)": [[67, "lucid.models.se_resnext_50_32x4d", false]], "seed() (in module lucid.random)": [[229, "lucid.random.seed", false]], "selectivekernel (class in lucid.nn)": [[147, "lucid.nn.SelectiveKernel", false]], "selu (class in lucid.nn)": [[161, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[98, "lucid.nn.functional.selu", false]], "semodule (class in lucid.nn)": [[146, "lucid.nn.SEModule", false]], "senet (class in lucid.models)": [[58, "lucid.models.SENet", false]], "sequential (class in lucid.nn)": [[91, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[218, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[162, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[99, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[268, "lucid.sign", false]], "sin() (in module lucid)": [[269, "lucid.sin", false]], "sinh() (in module lucid)": [[270, "lucid.sinh", false]], "sk_resnet_18() (in module lucid.models)": [[69, "lucid.models.sk_resnet_18", false]], "sk_resnet_34() (in module lucid.models)": [[70, "lucid.models.sk_resnet_34", false]], "sk_resnet_50() (in module lucid.models)": [[71, "lucid.models.sk_resnet_50", false]], "sk_resnext_50_32x4d() (in module lucid.models)": [[72, "lucid.models.sk_resnext_50_32x4d", false]], "sknet (class in lucid.models)": [[68, "lucid.models.SKNet", false]], "softmax (class in lucid.nn)": [[163, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[100, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[19, "lucid.linalg.solve", false]], "sqrt() (in module lucid)": [[271, "lucid.sqrt", false]], "square() (in module lucid)": [[272, "lucid.square", false]], "squeeze() (in module lucid)": [[289, "lucid.squeeze", false]], "stack() (in module lucid)": [[290, "lucid.stack", false]], "sub() (in module lucid)": [[243, "lucid.sub", false]], "sum() (in module lucid)": [[273, "lucid.sum", false]], "summarize() (in module lucid.models)": [[83, "lucid.models.summarize", false]], "svd() (in module lucid.linalg)": [[20, "lucid.linalg.svd", false]], "tan() (in module lucid)": [[274, "lucid.tan", false]], "tanh (class in lucid.nn)": [[164, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[275, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[101, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[232, "lucid.Tensor", false]], "tensor() (in module lucid)": [[279, "lucid.tensor", false]], "tile() (in module lucid)": [[291, "lucid.tile", false]], "totensor (class in lucid.transforms)": [[295, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[276, "lucid.trace", false]], "transpose() (in module lucid)": [[277, "lucid.transpose", false]], "unfold() (in module lucid.nn.functional)": [[106, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[154, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[230, "lucid.random.uniform", false]], "unsqueeze() (in module lucid)": [[292, "lucid.unsqueeze", false]], "var() (in module lucid)": [[278, "lucid.var", false]], "vggnet (class in lucid.models)": [[73, "lucid.models.VGGNet", false]], "vggnet_11() (in module lucid.models)": [[74, "lucid.models.vggnet_11", false]], "vggnet_13() (in module lucid.models)": [[75, "lucid.models.vggnet_13", false]], "vggnet_16() (in module lucid.models)": [[76, "lucid.models.vggnet_16", false]], "vggnet_19() (in module lucid.models)": [[77, "lucid.models.vggnet_19", false]], "vstack() (in module lucid)": [[293, "lucid.vstack", false]], "wide_resnet_101() (in module lucid.models)": [[49, "lucid.models.wide_resnet_101", false]], "wide_resnet_50() (in module lucid.models)": [[50, "lucid.models.wide_resnet_50", false]], "xavier_normal() (in module lucid.nn.init)": [[155, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[156, "lucid.nn.init.xavier_uniform", false]], "xception (class in lucid.models)": [[78, "lucid.models.Xception", false]], "xception() (in module lucid.models)": [[79, "lucid.models.xception", false]], "zeros() (in module lucid)": [[251, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[252, "lucid.zeros_like", false]], "zfnet (class in lucid.models)": [[80, "lucid.models.ZFNet", false]], "zfnet() (in module lucid.models)": [[81, "lucid.models.zfnet", false]]}, "objects": {"": [[8, 0, 0, "-", "lucid"]], "lucid": [[232, 1, 1, "", "Tensor"], [254, 2, 1, "", "abs"], [233, 2, 1, "", "add"], [244, 2, 1, "", "arange"], [255, 2, 1, "", "arccos"], [256, 2, 1, "", "arcsin"], [257, 2, 1, "", "arctan"], [258, 2, 1, "", "clip"], [280, 2, 1, "", "concatenate"], [259, 2, 1, "", "cos"], [260, 2, 1, "", "cosh"], [261, 2, 1, "", "cube"], [245, 2, 1, "", "diag"], [234, 2, 1, "", "div"], [235, 2, 1, "", "dot"], [246, 2, 1, "", "empty"], [247, 2, 1, "", "empty_like"], [262, 2, 1, "", "exp"], [248, 2, 1, "", "eye"], [281, 2, 1, "", "flatten"], [220, 2, 1, "", "grad_enabled"], [282, 2, 1, "", "hstack"], [236, 2, 1, "", "inner"], [263, 2, 1, "", "log"], [237, 2, 1, "", "matmul"], [264, 2, 1, "", "max"], [238, 2, 1, "", "maximum"], [265, 2, 1, "", "mean"], [284, 2, 1, "", "meshgrid"], [266, 2, 1, "", "min"], [239, 2, 1, "", "minimum"], [240, 2, 1, "", "mul"], [222, 2, 1, "", "no_grad"], [249, 2, 1, "", "ones"], [250, 2, 1, "", "ones_like"], [241, 2, 1, "", "outer"], [285, 2, 1, "", "pad"], [242, 2, 1, "", "power"], [286, 2, 1, "", "ravel"], [267, 2, 1, "", "reciprocal"], [223, 2, 1, "", "register_model"], [287, 2, 1, "", "repeat"], [288, 2, 1, "", "reshape"], [268, 2, 1, "", "sign"], [269, 2, 1, "", "sin"], [270, 2, 1, "", "sinh"], [271, 2, 1, "", "sqrt"], [272, 2, 1, "", "square"], [289, 2, 1, "", "squeeze"], [290, 2, 1, "", "stack"], [243, 2, 1, "", "sub"], [273, 2, 1, "", "sum"], [274, 2, 1, "", "tan"], [275, 2, 1, "", "tanh"], [279, 2, 1, "", "tensor"], [291, 2, 1, "", "tile"], [276, 2, 1, "", "trace"], [277, 2, 1, "", "transpose"], [292, 2, 1, "", "unsqueeze"], [278, 2, 1, "", "var"], [293, 2, 1, "", "vstack"], [251, 2, 1, "", "zeros"], [252, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "FashionMNIST"], [6, 1, 1, "", "MNIST"]], "lucid.linalg": [[10, 2, 1, "", "cholesky"], [11, 2, 1, "", "det"], [12, 2, 1, "", "eig"], [14, 2, 1, "", "inv"], [15, 2, 1, "", "matrix_power"], [16, 2, 1, "", "norm"], [17, 2, 1, "", "pinv"], [18, 2, 1, "", "qr"], [19, 2, 1, "", "solve"], [20, 2, 1, "", "svd"]], "lucid.models": [[21, 1, 1, "", "AlexNet"], [23, 1, 1, "", "DenseNet"], [28, 1, 1, "", "Inception"], [32, 1, 1, "", "InceptionResNet"], [36, 1, 1, "", "LeNet"], [51, 1, 1, "", "ResNeXt"], [40, 1, 1, "", "ResNet"], [58, 1, 1, "", "SENet"], [68, 1, 1, "", "SKNet"], [73, 1, 1, "", "VGGNet"], [78, 1, 1, "", "Xception"], [80, 1, 1, "", "ZFNet"], [22, 2, 1, "", "alexnet"], [24, 2, 1, "", "densenet_121"], [25, 2, 1, "", "densenet_169"], [26, 2, 1, "", "densenet_201"], [27, 2, 1, "", "densenet_264"], [33, 2, 1, "", "inception_resnet_v1"], [34, 2, 1, "", "inception_resnet_v2"], [29, 2, 1, "", "inception_v1"], [30, 2, 1, "", "inception_v3"], [31, 2, 1, "", "inception_v4"], [37, 2, 1, "", "lenet_1"], [38, 2, 1, "", "lenet_4"], [39, 2, 1, "", "lenet_5"], [41, 2, 1, "", "resnet_1001"], [42, 2, 1, "", "resnet_101"], [43, 2, 1, "", "resnet_152"], [44, 2, 1, "", "resnet_18"], [45, 2, 1, "", "resnet_200"], [46, 2, 1, "", "resnet_269"], [47, 2, 1, "", "resnet_34"], [48, 2, 1, "", "resnet_50"], [52, 2, 1, "", "resnext_101_32x16d"], [53, 2, 1, "", "resnext_101_32x32d"], [54, 2, 1, "", "resnext_101_32x4d"], [55, 2, 1, "", "resnext_101_32x8d"], [56, 2, 1, "", "resnext_101_64x4d"], [57, 2, 1, "", "resnext_50_32x4d"], [59, 2, 1, "", "se_resnet_101"], [60, 2, 1, "", "se_resnet_152"], [61, 2, 1, "", "se_resnet_18"], [62, 2, 1, "", "se_resnet_34"], [63, 2, 1, "", "se_resnet_50"], [64, 2, 1, "", "se_resnext_101_32x4d"], [65, 2, 1, "", "se_resnext_101_32x8d"], [66, 2, 1, "", "se_resnext_101_64x4d"], [67, 2, 1, "", "se_resnext_50_32x4d"], [69, 2, 1, "", "sk_resnet_18"], [70, 2, 1, "", "sk_resnet_34"], [71, 2, 1, "", "sk_resnet_50"], [72, 2, 1, "", "sk_resnext_50_32x4d"], [83, 2, 1, "", "summarize"], [74, 2, 1, "", "vggnet_11"], [75, 2, 1, "", "vggnet_13"], [76, 2, 1, "", "vggnet_16"], [77, 2, 1, "", "vggnet_19"], [49, 2, 1, "", "wide_resnet_101"], [50, 2, 1, "", "wide_resnet_50"], [79, 2, 1, "", "xception"], [81, 2, 1, "", "zfnet"]], "lucid.nn": [[195, 1, 1, "", "AdaptiveAvgPool1d"], [196, 1, 1, "", "AdaptiveAvgPool2d"], [197, 1, 1, "", "AdaptiveAvgPool3d"], [170, 1, 1, "", "AlphaDropout"], [198, 1, 1, "", "AvgPool1d"], [199, 1, 1, "", "AvgPool2d"], [200, 1, 1, "", "AvgPool3d"], [181, 1, 1, "", "BCELoss"], [187, 1, 1, "", "BatchNorm1d"], [188, 1, 1, "", "BatchNorm2d"], [189, 1, 1, "", "BatchNorm3d"], [177, 1, 1, "", "Bilinear"], [84, 1, 1, "", "Buffer"], [166, 1, 1, "", "Conv1d"], [167, 1, 1, "", "Conv2d"], [168, 1, 1, "", "Conv3d"], [140, 1, 1, "", "ConvBNReLU1d"], [141, 1, 1, "", "ConvBNReLU2d"], [142, 1, 1, "", "ConvBNReLU3d"], [182, 1, 1, "", "CrossEntropyLoss"], [143, 1, 1, "", "DepthSeparableConv1d"], [144, 1, 1, "", "DepthSeparableConv2d"], [145, 1, 1, "", "DepthSeparableConv3d"], [171, 1, 1, "", "Dropout"], [172, 1, 1, "", "Dropout1d"], [173, 1, 1, "", "Dropout2d"], [174, 1, 1, "", "Dropout3d"], [157, 1, 1, "", "ELU"], [158, 1, 1, "", "GELU"], [183, 1, 1, "", "HuberLoss"], [178, 1, 1, "", "Identity"], [190, 1, 1, "", "InstanceNorm1d"], [191, 1, 1, "", "InstanceNorm2d"], [192, 1, 1, "", "InstanceNorm3d"], [193, 1, 1, "", "LayerNorm"], [159, 1, 1, "", "LeakyReLU"], [179, 1, 1, "", "Linear"], [184, 1, 1, "", "MSELoss"], [201, 1, 1, "", "MaxPool1d"], [202, 1, 1, "", "MaxPool2d"], [203, 1, 1, "", "MaxPool3d"], [85, 1, 1, "", "Module"], [87, 1, 1, "", "ModuleDict"], [88, 1, 1, "", "ModuleList"], [185, 1, 1, "", "NLLLoss"], [86, 1, 1, "", "Parameter"], [89, 1, 1, "", "ParameterDict"], [90, 1, 1, "", "ParameterList"], [160, 1, 1, "", "ReLU"], [161, 1, 1, "", "SELU"], [146, 1, 1, "", "SEModule"], [147, 1, 1, "", "SelectiveKernel"], [91, 1, 1, "", "Sequential"], [162, 1, 1, "", "Sigmoid"], [163, 1, 1, "", "Softmax"], [164, 1, 1, "", "Tanh"]], "lucid.nn.functional": [[127, 2, 1, "", "adaptive_avg_pool1d"], [128, 2, 1, "", "adaptive_avg_pool2d"], [129, 2, 1, "", "adaptive_avg_pool3d"], [107, 2, 1, "", "alpha_dropout"], [130, 2, 1, "", "avg_pool1d"], [131, 2, 1, "", "avg_pool2d"], [132, 2, 1, "", "avg_pool3d"], [123, 2, 1, "", "batch_norm"], [114, 2, 1, "", "bilinear"], [117, 2, 1, "", "binary_cross_entropy"], [102, 2, 1, "", "conv1d"], [103, 2, 1, "", "conv2d"], [104, 2, 1, "", "conv3d"], [118, 2, 1, "", "cross_entropy"], [108, 2, 1, "", "dropout"], [109, 2, 1, "", "dropout1d"], [110, 2, 1, "", "dropout2d"], [111, 2, 1, "", "dropout3d"], [93, 2, 1, "", "elu"], [94, 2, 1, "", "gelu"], [119, 2, 1, "", "huber_loss"], [125, 2, 1, "", "instance_norm"], [138, 2, 1, "", "interpolate"], [126, 2, 1, "", "layer_norm"], [96, 2, 1, "", "leaky_relu"], [116, 2, 1, "", "linear"], [134, 2, 1, "", "max_pool1d"], [135, 2, 1, "", "max_pool2d"], [136, 2, 1, "", "max_pool3d"], [121, 2, 1, "", "mse_loss"], [122, 2, 1, "", "nll_loss"], [97, 2, 1, "", "relu"], [139, 2, 1, "", "rotate"], [98, 2, 1, "", "selu"], [99, 2, 1, "", "sigmoid"], [100, 2, 1, "", "softmax"], [101, 2, 1, "", "tanh"], [106, 2, 1, "", "unfold"]], "lucid.nn.init": [[149, 2, 1, "", "constant"], [151, 2, 1, "", "kaiming_normal"], [152, 2, 1, "", "kaiming_uniform"], [153, 2, 1, "", "normal"], [154, 2, 1, "", "uniform"], [155, 2, 1, "", "xavier_normal"], [156, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[208, 1, 1, "", "ASGD"], [209, 1, 1, "", "Adadelta"], [210, 1, 1, "", "Adagrad"], [211, 1, 1, "", "Adam"], [212, 1, 1, "", "AdamW"], [213, 1, 1, "", "Adamax"], [214, 1, 1, "", "NAdam"], [206, 1, 1, "", "Optimizer"], [215, 1, 1, "", "RAdam"], [216, 1, 1, "", "RMSprop"], [217, 1, 1, "", "Rprop"], [218, 1, 1, "", "SGD"]], "lucid.random": [[226, 2, 1, "", "rand"], [227, 2, 1, "", "randint"], [228, 2, 1, "", "randn"], [229, 2, 1, "", "seed"], [230, 2, 1, "", "uniform"]], "lucid.transforms": [[296, 1, 1, "", "CenterCrop"], [294, 1, 1, "", "Compose"], [297, 1, 1, "", "Normalize"], [298, 1, 1, "", "RandomCrop"], [299, 1, 1, "", "RandomGrayscale"], [300, 1, 1, "", "RandomHorizontalFlip"], [301, 1, 1, "", "RandomRotation"], [302, 1, 1, "", "RandomVerticalFlip"], [303, 1, 1, "", "Resize"], [295, 1, 1, "", "ToTensor"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [3, 8, 9, 15, 17, 20, 82, 83, 84, 85, 86, 87, 89, 90, 91, 127, 128, 129, 147, 182, 185, 195, 196, 197, 198, 201, 202, 205, 206, 207, 221, 223, 237, 245, 263, 265, 273, 276, 278, 279, 289, 295, 297, 305], "0": [0, 1, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 30, 32, 36, 58, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 251, 252, 254, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 273, 274, 275, 277, 278, 279, 280, 282, 285, 286, 287, 289, 290, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 303, 305], "000": [5, 6, 246, 247], "0000": [182, 183, 185], "0001": 208, "000e": [246, 247], "001": [208, 211, 212, 214, 215, 218], "002": [213, 214], "004": 214, "005": 159, "01": [96, 159, 206, 207, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218], "01051757": 228, "013": [26, 82], "016": [41, 82], "0205": 182, "0217": 182, "0227": 182, "024": [63, 82], "026": [52, 82], "028": [57, 82], "0299": 182, "032": [48, 82], "044715": [94, 158], "0450": 182, "0451": 182, "047": [75, 82], "04719755": 255, "0474259": 99, "048": [65, 82], "0480": 182, "05": [123, 125, 126, 140, 141, 142, 159, 187, 188, 189, 190, 191, 192, 193], "0507": [98, 161], "06": [209, 217], "069": [46, 82], "07": [117, 118, 181, 182], "0700": 182, "0706508": 164, "071": [41, 82], "0721": 182, "073": [71, 82], "0794": 185, "08": [211, 212, 213, 214, 215, 216], "0802": 185, "08333333": 17, "085537": 262, "088": [63, 82], "0900": [163, 182], "096": [79, 82], "0986": [100, 163], "09861229": 263, "0992": 182, "1": [0, 1, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 32, 36, 37, 38, 39, 58, 64, 65, 66, 67, 68, 72, 73, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 224, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249, 250, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305], "10": [0, 1, 2, 3, 5, 21, 22, 23, 36, 37, 38, 39, 73, 80, 81, 82, 83, 87, 88, 91, 103, 104, 114, 116, 127, 166, 167, 168, 173, 174, 177, 179, 188, 189, 191, 195, 199, 200, 202, 210, 223, 227, 230, 231, 234, 237, 240, 241, 257, 273, 296, 298, 299, 301], "100": [22, 74, 75, 76, 77, 82, 223, 305], "1000": [21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81], "1000000": 208, "1001": [41, 82, 182], "1003": 182, "1007": 82, "101": [42, 49, 52, 53, 54, 55, 56, 59, 64, 65, 66, 82], "1014": 98, "102": [46, 82], "1025": [88, 91], "1026": [88, 91], "1027": [88, 91], "10499": 99, "1050": 162, "1054": 185, "1056": [88, 91], "10590": 82, "1097": 82, "11": [44, 61, 73, 74, 82, 114, 166, 167, 168, 173, 177, 188, 189, 191, 199, 200, 202, 237, 296, 297, 298, 299, 301], "1105": 82, "1109": 82, "1111": 181, "1134": 114, "114b": 299, "119": 114, "1192": [99, 100, 163], "12": [23, 24, 25, 26, 27, 37, 38, 89, 114, 129, 166, 167, 168, 173, 174, 177, 188, 189, 191, 197, 199, 200, 202, 237, 241, 242, 296, 298, 299, 301], "120": [36, 39], "121": [23, 24, 82], "123": [151, 152, 153, 154, 155, 156, 229, 230], "124": [151, 152, 155, 156], "125": 200, "1250": 183, "1251": 82, "1258": 82, "126": [49, 82], "128": [33, 40, 49, 50, 73, 82, 91, 147, 294, 305], "128x128": [294, 305], "13": [29, 73, 75, 82, 114, 166, 167, 168, 177, 189, 199, 200, 202, 237, 296, 298, 299, 301], "132": [74, 82], "133": [75, 82], "138": [76, 82], "14": [25, 82, 166, 167, 168, 173, 174, 177, 189, 199, 200, 202, 224, 237, 241, 296, 298, 299, 301], "1409": 82, "143": [77, 82], "145": 114, "149": [25, 41, 82], "15": [0, 114, 166, 167, 168, 177, 189, 199, 200, 202, 237, 241, 276, 296, 298, 299, 301, 305], "1513": 185, "152": [43, 60, 82], "155": 237, "1556": 82, "1588": [94, 158], "16": [23, 24, 36, 39, 52, 58, 73, 76, 82, 88, 89, 91, 128, 129, 140, 141, 142, 146, 147, 166, 167, 168, 173, 174, 177, 188, 189, 196, 197, 199, 200, 202, 205, 237, 241, 271, 296, 298, 299, 301], "160": [42, 82], "16227766": 18, "16425": 185, "1643": 181, "166": 237, "169": [23, 25, 82], "17": [166, 167, 168, 177, 189, 200, 236, 296, 298, 299, 301], "170": 114, "17520119": 270, "177": [54, 82], "18": [38, 44, 61, 69, 82, 166, 167, 168, 173, 177, 189, 200, 240, 241, 296, 298, 299, 301], "1800": 182, "19": [73, 77, 82, 103, 104, 114, 167, 168, 189, 235, 237], "192": [37, 38, 43, 82], "194": [52, 82], "1966": [100, 162, 163], "1998": [82, 182], "1_53": 82, "1d": [102, 127, 130, 134, 140, 143, 187, 190, 195, 230, 237, 245, 276, 284, 285, 286, 287, 291], "1e": [117, 118, 123, 125, 126, 140, 141, 142, 181, 182, 187, 188, 189, 190, 191, 192, 193, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218], "1e6": 208, "1st": [21, 80], "2": [1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 37, 38, 39, 44, 61, 69, 80, 83, 84, 85, 86, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 147, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 224, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305], "20": [0, 5, 6, 26, 82, 87, 88, 91, 167, 168, 173, 189, 241, 262], "200": [45, 82], "201": [26, 82], "2011": 146, "2012": 82, "2014": 82, "2015": 82, "2016": 82, "2017": 82, "2018": [82, 146], "2019": 82, "2023": 146, "2039": 185, "204": 168, "21": [47, 62, 82, 89, 114, 167, 168, 189, 241], "211": 237, "22": [33, 79, 82, 114, 167, 168, 173, 189, 235, 237], "2231": [182, 185], "224": [21, 23, 24, 25, 26, 27, 40, 50, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 69, 70, 71, 72, 73, 80, 82], "2247": [187, 188, 189, 190, 191, 192, 193], "224x224": [29, 64, 65, 66, 67, 72], "226": 237, "22752314": 228, "2278": 82, "23": [42, 49, 52, 53, 54, 55, 56, 59, 167, 168, 189], "232": [66, 82], "2324": [82, 161], "234": [151, 152, 153, 154, 155, 156, 230], "24": [23, 24, 45, 114, 128, 167, 168, 173, 189, 196, 241], "240": [77, 82], "2424": [100, 163], "2447": 163, "246": [37, 82], "25": [0, 48, 57, 69, 82, 99, 162, 168, 184, 189, 199, 200, 234, 267, 278], "2500": [181, 183, 185], "2512": 157, "2547": 161, "256": [40, 73], "26": [89, 116, 168, 179, 189, 241], "26325684": 228, "264": [27, 82], "2689": [100, 162, 163], "269": [46, 82], "27": [67, 82, 114, 166, 168, 189, 261], "272": [56, 82], "274": [72, 82], "276": [151, 152, 155, 156], "28": [37, 38, 63, 82, 114, 168, 241], "28x28": [5, 6, 37, 38], "29": [72, 82, 168], "299": [78, 82], "299r": 299, "299x299": [30, 31, 33, 34], "2_i": [190, 191, 192], "2d": [103, 110, 128, 131, 135, 141, 144, 188, 191, 196, 237, 245, 248, 276, 281, 284, 285, 287, 291, 301], "2e": 213, "2nd": [21, 80], "2x2": [106, 296, 298], "3": [1, 2, 3, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 37, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 78, 80, 82, 84, 85, 86, 88, 89, 90, 91, 94, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 114, 116, 119, 121, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 258, 260, 261, 262, 263, 264, 265, 266, 270, 271, 272, 273, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303], "30": [30, 46, 82, 88, 139, 168, 301], "3026": 185, "31": [114, 168, 237], "310": [246, 247], "31622777": 18, "319": 82, "32": [23, 25, 26, 39, 52, 53, 54, 55, 57, 82, 88, 91, 114, 116, 128, 140, 141, 142, 146, 147, 167, 168, 179, 196, 205, 235, 236, 241], "321": [151, 152, 155, 156], "326": [59, 82], "32x16d": 82, "32x32": [36, 39], "32x32d": 82, "32x4d": [64, 67, 72, 82], "32x8d": [65, 82], "33": [27, 82, 88, 91, 116, 168, 179], "33333333": 17, "336": [55, 74, 82], "337": [27, 82], "34": [47, 62, 70, 82, 88, 91, 114, 168, 237, 241], "342": [151, 152, 155, 156], "345": [151, 152, 153, 154, 155, 156, 230], "35": [34, 82, 88, 91, 168], "352": [29, 82], "3567": [181, 185], "357": [76, 81, 82], "36": [43, 45, 60, 168], "3679": [93, 98, 157], "368": [69, 71, 82], "37": 166, "372": 114, "375": 184, "3750": 183, "378": [38, 82], "38344152": 226, "38629436": 263, "389056": 262, "392": [30, 82], "393": [29, 82], "3935": 157, "3d": [104, 111, 129, 132, 136, 142, 145, 168, 189, 192, 197], "3x3": [82, 231], "4": [0, 1, 2, 3, 9, 10, 11, 12, 14, 16, 17, 18, 23, 36, 37, 38, 40, 42, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 62, 63, 70, 71, 82, 83, 89, 91, 102, 103, 104, 106, 109, 110, 111, 114, 116, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 143, 144, 145, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 208, 211, 215, 216, 218, 221, 224, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 250, 252, 258, 263, 264, 265, 266, 267, 269, 271, 272, 273, 274, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 290, 291, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303], "40": [31, 82], "400": 39, "4044": 181, "4076": 182, "4096": [21, 80], "41421356": 10, "416": [46, 64, 82], "41666667": 17, "41808962": 228, "419974": 101, "4199743": 164, "42": [114, 146, 224, 231], "421": [151, 152, 155, 156], "423": [151, 152, 153, 154], "42718872": 18, "4278": 82, "4284": 82, "4286": 181, "43": [235, 237], "4323": 157, "4375": 183, "43758721": 226, "44": [42, 54, 82], "4472136": 12, "4495": [189, 192], "45": [70, 82, 114, 139, 301], "4545": 170, "455": [56, 82], "468": [53, 82], "4700": 82, "4708": 82, "47112767": 257, "472": [53, 82], "48": [23, 26, 27, 46, 64, 82, 116, 179], "480": [25, 82], "49": [59, 82], "4979": 157, "4x4": 303, "5": [1, 2, 8, 9, 14, 15, 16, 17, 21, 30, 36, 37, 38, 39, 68, 69, 70, 71, 80, 82, 83, 85, 86, 87, 88, 89, 91, 94, 99, 102, 103, 104, 106, 107, 108, 109, 110, 111, 114, 116, 119, 121, 123, 125, 126, 127, 130, 131, 138, 140, 141, 142, 147, 149, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 198, 199, 200, 202, 203, 217, 221, 224, 227, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 250, 252, 254, 255, 256, 264, 265, 266, 267, 268, 273, 276, 277, 278, 279, 282, 284, 288, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305], "50": [40, 48, 50, 57, 63, 67, 71, 72, 82, 116, 179, 217, 235, 237, 299, 300, 302, 305], "5000": [181, 183, 185], "510": 82, "5108": 185, "512": [34, 40, 44, 70, 82], "519": 82, "52359878": 256, "53": [114, 236], "530": [53, 82], "543": [151, 152, 153, 154, 155, 156, 230], "54308063": 260, "544": [76, 82], "545": 242, "5455": 170, "549": [42, 82], "557": [48, 82], "559": [67, 82], "563": [151, 152, 155, 156], "569": [65, 82], "57": [71, 82, 114], "57079633": [255, 256], "57366333": 229, "586": [31, 82], "587g": 299, "592": [61, 82], "5987": 82, "5995": 82, "5th": [21, 80], "6": [9, 17, 21, 23, 24, 25, 26, 27, 36, 39, 40, 47, 48, 50, 57, 62, 63, 70, 71, 80, 89, 90, 102, 103, 104, 106, 111, 114, 116, 127, 152, 156, 166, 167, 168, 171, 172, 173, 174, 177, 179, 181, 187, 188, 189, 190, 191, 192, 193, 195, 199, 200, 202, 203, 209, 217, 221, 224, 230, 233, 234, 235, 236, 237, 240, 241, 242, 243, 244, 245, 246, 247, 250, 252, 264, 265, 266, 273, 276, 277, 278, 279, 282, 287, 288, 293, 295, 296, 297, 298, 299, 301, 303], "60": [43, 82], "6052": 185, "6065": 157, "608": [81, 82], "61": [22, 39, 82], "6124": [187, 188, 189, 190, 191, 192, 193], "62": [81, 82, 114], "62686041": 270, "630": 82, "6321": [93, 157], "63245553": 18, "64": [23, 27, 40, 45, 56, 68, 73, 82, 88, 91, 114, 146, 147], "645": 82, "64589411": 226, "647": [69, 82], "64x4d": [66, 82], "654": [151, 152, 153, 154, 155, 156, 230], "657": [151, 152, 155, 156], "6590": [100, 163], "66": [60, 82], "6652": 163, "66666667": 17, "6667": 181, "667": [77, 82], "6682": 181, "669": [45, 82], "67": 237, "672": [47, 82], "67326": 161, "6733": 98, "678": [151, 152, 153, 154, 155, 156], "68811989": 228, "689": [44, 82], "69314718": 263, "696": [49, 82], "7": [16, 24, 73, 82, 89, 102, 103, 104, 106, 111, 114, 116, 117, 118, 127, 147, 158, 161, 162, 164, 166, 167, 168, 173, 174, 177, 179, 181, 182, 184, 188, 189, 191, 192, 195, 199, 200, 202, 203, 224, 227, 230, 233, 235, 236, 237, 241, 243, 245, 262, 265, 273, 276, 277, 278, 291, 295, 296, 297, 298, 299, 301, 303], "70": [5, 6], "7001": 182, "704": [27, 54, 82], "706": [39, 82], "70710678": [12, 269], "7132": 82, "7141": 82, "7147": 185, "7182818": 262, "726791": 82, "7311": [100, 162, 163], "739": [33, 82], "74": 237, "75": [116, 179, 184, 208], "7581": 98, "760": [72, 82], "76159416": 275, "7616": [101, 164], "76219569": 260, "7635": 161, "770": 82, "772": 242, "778": [61, 82], "78": [50, 82], "78357324": 228, "78539816": 257, "791": [55, 82], "79172504": 226, "792": [52, 82], "797": [47, 82], "7x7": 80, "8": [15, 19, 23, 40, 43, 46, 52, 53, 54, 55, 56, 57, 60, 69, 70, 71, 83, 88, 89, 91, 102, 103, 104, 106, 111, 114, 116, 117, 127, 128, 129, 140, 141, 142, 146, 158, 161, 162, 164, 166, 167, 168, 171, 172, 173, 174, 177, 179, 181, 184, 188, 189, 191, 192, 195, 196, 197, 199, 200, 202, 203, 211, 212, 213, 214, 215, 216, 224, 227, 234, 235, 236, 237, 241, 242, 244, 245, 261, 265, 273, 276, 277, 278, 295, 296, 297, 298, 299, 301, 303], "80": [5, 6], "8005": 182, "808": [43, 82], "817": [30, 82], "818": 82, "8182": 170, "82": 114, "821": [60, 82], "83": [56, 82], "833": 82, "84": [36, 38, 39], "840": [22, 82], "8413": [94, 158], "847": [34, 82], "848": [60, 75, 82], "856": [24, 82], "8584": 161, "86": 82, "862": [79, 82], "863": [74, 82], "864": [45, 82], "868": [62, 82], "872": [59, 82], "876": [151, 152, 155, 156, 230], "88": [55, 66, 82], "8808": [100, 162, 163], "886": [49, 82], "887": 242, "891773": 226, "89442719": 12, "895": [70, 82], "896": [67, 82], "9": [0, 1, 3, 6, 19, 82, 103, 106, 114, 116, 127, 166, 167, 168, 173, 177, 179, 181, 188, 189, 191, 195, 199, 200, 202, 208, 209, 211, 212, 213, 214, 215, 216, 218, 224, 227, 230, 233, 237, 241, 242, 243, 245, 271, 272, 295, 296, 297, 298, 299, 301], "904": [57, 82], "90709145": 229, "9091": 170, "9120": 185, "9163": 185, "928": [26, 82], "93": [65, 82], "94": 41, "9486833": 18, "949e": [246, 247], "9526": 99, "9545": 158, "955": [64, 82], "958": [62, 82], "96366276": 226, "9640": 164, "96402758": 275, "973": [50, 82], "978": [24, 82], "984": [31, 66, 82], "99": 216, "9957": 185, "99734545": 229, "999": [0, 211, 212, 213, 214, 215], "A": [1, 3, 5, 6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 32, 36, 40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 68, 69, 70, 71, 73, 74, 75, 76, 77, 82, 85, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 114, 116, 117, 118, 122, 123, 125, 126, 138, 147, 170, 171, 172, 173, 174, 181, 182, 185, 187, 188, 189, 190, 191, 192, 193, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 222, 224, 226, 227, 228, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 301], "As": 229, "Be": 0, "By": [0, 2, 3, 8, 41, 42, 43, 44, 45, 46, 47, 48, 86, 139, 205, 215, 221, 226, 227, 228, 230, 295, 305], "For": [2, 3, 4, 8, 10, 11, 12, 14, 15, 16, 17, 19, 91, 93, 94, 96, 97, 98, 99, 101, 114, 116, 138, 151, 152, 155, 156, 161, 166, 167, 168, 177, 179, 187, 188, 189, 190, 191, 192, 205, 207, 229, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 262, 263, 264, 265, 266, 269, 271, 273, 276, 277, 278, 285, 287, 289, 291, 292, 305], "If": [0, 1, 2, 5, 6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 40, 83, 85, 87, 88, 89, 90, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 111, 114, 116, 123, 125, 128, 129, 138, 139, 140, 141, 142, 143, 144, 145, 147, 151, 152, 166, 167, 168, 177, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 206, 211, 212, 216, 217, 223, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 299, 300, 302, 303], "In": [3, 8, 17, 102, 103, 104, 182, 185, 220, 221, 222, 294, 305], "It": [1, 2, 3, 5, 8, 17, 18, 19, 21, 24, 25, 26, 27, 28, 29, 30, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 61, 73, 79, 82, 85, 87, 88, 89, 90, 91, 111, 114, 138, 139, 140, 141, 142, 146, 158, 160, 164, 177, 178, 181, 182, 183, 184, 185, 195, 196, 197, 205, 206, 207, 208, 214, 216, 217, 218, 221, 229, 233, 234, 235, 238, 239, 240, 242, 243, 264, 266, 280, 282, 284, 285, 286, 287, 288, 289, 290, 291, 293, 294, 295], "Its": [19, 231], "Near": 17, "No": 106, "Not": 178, "One": [37, 305], "The": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305], "There": 288, "These": [4, 8, 9, 12, 15, 18, 20, 49, 50, 69, 70, 71, 79, 82, 170, 171, 172, 173, 174, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 217, 224, 231, 305], "To": [3, 82, 207, 228, 231, 246, 247, 284, 305], "With": [3, 106, 295, 305], "_": [15, 87, 88, 90, 91, 93, 94, 96, 97, 98, 99, 101, 116, 138, 188, 189, 190, 191, 192, 198, 199, 200, 201, 202, 203, 208, 209, 211, 212, 213, 214, 216, 218, 235, 236, 237, 241, 276, 277, 296, 297, 298, 300, 301, 302], "_1": [12, 87, 88, 89, 90, 91, 114, 177, 241, 280, 282, 293], "_2": [12, 87, 88, 89, 90, 91, 114, 177, 241, 280, 282, 293], "__call__": [1, 85], "__getitem__": [0, 2, 3, 5, 6], "__init__": [0, 1, 2, 3, 8, 21, 28, 32, 36, 73, 80, 83, 84, 85, 86, 87, 88, 89, 90, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 177, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 223, 232, 294, 295], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5, 6], "__repr__": 206, "__setattr__": 85, "_activ": 100, "_arraylik": [224, 245, 247, 250, 252], "_arraylikeint": 285, "_arrayorscalar": [84, 86, 224, 232, 279], "_base_activ": 36, "_base_dtyp": [244, 246, 249, 251], "_c": 297, "_decai": 214, "_fanmod": [151, 152], "_grad_en": [220, 222], "_i": [12, 16, 100, 114, 163, 184, 187, 193, 198, 201, 235, 236, 238, 239, 241, 242, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 287, 289, 292, 293], "_in": [151, 152, 155, 156], "_j": [100, 163, 198, 201, 241, 265, 273, 277, 278], "_k": 290, "_left": 138, "_make_lay": 73, "_modul": 85, "_n": [12, 87, 88, 89, 90, 91, 280, 282, 293], "_numpyarrai": 224, "_out": [151, 152, 155, 156, 287, 291], "_p": 16, "_pad": 285, "_paddingstr": [140, 141, 142, 143, 144, 145, 166, 167, 168], "_paramet": 85, "_reductiontyp": [117, 118, 119, 121, 122, 181, 182, 183, 184, 185], "_right": 138, "_scalar": [149, 153, 154, 155, 156, 224, 244, 258], "_seresnetbottleneck": [59, 60, 63], "_seresnetmodul": [61, 62], "_shapelik": [83, 126, 193, 224, 227, 249, 251, 288, 289, 292], "_size": [127, 128, 129], "_skresnetmodul": [69, 70, 71], "_slope": 159, "_statedict": 206, "_t": [215, 216], "_tensor": [84, 86, 245, 279], "_tensorop": 232, "_u": 17, "_v": 17, "_valu": [258, 285], "_width": 285, "a_i": [238, 239, 242], "aaai": 82, "ab": 253, "abc": [2, 206], "abil": [8, 82, 305], "about": [8, 83], "abov": [8, 220, 222, 229, 245, 248], "absolut": [15, 16, 119, 213, 254], "abstract": [2, 3, 205, 206, 207, 208, 216, 218], "abstractmethod": 206, "acceler": [82, 161, 187, 188, 189, 208, 214, 216, 218], "accept": [178, 226, 232], "access": [0, 2, 3, 4, 5, 6, 52, 53, 54, 55, 56, 57, 84, 86, 87, 88, 89, 90, 91, 288], "accord": [138, 166, 167, 168, 177, 179, 182, 185, 209, 210, 211, 212, 213, 214, 215, 277], "accordingli": 11, "account": [15, 17, 18], "accumul": [208, 209, 210, 233, 234, 238, 239, 240, 243], "accur": 60, "accuraci": [63, 82], "achiev": [51, 52, 53, 54, 55, 56, 57, 82, 102, 103, 104, 127, 195, 196, 197, 214, 300, 302], "across": [0, 84, 88, 91, 126, 127, 128, 129, 155, 156, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 224, 226, 227, 228, 229, 230, 231, 246, 247, 265, 278], "act": 212, "activ": [8, 21, 36, 41, 45, 46, 58, 73, 80, 82, 87, 91, 93, 94, 96, 97, 98, 99, 100, 101, 107, 140, 141, 142, 146, 147, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 170, 171, 172, 173, 174, 181, 182, 185, 187, 188, 189, 193, 264, 266], "actual": [86, 181, 182, 184, 185, 232, 298], "ad": [23, 40, 85, 87, 88, 89, 90, 91, 102, 103, 104, 114, 116, 117, 118, 123, 125, 126, 130, 131, 132, 134, 135, 136, 140, 141, 142, 166, 167, 168, 181, 182, 187, 188, 189, 190, 191, 192, 193, 198, 199, 200, 201, 202, 203, 209, 210, 211, 212, 213, 214, 215, 216, 223, 292, 305], "adadelta": 219, "adagrad": [209, 219], "adam": [212, 213, 214, 215, 219], "adamax": 219, "adamw": 219, "adapt": [21, 28, 36, 59, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 80, 82, 127, 128, 129, 146, 147, 195, 196, 197, 209, 210, 211, 214, 215, 216, 217], "adaptive_avg_pool1d": [113, 133, 195], "adaptive_avg_pool2d": [113, 133, 196], "adaptive_avg_pool3d": [113, 133, 197], "adaptiveavgpool1d": [176, 204], "adaptiveavgpool2d": [21, 58, 73, 80, 176, 204], "adaptiveavgpool3d": [176, 204], "add": [4, 85, 87, 88, 91, 114, 116, 166, 167, 168, 177, 179, 193, 206, 208, 211, 216, 218, 221, 253, 285, 292], "add_modul": [85, 91], "add_param_group": 206, "addit": [4, 8, 15, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 79, 81, 85, 88, 91, 114, 116, 123, 125, 177, 179, 187, 188, 189, 190, 191, 192, 208, 214, 221, 231, 233, 290], "addition": 214, "address": [182, 185, 211, 212, 215], "adjust": [33, 64, 65, 66, 67, 68, 72, 127, 128, 129, 147, 170, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 207, 211, 215, 216, 217, 282, 293], "advanc": [3, 17, 45, 82, 88, 91, 102, 103, 104, 127, 128, 129, 195, 196, 197, 205, 208], "advantag": [34, 222], "affect": [220, 286, 289, 294], "affin": [140, 141, 142, 187, 188, 189, 190, 191, 192, 193, 301], "after": [15, 21, 80, 86, 87, 88, 89, 90, 91, 111, 146, 147, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 170, 171, 172, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 198, 199, 200, 201, 202, 203, 212, 222, 232, 233, 234, 238, 239, 240, 242, 243, 285, 295], "afterward": 222, "aggreg": [82, 147, 241, 287, 291], "aim": [4, 8], "al": [29, 82], "alex": 82, "alexnet": [35, 80, 82], "algebra": [8, 9, 248], "algorithm": [5, 8, 15, 17, 18, 206, 207, 231], "align": [19, 138, 236, 237], "align_corn": 138, "all": [0, 3, 4, 8, 18, 82, 85, 87, 88, 89, 90, 91, 103, 104, 127, 128, 129, 131, 132, 135, 136, 138, 141, 142, 147, 159, 160, 168, 195, 196, 197, 199, 200, 203, 205, 206, 207, 208, 211, 216, 217, 218, 242, 264, 265, 266, 273, 276, 278, 280, 281, 282, 287, 289, 290, 291, 293, 296, 297, 305], "allevi": [82, 93], "alloc": [246, 247], "allow": [0, 1, 3, 4, 8, 17, 18, 34, 36, 40, 51, 64, 65, 66, 67, 68, 72, 82, 86, 87, 88, 89, 90, 91, 93, 96, 97, 100, 104, 106, 139, 147, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 205, 209, 210, 221, 244, 249, 251, 252, 277, 279, 284, 294, 295, 305], "along": [100, 138, 147, 163, 236, 237, 241, 264, 265, 266, 273, 276, 278, 280, 282, 284, 287, 290, 291, 292, 293, 300, 302], "alongsid": 84, "alpha": [93, 96, 98, 107, 157, 161, 170, 208, 216], "alpha_dropout": [112, 113, 170], "alphadropout": [175, 176], "alphadropoutmodel": 170, "alreadi": 223, "also": [83, 93, 94, 96, 97, 98, 99, 101, 114, 116, 138, 214, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 247, 251, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 274, 275, 280, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293], "alter": [91, 288], "altern": [1, 158, 209, 237], "alwai": [86, 286, 299, 300, 302], "among": [30, 147], "amount": [102, 103, 104, 130, 131, 132, 134, 135, 136, 143, 144, 145, 214], "amsgrad": [211, 212], "an": [0, 1, 3, 8, 12, 14, 15, 17, 18, 20, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 79, 80, 81, 82, 83, 85, 87, 88, 89, 90, 91, 94, 102, 103, 104, 106, 107, 108, 109, 110, 111, 114, 128, 129, 138, 139, 143, 144, 145, 147, 155, 156, 157, 162, 166, 167, 168, 170, 171, 172, 173, 174, 177, 179, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 207, 208, 211, 214, 216, 222, 223, 224, 232, 237, 245, 248, 258, 265, 273, 278, 280, 287, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305], "analog": [287, 291], "analysi": [4, 146, 166, 167, 168, 192, 198, 200, 201, 203], "andrew": 82, "angl": [139, 301], "ani": [0, 1, 2, 3, 15, 17, 22, 40, 68, 79, 81, 84, 85, 86, 87, 89, 90, 93, 94, 96, 97, 98, 99, 101, 107, 108, 114, 116, 123, 125, 162, 193, 205, 206, 220, 222, 223, 229, 232, 244, 245, 246, 248, 249, 250, 251, 252, 264, 266, 277, 279, 280, 281, 282, 285, 287, 290, 291, 292, 293, 294, 305], "anoth": [90, 243, 250, 252, 295, 305], "api": [4, 195, 196, 197, 305], "appear": 206, "append": [88, 90, 91], "appli": [2, 4, 5, 6, 8, 15, 21, 51, 68, 78, 80, 82, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 104, 106, 107, 108, 109, 110, 111, 114, 116, 117, 118, 119, 121, 122, 140, 141, 142, 146, 147, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 170, 171, 172, 173, 174, 177, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 208, 209, 210, 212, 213, 214, 215, 237, 285, 287, 294, 297, 299, 300, 301, 302, 303, 305], "applic": [4, 17, 23, 33, 34, 102, 125, 166, 167, 168, 177, 179, 231, 244, 251, 285, 303], "approach": [3, 32, 91, 212], "appropri": [17, 82, 85, 89, 91, 166, 167, 168, 170, 171, 172, 182, 199, 200, 220, 222], "approx": 98, "approxim": [17, 94, 158, 199, 202], "ar": [1, 2, 3, 4, 8, 11, 12, 14, 15, 17, 18, 19, 20, 28, 29, 30, 82, 84, 85, 86, 87, 88, 89, 90, 91, 100, 102, 103, 104, 106, 114, 116, 128, 129, 138, 143, 144, 145, 146, 147, 151, 152, 154, 155, 156, 163, 166, 167, 168, 170, 171, 172, 173, 174, 177, 179, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 208, 211, 212, 214, 215, 216, 217, 218, 220, 222, 223, 224, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 254, 258, 262, 264, 265, 266, 267, 268, 273, 276, 277, 280, 284, 287, 288, 291, 294, 295, 296, 298, 299, 303, 305], "arang": 253, "arbitrari": [88, 178, 246, 247, 258, 263, 265, 269, 271, 273, 277, 278], "arcco": 253, "arch": 223, "architectur": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 40, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 81, 82, 83, 87, 88, 89, 90, 91, 94, 146, 160, 177, 178, 205, 223], "arcsin": 253, "arctan": 253, "area": 138, "arg": [85, 178, 223, 246], "argument": [3, 4, 22, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 79, 81, 85, 91, 178, 226, 246, 277], "around": [12, 139, 164], "arr": [224, 280, 282, 290, 293], "arrai": [8, 84, 86, 221, 224, 232, 237, 245, 250, 252, 279, 286, 287, 295, 305], "art": 82, "artifici": 82, "arxiv": 82, "asarrai": 224, "asgd": 219, "aspect": 303, "assign": [85, 87, 89, 91, 138, 182, 185], "assist": [28, 29, 30], "associ": [89, 90], "assum": [0, 1, 206, 207, 220], "attempt": [87, 91], "attent": [68, 90, 114, 146], "attribut": 85, "audio": 166, "augment": [3, 4, 61, 139, 231, 287, 291, 294, 298, 299, 300, 301, 302, 305], "autodiff": 8, "autograd": 205, "automat": [4, 8, 86, 87, 88, 89, 90, 205, 226, 227, 228, 230, 232, 246, 247, 252, 284, 295], "auxiliari": [28, 29, 30, 84], "avail": [4, 5, 6, 8], "averag": [21, 37, 38, 39, 40, 51, 58, 68, 73, 80, 84, 127, 128, 129, 130, 131, 132, 138, 146, 147, 184, 195, 196, 197, 198, 199, 200, 208, 209, 211, 216, 265], "avg_down": 40, "avg_pool": [198, 199, 200], "avg_pool1d": [113, 133], "avg_pool2d": [113, 133], "avg_pool3d": [113, 133], "avgpool": [21, 58, 73, 80, 147], "avgpool1d": [176, 204], "avgpool1dmodel": 198, "avgpool2d": [176, 204], "avgpool2dmodel": 199, "avgpool3d": [176, 204], "avgpool3dmodel": 200, "avoid": [2, 3, 17, 89, 222], "ax": [9, 221, 264, 265, 266, 273, 277, 278, 287, 289, 291], "axi": [100, 163, 236, 237, 264, 265, 266, 273, 278, 280, 282, 284, 285, 287, 289, 290, 291, 292, 293, 300, 302], "b": [9, 19, 114, 116, 154, 166, 167, 168, 177, 179, 221, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 280, 282, 290, 293, 299], "b_i": [238, 239, 242], "back": [138, 199, 200, 223, 236, 241, 287, 291], "backbon": [69, 70, 71], "backpropag": [8, 11, 12, 14, 15, 17, 18, 20, 82, 84, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 114, 116, 138, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 198, 199, 200, 201, 202, 203, 205, 222, 228, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 262, 264, 266, 279, 285, 287, 291, 295], "backward": [8, 84, 86, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 232, 295], "balanc": [52, 53, 54, 55, 56, 57, 183], "bar": 208, "base": [3, 9, 14, 15, 18, 19, 23, 28, 29, 30, 31, 32, 33, 34, 36, 51, 52, 53, 54, 55, 56, 57, 68, 73, 78, 82, 85, 87, 88, 89, 90, 106, 114, 127, 128, 129, 147, 170, 182, 183, 195, 196, 197, 205, 206, 207, 208, 212, 216, 217, 218, 233, 234, 238, 239, 240, 242, 243, 252, 262, 263, 264, 266, 277, 284, 285, 298, 299, 300, 301, 302], "base_width": [49, 50, 51, 68], "basic": [8, 21, 40, 52, 53, 54, 55, 56, 57, 69, 70, 71, 78, 80, 83, 102, 103, 104, 127, 128, 129, 140, 141, 142, 143, 144, 145, 146, 151, 152, 155, 156, 195, 196, 197, 296, 297, 298, 299, 300, 301, 302, 303], "basicblock": [40, 44, 47], "batch": [1, 2, 3, 9, 15, 18, 20, 29, 30, 31, 33, 34, 58, 64, 65, 66, 67, 72, 102, 103, 104, 106, 109, 110, 111, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 166, 167, 168, 177, 179, 181, 182, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 199, 200, 201, 202, 203, 215, 237, 296, 297, 298, 299, 301, 303], "batch_norm": [113, 124, 187, 188, 189], "batch_norm1": 91, "batch_norm2": 91, "batch_siz": [1, 2, 3, 78, 147], "batchnorm": [140, 141, 142], "batchnorm1d": [140, 176, 194], "batchnorm1dmodel": 187, "batchnorm2d": [91, 141, 176, 194], "batchnorm2dmodel": 188, "batchnorm3d": [142, 176, 194], "batchnorm3dmodel": 189, "bceloss": [176, 186], "becaus": [2, 227], "becom": [16, 85, 209, 217], "befor": [15, 58, 83, 86, 208, 214, 222, 229, 285, 297, 305], "begin": [1, 16, 93, 96, 97, 98, 157, 159, 160, 161, 183, 184, 185, 198, 199, 200, 201, 202, 203, 215, 217, 221, 231, 238, 239, 241, 254, 258, 264, 266, 268, 285], "behav": [183, 276], "behavior": [82, 88, 91, 220, 231, 237, 247, 305], "being": [90, 139, 170, 171, 172, 173, 174, 215, 220, 222, 280, 282, 293], "belong": 0, "below": [18, 29, 30, 31, 33, 34, 36, 37, 38, 39, 237, 245, 248], "benchmark": [5, 6], "benefici": 91, "benefit": [93, 205, 214, 224], "bernoulli": [170, 171, 172, 173, 174], "best": [151, 152, 155, 156], "beta": [187, 188, 189, 190, 191, 192, 193, 211, 212, 213, 214, 215], "beta1": [211, 212, 213, 214, 215], "beta2": [211, 212, 213, 214, 215], "beta_1": [211, 212, 213, 214, 215], "beta_2": [211, 212, 213, 214, 215], "better": [14, 80, 82, 94, 151, 152, 155, 156, 190, 191, 192, 205, 212, 214, 216, 297], "between": [52, 53, 54, 55, 56, 57, 82, 85, 102, 103, 104, 106, 114, 119, 140, 141, 142, 143, 144, 145, 147, 166, 167, 168, 170, 171, 172, 173, 174, 177, 181, 182, 183, 184, 185, 208, 216, 217, 218, 231, 233, 234, 237, 240, 243, 244, 278, 299, 300, 302, 303], "beyond": [8, 88], "bia": [102, 103, 104, 114, 116, 123, 125, 126, 140, 141, 142, 143, 144, 145, 166, 167, 168, 177, 179, 187, 188, 189, 190, 191, 192, 193, 211, 212, 213, 214, 215], "bias": [166, 167, 168, 179, 193, 205], "bias1": 89, "bias2": 89, "big": [143, 144, 145], "bilinear": [113, 115, 138, 176, 180], "bilinearmodel": 177, "binari": [99, 117, 162, 170, 171, 172, 173, 174, 181], "binary_cross_entropi": [113, 120], "block": [23, 24, 25, 26, 27, 32, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 82, 85, 106, 140, 141, 142, 147, 166, 167, 168, 222], "block1": [83, 205], "block2": [83, 205], "block_arg": [40, 58], "block_config": 23, "blue": 299, "bmatrix": 241, "bn": [140, 141, 142], "bn_affin": [140, 141, 142], "bool": [1, 5, 6, 20, 28, 29, 30, 40, 83, 85, 86, 107, 108, 109, 110, 111, 123, 125, 138, 140, 141, 142, 143, 144, 145, 166, 167, 168, 177, 179, 187, 188, 189, 190, 191, 192, 193, 211, 212, 216, 220, 226, 227, 228, 230, 232, 244, 245, 246, 247, 248, 249, 250, 251, 252, 264, 265, 266, 273, 278, 279, 295], "both": [102, 116, 128, 130, 134, 140, 158, 166, 167, 196, 198, 199, 201, 202, 235, 236, 237, 241, 245, 284, 303], "bottleneck": [23, 40, 41, 42, 43, 45, 46, 48, 49, 50, 51, 146], "bottom": 138, "bound": [152, 154, 156, 217, 230], "box": 4, "branch": [28, 29, 30, 82, 147], "break": 205, "brief": 305, "bright": 305, "broadcast": [173, 174, 265, 273, 278, 288, 292], "buffer": [208, 214, 216, 218], "build": [8, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 51, 68, 69, 70, 71, 82, 85, 88, 91, 205, 305], "built": [3, 8, 41, 45, 46, 91, 205], "burg": 6, "c": [6, 40, 52, 53, 54, 55, 56, 57, 69, 70, 71, 106, 109, 110, 111, 118, 122, 123, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 146, 173, 174, 182, 185, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 221, 282, 293, 297], "c_": [166, 167, 168], "c_in": [102, 103, 104, 140, 141, 142], "c_out": [102, 103, 104], "calcul": [0, 1, 8, 9, 86, 209, 210, 213, 214, 215, 222, 227, 232], "calculu": [10, 17], "call": [1, 85, 220, 223, 233, 234, 237, 238, 239, 240, 242, 243], "callabl": [206, 223, 294], "can": [0, 2, 3, 4, 8, 10, 12, 14, 15, 17, 18, 20, 40, 49, 50, 64, 65, 66, 67, 78, 79, 82, 83, 84, 86, 87, 88, 89, 90, 91, 96, 102, 103, 104, 139, 147, 158, 159, 164, 166, 167, 168, 190, 191, 192, 199, 200, 201, 202, 203, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 221, 222, 224, 230, 231, 232, 237, 246, 247, 248, 249, 251, 252, 265, 273, 278, 282, 284, 285, 287, 288, 291, 292, 293, 294, 295, 298, 300, 301, 302, 305], "cannot": [11, 12, 14, 15, 18, 19, 20], "capabl": [8, 244, 245, 248, 249, 250, 251, 252], "capac": [49, 50, 51, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 72, 82], "captur": [68, 82, 106, 166, 167, 168, 177], "cardin": [51, 52, 53, 54, 55, 56, 57, 68, 82], "care": 222, "cartesian": 284, "case": [3, 16, 36, 93, 96, 97, 98, 157, 159, 160, 161, 183, 184, 185, 198, 199, 200, 201, 202, 203, 205, 210, 215, 217, 221, 238, 239, 254, 258, 264, 266, 268, 285, 305], "categori": [5, 41, 42, 43, 44, 45, 46, 47, 48], "caus": [3, 17, 208, 216, 218], "cautiou": 0, "cdot": [10, 11, 14, 15, 16, 19, 93, 94, 96, 98, 99, 102, 103, 104, 114, 116, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 146, 155, 156, 158, 162, 170, 177, 179, 181, 182, 183, 185, 187, 188, 189, 190, 191, 192, 193, 209, 210, 211, 212, 213, 214, 215, 217, 235, 236, 237, 240, 242], "center": [139, 164, 216, 296, 305], "centercrop": [304, 305], "central": 224, "certain": [11, 94, 114, 177, 211, 212, 220, 264, 266], "chain": [14, 15, 91, 294, 305], "challeng": [5, 82], "cham": 82, "chanc": [299, 300, 302], "chang": [119, 183, 217, 221, 222, 223, 286, 288, 292, 299, 305], "channel": [23, 36, 37, 38, 39, 40, 51, 52, 53, 54, 55, 56, 57, 62, 64, 65, 66, 67, 72, 73, 78, 82, 102, 103, 104, 106, 109, 110, 111, 123, 125, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 166, 167, 168, 173, 174, 187, 188, 189, 190, 191, 192, 195, 198, 199, 200, 201, 202, 203, 297, 299, 303], "character": [49, 50], "check": [220, 296, 298], "checkpoint": 207, "choic": 284, "choleski": 13, "chollet": 82, "choos": 82, "chosen": 170, "christian": 82, "christoph": 6, "clariti": 224, "class": [3, 4, 8, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 79, 81, 83, 100, 118, 122, 205, 207, 223, 245, 248, 279, 305], "classic": 39, "classif": [4, 5, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 99, 100, 117, 118, 122, 162, 163, 181, 182, 185], "classifi": [21, 28, 29, 30, 36, 37, 38, 39, 40, 51, 68, 73, 78, 80], "cleaner": [1, 222, 237], "clear": [86, 232, 246, 247], "clearli": 224, "clf_in_featur": 36, "clf_layer": 36, "clip": [139, 217, 253], "clockwis": 139, "close": [14, 17, 161, 181, 216], "closer": 157, "closur": [206, 207], "cloth": 5, "cnn": 82, "co": [253, 269], "code": [15, 87, 89, 91, 220, 222, 224, 231], "coeffici": [19, 138, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218], "col": 106, "collect": [4, 9, 82, 87, 88, 90, 91, 207], "color": [299, 305], "colorjitt": 305, "column": [11, 12, 14, 18, 19, 20, 83, 106, 248, 282, 284], "com": [5, 6], "combin": [1, 3, 31, 32, 33, 72, 82, 88, 91, 93, 94, 140, 141, 142, 146, 147, 158, 182, 205, 214, 215, 265, 273, 278, 280, 305], "combined_dataset": [0, 1], "common": [106, 139, 207, 305], "commonli": [8, 94, 99, 100, 101, 102, 104, 114, 121, 123, 125, 139, 146, 155, 156, 163, 168, 181, 184, 185, 198, 199, 200, 201, 202, 203, 221, 224, 249, 289, 295, 296, 297, 298, 300, 301, 302, 305], "compar": [49, 50, 80, 231, 290], "compat": [4, 9, 68, 178, 193, 205, 221, 231, 295, 305], "complex": [2, 3, 8, 12, 34, 40, 43, 46, 47, 60, 62, 83, 87, 88, 91, 97, 160, 201, 203, 205, 207, 305], "compon": [17, 28, 29, 30, 31, 32, 33, 34, 85, 88, 207, 232, 305], "compos": [5, 6, 78, 166, 167, 168, 198, 199, 200, 201, 202, 203, 205, 305], "comprehens": 3, "compris": [49, 50], "comput": [8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 40, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 66, 67, 72, 82, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 106, 114, 116, 117, 118, 119, 121, 122, 123, 125, 127, 128, 129, 138, 140, 141, 142, 143, 144, 145, 146, 147, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 216, 220, 221, 222, 224, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 249, 250, 251, 252, 254, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 284, 285, 287, 291, 295, 305], "computation": [3, 17, 41], "compute_loss": [207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218], "concaten": [0, 102, 103, 104, 282, 283, 290, 293], "concept": [8, 17, 82], "condit": [10, 11, 14], "confer": 82, "config": 73, "configur": [22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 79, 81, 90, 140, 141, 142], "conjunct": [106, 185], "connect": [21, 23, 24, 25, 26, 27, 31, 32, 33, 34, 36, 37, 38, 39, 40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 68, 69, 70, 71, 73, 78, 80, 82, 116, 146, 147, 166, 167, 168, 179], "consecut": 73, "consid": [3, 14, 17, 23, 91, 151, 152, 155, 156, 205, 217, 220, 246, 247, 305], "consider": 17, "consist": [2, 4, 5, 21, 37, 38, 39, 40, 84, 127, 128, 129, 147, 195, 196, 197, 224, 229, 231, 285, 296, 303, 305], "consistent_tensor": 231, "consol": 83, "constant": [117, 118, 123, 125, 126, 150, 161, 181, 182, 187, 188, 189, 190, 191, 192, 193, 209, 210, 211, 212, 213, 214, 215, 216, 224, 285], "constant_pad": 285, "constraint": [1, 147], "construct": [8, 24, 25, 26, 27, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 69, 70, 71, 74, 75, 76, 77, 88, 205, 245, 287, 291], "constructor": [24, 25, 26, 27, 49, 50, 64, 65, 66, 67, 72, 74, 75, 76, 77], "contain": [1, 5, 6, 11, 12, 17, 18, 19, 20, 32, 36, 40, 51, 52, 53, 54, 55, 56, 57, 58, 68, 73, 83, 85, 87, 88, 89, 90, 91, 100, 106, 114, 116, 117, 118, 122, 138, 181, 182, 185, 206, 233, 234, 235, 236, 238, 239, 240, 241, 243, 244, 247, 254, 255, 256, 257, 259, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 281, 284], "content": 139, "context": [220, 222], "contextmanag": 222, "contigu": 286, "continu": [159, 228], "contrast": [190, 191, 192, 305], "contribut": [138, 170, 171, 172, 173, 174, 198, 201, 202, 203, 208, 214, 276], "control": [51, 147, 157, 183, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 231, 295, 305], "conv": [32, 58, 140, 141, 142, 188, 189], "conv1": [37, 38, 39, 91, 166, 167, 168, 198, 199, 200, 201, 202, 203], "conv1d": [105, 113, 140, 143, 169, 176, 198, 201], "conv1dmodel": 166, "conv2": [37, 38, 39, 91, 166, 167, 168], "conv2d": [88, 91, 105, 113, 141, 144, 169, 176, 188, 199, 202, 205], "conv2dmodel": 167, "conv3d": [105, 113, 142, 145, 169, 176, 189, 200, 203], "conv3dmodel": 168, "conv_bia": [140, 141, 142], "conv_config": 73, "conv_lay": [36, 88], "convblock": 205, "convbnrelu1d": 148, "convbnrelu2d": 148, "convbnrelu3d": 148, "conveni": [4, 22, 81], "convent": 237, "converg": [17, 164, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 297], "convers": [182, 185, 299, 305], "convert": [5, 6, 73, 84, 86, 100, 163, 232, 284, 294, 295, 299, 305], "convnetwork": 88, "convolut": [21, 22, 23, 29, 30, 32, 36, 37, 38, 39, 40, 51, 52, 53, 54, 55, 56, 57, 58, 64, 65, 66, 67, 68, 72, 73, 78, 80, 81, 82, 88, 102, 103, 104, 106, 140, 141, 142, 143, 144, 145, 146, 147, 166, 167, 168, 199, 200, 202, 203, 285], "convolv": [102, 103, 104, 166, 167, 168], "coordin": 284, "core": [0, 1, 2, 3, 85, 205, 206, 232, 305], "corinna": 6, "corner": [138, 296, 298], "correct": [87, 182, 185, 211, 212, 213, 214, 215, 295], "correctli": [17, 85, 87, 88, 89, 90, 91, 182, 185, 231], "correspond": [0, 1, 2, 5, 6, 12, 49, 50, 69, 70, 71, 87, 89, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 114, 116, 138, 160, 163, 177, 179, 187, 188, 189, 190, 191, 192, 199, 200, 208, 216, 218, 235, 236, 238, 239, 242, 262, 263, 269, 271, 282, 285, 287, 291, 293], "cort": 6, "cosh": [253, 270, 275], "cosin": [255, 259, 260, 269], "cost": [51, 82, 143, 144, 145], "could": 85, "count": [82, 83, 280], "counterclockwis": [139, 301], "cover": [9, 102, 103, 104], "coverag": [127, 128, 129], "creat": [2, 3, 8, 21, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 88, 91, 147, 205, 221, 223, 231, 244, 248, 249, 250, 251, 252, 284, 290, 294, 305], "creation": [88, 91, 305], "criterion": [181, 182, 183, 184, 185], "critic": [17, 207, 231], "crop": [296, 298, 305], "cross": [117, 118, 181, 182], "cross_entropi": [113, 120], "crossentropyloss": [176, 186], "cube": 253, "cumul": [94, 158], "current": [85, 208, 211, 217, 220], "custom": [4, 8, 21, 22, 23, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 73, 79, 80, 81, 84, 87, 88, 89, 90, 91, 139, 140, 141, 142, 157, 159, 205, 231, 248], "custom_config": 73, "custom_lenet": 36, "customiz": 305, "custommodul": 84, "customnetwork": 87, "customparametermodel": [89, 90], "cvpr": 82, "d": [82, 104, 111, 129, 132, 136, 142, 189, 192, 193, 197, 200, 203, 221, 245, 301], "d_": [104, 129, 132, 136, 168, 197, 200, 203], "d_1": 193, "d_2": 193, "d_n": 193, "d_out": [104, 132, 136], "dampen": [208, 216, 218], "data": [4, 5, 6, 8, 15, 84, 86, 90, 101, 102, 104, 106, 110, 111, 116, 139, 140, 141, 142, 147, 160, 164, 166, 167, 168, 179, 192, 198, 200, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 224, 231, 232, 233, 234, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 279, 285, 286, 287, 288, 289, 291, 294, 295, 298, 299, 300, 301, 302, 305], "databas": 6, "dataload": [2, 3], "dataset": [3, 5, 6, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 139, 210, 222, 294, 296, 305], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 241, "debug": [83, 91, 220, 229, 305], "decai": [208, 209, 210, 211, 212, 213, 214, 215, 216, 218], "decompos": [10, 18, 20], "decomposit": [9, 10, 14, 17, 18, 20], "decor": [52, 53, 54, 55, 56, 57, 223], "decoupl": [82, 209, 210, 212, 213, 214, 215], "decreas": [211, 212, 217], "deep": [1, 3, 4, 8, 32, 40, 41, 42, 43, 45, 46, 52, 53, 54, 55, 56, 57, 59, 60, 63, 82, 123, 158, 161, 205, 231, 294, 295, 305], "deeper": [8, 29, 31, 34, 40, 47, 82, 161], "def": [0, 1, 2, 3, 8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 177, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295], "default": [1, 5, 6, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 93, 96, 100, 102, 103, 104, 107, 108, 109, 110, 111, 117, 118, 119, 121, 122, 123, 125, 126, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 159, 163, 166, 167, 168, 170, 171, 172, 173, 174, 177, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 198, 199, 200, 201, 202, 203, 206, 207, 214, 220, 226, 227, 228, 230, 232, 244, 245, 246, 247, 248, 249, 250, 251, 252, 264, 265, 266, 273, 277, 278, 279, 280, 282, 284, 285, 287, 290, 293, 295, 299, 300, 302], "defin": [1, 3, 4, 8, 23, 28, 29, 30, 31, 32, 33, 34, 36, 40, 58, 69, 70, 71, 73, 87, 88, 89, 90, 91, 158, 181, 182, 183, 184, 185, 198, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 224, 227, 228, 242, 247, 258, 277, 294, 305], "definit": [8, 10, 140, 141, 142, 305], "degre": [139, 301, 305], "delai": 208, "delta": [100, 119, 163, 183, 209], "delta_": [100, 163], "demonstr": [8, 9, 64, 65, 66, 67, 72, 82, 205, 224], "denomin": [123, 125, 126, 140, 141, 142, 187, 188, 189, 190, 191, 192, 193, 209, 210, 211, 212, 213, 214, 215, 216, 234], "denot": [15, 162, 166, 167, 168, 170, 171, 172, 173, 174, 277], "dens": [8, 23, 24, 25, 26, 27, 82, 210], "dense1": 8, "dense2": 8, "densenet": [24, 25, 26, 27, 35, 82, 146], "densenet_121": 82, "densenet_169": 82, "densenet_201": 82, "densenet_264": 82, "densiti": [94, 158], "depend": [8, 15, 16, 90, 117, 118, 119, 121, 122, 138, 166, 235, 245, 264, 266, 287, 291, 298, 299, 303], "depth": [88, 104, 111, 129, 132, 136, 168, 189, 192, 197, 200, 203], "depthseparableconv1d": 148, "depthseparableconv2d": 148, "depthseparableconv3d": 148, "depthwis": [78, 82, 102, 103, 104, 143, 144, 145], "depthwise_separ": [143, 144, 145], "der": 82, "deriv": [17, 18, 100, 127, 128, 129, 158, 163, 164, 166, 167, 168, 177, 179, 223], "descend": 20, "descent": [8, 208, 218], "describ": [11, 12], "descript": 305, "deseri": 84, "design": [3, 4, 8, 9, 21, 22, 29, 30, 31, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 59, 62, 78, 81, 82, 86, 88, 89, 90, 91, 93, 98, 161, 170, 205, 224, 305], "desir": [79, 84, 127, 128, 129, 195, 196, 197, 277, 279], "destin": 85, "det": [9, 13], "det_a": 11, "detail": [8, 83, 207, 231, 237], "detect": 82, "determin": [0, 8, 9, 10, 11, 36, 49, 50, 127, 128, 129, 151, 152, 155, 156, 166, 167, 168, 195, 196, 197, 199, 200, 202, 203, 216, 220, 226, 227, 228, 230, 246, 247, 296, 298], "determinist": 139, "develop": [8, 205, 231, 305], "deviat": [151, 153, 155, 294, 297, 305], "diag": [17, 253], "diagon": [17, 18, 20, 245, 248, 276], "diagonaliz": 12, "dict": [22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 40, 49, 50, 52, 53, 54, 55, 56, 57, 58, 64, 65, 66, 67, 69, 70, 71, 72, 79, 81, 85, 87, 89, 178, 206], "dictionari": [36, 85, 86, 87, 89, 91, 206], "differ": [0, 15, 28, 36, 64, 65, 66, 67, 72, 88, 91, 100, 114, 138, 147, 163, 177, 184, 207, 221, 229, 231, 243, 252, 278, 289, 305], "differenti": [8, 10, 19, 158, 205, 226, 227, 228, 230, 232, 244, 246, 247, 249, 251], "digit": [5, 6, 39, 82], "dilat": [102, 103, 104, 140, 141, 142, 143, 144, 145, 166, 167, 168], "dilation_height": 106, "dilation_width": 106, "dim": [182, 185], "dimens": [11, 12, 14, 15, 18, 19, 20, 21, 40, 51, 68, 73, 80, 82, 86, 100, 114, 116, 123, 125, 126, 128, 129, 138, 146, 147, 163, 166, 167, 168, 187, 188, 189, 190, 191, 192, 193, 196, 197, 199, 200, 201, 202, 203, 221, 224, 226, 230, 232, 236, 246, 264, 265, 266, 273, 276, 277, 278, 280, 282, 285, 287, 289, 290, 291, 292, 293, 296, 298, 303], "dimension": [15, 17, 18, 20, 102, 103, 104, 130, 131, 132, 134, 135, 136, 147, 166, 167, 168, 172, 173, 174, 187, 188, 189, 190, 191, 192, 198, 199, 200, 201, 202, 203, 221, 236, 237, 241, 245, 262, 265, 273, 276, 278, 281, 286, 287, 289, 291], "diminish": 210, "direct": [12, 181, 182, 183, 184, 185, 208, 216, 217, 218], "directli": [82, 87, 88, 89, 90, 138, 209, 210, 212, 213, 214, 215, 229, 231, 279, 305], "directori": [3, 4, 5, 6], "disabl": [220, 222], "discontinu": 268, "discrep": [181, 182, 185], "discret": [227, 231], "disk": 3, "displai": [22, 81, 83], "distribut": [94, 100, 138, 151, 152, 153, 154, 155, 156, 158, 163, 166, 167, 168, 170, 171, 172, 173, 174, 177, 179, 182, 185, 198, 199, 200, 226, 227, 228, 230, 231, 265, 273, 276, 278, 290, 297, 299, 300, 301, 302], "div": 253, "divers": [139, 300, 302, 305], "diversifi": 305, "divid": [1, 17, 88, 91, 100, 102, 103, 104, 163, 181, 182, 183, 184, 185, 234, 297], "divis": [8, 17, 102, 103, 104, 170, 171, 172, 173, 174, 209, 210, 211, 212, 213, 214, 215, 216, 234], "do": [17, 19, 84, 87, 88, 89, 90, 107, 108, 109, 110, 205, 215, 220, 252, 276, 285], "document": [4, 8, 82, 207, 224, 231], "doe": [8, 15, 16, 17, 18, 20, 83, 84, 87, 88, 89, 90, 91, 156, 211, 212, 217, 220, 222, 226, 227, 228, 229, 230, 244, 245, 246, 247, 248, 249, 250, 251, 252, 288], "doesn": 222, "doi": 82, "domain": 4, "don": 222, "dot": [12, 15, 87, 88, 89, 90, 91, 193, 201, 202, 203, 236, 241, 253, 280, 282, 290, 293], "down": [3, 205, 303], "download": [4, 5, 6], "drawback": 93, "drawn": [226, 227, 228, 230, 231, 301], "drop": [170, 171, 172, 173, 174], "dropout": [21, 30, 73, 80, 82, 94, 107, 109, 110, 111, 170, 172, 173, 174], "dropout1d": [112, 113, 175, 176], "dropout1dmodel": 172, "dropout2d": [112, 113, 175, 176], "dropout3d": [112, 113, 175, 176], "dropout_prob": 30, "dropoutmodel": 171, "dtype": [84, 86, 232, 244, 245, 246, 247, 248, 249, 250, 251, 252, 279, 295], "due": [15, 17, 23, 102, 103, 160, 301], "dummi": 83, "duplic": [87, 89], "dure": [3, 8, 11, 12, 14, 17, 18, 20, 28, 29, 30, 40, 82, 84, 85, 86, 87, 88, 89, 90, 91, 100, 107, 108, 109, 110, 111, 123, 125, 139, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 198, 199, 200, 201, 202, 203, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 220, 222, 232, 233, 264, 265, 266, 273, 278, 295, 298, 301, 305], "dy": [96, 159], "dynam": [0, 2, 3, 68, 72, 82, 85, 88, 89, 90, 91, 127, 128, 129, 147, 193, 195, 196, 197, 210, 215, 220], "dynamicnetwork": 88, "e": [0, 11, 12, 14, 15, 18, 20, 29, 30, 31, 33, 34, 36, 37, 38, 39, 73, 84, 100, 147, 162, 163, 170, 182, 206, 209, 216, 217, 248, 260, 262, 263, 270, 275, 276, 280, 299], "each": [1, 2, 3, 4, 12, 15, 17, 18, 20, 21, 23, 36, 40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 68, 69, 70, 71, 73, 80, 82, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 114, 116, 123, 125, 127, 128, 129, 146, 147, 160, 163, 166, 167, 168, 170, 171, 172, 173, 174, 177, 179, 181, 182, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 209, 210, 211, 212, 213, 214, 215, 216, 217, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 265, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 280, 282, 284, 285, 287, 290, 291, 293, 294, 295, 296, 297, 298, 299, 301, 303, 305], "earli": 215, "eas": [4, 8], "easi": [2, 3, 4, 8, 52, 53, 54, 55, 56, 57, 86, 87, 89], "easier": [3, 87, 88, 91], "easili": [4, 86, 90, 305], "eccv": 82, "economi": 20, "edg": 285, "educ": [8, 82], "effect": [82, 87, 88, 89, 90, 91, 100, 102, 103, 104, 106, 157, 158, 160, 162, 163, 164, 187, 188, 189, 190, 191, 192, 193, 220, 221, 222, 282, 293], "effici": [1, 2, 3, 5, 6, 8, 9, 14, 19, 33, 34, 51, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 72, 78, 82, 106, 143, 144, 145, 182, 205, 222], "eig": 13, "eigenvalu": [12, 18], "eigenvector": 12, "eigval": 12, "eigvec": 12, "either": [116, 224, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 279, 284], "element": [0, 17, 18, 30, 86, 90, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 140, 141, 142, 143, 144, 145, 146, 160, 163, 166, 167, 168, 170, 171, 172, 173, 174, 181, 182, 183, 184, 185, 193, 198, 199, 200, 201, 202, 203, 221, 232, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 278, 281, 284, 285, 287, 288, 289, 291], "elementwise_affin": 193, "elsewher": [201, 202, 203, 248], "elu": [95, 113, 165, 176], "elumodel": 157, "empti": [85, 91, 253], "empty_lik": 253, "enabl": [0, 1, 2, 3, 8, 15, 20, 33, 68, 69, 70, 71, 82, 85, 86, 87, 88, 89, 90, 160, 166, 167, 168, 177, 179, 205, 207, 220, 222, 226, 227, 228, 230, 232, 294], "encapsul": [205, 232], "encod": [182, 185], "encourag": [171, 172, 173, 174, 181, 182, 185, 211], "end": [16, 93, 96, 97, 98, 157, 159, 160, 161, 183, 184, 185, 198, 199, 200, 201, 202, 203, 215, 217, 238, 239, 241, 244, 254, 258, 264, 266, 268, 280, 285, 305], "enforc": [85, 87, 89], "engin": 17, "enhanc": [30, 31, 33, 34, 38, 49, 50, 64, 65, 66, 67, 72, 80, 81, 82, 87, 89, 147, 305], "ensur": [3, 5, 6, 17, 18, 19, 84, 85, 86, 87, 88, 89, 90, 91, 100, 127, 128, 129, 140, 141, 142, 159, 163, 170, 171, 172, 173, 174, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 199, 200, 201, 202, 203, 205, 206, 208, 209, 211, 212, 214, 215, 216, 217, 218, 220, 221, 222, 224, 226, 227, 228, 229, 230, 231, 242, 265, 273, 278, 285, 295, 296, 297, 298, 299, 303, 305], "enter": 222, "entir": [3, 109, 110, 111, 173, 174, 231], "entri": [36, 289], "entropi": [117, 118, 181, 182], "environ": 8, "ep": [117, 118, 123, 125, 126, 140, 141, 142, 181, 182, 187, 188, 189, 190, 191, 192, 193, 209, 210, 211, 212, 213, 214, 215, 216], "epoch": [1, 3], "epsilon": [181, 182, 187, 188, 189, 190, 191, 192, 193, 209, 210, 211, 212, 213, 214, 215, 216], "equal": [15, 138, 198, 199, 200, 296, 298], "equat": [12, 17, 19], "equival": [237, 276, 286], "error": [0, 3, 12, 14, 85, 88, 89, 90, 91, 94, 119, 121, 158, 181, 182, 183, 184, 205, 206, 222, 224], "especi": [3, 87, 89, 90, 162, 221, 222, 224, 229, 294, 295, 299, 305], "essenti": [1, 3, 8, 9, 15, 17, 32, 103, 106, 205, 229, 231, 264, 294, 295, 299, 305], "estim": [184, 211, 212, 213, 214, 215, 216], "et": [29, 82], "eta": 217, "eta_": 217, "etc": [23, 181, 295], "euclidean": 16, "european": 82, "evalu": [85, 123, 125, 170, 171, 172, 173, 174, 187, 188, 189, 190, 191, 192, 305], "even": [209, 222, 244, 245, 248, 249, 250, 251, 252], "evenli": [127, 128, 129, 195, 196, 197, 244], "everi": [1, 305], "everywher": 268, "exact": [85, 88, 277, 299, 301], "exactli": 91, "exampl": [4, 237], "excel": 31, "except": [0, 268, 280, 282, 293], "excit": [58, 61, 64, 65, 66, 67, 82, 146], "exclus": [227, 230, 244], "exdb": 6, "execut": [88, 222], "exist": [19, 87, 89, 91, 223, 280], "exit": 222, "exp": [93, 98, 99, 101, 157, 161, 253], "expand": [4, 106, 287, 291], "expect": [10, 88, 91, 170, 171, 172, 173, 174, 193, 205, 224], "expens": 3, "experi": [8, 229, 231, 305], "experiment": 231, "explan": [15, 17, 21, 73, 80, 127, 128, 129, 195, 196, 197, 208], "explicit": 91, "explicitli": [82, 87, 89], "explod": [161, 187, 188, 189], "explor": [205, 231], "expon": [15, 242], "exponenti": [93, 98, 100, 157, 161, 163, 170, 211, 212, 213, 214, 215, 262], "extend": [4, 51, 68], "extens": [82, 207], "extern": [4, 8], "extract": [28, 32, 40, 51, 68, 78, 82, 106, 168, 198, 200, 223, 245, 264, 266, 296, 298], "extractor": [36, 37, 38, 39, 78], "extrem": [17, 41, 82], "ey": 253, "f": [1, 4, 5, 6, 8, 82, 89, 90, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 163], "f_1": 146, "f_2": 146, "facilit": [28, 87, 91, 100, 163, 166, 167, 168, 205, 207, 297, 305], "factor": [30, 93, 102, 103, 104, 106, 146, 155, 156, 208, 215, 216, 217, 218, 224], "factori": 79, "failur": [87, 88, 89, 90, 205], "fals": [1, 5, 6, 20, 40, 83, 84, 85, 86, 107, 108, 109, 110, 111, 123, 125, 138, 149, 151, 152, 153, 154, 155, 156, 166, 167, 168, 177, 179, 211, 212, 216, 220, 226, 227, 228, 230, 232, 244, 245, 246, 247, 248, 249, 250, 251, 252, 264, 265, 266, 273, 278, 279, 295], "famili": 223, "fan": [151, 152, 155, 156], "fan_in": [151, 152], "fan_out": [151, 152], "fashion": 5, "fashion_train": 5, "fashionmnist": 7, "fast": 215, "faster": [210, 214, 222], "fc": [32, 40, 51, 58, 68, 88, 146, 167, 168, 198, 199, 200, 201, 202, 203], "fc1": [38, 39, 83, 87, 91, 158, 160, 161, 162, 164, 179], "fc2": [38, 39, 83, 87, 91, 158, 160, 161, 162, 164, 179], "fc3": 39, "featur": [3, 21, 23, 28, 31, 32, 36, 37, 38, 39, 40, 51, 52, 53, 54, 55, 56, 57, 59, 61, 62, 68, 69, 70, 71, 73, 78, 80, 81, 82, 114, 116, 123, 140, 141, 142, 146, 147, 168, 171, 172, 173, 174, 177, 179, 187, 188, 189, 190, 191, 192, 193, 198, 199, 200, 201, 202, 203, 205, 210], "feature_extractor": 36, "fed": [3, 305], "feed": [3, 232, 305], "feedforward": 83, "fergu": [80, 82], "fetch": 0, "few": 83, "fewer": 1, "field": [6, 68, 72, 82, 147], "file": [3, 223], "fill": [149, 153, 154, 226, 227, 228, 230, 249, 250, 251, 252], "filter": [80, 82, 102, 103, 104, 106, 140, 141, 142, 167, 168], "filter_height": 106, "filter_s": 106, "filter_width": 106, "final": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 68, 69, 70, 71, 87, 88, 89, 90, 91, 147, 294, 305], "find": [19, 264, 266], "fine": [146, 305], "finish": 222, "first": [5, 6, 12, 36, 80, 83, 88, 89, 114, 146, 177, 211, 212, 213, 214, 215, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 284, 293, 294, 295, 305], "fit": 205, "fix": [88, 285], "flatten": [32, 36, 91, 106, 241, 283, 286, 287], "flexibl": [1, 3, 4, 8, 28, 32, 33, 34, 36, 40, 64, 65, 66, 67, 72, 73, 78, 82, 87, 88, 89, 90, 91, 205, 207, 224, 249, 250, 295, 305], "flip": [300, 302, 305], "float": [2, 5, 6, 30, 84, 86, 93, 96, 107, 108, 109, 110, 111, 117, 118, 119, 123, 125, 126, 139, 140, 141, 142, 149, 153, 154, 155, 156, 157, 159, 170, 171, 172, 173, 174, 181, 182, 183, 187, 188, 189, 190, 191, 192, 193, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 224, 230, 232, 244, 247, 258, 279, 297, 299, 300, 301, 302], "float32": [84, 86, 232, 244, 245, 248, 249, 251, 279, 295], "float64": [252, 279, 295], "flow": [31, 32, 58, 82, 91, 156, 158, 162, 164, 166, 167, 168, 177, 179, 220], "fly": [2, 3], "fname": 3, "focu": 8, "focus": 8, "follow": [0, 8, 9, 12, 18, 19, 20, 21, 24, 25, 26, 27, 64, 65, 66, 67, 72, 73, 78, 80, 83, 93, 94, 96, 97, 98, 99, 100, 101, 114, 116, 138, 140, 141, 142, 143, 144, 145, 146, 147, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 223, 224, 231, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 264, 266, 284, 288, 296, 297, 298, 299, 300, 301, 302, 305], "form": [18, 147, 241, 284, 287, 291, 305], "format": [2, 3, 5, 6, 83, 182, 185, 295], "formul": 94, "formula": [12, 20, 100, 127, 128, 129, 163, 183, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 237, 278, 299], "forward": [8, 21, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 69, 70, 71, 72, 73, 80, 83, 84, 85, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218], "found": 8, "foundat": [32, 58, 85, 205, 207, 232], "four": [24, 25, 26, 27, 285], "frac": [10, 11, 12, 14, 15, 16, 17, 19, 20, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 114, 116, 127, 128, 129, 130, 131, 132, 134, 135, 136, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 198, 199, 200, 201, 202, 203, 209, 210, 211, 212, 213, 214, 215, 216, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 297], "frame": 111, "framework": [4, 8, 82, 182, 185, 187, 188, 189, 190, 191, 192, 206, 207, 305], "frequent": [182, 185], "from": [0, 1, 2, 3, 4, 5, 6, 8, 15, 17, 23, 24, 25, 26, 27, 32, 40, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 83, 84, 85, 86, 87, 88, 89, 90, 91, 106, 114, 123, 125, 138, 140, 141, 142, 146, 147, 149, 151, 152, 153, 154, 155, 156, 166, 167, 168, 170, 171, 172, 173, 174, 177, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 198, 199, 200, 205, 206, 208, 209, 210, 212, 213, 214, 215, 216, 217, 218, 221, 222, 223, 224, 226, 227, 228, 230, 231, 232, 237, 238, 239, 243, 245, 264, 265, 266, 273, 278, 280, 282, 284, 287, 289, 290, 291, 293, 296, 297, 298, 299, 300, 301, 302, 305], "full": 20, "full_matric": 20, "fulli": [4, 9, 21, 23, 24, 25, 26, 27, 32, 36, 37, 38, 39, 40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 68, 69, 70, 71, 73, 78, 80, 82, 116, 146, 147, 179, 231], "func": 223, "function": [3, 4, 5, 6, 8, 9, 85, 87, 88, 89, 90, 91, 140, 141, 142, 146, 157, 158, 159, 160, 161, 162, 163, 164, 170, 171, 172, 173, 174, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 205, 207, 224, 231, 294, 305], "fundament": [8, 116, 179, 295], "further": [8, 231, 265, 273, 278], "fuse": 68, "fusion": [69, 70, 71], "futur": 178, "g": [0, 11, 12, 15, 18, 20, 29, 30, 31, 33, 34, 36, 37, 38, 39, 73, 82, 146, 147, 170, 206, 209, 216, 280, 299], "g_": 210, "g_t": 216, "gain": [155, 156], "gamma": [187, 188, 189, 190, 191, 192, 193], "gap": [40, 51, 68, 146], "gaussian": [94, 158], "gelu": [95, 113, 165, 176], "gelunetwork": 158, "gener": [17, 83, 139, 170, 171, 172, 173, 174, 191, 212, 214, 215, 222, 226, 227, 228, 229, 230, 231, 236, 244, 246, 247, 284, 298, 299, 300, 302, 305], "get": [5, 6], "github": 5, "give": [8, 208, 216], "given": [11, 12, 15, 17, 18, 20, 106, 181, 182, 185, 206, 220, 250, 252, 294, 299, 300, 302, 305], "global": [0, 40, 51, 58, 68, 146, 220, 222, 229, 231], "go": [29, 82], "goal": [181, 182, 185], "googlenet": [29, 82], "gpu": 82, "grad": [84, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 106, 114, 116, 138, 143, 144, 145, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 198, 199, 200, 201, 202, 203, 206, 207, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 297, 298, 300, 302, 303], "grad_output": 15, "gradient": [8, 9, 31, 32, 82, 84, 86, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 226, 227, 228, 230, 244, 245, 246, 247, 248, 249, 250, 251, 252, 279, 295], "grain": 146, "graph": [8, 156, 232, 244, 245, 248, 249, 250, 251, 252, 295], "grayscal": [5, 6, 36, 37, 38, 39, 299, 305], "greater": 258, "green": 299, "grid": 284, "groundbreak": 82, "group": [51, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 68, 72, 82, 88, 102, 103, 104, 140, 141, 142, 147, 166, 167, 168, 206, 207], "group1": 88, "group2": 88, "groupedconvblock": 51, "growth_rat": [23, 24, 25, 26, 27], "guarante": 229, "h": [40, 52, 53, 54, 55, 56, 57, 69, 70, 71, 103, 104, 106, 110, 111, 128, 129, 131, 132, 135, 136, 138, 139, 141, 142, 146, 188, 189, 191, 192, 196, 197, 200, 203, 296, 298], "h_": [103, 104, 128, 129, 131, 132, 135, 136, 138, 167, 168, 196, 197, 199, 200, 202, 203], "h_out": [103, 104, 131, 132, 135, 136], "h_stack": 282, "ha": [0, 12, 83, 91, 102, 103, 104, 140, 141, 142, 181, 182, 187, 188, 189, 190, 191, 192, 193, 206, 207, 237, 276, 280, 282, 290, 293, 299], "half": 271, "han": 5, "hand": 19, "handl": [0, 3, 8, 17, 85, 87, 88, 89, 90, 91, 182, 185, 205, 207, 222], "handwritten": [5, 6, 39], "hardwar": 8, "hat": [211, 212, 213, 214, 215], "have": [0, 1, 11, 12, 14, 17, 18, 20, 86, 88, 90, 91, 103, 104, 156, 205, 248, 249, 250, 251, 252, 264, 266, 280, 282, 284, 289, 290, 293, 297, 303], "he": 82, "head": 78, "height": [78, 103, 104, 106, 110, 111, 128, 129, 131, 132, 135, 136, 138, 139, 147, 167, 168, 188, 189, 191, 192, 196, 197, 199, 200, 202, 203, 296, 298, 303], "help": [8, 30, 96, 98, 111, 157, 159, 161, 164, 187, 188, 189, 198, 199, 201, 202, 208, 211, 212, 214, 220, 221, 222, 224], "henc": 288, "here": [3, 10, 85, 114, 205, 207, 221, 222, 224, 231, 294, 295, 305], "hidden": [21, 80, 88], "hidden_s": 88, "hierarch": [88, 91, 205], "hierarchi": 167, "hierarchicalnetwork": 88, "high": [8, 48, 63, 72, 227, 230], "higher": [51, 182, 185, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 236, 237, 241, 262], "highest": 227, "highli": 82, "highlight": [146, 201, 202, 203], "hint": 224, "histor": 210, "histori": [226, 227, 228, 230, 244, 245, 246, 247, 248, 249, 250, 251, 252], "hold": [87, 88, 89, 90], "horizont": [282, 290, 300, 305], "hot": [182, 185], "how": [2, 3, 8, 64, 65, 66, 67, 72, 88, 91, 205, 224, 305], "howev": [84, 156], "hstack": 283, "http": [5, 6], "hu": [82, 146], "huang": 82, "huber": [119, 183], "huber_loss": [113, 120], "huberloss": [176, 186], "huberregressionmodel": 183, "hue": 305, "hyperbol": [101, 164, 260, 270, 275], "hyperparamet": [40, 51, 79, 206, 208], "i": [0, 1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 275, 276, 277, 278, 279, 280, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305], "iccv": 82, "idea": 82, "ideal": [8, 91], "ident": [14, 15, 82, 139, 176, 180, 229, 231, 248, 288], "identifi": 89, "idx": [2, 3], "ieee": [82, 146], "ii": 276, "ij": [100, 138, 163, 235, 236, 237, 241, 284], "ik": [235, 236, 237], "ill": [11, 17], "ilsvrc": 82, "imag": [3, 4, 5, 6, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 61, 62, 63, 64, 65, 66, 67, 72, 81, 82, 103, 125, 139, 141, 146, 167, 191, 284, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305], "image_dir": 3, "image_path": 3, "imagedataset": 3, "imageio": 3, "imagenet": [24, 25, 26, 27, 49, 50, 64, 65, 66, 67, 72, 82], "imbal": [182, 185], "impact": [82, 214], "implement": [2, 3, 8, 17, 21, 23, 28, 29, 30, 31, 33, 34, 36, 40, 49, 50, 52, 53, 54, 55, 56, 57, 58, 78, 80, 82, 85, 106, 143, 144, 145, 147, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 282, 293, 299], "impli": [166, 167], "import": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 49, 50, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 108, 111, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305], "improp": [88, 91, 231], "improv": [29, 30, 31, 32, 34, 40, 51, 64, 65, 66, 67, 68, 80, 82, 123, 139, 146, 158, 161, 164, 208, 209, 210, 211, 212, 213, 214, 215, 216, 224, 298, 301, 305], "imread": 3, "in1_featur": [114, 177], "in2_featur": [114, 177], "in_channel": [40, 88, 91, 140, 141, 142, 143, 144, 145, 146, 147, 166, 167, 168, 188, 189, 198, 199, 200, 201, 202, 203, 205], "in_featur": [87, 88, 91, 116, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 170, 171, 172, 177, 179, 181, 182, 183, 184, 185, 187, 190, 193, 198, 199, 200, 201, 202, 203], "incept": [29, 30, 31, 32, 33, 34, 35, 82], "inception_resnet_v1": 82, "inception_resnet_v2": 82, "inception_v1": 82, "inception_v3": 82, "inception_v4": 82, "inceptionresnet": [33, 34], "includ": [3, 4, 5, 8, 9, 15, 16, 21, 28, 29, 30, 33, 36, 40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 68, 73, 79, 80, 83, 85, 86, 88, 90, 91, 138, 140, 141, 142, 143, 144, 145, 205, 206, 207, 214, 224, 231, 237, 285], "inclus": [86, 89, 227, 230], "incom": [116, 179], "incomplet": 2, "incompletedataset": 2, "incorpor": [20, 51, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 82, 158], "increas": [51, 52, 53, 54, 55, 56, 57, 68, 102, 103, 104, 106, 139, 210, 217, 221, 282, 293, 299, 300, 302, 305], "independ": [88, 102, 103, 104, 170, 171, 172, 173, 174, 193, 237, 247, 297, 299, 301, 303], "index": [0, 2, 5, 6, 221, 244, 245, 248, 284, 288], "indexerror": 0, "indic": [0, 1, 73, 83, 86, 88, 90, 91, 118, 122, 182, 185, 198, 220, 232, 296, 298], "individu": [3, 88, 91, 183, 193, 207, 210, 217], "induc": [98, 161], "inf": 274, "infer": [64, 65, 66, 67, 72, 88, 91, 222], "infin": [18, 20, 213], "inform": [8, 82, 83, 84, 146, 207, 209, 222], "infti": [16, 215], "inherit": [1, 208, 216, 218], "init": 150, "initi": [1, 23, 32, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 74, 75, 76, 77, 79, 84, 86, 87, 88, 89, 90, 91, 147, 149, 151, 152, 153, 154, 155, 156, 166, 167, 168, 177, 179, 181, 182, 183, 184, 185, 187, 188, 189, 193, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 226, 229, 230, 231, 244, 248, 249, 250, 251, 252, 279], "initial_accumulator_valu": 210, "inner": [8, 235, 253], "input": [8, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 51, 64, 65, 66, 67, 68, 72, 78, 80, 82, 83, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 222, 224, 231, 232, 233, 235, 236, 237, 241, 245, 247, 250, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305], "input1": 177, "input2": 177, "input_": [21, 80, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 195, 196, 197], "input_1": 114, "input_2": 114, "input_data": [157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 198, 199, 200, 201, 202, 203], "input_s": [88, 90, 163, 182, 185], "input_shap": 83, "input_tensor": [8, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 69, 70, 71, 72, 73, 78, 84, 87, 88, 89, 90, 91, 100, 143, 144, 145, 146, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 198, 199, 200, 201, 202, 203, 205, 296, 297, 298, 299, 300, 301, 302, 303], "insid": [3, 220, 222], "insight": [8, 82], "inspect": [85, 86, 91, 206], "instabl": [17, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218], "instal": 8, "instanc": [0, 1, 8, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 79, 81, 83, 85, 86, 87, 89, 90, 91, 125, 190, 191, 192, 193, 206, 223, 279, 287, 291, 305], "instance_norm": [113, 124, 190, 191, 192], "instancenorm1d": [176, 194], "instancenorm1dmodel": 190, "instancenorm2d": [176, 194], "instancenorm3d": [176, 194], "instanti": [2, 64, 65, 66, 67, 72, 223], "instead": [8, 83, 87, 88, 89, 90, 91, 151, 152, 155, 156, 211, 212, 213, 222, 224, 246, 247], "int": [0, 1, 2, 5, 6, 15, 16, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 100, 102, 103, 104, 106, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 153, 154, 155, 156, 163, 166, 167, 168, 177, 179, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 211, 212, 213, 214, 215, 217, 223, 226, 227, 228, 229, 230, 232, 244, 245, 246, 248, 249, 251, 258, 264, 265, 266, 273, 277, 278, 279, 280, 285, 287, 288, 289, 290, 291, 292, 296, 298, 303], "integ": [1, 3, 15, 58, 73, 102, 103, 104, 128, 129, 166, 167, 168, 193, 196, 197, 199, 200, 201, 202, 203, 224, 227, 228, 230, 231, 246, 249, 251, 265, 273, 277, 278, 285, 287, 288, 291], "integr": [1, 2, 4, 5, 6, 9, 82, 86, 88, 90, 91, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 177, 179, 198, 199, 200, 201, 202, 203], "intellig": [82, 146], "intend": [84, 89, 90], "intens": [17, 23, 41, 297, 299], "intent": 224, "interact": [114, 177, 205, 231], "interdepend": 82, "interfac": [2, 85, 88, 207], "interfer": [220, 222], "intermedi": [17, 146], "intern": [41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 61, 62, 63, 82, 87, 88, 89, 90, 91, 182, 185, 205, 296, 297, 298, 299, 300, 301, 302, 303], "interpol": [113, 137, 303], "interpret": [82, 100, 163, 224, 280], "interv": [226, 230, 244], "introduc": [29, 30, 51, 82, 97, 146, 158, 160, 162, 164, 170, 171, 172, 173, 174, 298, 301, 305], "introspect": 91, "intuit": [8, 87, 89, 205, 305], "inv": 13, "inv_a": 14, "invari": [199, 202], "invers": [8, 11, 14, 15, 17, 210, 255, 256, 257], "invert": [11, 14, 15, 19], "invok": 223, "involv": [10, 11, 12, 14, 17, 18, 20, 68, 93, 94, 96, 97, 98, 99, 101, 114, 116, 138, 166, 167, 168, 177, 179, 224, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 252, 262, 263, 264, 266, 269, 271, 284, 285, 287, 291], "is_leaf": 232, "issu": [3, 161, 187, 188, 189, 211, 212], "item": [5, 184], "iter": [0, 1, 2, 3, 84, 85, 88, 90, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 244], "ith": [100, 163], "its": [4, 15, 17, 21, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 59, 60, 61, 62, 63, 69, 70, 71, 80, 82, 83, 84, 87, 88, 89, 90, 102, 103, 104, 106, 139, 147, 156, 158, 160, 201, 202, 203, 205, 206, 209, 217, 220, 221, 222, 223, 244, 246, 247, 251, 264, 266, 279, 288, 297, 300, 302, 305], "itself": [10, 15, 87, 88, 89, 90], "j": [6, 100, 146, 163, 187, 188, 189, 190, 191, 192, 198, 199, 201, 202, 284, 290, 296, 298], "jie": 82, "jk": 236, "join": [3, 280], "json": 223, "k": [15, 82, 102, 166, 182, 188, 189, 191, 192, 198, 201, 202, 235, 236, 245, 248, 280], "k_d": [104, 168, 200, 203], "k_h": [103, 104, 167, 168, 199, 200, 203], "k_w": [103, 104, 167, 168, 199, 200, 203], "kaim": [82, 151, 152, 155, 156], "kaiming_norm": 150, "kaiming_uniform": 150, "karen": 82, "kashif": 5, "keep": [85, 160, 209, 222, 288], "keep_grad": [86, 226, 227, 228, 230, 232, 244, 245, 246, 247, 248, 249, 250, 251, 252, 279, 295], "keep_var": 85, "keepdim": [264, 265, 266, 273, 278], "kei": [82, 85, 87, 89, 91, 206], "kept": [265, 273, 278], "kernel": [36, 37, 38, 39, 68, 69, 70, 71, 72, 80, 82, 102, 103, 104, 106, 127, 128, 129, 130, 131, 132, 134, 135, 136, 140, 141, 142, 143, 144, 145, 147, 166, 167, 168, 195, 196, 197, 199, 200, 203], "kernel_s": [68, 69, 70, 71, 88, 91, 130, 131, 132, 134, 135, 136, 140, 141, 142, 143, 144, 145, 147, 166, 167, 168, 188, 189, 198, 199, 200, 201, 202, 203], "keyerror": 85, "keyword": [22, 24, 25, 26, 27, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 81, 85, 178], "kj": [235, 237], "known": 82, "krizhevski": 82, "kroneck": [100, 163], "kwarg": [22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 79, 81, 85, 178, 223], "l": [10, 17, 82, 102, 109, 127, 130, 134, 140, 146, 170, 171, 172, 173, 174, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195], "l2": [208, 209, 210, 211, 212, 213, 214, 215, 216, 218], "l_": [102, 127, 130, 134, 166, 195, 198, 201], "l_out": [102, 130, 134], "label": [4, 5, 6, 30, 181, 182, 185], "lambd": 208, "lambda": [12, 98, 161, 208, 212], "lambda_1": 12, "lambda_2": 12, "lambda_i": 12, "lambda_n": 12, "languag": [4, 166, 177, 198, 201], "larg": [0, 3, 17, 23, 41, 42, 43, 46, 59, 60, 82, 143, 144, 145, 183, 205, 208, 211, 212, 213, 216, 217, 218, 222], "larger": [40, 68, 87, 89, 102, 103, 104, 106, 208, 238, 285, 296, 298, 303], "largest": 264, "last": [1, 100, 126, 163, 236, 237, 280, 300, 302], "latest": 4, "layer": [8, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 73, 74, 75, 76, 77, 80, 82, 83, 85, 87, 88, 91, 100, 116, 123, 125, 126, 140, 141, 142, 143, 144, 145, 146, 147, 151, 152, 155, 156, 163, 166, 167, 168, 177, 178, 179, 185, 193, 198, 199, 200, 201, 202, 203, 205, 231, 285, 295], "layer1": 223, "layer2": 223, "layer_group": 88, "layer_norm": [113, 124, 193], "layer_sequ": [88, 91], "layernorm": [176, 194], "layernormmodel": 193, "lead": [88, 91, 158, 190, 191, 192, 193, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 231], "leaf": 232, "leaki": [96, 159], "leaky_relu": [95, 113, 159], "leakyrelu": [165, 176], "learn": [1, 3, 4, 5, 6, 8, 15, 17, 51, 52, 53, 54, 55, 56, 57, 80, 81, 82, 87, 88, 89, 90, 97, 100, 146, 157, 159, 160, 163, 166, 167, 168, 171, 172, 173, 174, 177, 179, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 229, 294, 295, 305], "learnabl": [84, 85, 86, 123, 125, 126, 140, 141, 142, 166, 167, 168, 177, 179, 187, 188, 189, 190, 191, 192, 193, 205], "least": [17, 18, 20, 276], "lecun": [6, 82], "left": [15, 16, 17, 20, 94, 100, 158, 163, 181, 182, 183, 185, 187, 188, 189, 190, 191, 192, 193, 201, 202, 203, 296, 298], "leftarrow": 214, "len": [0, 1, 2, 3, 284], "lenet": [35, 37, 38, 39, 82], "lenet_1": 82, "lenet_4": 82, "lenet_5": 82, "length": [88, 102, 109, 127, 130, 134, 166, 178, 187, 190, 195, 198, 201, 285, 297], "leq": [183, 215, 242, 258], "lerp": 138, "less": [0, 93, 96, 119, 157, 159, 182, 183, 185, 258], "let": 12, "level": [8, 32], "leverag": [19, 31, 34, 52, 53, 54, 55, 56, 57, 78, 82, 147, 205], "li": 82, "librari": [3, 8, 9, 85, 205, 206, 207, 223, 224, 231, 232, 305], "lightweight": [8, 44, 61, 147], "like": [8, 32, 52, 53, 54, 55, 56, 57, 69, 70, 71, 82, 84, 85, 88, 91, 102, 155, 156, 161, 170, 187, 188, 189, 190, 191, 192, 220, 221, 224, 279, 295, 305], "likelihood": [122, 182, 185], "limit": [83, 209, 258], "linalg": [8, 13], "linalgerror": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20], "linear": [8, 9, 10, 17, 18, 19, 58, 83, 87, 88, 89, 91, 93, 94, 96, 97, 98, 151, 152, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 170, 171, 172, 177, 178, 181, 182, 183, 184, 185, 187, 190, 193, 198, 199, 200, 201, 202, 203, 223, 248], "linearli": 183, "list": [0, 1, 36, 40, 51, 58, 68, 73, 83, 84, 86, 87, 88, 89, 90, 126, 147, 178, 193, 206, 224, 226, 227, 228, 230, 232, 245, 246, 247, 249, 250, 251, 252, 277, 288, 289, 292, 294], "listdir": 3, "liter": [40, 117, 118, 119, 121, 122, 138, 140, 141, 142, 143, 144, 145, 147, 151, 152, 166, 167, 168, 181, 182, 183, 184, 185, 284], "liu": 82, "ln": 242, "load": [3, 4, 5, 6, 84, 85, 86, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 223], "load_state_dict": [85, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218], "loader": [1, 2, 3], "local": [82, 106, 166], "locat": [82, 138], "log": [122, 181, 182, 185, 253], "log_softmax": 185, "logarithm": [242, 262, 263], "logic": [3, 195, 196, 197, 205, 206], "logit": [21, 80, 100, 163, 182], "logsoftmax": [182, 185], "long": [214, 277], "loop": [1, 88, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218], "loss": [8, 17, 87, 88, 89, 90, 91, 100, 117, 118, 119, 121, 122, 157, 158, 159, 160, 161, 162, 163, 164, 170, 171, 172, 173, 174, 178, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218], "low": [8, 32, 227, 230], "lower": [10, 154, 208, 216, 217, 218, 230], "lowest": 227, "lr": [206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218], "lu": 14, "lucid": [0, 1, 2, 5, 6, 13, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 225, 253, 283, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303], "m": [73, 87, 88, 91, 199, 200, 202, 203, 211, 212, 213, 214, 215, 248], "m_": [211, 212, 213, 214, 215], "m_t": [214, 215], "maaten": 82, "machin": [3, 5, 6, 8, 17, 146, 211, 221, 229], "magnitud": [216, 217, 305], "mai": [3, 8, 12, 14, 17, 88, 90, 139, 183, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 222, 231, 299, 305], "main": [8, 18, 32, 88, 245, 248], "maintain": [17, 51, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 72, 82, 84, 85, 87, 88, 89, 91, 98, 151, 152, 155, 156, 157, 158, 161, 170, 171, 172, 173, 174, 187, 188, 189, 190, 191, 192, 211, 216, 296, 299, 303], "make": [1, 3, 8, 28, 32, 36, 40, 82, 88, 91, 162, 182, 183, 193, 199, 202, 205, 210, 211, 212, 213, 221, 223, 231, 232, 237, 284, 294, 305], "manag": [8, 85, 87, 88, 89, 90, 91, 205, 207, 220, 222, 223, 231], "manhattan": 16, "mani": 83, "manipul": [8, 87, 89, 305], "manner": [88, 91], "manual": [117, 118, 122, 181, 182, 185, 222], "map": [40, 51, 61, 68, 82, 85, 99, 101, 146, 162, 164], "mask": [84, 170, 171, 172, 173, 174], "match": [19, 85, 88, 91, 117, 119, 121, 126, 140, 141, 142, 206, 262, 287, 288, 291, 292, 297, 305], "math": [259, 269, 274], "mathbf": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 78, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 114, 116, 138, 143, 144, 145, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 198, 199, 200, 201, 202, 203, 235, 236, 237, 241, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 297, 298, 299, 300, 301, 302, 303], "mathcal": [151, 153, 155, 170, 171, 172, 173, 174, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193], "mathemat": [14, 140, 141, 142, 298, 300, 301, 302], "mathrm": 17, "matmul": 253, "matric": [9, 11, 12, 14, 17, 19, 20, 235, 236, 237, 248, 284], "matrix": [8, 9, 10, 11, 12, 14, 15, 17, 18, 19, 20, 106, 114, 178, 179, 205, 235, 284], "matrix_pow": 13, "matthew": 82, "max": [16, 58, 73, 97, 134, 135, 136, 160, 201, 202, 203, 213, 238, 253, 258], "max_pool": [201, 202, 203], "max_pool1d": [113, 133], "max_pool2d": [113, 133], "max_pool3d": [113, 133], "max_valu": 258, "maxim": 3, "maximum": [16, 160, 201, 202, 203, 211, 213, 253, 258, 264, 301], "maxpool": [21, 80], "maxpool1d": [176, 204], "maxpool1dmodel": 201, "maxpool2d": [88, 91, 167, 176, 204], "maxpool2dmodel": 202, "maxpool3d": [168, 176, 204], "maxpool3dmodel": 203, "mean": [5, 6, 18, 83, 84, 98, 102, 103, 104, 107, 117, 118, 119, 121, 122, 123, 125, 140, 141, 142, 153, 157, 158, 159, 160, 161, 162, 164, 168, 170, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 211, 212, 213, 214, 215, 216, 220, 228, 253, 258, 262, 263, 264, 266, 269, 271, 273, 276, 277, 278, 294, 297, 305], "meaning": [91, 224], "measur": [181, 182, 184, 185], "mechan": [8, 58, 68, 72, 90, 114], "membership": 181, "memori": [2, 3, 23, 222, 246, 247], "meshgrid": 283, "method": [3, 8, 9, 14, 58, 78, 79, 87, 88, 89, 90, 91, 117, 118, 119, 121, 122, 151, 152, 155, 156, 181, 182, 183, 184, 185, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 231], "middl": 221, "might": 205, "min": [239, 253, 258], "min_valu": 258, "mind": [0, 3, 8, 88, 91, 222], "mini": 1, "minim": [4, 8, 91, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 207], "minimalist": 8, "minimum": [253, 258, 266], "minu": 162, "mirror": [250, 252], "mismatch": [85, 205, 206], "miss": [85, 205], "mitig": [96, 157, 159, 161, 187, 188, 189], "mlp": 147, "mnist": [4, 5, 7, 37, 38], "mnist_train": [4, 6], "mode": [8, 111, 123, 125, 138, 151, 152, 170, 171, 172, 173, 174, 285], "model": [1, 3, 4, 8, 15, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 84, 85, 86, 87, 88, 89, 90, 91, 100, 139, 140, 141, 142, 147, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 222, 223, 231, 294, 295, 305], "moder": 62, "modern": 82, "modif": [79, 91, 222], "modifi": [22, 40, 78, 81, 87, 88, 89, 90, 149, 151, 152, 153, 154, 155, 156, 170, 220, 222, 229, 282, 293], "modul": [5, 6, 8, 21, 22, 28, 31, 32, 33, 34, 36, 40, 51, 58, 68, 73, 78, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 140, 141, 142, 143, 144, 145, 146, 147, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 223, 224, 231, 295, 305], "modular": [3, 8, 82, 85, 88, 91, 205, 305], "moduledict": [88, 89, 91, 92], "modulelist": [90, 91, 92], "moment": [211, 212, 213, 214, 215], "momentum": [123, 125, 140, 141, 142, 187, 188, 189, 190, 191, 192, 208, 214, 216, 218], "momentum_decai": 214, "moor": 17, "more": [3, 4, 5, 8, 12, 40, 47, 87, 88, 91, 143, 144, 145, 157, 171, 172, 173, 174, 205, 206, 207, 208, 209, 212, 213, 216, 217, 218, 228, 237, 276, 290, 305], "most": [9, 82, 202, 295, 296, 305], "move": [208, 216], "mse": [119, 121, 183, 184], "mse_loss": [113, 120], "mseloss": [176, 186], "mu": [153, 187, 188, 189, 190, 191, 192, 193, 278], "mu_c": 297, "mu_i": [190, 191, 192], "much": 305, "mul": 253, "multi": [3, 4, 33, 68, 69, 70, 71, 82, 100, 118, 122, 147, 163, 182, 185, 265, 273, 278], "multidimension": [226, 230, 246], "multipl": [1, 3, 8, 9, 15, 19, 21, 40, 58, 72, 89, 90, 91, 106, 138, 139, 146, 147, 170, 171, 172, 173, 174, 182, 185, 205, 221, 226, 227, 228, 230, 235, 240, 246, 247, 294, 299, 305], "multipli": [15, 90, 116, 179, 217, 240, 241], "must": [0, 1, 3, 10, 11, 12, 14, 15, 18, 19, 20, 83, 85, 87, 88, 89, 90, 91, 126, 170, 171, 172, 173, 174, 185, 206, 222, 276, 280, 282, 285, 287, 288, 290, 291, 293, 296, 297, 298, 299, 300, 302], "my_simple_model": 223, "mymodel": [85, 86, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218], "myoptim": [206, 207], "n": [15, 16, 40, 52, 53, 54, 55, 56, 57, 69, 70, 71, 82, 87, 88, 91, 102, 103, 104, 106, 109, 110, 111, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 146, 151, 153, 155, 166, 167, 168, 173, 174, 177, 179, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 195, 196, 197, 198, 199, 200, 201, 202, 203, 248, 265, 276, 278], "n1": 16, "nabla_": [209, 210, 211, 212, 213, 214, 215, 217], "nabla_t": 215, "nadam": 219, "name": [82, 83, 85, 87, 89, 91, 223, 224], "nan": [18, 20], "natur": [17, 82, 166, 177, 198, 201, 242, 262, 263], "ndarrai": [84, 86, 224, 232, 245, 247, 250, 252, 279], "ndim": [18, 20, 86, 232], "ne": 15, "nearest": 138, "necessari": [4, 5, 6, 17, 222, 282, 293], "need": [2, 4, 88, 89, 90, 100, 177, 205, 222, 246, 247, 294, 295, 305], "neg": [15, 17, 20, 93, 122, 139, 157, 159, 160, 161, 182, 185, 217, 280], "negative_slop": [96, 159], "neglect": 90, "neighbor": 138, "neq": 16, "nest": [83, 88, 91, 205], "nestedmodel": 83, "nesterov": 214, "net": [80, 82], "network": [3, 4, 8, 21, 22, 23, 31, 32, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 58, 59, 60, 61, 62, 63, 68, 73, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 97, 98, 99, 100, 101, 102, 103, 104, 114, 116, 123, 139, 146, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 216, 218, 230, 231, 232, 244, 249, 251, 264, 266, 285, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305], "neural": [3, 4, 8, 21, 22, 32, 39, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 94, 97, 98, 99, 100, 101, 102, 103, 104, 114, 116, 123, 139, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 216, 218, 230, 231, 232, 244, 249, 251, 264, 266, 285, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305], "neuralnetwork": 160, "neuron": 159, "never": 299, "new": [85, 86, 93, 94, 96, 97, 98, 99, 101, 114, 116, 138, 147, 151, 152, 153, 154, 155, 156, 206, 223, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 247, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 277, 279, 280, 282, 285, 287, 288, 290, 291, 292, 293], "next": [91, 294], "nll": 122, "nll_loss": [113, 120], "nllloss": [176, 186], "nn": [5, 6, 8, 21, 23, 28, 32, 36, 40, 51, 58, 64, 65, 66, 67, 68, 72, 73, 80, 83, 92, 95, 105, 112, 115, 120, 124, 133, 137, 148, 150, 165, 169, 175, 176, 180, 186, 194, 204, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 223, 295, 305], "no_grad": 220, "node": 232, "nois": [20, 231], "non": [12, 15, 17, 20, 90, 94, 96, 97, 151, 152, 157, 158, 159, 160, 161, 162, 164, 170, 171, 172, 173, 174, 211, 212, 222, 242, 258], "none": [0, 1, 2, 5, 6, 28, 32, 36, 40, 78, 83, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 139, 140, 141, 142, 143, 144, 145, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 198, 199, 200, 201, 202, 203, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 221, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 246, 247, 248, 250, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 302, 303], "norm": [9, 13, 213], "normal": [5, 6, 58, 94, 98, 100, 101, 123, 125, 126, 140, 141, 142, 150, 151, 155, 158, 161, 163, 170, 187, 188, 189, 190, 191, 192, 193, 216, 228, 231, 294, 304, 305], "normalized_shap": [126, 193], "note": [102, 170], "noth": [107, 108, 109, 110], "notimplementederror": [2, 85, 206], "notin": 258, "nov": 82, "novel": [5, 82], "np": [40, 52, 53, 54, 55, 56, 57, 69, 70, 71, 84, 86, 146, 182, 185, 224, 232, 237, 244, 245, 248, 249, 251, 252, 263, 279, 295], "npy": [5, 6], "num_class": [21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 163, 182, 185], "num_featur": [91, 140, 141, 142, 187, 188, 189, 190, 191, 192], "num_init_featur": [23, 24, 25, 26, 27], "num_paramet": 90, "number": [0, 1, 2, 5, 6, 11, 12, 14, 17, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 86, 88, 90, 91, 102, 103, 104, 106, 109, 110, 111, 114, 116, 118, 122, 123, 125, 127, 128, 129, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 152, 155, 156, 162, 166, 167, 168, 177, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 199, 200, 201, 202, 203, 208, 226, 229, 230, 232, 242, 244, 246, 248, 264, 265, 266, 277, 278, 280, 282, 285, 287, 288, 289, 291, 293, 297, 299, 300, 302, 305], "numer": [14, 17, 117, 118, 123, 125, 126, 140, 141, 142, 181, 182, 187, 188, 189, 190, 191, 192, 193, 209, 210, 211, 212, 213, 214, 215, 216, 224, 234, 244, 249, 251], "numpi": [8, 84, 86, 182, 185, 224, 232, 237, 245, 248, 263, 276, 279, 285, 287, 291, 295, 305], "o": [3, 200, 203, 249, 250], "object": [1, 3, 9, 68, 82, 85, 89, 90, 184, 205, 222, 233, 234, 238, 239, 240, 243, 279], "observ": 211, "obtain": 1, "occur": [139, 222, 223, 280], "occurr": 15, "odot": [170, 171, 172, 173, 174], "off": 220, "offer": [4, 8, 205, 207, 231, 305], "offset": 248, "often": [15, 49, 50, 102, 103, 104, 106, 182, 185, 244, 251, 295, 299, 303, 305], "older": 214, "onc": 222, "one": [0, 64, 65, 66, 67, 72, 90, 91, 100, 102, 116, 130, 134, 140, 141, 142, 161, 162, 163, 166, 172, 182, 185, 187, 190, 198, 201, 206, 221, 224, 228, 243, 250, 264, 266, 281, 286, 290, 295], "ones": [114, 116, 166, 167, 168, 179, 187, 188, 189, 190, 191, 192, 193, 205, 248, 250, 253], "ones_lik": 253, "onli": [8, 83, 138, 160, 170, 171, 172, 173, 174, 181, 182, 185, 187, 188, 189, 190, 191, 192, 193, 201, 202, 203, 217, 220, 244, 258, 264, 266, 276, 285, 286, 288, 289], "onto": [18, 20], "openml": [5, 6], "oper": [3, 8, 9, 14, 17, 58, 59, 60, 61, 62, 63, 84, 85, 88, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 106, 111, 114, 116, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 220, 221, 222, 224, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 246, 247, 249, 251, 262, 263, 264, 265, 266, 269, 271, 273, 276, 278, 280, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 303], "operatornam": [15, 17], "opposit": 208, "optim": [3, 8, 9, 15, 17, 18, 20, 23, 28, 29, 30, 31, 32, 33, 34, 84, 86, 89, 90, 106, 166, 167, 168, 205, 222], "optimizer_st": [206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218], "option": [1, 5, 6, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 93, 96, 100, 103, 104, 107, 108, 109, 110, 111, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 152, 153, 154, 155, 156, 157, 159, 163, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 198, 199, 200, 201, 202, 203, 206, 208, 216, 218, 226, 227, 228, 230, 232, 244, 245, 246, 247, 248, 249, 250, 251, 252, 264, 265, 266, 273, 277, 278, 279, 280, 284, 287, 289, 290, 295, 299, 300, 302], "ord": 16, "order": [1, 3, 16, 20, 87, 88, 89, 90, 91, 277, 294], "ordered_dict": 91, "ordereddict": [85, 87, 88, 91], "organ": [87, 88, 89, 91, 223], "orient": 305, "origin": [30, 39, 107, 139, 146, 164, 285, 286, 287, 288, 291, 292, 303], "orthogon": [17, 18, 20], "orthonorm": 18, "oscil": [208, 216, 218], "other": [2, 3, 8, 14, 30, 34, 36, 39, 84, 85, 88, 91, 151, 152, 170, 205, 206, 220, 222, 231, 232, 244, 246, 249, 251, 276, 284, 305], "otherwis": [41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 61, 62, 63, 93, 96, 97, 98, 100, 157, 159, 160, 161, 163, 171, 172, 173, 174, 183, 198, 199, 200, 201, 202, 203, 206, 217, 223, 238, 239, 264, 266], "otim": [17, 114, 177], "out": [0, 3, 4, 93, 94, 96, 97, 98, 99, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 114, 116, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 151, 152, 155, 156, 166, 167, 168, 170, 171, 172, 173, 174, 195, 196, 197, 198, 199, 200, 201, 202, 203, 208, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293], "out_channel": [36, 88, 91, 140, 141, 142, 143, 144, 145, 147, 166, 167, 168, 188, 189, 198, 199, 200, 201, 202, 203, 205], "out_featur": [87, 88, 91, 114, 116, 157, 158, 159, 160, 161, 162, 163, 164, 167, 168, 170, 171, 172, 177, 179, 181, 182, 183, 184, 185, 187, 190, 193, 198, 199, 200, 201, 202, 203], "outcom": [299, 300, 302], "outer": 253, "outlier": [119, 183], "output": [0, 1, 2, 8, 15, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 114, 116, 127, 128, 129, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 224, 227, 228, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 245, 247, 248, 249, 251, 252, 262, 263, 264, 265, 266, 269, 271, 273, 276, 277, 278, 284, 285, 287, 291, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303], "output_height": 106, "output_lay": [88, 91], "output_s": [88, 127, 128, 129, 195, 196, 197], "output_width": 106, "outsid": 0, "over": [0, 1, 2, 3, 9, 68, 80, 85, 88, 90, 100, 127, 128, 129, 146, 163, 166, 167, 168, 182, 185, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 208, 209, 210, 211, 212, 226, 230, 264, 265, 266, 273, 276, 278, 299, 300, 302], "overal": 78, "overdetermin": 17, "overfit": [1, 21, 80, 108, 111, 171, 172, 173, 174, 208, 211, 216, 218], "overhead": 146, "overrid": [2, 3], "overridden": [85, 206], "overwrit": [87, 89], "own": [4, 87, 88, 89, 90, 102, 103, 104, 156, 205, 297], "p": [16, 17, 86, 89, 90, 107, 108, 109, 110, 111, 170, 171, 172, 173, 174, 198, 201, 202, 299, 300, 302, 305], "p_d": [200, 203], "p_h": [199, 200, 203], "p_w": [199, 200, 203], "packag": [2, 3, 4, 9, 82, 205, 207, 223, 229, 231, 295, 305], "pad": [36, 88, 91, 102, 103, 104, 106, 127, 128, 129, 130, 131, 132, 134, 135, 136, 140, 141, 142, 143, 144, 145, 147, 166, 167, 168, 188, 189, 195, 196, 197, 198, 199, 200, 201, 202, 203, 283], "pad_after_dim1": 285, "pad_after_dim2": 285, "pad_before_dim1": 285, "pad_before_dim2": 285, "pad_width": 285, "padding_height": 106, "padding_width": 106, "pair": 114, "paper": 29, "parallel": [1, 3, 68, 82], "param": [85, 86, 89, 90, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218], "param1": 85, "param_dict": 89, "param_group": [206, 207], "param_groups_setup": 206, "param_list": 90, "param_s": 223, "paramet": [0, 2, 8, 37, 38, 39, 82, 85, 205, 206, 207, 224, 231, 305], "parameterdict": 92, "parameterlist": 92, "parent": 205, "part": [84, 85, 156, 205, 220, 222, 231, 244, 245, 248, 249, 250, 251, 252, 295, 305], "partial": [10, 11, 12, 14, 15, 16, 17, 19, 20, 93, 94, 96, 97, 98, 99, 100, 101, 114, 116, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 198, 199, 200, 201, 202, 203, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293], "particip": [86, 295], "particular": [87, 89], "particularli": [8, 17, 52, 53, 54, 55, 56, 57, 88, 89, 90, 91, 100, 116, 140, 141, 142, 143, 144, 145, 163, 179, 182, 185, 190, 191, 192, 193, 212, 220, 223, 294], "pass": [2, 8, 17, 21, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 80, 83, 85, 86, 87, 88, 89, 90, 91, 138, 140, 141, 142, 146, 147, 157, 158, 159, 160, 161, 162, 164, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 198, 199, 200, 201, 202, 203, 205, 224, 232, 265, 273, 276, 277, 278, 280, 282, 286, 288, 289, 293, 295, 305], "past": [208, 209, 211, 216], "patch": [106, 199], "path": [3, 5, 6], "pathwai": 82, "pattern": [82, 97, 146, 160, 166, 167, 168], "penal": [208, 216, 218], "penalti": [209, 210, 211, 212, 213, 214, 215], "penros": 17, "per": [1, 52, 53, 54, 55, 56, 57, 69, 70, 71, 127, 190, 191, 192, 193, 195], "perform": [3, 8, 9, 10, 17, 21, 32, 33, 34, 36, 37, 38, 39, 48, 64, 65, 66, 67, 68, 73, 80, 82, 85, 86, 90, 94, 102, 103, 104, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 143, 144, 145, 146, 147, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 220, 222, 229, 231, 233, 234, 237, 240, 243, 262, 264, 266, 273, 277, 294, 296, 298, 303, 305], "permut": 277, "persist": [84, 226, 227, 228, 230, 246, 247], "perturb": [12, 19, 20, 305], "phi": [94, 158], "pi": [94, 158, 259, 269, 274], "pil": [295, 305], "pinv": 13, "pioneer": 82, "pipelin": [5, 6, 231, 294, 295, 297], "pixel": [5, 6, 138, 297, 299], "place": [149, 151, 152, 153, 154, 155, 156], "placehold": [85, 178], "plai": [224, 231], "plot": 284, "point": [4, 139, 220], "pointwis": [143, 144, 145], "pool": [21, 36, 37, 38, 39, 40, 51, 58, 68, 73, 80, 82, 127, 128, 129, 130, 131, 132, 134, 135, 136, 146, 147, 167, 168, 195, 196, 197, 198, 199, 200, 201, 202, 203, 264, 266], "pool1": 91, "pool2": 91, "poorli": 14, "popul": 85, "popular": [4, 82], "portion": 305, "pose": 17, "posit": [1, 10, 15, 85, 91, 139, 157, 159, 160, 161, 198, 199, 200, 201, 202, 203, 217, 221, 242, 287, 291, 298], "possibl": [8, 305], "potenti": [17, 178, 216, 289], "power": [8, 15, 82, 146, 221, 222, 253, 294, 295, 305], "pp": 82, "practic": [17, 182, 185], "practition": 305, "pre": [41, 45, 46], "preactbottleneck": [41, 45, 46], "preced": [82, 86, 232], "preconfigur": [33, 34], "predefin": [4, 82, 88, 161], "predict": [78, 181, 182, 184, 185], "prefix": [85, 223], "prepar": [3, 221, 285, 287, 291, 295, 305], "prepend": 85, "preprint": 82, "preprocess": [3, 4, 106, 139, 231, 294, 295, 305], "present": [181, 182, 183, 185, 187, 188, 189, 190, 191, 192, 193, 199], "preserv": [107, 139, 170, 244, 245, 248, 249, 250, 251, 252, 265, 273, 278], "preset": 4, "prevent": [1, 87, 88, 89, 90, 91, 108, 111, 171, 172, 173, 174, 181, 182, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 222], "previou": [208, 217, 222], "previous": 211, "primari": [8, 224], "primarili": 91, "print": [0, 1, 2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 220, 221, 222, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 297, 298, 299, 300, 301, 302, 303], "priorit": 147, "probabilist": 231, "probabl": [30, 94, 100, 107, 108, 109, 110, 111, 117, 158, 163, 170, 171, 172, 173, 174, 181, 182, 185, 299, 300, 302, 305], "problem": [17, 18, 20, 82, 96, 157, 159, 215], "proceed": 82, "process": [2, 3, 4, 15, 18, 20, 21, 33, 40, 68, 79, 80, 82, 90, 102, 103, 104, 125, 139, 140, 141, 142, 146, 147, 161, 164, 166, 168, 177, 187, 188, 189, 190, 191, 192, 193, 198, 200, 201, 203, 208, 224, 284, 295, 296, 297, 298, 303, 305], "produc": [21, 80, 83, 127, 128, 129, 146, 166, 167, 168, 195, 196, 197, 229, 231], "product": [8, 18, 20, 162, 177, 193, 205, 235, 236, 240, 241], "program": [220, 231], "progress": 210, "project": [18, 20], "projector": 17, "promin": [198, 200, 201, 202, 203], "promot": [91, 182, 185, 205], "propag": [11, 12, 14, 17, 18, 19, 20, 82, 85, 91, 114, 116, 138, 146, 199, 200, 216, 217, 235, 236, 237, 241, 264, 266, 284, 285, 288, 292], "properli": [0, 90, 100, 163, 205], "properti": [9, 11, 14, 15, 94, 98, 107, 158, 161, 170, 210, 215], "proport": [5, 6, 278], "proportion": 303, "provid": [0, 1, 2, 3, 4, 5, 6, 8, 9, 22, 28, 29, 30, 32, 36, 40, 73, 78, 79, 81, 82, 85, 87, 88, 89, 90, 94, 116, 128, 129, 139, 181, 182, 183, 185, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 216, 218, 220, 222, 224, 229, 231, 232, 237, 244, 250, 264, 266, 277, 279, 287, 289, 291, 305], "pseudo": [14, 17], "purpos": [226, 230, 244, 249, 251], "python": 224, "pytorch": 279, "q": [18, 82], "qr": 13, "quad": [17, 181, 182, 183, 184, 185, 201, 202, 203, 233, 234, 238, 239, 240, 243, 296], "quadrat": 183, "quotient": 234, "r": [18, 299, 300, 301, 302], "r_t": 215, "radam": 219, "rais": [0, 1, 2, 85, 205, 206, 242], "rand": [225, 231], "randint": [225, 231], "randn": [21, 23, 24, 25, 26, 27, 40, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 69, 70, 71, 72, 73, 78, 80, 143, 144, 145, 146, 147, 205, 225, 229, 231], "random": [1, 2, 3, 23, 24, 25, 26, 27, 40, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 69, 70, 71, 72, 78, 143, 144, 145, 146, 147, 298, 299, 300, 301, 302, 305], "random_integ": 231, "random_tensor": 231, "randomcrop": [304, 305], "randomgrayscal": [304, 305], "randomhorizontalflip": [304, 305], "randomli": [1, 107, 108, 109, 110, 111, 139, 170, 171, 172, 173, 174, 298, 299, 300, 301, 302, 305], "randomnoisedataset": [0, 1, 2], "randomrot": [304, 305], "randomverticalflip": 304, "rang": [0, 1, 9, 40, 48, 82, 90, 99, 101, 102, 103, 118, 122, 156, 162, 164, 208, 216, 218, 227, 255, 256, 258, 297, 301, 305], "rank": 17, "rasul": 5, "rate": [206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218], "rather": [5, 89, 90, 212, 288], "ratio": [58, 146, 147, 303], "ravel": 283, "raw": [100, 163, 182, 224], "re": [86, 222], "readabl": [87, 88, 89, 91, 205, 224], "readi": [3, 8, 64, 65, 66, 67, 72, 82], "real": [17, 20, 162], "rearrang": 106, "recalibr": [59, 61, 62, 64, 65, 66, 67, 82, 146], "receiv": [201, 202, 203, 285], "recent": 216, "recept": [68, 72, 82, 147], "reciproc": [17, 253, 263, 271], "recognit": [39, 82, 167], "rectangular": 248, "rectif": 215, "rectifi": [96, 97, 159, 160, 215], "recurr": [88, 193], "recurs": [83, 85], "red": 299, "reduc": [21, 40, 51, 68, 73, 80, 82, 143, 144, 145, 146, 187, 188, 189, 190, 191, 192, 198, 199, 200, 201, 202, 203, 214, 217, 222, 224, 264, 265, 266, 273, 278, 299], "reduct": [20, 58, 117, 118, 119, 121, 122, 146, 147, 181, 182, 183, 184, 185, 264, 266], "reevalu": 206, "refer": [4, 8, 85, 231, 245, 248, 280], "reflect": 220, "regardless": [17, 286], "region": [104, 127, 128, 129, 138, 196, 197, 285, 296, 305], "regist": [49, 50, 52, 53, 54, 55, 56, 57, 79, 84, 85, 86, 90, 205, 223], "register_buff": 84, "register_model": [22, 29, 30, 31, 33, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 69, 70, 71, 74, 75, 76, 77, 79, 81], "register_paramet": 85, "registr": [85, 205], "registri": [52, 53, 54, 55, 56, 57, 223], "registry_path": 223, "regress": [4, 121, 183, 184], "regular": [17, 21, 30, 80, 111, 171, 172, 173, 174, 208, 209, 210, 213, 214, 215, 216, 218], "relat": [222, 248, 249], "relationship": 303, "relev": [138, 208, 216, 218], "reli": 222, "reliabl": [5, 6], "reliant": [171, 172, 173, 174], "relu": [8, 21, 58, 73, 80, 82, 83, 87, 88, 89, 91, 93, 95, 96, 113, 140, 141, 142, 146, 147, 151, 152, 155, 156, 157, 159, 165, 166, 167, 168, 176, 177, 178, 179], "relu1": 91, "relu2": 91, "relu3": 91, "remain": [5, 6, 84, 126, 170, 171, 172, 173, 174, 217], "rememb": 231, "remov": [223, 289], "rep": 291, "repeat": [283, 284, 291], "repetit": [287, 291], "replac": [5, 231, 299], "repres": [5, 14, 16, 20, 36, 85, 86, 91, 114, 116, 123, 125, 126, 166, 167, 168, 177, 179, 182, 185, 193, 206, 207, 208, 214, 215, 216, 217, 218, 224, 233, 234, 240, 243, 245, 265, 276, 277, 278, 284, 296, 298, 300, 301, 302, 303], "represent": [49, 50, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 68, 72, 82, 146, 199, 202, 206], "reproduc": [226, 227, 228, 229, 230, 231, 305], "requir": [2, 3, 4, 8, 52, 53, 54, 55, 56, 57, 68, 84, 87, 91, 93, 94, 96, 97, 98, 99, 101, 114, 116, 138, 146, 147, 156, 178, 182, 185, 205, 220, 222, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 274, 275, 280, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 296, 303], "requires_grad": [84, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 106, 114, 116, 138, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 198, 199, 200, 201, 202, 203, 205, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295], "rescal": [117, 118, 122, 181, 182, 185], "research": 205, "reset": [86, 229, 232], "reshap": [8, 58, 116, 167, 168, 221, 224, 283, 286], "residu": [31, 32, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 59, 60, 61, 62, 63, 82], "residualblock": 40, "resili": 217, "resiz": [138, 294, 304, 305], "resnet": [32, 33, 34, 35, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 59, 60, 61, 62, 63, 68, 69, 70, 71, 82, 146], "resnet_1001": 82, "resnet_101": 82, "resnet_152": 82, "resnet_18": 82, "resnet_200": 82, "resnet_269": 82, "resnet_34": 82, "resnet_50": 82, "resnet_arg": 68, "resnext": [35, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 72, 82], "resnext_101_32x16d": 82, "resnext_101_32x32d": 82, "resnext_101_32x4d": 82, "resnext_101_32x8d": 82, "resnext_101_64x4d": 82, "resnext_50_32x4d": 82, "resolut": [64, 65, 66, 67, 72], "resourc": 222, "respect": [10, 11, 12, 14, 15, 16, 17, 18, 20, 36, 73, 84, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 114, 116, 138, 147, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 198, 199, 200, 201, 202, 203, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 258, 262, 263, 264, 265, 266, 269, 271, 273, 276, 277, 278, 284, 285, 287, 291, 299], "respons": [64, 65, 66, 67, 82, 87, 207], "restor": [146, 222], "restructur": 288, "result": [10, 14, 15, 17, 82, 85, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 114, 116, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 147, 163, 205, 206, 220, 222, 226, 227, 228, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 266, 267, 268, 269, 270, 271, 272, 274, 275, 276, 279, 280, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 298, 299, 305], "resum": 207, "retain": [86, 232, 244, 251, 264, 265, 266, 273, 278, 295], "retent": 295, "retriev": [0, 2, 87, 89, 90], "return": [0, 1, 2, 3, 5, 6, 8, 32, 36, 58, 84, 85, 87, 88, 89, 90, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 223, 224, 294, 305], "reus": [82, 295], "reusabl": [91, 205, 294], "revers": [8, 91, 277, 300, 302], "revert": 222, "revolution": 82, "rgb": [29, 30, 31, 33, 34], "rho": 209, "rho_": 215, "rho_t": 215, "right": [15, 16, 17, 19, 20, 94, 100, 158, 163, 181, 182, 183, 185, 187, 188, 189, 190, 191, 192, 193, 201, 202, 203, 296], "risk": 224, "rmsprop": 219, "rob": 82, "robust": [139, 170, 171, 172, 173, 174, 183, 205, 209, 298, 299, 301, 305], "roland": 5, "role": [224, 231, 305], "root": [4, 5, 6, 210, 216, 271], "rotat": [113, 137, 301, 305], "rotated_imag": 139, "rout": [201, 202, 203], "routin": 8, "row": [11, 12, 14, 19, 116, 248, 284, 293], "rprop": 219, "rule": [14, 15, 221, 233, 234, 238, 239, 240, 242, 243], "run": [8, 84, 123, 125, 140, 141, 142, 187, 188, 189, 190, 191, 192, 209, 222, 229, 231], "running_mean": [84, 123, 125, 187, 188, 189, 190, 191, 192], "running_var": [123, 125, 187, 188, 189, 190, 191, 192], "runtim": [88, 91, 205], "s_": 217, "s_d": [200, 203], "s_h": [199, 200, 203], "s_w": [199, 200, 203], "sain": 82, "same": [11, 12, 14, 15, 19, 100, 107, 108, 109, 110, 111, 123, 125, 126, 128, 129, 139, 140, 141, 142, 143, 144, 145, 147, 166, 167, 168, 170, 171, 172, 173, 174, 178, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 217, 229, 231, 237, 247, 250, 252, 262, 264, 265, 266, 280, 282, 286, 288, 289, 290, 293, 297], "sampl": [0, 1, 2, 3, 5, 6, 8, 29, 30, 31, 33, 34, 36, 37, 38, 39, 64, 65, 66, 67, 72, 127, 128, 129, 151, 152, 153, 154, 155, 156, 170, 171, 172, 173, 174, 177, 179, 182, 185, 193, 195, 196, 197, 228, 231, 296, 298, 300, 301, 302, 303], "satisfi": [10, 12, 19], "satur": [157, 305], "save": [2, 84, 86, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 222, 223], "scalabl": [3, 52, 53, 54, 55, 56, 57, 78, 82, 205], "scalar": [11, 16, 117, 118, 119, 121, 122, 224], "scale": [12, 17, 23, 33, 37, 38, 39, 41, 42, 43, 46, 59, 60, 68, 69, 70, 71, 82, 93, 98, 100, 123, 125, 126, 146, 147, 155, 156, 157, 159, 161, 162, 163, 164, 170, 171, 172, 173, 174, 182, 187, 188, 189, 190, 191, 192, 193, 208, 210, 211, 212, 224, 231, 278, 303], "scenario": [89, 90, 193, 212, 213, 295, 299], "schedul": 208, "scientif": 221, "score": [40, 51, 68, 100, 182], "scratch": 8, "script": 231, "se": [59, 60, 61, 62, 63, 64, 65, 66, 67, 82], "se_resnet_101": 82, "se_resnet_152": 82, "se_resnet_18": 82, "se_resnet_34": 82, "se_resnet_50": 82, "se_resnext_101_32x4d": 82, "se_resnext_101_32x8d": 82, "se_resnext_101_64x4d": 82, "se_resnext_50_32x4d": 82, "seamless": [0, 1, 3, 4, 205, 231], "seamlessli": [3, 4, 9, 86, 88, 91, 205, 224, 305], "second": [12, 88, 89, 114, 146, 177, 211, 212, 213, 214, 215, 221, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 282, 284, 302], "section": 237, "see": [8, 237], "seed": [225, 226, 227, 228, 230, 231, 305], "seen": 209, "select": [68, 69, 70, 71, 72, 82, 138, 146, 147, 201, 203, 273], "selectivekernel": 148, "self": [0, 1, 2, 3, 8, 21, 28, 32, 36, 58, 73, 80, 83, 84, 85, 86, 87, 88, 89, 90, 98, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 177, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 223, 284, 294, 295], "selu": [95, 107, 113, 165, 170, 176], "selunetwork": 161, "semodul": 148, "senet": [35, 59, 60, 61, 62, 63, 64, 65, 66, 67, 82], "sensit": [119, 183, 187, 188, 189], "sentiment": 4, "separ": [0, 78, 82, 102, 103, 104, 143, 144, 145, 190, 191, 192], "sequenc": [15, 40, 51, 68, 87, 89, 102, 244, 280, 282, 285, 287, 290, 291, 293, 294], "sequenti": [21, 32, 36, 58, 73, 78, 80, 83, 87, 88, 92, 102, 140, 141, 142, 178, 294, 305], "seri": [28, 37, 38, 68, 102, 140, 166, 198, 201], "serial": [84, 85, 207], "serv": [3, 5, 23, 32, 58, 73, 85, 87, 88, 89, 90, 91, 205, 217, 295], "set": [3, 4, 5, 6, 49, 50, 64, 65, 66, 67, 72, 83, 86, 90, 102, 103, 104, 159, 160, 161, 166, 167, 168, 170, 173, 174, 177, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 206, 211, 212, 216, 226, 227, 228, 229, 230, 231, 232, 244, 246, 247, 251, 252, 258, 264, 266, 279, 295, 299, 305], "setup": [4, 8, 52, 53, 54, 55, 56, 57], "sever": [17, 166, 167, 168, 198, 199, 200, 201, 202, 203, 222, 294, 305], "sgd": [8, 208, 215, 219], "sgn": 16, "shape": [3, 4, 5, 6, 8, 11, 12, 14, 15, 17, 21, 23, 24, 25, 26, 27, 32, 36, 40, 52, 53, 54, 55, 56, 57, 58, 64, 65, 66, 67, 69, 70, 71, 72, 73, 78, 80, 82, 83, 84, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 146, 147, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 221, 224, 226, 227, 228, 230, 231, 232, 235, 246, 247, 248, 249, 250, 251, 252, 258, 263, 264, 265, 266, 269, 271, 273, 277, 278, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 293, 296, 297, 298, 299, 300, 301, 302, 303, 305], "shapelik": 227, "share": 82, "shen": 146, "shift": [123, 125, 126, 187, 188, 189, 190, 191, 192, 193], "shorthand": 237, "should": [36, 84, 222, 226, 227, 228, 230, 246, 247, 255, 256, 276, 285, 294], "show": [220, 223], "showcas": 8, "shown": 229, "shrink": 209, "shuffl": [1, 2, 3], "side": [19, 88, 91, 102, 103, 104, 130, 131, 132, 134, 135, 136, 140, 141, 142, 166, 167, 168, 198, 199, 200, 201, 202, 203, 222], "sigma": [17, 146, 151, 153, 155, 162, 187, 188, 189, 190, 191, 192, 193, 277], "sigma_c": 297, "sigma_i": 17, "sigmoid": [95, 113, 146, 151, 152, 155, 156, 165, 176, 181], "sigmoidnetwork": 162, "sign": [15, 183, 217, 253], "signal": [140, 166, 167, 168, 187, 190, 198, 199, 200, 201, 202, 203], "signific": 222, "significantli": [51, 82, 146, 294], "sim": [170, 171, 172, 173, 174], "similar": [8, 151, 152, 237, 263, 279, 285], "similarli": [20, 276], "simonyan": 82, "simpl": [3, 4, 8, 83, 91, 102, 103, 104, 114, 116, 130, 131, 132, 134, 135, 136, 158, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 198, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 235, 236, 241, 294], "simplebinaryclassificationmodel": 181, "simpleclassificationmodel": [182, 185], "simplegelumodel": 158, "simpleleakyrelumodel": 159, "simplemodel": [8, 83, 179, 223], "simpleregressionmodel": 184, "simplerelumodel": 160, "simpleselumodel": 161, "simplesigmoidmodel": 162, "simpletanhmodel": 164, "simpli": [220, 276, 277, 288], "simplic": [82, 160], "simplifi": [4, 37, 79, 91, 140, 141, 142], "simul": [83, 305], "simultan": 139, "sin": [253, 259], "sinc": [15, 18, 87, 88, 89, 90, 102, 103, 104, 156, 220, 222, 228, 284, 305], "sine": [256, 269, 270], "singl": [0, 4, 15, 18, 20, 40, 100, 140, 141, 142, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 182, 193, 199, 200, 201, 202, 203, 206, 224, 230, 246, 280, 289, 297, 299, 305], "singleton": 193, "singular": [11, 14, 15, 17, 19, 20], "sinh": [253, 260, 275], "size": [0, 1, 2, 3, 20, 36, 37, 38, 39, 40, 68, 80, 82, 83, 86, 88, 102, 103, 104, 106, 109, 110, 111, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 166, 167, 168, 177, 179, 181, 182, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 223, 227, 230, 231, 232, 264, 265, 266, 273, 278, 280, 282, 289, 292, 293, 296, 298, 303, 305], "sk": [68, 69, 70, 71, 72, 82, 147], "sk_resnet_18": 82, "sk_resnet_34": 82, "sk_resnet_50": 82, "sk_resnext_50_32x4d": 82, "skblock": 68, "skip": [82, 222], "sknet": [35, 69, 70, 71, 72, 82], "slice": [114, 276], "slide": [106, 198, 200, 201, 203], "slight": 146, "slightli": 305, "slope": [96, 157, 159], "slow": [3, 215], "small": [17, 37, 38, 39, 82, 96, 117, 118, 123, 125, 126, 159, 161, 181, 182, 183, 187, 188, 189, 190, 191, 192, 193, 199, 202, 209, 210, 211, 212, 213, 214, 215, 216, 217], "smaller": [80, 82, 88, 91, 205, 210, 211, 239, 296, 298, 303], "smallest": 266, "smooth": [30, 94, 157, 158, 208, 216, 305], "smoother": 208, "so": [87, 88, 89, 90, 139, 205, 215, 246, 247, 294], "softmax": [95, 113, 147, 165, 176, 182], "softmaxmodel": 163, "solut": [17, 19], "solv": [9, 10, 13, 17, 18, 20], "solver": 9, "some": [93, 108, 139, 170, 171, 172, 187, 188, 189, 190, 191, 192, 210, 211, 212, 222, 224], "sometim": 221, "sophist": [88, 91], "sourc": 231, "space": [12, 18, 20, 102, 103, 104, 106, 127, 128, 129, 140, 141, 142, 143, 144, 145, 166, 167, 168, 195, 196, 197, 244, 305], "span": 4, "spars": [210, 211], "spatial": [21, 40, 51, 68, 73, 80, 82, 141, 146, 167, 168, 187, 188, 189, 190, 191, 192, 193, 199, 200, 201, 202, 203, 284], "spatial_dim": 146, "spatio": 168, "special": [0, 1, 8, 17, 84, 85, 86, 170, 231], "specif": [4, 8, 24, 25, 26, 27, 32, 49, 50, 87, 88, 89, 90, 91, 147, 156, 170, 171, 172, 173, 174, 190, 191, 192, 205, 206, 220, 231, 246, 264, 266, 287, 291], "specifi": [0, 1, 2, 3, 4, 5, 6, 8, 16, 22, 23, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 68, 70, 71, 73, 74, 75, 76, 77, 79, 81, 83, 88, 100, 106, 111, 117, 118, 119, 121, 122, 126, 127, 128, 129, 138, 139, 146, 163, 166, 167, 168, 181, 182, 183, 184, 185, 193, 195, 196, 197, 199, 200, 201, 202, 203, 206, 224, 226, 227, 228, 229, 230, 242, 244, 245, 246, 247, 248, 249, 251, 252, 258, 264, 265, 266, 273, 277, 278, 279, 280, 282, 285, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 301, 303, 305], "speech": 190, "speed": [208, 209, 210, 211, 212, 213, 214, 215, 216, 218], "split": [4, 280, 282, 293], "springer": 82, "sqrt": [94, 151, 152, 155, 156, 158, 187, 188, 189, 190, 191, 192, 193, 209, 210, 211, 212, 214, 215, 216, 253, 255, 256], "squar": [1, 3, 10, 11, 12, 14, 15, 17, 18, 19, 20, 119, 121, 183, 184, 209, 210, 211, 216, 253, 271], "squaredataset": [0, 1, 2, 3], "squeez": [58, 61, 64, 65, 66, 67, 82, 146, 283], "stabil": [14, 17, 82, 117, 118, 123, 125, 126, 140, 141, 142, 181, 182, 187, 188, 189, 190, 191, 192, 193, 208, 209, 210, 211, 212, 213, 214, 215, 216, 297], "stabl": [151, 152, 155, 156, 170, 182, 208, 212, 213, 216, 217, 218], "stack": [91, 147, 282, 283, 293, 305], "stage": [40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 68, 69, 70, 71], "stage1": 58, "stage2": 58, "stage3": 58, "stage4": 58, "standard": [40, 49, 50, 94, 96, 143, 144, 145, 151, 153, 155, 157, 158, 159, 170, 217, 228, 231, 237, 294, 297, 305], "start": [1, 3, 208, 210, 217, 244, 296, 298], "state": [82, 84, 85, 86, 88, 91, 206, 220, 222, 229], "state_dict": [85, 86, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218], "static": 91, "statist": [17, 107, 123, 125], "std": [5, 6, 153, 294, 297, 305], "stem": [32, 40, 51, 68], "stem_typ": 40, "stem_width": 40, "step": [86, 106, 147, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 222, 244, 294, 295], "step_siz": 217, "still": 209, "stochast": [8, 208, 218], "stop": 244, "storag": [87, 89, 232], "store": [2, 4, 5, 6, 40, 51, 68, 84, 85, 86, 87, 88, 89, 90, 146, 195, 196, 197, 222, 232, 296, 297, 298, 299, 300, 301, 302, 303], "str": [5, 6, 40, 73, 85, 87, 89, 91, 117, 118, 119, 121, 122, 138, 206, 223, 284], "straightforward": [218, 220, 233], "strategi": 207, "streamlin": [2, 3], "strict": [85, 206], "stride": [36, 37, 38, 39, 88, 91, 102, 103, 104, 106, 127, 128, 129, 130, 131, 132, 134, 135, 136, 140, 141, 142, 143, 144, 145, 147, 166, 167, 168, 195, 196, 197, 198, 199, 200, 201, 202, 203], "stride_height": 106, "stride_width": 106, "string": [85, 87, 89, 91, 166, 167, 168, 206], "structur": [0, 8, 18, 78, 84, 85, 88, 205, 206, 223, 224, 248, 295], "style": [32, 125, 190, 191, 284], "sub": [87, 88, 89, 90, 91, 205, 253, 296, 298], "sub_tensor": 232, "subclass": [1, 2, 3, 8, 85, 86, 87, 205, 206], "sublay": 83, "submodul": [83, 85, 205], "subsequ": [88, 91, 156, 231], "subset": [171, 172], "subtract": [8, 243, 297], "suffer": 210, "suit": [24, 25, 26, 27, 30, 68, 151, 152, 155, 156], "suitabl": [32, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 60, 61, 63, 82, 183, 210, 211, 226], "sum": [16, 87, 88, 89, 90, 91, 100, 117, 118, 119, 121, 122, 147, 163, 181, 182, 183, 184, 185, 210, 233, 236, 241, 253, 276, 278, 280, 282, 284, 287, 291, 293], "sum_": [15, 100, 163, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 198, 199, 200, 235, 236, 265, 273, 276, 278, 284, 287], "sum_i": [16, 241], "sum_j": 241, "sum_k": 237, "summar": [49, 50, 78, 198, 199, 200], "summari": [49, 50, 64, 65, 66, 67, 72], "summat": 15, "sun": 146, "super": [8, 83, 84, 85, 86, 87, 88, 89, 90, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 177, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 223], "support": [1, 3, 4, 8, 9, 15, 16, 17, 18, 20, 40, 87, 88, 89, 90, 91, 138, 139, 205, 207, 214, 231, 232, 233, 234, 237, 238, 239, 240, 242, 243, 245, 248, 258, 263, 265, 269, 271, 273, 276, 277, 278, 280, 284, 288, 295, 305], "suppos": 305, "sure": [205, 305], "svd": [13, 17], "symmetr": [10, 127, 128, 129, 155, 156, 164], "syntax": [1, 237], "system": [9, 10, 17, 18, 19, 82, 220, 284], "systemat": 305, "szegedi": [29, 82], "t": [17, 82, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 222, 232, 237, 279, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305], "t0": 208, "t1": 279, "t2": 279, "tabular": 4, "tailor": [4, 205, 305], "take": [18, 198, 199, 200, 201, 202, 203, 222, 294], "taken": 276, "tan": 253, "tangent": [101, 164, 257, 274, 275], "tanh": [36, 88, 91, 94, 95, 113, 151, 152, 155, 156, 158, 165, 176, 253], "tanhnetwork": 164, "target": [5, 6, 91, 117, 118, 119, 121, 122, 127, 128, 129, 138, 181, 182, 183, 184, 185, 195, 196, 197, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 296, 298, 303], "target_tensor": [181, 182, 183, 184, 185], "target_transform": [5, 6], "task": [4, 8, 9, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 72, 78, 82, 99, 100, 103, 114, 117, 118, 121, 122, 146, 147, 162, 163, 166, 167, 168, 181, 182, 183, 184, 185, 190, 191, 192, 198, 200, 201, 203, 211, 221, 231, 248, 305], "techniqu": [10, 14, 80, 123, 170, 171, 172, 173, 174, 190, 191, 192, 207, 303, 305], "tempor": [166, 168, 200, 203], "temporarili": 222, "tensor": [2, 3, 4, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 52, 53, 54, 55, 56, 57, 58, 69, 70, 71, 73, 78, 80, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 220, 222, 224, 226, 227, 228, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305], "term": [17, 114, 140, 141, 142, 143, 144, 145, 208, 212, 214, 215, 216, 218], "test": [4, 5, 6], "test_backward": 83, "test_siz": [5, 6], "text": [4, 11, 15, 16, 40, 51, 68, 69, 70, 71, 78, 87, 93, 96, 97, 98, 100, 102, 103, 104, 127, 128, 129, 130, 131, 132, 134, 135, 136, 140, 141, 142, 143, 144, 145, 146, 147, 151, 152, 155, 156, 157, 159, 160, 161, 163, 166, 167, 168, 170, 171, 172, 173, 174, 181, 182, 183, 184, 185, 198, 199, 200, 201, 202, 203, 208, 210, 211, 212, 213, 214, 215, 216, 217, 218, 227, 233, 234, 236, 238, 239, 240, 242, 243, 254, 258, 264, 265, 266, 268, 273, 278, 280, 282, 285, 286, 287, 288, 289, 291, 292, 293, 296, 297, 298, 300, 301, 302], "th": [114, 181, 182, 184, 185, 190, 191, 192, 238, 239, 242], "than": [0, 1, 5, 89, 90, 93, 96, 119, 143, 144, 145, 157, 159, 183, 206, 212, 258, 276, 285, 290, 296, 298, 303], "thei": [0, 8, 20, 82, 84, 88, 90, 91, 224, 284, 288, 296, 298, 305], "them": [3, 85, 90, 106, 208, 221, 280, 290, 294, 297, 305], "therebi": [170, 199, 200, 202, 203], "theta": [208, 209, 301], "theta_": [208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218], "theta_t": [215, 216], "thi": [0, 1, 2, 3, 5, 6, 8, 11, 12, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 40, 49, 50, 51, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 82, 83, 84, 86, 88, 89, 90, 91, 97, 99, 100, 101, 102, 103, 104, 106, 114, 116, 127, 138, 139, 143, 144, 145, 146, 147, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 185, 187, 188, 189, 190, 191, 192, 193, 195, 198, 199, 200, 201, 202, 203, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 227, 228, 229, 231, 232, 236, 237, 241, 244, 246, 249, 250, 251, 252, 258, 262, 263, 264, 265, 266, 269, 271, 273, 276, 277, 278, 279, 285, 287, 288, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305], "thing": 222, "those": [8, 37, 38, 39, 90, 156], "three": [20, 39, 104, 129, 132, 136, 140, 141, 142, 168, 174, 189, 192, 197, 200, 203], "threshold": [17, 119, 183], "through": [0, 3, 4, 8, 12, 17, 18, 20, 21, 28, 32, 36, 41, 42, 43, 44, 45, 46, 47, 48, 51, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 69, 70, 71, 79, 80, 87, 88, 91, 114, 116, 138, 146, 147, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 187, 188, 189, 190, 193, 198, 199, 200, 201, 202, 203, 228, 235, 236, 241, 284, 286, 288, 289, 292, 305], "throughout": [98, 295], "tile": 283, "time": [0, 3, 15, 37, 38, 39, 102, 140, 159, 161, 166, 198, 199, 200, 201, 202, 203, 208, 209, 210, 211, 212, 216, 218, 222, 287, 291], "to_tensor": [5, 6], "togeth": [91, 294, 305], "too": 217, "tool": [3, 8, 205, 221, 231, 294, 305], "top": [10, 11, 12, 18, 20, 114, 116, 138, 166, 167, 168, 177, 179, 296, 298], "torch": [73, 279], "total": [0, 1, 2, 5, 6, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 79, 81, 83, 86, 232, 288], "totensor": [294, 305], "trace": [9, 253], "track": [8, 140, 141, 142, 187, 188, 189, 190, 191, 192, 205, 220, 222, 226, 227, 228, 230, 244, 245, 246, 247, 248, 249, 250, 251, 252, 279, 295], "track_running_stat": [140, 141, 142, 187, 188, 189, 190, 191, 192], "tradit": [5, 209, 210, 213, 214, 215], "trail": 126, "train": [1, 2, 3, 4, 5, 6, 8, 28, 29, 30, 64, 65, 66, 67, 72, 82, 83, 84, 85, 88, 90, 91, 100, 107, 108, 109, 110, 111, 123, 125, 139, 158, 159, 161, 162, 163, 164, 170, 171, 172, 173, 174, 187, 188, 189, 190, 191, 192, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 222, 294, 297, 298, 299, 300, 301, 302, 305], "trainabl": [83, 187, 188, 189, 190, 191, 192, 205], "transact": 146, "transfer": [125, 190, 191], "transform": [2, 4, 5, 6, 8, 12, 82, 89, 114, 116, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 221, 284], "transform_pipelin": [294, 305], "transformed_imag": [294, 305], "transit": [23, 183], "translat": [199, 202], "transpos": [8, 10, 253], "treat": [0, 84, 193, 205], "triangular": [10, 18], "true": [1, 2, 3, 4, 5, 6, 20, 28, 29, 30, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 106, 107, 108, 109, 110, 111, 114, 116, 123, 125, 138, 140, 141, 142, 143, 144, 145, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 198, 199, 200, 201, 202, 203, 205, 206, 211, 212, 216, 220, 226, 227, 228, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295], "truncat": 83, "truncate_from": 83, "try": 0, "tune": 305, "tupl": [2, 3, 5, 6, 12, 18, 20, 23, 40, 83, 85, 86, 102, 103, 104, 106, 126, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 166, 167, 168, 178, 193, 196, 197, 198, 199, 200, 201, 202, 203, 211, 212, 213, 214, 215, 217, 224, 226, 227, 228, 230, 232, 246, 249, 251, 264, 265, 266, 273, 278, 280, 282, 284, 285, 288, 289, 290, 292, 293, 296, 297, 298, 303], "twice": 285, "two": [8, 11, 12, 14, 15, 17, 18, 20, 37, 38, 39, 69, 73, 102, 103, 104, 114, 131, 135, 146, 147, 167, 173, 177, 188, 191, 199, 202, 211, 212, 213, 214, 215, 217, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 276, 284], "type": [36, 40, 58, 68, 84, 85, 86, 114, 177, 232, 244, 245, 246, 247, 248, 249, 250, 251, 252, 279, 284, 295], "typeerror": [0, 1, 2, 85, 206], "typic": [9, 40, 51, 68, 84, 100, 107, 139, 146, 161, 163, 185, 187, 188, 189, 190, 191, 192, 207, 208, 216, 218, 222, 224, 292, 295, 297, 301, 303, 305], "u": [17, 20, 152, 154, 156], "u_": 213, "ultra": 46, "unchang": [84, 111, 157, 159, 160, 161, 170, 171, 172, 173, 174, 178, 286, 289], "undefin": 242, "under": [52, 53, 54, 55, 56, 57, 205], "underbrac": 15, "underdetermin": 17, "undergo": 305, "underli": [0, 8, 29, 30, 31, 33, 34, 279, 282, 286, 288, 293], "understand": [8, 80, 82, 83, 91, 305], "unexpect": [85, 88, 91, 231], "unfold": [105, 113], "unifi": 0, "uniform": [150, 152, 156, 166, 167, 168, 177, 179, 225, 226, 227, 231, 299, 300, 301, 302], "uniformli": [226, 230], "uniniti": [246, 247], "unintend": 222, "union": 73, "uniqu": [10, 17, 19, 87, 89], "unit": [21, 36, 80, 93, 94, 96, 97, 98, 151, 152, 155, 156, 157, 158, 159, 160, 161, 170], "unless": [41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 61, 62, 63, 232], "unlik": [84, 87, 88, 89, 90, 96, 157, 159, 170, 193, 209, 210, 212, 213, 214, 215, 217], "unnecessari": 222, "unpad": 285, "unseen": 305, "unsqueez": 283, "unstabl": 14, "up": [206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 301, 303], "updat": [4, 84, 90, 91, 170, 171, 172, 173, 174, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 222], "upon": [30, 82, 87, 88, 89, 90], "upper": [18, 154, 217, 230], "us": [0, 2, 3, 4, 5, 6, 8, 9, 10, 12, 14, 15, 17, 18, 20, 23, 28, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 58, 59, 60, 61, 62, 63, 68, 69, 70, 71, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 114, 116, 121, 123, 125, 128, 129, 138, 139, 140, 141, 142, 146, 147, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 220, 221, 222, 223, 226, 227, 228, 230, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 262, 264, 265, 266, 273, 278, 284, 285, 287, 289, 291, 292, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305], "usag": [3, 9, 23, 78, 88, 91, 143, 144, 145, 206, 207, 296, 297, 298, 299, 300, 301, 302, 303], "use_aux": [28, 29, 30], "user": [1, 2, 3, 4, 8, 87, 88, 89, 90, 205, 210, 294, 295, 305], "usual": 182, "util": [3, 8, 9, 69, 70, 71, 89, 90, 205, 231], "v": [12, 17, 20, 211, 212, 214, 215, 245], "v1": [28, 29, 32, 33, 34, 82], "v2": [32, 34, 82], "v3": [28, 30, 31, 82], "v4": [28, 31, 82], "v_": [208, 211, 212, 214, 215, 216, 218], "v_stack": 293, "v_t": [215, 216], "val": 149, "valid": [140, 141, 142, 143, 144, 145, 147, 166, 167, 168, 277], "valu": [8, 11, 15, 16, 17, 20, 49, 50, 83, 85, 87, 89, 91, 93, 96, 99, 100, 101, 102, 103, 104, 106, 117, 118, 119, 121, 122, 123, 125, 126, 127, 138, 139, 140, 141, 142, 146, 149, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 164, 170, 171, 172, 173, 174, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 198, 199, 200, 201, 202, 203, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 224, 226, 227, 228, 229, 230, 231, 244, 245, 246, 247, 248, 254, 255, 256, 258, 261, 262, 263, 264, 266, 268, 269, 271, 272, 280, 285, 286, 288, 292, 297, 299, 300, 302], "valuabl": 231, "valueerror": [1, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 206], "van": 82, "vanish": [82, 157, 161, 187, 188, 189], "var": 253, "vari": [68, 88, 90, 127, 138, 195, 301], "variabl": [85, 91, 127, 128, 129, 178, 195, 196, 197, 205, 220, 222, 226, 246, 298, 301], "varianc": [98, 107, 123, 125, 140, 141, 142, 151, 152, 155, 156, 161, 170, 187, 188, 189, 190, 191, 192, 193, 211, 212, 213, 214, 215, 228, 278, 301, 305], "variant": [23, 24, 25, 26, 27, 49, 50, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 211, 212, 213], "variat": [143, 144, 145, 190, 191, 192, 298, 305], "varieti": [4, 32, 231, 305], "variou": [5, 23, 28, 33, 34, 36, 82, 160, 207, 231, 264, 266, 285, 295], "vdot": 241, "vector": [12, 17, 18, 19, 20, 114, 116, 177, 179, 235, 236, 237, 241], "veloc": [208, 216, 218], "veri": [17, 43, 45, 82, 209], "versa": 217, "versatil": [231, 284], "version": [20, 28, 32, 36, 37, 38, 216, 241, 299], "vertic": [290, 293, 302], "vgg": 73, "vggnet": [35, 74, 75, 76, 77, 82], "vggnet_11": 82, "vggnet_13": 82, "vggnet_16": 82, "vggnet_19": 82, "via": [3, 4, 68], "vice": 217, "video": [104, 111, 142, 168, 192, 200, 203], "view": [32, 36, 88, 199, 200, 201, 202, 203, 288], "vision": [40, 82, 103, 167, 177, 305], "visual": [80, 82], "vol": 82, "vollgraf": 5, "volumetr": [104, 111, 142, 168, 192, 200, 203], "vstack": 283, "w": [40, 52, 53, 54, 55, 56, 57, 69, 70, 71, 103, 104, 106, 110, 111, 114, 116, 128, 129, 131, 132, 135, 136, 138, 139, 141, 142, 146, 166, 167, 168, 177, 179, 188, 189, 191, 192, 196, 197, 200, 203, 296, 298], "w_": [103, 104, 128, 129, 131, 132, 135, 136, 138, 167, 168, 196, 197, 199, 200, 202, 203], "w_out": [103, 104, 131, 132, 135, 136], "wa": [29, 170, 171, 172, 173, 174, 222], "wai": [1, 22, 81, 220, 222, 288], "wang": 82, "want": [0, 8, 294, 296], "warn": [87, 89], "we": [3, 8, 221, 284], "weight": [41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 61, 62, 63, 82, 102, 103, 104, 114, 116, 117, 118, 122, 123, 125, 126, 138, 146, 147, 151, 152, 155, 156, 166, 167, 168, 170, 171, 172, 173, 174, 177, 179, 181, 182, 185, 187, 188, 189, 190, 191, 192, 193, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 218, 226, 231], "weight1": 89, "weight2": 89, "weight_decai": [208, 209, 210, 211, 212, 213, 214, 215, 216, 218], "weinberg": 82, "well": [24, 25, 26, 27, 30, 68, 151, 152], "were": 91, "what": 222, "when": [0, 1, 3, 8, 15, 85, 88, 90, 91, 93, 96, 102, 103, 104, 157, 178, 187, 188, 189, 190, 191, 192, 206, 209, 217, 220, 222, 223, 224, 231, 242, 294, 296], "where": [3, 4, 5, 6, 11, 12, 14, 15, 16, 17, 18, 20, 78, 82, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 109, 110, 111, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 146, 147, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 198, 199, 200, 201, 202, 203, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 222, 224, 231, 233, 234, 238, 239, 240, 242, 243, 246, 247, 258, 262, 263, 264, 265, 266, 269, 271, 273, 276, 277, 278, 280, 285, 287, 291, 294, 295, 296, 297, 298, 299, 300, 301, 302], "whether": [1, 11, 28, 29, 30, 85, 86, 151, 152, 216, 220, 226, 227, 228, 230, 232, 246, 247, 264, 265, 266, 273, 278], "which": [0, 5, 8, 11, 12, 14, 15, 16, 17, 18, 20, 31, 34, 64, 65, 66, 67, 68, 72, 74, 75, 76, 77, 82, 85, 87, 89, 91, 96, 100, 119, 139, 143, 144, 145, 147, 157, 158, 159, 163, 164, 170, 183, 185, 187, 188, 189, 190, 191, 192, 193, 211, 212, 214, 216, 220, 222, 224, 226, 227, 230, 255, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 269, 270, 271, 273, 274, 275, 276, 278, 280, 287, 288, 290, 292, 295, 296, 298, 299, 300, 301, 302, 303, 305], "while": [8, 34, 51, 52, 53, 54, 55, 56, 57, 64, 65, 66, 67, 72, 82, 88, 91, 107, 158, 160, 205, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 222, 288, 290, 299, 305], "who": [8, 87, 88, 89, 90], "whose": [20, 247, 250, 252, 254, 258, 262, 268], "wide": [4, 6, 9, 17, 40, 48, 49, 50, 82, 97, 160, 166, 167, 182], "wide_resnet_101": 82, "wide_resnet_50": 82, "wider": [49, 50, 102, 103], "wideresnet": 82, "width": [49, 50, 51, 52, 53, 54, 55, 56, 57, 68, 78, 103, 104, 106, 110, 111, 128, 129, 131, 132, 135, 136, 138, 139, 147, 167, 168, 188, 189, 191, 192, 196, 197, 199, 200, 202, 203, 296, 298, 303], "window": [130, 131, 132, 134, 135, 136, 198, 199, 200, 201, 202, 203, 209, 264, 266], "wise": [62, 64, 65, 66, 67, 82, 93, 94, 96, 97, 98, 99, 100, 101, 140, 141, 142, 146, 163, 170, 171, 172, 173, 174, 205, 221, 233, 234, 237, 238, 239, 240, 242, 243, 254, 255, 256, 257, 258, 259, 260, 261, 263, 267, 268, 269, 270, 271, 272, 274, 275, 276, 282, 293], "within": [2, 82, 83, 84, 87, 88, 89, 90, 91, 101, 138, 139, 156, 158, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 178, 181, 182, 183, 184, 185, 187, 188, 189, 190, 193, 198, 199, 200, 201, 202, 203, 207, 222, 244, 258, 301, 305], "without": [8, 51, 87, 88, 89, 114, 116, 166, 167, 168, 177, 179, 220, 223, 264, 286, 288, 292], "won": 222, "work": [1, 2, 3, 8, 10, 221, 224], "workflow": [231, 305], "workload": 8, "wrap": [3, 205, 222, 279], "wrapper": 205, "x": [8, 9, 19, 32, 36, 58, 73, 78, 82, 83, 84, 85, 87, 88, 89, 90, 91, 100, 114, 116, 139, 143, 144, 145, 147, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 198, 199, 200, 201, 202, 203, 205, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 226, 227, 228, 230, 246, 247, 262, 284, 296, 297, 298, 299, 300, 301, 302, 303], "x1": 177, "x2": 177, "x_": [182, 185, 284], "x_c": [182, 185], "x_i": 181, "x_k": 182, "xavier": [151, 152, 155, 156], "xavier_norm": 150, "xavier_uniform": 150, "xception": [35, 82], "xiao": 5, "xie": 82, "xy": 284, "x\u2081": 177, "x\u2082": 177, "y": [78, 87, 88, 89, 90, 91, 139, 143, 144, 145, 157, 158, 159, 160, 161, 162, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 198, 199, 200, 201, 202, 203, 226, 227, 228, 230, 246, 247, 284, 299], "y_": [182, 185, 284], "y_c": [182, 185], "y_i": 181, "yann": [6, 82], "yet": [8, 221], "yield": [0, 1, 85, 222], "you": [0, 83, 88, 90, 91, 205, 207, 220, 222, 231, 246, 247, 248, 252, 277, 279, 294, 296, 305], "your": [205, 207, 220, 222, 231, 305], "z": [82, 247, 251, 252], "zalandoresearch": 5, "zeiler": [80, 82], "zero": [15, 17, 18, 30, 83, 93, 96, 102, 103, 104, 107, 108, 109, 110, 111, 130, 131, 132, 134, 135, 136, 149, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 166, 167, 168, 170, 171, 172, 173, 174, 193, 198, 199, 200, 201, 202, 203, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 246, 247, 248, 252, 253, 258, 268, 285], "zero_grad": [86, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 232], "zeros_lik": [247, 253], "zfnet": [35, 82], "zhang": 82, "zisserman": 82, "\u03c3\u1d62": 17}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "FashionMNIST", "MNIST", "Image Datasets", "Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "alexnet", "DenseNet", "densenet_121", "densenet_169", "densenet_201", "densenet_264", "Inception", "inception_v1", "inception_v3", "inception_v4", "InceptionResNet", "inception_resnet_v1", "inception_resnet_v2", "ConvNets", "LeNet", "lenet_1", "lenet_4", "lenet_5", "ResNet", "resnet_1001", "resnet_101", "resnet_152", "resnet_18", "resnet_200", "resnet_269", "resnet_34", "resnet_50", "wide_resnet_101", "wide_resnet_50", "ResNeXt", "resnext_101_32x16d", "resnext_101_32x32d", "resnext_101_32x4d", "resnext_101_32x8d", "resnext_101_64x4d", "resnext_50_32x4d", "SENet", "se_resnet_101", "se_resnet_152", "se_resnet_18", "se_resnet_34", "se_resnet_50", "se_resnext_101_32x4d", "se_resnext_101_32x8d", "se_resnext_101_64x4d", "se_resnext_50_32x4d", "SKNet", "sk_resnet_18", "sk_resnet_34", "sk_resnet_50", "sk_resnext_50_32x4d", "VGGNet", "vggnet_11", "vggnet_13", "vggnet_16", "vggnet_19", "Xception", "xception", "ZFNet", "zfnet", "lucid.models", "models.summarize", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "nn.DepthSeparableConv1d", "nn.DepthSeparableConv2d", "nn.DepthSeparableConv3d", "nn.SEModule", "nn.SelectiveKernel", "Fused Layers", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.LeakyReLU", "nn.ReLU", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Tanh", "Activation Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "lucid.nn", "optim.Optimizer", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.types", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.meshgrid", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.unsqueeze", "lucid.vstack", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": 221, "1d": 221, "2": 221, "2d": 221, "3": 221, "It": [220, 222], "ab": 254, "activ": [95, 113, 165, 176], "ad": 221, "adadelta": 209, "adagrad": 210, "adam": 211, "adamax": 213, "adamw": 212, "adaptive_avg_pool1d": 127, "adaptive_avg_pool2d": 128, "adaptive_avg_pool3d": 129, "adaptiveavgpool1d": 195, "adaptiveavgpool2d": 196, "adaptiveavgpool3d": 197, "add": 233, "addit": 17, "admonit": 224, "advanc": [106, 305], "alexnet": [21, 22], "algebra": 13, "algorithm": [208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218], "alias": 224, "align": 221, "alpha_dropout": 107, "alphadropout": 170, "also": 207, "anoth": 279, "arang": 244, "arcco": 255, "architectur": [21, 37, 38, 39, 49, 50, 80], "arcsin": 256, "arctan": 257, "asgd": 208, "attent": 147, "attribut": [5, 6, 21, 32, 36, 40, 51, 58, 68, 73, 78, 80, 84, 86, 87, 88, 89, 90, 91, 140, 141, 142, 143, 144, 145, 146, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 232, 296, 297, 298, 299, 300, 301, 302, 303], "avg_pool1d": 130, "avg_pool2d": 131, "avg_pool3d": 132, "avgpool1d": 198, "avgpool2d": 199, "avgpool3d": 200, "axi": 221, "backpropag": 232, "backward": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 114, 116, 138, 146, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 198, 199, 200, 201, 202, 203, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293], "batch_norm": 123, "batchnorm": 148, "batchnorm1d": 187, "batchnorm2d": 188, "batchnorm3d": 189, "bceloss": 181, "behavior": [127, 128, 129, 195, 196, 197], "benefit": 222, "bilinear": [114, 177], "binari": 253, "binary_cross_entropi": 117, "broadcast": 221, "buffer": 84, "calcul": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 40, 51, 58, 68, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 106, 114, 116, 127, 128, 129, 138, 140, 141, 142, 143, 144, 145, 146, 147, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 297, 298, 299, 300, 301, 302, 303], "captur": 223, "case": 224, "centercrop": 296, "choleski": 10, "class": [0, 1, 2, 5, 6, 21, 23, 28, 32, 36, 40, 51, 58, 68, 73, 78, 80, 84, 85, 86, 87, 88, 89, 90, 91, 140, 141, 142, 143, 144, 145, 146, 147, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 232, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303], "clip": 258, "co": 259, "combin": 0, "compon": [3, 8, 205], "compos": 294, "concatdataset": [0, 1], "concaten": 280, "conclus": [3, 8, 205, 220, 221, 222, 231, 295, 305], "constant": 149, "contain": 92, "conv": 148, "conv1d": [102, 166], "conv2d": [103, 167], "conv3d": [104, 168], "convbnrelu1d": 140, "convbnrelu2d": 141, "convbnrelu3d": 142, "convnet": [35, 82], "convolut": [105, 113, 148, 169, 176], "core": 8, "cosh": 260, "creat": [86, 232, 279], "cross_entropi": 118, "crossentropyloss": 182, "cube": 261, "custom": [1, 2, 3, 85, 206, 207, 305], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 7], "defin": [2, 85, 206, 207], "definit": 224, "densenet": 23, "densenet_121": 24, "densenet_169": 25, "densenet_201": 26, "densenet_264": 27, "depthseparableconv1d": 143, "depthseparableconv2d": 144, "depthseparableconv3d": 145, "depthwis": 148, "descript": [52, 53, 54, 55, 56, 57, 69, 70, 71, 223], "det": 11, "detail": [17, 49, 50], "diag": 245, "dilat": 106, "div": 234, "dot": 235, "dropout": [108, 112, 113, 171, 175, 176], "dropout1d": [109, 172], "dropout2d": [110, 173], "dropout3d": [111, 174], "eig": 12, "elu": [93, 157], "empti": 246, "empty_lik": 247, "exampl": [0, 1, 2, 3, 5, 6, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 305], "excit": 148, "exp": 262, "ey": 248, "fashionmnist": 5, "featur": [4, 8, 9, 64, 65, 66, 67, 72, 207, 231, 305], "flatten": 281, "forward": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 40, 51, 58, 68, 78, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 106, 114, 116, 127, 128, 129, 138, 140, 141, 142, 143, 144, 145, 146, 147, 151, 152, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 296, 297, 298, 299, 300, 301, 302, 303], "from": 279, "function": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 79, 81, 83, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 149, 151, 152, 153, 154, 155, 156, 220, 222, 223, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293], "fuse": 148, "futur": 4, "gelu": [94, 158], "gener": [225, 253], "get": 207, "grad_en": 220, "gradient": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 114, 116, 138, 146, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 198, 199, 200, 201, 202, 203, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 280, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293], "guidelin": 224, "how": [220, 222], "hstack": 282, "huber_loss": 119, "huberloss": 183, "ident": 178, "imag": [7, 304], "incept": 28, "inception_resnet_v1": 33, "inception_resnet_v2": 34, "inception_v1": 29, "inception_v3": 30, "inception_v4": 31, "inceptionresnet": 32, "index": 232, "init": [149, 151, 152, 153, 154, 155, 156], "initi": 150, "inner": 236, "input": 279, "inspect": [207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218], "instance_norm": 125, "instancenorm1d": 190, "instancenorm2d": 191, "instancenorm3d": 192, "integr": [3, 205, 231, 305], "interpol": 138, "inv": 14, "iter": 232, "kaiming_norm": 151, "kaiming_uniform": 152, "kei": [3, 4, 8, 64, 65, 66, 67, 72, 205, 207, 231, 305], "kernel": 148, "layer": [148, 165, 169, 175, 176, 180, 186, 194, 204], "layer_norm": 126, "layernorm": 193, "leaky_relu": 96, "leakyrelu": 159, "learn": 231, "lenet": 36, "lenet_1": 37, "lenet_4": 38, "lenet_5": 39, "limit": 8, "linalg": [9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20], "linear": [13, 113, 115, 116, 176, 179, 180], "list": 279, "load": 1, "log": 263, "loss": [113, 120, 176, 186], "lucid": [3, 4, 8, 9, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 82, 113, 205, 207, 220, 221, 222, 223, 224, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 305], "matmul": 237, "matrix": 237, "matrix_pow": 15, "max": 264, "max_pool1d": 134, "max_pool2d": 135, "max_pool3d": 136, "maximum": 238, "maxpool1d": 201, "maxpool2d": 202, "maxpool3d": 203, "mean": 265, "mechan": 147, "meshgrid": 284, "metadata": 223, "method": [0, 1, 2, 5, 6, 32, 36, 73, 85, 86, 206, 232], "min": 266, "minimum": 239, "mnist": 6, "model": [82, 83, 205], "modul": [85, 176], "moduledict": 87, "modulelist": 88, "more": 231, "mse_loss": 121, "mseloss": 184, "mul": 240, "multipl": [0, 237], "nadam": 214, "new": 221, "newaxi": 221, "nll_loss": 122, "nllloss": 185, "nn": [84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 113, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205], "no_grad": 222, "norm": 16, "normal": [113, 124, 153, 176, 194, 297], "note": 8, "number": 225, "ones": 249, "ones_lik": 250, "oper": [13, 237, 253], "optim": [206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219], "organ": 205, "outer": 241, "overview": [3, 4, 8, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 59, 60, 61, 62, 63, 205, 207, 231, 305], "pad": 285, "paramet": [1, 5, 6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 222, 223, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303], "parameterdict": 89, "parameterlist": 90, "pass": 78, "perform": 232, "pinv": 17, "pipelin": [3, 305], "pitfal": [220, 222], "pool": [113, 133, 176, 204], "potenti": [220, 222], "power": 242, "properti": [86, 232], "qr": 18, "radam": 215, "rais": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20], "rand": 226, "randint": 227, "randn": 228, "random": [225, 226, 227, 228, 229, 230, 231], "randomcrop": 298, "randomgrayscal": 299, "randomhorizontalflip": 300, "randomrot": 301, "randomverticalflip": 302, "ravel": 286, "reciproc": 267, "refer": [5, 6, 146, 207], "register_model": 223, "relu": [97, 148, 160], "repeat": 287, "reshap": 288, "resiz": 303, "resnet": 40, "resnet_1001": 41, "resnet_101": 42, "resnet_152": 43, "resnet_18": 44, "resnet_200": 45, "resnet_269": 46, "resnet_34": 47, "resnet_50": 48, "resnext": 51, "resnext_101_32x16d": 52, "resnext_101_32x32d": 53, "resnext_101_32x4d": 54, "resnext_101_32x8d": 55, "resnext_101_64x4d": 56, "resnext_50_32x4d": 57, "return": [10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 22, 24, 25, 26, 27, 29, 30, 31, 33, 34, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 74, 75, 76, 77, 79, 81, 83, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 147, 149, 151, 152, 153, 154, 155, 156, 220, 222, 226, 227, 228, 229, 230, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293], "rmsprop": 216, "rotat": 139, "rprop": 217, "rule": 237, "se_resnet_101": 59, "se_resnet_152": 60, "se_resnet_18": 61, "se_resnet_34": 62, "se_resnet_50": 63, "se_resnext_101_32x4d": 64, "se_resnext_101_32x8d": 65, "se_resnext_101_64x4d": 66, "se_resnext_50_32x4d": 67, "see": 207, "seed": 229, "select": 148, "selectivekernel": 147, "selu": [98, 161], "semodul": 146, "senet": 58, "separ": 148, "sequenti": 91, "sgd": 218, "sigmoid": [99, 162], "sign": 268, "signatur": [0, 1, 2, 5, 6, 10, 11, 12, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 114, 116, 117, 118, 119, 121, 122, 123, 125, 126, 127, 128, 129, 130, 131, 132, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 149, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 166, 167, 168, 170, 171, 172, 173, 174, 177, 178, 179, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 195, 196, 197, 198, 199, 200, 201, 202, 203, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 222, 223, 226, 227, 228, 229, 230, 232, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303], "sin": 269, "sinh": 270, "sk_resnet_18": 69, "sk_resnet_34": 70, "sk_resnet_50": 71, "sk_resnext_50_32x4d": 72, "sknet": 68, "slice": 232, "softmax": [100, 163], "solv": 19, "sqrt": 271, "squar": 272, "squeez": [148, 289], "stack": 290, "start": 207, "state": [207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218], "sub": 243, "sum": 273, "summar": 83, "summari": 83, "svd": 20, "tabl": 83, "tan": 274, "tanh": [101, 164, 275], "tensor": [221, 232, 253, 279, 283], "through": 232, "tile": 291, "totensor": 295, "trace": 276, "track": 232, "transform": [294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305], "transpos": 277, "type": 224, "unari": 253, "unfold": 106, "uniform": [154, 230], "unsqueez": 292, "us": [1, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 224, 279], "usag": [4, 8, 29, 30, 31, 33, 34, 36, 37, 38, 39, 64, 65, 66, 67, 72, 84, 139, 220, 221, 222, 224, 284, 294, 295, 305], "util": [113, 137], "utilit": 283, "var": 278, "vggnet": 73, "vggnet_11": 74, "vggnet_13": 75, "vggnet_16": 76, "vggnet_19": 77, "vstack": 293, "weight": 150, "why": 224, "wide_resnet_101": 49, "wide_resnet_50": 50, "work": [4, 220, 222], "xavier_norm": 155, "xavier_uniform": 156, "xception": [78, 79], "zero": 251, "zeros_lik": 252, "zfnet": [80, 81]}})