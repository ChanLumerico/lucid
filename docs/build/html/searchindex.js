Search.setIndex({"alltitles": {"@ Operator": [[342, "operator"]], "Activation Functions": [[171, null], [193, null]], "Activation Layers": [[251, null], [269, null]], "Additional Details": [[24, "additional-details"]], "Additional Options": [[252, "additional-options"]], "Admonitions and Usage Guidelines": [[328, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[184, "advanced-example-with-dilation"]], "Advanced Features": [[416, "advanced-features"]], "Advantages": [[10, "advantages"], [12, "advantages"], [13, "advantages"], [14, "advantages"], [267, "advantages"]], "AlexNet": [[28, null]], "Algorithm": [[312, "algorithm"], [313, "algorithm"], [314, "algorithm"], [315, "algorithm"], [316, "algorithm"], [317, "algorithm"], [318, "algorithm"], [319, "algorithm"], [320, "algorithm"], [321, "algorithm"], [322, "algorithm"]], "Architecture": [[28, "architecture"], [39, "architecture"], [87, "architecture"], [88, "architecture"], [89, "architecture"], [152, "architecture"]], "Architecture Details": [[121, "architecture-details"], [122, "architecture-details"]], "Attention Functions": [[178, null], [193, null]], "Attention Layers": [[254, null], [269, null]], "Attention Mechanism": [[179, "attention-mechanism"], [229, "attention-mechanism"]], "Attributes": [[5, "attributes"], [6, "attributes"], [7, "attributes"], [8, "attributes"], [28, "attributes"], [82, "attributes"], [86, "attributes"], [112, "attributes"], [123, "attributes"], [130, "attributes"], [140, "attributes"], [145, "attributes"], [150, "attributes"], [152, "attributes"], [160, "attributes"], [162, "attributes"], [163, "attributes"], [164, "attributes"], [165, "attributes"], [166, "attributes"], [167, "attributes"], [222, "attributes"], [223, "attributes"], [224, "attributes"], [225, "attributes"], [226, "attributes"], [227, "attributes"], [228, "attributes"], [239, "attributes"], [240, "attributes"], [243, "attributes"], [244, "attributes"], [246, "attributes"], [247, "attributes"], [248, "attributes"], [250, "attributes"], [255, "attributes"], [256, "attributes"], [257, "attributes"], [259, "attributes"], [261, "attributes"], [262, "attributes"], [263, "attributes"], [264, "attributes"], [265, "attributes"], [270, "attributes"], [271, "attributes"], [272, "attributes"], [274, "attributes"], [275, "attributes"], [276, "attributes"], [277, "attributes"], [278, "attributes"], [280, "attributes"], [281, "attributes"], [282, "attributes"], [284, "attributes"], [285, "attributes"], [286, "attributes"], [287, "attributes"], [289, "attributes"], [290, "attributes"], [291, "attributes"], [292, "attributes"], [293, "attributes"], [294, "attributes"], [295, "attributes"], [296, "attributes"], [297, "attributes"], [337, "attributes"], [407, "attributes"], [408, "attributes"], [409, "attributes"], [410, "attributes"], [411, "attributes"], [412, "attributes"], [413, "attributes"], [414, "attributes"]], "Backward Gradient Calculation": [[17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [21, "backward-gradient-calculation"], [22, "backward-gradient-calculation"], [23, "backward-gradient-calculation"], [24, "backward-gradient-calculation"], [25, "backward-gradient-calculation"], [26, "backward-gradient-calculation"], [27, "backward-gradient-calculation"], [163, "backward-gradient-calculation"], [164, "backward-gradient-calculation"], [165, "backward-gradient-calculation"], [166, "backward-gradient-calculation"], [167, "backward-gradient-calculation"], [169, "backward-gradient-calculation"], [170, "backward-gradient-calculation"], [172, "backward-gradient-calculation"], [173, "backward-gradient-calculation"], [174, "backward-gradient-calculation"], [175, "backward-gradient-calculation"], [176, "backward-gradient-calculation"], [177, "backward-gradient-calculation"], [186, "backward-gradient-calculation"], [194, "backward-gradient-calculation"], [196, "backward-gradient-calculation"], [220, "backward-gradient-calculation"], [228, "backward-gradient-calculation"], [238, "backward-gradient-calculation"], [239, "backward-gradient-calculation"], [240, "backward-gradient-calculation"], [241, "backward-gradient-calculation"], [242, "backward-gradient-calculation"], [243, "backward-gradient-calculation"], [244, "backward-gradient-calculation"], [246, "backward-gradient-calculation"], [247, "backward-gradient-calculation"], [248, "backward-gradient-calculation"], [249, "backward-gradient-calculation"], [250, "backward-gradient-calculation"], [255, "backward-gradient-calculation"], [256, "backward-gradient-calculation"], [257, "backward-gradient-calculation"], [259, "backward-gradient-calculation"], [262, "backward-gradient-calculation"], [263, "backward-gradient-calculation"], [264, "backward-gradient-calculation"], [265, "backward-gradient-calculation"], [270, "backward-gradient-calculation"], [271, "backward-gradient-calculation"], [272, "backward-gradient-calculation"], [274, "backward-gradient-calculation"], [275, "backward-gradient-calculation"], [276, "backward-gradient-calculation"], [277, "backward-gradient-calculation"], [278, "backward-gradient-calculation"], [280, "backward-gradient-calculation"], [281, "backward-gradient-calculation"], [282, "backward-gradient-calculation"], [284, "backward-gradient-calculation"], [285, "backward-gradient-calculation"], [286, "backward-gradient-calculation"], [287, "backward-gradient-calculation"], [292, "backward-gradient-calculation"], [293, "backward-gradient-calculation"], [294, "backward-gradient-calculation"], [295, "backward-gradient-calculation"], [296, "backward-gradient-calculation"], [297, "backward-gradient-calculation"], [338, "backward-gradient-calculation"], [339, "backward-gradient-calculation"], [340, "backward-gradient-calculation"], [341, "backward-gradient-calculation"], [342, "backward-gradient-calculation"], [343, "backward-gradient-calculation"], [344, "backward-gradient-calculation"], [345, "backward-gradient-calculation"], [346, "backward-gradient-calculation"], [347, "backward-gradient-calculation"], [348, "backward-gradient-calculation"], [360, "backward-gradient-calculation"], [361, "backward-gradient-calculation"], [362, "backward-gradient-calculation"], [363, "backward-gradient-calculation"], [364, "backward-gradient-calculation"], [365, "backward-gradient-calculation"], [366, "backward-gradient-calculation"], [367, "backward-gradient-calculation"], [368, "backward-gradient-calculation"], [369, "backward-gradient-calculation"], [370, "backward-gradient-calculation"], [371, "backward-gradient-calculation"], [372, "backward-gradient-calculation"], [373, "backward-gradient-calculation"], [374, "backward-gradient-calculation"], [375, "backward-gradient-calculation"], [376, "backward-gradient-calculation"], [377, "backward-gradient-calculation"], [378, "backward-gradient-calculation"], [379, "backward-gradient-calculation"], [380, "backward-gradient-calculation"], [381, "backward-gradient-calculation"], [382, "backward-gradient-calculation"], [383, "backward-gradient-calculation"], [384, "backward-gradient-calculation"], [386, "backward-gradient-calculation"], [388, "backward-gradient-calculation"], [390, "backward-gradient-calculation"], [392, "backward-gradient-calculation"], [393, "backward-gradient-calculation"], [394, "backward-gradient-calculation"], [395, "backward-gradient-calculation"], [396, "backward-gradient-calculation"], [398, "backward-gradient-calculation"], [399, "backward-gradient-calculation"], [400, "backward-gradient-calculation"], [401, "backward-gradient-calculation"], [402, "backward-gradient-calculation"], [403, "backward-gradient-calculation"], [404, "backward-gradient-calculation"]], "Behavior": [[208, "behavior"], [209, "behavior"], [210, "behavior"], [289, "behavior"], [290, "behavior"], [291, "behavior"]], "Benefits": [[326, "benefits"]], "Binary Functions": [[359, null]], "Bottleneck Configuration": [[96, "bottleneck-configuration"], [97, "bottleneck-configuration"]], "Broadcasting Rules": [[386, "broadcasting-rules"]], "CIFAR10": [[5, null]], "CIFAR100": [[6, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [6, "class-signature"], [7, "class-signature"], [8, "class-signature"], [28, "class-signature"], [30, "class-signature"], [39, "class-signature"], [40, "class-signature"], [54, "class-signature"], [59, "class-signature"], [60, "class-signature"], [73, "class-signature"], [77, "class-signature"], [82, "class-signature"], [86, "class-signature"], [90, "class-signature"], [91, "class-signature"], [92, "class-signature"], [93, "class-signature"], [103, "class-signature"], [112, "class-signature"], [123, "class-signature"], [130, "class-signature"], [140, "class-signature"], [145, "class-signature"], [150, "class-signature"], [152, "class-signature"], [156, "class-signature"], [160, "class-signature"], [161, "class-signature"], [162, "class-signature"], [163, "class-signature"], [164, "class-signature"], [165, "class-signature"], [166, "class-signature"], [167, "class-signature"], [222, "class-signature"], [223, "class-signature"], [224, "class-signature"], [225, "class-signature"], [226, "class-signature"], [227, "class-signature"], [228, "class-signature"], [229, "class-signature"], [239, "class-signature"], [240, "class-signature"], [241, "class-signature"], [242, "class-signature"], [243, "class-signature"], [244, "class-signature"], [245, "class-signature"], [246, "class-signature"], [247, "class-signature"], [248, "class-signature"], [249, "class-signature"], [250, "class-signature"], [252, "class-signature"], [253, "class-signature"], [255, "class-signature"], [256, "class-signature"], [257, "class-signature"], [259, "class-signature"], [260, "class-signature"], [261, "class-signature"], [262, "class-signature"], [263, "class-signature"], [264, "class-signature"], [265, "class-signature"], [267, "class-signature"], [270, "class-signature"], [271, "class-signature"], [272, "class-signature"], [274, "class-signature"], [275, "class-signature"], [276, "class-signature"], [277, "class-signature"], [278, "class-signature"], [280, "class-signature"], [281, "class-signature"], [282, "class-signature"], [283, "class-signature"], [284, "class-signature"], [285, "class-signature"], [286, "class-signature"], [287, "class-signature"], [289, "class-signature"], [290, "class-signature"], [291, "class-signature"], [292, "class-signature"], [293, "class-signature"], [294, "class-signature"], [295, "class-signature"], [296, "class-signature"], [297, "class-signature"], [299, "class-signature"], [301, "class-signature"], [302, "class-signature"], [303, "class-signature"], [304, "class-signature"], [305, "class-signature"], [307, "class-signature"], [310, "class-signature"], [312, "class-signature"], [313, "class-signature"], [314, "class-signature"], [315, "class-signature"], [316, "class-signature"], [317, "class-signature"], [318, "class-signature"], [319, "class-signature"], [320, "class-signature"], [321, "class-signature"], [322, "class-signature"], [337, "class-signature"], [405, "class-signature"], [406, "class-signature"], [407, "class-signature"], [408, "class-signature"], [409, "class-signature"], [410, "class-signature"], [411, "class-signature"], [412, "class-signature"], [413, "class-signature"], [414, "class-signature"]], "CoAtNet": [[30, null]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [10, "conclusion"], [12, "conclusion"], [13, "conclusion"], [14, "conclusion"], [15, "conclusion"], [267, "conclusion"], [309, "conclusion"], [324, "conclusion"], [325, "conclusion"], [326, "conclusion"], [336, "conclusion"], [406, "conclusion"], [416, "conclusion"]], "Configuration": [[31, "configuration"], [32, "configuration"], [33, "configuration"], [34, "configuration"], [35, "configuration"], [36, "configuration"], [37, "configuration"], [38, "configuration"]], "Configurations": [[59, "configurations"]], "Containers": [[168, null]], "Conv-BatchNorm-ReLU": [[230, null]], "ConvNeXt": [[39, null]], "ConvNeXt_V2": [[40, null]], "ConvNets": [[85, null], [154, "convnets"]], "Convolution Functions": [[183, null], [193, null]], "Convolution Layers": [[258, null], [269, null]], "Core Components": [[15, "core-components"]], "Create a Tensor from a list": [[385, null]], "Creating a Parameter": [[162, null]], "Creating a tensor with gradient tracking": [[337, null]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[416, "custom-pipelines"]], "Defining a Custom Optimizer": [[311, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[161, null]], "Defining a custom optimizer": [[310, null]], "DenseNet": [[54, null]], "Depthwise Separable Convolution": [[230, null]], "Description": [[124, "description"], [125, "description"], [126, "description"], [127, "description"], [128, "description"], [129, "description"], [141, "description"], [142, "description"], [143, "description"], [327, "description"]], "Details": [[98, "details"], [99, "details"], [100, "details"], [101, "details"], [102, "details"]], "Differences from nn.Transformer": [[156, "differences-from-nn-transformer"]], "Dropout Functions": [[192, null], [193, null]], "Dropout Layers": [[266, null], [269, null]], "EfficientNet": [[59, null]], "EfficientNet Configurations": [[59, "id1"]], "EfficientNet_V2": [[60, null]], "Einops Functions": [[11, null]], "Einops Layers": [[268, null], [269, null]], "Embedding Process": [[218, "embedding-process"]], "Example": [[3, null], [3, null], [3, null], [10, null], [10, null], [10, null], [17, "example"], [18, "example"], [19, "example"], [21, "example"], [22, "example"], [23, "example"], [24, "example"], [25, "example"], [26, "example"], [27, "example"], [78, "example"], [79, "example"], [80, "example"], [81, "example"], [94, "example"], [95, "example"], [184, "example"], [309, null], [309, null], [309, null], [324, "example"], [326, "example"], [329, "example"], [331, "example"], [332, "example"], [333, "example"], [334, "example"], [335, "example"], [336, null], [336, null], [336, null], [349, "example"], [350, "example"], [351, "example"], [352, "example"], [353, "example"], [355, "example"], [356, "example"], [357, "example"], [358, "example"], [360, "example"], [361, "example"], [362, "example"], [363, "example"], [364, "example"], [365, "example"], [366, "example"], [367, "example"], [369, "example"], [371, "example"], [373, "example"], [374, "example"], [375, "example"], [376, "example"], [377, "example"], [378, "example"], [379, "example"], [380, "example"], [381, "example"], [382, "example"], [383, "example"], [384, "example"], [387, "example"], [388, "example"], [390, "example"], [394, "example"], [396, "example"], [398, "example"], [399, "example"], [401, "example"], [402, "example"], [403, "example"], [404, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[325, null]], "Example 2: Adding a new axis to a 2D tensor": [[325, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[325, null]], "Example Usage": [[15, "example-usage"], [74, "example-usage"], [75, "example-usage"], [76, "example-usage"], [83, "example-usage"], [84, "example-usage"], [86, "example-usage"], [87, "example-usage"], [88, "example-usage"], [89, "example-usage"], [136, "example-usage"], [137, "example-usage"], [138, "example-usage"], [139, "example-usage"], [144, "example-usage"], [221, "example-usage"], [405, "example-usage"], [406, "example-usage"], [416, "example-usage"]], "Example Use Cases": [[328, "example-use-cases"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [6, "examples"], [7, "examples"], [8, "examples"], [12, "examples"], [13, "examples"], [14, "examples"], [16, "examples"], [28, "examples"], [29, "examples"], [30, "examples"], [31, "examples"], [32, "examples"], [33, "examples"], [34, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [47, "examples"], [48, "examples"], [49, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [53, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [61, "examples"], [62, "examples"], [63, "examples"], [64, "examples"], [65, "examples"], [66, "examples"], [67, "examples"], [68, "examples"], [69, "examples"], [70, "examples"], [71, "examples"], [72, "examples"], [77, "examples"], [92, "examples"], [96, "examples"], [97, "examples"], [103, "examples"], [104, "examples"], [105, "examples"], [106, "examples"], [107, "examples"], [108, "examples"], [109, "examples"], [110, "examples"], [111, "examples"], [112, "examples"], [113, "examples"], [114, "examples"], [115, "examples"], [116, "examples"], [117, "examples"], [118, "examples"], [119, "examples"], [120, "examples"], [121, "examples"], [122, "examples"], [124, "examples"], [125, "examples"], [126, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [131, "examples"], [132, "examples"], [133, "examples"], [134, "examples"], [135, "examples"], [141, "examples"], [142, "examples"], [143, "examples"], [145, "examples"], [146, "examples"], [147, "examples"], [148, "examples"], [149, "examples"], [150, "examples"], [151, "examples"], [152, "examples"], [153, "examples"], [155, "examples"], [156, "examples"], [157, "examples"], [158, "examples"], [160, "examples"], [161, "examples"], [162, "examples"], [163, "examples"], [164, "examples"], [165, "examples"], [166, "examples"], [167, "examples"], [169, "examples"], [170, "examples"], [172, "examples"], [173, "examples"], [174, "examples"], [175, "examples"], [176, "examples"], [177, "examples"], [179, "examples"], [180, "examples"], [181, "examples"], [182, "examples"], [185, "examples"], [186, "examples"], [187, "examples"], [188, "examples"], [189, "examples"], [190, "examples"], [191, "examples"], [194, "examples"], [196, "examples"], [197, "examples"], [198, "examples"], [199, "examples"], [201, "examples"], [202, "examples"], [203, "examples"], [204, "examples"], [206, "examples"], [207, "examples"], [208, "examples"], [209, "examples"], [210, "examples"], [211, "examples"], [212, "examples"], [213, "examples"], [215, "examples"], [216, "examples"], [217, "examples"], [218, "examples"], [220, "examples"], [222, "examples"], [223, "examples"], [224, "examples"], [225, "examples"], [226, "examples"], [227, "examples"], [228, "examples"], [229, "examples"], [231, "examples"], [233, "examples"], [234, "examples"], [235, "examples"], [236, "examples"], [237, "examples"], [238, "examples"], [239, "examples"], [240, "examples"], [241, "examples"], [242, "examples"], [243, "examples"], [244, "examples"], [245, "examples"], [246, "examples"], [247, "examples"], [248, "examples"], [249, "examples"], [250, "examples"], [253, "examples"], [255, "examples"], [256, "examples"], [257, "examples"], [259, "examples"], [260, "examples"], [261, "examples"], [262, "examples"], [263, "examples"], [264, "examples"], [265, "examples"], [267, "examples"], [270, "examples"], [271, "examples"], [272, "examples"], [274, "examples"], [275, "examples"], [276, "examples"], [277, "examples"], [278, "examples"], [280, "examples"], [281, "examples"], [282, "examples"], [283, "examples"], [284, "examples"], [285, "examples"], [286, "examples"], [287, "examples"], [289, "examples"], [290, "examples"], [291, "examples"], [292, "examples"], [293, "examples"], [294, "examples"], [295, "examples"], [296, "examples"], [297, "examples"], [299, "examples"], [307, "examples"], [310, "examples"], [311, "examples"], [312, "examples"], [313, "examples"], [314, "examples"], [315, "examples"], [316, "examples"], [317, "examples"], [318, "examples"], [319, "examples"], [320, "examples"], [321, "examples"], [322, "examples"], [327, "examples"], [337, "examples"], [338, "examples"], [339, "examples"], [340, "examples"], [341, "examples"], [343, "examples"], [344, "examples"], [345, "examples"], [346, "examples"], [347, "examples"], [348, "examples"], [354, "examples"], [368, "examples"], [370, "examples"], [372, "examples"], [385, "examples"], [386, "examples"], [389, "examples"], [392, "examples"], [393, "examples"], [395, "examples"], [397, "examples"], [400, "examples"], [407, "examples"], [408, "examples"], [409, "examples"], [410, "examples"], [411, "examples"], [412, "examples"], [413, "examples"], [414, "examples"]], "FashionMNIST": [[7, null]], "Features": [[16, "features"]], "Forward Calculation": [[17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [21, "forward-calculation"], [22, "forward-calculation"], [23, "forward-calculation"], [24, "forward-calculation"], [25, "forward-calculation"], [26, "forward-calculation"], [27, "forward-calculation"], [112, "forward-calculation"], [123, "forward-calculation"], [130, "forward-calculation"], [140, "forward-calculation"], [163, "forward-calculation"], [164, "forward-calculation"], [165, "forward-calculation"], [166, "forward-calculation"], [167, "forward-calculation"], [169, "forward-calculation"], [170, "forward-calculation"], [172, "forward-calculation"], [173, "forward-calculation"], [174, "forward-calculation"], [175, "forward-calculation"], [176, "forward-calculation"], [177, "forward-calculation"], [184, "forward-calculation"], [187, "forward-calculation"], [194, "forward-calculation"], [196, "forward-calculation"], [208, "forward-calculation"], [209, "forward-calculation"], [210, "forward-calculation"], [220, "forward-calculation"], [222, "forward-calculation"], [223, "forward-calculation"], [224, "forward-calculation"], [225, "forward-calculation"], [226, "forward-calculation"], [227, "forward-calculation"], [228, "forward-calculation"], [229, "forward-calculation"], [233, "forward-calculation"], [234, "forward-calculation"], [237, "forward-calculation"], [238, "forward-calculation"], [239, "forward-calculation"], [240, "forward-calculation"], [241, "forward-calculation"], [242, "forward-calculation"], [243, "forward-calculation"], [244, "forward-calculation"], [245, "forward-calculation"], [246, "forward-calculation"], [247, "forward-calculation"], [248, "forward-calculation"], [249, "forward-calculation"], [250, "forward-calculation"], [253, "forward-calculation"], [255, "forward-calculation"], [256, "forward-calculation"], [257, "forward-calculation"], [259, "forward-calculation"], [260, "forward-calculation"], [261, "forward-calculation"], [262, "forward-calculation"], [263, "forward-calculation"], [264, "forward-calculation"], [265, "forward-calculation"], [270, "forward-calculation"], [271, "forward-calculation"], [272, "forward-calculation"], [274, "forward-calculation"], [275, "forward-calculation"], [276, "forward-calculation"], [277, "forward-calculation"], [278, "forward-calculation"], [280, "forward-calculation"], [281, "forward-calculation"], [282, "forward-calculation"], [283, "forward-calculation"], [284, "forward-calculation"], [285, "forward-calculation"], [286, "forward-calculation"], [287, "forward-calculation"], [289, "forward-calculation"], [290, "forward-calculation"], [291, "forward-calculation"], [292, "forward-calculation"], [293, "forward-calculation"], [294, "forward-calculation"], [295, "forward-calculation"], [296, "forward-calculation"], [297, "forward-calculation"], [338, "forward-calculation"], [339, "forward-calculation"], [340, "forward-calculation"], [341, "forward-calculation"], [342, "forward-calculation"], [343, "forward-calculation"], [344, "forward-calculation"], [345, "forward-calculation"], [346, "forward-calculation"], [347, "forward-calculation"], [348, "forward-calculation"], [360, "forward-calculation"], [361, "forward-calculation"], [362, "forward-calculation"], [363, "forward-calculation"], [364, "forward-calculation"], [365, "forward-calculation"], [366, "forward-calculation"], [367, "forward-calculation"], [368, "forward-calculation"], [369, "forward-calculation"], [370, "forward-calculation"], [371, "forward-calculation"], [372, "forward-calculation"], [373, "forward-calculation"], [374, "forward-calculation"], [375, "forward-calculation"], [376, "forward-calculation"], [377, "forward-calculation"], [378, "forward-calculation"], [379, "forward-calculation"], [380, "forward-calculation"], [381, "forward-calculation"], [382, "forward-calculation"], [383, "forward-calculation"], [384, "forward-calculation"], [388, "forward-calculation"], [390, "forward-calculation"], [392, "forward-calculation"], [393, "forward-calculation"], [394, "forward-calculation"], [395, "forward-calculation"], [396, "forward-calculation"], [398, "forward-calculation"], [399, "forward-calculation"], [400, "forward-calculation"], [401, "forward-calculation"], [402, "forward-calculation"], [403, "forward-calculation"], [404, "forward-calculation"], [407, "forward-calculation"], [408, "forward-calculation"], [409, "forward-calculation"], [410, "forward-calculation"], [411, "forward-calculation"], [412, "forward-calculation"], [413, "forward-calculation"], [414, "forward-calculation"]], "Forward Method": [[301, "forward-method"], [302, "forward-method"], [303, "forward-method"], [304, "forward-method"], [305, "forward-method"]], "Forward Pass": [[150, "forward-pass"]], "Function Signature": [[12, "function-signature"], [13, "function-signature"], [14, "function-signature"], [17, "function-signature"], [18, "function-signature"], [19, "function-signature"], [21, "function-signature"], [22, "function-signature"], [23, "function-signature"], [24, "function-signature"], [25, "function-signature"], [26, "function-signature"], [27, "function-signature"], [29, "function-signature"], [31, "function-signature"], [32, "function-signature"], [33, "function-signature"], [34, "function-signature"], [35, "function-signature"], [36, "function-signature"], [37, "function-signature"], [38, "function-signature"], [41, "function-signature"], [42, "function-signature"], [43, "function-signature"], [44, "function-signature"], [45, "function-signature"], [46, "function-signature"], [47, "function-signature"], [48, "function-signature"], [49, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [53, "function-signature"], [55, "function-signature"], [56, "function-signature"], [57, "function-signature"], [58, "function-signature"], [61, "function-signature"], [62, "function-signature"], [63, "function-signature"], [64, "function-signature"], [65, "function-signature"], [66, "function-signature"], [67, "function-signature"], [68, "function-signature"], [69, "function-signature"], [70, "function-signature"], [71, "function-signature"], [72, "function-signature"], [74, "function-signature"], [75, "function-signature"], [76, "function-signature"], [78, "function-signature"], [79, "function-signature"], [80, "function-signature"], [81, "function-signature"], [83, "function-signature"], [84, "function-signature"], [87, "function-signature"], [88, "function-signature"], [89, "function-signature"], [94, "function-signature"], [95, "function-signature"], [96, "function-signature"], [97, "function-signature"], [98, "function-signature"], [99, "function-signature"], [100, "function-signature"], [101, "function-signature"], [102, "function-signature"], [104, "function-signature"], [105, "function-signature"], [106, "function-signature"], [107, "function-signature"], [108, "function-signature"], [109, "function-signature"], [110, "function-signature"], [111, "function-signature"], [113, "function-signature"], [114, "function-signature"], [115, "function-signature"], [116, "function-signature"], [117, "function-signature"], [118, "function-signature"], [119, "function-signature"], [120, "function-signature"], [121, "function-signature"], [122, "function-signature"], [124, "function-signature"], [125, "function-signature"], [126, "function-signature"], [127, "function-signature"], [128, "function-signature"], [129, "function-signature"], [131, "function-signature"], [132, "function-signature"], [133, "function-signature"], [134, "function-signature"], [135, "function-signature"], [136, "function-signature"], [137, "function-signature"], [138, "function-signature"], [139, "function-signature"], [141, "function-signature"], [142, "function-signature"], [143, "function-signature"], [144, "function-signature"], [146, "function-signature"], [147, "function-signature"], [148, "function-signature"], [149, "function-signature"], [151, "function-signature"], [153, "function-signature"], [155, "function-signature"], [157, "function-signature"], [158, "function-signature"], [169, "function-signature"], [170, "function-signature"], [172, "function-signature"], [173, "function-signature"], [174, "function-signature"], [175, "function-signature"], [176, "function-signature"], [177, "function-signature"], [179, "function-signature"], [180, "function-signature"], [181, "function-signature"], [182, "function-signature"], [184, "function-signature"], [185, "function-signature"], [186, "function-signature"], [187, "function-signature"], [188, "function-signature"], [189, "function-signature"], [190, "function-signature"], [191, "function-signature"], [194, "function-signature"], [196, "function-signature"], [197, "function-signature"], [198, "function-signature"], [199, "function-signature"], [201, "function-signature"], [202, "function-signature"], [203, "function-signature"], [204, "function-signature"], [206, "function-signature"], [207, "function-signature"], [208, "function-signature"], [209, "function-signature"], [210, "function-signature"], [211, "function-signature"], [212, "function-signature"], [213, "function-signature"], [215, "function-signature"], [216, "function-signature"], [217, "function-signature"], [218, "function-signature"], [220, "function-signature"], [221, "function-signature"], [231, "function-signature"], [233, "function-signature"], [234, "function-signature"], [235, "function-signature"], [236, "function-signature"], [237, "function-signature"], [238, "function-signature"], [324, "function-signature"], [326, "function-signature"], [327, "function-signature"], [329, "function-signature"], [331, "function-signature"], [332, "function-signature"], [333, "function-signature"], [334, "function-signature"], [335, "function-signature"], [338, "function-signature"], [339, "function-signature"], [340, "function-signature"], [341, "function-signature"], [342, "function-signature"], [343, "function-signature"], [344, "function-signature"], [345, "function-signature"], [346, "function-signature"], [347, "function-signature"], [348, "function-signature"], [349, "function-signature"], [350, "function-signature"], [351, "function-signature"], [352, "function-signature"], [353, "function-signature"], [354, "function-signature"], [355, "function-signature"], [356, "function-signature"], [357, "function-signature"], [358, "function-signature"], [360, "function-signature"], [361, "function-signature"], [362, "function-signature"], [363, "function-signature"], [364, "function-signature"], [365, "function-signature"], [366, "function-signature"], [367, "function-signature"], [368, "function-signature"], [369, "function-signature"], [370, "function-signature"], [371, "function-signature"], [372, "function-signature"], [373, "function-signature"], [374, "function-signature"], [375, "function-signature"], [376, "function-signature"], [377, "function-signature"], [378, "function-signature"], [379, "function-signature"], [380, "function-signature"], [381, "function-signature"], [382, "function-signature"], [383, "function-signature"], [384, "function-signature"], [385, "function-signature"], [386, "function-signature"], [387, "function-signature"], [388, "function-signature"], [389, "function-signature"], [390, "function-signature"], [392, "function-signature"], [393, "function-signature"], [394, "function-signature"], [395, "function-signature"], [396, "function-signature"], [397, "function-signature"], [398, "function-signature"], [399, "function-signature"], [400, "function-signature"], [401, "function-signature"], [402, "function-signature"], [403, "function-signature"], [404, "function-signature"]], "Fused Layers": [[230, null]], "Future Work": [[4, "future-work"]], "Getting Started": [[311, "getting-started"]], "Gradient Computation": [[387, "gradient-computation"]], "How It Works": [[324, "how-it-works"], [326, "how-it-works"]], "Hybrid Architecture": [[30, "hybrid-architecture"]], "Hyperparameter Configuration": [[110, "hyperparameter-configuration"], [111, "hyperparameter-configuration"]], "Image Datasets": [[9, null]], "Image Transformations": [[415, null]], "Inception": [[73, null]], "InceptionNeXt": [[77, null]], "InceptionResNet": [[82, null]], "Indexing and slicing": [[337, null]], "Inspecting Optimizer State": [[311, null], [312, null], [313, null], [314, null], [315, null], [316, null], [317, null], [318, null], [319, null], [320, null], [321, null], [322, null]], "Integration with lucid": [[3, "integration-with-lucid"], [309, "integration-with-lucid"], [336, "integration-with-lucid"], [416, "integration-with-lucid"]], "Iterating through a tensor": [[337, null]], "Key Components": [[3, "key-components"], [309, "key-components"]], "Key Features": [[4, "key-features"], [15, "key-features"], [136, "key-features"], [137, "key-features"], [138, "key-features"], [139, "key-features"], [144, "key-features"], [311, "key-features"], [336, "key-features"]], "Key Transformations": [[416, "key-transformations"]], "Layer Configuration": [[104, "layer-configuration"], [105, "layer-configuration"], [106, "layer-configuration"], [107, "layer-configuration"], [108, "layer-configuration"], [109, "layer-configuration"]], "LeNet": [[86, null]], "Learn More": [[336, null]], "Limitations": [[15, "limitations"]], "Linear Algebra Operations": [[20, null]], "Linear Functions": [[193, null], [195, null]], "Linear Layers": [[269, null], [273, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[193, null], [200, null]], "Loss Layers": [[269, null], [279, null]], "Lucid": [[15, null]], "MNIST": [[8, null]], "Mathematical Definition": [[12, "mathematical-definition"], [13, "mathematical-definition"], [14, "mathematical-definition"], [267, "mathematical-definition"]], "Mathematical Details": [[252, "mathematical-details"], [301, "mathematical-details"], [302, "mathematical-details"], [303, "mathematical-details"], [304, "mathematical-details"], [305, "mathematical-details"]], "Mathematical Expression": [[204, "mathematical-expression"], [397, "mathematical-expression"]], "Matrix Multiplication Rules": [[342, "matrix-multiplication-rules"]], "Metadata Captured": [[327, "metadata-captured"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [6, "methods"], [7, "methods"], [8, "methods"], [82, "methods"], [86, "methods"], [145, "methods"], [161, "methods"], [162, "methods"], [310, "methods"], [337, "methods"]], "MobileNet": [[90, null]], "MobileNet_V2": [[91, null]], "MobileNet_V3": [[92, null]], "MobileNet_V4": [[93, null]], "Modules": [[269, null]], "Normalization Functions": [[193, null], [205, null]], "Normalization Layers": [[269, null], [288, null]], "Notes": [[15, "notes"]], "Optimizers": [[323, null]], "Organizing Models": [[309, "organizing-models"]], "Overview": [[3, "overview"], [4, "overview"], [10, "overview"], [15, "overview"], [73, "overview"], [74, "overview"], [75, "overview"], [76, "overview"], [82, "overview"], [83, "overview"], [84, "overview"], [86, "overview"], [87, "overview"], [88, "overview"], [89, "overview"], [90, "overview"], [91, "overview"], [92, "overview"], [93, "overview"], [98, "overview"], [99, "overview"], [100, "overview"], [101, "overview"], [102, "overview"], [113, "overview"], [114, "overview"], [115, "overview"], [116, "overview"], [117, "overview"], [118, "overview"], [119, "overview"], [120, "overview"], [131, "overview"], [132, "overview"], [133, "overview"], [134, "overview"], [135, "overview"], [252, "overview"], [301, "overview"], [302, "overview"], [303, "overview"], [304, "overview"], [305, "overview"], [309, "overview"], [311, "overview"], [336, "overview"], [416, "overview"]], "Parameters": [[1, "parameters"], [5, "parameters"], [6, "parameters"], [7, "parameters"], [8, "parameters"], [12, "parameters"], [13, "parameters"], [14, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [84, "parameters"], [86, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [104, "parameters"], [105, "parameters"], [106, "parameters"], [107, "parameters"], [108, "parameters"], [109, "parameters"], [110, "parameters"], [111, "parameters"], [112, "parameters"], [113, "parameters"], [114, "parameters"], [115, "parameters"], [116, "parameters"], [117, "parameters"], [118, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [122, "parameters"], [123, "parameters"], [124, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [155, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"], [160, "parameters"], [162, "parameters"], [163, "parameters"], [164, "parameters"], [165, "parameters"], [166, "parameters"], [167, "parameters"], [169, "parameters"], [170, "parameters"], [172, "parameters"], [173, "parameters"], [174, "parameters"], [175, "parameters"], [176, "parameters"], [177, "parameters"], [179, "parameters"], [180, "parameters"], [181, "parameters"], [182, "parameters"], [184, "parameters"], [185, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [189, "parameters"], [190, "parameters"], [191, "parameters"], [194, "parameters"], [196, "parameters"], [197, "parameters"], [198, "parameters"], [199, "parameters"], [201, "parameters"], [202, "parameters"], [203, "parameters"], [204, "parameters"], [206, "parameters"], [207, "parameters"], [208, "parameters"], [209, "parameters"], [210, "parameters"], [211, "parameters"], [212, "parameters"], [213, "parameters"], [215, "parameters"], [216, "parameters"], [217, "parameters"], [218, "parameters"], [220, "parameters"], [221, "parameters"], [222, "parameters"], [223, "parameters"], [224, "parameters"], [225, "parameters"], [226, "parameters"], [227, "parameters"], [228, "parameters"], [229, "parameters"], [231, "parameters"], [233, "parameters"], [234, "parameters"], [235, "parameters"], [236, "parameters"], [237, "parameters"], [238, "parameters"], [239, "parameters"], [240, "parameters"], [243, "parameters"], [244, "parameters"], [246, "parameters"], [247, "parameters"], [248, "parameters"], [250, "parameters"], [252, "parameters"], [253, "parameters"], [255, "parameters"], [256, "parameters"], [257, "parameters"], [259, "parameters"], [260, "parameters"], [261, "parameters"], [262, "parameters"], [263, "parameters"], [264, "parameters"], [265, "parameters"], [267, "parameters"], [270, "parameters"], [271, "parameters"], [272, "parameters"], [274, "parameters"], [275, "parameters"], [276, "parameters"], [277, "parameters"], [278, "parameters"], [280, "parameters"], [281, "parameters"], [282, "parameters"], [283, "parameters"], [284, "parameters"], [285, "parameters"], [286, "parameters"], [287, "parameters"], [289, "parameters"], [290, "parameters"], [291, "parameters"], [292, "parameters"], [293, "parameters"], [294, "parameters"], [295, "parameters"], [296, "parameters"], [297, "parameters"], [299, "parameters"], [301, "parameters"], [302, "parameters"], [303, "parameters"], [304, "parameters"], [305, "parameters"], [307, "parameters"], [312, "parameters"], [313, "parameters"], [314, "parameters"], [315, "parameters"], [316, "parameters"], [317, "parameters"], [318, "parameters"], [319, "parameters"], [320, "parameters"], [321, "parameters"], [322, "parameters"], [326, "parameters"], [327, "parameters"], [329, "parameters"], [331, "parameters"], [332, "parameters"], [333, "parameters"], [334, "parameters"], [335, "parameters"], [337, "parameters"], [338, "parameters"], [339, "parameters"], [340, "parameters"], [341, "parameters"], [342, "parameters"], [343, "parameters"], [344, "parameters"], [345, "parameters"], [346, "parameters"], [347, "parameters"], [348, "parameters"], [349, "parameters"], [350, "parameters"], [351, "parameters"], [352, "parameters"], [353, "parameters"], [354, "parameters"], [355, "parameters"], [356, "parameters"], [357, "parameters"], [358, "parameters"], [360, "parameters"], [361, "parameters"], [362, "parameters"], [363, "parameters"], [364, "parameters"], [365, "parameters"], [366, "parameters"], [367, "parameters"], [368, "parameters"], [369, "parameters"], [370, "parameters"], [371, "parameters"], [372, "parameters"], [373, "parameters"], [374, "parameters"], [375, "parameters"], [376, "parameters"], [377, "parameters"], [378, "parameters"], [379, "parameters"], [380, "parameters"], [381, "parameters"], [382, "parameters"], [383, "parameters"], [384, "parameters"], [385, "parameters"], [386, "parameters"], [387, "parameters"], [388, "parameters"], [389, "parameters"], [390, "parameters"], [392, "parameters"], [393, "parameters"], [394, "parameters"], [395, "parameters"], [396, "parameters"], [397, "parameters"], [398, "parameters"], [399, "parameters"], [400, "parameters"], [401, "parameters"], [402, "parameters"], [403, "parameters"], [404, "parameters"], [405, "parameters"], [406, "parameters"], [407, "parameters"], [408, "parameters"], [409, "parameters"], [410, "parameters"], [411, "parameters"], [412, "parameters"], [413, "parameters"], [414, "parameters"]], "Performing backpropagation": [[337, null]], "Pooling Functions": [[193, null], [214, null]], "Pooling Layers": [[269, null], [298, null]], "Potential Pitfalls": [[324, "potential-pitfalls"], [326, "potential-pitfalls"]], "Properties": [[162, "properties"], [337, "properties"]], "Raises": [[17, "raises"], [18, "raises"], [19, "raises"], [21, "raises"], [22, "raises"], [23, "raises"], [24, "raises"], [25, "raises"], [26, "raises"], [27, "raises"]], "Random Number Generations": [[330, null]], "References": [[5, "references"], [6, "references"], [7, "references"], [8, "references"], [228, "references"], [311, "references"]], "Regularization": [[186, "regularization"]], "ResNeSt": [[103, null]], "ResNeXt": [[123, null]], "ResNet": [[112, null]], "Return Values": [[397, "return-values"]], "Returns": [[12, "returns"], [13, "returns"], [14, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [21, "returns"], [22, "returns"], [23, "returns"], [24, "returns"], [25, "returns"], [26, "returns"], [27, "returns"], [29, "returns"], [41, "returns"], [42, "returns"], [43, "returns"], [44, "returns"], [45, "returns"], [46, "returns"], [47, "returns"], [48, "returns"], [49, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [53, "returns"], [55, "returns"], [56, "returns"], [57, "returns"], [58, "returns"], [61, "returns"], [62, "returns"], [63, "returns"], [64, "returns"], [65, "returns"], [66, "returns"], [67, "returns"], [68, "returns"], [69, "returns"], [70, "returns"], [71, "returns"], [72, "returns"], [74, "returns"], [75, "returns"], [76, "returns"], [78, "returns"], [79, "returns"], [80, "returns"], [81, "returns"], [83, "returns"], [84, "returns"], [87, "returns"], [88, "returns"], [89, "returns"], [94, "returns"], [95, "returns"], [96, "returns"], [97, "returns"], [104, "returns"], [105, "returns"], [106, "returns"], [107, "returns"], [108, "returns"], [109, "returns"], [110, "returns"], [111, "returns"], [113, "returns"], [114, "returns"], [115, "returns"], [116, "returns"], [117, "returns"], [118, "returns"], [119, "returns"], [120, "returns"], [121, "returns"], [122, "returns"], [124, "returns"], [125, "returns"], [126, "returns"], [127, "returns"], [128, "returns"], [129, "returns"], [131, "returns"], [132, "returns"], [133, "returns"], [134, "returns"], [135, "returns"], [136, "returns"], [137, "returns"], [138, "returns"], [139, "returns"], [141, "returns"], [142, "returns"], [143, "returns"], [144, "returns"], [146, "returns"], [147, "returns"], [148, "returns"], [149, "returns"], [151, "returns"], [153, "returns"], [155, "returns"], [157, "returns"], [158, "returns"], [169, "returns"], [170, "returns"], [172, "returns"], [173, "returns"], [174, "returns"], [175, "returns"], [176, "returns"], [177, "returns"], [179, "returns"], [180, "returns"], [181, "returns"], [182, "returns"], [184, "returns"], [185, "returns"], [186, "returns"], [187, "returns"], [188, "returns"], [189, "returns"], [190, "returns"], [191, "returns"], [194, "returns"], [196, "returns"], [197, "returns"], [198, "returns"], [199, "returns"], [201, "returns"], [202, "returns"], [203, "returns"], [204, "returns"], [206, "returns"], [207, "returns"], [208, "returns"], [209, "returns"], [210, "returns"], [211, "returns"], [212, "returns"], [213, "returns"], [215, "returns"], [216, "returns"], [217, "returns"], [218, "returns"], [220, "returns"], [221, "returns"], [229, "returns"], [231, "returns"], [233, "returns"], [234, "returns"], [235, "returns"], [236, "returns"], [237, "returns"], [238, "returns"], [245, "returns"], [267, "returns"], [299, "returns"], [324, "returns"], [326, "returns"], [329, "returns"], [331, "returns"], [332, "returns"], [333, "returns"], [334, "returns"], [335, "returns"], [338, "returns"], [339, "returns"], [340, "returns"], [341, "returns"], [342, "returns"], [343, "returns"], [344, "returns"], [345, "returns"], [346, "returns"], [347, "returns"], [348, "returns"], [349, "returns"], [350, "returns"], [351, "returns"], [352, "returns"], [353, "returns"], [354, "returns"], [355, "returns"], [356, "returns"], [357, "returns"], [358, "returns"], [360, "returns"], [361, "returns"], [362, "returns"], [363, "returns"], [364, "returns"], [365, "returns"], [366, "returns"], [367, "returns"], [368, "returns"], [369, "returns"], [370, "returns"], [371, "returns"], [372, "returns"], [373, "returns"], [374, "returns"], [375, "returns"], [376, "returns"], [377, "returns"], [378, "returns"], [379, "returns"], [380, "returns"], [381, "returns"], [382, "returns"], [383, "returns"], [384, "returns"], [385, "returns"], [386, "returns"], [387, "returns"], [388, "returns"], [389, "returns"], [390, "returns"], [392, "returns"], [393, "returns"], [394, "returns"], [395, "returns"], [396, "returns"], [398, "returns"], [399, "returns"], [400, "returns"], [401, "returns"], [402, "returns"], [403, "returns"], [404, "returns"]], "SENet": [[130, null]], "SKNet": [[140, null]], "See Also": [[311, "see-also"]], "Selective Kernel": [[230, null]], "Sparse Layers": [[269, null], [300, null]], "Squeeze-and-Excitation": [[230, null]], "Summary Table": [[155, "summary-table"]], "Tensor Generating Functions": [[359, null]], "Tensor Operations": [[359, null]], "Tensor Utilites": [[391, null]], "Transformer": [[156, null]], "Transformer Layers": [[269, null], [306, null]], "Transformers": [[154, "transformers"], [159, null]], "Type Definitions": [[328, "type-definitions"]], "Unary Functions": [[359, null]], "Usage": [[4, "usage"], [69, "usage"], [70, "usage"], [71, "usage"], [72, "usage"], [160, "usage"], [221, "usage"], [324, "usage"], [325, "usage"], [326, "usage"], [392, "usage"], [405, "usage"], [406, "usage"], [416, "usage"]], "Usage Example": [[98, "usage-example"], [99, "usage-example"], [100, "usage-example"], [101, "usage-example"], [102, "usage-example"], [252, "usage-example"], [301, "usage-example"], [302, "usage-example"], [303, "usage-example"], [304, "usage-example"], [305, "usage-example"]], "Use another Tensor as input": [[385, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using the ASGD Optimizer": [[312, null]], "Using the Adadelta Optimizer": [[313, null]], "Using the Adagrad Optimizer": [[314, null]], "Using the Adam Optimizer": [[315, null]], "Using the AdamW Optimizer": [[316, null]], "Using the Adamax Optimizer": [[317, null]], "Using the NAdam Optimizer": [[318, null]], "Using the RAdam Optimizer": [[319, null]], "Using the RMSprop Optimizer": [[320, null]], "Using the Rprop Optimizer": [[321, null]], "Using the SGD Optimizer": [[322, null]], "Utility Functions": [[193, null], [219, null]], "VGGNet": [[145, null]], "Vision Layers": [[269, null], [308, null]], "Weight Initializations": [[232, null]], "Why Use Type Aliases?": [[328, null]], "Xception": [[150, null]], "ZFNet": [[152, null]], "alexnet": [[29, null]], "coatnet_0": [[31, null]], "coatnet_1": [[32, null]], "coatnet_2": [[33, null]], "coatnet_3": [[34, null]], "coatnet_4": [[35, null]], "coatnet_5": [[36, null]], "coatnet_6": [[37, null]], "coatnet_7": [[38, null]], "convnext_base": [[41, null]], "convnext_large": [[42, null]], "convnext_small": [[43, null]], "convnext_tiny": [[44, null]], "convnext_v2_atto": [[45, null]], "convnext_v2_base": [[46, null]], "convnext_v2_femto": [[47, null]], "convnext_v2_huge": [[48, null]], "convnext_v2_large": [[49, null]], "convnext_v2_nano": [[50, null]], "convnext_v2_pico": [[51, null]], "convnext_v2_tiny": [[52, null]], "convnext_xlarge": [[53, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "densenet_121": [[55, null]], "densenet_169": [[56, null]], "densenet_201": [[57, null]], "densenet_264": [[58, null]], "efficientnet_b0": [[61, null]], "efficientnet_b1": [[62, null]], "efficientnet_b2": [[63, null]], "efficientnet_b3": [[64, null]], "efficientnet_b4": [[65, null]], "efficientnet_b5": [[66, null]], "efficientnet_b6": [[67, null]], "efficientnet_b7": [[68, null]], "efficientnet_v2_l": [[69, null]], "efficientnet_v2_m": [[70, null]], "efficientnet_v2_s": [[71, null]], "efficientnet_v2_xl": [[72, null]], "inception_next_atto": [[78, null]], "inception_next_base": [[79, null]], "inception_next_small": [[80, null]], "inception_next_tiny": [[81, null]], "inception_resnet_v1": [[83, null]], "inception_resnet_v2": [[84, null]], "inception_v1": [[74, null]], "inception_v3": [[75, null]], "inception_v4": [[76, null]], "lenet_1": [[87, null]], "lenet_4": [[88, null]], "lenet_5": [[89, null]], "lucid.Tensor": [[337, null]], "lucid.abs": [[360, null]], "lucid.add": [[338, null]], "lucid.arange": [[349, null]], "lucid.arccos": [[361, null]], "lucid.arcsin": [[362, null]], "lucid.arctan": [[363, null]], "lucid.broadcast_to": [[386, null]], "lucid.chunk": [[387, null]], "lucid.clip": [[364, null]], "lucid.concatenate": [[388, null]], "lucid.cos": [[365, null]], "lucid.cosh": [[366, null]], "lucid.cube": [[367, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[350, null]], "lucid.div": [[339, null]], "lucid.dot": [[340, null]], "lucid.einops": [[10, null]], "lucid.einops.rearrange": [[12, null]], "lucid.einops.reduce": [[13, null]], "lucid.einops.repeat": [[14, null]], "lucid.empty": [[351, null]], "lucid.empty_like": [[352, null]], "lucid.exp": [[368, null]], "lucid.eye": [[353, null]], "lucid.flatten": [[389, null]], "lucid.grad_enabled": [[324, null]], "lucid.hstack": [[390, null]], "lucid.inner": [[341, null]], "lucid.linalg": [[16, null]], "lucid.linalg.cholesky": [[17, null]], "lucid.linalg.det": [[18, null]], "lucid.linalg.eig": [[19, null]], "lucid.linalg.inv": [[21, null]], "lucid.linalg.matrix_power": [[22, null]], "lucid.linalg.norm": [[23, null]], "lucid.linalg.pinv": [[24, null]], "lucid.linalg.qr": [[25, null]], "lucid.linalg.solve": [[26, null]], "lucid.linalg.svd": [[27, null]], "lucid.linspace": [[354, null]], "lucid.log": [[369, null]], "lucid.matmul": [[342, null]], "lucid.max": [[370, null]], "lucid.maximum": [[343, null]], "lucid.mean": [[371, null]], "lucid.meshgrid": [[392, null]], "lucid.min": [[372, null]], "lucid.minimum": [[344, null]], "lucid.models": [[154, null]], "lucid.mul": [[345, null]], "lucid.newaxis": [[325, null]], "lucid.nn": [[309, null]], "lucid.nn.functional": [[193, null]], "lucid.no_grad": [[326, null]], "lucid.ones": [[355, null]], "lucid.ones_like": [[356, null]], "lucid.optim": [[311, null]], "lucid.outer": [[346, null]], "lucid.pad": [[393, null]], "lucid.power": [[347, null]], "lucid.random": [[336, null]], "lucid.random.bernoulli": [[329, null]], "lucid.random.rand": [[331, null]], "lucid.random.randint": [[332, null]], "lucid.random.randn": [[333, null]], "lucid.random.seed": [[334, null]], "lucid.random.uniform": [[335, null]], "lucid.ravel": [[394, null]], "lucid.reciprocal": [[373, null]], "lucid.register_model": [[327, null]], "lucid.repeat": [[395, null]], "lucid.reshape": [[396, null]], "lucid.sign": [[374, null]], "lucid.sin": [[375, null]], "lucid.sinh": [[376, null]], "lucid.split": [[397, null]], "lucid.sqrt": [[377, null]], "lucid.square": [[378, null]], "lucid.squeeze": [[398, null]], "lucid.stack": [[399, null]], "lucid.sub": [[348, null]], "lucid.sum": [[379, null]], "lucid.tan": [[380, null]], "lucid.tanh": [[381, null]], "lucid.tensor": [[385, null]], "lucid.tile": [[400, null]], "lucid.trace": [[382, null]], "lucid.transforms": [[416, null]], "lucid.transpose": [[383, null]], "lucid.tril": [[401, null]], "lucid.triu": [[402, null]], "lucid.types": [[328, null]], "lucid.unsqueeze": [[403, null]], "lucid.var": [[384, null]], "lucid.vstack": [[404, null]], "lucid.zeros": [[357, null]], "lucid.zeros_like": [[358, null]], "mobilenet": [[94, null]], "mobilenet_v2": [[95, null]], "mobilenet_v3_large": [[96, null]], "mobilenet_v3_small": [[97, null]], "mobilenet_v4_conv_large": [[98, null]], "mobilenet_v4_conv_medium": [[99, null]], "mobilenet_v4_conv_small": [[100, null]], "mobilenet_v4_hybrid_large": [[101, null]], "mobilenet_v4_hybrid_medium": [[102, null]], "models.summarize": [[155, null]], "nn.AdaptiveAvgPool1d": [[289, null]], "nn.AdaptiveAvgPool2d": [[290, null]], "nn.AdaptiveAvgPool3d": [[291, null]], "nn.AlphaDropout": [[259, null]], "nn.AvgPool1d": [[292, null]], "nn.AvgPool2d": [[293, null]], "nn.AvgPool3d": [[294, null]], "nn.BCELoss": [[274, null]], "nn.BatchNorm1d": [[280, null]], "nn.BatchNorm2d": [[281, null]], "nn.BatchNorm3d": [[282, null]], "nn.Bilinear": [[270, null]], "nn.Buffer": [[160, null]], "nn.Conv1d": [[255, null]], "nn.Conv2d": [[256, null]], "nn.Conv3d": [[257, null]], "nn.ConvBNReLU1d": [[222, null]], "nn.ConvBNReLU2d": [[223, null]], "nn.ConvBNReLU3d": [[224, null]], "nn.CrossEntropyLoss": [[275, null]], "nn.DepthSeparableConv1d": [[225, null]], "nn.DepthSeparableConv2d": [[226, null]], "nn.DepthSeparableConv3d": [[227, null]], "nn.DropBlock": [[260, null]], "nn.DropPath": [[261, null]], "nn.Dropout": [[262, null]], "nn.Dropout1d": [[263, null]], "nn.Dropout2d": [[264, null]], "nn.Dropout3d": [[265, null]], "nn.ELU": [[239, null]], "nn.Embedding": [[299, null]], "nn.GELU": [[240, null]], "nn.GlobalResponseNorm": [[283, null]], "nn.HardSigmoid": [[241, null]], "nn.HardSwish": [[242, null]], "nn.HuberLoss": [[276, null]], "nn.Identity": [[271, null]], "nn.InstanceNorm1d": [[284, null]], "nn.InstanceNorm2d": [[285, null]], "nn.InstanceNorm3d": [[286, null]], "nn.LayerNorm": [[287, null]], "nn.LeakyReLU": [[243, null]], "nn.Linear": [[272, null]], "nn.MSELoss": [[277, null]], "nn.MaxPool1d": [[295, null]], "nn.MaxPool2d": [[296, null]], "nn.MaxPool3d": [[297, null]], "nn.Module": [[161, null]], "nn.ModuleDict": [[163, null]], "nn.ModuleList": [[164, null]], "nn.MultiHeadAttention": [[252, null]], "nn.NLLLoss": [[278, null]], "nn.Parameter": [[162, null]], "nn.ParameterDict": [[165, null]], "nn.ParameterList": [[166, null]], "nn.ReLU": [[244, null]], "nn.ReLU6": [[245, null]], "nn.Rearrange": [[267, null]], "nn.SELU": [[246, null]], "nn.SEModule": [[228, null]], "nn.ScaledDotProductAttention": [[253, null]], "nn.SelectiveKernel": [[229, null]], "nn.Sequential": [[167, null]], "nn.Sigmoid": [[247, null]], "nn.Softmax": [[248, null]], "nn.Swish": [[249, null]], "nn.Tanh": [[250, null]], "nn.Transformer": [[301, null]], "nn.TransformerDecoder": [[302, null]], "nn.TransformerDecoderLayer": [[303, null]], "nn.TransformerEncoder": [[304, null]], "nn.TransformerEncoderLayer": [[305, null]], "nn.Upsample": [[307, null]], "nn.functional.adaptive_avg_pool1d": [[208, null]], "nn.functional.adaptive_avg_pool2d": [[209, null]], "nn.functional.adaptive_avg_pool3d": [[210, null]], "nn.functional.alpha_dropout": [[185, null]], "nn.functional.avg_pool1d": [[211, null]], "nn.functional.avg_pool2d": [[212, null]], "nn.functional.avg_pool3d": [[213, null]], "nn.functional.batch_norm": [[203, null]], "nn.functional.bilinear": [[194, null]], "nn.functional.binary_cross_entropy": [[197, null]], "nn.functional.conv1d": [[180, null]], "nn.functional.conv2d": [[181, null]], "nn.functional.conv3d": [[182, null]], "nn.functional.cross_entropy": [[198, null]], "nn.functional.drop_block": [[186, null]], "nn.functional.drop_path": [[187, null]], "nn.functional.dropout": [[188, null]], "nn.functional.dropout1d": [[189, null]], "nn.functional.dropout2d": [[190, null]], "nn.functional.dropout3d": [[191, null]], "nn.functional.elu": [[169, null]], "nn.functional.embedding": [[218, null]], "nn.functional.gelu": [[170, null]], "nn.functional.global_response_norm": [[204, null]], "nn.functional.huber_loss": [[199, null]], "nn.functional.instance_norm": [[206, null]], "nn.functional.interpolate": [[220, null]], "nn.functional.layer_norm": [[207, null]], "nn.functional.leaky_relu": [[172, null]], "nn.functional.linear": [[196, null]], "nn.functional.max_pool1d": [[215, null]], "nn.functional.max_pool2d": [[216, null]], "nn.functional.max_pool3d": [[217, null]], "nn.functional.mse_loss": [[201, null]], "nn.functional.nll_loss": [[202, null]], "nn.functional.relu": [[173, null]], "nn.functional.rotate": [[221, null]], "nn.functional.scaled_dot_product_attention": [[179, null]], "nn.functional.selu": [[174, null]], "nn.functional.sigmoid": [[175, null]], "nn.functional.softmax": [[176, null]], "nn.functional.tanh": [[177, null]], "nn.functional.unfold": [[184, null]], "nn.init.constant": [[231, null]], "nn.init.kaiming_normal": [[233, null]], "nn.init.kaiming_uniform": [[234, null]], "nn.init.normal": [[235, null]], "nn.init.uniform": [[236, null]], "nn.init.xavier_normal": [[237, null]], "nn.init.xavier_uniform": [[238, null]], "optim.ASGD": [[312, null]], "optim.Adadelta": [[313, null]], "optim.Adagrad": [[314, null]], "optim.Adam": [[315, null]], "optim.AdamW": [[316, null]], "optim.Adamax": [[317, null]], "optim.NAdam": [[318, null]], "optim.Optimizer": [[310, null]], "optim.RAdam": [[319, null]], "optim.RMSprop": [[320, null]], "optim.Rprop": [[321, null]], "optim.SGD": [[322, null]], "rearrange": [[10, "rearrange"]], "reduce": [[10, "reduce"]], "repeat": [[10, "repeat"]], "resnest_101": [[104, null]], "resnest_14": [[105, null]], "resnest_200": [[106, null]], "resnest_26": [[107, null]], "resnest_269": [[108, null]], "resnest_50": [[109, null]], "resnest_50_1s4x24d": [[110, null]], "resnest_50_4s2x40d": [[111, null]], "resnet_1001": [[113, null]], "resnet_101": [[114, null]], "resnet_152": [[115, null]], "resnet_18": [[116, null]], "resnet_200": [[117, null]], "resnet_269": [[118, null]], "resnet_34": [[119, null]], "resnet_50": [[120, null]], "resnext_101_32x16d": [[124, null]], "resnext_101_32x32d": [[125, null]], "resnext_101_32x4d": [[126, null]], "resnext_101_32x8d": [[127, null]], "resnext_101_64x4d": [[128, null]], "resnext_50_32x4d": [[129, null]], "se_resnet_101": [[131, null]], "se_resnet_152": [[132, null]], "se_resnet_18": [[133, null]], "se_resnet_34": [[134, null]], "se_resnet_50": [[135, null]], "se_resnext_101_32x4d": [[136, null]], "se_resnext_101_32x8d": [[137, null]], "se_resnext_101_64x4d": [[138, null]], "se_resnext_50_32x4d": [[139, null]], "sk_resnet_18": [[141, null]], "sk_resnet_34": [[142, null]], "sk_resnet_50": [[143, null]], "sk_resnext_50_32x4d": [[144, null]], "transformer_base": [[157, null]], "transformer_big": [[158, null]], "transforms.CenterCrop": [[407, null]], "transforms.Compose": [[405, null]], "transforms.Normalize": [[408, null]], "transforms.RandomCrop": [[409, null]], "transforms.RandomGrayscale": [[410, null]], "transforms.RandomHorizontalFlip": [[411, null]], "transforms.RandomRotation": [[412, null]], "transforms.RandomVerticalFlip": [[413, null]], "transforms.Resize": [[414, null]], "transforms.ToTensor": [[406, null]], "vggnet_11": [[146, null]], "vggnet_13": [[147, null]], "vggnet_16": [[148, null]], "vggnet_19": [[149, null]], "wide_resnet_101": [[121, null]], "wide_resnet_50": [[122, null]], "xception": [[151, null]], "zfnet": [[153, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/CIFAR10", "datasets/image/CIFAR100", "datasets/image/FashionMNIST", "datasets/image/MNIST", "datasets/image/index", "einops/einops", "einops/functions/index", "einops/functions/rearrange", "einops/functions/reduce", "einops/functions/repeat", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/conv/alex/AlexNet_", "models/conv/alex/alexnet", "models/conv/coatnet/CoAtNet", "models/conv/coatnet/coatnet_0", "models/conv/coatnet/coatnet_1", "models/conv/coatnet/coatnet_2", "models/conv/coatnet/coatnet_3", "models/conv/coatnet/coatnet_4", "models/conv/coatnet/coatnet_5", "models/conv/coatnet/coatnet_6", "models/conv/coatnet/coatnet_7", "models/conv/convnext/ConvNeXt", "models/conv/convnext/ConvNeXt_V2", "models/conv/convnext/convnext_base", "models/conv/convnext/convnext_large", "models/conv/convnext/convnext_small", "models/conv/convnext/convnext_tiny", "models/conv/convnext/convnext_v2_atto", "models/conv/convnext/convnext_v2_base", "models/conv/convnext/convnext_v2_femto", "models/conv/convnext/convnext_v2_huge", "models/conv/convnext/convnext_v2_large", "models/conv/convnext/convnext_v2_nano", "models/conv/convnext/convnext_v2_pico", "models/conv/convnext/convnext_v2_tiny", "models/conv/convnext/convnext_xlarge", "models/conv/dense/DenseNet", "models/conv/dense/densenet_121", "models/conv/dense/densenet_169", "models/conv/dense/densenet_201", "models/conv/dense/densenet_264", "models/conv/efficient/EfficientNet", "models/conv/efficient/EfficientNet_V2", "models/conv/efficient/efficientnet_b0", "models/conv/efficient/efficientnet_b1", "models/conv/efficient/efficientnet_b2", "models/conv/efficient/efficientnet_b3", "models/conv/efficient/efficientnet_b4", "models/conv/efficient/efficientnet_b5", "models/conv/efficient/efficientnet_b6", "models/conv/efficient/efficientnet_b7", "models/conv/efficient/efficientnet_v2_l", "models/conv/efficient/efficientnet_v2_m", "models/conv/efficient/efficientnet_v2_s", "models/conv/efficient/efficientnet_v2_xl", "models/conv/inception/Inception", "models/conv/inception/inception_v1", "models/conv/inception/inception_v3", "models/conv/inception/inception_v4", "models/conv/inception_next/InceptionNeXt", "models/conv/inception_next/inception_next_atto", "models/conv/inception_next/inception_next_base", "models/conv/inception_next/inception_next_small", "models/conv/inception_next/inception_next_tiny", "models/conv/inception_res/InceptionResNet", "models/conv/inception_res/inception_resnet_v1", "models/conv/inception_res/inception_resnet_v2", "models/conv/index", "models/conv/lenet/LeNet", "models/conv/lenet/lenet_1", "models/conv/lenet/lenet_4", "models/conv/lenet/lenet_5", "models/conv/mobile/MobileNet_", "models/conv/mobile/MobileNet_V2_", "models/conv/mobile/MobileNet_V3", "models/conv/mobile/MobileNet_V4", "models/conv/mobile/mobilenet", "models/conv/mobile/mobilenet_v2", "models/conv/mobile/mobilenet_v3_large", "models/conv/mobile/mobilenet_v3_small", "models/conv/mobile/mobilenet_v4_conv_large", "models/conv/mobile/mobilenet_v4_conv_medium", "models/conv/mobile/mobilenet_v4_conv_small", "models/conv/mobile/mobilenet_v4_hybrid_large", "models/conv/mobile/mobilenet_v4_hybrid_medium", "models/conv/resnest/ResNeSt", "models/conv/resnest/resnest_101", "models/conv/resnest/resnest_14", "models/conv/resnest/resnest_200", "models/conv/resnest/resnest_26", "models/conv/resnest/resnest_269", "models/conv/resnest/resnest_50", "models/conv/resnest/resnest_50_1s4x24d", "models/conv/resnest/resnest_50_4s2x40d", "models/conv/resnet/ResNet", "models/conv/resnet/resnet_1001", "models/conv/resnet/resnet_101", "models/conv/resnet/resnet_152", "models/conv/resnet/resnet_18", "models/conv/resnet/resnet_200", "models/conv/resnet/resnet_269", "models/conv/resnet/resnet_34", "models/conv/resnet/resnet_50", "models/conv/resnet/wide_resnet_101", "models/conv/resnet/wide_resnet_50", "models/conv/resnext/ResNeXt", "models/conv/resnext/resnext_101_32x16d", "models/conv/resnext/resnext_101_32x32d", "models/conv/resnext/resnext_101_32x4d", "models/conv/resnext/resnext_101_32x8d", "models/conv/resnext/resnext_101_64x4d", "models/conv/resnext/resnext_50_32x4d", "models/conv/senet/SENet", "models/conv/senet/se_resnet_101", "models/conv/senet/se_resnet_152", "models/conv/senet/se_resnet_18", "models/conv/senet/se_resnet_34", "models/conv/senet/se_resnet_50", "models/conv/senet/se_resnext_101_32x4d", "models/conv/senet/se_resnext_101_32x8d", "models/conv/senet/se_resnext_101_64x4d", "models/conv/senet/se_resnext_50_32x4d", "models/conv/sknet/SKNet", "models/conv/sknet/sk_resnet_18", "models/conv/sknet/sk_resnet_34", "models/conv/sknet/sk_resnet_50", "models/conv/sknet/sk_resnext_50_32x4d", "models/conv/vgg/VGGNet", "models/conv/vgg/vggnet_11", "models/conv/vgg/vggnet_13", "models/conv/vgg/vggnet_16", "models/conv/vgg/vggnet_19", "models/conv/xception/Xception_", "models/conv/xception/xception", "models/conv/zfnet/ZFNet_", "models/conv/zfnet/zfnet", "models/models", "models/summarize", "models/transformer/base/Transformer", "models/transformer/base/transformer_base", "models/transformer/base/transformer_big", "models/transformer/index", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/attention/index", "nn/functions/attention/scaled_dot_product_attention", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/drop_block", "nn/functions/drop/drop_path", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/global_response_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/util/embedding", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/fused/ConvBNReLU1d", "nn/fused/ConvBNReLU2d", "nn/fused/ConvBNReLU3d", "nn/fused/DepthSeparableConv1d", "nn/fused/DepthSeparableConv2d", "nn/fused/DepthSeparableConv3d", "nn/fused/SEModule", "nn/fused/SelectiveKernel", "nn/fused/index", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/HardSigmoid", "nn/modules/activation/HardSwish", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/ReLU6", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Swish", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/attention/MultiHeadAttention", "nn/modules/attention/ScaledDotProductAttention", "nn/modules/attention/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/DropBlock", "nn/modules/drop/DropPath", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/einops/Rearrange", "nn/modules/einops/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/GlobalResponseNorm", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/modules/sparse/Embedding", "nn/modules/sparse/index", "nn/modules/transformer/Transformer", "nn/modules/transformer/TransformerDecoder", "nn/modules/transformer/TransformerDecoderLayer", "nn/modules/transformer/TransformerEncoder", "nn/modules/transformer/TransformerEncoderLayer", "nn/modules/transformer/index", "nn/modules/vision/Upsample", "nn/modules/vision/index", "nn/nn", "optim/Optimizer", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "others/types", "random/functions/bernoulli", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/linspace", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/broadcast_to", "tensor/utilities/chunk", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/meshgrid", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/split", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/tril", "tensor/utilities/triu", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/CIFAR10.rst", "datasets/image/CIFAR100.rst", "datasets/image/FashionMNIST.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "einops/einops.rst", "einops/functions/index.rst", "einops/functions/rearrange.rst", "einops/functions/reduce.rst", "einops/functions/repeat.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/conv/alex/AlexNet_.rst", "models/conv/alex/alexnet.rst", "models/conv/coatnet/CoAtNet.rst", "models/conv/coatnet/coatnet_0.rst", "models/conv/coatnet/coatnet_1.rst", "models/conv/coatnet/coatnet_2.rst", "models/conv/coatnet/coatnet_3.rst", "models/conv/coatnet/coatnet_4.rst", "models/conv/coatnet/coatnet_5.rst", "models/conv/coatnet/coatnet_6.rst", "models/conv/coatnet/coatnet_7.rst", "models/conv/convnext/ConvNeXt.rst", "models/conv/convnext/ConvNeXt_V2.rst", "models/conv/convnext/convnext_base.rst", "models/conv/convnext/convnext_large.rst", "models/conv/convnext/convnext_small.rst", "models/conv/convnext/convnext_tiny.rst", "models/conv/convnext/convnext_v2_atto.rst", "models/conv/convnext/convnext_v2_base.rst", "models/conv/convnext/convnext_v2_femto.rst", "models/conv/convnext/convnext_v2_huge.rst", "models/conv/convnext/convnext_v2_large.rst", "models/conv/convnext/convnext_v2_nano.rst", "models/conv/convnext/convnext_v2_pico.rst", "models/conv/convnext/convnext_v2_tiny.rst", "models/conv/convnext/convnext_xlarge.rst", "models/conv/dense/DenseNet.rst", "models/conv/dense/densenet_121.rst", "models/conv/dense/densenet_169.rst", "models/conv/dense/densenet_201.rst", "models/conv/dense/densenet_264.rst", "models/conv/efficient/EfficientNet.rst", "models/conv/efficient/EfficientNet_V2.rst", "models/conv/efficient/efficientnet_b0.rst", "models/conv/efficient/efficientnet_b1.rst", "models/conv/efficient/efficientnet_b2.rst", "models/conv/efficient/efficientnet_b3.rst", "models/conv/efficient/efficientnet_b4.rst", "models/conv/efficient/efficientnet_b5.rst", "models/conv/efficient/efficientnet_b6.rst", "models/conv/efficient/efficientnet_b7.rst", "models/conv/efficient/efficientnet_v2_l.rst", "models/conv/efficient/efficientnet_v2_m.rst", "models/conv/efficient/efficientnet_v2_s.rst", "models/conv/efficient/efficientnet_v2_xl.rst", "models/conv/inception/Inception.rst", "models/conv/inception/inception_v1.rst", "models/conv/inception/inception_v3.rst", "models/conv/inception/inception_v4.rst", "models/conv/inception_next/InceptionNeXt.rst", "models/conv/inception_next/inception_next_atto.rst", "models/conv/inception_next/inception_next_base.rst", "models/conv/inception_next/inception_next_small.rst", "models/conv/inception_next/inception_next_tiny.rst", "models/conv/inception_res/InceptionResNet.rst", "models/conv/inception_res/inception_resnet_v1.rst", "models/conv/inception_res/inception_resnet_v2.rst", "models/conv/index.rst", "models/conv/lenet/LeNet.rst", "models/conv/lenet/lenet_1.rst", "models/conv/lenet/lenet_4.rst", "models/conv/lenet/lenet_5.rst", "models/conv/mobile/MobileNet_.rst", "models/conv/mobile/MobileNet_V2_.rst", "models/conv/mobile/MobileNet_V3.rst", "models/conv/mobile/MobileNet_V4.rst", "models/conv/mobile/mobilenet.rst", "models/conv/mobile/mobilenet_v2.rst", "models/conv/mobile/mobilenet_v3_large.rst", "models/conv/mobile/mobilenet_v3_small.rst", "models/conv/mobile/mobilenet_v4_conv_large.rst", "models/conv/mobile/mobilenet_v4_conv_medium.rst", "models/conv/mobile/mobilenet_v4_conv_small.rst", "models/conv/mobile/mobilenet_v4_hybrid_large.rst", "models/conv/mobile/mobilenet_v4_hybrid_medium.rst", "models/conv/resnest/ResNeSt.rst", "models/conv/resnest/resnest_101.rst", "models/conv/resnest/resnest_14.rst", "models/conv/resnest/resnest_200.rst", "models/conv/resnest/resnest_26.rst", "models/conv/resnest/resnest_269.rst", "models/conv/resnest/resnest_50.rst", "models/conv/resnest/resnest_50_1s4x24d.rst", "models/conv/resnest/resnest_50_4s2x40d.rst", "models/conv/resnet/ResNet.rst", "models/conv/resnet/resnet_1001.rst", "models/conv/resnet/resnet_101.rst", "models/conv/resnet/resnet_152.rst", "models/conv/resnet/resnet_18.rst", "models/conv/resnet/resnet_200.rst", "models/conv/resnet/resnet_269.rst", "models/conv/resnet/resnet_34.rst", "models/conv/resnet/resnet_50.rst", "models/conv/resnet/wide_resnet_101.rst", "models/conv/resnet/wide_resnet_50.rst", "models/conv/resnext/ResNeXt.rst", "models/conv/resnext/resnext_101_32x16d.rst", "models/conv/resnext/resnext_101_32x32d.rst", "models/conv/resnext/resnext_101_32x4d.rst", "models/conv/resnext/resnext_101_32x8d.rst", "models/conv/resnext/resnext_101_64x4d.rst", "models/conv/resnext/resnext_50_32x4d.rst", "models/conv/senet/SENet.rst", "models/conv/senet/se_resnet_101.rst", "models/conv/senet/se_resnet_152.rst", "models/conv/senet/se_resnet_18.rst", "models/conv/senet/se_resnet_34.rst", "models/conv/senet/se_resnet_50.rst", "models/conv/senet/se_resnext_101_32x4d.rst", "models/conv/senet/se_resnext_101_32x8d.rst", "models/conv/senet/se_resnext_101_64x4d.rst", "models/conv/senet/se_resnext_50_32x4d.rst", "models/conv/sknet/SKNet.rst", "models/conv/sknet/sk_resnet_18.rst", "models/conv/sknet/sk_resnet_34.rst", "models/conv/sknet/sk_resnet_50.rst", "models/conv/sknet/sk_resnext_50_32x4d.rst", "models/conv/vgg/VGGNet.rst", "models/conv/vgg/vggnet_11.rst", "models/conv/vgg/vggnet_13.rst", "models/conv/vgg/vggnet_16.rst", "models/conv/vgg/vggnet_19.rst", "models/conv/xception/Xception_.rst", "models/conv/xception/xception.rst", "models/conv/zfnet/ZFNet_.rst", "models/conv/zfnet/zfnet.rst", "models/models.rst", "models/summarize.rst", "models/transformer/base/Transformer.rst", "models/transformer/base/transformer_base.rst", "models/transformer/base/transformer_big.rst", "models/transformer/index.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/attention/index.rst", "nn/functions/attention/scaled_dot_product_attention.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/drop_block.rst", "nn/functions/drop/drop_path.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/global_response_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/util/embedding.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/fused/ConvBNReLU1d.rst", "nn/fused/ConvBNReLU2d.rst", "nn/fused/ConvBNReLU3d.rst", "nn/fused/DepthSeparableConv1d.rst", "nn/fused/DepthSeparableConv2d.rst", "nn/fused/DepthSeparableConv3d.rst", "nn/fused/SEModule.rst", "nn/fused/SelectiveKernel.rst", "nn/fused/index.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/HardSigmoid.rst", "nn/modules/activation/HardSwish.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/ReLU6.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Swish.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/attention/MultiHeadAttention.rst", "nn/modules/attention/ScaledDotProductAttention.rst", "nn/modules/attention/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/DropBlock.rst", "nn/modules/drop/DropPath.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/einops/Rearrange.rst", "nn/modules/einops/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/GlobalResponseNorm.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/modules/sparse/Embedding.rst", "nn/modules/sparse/index.rst", "nn/modules/transformer/Transformer.rst", "nn/modules/transformer/TransformerDecoder.rst", "nn/modules/transformer/TransformerDecoderLayer.rst", "nn/modules/transformer/TransformerEncoder.rst", "nn/modules/transformer/TransformerEncoderLayer.rst", "nn/modules/transformer/index.rst", "nn/modules/vision/Upsample.rst", "nn/modules/vision/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "others/types.rst", "random/functions/bernoulli.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/linspace.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/broadcast_to.rst", "tensor/utilities/chunk.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/split.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/tril.rst", "tensor/utilities/triu.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"abs() (in module lucid)": [[360, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[313, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[314, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[315, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[317, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[316, "lucid.optim.AdamW", false]], "adaptive_avg_pool1d() (in module lucid.nn.functional)": [[208, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[209, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[210, "lucid.nn.functional.adaptive_avg_pool3d", false]], "adaptiveavgpool1d (class in lucid.nn)": [[289, "lucid.nn.AdaptiveAvgPool1d", false]], "adaptiveavgpool2d (class in lucid.nn)": [[290, "lucid.nn.AdaptiveAvgPool2d", false]], "adaptiveavgpool3d (class in lucid.nn)": [[291, "lucid.nn.AdaptiveAvgPool3d", false]], "add() (in module lucid)": [[338, "lucid.add", false]], "alexnet (class in lucid.models)": [[28, "lucid.models.AlexNet", false]], "alexnet() (in module lucid.models)": [[29, "lucid.models.alexnet", false]], "alpha_dropout() (in module lucid.nn.functional)": [[185, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[259, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[349, "lucid.arange", false]], "arccos() (in module lucid)": [[361, "lucid.arccos", false]], "arcsin() (in module lucid)": [[362, "lucid.arcsin", false]], "arctan() (in module lucid)": [[363, "lucid.arctan", false]], "asgd (class in lucid.optim)": [[312, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[211, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[212, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[213, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[292, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[293, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[294, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[203, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[280, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[281, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[282, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[274, "lucid.nn.BCELoss", false]], "bernoulli() (in module lucid.random)": [[329, "lucid.random.bernoulli", false]], "bilinear (class in lucid.nn)": [[270, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[194, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[197, "lucid.nn.functional.binary_cross_entropy", false]], "broadcast_to() (in module lucid)": [[386, "lucid.broadcast_to", false]], "buffer (class in lucid.nn)": [[160, "lucid.nn.Buffer", false]], "centercrop (class in lucid.transforms)": [[407, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[17, "lucid.linalg.cholesky", false]], "chunk() (in module lucid)": [[387, "lucid.chunk", false]], "cifar10 (class in lucid.datasets)": [[5, "lucid.datasets.CIFAR10", false]], "cifar100 (class in lucid.datasets)": [[6, "lucid.datasets.CIFAR100", false]], "clip() (in module lucid)": [[364, "lucid.clip", false]], "coatnet (class in lucid.models)": [[30, "lucid.models.CoAtNet", false]], "coatnet_0() (in module lucid.models)": [[31, "lucid.models.coatnet_0", false]], "coatnet_1() (in module lucid.models)": [[32, "lucid.models.coatnet_1", false]], "coatnet_2() (in module lucid.models)": [[33, "lucid.models.coatnet_2", false]], "coatnet_3() (in module lucid.models)": [[34, "lucid.models.coatnet_3", false]], "coatnet_4() (in module lucid.models)": [[35, "lucid.models.coatnet_4", false]], "coatnet_5() (in module lucid.models)": [[36, "lucid.models.coatnet_5", false]], "coatnet_6() (in module lucid.models)": [[37, "lucid.models.coatnet_6", false]], "coatnet_7() (in module lucid.models)": [[38, "lucid.models.coatnet_7", false]], "compose (class in lucid.transforms)": [[405, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[388, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[231, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[255, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[180, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[256, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[181, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[257, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[182, "lucid.nn.functional.conv3d", false]], "convbnrelu1d (class in lucid.nn)": [[222, "lucid.nn.ConvBNReLU1d", false]], "convbnrelu2d (class in lucid.nn)": [[223, "lucid.nn.ConvBNReLU2d", false]], "convbnrelu3d (class in lucid.nn)": [[224, "lucid.nn.ConvBNReLU3d", false]], "convnext (class in lucid.models)": [[39, "lucid.models.ConvNeXt", false]], "convnext_base() (in module lucid.models)": [[41, "lucid.models.convnext_base", false]], "convnext_large() (in module lucid.models)": [[42, "lucid.models.convnext_large", false]], "convnext_small() (in module lucid.models)": [[43, "lucid.models.convnext_small", false]], "convnext_tiny() (in module lucid.models)": [[44, "lucid.models.convnext_tiny", false]], "convnext_v2 (class in lucid.models)": [[40, "lucid.models.ConvNeXt_V2", false]], "convnext_v2_atto() (in module lucid.models)": [[45, "lucid.models.convnext_v2_atto", false]], "convnext_v2_base() (in module lucid.models)": [[46, "lucid.models.convnext_v2_base", false]], "convnext_v2_femto() (in module lucid.models)": [[47, "lucid.models.convnext_v2_femto", false]], "convnext_v2_huge() (in module lucid.models)": [[48, "lucid.models.convnext_v2_huge", false]], "convnext_v2_large() (in module lucid.models)": [[49, "lucid.models.convnext_v2_large", false]], "convnext_v2_nano() (in module lucid.models)": [[50, "lucid.models.convnext_v2_nano", false]], "convnext_v2_pico() (in module lucid.models)": [[51, "lucid.models.convnext_v2_pico", false]], "convnext_v2_tiny() (in module lucid.models)": [[52, "lucid.models.convnext_v2_tiny", false]], "convnext_xlarge() (in module lucid.models)": [[53, "lucid.models.convnext_xlarge", false]], "cos() (in module lucid)": [[365, "lucid.cos", false]], "cosh() (in module lucid)": [[366, "lucid.cosh", false]], "cross_entropy() (in module lucid.nn.functional)": [[198, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[275, "lucid.nn.CrossEntropyLoss", false]], "cube() (in module lucid)": [[367, "lucid.cube", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "densenet (class in lucid.models)": [[54, "lucid.models.DenseNet", false]], "densenet_121() (in module lucid.models)": [[55, "lucid.models.densenet_121", false]], "densenet_169() (in module lucid.models)": [[56, "lucid.models.densenet_169", false]], "densenet_201() (in module lucid.models)": [[57, "lucid.models.densenet_201", false]], "densenet_264() (in module lucid.models)": [[58, "lucid.models.densenet_264", false]], "depthseparableconv1d (class in lucid.nn)": [[225, "lucid.nn.DepthSeparableConv1d", false]], "depthseparableconv2d (class in lucid.nn)": [[226, "lucid.nn.DepthSeparableConv2d", false]], "depthseparableconv3d (class in lucid.nn)": [[227, "lucid.nn.DepthSeparableConv3d", false]], "det() (in module lucid.linalg)": [[18, "lucid.linalg.det", false]], "diag() (in module lucid)": [[350, "lucid.diag", false]], "div() (in module lucid)": [[339, "lucid.div", false]], "dot() (in module lucid)": [[340, "lucid.dot", false]], "drop_block() (in module lucid.nn.functional)": [[186, "lucid.nn.functional.drop_block", false]], "drop_path() (in module lucid.nn.functional)": [[187, "lucid.nn.functional.drop_path", false]], "dropblock (class in lucid.nn)": [[260, "lucid.nn.DropBlock", false]], "dropout (class in lucid.nn)": [[262, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[188, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[263, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[189, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[264, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[190, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[265, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[191, "lucid.nn.functional.dropout3d", false]], "droppath (class in lucid.nn)": [[261, "lucid.nn.DropPath", false]], "efficientnet (class in lucid.models)": [[59, "lucid.models.EfficientNet", false]], "efficientnet_b0() (in module lucid.models)": [[61, "lucid.models.efficientnet_b0", false]], "efficientnet_b1() (in module lucid.models)": [[62, "lucid.models.efficientnet_b1", false]], "efficientnet_b2() (in module lucid.models)": [[63, "lucid.models.efficientnet_b2", false]], "efficientnet_b3() (in module lucid.models)": [[64, "lucid.models.efficientnet_b3", false]], "efficientnet_b4() (in module lucid.models)": [[65, "lucid.models.efficientnet_b4", false]], "efficientnet_b5() (in module lucid.models)": [[66, "lucid.models.efficientnet_b5", false]], "efficientnet_b6() (in module lucid.models)": [[67, "lucid.models.efficientnet_b6", false]], "efficientnet_b7() (in module lucid.models)": [[68, "lucid.models.efficientnet_b7", false]], "efficientnet_v2 (class in lucid.models)": [[60, "lucid.models.EfficientNet_V2", false]], "efficientnet_v2_l() (in module lucid.models)": [[69, "lucid.models.efficientnet_v2_l", false]], "efficientnet_v2_m() (in module lucid.models)": [[70, "lucid.models.efficientnet_v2_m", false]], "efficientnet_v2_s() (in module lucid.models)": [[71, "lucid.models.efficientnet_v2_s", false]], "efficientnet_v2_xl() (in module lucid.models)": [[72, "lucid.models.efficientnet_v2_xl", false]], "eig() (in module lucid.linalg)": [[19, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[239, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[169, "lucid.nn.functional.elu", false]], "embedding (class in lucid.nn)": [[299, "lucid.nn.Embedding", false]], "embedding() (in module lucid.nn.functional)": [[218, "lucid.nn.functional.embedding", false]], "empty() (in module lucid)": [[351, "lucid.empty", false]], "empty_like() (in module lucid)": [[352, "lucid.empty_like", false]], "exp() (in module lucid)": [[368, "lucid.exp", false]], "eye() (in module lucid)": [[353, "lucid.eye", false]], "fashionmnist (class in lucid.datasets)": [[7, "lucid.datasets.FashionMNIST", false]], "flatten() (in module lucid)": [[389, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[240, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[170, "lucid.nn.functional.gelu", false]], "global_response_norm() (in module lucid.nn.functional)": [[204, "lucid.nn.functional.global_response_norm", false]], "globalresponsenorm (class in lucid.nn)": [[283, "lucid.nn.GlobalResponseNorm", false]], "grad_enabled() (in module lucid)": [[324, "lucid.grad_enabled", false]], "hardsigmoid (class in lucid.nn)": [[241, "lucid.nn.HardSigmoid", false]], "hardswish (class in lucid.nn)": [[242, "lucid.nn.HardSwish", false]], "hstack() (in module lucid)": [[390, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[199, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[276, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[271, "lucid.nn.Identity", false]], "inception (class in lucid.models)": [[73, "lucid.models.Inception", false]], "inception_next_atto() (in module lucid.models)": [[78, "lucid.models.inception_next_atto", false]], "inception_next_base() (in module lucid.models)": [[79, "lucid.models.inception_next_base", false]], "inception_next_small() (in module lucid.models)": [[80, "lucid.models.inception_next_small", false]], "inception_next_tiny() (in module lucid.models)": [[81, "lucid.models.inception_next_tiny", false]], "inception_resnet_v1() (in module lucid.models)": [[83, "lucid.models.inception_resnet_v1", false]], "inception_resnet_v2() (in module lucid.models)": [[84, "lucid.models.inception_resnet_v2", false]], "inception_v1() (in module lucid.models)": [[74, "lucid.models.inception_v1", false]], "inception_v3() (in module lucid.models)": [[75, "lucid.models.inception_v3", false]], "inception_v4() (in module lucid.models)": [[76, "lucid.models.inception_v4", false]], "inceptionnext (class in lucid.models)": [[77, "lucid.models.InceptionNeXt", false]], "inceptionresnet (class in lucid.models)": [[82, "lucid.models.InceptionResNet", false]], "inner() (in module lucid)": [[341, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[206, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[284, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[285, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[286, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[220, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[21, "lucid.linalg.inv", false]], "kaiming_normal() (in module lucid.nn.init)": [[233, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[234, "lucid.nn.init.kaiming_uniform", false]], "layer_norm() (in module lucid.nn.functional)": [[207, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[287, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[172, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[243, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[86, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[87, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[88, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[89, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[272, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[196, "lucid.nn.functional.linear", false]], "linspace() (in module lucid)": [[354, "lucid.linspace", false]], "log() (in module lucid)": [[369, "lucid.log", false]], "lucid": [[15, "module-lucid", false]], "matmul() (in module lucid)": [[342, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[22, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[370, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[215, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[216, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[217, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[343, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[295, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[296, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[297, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[371, "lucid.mean", false]], "meshgrid() (in module lucid)": [[392, "lucid.meshgrid", false]], "min() (in module lucid)": [[372, "lucid.min", false]], "minimum() (in module lucid)": [[344, "lucid.minimum", false]], "mnist (class in lucid.datasets)": [[8, "lucid.datasets.MNIST", false]], "mobilenet (class in lucid.models)": [[90, "lucid.models.MobileNet", false]], "mobilenet() (in module lucid.models)": [[94, "lucid.models.mobilenet", false]], "mobilenet_v2 (class in lucid.models)": [[91, "lucid.models.MobileNet_V2", false]], "mobilenet_v2() (in module lucid.models)": [[95, "lucid.models.mobilenet_v2", false]], "mobilenet_v3 (class in lucid.models)": [[92, "lucid.models.MobileNet_V3", false]], "mobilenet_v3_large() (in module lucid.models)": [[96, "lucid.models.mobilenet_v3_large", false]], "mobilenet_v3_small() (in module lucid.models)": [[97, "lucid.models.mobilenet_v3_small", false]], "mobilenet_v4 (class in lucid.models)": [[93, "lucid.models.MobileNet_V4", false]], "mobilenet_v4_conv_large() (in module lucid.models)": [[98, "lucid.models.mobilenet_v4_conv_large", false]], "mobilenet_v4_conv_medium() (in module lucid.models)": [[99, "lucid.models.mobilenet_v4_conv_medium", false]], "mobilenet_v4_conv_small() (in module lucid.models)": [[100, "lucid.models.mobilenet_v4_conv_small", false]], "mobilenet_v4_hybrid_large() (in module lucid.models)": [[101, "lucid.models.mobilenet_v4_hybrid_large", false]], "mobilenet_v4_hybrid_medium() (in module lucid.models)": [[102, "lucid.models.mobilenet_v4_hybrid_medium", false]], "module": [[15, "module-lucid", false]], "module (class in lucid.nn)": [[161, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[163, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[164, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[201, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[277, "lucid.nn.MSELoss", false]], "mul() (in module lucid)": [[345, "lucid.mul", false]], "multiheadattention (class in lucid.nn)": [[252, "lucid.nn.MultiHeadAttention", false]], "nadam (class in lucid.optim)": [[318, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[202, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[278, "lucid.nn.NLLLoss", false]], "no_grad() (in module lucid)": [[326, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[23, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[235, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[408, "lucid.transforms.Normalize", false]], "ones() (in module lucid)": [[355, "lucid.ones", false]], "ones_like() (in module lucid)": [[356, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[310, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[346, "lucid.outer", false]], "pad() (in module lucid)": [[393, "lucid.pad", false]], "parameter (class in lucid.nn)": [[162, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[165, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[166, "lucid.nn.ParameterList", false]], "pinv() (in module lucid.linalg)": [[24, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[347, "lucid.power", false]], "qr() (in module lucid.linalg)": [[25, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[319, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[331, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[332, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[333, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[409, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[410, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[411, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[412, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[413, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[394, "lucid.ravel", false]], "rearrange (class in lucid.nn)": [[267, "lucid.nn.Rearrange", false]], "rearrange() (in module lucid.einops)": [[12, "lucid.einops.rearrange", false]], "reciprocal() (in module lucid)": [[373, "lucid.reciprocal", false]], "reduce() (in module lucid.einops)": [[13, "lucid.einops.reduce", false]], "register_model() (in module lucid)": [[327, "lucid.register_model", false]], "relu (class in lucid.nn)": [[244, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[173, "lucid.nn.functional.relu", false]], "relu6 (class in lucid.nn)": [[245, "lucid.nn.ReLU6", false]], "repeat() (in module lucid)": [[395, "lucid.repeat", false]], "repeat() (in module lucid.einops)": [[14, "lucid.einops.repeat", false]], "reshape() (in module lucid)": [[396, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[414, "lucid.transforms.Resize", false]], "resnest (class in lucid.models)": [[103, "lucid.models.ResNeSt", false]], "resnest_101() (in module lucid.models)": [[104, "lucid.models.resnest_101", false]], "resnest_14() (in module lucid.models)": [[105, "lucid.models.resnest_14", false]], "resnest_200() (in module lucid.models)": [[106, "lucid.models.resnest_200", false]], "resnest_26() (in module lucid.models)": [[107, "lucid.models.resnest_26", false]], "resnest_269() (in module lucid.models)": [[108, "lucid.models.resnest_269", false]], "resnest_50() (in module lucid.models)": [[109, "lucid.models.resnest_50", false]], "resnest_50_1s4x24d() (in module lucid.models)": [[110, "lucid.models.resnest_50_1s4x24d", false]], "resnest_50_4s2x40d() (in module lucid.models)": [[111, "lucid.models.resnest_50_4s2x40d", false]], "resnet (class in lucid.models)": [[112, "lucid.models.ResNet", false]], "resnet_1001() (in module lucid.models)": [[113, "lucid.models.resnet_1001", false]], "resnet_101() (in module lucid.models)": [[114, "lucid.models.resnet_101", false]], "resnet_152() (in module lucid.models)": [[115, "lucid.models.resnet_152", false]], "resnet_18() (in module lucid.models)": [[116, "lucid.models.resnet_18", false]], "resnet_200() (in module lucid.models)": [[117, "lucid.models.resnet_200", false]], "resnet_269() (in module lucid.models)": [[118, "lucid.models.resnet_269", false]], "resnet_34() (in module lucid.models)": [[119, "lucid.models.resnet_34", false]], "resnet_50() (in module lucid.models)": [[120, "lucid.models.resnet_50", false]], "resnext (class in lucid.models)": [[123, "lucid.models.ResNeXt", false]], "resnext_101_32x16d() (in module lucid.models)": [[124, "lucid.models.resnext_101_32x16d", false]], "resnext_101_32x32d() (in module lucid.models)": [[125, "lucid.models.resnext_101_32x32d", false]], "resnext_101_32x4d() (in module lucid.models)": [[126, "lucid.models.resnext_101_32x4d", false]], "resnext_101_32x8d() (in module lucid.models)": [[127, "lucid.models.resnext_101_32x8d", false]], "resnext_101_64x4d() (in module lucid.models)": [[128, "lucid.models.resnext_101_64x4d", false]], "resnext_50_32x4d() (in module lucid.models)": [[129, "lucid.models.resnext_50_32x4d", false]], "rmsprop (class in lucid.optim)": [[320, "lucid.optim.RMSprop", false]], "rotate() (in module lucid.nn.functional)": [[221, "lucid.nn.functional.rotate", false]], "rprop (class in lucid.optim)": [[321, "lucid.optim.Rprop", false]], "scaled_dot_product_attention() (in module lucid.nn.functional)": [[179, "lucid.nn.functional.scaled_dot_product_attention", false]], "scaleddotproductattention (class in lucid.nn)": [[253, "lucid.nn.ScaledDotProductAttention", false]], "se_resnet_101() (in module lucid.models)": [[131, "lucid.models.se_resnet_101", false]], "se_resnet_152() (in module lucid.models)": [[132, "lucid.models.se_resnet_152", false]], "se_resnet_18() (in module lucid.models)": [[133, "lucid.models.se_resnet_18", false]], "se_resnet_34() (in module lucid.models)": [[134, "lucid.models.se_resnet_34", false]], "se_resnet_50() (in module lucid.models)": [[135, "lucid.models.se_resnet_50", false]], "se_resnext_101_32x4d() (in module lucid.models)": [[136, "lucid.models.se_resnext_101_32x4d", false]], "se_resnext_101_32x8d() (in module lucid.models)": [[137, "lucid.models.se_resnext_101_32x8d", false]], "se_resnext_101_64x4d() (in module lucid.models)": [[138, "lucid.models.se_resnext_101_64x4d", false]], "se_resnext_50_32x4d() (in module lucid.models)": [[139, "lucid.models.se_resnext_50_32x4d", false]], "seed() (in module lucid.random)": [[334, "lucid.random.seed", false]], "selectivekernel (class in lucid.nn)": [[229, "lucid.nn.SelectiveKernel", false]], "selu (class in lucid.nn)": [[246, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[174, "lucid.nn.functional.selu", false]], "semodule (class in lucid.nn)": [[228, "lucid.nn.SEModule", false]], "senet (class in lucid.models)": [[130, "lucid.models.SENet", false]], "sequential (class in lucid.nn)": [[167, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[322, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[247, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[175, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[374, "lucid.sign", false]], "sin() (in module lucid)": [[375, "lucid.sin", false]], "sinh() (in module lucid)": [[376, "lucid.sinh", false]], "sk_resnet_18() (in module lucid.models)": [[141, "lucid.models.sk_resnet_18", false]], "sk_resnet_34() (in module lucid.models)": [[142, "lucid.models.sk_resnet_34", false]], "sk_resnet_50() (in module lucid.models)": [[143, "lucid.models.sk_resnet_50", false]], "sk_resnext_50_32x4d() (in module lucid.models)": [[144, "lucid.models.sk_resnext_50_32x4d", false]], "sknet (class in lucid.models)": [[140, "lucid.models.SKNet", false]], "softmax (class in lucid.nn)": [[248, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[176, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[26, "lucid.linalg.solve", false]], "split() (in module lucid)": [[397, "lucid.split", false]], "sqrt() (in module lucid)": [[377, "lucid.sqrt", false]], "square() (in module lucid)": [[378, "lucid.square", false]], "squeeze() (in module lucid)": [[398, "lucid.squeeze", false]], "stack() (in module lucid)": [[399, "lucid.stack", false]], "sub() (in module lucid)": [[348, "lucid.sub", false]], "sum() (in module lucid)": [[379, "lucid.sum", false]], "summarize() (in module lucid.models)": [[155, "lucid.models.summarize", false]], "svd() (in module lucid.linalg)": [[27, "lucid.linalg.svd", false]], "swish (class in lucid.nn)": [[249, "lucid.nn.Swish", false]], "tan() (in module lucid)": [[380, "lucid.tan", false]], "tanh (class in lucid.nn)": [[250, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[381, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[177, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[337, "lucid.Tensor", false]], "tensor() (in module lucid)": [[385, "lucid.tensor", false]], "tile() (in module lucid)": [[400, "lucid.tile", false]], "totensor (class in lucid.transforms)": [[406, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[382, "lucid.trace", false]], "transformer (class in lucid.models)": [[156, "lucid.models.Transformer", false]], "transformer (class in lucid.nn)": [[301, "lucid.nn.Transformer", false]], "transformer_base() (in module lucid.models)": [[157, "lucid.models.transformer_base", false]], "transformer_big() (in module lucid.models)": [[158, "lucid.models.transformer_big", false]], "transformerdecoder (class in lucid.nn)": [[302, "lucid.nn.TransformerDecoder", false]], "transformerdecoderlayer (class in lucid.nn)": [[303, "lucid.nn.TransformerDecoderLayer", false]], "transformerencoder (class in lucid.nn)": [[304, "lucid.nn.TransformerEncoder", false]], "transformerencoderlayer (class in lucid.nn)": [[305, "lucid.nn.TransformerEncoderLayer", false]], "transpose() (in module lucid)": [[383, "lucid.transpose", false]], "tril() (in module lucid)": [[401, "lucid.tril", false]], "triu() (in module lucid)": [[402, "lucid.triu", false]], "unfold() (in module lucid.nn.functional)": [[184, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[236, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[335, "lucid.random.uniform", false]], "unsqueeze() (in module lucid)": [[403, "lucid.unsqueeze", false]], "upsample (class in lucid.nn)": [[307, "lucid.nn.Upsample", false]], "var() (in module lucid)": [[384, "lucid.var", false]], "vggnet (class in lucid.models)": [[145, "lucid.models.VGGNet", false]], "vggnet_11() (in module lucid.models)": [[146, "lucid.models.vggnet_11", false]], "vggnet_13() (in module lucid.models)": [[147, "lucid.models.vggnet_13", false]], "vggnet_16() (in module lucid.models)": [[148, "lucid.models.vggnet_16", false]], "vggnet_19() (in module lucid.models)": [[149, "lucid.models.vggnet_19", false]], "vstack() (in module lucid)": [[404, "lucid.vstack", false]], "wide_resnet_101() (in module lucid.models)": [[121, "lucid.models.wide_resnet_101", false]], "wide_resnet_50() (in module lucid.models)": [[122, "lucid.models.wide_resnet_50", false]], "xavier_normal() (in module lucid.nn.init)": [[237, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[238, "lucid.nn.init.xavier_uniform", false]], "xception (class in lucid.models)": [[150, "lucid.models.Xception", false]], "xception() (in module lucid.models)": [[151, "lucid.models.xception", false]], "zeros() (in module lucid)": [[357, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[358, "lucid.zeros_like", false]], "zfnet (class in lucid.models)": [[152, "lucid.models.ZFNet", false]], "zfnet() (in module lucid.models)": [[153, "lucid.models.zfnet", false]]}, "objects": {"": [[15, 0, 0, "-", "lucid"]], "lucid": [[337, 1, 1, "", "Tensor"], [360, 2, 1, "", "abs"], [338, 2, 1, "", "add"], [349, 2, 1, "", "arange"], [361, 2, 1, "", "arccos"], [362, 2, 1, "", "arcsin"], [363, 2, 1, "", "arctan"], [386, 2, 1, "", "broadcast_to"], [387, 2, 1, "", "chunk"], [364, 2, 1, "", "clip"], [388, 2, 1, "", "concatenate"], [365, 2, 1, "", "cos"], [366, 2, 1, "", "cosh"], [367, 2, 1, "", "cube"], [350, 2, 1, "", "diag"], [339, 2, 1, "", "div"], [340, 2, 1, "", "dot"], [351, 2, 1, "", "empty"], [352, 2, 1, "", "empty_like"], [368, 2, 1, "", "exp"], [353, 2, 1, "", "eye"], [389, 2, 1, "", "flatten"], [324, 2, 1, "", "grad_enabled"], [390, 2, 1, "", "hstack"], [341, 2, 1, "", "inner"], [354, 2, 1, "", "linspace"], [369, 2, 1, "", "log"], [342, 2, 1, "", "matmul"], [370, 2, 1, "", "max"], [343, 2, 1, "", "maximum"], [371, 2, 1, "", "mean"], [392, 2, 1, "", "meshgrid"], [372, 2, 1, "", "min"], [344, 2, 1, "", "minimum"], [345, 2, 1, "", "mul"], [326, 2, 1, "", "no_grad"], [355, 2, 1, "", "ones"], [356, 2, 1, "", "ones_like"], [346, 2, 1, "", "outer"], [393, 2, 1, "", "pad"], [347, 2, 1, "", "power"], [394, 2, 1, "", "ravel"], [373, 2, 1, "", "reciprocal"], [327, 2, 1, "", "register_model"], [395, 2, 1, "", "repeat"], [396, 2, 1, "", "reshape"], [374, 2, 1, "", "sign"], [375, 2, 1, "", "sin"], [376, 2, 1, "", "sinh"], [397, 2, 1, "", "split"], [377, 2, 1, "", "sqrt"], [378, 2, 1, "", "square"], [398, 2, 1, "", "squeeze"], [399, 2, 1, "", "stack"], [348, 2, 1, "", "sub"], [379, 2, 1, "", "sum"], [380, 2, 1, "", "tan"], [381, 2, 1, "", "tanh"], [385, 2, 1, "", "tensor"], [400, 2, 1, "", "tile"], [382, 2, 1, "", "trace"], [383, 2, 1, "", "transpose"], [401, 2, 1, "", "tril"], [402, 2, 1, "", "triu"], [403, 2, 1, "", "unsqueeze"], [384, 2, 1, "", "var"], [404, 2, 1, "", "vstack"], [357, 2, 1, "", "zeros"], [358, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "CIFAR10"], [6, 1, 1, "", "CIFAR100"], [7, 1, 1, "", "FashionMNIST"], [8, 1, 1, "", "MNIST"]], "lucid.einops": [[12, 2, 1, "", "rearrange"], [13, 2, 1, "", "reduce"], [14, 2, 1, "", "repeat"]], "lucid.linalg": [[17, 2, 1, "", "cholesky"], [18, 2, 1, "", "det"], [19, 2, 1, "", "eig"], [21, 2, 1, "", "inv"], [22, 2, 1, "", "matrix_power"], [23, 2, 1, "", "norm"], [24, 2, 1, "", "pinv"], [25, 2, 1, "", "qr"], [26, 2, 1, "", "solve"], [27, 2, 1, "", "svd"]], "lucid.models": [[28, 1, 1, "", "AlexNet"], [30, 1, 1, "", "CoAtNet"], [39, 1, 1, "", "ConvNeXt"], [40, 1, 1, "", "ConvNeXt_V2"], [54, 1, 1, "", "DenseNet"], [59, 1, 1, "", "EfficientNet"], [60, 1, 1, "", "EfficientNet_V2"], [73, 1, 1, "", "Inception"], [77, 1, 1, "", "InceptionNeXt"], [82, 1, 1, "", "InceptionResNet"], [86, 1, 1, "", "LeNet"], [90, 1, 1, "", "MobileNet"], [91, 1, 1, "", "MobileNet_V2"], [92, 1, 1, "", "MobileNet_V3"], [93, 1, 1, "", "MobileNet_V4"], [103, 1, 1, "", "ResNeSt"], [123, 1, 1, "", "ResNeXt"], [112, 1, 1, "", "ResNet"], [130, 1, 1, "", "SENet"], [140, 1, 1, "", "SKNet"], [156, 1, 1, "", "Transformer"], [145, 1, 1, "", "VGGNet"], [150, 1, 1, "", "Xception"], [152, 1, 1, "", "ZFNet"], [29, 2, 1, "", "alexnet"], [31, 2, 1, "", "coatnet_0"], [32, 2, 1, "", "coatnet_1"], [33, 2, 1, "", "coatnet_2"], [34, 2, 1, "", "coatnet_3"], [35, 2, 1, "", "coatnet_4"], [36, 2, 1, "", "coatnet_5"], [37, 2, 1, "", "coatnet_6"], [38, 2, 1, "", "coatnet_7"], [41, 2, 1, "", "convnext_base"], [42, 2, 1, "", "convnext_large"], [43, 2, 1, "", "convnext_small"], [44, 2, 1, "", "convnext_tiny"], [45, 2, 1, "", "convnext_v2_atto"], [46, 2, 1, "", "convnext_v2_base"], [47, 2, 1, "", "convnext_v2_femto"], [48, 2, 1, "", "convnext_v2_huge"], [49, 2, 1, "", "convnext_v2_large"], [50, 2, 1, "", "convnext_v2_nano"], [51, 2, 1, "", "convnext_v2_pico"], [52, 2, 1, "", "convnext_v2_tiny"], [53, 2, 1, "", "convnext_xlarge"], [55, 2, 1, "", "densenet_121"], [56, 2, 1, "", "densenet_169"], [57, 2, 1, "", "densenet_201"], [58, 2, 1, "", "densenet_264"], [61, 2, 1, "", "efficientnet_b0"], [62, 2, 1, "", "efficientnet_b1"], [63, 2, 1, "", "efficientnet_b2"], [64, 2, 1, "", "efficientnet_b3"], [65, 2, 1, "", "efficientnet_b4"], [66, 2, 1, "", "efficientnet_b5"], [67, 2, 1, "", "efficientnet_b6"], [68, 2, 1, "", "efficientnet_b7"], [69, 2, 1, "", "efficientnet_v2_l"], [70, 2, 1, "", "efficientnet_v2_m"], [71, 2, 1, "", "efficientnet_v2_s"], [72, 2, 1, "", "efficientnet_v2_xl"], [78, 2, 1, "", "inception_next_atto"], [79, 2, 1, "", "inception_next_base"], [80, 2, 1, "", "inception_next_small"], [81, 2, 1, "", "inception_next_tiny"], [83, 2, 1, "", "inception_resnet_v1"], [84, 2, 1, "", "inception_resnet_v2"], [74, 2, 1, "", "inception_v1"], [75, 2, 1, "", "inception_v3"], [76, 2, 1, "", "inception_v4"], [87, 2, 1, "", "lenet_1"], [88, 2, 1, "", "lenet_4"], [89, 2, 1, "", "lenet_5"], [94, 2, 1, "", "mobilenet"], [95, 2, 1, "", "mobilenet_v2"], [96, 2, 1, "", "mobilenet_v3_large"], [97, 2, 1, "", "mobilenet_v3_small"], [98, 2, 1, "", "mobilenet_v4_conv_large"], [99, 2, 1, "", "mobilenet_v4_conv_medium"], [100, 2, 1, "", "mobilenet_v4_conv_small"], [101, 2, 1, "", "mobilenet_v4_hybrid_large"], [102, 2, 1, "", "mobilenet_v4_hybrid_medium"], [104, 2, 1, "", "resnest_101"], [105, 2, 1, "", "resnest_14"], [106, 2, 1, "", "resnest_200"], [107, 2, 1, "", "resnest_26"], [108, 2, 1, "", "resnest_269"], [109, 2, 1, "", "resnest_50"], [110, 2, 1, "", "resnest_50_1s4x24d"], [111, 2, 1, "", "resnest_50_4s2x40d"], [113, 2, 1, "", "resnet_1001"], [114, 2, 1, "", "resnet_101"], [115, 2, 1, "", "resnet_152"], [116, 2, 1, "", "resnet_18"], [117, 2, 1, "", "resnet_200"], [118, 2, 1, "", "resnet_269"], [119, 2, 1, "", "resnet_34"], [120, 2, 1, "", "resnet_50"], [124, 2, 1, "", "resnext_101_32x16d"], [125, 2, 1, "", "resnext_101_32x32d"], [126, 2, 1, "", "resnext_101_32x4d"], [127, 2, 1, "", "resnext_101_32x8d"], [128, 2, 1, "", "resnext_101_64x4d"], [129, 2, 1, "", "resnext_50_32x4d"], [131, 2, 1, "", "se_resnet_101"], [132, 2, 1, "", "se_resnet_152"], [133, 2, 1, "", "se_resnet_18"], [134, 2, 1, "", "se_resnet_34"], [135, 2, 1, "", "se_resnet_50"], [136, 2, 1, "", "se_resnext_101_32x4d"], [137, 2, 1, "", "se_resnext_101_32x8d"], [138, 2, 1, "", "se_resnext_101_64x4d"], [139, 2, 1, "", "se_resnext_50_32x4d"], [141, 2, 1, "", "sk_resnet_18"], [142, 2, 1, "", "sk_resnet_34"], [143, 2, 1, "", "sk_resnet_50"], [144, 2, 1, "", "sk_resnext_50_32x4d"], [155, 2, 1, "", "summarize"], [157, 2, 1, "", "transformer_base"], [158, 2, 1, "", "transformer_big"], [146, 2, 1, "", "vggnet_11"], [147, 2, 1, "", "vggnet_13"], [148, 2, 1, "", "vggnet_16"], [149, 2, 1, "", "vggnet_19"], [121, 2, 1, "", "wide_resnet_101"], [122, 2, 1, "", "wide_resnet_50"], [151, 2, 1, "", "xception"], [153, 2, 1, "", "zfnet"]], "lucid.nn": [[289, 1, 1, "", "AdaptiveAvgPool1d"], [290, 1, 1, "", "AdaptiveAvgPool2d"], [291, 1, 1, "", "AdaptiveAvgPool3d"], [259, 1, 1, "", "AlphaDropout"], [292, 1, 1, "", "AvgPool1d"], [293, 1, 1, "", "AvgPool2d"], [294, 1, 1, "", "AvgPool3d"], [274, 1, 1, "", "BCELoss"], [280, 1, 1, "", "BatchNorm1d"], [281, 1, 1, "", "BatchNorm2d"], [282, 1, 1, "", "BatchNorm3d"], [270, 1, 1, "", "Bilinear"], [160, 1, 1, "", "Buffer"], [255, 1, 1, "", "Conv1d"], [256, 1, 1, "", "Conv2d"], [257, 1, 1, "", "Conv3d"], [222, 1, 1, "", "ConvBNReLU1d"], [223, 1, 1, "", "ConvBNReLU2d"], [224, 1, 1, "", "ConvBNReLU3d"], [275, 1, 1, "", "CrossEntropyLoss"], [225, 1, 1, "", "DepthSeparableConv1d"], [226, 1, 1, "", "DepthSeparableConv2d"], [227, 1, 1, "", "DepthSeparableConv3d"], [260, 1, 1, "", "DropBlock"], [261, 1, 1, "", "DropPath"], [262, 1, 1, "", "Dropout"], [263, 1, 1, "", "Dropout1d"], [264, 1, 1, "", "Dropout2d"], [265, 1, 1, "", "Dropout3d"], [239, 1, 1, "", "ELU"], [299, 1, 1, "", "Embedding"], [240, 1, 1, "", "GELU"], [283, 1, 1, "", "GlobalResponseNorm"], [241, 1, 1, "", "HardSigmoid"], [242, 1, 1, "", "HardSwish"], [276, 1, 1, "", "HuberLoss"], [271, 1, 1, "", "Identity"], [284, 1, 1, "", "InstanceNorm1d"], [285, 1, 1, "", "InstanceNorm2d"], [286, 1, 1, "", "InstanceNorm3d"], [287, 1, 1, "", "LayerNorm"], [243, 1, 1, "", "LeakyReLU"], [272, 1, 1, "", "Linear"], [277, 1, 1, "", "MSELoss"], [295, 1, 1, "", "MaxPool1d"], [296, 1, 1, "", "MaxPool2d"], [297, 1, 1, "", "MaxPool3d"], [161, 1, 1, "", "Module"], [163, 1, 1, "", "ModuleDict"], [164, 1, 1, "", "ModuleList"], [252, 1, 1, "", "MultiHeadAttention"], [278, 1, 1, "", "NLLLoss"], [162, 1, 1, "", "Parameter"], [165, 1, 1, "", "ParameterDict"], [166, 1, 1, "", "ParameterList"], [244, 1, 1, "", "ReLU"], [245, 1, 1, "", "ReLU6"], [267, 1, 1, "", "Rearrange"], [246, 1, 1, "", "SELU"], [228, 1, 1, "", "SEModule"], [253, 1, 1, "", "ScaledDotProductAttention"], [229, 1, 1, "", "SelectiveKernel"], [167, 1, 1, "", "Sequential"], [247, 1, 1, "", "Sigmoid"], [248, 1, 1, "", "Softmax"], [249, 1, 1, "", "Swish"], [250, 1, 1, "", "Tanh"], [301, 1, 1, "", "Transformer"], [302, 1, 1, "", "TransformerDecoder"], [303, 1, 1, "", "TransformerDecoderLayer"], [304, 1, 1, "", "TransformerEncoder"], [305, 1, 1, "", "TransformerEncoderLayer"], [307, 1, 1, "", "Upsample"]], "lucid.nn.functional": [[208, 2, 1, "", "adaptive_avg_pool1d"], [209, 2, 1, "", "adaptive_avg_pool2d"], [210, 2, 1, "", "adaptive_avg_pool3d"], [185, 2, 1, "", "alpha_dropout"], [211, 2, 1, "", "avg_pool1d"], [212, 2, 1, "", "avg_pool2d"], [213, 2, 1, "", "avg_pool3d"], [203, 2, 1, "", "batch_norm"], [194, 2, 1, "", "bilinear"], [197, 2, 1, "", "binary_cross_entropy"], [180, 2, 1, "", "conv1d"], [181, 2, 1, "", "conv2d"], [182, 2, 1, "", "conv3d"], [198, 2, 1, "", "cross_entropy"], [186, 2, 1, "", "drop_block"], [187, 2, 1, "", "drop_path"], [188, 2, 1, "", "dropout"], [189, 2, 1, "", "dropout1d"], [190, 2, 1, "", "dropout2d"], [191, 2, 1, "", "dropout3d"], [169, 2, 1, "", "elu"], [218, 2, 1, "", "embedding"], [170, 2, 1, "", "gelu"], [204, 2, 1, "", "global_response_norm"], [199, 2, 1, "", "huber_loss"], [206, 2, 1, "", "instance_norm"], [220, 2, 1, "", "interpolate"], [207, 2, 1, "", "layer_norm"], [172, 2, 1, "", "leaky_relu"], [196, 2, 1, "", "linear"], [215, 2, 1, "", "max_pool1d"], [216, 2, 1, "", "max_pool2d"], [217, 2, 1, "", "max_pool3d"], [201, 2, 1, "", "mse_loss"], [202, 2, 1, "", "nll_loss"], [173, 2, 1, "", "relu"], [221, 2, 1, "", "rotate"], [179, 2, 1, "", "scaled_dot_product_attention"], [174, 2, 1, "", "selu"], [175, 2, 1, "", "sigmoid"], [176, 2, 1, "", "softmax"], [177, 2, 1, "", "tanh"], [184, 2, 1, "", "unfold"]], "lucid.nn.init": [[231, 2, 1, "", "constant"], [233, 2, 1, "", "kaiming_normal"], [234, 2, 1, "", "kaiming_uniform"], [235, 2, 1, "", "normal"], [236, 2, 1, "", "uniform"], [237, 2, 1, "", "xavier_normal"], [238, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[312, 1, 1, "", "ASGD"], [313, 1, 1, "", "Adadelta"], [314, 1, 1, "", "Adagrad"], [315, 1, 1, "", "Adam"], [316, 1, 1, "", "AdamW"], [317, 1, 1, "", "Adamax"], [318, 1, 1, "", "NAdam"], [310, 1, 1, "", "Optimizer"], [319, 1, 1, "", "RAdam"], [320, 1, 1, "", "RMSprop"], [321, 1, 1, "", "Rprop"], [322, 1, 1, "", "SGD"]], "lucid.random": [[329, 2, 1, "", "bernoulli"], [331, 2, 1, "", "rand"], [332, 2, 1, "", "randint"], [333, 2, 1, "", "randn"], [334, 2, 1, "", "seed"], [335, 2, 1, "", "uniform"]], "lucid.transforms": [[407, 1, 1, "", "CenterCrop"], [405, 1, 1, "", "Compose"], [408, 1, 1, "", "Normalize"], [409, 1, 1, "", "RandomCrop"], [410, 1, 1, "", "RandomGrayscale"], [411, 1, 1, "", "RandomHorizontalFlip"], [412, 1, 1, "", "RandomRotation"], [413, 1, 1, "", "RandomVerticalFlip"], [414, 1, 1, "", "Resize"], [406, 1, 1, "", "ToTensor"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [3, 15, 16, 22, 24, 27, 71, 96, 97, 102, 104, 105, 106, 107, 108, 109, 154, 155, 156, 160, 161, 162, 163, 165, 166, 167, 179, 208, 209, 210, 229, 253, 275, 278, 289, 290, 291, 292, 295, 296, 301, 309, 310, 311, 325, 327, 342, 350, 369, 371, 379, 382, 384, 385, 398, 406, 408, 416], "0": [0, 1, 3, 4, 5, 6, 7, 8, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 31, 39, 40, 59, 60, 69, 70, 71, 72, 75, 77, 82, 86, 94, 130, 154, 156, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 307, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 357, 358, 360, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 373, 374, 375, 376, 379, 380, 381, 383, 384, 385, 387, 388, 390, 393, 394, 395, 397, 398, 399, 401, 402, 403, 404, 405, 407, 408, 409, 410, 411, 412, 413, 414, 416], "000": [5, 6, 7, 8, 157, 158, 351, 352], "0000": [275, 276, 278], "0001": 312, "000e": [351, 352], "001": [312, 315, 316, 318, 319, 322], "002": [317, 318], "004": 318, "005": 243, "008": [94, 154], "00808": 154, "01": [172, 243, 310, 311, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322], "01051757": 333, "011": [37, 154], "013": [57, 154], "016": [113, 154], "0205": 275, "0217": 275, "0227": 275, "024": [100, 135, 154], "026": [124, 154], "028": [129, 154], "0299": 275, "032": [69, 120, 154], "03545": 154, "044715": [170, 240], "0450": 275, "0451": 275, "046": [67, 154], "047": [147, 154], "04719755": 361, "0474259": 175, "048": [137, 154], "0480": 275, "04861": 154, "05": [203, 206, 207, 222, 223, 224, 243, 280, 281, 282, 284, 285, 286, 287, 301, 303, 305], "0507": [174, 246], "06": [39, 77, 204, 283, 313, 321], "066": [51, 154], "069": [107, 118, 154], "07": [186, 197, 198, 260, 274, 275], "070": [102, 154], "0700": 275, "0706508": 250, "071": [113, 154], "0721": 275, "073": [143, 154], "07722396": 249, "0794": 278, "08": [315, 316, 317, 318, 319, 320], "0802": 278, "083": [81, 154], "08333333": 24, "085537": 368, "088": [135, 154], "08955": 154, "0900": [248, 275], "096": [33, 151, 154], "0986": [176, 248], "09861229": 369, "0992": 275, "1": [0, 1, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 82, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 130, 136, 137, 138, 139, 140, 144, 145, 150, 152, 154, 155, 156, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 328, 329, 331, 332, 333, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 355, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416], "10": [0, 1, 2, 3, 5, 6, 7, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 54, 86, 87, 88, 89, 104, 105, 106, 107, 108, 109, 110, 111, 145, 152, 153, 154, 155, 163, 164, 167, 181, 182, 194, 196, 208, 252, 255, 256, 257, 264, 265, 270, 272, 281, 282, 285, 289, 293, 294, 296, 301, 302, 303, 304, 305, 314, 327, 332, 335, 336, 339, 342, 345, 346, 354, 363, 379, 407, 409, 410, 412], "100": [6, 29, 69, 70, 71, 72, 146, 147, 148, 149, 154, 327, 416], "1000": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153], "1000000": 312, "1001": [113, 154, 275], "1003": 275, "1007": 154, "10096": 154, "101": [103, 104, 114, 121, 124, 125, 126, 127, 128, 131, 136, 137, 138, 154], "10106": 154, "1014": 174, "102": [118, 154], "1024": [33, 38, 158, 267], "1025": [164, 167], "1026": [164, 167], "1027": [164, 167], "10499": 175, "1050": 247, "1054": 278, "1056": [164, 167], "10590": 154, "107": [38, 154], "108": [70, 154], "1097": 154, "11": [102, 116, 133, 145, 146, 154, 194, 255, 256, 257, 264, 270, 281, 282, 285, 293, 294, 296, 342, 407, 408, 409, 410, 412], "110": [108, 154], "1105": 154, "1109": 154, "111": [63, 154], "1111": 274, "112": [96, 109, 154], "1134": 194, "114b": 410, "119": 194, "1192": [175, 176, 248], "12": [35, 36, 54, 55, 56, 57, 58, 64, 87, 88, 154, 157, 158, 165, 194, 210, 255, 256, 257, 264, 265, 270, 281, 282, 285, 291, 293, 294, 296, 342, 346, 347, 407, 409, 410, 412], "120": [69, 86, 89, 96, 97, 154], "12000": [157, 158], "121": [54, 55, 154], "123": [233, 234, 235, 236, 237, 238, 334, 335], "124": [36, 154, 233, 234, 237, 238], "125": 294, "1250": 276, "1251": 154, "1258": 154, "126": [121, 154], "128": [30, 33, 39, 44, 67, 83, 112, 121, 122, 145, 154, 167, 229, 405, 416], "1280": [36, 92], "128x128": [405, 416], "13": [74, 145, 147, 154, 194, 255, 256, 257, 270, 282, 293, 294, 296, 342, 407, 409, 410, 412], "1314": 154, "132": [146, 154], "1324": 154, "133": [147, 154], "136": [71, 102, 154], "138": [148, 154], "14": [32, 33, 34, 56, 105, 154, 255, 256, 257, 264, 265, 270, 282, 293, 294, 296, 328, 342, 346, 407, 409, 410, 412], "1409": 154, "143": [149, 154], "144": 97, "145": 194, "148": [43, 154], "149": [56, 113, 154], "15": [0, 50, 154, 194, 255, 256, 257, 270, 282, 293, 294, 296, 342, 346, 382, 407, 409, 410, 412, 416], "1513": 278, "152": [101, 115, 132, 154], "1536": [34, 35, 37], "155": 342, "1556": 154, "156": [78, 154], "157": [34, 154], "1588": [170, 240], "16": [54, 55, 86, 89, 92, 96, 97, 124, 130, 145, 148, 154, 164, 165, 167, 179, 209, 210, 222, 223, 224, 228, 229, 252, 253, 255, 256, 257, 264, 265, 267, 270, 281, 282, 290, 291, 293, 294, 296, 301, 302, 303, 304, 305, 309, 342, 346, 377, 407, 409, 410, 412], "160": [96, 114, 154], "16227766": 25, "16425": 278, "1643": 274, "166": 342, "167": 242, "169": [54, 56, 154], "17": [107, 154, 255, 256, 257, 270, 282, 294, 341, 407, 409, 410, 412], "170": 194, "1704": 154, "174": [31, 154], "17520119": 376, "177": [126, 154], "18": [88, 116, 133, 141, 154, 255, 256, 257, 264, 270, 282, 294, 345, 346, 407, 409, 410, 412], "1800": 275, "184": 96, "18877099": 249, "19": [65, 145, 149, 154, 181, 182, 194, 256, 257, 282, 340, 342], "192": [31, 32, 34, 35, 37, 39, 40, 77, 87, 88, 115, 154], "194": [124, 154], "196": [53, 154], "1966": [176, 247, 248], "197": [42, 49, 154], "198": [96, 154], "1998": [154, 275], "1_53": 154, "1d": [180, 208, 211, 215, 222, 225, 280, 284, 289, 335, 342, 350, 382, 392, 393, 394, 395, 400], "1e": [39, 77, 186, 197, 198, 203, 204, 206, 207, 222, 223, 224, 260, 274, 275, 280, 281, 282, 283, 284, 285, 286, 287, 301, 303, 305, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322], "1e6": 312, "1s4x24d": 110, "1st": [28, 152], "2": [1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 59, 60, 69, 70, 71, 72, 87, 88, 89, 92, 96, 97, 103, 104, 105, 106, 107, 108, 109, 111, 116, 133, 141, 152, 154, 155, 160, 161, 162, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 328, 329, 331, 332, 333, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 354, 355, 356, 357, 358, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416], "20": [0, 5, 6, 7, 8, 57, 154, 163, 164, 167, 256, 257, 264, 282, 302, 303, 346, 368], "200": [96, 106, 117, 154], "2004": 154, "201": [57, 106, 154], "2011": 228, "2012": 154, "2014": 154, "2015": 154, "2016": 154, "2017": [154, 301], "2018": [154, 228], "2019": 154, "2020": 154, "2021": 154, "2022": 154, "2023": [154, 228], "2024": 154, "2039": 278, "204": 257, "2048": [36, 37, 38, 156, 301, 303, 305], "21": [71, 119, 134, 154, 165, 194, 256, 257, 282, 346], "210": [72, 154], "211": 342, "213": [154, 158], "21841": [48, 53], "22": [83, 151, 154, 194, 256, 257, 264, 282, 340, 342], "2201": 154, "221": [72, 154], "2231": [275, 278], "224": [28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 94, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 122, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 152, 154], "2247": [280, 281, 282, 284, 285, 286, 287], "224x224": [59, 74, 136, 137, 138, 139, 144], "226": 342, "22752314": 333, "2278": 154, "23": [104, 114, 121, 124, 125, 126, 127, 128, 131, 256, 257, 282], "2301": 154, "232": [94, 138, 154], "2324": [154, 246], "233": [47, 154], "234": [233, 234, 235, 236, 237, 238, 335], "235": [64, 154], "237": [154, 158], "238": [97, 154], "23840584": 249, "24": [54, 55, 92, 96, 97, 106, 110, 117, 194, 209, 256, 257, 264, 282, 290, 346], "240": [32, 47, 96, 97, 149, 154], "240x240": 59, "2424": [176, 248], "2447": 248, "246": [87, 154], "24d": 110, "25": [0, 110, 120, 129, 141, 154, 175, 187, 247, 257, 277, 282, 293, 294, 339, 354, 373, 384], "2500": [274, 276, 278], "2512": 239, "2547": 246, "256": [30, 33, 36, 38, 39, 112, 145], "26": [107, 154, 165, 196, 257, 272, 282, 346], "260": 154, "260x260": 59, "26325684": 333, "264": [58, 154], "2689": [176, 247, 248], "26894142": 249, "269": [108, 118, 154], "27": [31, 109, 139, 154, 194, 255, 257, 282, 367], "272": [128, 154], "274": [104, 144, 154], "276": [233, 234, 237, 238], "277": [35, 154], "28": [35, 36, 44, 52, 81, 87, 88, 135, 154, 194, 257, 346], "280": [51, 154], "288": [97, 106, 154], "289": [48, 61, 154], "28x28": [7, 8, 87, 88], "29": [144, 154, 257], "299": [150, 154], "299r": 410, "299x299": [75, 76, 83, 84], "2_i": [284, 285, 286], "2d": [181, 190, 209, 212, 216, 223, 226, 281, 285, 290, 342, 350, 353, 382, 389, 392, 393, 395, 400, 412], "2e": 317, "2nd": [28, 152], "2x": 111, "2x2": [184, 407, 409], "3": [1, 2, 3, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 87, 92, 94, 95, 96, 97, 100, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 150, 152, 154, 160, 161, 162, 164, 165, 166, 167, 170, 175, 176, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 194, 196, 199, 201, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 364, 366, 367, 368, 369, 370, 371, 372, 376, 377, 378, 379, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414], "30": [66, 75, 108, 111, 118, 154, 164, 221, 257, 412], "300": 154, "300x300": 59, "301": [35, 154], "302": [70, 154], "3026": 278, "3072": 38, "30823025": 249, "31": [194, 257, 342], "310": [351, 352], "31622777": 25, "319": 154, "32": [30, 54, 56, 57, 89, 98, 103, 104, 105, 106, 107, 108, 109, 124, 125, 126, 127, 129, 154, 164, 167, 194, 196, 209, 222, 223, 224, 228, 229, 256, 257, 267, 272, 290, 309, 340, 341, 346], "320": [107, 154], "321": [233, 234, 237, 238], "326": [131, 154], "32x16d": 154, "32x32": [5, 6, 86, 89], "32x32d": 154, "32x4d": [136, 139, 144, 154], "32x8d": [137, 154], "33": [58, 154, 164, 167, 196, 257, 272], "330": [32, 154], "33333333": 24, "336": [37, 42, 127, 146, 154], "337": [58, 154], "34": [119, 134, 142, 154, 164, 167, 194, 257, 342, 346], "342": [233, 234, 237, 238], "344": [65, 154], "345": [233, 234, 235, 236, 237, 238, 335], "35": [84, 154, 164, 167, 257], "350": [53, 154], "352": [74, 154], "355": [68, 154], "3567": [274, 278], "357": [148, 153, 154], "36": [106, 115, 117, 132, 257], "3679": [169, 174, 239], "368": [141, 143, 154], "36th": 154, "37": [101, 154, 255], "370": [63, 154], "372": 194, "375": 277, "3750": 276, "37754067": 249, "378": [88, 154], "380": 154, "380x380": 59, "38344152": 331, "384": [31, 32, 34, 35, 37, 39, 40, 77], "38629436": 369, "389056": 368, "38th": 154, "392": [75, 154], "393": [66, 74, 154], "3935": 239, "3965": 154, "3977": 154, "3d": [182, 191, 210, 213, 217, 224, 227, 257, 282, 286, 291], "3x3": [154, 336], "4": [0, 1, 2, 3, 10, 12, 13, 14, 16, 17, 18, 19, 21, 23, 24, 25, 31, 32, 33, 34, 35, 36, 37, 38, 39, 54, 59, 77, 78, 86, 87, 88, 94, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 114, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 134, 135, 142, 143, 154, 155, 165, 167, 179, 180, 181, 182, 184, 186, 187, 189, 190, 191, 194, 196, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 225, 226, 227, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 270, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 307, 312, 315, 319, 320, 322, 325, 328, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 356, 358, 364, 369, 370, 371, 372, 373, 375, 377, 378, 379, 380, 382, 383, 384, 385, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 399, 400, 401, 402, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414], "40": [76, 92, 96, 97, 111, 154], "400": [45, 89, 154], "4044": 274, "4076": 275, "4096": [28, 152], "40d": 111, "41421356": 17, "416": [118, 136, 154], "41666667": 24, "417": [111, 154], "41808962": 333, "419974": 177, "4199743": 250, "42": [37, 38, 194, 228, 328, 336], "421": [233, 234, 237, 238], "423": [233, 234, 235, 236], "42718872": 25, "4278": 154, "4284": 154, "4286": 274, "43": [67, 154, 340, 342], "431": [80, 154], "432": [66, 154], "4323": 239, "4375": 276, "43758721": 331, "44": [114, 126, 154], "440": [71, 154], "4472136": 19, "448": [68, 154], "4495": [282, 286], "45": [142, 154, 194, 221, 412], "4510": 154, "4520": 154, "4545": 259, "455": [128, 154], "456": 154, "456x456": 59, "46": [43, 154], "464": [41, 111, 154], "468": [125, 154], "4700": 154, "4708": 154, "47112767": 363, "472": [125, 154, 158], "48": [54, 57, 58, 97, 104, 108, 118, 136, 154, 196, 272], "480": [56, 96, 154], "481": [96, 154], "483": [109, 154], "49": [80, 131, 154], "496": [52, 154], "4979": 239, "4s2x40d": [111, 154], "4x": 110, "4x4": 414, "5": [1, 2, 12, 13, 15, 16, 21, 22, 23, 24, 28, 31, 36, 39, 47, 59, 61, 75, 86, 87, 88, 89, 92, 96, 97, 140, 141, 142, 143, 152, 154, 155, 161, 162, 163, 164, 165, 167, 170, 175, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 194, 196, 199, 201, 203, 206, 207, 208, 211, 212, 218, 220, 222, 223, 224, 229, 231, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 289, 292, 293, 294, 296, 297, 301, 303, 305, 321, 325, 328, 329, 332, 335, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 353, 354, 356, 358, 360, 361, 362, 370, 371, 372, 373, 374, 379, 382, 383, 384, 385, 390, 392, 396, 397, 401, 402, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416], "50": [5, 6, 103, 109, 110, 111, 112, 120, 122, 129, 135, 139, 143, 144, 154, 196, 272, 321, 340, 342, 354, 410, 411, 413, 416], "5000": [156, 274, 276, 278], "504": [95, 154], "50_1s4x24d": 154, "510": 154, "5108": 278, "512": [30, 33, 36, 38, 39, 84, 99, 112, 116, 142, 154, 156, 157, 252, 301, 302, 303, 304, 305], "516": [33, 154], "519": 154, "520": [78, 154], "52359878": 362, "528": 154, "528x528": 59, "53": [32, 154, 194, 341], "530": [125, 154], "536": [64, 154], "537": [97, 154], "543": [233, 234, 235, 236, 237, 238, 335], "54308063": 366, "544": [80, 148, 154, 157], "545": 347, "5455": 259, "549": [114, 154], "55": [70, 154], "557": [120, 154], "558": [37, 154], "559": [139, 154], "560": [62, 105, 154], "563": [233, 234, 237, 238], "5672": 154, "568": [72, 154], "5683": 154, "569": [137, 154], "57": [143, 154, 194], "57079633": [361, 362], "5720": 154, "5730": 154, "57366333": 334, "576": 97, "584": [154, 157], "586": [76, 154], "587g": 410, "589": [44, 154], "590": [98, 154], "591": [41, 154], "592": [133, 154], "5987": 154, "5995": 154, "5998": 154, "5th": [28, 152], "6": [16, 24, 28, 30, 32, 33, 34, 37, 39, 54, 55, 56, 57, 58, 59, 77, 86, 89, 103, 109, 112, 119, 120, 122, 129, 134, 135, 142, 143, 152, 154, 156, 165, 166, 180, 181, 182, 184, 186, 191, 194, 196, 204, 208, 218, 234, 238, 241, 245, 255, 256, 257, 260, 262, 263, 264, 265, 270, 272, 274, 280, 281, 282, 283, 284, 285, 286, 287, 289, 293, 294, 296, 297, 301, 302, 304, 313, 321, 325, 328, 335, 338, 339, 340, 341, 342, 345, 346, 347, 348, 349, 350, 351, 352, 356, 358, 370, 371, 372, 379, 382, 383, 384, 385, 387, 390, 395, 396, 397, 401, 402, 404, 406, 407, 408, 409, 410, 412, 414], "60": [5, 6, 115, 154], "600": [59, 154], "6008": 154, "600x600": 59, "6052": 278, "6065": 239, "608": [36, 153, 154], "61": [29, 89, 154], "6105": 154, "611": [105, 154], "6114": 154, "6124": [280, 281, 282, 284, 285, 286, 287], "617": [69, 154], "62": [153, 154, 157, 194], "623": [50, 154], "62686041": 376, "630": 154, "632": [35, 154], "6321": [169, 239], "63245553": 25, "635": [52, 154], "636": [61, 154], "64": [30, 39, 54, 58, 92, 96, 103, 104, 105, 106, 107, 108, 109, 112, 117, 128, 140, 145, 154, 164, 167, 194, 228, 229], "640": [48, 65, 154], "645": 154, "64589411": 331, "647": [141, 154], "64x4d": [138, 154], "654": [233, 234, 235, 236, 237, 238, 335], "656": [34, 154], "657": [233, 234, 237, 238], "6590": [176, 248], "66": [68, 132, 154], "660": [48, 154], "6652": 248, "66666667": 24, "6667": 274, "667": [149, 154], "6682": 274, "669": [117, 154], "67": 342, "672": [96, 119, 154], "67326": 246, "6733": 174, "676": [110, 154], "678": [233, 234, 235, 236, 237, 238], "688": [38, 154], "68811989": 333, "689": [116, 154], "69314718": 369, "696": [121, 154], "7": [10, 13, 23, 38, 55, 62, 145, 154, 165, 180, 181, 182, 184, 186, 191, 194, 196, 197, 198, 208, 218, 229, 240, 245, 246, 247, 250, 255, 256, 257, 260, 264, 265, 270, 272, 274, 275, 277, 281, 282, 285, 286, 289, 293, 294, 296, 297, 328, 329, 332, 335, 338, 340, 341, 342, 346, 348, 350, 354, 368, 371, 379, 382, 383, 384, 397, 400, 401, 402, 406, 407, 408, 409, 410, 412, 414], "70": [7, 8, 106, 154], "7001": 275, "704": [58, 126, 154], "706": [89, 154], "70710678": [19, 375], "708": [45, 154], "7132": 154, "7141": 154, "7147": 278, "715": [99, 154], "717": [46, 154], "7182818": 368, "72": [92, 96, 97], "726791": 154, "7311": [176, 247, 248], "739": [83, 154], "74": 342, "748": [79, 154], "75": [196, 272, 277, 312, 354], "755": [101, 154], "7581": 174, "760": [104, 144, 154], "76159416": [249, 381], "7616": [177, 250], "76219569": 366, "7635": 246, "767": [42, 154], "768": [31, 32, 34, 35, 37, 39, 40, 77], "770": [36, 154], "772": 347, "774": [100, 154], "778": [133, 154], "78": [122, 154], "78357324": 333, "78539816": 363, "790": [34, 154], "791": [127, 154], "79172504": 331, "792": [124, 154], "795": [62, 154], "797": [119, 154], "7x7": 152, "8": [22, 26, 37, 38, 54, 59, 108, 112, 115, 118, 124, 125, 126, 127, 128, 129, 132, 141, 142, 143, 155, 156, 164, 165, 167, 179, 180, 181, 182, 184, 186, 191, 194, 196, 197, 208, 209, 210, 218, 222, 223, 224, 228, 240, 241, 246, 247, 250, 252, 253, 255, 256, 257, 260, 262, 263, 264, 265, 270, 272, 274, 277, 281, 282, 285, 286, 289, 290, 291, 293, 294, 296, 297, 301, 302, 303, 304, 305, 315, 316, 317, 318, 319, 320, 328, 329, 332, 339, 340, 341, 342, 346, 347, 349, 350, 367, 371, 379, 382, 383, 384, 397, 401, 402, 406, 407, 408, 409, 410, 412, 414], "80": [5, 6, 7, 8, 96], "800": [46, 50, 154], "8005": 275, "808": [115, 154], "817": [75, 154], "818": 154, "8182": 259, "82": [33, 154, 194], "821": [132, 154], "83": [128, 154], "832": [81, 154], "833": 154, "84": [86, 88, 89], "840": [29, 49, 79, 154], "8413": [170, 240], "847": [84, 154], "848": [132, 147, 154], "856": [55, 154], "85772238": 249, "8584": 246, "86": [79, 154], "862": [151, 154], "863": [146, 154], "864": [98, 117, 154], "868": [134, 154], "872": [95, 110, 131, 154], "876": [233, 234, 237, 238, 335], "88": [41, 46, 97, 127, 138, 154], "8808": [176, 247, 248], "884": [43, 154], "886": [121, 154], "887": 347, "891773": 331, "89442719": 19, "895": [142, 154], "896": [139, 154], "9": [0, 1, 3, 8, 26, 39, 40, 51, 63, 77, 99, 154, 181, 184, 186, 194, 196, 208, 218, 255, 256, 257, 260, 264, 270, 272, 274, 281, 282, 285, 289, 293, 294, 296, 312, 313, 315, 316, 317, 318, 319, 320, 322, 328, 329, 332, 335, 338, 342, 346, 347, 348, 350, 377, 378, 401, 402, 406, 407, 408, 409, 410, 412], "904": [129, 154], "90709145": 334, "9091": 259, "9120": 278, "9163": 278, "928": [57, 154], "929": [108, 154], "93": [137, 154], "94": 113, "944": [31, 154], "9486833": 25, "949e": [351, 352], "9526": 175, "9545": 240, "955": [136, 154], "956": [49, 154], "958": [134, 154], "96": [31, 32, 39, 40, 77, 97], "960": 96, "96366276": 331, "9640": 250, "96402758": 381, "968": [53, 154], "973": [122, 154], "978": [38, 55, 154], "984": [76, 138, 154], "99": 320, "9957": 278, "99734545": 334, "999": [0, 315, 316, 317, 318, 319], "A": [1, 3, 5, 6, 7, 8, 10, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 39, 60, 82, 86, 90, 93, 103, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 145, 146, 147, 148, 149, 154, 161, 167, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 194, 196, 197, 198, 202, 203, 204, 206, 207, 220, 229, 253, 259, 260, 262, 263, 264, 265, 267, 274, 275, 278, 280, 281, 282, 283, 284, 285, 286, 287, 299, 301, 302, 303, 304, 305, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 326, 328, 329, 331, 332, 333, 335, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 412], "As": 334, "At": 307, "Be": [0, 10], "By": [0, 2, 3, 15, 93, 100, 113, 114, 115, 116, 117, 118, 119, 120, 162, 221, 309, 319, 325, 329, 331, 332, 333, 335, 406, 416], "For": [2, 3, 4, 13, 15, 17, 18, 19, 21, 22, 23, 24, 26, 98, 99, 100, 102, 167, 169, 170, 172, 173, 174, 175, 177, 194, 196, 220, 233, 234, 237, 238, 246, 255, 256, 257, 270, 272, 280, 281, 282, 284, 285, 286, 309, 311, 334, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 368, 369, 370, 371, 372, 375, 377, 379, 382, 383, 384, 393, 395, 398, 400, 403, 416], "If": [0, 1, 2, 5, 6, 7, 8, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 112, 155, 161, 163, 164, 165, 166, 169, 170, 172, 173, 174, 175, 177, 179, 180, 181, 182, 187, 191, 194, 196, 203, 206, 209, 210, 218, 220, 221, 222, 223, 224, 225, 226, 227, 229, 233, 234, 252, 253, 255, 256, 257, 261, 270, 272, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 307, 310, 315, 316, 320, 321, 327, 329, 331, 332, 333, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 406, 410, 411, 413, 414], "In": [3, 15, 24, 180, 181, 182, 275, 278, 324, 325, 326, 405, 416], "It": [1, 2, 3, 7, 10, 15, 24, 25, 26, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 52, 55, 56, 57, 58, 73, 74, 75, 86, 87, 88, 89, 91, 92, 94, 102, 112, 113, 114, 115, 116, 117, 118, 119, 120, 133, 145, 151, 154, 161, 163, 164, 165, 166, 167, 187, 191, 194, 218, 220, 221, 222, 223, 224, 228, 240, 241, 244, 245, 250, 252, 253, 261, 267, 270, 271, 274, 275, 276, 277, 278, 289, 290, 291, 299, 301, 302, 304, 307, 309, 310, 311, 312, 318, 320, 321, 322, 325, 334, 338, 339, 340, 343, 344, 345, 347, 348, 354, 370, 372, 388, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 404, 405, 406], "Its": [26, 336], "Near": 24, "No": [184, 187], "Not": 271, "One": [87, 416], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416], "There": 396, "These": [4, 10, 15, 16, 19, 22, 25, 27, 30, 69, 70, 71, 72, 98, 99, 100, 101, 102, 121, 122, 141, 142, 143, 151, 154, 259, 262, 263, 264, 265, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 321, 328, 336, 416], "To": [3, 154, 311, 329, 333, 336, 351, 352, 392, 416], "With": [3, 154, 184, 187, 406, 416], "_": [12, 13, 14, 22, 163, 164, 166, 167, 169, 170, 172, 173, 174, 175, 177, 196, 218, 220, 267, 281, 282, 284, 285, 286, 292, 293, 294, 295, 296, 297, 299, 312, 313, 315, 316, 317, 318, 320, 322, 340, 341, 342, 346, 382, 383, 401, 402, 407, 408, 409, 411, 412, 413], "_1": [19, 163, 164, 165, 166, 167, 194, 270, 346, 388, 390, 404], "_2": [19, 163, 164, 165, 166, 167, 194, 270, 346, 388, 390, 404], "__call__": [1, 161], "__getitem__": [0, 2, 3, 5, 6, 7, 8], "__init__": [0, 1, 2, 3, 15, 28, 30, 39, 40, 59, 60, 73, 77, 82, 86, 90, 91, 92, 93, 103, 145, 152, 155, 160, 161, 162, 163, 164, 165, 166, 187, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 259, 260, 261, 262, 263, 267, 270, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 327, 337, 405, 406], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5, 6, 7, 8], "__repr__": 310, "__setattr__": 161, "_activ": 176, "_arraylik": [328, 350, 352, 356, 358], "_arraylikeint": 393, "_arrayorscalar": [160, 162, 328, 329, 337, 385], "_base_activ": 86, "_base_dtyp": [349, 351, 354, 355, 357], "_block": 260, "_c": 408, "_decai": 318, "_einopspattern": [12, 13, 14, 267], "_fanmod": [233, 234], "_grad_en": [324, 326], "_i": [19, 23, 176, 187, 194, 248, 261, 277, 280, 287, 292, 295, 340, 341, 343, 344, 346, 347, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 388, 390, 395, 398, 403, 404], "_in": [233, 234, 237, 238], "_interpolatetyp": 307, "_j": [176, 248, 292, 295, 346, 371, 379, 383, 384], "_k": 399, "_layer": [302, 304], "_left": 220, "_make_lay": 145, "_mlphead": 77, "_modul": 161, "_n": [19, 163, 164, 165, 166, 167, 388, 390, 404], "_numpyarrai": 328, "_out": [233, 234, 237, 238, 395, 400], "_p": [23, 218, 299], "_pad": 393, "_paddingstr": [222, 223, 224, 225, 226, 227, 255, 256, 257], "_paramet": 161, "_reducestr": 13, "_reductiontyp": [197, 198, 199, 201, 202, 274, 275, 276, 277, 278], "_resnestbottleneck": 103, "_right": 220, "_scalar": [179, 231, 235, 236, 237, 238, 253, 328, 349, 354, 364], "_scaled_channel": 30, "_scaled_num_block": 30, "_seresnetbottleneck": [131, 132, 135], "_seresnetmodul": [133, 134], "_shapelik": [155, 207, 287, 328, 332, 355, 357, 386, 396, 398, 403], "_size": [208, 209, 210, 260], "_skresnetmodul": [141, 142, 143], "_slope": 243, "_statedict": 310, "_t": [319, 320], "_tensor": [160, 162, 252, 301, 303, 305, 350, 385], "_tensorop": 337, "_u": 24, "_v": 24, "_valu": [364, 393], "_weight": 299, "_width": 393, "a_": [30, 303], "a_1": [252, 397], "a_2": 397, "a_h": 252, "a_i": [252, 343, 344, 347, 397], "a_k": 397, "aaai": 154, "ab": 359, "abc": [2, 310], "abil": [15, 154, 416], "about": [10, 15, 155], "abov": [15, 324, 326, 334, 350, 353, 401], "absolut": [22, 23, 30, 199, 317, 360], "abstract": [2, 3, 309, 310, 311, 312, 320, 322], "abstractmethod": 310, "abund": [48, 101], "acceler": [154, 246, 280, 281, 282, 312, 318, 320, 322], "accept": [271, 331, 337], "access": [0, 2, 3, 4, 5, 6, 7, 8, 124, 125, 126, 127, 128, 129, 160, 162, 163, 164, 165, 166, 167, 396], "accord": [12, 14, 187, 220, 255, 256, 257, 267, 270, 272, 275, 278, 313, 314, 315, 316, 317, 318, 319, 383, 386], "accordingli": 18, "account": [22, 24, 25, 249], "accumul": [312, 313, 314, 338, 339, 343, 344, 345, 348, 386], "accur": 132, "accuraci": [46, 48, 49, 50, 51, 69, 70, 71, 72, 79, 81, 90, 91, 92, 98, 99, 100, 101, 102, 135, 154], "achiev": [12, 123, 124, 125, 126, 127, 128, 129, 154, 180, 181, 182, 208, 267, 289, 290, 291, 318, 411, 413], "across": [0, 5, 6, 10, 12, 13, 30, 39, 52, 94, 154, 160, 164, 167, 204, 207, 208, 209, 210, 237, 238, 280, 281, 282, 284, 285, 286, 287, 289, 290, 291, 328, 329, 331, 332, 333, 334, 335, 336, 351, 352, 371, 384], "act": 316, "activ": [15, 28, 39, 86, 96, 97, 113, 117, 118, 130, 145, 152, 154, 163, 167, 169, 170, 172, 173, 174, 175, 176, 177, 185, 222, 223, 224, 228, 229, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 259, 260, 262, 263, 264, 265, 274, 275, 278, 280, 281, 282, 287, 301, 303, 305, 370, 372], "actual": [162, 274, 275, 277, 278, 337, 409], "ad": [14, 54, 92, 112, 161, 163, 164, 165, 166, 167, 180, 181, 182, 186, 194, 196, 197, 198, 203, 204, 206, 207, 211, 212, 213, 215, 216, 217, 222, 223, 224, 252, 255, 256, 257, 260, 274, 275, 280, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 295, 296, 297, 301, 303, 305, 313, 314, 315, 316, 317, 318, 319, 320, 327, 403, 416], "adadelta": 323, "adagrad": [313, 323], "adam": [154, 316, 317, 318, 319, 323], "adamax": 323, "adamw": 323, "adapt": [10, 28, 73, 86, 98, 101, 103, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 152, 154, 208, 209, 210, 228, 229, 289, 290, 291, 313, 314, 315, 318, 319, 320, 321], "adaptive_avg_pool1d": [193, 214, 289], "adaptive_avg_pool2d": [193, 214, 290], "adaptive_avg_pool3d": [193, 214, 291], "adaptiveavgpool1d": [269, 298], "adaptiveavgpool2d": [28, 130, 145, 152, 269, 298], "adaptiveavgpool3d": [269, 298], "add": [4, 161, 163, 164, 167, 194, 196, 252, 255, 256, 257, 270, 272, 287, 310, 312, 315, 320, 322, 325, 359, 393, 403], "add_bias_kv": 252, "add_modul": [161, 167], "add_param_group": 310, "add_zero_attn": 252, "addit": [4, 15, 22, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 161, 164, 167, 194, 196, 203, 206, 270, 272, 280, 281, 282, 284, 285, 286, 312, 318, 325, 336, 338, 399], "addition": 318, "address": [275, 278, 315, 316, 319], "adjust": [83, 90, 92, 94, 102, 136, 137, 138, 139, 140, 144, 208, 209, 210, 229, 259, 260, 280, 281, 282, 284, 285, 286, 287, 289, 290, 291, 311, 315, 319, 320, 321, 390, 404], "advanc": [3, 24, 60, 77, 91, 101, 117, 154, 164, 167, 180, 181, 182, 208, 209, 210, 289, 290, 291, 309, 312], "advantag": [84, 326], "affect": [324, 394, 398, 405], "affin": [222, 223, 224, 280, 281, 282, 284, 285, 286, 287, 412], "after": [10, 14, 22, 28, 96, 97, 152, 162, 163, 164, 165, 166, 167, 191, 228, 229, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 256, 257, 259, 262, 263, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 284, 287, 292, 293, 294, 295, 296, 297, 301, 303, 305, 316, 326, 337, 338, 339, 343, 344, 345, 347, 348, 354, 393, 397, 406], "afterward": 326, "aggreg": [10, 154, 229, 346, 395, 400], "aim": [4, 15], "al": [74, 154, 301], "alex": [5, 6, 154], "alexnet": [85, 152, 154], "algebra": [15, 16, 353], "algorithm": [7, 15, 22, 24, 25, 310, 311, 336], "align": [10, 26, 101, 220, 307, 341, 342], "align_corn": [220, 307], "all": [0, 3, 4, 15, 25, 59, 154, 161, 163, 164, 165, 166, 167, 181, 182, 208, 209, 210, 212, 213, 216, 217, 220, 223, 224, 229, 243, 244, 252, 257, 289, 290, 291, 293, 294, 297, 301, 309, 310, 311, 312, 315, 320, 321, 322, 347, 370, 371, 372, 379, 382, 384, 388, 389, 390, 395, 398, 399, 400, 401, 402, 404, 407, 408, 416], "allevi": [154, 169], "alloc": [351, 352], "allow": [0, 1, 3, 4, 10, 12, 15, 24, 25, 84, 86, 93, 96, 97, 99, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 123, 136, 137, 138, 139, 140, 144, 154, 162, 163, 164, 165, 166, 167, 169, 172, 173, 176, 182, 184, 221, 229, 239, 240, 243, 246, 247, 248, 250, 253, 255, 256, 257, 267, 299, 307, 309, 313, 314, 325, 349, 355, 357, 358, 383, 385, 392, 405, 406, 416], "along": [10, 13, 14, 176, 220, 229, 248, 341, 342, 346, 370, 371, 372, 379, 382, 384, 386, 387, 388, 390, 392, 395, 397, 399, 400, 403, 404, 411, 413], "alongsid": 160, "alpha": [169, 172, 174, 185, 239, 246, 259, 312, 320], "alpha_dropout": [192, 193, 259], "alphadropout": [266, 269], "alphadropoutmodel": 259, "alreadi": 327, "also": [155, 169, 170, 172, 173, 174, 175, 177, 194, 196, 220, 318, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 352, 357, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 386, 388, 390, 393, 394, 395, 396, 398, 399, 400, 403, 404], "alter": [167, 396], "altern": [1, 240, 313, 342], "alwai": [10, 162, 394, 410, 411, 413], "among": [75, 229], "amount": [180, 181, 182, 211, 212, 213, 215, 216, 217, 225, 226, 227, 318], "ampl": 98, "amsgrad": [315, 316], "an": [0, 1, 3, 10, 12, 13, 14, 15, 19, 21, 22, 24, 25, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 91, 94, 95, 96, 97, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 151, 152, 153, 154, 155, 157, 158, 161, 163, 164, 165, 166, 167, 170, 180, 181, 182, 184, 185, 188, 189, 190, 191, 194, 209, 210, 218, 220, 221, 225, 226, 227, 229, 237, 238, 239, 245, 247, 252, 255, 256, 257, 259, 261, 262, 263, 264, 265, 267, 270, 272, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 301, 302, 304, 305, 310, 311, 312, 315, 318, 320, 326, 327, 328, 337, 342, 350, 353, 364, 371, 379, 384, 386, 388, 395, 397, 400, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416], "analog": [395, 400], "analysi": [4, 228, 255, 256, 257, 286, 292, 294, 295, 297], "andreetto": 154, "andrew": 154, "angl": [221, 412], "ani": [0, 1, 2, 3, 12, 22, 24, 29, 112, 140, 151, 153, 160, 161, 162, 163, 165, 166, 169, 170, 172, 173, 174, 175, 177, 185, 188, 194, 196, 203, 206, 247, 267, 287, 309, 310, 324, 326, 327, 334, 337, 349, 350, 351, 353, 355, 356, 357, 358, 370, 372, 383, 385, 388, 389, 390, 393, 395, 399, 400, 403, 404, 405, 416], "anoth": [93, 166, 348, 356, 358, 406, 416], "api": [4, 289, 290, 291, 416], "appear": 310, "append": [164, 166, 167, 252], "appli": [2, 4, 5, 6, 7, 8, 10, 12, 13, 15, 22, 28, 30, 39, 59, 60, 77, 123, 140, 150, 152, 154, 156, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 179, 182, 184, 185, 186, 187, 188, 189, 190, 191, 194, 196, 197, 198, 199, 201, 202, 204, 222, 223, 224, 228, 229, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 270, 272, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 301, 302, 303, 304, 305, 312, 313, 314, 316, 317, 318, 319, 342, 393, 395, 401, 402, 405, 408, 410, 411, 412, 413, 414, 416], "applic": [4, 10, 13, 24, 41, 42, 43, 46, 48, 53, 54, 80, 83, 84, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 154, 180, 206, 255, 256, 257, 270, 272, 336, 349, 357, 393, 397, 401, 402, 414], "approach": [3, 10, 12, 14, 82, 167, 267, 316], "appropri": [24, 92, 96, 97, 154, 161, 165, 167, 187, 255, 256, 257, 259, 262, 263, 275, 293, 294, 324, 326], "approx": 174, "approxim": [24, 170, 240, 241, 242, 293, 296], "ar": [1, 2, 3, 4, 13, 14, 15, 18, 19, 21, 22, 24, 25, 26, 27, 31, 32, 33, 34, 35, 36, 37, 38, 69, 70, 71, 72, 73, 74, 75, 98, 100, 101, 154, 160, 161, 162, 163, 164, 165, 166, 167, 176, 180, 181, 182, 184, 187, 194, 196, 204, 209, 210, 218, 220, 225, 226, 227, 228, 229, 233, 234, 236, 237, 238, 241, 248, 252, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 270, 272, 275, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 305, 307, 309, 312, 315, 316, 318, 319, 320, 321, 322, 324, 326, 327, 328, 331, 332, 333, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 351, 352, 354, 360, 364, 368, 370, 371, 372, 373, 374, 379, 382, 383, 386, 387, 388, 392, 395, 396, 397, 400, 401, 402, 405, 406, 407, 409, 410, 414, 416], "arang": 359, "arbitrari": [164, 271, 351, 352, 364, 369, 371, 375, 377, 379, 383, 384], "arcco": 359, "arch": 327, "architectur": [10, 29, 31, 32, 33, 34, 35, 36, 37, 38, 40, 44, 45, 46, 47, 48, 49, 50, 51, 52, 54, 55, 56, 57, 58, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 112, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 163, 164, 165, 166, 167, 170, 228, 241, 242, 244, 249, 252, 253, 267, 270, 271, 301, 309, 327], "arcsin": 359, "arctan": 359, "area": [220, 307], "arg": [161, 271, 327, 351], "argument": [3, 4, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 86, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 161, 167, 271, 331, 351, 383], "around": [19, 221, 250], "arr": [328, 388, 390, 399, 404], "arrai": [15, 160, 162, 325, 328, 337, 342, 350, 356, 358, 385, 394, 395, 406, 416], "art": [48, 154], "artifici": 154, "arxiv": 154, "asarrai": 328, "asgd": 323, "ashish": 154, "aspect": 414, "assign": [161, 163, 165, 167, 220, 275, 278], "assist": [73, 74, 75], "associ": [165, 166], "assum": [0, 1, 310, 311, 324], "attempt": [163, 167], "attend": [179, 253, 302, 304, 305], "attent": [30, 103, 110, 111, 140, 154, 156, 166, 194, 228, 252, 253, 301, 302, 303, 304, 305], "attn": [179, 253], "attn_mask": [179, 253], "atto": [45, 78, 154], "attribut": 161, "audio": 255, "augment": [3, 4, 133, 221, 336, 395, 400, 405, 409, 410, 411, 412, 413, 416], "autodiff": 15, "autoencod": 154, "autograd": 309, "automat": [4, 15, 162, 163, 164, 165, 166, 309, 329, 331, 332, 333, 335, 337, 351, 352, 358, 392, 406], "autoregress": [179, 253], "auxiliari": [73, 74, 75, 160], "avail": [4, 5, 6, 7, 8, 15], "avd": 103, "averag": [13, 28, 87, 88, 89, 103, 112, 123, 130, 140, 145, 152, 160, 208, 209, 210, 211, 212, 213, 220, 228, 229, 277, 289, 290, 291, 292, 293, 294, 312, 313, 315, 320, 371], "avg_down": 112, "avg_pool": [292, 293, 294], "avg_pool1d": [193, 214], "avg_pool2d": [193, 214], "avg_pool3d": [193, 214], "avgpool": [28, 130, 145, 152, 229], "avgpool1d": [269, 298], "avgpool1dmodel": 292, "avgpool2d": [269, 298], "avgpool2dmodel": 293, "avgpool3d": [269, 298], "avgpool3dmodel": 294, "avoid": [2, 3, 12, 13, 24, 60, 165, 267, 326, 354], "ax": [10, 12, 13, 14, 16, 267, 325, 370, 371, 372, 379, 383, 384, 386, 395, 398, 400], "axi": [13, 23, 176, 248, 341, 342, 370, 371, 372, 379, 384, 387, 388, 390, 392, 393, 395, 397, 398, 399, 400, 403, 404, 411, 413], "b": [12, 13, 14, 16, 26, 30, 154, 194, 196, 236, 255, 256, 257, 267, 270, 272, 325, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 386, 388, 390, 392, 399, 404, 410], "b0": [59, 61, 154], "b1": [59, 62, 154], "b2": [59, 63, 154], "b3": [59, 64, 154], "b4": [59, 65, 154], "b5": [59, 66, 154], "b6": [59, 67, 154], "b7": [59, 68, 154], "b_": 30, "b_1": [303, 305], "b_2": [303, 305], "b_i": [343, 344, 347], "b_k": 252, "b_v": 252, "back": [220, 252, 293, 294, 327, 341, 346, 387, 395, 400], "backbon": [141, 142, 143], "backpropag": [10, 15, 18, 19, 21, 22, 24, 25, 27, 154, 160, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 194, 196, 220, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 255, 256, 257, 259, 260, 262, 263, 264, 265, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 292, 293, 294, 295, 296, 297, 299, 309, 326, 333, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 368, 370, 372, 385, 386, 387, 393, 395, 400, 401, 402, 406], "backward": [15, 160, 162, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 337, 354, 387, 406], "balanc": [31, 32, 33, 34, 35, 36, 37, 38, 43, 46, 47, 50, 60, 69, 70, 71, 72, 81, 92, 93, 99, 100, 102, 124, 125, 126, 127, 128, 129, 154, 276], "bar": 312, "base": [3, 12, 13, 16, 21, 22, 25, 26, 30, 41, 44, 46, 54, 73, 74, 75, 76, 79, 82, 83, 84, 86, 93, 99, 100, 102, 103, 110, 111, 123, 124, 125, 126, 127, 128, 129, 140, 145, 150, 154, 156, 157, 161, 163, 164, 165, 166, 179, 184, 194, 208, 209, 210, 229, 253, 259, 267, 275, 276, 289, 290, 291, 309, 310, 311, 312, 316, 320, 321, 322, 329, 338, 339, 343, 344, 345, 347, 348, 358, 368, 369, 370, 372, 383, 392, 393, 397, 409, 410, 411, 412, 413], "base_width": [103, 104, 105, 106, 107, 108, 109, 121, 122, 123, 140], "basic": [15, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 150, 152, 155, 179, 180, 181, 182, 186, 187, 208, 209, 210, 218, 222, 223, 224, 225, 226, 227, 228, 233, 234, 237, 238, 253, 260, 289, 290, 291, 299, 354, 386, 407, 408, 409, 410, 411, 412, 413, 414], "basicblock": [112, 116, 119], "batch": [1, 2, 3, 14, 16, 22, 25, 27, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 76, 77, 83, 84, 130, 136, 137, 138, 139, 144, 179, 180, 181, 182, 184, 189, 190, 191, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 220, 221, 222, 223, 224, 252, 253, 255, 256, 257, 270, 272, 274, 275, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 297, 301, 302, 303, 304, 305, 319, 342, 407, 408, 409, 410, 412, 414], "batch_norm": [193, 205, 280, 281, 282], "batch_norm1": 167, "batch_norm2": 167, "batch_siz": [1, 2, 3, 150, 229], "batchnorm": [222, 223, 224], "batchnorm1d": [222, 269, 288], "batchnorm1dmodel": 280, "batchnorm2d": [167, 223, 269, 288], "batchnorm2dmodel": 281, "batchnorm3d": [224, 269, 288], "batchnorm3dmodel": 282, "bceloss": [269, 279], "becaus": [2, 332], "becom": [23, 161, 313, 321], "been": 249, "befor": [10, 14, 22, 30, 130, 155, 162, 179, 253, 301, 303, 305, 312, 318, 326, 334, 393, 408, 416], "begin": [1, 23, 169, 172, 173, 174, 187, 239, 241, 242, 243, 244, 246, 261, 276, 277, 278, 292, 293, 294, 295, 296, 297, 319, 321, 325, 336, 343, 344, 346, 360, 364, 370, 372, 374, 393, 401, 402], "behav": [261, 276, 382], "behavior": [10, 154, 164, 167, 179, 253, 324, 336, 342, 352, 416], "being": [166, 221, 259, 262, 263, 264, 265, 319, 324, 326, 387, 388, 390, 404], "belong": 0, "below": [25, 31, 32, 33, 34, 35, 36, 37, 38, 74, 75, 76, 83, 84, 86, 87, 88, 89, 342, 350, 353, 402], "benchmark": [5, 6, 7, 8, 101], "benefici": 167, "benefit": [102, 169, 309, 318, 328], "bernoulli": [259, 262, 263, 264, 265, 330], "best": [101, 233, 234, 237, 238], "beta": [204, 280, 281, 282, 283, 284, 285, 286, 287, 315, 316, 317, 318, 319], "beta1": [315, 316, 317, 318, 319], "beta2": [315, 316, 317, 318, 319], "beta_1": [315, 316, 317, 318, 319], "beta_2": [315, 316, 317, 318, 319], "beta_c": [204, 283], "better": [21, 100, 152, 154, 170, 233, 234, 237, 238, 249, 260, 284, 285, 286, 309, 316, 318, 320, 408], "between": [43, 46, 50, 69, 70, 71, 72, 81, 93, 99, 100, 102, 124, 125, 126, 127, 128, 129, 154, 161, 180, 181, 182, 184, 194, 199, 222, 223, 224, 225, 226, 227, 229, 245, 255, 256, 257, 259, 262, 263, 264, 265, 270, 274, 275, 276, 277, 278, 312, 320, 321, 322, 336, 338, 339, 342, 345, 348, 349, 354, 384, 410, 411, 413, 414], "beyond": [10, 15, 164], "bia": [30, 180, 181, 182, 194, 196, 203, 206, 207, 222, 223, 224, 225, 226, 227, 252, 255, 256, 257, 270, 272, 280, 281, 282, 284, 285, 286, 287, 301, 303, 305, 315, 316, 317, 318, 319], "bias": [255, 256, 257, 272, 287, 309], "bias1": 165, "bias2": 165, "big": [154, 225, 226, 227], "bilinear": [193, 195, 220, 269, 273, 307], "bilinearmodel": 270, "binari": [175, 197, 247, 259, 262, 263, 264, 265, 274], "binary_cross_entropi": [193, 200], "blend": 102, "block": [30, 31, 32, 33, 34, 35, 36, 37, 38, 54, 55, 56, 57, 58, 59, 60, 77, 82, 91, 92, 93, 95, 103, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 154, 161, 184, 186, 187, 222, 223, 224, 229, 255, 256, 257, 260, 326], "block1": [155, 309], "block2": [155, 309], "block_arg": [112, 130], "block_cfg": 60, "block_config": 54, "block_siz": [186, 260], "block_typ": 30, "blue": 410, "bmatrix": 346, "bn": [222, 223, 224], "bn_affin": [222, 223, 224], "bool": [1, 5, 6, 7, 8, 23, 27, 59, 73, 74, 75, 103, 112, 155, 161, 162, 179, 185, 187, 188, 189, 190, 191, 203, 206, 220, 222, 223, 224, 225, 226, 227, 252, 253, 255, 256, 257, 261, 270, 272, 280, 281, 282, 284, 285, 286, 287, 301, 302, 303, 304, 305, 307, 315, 316, 320, 324, 329, 331, 332, 333, 335, 337, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 370, 371, 372, 379, 384, 385, 406], "boost": 98, "both": [30, 93, 180, 196, 209, 211, 215, 222, 240, 249, 255, 256, 290, 292, 293, 295, 296, 305, 307, 340, 341, 342, 346, 350, 392, 397, 414], "bottleneck": [54, 91, 92, 95, 112, 113, 114, 115, 117, 118, 120, 121, 122, 123, 154, 228], "bottleneck_cfg": 92, "bottom": 220, "bound": [234, 236, 238, 321, 335], "box": 4, "branch": [73, 74, 75, 154, 229], "break": [10, 309], "brief": 416, "bright": 416, "bring": [10, 267], "broadcast": [14, 264, 265, 371, 379, 384, 396, 403], "broadcast_to": 391, "budget": 50, "buffer": [312, 318, 320, 322], "build": [15, 40, 60, 84, 92, 93, 112, 113, 114, 115, 116, 117, 118, 119, 120, 123, 140, 141, 142, 143, 154, 156, 161, 164, 167, 309, 416], "built": [3, 15, 113, 117, 118, 167, 309], "burg": 8, "c": [5, 6, 8, 12, 30, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 154, 184, 186, 189, 190, 191, 198, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 220, 221, 228, 264, 265, 267, 275, 278, 280, 281, 282, 283, 284, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 325, 390, 404, 408], "c_": [255, 256, 257], "c_in": [180, 181, 182, 222, 223, 224], "c_out": [180, 181, 182], "calcul": [0, 1, 15, 16, 162, 307, 313, 314, 317, 318, 319, 326, 332, 337], "calculu": [17, 24], "call": [1, 161, 324, 327, 338, 339, 342, 343, 344, 345, 347, 348], "callabl": [301, 303, 305, 310, 327, 405], "can": [0, 2, 3, 4, 12, 13, 15, 17, 19, 21, 22, 24, 25, 27, 59, 92, 98, 99, 101, 102, 112, 121, 122, 136, 137, 138, 139, 150, 151, 154, 155, 160, 162, 163, 164, 165, 166, 167, 172, 180, 181, 182, 187, 221, 229, 240, 243, 245, 250, 255, 256, 257, 284, 285, 286, 293, 294, 295, 296, 297, 299, 302, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 324, 325, 326, 328, 335, 336, 337, 342, 351, 352, 353, 355, 357, 358, 371, 379, 384, 386, 390, 392, 393, 395, 396, 400, 403, 404, 405, 406, 409, 411, 412, 413, 416], "cannot": [18, 19, 21, 22, 25, 26, 27, 329, 387], "cap": 245, "capabl": [10, 15, 30, 52, 110, 111, 349, 350, 353, 355, 356, 357, 358], "capac": [41, 42, 43, 49, 53, 90, 98, 121, 122, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144, 154, 158], "captur": [30, 140, 154, 184, 255, 256, 257, 270], "cardin": [103, 104, 105, 106, 107, 108, 109, 110, 111, 123, 124, 125, 126, 127, 128, 129, 140, 154], "care": 326, "cartesian": 392, "case": [3, 23, 86, 92, 94, 169, 172, 173, 174, 187, 239, 241, 242, 243, 244, 246, 261, 276, 277, 278, 292, 293, 294, 295, 296, 297, 309, 314, 319, 321, 325, 343, 344, 360, 364, 370, 372, 374, 393, 401, 402, 416], "categor": [218, 299], "categori": [7, 113, 114, 115, 116, 117, 118, 119, 120, 299], "caus": [3, 24, 312, 320, 322], "causal": [179, 253], "cautiou": [0, 10], "cdot": [17, 18, 21, 22, 23, 26, 169, 170, 172, 174, 175, 179, 180, 181, 182, 194, 196, 204, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 228, 237, 238, 240, 241, 242, 247, 249, 253, 259, 270, 272, 274, 275, 276, 278, 280, 281, 282, 283, 284, 285, 286, 287, 299, 313, 314, 315, 316, 317, 318, 319, 321, 340, 341, 342, 345, 347], "center": [221, 250, 320, 407, 416], "centercrop": [415, 416], "central": 328, "certain": [18, 170, 179, 194, 249, 253, 270, 305, 315, 316, 324, 370, 372], "cfg": [93, 96, 97], "chain": [21, 22, 167, 405, 416], "challeng": [7, 154], "cham": 154, "chanc": [410, 411, 413], "chang": [10, 199, 276, 321, 325, 326, 327, 394, 396, 403, 410, 416], "channel": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 54, 59, 86, 87, 88, 89, 90, 92, 94, 96, 97, 103, 110, 111, 112, 123, 124, 125, 126, 127, 128, 129, 134, 136, 137, 138, 139, 144, 145, 150, 154, 180, 181, 182, 184, 189, 190, 191, 203, 204, 206, 208, 209, 210, 211, 212, 213, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 255, 256, 257, 264, 265, 280, 281, 282, 283, 284, 285, 286, 289, 292, 293, 294, 295, 296, 297, 408, 410, 414], "character": [121, 122], "check": [324, 407, 409], "checkpoint": 311, "chen": 154, "choic": [100, 102, 392], "choleski": 20, "chollet": 154, "choos": 154, "chosen": [259, 260], "christian": 154, "christoph": 8, "chu": 154, "chunk": 391, "cifar": [5, 6], "cifar10": 9, "cifar100": 9, "cifar100_train": 6, "cifar10_train": 5, "clariti": [12, 13, 14, 328], "class": [3, 4, 15, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 155, 157, 158, 176, 187, 198, 202, 309, 311, 327, 350, 353, 354, 385, 416], "classic": 89, "classif": [4, 5, 6, 7, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 175, 176, 197, 198, 202, 247, 248, 274, 275, 278], "classifi": [28, 73, 74, 75, 86, 87, 88, 89, 112, 123, 140, 145, 150, 152], "cleaner": [1, 326, 342], "clear": [162, 337, 351, 352, 354], "clearli": 328, "clf_in_featur": 86, "clf_layer": 86, "clip": [221, 241, 245, 321, 359], "clockwis": 221, "close": [21, 24, 246, 274, 320], "closer": 239, "closur": [310, 311], "cloth": 7, "cnn": [30, 154], "co": [154, 359, 375], "coatnet": [31, 32, 33, 34, 35, 36, 37, 38, 85, 154], "coatnet_0": 154, "coatnet_1": 154, "coatnet_2": 154, "coatnet_3": 154, "coatnet_4": 154, "coatnet_5": 154, "coatnet_6": 154, "coatnet_7": 154, "code": [10, 22, 163, 165, 167, 324, 326, 328, 336], "coeffici": [26, 59, 220, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322], "col": 184, "collaps": 10, "collect": [4, 16, 154, 163, 164, 166, 167, 311], "color": [410, 416], "colorjitt": 416, "column": [18, 19, 21, 25, 26, 27, 155, 184, 353, 390, 392], "com": [7, 8], "combin": [1, 3, 12, 30, 76, 82, 83, 102, 144, 154, 164, 167, 169, 170, 222, 223, 224, 228, 229, 240, 260, 267, 275, 309, 318, 319, 371, 379, 384, 388, 416], "combined_dataset": [0, 1], "common": [184, 221, 311, 416], "commonli": [15, 90, 91, 92, 94, 95, 96, 97, 100, 102, 170, 175, 176, 177, 180, 182, 187, 194, 201, 203, 206, 218, 221, 228, 237, 238, 241, 242, 245, 248, 253, 257, 274, 277, 278, 292, 293, 294, 295, 296, 297, 299, 301, 325, 328, 355, 398, 406, 407, 408, 409, 411, 412, 413, 416], "compact": [44, 45, 47, 52, 81, 100], "compar": [30, 43, 44, 121, 122, 152, 154, 336, 399], "compat": [4, 10, 16, 140, 267, 271, 287, 309, 325, 336, 354, 386, 406, 416], "competit": [45, 51, 52], "complet": [156, 301, 302, 304], "complex": [2, 3, 10, 15, 19, 30, 42, 48, 53, 84, 101, 112, 115, 118, 119, 132, 134, 155, 158, 163, 164, 167, 173, 244, 295, 297, 309, 311, 416], "compon": [24, 73, 74, 75, 76, 82, 83, 84, 156, 161, 164, 311, 337, 416], "compos": [5, 6, 7, 8, 150, 255, 256, 257, 292, 293, 294, 295, 296, 297, 309, 416], "compound": 60, "comprehens": 3, "compris": [121, 122], "compromis": [99, 102], "comput": [10, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 43, 44, 45, 47, 48, 50, 51, 78, 81, 90, 92, 93, 96, 97, 98, 99, 100, 101, 102, 110, 111, 112, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 144, 154, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 184, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 208, 209, 210, 220, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 255, 256, 257, 259, 260, 262, 263, 264, 265, 270, 272, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 292, 293, 294, 295, 296, 297, 301, 302, 303, 304, 305, 309, 310, 311, 312, 320, 324, 325, 326, 328, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 392, 393, 395, 400, 406, 416], "computation": [3, 12, 24, 113, 241, 242, 267], "compute_grad": 387, "compute_loss": [311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322], "concat": 252, "concaten": [0, 180, 181, 182, 252, 390, 391, 399, 404], "concept": [15, 24, 91, 154], "concis": [10, 12, 14], "condit": [17, 18, 21], "confer": 154, "config": 145, "configur": [29, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 98, 99, 100, 101, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 151, 153, 158, 166, 222, 223, 224, 253], "conjunct": [184, 278], "connect": [28, 39, 54, 55, 56, 57, 58, 59, 60, 76, 82, 83, 84, 86, 87, 88, 89, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 145, 150, 152, 154, 196, 228, 229, 255, 256, 257, 272, 303, 305], "consecut": 145, "consid": [3, 21, 24, 54, 98, 99, 100, 102, 167, 233, 234, 237, 238, 309, 321, 324, 351, 352, 401, 402, 416], "consider": 24, "consist": [2, 4, 7, 13, 28, 87, 88, 89, 112, 160, 208, 209, 210, 229, 252, 289, 290, 291, 301, 303, 305, 328, 334, 336, 393, 407, 414, 416], "consistent_tensor": 336, "consol": 155, "constant": [197, 198, 203, 204, 206, 207, 232, 246, 274, 275, 280, 281, 282, 283, 284, 285, 286, 287, 301, 303, 305, 313, 314, 315, 316, 317, 318, 319, 320, 328, 393], "constant_pad": 393, "constrain": [45, 47, 50, 100], "constraint": [1, 12, 30, 90, 92, 99, 229, 267], "construct": [15, 55, 56, 57, 58, 77, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 141, 142, 143, 146, 147, 148, 149, 156, 164, 309, 350, 395, 400, 401, 402], "constructor": [31, 32, 33, 34, 35, 36, 37, 38, 55, 56, 57, 58, 69, 70, 71, 72, 94, 95, 96, 97, 104, 105, 106, 107, 108, 109, 110, 111, 121, 122, 136, 137, 138, 139, 144, 146, 147, 148, 149], "consumpt": 102, "contain": [1, 5, 6, 7, 8, 18, 19, 24, 25, 26, 27, 82, 86, 112, 123, 124, 125, 126, 127, 128, 129, 130, 140, 145, 155, 161, 163, 164, 165, 166, 167, 176, 179, 184, 194, 196, 197, 198, 202, 218, 220, 274, 275, 278, 310, 338, 339, 340, 341, 343, 344, 345, 346, 348, 349, 352, 354, 360, 361, 362, 363, 365, 366, 367, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 387, 389, 392, 397], "content": 221, "context": [154, 324, 326], "contextmanag": 326, "contigu": [186, 260, 394], "continu": [243, 333], "contract": 12, "contrast": [156, 284, 285, 286, 416], "contribut": [186, 220, 259, 262, 263, 264, 265, 292, 295, 296, 297, 312, 318, 382], "control": [10, 14, 30, 39, 123, 229, 239, 276, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 336, 406, 416], "conv": [77, 82, 130, 154, 222, 223, 224, 281, 282], "conv1": [87, 88, 89, 167, 255, 256, 257, 292, 293, 294, 295, 296, 297], "conv1d": [183, 193, 222, 225, 258, 269, 292, 295], "conv1dmodel": 255, "conv2": [87, 88, 89, 167, 255, 256, 257], "conv2d": [164, 167, 183, 193, 223, 226, 258, 267, 269, 281, 293, 296, 309], "conv2dmodel": 256, "conv3d": [183, 193, 224, 227, 258, 269, 282, 294, 297], "conv3dmodel": 257, "conv_bia": [222, 223, 224], "conv_config": 145, "conv_lay": [86, 164], "convblock": 309, "convbnrelu1d": 230, "convbnrelu2d": 230, "convbnrelu3d": 230, "conveni": [4, 29, 153], "convent": 342, "converg": [24, 250, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 408], "convers": [275, 278, 410, 416], "convert": [5, 6, 7, 8, 145, 160, 162, 176, 218, 248, 337, 392, 405, 406, 410, 416], "convnetwork": 164, "convnext": [40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 85, 154], "convnext_bas": 154, "convnext_larg": 154, "convnext_smal": 154, "convnext_tini": 154, "convnext_v2": [45, 46, 47, 48, 49, 50, 51, 52], "convnext_v2_atto": 154, "convnext_v2_bas": 154, "convnext_v2_femto": 154, "convnext_v2_hug": 154, "convnext_v2_larg": 154, "convnext_v2_nano": 154, "convnext_v2_pico": 154, "convnext_v2_tini": 154, "convnext_xlarg": 154, "convolut": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 54, 59, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 77, 82, 86, 87, 88, 89, 90, 92, 96, 97, 98, 99, 100, 101, 102, 103, 110, 111, 112, 123, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 140, 144, 145, 150, 152, 153, 154, 164, 180, 181, 182, 184, 222, 223, 224, 225, 226, 227, 228, 229, 255, 256, 257, 293, 294, 296, 297, 393], "convolv": [180, 181, 182, 255, 256, 257], "coordin": 392, "copi": [10, 386], "core": [0, 1, 2, 3, 161, 309, 310, 337, 416], "corinna": 8, "corner": [220, 307, 407, 409], "correct": [163, 275, 278, 315, 316, 317, 318, 319, 401, 402, 406], "correctli": [24, 161, 163, 164, 165, 166, 167, 275, 278, 336, 386, 387], "correspond": [0, 1, 2, 5, 6, 7, 8, 19, 93, 94, 96, 97, 121, 122, 141, 142, 143, 163, 165, 167, 169, 170, 172, 173, 174, 175, 176, 177, 180, 181, 182, 184, 194, 196, 218, 220, 241, 244, 248, 270, 272, 280, 281, 282, 284, 285, 286, 293, 294, 299, 312, 320, 322, 329, 340, 341, 343, 344, 347, 368, 369, 375, 377, 386, 387, 390, 393, 395, 400, 404], "cort": 8, "cosh": [359, 376, 381], "cosin": [361, 365, 366, 375], "cost": [90, 92, 93, 99, 100, 102, 123, 154, 225, 226, 227], "could": 161, "count": [93, 154, 155, 388], "counterclockwis": [221, 412], "cover": [16, 180, 181, 182], "coverag": [208, 209, 210], "creat": [2, 3, 15, 28, 29, 30, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 83, 84, 87, 88, 89, 92, 94, 95, 96, 97, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 157, 158, 160, 161, 164, 167, 229, 245, 252, 301, 302, 303, 304, 305, 309, 325, 327, 336, 349, 353, 354, 355, 356, 357, 358, 386, 392, 399, 405, 416], "creation": [69, 70, 71, 72, 164, 167, 416], "criterion": [274, 275, 276, 277, 278], "critic": [24, 100, 311, 336], "crop": [407, 409, 416], "cross": [197, 198, 274, 275, 301, 302, 303], "cross_entropi": [193, 200], "crossentropyloss": [269, 279], "crucial": 10, "cube": 359, "cumul": [170, 240], "current": [161, 312, 315, 321, 324], "custom": [4, 15, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 61, 62, 63, 64, 65, 66, 67, 68, 78, 79, 80, 81, 83, 84, 86, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 145, 151, 152, 153, 160, 163, 164, 165, 166, 167, 221, 222, 223, 224, 239, 243, 301, 309, 336, 353, 354, 397], "custom_config": 145, "custom_decod": 301, "custom_encod": 301, "custom_lenet": 86, "customiz": 416, "custommodul": 160, "customnetwork": 163, "customparametermodel": [165, 166], "cut": 101, "cvf": 154, "cvpr": 154, "d": [30, 154, 179, 182, 191, 210, 213, 217, 224, 253, 282, 286, 287, 291, 294, 297, 325, 350, 412], "d_": [182, 210, 213, 217, 252, 257, 291, 294, 297, 301, 302, 303, 304, 305], "d_1": [12, 13, 14, 267, 287], "d_2": [12, 13, 14, 267, 287], "d_h": [252, 303, 305], "d_k": 30, "d_model": [156, 157, 158, 301, 302, 303, 304, 305], "d_n": [12, 13, 14, 267, 287], "d_out": [182, 213, 217], "dai": 154, "dampen": [312, 320, 322], "data": [4, 5, 6, 7, 8, 10, 15, 22, 154, 160, 162, 166, 177, 180, 182, 184, 190, 191, 196, 218, 221, 222, 223, 224, 229, 244, 250, 255, 256, 257, 272, 286, 292, 294, 297, 304, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 328, 336, 337, 338, 339, 345, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 385, 386, 393, 394, 395, 396, 397, 398, 400, 405, 406, 409, 410, 411, 412, 413, 416], "databas": 8, "dataload": [2, 3], "dataset": [3, 5, 6, 7, 8, 42, 69, 70, 71, 72, 87, 88, 89, 90, 93, 98, 112, 113, 114, 115, 116, 117, 118, 119, 120, 221, 314, 326, 405, 407, 416], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 346, "debug": [155, 167, 324, 334, 416], "decai": [260, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322], "declar": [12, 13, 14, 267], "decod": [156, 301, 302, 303], "decoder_lay": [302, 303], "decoderlay": 302, "decompos": [17, 25, 27], "decomposit": [16, 17, 21, 24, 25, 27], "decor": [124, 125, 126, 127, 128, 129, 327], "decoupl": [154, 313, 314, 316, 317, 318, 319], "decreas": [315, 316, 321], "deep": [1, 3, 4, 10, 13, 15, 79, 80, 82, 112, 113, 114, 115, 117, 118, 124, 125, 126, 127, 128, 129, 131, 132, 135, 154, 203, 240, 246, 267, 309, 336, 354, 397, 401, 402, 405, 406, 416], "deeper": [15, 74, 76, 84, 112, 119, 154, 246], "def": [0, 1, 2, 3, 10, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 151, 152, 153, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 259, 260, 261, 262, 263, 267, 270, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 301, 302, 303, 304, 305, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 326, 327, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406], "default": [1, 5, 6, 7, 8, 13, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 169, 172, 176, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 197, 198, 199, 201, 202, 203, 204, 206, 207, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 235, 236, 237, 238, 239, 243, 248, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 270, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 307, 310, 311, 318, 324, 329, 331, 332, 333, 335, 337, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 370, 371, 372, 379, 383, 384, 385, 387, 388, 390, 392, 393, 395, 397, 399, 401, 402, 404, 406, 410, 411, 413], "defin": [1, 3, 4, 10, 13, 15, 30, 39, 54, 60, 73, 74, 75, 76, 82, 83, 84, 86, 92, 102, 103, 112, 130, 141, 142, 143, 145, 163, 164, 165, 166, 167, 187, 240, 242, 245, 249, 274, 275, 276, 277, 278, 292, 307, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 328, 332, 333, 347, 352, 364, 383, 405, 416], "definit": [15, 17, 222, 223, 224, 416], "degre": [221, 412, 416], "delai": 312, "deliv": [100, 101], "delta": [12, 176, 199, 248, 267, 276, 313], "delta_": [12, 176, 248, 267], "demand": 101, "demonstr": [15, 16, 136, 137, 138, 139, 144, 154, 309, 328], "denomin": [203, 204, 206, 207, 222, 223, 224, 280, 281, 282, 283, 284, 285, 286, 287, 301, 303, 305, 313, 314, 315, 316, 317, 318, 319, 320, 339], "denot": [22, 110, 111, 247, 252, 255, 256, 257, 259, 262, 263, 264, 265, 383], "dens": [15, 54, 55, 56, 57, 58, 154, 187, 218, 299, 314], "dense1": 15, "dense2": 15, "densenet": [55, 56, 57, 58, 85, 154, 228], "densenet_121": 154, "densenet_169": 154, "densenet_201": 154, "densenet_264": 154, "densiti": [170, 240], "depend": [15, 22, 23, 30, 92, 154, 166, 197, 198, 199, 201, 202, 220, 255, 340, 350, 370, 372, 395, 400, 409, 410, 414], "deploy": 102, "depth": [30, 39, 40, 41, 42, 43, 44, 53, 59, 60, 77, 98, 154, 164, 182, 187, 191, 210, 213, 217, 257, 261, 282, 286, 291, 294, 297], "depth_coef": 59, "depthseparableconv1d": 230, "depthseparableconv2d": 230, "depthseparableconv3d": 230, "depthwis": [30, 39, 77, 90, 150, 154, 180, 181, 182, 225, 226, 227], "depthwise_separ": [225, 226, 227], "der": 154, "deriv": [24, 25, 176, 208, 209, 210, 240, 248, 250, 255, 256, 257, 270, 272, 327], "descend": 27, "descent": [15, 312, 322], "describ": [10, 18, 19], "descript": 416, "deseri": 160, "design": [3, 4, 13, 15, 16, 28, 29, 39, 40, 42, 44, 45, 46, 47, 48, 49, 50, 52, 69, 70, 71, 72, 74, 75, 76, 78, 81, 87, 88, 89, 92, 93, 98, 99, 100, 101, 102, 113, 114, 115, 116, 117, 118, 119, 120, 131, 134, 150, 153, 154, 162, 164, 165, 166, 167, 169, 174, 246, 259, 309, 328, 416], "desir": [10, 14, 151, 160, 208, 209, 210, 260, 289, 290, 291, 307, 383, 385], "destin": 161, "det": [16, 20], "det_a": 18, "detail": [15, 155, 311, 336, 342], "detect": 154, "determin": [0, 15, 16, 17, 18, 86, 121, 122, 208, 209, 210, 233, 234, 237, 238, 255, 256, 257, 289, 290, 291, 293, 294, 296, 297, 320, 324, 329, 331, 332, 333, 335, 351, 352, 397, 407, 409], "determinist": 221, "develop": [10, 15, 93, 309, 336, 416], "deviat": [233, 235, 237, 405, 408, 416], "devic": [91, 92, 98, 99], "diag": [24, 359], "diagon": [24, 25, 27, 350, 353, 382, 401, 402], "diagonaliz": 19, "dict": [10, 12, 13, 14, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 86, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 122, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 141, 142, 143, 144, 151, 153, 161, 163, 165, 267, 271, 310], "dictionari": [86, 93, 100, 161, 162, 163, 165, 167, 310], "differ": [0, 10, 13, 22, 73, 77, 86, 92, 93, 99, 100, 136, 137, 138, 139, 144, 164, 167, 176, 194, 220, 229, 248, 270, 277, 311, 325, 334, 336, 348, 358, 384, 398, 416], "differenti": [15, 17, 26, 218, 240, 309, 329, 331, 332, 333, 335, 337, 349, 351, 352, 355, 357], "digit": [7, 8, 89, 154], "dilat": [180, 181, 182, 222, 223, 224, 225, 226, 227, 255, 256, 257], "dilation_height": 184, "dilation_width": 184, "dim": [39, 40, 77, 179, 253, 275, 278], "dim_feedforward": [156, 301, 303, 305], "dimens": [10, 12, 13, 14, 18, 19, 21, 22, 25, 26, 27, 28, 39, 41, 42, 43, 44, 53, 112, 123, 140, 145, 152, 154, 156, 162, 176, 179, 194, 196, 203, 204, 206, 207, 209, 210, 220, 228, 229, 248, 252, 253, 255, 256, 257, 260, 267, 280, 281, 282, 284, 285, 286, 287, 290, 291, 293, 294, 295, 296, 297, 301, 303, 304, 305, 307, 325, 328, 331, 335, 337, 341, 351, 370, 371, 372, 379, 382, 383, 384, 386, 387, 388, 390, 393, 395, 398, 399, 400, 403, 404, 407, 409, 414], "dimension": [10, 22, 24, 25, 27, 77, 180, 181, 182, 211, 212, 213, 215, 216, 217, 229, 252, 255, 256, 257, 263, 264, 265, 280, 281, 282, 284, 285, 286, 292, 293, 294, 295, 296, 297, 301, 303, 305, 325, 341, 342, 346, 350, 368, 371, 379, 382, 384, 389, 394, 395, 398, 400, 401, 402], "diminish": 314, "direct": [19, 274, 275, 276, 277, 278, 312, 320, 321, 322], "directli": [69, 70, 71, 72, 154, 163, 164, 165, 166, 220, 267, 307, 313, 314, 316, 317, 318, 319, 334, 336, 385, 416], "directori": [3, 4, 5, 6, 7, 8], "disabl": [187, 260, 261, 324, 326], "discontinu": 374, "discrep": [274, 275, 278], "discret": [329, 332, 336], "disk": 3, "displai": [29, 153, 155], "distinct": [93, 156], "distribut": [170, 176, 186, 220, 233, 234, 235, 236, 237, 238, 240, 248, 255, 256, 257, 259, 260, 262, 263, 264, 265, 270, 272, 275, 278, 292, 293, 294, 329, 331, 332, 333, 335, 336, 371, 379, 382, 384, 399, 408, 410, 411, 412, 413], "div": 359, "divers": [46, 154, 221, 411, 413, 416], "diversifi": 416, "divid": [1, 24, 154, 164, 167, 176, 180, 181, 182, 248, 274, 275, 276, 277, 278, 339, 387, 397, 408], "divis": [15, 24, 180, 181, 182, 252, 259, 262, 263, 264, 265, 301, 303, 305, 313, 314, 315, 316, 317, 318, 319, 320, 339, 397], "do": [24, 26, 160, 163, 164, 165, 166, 185, 188, 189, 190, 309, 319, 324, 358, 382, 393], "document": [4, 15, 154, 311, 328, 336], "doe": [15, 22, 23, 24, 25, 27, 155, 156, 160, 163, 164, 165, 166, 167, 238, 315, 316, 321, 324, 326, 329, 331, 332, 333, 334, 335, 349, 350, 351, 352, 353, 355, 356, 357, 358, 386, 396], "doesn": 326, "doi": 154, "domain": 4, "don": 326, "dot": [12, 13, 14, 19, 22, 163, 164, 165, 166, 167, 179, 252, 253, 267, 287, 295, 296, 297, 341, 346, 359, 388, 390, 399, 404], "down": [3, 309, 414], "download": [4, 5, 6, 7, 8], "downsampl": 103, "drawback": 169, "drawn": [331, 332, 333, 335, 336, 412], "drop": [39, 40, 77, 186, 187, 259, 260, 261, 262, 263, 264, 265], "drop_block": [192, 193], "drop_path": [39, 40, 192, 193, 261], "drop_path_r": [60, 77], "drop_prob": 261, "drop_rat": 77, "dropblock": [186, 266, 269], "dropout": [28, 59, 60, 69, 70, 71, 72, 75, 77, 145, 152, 154, 156, 170, 179, 185, 189, 190, 191, 252, 253, 259, 260, 263, 264, 265, 301, 303, 305], "dropout1d": [192, 193, 266, 269], "dropout1dmodel": 263, "dropout2d": [192, 193, 266, 269], "dropout3d": [192, 193, 266, 269], "dropout_p": [179, 253], "dropout_prob": 75, "dropoutmodel": 262, "droppath": [266, 269], "dtype": [160, 162, 218, 299, 337, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 385, 406], "due": [22, 24, 54, 101, 180, 181, 244, 412], "dummi": 155, "duplic": [10, 14, 163, 165], "dure": [3, 15, 18, 19, 21, 24, 25, 27, 30, 60, 73, 74, 75, 112, 154, 160, 161, 162, 163, 164, 165, 166, 167, 176, 185, 186, 187, 188, 189, 190, 191, 203, 206, 221, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 295, 296, 297, 299, 307, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 324, 326, 337, 338, 370, 371, 372, 379, 384, 406, 409, 412, 416], "dy": [172, 243], "dynam": [0, 2, 3, 30, 140, 144, 154, 161, 164, 165, 166, 167, 208, 209, 210, 229, 260, 287, 289, 290, 291, 314, 319, 324], "dynamicnetwork": 164, "e": [0, 10, 18, 19, 21, 22, 25, 27, 59, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 76, 83, 84, 86, 87, 88, 89, 103, 145, 160, 176, 229, 247, 248, 249, 252, 259, 275, 310, 313, 320, 321, 353, 366, 368, 369, 376, 381, 382, 388, 410], "each": [1, 2, 3, 4, 19, 22, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 54, 60, 77, 86, 90, 92, 93, 94, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 145, 152, 154, 156, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 180, 181, 182, 184, 194, 196, 203, 206, 208, 209, 210, 218, 228, 229, 241, 244, 248, 252, 255, 256, 257, 259, 262, 263, 264, 265, 270, 272, 274, 275, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 309, 313, 314, 315, 316, 317, 318, 319, 320, 321, 329, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 354, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 371, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 387, 388, 390, 392, 393, 395, 397, 399, 400, 404, 405, 406, 407, 408, 409, 410, 412, 414, 416], "earli": [30, 154, 319], "earlier": 93, "eas": [4, 15], "easi": [2, 3, 4, 10, 15, 124, 125, 126, 127, 128, 129, 162, 163, 165], "easier": [3, 163, 164, 167], "easili": [4, 93, 162, 166, 416], "eccv": 154, "economi": 27, "edg": [92, 101, 393], "edu": [5, 6], "educ": [15, 154], "effect": [13, 154, 163, 164, 165, 166, 167, 176, 180, 181, 182, 184, 239, 240, 244, 247, 248, 250, 280, 281, 282, 284, 285, 286, 287, 307, 324, 325, 326, 390, 404], "effici": [1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 21, 26, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 43, 44, 45, 47, 50, 51, 52, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 80, 81, 83, 84, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144, 150, 154, 184, 225, 226, 227, 241, 242, 245, 267, 275, 309, 326], "efficientnet": [60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 85, 154], "efficientnet_b0": 154, "efficientnet_b1": 154, "efficientnet_b2": 154, "efficientnet_b3": 154, "efficientnet_b4": 154, "efficientnet_b5": 154, "efficientnet_b6": 154, "efficientnet_b7": 154, "efficientnet_v2": [69, 70, 71, 72], "efficientnet_v2_": 154, "efficientnet_v2_l": 154, "efficientnet_v2_m": 154, "efficientnet_v2_xl": 154, "efficientnetv2": 154, "eig": 20, "eigenvalu": [19, 25], "eigenvector": 19, "eigval": 19, "eigvec": 19, "einop": 267, "einstein": [10, 12, 13, 14, 267], "either": [196, 307, 328, 329, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 385, 392], "element": [0, 10, 12, 14, 24, 25, 75, 154, 162, 166, 169, 170, 172, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 218, 222, 223, 224, 225, 226, 227, 228, 241, 242, 244, 248, 249, 255, 256, 257, 259, 261, 262, 263, 264, 265, 267, 274, 275, 276, 277, 278, 287, 292, 293, 294, 295, 296, 297, 325, 329, 337, 338, 339, 342, 343, 344, 345, 346, 347, 348, 349, 353, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 384, 389, 392, 393, 395, 396, 397, 398, 400, 401, 402], "elementwise_affin": 287, "elimin": [12, 14], "elsewher": [295, 296, 297, 353], "elu": [171, 193, 251, 269], "elumodel": 239, "embed": [90, 91, 92, 93, 95, 96, 97, 100, 179, 193, 219, 252, 253, 269, 300, 301, 303, 304, 305], "embed_dim": [252, 301, 302, 303, 304, 305], "embedding_dim": [218, 299], "embedding_lay": 299, "embedding_matrix": 218, "emphas": [93, 100], "emploi": [30, 60, 101], "empti": [161, 167, 359, 387], "empty_lik": 359, "enabl": [0, 1, 2, 3, 10, 12, 13, 14, 15, 22, 27, 59, 83, 103, 140, 141, 142, 143, 154, 161, 162, 163, 164, 165, 166, 179, 187, 244, 252, 253, 255, 256, 257, 270, 272, 301, 303, 305, 309, 311, 324, 326, 329, 331, 332, 333, 335, 337, 405], "encapsul": [253, 309, 337], "encod": [30, 154, 156, 275, 278, 301, 302, 303, 304, 305], "encoder_lay": [304, 305], "encoderlay": 304, "encompass": 59, "encourag": [186, 260, 262, 263, 264, 265, 274, 275, 278, 315], "end": [23, 169, 172, 173, 174, 187, 239, 241, 242, 243, 244, 246, 261, 276, 277, 278, 292, 293, 294, 295, 296, 297, 319, 321, 343, 344, 346, 349, 354, 360, 364, 370, 372, 374, 388, 393, 401, 402, 416], "enforc": [12, 161, 163, 165, 267, 302, 303, 304, 305], "engin": 24, "enhanc": [30, 40, 41, 75, 76, 77, 83, 84, 88, 91, 101, 102, 110, 111, 121, 122, 136, 137, 138, 139, 144, 152, 153, 154, 163, 165, 229, 245, 416], "ensur": [3, 5, 6, 7, 8, 10, 12, 13, 14, 24, 25, 26, 60, 69, 70, 71, 72, 160, 161, 162, 163, 164, 165, 166, 167, 176, 179, 208, 209, 210, 218, 222, 223, 224, 243, 248, 253, 259, 260, 261, 262, 263, 264, 265, 267, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 297, 299, 309, 310, 312, 313, 315, 316, 318, 319, 320, 321, 322, 324, 325, 326, 328, 329, 331, 332, 333, 334, 335, 336, 347, 354, 371, 379, 384, 386, 387, 393, 401, 402, 406, 407, 408, 409, 410, 414, 416], "enter": 326, "entir": [3, 187, 189, 190, 191, 261, 264, 265, 336], "entri": [60, 86, 96, 97, 398], "entropi": [197, 198, 274, 275], "environ": [15, 45, 47, 96, 97, 100], "ep": [186, 197, 198, 203, 204, 206, 207, 222, 223, 224, 260, 274, 275, 280, 281, 282, 283, 284, 285, 286, 287, 313, 314, 315, 316, 317, 318, 319, 320], "epoch": [1, 3], "epsilon": [30, 204, 274, 275, 280, 281, 282, 283, 284, 285, 286, 287, 313, 314, 315, 316, 317, 318, 319, 320], "equal": [22, 220, 292, 293, 294, 354, 387, 397, 407, 409], "equat": [19, 24, 26], "equival": [342, 382, 394], "error": [0, 3, 10, 12, 14, 19, 21, 60, 161, 164, 165, 166, 167, 170, 199, 201, 240, 261, 267, 274, 275, 276, 277, 309, 310, 326, 328, 354, 386], "especi": [3, 163, 165, 166, 247, 325, 326, 328, 334, 405, 406, 410, 416], "essenti": [1, 3, 15, 16, 22, 24, 82, 181, 184, 309, 334, 336, 370, 405, 406, 410, 416], "estim": [277, 315, 316, 317, 318, 319, 320], "et": [74, 154, 301], "eta": 321, "eta_": 321, "etc": [10, 54, 60, 93, 103, 274, 307, 406], "euclidean": 23, "european": 154, "eval": 261, "evalu": [161, 203, 206, 259, 260, 261, 262, 263, 264, 265, 280, 281, 282, 284, 285, 286, 416], "even": [313, 326, 349, 350, 353, 355, 356, 357, 358], "evenli": [208, 209, 210, 289, 290, 291, 349, 354, 387, 397], "everi": [1, 416], "everywher": 374, "exact": [161, 164, 383, 410, 412], "exactli": 167, "exampl": [4, 342], "excel": [76, 100], "except": [0, 374, 388, 390, 404], "excit": [59, 92, 96, 97, 130, 133, 136, 137, 138, 139, 154, 228], "exclud": [401, 402], "exclus": [332, 335, 349], "exdb": 8, "execut": [164, 326], "exist": [14, 26, 163, 165, 167, 327, 388], "exit": 326, "exp": [169, 174, 175, 177, 239, 246, 359], "expand": [4, 10, 14, 49, 154, 184, 386, 395, 400], "expans": [10, 12, 14, 53, 77, 93, 96, 97], "expansion_factor": 92, "expect": [17, 164, 167, 187, 252, 259, 261, 262, 263, 264, 265, 287, 301, 302, 303, 304, 305, 309, 328], "expens": 3, "experi": [15, 93, 334, 336, 416], "experiment": 336, "explan": [22, 24, 28, 39, 145, 152, 208, 209, 210, 289, 290, 291, 312], "explicit": [12, 13, 14, 167, 267], "explicitli": [14, 154, 163, 165], "explod": [246, 280, 281, 282], "explor": [99, 309, 336], "expon": [22, 347], "exponenti": [169, 174, 176, 239, 246, 248, 259, 315, 316, 317, 318, 319, 368], "express": [10, 12, 14, 42], "extend": [4, 103, 123, 140, 154], "extens": [154, 311], "extern": [4, 15], "extra": [53, 72, 101, 386], "extract": [30, 73, 79, 82, 112, 123, 140, 150, 154, 184, 257, 292, 294, 327, 350, 370, 372, 401, 402, 407, 409], "extractor": [86, 87, 88, 89, 150], "extrem": [24, 113, 154], "ey": 359, "f": [1, 4, 5, 6, 7, 8, 15, 154, 165, 166, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 245, 248, 301, 303, 305], "f_1": 228, "f_2": 228, "facilit": [10, 13, 73, 163, 167, 176, 248, 255, 256, 257, 309, 311, 408, 416], "factor": [59, 75, 93, 169, 179, 180, 181, 182, 184, 228, 237, 238, 252, 253, 307, 312, 319, 320, 321, 322, 328], "factori": 151, "failur": [163, 164, 165, 166, 309], "fals": [1, 5, 6, 7, 8, 23, 27, 59, 96, 97, 112, 155, 160, 161, 162, 179, 185, 187, 188, 189, 190, 191, 203, 206, 220, 231, 233, 234, 235, 236, 237, 238, 252, 253, 255, 256, 257, 261, 270, 272, 301, 302, 303, 304, 305, 307, 315, 316, 320, 324, 329, 331, 332, 333, 335, 337, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 370, 371, 372, 379, 384, 385, 406], "famili": [53, 93, 154, 327], "fan": [233, 234, 237, 238], "fan_in": [233, 234], "fan_out": [233, 234], "fashion": 7, "fashion_train": 7, "fashionmnist": 9, "fast": 319, "faster": [154, 314, 318, 326], "fc": [82, 112, 123, 130, 140, 164, 228, 256, 257, 292, 293, 294, 295, 296, 297], "fc1": [88, 89, 155, 163, 167, 240, 241, 242, 244, 245, 246, 247, 249, 250, 272], "fc2": [88, 89, 155, 163, 167, 240, 241, 242, 244, 246, 247, 249, 250, 272], "fc3": 89, "featur": [3, 28, 30, 39, 42, 43, 53, 54, 73, 76, 77, 79, 82, 86, 87, 88, 89, 102, 110, 111, 112, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 140, 141, 142, 143, 145, 150, 152, 153, 154, 186, 194, 196, 203, 204, 222, 223, 224, 228, 229, 257, 260, 262, 263, 264, 265, 270, 272, 280, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 295, 296, 297, 299, 309, 314], "feature_extractor": 86, "fed": [3, 416], "feed": [3, 337, 416], "feedforward": [155, 156, 301, 303, 305], "femto": [47, 154], "fergu": [152, 154], "fetch": 0, "few": 155, "fewer": [1, 104, 105, 106, 107, 108, 109, 154, 386], "field": [5, 6, 8, 140, 144, 154, 229], "file": [3, 327], "fill": [231, 235, 236, 331, 332, 333, 335, 355, 356, 357, 358], "filter": [60, 93, 152, 154, 180, 181, 182, 184, 222, 223, 224, 256, 257], "filter_height": 184, "filter_s": 184, "filter_width": 184, "final": [39, 54, 55, 56, 57, 58, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 92, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 156, 163, 164, 165, 166, 167, 179, 229, 252, 301, 302, 304, 405, 416], "find": [26, 370, 372], "fine": [99, 102, 228, 416], "finish": 326, "first": [5, 6, 7, 8, 19, 86, 152, 155, 164, 165, 194, 228, 270, 315, 316, 317, 318, 319, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 387, 392, 404, 405, 406, 416], "fit": [14, 309], "fix": [164, 393], "flatten": [12, 82, 86, 167, 184, 346, 391, 394, 395], "flexibl": [1, 3, 4, 10, 12, 14, 15, 40, 73, 82, 83, 84, 86, 93, 94, 103, 112, 136, 137, 138, 139, 144, 145, 150, 154, 163, 164, 165, 166, 167, 267, 307, 309, 311, 328, 355, 356, 406, 416], "flexibli": 13, "flip": [411, 413, 416], "float": [2, 5, 6, 7, 8, 39, 40, 59, 60, 75, 77, 90, 94, 156, 160, 162, 169, 172, 179, 185, 186, 187, 188, 189, 190, 191, 197, 198, 199, 203, 204, 206, 207, 218, 221, 222, 223, 224, 231, 235, 236, 237, 238, 239, 243, 252, 253, 259, 260, 261, 262, 263, 264, 265, 274, 275, 276, 280, 281, 282, 283, 284, 285, 286, 287, 299, 301, 303, 305, 307, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 328, 329, 335, 337, 349, 352, 354, 364, 385, 408, 410, 411, 412, 413], "float32": [160, 162, 337, 349, 350, 353, 354, 355, 357, 385, 406], "float64": [358, 385, 406], "flow": [30, 76, 82, 130, 154, 167, 186, 238, 240, 247, 250, 255, 256, 257, 270, 272, 324], "fly": [2, 3], "fname": 3, "focu": [15, 30], "focus": 15, "follow": [0, 12, 14, 15, 16, 19, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 55, 56, 57, 58, 59, 96, 97, 136, 137, 138, 139, 144, 145, 150, 152, 155, 156, 169, 170, 172, 173, 174, 175, 176, 177, 179, 194, 196, 220, 222, 223, 224, 225, 226, 227, 228, 229, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 255, 256, 257, 259, 261, 262, 263, 264, 265, 267, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 301, 302, 303, 304, 305, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 327, 328, 336, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 370, 372, 386, 392, 396, 407, 408, 409, 410, 411, 412, 413, 416], "foral": [302, 304], "forc": 186, "form": [25, 229, 302, 304, 346, 392, 395, 400, 416], "format": [2, 3, 5, 6, 7, 8, 155, 275, 278, 406], "formul": 170, "formula": [19, 27, 176, 208, 209, 210, 248, 249, 276, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 342, 384, 410], "forward": [15, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 152, 155, 160, 161, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322], "found": 15, "foundat": [82, 93, 130, 161, 309, 311, 337], "four": [55, 56, 57, 58, 104, 105, 106, 107, 108, 109, 393], "frac": [13, 17, 18, 19, 21, 22, 23, 24, 26, 27, 30, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 187, 194, 196, 204, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 255, 256, 257, 259, 261, 262, 263, 264, 265, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 295, 296, 297, 299, 303, 305, 313, 314, 315, 316, 317, 318, 319, 320, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 388, 390, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 408], "frame": 191, "framework": [4, 10, 15, 154, 275, 278, 280, 281, 282, 284, 285, 286, 310, 311, 416], "frequent": [275, 278], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 14, 15, 22, 24, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 77, 78, 79, 80, 81, 82, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 155, 160, 161, 162, 163, 164, 165, 166, 167, 184, 186, 194, 203, 206, 218, 220, 222, 223, 224, 228, 229, 231, 233, 234, 235, 236, 237, 238, 245, 252, 255, 256, 257, 259, 260, 262, 263, 264, 265, 270, 272, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 292, 293, 294, 302, 304, 305, 309, 310, 312, 313, 314, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 328, 329, 331, 332, 333, 335, 336, 337, 342, 343, 344, 348, 350, 370, 371, 372, 379, 384, 388, 390, 392, 395, 397, 398, 399, 400, 404, 407, 408, 409, 410, 411, 412, 413, 416], "full": [27, 94, 96, 97, 156], "full_matric": 27, "fulli": [4, 16, 28, 39, 54, 55, 56, 57, 58, 59, 60, 82, 86, 87, 88, 89, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 145, 150, 152, 154, 196, 228, 229, 272, 336], "func": 327, "function": [3, 4, 5, 6, 7, 8, 10, 15, 16, 77, 161, 163, 164, 165, 166, 167, 222, 223, 224, 228, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 259, 260, 262, 263, 264, 265, 267, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 289, 290, 291, 301, 303, 305, 309, 311, 328, 336, 405, 416], "fundament": [15, 179, 196, 272, 406], "further": [13, 15, 41, 42, 43, 44, 53, 60, 61, 62, 63, 64, 65, 66, 67, 68, 92, 94, 95, 96, 97, 99, 101, 110, 111, 336, 371, 379, 384], "fuse": [30, 140], "fusion": [141, 142, 143], "futur": [179, 253, 271, 304, 305], "g": [0, 10, 18, 19, 22, 25, 27, 59, 61, 62, 63, 64, 65, 66, 67, 68, 74, 75, 76, 83, 84, 86, 87, 88, 89, 103, 145, 154, 228, 229, 259, 310, 313, 320, 388, 410], "g_": 314, "g_t": 320, "gain": [237, 238], "gamma": [204, 280, 281, 282, 283, 284, 285, 286, 287], "gamma_c": [204, 283], "gap": [112, 123, 140, 228], "gaussian": [170, 240], "gelu": [171, 193, 251, 269], "gelunetwork": 240, "gener": [24, 41, 46, 50, 155, 156, 187, 221, 259, 260, 262, 263, 264, 265, 285, 301, 316, 318, 319, 326, 329, 331, 332, 333, 334, 335, 336, 341, 349, 351, 352, 354, 392, 409, 410, 411, 413, 416], "geoffrei": [5, 6], "geq": 401, "get": [5, 6, 7, 8], "github": 7, "give": [15, 312, 320], "given": [12, 13, 14, 18, 19, 22, 24, 25, 27, 157, 184, 218, 252, 253, 267, 274, 275, 278, 310, 324, 329, 356, 358, 397, 405, 410, 411, 413, 416], "global": [0, 59, 112, 123, 130, 140, 154, 204, 228, 283, 324, 326, 334, 336], "global_response_norm": [193, 205], "globalresponsenorm": [269, 288], "go": [10, 74, 154], "goal": [274, 275, 278], "googlenet": [74, 154], "gpu": 154, "grad": [160, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 184, 187, 194, 196, 220, 225, 226, 227, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 255, 256, 257, 259, 261, 262, 263, 264, 265, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 292, 293, 294, 295, 296, 297, 310, 311, 329, 331, 332, 333, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 351, 352, 354, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 390, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 411, 413, 414], "grad_output": 22, "gradient": [10, 15, 16, 30, 76, 82, 154, 160, 162, 260, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 326, 329, 331, 332, 333, 335, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 385, 406], "grain": 228, "graph": [15, 238, 337, 349, 350, 353, 355, 356, 357, 358, 406], "grayscal": [7, 8, 86, 87, 88, 89, 410, 416], "greater": [49, 364, 387], "green": 410, "grid": 392, "grn": 283, "groundbreak": 154, "group": [93, 103, 110, 111, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 140, 144, 154, 164, 180, 181, 182, 222, 223, 224, 229, 255, 256, 257, 310, 311], "group1": 164, "group2": 164, "groupedconvblock": 123, "growth_rat": [54, 55, 56, 57, 58], "guarante": 334, "h": [10, 12, 13, 14, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 154, 179, 181, 182, 184, 186, 190, 191, 204, 209, 210, 212, 213, 216, 217, 220, 221, 223, 224, 228, 252, 253, 267, 281, 282, 283, 285, 286, 290, 291, 294, 297, 301, 303, 305, 407, 409], "h_": [181, 182, 209, 210, 212, 213, 216, 217, 220, 256, 257, 290, 291, 293, 294, 296, 297], "h_out": [181, 182, 212, 213, 216, 217], "h_stack": 390, "ha": [0, 19, 41, 155, 167, 180, 181, 182, 222, 223, 224, 245, 249, 274, 275, 280, 281, 282, 284, 285, 286, 287, 307, 310, 311, 342, 382, 386, 388, 390, 399, 404, 410], "half": 377, "han": 7, "hand": 26, "handl": [0, 3, 10, 15, 24, 154, 161, 163, 164, 165, 166, 167, 218, 275, 278, 309, 311, 326], "handwritten": [7, 8, 89], "hang": 154, "hard": [96, 97, 242], "hard_sigmoid": 241, "hardsigmoid": [242, 251, 269], "hardswish": [251, 269], "hardwar": 15, "hat": [30, 315, 316, 317, 318, 319], "have": [0, 1, 18, 19, 21, 24, 25, 27, 162, 164, 166, 167, 181, 182, 186, 218, 238, 299, 309, 353, 355, 356, 357, 358, 370, 372, 388, 390, 392, 398, 399, 404, 408, 414], "he": 154, "head": [30, 39, 77, 92, 150, 156, 179, 252, 253, 301, 303, 305], "head_fn": 77, "height": [30, 150, 181, 182, 184, 190, 191, 204, 209, 210, 212, 213, 216, 217, 220, 221, 229, 256, 257, 281, 282, 283, 285, 286, 290, 291, 293, 294, 296, 297, 307, 407, 409, 414], "help": [15, 30, 75, 172, 174, 191, 218, 239, 243, 245, 246, 250, 280, 281, 282, 292, 293, 295, 296, 299, 312, 315, 316, 318, 324, 325, 326, 328], "henc": 396, "here": [3, 17, 161, 194, 309, 311, 325, 326, 328, 336, 405, 406, 416], "hidden": [28, 152, 156, 164], "hidden_s": 164, "hierarch": [39, 40, 154, 164, 167, 309], "hierarchi": 256, "hierarchicalnetwork": 164, "high": [15, 42, 48, 49, 69, 70, 71, 72, 79, 92, 100, 101, 120, 135, 144, 332, 335], "higher": [49, 60, 90, 98, 123, 275, 278, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 341, 342, 346, 368], "highest": [53, 101, 332], "highli": [30, 45, 53, 95, 154], "highlight": [228, 295, 296, 297], "hint": 328, "hinton": [5, 6], "histor": 314, "histori": [329, 331, 332, 333, 335, 349, 350, 351, 352, 353, 355, 356, 357, 358], "hold": [93, 163, 164, 165, 166], "horizont": [390, 399, 411, 416], "hot": [275, 278], "how": [2, 3, 12, 14, 15, 136, 137, 138, 139, 144, 164, 167, 267, 309, 328, 416], "howard": 154, "howev": [160, 238], "hstack": 391, "html": [5, 6], "http": [5, 6, 7, 8], "hu": [154, 228], "huang": 154, "huber": [199, 276], "huber_loss": [193, 200], "huberloss": [269, 279], "huberregressionmodel": 276, "hue": 416, "huge": [48, 154], "hybrid": [101, 102, 154], "hyperbol": [177, 250, 366, 376, 381], "hyperparamet": [104, 105, 106, 107, 108, 109, 112, 123, 151, 157, 310, 312], "i": [0, 1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 60, 69, 70, 71, 72, 73, 74, 75, 76, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 361, 362, 363, 364, 365, 366, 368, 369, 370, 371, 372, 374, 375, 376, 377, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416], "i_1": [12, 13, 14, 267], "i_2": [12, 13, 14, 267], "i_k": 14, "i_m": [12, 14, 267], "iccv": 154, "idea": 154, "ideal": [15, 42, 46, 50, 90, 93, 102, 167], "ident": [21, 22, 77, 154, 221, 261, 269, 273, 334, 336, 353, 396], "identifi": 165, "idx": [2, 3], "ieee": [154, 228], "ignor": [301, 302, 303, 304, 305], "ii": 382, "ij": [30, 176, 220, 248, 340, 341, 342, 346, 392, 401, 402], "ik": [340, 341, 342], "ill": [18, 24], "ilsvrc": 154, "imag": [3, 4, 5, 6, 7, 8, 14, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 45, 46, 47, 48, 49, 50, 51, 52, 55, 56, 57, 58, 60, 69, 70, 71, 72, 74, 75, 76, 82, 83, 84, 86, 87, 88, 89, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 136, 137, 138, 139, 144, 153, 154, 181, 206, 221, 223, 228, 256, 285, 392, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416], "image_dir": 3, "image_path": 3, "imagedataset": 3, "imageio": 3, "imagenet": [55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 77, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 121, 122, 136, 137, 138, 139, 144, 154], "imbal": [275, 278], "img_siz": 30, "impact": [154, 318], "implement": [2, 3, 15, 24, 28, 30, 39, 54, 59, 73, 74, 75, 76, 77, 83, 84, 86, 90, 91, 92, 112, 121, 122, 124, 125, 126, 127, 128, 129, 130, 150, 152, 154, 156, 161, 184, 187, 225, 226, 227, 229, 252, 253, 261, 283, 303, 305, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 390, 404, 410], "impli": [255, 256], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 122, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 186, 187, 188, 191, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416], "improp": [10, 164, 167, 336], "improv": [30, 39, 60, 74, 75, 76, 80, 82, 84, 102, 103, 112, 123, 136, 137, 138, 139, 140, 152, 154, 158, 186, 187, 203, 218, 221, 228, 240, 246, 250, 267, 299, 312, 313, 314, 315, 316, 317, 318, 319, 320, 328, 409, 412, 416], "imread": 3, "in1_featur": [194, 270], "in2_featur": [194, 270], "in_channel": [30, 112, 164, 167, 222, 223, 224, 225, 226, 227, 228, 229, 255, 256, 257, 281, 282, 292, 293, 294, 295, 296, 297, 309], "in_featur": [163, 164, 167, 196, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 256, 257, 259, 262, 263, 270, 272, 274, 275, 276, 277, 278, 280, 284, 287, 292, 293, 294, 295, 296, 297], "incept": [74, 75, 76, 77, 82, 83, 84, 85, 154], "inception_next": 77, "inception_next_atto": 154, "inception_next_bas": 154, "inception_next_smal": 154, "inception_next_tini": 154, "inception_resnet_v1": 154, "inception_resnet_v2": 154, "inception_v1": 154, "inception_v3": 154, "inception_v4": 154, "inceptionnext": [78, 79, 80, 81, 85, 154], "inceptionresnet": [83, 84], "includ": [3, 4, 7, 15, 16, 22, 23, 28, 39, 73, 74, 75, 83, 86, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 145, 151, 152, 155, 156, 161, 162, 164, 166, 167, 220, 222, 223, 224, 225, 226, 227, 303, 305, 307, 309, 310, 311, 318, 328, 336, 342, 393, 401, 402], "inclus": [162, 165, 332, 335, 354], "incom": [196, 272], "incompat": 386, "incomplet": 2, "incompletedataset": 2, "incorpor": [27, 30, 95, 123, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 154, 240], "increas": [42, 43, 90, 98, 101, 123, 124, 125, 126, 127, 128, 129, 140, 158, 180, 181, 182, 184, 221, 314, 321, 325, 390, 404, 410, 411, 413, 416], "independ": [164, 180, 181, 182, 252, 259, 262, 263, 264, 265, 287, 342, 352, 408, 410, 412, 414], "index": [0, 2, 5, 6, 7, 8, 10, 12, 204, 218, 267, 283, 299, 325, 349, 350, 353, 392, 396], "indexerror": 0, "indic": [0, 1, 13, 14, 110, 111, 145, 155, 162, 164, 166, 167, 198, 202, 218, 275, 278, 292, 299, 301, 302, 303, 304, 305, 324, 337, 407, 409], "individu": [3, 164, 167, 276, 287, 311, 314, 321], "induc": [174, 246], "inf": 380, "infer": [136, 137, 138, 139, 144, 164, 167, 326], "infin": [25, 27, 317], "inform": [15, 30, 154, 155, 160, 228, 311, 313, 326], "infti": [23, 319], "inherit": [1, 312, 320, 322], "init": 232, "initi": [1, 30, 39, 54, 77, 82, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 146, 147, 148, 149, 151, 157, 160, 162, 163, 164, 165, 166, 167, 229, 231, 233, 234, 235, 236, 237, 238, 252, 255, 256, 257, 270, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 287, 299, 303, 305, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 331, 334, 335, 336, 349, 353, 354, 355, 356, 357, 358, 385], "initial_accumulator_valu": 314, "inner": [15, 340, 359], "innov": [92, 102], "input": [10, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 123, 136, 137, 138, 139, 140, 144, 150, 152, 154, 155, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 326, 328, 336, 337, 338, 340, 341, 342, 346, 350, 352, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416], "input1": 270, "input2": 270, "input_": [28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 152, 169, 170, 172, 173, 174, 175, 176, 177, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 283, 289, 290, 291, 299, 387, 401, 402], "input_1": 194, "input_2": 194, "input_data": [239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 255, 256, 257, 259, 262, 263, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 284, 287, 292, 293, 294, 295, 296, 297], "input_indic": [218, 299], "input_s": [164, 166, 248, 275, 278], "input_shap": 155, "input_tensor": [15, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 150, 160, 163, 164, 165, 166, 167, 176, 186, 187, 225, 226, 227, 228, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 292, 293, 294, 295, 296, 297, 307, 309, 407, 408, 409, 410, 411, 412, 413, 414], "insid": [3, 324, 326], "insight": [15, 154], "inspect": [161, 162, 167, 310], "inspir": [10, 12, 14, 39, 154], "instabl": [24, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322], "instal": 15, "instanc": [0, 1, 15, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 99, 100, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 151, 153, 155, 157, 158, 161, 162, 163, 165, 166, 167, 206, 245, 284, 285, 286, 287, 301, 302, 304, 310, 327, 385, 395, 400, 416], "instance_norm": [193, 205, 284, 285, 286], "instancenorm1d": [269, 288], "instancenorm1dmodel": 284, "instancenorm2d": [269, 288], "instancenorm3d": [269, 288], "instanti": [2, 31, 32, 33, 34, 35, 36, 37, 38, 59, 69, 70, 71, 72, 77, 78, 79, 80, 81, 98, 99, 100, 101, 136, 137, 138, 139, 144, 327], "instead": [15, 155, 163, 164, 165, 166, 167, 233, 234, 237, 238, 299, 301, 303, 305, 315, 316, 317, 326, 328, 351, 352], "int": [0, 1, 2, 5, 6, 7, 8, 12, 13, 14, 22, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 162, 176, 179, 180, 181, 182, 184, 186, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 235, 236, 237, 238, 248, 252, 253, 255, 256, 257, 260, 267, 270, 272, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 307, 315, 316, 317, 318, 319, 321, 327, 329, 331, 332, 333, 334, 335, 337, 349, 350, 351, 353, 354, 355, 357, 364, 370, 371, 372, 379, 383, 384, 385, 386, 387, 388, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 407, 409, 414], "int32": 299, "integ": [1, 3, 22, 130, 145, 180, 181, 182, 209, 210, 252, 255, 256, 257, 287, 290, 291, 293, 294, 295, 296, 297, 328, 332, 333, 335, 336, 351, 355, 357, 371, 379, 383, 384, 393, 395, 396, 397, 400], "integr": [1, 2, 4, 5, 6, 7, 8, 13, 16, 101, 103, 154, 156, 162, 164, 166, 167, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 255, 256, 257, 267, 270, 272, 292, 293, 294, 295, 296, 297], "intellig": [154, 228], "intend": [10, 160, 165, 166], "intens": [24, 54, 113, 408, 410], "intent": 328, "interact": [194, 270, 309, 336], "interdepend": 154, "interfac": [2, 161, 164, 311], "interfer": [324, 326], "intermedi": [24, 110, 111, 228, 301, 303, 305], "intern": [113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 154, 163, 164, 165, 166, 167, 275, 278, 309, 407, 408, 409, 410, 411, 412, 413, 414], "interpol": [193, 219, 307, 354, 414], "interpret": [10, 154, 176, 248, 328, 388], "interv": [331, 335, 349], "introduc": [40, 60, 74, 75, 90, 91, 92, 123, 154, 173, 228, 240, 244, 245, 247, 250, 259, 262, 263, 264, 265, 301, 409, 412, 416], "introspect": 167, "intuit": [10, 12, 15, 163, 165, 309, 416], "inv": 20, "inv_a": 21, "invari": [293, 296], "invers": [15, 18, 21, 22, 24, 314, 361, 362, 363], "invert": [18, 21, 22, 26, 91, 92, 95, 154], "invok": 327, "involv": [12, 14, 17, 18, 19, 21, 24, 25, 27, 140, 169, 170, 172, 173, 174, 175, 177, 194, 196, 220, 255, 256, 257, 267, 270, 272, 328, 329, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 358, 368, 369, 370, 372, 375, 377, 392, 393, 395, 400], "is_caus": [179, 253, 304, 305], "is_leaf": 337, "issu": [3, 246, 280, 281, 282, 315, 316], "item": [7, 277], "iter": [0, 1, 2, 3, 160, 161, 164, 166, 302, 304, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 349], "ith": [176, 248], "its": [4, 22, 24, 28, 40, 93, 101, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 131, 132, 133, 134, 135, 141, 142, 143, 152, 154, 155, 160, 163, 164, 165, 166, 180, 181, 182, 184, 221, 229, 238, 240, 244, 249, 260, 295, 296, 297, 309, 310, 313, 321, 324, 325, 326, 327, 349, 351, 352, 357, 370, 372, 385, 386, 396, 397, 408, 411, 413, 416], "itself": [17, 22, 163, 164, 165, 166], "j": [8, 10, 12, 13, 14, 30, 176, 218, 228, 248, 267, 280, 281, 282, 284, 285, 286, 292, 293, 295, 296, 299, 392, 399, 401, 402, 407, 409], "j_1": [12, 14, 267], "j_2": [12, 14, 267], "j_k": 14, "j_n": [12, 14, 267], "jie": 154, "jk": 341, "join": [3, 388], "json": 327, "k": [22, 30, 154, 179, 180, 252, 253, 255, 275, 281, 282, 285, 286, 292, 295, 296, 305, 340, 341, 350, 353, 388, 397], "k_d": [182, 257, 294, 297], "k_h": [181, 182, 256, 257, 293, 294, 297], "k_i": 252, "k_j": 30, "k_w": [181, 182, 256, 257, 293, 294, 297], "kaim": [154, 233, 234, 237, 238], "kaiming_norm": 232, "kaiming_uniform": 232, "kalenichenko": 154, "karen": 154, "kashif": 7, "kdim": 252, "keep": [161, 187, 244, 313, 326, 396, 401, 402], "keep_grad": [162, 329, 331, 332, 333, 335, 337, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 385, 406], "keep_var": 161, "keepdim": [23, 370, 371, 372, 379, 384], "kei": [93, 154, 161, 163, 165, 167, 179, 252, 253, 305, 310], "kept": [371, 379, 384], "kernel": [86, 87, 88, 89, 93, 96, 97, 140, 141, 142, 143, 144, 152, 154, 180, 181, 182, 184, 208, 209, 210, 211, 212, 213, 215, 216, 217, 222, 223, 224, 225, 226, 227, 229, 255, 256, 257, 289, 290, 291, 293, 294, 297], "kernel_s": [92, 96, 97, 140, 141, 142, 143, 164, 167, 211, 212, 213, 215, 216, 217, 222, 223, 224, 225, 226, 227, 229, 255, 256, 257, 267, 281, 282, 292, 293, 294, 295, 296, 297], "keyerror": 161, "keyword": [29, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 153, 161, 271], "kj": [340, 342], "known": 154, "kriz": [5, 6], "krizhevski": [5, 6, 154], "kroneck": [12, 176, 248, 267], "kwarg": [29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 161, 271, 327], "l": [17, 24, 69, 154, 179, 180, 189, 208, 211, 215, 222, 228, 253, 259, 262, 263, 264, 265, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 289, 304, 305, 386], "l2": [312, 313, 314, 315, 316, 317, 318, 319, 320, 322], "l_": [154, 180, 208, 211, 215, 255, 289, 292, 295, 301], "l_k": 252, "l_m": [302, 303], "l_out": [180, 211, 215], "l_q": 252, "l_t": [301, 302, 303], "l_v": 252, "label": [4, 5, 6, 7, 8, 75, 274, 275, 278], "lambd": 312, "lambda": [19, 174, 246, 312, 316], "lambda_1": 19, "lambda_2": 19, "lambda_i": 19, "lambda_n": 19, "languag": [4, 255, 270, 292, 295, 301], "larg": [0, 3, 24, 42, 48, 49, 53, 54, 69, 72, 92, 96, 98, 101, 102, 113, 114, 115, 118, 131, 132, 154, 225, 226, 227, 245, 276, 309, 312, 315, 316, 317, 320, 321, 322, 326], "larger": [41, 59, 60, 112, 140, 158, 163, 165, 180, 181, 182, 184, 186, 260, 312, 343, 387, 393, 407, 409, 414], "largest": [53, 370], "last": [1, 176, 207, 248, 341, 342, 387, 388, 411, 413], "last_channel": 92, "later": [30, 154], "latest": 4, "layer": [10, 15, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 54, 55, 56, 57, 58, 59, 60, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 92, 93, 94, 96, 97, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 145, 146, 147, 148, 149, 152, 154, 155, 156, 161, 163, 164, 167, 176, 187, 196, 203, 206, 207, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 237, 238, 248, 253, 255, 256, 257, 261, 270, 271, 272, 278, 287, 292, 293, 294, 295, 296, 297, 301, 302, 303, 304, 305, 309, 336, 393, 406], "layer1": 327, "layer2": 327, "layer_group": 164, "layer_norm": [193, 205, 287], "layer_norm_ep": [301, 303, 305], "layer_scale_init": 39, "layer_sequ": [164, 167], "layernorm": [269, 288, 301, 302, 303, 304, 305], "layernormmodel": 287, "le": 154, "lead": [10, 164, 167, 240, 284, 285, 286, 287, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 336, 386], "leaf": 337, "leaki": [172, 243], "leaky_relu": [171, 193, 243], "leakyrelu": [251, 269], "learn": [1, 3, 4, 7, 8, 10, 13, 15, 22, 24, 30, 60, 79, 80, 123, 124, 125, 126, 127, 128, 129, 152, 153, 154, 163, 164, 165, 166, 173, 176, 228, 239, 243, 244, 248, 255, 256, 257, 262, 263, 264, 265, 267, 270, 272, 309, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 334, 354, 397, 401, 402, 405, 406, 416], "learnabl": [30, 160, 161, 162, 203, 204, 206, 207, 222, 223, 224, 252, 255, 256, 257, 270, 272, 280, 281, 282, 283, 284, 285, 286, 287, 305, 309], "least": [24, 25, 27, 307, 382, 401, 402], "lecun": [8, 154], "left": [22, 23, 24, 27, 30, 170, 176, 240, 248, 252, 274, 275, 276, 278, 280, 281, 282, 284, 285, 286, 287, 295, 296, 297, 303, 305, 407, 409], "leftarrow": 318, "len": [0, 1, 2, 3, 392], "lenet": [85, 87, 88, 89, 154], "lenet_1": 154, "lenet_4": 154, "lenet_5": 154, "length": [164, 179, 180, 189, 208, 211, 215, 255, 271, 280, 284, 289, 292, 295, 304, 305, 393, 408], "leq": [241, 242, 276, 319, 347, 364, 402], "lerp": 220, "less": [0, 169, 172, 199, 239, 243, 275, 276, 278, 354, 364], "let": 19, "level": [15, 82], "leverag": [12, 13, 14, 26, 30, 76, 77, 84, 98, 101, 124, 125, 126, 127, 128, 129, 150, 154, 229, 309], "li": 154, "librari": [3, 10, 15, 16, 161, 309, 310, 311, 327, 328, 336, 337, 416], "lie": 329, "lightweight": [15, 51, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 78, 91, 96, 97, 104, 105, 106, 107, 108, 109, 116, 133, 229, 242, 245], "like": [12, 13, 14, 15, 60, 82, 93, 101, 124, 125, 126, 127, 128, 129, 141, 142, 143, 154, 156, 160, 161, 164, 167, 180, 186, 237, 238, 246, 259, 260, 267, 280, 281, 282, 284, 285, 286, 324, 325, 328, 385, 406, 416], "likelihood": [202, 275, 278], "limit": [44, 51, 96, 97, 98, 100, 155, 245, 313, 364], "linalg": [15, 20], "linalgerror": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27], "linear": [15, 16, 17, 24, 25, 26, 77, 91, 95, 130, 154, 155, 163, 164, 165, 167, 169, 170, 172, 173, 174, 187, 233, 234, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 256, 257, 259, 261, 262, 263, 270, 271, 274, 275, 276, 277, 278, 280, 284, 287, 292, 293, 294, 295, 296, 297, 301, 303, 305, 327, 353], "linearli": 276, "linspac": 359, "linspace_tensor": 354, "list": [0, 1, 30, 39, 40, 60, 77, 86, 92, 103, 112, 123, 130, 140, 145, 155, 160, 162, 163, 164, 165, 166, 207, 229, 271, 287, 310, 328, 329, 331, 332, 333, 335, 337, 350, 351, 352, 355, 356, 357, 358, 383, 386, 396, 397, 398, 403, 405], "listdir": 3, "liter": [13, 112, 197, 198, 199, 201, 202, 220, 222, 223, 224, 225, 226, 227, 229, 233, 234, 255, 256, 257, 274, 275, 276, 277, 278, 307, 392], "liu": 154, "ln": 347, "load": [3, 4, 5, 6, 7, 8, 160, 161, 162, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 327], "load_state_dict": [161, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322], "loader": [1, 2, 3], "local": [30, 154, 184, 255], "locat": [154, 220], "log": [202, 274, 275, 278, 359], "log_softmax": 278, "logarithm": [347, 368, 369], "logic": [3, 289, 290, 291, 309, 310], "logit": [28, 39, 152, 176, 248, 275], "logsoftmax": [275, 278], "long": [30, 154, 318, 383], "lookup": [218, 299], "loop": [1, 12, 13, 14, 164, 267, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322], "loss": [15, 24, 163, 164, 165, 166, 167, 176, 197, 198, 199, 201, 202, 239, 240, 243, 244, 246, 247, 248, 250, 259, 262, 263, 264, 265, 271, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322], "low": [15, 82, 91, 96, 97, 100, 332, 335], "lower": [17, 90, 236, 302, 303, 304, 305, 312, 320, 321, 322, 335, 401, 402], "lower_triangular": 401, "lowest": 332, "lr": [310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322], "ls_init_valu": 77, "lu": 21, "lucid": [0, 1, 2, 5, 6, 7, 8, 11, 20, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 307, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 330, 359, 391, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414], "m": [70, 145, 154, 163, 164, 167, 252, 293, 294, 296, 297, 301, 302, 305, 315, 316, 317, 318, 319, 353, 401, 402], "m_": [315, 316, 317, 318, 319, 401, 402], "m_m": 303, "m_t": [303, 318, 319], "maaten": 154, "machin": [3, 7, 8, 15, 24, 154, 156, 228, 301, 315, 325, 334], "magnitud": [187, 218, 299, 320, 321, 416], "mai": [3, 10, 12, 14, 15, 19, 21, 24, 100, 164, 166, 221, 261, 267, 276, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 326, 336, 387, 410, 416], "main": [15, 25, 82, 164, 350, 353, 401, 402], "maintain": [24, 30, 40, 45, 69, 70, 71, 72, 80, 90, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144, 154, 160, 161, 163, 164, 165, 167, 174, 187, 233, 234, 237, 238, 239, 240, 246, 259, 261, 262, 263, 264, 265, 280, 281, 282, 284, 285, 286, 315, 320, 407, 410, 414], "make": [1, 3, 10, 15, 30, 42, 43, 46, 47, 73, 82, 86, 91, 93, 95, 96, 97, 99, 100, 102, 112, 154, 164, 167, 247, 275, 276, 287, 293, 296, 309, 314, 315, 316, 317, 325, 327, 336, 337, 342, 392, 397, 405, 416], "manag": [15, 161, 163, 164, 165, 166, 167, 309, 311, 324, 326, 327, 336], "manhattan": 23, "mani": 155, "manipul": [10, 12, 15, 163, 165, 416], "manner": [10, 12, 13, 164, 167], "manual": [10, 197, 198, 202, 274, 275, 278, 326], "map": [12, 14, 77, 110, 111, 112, 123, 133, 140, 154, 161, 175, 177, 186, 204, 228, 247, 250, 261, 267, 283, 299, 387], "marri": 154, "mask": [154, 160, 179, 252, 253, 259, 262, 263, 264, 265, 301, 302, 303, 304, 305, 401, 402], "match": [10, 14, 26, 161, 164, 167, 179, 197, 199, 201, 207, 222, 223, 224, 260, 299, 310, 368, 386, 395, 396, 397, 400, 403, 408, 416], "math": [252, 365, 375, 380], "mathbb": [252, 397], "mathbf": [12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 150, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 179, 194, 196, 220, 225, 226, 227, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 253, 255, 256, 257, 259, 262, 263, 264, 265, 267, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 292, 293, 294, 295, 296, 297, 340, 341, 342, 346, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 388, 390, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414], "mathcal": [233, 235, 237, 259, 262, 263, 264, 265, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287], "mathemat": [21, 222, 223, 224, 409, 411, 412, 413], "mathrm": 24, "matmul": 359, "matric": [16, 18, 19, 21, 24, 26, 27, 252, 305, 340, 341, 342, 353, 392, 401, 402], "matrix": [12, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 27, 30, 184, 194, 218, 271, 272, 299, 309, 340, 392], "matrix_pow": 20, "matthew": 154, "max": [10, 23, 130, 145, 173, 215, 216, 217, 218, 241, 242, 244, 245, 295, 296, 297, 299, 317, 343, 359, 364], "max_norm": [218, 299], "max_pool": [295, 296, 297], "max_pool1d": [193, 214], "max_pool2d": [193, 214], "max_pool3d": [193, 214], "max_valu": 364, "maxim": [3, 48, 101], "maximum": [23, 244, 245, 295, 296, 297, 315, 317, 359, 364, 370, 412], "maxpool": [28, 152], "maxpool1d": [269, 298], "maxpool1dmodel": 295, "maxpool2d": [164, 167, 256, 269, 298], "maxpool2dmodel": 296, "maxpool3d": [257, 269, 298], "maxpool3dmodel": 297, "mean": [5, 6, 7, 8, 10, 12, 13, 14, 25, 110, 111, 155, 160, 174, 180, 181, 182, 185, 197, 198, 199, 201, 202, 203, 206, 222, 223, 224, 235, 239, 240, 241, 243, 244, 246, 247, 250, 257, 259, 267, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 315, 316, 317, 318, 319, 320, 324, 333, 359, 364, 368, 369, 370, 372, 375, 377, 379, 382, 383, 384, 405, 408, 416], "meaning": [13, 167, 328], "measur": [274, 275, 277, 278], "mechan": [15, 30, 110, 111, 130, 140, 144, 154, 156, 166, 194, 252, 387], "medium": [47, 51, 70, 98, 99, 102, 154], "meet": 154, "mem_is_caus": [302, 303], "mem_key_padding_mask": [301, 302, 303], "mem_mask": [301, 302, 303], "membership": 274, "memori": [2, 3, 54, 301, 302, 303, 326, 351, 352], "merg": [12, 267], "meshgrid": 391, "method": [3, 10, 13, 15, 16, 21, 60, 130, 150, 151, 163, 164, 165, 166, 167, 197, 198, 199, 201, 202, 233, 234, 237, 238, 274, 275, 276, 277, 278, 307, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 336], "mha": 252, "mid": 80, "mid_channel": [96, 97], "middl": 325, "might": 309, "min": [241, 242, 245, 344, 359, 364], "min_valu": 364, "mind": [0, 3, 15, 164, 167, 326], "mingx": 154, "mini": 1, "minim": [4, 15, 78, 92, 154, 167, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 311], "minimalist": 15, "minimum": [359, 364, 372], "minu": 247, "mirror": [356, 358], "mismatch": [10, 12, 14, 60, 161, 267, 309, 310], "miss": [161, 309], "mitig": [172, 239, 243, 246, 280, 281, 282], "mix": 77, "mixer": 77, "mlp": [77, 229], "mlp_ratio": 77, "mnist": [4, 7, 9, 87, 88], "mnist_train": [4, 8], "mobil": [90, 91, 92, 93, 95, 96, 97, 100, 154], "mobilenet": [85, 91, 92, 93, 95, 96, 97, 99, 100, 101, 102, 154, 245], "mobilenet_v2": 154, "mobilenet_v3": [96, 97], "mobilenet_v3_larg": 154, "mobilenet_v3_smal": 154, "mobilenet_v4": [98, 99, 100, 101, 102], "mobilenet_v4_conv_larg": 154, "mobilenet_v4_conv_medium": 154, "mobilenet_v4_conv_smal": 154, "mobilenet_v4_hybrid_larg": 154, "mobilenet_v4_hybrid_medium": 154, "mobilenetv2": [91, 154], "mobilenetv3": [92, 96, 97, 154], "mode": [15, 191, 203, 206, 220, 233, 234, 259, 261, 262, 263, 264, 265, 307, 393], "model": [1, 3, 4, 10, 15, 22, 25, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 176, 179, 186, 218, 221, 222, 223, 224, 229, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 255, 256, 257, 259, 261, 262, 263, 267, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 284, 287, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 326, 327, 336, 405, 406, 416], "model_b0": 59, "model_b7": 59, "model_kwarg": 155, "model_tini": 77, "moder": [43, 47, 81, 99, 134], "modern": [39, 40, 77, 154], "modif": [151, 167, 326], "modifi": [29, 98, 112, 150, 153, 163, 164, 165, 166, 231, 233, 234, 235, 236, 237, 238, 259, 324, 326, 334, 390, 404], "modul": [5, 6, 7, 8, 10, 15, 28, 29, 30, 39, 40, 59, 60, 73, 76, 77, 82, 83, 84, 86, 90, 91, 92, 93, 102, 112, 123, 130, 140, 145, 150, 152, 153, 154, 155, 156, 160, 162, 163, 164, 165, 166, 167, 187, 222, 223, 224, 225, 226, 227, 228, 229, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 327, 328, 336, 406, 416], "modular": [3, 15, 154, 156, 161, 164, 167, 309, 416], "moduledict": [164, 165, 167, 168], "modulelist": [166, 167, 168], "moment": [315, 316, 317, 318, 319], "momentum": [203, 206, 222, 223, 224, 280, 281, 282, 284, 285, 286, 312, 318, 320, 322], "momentum_decai": 318, "monoton": 249, "moor": 24, "more": [3, 4, 7, 10, 15, 19, 42, 112, 119, 158, 163, 164, 167, 186, 225, 226, 227, 239, 262, 263, 264, 265, 301, 309, 310, 311, 312, 313, 316, 317, 320, 321, 322, 333, 342, 382, 399, 401, 402, 416], "most": [16, 46, 154, 296, 406, 407, 416], "move": [312, 320], "mse": [199, 201, 276, 277], "mse_loss": [193, 200], "mseloss": [269, 279], "mu": [30, 235, 280, 281, 282, 284, 285, 286, 287, 384], "mu_c": 408, "mu_i": [284, 285, 286], "much": 416, "mul": 359, "multi": [3, 4, 77, 83, 140, 141, 142, 143, 154, 156, 176, 179, 198, 202, 229, 248, 252, 275, 278, 301, 303, 305, 371, 379, 384], "multidimension": [331, 335, 351], "multiheadattent": [254, 269], "multipl": [1, 3, 12, 15, 16, 22, 26, 28, 112, 130, 144, 165, 166, 167, 184, 220, 221, 228, 229, 252, 259, 262, 263, 264, 265, 267, 275, 278, 302, 304, 309, 325, 329, 331, 332, 333, 335, 340, 345, 351, 352, 387, 397, 405, 410, 416], "multipli": [22, 94, 166, 196, 272, 307, 321, 345, 346], "must": [0, 1, 3, 17, 18, 19, 21, 22, 25, 26, 27, 155, 161, 163, 164, 165, 166, 167, 187, 207, 252, 259, 261, 262, 263, 264, 265, 278, 299, 301, 303, 305, 307, 310, 326, 329, 382, 386, 387, 388, 390, 393, 395, 396, 397, 399, 400, 401, 402, 404, 407, 408, 409, 410, 411, 413], "my_simple_model": 327, "mymodel": [161, 162, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322], "myoptim": [310, 311], "n": [12, 22, 23, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 154, 163, 164, 167, 179, 180, 181, 182, 184, 186, 189, 190, 191, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 228, 233, 235, 237, 252, 253, 255, 256, 257, 264, 265, 270, 272, 274, 275, 277, 278, 280, 281, 282, 283, 284, 285, 286, 289, 290, 291, 292, 293, 294, 295, 296, 297, 301, 302, 303, 304, 305, 353, 371, 382, 384], "n1": 23, "nabla_": [313, 314, 315, 316, 317, 318, 319, 321], "nabla_t": 319, "nadam": 323, "nair": [5, 6], "name": [10, 12, 13, 14, 154, 155, 161, 163, 165, 167, 267, 327, 328], "nan": [25, 27], "nano": [50, 154], "natur": [24, 154, 255, 270, 292, 295, 301, 347, 368, 369], "ndarrai": [160, 162, 328, 329, 337, 350, 352, 356, 358, 385], "ndim": [25, 27, 162, 337], "ne": 22, "nearest": [220, 307], "necessari": [4, 5, 6, 7, 8, 24, 326, 390, 404], "need": [2, 4, 13, 14, 102, 154, 164, 165, 166, 176, 270, 301, 309, 326, 351, 352, 405, 406, 416], "neg": [22, 24, 27, 169, 202, 221, 239, 243, 244, 246, 275, 278, 321, 388], "negative_slop": [172, 243], "neglect": 166, "neighbor": 220, "neq": 23, "nest": [155, 164, 167, 309], "nestedmodel": 155, "nesterov": 318, "net": [152, 154], "network": [3, 4, 10, 13, 15, 28, 29, 30, 39, 40, 54, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 76, 82, 89, 90, 93, 94, 98, 101, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 130, 131, 132, 133, 134, 135, 140, 145, 153, 154, 155, 156, 160, 161, 162, 163, 164, 165, 166, 167, 170, 173, 174, 175, 176, 177, 180, 181, 182, 186, 187, 194, 196, 203, 221, 228, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 287, 292, 293, 294, 295, 296, 297, 299, 301, 303, 305, 309, 310, 311, 312, 320, 322, 335, 336, 337, 349, 355, 357, 370, 372, 393, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416], "neural": [3, 4, 10, 13, 15, 28, 29, 30, 39, 59, 61, 62, 63, 64, 65, 66, 67, 68, 82, 89, 153, 154, 155, 160, 161, 162, 163, 164, 165, 166, 167, 170, 173, 174, 175, 176, 177, 180, 181, 182, 187, 194, 196, 203, 221, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 287, 292, 293, 294, 295, 296, 297, 299, 309, 310, 311, 312, 320, 322, 335, 336, 337, 349, 355, 357, 370, 372, 393, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416], "neuralnetwork": [241, 242, 244, 249], "neuron": 243, "never": 410, "new": [14, 161, 162, 169, 170, 172, 173, 174, 175, 177, 194, 196, 220, 229, 233, 234, 235, 236, 237, 238, 310, 327, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 352, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 383, 385, 386, 388, 390, 393, 395, 396, 399, 400, 401, 402, 403, 404], "next": [167, 405], "nll": 202, "nll_loss": [193, 200], "nllloss": [269, 279], "nlp": [218, 299], "nn": [5, 6, 7, 8, 15, 28, 30, 39, 40, 54, 59, 60, 73, 77, 82, 86, 90, 91, 92, 93, 112, 123, 130, 136, 137, 138, 139, 140, 144, 145, 152, 155, 168, 171, 178, 183, 192, 195, 200, 205, 214, 219, 230, 232, 251, 254, 258, 266, 268, 269, 273, 279, 288, 298, 300, 306, 308, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 327, 406, 416], "no_grad": 324, "node": 337, "nois": [27, 336], "non": [19, 22, 24, 27, 166, 170, 172, 173, 233, 234, 239, 240, 241, 243, 244, 245, 246, 247, 249, 250, 259, 262, 263, 264, 265, 301, 302, 303, 304, 305, 315, 316, 326, 347, 364], "none": [0, 1, 2, 5, 6, 7, 8, 23, 30, 59, 60, 73, 77, 82, 86, 90, 91, 92, 93, 103, 112, 150, 155, 161, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 187, 194, 196, 197, 198, 199, 201, 202, 203, 206, 207, 218, 221, 222, 223, 224, 225, 226, 227, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 307, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 351, 352, 353, 354, 356, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 388, 390, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 411, 413, 414], "norm": [16, 20, 218, 299, 302, 304, 317], "norm_first": [301, 303, 305], "norm_typ": [218, 299], "normal": [5, 6, 7, 8, 30, 39, 130, 154, 170, 174, 176, 177, 186, 203, 204, 206, 207, 218, 222, 223, 224, 232, 233, 237, 240, 246, 248, 259, 280, 281, 282, 283, 284, 285, 286, 287, 299, 301, 302, 303, 304, 305, 320, 333, 336, 405, 415, 416], "normalized_shap": [207, 287], "notat": [10, 12, 13, 14, 267], "note": [180, 259], "noth": [185, 188, 189, 190], "notimplementederror": [2, 161, 310], "notin": 364, "nov": 154, "novel": [7, 154], "np": [112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 160, 162, 228, 275, 278, 299, 328, 337, 342, 349, 350, 353, 355, 357, 358, 369, 385, 406], "npy": [5, 6, 7, 8], "num": [302, 304, 354], "num_block": 30, "num_class": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 248, 275, 278], "num_decoder_lay": [156, 301], "num_embed": [218, 299], "num_encoder_lay": [156, 301], "num_featur": [167, 222, 223, 224, 280, 281, 282, 284, 285, 286], "num_head": [30, 156, 252, 301, 302, 303, 304, 305], "num_init_featur": [54, 55, 56, 57, 58], "num_lay": [302, 304], "num_paramet": 166, "number": [0, 1, 2, 5, 6, 7, 8, 10, 12, 14, 18, 19, 21, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 162, 164, 166, 167, 179, 180, 181, 182, 184, 189, 190, 191, 194, 196, 198, 202, 203, 204, 206, 208, 209, 210, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 237, 238, 247, 252, 255, 256, 257, 267, 270, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 312, 331, 334, 335, 337, 347, 349, 351, 353, 354, 370, 371, 372, 383, 384, 387, 388, 390, 393, 395, 396, 398, 400, 404, 408, 410, 411, 413, 416], "numer": [13, 21, 24, 186, 197, 198, 203, 204, 206, 207, 222, 223, 224, 245, 260, 274, 275, 280, 281, 282, 283, 284, 285, 286, 287, 301, 303, 305, 313, 314, 315, 316, 317, 318, 319, 320, 328, 339, 349, 355, 357], "numpi": [15, 160, 162, 275, 278, 328, 337, 342, 350, 353, 354, 369, 382, 385, 386, 393, 395, 400, 406, 416], "o": [3, 252, 294, 297, 355, 356], "object": [1, 3, 16, 140, 154, 161, 165, 166, 277, 309, 326, 338, 339, 343, 344, 345, 348, 385], "observ": 315, "obtain": 1, "occur": [14, 221, 326, 327, 388], "occurr": 22, "odot": [259, 262, 263, 264, 265], "off": [43, 99, 324], "offer": [4, 10, 15, 40, 41, 43, 53, 80, 99, 309, 311, 336, 416], "offset": 353, "often": [22, 121, 122, 180, 181, 182, 184, 218, 260, 275, 278, 349, 357, 406, 410, 414, 416], "older": 318, "onc": 326, "one": [0, 13, 136, 137, 138, 139, 144, 166, 167, 176, 180, 196, 211, 215, 222, 223, 224, 246, 247, 248, 255, 263, 275, 278, 280, 284, 292, 295, 307, 310, 325, 328, 333, 348, 356, 370, 372, 389, 394, 399, 406], "ones": [194, 196, 255, 256, 257, 272, 280, 281, 282, 284, 285, 286, 287, 309, 353, 356, 359, 387], "ones_lik": 359, "onli": [15, 155, 220, 241, 244, 259, 260, 262, 263, 264, 265, 274, 275, 278, 280, 281, 282, 284, 285, 286, 287, 295, 296, 297, 321, 324, 349, 364, 370, 372, 382, 393, 394, 396, 398, 401, 402], "onto": [25, 27], "openml": [5, 6, 7, 8], "oper": [3, 10, 12, 13, 14, 15, 16, 21, 24, 30, 110, 111, 130, 131, 132, 133, 134, 135, 160, 161, 164, 169, 170, 172, 173, 174, 175, 177, 179, 180, 181, 182, 184, 187, 191, 194, 196, 208, 209, 210, 211, 212, 213, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 253, 255, 256, 257, 259, 261, 262, 263, 264, 265, 267, 270, 271, 272, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 309, 324, 325, 326, 328, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 351, 352, 355, 357, 368, 369, 370, 371, 372, 375, 377, 379, 382, 384, 388, 390, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 408, 414], "operatornam": [22, 24, 252, 301, 302, 303, 304, 305], "opposit": 312, "optim": [3, 10, 13, 15, 16, 22, 24, 25, 27, 39, 44, 45, 48, 51, 53, 54, 60, 69, 70, 71, 72, 73, 74, 75, 76, 79, 82, 83, 84, 91, 92, 96, 97, 99, 100, 101, 102, 154, 160, 162, 165, 166, 184, 255, 256, 257, 299, 309, 326], "optimizer_st": [310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322], "option": [1, 5, 6, 7, 8, 10, 12, 13, 14, 23, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 169, 172, 176, 179, 181, 182, 185, 186, 187, 188, 189, 190, 191, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 235, 236, 237, 238, 239, 243, 248, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 307, 310, 312, 320, 322, 329, 331, 332, 333, 335, 337, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 370, 371, 372, 379, 383, 384, 385, 387, 388, 392, 395, 397, 398, 399, 401, 402, 406, 410, 411, 413], "ord": 23, "order": [1, 3, 10, 23, 27, 163, 164, 165, 166, 167, 383, 405], "ordered_dict": 167, "ordereddict": [161, 163, 164, 167], "organ": [163, 164, 165, 167, 327], "orient": 416, "origin": [31, 32, 33, 34, 35, 36, 37, 38, 40, 75, 89, 185, 221, 228, 250, 387, 393, 394, 395, 396, 400, 403, 414], "orthogon": [24, 25, 27], "orthonorm": 25, "oscil": [312, 320, 322], "other": [2, 3, 15, 21, 75, 84, 86, 89, 99, 160, 161, 164, 167, 233, 234, 259, 260, 309, 310, 324, 326, 336, 337, 349, 351, 355, 357, 382, 392, 416], "otherwis": [113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 169, 172, 173, 174, 176, 187, 239, 241, 242, 243, 244, 246, 248, 261, 262, 263, 264, 265, 276, 292, 293, 294, 295, 296, 297, 302, 304, 310, 321, 327, 343, 344, 370, 372, 401, 402], "otim": [24, 194, 270], "out": [0, 3, 4, 10, 169, 170, 172, 173, 174, 175, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 194, 196, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 233, 234, 237, 238, 253, 255, 256, 257, 259, 261, 262, 263, 264, 265, 267, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 303, 312, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 388, 389, 390, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404], "out_channel": [86, 92, 96, 97, 164, 167, 222, 223, 224, 225, 226, 227, 229, 255, 256, 257, 281, 282, 292, 293, 294, 295, 296, 297, 309], "out_featur": [163, 164, 167, 194, 196, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 256, 257, 259, 262, 263, 270, 272, 274, 275, 276, 277, 278, 280, 284, 287, 292, 293, 294, 295, 296, 297], "outcom": [410, 411, 413], "outer": 359, "outlier": [199, 276], "output": [0, 1, 2, 10, 14, 15, 22, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 194, 196, 208, 209, 210, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 307, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 328, 329, 332, 333, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 350, 352, 353, 355, 357, 358, 368, 369, 370, 371, 372, 375, 377, 379, 382, 383, 384, 392, 393, 395, 397, 400, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414], "output_height": 184, "output_lay": [164, 167], "output_s": [164, 208, 209, 210, 289, 290, 291], "output_width": 184, "output_with_norm": [218, 299], "output_with_pad": [218, 299], "outsid": [0, 261], "over": [0, 1, 2, 3, 13, 16, 91, 101, 110, 111, 140, 152, 161, 164, 166, 176, 208, 209, 210, 228, 248, 255, 256, 257, 275, 278, 280, 281, 282, 284, 285, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 312, 313, 314, 315, 316, 331, 335, 370, 371, 372, 379, 382, 384, 410, 411, 413], "overal": [150, 187], "overdetermin": 24, "overfit": [1, 28, 152, 188, 191, 260, 262, 263, 264, 265, 312, 315, 320, 322], "overhead": [92, 154, 228], "overli": 245, "overrid": [2, 3, 99, 100, 101], "overridden": [161, 310], "overwrit": [163, 165], "own": [4, 163, 164, 165, 166, 180, 181, 182, 238, 309, 408], "p": [23, 24, 59, 162, 165, 166, 185, 186, 187, 188, 189, 190, 191, 218, 259, 260, 262, 263, 264, 265, 292, 295, 296, 299, 410, 411, 413, 416], "p_d": [294, 297], "p_h": [293, 294, 297], "p_w": [293, 294, 297], "packag": [2, 3, 4, 10, 16, 154, 309, 311, 327, 334, 336, 406, 416], "pad": [86, 164, 167, 180, 181, 182, 184, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 222, 223, 224, 225, 226, 227, 229, 255, 256, 257, 281, 282, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 391], "pad_after_dim1": 393, "pad_after_dim2": 393, "pad_before_dim1": 393, "pad_before_dim2": 393, "pad_width": 393, "padding_height": 184, "padding_idx": [218, 299], "padding_width": 184, "pair": 194, "pang": 154, "paper": [31, 32, 33, 34, 35, 36, 37, 38, 74], "paradigm": 154, "parallel": [1, 3, 140, 154, 252], "param": [161, 162, 165, 166, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322], "param1": 161, "param_dict": 165, "param_group": [310, 311], "param_groups_setup": 310, "param_list": 166, "param_s": 327, "paramet": [0, 2, 15, 87, 88, 89, 154, 161, 309, 310, 311, 328, 336, 416], "parameter": 93, "parameterdict": 168, "parameterlist": 168, "parent": 309, "part": [160, 161, 238, 299, 309, 324, 326, 336, 349, 350, 353, 355, 356, 357, 358, 387, 397, 401, 402, 406, 416], "partial": [17, 18, 19, 21, 22, 23, 24, 26, 27, 169, 170, 172, 173, 174, 175, 176, 177, 194, 196, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 255, 256, 257, 259, 262, 263, 264, 265, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 292, 293, 294, 295, 296, 297, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 388, 390, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404], "particip": [162, 406], "particular": [163, 165], "particularli": [15, 24, 91, 99, 124, 125, 126, 127, 128, 129, 164, 165, 166, 167, 176, 186, 196, 222, 223, 224, 225, 226, 227, 248, 272, 275, 278, 284, 285, 286, 287, 316, 324, 327, 354, 405], "partit": 397, "pass": [2, 15, 24, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 155, 161, 162, 163, 164, 165, 166, 167, 220, 222, 223, 224, 228, 229, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 256, 257, 259, 260, 261, 262, 263, 264, 265, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 284, 287, 292, 293, 294, 295, 296, 297, 301, 302, 303, 304, 305, 309, 328, 337, 354, 371, 379, 382, 383, 384, 388, 390, 394, 396, 398, 401, 402, 404, 406, 416], "past": [312, 313, 315, 320], "patch": [184, 293], "path": [3, 5, 6, 7, 8, 39, 40, 77, 187, 261], "pathwai": 154, "pattern": [10, 12, 13, 14, 30, 154, 173, 228, 244, 255, 256, 257, 267], "penal": [312, 320, 322], "penalti": [313, 314, 315, 316, 317, 318, 319], "penros": 24, "per": [1, 12, 92, 124, 125, 126, 127, 128, 129, 141, 142, 143, 179, 208, 252, 267, 284, 285, 286, 287, 289, 305, 386], "perceptron": 77, "perform": [3, 10, 13, 15, 16, 17, 24, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 60, 69, 70, 71, 72, 77, 78, 80, 82, 83, 84, 86, 87, 88, 89, 92, 93, 94, 95, 99, 100, 101, 102, 120, 136, 137, 138, 139, 140, 145, 152, 154, 158, 161, 162, 166, 170, 179, 180, 181, 182, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 225, 226, 227, 228, 229, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 255, 256, 257, 259, 262, 263, 264, 265, 267, 270, 271, 272, 280, 281, 282, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 307, 310, 324, 326, 334, 336, 338, 339, 342, 345, 348, 368, 370, 372, 379, 383, 386, 397, 405, 407, 409, 414, 416], "permut": [12, 267, 383], "persist": [160, 329, 331, 332, 333, 335, 351, 352], "perturb": [19, 26, 27, 416], "phase": 30, "phi": [170, 240], "pi": [170, 240, 365, 375, 380], "pico": [51, 154], "piecewis": [241, 242], "pil": [406, 416], "pinv": 20, "pioneer": 154, "pipelin": [5, 6, 7, 8, 267, 336, 405, 406, 408], "pixel": [5, 6, 7, 8, 220, 307, 408, 410], "place": [231, 233, 234, 235, 236, 237, 238], "placehold": [161, 271], "plai": [328, 336], "plot": 392, "point": [4, 221, 324], "pointwis": [225, 226, 227], "pool": [10, 28, 86, 87, 88, 89, 103, 112, 123, 130, 140, 145, 152, 154, 208, 209, 210, 211, 212, 213, 215, 216, 217, 228, 229, 256, 257, 289, 290, 291, 292, 293, 294, 295, 296, 297, 370, 372], "pool1": 167, "pool2": 167, "poorli": 21, "popul": 161, "popular": [4, 154], "portion": [387, 401, 402, 416], "pose": 24, "posit": [1, 17, 22, 30, 154, 156, 161, 167, 179, 221, 239, 243, 244, 246, 253, 292, 293, 294, 295, 296, 297, 301, 302, 303, 304, 305, 321, 325, 347, 387, 395, 400, 409], "possibl": [15, 416], "potenti": [24, 271, 320, 398], "power": [10, 15, 22, 50, 91, 96, 97, 103, 154, 228, 267, 325, 326, 359, 405, 406, 416], "pp": 154, "practic": [24, 80, 275, 278], "practition": 416, "pre": [30, 69, 70, 71, 72, 113, 117, 118, 154], "preactbottleneck": [113, 117, 118], "preced": [154, 162, 307, 337], "preconfigur": [61, 62, 63, 64, 65, 66, 67, 68, 83, 84], "predecessor": 40, "predefin": [4, 31, 32, 33, 34, 35, 36, 37, 38, 154, 164, 246, 299], "predict": [150, 274, 275, 277, 278], "prefix": [161, 327], "prepar": [3, 325, 393, 395, 400, 406, 416], "prepend": [161, 386], "preprint": 154, "preprocess": [3, 4, 184, 221, 336, 405, 406, 416], "present": [274, 275, 276, 278, 280, 281, 282, 284, 285, 286, 287, 293], "preserv": [13, 154, 185, 187, 221, 259, 261, 349, 350, 353, 355, 356, 357, 358, 371, 379, 384, 387], "preset": 4, "prevent": [1, 10, 163, 164, 165, 166, 167, 179, 188, 191, 245, 253, 260, 262, 263, 264, 265, 274, 275, 304, 305, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 326], "previou": [154, 312, 321, 326], "previous": 315, "primari": [15, 328], "primarili": 167, "principl": 154, "print": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 307, 309, 324, 325, 326, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 406, 407, 408, 409, 410, 411, 412, 413, 414], "priorit": [96, 97, 101, 229, 241], "prob": 329, "probabilist": 336, "probabl": [59, 75, 156, 170, 176, 179, 185, 186, 187, 188, 189, 190, 191, 197, 240, 248, 252, 253, 259, 260, 261, 262, 263, 264, 265, 274, 275, 278, 301, 303, 305, 329, 410, 411, 413, 416], "problem": [24, 25, 27, 154, 172, 239, 243, 319], "proceed": 154, "process": [2, 3, 4, 22, 25, 27, 28, 39, 83, 110, 111, 112, 140, 151, 152, 154, 166, 180, 181, 182, 206, 221, 222, 223, 224, 228, 229, 246, 250, 255, 257, 270, 280, 281, 282, 284, 285, 286, 287, 292, 294, 295, 297, 301, 302, 304, 312, 328, 392, 406, 407, 408, 409, 414, 416], "produc": [28, 152, 155, 208, 209, 210, 228, 255, 256, 257, 289, 290, 291, 334, 336], "product": [15, 25, 27, 179, 242, 247, 249, 252, 253, 270, 287, 309, 340, 341, 345, 346], "program": [324, 336], "progress": [60, 314], "project": [25, 27, 156, 252], "projector": 24, "promin": [292, 294, 295, 296, 297], "promot": [167, 275, 278, 309], "propag": [18, 19, 21, 24, 25, 26, 27, 154, 161, 167, 194, 196, 220, 228, 293, 294, 320, 321, 329, 340, 341, 342, 346, 370, 372, 387, 392, 393, 396, 403], "proper": [218, 387], "properli": [0, 166, 176, 248, 309], "properti": [16, 18, 21, 22, 170, 174, 185, 240, 246, 259, 314, 319], "proport": [5, 6, 7, 8, 384], "proportion": 414, "provid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 14, 15, 16, 29, 41, 50, 52, 73, 74, 75, 82, 86, 93, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 145, 150, 151, 153, 154, 156, 161, 163, 164, 165, 166, 170, 179, 196, 209, 210, 218, 221, 253, 267, 274, 275, 276, 278, 290, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 304, 307, 309, 310, 311, 312, 313, 320, 322, 324, 326, 328, 334, 336, 337, 342, 349, 356, 370, 372, 383, 385, 395, 398, 400, 416], "pseudo": [21, 24], "purpos": [41, 46, 50, 331, 335, 349, 355, 357], "python": 328, "pytorch": 385, "q": [25, 154, 179, 252, 253, 305], "q_i": [30, 252], "qk": [30, 303, 305], "qr": 20, "quad": [24, 218, 252, 274, 275, 276, 277, 278, 295, 296, 297, 302, 304, 338, 339, 343, 344, 345, 348, 401, 402, 407], "quadrat": 276, "queri": [179, 252, 253, 305], "quoc": 154, "quotient": 339, "r": [13, 14, 25, 30, 154, 252, 397, 410, 411, 412, 413], "r_t": 319, "radam": 323, "radix": [103, 104, 105, 106, 107, 108, 109, 110, 111], "rais": [0, 1, 2, 161, 309, 310, 347, 386], "rand": [330, 336], "randint": [330, 336], "randn": [12, 14, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 94, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 145, 150, 152, 179, 225, 226, 227, 228, 229, 252, 253, 267, 301, 302, 303, 304, 305, 309, 330, 334, 336], "random": [1, 2, 3, 12, 14, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 77, 78, 79, 80, 81, 94, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 141, 142, 143, 144, 150, 179, 225, 226, 227, 228, 229, 252, 261, 267, 299, 301, 302, 303, 304, 305, 409, 410, 411, 412, 413, 416], "random_integ": 336, "random_tensor": 336, "randomcrop": [415, 416], "randomgrayscal": [415, 416], "randomhorizontalflip": [415, 416], "randomli": [1, 185, 187, 188, 189, 190, 191, 221, 259, 262, 263, 264, 265, 409, 410, 411, 412, 413, 416], "randomnoisedataset": [0, 1, 2], "randomrot": [415, 416], "randomverticalflip": 415, "rang": [0, 1, 16, 30, 43, 52, 102, 112, 120, 154, 166, 175, 177, 180, 181, 187, 198, 202, 238, 245, 247, 250, 261, 312, 320, 322, 329, 332, 354, 361, 362, 364, 408, 412, 416], "rank": 24, "rasul": 7, "rate": [39, 40, 59, 60, 77, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322], "rather": [7, 12, 14, 165, 166, 267, 316, 396], "ratio": [59, 77, 130, 228, 229, 414], "ravel": 391, "raw": [176, 248, 275, 328], "re": [162, 326], "readabl": [10, 163, 164, 165, 167, 267, 309, 328], "readi": [3, 15, 136, 137, 138, 139, 144, 154, 156], "real": [24, 27, 91, 247], "rearrang": [11, 184, 268, 269], "reassembl": 154, "recalibr": [131, 133, 134, 136, 137, 138, 139, 154, 228], "receiv": [295, 296, 297, 393, 401, 402], "recent": 320, "recept": [140, 144, 154, 229], "reciproc": [24, 359, 369, 377], "recognit": [89, 110, 111, 154, 256], "rectangular": 353, "rectif": 319, "rectifi": [172, 173, 243, 244, 319], "recurr": [154, 164, 287], "recurs": [155, 161], "red": 410, "reduc": [11, 28, 30, 90, 112, 123, 140, 145, 152, 154, 225, 226, 227, 228, 280, 281, 282, 284, 285, 286, 292, 293, 294, 295, 296, 297, 318, 321, 326, 328, 370, 371, 372, 379, 384, 410], "reduct": [10, 13, 27, 59, 130, 197, 198, 199, 201, 202, 228, 229, 274, 275, 276, 277, 278, 370, 372], "reevalu": 310, "refer": [4, 15, 161, 336, 350, 353, 388], "refin": 154, "reflect": 324, "regardless": [24, 394], "region": [182, 186, 208, 209, 210, 220, 241, 260, 290, 291, 393, 407, 416], "regist": [31, 32, 33, 34, 35, 36, 37, 38, 99, 121, 122, 124, 125, 126, 127, 128, 129, 151, 160, 161, 162, 166, 309, 327], "register_buff": 160, "register_model": [29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 141, 142, 143, 146, 147, 148, 149, 151, 153, 157, 158], "register_paramet": 161, "registr": [161, 309], "registri": [124, 125, 126, 127, 128, 129, 327], "registry_path": 327, "regress": [4, 201, 276, 277], "regul": [218, 299], "regular": [24, 28, 39, 59, 60, 75, 152, 187, 191, 253, 260, 262, 263, 264, 265, 312, 313, 314, 317, 318, 319, 320, 322], "reimagin": 154, "rel": [30, 154], "relat": [326, 353, 355], "relationship": [30, 414], "relev": [220, 312, 320, 322], "reli": [186, 326], "reliabl": [5, 6, 7, 8], "reliant": [262, 263, 264, 265], "relu": [15, 28, 130, 145, 152, 154, 155, 163, 164, 165, 167, 169, 171, 172, 193, 222, 223, 224, 228, 229, 233, 234, 237, 238, 239, 243, 245, 249, 251, 255, 256, 257, 269, 270, 271, 272, 301, 303, 305], "relu1": 167, "relu2": 167, "relu3": 167, "relu6": [251, 269], "remain": [5, 6, 7, 8, 52, 160, 187, 207, 259, 261, 262, 263, 264, 265, 299, 321], "rememb": 336, "remov": [327, 398], "reorder": [10, 12, 267], "rep": 400, "repeat": [11, 391, 392, 400], "repetit": [10, 14, 395, 400], "replac": [7, 154, 301, 336, 410], "replic": [14, 302, 304, 386], "repres": [7, 12, 13, 14, 21, 23, 27, 86, 93, 104, 105, 106, 107, 108, 109, 161, 162, 167, 194, 196, 203, 206, 207, 218, 255, 256, 257, 267, 270, 272, 275, 278, 287, 299, 302, 310, 311, 312, 318, 319, 320, 321, 322, 328, 329, 338, 339, 345, 348, 350, 371, 382, 383, 384, 392, 407, 409, 411, 412, 413, 414], "represent": [30, 103, 110, 111, 121, 122, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 140, 144, 154, 156, 218, 228, 293, 296, 299, 310], "reproduc": [329, 331, 332, 333, 334, 335, 336, 416], "requir": [2, 3, 4, 13, 15, 42, 48, 49, 81, 92, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 124, 125, 126, 127, 128, 129, 140, 158, 160, 163, 167, 169, 170, 172, 173, 174, 175, 177, 194, 196, 220, 228, 229, 238, 271, 275, 278, 309, 324, 326, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 386, 388, 390, 392, 393, 394, 395, 396, 398, 399, 400, 403, 404, 406, 407, 414], "requires_grad": [160, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 184, 194, 196, 218, 220, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 255, 256, 257, 259, 262, 263, 264, 265, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 292, 293, 294, 295, 296, 297, 307, 309, 329, 331, 332, 333, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 406], "rescal": [197, 198, 202, 274, 275, 278], "research": 309, "reset": [162, 334, 337], "reshap": [10, 12, 15, 130, 196, 256, 257, 267, 307, 325, 328, 391, 394], "residu": [76, 82, 83, 84, 91, 92, 95, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 131, 132, 133, 134, 135, 154, 303, 305], "residualblock": 112, "resili": 321, "resiz": [220, 405, 415, 416], "resnest": [85, 104, 105, 106, 107, 108, 109, 110, 111, 154], "resnest_101": 154, "resnest_14": 154, "resnest_200": 154, "resnest_26": 154, "resnest_269": 154, "resnest_50": 154, "resnest_50_1s4x24d": 154, "resnest_50_4s2x40d": 154, "resnet": [82, 83, 84, 85, 103, 104, 105, 106, 107, 108, 109, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 131, 132, 133, 134, 135, 140, 141, 142, 143, 154, 228], "resnet_1001": 154, "resnet_101": 154, "resnet_152": 154, "resnet_18": 154, "resnet_200": 154, "resnet_269": 154, "resnet_34": 154, "resnet_50": 154, "resnet_arg": 140, "resnext": [85, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144, 154], "resnext_101_32x16d": 154, "resnext_101_32x32d": 154, "resnext_101_32x4d": 154, "resnext_101_32x8d": 154, "resnext_101_64x4d": 154, "resnext_50_32x4d": 154, "resolut": [30, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 77, 136, 137, 138, 139, 144, 154], "resolv": [12, 13, 14, 267], "resourc": [44, 45, 47, 48, 51, 52, 78, 92, 96, 97, 98, 99, 100, 101, 102, 154, 326], "respect": [12, 17, 18, 19, 21, 22, 23, 24, 25, 27, 86, 145, 160, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 194, 196, 220, 229, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 255, 256, 257, 259, 262, 263, 264, 265, 267, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 292, 293, 294, 295, 296, 297, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 364, 368, 369, 370, 371, 372, 375, 377, 379, 382, 383, 384, 392, 393, 395, 400, 410], "respons": [136, 137, 138, 139, 154, 163, 204, 283, 311], "rest": [401, 402], "restor": [228, 326], "restructur": 396, "result": [10, 12, 14, 17, 21, 22, 24, 154, 161, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 180, 181, 182, 184, 194, 196, 208, 209, 210, 211, 212, 213, 215, 216, 217, 220, 221, 229, 241, 245, 248, 252, 261, 267, 309, 310, 324, 326, 329, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 372, 373, 374, 375, 376, 377, 378, 380, 381, 382, 385, 388, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 403, 404, 406, 409, 410, 416], "resum": 311, "retain": [162, 186, 260, 337, 349, 357, 370, 371, 372, 379, 384, 387, 401, 402, 406], "retent": 406, "rethink": 154, "retriev": [0, 2, 163, 165, 166, 218], "return": [0, 1, 2, 3, 5, 6, 7, 8, 15, 31, 32, 33, 34, 35, 36, 37, 38, 82, 86, 100, 102, 130, 160, 161, 163, 164, 165, 166, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 255, 256, 257, 259, 261, 262, 263, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 284, 287, 292, 293, 294, 295, 296, 297, 302, 304, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 327, 328, 405, 416], "reus": [154, 406], "reusabl": [167, 261, 309, 405], "revers": [15, 167, 383, 411, 413], "revert": 326, "revolution": 154, "rgb": [5, 6, 30, 74, 75, 76, 83, 84], "rho": 313, "rho_": 319, "rho_t": 319, "right": [22, 23, 24, 26, 27, 30, 170, 176, 240, 248, 252, 274, 275, 276, 278, 280, 281, 282, 284, 285, 286, 287, 295, 296, 297, 303, 305, 407], "rightarrow": [12, 252, 267, 397], "risk": 328, "rmsprop": 323, "rob": 154, "robust": [41, 46, 79, 100, 186, 221, 259, 262, 263, 264, 265, 276, 309, 313, 409, 410, 412, 416], "roland": 7, "role": [328, 336, 416], "root": [4, 5, 6, 7, 8, 314, 320, 377], "rotat": [193, 219, 412, 416], "rotated_imag": 221, "rout": [295, 296, 297], "routin": 15, "row": [18, 19, 21, 26, 196, 218, 353, 392, 401, 402, 404], "rprop": 323, "rule": [14, 21, 22, 267, 325, 338, 339, 343, 344, 345, 347, 348], "run": [15, 160, 203, 206, 222, 223, 224, 280, 281, 282, 284, 285, 286, 313, 326, 334, 336], "running_mean": [160, 203, 206, 280, 281, 282, 284, 285, 286], "running_var": [203, 206, 280, 281, 282, 284, 285, 286], "runtim": [60, 164, 167, 261, 309, 354], "s_": 321, "s_1": 397, "s_2": 397, "s_d": [294, 297], "s_h": [293, 294, 297], "s_i": 397, "s_n": 397, "s_w": [293, 294, 297], "sain": 154, "same": [18, 19, 21, 22, 26, 176, 185, 186, 187, 188, 189, 190, 191, 203, 204, 206, 207, 209, 210, 221, 222, 223, 224, 225, 226, 227, 229, 245, 255, 256, 257, 259, 262, 263, 264, 265, 271, 280, 281, 282, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 321, 329, 334, 336, 342, 352, 356, 358, 368, 370, 371, 372, 388, 390, 394, 396, 398, 399, 401, 402, 404, 408], "sampl": [0, 1, 2, 3, 5, 6, 7, 8, 15, 69, 70, 71, 72, 74, 75, 76, 83, 84, 86, 87, 88, 89, 94, 95, 103, 104, 105, 106, 107, 108, 109, 110, 111, 136, 137, 138, 139, 144, 208, 209, 210, 233, 234, 235, 236, 237, 238, 259, 262, 263, 264, 265, 270, 272, 275, 278, 287, 289, 290, 291, 329, 333, 336, 354, 407, 409, 411, 412, 413, 414], "sandler": 154, "satisfi": [17, 19, 26, 397], "satur": [239, 416], "save": [2, 160, 162, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 326, 327], "scalabl": [3, 46, 59, 124, 125, 126, 127, 128, 129, 150, 154, 309], "scalar": [18, 23, 197, 198, 199, 201, 202, 328, 329], "scale": [13, 19, 24, 30, 39, 45, 47, 48, 49, 51, 53, 54, 59, 60, 77, 83, 87, 88, 89, 90, 94, 98, 99, 101, 102, 103, 110, 111, 113, 114, 115, 118, 131, 132, 140, 141, 142, 143, 154, 169, 174, 176, 179, 187, 203, 204, 206, 207, 218, 228, 229, 237, 238, 239, 241, 243, 246, 247, 248, 250, 252, 253, 259, 261, 262, 263, 264, 265, 275, 280, 281, 282, 283, 284, 285, 286, 287, 299, 307, 312, 314, 315, 316, 328, 336, 384, 414], "scale_by_keep": [187, 261], "scale_factor": 307, "scaled_dot_product_attent": [178, 193], "scaleddotproductattent": [254, 269], "scenario": [44, 49, 51, 99, 100, 101, 102, 165, 166, 287, 316, 317, 406, 410], "schedul": [260, 312], "scientif": 325, "score": [112, 123, 140, 176, 179, 253, 275], "scratch": 15, "script": 336, "se": [59, 131, 132, 133, 134, 135, 136, 137, 138, 139, 154], "se_resnet_101": 154, "se_resnet_152": 154, "se_resnet_18": 154, "se_resnet_34": 154, "se_resnet_50": 154, "se_resnext_101_32x4d": 154, "se_resnext_101_32x8d": 154, "se_resnext_101_64x4d": 154, "se_resnext_50_32x4d": 154, "se_scal": 59, "seamless": [0, 1, 3, 4, 13, 267, 309, 336], "seamlessli": [3, 4, 10, 12, 14, 16, 162, 164, 167, 309, 328, 416], "search": 154, "second": [19, 164, 165, 194, 228, 270, 315, 316, 317, 318, 319, 325, 338, 340, 341, 342, 343, 344, 345, 346, 347, 348, 390, 392, 413], "section": 342, "see": [15, 342], "seed": [329, 330, 331, 332, 333, 335, 336, 416], "seek": 102, "seen": 313, "select": [13, 14, 140, 141, 142, 143, 144, 154, 220, 228, 229, 295, 297, 379], "selectivekernel": 230, "self": [0, 1, 2, 3, 15, 28, 30, 59, 60, 73, 77, 82, 86, 90, 91, 92, 93, 103, 130, 145, 152, 154, 155, 156, 160, 161, 162, 163, 164, 165, 166, 174, 187, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 259, 260, 261, 262, 263, 267, 270, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 301, 302, 303, 305, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 327, 405, 406], "selfattent": 305, "selu": [171, 185, 193, 251, 259, 269], "selunetwork": 246, "semodul": 230, "senet": [85, 131, 132, 133, 134, 135, 136, 137, 138, 139, 154], "sensit": [199, 276, 280, 281, 282], "sentiment": 4, "separ": [0, 90, 110, 111, 150, 154, 180, 181, 182, 225, 226, 227, 284, 285, 286], "seq_len": [179, 252, 253, 301, 302, 303, 304, 305], "sequenc": [22, 112, 123, 140, 156, 163, 165, 179, 180, 252, 299, 301, 302, 304, 305, 349, 354, 388, 390, 393, 395, 399, 400, 404, 405], "sequenti": [28, 82, 86, 130, 145, 150, 152, 154, 155, 163, 164, 168, 180, 222, 223, 224, 267, 271, 302, 304, 405, 416], "seri": [73, 87, 88, 140, 180, 222, 255, 292, 295], "serial": [160, 161, 311], "serv": [3, 7, 54, 82, 130, 145, 156, 161, 163, 164, 165, 166, 167, 309, 321, 406], "set": [3, 4, 5, 6, 7, 8, 30, 98, 99, 100, 110, 111, 121, 122, 136, 137, 138, 139, 144, 155, 162, 166, 179, 180, 181, 182, 218, 243, 244, 246, 253, 255, 256, 257, 259, 264, 265, 270, 272, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 299, 310, 315, 316, 320, 329, 331, 332, 333, 334, 335, 336, 337, 349, 351, 352, 357, 358, 364, 370, 372, 385, 401, 402, 406, 410, 416], "setup": [4, 15, 124, 125, 126, 127, 128, 129], "sever": [24, 255, 256, 257, 292, 293, 294, 295, 296, 297, 326, 405, 416], "sgd": [15, 312, 319, 323], "sgn": 23, "shape": [3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 18, 19, 21, 22, 24, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 77, 78, 79, 80, 81, 82, 86, 92, 96, 97, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 124, 125, 126, 127, 128, 129, 130, 136, 137, 138, 139, 141, 142, 143, 144, 145, 150, 152, 154, 155, 160, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 228, 229, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 255, 256, 257, 259, 260, 262, 263, 264, 265, 267, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 309, 325, 328, 329, 331, 332, 333, 335, 336, 337, 340, 351, 352, 353, 355, 356, 357, 358, 364, 369, 370, 371, 372, 375, 377, 379, 383, 384, 386, 388, 389, 390, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 404, 407, 408, 409, 410, 411, 412, 413, 414, 416], "shapelik": 332, "share": 154, "shen": 228, "shift": [203, 204, 206, 207, 241, 280, 281, 282, 283, 284, 285, 286, 287], "shorthand": 342, "should": [12, 13, 14, 86, 160, 267, 301, 302, 303, 304, 305, 326, 329, 331, 332, 333, 335, 351, 352, 361, 362, 382, 386, 393, 405], "show": [324, 327], "showcas": 15, "shown": [249, 334], "shrink": 313, "shuffl": [1, 2, 3], "side": [26, 164, 167, 180, 181, 182, 211, 212, 213, 215, 216, 217, 222, 223, 224, 255, 256, 257, 292, 293, 294, 295, 296, 297, 326], "sigma": [24, 30, 228, 233, 235, 237, 247, 249, 280, 281, 282, 284, 285, 286, 287, 383], "sigma_c": 408, "sigma_i": 24, "sigmoid": [171, 193, 228, 233, 234, 237, 238, 241, 242, 249, 251, 269, 274], "sigmoidnetwork": 247, "sign": [22, 276, 321, 359], "signal": [222, 255, 256, 257, 280, 284, 292, 293, 294, 295, 296, 297], "signific": [42, 326], "significantli": [91, 123, 154, 228, 405], "sim": [259, 262, 263, 264, 265], "similar": [10, 15, 233, 234, 342, 369, 385, 386, 393], "similarli": [27, 382], "simonyan": 154, "simpl": [3, 4, 15, 155, 167, 180, 181, 182, 194, 196, 211, 212, 213, 215, 216, 217, 240, 241, 242, 244, 245, 246, 247, 249, 250, 255, 256, 257, 259, 262, 263, 264, 265, 270, 272, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 292, 293, 294, 295, 296, 297, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 340, 341, 346, 405], "simplebinaryclassificationmodel": 274, "simpleblock": 187, "simpleclassificationmodel": [275, 278], "simplegelumodel": 240, "simplehardsigmoidmodel": 241, "simplehardswishmodel": 242, "simpleleakyrelumodel": 243, "simplemodel": [15, 155, 245, 261, 272, 327], "simpleregressionmodel": 277, "simplerelumodel": 244, "simpleselumodel": 246, "simplesigmoidmodel": 247, "simpleswishmodel": 249, "simpletanhmodel": 250, "simpli": [324, 382, 383, 396], "simplic": [154, 241, 244], "simplifi": [4, 12, 14, 69, 70, 71, 72, 87, 151, 154, 167, 222, 223, 224, 267], "simul": [155, 416], "simultan": 221, "sin": [359, 365], "sinc": [22, 25, 163, 164, 165, 166, 180, 181, 182, 238, 324, 326, 329, 333, 392, 416], "sine": [362, 375, 376], "singl": [0, 4, 22, 25, 27, 112, 176, 222, 223, 224, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 255, 256, 257, 275, 287, 293, 294, 295, 296, 297, 302, 303, 304, 305, 310, 328, 335, 351, 354, 388, 398, 408, 410, 416], "singleton": [14, 287], "singular": [18, 21, 22, 24, 26, 27], "sinh": [359, 366, 381], "size": [0, 1, 2, 3, 10, 12, 13, 14, 27, 30, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 77, 80, 86, 87, 88, 89, 93, 94, 96, 97, 112, 140, 152, 154, 155, 156, 157, 158, 162, 164, 179, 180, 181, 182, 184, 186, 189, 190, 191, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 252, 255, 256, 257, 260, 267, 270, 272, 274, 275, 278, 280, 281, 282, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 304, 305, 307, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 327, 332, 335, 336, 337, 370, 371, 372, 379, 384, 386, 387, 388, 390, 397, 398, 403, 404, 407, 409, 414, 416], "size_or_sect": 397, "sk": [140, 141, 142, 143, 144, 154, 229], "sk_resnet_18": 154, "sk_resnet_34": 154, "sk_resnet_50": 154, "sk_resnext_50_32x4d": 154, "skblock": 140, "skip": [154, 326], "sknet": [85, 141, 142, 143, 144, 154], "slice": [194, 382], "slide": [184, 292, 294, 295, 297], "slight": 228, "slightli": 416, "slope": [172, 239, 243], "slow": [3, 319], "small": [24, 43, 45, 47, 50, 69, 70, 71, 72, 79, 80, 87, 88, 89, 92, 96, 97, 100, 154, 172, 186, 197, 198, 203, 204, 206, 207, 243, 246, 260, 274, 275, 276, 280, 281, 282, 283, 284, 285, 286, 287, 293, 296, 301, 303, 305, 313, 314, 315, 316, 317, 318, 319, 320, 321], "smaller": [10, 44, 69, 70, 71, 72, 98, 152, 154, 164, 167, 309, 314, 315, 344, 387, 407, 409, 414], "smallest": 372, "smooth": [75, 170, 239, 240, 249, 312, 320, 416], "smoother": 312, "so": [163, 164, 165, 166, 221, 309, 319, 351, 352, 405], "softmax": [30, 171, 179, 193, 229, 251, 252, 253, 269, 275, 303, 305], "softmaxmodel": 248, "solut": [24, 26], "solv": [16, 17, 20, 24, 25, 27], "solver": 16, "some": [169, 187, 188, 221, 259, 261, 262, 263, 280, 281, 282, 284, 285, 286, 314, 315, 316, 326, 328, 387], "sometim": 325, "sophist": [164, 167], "sourc": [156, 157, 158, 179, 301, 336], "space": [19, 25, 27, 156, 180, 181, 182, 184, 208, 209, 210, 222, 223, 224, 225, 226, 227, 255, 256, 257, 289, 290, 291, 349, 354, 416], "span": 4, "spars": [314, 315], "spatial": [28, 30, 112, 123, 140, 145, 152, 154, 186, 204, 223, 228, 256, 257, 280, 281, 282, 284, 285, 286, 287, 293, 294, 295, 296, 297, 307, 392], "spatial_dim": 228, "spatio": 257, "special": [0, 1, 15, 24, 160, 161, 162, 259, 336], "specif": [4, 15, 55, 56, 57, 58, 69, 70, 71, 72, 82, 90, 98, 99, 100, 101, 102, 110, 111, 121, 122, 163, 164, 165, 166, 167, 229, 238, 259, 262, 263, 264, 265, 284, 285, 286, 299, 309, 310, 324, 336, 351, 370, 372, 395, 400], "specifi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 23, 29, 54, 60, 86, 93, 94, 95, 98, 99, 100, 101, 103, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 140, 142, 143, 145, 146, 147, 148, 149, 151, 153, 155, 164, 176, 184, 191, 197, 198, 199, 201, 202, 207, 208, 209, 210, 218, 220, 221, 228, 248, 252, 255, 256, 257, 267, 274, 275, 276, 277, 278, 287, 289, 290, 291, 293, 294, 295, 296, 297, 299, 307, 310, 328, 331, 332, 333, 334, 335, 347, 349, 350, 351, 352, 353, 354, 355, 357, 358, 364, 370, 371, 372, 379, 383, 384, 385, 386, 387, 388, 390, 393, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 412, 414, 416], "speech": 284, "speed": [96, 97, 241, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322], "split": [4, 103, 110, 111, 154, 252, 387, 388, 390, 391, 404], "split_tensor": 397, "springer": 154, "sqrt": [30, 170, 179, 204, 233, 234, 237, 238, 240, 252, 253, 280, 281, 282, 283, 284, 285, 286, 287, 303, 305, 313, 314, 315, 316, 318, 319, 320, 359, 361, 362], "squar": [1, 3, 17, 18, 19, 21, 22, 24, 25, 26, 27, 186, 199, 201, 260, 276, 277, 313, 314, 315, 320, 359, 377], "squaredataset": [0, 1, 2, 3], "squeez": [59, 92, 96, 97, 130, 133, 136, 137, 138, 139, 154, 228, 391], "src": [154, 301, 304, 305], "src_key_pad": 304, "src_key_padding_mask": [301, 305], "src_mask": [301, 304, 305], "src_vocab_s": [156, 157, 158], "stabil": [21, 24, 30, 154, 186, 197, 198, 203, 204, 206, 207, 218, 222, 223, 224, 245, 260, 274, 275, 280, 281, 282, 283, 284, 285, 286, 287, 299, 301, 303, 305, 312, 313, 314, 315, 316, 317, 318, 319, 320, 408], "stabl": [233, 234, 237, 238, 259, 275, 312, 316, 317, 320, 321, 322], "stack": [14, 167, 229, 301, 302, 304, 390, 391, 404, 416], "stage": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 77, 103, 104, 105, 106, 107, 108, 109, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 140, 141, 142, 143, 154], "stage1": 130, "stage2": 130, "stage3": 130, "stage4": 130, "standalon": 245, "standard": [41, 46, 79, 98, 101, 112, 121, 122, 156, 157, 170, 172, 225, 226, 227, 233, 235, 237, 239, 240, 243, 259, 301, 321, 333, 336, 342, 405, 408, 416], "start": [1, 3, 10, 312, 314, 321, 349, 354, 407, 409], "state": [48, 154, 160, 161, 162, 164, 167, 310, 324, 326, 334], "state_dict": [161, 162, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322], "static": 167, "statist": [24, 185, 203, 206], "std": [5, 6, 7, 8, 235, 405, 408, 416], "stem": [82, 103, 112, 123, 140, 154], "stem_typ": 112, "stem_width": [103, 104, 105, 106, 107, 108, 109, 112], "step": [10, 30, 162, 184, 229, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 326, 349, 405, 406], "step_siz": 321, "still": [51, 313], "stochast": [15, 39, 40, 59, 60, 77, 187, 261, 312, 322], "stochastic_depth": 59, "stop": [349, 354], "storag": [163, 165, 337], "store": [2, 4, 5, 6, 7, 8, 112, 123, 140, 160, 161, 162, 163, 164, 165, 166, 228, 289, 290, 291, 326, 337, 407, 408, 409, 410, 411, 412, 413, 414], "str": [5, 6, 7, 8, 10, 12, 13, 14, 30, 93, 112, 145, 161, 163, 165, 167, 197, 198, 199, 201, 202, 220, 267, 307, 310, 327, 392], "straightforward": [322, 324, 338], "strategi": [30, 101, 154, 311], "streamlin": [2, 3, 154], "strength": [30, 260], "strict": [161, 310], "stride": [60, 86, 87, 88, 89, 92, 93, 96, 97, 164, 167, 180, 181, 182, 184, 208, 209, 210, 211, 212, 213, 215, 216, 217, 222, 223, 224, 225, 226, 227, 229, 255, 256, 257, 289, 290, 291, 292, 293, 294, 295, 296, 297], "stride_height": 184, "stride_width": 184, "strike": [46, 93, 100], "string": [10, 12, 13, 14, 161, 163, 165, 167, 255, 256, 257, 267, 310], "strong": 30, "structur": [0, 10, 13, 15, 25, 30, 60, 92, 150, 160, 161, 164, 186, 260, 267, 309, 310, 327, 328, 353, 406], "style": [10, 82, 206, 284, 285, 392], "sub": [163, 164, 165, 166, 167, 309, 359, 387, 397, 407, 409], "sub_tensor": 337, "subclass": [1, 2, 3, 15, 161, 162, 163, 309, 310], "sublay": [155, 301, 303, 305], "submodul": [155, 161, 309], "subsequ": [164, 167, 238, 336], "subset": [110, 111, 262, 263], "subspac": 252, "subtract": [15, 348, 408], "suffer": 314, "suit": [51, 55, 56, 57, 58, 75, 90, 98, 99, 101, 140, 233, 234, 237, 238], "suitabl": [41, 43, 44, 47, 49, 61, 62, 63, 64, 65, 66, 67, 68, 82, 87, 88, 89, 91, 96, 97, 99, 102, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 132, 133, 135, 154, 157, 276, 314, 315, 331], "sum": [10, 13, 23, 163, 164, 165, 166, 167, 176, 179, 197, 198, 199, 201, 202, 229, 248, 274, 275, 276, 277, 278, 314, 338, 341, 346, 359, 382, 384, 386, 388, 390, 392, 395, 397, 400, 404], "sum_": [12, 13, 22, 30, 176, 204, 248, 267, 274, 275, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 340, 341, 371, 379, 382, 384, 386, 392, 395], "sum_i": [23, 346], "sum_j": 346, "sum_k": 342, "summar": [31, 32, 33, 34, 35, 36, 37, 38, 59, 121, 122, 150, 292, 293, 294], "summari": [121, 122, 136, 137, 138, 139, 144], "summat": [10, 12, 13, 14, 22], "sun": 228, "super": [15, 155, 160, 161, 162, 163, 164, 165, 166, 187, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 259, 261, 262, 263, 270, 272, 274, 275, 276, 277, 278, 280, 281, 282, 284, 287, 292, 293, 294, 295, 296, 297, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 327], "superior": [53, 154], "supplementari": 101, "support": [1, 3, 4, 12, 15, 16, 22, 23, 24, 25, 27, 94, 112, 163, 164, 165, 166, 167, 179, 220, 221, 253, 299, 307, 309, 311, 318, 336, 337, 338, 339, 342, 343, 344, 345, 347, 348, 350, 353, 364, 369, 371, 375, 377, 379, 382, 383, 384, 388, 392, 396, 397, 406, 416], "suppos": 416, "sure": [309, 416], "svd": [20, 24], "swap": [12, 267], "swish": [96, 97, 251, 269], "symbol": [12, 13, 14, 267], "symmetr": [17, 208, 209, 210, 237, 238, 250], "syntax": [1, 10, 12, 13, 14, 267, 342], "system": [16, 17, 24, 25, 26, 100, 154, 324, 392], "systemat": [154, 416], "szegedi": [74, 154], "t": [10, 24, 30, 154, 301, 302, 303, 305, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 326, 337, 342, 385, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416], "t0": 312, "t1": 385, "t2": 385, "t_": 302, "t_0": 302, "t_i": 302, "tabl": [31, 32, 33, 34, 35, 36, 37, 38, 59, 299], "tabular": 4, "tailor": [4, 92, 100, 104, 105, 106, 107, 108, 109, 309, 416], "take": [25, 292, 293, 294, 295, 296, 297, 307, 326, 405], "taken": 382, "tan": [154, 359], "tangent": [177, 250, 363, 380, 381], "tanh": [86, 164, 167, 170, 171, 193, 233, 234, 237, 238, 240, 251, 269, 359], "tanhnetwork": 250, "target": [5, 6, 7, 8, 51, 156, 157, 158, 167, 197, 198, 199, 201, 202, 208, 209, 210, 220, 274, 275, 276, 277, 278, 289, 290, 291, 301, 302, 303, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 386, 407, 409, 414], "target_tensor": [274, 275, 276, 277, 278], "target_transform": [5, 6, 7, 8], "task": [4, 15, 16, 28, 29, 30, 39, 40, 41, 42, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 79, 82, 83, 84, 87, 88, 89, 90, 91, 92, 93, 96, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 144, 150, 154, 156, 157, 158, 175, 176, 181, 194, 197, 198, 201, 202, 228, 229, 247, 248, 255, 256, 257, 274, 275, 276, 277, 278, 284, 285, 286, 292, 294, 295, 297, 301, 315, 325, 336, 353, 354, 416], "techniqu": [17, 21, 39, 60, 77, 101, 152, 154, 187, 203, 259, 260, 262, 263, 264, 265, 284, 285, 286, 311, 414, 416], "templat": 156, "tempor": [255, 257, 294, 297], "temporarili": 326, "tensor": [2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 69, 70, 71, 72, 74, 75, 76, 82, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 112, 124, 125, 126, 127, 128, 129, 130, 141, 142, 143, 145, 150, 152, 155, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 307, 309, 324, 326, 328, 329, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416], "term": [12, 24, 52, 194, 222, 223, 224, 225, 226, 227, 252, 301, 303, 305, 312, 316, 318, 319, 320, 322], "test": [4, 5, 6, 7, 8, 354], "test_backward": 155, "test_siz": [5, 6, 7, 8], "text": [4, 18, 22, 23, 30, 112, 123, 140, 141, 142, 143, 150, 163, 169, 172, 173, 174, 176, 179, 180, 181, 182, 187, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 237, 238, 239, 241, 242, 243, 244, 245, 246, 248, 249, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 274, 275, 276, 277, 278, 292, 293, 294, 295, 296, 297, 299, 301, 302, 304, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 332, 338, 339, 341, 343, 344, 345, 347, 348, 360, 364, 370, 371, 372, 374, 379, 384, 386, 388, 390, 393, 394, 395, 396, 397, 398, 400, 401, 402, 403, 404, 407, 408, 409, 411, 412, 413], "tgt": [154, 301, 302, 303], "tgt_is_caus": [302, 303], "tgt_key_padding_mask": [301, 302, 303], "tgt_mask": [301, 302, 303], "tgt_vocab_s": [156, 157, 158], "th": [194, 274, 275, 277, 278, 284, 285, 286, 343, 344, 347], "than": [0, 1, 7, 12, 14, 165, 166, 169, 172, 199, 225, 226, 227, 239, 243, 249, 267, 276, 310, 316, 354, 364, 382, 386, 387, 393, 399, 407, 409, 414], "thei": [0, 15, 27, 154, 160, 164, 166, 167, 252, 328, 392, 396, 407, 409, 416], "them": [3, 10, 154, 161, 166, 184, 312, 325, 388, 399, 405, 408, 416], "therebi": [259, 293, 294, 296, 297], "theta": [312, 313, 412], "theta_": [312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322], "theta_t": [319, 320], "thi": [0, 1, 2, 3, 5, 6, 7, 8, 12, 13, 14, 15, 18, 19, 21, 22, 23, 24, 25, 26, 27, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 53, 54, 55, 56, 57, 58, 74, 75, 76, 82, 83, 84, 86, 90, 91, 92, 93, 95, 96, 97, 98, 99, 100, 101, 102, 112, 121, 122, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 140, 141, 142, 143, 144, 150, 154, 155, 156, 160, 162, 164, 165, 166, 167, 173, 175, 176, 177, 180, 181, 182, 184, 186, 187, 194, 196, 208, 218, 220, 221, 225, 226, 227, 228, 229, 233, 234, 237, 238, 239, 240, 241, 243, 244, 246, 247, 248, 249, 250, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 270, 271, 272, 274, 275, 276, 278, 280, 281, 282, 284, 285, 286, 287, 289, 292, 293, 294, 295, 296, 297, 299, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 332, 333, 334, 336, 337, 341, 342, 346, 349, 351, 355, 356, 357, 358, 364, 368, 369, 370, 371, 372, 375, 377, 379, 382, 383, 384, 385, 386, 387, 393, 395, 396, 401, 402, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416], "thing": 326, "those": [15, 87, 88, 89, 166, 238], "three": [27, 89, 182, 210, 213, 217, 222, 223, 224, 257, 265, 282, 286, 291, 294, 297], "threshold": [24, 199, 276], "through": [0, 3, 4, 14, 15, 19, 24, 25, 27, 28, 39, 73, 82, 86, 93, 113, 114, 115, 116, 117, 118, 119, 120, 123, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 141, 142, 143, 151, 152, 154, 163, 164, 167, 186, 194, 196, 220, 228, 229, 239, 240, 241, 242, 243, 244, 246, 247, 249, 250, 255, 256, 257, 259, 262, 263, 264, 265, 270, 271, 272, 280, 281, 282, 284, 287, 292, 293, 294, 295, 296, 297, 301, 302, 304, 305, 329, 333, 340, 341, 346, 392, 394, 396, 398, 401, 402, 403, 416], "throughout": [156, 174, 406], "tier": 48, "tile": [14, 391], "time": [0, 3, 22, 87, 88, 89, 91, 180, 222, 243, 246, 252, 255, 292, 293, 294, 295, 296, 297, 302, 304, 312, 313, 314, 315, 316, 320, 322, 326, 395, 400], "tini": [43, 44, 52, 77, 81, 154], "to_tensor": [5, 6, 7, 8], "togeth": [167, 405, 416], "token": [77, 299], "token_mix": 77, "too": 321, "tool": [3, 15, 309, 325, 336, 405, 416], "top": [17, 18, 19, 25, 27, 48, 179, 194, 196, 220, 252, 253, 255, 256, 257, 270, 272, 407, 409], "torch": [145, 385], "toronto": [5, 6], "total": [0, 1, 2, 5, 6, 7, 8, 10, 12, 14, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 155, 157, 158, 162, 252, 267, 337, 396], "totensor": [405, 416], "trace": [16, 359], "track": [15, 222, 223, 224, 280, 281, 282, 284, 285, 286, 309, 324, 326, 329, 331, 332, 333, 335, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 385, 386, 406], "track_running_stat": [222, 223, 224, 280, 281, 282, 284, 285, 286], "trade": [43, 99], "tradit": [7, 10, 30, 102, 154, 313, 314, 317, 318, 319], "trail": 207, "train": [1, 2, 3, 4, 5, 6, 7, 8, 15, 30, 39, 60, 73, 74, 75, 136, 137, 138, 139, 144, 154, 155, 156, 160, 161, 164, 166, 167, 176, 185, 186, 187, 188, 189, 190, 191, 203, 206, 218, 221, 240, 243, 246, 247, 248, 250, 259, 260, 261, 262, 263, 264, 265, 280, 281, 282, 284, 285, 286, 299, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 326, 405, 408, 409, 410, 411, 412, 413, 416], "trainabl": [155, 280, 281, 282, 284, 285, 286, 299, 309], "transact": 228, "transfer": [206, 284, 285], "transform": [2, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 19, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 157, 158, 165, 179, 194, 196, 252, 253, 267, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 302, 303, 304, 305, 325, 392], "transform_pipelin": [405, 416], "transformed_imag": [405, 416], "transformer_bas": 154, "transformer_big": 154, "transformer_decod": 302, "transformer_encod": 304, "transformerdecod": [269, 301, 306], "transformerdecoderlay": [269, 301, 302, 306], "transformerencod": [269, 301, 306], "transformerencoderlay": [269, 301, 304, 306], "transit": [30, 54, 276], "translat": [156, 293, 296, 301], "transpos": [12, 15, 17, 359], "transposit": [12, 267], "treat": [0, 160, 287, 309], "triangular": [17, 25, 302, 303, 304, 305, 401, 402], "tril": 391, "triu": 391, "true": [1, 2, 3, 4, 5, 6, 7, 8, 27, 73, 74, 75, 96, 97, 103, 155, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 179, 184, 185, 187, 188, 189, 190, 191, 194, 196, 203, 206, 218, 220, 222, 223, 224, 225, 226, 227, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 252, 253, 255, 256, 257, 259, 261, 262, 263, 264, 265, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 292, 293, 294, 295, 296, 297, 301, 302, 303, 304, 305, 307, 309, 310, 315, 316, 320, 324, 329, 331, 332, 333, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 390, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 406], "truncat": 155, "truncate_from": 155, "try": 0, "tune": [99, 102, 416], "tupl": [2, 3, 5, 6, 7, 8, 19, 23, 25, 27, 30, 54, 112, 155, 161, 162, 180, 181, 182, 184, 207, 209, 210, 211, 212, 213, 215, 216, 217, 220, 221, 222, 223, 224, 225, 226, 227, 255, 256, 257, 271, 287, 290, 291, 292, 293, 294, 295, 296, 297, 307, 315, 316, 317, 318, 319, 321, 328, 331, 332, 333, 335, 337, 351, 355, 357, 370, 371, 372, 379, 384, 386, 387, 388, 390, 392, 393, 396, 397, 398, 399, 403, 404, 407, 408, 409, 414], "twice": 393, "two": [15, 18, 19, 21, 22, 24, 25, 27, 87, 88, 89, 92, 110, 111, 141, 145, 180, 181, 182, 194, 212, 216, 228, 229, 256, 264, 270, 281, 285, 293, 296, 305, 315, 316, 317, 318, 319, 321, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 382, 387, 392, 397], "type": [31, 32, 33, 34, 35, 36, 37, 38, 77, 86, 103, 112, 130, 140, 160, 161, 162, 194, 270, 301, 303, 305, 337, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 385, 392, 406], "typeerror": [0, 1, 2, 161, 310], "typic": [16, 30, 93, 99, 112, 123, 140, 160, 176, 185, 186, 221, 228, 245, 246, 248, 260, 261, 278, 280, 281, 282, 284, 285, 286, 311, 312, 320, 322, 326, 328, 403, 406, 408, 412, 414, 416], "u": [24, 27, 234, 236, 238], "u_": 317, "ultra": [45, 118], "unchang": [160, 191, 239, 243, 244, 246, 259, 262, 263, 264, 265, 271, 394, 398], "undefin": 347, "under": [124, 125, 126, 127, 128, 129, 309], "underbrac": 22, "underdetermin": 24, "undergo": [187, 305, 416], "underli": [0, 15, 69, 70, 71, 72, 74, 75, 76, 83, 84, 385, 390, 394, 396, 404], "understand": [15, 152, 154, 155, 167, 416], "understood": 12, "unexpect": [10, 161, 164, 167, 336], "unfold": [183, 193], "unifi": 0, "uniform": [232, 234, 238, 255, 256, 257, 270, 272, 330, 331, 332, 336, 410, 411, 412, 413], "uniformli": [331, 335], "uniniti": [351, 352], "unintend": [10, 13, 326], "union": 145, "uniqu": [17, 24, 26, 163, 165, 299], "unit": [28, 86, 152, 169, 170, 172, 173, 174, 233, 234, 237, 238, 239, 240, 243, 244, 246, 259], "unless": [113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 337], "unlik": [30, 160, 163, 164, 165, 166, 172, 239, 243, 259, 287, 313, 314, 316, 317, 318, 319, 321], "unnecessari": [10, 326], "unpad": 393, "unseen": 416, "unsqueez": 391, "unstabl": 21, "unsur": 10, "up": [310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 412, 414], "updat": [4, 40, 160, 166, 167, 259, 262, 263, 264, 265, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 326], "upon": [40, 75, 92, 93, 154, 163, 164, 165, 166], "upper": [25, 236, 321, 335, 401, 402], "upper_triangular": 402, "upsampl": [269, 308], "us": [0, 2, 3, 4, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 19, 21, 22, 24, 25, 27, 30, 39, 54, 59, 60, 73, 74, 75, 76, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 130, 131, 132, 133, 134, 135, 140, 141, 142, 143, 154, 155, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 194, 196, 201, 203, 204, 206, 209, 210, 218, 220, 221, 222, 223, 224, 228, 229, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 290, 291, 292, 293, 294, 295, 296, 297, 299, 301, 307, 309, 310, 311, 324, 325, 326, 327, 329, 331, 332, 333, 335, 336, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 368, 370, 371, 372, 379, 384, 392, 393, 395, 397, 398, 400, 401, 402, 403, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416], "usag": [3, 16, 41, 42, 43, 44, 52, 53, 54, 150, 164, 167, 187, 225, 226, 227, 253, 260, 310, 311, 354, 407, 408, 409, 410, 411, 412, 413, 414], "use_aux": [73, 74, 75], "use_h": [96, 97], "use_s": [96, 97], "user": [1, 2, 3, 4, 15, 102, 163, 164, 165, 166, 309, 314, 405, 406, 416], "usual": 275, "util": [3, 15, 16, 30, 93, 141, 142, 143, 165, 166, 186, 309, 336], "v": [19, 24, 27, 30, 154, 179, 252, 253, 303, 305, 315, 316, 318, 319, 350], "v1": [73, 74, 82, 83, 84, 90, 91, 154], "v2": [45, 46, 47, 48, 49, 50, 51, 52, 60, 69, 70, 71, 72, 82, 84, 85, 91, 92, 95, 154], "v3": [73, 75, 76, 85, 92, 96, 97, 154], "v4": [73, 76, 85, 93, 99, 100, 101, 102, 154], "v_": [312, 315, 316, 318, 319, 320, 322], "v_i": 252, "v_stack": 404, "v_t": [319, 320], "val": 231, "valid": [222, 223, 224, 225, 226, 227, 229, 255, 256, 257, 383], "valu": [10, 15, 18, 22, 23, 24, 27, 39, 77, 90, 93, 101, 121, 122, 155, 161, 163, 165, 167, 169, 172, 175, 176, 177, 179, 180, 181, 182, 184, 186, 187, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 220, 221, 222, 223, 224, 228, 231, 233, 234, 235, 236, 237, 238, 239, 243, 244, 245, 246, 247, 250, 252, 253, 259, 260, 261, 262, 263, 264, 265, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 292, 293, 294, 295, 296, 297, 301, 302, 303, 304, 305, 307, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 328, 329, 331, 332, 333, 334, 335, 336, 349, 350, 351, 352, 353, 354, 360, 361, 362, 364, 367, 368, 369, 370, 372, 374, 375, 377, 378, 388, 393, 394, 396, 403, 408, 410, 411, 413], "valuabl": 336, "valueerror": [1, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 310], "van": 154, "vanish": [154, 239, 246, 280, 281, 282], "var": 359, "vari": [39, 140, 164, 166, 208, 220, 289, 412], "variabl": [161, 167, 208, 209, 210, 271, 289, 290, 291, 309, 324, 326, 331, 351, 409, 412], "varianc": [174, 185, 203, 206, 222, 223, 224, 233, 234, 237, 238, 246, 259, 280, 281, 282, 284, 285, 286, 287, 315, 316, 317, 318, 319, 333, 384, 412, 416], "variant": [31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 69, 70, 71, 72, 78, 79, 80, 81, 92, 93, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 121, 122, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 158, 315, 316, 317], "variat": [225, 226, 227, 284, 285, 286, 409, 416], "varieti": [4, 82, 103, 336, 416], "variou": [7, 10, 12, 13, 30, 54, 73, 83, 84, 86, 93, 94, 102, 154, 244, 311, 336, 354, 370, 372, 393, 406], "vasudevan": 154, "vaswani": [154, 301], "vdim": 252, "vdot": 346, "vector": [14, 19, 24, 25, 26, 27, 194, 196, 218, 252, 270, 272, 299, 340, 341, 342, 346], "veloc": [312, 320, 322], "verbos": 12, "veri": [24, 47, 115, 117, 154, 313], "verifi": 10, "versa": 321, "versatil": [30, 102, 336, 392], "version": [27, 39, 73, 77, 82, 86, 87, 88, 99, 267, 320, 346, 410], "vertic": [399, 404, 413], "vgg": 145, "vggnet": [85, 146, 147, 148, 149, 154], "vggnet_11": 154, "vggnet_13": 154, "vggnet_16": 154, "vggnet_19": 154, "via": [3, 4, 102, 140], "vice": 321, "video": [182, 191, 224, 257, 286, 294, 297], "view": [82, 86, 164, 293, 294, 295, 296, 297, 386, 396], "vinod": [5, 6], "vision": [30, 90, 91, 95, 103, 112, 154, 181, 256, 270, 416], "visual": [152, 154], "vit": [30, 154], "vocabulari": [156, 157, 158, 299], "vol": 154, "vollgraf": 7, "volumetr": [182, 191, 224, 257, 286, 294, 297], "vstack": 391, "w": [10, 12, 13, 14, 30, 112, 124, 125, 126, 127, 128, 129, 141, 142, 143, 154, 181, 182, 184, 186, 190, 191, 194, 196, 204, 209, 210, 212, 213, 216, 217, 220, 221, 223, 224, 228, 252, 255, 256, 257, 267, 270, 272, 281, 282, 283, 285, 286, 290, 291, 294, 297, 407, 409], "w_": [181, 182, 209, 210, 212, 213, 216, 217, 220, 256, 257, 290, 291, 293, 294, 296, 297], "w_1": [303, 305], "w_2": [303, 305], "w_k": 30, "w_out": [181, 182, 212, 213, 216, 217], "wa": [74, 259, 262, 263, 264, 265, 326], "wai": [1, 10, 12, 14, 29, 153, 267, 324, 326, 396], "wang": 154, "want": [0, 15, 405, 407], "warn": [163, 165, 252], "we": [3, 15, 325, 392], "wei": 154, "weight": [110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 154, 179, 180, 181, 182, 194, 196, 197, 198, 202, 203, 206, 207, 218, 220, 228, 229, 233, 234, 237, 238, 252, 253, 255, 256, 257, 259, 260, 262, 263, 264, 265, 270, 272, 274, 275, 278, 280, 281, 282, 284, 285, 286, 287, 299, 301, 302, 303, 304, 305, 309, 312, 313, 314, 315, 316, 317, 318, 319, 320, 322, 331, 336], "weight1": 165, "weight2": 165, "weight_decai": [312, 313, 314, 315, 316, 317, 318, 319, 320, 322], "weihao": 154, "weinberg": 154, "well": [51, 55, 56, 57, 58, 60, 75, 99, 140, 233, 234], "were": 167, "weyand": 154, "what": [12, 14, 267, 326], "when": [0, 1, 3, 10, 13, 15, 22, 59, 154, 161, 164, 166, 167, 169, 172, 180, 181, 182, 218, 239, 261, 271, 280, 281, 282, 284, 285, 286, 307, 310, 313, 321, 324, 326, 327, 328, 336, 347, 386, 405, 407], "where": [3, 4, 5, 6, 7, 8, 12, 13, 14, 18, 19, 21, 22, 23, 24, 25, 27, 96, 97, 98, 99, 100, 101, 150, 154, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 187, 189, 190, 191, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 228, 229, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 255, 256, 257, 259, 262, 263, 264, 265, 267, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 326, 328, 336, 338, 339, 343, 344, 345, 347, 348, 351, 352, 364, 368, 369, 370, 371, 372, 375, 377, 379, 382, 383, 384, 387, 388, 393, 395, 397, 400, 401, 402, 405, 406, 407, 408, 409, 410, 411, 412, 413], "whether": [1, 18, 30, 59, 73, 74, 75, 96, 97, 103, 161, 162, 233, 234, 261, 320, 324, 329, 331, 332, 333, 335, 337, 351, 352, 370, 371, 372, 379, 384], "which": [0, 7, 13, 15, 18, 19, 21, 22, 23, 24, 25, 27, 31, 32, 33, 34, 35, 36, 37, 38, 60, 76, 84, 90, 91, 93, 94, 98, 104, 105, 106, 107, 108, 109, 110, 111, 136, 137, 138, 139, 140, 144, 146, 147, 148, 149, 154, 156, 161, 163, 165, 167, 172, 176, 199, 221, 225, 226, 227, 229, 239, 240, 243, 245, 248, 250, 259, 276, 278, 280, 281, 282, 284, 285, 286, 287, 299, 303, 305, 315, 316, 318, 320, 324, 326, 328, 331, 332, 335, 361, 362, 363, 364, 365, 366, 369, 370, 371, 372, 373, 375, 376, 377, 379, 380, 381, 382, 384, 386, 387, 388, 395, 396, 397, 399, 401, 402, 403, 406, 407, 409, 410, 411, 412, 413, 414, 416], "while": [15, 30, 40, 45, 51, 52, 69, 70, 71, 72, 80, 84, 90, 100, 123, 124, 125, 126, 127, 128, 129, 136, 137, 138, 139, 144, 154, 164, 167, 185, 186, 240, 244, 245, 261, 302, 309, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 326, 396, 399, 410, 416], "who": [15, 163, 164, 165, 166], "whose": [27, 352, 356, 358, 360, 364, 368, 374], "wide": [4, 5, 6, 8, 16, 24, 52, 102, 112, 120, 121, 122, 154, 173, 244, 255, 256, 275], "wide_resnet_101": 154, "wide_resnet_50": 154, "wider": [43, 121, 122, 180, 181], "wideresnet": 154, "width": [30, 59, 60, 90, 94, 103, 110, 111, 121, 122, 123, 124, 125, 126, 127, 128, 129, 140, 150, 154, 181, 182, 184, 190, 191, 204, 209, 210, 212, 213, 216, 217, 220, 221, 229, 256, 257, 281, 282, 283, 285, 286, 290, 291, 293, 294, 296, 297, 307, 407, 409, 414], "width_coef": 59, "width_multipli": [90, 94], "window": [211, 212, 213, 215, 216, 217, 292, 293, 294, 295, 296, 297, 313, 370, 372], "wise": [10, 14, 134, 136, 137, 138, 139, 154, 169, 170, 172, 173, 174, 175, 176, 177, 187, 222, 223, 224, 228, 242, 248, 249, 259, 261, 262, 263, 264, 265, 309, 325, 338, 339, 342, 343, 344, 345, 347, 348, 360, 361, 362, 363, 364, 365, 366, 367, 369, 373, 374, 375, 376, 377, 378, 380, 381, 382, 390, 404], "within": [2, 154, 155, 156, 160, 163, 164, 165, 166, 167, 177, 220, 221, 238, 240, 241, 242, 244, 246, 247, 249, 250, 255, 256, 257, 259, 262, 263, 267, 271, 274, 275, 276, 277, 278, 280, 281, 282, 284, 287, 292, 293, 294, 295, 296, 297, 311, 326, 349, 364, 412, 416], "without": [10, 15, 123, 163, 164, 165, 194, 196, 255, 256, 257, 270, 272, 324, 327, 370, 394, 396, 403], "won": 326, "word": [218, 299], "work": [1, 2, 3, 10, 12, 13, 14, 15, 17, 267, 325, 328], "workflow": [13, 336, 416], "workload": 15, "wrap": [3, 309, 326, 385], "wrapper": 309, "www": [5, 6], "x": [15, 16, 26, 30, 82, 86, 130, 145, 150, 154, 155, 160, 161, 163, 164, 165, 166, 167, 176, 187, 194, 196, 221, 225, 226, 227, 229, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 255, 256, 257, 259, 261, 262, 263, 264, 265, 267, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 292, 293, 294, 295, 296, 297, 303, 304, 305, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 329, 331, 332, 333, 335, 351, 352, 368, 387, 392, 397, 401, 402, 407, 408, 409, 410, 411, 412, 413, 414], "x1": 270, "x2": 270, "x_": [30, 204, 275, 278, 283, 304, 392], "x_0": 304, "x_c": [275, 278], "x_i": [274, 304], "x_k": 275, "xavier": [233, 234, 237, 238], "xavier_norm": 232, "xavier_uniform": 232, "xception": [85, 154], "xiao": 7, "xie": 154, "xl": [72, 154], "xlarg": [53, 154], "xy": 392, "x\u2081": 270, "x\u2082": 270, "y": [30, 150, 154, 163, 164, 165, 166, 167, 221, 225, 226, 227, 239, 240, 241, 242, 243, 244, 246, 247, 249, 250, 255, 256, 257, 259, 262, 263, 264, 265, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 292, 293, 294, 295, 296, 297, 301, 302, 303, 304, 305, 329, 331, 332, 333, 335, 351, 352, 392, 410], "y1": 387, "y2": 387, "y_": [30, 204, 275, 278, 283, 392], "y_c": [275, 278], "y_i": 274, "yann": [8, 154], "yet": [15, 50, 52, 100, 325], "yield": [0, 1, 161, 326], "you": [0, 12, 14, 92, 154, 155, 164, 166, 167, 267, 301, 309, 311, 324, 326, 336, 351, 352, 353, 358, 383, 385, 405, 407, 416], "your": [10, 92, 100, 309, 311, 324, 326, 336, 416], "yu": 154, "z": [154, 303, 305, 352, 357, 358], "zalandoresearch": 7, "ze": 154, "zeiler": [152, 154], "zero": [22, 24, 25, 75, 155, 169, 172, 180, 181, 182, 185, 186, 187, 188, 189, 190, 191, 211, 212, 213, 215, 216, 217, 218, 231, 233, 234, 235, 236, 237, 238, 239, 241, 243, 244, 246, 252, 255, 256, 257, 259, 261, 262, 263, 264, 265, 287, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 309, 310, 313, 314, 315, 316, 317, 318, 319, 320, 351, 352, 353, 358, 359, 364, 374, 393, 401, 402], "zero_grad": [162, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 337], "zeros_lik": [352, 359], "zfnet": [85, 154], "zhang": 154, "zhmoginov": 154, "zhu": 154, "zhuang": 154, "zihang": 154, "zisserman": 154, "\u03c3\u1d62": 24}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "CIFAR10", "CIFAR100", "FashionMNIST", "MNIST", "Image Datasets", "lucid.einops", "Einops Functions", "lucid.einops.rearrange", "lucid.einops.reduce", "lucid.einops.repeat", "Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "alexnet", "CoAtNet", "coatnet_0", "coatnet_1", "coatnet_2", "coatnet_3", "coatnet_4", "coatnet_5", "coatnet_6", "coatnet_7", "ConvNeXt", "ConvNeXt_V2", "convnext_base", "convnext_large", "convnext_small", "convnext_tiny", "convnext_v2_atto", "convnext_v2_base", "convnext_v2_femto", "convnext_v2_huge", "convnext_v2_large", "convnext_v2_nano", "convnext_v2_pico", "convnext_v2_tiny", "convnext_xlarge", "DenseNet", "densenet_121", "densenet_169", "densenet_201", "densenet_264", "EfficientNet", "EfficientNet_V2", "efficientnet_b0", "efficientnet_b1", "efficientnet_b2", "efficientnet_b3", "efficientnet_b4", "efficientnet_b5", "efficientnet_b6", "efficientnet_b7", "efficientnet_v2_l", "efficientnet_v2_m", "efficientnet_v2_s", "efficientnet_v2_xl", "Inception", "inception_v1", "inception_v3", "inception_v4", "InceptionNeXt", "inception_next_atto", "inception_next_base", "inception_next_small", "inception_next_tiny", "InceptionResNet", "inception_resnet_v1", "inception_resnet_v2", "ConvNets", "LeNet", "lenet_1", "lenet_4", "lenet_5", "MobileNet", "MobileNet_V2", "MobileNet_V3", "MobileNet_V4", "mobilenet", "mobilenet_v2", "mobilenet_v3_large", "mobilenet_v3_small", "mobilenet_v4_conv_large", "mobilenet_v4_conv_medium", "mobilenet_v4_conv_small", "mobilenet_v4_hybrid_large", "mobilenet_v4_hybrid_medium", "ResNeSt", "resnest_101", "resnest_14", "resnest_200", "resnest_26", "resnest_269", "resnest_50", "resnest_50_1s4x24d", "resnest_50_4s2x40d", "ResNet", "resnet_1001", "resnet_101", "resnet_152", "resnet_18", "resnet_200", "resnet_269", "resnet_34", "resnet_50", "wide_resnet_101", "wide_resnet_50", "ResNeXt", "resnext_101_32x16d", "resnext_101_32x32d", "resnext_101_32x4d", "resnext_101_32x8d", "resnext_101_64x4d", "resnext_50_32x4d", "SENet", "se_resnet_101", "se_resnet_152", "se_resnet_18", "se_resnet_34", "se_resnet_50", "se_resnext_101_32x4d", "se_resnext_101_32x8d", "se_resnext_101_64x4d", "se_resnext_50_32x4d", "SKNet", "sk_resnet_18", "sk_resnet_34", "sk_resnet_50", "sk_resnext_50_32x4d", "VGGNet", "vggnet_11", "vggnet_13", "vggnet_16", "vggnet_19", "Xception", "xception", "ZFNet", "zfnet", "lucid.models", "models.summarize", "Transformer", "transformer_base", "transformer_big", "Transformers", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "Attention Functions", "nn.functional.scaled_dot_product_attention", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.drop_block", "nn.functional.drop_path", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "nn.functional.global_response_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "nn.functional.embedding", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "nn.DepthSeparableConv1d", "nn.DepthSeparableConv2d", "nn.DepthSeparableConv3d", "nn.SEModule", "nn.SelectiveKernel", "Fused Layers", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.HardSigmoid", "nn.HardSwish", "nn.LeakyReLU", "nn.ReLU", "nn.ReLU6", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Swish", "nn.Tanh", "Activation Layers", "nn.MultiHeadAttention", "nn.ScaledDotProductAttention", "Attention Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.DropBlock", "nn.DropPath", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "nn.Rearrange", "Einops Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.GlobalResponseNorm", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "nn.Embedding", "Sparse Layers", "nn.Transformer", "nn.TransformerDecoder", "nn.TransformerDecoderLayer", "nn.TransformerEncoder", "nn.TransformerEncoderLayer", "Transformer Layers", "nn.Upsample", "Vision Layers", "lucid.nn", "optim.Optimizer", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.types", "lucid.random.bernoulli", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.linspace", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.broadcast_to", "lucid.chunk", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.meshgrid", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.split", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.tril", "lucid.triu", "lucid.unsqueeze", "lucid.vstack", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": 325, "1d": 325, "2": 325, "2d": 325, "3": 325, "It": [324, 326], "ab": 360, "activ": [171, 193, 251, 269], "ad": 325, "adadelta": 313, "adagrad": 314, "adam": 315, "adamax": 317, "adamw": 316, "adaptive_avg_pool1d": 208, "adaptive_avg_pool2d": 209, "adaptive_avg_pool3d": 210, "adaptiveavgpool1d": 289, "adaptiveavgpool2d": 290, "adaptiveavgpool3d": 291, "add": 338, "addit": [24, 252], "admonit": 328, "advanc": [184, 416], "advantag": [10, 12, 13, 14, 267], "alexnet": [28, 29], "algebra": 20, "algorithm": [312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322], "alias": 328, "align": 325, "alpha_dropout": 185, "alphadropout": 259, "also": 311, "anoth": 385, "arang": 349, "arcco": 361, "architectur": [28, 30, 39, 87, 88, 89, 121, 122, 152], "arcsin": 362, "arctan": 363, "asgd": 312, "attent": [178, 179, 193, 229, 254, 269], "attribut": [5, 6, 7, 8, 28, 82, 86, 112, 123, 130, 140, 145, 150, 152, 160, 162, 163, 164, 165, 166, 167, 222, 223, 224, 225, 226, 227, 228, 239, 240, 243, 244, 246, 247, 248, 250, 255, 256, 257, 259, 261, 262, 263, 264, 265, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 337, 407, 408, 409, 410, 411, 412, 413, 414], "avg_pool1d": 211, "avg_pool2d": 212, "avg_pool3d": 213, "avgpool1d": 292, "avgpool2d": 293, "avgpool3d": 294, "axi": 325, "backpropag": 337, "backward": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 186, 194, 196, 220, 228, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 255, 256, 257, 259, 262, 263, 264, 265, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 292, 293, 294, 295, 296, 297, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 388, 390, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404], "batch_norm": 203, "batchnorm": 230, "batchnorm1d": 280, "batchnorm2d": 281, "batchnorm3d": 282, "bceloss": 274, "behavior": [208, 209, 210, 289, 290, 291], "benefit": 326, "bernoulli": 329, "bilinear": [194, 270], "binari": 359, "binary_cross_entropi": 197, "bottleneck": [96, 97], "broadcast": [325, 386], "broadcast_to": 386, "buffer": 160, "calcul": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 112, 123, 130, 140, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 184, 186, 187, 194, 196, 208, 209, 210, 220, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 388, 390, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414], "captur": 327, "case": 328, "centercrop": 407, "choleski": 17, "chunk": 387, "cifar10": 5, "cifar100": 6, "class": [0, 1, 2, 5, 6, 7, 8, 28, 30, 39, 40, 54, 59, 60, 73, 77, 82, 86, 90, 91, 92, 93, 103, 112, 123, 130, 140, 145, 150, 152, 156, 160, 161, 162, 163, 164, 165, 166, 167, 222, 223, 224, 225, 226, 227, 228, 229, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 307, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 337, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414], "clip": 364, "co": 365, "coatnet": 30, "coatnet_0": 31, "coatnet_1": 32, "coatnet_2": 33, "coatnet_3": 34, "coatnet_4": 35, "coatnet_5": 36, "coatnet_6": 37, "coatnet_7": 38, "combin": 0, "compon": [3, 15, 309], "compos": 405, "comput": 387, "concatdataset": [0, 1], "concaten": 388, "conclus": [3, 10, 12, 13, 14, 15, 267, 309, 324, 325, 326, 336, 406, 416], "configur": [31, 32, 33, 34, 35, 36, 37, 38, 59, 96, 97, 104, 105, 106, 107, 108, 109, 110, 111], "constant": 231, "contain": 168, "conv": 230, "conv1d": [180, 255], "conv2d": [181, 256], "conv3d": [182, 257], "convbnrelu1d": 222, "convbnrelu2d": 223, "convbnrelu3d": 224, "convnet": [85, 154], "convnext": 39, "convnext_bas": 41, "convnext_larg": 42, "convnext_smal": 43, "convnext_tini": 44, "convnext_v2": 40, "convnext_v2_atto": 45, "convnext_v2_bas": 46, "convnext_v2_femto": 47, "convnext_v2_hug": 48, "convnext_v2_larg": 49, "convnext_v2_nano": 50, "convnext_v2_pico": 51, "convnext_v2_tini": 52, "convnext_xlarg": 53, "convolut": [183, 193, 230, 258, 269], "core": 15, "cosh": 366, "creat": [162, 337, 385], "cross_entropi": 198, "crossentropyloss": 275, "cube": 367, "custom": [1, 2, 3, 161, 310, 311, 416], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 9], "defin": [2, 161, 310, 311], "definit": [12, 13, 14, 267, 328], "densenet": 54, "densenet_121": 55, "densenet_169": 56, "densenet_201": 57, "densenet_264": 58, "depthseparableconv1d": 225, "depthseparableconv2d": 226, "depthseparableconv3d": 227, "depthwis": 230, "descript": [124, 125, 126, 127, 128, 129, 141, 142, 143, 327], "det": 18, "detail": [24, 98, 99, 100, 101, 102, 121, 122, 252, 301, 302, 303, 304, 305], "diag": 350, "differ": 156, "dilat": 184, "div": 339, "dot": 340, "drop_block": 186, "drop_path": 187, "dropblock": 260, "dropout": [188, 192, 193, 262, 266, 269], "dropout1d": [189, 263], "dropout2d": [190, 264], "dropout3d": [191, 265], "droppath": 261, "efficientnet": 59, "efficientnet_b0": 61, "efficientnet_b1": 62, "efficientnet_b2": 63, "efficientnet_b3": 64, "efficientnet_b4": 65, "efficientnet_b5": 66, "efficientnet_b6": 67, "efficientnet_b7": 68, "efficientnet_v2": 60, "efficientnet_v2_": 71, "efficientnet_v2_l": 69, "efficientnet_v2_m": 70, "efficientnet_v2_xl": 72, "eig": 19, "einop": [10, 11, 12, 13, 14, 268, 269], "elu": [169, 239], "embed": [218, 299], "empti": 351, "empty_lik": 352, "exampl": [0, 1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 92, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 307, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 416], "excit": 230, "exp": 368, "express": [204, 397], "ey": 353, "fashionmnist": 7, "featur": [4, 15, 16, 136, 137, 138, 139, 144, 311, 336, 416], "flatten": 389, "forward": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 112, 123, 130, 140, 150, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 184, 187, 194, 196, 208, 209, 210, 220, 222, 223, 224, 225, 226, 227, 228, 229, 233, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 301, 302, 303, 304, 305, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 388, 390, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404, 407, 408, 409, 410, 411, 412, 413, 414], "from": [156, 385], "function": [11, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 155, 157, 158, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 231, 233, 234, 235, 236, 237, 238, 324, 326, 327, 329, 331, 332, 333, 334, 335, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 359, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404], "fuse": 230, "futur": 4, "gelu": [170, 240], "gener": [330, 359], "get": 311, "global_response_norm": 204, "globalresponsenorm": 283, "grad_en": 324, "gradient": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 186, 194, 196, 220, 228, 238, 239, 240, 241, 242, 243, 244, 246, 247, 248, 249, 250, 255, 256, 257, 259, 262, 263, 264, 265, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 284, 285, 286, 287, 292, 293, 294, 295, 296, 297, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 386, 387, 388, 390, 392, 393, 394, 395, 396, 398, 399, 400, 401, 402, 403, 404], "guidelin": 328, "hardsigmoid": 241, "hardswish": 242, "how": [324, 326], "hstack": 390, "huber_loss": 199, "huberloss": 276, "hybrid": 30, "hyperparamet": [110, 111], "ident": 271, "imag": [9, 415], "incept": 73, "inception_next_atto": 78, "inception_next_bas": 79, "inception_next_smal": 80, "inception_next_tini": 81, "inception_resnet_v1": 83, "inception_resnet_v2": 84, "inception_v1": 74, "inception_v3": 75, "inception_v4": 76, "inceptionnext": 77, "inceptionresnet": 82, "index": 337, "init": [231, 233, 234, 235, 236, 237, 238], "initi": 232, "inner": 341, "input": 385, "inspect": [311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322], "instance_norm": 206, "instancenorm1d": 284, "instancenorm2d": 285, "instancenorm3d": 286, "integr": [3, 309, 336, 416], "interpol": 220, "inv": 21, "iter": 337, "kaiming_norm": 233, "kaiming_uniform": 234, "kei": [3, 4, 15, 136, 137, 138, 139, 144, 309, 311, 336, 416], "kernel": 230, "layer": [104, 105, 106, 107, 108, 109, 230, 251, 254, 258, 266, 268, 269, 273, 279, 288, 298, 300, 306, 308], "layer_norm": 207, "layernorm": 287, "leaky_relu": 172, "leakyrelu": 243, "learn": 336, "lenet": 86, "lenet_1": 87, "lenet_4": 88, "lenet_5": 89, "limit": 15, "linalg": [16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27], "linear": [20, 193, 195, 196, 269, 272, 273], "linspac": 354, "list": 385, "load": 1, "log": 369, "loss": [193, 200, 269, 279], "lucid": [3, 4, 10, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 154, 193, 309, 311, 324, 325, 326, 327, 328, 329, 331, 332, 333, 334, 335, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 416], "mathemat": [12, 13, 14, 204, 252, 267, 301, 302, 303, 304, 305, 397], "matmul": 342, "matrix": 342, "matrix_pow": 22, "max": 370, "max_pool1d": 215, "max_pool2d": 216, "max_pool3d": 217, "maximum": 343, "maxpool1d": 295, "maxpool2d": 296, "maxpool3d": 297, "mean": 371, "mechan": [179, 229], "meshgrid": 392, "metadata": 327, "method": [0, 1, 2, 5, 6, 7, 8, 82, 86, 145, 161, 162, 301, 302, 303, 304, 305, 310, 337], "min": 372, "minimum": 344, "mnist": 8, "mobilenet": [90, 94], "mobilenet_v2": [91, 95], "mobilenet_v3": 92, "mobilenet_v3_larg": 96, "mobilenet_v3_smal": 97, "mobilenet_v4": 93, "mobilenet_v4_conv_larg": 98, "mobilenet_v4_conv_medium": 99, "mobilenet_v4_conv_smal": 100, "mobilenet_v4_hybrid_larg": 101, "mobilenet_v4_hybrid_medium": 102, "model": [154, 155, 309], "modul": [161, 269], "moduledict": 163, "modulelist": 164, "more": 336, "mse_loss": 201, "mseloss": 277, "mul": 345, "multiheadattent": 252, "multipl": [0, 342], "nadam": 318, "new": 325, "newaxi": 325, "nll_loss": 202, "nllloss": 278, "nn": [156, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 307, 309], "no_grad": 326, "norm": 23, "normal": [193, 205, 235, 269, 288, 408], "note": 15, "number": 330, "ones": 355, "ones_lik": 356, "oper": [20, 342, 359], "optim": [310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323], "option": 252, "organ": 309, "outer": 346, "overview": [3, 4, 10, 15, 73, 74, 75, 76, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 98, 99, 100, 101, 102, 113, 114, 115, 116, 117, 118, 119, 120, 131, 132, 133, 134, 135, 252, 301, 302, 303, 304, 305, 309, 311, 336, 416], "pad": 393, "paramet": [1, 5, 6, 7, 8, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 243, 244, 246, 247, 248, 250, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 307, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 326, 327, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414], "parameterdict": 165, "parameterlist": 166, "pass": 150, "perform": 337, "pinv": 24, "pipelin": [3, 416], "pitfal": [324, 326], "pool": [193, 214, 269, 298], "potenti": [324, 326], "power": 347, "process": 218, "properti": [162, 337], "qr": 25, "radam": 319, "rais": [17, 18, 19, 21, 22, 23, 24, 25, 26, 27], "rand": 331, "randint": 332, "randn": 333, "random": [329, 330, 331, 332, 333, 334, 335, 336], "randomcrop": 409, "randomgrayscal": 410, "randomhorizontalflip": 411, "randomrot": 412, "randomverticalflip": 413, "ravel": 394, "rearrang": [10, 12, 267], "reciproc": 373, "reduc": [10, 13], "refer": [5, 6, 7, 8, 228, 311], "register_model": 327, "regular": 186, "relu": [173, 230, 244], "relu6": 245, "repeat": [10, 14, 395], "reshap": 396, "resiz": 414, "resnest": 103, "resnest_101": 104, "resnest_14": 105, "resnest_200": 106, "resnest_26": 107, "resnest_269": 108, "resnest_50": 109, "resnest_50_1s4x24d": 110, "resnest_50_4s2x40d": 111, "resnet": 112, "resnet_1001": 113, "resnet_101": 114, "resnet_152": 115, "resnet_18": 116, "resnet_200": 117, "resnet_269": 118, "resnet_34": 119, "resnet_50": 120, "resnext": 123, "resnext_101_32x16d": 124, "resnext_101_32x32d": 125, "resnext_101_32x4d": 126, "resnext_101_32x8d": 127, "resnext_101_64x4d": 128, "resnext_50_32x4d": 129, "return": [12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 81, 83, 84, 87, 88, 89, 94, 95, 96, 97, 104, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 146, 147, 148, 149, 151, 153, 155, 157, 158, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 229, 231, 233, 234, 235, 236, 237, 238, 245, 267, 299, 324, 326, 329, 331, 332, 333, 334, 335, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404], "rmsprop": 320, "rotat": 221, "rprop": 321, "rule": [342, 386], "scaled_dot_product_attent": 179, "scaleddotproductattent": 253, "se_resnet_101": 131, "se_resnet_152": 132, "se_resnet_18": 133, "se_resnet_34": 134, "se_resnet_50": 135, "se_resnext_101_32x4d": 136, "se_resnext_101_32x8d": 137, "se_resnext_101_64x4d": 138, "se_resnext_50_32x4d": 139, "see": 311, "seed": 334, "select": 230, "selectivekernel": 229, "selu": [174, 246], "semodul": 228, "senet": 130, "separ": 230, "sequenti": 167, "sgd": 322, "sigmoid": [175, 247], "sign": 374, "signatur": [0, 1, 2, 5, 6, 7, 8, 12, 13, 14, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 155, 156, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 169, 170, 172, 173, 174, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 194, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 208, 209, 210, 211, 212, 213, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 231, 233, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 252, 253, 255, 256, 257, 259, 260, 261, 262, 263, 264, 265, 267, 270, 271, 272, 274, 275, 276, 277, 278, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 305, 307, 310, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 324, 326, 327, 329, 331, 332, 333, 334, 335, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357, 358, 360, 361, 362, 363, 364, 365, 366, 367, 368, 369, 370, 371, 372, 373, 374, 375, 376, 377, 378, 379, 380, 381, 382, 383, 384, 385, 386, 387, 388, 389, 390, 392, 393, 394, 395, 396, 397, 398, 399, 400, 401, 402, 403, 404, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414], "sin": 375, "sinh": 376, "sk_resnet_18": 141, "sk_resnet_34": 142, "sk_resnet_50": 143, "sk_resnext_50_32x4d": 144, "sknet": 140, "slice": 337, "softmax": [176, 248], "solv": 26, "spars": [269, 300], "split": 397, "sqrt": 377, "squar": 378, "squeez": [230, 398], "stack": 399, "start": 311, "state": [311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322], "sub": 348, "sum": 379, "summar": 155, "summari": 155, "svd": 27, "swish": 249, "tabl": 155, "tan": 380, "tanh": [177, 250, 381], "tensor": [325, 337, 359, 385, 391], "through": 337, "tile": 400, "totensor": 406, "trace": 382, "track": 337, "transform": [154, 156, 159, 269, 301, 306, 405, 406, 407, 408, 409, 410, 411, 412, 413, 414, 415, 416], "transformer_bas": 157, "transformer_big": 158, "transformerdecod": 302, "transformerdecoderlay": 303, "transformerencod": 304, "transformerencoderlay": 305, "transpos": 383, "tril": 401, "triu": 402, "type": 328, "unari": 359, "unfold": 184, "uniform": [236, 335], "unsqueez": 403, "upsampl": 307, "us": [1, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 328, 385], "usag": [4, 15, 69, 70, 71, 72, 74, 75, 76, 83, 84, 86, 87, 88, 89, 98, 99, 100, 101, 102, 136, 137, 138, 139, 144, 160, 221, 252, 301, 302, 303, 304, 305, 324, 325, 326, 328, 392, 405, 406, 416], "util": [193, 219], "utilit": 391, "valu": 397, "var": 384, "vggnet": 145, "vggnet_11": 146, "vggnet_13": 147, "vggnet_16": 148, "vggnet_19": 149, "vision": [269, 308], "vstack": 404, "weight": 232, "why": 328, "wide_resnet_101": 121, "wide_resnet_50": 122, "work": [4, 324, 326], "xavier_norm": 237, "xavier_uniform": 238, "xception": [150, 151], "zero": 357, "zeros_lik": 358, "zfnet": [152, 153]}})