Search.setIndex({"alltitles": {"@ Operator": [[164, "operator"]], "Activation Functions": [[38, null]], "Activation Layers": [[96, null], [107, null]], "Additional Details": [[16, "additional-details"]], "Admonitions and Usage Guidelines": [[151, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[49, "advanced-example-with-dilation"]], "Advanced Features": [[232, "advanced-features"]], "Algorithm": [[136, "algorithm"], [137, "algorithm"], [138, "algorithm"], [139, "algorithm"], [140, "algorithm"], [141, "algorithm"], [142, "algorithm"], [143, "algorithm"], [144, "algorithm"], [145, "algorithm"], [146, "algorithm"]], "Architecture": [[23, "architecture"], [24, "architecture"], [25, "architecture"]], "Attributes": [[5, "attributes"], [21, "attributes"], [27, "attributes"], [29, "attributes"], [30, "attributes"], [31, "attributes"], [32, "attributes"], [33, "attributes"], [34, "attributes"], [88, "attributes"], [89, "attributes"], [90, "attributes"], [91, "attributes"], [92, "attributes"], [93, "attributes"], [94, "attributes"], [95, "attributes"], [97, "attributes"], [98, "attributes"], [99, "attributes"], [101, "attributes"], [102, "attributes"], [103, "attributes"], [104, "attributes"], [105, "attributes"], [108, "attributes"], [109, "attributes"], [110, "attributes"], [112, "attributes"], [113, "attributes"], [114, "attributes"], [115, "attributes"], [116, "attributes"], [118, "attributes"], [119, "attributes"], [120, "attributes"], [121, "attributes"], [122, "attributes"], [123, "attributes"], [124, "attributes"], [126, "attributes"], [127, "attributes"], [128, "attributes"], [129, "attributes"], [130, "attributes"], [131, "attributes"], [159, "attributes"], [223, "attributes"], [224, "attributes"], [225, "attributes"], [226, "attributes"], [227, "attributes"], [228, "attributes"], [229, "attributes"], [230, "attributes"]], "Backward Gradient Calculation": [[9, "backward-gradient-calculation"], [10, "backward-gradient-calculation"], [11, "backward-gradient-calculation"], [13, "backward-gradient-calculation"], [14, "backward-gradient-calculation"], [15, "backward-gradient-calculation"], [16, "backward-gradient-calculation"], [17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [30, "backward-gradient-calculation"], [31, "backward-gradient-calculation"], [32, "backward-gradient-calculation"], [33, "backward-gradient-calculation"], [34, "backward-gradient-calculation"], [36, "backward-gradient-calculation"], [37, "backward-gradient-calculation"], [39, "backward-gradient-calculation"], [40, "backward-gradient-calculation"], [41, "backward-gradient-calculation"], [42, "backward-gradient-calculation"], [43, "backward-gradient-calculation"], [44, "backward-gradient-calculation"], [57, "backward-gradient-calculation"], [59, "backward-gradient-calculation"], [78, "backward-gradient-calculation"], [87, "backward-gradient-calculation"], [88, "backward-gradient-calculation"], [89, "backward-gradient-calculation"], [90, "backward-gradient-calculation"], [91, "backward-gradient-calculation"], [92, "backward-gradient-calculation"], [93, "backward-gradient-calculation"], [94, "backward-gradient-calculation"], [95, "backward-gradient-calculation"], [97, "backward-gradient-calculation"], [98, "backward-gradient-calculation"], [99, "backward-gradient-calculation"], [101, "backward-gradient-calculation"], [102, "backward-gradient-calculation"], [103, "backward-gradient-calculation"], [104, "backward-gradient-calculation"], [105, "backward-gradient-calculation"], [108, "backward-gradient-calculation"], [109, "backward-gradient-calculation"], [110, "backward-gradient-calculation"], [112, "backward-gradient-calculation"], [113, "backward-gradient-calculation"], [114, "backward-gradient-calculation"], [115, "backward-gradient-calculation"], [116, "backward-gradient-calculation"], [118, "backward-gradient-calculation"], [119, "backward-gradient-calculation"], [120, "backward-gradient-calculation"], [121, "backward-gradient-calculation"], [122, "backward-gradient-calculation"], [123, "backward-gradient-calculation"], [124, "backward-gradient-calculation"], [126, "backward-gradient-calculation"], [127, "backward-gradient-calculation"], [128, "backward-gradient-calculation"], [129, "backward-gradient-calculation"], [130, "backward-gradient-calculation"], [131, "backward-gradient-calculation"], [160, "backward-gradient-calculation"], [161, "backward-gradient-calculation"], [162, "backward-gradient-calculation"], [163, "backward-gradient-calculation"], [164, "backward-gradient-calculation"], [165, "backward-gradient-calculation"], [166, "backward-gradient-calculation"], [167, "backward-gradient-calculation"], [168, "backward-gradient-calculation"], [169, "backward-gradient-calculation"], [170, "backward-gradient-calculation"], [181, "backward-gradient-calculation"], [182, "backward-gradient-calculation"], [183, "backward-gradient-calculation"], [184, "backward-gradient-calculation"], [185, "backward-gradient-calculation"], [186, "backward-gradient-calculation"], [187, "backward-gradient-calculation"], [188, "backward-gradient-calculation"], [189, "backward-gradient-calculation"], [190, "backward-gradient-calculation"], [191, "backward-gradient-calculation"], [192, "backward-gradient-calculation"], [193, "backward-gradient-calculation"], [194, "backward-gradient-calculation"], [195, "backward-gradient-calculation"], [196, "backward-gradient-calculation"], [197, "backward-gradient-calculation"], [198, "backward-gradient-calculation"], [199, "backward-gradient-calculation"], [200, "backward-gradient-calculation"], [201, "backward-gradient-calculation"], [202, "backward-gradient-calculation"], [203, "backward-gradient-calculation"], [204, "backward-gradient-calculation"], [205, "backward-gradient-calculation"], [207, "backward-gradient-calculation"], [209, "backward-gradient-calculation"], [211, "backward-gradient-calculation"], [212, "backward-gradient-calculation"], [213, "backward-gradient-calculation"], [214, "backward-gradient-calculation"], [215, "backward-gradient-calculation"], [216, "backward-gradient-calculation"], [217, "backward-gradient-calculation"], [218, "backward-gradient-calculation"], [219, "backward-gradient-calculation"], [220, "backward-gradient-calculation"]], "Benefits": [[150, "benefits"]], "Binary Functions": [[180, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [21, "class-signature"], [27, "class-signature"], [28, "class-signature"], [29, "class-signature"], [30, "class-signature"], [31, "class-signature"], [32, "class-signature"], [33, "class-signature"], [34, "class-signature"], [88, "class-signature"], [89, "class-signature"], [90, "class-signature"], [91, "class-signature"], [92, "class-signature"], [93, "class-signature"], [94, "class-signature"], [95, "class-signature"], [97, "class-signature"], [98, "class-signature"], [99, "class-signature"], [101, "class-signature"], [102, "class-signature"], [103, "class-signature"], [104, "class-signature"], [105, "class-signature"], [108, "class-signature"], [109, "class-signature"], [110, "class-signature"], [112, "class-signature"], [113, "class-signature"], [114, "class-signature"], [115, "class-signature"], [116, "class-signature"], [118, "class-signature"], [119, "class-signature"], [120, "class-signature"], [121, "class-signature"], [122, "class-signature"], [123, "class-signature"], [124, "class-signature"], [126, "class-signature"], [127, "class-signature"], [128, "class-signature"], [129, "class-signature"], [130, "class-signature"], [131, "class-signature"], [134, "class-signature"], [136, "class-signature"], [137, "class-signature"], [138, "class-signature"], [139, "class-signature"], [140, "class-signature"], [141, "class-signature"], [142, "class-signature"], [143, "class-signature"], [144, "class-signature"], [145, "class-signature"], [146, "class-signature"], [159, "class-signature"], [221, "class-signature"], [222, "class-signature"], [223, "class-signature"], [224, "class-signature"], [225, "class-signature"], [226, "class-signature"], [227, "class-signature"], [228, "class-signature"], [229, "class-signature"], [230, "class-signature"]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [7, "conclusion"], [133, "conclusion"], [148, "conclusion"], [149, "conclusion"], [150, "conclusion"], [158, "conclusion"], [222, "conclusion"], [232, "conclusion"]], "Containers": [[35, null]], "ConvNets": [[20, null], [26, "convnets"]], "Convolution Functions": [[48, null], [56, null]], "Convolution Layers": [[100, null], [107, null]], "Core Components": [[7, "core-components"]], "Create a Tensor from a list": [[206, null]], "Creating a Parameter": [[29, null]], "Creating a tensor with gradient tracking": [[159, null]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[232, "custom-pipelines"]], "Defining a Custom Optimizer": [[135, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[28, null]], "Defining a custom optimizer": [[134, null]], "Dropout Functions": [[55, null], [56, null]], "Dropout Layers": [[106, null], [107, null]], "Example": [[3, null], [3, null], [3, null], [9, "example"], [10, "example"], [11, "example"], [13, "example"], [14, "example"], [15, "example"], [16, "example"], [17, "example"], [18, "example"], [19, "example"], [49, "example"], [133, null], [133, null], [133, null], [148, "example"], [150, "example"], [153, "example"], [154, "example"], [155, "example"], [156, "example"], [157, "example"], [158, null], [158, null], [158, null], [171, "example"], [172, "example"], [173, "example"], [174, "example"], [175, "example"], [176, "example"], [177, "example"], [178, "example"], [179, "example"], [181, "example"], [182, "example"], [183, "example"], [184, "example"], [185, "example"], [186, "example"], [187, "example"], [188, "example"], [190, "example"], [192, "example"], [194, "example"], [195, "example"], [196, "example"], [197, "example"], [198, "example"], [199, "example"], [200, "example"], [201, "example"], [202, "example"], [203, "example"], [204, "example"], [205, "example"], [207, "example"], [209, "example"], [213, "example"], [215, "example"], [216, "example"], [217, "example"], [219, "example"], [220, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[149, null]], "Example 2: Adding a new axis to a 2D tensor": [[149, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[149, null]], "Example Usage": [[7, "example-usage"], [21, "example-usage"], [23, "example-usage"], [24, "example-usage"], [25, "example-usage"], [79, "example-usage"], [221, "example-usage"], [222, "example-usage"], [232, "example-usage"]], "Example Use Cases": [[151, "example-use-cases"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [8, "examples"], [27, "examples"], [28, "examples"], [29, "examples"], [30, "examples"], [31, "examples"], [32, "examples"], [33, "examples"], [34, "examples"], [36, "examples"], [37, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [47, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [53, "examples"], [54, "examples"], [57, "examples"], [59, "examples"], [60, "examples"], [61, "examples"], [62, "examples"], [64, "examples"], [65, "examples"], [66, "examples"], [68, "examples"], [69, "examples"], [70, "examples"], [71, "examples"], [72, "examples"], [74, "examples"], [75, "examples"], [76, "examples"], [78, "examples"], [80, "examples"], [82, "examples"], [83, "examples"], [84, "examples"], [85, "examples"], [86, "examples"], [87, "examples"], [88, "examples"], [89, "examples"], [90, "examples"], [91, "examples"], [92, "examples"], [93, "examples"], [94, "examples"], [95, "examples"], [97, "examples"], [98, "examples"], [99, "examples"], [101, "examples"], [102, "examples"], [103, "examples"], [104, "examples"], [105, "examples"], [108, "examples"], [109, "examples"], [110, "examples"], [112, "examples"], [113, "examples"], [114, "examples"], [115, "examples"], [116, "examples"], [118, "examples"], [119, "examples"], [120, "examples"], [121, "examples"], [122, "examples"], [123, "examples"], [124, "examples"], [126, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [130, "examples"], [131, "examples"], [134, "examples"], [135, "examples"], [136, "examples"], [137, "examples"], [138, "examples"], [139, "examples"], [140, "examples"], [141, "examples"], [142, "examples"], [143, "examples"], [144, "examples"], [145, "examples"], [146, "examples"], [159, "examples"], [160, "examples"], [161, "examples"], [162, "examples"], [163, "examples"], [165, "examples"], [166, "examples"], [167, "examples"], [168, "examples"], [169, "examples"], [170, "examples"], [189, "examples"], [191, "examples"], [193, "examples"], [206, "examples"], [208, "examples"], [211, "examples"], [212, "examples"], [214, "examples"], [218, "examples"], [223, "examples"], [224, "examples"], [225, "examples"], [226, "examples"], [227, "examples"], [228, "examples"], [229, "examples"], [230, "examples"]], "Features": [[8, "features"]], "Forward Calculation": [[9, "forward-calculation"], [10, "forward-calculation"], [11, "forward-calculation"], [13, "forward-calculation"], [14, "forward-calculation"], [15, "forward-calculation"], [16, "forward-calculation"], [17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [30, "forward-calculation"], [31, "forward-calculation"], [32, "forward-calculation"], [33, "forward-calculation"], [34, "forward-calculation"], [36, "forward-calculation"], [37, "forward-calculation"], [39, "forward-calculation"], [40, "forward-calculation"], [41, "forward-calculation"], [42, "forward-calculation"], [43, "forward-calculation"], [44, "forward-calculation"], [49, "forward-calculation"], [57, "forward-calculation"], [59, "forward-calculation"], [78, "forward-calculation"], [82, "forward-calculation"], [83, "forward-calculation"], [86, "forward-calculation"], [87, "forward-calculation"], [88, "forward-calculation"], [89, "forward-calculation"], [90, "forward-calculation"], [91, "forward-calculation"], [92, "forward-calculation"], [93, "forward-calculation"], [94, "forward-calculation"], [95, "forward-calculation"], [97, "forward-calculation"], [98, "forward-calculation"], [99, "forward-calculation"], [101, "forward-calculation"], [102, "forward-calculation"], [103, "forward-calculation"], [104, "forward-calculation"], [105, "forward-calculation"], [108, "forward-calculation"], [109, "forward-calculation"], [110, "forward-calculation"], [112, "forward-calculation"], [113, "forward-calculation"], [114, "forward-calculation"], [115, "forward-calculation"], [116, "forward-calculation"], [118, "forward-calculation"], [119, "forward-calculation"], [120, "forward-calculation"], [121, "forward-calculation"], [122, "forward-calculation"], [123, "forward-calculation"], [124, "forward-calculation"], [126, "forward-calculation"], [127, "forward-calculation"], [128, "forward-calculation"], [129, "forward-calculation"], [130, "forward-calculation"], [131, "forward-calculation"], [160, "forward-calculation"], [161, "forward-calculation"], [162, "forward-calculation"], [163, "forward-calculation"], [164, "forward-calculation"], [165, "forward-calculation"], [166, "forward-calculation"], [167, "forward-calculation"], [168, "forward-calculation"], [169, "forward-calculation"], [170, "forward-calculation"], [181, "forward-calculation"], [182, "forward-calculation"], [183, "forward-calculation"], [184, "forward-calculation"], [185, "forward-calculation"], [186, "forward-calculation"], [187, "forward-calculation"], [188, "forward-calculation"], [189, "forward-calculation"], [190, "forward-calculation"], [191, "forward-calculation"], [192, "forward-calculation"], [193, "forward-calculation"], [194, "forward-calculation"], [195, "forward-calculation"], [196, "forward-calculation"], [197, "forward-calculation"], [198, "forward-calculation"], [199, "forward-calculation"], [200, "forward-calculation"], [201, "forward-calculation"], [202, "forward-calculation"], [203, "forward-calculation"], [204, "forward-calculation"], [205, "forward-calculation"], [207, "forward-calculation"], [209, "forward-calculation"], [211, "forward-calculation"], [212, "forward-calculation"], [213, "forward-calculation"], [214, "forward-calculation"], [215, "forward-calculation"], [216, "forward-calculation"], [217, "forward-calculation"], [218, "forward-calculation"], [219, "forward-calculation"], [220, "forward-calculation"], [223, "forward-calculation"], [224, "forward-calculation"], [225, "forward-calculation"], [226, "forward-calculation"], [227, "forward-calculation"], [228, "forward-calculation"], [229, "forward-calculation"], [230, "forward-calculation"]], "Function Signature": [[9, "function-signature"], [10, "function-signature"], [11, "function-signature"], [13, "function-signature"], [14, "function-signature"], [15, "function-signature"], [16, "function-signature"], [17, "function-signature"], [18, "function-signature"], [19, "function-signature"], [23, "function-signature"], [24, "function-signature"], [25, "function-signature"], [36, "function-signature"], [37, "function-signature"], [39, "function-signature"], [40, "function-signature"], [41, "function-signature"], [42, "function-signature"], [43, "function-signature"], [44, "function-signature"], [45, "function-signature"], [46, "function-signature"], [47, "function-signature"], [49, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [53, "function-signature"], [54, "function-signature"], [57, "function-signature"], [59, "function-signature"], [60, "function-signature"], [61, "function-signature"], [62, "function-signature"], [64, "function-signature"], [65, "function-signature"], [66, "function-signature"], [68, "function-signature"], [69, "function-signature"], [70, "function-signature"], [71, "function-signature"], [72, "function-signature"], [74, "function-signature"], [75, "function-signature"], [76, "function-signature"], [78, "function-signature"], [79, "function-signature"], [80, "function-signature"], [82, "function-signature"], [83, "function-signature"], [84, "function-signature"], [85, "function-signature"], [86, "function-signature"], [87, "function-signature"], [148, "function-signature"], [150, "function-signature"], [153, "function-signature"], [154, "function-signature"], [155, "function-signature"], [156, "function-signature"], [157, "function-signature"], [160, "function-signature"], [161, "function-signature"], [162, "function-signature"], [163, "function-signature"], [164, "function-signature"], [165, "function-signature"], [166, "function-signature"], [167, "function-signature"], [168, "function-signature"], [169, "function-signature"], [170, "function-signature"], [171, "function-signature"], [172, "function-signature"], [173, "function-signature"], [174, "function-signature"], [175, "function-signature"], [176, "function-signature"], [177, "function-signature"], [178, "function-signature"], [179, "function-signature"], [181, "function-signature"], [182, "function-signature"], [183, "function-signature"], [184, "function-signature"], [185, "function-signature"], [186, "function-signature"], [187, "function-signature"], [188, "function-signature"], [189, "function-signature"], [190, "function-signature"], [191, "function-signature"], [192, "function-signature"], [193, "function-signature"], [194, "function-signature"], [195, "function-signature"], [196, "function-signature"], [197, "function-signature"], [198, "function-signature"], [199, "function-signature"], [200, "function-signature"], [201, "function-signature"], [202, "function-signature"], [203, "function-signature"], [204, "function-signature"], [205, "function-signature"], [206, "function-signature"], [207, "function-signature"], [208, "function-signature"], [209, "function-signature"], [211, "function-signature"], [212, "function-signature"], [213, "function-signature"], [214, "function-signature"], [215, "function-signature"], [216, "function-signature"], [217, "function-signature"], [218, "function-signature"], [219, "function-signature"], [220, "function-signature"]], "Future Work": [[4, "future-work"]], "Getting Started": [[135, "getting-started"]], "How It Works": [[148, "how-it-works"], [150, "how-it-works"]], "Image Datasets": [[6, null]], "Image Transformations": [[231, null]], "Indexing and slicing": [[159, null]], "Inspecting Optimizer State": [[135, null], [136, null], [137, null], [138, null], [139, null], [140, null], [141, null], [142, null], [143, null], [144, null], [145, null], [146, null]], "Integration with lucid": [[3, "integration-with-lucid"], [133, "integration-with-lucid"], [158, "integration-with-lucid"], [232, "integration-with-lucid"]], "Iterating through a tensor": [[159, null]], "Key Components": [[3, "key-components"], [133, "key-components"]], "Key Features": [[4, "key-features"], [7, "key-features"], [135, "key-features"], [158, "key-features"]], "Key Transformations": [[232, "key-transformations"]], "LeNet": [[21, null], [22, null]], "Learn More": [[158, null]], "Limitations": [[7, "limitations"]], "Linear Algebra Operations": [[12, null]], "Linear Functions": [[56, null], [58, null]], "Linear Layers": [[107, null], [111, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[56, null], [63, null]], "Loss Layers": [[107, null], [117, null]], "Lucid": [[7, null]], "MNIST": [[5, null]], "Matrix Multiplication Rules": [[164, "matrix-multiplication-rules"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [21, "methods"], [28, "methods"], [29, "methods"], [134, "methods"], [159, "methods"]], "Modules": [[107, null]], "Normalization Functions": [[56, null], [67, null]], "Normalization Layers": [[107, null], [125, null]], "Notes": [[7, "notes"]], "Optimizers": [[147, null]], "Organizing Models": [[133, "organizing-models"]], "Overview": [[3, "overview"], [4, "overview"], [7, "overview"], [21, "overview"], [23, "overview"], [24, "overview"], [25, "overview"], [133, "overview"], [135, "overview"], [158, "overview"], [232, "overview"]], "Parameters": [[1, "parameters"], [5, "parameters"], [9, "parameters"], [10, "parameters"], [11, "parameters"], [13, "parameters"], [14, "parameters"], [15, "parameters"], [16, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [21, "parameters"], [27, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [36, "parameters"], [37, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [57, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [71, "parameters"], [72, "parameters"], [74, "parameters"], [75, "parameters"], [76, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [82, "parameters"], [83, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [87, "parameters"], [88, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [104, "parameters"], [105, "parameters"], [108, "parameters"], [109, "parameters"], [110, "parameters"], [112, "parameters"], [113, "parameters"], [114, "parameters"], [115, "parameters"], [116, "parameters"], [118, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [122, "parameters"], [123, "parameters"], [124, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [150, "parameters"], [153, "parameters"], [154, "parameters"], [155, "parameters"], [156, "parameters"], [157, "parameters"], [159, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [163, "parameters"], [164, "parameters"], [165, "parameters"], [166, "parameters"], [167, "parameters"], [168, "parameters"], [169, "parameters"], [170, "parameters"], [171, "parameters"], [172, "parameters"], [173, "parameters"], [174, "parameters"], [175, "parameters"], [176, "parameters"], [177, "parameters"], [178, "parameters"], [179, "parameters"], [181, "parameters"], [182, "parameters"], [183, "parameters"], [184, "parameters"], [185, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [189, "parameters"], [190, "parameters"], [191, "parameters"], [192, "parameters"], [193, "parameters"], [194, "parameters"], [195, "parameters"], [196, "parameters"], [197, "parameters"], [198, "parameters"], [199, "parameters"], [200, "parameters"], [201, "parameters"], [202, "parameters"], [203, "parameters"], [204, "parameters"], [205, "parameters"], [206, "parameters"], [207, "parameters"], [208, "parameters"], [209, "parameters"], [211, "parameters"], [212, "parameters"], [213, "parameters"], [214, "parameters"], [215, "parameters"], [216, "parameters"], [217, "parameters"], [218, "parameters"], [219, "parameters"], [220, "parameters"], [221, "parameters"], [222, "parameters"], [223, "parameters"], [224, "parameters"], [225, "parameters"], [226, "parameters"], [227, "parameters"], [228, "parameters"], [229, "parameters"], [230, "parameters"]], "Performing backpropagation": [[159, null]], "Pooling Functions": [[56, null], [73, null]], "Pooling Layers": [[107, null], [132, null]], "Potential Pitfalls": [[148, "potential-pitfalls"], [150, "potential-pitfalls"]], "Properties": [[29, "properties"], [159, "properties"]], "Raises": [[9, "raises"], [10, "raises"], [11, "raises"], [13, "raises"], [14, "raises"], [15, "raises"], [16, "raises"], [17, "raises"], [18, "raises"], [19, "raises"]], "Random Number Generations": [[152, null]], "References": [[5, "references"], [135, "references"]], "Returns": [[9, "returns"], [10, "returns"], [11, "returns"], [13, "returns"], [14, "returns"], [15, "returns"], [16, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [23, "returns"], [24, "returns"], [25, "returns"], [36, "returns"], [37, "returns"], [39, "returns"], [40, "returns"], [41, "returns"], [42, "returns"], [43, "returns"], [44, "returns"], [45, "returns"], [46, "returns"], [47, "returns"], [49, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [53, "returns"], [54, "returns"], [57, "returns"], [59, "returns"], [60, "returns"], [61, "returns"], [62, "returns"], [64, "returns"], [65, "returns"], [66, "returns"], [68, "returns"], [69, "returns"], [70, "returns"], [71, "returns"], [72, "returns"], [74, "returns"], [75, "returns"], [76, "returns"], [78, "returns"], [79, "returns"], [80, "returns"], [82, "returns"], [83, "returns"], [84, "returns"], [85, "returns"], [86, "returns"], [87, "returns"], [148, "returns"], [150, "returns"], [153, "returns"], [154, "returns"], [155, "returns"], [156, "returns"], [157, "returns"], [160, "returns"], [161, "returns"], [162, "returns"], [163, "returns"], [164, "returns"], [165, "returns"], [166, "returns"], [167, "returns"], [168, "returns"], [169, "returns"], [170, "returns"], [171, "returns"], [172, "returns"], [173, "returns"], [174, "returns"], [175, "returns"], [176, "returns"], [177, "returns"], [178, "returns"], [179, "returns"], [181, "returns"], [182, "returns"], [183, "returns"], [184, "returns"], [185, "returns"], [186, "returns"], [187, "returns"], [188, "returns"], [189, "returns"], [190, "returns"], [191, "returns"], [192, "returns"], [193, "returns"], [194, "returns"], [195, "returns"], [196, "returns"], [197, "returns"], [198, "returns"], [199, "returns"], [200, "returns"], [201, "returns"], [202, "returns"], [203, "returns"], [204, "returns"], [205, "returns"], [206, "returns"], [207, "returns"], [208, "returns"], [209, "returns"], [211, "returns"], [212, "returns"], [213, "returns"], [214, "returns"], [215, "returns"], [216, "returns"], [217, "returns"], [218, "returns"], [219, "returns"], [220, "returns"]], "See Also": [[135, "see-also"]], "Tensor Generating Functions": [[180, null]], "Tensor Operations": [[180, null]], "Tensor Utilites": [[210, null]], "Type Definitions": [[151, "type-definitions"]], "Unary Functions": [[180, null]], "Usage": [[4, "usage"], [27, "usage"], [79, "usage"], [148, "usage"], [149, "usage"], [150, "usage"], [211, "usage"], [221, "usage"], [222, "usage"], [232, "usage"]], "Use another Tensor as input": [[206, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using the ASGD Optimizer": [[136, null]], "Using the Adadelta Optimizer": [[137, null]], "Using the Adagrad Optimizer": [[138, null]], "Using the Adam Optimizer": [[139, null]], "Using the AdamW Optimizer": [[140, null]], "Using the Adamax Optimizer": [[141, null]], "Using the NAdam Optimizer": [[142, null]], "Using the RAdam Optimizer": [[143, null]], "Using the RMSprop Optimizer": [[144, null]], "Using the Rprop Optimizer": [[145, null]], "Using the SGD Optimizer": [[146, null]], "Utility Functions": [[56, null], [77, null]], "Weight Initializations": [[81, null]], "Why Use Type Aliases?": [[151, null]], "activation Functions": [[56, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "lenet_1": [[23, null]], "lenet_4": [[24, null]], "lenet_5": [[25, null]], "lucid.Tensor": [[159, null]], "lucid.abs": [[181, null]], "lucid.add": [[160, null]], "lucid.arange": [[171, null]], "lucid.arccos": [[182, null]], "lucid.arcsin": [[183, null]], "lucid.arctan": [[184, null]], "lucid.clip": [[185, null]], "lucid.concatenate": [[207, null]], "lucid.cos": [[186, null]], "lucid.cosh": [[187, null]], "lucid.cube": [[188, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[172, null]], "lucid.div": [[161, null]], "lucid.dot": [[162, null]], "lucid.empty": [[173, null]], "lucid.empty_like": [[174, null]], "lucid.exp": [[189, null]], "lucid.eye": [[175, null]], "lucid.flatten": [[208, null]], "lucid.grad_enabled": [[148, null]], "lucid.hstack": [[209, null]], "lucid.inner": [[163, null]], "lucid.linalg": [[8, null]], "lucid.linalg.cholesky": [[9, null]], "lucid.linalg.det": [[10, null]], "lucid.linalg.eig": [[11, null]], "lucid.linalg.inv": [[13, null]], "lucid.linalg.matrix_power": [[14, null]], "lucid.linalg.norm": [[15, null]], "lucid.linalg.pinv": [[16, null]], "lucid.linalg.qr": [[17, null]], "lucid.linalg.solve": [[18, null]], "lucid.linalg.svd": [[19, null]], "lucid.log": [[190, null]], "lucid.matmul": [[164, null]], "lucid.max": [[191, null]], "lucid.maximum": [[165, null]], "lucid.mean": [[192, null]], "lucid.meshgrid": [[211, null]], "lucid.min": [[193, null]], "lucid.minimum": [[166, null]], "lucid.models": [[26, null]], "lucid.mul": [[167, null]], "lucid.newaxis": [[149, null]], "lucid.nn": [[133, null]], "lucid.nn.functional": [[56, null]], "lucid.no_grad": [[150, null]], "lucid.ones": [[176, null]], "lucid.ones_like": [[177, null]], "lucid.optim": [[135, null]], "lucid.outer": [[168, null]], "lucid.pad": [[212, null]], "lucid.power": [[169, null]], "lucid.random": [[158, null]], "lucid.random.rand": [[153, null]], "lucid.random.randint": [[154, null]], "lucid.random.randn": [[155, null]], "lucid.random.seed": [[156, null]], "lucid.random.uniform": [[157, null]], "lucid.ravel": [[213, null]], "lucid.reciprocal": [[194, null]], "lucid.repeat": [[214, null]], "lucid.reshape": [[215, null]], "lucid.sign": [[195, null]], "lucid.sin": [[196, null]], "lucid.sinh": [[197, null]], "lucid.sqrt": [[198, null]], "lucid.square": [[199, null]], "lucid.squeeze": [[216, null]], "lucid.stack": [[217, null]], "lucid.sub": [[170, null]], "lucid.sum": [[200, null]], "lucid.tan": [[201, null]], "lucid.tanh": [[202, null]], "lucid.tensor": [[206, null]], "lucid.tile": [[218, null]], "lucid.trace": [[203, null]], "lucid.transforms": [[232, null]], "lucid.transpose": [[204, null]], "lucid.types": [[151, null]], "lucid.unsqueeze": [[219, null]], "lucid.var": [[205, null]], "lucid.vstack": [[220, null]], "lucid.zeros": [[178, null]], "lucid.zeros_like": [[179, null]], "nn.AlphaDropout": [[101, null]], "nn.AvgPool1d": [[126, null]], "nn.AvgPool2d": [[127, null]], "nn.AvgPool3d": [[128, null]], "nn.BCELoss": [[112, null]], "nn.BatchNorm1d": [[118, null]], "nn.BatchNorm2d": [[119, null]], "nn.BatchNorm3d": [[120, null]], "nn.Bilinear": [[108, null]], "nn.Buffer": [[27, null]], "nn.Conv1d": [[97, null]], "nn.Conv2d": [[98, null]], "nn.Conv3d": [[99, null]], "nn.CrossEntropyLoss": [[113, null]], "nn.Dropout": [[102, null]], "nn.Dropout1d": [[103, null]], "nn.Dropout2d": [[104, null]], "nn.Dropout3d": [[105, null]], "nn.ELU": [[88, null]], "nn.GELU": [[89, null]], "nn.HuberLoss": [[114, null]], "nn.Identity": [[109, null]], "nn.InstanceNorm1d": [[121, null]], "nn.InstanceNorm2d": [[122, null]], "nn.InstanceNorm3d": [[123, null]], "nn.LayerNorm": [[124, null]], "nn.LeakyReLU": [[90, null]], "nn.Linear": [[110, null]], "nn.MSELoss": [[115, null]], "nn.MaxPool1d": [[129, null]], "nn.MaxPool2d": [[130, null]], "nn.MaxPool3d": [[131, null]], "nn.Module": [[28, null]], "nn.ModuleDict": [[30, null]], "nn.ModuleList": [[31, null]], "nn.NLLLoss": [[116, null]], "nn.Parameter": [[29, null]], "nn.ParameterDict": [[32, null]], "nn.ParameterList": [[33, null]], "nn.ReLU": [[91, null]], "nn.SELU": [[92, null]], "nn.Sequential": [[34, null]], "nn.Sigmoid": [[93, null]], "nn.Softmax": [[94, null]], "nn.Tanh": [[95, null]], "nn.functional.alpha_dropout": [[50, null]], "nn.functional.avg_pool1d": [[70, null]], "nn.functional.avg_pool2d": [[71, null]], "nn.functional.avg_pool3d": [[72, null]], "nn.functional.batch_norm": [[66, null]], "nn.functional.bilinear": [[57, null]], "nn.functional.binary_cross_entropy": [[60, null]], "nn.functional.conv1d": [[45, null]], "nn.functional.conv2d": [[46, null]], "nn.functional.conv3d": [[47, null]], "nn.functional.cross_entropy": [[61, null]], "nn.functional.dropout": [[51, null]], "nn.functional.dropout1d": [[52, null]], "nn.functional.dropout2d": [[53, null]], "nn.functional.dropout3d": [[54, null]], "nn.functional.elu": [[36, null]], "nn.functional.gelu": [[37, null]], "nn.functional.huber_loss": [[62, null]], "nn.functional.instance_norm": [[68, null]], "nn.functional.interpolate": [[78, null]], "nn.functional.layer_norm": [[69, null]], "nn.functional.leaky_relu": [[39, null]], "nn.functional.linear": [[59, null]], "nn.functional.max_pool1d": [[74, null]], "nn.functional.max_pool2d": [[75, null]], "nn.functional.max_pool3d": [[76, null]], "nn.functional.mse_loss": [[64, null]], "nn.functional.nll_loss": [[65, null]], "nn.functional.relu": [[40, null]], "nn.functional.rotate": [[79, null]], "nn.functional.selu": [[41, null]], "nn.functional.sigmoid": [[42, null]], "nn.functional.softmax": [[43, null]], "nn.functional.tanh": [[44, null]], "nn.functional.unfold": [[49, null]], "nn.init.constant": [[80, null]], "nn.init.kaiming_normal": [[82, null]], "nn.init.kaiming_uniform": [[83, null]], "nn.init.normal": [[84, null]], "nn.init.uniform": [[85, null]], "nn.init.xavier_normal": [[86, null]], "nn.init.xavier_uniform": [[87, null]], "optim.ASGD": [[136, null]], "optim.Adadelta": [[137, null]], "optim.Adagrad": [[138, null]], "optim.Adam": [[139, null]], "optim.AdamW": [[140, null]], "optim.Adamax": [[141, null]], "optim.NAdam": [[142, null]], "optim.Optimizer": [[134, null]], "optim.RAdam": [[143, null]], "optim.RMSprop": [[144, null]], "optim.Rprop": [[145, null]], "optim.SGD": [[146, null]], "transforms.CenterCrop": [[223, null]], "transforms.Compose": [[221, null]], "transforms.Normalize": [[224, null]], "transforms.RandomCrop": [[225, null]], "transforms.RandomGrayscale": [[226, null]], "transforms.RandomHorizontalFlip": [[227, null]], "transforms.RandomRotation": [[228, null]], "transforms.RandomVerticalFlip": [[229, null]], "transforms.Resize": [[230, null]], "transforms.ToTensor": [[222, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/MNIST", "datasets/image/index", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/convnets/index", "models/convnets/lenet/LeNet", "models/convnets/lenet/index", "models/convnets/lenet/lenet_1", "models/convnets/lenet/lenet_4", "models/convnets/lenet/lenet_5", "models/models", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/nn", "optim/Optimizer", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/types", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/meshgrid", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/convnets/index.rst", "models/convnets/lenet/LeNet.rst", "models/convnets/lenet/index.rst", "models/convnets/lenet/lenet_1.rst", "models/convnets/lenet/lenet_4.rst", "models/convnets/lenet/lenet_5.rst", "models/models.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/types.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"abs() (in module lucid)": [[181, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[137, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[138, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[139, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[141, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[140, "lucid.optim.AdamW", false]], "add() (in module lucid)": [[160, "lucid.add", false]], "alpha_dropout() (in module lucid.nn.functional)": [[50, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[101, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[171, "lucid.arange", false]], "arccos() (in module lucid)": [[182, "lucid.arccos", false]], "arcsin() (in module lucid)": [[183, "lucid.arcsin", false]], "arctan() (in module lucid)": [[184, "lucid.arctan", false]], "asgd (class in lucid.optim)": [[136, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[70, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[71, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[72, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[126, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[127, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[128, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[66, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[118, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[119, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[120, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[112, "lucid.nn.BCELoss", false]], "bilinear (class in lucid.nn)": [[108, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[57, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[60, "lucid.nn.functional.binary_cross_entropy", false]], "buffer (class in lucid.nn)": [[27, "lucid.nn.Buffer", false]], "centercrop (class in lucid.transforms)": [[223, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[9, "lucid.linalg.cholesky", false]], "clip() (in module lucid)": [[185, "lucid.clip", false]], "compose (class in lucid.transforms)": [[221, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[207, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[80, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[97, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[45, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[98, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[46, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[99, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[47, "lucid.nn.functional.conv3d", false]], "cos() (in module lucid)": [[186, "lucid.cos", false]], "cosh() (in module lucid)": [[187, "lucid.cosh", false]], "cross_entropy() (in module lucid.nn.functional)": [[61, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[113, "lucid.nn.CrossEntropyLoss", false]], "cube() (in module lucid)": [[188, "lucid.cube", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "det() (in module lucid.linalg)": [[10, "lucid.linalg.det", false]], "diag() (in module lucid)": [[172, "lucid.diag", false]], "div() (in module lucid)": [[161, "lucid.div", false]], "dot() (in module lucid)": [[162, "lucid.dot", false]], "dropout (class in lucid.nn)": [[102, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[51, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[103, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[52, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[104, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[53, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[105, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[54, "lucid.nn.functional.dropout3d", false]], "eig() (in module lucid.linalg)": [[11, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[88, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[36, "lucid.nn.functional.elu", false]], "empty() (in module lucid)": [[173, "lucid.empty", false]], "empty_like() (in module lucid)": [[174, "lucid.empty_like", false]], "exp() (in module lucid)": [[189, "lucid.exp", false]], "eye() (in module lucid)": [[175, "lucid.eye", false]], "flatten() (in module lucid)": [[208, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[89, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[37, "lucid.nn.functional.gelu", false]], "grad_enabled() (in module lucid)": [[148, "lucid.grad_enabled", false]], "hstack() (in module lucid)": [[209, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[62, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[114, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[109, "lucid.nn.Identity", false]], "inner() (in module lucid)": [[163, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[68, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[121, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[122, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[123, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[78, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[13, "lucid.linalg.inv", false]], "kaiming_normal() (in module lucid.nn.init)": [[82, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[83, "lucid.nn.init.kaiming_uniform", false]], "layer_norm() (in module lucid.nn.functional)": [[69, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[124, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[39, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[90, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[21, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[23, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[24, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[25, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[110, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[59, "lucid.nn.functional.linear", false]], "log() (in module lucid)": [[190, "lucid.log", false]], "lucid": [[7, "module-lucid", false]], "matmul() (in module lucid)": [[164, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[14, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[191, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[74, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[75, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[76, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[165, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[129, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[130, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[131, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[192, "lucid.mean", false]], "meshgrid() (in module lucid)": [[211, "lucid.meshgrid", false]], "min() (in module lucid)": [[193, "lucid.min", false]], "minimum() (in module lucid)": [[166, "lucid.minimum", false]], "mnist (class in lucid.datasets)": [[5, "lucid.datasets.MNIST", false]], "module": [[7, "module-lucid", false]], "module (class in lucid.nn)": [[28, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[30, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[31, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[64, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[115, "lucid.nn.MSELoss", false]], "mul() (in module lucid)": [[167, "lucid.mul", false]], "nadam (class in lucid.optim)": [[142, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[65, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[116, "lucid.nn.NLLLoss", false]], "no_grad() (in module lucid)": [[150, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[15, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[84, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[224, "lucid.transforms.Normalize", false]], "ones() (in module lucid)": [[176, "lucid.ones", false]], "ones_like() (in module lucid)": [[177, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[134, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[168, "lucid.outer", false]], "pad() (in module lucid)": [[212, "lucid.pad", false]], "parameter (class in lucid.nn)": [[29, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[32, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[33, "lucid.nn.ParameterList", false]], "pinv() (in module lucid.linalg)": [[16, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[169, "lucid.power", false]], "qr() (in module lucid.linalg)": [[17, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[143, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[153, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[154, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[155, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[225, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[226, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[227, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[228, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[229, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[213, "lucid.ravel", false]], "reciprocal() (in module lucid)": [[194, "lucid.reciprocal", false]], "relu (class in lucid.nn)": [[91, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[40, "lucid.nn.functional.relu", false]], "repeat() (in module lucid)": [[214, "lucid.repeat", false]], "reshape() (in module lucid)": [[215, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[230, "lucid.transforms.Resize", false]], "rmsprop (class in lucid.optim)": [[144, "lucid.optim.RMSprop", false]], "rotate() (in module lucid.nn.functional)": [[79, "lucid.nn.functional.rotate", false]], "rprop (class in lucid.optim)": [[145, "lucid.optim.Rprop", false]], "seed() (in module lucid.random)": [[156, "lucid.random.seed", false]], "selu (class in lucid.nn)": [[92, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[41, "lucid.nn.functional.selu", false]], "sequential (class in lucid.nn)": [[34, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[146, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[93, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[42, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[195, "lucid.sign", false]], "sin() (in module lucid)": [[196, "lucid.sin", false]], "sinh() (in module lucid)": [[197, "lucid.sinh", false]], "softmax (class in lucid.nn)": [[94, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[43, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[18, "lucid.linalg.solve", false]], "sqrt() (in module lucid)": [[198, "lucid.sqrt", false]], "square() (in module lucid)": [[199, "lucid.square", false]], "squeeze() (in module lucid)": [[216, "lucid.squeeze", false]], "stack() (in module lucid)": [[217, "lucid.stack", false]], "sub() (in module lucid)": [[170, "lucid.sub", false]], "sum() (in module lucid)": [[200, "lucid.sum", false]], "svd() (in module lucid.linalg)": [[19, "lucid.linalg.svd", false]], "tan() (in module lucid)": [[201, "lucid.tan", false]], "tanh (class in lucid.nn)": [[95, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[202, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[44, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[159, "lucid.Tensor", false]], "tensor() (in module lucid)": [[206, "lucid.tensor", false]], "tile() (in module lucid)": [[218, "lucid.tile", false]], "totensor (class in lucid.transforms)": [[222, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[203, "lucid.trace", false]], "transpose() (in module lucid)": [[204, "lucid.transpose", false]], "unfold() (in module lucid.nn.functional)": [[49, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[85, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[157, "lucid.random.uniform", false]], "unsqueeze() (in module lucid)": [[219, "lucid.unsqueeze", false]], "var() (in module lucid)": [[205, "lucid.var", false]], "vstack() (in module lucid)": [[220, "lucid.vstack", false]], "xavier_normal() (in module lucid.nn.init)": [[86, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[87, "lucid.nn.init.xavier_uniform", false]], "zeros() (in module lucid)": [[178, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[179, "lucid.zeros_like", false]]}, "objects": {"": [[7, 0, 0, "-", "lucid"]], "lucid": [[159, 1, 1, "", "Tensor"], [181, 2, 1, "", "abs"], [160, 2, 1, "", "add"], [171, 2, 1, "", "arange"], [182, 2, 1, "", "arccos"], [183, 2, 1, "", "arcsin"], [184, 2, 1, "", "arctan"], [185, 2, 1, "", "clip"], [207, 2, 1, "", "concatenate"], [186, 2, 1, "", "cos"], [187, 2, 1, "", "cosh"], [188, 2, 1, "", "cube"], [172, 2, 1, "", "diag"], [161, 2, 1, "", "div"], [162, 2, 1, "", "dot"], [173, 2, 1, "", "empty"], [174, 2, 1, "", "empty_like"], [189, 2, 1, "", "exp"], [175, 2, 1, "", "eye"], [208, 2, 1, "", "flatten"], [148, 2, 1, "", "grad_enabled"], [209, 2, 1, "", "hstack"], [163, 2, 1, "", "inner"], [190, 2, 1, "", "log"], [164, 2, 1, "", "matmul"], [191, 2, 1, "", "max"], [165, 2, 1, "", "maximum"], [192, 2, 1, "", "mean"], [211, 2, 1, "", "meshgrid"], [193, 2, 1, "", "min"], [166, 2, 1, "", "minimum"], [167, 2, 1, "", "mul"], [150, 2, 1, "", "no_grad"], [176, 2, 1, "", "ones"], [177, 2, 1, "", "ones_like"], [168, 2, 1, "", "outer"], [212, 2, 1, "", "pad"], [169, 2, 1, "", "power"], [213, 2, 1, "", "ravel"], [194, 2, 1, "", "reciprocal"], [214, 2, 1, "", "repeat"], [215, 2, 1, "", "reshape"], [195, 2, 1, "", "sign"], [196, 2, 1, "", "sin"], [197, 2, 1, "", "sinh"], [198, 2, 1, "", "sqrt"], [199, 2, 1, "", "square"], [216, 2, 1, "", "squeeze"], [217, 2, 1, "", "stack"], [170, 2, 1, "", "sub"], [200, 2, 1, "", "sum"], [201, 2, 1, "", "tan"], [202, 2, 1, "", "tanh"], [206, 2, 1, "", "tensor"], [218, 2, 1, "", "tile"], [203, 2, 1, "", "trace"], [204, 2, 1, "", "transpose"], [219, 2, 1, "", "unsqueeze"], [205, 2, 1, "", "var"], [220, 2, 1, "", "vstack"], [178, 2, 1, "", "zeros"], [179, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "MNIST"]], "lucid.linalg": [[9, 2, 1, "", "cholesky"], [10, 2, 1, "", "det"], [11, 2, 1, "", "eig"], [13, 2, 1, "", "inv"], [14, 2, 1, "", "matrix_power"], [15, 2, 1, "", "norm"], [16, 2, 1, "", "pinv"], [17, 2, 1, "", "qr"], [18, 2, 1, "", "solve"], [19, 2, 1, "", "svd"]], "lucid.models": [[21, 1, 1, "", "LeNet"], [23, 2, 1, "", "lenet_1"], [24, 2, 1, "", "lenet_4"], [25, 2, 1, "", "lenet_5"]], "lucid.nn": [[101, 1, 1, "", "AlphaDropout"], [126, 1, 1, "", "AvgPool1d"], [127, 1, 1, "", "AvgPool2d"], [128, 1, 1, "", "AvgPool3d"], [112, 1, 1, "", "BCELoss"], [118, 1, 1, "", "BatchNorm1d"], [119, 1, 1, "", "BatchNorm2d"], [120, 1, 1, "", "BatchNorm3d"], [108, 1, 1, "", "Bilinear"], [27, 1, 1, "", "Buffer"], [97, 1, 1, "", "Conv1d"], [98, 1, 1, "", "Conv2d"], [99, 1, 1, "", "Conv3d"], [113, 1, 1, "", "CrossEntropyLoss"], [102, 1, 1, "", "Dropout"], [103, 1, 1, "", "Dropout1d"], [104, 1, 1, "", "Dropout2d"], [105, 1, 1, "", "Dropout3d"], [88, 1, 1, "", "ELU"], [89, 1, 1, "", "GELU"], [114, 1, 1, "", "HuberLoss"], [109, 1, 1, "", "Identity"], [121, 1, 1, "", "InstanceNorm1d"], [122, 1, 1, "", "InstanceNorm2d"], [123, 1, 1, "", "InstanceNorm3d"], [124, 1, 1, "", "LayerNorm"], [90, 1, 1, "", "LeakyReLU"], [110, 1, 1, "", "Linear"], [115, 1, 1, "", "MSELoss"], [129, 1, 1, "", "MaxPool1d"], [130, 1, 1, "", "MaxPool2d"], [131, 1, 1, "", "MaxPool3d"], [28, 1, 1, "", "Module"], [30, 1, 1, "", "ModuleDict"], [31, 1, 1, "", "ModuleList"], [116, 1, 1, "", "NLLLoss"], [29, 1, 1, "", "Parameter"], [32, 1, 1, "", "ParameterDict"], [33, 1, 1, "", "ParameterList"], [91, 1, 1, "", "ReLU"], [92, 1, 1, "", "SELU"], [34, 1, 1, "", "Sequential"], [93, 1, 1, "", "Sigmoid"], [94, 1, 1, "", "Softmax"], [95, 1, 1, "", "Tanh"]], "lucid.nn.functional": [[50, 2, 1, "", "alpha_dropout"], [70, 2, 1, "", "avg_pool1d"], [71, 2, 1, "", "avg_pool2d"], [72, 2, 1, "", "avg_pool3d"], [66, 2, 1, "", "batch_norm"], [57, 2, 1, "", "bilinear"], [60, 2, 1, "", "binary_cross_entropy"], [45, 2, 1, "", "conv1d"], [46, 2, 1, "", "conv2d"], [47, 2, 1, "", "conv3d"], [61, 2, 1, "", "cross_entropy"], [51, 2, 1, "", "dropout"], [52, 2, 1, "", "dropout1d"], [53, 2, 1, "", "dropout2d"], [54, 2, 1, "", "dropout3d"], [36, 2, 1, "", "elu"], [37, 2, 1, "", "gelu"], [62, 2, 1, "", "huber_loss"], [68, 2, 1, "", "instance_norm"], [78, 2, 1, "", "interpolate"], [69, 2, 1, "", "layer_norm"], [39, 2, 1, "", "leaky_relu"], [59, 2, 1, "", "linear"], [74, 2, 1, "", "max_pool1d"], [75, 2, 1, "", "max_pool2d"], [76, 2, 1, "", "max_pool3d"], [64, 2, 1, "", "mse_loss"], [65, 2, 1, "", "nll_loss"], [40, 2, 1, "", "relu"], [79, 2, 1, "", "rotate"], [41, 2, 1, "", "selu"], [42, 2, 1, "", "sigmoid"], [43, 2, 1, "", "softmax"], [44, 2, 1, "", "tanh"], [49, 2, 1, "", "unfold"]], "lucid.nn.init": [[80, 2, 1, "", "constant"], [82, 2, 1, "", "kaiming_normal"], [83, 2, 1, "", "kaiming_uniform"], [84, 2, 1, "", "normal"], [85, 2, 1, "", "uniform"], [86, 2, 1, "", "xavier_normal"], [87, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[136, 1, 1, "", "ASGD"], [137, 1, 1, "", "Adadelta"], [138, 1, 1, "", "Adagrad"], [139, 1, 1, "", "Adam"], [140, 1, 1, "", "AdamW"], [141, 1, 1, "", "Adamax"], [142, 1, 1, "", "NAdam"], [134, 1, 1, "", "Optimizer"], [143, 1, 1, "", "RAdam"], [144, 1, 1, "", "RMSprop"], [145, 1, 1, "", "Rprop"], [146, 1, 1, "", "SGD"]], "lucid.random": [[153, 2, 1, "", "rand"], [154, 2, 1, "", "randint"], [155, 2, 1, "", "randn"], [156, 2, 1, "", "seed"], [157, 2, 1, "", "uniform"]], "lucid.transforms": [[223, 1, 1, "", "CenterCrop"], [221, 1, 1, "", "Compose"], [224, 1, 1, "", "Normalize"], [225, 1, 1, "", "RandomCrop"], [226, 1, 1, "", "RandomGrayscale"], [227, 1, 1, "", "RandomHorizontalFlip"], [228, 1, 1, "", "RandomRotation"], [229, 1, 1, "", "RandomVerticalFlip"], [230, 1, 1, "", "Resize"], [222, 1, 1, "", "ToTensor"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [3, 7, 8, 14, 16, 19, 27, 28, 29, 30, 32, 33, 34, 113, 116, 126, 129, 130, 133, 134, 135, 149, 164, 172, 190, 192, 200, 203, 205, 206, 216, 222, 224, 232], "0": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 178, 179, 181, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 204, 205, 206, 207, 209, 212, 213, 214, 216, 217, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 232], "000": [5, 173, 174], "0000": [113, 114, 116], "0001": 136, "000e": [173, 174], "001": [136, 139, 140, 142, 143, 146], "002": [141, 142], "004": 142, "005": 90, "01": [39, 90, 134, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146], "01051757": 155, "0205": 113, "0217": 113, "0227": 113, "0299": 113, "044715": [37, 89], "0450": 113, "0451": 113, "04719755": 182, "0474259": 42, "0480": 113, "05": [66, 68, 69, 90, 118, 119, 120, 121, 122, 123, 124], "0507": [41, 92], "06": [137, 145], "07": [60, 61, 112, 113], "0700": 113, "0706508": 95, "0721": 113, "0794": 116, "08": [139, 140, 141, 142, 143, 144], "0802": 116, "08333333": 16, "085537": 189, "0900": [94, 113], "0986": [43, 94], "09861229": 190, "0992": 113, "1": [0, 1, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 151, 153, 154, 155, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232], "10": [0, 1, 2, 3, 21, 23, 24, 25, 30, 31, 34, 46, 47, 57, 59, 97, 98, 99, 104, 105, 108, 110, 119, 120, 122, 127, 128, 130, 138, 154, 157, 158, 161, 164, 167, 168, 184, 200, 223, 225, 226, 228], "100": 232, "1000000": 136, "1001": 113, "1003": 113, "1014": 41, "1025": [31, 34], "1026": [31, 34], "1027": [31, 34], "10499": 42, "1050": 93, "1054": 116, "1056": [31, 34], "11": [57, 97, 98, 99, 104, 108, 119, 120, 122, 127, 128, 130, 164, 223, 224, 225, 226, 228], "1111": 112, "1134": 57, "114b": 226, "119": 57, "1192": [42, 43, 94], "12": [23, 24, 32, 57, 97, 98, 99, 104, 105, 108, 119, 120, 122, 127, 128, 130, 164, 168, 169, 223, 225, 226, 228], "120": [21, 25], "123": [82, 83, 84, 85, 86, 87, 156, 157], "124": [82, 83, 86, 87], "125": 128, "1250": 114, "128": [34, 221, 232], "128x128": [221, 232], "13": [57, 97, 98, 99, 108, 120, 127, 128, 130, 164, 223, 225, 226, 228], "14": [97, 98, 99, 104, 105, 108, 120, 127, 128, 130, 151, 164, 168, 223, 225, 226, 228], "145": 57, "15": [0, 57, 97, 98, 99, 108, 120, 127, 128, 130, 164, 168, 203, 223, 225, 226, 228, 232], "1513": 116, "155": 164, "1588": [37, 89], "16": [21, 25, 31, 32, 34, 97, 98, 99, 104, 105, 108, 119, 120, 127, 128, 130, 133, 164, 168, 198, 223, 225, 226, 228], "16227766": 17, "16425": 116, "1643": 112, "166": 164, "17": [97, 98, 99, 108, 120, 128, 163, 223, 225, 226, 228], "170": 57, "17520119": 197, "18": [24, 26, 97, 98, 99, 104, 108, 120, 128, 167, 168, 223, 225, 226, 228], "1800": 113, "19": [46, 47, 57, 98, 99, 120, 162, 164], "192": [23, 24], "1966": [43, 93, 94], "1998": 113, "1d": [45, 70, 74, 118, 121, 157, 164, 172, 203, 211, 212, 213, 214, 218], "1e": [60, 61, 66, 68, 69, 112, 113, 118, 119, 120, 121, 122, 123, 124, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "1e6": 136, "2": [1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 27, 28, 29, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 151, 153, 154, 155, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232], "20": [0, 5, 30, 31, 34, 98, 99, 104, 120, 168, 189], "2039": 116, "204": 99, "21": [32, 57, 98, 99, 120, 168], "211": 164, "22": [57, 98, 99, 104, 120, 162, 164], "2231": [113, 116], "2247": [118, 119, 120, 121, 122, 123, 124], "226": 164, "22752314": 155, "23": [98, 99, 120], "2324": 92, "234": [82, 83, 84, 85, 86, 87, 157], "24": [57, 98, 99, 104, 120, 168], "2424": [43, 94], "2447": 94, "246": [23, 26], "25": [0, 42, 93, 99, 115, 120, 127, 128, 161, 194, 205], "2500": [112, 114, 116], "2512": 88, "2547": 92, "26": [32, 59, 99, 110, 120, 168], "26325684": 155, "2689": [43, 93, 94], "27": [57, 97, 99, 120, 188], "276": [82, 83, 86, 87], "28": [23, 24, 26, 57, 99, 168], "28x28": [5, 23, 24], "29": 99, "299r": 226, "2_i": [121, 122, 123], "2d": [46, 53, 71, 75, 119, 122, 164, 172, 175, 203, 208, 211, 212, 214, 218, 228], "2e": 141, "2x2": [49, 223, 225], "3": [1, 2, 3, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 23, 26, 27, 28, 29, 31, 32, 33, 34, 37, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 54, 57, 59, 62, 64, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 185, 187, 188, 189, 190, 191, 192, 193, 197, 198, 199, 200, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230], "30": [31, 79, 99, 228], "3026": 116, "31": [57, 99, 164], "310": [173, 174], "31622777": 17, "32": [25, 26, 31, 34, 57, 59, 98, 99, 110, 133, 162, 163, 168], "321": [82, 83, 86, 87], "32x32": [21, 25], "33": [31, 34, 59, 99, 110], "33333333": 16, "34": [31, 34, 57, 99, 164, 168], "342": [82, 83, 86, 87], "345": [82, 83, 84, 85, 86, 87, 157], "35": [31, 34, 99], "3567": [112, 116], "36": 99, "3679": [36, 41, 88], "37": 97, "372": 57, "375": 115, "3750": 114, "378": [24, 26], "38344152": 153, "38629436": 190, "389056": 189, "3935": 88, "3d": [47, 54, 72, 76, 99, 120, 123], "3x3": 158, "4": [0, 1, 2, 3, 8, 9, 10, 11, 13, 15, 16, 17, 21, 23, 24, 32, 34, 45, 46, 47, 49, 52, 53, 54, 57, 59, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 136, 139, 143, 144, 146, 149, 151, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 177, 179, 185, 190, 191, 192, 193, 194, 196, 198, 199, 200, 201, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 217, 218, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230], "400": 25, "4044": 112, "4076": 113, "41421356": 9, "41666667": 16, "41808962": 155, "419974": 44, "4199743": 95, "42": [57, 151, 158], "421": [82, 83, 86, 87], "423": [82, 83, 84, 85], "42718872": 17, "4286": 112, "43": [162, 164], "4323": 88, "4375": 114, "43758721": 153, "4472136": 11, "4495": [120, 123], "45": [57, 79, 228], "4545": 101, "47112767": 184, "48": [59, 110], "4979": 88, "4x4": 230, "5": [1, 2, 7, 8, 13, 14, 15, 16, 21, 23, 24, 25, 28, 29, 30, 31, 32, 34, 37, 42, 45, 46, 47, 49, 50, 51, 52, 53, 54, 57, 59, 62, 64, 66, 68, 69, 70, 71, 78, 80, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 130, 131, 145, 149, 151, 154, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 177, 179, 181, 182, 183, 191, 192, 193, 194, 195, 200, 203, 204, 205, 206, 209, 211, 215, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232], "50": [59, 110, 145, 162, 164, 226, 227, 229, 232], "5000": [112, 114, 116], "5108": 116, "52359878": 183, "53": [57, 163], "543": [82, 83, 84, 85, 86, 87, 157], "54308063": 187, "545": 169, "5455": 101, "563": [82, 83, 86, 87], "57": 57, "57079633": [182, 183], "57366333": 156, "587g": 226, "6": [8, 16, 21, 25, 32, 33, 45, 46, 47, 49, 54, 57, 59, 83, 87, 97, 98, 99, 102, 103, 104, 105, 108, 110, 112, 118, 119, 120, 121, 122, 123, 124, 127, 128, 130, 131, 137, 145, 149, 151, 157, 160, 161, 162, 163, 164, 167, 168, 169, 170, 171, 172, 173, 174, 177, 179, 191, 192, 193, 200, 203, 204, 205, 206, 209, 214, 215, 220, 222, 223, 224, 225, 226, 228, 230], "6052": 116, "6065": 88, "61": [25, 26], "6124": [118, 119, 120, 121, 122, 123, 124], "62": 57, "62686041": 197, "6321": [36, 88], "63245553": 17, "64": [31, 34, 57], "64589411": 153, "654": [82, 83, 84, 85, 86, 87, 157], "657": [82, 83, 86, 87], "6590": [43, 94], "6652": 94, "66666667": 16, "6667": 112, "6682": 112, "67": 164, "67326": 92, "6733": 41, "678": [82, 83, 84, 85, 86, 87], "68811989": 155, "69314718": 190, "7": [15, 32, 45, 46, 47, 49, 54, 57, 59, 60, 61, 89, 92, 93, 95, 97, 98, 99, 104, 105, 108, 110, 112, 113, 115, 119, 120, 122, 123, 127, 128, 130, 131, 151, 154, 157, 160, 162, 163, 164, 168, 170, 172, 189, 192, 200, 203, 204, 205, 218, 222, 223, 224, 225, 226, 228, 230], "70": 5, "7001": 113, "706": [25, 26], "70710678": [11, 196], "7147": 116, "7182818": 189, "7311": [43, 93, 94], "74": 164, "75": [59, 110, 115, 136], "7581": 41, "76159416": 202, "7616": [44, 95], "76219569": 187, "7635": 92, "772": 169, "78357324": 155, "78539816": 184, "79172504": 153, "8": [14, 18, 31, 32, 34, 45, 46, 47, 49, 54, 57, 59, 60, 89, 92, 93, 95, 97, 98, 99, 102, 103, 104, 105, 108, 110, 112, 115, 119, 120, 122, 123, 127, 128, 130, 131, 139, 140, 141, 142, 143, 144, 151, 154, 161, 162, 163, 164, 168, 169, 171, 172, 188, 192, 200, 203, 204, 205, 222, 223, 224, 225, 226, 228, 230], "80": 5, "8005": 113, "8182": 101, "82": 57, "84": [21, 24, 25], "8413": [37, 89], "8584": 92, "876": [82, 83, 86, 87, 157], "8808": [43, 93, 94], "887": 169, "891773": 153, "89442719": 11, "9": [0, 1, 3, 5, 18, 46, 49, 57, 59, 97, 98, 99, 104, 108, 110, 112, 119, 120, 122, 127, 128, 130, 136, 137, 139, 140, 141, 142, 143, 144, 146, 151, 154, 157, 160, 164, 168, 169, 170, 172, 198, 199, 222, 223, 224, 225, 226, 228], "90709145": 156, "9091": 101, "9120": 116, "9163": 116, "9486833": 17, "949e": [173, 174], "9526": 42, "9545": 89, "96366276": 153, "9640": 95, "96402758": 202, "99": 144, "9957": 116, "99734545": 156, "999": [0, 139, 140, 141, 142, 143], "A": [1, 3, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 28, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 57, 59, 60, 61, 65, 66, 68, 69, 78, 101, 102, 103, 104, 105, 112, 113, 116, 118, 119, 120, 121, 122, 123, 124, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 153, 154, 155, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 228], "As": 156, "Be": 0, "By": [0, 2, 3, 7, 29, 79, 133, 143, 149, 153, 154, 155, 157, 222, 232], "For": [2, 3, 4, 7, 9, 10, 11, 13, 14, 15, 16, 18, 34, 36, 37, 39, 40, 41, 42, 44, 57, 59, 78, 82, 83, 86, 87, 92, 97, 98, 99, 108, 110, 118, 119, 120, 121, 122, 123, 133, 135, 156, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 189, 190, 191, 192, 193, 196, 198, 200, 203, 204, 205, 212, 214, 216, 218, 219, 232], "If": [0, 1, 2, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 28, 30, 31, 32, 33, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 54, 57, 59, 66, 68, 78, 79, 82, 83, 97, 98, 99, 108, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 134, 139, 140, 144, 145, 153, 154, 155, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 226, 227, 229, 230], "In": [3, 7, 16, 45, 46, 47, 113, 116, 148, 149, 150, 221, 232], "It": [1, 2, 3, 7, 16, 17, 18, 21, 23, 24, 25, 28, 30, 31, 32, 33, 34, 54, 57, 78, 79, 89, 91, 95, 108, 109, 112, 113, 114, 115, 116, 133, 134, 135, 136, 142, 144, 145, 146, 149, 156, 160, 161, 162, 165, 166, 167, 169, 170, 191, 193, 207, 209, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222], "Its": [18, 158], "Near": 16, "No": 49, "Not": 109, "One": [23, 232], "The": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232], "There": 215, "These": [4, 7, 8, 11, 14, 17, 19, 26, 101, 102, 103, 104, 105, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 145, 151, 158, 232], "To": [3, 135, 155, 158, 173, 174, 211, 232], "With": [3, 49, 222, 232], "_": [14, 30, 31, 33, 34, 36, 37, 39, 40, 41, 42, 44, 59, 78, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 136, 137, 139, 140, 141, 142, 144, 146, 162, 163, 164, 168, 203, 204, 223, 224, 225, 227, 228, 229], "_1": [11, 30, 31, 32, 33, 34, 57, 108, 168, 207, 209, 220], "_2": [11, 30, 31, 32, 33, 34, 57, 108, 168, 207, 209, 220], "__call__": [1, 28], "__getitem__": [0, 2, 3, 5], "__init__": [0, 1, 2, 3, 7, 21, 27, 28, 29, 30, 31, 32, 33, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 108, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 159, 221, 222], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5], "__repr__": 134, "__setattr__": 28, "_activ": 43, "_arraylik": [151, 172, 174, 177, 179], "_arraylikeint": 212, "_arrayorscalar": [27, 29, 151, 159, 206], "_base_dtyp": [171, 173, 176, 178], "_c": 224, "_decai": 142, "_fanmod": [82, 83], "_grad_en": [148, 150], "_i": [11, 15, 43, 57, 94, 115, 118, 124, 126, 129, 162, 163, 165, 166, 168, 169, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 214, 216, 219, 220], "_in": [82, 83, 86, 87], "_j": [43, 94, 126, 129, 168, 192, 200, 204, 205], "_k": 217, "_left": 78, "_modul": 28, "_n": [11, 30, 31, 32, 33, 34, 207, 209, 220], "_numpyarrai": 151, "_out": [82, 83, 86, 87, 214, 218], "_p": 15, "_pad": 212, "_paddingstr": [97, 98, 99], "_paramet": 28, "_reductiontyp": [60, 61, 62, 64, 65, 112, 113, 114, 115, 116], "_right": 78, "_scalar": [80, 84, 85, 86, 87, 151, 171, 185], "_shapelik": [69, 124, 151, 154, 176, 178, 215, 216, 219], "_slope": 90, "_statedict": 134, "_t": [143, 144], "_tensor": [27, 29, 172, 206], "_tensorop": 159, "_u": 16, "_v": 16, "_valu": [185, 212], "_width": 212, "a_i": [165, 166, 169], "ab": 180, "abc": [2, 134], "abil": [7, 232], "about": 7, "abov": [7, 148, 150, 156, 172, 175], "absolut": [14, 15, 62, 141, 181], "abstract": [2, 3, 133, 134, 135, 136, 144, 146], "abstractmethod": 134, "acceler": [92, 118, 119, 120, 136, 142, 144, 146], "accept": [109, 153, 159], "access": [0, 2, 3, 4, 5, 27, 29, 30, 31, 32, 33, 34, 215], "accord": [78, 97, 98, 99, 108, 110, 113, 116, 137, 138, 139, 140, 141, 142, 143, 204], "accordingli": 10, "account": [14, 16, 17], "accumul": [136, 137, 138, 160, 161, 165, 166, 167, 170], "achiev": [45, 46, 47, 142, 227, 229], "across": [0, 27, 31, 34, 69, 86, 87, 118, 119, 120, 121, 122, 123, 124, 151, 153, 154, 155, 156, 157, 158, 173, 174, 192, 205], "act": 140, "activ": [7, 30, 34, 36, 37, 39, 40, 41, 42, 43, 44, 50, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 101, 102, 103, 104, 105, 112, 113, 116, 118, 119, 120, 124, 191, 193], "actual": [29, 112, 113, 115, 116, 159, 225], "ad": [28, 30, 31, 32, 33, 34, 45, 46, 47, 57, 59, 60, 61, 66, 68, 69, 70, 71, 72, 74, 75, 76, 97, 98, 99, 112, 113, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 137, 138, 139, 140, 141, 142, 143, 144, 219, 232], "adadelta": 147, "adagrad": [137, 147], "adam": [140, 141, 142, 143, 147], "adamax": 147, "adamw": 147, "adapt": [21, 137, 138, 139, 142, 143, 144, 145], "add": [4, 28, 30, 31, 34, 57, 59, 97, 98, 99, 108, 110, 124, 134, 136, 139, 144, 146, 149, 180, 212, 219], "add_modul": [28, 34], "add_param_group": 134, "addit": [4, 7, 14, 28, 31, 34, 57, 59, 66, 68, 108, 110, 118, 119, 120, 121, 122, 123, 136, 142, 149, 158, 160, 217], "addition": 142, "address": [113, 116, 139, 140, 143], "adjust": [101, 118, 119, 120, 121, 122, 123, 124, 135, 139, 143, 144, 145, 209, 220], "advanc": [3, 16, 31, 34, 45, 46, 47, 133, 136], "advantag": 150, "affect": [148, 213, 216, 221], "affin": [118, 119, 120, 121, 122, 123, 124, 228], "after": [14, 29, 30, 31, 32, 33, 34, 54, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 101, 102, 103, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 126, 127, 128, 129, 130, 131, 140, 150, 159, 160, 161, 165, 166, 167, 169, 170, 212, 222], "afterward": 150, "aggreg": [168, 214, 218], "aim": [4, 7], "algebra": [7, 8, 175], "algorithm": [7, 14, 16, 17, 134, 135, 158], "align": [18, 78, 163, 164], "align_corn": 78, "all": [0, 3, 4, 7, 17, 28, 30, 31, 32, 33, 34, 46, 47, 71, 72, 75, 76, 78, 90, 91, 99, 127, 128, 131, 133, 134, 135, 136, 139, 144, 145, 146, 169, 191, 192, 193, 200, 203, 205, 207, 208, 209, 214, 216, 217, 218, 220, 223, 224, 232], "allevi": 36, "alloc": [173, 174], "allow": [0, 1, 3, 4, 7, 16, 17, 21, 29, 30, 31, 32, 33, 34, 36, 39, 40, 43, 47, 49, 79, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 133, 137, 138, 149, 171, 176, 178, 179, 204, 206, 211, 221, 222, 232], "along": [43, 78, 94, 163, 164, 168, 191, 192, 193, 200, 203, 205, 207, 209, 211, 214, 217, 218, 219, 220, 227, 229], "alongsid": 27, "alpha": [36, 39, 41, 50, 88, 92, 101, 136, 144], "alpha_dropout": [55, 56, 101], "alphadropout": [106, 107], "alphadropoutmodel": 101, "also": [36, 37, 39, 40, 41, 42, 44, 57, 59, 78, 142, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 174, 178, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 201, 202, 207, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220], "alter": [34, 215], "altern": [1, 89, 137, 164], "alwai": [29, 213, 226, 227, 229], "amount": [45, 46, 47, 70, 71, 72, 74, 75, 76, 142], "amsgrad": [139, 140], "an": [0, 1, 3, 7, 11, 13, 14, 16, 17, 19, 21, 23, 24, 25, 28, 30, 31, 32, 33, 34, 37, 45, 46, 47, 49, 50, 51, 52, 53, 54, 57, 78, 79, 86, 87, 88, 93, 97, 98, 99, 101, 102, 103, 104, 105, 108, 110, 124, 126, 127, 128, 129, 130, 131, 134, 135, 136, 139, 142, 144, 150, 151, 159, 164, 172, 175, 185, 192, 200, 205, 207, 214, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232], "analog": [214, 218], "analysi": [4, 97, 98, 99, 123, 126, 128, 129, 131], "angl": [79, 228], "ani": [0, 1, 2, 3, 14, 16, 27, 28, 29, 30, 32, 33, 36, 37, 39, 40, 41, 42, 44, 50, 51, 57, 59, 66, 68, 93, 124, 133, 134, 148, 150, 156, 159, 171, 172, 173, 175, 176, 177, 178, 179, 191, 193, 204, 206, 207, 208, 209, 212, 214, 217, 218, 219, 220, 221, 232], "anoth": [33, 170, 177, 179, 222, 232], "api": [4, 232], "appear": 134, "append": [31, 33, 34], "appli": [2, 4, 5, 7, 14, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 62, 64, 65, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 101, 102, 103, 104, 105, 108, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 136, 137, 138, 140, 141, 142, 143, 164, 212, 214, 221, 224, 226, 227, 228, 229, 230, 232], "applic": [4, 16, 45, 68, 97, 98, 99, 108, 110, 158, 171, 178, 212, 230], "approach": [3, 34, 140], "appropri": [16, 28, 32, 34, 97, 98, 99, 101, 102, 103, 113, 127, 128, 148, 150], "approx": 41, "approxim": [16, 37, 89, 127, 130], "ar": [1, 2, 3, 4, 7, 10, 11, 13, 14, 16, 17, 18, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 43, 45, 46, 47, 49, 57, 59, 78, 82, 83, 85, 86, 87, 94, 97, 98, 99, 101, 102, 103, 104, 105, 108, 110, 113, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 136, 139, 140, 142, 143, 144, 145, 146, 148, 150, 151, 153, 154, 155, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 181, 185, 189, 191, 192, 193, 194, 195, 200, 203, 204, 207, 211, 214, 215, 218, 221, 222, 223, 225, 226, 230, 232], "arang": 180, "arbitrari": [31, 109, 173, 174, 185, 190, 192, 196, 198, 200, 204, 205], "arcco": 180, "architectur": [21, 26, 30, 31, 32, 33, 34, 37, 91, 108, 109, 133], "arcsin": 180, "arctan": 180, "area": 78, "arg": [28, 109, 173], "argument": [3, 4, 21, 28, 34, 109, 153, 173, 204], "around": [11, 79, 95], "arr": [151, 207, 209, 217, 220], "arrai": [7, 27, 29, 149, 151, 159, 164, 172, 177, 179, 206, 213, 214, 222, 232], "asarrai": 151, "asgd": 147, "aspect": 230, "assign": [28, 30, 32, 34, 78, 113, 116], "associ": [32, 33], "assum": [0, 1, 134, 135, 148], "attempt": [30, 34], "attent": [33, 57], "attribut": 28, "audio": 97, "augment": [3, 4, 79, 158, 214, 218, 221, 225, 226, 227, 228, 229, 232], "autodiff": 7, "autograd": 133, "automat": [4, 7, 29, 30, 31, 32, 33, 133, 153, 154, 155, 157, 159, 173, 174, 179, 211, 222], "auxiliari": 27, "avail": [4, 5, 7], "averag": [23, 24, 25, 27, 70, 71, 72, 78, 115, 126, 127, 128, 136, 137, 139, 144, 192], "avg_pool": [126, 127, 128], "avg_pool1d": [56, 73], "avg_pool2d": [56, 73], "avg_pool3d": [56, 73], "avgpool1d": [107, 132], "avgpool1dmodel": 126, "avgpool2d": [107, 132], "avgpool2dmodel": 127, "avgpool3d": [107, 132], "avgpool3dmodel": 128, "avoid": [2, 3, 16, 32, 150], "ax": [8, 149, 191, 192, 193, 200, 204, 205, 214, 216, 218], "axi": [43, 94, 163, 164, 191, 192, 193, 200, 205, 207, 209, 211, 212, 214, 216, 217, 218, 219, 220, 227, 229], "b": [8, 18, 57, 59, 85, 97, 98, 99, 108, 110, 149, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 207, 209, 217, 220, 226], "b_i": [165, 166, 169], "back": [78, 127, 128, 163, 168, 214, 218], "backpropag": [7, 10, 11, 13, 14, 16, 17, 19, 27, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 57, 59, 78, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 150, 155, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 189, 191, 193, 206, 212, 214, 218, 222], "backward": [7, 27, 29, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 159, 222], "balanc": 114, "bar": 136, "base": [3, 8, 13, 14, 17, 18, 21, 28, 30, 31, 32, 33, 49, 57, 101, 113, 114, 133, 134, 135, 136, 140, 144, 145, 146, 160, 161, 165, 166, 167, 169, 170, 179, 189, 190, 191, 193, 204, 211, 212, 225, 226, 227, 228, 229], "basic": [7, 45, 46, 47, 82, 83, 86, 87, 223, 224, 225, 226, 227, 228, 229, 230], "batch": [1, 2, 3, 8, 14, 17, 19, 45, 46, 47, 49, 52, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 97, 98, 99, 108, 110, 112, 113, 116, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 143, 164, 223, 224, 225, 226, 228, 230], "batch_norm": [56, 67, 118, 119, 120], "batch_norm1": 34, "batch_norm2": 34, "batch_siz": [1, 2, 3], "batchnorm1d": [107, 125], "batchnorm1dmodel": 118, "batchnorm2d": [34, 107, 125], "batchnorm2dmodel": 119, "batchnorm3d": [107, 125], "batchnorm3dmodel": 120, "bceloss": [107, 117], "becaus": [2, 154], "becom": [15, 28, 137, 145], "befor": [14, 29, 136, 142, 150, 156, 212, 224, 232], "begin": [1, 15, 36, 39, 40, 41, 88, 90, 91, 92, 114, 115, 116, 126, 127, 128, 129, 130, 131, 143, 145, 149, 158, 165, 166, 168, 181, 185, 191, 193, 195, 212], "behav": [114, 203], "behavior": [31, 34, 148, 158, 164, 174, 232], "being": [33, 79, 101, 102, 103, 104, 105, 143, 148, 150, 207, 209, 220], "belong": 0, "below": [17, 21, 23, 24, 25, 164, 172, 175], "benchmark": 5, "benefici": 34, "benefit": [36, 133, 142, 151], "bernoulli": [101, 102, 103, 104, 105], "best": [82, 83, 86, 87], "beta": [118, 119, 120, 121, 122, 123, 124, 139, 140, 141, 142, 143], "beta1": [139, 140, 141, 142, 143], "beta2": [139, 140, 141, 142, 143], "beta_1": [139, 140, 141, 142, 143], "beta_2": [139, 140, 141, 142, 143], "better": [13, 37, 82, 83, 86, 87, 121, 122, 123, 133, 140, 142, 144, 224], "between": [28, 45, 46, 47, 49, 57, 62, 97, 98, 99, 101, 102, 103, 104, 105, 108, 112, 113, 114, 115, 116, 136, 144, 145, 146, 158, 160, 161, 164, 167, 170, 171, 205, 226, 227, 229, 230], "beyond": [7, 31], "bia": [45, 46, 47, 57, 59, 66, 68, 69, 97, 98, 99, 108, 110, 118, 119, 120, 121, 122, 123, 124, 139, 140, 141, 142, 143], "bias": [97, 98, 99, 110, 124, 133], "bias1": 32, "bias2": 32, "bilinear": [56, 58, 78, 107, 111], "bilinearmodel": 108, "binari": [42, 60, 93, 101, 102, 103, 104, 105, 112], "binary_cross_entropi": [56, 63], "block": [28, 49, 97, 98, 99, 150], "block1": 133, "block2": 133, "blue": 226, "bmatrix": 168, "bool": [1, 5, 19, 28, 29, 50, 51, 52, 53, 54, 66, 68, 78, 97, 98, 99, 108, 110, 118, 119, 120, 121, 122, 123, 124, 139, 140, 144, 148, 153, 154, 155, 157, 159, 171, 172, 173, 174, 175, 176, 177, 178, 179, 191, 192, 193, 200, 205, 206, 222], "both": [45, 59, 70, 74, 89, 97, 98, 126, 127, 129, 130, 162, 163, 164, 168, 172, 211, 230], "bottom": 78, "bound": [83, 85, 87, 145, 157], "box": 4, "break": 133, "brief": 232, "bright": 232, "broadcast": [104, 105, 192, 200, 205, 215, 219], "buffer": [136, 142, 144, 146], "build": [7, 28, 31, 34, 133, 232], "built": [3, 7, 34, 133], "burg": 5, "c": [5, 49, 52, 53, 54, 61, 65, 66, 68, 70, 71, 72, 74, 75, 76, 78, 79, 104, 105, 113, 116, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 149, 209, 220, 224], "c_": [97, 98, 99], "c_in": [45, 46, 47], "c_out": [45, 46, 47], "calcul": [0, 1, 7, 8, 29, 137, 138, 141, 142, 143, 150, 154, 159], "calculu": [9, 16], "call": [1, 28, 148, 160, 161, 164, 165, 166, 167, 169, 170], "callabl": [134, 221], "can": [0, 2, 3, 4, 7, 9, 11, 13, 14, 16, 17, 19, 27, 29, 30, 31, 32, 33, 34, 39, 45, 46, 47, 79, 89, 90, 95, 97, 98, 99, 121, 122, 123, 127, 128, 129, 130, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 149, 150, 151, 157, 158, 159, 164, 173, 174, 175, 176, 178, 179, 192, 200, 205, 209, 211, 212, 214, 215, 218, 219, 220, 221, 222, 225, 227, 228, 229, 232], "cannot": [10, 11, 13, 14, 17, 18, 19], "capabl": [7, 171, 172, 175, 176, 177, 178, 179], "captur": [49, 97, 98, 99, 108], "care": 150, "cartesian": 211, "case": [3, 15, 21, 36, 39, 40, 41, 88, 90, 91, 92, 114, 115, 116, 126, 127, 128, 129, 130, 131, 133, 138, 143, 145, 149, 165, 166, 181, 185, 191, 193, 195, 212, 232], "caus": [3, 16, 136, 144, 146], "cautiou": 0, "cdot": [9, 10, 13, 14, 15, 18, 36, 37, 39, 41, 42, 45, 46, 47, 57, 59, 70, 71, 72, 74, 75, 76, 78, 86, 87, 89, 93, 101, 108, 110, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 137, 138, 139, 140, 141, 142, 143, 145, 162, 163, 164, 167, 169], "center": [79, 95, 144, 223, 232], "centercrop": [231, 232], "central": 151, "certain": [10, 37, 57, 108, 139, 140, 148, 191, 193], "chain": [13, 14, 34, 221, 232], "chanc": [226, 227, 229], "chang": [62, 114, 145, 149, 150, 213, 215, 219, 226, 232], "channel": [21, 23, 24, 25, 45, 46, 47, 49, 52, 53, 54, 66, 68, 70, 71, 72, 74, 75, 76, 78, 79, 97, 98, 99, 104, 105, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 224, 226, 230], "check": [148, 223, 225], "checkpoint": 135, "choic": 211, "choleski": 12, "chosen": 101, "christoph": 5, "clariti": 151, "class": [3, 4, 7, 23, 24, 25, 43, 61, 65, 133, 135, 172, 175, 206, 232], "classic": 25, "classif": [4, 23, 24, 25, 26, 42, 43, 60, 61, 65, 93, 94, 112, 113, 116], "classifi": [21, 23, 24, 25], "cleaner": [1, 150, 164], "clear": [29, 159, 173, 174], "clearli": 151, "clf_in_featur": 21, "clf_layer": 21, "clip": [79, 145, 180], "clockwis": 79, "close": [13, 16, 92, 112, 144], "closer": 88, "closur": [134, 135], "co": [180, 196], "code": [14, 30, 32, 34, 148, 150, 151, 158], "coeffici": [18, 78, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146], "col": 49, "collect": [4, 8, 26, 30, 31, 33, 34, 135], "color": [226, 232], "colorjitt": 232, "column": [10, 11, 13, 17, 18, 19, 49, 175, 209, 211], "com": 5, "combin": [1, 3, 31, 34, 36, 37, 89, 113, 133, 142, 143, 192, 200, 205, 207, 232], "combined_dataset": [0, 1], "common": [49, 79, 135, 232], "commonli": [7, 37, 42, 43, 44, 45, 47, 57, 64, 66, 68, 79, 86, 87, 94, 99, 112, 115, 116, 126, 127, 128, 129, 130, 131, 149, 151, 176, 216, 222, 223, 224, 225, 227, 228, 229, 232], "compar": [158, 217], "compat": [4, 8, 109, 124, 133, 149, 158, 222, 232], "complex": [2, 3, 7, 11, 30, 31, 34, 40, 91, 129, 131, 133, 135, 232], "compon": [16, 28, 31, 135, 159, 232], "compos": [5, 97, 98, 99, 126, 127, 128, 129, 130, 131, 133, 232], "comprehens": 3, "comput": [7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 49, 57, 59, 60, 61, 62, 64, 65, 66, 68, 78, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 144, 148, 149, 150, 151, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 211, 212, 214, 218, 222, 232], "computation": [3, 16], "compute_loss": [135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "concaten": [0, 45, 46, 47, 209, 210, 217, 220], "concept": [7, 16, 26], "condit": [9, 10, 13], "configur": [21, 23, 24, 25, 33], "conjunct": [49, 116], "connect": [21, 23, 24, 25, 59, 97, 98, 99, 110], "consid": [3, 13, 16, 34, 82, 83, 86, 87, 133, 145, 148, 173, 174, 232], "consider": 16, "consist": [2, 4, 23, 24, 25, 27, 151, 156, 158, 212, 223, 230, 232], "consistent_tensor": 158, "constant": [60, 61, 66, 68, 69, 81, 92, 112, 113, 118, 119, 120, 121, 122, 123, 124, 137, 138, 139, 140, 141, 142, 143, 144, 151, 212], "constant_pad": 212, "constraint": 1, "construct": [7, 31, 133, 172, 214, 218], "contain": [1, 5, 10, 11, 16, 17, 18, 19, 21, 28, 30, 31, 32, 33, 34, 43, 49, 57, 59, 60, 61, 65, 78, 112, 113, 116, 134, 160, 161, 162, 163, 165, 166, 167, 168, 170, 171, 174, 181, 182, 183, 184, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 208, 211], "content": 79, "context": [148, 150], "contextmanag": 150, "contigu": 213, "continu": [90, 155], "contrast": [121, 122, 123, 232], "contribut": [78, 101, 102, 103, 104, 105, 126, 129, 130, 131, 136, 142, 203], "control": [88, 114, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 158, 222, 232], "conv": [119, 120], "conv1": [23, 24, 25, 34, 97, 98, 99, 126, 127, 128, 129, 130, 131], "conv1d": [48, 56, 100, 107, 126, 129], "conv1dmodel": 97, "conv2": [23, 24, 25, 34, 97, 98, 99], "conv2d": [31, 34, 48, 56, 100, 107, 119, 127, 130, 133], "conv2dmodel": 98, "conv3d": [48, 56, 100, 107, 120, 128, 131], "conv3dmodel": 99, "conv_lay": [21, 31], "convblock": 133, "conveni": 4, "convent": 164, "converg": [16, 95, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 224], "convers": [113, 116, 226, 232], "convert": [5, 27, 29, 43, 94, 159, 211, 221, 222, 226, 232], "convnetwork": 31, "convolut": [21, 23, 24, 25, 31, 45, 46, 47, 49, 97, 98, 99, 127, 128, 130, 131, 212], "convolv": [45, 46, 47, 97, 98, 99], "coordin": 211, "core": [0, 1, 2, 3, 28, 133, 134, 159, 232], "corinna": 5, "corner": [78, 223, 225], "correct": [30, 113, 116, 139, 140, 141, 142, 143, 222], "correctli": [16, 28, 30, 31, 32, 33, 34, 113, 116, 158], "correspond": [0, 1, 2, 5, 11, 30, 32, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 57, 59, 78, 91, 94, 108, 110, 118, 119, 120, 121, 122, 123, 127, 128, 136, 144, 146, 162, 163, 165, 166, 169, 189, 190, 196, 198, 209, 212, 214, 218, 220], "cort": 5, "cosh": [180, 197, 202], "cosin": [182, 186, 187, 196], "could": 28, "count": [26, 207], "counterclockwis": [79, 228], "cover": [8, 45, 46, 47], "creat": [2, 3, 7, 23, 24, 25, 27, 28, 31, 34, 133, 149, 158, 171, 175, 176, 177, 178, 179, 211, 217, 221, 232], "creation": [31, 34, 232], "criterion": [112, 113, 114, 115, 116], "critic": [16, 135, 158], "crop": [223, 225, 232], "cross": [60, 61, 112, 113], "cross_entropi": [56, 63], "crossentropyloss": [107, 117], "cube": 180, "cumul": [37, 89], "current": [28, 136, 139, 145, 148], "custom": [4, 7, 21, 27, 30, 31, 32, 33, 34, 79, 88, 90, 133, 158, 175], "custom_lenet": 21, "customiz": 232, "custommodul": 27, "customnetwork": 30, "customparametermodel": [32, 33], "d": [47, 54, 72, 76, 120, 123, 124, 128, 131, 149, 172, 228], "d_": [47, 72, 76, 99, 128, 131], "d_1": 124, "d_2": 124, "d_n": 124, "d_out": [47, 72, 76], "dampen": [136, 144, 146], "data": [4, 5, 7, 14, 27, 29, 33, 44, 45, 47, 49, 53, 54, 59, 79, 91, 95, 97, 98, 99, 110, 123, 126, 128, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 151, 158, 159, 160, 161, 167, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 206, 212, 213, 214, 215, 216, 218, 221, 222, 225, 226, 227, 228, 229, 232], "databas": 5, "dataload": [2, 3], "dataset": [3, 5, 23, 24, 25, 79, 138, 150, 221, 223, 232], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 168, "debug": [34, 148, 156, 232], "decai": [136, 137, 138, 139, 140, 141, 142, 143, 144, 146], "decompos": [9, 17, 19], "decomposit": [8, 9, 13, 16, 17, 19], "decoupl": [137, 138, 140, 141, 142, 143], "decreas": [139, 140, 145], "deep": [1, 3, 4, 7, 26, 66, 89, 92, 133, 158, 221, 222, 232], "deeper": [7, 92], "def": [0, 1, 2, 3, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 108, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222], "default": [1, 5, 15, 19, 27, 28, 29, 30, 31, 32, 33, 36, 39, 43, 45, 46, 47, 50, 51, 52, 53, 54, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 82, 83, 84, 85, 86, 87, 88, 90, 94, 97, 98, 99, 101, 102, 103, 104, 105, 108, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 134, 135, 142, 148, 153, 154, 155, 157, 159, 171, 172, 173, 174, 175, 176, 177, 178, 179, 191, 192, 193, 200, 204, 205, 206, 207, 209, 211, 212, 214, 217, 220, 222, 226, 227, 229], "defin": [1, 3, 4, 7, 21, 30, 31, 32, 33, 34, 89, 112, 113, 114, 115, 116, 126, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 151, 154, 155, 169, 174, 185, 204, 221, 232], "definit": [7, 9, 232], "degre": [79, 228, 232], "delai": 136, "delta": [43, 62, 94, 114, 137], "delta_": [43, 94], "demonstr": [7, 8, 26, 133, 151], "denomin": [66, 68, 69, 118, 119, 120, 121, 122, 123, 124, 137, 138, 139, 140, 141, 142, 143, 144, 161], "denot": [14, 93, 97, 98, 99, 101, 102, 103, 104, 105, 204], "dens": [7, 138], "dense1": 7, "dense2": 7, "densiti": [37, 89], "depend": [7, 14, 15, 33, 60, 61, 62, 64, 65, 78, 97, 162, 172, 191, 193, 214, 218, 225, 226, 230], "depth": [31, 47, 54, 72, 76, 99, 120, 123, 128, 131], "depthwis": [45, 46, 47], "deriv": [16, 17, 43, 89, 94, 95, 97, 98, 99, 108, 110], "descend": 19, "descent": [7, 136, 146], "describ": [10, 11], "descript": 232, "deseri": 27, "design": [3, 4, 7, 8, 23, 24, 25, 26, 29, 31, 32, 33, 34, 36, 41, 92, 101, 133, 151, 232], "desir": [27, 204, 206], "destin": 28, "det": [8, 12], "det_a": 10, "detail": [7, 135, 158, 164], "determin": [0, 7, 8, 9, 10, 21, 82, 83, 86, 87, 97, 98, 99, 127, 128, 130, 131, 144, 148, 153, 154, 155, 157, 173, 174, 223, 225], "determinist": 79, "develop": [7, 133, 158, 232], "deviat": [82, 84, 86, 221, 224, 232], "diag": [16, 180], "diagon": [16, 17, 19, 172, 175, 203], "diagonaliz": 11, "dict": [21, 28, 30, 32, 109, 134], "dictionari": [21, 28, 29, 30, 32, 34, 134], "differ": [0, 14, 21, 31, 34, 43, 57, 78, 94, 108, 115, 135, 149, 156, 158, 170, 179, 205, 216, 232], "differenti": [7, 9, 18, 89, 133, 153, 154, 155, 157, 159, 171, 173, 174, 176, 178], "digit": [5, 25], "dilat": [45, 46, 47, 97, 98, 99], "dilation_height": 49, "dilation_width": 49, "dim": [113, 116], "dimens": [10, 11, 13, 14, 17, 18, 19, 29, 43, 57, 59, 66, 68, 69, 78, 94, 97, 98, 99, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 149, 151, 153, 157, 159, 163, 173, 191, 192, 193, 200, 203, 204, 205, 207, 209, 212, 214, 216, 217, 218, 219, 220, 223, 225, 230], "dimension": [14, 16, 17, 19, 45, 46, 47, 70, 71, 72, 74, 75, 76, 97, 98, 99, 103, 104, 105, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 149, 163, 164, 168, 172, 189, 192, 200, 203, 205, 208, 213, 214, 216, 218], "diminish": 138, "direct": [11, 112, 113, 114, 115, 116, 136, 144, 145, 146], "directli": [30, 31, 32, 33, 78, 137, 138, 140, 141, 142, 143, 156, 158, 206, 232], "directori": [3, 4, 5], "disabl": [148, 150], "discontinu": 195, "discrep": [112, 113, 116], "discret": [154, 158], "disk": 3, "distribut": [37, 43, 78, 82, 83, 84, 85, 86, 87, 89, 94, 97, 98, 99, 101, 102, 103, 104, 105, 108, 110, 113, 116, 126, 127, 128, 153, 154, 155, 157, 158, 192, 200, 203, 205, 217, 224, 226, 227, 228, 229], "div": 180, "divers": [79, 227, 229, 232], "diversifi": 232, "divid": [1, 16, 31, 34, 43, 45, 46, 47, 94, 112, 113, 114, 115, 116, 161, 224], "divis": [7, 16, 45, 46, 47, 101, 102, 103, 104, 105, 137, 138, 139, 140, 141, 142, 143, 144, 161], "do": [16, 18, 27, 30, 31, 32, 33, 50, 51, 52, 53, 133, 143, 148, 179, 203, 212], "document": [4, 7, 135, 151, 158], "doe": [7, 14, 15, 16, 17, 19, 27, 30, 31, 32, 33, 34, 87, 139, 140, 145, 148, 150, 153, 154, 155, 156, 157, 171, 172, 173, 174, 175, 176, 177, 178, 179, 215], "doesn": 150, "domain": 4, "don": 150, "dot": [11, 14, 30, 31, 32, 33, 34, 124, 129, 130, 131, 163, 168, 180, 207, 209, 217, 220], "down": [3, 133, 230], "download": [4, 5], "drawback": 36, "drawn": [153, 154, 155, 157, 158, 228], "drop": [101, 102, 103, 104, 105], "dropout": [37, 50, 52, 53, 54, 101, 103, 104, 105], "dropout1d": [55, 56, 106, 107], "dropout1dmodel": 103, "dropout2d": [55, 56, 106, 107], "dropout3d": [55, 56, 106, 107], "dropoutmodel": 102, "dtype": [27, 29, 159, 171, 172, 173, 174, 175, 176, 177, 178, 179, 206, 222], "due": [14, 16, 45, 46, 91, 228], "duplic": [30, 32], "dure": [3, 7, 10, 11, 13, 16, 17, 19, 27, 28, 29, 30, 31, 32, 33, 34, 43, 50, 51, 52, 53, 54, 66, 68, 79, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 148, 150, 159, 160, 191, 192, 193, 200, 205, 222, 225, 228, 232], "dy": [39, 90], "dynam": [0, 2, 3, 28, 31, 32, 33, 34, 124, 138, 143, 148], "dynamicnetwork": 31, "e": [0, 10, 11, 13, 14, 17, 19, 21, 23, 24, 25, 27, 43, 93, 94, 101, 113, 134, 137, 144, 145, 175, 187, 189, 190, 197, 202, 203, 207, 226], "each": [1, 2, 3, 4, 11, 14, 16, 17, 19, 21, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 57, 59, 66, 68, 91, 94, 97, 98, 99, 101, 102, 103, 104, 105, 108, 110, 112, 113, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 137, 138, 139, 140, 141, 142, 143, 144, 145, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 207, 209, 211, 212, 214, 217, 218, 220, 221, 222, 223, 224, 225, 226, 228, 230, 232], "earli": 143, "eas": [4, 7], "easi": [2, 3, 4, 7, 29, 30, 32], "easier": [3, 30, 31, 34], "easili": [4, 29, 33, 232], "economi": 19, "edg": 212, "educ": [7, 26], "effect": [30, 31, 32, 33, 34, 43, 45, 46, 47, 49, 88, 89, 91, 93, 94, 95, 118, 119, 120, 121, 122, 123, 124, 148, 149, 150, 209, 220], "effici": [1, 2, 3, 5, 7, 8, 13, 18, 49, 113, 133, 150], "eig": 12, "eigenvalu": [11, 17], "eigenvector": 11, "eigval": 11, "eigvec": 11, "either": [59, 151, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 206, 211], "element": [0, 16, 17, 29, 33, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 91, 94, 97, 98, 99, 101, 102, 103, 104, 105, 112, 113, 114, 115, 116, 124, 126, 127, 128, 129, 130, 131, 149, 159, 160, 161, 164, 165, 166, 167, 168, 169, 170, 171, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 208, 211, 212, 214, 215, 216, 218], "elementwise_affin": 124, "elsewher": [129, 130, 131, 175], "elu": [38, 56, 96, 107], "elumodel": 88, "empti": [28, 34, 180], "empty_lik": 180, "enabl": [0, 1, 2, 3, 7, 14, 19, 28, 29, 30, 31, 32, 33, 91, 97, 98, 99, 108, 110, 133, 135, 148, 150, 153, 154, 155, 157, 159, 221], "encapsul": [133, 159], "encod": [113, 116], "encourag": [102, 103, 104, 105, 112, 113, 116, 139], "end": [15, 36, 39, 40, 41, 88, 90, 91, 92, 114, 115, 116, 126, 127, 128, 129, 130, 131, 143, 145, 165, 166, 168, 171, 181, 185, 191, 193, 195, 207, 212, 232], "enforc": [28, 30, 32], "engin": 16, "enhanc": [24, 30, 32, 232], "ensur": [3, 5, 16, 17, 18, 27, 28, 29, 30, 31, 32, 33, 34, 43, 90, 94, 101, 102, 103, 104, 105, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 133, 134, 136, 137, 139, 140, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 169, 192, 200, 205, 212, 222, 223, 224, 225, 226, 230, 232], "enter": 150, "entir": [3, 52, 53, 54, 104, 105, 158], "entri": [21, 216], "entropi": [60, 61, 112, 113], "environ": 7, "ep": [60, 61, 66, 68, 69, 112, 113, 118, 119, 120, 121, 122, 123, 124, 137, 138, 139, 140, 141, 142, 143, 144], "epoch": [1, 3], "epsilon": [112, 113, 118, 119, 120, 121, 122, 123, 124, 137, 138, 139, 140, 141, 142, 143, 144], "equal": [14, 78, 126, 127, 128, 223, 225], "equat": [11, 16, 18], "equival": [164, 203, 213], "error": [0, 3, 11, 13, 28, 31, 32, 33, 34, 37, 62, 64, 89, 112, 113, 114, 115, 133, 134, 150, 151], "especi": [3, 30, 32, 33, 93, 149, 150, 151, 156, 221, 222, 226, 232], "essenti": [1, 3, 7, 8, 14, 16, 46, 49, 133, 156, 158, 191, 221, 222, 226, 232], "estim": [115, 139, 140, 141, 142, 143, 144], "eta": 145, "eta_": 145, "etc": [112, 222], "euclidean": 15, "evalu": [28, 66, 68, 101, 102, 103, 104, 105, 118, 119, 120, 121, 122, 123, 232], "even": [137, 150, 171, 172, 175, 176, 177, 178, 179], "evenli": 171, "everi": [1, 232], "everywher": 195, "exact": [28, 31, 204, 226, 228], "exactli": 34, "exampl": [4, 164], "except": [0, 195, 207, 209, 220], "exclus": [154, 157, 171], "exdb": 5, "execut": [31, 150], "exist": [18, 30, 32, 34, 207], "exit": 150, "exp": [36, 41, 42, 44, 88, 92, 180], "expand": [4, 49, 214, 218], "expect": [9, 31, 34, 101, 102, 103, 104, 105, 124, 133, 151], "expens": 3, "experi": [7, 156, 158, 232], "experiment": 158, "explan": [14, 16, 136], "explicit": 34, "explicitli": [30, 32], "explod": [92, 118, 119, 120], "explor": [133, 158], "expon": [14, 169], "exponenti": [36, 41, 43, 88, 92, 94, 101, 139, 140, 141, 142, 143, 189], "extend": 4, "extens": 135, "extern": [4, 7], "extract": [26, 49, 99, 126, 128, 172, 191, 193, 223, 225], "extractor": [21, 23, 24, 25], "extrem": 16, "ey": 180, "f": [1, 4, 5, 7, 32, 33, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 94], "facilit": [30, 34, 43, 94, 97, 98, 99, 133, 135, 224, 232], "factor": [36, 45, 46, 47, 49, 86, 87, 136, 143, 144, 145, 146, 151], "failur": [30, 31, 32, 33, 133], "fals": [1, 5, 19, 27, 28, 29, 50, 51, 52, 53, 54, 66, 68, 78, 80, 82, 83, 84, 85, 86, 87, 97, 98, 99, 108, 110, 139, 140, 144, 148, 153, 154, 155, 157, 159, 171, 172, 173, 174, 175, 176, 177, 178, 179, 191, 192, 193, 200, 205, 206, 222], "fan": [82, 83, 86, 87], "fan_in": [82, 83], "fan_out": [82, 83], "fast": 143, "faster": [138, 142, 150], "fc": [31, 98, 99, 126, 127, 128, 129, 130, 131], "fc1": [24, 25, 30, 34, 89, 91, 92, 93, 95, 110], "fc2": [24, 25, 30, 34, 89, 91, 92, 93, 95, 110], "fc3": 25, "featur": [3, 21, 23, 24, 25, 26, 57, 59, 66, 99, 102, 103, 104, 105, 108, 110, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 138], "feature_extractor": 21, "fed": [3, 232], "feed": [3, 159, 232], "fetch": 0, "fewer": 1, "field": 5, "file": 3, "fill": [80, 84, 85, 153, 154, 155, 157, 176, 177, 178, 179], "filter": [45, 46, 47, 49, 98, 99], "filter_height": 49, "filter_s": 49, "filter_width": 49, "final": [30, 31, 32, 33, 34, 221, 232], "find": [18, 191, 193], "fine": 232, "finish": 150, "first": [5, 11, 21, 31, 32, 57, 108, 139, 140, 141, 142, 143, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 211, 220, 221, 222, 232], "fit": 133, "fix": [31, 212], "flatten": [21, 34, 49, 168, 210, 213, 214], "flexibl": [1, 3, 4, 7, 21, 30, 31, 32, 33, 34, 133, 135, 151, 176, 177, 222, 232], "flip": [227, 229, 232], "float": [2, 5, 27, 29, 36, 39, 50, 51, 52, 53, 54, 60, 61, 62, 66, 68, 69, 79, 80, 84, 85, 86, 87, 88, 90, 101, 102, 103, 104, 105, 112, 113, 114, 118, 119, 120, 121, 122, 123, 124, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 151, 157, 159, 171, 174, 185, 206, 224, 226, 227, 228, 229], "float32": [27, 29, 159, 171, 172, 175, 176, 178, 206, 222], "float64": [179, 206, 222], "flow": [34, 87, 89, 93, 95, 97, 98, 99, 108, 110, 148], "fly": [2, 3], "fname": 3, "focu": 7, "focus": 7, "follow": [0, 7, 8, 11, 17, 18, 19, 36, 37, 39, 40, 41, 42, 43, 44, 57, 59, 78, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 151, 158, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 191, 193, 211, 215, 223, 224, 225, 226, 227, 228, 229, 232], "form": [17, 168, 211, 214, 218, 232], "format": [2, 3, 5, 113, 116, 222], "formul": 37, "formula": [11, 19, 43, 94, 114, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 164, 205, 226], "forward": [7, 21, 23, 24, 25, 27, 28, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "found": 7, "foundat": [28, 133, 135, 159], "four": 212, "frac": [9, 10, 11, 13, 14, 15, 16, 18, 19, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 57, 59, 70, 71, 72, 74, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 137, 138, 139, 140, 141, 142, 143, 144, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 224], "frame": 54, "framework": [4, 7, 26, 113, 116, 118, 119, 120, 121, 122, 123, 134, 135, 232], "frequent": [113, 116], "from": [0, 1, 2, 3, 4, 5, 7, 14, 16, 27, 28, 29, 30, 31, 32, 33, 34, 49, 57, 66, 68, 78, 80, 82, 83, 84, 85, 86, 87, 97, 98, 99, 101, 102, 103, 104, 105, 108, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 133, 134, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 149, 150, 151, 153, 154, 155, 157, 158, 159, 164, 165, 166, 170, 172, 191, 192, 193, 200, 205, 207, 209, 211, 214, 216, 217, 218, 220, 223, 224, 225, 226, 227, 228, 229, 232], "full": 19, "full_matric": 19, "fulli": [4, 8, 21, 23, 24, 25, 59, 110, 158], "function": [3, 4, 5, 7, 8, 28, 30, 31, 32, 33, 34, 88, 89, 90, 91, 92, 93, 94, 95, 101, 102, 103, 104, 105, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 133, 135, 151, 158, 221, 232], "fundament": [7, 59, 110, 222], "further": [7, 158, 192, 200, 205], "futur": 109, "g": [0, 10, 11, 14, 17, 19, 21, 23, 24, 25, 101, 134, 137, 144, 207, 226], "g_": 138, "g_t": 144, "gain": [86, 87], "gamma": [118, 119, 120, 121, 122, 123, 124], "gaussian": [37, 89], "gelu": [38, 56, 96, 107], "gelunetwork": 89, "gener": [16, 79, 101, 102, 103, 104, 105, 122, 140, 142, 143, 150, 153, 154, 155, 156, 157, 158, 163, 171, 173, 174, 211, 225, 226, 227, 229, 232], "get": 5, "give": [7, 136, 144], "given": [10, 11, 14, 16, 17, 19, 49, 112, 113, 116, 134, 148, 177, 179, 221, 226, 227, 229, 232], "global": [0, 148, 150, 156, 158], "goal": [112, 113, 116], "grad": [27, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 49, 57, 59, 78, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 134, 135, 153, 154, 155, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 227, 229, 230], "grad_output": 14, "gradient": [7, 8, 27, 29, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 153, 154, 155, 157, 171, 172, 173, 174, 175, 176, 177, 178, 179, 206, 222], "graph": [7, 87, 159, 171, 172, 175, 176, 177, 178, 179, 222], "grayscal": [5, 21, 23, 24, 25, 226, 232], "greater": 185, "green": 226, "grid": 211, "group": [31, 45, 46, 47, 97, 98, 99, 134, 135], "group1": 31, "group2": 31, "guarante": 156, "h": [46, 47, 49, 53, 54, 71, 72, 75, 76, 78, 79, 119, 120, 122, 123, 128, 131, 223, 225], "h_": [46, 47, 71, 72, 75, 76, 78, 98, 99, 127, 128, 130, 131], "h_out": [46, 47, 71, 72, 75, 76], "h_stack": 209, "ha": [0, 11, 34, 45, 46, 47, 112, 113, 118, 119, 120, 121, 122, 123, 124, 134, 135, 164, 203, 207, 209, 217, 220, 226], "half": 198, "hand": 18, "handl": [0, 3, 7, 16, 28, 30, 31, 32, 33, 34, 113, 116, 133, 135, 150], "handwritten": [5, 25], "hardwar": 7, "hat": [139, 140, 141, 142, 143], "have": [0, 1, 10, 11, 13, 16, 17, 19, 29, 31, 33, 34, 46, 47, 87, 133, 175, 176, 177, 178, 179, 191, 193, 207, 209, 211, 216, 217, 220, 224, 230], "height": [46, 47, 49, 53, 54, 71, 72, 75, 76, 78, 79, 98, 99, 119, 120, 122, 123, 127, 128, 130, 131, 223, 225, 230], "help": [7, 39, 41, 54, 88, 90, 92, 95, 118, 119, 120, 126, 127, 129, 130, 136, 139, 140, 142, 148, 149, 150, 151], "henc": 215, "here": [3, 9, 28, 57, 133, 135, 149, 150, 151, 158, 221, 222, 232], "hidden": 31, "hidden_s": 31, "hierarch": [31, 34, 133], "hierarchi": 98, "hierarchicalnetwork": 31, "high": [7, 154, 157], "higher": [113, 116, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 163, 164, 168, 189], "highest": 154, "highlight": [129, 130, 131], "hint": 151, "histor": 138, "histori": [153, 154, 155, 157, 171, 172, 173, 174, 175, 176, 177, 178, 179], "hold": [30, 31, 32, 33], "horizont": [209, 217, 227, 232], "hot": [113, 116], "how": [2, 3, 7, 31, 34, 133, 151, 232], "howev": [27, 87], "hstack": 210, "http": 5, "huber": [62, 114], "huber_loss": [56, 63], "huberloss": [107, 117], "huberregressionmodel": 114, "hue": 232, "hyperbol": [44, 95, 187, 197, 202], "hyperparamet": [134, 136], "i": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 82, 83, 84, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 182, 183, 184, 185, 186, 187, 189, 190, 191, 192, 193, 195, 196, 197, 198, 200, 201, 202, 203, 204, 205, 206, 207, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232], "ideal": [7, 34], "ident": [13, 14, 79, 107, 111, 156, 158, 175, 215], "identifi": 32, "idx": [2, 3], "ii": 203, "ij": [43, 78, 94, 162, 163, 164, 168, 211], "ik": [162, 163, 164], "ill": [10, 16], "imag": [3, 4, 5, 21, 23, 24, 25, 26, 46, 68, 79, 98, 122, 211, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232], "image_dir": 3, "image_path": 3, "imagedataset": 3, "imageio": 3, "imbal": [113, 116], "impact": 142, "implement": [2, 3, 7, 16, 21, 26, 28, 49, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 209, 220, 226], "impli": [97, 98], "import": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 51, 54, 57, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232], "improp": [31, 34, 158], "improv": [66, 79, 89, 92, 95, 136, 137, 138, 139, 140, 141, 142, 143, 144, 151, 225, 228, 232], "imread": 3, "in1_featur": [57, 108], "in2_featur": [57, 108], "in_channel": [31, 34, 97, 98, 99, 119, 120, 126, 127, 128, 129, 130, 131, 133], "in_featur": [30, 31, 34, 59, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 101, 102, 103, 108, 110, 112, 113, 114, 115, 116, 118, 121, 124, 126, 127, 128, 129, 130, 131], "includ": [3, 4, 7, 8, 14, 15, 21, 28, 29, 31, 33, 34, 78, 133, 134, 135, 142, 151, 158, 164, 212], "inclus": [29, 32, 154, 157], "incom": [59, 110], "incomplet": 2, "incompletedataset": 2, "incorpor": [19, 89], "increas": [45, 46, 47, 49, 79, 138, 145, 149, 209, 220, 226, 227, 229, 232], "independ": [31, 45, 46, 47, 101, 102, 103, 104, 105, 124, 164, 174, 224, 226, 228, 230], "index": [0, 2, 5, 149, 171, 172, 175, 211, 215], "indexerror": 0, "indic": [0, 1, 29, 31, 33, 34, 61, 65, 113, 116, 126, 148, 159, 223, 225], "individu": [3, 31, 34, 114, 124, 135, 138, 145], "induc": [41, 92], "inf": 201, "infer": [31, 34, 150], "infin": [17, 19, 141], "inform": [7, 27, 135, 137, 150], "infti": [15, 143], "inherit": [1, 136, 144, 146], "init": 81, "initi": [1, 27, 29, 30, 31, 32, 33, 34, 80, 82, 83, 84, 85, 86, 87, 97, 98, 99, 108, 110, 112, 113, 114, 115, 116, 118, 119, 120, 124, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 153, 156, 157, 158, 171, 175, 176, 177, 178, 179, 206], "initial_accumulator_valu": 138, "inner": [7, 162, 180], "input": [7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 158, 159, 160, 162, 163, 164, 168, 172, 174, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232], "input1": 108, "input2": 108, "input_": [36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79], "input_1": 57, "input_2": 57, "input_data": [88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 126, 127, 128, 129, 130, 131], "input_s": [31, 33, 94, 113, 116], "input_tensor": [7, 21, 23, 24, 25, 27, 30, 31, 32, 33, 34, 43, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 223, 224, 225, 226, 227, 228, 229, 230], "insid": [3, 148, 150], "insight": 7, "inspect": [28, 29, 34, 134], "instabl": [16, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146], "instal": 7, "instanc": [0, 1, 7, 23, 24, 25, 28, 29, 30, 32, 33, 34, 68, 121, 122, 123, 124, 134, 206, 214, 218, 232], "instance_norm": [56, 67, 121, 122, 123], "instancenorm1d": [107, 125], "instancenorm1dmodel": 121, "instancenorm2d": [107, 125], "instancenorm3d": [107, 125], "instanti": 2, "instead": [7, 30, 31, 32, 33, 34, 82, 83, 86, 87, 139, 140, 141, 150, 151, 173, 174], "int": [0, 1, 2, 5, 14, 15, 21, 27, 29, 43, 45, 46, 47, 49, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 84, 85, 86, 87, 94, 97, 98, 99, 108, 110, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 139, 140, 141, 142, 143, 145, 153, 154, 155, 156, 157, 159, 171, 172, 173, 175, 176, 178, 185, 191, 192, 193, 200, 204, 205, 206, 207, 212, 214, 215, 216, 217, 218, 219, 223, 225, 230], "integ": [1, 3, 14, 45, 46, 47, 97, 98, 99, 124, 127, 128, 129, 130, 131, 151, 154, 155, 157, 158, 173, 176, 178, 192, 200, 204, 205, 212, 214, 215, 218], "integr": [1, 2, 4, 5, 8, 29, 31, 33, 34, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 108, 110, 126, 127, 128, 129, 130, 131], "intend": [27, 32, 33], "intens": [16, 224, 226], "intent": 151, "interact": [57, 108, 133, 158], "interfac": [2, 28, 31, 135], "interfer": [148, 150], "intermedi": 16, "intern": [30, 31, 32, 33, 34, 113, 116, 133, 223, 224, 225, 226, 227, 228, 229, 230], "interpol": [56, 77, 230], "interpret": [43, 94, 151, 207], "interv": [153, 157, 171], "introduc": [40, 89, 91, 93, 95, 101, 102, 103, 104, 105, 225, 228, 232], "introspect": 34, "intuit": [7, 30, 32, 133, 232], "inv": 12, "inv_a": 13, "invari": [127, 130], "invers": [7, 10, 13, 14, 16, 138, 182, 183, 184], "invert": [10, 13, 14, 18], "involv": [9, 10, 11, 13, 16, 17, 19, 36, 37, 39, 40, 41, 42, 44, 57, 59, 78, 97, 98, 99, 108, 110, 151, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 179, 189, 190, 191, 193, 196, 198, 211, 212, 214, 218], "is_leaf": 159, "issu": [3, 92, 118, 119, 120, 139, 140], "item": 115, "iter": [0, 1, 2, 3, 27, 28, 31, 33, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 171], "ith": [43, 94], "its": [4, 14, 16, 27, 30, 31, 32, 33, 45, 46, 47, 49, 79, 87, 89, 91, 129, 130, 131, 133, 134, 137, 145, 148, 149, 150, 171, 173, 174, 178, 191, 193, 206, 215, 224, 227, 229, 232], "itself": [9, 14, 30, 31, 32, 33], "j": [5, 43, 94, 118, 119, 120, 121, 122, 123, 126, 127, 129, 130, 211, 217, 223, 225], "jk": 163, "join": [3, 207], "k": [14, 45, 97, 113, 119, 120, 122, 123, 126, 129, 130, 162, 163, 172, 175, 207], "k_d": [47, 99, 128, 131], "k_h": [46, 47, 98, 99, 127, 128, 131], "k_w": [46, 47, 98, 99, 127, 128, 131], "kaim": [82, 83, 86, 87], "kaiming_norm": 81, "kaiming_uniform": 81, "keep": [28, 91, 137, 150, 215], "keep_grad": [29, 153, 154, 155, 157, 159, 171, 172, 173, 174, 175, 176, 177, 178, 179, 206, 222], "keep_var": 28, "keepdim": [191, 192, 193, 200, 205], "kei": [26, 28, 30, 32, 34, 134], "kept": [192, 200, 205], "kernel": [21, 23, 24, 25, 45, 46, 47, 49, 70, 71, 72, 74, 75, 76, 97, 98, 99, 127, 128, 131], "kernel_s": [31, 34, 70, 71, 72, 74, 75, 76, 97, 98, 99, 119, 120, 126, 127, 128, 129, 130, 131], "keyerror": 28, "keyword": [28, 109], "kj": [162, 164], "kroneck": [43, 94], "kwarg": [23, 24, 25, 28, 109], "l": [9, 16, 45, 52, 70, 74, 101, 102, 103, 104, 105, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124], "l2": [136, 137, 138, 139, 140, 141, 142, 143, 144, 146], "l_": [45, 70, 74, 97, 126, 129], "l_out": [45, 70, 74], "label": [4, 5, 112, 113, 116], "lambd": 136, "lambda": [11, 41, 92, 136, 140], "lambda_1": 11, "lambda_2": 11, "lambda_i": 11, "lambda_n": 11, "languag": [4, 97, 108, 126, 129], "larg": [0, 3, 16, 114, 133, 136, 139, 140, 141, 144, 145, 146, 150], "larger": [30, 32, 45, 46, 47, 49, 136, 165, 212, 223, 225, 230], "largest": 191, "last": [1, 43, 69, 94, 163, 164, 207, 227, 229], "latest": 4, "layer": [7, 21, 23, 24, 25, 28, 30, 31, 34, 43, 59, 66, 68, 69, 82, 83, 86, 87, 94, 97, 98, 99, 108, 109, 110, 116, 124, 126, 127, 128, 129, 130, 131, 133, 158, 212, 222], "layer_group": 31, "layer_norm": [56, 67, 124], "layer_sequ": [31, 34], "layernorm": [107, 125], "layernormmodel": 124, "lead": [31, 34, 89, 121, 122, 123, 124, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 158], "leaf": 159, "leaki": [39, 90], "leaky_relu": [38, 56, 90], "leakyrelu": [96, 107], "learn": [1, 3, 4, 5, 7, 14, 16, 26, 30, 31, 32, 33, 40, 43, 88, 90, 91, 94, 97, 98, 99, 102, 103, 104, 105, 108, 110, 133, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 156, 221, 222, 232], "learnabl": [27, 28, 29, 66, 68, 69, 97, 98, 99, 108, 110, 118, 119, 120, 121, 122, 123, 124, 133], "least": [16, 17, 19, 203], "lecun": 5, "left": [14, 15, 16, 19, 37, 43, 89, 94, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 129, 130, 131, 223, 225], "leftarrow": 142, "len": [0, 1, 2, 3, 211], "lenet": [20, 23, 24, 25, 26], "lenet_1": [20, 22, 26], "lenet_4": [20, 22, 26], "lenet_5": [20, 22, 26], "length": [31, 45, 52, 70, 74, 97, 109, 118, 121, 126, 129, 212, 224], "leq": [114, 143, 169, 185], "lerp": 78, "less": [0, 36, 39, 62, 88, 90, 113, 114, 116, 185], "let": 11, "level": 7, "leverag": [18, 26, 133], "librari": [3, 7, 8, 28, 133, 134, 135, 151, 158, 159, 232], "lightweight": 7, "like": [7, 27, 28, 31, 34, 45, 86, 87, 92, 101, 118, 119, 120, 121, 122, 123, 148, 149, 151, 206, 222, 232], "likelihood": [65, 113, 116], "limit": [137, 185], "linalg": [7, 12], "linalgerror": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "linear": [7, 8, 9, 16, 17, 18, 30, 31, 32, 34, 36, 37, 39, 40, 41, 82, 83, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 101, 102, 103, 108, 109, 112, 113, 114, 115, 116, 118, 121, 124, 126, 127, 128, 129, 130, 131, 175], "linearli": 114, "list": [0, 1, 21, 27, 29, 30, 31, 32, 33, 69, 109, 124, 134, 151, 153, 154, 155, 157, 159, 172, 173, 174, 176, 177, 178, 179, 204, 215, 216, 219, 221], "listdir": 3, "liter": [60, 61, 62, 64, 65, 78, 82, 83, 97, 98, 99, 112, 113, 114, 115, 116, 211], "ln": 169, "load": [3, 4, 5, 27, 28, 29, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "load_state_dict": [28, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "loader": [1, 2, 3], "local": [49, 97], "locat": 78, "log": [65, 112, 113, 116, 180], "log_softmax": 116, "logarithm": [169, 189, 190], "logic": [3, 133, 134], "logit": [43, 94, 113], "logsoftmax": [113, 116], "long": [142, 204], "loop": [1, 31, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "loss": [7, 16, 30, 31, 32, 33, 34, 43, 60, 61, 62, 64, 65, 88, 89, 90, 91, 92, 93, 94, 95, 101, 102, 103, 104, 105, 109, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "low": [7, 154, 157], "lower": [9, 85, 136, 144, 145, 146, 157], "lowest": 154, "lr": [134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "lu": 13, "lucid": [0, 1, 2, 5, 12, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 152, 180, 210, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230], "m": [30, 31, 34, 127, 128, 130, 131, 139, 140, 141, 142, 143, 175], "m_": [139, 140, 141, 142, 143], "m_t": [142, 143], "machin": [3, 5, 7, 16, 139, 149, 156], "magnitud": [144, 145, 232], "mai": [3, 7, 11, 13, 16, 31, 33, 79, 114, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 150, 158, 226, 232], "main": [7, 17, 31, 172, 175], "maintain": [16, 27, 28, 30, 31, 32, 34, 41, 82, 83, 86, 87, 88, 89, 92, 101, 102, 103, 104, 105, 118, 119, 120, 121, 122, 123, 139, 144, 223, 226, 230], "make": [1, 3, 7, 21, 31, 34, 93, 113, 114, 124, 127, 130, 133, 138, 139, 140, 141, 149, 158, 159, 164, 211, 221, 232], "manag": [7, 28, 30, 31, 32, 33, 34, 133, 135, 148, 150, 158], "manhattan": 15, "manipul": [7, 30, 32, 232], "manner": [31, 34], "manual": [60, 61, 65, 112, 113, 116, 150], "map": [28, 42, 44, 93, 95], "mask": [27, 101, 102, 103, 104, 105], "match": [18, 28, 31, 34, 60, 62, 64, 69, 134, 189, 214, 215, 218, 219, 224, 232], "math": [186, 196, 201], "mathbf": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 57, 59, 78, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 162, 163, 164, 168, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230], "mathcal": [82, 84, 86, 101, 102, 103, 104, 105, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124], "mathemat": [13, 225, 227, 228, 229], "mathrm": 16, "matmul": 180, "matric": [8, 10, 11, 13, 16, 18, 19, 162, 163, 164, 175, 211], "matrix": [7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 49, 57, 109, 110, 133, 162, 211], "matrix_pow": 12, "max": [15, 40, 74, 75, 76, 91, 129, 130, 131, 141, 165, 180, 185], "max_pool": [129, 130, 131], "max_pool1d": [56, 73], "max_pool2d": [56, 73], "max_pool3d": [56, 73], "max_valu": 185, "maxim": 3, "maximum": [15, 91, 129, 130, 131, 139, 141, 180, 185, 191, 228], "maxpool1d": [107, 132], "maxpool1dmodel": 129, "maxpool2d": [31, 34, 98, 107, 132], "maxpool2dmodel": 130, "maxpool3d": [99, 107, 132], "maxpool3dmodel": 131, "mean": [5, 17, 27, 41, 45, 46, 47, 50, 60, 61, 62, 64, 65, 66, 68, 84, 88, 89, 90, 91, 92, 93, 95, 99, 101, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 139, 140, 141, 142, 143, 144, 148, 155, 180, 185, 189, 190, 191, 193, 196, 198, 200, 203, 204, 205, 221, 224, 232], "meaning": [34, 151], "measur": [112, 113, 115, 116], "mechan": [7, 33, 57], "membership": 112, "memori": [2, 3, 150, 173, 174], "meshgrid": 210, "method": [3, 7, 8, 13, 30, 31, 32, 33, 34, 60, 61, 62, 64, 65, 82, 83, 86, 87, 112, 113, 114, 115, 116, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 158], "middl": 149, "might": 133, "min": [166, 180, 185], "min_valu": 185, "mind": [0, 3, 7, 31, 34, 150], "mini": 1, "minim": [4, 7, 34, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 135], "minimalist": 7, "minimum": [180, 185, 193], "minu": 93, "mirror": [177, 179], "mismatch": [28, 133, 134], "miss": [28, 133], "mitig": [39, 88, 90, 92, 118, 119, 120], "mnist": [4, 6, 23, 24], "mnist_train": [4, 5], "mode": [7, 54, 66, 68, 78, 82, 83, 101, 102, 103, 104, 105, 212], "model": [1, 3, 4, 7, 14, 17, 19, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 43, 79, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 158, 221, 222, 232], "modif": [34, 150], "modifi": [30, 31, 32, 33, 80, 82, 83, 84, 85, 86, 87, 101, 148, 150, 156, 209, 220], "modul": [5, 7, 21, 27, 29, 30, 31, 32, 33, 34, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 151, 158, 222, 232], "modular": [3, 7, 26, 28, 31, 34, 133, 232], "moduledict": [31, 32, 34, 35], "modulelist": [33, 34, 35], "moment": [139, 140, 141, 142, 143], "momentum": [66, 68, 118, 119, 120, 121, 122, 123, 136, 142, 144, 146], "momentum_decai": 142, "moor": 16, "more": [3, 4, 7, 11, 30, 31, 34, 88, 102, 103, 104, 105, 133, 134, 135, 136, 137, 140, 141, 144, 145, 146, 155, 164, 203, 217, 232], "most": [8, 130, 222, 223, 232], "move": [136, 144], "mse": [62, 64, 114, 115], "mse_loss": [56, 63], "mseloss": [107, 117], "mu": [84, 118, 119, 120, 121, 122, 123, 124, 205], "mu_c": 224, "mu_i": [121, 122, 123], "much": 232, "mul": 180, "multi": [3, 4, 43, 61, 65, 94, 113, 116, 192, 200, 205], "multidimension": [153, 157, 173], "multipl": [1, 3, 7, 8, 14, 18, 32, 33, 34, 49, 78, 79, 101, 102, 103, 104, 105, 113, 116, 133, 149, 153, 154, 155, 157, 162, 167, 173, 174, 221, 226, 232], "multipli": [14, 33, 59, 110, 145, 167, 168], "must": [0, 1, 3, 9, 10, 11, 13, 14, 17, 18, 19, 28, 30, 31, 32, 33, 34, 69, 101, 102, 103, 104, 105, 116, 134, 150, 203, 207, 209, 212, 214, 215, 217, 218, 220, 223, 224, 225, 226, 227, 229], "mymodel": [28, 29, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "myoptim": [134, 135], "n": [14, 15, 26, 30, 31, 34, 45, 46, 47, 49, 52, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 82, 84, 86, 97, 98, 99, 104, 105, 108, 110, 112, 113, 115, 116, 118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 175, 192, 203, 205], "n1": 15, "nabla_": [137, 138, 139, 140, 141, 142, 143, 145], "nabla_t": 143, "nadam": 147, "name": [28, 30, 32, 34, 151], "nan": [17, 19], "natur": [16, 26, 97, 108, 126, 129, 169, 189, 190], "ndarrai": [27, 29, 151, 159, 172, 174, 177, 179, 206], "ndim": [17, 19, 29, 159], "ne": 14, "nearest": 78, "necessari": [4, 5, 16, 150, 209, 220], "need": [2, 4, 31, 32, 33, 43, 108, 133, 150, 173, 174, 221, 222, 232], "neg": [14, 16, 19, 36, 65, 79, 88, 90, 91, 92, 113, 116, 145, 207], "negative_slop": [39, 90], "neglect": 33, "neighbor": 78, "neq": 15, "nest": [31, 34, 133], "nesterov": 142, "network": [3, 4, 7, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 40, 41, 42, 43, 44, 45, 46, 47, 57, 59, 66, 79, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 144, 146, 157, 158, 159, 171, 176, 178, 191, 193, 212, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232], "neural": [3, 4, 7, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 37, 40, 41, 42, 43, 44, 45, 46, 47, 57, 59, 66, 79, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 144, 146, 157, 158, 159, 171, 176, 178, 191, 193, 212, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232], "neuralnetwork": 91, "neuron": 90, "never": 226, "new": [28, 29, 36, 37, 39, 40, 41, 42, 44, 57, 59, 78, 82, 83, 84, 85, 86, 87, 134, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 174, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 207, 209, 212, 214, 215, 217, 218, 219, 220], "next": [34, 221], "nll": 65, "nll_loss": [56, 63], "nllloss": [107, 117], "nn": [5, 7, 21, 35, 38, 48, 55, 58, 63, 67, 73, 77, 81, 96, 100, 106, 107, 111, 117, 125, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 222, 232], "no_grad": 148, "node": 159, "nois": [19, 158], "non": [11, 14, 16, 19, 33, 37, 39, 40, 82, 83, 88, 89, 90, 91, 92, 93, 95, 101, 102, 103, 104, 105, 139, 140, 150, 169, 185], "none": [0, 1, 2, 5, 21, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 57, 59, 60, 61, 62, 64, 65, 66, 68, 69, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 149, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 173, 174, 175, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 227, 229, 230], "norm": [8, 12, 141], "normal": [5, 37, 41, 43, 44, 66, 68, 69, 81, 82, 86, 89, 92, 94, 101, 118, 119, 120, 121, 122, 123, 124, 144, 155, 158, 221, 231, 232], "normalized_shap": [69, 124], "note": [45, 101], "noth": [50, 51, 52, 53], "notimplementederror": [2, 28, 134], "notin": 185, "np": [27, 29, 113, 116, 151, 159, 164, 171, 172, 175, 176, 178, 179, 190, 206, 222], "npy": 5, "num_class": [94, 113, 116], "num_featur": [34, 118, 119, 120, 121, 122, 123], "num_paramet": 33, "number": [0, 1, 2, 5, 10, 11, 13, 16, 18, 19, 21, 23, 24, 25, 29, 31, 33, 34, 45, 46, 47, 49, 52, 53, 54, 57, 59, 61, 65, 66, 68, 78, 79, 82, 83, 86, 87, 93, 97, 98, 99, 108, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 136, 153, 156, 157, 159, 169, 171, 173, 175, 191, 192, 193, 204, 205, 207, 209, 212, 214, 215, 216, 218, 220, 224, 226, 227, 229, 232], "numer": [13, 16, 60, 61, 66, 68, 69, 112, 113, 118, 119, 120, 121, 122, 123, 124, 137, 138, 139, 140, 141, 142, 143, 144, 151, 161, 171, 176, 178], "numpi": [7, 27, 29, 113, 116, 151, 159, 164, 172, 175, 190, 203, 206, 212, 214, 218, 222, 232], "o": [3, 128, 131, 176, 177], "object": [1, 3, 8, 28, 32, 33, 115, 133, 150, 160, 161, 165, 166, 167, 170, 206], "observ": 139, "obtain": 1, "occur": [79, 150, 207], "occurr": 14, "odot": [101, 102, 103, 104, 105], "off": 148, "offer": [4, 7, 133, 135, 158, 232], "offset": 175, "often": [14, 45, 46, 47, 49, 113, 116, 171, 178, 222, 226, 230, 232], "older": 142, "onc": 150, "one": [0, 33, 34, 43, 45, 59, 70, 74, 92, 93, 94, 97, 103, 113, 116, 118, 121, 126, 129, 134, 149, 151, 155, 170, 177, 191, 193, 208, 213, 217, 222], "ones": [57, 59, 97, 98, 99, 110, 118, 119, 120, 121, 122, 123, 124, 133, 175, 177, 180], "ones_lik": 180, "onli": [7, 78, 91, 101, 102, 103, 104, 105, 112, 113, 116, 118, 119, 120, 121, 122, 123, 124, 129, 130, 131, 145, 148, 171, 185, 191, 193, 203, 212, 213, 215, 216], "onto": [17, 19], "openml": 5, "oper": [3, 7, 8, 13, 16, 27, 28, 31, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 54, 57, 59, 70, 71, 72, 74, 75, 76, 78, 79, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 126, 127, 128, 129, 130, 131, 133, 148, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 173, 174, 176, 178, 189, 190, 191, 192, 193, 196, 198, 200, 203, 205, 207, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 224, 230], "operatornam": [14, 16], "opposit": 136, "optim": [3, 7, 8, 14, 16, 17, 19, 27, 29, 32, 33, 49, 97, 98, 99, 133, 150], "optimizer_st": [134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "option": [1, 5, 15, 19, 21, 27, 28, 29, 30, 31, 32, 33, 36, 39, 43, 46, 47, 50, 51, 52, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 82, 83, 84, 85, 86, 87, 88, 90, 94, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 134, 136, 144, 146, 153, 154, 155, 157, 159, 171, 172, 173, 174, 175, 176, 177, 178, 179, 191, 192, 193, 200, 204, 205, 206, 207, 211, 214, 216, 217, 222, 226, 227, 229], "ord": 15, "order": [1, 3, 15, 19, 30, 31, 32, 33, 34, 204, 221], "ordered_dict": 34, "ordereddict": [28, 30, 31, 34], "organ": [30, 31, 32, 34], "orient": 232, "origin": [25, 50, 79, 95, 212, 213, 214, 215, 218, 219, 230], "orthogon": [16, 17, 19], "orthonorm": 17, "oscil": [136, 144, 146], "other": [2, 3, 7, 13, 21, 25, 27, 28, 31, 34, 82, 83, 101, 133, 134, 148, 150, 158, 159, 171, 173, 176, 178, 203, 211, 232], "otherwis": [36, 39, 40, 41, 43, 88, 90, 91, 92, 94, 102, 103, 104, 105, 114, 126, 127, 128, 129, 130, 131, 134, 145, 165, 166, 191, 193], "otim": [16, 57, 108], "out": [0, 3, 4, 36, 37, 39, 40, 41, 42, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 57, 59, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 82, 83, 86, 87, 97, 98, 99, 101, 102, 103, 104, 105, 126, 127, 128, 129, 130, 131, 136, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220], "out_channel": [21, 31, 34, 97, 98, 99, 119, 120, 126, 127, 128, 129, 130, 131, 133], "out_featur": [30, 31, 34, 57, 59, 88, 89, 90, 91, 92, 93, 94, 95, 98, 99, 101, 102, 103, 108, 110, 112, 113, 114, 115, 116, 118, 121, 124, 126, 127, 128, 129, 130, 131], "outcom": [226, 227, 229], "outer": 180, "outlier": [62, 114], "output": [0, 1, 2, 7, 14, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 50, 51, 52, 53, 54, 57, 59, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 154, 155, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 178, 179, 189, 190, 191, 192, 193, 196, 198, 200, 203, 204, 205, 211, 212, 214, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230], "output_height": 49, "output_lay": [31, 34], "output_s": 31, "output_width": 49, "outsid": 0, "over": [0, 1, 2, 3, 8, 28, 31, 33, 43, 94, 97, 98, 99, 113, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 136, 137, 138, 139, 140, 153, 157, 191, 192, 193, 200, 203, 205, 226, 227, 229], "overdetermin": 16, "overfit": [1, 51, 54, 102, 103, 104, 105, 136, 139, 144, 146], "overrid": [2, 3], "overridden": [28, 134], "overwrit": [30, 32], "own": [4, 30, 31, 32, 33, 45, 46, 47, 87, 133, 224], "p": [15, 16, 29, 32, 33, 50, 51, 52, 53, 54, 101, 102, 103, 104, 105, 126, 129, 130, 226, 227, 229, 232], "p_d": [128, 131], "p_h": [127, 128, 131], "p_w": [127, 128, 131], "packag": [2, 3, 4, 8, 26, 133, 135, 156, 158, 222, 232], "pad": [21, 31, 34, 45, 46, 47, 49, 70, 71, 72, 74, 75, 76, 97, 98, 99, 119, 120, 126, 127, 128, 129, 130, 131, 210], "pad_after_dim1": 212, "pad_after_dim2": 212, "pad_before_dim1": 212, "pad_before_dim2": 212, "pad_width": 212, "padding_height": 49, "padding_width": 49, "pair": 57, "parallel": [1, 3], "param": [28, 29, 32, 33, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "param1": 28, "param_dict": 32, "param_group": [134, 135], "param_groups_setup": 134, "param_list": 33, "paramet": [0, 2, 7, 23, 24, 25, 26, 28, 133, 134, 135, 151, 158, 232], "parameterdict": 35, "parameterlist": 35, "parent": 133, "part": [27, 28, 87, 133, 148, 150, 158, 171, 172, 175, 176, 177, 178, 179, 222, 232], "partial": [9, 10, 11, 13, 14, 15, 16, 18, 19, 36, 37, 39, 40, 41, 42, 43, 44, 57, 59, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220], "particip": [29, 222], "particular": [30, 32], "particularli": [7, 16, 31, 32, 33, 34, 43, 59, 94, 110, 113, 116, 121, 122, 123, 124, 140, 148, 221], "pass": [2, 7, 16, 21, 23, 24, 25, 28, 29, 30, 31, 32, 33, 34, 78, 88, 89, 90, 91, 92, 93, 95, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 126, 127, 128, 129, 130, 131, 133, 151, 159, 192, 200, 203, 204, 205, 207, 209, 213, 215, 216, 220, 222, 232], "past": [136, 137, 139, 144], "patch": [49, 127], "path": [3, 5], "pattern": [40, 91, 97, 98, 99], "penal": [136, 144, 146], "penalti": [137, 138, 139, 140, 141, 142, 143], "penros": 16, "per": [1, 121, 122, 123, 124], "perform": [3, 7, 8, 9, 16, 21, 23, 24, 25, 28, 29, 33, 37, 45, 46, 47, 66, 68, 69, 70, 71, 72, 74, 75, 76, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 134, 148, 150, 156, 158, 160, 161, 164, 167, 170, 189, 191, 193, 200, 204, 221, 223, 225, 230, 232], "permut": 204, "persist": [27, 153, 154, 155, 157, 173, 174], "perturb": [11, 18, 19, 232], "phi": [37, 89], "pi": [37, 89, 186, 196, 201], "pil": [222, 232], "pinv": 12, "pipelin": [5, 158, 221, 222, 224], "pixel": [5, 78, 224, 226], "place": [80, 82, 83, 84, 85, 86, 87], "placehold": [28, 109], "plai": [151, 158], "plot": 211, "point": [4, 79, 148], "pool": [21, 23, 24, 25, 70, 71, 72, 74, 75, 76, 98, 99, 126, 127, 128, 129, 130, 131, 191, 193], "pool1": 34, "pool2": 34, "poorli": 13, "popul": 28, "popular": 4, "portion": 232, "pose": 16, "posit": [1, 9, 14, 28, 34, 79, 88, 90, 91, 92, 126, 127, 128, 129, 130, 131, 145, 149, 169, 214, 218, 225], "possibl": [7, 232], "potenti": [16, 109, 144, 216], "power": [7, 14, 149, 150, 180, 221, 222, 232], "practic": [16, 113, 116], "practition": 232, "preced": [29, 159], "predefin": [4, 26, 31, 92], "predict": [112, 113, 115, 116], "prefix": 28, "prepar": [3, 149, 212, 214, 218, 222, 232], "prepend": 28, "preprocess": [3, 4, 49, 79, 158, 221, 222, 232], "present": [112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 127], "preserv": [50, 79, 101, 171, 172, 175, 176, 177, 178, 179, 192, 200, 205], "preset": 4, "prevent": [1, 30, 31, 32, 33, 34, 51, 54, 102, 103, 104, 105, 112, 113, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 150], "previou": [136, 145, 150], "previous": 139, "primari": [7, 151], "primarili": 34, "print": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 148, 149, 150, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230], "probabilist": 158, "probabl": [37, 43, 50, 51, 52, 53, 54, 60, 89, 94, 101, 102, 103, 104, 105, 112, 113, 116, 226, 227, 229, 232], "problem": [16, 17, 19, 39, 88, 90, 143], "process": [2, 3, 4, 14, 17, 19, 33, 45, 46, 47, 68, 79, 92, 95, 97, 99, 108, 118, 119, 120, 121, 122, 123, 124, 126, 128, 129, 131, 136, 151, 211, 222, 223, 224, 225, 230, 232], "produc": [97, 98, 99, 156, 158], "product": [7, 17, 19, 93, 108, 124, 133, 162, 163, 167, 168], "program": [148, 158], "progress": 138, "project": [17, 19], "projector": 16, "promin": [126, 128, 129, 130, 131], "promot": [34, 113, 116, 133], "propag": [10, 11, 13, 16, 17, 18, 19, 28, 34, 57, 59, 78, 127, 128, 144, 145, 162, 163, 164, 168, 191, 193, 211, 212, 215, 219], "properli": [0, 33, 43, 94, 133], "properti": [8, 10, 13, 14, 37, 41, 50, 89, 92, 101, 138, 143], "proport": [5, 205], "proportion": 230, "provid": [0, 1, 2, 3, 4, 5, 7, 8, 21, 26, 28, 30, 31, 32, 33, 37, 59, 79, 112, 113, 114, 116, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 144, 146, 148, 150, 151, 156, 158, 159, 164, 171, 177, 191, 193, 204, 206, 214, 216, 218, 232], "pseudo": [13, 16], "purpos": [153, 157, 171, 176, 178], "python": 151, "pytorch": 206, "q": 17, "qr": 12, "quad": [16, 112, 113, 114, 115, 116, 129, 130, 131, 160, 161, 165, 166, 167, 170, 223], "quadrat": 114, "quotient": 161, "r": [17, 226, 227, 228, 229], "r_t": 143, "radam": 147, "rais": [0, 1, 2, 28, 133, 134, 169], "rand": [152, 158], "randint": [152, 158], "randn": [133, 152, 156, 158], "random": [1, 2, 3, 225, 226, 227, 228, 229, 232], "random_integ": 158, "random_tensor": 158, "randomcrop": [231, 232], "randomgrayscal": [231, 232], "randomhorizontalflip": [231, 232], "randomli": [1, 50, 51, 52, 53, 54, 79, 101, 102, 103, 104, 105, 225, 226, 227, 228, 229, 232], "randomnoisedataset": [0, 1, 2], "randomrot": [231, 232], "randomverticalflip": 231, "rang": [0, 1, 8, 33, 42, 44, 45, 46, 61, 65, 87, 93, 95, 136, 144, 146, 154, 182, 183, 185, 224, 228, 232], "rank": 16, "rate": [134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "rather": [32, 33, 140, 215], "ratio": 230, "ravel": 210, "raw": [43, 94, 113, 151], "re": [29, 150], "readabl": [30, 31, 32, 34, 133, 151], "readi": [3, 7, 26], "real": [16, 19, 93], "rearrang": 49, "receiv": [129, 130, 131, 212], "recent": 144, "reciproc": [16, 180, 190, 198], "recognit": [25, 98], "rectangular": 175, "rectif": 143, "rectifi": [39, 40, 90, 91, 143], "recurr": [31, 124], "recurs": 28, "red": 226, "reduc": [118, 119, 120, 121, 122, 123, 126, 127, 128, 129, 130, 131, 142, 145, 150, 151, 191, 192, 193, 200, 205, 226], "reduct": [19, 60, 61, 62, 64, 65, 112, 113, 114, 115, 116, 191, 193], "reevalu": 134, "refer": [4, 7, 28, 158, 172, 175, 207], "reflect": 148, "regardless": [16, 213], "region": [47, 78, 212, 223, 232], "regist": [27, 28, 29, 33, 133], "register_buff": 27, "register_paramet": 28, "registr": [28, 133], "regress": [4, 64, 114, 115], "regular": [16, 54, 102, 103, 104, 105, 136, 137, 138, 141, 142, 143, 144, 146], "relat": [150, 175, 176], "relationship": 230, "relev": [78, 136, 144, 146], "reli": 150, "reliabl": 5, "reliant": [102, 103, 104, 105], "relu": [7, 30, 31, 32, 34, 36, 38, 39, 56, 82, 83, 86, 87, 88, 90, 96, 97, 98, 99, 107, 108, 109, 110], "relu1": 34, "relu2": 34, "relu3": 34, "remain": [5, 27, 69, 101, 102, 103, 104, 105, 145], "rememb": 158, "remov": 216, "rep": 218, "repeat": [210, 211, 218], "repetit": [214, 218], "replac": [158, 226], "repres": [13, 15, 19, 21, 28, 29, 34, 57, 59, 66, 68, 69, 97, 98, 99, 108, 110, 113, 116, 124, 134, 135, 136, 142, 143, 144, 145, 146, 151, 160, 161, 167, 170, 172, 192, 203, 204, 205, 211, 223, 225, 227, 228, 229, 230], "represent": [127, 130, 134], "reproduc": [153, 154, 155, 156, 157, 158, 232], "requir": [2, 3, 4, 7, 27, 30, 34, 36, 37, 39, 40, 41, 42, 44, 57, 59, 78, 87, 109, 113, 116, 133, 148, 150, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 201, 202, 207, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 223, 230], "requires_grad": [27, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 49, 57, 59, 78, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 153, 154, 155, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222], "rescal": [60, 61, 65, 112, 113, 116], "research": 133, "reset": [29, 156, 159], "reshap": [7, 59, 98, 99, 149, 151, 210, 213], "resili": 145, "resiz": [78, 221, 231, 232], "resourc": 150, "respect": [9, 10, 11, 13, 14, 15, 16, 17, 19, 21, 27, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 57, 59, 78, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 185, 189, 190, 191, 192, 193, 196, 198, 200, 203, 204, 205, 211, 212, 214, 218, 226], "respons": [30, 135], "restor": 150, "restructur": 215, "result": [9, 13, 14, 16, 28, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 57, 59, 70, 71, 72, 74, 75, 76, 78, 79, 94, 133, 134, 148, 150, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 206, 207, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222, 225, 226, 232], "resum": 135, "retain": [29, 159, 171, 178, 191, 192, 193, 200, 205, 222], "retent": 222, "retriev": [0, 2, 30, 32, 33], "return": [0, 1, 2, 3, 5, 7, 21, 27, 28, 30, 31, 32, 33, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 151, 221, 232], "reus": 222, "reusabl": [34, 133, 221], "revers": [7, 34, 204, 227, 229], "revert": 150, "rho": 137, "rho_": 143, "rho_t": 143, "right": [14, 15, 16, 18, 19, 37, 43, 89, 94, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 129, 130, 131, 223], "risk": 151, "rmsprop": 147, "robust": [79, 101, 102, 103, 104, 105, 114, 133, 137, 225, 226, 228, 232], "role": [151, 158, 232], "root": [4, 5, 138, 144, 198], "rotat": [56, 77, 228, 232], "rotated_imag": 79, "rout": [129, 130, 131], "routin": 7, "row": [10, 11, 13, 18, 59, 175, 211, 220], "rprop": 147, "rule": [13, 14, 149, 160, 161, 165, 166, 167, 169, 170], "run": [7, 27, 66, 68, 118, 119, 120, 121, 122, 123, 137, 150, 156, 158], "running_mean": [27, 66, 68, 118, 119, 120, 121, 122, 123], "running_var": [66, 68, 118, 119, 120, 121, 122, 123], "runtim": [31, 34, 133], "s_": 145, "s_d": [128, 131], "s_h": [127, 128, 131], "s_w": [127, 128, 131], "same": [10, 11, 13, 14, 18, 43, 50, 51, 52, 53, 54, 66, 68, 69, 79, 97, 98, 99, 101, 102, 103, 104, 105, 109, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 145, 156, 158, 164, 174, 177, 179, 189, 191, 192, 193, 207, 209, 213, 215, 216, 217, 220, 224], "sampl": [0, 1, 2, 3, 5, 7, 21, 23, 24, 25, 82, 83, 84, 85, 86, 87, 101, 102, 103, 104, 105, 108, 110, 113, 116, 124, 155, 158, 223, 225, 227, 228, 229, 230], "satisfi": [9, 11, 18], "satur": [88, 232], "save": [2, 27, 29, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150], "scalabl": [3, 133], "scalar": [10, 15, 60, 61, 62, 64, 65, 151], "scale": [11, 16, 23, 24, 25, 36, 41, 43, 66, 68, 69, 86, 87, 88, 90, 92, 93, 94, 95, 101, 102, 103, 104, 105, 113, 118, 119, 120, 121, 122, 123, 124, 136, 138, 139, 140, 151, 158, 205, 230], "scenario": [32, 33, 124, 140, 141, 222, 226], "schedul": 136, "scientif": 149, "score": [43, 113], "scratch": 7, "script": 158, "seamless": [0, 1, 3, 4, 133, 158], "seamlessli": [3, 4, 8, 29, 31, 34, 133, 151, 232], "second": [11, 31, 32, 57, 108, 139, 140, 141, 142, 143, 149, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 209, 211, 229], "section": 164, "see": [7, 164], "seed": [152, 153, 154, 155, 157, 158, 232], "seen": 137, "select": [78, 129, 131, 200], "self": [0, 1, 2, 3, 7, 21, 27, 28, 29, 30, 31, 32, 33, 41, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 108, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 211, 221, 222], "selu": [38, 50, 56, 96, 101, 107], "selunetwork": 92, "sensit": [62, 114, 118, 119, 120], "sentiment": 4, "separ": [0, 45, 46, 47, 121, 122, 123], "sequenc": [14, 30, 32, 45, 171, 207, 209, 212, 214, 217, 218, 220, 221], "sequenti": [21, 30, 31, 35, 45, 109, 221, 232], "seri": [23, 24, 45, 97, 126, 129], "serial": [27, 28, 135], "serv": [3, 28, 30, 31, 32, 33, 34, 133, 145, 222], "set": [3, 4, 5, 29, 33, 45, 46, 47, 90, 91, 92, 97, 98, 99, 101, 104, 105, 108, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 134, 139, 140, 144, 153, 154, 155, 156, 157, 158, 159, 171, 173, 174, 178, 179, 185, 191, 193, 206, 222, 226, 232], "setup": [4, 7], "sever": [16, 97, 98, 99, 126, 127, 128, 129, 130, 131, 150, 221, 232], "sgd": [7, 136, 143, 147], "sgn": 15, "shape": [3, 4, 5, 7, 10, 11, 13, 14, 16, 21, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 149, 151, 153, 154, 155, 157, 158, 159, 162, 173, 174, 175, 176, 177, 178, 179, 185, 190, 191, 192, 193, 196, 198, 200, 204, 205, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 220, 223, 224, 225, 226, 227, 228, 229, 230, 232], "shapelik": 154, "shift": [66, 68, 69, 118, 119, 120, 121, 122, 123, 124], "shorthand": 164, "should": [21, 27, 150, 153, 154, 155, 157, 173, 174, 182, 183, 203, 212, 221], "show": 148, "showcas": 7, "shown": 156, "shrink": 137, "shuffl": [1, 2, 3], "side": [18, 31, 34, 45, 46, 47, 70, 71, 72, 74, 75, 76, 97, 98, 99, 126, 127, 128, 129, 130, 131, 150], "sigma": [16, 82, 84, 86, 93, 118, 119, 120, 121, 122, 123, 124, 204], "sigma_c": 224, "sigma_i": 16, "sigmoid": [38, 56, 82, 83, 86, 87, 96, 107, 112], "sigmoidnetwork": 93, "sign": [14, 114, 145, 180], "signal": [97, 98, 99, 118, 121, 126, 127, 128, 129, 130, 131], "signific": 150, "significantli": 221, "sim": [101, 102, 103, 104, 105], "similar": [7, 82, 83, 164, 190, 206, 212], "similarli": [19, 203], "simpl": [3, 4, 7, 34, 45, 46, 47, 57, 59, 70, 71, 72, 74, 75, 76, 89, 91, 92, 93, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 162, 163, 168, 221], "simplebinaryclassificationmodel": 112, "simpleclassificationmodel": [113, 116], "simplegelumodel": 89, "simpleleakyrelumodel": 90, "simplemodel": [7, 110], "simpleregressionmodel": 115, "simplerelumodel": 91, "simpleselumodel": 92, "simplesigmoidmodel": 93, "simpletanhmodel": 95, "simpli": [148, 203, 204, 215], "simplic": 91, "simplifi": [4, 23, 34], "simul": 232, "simultan": 79, "sin": [180, 186], "sinc": [14, 17, 30, 31, 32, 33, 45, 46, 47, 87, 148, 150, 155, 211, 232], "sine": [183, 196, 197], "singl": [0, 4, 14, 17, 19, 43, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 113, 124, 127, 128, 129, 130, 131, 134, 151, 157, 173, 207, 216, 224, 226, 232], "singleton": 124, "singular": [10, 13, 14, 16, 18, 19], "sinh": [180, 187, 202], "size": [0, 1, 2, 3, 19, 21, 23, 24, 25, 29, 31, 45, 46, 47, 49, 52, 53, 54, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 97, 98, 99, 108, 110, 112, 113, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 154, 157, 158, 159, 191, 192, 193, 200, 205, 207, 209, 216, 219, 220, 223, 225, 230, 232], "skip": 150, "slice": [57, 203], "slide": [49, 126, 128, 129, 131], "slightli": 232, "slope": [39, 88, 90], "slow": [3, 143], "small": [16, 23, 24, 25, 39, 60, 61, 66, 68, 69, 90, 92, 112, 113, 114, 118, 119, 120, 121, 122, 123, 124, 127, 130, 137, 138, 139, 140, 141, 142, 143, 144, 145], "smaller": [31, 34, 133, 138, 139, 166, 223, 225, 230], "smallest": 193, "smooth": [37, 88, 89, 136, 144, 232], "smoother": 136, "so": [30, 31, 32, 33, 79, 133, 143, 173, 174, 221], "softmax": [38, 56, 96, 107, 113], "softmaxmodel": 94, "solut": [16, 18], "solv": [8, 9, 12, 16, 17, 19], "solver": 8, "some": [36, 51, 79, 101, 102, 103, 118, 119, 120, 121, 122, 123, 138, 139, 140, 150, 151], "sometim": 149, "sophist": [31, 34], "sourc": 158, "space": [11, 17, 19, 45, 46, 47, 49, 97, 98, 99, 171, 232], "span": 4, "spars": [138, 139], "spatial": [98, 99, 118, 119, 120, 121, 122, 123, 124, 127, 128, 129, 130, 131, 211], "spatio": 99, "special": [0, 1, 7, 16, 27, 28, 29, 101, 158], "specif": [4, 7, 30, 31, 32, 33, 34, 87, 101, 102, 103, 104, 105, 121, 122, 123, 133, 134, 148, 158, 173, 191, 193, 214, 218], "specifi": [0, 1, 2, 3, 4, 5, 7, 15, 21, 31, 43, 49, 54, 60, 61, 62, 64, 65, 69, 78, 79, 94, 97, 98, 99, 112, 113, 114, 115, 116, 124, 127, 128, 129, 130, 131, 134, 151, 153, 154, 155, 156, 157, 169, 171, 172, 173, 174, 175, 176, 178, 179, 185, 191, 192, 193, 200, 204, 205, 206, 207, 209, 212, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 228, 230, 232], "speech": 121, "speed": [136, 137, 138, 139, 140, 141, 142, 143, 144, 146], "split": [4, 207, 209, 220], "sqrt": [37, 82, 83, 86, 87, 89, 118, 119, 120, 121, 122, 123, 124, 137, 138, 139, 140, 142, 143, 144, 180, 182, 183], "squar": [1, 3, 9, 10, 11, 13, 14, 16, 17, 18, 19, 62, 64, 114, 115, 137, 138, 139, 144, 180, 198], "squaredataset": [0, 1, 2, 3], "squeez": 210, "stabil": [13, 16, 60, 61, 66, 68, 69, 112, 113, 118, 119, 120, 121, 122, 123, 124, 136, 137, 138, 139, 140, 141, 142, 143, 144, 224], "stabl": [82, 83, 86, 87, 101, 113, 136, 140, 141, 144, 145, 146], "stack": [34, 209, 210, 220, 232], "standard": [37, 39, 82, 84, 86, 88, 89, 90, 101, 145, 155, 158, 164, 221, 224, 232], "start": [1, 3, 136, 138, 145, 171, 223, 225], "state": [27, 28, 29, 31, 34, 134, 148, 150, 156], "state_dict": [28, 29, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "static": 34, "statist": [16, 50, 66, 68], "std": [5, 84, 221, 224, 232], "step": [29, 49, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 171, 221, 222], "step_siz": 145, "still": 137, "stochast": [7, 136, 146], "stop": 171, "storag": [30, 32, 159], "store": [2, 4, 5, 27, 28, 29, 30, 31, 32, 33, 150, 159, 223, 224, 225, 226, 227, 228, 229, 230], "str": [5, 28, 30, 32, 34, 60, 61, 62, 64, 65, 78, 134, 211], "straightforward": [146, 148, 160], "strategi": 135, "streamlin": [2, 3], "strict": [28, 134], "stride": [21, 23, 24, 25, 31, 34, 45, 46, 47, 49, 70, 71, 72, 74, 75, 76, 97, 98, 99, 126, 127, 128, 129, 130, 131], "stride_height": 49, "stride_width": 49, "string": [28, 30, 32, 34, 97, 98, 99, 134], "structur": [0, 7, 17, 27, 28, 31, 133, 134, 151, 175, 222], "style": [68, 121, 122, 211], "sub": [30, 31, 32, 33, 34, 133, 180, 223, 225], "sub_tensor": 159, "subclass": [1, 2, 3, 7, 28, 29, 30, 133, 134], "submodul": [28, 133], "subsequ": [31, 34, 87, 158], "subset": [102, 103], "subtract": [7, 170, 224], "suffer": 138, "suit": [82, 83, 86, 87], "suitabl": [23, 24, 25, 114, 138, 139, 153], "sum": [15, 30, 31, 32, 33, 34, 43, 60, 61, 62, 64, 65, 94, 112, 113, 114, 115, 116, 138, 160, 163, 168, 180, 203, 205, 207, 209, 211, 214, 218, 220], "sum_": [14, 43, 94, 112, 113, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 162, 163, 192, 200, 203, 205, 211, 214], "sum_i": [15, 168], "sum_j": 168, "sum_k": 164, "summar": [126, 127, 128], "summat": 14, "super": [7, 27, 28, 29, 30, 31, 32, 33, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 108, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "support": [1, 3, 4, 7, 8, 14, 15, 16, 17, 19, 30, 31, 32, 33, 34, 78, 79, 133, 135, 142, 158, 159, 160, 161, 164, 165, 166, 167, 169, 170, 172, 175, 185, 190, 192, 196, 198, 200, 203, 204, 205, 207, 211, 215, 222, 232], "suppos": 232, "sure": [133, 232], "svd": [12, 16], "symmetr": [9, 86, 87, 95], "syntax": [1, 164], "system": [8, 9, 16, 17, 18, 148, 211], "systemat": 232, "t": [16, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 159, 164, 206, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232], "t0": 136, "t1": 206, "t2": 206, "tabular": 4, "tailor": [4, 133, 232], "take": [17, 126, 127, 128, 129, 130, 131, 150, 221], "taken": 203, "tan": 180, "tangent": [44, 95, 184, 201, 202], "tanh": [31, 34, 37, 38, 56, 82, 83, 86, 87, 89, 96, 107, 180], "tanhnetwork": 95, "target": [5, 34, 60, 61, 62, 64, 65, 78, 112, 113, 114, 115, 116, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 223, 225, 230], "target_tensor": [112, 113, 114, 115, 116], "target_transform": 5, "task": [4, 7, 8, 23, 24, 25, 26, 42, 43, 46, 57, 60, 61, 64, 65, 93, 94, 97, 98, 99, 112, 113, 114, 115, 116, 121, 122, 123, 126, 128, 129, 131, 139, 149, 158, 175, 232], "techniqu": [9, 13, 66, 101, 102, 103, 104, 105, 121, 122, 123, 135, 230, 232], "tempor": [97, 99, 128, 131], "temporarili": 150, "tensor": [2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 148, 150, 151, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232], "term": [16, 57, 136, 140, 142, 143, 144, 146], "test": [4, 5], "test_siz": 5, "text": [4, 10, 14, 15, 30, 36, 39, 40, 41, 43, 45, 46, 47, 70, 71, 72, 74, 75, 76, 82, 83, 86, 87, 88, 90, 91, 92, 94, 97, 98, 99, 101, 102, 103, 104, 105, 112, 113, 114, 115, 116, 126, 127, 128, 129, 130, 131, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 154, 160, 161, 163, 165, 166, 167, 169, 170, 181, 185, 191, 192, 193, 195, 200, 205, 207, 209, 212, 213, 214, 215, 216, 218, 219, 220, 223, 224, 225, 227, 228, 229], "th": [57, 112, 113, 115, 116, 121, 122, 123, 165, 166, 169], "than": [0, 1, 32, 33, 36, 39, 62, 88, 90, 114, 134, 140, 185, 203, 212, 217, 223, 225, 230], "thei": [0, 7, 19, 27, 31, 33, 34, 151, 211, 215, 223, 225, 232], "them": [3, 28, 33, 49, 136, 149, 207, 217, 221, 224, 232], "therebi": [101, 127, 128, 130, 131], "theta": [136, 137, 228], "theta_": [136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "theta_t": [143, 144], "thi": [0, 1, 2, 3, 5, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 27, 29, 31, 32, 33, 34, 40, 42, 43, 44, 45, 46, 47, 49, 57, 59, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 154, 155, 156, 158, 159, 163, 164, 168, 171, 173, 176, 177, 178, 179, 185, 189, 190, 191, 192, 193, 196, 198, 200, 203, 204, 205, 206, 212, 214, 215, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232], "thing": 150, "those": [7, 23, 24, 25, 33, 87], "three": [19, 25, 47, 72, 76, 99, 105, 120, 123, 128, 131], "threshold": [16, 62, 114], "through": [0, 3, 4, 7, 11, 16, 17, 19, 21, 30, 31, 34, 57, 59, 78, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 118, 119, 120, 121, 124, 126, 127, 128, 129, 130, 131, 155, 162, 163, 168, 211, 213, 215, 216, 219, 232], "throughout": [41, 222], "tile": 210, "time": [0, 3, 14, 23, 24, 25, 45, 90, 92, 97, 126, 127, 128, 129, 130, 131, 136, 137, 138, 139, 140, 144, 146, 150, 214, 218], "to_tensor": 5, "togeth": [34, 221, 232], "too": 145, "tool": [3, 7, 133, 149, 158, 221, 232], "top": [9, 10, 11, 17, 19, 57, 59, 78, 97, 98, 99, 108, 110, 223, 225], "torch": 206, "total": [0, 1, 2, 5, 23, 24, 25, 29, 159, 215], "totensor": [221, 232], "trace": [8, 180], "track": [7, 118, 119, 120, 121, 122, 123, 133, 148, 150, 153, 154, 155, 157, 171, 172, 173, 174, 175, 176, 177, 178, 179, 206, 222], "track_running_stat": [118, 119, 120, 121, 122, 123], "tradit": [137, 138, 141, 142, 143], "trail": 69, "train": [1, 2, 3, 4, 5, 7, 27, 28, 31, 33, 34, 43, 50, 51, 52, 53, 54, 66, 68, 79, 89, 90, 92, 93, 94, 95, 101, 102, 103, 104, 105, 118, 119, 120, 121, 122, 123, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 221, 224, 225, 226, 227, 228, 229, 232], "trainabl": [118, 119, 120, 121, 122, 123, 133], "transfer": [68, 121, 122], "transform": [2, 4, 5, 7, 11, 32, 57, 59, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 149, 211], "transform_pipelin": [221, 232], "transformed_imag": [221, 232], "transit": 114, "translat": [127, 130], "transpos": [7, 9, 180], "treat": [0, 27, 124, 133], "triangular": [9, 17], "true": [1, 2, 3, 4, 5, 19, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 53, 54, 57, 59, 66, 68, 78, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 139, 140, 144, 148, 153, 154, 155, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 209, 212, 213, 214, 215, 216, 217, 218, 219, 220, 222], "try": 0, "tune": 232, "tupl": [2, 3, 5, 11, 17, 19, 28, 29, 45, 46, 47, 49, 69, 70, 71, 72, 74, 75, 76, 78, 79, 97, 98, 99, 109, 124, 126, 127, 128, 129, 130, 131, 139, 140, 141, 142, 143, 145, 151, 153, 154, 155, 157, 159, 173, 176, 178, 191, 192, 193, 200, 205, 207, 209, 211, 212, 215, 216, 217, 219, 220, 223, 224, 225, 230], "twice": 212, "two": [7, 10, 11, 13, 14, 16, 17, 19, 23, 24, 25, 45, 46, 47, 57, 71, 75, 98, 104, 108, 119, 122, 127, 130, 139, 140, 141, 142, 143, 145, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 203, 211], "type": [27, 28, 29, 57, 108, 159, 171, 172, 173, 174, 175, 176, 177, 178, 179, 206, 211, 222], "typeerror": [0, 1, 2, 28, 134], "typic": [8, 27, 43, 50, 79, 92, 94, 116, 118, 119, 120, 121, 122, 123, 135, 136, 144, 146, 150, 151, 219, 222, 224, 228, 230, 232], "u": [16, 19, 83, 85, 87], "u_": 141, "unchang": [27, 54, 88, 90, 91, 92, 101, 102, 103, 104, 105, 109, 213, 216], "undefin": 169, "under": 133, "underbrac": 14, "underdetermin": 16, "undergo": 232, "underli": [0, 7, 206, 209, 213, 215, 220], "understand": [7, 34, 232], "unexpect": [28, 31, 34, 158], "unfold": [48, 56], "unifi": 0, "uniform": [81, 83, 87, 97, 98, 99, 108, 110, 152, 153, 154, 158, 226, 227, 228, 229], "uniformli": [153, 157], "uniniti": [173, 174], "unintend": 150, "uniqu": [9, 16, 18, 30, 32], "unit": [21, 36, 37, 39, 40, 41, 82, 83, 86, 87, 88, 89, 90, 91, 92, 101], "unless": 159, "unlik": [27, 30, 31, 32, 33, 39, 88, 90, 101, 124, 137, 138, 140, 141, 142, 143, 145], "unnecessari": 150, "unpad": 212, "unseen": 232, "unsqueez": 210, "unstabl": 13, "up": [134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 228, 230], "updat": [4, 27, 33, 34, 101, 102, 103, 104, 105, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150], "upon": [30, 31, 32, 33], "upper": [17, 85, 145, 157], "us": [0, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 16, 17, 19, 21, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 57, 59, 64, 66, 68, 78, 79, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 148, 149, 150, 153, 154, 155, 157, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 189, 191, 192, 193, 200, 205, 211, 212, 214, 216, 218, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232], "usag": [3, 8, 31, 34, 134, 135, 223, 224, 225, 226, 227, 228, 229, 230], "user": [1, 2, 3, 4, 7, 30, 31, 32, 33, 133, 138, 221, 222, 232], "usual": 113, "util": [3, 7, 8, 32, 33, 133, 158], "v": [11, 16, 19, 139, 140, 142, 143, 172], "v_": [136, 139, 140, 142, 143, 144, 146], "v_stack": 220, "v_t": [143, 144], "val": 80, "valid": [97, 98, 99, 204], "valu": [7, 10, 14, 15, 16, 19, 28, 30, 32, 34, 36, 39, 42, 43, 44, 45, 46, 47, 49, 60, 61, 62, 64, 65, 66, 68, 69, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 95, 101, 102, 103, 104, 105, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 151, 153, 154, 155, 156, 157, 158, 171, 172, 173, 174, 175, 181, 182, 183, 185, 188, 189, 190, 191, 193, 195, 196, 198, 199, 207, 212, 213, 215, 219, 224, 226, 227, 229], "valuabl": 158, "valueerror": [1, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 134], "vanish": [88, 92, 118, 119, 120], "var": 180, "vari": [31, 33, 78, 228], "variabl": [28, 34, 109, 133, 148, 150, 153, 173, 225, 228], "varianc": [41, 50, 66, 68, 82, 83, 86, 87, 92, 101, 118, 119, 120, 121, 122, 123, 124, 139, 140, 141, 142, 143, 155, 205, 228, 232], "variant": [139, 140, 141], "variat": [121, 122, 123, 225, 232], "varieti": [4, 158, 232], "variou": [21, 26, 91, 135, 158, 191, 193, 212, 222], "vdot": 168, "vector": [11, 16, 17, 18, 19, 57, 59, 108, 110, 162, 163, 164, 168], "veloc": [136, 144, 146], "veri": [16, 137], "versa": 145, "versatil": [158, 211], "version": [19, 21, 23, 24, 144, 168, 226], "vertic": [217, 220, 229], "via": [3, 4], "vice": 145, "video": [47, 54, 99, 123, 128, 131], "view": [21, 31, 127, 128, 129, 130, 131, 215], "vision": [46, 98, 108, 232], "volumetr": [47, 54, 99, 123, 128, 131], "vstack": 210, "w": [46, 47, 49, 53, 54, 57, 59, 71, 72, 75, 76, 78, 79, 97, 98, 99, 108, 110, 119, 120, 122, 123, 128, 131, 223, 225], "w_": [46, 47, 71, 72, 75, 76, 78, 98, 99, 127, 128, 130, 131], "w_out": [46, 47, 71, 72, 75, 76], "wa": [101, 102, 103, 104, 105, 150], "wai": [1, 148, 150, 215], "want": [0, 7, 221, 223], "warn": [30, 32], "we": [3, 7, 149, 211], "weight": [45, 46, 47, 57, 59, 60, 61, 65, 66, 68, 69, 78, 82, 83, 86, 87, 97, 98, 99, 101, 102, 103, 104, 105, 108, 110, 112, 113, 116, 118, 119, 120, 121, 122, 123, 124, 133, 136, 137, 138, 139, 140, 141, 142, 143, 144, 146, 153, 158], "weight1": 32, "weight2": 32, "weight_decai": [136, 137, 138, 139, 140, 141, 142, 143, 144, 146], "well": [82, 83], "were": 34, "what": 150, "when": [0, 1, 3, 7, 14, 28, 31, 33, 34, 36, 39, 45, 46, 47, 88, 109, 118, 119, 120, 121, 122, 123, 134, 137, 145, 148, 150, 151, 158, 169, 221, 223], "where": [3, 4, 5, 10, 11, 13, 14, 15, 16, 17, 19, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 52, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 151, 158, 160, 161, 165, 166, 167, 169, 170, 173, 174, 185, 189, 190, 191, 192, 193, 196, 198, 200, 203, 204, 205, 207, 212, 214, 218, 221, 222, 223, 224, 225, 226, 227, 228, 229], "whether": [1, 10, 28, 29, 82, 83, 144, 148, 153, 154, 155, 157, 159, 173, 174, 191, 192, 193, 200, 205], "which": [0, 7, 10, 11, 13, 14, 15, 16, 17, 19, 28, 30, 32, 34, 39, 43, 62, 79, 88, 89, 90, 94, 95, 101, 114, 116, 118, 119, 120, 121, 122, 123, 124, 139, 140, 142, 144, 148, 150, 151, 153, 154, 157, 182, 183, 184, 185, 186, 187, 190, 191, 192, 193, 194, 196, 197, 198, 200, 201, 202, 203, 205, 207, 214, 215, 217, 219, 222, 223, 225, 226, 227, 228, 229, 230, 232], "while": [7, 26, 31, 34, 50, 89, 91, 133, 136, 137, 139, 140, 141, 142, 143, 144, 145, 146, 150, 215, 217, 226, 232], "who": [7, 30, 31, 32, 33], "whose": [19, 174, 177, 179, 181, 185, 189, 195], "wide": [4, 5, 8, 16, 40, 91, 97, 98, 113], "wider": [45, 46], "width": [46, 47, 49, 53, 54, 71, 72, 75, 76, 78, 79, 98, 99, 119, 120, 122, 123, 127, 128, 130, 131, 223, 225, 230], "window": [70, 71, 72, 74, 75, 76, 126, 127, 128, 129, 130, 131, 137, 191, 193], "wise": [36, 37, 39, 40, 41, 42, 43, 44, 94, 101, 102, 103, 104, 105, 133, 149, 160, 161, 164, 165, 166, 167, 169, 170, 181, 182, 183, 184, 185, 186, 187, 188, 190, 194, 195, 196, 197, 198, 199, 201, 202, 203, 209, 220], "within": [2, 27, 30, 31, 32, 33, 34, 44, 78, 79, 87, 89, 91, 92, 93, 95, 97, 98, 99, 101, 102, 103, 109, 112, 113, 114, 115, 116, 118, 119, 120, 121, 124, 126, 127, 128, 129, 130, 131, 135, 150, 171, 185, 228, 232], "without": [7, 30, 31, 32, 57, 59, 97, 98, 99, 108, 110, 148, 191, 213, 215, 219], "won": 150, "work": [1, 2, 3, 7, 9, 149, 151], "workflow": [158, 232], "workload": 7, "wrap": [3, 133, 150, 206], "wrapper": 133, "x": [7, 8, 18, 21, 27, 28, 30, 31, 32, 33, 34, 43, 57, 59, 79, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 153, 154, 155, 157, 173, 174, 189, 211, 223, 224, 225, 226, 227, 228, 229, 230], "x1": 108, "x2": 108, "x_": [113, 116, 211], "x_c": [113, 116], "x_i": 112, "x_k": 113, "xavier": [82, 83, 86, 87], "xavier_norm": 81, "xavier_uniform": 81, "xy": 211, "x\u2081": 108, "x\u2082": 108, "y": [30, 31, 32, 33, 34, 79, 88, 89, 90, 91, 92, 93, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 153, 154, 155, 157, 173, 174, 211, 226], "y_": [113, 116, 211], "y_c": [113, 116], "y_i": 112, "yann": 5, "yet": [7, 149], "yield": [0, 1, 28, 150], "you": [0, 31, 33, 34, 133, 135, 148, 150, 158, 173, 174, 175, 179, 204, 206, 221, 223, 232], "your": [133, 135, 148, 150, 158, 232], "z": [174, 178, 179], "zero": [14, 16, 17, 36, 39, 45, 46, 47, 50, 51, 52, 53, 54, 70, 71, 72, 74, 75, 76, 80, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 97, 98, 99, 101, 102, 103, 104, 105, 124, 126, 127, 128, 129, 130, 131, 133, 134, 137, 138, 139, 140, 141, 142, 143, 144, 173, 174, 175, 179, 180, 185, 195, 212], "zero_grad": [29, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 159], "zeros_lik": [174, 180], "\u03c3\u1d62": 16}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "MNIST", "Image Datasets", "Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "ConvNets", "LeNet", "LeNet", "lenet_1", "lenet_4", "lenet_5", "lucid.models", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.LeakyReLU", "nn.ReLU", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Tanh", "Activation Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "lucid.nn", "optim.Optimizer", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.types", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.meshgrid", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.unsqueeze", "lucid.vstack", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": 149, "1d": 149, "2": 149, "2d": 149, "3": 149, "It": [148, 150], "ab": 181, "activ": [38, 56, 96, 107], "ad": 149, "adadelta": 137, "adagrad": 138, "adam": 139, "adamax": 141, "adamw": 140, "add": 160, "addit": 16, "admonit": 151, "advanc": [49, 232], "algebra": 12, "algorithm": [136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "alias": 151, "align": 149, "alpha_dropout": 50, "alphadropout": 101, "also": 135, "anoth": 206, "arang": 171, "arcco": 182, "architectur": [23, 24, 25], "arcsin": 183, "arctan": 184, "asgd": 136, "attribut": [5, 21, 27, 29, 30, 31, 32, 33, 34, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 159, 223, 224, 225, 226, 227, 228, 229, 230], "avg_pool1d": 70, "avg_pool2d": 71, "avg_pool3d": 72, "avgpool1d": 126, "avgpool2d": 127, "avgpool3d": 128, "axi": 149, "backpropag": 159, "backward": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 57, 59, 78, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220], "batch_norm": 66, "batchnorm1d": 118, "batchnorm2d": 119, "batchnorm3d": 120, "bceloss": 112, "benefit": 150, "bilinear": [57, 108], "binari": 180, "binary_cross_entropi": 60, "broadcast": 149, "buffer": 27, "calcul": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 49, 57, 59, 78, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230], "case": 151, "centercrop": 223, "choleski": 9, "class": [0, 1, 2, 5, 21, 27, 28, 29, 30, 31, 32, 33, 34, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 159, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230], "clip": 185, "co": 186, "combin": 0, "compon": [3, 7, 133], "compos": 221, "concatdataset": [0, 1], "concaten": 207, "conclus": [3, 7, 133, 148, 149, 150, 158, 222, 232], "constant": 80, "contain": 35, "conv1d": [45, 97], "conv2d": [46, 98], "conv3d": [47, 99], "convnet": [20, 26], "convolut": [48, 56, 100, 107], "core": 7, "cosh": 187, "creat": [29, 159, 206], "cross_entropi": 61, "crossentropyloss": 113, "cube": 188, "custom": [1, 2, 3, 28, 134, 135, 232], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 6], "defin": [2, 28, 134, 135], "definit": 151, "det": 10, "detail": 16, "diag": 172, "dilat": 49, "div": 161, "dot": 162, "dropout": [51, 55, 56, 102, 106, 107], "dropout1d": [52, 103], "dropout2d": [53, 104], "dropout3d": [54, 105], "eig": 11, "elu": [36, 88], "empti": 173, "empty_lik": 174, "exampl": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232], "exp": 189, "ey": 175, "featur": [4, 7, 8, 135, 158, 232], "flatten": 208, "forward": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 49, 57, 59, 78, 82, 83, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230], "from": 206, "function": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 148, 150, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220], "futur": 4, "gelu": [37, 89], "gener": [152, 180], "get": 135, "grad_en": 148, "gradient": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 57, 59, 78, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 207, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220], "guidelin": 151, "how": [148, 150], "hstack": 209, "huber_loss": 62, "huberloss": 114, "ident": 109, "imag": [6, 231], "index": 159, "init": [80, 82, 83, 84, 85, 86, 87], "initi": 81, "inner": 163, "input": 206, "inspect": [135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "instance_norm": 68, "instancenorm1d": 121, "instancenorm2d": 122, "instancenorm3d": 123, "integr": [3, 133, 158, 232], "interpol": 78, "inv": 13, "iter": 159, "kaiming_norm": 82, "kaiming_uniform": 83, "kei": [3, 4, 7, 133, 135, 158, 232], "layer": [96, 100, 106, 107, 111, 117, 125, 132], "layer_norm": 69, "layernorm": 124, "leaky_relu": 39, "leakyrelu": 90, "learn": 158, "lenet": [21, 22], "lenet_1": 23, "lenet_4": 24, "lenet_5": 25, "limit": 7, "linalg": [8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "linear": [12, 56, 58, 59, 107, 110, 111], "list": 206, "load": 1, "log": 190, "loss": [56, 63, 107, 117], "lucid": [3, 4, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 26, 56, 133, 135, 148, 149, 150, 151, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 232], "matmul": 164, "matrix": 164, "matrix_pow": 14, "max": 191, "max_pool1d": 74, "max_pool2d": 75, "max_pool3d": 76, "maximum": 165, "maxpool1d": 129, "maxpool2d": 130, "maxpool3d": 131, "mean": 192, "meshgrid": 211, "method": [0, 1, 2, 5, 21, 28, 29, 134, 159], "min": 193, "minimum": 166, "mnist": 5, "model": [26, 133], "modul": [28, 107], "moduledict": 30, "modulelist": 31, "more": 158, "mse_loss": 64, "mseloss": 115, "mul": 167, "multipl": [0, 164], "nadam": 142, "new": 149, "newaxi": 149, "nll_loss": 65, "nllloss": 116, "nn": [27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 56, 57, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 133], "no_grad": 150, "norm": 15, "normal": [56, 67, 84, 107, 125, 224], "note": 7, "number": 152, "ones": 176, "ones_lik": 177, "oper": [12, 164, 180], "optim": [134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147], "organ": 133, "outer": 168, "overview": [3, 4, 7, 21, 23, 24, 25, 133, 135, 158, 232], "pad": 212, "paramet": [1, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 27, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 150, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230], "parameterdict": 32, "parameterlist": 33, "perform": 159, "pinv": 16, "pipelin": [3, 232], "pitfal": [148, 150], "pool": [56, 73, 107, 132], "potenti": [148, 150], "power": 169, "properti": [29, 159], "qr": 17, "radam": 143, "rais": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "rand": 153, "randint": 154, "randn": 155, "random": [152, 153, 154, 155, 156, 157, 158], "randomcrop": 225, "randomgrayscal": 226, "randomhorizontalflip": 227, "randomrot": 228, "randomverticalflip": 229, "ravel": 213, "reciproc": 194, "refer": [5, 135], "relu": [40, 91], "repeat": 214, "reshap": 215, "resiz": 230, "return": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 148, 150, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220], "rmsprop": 144, "rotat": 79, "rprop": 145, "rule": 164, "see": 135, "seed": 156, "selu": [41, 92], "sequenti": 34, "sgd": 146, "sigmoid": [42, 93], "sign": 195, "signatur": [0, 1, 2, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 51, 52, 53, 54, 57, 59, 60, 61, 62, 64, 65, 66, 68, 69, 70, 71, 72, 74, 75, 76, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 108, 109, 110, 112, 113, 114, 115, 116, 118, 119, 120, 121, 122, 123, 124, 126, 127, 128, 129, 130, 131, 134, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 150, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230], "sin": 196, "sinh": 197, "slice": 159, "softmax": [43, 94], "solv": 18, "sqrt": 198, "squar": 199, "squeez": 216, "stack": 217, "start": 135, "state": [135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146], "sub": 170, "sum": 200, "svd": 19, "tan": 201, "tanh": [44, 95, 202], "tensor": [149, 159, 180, 206, 210], "through": 159, "tile": 218, "totensor": 222, "trace": 203, "track": 159, "transform": [221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232], "transpos": 204, "type": 151, "unari": 180, "unfold": 49, "uniform": [85, 157], "unsqueez": 219, "us": [1, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 151, 206], "usag": [4, 7, 21, 23, 24, 25, 27, 79, 148, 149, 150, 151, 211, 221, 222, 232], "util": [56, 77], "utilit": 210, "var": 205, "vstack": 220, "weight": 81, "why": 151, "work": [4, 148, 150], "xavier_norm": 86, "xavier_uniform": 87, "zero": 178, "zeros_lik": 179}})