Search.setIndex({"alltitles": {"@ Operator": [[119, "operator"]], "Activation Functions": [[19, null]], "Activation Layers": [[66, null], [77, null]], "Additional Details": [[9, "additional-details"]], "Admonitions and Usage Guidelines": [[107, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[30, "advanced-example-with-dilation"]], "Attributes": [[13, "attributes"], [15, "attributes"], [16, "attributes"], [58, "attributes"], [59, "attributes"], [60, "attributes"], [61, "attributes"], [62, "attributes"], [63, "attributes"], [64, "attributes"], [65, "attributes"], [67, "attributes"], [68, "attributes"], [69, "attributes"], [71, "attributes"], [72, "attributes"], [73, "attributes"], [74, "attributes"], [75, "attributes"], [78, "attributes"], [79, "attributes"], [80, "attributes"], [82, "attributes"], [83, "attributes"], [84, "attributes"], [85, "attributes"], [86, "attributes"], [88, "attributes"], [89, "attributes"], [90, "attributes"], [91, "attributes"], [92, "attributes"], [93, "attributes"], [94, "attributes"], [96, "attributes"], [97, "attributes"], [98, "attributes"], [99, "attributes"], [100, "attributes"], [101, "attributes"], [114, "attributes"]], "Backward Gradient Calculation": [[2, "backward-gradient-calculation"], [3, "backward-gradient-calculation"], [4, "backward-gradient-calculation"], [6, "backward-gradient-calculation"], [7, "backward-gradient-calculation"], [8, "backward-gradient-calculation"], [9, "backward-gradient-calculation"], [10, "backward-gradient-calculation"], [11, "backward-gradient-calculation"], [12, "backward-gradient-calculation"], [16, "backward-gradient-calculation"], [17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [20, "backward-gradient-calculation"], [21, "backward-gradient-calculation"], [22, "backward-gradient-calculation"], [23, "backward-gradient-calculation"], [24, "backward-gradient-calculation"], [25, "backward-gradient-calculation"], [38, "backward-gradient-calculation"], [40, "backward-gradient-calculation"], [58, "backward-gradient-calculation"], [59, "backward-gradient-calculation"], [60, "backward-gradient-calculation"], [61, "backward-gradient-calculation"], [62, "backward-gradient-calculation"], [63, "backward-gradient-calculation"], [64, "backward-gradient-calculation"], [65, "backward-gradient-calculation"], [67, "backward-gradient-calculation"], [68, "backward-gradient-calculation"], [69, "backward-gradient-calculation"], [71, "backward-gradient-calculation"], [72, "backward-gradient-calculation"], [73, "backward-gradient-calculation"], [74, "backward-gradient-calculation"], [75, "backward-gradient-calculation"], [78, "backward-gradient-calculation"], [79, "backward-gradient-calculation"], [80, "backward-gradient-calculation"], [82, "backward-gradient-calculation"], [83, "backward-gradient-calculation"], [84, "backward-gradient-calculation"], [85, "backward-gradient-calculation"], [86, "backward-gradient-calculation"], [88, "backward-gradient-calculation"], [89, "backward-gradient-calculation"], [90, "backward-gradient-calculation"], [91, "backward-gradient-calculation"], [92, "backward-gradient-calculation"], [93, "backward-gradient-calculation"], [94, "backward-gradient-calculation"], [96, "backward-gradient-calculation"], [97, "backward-gradient-calculation"], [98, "backward-gradient-calculation"], [99, "backward-gradient-calculation"], [100, "backward-gradient-calculation"], [101, "backward-gradient-calculation"], [115, "backward-gradient-calculation"], [116, "backward-gradient-calculation"], [117, "backward-gradient-calculation"], [118, "backward-gradient-calculation"], [119, "backward-gradient-calculation"], [120, "backward-gradient-calculation"], [121, "backward-gradient-calculation"], [122, "backward-gradient-calculation"], [123, "backward-gradient-calculation"], [124, "backward-gradient-calculation"], [125, "backward-gradient-calculation"], [133, "backward-gradient-calculation"], [134, "backward-gradient-calculation"], [135, "backward-gradient-calculation"], [136, "backward-gradient-calculation"], [137, "backward-gradient-calculation"], [138, "backward-gradient-calculation"], [139, "backward-gradient-calculation"], [140, "backward-gradient-calculation"], [141, "backward-gradient-calculation"], [142, "backward-gradient-calculation"], [143, "backward-gradient-calculation"], [144, "backward-gradient-calculation"], [145, "backward-gradient-calculation"], [146, "backward-gradient-calculation"], [147, "backward-gradient-calculation"], [148, "backward-gradient-calculation"], [149, "backward-gradient-calculation"], [150, "backward-gradient-calculation"], [151, "backward-gradient-calculation"], [152, "backward-gradient-calculation"], [153, "backward-gradient-calculation"], [154, "backward-gradient-calculation"], [155, "backward-gradient-calculation"], [156, "backward-gradient-calculation"], [157, "backward-gradient-calculation"], [159, "backward-gradient-calculation"], [161, "backward-gradient-calculation"], [163, "backward-gradient-calculation"], [164, "backward-gradient-calculation"], [165, "backward-gradient-calculation"], [166, "backward-gradient-calculation"], [167, "backward-gradient-calculation"], [168, "backward-gradient-calculation"], [169, "backward-gradient-calculation"], [170, "backward-gradient-calculation"], [171, "backward-gradient-calculation"]], "Benefits": [[106, "benefits"]], "Binary Functions": [[132, null]], "Class Signature": [[13, "class-signature"], [14, "class-signature"], [15, "class-signature"], [16, "class-signature"], [58, "class-signature"], [59, "class-signature"], [60, "class-signature"], [61, "class-signature"], [62, "class-signature"], [63, "class-signature"], [64, "class-signature"], [65, "class-signature"], [67, "class-signature"], [68, "class-signature"], [69, "class-signature"], [71, "class-signature"], [72, "class-signature"], [73, "class-signature"], [74, "class-signature"], [75, "class-signature"], [78, "class-signature"], [79, "class-signature"], [80, "class-signature"], [82, "class-signature"], [83, "class-signature"], [84, "class-signature"], [85, "class-signature"], [86, "class-signature"], [88, "class-signature"], [89, "class-signature"], [90, "class-signature"], [91, "class-signature"], [92, "class-signature"], [93, "class-signature"], [94, "class-signature"], [96, "class-signature"], [97, "class-signature"], [98, "class-signature"], [99, "class-signature"], [100, "class-signature"], [101, "class-signature"], [114, "class-signature"]], "Conclusion": [[0, "conclusion"], [103, "conclusion"], [104, "conclusion"], [105, "conclusion"], [106, "conclusion"], [113, "conclusion"]], "Convolution Functions": [[29, null], [37, null]], "Convolution Layers": [[70, null], [77, null]], "Core Components": [[0, "core-components"]], "Create a Tensor from a list": [[158, null]], "Creating a Parameter": [[15, null]], "Creating a tensor with gradient tracking": [[114, null]], "Defining a custom module": [[14, null]], "Dropout Functions": [[36, null], [37, null]], "Dropout Layers": [[76, null], [77, null]], "Example": [[2, "example"], [3, "example"], [4, "example"], [6, "example"], [7, "example"], [8, "example"], [9, "example"], [10, "example"], [11, "example"], [12, "example"], [30, "example"], [103, null], [103, null], [103, null], [104, "example"], [106, "example"], [109, "example"], [110, "example"], [111, "example"], [112, "example"], [113, null], [113, null], [113, null], [126, "example"], [127, "example"], [128, "example"], [129, "example"], [130, "example"], [131, "example"], [133, "example"], [134, "example"], [135, "example"], [136, "example"], [137, "example"], [138, "example"], [139, "example"], [140, "example"], [142, "example"], [144, "example"], [146, "example"], [147, "example"], [148, "example"], [149, "example"], [150, "example"], [151, "example"], [152, "example"], [153, "example"], [154, "example"], [155, "example"], [156, "example"], [157, "example"], [159, "example"], [161, "example"], [164, "example"], [166, "example"], [167, "example"], [168, "example"], [170, "example"], [171, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[105, null]], "Example 2: Adding a new axis to a 2D tensor": [[105, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[105, null]], "Example Usage": [[0, "example-usage"]], "Example Use Cases": [[107, "example-use-cases"]], "Examples": [[1, "examples"], [13, "examples"], [14, "examples"], [15, "examples"], [16, "examples"], [17, "examples"], [18, "examples"], [20, "examples"], [21, "examples"], [22, "examples"], [23, "examples"], [24, "examples"], [25, "examples"], [26, "examples"], [27, "examples"], [28, "examples"], [31, "examples"], [32, "examples"], [33, "examples"], [34, "examples"], [35, "examples"], [38, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [45, "examples"], [46, "examples"], [47, "examples"], [49, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [53, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [60, "examples"], [61, "examples"], [62, "examples"], [63, "examples"], [64, "examples"], [65, "examples"], [67, "examples"], [68, "examples"], [69, "examples"], [71, "examples"], [72, "examples"], [73, "examples"], [74, "examples"], [75, "examples"], [78, "examples"], [79, "examples"], [80, "examples"], [82, "examples"], [83, "examples"], [84, "examples"], [85, "examples"], [86, "examples"], [88, "examples"], [89, "examples"], [90, "examples"], [91, "examples"], [92, "examples"], [93, "examples"], [94, "examples"], [96, "examples"], [97, "examples"], [98, "examples"], [99, "examples"], [100, "examples"], [101, "examples"], [114, "examples"], [115, "examples"], [116, "examples"], [117, "examples"], [118, "examples"], [120, "examples"], [121, "examples"], [122, "examples"], [123, "examples"], [124, "examples"], [125, "examples"], [141, "examples"], [143, "examples"], [145, "examples"], [158, "examples"], [160, "examples"], [163, "examples"], [165, "examples"], [169, "examples"]], "Features": [[1, "features"]], "Forward Calculation": [[2, "forward-calculation"], [3, "forward-calculation"], [4, "forward-calculation"], [6, "forward-calculation"], [7, "forward-calculation"], [8, "forward-calculation"], [9, "forward-calculation"], [10, "forward-calculation"], [11, "forward-calculation"], [12, "forward-calculation"], [16, "forward-calculation"], [17, "forward-calculation"], [18, "forward-calculation"], [20, "forward-calculation"], [21, "forward-calculation"], [22, "forward-calculation"], [23, "forward-calculation"], [24, "forward-calculation"], [25, "forward-calculation"], [30, "forward-calculation"], [38, "forward-calculation"], [40, "forward-calculation"], [58, "forward-calculation"], [59, "forward-calculation"], [60, "forward-calculation"], [61, "forward-calculation"], [62, "forward-calculation"], [63, "forward-calculation"], [64, "forward-calculation"], [65, "forward-calculation"], [67, "forward-calculation"], [68, "forward-calculation"], [69, "forward-calculation"], [71, "forward-calculation"], [72, "forward-calculation"], [73, "forward-calculation"], [74, "forward-calculation"], [75, "forward-calculation"], [78, "forward-calculation"], [79, "forward-calculation"], [80, "forward-calculation"], [82, "forward-calculation"], [83, "forward-calculation"], [84, "forward-calculation"], [85, "forward-calculation"], [86, "forward-calculation"], [88, "forward-calculation"], [89, "forward-calculation"], [90, "forward-calculation"], [91, "forward-calculation"], [92, "forward-calculation"], [93, "forward-calculation"], [94, "forward-calculation"], [96, "forward-calculation"], [97, "forward-calculation"], [98, "forward-calculation"], [99, "forward-calculation"], [100, "forward-calculation"], [101, "forward-calculation"], [115, "forward-calculation"], [116, "forward-calculation"], [117, "forward-calculation"], [118, "forward-calculation"], [119, "forward-calculation"], [120, "forward-calculation"], [121, "forward-calculation"], [122, "forward-calculation"], [123, "forward-calculation"], [124, "forward-calculation"], [125, "forward-calculation"], [133, "forward-calculation"], [134, "forward-calculation"], [135, "forward-calculation"], [136, "forward-calculation"], [137, "forward-calculation"], [138, "forward-calculation"], [139, "forward-calculation"], [140, "forward-calculation"], [141, "forward-calculation"], [142, "forward-calculation"], [143, "forward-calculation"], [144, "forward-calculation"], [145, "forward-calculation"], [146, "forward-calculation"], [147, "forward-calculation"], [148, "forward-calculation"], [149, "forward-calculation"], [150, "forward-calculation"], [151, "forward-calculation"], [152, "forward-calculation"], [153, "forward-calculation"], [154, "forward-calculation"], [155, "forward-calculation"], [156, "forward-calculation"], [157, "forward-calculation"], [159, "forward-calculation"], [161, "forward-calculation"], [163, "forward-calculation"], [164, "forward-calculation"], [165, "forward-calculation"], [166, "forward-calculation"], [167, "forward-calculation"], [168, "forward-calculation"], [169, "forward-calculation"], [170, "forward-calculation"], [171, "forward-calculation"]], "Function Signature": [[2, "function-signature"], [3, "function-signature"], [4, "function-signature"], [6, "function-signature"], [7, "function-signature"], [8, "function-signature"], [9, "function-signature"], [10, "function-signature"], [11, "function-signature"], [12, "function-signature"], [17, "function-signature"], [18, "function-signature"], [20, "function-signature"], [21, "function-signature"], [22, "function-signature"], [23, "function-signature"], [24, "function-signature"], [25, "function-signature"], [26, "function-signature"], [27, "function-signature"], [28, "function-signature"], [30, "function-signature"], [31, "function-signature"], [32, "function-signature"], [33, "function-signature"], [34, "function-signature"], [35, "function-signature"], [38, "function-signature"], [40, "function-signature"], [41, "function-signature"], [42, "function-signature"], [43, "function-signature"], [45, "function-signature"], [46, "function-signature"], [47, "function-signature"], [49, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [53, "function-signature"], [55, "function-signature"], [56, "function-signature"], [57, "function-signature"], [104, "function-signature"], [106, "function-signature"], [109, "function-signature"], [110, "function-signature"], [111, "function-signature"], [112, "function-signature"], [115, "function-signature"], [116, "function-signature"], [117, "function-signature"], [118, "function-signature"], [119, "function-signature"], [120, "function-signature"], [121, "function-signature"], [122, "function-signature"], [123, "function-signature"], [124, "function-signature"], [125, "function-signature"], [126, "function-signature"], [127, "function-signature"], [128, "function-signature"], [129, "function-signature"], [130, "function-signature"], [131, "function-signature"], [133, "function-signature"], [134, "function-signature"], [135, "function-signature"], [136, "function-signature"], [137, "function-signature"], [138, "function-signature"], [139, "function-signature"], [140, "function-signature"], [141, "function-signature"], [142, "function-signature"], [143, "function-signature"], [144, "function-signature"], [145, "function-signature"], [146, "function-signature"], [147, "function-signature"], [148, "function-signature"], [149, "function-signature"], [150, "function-signature"], [151, "function-signature"], [152, "function-signature"], [153, "function-signature"], [154, "function-signature"], [155, "function-signature"], [156, "function-signature"], [157, "function-signature"], [158, "function-signature"], [159, "function-signature"], [160, "function-signature"], [161, "function-signature"], [163, "function-signature"], [164, "function-signature"], [165, "function-signature"], [166, "function-signature"], [167, "function-signature"], [168, "function-signature"], [169, "function-signature"], [170, "function-signature"], [171, "function-signature"]], "How It Works": [[104, "how-it-works"], [106, "how-it-works"]], "Indexing and slicing": [[114, null]], "Integration with lucid": [[103, "integration-with-lucid"], [113, "integration-with-lucid"]], "Iterating through a tensor": [[114, null]], "Key Components": [[103, "key-components"]], "Key Features": [[0, "key-features"], [113, "key-features"]], "Learn More": [[113, null]], "Limitations": [[0, "limitations"]], "Linear Algebra Operations": [[5, null]], "Linear Functions": [[37, null], [39, null]], "Linear Layers": [[77, null], [81, null]], "Loss Functions": [[37, null], [44, null]], "Loss Layers": [[77, null], [87, null]], "Lucid": [[0, null]], "Matrix Multiplication Rules": [[119, "matrix-multiplication-rules"]], "Methods": [[14, "methods"], [15, "methods"], [114, "methods"]], "Modules": [[77, null]], "Normalization Functions": [[37, null], [48, null]], "Normalization Layers": [[77, null], [95, null]], "Notes": [[0, "notes"]], "Organizing Models": [[103, "organizing-models"]], "Overview": [[0, "overview"], [103, "overview"], [113, "overview"]], "Parameters": [[2, "parameters"], [3, "parameters"], [4, "parameters"], [6, "parameters"], [7, "parameters"], [8, "parameters"], [9, "parameters"], [10, "parameters"], [11, "parameters"], [12, "parameters"], [13, "parameters"], [15, "parameters"], [16, "parameters"], [17, "parameters"], [18, "parameters"], [20, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [35, "parameters"], [38, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [75, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [82, "parameters"], [83, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [88, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [106, "parameters"], [109, "parameters"], [110, "parameters"], [111, "parameters"], [112, "parameters"], [114, "parameters"], [115, "parameters"], [116, "parameters"], [117, "parameters"], [118, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [122, "parameters"], [123, "parameters"], [124, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [133, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [154, "parameters"], [155, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"], [159, "parameters"], [160, "parameters"], [161, "parameters"], [163, "parameters"], [164, "parameters"], [165, "parameters"], [166, "parameters"], [167, "parameters"], [168, "parameters"], [169, "parameters"], [170, "parameters"], [171, "parameters"]], "Performing backpropagation": [[114, null]], "Pooling Functions": [[37, null], [54, null]], "Pooling Layers": [[77, null], [102, null]], "Potential Pitfalls": [[104, "potential-pitfalls"], [106, "potential-pitfalls"]], "Properties": [[15, "properties"], [114, "properties"]], "Raises": [[2, "raises"], [3, "raises"], [4, "raises"], [6, "raises"], [7, "raises"], [8, "raises"], [9, "raises"], [10, "raises"], [11, "raises"], [12, "raises"]], "Random Number Generations": [[108, null]], "Returns": [[2, "returns"], [3, "returns"], [4, "returns"], [6, "returns"], [7, "returns"], [8, "returns"], [9, "returns"], [10, "returns"], [11, "returns"], [12, "returns"], [17, "returns"], [18, "returns"], [20, "returns"], [21, "returns"], [22, "returns"], [23, "returns"], [24, "returns"], [25, "returns"], [26, "returns"], [27, "returns"], [28, "returns"], [30, "returns"], [31, "returns"], [32, "returns"], [33, "returns"], [34, "returns"], [35, "returns"], [38, "returns"], [40, "returns"], [41, "returns"], [42, "returns"], [43, "returns"], [45, "returns"], [46, "returns"], [47, "returns"], [49, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [53, "returns"], [55, "returns"], [56, "returns"], [57, "returns"], [104, "returns"], [106, "returns"], [109, "returns"], [110, "returns"], [111, "returns"], [112, "returns"], [115, "returns"], [116, "returns"], [117, "returns"], [118, "returns"], [119, "returns"], [120, "returns"], [121, "returns"], [122, "returns"], [123, "returns"], [124, "returns"], [125, "returns"], [126, "returns"], [127, "returns"], [128, "returns"], [129, "returns"], [130, "returns"], [131, "returns"], [133, "returns"], [134, "returns"], [135, "returns"], [136, "returns"], [137, "returns"], [138, "returns"], [139, "returns"], [140, "returns"], [141, "returns"], [142, "returns"], [143, "returns"], [144, "returns"], [145, "returns"], [146, "returns"], [147, "returns"], [148, "returns"], [149, "returns"], [150, "returns"], [151, "returns"], [152, "returns"], [153, "returns"], [154, "returns"], [155, "returns"], [156, "returns"], [157, "returns"], [158, "returns"], [159, "returns"], [160, "returns"], [161, "returns"], [163, "returns"], [164, "returns"], [165, "returns"], [166, "returns"], [167, "returns"], [168, "returns"], [169, "returns"], [170, "returns"], [171, "returns"]], "Tensor Generating Functions": [[132, null]], "Tensor Operations": [[132, null]], "Tensor Utilites": [[162, null]], "Type Definitions": [[107, "type-definitions"]], "Unary Functions": [[132, null]], "Usage": [[13, "usage"], [104, "usage"], [105, "usage"], [106, "usage"]], "Use another Tensor as input": [[158, null]], "Why Use Type Aliases?": [[107, null]], "activation Functions": [[37, null]], "lucid.Tensor": [[114, null]], "lucid.abs": [[133, null]], "lucid.add": [[115, null]], "lucid.arccos": [[134, null]], "lucid.arcsin": [[135, null]], "lucid.arctan": [[136, null]], "lucid.clip": [[137, null]], "lucid.concatenate": [[159, null]], "lucid.cos": [[138, null]], "lucid.cosh": [[139, null]], "lucid.cube": [[140, null]], "lucid.diag": [[126, null]], "lucid.div": [[116, null]], "lucid.dot": [[117, null]], "lucid.exp": [[141, null]], "lucid.eye": [[127, null]], "lucid.flatten": [[160, null]], "lucid.grad_enabled": [[104, null]], "lucid.hstack": [[161, null]], "lucid.inner": [[118, null]], "lucid.linalg": [[1, null]], "lucid.linalg.cholesky": [[2, null]], "lucid.linalg.det": [[3, null]], "lucid.linalg.eig": [[4, null]], "lucid.linalg.inv": [[6, null]], "lucid.linalg.matrix_power": [[7, null]], "lucid.linalg.norm": [[8, null]], "lucid.linalg.pinv": [[9, null]], "lucid.linalg.qr": [[10, null]], "lucid.linalg.solve": [[11, null]], "lucid.linalg.svd": [[12, null]], "lucid.log": [[142, null]], "lucid.matmul": [[119, null]], "lucid.max": [[143, null]], "lucid.maximum": [[120, null]], "lucid.mean": [[144, null]], "lucid.min": [[145, null]], "lucid.minimum": [[121, null]], "lucid.mul": [[122, null]], "lucid.newaxis": [[105, null]], "lucid.nn": [[103, null]], "lucid.nn.functional": [[37, null]], "lucid.no_grad": [[106, null]], "lucid.ones": [[128, null]], "lucid.ones_like": [[129, null]], "lucid.outer": [[123, null]], "lucid.pad": [[163, null]], "lucid.power": [[124, null]], "lucid.random": [[113, null]], "lucid.random.rand": [[109, null]], "lucid.random.randint": [[110, null]], "lucid.random.randn": [[111, null]], "lucid.random.seed": [[112, null]], "lucid.ravel": [[164, null]], "lucid.reciprocal": [[146, null]], "lucid.repeat": [[165, null]], "lucid.reshape": [[166, null]], "lucid.sign": [[147, null]], "lucid.sin": [[148, null]], "lucid.sinh": [[149, null]], "lucid.sqrt": [[150, null]], "lucid.square": [[151, null]], "lucid.squeeze": [[167, null]], "lucid.stack": [[168, null]], "lucid.sub": [[125, null]], "lucid.sum": [[152, null]], "lucid.tan": [[153, null]], "lucid.tanh": [[154, null]], "lucid.tensor": [[158, null]], "lucid.tile": [[169, null]], "lucid.trace": [[155, null]], "lucid.transpose": [[156, null]], "lucid.types": [[107, null]], "lucid.unsqueeze": [[170, null]], "lucid.var": [[157, null]], "lucid.vstack": [[171, null]], "lucid.zeros": [[130, null]], "lucid.zeros_like": [[131, null]], "nn.AlphaDropout": [[71, null]], "nn.AvgPool1d": [[96, null]], "nn.AvgPool2d": [[97, null]], "nn.AvgPool3d": [[98, null]], "nn.BCELoss": [[82, null]], "nn.BatchNorm1d": [[88, null]], "nn.BatchNorm2d": [[89, null]], "nn.BatchNorm3d": [[90, null]], "nn.Bilinear": [[78, null]], "nn.Buffer": [[13, null]], "nn.Conv1d": [[67, null]], "nn.Conv2d": [[68, null]], "nn.Conv3d": [[69, null]], "nn.CrossEntropyLoss": [[83, null]], "nn.Dropout": [[72, null]], "nn.Dropout1d": [[73, null]], "nn.Dropout2d": [[74, null]], "nn.Dropout3d": [[75, null]], "nn.ELU": [[58, null]], "nn.GELU": [[59, null]], "nn.HuberLoss": [[84, null]], "nn.Identity": [[79, null]], "nn.InstanceNorm1d": [[91, null]], "nn.InstanceNorm2d": [[92, null]], "nn.InstanceNorm3d": [[93, null]], "nn.LayerNorm": [[94, null]], "nn.LeakyReLU": [[60, null]], "nn.Linear": [[80, null]], "nn.MSELoss": [[85, null]], "nn.MaxPool1d": [[99, null]], "nn.MaxPool2d": [[100, null]], "nn.MaxPool3d": [[101, null]], "nn.Module": [[14, null]], "nn.NLLLoss": [[86, null]], "nn.Parameter": [[15, null]], "nn.ReLU": [[61, null]], "nn.SELU": [[62, null]], "nn.Sequential": [[16, null]], "nn.Sigmoid": [[63, null]], "nn.Softmax": [[64, null]], "nn.Tanh": [[65, null]], "nn.functional.alpha_dropout": [[31, null]], "nn.functional.avg_pool1d": [[51, null]], "nn.functional.avg_pool2d": [[52, null]], "nn.functional.avg_pool3d": [[53, null]], "nn.functional.batch_norm": [[47, null]], "nn.functional.bilinear": [[38, null]], "nn.functional.binary_cross_entropy": [[41, null]], "nn.functional.conv1d": [[26, null]], "nn.functional.conv2d": [[27, null]], "nn.functional.conv3d": [[28, null]], "nn.functional.cross_entropy": [[42, null]], "nn.functional.dropout": [[32, null]], "nn.functional.dropout1d": [[33, null]], "nn.functional.dropout2d": [[34, null]], "nn.functional.dropout3d": [[35, null]], "nn.functional.elu": [[17, null]], "nn.functional.gelu": [[18, null]], "nn.functional.huber_loss": [[43, null]], "nn.functional.instance_norm": [[49, null]], "nn.functional.layer_norm": [[50, null]], "nn.functional.leaky_relu": [[20, null]], "nn.functional.linear": [[40, null]], "nn.functional.max_pool1d": [[55, null]], "nn.functional.max_pool2d": [[56, null]], "nn.functional.max_pool3d": [[57, null]], "nn.functional.mse_loss": [[45, null]], "nn.functional.nll_loss": [[46, null]], "nn.functional.relu": [[21, null]], "nn.functional.selu": [[22, null]], "nn.functional.sigmoid": [[23, null]], "nn.functional.softmax": [[24, null]], "nn.functional.tanh": [[25, null]], "nn.functional.unfold": [[30, null]]}, "docnames": ["index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/nn", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/types", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/unsqueeze", "tensor/utilities/vstack"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/nn.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/types.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst"], "indexentries": {"abs() (in module lucid)": [[133, "lucid.abs", false]], "add() (in module lucid)": [[115, "lucid.add", false]], "alpha_dropout() (in module lucid.nn.functional)": [[31, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[71, "lucid.nn.AlphaDropout", false]], "arccos() (in module lucid)": [[134, "lucid.arccos", false]], "arcsin() (in module lucid)": [[135, "lucid.arcsin", false]], "arctan() (in module lucid)": [[136, "lucid.arctan", false]], "avg_pool1d() (in module lucid.nn.functional)": [[51, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[52, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[53, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[96, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[97, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[98, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[47, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[88, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[89, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[90, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[82, "lucid.nn.BCELoss", false]], "bilinear (class in lucid.nn)": [[78, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[38, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[41, "lucid.nn.functional.binary_cross_entropy", false]], "buffer (class in lucid.nn)": [[13, "lucid.nn.Buffer", false]], "cholesky() (in module lucid.linalg)": [[2, "lucid.linalg.cholesky", false]], "clip() (in module lucid)": [[137, "lucid.clip", false]], "concatenate() (in module lucid)": [[159, "lucid.concatenate", false]], "conv1d (class in lucid.nn)": [[67, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[26, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[68, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[27, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[69, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[28, "lucid.nn.functional.conv3d", false]], "cos() (in module lucid)": [[138, "lucid.cos", false]], "cosh() (in module lucid)": [[139, "lucid.cosh", false]], "cross_entropy() (in module lucid.nn.functional)": [[42, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[83, "lucid.nn.CrossEntropyLoss", false]], "cube() (in module lucid)": [[140, "lucid.cube", false]], "det() (in module lucid.linalg)": [[3, "lucid.linalg.det", false]], "diag() (in module lucid)": [[126, "lucid.diag", false]], "div() (in module lucid)": [[116, "lucid.div", false]], "dot() (in module lucid)": [[117, "lucid.dot", false]], "dropout (class in lucid.nn)": [[72, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[32, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[73, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[33, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[74, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[34, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[75, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[35, "lucid.nn.functional.dropout3d", false]], "eig() (in module lucid.linalg)": [[4, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[58, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[17, "lucid.nn.functional.elu", false]], "exp() (in module lucid)": [[141, "lucid.exp", false]], "eye() (in module lucid)": [[127, "lucid.eye", false]], "flatten() (in module lucid)": [[160, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[59, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[18, "lucid.nn.functional.gelu", false]], "grad_enabled() (in module lucid)": [[104, "lucid.grad_enabled", false]], "hstack() (in module lucid)": [[161, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[43, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[84, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[79, "lucid.nn.Identity", false]], "inner() (in module lucid)": [[118, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[49, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[91, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[92, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[93, "lucid.nn.InstanceNorm3d", false]], "inv() (in module lucid.linalg)": [[6, "lucid.linalg.inv", false]], "layer_norm() (in module lucid.nn.functional)": [[50, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[94, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[20, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[60, "lucid.nn.LeakyReLU", false]], "linear (class in lucid.nn)": [[80, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[40, "lucid.nn.functional.linear", false]], "log() (in module lucid)": [[142, "lucid.log", false]], "lucid": [[0, "module-lucid", false]], "matmul() (in module lucid)": [[119, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[7, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[143, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[55, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[56, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[57, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[120, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[99, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[100, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[101, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[144, "lucid.mean", false]], "min() (in module lucid)": [[145, "lucid.min", false]], "minimum() (in module lucid)": [[121, "lucid.minimum", false]], "module": [[0, "module-lucid", false]], "module (class in lucid.nn)": [[14, "lucid.nn.Module", false]], "mse_loss() (in module lucid.nn.functional)": [[45, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[85, "lucid.nn.MSELoss", false]], "mul() (in module lucid)": [[122, "lucid.mul", false]], "nll_loss() (in module lucid.nn.functional)": [[46, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[86, "lucid.nn.NLLLoss", false]], "no_grad() (in module lucid)": [[106, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[8, "lucid.linalg.norm", false]], "ones() (in module lucid)": [[128, "lucid.ones", false]], "ones_like() (in module lucid)": [[129, "lucid.ones_like", false]], "outer() (in module lucid)": [[123, "lucid.outer", false]], "pad() (in module lucid)": [[163, "lucid.pad", false]], "parameter (class in lucid.nn)": [[15, "lucid.nn.Parameter", false]], "pinv() (in module lucid.linalg)": [[9, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[124, "lucid.power", false]], "qr() (in module lucid.linalg)": [[10, "lucid.linalg.qr", false]], "rand() (in module lucid.random)": [[109, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[110, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[111, "lucid.random.randn", false]], "ravel() (in module lucid)": [[164, "lucid.ravel", false]], "reciprocal() (in module lucid)": [[146, "lucid.reciprocal", false]], "relu (class in lucid.nn)": [[61, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[21, "lucid.nn.functional.relu", false]], "repeat() (in module lucid)": [[165, "lucid.repeat", false]], "reshape() (in module lucid)": [[166, "lucid.reshape", false]], "seed() (in module lucid.random)": [[112, "lucid.random.seed", false]], "selu (class in lucid.nn)": [[62, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[22, "lucid.nn.functional.selu", false]], "sequential (class in lucid.nn)": [[16, "lucid.nn.Sequential", false]], "sigmoid (class in lucid.nn)": [[63, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[23, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[147, "lucid.sign", false]], "sin() (in module lucid)": [[148, "lucid.sin", false]], "sinh() (in module lucid)": [[149, "lucid.sinh", false]], "softmax (class in lucid.nn)": [[64, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[24, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[11, "lucid.linalg.solve", false]], "sqrt() (in module lucid)": [[150, "lucid.sqrt", false]], "square() (in module lucid)": [[151, "lucid.square", false]], "squeeze() (in module lucid)": [[167, "lucid.squeeze", false]], "stack() (in module lucid)": [[168, "lucid.stack", false]], "sub() (in module lucid)": [[125, "lucid.sub", false]], "sum() (in module lucid)": [[152, "lucid.sum", false]], "svd() (in module lucid.linalg)": [[12, "lucid.linalg.svd", false]], "tan() (in module lucid)": [[153, "lucid.tan", false]], "tanh (class in lucid.nn)": [[65, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[154, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[25, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[114, "lucid.Tensor", false]], "tensor() (in module lucid)": [[158, "lucid.tensor", false]], "tile() (in module lucid)": [[169, "lucid.tile", false]], "trace() (in module lucid)": [[155, "lucid.trace", false]], "transpose() (in module lucid)": [[156, "lucid.transpose", false]], "unfold() (in module lucid.nn.functional)": [[30, "lucid.nn.functional.unfold", false]], "unsqueeze() (in module lucid)": [[170, "lucid.unsqueeze", false]], "var() (in module lucid)": [[157, "lucid.var", false]], "vstack() (in module lucid)": [[171, "lucid.vstack", false]], "zeros() (in module lucid)": [[130, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[131, "lucid.zeros_like", false]]}, "objects": {"": [[0, 0, 0, "-", "lucid"]], "lucid": [[114, 1, 1, "", "Tensor"], [133, 2, 1, "", "abs"], [115, 2, 1, "", "add"], [134, 2, 1, "", "arccos"], [135, 2, 1, "", "arcsin"], [136, 2, 1, "", "arctan"], [137, 2, 1, "", "clip"], [159, 2, 1, "", "concatenate"], [138, 2, 1, "", "cos"], [139, 2, 1, "", "cosh"], [140, 2, 1, "", "cube"], [126, 2, 1, "", "diag"], [116, 2, 1, "", "div"], [117, 2, 1, "", "dot"], [141, 2, 1, "", "exp"], [127, 2, 1, "", "eye"], [160, 2, 1, "", "flatten"], [104, 2, 1, "", "grad_enabled"], [161, 2, 1, "", "hstack"], [118, 2, 1, "", "inner"], [142, 2, 1, "", "log"], [119, 2, 1, "", "matmul"], [143, 2, 1, "", "max"], [120, 2, 1, "", "maximum"], [144, 2, 1, "", "mean"], [145, 2, 1, "", "min"], [121, 2, 1, "", "minimum"], [122, 2, 1, "", "mul"], [106, 2, 1, "", "no_grad"], [128, 2, 1, "", "ones"], [129, 2, 1, "", "ones_like"], [123, 2, 1, "", "outer"], [163, 2, 1, "", "pad"], [124, 2, 1, "", "power"], [164, 2, 1, "", "ravel"], [146, 2, 1, "", "reciprocal"], [165, 2, 1, "", "repeat"], [166, 2, 1, "", "reshape"], [147, 2, 1, "", "sign"], [148, 2, 1, "", "sin"], [149, 2, 1, "", "sinh"], [150, 2, 1, "", "sqrt"], [151, 2, 1, "", "square"], [167, 2, 1, "", "squeeze"], [168, 2, 1, "", "stack"], [125, 2, 1, "", "sub"], [152, 2, 1, "", "sum"], [153, 2, 1, "", "tan"], [154, 2, 1, "", "tanh"], [158, 2, 1, "", "tensor"], [169, 2, 1, "", "tile"], [155, 2, 1, "", "trace"], [156, 2, 1, "", "transpose"], [170, 2, 1, "", "unsqueeze"], [157, 2, 1, "", "var"], [171, 2, 1, "", "vstack"], [130, 2, 1, "", "zeros"], [131, 2, 1, "", "zeros_like"]], "lucid.linalg": [[2, 2, 1, "", "cholesky"], [3, 2, 1, "", "det"], [4, 2, 1, "", "eig"], [6, 2, 1, "", "inv"], [7, 2, 1, "", "matrix_power"], [8, 2, 1, "", "norm"], [9, 2, 1, "", "pinv"], [10, 2, 1, "", "qr"], [11, 2, 1, "", "solve"], [12, 2, 1, "", "svd"]], "lucid.nn": [[71, 1, 1, "", "AlphaDropout"], [96, 1, 1, "", "AvgPool1d"], [97, 1, 1, "", "AvgPool2d"], [98, 1, 1, "", "AvgPool3d"], [82, 1, 1, "", "BCELoss"], [88, 1, 1, "", "BatchNorm1d"], [89, 1, 1, "", "BatchNorm2d"], [90, 1, 1, "", "BatchNorm3d"], [78, 1, 1, "", "Bilinear"], [13, 1, 1, "", "Buffer"], [67, 1, 1, "", "Conv1d"], [68, 1, 1, "", "Conv2d"], [69, 1, 1, "", "Conv3d"], [83, 1, 1, "", "CrossEntropyLoss"], [72, 1, 1, "", "Dropout"], [73, 1, 1, "", "Dropout1d"], [74, 1, 1, "", "Dropout2d"], [75, 1, 1, "", "Dropout3d"], [58, 1, 1, "", "ELU"], [59, 1, 1, "", "GELU"], [84, 1, 1, "", "HuberLoss"], [79, 1, 1, "", "Identity"], [91, 1, 1, "", "InstanceNorm1d"], [92, 1, 1, "", "InstanceNorm2d"], [93, 1, 1, "", "InstanceNorm3d"], [94, 1, 1, "", "LayerNorm"], [60, 1, 1, "", "LeakyReLU"], [80, 1, 1, "", "Linear"], [85, 1, 1, "", "MSELoss"], [99, 1, 1, "", "MaxPool1d"], [100, 1, 1, "", "MaxPool2d"], [101, 1, 1, "", "MaxPool3d"], [14, 1, 1, "", "Module"], [86, 1, 1, "", "NLLLoss"], [15, 1, 1, "", "Parameter"], [61, 1, 1, "", "ReLU"], [62, 1, 1, "", "SELU"], [16, 1, 1, "", "Sequential"], [63, 1, 1, "", "Sigmoid"], [64, 1, 1, "", "Softmax"], [65, 1, 1, "", "Tanh"]], "lucid.nn.functional": [[31, 2, 1, "", "alpha_dropout"], [51, 2, 1, "", "avg_pool1d"], [52, 2, 1, "", "avg_pool2d"], [53, 2, 1, "", "avg_pool3d"], [47, 2, 1, "", "batch_norm"], [38, 2, 1, "", "bilinear"], [41, 2, 1, "", "binary_cross_entropy"], [26, 2, 1, "", "conv1d"], [27, 2, 1, "", "conv2d"], [28, 2, 1, "", "conv3d"], [42, 2, 1, "", "cross_entropy"], [32, 2, 1, "", "dropout"], [33, 2, 1, "", "dropout1d"], [34, 2, 1, "", "dropout2d"], [35, 2, 1, "", "dropout3d"], [17, 2, 1, "", "elu"], [18, 2, 1, "", "gelu"], [43, 2, 1, "", "huber_loss"], [49, 2, 1, "", "instance_norm"], [50, 2, 1, "", "layer_norm"], [20, 2, 1, "", "leaky_relu"], [40, 2, 1, "", "linear"], [55, 2, 1, "", "max_pool1d"], [56, 2, 1, "", "max_pool2d"], [57, 2, 1, "", "max_pool3d"], [45, 2, 1, "", "mse_loss"], [46, 2, 1, "", "nll_loss"], [21, 2, 1, "", "relu"], [22, 2, 1, "", "selu"], [23, 2, 1, "", "sigmoid"], [24, 2, 1, "", "softmax"], [25, 2, 1, "", "tanh"], [30, 2, 1, "", "unfold"]], "lucid.random": [[109, 2, 1, "", "rand"], [110, 2, 1, "", "randint"], [111, 2, 1, "", "randn"], [112, 2, 1, "", "seed"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [0, 1, 7, 9, 12, 13, 14, 15, 16, 83, 86, 96, 99, 100, 103, 105, 119, 126, 142, 144, 152, 155, 157, 158, 167], "0": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 133, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 148, 149, 152, 153, 154, 156, 157, 158, 159, 161, 163, 164, 165, 167, 168, 170, 171], "0000": [83, 84, 86], "005": 60, "01": [20, 60], "01051757": 111, "0205": 83, "0217": 83, "0227": 83, "0299": 83, "044715": [18, 59], "0450": 83, "0451": 83, "04719755": 134, "0474259": 23, "0480": 83, "05": [47, 49, 50, 60, 88, 89, 90, 91, 92, 93, 94], "0507": [22, 62], "07": [41, 42, 82, 83], "0700": 83, "0706508": 65, "0721": 83, "0794": 86, "0802": 86, "08333333": 9, "085537": 141, "0900": [64, 83], "0986": [24, 64], "09861229": 142, "0992": 83, "1": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 107, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171], "10": [16, 27, 28, 38, 40, 67, 68, 69, 74, 75, 78, 80, 89, 90, 92, 97, 98, 100, 110, 113, 116, 119, 122, 123, 136, 152], "1001": 83, "1003": 83, "1014": 22, "1025": 16, "1026": 16, "1027": 16, "10499": 23, "1050": 63, "1054": 86, "1056": 16, "11": [38, 67, 68, 69, 74, 78, 89, 90, 92, 97, 98, 100, 119], "1111": 82, "1134": 38, "119": 38, "1192": [23, 24, 64], "12": [38, 67, 68, 69, 74, 75, 78, 89, 90, 92, 97, 98, 100, 119, 123, 124], "123": 112, "125": 98, "1250": 84, "128": 16, "13": [38, 67, 68, 69, 78, 90, 97, 98, 100, 119], "14": [67, 68, 69, 74, 75, 78, 90, 97, 98, 100, 107, 119, 123], "145": 38, "15": [38, 67, 68, 69, 78, 90, 97, 98, 100, 119, 123, 155], "1513": 86, "155": 119, "1588": [18, 59], "16": [16, 67, 68, 69, 74, 75, 78, 89, 90, 97, 98, 100, 103, 119, 123, 150], "16227766": 10, "16425": 86, "1643": 82, "166": 119, "17": [67, 68, 69, 78, 90, 98, 118], "170": 38, "17520119": 149, "18": [67, 68, 69, 74, 78, 90, 98, 122, 123], "1800": 83, "19": [27, 28, 38, 68, 69, 90, 117, 119], "1966": [24, 63, 64], "1998": 83, "1d": [26, 51, 55, 88, 91, 119, 126, 155, 163, 164, 165, 169], "1e": [41, 42, 47, 49, 50, 82, 83, 88, 89, 90, 91, 92, 93, 94], "2": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 107, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171], "20": [16, 68, 69, 74, 90, 123, 141], "2039": 86, "204": 69, "21": [38, 68, 69, 90, 123], "211": 119, "22": [38, 68, 69, 74, 90, 117, 119], "2231": [83, 86], "2247": [88, 89, 90, 91, 92, 93, 94], "226": 119, "22752314": 111, "23": [68, 69, 90], "2324": 62, "24": [38, 68, 69, 74, 90, 123], "2424": [24, 64], "2447": 64, "25": [23, 63, 69, 85, 90, 97, 98, 116, 146, 157], "2500": [82, 84, 86], "2512": 58, "2547": 62, "26": [40, 69, 80, 90, 123], "26325684": 111, "2689": [24, 63, 64], "27": [38, 67, 69, 90, 140], "28": [38, 69, 123], "29": 69, "2_i": [91, 92, 93], "2d": [27, 34, 52, 56, 89, 92, 119, 126, 127, 155, 160, 163, 165, 169], "2x2": 30, "3": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13, 14, 15, 16, 18, 23, 24, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 40, 43, 45, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 137, 139, 140, 141, 142, 143, 144, 145, 149, 150, 151, 152, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171], "30": 69, "3026": 86, "31": [38, 69, 119], "31622777": 10, "32": [16, 38, 40, 68, 69, 80, 103, 117, 118, 123], "33": [16, 40, 69, 80], "33333333": 9, "34": [16, 38, 69, 119, 123], "35": [16, 69], "3567": [82, 86], "36": 69, "3679": [17, 22, 58], "37": 67, "372": 38, "375": 85, "3750": 84, "38344152": 109, "38629436": 142, "389056": 141, "3935": 58, "3d": [28, 35, 53, 57, 69, 90, 93], "3x3": 113, "4": [1, 2, 3, 4, 6, 8, 9, 10, 16, 26, 27, 28, 30, 33, 34, 35, 38, 40, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 105, 107, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 129, 131, 137, 142, 143, 144, 145, 146, 148, 150, 151, 152, 153, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 168, 169, 171], "4044": 82, "4076": 83, "41421356": 2, "41666667": 9, "41808962": 111, "419974": 25, "4199743": 65, "42": [38, 107, 113], "42718872": 10, "4286": 82, "43": [117, 119], "4323": 58, "4375": 84, "43758721": 109, "4472136": 4, "4495": [90, 93], "45": 38, "4545": 71, "47112767": 136, "48": [40, 80], "4979": 58, "5": [0, 1, 6, 7, 8, 9, 14, 15, 16, 18, 23, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 40, 43, 45, 47, 49, 50, 51, 52, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 100, 101, 105, 107, 110, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 131, 133, 134, 135, 143, 144, 145, 146, 147, 152, 155, 156, 157, 158, 161, 166, 171], "50": [40, 80, 117, 119], "5000": [82, 84, 86], "5108": 86, "52359878": 135, "53": [38, 118], "54308063": 139, "545": 124, "5455": 71, "57": 38, "57079633": [134, 135], "57366333": 112, "6": [1, 9, 26, 27, 28, 30, 35, 38, 40, 67, 68, 69, 72, 73, 74, 75, 78, 80, 82, 88, 89, 90, 91, 92, 93, 94, 97, 98, 100, 101, 105, 107, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 129, 131, 143, 144, 145, 152, 155, 156, 157, 158, 161, 165, 166, 171], "6052": 86, "6065": 58, "6124": [88, 89, 90, 91, 92, 93, 94], "62": 38, "62686041": 149, "6321": [17, 58], "63245553": 10, "64": [16, 38], "64589411": 109, "6590": [24, 64], "6652": 64, "66666667": 9, "6667": 82, "6682": 82, "67": 119, "67326": 62, "6733": 22, "68811989": 111, "69314718": 142, "7": [8, 26, 27, 28, 30, 35, 38, 40, 41, 42, 59, 62, 63, 65, 67, 68, 69, 74, 75, 78, 80, 82, 83, 85, 89, 90, 92, 93, 97, 98, 100, 101, 107, 110, 115, 117, 118, 119, 123, 125, 126, 141, 144, 152, 155, 156, 157, 169], "7001": 83, "70710678": [4, 148], "7147": 86, "7182818": 141, "7311": [24, 63, 64], "74": 119, "75": [40, 80, 85], "7581": 22, "76159416": 154, "7616": [25, 65], "76219569": 139, "7635": 62, "772": 124, "78357324": 111, "78539816": 136, "79172504": 109, "8": [7, 11, 16, 26, 27, 28, 30, 35, 38, 40, 41, 59, 62, 63, 65, 67, 68, 69, 72, 73, 74, 75, 78, 80, 82, 85, 89, 90, 92, 93, 97, 98, 100, 101, 107, 110, 116, 117, 118, 119, 123, 124, 126, 140, 144, 152, 155, 156, 157], "8005": 83, "8182": 71, "82": 38, "8413": [18, 59], "8584": 62, "8808": [24, 63, 64], "887": 124, "891773": 109, "89442719": 4, "9": [11, 27, 30, 38, 40, 67, 68, 69, 74, 78, 80, 82, 89, 90, 92, 97, 98, 100, 107, 110, 115, 119, 123, 124, 125, 126, 150, 151], "90709145": 112, "9091": 71, "9120": 86, "9163": 86, "9486833": 10, "9526": 23, "9545": 59, "96366276": 109, "9640": 65, "96402758": 154, "9957": 86, "99734545": 112, "A": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 38, 40, 41, 42, 46, 47, 49, 50, 71, 72, 73, 74, 75, 82, 83, 86, 88, 89, 90, 91, 92, 93, 94, 103, 106, 107, 109, 110, 111, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171], "As": 112, "By": [0, 15, 103, 105, 109, 110, 111], "For": [0, 2, 3, 4, 6, 7, 8, 9, 11, 16, 17, 18, 20, 21, 22, 23, 25, 38, 40, 62, 67, 68, 69, 78, 80, 88, 89, 90, 91, 92, 93, 103, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 141, 142, 143, 144, 145, 148, 150, 152, 155, 156, 157, 163, 165, 167, 169, 170], "If": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 14, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 35, 38, 40, 47, 49, 67, 68, 69, 78, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171], "In": [0, 9, 26, 27, 28, 83, 86, 104, 105, 106], "It": [0, 9, 10, 11, 14, 16, 35, 38, 59, 61, 65, 78, 79, 82, 83, 84, 85, 86, 103, 105, 112, 115, 116, 117, 120, 121, 122, 124, 125, 143, 145, 159, 161, 163, 164, 165, 166, 167, 168, 169, 171], "Its": [11, 113], "Near": 9, "No": 30, "Not": 79, "The": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171], "There": 166, "These": [0, 1, 4, 7, 10, 12, 71, 72, 73, 74, 75, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 107, 113], "To": [111, 113], "With": 30, "_": [7, 16, 17, 18, 20, 21, 22, 23, 25, 40, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 117, 118, 119, 123, 155, 156], "_1": [4, 16, 38, 78, 123, 159, 161, 171], "_2": [4, 16, 38, 78, 123, 159, 161, 171], "__call__": 14, "__init__": [0, 13, 14, 15, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 78, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 96, 97, 98, 99, 100, 101, 103, 114], "__setattr__": 14, "_activ": 24, "_arraylik": [107, 126, 129, 131], "_arraylikeint": 163, "_arrayorscalar": [13, 15, 107, 114, 158], "_grad_en": [104, 106], "_i": [4, 8, 24, 38, 64, 85, 88, 94, 96, 99, 117, 118, 120, 121, 123, 124, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 165, 167, 170, 171], "_j": [24, 64, 96, 99, 123, 144, 152, 156, 157], "_k": 168, "_modul": 14, "_n": [4, 16, 159, 161, 171], "_numpyarrai": 107, "_out": [165, 169], "_p": 8, "_pad": 163, "_paddingstr": [67, 68, 69], "_paramet": 14, "_reductiontyp": [41, 42, 43, 45, 46, 82, 83, 84, 85, 86], "_scalar": [107, 137], "_shapelik": [50, 94, 107, 110, 128, 130, 166, 167, 170], "_slope": 60, "_tensor": [13, 15, 126, 158], "_tensorop": 114, "_u": 9, "_v": 9, "_valu": [137, 163], "_width": 163, "a_i": [120, 121, 124], "ab": 132, "abil": 0, "about": 0, "abov": [0, 104, 106, 112, 126, 127], "absolut": [7, 8, 43, 133], "abstract": 103, "acceler": [62, 88, 89, 90], "accept": [79, 109, 114], "access": [13, 15, 16, 166], "accord": [67, 68, 69, 78, 80, 83, 86, 156], "accordingli": 3, "account": [7, 9, 10], "accumul": [115, 116, 120, 121, 122, 125], "achiev": [26, 27, 28], "across": [13, 16, 50, 88, 89, 90, 91, 92, 93, 94, 107, 109, 110, 111, 112, 113, 144, 157], "activ": [0, 16, 17, 18, 20, 21, 22, 23, 24, 25, 31, 58, 59, 60, 61, 62, 63, 64, 65, 71, 72, 73, 74, 75, 82, 83, 86, 88, 89, 90, 94, 143, 145], "actual": [15, 82, 83, 85, 86, 114], "ad": [14, 16, 26, 27, 28, 38, 40, 41, 42, 47, 49, 50, 51, 52, 53, 55, 56, 57, 67, 68, 69, 82, 83, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 170], "add": [14, 16, 38, 40, 67, 68, 69, 78, 80, 94, 105, 132, 163, 170], "add_modul": [14, 16], "addit": [0, 7, 14, 16, 38, 40, 47, 49, 78, 80, 88, 89, 90, 91, 92, 93, 105, 113, 115, 168], "address": [83, 86], "adjust": [71, 88, 89, 90, 91, 92, 93, 94, 161, 171], "admonit": 16, "advanc": [9, 16, 26, 27, 28, 103], "advantag": 106, "affect": [104, 164, 167], "affin": [88, 89, 90, 91, 92, 93, 94], "after": [7, 15, 16, 35, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 71, 72, 73, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 96, 97, 98, 99, 100, 101, 106, 114, 115, 116, 120, 121, 122, 124, 125, 163], "afterward": 106, "aggreg": [123, 165, 169], "aim": 0, "algebra": [0, 1, 127], "algorithm": [0, 7, 9, 10, 113], "align": [11, 118, 119], "all": [0, 10, 14, 16, 27, 28, 52, 53, 56, 57, 60, 61, 69, 97, 98, 101, 103, 124, 143, 144, 145, 152, 155, 157, 159, 160, 161, 165, 167, 168, 169, 171], "allevi": 17, "allow": [0, 9, 10, 15, 16, 17, 20, 21, 24, 28, 30, 58, 59, 60, 62, 63, 64, 65, 67, 68, 69, 103, 105, 128, 130, 131, 156, 158], "along": [24, 64, 118, 119, 123, 143, 144, 145, 152, 155, 157, 159, 161, 165, 168, 169, 170, 171], "alongsid": 13, "alpha": [17, 20, 22, 31, 58, 62, 71], "alpha_dropout": [36, 37, 71], "alphadropout": [76, 77], "alphadropoutmodel": 71, "also": [17, 18, 20, 21, 22, 23, 25, 38, 40, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 130, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 154, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171], "alter": [16, 166], "altern": [59, 119], "alwai": [15, 164], "amount": [26, 27, 28, 51, 52, 53, 55, 56, 57], "an": [0, 4, 6, 7, 9, 10, 12, 14, 16, 18, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 58, 63, 67, 68, 69, 71, 72, 73, 74, 75, 78, 80, 94, 96, 97, 98, 99, 100, 101, 106, 107, 114, 119, 126, 127, 137, 144, 152, 157, 159, 165, 169, 170], "analog": [165, 169], "analysi": [67, 68, 69, 93, 96, 98, 99, 101], "ani": [7, 9, 13, 14, 15, 17, 18, 20, 21, 22, 23, 25, 31, 32, 38, 40, 47, 49, 63, 94, 103, 104, 106, 112, 114, 126, 127, 128, 129, 130, 131, 143, 145, 156, 158, 159, 160, 161, 163, 165, 168, 169, 170, 171], "anoth": [125, 129, 131], "append": 16, "appli": [0, 7, 16, 17, 18, 20, 21, 22, 23, 24, 25, 28, 30, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 45, 46, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 71, 72, 73, 74, 75, 78, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 119, 163, 165], "applic": [9, 26, 49, 67, 68, 69, 78, 80, 113, 130, 163], "approach": 16, "appropri": [9, 14, 16, 67, 68, 69, 71, 72, 73, 83, 97, 98, 104, 106], "approx": 22, "approxim": [9, 18, 59, 97, 100], "ar": [0, 3, 4, 6, 7, 9, 10, 11, 12, 13, 14, 15, 16, 24, 26, 27, 28, 30, 38, 40, 64, 67, 68, 69, 71, 72, 73, 74, 75, 78, 80, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 106, 107, 109, 110, 111, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 133, 137, 141, 143, 144, 145, 146, 147, 152, 155, 156, 159, 165, 166, 169], "arbitrari": [79, 137, 142, 144, 148, 150, 152, 156, 157], "arcco": 132, "architectur": [16, 18, 61, 78, 79, 103], "arcsin": 132, "arctan": 132, "arg": [14, 79], "argument": [14, 16, 79, 109, 156], "around": [4, 65], "arr": [107, 159, 161, 168, 171], "arrai": [0, 13, 15, 105, 107, 114, 119, 126, 129, 131, 158, 164, 165], "asarrai": 107, "assign": [14, 16, 83, 86], "assum": 104, "attempt": 16, "attent": 38, "attribut": 14, "audio": 67, "augment": [113, 165, 169], "autodiff": 0, "autograd": 103, "automat": [0, 15, 103, 109, 110, 111, 114, 131], "auxiliari": 13, "avail": 0, "averag": [13, 51, 52, 53, 85, 96, 97, 98, 144], "avg_pool": [96, 97, 98], "avg_pool1d": [37, 54], "avg_pool2d": [37, 54], "avg_pool3d": [37, 54], "avgpool1d": [77, 102], "avgpool1dmodel": 96, "avgpool2d": [77, 102], "avgpool2dmodel": 97, "avgpool3d": [77, 102], "avgpool3dmodel": 98, "avoid": [9, 106], "ax": [1, 105, 143, 144, 145, 152, 156, 157, 165, 167, 169], "axi": [24, 64, 118, 119, 143, 144, 145, 152, 157, 159, 161, 163, 165, 167, 168, 169, 170, 171], "b": [1, 11, 38, 40, 67, 68, 69, 78, 80, 105, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 159, 161, 168, 171], "b_i": [120, 121, 124], "back": [97, 98, 118, 123, 165, 169], "backpropag": [0, 3, 4, 6, 7, 9, 10, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 38, 40, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 106, 111, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 141, 143, 145, 158, 163, 165, 169], "backward": [0, 13, 15, 114], "balanc": 84, "base": [1, 6, 7, 10, 11, 14, 30, 38, 71, 83, 84, 103, 115, 116, 120, 121, 122, 124, 125, 131, 141, 142, 143, 145, 156, 163], "basic": [0, 26, 27, 28], "batch": [1, 7, 10, 12, 26, 27, 28, 30, 33, 34, 35, 38, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 67, 68, 69, 78, 80, 82, 83, 86, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 119], "batch_norm": [37, 48, 88, 89, 90], "batch_norm1": 16, "batch_norm2": 16, "batchnorm1d": [77, 95], "batchnorm1dmodel": 88, "batchnorm2d": [16, 77, 95], "batchnorm2dmodel": 89, "batchnorm3d": [77, 95], "batchnorm3dmodel": 90, "bceloss": [77, 87], "becaus": 110, "becom": [8, 14], "befor": [7, 15, 106, 112, 163], "begin": [8, 17, 20, 21, 22, 58, 60, 61, 62, 84, 85, 86, 96, 97, 98, 99, 100, 101, 105, 113, 120, 121, 123, 133, 137, 143, 145, 147, 163], "behav": [84, 155], "behavior": [16, 104, 113, 119], "being": [71, 72, 73, 74, 75, 104, 106, 159, 161, 171], "below": [10, 119, 126, 127], "benefici": 16, "benefit": [17, 103, 107], "bernoulli": [71, 72, 73, 74, 75], "beta": [88, 89, 90, 91, 92, 93, 94], "better": [6, 18, 91, 92, 93, 103], "between": [14, 26, 27, 28, 30, 38, 43, 67, 68, 69, 71, 72, 73, 74, 75, 78, 82, 83, 84, 85, 86, 113, 115, 116, 119, 122, 125, 157], "beyond": 0, "bia": [26, 27, 28, 38, 40, 47, 49, 50, 67, 68, 69, 78, 80, 88, 89, 90, 91, 92, 93, 94], "bias": [67, 68, 69, 80, 94, 103], "bilinear": [37, 39, 77, 81], "bilinearmodel": 78, "binari": [23, 41, 63, 71, 72, 73, 74, 75, 82], "binary_cross_entropi": [37, 44], "block": [14, 30, 67, 68, 69, 106], "block1": 103, "block2": 103, "bmatrix": 123, "bool": [12, 14, 15, 31, 32, 33, 34, 35, 47, 49, 67, 68, 69, 78, 80, 88, 89, 90, 91, 92, 93, 94, 104, 109, 110, 111, 114, 126, 127, 128, 129, 130, 131, 143, 144, 145, 152, 157, 158], "both": [26, 40, 51, 55, 59, 67, 68, 96, 97, 99, 100, 117, 118, 119, 123, 126], "break": 103, "broadcast": [74, 75, 144, 152, 157, 166, 170], "build": [0, 14, 16, 103], "built": [0, 16, 103], "c": [30, 33, 34, 35, 42, 46, 47, 49, 51, 52, 53, 55, 56, 57, 74, 75, 83, 86, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 105, 161, 171], "c_": [67, 68, 69], "c_in": [26, 27, 28], "c_out": [26, 27, 28], "calcul": [0, 1, 15, 106, 110, 114], "calculu": [2, 9], "call": [14, 104, 115, 116, 119, 120, 121, 122, 124, 125], "can": [0, 2, 4, 6, 7, 9, 10, 12, 13, 15, 16, 20, 26, 27, 28, 59, 60, 65, 67, 68, 69, 91, 92, 93, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 113, 114, 119, 127, 128, 130, 131, 144, 152, 157, 161, 163, 165, 166, 169, 170, 171], "cannot": [3, 4, 6, 7, 10, 11, 12], "capabl": [0, 126, 127, 128, 129, 130, 131], "captur": [30, 67, 68, 69, 78], "care": 106, "case": [8, 17, 20, 21, 22, 58, 60, 61, 62, 84, 85, 86, 96, 97, 98, 99, 100, 101, 103, 105, 120, 121, 133, 137, 143, 145, 147, 163], "caus": 9, "cdot": [2, 3, 6, 7, 8, 11, 17, 18, 20, 22, 23, 26, 27, 28, 38, 40, 51, 52, 53, 55, 56, 57, 59, 63, 71, 78, 80, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 117, 118, 119, 122, 124], "center": 65, "central": 107, "certain": [3, 18, 38, 78, 104, 143, 145], "chain": [6, 7, 16], "chang": [43, 84, 105, 106, 164, 166, 170], "channel": [26, 27, 28, 30, 33, 34, 35, 47, 49, 51, 52, 53, 55, 56, 57, 67, 68, 69, 74, 75, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101], "check": 104, "choleski": 5, "chosen": 71, "clariti": 107, "class": [0, 24, 42, 46, 103, 126, 127, 128, 130, 158], "classif": [23, 24, 41, 42, 46, 63, 64, 82, 83, 86], "cleaner": [106, 119], "clear": [15, 114], "clearli": 107, "clip": 132, "close": [6, 9, 62, 82], "closer": 58, "co": [132, 148], "code": [7, 16, 104, 106, 107, 113], "coeffici": 11, "col": 30, "collect": [1, 16], "column": [3, 4, 6, 10, 11, 12, 30, 127, 161], "combin": [16, 17, 18, 59, 83, 103, 144, 152, 157, 159], "common": 30, "commonli": [0, 18, 23, 24, 25, 26, 28, 38, 45, 47, 49, 64, 69, 82, 85, 86, 96, 97, 98, 99, 100, 101, 105, 107, 128, 167], "compar": [113, 168], "compat": [1, 79, 94, 103, 105, 113], "complex": [0, 4, 16, 21, 61, 99, 101, 103], "compon": [9, 14, 114], "compos": [67, 68, 69, 96, 97, 98, 99, 100, 101, 103], "comput": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 30, 38, 40, 41, 42, 43, 45, 46, 47, 49, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 163, 165, 169], "computation": 9, "concaten": [26, 27, 28, 161, 162, 168, 171], "concept": [0, 9], "condit": [2, 3, 6], "conjunct": [30, 86], "connect": [40, 67, 68, 69, 80], "consid": [6, 9, 16, 103, 104], "consider": 9, "consist": [13, 107, 112, 113, 163], "consistent_tensor": 113, "constant": [41, 42, 47, 49, 50, 62, 82, 83, 88, 89, 90, 91, 92, 93, 94, 107, 163], "constant_pad": 163, "construct": [0, 103, 126, 165, 169], "contain": [3, 4, 9, 10, 11, 12, 14, 16, 24, 30, 38, 40, 41, 42, 46, 82, 83, 86, 115, 116, 117, 118, 120, 121, 122, 123, 125, 133, 134, 135, 136, 138, 139, 140, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 160], "context": [104, 106], "contextmanag": 106, "contigu": 164, "continu": [60, 111], "contrast": [91, 92, 93], "contribut": [71, 72, 73, 74, 75, 96, 99, 100, 101, 155], "control": [58, 84, 104, 113], "conv": [89, 90], "conv1": [16, 67, 68, 69, 96, 97, 98, 99, 100, 101], "conv1d": [29, 37, 70, 77, 96, 99], "conv1dmodel": 67, "conv2": [16, 67, 68, 69], "conv2d": [16, 29, 37, 70, 77, 89, 97, 100, 103], "conv2dmodel": 68, "conv3d": [29, 37, 70, 77, 90, 98, 101], "conv3dmodel": 69, "convblock": 103, "convent": 119, "converg": [9, 65], "convers": [83, 86], "convert": [13, 15, 24, 64, 114], "convolut": [26, 27, 28, 30, 67, 68, 69, 97, 98, 100, 101, 163], "convolv": [26, 27, 28, 67, 68, 69], "core": [14, 103, 114], "correct": [83, 86], "correctli": [9, 14, 16, 83, 86, 113], "correspond": [4, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 38, 40, 61, 64, 78, 80, 88, 89, 90, 91, 92, 93, 97, 98, 117, 118, 120, 121, 124, 141, 142, 148, 150, 161, 163, 165, 169, 171], "cosh": [132, 149, 154], "cosin": [134, 138, 139, 148], "could": 14, "count": 159, "cover": [1, 26, 27, 28], "creat": [0, 13, 14, 16, 103, 105, 113, 127, 128, 129, 130, 131, 168], "creation": 16, "criterion": [82, 83, 84, 85, 86], "critic": [9, 113], "cross": [41, 42, 82, 83], "cross_entropi": [37, 44], "crossentropyloss": [77, 87], "cube": 132, "cumul": [18, 59], "current": [14, 104], "custom": [0, 13, 16, 58, 60, 103, 113, 127], "custommodul": 13, "d": [28, 35, 53, 57, 90, 93, 94, 98, 101, 105, 126], "d_": [28, 53, 57, 69, 98, 101], "d_1": 94, "d_2": 94, "d_n": 94, "d_out": [28, 53, 57], "data": [0, 7, 13, 15, 25, 26, 28, 30, 34, 35, 40, 61, 65, 67, 68, 69, 80, 93, 96, 98, 101, 105, 107, 113, 114, 115, 116, 122, 125, 126, 127, 128, 129, 130, 131, 158, 163, 164, 165, 166, 167, 169], "dataset": 106, "ddot": 123, "debug": [16, 104, 112], "decompos": [2, 10, 12], "decomposit": [1, 2, 6, 9, 10, 12], "deep": [0, 47, 59, 62, 103, 113], "deeper": [0, 62], "def": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 78, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 96, 97, 98, 99, 100, 101, 103, 104, 106, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171], "default": [8, 12, 13, 14, 15, 17, 20, 24, 26, 27, 28, 31, 32, 33, 34, 35, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 60, 64, 67, 68, 69, 71, 72, 73, 74, 75, 78, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 104, 109, 110, 111, 114, 126, 127, 128, 129, 130, 131, 143, 144, 145, 152, 156, 157, 158, 159, 161, 163, 165, 168, 171], "defin": [0, 16, 59, 82, 83, 84, 85, 86, 96, 103, 107, 110, 111, 124, 137, 156], "definit": [0, 2], "delta": [24, 43, 64, 84], "delta_": [24, 64], "demonstr": [0, 1, 103, 107], "denomin": [47, 49, 50, 88, 89, 90, 91, 92, 93, 94, 116], "denot": [7, 63, 67, 68, 69, 71, 72, 73, 74, 75, 156], "dens": 0, "dense1": 0, "dense2": 0, "densiti": [18, 59], "depend": [0, 7, 8, 41, 42, 43, 45, 46, 67, 117, 126, 143, 145, 165, 169], "depth": [28, 35, 53, 57, 69, 90, 93, 98, 101], "depthwis": [26, 27, 28], "deriv": [9, 10, 24, 59, 64, 65, 67, 68, 69, 78, 80], "descend": 12, "descent": 0, "describ": [3, 4], "deseri": 13, "design": [0, 1, 15, 16, 17, 22, 62, 71, 103, 107], "desir": [13, 156, 158], "destin": 14, "det": [1, 5], "det_a": 3, "detail": [0, 113, 119], "determin": [0, 1, 2, 3, 67, 68, 69, 97, 98, 100, 101, 104, 109, 110, 111], "develop": [0, 103, 113], "diag": [9, 132], "diagon": [9, 10, 12, 126, 127, 155], "diagonaliz": 4, "dict": [14, 79], "dictionari": [14, 15, 16], "differ": [7, 16, 24, 38, 64, 78, 85, 105, 112, 113, 125, 131, 157, 167], "differenti": [0, 2, 11, 59, 103, 109, 110, 111, 114, 128, 130], "dilat": [26, 27, 28, 67, 68, 69], "dilation_height": 30, "dilation_width": 30, "dim": [83, 86], "dimens": [3, 4, 6, 7, 10, 11, 12, 15, 24, 38, 40, 47, 49, 50, 64, 67, 68, 69, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 105, 107, 109, 114, 118, 143, 144, 145, 152, 155, 156, 157, 159, 161, 163, 165, 167, 168, 169, 170, 171], "dimension": [7, 9, 10, 12, 26, 27, 28, 51, 52, 53, 55, 56, 57, 67, 68, 69, 73, 74, 75, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 105, 118, 119, 123, 126, 141, 144, 152, 155, 157, 160, 164, 165, 167, 169], "direct": [4, 82, 83, 84, 85, 86], "directli": [112, 113, 158], "disabl": [104, 106], "discontinu": 147, "discrep": [82, 83, 86], "discret": [110, 113], "distribut": [18, 24, 59, 64, 67, 68, 69, 71, 72, 73, 74, 75, 78, 80, 83, 86, 96, 97, 98, 109, 110, 111, 113, 144, 152, 155, 157, 168], "div": 132, "divid": [9, 16, 24, 26, 27, 28, 64, 82, 83, 84, 85, 86, 116], "divis": [0, 9, 26, 27, 28, 71, 72, 73, 74, 75, 116], "do": [9, 11, 13, 31, 32, 33, 34, 103, 104, 131, 155, 163], "document": [0, 107, 113], "doe": [0, 7, 8, 9, 10, 12, 13, 16, 104, 106, 109, 110, 111, 112, 126, 127, 128, 129, 130, 131, 166], "doesn": 106, "don": 106, "dot": [4, 7, 16, 94, 99, 100, 101, 118, 123, 132, 159, 161, 168, 171], "down": 103, "drawback": 17, "drawn": [109, 110, 111, 113], "drop": [71, 72, 73, 74, 75], "dropout": [18, 31, 33, 34, 35, 71, 73, 74, 75], "dropout1d": [36, 37, 76, 77], "dropout1dmodel": 73, "dropout2d": [36, 37, 76, 77], "dropout3d": [36, 37, 76, 77], "dropoutmodel": 72, "dtype": [13, 15, 114, 126, 127, 128, 129, 130, 131, 158], "due": [7, 9, 26, 27, 61], "dure": [0, 3, 4, 6, 9, 10, 12, 13, 14, 15, 16, 24, 31, 32, 33, 34, 35, 47, 49, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 106, 114, 115, 143, 144, 145, 152, 157], "dy": [20, 60], "dynam": [14, 16, 94, 104], "e": [3, 4, 6, 7, 10, 12, 13, 24, 63, 64, 71, 83, 127, 139, 141, 142, 149, 154, 155, 159], "each": [4, 7, 9, 10, 12, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 38, 40, 47, 49, 61, 64, 67, 68, 69, 71, 72, 73, 74, 75, 78, 80, 82, 83, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 159, 161, 163, 165, 168, 169, 171], "eas": 0, "easi": [0, 15], "easier": 16, "easili": 15, "economi": 12, "edg": 163, "educ": 0, "effect": [16, 24, 26, 27, 28, 30, 58, 59, 61, 63, 64, 65, 88, 89, 90, 91, 92, 93, 94, 104, 105, 106, 161, 171], "effici": [0, 1, 6, 11, 30, 83, 103, 106], "eig": 5, "eigenvalu": [4, 10], "eigenvector": 4, "eigval": 4, "eigvec": 4, "either": [40, 107, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 158], "element": [9, 10, 15, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 61, 64, 67, 68, 69, 71, 72, 73, 74, 75, 82, 83, 84, 85, 86, 94, 96, 97, 98, 99, 100, 101, 105, 114, 115, 116, 119, 120, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 157, 160, 163, 165, 166, 167, 169], "elementwise_affin": 94, "elsewher": [99, 100, 101, 127], "elu": [19, 37, 66, 77], "elumodel": 58, "empti": [14, 16], "enabl": [0, 7, 12, 14, 15, 61, 67, 68, 69, 78, 80, 103, 104, 106, 109, 110, 111, 114], "encapsul": [103, 114], "encod": [83, 86], "encourag": [72, 73, 74, 75, 82, 83, 86], "end": [8, 17, 20, 21, 22, 58, 60, 61, 62, 84, 85, 86, 96, 97, 98, 99, 100, 101, 120, 121, 123, 133, 137, 143, 145, 147, 159, 163], "enforc": 14, "engin": 9, "ensur": [9, 10, 11, 13, 14, 15, 16, 24, 60, 64, 71, 72, 73, 74, 75, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 124, 144, 152, 157, 163], "enter": 106, "entir": [33, 34, 35, 74, 75, 113], "entri": 167, "entropi": [41, 42, 82, 83], "environ": 0, "ep": [41, 42, 47, 49, 50, 82, 83, 88, 89, 90, 91, 92, 93, 94], "epsilon": [82, 83, 88, 89, 90, 91, 92, 93, 94], "equal": [7, 96, 97, 98], "equat": [4, 9, 11], "equival": [119, 155, 164], "error": [4, 6, 14, 16, 18, 43, 45, 59, 82, 83, 84, 85, 103, 106, 107], "especi": [63, 105, 106, 107, 112], "essenti": [0, 1, 7, 9, 27, 30, 103, 112, 113, 143], "estim": 85, "etc": 82, "euclidean": 8, "evalu": [14, 47, 49, 71, 72, 73, 74, 75, 88, 89, 90, 91, 92, 93], "even": [106, 126, 127, 128, 129, 130, 131], "everywher": 147, "exact": [14, 156], "exactli": 16, "exampl": 119, "except": [147, 159, 161, 171], "exclus": 110, "execut": 106, "exist": [11, 16, 159], "exit": 106, "exp": [17, 22, 23, 25, 58, 62, 132], "expand": [30, 165, 169], "expect": [2, 16, 71, 72, 73, 74, 75, 94, 103, 107], "experi": [0, 112, 113], "experiment": 113, "explan": [7, 9], "explicit": 16, "explod": [62, 88, 89, 90], "explor": [103, 113], "expon": [7, 124], "exponenti": [17, 22, 24, 58, 62, 64, 71, 141], "extern": 0, "extract": [30, 69, 96, 98, 126, 143, 145], "extrem": 9, "ey": 132, "f": [0, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 64], "facilit": [16, 24, 64, 67, 68, 69, 103], "factor": [17, 26, 27, 28, 30, 107], "failur": 103, "fals": [12, 13, 14, 15, 31, 32, 33, 34, 35, 47, 49, 67, 68, 69, 78, 80, 104, 109, 110, 111, 114, 126, 127, 128, 129, 130, 131, 143, 144, 145, 152, 157, 158], "faster": 106, "fc": [68, 69, 96, 97, 98, 99, 100, 101], "fc1": [16, 59, 61, 62, 63, 65, 80], "fc2": [16, 59, 61, 62, 63, 65, 80], "featur": [38, 40, 47, 69, 72, 73, 74, 75, 78, 80, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103], "feed": 114, "fill": [109, 110, 111, 128, 129, 130, 131], "filter": [26, 27, 28, 30, 68, 69], "filter_height": 30, "filter_s": 30, "filter_width": 30, "final": 16, "find": [11, 143, 145], "finish": 106, "first": [4, 38, 78, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 171], "fit": 103, "fix": 163, "flatten": [16, 30, 123, 162, 164, 165], "flexibl": [0, 16, 103, 107, 128, 129], "float": [13, 15, 17, 20, 31, 32, 33, 34, 35, 41, 42, 43, 47, 49, 50, 58, 60, 71, 72, 73, 74, 75, 82, 83, 84, 88, 89, 90, 91, 92, 93, 94, 107, 114, 137, 158], "float32": [13, 15, 114, 126, 127, 128, 130, 158], "float64": [131, 158], "flow": [16, 59, 63, 65, 67, 68, 69, 78, 80, 104], "focu": 0, "focus": 0, "follow": [0, 1, 4, 10, 11, 12, 17, 18, 20, 21, 22, 23, 24, 25, 38, 40, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 107, 113, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 143, 145, 166], "form": [10, 123, 165, 169], "format": [83, 86], "formul": 18, "formula": [4, 12, 24, 64, 84, 119, 157], "forward": [0, 13, 14, 103], "found": 0, "foundat": [14, 103, 114], "four": 163, "frac": [2, 3, 4, 6, 7, 8, 9, 11, 12, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 38, 40, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171], "frame": 35, "framework": [0, 83, 86, 88, 89, 90, 91, 92, 93], "frequent": [83, 86], "from": [0, 7, 9, 13, 14, 15, 16, 30, 38, 47, 49, 67, 68, 69, 71, 72, 73, 74, 75, 78, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 103, 105, 106, 107, 109, 110, 111, 113, 114, 119, 120, 121, 125, 126, 143, 144, 145, 152, 157, 159, 161, 165, 167, 168, 169, 171], "full": 12, "full_matric": 12, "fulli": [1, 40, 80, 113], "function": [0, 1, 14, 16, 58, 59, 60, 61, 62, 63, 64, 65, 71, 72, 73, 74, 75, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 103, 107, 113], "fundament": [0, 40, 80], "further": [0, 113, 144, 152, 157], "futur": 79, "g": [3, 4, 7, 10, 12, 71, 159], "gamma": [88, 89, 90, 91, 92, 93, 94], "gaussian": [18, 59], "gelu": [19, 37, 66, 77], "gelunetwork": 59, "gener": [9, 71, 72, 73, 74, 75, 92, 106, 109, 110, 111, 112, 113, 118], "give": 0, "given": [3, 4, 7, 9, 10, 12, 30, 82, 83, 86, 104, 129, 131], "global": [104, 106, 112, 113], "goal": [82, 83, 86], "grad": [13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 30, 38, 40, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171], "grad_output": 7, "gradient": [0, 1, 13, 15, 103, 104, 106, 109, 110, 111, 126, 127, 128, 129, 130, 131, 158], "graph": [0, 114, 126, 127, 128, 129, 130, 131], "greater": 137, "group": [26, 27, 28, 67, 68, 69], "guarante": 112, "h": [27, 28, 30, 34, 35, 52, 53, 56, 57, 89, 90, 92, 93, 98, 101], "h_": [27, 28, 52, 53, 56, 57, 68, 69, 97, 98, 100, 101], "h_out": [27, 28, 52, 53, 56, 57], "h_stack": 161, "ha": [4, 16, 26, 27, 28, 82, 83, 88, 89, 90, 91, 92, 93, 94, 119, 155, 159, 161, 168, 171], "half": 150, "hand": 11, "handl": [0, 9, 14, 16, 83, 86, 103, 106], "hardwar": 0, "have": [3, 4, 6, 9, 10, 12, 15, 16, 27, 28, 103, 127, 128, 129, 130, 131, 143, 145, 159, 161, 167, 168, 171], "height": [27, 28, 30, 34, 35, 52, 53, 56, 57, 68, 69, 89, 90, 92, 93, 97, 98, 100, 101], "help": [0, 20, 22, 35, 58, 60, 62, 65, 88, 89, 90, 96, 97, 99, 100, 104, 105, 106, 107], "henc": 166, "here": [2, 14, 38, 103, 105, 106, 107, 113], "hierarch": [16, 103], "hierarchi": 68, "high": [0, 110], "higher": [83, 86, 118, 119, 123, 141], "highest": 110, "highlight": [99, 100, 101], "hint": 107, "histori": [109, 110, 111, 126, 127, 128, 129, 130, 131], "horizont": [161, 168], "hot": [83, 86], "how": [0, 16, 103, 107], "howev": 13, "hstack": 162, "huber": [43, 84], "huber_loss": [37, 44], "huberloss": [77, 87], "huberregressionmodel": 84, "hyperbol": [25, 65, 139, 149, 154], "i": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 134, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171], "ideal": [0, 16], "ident": [6, 7, 77, 81, 112, 113, 127, 166], "ii": 155, "ij": [24, 64, 117, 118, 119, 123], "ik": [117, 118, 119], "ill": [3, 9], "imag": [27, 49, 68, 92], "imbal": [83, 86], "implement": [0, 9, 14, 30, 161, 171], "impli": [67, 68], "import": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 32, 35, 38, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171], "improp": [16, 113], "improv": [47, 59, 62, 65, 107], "in1_featur": [38, 78], "in2_featur": [38, 78], "in_channel": [16, 67, 68, 69, 89, 90, 96, 97, 98, 99, 100, 101, 103], "in_featur": [16, 40, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 71, 72, 73, 78, 80, 82, 83, 84, 85, 86, 88, 91, 94, 96, 97, 98, 99, 100, 101], "includ": [0, 1, 7, 8, 14, 15, 16, 103, 107, 113, 119, 163], "inclus": [15, 110], "incom": [40, 80], "incorpor": [12, 59], "increas": [26, 27, 28, 30, 105, 161, 171], "independ": [26, 27, 28, 71, 72, 73, 74, 75, 94, 119], "index": [105, 126, 127, 166], "indic": [15, 16, 42, 46, 83, 86, 96, 104, 114], "individu": [16, 84, 94], "induc": [22, 62], "inf": 153, "infer": [16, 106], "infin": [10, 12], "inform": [0, 13, 106], "infti": 8, "initi": [13, 15, 16, 67, 68, 69, 78, 80, 82, 83, 84, 85, 86, 88, 89, 90, 94, 103, 109, 112, 113, 127, 128, 129, 130, 131, 158], "inner": [0, 117, 132], "input": [0, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 106, 107, 113, 114, 115, 117, 118, 119, 123, 126, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171], "input1": 78, "input2": 78, "input_": [17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57], "input_1": 38, "input_2": 38, "input_data": [58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 96, 97, 98, 99, 100, 101], "input_s": [64, 83, 86], "input_tensor": [0, 13, 16, 24, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103], "insid": [104, 106], "insight": 0, "inspect": [14, 15, 16], "instabl": 9, "instal": 0, "instanc": [0, 14, 15, 16, 49, 91, 92, 93, 94, 158, 165, 169], "instance_norm": [37, 48, 91, 92, 93], "instancenorm1d": [77, 95], "instancenorm1dmodel": 91, "instancenorm2d": [77, 95], "instancenorm3d": [77, 95], "instead": [0, 16, 106, 107], "int": [7, 8, 13, 15, 24, 26, 27, 28, 30, 50, 51, 52, 53, 55, 56, 57, 64, 67, 68, 69, 78, 80, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 109, 110, 111, 112, 114, 126, 127, 128, 130, 137, 143, 144, 145, 152, 156, 157, 158, 159, 163, 165, 166, 167, 168, 169, 170], "integ": [7, 26, 27, 28, 67, 68, 69, 94, 97, 98, 99, 100, 101, 107, 110, 111, 113, 128, 130, 144, 152, 156, 157, 163, 165, 166, 169], "integr": [1, 15, 16, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 78, 80, 96, 97, 98, 99, 100, 101], "intend": 13, "intens": 9, "intent": 107, "interact": [38, 78, 103, 113], "interfac": 14, "interfer": [104, 106], "intermedi": 9, "intern": [16, 83, 86, 103], "interpret": [24, 64, 107, 159], "interv": 109, "introduc": [21, 59, 61, 63, 65, 71, 72, 73, 74, 75], "introspect": 16, "intuit": [0, 103], "inv": 5, "inv_a": 6, "invari": [97, 100], "invers": [0, 3, 6, 7, 9, 134, 135, 136], "invert": [3, 6, 7, 11], "involv": [2, 3, 4, 6, 9, 10, 12, 17, 18, 20, 21, 22, 23, 25, 38, 40, 67, 68, 69, 78, 80, 107, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 131, 141, 142, 143, 145, 148, 150, 163, 165, 169], "is_leaf": 114, "issu": [62, 88, 89, 90], "item": 85, "iter": [13, 14], "ith": [24, 64], "its": [7, 9, 13, 26, 27, 28, 30, 59, 61, 99, 100, 101, 103, 104, 105, 106, 130, 143, 145, 158, 166], "itself": [2, 7], "j": [24, 64, 88, 89, 90, 91, 92, 93, 96, 97, 99, 100, 168], "jk": 118, "join": 159, "k": [7, 26, 67, 83, 89, 90, 92, 93, 96, 99, 100, 117, 118, 126, 127, 159], "k_d": [28, 69, 98, 101], "k_h": [27, 28, 68, 69, 97, 98, 101], "k_w": [27, 28, 68, 69, 97, 98, 101], "keep": [14, 61, 106, 166], "keep_grad": [15, 109, 110, 111, 114, 126, 127, 128, 129, 130, 131, 158], "keep_var": 14, "keepdim": [143, 144, 145, 152, 157], "kei": [14, 16], "kept": [144, 152, 157], "kernel": [26, 27, 28, 30, 51, 52, 53, 55, 56, 57, 67, 68, 69, 97, 98, 101], "kernel_s": [16, 51, 52, 53, 55, 56, 57, 67, 68, 69, 89, 90, 96, 97, 98, 99, 100, 101], "keyerror": 14, "keyword": [14, 79], "kj": [117, 119], "kroneck": [24, 64], "kwarg": [14, 79], "l": [2, 9, 26, 33, 51, 55, 71, 72, 73, 74, 75, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94], "l_": [26, 51, 55, 67, 96, 99], "l_out": [26, 51, 55], "label": [82, 83, 86], "lambda": [4, 22, 62], "lambda_1": 4, "lambda_2": 4, "lambda_i": 4, "lambda_n": 4, "languag": [67, 78, 96, 99], "larg": [9, 84, 103, 106], "larger": [26, 27, 28, 30, 120, 163], "largest": 143, "last": [24, 50, 64, 118, 119, 159], "layer": [0, 14, 16, 24, 40, 47, 49, 50, 64, 67, 68, 69, 78, 79, 80, 86, 94, 96, 97, 98, 99, 100, 101, 103, 113, 163], "layer_norm": [37, 48, 94], "layer_sequ": 16, "layernorm": [77, 95], "layernormmodel": 94, "lead": [16, 59, 91, 92, 93, 94, 113], "leaf": 114, "leaki": [20, 60], "leaky_relu": [19, 37, 60], "leakyrelu": [66, 77], "learn": [0, 7, 9, 21, 24, 58, 60, 61, 64, 67, 68, 69, 72, 73, 74, 75, 78, 80, 103, 105, 112], "learnabl": [13, 14, 15, 47, 49, 50, 67, 68, 69, 78, 80, 88, 89, 90, 91, 92, 93, 94, 103], "least": [9, 10, 12, 155], "left": [7, 8, 9, 12, 18, 24, 59, 64, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 99, 100, 101], "length": [26, 33, 51, 55, 67, 79, 88, 91, 96, 99, 163], "leq": [84, 124, 137], "less": [17, 20, 43, 58, 60, 83, 84, 86, 137], "let": 4, "level": 0, "leverag": [11, 103], "librari": [0, 1, 14, 103, 107, 113, 114], "lightweight": 0, "like": [0, 13, 14, 16, 26, 62, 71, 88, 89, 90, 91, 92, 93, 104, 105, 107, 158], "likelihood": [46, 83, 86], "limit": 137, "linalg": [0, 5], "linalgerror": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12], "linear": [0, 1, 2, 9, 10, 11, 16, 17, 18, 20, 21, 22, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 71, 72, 73, 78, 79, 82, 83, 84, 85, 86, 88, 91, 94, 96, 97, 98, 99, 100, 101, 127], "linearli": 84, "list": [13, 15, 50, 79, 94, 107, 110, 114, 126, 128, 129, 130, 131, 156, 166, 167, 170], "liter": [41, 42, 43, 45, 46, 67, 68, 69, 82, 83, 84, 85, 86], "ln": 124, "load": [13, 14, 15], "load_state_dict": 14, "local": [30, 67], "log": [46, 82, 83, 86, 132], "log_softmax": 86, "logarithm": [124, 141, 142], "logic": 103, "logit": [24, 64, 83], "logsoftmax": [83, 86], "long": 156, "loss": [0, 9, 16, 24, 41, 42, 43, 45, 46, 58, 59, 60, 61, 62, 63, 64, 65, 71, 72, 73, 74, 75, 79, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94], "low": [0, 110], "lower": 2, "lowest": 110, "lu": 6, "lucid": [5, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 108, 132, 162], "m": [16, 97, 98, 100, 101, 127], "machin": [0, 9, 105, 112], "mai": [0, 4, 6, 9, 84, 106, 113], "main": [0, 10, 126, 127], "maintain": [9, 13, 14, 16, 22, 58, 59, 62, 71, 72, 73, 74, 75, 88, 89, 90, 91, 92, 93], "make": [0, 16, 63, 83, 84, 94, 97, 100, 103, 105, 113, 114, 119], "manag": [0, 14, 16, 103, 104, 106, 113], "manhattan": 8, "manipul": 0, "manner": 16, "manual": [41, 42, 46, 82, 83, 86, 106], "map": [14, 23, 25, 63, 65], "mask": [13, 71, 72, 73, 74, 75], "match": [11, 14, 16, 41, 43, 45, 50, 141, 165, 166, 169, 170], "math": [138, 148, 153], "mathbf": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 20, 21, 22, 23, 24, 25, 38, 40, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 117, 118, 119, 123, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171], "mathcal": [71, 72, 73, 74, 75, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94], "mathemat": 6, "mathrm": 9, "matmul": 132, "matric": [1, 3, 4, 6, 9, 11, 12, 117, 118, 119, 127], "matrix": [0, 1, 2, 3, 4, 6, 7, 9, 10, 11, 12, 30, 38, 79, 80, 103, 117], "matrix_pow": 5, "max": [8, 21, 55, 56, 57, 61, 99, 100, 101, 120, 132, 137], "max_pool": [99, 100, 101], "max_pool1d": [37, 54], "max_pool2d": [37, 54], "max_pool3d": [37, 54], "max_valu": 137, "maximum": [8, 61, 99, 100, 101, 132, 137, 143], "maxpool1d": [77, 102], "maxpool1dmodel": 99, "maxpool2d": [16, 68, 77, 102], "maxpool2dmodel": 100, "maxpool3d": [69, 77, 102], "maxpool3dmodel": 101, "mean": [10, 13, 22, 26, 27, 28, 31, 41, 42, 43, 45, 46, 47, 49, 58, 59, 60, 61, 62, 63, 65, 69, 71, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 104, 111, 132, 137, 141, 142, 143, 145, 148, 150, 152, 155, 156, 157], "meaning": [16, 107], "measur": [82, 83, 85, 86], "mechan": [0, 38], "membership": 82, "memori": 106, "method": [0, 1, 6, 16, 41, 42, 43, 45, 46, 82, 83, 84, 85, 86, 113], "middl": 105, "might": 103, "min": [121, 132, 137], "min_valu": 137, "mind": [0, 16, 106], "minim": [0, 16, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94], "minimalist": 0, "minimum": [132, 137, 145], "minu": 63, "mirror": [129, 131], "mismatch": [14, 103], "miss": [14, 103], "mitig": [20, 58, 60, 62, 88, 89, 90], "mode": [0, 35, 47, 49, 71, 72, 73, 74, 75, 163], "model": [0, 7, 10, 12, 13, 14, 15, 16, 24, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 96, 97, 98, 99, 100, 101, 106, 113], "modif": [16, 106], "modifi": [71, 104, 106, 112, 161, 171], "modul": [0, 13, 15, 16, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 107, 113], "modular": [0, 14, 16, 103], "moduledict": 16, "modulelist": 16, "momentum": [47, 49, 88, 89, 90, 91, 92, 93], "moor": 9, "more": [0, 4, 16, 58, 72, 73, 74, 75, 103, 111, 119, 155, 168], "most": [1, 100], "mse": [43, 45, 84, 85], "mse_loss": [37, 44], "mseloss": [77, 87], "mu": [88, 89, 90, 91, 92, 93, 94, 157], "mu_i": [91, 92, 93], "mul": 132, "multi": [24, 42, 46, 64, 83, 86, 144, 152, 157], "multidimension": 109, "multipl": [0, 1, 7, 11, 16, 30, 71, 72, 73, 74, 75, 83, 86, 103, 105, 109, 110, 111, 117, 122], "multipli": [7, 40, 80, 122, 123], "must": [2, 3, 4, 6, 7, 10, 11, 12, 14, 16, 50, 71, 72, 73, 74, 75, 86, 106, 155, 159, 161, 163, 165, 166, 168, 169, 171], "mymodel": [14, 15, 103], "n": [7, 8, 16, 26, 27, 28, 30, 33, 34, 35, 38, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 67, 68, 69, 74, 75, 78, 80, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 127, 144, 155, 157], "n1": 8, "name": [14, 16, 107], "nan": [10, 12], "natur": [9, 67, 78, 96, 99, 124, 141, 142], "ndarrai": [13, 15, 107, 114, 126, 129, 131, 158], "ndim": [10, 12, 15, 114], "ne": 7, "necessari": [9, 106, 161, 171], "need": [24, 78, 103, 106], "neg": [7, 9, 12, 17, 46, 58, 60, 61, 62, 83, 86, 159], "negative_slop": [20, 60], "neq": 8, "nest": [16, 103], "network": [0, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 38, 40, 47, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 96, 97, 98, 99, 100, 101, 103, 113, 114, 128, 130, 143, 145, 163], "neural": [0, 13, 14, 15, 16, 18, 21, 22, 23, 24, 25, 26, 27, 28, 38, 40, 47, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 96, 97, 98, 99, 100, 101, 103, 113, 114, 128, 130, 143, 145, 163], "neuralnetwork": 61, "neuron": 60, "new": [14, 15, 17, 18, 20, 21, 22, 23, 25, 38, 40, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 156, 158, 159, 161, 163, 165, 166, 168, 169, 170, 171], "next": 16, "nll": 46, "nll_loss": [37, 44], "nllloss": [77, 87], "nn": [0, 19, 29, 36, 39, 44, 48, 54, 66, 70, 76, 77, 81, 87, 95, 102], "no_grad": 104, "node": 114, "nois": [12, 113], "non": [4, 7, 9, 12, 18, 20, 21, 58, 59, 60, 61, 62, 63, 65, 71, 72, 73, 74, 75, 106, 124, 137], "none": [14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 38, 40, 41, 42, 43, 45, 46, 47, 49, 50, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 105, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 127, 129, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171], "norm": [1, 5], "normal": [18, 22, 24, 25, 47, 49, 50, 59, 62, 64, 71, 88, 89, 90, 91, 92, 93, 94, 111, 113], "normalized_shap": [50, 94], "note": [16, 26, 71], "noth": [31, 32, 33, 34], "notimplementederror": 14, "notin": 137, "np": [13, 15, 83, 86, 107, 114, 119, 126, 127, 128, 130, 131, 142, 158], "num_class": [64, 83, 86], "num_featur": [16, 88, 89, 90, 91, 92, 93], "number": [3, 4, 6, 9, 11, 12, 15, 16, 26, 27, 28, 30, 33, 34, 35, 38, 40, 42, 46, 47, 49, 63, 67, 68, 69, 78, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101, 109, 112, 114, 124, 127, 143, 144, 145, 156, 157, 159, 161, 163, 165, 166, 167, 169, 171], "numer": [6, 9, 41, 42, 47, 49, 50, 82, 83, 88, 89, 90, 91, 92, 93, 94, 107, 116, 128, 130], "numpi": [0, 13, 15, 83, 86, 107, 114, 119, 126, 127, 128, 130, 142, 155, 158, 163, 165, 169], "o": [98, 101, 128, 129], "object": [1, 14, 85, 103, 106, 115, 116, 120, 121, 122, 125, 158], "occur": [106, 159], "occurr": 7, "odot": [71, 72, 73, 74, 75], "off": 104, "offer": [0, 103, 113], "offset": 127, "often": [7, 26, 27, 28, 30, 83, 86, 130], "onc": 106, "one": [16, 24, 26, 40, 51, 55, 62, 63, 64, 67, 73, 83, 86, 88, 91, 96, 99, 105, 107, 111, 125, 129, 143, 145, 160, 164, 168], "ones": [38, 40, 67, 68, 69, 80, 88, 89, 90, 91, 92, 93, 94, 103, 127, 129, 132], "ones_lik": 132, "onli": [0, 61, 71, 72, 73, 74, 75, 82, 83, 86, 88, 89, 90, 91, 92, 93, 94, 99, 100, 101, 104, 137, 143, 145, 155, 163, 164, 166, 167], "onto": [10, 12], "oper": [0, 1, 6, 9, 13, 14, 17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 30, 35, 38, 40, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 109, 110, 111, 112, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 128, 130, 141, 142, 143, 144, 145, 148, 150, 152, 155, 157, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171], "operatornam": [7, 9], "optim": [0, 1, 7, 9, 10, 12, 13, 15, 30, 67, 68, 69, 103, 106], "option": [8, 12, 13, 14, 15, 17, 20, 24, 27, 28, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 60, 64, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 109, 110, 111, 114, 126, 127, 128, 129, 130, 131, 143, 144, 145, 152, 156, 157, 158, 159, 165, 167, 168], "ord": 8, "order": [8, 12, 16, 156], "ordered_dict": 16, "ordereddict": [14, 16], "organ": 16, "origin": [31, 65, 163, 164, 165, 166, 169, 170], "orthogon": [9, 10, 12], "orthonorm": 10, "other": [0, 6, 13, 14, 16, 71, 103, 104, 106, 113, 114, 128, 130, 155], "otherwis": [17, 20, 21, 22, 24, 58, 60, 61, 62, 64, 72, 73, 74, 75, 84, 96, 97, 98, 99, 100, 101, 120, 121, 143, 145], "otim": [9, 38, 78], "out": [17, 18, 20, 21, 22, 23, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 40, 47, 49, 50, 51, 52, 53, 55, 56, 57, 67, 68, 69, 71, 72, 73, 74, 75, 96, 97, 98, 99, 100, 101, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171], "out_channel": [16, 67, 68, 69, 89, 90, 96, 97, 98, 99, 100, 101, 103], "out_featur": [16, 38, 40, 58, 59, 60, 61, 62, 63, 64, 65, 68, 69, 71, 72, 73, 78, 80, 82, 83, 84, 85, 86, 88, 91, 94, 96, 97, 98, 99, 100, 101], "outer": 132, "outlier": [43, 84], "output": [0, 7, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 38, 40, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 130, 131, 141, 142, 143, 144, 145, 148, 150, 152, 155, 156, 157, 163, 165, 169], "output_height": 30, "output_lay": 16, "output_width": 30, "over": [1, 14, 24, 64, 67, 68, 69, 83, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 109, 143, 144, 145, 152, 155, 157], "overdetermin": 9, "overfit": [32, 35, 72, 73, 74, 75], "overridden": 14, "own": [26, 27, 28, 103], "p": [8, 9, 15, 31, 32, 33, 34, 35, 71, 72, 73, 74, 75, 96, 99, 100], "p_d": [98, 101], "p_h": [97, 98, 101], "p_w": [97, 98, 101], "packag": [1, 103, 112, 113], "pad": [16, 26, 27, 28, 30, 51, 52, 53, 55, 56, 57, 67, 68, 69, 89, 90, 96, 97, 98, 99, 100, 101, 162], "pad_after_dim1": 163, "pad_after_dim2": 163, "pad_before_dim1": 163, "pad_before_dim2": 163, "pad_width": 163, "padding_height": 30, "padding_width": 30, "pair": 38, "param": [14, 15], "param1": 14, "paramet": [0, 14, 103, 107, 113], "parent": 103, "part": [13, 14, 103, 104, 106, 113, 126, 127, 128, 129, 130, 131], "partial": [2, 3, 4, 6, 7, 8, 9, 11, 12, 17, 18, 20, 21, 22, 23, 24, 25, 38, 40, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171], "particip": 15, "particularli": [0, 9, 16, 24, 40, 64, 80, 83, 86, 91, 92, 93, 94, 104], "pass": [0, 9, 14, 15, 16, 58, 59, 60, 61, 62, 63, 65, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 96, 97, 98, 99, 100, 101, 103, 107, 114, 144, 152, 155, 156, 157, 159, 161, 164, 166, 167, 171], "patch": [30, 97], "pattern": [21, 61, 67, 68, 69], "penros": 9, "per": [91, 92, 93, 94], "perform": [0, 1, 2, 9, 14, 15, 18, 26, 27, 28, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 104, 106, 112, 113, 115, 116, 119, 122, 125, 141, 143, 145, 152, 156], "permut": 156, "persist": [13, 109, 110, 111], "perturb": [4, 11, 12], "phi": [18, 59], "pi": [18, 59, 138, 148, 153], "pinv": 5, "pipelin": 113, "placehold": [14, 79], "plai": [107, 113], "point": 104, "pool": [51, 52, 53, 55, 56, 57, 68, 69, 96, 97, 98, 99, 100, 101, 143, 145], "pool1": 16, "pool2": 16, "poorli": 6, "popul": 14, "pose": 9, "posit": [2, 7, 14, 16, 58, 60, 61, 62, 96, 97, 98, 99, 100, 101, 105, 124, 165, 169], "possibl": 0, "potenti": [9, 79, 167], "power": [0, 7, 105, 106, 132], "practic": [9, 83, 86], "preced": [15, 114], "predefin": 62, "predict": [82, 83, 85, 86], "prefix": 14, "prepar": [105, 163, 165, 169], "prepend": 14, "preprocess": [30, 113], "present": [82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 97], "preserv": [31, 71, 126, 127, 128, 129, 130, 131, 144, 152, 157], "prevent": [16, 32, 35, 72, 73, 74, 75, 82, 83, 106], "previou": 106, "primari": [0, 107], "primarili": 16, "print": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171], "probabilist": 113, "probabl": [18, 24, 31, 32, 33, 34, 35, 41, 59, 64, 71, 72, 73, 74, 75, 82, 83, 86], "problem": [9, 10, 12, 20, 58, 60], "process": [7, 10, 12, 26, 27, 28, 49, 62, 65, 67, 69, 78, 88, 89, 90, 91, 92, 93, 94, 96, 98, 99, 101, 107], "produc": [67, 68, 69, 112, 113], "product": [0, 10, 12, 63, 78, 94, 103, 117, 118, 122, 123], "program": [104, 113], "project": [10, 12], "projector": 9, "promin": [96, 98, 99, 100, 101], "promot": [16, 83, 86, 103], "propag": [3, 4, 6, 9, 10, 11, 12, 14, 16, 38, 40, 97, 98, 117, 118, 119, 123, 143, 145, 163, 166, 170], "properli": [24, 64, 103], "properti": [1, 3, 6, 7, 18, 22, 31, 59, 62, 71], "proport": 157, "provid": [0, 1, 14, 18, 40, 82, 83, 84, 86, 96, 97, 98, 99, 100, 101, 103, 104, 106, 107, 112, 113, 114, 119, 129, 143, 145, 156, 158, 165, 167, 169], "pseudo": [6, 9], "purpos": [109, 128, 130], "python": 107, "pytorch": 158, "q": 10, "qr": 5, "quad": [9, 82, 83, 84, 85, 86, 99, 100, 101, 115, 116, 120, 121, 122, 125], "quadrat": 84, "quotient": 116, "r": 10, "rais": [14, 103, 124], "rand": [108, 113], "randint": [108, 113], "randn": [103, 108, 112, 113], "random_integ": 113, "random_tensor": 113, "randomli": [31, 32, 33, 34, 35, 71, 72, 73, 74, 75], "rang": [1, 23, 25, 26, 27, 42, 46, 63, 65, 110, 134, 135, 137], "rank": 9, "rather": 166, "ravel": 162, "raw": [24, 64, 83, 107], "re": [15, 106], "readabl": [16, 103, 107], "readi": 0, "real": [9, 12, 63], "rearrang": 30, "receiv": [99, 100, 101, 163], "reciproc": [9, 132, 142, 150], "recognit": 68, "rectangular": 127, "rectifi": [20, 21, 60, 61], "recurr": 94, "recurs": 14, "reduc": [88, 89, 90, 91, 92, 93, 96, 97, 98, 99, 100, 101, 106, 107, 143, 144, 145, 152, 157], "reduct": [12, 41, 42, 43, 45, 46, 82, 83, 84, 85, 86, 143, 145], "refer": [0, 14, 113, 126, 127, 159], "reflect": 104, "regardless": [9, 164], "region": [28, 163], "regist": [13, 14, 15, 103], "register_buff": 13, "register_paramet": 14, "registr": [14, 103], "regress": [45, 84, 85], "regular": [9, 35, 72, 73, 74, 75], "relat": [106, 127, 128], "reli": 106, "reliant": [72, 73, 74, 75], "relu": [0, 16, 17, 19, 20, 37, 58, 60, 66, 67, 68, 69, 77, 78, 79, 80], "relu1": 16, "relu2": 16, "relu3": 16, "remain": [13, 50, 71, 72, 73, 74, 75], "rememb": 113, "remov": 167, "rep": 169, "repeat": [162, 169], "repetit": [165, 169], "replac": 113, "repres": [6, 8, 12, 14, 15, 16, 38, 40, 47, 49, 50, 67, 68, 69, 78, 80, 83, 86, 94, 107, 115, 116, 122, 125, 126, 144, 155, 156, 157], "represent": [97, 100], "reproduc": [109, 110, 111, 112, 113], "requir": [0, 13, 16, 17, 18, 20, 21, 22, 23, 25, 38, 40, 79, 83, 86, 103, 104, 106, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 154, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171], "requires_grad": [13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 30, 38, 40, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171], "rescal": [41, 42, 46, 82, 83, 86], "research": 103, "reset": [15, 112, 114], "reshap": [0, 40, 68, 69, 105, 107, 162, 164], "resourc": 106, "respect": [2, 3, 4, 6, 7, 8, 9, 10, 12, 13, 16, 17, 18, 20, 21, 22, 23, 24, 25, 38, 40, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 137, 141, 142, 143, 144, 145, 148, 150, 152, 155, 156, 157, 163, 165, 169], "restor": 106, "restructur": 166, "result": [2, 6, 7, 9, 14, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 38, 40, 51, 52, 53, 55, 56, 57, 64, 103, 104, 106, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 145, 146, 147, 148, 149, 150, 151, 153, 154, 155, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171], "retain": [15, 114, 130, 143, 144, 145, 152, 157], "return": [0, 13, 14, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 96, 97, 98, 99, 100, 101, 103, 107], "reusabl": [16, 103], "revers": [0, 16, 156], "revert": 106, "right": [7, 8, 9, 11, 12, 18, 24, 59, 64, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 99, 100, 101], "risk": 107, "robust": [71, 72, 73, 74, 75, 84, 103], "role": [107, 113], "root": 150, "rout": [99, 100, 101], "routin": 0, "row": [3, 4, 6, 11, 40, 127, 171], "rule": [6, 7, 105, 115, 116, 120, 121, 122, 124, 125], "run": [0, 13, 47, 49, 88, 89, 90, 91, 92, 93, 106, 112, 113], "running_mean": [13, 47, 49, 88, 89, 90, 91, 92, 93], "running_var": [47, 49, 88, 89, 90, 91, 92, 93], "runtim": [16, 103], "s_d": [98, 101], "s_h": [97, 98, 101], "s_w": [97, 98, 101], "same": [3, 4, 6, 7, 11, 24, 31, 32, 33, 34, 35, 47, 49, 50, 67, 68, 69, 71, 72, 73, 74, 75, 79, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 112, 113, 119, 129, 131, 141, 143, 144, 145, 159, 161, 164, 166, 167, 168, 171], "sampl": [0, 71, 72, 73, 74, 75, 78, 80, 83, 86, 94, 111, 113], "satisfi": [2, 4, 11], "satur": 58, "save": [13, 15, 106], "scalabl": 103, "scalar": [3, 8, 41, 42, 43, 45, 46, 107], "scale": [4, 9, 17, 22, 24, 47, 49, 50, 58, 60, 62, 63, 64, 65, 71, 72, 73, 74, 75, 83, 88, 89, 90, 91, 92, 93, 94, 107, 113, 157], "scenario": 94, "scientif": 105, "score": [24, 83], "scratch": 0, "script": 113, "seamless": [103, 113], "seamlessli": [1, 15, 16, 103, 107], "second": [4, 38, 78, 105, 115, 117, 118, 119, 120, 121, 122, 123, 124, 125, 161], "section": 119, "see": [0, 119], "seed": [108, 109, 110, 111, 113], "select": [99, 101, 152], "self": [0, 13, 14, 15, 22, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 78, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 96, 97, 98, 99, 100, 101, 103], "selu": [19, 31, 37, 66, 71, 77], "selunetwork": 62, "sensit": [43, 84, 88, 89, 90], "separ": [26, 27, 28, 91, 92, 93], "sequenc": [7, 26, 159, 161, 163, 165, 168, 169, 171], "sequenti": [26, 79], "seri": [26, 67, 96, 99], "serial": [13, 14], "serv": [14, 16, 103], "set": [15, 26, 27, 28, 60, 61, 62, 67, 68, 69, 71, 74, 75, 78, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 109, 110, 111, 112, 113, 114, 130, 131, 137, 143, 145, 158], "setup": 0, "sever": [9, 67, 68, 69, 96, 97, 98, 99, 100, 101, 106], "sgd": 0, "sgn": 8, "shape": [0, 3, 4, 6, 7, 9, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 105, 107, 109, 110, 111, 113, 114, 117, 127, 128, 129, 130, 131, 137, 142, 143, 144, 145, 148, 150, 152, 156, 157, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 171], "shapelik": 110, "shift": [47, 49, 50, 88, 89, 90, 91, 92, 93, 94], "shorthand": 119, "should": [13, 106, 109, 110, 111, 134, 135, 155, 163], "show": 104, "showcas": 0, "shown": 112, "side": [11, 16, 26, 27, 28, 51, 52, 53, 55, 56, 57, 67, 68, 69, 96, 97, 98, 99, 100, 101, 106], "sigma": [9, 63, 88, 89, 90, 91, 92, 93, 94, 156], "sigma_i": 9, "sigmoid": [19, 37, 66, 77, 82], "sigmoidnetwork": 63, "sign": [7, 84, 132], "signal": [67, 68, 69, 88, 91, 96, 97, 98, 99, 100, 101], "signific": 106, "sim": [71, 72, 73, 74, 75], "similar": [0, 119, 142, 158, 163], "similarli": [12, 155], "simpl": [0, 16, 26, 27, 28, 38, 40, 51, 52, 53, 55, 56, 57, 59, 61, 62, 63, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 117, 118, 123], "simplebinaryclassificationmodel": 82, "simpleclassificationmodel": [83, 86], "simplegelumodel": 59, "simpleleakyrelumodel": 60, "simplemodel": [0, 80], "simpleregressionmodel": 85, "simplerelumodel": 61, "simpleselumodel": 62, "simplesigmoidmodel": 63, "simpletanhmodel": 65, "simpli": [104, 155, 156, 166], "simplic": 61, "simplifi": 16, "sin": [132, 138], "sinc": [7, 10, 26, 27, 28, 104, 106, 111], "sine": [135, 148, 149], "singl": [7, 10, 12, 24, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 83, 94, 97, 98, 99, 100, 101, 107, 159, 167], "singleton": 94, "singular": [3, 6, 7, 9, 11, 12], "sinh": [132, 139, 154], "size": [12, 15, 26, 27, 28, 30, 33, 34, 35, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 67, 68, 69, 78, 80, 82, 83, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 110, 113, 114, 143, 144, 145, 152, 157, 159, 161, 167, 170, 171], "skip": 106, "slice": [38, 155], "slide": [30, 96, 98, 99, 101], "slope": [20, 58, 60], "small": [9, 20, 41, 42, 47, 49, 50, 60, 62, 82, 83, 84, 88, 89, 90, 91, 92, 93, 94, 97, 100], "smaller": [16, 103, 121], "smallest": 145, "smooth": [18, 58, 59], "so": 103, "softmax": [19, 37, 66, 77, 83], "softmaxmodel": 64, "solut": [9, 11], "solv": [1, 2, 5, 9, 10, 12], "solver": 1, "some": [17, 32, 71, 72, 73, 88, 89, 90, 91, 92, 93, 106, 107], "sometim": 105, "sophist": 16, "sourc": 113, "space": [4, 10, 12, 26, 27, 28, 30, 67, 68, 69], "spatial": [68, 69, 88, 89, 90, 91, 92, 93, 94, 97, 98, 99, 100, 101], "spatio": 69, "special": [0, 9, 13, 14, 15, 71, 113], "specif": [0, 16, 71, 72, 73, 74, 75, 91, 92, 93, 103, 104, 113, 143, 145, 165, 169], "specifi": [0, 8, 24, 30, 35, 41, 42, 43, 45, 46, 50, 64, 67, 68, 69, 82, 83, 84, 85, 86, 94, 97, 98, 99, 100, 101, 107, 109, 110, 111, 112, 124, 126, 127, 128, 130, 131, 137, 143, 144, 145, 152, 156, 157, 158, 159, 161, 163, 165, 166, 167, 168, 169, 170, 171], "speech": 91, "split": [159, 161, 171], "sqrt": [18, 59, 88, 89, 90, 91, 92, 93, 94, 132, 134, 135], "squar": [2, 3, 4, 6, 7, 9, 10, 11, 12, 43, 45, 84, 85, 132, 150], "squeez": 162, "stabil": [6, 9, 41, 42, 47, 49, 50, 82, 83, 88, 89, 90, 91, 92, 93, 94], "stabl": [71, 83], "stack": [16, 161, 162, 171], "standard": [18, 20, 58, 59, 60, 71, 111, 113, 119], "state": [13, 14, 15, 16, 104, 106, 112], "state_dict": [14, 15], "static": 16, "statist": [9, 31, 47, 49], "step": [15, 30, 106], "stochast": 0, "storag": 114, "store": [13, 14, 15, 106, 114], "str": [14, 16, 41, 42, 43, 45, 46], "straightforward": [104, 115], "strict": 14, "stride": [16, 26, 27, 28, 30, 51, 52, 53, 55, 56, 57, 67, 68, 69, 96, 97, 98, 99, 100, 101], "stride_height": 30, "stride_width": 30, "string": [14, 16, 67, 68, 69], "structur": [0, 10, 13, 14, 103, 107, 127], "style": [49, 91, 92], "sub": [16, 103, 132], "sub_tensor": 114, "subclass": [0, 14, 15, 103], "submodul": [14, 103], "subsequ": [16, 113], "subset": [72, 73], "subtract": [0, 125], "suitabl": [84, 109], "sum": [8, 16, 24, 41, 42, 43, 45, 46, 64, 82, 83, 84, 85, 86, 115, 118, 123, 132, 155, 157, 159, 161, 165, 169, 171], "sum_": [7, 24, 64, 82, 83, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 117, 118, 144, 152, 155, 157, 165], "sum_i": [8, 123], "sum_j": 123, "sum_k": 119, "summar": [96, 97, 98], "summat": 7, "super": [0, 13, 14, 15, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 78, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 96, 97, 98, 99, 100, 101, 103], "support": [0, 1, 7, 8, 9, 10, 12, 16, 103, 113, 114, 115, 116, 119, 120, 121, 122, 124, 125, 126, 127, 137, 142, 144, 148, 150, 152, 155, 156, 157, 159, 166], "sure": 103, "svd": [5, 9], "symmetr": [2, 65], "syntax": 119, "system": [1, 2, 9, 10, 11, 104], "t": [9, 106, 114, 119, 158], "t1": 158, "t2": 158, "tailor": 103, "take": [10, 96, 97, 98, 99, 100, 101, 106], "taken": 155, "tan": 132, "tangent": [25, 65, 136, 153, 154], "tanh": [16, 18, 19, 37, 59, 66, 77, 132], "tanhnetwork": 65, "target": [16, 41, 42, 43, 45, 46, 82, 83, 84, 85, 86], "target_tensor": [82, 83, 84, 85, 86], "task": [0, 1, 23, 24, 27, 38, 41, 42, 45, 46, 63, 64, 67, 68, 69, 82, 83, 84, 85, 86, 91, 92, 93, 96, 98, 99, 101, 105, 113, 127], "techniqu": [2, 6, 47, 71, 72, 73, 74, 75, 91, 92, 93], "tempor": [67, 69, 98, 101], "temporarili": 106, "tensor": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 106, 107, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171], "term": [9, 38], "text": [3, 7, 8, 17, 20, 21, 22, 24, 26, 27, 28, 51, 52, 53, 55, 56, 57, 58, 60, 61, 62, 64, 67, 68, 69, 71, 72, 73, 74, 75, 82, 83, 84, 85, 86, 96, 97, 98, 99, 100, 101, 110, 115, 116, 118, 120, 121, 122, 124, 125, 133, 137, 143, 144, 145, 147, 152, 157, 159, 161, 163, 164, 165, 166, 167, 169, 170, 171], "th": [38, 82, 83, 85, 86, 91, 92, 93, 120, 121, 124], "than": [17, 20, 43, 58, 60, 84, 137, 155, 163, 168], "thei": [0, 12, 13, 16, 107, 166], "them": [14, 30, 105, 159, 168], "therebi": [71, 97, 98, 100, 101], "thi": [0, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 21, 23, 24, 25, 26, 27, 28, 30, 38, 40, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 110, 111, 112, 113, 114, 118, 119, 123, 128, 129, 130, 131, 137, 141, 142, 143, 144, 145, 148, 150, 152, 155, 156, 157, 158, 163, 165, 166], "thing": 106, "those": 0, "three": [12, 28, 53, 57, 69, 75, 90, 93, 98, 101], "threshold": [9, 43, 84], "through": [0, 4, 9, 10, 12, 16, 38, 40, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 88, 89, 90, 91, 94, 96, 97, 98, 99, 100, 101, 111, 117, 118, 123, 164, 166, 167, 170], "throughout": 22, "tile": 162, "time": [7, 26, 60, 62, 67, 96, 97, 98, 99, 100, 101, 106, 165, 169], "togeth": 16, "tool": [0, 103, 105, 113], "top": [2, 3, 4, 10, 12, 38, 40, 67, 68, 69, 78, 80], "torch": 158, "total": [15, 114, 166], "trace": [1, 132], "track": [0, 88, 89, 90, 91, 92, 93, 103, 104, 106, 109, 110, 111, 126, 127, 128, 129, 130, 131, 158], "track_running_stat": [88, 89, 90, 91, 92, 93], "trail": 50, "train": [0, 13, 14, 16, 24, 31, 32, 33, 34, 35, 47, 49, 59, 60, 62, 63, 64, 65, 71, 72, 73, 74, 75, 88, 89, 90, 91, 92, 93, 103, 106], "trainabl": [88, 89, 90, 91, 92, 93, 103], "transfer": [49, 91, 92], "transform": [0, 4, 38, 40, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 105], "transit": 84, "translat": [97, 100], "transpos": [0, 2, 132], "treat": [13, 94, 103], "triangular": [2, 10], "true": [12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 30, 31, 32, 33, 34, 35, 38, 40, 47, 49, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 109, 110, 111, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171], "tupl": [4, 10, 12, 14, 15, 26, 27, 28, 30, 50, 51, 52, 53, 55, 56, 57, 67, 68, 69, 79, 94, 96, 97, 98, 99, 100, 101, 107, 110, 114, 128, 130, 143, 144, 145, 152, 157, 159, 161, 163, 166, 167, 168, 170, 171], "twice": 163, "two": [0, 3, 4, 6, 7, 9, 10, 12, 26, 27, 28, 38, 52, 56, 68, 74, 78, 89, 92, 97, 100, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 155], "type": [13, 14, 15, 38, 78, 114, 126, 127, 128, 129, 130, 131, 158], "typeerror": 14, "typic": [1, 13, 24, 31, 62, 64, 86, 88, 89, 90, 91, 92, 93, 106, 107, 170], "u": [9, 12], "unchang": [13, 35, 58, 60, 61, 62, 71, 72, 73, 74, 75, 79, 164, 167], "undefin": 124, "under": 103, "underbrac": 7, "underdetermin": 9, "underli": [0, 158, 161, 164, 166, 171], "understand": [0, 16], "unexpect": [14, 16, 113], "unfold": [29, 37], "uniform": [67, 68, 69, 78, 80, 109, 110, 113], "uniformli": 109, "unintend": 106, "uniqu": [2, 9, 11], "unit": [17, 18, 20, 21, 22, 58, 59, 60, 61, 62, 71], "unless": 114, "unlik": [13, 20, 58, 60, 71, 94], "unnecessari": 106, "unpad": 163, "unsqueez": 162, "unstabl": 6, "updat": [13, 16, 71, 72, 73, 74, 75, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 103, 106], "upper": 10, "us": [0, 1, 2, 4, 6, 7, 9, 10, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 38, 40, 45, 47, 49, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 109, 110, 111, 113, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 141, 143, 144, 145, 152, 157, 163, 165, 167, 169, 170], "usag": [1, 16], "user": [0, 103], "usual": 83, "util": [0, 1, 103, 113], "v": [4, 9, 12, 126], "v_stack": 171, "valid": [67, 68, 69, 156], "valu": [0, 3, 7, 8, 9, 12, 14, 16, 17, 20, 23, 24, 25, 26, 27, 28, 30, 41, 42, 43, 45, 46, 47, 49, 50, 58, 60, 61, 62, 63, 65, 71, 72, 73, 74, 75, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 104, 107, 109, 110, 111, 112, 113, 126, 127, 133, 134, 135, 137, 140, 141, 142, 143, 145, 147, 148, 150, 151, 159, 163, 164, 166, 170], "valuabl": 113, "valueerror": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12], "vanish": [58, 62, 88, 89, 90], "var": 132, "variabl": [14, 16, 79, 103, 104, 106, 109], "varianc": [22, 31, 47, 49, 62, 71, 88, 89, 90, 91, 92, 93, 94, 111, 157], "variat": [91, 92, 93], "varieti": 113, "variou": [61, 113, 143, 145, 163], "vdot": 123, "vector": [4, 9, 10, 11, 12, 38, 40, 78, 80, 117, 118, 119, 123], "veri": 9, "versatil": 113, "version": [12, 123], "vertic": [168, 171], "video": [28, 35, 69, 93, 98, 101], "view": [97, 98, 99, 100, 101, 166], "vision": [27, 68, 78], "volumetr": [28, 35, 69, 93, 98, 101], "vstack": 162, "w": [27, 28, 30, 34, 35, 38, 40, 52, 53, 56, 57, 67, 68, 69, 78, 80, 89, 90, 92, 93, 98, 101], "w_": [27, 28, 52, 53, 56, 57, 68, 69, 97, 98, 100, 101], "w_out": [27, 28, 52, 53, 56, 57], "wa": [71, 72, 73, 74, 75, 106], "wai": [104, 106, 166], "want": 0, "we": [0, 105], "weight": [26, 27, 28, 38, 40, 41, 42, 46, 47, 49, 50, 67, 68, 69, 71, 72, 73, 74, 75, 78, 80, 82, 83, 86, 88, 89, 90, 91, 92, 93, 94, 103, 109, 113], "were": 16, "what": 106, "when": [0, 7, 14, 16, 17, 20, 26, 27, 28, 58, 79, 88, 89, 90, 91, 92, 93, 104, 106, 107, 113, 124], "where": [3, 4, 6, 7, 8, 9, 10, 12, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 33, 34, 35, 38, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 106, 107, 113, 115, 116, 120, 121, 122, 124, 125, 137, 141, 142, 143, 144, 145, 148, 150, 152, 155, 156, 157, 159, 163, 165, 169], "whether": [3, 14, 15, 104, 109, 110, 111, 114, 143, 144, 145, 152, 157], "which": [0, 3, 4, 6, 7, 8, 9, 10, 12, 14, 16, 20, 24, 43, 58, 59, 60, 64, 65, 71, 84, 86, 88, 89, 90, 91, 92, 93, 94, 104, 106, 107, 109, 110, 134, 135, 136, 137, 138, 139, 142, 143, 144, 145, 146, 148, 149, 150, 152, 153, 154, 155, 157, 159, 165, 166, 168, 170], "while": [0, 16, 31, 59, 61, 103, 106, 166, 168], "who": 0, "whose": [12, 129, 131, 133, 137, 141, 147], "wide": [1, 9, 21, 61, 67, 68, 83], "wider": [26, 27], "width": [27, 28, 30, 34, 35, 52, 53, 56, 57, 68, 69, 89, 90, 92, 93, 97, 98, 100, 101], "window": [51, 52, 53, 55, 56, 57, 96, 97, 98, 99, 100, 101, 143, 145], "wise": [17, 18, 20, 21, 22, 23, 24, 25, 64, 71, 72, 73, 74, 75, 103, 105, 115, 116, 119, 120, 121, 122, 124, 125, 133, 134, 135, 136, 137, 138, 139, 140, 142, 146, 147, 148, 149, 150, 151, 153, 154, 155, 161, 171], "within": [13, 16, 25, 59, 61, 62, 63, 65, 67, 68, 69, 71, 72, 73, 79, 82, 83, 84, 85, 86, 88, 89, 90, 91, 94, 96, 97, 98, 99, 100, 101, 106, 137], "without": [0, 38, 40, 67, 68, 69, 78, 80, 104, 143, 164, 166, 170], "won": 106, "work": [0, 2, 105, 107], "workflow": 113, "workload": 0, "wrap": [103, 106, 158], "wrapper": 103, "x": [0, 1, 11, 13, 14, 16, 24, 38, 40, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 109, 110, 111, 141], "x1": 78, "x2": 78, "x_": [83, 86], "x_c": [83, 86], "x_i": 82, "x_k": 83, "x\u2081": 78, "x\u2082": 78, "y": [16, 58, 59, 60, 61, 62, 63, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 109, 110, 111], "y_": [83, 86], "y_c": [83, 86], "y_i": 82, "yet": [0, 105], "yield": [14, 106], "you": [16, 103, 104, 106, 113, 127, 131, 156, 158], "your": [103, 104, 106, 113], "z": [130, 131], "zero": [7, 9, 10, 17, 20, 26, 27, 28, 31, 32, 33, 34, 35, 51, 52, 53, 55, 56, 57, 58, 60, 61, 62, 67, 68, 69, 71, 72, 73, 74, 75, 94, 96, 97, 98, 99, 100, 101, 103, 127, 131, 132, 137, 147, 163], "zero_grad": [15, 114], "zeros_lik": 132, "\u03c3\u1d62": 9}, "titles": ["Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.Sequential", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "nn.ELU", "nn.GELU", "nn.LeakyReLU", "nn.ReLU", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Tanh", "Activation Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "lucid.nn", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.types", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.diag", "lucid.eye", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.unsqueeze", "lucid.vstack"], "titleterms": {"1": 105, "1d": 105, "2": 105, "2d": 105, "3": 105, "It": [104, 106], "ab": 133, "activ": [19, 37, 66, 77], "ad": 105, "add": 115, "addit": 9, "admonit": 107, "advanc": 30, "algebra": 5, "alias": 107, "align": 105, "alpha_dropout": 31, "alphadropout": 71, "anoth": 158, "arcco": 134, "arcsin": 135, "arctan": 136, "attribut": [13, 15, 16, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 114], "avg_pool1d": 51, "avg_pool2d": 52, "avg_pool3d": 53, "avgpool1d": 96, "avgpool2d": 97, "avgpool3d": 98, "axi": 105, "backpropag": 114, "backward": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 20, 21, 22, 23, 24, 25, 38, 40, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171], "batch_norm": 47, "batchnorm1d": 88, "batchnorm2d": 89, "batchnorm3d": 90, "bceloss": 82, "benefit": 106, "bilinear": [38, 78], "binari": 132, "binary_cross_entropi": 41, "broadcast": 105, "buffer": 13, "calcul": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 20, 21, 22, 23, 24, 25, 30, 38, 40, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171], "case": 107, "choleski": 2, "class": [13, 14, 15, 16, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 114], "clip": 137, "co": 138, "compon": [0, 103], "concaten": 159, "conclus": [0, 103, 104, 105, 106, 113], "conv1d": [26, 67], "conv2d": [27, 68], "conv3d": [28, 69], "convolut": [29, 37, 70, 77], "core": 0, "cosh": 139, "creat": [15, 114, 158], "cross_entropi": 42, "crossentropyloss": 83, "cube": 140, "custom": 14, "defin": 14, "definit": 107, "det": 3, "detail": 9, "diag": 126, "dilat": 30, "div": 116, "dot": 117, "dropout": [32, 36, 37, 72, 76, 77], "dropout1d": [33, 73], "dropout2d": [34, 74], "dropout3d": [35, 75], "eig": 4, "elu": [17, 58], "exampl": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171], "exp": 141, "ey": 127, "featur": [0, 1, 113], "flatten": 160, "forward": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 20, 21, 22, 23, 24, 25, 30, 38, 40, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171], "from": 158, "function": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 104, 106, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171], "gelu": [18, 59], "gener": [108, 132], "grad_en": 104, "gradient": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 16, 17, 18, 20, 21, 22, 23, 24, 25, 38, 40, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171], "guidelin": 107, "how": [104, 106], "hstack": 161, "huber_loss": 43, "huberloss": 84, "ident": 79, "index": 114, "inner": 118, "input": 158, "instance_norm": 49, "instancenorm1d": 91, "instancenorm2d": 92, "instancenorm3d": 93, "integr": [103, 113], "inv": 6, "iter": 114, "kei": [0, 103, 113], "layer": [66, 70, 76, 77, 81, 87, 95, 102], "layer_norm": 50, "layernorm": 94, "leaky_relu": 20, "leakyrelu": 60, "learn": 113, "limit": 0, "linalg": [1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12], "linear": [5, 37, 39, 40, 77, 80, 81], "list": 158, "log": 142, "loss": [37, 44, 77, 87], "lucid": [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 37, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171], "matmul": 119, "matrix": 119, "matrix_pow": 7, "max": 143, "max_pool1d": 55, "max_pool2d": 56, "max_pool3d": 57, "maximum": 120, "maxpool1d": 99, "maxpool2d": 100, "maxpool3d": 101, "mean": 144, "method": [14, 15, 114], "min": 145, "minimum": 121, "model": 103, "modul": [14, 77], "more": 113, "mse_loss": 45, "mseloss": 85, "mul": 122, "multipl": 119, "new": 105, "newaxi": 105, "nll_loss": 46, "nllloss": 86, "nn": [13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 37, 38, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 103], "no_grad": 106, "norm": 8, "normal": [37, 48, 77, 95], "note": 0, "number": 108, "ones": 128, "ones_lik": 129, "oper": [5, 119, 132], "organ": 103, "outer": 123, "overview": [0, 103, 113], "pad": 163, "paramet": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 106, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171], "perform": 114, "pinv": 9, "pitfal": [104, 106], "pool": [37, 54, 77, 102], "potenti": [104, 106], "power": 124, "properti": [15, 114], "qr": 10, "rais": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12], "rand": 109, "randint": 110, "randn": 111, "random": [108, 109, 110, 111, 112, 113], "ravel": 164, "reciproc": 146, "relu": [21, 61], "repeat": 165, "reshap": 166, "return": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 104, 106, 109, 110, 111, 112, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171], "rule": 119, "seed": 112, "selu": [22, 62], "sequenti": 16, "sigmoid": [23, 63], "sign": 147, "signatur": [2, 3, 4, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 38, 40, 41, 42, 43, 45, 46, 47, 49, 50, 51, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 67, 68, 69, 71, 72, 73, 74, 75, 78, 79, 80, 82, 83, 84, 85, 86, 88, 89, 90, 91, 92, 93, 94, 96, 97, 98, 99, 100, 101, 104, 106, 109, 110, 111, 112, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 167, 168, 169, 170, 171], "sin": 148, "sinh": 149, "slice": 114, "softmax": [24, 64], "solv": 11, "sqrt": 150, "squar": 151, "squeez": 167, "stack": 168, "sub": 125, "sum": 152, "svd": 12, "tan": 153, "tanh": [25, 65, 154], "tensor": [105, 114, 132, 158, 162], "through": 114, "tile": 169, "trace": 155, "track": 114, "transpos": 156, "type": 107, "unari": 132, "unfold": 30, "unsqueez": 170, "us": [107, 158], "usag": [0, 13, 104, 105, 106, 107], "utilit": 162, "var": 157, "vstack": 171, "why": 107, "work": [104, 106], "zero": 130, "zeros_lik": 131}})