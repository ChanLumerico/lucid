Search.setIndex({"alltitles": {"@ Operator": [[151, "operator"]], "Activation Functions": [[28, null]], "Activation Layers": [[83, null], [94, null]], "Additional Details": [[13, "additional-details"]], "Admonitions and Usage Guidelines": [[138, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[39, "advanced-example-with-dilation"]], "Algorithm": [[123, "algorithm"], [124, "algorithm"], [125, "algorithm"], [126, "algorithm"], [127, "algorithm"], [128, "algorithm"], [129, "algorithm"], [130, "algorithm"], [131, "algorithm"], [132, "algorithm"], [133, "algorithm"]], "Attributes": [[17, "attributes"], [19, "attributes"], [20, "attributes"], [21, "attributes"], [22, "attributes"], [23, "attributes"], [24, "attributes"], [75, "attributes"], [76, "attributes"], [77, "attributes"], [78, "attributes"], [79, "attributes"], [80, "attributes"], [81, "attributes"], [82, "attributes"], [84, "attributes"], [85, "attributes"], [86, "attributes"], [88, "attributes"], [89, "attributes"], [90, "attributes"], [91, "attributes"], [92, "attributes"], [95, "attributes"], [96, "attributes"], [97, "attributes"], [99, "attributes"], [100, "attributes"], [101, "attributes"], [102, "attributes"], [103, "attributes"], [105, "attributes"], [106, "attributes"], [107, "attributes"], [108, "attributes"], [109, "attributes"], [110, "attributes"], [111, "attributes"], [113, "attributes"], [114, "attributes"], [115, "attributes"], [116, "attributes"], [117, "attributes"], [118, "attributes"], [146, "attributes"]], "Backward Gradient Calculation": [[6, "backward-gradient-calculation"], [7, "backward-gradient-calculation"], [8, "backward-gradient-calculation"], [10, "backward-gradient-calculation"], [11, "backward-gradient-calculation"], [12, "backward-gradient-calculation"], [13, "backward-gradient-calculation"], [14, "backward-gradient-calculation"], [15, "backward-gradient-calculation"], [16, "backward-gradient-calculation"], [20, "backward-gradient-calculation"], [21, "backward-gradient-calculation"], [22, "backward-gradient-calculation"], [23, "backward-gradient-calculation"], [24, "backward-gradient-calculation"], [26, "backward-gradient-calculation"], [27, "backward-gradient-calculation"], [29, "backward-gradient-calculation"], [30, "backward-gradient-calculation"], [31, "backward-gradient-calculation"], [32, "backward-gradient-calculation"], [33, "backward-gradient-calculation"], [34, "backward-gradient-calculation"], [47, "backward-gradient-calculation"], [49, "backward-gradient-calculation"], [74, "backward-gradient-calculation"], [75, "backward-gradient-calculation"], [76, "backward-gradient-calculation"], [77, "backward-gradient-calculation"], [78, "backward-gradient-calculation"], [79, "backward-gradient-calculation"], [80, "backward-gradient-calculation"], [81, "backward-gradient-calculation"], [82, "backward-gradient-calculation"], [84, "backward-gradient-calculation"], [85, "backward-gradient-calculation"], [86, "backward-gradient-calculation"], [88, "backward-gradient-calculation"], [89, "backward-gradient-calculation"], [90, "backward-gradient-calculation"], [91, "backward-gradient-calculation"], [92, "backward-gradient-calculation"], [95, "backward-gradient-calculation"], [96, "backward-gradient-calculation"], [97, "backward-gradient-calculation"], [99, "backward-gradient-calculation"], [100, "backward-gradient-calculation"], [101, "backward-gradient-calculation"], [102, "backward-gradient-calculation"], [103, "backward-gradient-calculation"], [105, "backward-gradient-calculation"], [106, "backward-gradient-calculation"], [107, "backward-gradient-calculation"], [108, "backward-gradient-calculation"], [109, "backward-gradient-calculation"], [110, "backward-gradient-calculation"], [111, "backward-gradient-calculation"], [113, "backward-gradient-calculation"], [114, "backward-gradient-calculation"], [115, "backward-gradient-calculation"], [116, "backward-gradient-calculation"], [117, "backward-gradient-calculation"], [118, "backward-gradient-calculation"], [147, "backward-gradient-calculation"], [148, "backward-gradient-calculation"], [149, "backward-gradient-calculation"], [150, "backward-gradient-calculation"], [151, "backward-gradient-calculation"], [152, "backward-gradient-calculation"], [153, "backward-gradient-calculation"], [154, "backward-gradient-calculation"], [155, "backward-gradient-calculation"], [156, "backward-gradient-calculation"], [157, "backward-gradient-calculation"], [168, "backward-gradient-calculation"], [169, "backward-gradient-calculation"], [170, "backward-gradient-calculation"], [171, "backward-gradient-calculation"], [172, "backward-gradient-calculation"], [173, "backward-gradient-calculation"], [174, "backward-gradient-calculation"], [175, "backward-gradient-calculation"], [176, "backward-gradient-calculation"], [177, "backward-gradient-calculation"], [178, "backward-gradient-calculation"], [179, "backward-gradient-calculation"], [180, "backward-gradient-calculation"], [181, "backward-gradient-calculation"], [182, "backward-gradient-calculation"], [183, "backward-gradient-calculation"], [184, "backward-gradient-calculation"], [185, "backward-gradient-calculation"], [186, "backward-gradient-calculation"], [187, "backward-gradient-calculation"], [188, "backward-gradient-calculation"], [189, "backward-gradient-calculation"], [190, "backward-gradient-calculation"], [191, "backward-gradient-calculation"], [192, "backward-gradient-calculation"], [194, "backward-gradient-calculation"], [196, "backward-gradient-calculation"], [198, "backward-gradient-calculation"], [199, "backward-gradient-calculation"], [200, "backward-gradient-calculation"], [201, "backward-gradient-calculation"], [202, "backward-gradient-calculation"], [203, "backward-gradient-calculation"], [204, "backward-gradient-calculation"], [205, "backward-gradient-calculation"], [206, "backward-gradient-calculation"]], "Benefits": [[137, "benefits"]], "Binary Functions": [[167, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [17, "class-signature"], [18, "class-signature"], [19, "class-signature"], [20, "class-signature"], [21, "class-signature"], [22, "class-signature"], [23, "class-signature"], [24, "class-signature"], [75, "class-signature"], [76, "class-signature"], [77, "class-signature"], [78, "class-signature"], [79, "class-signature"], [80, "class-signature"], [81, "class-signature"], [82, "class-signature"], [84, "class-signature"], [85, "class-signature"], [86, "class-signature"], [88, "class-signature"], [89, "class-signature"], [90, "class-signature"], [91, "class-signature"], [92, "class-signature"], [95, "class-signature"], [96, "class-signature"], [97, "class-signature"], [99, "class-signature"], [100, "class-signature"], [101, "class-signature"], [102, "class-signature"], [103, "class-signature"], [105, "class-signature"], [106, "class-signature"], [107, "class-signature"], [108, "class-signature"], [109, "class-signature"], [110, "class-signature"], [111, "class-signature"], [113, "class-signature"], [114, "class-signature"], [115, "class-signature"], [116, "class-signature"], [117, "class-signature"], [118, "class-signature"], [121, "class-signature"], [123, "class-signature"], [124, "class-signature"], [125, "class-signature"], [126, "class-signature"], [127, "class-signature"], [128, "class-signature"], [129, "class-signature"], [130, "class-signature"], [131, "class-signature"], [132, "class-signature"], [133, "class-signature"], [146, "class-signature"]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [4, "conclusion"], [120, "conclusion"], [135, "conclusion"], [136, "conclusion"], [137, "conclusion"], [145, "conclusion"]], "Containers": [[25, null]], "Convolution Functions": [[38, null], [46, null]], "Convolution Layers": [[87, null], [94, null]], "Core Components": [[4, "core-components"]], "Create a Tensor from a list": [[193, null]], "Creating a Parameter": [[19, null]], "Creating a tensor with gradient tracking": [[146, null]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Defining a Custom Optimizer": [[122, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[18, null]], "Defining a custom optimizer": [[121, null]], "Dropout Functions": [[45, null], [46, null]], "Dropout Layers": [[93, null], [94, null]], "Example": [[3, null], [3, null], [3, null], [6, "example"], [7, "example"], [8, "example"], [10, "example"], [11, "example"], [12, "example"], [13, "example"], [14, "example"], [15, "example"], [16, "example"], [39, "example"], [120, null], [120, null], [120, null], [135, "example"], [137, "example"], [140, "example"], [141, "example"], [142, "example"], [143, "example"], [144, "example"], [145, null], [145, null], [145, null], [158, "example"], [159, "example"], [160, "example"], [161, "example"], [162, "example"], [163, "example"], [164, "example"], [165, "example"], [166, "example"], [168, "example"], [169, "example"], [170, "example"], [171, "example"], [172, "example"], [173, "example"], [174, "example"], [175, "example"], [177, "example"], [179, "example"], [181, "example"], [182, "example"], [183, "example"], [184, "example"], [185, "example"], [186, "example"], [187, "example"], [188, "example"], [189, "example"], [190, "example"], [191, "example"], [192, "example"], [194, "example"], [196, "example"], [199, "example"], [201, "example"], [202, "example"], [203, "example"], [205, "example"], [206, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[136, null]], "Example 2: Adding a new axis to a 2D tensor": [[136, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[136, null]], "Example Usage": [[4, "example-usage"]], "Example Use Cases": [[138, "example-use-cases"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [17, "examples"], [18, "examples"], [19, "examples"], [20, "examples"], [21, "examples"], [22, "examples"], [23, "examples"], [24, "examples"], [26, "examples"], [27, "examples"], [29, "examples"], [30, "examples"], [31, "examples"], [32, "examples"], [33, "examples"], [34, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [47, "examples"], [49, "examples"], [50, "examples"], [51, "examples"], [52, "examples"], [54, "examples"], [55, "examples"], [56, "examples"], [58, "examples"], [59, "examples"], [60, "examples"], [61, "examples"], [62, "examples"], [64, "examples"], [65, "examples"], [66, "examples"], [67, "examples"], [69, "examples"], [70, "examples"], [71, "examples"], [72, "examples"], [73, "examples"], [74, "examples"], [75, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [79, "examples"], [80, "examples"], [81, "examples"], [82, "examples"], [84, "examples"], [85, "examples"], [86, "examples"], [88, "examples"], [89, "examples"], [90, "examples"], [91, "examples"], [92, "examples"], [95, "examples"], [96, "examples"], [97, "examples"], [99, "examples"], [100, "examples"], [101, "examples"], [102, "examples"], [103, "examples"], [105, "examples"], [106, "examples"], [107, "examples"], [108, "examples"], [109, "examples"], [110, "examples"], [111, "examples"], [113, "examples"], [114, "examples"], [115, "examples"], [116, "examples"], [117, "examples"], [118, "examples"], [121, "examples"], [122, "examples"], [123, "examples"], [124, "examples"], [125, "examples"], [126, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [130, "examples"], [131, "examples"], [132, "examples"], [133, "examples"], [146, "examples"], [147, "examples"], [148, "examples"], [149, "examples"], [150, "examples"], [152, "examples"], [153, "examples"], [154, "examples"], [155, "examples"], [156, "examples"], [157, "examples"], [176, "examples"], [178, "examples"], [180, "examples"], [193, "examples"], [195, "examples"], [198, "examples"], [200, "examples"], [204, "examples"]], "Features": [[5, "features"]], "Forward Calculation": [[6, "forward-calculation"], [7, "forward-calculation"], [8, "forward-calculation"], [10, "forward-calculation"], [11, "forward-calculation"], [12, "forward-calculation"], [13, "forward-calculation"], [14, "forward-calculation"], [15, "forward-calculation"], [16, "forward-calculation"], [20, "forward-calculation"], [21, "forward-calculation"], [22, "forward-calculation"], [23, "forward-calculation"], [24, "forward-calculation"], [26, "forward-calculation"], [27, "forward-calculation"], [29, "forward-calculation"], [30, "forward-calculation"], [31, "forward-calculation"], [32, "forward-calculation"], [33, "forward-calculation"], [34, "forward-calculation"], [39, "forward-calculation"], [47, "forward-calculation"], [49, "forward-calculation"], [69, "forward-calculation"], [70, "forward-calculation"], [73, "forward-calculation"], [74, "forward-calculation"], [75, "forward-calculation"], [76, "forward-calculation"], [77, "forward-calculation"], [78, "forward-calculation"], [79, "forward-calculation"], [80, "forward-calculation"], [81, "forward-calculation"], [82, "forward-calculation"], [84, "forward-calculation"], [85, "forward-calculation"], [86, "forward-calculation"], [88, "forward-calculation"], [89, "forward-calculation"], [90, "forward-calculation"], [91, "forward-calculation"], [92, "forward-calculation"], [95, "forward-calculation"], [96, "forward-calculation"], [97, "forward-calculation"], [99, "forward-calculation"], [100, "forward-calculation"], [101, "forward-calculation"], [102, "forward-calculation"], [103, "forward-calculation"], [105, "forward-calculation"], [106, "forward-calculation"], [107, "forward-calculation"], [108, "forward-calculation"], [109, "forward-calculation"], [110, "forward-calculation"], [111, "forward-calculation"], [113, "forward-calculation"], [114, "forward-calculation"], [115, "forward-calculation"], [116, "forward-calculation"], [117, "forward-calculation"], [118, "forward-calculation"], [147, "forward-calculation"], [148, "forward-calculation"], [149, "forward-calculation"], [150, "forward-calculation"], [151, "forward-calculation"], [152, "forward-calculation"], [153, "forward-calculation"], [154, "forward-calculation"], [155, "forward-calculation"], [156, "forward-calculation"], [157, "forward-calculation"], [168, "forward-calculation"], [169, "forward-calculation"], [170, "forward-calculation"], [171, "forward-calculation"], [172, "forward-calculation"], [173, "forward-calculation"], [174, "forward-calculation"], [175, "forward-calculation"], [176, "forward-calculation"], [177, "forward-calculation"], [178, "forward-calculation"], [179, "forward-calculation"], [180, "forward-calculation"], [181, "forward-calculation"], [182, "forward-calculation"], [183, "forward-calculation"], [184, "forward-calculation"], [185, "forward-calculation"], [186, "forward-calculation"], [187, "forward-calculation"], [188, "forward-calculation"], [189, "forward-calculation"], [190, "forward-calculation"], [191, "forward-calculation"], [192, "forward-calculation"], [194, "forward-calculation"], [196, "forward-calculation"], [198, "forward-calculation"], [199, "forward-calculation"], [200, "forward-calculation"], [201, "forward-calculation"], [202, "forward-calculation"], [203, "forward-calculation"], [204, "forward-calculation"], [205, "forward-calculation"], [206, "forward-calculation"]], "Function Signature": [[6, "function-signature"], [7, "function-signature"], [8, "function-signature"], [10, "function-signature"], [11, "function-signature"], [12, "function-signature"], [13, "function-signature"], [14, "function-signature"], [15, "function-signature"], [16, "function-signature"], [26, "function-signature"], [27, "function-signature"], [29, "function-signature"], [30, "function-signature"], [31, "function-signature"], [32, "function-signature"], [33, "function-signature"], [34, "function-signature"], [35, "function-signature"], [36, "function-signature"], [37, "function-signature"], [39, "function-signature"], [40, "function-signature"], [41, "function-signature"], [42, "function-signature"], [43, "function-signature"], [44, "function-signature"], [47, "function-signature"], [49, "function-signature"], [50, "function-signature"], [51, "function-signature"], [52, "function-signature"], [54, "function-signature"], [55, "function-signature"], [56, "function-signature"], [58, "function-signature"], [59, "function-signature"], [60, "function-signature"], [61, "function-signature"], [62, "function-signature"], [64, "function-signature"], [65, "function-signature"], [66, "function-signature"], [67, "function-signature"], [69, "function-signature"], [70, "function-signature"], [71, "function-signature"], [72, "function-signature"], [73, "function-signature"], [74, "function-signature"], [135, "function-signature"], [137, "function-signature"], [140, "function-signature"], [141, "function-signature"], [142, "function-signature"], [143, "function-signature"], [144, "function-signature"], [147, "function-signature"], [148, "function-signature"], [149, "function-signature"], [150, "function-signature"], [151, "function-signature"], [152, "function-signature"], [153, "function-signature"], [154, "function-signature"], [155, "function-signature"], [156, "function-signature"], [157, "function-signature"], [158, "function-signature"], [159, "function-signature"], [160, "function-signature"], [161, "function-signature"], [162, "function-signature"], [163, "function-signature"], [164, "function-signature"], [165, "function-signature"], [166, "function-signature"], [168, "function-signature"], [169, "function-signature"], [170, "function-signature"], [171, "function-signature"], [172, "function-signature"], [173, "function-signature"], [174, "function-signature"], [175, "function-signature"], [176, "function-signature"], [177, "function-signature"], [178, "function-signature"], [179, "function-signature"], [180, "function-signature"], [181, "function-signature"], [182, "function-signature"], [183, "function-signature"], [184, "function-signature"], [185, "function-signature"], [186, "function-signature"], [187, "function-signature"], [188, "function-signature"], [189, "function-signature"], [190, "function-signature"], [191, "function-signature"], [192, "function-signature"], [193, "function-signature"], [194, "function-signature"], [195, "function-signature"], [196, "function-signature"], [198, "function-signature"], [199, "function-signature"], [200, "function-signature"], [201, "function-signature"], [202, "function-signature"], [203, "function-signature"], [204, "function-signature"], [205, "function-signature"], [206, "function-signature"]], "Getting Started": [[122, "getting-started"]], "How It Works": [[135, "how-it-works"], [137, "how-it-works"]], "Indexing and slicing": [[146, null]], "Inspecting Optimizer State": [[122, null], [123, null], [124, null], [125, null], [126, null], [127, null], [128, null], [129, null], [130, null], [131, null], [132, null], [133, null]], "Integration with lucid": [[3, "integration-with-lucid"], [120, "integration-with-lucid"], [145, "integration-with-lucid"]], "Iterating through a tensor": [[146, null]], "Key Components": [[3, "key-components"], [120, "key-components"]], "Key Features": [[4, "key-features"], [122, "key-features"], [145, "key-features"]], "Learn More": [[145, null]], "Limitations": [[4, "limitations"]], "Linear Algebra Operations": [[9, null]], "Linear Functions": [[46, null], [48, null]], "Linear Layers": [[94, null], [98, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[46, null], [53, null]], "Loss Layers": [[94, null], [104, null]], "Lucid": [[4, null]], "Matrix Multiplication Rules": [[151, "matrix-multiplication-rules"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [18, "methods"], [19, "methods"], [121, "methods"], [146, "methods"]], "Modules": [[94, null]], "Normalization Functions": [[46, null], [57, null]], "Normalization Layers": [[94, null], [112, null]], "Notes": [[4, "notes"]], "Optimizers": [[134, null]], "Organizing Models": [[120, "organizing-models"]], "Overview": [[3, "overview"], [4, "overview"], [120, "overview"], [122, "overview"], [145, "overview"]], "Parameters": [[1, "parameters"], [6, "parameters"], [7, "parameters"], [8, "parameters"], [10, "parameters"], [11, "parameters"], [12, "parameters"], [13, "parameters"], [14, "parameters"], [15, "parameters"], [16, "parameters"], [17, "parameters"], [19, "parameters"], [20, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [26, "parameters"], [27, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [47, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [69, "parameters"], [70, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [88, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [105, "parameters"], [106, "parameters"], [107, "parameters"], [108, "parameters"], [109, "parameters"], [110, "parameters"], [111, "parameters"], [113, "parameters"], [114, "parameters"], [115, "parameters"], [116, "parameters"], [117, "parameters"], [118, "parameters"], [123, "parameters"], [124, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [137, "parameters"], [140, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [154, "parameters"], [155, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"], [159, "parameters"], [160, "parameters"], [161, "parameters"], [162, "parameters"], [163, "parameters"], [164, "parameters"], [165, "parameters"], [166, "parameters"], [168, "parameters"], [169, "parameters"], [170, "parameters"], [171, "parameters"], [172, "parameters"], [173, "parameters"], [174, "parameters"], [175, "parameters"], [176, "parameters"], [177, "parameters"], [178, "parameters"], [179, "parameters"], [180, "parameters"], [181, "parameters"], [182, "parameters"], [183, "parameters"], [184, "parameters"], [185, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [189, "parameters"], [190, "parameters"], [191, "parameters"], [192, "parameters"], [193, "parameters"], [194, "parameters"], [195, "parameters"], [196, "parameters"], [198, "parameters"], [199, "parameters"], [200, "parameters"], [201, "parameters"], [202, "parameters"], [203, "parameters"], [204, "parameters"], [205, "parameters"], [206, "parameters"]], "Performing backpropagation": [[146, null]], "Pooling Functions": [[46, null], [63, null]], "Pooling Layers": [[94, null], [119, null]], "Potential Pitfalls": [[135, "potential-pitfalls"], [137, "potential-pitfalls"]], "Properties": [[19, "properties"], [146, "properties"]], "Raises": [[6, "raises"], [7, "raises"], [8, "raises"], [10, "raises"], [11, "raises"], [12, "raises"], [13, "raises"], [14, "raises"], [15, "raises"], [16, "raises"]], "Random Number Generations": [[139, null]], "References": [[122, "references"]], "Returns": [[6, "returns"], [7, "returns"], [8, "returns"], [10, "returns"], [11, "returns"], [12, "returns"], [13, "returns"], [14, "returns"], [15, "returns"], [16, "returns"], [26, "returns"], [27, "returns"], [29, "returns"], [30, "returns"], [31, "returns"], [32, "returns"], [33, "returns"], [34, "returns"], [35, "returns"], [36, "returns"], [37, "returns"], [39, "returns"], [40, "returns"], [41, "returns"], [42, "returns"], [43, "returns"], [44, "returns"], [47, "returns"], [49, "returns"], [50, "returns"], [51, "returns"], [52, "returns"], [54, "returns"], [55, "returns"], [56, "returns"], [58, "returns"], [59, "returns"], [60, "returns"], [61, "returns"], [62, "returns"], [64, "returns"], [65, "returns"], [66, "returns"], [67, "returns"], [69, "returns"], [70, "returns"], [71, "returns"], [72, "returns"], [73, "returns"], [74, "returns"], [135, "returns"], [137, "returns"], [140, "returns"], [141, "returns"], [142, "returns"], [143, "returns"], [144, "returns"], [147, "returns"], [148, "returns"], [149, "returns"], [150, "returns"], [151, "returns"], [152, "returns"], [153, "returns"], [154, "returns"], [155, "returns"], [156, "returns"], [157, "returns"], [158, "returns"], [159, "returns"], [160, "returns"], [161, "returns"], [162, "returns"], [163, "returns"], [164, "returns"], [165, "returns"], [166, "returns"], [168, "returns"], [169, "returns"], [170, "returns"], [171, "returns"], [172, "returns"], [173, "returns"], [174, "returns"], [175, "returns"], [176, "returns"], [177, "returns"], [178, "returns"], [179, "returns"], [180, "returns"], [181, "returns"], [182, "returns"], [183, "returns"], [184, "returns"], [185, "returns"], [186, "returns"], [187, "returns"], [188, "returns"], [189, "returns"], [190, "returns"], [191, "returns"], [192, "returns"], [193, "returns"], [194, "returns"], [195, "returns"], [196, "returns"], [198, "returns"], [199, "returns"], [200, "returns"], [201, "returns"], [202, "returns"], [203, "returns"], [204, "returns"], [205, "returns"], [206, "returns"]], "See Also": [[122, "see-also"]], "Tensor Generating Functions": [[167, null]], "Tensor Operations": [[167, null]], "Tensor Utilites": [[197, null]], "Type Definitions": [[138, "type-definitions"]], "Unary Functions": [[167, null]], "Usage": [[17, "usage"], [135, "usage"], [136, "usage"], [137, "usage"]], "Use another Tensor as input": [[193, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using the ASGD Optimizer": [[123, null]], "Using the Adadelta Optimizer": [[124, null]], "Using the Adagrad Optimizer": [[125, null]], "Using the Adam Optimizer": [[126, null]], "Using the AdamW Optimizer": [[127, null]], "Using the Adamax Optimizer": [[128, null]], "Using the NAdam Optimizer": [[129, null]], "Using the RAdam Optimizer": [[130, null]], "Using the RMSprop Optimizer": [[131, null]], "Using the Rprop Optimizer": [[132, null]], "Using the SGD Optimizer": [[133, null]], "Weight Initializations": [[68, null]], "Why Use Type Aliases?": [[138, null]], "activation Functions": [[46, null]], "lucid.Tensor": [[146, null]], "lucid.abs": [[168, null]], "lucid.add": [[147, null]], "lucid.arange": [[158, null]], "lucid.arccos": [[169, null]], "lucid.arcsin": [[170, null]], "lucid.arctan": [[171, null]], "lucid.clip": [[172, null]], "lucid.concatenate": [[194, null]], "lucid.cos": [[173, null]], "lucid.cosh": [[174, null]], "lucid.cube": [[175, null]], "lucid.data": [[3, null]], "lucid.data.ConcatDataset": [[0, null]], "lucid.data.DataLoader": [[1, null]], "lucid.data.Dataset": [[2, null]], "lucid.diag": [[159, null]], "lucid.div": [[148, null]], "lucid.dot": [[149, null]], "lucid.empty": [[160, null]], "lucid.empty_like": [[161, null]], "lucid.exp": [[176, null]], "lucid.eye": [[162, null]], "lucid.flatten": [[195, null]], "lucid.grad_enabled": [[135, null]], "lucid.hstack": [[196, null]], "lucid.inner": [[150, null]], "lucid.linalg": [[5, null]], "lucid.linalg.cholesky": [[6, null]], "lucid.linalg.det": [[7, null]], "lucid.linalg.eig": [[8, null]], "lucid.linalg.inv": [[10, null]], "lucid.linalg.matrix_power": [[11, null]], "lucid.linalg.norm": [[12, null]], "lucid.linalg.pinv": [[13, null]], "lucid.linalg.qr": [[14, null]], "lucid.linalg.solve": [[15, null]], "lucid.linalg.svd": [[16, null]], "lucid.log": [[177, null]], "lucid.matmul": [[151, null]], "lucid.max": [[178, null]], "lucid.maximum": [[152, null]], "lucid.mean": [[179, null]], "lucid.min": [[180, null]], "lucid.minimum": [[153, null]], "lucid.mul": [[154, null]], "lucid.newaxis": [[136, null]], "lucid.nn": [[120, null]], "lucid.nn.functional": [[46, null]], "lucid.no_grad": [[137, null]], "lucid.ones": [[163, null]], "lucid.ones_like": [[164, null]], "lucid.optim": [[122, null]], "lucid.outer": [[155, null]], "lucid.pad": [[198, null]], "lucid.power": [[156, null]], "lucid.random": [[145, null]], "lucid.random.rand": [[140, null]], "lucid.random.randint": [[141, null]], "lucid.random.randn": [[142, null]], "lucid.random.seed": [[143, null]], "lucid.random.uniform": [[144, null]], "lucid.ravel": [[199, null]], "lucid.reciprocal": [[181, null]], "lucid.repeat": [[200, null]], "lucid.reshape": [[201, null]], "lucid.sign": [[182, null]], "lucid.sin": [[183, null]], "lucid.sinh": [[184, null]], "lucid.sqrt": [[185, null]], "lucid.square": [[186, null]], "lucid.squeeze": [[202, null]], "lucid.stack": [[203, null]], "lucid.sub": [[157, null]], "lucid.sum": [[187, null]], "lucid.tan": [[188, null]], "lucid.tanh": [[189, null]], "lucid.tensor": [[193, null]], "lucid.tile": [[204, null]], "lucid.trace": [[190, null]], "lucid.transpose": [[191, null]], "lucid.types": [[138, null]], "lucid.unsqueeze": [[205, null]], "lucid.var": [[192, null]], "lucid.vstack": [[206, null]], "lucid.zeros": [[165, null]], "lucid.zeros_like": [[166, null]], "nn.AlphaDropout": [[88, null]], "nn.AvgPool1d": [[113, null]], "nn.AvgPool2d": [[114, null]], "nn.AvgPool3d": [[115, null]], "nn.BCELoss": [[99, null]], "nn.BatchNorm1d": [[105, null]], "nn.BatchNorm2d": [[106, null]], "nn.BatchNorm3d": [[107, null]], "nn.Bilinear": [[95, null]], "nn.Buffer": [[17, null]], "nn.Conv1d": [[84, null]], "nn.Conv2d": [[85, null]], "nn.Conv3d": [[86, null]], "nn.CrossEntropyLoss": [[100, null]], "nn.Dropout": [[89, null]], "nn.Dropout1d": [[90, null]], "nn.Dropout2d": [[91, null]], "nn.Dropout3d": [[92, null]], "nn.ELU": [[75, null]], "nn.GELU": [[76, null]], "nn.HuberLoss": [[101, null]], "nn.Identity": [[96, null]], "nn.InstanceNorm1d": [[108, null]], "nn.InstanceNorm2d": [[109, null]], "nn.InstanceNorm3d": [[110, null]], "nn.LayerNorm": [[111, null]], "nn.LeakyReLU": [[77, null]], "nn.Linear": [[97, null]], "nn.MSELoss": [[102, null]], "nn.MaxPool1d": [[116, null]], "nn.MaxPool2d": [[117, null]], "nn.MaxPool3d": [[118, null]], "nn.Module": [[18, null]], "nn.ModuleDict": [[20, null]], "nn.ModuleList": [[21, null]], "nn.NLLLoss": [[103, null]], "nn.Parameter": [[19, null]], "nn.ParameterDict": [[22, null]], "nn.ParameterList": [[23, null]], "nn.ReLU": [[78, null]], "nn.SELU": [[79, null]], "nn.Sequential": [[24, null]], "nn.Sigmoid": [[80, null]], "nn.Softmax": [[81, null]], "nn.Tanh": [[82, null]], "nn.functional.alpha_dropout": [[40, null]], "nn.functional.avg_pool1d": [[60, null]], "nn.functional.avg_pool2d": [[61, null]], "nn.functional.avg_pool3d": [[62, null]], "nn.functional.batch_norm": [[56, null]], "nn.functional.bilinear": [[47, null]], "nn.functional.binary_cross_entropy": [[50, null]], "nn.functional.conv1d": [[35, null]], "nn.functional.conv2d": [[36, null]], "nn.functional.conv3d": [[37, null]], "nn.functional.cross_entropy": [[51, null]], "nn.functional.dropout": [[41, null]], "nn.functional.dropout1d": [[42, null]], "nn.functional.dropout2d": [[43, null]], "nn.functional.dropout3d": [[44, null]], "nn.functional.elu": [[26, null]], "nn.functional.gelu": [[27, null]], "nn.functional.huber_loss": [[52, null]], "nn.functional.instance_norm": [[58, null]], "nn.functional.layer_norm": [[59, null]], "nn.functional.leaky_relu": [[29, null]], "nn.functional.linear": [[49, null]], "nn.functional.max_pool1d": [[64, null]], "nn.functional.max_pool2d": [[65, null]], "nn.functional.max_pool3d": [[66, null]], "nn.functional.mse_loss": [[54, null]], "nn.functional.nll_loss": [[55, null]], "nn.functional.relu": [[30, null]], "nn.functional.selu": [[31, null]], "nn.functional.sigmoid": [[32, null]], "nn.functional.softmax": [[33, null]], "nn.functional.tanh": [[34, null]], "nn.functional.unfold": [[39, null]], "nn.init.constant": [[67, null]], "nn.init.kaiming_normal": [[69, null]], "nn.init.kaiming_uniform": [[70, null]], "nn.init.normal": [[71, null]], "nn.init.uniform": [[72, null]], "nn.init.xavier_normal": [[73, null]], "nn.init.xavier_uniform": [[74, null]], "optim.ASGD": [[123, null]], "optim.Adadelta": [[124, null]], "optim.Adagrad": [[125, null]], "optim.Adam": [[126, null]], "optim.AdamW": [[127, null]], "optim.Adamax": [[128, null]], "optim.NAdam": [[129, null]], "optim.Optimizer": [[121, null]], "optim.RAdam": [[130, null]], "optim.RMSprop": [[131, null]], "optim.Rprop": [[132, null]], "optim.SGD": [[133, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/nn", "optim/Optimizer", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/types", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/unsqueeze", "tensor/utilities/vstack"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/types.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst"], "indexentries": {"abs() (in module lucid)": [[168, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[124, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[125, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[126, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[128, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[127, "lucid.optim.AdamW", false]], "add() (in module lucid)": [[147, "lucid.add", false]], "alpha_dropout() (in module lucid.nn.functional)": [[40, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[88, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[158, "lucid.arange", false]], "arccos() (in module lucid)": [[169, "lucid.arccos", false]], "arcsin() (in module lucid)": [[170, "lucid.arcsin", false]], "arctan() (in module lucid)": [[171, "lucid.arctan", false]], "asgd (class in lucid.optim)": [[123, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[60, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[61, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[62, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[113, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[114, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[115, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[56, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[105, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[106, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[107, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[99, "lucid.nn.BCELoss", false]], "bilinear (class in lucid.nn)": [[95, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[47, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[50, "lucid.nn.functional.binary_cross_entropy", false]], "buffer (class in lucid.nn)": [[17, "lucid.nn.Buffer", false]], "cholesky() (in module lucid.linalg)": [[6, "lucid.linalg.cholesky", false]], "clip() (in module lucid)": [[172, "lucid.clip", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[194, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[67, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[84, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[35, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[85, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[36, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[86, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[37, "lucid.nn.functional.conv3d", false]], "cos() (in module lucid)": [[173, "lucid.cos", false]], "cosh() (in module lucid)": [[174, "lucid.cosh", false]], "cross_entropy() (in module lucid.nn.functional)": [[51, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[100, "lucid.nn.CrossEntropyLoss", false]], "cube() (in module lucid)": [[175, "lucid.cube", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "det() (in module lucid.linalg)": [[7, "lucid.linalg.det", false]], "diag() (in module lucid)": [[159, "lucid.diag", false]], "div() (in module lucid)": [[148, "lucid.div", false]], "dot() (in module lucid)": [[149, "lucid.dot", false]], "dropout (class in lucid.nn)": [[89, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[41, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[90, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[42, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[91, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[43, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[92, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[44, "lucid.nn.functional.dropout3d", false]], "eig() (in module lucid.linalg)": [[8, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[75, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[26, "lucid.nn.functional.elu", false]], "empty() (in module lucid)": [[160, "lucid.empty", false]], "empty_like() (in module lucid)": [[161, "lucid.empty_like", false]], "exp() (in module lucid)": [[176, "lucid.exp", false]], "eye() (in module lucid)": [[162, "lucid.eye", false]], "flatten() (in module lucid)": [[195, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[76, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[27, "lucid.nn.functional.gelu", false]], "grad_enabled() (in module lucid)": [[135, "lucid.grad_enabled", false]], "hstack() (in module lucid)": [[196, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[52, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[101, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[96, "lucid.nn.Identity", false]], "inner() (in module lucid)": [[150, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[58, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[108, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[109, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[110, "lucid.nn.InstanceNorm3d", false]], "inv() (in module lucid.linalg)": [[10, "lucid.linalg.inv", false]], "kaiming_normal() (in module lucid.nn.init)": [[69, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[70, "lucid.nn.init.kaiming_uniform", false]], "layer_norm() (in module lucid.nn.functional)": [[59, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[111, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[29, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[77, "lucid.nn.LeakyReLU", false]], "linear (class in lucid.nn)": [[97, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[49, "lucid.nn.functional.linear", false]], "log() (in module lucid)": [[177, "lucid.log", false]], "lucid": [[4, "module-lucid", false]], "matmul() (in module lucid)": [[151, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[11, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[178, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[64, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[65, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[66, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[152, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[116, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[117, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[118, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[179, "lucid.mean", false]], "min() (in module lucid)": [[180, "lucid.min", false]], "minimum() (in module lucid)": [[153, "lucid.minimum", false]], "module": [[4, "module-lucid", false]], "module (class in lucid.nn)": [[18, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[20, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[21, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[54, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[102, "lucid.nn.MSELoss", false]], "mul() (in module lucid)": [[154, "lucid.mul", false]], "nadam (class in lucid.optim)": [[129, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[55, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[103, "lucid.nn.NLLLoss", false]], "no_grad() (in module lucid)": [[137, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[12, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[71, "lucid.nn.init.normal", false]], "ones() (in module lucid)": [[163, "lucid.ones", false]], "ones_like() (in module lucid)": [[164, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[121, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[155, "lucid.outer", false]], "pad() (in module lucid)": [[198, "lucid.pad", false]], "parameter (class in lucid.nn)": [[19, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[22, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[23, "lucid.nn.ParameterList", false]], "pinv() (in module lucid.linalg)": [[13, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[156, "lucid.power", false]], "qr() (in module lucid.linalg)": [[14, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[130, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[140, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[141, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[142, "lucid.random.randn", false]], "ravel() (in module lucid)": [[199, "lucid.ravel", false]], "reciprocal() (in module lucid)": [[181, "lucid.reciprocal", false]], "relu (class in lucid.nn)": [[78, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[30, "lucid.nn.functional.relu", false]], "repeat() (in module lucid)": [[200, "lucid.repeat", false]], "reshape() (in module lucid)": [[201, "lucid.reshape", false]], "rmsprop (class in lucid.optim)": [[131, "lucid.optim.RMSprop", false]], "rprop (class in lucid.optim)": [[132, "lucid.optim.Rprop", false]], "seed() (in module lucid.random)": [[143, "lucid.random.seed", false]], "selu (class in lucid.nn)": [[79, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[31, "lucid.nn.functional.selu", false]], "sequential (class in lucid.nn)": [[24, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[133, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[80, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[32, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[182, "lucid.sign", false]], "sin() (in module lucid)": [[183, "lucid.sin", false]], "sinh() (in module lucid)": [[184, "lucid.sinh", false]], "softmax (class in lucid.nn)": [[81, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[33, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[15, "lucid.linalg.solve", false]], "sqrt() (in module lucid)": [[185, "lucid.sqrt", false]], "square() (in module lucid)": [[186, "lucid.square", false]], "squeeze() (in module lucid)": [[202, "lucid.squeeze", false]], "stack() (in module lucid)": [[203, "lucid.stack", false]], "sub() (in module lucid)": [[157, "lucid.sub", false]], "sum() (in module lucid)": [[187, "lucid.sum", false]], "svd() (in module lucid.linalg)": [[16, "lucid.linalg.svd", false]], "tan() (in module lucid)": [[188, "lucid.tan", false]], "tanh (class in lucid.nn)": [[82, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[189, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[34, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[146, "lucid.Tensor", false]], "tensor() (in module lucid)": [[193, "lucid.tensor", false]], "tile() (in module lucid)": [[204, "lucid.tile", false]], "trace() (in module lucid)": [[190, "lucid.trace", false]], "transpose() (in module lucid)": [[191, "lucid.transpose", false]], "unfold() (in module lucid.nn.functional)": [[39, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[72, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[144, "lucid.random.uniform", false]], "unsqueeze() (in module lucid)": [[205, "lucid.unsqueeze", false]], "var() (in module lucid)": [[192, "lucid.var", false]], "vstack() (in module lucid)": [[206, "lucid.vstack", false]], "xavier_normal() (in module lucid.nn.init)": [[73, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[74, "lucid.nn.init.xavier_uniform", false]], "zeros() (in module lucid)": [[165, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[166, "lucid.zeros_like", false]]}, "objects": {"": [[4, 0, 0, "-", "lucid"]], "lucid": [[146, 1, 1, "", "Tensor"], [168, 2, 1, "", "abs"], [147, 2, 1, "", "add"], [158, 2, 1, "", "arange"], [169, 2, 1, "", "arccos"], [170, 2, 1, "", "arcsin"], [171, 2, 1, "", "arctan"], [172, 2, 1, "", "clip"], [194, 2, 1, "", "concatenate"], [173, 2, 1, "", "cos"], [174, 2, 1, "", "cosh"], [175, 2, 1, "", "cube"], [159, 2, 1, "", "diag"], [148, 2, 1, "", "div"], [149, 2, 1, "", "dot"], [160, 2, 1, "", "empty"], [161, 2, 1, "", "empty_like"], [176, 2, 1, "", "exp"], [162, 2, 1, "", "eye"], [195, 2, 1, "", "flatten"], [135, 2, 1, "", "grad_enabled"], [196, 2, 1, "", "hstack"], [150, 2, 1, "", "inner"], [177, 2, 1, "", "log"], [151, 2, 1, "", "matmul"], [178, 2, 1, "", "max"], [152, 2, 1, "", "maximum"], [179, 2, 1, "", "mean"], [180, 2, 1, "", "min"], [153, 2, 1, "", "minimum"], [154, 2, 1, "", "mul"], [137, 2, 1, "", "no_grad"], [163, 2, 1, "", "ones"], [164, 2, 1, "", "ones_like"], [155, 2, 1, "", "outer"], [198, 2, 1, "", "pad"], [156, 2, 1, "", "power"], [199, 2, 1, "", "ravel"], [181, 2, 1, "", "reciprocal"], [200, 2, 1, "", "repeat"], [201, 2, 1, "", "reshape"], [182, 2, 1, "", "sign"], [183, 2, 1, "", "sin"], [184, 2, 1, "", "sinh"], [185, 2, 1, "", "sqrt"], [186, 2, 1, "", "square"], [202, 2, 1, "", "squeeze"], [203, 2, 1, "", "stack"], [157, 2, 1, "", "sub"], [187, 2, 1, "", "sum"], [188, 2, 1, "", "tan"], [189, 2, 1, "", "tanh"], [193, 2, 1, "", "tensor"], [204, 2, 1, "", "tile"], [190, 2, 1, "", "trace"], [191, 2, 1, "", "transpose"], [205, 2, 1, "", "unsqueeze"], [192, 2, 1, "", "var"], [206, 2, 1, "", "vstack"], [165, 2, 1, "", "zeros"], [166, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.linalg": [[6, 2, 1, "", "cholesky"], [7, 2, 1, "", "det"], [8, 2, 1, "", "eig"], [10, 2, 1, "", "inv"], [11, 2, 1, "", "matrix_power"], [12, 2, 1, "", "norm"], [13, 2, 1, "", "pinv"], [14, 2, 1, "", "qr"], [15, 2, 1, "", "solve"], [16, 2, 1, "", "svd"]], "lucid.nn": [[88, 1, 1, "", "AlphaDropout"], [113, 1, 1, "", "AvgPool1d"], [114, 1, 1, "", "AvgPool2d"], [115, 1, 1, "", "AvgPool3d"], [99, 1, 1, "", "BCELoss"], [105, 1, 1, "", "BatchNorm1d"], [106, 1, 1, "", "BatchNorm2d"], [107, 1, 1, "", "BatchNorm3d"], [95, 1, 1, "", "Bilinear"], [17, 1, 1, "", "Buffer"], [84, 1, 1, "", "Conv1d"], [85, 1, 1, "", "Conv2d"], [86, 1, 1, "", "Conv3d"], [100, 1, 1, "", "CrossEntropyLoss"], [89, 1, 1, "", "Dropout"], [90, 1, 1, "", "Dropout1d"], [91, 1, 1, "", "Dropout2d"], [92, 1, 1, "", "Dropout3d"], [75, 1, 1, "", "ELU"], [76, 1, 1, "", "GELU"], [101, 1, 1, "", "HuberLoss"], [96, 1, 1, "", "Identity"], [108, 1, 1, "", "InstanceNorm1d"], [109, 1, 1, "", "InstanceNorm2d"], [110, 1, 1, "", "InstanceNorm3d"], [111, 1, 1, "", "LayerNorm"], [77, 1, 1, "", "LeakyReLU"], [97, 1, 1, "", "Linear"], [102, 1, 1, "", "MSELoss"], [116, 1, 1, "", "MaxPool1d"], [117, 1, 1, "", "MaxPool2d"], [118, 1, 1, "", "MaxPool3d"], [18, 1, 1, "", "Module"], [20, 1, 1, "", "ModuleDict"], [21, 1, 1, "", "ModuleList"], [103, 1, 1, "", "NLLLoss"], [19, 1, 1, "", "Parameter"], [22, 1, 1, "", "ParameterDict"], [23, 1, 1, "", "ParameterList"], [78, 1, 1, "", "ReLU"], [79, 1, 1, "", "SELU"], [24, 1, 1, "", "Sequential"], [80, 1, 1, "", "Sigmoid"], [81, 1, 1, "", "Softmax"], [82, 1, 1, "", "Tanh"]], "lucid.nn.functional": [[40, 2, 1, "", "alpha_dropout"], [60, 2, 1, "", "avg_pool1d"], [61, 2, 1, "", "avg_pool2d"], [62, 2, 1, "", "avg_pool3d"], [56, 2, 1, "", "batch_norm"], [47, 2, 1, "", "bilinear"], [50, 2, 1, "", "binary_cross_entropy"], [35, 2, 1, "", "conv1d"], [36, 2, 1, "", "conv2d"], [37, 2, 1, "", "conv3d"], [51, 2, 1, "", "cross_entropy"], [41, 2, 1, "", "dropout"], [42, 2, 1, "", "dropout1d"], [43, 2, 1, "", "dropout2d"], [44, 2, 1, "", "dropout3d"], [26, 2, 1, "", "elu"], [27, 2, 1, "", "gelu"], [52, 2, 1, "", "huber_loss"], [58, 2, 1, "", "instance_norm"], [59, 2, 1, "", "layer_norm"], [29, 2, 1, "", "leaky_relu"], [49, 2, 1, "", "linear"], [64, 2, 1, "", "max_pool1d"], [65, 2, 1, "", "max_pool2d"], [66, 2, 1, "", "max_pool3d"], [54, 2, 1, "", "mse_loss"], [55, 2, 1, "", "nll_loss"], [30, 2, 1, "", "relu"], [31, 2, 1, "", "selu"], [32, 2, 1, "", "sigmoid"], [33, 2, 1, "", "softmax"], [34, 2, 1, "", "tanh"], [39, 2, 1, "", "unfold"]], "lucid.nn.init": [[67, 2, 1, "", "constant"], [69, 2, 1, "", "kaiming_normal"], [70, 2, 1, "", "kaiming_uniform"], [71, 2, 1, "", "normal"], [72, 2, 1, "", "uniform"], [73, 2, 1, "", "xavier_normal"], [74, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[123, 1, 1, "", "ASGD"], [124, 1, 1, "", "Adadelta"], [125, 1, 1, "", "Adagrad"], [126, 1, 1, "", "Adam"], [127, 1, 1, "", "AdamW"], [128, 1, 1, "", "Adamax"], [129, 1, 1, "", "NAdam"], [121, 1, 1, "", "Optimizer"], [130, 1, 1, "", "RAdam"], [131, 1, 1, "", "RMSprop"], [132, 1, 1, "", "Rprop"], [133, 1, 1, "", "SGD"]], "lucid.random": [[140, 2, 1, "", "rand"], [141, 2, 1, "", "randint"], [142, 2, 1, "", "randn"], [143, 2, 1, "", "seed"], [144, 2, 1, "", "uniform"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [3, 4, 5, 11, 13, 16, 17, 18, 19, 20, 22, 23, 24, 100, 103, 113, 116, 117, 120, 121, 122, 136, 151, 159, 177, 179, 187, 190, 192, 193, 202], "0": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 165, 166, 168, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 181, 182, 183, 184, 187, 188, 189, 191, 192, 193, 194, 196, 198, 199, 200, 202, 203, 205, 206], "000": [160, 161], "0000": [100, 101, 103], "0001": 123, "000e": [160, 161], "001": [123, 126, 127, 129, 130, 133], "002": [128, 129], "004": 129, "005": 77, "01": [29, 77, 121, 122, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133], "01051757": 142, "0205": 100, "0217": 100, "0227": 100, "0299": 100, "044715": [27, 76], "0450": 100, "0451": 100, "04719755": 169, "0474259": 32, "0480": 100, "05": [56, 58, 59, 77, 105, 106, 107, 108, 109, 110, 111], "0507": [31, 79], "06": [124, 132], "07": [50, 51, 99, 100], "0700": 100, "0706508": 82, "0721": 100, "0794": 103, "08": [126, 127, 128, 129, 130, 131], "0802": 103, "08333333": 13, "085537": 176, "0900": [81, 100], "0986": [33, 81], "09861229": 177, "0992": 100, "1": [0, 1, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206], "10": [0, 1, 2, 3, 20, 21, 24, 36, 37, 47, 49, 84, 85, 86, 91, 92, 95, 97, 106, 107, 109, 114, 115, 117, 125, 141, 144, 145, 148, 151, 154, 155, 171, 187], "1000000": 123, "1001": 100, "1003": 100, "1014": 31, "1025": [21, 24], "1026": [21, 24], "1027": [21, 24], "10499": 32, "1050": 80, "1054": 103, "1056": [21, 24], "11": [47, 84, 85, 86, 91, 95, 106, 107, 109, 114, 115, 117, 151], "1111": 99, "1134": 47, "119": 47, "1192": [32, 33, 81], "12": [22, 47, 84, 85, 86, 91, 92, 95, 106, 107, 109, 114, 115, 117, 151, 155, 156], "123": [69, 70, 71, 72, 73, 74, 143, 144], "124": [69, 70, 73, 74], "125": 115, "1250": 101, "128": 24, "13": [47, 84, 85, 86, 95, 107, 114, 115, 117, 151], "14": [84, 85, 86, 91, 92, 95, 107, 114, 115, 117, 138, 151, 155], "145": 47, "15": [0, 47, 84, 85, 86, 95, 107, 114, 115, 117, 151, 155, 190], "1513": 103, "155": 151, "1588": [27, 76], "16": [21, 22, 24, 84, 85, 86, 91, 92, 95, 106, 107, 114, 115, 117, 120, 151, 155, 185], "16227766": 14, "16425": 103, "1643": 99, "166": 151, "17": [84, 85, 86, 95, 107, 115, 150], "170": 47, "17520119": 184, "18": [84, 85, 86, 91, 95, 107, 115, 154, 155], "1800": 100, "19": [36, 37, 47, 85, 86, 107, 149, 151], "1966": [33, 80, 81], "1998": 100, "1d": [35, 60, 64, 105, 108, 144, 151, 159, 190, 198, 199, 200, 204], "1e": [50, 51, 56, 58, 59, 99, 100, 105, 106, 107, 108, 109, 110, 111, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "1e6": 123, "2": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206], "20": [0, 20, 21, 24, 85, 86, 91, 107, 155, 176], "2039": 103, "204": 86, "21": [22, 47, 85, 86, 107, 155], "211": 151, "22": [47, 85, 86, 91, 107, 149, 151], "2231": [100, 103], "2247": [105, 106, 107, 108, 109, 110, 111], "226": 151, "22752314": 142, "23": [85, 86, 107], "2324": 79, "234": [69, 70, 71, 72, 73, 74, 144], "24": [47, 85, 86, 91, 107, 155], "2424": [33, 81], "2447": 81, "25": [0, 32, 80, 86, 102, 107, 114, 115, 148, 181, 192], "2500": [99, 101, 103], "2512": 75, "2547": 79, "26": [22, 49, 86, 97, 107, 155], "26325684": 142, "2689": [33, 80, 81], "27": [47, 84, 86, 107, 175], "276": [69, 70, 73, 74], "28": [47, 86, 155], "29": 86, "2_i": [108, 109, 110], "2d": [36, 43, 61, 65, 106, 109, 151, 159, 162, 190, 195, 198, 200, 204], "2e": 128, "2x2": 39, "3": [1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 17, 18, 19, 21, 22, 23, 24, 27, 32, 33, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 52, 54, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 172, 174, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206], "30": [21, 86], "3026": 103, "31": [47, 86, 151], "310": [160, 161], "31622777": 14, "32": [21, 24, 47, 49, 85, 86, 97, 120, 149, 150, 155], "321": [69, 70, 73, 74], "33": [21, 24, 49, 86, 97], "33333333": 13, "34": [21, 24, 47, 86, 151, 155], "342": [69, 70, 73, 74], "345": [69, 70, 71, 72, 73, 74, 144], "35": [21, 24, 86], "3567": [99, 103], "36": 86, "3679": [26, 31, 75], "37": 84, "372": 47, "375": 102, "3750": 101, "38344152": 140, "38629436": 177, "389056": 176, "3935": 75, "3d": [37, 44, 62, 66, 86, 107, 110], "3x3": 145, "4": [0, 1, 2, 3, 5, 6, 7, 8, 10, 12, 13, 14, 22, 24, 35, 36, 37, 39, 42, 43, 44, 47, 49, 56, 58, 59, 60, 61, 62, 64, 65, 66, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 123, 126, 130, 131, 133, 136, 138, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 164, 166, 172, 177, 178, 179, 180, 181, 183, 185, 186, 187, 188, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 203, 204, 206], "4044": 99, "4076": 100, "41421356": 6, "41666667": 13, "41808962": 142, "419974": 34, "4199743": 82, "42": [47, 138, 145], "421": [69, 70, 73, 74], "423": [69, 70, 71, 72], "42718872": 14, "4286": 99, "43": [149, 151], "4323": 75, "4375": 101, "43758721": 140, "4472136": 8, "4495": [107, 110], "45": 47, "4545": 88, "47112767": 171, "48": [49, 97], "4979": 75, "5": [1, 2, 4, 5, 10, 11, 12, 13, 18, 19, 20, 21, 22, 24, 27, 32, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 52, 54, 56, 58, 59, 60, 61, 67, 75, 76, 77, 78, 79, 80, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 117, 118, 132, 136, 138, 141, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 161, 162, 164, 166, 168, 169, 170, 178, 179, 180, 181, 182, 187, 190, 191, 192, 193, 196, 201, 206], "50": [49, 97, 132, 149, 151], "5000": [99, 101, 103], "5108": 103, "52359878": 170, "53": [47, 150], "543": [69, 70, 71, 72, 73, 74, 144], "54308063": 174, "545": 156, "5455": 88, "563": [69, 70, 73, 74], "57": 47, "57079633": [169, 170], "57366333": 143, "6": [5, 13, 22, 23, 35, 36, 37, 39, 44, 47, 49, 70, 74, 84, 85, 86, 89, 90, 91, 92, 95, 97, 99, 105, 106, 107, 108, 109, 110, 111, 114, 115, 117, 118, 124, 132, 136, 138, 144, 147, 148, 149, 150, 151, 154, 155, 156, 157, 158, 159, 160, 161, 164, 166, 178, 179, 180, 187, 190, 191, 192, 193, 196, 200, 201, 206], "6052": 103, "6065": 75, "6124": [105, 106, 107, 108, 109, 110, 111], "62": 47, "62686041": 184, "6321": [26, 75], "63245553": 14, "64": [21, 24, 47], "64589411": 140, "654": [69, 70, 71, 72, 73, 74, 144], "657": [69, 70, 73, 74], "6590": [33, 81], "6652": 81, "66666667": 13, "6667": 99, "6682": 99, "67": 151, "67326": 79, "6733": 31, "678": [69, 70, 71, 72, 73, 74], "68811989": 142, "69314718": 177, "7": [12, 22, 35, 36, 37, 39, 44, 47, 49, 50, 51, 76, 79, 80, 82, 84, 85, 86, 91, 92, 95, 97, 99, 100, 102, 106, 107, 109, 110, 114, 115, 117, 118, 138, 141, 144, 147, 149, 150, 151, 155, 157, 159, 176, 179, 187, 190, 191, 192, 204], "7001": 100, "70710678": [8, 183], "7147": 103, "7182818": 176, "7311": [33, 80, 81], "74": 151, "75": [49, 97, 102, 123], "7581": 31, "76159416": 189, "7616": [34, 82], "76219569": 174, "7635": 79, "772": 156, "78357324": 142, "78539816": 171, "79172504": 140, "8": [11, 15, 21, 22, 24, 35, 36, 37, 39, 44, 47, 49, 50, 76, 79, 80, 82, 84, 85, 86, 89, 90, 91, 92, 95, 97, 99, 102, 106, 107, 109, 110, 114, 115, 117, 118, 126, 127, 128, 129, 130, 131, 138, 141, 148, 149, 150, 151, 155, 156, 158, 159, 175, 179, 187, 190, 191, 192], "8005": 100, "8182": 88, "82": 47, "8413": [27, 76], "8584": 79, "876": [69, 70, 73, 74, 144], "8808": [33, 80, 81], "887": 156, "891773": 140, "89442719": 8, "9": [0, 1, 3, 15, 36, 39, 47, 49, 84, 85, 86, 91, 95, 97, 99, 106, 107, 109, 114, 115, 117, 123, 124, 126, 127, 128, 129, 130, 131, 133, 138, 141, 144, 147, 151, 155, 156, 157, 159, 185, 186], "90709145": 143, "9091": 88, "9120": 103, "9163": 103, "9486833": 14, "949e": [160, 161], "9526": 32, "9545": 76, "96366276": 140, "9640": 82, "96402758": 189, "99": 131, "9957": 103, "99734545": 143, "999": [0, 126, 127, 128, 129, 130], "A": [1, 3, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 47, 49, 50, 51, 55, 56, 58, 59, 88, 89, 90, 91, 92, 99, 100, 103, 105, 106, 107, 108, 109, 110, 111, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 138, 140, 141, 142, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206], "As": 143, "Be": 0, "By": [0, 2, 3, 4, 19, 120, 130, 136, 140, 141, 142, 144], "For": [2, 3, 4, 6, 7, 8, 10, 11, 12, 13, 15, 24, 26, 27, 29, 30, 31, 32, 34, 47, 49, 69, 70, 73, 74, 79, 84, 85, 86, 95, 97, 105, 106, 107, 108, 109, 110, 120, 122, 143, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 176, 177, 178, 179, 180, 183, 185, 187, 190, 191, 192, 198, 200, 202, 204, 205], "If": [0, 1, 2, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 18, 20, 21, 22, 23, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 44, 47, 49, 56, 58, 69, 70, 84, 85, 86, 95, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 126, 127, 131, 132, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206], "In": [3, 4, 13, 35, 36, 37, 100, 103, 135, 136, 137], "It": [1, 2, 3, 4, 13, 14, 15, 18, 20, 21, 22, 23, 24, 44, 47, 76, 78, 82, 95, 96, 99, 100, 101, 102, 103, 120, 121, 122, 123, 129, 131, 132, 133, 136, 143, 147, 148, 149, 152, 153, 154, 156, 157, 178, 180, 194, 196, 198, 199, 200, 201, 202, 203, 204, 206], "Its": [15, 145], "Near": 13, "No": 39, "Not": 96, "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206], "There": 201, "These": [4, 5, 8, 11, 14, 16, 88, 89, 90, 91, 92, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 132, 138, 145], "To": [3, 122, 142, 145, 160, 161], "With": [3, 39], "_": [11, 20, 21, 23, 24, 26, 27, 29, 30, 31, 32, 34, 49, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 123, 124, 126, 127, 128, 129, 131, 133, 149, 150, 151, 155, 190, 191], "_1": [8, 20, 21, 22, 23, 24, 47, 95, 155, 194, 196, 206], "_2": [8, 20, 21, 22, 23, 24, 47, 95, 155, 194, 196, 206], "__call__": [1, 18], "__getitem__": [0, 2, 3], "__init__": [0, 1, 2, 3, 4, 17, 18, 19, 20, 21, 22, 23, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 95, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 146], "__iter__": [0, 1], "__len__": [0, 1, 2, 3], "__repr__": 121, "__setattr__": 18, "_activ": 33, "_arraylik": [138, 159, 161, 164, 166], "_arraylikeint": 198, "_arrayorscalar": [17, 19, 138, 146, 193], "_base_dtyp": [158, 160, 163, 165], "_decai": 129, "_fanmod": [69, 70], "_grad_en": [135, 137], "_i": [8, 12, 33, 47, 81, 102, 105, 111, 113, 116, 149, 150, 152, 153, 155, 156, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 200, 202, 205, 206], "_in": [69, 70, 73, 74], "_j": [33, 81, 113, 116, 155, 179, 187, 191, 192], "_k": 203, "_modul": 18, "_n": [8, 20, 21, 22, 23, 24, 194, 196, 206], "_numpyarrai": 138, "_out": [69, 70, 73, 74, 200, 204], "_p": 12, "_pad": 198, "_paddingstr": [84, 85, 86], "_paramet": 18, "_reductiontyp": [50, 51, 52, 54, 55, 99, 100, 101, 102, 103], "_scalar": [67, 71, 72, 73, 74, 138, 158, 172], "_shapelik": [59, 111, 138, 141, 163, 165, 201, 202, 205], "_slope": 77, "_statedict": 121, "_t": [130, 131], "_tensor": [17, 19, 159, 193], "_tensorop": 146, "_u": 13, "_v": 13, "_valu": [172, 198], "_width": 198, "a_i": [152, 153, 156], "ab": 167, "abc": [2, 121], "abil": 4, "about": 4, "abov": [4, 135, 137, 143, 159, 162], "absolut": [11, 12, 52, 128, 168], "abstract": [2, 3, 120, 121, 122, 123, 131, 133], "abstractmethod": 121, "acceler": [79, 105, 106, 107, 123, 129, 131, 133], "accept": [96, 140, 146], "access": [0, 2, 3, 17, 19, 20, 21, 22, 23, 24, 201], "accord": [84, 85, 86, 95, 97, 100, 103, 124, 125, 126, 127, 128, 129, 130, 191], "accordingli": 7, "account": [11, 13, 14], "accumul": [123, 124, 125, 147, 148, 152, 153, 154, 157], "achiev": [35, 36, 37, 129], "across": [0, 17, 21, 24, 59, 73, 74, 105, 106, 107, 108, 109, 110, 111, 138, 140, 141, 142, 143, 144, 145, 160, 161, 179, 192], "act": 127, "activ": [4, 20, 24, 26, 27, 29, 30, 31, 32, 33, 34, 40, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 88, 89, 90, 91, 92, 99, 100, 103, 105, 106, 107, 111, 178, 180], "actual": [19, 99, 100, 102, 103, 146], "ad": [18, 20, 21, 22, 23, 24, 35, 36, 37, 47, 49, 50, 51, 56, 58, 59, 60, 61, 62, 64, 65, 66, 84, 85, 86, 99, 100, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 124, 125, 126, 127, 128, 129, 130, 131, 205], "adadelta": 134, "adagrad": [124, 134], "adam": [127, 128, 129, 130, 134], "adamax": 134, "adamw": 134, "adapt": [124, 125, 126, 129, 130, 131, 132], "add": [18, 20, 21, 24, 47, 49, 84, 85, 86, 95, 97, 111, 121, 123, 126, 131, 133, 136, 167, 198, 205], "add_modul": [18, 24], "add_param_group": 121, "addit": [4, 11, 18, 21, 24, 47, 49, 56, 58, 95, 97, 105, 106, 107, 108, 109, 110, 123, 129, 136, 145, 147, 203], "addition": 129, "address": [100, 103, 126, 127, 130], "adjust": [88, 105, 106, 107, 108, 109, 110, 111, 122, 126, 130, 131, 132, 196, 206], "advanc": [3, 13, 21, 24, 35, 36, 37, 120, 123], "advantag": 137, "affect": [135, 199, 202], "affin": [105, 106, 107, 108, 109, 110, 111], "after": [11, 19, 20, 21, 22, 23, 24, 44, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 88, 89, 90, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 113, 114, 115, 116, 117, 118, 127, 137, 146, 147, 148, 152, 153, 154, 156, 157, 198], "afterward": 137, "aggreg": [155, 200, 204], "aim": 4, "algebra": [4, 5, 162], "algorithm": [4, 11, 13, 14, 121, 122, 145], "align": [15, 150, 151], "all": [0, 3, 4, 14, 18, 20, 21, 22, 23, 24, 36, 37, 61, 62, 65, 66, 77, 78, 86, 114, 115, 118, 120, 121, 122, 123, 126, 131, 132, 133, 156, 178, 179, 180, 187, 190, 192, 194, 195, 196, 200, 202, 203, 204, 206], "allevi": 26, "alloc": [160, 161], "allow": [0, 1, 3, 4, 13, 14, 19, 20, 21, 22, 23, 24, 26, 29, 30, 33, 37, 39, 75, 76, 77, 79, 80, 81, 82, 84, 85, 86, 120, 124, 125, 136, 158, 163, 165, 166, 191, 193], "along": [33, 81, 150, 151, 155, 178, 179, 180, 187, 190, 192, 194, 196, 200, 203, 204, 205, 206], "alongsid": 17, "alpha": [26, 29, 31, 40, 75, 79, 88, 123, 131], "alpha_dropout": [45, 46, 88], "alphadropout": [93, 94], "alphadropoutmodel": 88, "also": [26, 27, 29, 30, 31, 32, 34, 47, 49, 129, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 161, 165, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 188, 189, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206], "alter": [24, 201], "altern": [1, 76, 124, 151], "alwai": [19, 199], "amount": [35, 36, 37, 60, 61, 62, 64, 65, 66, 129], "amsgrad": [126, 127], "an": [0, 1, 3, 4, 8, 10, 11, 13, 14, 16, 18, 20, 21, 22, 23, 24, 27, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 73, 74, 75, 80, 84, 85, 86, 88, 89, 90, 91, 92, 95, 97, 111, 113, 114, 115, 116, 117, 118, 121, 122, 123, 126, 129, 131, 137, 138, 146, 151, 159, 162, 172, 179, 187, 192, 194, 200, 204, 205], "analog": [200, 204], "analysi": [84, 85, 86, 110, 113, 115, 116, 118], "ani": [0, 1, 2, 3, 11, 13, 17, 18, 19, 20, 22, 23, 26, 27, 29, 30, 31, 32, 34, 40, 41, 47, 49, 56, 58, 80, 111, 120, 121, 135, 137, 143, 146, 158, 159, 160, 162, 163, 164, 165, 166, 178, 180, 191, 193, 194, 195, 196, 198, 200, 203, 204, 205, 206], "anoth": [23, 157, 164, 166], "appear": 121, "append": [21, 23, 24], "appli": [2, 4, 11, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 88, 89, 90, 91, 92, 95, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 123, 124, 125, 127, 128, 129, 130, 151, 198, 200], "applic": [13, 35, 58, 84, 85, 86, 95, 97, 145, 158, 165, 198], "approach": [3, 24, 127], "appropri": [13, 18, 22, 24, 84, 85, 86, 88, 89, 90, 100, 114, 115, 135, 137], "approx": 31, "approxim": [13, 27, 76, 114, 117], "ar": [1, 2, 3, 4, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 33, 35, 36, 37, 39, 47, 49, 69, 70, 72, 73, 74, 81, 84, 85, 86, 88, 89, 90, 91, 92, 95, 97, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 123, 126, 127, 129, 130, 131, 132, 133, 135, 137, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 168, 172, 176, 178, 179, 180, 181, 182, 187, 190, 191, 194, 200, 201, 204], "arang": 167, "arbitrari": [21, 96, 160, 161, 172, 177, 179, 183, 185, 187, 191, 192], "arcco": 167, "architectur": [20, 21, 22, 23, 24, 27, 78, 95, 96, 120], "arcsin": 167, "arctan": 167, "arg": [18, 96, 160], "argument": [3, 18, 24, 96, 140, 160, 191], "around": [8, 82], "arr": [138, 194, 196, 203, 206], "arrai": [4, 17, 19, 136, 138, 146, 151, 159, 164, 166, 193, 199, 200], "asarrai": 138, "asgd": 134, "assign": [18, 20, 22, 24, 100, 103], "associ": [22, 23], "assum": [0, 1, 121, 122, 135], "attempt": [20, 24], "attent": [23, 47], "attribut": 18, "audio": 84, "augment": [3, 145, 200, 204], "autodiff": 4, "autograd": 120, "automat": [4, 19, 20, 21, 22, 23, 120, 140, 141, 142, 144, 146, 160, 161, 166], "auxiliari": 17, "avail": 4, "averag": [17, 60, 61, 62, 102, 113, 114, 115, 123, 124, 126, 131, 179], "avg_pool": [113, 114, 115], "avg_pool1d": [46, 63], "avg_pool2d": [46, 63], "avg_pool3d": [46, 63], "avgpool1d": [94, 119], "avgpool1dmodel": 113, "avgpool2d": [94, 119], "avgpool2dmodel": 114, "avgpool3d": [94, 119], "avgpool3dmodel": 115, "avoid": [2, 3, 13, 22, 137], "ax": [5, 136, 178, 179, 180, 187, 191, 192, 200, 202, 204], "axi": [33, 81, 150, 151, 178, 179, 180, 187, 192, 194, 196, 198, 200, 202, 203, 204, 205, 206], "b": [5, 15, 47, 49, 72, 84, 85, 86, 95, 97, 136, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 194, 196, 203, 206], "b_i": [152, 153, 156], "back": [114, 115, 150, 155, 200, 204], "backpropag": [4, 7, 8, 10, 11, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 47, 49, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 137, 142, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 176, 178, 180, 193, 198, 200, 204], "backward": [4, 17, 19, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 146], "balanc": 101, "bar": 123, "base": [3, 5, 10, 11, 14, 15, 18, 20, 21, 22, 23, 39, 47, 88, 100, 101, 120, 121, 122, 123, 127, 131, 132, 133, 147, 148, 152, 153, 154, 156, 157, 166, 176, 177, 178, 180, 191, 198], "basic": [4, 35, 36, 37, 69, 70, 73, 74], "batch": [1, 2, 3, 5, 11, 14, 16, 35, 36, 37, 39, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 84, 85, 86, 95, 97, 99, 100, 103, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 130, 151], "batch_norm": [46, 57, 105, 106, 107], "batch_norm1": 24, "batch_norm2": 24, "batch_siz": [1, 2, 3], "batchnorm1d": [94, 112], "batchnorm1dmodel": 105, "batchnorm2d": [24, 94, 112], "batchnorm2dmodel": 106, "batchnorm3d": [94, 112], "batchnorm3dmodel": 107, "bceloss": [94, 104], "becaus": [2, 141], "becom": [12, 18, 124, 132], "befor": [11, 19, 123, 129, 137, 143, 198], "begin": [1, 12, 26, 29, 30, 31, 75, 77, 78, 79, 101, 102, 103, 113, 114, 115, 116, 117, 118, 130, 132, 136, 145, 152, 153, 155, 168, 172, 178, 180, 182, 198], "behav": [101, 190], "behavior": [21, 24, 135, 145, 151, 161], "being": [23, 88, 89, 90, 91, 92, 130, 135, 137, 194, 196, 206], "belong": 0, "below": [14, 151, 159, 162], "benefici": 24, "benefit": [26, 120, 129, 138], "bernoulli": [88, 89, 90, 91, 92], "best": [69, 70, 73, 74], "beta": [105, 106, 107, 108, 109, 110, 111, 126, 127, 128, 129, 130], "beta1": [126, 127, 128, 129, 130], "beta2": [126, 127, 128, 129, 130], "beta_1": [126, 127, 128, 129, 130], "beta_2": [126, 127, 128, 129, 130], "better": [10, 27, 69, 70, 73, 74, 108, 109, 110, 120, 127, 129, 131], "between": [18, 35, 36, 37, 39, 47, 52, 84, 85, 86, 88, 89, 90, 91, 92, 95, 99, 100, 101, 102, 103, 123, 131, 132, 133, 145, 147, 148, 151, 154, 157, 158, 192], "beyond": [4, 21], "bia": [35, 36, 37, 47, 49, 56, 58, 59, 84, 85, 86, 95, 97, 105, 106, 107, 108, 109, 110, 111, 126, 127, 128, 129, 130], "bias": [84, 85, 86, 97, 111, 120], "bias1": 22, "bias2": 22, "bilinear": [46, 48, 94, 98], "bilinearmodel": 95, "binari": [32, 50, 80, 88, 89, 90, 91, 92, 99], "binary_cross_entropi": [46, 53], "block": [18, 39, 84, 85, 86, 137], "block1": 120, "block2": 120, "bmatrix": 155, "bool": [1, 16, 18, 19, 40, 41, 42, 43, 44, 56, 58, 84, 85, 86, 95, 97, 105, 106, 107, 108, 109, 110, 111, 126, 127, 131, 135, 140, 141, 142, 144, 146, 158, 159, 160, 161, 162, 163, 164, 165, 166, 178, 179, 180, 187, 192, 193], "both": [35, 49, 60, 64, 76, 84, 85, 113, 114, 116, 117, 149, 150, 151, 155, 159], "bound": [70, 72, 74, 132, 144], "break": 120, "broadcast": [91, 92, 179, 187, 192, 201, 205], "buffer": [123, 129, 131, 133], "build": [4, 18, 21, 24, 120], "built": [3, 4, 24, 120], "c": [39, 42, 43, 44, 51, 55, 56, 58, 60, 61, 62, 64, 65, 66, 91, 92, 100, 103, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 136, 196, 206], "c_": [84, 85, 86], "c_in": [35, 36, 37], "c_out": [35, 36, 37], "calcul": [0, 1, 4, 5, 19, 124, 125, 128, 129, 130, 137, 141, 146], "calculu": [6, 13], "call": [1, 18, 135, 147, 148, 151, 152, 153, 154, 156, 157], "callabl": 121, "can": [0, 2, 3, 4, 6, 8, 10, 11, 13, 14, 16, 17, 19, 20, 21, 22, 23, 24, 29, 35, 36, 37, 76, 77, 82, 84, 85, 86, 108, 109, 110, 114, 115, 116, 117, 118, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 136, 137, 138, 144, 145, 146, 151, 160, 161, 162, 163, 165, 166, 179, 187, 192, 196, 198, 200, 201, 204, 205, 206], "cannot": [7, 8, 10, 11, 14, 15, 16], "capabl": [4, 158, 159, 162, 163, 164, 165, 166], "captur": [39, 84, 85, 86, 95], "care": 137, "case": [3, 12, 26, 29, 30, 31, 75, 77, 78, 79, 101, 102, 103, 113, 114, 115, 116, 117, 118, 120, 125, 130, 132, 136, 152, 153, 168, 172, 178, 180, 182, 198], "caus": [3, 13, 123, 131, 133], "cautiou": 0, "cdot": [6, 7, 10, 11, 12, 15, 26, 27, 29, 31, 32, 35, 36, 37, 47, 49, 60, 61, 62, 64, 65, 66, 73, 74, 76, 80, 88, 95, 97, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 124, 125, 126, 127, 128, 129, 130, 132, 149, 150, 151, 154, 156], "center": [82, 131], "central": 138, "certain": [7, 27, 47, 95, 126, 127, 135, 178, 180], "chain": [10, 11, 24], "chang": [52, 101, 132, 136, 137, 199, 201, 205], "channel": [35, 36, 37, 39, 42, 43, 44, 56, 58, 60, 61, 62, 64, 65, 66, 84, 85, 86, 91, 92, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118], "check": 135, "checkpoint": 122, "choleski": 9, "chosen": 88, "clariti": 138, "class": [3, 4, 33, 51, 55, 120, 122, 159, 162, 193], "classif": [32, 33, 50, 51, 55, 80, 81, 99, 100, 103], "cleaner": [1, 137, 151], "clear": [19, 146, 160, 161], "clearli": 138, "clip": [132, 167], "close": [10, 13, 79, 99, 131], "closer": 75, "closur": [121, 122], "co": [167, 183], "code": [11, 20, 22, 24, 135, 137, 138, 145], "coeffici": [15, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133], "col": 39, "collect": [5, 20, 21, 23, 24, 122], "column": [7, 8, 10, 14, 15, 16, 39, 162, 196], "combin": [1, 3, 21, 24, 26, 27, 76, 100, 120, 129, 130, 179, 187, 192, 194], "combined_dataset": [0, 1], "common": [39, 122], "commonli": [4, 27, 32, 33, 34, 35, 37, 47, 54, 56, 58, 73, 74, 81, 86, 99, 102, 103, 113, 114, 115, 116, 117, 118, 136, 138, 163, 202], "compar": [145, 203], "compat": [5, 96, 111, 120, 136, 145], "complex": [2, 3, 4, 8, 20, 21, 24, 30, 78, 116, 118, 120, 122], "compon": [13, 18, 21, 122, 146], "compos": [84, 85, 86, 113, 114, 115, 116, 117, 118, 120], "comprehens": 3, "comput": [4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 39, 47, 49, 50, 51, 52, 54, 55, 56, 58, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 131, 135, 136, 137, 138, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 168, 169, 170, 171, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 198, 200, 204], "computation": [3, 13], "compute_loss": [122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "concaten": [0, 35, 36, 37, 196, 197, 203, 206], "concept": [4, 13], "condit": [6, 7, 10], "configur": 23, "conjunct": [39, 103], "connect": [49, 84, 85, 86, 97], "consid": [3, 10, 13, 24, 69, 70, 73, 74, 120, 132, 135, 160, 161], "consider": 13, "consist": [2, 17, 138, 143, 145, 198], "consistent_tensor": 145, "constant": [50, 51, 56, 58, 59, 68, 79, 99, 100, 105, 106, 107, 108, 109, 110, 111, 124, 125, 126, 127, 128, 129, 130, 131, 138, 198], "constant_pad": 198, "constraint": 1, "construct": [4, 21, 120, 159, 200, 204], "contain": [1, 7, 8, 13, 14, 15, 16, 18, 20, 21, 22, 23, 24, 33, 39, 47, 49, 50, 51, 55, 99, 100, 103, 121, 147, 148, 149, 150, 152, 153, 154, 155, 157, 158, 161, 168, 169, 170, 171, 173, 174, 175, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 195], "context": [135, 137], "contextmanag": 137, "contigu": 199, "continu": [77, 142], "contrast": [108, 109, 110], "contribut": [88, 89, 90, 91, 92, 113, 116, 117, 118, 123, 129, 190], "control": [75, 101, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 145], "conv": [106, 107], "conv1": [24, 84, 85, 86, 113, 114, 115, 116, 117, 118], "conv1d": [38, 46, 87, 94, 113, 116], "conv1dmodel": 84, "conv2": [24, 84, 85, 86], "conv2d": [21, 24, 38, 46, 87, 94, 106, 114, 117, 120], "conv2dmodel": 85, "conv3d": [38, 46, 87, 94, 107, 115, 118], "conv3dmodel": 86, "conv_lay": 21, "convblock": 120, "convent": 151, "converg": [13, 82, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133], "convers": [100, 103], "convert": [17, 19, 33, 81, 146], "convnetwork": 21, "convolut": [21, 35, 36, 37, 39, 84, 85, 86, 114, 115, 117, 118, 198], "convolv": [35, 36, 37, 84, 85, 86], "core": [0, 1, 2, 3, 18, 120, 121, 146], "correct": [20, 100, 103, 126, 127, 128, 129, 130], "correctli": [13, 18, 20, 21, 22, 23, 24, 100, 103, 145], "correspond": [0, 1, 2, 8, 20, 22, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 47, 49, 78, 81, 95, 97, 105, 106, 107, 108, 109, 110, 114, 115, 123, 131, 133, 149, 150, 152, 153, 156, 176, 177, 183, 185, 196, 198, 200, 204, 206], "cosh": [167, 184, 189], "cosin": [169, 173, 174, 183], "could": 18, "count": 194, "cover": [5, 35, 36, 37], "creat": [2, 3, 4, 17, 18, 21, 24, 120, 136, 145, 158, 162, 163, 164, 165, 166, 203], "creation": [21, 24], "criterion": [99, 100, 101, 102, 103], "critic": [13, 122, 145], "cross": [50, 51, 99, 100], "cross_entropi": [46, 53], "crossentropyloss": [94, 104], "cube": 167, "cumul": [27, 76], "current": [18, 123, 126, 132, 135], "custom": [4, 17, 20, 21, 22, 23, 24, 75, 77, 120, 145, 162], "custommodul": 17, "customnetwork": 20, "customparametermodel": [22, 23], "d": [37, 44, 62, 66, 107, 110, 111, 115, 118, 136, 159], "d_": [37, 62, 66, 86, 115, 118], "d_1": 111, "d_2": 111, "d_n": 111, "d_out": [37, 62, 66], "dampen": [123, 131, 133], "data": [4, 11, 17, 19, 23, 34, 35, 37, 39, 43, 44, 49, 78, 82, 84, 85, 86, 97, 110, 113, 115, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 138, 145, 146, 147, 148, 154, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 193, 198, 199, 200, 201, 202, 204], "dataload": [2, 3], "dataset": [3, 125, 137], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 155, "debug": [24, 135, 143], "decai": [123, 124, 125, 126, 127, 128, 129, 130, 131, 133], "decompos": [6, 14, 16], "decomposit": [5, 6, 10, 13, 14, 16], "decoupl": [124, 125, 127, 128, 129, 130], "decreas": [126, 127, 132], "deep": [1, 3, 4, 56, 76, 79, 120, 145], "deeper": [4, 79], "def": [0, 1, 2, 3, 4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 95, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 138, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206], "default": [1, 12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 33, 35, 36, 37, 40, 41, 42, 43, 44, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 77, 81, 84, 85, 86, 88, 89, 90, 91, 92, 95, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 122, 129, 135, 140, 141, 142, 144, 146, 158, 159, 160, 161, 162, 163, 164, 165, 166, 178, 179, 180, 187, 191, 192, 193, 194, 196, 198, 200, 203, 206], "defin": [1, 3, 4, 20, 21, 22, 23, 24, 76, 99, 100, 101, 102, 103, 113, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 141, 142, 156, 161, 172, 191], "definit": [4, 6], "delai": 123, "delta": [33, 52, 81, 101, 124], "delta_": [33, 81], "demonstr": [4, 5, 120, 138], "denomin": [56, 58, 59, 105, 106, 107, 108, 109, 110, 111, 124, 125, 126, 127, 128, 129, 130, 131, 148], "denot": [11, 80, 84, 85, 86, 88, 89, 90, 91, 92, 191], "dens": [4, 125], "dense1": 4, "dense2": 4, "densiti": [27, 76], "depend": [4, 11, 12, 23, 50, 51, 52, 54, 55, 84, 149, 159, 178, 180, 200, 204], "depth": [21, 37, 44, 62, 66, 86, 107, 110, 115, 118], "depthwis": [35, 36, 37], "deriv": [13, 14, 33, 76, 81, 82, 84, 85, 86, 95, 97], "descend": 16, "descent": [4, 123, 133], "describ": [7, 8], "deseri": 17, "design": [3, 4, 5, 19, 21, 22, 23, 24, 26, 31, 79, 88, 120, 138], "desir": [17, 191, 193], "destin": 18, "det": [5, 9], "det_a": 7, "detail": [4, 122, 145, 151], "determin": [0, 4, 5, 6, 7, 69, 70, 73, 74, 84, 85, 86, 114, 115, 117, 118, 131, 135, 140, 141, 142, 144, 160, 161], "develop": [4, 120, 145], "deviat": [69, 71, 73], "diag": [13, 167], "diagon": [13, 14, 16, 159, 162, 190], "diagonaliz": 8, "dict": [18, 20, 22, 96, 121], "dictionari": [18, 19, 20, 22, 24, 121], "differ": [0, 11, 21, 24, 33, 47, 81, 95, 102, 122, 136, 143, 145, 157, 166, 192, 202], "differenti": [4, 6, 15, 76, 120, 140, 141, 142, 144, 146, 158, 160, 161, 163, 165], "dilat": [35, 36, 37, 84, 85, 86], "dilation_height": 39, "dilation_width": 39, "dim": [100, 103], "dimens": [7, 8, 10, 11, 14, 15, 16, 19, 33, 47, 49, 56, 58, 59, 81, 84, 85, 86, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 136, 138, 140, 144, 146, 150, 160, 178, 179, 180, 187, 190, 191, 192, 194, 196, 198, 200, 202, 203, 204, 205, 206], "dimension": [11, 13, 14, 16, 35, 36, 37, 60, 61, 62, 64, 65, 66, 84, 85, 86, 90, 91, 92, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 136, 150, 151, 155, 159, 176, 179, 187, 190, 192, 195, 199, 200, 202, 204], "diminish": 125, "direct": [8, 99, 100, 101, 102, 103, 123, 131, 132, 133], "directli": [20, 21, 22, 23, 124, 125, 127, 128, 129, 130, 143, 145, 193], "directori": 3, "disabl": [135, 137], "discontinu": 182, "discrep": [99, 100, 103], "discret": [141, 145], "disk": 3, "distribut": [27, 33, 69, 70, 71, 72, 73, 74, 76, 81, 84, 85, 86, 88, 89, 90, 91, 92, 95, 97, 100, 103, 113, 114, 115, 140, 141, 142, 144, 145, 179, 187, 190, 192, 203], "div": 167, "divid": [1, 13, 21, 24, 33, 35, 36, 37, 81, 99, 100, 101, 102, 103, 148], "divis": [4, 13, 35, 36, 37, 88, 89, 90, 91, 92, 124, 125, 126, 127, 128, 129, 130, 131, 148], "do": [13, 15, 17, 20, 21, 22, 23, 40, 41, 42, 43, 120, 130, 135, 166, 190, 198], "document": [4, 122, 138, 145], "doe": [4, 11, 12, 13, 14, 16, 17, 20, 21, 22, 23, 24, 74, 126, 127, 132, 135, 137, 140, 141, 142, 143, 144, 158, 159, 160, 161, 162, 163, 164, 165, 166, 201], "doesn": 137, "don": 137, "dot": [8, 11, 20, 21, 22, 23, 24, 111, 116, 117, 118, 150, 155, 167, 194, 196, 203, 206], "down": [3, 120], "drawback": 26, "drawn": [140, 141, 142, 144, 145], "drop": [88, 89, 90, 91, 92], "dropout": [27, 40, 42, 43, 44, 88, 90, 91, 92], "dropout1d": [45, 46, 93, 94], "dropout1dmodel": 90, "dropout2d": [45, 46, 93, 94], "dropout3d": [45, 46, 93, 94], "dropoutmodel": 89, "dtype": [17, 19, 146, 158, 159, 160, 161, 162, 163, 164, 165, 166, 193], "due": [11, 13, 35, 36, 78], "duplic": [20, 22], "dure": [3, 4, 7, 8, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 33, 40, 41, 42, 43, 44, 56, 58, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 135, 137, 146, 147, 178, 179, 180, 187, 192], "dy": [29, 77], "dynam": [0, 2, 3, 18, 21, 22, 23, 24, 111, 125, 130, 135], "dynamicnetwork": 21, "e": [0, 7, 8, 10, 11, 14, 16, 17, 33, 80, 81, 88, 100, 121, 124, 131, 132, 162, 174, 176, 177, 184, 189, 190, 194], "each": [1, 2, 3, 8, 11, 13, 14, 16, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 47, 49, 56, 58, 78, 81, 84, 85, 86, 88, 89, 90, 91, 92, 95, 97, 99, 100, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 124, 125, 126, 127, 128, 129, 130, 131, 132, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 179, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 194, 196, 198, 200, 203, 204, 206], "earli": 130, "eas": 4, "easi": [2, 3, 4, 19, 20, 22], "easier": [3, 20, 21, 24], "easili": [19, 23], "economi": 16, "edg": 198, "educ": 4, "effect": [20, 21, 22, 23, 24, 33, 35, 36, 37, 39, 75, 76, 78, 80, 81, 82, 105, 106, 107, 108, 109, 110, 111, 135, 136, 137, 196, 206], "effici": [1, 2, 3, 4, 5, 10, 15, 39, 100, 120, 137], "eig": 9, "eigenvalu": [8, 14], "eigenvector": 8, "eigval": 8, "eigvec": 8, "either": [49, 138, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 193], "element": [0, 13, 14, 19, 23, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 78, 81, 84, 85, 86, 88, 89, 90, 91, 92, 99, 100, 101, 102, 103, 111, 113, 114, 115, 116, 117, 118, 136, 146, 147, 148, 151, 152, 153, 154, 155, 156, 157, 158, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 195, 198, 200, 201, 202, 204], "elementwise_affin": 111, "elsewher": [116, 117, 118, 162], "elu": [28, 46, 83, 94], "elumodel": 75, "empti": [18, 24, 167], "empty_lik": 167, "enabl": [0, 1, 2, 3, 4, 11, 16, 18, 19, 20, 21, 22, 23, 78, 84, 85, 86, 95, 97, 120, 122, 135, 137, 140, 141, 142, 144, 146], "encapsul": [120, 146], "encod": [100, 103], "encourag": [89, 90, 91, 92, 99, 100, 103, 126], "end": [12, 26, 29, 30, 31, 75, 77, 78, 79, 101, 102, 103, 113, 114, 115, 116, 117, 118, 130, 132, 152, 153, 155, 158, 168, 172, 178, 180, 182, 194, 198], "enforc": [18, 20, 22], "engin": 13, "enhanc": [20, 22], "ensur": [3, 13, 14, 15, 17, 18, 19, 20, 21, 22, 23, 24, 33, 77, 81, 88, 89, 90, 91, 92, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 120, 121, 123, 124, 126, 127, 129, 130, 131, 132, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 156, 179, 187, 192, 198], "enter": 137, "entir": [3, 42, 43, 44, 91, 92, 145], "entri": 202, "entropi": [50, 51, 99, 100], "environ": 4, "ep": [50, 51, 56, 58, 59, 99, 100, 105, 106, 107, 108, 109, 110, 111, 124, 125, 126, 127, 128, 129, 130, 131], "epoch": [1, 3], "epsilon": [99, 100, 105, 106, 107, 108, 109, 110, 111, 124, 125, 126, 127, 128, 129, 130, 131], "equal": [11, 113, 114, 115], "equat": [8, 13, 15], "equival": [151, 190, 199], "error": [0, 3, 8, 10, 18, 21, 22, 23, 24, 27, 52, 54, 76, 99, 100, 101, 102, 120, 121, 137, 138], "especi": [3, 20, 22, 23, 80, 136, 137, 138, 143], "essenti": [1, 3, 4, 5, 11, 13, 36, 39, 120, 143, 145, 178], "estim": [102, 126, 127, 128, 129, 130, 131], "eta": 132, "eta_": 132, "etc": 99, "euclidean": 12, "evalu": [18, 56, 58, 88, 89, 90, 91, 92, 105, 106, 107, 108, 109, 110], "even": [124, 137, 158, 159, 162, 163, 164, 165, 166], "evenli": 158, "everi": 1, "everywher": 182, "exact": [18, 21, 191], "exactli": 24, "exampl": 151, "except": [0, 182, 194, 196, 206], "exclus": [141, 144, 158], "execut": [21, 137], "exist": [15, 20, 22, 24, 194], "exit": 137, "exp": [26, 31, 32, 34, 75, 79, 167], "expand": [39, 200, 204], "expect": [6, 21, 24, 88, 89, 90, 91, 92, 111, 120, 138], "expens": 3, "experi": [4, 143, 145], "experiment": 145, "explan": [11, 13, 123], "explicit": 24, "explicitli": [20, 22], "explod": [79, 105, 106, 107], "explor": [120, 145], "expon": [11, 156], "exponenti": [26, 31, 33, 75, 79, 81, 88, 126, 127, 128, 129, 130, 176], "extens": 122, "extern": 4, "extract": [39, 86, 113, 115, 159, 178, 180], "extrem": 13, "ey": 167, "f": [1, 4, 22, 23, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 81], "facilit": [20, 24, 33, 81, 84, 85, 86, 120, 122], "factor": [26, 35, 36, 37, 39, 73, 74, 123, 130, 131, 132, 133, 138], "failur": [20, 21, 22, 23, 120], "fals": [1, 16, 17, 18, 19, 40, 41, 42, 43, 44, 56, 58, 67, 69, 70, 71, 72, 73, 74, 84, 85, 86, 95, 97, 126, 127, 131, 135, 140, 141, 142, 144, 146, 158, 159, 160, 161, 162, 163, 164, 165, 166, 178, 179, 180, 187, 192, 193], "fan": [69, 70, 73, 74], "fan_in": [69, 70], "fan_out": [69, 70], "fast": 130, "faster": [125, 129, 137], "fc": [21, 85, 86, 113, 114, 115, 116, 117, 118], "fc1": [20, 24, 76, 78, 79, 80, 82, 97], "fc2": [20, 24, 76, 78, 79, 80, 82, 97], "featur": [3, 47, 49, 56, 86, 89, 90, 91, 92, 95, 97, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 125], "fed": 3, "feed": [3, 146], "fetch": 0, "fewer": 1, "file": 3, "fill": [67, 71, 72, 140, 141, 142, 144, 163, 164, 165, 166], "filter": [35, 36, 37, 39, 85, 86], "filter_height": 39, "filter_s": 39, "filter_width": 39, "final": [20, 21, 22, 23, 24], "find": [15, 178, 180], "finish": 137, "first": [8, 21, 22, 47, 95, 126, 127, 128, 129, 130, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 206], "fit": 120, "fix": [21, 198], "flatten": [24, 39, 155, 197, 199, 200], "flexibl": [1, 3, 4, 20, 21, 22, 23, 24, 120, 122, 138, 163, 164], "float": [2, 17, 19, 26, 29, 40, 41, 42, 43, 44, 50, 51, 52, 56, 58, 59, 67, 71, 72, 73, 74, 75, 77, 88, 89, 90, 91, 92, 99, 100, 101, 105, 106, 107, 108, 109, 110, 111, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 144, 146, 158, 161, 172, 193], "float32": [17, 19, 146, 158, 159, 162, 163, 165, 193], "float64": [166, 193], "flow": [24, 74, 76, 80, 82, 84, 85, 86, 95, 97, 135], "fly": [2, 3], "fname": 3, "focu": 4, "focus": 4, "follow": [0, 4, 5, 8, 14, 15, 16, 26, 27, 29, 30, 31, 32, 33, 34, 47, 49, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 138, 145, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 178, 180, 201], "form": [14, 155, 200, 204], "format": [2, 3, 100, 103], "formul": 27, "formula": [8, 16, 33, 81, 101, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 151, 192], "forward": [4, 17, 18, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "found": 4, "foundat": [18, 120, 122, 146], "four": 198, "frac": [6, 7, 8, 10, 11, 12, 13, 15, 16, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 47, 49, 60, 61, 62, 64, 65, 66, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 124, 125, 126, 127, 128, 129, 130, 131, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206], "frame": 44, "framework": [4, 100, 103, 105, 106, 107, 108, 109, 110, 121, 122], "frequent": [100, 103], "from": [0, 1, 2, 3, 4, 11, 13, 17, 18, 19, 20, 21, 22, 23, 24, 39, 47, 56, 58, 67, 69, 70, 71, 72, 73, 74, 84, 85, 86, 88, 89, 90, 91, 92, 95, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 120, 121, 123, 124, 125, 127, 128, 129, 130, 131, 132, 133, 136, 137, 138, 140, 141, 142, 144, 145, 146, 151, 152, 153, 157, 159, 178, 179, 180, 187, 192, 194, 196, 200, 202, 203, 204, 206], "full": 16, "full_matric": 16, "fulli": [5, 49, 97, 145], "function": [3, 4, 5, 18, 20, 21, 22, 23, 24, 75, 76, 77, 78, 79, 80, 81, 82, 88, 89, 90, 91, 92, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 120, 122, 138, 145], "fundament": [4, 49, 97], "further": [4, 145, 179, 187, 192], "futur": 96, "g": [0, 7, 8, 11, 14, 16, 88, 121, 124, 131, 194], "g_": 125, "g_t": 131, "gain": [73, 74], "gamma": [105, 106, 107, 108, 109, 110, 111], "gaussian": [27, 76], "gelu": [28, 46, 83, 94], "gelunetwork": 76, "gener": [13, 88, 89, 90, 91, 92, 109, 127, 129, 130, 137, 140, 141, 142, 143, 144, 145, 150, 158, 160, 161], "give": [4, 123, 131], "given": [7, 8, 11, 13, 14, 16, 39, 99, 100, 103, 121, 135, 164, 166], "global": [0, 135, 137, 143, 145], "goal": [99, 100, 103], "grad": [17, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 39, 47, 49, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 122, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206], "grad_output": 11, "gradient": [4, 5, 17, 19, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 140, 141, 142, 144, 158, 159, 160, 161, 162, 163, 164, 165, 166, 193], "graph": [4, 74, 146, 158, 159, 162, 163, 164, 165, 166], "greater": 172, "group": [21, 35, 36, 37, 84, 85, 86, 121, 122], "group1": 21, "group2": 21, "guarante": 143, "h": [36, 37, 39, 43, 44, 61, 62, 65, 66, 106, 107, 109, 110, 115, 118], "h_": [36, 37, 61, 62, 65, 66, 85, 86, 114, 115, 117, 118], "h_out": [36, 37, 61, 62, 65, 66], "h_stack": 196, "ha": [0, 8, 24, 35, 36, 37, 99, 100, 105, 106, 107, 108, 109, 110, 111, 121, 122, 151, 190, 194, 196, 203, 206], "half": 185, "hand": 15, "handl": [0, 3, 4, 13, 18, 20, 21, 22, 23, 24, 100, 103, 120, 122, 137], "hardwar": 4, "hat": [126, 127, 128, 129, 130], "have": [0, 1, 7, 8, 10, 13, 14, 16, 19, 21, 23, 24, 36, 37, 74, 120, 162, 163, 164, 165, 166, 178, 180, 194, 196, 202, 203, 206], "height": [36, 37, 39, 43, 44, 61, 62, 65, 66, 85, 86, 106, 107, 109, 110, 114, 115, 117, 118], "help": [4, 29, 31, 44, 75, 77, 79, 82, 105, 106, 107, 113, 114, 116, 117, 123, 126, 127, 129, 135, 136, 137, 138], "henc": 201, "here": [3, 6, 18, 47, 120, 122, 136, 137, 138, 145], "hidden": 21, "hidden_s": 21, "hierarch": [21, 24, 120], "hierarchi": 85, "hierarchicalnetwork": 21, "high": [4, 141, 144], "higher": [100, 103, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 150, 151, 155, 176], "highest": 141, "highlight": [116, 117, 118], "hint": 138, "histor": 125, "histori": [140, 141, 142, 144, 158, 159, 160, 161, 162, 163, 164, 165, 166], "hold": [20, 21, 22, 23], "horizont": [196, 203], "hot": [100, 103], "how": [2, 3, 4, 21, 24, 120, 138], "howev": [17, 74], "hstack": 197, "huber": [52, 101], "huber_loss": [46, 53], "huberloss": [94, 104], "huberregressionmodel": 101, "hyperbol": [34, 82, 174, 184, 189], "hyperparamet": [121, 123], "i": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 169, 170, 171, 172, 173, 174, 176, 177, 178, 179, 180, 182, 183, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206], "ideal": [4, 24], "ident": [10, 11, 94, 98, 143, 145, 162, 201], "identifi": 22, "idx": [2, 3], "ii": 190, "ij": [33, 81, 149, 150, 151, 155], "ik": [149, 150, 151], "ill": [7, 13], "imag": [3, 36, 58, 85, 109], "image_dir": 3, "image_path": 3, "imagedataset": 3, "imageio": 3, "imbal": [100, 103], "impact": 129, "implement": [2, 3, 4, 13, 18, 39, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 196, 206], "impli": [84, 85], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 41, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206], "improp": [21, 24, 145], "improv": [56, 76, 79, 82, 123, 124, 125, 126, 127, 128, 129, 130, 131, 138], "imread": 3, "in1_featur": [47, 95], "in2_featur": [47, 95], "in_channel": [21, 24, 84, 85, 86, 106, 107, 113, 114, 115, 116, 117, 118, 120], "in_featur": [20, 21, 24, 49, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 88, 89, 90, 95, 97, 99, 100, 101, 102, 103, 105, 108, 111, 113, 114, 115, 116, 117, 118], "includ": [3, 4, 5, 11, 12, 18, 19, 21, 23, 24, 120, 121, 122, 129, 138, 145, 151, 198], "inclus": [19, 22, 141, 144], "incom": [49, 97], "incomplet": 2, "incompletedataset": 2, "incorpor": [16, 76], "increas": [35, 36, 37, 39, 125, 132, 136, 196, 206], "independ": [21, 35, 36, 37, 88, 89, 90, 91, 92, 111, 151, 161], "index": [0, 2, 136, 158, 159, 162, 201], "indexerror": 0, "indic": [0, 1, 19, 21, 23, 24, 51, 55, 100, 103, 113, 135, 146], "individu": [3, 21, 24, 101, 111, 122, 125, 132], "induc": [31, 79], "inf": 188, "infer": [21, 24, 137], "infin": [14, 16, 128], "inform": [4, 17, 122, 124, 137], "infti": [12, 130], "inherit": [1, 123, 131, 133], "init": 68, "initi": [1, 17, 19, 20, 21, 22, 23, 24, 67, 69, 70, 71, 72, 73, 74, 84, 85, 86, 95, 97, 99, 100, 101, 102, 103, 105, 106, 107, 111, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 140, 143, 144, 145, 158, 162, 163, 164, 165, 166, 193], "initial_accumulator_valu": 125, "inner": [4, 149, 167], "input": [4, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 138, 145, 146, 147, 149, 150, 151, 155, 159, 161, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206], "input1": 95, "input2": 95, "input_": [26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66], "input_1": 47, "input_2": 47, "input_data": [75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 113, 114, 115, 116, 117, 118], "input_s": [21, 23, 81, 100, 103], "input_tensor": [4, 17, 20, 21, 22, 23, 24, 33, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120], "insid": [3, 135, 137], "insight": 4, "inspect": [18, 19, 24, 121], "instabl": [13, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133], "instal": 4, "instanc": [0, 1, 4, 18, 19, 20, 22, 23, 24, 58, 108, 109, 110, 111, 121, 193, 200, 204], "instance_norm": [46, 57, 108, 109, 110], "instancenorm1d": [94, 112], "instancenorm1dmodel": 108, "instancenorm2d": [94, 112], "instancenorm3d": [94, 112], "instanti": 2, "instead": [4, 20, 21, 22, 23, 24, 69, 70, 73, 74, 126, 127, 128, 137, 138, 160, 161], "int": [0, 1, 2, 11, 12, 17, 19, 33, 35, 36, 37, 39, 59, 60, 61, 62, 64, 65, 66, 67, 71, 72, 73, 74, 81, 84, 85, 86, 95, 97, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 126, 127, 128, 129, 130, 132, 140, 141, 142, 143, 144, 146, 158, 159, 160, 162, 163, 165, 172, 178, 179, 180, 187, 191, 192, 193, 194, 198, 200, 201, 202, 203, 204, 205], "integ": [1, 3, 11, 35, 36, 37, 84, 85, 86, 111, 114, 115, 116, 117, 118, 138, 141, 142, 144, 145, 160, 163, 165, 179, 187, 191, 192, 198, 200, 201, 204], "integr": [1, 2, 5, 19, 21, 23, 24, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 95, 97, 113, 114, 115, 116, 117, 118], "intend": [17, 22, 23], "intens": 13, "intent": 138, "interact": [47, 95, 120, 145], "interfac": [2, 18, 21, 122], "interfer": [135, 137], "intermedi": 13, "intern": [20, 21, 22, 23, 24, 100, 103, 120], "interpret": [33, 81, 138, 194], "interv": [140, 144, 158], "introduc": [30, 76, 78, 80, 82, 88, 89, 90, 91, 92], "introspect": 24, "intuit": [4, 20, 22, 120], "inv": 9, "inv_a": 10, "invari": [114, 117], "invers": [4, 7, 10, 11, 13, 125, 169, 170, 171], "invert": [7, 10, 11, 15], "involv": [6, 7, 8, 10, 13, 14, 16, 26, 27, 29, 30, 31, 32, 34, 47, 49, 84, 85, 86, 95, 97, 138, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 166, 176, 177, 178, 180, 183, 185, 198, 200, 204], "is_leaf": 146, "issu": [3, 79, 105, 106, 107, 126, 127], "item": 102, "iter": [0, 1, 2, 3, 17, 18, 21, 23, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 158], "ith": [33, 81], "its": [11, 13, 17, 20, 21, 22, 23, 35, 36, 37, 39, 74, 76, 78, 116, 117, 118, 120, 121, 124, 132, 135, 136, 137, 158, 160, 161, 165, 178, 180, 193, 201], "itself": [6, 11, 20, 21, 22, 23], "j": [33, 81, 105, 106, 107, 108, 109, 110, 113, 114, 116, 117, 203], "jk": 150, "join": [3, 194], "k": [11, 35, 84, 100, 106, 107, 109, 110, 113, 116, 117, 149, 150, 159, 162, 194], "k_d": [37, 86, 115, 118], "k_h": [36, 37, 85, 86, 114, 115, 118], "k_w": [36, 37, 85, 86, 114, 115, 118], "kaim": [69, 70, 73, 74], "kaiming_norm": 68, "kaiming_uniform": 68, "keep": [18, 78, 124, 137, 201], "keep_grad": [19, 140, 141, 142, 144, 146, 158, 159, 160, 161, 162, 163, 164, 165, 166, 193], "keep_var": 18, "keepdim": [178, 179, 180, 187, 192], "kei": [18, 20, 22, 24, 121], "kept": [179, 187, 192], "kernel": [35, 36, 37, 39, 60, 61, 62, 64, 65, 66, 84, 85, 86, 114, 115, 118], "kernel_s": [21, 24, 60, 61, 62, 64, 65, 66, 84, 85, 86, 106, 107, 113, 114, 115, 116, 117, 118], "keyerror": 18, "keyword": [18, 96], "kj": [149, 151], "kroneck": [33, 81], "kwarg": [18, 96], "l": [6, 13, 35, 42, 60, 64, 88, 89, 90, 91, 92, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111], "l2": [123, 124, 125, 126, 127, 128, 129, 130, 131, 133], "l_": [35, 60, 64, 84, 113, 116], "l_out": [35, 60, 64], "label": [99, 100, 103], "lambd": 123, "lambda": [8, 31, 79, 123, 127], "lambda_1": 8, "lambda_2": 8, "lambda_i": 8, "lambda_n": 8, "languag": [84, 95, 113, 116], "larg": [0, 3, 13, 101, 120, 123, 126, 127, 128, 131, 132, 133, 137], "larger": [20, 22, 35, 36, 37, 39, 123, 152, 198], "largest": 178, "last": [1, 33, 59, 81, 150, 151, 194], "layer": [4, 18, 20, 21, 24, 33, 49, 56, 58, 59, 69, 70, 73, 74, 81, 84, 85, 86, 95, 96, 97, 103, 111, 113, 114, 115, 116, 117, 118, 120, 145, 198], "layer_group": 21, "layer_norm": [46, 57, 111], "layer_sequ": [21, 24], "layernorm": [94, 112], "layernormmodel": 111, "lead": [21, 24, 76, 108, 109, 110, 111, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 145], "leaf": 146, "leaki": [29, 77], "leaky_relu": [28, 46, 77], "leakyrelu": [83, 94], "learn": [1, 3, 4, 11, 13, 20, 21, 22, 23, 30, 33, 75, 77, 78, 81, 84, 85, 86, 89, 90, 91, 92, 95, 97, 120, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 143], "learnabl": [17, 18, 19, 56, 58, 59, 84, 85, 86, 95, 97, 105, 106, 107, 108, 109, 110, 111, 120], "least": [13, 14, 16, 190], "left": [11, 12, 13, 16, 27, 33, 76, 81, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 116, 117, 118], "leftarrow": 129, "len": [0, 1, 2, 3], "length": [21, 35, 42, 60, 64, 84, 96, 105, 108, 113, 116, 198], "leq": [101, 130, 156, 172], "less": [0, 26, 29, 52, 75, 77, 100, 101, 103, 172], "let": 8, "level": 4, "leverag": [15, 120], "librari": [3, 4, 5, 18, 120, 121, 122, 138, 145, 146], "lightweight": 4, "like": [4, 17, 18, 21, 24, 35, 73, 74, 79, 88, 105, 106, 107, 108, 109, 110, 135, 136, 138, 193], "likelihood": [55, 100, 103], "limit": [124, 172], "linalg": [4, 9], "linalgerror": [6, 7, 8, 10, 11, 12, 13, 14, 15, 16], "linear": [4, 5, 6, 13, 14, 15, 20, 21, 22, 24, 26, 27, 29, 30, 31, 69, 70, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 88, 89, 90, 95, 96, 99, 100, 101, 102, 103, 105, 108, 111, 113, 114, 115, 116, 117, 118, 162], "linearli": 101, "list": [0, 1, 17, 19, 20, 21, 22, 23, 59, 96, 111, 121, 138, 140, 141, 142, 144, 146, 159, 160, 161, 163, 164, 165, 166, 191, 201, 202, 205], "listdir": 3, "liter": [50, 51, 52, 54, 55, 69, 70, 84, 85, 86, 99, 100, 101, 102, 103], "ln": 156, "load": [3, 17, 18, 19, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "load_state_dict": [18, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "loader": [1, 2, 3], "local": [39, 84], "log": [55, 99, 100, 103, 167], "log_softmax": 103, "logarithm": [156, 176, 177], "logic": [3, 120, 121], "logit": [33, 81, 100], "logsoftmax": [100, 103], "long": [129, 191], "loop": [1, 21, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "loss": [4, 13, 20, 21, 22, 23, 24, 33, 50, 51, 52, 54, 55, 75, 76, 77, 78, 79, 80, 81, 82, 88, 89, 90, 91, 92, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "low": [4, 141, 144], "lower": [6, 72, 123, 131, 132, 133, 144], "lowest": 141, "lr": [121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "lu": 10, "lucid": [9, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 139, 167, 197], "m": [20, 21, 24, 114, 115, 117, 118, 126, 127, 128, 129, 130, 162], "m_": [126, 127, 128, 129, 130], "m_t": [129, 130], "machin": [3, 4, 13, 126, 136, 143], "magnitud": [131, 132], "mai": [3, 4, 8, 10, 13, 21, 23, 101, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 137, 145], "main": [4, 14, 21, 159, 162], "maintain": [13, 17, 18, 20, 21, 22, 24, 31, 69, 70, 73, 74, 75, 76, 79, 88, 89, 90, 91, 92, 105, 106, 107, 108, 109, 110, 126, 131], "make": [1, 3, 4, 21, 24, 80, 100, 101, 111, 114, 117, 120, 125, 126, 127, 128, 136, 145, 146, 151], "manag": [4, 18, 20, 21, 22, 23, 24, 120, 122, 135, 137, 145], "manhattan": 12, "manipul": [4, 20, 22], "manner": [21, 24], "manual": [50, 51, 55, 99, 100, 103, 137], "map": [18, 32, 34, 80, 82], "mask": [17, 88, 89, 90, 91, 92], "match": [15, 18, 21, 24, 50, 52, 54, 59, 121, 176, 200, 201, 204, 205], "math": [173, 183, 188], "mathbf": [6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 47, 49, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 149, 150, 151, 155, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206], "mathcal": [69, 71, 73, 88, 89, 90, 91, 92, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111], "mathemat": 10, "mathrm": 13, "matmul": 167, "matric": [5, 7, 8, 10, 13, 15, 16, 149, 150, 151, 162], "matrix": [4, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 39, 47, 96, 97, 120, 149], "matrix_pow": 9, "max": [12, 30, 64, 65, 66, 78, 116, 117, 118, 128, 152, 167, 172], "max_pool": [116, 117, 118], "max_pool1d": [46, 63], "max_pool2d": [46, 63], "max_pool3d": [46, 63], "max_valu": 172, "maxim": 3, "maximum": [12, 78, 116, 117, 118, 126, 128, 167, 172, 178], "maxpool1d": [94, 119], "maxpool1dmodel": 116, "maxpool2d": [21, 24, 85, 94, 119], "maxpool2dmodel": 117, "maxpool3d": [86, 94, 119], "maxpool3dmodel": 118, "mean": [14, 17, 31, 35, 36, 37, 40, 50, 51, 52, 54, 55, 56, 58, 71, 75, 76, 77, 78, 79, 80, 82, 86, 88, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 126, 127, 128, 129, 130, 131, 135, 142, 167, 172, 176, 177, 178, 180, 183, 185, 187, 190, 191, 192], "meaning": [24, 138], "measur": [99, 100, 102, 103], "mechan": [4, 23, 47], "membership": 99, "memori": [2, 3, 137, 160, 161], "method": [3, 4, 5, 10, 20, 21, 22, 23, 24, 50, 51, 52, 54, 55, 69, 70, 73, 74, 99, 100, 101, 102, 103, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 145], "middl": 136, "might": 120, "min": [153, 167, 172], "min_valu": 172, "mind": [0, 3, 4, 21, 24, 137], "mini": 1, "minim": [4, 24, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 122], "minimalist": 4, "minimum": [167, 172, 180], "minu": 80, "mirror": [164, 166], "mismatch": [18, 120, 121], "miss": [18, 120], "mitig": [29, 75, 77, 79, 105, 106, 107], "mode": [4, 44, 56, 58, 69, 70, 88, 89, 90, 91, 92, 198], "model": [1, 3, 4, 11, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 33, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 145], "modif": [24, 137], "modifi": [20, 21, 22, 23, 67, 69, 70, 71, 72, 73, 74, 88, 135, 137, 143, 196, 206], "modul": [4, 17, 19, 20, 21, 22, 23, 24, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 145], "modular": [3, 4, 18, 21, 24, 120], "moduledict": [21, 22, 24, 25], "modulelist": [23, 24, 25], "moment": [126, 127, 128, 129, 130], "momentum": [56, 58, 105, 106, 107, 108, 109, 110, 123, 129, 131, 133], "momentum_decai": 129, "moor": 13, "more": [3, 4, 8, 20, 21, 24, 75, 89, 90, 91, 92, 120, 121, 122, 123, 124, 127, 128, 131, 132, 133, 142, 151, 190, 203], "most": [5, 117], "move": [123, 131], "mse": [52, 54, 101, 102], "mse_loss": [46, 53], "mseloss": [94, 104], "mu": [71, 105, 106, 107, 108, 109, 110, 111, 192], "mu_i": [108, 109, 110], "mul": 167, "multi": [3, 33, 51, 55, 81, 100, 103, 179, 187, 192], "multidimension": [140, 144, 160], "multipl": [1, 3, 4, 5, 11, 15, 22, 23, 24, 39, 88, 89, 90, 91, 92, 100, 103, 120, 136, 140, 141, 142, 144, 149, 154, 160, 161], "multipli": [11, 23, 49, 97, 132, 154, 155], "must": [0, 1, 3, 6, 7, 8, 10, 11, 14, 15, 16, 18, 20, 21, 22, 23, 24, 59, 88, 89, 90, 91, 92, 103, 121, 137, 190, 194, 196, 198, 200, 201, 203, 204, 206], "mymodel": [18, 19, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "myoptim": [121, 122], "n": [11, 12, 20, 21, 24, 35, 36, 37, 39, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 69, 71, 73, 84, 85, 86, 91, 92, 95, 97, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 162, 179, 190, 192], "n1": 12, "nabla_": [124, 125, 126, 127, 128, 129, 130, 132], "nabla_t": 130, "nadam": 134, "name": [18, 20, 22, 24, 138], "nan": [14, 16], "natur": [13, 84, 95, 113, 116, 156, 176, 177], "ndarrai": [17, 19, 138, 146, 159, 161, 164, 166, 193], "ndim": [14, 16, 19, 146], "ne": 11, "necessari": [13, 137, 196, 206], "need": [2, 21, 22, 23, 33, 95, 120, 137, 160, 161], "neg": [11, 13, 16, 26, 55, 75, 77, 78, 79, 100, 103, 132, 194], "negative_slop": [29, 77], "neglect": 23, "neq": 12, "nest": [21, 24, 120], "nesterov": 129, "network": [3, 4, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 32, 33, 34, 35, 36, 37, 47, 49, 56, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 131, 133, 144, 145, 146, 158, 163, 165, 178, 180, 198], "neural": [3, 4, 17, 18, 19, 20, 21, 22, 23, 24, 27, 30, 31, 32, 33, 34, 35, 36, 37, 47, 49, 56, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 131, 133, 144, 145, 146, 158, 163, 165, 178, 180, 198], "neuralnetwork": 78, "neuron": 77, "new": [18, 19, 26, 27, 29, 30, 31, 32, 34, 47, 49, 69, 70, 71, 72, 73, 74, 121, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 161, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 191, 193, 194, 196, 198, 200, 201, 203, 204, 205, 206], "next": 24, "nll": 55, "nll_loss": [46, 53], "nllloss": [94, 104], "nn": [4, 25, 28, 38, 45, 48, 53, 57, 63, 68, 83, 87, 93, 94, 98, 104, 112, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "no_grad": 135, "node": 146, "nois": [16, 145], "non": [8, 11, 13, 16, 23, 27, 29, 30, 69, 70, 75, 76, 77, 78, 79, 80, 82, 88, 89, 90, 91, 92, 126, 127, 137, 156, 172], "none": [0, 1, 2, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 136, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 164, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206], "norm": [5, 9, 128], "normal": [27, 31, 33, 34, 56, 58, 59, 68, 69, 73, 76, 79, 81, 88, 105, 106, 107, 108, 109, 110, 111, 131, 142, 145], "normalized_shap": [59, 111], "note": [35, 88], "noth": [40, 41, 42, 43], "notimplementederror": [2, 18, 121], "notin": 172, "np": [17, 19, 100, 103, 138, 146, 151, 158, 159, 162, 163, 165, 166, 177, 193], "num_class": [81, 100, 103], "num_featur": [24, 105, 106, 107, 108, 109, 110], "num_paramet": 23, "number": [0, 1, 2, 7, 8, 10, 13, 15, 16, 19, 21, 23, 24, 35, 36, 37, 39, 42, 43, 44, 47, 49, 51, 55, 56, 58, 69, 70, 73, 74, 80, 84, 85, 86, 95, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118, 123, 140, 143, 144, 146, 156, 158, 160, 162, 178, 179, 180, 191, 192, 194, 196, 198, 200, 201, 202, 204, 206], "numer": [10, 13, 50, 51, 56, 58, 59, 99, 100, 105, 106, 107, 108, 109, 110, 111, 124, 125, 126, 127, 128, 129, 130, 131, 138, 148, 158, 163, 165], "numpi": [4, 17, 19, 100, 103, 138, 146, 151, 159, 162, 177, 190, 193, 198, 200, 204], "o": [3, 115, 118, 163, 164], "object": [1, 3, 5, 18, 22, 23, 102, 120, 137, 147, 148, 152, 153, 154, 157, 193], "observ": 126, "obtain": 1, "occur": [137, 194], "occurr": 11, "odot": [88, 89, 90, 91, 92], "off": 135, "offer": [4, 120, 122, 145], "offset": 162, "often": [11, 35, 36, 37, 39, 100, 103, 158, 165], "older": 129, "onc": 137, "one": [0, 23, 24, 33, 35, 49, 60, 64, 79, 80, 81, 84, 90, 100, 103, 105, 108, 113, 116, 121, 136, 138, 142, 157, 164, 178, 180, 195, 199, 203], "ones": [47, 49, 84, 85, 86, 97, 105, 106, 107, 108, 109, 110, 111, 120, 162, 164, 167], "ones_lik": 167, "onli": [4, 78, 88, 89, 90, 91, 92, 99, 100, 103, 105, 106, 107, 108, 109, 110, 111, 116, 117, 118, 132, 135, 158, 172, 178, 180, 190, 198, 199, 201, 202], "onto": [14, 16], "oper": [3, 4, 5, 10, 13, 17, 18, 21, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 39, 44, 47, 49, 60, 61, 62, 64, 65, 66, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 113, 114, 115, 116, 117, 118, 120, 135, 136, 137, 138, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 160, 161, 163, 165, 176, 177, 178, 179, 180, 183, 185, 187, 190, 192, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206], "operatornam": [11, 13], "opposit": 123, "optim": [3, 4, 5, 11, 13, 14, 16, 17, 19, 22, 23, 39, 84, 85, 86, 120, 137], "optimizer_st": [121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "option": [1, 12, 16, 17, 18, 19, 20, 21, 22, 23, 26, 29, 33, 36, 37, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 77, 81, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 123, 131, 133, 140, 141, 142, 144, 146, 158, 159, 160, 161, 162, 163, 164, 165, 166, 178, 179, 180, 187, 191, 192, 193, 194, 200, 202, 203], "ord": 12, "order": [1, 3, 12, 16, 20, 21, 22, 23, 24, 191], "ordered_dict": 24, "ordereddict": [18, 20, 21, 24], "organ": [20, 21, 22, 24], "origin": [40, 82, 198, 199, 200, 201, 204, 205], "orthogon": [13, 14, 16], "orthonorm": 14, "oscil": [123, 131, 133], "other": [2, 3, 4, 10, 17, 18, 21, 24, 69, 70, 88, 120, 121, 135, 137, 145, 146, 158, 160, 163, 165, 190], "otherwis": [26, 29, 30, 31, 33, 75, 77, 78, 79, 81, 89, 90, 91, 92, 101, 113, 114, 115, 116, 117, 118, 121, 132, 152, 153, 178, 180], "otim": [13, 47, 95], "out": [0, 3, 26, 27, 29, 30, 31, 32, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 56, 58, 59, 60, 61, 62, 64, 65, 66, 69, 70, 73, 74, 84, 85, 86, 88, 89, 90, 91, 92, 113, 114, 115, 116, 117, 118, 123, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206], "out_channel": [21, 24, 84, 85, 86, 106, 107, 113, 114, 115, 116, 117, 118, 120], "out_featur": [20, 21, 24, 47, 49, 75, 76, 77, 78, 79, 80, 81, 82, 85, 86, 88, 89, 90, 95, 97, 99, 100, 101, 102, 103, 105, 108, 111, 113, 114, 115, 116, 117, 118], "outer": 167, "outlier": [52, 101], "output": [0, 1, 2, 4, 11, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 40, 41, 42, 43, 44, 47, 49, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 141, 142, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 165, 166, 176, 177, 178, 179, 180, 183, 185, 187, 190, 191, 192, 198, 200, 204], "output_height": 39, "output_lay": [21, 24], "output_s": 21, "output_width": 39, "outsid": 0, "over": [0, 1, 2, 3, 5, 18, 21, 23, 33, 81, 84, 85, 86, 100, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 123, 124, 125, 126, 127, 140, 144, 178, 179, 180, 187, 190, 192], "overdetermin": 13, "overfit": [1, 41, 44, 89, 90, 91, 92, 123, 126, 131, 133], "overrid": [2, 3], "overridden": [18, 121], "overwrit": [20, 22], "own": [20, 21, 22, 23, 35, 36, 37, 74, 120], "p": [12, 13, 19, 22, 23, 40, 41, 42, 43, 44, 88, 89, 90, 91, 92, 113, 116, 117], "p_d": [115, 118], "p_h": [114, 115, 118], "p_w": [114, 115, 118], "packag": [2, 3, 5, 120, 122, 143, 145], "pad": [21, 24, 35, 36, 37, 39, 60, 61, 62, 64, 65, 66, 84, 85, 86, 106, 107, 113, 114, 115, 116, 117, 118, 197], "pad_after_dim1": 198, "pad_after_dim2": 198, "pad_before_dim1": 198, "pad_before_dim2": 198, "pad_width": 198, "padding_height": 39, "padding_width": 39, "pair": 47, "parallel": [1, 3], "param": [18, 19, 22, 23, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "param1": 18, "param_dict": 22, "param_group": [121, 122], "param_groups_setup": 121, "param_list": 23, "paramet": [0, 2, 4, 18, 120, 121, 122, 138, 145], "parameterdict": 25, "parameterlist": 25, "parent": 120, "part": [17, 18, 74, 120, 135, 137, 145, 158, 159, 162, 163, 164, 165, 166], "partial": [6, 7, 8, 10, 11, 12, 13, 15, 16, 26, 27, 29, 30, 31, 32, 33, 34, 47, 49, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206], "particip": 19, "particular": [20, 22], "particularli": [4, 13, 21, 22, 23, 24, 33, 49, 81, 97, 100, 103, 108, 109, 110, 111, 127, 135], "pass": [2, 4, 13, 18, 19, 20, 21, 22, 23, 24, 75, 76, 77, 78, 79, 80, 82, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 113, 114, 115, 116, 117, 118, 120, 138, 146, 179, 187, 190, 191, 192, 194, 196, 199, 201, 202, 206], "past": [123, 124, 126, 131], "patch": [39, 114], "path": 3, "pattern": [30, 78, 84, 85, 86], "penal": [123, 131, 133], "penalti": [124, 125, 126, 127, 128, 129, 130], "penros": 13, "per": [1, 108, 109, 110, 111], "perform": [3, 4, 5, 6, 13, 18, 19, 23, 27, 35, 36, 37, 56, 58, 59, 60, 61, 62, 64, 65, 66, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 135, 137, 143, 145, 147, 148, 151, 154, 157, 176, 178, 180, 187, 191], "permut": 191, "persist": [17, 140, 141, 142, 144, 160, 161], "perturb": [8, 15, 16], "phi": [27, 76], "pi": [27, 76, 173, 183, 188], "pinv": 9, "pipelin": 145, "place": [67, 69, 70, 71, 72, 73, 74], "placehold": [18, 96], "plai": [138, 145], "point": 135, "pool": [60, 61, 62, 64, 65, 66, 85, 86, 113, 114, 115, 116, 117, 118, 178, 180], "pool1": 24, "pool2": 24, "poorli": 10, "popul": 18, "pose": 13, "posit": [1, 6, 11, 18, 24, 75, 77, 78, 79, 113, 114, 115, 116, 117, 118, 132, 136, 156, 200, 204], "possibl": 4, "potenti": [13, 96, 131, 202], "power": [4, 11, 136, 137, 167], "practic": [13, 100, 103], "preced": [19, 146], "predefin": [21, 79], "predict": [99, 100, 102, 103], "prefix": 18, "prepar": [3, 136, 198, 200, 204], "prepend": 18, "preprocess": [3, 39, 145], "present": [99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 114], "preserv": [40, 88, 158, 159, 162, 163, 164, 165, 166, 179, 187, 192], "prevent": [1, 20, 21, 22, 23, 24, 41, 44, 89, 90, 91, 92, 99, 100, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 137], "previou": [123, 132, 137], "previous": 126, "primari": [4, 138], "primarili": 24, "print": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 135, 136, 137, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206], "probabilist": 145, "probabl": [27, 33, 40, 41, 42, 43, 44, 50, 76, 81, 88, 89, 90, 91, 92, 99, 100, 103], "problem": [13, 14, 16, 29, 75, 77, 130], "process": [2, 3, 11, 14, 16, 23, 35, 36, 37, 58, 79, 82, 84, 86, 95, 105, 106, 107, 108, 109, 110, 111, 113, 115, 116, 118, 123, 138], "produc": [84, 85, 86, 143, 145], "product": [4, 14, 16, 80, 95, 111, 120, 149, 150, 154, 155], "program": [135, 145], "progress": 125, "project": [14, 16], "projector": 13, "promin": [113, 115, 116, 117, 118], "promot": [24, 100, 103, 120], "propag": [7, 8, 10, 13, 14, 15, 16, 18, 24, 47, 49, 114, 115, 131, 132, 149, 150, 151, 155, 178, 180, 198, 201, 205], "properli": [0, 23, 33, 81, 120], "properti": [5, 7, 10, 11, 27, 31, 40, 76, 79, 88, 125, 130], "proport": 192, "provid": [0, 1, 2, 3, 4, 5, 18, 20, 21, 22, 23, 27, 49, 99, 100, 101, 103, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 131, 133, 135, 137, 138, 143, 145, 146, 151, 158, 164, 178, 180, 191, 193, 200, 202, 204], "pseudo": [10, 13], "purpos": [140, 144, 158, 163, 165], "python": 138, "pytorch": 193, "q": 14, "qr": 9, "quad": [13, 99, 100, 101, 102, 103, 116, 117, 118, 147, 148, 152, 153, 154, 157], "quadrat": 101, "quotient": 148, "r": 14, "r_t": 130, "radam": 134, "rais": [0, 1, 2, 18, 120, 121, 156], "rand": [139, 145], "randint": [139, 145], "randn": [120, 139, 143, 145], "random": [1, 2, 3], "random_integ": 145, "random_tensor": 145, "randomli": [1, 40, 41, 42, 43, 44, 88, 89, 90, 91, 92], "randomnoisedataset": [0, 1, 2], "rang": [0, 1, 5, 23, 32, 34, 35, 36, 51, 55, 74, 80, 82, 123, 131, 133, 141, 169, 170, 172], "rank": 13, "rate": [121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "rather": [22, 23, 127, 201], "ravel": 197, "raw": [33, 81, 100, 138], "re": [19, 137], "readabl": [20, 21, 22, 24, 120, 138], "readi": [3, 4], "real": [13, 16, 80], "rearrang": 39, "receiv": [116, 117, 118, 198], "recent": 131, "reciproc": [13, 167, 177, 185], "recognit": 85, "rectangular": 162, "rectif": 130, "rectifi": [29, 30, 77, 78, 130], "recurr": [21, 111], "recurs": 18, "reduc": [105, 106, 107, 108, 109, 110, 113, 114, 115, 116, 117, 118, 129, 132, 137, 138, 178, 179, 180, 187, 192], "reduct": [16, 50, 51, 52, 54, 55, 99, 100, 101, 102, 103, 178, 180], "reevalu": 121, "refer": [4, 18, 145, 159, 162, 194], "reflect": 135, "regardless": [13, 199], "region": [37, 198], "regist": [17, 18, 19, 23, 120], "register_buff": 17, "register_paramet": 18, "registr": [18, 120], "regress": [54, 101, 102], "regular": [13, 44, 89, 90, 91, 92, 123, 124, 125, 128, 129, 130, 131, 133], "relat": [137, 162, 163], "relev": [123, 131, 133], "reli": 137, "reliant": [89, 90, 91, 92], "relu": [4, 20, 21, 22, 24, 26, 28, 29, 46, 69, 70, 73, 74, 75, 77, 83, 84, 85, 86, 94, 95, 96, 97], "relu1": 24, "relu2": 24, "relu3": 24, "remain": [17, 59, 88, 89, 90, 91, 92, 132], "rememb": 145, "remov": 202, "rep": 204, "repeat": [197, 204], "repetit": [200, 204], "replac": 145, "repres": [10, 12, 16, 18, 19, 24, 47, 49, 56, 58, 59, 84, 85, 86, 95, 97, 100, 103, 111, 121, 122, 123, 129, 130, 131, 132, 133, 138, 147, 148, 154, 157, 159, 179, 190, 191, 192], "represent": [114, 117, 121], "reproduc": [140, 141, 142, 143, 144, 145], "requir": [2, 3, 4, 17, 20, 24, 26, 27, 29, 30, 31, 32, 34, 47, 49, 74, 96, 100, 103, 120, 135, 137, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 188, 189, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206], "requires_grad": [17, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 39, 47, 49, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206], "rescal": [50, 51, 55, 99, 100, 103], "research": 120, "reset": [19, 143, 146], "reshap": [4, 49, 85, 86, 136, 138, 197, 199], "resili": 132, "resourc": 137, "respect": [6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 47, 49, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 172, 176, 177, 178, 179, 180, 183, 185, 187, 190, 191, 192, 198, 200, 204], "respons": [20, 122], "restor": 137, "restructur": 201, "result": [6, 10, 11, 13, 18, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 47, 49, 60, 61, 62, 64, 65, 66, 81, 120, 121, 135, 137, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 188, 189, 190, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206], "resum": 122, "retain": [19, 146, 158, 165, 178, 179, 180, 187, 192], "retriev": [0, 2, 20, 22, 23], "return": [0, 1, 2, 3, 4, 17, 18, 20, 21, 22, 23, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138], "reusabl": [24, 120], "revers": [4, 24, 191], "revert": 137, "rho": 124, "rho_": 130, "rho_t": 130, "right": [11, 12, 13, 15, 16, 27, 33, 76, 81, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 116, 117, 118], "risk": 138, "rmsprop": 134, "robust": [88, 89, 90, 91, 92, 101, 120, 124], "role": [138, 145], "root": [125, 131, 185], "rout": [116, 117, 118], "routin": 4, "row": [7, 8, 10, 15, 49, 162, 206], "rprop": 134, "rule": [10, 11, 136, 147, 148, 152, 153, 154, 156, 157], "run": [4, 17, 56, 58, 105, 106, 107, 108, 109, 110, 124, 137, 143, 145], "running_mean": [17, 56, 58, 105, 106, 107, 108, 109, 110], "running_var": [56, 58, 105, 106, 107, 108, 109, 110], "runtim": [21, 24, 120], "s_": 132, "s_d": [115, 118], "s_h": [114, 115, 118], "s_w": [114, 115, 118], "same": [7, 8, 10, 11, 15, 33, 40, 41, 42, 43, 44, 56, 58, 59, 84, 85, 86, 88, 89, 90, 91, 92, 96, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 132, 143, 145, 151, 161, 164, 166, 176, 178, 179, 180, 194, 196, 199, 201, 202, 203, 206], "sampl": [0, 1, 2, 3, 4, 69, 70, 71, 72, 73, 74, 88, 89, 90, 91, 92, 95, 97, 100, 103, 111, 142, 145], "satisfi": [6, 8, 15], "satur": 75, "save": [2, 17, 19, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137], "scalabl": [3, 120], "scalar": [7, 12, 50, 51, 52, 54, 55, 138], "scale": [8, 13, 26, 31, 33, 56, 58, 59, 73, 74, 75, 77, 79, 80, 81, 82, 88, 89, 90, 91, 92, 100, 105, 106, 107, 108, 109, 110, 111, 123, 125, 126, 127, 138, 145, 192], "scenario": [22, 23, 111, 127, 128], "schedul": 123, "scientif": 136, "score": [33, 100], "scratch": 4, "script": 145, "seamless": [0, 1, 3, 120, 145], "seamlessli": [3, 5, 19, 21, 24, 120, 138], "second": [8, 21, 22, 47, 95, 126, 127, 128, 129, 130, 136, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 196], "section": 151, "see": [4, 151], "seed": [139, 140, 141, 142, 144, 145], "seen": 124, "select": [116, 118, 187], "self": [0, 1, 2, 3, 4, 17, 18, 19, 20, 21, 22, 23, 31, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 95, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "selu": [28, 40, 46, 83, 88, 94], "selunetwork": 79, "sensit": [52, 101, 105, 106, 107], "separ": [0, 35, 36, 37, 108, 109, 110], "sequenc": [11, 20, 22, 35, 158, 194, 196, 198, 200, 203, 204, 206], "sequenti": [20, 21, 25, 35, 96], "seri": [35, 84, 113, 116], "serial": [17, 18, 122], "serv": [3, 18, 20, 21, 22, 23, 24, 120, 132], "set": [3, 19, 23, 35, 36, 37, 77, 78, 79, 84, 85, 86, 88, 91, 92, 95, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 121, 126, 127, 131, 140, 141, 142, 143, 144, 145, 146, 158, 160, 161, 165, 166, 172, 178, 180, 193], "setup": 4, "sever": [13, 84, 85, 86, 113, 114, 115, 116, 117, 118, 137], "sgd": [4, 123, 130, 134], "sgn": 12, "shape": [3, 4, 7, 8, 10, 11, 13, 17, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 136, 138, 140, 141, 142, 144, 145, 146, 149, 160, 161, 162, 163, 164, 165, 166, 172, 177, 178, 179, 180, 183, 185, 187, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 206], "shapelik": 141, "shift": [56, 58, 59, 105, 106, 107, 108, 109, 110, 111], "shorthand": 151, "should": [17, 137, 140, 141, 142, 144, 160, 161, 169, 170, 190, 198], "show": 135, "showcas": 4, "shown": 143, "shrink": 124, "shuffl": [1, 2, 3], "side": [15, 21, 24, 35, 36, 37, 60, 61, 62, 64, 65, 66, 84, 85, 86, 113, 114, 115, 116, 117, 118, 137], "sigma": [13, 69, 71, 73, 80, 105, 106, 107, 108, 109, 110, 111, 191], "sigma_i": 13, "sigmoid": [28, 46, 69, 70, 73, 74, 83, 94, 99], "sigmoidnetwork": 80, "sign": [11, 101, 132, 167], "signal": [84, 85, 86, 105, 108, 113, 114, 115, 116, 117, 118], "signific": 137, "sim": [88, 89, 90, 91, 92], "similar": [4, 69, 70, 151, 177, 193, 198], "similarli": [16, 190], "simpl": [3, 4, 24, 35, 36, 37, 47, 49, 60, 61, 62, 64, 65, 66, 76, 78, 79, 80, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 149, 150, 155], "simplebinaryclassificationmodel": 99, "simpleclassificationmodel": [100, 103], "simplegelumodel": 76, "simpleleakyrelumodel": 77, "simplemodel": [4, 97], "simpleregressionmodel": 102, "simplerelumodel": 78, "simpleselumodel": 79, "simplesigmoidmodel": 80, "simpletanhmodel": 82, "simpli": [135, 190, 191, 201], "simplic": 78, "simplifi": 24, "sin": [167, 173], "sinc": [11, 14, 20, 21, 22, 23, 35, 36, 37, 74, 135, 137, 142], "sine": [170, 183, 184], "singl": [0, 11, 14, 16, 33, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 100, 111, 114, 115, 116, 117, 118, 121, 138, 144, 160, 194, 202], "singleton": 111, "singular": [7, 10, 11, 13, 15, 16], "sinh": [167, 174, 189], "size": [0, 1, 2, 3, 16, 19, 21, 35, 36, 37, 39, 42, 43, 44, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 84, 85, 86, 95, 97, 99, 100, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 141, 144, 145, 146, 178, 179, 180, 187, 192, 194, 196, 202, 205, 206], "skip": 137, "slice": [47, 190], "slide": [39, 113, 115, 116, 118], "slope": [29, 75, 77], "slow": [3, 130], "small": [13, 29, 50, 51, 56, 58, 59, 77, 79, 99, 100, 101, 105, 106, 107, 108, 109, 110, 111, 114, 117, 124, 125, 126, 127, 128, 129, 130, 131, 132], "smaller": [21, 24, 120, 125, 126, 153], "smallest": 180, "smooth": [27, 75, 76, 123, 131], "smoother": 123, "so": [20, 21, 22, 23, 120, 130, 160, 161], "softmax": [28, 46, 83, 94, 100], "softmaxmodel": 81, "solut": [13, 15], "solv": [5, 6, 9, 13, 14, 16], "solver": 5, "some": [26, 41, 88, 89, 90, 105, 106, 107, 108, 109, 110, 125, 126, 127, 137, 138], "sometim": 136, "sophist": [21, 24], "sourc": 145, "space": [8, 14, 16, 35, 36, 37, 39, 84, 85, 86, 158], "spars": [125, 126], "spatial": [85, 86, 105, 106, 107, 108, 109, 110, 111, 114, 115, 116, 117, 118], "spatio": 86, "special": [0, 1, 4, 13, 17, 18, 19, 88, 145], "specif": [4, 20, 21, 22, 23, 24, 74, 88, 89, 90, 91, 92, 108, 109, 110, 120, 121, 135, 145, 160, 178, 180, 200, 204], "specifi": [0, 1, 2, 3, 4, 12, 21, 33, 39, 44, 50, 51, 52, 54, 55, 59, 81, 84, 85, 86, 99, 100, 101, 102, 103, 111, 114, 115, 116, 117, 118, 121, 138, 140, 141, 142, 143, 144, 156, 158, 159, 160, 161, 162, 163, 165, 166, 172, 178, 179, 180, 187, 191, 192, 193, 194, 196, 198, 200, 201, 202, 203, 204, 205, 206], "speech": 108, "speed": [123, 124, 125, 126, 127, 128, 129, 130, 131, 133], "split": [194, 196, 206], "sqrt": [27, 69, 70, 73, 74, 76, 105, 106, 107, 108, 109, 110, 111, 124, 125, 126, 127, 129, 130, 131, 167, 169, 170], "squar": [1, 3, 6, 7, 8, 10, 11, 13, 14, 15, 16, 52, 54, 101, 102, 124, 125, 126, 131, 167, 185], "squaredataset": [0, 1, 2, 3], "squeez": 197, "stabil": [10, 13, 50, 51, 56, 58, 59, 99, 100, 105, 106, 107, 108, 109, 110, 111, 123, 124, 125, 126, 127, 128, 129, 130, 131], "stabl": [69, 70, 73, 74, 88, 100, 123, 127, 128, 131, 132, 133], "stack": [24, 196, 197, 206], "standard": [27, 29, 69, 71, 73, 75, 76, 77, 88, 132, 142, 145, 151], "start": [1, 3, 123, 125, 132, 158], "state": [17, 18, 19, 21, 24, 121, 135, 137, 143], "state_dict": [18, 19, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "static": 24, "statist": [13, 40, 56, 58], "std": 71, "step": [19, 39, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 158], "step_siz": 132, "still": 124, "stochast": [4, 123, 133], "stop": 158, "storag": [20, 22, 146], "store": [2, 17, 18, 19, 20, 21, 22, 23, 137, 146], "str": [18, 20, 22, 24, 50, 51, 52, 54, 55, 121], "straightforward": [133, 135, 147], "strategi": 122, "streamlin": [2, 3], "strict": [18, 121], "stride": [21, 24, 35, 36, 37, 39, 60, 61, 62, 64, 65, 66, 84, 85, 86, 113, 114, 115, 116, 117, 118], "stride_height": 39, "stride_width": 39, "string": [18, 20, 22, 24, 84, 85, 86, 121], "structur": [0, 4, 14, 17, 18, 21, 120, 121, 138, 162], "style": [58, 108, 109], "sub": [20, 21, 22, 23, 24, 120, 167], "sub_tensor": 146, "subclass": [1, 2, 3, 4, 18, 19, 20, 120, 121], "submodul": [18, 120], "subsequ": [21, 24, 74, 145], "subset": [89, 90], "subtract": [4, 157], "suffer": 125, "suit": [69, 70, 73, 74], "suitabl": [101, 125, 126, 140], "sum": [12, 20, 21, 22, 23, 24, 33, 50, 51, 52, 54, 55, 81, 99, 100, 101, 102, 103, 125, 147, 150, 155, 167, 190, 192, 194, 196, 200, 204, 206], "sum_": [11, 33, 81, 99, 100, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 149, 150, 179, 187, 190, 192, 200], "sum_i": [12, 155], "sum_j": 155, "sum_k": 151, "summar": [113, 114, 115], "summat": 11, "super": [4, 17, 18, 19, 20, 21, 22, 23, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 95, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "support": [1, 3, 4, 5, 11, 12, 13, 14, 16, 20, 21, 22, 23, 24, 120, 122, 129, 145, 146, 147, 148, 151, 152, 153, 154, 156, 157, 159, 162, 172, 177, 179, 183, 185, 187, 190, 191, 192, 194, 201], "sure": 120, "svd": [9, 13], "symmetr": [6, 73, 74, 82], "syntax": [1, 151], "system": [5, 6, 13, 14, 15, 135], "t": [13, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 146, 151, 193], "t0": 123, "t1": 193, "t2": 193, "tailor": 120, "take": [14, 113, 114, 115, 116, 117, 118, 137], "taken": 190, "tan": 167, "tangent": [34, 82, 171, 188, 189], "tanh": [21, 24, 27, 28, 46, 69, 70, 73, 74, 76, 83, 94, 167], "tanhnetwork": 82, "target": [24, 50, 51, 52, 54, 55, 99, 100, 101, 102, 103, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "target_tensor": [99, 100, 101, 102, 103], "task": [4, 5, 32, 33, 36, 47, 50, 51, 54, 55, 80, 81, 84, 85, 86, 99, 100, 101, 102, 103, 108, 109, 110, 113, 115, 116, 118, 126, 136, 145, 162], "techniqu": [6, 10, 56, 88, 89, 90, 91, 92, 108, 109, 110, 122], "tempor": [84, 86, 115, 118], "temporarili": 137, "tensor": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 135, 137, 138, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206], "term": [13, 47, 123, 127, 129, 130, 131, 133], "text": [7, 11, 12, 20, 26, 29, 30, 31, 33, 35, 36, 37, 60, 61, 62, 64, 65, 66, 69, 70, 73, 74, 75, 77, 78, 79, 81, 84, 85, 86, 88, 89, 90, 91, 92, 99, 100, 101, 102, 103, 113, 114, 115, 116, 117, 118, 123, 125, 126, 127, 128, 129, 130, 131, 132, 133, 141, 147, 148, 150, 152, 153, 154, 156, 157, 168, 172, 178, 179, 180, 182, 187, 192, 194, 196, 198, 199, 200, 201, 202, 204, 205, 206], "th": [47, 99, 100, 102, 103, 108, 109, 110, 152, 153, 156], "than": [0, 1, 22, 23, 26, 29, 52, 75, 77, 101, 121, 127, 172, 190, 198, 203], "thei": [0, 4, 16, 17, 21, 23, 24, 138, 201], "them": [3, 18, 23, 39, 123, 136, 194, 203], "therebi": [88, 114, 115, 117, 118], "theta": [123, 124], "theta_": [123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "theta_t": [130, 131], "thi": [0, 1, 2, 3, 4, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 21, 22, 23, 24, 30, 32, 33, 34, 35, 36, 37, 39, 47, 49, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 141, 142, 143, 145, 146, 150, 151, 155, 158, 160, 163, 164, 165, 166, 172, 176, 177, 178, 179, 180, 183, 185, 187, 190, 191, 192, 193, 198, 200, 201], "thing": 137, "those": [4, 23, 74], "three": [16, 37, 62, 66, 86, 92, 107, 110, 115, 118], "threshold": [13, 52, 101], "through": [0, 3, 4, 8, 13, 14, 16, 20, 21, 24, 47, 49, 75, 76, 77, 78, 79, 80, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 105, 106, 107, 108, 111, 113, 114, 115, 116, 117, 118, 142, 149, 150, 155, 199, 201, 202, 205], "throughout": 31, "tile": 197, "time": [0, 3, 11, 35, 77, 79, 84, 113, 114, 115, 116, 117, 118, 123, 124, 125, 126, 127, 131, 133, 137, 200, 204], "togeth": 24, "too": 132, "tool": [3, 4, 120, 136, 145], "top": [6, 7, 8, 14, 16, 47, 49, 84, 85, 86, 95, 97], "torch": 193, "total": [0, 1, 2, 19, 146, 201], "trace": [5, 167], "track": [4, 105, 106, 107, 108, 109, 110, 120, 135, 137, 140, 141, 142, 144, 158, 159, 160, 161, 162, 163, 164, 165, 166, 193], "track_running_stat": [105, 106, 107, 108, 109, 110], "tradit": [124, 125, 128, 129, 130], "trail": 59, "train": [1, 2, 3, 4, 17, 18, 21, 23, 24, 33, 40, 41, 42, 43, 44, 56, 58, 76, 77, 79, 80, 81, 82, 88, 89, 90, 91, 92, 105, 106, 107, 108, 109, 110, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137], "trainabl": [105, 106, 107, 108, 109, 110, 120], "transfer": [58, 108, 109], "transform": [2, 4, 8, 22, 47, 49, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 136], "transit": 101, "translat": [114, 117], "transpos": [4, 6, 167], "treat": [0, 17, 111, 120], "triangular": [6, 14], "true": [1, 2, 3, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 39, 40, 41, 42, 43, 44, 47, 49, 56, 58, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 121, 126, 127, 131, 135, 140, 141, 142, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206], "try": 0, "tupl": [2, 3, 8, 14, 16, 18, 19, 35, 36, 37, 39, 59, 60, 61, 62, 64, 65, 66, 84, 85, 86, 96, 111, 113, 114, 115, 116, 117, 118, 126, 127, 128, 129, 130, 132, 138, 140, 141, 142, 144, 146, 160, 163, 165, 178, 179, 180, 187, 192, 194, 196, 198, 201, 202, 203, 205, 206], "twice": 198, "two": [4, 7, 8, 10, 11, 13, 14, 16, 35, 36, 37, 47, 61, 65, 85, 91, 95, 106, 109, 114, 117, 126, 127, 128, 129, 130, 132, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 190], "type": [17, 18, 19, 47, 95, 146, 158, 159, 160, 161, 162, 163, 164, 165, 166, 193], "typeerror": [0, 1, 2, 18, 121], "typic": [5, 17, 33, 40, 79, 81, 103, 105, 106, 107, 108, 109, 110, 122, 123, 131, 133, 137, 138, 205], "u": [13, 16, 70, 72, 74], "u_": 128, "unchang": [17, 44, 75, 77, 78, 79, 88, 89, 90, 91, 92, 96, 199, 202], "undefin": 156, "under": 120, "underbrac": 11, "underdetermin": 13, "underli": [0, 4, 193, 196, 199, 201, 206], "understand": [4, 24], "unexpect": [18, 21, 24, 145], "unfold": [38, 46], "unifi": 0, "uniform": [68, 70, 74, 84, 85, 86, 95, 97, 139, 140, 141, 145], "uniformli": [140, 144], "uniniti": [160, 161], "unintend": 137, "uniqu": [6, 13, 15, 20, 22], "unit": [26, 27, 29, 30, 31, 69, 70, 73, 74, 75, 76, 77, 78, 79, 88], "unless": 146, "unlik": [17, 20, 21, 22, 23, 29, 75, 77, 88, 111, 124, 125, 127, 128, 129, 130, 132], "unnecessari": 137, "unpad": 198, "unsqueez": 197, "unstabl": 10, "up": [121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133], "updat": [17, 23, 24, 88, 89, 90, 91, 92, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137], "upon": [20, 21, 22, 23], "upper": [14, 72, 132, 144], "us": [0, 2, 3, 4, 5, 6, 8, 10, 11, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 47, 49, 54, 56, 58, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 135, 136, 137, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 176, 178, 179, 180, 187, 192, 198, 200, 202, 204, 205], "usag": [3, 5, 21, 24, 121, 122], "user": [1, 2, 3, 4, 20, 21, 22, 23, 120, 125], "usual": 100, "util": [3, 4, 5, 22, 23, 120, 145], "v": [8, 13, 16, 126, 127, 129, 130, 159], "v_": [123, 126, 127, 129, 130, 131, 133], "v_stack": 206, "v_t": [130, 131], "val": 67, "valid": [84, 85, 86, 191], "valu": [4, 7, 11, 12, 13, 16, 18, 20, 22, 24, 26, 29, 32, 33, 34, 35, 36, 37, 39, 50, 51, 52, 54, 55, 56, 58, 59, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 80, 82, 88, 89, 90, 91, 92, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 138, 140, 141, 142, 143, 144, 145, 158, 159, 160, 161, 162, 168, 169, 170, 172, 175, 176, 177, 178, 180, 182, 183, 185, 186, 194, 198, 199, 201, 205], "valuabl": 145, "valueerror": [1, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 121], "vanish": [75, 79, 105, 106, 107], "var": 167, "vari": [21, 23], "variabl": [18, 24, 96, 120, 135, 137, 140, 160], "varianc": [31, 40, 56, 58, 69, 70, 73, 74, 79, 88, 105, 106, 107, 108, 109, 110, 111, 126, 127, 128, 129, 130, 142, 192], "variant": [126, 127, 128], "variat": [108, 109, 110], "varieti": 145, "variou": [78, 122, 145, 178, 180, 198], "vdot": 155, "vector": [8, 13, 14, 15, 16, 47, 49, 95, 97, 149, 150, 151, 155], "veloc": [123, 131, 133], "veri": [13, 124], "versa": 132, "versatil": 145, "version": [16, 131, 155], "vertic": [203, 206], "via": 3, "vice": 132, "video": [37, 44, 86, 110, 115, 118], "view": [21, 114, 115, 116, 117, 118, 201], "vision": [36, 85, 95], "volumetr": [37, 44, 86, 110, 115, 118], "vstack": 197, "w": [36, 37, 39, 43, 44, 47, 49, 61, 62, 65, 66, 84, 85, 86, 95, 97, 106, 107, 109, 110, 115, 118], "w_": [36, 37, 61, 62, 65, 66, 85, 86, 114, 115, 117, 118], "w_out": [36, 37, 61, 62, 65, 66], "wa": [88, 89, 90, 91, 92, 137], "wai": [1, 135, 137, 201], "want": [0, 4], "warn": [20, 22], "we": [3, 4, 136], "weight": [35, 36, 37, 47, 49, 50, 51, 55, 56, 58, 59, 69, 70, 73, 74, 84, 85, 86, 88, 89, 90, 91, 92, 95, 97, 99, 100, 103, 105, 106, 107, 108, 109, 110, 111, 120, 123, 124, 125, 126, 127, 128, 129, 130, 131, 133, 140, 145], "weight1": 22, "weight2": 22, "weight_decai": [123, 124, 125, 126, 127, 128, 129, 130, 131, 133], "well": [69, 70], "were": 24, "what": 137, "when": [0, 1, 3, 4, 11, 18, 21, 23, 24, 26, 29, 35, 36, 37, 75, 96, 105, 106, 107, 108, 109, 110, 121, 124, 132, 135, 137, 138, 145, 156], "where": [3, 7, 8, 10, 11, 12, 13, 14, 16, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 138, 145, 147, 148, 152, 153, 154, 156, 157, 160, 161, 172, 176, 177, 178, 179, 180, 183, 185, 187, 190, 191, 192, 194, 198, 200, 204], "whether": [1, 7, 18, 19, 69, 70, 131, 135, 140, 141, 142, 144, 146, 160, 161, 178, 179, 180, 187, 192], "which": [0, 4, 7, 8, 10, 11, 12, 13, 14, 16, 18, 20, 22, 24, 29, 33, 52, 75, 76, 77, 81, 82, 88, 101, 103, 105, 106, 107, 108, 109, 110, 111, 126, 127, 129, 131, 135, 137, 138, 140, 141, 144, 169, 170, 171, 172, 173, 174, 177, 178, 179, 180, 181, 183, 184, 185, 187, 188, 189, 190, 192, 194, 200, 201, 203, 205], "while": [4, 21, 24, 40, 76, 78, 120, 123, 124, 126, 127, 128, 129, 130, 131, 132, 133, 137, 201, 203], "who": [4, 20, 21, 22, 23], "whose": [16, 161, 164, 166, 168, 172, 176, 182], "wide": [5, 13, 30, 78, 84, 85, 100], "wider": [35, 36], "width": [36, 37, 39, 43, 44, 61, 62, 65, 66, 85, 86, 106, 107, 109, 110, 114, 115, 117, 118], "window": [60, 61, 62, 64, 65, 66, 113, 114, 115, 116, 117, 118, 124, 178, 180], "wise": [26, 27, 29, 30, 31, 32, 33, 34, 81, 88, 89, 90, 91, 92, 120, 136, 147, 148, 151, 152, 153, 154, 156, 157, 168, 169, 170, 171, 172, 173, 174, 175, 177, 181, 182, 183, 184, 185, 186, 188, 189, 190, 196, 206], "within": [2, 17, 20, 21, 22, 23, 24, 34, 74, 76, 78, 79, 80, 82, 84, 85, 86, 88, 89, 90, 96, 99, 100, 101, 102, 103, 105, 106, 107, 108, 111, 113, 114, 115, 116, 117, 118, 122, 137, 158, 172], "without": [4, 20, 21, 22, 47, 49, 84, 85, 86, 95, 97, 135, 178, 199, 201, 205], "won": 137, "work": [1, 2, 3, 4, 6, 136, 138], "workflow": 145, "workload": 4, "wrap": [3, 120, 137, 193], "wrapper": 120, "x": [4, 5, 15, 17, 18, 20, 21, 22, 23, 24, 33, 47, 49, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 140, 141, 142, 144, 160, 161, 176], "x1": 95, "x2": 95, "x_": [100, 103], "x_c": [100, 103], "x_i": 99, "x_k": 100, "xavier": [69, 70, 73, 74], "xavier_norm": 68, "xavier_uniform": 68, "x\u2081": 95, "x\u2082": 95, "y": [20, 21, 22, 23, 24, 75, 76, 77, 78, 79, 80, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 140, 141, 142, 144, 160, 161], "y_": [100, 103], "y_c": [100, 103], "y_i": 99, "yet": [4, 136], "yield": [0, 1, 18, 137], "you": [0, 21, 23, 24, 120, 122, 135, 137, 145, 160, 161, 162, 166, 191, 193], "your": [120, 122, 135, 137, 145], "z": [161, 165, 166], "zero": [11, 13, 14, 26, 29, 35, 36, 37, 40, 41, 42, 43, 44, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 77, 78, 79, 84, 85, 86, 88, 89, 90, 91, 92, 111, 113, 114, 115, 116, 117, 118, 120, 121, 124, 125, 126, 127, 128, 129, 130, 131, 160, 161, 162, 166, 167, 172, 182, 198], "zero_grad": [19, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 146], "zeros_lik": [161, 167], "\u03c3\u1d62": 13}, "titles": ["lucid.data.ConcatDataset", "lucid.data.DataLoader", "lucid.data.Dataset", "lucid.data", "Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.LeakyReLU", "nn.ReLU", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Tanh", "Activation Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "lucid.nn", "optim.Optimizer", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.types", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.unsqueeze", "lucid.vstack"], "titleterms": {"1": 136, "1d": 136, "2": 136, "2d": 136, "3": 136, "It": [135, 137], "ab": 168, "activ": [28, 46, 83, 94], "ad": 136, "adadelta": 124, "adagrad": 125, "adam": 126, "adamax": 128, "adamw": 127, "add": 147, "addit": 13, "admonit": 138, "advanc": 39, "algebra": 9, "algorithm": [123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "alias": 138, "align": 136, "alpha_dropout": 40, "alphadropout": 88, "also": 122, "anoth": 193, "arang": 158, "arcco": 169, "arcsin": 170, "arctan": 171, "asgd": 123, "attribut": [17, 19, 20, 21, 22, 23, 24, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 146], "avg_pool1d": 60, "avg_pool2d": 61, "avg_pool3d": 62, "avgpool1d": 113, "avgpool2d": 114, "avgpool3d": 115, "axi": 136, "backpropag": 146, "backward": [6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 47, 49, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206], "batch_norm": 56, "batchnorm1d": 105, "batchnorm2d": 106, "batchnorm3d": 107, "bceloss": 99, "benefit": 137, "bilinear": [47, 95], "binari": 167, "binary_cross_entropi": 50, "broadcast": 136, "buffer": 17, "calcul": [6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 39, 47, 49, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206], "case": 138, "choleski": 6, "class": [0, 1, 2, 17, 18, 19, 20, 21, 22, 23, 24, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 146], "clip": 172, "co": 173, "combin": 0, "compon": [3, 4, 120], "concatdataset": [0, 1], "concaten": 194, "conclus": [3, 4, 120, 135, 136, 137, 145], "constant": 67, "contain": 25, "conv1d": [35, 84], "conv2d": [36, 85], "conv3d": [37, 86], "convolut": [38, 46, 87, 94], "core": 4, "cosh": 174, "creat": [19, 146, 193], "cross_entropi": 51, "crossentropyloss": 100, "cube": 175, "custom": [1, 2, 3, 18, 121, 122], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2], "defin": [2, 18, 121, 122], "definit": 138, "det": 7, "detail": 13, "diag": 159, "dilat": 39, "div": 148, "dot": 149, "dropout": [41, 45, 46, 89, 93, 94], "dropout1d": [42, 90], "dropout2d": [43, 91], "dropout3d": [44, 92], "eig": 8, "elu": [26, 75], "empti": 160, "empty_lik": 161, "exampl": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206], "exp": 176, "ey": 162, "featur": [4, 5, 122, 145], "flatten": 195, "forward": [6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 39, 47, 49, 69, 70, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206], "from": 193, "function": [6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 135, 137, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206], "gelu": [27, 76], "gener": [139, 167], "get": 122, "grad_en": 135, "gradient": [6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 47, 49, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 194, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206], "guidelin": 138, "how": [135, 137], "hstack": 196, "huber_loss": 52, "huberloss": 101, "ident": 96, "index": 146, "init": [67, 69, 70, 71, 72, 73, 74], "initi": 68, "inner": 150, "input": 193, "inspect": [122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "instance_norm": 58, "instancenorm1d": 108, "instancenorm2d": 109, "instancenorm3d": 110, "integr": [3, 120, 145], "inv": 10, "iter": 146, "kaiming_norm": 69, "kaiming_uniform": 70, "kei": [3, 4, 120, 122, 145], "layer": [83, 87, 93, 94, 98, 104, 112, 119], "layer_norm": 59, "layernorm": 111, "leaky_relu": 29, "leakyrelu": 77, "learn": 145, "limit": 4, "linalg": [5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16], "linear": [9, 46, 48, 49, 94, 97, 98], "list": 193, "load": 1, "log": 177, "loss": [46, 53, 94, 104], "lucid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 46, 120, 122, 135, 136, 137, 138, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206], "matmul": 151, "matrix": 151, "matrix_pow": 11, "max": 178, "max_pool1d": 64, "max_pool2d": 65, "max_pool3d": 66, "maximum": 152, "maxpool1d": 116, "maxpool2d": 117, "maxpool3d": 118, "mean": 179, "method": [0, 1, 2, 18, 19, 121, 146], "min": 180, "minimum": 153, "model": 120, "modul": [18, 94], "moduledict": 20, "modulelist": 21, "more": 145, "mse_loss": 54, "mseloss": 102, "mul": 154, "multipl": [0, 151], "nadam": 129, "new": 136, "newaxi": 136, "nll_loss": 55, "nllloss": 103, "nn": [17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 46, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 120], "no_grad": 137, "norm": 12, "normal": [46, 57, 71, 94, 112], "note": 4, "number": 139, "ones": 163, "ones_lik": 164, "oper": [9, 151, 167], "optim": [121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134], "organ": 120, "outer": 155, "overview": [3, 4, 120, 122, 145], "pad": 198, "paramet": [1, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 137, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206], "parameterdict": 22, "parameterlist": 23, "perform": 146, "pinv": 13, "pipelin": 3, "pitfal": [135, 137], "pool": [46, 63, 94, 119], "potenti": [135, 137], "power": 156, "properti": [19, 146], "qr": 14, "radam": 130, "rais": [6, 7, 8, 10, 11, 12, 13, 14, 15, 16], "rand": 140, "randint": 141, "randn": 142, "random": [139, 140, 141, 142, 143, 144, 145], "ravel": 199, "reciproc": 181, "refer": 122, "relu": [30, 78], "repeat": 200, "reshap": 201, "return": [6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 135, 137, 140, 141, 142, 143, 144, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206], "rmsprop": 131, "rprop": 132, "rule": 151, "see": 122, "seed": 143, "selu": [31, 79], "sequenti": 24, "sgd": 133, "sigmoid": [32, 80], "sign": 182, "signatur": [0, 1, 2, 6, 7, 8, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 39, 40, 41, 42, 43, 44, 47, 49, 50, 51, 52, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 66, 67, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 84, 85, 86, 88, 89, 90, 91, 92, 95, 96, 97, 99, 100, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 113, 114, 115, 116, 117, 118, 121, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 135, 137, 140, 141, 142, 143, 144, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 198, 199, 200, 201, 202, 203, 204, 205, 206], "sin": 183, "sinh": 184, "slice": 146, "softmax": [33, 81], "solv": 15, "sqrt": 185, "squar": 186, "squeez": 202, "stack": 203, "start": 122, "state": [122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133], "sub": 157, "sum": 187, "svd": 16, "tan": 188, "tanh": [34, 82, 189], "tensor": [136, 146, 167, 193, 197], "through": 146, "tile": 204, "trace": 190, "track": 146, "transpos": 191, "type": 138, "unari": 167, "unfold": 39, "uniform": [72, 144], "unsqueez": 205, "us": [1, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 138, 193], "usag": [4, 17, 135, 136, 137, 138], "utilit": 197, "var": 192, "vstack": 206, "weight": 68, "why": 138, "work": [135, 137], "xavier_norm": 73, "xavier_uniform": 74, "zero": 165, "zeros_lik": 166}})