Search.setIndex({"alltitles": {"@ Operator": [[288, "operator"]], "Activation Functions": [[133, null]], "Activation Layers": [[210, null], [223, null]], "Additional Details": [[19, "additional-details"]], "Admonitions and Usage Guidelines": [[274, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[144, "advanced-example-with-dilation"]], "Advanced Features": [[357, "advanced-features"]], "AlexNet": [[23, null]], "Algorithm": [[258, "algorithm"], [259, "algorithm"], [260, "algorithm"], [261, "algorithm"], [262, "algorithm"], [263, "algorithm"], [264, "algorithm"], [265, "algorithm"], [266, "algorithm"], [267, "algorithm"], [268, "algorithm"]], "Architecture": [[23, "architecture"], [25, "architecture"], [59, "architecture"], [60, "architecture"], [61, "architecture"], [118, "architecture"]], "Architecture Details": [[87, "architecture-details"], [88, "architecture-details"]], "Attention Mechanism": [[188, "attention-mechanism"]], "Attributes": [[5, "attributes"], [6, "attributes"], [7, "attributes"], [8, "attributes"], [23, "attributes"], [54, "attributes"], [58, "attributes"], [78, "attributes"], [89, "attributes"], [96, "attributes"], [106, "attributes"], [111, "attributes"], [116, "attributes"], [118, "attributes"], [122, "attributes"], [124, "attributes"], [125, "attributes"], [126, "attributes"], [127, "attributes"], [128, "attributes"], [129, "attributes"], [181, "attributes"], [182, "attributes"], [183, "attributes"], [184, "attributes"], [185, "attributes"], [186, "attributes"], [187, "attributes"], [198, "attributes"], [199, "attributes"], [202, "attributes"], [203, "attributes"], [205, "attributes"], [206, "attributes"], [207, "attributes"], [209, "attributes"], [211, "attributes"], [212, "attributes"], [213, "attributes"], [215, "attributes"], [217, "attributes"], [218, "attributes"], [219, "attributes"], [220, "attributes"], [221, "attributes"], [224, "attributes"], [225, "attributes"], [226, "attributes"], [228, "attributes"], [229, "attributes"], [230, "attributes"], [231, "attributes"], [232, "attributes"], [234, "attributes"], [235, "attributes"], [236, "attributes"], [238, "attributes"], [239, "attributes"], [240, "attributes"], [241, "attributes"], [243, "attributes"], [244, "attributes"], [245, "attributes"], [246, "attributes"], [247, "attributes"], [248, "attributes"], [249, "attributes"], [250, "attributes"], [251, "attributes"], [283, "attributes"], [348, "attributes"], [349, "attributes"], [350, "attributes"], [351, "attributes"], [352, "attributes"], [353, "attributes"], [354, "attributes"], [355, "attributes"]], "Backward Gradient Calculation": [[12, "backward-gradient-calculation"], [13, "backward-gradient-calculation"], [14, "backward-gradient-calculation"], [16, "backward-gradient-calculation"], [17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [20, "backward-gradient-calculation"], [21, "backward-gradient-calculation"], [22, "backward-gradient-calculation"], [125, "backward-gradient-calculation"], [126, "backward-gradient-calculation"], [127, "backward-gradient-calculation"], [128, "backward-gradient-calculation"], [129, "backward-gradient-calculation"], [131, "backward-gradient-calculation"], [132, "backward-gradient-calculation"], [134, "backward-gradient-calculation"], [135, "backward-gradient-calculation"], [136, "backward-gradient-calculation"], [137, "backward-gradient-calculation"], [138, "backward-gradient-calculation"], [139, "backward-gradient-calculation"], [146, "backward-gradient-calculation"], [154, "backward-gradient-calculation"], [156, "backward-gradient-calculation"], [179, "backward-gradient-calculation"], [187, "backward-gradient-calculation"], [197, "backward-gradient-calculation"], [198, "backward-gradient-calculation"], [199, "backward-gradient-calculation"], [200, "backward-gradient-calculation"], [201, "backward-gradient-calculation"], [202, "backward-gradient-calculation"], [203, "backward-gradient-calculation"], [205, "backward-gradient-calculation"], [206, "backward-gradient-calculation"], [207, "backward-gradient-calculation"], [208, "backward-gradient-calculation"], [209, "backward-gradient-calculation"], [211, "backward-gradient-calculation"], [212, "backward-gradient-calculation"], [213, "backward-gradient-calculation"], [215, "backward-gradient-calculation"], [218, "backward-gradient-calculation"], [219, "backward-gradient-calculation"], [220, "backward-gradient-calculation"], [221, "backward-gradient-calculation"], [224, "backward-gradient-calculation"], [225, "backward-gradient-calculation"], [226, "backward-gradient-calculation"], [228, "backward-gradient-calculation"], [229, "backward-gradient-calculation"], [230, "backward-gradient-calculation"], [231, "backward-gradient-calculation"], [232, "backward-gradient-calculation"], [234, "backward-gradient-calculation"], [235, "backward-gradient-calculation"], [236, "backward-gradient-calculation"], [238, "backward-gradient-calculation"], [239, "backward-gradient-calculation"], [240, "backward-gradient-calculation"], [241, "backward-gradient-calculation"], [246, "backward-gradient-calculation"], [247, "backward-gradient-calculation"], [248, "backward-gradient-calculation"], [249, "backward-gradient-calculation"], [250, "backward-gradient-calculation"], [251, "backward-gradient-calculation"], [284, "backward-gradient-calculation"], [285, "backward-gradient-calculation"], [286, "backward-gradient-calculation"], [287, "backward-gradient-calculation"], [288, "backward-gradient-calculation"], [289, "backward-gradient-calculation"], [290, "backward-gradient-calculation"], [291, "backward-gradient-calculation"], [292, "backward-gradient-calculation"], [293, "backward-gradient-calculation"], [294, "backward-gradient-calculation"], [306, "backward-gradient-calculation"], [307, "backward-gradient-calculation"], [308, "backward-gradient-calculation"], [309, "backward-gradient-calculation"], [310, "backward-gradient-calculation"], [311, "backward-gradient-calculation"], [312, "backward-gradient-calculation"], [313, "backward-gradient-calculation"], [314, "backward-gradient-calculation"], [315, "backward-gradient-calculation"], [316, "backward-gradient-calculation"], [317, "backward-gradient-calculation"], [318, "backward-gradient-calculation"], [319, "backward-gradient-calculation"], [320, "backward-gradient-calculation"], [321, "backward-gradient-calculation"], [322, "backward-gradient-calculation"], [323, "backward-gradient-calculation"], [324, "backward-gradient-calculation"], [325, "backward-gradient-calculation"], [326, "backward-gradient-calculation"], [327, "backward-gradient-calculation"], [328, "backward-gradient-calculation"], [329, "backward-gradient-calculation"], [330, "backward-gradient-calculation"], [332, "backward-gradient-calculation"], [334, "backward-gradient-calculation"], [336, "backward-gradient-calculation"], [337, "backward-gradient-calculation"], [338, "backward-gradient-calculation"], [339, "backward-gradient-calculation"], [340, "backward-gradient-calculation"], [341, "backward-gradient-calculation"], [342, "backward-gradient-calculation"], [343, "backward-gradient-calculation"], [344, "backward-gradient-calculation"], [345, "backward-gradient-calculation"]], "Behavior": [[168, "behavior"], [169, "behavior"], [170, "behavior"], [243, "behavior"], [244, "behavior"], [245, "behavior"]], "Benefits": [[272, "benefits"]], "Binary Functions": [[305, null]], "Bottleneck Configuration": [[67, "bottleneck-configuration"], [68, "bottleneck-configuration"]], "CIFAR10": [[5, null]], "CIFAR100": [[6, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [6, "class-signature"], [7, "class-signature"], [8, "class-signature"], [23, "class-signature"], [25, "class-signature"], [31, "class-signature"], [36, "class-signature"], [37, "class-signature"], [50, "class-signature"], [54, "class-signature"], [58, "class-signature"], [62, "class-signature"], [63, "class-signature"], [64, "class-signature"], [69, "class-signature"], [78, "class-signature"], [89, "class-signature"], [96, "class-signature"], [106, "class-signature"], [111, "class-signature"], [116, "class-signature"], [118, "class-signature"], [122, "class-signature"], [123, "class-signature"], [124, "class-signature"], [125, "class-signature"], [126, "class-signature"], [127, "class-signature"], [128, "class-signature"], [129, "class-signature"], [181, "class-signature"], [182, "class-signature"], [183, "class-signature"], [184, "class-signature"], [185, "class-signature"], [186, "class-signature"], [187, "class-signature"], [188, "class-signature"], [198, "class-signature"], [199, "class-signature"], [200, "class-signature"], [201, "class-signature"], [202, "class-signature"], [203, "class-signature"], [204, "class-signature"], [205, "class-signature"], [206, "class-signature"], [207, "class-signature"], [208, "class-signature"], [209, "class-signature"], [211, "class-signature"], [212, "class-signature"], [213, "class-signature"], [215, "class-signature"], [216, "class-signature"], [217, "class-signature"], [218, "class-signature"], [219, "class-signature"], [220, "class-signature"], [221, "class-signature"], [224, "class-signature"], [225, "class-signature"], [226, "class-signature"], [228, "class-signature"], [229, "class-signature"], [230, "class-signature"], [231, "class-signature"], [232, "class-signature"], [234, "class-signature"], [235, "class-signature"], [236, "class-signature"], [237, "class-signature"], [238, "class-signature"], [239, "class-signature"], [240, "class-signature"], [241, "class-signature"], [243, "class-signature"], [244, "class-signature"], [245, "class-signature"], [246, "class-signature"], [247, "class-signature"], [248, "class-signature"], [249, "class-signature"], [250, "class-signature"], [251, "class-signature"], [253, "class-signature"], [256, "class-signature"], [258, "class-signature"], [259, "class-signature"], [260, "class-signature"], [261, "class-signature"], [262, "class-signature"], [263, "class-signature"], [264, "class-signature"], [265, "class-signature"], [266, "class-signature"], [267, "class-signature"], [268, "class-signature"], [283, "class-signature"], [346, "class-signature"], [347, "class-signature"], [348, "class-signature"], [349, "class-signature"], [350, "class-signature"], [351, "class-signature"], [352, "class-signature"], [353, "class-signature"], [354, "class-signature"], [355, "class-signature"]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [10, "conclusion"], [255, "conclusion"], [270, "conclusion"], [271, "conclusion"], [272, "conclusion"], [282, "conclusion"], [347, "conclusion"], [357, "conclusion"]], "Configurations": [[36, "configurations"]], "Containers": [[130, null]], "Conv-BatchNorm-ReLU": [[189, null]], "ConvNeXt": [[25, null]], "ConvNets": [[57, null], [120, "convnets"]], "Convolution Functions": [[143, null], [153, null]], "Convolution Layers": [[214, null], [223, null]], "Core Components": [[10, "core-components"]], "Create a Tensor from a list": [[331, null]], "Creating a Parameter": [[124, null]], "Creating a tensor with gradient tracking": [[283, null]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[357, "custom-pipelines"]], "Defining a Custom Optimizer": [[257, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[123, null]], "Defining a custom optimizer": [[256, null]], "DenseNet": [[31, null]], "Depthwise Separable Convolution": [[189, null]], "Description": [[90, "description"], [91, "description"], [92, "description"], [93, "description"], [94, "description"], [95, "description"], [107, "description"], [108, "description"], [109, "description"], [273, "description"]], "Dropout Functions": [[152, null], [153, null]], "Dropout Layers": [[222, null], [223, null]], "EfficientNet": [[36, null]], "EfficientNet Configurations": [[36, "id1"]], "EfficientNet_V2": [[37, null]], "Example": [[3, null], [3, null], [3, null], [12, "example"], [13, "example"], [14, "example"], [16, "example"], [17, "example"], [18, "example"], [19, "example"], [20, "example"], [21, "example"], [22, "example"], [65, "example"], [66, "example"], [144, "example"], [255, null], [255, null], [255, null], [270, "example"], [272, "example"], [275, "example"], [277, "example"], [278, "example"], [279, "example"], [280, "example"], [281, "example"], [282, null], [282, null], [282, null], [295, "example"], [296, "example"], [297, "example"], [298, "example"], [299, "example"], [301, "example"], [302, "example"], [303, "example"], [304, "example"], [306, "example"], [307, "example"], [308, "example"], [309, "example"], [310, "example"], [311, "example"], [312, "example"], [313, "example"], [315, "example"], [317, "example"], [319, "example"], [320, "example"], [321, "example"], [322, "example"], [323, "example"], [324, "example"], [325, "example"], [326, "example"], [327, "example"], [328, "example"], [329, "example"], [330, "example"], [332, "example"], [334, "example"], [338, "example"], [340, "example"], [341, "example"], [342, "example"], [344, "example"], [345, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[271, null]], "Example 2: Adding a new axis to a 2D tensor": [[271, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[271, null]], "Example Usage": [[10, "example-usage"], [51, "example-usage"], [52, "example-usage"], [53, "example-usage"], [55, "example-usage"], [56, "example-usage"], [58, "example-usage"], [59, "example-usage"], [60, "example-usage"], [61, "example-usage"], [102, "example-usage"], [103, "example-usage"], [104, "example-usage"], [105, "example-usage"], [110, "example-usage"], [180, "example-usage"], [346, "example-usage"], [347, "example-usage"], [357, "example-usage"]], "Example Use Cases": [[274, "example-use-cases"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [6, "examples"], [7, "examples"], [8, "examples"], [11, "examples"], [23, "examples"], [24, "examples"], [25, "examples"], [26, "examples"], [27, "examples"], [28, "examples"], [29, "examples"], [30, "examples"], [31, "examples"], [32, "examples"], [33, "examples"], [34, "examples"], [35, "examples"], [36, "examples"], [38, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [47, "examples"], [48, "examples"], [49, "examples"], [64, "examples"], [67, "examples"], [68, "examples"], [69, "examples"], [70, "examples"], [71, "examples"], [72, "examples"], [73, "examples"], [74, "examples"], [75, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [79, "examples"], [80, "examples"], [81, "examples"], [82, "examples"], [83, "examples"], [84, "examples"], [85, "examples"], [86, "examples"], [87, "examples"], [88, "examples"], [90, "examples"], [91, "examples"], [92, "examples"], [93, "examples"], [94, "examples"], [95, "examples"], [97, "examples"], [98, "examples"], [99, "examples"], [100, "examples"], [101, "examples"], [107, "examples"], [108, "examples"], [109, "examples"], [111, "examples"], [112, "examples"], [113, "examples"], [114, "examples"], [115, "examples"], [116, "examples"], [117, "examples"], [118, "examples"], [119, "examples"], [121, "examples"], [122, "examples"], [123, "examples"], [124, "examples"], [125, "examples"], [126, "examples"], [127, "examples"], [128, "examples"], [129, "examples"], [131, "examples"], [132, "examples"], [134, "examples"], [135, "examples"], [136, "examples"], [137, "examples"], [138, "examples"], [139, "examples"], [140, "examples"], [141, "examples"], [142, "examples"], [145, "examples"], [146, "examples"], [147, "examples"], [148, "examples"], [149, "examples"], [150, "examples"], [151, "examples"], [154, "examples"], [156, "examples"], [157, "examples"], [158, "examples"], [159, "examples"], [161, "examples"], [162, "examples"], [163, "examples"], [164, "examples"], [166, "examples"], [167, "examples"], [168, "examples"], [169, "examples"], [170, "examples"], [171, "examples"], [172, "examples"], [173, "examples"], [175, "examples"], [176, "examples"], [177, "examples"], [179, "examples"], [181, "examples"], [182, "examples"], [183, "examples"], [184, "examples"], [185, "examples"], [186, "examples"], [187, "examples"], [188, "examples"], [190, "examples"], [192, "examples"], [193, "examples"], [194, "examples"], [195, "examples"], [196, "examples"], [197, "examples"], [198, "examples"], [199, "examples"], [200, "examples"], [201, "examples"], [202, "examples"], [203, "examples"], [204, "examples"], [205, "examples"], [206, "examples"], [207, "examples"], [208, "examples"], [209, "examples"], [211, "examples"], [212, "examples"], [213, "examples"], [215, "examples"], [216, "examples"], [217, "examples"], [218, "examples"], [219, "examples"], [220, "examples"], [221, "examples"], [224, "examples"], [225, "examples"], [226, "examples"], [228, "examples"], [229, "examples"], [230, "examples"], [231, "examples"], [232, "examples"], [234, "examples"], [235, "examples"], [236, "examples"], [237, "examples"], [238, "examples"], [239, "examples"], [240, "examples"], [241, "examples"], [243, "examples"], [244, "examples"], [245, "examples"], [246, "examples"], [247, "examples"], [248, "examples"], [249, "examples"], [250, "examples"], [251, "examples"], [253, "examples"], [256, "examples"], [257, "examples"], [258, "examples"], [259, "examples"], [260, "examples"], [261, "examples"], [262, "examples"], [263, "examples"], [264, "examples"], [265, "examples"], [266, "examples"], [267, "examples"], [268, "examples"], [273, "examples"], [283, "examples"], [284, "examples"], [285, "examples"], [286, "examples"], [287, "examples"], [289, "examples"], [290, "examples"], [291, "examples"], [292, "examples"], [293, "examples"], [294, "examples"], [300, "examples"], [314, "examples"], [316, "examples"], [318, "examples"], [331, "examples"], [333, "examples"], [336, "examples"], [337, "examples"], [339, "examples"], [343, "examples"], [348, "examples"], [349, "examples"], [350, "examples"], [351, "examples"], [352, "examples"], [353, "examples"], [354, "examples"], [355, "examples"]], "FashionMNIST": [[7, null]], "Features": [[11, "features"]], "Forward Calculation": [[12, "forward-calculation"], [13, "forward-calculation"], [14, "forward-calculation"], [16, "forward-calculation"], [17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [20, "forward-calculation"], [21, "forward-calculation"], [22, "forward-calculation"], [78, "forward-calculation"], [89, "forward-calculation"], [96, "forward-calculation"], [106, "forward-calculation"], [125, "forward-calculation"], [126, "forward-calculation"], [127, "forward-calculation"], [128, "forward-calculation"], [129, "forward-calculation"], [131, "forward-calculation"], [132, "forward-calculation"], [134, "forward-calculation"], [135, "forward-calculation"], [136, "forward-calculation"], [137, "forward-calculation"], [138, "forward-calculation"], [139, "forward-calculation"], [144, "forward-calculation"], [147, "forward-calculation"], [154, "forward-calculation"], [156, "forward-calculation"], [168, "forward-calculation"], [169, "forward-calculation"], [170, "forward-calculation"], [179, "forward-calculation"], [181, "forward-calculation"], [182, "forward-calculation"], [183, "forward-calculation"], [184, "forward-calculation"], [185, "forward-calculation"], [186, "forward-calculation"], [187, "forward-calculation"], [188, "forward-calculation"], [192, "forward-calculation"], [193, "forward-calculation"], [196, "forward-calculation"], [197, "forward-calculation"], [198, "forward-calculation"], [199, "forward-calculation"], [200, "forward-calculation"], [201, "forward-calculation"], [202, "forward-calculation"], [203, "forward-calculation"], [204, "forward-calculation"], [205, "forward-calculation"], [206, "forward-calculation"], [207, "forward-calculation"], [208, "forward-calculation"], [209, "forward-calculation"], [211, "forward-calculation"], [212, "forward-calculation"], [213, "forward-calculation"], [215, "forward-calculation"], [216, "forward-calculation"], [217, "forward-calculation"], [218, "forward-calculation"], [219, "forward-calculation"], [220, "forward-calculation"], [221, "forward-calculation"], [224, "forward-calculation"], [225, "forward-calculation"], [226, "forward-calculation"], [228, "forward-calculation"], [229, "forward-calculation"], [230, "forward-calculation"], [231, "forward-calculation"], [232, "forward-calculation"], [234, "forward-calculation"], [235, "forward-calculation"], [236, "forward-calculation"], [237, "forward-calculation"], [238, "forward-calculation"], [239, "forward-calculation"], [240, "forward-calculation"], [241, "forward-calculation"], [243, "forward-calculation"], [244, "forward-calculation"], [245, "forward-calculation"], [246, "forward-calculation"], [247, "forward-calculation"], [248, "forward-calculation"], [249, "forward-calculation"], [250, "forward-calculation"], [251, "forward-calculation"], [284, "forward-calculation"], [285, "forward-calculation"], [286, "forward-calculation"], [287, "forward-calculation"], [288, "forward-calculation"], [289, "forward-calculation"], [290, "forward-calculation"], [291, "forward-calculation"], [292, "forward-calculation"], [293, "forward-calculation"], [294, "forward-calculation"], [306, "forward-calculation"], [307, "forward-calculation"], [308, "forward-calculation"], [309, "forward-calculation"], [310, "forward-calculation"], [311, "forward-calculation"], [312, "forward-calculation"], [313, "forward-calculation"], [314, "forward-calculation"], [315, "forward-calculation"], [316, "forward-calculation"], [317, "forward-calculation"], [318, "forward-calculation"], [319, "forward-calculation"], [320, "forward-calculation"], [321, "forward-calculation"], [322, "forward-calculation"], [323, "forward-calculation"], [324, "forward-calculation"], [325, "forward-calculation"], [326, "forward-calculation"], [327, "forward-calculation"], [328, "forward-calculation"], [329, "forward-calculation"], [330, "forward-calculation"], [332, "forward-calculation"], [334, "forward-calculation"], [336, "forward-calculation"], [337, "forward-calculation"], [338, "forward-calculation"], [339, "forward-calculation"], [340, "forward-calculation"], [341, "forward-calculation"], [342, "forward-calculation"], [343, "forward-calculation"], [344, "forward-calculation"], [345, "forward-calculation"], [348, "forward-calculation"], [349, "forward-calculation"], [350, "forward-calculation"], [351, "forward-calculation"], [352, "forward-calculation"], [353, "forward-calculation"], [354, "forward-calculation"], [355, "forward-calculation"]], "Forward Pass": [[116, "forward-pass"]], "Function Signature": [[12, "function-signature"], [13, "function-signature"], [14, "function-signature"], [16, "function-signature"], [17, "function-signature"], [18, "function-signature"], [19, "function-signature"], [20, "function-signature"], [21, "function-signature"], [22, "function-signature"], [24, "function-signature"], [26, "function-signature"], [27, "function-signature"], [28, "function-signature"], [29, "function-signature"], [30, "function-signature"], [32, "function-signature"], [33, "function-signature"], [34, "function-signature"], [35, "function-signature"], [38, "function-signature"], [39, "function-signature"], [40, "function-signature"], [41, "function-signature"], [42, "function-signature"], [43, "function-signature"], [44, "function-signature"], [45, "function-signature"], [46, "function-signature"], [47, "function-signature"], [48, "function-signature"], [49, "function-signature"], [51, "function-signature"], [52, "function-signature"], [53, "function-signature"], [55, "function-signature"], [56, "function-signature"], [59, "function-signature"], [60, "function-signature"], [61, "function-signature"], [65, "function-signature"], [66, "function-signature"], [67, "function-signature"], [68, "function-signature"], [70, "function-signature"], [71, "function-signature"], [72, "function-signature"], [73, "function-signature"], [74, "function-signature"], [75, "function-signature"], [76, "function-signature"], [77, "function-signature"], [79, "function-signature"], [80, "function-signature"], [81, "function-signature"], [82, "function-signature"], [83, "function-signature"], [84, "function-signature"], [85, "function-signature"], [86, "function-signature"], [87, "function-signature"], [88, "function-signature"], [90, "function-signature"], [91, "function-signature"], [92, "function-signature"], [93, "function-signature"], [94, "function-signature"], [95, "function-signature"], [97, "function-signature"], [98, "function-signature"], [99, "function-signature"], [100, "function-signature"], [101, "function-signature"], [102, "function-signature"], [103, "function-signature"], [104, "function-signature"], [105, "function-signature"], [107, "function-signature"], [108, "function-signature"], [109, "function-signature"], [110, "function-signature"], [112, "function-signature"], [113, "function-signature"], [114, "function-signature"], [115, "function-signature"], [117, "function-signature"], [119, "function-signature"], [121, "function-signature"], [131, "function-signature"], [132, "function-signature"], [134, "function-signature"], [135, "function-signature"], [136, "function-signature"], [137, "function-signature"], [138, "function-signature"], [139, "function-signature"], [140, "function-signature"], [141, "function-signature"], [142, "function-signature"], [144, "function-signature"], [145, "function-signature"], [146, "function-signature"], [147, "function-signature"], [148, "function-signature"], [149, "function-signature"], [150, "function-signature"], [151, "function-signature"], [154, "function-signature"], [156, "function-signature"], [157, "function-signature"], [158, "function-signature"], [159, "function-signature"], [161, "function-signature"], [162, "function-signature"], [163, "function-signature"], [164, "function-signature"], [166, "function-signature"], [167, "function-signature"], [168, "function-signature"], [169, "function-signature"], [170, "function-signature"], [171, "function-signature"], [172, "function-signature"], [173, "function-signature"], [175, "function-signature"], [176, "function-signature"], [177, "function-signature"], [179, "function-signature"], [180, "function-signature"], [190, "function-signature"], [192, "function-signature"], [193, "function-signature"], [194, "function-signature"], [195, "function-signature"], [196, "function-signature"], [197, "function-signature"], [270, "function-signature"], [272, "function-signature"], [273, "function-signature"], [275, "function-signature"], [277, "function-signature"], [278, "function-signature"], [279, "function-signature"], [280, "function-signature"], [281, "function-signature"], [284, "function-signature"], [285, "function-signature"], [286, "function-signature"], [287, "function-signature"], [288, "function-signature"], [289, "function-signature"], [290, "function-signature"], [291, "function-signature"], [292, "function-signature"], [293, "function-signature"], [294, "function-signature"], [295, "function-signature"], [296, "function-signature"], [297, "function-signature"], [298, "function-signature"], [299, "function-signature"], [300, "function-signature"], [301, "function-signature"], [302, "function-signature"], [303, "function-signature"], [304, "function-signature"], [306, "function-signature"], [307, "function-signature"], [308, "function-signature"], [309, "function-signature"], [310, "function-signature"], [311, "function-signature"], [312, "function-signature"], [313, "function-signature"], [314, "function-signature"], [315, "function-signature"], [316, "function-signature"], [317, "function-signature"], [318, "function-signature"], [319, "function-signature"], [320, "function-signature"], [321, "function-signature"], [322, "function-signature"], [323, "function-signature"], [324, "function-signature"], [325, "function-signature"], [326, "function-signature"], [327, "function-signature"], [328, "function-signature"], [329, "function-signature"], [330, "function-signature"], [331, "function-signature"], [332, "function-signature"], [333, "function-signature"], [334, "function-signature"], [336, "function-signature"], [337, "function-signature"], [338, "function-signature"], [339, "function-signature"], [340, "function-signature"], [341, "function-signature"], [342, "function-signature"], [343, "function-signature"], [344, "function-signature"], [345, "function-signature"]], "Fused Layers": [[189, null]], "Future Work": [[4, "future-work"]], "Getting Started": [[257, "getting-started"]], "How It Works": [[270, "how-it-works"], [272, "how-it-works"]], "Hyperparameter Configuration": [[76, "hyperparameter-configuration"], [77, "hyperparameter-configuration"]], "Image Datasets": [[9, null]], "Image Transformations": [[356, null]], "Inception": [[50, null]], "InceptionResNet": [[54, null]], "Indexing and slicing": [[283, null]], "Inspecting Optimizer State": [[257, null], [258, null], [259, null], [260, null], [261, null], [262, null], [263, null], [264, null], [265, null], [266, null], [267, null], [268, null]], "Integration with lucid": [[3, "integration-with-lucid"], [255, "integration-with-lucid"], [282, "integration-with-lucid"], [357, "integration-with-lucid"]], "Iterating through a tensor": [[283, null]], "Key Components": [[3, "key-components"], [255, "key-components"]], "Key Features": [[4, "key-features"], [10, "key-features"], [102, "key-features"], [103, "key-features"], [104, "key-features"], [105, "key-features"], [110, "key-features"], [257, "key-features"], [282, "key-features"]], "Key Transformations": [[357, "key-transformations"]], "Layer Configuration": [[70, "layer-configuration"], [71, "layer-configuration"], [72, "layer-configuration"], [73, "layer-configuration"], [74, "layer-configuration"], [75, "layer-configuration"]], "LeNet": [[58, null]], "Learn More": [[282, null]], "Limitations": [[10, "limitations"]], "Linear Algebra Operations": [[15, null]], "Linear Functions": [[153, null], [155, null]], "Linear Layers": [[223, null], [227, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[153, null], [160, null]], "Loss Layers": [[223, null], [233, null]], "Lucid": [[10, null]], "MNIST": [[8, null]], "Mathematical Expression": [[164, "mathematical-expression"]], "Matrix Multiplication Rules": [[288, "matrix-multiplication-rules"]], "Metadata Captured": [[273, "metadata-captured"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [6, "methods"], [7, "methods"], [8, "methods"], [54, "methods"], [58, "methods"], [111, "methods"], [123, "methods"], [124, "methods"], [256, "methods"], [283, "methods"]], "MobileNet": [[62, null]], "MobileNet_V2": [[63, null]], "MobileNet_V3": [[64, null]], "Modules": [[223, null]], "Normalization Functions": [[153, null], [165, null]], "Normalization Layers": [[223, null], [242, null]], "Notes": [[10, "notes"]], "Optimizers": [[269, null]], "Organizing Models": [[255, "organizing-models"]], "Overview": [[3, "overview"], [4, "overview"], [10, "overview"], [50, "overview"], [51, "overview"], [52, "overview"], [53, "overview"], [54, "overview"], [55, "overview"], [56, "overview"], [58, "overview"], [59, "overview"], [60, "overview"], [61, "overview"], [62, "overview"], [63, "overview"], [64, "overview"], [79, "overview"], [80, "overview"], [81, "overview"], [82, "overview"], [83, "overview"], [84, "overview"], [85, "overview"], [86, "overview"], [97, "overview"], [98, "overview"], [99, "overview"], [100, "overview"], [101, "overview"], [255, "overview"], [257, "overview"], [282, "overview"], [357, "overview"]], "Parameters": [[1, "parameters"], [5, "parameters"], [6, "parameters"], [7, "parameters"], [8, "parameters"], [12, "parameters"], [13, "parameters"], [14, "parameters"], [16, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [20, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [51, "parameters"], [52, "parameters"], [53, "parameters"], [54, "parameters"], [55, "parameters"], [56, "parameters"], [58, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [87, "parameters"], [88, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [104, "parameters"], [105, "parameters"], [106, "parameters"], [107, "parameters"], [108, "parameters"], [109, "parameters"], [110, "parameters"], [111, "parameters"], [112, "parameters"], [113, "parameters"], [114, "parameters"], [115, "parameters"], [116, "parameters"], [117, "parameters"], [118, "parameters"], [119, "parameters"], [121, "parameters"], [122, "parameters"], [124, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [129, "parameters"], [131, "parameters"], [132, "parameters"], [134, "parameters"], [135, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [140, "parameters"], [141, "parameters"], [142, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [154, "parameters"], [156, "parameters"], [157, "parameters"], [158, "parameters"], [159, "parameters"], [161, "parameters"], [162, "parameters"], [163, "parameters"], [164, "parameters"], [166, "parameters"], [167, "parameters"], [168, "parameters"], [169, "parameters"], [170, "parameters"], [171, "parameters"], [172, "parameters"], [173, "parameters"], [175, "parameters"], [176, "parameters"], [177, "parameters"], [179, "parameters"], [180, "parameters"], [181, "parameters"], [182, "parameters"], [183, "parameters"], [184, "parameters"], [185, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [190, "parameters"], [192, "parameters"], [193, "parameters"], [194, "parameters"], [195, "parameters"], [196, "parameters"], [197, "parameters"], [198, "parameters"], [199, "parameters"], [202, "parameters"], [203, "parameters"], [205, "parameters"], [206, "parameters"], [207, "parameters"], [209, "parameters"], [211, "parameters"], [212, "parameters"], [213, "parameters"], [215, "parameters"], [216, "parameters"], [217, "parameters"], [218, "parameters"], [219, "parameters"], [220, "parameters"], [221, "parameters"], [224, "parameters"], [225, "parameters"], [226, "parameters"], [228, "parameters"], [229, "parameters"], [230, "parameters"], [231, "parameters"], [232, "parameters"], [234, "parameters"], [235, "parameters"], [236, "parameters"], [237, "parameters"], [238, "parameters"], [239, "parameters"], [240, "parameters"], [241, "parameters"], [243, "parameters"], [244, "parameters"], [245, "parameters"], [246, "parameters"], [247, "parameters"], [248, "parameters"], [249, "parameters"], [250, "parameters"], [251, "parameters"], [253, "parameters"], [258, "parameters"], [259, "parameters"], [260, "parameters"], [261, "parameters"], [262, "parameters"], [263, "parameters"], [264, "parameters"], [265, "parameters"], [266, "parameters"], [267, "parameters"], [268, "parameters"], [272, "parameters"], [273, "parameters"], [275, "parameters"], [277, "parameters"], [278, "parameters"], [279, "parameters"], [280, "parameters"], [281, "parameters"], [283, "parameters"], [284, "parameters"], [285, "parameters"], [286, "parameters"], [287, "parameters"], [288, "parameters"], [289, "parameters"], [290, "parameters"], [291, "parameters"], [292, "parameters"], [293, "parameters"], [294, "parameters"], [295, "parameters"], [296, "parameters"], [297, "parameters"], [298, "parameters"], [299, "parameters"], [300, "parameters"], [301, "parameters"], [302, "parameters"], [303, "parameters"], [304, "parameters"], [306, "parameters"], [307, "parameters"], [308, "parameters"], [309, "parameters"], [310, "parameters"], [311, "parameters"], [312, "parameters"], [313, "parameters"], [314, "parameters"], [315, "parameters"], [316, "parameters"], [317, "parameters"], [318, "parameters"], [319, "parameters"], [320, "parameters"], [321, "parameters"], [322, "parameters"], [323, "parameters"], [324, "parameters"], [325, "parameters"], [326, "parameters"], [327, "parameters"], [328, "parameters"], [329, "parameters"], [330, "parameters"], [331, "parameters"], [332, "parameters"], [333, "parameters"], [334, "parameters"], [336, "parameters"], [337, "parameters"], [338, "parameters"], [339, "parameters"], [340, "parameters"], [341, "parameters"], [342, "parameters"], [343, "parameters"], [344, "parameters"], [345, "parameters"], [346, "parameters"], [347, "parameters"], [348, "parameters"], [349, "parameters"], [350, "parameters"], [351, "parameters"], [352, "parameters"], [353, "parameters"], [354, "parameters"], [355, "parameters"]], "Performing backpropagation": [[283, null]], "Pooling Functions": [[153, null], [174, null]], "Pooling Layers": [[223, null], [252, null]], "Potential Pitfalls": [[270, "potential-pitfalls"], [272, "potential-pitfalls"]], "Properties": [[124, "properties"], [283, "properties"]], "Raises": [[12, "raises"], [13, "raises"], [14, "raises"], [16, "raises"], [17, "raises"], [18, "raises"], [19, "raises"], [20, "raises"], [21, "raises"], [22, "raises"]], "Random Number Generations": [[276, null]], "References": [[5, "references"], [6, "references"], [7, "references"], [8, "references"], [187, "references"], [257, "references"]], "Regularization": [[146, "regularization"]], "ResNeSt": [[69, null]], "ResNeXt": [[89, null]], "ResNet": [[78, null]], "Returns": [[12, "returns"], [13, "returns"], [14, "returns"], [16, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [20, "returns"], [21, "returns"], [22, "returns"], [24, "returns"], [26, "returns"], [27, "returns"], [28, "returns"], [29, "returns"], [30, "returns"], [32, "returns"], [33, "returns"], [34, "returns"], [35, "returns"], [38, "returns"], [39, "returns"], [40, "returns"], [41, "returns"], [42, "returns"], [43, "returns"], [44, "returns"], [45, "returns"], [46, "returns"], [47, "returns"], [48, "returns"], [49, "returns"], [51, "returns"], [52, "returns"], [53, "returns"], [55, "returns"], [56, "returns"], [59, "returns"], [60, "returns"], [61, "returns"], [65, "returns"], [66, "returns"], [67, "returns"], [68, "returns"], [70, "returns"], [71, "returns"], [72, "returns"], [73, "returns"], [74, "returns"], [75, "returns"], [76, "returns"], [77, "returns"], [79, "returns"], [80, "returns"], [81, "returns"], [82, "returns"], [83, "returns"], [84, "returns"], [85, "returns"], [86, "returns"], [87, "returns"], [88, "returns"], [90, "returns"], [91, "returns"], [92, "returns"], [93, "returns"], [94, "returns"], [95, "returns"], [97, "returns"], [98, "returns"], [99, "returns"], [100, "returns"], [101, "returns"], [102, "returns"], [103, "returns"], [104, "returns"], [105, "returns"], [107, "returns"], [108, "returns"], [109, "returns"], [110, "returns"], [112, "returns"], [113, "returns"], [114, "returns"], [115, "returns"], [117, "returns"], [119, "returns"], [121, "returns"], [131, "returns"], [132, "returns"], [134, "returns"], [135, "returns"], [136, "returns"], [137, "returns"], [138, "returns"], [139, "returns"], [140, "returns"], [141, "returns"], [142, "returns"], [144, "returns"], [145, "returns"], [146, "returns"], [147, "returns"], [148, "returns"], [149, "returns"], [150, "returns"], [151, "returns"], [154, "returns"], [156, "returns"], [157, "returns"], [158, "returns"], [159, "returns"], [161, "returns"], [162, "returns"], [163, "returns"], [164, "returns"], [166, "returns"], [167, "returns"], [168, "returns"], [169, "returns"], [170, "returns"], [171, "returns"], [172, "returns"], [173, "returns"], [175, "returns"], [176, "returns"], [177, "returns"], [179, "returns"], [180, "returns"], [188, "returns"], [190, "returns"], [192, "returns"], [193, "returns"], [194, "returns"], [195, "returns"], [196, "returns"], [197, "returns"], [204, "returns"], [270, "returns"], [272, "returns"], [275, "returns"], [277, "returns"], [278, "returns"], [279, "returns"], [280, "returns"], [281, "returns"], [284, "returns"], [285, "returns"], [286, "returns"], [287, "returns"], [288, "returns"], [289, "returns"], [290, "returns"], [291, "returns"], [292, "returns"], [293, "returns"], [294, "returns"], [295, "returns"], [296, "returns"], [297, "returns"], [298, "returns"], [299, "returns"], [300, "returns"], [301, "returns"], [302, "returns"], [303, "returns"], [304, "returns"], [306, "returns"], [307, "returns"], [308, "returns"], [309, "returns"], [310, "returns"], [311, "returns"], [312, "returns"], [313, "returns"], [314, "returns"], [315, "returns"], [316, "returns"], [317, "returns"], [318, "returns"], [319, "returns"], [320, "returns"], [321, "returns"], [322, "returns"], [323, "returns"], [324, "returns"], [325, "returns"], [326, "returns"], [327, "returns"], [328, "returns"], [329, "returns"], [330, "returns"], [331, "returns"], [332, "returns"], [333, "returns"], [334, "returns"], [336, "returns"], [337, "returns"], [338, "returns"], [339, "returns"], [340, "returns"], [341, "returns"], [342, "returns"], [343, "returns"], [344, "returns"], [345, "returns"]], "SENet": [[96, null]], "SKNet": [[106, null]], "See Also": [[257, "see-also"]], "Selective Kernel": [[189, null]], "Squeeze-and-Excitation": [[189, null]], "Summary Table": [[121, "summary-table"]], "Tensor Generating Functions": [[305, null]], "Tensor Operations": [[305, null]], "Tensor Utilites": [[335, null]], "Type Definitions": [[274, "type-definitions"]], "Unary Functions": [[305, null]], "Usage": [[4, "usage"], [46, "usage"], [47, "usage"], [48, "usage"], [49, "usage"], [122, "usage"], [180, "usage"], [270, "usage"], [271, "usage"], [272, "usage"], [336, "usage"], [346, "usage"], [347, "usage"], [357, "usage"]], "Use another Tensor as input": [[331, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using the ASGD Optimizer": [[258, null]], "Using the Adadelta Optimizer": [[259, null]], "Using the Adagrad Optimizer": [[260, null]], "Using the Adam Optimizer": [[261, null]], "Using the AdamW Optimizer": [[262, null]], "Using the Adamax Optimizer": [[263, null]], "Using the NAdam Optimizer": [[264, null]], "Using the RAdam Optimizer": [[265, null]], "Using the RMSprop Optimizer": [[266, null]], "Using the Rprop Optimizer": [[267, null]], "Using the SGD Optimizer": [[268, null]], "Utility Functions": [[153, null], [178, null]], "VGGNet": [[111, null]], "Vision Layers": [[223, null], [254, null]], "Weight Initializations": [[191, null]], "Why Use Type Aliases?": [[274, null]], "Xception": [[116, null]], "ZFNet": [[118, null]], "activation Functions": [[153, null]], "alexnet": [[24, null]], "convnext_base": [[26, null]], "convnext_large": [[27, null]], "convnext_small": [[28, null]], "convnext_tiny": [[29, null]], "convnext_xlarge": [[30, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "densenet_121": [[32, null]], "densenet_169": [[33, null]], "densenet_201": [[34, null]], "densenet_264": [[35, null]], "efficientnet_b0": [[38, null]], "efficientnet_b1": [[39, null]], "efficientnet_b2": [[40, null]], "efficientnet_b3": [[41, null]], "efficientnet_b4": [[42, null]], "efficientnet_b5": [[43, null]], "efficientnet_b6": [[44, null]], "efficientnet_b7": [[45, null]], "efficientnet_v2_l": [[46, null]], "efficientnet_v2_m": [[47, null]], "efficientnet_v2_s": [[48, null]], "efficientnet_v2_xl": [[49, null]], "inception_resnet_v1": [[55, null]], "inception_resnet_v2": [[56, null]], "inception_v1": [[51, null]], "inception_v3": [[52, null]], "inception_v4": [[53, null]], "lenet_1": [[59, null]], "lenet_4": [[60, null]], "lenet_5": [[61, null]], "lucid.Tensor": [[283, null]], "lucid.abs": [[306, null]], "lucid.add": [[284, null]], "lucid.arange": [[295, null]], "lucid.arccos": [[307, null]], "lucid.arcsin": [[308, null]], "lucid.arctan": [[309, null]], "lucid.clip": [[310, null]], "lucid.concatenate": [[332, null]], "lucid.cos": [[311, null]], "lucid.cosh": [[312, null]], "lucid.cube": [[313, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[296, null]], "lucid.div": [[285, null]], "lucid.dot": [[286, null]], "lucid.empty": [[297, null]], "lucid.empty_like": [[298, null]], "lucid.exp": [[314, null]], "lucid.eye": [[299, null]], "lucid.flatten": [[333, null]], "lucid.grad_enabled": [[270, null]], "lucid.hstack": [[334, null]], "lucid.inner": [[287, null]], "lucid.linalg": [[11, null]], "lucid.linalg.cholesky": [[12, null]], "lucid.linalg.det": [[13, null]], "lucid.linalg.eig": [[14, null]], "lucid.linalg.inv": [[16, null]], "lucid.linalg.matrix_power": [[17, null]], "lucid.linalg.norm": [[18, null]], "lucid.linalg.pinv": [[19, null]], "lucid.linalg.qr": [[20, null]], "lucid.linalg.solve": [[21, null]], "lucid.linalg.svd": [[22, null]], "lucid.linspace": [[300, null]], "lucid.log": [[315, null]], "lucid.matmul": [[288, null]], "lucid.max": [[316, null]], "lucid.maximum": [[289, null]], "lucid.mean": [[317, null]], "lucid.meshgrid": [[336, null]], "lucid.min": [[318, null]], "lucid.minimum": [[290, null]], "lucid.models": [[120, null]], "lucid.mul": [[291, null]], "lucid.newaxis": [[271, null]], "lucid.nn": [[255, null]], "lucid.nn.functional": [[153, null]], "lucid.no_grad": [[272, null]], "lucid.ones": [[301, null]], "lucid.ones_like": [[302, null]], "lucid.optim": [[257, null]], "lucid.outer": [[292, null]], "lucid.pad": [[337, null]], "lucid.power": [[293, null]], "lucid.random": [[282, null]], "lucid.random.bernoulli": [[275, null]], "lucid.random.rand": [[277, null]], "lucid.random.randint": [[278, null]], "lucid.random.randn": [[279, null]], "lucid.random.seed": [[280, null]], "lucid.random.uniform": [[281, null]], "lucid.ravel": [[338, null]], "lucid.reciprocal": [[319, null]], "lucid.register_model": [[273, null]], "lucid.repeat": [[339, null]], "lucid.reshape": [[340, null]], "lucid.sign": [[320, null]], "lucid.sin": [[321, null]], "lucid.sinh": [[322, null]], "lucid.sqrt": [[323, null]], "lucid.square": [[324, null]], "lucid.squeeze": [[341, null]], "lucid.stack": [[342, null]], "lucid.sub": [[294, null]], "lucid.sum": [[325, null]], "lucid.tan": [[326, null]], "lucid.tanh": [[327, null]], "lucid.tensor": [[331, null]], "lucid.tile": [[343, null]], "lucid.trace": [[328, null]], "lucid.transforms": [[357, null]], "lucid.transpose": [[329, null]], "lucid.types": [[274, null]], "lucid.unsqueeze": [[344, null]], "lucid.var": [[330, null]], "lucid.vstack": [[345, null]], "lucid.zeros": [[303, null]], "lucid.zeros_like": [[304, null]], "mobilenet": [[65, null]], "mobilenet_v2": [[66, null]], "mobilenet_v3_large": [[67, null]], "mobilenet_v3_small": [[68, null]], "models.summarize": [[121, null]], "nn.AdaptiveAvgPool1d": [[243, null]], "nn.AdaptiveAvgPool2d": [[244, null]], "nn.AdaptiveAvgPool3d": [[245, null]], "nn.AlphaDropout": [[215, null]], "nn.AvgPool1d": [[246, null]], "nn.AvgPool2d": [[247, null]], "nn.AvgPool3d": [[248, null]], "nn.BCELoss": [[228, null]], "nn.BatchNorm1d": [[234, null]], "nn.BatchNorm2d": [[235, null]], "nn.BatchNorm3d": [[236, null]], "nn.Bilinear": [[224, null]], "nn.Buffer": [[122, null]], "nn.Conv1d": [[211, null]], "nn.Conv2d": [[212, null]], "nn.Conv3d": [[213, null]], "nn.ConvBNReLU1d": [[181, null]], "nn.ConvBNReLU2d": [[182, null]], "nn.ConvBNReLU3d": [[183, null]], "nn.CrossEntropyLoss": [[229, null]], "nn.DepthSeparableConv1d": [[184, null]], "nn.DepthSeparableConv2d": [[185, null]], "nn.DepthSeparableConv3d": [[186, null]], "nn.DropBlock": [[216, null]], "nn.DropPath": [[217, null]], "nn.Dropout": [[218, null]], "nn.Dropout1d": [[219, null]], "nn.Dropout2d": [[220, null]], "nn.Dropout3d": [[221, null]], "nn.ELU": [[198, null]], "nn.GELU": [[199, null]], "nn.GlobalResponseNorm": [[237, null]], "nn.HardSigmoid": [[200, null]], "nn.HardSwish": [[201, null]], "nn.HuberLoss": [[230, null]], "nn.Identity": [[225, null]], "nn.InstanceNorm1d": [[238, null]], "nn.InstanceNorm2d": [[239, null]], "nn.InstanceNorm3d": [[240, null]], "nn.LayerNorm": [[241, null]], "nn.LeakyReLU": [[202, null]], "nn.Linear": [[226, null]], "nn.MSELoss": [[231, null]], "nn.MaxPool1d": [[249, null]], "nn.MaxPool2d": [[250, null]], "nn.MaxPool3d": [[251, null]], "nn.Module": [[123, null]], "nn.ModuleDict": [[125, null]], "nn.ModuleList": [[126, null]], "nn.NLLLoss": [[232, null]], "nn.Parameter": [[124, null]], "nn.ParameterDict": [[127, null]], "nn.ParameterList": [[128, null]], "nn.ReLU": [[203, null]], "nn.ReLU6": [[204, null]], "nn.SELU": [[205, null]], "nn.SEModule": [[187, null]], "nn.SelectiveKernel": [[188, null]], "nn.Sequential": [[129, null]], "nn.Sigmoid": [[206, null]], "nn.Softmax": [[207, null]], "nn.Swish": [[208, null]], "nn.Tanh": [[209, null]], "nn.Upsample": [[253, null]], "nn.functional.adaptive_avg_pool1d": [[168, null]], "nn.functional.adaptive_avg_pool2d": [[169, null]], "nn.functional.adaptive_avg_pool3d": [[170, null]], "nn.functional.alpha_dropout": [[145, null]], "nn.functional.avg_pool1d": [[171, null]], "nn.functional.avg_pool2d": [[172, null]], "nn.functional.avg_pool3d": [[173, null]], "nn.functional.batch_norm": [[163, null]], "nn.functional.bilinear": [[154, null]], "nn.functional.binary_cross_entropy": [[157, null]], "nn.functional.conv1d": [[140, null]], "nn.functional.conv2d": [[141, null]], "nn.functional.conv3d": [[142, null]], "nn.functional.cross_entropy": [[158, null]], "nn.functional.drop_block": [[146, null]], "nn.functional.drop_path": [[147, null]], "nn.functional.dropout": [[148, null]], "nn.functional.dropout1d": [[149, null]], "nn.functional.dropout2d": [[150, null]], "nn.functional.dropout3d": [[151, null]], "nn.functional.elu": [[131, null]], "nn.functional.gelu": [[132, null]], "nn.functional.global_response_norm": [[164, null]], "nn.functional.huber_loss": [[159, null]], "nn.functional.instance_norm": [[166, null]], "nn.functional.interpolate": [[179, null]], "nn.functional.layer_norm": [[167, null]], "nn.functional.leaky_relu": [[134, null]], "nn.functional.linear": [[156, null]], "nn.functional.max_pool1d": [[175, null]], "nn.functional.max_pool2d": [[176, null]], "nn.functional.max_pool3d": [[177, null]], "nn.functional.mse_loss": [[161, null]], "nn.functional.nll_loss": [[162, null]], "nn.functional.relu": [[135, null]], "nn.functional.rotate": [[180, null]], "nn.functional.selu": [[136, null]], "nn.functional.sigmoid": [[137, null]], "nn.functional.softmax": [[138, null]], "nn.functional.tanh": [[139, null]], "nn.functional.unfold": [[144, null]], "nn.init.constant": [[190, null]], "nn.init.kaiming_normal": [[192, null]], "nn.init.kaiming_uniform": [[193, null]], "nn.init.normal": [[194, null]], "nn.init.uniform": [[195, null]], "nn.init.xavier_normal": [[196, null]], "nn.init.xavier_uniform": [[197, null]], "optim.ASGD": [[258, null]], "optim.Adadelta": [[259, null]], "optim.Adagrad": [[260, null]], "optim.Adam": [[261, null]], "optim.AdamW": [[262, null]], "optim.Adamax": [[263, null]], "optim.NAdam": [[264, null]], "optim.Optimizer": [[256, null]], "optim.RAdam": [[265, null]], "optim.RMSprop": [[266, null]], "optim.Rprop": [[267, null]], "optim.SGD": [[268, null]], "resnest_101": [[70, null]], "resnest_14": [[71, null]], "resnest_200": [[72, null]], "resnest_26": [[73, null]], "resnest_269": [[74, null]], "resnest_50": [[75, null]], "resnest_50_1s4x24d": [[76, null]], "resnest_50_4s2x40d": [[77, null]], "resnet_1001": [[79, null]], "resnet_101": [[80, null]], "resnet_152": [[81, null]], "resnet_18": [[82, null]], "resnet_200": [[83, null]], "resnet_269": [[84, null]], "resnet_34": [[85, null]], "resnet_50": [[86, null]], "resnext_101_32x16d": [[90, null]], "resnext_101_32x32d": [[91, null]], "resnext_101_32x4d": [[92, null]], "resnext_101_32x8d": [[93, null]], "resnext_101_64x4d": [[94, null]], "resnext_50_32x4d": [[95, null]], "se_resnet_101": [[97, null]], "se_resnet_152": [[98, null]], "se_resnet_18": [[99, null]], "se_resnet_34": [[100, null]], "se_resnet_50": [[101, null]], "se_resnext_101_32x4d": [[102, null]], "se_resnext_101_32x8d": [[103, null]], "se_resnext_101_64x4d": [[104, null]], "se_resnext_50_32x4d": [[105, null]], "sk_resnet_18": [[107, null]], "sk_resnet_34": [[108, null]], "sk_resnet_50": [[109, null]], "sk_resnext_50_32x4d": [[110, null]], "transforms.CenterCrop": [[348, null]], "transforms.Compose": [[346, null]], "transforms.Normalize": [[349, null]], "transforms.RandomCrop": [[350, null]], "transforms.RandomGrayscale": [[351, null]], "transforms.RandomHorizontalFlip": [[352, null]], "transforms.RandomRotation": [[353, null]], "transforms.RandomVerticalFlip": [[354, null]], "transforms.Resize": [[355, null]], "transforms.ToTensor": [[347, null]], "vggnet_11": [[112, null]], "vggnet_13": [[113, null]], "vggnet_16": [[114, null]], "vggnet_19": [[115, null]], "wide_resnet_101": [[87, null]], "wide_resnet_50": [[88, null]], "xception": [[117, null]], "zfnet": [[119, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/CIFAR10", "datasets/image/CIFAR100", "datasets/image/FashionMNIST", "datasets/image/MNIST", "datasets/image/index", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/conv/alex/AlexNet", "models/conv/alex/alexnet", "models/conv/convnext/ConvNeXt", "models/conv/convnext/convnext_base", "models/conv/convnext/convnext_large", "models/conv/convnext/convnext_small", "models/conv/convnext/convnext_tiny", "models/conv/convnext/convnext_xlarge", "models/conv/dense/DenseNet", "models/conv/dense/densenet_121", "models/conv/dense/densenet_169", "models/conv/dense/densenet_201", "models/conv/dense/densenet_264", "models/conv/efficient/EfficientNet", "models/conv/efficient/EfficientNet_V2", "models/conv/efficient/efficientnet_b0", "models/conv/efficient/efficientnet_b1", "models/conv/efficient/efficientnet_b2", "models/conv/efficient/efficientnet_b3", "models/conv/efficient/efficientnet_b4", "models/conv/efficient/efficientnet_b5", "models/conv/efficient/efficientnet_b6", "models/conv/efficient/efficientnet_b7", "models/conv/efficient/efficientnet_v2_l", "models/conv/efficient/efficientnet_v2_m", "models/conv/efficient/efficientnet_v2_s", "models/conv/efficient/efficientnet_v2_xl", "models/conv/inception/Inception", "models/conv/inception/inception_v1", "models/conv/inception/inception_v3", "models/conv/inception/inception_v4", "models/conv/inception_res/InceptionResNet", "models/conv/inception_res/inception_resnet_v1", "models/conv/inception_res/inception_resnet_v2", "models/conv/index", "models/conv/lenet/LeNet", "models/conv/lenet/lenet_1", "models/conv/lenet/lenet_4", "models/conv/lenet/lenet_5", "models/conv/mobile/MobileNet", "models/conv/mobile/MobileNet_V2", "models/conv/mobile/MobileNet_V3", "models/conv/mobile/mobilenet", "models/conv/mobile/mobilenet_v2", "models/conv/mobile/mobilenet_v3_large", "models/conv/mobile/mobilenet_v3_small", "models/conv/resnest/ResNeSt", "models/conv/resnest/resnest_101", "models/conv/resnest/resnest_14", "models/conv/resnest/resnest_200", "models/conv/resnest/resnest_26", "models/conv/resnest/resnest_269", "models/conv/resnest/resnest_50", "models/conv/resnest/resnest_50_1s4x24d", "models/conv/resnest/resnest_50_4s2x40d", "models/conv/resnet/ResNet", "models/conv/resnet/resnet_1001", "models/conv/resnet/resnet_101", "models/conv/resnet/resnet_152", "models/conv/resnet/resnet_18", "models/conv/resnet/resnet_200", "models/conv/resnet/resnet_269", "models/conv/resnet/resnet_34", "models/conv/resnet/resnet_50", "models/conv/resnet/wide_resnet_101", "models/conv/resnet/wide_resnet_50", "models/conv/resnext/ResNeXt", "models/conv/resnext/resnext_101_32x16d", "models/conv/resnext/resnext_101_32x32d", "models/conv/resnext/resnext_101_32x4d", "models/conv/resnext/resnext_101_32x8d", "models/conv/resnext/resnext_101_64x4d", "models/conv/resnext/resnext_50_32x4d", "models/conv/senet/SENet", "models/conv/senet/se_resnet_101", "models/conv/senet/se_resnet_152", "models/conv/senet/se_resnet_18", "models/conv/senet/se_resnet_34", "models/conv/senet/se_resnet_50", "models/conv/senet/se_resnext_101_32x4d", "models/conv/senet/se_resnext_101_32x8d", "models/conv/senet/se_resnext_101_64x4d", "models/conv/senet/se_resnext_50_32x4d", "models/conv/sknet/SKNet", "models/conv/sknet/sk_resnet_18", "models/conv/sknet/sk_resnet_34", "models/conv/sknet/sk_resnet_50", "models/conv/sknet/sk_resnext_50_32x4d", "models/conv/vgg/VGGNet", "models/conv/vgg/vggnet_11", "models/conv/vgg/vggnet_13", "models/conv/vgg/vggnet_16", "models/conv/vgg/vggnet_19", "models/conv/xception/Xception", "models/conv/xception/xception", "models/conv/zfnet/ZFNet", "models/conv/zfnet/zfnet", "models/models", "models/summarize", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/drop_block", "nn/functions/drop/drop_path", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/global_response_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/fused/ConvBNReLU1d", "nn/fused/ConvBNReLU2d", "nn/fused/ConvBNReLU3d", "nn/fused/DepthSeparableConv1d", "nn/fused/DepthSeparableConv2d", "nn/fused/DepthSeparableConv3d", "nn/fused/SEModule", "nn/fused/SelectiveKernel", "nn/fused/index", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/HardSigmoid", "nn/modules/activation/HardSwish", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/ReLU6", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Swish", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/DropBlock", "nn/modules/drop/DropPath", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/GlobalResponseNorm", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/modules/vision/Upsample", "nn/modules/vision/index", "nn/nn", "optim/Optimizer", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "others/types", "random/functions/bernoulli", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/linspace", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/meshgrid", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/CIFAR10.rst", "datasets/image/CIFAR100.rst", "datasets/image/FashionMNIST.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/conv/alex/AlexNet.rst", "models/conv/alex/alexnet.rst", "models/conv/convnext/ConvNeXt.rst", "models/conv/convnext/convnext_base.rst", "models/conv/convnext/convnext_large.rst", "models/conv/convnext/convnext_small.rst", "models/conv/convnext/convnext_tiny.rst", "models/conv/convnext/convnext_xlarge.rst", "models/conv/dense/DenseNet.rst", "models/conv/dense/densenet_121.rst", "models/conv/dense/densenet_169.rst", "models/conv/dense/densenet_201.rst", "models/conv/dense/densenet_264.rst", "models/conv/efficient/EfficientNet.rst", "models/conv/efficient/EfficientNet_V2.rst", "models/conv/efficient/efficientnet_b0.rst", "models/conv/efficient/efficientnet_b1.rst", "models/conv/efficient/efficientnet_b2.rst", "models/conv/efficient/efficientnet_b3.rst", "models/conv/efficient/efficientnet_b4.rst", "models/conv/efficient/efficientnet_b5.rst", "models/conv/efficient/efficientnet_b6.rst", "models/conv/efficient/efficientnet_b7.rst", "models/conv/efficient/efficientnet_v2_l.rst", "models/conv/efficient/efficientnet_v2_m.rst", "models/conv/efficient/efficientnet_v2_s.rst", "models/conv/efficient/efficientnet_v2_xl.rst", "models/conv/inception/Inception.rst", "models/conv/inception/inception_v1.rst", "models/conv/inception/inception_v3.rst", "models/conv/inception/inception_v4.rst", "models/conv/inception_res/InceptionResNet.rst", "models/conv/inception_res/inception_resnet_v1.rst", "models/conv/inception_res/inception_resnet_v2.rst", "models/conv/index.rst", "models/conv/lenet/LeNet.rst", "models/conv/lenet/lenet_1.rst", "models/conv/lenet/lenet_4.rst", "models/conv/lenet/lenet_5.rst", "models/conv/mobile/MobileNet.rst", "models/conv/mobile/MobileNet_V2.rst", "models/conv/mobile/MobileNet_V3.rst", "models/conv/mobile/mobilenet.rst", "models/conv/mobile/mobilenet_v2.rst", "models/conv/mobile/mobilenet_v3_large.rst", "models/conv/mobile/mobilenet_v3_small.rst", "models/conv/resnest/ResNeSt.rst", "models/conv/resnest/resnest_101.rst", "models/conv/resnest/resnest_14.rst", "models/conv/resnest/resnest_200.rst", "models/conv/resnest/resnest_26.rst", "models/conv/resnest/resnest_269.rst", "models/conv/resnest/resnest_50.rst", "models/conv/resnest/resnest_50_1s4x24d.rst", "models/conv/resnest/resnest_50_4s2x40d.rst", "models/conv/resnet/ResNet.rst", "models/conv/resnet/resnet_1001.rst", "models/conv/resnet/resnet_101.rst", "models/conv/resnet/resnet_152.rst", "models/conv/resnet/resnet_18.rst", "models/conv/resnet/resnet_200.rst", "models/conv/resnet/resnet_269.rst", "models/conv/resnet/resnet_34.rst", "models/conv/resnet/resnet_50.rst", "models/conv/resnet/wide_resnet_101.rst", "models/conv/resnet/wide_resnet_50.rst", "models/conv/resnext/ResNeXt.rst", "models/conv/resnext/resnext_101_32x16d.rst", "models/conv/resnext/resnext_101_32x32d.rst", "models/conv/resnext/resnext_101_32x4d.rst", "models/conv/resnext/resnext_101_32x8d.rst", "models/conv/resnext/resnext_101_64x4d.rst", "models/conv/resnext/resnext_50_32x4d.rst", "models/conv/senet/SENet.rst", "models/conv/senet/se_resnet_101.rst", "models/conv/senet/se_resnet_152.rst", "models/conv/senet/se_resnet_18.rst", "models/conv/senet/se_resnet_34.rst", "models/conv/senet/se_resnet_50.rst", "models/conv/senet/se_resnext_101_32x4d.rst", "models/conv/senet/se_resnext_101_32x8d.rst", "models/conv/senet/se_resnext_101_64x4d.rst", "models/conv/senet/se_resnext_50_32x4d.rst", "models/conv/sknet/SKNet.rst", "models/conv/sknet/sk_resnet_18.rst", "models/conv/sknet/sk_resnet_34.rst", "models/conv/sknet/sk_resnet_50.rst", "models/conv/sknet/sk_resnext_50_32x4d.rst", "models/conv/vgg/VGGNet.rst", "models/conv/vgg/vggnet_11.rst", "models/conv/vgg/vggnet_13.rst", "models/conv/vgg/vggnet_16.rst", "models/conv/vgg/vggnet_19.rst", "models/conv/xception/Xception.rst", "models/conv/xception/xception.rst", "models/conv/zfnet/ZFNet.rst", "models/conv/zfnet/zfnet.rst", "models/models.rst", "models/summarize.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/drop_block.rst", "nn/functions/drop/drop_path.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/global_response_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/fused/ConvBNReLU1d.rst", "nn/fused/ConvBNReLU2d.rst", "nn/fused/ConvBNReLU3d.rst", "nn/fused/DepthSeparableConv1d.rst", "nn/fused/DepthSeparableConv2d.rst", "nn/fused/DepthSeparableConv3d.rst", "nn/fused/SEModule.rst", "nn/fused/SelectiveKernel.rst", "nn/fused/index.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/HardSigmoid.rst", "nn/modules/activation/HardSwish.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/ReLU6.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Swish.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/DropBlock.rst", "nn/modules/drop/DropPath.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/GlobalResponseNorm.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/modules/vision/Upsample.rst", "nn/modules/vision/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "others/types.rst", "random/functions/bernoulli.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/linspace.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"adaptive_avg_pool1d() (in module lucid.nn.functional)": [[168, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[169, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[170, "lucid.nn.functional.adaptive_avg_pool3d", false]], "alpha_dropout() (in module lucid.nn.functional)": [[145, "lucid.nn.functional.alpha_dropout", false]], "avg_pool1d() (in module lucid.nn.functional)": [[171, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[172, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[173, "lucid.nn.functional.avg_pool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[163, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[234, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[235, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[236, "lucid.nn.BatchNorm3d", false]], "bilinear() (in module lucid.nn.functional)": [[154, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[157, "lucid.nn.functional.binary_cross_entropy", false]], "cholesky() (in module lucid.linalg)": [[12, "lucid.linalg.cholesky", false]], "conv1d() (in module lucid.nn.functional)": [[140, "lucid.nn.functional.conv1d", false]], "conv2d() (in module lucid.nn.functional)": [[141, "lucid.nn.functional.conv2d", false]], "conv3d() (in module lucid.nn.functional)": [[142, "lucid.nn.functional.conv3d", false]], "convnext (class in lucid.models)": [[25, "lucid.models.ConvNeXt", false]], "convnext_base() (in module lucid.models)": [[26, "lucid.models.convnext_base", false]], "convnext_large() (in module lucid.models)": [[27, "lucid.models.convnext_large", false]], "convnext_small() (in module lucid.models)": [[28, "lucid.models.convnext_small", false]], "convnext_tiny() (in module lucid.models)": [[29, "lucid.models.convnext_tiny", false]], "convnext_xlarge() (in module lucid.models)": [[30, "lucid.models.convnext_xlarge", false]], "cross_entropy() (in module lucid.nn.functional)": [[158, "lucid.nn.functional.cross_entropy", false]], "det() (in module lucid.linalg)": [[13, "lucid.linalg.det", false]], "drop_block() (in module lucid.nn.functional)": [[146, "lucid.nn.functional.drop_block", false]], "drop_path() (in module lucid.nn.functional)": [[147, "lucid.nn.functional.drop_path", false]], "dropout() (in module lucid.nn.functional)": [[148, "lucid.nn.functional.dropout", false]], "dropout1d() (in module lucid.nn.functional)": [[149, "lucid.nn.functional.dropout1d", false]], "dropout2d() (in module lucid.nn.functional)": [[150, "lucid.nn.functional.dropout2d", false]], "dropout3d() (in module lucid.nn.functional)": [[151, "lucid.nn.functional.dropout3d", false]], "eig() (in module lucid.linalg)": [[14, "lucid.linalg.eig", false]], "elu() (in module lucid.nn.functional)": [[131, "lucid.nn.functional.elu", false]], "gelu() (in module lucid.nn.functional)": [[132, "lucid.nn.functional.gelu", false]], "global_response_norm() (in module lucid.nn.functional)": [[164, "lucid.nn.functional.global_response_norm", false]], "globalresponsenorm (class in lucid.nn)": [[237, "lucid.nn.GlobalResponseNorm", false]], "huber_loss() (in module lucid.nn.functional)": [[159, "lucid.nn.functional.huber_loss", false]], "instance_norm() (in module lucid.nn.functional)": [[166, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[238, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[239, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[240, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[179, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[16, "lucid.linalg.inv", false]], "layer_norm() (in module lucid.nn.functional)": [[167, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[241, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[134, "lucid.nn.functional.leaky_relu", false]], "linear() (in module lucid.nn.functional)": [[156, "lucid.nn.functional.linear", false]], "lucid": [[10, "module-lucid", false]], "matrix_power() (in module lucid.linalg)": [[17, "lucid.linalg.matrix_power", false]], "max_pool1d() (in module lucid.nn.functional)": [[175, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[176, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[177, "lucid.nn.functional.max_pool3d", false]], "module": [[10, "module-lucid", false]], "mse_loss() (in module lucid.nn.functional)": [[161, "lucid.nn.functional.mse_loss", false]], "nll_loss() (in module lucid.nn.functional)": [[162, "lucid.nn.functional.nll_loss", false]], "norm() (in module lucid.linalg)": [[18, "lucid.linalg.norm", false]], "pinv() (in module lucid.linalg)": [[19, "lucid.linalg.pinv", false]], "qr() (in module lucid.linalg)": [[20, "lucid.linalg.qr", false]], "relu() (in module lucid.nn.functional)": [[135, "lucid.nn.functional.relu", false]], "rotate() (in module lucid.nn.functional)": [[180, "lucid.nn.functional.rotate", false]], "selu() (in module lucid.nn.functional)": [[136, "lucid.nn.functional.selu", false]], "sigmoid() (in module lucid.nn.functional)": [[137, "lucid.nn.functional.sigmoid", false]], "softmax() (in module lucid.nn.functional)": [[138, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[21, "lucid.linalg.solve", false]], "svd() (in module lucid.linalg)": [[22, "lucid.linalg.svd", false]], "tanh() (in module lucid.nn.functional)": [[139, "lucid.nn.functional.tanh", false]], "unfold() (in module lucid.nn.functional)": [[144, "lucid.nn.functional.unfold", false]]}, "objects": {"": [[10, 0, 0, "-", "lucid"]], "lucid": [[283, 1, 1, "", "Tensor"], [306, 2, 1, "", "abs"], [284, 2, 1, "", "add"], [295, 2, 1, "", "arange"], [307, 2, 1, "", "arccos"], [308, 2, 1, "", "arcsin"], [309, 2, 1, "", "arctan"], [310, 2, 1, "", "clip"], [332, 2, 1, "", "concatenate"], [311, 2, 1, "", "cos"], [312, 2, 1, "", "cosh"], [313, 2, 1, "", "cube"], [296, 2, 1, "", "diag"], [285, 2, 1, "", "div"], [286, 2, 1, "", "dot"], [297, 2, 1, "", "empty"], [298, 2, 1, "", "empty_like"], [314, 2, 1, "", "exp"], [299, 2, 1, "", "eye"], [333, 2, 1, "", "flatten"], [270, 2, 1, "", "grad_enabled"], [334, 2, 1, "", "hstack"], [287, 2, 1, "", "inner"], [300, 2, 1, "", "linspace"], [315, 2, 1, "", "log"], [288, 2, 1, "", "matmul"], [316, 2, 1, "", "max"], [289, 2, 1, "", "maximum"], [317, 2, 1, "", "mean"], [336, 2, 1, "", "meshgrid"], [318, 2, 1, "", "min"], [290, 2, 1, "", "minimum"], [291, 2, 1, "", "mul"], [272, 2, 1, "", "no_grad"], [301, 2, 1, "", "ones"], [302, 2, 1, "", "ones_like"], [292, 2, 1, "", "outer"], [337, 2, 1, "", "pad"], [293, 2, 1, "", "power"], [338, 2, 1, "", "ravel"], [319, 2, 1, "", "reciprocal"], [273, 2, 1, "", "register_model"], [339, 2, 1, "", "repeat"], [340, 2, 1, "", "reshape"], [320, 2, 1, "", "sign"], [321, 2, 1, "", "sin"], [322, 2, 1, "", "sinh"], [323, 2, 1, "", "sqrt"], [324, 2, 1, "", "square"], [341, 2, 1, "", "squeeze"], [342, 2, 1, "", "stack"], [294, 2, 1, "", "sub"], [325, 2, 1, "", "sum"], [326, 2, 1, "", "tan"], [327, 2, 1, "", "tanh"], [331, 2, 1, "", "tensor"], [343, 2, 1, "", "tile"], [328, 2, 1, "", "trace"], [329, 2, 1, "", "transpose"], [344, 2, 1, "", "unsqueeze"], [330, 2, 1, "", "var"], [345, 2, 1, "", "vstack"], [303, 2, 1, "", "zeros"], [304, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "CIFAR10"], [6, 1, 1, "", "CIFAR100"], [7, 1, 1, "", "FashionMNIST"], [8, 1, 1, "", "MNIST"]], "lucid.linalg": [[12, 2, 1, "", "cholesky"], [13, 2, 1, "", "det"], [14, 2, 1, "", "eig"], [16, 2, 1, "", "inv"], [17, 2, 1, "", "matrix_power"], [18, 2, 1, "", "norm"], [19, 2, 1, "", "pinv"], [20, 2, 1, "", "qr"], [21, 2, 1, "", "solve"], [22, 2, 1, "", "svd"]], "lucid.models": [[23, 1, 1, "", "AlexNet"], [25, 1, 1, "", "ConvNeXt"], [31, 1, 1, "", "DenseNet"], [36, 1, 1, "", "EfficientNet"], [37, 1, 1, "", "EfficientNet_V2"], [50, 1, 1, "", "Inception"], [54, 1, 1, "", "InceptionResNet"], [58, 1, 1, "", "LeNet"], [62, 1, 1, "", "MobileNet"], [63, 1, 1, "", "MobileNet_V2"], [64, 1, 1, "", "MobileNet_V3"], [69, 1, 1, "", "ResNeSt"], [89, 1, 1, "", "ResNeXt"], [78, 1, 1, "", "ResNet"], [96, 1, 1, "", "SENet"], [106, 1, 1, "", "SKNet"], [111, 1, 1, "", "VGGNet"], [116, 1, 1, "", "Xception"], [118, 1, 1, "", "ZFNet"], [24, 2, 1, "", "alexnet"], [26, 2, 1, "", "convnext_base"], [27, 2, 1, "", "convnext_large"], [28, 2, 1, "", "convnext_small"], [29, 2, 1, "", "convnext_tiny"], [30, 2, 1, "", "convnext_xlarge"], [32, 2, 1, "", "densenet_121"], [33, 2, 1, "", "densenet_169"], [34, 2, 1, "", "densenet_201"], [35, 2, 1, "", "densenet_264"], [38, 2, 1, "", "efficientnet_b0"], [39, 2, 1, "", "efficientnet_b1"], [40, 2, 1, "", "efficientnet_b2"], [41, 2, 1, "", "efficientnet_b3"], [42, 2, 1, "", "efficientnet_b4"], [43, 2, 1, "", "efficientnet_b5"], [44, 2, 1, "", "efficientnet_b6"], [45, 2, 1, "", "efficientnet_b7"], [46, 2, 1, "", "efficientnet_v2_l"], [47, 2, 1, "", "efficientnet_v2_m"], [48, 2, 1, "", "efficientnet_v2_s"], [49, 2, 1, "", "efficientnet_v2_xl"], [55, 2, 1, "", "inception_resnet_v1"], [56, 2, 1, "", "inception_resnet_v2"], [51, 2, 1, "", "inception_v1"], [52, 2, 1, "", "inception_v3"], [53, 2, 1, "", "inception_v4"], [59, 2, 1, "", "lenet_1"], [60, 2, 1, "", "lenet_4"], [61, 2, 1, "", "lenet_5"], [65, 2, 1, "", "mobilenet"], [66, 2, 1, "", "mobilenet_v2"], [67, 2, 1, "", "mobilenet_v3_large"], [68, 2, 1, "", "mobilenet_v3_small"], [70, 2, 1, "", "resnest_101"], [71, 2, 1, "", "resnest_14"], [72, 2, 1, "", "resnest_200"], [73, 2, 1, "", "resnest_26"], [74, 2, 1, "", "resnest_269"], [75, 2, 1, "", "resnest_50"], [76, 2, 1, "", "resnest_50_1s4x24d"], [77, 2, 1, "", "resnest_50_4s2x40d"], [79, 2, 1, "", "resnet_1001"], [80, 2, 1, "", "resnet_101"], [81, 2, 1, "", "resnet_152"], [82, 2, 1, "", "resnet_18"], [83, 2, 1, "", "resnet_200"], [84, 2, 1, "", "resnet_269"], [85, 2, 1, "", "resnet_34"], [86, 2, 1, "", "resnet_50"], [90, 2, 1, "", "resnext_101_32x16d"], [91, 2, 1, "", "resnext_101_32x32d"], [92, 2, 1, "", "resnext_101_32x4d"], [93, 2, 1, "", "resnext_101_32x8d"], [94, 2, 1, "", "resnext_101_64x4d"], [95, 2, 1, "", "resnext_50_32x4d"], [97, 2, 1, "", "se_resnet_101"], [98, 2, 1, "", "se_resnet_152"], [99, 2, 1, "", "se_resnet_18"], [100, 2, 1, "", "se_resnet_34"], [101, 2, 1, "", "se_resnet_50"], [102, 2, 1, "", "se_resnext_101_32x4d"], [103, 2, 1, "", "se_resnext_101_32x8d"], [104, 2, 1, "", "se_resnext_101_64x4d"], [105, 2, 1, "", "se_resnext_50_32x4d"], [107, 2, 1, "", "sk_resnet_18"], [108, 2, 1, "", "sk_resnet_34"], [109, 2, 1, "", "sk_resnet_50"], [110, 2, 1, "", "sk_resnext_50_32x4d"], [121, 2, 1, "", "summarize"], [112, 2, 1, "", "vggnet_11"], [113, 2, 1, "", "vggnet_13"], [114, 2, 1, "", "vggnet_16"], [115, 2, 1, "", "vggnet_19"], [87, 2, 1, "", "wide_resnet_101"], [88, 2, 1, "", "wide_resnet_50"], [117, 2, 1, "", "xception"], [119, 2, 1, "", "zfnet"]], "lucid.nn": [[243, 1, 1, "", "AdaptiveAvgPool1d"], [244, 1, 1, "", "AdaptiveAvgPool2d"], [245, 1, 1, "", "AdaptiveAvgPool3d"], [215, 1, 1, "", "AlphaDropout"], [246, 1, 1, "", "AvgPool1d"], [247, 1, 1, "", "AvgPool2d"], [248, 1, 1, "", "AvgPool3d"], [228, 1, 1, "", "BCELoss"], [234, 1, 1, "", "BatchNorm1d"], [235, 1, 1, "", "BatchNorm2d"], [236, 1, 1, "", "BatchNorm3d"], [224, 1, 1, "", "Bilinear"], [122, 1, 1, "", "Buffer"], [211, 1, 1, "", "Conv1d"], [212, 1, 1, "", "Conv2d"], [213, 1, 1, "", "Conv3d"], [181, 1, 1, "", "ConvBNReLU1d"], [182, 1, 1, "", "ConvBNReLU2d"], [183, 1, 1, "", "ConvBNReLU3d"], [229, 1, 1, "", "CrossEntropyLoss"], [184, 1, 1, "", "DepthSeparableConv1d"], [185, 1, 1, "", "DepthSeparableConv2d"], [186, 1, 1, "", "DepthSeparableConv3d"], [216, 1, 1, "", "DropBlock"], [217, 1, 1, "", "DropPath"], [218, 1, 1, "", "Dropout"], [219, 1, 1, "", "Dropout1d"], [220, 1, 1, "", "Dropout2d"], [221, 1, 1, "", "Dropout3d"], [198, 1, 1, "", "ELU"], [199, 1, 1, "", "GELU"], [237, 1, 1, "", "GlobalResponseNorm"], [200, 1, 1, "", "HardSigmoid"], [201, 1, 1, "", "HardSwish"], [230, 1, 1, "", "HuberLoss"], [225, 1, 1, "", "Identity"], [238, 1, 1, "", "InstanceNorm1d"], [239, 1, 1, "", "InstanceNorm2d"], [240, 1, 1, "", "InstanceNorm3d"], [241, 1, 1, "", "LayerNorm"], [202, 1, 1, "", "LeakyReLU"], [226, 1, 1, "", "Linear"], [231, 1, 1, "", "MSELoss"], [249, 1, 1, "", "MaxPool1d"], [250, 1, 1, "", "MaxPool2d"], [251, 1, 1, "", "MaxPool3d"], [123, 1, 1, "", "Module"], [125, 1, 1, "", "ModuleDict"], [126, 1, 1, "", "ModuleList"], [232, 1, 1, "", "NLLLoss"], [124, 1, 1, "", "Parameter"], [127, 1, 1, "", "ParameterDict"], [128, 1, 1, "", "ParameterList"], [203, 1, 1, "", "ReLU"], [204, 1, 1, "", "ReLU6"], [205, 1, 1, "", "SELU"], [187, 1, 1, "", "SEModule"], [188, 1, 1, "", "SelectiveKernel"], [129, 1, 1, "", "Sequential"], [206, 1, 1, "", "Sigmoid"], [207, 1, 1, "", "Softmax"], [208, 1, 1, "", "Swish"], [209, 1, 1, "", "Tanh"], [253, 1, 1, "", "Upsample"]], "lucid.nn.functional": [[168, 2, 1, "", "adaptive_avg_pool1d"], [169, 2, 1, "", "adaptive_avg_pool2d"], [170, 2, 1, "", "adaptive_avg_pool3d"], [145, 2, 1, "", "alpha_dropout"], [171, 2, 1, "", "avg_pool1d"], [172, 2, 1, "", "avg_pool2d"], [173, 2, 1, "", "avg_pool3d"], [163, 2, 1, "", "batch_norm"], [154, 2, 1, "", "bilinear"], [157, 2, 1, "", "binary_cross_entropy"], [140, 2, 1, "", "conv1d"], [141, 2, 1, "", "conv2d"], [142, 2, 1, "", "conv3d"], [158, 2, 1, "", "cross_entropy"], [146, 2, 1, "", "drop_block"], [147, 2, 1, "", "drop_path"], [148, 2, 1, "", "dropout"], [149, 2, 1, "", "dropout1d"], [150, 2, 1, "", "dropout2d"], [151, 2, 1, "", "dropout3d"], [131, 2, 1, "", "elu"], [132, 2, 1, "", "gelu"], [164, 2, 1, "", "global_response_norm"], [159, 2, 1, "", "huber_loss"], [166, 2, 1, "", "instance_norm"], [179, 2, 1, "", "interpolate"], [167, 2, 1, "", "layer_norm"], [134, 2, 1, "", "leaky_relu"], [156, 2, 1, "", "linear"], [175, 2, 1, "", "max_pool1d"], [176, 2, 1, "", "max_pool2d"], [177, 2, 1, "", "max_pool3d"], [161, 2, 1, "", "mse_loss"], [162, 2, 1, "", "nll_loss"], [135, 2, 1, "", "relu"], [180, 2, 1, "", "rotate"], [136, 2, 1, "", "selu"], [137, 2, 1, "", "sigmoid"], [138, 2, 1, "", "softmax"], [139, 2, 1, "", "tanh"], [144, 2, 1, "", "unfold"]], "lucid.nn.init": [[190, 2, 1, "", "constant"], [192, 2, 1, "", "kaiming_normal"], [193, 2, 1, "", "kaiming_uniform"], [194, 2, 1, "", "normal"], [195, 2, 1, "", "uniform"], [196, 2, 1, "", "xavier_normal"], [197, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[258, 1, 1, "", "ASGD"], [259, 1, 1, "", "Adadelta"], [260, 1, 1, "", "Adagrad"], [261, 1, 1, "", "Adam"], [262, 1, 1, "", "AdamW"], [263, 1, 1, "", "Adamax"], [264, 1, 1, "", "NAdam"], [256, 1, 1, "", "Optimizer"], [265, 1, 1, "", "RAdam"], [266, 1, 1, "", "RMSprop"], [267, 1, 1, "", "Rprop"], [268, 1, 1, "", "SGD"]], "lucid.random": [[275, 2, 1, "", "bernoulli"], [277, 2, 1, "", "rand"], [278, 2, 1, "", "randint"], [279, 2, 1, "", "randn"], [280, 2, 1, "", "seed"], [281, 2, 1, "", "uniform"]], "lucid.transforms": [[348, 1, 1, "", "CenterCrop"], [346, 1, 1, "", "Compose"], [349, 1, 1, "", "Normalize"], [350, 1, 1, "", "RandomCrop"], [351, 1, 1, "", "RandomGrayscale"], [352, 1, 1, "", "RandomHorizontalFlip"], [353, 1, 1, "", "RandomRotation"], [354, 1, 1, "", "RandomVerticalFlip"], [355, 1, 1, "", "Resize"], [347, 1, 1, "", "ToTensor"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [3, 10, 11, 17, 19, 22, 48, 67, 68, 70, 71, 72, 73, 74, 75, 120, 121, 122, 123, 124, 125, 127, 128, 129, 168, 169, 170, 188, 229, 232, 243, 244, 245, 246, 249, 250, 255, 256, 257, 271, 273, 288, 296, 315, 317, 325, 328, 330, 331, 341, 347, 349, 357], "0": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 36, 37, 46, 47, 48, 49, 52, 54, 58, 65, 96, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 154, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 303, 304, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 325, 326, 327, 329, 330, 331, 332, 334, 337, 338, 339, 341, 342, 344, 345, 346, 348, 349, 350, 351, 352, 353, 354, 355, 357], "000": [5, 6, 7, 8, 297, 298], "0000": [229, 230, 232], "0001": 258, "000e": [297, 298], "001": [258, 261, 262, 264, 265, 268], "002": [263, 264], "004": 264, "005": 202, "008": [65, 120], "01": [134, 202, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268], "01051757": 279, "013": [34, 120], "016": [79, 120], "0205": 229, "0217": 229, "0227": 229, "024": [101, 120], "026": [90, 120], "028": [95, 120], "0299": 229, "032": [46, 86, 120], "03545": 120, "044715": [132, 199], "0450": 229, "0451": 229, "046": [44, 120], "047": [113, 120], "04719755": 307, "0474259": 137, "048": [103, 120], "0480": 229, "04861": 120, "05": [163, 166, 167, 181, 182, 183, 202, 234, 235, 236, 238, 239, 240, 241], "0507": [136, 205], "06": [25, 164, 237, 259, 267], "069": [73, 84, 120], "07": [146, 157, 158, 216, 228, 229], "0700": 229, "0706508": 209, "071": [79, 120], "0721": 229, "073": [109, 120], "07722396": 208, "0794": 232, "08": [261, 262, 263, 264, 265, 266], "0802": 232, "08333333": 19, "085537": 314, "088": [101, 120], "08955": 120, "0900": [207, 229], "096": [117, 120], "0986": [138, 207], "09861229": 315, "0992": 229, "1": [0, 1, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 54, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 96, 102, 103, 104, 105, 106, 110, 111, 116, 118, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 154, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 274, 275, 277, 278, 279, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 301, 302, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357], "10": [0, 1, 2, 3, 5, 6, 7, 23, 24, 25, 31, 58, 59, 60, 61, 70, 71, 72, 73, 74, 75, 76, 77, 111, 118, 119, 120, 121, 125, 126, 129, 141, 142, 154, 156, 168, 211, 212, 213, 220, 221, 224, 226, 235, 236, 239, 243, 247, 248, 250, 260, 273, 278, 281, 282, 285, 288, 291, 292, 300, 309, 325, 348, 350, 351, 353], "100": [6, 24, 46, 47, 48, 49, 112, 113, 114, 115, 120, 273, 357], "1000": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119], "1000000": 258, "1001": [79, 120, 229], "1003": 229, "1007": 120, "10096": 120, "101": [69, 70, 80, 87, 90, 91, 92, 93, 94, 97, 102, 103, 104, 120], "10106": 120, "1014": 136, "102": [84, 120], "1025": [126, 129], "1026": [126, 129], "1027": [126, 129], "10499": 137, "1050": 206, "1054": 232, "1056": [126, 129], "10590": 120, "108": [47, 120], "1097": 120, "11": [82, 99, 111, 112, 120, 154, 211, 212, 213, 220, 224, 235, 236, 239, 247, 248, 250, 288, 348, 349, 350, 351, 353], "110": [74, 120], "1105": 120, "1109": 120, "111": [40, 120], "1111": 228, "112": [67, 75, 120], "1134": 154, "114b": 351, "119": 154, "1192": [137, 138, 207], "12": [31, 32, 33, 34, 35, 41, 59, 60, 120, 127, 154, 170, 211, 212, 213, 220, 221, 224, 235, 236, 239, 245, 247, 248, 250, 288, 292, 293, 348, 350, 351, 353], "120": [46, 58, 61, 67, 68, 120], "121": [31, 32, 120], "123": [192, 193, 194, 195, 196, 197, 280, 281], "124": [192, 193, 196, 197], "125": 248, "1250": 230, "1251": 120, "1258": 120, "126": [87, 120], "128": [25, 29, 44, 55, 78, 87, 88, 111, 120, 129, 188, 346, 357], "1280": 64, "128x128": [346, 357], "13": [51, 111, 113, 120, 154, 211, 212, 213, 224, 236, 247, 248, 250, 288, 348, 350, 351, 353], "1314": 120, "132": [112, 120], "1324": 120, "133": [113, 120], "136": [48, 120], "138": [114, 120], "14": [33, 71, 120, 211, 212, 213, 220, 221, 224, 236, 247, 248, 250, 274, 288, 292, 348, 350, 351, 353], "1409": 120, "143": [115, 120], "144": 68, "145": 154, "148": [28, 120], "149": [33, 79, 120], "15": [0, 154, 211, 212, 213, 224, 236, 247, 248, 250, 288, 292, 328, 348, 350, 351, 353, 357], "1513": 232, "152": [81, 98, 120], "155": 288, "1556": 120, "1588": [132, 199], "16": [31, 32, 58, 61, 64, 67, 68, 90, 96, 111, 114, 120, 126, 127, 129, 169, 170, 181, 182, 183, 187, 188, 211, 212, 213, 220, 221, 224, 235, 236, 244, 245, 247, 248, 250, 255, 288, 292, 323, 348, 350, 351, 353], "160": [67, 80, 120], "16227766": 20, "16425": 232, "1643": 228, "166": 288, "167": 201, "169": [31, 33, 120], "17": [73, 120, 211, 212, 213, 224, 236, 248, 287, 348, 350, 351, 353], "170": 154, "1704": 120, "17520119": 322, "177": [92, 120], "18": [60, 82, 99, 107, 120, 211, 212, 213, 220, 224, 236, 248, 291, 292, 348, 350, 351, 353], "1800": 229, "184": 67, "18877099": 208, "19": [42, 111, 115, 120, 141, 142, 154, 212, 213, 236, 286, 288], "192": [25, 59, 60, 81, 120], "194": [90, 120], "196": [30, 120], "1966": [138, 206, 207], "197": [27, 120], "198": [67, 120], "1998": [120, 229], "1_53": 120, "1d": [140, 168, 171, 175, 181, 184, 234, 238, 243, 281, 288, 296, 328, 336, 337, 338, 339, 343], "1e": [25, 146, 157, 158, 163, 164, 166, 167, 181, 182, 183, 216, 228, 229, 234, 235, 236, 237, 238, 239, 240, 241, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "1e6": 258, "1s4x24d": 76, "1st": [23, 118], "2": [1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 36, 37, 46, 47, 48, 49, 59, 60, 61, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 77, 82, 99, 107, 118, 120, 121, 122, 123, 124, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 154, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 188, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 274, 275, 277, 278, 279, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 300, 301, 302, 303, 304, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357], "20": [0, 5, 6, 7, 8, 34, 120, 125, 126, 129, 212, 213, 220, 236, 292, 314], "200": [67, 72, 83, 120], "2004": 120, "201": [34, 72, 120], "2011": 187, "2012": 120, "2014": 120, "2015": 120, "2016": 120, "2017": 120, "2018": [120, 187], "2019": 120, "2020": 120, "2021": 120, "2022": 120, "2023": 187, "2039": 232, "204": 213, "21": [48, 85, 100, 120, 127, 154, 212, 213, 236, 292], "210": [49, 120], "211": 288, "21841": 30, "22": [55, 117, 120, 154, 212, 213, 220, 236, 286, 288], "2201": 120, "221": [49, 120], "2231": [229, 232], "224": [23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 88, 90, 91, 92, 93, 94, 95, 102, 103, 104, 105, 107, 108, 109, 110, 111, 118, 120], "2247": [234, 235, 236, 238, 239, 240, 241], "224x224": [36, 51, 102, 103, 104, 105, 110], "226": 288, "22752314": 279, "2278": 120, "23": [70, 80, 87, 90, 91, 92, 93, 94, 97, 212, 213, 236], "232": [65, 104, 120], "2324": [120, 205], "234": [192, 193, 194, 195, 196, 197, 281], "235": [41, 120], "238": [68, 120], "23840584": 208, "24": [31, 32, 64, 67, 68, 72, 76, 83, 154, 169, 212, 213, 220, 236, 244, 292], "240": [67, 68, 115, 120], "240x240": 36, "2424": [138, 207], "2447": 207, "246": [59, 120], "24d": 76, "25": [0, 76, 86, 95, 107, 120, 137, 147, 206, 213, 231, 236, 247, 248, 285, 300, 319, 330], "2500": [228, 230, 232], "2512": 198, "2547": 205, "256": [25, 78, 111], "26": [73, 120, 127, 156, 213, 226, 236, 292], "260": 120, "260x260": 36, "26325684": 279, "264": [35, 120], "2689": [138, 206, 207], "26894142": 208, "269": [74, 84, 120], "27": [75, 105, 120, 154, 211, 213, 236, 313], "272": [94, 120], "274": [70, 110, 120], "276": [192, 193, 196, 197], "28": [29, 59, 60, 101, 120, 154, 213, 292], "288": [68, 72, 120], "289": [38, 120], "28x28": [7, 8, 59, 60], "29": [110, 120, 213], "299": [116, 120], "299r": 351, "299x299": [52, 53, 55, 56], "2_i": [238, 239, 240], "2d": [141, 150, 169, 172, 176, 182, 185, 235, 239, 244, 288, 296, 299, 328, 333, 336, 337, 339, 343, 353], "2e": 263, "2nd": [23, 118], "2x": 77, "2x2": [144, 348, 350], "3": [1, 2, 3, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 59, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 116, 118, 120, 122, 123, 124, 126, 127, 128, 129, 132, 137, 138, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 154, 156, 159, 161, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 310, 312, 313, 314, 315, 316, 317, 318, 322, 323, 324, 325, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355], "30": [43, 52, 74, 77, 84, 120, 126, 180, 213, 353], "300": 120, "300x300": 36, "302": [47, 120], "3026": 232, "30823025": 208, "31": [154, 213, 288], "310": [297, 298], "31622777": 20, "319": 120, "32": [31, 33, 34, 61, 69, 70, 71, 72, 73, 74, 75, 90, 91, 92, 93, 95, 120, 126, 129, 154, 156, 169, 181, 182, 183, 187, 188, 212, 213, 226, 244, 255, 286, 287, 292], "320": [73, 120], "321": [192, 193, 196, 197], "326": [97, 120], "32x16d": 120, "32x32": [5, 6, 58, 61], "32x32d": 120, "32x4d": [102, 105, 110, 120], "32x8d": [103, 120], "33": [35, 120, 126, 129, 156, 213, 226], "33333333": 19, "336": [27, 93, 112, 120], "337": [35, 120], "34": [85, 100, 108, 120, 126, 129, 154, 213, 288, 292], "342": [192, 193, 196, 197], "344": [42, 120], "345": [192, 193, 194, 195, 196, 197, 281], "35": [56, 120, 126, 129, 213], "350": [30, 120], "352": [51, 120], "355": [45, 120], "3567": [228, 232], "357": [114, 119, 120], "36": [72, 81, 83, 98, 213], "3679": [131, 136, 198], "368": [107, 109, 120], "36th": 120, "37": 211, "370": [40, 120], "372": 154, "375": 231, "3750": 230, "37754067": 208, "378": [60, 120], "380": 120, "380x380": 36, "38344152": 277, "384": 25, "38629436": 315, "389056": 314, "38th": 120, "392": [52, 120], "393": [43, 51, 120], "3935": 198, "3d": [142, 151, 170, 173, 177, 183, 186, 213, 236, 240, 245], "3x3": [120, 282], "4": [0, 1, 2, 3, 11, 12, 13, 14, 16, 18, 19, 20, 25, 31, 36, 58, 59, 60, 65, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 80, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 100, 101, 108, 109, 120, 121, 127, 129, 140, 141, 142, 144, 146, 147, 149, 150, 151, 154, 156, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 184, 185, 186, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 258, 261, 265, 266, 268, 271, 274, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 302, 304, 310, 315, 316, 317, 318, 319, 321, 323, 324, 325, 326, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 342, 343, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355], "40": [53, 64, 67, 68, 77, 120], "400": 61, "4044": 228, "4076": 229, "4096": [23, 118], "40d": 77, "41421356": 12, "416": [84, 102, 120], "41666667": 19, "417": [77, 120], "41808962": 279, "419974": 139, "4199743": 209, "42": [154, 187, 274, 282], "421": [192, 193, 196, 197], "423": [192, 193, 194, 195], "42718872": 20, "4278": 120, "4284": 120, "4286": 228, "43": [44, 120, 286, 288], "432": [43, 120], "4323": 198, "4375": 230, "43758721": 277, "44": [80, 92, 120], "440": [48, 120], "4472136": 14, "448": [45, 120], "4495": [236, 240], "45": [108, 120, 154, 180, 353], "4510": 120, "4520": 120, "4545": 215, "455": [94, 120], "456": 120, "456x456": 36, "46": [28, 120], "464": [26, 77, 120], "468": [91, 120], "4700": 120, "4708": 120, "47112767": 309, "472": [91, 120], "48": [31, 34, 35, 68, 70, 74, 84, 102, 120, 156, 226], "480": [33, 67, 120], "481": [67, 120], "483": [75, 120], "49": [97, 120], "4979": 198, "4s2x40d": [77, 120], "4x": 76, "4x4": 355, "5": [1, 2, 10, 11, 16, 17, 18, 19, 23, 25, 36, 38, 52, 58, 59, 60, 61, 64, 67, 68, 106, 107, 108, 109, 118, 120, 121, 123, 124, 125, 126, 127, 129, 132, 137, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 154, 156, 159, 161, 163, 166, 167, 168, 171, 172, 179, 181, 182, 183, 188, 190, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 246, 247, 248, 250, 251, 267, 271, 274, 275, 278, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 298, 299, 300, 302, 304, 306, 307, 308, 316, 317, 318, 319, 320, 325, 328, 329, 330, 331, 334, 336, 340, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357], "50": [5, 6, 69, 75, 76, 77, 78, 86, 88, 95, 101, 105, 109, 110, 120, 156, 226, 267, 286, 288, 300, 351, 352, 354, 357], "5000": [228, 230, 232], "504": [66, 120], "50_1s4x24d": 120, "510": 120, "5108": 232, "512": [25, 56, 78, 82, 108, 120], "519": 120, "52359878": 308, "528": 120, "528x528": 36, "53": [154, 287], "530": [91, 120], "536": [41, 120], "537": [68, 120], "543": [192, 193, 194, 195, 196, 197, 281], "54308063": 312, "544": [114, 120], "545": 293, "5455": 215, "549": [80, 120], "55": [47, 120], "557": [86, 120], "559": [105, 120], "560": [39, 71, 120], "563": [192, 193, 196, 197], "568": [49, 120], "569": [103, 120], "57": [109, 120, 154], "57079633": [307, 308], "57366333": 280, "576": 68, "586": [53, 120], "587g": 351, "589": [29, 120], "591": [26, 120], "592": [99, 120], "5987": 120, "5995": 120, "5th": [23, 118], "6": [11, 19, 23, 25, 31, 32, 33, 34, 35, 36, 58, 61, 69, 75, 78, 85, 86, 88, 95, 100, 101, 108, 109, 118, 127, 128, 140, 141, 142, 144, 146, 151, 154, 156, 164, 168, 193, 197, 200, 204, 211, 212, 213, 216, 218, 219, 220, 221, 224, 226, 228, 234, 235, 236, 237, 238, 239, 240, 241, 243, 247, 248, 250, 251, 259, 267, 271, 274, 281, 284, 285, 286, 287, 288, 291, 292, 293, 294, 295, 296, 297, 298, 302, 304, 316, 317, 318, 325, 328, 329, 330, 331, 334, 339, 340, 345, 347, 348, 349, 350, 351, 353, 355], "60": [5, 6, 81, 120], "600": [36, 120], "600x600": 36, "6052": 232, "6065": 198, "608": [119, 120], "61": [24, 61, 120], "6105": 120, "611": [71, 120], "6114": 120, "6124": [234, 235, 236, 238, 239, 240, 241], "617": [46, 120], "62": [119, 120, 154], "62686041": 322, "630": 120, "6321": [131, 198], "63245553": 20, "636": [38, 120], "64": [25, 31, 35, 64, 67, 69, 70, 71, 72, 73, 74, 75, 78, 83, 94, 106, 111, 120, 126, 129, 154, 187, 188], "640": [42, 120], "645": 120, "64589411": 277, "647": [107, 120], "64x4d": [104, 120], "654": [192, 193, 194, 195, 196, 197, 281], "657": [192, 193, 196, 197], "6590": [138, 207], "66": [45, 98, 120], "6652": 207, "66666667": 19, "6667": 228, "667": [115, 120], "6682": 228, "669": [83, 120], "67": 288, "672": [67, 85, 120], "67326": 205, "6733": 136, "676": [76, 120], "678": [192, 193, 194, 195, 196, 197], "68811989": 279, "689": [82, 120], "69314718": 315, "696": [87, 120], "7": [18, 32, 39, 111, 120, 127, 140, 141, 142, 144, 146, 151, 154, 156, 157, 158, 168, 188, 199, 204, 205, 206, 209, 211, 212, 213, 216, 220, 221, 224, 226, 228, 229, 231, 235, 236, 239, 240, 243, 247, 248, 250, 251, 274, 275, 278, 281, 284, 286, 287, 288, 292, 294, 296, 300, 314, 317, 325, 328, 329, 330, 343, 347, 348, 349, 350, 351, 353, 355], "70": [7, 8, 72, 120], "7001": 229, "704": [35, 92, 120], "706": [61, 120], "70710678": [14, 321], "7132": 120, "7141": 120, "7147": 232, "7182818": 314, "72": [64, 67, 68], "726791": 120, "7311": [138, 206, 207], "739": [55, 120], "74": 288, "75": [156, 226, 231, 258, 300], "7581": 136, "760": [70, 110, 120], "76159416": [208, 327], "7616": [139, 209], "76219569": 312, "7635": 205, "767": [27, 120], "768": 25, "770": 120, "772": 293, "778": [99, 120], "78": [88, 120], "78357324": 279, "78539816": 309, "791": [93, 120], "79172504": 277, "792": [90, 120], "795": [39, 120], "797": [85, 120], "7x7": 118, "8": [17, 21, 31, 36, 74, 78, 81, 84, 90, 91, 92, 93, 94, 95, 98, 107, 108, 109, 121, 126, 127, 129, 140, 141, 142, 144, 146, 151, 154, 156, 157, 168, 169, 170, 181, 182, 183, 187, 199, 200, 205, 206, 209, 211, 212, 213, 216, 218, 219, 220, 221, 224, 226, 228, 231, 235, 236, 239, 240, 243, 244, 245, 247, 248, 250, 251, 261, 262, 263, 264, 265, 266, 274, 275, 278, 285, 286, 287, 288, 292, 293, 295, 296, 313, 317, 325, 328, 329, 330, 347, 348, 349, 350, 351, 353, 355], "80": [5, 6, 7, 8, 67], "8005": 229, "808": [81, 120], "817": [52, 120], "818": 120, "8182": 215, "82": 154, "821": [98, 120], "83": [94, 120], "833": 120, "84": [58, 60, 61], "840": [24, 120], "8413": [132, 199], "847": [56, 120], "848": [98, 113, 120], "856": [32, 120], "85772238": 208, "8584": 205, "86": 120, "862": [117, 120], "863": [112, 120], "864": [83, 120], "868": [100, 120], "872": [66, 76, 97, 120], "876": [192, 193, 196, 197, 281], "88": [26, 68, 93, 104, 120], "8808": [138, 206, 207], "884": [28, 120], "886": [87, 120], "887": 293, "891773": 277, "89442719": 14, "895": [108, 120], "896": [105, 120], "9": [0, 1, 3, 8, 21, 25, 40, 120, 141, 144, 146, 154, 156, 168, 211, 212, 213, 216, 220, 224, 226, 228, 235, 236, 239, 243, 247, 248, 250, 258, 259, 261, 262, 263, 264, 265, 266, 268, 274, 275, 278, 281, 284, 288, 292, 293, 294, 296, 323, 324, 347, 348, 349, 350, 351, 353], "904": [95, 120], "90709145": 280, "9091": 215, "9120": 232, "9163": 232, "928": [34, 120], "929": [74, 120], "93": [103, 120], "94": 79, "9486833": 20, "949e": [297, 298], "9526": 137, "9545": 199, "955": [102, 120], "958": [100, 120], "96": [25, 68], "960": 67, "96366276": 277, "9640": 209, "96402758": 327, "968": [30, 120], "973": [88, 120], "978": [32, 120], "984": [53, 104, 120], "99": 266, "9957": 232, "99734545": 280, "999": [0, 261, 262, 263, 264, 265], "A": [1, 3, 5, 6, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 37, 54, 58, 62, 69, 78, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 106, 107, 108, 109, 111, 112, 113, 114, 115, 120, 123, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 154, 156, 157, 158, 162, 163, 164, 166, 167, 179, 188, 215, 216, 218, 219, 220, 221, 228, 229, 232, 234, 235, 236, 237, 238, 239, 240, 241, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 272, 274, 275, 277, 278, 279, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 353], "As": 280, "At": 253, "Be": 0, "By": [0, 2, 3, 10, 79, 80, 81, 82, 83, 84, 85, 86, 124, 180, 255, 265, 271, 275, 277, 278, 279, 281, 347, 357], "For": [2, 3, 4, 10, 12, 13, 14, 16, 17, 18, 19, 21, 129, 131, 132, 134, 135, 136, 137, 139, 154, 156, 179, 192, 193, 196, 197, 205, 211, 212, 213, 224, 226, 234, 235, 236, 238, 239, 240, 255, 257, 280, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 314, 315, 316, 317, 318, 321, 323, 325, 328, 329, 330, 337, 339, 341, 343, 344, 357], "If": [0, 1, 2, 5, 6, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 78, 121, 123, 125, 126, 127, 128, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 147, 151, 154, 156, 163, 166, 169, 170, 179, 180, 181, 182, 183, 184, 185, 186, 188, 192, 193, 211, 212, 213, 217, 224, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 253, 256, 261, 262, 266, 267, 273, 275, 277, 278, 279, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 351, 352, 354, 355], "In": [3, 10, 19, 140, 141, 142, 229, 232, 270, 271, 272, 346, 357], "It": [1, 2, 3, 7, 10, 19, 20, 21, 23, 25, 32, 33, 34, 35, 50, 51, 52, 58, 59, 60, 61, 63, 64, 65, 78, 79, 80, 81, 82, 83, 84, 85, 86, 99, 111, 117, 120, 123, 125, 126, 127, 128, 129, 147, 151, 154, 179, 180, 181, 182, 183, 187, 199, 200, 203, 204, 209, 217, 224, 225, 228, 229, 230, 231, 232, 243, 244, 245, 253, 255, 256, 257, 258, 264, 266, 267, 268, 271, 280, 284, 285, 286, 289, 290, 291, 293, 294, 300, 316, 318, 332, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 346, 347], "Its": [21, 282], "Near": 19, "No": [144, 147], "Not": 225, "One": [59, 357], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 154, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357], "There": 340, "These": [4, 10, 11, 14, 17, 20, 22, 46, 47, 48, 49, 87, 88, 107, 108, 109, 117, 120, 215, 218, 219, 220, 221, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 267, 274, 282, 357], "To": [3, 120, 257, 275, 279, 282, 297, 298, 336, 357], "With": [3, 144, 147, 347, 357], "_": [17, 125, 126, 128, 129, 131, 132, 134, 135, 136, 137, 139, 156, 179, 235, 236, 238, 239, 240, 246, 247, 248, 249, 250, 251, 258, 259, 261, 262, 263, 264, 266, 268, 286, 287, 288, 292, 328, 329, 348, 349, 350, 352, 353, 354], "_1": [14, 125, 126, 127, 128, 129, 154, 224, 292, 332, 334, 345], "_2": [14, 125, 126, 127, 128, 129, 154, 224, 292, 332, 334, 345], "__call__": [1, 123], "__getitem__": [0, 2, 3, 5, 6, 7, 8], "__init__": [0, 1, 2, 3, 10, 23, 25, 36, 37, 50, 54, 58, 62, 63, 64, 69, 111, 118, 121, 122, 123, 124, 125, 126, 127, 128, 147, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 224, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 273, 283, 346, 347], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5, 6, 7, 8], "__repr__": 256, "__setattr__": 123, "_activ": 138, "_arraylik": [274, 296, 298, 302, 304], "_arraylikeint": 337, "_arrayorscalar": [122, 124, 274, 275, 283, 331], "_base_activ": 58, "_base_dtyp": [295, 297, 300, 301, 303], "_block": 216, "_c": 349, "_decai": 264, "_fanmod": [192, 193], "_grad_en": [270, 272], "_i": [14, 18, 138, 147, 154, 207, 217, 231, 234, 241, 246, 249, 286, 287, 289, 290, 292, 293, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 334, 339, 341, 344, 345], "_in": [192, 193, 196, 197], "_interpolatetyp": 253, "_j": [138, 207, 246, 249, 292, 317, 325, 329, 330], "_k": 342, "_left": 179, "_make_lay": 111, "_modul": 123, "_n": [14, 125, 126, 127, 128, 129, 332, 334, 345], "_numpyarrai": 274, "_out": [192, 193, 196, 197, 339, 343], "_p": 18, "_pad": 337, "_paddingstr": [181, 182, 183, 184, 185, 186, 211, 212, 213], "_paramet": 123, "_reductiontyp": [157, 158, 159, 161, 162, 228, 229, 230, 231, 232], "_resnestbottleneck": 69, "_right": 179, "_scalar": [190, 194, 195, 196, 197, 274, 295, 300, 310], "_seresnetbottleneck": [97, 98, 101], "_seresnetmodul": [99, 100], "_shapelik": [121, 167, 241, 274, 278, 301, 303, 340, 341, 344], "_size": [168, 169, 170, 216], "_skresnetmodul": [107, 108, 109], "_slope": 202, "_statedict": 256, "_t": [265, 266], "_tensor": [122, 124, 296, 331], "_tensorop": 283, "_u": 19, "_v": 19, "_valu": [310, 337], "_width": 337, "a_i": [289, 290, 293], "aaai": 120, "ab": 305, "abc": [2, 256], "abil": [10, 120, 357], "about": [10, 121], "abov": [10, 270, 272, 280, 296, 299], "absolut": [17, 18, 159, 263, 306], "abstract": [2, 3, 255, 256, 257, 258, 266, 268], "abstractmethod": 256, "acceler": [120, 205, 234, 235, 236, 258, 264, 266, 268], "accept": [225, 277, 283], "access": [0, 2, 3, 4, 5, 6, 7, 8, 90, 91, 92, 93, 94, 95, 122, 124, 125, 126, 127, 128, 129, 340], "accord": [147, 179, 211, 212, 213, 224, 226, 229, 232, 259, 260, 261, 262, 263, 264, 265, 329], "accordingli": 13, "account": [17, 19, 20, 208], "accumul": [258, 259, 260, 284, 285, 289, 290, 291, 294], "accur": 98, "accuraci": [46, 47, 48, 49, 62, 63, 64, 101, 120], "achiev": [89, 90, 91, 92, 93, 94, 95, 120, 140, 141, 142, 168, 243, 244, 245, 264, 352, 354], "across": [0, 5, 6, 25, 65, 122, 126, 129, 164, 167, 168, 169, 170, 196, 197, 234, 235, 236, 238, 239, 240, 241, 243, 244, 245, 274, 275, 277, 278, 279, 280, 281, 282, 297, 298, 317, 330], "act": 262, "activ": [10, 23, 25, 58, 67, 68, 79, 83, 84, 96, 111, 118, 120, 125, 129, 131, 132, 134, 135, 136, 137, 138, 139, 145, 181, 182, 183, 187, 188, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 216, 218, 219, 220, 221, 228, 229, 232, 234, 235, 236, 241, 316, 318], "actual": [124, 228, 229, 231, 232, 283, 350], "ad": [31, 64, 78, 123, 125, 126, 127, 128, 129, 140, 141, 142, 146, 154, 156, 157, 158, 163, 164, 166, 167, 171, 172, 173, 175, 176, 177, 181, 182, 183, 211, 212, 213, 216, 228, 229, 234, 235, 236, 237, 238, 239, 240, 241, 246, 247, 248, 249, 250, 251, 259, 260, 261, 262, 263, 264, 265, 266, 273, 344, 357], "adadelta": 269, "adagrad": [259, 269], "adam": [120, 262, 263, 264, 265, 269], "adamax": 269, "adamw": 269, "adapt": [23, 50, 58, 69, 97, 99, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 118, 120, 168, 169, 170, 187, 188, 243, 244, 245, 259, 260, 261, 264, 265, 266, 267], "adaptive_avg_pool1d": [153, 174, 243], "adaptive_avg_pool2d": [153, 174, 244], "adaptive_avg_pool3d": [153, 174, 245], "adaptiveavgpool1d": [223, 252], "adaptiveavgpool2d": [23, 96, 111, 118, 223, 252], "adaptiveavgpool3d": [223, 252], "add": [4, 123, 125, 126, 129, 154, 156, 211, 212, 213, 224, 226, 241, 256, 258, 261, 266, 268, 271, 305, 337, 344], "add_modul": [123, 129], "add_param_group": 256, "addit": [4, 10, 17, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 123, 126, 129, 154, 156, 163, 166, 224, 226, 234, 235, 236, 238, 239, 240, 258, 264, 271, 282, 284, 342], "addition": 264, "address": [229, 232, 261, 262, 265], "adjust": [55, 62, 64, 65, 102, 103, 104, 105, 106, 110, 168, 169, 170, 188, 215, 216, 234, 235, 236, 238, 239, 240, 241, 243, 244, 245, 257, 261, 265, 266, 267, 334, 345], "advanc": [3, 19, 37, 63, 83, 120, 126, 129, 140, 141, 142, 168, 169, 170, 243, 244, 245, 255, 258], "advantag": [56, 272], "affect": [270, 338, 341, 346], "affin": [181, 182, 183, 234, 235, 236, 238, 239, 240, 241, 353], "after": [17, 23, 67, 68, 118, 124, 125, 126, 127, 128, 129, 151, 187, 188, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 212, 213, 215, 218, 219, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 241, 246, 247, 248, 249, 250, 251, 262, 272, 283, 284, 285, 289, 290, 291, 293, 294, 300, 337, 347], "afterward": 272, "aggreg": [120, 188, 292, 339, 343], "aim": [4, 10], "al": [51, 120], "alex": [5, 6, 120], "alexnet": [57, 118, 120], "algebra": [10, 11, 299], "algorithm": [7, 10, 17, 19, 20, 256, 257, 282], "align": [21, 179, 253, 287, 288], "align_corn": [179, 253], "all": [0, 3, 4, 10, 20, 36, 120, 123, 125, 126, 127, 128, 129, 141, 142, 168, 169, 170, 172, 173, 176, 177, 179, 182, 183, 188, 202, 203, 213, 243, 244, 245, 247, 248, 251, 255, 256, 257, 258, 261, 266, 267, 268, 293, 316, 317, 318, 325, 328, 330, 332, 333, 334, 339, 341, 342, 343, 345, 348, 349, 357], "allevi": [120, 131], "alloc": [297, 298], "allow": [0, 1, 3, 4, 10, 19, 20, 56, 58, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 89, 102, 103, 104, 105, 106, 110, 120, 124, 125, 126, 127, 128, 129, 131, 134, 135, 138, 142, 144, 180, 188, 198, 199, 202, 205, 206, 207, 209, 211, 212, 213, 253, 255, 259, 260, 271, 295, 301, 303, 304, 329, 331, 336, 346, 347, 357], "along": [138, 179, 188, 207, 287, 288, 292, 316, 317, 318, 325, 328, 330, 332, 334, 336, 339, 342, 343, 344, 345, 352, 354], "alongsid": 122, "alpha": [131, 134, 136, 145, 198, 205, 215, 258, 266], "alpha_dropout": [152, 153, 215], "alphadropout": [222, 223], "alphadropoutmodel": 215, "alreadi": 273, "also": [121, 131, 132, 134, 135, 136, 137, 139, 154, 156, 179, 264, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 298, 303, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 326, 327, 332, 334, 337, 338, 339, 340, 341, 342, 343, 344, 345], "alter": [129, 340], "altern": [1, 199, 259, 288], "alwai": [124, 338, 351, 352, 354], "among": [52, 188], "amount": [140, 141, 142, 171, 172, 173, 175, 176, 177, 184, 185, 186, 264], "amsgrad": [261, 262], "an": [0, 1, 3, 10, 14, 16, 17, 19, 20, 22, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 58, 59, 60, 61, 63, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 117, 118, 119, 120, 121, 123, 125, 126, 127, 128, 129, 132, 140, 141, 142, 144, 145, 148, 149, 150, 151, 154, 169, 170, 179, 180, 184, 185, 186, 188, 196, 197, 198, 204, 206, 211, 212, 213, 215, 217, 218, 219, 220, 221, 224, 226, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 256, 257, 258, 261, 264, 266, 272, 273, 274, 283, 288, 296, 299, 310, 317, 325, 330, 332, 339, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357], "analog": [339, 343], "analysi": [4, 187, 211, 212, 213, 240, 246, 248, 249, 251], "andreetto": 120, "andrew": 120, "angl": [180, 353], "ani": [0, 1, 2, 3, 17, 19, 24, 78, 106, 117, 119, 122, 123, 124, 125, 127, 128, 131, 132, 134, 135, 136, 137, 139, 145, 148, 154, 156, 163, 166, 206, 241, 255, 256, 270, 272, 273, 280, 283, 295, 296, 297, 299, 301, 302, 303, 304, 316, 318, 329, 331, 332, 333, 334, 337, 339, 342, 343, 344, 345, 346, 357], "anoth": [128, 294, 302, 304, 347, 357], "api": [4, 243, 244, 245, 357], "appear": 256, "append": [126, 128, 129], "appli": [2, 4, 5, 6, 7, 8, 10, 17, 23, 25, 36, 37, 89, 106, 116, 118, 120, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 142, 144, 145, 146, 147, 148, 149, 150, 151, 154, 156, 157, 158, 159, 161, 162, 164, 181, 182, 183, 187, 188, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 258, 259, 260, 262, 263, 264, 265, 288, 337, 339, 346, 349, 351, 352, 353, 354, 355, 357], "applic": [4, 19, 26, 27, 28, 30, 31, 55, 56, 62, 63, 64, 66, 67, 68, 120, 140, 166, 211, 212, 213, 224, 226, 282, 295, 303, 337, 355], "approach": [3, 54, 129, 262], "appropri": [19, 64, 67, 68, 120, 123, 127, 129, 147, 211, 212, 213, 215, 218, 219, 229, 247, 248, 270, 272], "approx": 136, "approxim": [19, 132, 199, 200, 201, 247, 250], "ar": [1, 2, 3, 4, 10, 13, 14, 16, 17, 19, 20, 21, 22, 46, 47, 48, 49, 50, 51, 52, 120, 122, 123, 124, 125, 126, 127, 128, 129, 138, 140, 141, 142, 144, 147, 154, 156, 164, 169, 170, 179, 184, 185, 186, 187, 188, 192, 193, 195, 196, 197, 200, 207, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 226, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 258, 261, 262, 264, 265, 266, 267, 268, 270, 272, 273, 274, 277, 278, 279, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 297, 298, 300, 306, 310, 314, 316, 317, 318, 319, 320, 325, 328, 329, 332, 336, 339, 340, 343, 346, 347, 348, 350, 351, 355, 357], "arang": 305, "arbitrari": [126, 225, 297, 298, 310, 315, 317, 321, 323, 325, 329, 330], "arcco": 305, "arch": 273, "architectur": [24, 29, 31, 32, 33, 34, 35, 36, 37, 50, 51, 52, 53, 54, 55, 56, 58, 62, 63, 64, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 78, 89, 90, 91, 92, 93, 94, 95, 96, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 119, 120, 121, 125, 126, 127, 128, 129, 132, 187, 200, 201, 203, 208, 224, 225, 255, 273], "arcsin": 305, "arctan": 305, "area": [179, 253], "arg": [123, 225, 273, 297], "argument": [3, 4, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 123, 129, 225, 277, 297, 329], "around": [14, 180, 209], "arr": [274, 332, 334, 342, 345], "arrai": [10, 122, 124, 271, 274, 283, 288, 296, 302, 304, 331, 338, 339, 347, 357], "art": 120, "artifici": 120, "arxiv": 120, "asarrai": 274, "asgd": 269, "aspect": 355, "assign": [123, 125, 127, 129, 179, 229, 232], "assist": [50, 51, 52], "associ": [127, 128], "assum": [0, 1, 256, 257, 270], "attempt": [125, 129], "attent": [69, 76, 77, 106, 120, 128, 154, 187], "attribut": 123, "audio": 211, "augment": [3, 4, 99, 180, 282, 339, 343, 346, 350, 351, 352, 353, 354, 357], "autodiff": 10, "autograd": 255, "automat": [4, 10, 124, 125, 126, 127, 128, 255, 275, 277, 278, 279, 281, 283, 297, 298, 304, 336, 347], "auxiliari": [50, 51, 52, 122], "avail": [4, 5, 6, 7, 8, 10], "avd": 69, "averag": [23, 59, 60, 61, 69, 78, 89, 96, 106, 111, 118, 122, 168, 169, 170, 171, 172, 173, 179, 187, 188, 231, 243, 244, 245, 246, 247, 248, 258, 259, 261, 266, 317], "avg_down": 78, "avg_pool": [246, 247, 248], "avg_pool1d": [153, 174], "avg_pool2d": [153, 174], "avg_pool3d": [153, 174], "avgpool": [23, 96, 111, 118, 188], "avgpool1d": [223, 252], "avgpool1dmodel": 246, "avgpool2d": [223, 252], "avgpool2dmodel": 247, "avgpool3d": [223, 252], "avgpool3dmodel": 248, "avoid": [2, 3, 19, 37, 127, 272, 300], "ax": [11, 271, 316, 317, 318, 325, 329, 330, 339, 341, 343], "axi": [18, 138, 207, 287, 288, 316, 317, 318, 325, 330, 332, 334, 336, 337, 339, 341, 342, 343, 344, 345, 352, 354], "b": [11, 21, 120, 154, 156, 195, 211, 212, 213, 224, 226, 271, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 332, 334, 342, 345, 351], "b0": [36, 38, 120], "b1": [36, 39, 120], "b2": [36, 40, 120], "b3": [36, 41, 120], "b4": [36, 42, 120], "b5": [36, 43, 120], "b6": [36, 44, 120], "b7": [36, 45, 120], "b_i": [289, 290, 293], "back": [179, 247, 248, 273, 287, 292, 339, 343], "backbon": [107, 108, 109], "backpropag": [10, 13, 14, 16, 17, 19, 20, 22, 120, 122, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 154, 156, 179, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 246, 247, 248, 249, 250, 251, 255, 272, 279, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 314, 316, 318, 331, 337, 339, 343, 347], "backward": [10, 122, 124, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 283, 300, 347], "balanc": [28, 37, 46, 47, 48, 49, 64, 90, 91, 92, 93, 94, 95, 120, 230], "bar": 258, "base": [3, 11, 16, 17, 20, 21, 26, 29, 31, 50, 51, 52, 53, 54, 55, 56, 58, 69, 76, 77, 89, 90, 91, 92, 93, 94, 95, 106, 111, 116, 120, 123, 125, 126, 127, 128, 144, 154, 168, 169, 170, 188, 215, 229, 230, 243, 244, 245, 255, 256, 257, 258, 262, 266, 267, 268, 275, 284, 285, 289, 290, 291, 293, 294, 304, 314, 315, 316, 318, 329, 336, 337, 350, 351, 352, 353, 354], "base_width": [69, 70, 71, 72, 73, 74, 75, 87, 88, 89, 106], "basic": [10, 23, 25, 26, 27, 28, 29, 30, 78, 90, 91, 92, 93, 94, 95, 107, 108, 109, 116, 118, 121, 140, 141, 142, 146, 147, 168, 169, 170, 181, 182, 183, 184, 185, 186, 187, 192, 193, 196, 197, 216, 243, 244, 245, 300, 348, 349, 350, 351, 352, 353, 354, 355], "basicblock": [78, 82, 85], "batch": [1, 2, 3, 11, 17, 20, 22, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 51, 52, 53, 55, 56, 96, 102, 103, 104, 105, 110, 140, 141, 142, 144, 149, 150, 151, 154, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 211, 212, 213, 224, 226, 228, 229, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 265, 288, 348, 349, 350, 351, 353, 355], "batch_norm": [153, 165, 234, 235, 236], "batch_norm1": 129, "batch_norm2": 129, "batch_siz": [1, 2, 3, 116, 188], "batchnorm": [181, 182, 183], "batchnorm1d": [181, 223, 242], "batchnorm1dmodel": 234, "batchnorm2d": [129, 182, 223, 242], "batchnorm2dmodel": 235, "batchnorm3d": [183, 223, 242], "batchnorm3dmodel": 236, "bceloss": [223, 233], "becaus": [2, 278], "becom": [18, 123, 259, 267], "been": 208, "befor": [17, 96, 121, 124, 258, 264, 272, 280, 337, 349, 357], "begin": [1, 18, 131, 134, 135, 136, 147, 198, 200, 201, 202, 203, 205, 217, 230, 231, 232, 246, 247, 248, 249, 250, 251, 265, 267, 271, 282, 289, 290, 292, 306, 310, 316, 318, 320, 337], "behav": [217, 230, 328], "behavior": [120, 126, 129, 270, 282, 288, 298, 357], "being": [128, 180, 215, 218, 219, 220, 221, 265, 270, 272, 332, 334, 345], "belong": 0, "below": [20, 51, 52, 53, 55, 56, 58, 59, 60, 61, 288, 296, 299], "benchmark": [5, 6, 7, 8], "benefici": 129, "benefit": [131, 255, 264, 274], "bernoulli": [215, 218, 219, 220, 221, 276], "best": [192, 193, 196, 197], "beta": [164, 234, 235, 236, 237, 238, 239, 240, 241, 261, 262, 263, 264, 265], "beta1": [261, 262, 263, 264, 265], "beta2": [261, 262, 263, 264, 265], "beta_1": [261, 262, 263, 264, 265], "beta_2": [261, 262, 263, 264, 265], "beta_c": [164, 237], "better": [16, 118, 120, 132, 192, 193, 196, 197, 208, 216, 238, 239, 240, 255, 262, 264, 266, 349], "between": [28, 46, 47, 48, 49, 90, 91, 92, 93, 94, 95, 120, 123, 140, 141, 142, 144, 154, 159, 181, 182, 183, 184, 185, 186, 188, 204, 211, 212, 213, 215, 218, 219, 220, 221, 224, 228, 229, 230, 231, 232, 258, 266, 267, 268, 282, 284, 285, 288, 291, 294, 295, 300, 330, 351, 352, 354, 355], "beyond": [10, 126], "bia": [140, 141, 142, 154, 156, 163, 166, 167, 181, 182, 183, 184, 185, 186, 211, 212, 213, 224, 226, 234, 235, 236, 238, 239, 240, 241, 261, 262, 263, 264, 265], "bias": [211, 212, 213, 226, 241, 255], "bias1": 127, "bias2": 127, "big": [184, 185, 186], "bilinear": [153, 155, 179, 223, 227, 253], "bilinearmodel": 224, "binari": [137, 157, 206, 215, 218, 219, 220, 221, 228], "binary_cross_entropi": [153, 160], "block": [31, 32, 33, 34, 35, 36, 37, 54, 63, 64, 66, 69, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 120, 123, 144, 146, 147, 181, 182, 183, 188, 211, 212, 213, 216, 272], "block1": [121, 255], "block2": [121, 255], "block_arg": [78, 96], "block_cfg": 37, "block_config": 31, "block_siz": [146, 216], "blue": 351, "bmatrix": 292, "bn": [181, 182, 183], "bn_affin": [181, 182, 183], "bool": [1, 5, 6, 7, 8, 18, 22, 36, 50, 51, 52, 69, 78, 121, 123, 124, 145, 147, 148, 149, 150, 151, 163, 166, 179, 181, 182, 183, 184, 185, 186, 211, 212, 213, 217, 224, 226, 234, 235, 236, 238, 239, 240, 241, 253, 261, 262, 266, 270, 275, 277, 278, 279, 281, 283, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 316, 317, 318, 325, 330, 331, 347], "both": [140, 156, 169, 171, 175, 181, 199, 208, 211, 212, 244, 246, 247, 249, 250, 253, 286, 287, 288, 292, 296, 336, 355], "bottleneck": [31, 63, 64, 66, 78, 79, 80, 81, 83, 84, 86, 87, 88, 89, 120, 187], "bottleneck_cfg": 64, "bottom": 179, "bound": [193, 195, 197, 267, 281], "box": 4, "branch": [50, 51, 52, 120, 188], "break": 255, "brief": 357, "bright": 357, "broadcast": [220, 221, 317, 325, 330, 340, 344], "buffer": [258, 264, 266, 268], "build": [10, 37, 56, 64, 78, 79, 80, 81, 82, 83, 84, 85, 86, 89, 106, 107, 108, 109, 120, 123, 126, 129, 255, 357], "built": [3, 10, 79, 83, 84, 129, 255], "burg": 8, "c": [5, 6, 8, 78, 90, 91, 92, 93, 94, 95, 107, 108, 109, 120, 144, 146, 149, 150, 151, 158, 162, 163, 164, 166, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 187, 220, 221, 229, 232, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 271, 334, 345, 349], "c_": [211, 212, 213], "c_in": [140, 141, 142, 181, 182, 183], "c_out": [140, 141, 142], "calcul": [0, 1, 10, 11, 124, 253, 259, 260, 263, 264, 265, 272, 278, 283], "calculu": [12, 19], "call": [1, 123, 270, 273, 284, 285, 288, 289, 290, 291, 293, 294], "callabl": [256, 273, 346], "can": [0, 2, 3, 4, 10, 12, 14, 16, 17, 19, 20, 22, 36, 64, 78, 87, 88, 102, 103, 104, 105, 116, 117, 120, 121, 122, 124, 125, 126, 127, 128, 129, 134, 140, 141, 142, 147, 180, 188, 199, 202, 204, 209, 211, 212, 213, 238, 239, 240, 247, 248, 249, 250, 251, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 271, 272, 274, 281, 282, 283, 288, 297, 298, 299, 301, 303, 304, 317, 325, 330, 334, 336, 337, 339, 340, 343, 344, 345, 346, 347, 350, 352, 353, 354, 357], "cannot": [13, 14, 16, 17, 20, 21, 22, 275], "cap": 204, "capabl": [10, 76, 77, 295, 296, 299, 301, 302, 303, 304], "capac": [26, 27, 28, 30, 62, 87, 88, 89, 90, 91, 92, 93, 94, 95, 102, 103, 104, 105, 110, 120], "captur": [106, 120, 144, 211, 212, 213, 224], "cardin": [69, 70, 71, 72, 73, 74, 75, 76, 77, 89, 90, 91, 92, 93, 94, 95, 106, 120], "care": 272, "cartesian": 336, "case": [3, 18, 58, 64, 65, 131, 134, 135, 136, 147, 198, 200, 201, 202, 203, 205, 217, 230, 231, 232, 246, 247, 248, 249, 250, 251, 255, 260, 265, 267, 271, 289, 290, 306, 310, 316, 318, 320, 337, 357], "categori": [7, 79, 80, 81, 82, 83, 84, 85, 86], "caus": [3, 19, 258, 266, 268], "cautiou": 0, "cdot": [12, 13, 16, 17, 18, 21, 131, 132, 134, 136, 137, 140, 141, 142, 154, 156, 164, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 187, 196, 197, 199, 200, 201, 206, 208, 215, 224, 226, 228, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 259, 260, 261, 262, 263, 264, 265, 267, 286, 287, 288, 291, 293], "center": [180, 209, 266, 348, 357], "centercrop": [356, 357], "central": 274, "certain": [13, 132, 154, 208, 224, 261, 262, 270, 316, 318], "cfg": [67, 68], "chain": [16, 17, 129, 346, 357], "challeng": [7, 120], "cham": 120, "chanc": [351, 352, 354], "chang": [159, 230, 267, 271, 272, 273, 338, 340, 344, 351, 357], "channel": [25, 31, 36, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 76, 77, 78, 89, 90, 91, 92, 93, 94, 95, 100, 102, 103, 104, 105, 110, 111, 116, 120, 140, 141, 142, 144, 149, 150, 151, 163, 164, 166, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 211, 212, 213, 220, 221, 234, 235, 236, 237, 238, 239, 240, 243, 246, 247, 248, 249, 250, 251, 349, 351, 355], "character": [87, 88], "check": [270, 348, 350], "checkpoint": 257, "chen": 120, "choic": 336, "choleski": 15, "chollet": 120, "choos": 120, "chosen": [215, 216], "christian": 120, "christoph": 8, "chu": 120, "cifar": [5, 6], "cifar10": 9, "cifar100": 9, "cifar100_train": 6, "cifar10_train": 5, "clariti": 274, "class": [3, 4, 10, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 59, 60, 61, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 138, 147, 158, 162, 255, 257, 273, 296, 299, 300, 331, 357], "classic": 61, "classif": [4, 5, 6, 7, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 137, 138, 157, 158, 162, 206, 207, 228, 229, 232], "classifi": [23, 50, 51, 52, 58, 59, 60, 61, 78, 89, 106, 111, 116, 118], "cleaner": [1, 272, 288], "clear": [124, 283, 297, 298, 300], "clearli": 274, "clf_in_featur": 58, "clf_layer": 58, "clip": [180, 200, 204, 267, 305], "clockwis": 180, "close": [16, 19, 205, 228, 266], "closer": 198, "closur": [256, 257], "cloth": 7, "cnn": 120, "co": [305, 321], "code": [17, 125, 127, 129, 270, 272, 274, 282], "coeffici": [21, 36, 179, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268], "col": 144, "collect": [4, 11, 120, 125, 126, 128, 129, 257], "color": [351, 357], "colorjitt": 357, "column": [13, 14, 16, 20, 21, 22, 121, 144, 299, 334, 336], "com": [7, 8], "combin": [1, 3, 53, 54, 55, 110, 120, 126, 129, 131, 132, 181, 182, 183, 187, 188, 199, 216, 229, 255, 264, 265, 317, 325, 330, 332, 357], "combined_dataset": [0, 1], "common": [144, 180, 257, 357], "commonli": [10, 62, 63, 64, 65, 66, 67, 68, 132, 137, 138, 139, 140, 142, 147, 154, 161, 163, 166, 180, 187, 196, 197, 200, 201, 204, 207, 213, 228, 231, 232, 246, 247, 248, 249, 250, 251, 271, 274, 301, 341, 347, 348, 349, 350, 352, 353, 354, 357], "compact": 29, "compar": [28, 29, 87, 88, 118, 120, 282, 342], "compat": [4, 11, 106, 225, 241, 255, 271, 282, 300, 347, 357], "complex": [2, 3, 10, 14, 27, 30, 56, 78, 81, 84, 85, 98, 100, 121, 125, 126, 129, 135, 203, 249, 251, 255, 257, 357], "compon": [19, 50, 51, 52, 53, 54, 55, 56, 123, 126, 257, 283, 357], "compos": [5, 6, 7, 8, 116, 211, 212, 213, 246, 247, 248, 249, 250, 251, 255, 357], "compound": 37, "comprehens": 3, "compris": [87, 88], "comput": [10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 28, 29, 62, 64, 67, 68, 76, 77, 78, 89, 90, 91, 92, 93, 94, 95, 96, 102, 103, 104, 105, 110, 120, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 144, 154, 156, 157, 158, 159, 161, 162, 163, 164, 166, 168, 169, 170, 179, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 218, 219, 220, 221, 224, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 246, 247, 248, 249, 250, 251, 255, 256, 257, 258, 266, 270, 271, 272, 274, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 336, 337, 339, 343, 347, 357], "computation": [3, 19, 79, 200, 201], "compute_loss": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "concaten": [0, 140, 141, 142, 334, 335, 342, 345], "concept": [10, 19, 63, 120], "condit": [12, 13, 16], "confer": 120, "config": 111, "configur": [24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 64, 65, 66, 69, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 117, 119, 128, 181, 182, 183], "conjunct": [144, 232], "connect": [23, 25, 31, 32, 33, 34, 35, 36, 37, 53, 54, 55, 56, 58, 59, 60, 61, 78, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 106, 107, 108, 109, 111, 116, 118, 120, 156, 187, 188, 211, 212, 213, 226], "consecut": 111, "consid": [3, 16, 19, 31, 129, 192, 193, 196, 197, 255, 267, 270, 297, 298, 357], "consider": 19, "consist": [2, 4, 7, 23, 59, 60, 61, 78, 122, 168, 169, 170, 188, 243, 244, 245, 274, 280, 282, 337, 348, 355, 357], "consistent_tensor": 282, "consol": 121, "constant": [157, 158, 163, 164, 166, 167, 191, 205, 228, 229, 234, 235, 236, 237, 238, 239, 240, 241, 259, 260, 261, 262, 263, 264, 265, 266, 274, 337], "constant_pad": 337, "constraint": [1, 62, 64, 188], "construct": [10, 32, 33, 34, 35, 69, 78, 79, 80, 81, 82, 83, 84, 85, 86, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 107, 108, 109, 112, 113, 114, 115, 126, 255, 296, 339, 343], "constructor": [32, 33, 34, 35, 46, 47, 48, 49, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 87, 88, 102, 103, 104, 105, 110, 112, 113, 114, 115], "contain": [1, 5, 6, 7, 8, 13, 14, 19, 20, 21, 22, 54, 58, 78, 89, 90, 91, 92, 93, 94, 95, 96, 106, 111, 121, 123, 125, 126, 127, 128, 129, 138, 144, 154, 156, 157, 158, 162, 179, 228, 229, 232, 256, 284, 285, 286, 287, 289, 290, 291, 292, 294, 295, 298, 300, 306, 307, 308, 309, 311, 312, 313, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 333, 336], "content": 180, "context": [270, 272], "contextmanag": 272, "contigu": [146, 216, 338], "continu": [202, 279], "contrast": [238, 239, 240, 357], "contribut": [146, 179, 215, 218, 219, 220, 221, 246, 249, 250, 251, 258, 264, 328], "control": [25, 89, 188, 198, 230, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 282, 347, 357], "conv": [54, 96, 181, 182, 183, 235, 236], "conv1": [59, 60, 61, 129, 211, 212, 213, 246, 247, 248, 249, 250, 251], "conv1d": [143, 153, 181, 184, 214, 223, 246, 249], "conv1dmodel": 211, "conv2": [59, 60, 61, 129, 211, 212, 213], "conv2d": [126, 129, 143, 153, 182, 185, 214, 223, 235, 247, 250, 255], "conv2dmodel": 212, "conv3d": [143, 153, 183, 186, 214, 223, 236, 248, 251], "conv3dmodel": 213, "conv_bia": [181, 182, 183], "conv_config": 111, "conv_lay": [58, 126], "convblock": 255, "convbnrelu1d": 189, "convbnrelu2d": 189, "convbnrelu3d": 189, "conveni": [4, 24, 119], "convent": 288, "converg": [19, 209, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 349], "convers": [229, 232, 351, 357], "convert": [5, 6, 7, 8, 111, 122, 124, 138, 207, 283, 336, 346, 347, 351, 357], "convnetwork": 126, "convnext": [26, 27, 28, 29, 30, 57, 120], "convnext_bas": 120, "convnext_larg": 120, "convnext_smal": 120, "convnext_tini": 120, "convnext_xlarg": 120, "convolut": [23, 24, 25, 31, 36, 38, 39, 40, 41, 42, 43, 44, 45, 51, 52, 54, 58, 59, 60, 61, 62, 64, 67, 68, 69, 76, 77, 78, 89, 90, 91, 92, 93, 94, 95, 96, 102, 103, 104, 105, 106, 110, 111, 116, 118, 119, 120, 126, 140, 141, 142, 144, 181, 182, 183, 184, 185, 186, 187, 188, 211, 212, 213, 247, 248, 250, 251, 337], "convolv": [140, 141, 142, 211, 212, 213], "coordin": 336, "core": [0, 1, 2, 3, 123, 255, 256, 283, 357], "corinna": 8, "corner": [179, 253, 348, 350], "correct": [125, 229, 232, 261, 262, 263, 264, 265, 347], "correctli": [19, 123, 125, 126, 127, 128, 129, 229, 232, 282], "correspond": [0, 1, 2, 5, 6, 7, 8, 14, 65, 67, 68, 87, 88, 107, 108, 109, 125, 127, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 154, 156, 179, 200, 203, 207, 224, 226, 234, 235, 236, 238, 239, 240, 247, 248, 258, 266, 268, 275, 286, 287, 289, 290, 293, 314, 315, 321, 323, 334, 337, 339, 343, 345], "cort": 8, "cosh": [305, 322, 327], "cosin": [307, 311, 312, 321], "cost": [62, 64, 89, 120, 184, 185, 186], "could": 123, "count": [120, 121, 332], "counterclockwis": [180, 353], "cover": [11, 140, 141, 142], "coverag": [168, 169, 170], "creat": [2, 3, 10, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 59, 60, 61, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 111, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 126, 129, 188, 204, 255, 271, 273, 282, 295, 299, 300, 301, 302, 303, 304, 336, 342, 346, 357], "creation": [46, 47, 48, 49, 126, 129, 357], "criterion": [228, 229, 230, 231, 232], "critic": [19, 257, 282], "crop": [348, 350, 357], "cross": [157, 158, 228, 229], "cross_entropi": [153, 160], "crossentropyloss": [223, 233], "cube": 305, "cumul": [132, 199], "current": [123, 258, 261, 267, 270], "custom": [4, 10, 23, 24, 25, 26, 27, 28, 29, 30, 31, 38, 39, 40, 41, 42, 43, 44, 45, 55, 56, 58, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 111, 117, 118, 119, 122, 125, 126, 127, 128, 129, 180, 181, 182, 183, 198, 202, 255, 282, 299, 300], "custom_config": 111, "custom_lenet": 58, "customiz": 357, "custommodul": 122, "customnetwork": 125, "customparametermodel": [127, 128], "cvpr": 120, "d": [120, 142, 151, 170, 173, 177, 183, 236, 240, 241, 245, 248, 251, 271, 296, 353], "d_": [142, 170, 173, 177, 213, 245, 248, 251], "d_1": 241, "d_2": 241, "d_n": 241, "d_out": [142, 173, 177], "dampen": [258, 266, 268], "data": [4, 5, 6, 7, 8, 10, 17, 122, 124, 128, 139, 140, 142, 144, 150, 151, 156, 180, 181, 182, 183, 188, 203, 209, 211, 212, 213, 226, 240, 246, 248, 251, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 274, 282, 283, 284, 285, 291, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 331, 337, 338, 339, 340, 341, 343, 346, 347, 350, 351, 352, 353, 354, 357], "databas": 8, "dataload": [2, 3], "dataset": [3, 5, 6, 7, 8, 27, 46, 47, 48, 49, 59, 60, 61, 62, 78, 79, 80, 81, 82, 83, 84, 85, 86, 180, 260, 272, 346, 348, 357], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 292, "debug": [121, 129, 270, 280, 357], "decai": [216, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268], "decompos": [12, 20, 22], "decomposit": [11, 12, 16, 19, 20, 22], "decor": [90, 91, 92, 93, 94, 95, 273], "decoupl": [120, 259, 260, 262, 263, 264, 265], "decreas": [261, 262, 267], "deep": [1, 3, 4, 10, 54, 78, 79, 80, 81, 83, 84, 90, 91, 92, 93, 94, 95, 97, 98, 101, 120, 163, 199, 205, 255, 282, 300, 346, 347, 357], "deeper": [10, 51, 53, 56, 78, 85, 120, 205], "def": [0, 1, 2, 3, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 154, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 224, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 274, 275, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347], "default": [1, 5, 6, 7, 8, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 131, 134, 138, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 157, 158, 159, 161, 162, 163, 164, 166, 167, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 202, 207, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 246, 247, 248, 249, 250, 251, 253, 256, 257, 264, 270, 275, 277, 278, 279, 281, 283, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 316, 317, 318, 325, 329, 330, 331, 332, 334, 336, 337, 339, 342, 345, 347, 351, 352, 354], "defin": [1, 3, 4, 10, 25, 31, 37, 50, 51, 52, 53, 54, 55, 56, 58, 64, 69, 78, 96, 107, 108, 109, 111, 125, 126, 127, 128, 129, 147, 199, 201, 204, 208, 228, 229, 230, 231, 232, 246, 253, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 274, 278, 279, 293, 298, 310, 329, 346, 357], "definit": [10, 12, 181, 182, 183, 357], "degre": [180, 353, 357], "delai": 258, "delta": [138, 159, 207, 230, 259], "delta_": [138, 207], "demonstr": [10, 11, 102, 103, 104, 105, 110, 120, 255, 274], "denomin": [163, 164, 166, 167, 181, 182, 183, 234, 235, 236, 237, 238, 239, 240, 241, 259, 260, 261, 262, 263, 264, 265, 266, 285], "denot": [17, 76, 77, 206, 211, 212, 213, 215, 218, 219, 220, 221, 329], "dens": [10, 31, 32, 33, 34, 35, 120, 147, 260], "dense1": 10, "dense2": 10, "densenet": [32, 33, 34, 35, 57, 120, 187], "densenet_121": 120, "densenet_169": 120, "densenet_201": 120, "densenet_264": 120, "densiti": [132, 199], "depend": [10, 17, 18, 64, 128, 157, 158, 159, 161, 162, 179, 211, 286, 296, 316, 318, 339, 343, 350, 351, 355], "depth": [25, 26, 27, 28, 29, 30, 36, 37, 120, 126, 142, 147, 151, 170, 173, 177, 213, 217, 236, 240, 245, 248, 251], "depth_coef": 36, "depthseparableconv1d": 189, "depthseparableconv2d": 189, "depthseparableconv3d": 189, "depthwis": [25, 62, 116, 120, 140, 141, 142, 184, 185, 186], "depthwise_separ": [184, 185, 186], "der": 120, "deriv": [19, 20, 138, 168, 169, 170, 199, 207, 209, 211, 212, 213, 224, 226, 273], "descend": 22, "descent": [10, 258, 268], "describ": [13, 14], "descript": 357, "deseri": 122, "design": [3, 4, 10, 11, 23, 24, 25, 27, 29, 46, 47, 48, 49, 51, 52, 53, 59, 60, 61, 64, 79, 80, 81, 82, 83, 84, 85, 86, 97, 100, 116, 119, 120, 124, 126, 127, 128, 129, 131, 136, 205, 215, 255, 274, 357], "desir": [117, 122, 168, 169, 170, 216, 243, 244, 245, 253, 329, 331], "destin": 123, "det": [11, 15], "det_a": 13, "detail": [10, 121, 257, 282, 288], "detect": 120, "determin": [0, 10, 11, 12, 13, 58, 87, 88, 168, 169, 170, 192, 193, 196, 197, 211, 212, 213, 243, 244, 245, 247, 248, 250, 251, 266, 270, 275, 277, 278, 279, 281, 297, 298, 348, 350], "determinist": 180, "develop": [10, 255, 282, 357], "deviat": [192, 194, 196, 346, 349, 357], "devic": [63, 64], "diag": [19, 305], "diagon": [19, 20, 22, 296, 299, 328], "diagonaliz": 14, "dict": [24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 58, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 88, 90, 91, 92, 93, 94, 95, 96, 102, 103, 104, 105, 107, 108, 109, 110, 117, 119, 123, 125, 127, 225, 256], "dictionari": [58, 123, 124, 125, 127, 129, 256], "differ": [0, 17, 50, 58, 64, 102, 103, 104, 105, 110, 126, 129, 138, 154, 179, 188, 207, 224, 231, 257, 271, 280, 282, 294, 304, 330, 341, 357], "differenti": [10, 12, 21, 199, 255, 275, 277, 278, 279, 281, 283, 295, 297, 298, 301, 303], "digit": [7, 8, 61, 120], "dilat": [140, 141, 142, 181, 182, 183, 184, 185, 186, 211, 212, 213], "dilation_height": 144, "dilation_width": 144, "dim": [25, 229, 232], "dimens": [13, 14, 16, 17, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 78, 89, 106, 111, 118, 120, 124, 138, 154, 156, 163, 164, 166, 167, 169, 170, 179, 187, 188, 207, 211, 212, 213, 216, 234, 235, 236, 238, 239, 240, 241, 244, 245, 247, 248, 249, 250, 251, 253, 271, 274, 277, 281, 283, 287, 297, 316, 317, 318, 325, 328, 329, 330, 332, 334, 337, 339, 341, 342, 343, 344, 345, 348, 350, 355], "dimension": [17, 19, 20, 22, 140, 141, 142, 171, 172, 173, 175, 176, 177, 188, 211, 212, 213, 219, 220, 221, 234, 235, 236, 238, 239, 240, 246, 247, 248, 249, 250, 251, 271, 287, 288, 292, 296, 314, 317, 325, 328, 330, 333, 338, 339, 341, 343], "diminish": 260, "direct": [14, 228, 229, 230, 231, 232, 258, 266, 267, 268], "directli": [46, 47, 48, 49, 120, 125, 126, 127, 128, 179, 253, 259, 260, 262, 263, 264, 265, 280, 282, 331, 357], "directori": [3, 4, 5, 6, 7, 8], "disabl": [147, 216, 217, 270, 272], "discontinu": 320, "discrep": [228, 229, 232], "discret": [275, 278, 282], "disk": 3, "displai": [24, 119, 121], "distribut": [132, 138, 146, 179, 192, 193, 194, 195, 196, 197, 199, 207, 211, 212, 213, 215, 216, 218, 219, 220, 221, 224, 226, 229, 232, 246, 247, 248, 275, 277, 278, 279, 281, 282, 317, 325, 328, 330, 342, 349, 351, 352, 353, 354], "div": 305, "divers": [180, 352, 354, 357], "diversifi": 357, "divid": [1, 19, 120, 126, 129, 138, 140, 141, 142, 207, 228, 229, 230, 231, 232, 285, 349], "divis": [10, 19, 140, 141, 142, 215, 218, 219, 220, 221, 259, 260, 261, 262, 263, 264, 265, 266, 285], "do": [19, 21, 122, 125, 126, 127, 128, 145, 148, 149, 150, 255, 265, 270, 304, 328, 337], "document": [4, 10, 120, 257, 274, 282], "doe": [10, 17, 18, 19, 20, 22, 121, 122, 125, 126, 127, 128, 129, 197, 261, 262, 267, 270, 272, 275, 277, 278, 279, 280, 281, 295, 296, 297, 298, 299, 301, 302, 303, 304, 340], "doesn": 272, "doi": 120, "domain": 4, "don": 272, "dot": [14, 17, 125, 126, 127, 128, 129, 241, 249, 250, 251, 287, 292, 305, 332, 334, 342, 345], "down": [3, 255, 355], "download": [4, 5, 6, 7, 8], "downsampl": 69, "drawback": 131, "drawn": [277, 278, 279, 281, 282, 353], "drop": [25, 146, 147, 215, 216, 217, 218, 219, 220, 221], "drop_block": [152, 153], "drop_path": [25, 152, 153, 217], "drop_path_r": 37, "drop_prob": 217, "dropblock": [146, 222, 223], "dropout": [23, 36, 37, 46, 47, 48, 49, 52, 111, 118, 120, 132, 145, 149, 150, 151, 215, 216, 219, 220, 221], "dropout1d": [152, 153, 222, 223], "dropout1dmodel": 219, "dropout2d": [152, 153, 222, 223], "dropout3d": [152, 153, 222, 223], "dropout_prob": 52, "dropoutmodel": 218, "droppath": [222, 223], "dtype": [122, 124, 283, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 331, 347], "due": [17, 19, 31, 140, 141, 203, 353], "dummi": 121, "duplic": [125, 127], "dure": [3, 10, 13, 14, 16, 19, 20, 22, 37, 50, 51, 52, 78, 120, 122, 123, 124, 125, 126, 127, 128, 129, 138, 145, 146, 147, 148, 149, 150, 151, 163, 166, 180, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 246, 247, 248, 249, 250, 251, 253, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 270, 272, 283, 284, 316, 317, 318, 325, 330, 347, 350, 353, 357], "dy": [134, 202], "dynam": [0, 2, 3, 106, 110, 120, 123, 126, 127, 128, 129, 168, 169, 170, 188, 216, 241, 243, 244, 245, 260, 265, 270], "dynamicnetwork": 126, "e": [0, 13, 14, 16, 17, 20, 22, 36, 38, 39, 40, 41, 42, 43, 44, 45, 51, 52, 53, 55, 56, 58, 59, 60, 61, 69, 111, 122, 138, 188, 206, 207, 208, 215, 229, 256, 259, 266, 267, 299, 312, 314, 315, 322, 327, 328, 332, 351], "each": [1, 2, 3, 4, 14, 17, 19, 20, 22, 23, 25, 31, 37, 58, 62, 64, 65, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 106, 107, 108, 109, 111, 118, 120, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 154, 156, 163, 166, 168, 169, 170, 187, 188, 200, 203, 207, 211, 212, 213, 215, 218, 219, 220, 221, 224, 226, 228, 229, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 255, 259, 260, 261, 262, 263, 264, 265, 266, 267, 275, 283, 284, 285, 288, 289, 290, 291, 292, 293, 294, 300, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 317, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 332, 334, 336, 337, 339, 342, 343, 345, 346, 347, 348, 349, 350, 351, 353, 355, 357], "earli": 265, "eas": [4, 10], "easi": [2, 3, 4, 10, 90, 91, 92, 93, 94, 95, 124, 125, 127], "easier": [3, 125, 126, 129], "easili": [4, 124, 128, 357], "eccv": 120, "economi": 22, "edg": [64, 337], "edu": [5, 6], "educ": [10, 120], "effect": [120, 125, 126, 127, 128, 129, 138, 140, 141, 142, 144, 198, 199, 203, 206, 207, 209, 234, 235, 236, 238, 239, 240, 241, 253, 270, 271, 272, 334, 345], "effici": [1, 2, 3, 5, 6, 7, 8, 10, 11, 16, 21, 28, 29, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 55, 56, 63, 64, 66, 67, 68, 89, 90, 91, 92, 93, 94, 95, 102, 103, 104, 105, 110, 116, 120, 144, 184, 185, 186, 200, 201, 204, 229, 255, 272], "efficientnet": [37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 57, 120], "efficientnet_b0": 120, "efficientnet_b1": 120, "efficientnet_b2": 120, "efficientnet_b3": 120, "efficientnet_b4": 120, "efficientnet_b5": 120, "efficientnet_b6": 120, "efficientnet_b7": 120, "efficientnet_v2": [46, 47, 48, 49], "efficientnet_v2_": 120, "efficientnet_v2_l": 120, "efficientnet_v2_m": 120, "efficientnet_v2_xl": 120, "efficientnetv2": 120, "eig": 15, "eigenvalu": [14, 20], "eigenvector": 14, "eigval": 14, "eigvec": 14, "either": [156, 253, 274, 275, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 331, 336], "element": [0, 19, 20, 52, 120, 124, 128, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 147, 148, 149, 150, 151, 181, 182, 183, 184, 185, 186, 187, 200, 201, 203, 207, 208, 211, 212, 213, 215, 217, 218, 219, 220, 221, 228, 229, 230, 231, 232, 241, 246, 247, 248, 249, 250, 251, 271, 275, 283, 284, 285, 288, 289, 290, 291, 292, 293, 294, 295, 299, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 333, 336, 337, 339, 340, 341, 343], "elementwise_affin": 241, "elsewher": [249, 250, 251, 299], "elu": [133, 153, 210, 223], "elumodel": 198, "embed": [62, 63, 64, 66, 67, 68], "emploi": 37, "empti": [123, 129, 305], "empty_lik": 305, "enabl": [0, 1, 2, 3, 10, 17, 22, 36, 55, 69, 106, 107, 108, 109, 120, 123, 124, 125, 126, 127, 128, 147, 203, 211, 212, 213, 224, 226, 255, 257, 270, 272, 275, 277, 278, 279, 281, 283, 346], "encapsul": [255, 283], "encod": [229, 232], "encompass": 36, "encourag": [146, 216, 218, 219, 220, 221, 228, 229, 232, 261], "end": [18, 131, 134, 135, 136, 147, 198, 200, 201, 202, 203, 205, 217, 230, 231, 232, 246, 247, 248, 249, 250, 251, 265, 267, 289, 290, 292, 295, 300, 306, 310, 316, 318, 320, 332, 337, 357], "enforc": [123, 125, 127], "engin": 19, "enhanc": [26, 52, 53, 55, 56, 60, 63, 76, 77, 87, 88, 102, 103, 104, 105, 110, 118, 119, 120, 125, 127, 188, 204, 357], "ensur": [3, 5, 6, 7, 8, 19, 20, 21, 37, 46, 47, 48, 49, 122, 123, 124, 125, 126, 127, 128, 129, 138, 168, 169, 170, 181, 182, 183, 202, 207, 215, 216, 217, 218, 219, 220, 221, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 244, 245, 247, 248, 249, 250, 251, 255, 256, 258, 259, 261, 262, 264, 265, 266, 267, 268, 270, 271, 272, 274, 275, 277, 278, 279, 280, 281, 282, 293, 300, 317, 325, 330, 337, 347, 348, 349, 350, 351, 355, 357], "enter": 272, "entir": [3, 147, 149, 150, 151, 217, 220, 221, 282], "entri": [37, 58, 67, 68, 341], "entropi": [157, 158, 228, 229], "environ": [10, 67, 68], "ep": [146, 157, 158, 163, 164, 166, 167, 181, 182, 183, 216, 228, 229, 234, 235, 236, 237, 238, 239, 240, 241, 259, 260, 261, 262, 263, 264, 265, 266], "epoch": [1, 3], "epsilon": [164, 228, 229, 234, 235, 236, 237, 238, 239, 240, 241, 259, 260, 261, 262, 263, 264, 265, 266], "equal": [17, 179, 246, 247, 248, 300, 348, 350], "equat": [14, 19, 21], "equival": [288, 328, 338], "error": [0, 3, 14, 16, 37, 123, 126, 127, 128, 129, 132, 159, 161, 199, 217, 228, 229, 230, 231, 255, 256, 272, 274, 300], "especi": [3, 125, 127, 128, 206, 271, 272, 274, 280, 346, 347, 351, 357], "essenti": [1, 3, 10, 11, 17, 19, 54, 141, 144, 255, 280, 282, 316, 346, 347, 351, 357], "estim": [231, 261, 262, 263, 264, 265, 266], "et": [51, 120], "eta": 267, "eta_": 267, "etc": [31, 37, 69, 228, 253, 347], "euclidean": 18, "european": 120, "eval": 217, "evalu": [123, 163, 166, 215, 216, 217, 218, 219, 220, 221, 234, 235, 236, 238, 239, 240, 357], "even": [259, 272, 295, 296, 299, 301, 302, 303, 304], "evenli": [168, 169, 170, 243, 244, 245, 295, 300], "everi": [1, 357], "everywher": 320, "exact": [123, 126, 329, 351, 353], "exactli": 129, "exampl": [4, 288], "excel": 53, "except": [0, 320, 332, 334, 345], "excit": [36, 64, 67, 68, 96, 99, 102, 103, 104, 105, 120, 187], "exclus": [278, 281, 295], "exdb": 8, "execut": [126, 272], "exist": [21, 125, 127, 129, 273, 332], "exit": 272, "exp": [131, 136, 137, 139, 198, 205, 305], "expand": [4, 120, 144, 339, 343], "expans": [30, 67, 68], "expansion_factor": 64, "expect": [12, 126, 129, 147, 215, 217, 218, 219, 220, 221, 241, 255, 274], "expens": 3, "experi": [10, 280, 282, 357], "experiment": 282, "explan": [17, 19, 23, 25, 111, 118, 168, 169, 170, 243, 244, 245, 258], "explicit": 129, "explicitli": [120, 125, 127], "explod": [205, 234, 235, 236], "explor": [255, 282], "expon": [17, 293], "exponenti": [131, 136, 138, 198, 205, 207, 215, 261, 262, 263, 264, 265, 314], "express": 27, "extend": [4, 69, 89, 106, 120], "extens": [120, 257], "extern": [4, 10], "extra": [30, 49], "extract": [50, 54, 78, 89, 106, 116, 120, 144, 213, 246, 248, 273, 296, 316, 318, 348, 350], "extractor": [58, 59, 60, 61, 116], "extrem": [19, 79, 120], "ey": 305, "f": [1, 4, 5, 6, 7, 8, 10, 120, 127, 128, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 154, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 204, 207], "f_1": 187, "f_2": 187, "facilit": [50, 125, 129, 138, 207, 211, 212, 213, 255, 257, 349, 357], "factor": [36, 52, 131, 140, 141, 142, 144, 187, 196, 197, 253, 258, 265, 266, 267, 268, 274], "factori": 117, "failur": [125, 126, 127, 128, 255], "fals": [1, 5, 6, 7, 8, 18, 22, 36, 67, 68, 78, 121, 122, 123, 124, 145, 147, 148, 149, 150, 151, 163, 166, 179, 190, 192, 193, 194, 195, 196, 197, 211, 212, 213, 217, 224, 226, 253, 261, 262, 266, 270, 275, 277, 278, 279, 281, 283, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 316, 317, 318, 325, 330, 331, 347], "famili": [30, 120, 273], "fan": [192, 193, 196, 197], "fan_in": [192, 193], "fan_out": [192, 193], "fashion": 7, "fashion_train": 7, "fashionmnist": 9, "fast": 265, "faster": [120, 260, 264, 272], "fc": [54, 78, 89, 96, 106, 126, 187, 212, 213, 246, 247, 248, 249, 250, 251], "fc1": [60, 61, 121, 125, 129, 199, 200, 201, 203, 204, 205, 206, 208, 209, 226], "fc2": [60, 61, 121, 125, 129, 199, 200, 201, 203, 205, 206, 208, 209, 226], "fc3": 61, "featur": [3, 23, 25, 27, 28, 30, 31, 50, 53, 54, 58, 59, 60, 61, 76, 77, 78, 89, 90, 91, 92, 93, 94, 95, 97, 99, 100, 106, 107, 108, 109, 111, 116, 118, 119, 120, 146, 154, 156, 163, 164, 181, 182, 183, 187, 188, 213, 216, 218, 219, 220, 221, 224, 226, 234, 235, 236, 237, 238, 239, 240, 241, 246, 247, 248, 249, 250, 251, 255, 260], "feature_extractor": 58, "fed": [3, 357], "feed": [3, 283, 357], "feedforward": 121, "fergu": [118, 120], "fetch": 0, "few": 121, "fewer": [1, 70, 71, 72, 73, 74, 75, 120], "field": [5, 6, 8, 106, 110, 120, 188], "file": [3, 273], "fill": [190, 194, 195, 277, 278, 279, 281, 301, 302, 303, 304], "filter": [37, 118, 120, 140, 141, 142, 144, 181, 182, 183, 212, 213], "filter_height": 144, "filter_s": 144, "filter_width": 144, "final": [25, 31, 32, 33, 34, 35, 36, 37, 50, 51, 52, 53, 54, 55, 56, 64, 78, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 106, 107, 108, 109, 125, 126, 127, 128, 129, 188, 346, 357], "find": [21, 316, 318], "fine": [187, 357], "finish": 272, "first": [5, 6, 7, 8, 14, 58, 118, 121, 126, 127, 154, 187, 224, 261, 262, 263, 264, 265, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 336, 345, 346, 347, 357], "fit": 255, "fix": [126, 337], "flatten": [54, 58, 129, 144, 292, 335, 338, 339], "flexibl": [1, 3, 4, 10, 50, 54, 55, 56, 58, 65, 69, 78, 102, 103, 104, 105, 110, 111, 116, 120, 125, 126, 127, 128, 129, 253, 255, 257, 274, 301, 302, 347, 357], "flip": [352, 354, 357], "float": [2, 5, 6, 7, 8, 25, 36, 37, 52, 62, 65, 122, 124, 131, 134, 145, 146, 147, 148, 149, 150, 151, 157, 158, 159, 163, 164, 166, 167, 180, 181, 182, 183, 190, 194, 195, 196, 197, 198, 202, 215, 216, 217, 218, 219, 220, 221, 228, 229, 230, 234, 235, 236, 237, 238, 239, 240, 241, 253, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 274, 275, 281, 283, 295, 298, 300, 310, 331, 349, 351, 352, 353, 354], "float32": [122, 124, 283, 295, 296, 299, 300, 301, 303, 331, 347], "float64": [304, 331, 347], "flow": [53, 54, 96, 120, 129, 146, 197, 199, 206, 209, 211, 212, 213, 224, 226, 270], "fly": [2, 3], "fname": 3, "focu": 10, "focus": 10, "follow": [0, 10, 11, 14, 20, 21, 22, 23, 25, 32, 33, 34, 35, 36, 67, 68, 102, 103, 104, 105, 110, 111, 116, 118, 121, 131, 132, 134, 135, 136, 137, 138, 139, 154, 156, 179, 181, 182, 183, 184, 185, 186, 187, 188, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 273, 274, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 316, 318, 336, 340, 348, 349, 350, 351, 352, 353, 354, 357], "forc": 146, "form": [20, 188, 292, 336, 339, 343, 357], "format": [2, 3, 5, 6, 7, 8, 121, 229, 232, 347], "formul": 132, "formula": [14, 22, 138, 168, 169, 170, 207, 208, 230, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 288, 330, 351], "forward": [10, 23, 25, 26, 27, 28, 29, 30, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 90, 91, 92, 93, 94, 95, 102, 103, 104, 105, 107, 108, 109, 110, 111, 118, 121, 122, 123, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "found": 10, "foundat": [54, 96, 123, 255, 257, 283], "four": [32, 33, 34, 35, 70, 71, 72, 73, 74, 75, 337], "frac": [12, 13, 14, 16, 17, 18, 19, 21, 22, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 147, 154, 156, 164, 168, 169, 170, 171, 172, 173, 175, 176, 177, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 212, 213, 215, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 246, 247, 248, 249, 250, 251, 259, 260, 261, 262, 263, 264, 265, 266, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 349], "frame": 151, "framework": [4, 10, 120, 229, 232, 234, 235, 236, 238, 239, 240, 256, 257, 357], "frequent": [229, 232], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 17, 19, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 54, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 90, 91, 92, 93, 94, 95, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 121, 122, 123, 124, 125, 126, 127, 128, 129, 144, 146, 154, 163, 166, 179, 181, 182, 183, 187, 188, 190, 192, 193, 194, 195, 196, 197, 204, 211, 212, 213, 215, 216, 218, 219, 220, 221, 224, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 246, 247, 248, 255, 256, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 271, 272, 273, 274, 275, 277, 278, 279, 281, 282, 283, 288, 289, 290, 294, 296, 316, 317, 318, 325, 330, 332, 334, 336, 339, 341, 342, 343, 345, 348, 349, 350, 351, 352, 353, 354, 357], "full": [22, 65, 67, 68], "full_matric": 22, "fulli": [4, 11, 23, 25, 31, 32, 33, 34, 35, 36, 37, 54, 58, 59, 60, 61, 78, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 106, 107, 108, 109, 111, 116, 118, 120, 156, 187, 188, 226, 282], "func": 273, "function": [3, 4, 5, 6, 7, 8, 10, 11, 123, 125, 126, 127, 128, 129, 181, 182, 183, 187, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 215, 216, 218, 219, 220, 221, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 244, 245, 255, 257, 274, 282, 346, 357], "fundament": [10, 156, 226, 347], "further": [10, 26, 27, 28, 29, 30, 37, 38, 39, 40, 41, 42, 43, 44, 45, 64, 65, 66, 67, 68, 76, 77, 282, 317, 325, 330], "fuse": 106, "fusion": [107, 108, 109], "futur": 225, "g": [0, 13, 14, 17, 20, 22, 36, 38, 39, 40, 41, 42, 43, 44, 45, 51, 52, 53, 55, 56, 58, 59, 60, 61, 69, 111, 120, 187, 188, 215, 256, 259, 266, 332, 351], "g_": 260, "g_t": 266, "gain": [196, 197], "gamma": [164, 234, 235, 236, 237, 238, 239, 240, 241], "gamma_c": [164, 237], "gap": [78, 89, 106, 187], "gaussian": [132, 199], "gelu": [133, 153, 210, 223], "gelunetwork": 199, "gener": [19, 26, 121, 147, 180, 215, 216, 218, 219, 220, 221, 239, 262, 264, 265, 272, 275, 277, 278, 279, 280, 281, 282, 287, 295, 297, 298, 300, 336, 350, 351, 352, 354, 357], "geoffrei": [5, 6], "get": [5, 6, 7, 8], "github": 7, "give": [10, 258, 266], "given": [13, 14, 17, 19, 20, 22, 144, 228, 229, 232, 256, 270, 275, 302, 304, 346, 351, 352, 354, 357], "global": [0, 36, 78, 89, 96, 106, 164, 187, 237, 270, 272, 280, 282], "global_response_norm": [153, 165], "globalresponsenorm": [223, 242], "go": [51, 120], "goal": [228, 229, 232], "googlenet": [51, 120], "gpu": 120, "grad": [122, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 144, 147, 154, 156, 179, 184, 185, 186, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 212, 213, 215, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 246, 247, 248, 249, 250, 251, 256, 257, 275, 277, 278, 279, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 297, 298, 300, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 334, 337, 338, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 352, 354, 355], "grad_output": 17, "gradient": [10, 11, 53, 54, 120, 122, 124, 216, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 275, 277, 278, 279, 281, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 331, 347], "grain": 187, "graph": [10, 197, 283, 295, 296, 299, 301, 302, 303, 304, 347], "grayscal": [7, 8, 58, 59, 60, 61, 351, 357], "greater": 310, "green": 351, "grid": 336, "grn": 237, "groundbreak": 120, "group": [69, 76, 77, 89, 90, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 110, 120, 126, 140, 141, 142, 181, 182, 183, 188, 211, 212, 213, 256, 257], "group1": 126, "group2": 126, "groupedconvblock": 89, "growth_rat": [31, 32, 33, 34, 35], "guarante": 280, "h": [78, 90, 91, 92, 93, 94, 95, 107, 108, 109, 120, 141, 142, 144, 146, 150, 151, 164, 169, 170, 172, 173, 176, 177, 179, 180, 182, 183, 187, 235, 236, 237, 239, 240, 244, 245, 248, 251, 348, 350], "h_": [141, 142, 169, 170, 172, 173, 176, 177, 179, 212, 213, 244, 245, 247, 248, 250, 251], "h_out": [141, 142, 172, 173, 176, 177], "h_stack": 334, "ha": [0, 14, 26, 121, 129, 140, 141, 142, 181, 182, 183, 204, 208, 228, 229, 234, 235, 236, 238, 239, 240, 241, 253, 256, 257, 288, 328, 332, 334, 342, 345, 351], "half": 323, "han": 7, "hand": 21, "handl": [0, 3, 10, 19, 123, 125, 126, 127, 128, 129, 229, 232, 255, 257, 272], "handwritten": [7, 8, 61], "hang": 120, "hard": [67, 68, 201], "hard_sigmoid": 200, "hardsigmoid": [201, 210, 223], "hardswish": [210, 223], "hardwar": 10, "hat": [261, 262, 263, 264, 265], "have": [0, 1, 13, 14, 16, 19, 20, 22, 124, 126, 128, 129, 141, 142, 146, 197, 255, 299, 301, 302, 303, 304, 316, 318, 332, 334, 336, 341, 342, 345, 349, 355], "he": 120, "head": [25, 64, 116], "height": [116, 141, 142, 144, 150, 151, 164, 169, 170, 172, 173, 176, 177, 179, 180, 188, 212, 213, 235, 236, 237, 239, 240, 244, 245, 247, 248, 250, 251, 253, 348, 350, 355], "help": [10, 52, 134, 136, 151, 198, 202, 204, 205, 209, 234, 235, 236, 246, 247, 249, 250, 258, 261, 262, 264, 270, 271, 272, 274], "henc": 340, "here": [3, 12, 123, 154, 255, 257, 271, 272, 274, 282, 346, 347, 357], "hidden": [23, 118, 126], "hidden_s": 126, "hierarch": [25, 126, 129, 255], "hierarchi": 212, "hierarchicalnetwork": 126, "high": [10, 27, 46, 47, 48, 49, 64, 86, 101, 110, 278, 281], "higher": [37, 62, 89, 229, 232, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 287, 288, 292, 314], "highest": [30, 278], "highli": [30, 66, 120], "highlight": [187, 249, 250, 251], "hint": 274, "hinton": [5, 6], "histor": 260, "histori": [275, 277, 278, 279, 281, 295, 296, 297, 298, 299, 301, 302, 303, 304], "hold": [125, 126, 127, 128], "horizont": [334, 342, 352, 357], "hot": [229, 232], "how": [2, 3, 10, 102, 103, 104, 105, 110, 126, 129, 255, 274, 357], "howard": 120, "howev": [122, 197], "hstack": 335, "html": [5, 6], "http": [5, 6, 7, 8], "hu": [120, 187], "huang": 120, "huber": [159, 230], "huber_loss": [153, 160], "huberloss": [223, 233], "huberregressionmodel": 230, "hue": 357, "hyperbol": [139, 209, 312, 322, 327], "hyperparamet": [70, 71, 72, 73, 74, 75, 78, 89, 117, 256, 258], "i": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 37, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 154, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357], "iccv": 120, "idea": 120, "ideal": [10, 27, 62, 129], "ident": [16, 17, 120, 180, 217, 223, 227, 280, 282, 299, 340], "identifi": 127, "idx": [2, 3], "ieee": [120, 187], "ii": 328, "ij": [138, 179, 207, 286, 287, 288, 292, 336], "ik": [286, 287, 288], "ill": [13, 19], "ilsvrc": 120, "imag": [3, 4, 5, 6, 7, 8, 23, 24, 25, 26, 32, 33, 34, 35, 37, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 97, 98, 99, 100, 101, 102, 103, 104, 105, 110, 119, 120, 141, 166, 180, 182, 187, 212, 239, 336, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357], "image_dir": 3, "image_path": 3, "imagedataset": 3, "imageio": 3, "imagenet": [32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 62, 63, 64, 65, 66, 67, 68, 87, 88, 102, 103, 104, 105, 110, 120], "imbal": [229, 232], "impact": [120, 264], "implement": [2, 3, 10, 19, 23, 25, 31, 36, 50, 51, 52, 53, 55, 56, 58, 62, 63, 64, 78, 87, 88, 90, 91, 92, 93, 94, 95, 96, 116, 118, 120, 123, 144, 147, 184, 185, 186, 188, 217, 237, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 334, 345, 351], "impli": [211, 212], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 88, 90, 91, 92, 93, 94, 95, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 146, 147, 148, 151, 154, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357], "improp": [126, 129, 282], "improv": [25, 37, 51, 52, 53, 54, 56, 69, 78, 89, 102, 103, 104, 105, 106, 118, 120, 146, 147, 163, 180, 187, 199, 205, 209, 258, 259, 260, 261, 262, 263, 264, 265, 266, 274, 350, 353, 357], "imread": 3, "in1_featur": [154, 224], "in2_featur": [154, 224], "in_channel": [78, 126, 129, 181, 182, 183, 184, 185, 186, 187, 188, 211, 212, 213, 235, 236, 246, 247, 248, 249, 250, 251, 255], "in_featur": [125, 126, 129, 156, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 212, 213, 215, 218, 219, 224, 226, 228, 229, 230, 231, 232, 234, 238, 241, 246, 247, 248, 249, 250, 251], "incept": [51, 52, 53, 54, 55, 56, 57, 120], "inception_resnet_v1": 120, "inception_resnet_v2": 120, "inception_v1": 120, "inception_v3": 120, "inception_v4": 120, "inceptionresnet": [55, 56], "includ": [3, 4, 7, 10, 11, 17, 18, 23, 25, 50, 51, 52, 55, 58, 78, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 106, 111, 117, 118, 121, 123, 124, 126, 128, 129, 179, 181, 182, 183, 184, 185, 186, 253, 255, 256, 257, 264, 274, 282, 288, 337], "inclus": [124, 127, 278, 281, 300], "incom": [156, 226], "incomplet": 2, "incompletedataset": 2, "incorpor": [22, 66, 89, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 120, 199], "increas": [27, 28, 62, 89, 90, 91, 92, 93, 94, 95, 106, 140, 141, 142, 144, 180, 260, 267, 271, 334, 345, 351, 352, 354, 357], "independ": [126, 140, 141, 142, 215, 218, 219, 220, 221, 241, 288, 298, 349, 351, 353, 355], "index": [0, 2, 5, 6, 7, 8, 164, 237, 271, 295, 296, 299, 336, 340], "indexerror": 0, "indic": [0, 1, 76, 77, 111, 121, 124, 126, 128, 129, 158, 162, 229, 232, 246, 270, 283, 348, 350], "individu": [3, 126, 129, 230, 241, 257, 260, 267], "induc": [136, 205], "inf": 326, "infer": [102, 103, 104, 105, 110, 126, 129, 272], "infin": [20, 22, 263], "inform": [10, 120, 121, 122, 187, 257, 259, 272], "infti": [18, 265], "inherit": [1, 258, 266, 268], "init": 191, "initi": [1, 25, 31, 54, 69, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 106, 107, 108, 109, 112, 113, 114, 115, 117, 122, 124, 125, 126, 127, 128, 129, 188, 190, 192, 193, 194, 195, 196, 197, 211, 212, 213, 224, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 241, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 277, 280, 281, 282, 295, 299, 300, 301, 302, 303, 304, 331], "initial_accumulator_valu": 260, "inner": [10, 286, 305], "innov": 64, "input": [10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 89, 102, 103, 104, 105, 106, 110, 116, 118, 120, 121, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 154, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 272, 274, 282, 283, 284, 286, 287, 288, 292, 296, 298, 302, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357], "input1": 224, "input2": 224, "input_": [23, 25, 26, 27, 28, 29, 30, 118, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 237, 243, 244, 245], "input_1": 154, "input_2": 154, "input_data": [198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 212, 213, 215, 218, 219, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 241, 246, 247, 248, 249, 250, 251], "input_s": [126, 128, 207, 229, 232], "input_shap": 121, "input_tensor": [10, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 90, 91, 92, 93, 94, 95, 102, 103, 104, 105, 107, 108, 109, 110, 111, 116, 122, 125, 126, 127, 128, 129, 138, 146, 147, 184, 185, 186, 187, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 246, 247, 248, 249, 250, 251, 253, 255, 348, 349, 350, 351, 352, 353, 354, 355], "insid": [3, 270, 272], "insight": [10, 120], "inspect": [123, 124, 129, 256], "inspir": [25, 120], "instabl": [19, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268], "instal": 10, "instanc": [0, 1, 10, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 59, 60, 61, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 117, 119, 121, 123, 124, 125, 127, 128, 129, 166, 204, 238, 239, 240, 241, 256, 273, 331, 339, 343, 357], "instance_norm": [153, 165, 238, 239, 240], "instancenorm1d": [223, 242], "instancenorm1dmodel": 238, "instancenorm2d": [223, 242], "instancenorm3d": [223, 242], "instanti": [2, 36, 46, 47, 48, 49, 102, 103, 104, 105, 110, 273], "instead": [10, 121, 125, 126, 127, 128, 129, 192, 193, 196, 197, 261, 262, 263, 272, 274, 297, 298], "int": [0, 1, 2, 5, 6, 7, 8, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 138, 140, 141, 142, 144, 146, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 194, 195, 196, 197, 207, 211, 212, 213, 216, 224, 226, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 261, 262, 263, 264, 265, 267, 273, 275, 277, 278, 279, 280, 281, 283, 295, 296, 297, 299, 300, 301, 303, 310, 316, 317, 318, 325, 329, 330, 331, 332, 337, 339, 340, 341, 342, 343, 344, 348, 350, 355], "integ": [1, 3, 17, 96, 111, 140, 141, 142, 169, 170, 211, 212, 213, 241, 244, 245, 247, 248, 249, 250, 251, 274, 278, 279, 281, 282, 297, 301, 303, 317, 325, 329, 330, 337, 339, 340, 343], "integr": [1, 2, 4, 5, 6, 7, 8, 11, 69, 120, 124, 126, 128, 129, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 212, 213, 224, 226, 246, 247, 248, 249, 250, 251], "intellig": [120, 187], "intend": [122, 127, 128], "intens": [19, 31, 79, 349, 351], "intent": 274, "interact": [154, 224, 255, 282], "interdepend": 120, "interfac": [2, 123, 126, 257], "interfer": [270, 272], "intermedi": [19, 76, 77, 187], "intern": [79, 80, 81, 82, 83, 84, 85, 86, 97, 98, 99, 100, 101, 120, 125, 126, 127, 128, 129, 229, 232, 255, 348, 349, 350, 351, 352, 353, 354, 355], "interpol": [153, 178, 253, 300, 355], "interpret": [120, 138, 207, 274, 332], "interv": [277, 281, 295], "introduc": [37, 51, 52, 62, 63, 64, 89, 120, 135, 187, 199, 203, 204, 206, 209, 215, 218, 219, 220, 221, 350, 353, 357], "introspect": 129, "intuit": [10, 125, 127, 255, 357], "inv": 15, "inv_a": 16, "invari": [247, 250], "invers": [10, 13, 16, 17, 19, 260, 307, 308, 309], "invert": [13, 16, 17, 21, 63, 64, 66, 120], "invok": 273, "involv": [12, 13, 14, 16, 19, 20, 22, 106, 131, 132, 134, 135, 136, 137, 139, 154, 156, 179, 211, 212, 213, 224, 226, 274, 275, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 304, 314, 315, 316, 318, 321, 323, 336, 337, 339, 343], "is_leaf": 283, "issu": [3, 205, 234, 235, 236, 261, 262], "item": [7, 231], "iter": [0, 1, 2, 3, 122, 123, 126, 128, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 295], "ith": [138, 207], "its": [4, 17, 19, 23, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 97, 98, 99, 100, 101, 107, 108, 109, 118, 120, 121, 122, 125, 126, 127, 128, 140, 141, 142, 144, 180, 188, 197, 199, 203, 208, 216, 249, 250, 251, 255, 256, 259, 267, 270, 271, 272, 273, 295, 297, 298, 303, 316, 318, 331, 340, 349, 352, 354, 357], "itself": [12, 17, 125, 126, 127, 128], "j": [8, 138, 187, 207, 234, 235, 236, 238, 239, 240, 246, 247, 249, 250, 336, 342, 348, 350], "jie": 120, "jk": 287, "join": [3, 332], "json": 273, "k": [17, 120, 140, 211, 229, 235, 236, 239, 240, 246, 249, 250, 286, 287, 296, 299, 332], "k_d": [142, 213, 248, 251], "k_h": [141, 142, 212, 213, 247, 248, 251], "k_w": [141, 142, 212, 213, 247, 248, 251], "kaim": [120, 192, 193, 196, 197], "kaiming_norm": 191, "kaiming_uniform": 191, "kalenichenko": 120, "karen": 120, "kashif": 7, "keep": [123, 147, 203, 259, 272, 340], "keep_grad": [124, 275, 277, 278, 279, 281, 283, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 331, 347], "keep_var": 123, "keepdim": [18, 316, 317, 318, 325, 330], "kei": [120, 123, 125, 127, 129, 256], "kept": [317, 325, 330], "kernel": [58, 59, 60, 61, 67, 68, 106, 107, 108, 109, 110, 118, 120, 140, 141, 142, 144, 168, 169, 170, 171, 172, 173, 175, 176, 177, 181, 182, 183, 184, 185, 186, 188, 211, 212, 213, 243, 244, 245, 247, 248, 251], "kernel_s": [64, 67, 68, 106, 107, 108, 109, 126, 129, 171, 172, 173, 175, 176, 177, 181, 182, 183, 184, 185, 186, 188, 211, 212, 213, 235, 236, 246, 247, 248, 249, 250, 251], "keyerror": 123, "keyword": [24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 119, 123, 225], "kj": [286, 288], "known": 120, "kriz": [5, 6], "krizhevski": [5, 6, 120], "kroneck": [138, 207], "kwarg": [24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 59, 60, 61, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 123, 225, 273], "l": [12, 19, 46, 120, 140, 149, 168, 171, 175, 181, 187, 215, 218, 219, 220, 221, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243], "l2": [258, 259, 260, 261, 262, 263, 264, 265, 266, 268], "l_": [140, 168, 171, 175, 211, 243, 246, 249], "l_out": [140, 171, 175], "label": [4, 5, 6, 7, 8, 52, 228, 229, 232], "lambd": 258, "lambda": [14, 136, 205, 258, 262], "lambda_1": 14, "lambda_2": 14, "lambda_i": 14, "lambda_n": 14, "languag": [4, 211, 224, 246, 249], "larg": [0, 3, 19, 27, 30, 31, 46, 49, 64, 67, 79, 80, 81, 84, 97, 98, 120, 184, 185, 186, 204, 230, 255, 258, 261, 262, 263, 266, 267, 268, 272], "larger": [26, 36, 37, 78, 106, 125, 127, 140, 141, 142, 144, 146, 216, 258, 289, 337, 348, 350, 355], "largest": [30, 316], "last": [1, 138, 167, 207, 287, 288, 332, 352, 354], "last_channel": 64, "latest": 4, "layer": [10, 23, 25, 31, 32, 33, 34, 35, 36, 37, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 64, 65, 67, 68, 69, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 106, 107, 108, 109, 111, 112, 113, 114, 115, 118, 120, 121, 123, 125, 126, 129, 138, 147, 156, 163, 166, 167, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 196, 197, 207, 211, 212, 213, 217, 224, 225, 226, 232, 241, 246, 247, 248, 249, 250, 251, 255, 282, 337, 347], "layer1": 273, "layer2": 273, "layer_group": 126, "layer_norm": [153, 165, 241], "layer_scale_init": 25, "layer_sequ": [126, 129], "layernorm": [223, 242], "layernormmodel": 241, "le": 120, "lead": [126, 129, 199, 238, 239, 240, 241, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 282], "leaf": 283, "leaki": [134, 202], "leaky_relu": [133, 153, 202], "leakyrelu": [210, 223], "learn": [1, 3, 4, 7, 8, 10, 17, 19, 37, 89, 90, 91, 92, 93, 94, 95, 118, 119, 120, 125, 126, 127, 128, 135, 138, 187, 198, 202, 203, 207, 211, 212, 213, 218, 219, 220, 221, 224, 226, 255, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 280, 300, 346, 347, 357], "learnabl": [122, 123, 124, 163, 164, 166, 167, 181, 182, 183, 211, 212, 213, 224, 226, 234, 235, 236, 237, 238, 239, 240, 241, 255], "least": [19, 20, 22, 253, 328], "lecun": [8, 120], "left": [17, 18, 19, 22, 132, 138, 199, 207, 228, 229, 230, 232, 234, 235, 236, 238, 239, 240, 241, 249, 250, 251, 348, 350], "leftarrow": 264, "len": [0, 1, 2, 3, 336], "lenet": [57, 59, 60, 61, 120], "lenet_1": 120, "lenet_4": 120, "lenet_5": 120, "length": [126, 140, 149, 168, 171, 175, 211, 225, 234, 238, 243, 246, 249, 337, 349], "leq": [200, 201, 230, 265, 293, 310], "lerp": 179, "less": [0, 131, 134, 159, 198, 202, 229, 230, 232, 300, 310], "let": 14, "level": [10, 54], "leverag": [21, 53, 56, 90, 91, 92, 93, 94, 95, 116, 120, 188, 255], "li": 120, "librari": [3, 10, 11, 123, 255, 256, 257, 273, 274, 282, 283, 357], "lie": 275, "lightweight": [10, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 63, 67, 68, 70, 71, 72, 73, 74, 75, 82, 99, 188, 201, 204], "like": [10, 37, 54, 90, 91, 92, 93, 94, 95, 107, 108, 109, 120, 122, 123, 126, 129, 140, 146, 196, 197, 205, 215, 216, 234, 235, 236, 238, 239, 240, 270, 271, 274, 331, 347, 357], "likelihood": [162, 229, 232], "limit": [29, 67, 68, 121, 204, 259, 310], "linalg": [10, 15], "linalgerror": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22], "linear": [10, 11, 12, 19, 20, 21, 63, 66, 96, 120, 121, 125, 126, 127, 129, 131, 132, 134, 135, 136, 147, 192, 193, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 212, 213, 215, 217, 218, 219, 224, 225, 228, 229, 230, 231, 232, 234, 238, 241, 246, 247, 248, 249, 250, 251, 273, 299], "linearli": 230, "linspac": 305, "linspace_tensor": 300, "list": [0, 1, 25, 37, 58, 64, 69, 78, 89, 96, 106, 111, 121, 122, 124, 125, 126, 127, 128, 167, 188, 225, 241, 256, 274, 275, 277, 278, 279, 281, 283, 296, 297, 298, 301, 302, 303, 304, 329, 340, 341, 344, 346], "listdir": 3, "liter": [78, 157, 158, 159, 161, 162, 179, 181, 182, 183, 184, 185, 186, 188, 192, 193, 211, 212, 213, 228, 229, 230, 231, 232, 253, 336], "liu": 120, "ln": 293, "load": [3, 4, 5, 6, 7, 8, 122, 123, 124, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 273], "load_state_dict": [123, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "loader": [1, 2, 3], "local": [120, 144, 211], "locat": [120, 179], "log": [162, 228, 229, 232, 305], "log_softmax": 232, "logarithm": [293, 314, 315], "logic": [3, 243, 244, 245, 255, 256], "logit": [23, 25, 118, 138, 207, 229], "logsoftmax": [229, 232], "long": [264, 329], "loop": [1, 126, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "loss": [10, 19, 125, 126, 127, 128, 129, 138, 157, 158, 159, 161, 162, 198, 199, 202, 203, 205, 206, 207, 209, 215, 218, 219, 220, 221, 225, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "low": [10, 54, 63, 67, 68, 278, 281], "lower": [12, 62, 195, 258, 266, 267, 268, 281], "lowest": 278, "lr": [256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "lu": 16, "lucid": [0, 1, 2, 5, 6, 7, 8, 15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 154, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 276, 305, 335, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355], "m": [47, 111, 120, 125, 126, 129, 247, 248, 250, 251, 261, 262, 263, 264, 265, 299], "m_": [261, 262, 263, 264, 265], "m_t": [264, 265], "maaten": 120, "machin": [3, 7, 8, 10, 19, 120, 187, 261, 271, 280], "magnitud": [147, 266, 267, 357], "mai": [3, 10, 14, 16, 19, 126, 128, 180, 217, 230, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 272, 282, 351, 357], "main": [10, 20, 54, 126, 296, 299], "maintain": [19, 46, 47, 48, 49, 62, 89, 90, 91, 92, 93, 94, 95, 102, 103, 104, 105, 110, 120, 122, 123, 125, 126, 127, 129, 136, 147, 192, 193, 196, 197, 198, 199, 205, 215, 217, 218, 219, 220, 221, 234, 235, 236, 238, 239, 240, 261, 266, 348, 351, 355], "make": [1, 3, 10, 27, 28, 50, 54, 58, 63, 66, 67, 68, 78, 120, 126, 129, 206, 229, 230, 241, 247, 250, 255, 260, 261, 262, 263, 271, 273, 282, 283, 288, 336, 346, 357], "manag": [10, 123, 125, 126, 127, 128, 129, 255, 257, 270, 272, 273, 282], "manhattan": 18, "mani": 121, "manipul": [10, 125, 127, 357], "manner": [126, 129], "manual": [157, 158, 162, 228, 229, 232, 272], "map": [76, 77, 78, 89, 99, 106, 120, 123, 137, 139, 146, 164, 187, 206, 209, 217, 237], "mask": [122, 215, 218, 219, 220, 221], "match": [21, 123, 126, 129, 157, 159, 161, 167, 181, 182, 183, 216, 256, 314, 339, 340, 343, 344, 349, 357], "math": [311, 321, 326], "mathbf": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 116, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 154, 156, 179, 184, 185, 186, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 212, 213, 215, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 246, 247, 248, 249, 250, 251, 286, 287, 288, 292, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 334, 337, 338, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 351, 352, 353, 354, 355], "mathcal": [192, 194, 196, 215, 218, 219, 220, 221, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241], "mathemat": [16, 181, 182, 183, 350, 352, 353, 354], "mathrm": 19, "matmul": 305, "matric": [11, 13, 14, 16, 19, 21, 22, 286, 287, 288, 299, 336], "matrix": [10, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22, 144, 154, 225, 226, 255, 286, 336], "matrix_pow": 15, "matthew": 120, "max": [18, 96, 111, 135, 175, 176, 177, 200, 201, 203, 204, 249, 250, 251, 263, 289, 305, 310], "max_pool": [249, 250, 251], "max_pool1d": [153, 174], "max_pool2d": [153, 174], "max_pool3d": [153, 174], "max_valu": 310, "maxim": 3, "maximum": [18, 203, 204, 249, 250, 251, 261, 263, 305, 310, 316, 353], "maxpool": [23, 118], "maxpool1d": [223, 252], "maxpool1dmodel": 249, "maxpool2d": [126, 129, 212, 223, 252], "maxpool2dmodel": 250, "maxpool3d": [213, 223, 252], "maxpool3dmodel": 251, "mean": [5, 6, 7, 8, 20, 76, 77, 121, 122, 136, 140, 141, 142, 145, 157, 158, 159, 161, 162, 163, 166, 181, 182, 183, 194, 198, 199, 200, 202, 203, 205, 206, 209, 213, 215, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 261, 262, 263, 264, 265, 266, 270, 279, 305, 310, 314, 315, 316, 318, 321, 323, 325, 328, 329, 330, 346, 349, 357], "meaning": [129, 274], "measur": [228, 229, 231, 232], "mechan": [10, 76, 77, 96, 106, 110, 128, 154], "medium": 47, "membership": 228, "memori": [2, 3, 31, 272, 297, 298], "meshgrid": 335, "method": [3, 10, 11, 16, 37, 96, 116, 117, 125, 126, 127, 128, 129, 157, 158, 159, 161, 162, 192, 193, 196, 197, 228, 229, 230, 231, 232, 253, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 282], "mid_channel": [67, 68], "middl": 271, "might": 255, "min": [200, 201, 204, 290, 305, 310], "min_valu": 310, "mind": [0, 3, 10, 126, 129, 272], "mingx": 120, "mini": 1, "minim": [4, 10, 64, 120, 129, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 257], "minimalist": 10, "minimum": [305, 310, 318], "minu": 206, "mirror": [302, 304], "mismatch": [37, 123, 255, 256], "miss": [123, 255], "mitig": [134, 198, 202, 205, 234, 235, 236], "mlp": 188, "mnist": [4, 7, 9, 59, 60], "mnist_train": [4, 8], "mobil": [62, 63, 64, 66, 67, 68, 120], "mobilenet": [57, 63, 64, 66, 67, 68, 120, 204], "mobilenet_v2": 120, "mobilenet_v3": [67, 68], "mobilenet_v3_larg": 120, "mobilenet_v3_smal": 120, "mobilenetv2": [63, 120], "mobilenetv3": [64, 67, 68, 120], "mode": [10, 151, 163, 166, 179, 192, 193, 215, 217, 218, 219, 220, 221, 253, 337], "model": [1, 3, 4, 10, 17, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 122, 123, 124, 125, 126, 127, 128, 129, 138, 146, 180, 181, 182, 183, 188, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 217, 218, 219, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 241, 246, 247, 248, 249, 250, 251, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 272, 273, 282, 346, 347, 357], "model_b0": 36, "model_b7": 36, "moder": [28, 100], "modern": [25, 120], "modif": [117, 129, 272], "modifi": [24, 78, 116, 119, 125, 126, 127, 128, 190, 192, 193, 194, 195, 196, 197, 215, 270, 272, 280, 334, 345], "modul": [5, 6, 7, 8, 10, 23, 24, 25, 36, 37, 50, 53, 54, 55, 56, 58, 62, 63, 64, 78, 89, 96, 106, 111, 116, 118, 119, 120, 121, 122, 124, 125, 126, 127, 128, 129, 147, 181, 182, 183, 184, 185, 186, 187, 188, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 273, 274, 282, 347, 357], "modular": [3, 10, 120, 123, 126, 129, 255, 357], "moduledict": [126, 127, 129, 130], "modulelist": [128, 129, 130], "moment": [261, 262, 263, 264, 265], "momentum": [163, 166, 181, 182, 183, 234, 235, 236, 238, 239, 240, 258, 264, 266, 268], "momentum_decai": 264, "monoton": 208, "moor": 19, "more": [3, 4, 7, 10, 14, 27, 78, 85, 125, 126, 129, 146, 184, 185, 186, 198, 218, 219, 220, 221, 255, 256, 257, 258, 259, 262, 263, 266, 267, 268, 279, 288, 328, 342, 357], "most": [11, 120, 250, 347, 348, 357], "move": [258, 266], "mse": [159, 161, 230, 231], "mse_loss": [153, 160], "mseloss": [223, 233], "mu": [194, 234, 235, 236, 238, 239, 240, 241, 330], "mu_c": 349, "mu_i": [238, 239, 240], "much": 357, "mul": 305, "multi": [3, 4, 55, 106, 107, 108, 109, 120, 138, 158, 162, 188, 207, 229, 232, 317, 325, 330], "multidimension": [277, 281, 297], "multipl": [1, 3, 10, 11, 17, 21, 23, 78, 96, 110, 127, 128, 129, 144, 179, 180, 187, 188, 215, 218, 219, 220, 221, 229, 232, 255, 271, 275, 277, 278, 279, 281, 286, 291, 297, 298, 346, 351, 357], "multipli": [17, 65, 128, 156, 226, 253, 267, 291, 292], "must": [0, 1, 3, 12, 13, 14, 16, 17, 20, 21, 22, 121, 123, 125, 126, 127, 128, 129, 147, 167, 215, 217, 218, 219, 220, 221, 232, 253, 256, 272, 275, 328, 332, 334, 337, 339, 340, 342, 343, 345, 348, 349, 350, 351, 352, 354], "my_simple_model": 273, "mymodel": [123, 124, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "myoptim": [256, 257], "n": [17, 18, 78, 90, 91, 92, 93, 94, 95, 107, 108, 109, 120, 125, 126, 129, 140, 141, 142, 144, 146, 149, 150, 151, 154, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 187, 192, 194, 196, 211, 212, 213, 220, 221, 224, 226, 228, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 243, 244, 245, 246, 247, 248, 249, 250, 251, 299, 317, 328, 330], "n1": 18, "nabla_": [259, 260, 261, 262, 263, 264, 265, 267], "nabla_t": 265, "nadam": 269, "nair": [5, 6], "name": [120, 121, 123, 125, 127, 129, 273, 274], "nan": [20, 22], "natur": [19, 120, 211, 224, 246, 249, 293, 314, 315], "ndarrai": [122, 124, 274, 275, 283, 296, 298, 302, 304, 331], "ndim": [20, 22, 124, 283], "ne": 17, "nearest": [179, 253], "necessari": [4, 5, 6, 7, 8, 19, 272, 334, 345], "need": [2, 4, 126, 127, 128, 138, 224, 255, 272, 297, 298, 346, 347, 357], "neg": [17, 19, 22, 131, 162, 180, 198, 202, 203, 205, 229, 232, 267, 332], "negative_slop": [134, 202], "neglect": 128, "neighbor": 179, "neq": 18, "nest": [121, 126, 129, 255], "nestedmodel": 121, "nesterov": 264, "net": [118, 120], "network": [3, 4, 10, 23, 24, 25, 31, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 53, 54, 61, 62, 65, 69, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 96, 97, 98, 99, 100, 101, 106, 111, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 135, 136, 137, 138, 139, 140, 141, 142, 146, 147, 154, 156, 163, 180, 187, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 241, 246, 247, 248, 249, 250, 251, 255, 256, 257, 258, 266, 268, 281, 282, 283, 295, 301, 303, 316, 318, 337, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357], "neural": [3, 4, 10, 23, 24, 25, 36, 38, 39, 40, 41, 42, 43, 44, 45, 54, 61, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 132, 135, 136, 137, 138, 139, 140, 141, 142, 147, 154, 156, 163, 180, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 241, 246, 247, 248, 249, 250, 251, 255, 256, 257, 258, 266, 268, 281, 282, 283, 295, 301, 303, 316, 318, 337, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357], "neuralnetwork": [200, 201, 203, 208], "neuron": 202, "never": 351, "new": [123, 124, 131, 132, 134, 135, 136, 137, 139, 154, 156, 179, 188, 192, 193, 194, 195, 196, 197, 256, 273, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 298, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 329, 331, 332, 334, 337, 339, 340, 342, 343, 344, 345], "next": [129, 346], "nll": 162, "nll_loss": [153, 160], "nllloss": [223, 233], "nn": [5, 6, 7, 8, 10, 23, 25, 31, 36, 37, 50, 54, 58, 62, 63, 64, 78, 89, 96, 102, 103, 104, 105, 106, 110, 111, 118, 121, 130, 133, 143, 152, 155, 160, 165, 174, 178, 189, 191, 210, 214, 222, 223, 227, 233, 242, 252, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 273, 347, 357], "no_grad": 270, "node": 283, "nois": [22, 282], "non": [14, 17, 19, 22, 128, 132, 134, 135, 192, 193, 198, 199, 200, 202, 203, 204, 205, 206, 208, 209, 215, 218, 219, 220, 221, 261, 262, 272, 293, 310], "none": [0, 1, 2, 5, 6, 7, 8, 18, 36, 37, 50, 54, 58, 62, 63, 64, 69, 78, 116, 121, 123, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 147, 154, 156, 157, 158, 159, 161, 162, 163, 166, 167, 180, 181, 182, 183, 184, 185, 186, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 246, 247, 248, 249, 250, 251, 253, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 271, 275, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 297, 298, 299, 300, 302, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 334, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 352, 354, 355], "norm": [11, 15, 263], "normal": [5, 6, 7, 8, 25, 96, 132, 136, 138, 139, 146, 163, 164, 166, 167, 181, 182, 183, 191, 192, 196, 199, 205, 207, 215, 234, 235, 236, 237, 238, 239, 240, 241, 266, 279, 282, 346, 356, 357], "normalized_shap": [167, 241], "note": [140, 215], "noth": [145, 148, 149, 150], "notimplementederror": [2, 123, 256], "notin": 310, "nov": 120, "novel": [7, 120], "np": [78, 90, 91, 92, 93, 94, 95, 107, 108, 109, 122, 124, 187, 229, 232, 274, 283, 288, 295, 296, 299, 301, 303, 304, 315, 331, 347], "npy": [5, 6, 7, 8], "num": 300, "num_class": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 207, 229, 232], "num_featur": [129, 181, 182, 183, 234, 235, 236, 238, 239, 240], "num_init_featur": [31, 32, 33, 34, 35], "num_paramet": 128, "number": [0, 1, 2, 5, 6, 7, 8, 13, 14, 16, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 120, 121, 124, 126, 128, 129, 140, 141, 142, 144, 149, 150, 151, 154, 156, 158, 162, 163, 164, 166, 168, 169, 170, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 196, 197, 206, 211, 212, 213, 224, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 247, 248, 249, 250, 251, 258, 277, 280, 281, 283, 293, 295, 297, 299, 300, 316, 317, 318, 329, 330, 332, 334, 337, 339, 340, 341, 343, 345, 349, 351, 352, 354, 357], "numer": [16, 19, 146, 157, 158, 163, 164, 166, 167, 181, 182, 183, 204, 216, 228, 229, 234, 235, 236, 237, 238, 239, 240, 241, 259, 260, 261, 262, 263, 264, 265, 266, 274, 285, 295, 301, 303], "numpi": [10, 122, 124, 229, 232, 274, 283, 288, 296, 299, 300, 315, 328, 331, 337, 339, 343, 347, 357], "o": [3, 248, 251, 301, 302], "object": [1, 3, 11, 106, 120, 123, 127, 128, 231, 255, 272, 284, 285, 289, 290, 291, 294, 331], "observ": 261, "obtain": 1, "occur": [180, 272, 273, 332], "occurr": 17, "odot": [215, 218, 219, 220, 221], "off": [28, 270], "offer": [4, 10, 26, 28, 30, 255, 257, 282, 357], "offset": 299, "often": [17, 87, 88, 140, 141, 142, 144, 216, 229, 232, 295, 303, 347, 351, 355, 357], "older": 264, "onc": 272, "one": [0, 102, 103, 104, 105, 110, 128, 129, 138, 140, 156, 171, 175, 181, 182, 183, 205, 206, 207, 211, 219, 229, 232, 234, 238, 246, 249, 253, 256, 271, 274, 279, 294, 302, 316, 318, 333, 338, 342, 347], "ones": [154, 156, 211, 212, 213, 226, 234, 235, 236, 238, 239, 240, 241, 255, 299, 302, 305], "ones_lik": 305, "onli": [10, 121, 179, 200, 203, 215, 216, 218, 219, 220, 221, 228, 229, 232, 234, 235, 236, 238, 239, 240, 241, 249, 250, 251, 267, 270, 295, 310, 316, 318, 328, 337, 338, 340, 341], "onto": [20, 22], "openml": [5, 6, 7, 8], "oper": [3, 10, 11, 16, 19, 76, 77, 96, 97, 98, 99, 100, 101, 122, 123, 126, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 144, 147, 151, 154, 156, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 211, 212, 213, 215, 217, 218, 219, 220, 221, 224, 225, 226, 243, 244, 245, 246, 247, 248, 249, 250, 251, 255, 270, 271, 272, 274, 275, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 297, 298, 301, 303, 314, 315, 316, 317, 318, 321, 323, 325, 328, 330, 332, 334, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 349, 355], "operatornam": [17, 19], "opposit": 258, "optim": [3, 10, 11, 17, 19, 20, 22, 25, 29, 30, 31, 37, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 63, 64, 67, 68, 120, 122, 124, 127, 128, 144, 211, 212, 213, 255, 272], "optimizer_st": [256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "option": [1, 5, 6, 7, 8, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 55, 56, 58, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 131, 134, 138, 141, 142, 145, 146, 147, 148, 149, 150, 151, 154, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 194, 195, 196, 197, 198, 202, 207, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 246, 247, 248, 249, 250, 251, 253, 256, 258, 266, 268, 275, 277, 278, 279, 281, 283, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 316, 317, 318, 325, 329, 330, 331, 332, 336, 339, 341, 342, 347, 351, 352, 354], "ord": 18, "order": [1, 3, 18, 22, 125, 126, 127, 128, 129, 329, 346], "ordered_dict": 129, "ordereddict": [123, 125, 126, 129], "organ": [125, 126, 127, 129, 273], "orient": 357, "origin": [52, 61, 145, 180, 187, 209, 337, 338, 339, 340, 343, 344, 355], "orthogon": [19, 20, 22], "orthonorm": 20, "oscil": [258, 266, 268], "other": [2, 3, 10, 16, 52, 56, 58, 61, 122, 123, 126, 129, 192, 193, 215, 216, 255, 256, 270, 272, 282, 283, 295, 297, 301, 303, 328, 336, 357], "otherwis": [79, 80, 81, 82, 83, 84, 85, 86, 97, 98, 99, 100, 101, 131, 134, 135, 136, 138, 147, 198, 200, 201, 202, 203, 205, 207, 217, 218, 219, 220, 221, 230, 246, 247, 248, 249, 250, 251, 256, 267, 273, 289, 290, 316, 318], "otim": [19, 154, 224], "out": [0, 3, 4, 131, 132, 134, 135, 136, 137, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 154, 156, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 192, 193, 196, 197, 211, 212, 213, 215, 217, 218, 219, 220, 221, 243, 244, 245, 246, 247, 248, 249, 250, 251, 258, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 337, 338, 339, 340, 341, 342, 343, 344, 345], "out_channel": [58, 64, 67, 68, 126, 129, 181, 182, 183, 184, 185, 186, 188, 211, 212, 213, 235, 236, 246, 247, 248, 249, 250, 251, 255], "out_featur": [125, 126, 129, 154, 156, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 212, 213, 215, 218, 219, 224, 226, 228, 229, 230, 231, 232, 234, 238, 241, 246, 247, 248, 249, 250, 251], "outcom": [351, 352, 354], "outer": 305, "outlier": [159, 230], "output": [0, 1, 2, 10, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 154, 156, 168, 169, 170, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 274, 275, 278, 279, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 298, 299, 301, 303, 304, 314, 315, 316, 317, 318, 321, 323, 325, 328, 329, 330, 336, 337, 339, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355], "output_height": 144, "output_lay": [126, 129], "output_s": [126, 168, 169, 170, 243, 244, 245], "output_width": 144, "outsid": [0, 217], "over": [0, 1, 2, 3, 11, 63, 76, 77, 106, 118, 123, 126, 128, 138, 168, 169, 170, 187, 207, 211, 212, 213, 229, 232, 234, 235, 236, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 258, 259, 260, 261, 262, 277, 281, 316, 317, 318, 325, 328, 330, 351, 352, 354], "overal": [116, 147], "overdetermin": 19, "overfit": [1, 23, 118, 148, 151, 216, 218, 219, 220, 221, 258, 261, 266, 268], "overhead": [64, 120, 187], "overli": 204, "overrid": [2, 3], "overridden": [123, 256], "overwrit": [125, 127], "own": [4, 125, 126, 127, 128, 140, 141, 142, 197, 255, 349], "p": [18, 19, 36, 124, 127, 128, 145, 146, 147, 148, 149, 150, 151, 215, 216, 218, 219, 220, 221, 246, 249, 250, 351, 352, 354, 357], "p_d": [248, 251], "p_h": [247, 248, 251], "p_w": [247, 248, 251], "packag": [2, 3, 4, 11, 120, 255, 257, 273, 280, 282, 347, 357], "pad": [58, 126, 129, 140, 141, 142, 144, 168, 169, 170, 171, 172, 173, 175, 176, 177, 181, 182, 183, 184, 185, 186, 188, 211, 212, 213, 235, 236, 243, 244, 245, 246, 247, 248, 249, 250, 251, 335], "pad_after_dim1": 337, "pad_after_dim2": 337, "pad_before_dim1": 337, "pad_before_dim2": 337, "pad_width": 337, "padding_height": 144, "padding_width": 144, "pair": 154, "pang": 120, "paper": 51, "parallel": [1, 3, 106, 120], "param": [123, 124, 127, 128, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "param1": 123, "param_dict": 127, "param_group": [256, 257], "param_groups_setup": 256, "param_list": 128, "param_s": 273, "paramet": [0, 2, 10, 59, 60, 61, 120, 123, 255, 256, 257, 274, 282, 357], "parameterdict": 130, "parameterlist": 130, "parent": 255, "part": [122, 123, 197, 255, 270, 272, 282, 295, 296, 299, 301, 302, 303, 304, 347, 357], "partial": [12, 13, 14, 16, 17, 18, 19, 21, 22, 131, 132, 134, 135, 136, 137, 138, 139, 154, 156, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 212, 213, 215, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 246, 247, 248, 249, 250, 251, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345], "particip": [124, 347], "particular": [125, 127], "particularli": [10, 19, 63, 90, 91, 92, 93, 94, 95, 126, 127, 128, 129, 138, 146, 156, 181, 182, 183, 184, 185, 186, 207, 226, 229, 232, 238, 239, 240, 241, 262, 270, 273, 300, 346], "pass": [2, 10, 19, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 87, 88, 89, 90, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 118, 121, 123, 124, 125, 126, 127, 128, 129, 179, 181, 182, 183, 187, 188, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 241, 246, 247, 248, 249, 250, 251, 255, 274, 283, 300, 317, 325, 328, 329, 330, 332, 334, 338, 340, 341, 345, 347, 357], "past": [258, 259, 261, 266], "patch": [144, 247], "path": [3, 5, 6, 7, 8, 25, 147, 217], "pathwai": 120, "pattern": [120, 135, 187, 203, 211, 212, 213], "penal": [258, 266, 268], "penalti": [259, 260, 261, 262, 263, 264, 265], "penros": 19, "per": [1, 64, 90, 91, 92, 93, 94, 95, 107, 108, 109, 168, 238, 239, 240, 241, 243], "perform": [3, 10, 11, 12, 19, 23, 25, 26, 27, 28, 29, 30, 37, 46, 47, 48, 49, 54, 55, 56, 58, 59, 60, 61, 64, 65, 66, 86, 102, 103, 104, 105, 106, 111, 118, 120, 123, 124, 128, 132, 140, 141, 142, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 184, 185, 186, 187, 188, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 211, 212, 213, 215, 218, 219, 220, 221, 224, 225, 226, 234, 235, 236, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 256, 270, 272, 280, 282, 284, 285, 288, 291, 294, 314, 316, 318, 325, 329, 346, 348, 350, 355, 357], "permut": 329, "persist": [122, 275, 277, 278, 279, 281, 297, 298], "perturb": [14, 21, 22, 357], "phi": [132, 199], "pi": [132, 199, 311, 321, 326], "piecewis": [200, 201], "pil": [347, 357], "pinv": 15, "pioneer": 120, "pipelin": [5, 6, 7, 8, 282, 346, 347, 349], "pixel": [5, 6, 7, 8, 179, 253, 349, 351], "place": [190, 192, 193, 194, 195, 196, 197], "placehold": [123, 225], "plai": [274, 282], "plot": 336, "point": [4, 180, 270], "pointwis": [184, 185, 186], "pool": [23, 58, 59, 60, 61, 69, 78, 89, 96, 106, 111, 118, 120, 168, 169, 170, 171, 172, 173, 175, 176, 177, 187, 188, 212, 213, 243, 244, 245, 246, 247, 248, 249, 250, 251, 316, 318], "pool1": 129, "pool2": 129, "poorli": 16, "popul": 123, "popular": [4, 120], "portion": 357, "pose": 19, "posit": [1, 12, 17, 123, 129, 180, 198, 202, 203, 205, 246, 247, 248, 249, 250, 251, 267, 271, 293, 339, 343, 350], "possibl": [10, 357], "potenti": [19, 225, 266, 341], "power": [10, 17, 63, 67, 68, 69, 120, 187, 271, 272, 305, 346, 347, 357], "pp": 120, "practic": [19, 229, 232], "practition": 357, "pre": [46, 47, 48, 49, 79, 83, 84], "preactbottleneck": [79, 83, 84], "preced": [120, 124, 253, 283], "preconfigur": [38, 39, 40, 41, 42, 43, 44, 45, 55, 56], "predefin": [4, 120, 126, 205], "predict": [116, 228, 229, 231, 232], "prefix": [123, 273], "prepar": [3, 271, 337, 339, 343, 347, 357], "prepend": 123, "preprint": 120, "preprocess": [3, 4, 144, 180, 282, 346, 347, 357], "present": [228, 229, 230, 232, 234, 235, 236, 238, 239, 240, 241, 247], "preserv": [120, 145, 147, 180, 215, 217, 295, 296, 299, 301, 302, 303, 304, 317, 325, 330], "preset": 4, "prevent": [1, 125, 126, 127, 128, 129, 148, 151, 204, 216, 218, 219, 220, 221, 228, 229, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 272], "previou": [120, 258, 267, 272], "previous": 261, "primari": [10, 274], "primarili": 129, "principl": 120, "print": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 154, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 270, 271, 272, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 349, 350, 351, 352, 353, 354, 355], "priorit": [67, 68, 188, 200], "prob": 275, "probabilist": 282, "probabl": [36, 52, 132, 138, 145, 146, 147, 148, 149, 150, 151, 157, 199, 207, 215, 216, 217, 218, 219, 220, 221, 228, 229, 232, 275, 351, 352, 354, 357], "problem": [19, 20, 22, 120, 134, 198, 202, 265], "proceed": 120, "process": [2, 3, 4, 17, 20, 22, 23, 25, 55, 76, 77, 78, 106, 117, 118, 120, 128, 140, 141, 142, 166, 180, 181, 182, 183, 187, 188, 205, 209, 211, 213, 224, 234, 235, 236, 238, 239, 240, 241, 246, 248, 249, 251, 258, 274, 336, 347, 348, 349, 350, 355, 357], "produc": [23, 118, 121, 168, 169, 170, 187, 211, 212, 213, 243, 244, 245, 280, 282], "product": [10, 20, 22, 201, 206, 208, 224, 241, 255, 286, 287, 291, 292], "program": [270, 282], "progress": [37, 260], "project": [20, 22], "projector": 19, "promin": [246, 248, 249, 250, 251], "promot": [129, 229, 232, 255], "propag": [13, 14, 16, 19, 20, 21, 22, 120, 123, 129, 154, 156, 179, 187, 247, 248, 266, 267, 275, 286, 287, 288, 292, 316, 318, 336, 337, 340, 344], "properli": [0, 128, 138, 207, 255], "properti": [11, 13, 16, 17, 132, 136, 145, 199, 205, 215, 260, 265], "proport": [5, 6, 7, 8, 330], "proportion": 355, "provid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 24, 26, 50, 51, 52, 54, 58, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 111, 116, 117, 119, 120, 123, 125, 126, 127, 128, 132, 156, 169, 170, 180, 228, 229, 230, 232, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 256, 257, 258, 259, 266, 268, 270, 272, 274, 280, 282, 283, 288, 295, 302, 316, 318, 329, 331, 339, 341, 343, 357], "pseudo": [16, 19], "purpos": [26, 277, 281, 295, 301, 303], "python": 274, "pytorch": 331, "q": [20, 120], "qr": 15, "quad": [19, 228, 229, 230, 231, 232, 249, 250, 251, 284, 285, 289, 290, 291, 294, 348], "quadrat": 230, "quoc": 120, "quotient": 285, "r": [20, 120, 351, 352, 353, 354], "r_t": 265, "radam": 269, "radix": [69, 70, 71, 72, 73, 74, 75, 76, 77], "rais": [0, 1, 2, 123, 255, 256, 293], "rand": [276, 282], "randint": [276, 282], "randn": [23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 90, 91, 92, 93, 94, 95, 102, 103, 104, 105, 107, 108, 109, 110, 111, 116, 118, 184, 185, 186, 187, 188, 255, 276, 280, 282], "random": [1, 2, 3, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 90, 91, 92, 93, 94, 95, 102, 103, 104, 105, 107, 108, 109, 110, 116, 184, 185, 186, 187, 188, 217, 350, 351, 352, 353, 354, 357], "random_integ": 282, "random_tensor": 282, "randomcrop": [356, 357], "randomgrayscal": [356, 357], "randomhorizontalflip": [356, 357], "randomli": [1, 145, 147, 148, 149, 150, 151, 180, 215, 218, 219, 220, 221, 350, 351, 352, 353, 354, 357], "randomnoisedataset": [0, 1, 2], "randomrot": [356, 357], "randomverticalflip": 356, "rang": [0, 1, 11, 28, 78, 86, 120, 128, 137, 139, 140, 141, 147, 158, 162, 197, 204, 206, 209, 217, 258, 266, 268, 275, 278, 300, 307, 308, 310, 349, 353, 357], "rank": 19, "rasul": 7, "rate": [25, 36, 37, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "rather": [7, 127, 128, 262, 340], "ratio": [36, 96, 187, 188, 355], "ravel": 335, "raw": [138, 207, 229, 274], "re": [124, 272], "readabl": [125, 126, 127, 129, 255, 274], "readi": [3, 10, 102, 103, 104, 105, 110, 120], "real": [19, 22, 63, 206], "rearrang": 144, "reassembl": 120, "recalibr": [97, 99, 100, 102, 103, 104, 105, 120, 187], "receiv": [249, 250, 251, 337], "recent": 266, "recept": [106, 110, 120, 188], "reciproc": [19, 305, 315, 323], "recognit": [61, 76, 77, 120, 212], "rectangular": 299, "rectif": 265, "rectifi": [134, 135, 202, 203, 265], "recurr": [126, 241], "recurs": [121, 123], "red": 351, "reduc": [23, 62, 78, 89, 106, 111, 118, 120, 184, 185, 186, 187, 234, 235, 236, 238, 239, 240, 246, 247, 248, 249, 250, 251, 264, 267, 272, 274, 316, 317, 318, 325, 330, 351], "reduct": [22, 36, 96, 157, 158, 159, 161, 162, 187, 188, 228, 229, 230, 231, 232, 316, 318], "reevalu": 256, "refer": [4, 10, 123, 282, 296, 299, 332], "reflect": 270, "regardless": [19, 338], "region": [142, 146, 168, 169, 170, 179, 200, 216, 244, 245, 337, 348, 357], "regist": [87, 88, 90, 91, 92, 93, 94, 95, 117, 122, 123, 124, 128, 255, 273], "register_buff": 122, "register_model": [24, 26, 27, 28, 29, 30, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 59, 60, 61, 65, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 107, 108, 109, 112, 113, 114, 115, 117, 119], "register_paramet": 123, "registr": [123, 255], "registri": [90, 91, 92, 93, 94, 95, 273], "registry_path": 273, "regress": [4, 161, 230, 231], "regular": [19, 23, 25, 36, 37, 52, 118, 147, 151, 216, 218, 219, 220, 221, 258, 259, 260, 263, 264, 265, 266, 268], "reimagin": 120, "relat": [272, 299, 301], "relationship": 355, "relev": [179, 258, 266, 268], "reli": [146, 272], "reliabl": [5, 6, 7, 8], "reliant": [218, 219, 220, 221], "relu": [10, 23, 96, 111, 118, 120, 121, 125, 126, 127, 129, 131, 133, 134, 153, 181, 182, 183, 187, 188, 192, 193, 196, 197, 198, 202, 204, 208, 210, 211, 212, 213, 223, 224, 225, 226], "relu1": 129, "relu2": 129, "relu3": 129, "relu6": [210, 223], "remain": [5, 6, 7, 8, 122, 147, 167, 215, 217, 218, 219, 220, 221, 267], "rememb": 282, "remov": [273, 341], "rep": 343, "repeat": [335, 336, 343], "repetit": [339, 343], "replac": [7, 282, 351], "repres": [7, 16, 18, 22, 58, 70, 71, 72, 73, 74, 75, 123, 124, 129, 154, 156, 163, 166, 167, 211, 212, 213, 224, 226, 229, 232, 241, 256, 257, 258, 264, 265, 266, 267, 268, 274, 275, 284, 285, 291, 294, 296, 317, 328, 329, 330, 336, 348, 350, 352, 353, 354, 355], "represent": [69, 76, 77, 87, 88, 90, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 110, 120, 187, 247, 250, 256], "reproduc": [275, 277, 278, 279, 280, 281, 282, 357], "requir": [2, 3, 4, 10, 27, 64, 70, 71, 72, 73, 74, 75, 90, 91, 92, 93, 94, 95, 106, 122, 125, 129, 131, 132, 134, 135, 136, 137, 139, 154, 156, 179, 187, 188, 197, 225, 229, 232, 255, 270, 272, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 299, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 326, 327, 332, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 348, 355], "requires_grad": [122, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 144, 154, 156, 179, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 212, 213, 215, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 246, 247, 248, 249, 250, 251, 253, 255, 275, 277, 278, 279, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347], "rescal": [157, 158, 162, 228, 229, 232], "research": 255, "reset": [124, 280, 283], "reshap": [10, 96, 156, 212, 213, 253, 271, 274, 335, 338], "residu": [53, 54, 55, 56, 63, 64, 66, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 97, 98, 99, 100, 101, 120], "residualblock": 78, "resili": 267, "resiz": [179, 346, 356, 357], "resnest": [57, 70, 71, 72, 73, 74, 75, 76, 77, 120], "resnest_101": 120, "resnest_14": 120, "resnest_200": 120, "resnest_26": 120, "resnest_269": 120, "resnest_50": 120, "resnest_50_1s4x24d": 120, "resnest_50_4s2x40d": 120, "resnet": [54, 55, 56, 57, 69, 70, 71, 72, 73, 74, 75, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 97, 98, 99, 100, 101, 106, 107, 108, 109, 120, 187], "resnet_1001": 120, "resnet_101": 120, "resnet_152": 120, "resnet_18": 120, "resnet_200": 120, "resnet_269": 120, "resnet_34": 120, "resnet_50": 120, "resnet_arg": 106, "resnext": [57, 90, 91, 92, 93, 94, 95, 102, 103, 104, 105, 110, 120], "resnext_101_32x16d": 120, "resnext_101_32x32d": 120, "resnext_101_32x4d": 120, "resnext_101_32x8d": 120, "resnext_101_64x4d": 120, "resnext_50_32x4d": 120, "resolut": [36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 102, 103, 104, 105, 110, 120], "resourc": [29, 64, 67, 68, 120, 272], "respect": [12, 13, 14, 16, 17, 18, 19, 20, 22, 58, 111, 122, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 154, 156, 179, 188, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 212, 213, 215, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 246, 247, 248, 249, 250, 251, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 310, 314, 315, 316, 317, 318, 321, 323, 325, 328, 329, 330, 336, 337, 339, 343, 351], "respons": [102, 103, 104, 105, 120, 125, 164, 237, 257], "restor": [187, 272], "restructur": 340, "result": [12, 16, 17, 19, 120, 123, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 154, 156, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 188, 200, 204, 207, 217, 255, 256, 270, 272, 275, 277, 278, 279, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 318, 319, 320, 321, 322, 323, 324, 326, 327, 328, 331, 332, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347, 350, 351, 357], "resum": 257, "retain": [124, 146, 216, 283, 295, 303, 316, 317, 318, 325, 330, 347], "retent": 347, "rethink": 120, "retriev": [0, 2, 125, 127, 128], "return": [0, 1, 2, 3, 5, 6, 7, 8, 10, 54, 58, 96, 122, 123, 125, 126, 127, 128, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 212, 213, 215, 217, 218, 219, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 241, 246, 247, 248, 249, 250, 251, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 273, 274, 346, 357], "reus": [120, 347], "reusabl": [129, 217, 255, 346], "revers": [10, 129, 329, 352, 354], "revert": 272, "revolution": 120, "rgb": [5, 6, 51, 52, 53, 55, 56], "rho": 259, "rho_": 265, "rho_t": 265, "right": [17, 18, 19, 21, 22, 132, 138, 199, 207, 228, 229, 230, 232, 234, 235, 236, 238, 239, 240, 241, 249, 250, 251, 348], "risk": 274, "rmsprop": 269, "rob": 120, "robust": [26, 146, 180, 215, 218, 219, 220, 221, 230, 255, 259, 350, 351, 353, 357], "roland": 7, "role": [274, 282, 357], "root": [4, 5, 6, 7, 8, 260, 266, 323], "rotat": [153, 178, 353, 357], "rotated_imag": 180, "rout": [249, 250, 251], "routin": 10, "row": [13, 14, 16, 21, 156, 299, 336, 345], "rprop": 269, "rule": [16, 17, 271, 284, 285, 289, 290, 291, 293, 294], "run": [10, 122, 163, 166, 181, 182, 183, 234, 235, 236, 238, 239, 240, 259, 272, 280, 282], "running_mean": [122, 163, 166, 234, 235, 236, 238, 239, 240], "running_var": [163, 166, 234, 235, 236, 238, 239, 240], "runtim": [37, 126, 129, 217, 255, 300], "s_": 267, "s_d": [248, 251], "s_h": [247, 248, 251], "s_w": [247, 248, 251], "sain": 120, "same": [13, 14, 16, 17, 21, 138, 145, 146, 147, 148, 149, 150, 151, 163, 164, 166, 167, 169, 170, 180, 181, 182, 183, 184, 185, 186, 188, 204, 211, 212, 213, 215, 218, 219, 220, 221, 225, 234, 235, 236, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 267, 275, 280, 282, 288, 298, 302, 304, 314, 316, 317, 318, 332, 334, 338, 340, 341, 342, 345, 349], "sampl": [0, 1, 2, 3, 5, 6, 7, 8, 10, 46, 47, 48, 49, 51, 52, 53, 55, 56, 58, 59, 60, 61, 65, 66, 69, 70, 71, 72, 73, 74, 75, 76, 77, 102, 103, 104, 105, 110, 168, 169, 170, 192, 193, 194, 195, 196, 197, 215, 218, 219, 220, 221, 224, 226, 229, 232, 241, 243, 244, 245, 275, 279, 282, 300, 348, 350, 352, 353, 354, 355], "sandler": 120, "satisfi": [12, 14, 21], "satur": [198, 357], "save": [2, 122, 124, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 272, 273], "scalabl": [3, 36, 90, 91, 92, 93, 94, 95, 116, 120, 255], "scalar": [13, 18, 157, 158, 159, 161, 162, 274, 275], "scale": [14, 19, 25, 30, 31, 36, 37, 55, 59, 60, 61, 62, 65, 69, 76, 77, 79, 80, 81, 84, 97, 98, 106, 107, 108, 109, 120, 131, 136, 138, 147, 163, 164, 166, 167, 187, 188, 196, 197, 198, 200, 202, 205, 206, 207, 209, 215, 217, 218, 219, 220, 221, 229, 234, 235, 236, 237, 238, 239, 240, 241, 253, 258, 260, 261, 262, 274, 282, 330, 355], "scale_by_keep": [147, 217], "scale_factor": 253, "scenario": [29, 127, 128, 241, 262, 263, 347, 351], "schedul": [216, 258], "scientif": 271, "score": [78, 89, 106, 138, 229], "scratch": 10, "script": 282, "se": [36, 97, 98, 99, 100, 101, 102, 103, 104, 105, 120], "se_resnet_101": 120, "se_resnet_152": 120, "se_resnet_18": 120, "se_resnet_34": 120, "se_resnet_50": 120, "se_resnext_101_32x4d": 120, "se_resnext_101_32x8d": 120, "se_resnext_101_64x4d": 120, "se_resnext_50_32x4d": 120, "se_scal": 36, "seamless": [0, 1, 3, 4, 255, 282], "seamlessli": [3, 4, 11, 124, 126, 129, 255, 274, 357], "search": 120, "second": [14, 126, 127, 154, 187, 224, 261, 262, 263, 264, 265, 271, 284, 286, 287, 288, 289, 290, 291, 292, 293, 294, 334, 336, 354], "section": 288, "see": [10, 288], "seed": [275, 276, 277, 278, 279, 281, 282, 357], "seen": 259, "select": [106, 107, 108, 109, 110, 120, 179, 187, 188, 249, 251, 325], "selectivekernel": 189, "self": [0, 1, 2, 3, 10, 23, 36, 37, 50, 54, 58, 62, 63, 64, 69, 96, 111, 118, 121, 122, 123, 124, 125, 126, 127, 128, 136, 147, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 224, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 273, 336, 346, 347], "selu": [133, 145, 153, 210, 215, 223], "selunetwork": 205, "semodul": 189, "senet": [57, 97, 98, 99, 100, 101, 102, 103, 104, 105, 120], "sensit": [159, 230, 234, 235, 236], "sentiment": 4, "separ": [0, 62, 76, 77, 116, 120, 140, 141, 142, 184, 185, 186, 238, 239, 240], "sequenc": [17, 78, 89, 106, 125, 127, 140, 295, 300, 332, 334, 337, 339, 342, 343, 345, 346], "sequenti": [23, 54, 58, 96, 111, 116, 118, 121, 125, 126, 130, 140, 181, 182, 183, 225, 346, 357], "seri": [50, 59, 60, 106, 140, 181, 211, 246, 249], "serial": [122, 123, 257], "serv": [3, 7, 31, 54, 96, 111, 123, 125, 126, 127, 128, 129, 255, 267, 347], "set": [3, 4, 5, 6, 7, 8, 76, 77, 87, 88, 102, 103, 104, 105, 110, 121, 124, 128, 140, 141, 142, 202, 203, 205, 211, 212, 213, 215, 220, 221, 224, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 256, 261, 262, 266, 275, 277, 278, 279, 280, 281, 282, 283, 295, 297, 298, 303, 304, 310, 316, 318, 331, 347, 351, 357], "setup": [4, 10, 90, 91, 92, 93, 94, 95], "sever": [19, 211, 212, 213, 246, 247, 248, 249, 250, 251, 272, 346, 357], "sgd": [10, 258, 265, 269], "sgn": 18, "shape": [3, 4, 5, 6, 7, 8, 10, 13, 14, 16, 17, 19, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 54, 58, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 90, 91, 92, 93, 94, 95, 96, 102, 103, 104, 105, 107, 108, 109, 110, 111, 116, 118, 120, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 154, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 187, 188, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 255, 271, 274, 275, 277, 278, 279, 281, 282, 283, 286, 297, 298, 299, 301, 302, 303, 304, 310, 315, 316, 317, 318, 321, 323, 325, 329, 330, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 345, 348, 349, 350, 351, 352, 353, 354, 355, 357], "shapelik": 278, "share": 120, "shen": 187, "shift": [163, 164, 166, 167, 200, 234, 235, 236, 237, 238, 239, 240, 241], "shorthand": 288, "should": [58, 122, 272, 275, 277, 278, 279, 281, 297, 298, 307, 308, 328, 337, 346], "show": [270, 273], "showcas": 10, "shown": [208, 280], "shrink": 259, "shuffl": [1, 2, 3], "side": [21, 126, 129, 140, 141, 142, 171, 172, 173, 175, 176, 177, 181, 182, 183, 211, 212, 213, 246, 247, 248, 249, 250, 251, 272], "sigma": [19, 187, 192, 194, 196, 206, 208, 234, 235, 236, 238, 239, 240, 241, 329], "sigma_c": 349, "sigma_i": 19, "sigmoid": [133, 153, 187, 192, 193, 196, 197, 200, 201, 208, 210, 223, 228], "sigmoidnetwork": 206, "sign": [17, 230, 267, 305], "signal": [181, 211, 212, 213, 234, 238, 246, 247, 248, 249, 250, 251], "signific": [27, 272], "significantli": [63, 89, 120, 187, 346], "sim": [215, 218, 219, 220, 221], "similar": [10, 192, 193, 288, 315, 331, 337], "similarli": [22, 328], "simonyan": 120, "simpl": [3, 4, 10, 121, 129, 140, 141, 142, 154, 156, 171, 172, 173, 175, 176, 177, 199, 200, 201, 203, 204, 205, 206, 208, 209, 211, 212, 213, 215, 218, 219, 220, 221, 224, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 246, 247, 248, 249, 250, 251, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 286, 287, 292, 346], "simplebinaryclassificationmodel": 228, "simpleblock": 147, "simpleclassificationmodel": [229, 232], "simplegelumodel": 199, "simplehardsigmoidmodel": 200, "simplehardswishmodel": 201, "simpleleakyrelumodel": 202, "simplemodel": [10, 121, 204, 217, 226, 273], "simpleregressionmodel": 231, "simplerelumodel": 203, "simpleselumodel": 205, "simplesigmoidmodel": 206, "simpleswishmodel": 208, "simpletanhmodel": 209, "simpli": [270, 328, 329, 340], "simplic": [120, 200, 203], "simplifi": [4, 46, 47, 48, 49, 59, 117, 120, 129, 181, 182, 183], "simul": [121, 357], "simultan": 180, "sin": [305, 311], "sinc": [17, 20, 125, 126, 127, 128, 140, 141, 142, 197, 270, 272, 275, 279, 336, 357], "sine": [308, 321, 322], "singl": [0, 4, 17, 20, 22, 78, 138, 181, 182, 183, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 212, 213, 229, 241, 247, 248, 249, 250, 251, 256, 274, 281, 297, 300, 332, 341, 349, 351, 357], "singleton": 241, "singular": [13, 16, 17, 19, 21, 22], "sinh": [305, 312, 327], "size": [0, 1, 2, 3, 22, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 47, 58, 59, 60, 61, 65, 67, 68, 78, 106, 118, 120, 121, 124, 126, 140, 141, 142, 144, 146, 149, 150, 151, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 211, 212, 213, 216, 224, 226, 228, 229, 232, 234, 235, 236, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 273, 278, 281, 282, 283, 316, 317, 318, 325, 330, 332, 334, 341, 344, 345, 348, 350, 355, 357], "sk": [106, 107, 108, 109, 110, 120, 188], "sk_resnet_18": 120, "sk_resnet_34": 120, "sk_resnet_50": 120, "sk_resnext_50_32x4d": 120, "skblock": 106, "skip": [120, 272], "sknet": [57, 107, 108, 109, 110, 120], "slice": [154, 328], "slide": [144, 246, 248, 249, 251], "slight": 187, "slightli": 357, "slope": [134, 198, 202], "slow": [3, 265], "small": [19, 28, 46, 47, 48, 49, 59, 60, 61, 64, 67, 68, 120, 134, 146, 157, 158, 163, 164, 166, 167, 202, 205, 216, 228, 229, 230, 234, 235, 236, 237, 238, 239, 240, 241, 247, 250, 259, 260, 261, 262, 263, 264, 265, 266, 267], "smaller": [29, 46, 47, 48, 49, 118, 120, 126, 129, 255, 260, 261, 290, 348, 350, 355], "smallest": 318, "smooth": [52, 132, 198, 199, 208, 258, 266, 357], "smoother": 258, "so": [125, 126, 127, 128, 180, 255, 265, 297, 298, 346], "softmax": [133, 153, 188, 210, 223, 229], "softmaxmodel": 207, "solut": [19, 21], "solv": [11, 12, 15, 19, 20, 22], "solver": 11, "some": [131, 147, 148, 180, 215, 217, 218, 219, 234, 235, 236, 238, 239, 240, 260, 261, 262, 272, 274], "sometim": 271, "sophist": [126, 129], "sourc": 282, "space": [14, 20, 22, 140, 141, 142, 144, 168, 169, 170, 181, 182, 183, 184, 185, 186, 211, 212, 213, 243, 244, 245, 295, 300, 357], "span": 4, "spars": [260, 261], "spatial": [23, 78, 89, 106, 111, 118, 120, 146, 164, 182, 187, 212, 213, 234, 235, 236, 238, 239, 240, 241, 247, 248, 249, 250, 251, 253, 336], "spatial_dim": 187, "spatio": 213, "special": [0, 1, 10, 19, 122, 123, 124, 215, 282], "specif": [4, 10, 32, 33, 34, 35, 46, 47, 48, 49, 54, 62, 76, 77, 87, 88, 125, 126, 127, 128, 129, 188, 197, 215, 218, 219, 220, 221, 238, 239, 240, 255, 256, 270, 282, 297, 316, 318, 339, 343], "specifi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 18, 24, 31, 37, 58, 65, 66, 69, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 106, 108, 109, 111, 112, 113, 114, 115, 117, 119, 121, 126, 138, 144, 151, 157, 158, 159, 161, 162, 167, 168, 169, 170, 179, 180, 187, 207, 211, 212, 213, 228, 229, 230, 231, 232, 241, 243, 244, 245, 247, 248, 249, 250, 251, 253, 256, 274, 277, 278, 279, 280, 281, 293, 295, 296, 297, 298, 299, 300, 301, 303, 304, 310, 316, 317, 318, 325, 329, 330, 331, 332, 334, 337, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 353, 355, 357], "speech": 238, "speed": [67, 68, 200, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268], "split": [4, 69, 76, 77, 120, 332, 334, 345], "springer": 120, "sqrt": [132, 164, 192, 193, 196, 197, 199, 234, 235, 236, 237, 238, 239, 240, 241, 259, 260, 261, 262, 264, 265, 266, 305, 307, 308], "squar": [1, 3, 12, 13, 14, 16, 17, 19, 20, 21, 22, 146, 159, 161, 216, 230, 231, 259, 260, 261, 266, 305, 323], "squaredataset": [0, 1, 2, 3], "squeez": [36, 64, 67, 68, 96, 99, 102, 103, 104, 105, 120, 187, 335], "stabil": [16, 19, 120, 146, 157, 158, 163, 164, 166, 167, 181, 182, 183, 204, 216, 228, 229, 234, 235, 236, 237, 238, 239, 240, 241, 258, 259, 260, 261, 262, 263, 264, 265, 266, 349], "stabl": [192, 193, 196, 197, 215, 229, 258, 262, 263, 266, 267, 268], "stack": [129, 188, 334, 335, 345, 357], "stage": [25, 69, 70, 71, 72, 73, 74, 75, 78, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 106, 107, 108, 109, 120], "stage1": 96, "stage2": 96, "stage3": 96, "stage4": 96, "standalon": 204, "standard": [26, 78, 87, 88, 132, 134, 184, 185, 186, 192, 194, 196, 198, 199, 202, 215, 267, 279, 282, 288, 346, 349, 357], "start": [1, 3, 258, 260, 267, 295, 300, 348, 350], "state": [120, 122, 123, 124, 126, 129, 256, 270, 272, 280], "state_dict": [123, 124, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "static": 129, "statist": [19, 145, 163, 166], "std": [5, 6, 7, 8, 194, 346, 349, 357], "stem": [54, 69, 78, 89, 106, 120], "stem_typ": 78, "stem_width": [69, 70, 71, 72, 73, 74, 75, 78], "step": [124, 144, 188, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 272, 295, 346, 347], "step_siz": 267, "still": 259, "stochast": [10, 25, 36, 37, 147, 217, 258, 268], "stochastic_depth": 36, "stop": [295, 300], "storag": [125, 127, 283], "store": [2, 4, 5, 6, 7, 8, 78, 89, 106, 122, 123, 124, 125, 126, 127, 128, 187, 243, 244, 245, 272, 283, 348, 349, 350, 351, 352, 353, 354, 355], "str": [5, 6, 7, 8, 78, 111, 123, 125, 127, 129, 157, 158, 159, 161, 162, 179, 253, 256, 273, 336], "straightforward": [268, 270, 284], "strategi": 257, "streamlin": [2, 3, 120], "strength": 216, "strict": [123, 256], "stride": [37, 58, 59, 60, 61, 64, 67, 68, 126, 129, 140, 141, 142, 144, 168, 169, 170, 171, 172, 173, 175, 176, 177, 181, 182, 183, 184, 185, 186, 188, 211, 212, 213, 243, 244, 245, 246, 247, 248, 249, 250, 251], "stride_height": 144, "stride_width": 144, "string": [123, 125, 127, 129, 211, 212, 213, 256], "structur": [0, 10, 20, 37, 64, 116, 122, 123, 126, 146, 216, 255, 256, 273, 274, 299, 347], "style": [54, 166, 238, 239, 336], "sub": [125, 126, 127, 128, 129, 255, 305, 348, 350], "sub_tensor": 283, "subclass": [1, 2, 3, 10, 123, 124, 125, 255, 256], "sublay": 121, "submodul": [121, 123, 255], "subsequ": [126, 129, 197, 282], "subset": [76, 77, 218, 219], "subtract": [10, 294, 349], "suffer": 260, "suit": [32, 33, 34, 35, 52, 62, 106, 192, 193, 196, 197], "suitabl": [26, 28, 29, 38, 39, 40, 41, 42, 43, 44, 45, 54, 59, 60, 61, 63, 67, 68, 78, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 98, 99, 101, 120, 230, 260, 261, 277], "sum": [18, 125, 126, 127, 128, 129, 138, 157, 158, 159, 161, 162, 188, 207, 228, 229, 230, 231, 232, 260, 284, 287, 292, 305, 328, 330, 332, 334, 336, 339, 343, 345], "sum_": [17, 138, 164, 207, 228, 229, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 246, 247, 248, 286, 287, 317, 325, 328, 330, 336, 339], "sum_i": [18, 292], "sum_j": 292, "sum_k": 288, "summar": [36, 87, 88, 116, 246, 247, 248], "summari": [87, 88, 102, 103, 104, 105, 110], "summat": 17, "sun": 187, "super": [10, 121, 122, 123, 124, 125, 126, 127, 128, 147, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 217, 218, 219, 224, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 241, 246, 247, 248, 249, 250, 251, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 273], "superior": 30, "support": [1, 3, 4, 10, 11, 17, 18, 19, 20, 22, 65, 78, 125, 126, 127, 128, 129, 179, 180, 253, 255, 257, 264, 282, 283, 284, 285, 288, 289, 290, 291, 293, 294, 296, 299, 310, 315, 317, 321, 323, 325, 328, 329, 330, 332, 336, 340, 347, 357], "suppos": 357, "sure": [255, 357], "svd": [15, 19], "swish": [67, 68, 210, 223], "symmetr": [12, 168, 169, 170, 196, 197, 209], "syntax": [1, 288], "system": [11, 12, 19, 20, 21, 120, 270, 336], "systemat": [120, 357], "szegedi": [51, 120], "t": [19, 120, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 272, 283, 288, 331, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357], "t0": 258, "t1": 331, "t2": 331, "tabl": 36, "tabular": 4, "tailor": [4, 64, 70, 71, 72, 73, 74, 75, 255, 357], "take": [20, 246, 247, 248, 249, 250, 251, 253, 272, 346], "taken": 328, "tan": [120, 305], "tangent": [139, 209, 309, 326, 327], "tanh": [58, 126, 129, 132, 133, 153, 192, 193, 196, 197, 199, 210, 223, 305], "tanhnetwork": 209, "target": [5, 6, 7, 8, 129, 157, 158, 159, 161, 162, 168, 169, 170, 179, 228, 229, 230, 231, 232, 243, 244, 245, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 348, 350, 355], "target_tensor": [228, 229, 230, 231, 232], "target_transform": [5, 6, 7, 8], "task": [4, 10, 11, 23, 24, 25, 26, 27, 30, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 59, 60, 61, 62, 63, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 110, 116, 120, 137, 138, 141, 154, 157, 158, 161, 162, 187, 188, 206, 207, 211, 212, 213, 228, 229, 230, 231, 232, 238, 239, 240, 246, 248, 249, 251, 261, 271, 282, 299, 300, 357], "techniqu": [12, 16, 25, 37, 118, 147, 163, 215, 216, 218, 219, 220, 221, 238, 239, 240, 257, 355, 357], "tempor": [211, 213, 248, 251], "temporarili": 272, "tensor": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 46, 47, 48, 49, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 64, 65, 66, 67, 68, 78, 90, 91, 92, 93, 94, 95, 96, 107, 108, 109, 111, 116, 118, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 154, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 270, 272, 274, 275, 277, 278, 279, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357], "term": [19, 154, 181, 182, 183, 184, 185, 186, 258, 262, 264, 265, 266, 268], "test": [4, 5, 6, 7, 8, 300], "test_backward": 121, "test_siz": [5, 6, 7, 8], "text": [4, 13, 17, 18, 78, 89, 106, 107, 108, 109, 116, 125, 131, 134, 135, 136, 138, 140, 141, 142, 147, 168, 169, 170, 171, 172, 173, 175, 176, 177, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 196, 197, 198, 200, 201, 202, 203, 204, 205, 207, 208, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 228, 229, 230, 231, 232, 246, 247, 248, 249, 250, 251, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 278, 284, 285, 287, 289, 290, 291, 293, 294, 306, 310, 316, 317, 318, 320, 325, 330, 332, 334, 337, 338, 339, 340, 341, 343, 344, 345, 348, 349, 350, 352, 353, 354], "th": [154, 228, 229, 231, 232, 238, 239, 240, 289, 290, 293], "than": [0, 1, 7, 127, 128, 131, 134, 159, 184, 185, 186, 198, 202, 208, 230, 256, 262, 300, 310, 328, 337, 342, 348, 350, 355], "thei": [0, 10, 22, 120, 122, 126, 128, 129, 274, 336, 340, 348, 350, 357], "them": [3, 120, 123, 128, 144, 258, 271, 332, 342, 346, 349, 357], "therebi": [215, 247, 248, 250, 251], "theta": [258, 259, 353], "theta_": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "theta_t": [265, 266], "thi": [0, 1, 2, 3, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 51, 52, 53, 54, 55, 56, 58, 62, 63, 64, 66, 67, 68, 78, 87, 88, 89, 90, 91, 92, 93, 94, 95, 102, 103, 104, 105, 106, 107, 108, 109, 110, 116, 120, 121, 122, 124, 126, 127, 128, 129, 135, 137, 138, 139, 140, 141, 142, 144, 146, 147, 154, 156, 168, 179, 180, 184, 185, 186, 187, 188, 192, 193, 196, 197, 198, 199, 200, 202, 203, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 232, 234, 235, 236, 238, 239, 240, 241, 243, 246, 247, 248, 249, 250, 251, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 278, 279, 280, 282, 283, 287, 288, 292, 295, 297, 301, 302, 303, 304, 310, 314, 315, 316, 317, 318, 321, 323, 325, 328, 329, 330, 331, 337, 339, 340, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357], "thing": 272, "those": [10, 59, 60, 61, 128, 197], "three": [22, 61, 142, 170, 173, 177, 181, 182, 183, 213, 221, 236, 240, 245, 248, 251], "threshold": [19, 159, 230], "through": [0, 3, 4, 10, 14, 19, 20, 22, 23, 25, 50, 54, 58, 79, 80, 81, 82, 83, 84, 85, 86, 89, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 107, 108, 109, 117, 118, 125, 126, 129, 146, 154, 156, 179, 187, 188, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 211, 212, 213, 215, 218, 219, 220, 221, 224, 225, 226, 234, 235, 236, 238, 241, 246, 247, 248, 249, 250, 251, 275, 279, 286, 287, 292, 336, 338, 340, 341, 344, 357], "throughout": [136, 347], "tile": 335, "time": [0, 3, 17, 59, 60, 61, 63, 140, 181, 202, 205, 211, 246, 247, 248, 249, 250, 251, 258, 259, 260, 261, 262, 266, 268, 272, 339, 343], "tini": [28, 29, 120], "to_tensor": [5, 6, 7, 8], "togeth": [129, 346, 357], "too": 267, "tool": [3, 10, 255, 271, 282, 346, 357], "top": [12, 13, 14, 20, 22, 154, 156, 179, 211, 212, 213, 224, 226, 348, 350], "torch": [111, 331], "toronto": [5, 6], "total": [0, 1, 2, 5, 6, 7, 8, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 59, 60, 61, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 124, 283, 340], "totensor": [346, 357], "trace": [11, 305], "track": [10, 181, 182, 183, 234, 235, 236, 238, 239, 240, 255, 270, 272, 275, 277, 278, 279, 281, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 331, 347], "track_running_stat": [181, 182, 183, 234, 235, 236, 238, 239, 240], "trade": 28, "tradit": [7, 120, 259, 260, 263, 264, 265], "trail": 167, "train": [1, 2, 3, 4, 5, 6, 7, 8, 10, 25, 37, 50, 51, 52, 102, 103, 104, 105, 110, 120, 121, 122, 123, 126, 128, 129, 138, 145, 146, 147, 148, 149, 150, 151, 163, 166, 180, 199, 202, 205, 206, 207, 209, 215, 216, 217, 218, 219, 220, 221, 234, 235, 236, 238, 239, 240, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 272, 346, 349, 350, 351, 352, 353, 354, 357], "trainabl": [121, 234, 235, 236, 238, 239, 240, 255], "transact": 187, "transfer": [166, 238, 239], "transform": [2, 4, 5, 6, 7, 8, 10, 14, 25, 120, 127, 154, 156, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 271, 336], "transform_pipelin": [346, 357], "transformed_imag": [346, 357], "transit": [31, 230], "translat": [247, 250], "transpos": [10, 12, 305], "treat": [0, 122, 241, 255], "triangular": [12, 20], "true": [1, 2, 3, 4, 5, 6, 7, 8, 22, 50, 51, 52, 67, 68, 69, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 144, 145, 147, 148, 149, 150, 151, 154, 156, 163, 166, 179, 181, 182, 183, 184, 185, 186, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 212, 213, 215, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 246, 247, 248, 249, 250, 251, 253, 255, 256, 261, 262, 266, 270, 275, 277, 278, 279, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 334, 337, 338, 339, 340, 341, 342, 343, 344, 345, 347], "truncat": 121, "truncate_from": 121, "try": 0, "tune": 357, "tupl": [2, 3, 5, 6, 7, 8, 14, 18, 20, 22, 31, 78, 121, 123, 124, 140, 141, 142, 144, 167, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 211, 212, 213, 225, 241, 244, 245, 246, 247, 248, 249, 250, 251, 253, 261, 262, 263, 264, 265, 267, 274, 277, 278, 279, 281, 283, 297, 301, 303, 316, 317, 318, 325, 330, 332, 334, 336, 337, 340, 341, 342, 344, 345, 348, 349, 350, 355], "twice": 337, "two": [10, 13, 14, 16, 17, 19, 20, 22, 59, 60, 61, 64, 76, 77, 107, 111, 140, 141, 142, 154, 172, 176, 187, 188, 212, 220, 224, 235, 239, 247, 250, 261, 262, 263, 264, 265, 267, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 328, 336], "type": [58, 69, 78, 96, 106, 122, 123, 124, 154, 224, 283, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 331, 336, 347], "typeerror": [0, 1, 2, 123, 256], "typic": [11, 78, 89, 106, 122, 138, 145, 146, 180, 187, 204, 205, 207, 216, 217, 232, 234, 235, 236, 238, 239, 240, 257, 258, 266, 268, 272, 274, 344, 347, 349, 353, 355, 357], "u": [19, 22, 193, 195, 197], "u_": 263, "ultra": 84, "unchang": [122, 151, 198, 202, 203, 205, 215, 218, 219, 220, 221, 225, 338, 341], "undefin": 293, "under": [90, 91, 92, 93, 94, 95, 255], "underbrac": 17, "underdetermin": 19, "undergo": [147, 357], "underli": [0, 10, 46, 47, 48, 49, 51, 52, 53, 55, 56, 331, 334, 338, 340, 345], "understand": [10, 118, 120, 121, 129, 357], "unexpect": [123, 126, 129, 282], "unfold": [143, 153], "unifi": 0, "uniform": [191, 193, 197, 211, 212, 213, 224, 226, 276, 277, 278, 282, 351, 352, 353, 354], "uniformli": [277, 281], "uniniti": [297, 298], "unintend": 272, "union": 111, "uniqu": [12, 19, 21, 125, 127], "unit": [23, 58, 118, 131, 132, 134, 135, 136, 192, 193, 196, 197, 198, 199, 202, 203, 205, 215], "unless": [79, 80, 81, 82, 83, 84, 85, 86, 97, 98, 99, 100, 101, 283], "unlik": [122, 125, 126, 127, 128, 134, 198, 202, 215, 241, 259, 260, 262, 263, 264, 265, 267], "unnecessari": 272, "unpad": 337, "unseen": 357, "unsqueez": 335, "unstabl": 16, "up": [256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 353, 355], "updat": [4, 122, 128, 129, 215, 218, 219, 220, 221, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 272], "upon": [52, 64, 120, 125, 126, 127, 128], "upper": [20, 195, 267, 281], "upsampl": [223, 254], "us": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 17, 19, 20, 22, 25, 31, 36, 37, 50, 51, 52, 53, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 96, 97, 98, 99, 100, 101, 106, 107, 108, 109, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 154, 156, 161, 163, 164, 166, 169, 170, 179, 180, 181, 182, 183, 187, 188, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 256, 257, 270, 271, 272, 273, 275, 277, 278, 279, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 314, 316, 317, 318, 325, 330, 336, 337, 339, 341, 343, 344, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357], "usag": [3, 11, 26, 27, 28, 29, 30, 31, 116, 126, 129, 147, 184, 185, 186, 216, 256, 257, 300, 348, 349, 350, 351, 352, 353, 354, 355], "use_aux": [50, 51, 52], "use_h": [67, 68], "use_s": [67, 68], "user": [1, 2, 3, 4, 10, 125, 126, 127, 128, 255, 260, 346, 347, 357], "usual": 229, "util": [3, 10, 11, 107, 108, 109, 127, 128, 146, 255, 282], "v": [14, 19, 22, 120, 261, 262, 264, 265, 296], "v1": [50, 51, 54, 55, 56, 62, 63, 120], "v2": [37, 46, 47, 48, 49, 54, 56, 57, 63, 64, 66, 120], "v3": [50, 52, 53, 57, 64, 67, 68, 120], "v4": [50, 53, 120], "v_": [258, 261, 262, 264, 265, 266, 268], "v_stack": 345, "v_t": [265, 266], "val": 190, "valid": [181, 182, 183, 184, 185, 186, 188, 211, 212, 213, 329], "valu": [10, 13, 17, 18, 19, 22, 25, 62, 87, 88, 121, 123, 125, 127, 129, 131, 134, 137, 138, 139, 140, 141, 142, 144, 146, 147, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 179, 180, 181, 182, 183, 187, 190, 192, 193, 194, 195, 196, 197, 198, 202, 203, 204, 205, 206, 209, 215, 216, 217, 218, 219, 220, 221, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 246, 247, 248, 249, 250, 251, 253, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 274, 275, 277, 278, 279, 280, 281, 282, 295, 296, 297, 298, 299, 300, 306, 307, 308, 310, 313, 314, 315, 316, 318, 320, 321, 323, 324, 332, 337, 338, 340, 344, 349, 351, 352, 354], "valuabl": 282, "valueerror": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 256], "van": 120, "vanish": [120, 198, 205, 234, 235, 236], "var": 305, "vari": [25, 106, 126, 128, 168, 179, 243, 353], "variabl": [123, 129, 168, 169, 170, 225, 243, 244, 245, 255, 270, 272, 277, 297, 350, 353], "varianc": [136, 145, 163, 166, 181, 182, 183, 192, 193, 196, 197, 205, 215, 234, 235, 236, 238, 239, 240, 241, 261, 262, 263, 264, 265, 279, 330, 353, 357], "variant": [26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 46, 47, 48, 49, 64, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 87, 88, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 261, 262, 263], "variat": [184, 185, 186, 238, 239, 240, 350, 357], "varieti": [4, 54, 69, 282, 357], "variou": [7, 31, 50, 55, 56, 58, 65, 120, 203, 257, 282, 300, 316, 318, 337, 347], "vasudevan": 120, "vdot": 292, "vector": [14, 19, 20, 21, 22, 154, 156, 224, 226, 286, 287, 288, 292], "veloc": [258, 266, 268], "veri": [19, 81, 83, 120, 259], "versa": 267, "versatil": [282, 336], "version": [22, 25, 50, 54, 58, 59, 60, 266, 292, 351], "vertic": [342, 345, 354], "vgg": 111, "vggnet": [57, 112, 113, 114, 115, 120], "vggnet_11": 120, "vggnet_13": 120, "vggnet_16": 120, "vggnet_19": 120, "via": [3, 4, 106], "vice": 267, "video": [142, 151, 183, 213, 240, 248, 251], "view": [54, 58, 126, 247, 248, 249, 250, 251, 340], "vinod": [5, 6], "vision": [62, 63, 66, 69, 78, 120, 141, 212, 224, 357], "visual": [118, 120], "vol": 120, "vollgraf": 7, "volumetr": [142, 151, 183, 213, 240, 248, 251], "vstack": 335, "w": [78, 90, 91, 92, 93, 94, 95, 107, 108, 109, 120, 141, 142, 144, 146, 150, 151, 154, 156, 164, 169, 170, 172, 173, 176, 177, 179, 180, 182, 183, 187, 211, 212, 213, 224, 226, 235, 236, 237, 239, 240, 244, 245, 248, 251, 348, 350], "w_": [141, 142, 169, 170, 172, 173, 176, 177, 179, 212, 213, 244, 245, 247, 248, 250, 251], "w_out": [141, 142, 172, 173, 176, 177], "wa": [51, 215, 218, 219, 220, 221, 272], "wai": [1, 24, 119, 270, 272, 340], "wang": 120, "want": [0, 10, 346, 348], "warn": [125, 127], "we": [3, 10, 271, 336], "weight": [76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 97, 98, 99, 100, 101, 120, 140, 141, 142, 154, 156, 157, 158, 162, 163, 166, 167, 179, 187, 188, 192, 193, 196, 197, 211, 212, 213, 215, 216, 218, 219, 220, 221, 224, 226, 228, 229, 232, 234, 235, 236, 238, 239, 240, 241, 255, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 277, 282], "weight1": 127, "weight2": 127, "weight_decai": [258, 259, 260, 261, 262, 263, 264, 265, 266, 268], "weinberg": 120, "well": [32, 33, 34, 35, 37, 52, 106, 192, 193], "were": 129, "weyand": 120, "what": 272, "when": [0, 1, 3, 10, 17, 36, 123, 126, 128, 129, 131, 134, 140, 141, 142, 198, 217, 225, 234, 235, 236, 238, 239, 240, 253, 256, 259, 267, 270, 272, 273, 274, 282, 293, 346, 348], "where": [3, 4, 5, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 22, 67, 68, 116, 120, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 147, 149, 150, 151, 154, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 187, 188, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 246, 247, 248, 249, 250, 251, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 272, 274, 282, 284, 285, 289, 290, 291, 293, 294, 297, 298, 310, 314, 315, 316, 317, 318, 321, 323, 325, 328, 329, 330, 332, 337, 339, 343, 346, 347, 348, 349, 350, 351, 352, 353, 354], "whether": [1, 13, 36, 50, 51, 52, 67, 68, 69, 123, 124, 192, 193, 217, 266, 270, 275, 277, 278, 279, 281, 283, 297, 298, 316, 317, 318, 325, 330], "which": [0, 7, 10, 13, 14, 16, 17, 18, 19, 20, 22, 37, 53, 56, 62, 63, 65, 70, 71, 72, 73, 74, 75, 76, 77, 102, 103, 104, 105, 106, 110, 112, 113, 114, 115, 120, 123, 125, 127, 129, 134, 138, 159, 180, 184, 185, 186, 188, 198, 199, 202, 204, 207, 209, 215, 230, 232, 234, 235, 236, 238, 239, 240, 241, 261, 262, 264, 266, 270, 272, 274, 277, 278, 281, 307, 308, 309, 310, 311, 312, 315, 316, 317, 318, 319, 321, 322, 323, 325, 326, 327, 328, 330, 332, 339, 340, 342, 344, 347, 348, 350, 351, 352, 353, 354, 355, 357], "while": [10, 46, 47, 48, 49, 56, 62, 89, 90, 91, 92, 93, 94, 95, 102, 103, 104, 105, 110, 120, 126, 129, 145, 146, 199, 203, 204, 217, 255, 258, 259, 261, 262, 263, 264, 265, 266, 267, 268, 272, 340, 342, 351, 357], "who": [10, 125, 126, 127, 128], "whose": [22, 298, 302, 304, 306, 310, 314, 320], "wide": [4, 5, 6, 8, 11, 19, 78, 86, 87, 88, 120, 135, 203, 211, 212, 229], "wide_resnet_101": 120, "wide_resnet_50": 120, "wider": [28, 87, 88, 140, 141], "wideresnet": 120, "width": [36, 37, 62, 65, 69, 76, 77, 87, 88, 89, 90, 91, 92, 93, 94, 95, 106, 116, 120, 141, 142, 144, 150, 151, 164, 169, 170, 172, 173, 176, 177, 179, 180, 188, 212, 213, 235, 236, 237, 239, 240, 244, 245, 247, 248, 250, 251, 253, 348, 350, 355], "width_coef": 36, "width_multipli": [62, 65], "window": [171, 172, 173, 175, 176, 177, 246, 247, 248, 249, 250, 251, 259, 316, 318], "wise": [100, 102, 103, 104, 105, 120, 131, 132, 134, 135, 136, 137, 138, 139, 147, 181, 182, 183, 187, 201, 207, 208, 215, 217, 218, 219, 220, 221, 255, 271, 284, 285, 288, 289, 290, 291, 293, 294, 306, 307, 308, 309, 310, 311, 312, 313, 315, 319, 320, 321, 322, 323, 324, 326, 327, 328, 334, 345], "within": [2, 120, 121, 122, 125, 126, 127, 128, 129, 139, 179, 180, 197, 199, 200, 201, 203, 205, 206, 208, 209, 211, 212, 213, 215, 218, 219, 225, 228, 229, 230, 231, 232, 234, 235, 236, 238, 241, 246, 247, 248, 249, 250, 251, 257, 272, 295, 310, 353, 357], "without": [10, 89, 125, 126, 127, 154, 156, 211, 212, 213, 224, 226, 270, 273, 316, 338, 340, 344], "won": 272, "work": [1, 2, 3, 10, 12, 271, 274], "workflow": [282, 357], "workload": 10, "wrap": [3, 255, 272, 331], "wrapper": 255, "www": [5, 6], "x": [10, 11, 21, 54, 58, 96, 111, 116, 120, 121, 122, 123, 125, 126, 127, 128, 129, 138, 147, 154, 156, 180, 184, 185, 186, 188, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 246, 247, 248, 249, 250, 251, 255, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 275, 277, 278, 279, 281, 297, 298, 314, 336, 348, 349, 350, 351, 352, 353, 354, 355], "x1": 224, "x2": 224, "x_": [164, 229, 232, 237, 336], "x_c": [229, 232], "x_i": 228, "x_k": 229, "xavier": [192, 193, 196, 197], "xavier_norm": 191, "xavier_uniform": 191, "xception": [57, 120], "xiao": 7, "xie": 120, "xl": [49, 120], "xlarg": [30, 120], "xy": 336, "x\u2081": 224, "x\u2082": 224, "y": [116, 120, 125, 126, 127, 128, 129, 180, 184, 185, 186, 198, 199, 200, 201, 202, 203, 205, 206, 208, 209, 211, 212, 213, 215, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 246, 247, 248, 249, 250, 251, 275, 277, 278, 279, 281, 297, 298, 336, 351], "y_": [164, 229, 232, 237, 336], "y_c": [229, 232], "y_i": 228, "yann": [8, 120], "yet": [10, 271], "yield": [0, 1, 123, 272], "you": [0, 64, 121, 126, 128, 129, 255, 257, 270, 272, 282, 297, 298, 299, 304, 329, 331, 346, 348, 357], "your": [64, 255, 257, 270, 272, 282, 357], "z": [120, 298, 303, 304], "zalandoresearch": 7, "zeiler": [118, 120], "zero": [17, 19, 20, 52, 121, 131, 134, 140, 141, 142, 145, 146, 147, 148, 149, 150, 151, 171, 172, 173, 175, 176, 177, 190, 192, 193, 194, 195, 196, 197, 198, 200, 202, 203, 205, 211, 212, 213, 215, 217, 218, 219, 220, 221, 241, 246, 247, 248, 249, 250, 251, 255, 256, 259, 260, 261, 262, 263, 264, 265, 266, 297, 298, 299, 304, 305, 310, 320, 337], "zero_grad": [124, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 283], "zeros_lik": [298, 305], "zfnet": [57, 120], "zhang": 120, "zhmoginov": 120, "zhu": 120, "zhuang": 120, "zisserman": 120, "\u03c3\u1d62": 19}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "CIFAR10", "CIFAR100", "FashionMNIST", "MNIST", "Image Datasets", "Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "alexnet", "ConvNeXt", "convnext_base", "convnext_large", "convnext_small", "convnext_tiny", "convnext_xlarge", "DenseNet", "densenet_121", "densenet_169", "densenet_201", "densenet_264", "EfficientNet", "EfficientNet_V2", "efficientnet_b0", "efficientnet_b1", "efficientnet_b2", "efficientnet_b3", "efficientnet_b4", "efficientnet_b5", "efficientnet_b6", "efficientnet_b7", "efficientnet_v2_l", "efficientnet_v2_m", "efficientnet_v2_s", "efficientnet_v2_xl", "Inception", "inception_v1", "inception_v3", "inception_v4", "InceptionResNet", "inception_resnet_v1", "inception_resnet_v2", "ConvNets", "LeNet", "lenet_1", "lenet_4", "lenet_5", "MobileNet", "MobileNet_V2", "MobileNet_V3", "mobilenet", "mobilenet_v2", "mobilenet_v3_large", "mobilenet_v3_small", "ResNeSt", "resnest_101", "resnest_14", "resnest_200", "resnest_26", "resnest_269", "resnest_50", "resnest_50_1s4x24d", "resnest_50_4s2x40d", "ResNet", "resnet_1001", "resnet_101", "resnet_152", "resnet_18", "resnet_200", "resnet_269", "resnet_34", "resnet_50", "wide_resnet_101", "wide_resnet_50", "ResNeXt", "resnext_101_32x16d", "resnext_101_32x32d", "resnext_101_32x4d", "resnext_101_32x8d", "resnext_101_64x4d", "resnext_50_32x4d", "SENet", "se_resnet_101", "se_resnet_152", "se_resnet_18", "se_resnet_34", "se_resnet_50", "se_resnext_101_32x4d", "se_resnext_101_32x8d", "se_resnext_101_64x4d", "se_resnext_50_32x4d", "SKNet", "sk_resnet_18", "sk_resnet_34", "sk_resnet_50", "sk_resnext_50_32x4d", "VGGNet", "vggnet_11", "vggnet_13", "vggnet_16", "vggnet_19", "Xception", "xception", "ZFNet", "zfnet", "lucid.models", "models.summarize", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.drop_block", "nn.functional.drop_path", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "nn.functional.global_response_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "nn.DepthSeparableConv1d", "nn.DepthSeparableConv2d", "nn.DepthSeparableConv3d", "nn.SEModule", "nn.SelectiveKernel", "Fused Layers", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.HardSigmoid", "nn.HardSwish", "nn.LeakyReLU", "nn.ReLU", "nn.ReLU6", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Swish", "nn.Tanh", "Activation Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.DropBlock", "nn.DropPath", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.GlobalResponseNorm", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "nn.Upsample", "Vision Layers", "lucid.nn", "optim.Optimizer", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.types", "lucid.random.bernoulli", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.linspace", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.meshgrid", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.unsqueeze", "lucid.vstack", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": 271, "1d": 271, "2": 271, "2d": 271, "3": 271, "It": [270, 272], "ab": 306, "activ": [133, 153, 210, 223], "ad": 271, "adadelta": 259, "adagrad": 260, "adam": 261, "adamax": 263, "adamw": 262, "adaptive_avg_pool1d": 168, "adaptive_avg_pool2d": 169, "adaptive_avg_pool3d": 170, "adaptiveavgpool1d": 243, "adaptiveavgpool2d": 244, "adaptiveavgpool3d": 245, "add": 284, "addit": 19, "admonit": 274, "advanc": [144, 357], "alexnet": [23, 24], "algebra": 15, "algorithm": [258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "alias": 274, "align": 271, "alpha_dropout": 145, "alphadropout": 215, "also": 257, "anoth": 331, "arang": 295, "arcco": 307, "architectur": [23, 25, 59, 60, 61, 87, 88, 118], "arcsin": 308, "arctan": 309, "asgd": 258, "attent": 188, "attribut": [5, 6, 7, 8, 23, 54, 58, 78, 89, 96, 106, 111, 116, 118, 122, 124, 125, 126, 127, 128, 129, 181, 182, 183, 184, 185, 186, 187, 198, 199, 202, 203, 205, 206, 207, 209, 211, 212, 213, 215, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 283, 348, 349, 350, 351, 352, 353, 354, 355], "avg_pool1d": 171, "avg_pool2d": 172, "avg_pool3d": 173, "avgpool1d": 246, "avgpool2d": 247, "avgpool3d": 248, "axi": 271, "backpropag": 283, "backward": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 146, 154, 156, 179, 187, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 212, 213, 215, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 246, 247, 248, 249, 250, 251, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345], "batch_norm": 163, "batchnorm": 189, "batchnorm1d": 234, "batchnorm2d": 235, "batchnorm3d": 236, "bceloss": 228, "behavior": [168, 169, 170, 243, 244, 245], "benefit": 272, "bernoulli": 275, "bilinear": [154, 224], "binari": 305, "binary_cross_entropi": 157, "bottleneck": [67, 68], "broadcast": 271, "buffer": 122, "calcul": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 78, 89, 96, 106, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 144, 146, 147, 154, 156, 168, 169, 170, 179, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 351, 352, 353, 354, 355], "captur": 273, "case": 274, "centercrop": 348, "choleski": 12, "cifar10": 5, "cifar100": 6, "class": [0, 1, 2, 5, 6, 7, 8, 23, 25, 31, 36, 37, 50, 54, 58, 62, 63, 64, 69, 78, 89, 96, 106, 111, 116, 118, 122, 123, 124, 125, 126, 127, 128, 129, 181, 182, 183, 184, 185, 186, 187, 188, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 283, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355], "clip": 310, "co": 311, "combin": 0, "compon": [3, 10, 255], "compos": 346, "concatdataset": [0, 1], "concaten": 332, "conclus": [3, 10, 255, 270, 271, 272, 282, 347, 357], "configur": [36, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77], "constant": 190, "contain": 130, "conv": 189, "conv1d": [140, 211], "conv2d": [141, 212], "conv3d": [142, 213], "convbnrelu1d": 181, "convbnrelu2d": 182, "convbnrelu3d": 183, "convnet": [57, 120], "convnext": 25, "convnext_bas": 26, "convnext_larg": 27, "convnext_smal": 28, "convnext_tini": 29, "convnext_xlarg": 30, "convolut": [143, 153, 189, 214, 223], "core": 10, "cosh": 312, "creat": [124, 283, 331], "cross_entropi": 158, "crossentropyloss": 229, "cube": 313, "custom": [1, 2, 3, 123, 256, 257, 357], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 9], "defin": [2, 123, 256, 257], "definit": 274, "densenet": 31, "densenet_121": 32, "densenet_169": 33, "densenet_201": 34, "densenet_264": 35, "depthseparableconv1d": 184, "depthseparableconv2d": 185, "depthseparableconv3d": 186, "depthwis": 189, "descript": [90, 91, 92, 93, 94, 95, 107, 108, 109, 273], "det": 13, "detail": [19, 87, 88], "diag": 296, "dilat": 144, "div": 285, "dot": 286, "drop_block": 146, "drop_path": 147, "dropblock": 216, "dropout": [148, 152, 153, 218, 222, 223], "dropout1d": [149, 219], "dropout2d": [150, 220], "dropout3d": [151, 221], "droppath": 217, "efficientnet": 36, "efficientnet_b0": 38, "efficientnet_b1": 39, "efficientnet_b2": 40, "efficientnet_b3": 41, "efficientnet_b4": 42, "efficientnet_b5": 43, "efficientnet_b6": 44, "efficientnet_b7": 45, "efficientnet_v2": 37, "efficientnet_v2_": 48, "efficientnet_v2_l": 46, "efficientnet_v2_m": 47, "efficientnet_v2_xl": 49, "eig": 14, "elu": [131, 198], "empti": 297, "empty_lik": 298, "exampl": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 58, 59, 60, 61, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 154, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 357], "excit": 189, "exp": 314, "express": 164, "ey": 299, "fashionmnist": 7, "featur": [4, 10, 11, 102, 103, 104, 105, 110, 257, 282, 357], "flatten": 333, "forward": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 78, 89, 96, 106, 116, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 144, 147, 154, 156, 168, 169, 170, 179, 181, 182, 183, 184, 185, 186, 187, 188, 192, 193, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 348, 349, 350, 351, 352, 353, 354, 355], "from": 331, "function": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 59, 60, 61, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173, 174, 175, 176, 177, 178, 179, 180, 190, 192, 193, 194, 195, 196, 197, 270, 272, 273, 275, 277, 278, 279, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345], "fuse": 189, "futur": 4, "gelu": [132, 199], "gener": [276, 305], "get": 257, "global_response_norm": 164, "globalresponsenorm": 237, "grad_en": 270, "gradient": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 146, 154, 156, 179, 187, 197, 198, 199, 200, 201, 202, 203, 205, 206, 207, 208, 209, 211, 212, 213, 215, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 246, 247, 248, 249, 250, 251, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 332, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345], "guidelin": 274, "hardsigmoid": 200, "hardswish": 201, "how": [270, 272], "hstack": 334, "huber_loss": 159, "huberloss": 230, "hyperparamet": [76, 77], "ident": 225, "imag": [9, 356], "incept": 50, "inception_resnet_v1": 55, "inception_resnet_v2": 56, "inception_v1": 51, "inception_v3": 52, "inception_v4": 53, "inceptionresnet": 54, "index": 283, "init": [190, 192, 193, 194, 195, 196, 197], "initi": 191, "inner": 287, "input": 331, "inspect": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "instance_norm": 166, "instancenorm1d": 238, "instancenorm2d": 239, "instancenorm3d": 240, "integr": [3, 255, 282, 357], "interpol": 179, "inv": 16, "iter": 283, "kaiming_norm": 192, "kaiming_uniform": 193, "kei": [3, 4, 10, 102, 103, 104, 105, 110, 255, 257, 282, 357], "kernel": 189, "layer": [70, 71, 72, 73, 74, 75, 189, 210, 214, 222, 223, 227, 233, 242, 252, 254], "layer_norm": 167, "layernorm": 241, "leaky_relu": 134, "leakyrelu": 202, "learn": 282, "lenet": 58, "lenet_1": 59, "lenet_4": 60, "lenet_5": 61, "limit": 10, "linalg": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22], "linear": [15, 153, 155, 156, 223, 226, 227], "linspac": 300, "list": 331, "load": 1, "log": 315, "loss": [153, 160, 223, 233], "lucid": [3, 4, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 120, 153, 255, 257, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 357], "mathemat": 164, "matmul": 288, "matrix": 288, "matrix_pow": 17, "max": 316, "max_pool1d": 175, "max_pool2d": 176, "max_pool3d": 177, "maximum": 289, "maxpool1d": 249, "maxpool2d": 250, "maxpool3d": 251, "mean": 317, "mechan": 188, "meshgrid": 336, "metadata": 273, "method": [0, 1, 2, 5, 6, 7, 8, 54, 58, 111, 123, 124, 256, 283], "min": 318, "minimum": 290, "mnist": 8, "mobilenet": [62, 65], "mobilenet_v2": [63, 66], "mobilenet_v3": 64, "mobilenet_v3_larg": 67, "mobilenet_v3_smal": 68, "model": [120, 121, 255], "modul": [123, 223], "moduledict": 125, "modulelist": 126, "more": 282, "mse_loss": 161, "mseloss": 231, "mul": 291, "multipl": [0, 288], "nadam": 264, "new": 271, "newaxi": 271, "nll_loss": 162, "nllloss": 232, "nn": [122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 153, 154, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 255], "no_grad": 272, "norm": 18, "normal": [153, 165, 194, 223, 242, 349], "note": 10, "number": 276, "ones": 301, "ones_lik": 302, "oper": [15, 288, 305], "optim": [256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269], "organ": 255, "outer": 292, "overview": [3, 4, 10, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 79, 80, 81, 82, 83, 84, 85, 86, 97, 98, 99, 100, 101, 255, 257, 282, 357], "pad": 337, "paramet": [1, 5, 6, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 154, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 205, 206, 207, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 272, 273, 275, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355], "parameterdict": 127, "parameterlist": 128, "pass": 116, "perform": 283, "pinv": 19, "pipelin": [3, 357], "pitfal": [270, 272], "pool": [153, 174, 223, 252], "potenti": [270, 272], "power": 293, "properti": [124, 283], "qr": 20, "radam": 265, "rais": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22], "rand": 277, "randint": 278, "randn": 279, "random": [275, 276, 277, 278, 279, 280, 281, 282], "randomcrop": 350, "randomgrayscal": 351, "randomhorizontalflip": 352, "randomrot": 353, "randomverticalflip": 354, "ravel": 338, "reciproc": 319, "refer": [5, 6, 7, 8, 187, 257], "register_model": 273, "regular": 146, "relu": [135, 189, 203], "relu6": 204, "repeat": 339, "reshap": 340, "resiz": 355, "resnest": 69, "resnest_101": 70, "resnest_14": 71, "resnest_200": 72, "resnest_26": 73, "resnest_269": 74, "resnest_50": 75, "resnest_50_1s4x24d": 76, "resnest_50_4s2x40d": 77, "resnet": 78, "resnet_1001": 79, "resnet_101": 80, "resnet_152": 81, "resnet_18": 82, "resnet_200": 83, "resnet_269": 84, "resnet_34": 85, "resnet_50": 86, "resnext": 89, "resnext_101_32x16d": 90, "resnext_101_32x32d": 91, "resnext_101_32x4d": 92, "resnext_101_32x8d": 93, "resnext_101_64x4d": 94, "resnext_50_32x4d": 95, "return": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 30, 32, 33, 34, 35, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 51, 52, 53, 55, 56, 59, 60, 61, 65, 66, 67, 68, 70, 71, 72, 73, 74, 75, 76, 77, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 90, 91, 92, 93, 94, 95, 97, 98, 99, 100, 101, 102, 103, 104, 105, 107, 108, 109, 110, 112, 113, 114, 115, 117, 119, 121, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 154, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 188, 190, 192, 193, 194, 195, 196, 197, 204, 270, 272, 275, 277, 278, 279, 280, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345], "rmsprop": 266, "rotat": 180, "rprop": 267, "rule": 288, "se_resnet_101": 97, "se_resnet_152": 98, "se_resnet_18": 99, "se_resnet_34": 100, "se_resnet_50": 101, "se_resnext_101_32x4d": 102, "se_resnext_101_32x8d": 103, "se_resnext_101_64x4d": 104, "se_resnext_50_32x4d": 105, "see": 257, "seed": 280, "select": 189, "selectivekernel": 188, "selu": [136, 205], "semodul": 187, "senet": 96, "separ": 189, "sequenti": 129, "sgd": 268, "sigmoid": [137, 206], "sign": 320, "signatur": [0, 1, 2, 5, 6, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 115, 116, 117, 118, 119, 121, 122, 123, 124, 125, 126, 127, 128, 129, 131, 132, 134, 135, 136, 137, 138, 139, 140, 141, 142, 144, 145, 146, 147, 148, 149, 150, 151, 154, 156, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 173, 175, 176, 177, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 211, 212, 213, 215, 216, 217, 218, 219, 220, 221, 224, 225, 226, 228, 229, 230, 231, 232, 234, 235, 236, 237, 238, 239, 240, 241, 243, 244, 245, 246, 247, 248, 249, 250, 251, 253, 256, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 270, 272, 273, 275, 277, 278, 279, 280, 281, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 313, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 336, 337, 338, 339, 340, 341, 342, 343, 344, 345, 346, 347, 348, 349, 350, 351, 352, 353, 354, 355], "sin": 321, "sinh": 322, "sk_resnet_18": 107, "sk_resnet_34": 108, "sk_resnet_50": 109, "sk_resnext_50_32x4d": 110, "sknet": 106, "slice": 283, "softmax": [138, 207], "solv": 21, "sqrt": 323, "squar": 324, "squeez": [189, 341], "stack": 342, "start": 257, "state": [257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268], "sub": 294, "sum": 325, "summar": 121, "summari": 121, "svd": 22, "swish": 208, "tabl": 121, "tan": 326, "tanh": [139, 209, 327], "tensor": [271, 283, 305, 331, 335], "through": 283, "tile": 343, "totensor": 347, "trace": 328, "track": 283, "transform": [346, 347, 348, 349, 350, 351, 352, 353, 354, 355, 356, 357], "transpos": 329, "type": 274, "unari": 305, "unfold": 144, "uniform": [195, 281], "unsqueez": 344, "upsampl": 253, "us": [1, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 274, 331], "usag": [4, 10, 46, 47, 48, 49, 51, 52, 53, 55, 56, 58, 59, 60, 61, 102, 103, 104, 105, 110, 122, 180, 270, 271, 272, 274, 336, 346, 347, 357], "util": [153, 178], "utilit": 335, "var": 330, "vggnet": 111, "vggnet_11": 112, "vggnet_13": 113, "vggnet_16": 114, "vggnet_19": 115, "vision": [223, 254], "vstack": 345, "weight": 191, "why": 274, "wide_resnet_101": 87, "wide_resnet_50": 88, "work": [4, 270, 272], "xavier_norm": 196, "xavier_uniform": 197, "xception": [116, 117], "zero": 303, "zeros_lik": 304, "zfnet": [118, 119]}})