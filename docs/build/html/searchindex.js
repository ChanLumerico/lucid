Search.setIndex({"alltitles": {"@ Operator": [[191, "operator"]], "Activation Functions": [[54, null]], "Activation Layers": [[115, null], [130, null]], "Additional Details": [[16, "additional-details"]], "Admonitions and Usage Guidelines": [[178, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[65, "advanced-example-with-dilation"]], "Advanced Features": [[259, "advanced-features"]], "AlexNet": [[20, null]], "Algorithm": [[162, "algorithm"], [163, "algorithm"], [164, "algorithm"], [165, "algorithm"], [166, "algorithm"], [167, "algorithm"], [168, "algorithm"], [169, "algorithm"], [170, "algorithm"], [171, "algorithm"], [172, "algorithm"]], "Architecture": [[20, "architecture"], [31, "architecture"], [32, "architecture"], [33, "architecture"], [39, "architecture"]], "Attributes": [[5, "attributes"], [20, "attributes"], [26, "attributes"], [30, "attributes"], [34, "attributes"], [39, "attributes"], [43, "attributes"], [45, "attributes"], [46, "attributes"], [47, "attributes"], [48, "attributes"], [49, "attributes"], [50, "attributes"], [107, "attributes"], [108, "attributes"], [109, "attributes"], [110, "attributes"], [111, "attributes"], [112, "attributes"], [113, "attributes"], [114, "attributes"], [116, "attributes"], [117, "attributes"], [118, "attributes"], [120, "attributes"], [121, "attributes"], [122, "attributes"], [123, "attributes"], [124, "attributes"], [126, "attributes"], [127, "attributes"], [128, "attributes"], [131, "attributes"], [132, "attributes"], [133, "attributes"], [135, "attributes"], [136, "attributes"], [137, "attributes"], [138, "attributes"], [139, "attributes"], [141, "attributes"], [142, "attributes"], [143, "attributes"], [144, "attributes"], [145, "attributes"], [146, "attributes"], [147, "attributes"], [149, "attributes"], [150, "attributes"], [151, "attributes"], [152, "attributes"], [153, "attributes"], [154, "attributes"], [155, "attributes"], [156, "attributes"], [157, "attributes"], [186, "attributes"], [250, "attributes"], [251, "attributes"], [252, "attributes"], [253, "attributes"], [254, "attributes"], [255, "attributes"], [256, "attributes"], [257, "attributes"]], "Backward Gradient Calculation": [[9, "backward-gradient-calculation"], [10, "backward-gradient-calculation"], [11, "backward-gradient-calculation"], [13, "backward-gradient-calculation"], [14, "backward-gradient-calculation"], [15, "backward-gradient-calculation"], [16, "backward-gradient-calculation"], [17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [46, "backward-gradient-calculation"], [47, "backward-gradient-calculation"], [48, "backward-gradient-calculation"], [49, "backward-gradient-calculation"], [50, "backward-gradient-calculation"], [52, "backward-gradient-calculation"], [53, "backward-gradient-calculation"], [55, "backward-gradient-calculation"], [56, "backward-gradient-calculation"], [57, "backward-gradient-calculation"], [58, "backward-gradient-calculation"], [59, "backward-gradient-calculation"], [60, "backward-gradient-calculation"], [73, "backward-gradient-calculation"], [75, "backward-gradient-calculation"], [97, "backward-gradient-calculation"], [106, "backward-gradient-calculation"], [107, "backward-gradient-calculation"], [108, "backward-gradient-calculation"], [109, "backward-gradient-calculation"], [110, "backward-gradient-calculation"], [111, "backward-gradient-calculation"], [112, "backward-gradient-calculation"], [113, "backward-gradient-calculation"], [114, "backward-gradient-calculation"], [116, "backward-gradient-calculation"], [117, "backward-gradient-calculation"], [118, "backward-gradient-calculation"], [120, "backward-gradient-calculation"], [121, "backward-gradient-calculation"], [122, "backward-gradient-calculation"], [123, "backward-gradient-calculation"], [124, "backward-gradient-calculation"], [131, "backward-gradient-calculation"], [132, "backward-gradient-calculation"], [133, "backward-gradient-calculation"], [135, "backward-gradient-calculation"], [136, "backward-gradient-calculation"], [137, "backward-gradient-calculation"], [138, "backward-gradient-calculation"], [139, "backward-gradient-calculation"], [141, "backward-gradient-calculation"], [142, "backward-gradient-calculation"], [143, "backward-gradient-calculation"], [144, "backward-gradient-calculation"], [145, "backward-gradient-calculation"], [146, "backward-gradient-calculation"], [147, "backward-gradient-calculation"], [152, "backward-gradient-calculation"], [153, "backward-gradient-calculation"], [154, "backward-gradient-calculation"], [155, "backward-gradient-calculation"], [156, "backward-gradient-calculation"], [157, "backward-gradient-calculation"], [187, "backward-gradient-calculation"], [188, "backward-gradient-calculation"], [189, "backward-gradient-calculation"], [190, "backward-gradient-calculation"], [191, "backward-gradient-calculation"], [192, "backward-gradient-calculation"], [193, "backward-gradient-calculation"], [194, "backward-gradient-calculation"], [195, "backward-gradient-calculation"], [196, "backward-gradient-calculation"], [197, "backward-gradient-calculation"], [208, "backward-gradient-calculation"], [209, "backward-gradient-calculation"], [210, "backward-gradient-calculation"], [211, "backward-gradient-calculation"], [212, "backward-gradient-calculation"], [213, "backward-gradient-calculation"], [214, "backward-gradient-calculation"], [215, "backward-gradient-calculation"], [216, "backward-gradient-calculation"], [217, "backward-gradient-calculation"], [218, "backward-gradient-calculation"], [219, "backward-gradient-calculation"], [220, "backward-gradient-calculation"], [221, "backward-gradient-calculation"], [222, "backward-gradient-calculation"], [223, "backward-gradient-calculation"], [224, "backward-gradient-calculation"], [225, "backward-gradient-calculation"], [226, "backward-gradient-calculation"], [227, "backward-gradient-calculation"], [228, "backward-gradient-calculation"], [229, "backward-gradient-calculation"], [230, "backward-gradient-calculation"], [231, "backward-gradient-calculation"], [232, "backward-gradient-calculation"], [234, "backward-gradient-calculation"], [236, "backward-gradient-calculation"], [238, "backward-gradient-calculation"], [239, "backward-gradient-calculation"], [240, "backward-gradient-calculation"], [241, "backward-gradient-calculation"], [242, "backward-gradient-calculation"], [243, "backward-gradient-calculation"], [244, "backward-gradient-calculation"], [245, "backward-gradient-calculation"], [246, "backward-gradient-calculation"], [247, "backward-gradient-calculation"]], "Behavior": [[86, "behavior"], [87, "behavior"], [88, "behavior"], [149, "behavior"], [150, "behavior"], [151, "behavior"]], "Benefits": [[176, "benefits"]], "Binary Functions": [[207, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [20, "class-signature"], [22, "class-signature"], [26, "class-signature"], [30, "class-signature"], [34, "class-signature"], [39, "class-signature"], [43, "class-signature"], [44, "class-signature"], [45, "class-signature"], [46, "class-signature"], [47, "class-signature"], [48, "class-signature"], [49, "class-signature"], [50, "class-signature"], [107, "class-signature"], [108, "class-signature"], [109, "class-signature"], [110, "class-signature"], [111, "class-signature"], [112, "class-signature"], [113, "class-signature"], [114, "class-signature"], [116, "class-signature"], [117, "class-signature"], [118, "class-signature"], [120, "class-signature"], [121, "class-signature"], [122, "class-signature"], [123, "class-signature"], [124, "class-signature"], [126, "class-signature"], [127, "class-signature"], [128, "class-signature"], [131, "class-signature"], [132, "class-signature"], [133, "class-signature"], [135, "class-signature"], [136, "class-signature"], [137, "class-signature"], [138, "class-signature"], [139, "class-signature"], [141, "class-signature"], [142, "class-signature"], [143, "class-signature"], [144, "class-signature"], [145, "class-signature"], [146, "class-signature"], [147, "class-signature"], [149, "class-signature"], [150, "class-signature"], [151, "class-signature"], [152, "class-signature"], [153, "class-signature"], [154, "class-signature"], [155, "class-signature"], [156, "class-signature"], [157, "class-signature"], [160, "class-signature"], [162, "class-signature"], [163, "class-signature"], [164, "class-signature"], [165, "class-signature"], [166, "class-signature"], [167, "class-signature"], [168, "class-signature"], [169, "class-signature"], [170, "class-signature"], [171, "class-signature"], [172, "class-signature"], [186, "class-signature"], [248, "class-signature"], [249, "class-signature"], [250, "class-signature"], [251, "class-signature"], [252, "class-signature"], [253, "class-signature"], [254, "class-signature"], [255, "class-signature"], [256, "class-signature"], [257, "class-signature"]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [7, "conclusion"], [159, "conclusion"], [174, "conclusion"], [175, "conclusion"], [176, "conclusion"], [185, "conclusion"], [249, "conclusion"], [259, "conclusion"]], "Containers": [[51, null]], "ConvNets": [[29, null], [41, "convnets"]], "Convolution Functions": [[64, null], [72, null]], "Convolution Layers": [[119, null], [130, null]], "Core Components": [[7, "core-components"]], "Create a Tensor from a list": [[233, null]], "Creating a Parameter": [[45, null]], "Creating a tensor with gradient tracking": [[186, null]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[259, "custom-pipelines"]], "Defining a Custom Optimizer": [[161, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[44, null]], "Defining a custom optimizer": [[160, null]], "Description": [[177, "description"]], "Dropout Functions": [[71, null], [72, null]], "Dropout Layers": [[125, null], [130, null]], "Example": [[3, null], [3, null], [3, null], [9, "example"], [10, "example"], [11, "example"], [13, "example"], [14, "example"], [15, "example"], [16, "example"], [17, "example"], [18, "example"], [19, "example"], [65, "example"], [159, null], [159, null], [159, null], [174, "example"], [176, "example"], [180, "example"], [181, "example"], [182, "example"], [183, "example"], [184, "example"], [185, null], [185, null], [185, null], [198, "example"], [199, "example"], [200, "example"], [201, "example"], [202, "example"], [203, "example"], [204, "example"], [205, "example"], [206, "example"], [208, "example"], [209, "example"], [210, "example"], [211, "example"], [212, "example"], [213, "example"], [214, "example"], [215, "example"], [217, "example"], [219, "example"], [221, "example"], [222, "example"], [223, "example"], [224, "example"], [225, "example"], [226, "example"], [227, "example"], [228, "example"], [229, "example"], [230, "example"], [231, "example"], [232, "example"], [234, "example"], [236, "example"], [240, "example"], [242, "example"], [243, "example"], [244, "example"], [246, "example"], [247, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[175, null]], "Example 2: Adding a new axis to a 2D tensor": [[175, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[175, null]], "Example Usage": [[7, "example-usage"], [23, "example-usage"], [24, "example-usage"], [25, "example-usage"], [27, "example-usage"], [28, "example-usage"], [30, "example-usage"], [31, "example-usage"], [32, "example-usage"], [33, "example-usage"], [98, "example-usage"], [248, "example-usage"], [249, "example-usage"], [259, "example-usage"]], "Example Use Cases": [[178, "example-use-cases"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [8, "examples"], [20, "examples"], [21, "examples"], [34, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [40, "examples"], [42, "examples"], [43, "examples"], [44, "examples"], [45, "examples"], [46, "examples"], [47, "examples"], [48, "examples"], [49, "examples"], [50, "examples"], [52, "examples"], [53, "examples"], [55, "examples"], [56, "examples"], [57, "examples"], [58, "examples"], [59, "examples"], [60, "examples"], [61, "examples"], [62, "examples"], [63, "examples"], [66, "examples"], [67, "examples"], [68, "examples"], [69, "examples"], [70, "examples"], [73, "examples"], [75, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [80, "examples"], [81, "examples"], [82, "examples"], [84, "examples"], [85, "examples"], [86, "examples"], [87, "examples"], [88, "examples"], [89, "examples"], [90, "examples"], [91, "examples"], [93, "examples"], [94, "examples"], [95, "examples"], [97, "examples"], [99, "examples"], [101, "examples"], [102, "examples"], [103, "examples"], [104, "examples"], [105, "examples"], [106, "examples"], [107, "examples"], [108, "examples"], [109, "examples"], [110, "examples"], [111, "examples"], [112, "examples"], [113, "examples"], [114, "examples"], [116, "examples"], [117, "examples"], [118, "examples"], [120, "examples"], [121, "examples"], [122, "examples"], [123, "examples"], [124, "examples"], [126, "examples"], [127, "examples"], [128, "examples"], [131, "examples"], [132, "examples"], [133, "examples"], [135, "examples"], [136, "examples"], [137, "examples"], [138, "examples"], [139, "examples"], [141, "examples"], [142, "examples"], [143, "examples"], [144, "examples"], [145, "examples"], [146, "examples"], [147, "examples"], [149, "examples"], [150, "examples"], [151, "examples"], [152, "examples"], [153, "examples"], [154, "examples"], [155, "examples"], [156, "examples"], [157, "examples"], [160, "examples"], [161, "examples"], [162, "examples"], [163, "examples"], [164, "examples"], [165, "examples"], [166, "examples"], [167, "examples"], [168, "examples"], [169, "examples"], [170, "examples"], [171, "examples"], [172, "examples"], [177, "examples"], [186, "examples"], [187, "examples"], [188, "examples"], [189, "examples"], [190, "examples"], [192, "examples"], [193, "examples"], [194, "examples"], [195, "examples"], [196, "examples"], [197, "examples"], [216, "examples"], [218, "examples"], [220, "examples"], [233, "examples"], [235, "examples"], [238, "examples"], [239, "examples"], [241, "examples"], [245, "examples"], [250, "examples"], [251, "examples"], [252, "examples"], [253, "examples"], [254, "examples"], [255, "examples"], [256, "examples"], [257, "examples"]], "Features": [[8, "features"]], "Forward Calculation": [[9, "forward-calculation"], [10, "forward-calculation"], [11, "forward-calculation"], [13, "forward-calculation"], [14, "forward-calculation"], [15, "forward-calculation"], [16, "forward-calculation"], [17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [46, "forward-calculation"], [47, "forward-calculation"], [48, "forward-calculation"], [49, "forward-calculation"], [50, "forward-calculation"], [52, "forward-calculation"], [53, "forward-calculation"], [55, "forward-calculation"], [56, "forward-calculation"], [57, "forward-calculation"], [58, "forward-calculation"], [59, "forward-calculation"], [60, "forward-calculation"], [65, "forward-calculation"], [73, "forward-calculation"], [75, "forward-calculation"], [86, "forward-calculation"], [87, "forward-calculation"], [88, "forward-calculation"], [97, "forward-calculation"], [101, "forward-calculation"], [102, "forward-calculation"], [105, "forward-calculation"], [106, "forward-calculation"], [107, "forward-calculation"], [108, "forward-calculation"], [109, "forward-calculation"], [110, "forward-calculation"], [111, "forward-calculation"], [112, "forward-calculation"], [113, "forward-calculation"], [114, "forward-calculation"], [116, "forward-calculation"], [117, "forward-calculation"], [118, "forward-calculation"], [120, "forward-calculation"], [121, "forward-calculation"], [122, "forward-calculation"], [123, "forward-calculation"], [124, "forward-calculation"], [126, "forward-calculation"], [127, "forward-calculation"], [128, "forward-calculation"], [131, "forward-calculation"], [132, "forward-calculation"], [133, "forward-calculation"], [135, "forward-calculation"], [136, "forward-calculation"], [137, "forward-calculation"], [138, "forward-calculation"], [139, "forward-calculation"], [141, "forward-calculation"], [142, "forward-calculation"], [143, "forward-calculation"], [144, "forward-calculation"], [145, "forward-calculation"], [146, "forward-calculation"], [147, "forward-calculation"], [149, "forward-calculation"], [150, "forward-calculation"], [151, "forward-calculation"], [152, "forward-calculation"], [153, "forward-calculation"], [154, "forward-calculation"], [155, "forward-calculation"], [156, "forward-calculation"], [157, "forward-calculation"], [187, "forward-calculation"], [188, "forward-calculation"], [189, "forward-calculation"], [190, "forward-calculation"], [191, "forward-calculation"], [192, "forward-calculation"], [193, "forward-calculation"], [194, "forward-calculation"], [195, "forward-calculation"], [196, "forward-calculation"], [197, "forward-calculation"], [208, "forward-calculation"], [209, "forward-calculation"], [210, "forward-calculation"], [211, "forward-calculation"], [212, "forward-calculation"], [213, "forward-calculation"], [214, "forward-calculation"], [215, "forward-calculation"], [216, "forward-calculation"], [217, "forward-calculation"], [218, "forward-calculation"], [219, "forward-calculation"], [220, "forward-calculation"], [221, "forward-calculation"], [222, "forward-calculation"], [223, "forward-calculation"], [224, "forward-calculation"], [225, "forward-calculation"], [226, "forward-calculation"], [227, "forward-calculation"], [228, "forward-calculation"], [229, "forward-calculation"], [230, "forward-calculation"], [231, "forward-calculation"], [232, "forward-calculation"], [234, "forward-calculation"], [236, "forward-calculation"], [238, "forward-calculation"], [239, "forward-calculation"], [240, "forward-calculation"], [241, "forward-calculation"], [242, "forward-calculation"], [243, "forward-calculation"], [244, "forward-calculation"], [245, "forward-calculation"], [246, "forward-calculation"], [247, "forward-calculation"], [250, "forward-calculation"], [251, "forward-calculation"], [252, "forward-calculation"], [253, "forward-calculation"], [254, "forward-calculation"], [255, "forward-calculation"], [256, "forward-calculation"], [257, "forward-calculation"]], "Function Signature": [[9, "function-signature"], [10, "function-signature"], [11, "function-signature"], [13, "function-signature"], [14, "function-signature"], [15, "function-signature"], [16, "function-signature"], [17, "function-signature"], [18, "function-signature"], [19, "function-signature"], [21, "function-signature"], [23, "function-signature"], [24, "function-signature"], [25, "function-signature"], [27, "function-signature"], [28, "function-signature"], [31, "function-signature"], [32, "function-signature"], [33, "function-signature"], [35, "function-signature"], [36, "function-signature"], [37, "function-signature"], [38, "function-signature"], [40, "function-signature"], [42, "function-signature"], [52, "function-signature"], [53, "function-signature"], [55, "function-signature"], [56, "function-signature"], [57, "function-signature"], [58, "function-signature"], [59, "function-signature"], [60, "function-signature"], [61, "function-signature"], [62, "function-signature"], [63, "function-signature"], [65, "function-signature"], [66, "function-signature"], [67, "function-signature"], [68, "function-signature"], [69, "function-signature"], [70, "function-signature"], [73, "function-signature"], [75, "function-signature"], [76, "function-signature"], [77, "function-signature"], [78, "function-signature"], [80, "function-signature"], [81, "function-signature"], [82, "function-signature"], [84, "function-signature"], [85, "function-signature"], [86, "function-signature"], [87, "function-signature"], [88, "function-signature"], [89, "function-signature"], [90, "function-signature"], [91, "function-signature"], [93, "function-signature"], [94, "function-signature"], [95, "function-signature"], [97, "function-signature"], [98, "function-signature"], [99, "function-signature"], [101, "function-signature"], [102, "function-signature"], [103, "function-signature"], [104, "function-signature"], [105, "function-signature"], [106, "function-signature"], [174, "function-signature"], [176, "function-signature"], [177, "function-signature"], [180, "function-signature"], [181, "function-signature"], [182, "function-signature"], [183, "function-signature"], [184, "function-signature"], [187, "function-signature"], [188, "function-signature"], [189, "function-signature"], [190, "function-signature"], [191, "function-signature"], [192, "function-signature"], [193, "function-signature"], [194, "function-signature"], [195, "function-signature"], [196, "function-signature"], [197, "function-signature"], [198, "function-signature"], [199, "function-signature"], [200, "function-signature"], [201, "function-signature"], [202, "function-signature"], [203, "function-signature"], [204, "function-signature"], [205, "function-signature"], [206, "function-signature"], [208, "function-signature"], [209, "function-signature"], [210, "function-signature"], [211, "function-signature"], [212, "function-signature"], [213, "function-signature"], [214, "function-signature"], [215, "function-signature"], [216, "function-signature"], [217, "function-signature"], [218, "function-signature"], [219, "function-signature"], [220, "function-signature"], [221, "function-signature"], [222, "function-signature"], [223, "function-signature"], [224, "function-signature"], [225, "function-signature"], [226, "function-signature"], [227, "function-signature"], [228, "function-signature"], [229, "function-signature"], [230, "function-signature"], [231, "function-signature"], [232, "function-signature"], [233, "function-signature"], [234, "function-signature"], [235, "function-signature"], [236, "function-signature"], [238, "function-signature"], [239, "function-signature"], [240, "function-signature"], [241, "function-signature"], [242, "function-signature"], [243, "function-signature"], [244, "function-signature"], [245, "function-signature"], [246, "function-signature"], [247, "function-signature"]], "Fused Layers": [[129, null], [130, null]], "Future Work": [[4, "future-work"]], "Getting Started": [[161, "getting-started"]], "How It Works": [[174, "how-it-works"], [176, "how-it-works"]], "Image Datasets": [[6, null]], "Image Transformations": [[258, null]], "Inception": [[22, null]], "InceptionResNet": [[26, null]], "Indexing and slicing": [[186, null]], "Inspecting Optimizer State": [[161, null], [162, null], [163, null], [164, null], [165, null], [166, null], [167, null], [168, null], [169, null], [170, null], [171, null], [172, null]], "Integration with lucid": [[3, "integration-with-lucid"], [159, "integration-with-lucid"], [185, "integration-with-lucid"], [259, "integration-with-lucid"]], "Iterating through a tensor": [[186, null]], "Key Components": [[3, "key-components"], [159, "key-components"]], "Key Features": [[4, "key-features"], [7, "key-features"], [161, "key-features"], [185, "key-features"]], "Key Transformations": [[259, "key-transformations"]], "LeNet": [[30, null]], "Learn More": [[185, null]], "Limitations": [[7, "limitations"]], "Linear Algebra Operations": [[12, null]], "Linear Functions": [[72, null], [74, null]], "Linear Layers": [[130, null], [134, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[72, null], [79, null]], "Loss Layers": [[130, null], [140, null]], "Lucid": [[7, null]], "Matrix Multiplication Rules": [[191, "matrix-multiplication-rules"]], "Metadata Captured": [[177, "metadata-captured"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [26, "methods"], [30, "methods"], [34, "methods"], [44, "methods"], [45, "methods"], [160, "methods"], [186, "methods"]], "Modules": [[130, null]], "Normalization Functions": [[72, null], [83, null]], "Normalization Layers": [[130, null], [148, null]], "Notes": [[7, "notes"]], "Optimizers": [[173, null]], "Organizing Models": [[159, "organizing-models"]], "Overview": [[3, "overview"], [4, "overview"], [7, "overview"], [22, "overview"], [23, "overview"], [24, "overview"], [25, "overview"], [26, "overview"], [27, "overview"], [28, "overview"], [30, "overview"], [31, "overview"], [32, "overview"], [33, "overview"], [159, "overview"], [161, "overview"], [185, "overview"], [259, "overview"]], "Parameters": [[1, "parameters"], [5, "parameters"], [9, "parameters"], [10, "parameters"], [11, "parameters"], [13, "parameters"], [14, "parameters"], [15, "parameters"], [16, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [20, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [30, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [42, "parameters"], [43, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [52, "parameters"], [53, "parameters"], [55, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [73, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [87, "parameters"], [88, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [104, "parameters"], [105, "parameters"], [106, "parameters"], [107, "parameters"], [108, "parameters"], [109, "parameters"], [110, "parameters"], [111, "parameters"], [112, "parameters"], [113, "parameters"], [114, "parameters"], [116, "parameters"], [117, "parameters"], [118, "parameters"], [120, "parameters"], [121, "parameters"], [122, "parameters"], [123, "parameters"], [124, "parameters"], [126, "parameters"], [127, "parameters"], [128, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [135, "parameters"], [136, "parameters"], [137, "parameters"], [138, "parameters"], [139, "parameters"], [141, "parameters"], [142, "parameters"], [143, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [147, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [154, "parameters"], [155, "parameters"], [156, "parameters"], [157, "parameters"], [162, "parameters"], [163, "parameters"], [164, "parameters"], [165, "parameters"], [166, "parameters"], [167, "parameters"], [168, "parameters"], [169, "parameters"], [170, "parameters"], [171, "parameters"], [172, "parameters"], [176, "parameters"], [177, "parameters"], [180, "parameters"], [181, "parameters"], [182, "parameters"], [183, "parameters"], [184, "parameters"], [186, "parameters"], [187, "parameters"], [188, "parameters"], [189, "parameters"], [190, "parameters"], [191, "parameters"], [192, "parameters"], [193, "parameters"], [194, "parameters"], [195, "parameters"], [196, "parameters"], [197, "parameters"], [198, "parameters"], [199, "parameters"], [200, "parameters"], [201, "parameters"], [202, "parameters"], [203, "parameters"], [204, "parameters"], [205, "parameters"], [206, "parameters"], [208, "parameters"], [209, "parameters"], [210, "parameters"], [211, "parameters"], [212, "parameters"], [213, "parameters"], [214, "parameters"], [215, "parameters"], [216, "parameters"], [217, "parameters"], [218, "parameters"], [219, "parameters"], [220, "parameters"], [221, "parameters"], [222, "parameters"], [223, "parameters"], [224, "parameters"], [225, "parameters"], [226, "parameters"], [227, "parameters"], [228, "parameters"], [229, "parameters"], [230, "parameters"], [231, "parameters"], [232, "parameters"], [233, "parameters"], [234, "parameters"], [235, "parameters"], [236, "parameters"], [238, "parameters"], [239, "parameters"], [240, "parameters"], [241, "parameters"], [242, "parameters"], [243, "parameters"], [244, "parameters"], [245, "parameters"], [246, "parameters"], [247, "parameters"], [248, "parameters"], [249, "parameters"], [250, "parameters"], [251, "parameters"], [252, "parameters"], [253, "parameters"], [254, "parameters"], [255, "parameters"], [256, "parameters"], [257, "parameters"]], "Performing backpropagation": [[186, null]], "Pooling Functions": [[72, null], [92, null]], "Pooling Layers": [[130, null], [158, null]], "Potential Pitfalls": [[174, "potential-pitfalls"], [176, "potential-pitfalls"]], "Properties": [[45, "properties"], [186, "properties"]], "Raises": [[9, "raises"], [10, "raises"], [11, "raises"], [13, "raises"], [14, "raises"], [15, "raises"], [16, "raises"], [17, "raises"], [18, "raises"], [19, "raises"]], "Random Number Generations": [[179, null]], "References": [[5, "references"], [161, "references"]], "Returns": [[9, "returns"], [10, "returns"], [11, "returns"], [13, "returns"], [14, "returns"], [15, "returns"], [16, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [21, "returns"], [23, "returns"], [24, "returns"], [25, "returns"], [27, "returns"], [28, "returns"], [31, "returns"], [32, "returns"], [33, "returns"], [35, "returns"], [36, "returns"], [37, "returns"], [38, "returns"], [40, "returns"], [42, "returns"], [52, "returns"], [53, "returns"], [55, "returns"], [56, "returns"], [57, "returns"], [58, "returns"], [59, "returns"], [60, "returns"], [61, "returns"], [62, "returns"], [63, "returns"], [65, "returns"], [66, "returns"], [67, "returns"], [68, "returns"], [69, "returns"], [70, "returns"], [73, "returns"], [75, "returns"], [76, "returns"], [77, "returns"], [78, "returns"], [80, "returns"], [81, "returns"], [82, "returns"], [84, "returns"], [85, "returns"], [86, "returns"], [87, "returns"], [88, "returns"], [89, "returns"], [90, "returns"], [91, "returns"], [93, "returns"], [94, "returns"], [95, "returns"], [97, "returns"], [98, "returns"], [99, "returns"], [101, "returns"], [102, "returns"], [103, "returns"], [104, "returns"], [105, "returns"], [106, "returns"], [174, "returns"], [176, "returns"], [180, "returns"], [181, "returns"], [182, "returns"], [183, "returns"], [184, "returns"], [187, "returns"], [188, "returns"], [189, "returns"], [190, "returns"], [191, "returns"], [192, "returns"], [193, "returns"], [194, "returns"], [195, "returns"], [196, "returns"], [197, "returns"], [198, "returns"], [199, "returns"], [200, "returns"], [201, "returns"], [202, "returns"], [203, "returns"], [204, "returns"], [205, "returns"], [206, "returns"], [208, "returns"], [209, "returns"], [210, "returns"], [211, "returns"], [212, "returns"], [213, "returns"], [214, "returns"], [215, "returns"], [216, "returns"], [217, "returns"], [218, "returns"], [219, "returns"], [220, "returns"], [221, "returns"], [222, "returns"], [223, "returns"], [224, "returns"], [225, "returns"], [226, "returns"], [227, "returns"], [228, "returns"], [229, "returns"], [230, "returns"], [231, "returns"], [232, "returns"], [233, "returns"], [234, "returns"], [235, "returns"], [236, "returns"], [238, "returns"], [239, "returns"], [240, "returns"], [241, "returns"], [242, "returns"], [243, "returns"], [244, "returns"], [245, "returns"], [246, "returns"], [247, "returns"]], "See Also": [[161, "see-also"]], "Summary Table": [[42, "summary-table"]], "Tensor Generating Functions": [[207, null]], "Tensor Operations": [[207, null]], "Tensor Utilites": [[237, null]], "Type Definitions": [[178, "type-definitions"]], "Unary Functions": [[207, null]], "Usage": [[4, "usage"], [43, "usage"], [98, "usage"], [174, "usage"], [175, "usage"], [176, "usage"], [238, "usage"], [248, "usage"], [249, "usage"], [259, "usage"]], "Use another Tensor as input": [[233, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using the ASGD Optimizer": [[162, null]], "Using the Adadelta Optimizer": [[163, null]], "Using the Adagrad Optimizer": [[164, null]], "Using the Adam Optimizer": [[165, null]], "Using the AdamW Optimizer": [[166, null]], "Using the Adamax Optimizer": [[167, null]], "Using the NAdam Optimizer": [[168, null]], "Using the RAdam Optimizer": [[169, null]], "Using the RMSprop Optimizer": [[170, null]], "Using the Rprop Optimizer": [[171, null]], "Using the SGD Optimizer": [[172, null]], "Utility Functions": [[72, null], [96, null]], "VGGNet": [[34, null]], "Weight Initializations": [[100, null]], "Why Use Type Aliases?": [[178, null]], "ZFNet": [[39, null]], "activation Functions": [[72, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "datasets.MNIST": [[5, null]], "lucid.Tensor": [[186, null]], "lucid.abs": [[208, null]], "lucid.add": [[187, null]], "lucid.arange": [[198, null]], "lucid.arccos": [[209, null]], "lucid.arcsin": [[210, null]], "lucid.arctan": [[211, null]], "lucid.clip": [[212, null]], "lucid.concatenate": [[234, null]], "lucid.cos": [[213, null]], "lucid.cosh": [[214, null]], "lucid.cube": [[215, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[199, null]], "lucid.div": [[188, null]], "lucid.dot": [[189, null]], "lucid.empty": [[200, null]], "lucid.empty_like": [[201, null]], "lucid.exp": [[216, null]], "lucid.eye": [[202, null]], "lucid.flatten": [[235, null]], "lucid.grad_enabled": [[174, null]], "lucid.hstack": [[236, null]], "lucid.inner": [[190, null]], "lucid.linalg": [[8, null]], "lucid.linalg.cholesky": [[9, null]], "lucid.linalg.det": [[10, null]], "lucid.linalg.eig": [[11, null]], "lucid.linalg.inv": [[13, null]], "lucid.linalg.matrix_power": [[14, null]], "lucid.linalg.norm": [[15, null]], "lucid.linalg.pinv": [[16, null]], "lucid.linalg.qr": [[17, null]], "lucid.linalg.solve": [[18, null]], "lucid.linalg.svd": [[19, null]], "lucid.log": [[217, null]], "lucid.matmul": [[191, null]], "lucid.max": [[218, null]], "lucid.maximum": [[192, null]], "lucid.mean": [[219, null]], "lucid.meshgrid": [[238, null]], "lucid.min": [[220, null]], "lucid.minimum": [[193, null]], "lucid.models": [[41, null]], "lucid.mul": [[194, null]], "lucid.newaxis": [[175, null]], "lucid.nn": [[159, null]], "lucid.nn.functional": [[72, null]], "lucid.no_grad": [[176, null]], "lucid.ones": [[203, null]], "lucid.ones_like": [[204, null]], "lucid.optim": [[161, null]], "lucid.outer": [[195, null]], "lucid.pad": [[239, null]], "lucid.power": [[196, null]], "lucid.random": [[185, null]], "lucid.random.rand": [[180, null]], "lucid.random.randint": [[181, null]], "lucid.random.randn": [[182, null]], "lucid.random.seed": [[183, null]], "lucid.random.uniform": [[184, null]], "lucid.ravel": [[240, null]], "lucid.reciprocal": [[221, null]], "lucid.register_model": [[177, null]], "lucid.repeat": [[241, null]], "lucid.reshape": [[242, null]], "lucid.sign": [[222, null]], "lucid.sin": [[223, null]], "lucid.sinh": [[224, null]], "lucid.sqrt": [[225, null]], "lucid.square": [[226, null]], "lucid.squeeze": [[243, null]], "lucid.stack": [[244, null]], "lucid.sub": [[197, null]], "lucid.sum": [[227, null]], "lucid.tan": [[228, null]], "lucid.tanh": [[229, null]], "lucid.tensor": [[233, null]], "lucid.tile": [[245, null]], "lucid.trace": [[230, null]], "lucid.transforms": [[259, null]], "lucid.transpose": [[231, null]], "lucid.types": [[178, null]], "lucid.unsqueeze": [[246, null]], "lucid.var": [[232, null]], "lucid.vstack": [[247, null]], "lucid.zeros": [[205, null]], "lucid.zeros_like": [[206, null]], "models.alexnet": [[21, null]], "models.inception_resnet_v1": [[27, null]], "models.inception_resnet_v2": [[28, null]], "models.inception_v1": [[23, null]], "models.inception_v3": [[24, null]], "models.inception_v4": [[25, null]], "models.lenet_1": [[31, null]], "models.lenet_4": [[32, null]], "models.lenet_5": [[33, null]], "models.summarize": [[42, null]], "models.vggnet_11": [[35, null]], "models.vggnet_13": [[36, null]], "models.vggnet_16": [[37, null]], "models.vggnet_19": [[38, null]], "models.zfnet": [[40, null]], "nn.AdaptiveAvgPool1d": [[149, null]], "nn.AdaptiveAvgPool2d": [[150, null]], "nn.AdaptiveAvgPool3d": [[151, null]], "nn.AlphaDropout": [[120, null]], "nn.AvgPool1d": [[152, null]], "nn.AvgPool2d": [[153, null]], "nn.AvgPool3d": [[154, null]], "nn.BCELoss": [[135, null]], "nn.BatchNorm1d": [[141, null]], "nn.BatchNorm2d": [[142, null]], "nn.BatchNorm3d": [[143, null]], "nn.Bilinear": [[131, null]], "nn.Buffer": [[43, null]], "nn.Conv1d": [[116, null]], "nn.Conv2d": [[117, null]], "nn.Conv3d": [[118, null]], "nn.ConvBNReLU1d": [[126, null]], "nn.ConvBNReLU2d": [[127, null]], "nn.ConvBNReLU3d": [[128, null]], "nn.CrossEntropyLoss": [[136, null]], "nn.Dropout": [[121, null]], "nn.Dropout1d": [[122, null]], "nn.Dropout2d": [[123, null]], "nn.Dropout3d": [[124, null]], "nn.ELU": [[107, null]], "nn.GELU": [[108, null]], "nn.HuberLoss": [[137, null]], "nn.Identity": [[132, null]], "nn.InstanceNorm1d": [[144, null]], "nn.InstanceNorm2d": [[145, null]], "nn.InstanceNorm3d": [[146, null]], "nn.LayerNorm": [[147, null]], "nn.LeakyReLU": [[109, null]], "nn.Linear": [[133, null]], "nn.MSELoss": [[138, null]], "nn.MaxPool1d": [[155, null]], "nn.MaxPool2d": [[156, null]], "nn.MaxPool3d": [[157, null]], "nn.Module": [[44, null]], "nn.ModuleDict": [[46, null]], "nn.ModuleList": [[47, null]], "nn.NLLLoss": [[139, null]], "nn.Parameter": [[45, null]], "nn.ParameterDict": [[48, null]], "nn.ParameterList": [[49, null]], "nn.ReLU": [[110, null]], "nn.SELU": [[111, null]], "nn.Sequential": [[50, null]], "nn.Sigmoid": [[112, null]], "nn.Softmax": [[113, null]], "nn.Tanh": [[114, null]], "nn.functional.adaptive_avg_pool1d": [[86, null]], "nn.functional.adaptive_avg_pool2d": [[87, null]], "nn.functional.adaptive_avg_pool3d": [[88, null]], "nn.functional.alpha_dropout": [[66, null]], "nn.functional.avg_pool1d": [[89, null]], "nn.functional.avg_pool2d": [[90, null]], "nn.functional.avg_pool3d": [[91, null]], "nn.functional.batch_norm": [[82, null]], "nn.functional.bilinear": [[73, null]], "nn.functional.binary_cross_entropy": [[76, null]], "nn.functional.conv1d": [[61, null]], "nn.functional.conv2d": [[62, null]], "nn.functional.conv3d": [[63, null]], "nn.functional.cross_entropy": [[77, null]], "nn.functional.dropout": [[67, null]], "nn.functional.dropout1d": [[68, null]], "nn.functional.dropout2d": [[69, null]], "nn.functional.dropout3d": [[70, null]], "nn.functional.elu": [[52, null]], "nn.functional.gelu": [[53, null]], "nn.functional.huber_loss": [[78, null]], "nn.functional.instance_norm": [[84, null]], "nn.functional.interpolate": [[97, null]], "nn.functional.layer_norm": [[85, null]], "nn.functional.leaky_relu": [[55, null]], "nn.functional.linear": [[75, null]], "nn.functional.max_pool1d": [[93, null]], "nn.functional.max_pool2d": [[94, null]], "nn.functional.max_pool3d": [[95, null]], "nn.functional.mse_loss": [[80, null]], "nn.functional.nll_loss": [[81, null]], "nn.functional.relu": [[56, null]], "nn.functional.rotate": [[98, null]], "nn.functional.selu": [[57, null]], "nn.functional.sigmoid": [[58, null]], "nn.functional.softmax": [[59, null]], "nn.functional.tanh": [[60, null]], "nn.functional.unfold": [[65, null]], "nn.init.constant": [[99, null]], "nn.init.kaiming_normal": [[101, null]], "nn.init.kaiming_uniform": [[102, null]], "nn.init.normal": [[103, null]], "nn.init.uniform": [[104, null]], "nn.init.xavier_normal": [[105, null]], "nn.init.xavier_uniform": [[106, null]], "optim.ASGD": [[162, null]], "optim.Adadelta": [[163, null]], "optim.Adagrad": [[164, null]], "optim.Adam": [[165, null]], "optim.AdamW": [[166, null]], "optim.Adamax": [[167, null]], "optim.NAdam": [[168, null]], "optim.Optimizer": [[160, null]], "optim.RAdam": [[169, null]], "optim.RMSprop": [[170, null]], "optim.Rprop": [[171, null]], "optim.SGD": [[172, null]], "transforms.CenterCrop": [[250, null]], "transforms.Compose": [[248, null]], "transforms.Normalize": [[251, null]], "transforms.RandomCrop": [[252, null]], "transforms.RandomGrayscale": [[253, null]], "transforms.RandomHorizontalFlip": [[254, null]], "transforms.RandomRotation": [[255, null]], "transforms.RandomVerticalFlip": [[256, null]], "transforms.Resize": [[257, null]], "transforms.ToTensor": [[249, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/MNIST", "datasets/image/index", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/conv/alex/AlexNet", "models/conv/alex/alexnet", "models/conv/inception/Inception", "models/conv/inception/inception_v1", "models/conv/inception/inception_v3", "models/conv/inception/inception_v4", "models/conv/inception_res/InceptionResNet", "models/conv/inception_res/inception_resnet_v1", "models/conv/inception_res/inception_resnet_v2", "models/conv/index", "models/conv/lenet/LeNet", "models/conv/lenet/lenet_1", "models/conv/lenet/lenet_4", "models/conv/lenet/lenet_5", "models/conv/vgg/VGGNet", "models/conv/vgg/vggnet_11", "models/conv/vgg/vggnet_13", "models/conv/vgg/vggnet_16", "models/conv/vgg/vggnet_19", "models/conv/zfnet/ZFNet", "models/conv/zfnet/zfnet", "models/models", "models/summarize", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/fused/ConvBNReLU1d", "nn/modules/fused/ConvBNReLU2d", "nn/modules/fused/ConvBNReLU3d", "nn/modules/fused/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/nn", "optim/Optimizer", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "others/types", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/meshgrid", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/conv/alex/AlexNet.rst", "models/conv/alex/alexnet.rst", "models/conv/inception/Inception.rst", "models/conv/inception/inception_v1.rst", "models/conv/inception/inception_v3.rst", "models/conv/inception/inception_v4.rst", "models/conv/inception_res/InceptionResNet.rst", "models/conv/inception_res/inception_resnet_v1.rst", "models/conv/inception_res/inception_resnet_v2.rst", "models/conv/index.rst", "models/conv/lenet/LeNet.rst", "models/conv/lenet/lenet_1.rst", "models/conv/lenet/lenet_4.rst", "models/conv/lenet/lenet_5.rst", "models/conv/vgg/VGGNet.rst", "models/conv/vgg/vggnet_11.rst", "models/conv/vgg/vggnet_13.rst", "models/conv/vgg/vggnet_16.rst", "models/conv/vgg/vggnet_19.rst", "models/conv/zfnet/ZFNet.rst", "models/conv/zfnet/zfnet.rst", "models/models.rst", "models/summarize.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/fused/ConvBNReLU1d.rst", "nn/modules/fused/ConvBNReLU2d.rst", "nn/modules/fused/ConvBNReLU3d.rst", "nn/modules/fused/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "others/types.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"abs() (in module lucid)": [[208, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[163, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[164, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[165, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[167, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[166, "lucid.optim.AdamW", false]], "adaptive_avg_pool1d() (in module lucid.nn.functional)": [[86, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[87, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[88, "lucid.nn.functional.adaptive_avg_pool3d", false]], "adaptiveavgpool1d (class in lucid.nn)": [[149, "lucid.nn.AdaptiveAvgPool1d", false]], "adaptiveavgpool2d (class in lucid.nn)": [[150, "lucid.nn.AdaptiveAvgPool2d", false]], "adaptiveavgpool3d (class in lucid.nn)": [[151, "lucid.nn.AdaptiveAvgPool3d", false]], "add() (in module lucid)": [[187, "lucid.add", false]], "alexnet (class in lucid.models)": [[20, "lucid.models.AlexNet", false]], "alexnet() (in module lucid.models)": [[21, "lucid.models.alexnet", false]], "alpha_dropout() (in module lucid.nn.functional)": [[66, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[120, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[198, "lucid.arange", false]], "arccos() (in module lucid)": [[209, "lucid.arccos", false]], "arcsin() (in module lucid)": [[210, "lucid.arcsin", false]], "arctan() (in module lucid)": [[211, "lucid.arctan", false]], "asgd (class in lucid.optim)": [[162, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[89, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[90, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[91, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[152, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[153, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[154, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[82, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[141, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[142, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[143, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[135, "lucid.nn.BCELoss", false]], "bilinear (class in lucid.nn)": [[131, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[73, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[76, "lucid.nn.functional.binary_cross_entropy", false]], "buffer (class in lucid.nn)": [[43, "lucid.nn.Buffer", false]], "centercrop (class in lucid.transforms)": [[250, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[9, "lucid.linalg.cholesky", false]], "clip() (in module lucid)": [[212, "lucid.clip", false]], "compose (class in lucid.transforms)": [[248, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[234, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[99, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[116, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[61, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[117, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[62, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[118, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[63, "lucid.nn.functional.conv3d", false]], "convbnrelu1d (class in lucid.nn)": [[126, "lucid.nn.ConvBNReLU1d", false]], "convbnrelu2d (class in lucid.nn)": [[127, "lucid.nn.ConvBNReLU2d", false]], "convbnrelu3d (class in lucid.nn)": [[128, "lucid.nn.ConvBNReLU3d", false]], "cos() (in module lucid)": [[213, "lucid.cos", false]], "cosh() (in module lucid)": [[214, "lucid.cosh", false]], "cross_entropy() (in module lucid.nn.functional)": [[77, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[136, "lucid.nn.CrossEntropyLoss", false]], "cube() (in module lucid)": [[215, "lucid.cube", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "det() (in module lucid.linalg)": [[10, "lucid.linalg.det", false]], "diag() (in module lucid)": [[199, "lucid.diag", false]], "div() (in module lucid)": [[188, "lucid.div", false]], "dot() (in module lucid)": [[189, "lucid.dot", false]], "dropout (class in lucid.nn)": [[121, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[67, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[122, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[68, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[123, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[69, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[124, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[70, "lucid.nn.functional.dropout3d", false]], "eig() (in module lucid.linalg)": [[11, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[107, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[52, "lucid.nn.functional.elu", false]], "empty() (in module lucid)": [[200, "lucid.empty", false]], "empty_like() (in module lucid)": [[201, "lucid.empty_like", false]], "exp() (in module lucid)": [[216, "lucid.exp", false]], "eye() (in module lucid)": [[202, "lucid.eye", false]], "flatten() (in module lucid)": [[235, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[108, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[53, "lucid.nn.functional.gelu", false]], "grad_enabled() (in module lucid)": [[174, "lucid.grad_enabled", false]], "hstack() (in module lucid)": [[236, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[78, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[137, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[132, "lucid.nn.Identity", false]], "inception (class in lucid.models)": [[22, "lucid.models.Inception", false]], "inception_resnet_v1() (in module lucid.models)": [[27, "lucid.models.inception_resnet_v1", false]], "inception_resnet_v2() (in module lucid.models)": [[28, "lucid.models.inception_resnet_v2", false]], "inception_v1() (in module lucid.models)": [[23, "lucid.models.inception_v1", false]], "inception_v3() (in module lucid.models)": [[24, "lucid.models.inception_v3", false]], "inception_v4() (in module lucid.models)": [[25, "lucid.models.inception_v4", false]], "inceptionresnet (class in lucid.models)": [[26, "lucid.models.InceptionResNet", false]], "inner() (in module lucid)": [[190, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[84, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[144, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[145, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[146, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[97, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[13, "lucid.linalg.inv", false]], "kaiming_normal() (in module lucid.nn.init)": [[101, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[102, "lucid.nn.init.kaiming_uniform", false]], "layer_norm() (in module lucid.nn.functional)": [[85, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[147, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[55, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[109, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[30, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[31, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[32, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[33, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[133, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[75, "lucid.nn.functional.linear", false]], "log() (in module lucid)": [[217, "lucid.log", false]], "lucid": [[7, "module-lucid", false]], "matmul() (in module lucid)": [[191, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[14, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[218, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[93, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[94, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[95, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[192, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[155, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[156, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[157, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[219, "lucid.mean", false]], "meshgrid() (in module lucid)": [[238, "lucid.meshgrid", false]], "min() (in module lucid)": [[220, "lucid.min", false]], "minimum() (in module lucid)": [[193, "lucid.minimum", false]], "mnist (class in lucid.datasets)": [[5, "lucid.datasets.MNIST", false]], "module": [[7, "module-lucid", false]], "module (class in lucid.nn)": [[44, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[46, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[47, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[80, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[138, "lucid.nn.MSELoss", false]], "mul() (in module lucid)": [[194, "lucid.mul", false]], "nadam (class in lucid.optim)": [[168, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[81, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[139, "lucid.nn.NLLLoss", false]], "no_grad() (in module lucid)": [[176, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[15, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[103, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[251, "lucid.transforms.Normalize", false]], "ones() (in module lucid)": [[203, "lucid.ones", false]], "ones_like() (in module lucid)": [[204, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[160, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[195, "lucid.outer", false]], "pad() (in module lucid)": [[239, "lucid.pad", false]], "parameter (class in lucid.nn)": [[45, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[48, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[49, "lucid.nn.ParameterList", false]], "pinv() (in module lucid.linalg)": [[16, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[196, "lucid.power", false]], "qr() (in module lucid.linalg)": [[17, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[169, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[180, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[181, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[182, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[252, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[253, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[254, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[255, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[256, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[240, "lucid.ravel", false]], "reciprocal() (in module lucid)": [[221, "lucid.reciprocal", false]], "register_model() (in module lucid)": [[177, "lucid.register_model", false]], "relu (class in lucid.nn)": [[110, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[56, "lucid.nn.functional.relu", false]], "repeat() (in module lucid)": [[241, "lucid.repeat", false]], "reshape() (in module lucid)": [[242, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[257, "lucid.transforms.Resize", false]], "rmsprop (class in lucid.optim)": [[170, "lucid.optim.RMSprop", false]], "rotate() (in module lucid.nn.functional)": [[98, "lucid.nn.functional.rotate", false]], "rprop (class in lucid.optim)": [[171, "lucid.optim.Rprop", false]], "seed() (in module lucid.random)": [[183, "lucid.random.seed", false]], "selu (class in lucid.nn)": [[111, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[57, "lucid.nn.functional.selu", false]], "sequential (class in lucid.nn)": [[50, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[172, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[112, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[58, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[222, "lucid.sign", false]], "sin() (in module lucid)": [[223, "lucid.sin", false]], "sinh() (in module lucid)": [[224, "lucid.sinh", false]], "softmax (class in lucid.nn)": [[113, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[59, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[18, "lucid.linalg.solve", false]], "sqrt() (in module lucid)": [[225, "lucid.sqrt", false]], "square() (in module lucid)": [[226, "lucid.square", false]], "squeeze() (in module lucid)": [[243, "lucid.squeeze", false]], "stack() (in module lucid)": [[244, "lucid.stack", false]], "sub() (in module lucid)": [[197, "lucid.sub", false]], "sum() (in module lucid)": [[227, "lucid.sum", false]], "summarize() (in module lucid.models)": [[42, "lucid.models.summarize", false]], "svd() (in module lucid.linalg)": [[19, "lucid.linalg.svd", false]], "tan() (in module lucid)": [[228, "lucid.tan", false]], "tanh (class in lucid.nn)": [[114, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[229, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[60, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[186, "lucid.Tensor", false]], "tensor() (in module lucid)": [[233, "lucid.tensor", false]], "tile() (in module lucid)": [[245, "lucid.tile", false]], "totensor (class in lucid.transforms)": [[249, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[230, "lucid.trace", false]], "transpose() (in module lucid)": [[231, "lucid.transpose", false]], "unfold() (in module lucid.nn.functional)": [[65, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[104, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[184, "lucid.random.uniform", false]], "unsqueeze() (in module lucid)": [[246, "lucid.unsqueeze", false]], "var() (in module lucid)": [[232, "lucid.var", false]], "vggnet (class in lucid.models)": [[34, "lucid.models.VGGNet", false]], "vggnet_11() (in module lucid.models)": [[35, "lucid.models.vggnet_11", false]], "vggnet_13() (in module lucid.models)": [[36, "lucid.models.vggnet_13", false]], "vggnet_16() (in module lucid.models)": [[37, "lucid.models.vggnet_16", false]], "vggnet_19() (in module lucid.models)": [[38, "lucid.models.vggnet_19", false]], "vstack() (in module lucid)": [[247, "lucid.vstack", false]], "xavier_normal() (in module lucid.nn.init)": [[105, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[106, "lucid.nn.init.xavier_uniform", false]], "zeros() (in module lucid)": [[205, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[206, "lucid.zeros_like", false]], "zfnet (class in lucid.models)": [[39, "lucid.models.ZFNet", false]], "zfnet() (in module lucid.models)": [[40, "lucid.models.zfnet", false]]}, "objects": {"": [[7, 0, 0, "-", "lucid"]], "lucid": [[186, 1, 1, "", "Tensor"], [208, 2, 1, "", "abs"], [187, 2, 1, "", "add"], [198, 2, 1, "", "arange"], [209, 2, 1, "", "arccos"], [210, 2, 1, "", "arcsin"], [211, 2, 1, "", "arctan"], [212, 2, 1, "", "clip"], [234, 2, 1, "", "concatenate"], [213, 2, 1, "", "cos"], [214, 2, 1, "", "cosh"], [215, 2, 1, "", "cube"], [199, 2, 1, "", "diag"], [188, 2, 1, "", "div"], [189, 2, 1, "", "dot"], [200, 2, 1, "", "empty"], [201, 2, 1, "", "empty_like"], [216, 2, 1, "", "exp"], [202, 2, 1, "", "eye"], [235, 2, 1, "", "flatten"], [174, 2, 1, "", "grad_enabled"], [236, 2, 1, "", "hstack"], [190, 2, 1, "", "inner"], [217, 2, 1, "", "log"], [191, 2, 1, "", "matmul"], [218, 2, 1, "", "max"], [192, 2, 1, "", "maximum"], [219, 2, 1, "", "mean"], [238, 2, 1, "", "meshgrid"], [220, 2, 1, "", "min"], [193, 2, 1, "", "minimum"], [194, 2, 1, "", "mul"], [176, 2, 1, "", "no_grad"], [203, 2, 1, "", "ones"], [204, 2, 1, "", "ones_like"], [195, 2, 1, "", "outer"], [239, 2, 1, "", "pad"], [196, 2, 1, "", "power"], [240, 2, 1, "", "ravel"], [221, 2, 1, "", "reciprocal"], [177, 2, 1, "", "register_model"], [241, 2, 1, "", "repeat"], [242, 2, 1, "", "reshape"], [222, 2, 1, "", "sign"], [223, 2, 1, "", "sin"], [224, 2, 1, "", "sinh"], [225, 2, 1, "", "sqrt"], [226, 2, 1, "", "square"], [243, 2, 1, "", "squeeze"], [244, 2, 1, "", "stack"], [197, 2, 1, "", "sub"], [227, 2, 1, "", "sum"], [228, 2, 1, "", "tan"], [229, 2, 1, "", "tanh"], [233, 2, 1, "", "tensor"], [245, 2, 1, "", "tile"], [230, 2, 1, "", "trace"], [231, 2, 1, "", "transpose"], [246, 2, 1, "", "unsqueeze"], [232, 2, 1, "", "var"], [247, 2, 1, "", "vstack"], [205, 2, 1, "", "zeros"], [206, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "MNIST"]], "lucid.linalg": [[9, 2, 1, "", "cholesky"], [10, 2, 1, "", "det"], [11, 2, 1, "", "eig"], [13, 2, 1, "", "inv"], [14, 2, 1, "", "matrix_power"], [15, 2, 1, "", "norm"], [16, 2, 1, "", "pinv"], [17, 2, 1, "", "qr"], [18, 2, 1, "", "solve"], [19, 2, 1, "", "svd"]], "lucid.models": [[20, 1, 1, "", "AlexNet"], [22, 1, 1, "", "Inception"], [26, 1, 1, "", "InceptionResNet"], [30, 1, 1, "", "LeNet"], [34, 1, 1, "", "VGGNet"], [39, 1, 1, "", "ZFNet"], [21, 2, 1, "", "alexnet"], [27, 2, 1, "", "inception_resnet_v1"], [28, 2, 1, "", "inception_resnet_v2"], [23, 2, 1, "", "inception_v1"], [24, 2, 1, "", "inception_v3"], [25, 2, 1, "", "inception_v4"], [31, 2, 1, "", "lenet_1"], [32, 2, 1, "", "lenet_4"], [33, 2, 1, "", "lenet_5"], [42, 2, 1, "", "summarize"], [35, 2, 1, "", "vggnet_11"], [36, 2, 1, "", "vggnet_13"], [37, 2, 1, "", "vggnet_16"], [38, 2, 1, "", "vggnet_19"], [40, 2, 1, "", "zfnet"]], "lucid.nn": [[149, 1, 1, "", "AdaptiveAvgPool1d"], [150, 1, 1, "", "AdaptiveAvgPool2d"], [151, 1, 1, "", "AdaptiveAvgPool3d"], [120, 1, 1, "", "AlphaDropout"], [152, 1, 1, "", "AvgPool1d"], [153, 1, 1, "", "AvgPool2d"], [154, 1, 1, "", "AvgPool3d"], [135, 1, 1, "", "BCELoss"], [141, 1, 1, "", "BatchNorm1d"], [142, 1, 1, "", "BatchNorm2d"], [143, 1, 1, "", "BatchNorm3d"], [131, 1, 1, "", "Bilinear"], [43, 1, 1, "", "Buffer"], [116, 1, 1, "", "Conv1d"], [117, 1, 1, "", "Conv2d"], [118, 1, 1, "", "Conv3d"], [126, 1, 1, "", "ConvBNReLU1d"], [127, 1, 1, "", "ConvBNReLU2d"], [128, 1, 1, "", "ConvBNReLU3d"], [136, 1, 1, "", "CrossEntropyLoss"], [121, 1, 1, "", "Dropout"], [122, 1, 1, "", "Dropout1d"], [123, 1, 1, "", "Dropout2d"], [124, 1, 1, "", "Dropout3d"], [107, 1, 1, "", "ELU"], [108, 1, 1, "", "GELU"], [137, 1, 1, "", "HuberLoss"], [132, 1, 1, "", "Identity"], [144, 1, 1, "", "InstanceNorm1d"], [145, 1, 1, "", "InstanceNorm2d"], [146, 1, 1, "", "InstanceNorm3d"], [147, 1, 1, "", "LayerNorm"], [109, 1, 1, "", "LeakyReLU"], [133, 1, 1, "", "Linear"], [138, 1, 1, "", "MSELoss"], [155, 1, 1, "", "MaxPool1d"], [156, 1, 1, "", "MaxPool2d"], [157, 1, 1, "", "MaxPool3d"], [44, 1, 1, "", "Module"], [46, 1, 1, "", "ModuleDict"], [47, 1, 1, "", "ModuleList"], [139, 1, 1, "", "NLLLoss"], [45, 1, 1, "", "Parameter"], [48, 1, 1, "", "ParameterDict"], [49, 1, 1, "", "ParameterList"], [110, 1, 1, "", "ReLU"], [111, 1, 1, "", "SELU"], [50, 1, 1, "", "Sequential"], [112, 1, 1, "", "Sigmoid"], [113, 1, 1, "", "Softmax"], [114, 1, 1, "", "Tanh"]], "lucid.nn.functional": [[86, 2, 1, "", "adaptive_avg_pool1d"], [87, 2, 1, "", "adaptive_avg_pool2d"], [88, 2, 1, "", "adaptive_avg_pool3d"], [66, 2, 1, "", "alpha_dropout"], [89, 2, 1, "", "avg_pool1d"], [90, 2, 1, "", "avg_pool2d"], [91, 2, 1, "", "avg_pool3d"], [82, 2, 1, "", "batch_norm"], [73, 2, 1, "", "bilinear"], [76, 2, 1, "", "binary_cross_entropy"], [61, 2, 1, "", "conv1d"], [62, 2, 1, "", "conv2d"], [63, 2, 1, "", "conv3d"], [77, 2, 1, "", "cross_entropy"], [67, 2, 1, "", "dropout"], [68, 2, 1, "", "dropout1d"], [69, 2, 1, "", "dropout2d"], [70, 2, 1, "", "dropout3d"], [52, 2, 1, "", "elu"], [53, 2, 1, "", "gelu"], [78, 2, 1, "", "huber_loss"], [84, 2, 1, "", "instance_norm"], [97, 2, 1, "", "interpolate"], [85, 2, 1, "", "layer_norm"], [55, 2, 1, "", "leaky_relu"], [75, 2, 1, "", "linear"], [93, 2, 1, "", "max_pool1d"], [94, 2, 1, "", "max_pool2d"], [95, 2, 1, "", "max_pool3d"], [80, 2, 1, "", "mse_loss"], [81, 2, 1, "", "nll_loss"], [56, 2, 1, "", "relu"], [98, 2, 1, "", "rotate"], [57, 2, 1, "", "selu"], [58, 2, 1, "", "sigmoid"], [59, 2, 1, "", "softmax"], [60, 2, 1, "", "tanh"], [65, 2, 1, "", "unfold"]], "lucid.nn.init": [[99, 2, 1, "", "constant"], [101, 2, 1, "", "kaiming_normal"], [102, 2, 1, "", "kaiming_uniform"], [103, 2, 1, "", "normal"], [104, 2, 1, "", "uniform"], [105, 2, 1, "", "xavier_normal"], [106, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[162, 1, 1, "", "ASGD"], [163, 1, 1, "", "Adadelta"], [164, 1, 1, "", "Adagrad"], [165, 1, 1, "", "Adam"], [166, 1, 1, "", "AdamW"], [167, 1, 1, "", "Adamax"], [168, 1, 1, "", "NAdam"], [160, 1, 1, "", "Optimizer"], [169, 1, 1, "", "RAdam"], [170, 1, 1, "", "RMSprop"], [171, 1, 1, "", "Rprop"], [172, 1, 1, "", "SGD"]], "lucid.random": [[180, 2, 1, "", "rand"], [181, 2, 1, "", "randint"], [182, 2, 1, "", "randn"], [183, 2, 1, "", "seed"], [184, 2, 1, "", "uniform"]], "lucid.transforms": [[250, 1, 1, "", "CenterCrop"], [248, 1, 1, "", "Compose"], [251, 1, 1, "", "Normalize"], [252, 1, 1, "", "RandomCrop"], [253, 1, 1, "", "RandomGrayscale"], [254, 1, 1, "", "RandomHorizontalFlip"], [255, 1, 1, "", "RandomRotation"], [256, 1, 1, "", "RandomVerticalFlip"], [257, 1, 1, "", "Resize"], [249, 1, 1, "", "ToTensor"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [3, 7, 8, 14, 16, 19, 41, 42, 43, 44, 45, 46, 48, 49, 50, 86, 87, 88, 136, 139, 149, 150, 151, 152, 155, 156, 159, 160, 161, 175, 177, 191, 199, 217, 219, 227, 230, 232, 233, 243, 249, 251, 259], "0": [0, 1, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 24, 26, 30, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 73, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 205, 206, 208, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 221, 222, 223, 224, 227, 228, 229, 231, 232, 233, 234, 236, 239, 240, 241, 243, 244, 246, 247, 248, 250, 251, 252, 253, 254, 255, 256, 257, 259], "000": [5, 200, 201], "0000": [136, 137, 139], "0001": 162, "000e": [200, 201], "001": [162, 165, 166, 168, 169, 172], "002": [167, 168], "004": 168, "005": 109, "01": [55, 109, 160, 161, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172], "01051757": 182, "0205": 136, "0217": 136, "0227": 136, "0299": 136, "044715": [53, 108], "0450": 136, "0451": 136, "047": [36, 41], "04719755": 209, "0474259": 58, "0480": 136, "05": [82, 84, 85, 109, 126, 127, 128, 141, 142, 143, 144, 145, 146, 147], "0507": [57, 111], "06": [163, 171], "07": [76, 77, 135, 136], "0700": 136, "0706508": 114, "0721": 136, "0794": 139, "08": [165, 166, 167, 168, 169, 170], "0802": 139, "08333333": 16, "085537": 216, "0900": [113, 136], "0986": [59, 113], "09861229": 217, "0992": 136, "1": [0, 1, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 26, 30, 31, 32, 33, 34, 39, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 73, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 203, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259], "10": [0, 1, 2, 3, 20, 21, 30, 31, 32, 33, 34, 39, 40, 41, 42, 46, 47, 50, 62, 63, 73, 75, 86, 116, 117, 118, 123, 124, 131, 133, 142, 143, 145, 149, 153, 154, 156, 164, 177, 181, 184, 185, 188, 191, 194, 195, 211, 227, 250, 252, 253, 255], "100": [21, 35, 36, 37, 38, 41, 177, 259], "1000": [20, 21, 23, 24, 25, 27, 28, 34, 35, 36, 37, 38, 39, 40], "1000000": 162, "1001": 136, "1003": 136, "1007": 41, "1014": 57, "1025": [47, 50], "1026": [47, 50], "1027": [47, 50], "10499": 58, "1050": 112, "1054": 139, "1056": [47, 50], "10590": 41, "1097": 41, "11": [34, 35, 41, 73, 116, 117, 118, 123, 131, 142, 143, 145, 153, 154, 156, 191, 250, 251, 252, 253, 255], "1105": 41, "1109": 41, "1111": 135, "1134": 73, "114b": 253, "119": 73, "1192": [58, 59, 113], "12": [31, 32, 48, 73, 88, 116, 117, 118, 123, 124, 131, 142, 143, 145, 151, 153, 154, 156, 191, 195, 196, 250, 252, 253, 255], "120": [30, 33], "123": [101, 102, 103, 104, 105, 106, 183, 184], "124": [101, 102, 105, 106], "125": 154, "1250": 137, "128": [27, 34, 41, 50, 248, 259], "128x128": [248, 259], "13": [23, 34, 36, 41, 73, 116, 117, 118, 131, 143, 153, 154, 156, 191, 250, 252, 253, 255], "132": [35, 41], "133": [36, 41], "138": [37, 41], "14": [116, 117, 118, 123, 124, 131, 143, 153, 154, 156, 178, 191, 195, 250, 252, 253, 255], "1409": 41, "143": [38, 41], "145": 73, "15": [0, 73, 116, 117, 118, 131, 143, 153, 154, 156, 191, 195, 230, 250, 252, 253, 255, 259], "1513": 139, "155": 191, "1556": 41, "1588": [53, 108], "16": [30, 33, 34, 37, 41, 47, 48, 50, 87, 88, 116, 117, 118, 123, 124, 126, 127, 128, 131, 142, 143, 150, 151, 153, 154, 156, 159, 191, 195, 225, 250, 252, 253, 255], "16227766": 17, "16425": 139, "1643": 135, "166": 191, "17": [116, 117, 118, 131, 143, 154, 190, 250, 252, 253, 255], "170": 73, "17520119": 224, "18": [32, 41, 116, 117, 118, 123, 131, 143, 154, 194, 195, 250, 252, 253, 255], "1800": 136, "19": [34, 38, 41, 62, 63, 73, 117, 118, 143, 189, 191], "192": [31, 32], "1966": [59, 112, 113], "1998": [41, 136], "1_53": 41, "1d": [61, 86, 89, 93, 126, 141, 144, 149, 184, 191, 199, 230, 238, 239, 240, 241, 245], "1e": [76, 77, 82, 84, 85, 126, 127, 128, 135, 136, 141, 142, 143, 144, 145, 146, 147, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "1e6": 162, "1st": [20, 39], "2": [1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 31, 32, 33, 39, 42, 43, 44, 45, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 73, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259], "20": [0, 5, 46, 47, 50, 117, 118, 123, 143, 195, 216], "2012": 41, "2014": 41, "2015": 41, "2017": 41, "2039": 139, "204": 118, "21": [48, 73, 117, 118, 143, 195], "211": 191, "22": [27, 41, 73, 117, 118, 123, 143, 189, 191], "2231": [136, 139], "224": [20, 34, 39, 41], "2247": [141, 142, 143, 144, 145, 146, 147], "224x224": 23, "226": 191, "22752314": 182, "2278": 41, "23": [117, 118, 143], "2324": [41, 111], "234": [101, 102, 103, 104, 105, 106, 184], "24": [73, 87, 117, 118, 123, 143, 150, 195], "240": [38, 41], "2424": [59, 113], "2447": 113, "246": [31, 41], "25": [0, 41, 58, 112, 118, 138, 143, 153, 154, 188, 221, 232], "2500": [135, 137, 139], "2512": 107, "2547": 111, "256": 34, "26": [48, 75, 118, 133, 143, 195], "26325684": 182, "2689": [59, 112, 113], "27": [73, 116, 118, 143, 215], "276": [101, 102, 105, 106], "28": [31, 32, 41, 73, 118, 195], "28x28": [5, 31, 32], "29": 118, "299": 41, "299r": 253, "299x299": [24, 25, 27, 28], "2_i": [144, 145, 146], "2d": [62, 69, 87, 90, 94, 127, 142, 145, 150, 191, 199, 202, 230, 235, 238, 239, 241, 245, 255], "2e": 167, "2nd": [20, 39], "2x2": [65, 250, 252], "3": [1, 2, 3, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 20, 31, 34, 39, 41, 43, 44, 45, 47, 48, 49, 50, 53, 58, 59, 61, 62, 63, 65, 66, 67, 68, 69, 70, 73, 75, 78, 80, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 212, 214, 215, 216, 217, 218, 219, 220, 224, 225, 226, 227, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257], "30": [24, 41, 47, 98, 118, 255], "3026": 139, "31": [73, 118, 191], "310": [200, 201], "31622777": 17, "319": 41, "32": [33, 41, 47, 50, 73, 75, 87, 117, 118, 126, 127, 128, 133, 150, 159, 189, 190, 195], "321": [101, 102, 105, 106], "32x32": [30, 33], "33": [47, 50, 75, 118, 133], "33333333": 16, "336": [35, 41], "34": [47, 50, 73, 118, 191, 195], "342": [101, 102, 105, 106], "345": [101, 102, 103, 104, 105, 106, 184], "35": [28, 41, 47, 50, 118], "352": [23, 41], "3567": [135, 139], "357": [37, 40, 41], "36": 118, "3679": [52, 57, 107], "37": 116, "372": 73, "375": 138, "3750": 137, "378": [32, 41], "38344152": 180, "38629436": 217, "389056": 216, "392": [24, 41], "393": [23, 41], "3935": 107, "3d": [63, 70, 88, 91, 95, 118, 128, 143, 146, 151], "3x3": [41, 185], "4": [0, 1, 2, 3, 8, 9, 10, 11, 13, 15, 16, 17, 30, 31, 32, 41, 42, 48, 50, 61, 62, 63, 65, 68, 69, 70, 73, 75, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 131, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 162, 165, 169, 170, 172, 175, 178, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 204, 206, 212, 217, 218, 219, 220, 221, 223, 225, 226, 227, 228, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 244, 245, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257], "40": [25, 41], "400": 33, "4044": 135, "4076": 136, "4096": [20, 39], "41421356": 9, "41666667": 16, "41808962": 182, "419974": 60, "4199743": 114, "42": [73, 178, 185], "421": [101, 102, 105, 106], "423": [101, 102, 103, 104], "42718872": 17, "4278": 41, "4284": 41, "4286": 135, "43": [189, 191], "4323": 107, "4375": 137, "43758721": 180, "4472136": 11, "4495": [143, 146], "45": [73, 98, 255], "4545": 120, "47112767": 211, "48": [75, 133], "4979": 107, "4x4": 257, "5": [1, 2, 7, 8, 13, 14, 15, 16, 20, 24, 30, 31, 32, 33, 39, 41, 42, 44, 45, 46, 47, 48, 50, 53, 58, 61, 62, 63, 65, 66, 67, 68, 69, 70, 73, 75, 78, 80, 82, 84, 85, 86, 89, 90, 97, 99, 107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 152, 153, 154, 156, 157, 171, 175, 178, 181, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 201, 202, 204, 206, 208, 209, 210, 218, 219, 220, 221, 222, 227, 230, 231, 232, 233, 236, 238, 242, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259], "50": [75, 133, 171, 189, 191, 253, 254, 256, 259], "5000": [135, 137, 139], "5108": 139, "512": [28, 41], "52359878": 210, "53": [73, 190], "543": [101, 102, 103, 104, 105, 106, 184], "54308063": 214, "544": [37, 41], "545": 196, "5455": 120, "563": [101, 102, 105, 106], "57": 73, "57079633": [209, 210], "57366333": 183, "586": [25, 41], "587g": 253, "5th": [20, 39], "6": [8, 16, 20, 30, 33, 39, 48, 49, 61, 62, 63, 65, 70, 73, 75, 86, 102, 106, 116, 117, 118, 121, 122, 123, 124, 131, 133, 135, 141, 142, 143, 144, 145, 146, 147, 149, 153, 154, 156, 157, 163, 171, 175, 178, 184, 187, 188, 189, 190, 191, 194, 195, 196, 197, 198, 199, 200, 201, 204, 206, 218, 219, 220, 227, 230, 231, 232, 233, 236, 241, 242, 247, 249, 250, 251, 252, 253, 255, 257], "6052": 139, "6065": 107, "608": [40, 41], "61": [21, 33, 41], "6124": [141, 142, 143, 144, 145, 146, 147], "62": [40, 41, 73], "62686041": 224, "6321": [52, 107], "63245553": 17, "64": [34, 47, 50, 73], "64589411": 180, "654": [101, 102, 103, 104, 105, 106, 184], "657": [101, 102, 105, 106], "6590": [59, 113], "6652": 113, "66666667": 16, "6667": 135, "667": [38, 41], "6682": 135, "67": 191, "67326": 111, "6733": 57, "678": [101, 102, 103, 104, 105, 106], "68811989": 182, "69314718": 217, "7": [15, 34, 48, 61, 62, 63, 65, 70, 73, 75, 76, 77, 86, 108, 111, 112, 114, 116, 117, 118, 123, 124, 131, 133, 135, 136, 138, 142, 143, 145, 146, 149, 153, 154, 156, 157, 178, 181, 184, 187, 189, 190, 191, 195, 197, 199, 216, 219, 227, 230, 231, 232, 245, 249, 250, 251, 252, 253, 255, 257], "70": 5, "7001": 136, "706": [33, 41], "70710678": [11, 223], "7147": 139, "7182818": 216, "726791": 41, "7311": [59, 112, 113], "739": [27, 41], "74": 191, "75": [75, 133, 138, 162], "7581": 57, "76159416": 229, "7616": [60, 114], "76219569": 214, "7635": 111, "772": 196, "78357324": 182, "78539816": 211, "79172504": 180, "7x7": 39, "8": [14, 18, 42, 47, 48, 50, 61, 62, 63, 65, 70, 73, 75, 76, 86, 87, 88, 108, 111, 112, 114, 116, 117, 118, 121, 122, 123, 124, 126, 127, 128, 131, 133, 135, 138, 142, 143, 145, 146, 149, 150, 151, 153, 154, 156, 157, 165, 166, 167, 168, 169, 170, 178, 181, 188, 189, 190, 191, 195, 196, 198, 199, 215, 219, 227, 230, 231, 232, 249, 250, 251, 252, 253, 255, 257], "80": 5, "8005": 136, "817": [24, 41], "818": 41, "8182": 120, "82": 73, "833": 41, "84": [30, 32, 33], "840": [21, 41], "8413": [53, 108], "847": [28, 41], "848": [36, 41], "8584": 111, "86": 41, "863": [35, 41], "876": [101, 102, 105, 106, 184], "8808": [59, 112, 113], "887": 196, "891773": 180, "89442719": 11, "9": [0, 1, 3, 5, 18, 41, 62, 65, 73, 75, 86, 116, 117, 118, 123, 131, 133, 135, 142, 143, 145, 149, 153, 154, 156, 162, 163, 165, 166, 167, 168, 169, 170, 172, 178, 181, 184, 187, 191, 195, 196, 197, 199, 225, 226, 249, 250, 251, 252, 253, 255], "90709145": 183, "9091": 120, "9120": 139, "9163": 139, "9486833": 17, "949e": [200, 201], "9526": 58, "9545": 108, "96366276": 180, "9640": 114, "96402758": 229, "978": 41, "984": [25, 41], "99": 170, "9957": 139, "99734545": 183, "999": [0, 165, 166, 167, 168, 169], "A": [1, 3, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 26, 30, 34, 35, 36, 37, 38, 44, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 73, 75, 76, 77, 81, 82, 84, 85, 97, 120, 121, 122, 123, 124, 135, 136, 139, 141, 142, 143, 144, 145, 146, 147, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 178, 180, 181, 182, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 255], "As": 183, "Be": 0, "By": [0, 2, 3, 7, 45, 98, 159, 169, 175, 180, 181, 182, 184, 249, 259], "For": [2, 3, 4, 7, 9, 10, 11, 13, 14, 15, 16, 18, 50, 52, 53, 55, 56, 57, 58, 60, 73, 75, 97, 101, 102, 105, 106, 111, 116, 117, 118, 131, 133, 141, 142, 143, 144, 145, 146, 159, 161, 183, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 216, 217, 218, 219, 220, 223, 225, 227, 230, 231, 232, 239, 241, 243, 245, 246, 259], "If": [0, 1, 2, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 42, 44, 46, 47, 48, 49, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 70, 73, 75, 82, 84, 87, 88, 97, 98, 101, 102, 116, 117, 118, 126, 127, 128, 131, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 160, 165, 166, 170, 171, 177, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 253, 254, 256, 257], "In": [3, 7, 16, 61, 62, 63, 136, 139, 174, 175, 176, 248, 259], "It": [1, 2, 3, 7, 16, 17, 18, 20, 22, 23, 24, 30, 31, 32, 33, 34, 41, 44, 46, 47, 48, 49, 50, 70, 73, 97, 98, 108, 110, 114, 126, 127, 128, 131, 132, 135, 136, 137, 138, 139, 149, 150, 151, 159, 160, 161, 162, 168, 170, 171, 172, 175, 183, 187, 188, 189, 192, 193, 194, 196, 197, 218, 220, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 247, 248, 249], "Its": [18, 185], "Near": 16, "No": 65, "Not": 132, "One": [31, 259], "The": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 73, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259], "There": 242, "These": [4, 7, 8, 11, 14, 17, 19, 41, 120, 121, 122, 123, 124, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 171, 178, 185, 259], "To": [3, 41, 161, 182, 185, 200, 201, 238, 259], "With": [3, 65, 249, 259], "_": [14, 46, 47, 49, 50, 52, 53, 55, 56, 57, 58, 60, 75, 97, 142, 143, 144, 145, 146, 152, 153, 154, 155, 156, 157, 162, 163, 165, 166, 167, 168, 170, 172, 189, 190, 191, 195, 230, 231, 250, 251, 252, 254, 255, 256], "_1": [11, 46, 47, 48, 49, 50, 73, 131, 195, 234, 236, 247], "_2": [11, 46, 47, 48, 49, 50, 73, 131, 195, 234, 236, 247], "__call__": [1, 44], "__getitem__": [0, 2, 3, 5], "__init__": [0, 1, 2, 3, 7, 20, 22, 26, 30, 34, 39, 42, 43, 44, 45, 46, 47, 48, 49, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 131, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 177, 186, 248, 249], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5], "__repr__": 160, "__setattr__": 44, "_activ": 59, "_arraylik": [178, 199, 201, 204, 206], "_arraylikeint": 239, "_arrayorscalar": [43, 45, 178, 186, 233], "_base_dtyp": [198, 200, 203, 205], "_c": 251, "_decai": 168, "_fanmod": [101, 102], "_grad_en": [174, 176], "_i": [11, 15, 59, 73, 113, 138, 141, 147, 152, 155, 189, 190, 192, 193, 195, 196, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 241, 243, 246, 247], "_in": [101, 102, 105, 106], "_j": [59, 113, 152, 155, 195, 219, 227, 231, 232], "_k": 244, "_left": 97, "_make_lay": 34, "_modul": 44, "_n": [11, 46, 47, 48, 49, 50, 234, 236, 247], "_numpyarrai": 178, "_out": [101, 102, 105, 106, 241, 245], "_p": 15, "_pad": 239, "_paddingstr": [116, 117, 118, 126, 127, 128], "_paramet": 44, "_reductiontyp": [76, 77, 78, 80, 81, 135, 136, 137, 138, 139], "_right": 97, "_scalar": [99, 103, 104, 105, 106, 178, 198, 212], "_shapelik": [42, 85, 147, 178, 181, 203, 205, 242, 243, 246], "_size": [86, 87, 88], "_slope": 109, "_statedict": 160, "_t": [169, 170], "_tensor": [43, 45, 199, 233], "_tensorop": 186, "_u": 16, "_v": 16, "_valu": [212, 239], "_width": 239, "a_i": [192, 193, 196], "aaai": 41, "ab": 207, "abc": [2, 160], "abil": [7, 259], "about": [7, 42], "abov": [7, 174, 176, 183, 199, 202], "absolut": [14, 15, 78, 167, 208], "abstract": [2, 3, 159, 160, 161, 162, 170, 172], "abstractmethod": 160, "acceler": [41, 111, 141, 142, 143, 162, 168, 170, 172], "accept": [132, 180, 186], "access": [0, 2, 3, 4, 5, 43, 45, 46, 47, 48, 49, 50, 242], "accord": [97, 116, 117, 118, 131, 133, 136, 139, 163, 164, 165, 166, 167, 168, 169, 231], "accordingli": 10, "account": [14, 16, 17], "accumul": [162, 163, 164, 187, 188, 192, 193, 194, 197], "accuraci": 41, "achiev": [41, 61, 62, 63, 86, 149, 150, 151, 168, 254, 256], "across": [0, 43, 47, 50, 85, 86, 87, 88, 105, 106, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 178, 180, 181, 182, 183, 184, 185, 200, 201, 219, 232], "act": 166, "activ": [7, 20, 34, 39, 41, 46, 50, 52, 53, 55, 56, 57, 58, 59, 60, 66, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 120, 121, 122, 123, 124, 126, 127, 128, 135, 136, 139, 141, 142, 143, 147, 218, 220], "actual": [45, 135, 136, 138, 139, 186, 252], "ad": [44, 46, 47, 48, 49, 50, 61, 62, 63, 73, 75, 76, 77, 82, 84, 85, 89, 90, 91, 93, 94, 95, 116, 117, 118, 126, 127, 128, 135, 136, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 163, 164, 165, 166, 167, 168, 169, 170, 177, 246, 259], "adadelta": 173, "adagrad": [163, 173], "adam": [166, 167, 168, 169, 173], "adamax": 173, "adamw": 173, "adapt": [20, 22, 30, 34, 39, 86, 87, 88, 149, 150, 151, 163, 164, 165, 168, 169, 170, 171], "adaptive_avg_pool1d": [72, 92, 149], "adaptive_avg_pool2d": [72, 92, 150], "adaptive_avg_pool3d": [72, 92, 151], "adaptiveavgpool1d": [130, 158], "adaptiveavgpool2d": [20, 34, 39, 130, 158], "adaptiveavgpool3d": [130, 158], "add": [4, 44, 46, 47, 50, 73, 75, 116, 117, 118, 131, 133, 147, 160, 162, 165, 170, 172, 175, 207, 239, 246], "add_modul": [44, 50], "add_param_group": 160, "addit": [4, 7, 14, 21, 22, 23, 24, 25, 27, 28, 35, 36, 37, 38, 40, 44, 47, 50, 73, 75, 82, 84, 131, 133, 141, 142, 143, 144, 145, 146, 162, 168, 175, 185, 187, 244], "addition": 168, "address": [136, 139, 165, 166, 169], "adjust": [27, 86, 87, 88, 120, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 161, 165, 169, 170, 171, 236, 247], "advanc": [3, 16, 41, 47, 50, 61, 62, 63, 86, 87, 88, 149, 150, 151, 159, 162], "advantag": [28, 176], "affect": [174, 240, 243, 248], "affin": [126, 127, 128, 141, 142, 143, 144, 145, 146, 147, 255], "after": [14, 20, 39, 45, 46, 47, 48, 49, 50, 70, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 120, 121, 122, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 147, 152, 153, 154, 155, 156, 157, 166, 176, 186, 187, 188, 192, 193, 194, 196, 197, 239, 249], "afterward": 176, "aggreg": [195, 241, 245], "aim": [4, 7], "al": [23, 41], "alex": 41, "alexnet": [29, 39, 41], "algebra": [7, 8, 202], "algorithm": [7, 14, 16, 17, 160, 161, 185], "align": [18, 97, 190, 191], "align_corn": 97, "all": [0, 3, 4, 7, 17, 44, 46, 47, 48, 49, 50, 62, 63, 86, 87, 88, 90, 91, 94, 95, 97, 109, 110, 118, 127, 128, 149, 150, 151, 153, 154, 157, 159, 160, 161, 162, 165, 170, 171, 172, 196, 218, 219, 220, 227, 230, 232, 234, 235, 236, 241, 243, 244, 245, 247, 250, 251, 259], "allevi": 52, "alloc": [200, 201], "allow": [0, 1, 3, 4, 7, 16, 17, 28, 30, 41, 45, 46, 47, 48, 49, 50, 52, 55, 56, 59, 63, 65, 98, 107, 108, 109, 111, 112, 113, 114, 116, 117, 118, 159, 163, 164, 175, 198, 203, 205, 206, 231, 233, 238, 248, 249, 259], "along": [59, 97, 113, 190, 191, 195, 218, 219, 220, 227, 230, 232, 234, 236, 238, 241, 244, 245, 246, 247, 254, 256], "alongsid": 43, "alpha": [52, 55, 57, 66, 107, 111, 120, 162, 170], "alpha_dropout": [71, 72, 120], "alphadropout": [125, 130], "alphadropoutmodel": 120, "alreadi": 177, "also": [42, 52, 53, 55, 56, 57, 58, 60, 73, 75, 97, 168, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 201, 205, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 228, 229, 234, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247], "alter": [50, 242], "altern": [1, 108, 163, 191], "alwai": [45, 240, 253, 254, 256], "among": 24, "amount": [61, 62, 63, 89, 90, 91, 93, 94, 95, 168], "amsgrad": [165, 166], "an": [0, 1, 3, 7, 11, 13, 14, 16, 17, 19, 21, 23, 24, 25, 27, 28, 30, 31, 32, 33, 39, 40, 42, 44, 46, 47, 48, 49, 50, 53, 61, 62, 63, 65, 66, 67, 68, 69, 70, 73, 87, 88, 97, 98, 105, 106, 107, 112, 116, 117, 118, 120, 121, 122, 123, 124, 131, 133, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 161, 162, 165, 168, 170, 176, 177, 178, 186, 191, 199, 202, 212, 219, 227, 232, 234, 241, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259], "analog": [241, 245], "analysi": [4, 116, 117, 118, 146, 152, 154, 155, 157], "andrew": 41, "angl": [98, 255], "ani": [0, 1, 2, 3, 14, 16, 21, 40, 43, 44, 45, 46, 48, 49, 52, 53, 55, 56, 57, 58, 60, 66, 67, 73, 75, 82, 84, 112, 147, 159, 160, 174, 176, 177, 183, 186, 198, 199, 200, 202, 203, 204, 205, 206, 218, 220, 231, 233, 234, 235, 236, 239, 241, 244, 245, 246, 247, 248, 259], "anoth": [49, 197, 204, 206, 249, 259], "api": [4, 149, 150, 151, 259], "appear": 160, "append": [47, 49, 50], "appli": [2, 4, 5, 7, 14, 20, 39, 41, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 63, 65, 66, 67, 68, 69, 70, 73, 75, 76, 77, 78, 80, 81, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 131, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 162, 163, 164, 166, 167, 168, 169, 191, 239, 241, 248, 251, 253, 254, 255, 256, 257, 259], "applic": [4, 16, 27, 28, 61, 84, 116, 117, 118, 131, 133, 185, 198, 205, 239, 257], "approach": [3, 26, 50, 166], "appropri": [16, 44, 48, 50, 116, 117, 118, 120, 121, 122, 136, 153, 154, 174, 176], "approx": 57, "approxim": [16, 53, 108, 153, 156], "ar": [1, 2, 3, 4, 7, 10, 11, 13, 14, 16, 17, 18, 19, 22, 23, 24, 41, 43, 44, 45, 46, 47, 48, 49, 50, 59, 61, 62, 63, 65, 73, 75, 87, 88, 97, 101, 102, 104, 105, 106, 113, 116, 117, 118, 120, 121, 122, 123, 124, 131, 133, 136, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 162, 165, 166, 168, 169, 170, 171, 172, 174, 176, 177, 178, 180, 181, 182, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 208, 212, 216, 218, 219, 220, 221, 222, 227, 230, 231, 234, 238, 241, 242, 245, 248, 249, 250, 252, 253, 257, 259], "arang": 207, "arbitrari": [47, 132, 200, 201, 212, 217, 219, 223, 225, 227, 231, 232], "arcco": 207, "arch": 177, "architectur": [21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 35, 36, 37, 38, 40, 41, 42, 46, 47, 48, 49, 50, 53, 110, 131, 132, 159, 177], "arcsin": 207, "arctan": 207, "area": 97, "arg": [44, 132, 177, 200], "argument": [3, 4, 21, 22, 23, 24, 25, 27, 28, 30, 35, 36, 37, 38, 40, 44, 50, 132, 180, 200, 231], "around": [11, 98, 114], "arr": [178, 234, 236, 244, 247], "arrai": [7, 43, 45, 175, 178, 186, 191, 199, 204, 206, 233, 240, 241, 249, 259], "art": 41, "artifici": 41, "arxiv": 41, "asarrai": 178, "asgd": 173, "aspect": 257, "assign": [44, 46, 48, 50, 97, 136, 139], "assist": [22, 23, 24], "associ": [48, 49], "assum": [0, 1, 160, 161, 174], "attempt": [46, 50], "attent": [49, 73], "attribut": 44, "audio": 116, "augment": [3, 4, 98, 185, 241, 245, 248, 252, 253, 254, 255, 256, 259], "autodiff": 7, "autograd": 159, "automat": [4, 7, 45, 46, 47, 48, 49, 159, 180, 181, 182, 184, 186, 200, 201, 206, 238, 249], "auxiliari": [22, 23, 24, 43], "avail": [4, 5, 7], "averag": [20, 31, 32, 33, 34, 39, 43, 86, 87, 88, 89, 90, 91, 97, 138, 149, 150, 151, 152, 153, 154, 162, 163, 165, 170, 219], "avg_pool": [152, 153, 154], "avg_pool1d": [72, 92], "avg_pool2d": [72, 92], "avg_pool3d": [72, 92], "avgpool": [20, 34, 39], "avgpool1d": [130, 158], "avgpool1dmodel": 152, "avgpool2d": [130, 158], "avgpool2dmodel": 153, "avgpool3d": [130, 158], "avgpool3dmodel": 154, "avoid": [2, 3, 16, 48, 176], "ax": [8, 175, 218, 219, 220, 227, 231, 232, 241, 243, 245], "axi": [59, 113, 190, 191, 218, 219, 220, 227, 232, 234, 236, 238, 239, 241, 243, 244, 245, 246, 247, 254, 256], "b": [8, 18, 73, 75, 104, 116, 117, 118, 131, 133, 175, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 234, 236, 244, 247, 253], "b_i": [192, 193, 196], "back": [97, 153, 154, 177, 190, 195, 241, 245], "backpropag": [7, 10, 11, 13, 14, 16, 17, 19, 41, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 73, 75, 97, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 159, 176, 182, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 216, 218, 220, 233, 239, 241, 245, 249], "backward": [7, 43, 45, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 186, 249], "balanc": 137, "bar": 162, "base": [3, 8, 13, 14, 17, 18, 22, 23, 24, 25, 26, 27, 28, 30, 34, 41, 44, 46, 47, 48, 49, 65, 73, 86, 87, 88, 120, 136, 137, 149, 150, 151, 159, 160, 161, 162, 166, 170, 171, 172, 187, 188, 192, 193, 194, 196, 197, 206, 216, 217, 218, 220, 231, 238, 239, 252, 253, 254, 255, 256], "basic": [7, 20, 39, 42, 61, 62, 63, 86, 87, 88, 101, 102, 105, 106, 126, 127, 128, 149, 150, 151, 250, 251, 252, 253, 254, 255, 256, 257], "batch": [1, 2, 3, 8, 14, 17, 19, 23, 24, 25, 27, 28, 61, 62, 63, 65, 68, 69, 70, 73, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 116, 117, 118, 126, 127, 128, 131, 133, 135, 136, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 157, 169, 191, 250, 251, 252, 253, 255, 257], "batch_norm": [72, 83, 141, 142, 143], "batch_norm1": 50, "batch_norm2": 50, "batch_siz": [1, 2, 3], "batchnorm": [126, 127, 128], "batchnorm1d": [126, 130, 148], "batchnorm1dmodel": 141, "batchnorm2d": [50, 127, 130, 148], "batchnorm2dmodel": 142, "batchnorm3d": [128, 130, 148], "batchnorm3dmodel": 143, "bceloss": [130, 140], "becaus": [2, 181], "becom": [15, 44, 163, 171], "befor": [14, 42, 45, 162, 168, 176, 183, 239, 251, 259], "begin": [1, 15, 52, 55, 56, 57, 107, 109, 110, 111, 137, 138, 139, 152, 153, 154, 155, 156, 157, 169, 171, 175, 185, 192, 193, 195, 208, 212, 218, 220, 222, 239], "behav": [137, 230], "behavior": [41, 47, 50, 174, 185, 191, 201, 259], "being": [49, 98, 120, 121, 122, 123, 124, 169, 174, 176, 234, 236, 247], "belong": 0, "below": [17, 23, 24, 25, 27, 28, 30, 31, 32, 33, 191, 199, 202], "benchmark": 5, "benefici": 50, "benefit": [52, 159, 168, 178], "bernoulli": [120, 121, 122, 123, 124], "best": [101, 102, 105, 106], "beta": [141, 142, 143, 144, 145, 146, 147, 165, 166, 167, 168, 169], "beta1": [165, 166, 167, 168, 169], "beta2": [165, 166, 167, 168, 169], "beta_1": [165, 166, 167, 168, 169], "beta_2": [165, 166, 167, 168, 169], "better": [13, 39, 41, 53, 101, 102, 105, 106, 144, 145, 146, 159, 166, 168, 170, 251], "between": [44, 61, 62, 63, 65, 73, 78, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 131, 135, 136, 137, 138, 139, 162, 170, 171, 172, 185, 187, 188, 191, 194, 197, 198, 232, 253, 254, 256, 257], "beyond": [7, 47], "bia": [61, 62, 63, 73, 75, 82, 84, 85, 116, 117, 118, 126, 127, 128, 131, 133, 141, 142, 143, 144, 145, 146, 147, 165, 166, 167, 168, 169], "bias": [116, 117, 118, 133, 147, 159], "bias1": 48, "bias2": 48, "bilinear": [72, 74, 97, 130, 134], "bilinearmodel": 131, "binari": [58, 76, 112, 120, 121, 122, 123, 124, 135], "binary_cross_entropi": [72, 79], "block": [26, 44, 65, 116, 117, 118, 126, 127, 128, 176], "block1": [42, 159], "block2": [42, 159], "blue": 253, "bmatrix": 195, "bn": [126, 127, 128], "bn_affin": [126, 127, 128], "bool": [1, 5, 19, 22, 23, 24, 42, 44, 45, 66, 67, 68, 69, 70, 82, 84, 97, 116, 117, 118, 126, 127, 128, 131, 133, 141, 142, 143, 144, 145, 146, 147, 165, 166, 170, 174, 180, 181, 182, 184, 186, 198, 199, 200, 201, 202, 203, 204, 205, 206, 218, 219, 220, 227, 232, 233, 249], "both": [61, 75, 87, 89, 93, 108, 116, 117, 126, 150, 152, 153, 155, 156, 189, 190, 191, 195, 199, 238, 257], "bottom": 97, "bound": [102, 104, 106, 171, 184], "box": 4, "branch": [22, 23, 24, 41], "break": 159, "brief": 259, "bright": 259, "broadcast": [123, 124, 219, 227, 232, 242, 246], "buffer": [162, 168, 170, 172], "build": [7, 28, 41, 44, 47, 50, 159, 259], "built": [3, 7, 50, 159], "burg": 5, "c": [5, 65, 68, 69, 70, 77, 81, 82, 84, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 123, 124, 136, 139, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 175, 236, 247, 251], "c_": [116, 117, 118], "c_in": [61, 62, 63, 126, 127, 128], "c_out": [61, 62, 63], "calcul": [0, 1, 7, 8, 45, 163, 164, 167, 168, 169, 176, 181, 186], "calculu": [9, 16], "call": [1, 44, 174, 177, 187, 188, 191, 192, 193, 194, 196, 197], "callabl": [160, 177, 248], "can": [0, 2, 3, 4, 7, 9, 11, 13, 14, 16, 17, 19, 42, 43, 45, 46, 47, 48, 49, 50, 55, 61, 62, 63, 98, 108, 109, 114, 116, 117, 118, 144, 145, 146, 153, 154, 155, 156, 157, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 178, 184, 185, 186, 191, 200, 201, 202, 203, 205, 206, 219, 227, 232, 236, 238, 239, 241, 242, 245, 246, 247, 248, 249, 252, 254, 255, 256, 259], "cannot": [10, 11, 13, 14, 17, 18, 19], "capabl": [7, 198, 199, 202, 203, 204, 205, 206], "captur": [65, 116, 117, 118, 131], "care": 176, "cartesian": 238, "case": [3, 15, 30, 52, 55, 56, 57, 107, 109, 110, 111, 137, 138, 139, 152, 153, 154, 155, 156, 157, 159, 164, 169, 171, 175, 192, 193, 208, 212, 218, 220, 222, 239, 259], "caus": [3, 16, 162, 170, 172], "cautiou": 0, "cdot": [9, 10, 13, 14, 15, 18, 52, 53, 55, 57, 58, 61, 62, 63, 73, 75, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 105, 106, 108, 112, 120, 131, 133, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 163, 164, 165, 166, 167, 168, 169, 171, 189, 190, 191, 194, 196], "center": [98, 114, 170, 250, 259], "centercrop": [258, 259], "central": 178, "certain": [10, 53, 73, 131, 165, 166, 174, 218, 220], "chain": [13, 14, 50, 248, 259], "challeng": 41, "cham": 41, "chanc": [253, 254, 256], "chang": [78, 137, 171, 175, 176, 177, 240, 242, 246, 253, 259], "channel": [30, 31, 32, 33, 34, 61, 62, 63, 65, 68, 69, 70, 82, 84, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 116, 117, 118, 123, 124, 126, 127, 128, 141, 142, 143, 144, 145, 146, 149, 152, 153, 154, 155, 156, 157, 251, 253, 257], "check": [174, 250, 252], "checkpoint": 161, "choic": 238, "choleski": 12, "chosen": 120, "christian": 41, "christoph": 5, "clariti": 178, "class": [3, 4, 7, 21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 40, 42, 59, 77, 81, 159, 161, 177, 199, 202, 233, 259], "classic": 33, "classif": [4, 20, 21, 22, 23, 24, 25, 26, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 58, 59, 76, 77, 81, 112, 113, 135, 136, 139], "classifi": [20, 22, 23, 24, 30, 31, 32, 33, 34, 39], "cleaner": [1, 176, 191], "clear": [45, 186, 200, 201], "clearli": 178, "clf_in_featur": 30, "clf_layer": 30, "clip": [98, 171, 207], "clockwis": 98, "close": [13, 16, 111, 135, 170], "closer": 107, "closur": [160, 161], "cnn": 41, "co": [207, 223], "code": [14, 46, 48, 50, 174, 176, 178, 185], "coeffici": [18, 97, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172], "col": 65, "collect": [4, 8, 41, 46, 47, 49, 50, 161], "color": [253, 259], "colorjitt": 259, "column": [10, 11, 13, 17, 18, 19, 42, 65, 202, 236, 238], "com": 5, "combin": [1, 3, 25, 26, 27, 41, 47, 50, 52, 53, 108, 126, 127, 128, 136, 159, 168, 169, 219, 227, 232, 234, 259], "combined_dataset": [0, 1], "common": [65, 98, 161, 259], "commonli": [7, 53, 58, 59, 60, 61, 63, 73, 80, 82, 84, 98, 105, 106, 113, 118, 135, 138, 139, 152, 153, 154, 155, 156, 157, 175, 178, 203, 243, 249, 250, 251, 252, 254, 255, 256, 259], "compar": [39, 185, 244], "compat": [4, 8, 132, 147, 159, 175, 185, 249, 259], "complex": [2, 3, 7, 11, 28, 42, 46, 47, 50, 56, 110, 155, 157, 159, 161, 259], "compon": [16, 22, 23, 24, 25, 26, 27, 28, 44, 47, 161, 186, 259], "compos": [5, 116, 117, 118, 152, 153, 154, 155, 156, 157, 159, 259], "comprehens": 3, "comput": [7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 41, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 65, 73, 75, 76, 77, 78, 80, 81, 82, 84, 86, 87, 88, 97, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 131, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 170, 174, 175, 176, 178, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 208, 209, 210, 211, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 238, 239, 241, 245, 249, 259], "computation": [3, 16], "compute_loss": [161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "concaten": [0, 61, 62, 63, 236, 237, 244, 247], "concept": [7, 16, 41], "condit": [9, 10, 13], "confer": 41, "config": 34, "configur": [21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 40, 49, 126, 127, 128], "conjunct": [65, 139], "connect": [20, 25, 26, 27, 28, 30, 31, 32, 33, 34, 39, 41, 75, 116, 117, 118, 133], "consecut": 34, "consid": [3, 13, 16, 50, 101, 102, 105, 106, 159, 171, 174, 200, 201, 259], "consider": 16, "consist": [2, 4, 20, 31, 32, 33, 43, 86, 87, 88, 149, 150, 151, 178, 183, 185, 239, 250, 257, 259], "consistent_tensor": 185, "consol": 42, "constant": [76, 77, 82, 84, 85, 100, 111, 135, 136, 141, 142, 143, 144, 145, 146, 147, 163, 164, 165, 166, 167, 168, 169, 170, 178, 239], "constant_pad": 239, "constraint": 1, "construct": [7, 35, 36, 37, 38, 47, 159, 199, 241, 245], "constructor": [35, 36, 37, 38], "contain": [1, 5, 10, 11, 16, 17, 18, 19, 26, 30, 34, 42, 44, 46, 47, 48, 49, 50, 59, 65, 73, 75, 76, 77, 81, 97, 135, 136, 139, 160, 187, 188, 189, 190, 192, 193, 194, 195, 197, 198, 201, 208, 209, 210, 211, 213, 214, 215, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 235, 238], "content": 98, "context": [174, 176], "contextmanag": 176, "contigu": 240, "continu": [109, 182], "contrast": [144, 145, 146, 259], "contribut": [97, 120, 121, 122, 123, 124, 152, 155, 156, 157, 162, 168, 230], "control": [107, 137, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 185, 249, 259], "conv": [26, 126, 127, 128, 142, 143], "conv1": [31, 32, 33, 50, 116, 117, 118, 152, 153, 154, 155, 156, 157], "conv1d": [64, 72, 119, 126, 130, 152, 155], "conv1dmodel": 116, "conv2": [31, 32, 33, 50, 116, 117, 118], "conv2d": [47, 50, 64, 72, 119, 127, 130, 142, 153, 156, 159], "conv2dmodel": 117, "conv3d": [64, 72, 119, 128, 130, 143, 154, 157], "conv3dmodel": 118, "conv_bia": [126, 127, 128], "conv_config": 34, "conv_lay": [30, 47], "convblock": 159, "convbnrelu1d": [129, 130], "convbnrelu2d": [129, 130], "convbnrelu3d": [129, 130], "conveni": [4, 21, 40], "convent": 191, "converg": [16, 114, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 251], "convers": [136, 139, 253, 259], "convert": [5, 34, 43, 45, 59, 113, 186, 238, 248, 249, 253, 259], "convnetwork": 47, "convolut": [20, 21, 23, 24, 26, 30, 31, 32, 33, 34, 39, 40, 41, 47, 61, 62, 63, 65, 116, 117, 118, 126, 127, 128, 153, 154, 156, 157, 239], "convolv": [61, 62, 63, 116, 117, 118], "coordin": 238, "core": [0, 1, 2, 3, 44, 159, 160, 186, 259], "corinna": 5, "corner": [97, 250, 252], "correct": [46, 136, 139, 165, 166, 167, 168, 169, 249], "correctli": [16, 44, 46, 47, 48, 49, 50, 136, 139, 185], "correspond": [0, 1, 2, 5, 11, 46, 48, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 73, 75, 97, 110, 113, 131, 133, 141, 142, 143, 144, 145, 146, 153, 154, 162, 170, 172, 189, 190, 192, 193, 196, 216, 217, 223, 225, 236, 239, 241, 245, 247], "cort": 5, "cosh": [207, 224, 229], "cosin": [209, 213, 214, 223], "cost": 41, "could": 44, "count": [41, 42, 234], "counterclockwis": [98, 255], "cover": [8, 61, 62, 63], "coverag": [86, 87, 88], "creat": [2, 3, 7, 20, 21, 23, 24, 25, 27, 28, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 47, 50, 159, 175, 177, 185, 198, 202, 203, 204, 205, 206, 238, 244, 248, 259], "creation": [47, 50, 259], "criterion": [135, 136, 137, 138, 139], "critic": [16, 161, 185], "crop": [250, 252, 259], "cross": [76, 77, 135, 136], "cross_entropi": [72, 79], "crossentropyloss": [130, 140], "cube": 207, "cumul": [53, 108], "current": [44, 162, 165, 171, 174], "custom": [4, 7, 20, 21, 27, 28, 30, 34, 39, 40, 43, 46, 47, 48, 49, 50, 98, 107, 109, 126, 127, 128, 159, 185, 202], "custom_config": 34, "custom_lenet": 30, "customiz": 259, "custommodul": 43, "customnetwork": 46, "customparametermodel": [48, 49], "cvpr": 41, "d": [41, 63, 70, 88, 91, 95, 128, 143, 146, 147, 151, 154, 157, 175, 199, 255], "d_": [63, 88, 91, 95, 118, 151, 154, 157], "d_1": 147, "d_2": 147, "d_n": 147, "d_out": [63, 91, 95], "dampen": [162, 170, 172], "data": [4, 5, 7, 14, 43, 45, 49, 60, 61, 63, 65, 69, 70, 75, 98, 110, 114, 116, 117, 118, 126, 127, 128, 133, 146, 152, 154, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 178, 185, 186, 187, 188, 194, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 233, 239, 240, 241, 242, 243, 245, 248, 249, 252, 253, 254, 255, 256, 259], "databas": 5, "dataload": [2, 3], "dataset": [3, 31, 32, 33, 98, 164, 176, 248, 250, 259], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 195, "debug": [42, 50, 174, 183, 259], "decai": [162, 163, 164, 165, 166, 167, 168, 169, 170, 172], "decompos": [9, 17, 19], "decomposit": [8, 9, 13, 16, 17, 19], "decor": 177, "decoupl": [163, 164, 166, 167, 168, 169], "decreas": [165, 166, 171], "deep": [1, 3, 4, 7, 26, 41, 82, 108, 111, 159, 185, 248, 249, 259], "deeper": [7, 23, 25, 28, 41, 111], "def": [0, 1, 2, 3, 7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 73, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 131, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249], "default": [1, 5, 15, 19, 20, 21, 22, 23, 24, 25, 27, 28, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 52, 55, 59, 61, 62, 63, 66, 67, 68, 69, 70, 76, 77, 78, 80, 81, 82, 84, 85, 89, 90, 91, 93, 94, 95, 97, 98, 101, 102, 103, 104, 105, 106, 107, 109, 113, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 131, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 160, 161, 168, 174, 180, 181, 182, 184, 186, 198, 199, 200, 201, 202, 203, 204, 205, 206, 218, 219, 220, 227, 231, 232, 233, 234, 236, 238, 239, 241, 244, 247, 249, 253, 254, 256], "defin": [1, 3, 4, 7, 22, 23, 24, 25, 26, 27, 28, 30, 34, 46, 47, 48, 49, 50, 108, 135, 136, 137, 138, 139, 152, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 181, 182, 196, 201, 212, 231, 248, 259], "definit": [7, 9, 126, 127, 128, 259], "degre": [98, 255, 259], "delai": 162, "delta": [59, 78, 113, 137, 163], "delta_": [59, 113], "demonstr": [7, 8, 41, 159, 178], "denomin": [82, 84, 85, 126, 127, 128, 141, 142, 143, 144, 145, 146, 147, 163, 164, 165, 166, 167, 168, 169, 170, 188], "denot": [14, 112, 116, 117, 118, 120, 121, 122, 123, 124, 231], "dens": [7, 164], "dense1": 7, "dense2": 7, "densiti": [53, 108], "depend": [7, 14, 15, 49, 76, 77, 78, 80, 81, 97, 116, 189, 199, 218, 220, 241, 245, 252, 253, 257], "depth": [47, 63, 70, 88, 91, 95, 118, 143, 146, 151, 154, 157], "depthwis": [61, 62, 63], "deriv": [16, 17, 59, 86, 87, 88, 108, 113, 114, 116, 117, 118, 131, 133, 177], "descend": 19, "descent": [7, 162, 172], "describ": [10, 11], "descript": 259, "deseri": 43, "design": [3, 4, 7, 8, 20, 21, 23, 24, 25, 31, 32, 33, 40, 41, 45, 47, 48, 49, 50, 52, 57, 111, 120, 159, 178, 259], "desir": [43, 86, 87, 88, 149, 150, 151, 231, 233], "destin": 44, "det": [8, 12], "det_a": 10, "detail": [7, 42, 161, 185, 191], "determin": [0, 7, 8, 9, 10, 30, 86, 87, 88, 101, 102, 105, 106, 116, 117, 118, 149, 150, 151, 153, 154, 156, 157, 170, 174, 180, 181, 182, 184, 200, 201, 250, 252], "determinist": 98, "develop": [7, 159, 185, 259], "deviat": [101, 103, 105, 248, 251, 259], "diag": [16, 207], "diagon": [16, 17, 19, 199, 202, 230], "diagonaliz": 11, "dict": [21, 23, 24, 25, 27, 28, 30, 40, 44, 46, 48, 132, 160], "dictionari": [30, 44, 45, 46, 48, 50, 160], "differ": [0, 14, 22, 30, 47, 50, 59, 73, 97, 113, 131, 138, 161, 175, 183, 185, 197, 206, 232, 243, 259], "differenti": [7, 9, 18, 108, 159, 180, 181, 182, 184, 186, 198, 200, 201, 203, 205], "digit": [5, 33, 41], "dilat": [61, 62, 63, 116, 117, 118, 126, 127, 128], "dilation_height": 65, "dilation_width": 65, "dim": [136, 139], "dimens": [10, 11, 13, 14, 17, 18, 19, 20, 34, 39, 45, 59, 73, 75, 82, 84, 85, 87, 88, 97, 113, 116, 117, 118, 141, 142, 143, 144, 145, 146, 147, 150, 151, 153, 154, 155, 156, 157, 175, 178, 180, 184, 186, 190, 200, 218, 219, 220, 227, 230, 231, 232, 234, 236, 239, 241, 243, 244, 245, 246, 247, 250, 252, 257], "dimension": [14, 16, 17, 19, 61, 62, 63, 89, 90, 91, 93, 94, 95, 116, 117, 118, 122, 123, 124, 141, 142, 143, 144, 145, 146, 152, 153, 154, 155, 156, 157, 175, 190, 191, 195, 199, 216, 219, 227, 230, 232, 235, 240, 241, 243, 245], "diminish": 164, "direct": [11, 135, 136, 137, 138, 139, 162, 170, 171, 172], "directli": [46, 47, 48, 49, 97, 163, 164, 166, 167, 168, 169, 183, 185, 233, 259], "directori": [3, 4, 5], "disabl": [174, 176], "discontinu": 222, "discrep": [135, 136, 139], "discret": [181, 185], "disk": 3, "displai": [21, 40, 42], "distribut": [53, 59, 97, 101, 102, 103, 104, 105, 106, 108, 113, 116, 117, 118, 120, 121, 122, 123, 124, 131, 133, 136, 139, 152, 153, 154, 180, 181, 182, 184, 185, 219, 227, 230, 232, 244, 251, 253, 254, 255, 256], "div": 207, "divers": [98, 254, 256, 259], "diversifi": 259, "divid": [1, 16, 47, 50, 59, 61, 62, 63, 113, 135, 136, 137, 138, 139, 188, 251], "divis": [7, 16, 61, 62, 63, 120, 121, 122, 123, 124, 163, 164, 165, 166, 167, 168, 169, 170, 188], "do": [16, 18, 43, 46, 47, 48, 49, 66, 67, 68, 69, 159, 169, 174, 206, 230, 239], "document": [4, 7, 41, 161, 178, 185], "doe": [7, 14, 15, 16, 17, 19, 42, 43, 46, 47, 48, 49, 50, 106, 165, 166, 171, 174, 176, 180, 181, 182, 183, 184, 198, 199, 200, 201, 202, 203, 204, 205, 206, 242], "doesn": 176, "doi": 41, "domain": 4, "don": 176, "dot": [11, 14, 46, 47, 48, 49, 50, 147, 155, 156, 157, 190, 195, 207, 234, 236, 244, 247], "down": [3, 159, 257], "download": [4, 5], "drawback": 52, "drawn": [180, 181, 182, 184, 185, 255], "drop": [120, 121, 122, 123, 124], "dropout": [20, 24, 34, 39, 41, 53, 66, 68, 69, 70, 120, 122, 123, 124], "dropout1d": [71, 72, 125, 130], "dropout1dmodel": 122, "dropout2d": [71, 72, 125, 130], "dropout3d": [71, 72, 125, 130], "dropout_prob": 24, "dropoutmodel": 121, "dtype": [43, 45, 186, 198, 199, 200, 201, 202, 203, 204, 205, 206, 233, 249], "due": [14, 16, 61, 62, 110, 255], "dummi": 42, "duplic": [46, 48], "dure": [3, 7, 10, 11, 13, 16, 17, 19, 22, 23, 24, 43, 44, 45, 46, 47, 48, 49, 50, 59, 66, 67, 68, 69, 70, 82, 84, 98, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 176, 186, 187, 218, 219, 220, 227, 232, 249, 252, 255, 259], "dy": [55, 109], "dynam": [0, 2, 3, 44, 47, 48, 49, 50, 86, 87, 88, 147, 149, 150, 151, 164, 169, 174], "dynamicnetwork": 47, "e": [0, 10, 11, 13, 14, 17, 19, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 43, 59, 112, 113, 120, 136, 160, 163, 170, 171, 202, 214, 216, 217, 224, 229, 230, 234, 253], "each": [1, 2, 3, 4, 11, 14, 16, 17, 19, 20, 30, 34, 39, 41, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 73, 75, 82, 84, 86, 87, 88, 110, 113, 116, 117, 118, 120, 121, 122, 123, 124, 131, 133, 135, 136, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 163, 164, 165, 166, 167, 168, 169, 170, 171, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 219, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 236, 238, 239, 241, 244, 245, 247, 248, 249, 250, 251, 252, 253, 255, 257, 259], "earli": 169, "eas": [4, 7], "easi": [2, 3, 4, 7, 45, 46, 48], "easier": [3, 46, 47, 50], "easili": [4, 45, 49, 259], "eccv": 41, "economi": 19, "edg": 239, "educ": [7, 41], "effect": [41, 46, 47, 48, 49, 50, 59, 61, 62, 63, 65, 107, 108, 110, 112, 113, 114, 141, 142, 143, 144, 145, 146, 147, 174, 175, 176, 236, 247], "effici": [1, 2, 3, 5, 7, 8, 13, 18, 27, 28, 41, 65, 136, 159, 176], "eig": 12, "eigenvalu": [11, 17], "eigenvector": 11, "eigval": 11, "eigvec": 11, "either": [75, 178, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 233, 238], "element": [0, 16, 17, 24, 45, 49, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 110, 113, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 135, 136, 137, 138, 139, 147, 152, 153, 154, 155, 156, 157, 175, 186, 187, 188, 191, 192, 193, 194, 195, 196, 197, 198, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 235, 238, 239, 241, 242, 243, 245], "elementwise_affin": 147, "elsewher": [155, 156, 157, 202], "elu": [54, 72, 115, 130], "elumodel": 107, "empti": [44, 50, 207], "empty_lik": 207, "enabl": [0, 1, 2, 3, 7, 14, 19, 27, 44, 45, 46, 47, 48, 49, 110, 116, 117, 118, 131, 133, 159, 161, 174, 176, 180, 181, 182, 184, 186, 248], "encapsul": [159, 186], "encod": [136, 139], "encourag": [121, 122, 123, 124, 135, 136, 139, 165], "end": [15, 52, 55, 56, 57, 107, 109, 110, 111, 137, 138, 139, 152, 153, 154, 155, 156, 157, 169, 171, 192, 193, 195, 198, 208, 212, 218, 220, 222, 234, 239, 259], "enforc": [44, 46, 48], "engin": 16, "enhanc": [24, 25, 27, 28, 32, 39, 40, 46, 48, 259], "ensur": [3, 5, 16, 17, 18, 43, 44, 45, 46, 47, 48, 49, 50, 59, 86, 87, 88, 109, 113, 120, 121, 122, 123, 124, 126, 127, 128, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 153, 154, 155, 156, 157, 159, 160, 162, 163, 165, 166, 168, 169, 170, 171, 172, 174, 175, 176, 178, 180, 181, 182, 183, 184, 185, 196, 219, 227, 232, 239, 249, 250, 251, 252, 253, 257, 259], "enter": 176, "entir": [3, 68, 69, 70, 123, 124, 185], "entri": [30, 243], "entropi": [76, 77, 135, 136], "environ": 7, "ep": [76, 77, 82, 84, 85, 126, 127, 128, 135, 136, 141, 142, 143, 144, 145, 146, 147, 163, 164, 165, 166, 167, 168, 169, 170], "epoch": [1, 3], "epsilon": [135, 136, 141, 142, 143, 144, 145, 146, 147, 163, 164, 165, 166, 167, 168, 169, 170], "equal": [14, 97, 152, 153, 154, 250, 252], "equat": [11, 16, 18], "equival": [191, 230, 240], "error": [0, 3, 11, 13, 44, 47, 48, 49, 50, 53, 78, 80, 108, 135, 136, 137, 138, 159, 160, 176, 178], "especi": [3, 46, 48, 49, 112, 175, 176, 178, 183, 248, 249, 253, 259], "essenti": [1, 3, 7, 8, 14, 16, 26, 62, 65, 159, 183, 185, 218, 248, 249, 253, 259], "estim": [138, 165, 166, 167, 168, 169, 170], "et": [23, 41], "eta": 171, "eta_": 171, "etc": [135, 249], "euclidean": 15, "european": 41, "evalu": [44, 82, 84, 120, 121, 122, 123, 124, 141, 142, 143, 144, 145, 146, 259], "even": [163, 176, 198, 199, 202, 203, 204, 205, 206], "evenli": [86, 87, 88, 149, 150, 151, 198], "everi": [1, 259], "everywher": 222, "exact": [44, 47, 231, 253, 255], "exactli": 50, "exampl": [4, 191], "excel": 25, "except": [0, 222, 234, 236, 247], "exclus": [181, 184, 198], "exdb": 5, "execut": [47, 176], "exist": [18, 46, 48, 50, 177, 234], "exit": 176, "exp": [52, 57, 58, 60, 107, 111, 207], "expand": [4, 65, 241, 245], "expect": [9, 47, 50, 120, 121, 122, 123, 124, 147, 159, 178], "expens": 3, "experi": [7, 183, 185, 259], "experiment": 185, "explan": [14, 16, 20, 34, 39, 86, 87, 88, 149, 150, 151, 162], "explicit": 50, "explicitli": [46, 48], "explod": [111, 141, 142, 143], "explor": [159, 185], "expon": [14, 196], "exponenti": [52, 57, 59, 107, 111, 113, 120, 165, 166, 167, 168, 169, 216], "extend": 4, "extens": 161, "extern": [4, 7], "extract": [22, 26, 41, 65, 118, 152, 154, 177, 199, 218, 220, 250, 252], "extractor": [30, 31, 32, 33], "extrem": 16, "ey": 207, "f": [1, 4, 5, 7, 48, 49, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 73, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 113], "facilit": [22, 46, 50, 59, 113, 116, 117, 118, 159, 161, 251, 259], "factor": [24, 52, 61, 62, 63, 65, 105, 106, 162, 169, 170, 171, 172, 178], "failur": [46, 47, 48, 49, 159], "fals": [1, 5, 19, 43, 44, 45, 66, 67, 68, 69, 70, 82, 84, 97, 99, 101, 102, 103, 104, 105, 106, 116, 117, 118, 131, 133, 165, 166, 170, 174, 180, 181, 182, 184, 186, 198, 199, 200, 201, 202, 203, 204, 205, 206, 218, 219, 220, 227, 232, 233, 249], "famili": 177, "fan": [101, 102, 105, 106], "fan_in": [101, 102], "fan_out": [101, 102], "fast": 169, "faster": [164, 168, 176], "fc": [26, 47, 117, 118, 152, 153, 154, 155, 156, 157], "fc1": [32, 33, 42, 46, 50, 108, 110, 111, 112, 114, 133], "fc2": [32, 33, 42, 46, 50, 108, 110, 111, 112, 114, 133], "fc3": 33, "featur": [3, 20, 22, 25, 26, 30, 31, 32, 33, 34, 39, 40, 41, 73, 75, 82, 118, 121, 122, 123, 124, 126, 127, 128, 131, 133, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 159, 164], "feature_extractor": 30, "fed": [3, 259], "feed": [3, 186, 259], "feedforward": 42, "fergu": [39, 41], "fetch": 0, "few": 42, "fewer": 1, "field": [5, 41], "file": [3, 177], "fill": [99, 103, 104, 180, 181, 182, 184, 203, 204, 205, 206], "filter": [39, 41, 61, 62, 63, 65, 117, 118, 126, 127, 128], "filter_height": 65, "filter_s": 65, "filter_width": 65, "final": [22, 23, 24, 25, 26, 27, 28, 46, 47, 48, 49, 50, 248, 259], "find": [18, 218, 220], "fine": 259, "finish": 176, "first": [5, 11, 30, 39, 42, 47, 48, 73, 131, 165, 166, 167, 168, 169, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 238, 247, 248, 249, 259], "fit": 159, "fix": [47, 239], "flatten": [26, 30, 50, 65, 195, 237, 240, 241], "flexibl": [1, 3, 4, 7, 22, 26, 27, 28, 30, 34, 46, 47, 48, 49, 50, 159, 161, 178, 203, 204, 249, 259], "flip": [254, 256, 259], "float": [2, 5, 24, 43, 45, 52, 55, 66, 67, 68, 69, 70, 76, 77, 78, 82, 84, 85, 98, 99, 103, 104, 105, 106, 107, 109, 120, 121, 122, 123, 124, 126, 127, 128, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 184, 186, 198, 201, 212, 233, 251, 253, 254, 255, 256], "float32": [43, 45, 186, 198, 199, 202, 203, 205, 233, 249], "float64": [206, 233, 249], "flow": [25, 26, 41, 50, 106, 108, 112, 114, 116, 117, 118, 131, 133, 174], "fly": [2, 3], "fname": 3, "focu": 7, "focus": 7, "follow": [0, 7, 8, 11, 17, 18, 19, 20, 34, 39, 42, 52, 53, 55, 56, 57, 58, 59, 60, 73, 75, 97, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 177, 178, 185, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 218, 220, 238, 242, 250, 251, 252, 253, 254, 255, 256, 259], "form": [17, 195, 238, 241, 245, 259], "format": [2, 3, 5, 42, 136, 139, 249], "formul": 53, "formula": [11, 19, 59, 86, 87, 88, 113, 137, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 191, 232, 253], "forward": [7, 20, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 39, 42, 43, 44, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "found": 7, "foundat": [26, 44, 159, 161, 186], "four": 239, "frac": [9, 10, 11, 13, 14, 15, 16, 18, 19, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 73, 75, 86, 87, 88, 89, 90, 91, 93, 94, 95, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 163, 164, 165, 166, 167, 168, 169, 170, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251], "frame": 70, "framework": [4, 7, 41, 136, 139, 141, 142, 143, 144, 145, 146, 160, 161, 259], "frequent": [136, 139], "from": [0, 1, 2, 3, 4, 5, 7, 14, 16, 26, 35, 36, 37, 38, 42, 43, 44, 45, 46, 47, 48, 49, 50, 65, 73, 82, 84, 97, 99, 101, 102, 103, 104, 105, 106, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 131, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 159, 160, 162, 163, 164, 166, 167, 168, 169, 170, 171, 172, 175, 176, 177, 178, 180, 181, 182, 184, 185, 186, 191, 192, 193, 197, 199, 218, 219, 220, 227, 232, 234, 236, 238, 241, 243, 244, 245, 247, 250, 251, 252, 253, 254, 255, 256, 259], "full": 19, "full_matric": 19, "fulli": [4, 8, 20, 26, 30, 31, 32, 33, 34, 39, 41, 75, 133, 185], "func": 177, "function": [3, 4, 5, 7, 8, 44, 46, 47, 48, 49, 50, 107, 108, 109, 110, 111, 112, 113, 114, 120, 121, 122, 123, 124, 126, 127, 128, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 159, 161, 178, 185, 248, 259], "fundament": [7, 75, 133, 249], "further": [7, 185, 219, 227, 232], "futur": 132, "g": [0, 10, 11, 14, 17, 19, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 120, 160, 163, 170, 234, 253], "g_": 164, "g_t": 170, "gain": [105, 106], "gamma": [141, 142, 143, 144, 145, 146, 147], "gaussian": [53, 108], "gelu": [54, 72, 115, 130], "gelunetwork": 108, "gener": [16, 42, 98, 120, 121, 122, 123, 124, 145, 166, 168, 169, 176, 180, 181, 182, 183, 184, 185, 190, 198, 200, 201, 238, 252, 253, 254, 256, 259], "get": 5, "give": [7, 162, 170], "given": [10, 11, 14, 16, 17, 19, 65, 135, 136, 139, 160, 174, 204, 206, 248, 253, 254, 256, 259], "global": [0, 174, 176, 183, 185], "go": [23, 41], "goal": [135, 136, 139], "googlenet": [23, 41], "gpu": 41, "grad": [43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 65, 73, 75, 97, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 160, 161, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 251, 252, 254, 256, 257], "grad_output": 14, "gradient": [7, 8, 25, 26, 41, 43, 45, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 180, 181, 182, 184, 198, 199, 200, 201, 202, 203, 204, 205, 206, 233, 249], "graph": [7, 106, 186, 198, 199, 202, 203, 204, 205, 206, 249], "grayscal": [5, 30, 31, 32, 33, 253, 259], "greater": 212, "green": 253, "grid": 238, "groundbreak": 41, "group": [47, 61, 62, 63, 116, 117, 118, 126, 127, 128, 160, 161], "group1": 47, "group2": 47, "guarante": 183, "h": [62, 63, 65, 69, 70, 87, 88, 90, 91, 94, 95, 97, 98, 127, 128, 142, 143, 145, 146, 150, 151, 154, 157, 250, 252], "h_": [62, 63, 87, 88, 90, 91, 94, 95, 97, 117, 118, 150, 151, 153, 154, 156, 157], "h_out": [62, 63, 90, 91, 94, 95], "h_stack": 236, "ha": [0, 11, 42, 50, 61, 62, 63, 126, 127, 128, 135, 136, 141, 142, 143, 144, 145, 146, 147, 160, 161, 191, 230, 234, 236, 244, 247, 253], "half": 225, "hand": 18, "handl": [0, 3, 7, 16, 44, 46, 47, 48, 49, 50, 136, 139, 159, 161, 176], "handwritten": [5, 33], "hardwar": 7, "hat": [165, 166, 167, 168, 169], "have": [0, 1, 10, 11, 13, 16, 17, 19, 45, 47, 49, 50, 62, 63, 106, 159, 202, 203, 204, 205, 206, 218, 220, 234, 236, 238, 243, 244, 247, 251, 257], "height": [62, 63, 65, 69, 70, 87, 88, 90, 91, 94, 95, 97, 98, 117, 118, 142, 143, 145, 146, 150, 151, 153, 154, 156, 157, 250, 252, 257], "help": [7, 24, 55, 57, 70, 107, 109, 111, 114, 141, 142, 143, 152, 153, 155, 156, 162, 165, 166, 168, 174, 175, 176, 178], "henc": 242, "here": [3, 9, 44, 73, 159, 161, 175, 176, 178, 185, 248, 249, 259], "hidden": [20, 39, 47], "hidden_s": 47, "hierarch": [47, 50, 159], "hierarchi": 117, "hierarchicalnetwork": 47, "high": [7, 181, 184], "higher": [136, 139, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 190, 191, 195, 216], "highest": 181, "highli": 41, "highlight": [155, 156, 157], "hint": 178, "histor": 164, "histori": [180, 181, 182, 184, 198, 199, 200, 201, 202, 203, 204, 205, 206], "hold": [46, 47, 48, 49], "horizont": [236, 244, 254, 259], "hot": [136, 139], "how": [2, 3, 7, 47, 50, 159, 178, 259], "howev": [43, 106], "hstack": 237, "http": 5, "huber": [78, 137], "huber_loss": [72, 79], "huberloss": [130, 140], "huberregressionmodel": 137, "hue": 259, "hyperbol": [60, 114, 214, 224, 229], "hyperparamet": [160, 162], "i": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 73, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 101, 102, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 209, 210, 211, 212, 213, 214, 216, 217, 218, 219, 220, 222, 223, 224, 225, 227, 228, 229, 230, 231, 232, 233, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259], "ideal": [7, 50], "ident": [13, 14, 98, 130, 134, 183, 185, 202, 242], "identifi": 48, "idx": [2, 3], "ieee": 41, "ii": 230, "ij": [59, 97, 113, 189, 190, 191, 195, 238], "ik": [189, 190, 191], "ill": [10, 16], "ilsvrc": 41, "imag": [3, 4, 5, 20, 21, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 40, 41, 62, 84, 98, 117, 127, 145, 238, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259], "image_dir": 3, "image_path": 3, "imagedataset": 3, "imageio": 3, "imagenet": 41, "imbal": [136, 139], "impact": [41, 168], "implement": [2, 3, 7, 16, 20, 22, 23, 24, 25, 27, 28, 30, 39, 41, 44, 65, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 236, 247, 253], "impli": [116, 117], "import": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 67, 70, 73, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259], "improp": [47, 50, 185], "improv": [23, 24, 25, 26, 28, 39, 41, 82, 98, 108, 111, 114, 162, 163, 164, 165, 166, 167, 168, 169, 170, 178, 252, 255, 259], "imread": 3, "in1_featur": [73, 131], "in2_featur": [73, 131], "in_channel": [47, 50, 116, 117, 118, 126, 127, 128, 142, 143, 152, 153, 154, 155, 156, 157, 159], "in_featur": [46, 47, 50, 75, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 120, 121, 122, 131, 133, 135, 136, 137, 138, 139, 141, 144, 147, 152, 153, 154, 155, 156, 157], "incept": [23, 24, 25, 26, 27, 28, 29, 41], "inception_resnet_v1": 41, "inception_resnet_v2": 41, "inception_v1": 41, "inception_v3": 41, "inception_v4": 41, "inceptionresnet": [27, 28], "includ": [3, 4, 7, 8, 14, 15, 20, 22, 23, 24, 27, 30, 34, 39, 42, 44, 45, 47, 49, 50, 97, 126, 127, 128, 159, 160, 161, 168, 178, 185, 191, 239], "inclus": [45, 48, 181, 184], "incom": [75, 133], "incomplet": 2, "incompletedataset": 2, "incorpor": [19, 108], "increas": [61, 62, 63, 65, 98, 164, 171, 175, 236, 247, 253, 254, 256, 259], "independ": [47, 61, 62, 63, 120, 121, 122, 123, 124, 147, 191, 201, 251, 253, 255, 257], "index": [0, 2, 5, 175, 198, 199, 202, 238, 242], "indexerror": 0, "indic": [0, 1, 34, 42, 45, 47, 49, 50, 77, 81, 136, 139, 152, 174, 186, 250, 252], "individu": [3, 47, 50, 137, 147, 161, 164, 171], "induc": [57, 111], "inf": 228, "infer": [47, 50, 176], "infin": [17, 19, 167], "inform": [7, 41, 42, 43, 161, 163, 176], "infti": [15, 169], "inherit": [1, 162, 170, 172], "init": 100, "initi": [1, 26, 35, 36, 37, 38, 43, 45, 46, 47, 48, 49, 50, 99, 101, 102, 103, 104, 105, 106, 116, 117, 118, 131, 133, 135, 136, 137, 138, 139, 141, 142, 143, 147, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 180, 183, 184, 185, 198, 202, 203, 204, 205, 206, 233], "initial_accumulator_valu": 164, "inner": [7, 189, 207], "input": [7, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 39, 41, 42, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 73, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 178, 185, 186, 187, 189, 190, 191, 195, 199, 201, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259], "input1": 131, "input2": 131, "input_": [20, 39, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 126, 127, 128, 149, 150, 151], "input_1": 73, "input_2": 73, "input_data": [107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 147, 152, 153, 154, 155, 156, 157], "input_s": [47, 49, 113, 136, 139], "input_shap": 42, "input_tensor": [7, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 43, 46, 47, 48, 49, 50, 59, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 159, 250, 251, 252, 253, 254, 255, 256, 257], "insid": [3, 174, 176], "insight": [7, 41], "inspect": [44, 45, 50, 160], "instabl": [16, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172], "instal": 7, "instanc": [0, 1, 7, 21, 23, 24, 25, 27, 28, 31, 32, 33, 40, 42, 44, 45, 46, 48, 49, 50, 84, 144, 145, 146, 147, 160, 177, 233, 241, 245, 259], "instance_norm": [72, 83, 144, 145, 146], "instancenorm1d": [130, 148], "instancenorm1dmodel": 144, "instancenorm2d": [130, 148], "instancenorm3d": [130, 148], "instanti": [2, 177], "instead": [7, 42, 46, 47, 48, 49, 50, 101, 102, 105, 106, 165, 166, 167, 176, 178, 200, 201], "int": [0, 1, 2, 5, 14, 15, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 59, 61, 62, 63, 65, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 103, 104, 105, 106, 113, 116, 117, 118, 126, 127, 128, 131, 133, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 165, 166, 167, 168, 169, 171, 177, 180, 181, 182, 183, 184, 186, 198, 199, 200, 202, 203, 205, 212, 218, 219, 220, 227, 231, 232, 233, 234, 239, 241, 242, 243, 244, 245, 246, 250, 252, 257], "integ": [1, 3, 14, 34, 61, 62, 63, 87, 88, 116, 117, 118, 147, 150, 151, 153, 154, 155, 156, 157, 178, 181, 182, 184, 185, 200, 203, 205, 219, 227, 231, 232, 239, 241, 242, 245], "integr": [1, 2, 4, 5, 8, 41, 45, 47, 49, 50, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 131, 133, 152, 153, 154, 155, 156, 157], "intellig": 41, "intend": [43, 48, 49], "intens": [16, 251, 253], "intent": 178, "interact": [73, 131, 159, 185], "interfac": [2, 44, 47, 161], "interfer": [174, 176], "intermedi": 16, "intern": [46, 47, 48, 49, 50, 136, 139, 159, 250, 251, 252, 253, 254, 255, 256, 257], "interpol": [72, 96, 257], "interpret": [41, 59, 113, 178, 234], "interv": [180, 184, 198], "introduc": [23, 24, 41, 56, 108, 110, 112, 114, 120, 121, 122, 123, 124, 252, 255, 259], "introspect": 50, "intuit": [7, 46, 48, 159, 259], "inv": 12, "inv_a": 13, "invari": [153, 156], "invers": [7, 10, 13, 14, 16, 164, 209, 210, 211], "invert": [10, 13, 14, 18], "invok": 177, "involv": [9, 10, 11, 13, 16, 17, 19, 52, 53, 55, 56, 57, 58, 60, 73, 75, 97, 116, 117, 118, 131, 133, 178, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 206, 216, 217, 218, 220, 223, 225, 238, 239, 241, 245], "is_leaf": 186, "issu": [3, 111, 141, 142, 143, 165, 166], "item": 138, "iter": [0, 1, 2, 3, 43, 44, 47, 49, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 198], "ith": [59, 113], "its": [4, 14, 16, 20, 39, 41, 42, 43, 46, 47, 48, 49, 61, 62, 63, 65, 98, 106, 108, 110, 155, 156, 157, 159, 160, 163, 171, 174, 175, 176, 177, 198, 200, 201, 205, 218, 220, 233, 242, 251, 254, 256, 259], "itself": [9, 14, 46, 47, 48, 49], "j": [5, 59, 113, 141, 142, 143, 144, 145, 146, 152, 153, 155, 156, 238, 244, 250, 252], "jk": 190, "join": [3, 234], "json": 177, "k": [14, 61, 116, 136, 142, 143, 145, 146, 152, 155, 156, 189, 190, 199, 202, 234], "k_d": [63, 118, 154, 157], "k_h": [62, 63, 117, 118, 153, 154, 157], "k_w": [62, 63, 117, 118, 153, 154, 157], "kaim": [101, 102, 105, 106], "kaiming_norm": 100, "kaiming_uniform": 100, "karen": 41, "keep": [44, 110, 163, 176, 242], "keep_grad": [45, 180, 181, 182, 184, 186, 198, 199, 200, 201, 202, 203, 204, 205, 206, 233, 249], "keep_var": 44, "keepdim": [218, 219, 220, 227, 232], "kei": [41, 44, 46, 48, 50, 160], "kept": [219, 227, 232], "kernel": [30, 31, 32, 33, 39, 61, 62, 63, 65, 86, 87, 88, 89, 90, 91, 93, 94, 95, 116, 117, 118, 126, 127, 128, 149, 150, 151, 153, 154, 157], "kernel_s": [47, 50, 89, 90, 91, 93, 94, 95, 116, 117, 118, 126, 127, 128, 142, 143, 152, 153, 154, 155, 156, 157], "keyerror": 44, "keyword": [21, 35, 36, 37, 38, 40, 44, 132], "kj": [189, 191], "known": 41, "krizhevski": 41, "kroneck": [59, 113], "kwarg": [21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 40, 44, 132, 177], "l": [9, 16, 61, 68, 86, 89, 93, 120, 121, 122, 123, 124, 126, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149], "l2": [162, 163, 164, 165, 166, 167, 168, 169, 170, 172], "l_": [61, 86, 89, 93, 116, 149, 152, 155], "l_out": [61, 89, 93], "label": [4, 5, 24, 135, 136, 139], "lambd": 162, "lambda": [11, 57, 111, 162, 166], "lambda_1": 11, "lambda_2": 11, "lambda_i": 11, "lambda_n": 11, "languag": [4, 116, 131, 152, 155], "larg": [0, 3, 16, 41, 137, 159, 162, 165, 166, 167, 170, 171, 172, 176], "larger": [46, 48, 61, 62, 63, 65, 162, 192, 239, 250, 252, 257], "largest": 218, "last": [1, 59, 85, 113, 190, 191, 234, 254, 256], "latest": 4, "layer": [7, 20, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 42, 44, 46, 47, 50, 59, 75, 82, 84, 85, 101, 102, 105, 106, 113, 116, 117, 118, 126, 127, 128, 131, 132, 133, 139, 147, 152, 153, 154, 155, 156, 157, 159, 185, 239, 249], "layer1": 177, "layer2": 177, "layer_group": 47, "layer_norm": [72, 83, 147], "layer_sequ": [47, 50], "layernorm": [130, 148], "layernormmodel": 147, "lead": [47, 50, 108, 144, 145, 146, 147, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 185], "leaf": 186, "leaki": [55, 109], "leaky_relu": [54, 72, 109], "leakyrelu": [115, 130], "learn": [1, 3, 4, 5, 7, 14, 16, 39, 40, 41, 46, 47, 48, 49, 56, 59, 107, 109, 110, 113, 116, 117, 118, 121, 122, 123, 124, 131, 133, 159, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 183, 248, 249, 259], "learnabl": [43, 44, 45, 82, 84, 85, 116, 117, 118, 126, 127, 128, 131, 133, 141, 142, 143, 144, 145, 146, 147, 159], "least": [16, 17, 19, 230], "lecun": [5, 41], "left": [14, 15, 16, 19, 53, 59, 108, 113, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 155, 156, 157, 250, 252], "leftarrow": 168, "len": [0, 1, 2, 3, 238], "lenet": [29, 31, 32, 33, 41], "lenet_1": 41, "lenet_4": 41, "lenet_5": 41, "length": [47, 61, 68, 86, 89, 93, 116, 132, 141, 144, 149, 152, 155, 239, 251], "leq": [137, 169, 196, 212], "lerp": 97, "less": [0, 52, 55, 78, 107, 109, 136, 137, 139, 212], "let": 11, "level": [7, 26], "leverag": [18, 25, 28, 41, 159], "librari": [3, 7, 8, 44, 159, 160, 161, 177, 178, 185, 186, 259], "lightweight": 7, "like": [7, 26, 41, 43, 44, 47, 50, 61, 105, 106, 111, 120, 141, 142, 143, 144, 145, 146, 174, 175, 178, 233, 249, 259], "likelihood": [81, 136, 139], "limit": [42, 163, 212], "linalg": [7, 12], "linalgerror": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "linear": [7, 8, 9, 16, 17, 18, 42, 46, 47, 48, 50, 52, 53, 55, 56, 57, 101, 102, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 120, 121, 122, 131, 132, 135, 136, 137, 138, 139, 141, 144, 147, 152, 153, 154, 155, 156, 157, 177, 202], "linearli": 137, "list": [0, 1, 30, 34, 42, 43, 45, 46, 47, 48, 49, 85, 132, 147, 160, 178, 180, 181, 182, 184, 186, 199, 200, 201, 203, 204, 205, 206, 231, 242, 243, 246, 248], "listdir": 3, "liter": [76, 77, 78, 80, 81, 97, 101, 102, 116, 117, 118, 126, 127, 128, 135, 136, 137, 138, 139, 238], "ln": 196, "load": [3, 4, 5, 43, 44, 45, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 177], "load_state_dict": [44, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "loader": [1, 2, 3], "local": [41, 65, 116], "locat": 97, "log": [81, 135, 136, 139, 207], "log_softmax": 139, "logarithm": [196, 216, 217], "logic": [3, 149, 150, 151, 159, 160], "logit": [20, 39, 59, 113, 136], "logsoftmax": [136, 139], "long": [168, 231], "loop": [1, 47, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "loss": [7, 16, 46, 47, 48, 49, 50, 59, 76, 77, 78, 80, 81, 107, 108, 109, 110, 111, 112, 113, 114, 120, 121, 122, 123, 124, 132, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "low": [7, 26, 181, 184], "lower": [9, 104, 162, 170, 171, 172, 184], "lowest": 181, "lr": [160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "lu": 13, "lucid": [0, 1, 2, 5, 12, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 73, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 179, 207, 237, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257], "m": [34, 46, 47, 50, 153, 154, 156, 157, 165, 166, 167, 168, 169, 202], "m_": [165, 166, 167, 168, 169], "m_t": [168, 169], "machin": [3, 5, 7, 16, 165, 175, 183], "magnitud": [170, 171, 259], "mai": [3, 7, 11, 13, 16, 47, 49, 98, 137, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 176, 185, 253, 259], "main": [7, 17, 26, 47, 199, 202], "maintain": [16, 43, 44, 46, 47, 48, 50, 57, 101, 102, 105, 106, 107, 108, 111, 120, 121, 122, 123, 124, 141, 142, 143, 144, 145, 146, 165, 170, 250, 253, 257], "make": [1, 3, 7, 22, 26, 30, 41, 47, 50, 112, 136, 137, 147, 153, 156, 159, 164, 165, 166, 167, 175, 177, 185, 186, 191, 238, 248, 259], "manag": [7, 44, 46, 47, 48, 49, 50, 159, 161, 174, 176, 177, 185], "manhattan": 15, "mani": 42, "manipul": [7, 46, 48, 259], "manner": [47, 50], "manual": [76, 77, 81, 135, 136, 139, 176], "map": [44, 58, 60, 112, 114], "mask": [43, 120, 121, 122, 123, 124], "match": [18, 44, 47, 50, 76, 78, 80, 85, 126, 127, 128, 160, 216, 241, 242, 245, 246, 251, 259], "math": [213, 223, 228], "mathbf": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 73, 75, 97, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 189, 190, 191, 195, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257], "mathcal": [101, 103, 105, 120, 121, 122, 123, 124, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147], "mathemat": [13, 126, 127, 128, 252, 254, 255, 256], "mathrm": 16, "matmul": 207, "matric": [8, 10, 11, 13, 16, 18, 19, 189, 190, 191, 202, 238], "matrix": [7, 8, 9, 10, 11, 13, 14, 16, 17, 18, 19, 65, 73, 132, 133, 159, 189, 238], "matrix_pow": 12, "matthew": 41, "max": [15, 34, 56, 93, 94, 95, 110, 155, 156, 157, 167, 192, 207, 212], "max_pool": [155, 156, 157], "max_pool1d": [72, 92], "max_pool2d": [72, 92], "max_pool3d": [72, 92], "max_valu": 212, "maxim": 3, "maximum": [15, 110, 155, 156, 157, 165, 167, 207, 212, 218, 255], "maxpool": [20, 39], "maxpool1d": [130, 158], "maxpool1dmodel": 155, "maxpool2d": [47, 50, 117, 130, 158], "maxpool2dmodel": 156, "maxpool3d": [118, 130, 158], "maxpool3dmodel": 157, "mean": [5, 17, 42, 43, 57, 61, 62, 63, 66, 76, 77, 78, 80, 81, 82, 84, 103, 107, 108, 109, 110, 111, 112, 114, 118, 120, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 165, 166, 167, 168, 169, 170, 174, 182, 207, 212, 216, 217, 218, 220, 223, 225, 227, 230, 231, 232, 248, 251, 259], "meaning": [50, 178], "measur": [135, 136, 138, 139], "mechan": [7, 49, 73], "membership": 135, "memori": [2, 3, 176, 200, 201], "meshgrid": 237, "method": [3, 7, 8, 13, 46, 47, 48, 49, 50, 76, 77, 78, 80, 81, 101, 102, 105, 106, 135, 136, 137, 138, 139, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 185], "middl": 175, "might": 159, "min": [193, 207, 212], "min_valu": 212, "mind": [0, 3, 7, 47, 50, 176], "mini": 1, "minim": [4, 7, 50, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 161], "minimalist": 7, "minimum": [207, 212, 220], "minu": 112, "mirror": [204, 206], "mismatch": [44, 159, 160], "miss": [44, 159], "mitig": [55, 107, 109, 111, 141, 142, 143], "mnist": [4, 6, 31, 32], "mnist_train": [4, 5], "mode": [7, 70, 82, 84, 97, 101, 102, 120, 121, 122, 123, 124, 239], "model": [1, 3, 4, 7, 14, 17, 19, 20, 22, 26, 30, 34, 39, 43, 44, 45, 46, 47, 48, 49, 50, 59, 98, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 147, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 177, 185, 248, 249, 259], "modern": 41, "modif": [50, 176], "modifi": [21, 40, 46, 47, 48, 49, 99, 101, 102, 103, 104, 105, 106, 120, 174, 176, 183, 236, 247], "modul": [5, 7, 20, 21, 22, 25, 26, 27, 28, 30, 34, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 177, 178, 185, 249, 259], "modular": [3, 7, 41, 44, 47, 50, 159, 259], "moduledict": [47, 48, 50, 51], "modulelist": [49, 50, 51], "moment": [165, 166, 167, 168, 169], "momentum": [82, 84, 126, 127, 128, 141, 142, 143, 144, 145, 146, 162, 168, 170, 172], "momentum_decai": 168, "moor": 16, "more": [3, 4, 7, 11, 46, 47, 50, 107, 121, 122, 123, 124, 159, 160, 161, 162, 163, 166, 167, 170, 171, 172, 182, 191, 230, 244, 259], "most": [8, 156, 249, 250, 259], "move": [162, 170], "mse": [78, 80, 137, 138], "mse_loss": [72, 79], "mseloss": [130, 140], "mu": [103, 141, 142, 143, 144, 145, 146, 147, 232], "mu_c": 251, "mu_i": [144, 145, 146], "much": 259, "mul": 207, "multi": [3, 4, 27, 41, 59, 77, 81, 113, 136, 139, 219, 227, 232], "multidimension": [180, 184, 200], "multipl": [1, 3, 7, 8, 14, 18, 20, 48, 49, 50, 65, 97, 98, 120, 121, 122, 123, 124, 136, 139, 159, 175, 180, 181, 182, 184, 189, 194, 200, 201, 248, 253, 259], "multipli": [14, 49, 75, 133, 171, 194, 195], "must": [0, 1, 3, 9, 10, 11, 13, 14, 17, 18, 19, 42, 44, 46, 47, 48, 49, 50, 85, 120, 121, 122, 123, 124, 139, 160, 176, 230, 234, 236, 239, 241, 242, 244, 245, 247, 250, 251, 252, 253, 254, 256], "my_simple_model": 177, "mymodel": [44, 45, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "myoptim": [160, 161], "n": [14, 15, 41, 46, 47, 50, 61, 62, 63, 65, 68, 69, 70, 73, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 101, 103, 105, 116, 117, 118, 123, 124, 126, 127, 128, 131, 133, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 149, 150, 151, 152, 153, 154, 155, 156, 157, 202, 219, 230, 232], "n1": 15, "nabla_": [163, 164, 165, 166, 167, 168, 169, 171], "nabla_t": 169, "nadam": 173, "name": [41, 42, 44, 46, 48, 50, 177, 178], "nan": [17, 19], "natur": [16, 41, 116, 131, 152, 155, 196, 216, 217], "ndarrai": [43, 45, 178, 186, 199, 201, 204, 206, 233], "ndim": [17, 19, 45, 186], "ne": 14, "nearest": 97, "necessari": [4, 5, 16, 176, 236, 247], "need": [2, 4, 47, 48, 49, 59, 131, 159, 176, 200, 201, 248, 249, 259], "neg": [14, 16, 19, 52, 81, 98, 107, 109, 110, 111, 136, 139, 171, 234], "negative_slop": [55, 109], "neglect": 49, "neighbor": 97, "neq": 15, "nest": [42, 47, 50, 159], "nestedmodel": 42, "nesterov": 168, "net": [39, 41], "network": [3, 4, 7, 20, 21, 25, 26, 33, 34, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 56, 57, 58, 59, 60, 61, 62, 63, 73, 75, 82, 98, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 147, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 170, 172, 184, 185, 186, 198, 203, 205, 218, 220, 239, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259], "neural": [3, 4, 7, 20, 21, 26, 33, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 56, 57, 58, 59, 60, 61, 62, 63, 73, 75, 82, 98, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 147, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 170, 172, 184, 185, 186, 198, 203, 205, 218, 220, 239, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259], "neuralnetwork": 110, "neuron": 109, "never": 253, "new": [44, 45, 52, 53, 55, 56, 57, 58, 60, 73, 75, 97, 101, 102, 103, 104, 105, 106, 160, 177, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 201, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 231, 233, 234, 236, 239, 241, 242, 244, 245, 246, 247], "next": [50, 248], "nll": 81, "nll_loss": [72, 79], "nllloss": [130, 140], "nn": [5, 7, 20, 22, 26, 30, 34, 39, 42, 51, 54, 64, 71, 74, 79, 83, 92, 96, 100, 115, 119, 125, 129, 130, 134, 140, 148, 158, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 177, 249, 259], "no_grad": 174, "node": 186, "nois": [19, 185], "non": [11, 14, 16, 19, 49, 53, 55, 56, 101, 102, 107, 108, 109, 110, 111, 112, 114, 120, 121, 122, 123, 124, 165, 166, 176, 196, 212], "none": [0, 1, 2, 5, 22, 26, 30, 42, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 73, 75, 76, 77, 78, 80, 81, 82, 84, 85, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 175, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 200, 201, 202, 204, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 254, 256, 257], "norm": [8, 12, 167], "normal": [5, 53, 57, 59, 60, 82, 84, 85, 100, 101, 105, 108, 111, 113, 120, 126, 127, 128, 141, 142, 143, 144, 145, 146, 147, 170, 182, 185, 248, 258, 259], "normalized_shap": [85, 147], "note": [61, 120], "noth": [66, 67, 68, 69], "notimplementederror": [2, 44, 160], "notin": 212, "nov": 41, "np": [43, 45, 136, 139, 178, 186, 191, 198, 199, 202, 203, 205, 206, 217, 233, 249], "npy": 5, "num_class": [20, 21, 22, 23, 24, 25, 26, 27, 28, 34, 35, 36, 37, 38, 39, 40, 113, 136, 139], "num_featur": [50, 126, 127, 128, 141, 142, 143, 144, 145, 146], "num_paramet": 49, "number": [0, 1, 2, 5, 10, 11, 13, 16, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 45, 47, 49, 50, 61, 62, 63, 65, 68, 69, 70, 73, 75, 77, 81, 82, 84, 86, 87, 88, 97, 98, 101, 102, 105, 106, 112, 116, 117, 118, 126, 127, 128, 131, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 162, 180, 183, 184, 186, 196, 198, 200, 202, 218, 219, 220, 231, 232, 234, 236, 239, 241, 242, 243, 245, 247, 251, 253, 254, 256, 259], "numer": [13, 16, 76, 77, 82, 84, 85, 126, 127, 128, 135, 136, 141, 142, 143, 144, 145, 146, 147, 163, 164, 165, 166, 167, 168, 169, 170, 178, 188, 198, 203, 205], "numpi": [7, 43, 45, 136, 139, 178, 186, 191, 199, 202, 217, 230, 233, 239, 241, 245, 249, 259], "o": [3, 154, 157, 203, 204], "object": [1, 3, 8, 41, 44, 48, 49, 138, 159, 176, 187, 188, 192, 193, 194, 197, 233], "observ": 165, "obtain": 1, "occur": [98, 176, 177, 234], "occurr": 14, "odot": [120, 121, 122, 123, 124], "off": 174, "offer": [4, 7, 159, 161, 185, 259], "offset": 202, "often": [14, 61, 62, 63, 65, 136, 139, 198, 205, 249, 253, 257, 259], "older": 168, "onc": 176, "one": [0, 49, 50, 59, 61, 75, 89, 93, 111, 112, 113, 116, 122, 126, 127, 128, 136, 139, 141, 144, 152, 155, 160, 175, 178, 182, 197, 204, 218, 220, 235, 240, 244, 249], "ones": [73, 75, 116, 117, 118, 133, 141, 142, 143, 144, 145, 146, 147, 159, 202, 204, 207], "ones_lik": 207, "onli": [7, 42, 97, 110, 120, 121, 122, 123, 124, 135, 136, 139, 141, 142, 143, 144, 145, 146, 147, 155, 156, 157, 171, 174, 198, 212, 218, 220, 230, 239, 240, 242, 243], "onto": [17, 19], "openml": 5, "oper": [3, 7, 8, 13, 16, 43, 44, 47, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 65, 70, 73, 75, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 106, 107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 174, 175, 176, 178, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 200, 201, 203, 205, 216, 217, 218, 219, 220, 223, 225, 227, 230, 232, 234, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 257], "operatornam": [14, 16], "opposit": 162, "optim": [3, 7, 8, 14, 16, 17, 19, 22, 23, 24, 25, 26, 27, 28, 43, 45, 48, 49, 65, 116, 117, 118, 159, 176], "optimizer_st": [160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "option": [1, 5, 15, 19, 20, 21, 22, 23, 24, 25, 27, 28, 30, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 52, 55, 59, 62, 63, 66, 67, 68, 69, 70, 73, 75, 76, 77, 78, 80, 81, 82, 84, 85, 89, 90, 91, 93, 94, 95, 97, 98, 101, 102, 103, 104, 105, 106, 107, 109, 113, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 160, 162, 170, 172, 180, 181, 182, 184, 186, 198, 199, 200, 201, 202, 203, 204, 205, 206, 218, 219, 220, 227, 231, 232, 233, 234, 238, 241, 243, 244, 249, 253, 254, 256], "ord": 15, "order": [1, 3, 15, 19, 46, 47, 48, 49, 50, 231, 248], "ordered_dict": 50, "ordereddict": [44, 46, 47, 50], "organ": [46, 47, 48, 50, 177], "orient": 259, "origin": [24, 33, 66, 98, 114, 239, 240, 241, 242, 245, 246, 257], "orthogon": [16, 17, 19], "orthonorm": 17, "oscil": [162, 170, 172], "other": [2, 3, 7, 13, 24, 28, 30, 33, 43, 44, 47, 50, 101, 102, 120, 159, 160, 174, 176, 185, 186, 198, 200, 203, 205, 230, 238, 259], "otherwis": [52, 55, 56, 57, 59, 107, 109, 110, 111, 113, 121, 122, 123, 124, 137, 152, 153, 154, 155, 156, 157, 160, 171, 177, 192, 193, 218, 220], "otim": [16, 73, 131], "out": [0, 3, 4, 52, 53, 55, 56, 57, 58, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 73, 75, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 101, 102, 105, 106, 116, 117, 118, 120, 121, 122, 123, 124, 149, 150, 151, 152, 153, 154, 155, 156, 157, 162, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247], "out_channel": [30, 47, 50, 116, 117, 118, 126, 127, 128, 142, 143, 152, 153, 154, 155, 156, 157, 159], "out_featur": [46, 47, 50, 73, 75, 107, 108, 109, 110, 111, 112, 113, 114, 117, 118, 120, 121, 122, 131, 133, 135, 136, 137, 138, 139, 141, 144, 147, 152, 153, 154, 155, 156, 157], "outcom": [253, 254, 256], "outer": 207, "outlier": [78, 137], "output": [0, 1, 2, 7, 14, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 66, 67, 68, 69, 70, 73, 75, 86, 87, 88, 97, 98, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 178, 181, 182, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 199, 201, 202, 203, 205, 206, 216, 217, 218, 219, 220, 223, 225, 227, 230, 231, 232, 238, 239, 241, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257], "output_height": 65, "output_lay": [47, 50], "output_s": [47, 86, 87, 88, 149, 150, 151], "output_width": 65, "outsid": 0, "over": [0, 1, 2, 3, 8, 39, 44, 47, 49, 59, 86, 87, 88, 113, 116, 117, 118, 136, 139, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 162, 163, 164, 165, 166, 180, 184, 218, 219, 220, 227, 230, 232, 253, 254, 256], "overdetermin": 16, "overfit": [1, 20, 39, 67, 70, 121, 122, 123, 124, 162, 165, 170, 172], "overrid": [2, 3], "overridden": [44, 160], "overwrit": [46, 48], "own": [4, 46, 47, 48, 49, 61, 62, 63, 106, 159, 251], "p": [15, 16, 45, 48, 49, 66, 67, 68, 69, 70, 120, 121, 122, 123, 124, 152, 155, 156, 253, 254, 256, 259], "p_d": [154, 157], "p_h": [153, 154, 157], "p_w": [153, 154, 157], "packag": [2, 3, 4, 8, 41, 159, 161, 177, 183, 185, 249, 259], "pad": [30, 47, 50, 61, 62, 63, 65, 86, 87, 88, 89, 90, 91, 93, 94, 95, 116, 117, 118, 126, 127, 128, 142, 143, 149, 150, 151, 152, 153, 154, 155, 156, 157, 237], "pad_after_dim1": 239, "pad_after_dim2": 239, "pad_before_dim1": 239, "pad_before_dim2": 239, "pad_width": 239, "padding_height": 65, "padding_width": 65, "pair": 73, "paper": 23, "parallel": [1, 3, 41], "param": [44, 45, 48, 49, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "param1": 44, "param_dict": 48, "param_group": [160, 161], "param_groups_setup": 160, "param_list": 49, "param_s": 177, "paramet": [0, 2, 7, 31, 32, 33, 41, 44, 159, 160, 161, 178, 185, 259], "parameterdict": 51, "parameterlist": 51, "parent": 159, "part": [43, 44, 106, 159, 174, 176, 185, 198, 199, 202, 203, 204, 205, 206, 249, 259], "partial": [9, 10, 11, 13, 14, 15, 16, 18, 19, 52, 53, 55, 56, 57, 58, 59, 60, 73, 75, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "particip": [45, 249], "particular": [46, 48], "particularli": [7, 16, 47, 48, 49, 50, 59, 75, 113, 126, 127, 128, 133, 136, 139, 144, 145, 146, 147, 166, 174, 177, 248], "pass": [2, 7, 16, 20, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 42, 44, 45, 46, 47, 48, 49, 50, 97, 107, 108, 109, 110, 111, 112, 114, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 147, 152, 153, 154, 155, 156, 157, 159, 178, 186, 219, 227, 230, 231, 232, 234, 236, 240, 242, 243, 247, 249, 259], "past": [162, 163, 165, 170], "patch": [65, 153], "path": [3, 5], "pattern": [41, 56, 110, 116, 117, 118], "penal": [162, 170, 172], "penalti": [163, 164, 165, 166, 167, 168, 169], "penros": 16, "per": [1, 86, 144, 145, 146, 147, 149], "perform": [3, 7, 8, 9, 16, 20, 26, 27, 28, 30, 31, 32, 33, 34, 39, 41, 44, 45, 49, 53, 61, 62, 63, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 120, 121, 122, 123, 124, 131, 132, 133, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 174, 176, 183, 185, 187, 188, 191, 194, 197, 216, 218, 220, 227, 231, 248, 250, 252, 257, 259], "permut": 231, "persist": [43, 180, 181, 182, 184, 200, 201], "perturb": [11, 18, 19, 259], "phi": [53, 108], "pi": [53, 108, 213, 223, 228], "pil": [249, 259], "pinv": 12, "pioneer": 41, "pipelin": [5, 185, 248, 249, 251], "pixel": [5, 97, 251, 253], "place": [99, 101, 102, 103, 104, 105, 106], "placehold": [44, 132], "plai": [178, 185], "plot": 238, "point": [4, 98, 174], "pool": [20, 30, 31, 32, 33, 34, 39, 41, 86, 87, 88, 89, 90, 91, 93, 94, 95, 117, 118, 149, 150, 151, 152, 153, 154, 155, 156, 157, 218, 220], "pool1": 50, "pool2": 50, "poorli": 13, "popul": 44, "popular": [4, 41], "portion": 259, "pose": 16, "posit": [1, 9, 14, 44, 50, 98, 107, 109, 110, 111, 152, 153, 154, 155, 156, 157, 171, 175, 196, 241, 245, 252], "possibl": [7, 259], "potenti": [16, 132, 170, 243], "power": [7, 14, 41, 175, 176, 207, 248, 249, 259], "pp": 41, "practic": [16, 136, 139], "practition": 259, "preced": [45, 186], "preconfigur": [27, 28], "predefin": [4, 41, 47, 111], "predict": [135, 136, 138, 139], "prefix": [44, 177], "prepar": [3, 175, 239, 241, 245, 249, 259], "prepend": 44, "preprint": 41, "preprocess": [3, 4, 65, 98, 185, 248, 249, 259], "present": [135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 153], "preserv": [66, 98, 120, 198, 199, 202, 203, 204, 205, 206, 219, 227, 232], "preset": 4, "prevent": [1, 46, 47, 48, 49, 50, 67, 70, 121, 122, 123, 124, 135, 136, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 176], "previou": [162, 171, 176], "previous": 165, "primari": [7, 178], "primarili": 50, "print": [0, 1, 2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 73, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 174, 175, 176, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 255, 256, 257], "probabilist": 185, "probabl": [24, 53, 59, 66, 67, 68, 69, 70, 76, 108, 113, 120, 121, 122, 123, 124, 135, 136, 139, 253, 254, 256, 259], "problem": [16, 17, 19, 55, 107, 109, 169], "proceed": 41, "process": [2, 3, 4, 14, 17, 19, 20, 27, 39, 41, 49, 61, 62, 63, 84, 98, 111, 114, 116, 118, 126, 127, 128, 131, 141, 142, 143, 144, 145, 146, 147, 152, 154, 155, 157, 162, 178, 238, 249, 250, 251, 252, 257, 259], "produc": [20, 39, 42, 86, 87, 88, 116, 117, 118, 149, 150, 151, 183, 185], "product": [7, 17, 19, 112, 131, 147, 159, 189, 190, 194, 195], "program": [174, 185], "progress": 164, "project": [17, 19], "projector": 16, "promin": [152, 154, 155, 156, 157], "promot": [50, 136, 139, 159], "propag": [10, 11, 13, 16, 17, 18, 19, 44, 50, 73, 75, 97, 153, 154, 170, 171, 189, 190, 191, 195, 218, 220, 238, 239, 242, 246], "properli": [0, 49, 59, 113, 159], "properti": [8, 10, 13, 14, 53, 57, 66, 108, 111, 120, 164, 169], "proport": [5, 232], "proportion": 257, "provid": [0, 1, 2, 3, 4, 5, 7, 8, 21, 22, 23, 24, 26, 30, 34, 40, 41, 44, 46, 47, 48, 49, 53, 75, 87, 88, 98, 135, 136, 137, 139, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 170, 172, 174, 176, 178, 183, 185, 186, 191, 198, 204, 218, 220, 231, 233, 241, 243, 245, 259], "pseudo": [13, 16], "purpos": [180, 184, 198, 203, 205], "python": 178, "pytorch": 233, "q": 17, "qr": 12, "quad": [16, 135, 136, 137, 138, 139, 155, 156, 157, 187, 188, 192, 193, 194, 197, 250], "quadrat": 137, "quotient": 188, "r": [17, 253, 254, 255, 256], "r_t": 169, "radam": 173, "rais": [0, 1, 2, 44, 159, 160, 196], "rand": [179, 185], "randint": [179, 185], "randn": [20, 34, 39, 159, 179, 183, 185], "random": [1, 2, 3, 252, 253, 254, 255, 256, 259], "random_integ": 185, "random_tensor": 185, "randomcrop": [258, 259], "randomgrayscal": [258, 259], "randomhorizontalflip": [258, 259], "randomli": [1, 66, 67, 68, 69, 70, 98, 120, 121, 122, 123, 124, 252, 253, 254, 255, 256, 259], "randomnoisedataset": [0, 1, 2], "randomrot": [258, 259], "randomverticalflip": 258, "rang": [0, 1, 8, 41, 49, 58, 60, 61, 62, 77, 81, 106, 112, 114, 162, 170, 172, 181, 209, 210, 212, 251, 255, 259], "rank": 16, "rate": [160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "rather": [48, 49, 166, 242], "ratio": 257, "ravel": 237, "raw": [59, 113, 136, 178], "re": [45, 176], "readabl": [46, 47, 48, 50, 159, 178], "readi": [3, 7, 41], "real": [16, 19, 112], "rearrang": 65, "receiv": [155, 156, 157, 239], "recent": 170, "recept": 41, "reciproc": [16, 207, 217, 225], "recognit": [33, 41, 117], "rectangular": 202, "rectif": 169, "rectifi": [55, 56, 109, 110, 169], "recurr": [47, 147], "recurs": [42, 44], "red": 253, "reduc": [20, 34, 39, 41, 141, 142, 143, 144, 145, 146, 152, 153, 154, 155, 156, 157, 168, 171, 176, 178, 218, 219, 220, 227, 232, 253], "reduct": [19, 76, 77, 78, 80, 81, 135, 136, 137, 138, 139, 218, 220], "reevalu": 160, "refer": [4, 7, 44, 185, 199, 202, 234], "reflect": 174, "regardless": [16, 240], "region": [63, 86, 87, 88, 97, 150, 151, 239, 250, 259], "regist": [43, 44, 45, 49, 159, 177], "register_buff": 43, "register_model": [21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 40], "register_paramet": 44, "registr": [44, 159], "registri": 177, "registry_path": 177, "regress": [4, 80, 137, 138], "regular": [16, 20, 24, 39, 70, 121, 122, 123, 124, 162, 163, 164, 167, 168, 169, 170, 172], "relat": [176, 202, 203], "relationship": 257, "relev": [97, 162, 170, 172], "reli": 176, "reliabl": 5, "reliant": [121, 122, 123, 124], "relu": [7, 20, 34, 39, 41, 42, 46, 47, 48, 50, 52, 54, 55, 72, 101, 102, 105, 106, 107, 109, 115, 116, 117, 118, 126, 127, 128, 130, 131, 132, 133], "relu1": 50, "relu2": 50, "relu3": 50, "remain": [5, 43, 85, 120, 121, 122, 123, 124, 171], "rememb": 185, "remov": [177, 243], "rep": 245, "repeat": [237, 238, 245], "repetit": [241, 245], "replac": [185, 253], "repres": [13, 15, 19, 30, 44, 45, 50, 73, 75, 82, 84, 85, 116, 117, 118, 131, 133, 136, 139, 147, 160, 161, 162, 168, 169, 170, 171, 172, 178, 187, 188, 194, 197, 199, 219, 230, 231, 232, 238, 250, 252, 254, 255, 256, 257], "represent": [153, 156, 160], "reproduc": [180, 181, 182, 183, 184, 185, 259], "requir": [2, 3, 4, 7, 43, 46, 50, 52, 53, 55, 56, 57, 58, 60, 73, 75, 97, 106, 132, 136, 139, 159, 174, 176, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 228, 229, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 257], "requires_grad": [43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 65, 73, 75, 97, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 159, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249], "rescal": [76, 77, 81, 135, 136, 139], "research": 159, "reset": [45, 183, 186], "reshap": [7, 75, 117, 118, 175, 178, 237, 240], "residu": [25, 26, 27, 28, 41], "resili": 171, "resiz": [97, 248, 258, 259], "resnet": [26, 27, 28, 29, 41], "resourc": 176, "respect": [9, 10, 11, 13, 14, 15, 16, 17, 19, 30, 34, 43, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 73, 75, 97, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 212, 216, 217, 218, 219, 220, 223, 225, 227, 230, 231, 232, 238, 239, 241, 245, 253], "respons": [46, 161], "restor": 176, "restructur": 242, "result": [9, 13, 14, 16, 41, 44, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 73, 75, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 113, 159, 160, 174, 176, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 220, 221, 222, 223, 224, 225, 226, 228, 229, 230, 233, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 252, 253, 259], "resum": 161, "retain": [45, 186, 198, 205, 218, 219, 220, 227, 232, 249], "retent": 249, "retriev": [0, 2, 46, 48, 49], "return": [0, 1, 2, 3, 5, 7, 26, 30, 43, 44, 46, 47, 48, 49, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 147, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 177, 178, 248, 259], "reus": 249, "reusabl": [50, 159, 248], "revers": [7, 50, 231, 254, 256], "revert": 176, "rgb": [23, 24, 25, 27, 28], "rho": 163, "rho_": 169, "rho_t": 169, "right": [14, 15, 16, 18, 19, 53, 59, 108, 113, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 155, 156, 157, 250], "risk": 178, "rmsprop": 173, "rob": 41, "robust": [98, 120, 121, 122, 123, 124, 137, 159, 163, 252, 253, 255, 259], "role": [178, 185, 259], "root": [4, 5, 164, 170, 225], "rotat": [72, 96, 255, 259], "rotated_imag": 98, "rout": [155, 156, 157], "routin": 7, "row": [10, 11, 13, 18, 75, 202, 238, 247], "rprop": 173, "rule": [13, 14, 175, 187, 188, 192, 193, 194, 196, 197], "run": [7, 43, 82, 84, 126, 127, 128, 141, 142, 143, 144, 145, 146, 163, 176, 183, 185], "running_mean": [43, 82, 84, 141, 142, 143, 144, 145, 146], "running_var": [82, 84, 141, 142, 143, 144, 145, 146], "runtim": [47, 50, 159], "s_": 171, "s_d": [154, 157], "s_h": [153, 154, 157], "s_w": [153, 154, 157], "same": [10, 11, 13, 14, 18, 59, 66, 67, 68, 69, 70, 82, 84, 85, 87, 88, 98, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 132, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 171, 183, 185, 191, 201, 204, 206, 216, 218, 219, 220, 234, 236, 240, 242, 243, 244, 247, 251], "sampl": [0, 1, 2, 3, 5, 7, 23, 24, 25, 27, 28, 30, 31, 32, 33, 86, 87, 88, 101, 102, 103, 104, 105, 106, 120, 121, 122, 123, 124, 131, 133, 136, 139, 147, 149, 150, 151, 182, 185, 250, 252, 254, 255, 256, 257], "satisfi": [9, 11, 18], "satur": [107, 259], "save": [2, 43, 45, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 177], "scalabl": [3, 41, 159], "scalar": [10, 15, 76, 77, 78, 80, 81, 178], "scale": [11, 16, 27, 31, 32, 33, 41, 52, 57, 59, 82, 84, 85, 105, 106, 107, 109, 111, 112, 113, 114, 120, 121, 122, 123, 124, 136, 141, 142, 143, 144, 145, 146, 147, 162, 164, 165, 166, 178, 185, 232, 257], "scenario": [48, 49, 147, 166, 167, 249, 253], "schedul": 162, "scientif": 175, "score": [59, 136], "scratch": 7, "script": 185, "seamless": [0, 1, 3, 4, 159, 185], "seamlessli": [3, 4, 8, 45, 47, 50, 159, 178, 259], "second": [11, 47, 48, 73, 131, 165, 166, 167, 168, 169, 175, 187, 189, 190, 191, 192, 193, 194, 195, 196, 197, 236, 238, 256], "section": 191, "see": [7, 191], "seed": [179, 180, 181, 182, 184, 185, 259], "seen": 163, "select": [97, 155, 157, 227], "self": [0, 1, 2, 3, 7, 20, 22, 26, 30, 34, 39, 42, 43, 44, 45, 46, 47, 48, 49, 57, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 131, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 177, 238, 248, 249], "selu": [54, 66, 72, 115, 120, 130], "selunetwork": 111, "sensit": [78, 137, 141, 142, 143], "sentiment": 4, "separ": [0, 61, 62, 63, 144, 145, 146], "sequenc": [14, 46, 48, 61, 198, 234, 236, 239, 241, 244, 245, 247, 248], "sequenti": [20, 26, 30, 34, 39, 42, 46, 47, 51, 61, 126, 127, 128, 132, 248, 259], "seri": [22, 31, 32, 61, 116, 126, 152, 155], "serial": [43, 44, 161], "serv": [3, 26, 34, 44, 46, 47, 48, 49, 50, 159, 171, 249], "set": [3, 4, 5, 42, 45, 49, 61, 62, 63, 109, 110, 111, 116, 117, 118, 120, 123, 124, 131, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 160, 165, 166, 170, 180, 181, 182, 183, 184, 185, 186, 198, 200, 201, 205, 206, 212, 218, 220, 233, 249, 253, 259], "setup": [4, 7], "sever": [16, 116, 117, 118, 152, 153, 154, 155, 156, 157, 176, 248, 259], "sgd": [7, 162, 169, 173], "sgn": 15, "shape": [3, 4, 5, 7, 10, 11, 13, 14, 16, 20, 26, 30, 34, 39, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 73, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 175, 178, 180, 181, 182, 184, 185, 186, 189, 200, 201, 202, 203, 204, 205, 206, 212, 217, 218, 219, 220, 223, 225, 227, 231, 232, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 247, 250, 251, 252, 253, 254, 255, 256, 257, 259], "shapelik": 181, "share": 41, "shift": [82, 84, 85, 141, 142, 143, 144, 145, 146, 147], "shorthand": 191, "should": [30, 43, 176, 180, 181, 182, 184, 200, 201, 209, 210, 230, 239, 248], "show": [174, 177], "showcas": 7, "shown": 183, "shrink": 163, "shuffl": [1, 2, 3], "side": [18, 47, 50, 61, 62, 63, 89, 90, 91, 93, 94, 95, 116, 117, 118, 126, 127, 128, 152, 153, 154, 155, 156, 157, 176], "sigma": [16, 101, 103, 105, 112, 141, 142, 143, 144, 145, 146, 147, 231], "sigma_c": 251, "sigma_i": 16, "sigmoid": [54, 72, 101, 102, 105, 106, 115, 130, 135], "sigmoidnetwork": 112, "sign": [14, 137, 171, 207], "signal": [116, 117, 118, 126, 141, 144, 152, 153, 154, 155, 156, 157], "signific": 176, "significantli": [41, 248], "sim": [120, 121, 122, 123, 124], "similar": [7, 101, 102, 191, 217, 233, 239], "similarli": [19, 230], "simonyan": 41, "simpl": [3, 4, 7, 42, 50, 61, 62, 63, 73, 75, 89, 90, 91, 93, 94, 95, 108, 110, 111, 112, 114, 116, 117, 118, 120, 121, 122, 123, 124, 131, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 189, 190, 195, 248], "simplebinaryclassificationmodel": 135, "simpleclassificationmodel": [136, 139], "simplegelumodel": 108, "simpleleakyrelumodel": 109, "simplemodel": [7, 42, 133, 177], "simpleregressionmodel": 138, "simplerelumodel": 110, "simpleselumodel": 111, "simplesigmoidmodel": 112, "simpletanhmodel": 114, "simpli": [174, 230, 231, 242], "simplic": [41, 110], "simplifi": [4, 31, 50, 126, 127, 128], "simul": [42, 259], "simultan": 98, "sin": [207, 213], "sinc": [14, 17, 46, 47, 48, 49, 61, 62, 63, 106, 174, 176, 182, 238, 259], "sine": [210, 223, 224], "singl": [0, 4, 14, 17, 19, 59, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 126, 127, 128, 136, 147, 153, 154, 155, 156, 157, 160, 178, 184, 200, 234, 243, 251, 253, 259], "singleton": 147, "singular": [10, 13, 14, 16, 18, 19], "sinh": [207, 214, 229], "size": [0, 1, 2, 3, 19, 30, 31, 32, 33, 39, 42, 45, 47, 61, 62, 63, 65, 68, 69, 70, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 116, 117, 118, 126, 127, 128, 131, 133, 135, 136, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 177, 181, 184, 185, 186, 218, 219, 220, 227, 232, 234, 236, 243, 246, 247, 250, 252, 257, 259], "skip": 176, "slice": [73, 230], "slide": [65, 152, 154, 155, 157], "slightli": 259, "slope": [55, 107, 109], "slow": [3, 169], "small": [16, 31, 32, 33, 41, 55, 76, 77, 82, 84, 85, 109, 111, 135, 136, 137, 141, 142, 143, 144, 145, 146, 147, 153, 156, 163, 164, 165, 166, 167, 168, 169, 170, 171], "smaller": [39, 41, 47, 50, 159, 164, 165, 193, 250, 252, 257], "smallest": 220, "smooth": [24, 53, 107, 108, 162, 170, 259], "smoother": 162, "so": [46, 47, 48, 49, 98, 159, 169, 200, 201, 248], "softmax": [54, 72, 115, 130, 136], "softmaxmodel": 113, "solut": [16, 18], "solv": [8, 9, 12, 16, 17, 19], "solver": 8, "some": [52, 67, 98, 120, 121, 122, 141, 142, 143, 144, 145, 146, 164, 165, 166, 176, 178], "sometim": 175, "sophist": [47, 50], "sourc": 185, "space": [11, 17, 19, 61, 62, 63, 65, 86, 87, 88, 116, 117, 118, 126, 127, 128, 149, 150, 151, 198, 259], "span": 4, "spars": [164, 165], "spatial": [20, 34, 39, 117, 118, 127, 141, 142, 143, 144, 145, 146, 147, 153, 154, 155, 156, 157, 238], "spatio": 118, "special": [0, 1, 7, 16, 43, 44, 45, 120, 185], "specif": [4, 7, 26, 46, 47, 48, 49, 50, 106, 120, 121, 122, 123, 124, 144, 145, 146, 159, 160, 174, 185, 200, 218, 220, 241, 245], "specifi": [0, 1, 2, 3, 4, 5, 7, 15, 21, 30, 34, 35, 36, 37, 38, 40, 42, 47, 59, 65, 70, 76, 77, 78, 80, 81, 85, 86, 87, 88, 97, 98, 113, 116, 117, 118, 135, 136, 137, 138, 139, 147, 149, 150, 151, 153, 154, 155, 156, 157, 160, 178, 180, 181, 182, 183, 184, 196, 198, 199, 200, 201, 202, 203, 205, 206, 212, 218, 219, 220, 227, 231, 232, 233, 234, 236, 239, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 255, 257, 259], "speech": 144, "speed": [162, 163, 164, 165, 166, 167, 168, 169, 170, 172], "split": [4, 234, 236, 247], "springer": 41, "sqrt": [53, 101, 102, 105, 106, 108, 141, 142, 143, 144, 145, 146, 147, 163, 164, 165, 166, 168, 169, 170, 207, 209, 210], "squar": [1, 3, 9, 10, 11, 13, 14, 16, 17, 18, 19, 78, 80, 137, 138, 163, 164, 165, 170, 207, 225], "squaredataset": [0, 1, 2, 3], "squeez": 237, "stabil": [13, 16, 41, 76, 77, 82, 84, 85, 126, 127, 128, 135, 136, 141, 142, 143, 144, 145, 146, 147, 162, 163, 164, 165, 166, 167, 168, 169, 170, 251], "stabl": [101, 102, 105, 106, 120, 136, 162, 166, 167, 170, 171, 172], "stack": [50, 236, 237, 247, 259], "standard": [53, 55, 101, 103, 105, 107, 108, 109, 120, 171, 182, 185, 191, 248, 251, 259], "start": [1, 3, 162, 164, 171, 198, 250, 252], "state": [41, 43, 44, 45, 47, 50, 160, 174, 176, 183], "state_dict": [44, 45, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "static": 50, "statist": [16, 66, 82, 84], "std": [5, 103, 248, 251, 259], "stem": 26, "step": [45, 65, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 198, 248, 249], "step_siz": 171, "still": 163, "stochast": [7, 162, 172], "stop": 198, "storag": [46, 48, 186], "store": [2, 4, 5, 43, 44, 45, 46, 47, 48, 49, 149, 150, 151, 176, 186, 250, 251, 252, 253, 254, 255, 256, 257], "str": [5, 34, 44, 46, 48, 50, 76, 77, 78, 80, 81, 97, 160, 177, 238], "straightforward": [172, 174, 187], "strategi": 161, "streamlin": [2, 3], "strict": [44, 160], "stride": [30, 31, 32, 33, 47, 50, 61, 62, 63, 65, 86, 87, 88, 89, 90, 91, 93, 94, 95, 116, 117, 118, 126, 127, 128, 149, 150, 151, 152, 153, 154, 155, 156, 157], "stride_height": 65, "stride_width": 65, "string": [44, 46, 48, 50, 116, 117, 118, 160], "structur": [0, 7, 17, 43, 44, 47, 159, 160, 177, 178, 202, 249], "style": [26, 84, 144, 145, 238], "sub": [46, 47, 48, 49, 50, 159, 207, 250, 252], "sub_tensor": 186, "subclass": [1, 2, 3, 7, 44, 45, 46, 159, 160], "sublay": 42, "submodul": [42, 44, 159], "subsequ": [47, 50, 106, 185], "subset": [121, 122], "subtract": [7, 197, 251], "suffer": 164, "suit": [24, 101, 102, 105, 106], "suitabl": [26, 31, 32, 33, 41, 137, 164, 165, 180], "sum": [15, 46, 47, 48, 49, 50, 59, 76, 77, 78, 80, 81, 113, 135, 136, 137, 138, 139, 164, 187, 190, 195, 207, 230, 232, 234, 236, 238, 241, 245, 247], "sum_": [14, 59, 113, 135, 136, 138, 139, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 189, 190, 219, 227, 230, 232, 238, 241], "sum_i": [15, 195], "sum_j": 195, "sum_k": 191, "summar": [152, 153, 154], "summat": 14, "super": [7, 42, 43, 44, 45, 46, 47, 48, 49, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 131, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 147, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 177], "support": [1, 3, 4, 7, 8, 14, 15, 16, 17, 19, 46, 47, 48, 49, 50, 97, 98, 159, 161, 168, 185, 186, 187, 188, 191, 192, 193, 194, 196, 197, 199, 202, 212, 217, 219, 223, 225, 227, 230, 231, 232, 234, 238, 242, 249, 259], "suppos": 259, "sure": [159, 259], "svd": [12, 16], "symmetr": [9, 86, 87, 88, 105, 106, 114], "syntax": [1, 191], "system": [8, 9, 16, 17, 18, 41, 174, 238], "systemat": 259, "szegedi": [23, 41], "t": [16, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 186, 191, 233, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259], "t0": 162, "t1": 233, "t2": 233, "tabular": 4, "tailor": [4, 159, 259], "take": [17, 152, 153, 154, 155, 156, 157, 176, 248], "taken": 230, "tan": 207, "tangent": [60, 114, 211, 228, 229], "tanh": [47, 50, 53, 54, 72, 101, 102, 105, 106, 108, 115, 130, 207], "tanhnetwork": 114, "target": [5, 50, 76, 77, 78, 80, 81, 86, 87, 88, 97, 135, 136, 137, 138, 139, 149, 150, 151, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 250, 252, 257], "target_tensor": [135, 136, 137, 138, 139], "target_transform": 5, "task": [4, 7, 8, 20, 21, 23, 24, 25, 26, 27, 28, 31, 32, 33, 41, 58, 59, 62, 73, 76, 77, 80, 81, 112, 113, 116, 117, 118, 135, 136, 137, 138, 139, 144, 145, 146, 152, 154, 155, 157, 165, 175, 185, 202, 259], "techniqu": [9, 13, 39, 82, 120, 121, 122, 123, 124, 144, 145, 146, 161, 257, 259], "tempor": [116, 118, 154, 157], "temporarili": 176, "tensor": [2, 3, 4, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 39, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 73, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 174, 176, 178, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259], "term": [16, 73, 126, 127, 128, 162, 166, 168, 169, 170, 172], "test": [4, 5], "test_siz": 5, "text": [4, 10, 14, 15, 46, 52, 55, 56, 57, 59, 61, 62, 63, 86, 87, 88, 89, 90, 91, 93, 94, 95, 101, 102, 105, 106, 107, 109, 110, 111, 113, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 135, 136, 137, 138, 139, 152, 153, 154, 155, 156, 157, 162, 164, 165, 166, 167, 168, 169, 170, 171, 172, 181, 187, 188, 190, 192, 193, 194, 196, 197, 208, 212, 218, 219, 220, 222, 227, 232, 234, 236, 239, 240, 241, 242, 243, 245, 246, 247, 250, 251, 252, 254, 255, 256], "th": [73, 135, 136, 138, 139, 144, 145, 146, 192, 193, 196], "than": [0, 1, 48, 49, 52, 55, 78, 107, 109, 137, 160, 166, 212, 230, 239, 244, 250, 252, 257], "thei": [0, 7, 19, 43, 47, 49, 50, 178, 238, 242, 250, 252, 259], "them": [3, 44, 49, 65, 162, 175, 234, 244, 248, 251, 259], "therebi": [120, 153, 154, 156, 157], "theta": [162, 163, 255], "theta_": [162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "theta_t": [169, 170], "thi": [0, 1, 2, 3, 5, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 23, 24, 25, 26, 27, 28, 30, 41, 42, 43, 45, 47, 48, 49, 50, 56, 58, 59, 60, 61, 62, 63, 65, 73, 75, 86, 97, 98, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 131, 132, 133, 135, 136, 137, 139, 141, 142, 143, 144, 145, 146, 147, 149, 152, 153, 154, 155, 156, 157, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 181, 182, 183, 185, 186, 190, 191, 195, 198, 200, 203, 204, 205, 206, 212, 216, 217, 218, 219, 220, 223, 225, 227, 230, 231, 232, 233, 239, 241, 242, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259], "thing": 176, "those": [7, 31, 32, 33, 49, 106], "three": [19, 33, 63, 88, 91, 95, 118, 124, 126, 127, 128, 143, 146, 151, 154, 157], "threshold": [16, 78, 137], "through": [0, 3, 4, 7, 11, 16, 17, 19, 20, 22, 26, 30, 39, 46, 47, 50, 73, 75, 97, 107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 120, 121, 122, 123, 124, 131, 132, 133, 141, 142, 143, 144, 147, 152, 153, 154, 155, 156, 157, 182, 189, 190, 195, 238, 240, 242, 243, 246, 259], "throughout": [57, 249], "tile": 237, "time": [0, 3, 14, 31, 32, 33, 61, 109, 111, 116, 126, 152, 153, 154, 155, 156, 157, 162, 163, 164, 165, 166, 170, 172, 176, 241, 245], "to_tensor": 5, "togeth": [50, 248, 259], "too": 171, "tool": [3, 7, 159, 175, 185, 248, 259], "top": [9, 10, 11, 17, 19, 73, 75, 97, 116, 117, 118, 131, 133, 250, 252], "torch": [34, 233], "total": [0, 1, 2, 5, 21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 40, 42, 45, 186, 242], "totensor": [248, 259], "trace": [8, 207], "track": [7, 126, 127, 128, 141, 142, 143, 144, 145, 146, 159, 174, 176, 180, 181, 182, 184, 198, 199, 200, 201, 202, 203, 204, 205, 206, 233, 249], "track_running_stat": [126, 127, 128, 141, 142, 143, 144, 145, 146], "tradit": [163, 164, 167, 168, 169], "trail": 85, "train": [1, 2, 3, 4, 5, 7, 22, 23, 24, 41, 42, 43, 44, 47, 49, 50, 59, 66, 67, 68, 69, 70, 82, 84, 98, 108, 109, 111, 112, 113, 114, 120, 121, 122, 123, 124, 141, 142, 143, 144, 145, 146, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 248, 251, 252, 253, 254, 255, 256, 259], "trainabl": [42, 141, 142, 143, 144, 145, 146, 159], "transfer": [84, 144, 145], "transform": [2, 4, 5, 7, 11, 48, 73, 75, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 175, 238], "transform_pipelin": [248, 259], "transformed_imag": [248, 259], "transit": 137, "translat": [153, 156], "transpos": [7, 9, 207], "treat": [0, 43, 147, 159], "triangular": [9, 17], "true": [1, 2, 3, 4, 5, 19, 22, 23, 24, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 65, 66, 67, 68, 69, 70, 73, 75, 82, 84, 97, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 159, 160, 165, 166, 170, 174, 180, 181, 182, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 236, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249], "truncat": 42, "truncate_from": 42, "try": 0, "tune": 259, "tupl": [2, 3, 5, 11, 17, 19, 42, 44, 45, 61, 62, 63, 65, 85, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 116, 117, 118, 126, 127, 128, 132, 147, 150, 151, 152, 153, 154, 155, 156, 157, 165, 166, 167, 168, 169, 171, 178, 180, 181, 182, 184, 186, 200, 203, 205, 218, 219, 220, 227, 232, 234, 236, 238, 239, 242, 243, 244, 246, 247, 250, 251, 252, 257], "twice": 239, "two": [7, 10, 11, 13, 14, 16, 17, 19, 31, 32, 33, 34, 61, 62, 63, 73, 90, 94, 117, 123, 131, 142, 145, 153, 156, 165, 166, 167, 168, 169, 171, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 230, 238], "type": [43, 44, 45, 73, 131, 186, 198, 199, 200, 201, 202, 203, 204, 205, 206, 233, 238, 249], "typeerror": [0, 1, 2, 44, 160], "typic": [8, 43, 59, 66, 98, 111, 113, 139, 141, 142, 143, 144, 145, 146, 161, 162, 170, 172, 176, 178, 246, 249, 251, 255, 257, 259], "u": [16, 19, 102, 104, 106], "u_": 167, "unchang": [43, 70, 107, 109, 110, 111, 120, 121, 122, 123, 124, 132, 240, 243], "undefin": 196, "under": 159, "underbrac": 14, "underdetermin": 16, "undergo": 259, "underli": [0, 7, 23, 24, 25, 27, 28, 233, 236, 240, 242, 247], "understand": [7, 39, 41, 42, 50, 259], "unexpect": [44, 47, 50, 185], "unfold": [64, 72], "unifi": 0, "uniform": [100, 102, 106, 116, 117, 118, 131, 133, 179, 180, 181, 185, 253, 254, 255, 256], "uniformli": [180, 184], "uniniti": [200, 201], "unintend": 176, "union": 34, "uniqu": [9, 16, 18, 46, 48], "unit": [20, 30, 39, 52, 53, 55, 56, 57, 101, 102, 105, 106, 107, 108, 109, 110, 111, 120], "unless": 186, "unlik": [43, 46, 47, 48, 49, 55, 107, 109, 120, 147, 163, 164, 166, 167, 168, 169, 171], "unnecessari": 176, "unpad": 239, "unseen": 259, "unsqueez": 237, "unstabl": 13, "up": [160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 255, 257], "updat": [4, 43, 49, 50, 120, 121, 122, 123, 124, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176], "upon": [24, 41, 46, 47, 48, 49], "upper": [17, 104, 171, 184], "us": [0, 2, 3, 4, 5, 7, 8, 9, 11, 13, 14, 16, 17, 19, 22, 23, 24, 25, 27, 28, 30, 31, 32, 33, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 73, 75, 80, 82, 84, 87, 88, 97, 98, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 174, 175, 176, 177, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 216, 218, 219, 220, 227, 232, 238, 239, 241, 243, 245, 246, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259], "usag": [3, 8, 47, 50, 160, 161, 250, 251, 252, 253, 254, 255, 256, 257], "use_aux": [22, 23, 24], "user": [1, 2, 3, 4, 7, 46, 47, 48, 49, 159, 164, 248, 249, 259], "usual": 136, "util": [3, 7, 8, 48, 49, 159, 185], "v": [11, 16, 19, 165, 166, 168, 169, 199], "v1": [22, 23, 26, 27, 28, 41], "v2": [26, 28, 41], "v3": [22, 24, 25, 41], "v4": [22, 25, 41], "v_": [162, 165, 166, 168, 169, 170, 172], "v_stack": 247, "v_t": [169, 170], "val": 99, "valid": [116, 117, 118, 126, 127, 128, 231], "valu": [7, 10, 14, 15, 16, 19, 42, 44, 46, 48, 50, 52, 55, 58, 59, 60, 61, 62, 63, 65, 76, 77, 78, 80, 81, 82, 84, 85, 86, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 112, 114, 120, 121, 122, 123, 124, 126, 127, 128, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 152, 153, 154, 155, 156, 157, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 178, 180, 181, 182, 183, 184, 185, 198, 199, 200, 201, 202, 208, 209, 210, 212, 215, 216, 217, 218, 220, 222, 223, 225, 226, 234, 239, 240, 242, 246, 251, 253, 254, 256], "valuabl": 185, "valueerror": [1, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 160], "vanish": [107, 111, 141, 142, 143], "var": 207, "vari": [47, 49, 86, 97, 149, 255], "variabl": [44, 50, 86, 87, 88, 132, 149, 150, 151, 159, 174, 176, 180, 200, 252, 255], "varianc": [57, 66, 82, 84, 101, 102, 105, 106, 111, 120, 126, 127, 128, 141, 142, 143, 144, 145, 146, 147, 165, 166, 167, 168, 169, 182, 232, 255, 259], "variant": [34, 35, 36, 37, 38, 165, 166, 167], "variat": [144, 145, 146, 252, 259], "varieti": [4, 26, 185, 259], "variou": [22, 27, 28, 30, 41, 110, 161, 185, 218, 220, 239, 249], "vdot": 195, "vector": [11, 16, 17, 18, 19, 73, 75, 131, 133, 189, 190, 191, 195], "veloc": [162, 170, 172], "veri": [16, 41, 163], "versa": 171, "versatil": [185, 238], "version": [19, 22, 26, 30, 31, 32, 170, 195, 253], "vertic": [244, 247, 256], "vgg": 34, "vggnet": [29, 35, 36, 37, 38, 41], "vggnet_11": 41, "vggnet_13": 41, "vggnet_16": 41, "vggnet_19": 41, "via": [3, 4], "vice": 171, "video": [63, 70, 118, 128, 146, 154, 157], "view": [26, 30, 47, 153, 154, 155, 156, 157, 242], "vision": [41, 62, 117, 131, 259], "visual": [39, 41], "vol": 41, "volumetr": [63, 70, 118, 128, 146, 154, 157], "vstack": 237, "w": [62, 63, 65, 69, 70, 73, 75, 87, 88, 90, 91, 94, 95, 97, 98, 116, 117, 118, 127, 128, 131, 133, 142, 143, 145, 146, 150, 151, 154, 157, 250, 252], "w_": [62, 63, 87, 88, 90, 91, 94, 95, 97, 117, 118, 150, 151, 153, 154, 156, 157], "w_out": [62, 63, 90, 91, 94, 95], "wa": [23, 120, 121, 122, 123, 124, 176], "wai": [1, 21, 40, 174, 176, 242], "want": [0, 7, 248, 250], "warn": [46, 48], "we": [3, 7, 175, 238], "weight": [41, 61, 62, 63, 73, 75, 76, 77, 81, 82, 84, 85, 97, 101, 102, 105, 106, 116, 117, 118, 120, 121, 122, 123, 124, 131, 133, 135, 136, 139, 141, 142, 143, 144, 145, 146, 147, 159, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 180, 185], "weight1": 48, "weight2": 48, "weight_decai": [162, 163, 164, 165, 166, 167, 168, 169, 170, 172], "well": [24, 101, 102], "were": 50, "what": 176, "when": [0, 1, 3, 7, 14, 44, 47, 49, 50, 52, 55, 61, 62, 63, 107, 132, 141, 142, 143, 144, 145, 146, 160, 163, 171, 174, 176, 177, 178, 185, 196, 248, 250], "where": [3, 4, 5, 10, 11, 13, 14, 15, 16, 17, 19, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 68, 69, 70, 73, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 178, 185, 187, 188, 192, 193, 194, 196, 197, 200, 201, 212, 216, 217, 218, 219, 220, 223, 225, 227, 230, 231, 232, 234, 239, 241, 245, 248, 249, 250, 251, 252, 253, 254, 255, 256], "whether": [1, 10, 22, 23, 24, 44, 45, 101, 102, 170, 174, 180, 181, 182, 184, 186, 200, 201, 218, 219, 220, 227, 232], "which": [0, 7, 10, 11, 13, 14, 15, 16, 17, 19, 25, 28, 35, 36, 37, 38, 41, 44, 46, 48, 50, 55, 59, 78, 98, 107, 108, 109, 113, 114, 120, 137, 139, 141, 142, 143, 144, 145, 146, 147, 165, 166, 168, 170, 174, 176, 178, 180, 181, 184, 209, 210, 211, 212, 213, 214, 217, 218, 219, 220, 221, 223, 224, 225, 227, 228, 229, 230, 232, 234, 241, 242, 244, 246, 249, 250, 252, 253, 254, 255, 256, 257, 259], "while": [7, 28, 41, 47, 50, 66, 108, 110, 159, 162, 163, 165, 166, 167, 168, 169, 170, 171, 172, 176, 242, 244, 253, 259], "who": [7, 46, 47, 48, 49], "whose": [19, 201, 204, 206, 208, 212, 216, 222], "wide": [4, 5, 8, 16, 41, 56, 110, 116, 117, 136], "wider": [61, 62], "width": [62, 63, 65, 69, 70, 87, 88, 90, 91, 94, 95, 97, 98, 117, 118, 142, 143, 145, 146, 150, 151, 153, 154, 156, 157, 250, 252, 257], "window": [89, 90, 91, 93, 94, 95, 152, 153, 154, 155, 156, 157, 163, 218, 220], "wise": [52, 53, 55, 56, 57, 58, 59, 60, 113, 120, 121, 122, 123, 124, 126, 127, 128, 159, 175, 187, 188, 191, 192, 193, 194, 196, 197, 208, 209, 210, 211, 212, 213, 214, 215, 217, 221, 222, 223, 224, 225, 226, 228, 229, 230, 236, 247], "within": [2, 41, 42, 43, 46, 47, 48, 49, 50, 60, 97, 98, 106, 108, 110, 111, 112, 114, 116, 117, 118, 120, 121, 122, 132, 135, 136, 137, 138, 139, 141, 142, 143, 144, 147, 152, 153, 154, 155, 156, 157, 161, 176, 198, 212, 255, 259], "without": [7, 46, 47, 48, 73, 75, 116, 117, 118, 131, 133, 174, 177, 218, 240, 242, 246], "won": 176, "work": [1, 2, 3, 7, 9, 175, 178], "workflow": [185, 259], "workload": 7, "wrap": [3, 159, 176, 233], "wrapper": 159, "x": [7, 8, 18, 26, 30, 34, 42, 43, 44, 46, 47, 48, 49, 50, 59, 73, 75, 98, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 180, 181, 182, 184, 200, 201, 216, 238, 250, 251, 252, 253, 254, 255, 256, 257], "x1": 131, "x2": 131, "x_": [136, 139, 238], "x_c": [136, 139], "x_i": 135, "x_k": 136, "xavier": [101, 102, 105, 106], "xavier_norm": 100, "xavier_uniform": 100, "xy": 238, "x\u2081": 131, "x\u2082": 131, "y": [46, 47, 48, 49, 50, 98, 107, 108, 109, 110, 111, 112, 114, 116, 117, 118, 120, 121, 122, 123, 124, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 180, 181, 182, 184, 200, 201, 238, 253], "y_": [136, 139, 238], "y_c": [136, 139], "y_i": 135, "yann": [5, 41], "yet": [7, 175], "yield": [0, 1, 44, 176], "you": [0, 42, 47, 49, 50, 159, 161, 174, 176, 185, 200, 201, 202, 206, 231, 233, 248, 250, 259], "your": [159, 161, 174, 176, 185, 259], "z": [201, 205, 206], "zeiler": [39, 41], "zero": [14, 16, 17, 24, 42, 52, 55, 61, 62, 63, 66, 67, 68, 69, 70, 89, 90, 91, 93, 94, 95, 99, 101, 102, 103, 104, 105, 106, 107, 109, 110, 111, 116, 117, 118, 120, 121, 122, 123, 124, 147, 152, 153, 154, 155, 156, 157, 159, 160, 163, 164, 165, 166, 167, 168, 169, 170, 200, 201, 202, 206, 207, 212, 222, 239], "zero_grad": [45, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 186], "zeros_lik": [201, 207], "zfnet": [29, 41], "zisserman": 41, "\u03c3\u1d62": 16}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "datasets.MNIST", "Image Datasets", "Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "models.alexnet", "Inception", "models.inception_v1", "models.inception_v3", "models.inception_v4", "InceptionResNet", "models.inception_resnet_v1", "models.inception_resnet_v2", "ConvNets", "LeNet", "models.lenet_1", "models.lenet_4", "models.lenet_5", "VGGNet", "models.vggnet_11", "models.vggnet_13", "models.vggnet_16", "models.vggnet_19", "ZFNet", "models.zfnet", "lucid.models", "models.summarize", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.LeakyReLU", "nn.ReLU", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Tanh", "Activation Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "Fused Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "lucid.nn", "optim.Optimizer", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.types", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.meshgrid", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.unsqueeze", "lucid.vstack", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": 175, "1d": 175, "2": 175, "2d": 175, "3": 175, "It": [174, 176], "ab": 208, "activ": [54, 72, 115, 130], "ad": 175, "adadelta": 163, "adagrad": 164, "adam": 165, "adamax": 167, "adamw": 166, "adaptive_avg_pool1d": 86, "adaptive_avg_pool2d": 87, "adaptive_avg_pool3d": 88, "adaptiveavgpool1d": 149, "adaptiveavgpool2d": 150, "adaptiveavgpool3d": 151, "add": 187, "addit": 16, "admonit": 178, "advanc": [65, 259], "alexnet": [20, 21], "algebra": 12, "algorithm": [162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "alias": 178, "align": 175, "alpha_dropout": 66, "alphadropout": 120, "also": 161, "anoth": 233, "arang": 198, "arcco": 209, "architectur": [20, 31, 32, 33, 39], "arcsin": 210, "arctan": 211, "asgd": 162, "attribut": [5, 20, 26, 30, 34, 39, 43, 45, 46, 47, 48, 49, 50, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 186, 250, 251, 252, 253, 254, 255, 256, 257], "avg_pool1d": 89, "avg_pool2d": 90, "avg_pool3d": 91, "avgpool1d": 152, "avgpool2d": 153, "avgpool3d": 154, "axi": 175, "backpropag": 186, "backward": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 73, 75, 97, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "batch_norm": 82, "batchnorm1d": 141, "batchnorm2d": 142, "batchnorm3d": 143, "bceloss": 135, "behavior": [86, 87, 88, 149, 150, 151], "benefit": 176, "bilinear": [73, 131], "binari": 207, "binary_cross_entropi": 76, "broadcast": 175, "buffer": 43, "calcul": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 65, 73, 75, 86, 87, 88, 97, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257], "captur": 177, "case": 178, "centercrop": 250, "choleski": 9, "class": [0, 1, 2, 5, 20, 22, 26, 30, 34, 39, 43, 44, 45, 46, 47, 48, 49, 50, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 186, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257], "clip": 212, "co": 213, "combin": 0, "compon": [3, 7, 159], "compos": 248, "concatdataset": [0, 1], "concaten": 234, "conclus": [3, 7, 159, 174, 175, 176, 185, 249, 259], "constant": 99, "contain": 51, "conv1d": [61, 116], "conv2d": [62, 117], "conv3d": [63, 118], "convbnrelu1d": 126, "convbnrelu2d": 127, "convbnrelu3d": 128, "convnet": [29, 41], "convolut": [64, 72, 119, 130], "core": 7, "cosh": 214, "creat": [45, 186, 233], "cross_entropi": 77, "crossentropyloss": 136, "cube": 215, "custom": [1, 2, 3, 44, 160, 161, 259], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 5, 6], "defin": [2, 44, 160, 161], "definit": 178, "descript": 177, "det": 10, "detail": 16, "diag": 199, "dilat": 65, "div": 188, "dot": 189, "dropout": [67, 71, 72, 121, 125, 130], "dropout1d": [68, 122], "dropout2d": [69, 123], "dropout3d": [70, 124], "eig": 11, "elu": [52, 107], "empti": 200, "empty_lik": 201, "exampl": [0, 1, 2, 3, 5, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 23, 24, 25, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 73, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159, 160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 259], "exp": 216, "ey": 202, "featur": [4, 7, 8, 161, 185, 259], "flatten": 235, "forward": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 65, 73, 75, 86, 87, 88, 97, 101, 102, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 251, 252, 253, 254, 255, 256, 257], "from": 233, "function": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 40, 42, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 101, 102, 103, 104, 105, 106, 174, 176, 177, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 207, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "fuse": [129, 130], "futur": 4, "gelu": [53, 108], "gener": [179, 207], "get": 161, "grad_en": 174, "gradient": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 73, 75, 97, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 152, 153, 154, 155, 156, 157, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 234, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "guidelin": 178, "how": [174, 176], "hstack": 236, "huber_loss": 78, "huberloss": 137, "ident": 132, "imag": [6, 258], "incept": 22, "inception_resnet_v1": 27, "inception_resnet_v2": 28, "inception_v1": 23, "inception_v3": 24, "inception_v4": 25, "inceptionresnet": 26, "index": 186, "init": [99, 101, 102, 103, 104, 105, 106], "initi": 100, "inner": 190, "input": 233, "inspect": [161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "instance_norm": 84, "instancenorm1d": 144, "instancenorm2d": 145, "instancenorm3d": 146, "integr": [3, 159, 185, 259], "interpol": 97, "inv": 13, "iter": 186, "kaiming_norm": 101, "kaiming_uniform": 102, "kei": [3, 4, 7, 159, 161, 185, 259], "layer": [115, 119, 125, 129, 130, 134, 140, 148, 158], "layer_norm": 85, "layernorm": 147, "leaky_relu": 55, "leakyrelu": 109, "learn": 185, "lenet": 30, "lenet_1": 31, "lenet_4": 32, "lenet_5": 33, "limit": 7, "linalg": [8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "linear": [12, 72, 74, 75, 130, 133, 134], "list": 233, "load": 1, "log": 217, "loss": [72, 79, 130, 140], "lucid": [3, 4, 7, 8, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 41, 72, 159, 161, 174, 175, 176, 177, 178, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 259], "matmul": 191, "matrix": 191, "matrix_pow": 14, "max": 218, "max_pool1d": 93, "max_pool2d": 94, "max_pool3d": 95, "maximum": 192, "maxpool1d": 155, "maxpool2d": 156, "maxpool3d": 157, "mean": 219, "meshgrid": 238, "metadata": 177, "method": [0, 1, 2, 5, 26, 30, 34, 44, 45, 160, 186], "min": 220, "minimum": 193, "mnist": 5, "model": [21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 40, 41, 42, 159], "modul": [44, 130], "moduledict": 46, "modulelist": 47, "more": 185, "mse_loss": 80, "mseloss": 138, "mul": 194, "multipl": [0, 191], "nadam": 168, "new": 175, "newaxi": 175, "nll_loss": 81, "nllloss": 139, "nn": [43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 72, 73, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 159], "no_grad": 176, "norm": 15, "normal": [72, 83, 103, 130, 148, 251], "note": 7, "number": 179, "ones": 203, "ones_lik": 204, "oper": [12, 191, 207], "optim": [160, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 173], "organ": 159, "outer": 195, "overview": [3, 4, 7, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 159, 161, 185, 259], "pad": 239, "paramet": [1, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 34, 35, 36, 37, 38, 39, 40, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 73, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 176, 177, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257], "parameterdict": 48, "parameterlist": 49, "perform": 186, "pinv": 16, "pipelin": [3, 259], "pitfal": [174, 176], "pool": [72, 92, 130, 158], "potenti": [174, 176], "power": 196, "properti": [45, 186], "qr": 17, "radam": 169, "rais": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19], "rand": 180, "randint": 181, "randn": 182, "random": [179, 180, 181, 182, 183, 184, 185], "randomcrop": 252, "randomgrayscal": 253, "randomhorizontalflip": 254, "randomrot": 255, "randomverticalflip": 256, "ravel": 240, "reciproc": 221, "refer": [5, 161], "register_model": 177, "relu": [56, 110], "repeat": 241, "reshap": 242, "resiz": 257, "return": [9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 23, 24, 25, 27, 28, 31, 32, 33, 35, 36, 37, 38, 40, 42, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 73, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 174, 176, 180, 181, 182, 183, 184, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "rmsprop": 170, "rotat": 98, "rprop": 171, "rule": 191, "see": 161, "seed": 183, "selu": [57, 111], "sequenti": 50, "sgd": 172, "sigmoid": [58, 112], "sign": 222, "signatur": [0, 1, 2, 5, 9, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 55, 56, 57, 58, 59, 60, 61, 62, 63, 65, 66, 67, 68, 69, 70, 73, 75, 76, 77, 78, 80, 81, 82, 84, 85, 86, 87, 88, 89, 90, 91, 93, 94, 95, 97, 98, 99, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 118, 120, 121, 122, 123, 124, 126, 127, 128, 131, 132, 133, 135, 136, 137, 138, 139, 141, 142, 143, 144, 145, 146, 147, 149, 150, 151, 152, 153, 154, 155, 156, 157, 160, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 174, 176, 177, 180, 181, 182, 183, 184, 186, 187, 188, 189, 190, 191, 192, 193, 194, 195, 196, 197, 198, 199, 200, 201, 202, 203, 204, 205, 206, 208, 209, 210, 211, 212, 213, 214, 215, 216, 217, 218, 219, 220, 221, 222, 223, 224, 225, 226, 227, 228, 229, 230, 231, 232, 233, 234, 235, 236, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248, 249, 250, 251, 252, 253, 254, 255, 256, 257], "sin": 223, "sinh": 224, "slice": 186, "softmax": [59, 113], "solv": 18, "sqrt": 225, "squar": 226, "squeez": 243, "stack": 244, "start": 161, "state": [161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172], "sub": 197, "sum": 227, "summar": 42, "summari": 42, "svd": 19, "tabl": 42, "tan": 228, "tanh": [60, 114, 229], "tensor": [175, 186, 207, 233, 237], "through": 186, "tile": 245, "totensor": 249, "trace": 230, "track": 186, "transform": [248, 249, 250, 251, 252, 253, 254, 255, 256, 257, 258, 259], "transpos": 231, "type": 178, "unari": 207, "unfold": 65, "uniform": [104, 184], "unsqueez": 246, "us": [1, 162, 163, 164, 165, 166, 167, 168, 169, 170, 171, 172, 178, 233], "usag": [4, 7, 23, 24, 25, 27, 28, 30, 31, 32, 33, 43, 98, 174, 175, 176, 178, 238, 248, 249, 259], "util": [72, 96], "utilit": 237, "var": 232, "vggnet": 34, "vggnet_11": 35, "vggnet_13": 36, "vggnet_16": 37, "vggnet_19": 38, "vstack": 247, "weight": 100, "why": 178, "work": [4, 174, 176], "xavier_norm": 105, "xavier_uniform": 106, "zero": 205, "zeros_lik": 206, "zfnet": [39, 40]}})