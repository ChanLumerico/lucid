Search.setIndex({"alltitles": {"@ Operator": [[267, "operator"]], "Activation Functions": [[118, null]], "Activation Layers": [[192, null], [203, null]], "Additional Details": [[19, "additional-details"]], "Admonitions and Usage Guidelines": [[253, "admonitions-and-usage-guidelines"]], "Advanced Example with Dilation": [[129, "advanced-example-with-dilation"]], "Advanced Features": [[335, "advanced-features"]], "AlexNet": [[23, null]], "Algorithm": [[237, "algorithm"], [238, "algorithm"], [239, "algorithm"], [240, "algorithm"], [241, "algorithm"], [242, "algorithm"], [243, "algorithm"], [244, "algorithm"], [245, "algorithm"], [246, "algorithm"], [247, "algorithm"]], "Architecture": [[23, "architecture"], [53, "architecture"], [54, "architecture"], [55, "architecture"], [103, "architecture"]], "Architecture Details": [[72, "architecture-details"], [73, "architecture-details"]], "Attention Mechanism": [[170, "attention-mechanism"]], "Attributes": [[5, "attributes"], [6, "attributes"], [7, "attributes"], [8, "attributes"], [23, "attributes"], [48, "attributes"], [52, "attributes"], [63, "attributes"], [74, "attributes"], [81, "attributes"], [91, "attributes"], [96, "attributes"], [101, "attributes"], [103, "attributes"], [107, "attributes"], [109, "attributes"], [110, "attributes"], [111, "attributes"], [112, "attributes"], [113, "attributes"], [114, "attributes"], [163, "attributes"], [164, "attributes"], [165, "attributes"], [166, "attributes"], [167, "attributes"], [168, "attributes"], [169, "attributes"], [180, "attributes"], [181, "attributes"], [184, "attributes"], [185, "attributes"], [187, "attributes"], [188, "attributes"], [189, "attributes"], [191, "attributes"], [193, "attributes"], [194, "attributes"], [195, "attributes"], [197, "attributes"], [198, "attributes"], [199, "attributes"], [200, "attributes"], [201, "attributes"], [204, "attributes"], [205, "attributes"], [206, "attributes"], [208, "attributes"], [209, "attributes"], [210, "attributes"], [211, "attributes"], [212, "attributes"], [214, "attributes"], [215, "attributes"], [216, "attributes"], [217, "attributes"], [218, "attributes"], [219, "attributes"], [220, "attributes"], [222, "attributes"], [223, "attributes"], [224, "attributes"], [225, "attributes"], [226, "attributes"], [227, "attributes"], [228, "attributes"], [229, "attributes"], [230, "attributes"], [262, "attributes"], [326, "attributes"], [327, "attributes"], [328, "attributes"], [329, "attributes"], [330, "attributes"], [331, "attributes"], [332, "attributes"], [333, "attributes"]], "Backward Gradient Calculation": [[12, "backward-gradient-calculation"], [13, "backward-gradient-calculation"], [14, "backward-gradient-calculation"], [16, "backward-gradient-calculation"], [17, "backward-gradient-calculation"], [18, "backward-gradient-calculation"], [19, "backward-gradient-calculation"], [20, "backward-gradient-calculation"], [21, "backward-gradient-calculation"], [22, "backward-gradient-calculation"], [110, "backward-gradient-calculation"], [111, "backward-gradient-calculation"], [112, "backward-gradient-calculation"], [113, "backward-gradient-calculation"], [114, "backward-gradient-calculation"], [116, "backward-gradient-calculation"], [117, "backward-gradient-calculation"], [119, "backward-gradient-calculation"], [120, "backward-gradient-calculation"], [121, "backward-gradient-calculation"], [122, "backward-gradient-calculation"], [123, "backward-gradient-calculation"], [124, "backward-gradient-calculation"], [137, "backward-gradient-calculation"], [139, "backward-gradient-calculation"], [161, "backward-gradient-calculation"], [169, "backward-gradient-calculation"], [179, "backward-gradient-calculation"], [180, "backward-gradient-calculation"], [181, "backward-gradient-calculation"], [182, "backward-gradient-calculation"], [183, "backward-gradient-calculation"], [184, "backward-gradient-calculation"], [185, "backward-gradient-calculation"], [187, "backward-gradient-calculation"], [188, "backward-gradient-calculation"], [189, "backward-gradient-calculation"], [190, "backward-gradient-calculation"], [191, "backward-gradient-calculation"], [193, "backward-gradient-calculation"], [194, "backward-gradient-calculation"], [195, "backward-gradient-calculation"], [197, "backward-gradient-calculation"], [198, "backward-gradient-calculation"], [199, "backward-gradient-calculation"], [200, "backward-gradient-calculation"], [201, "backward-gradient-calculation"], [204, "backward-gradient-calculation"], [205, "backward-gradient-calculation"], [206, "backward-gradient-calculation"], [208, "backward-gradient-calculation"], [209, "backward-gradient-calculation"], [210, "backward-gradient-calculation"], [211, "backward-gradient-calculation"], [212, "backward-gradient-calculation"], [214, "backward-gradient-calculation"], [215, "backward-gradient-calculation"], [216, "backward-gradient-calculation"], [217, "backward-gradient-calculation"], [218, "backward-gradient-calculation"], [219, "backward-gradient-calculation"], [220, "backward-gradient-calculation"], [225, "backward-gradient-calculation"], [226, "backward-gradient-calculation"], [227, "backward-gradient-calculation"], [228, "backward-gradient-calculation"], [229, "backward-gradient-calculation"], [230, "backward-gradient-calculation"], [263, "backward-gradient-calculation"], [264, "backward-gradient-calculation"], [265, "backward-gradient-calculation"], [266, "backward-gradient-calculation"], [267, "backward-gradient-calculation"], [268, "backward-gradient-calculation"], [269, "backward-gradient-calculation"], [270, "backward-gradient-calculation"], [271, "backward-gradient-calculation"], [272, "backward-gradient-calculation"], [273, "backward-gradient-calculation"], [284, "backward-gradient-calculation"], [285, "backward-gradient-calculation"], [286, "backward-gradient-calculation"], [287, "backward-gradient-calculation"], [288, "backward-gradient-calculation"], [289, "backward-gradient-calculation"], [290, "backward-gradient-calculation"], [291, "backward-gradient-calculation"], [292, "backward-gradient-calculation"], [293, "backward-gradient-calculation"], [294, "backward-gradient-calculation"], [295, "backward-gradient-calculation"], [296, "backward-gradient-calculation"], [297, "backward-gradient-calculation"], [298, "backward-gradient-calculation"], [299, "backward-gradient-calculation"], [300, "backward-gradient-calculation"], [301, "backward-gradient-calculation"], [302, "backward-gradient-calculation"], [303, "backward-gradient-calculation"], [304, "backward-gradient-calculation"], [305, "backward-gradient-calculation"], [306, "backward-gradient-calculation"], [307, "backward-gradient-calculation"], [308, "backward-gradient-calculation"], [310, "backward-gradient-calculation"], [312, "backward-gradient-calculation"], [314, "backward-gradient-calculation"], [315, "backward-gradient-calculation"], [316, "backward-gradient-calculation"], [317, "backward-gradient-calculation"], [318, "backward-gradient-calculation"], [319, "backward-gradient-calculation"], [320, "backward-gradient-calculation"], [321, "backward-gradient-calculation"], [322, "backward-gradient-calculation"], [323, "backward-gradient-calculation"]], "Behavior": [[150, "behavior"], [151, "behavior"], [152, "behavior"], [222, "behavior"], [223, "behavior"], [224, "behavior"]], "Benefits": [[251, "benefits"]], "Binary Functions": [[283, null]], "Bottleneck Configuration": [[61, "bottleneck-configuration"], [62, "bottleneck-configuration"]], "CIFAR10": [[5, null]], "CIFAR100": [[6, null]], "Class Signature": [[0, "class-signature"], [1, "class-signature"], [2, "class-signature"], [5, "class-signature"], [6, "class-signature"], [7, "class-signature"], [8, "class-signature"], [23, "class-signature"], [25, "class-signature"], [30, "class-signature"], [31, "class-signature"], [44, "class-signature"], [48, "class-signature"], [52, "class-signature"], [56, "class-signature"], [57, "class-signature"], [58, "class-signature"], [63, "class-signature"], [74, "class-signature"], [81, "class-signature"], [91, "class-signature"], [96, "class-signature"], [101, "class-signature"], [103, "class-signature"], [107, "class-signature"], [108, "class-signature"], [109, "class-signature"], [110, "class-signature"], [111, "class-signature"], [112, "class-signature"], [113, "class-signature"], [114, "class-signature"], [163, "class-signature"], [164, "class-signature"], [165, "class-signature"], [166, "class-signature"], [167, "class-signature"], [168, "class-signature"], [169, "class-signature"], [170, "class-signature"], [180, "class-signature"], [181, "class-signature"], [182, "class-signature"], [183, "class-signature"], [184, "class-signature"], [185, "class-signature"], [186, "class-signature"], [187, "class-signature"], [188, "class-signature"], [189, "class-signature"], [190, "class-signature"], [191, "class-signature"], [193, "class-signature"], [194, "class-signature"], [195, "class-signature"], [197, "class-signature"], [198, "class-signature"], [199, "class-signature"], [200, "class-signature"], [201, "class-signature"], [204, "class-signature"], [205, "class-signature"], [206, "class-signature"], [208, "class-signature"], [209, "class-signature"], [210, "class-signature"], [211, "class-signature"], [212, "class-signature"], [214, "class-signature"], [215, "class-signature"], [216, "class-signature"], [217, "class-signature"], [218, "class-signature"], [219, "class-signature"], [220, "class-signature"], [222, "class-signature"], [223, "class-signature"], [224, "class-signature"], [225, "class-signature"], [226, "class-signature"], [227, "class-signature"], [228, "class-signature"], [229, "class-signature"], [230, "class-signature"], [232, "class-signature"], [235, "class-signature"], [237, "class-signature"], [238, "class-signature"], [239, "class-signature"], [240, "class-signature"], [241, "class-signature"], [242, "class-signature"], [243, "class-signature"], [244, "class-signature"], [245, "class-signature"], [246, "class-signature"], [247, "class-signature"], [262, "class-signature"], [324, "class-signature"], [325, "class-signature"], [326, "class-signature"], [327, "class-signature"], [328, "class-signature"], [329, "class-signature"], [330, "class-signature"], [331, "class-signature"], [332, "class-signature"], [333, "class-signature"]], "Combining multiple datasets": [[0, null]], "Conclusion": [[3, "conclusion"], [10, "conclusion"], [234, "conclusion"], [249, "conclusion"], [250, "conclusion"], [251, "conclusion"], [261, "conclusion"], [325, "conclusion"], [335, "conclusion"]], "Configurations": [[30, "configurations"]], "Containers": [[115, null]], "Conv-BatchNorm-ReLU": [[171, null]], "ConvNets": [[51, null], [105, "convnets"]], "Convolution Functions": [[128, null], [136, null]], "Convolution Layers": [[196, null], [203, null]], "Core Components": [[10, "core-components"]], "Create a Tensor from a list": [[309, null]], "Creating a Parameter": [[109, null]], "Creating a tensor with gradient tracking": [[262, null]], "Custom Data Pipelines": [[3, "custom-data-pipelines"]], "Custom Pipelines": [[335, "custom-pipelines"]], "Defining a Custom Optimizer": [[236, null]], "Defining a custom dataset": [[2, null]], "Defining a custom module": [[108, null]], "Defining a custom optimizer": [[235, null]], "DenseNet": [[25, null]], "Depthwise Separable Convolution": [[171, null]], "Description": [[75, "description"], [76, "description"], [77, "description"], [78, "description"], [79, "description"], [80, "description"], [92, "description"], [93, "description"], [94, "description"], [252, "description"]], "Dropout Functions": [[135, null], [136, null]], "Dropout Layers": [[202, null], [203, null]], "EfficientNet": [[30, null]], "EfficientNet Configurations": [[30, "id1"]], "EfficientNet_V2": [[31, null]], "Example": [[3, null], [3, null], [3, null], [12, "example"], [13, "example"], [14, "example"], [16, "example"], [17, "example"], [18, "example"], [19, "example"], [20, "example"], [21, "example"], [22, "example"], [59, "example"], [60, "example"], [129, "example"], [234, null], [234, null], [234, null], [249, "example"], [251, "example"], [254, "example"], [256, "example"], [257, "example"], [258, "example"], [259, "example"], [260, "example"], [261, null], [261, null], [261, null], [274, "example"], [275, "example"], [276, "example"], [277, "example"], [278, "example"], [279, "example"], [280, "example"], [281, "example"], [282, "example"], [284, "example"], [285, "example"], [286, "example"], [287, "example"], [288, "example"], [289, "example"], [290, "example"], [291, "example"], [293, "example"], [295, "example"], [297, "example"], [298, "example"], [299, "example"], [300, "example"], [301, "example"], [302, "example"], [303, "example"], [304, "example"], [305, "example"], [306, "example"], [307, "example"], [308, "example"], [310, "example"], [312, "example"], [316, "example"], [318, "example"], [319, "example"], [320, "example"], [322, "example"], [323, "example"]], "Example 1: Adding a new axis to a 1D tensor": [[250, null]], "Example 2: Adding a new axis to a 2D tensor": [[250, null]], "Example 3: Adding a new axis to align tensors for broadcasting": [[250, null]], "Example Usage": [[10, "example-usage"], [45, "example-usage"], [46, "example-usage"], [47, "example-usage"], [49, "example-usage"], [50, "example-usage"], [52, "example-usage"], [53, "example-usage"], [54, "example-usage"], [55, "example-usage"], [87, "example-usage"], [88, "example-usage"], [89, "example-usage"], [90, "example-usage"], [95, "example-usage"], [162, "example-usage"], [324, "example-usage"], [325, "example-usage"], [335, "example-usage"]], "Example Use Cases": [[253, "example-use-cases"]], "Examples": [[0, "examples"], [1, "examples"], [2, "examples"], [5, "examples"], [6, "examples"], [7, "examples"], [8, "examples"], [11, "examples"], [23, "examples"], [24, "examples"], [25, "examples"], [26, "examples"], [27, "examples"], [28, "examples"], [29, "examples"], [30, "examples"], [32, "examples"], [33, "examples"], [34, "examples"], [35, "examples"], [36, "examples"], [37, "examples"], [38, "examples"], [39, "examples"], [40, "examples"], [41, "examples"], [42, "examples"], [43, "examples"], [58, "examples"], [61, "examples"], [62, "examples"], [63, "examples"], [64, "examples"], [65, "examples"], [66, "examples"], [67, "examples"], [68, "examples"], [69, "examples"], [70, "examples"], [71, "examples"], [72, "examples"], [73, "examples"], [75, "examples"], [76, "examples"], [77, "examples"], [78, "examples"], [79, "examples"], [80, "examples"], [82, "examples"], [83, "examples"], [84, "examples"], [85, "examples"], [86, "examples"], [92, "examples"], [93, "examples"], [94, "examples"], [96, "examples"], [97, "examples"], [98, "examples"], [99, "examples"], [100, "examples"], [101, "examples"], [102, "examples"], [103, "examples"], [104, "examples"], [106, "examples"], [107, "examples"], [108, "examples"], [109, "examples"], [110, "examples"], [111, "examples"], [112, "examples"], [113, "examples"], [114, "examples"], [116, "examples"], [117, "examples"], [119, "examples"], [120, "examples"], [121, "examples"], [122, "examples"], [123, "examples"], [124, "examples"], [125, "examples"], [126, "examples"], [127, "examples"], [130, "examples"], [131, "examples"], [132, "examples"], [133, "examples"], [134, "examples"], [137, "examples"], [139, "examples"], [140, "examples"], [141, "examples"], [142, "examples"], [144, "examples"], [145, "examples"], [146, "examples"], [148, "examples"], [149, "examples"], [150, "examples"], [151, "examples"], [152, "examples"], [153, "examples"], [154, "examples"], [155, "examples"], [157, "examples"], [158, "examples"], [159, "examples"], [161, "examples"], [163, "examples"], [164, "examples"], [165, "examples"], [166, "examples"], [167, "examples"], [168, "examples"], [169, "examples"], [170, "examples"], [172, "examples"], [174, "examples"], [175, "examples"], [176, "examples"], [177, "examples"], [178, "examples"], [179, "examples"], [180, "examples"], [181, "examples"], [182, "examples"], [183, "examples"], [184, "examples"], [185, "examples"], [186, "examples"], [187, "examples"], [188, "examples"], [189, "examples"], [190, "examples"], [191, "examples"], [193, "examples"], [194, "examples"], [195, "examples"], [197, "examples"], [198, "examples"], [199, "examples"], [200, "examples"], [201, "examples"], [204, "examples"], [205, "examples"], [206, "examples"], [208, "examples"], [209, "examples"], [210, "examples"], [211, "examples"], [212, "examples"], [214, "examples"], [215, "examples"], [216, "examples"], [217, "examples"], [218, "examples"], [219, "examples"], [220, "examples"], [222, "examples"], [223, "examples"], [224, "examples"], [225, "examples"], [226, "examples"], [227, "examples"], [228, "examples"], [229, "examples"], [230, "examples"], [232, "examples"], [235, "examples"], [236, "examples"], [237, "examples"], [238, "examples"], [239, "examples"], [240, "examples"], [241, "examples"], [242, "examples"], [243, "examples"], [244, "examples"], [245, "examples"], [246, "examples"], [247, "examples"], [252, "examples"], [262, "examples"], [263, "examples"], [264, "examples"], [265, "examples"], [266, "examples"], [268, "examples"], [269, "examples"], [270, "examples"], [271, "examples"], [272, "examples"], [273, "examples"], [292, "examples"], [294, "examples"], [296, "examples"], [309, "examples"], [311, "examples"], [314, "examples"], [315, "examples"], [317, "examples"], [321, "examples"], [326, "examples"], [327, "examples"], [328, "examples"], [329, "examples"], [330, "examples"], [331, "examples"], [332, "examples"], [333, "examples"]], "FashionMNIST": [[7, null]], "Features": [[11, "features"]], "Forward Calculation": [[12, "forward-calculation"], [13, "forward-calculation"], [14, "forward-calculation"], [16, "forward-calculation"], [17, "forward-calculation"], [18, "forward-calculation"], [19, "forward-calculation"], [20, "forward-calculation"], [21, "forward-calculation"], [22, "forward-calculation"], [63, "forward-calculation"], [74, "forward-calculation"], [81, "forward-calculation"], [91, "forward-calculation"], [110, "forward-calculation"], [111, "forward-calculation"], [112, "forward-calculation"], [113, "forward-calculation"], [114, "forward-calculation"], [116, "forward-calculation"], [117, "forward-calculation"], [119, "forward-calculation"], [120, "forward-calculation"], [121, "forward-calculation"], [122, "forward-calculation"], [123, "forward-calculation"], [124, "forward-calculation"], [129, "forward-calculation"], [137, "forward-calculation"], [139, "forward-calculation"], [150, "forward-calculation"], [151, "forward-calculation"], [152, "forward-calculation"], [161, "forward-calculation"], [163, "forward-calculation"], [164, "forward-calculation"], [165, "forward-calculation"], [166, "forward-calculation"], [167, "forward-calculation"], [168, "forward-calculation"], [169, "forward-calculation"], [170, "forward-calculation"], [174, "forward-calculation"], [175, "forward-calculation"], [178, "forward-calculation"], [179, "forward-calculation"], [180, "forward-calculation"], [181, "forward-calculation"], [182, "forward-calculation"], [183, "forward-calculation"], [184, "forward-calculation"], [185, "forward-calculation"], [186, "forward-calculation"], [187, "forward-calculation"], [188, "forward-calculation"], [189, "forward-calculation"], [190, "forward-calculation"], [191, "forward-calculation"], [193, "forward-calculation"], [194, "forward-calculation"], [195, "forward-calculation"], [197, "forward-calculation"], [198, "forward-calculation"], [199, "forward-calculation"], [200, "forward-calculation"], [201, "forward-calculation"], [204, "forward-calculation"], [205, "forward-calculation"], [206, "forward-calculation"], [208, "forward-calculation"], [209, "forward-calculation"], [210, "forward-calculation"], [211, "forward-calculation"], [212, "forward-calculation"], [214, "forward-calculation"], [215, "forward-calculation"], [216, "forward-calculation"], [217, "forward-calculation"], [218, "forward-calculation"], [219, "forward-calculation"], [220, "forward-calculation"], [222, "forward-calculation"], [223, "forward-calculation"], [224, "forward-calculation"], [225, "forward-calculation"], [226, "forward-calculation"], [227, "forward-calculation"], [228, "forward-calculation"], [229, "forward-calculation"], [230, "forward-calculation"], [263, "forward-calculation"], [264, "forward-calculation"], [265, "forward-calculation"], [266, "forward-calculation"], [267, "forward-calculation"], [268, "forward-calculation"], [269, "forward-calculation"], [270, "forward-calculation"], [271, "forward-calculation"], [272, "forward-calculation"], [273, "forward-calculation"], [284, "forward-calculation"], [285, "forward-calculation"], [286, "forward-calculation"], [287, "forward-calculation"], [288, "forward-calculation"], [289, "forward-calculation"], [290, "forward-calculation"], [291, "forward-calculation"], [292, "forward-calculation"], [293, "forward-calculation"], [294, "forward-calculation"], [295, "forward-calculation"], [296, "forward-calculation"], [297, "forward-calculation"], [298, "forward-calculation"], [299, "forward-calculation"], [300, "forward-calculation"], [301, "forward-calculation"], [302, "forward-calculation"], [303, "forward-calculation"], [304, "forward-calculation"], [305, "forward-calculation"], [306, "forward-calculation"], [307, "forward-calculation"], [308, "forward-calculation"], [310, "forward-calculation"], [312, "forward-calculation"], [314, "forward-calculation"], [315, "forward-calculation"], [316, "forward-calculation"], [317, "forward-calculation"], [318, "forward-calculation"], [319, "forward-calculation"], [320, "forward-calculation"], [321, "forward-calculation"], [322, "forward-calculation"], [323, "forward-calculation"], [326, "forward-calculation"], [327, "forward-calculation"], [328, "forward-calculation"], [329, "forward-calculation"], [330, "forward-calculation"], [331, "forward-calculation"], [332, "forward-calculation"], [333, "forward-calculation"]], "Forward Pass": [[101, "forward-pass"]], "Function Signature": [[12, "function-signature"], [13, "function-signature"], [14, "function-signature"], [16, "function-signature"], [17, "function-signature"], [18, "function-signature"], [19, "function-signature"], [20, "function-signature"], [21, "function-signature"], [22, "function-signature"], [24, "function-signature"], [26, "function-signature"], [27, "function-signature"], [28, "function-signature"], [29, "function-signature"], [32, "function-signature"], [33, "function-signature"], [34, "function-signature"], [35, "function-signature"], [36, "function-signature"], [37, "function-signature"], [38, "function-signature"], [39, "function-signature"], [40, "function-signature"], [41, "function-signature"], [42, "function-signature"], [43, "function-signature"], [45, "function-signature"], [46, "function-signature"], [47, "function-signature"], [49, "function-signature"], [50, "function-signature"], [53, "function-signature"], [54, "function-signature"], [55, "function-signature"], [59, "function-signature"], [60, "function-signature"], [61, "function-signature"], [62, "function-signature"], [64, "function-signature"], [65, "function-signature"], [66, "function-signature"], [67, "function-signature"], [68, "function-signature"], [69, "function-signature"], [70, "function-signature"], [71, "function-signature"], [72, "function-signature"], [73, "function-signature"], [75, "function-signature"], [76, "function-signature"], [77, "function-signature"], [78, "function-signature"], [79, "function-signature"], [80, "function-signature"], [82, "function-signature"], [83, "function-signature"], [84, "function-signature"], [85, "function-signature"], [86, "function-signature"], [87, "function-signature"], [88, "function-signature"], [89, "function-signature"], [90, "function-signature"], [92, "function-signature"], [93, "function-signature"], [94, "function-signature"], [95, "function-signature"], [97, "function-signature"], [98, "function-signature"], [99, "function-signature"], [100, "function-signature"], [102, "function-signature"], [104, "function-signature"], [106, "function-signature"], [116, "function-signature"], [117, "function-signature"], [119, "function-signature"], [120, "function-signature"], [121, "function-signature"], [122, "function-signature"], [123, "function-signature"], [124, "function-signature"], [125, "function-signature"], [126, "function-signature"], [127, "function-signature"], [129, "function-signature"], [130, "function-signature"], [131, "function-signature"], [132, "function-signature"], [133, "function-signature"], [134, "function-signature"], [137, "function-signature"], [139, "function-signature"], [140, "function-signature"], [141, "function-signature"], [142, "function-signature"], [144, "function-signature"], [145, "function-signature"], [146, "function-signature"], [148, "function-signature"], [149, "function-signature"], [150, "function-signature"], [151, "function-signature"], [152, "function-signature"], [153, "function-signature"], [154, "function-signature"], [155, "function-signature"], [157, "function-signature"], [158, "function-signature"], [159, "function-signature"], [161, "function-signature"], [162, "function-signature"], [172, "function-signature"], [174, "function-signature"], [175, "function-signature"], [176, "function-signature"], [177, "function-signature"], [178, "function-signature"], [179, "function-signature"], [249, "function-signature"], [251, "function-signature"], [252, "function-signature"], [254, "function-signature"], [256, "function-signature"], [257, "function-signature"], [258, "function-signature"], [259, "function-signature"], [260, "function-signature"], [263, "function-signature"], [264, "function-signature"], [265, "function-signature"], [266, "function-signature"], [267, "function-signature"], [268, "function-signature"], [269, "function-signature"], [270, "function-signature"], [271, "function-signature"], [272, "function-signature"], [273, "function-signature"], [274, "function-signature"], [275, "function-signature"], [276, "function-signature"], [277, "function-signature"], [278, "function-signature"], [279, "function-signature"], [280, "function-signature"], [281, "function-signature"], [282, "function-signature"], [284, "function-signature"], [285, "function-signature"], [286, "function-signature"], [287, "function-signature"], [288, "function-signature"], [289, "function-signature"], [290, "function-signature"], [291, "function-signature"], [292, "function-signature"], [293, "function-signature"], [294, "function-signature"], [295, "function-signature"], [296, "function-signature"], [297, "function-signature"], [298, "function-signature"], [299, "function-signature"], [300, "function-signature"], [301, "function-signature"], [302, "function-signature"], [303, "function-signature"], [304, "function-signature"], [305, "function-signature"], [306, "function-signature"], [307, "function-signature"], [308, "function-signature"], [309, "function-signature"], [310, "function-signature"], [311, "function-signature"], [312, "function-signature"], [314, "function-signature"], [315, "function-signature"], [316, "function-signature"], [317, "function-signature"], [318, "function-signature"], [319, "function-signature"], [320, "function-signature"], [321, "function-signature"], [322, "function-signature"], [323, "function-signature"]], "Fused Layers": [[171, null]], "Future Work": [[4, "future-work"]], "Getting Started": [[236, "getting-started"]], "How It Works": [[249, "how-it-works"], [251, "how-it-works"]], "Image Datasets": [[9, null]], "Image Transformations": [[334, null]], "Inception": [[44, null]], "InceptionResNet": [[48, null]], "Indexing and slicing": [[262, null]], "Inspecting Optimizer State": [[236, null], [237, null], [238, null], [239, null], [240, null], [241, null], [242, null], [243, null], [244, null], [245, null], [246, null], [247, null]], "Integration with lucid": [[3, "integration-with-lucid"], [234, "integration-with-lucid"], [261, "integration-with-lucid"], [335, "integration-with-lucid"]], "Iterating through a tensor": [[262, null]], "Key Components": [[3, "key-components"], [234, "key-components"]], "Key Features": [[4, "key-features"], [10, "key-features"], [87, "key-features"], [88, "key-features"], [89, "key-features"], [90, "key-features"], [95, "key-features"], [236, "key-features"], [261, "key-features"]], "Key Transformations": [[335, "key-transformations"]], "LeNet": [[52, null]], "Learn More": [[261, null]], "Limitations": [[10, "limitations"]], "Linear Algebra Operations": [[15, null]], "Linear Functions": [[136, null], [138, null]], "Linear Layers": [[203, null], [207, null]], "Loading a custom dataset": [[1, null]], "Loss Functions": [[136, null], [143, null]], "Loss Layers": [[203, null], [213, null]], "Lucid": [[10, null]], "MNIST": [[8, null]], "Matrix Multiplication Rules": [[267, "matrix-multiplication-rules"]], "Metadata Captured": [[252, "metadata-captured"]], "Methods": [[0, "methods"], [1, "methods"], [2, "methods"], [5, "methods"], [6, "methods"], [7, "methods"], [8, "methods"], [48, "methods"], [52, "methods"], [96, "methods"], [108, "methods"], [109, "methods"], [235, "methods"], [262, "methods"]], "MobileNet": [[56, null]], "MobileNet_V2": [[57, null]], "MobileNet_V3": [[58, null]], "Modules": [[203, null]], "Normalization Functions": [[136, null], [147, null]], "Normalization Layers": [[203, null], [221, null]], "Notes": [[10, "notes"]], "Optimizers": [[248, null]], "Organizing Models": [[234, "organizing-models"]], "Overview": [[3, "overview"], [4, "overview"], [10, "overview"], [44, "overview"], [45, "overview"], [46, "overview"], [47, "overview"], [48, "overview"], [49, "overview"], [50, "overview"], [52, "overview"], [53, "overview"], [54, "overview"], [55, "overview"], [56, "overview"], [57, "overview"], [58, "overview"], [64, "overview"], [65, "overview"], [66, "overview"], [67, "overview"], [68, "overview"], [69, "overview"], [70, "overview"], [71, "overview"], [82, "overview"], [83, "overview"], [84, "overview"], [85, "overview"], [86, "overview"], [234, "overview"], [236, "overview"], [261, "overview"], [335, "overview"]], "Parameters": [[1, "parameters"], [5, "parameters"], [6, "parameters"], [7, "parameters"], [8, "parameters"], [12, "parameters"], [13, "parameters"], [14, "parameters"], [16, "parameters"], [17, "parameters"], [18, "parameters"], [19, "parameters"], [20, "parameters"], [21, "parameters"], [22, "parameters"], [23, "parameters"], [24, "parameters"], [25, "parameters"], [26, "parameters"], [27, "parameters"], [28, "parameters"], [29, "parameters"], [30, "parameters"], [31, "parameters"], [32, "parameters"], [33, "parameters"], [34, "parameters"], [35, "parameters"], [36, "parameters"], [37, "parameters"], [38, "parameters"], [39, "parameters"], [40, "parameters"], [41, "parameters"], [42, "parameters"], [43, "parameters"], [44, "parameters"], [45, "parameters"], [46, "parameters"], [47, "parameters"], [48, "parameters"], [49, "parameters"], [50, "parameters"], [52, "parameters"], [56, "parameters"], [57, "parameters"], [58, "parameters"], [59, "parameters"], [60, "parameters"], [61, "parameters"], [62, "parameters"], [63, "parameters"], [64, "parameters"], [65, "parameters"], [66, "parameters"], [67, "parameters"], [68, "parameters"], [69, "parameters"], [70, "parameters"], [71, "parameters"], [72, "parameters"], [73, "parameters"], [74, "parameters"], [75, "parameters"], [76, "parameters"], [77, "parameters"], [78, "parameters"], [79, "parameters"], [80, "parameters"], [81, "parameters"], [82, "parameters"], [83, "parameters"], [84, "parameters"], [85, "parameters"], [86, "parameters"], [87, "parameters"], [88, "parameters"], [89, "parameters"], [90, "parameters"], [91, "parameters"], [92, "parameters"], [93, "parameters"], [94, "parameters"], [95, "parameters"], [96, "parameters"], [97, "parameters"], [98, "parameters"], [99, "parameters"], [100, "parameters"], [101, "parameters"], [102, "parameters"], [103, "parameters"], [104, "parameters"], [106, "parameters"], [107, "parameters"], [109, "parameters"], [110, "parameters"], [111, "parameters"], [112, "parameters"], [113, "parameters"], [114, "parameters"], [116, "parameters"], [117, "parameters"], [119, "parameters"], [120, "parameters"], [121, "parameters"], [122, "parameters"], [123, "parameters"], [124, "parameters"], [125, "parameters"], [126, "parameters"], [127, "parameters"], [129, "parameters"], [130, "parameters"], [131, "parameters"], [132, "parameters"], [133, "parameters"], [134, "parameters"], [137, "parameters"], [139, "parameters"], [140, "parameters"], [141, "parameters"], [142, "parameters"], [144, "parameters"], [145, "parameters"], [146, "parameters"], [148, "parameters"], [149, "parameters"], [150, "parameters"], [151, "parameters"], [152, "parameters"], [153, "parameters"], [154, "parameters"], [155, "parameters"], [157, "parameters"], [158, "parameters"], [159, "parameters"], [161, "parameters"], [162, "parameters"], [163, "parameters"], [164, "parameters"], [165, "parameters"], [166, "parameters"], [167, "parameters"], [168, "parameters"], [169, "parameters"], [170, "parameters"], [172, "parameters"], [174, "parameters"], [175, "parameters"], [176, "parameters"], [177, "parameters"], [178, "parameters"], [179, "parameters"], [180, "parameters"], [181, "parameters"], [184, "parameters"], [185, "parameters"], [187, "parameters"], [188, "parameters"], [189, "parameters"], [191, "parameters"], [193, "parameters"], [194, "parameters"], [195, "parameters"], [197, "parameters"], [198, "parameters"], [199, "parameters"], [200, "parameters"], [201, "parameters"], [204, "parameters"], [205, "parameters"], [206, "parameters"], [208, "parameters"], [209, "parameters"], [210, "parameters"], [211, "parameters"], [212, "parameters"], [214, "parameters"], [215, "parameters"], [216, "parameters"], [217, "parameters"], [218, "parameters"], [219, "parameters"], [220, "parameters"], [222, "parameters"], [223, "parameters"], [224, "parameters"], [225, "parameters"], [226, "parameters"], [227, "parameters"], [228, "parameters"], [229, "parameters"], [230, "parameters"], [232, "parameters"], [237, "parameters"], [238, "parameters"], [239, "parameters"], [240, "parameters"], [241, "parameters"], [242, "parameters"], [243, "parameters"], [244, "parameters"], [245, "parameters"], [246, "parameters"], [247, "parameters"], [251, "parameters"], [252, "parameters"], [254, "parameters"], [256, "parameters"], [257, "parameters"], [258, "parameters"], [259, "parameters"], [260, "parameters"], [262, "parameters"], [263, "parameters"], [264, "parameters"], [265, "parameters"], [266, "parameters"], [267, "parameters"], [268, "parameters"], [269, "parameters"], [270, "parameters"], [271, "parameters"], [272, "parameters"], [273, "parameters"], [274, "parameters"], [275, "parameters"], [276, "parameters"], [277, "parameters"], [278, "parameters"], [279, "parameters"], [280, "parameters"], [281, "parameters"], [282, "parameters"], [284, "parameters"], [285, "parameters"], [286, "parameters"], [287, "parameters"], [288, "parameters"], [289, "parameters"], [290, "parameters"], [291, "parameters"], [292, "parameters"], [293, "parameters"], [294, "parameters"], [295, "parameters"], [296, "parameters"], [297, "parameters"], [298, "parameters"], [299, "parameters"], [300, "parameters"], [301, "parameters"], [302, "parameters"], [303, "parameters"], [304, "parameters"], [305, "parameters"], [306, "parameters"], [307, "parameters"], [308, "parameters"], [309, "parameters"], [310, "parameters"], [311, "parameters"], [312, "parameters"], [314, "parameters"], [315, "parameters"], [316, "parameters"], [317, "parameters"], [318, "parameters"], [319, "parameters"], [320, "parameters"], [321, "parameters"], [322, "parameters"], [323, "parameters"], [324, "parameters"], [325, "parameters"], [326, "parameters"], [327, "parameters"], [328, "parameters"], [329, "parameters"], [330, "parameters"], [331, "parameters"], [332, "parameters"], [333, "parameters"]], "Performing backpropagation": [[262, null]], "Pooling Functions": [[136, null], [156, null]], "Pooling Layers": [[203, null], [231, null]], "Potential Pitfalls": [[249, "potential-pitfalls"], [251, "potential-pitfalls"]], "Properties": [[109, "properties"], [262, "properties"]], "Raises": [[12, "raises"], [13, "raises"], [14, "raises"], [16, "raises"], [17, "raises"], [18, "raises"], [19, "raises"], [20, "raises"], [21, "raises"], [22, "raises"]], "Random Number Generations": [[255, null]], "References": [[5, "references"], [6, "references"], [7, "references"], [8, "references"], [169, "references"], [236, "references"]], "ResNeXt": [[74, null]], "ResNet": [[63, null]], "Returns": [[12, "returns"], [13, "returns"], [14, "returns"], [16, "returns"], [17, "returns"], [18, "returns"], [19, "returns"], [20, "returns"], [21, "returns"], [22, "returns"], [24, "returns"], [26, "returns"], [27, "returns"], [28, "returns"], [29, "returns"], [32, "returns"], [33, "returns"], [34, "returns"], [35, "returns"], [36, "returns"], [37, "returns"], [38, "returns"], [39, "returns"], [40, "returns"], [41, "returns"], [42, "returns"], [43, "returns"], [45, "returns"], [46, "returns"], [47, "returns"], [49, "returns"], [50, "returns"], [53, "returns"], [54, "returns"], [55, "returns"], [59, "returns"], [60, "returns"], [61, "returns"], [62, "returns"], [64, "returns"], [65, "returns"], [66, "returns"], [67, "returns"], [68, "returns"], [69, "returns"], [70, "returns"], [71, "returns"], [72, "returns"], [73, "returns"], [75, "returns"], [76, "returns"], [77, "returns"], [78, "returns"], [79, "returns"], [80, "returns"], [82, "returns"], [83, "returns"], [84, "returns"], [85, "returns"], [86, "returns"], [87, "returns"], [88, "returns"], [89, "returns"], [90, "returns"], [92, "returns"], [93, "returns"], [94, "returns"], [95, "returns"], [97, "returns"], [98, "returns"], [99, "returns"], [100, "returns"], [102, "returns"], [104, "returns"], [106, "returns"], [116, "returns"], [117, "returns"], [119, "returns"], [120, "returns"], [121, "returns"], [122, "returns"], [123, "returns"], [124, "returns"], [125, "returns"], [126, "returns"], [127, "returns"], [129, "returns"], [130, "returns"], [131, "returns"], [132, "returns"], [133, "returns"], [134, "returns"], [137, "returns"], [139, "returns"], [140, "returns"], [141, "returns"], [142, "returns"], [144, "returns"], [145, "returns"], [146, "returns"], [148, "returns"], [149, "returns"], [150, "returns"], [151, "returns"], [152, "returns"], [153, "returns"], [154, "returns"], [155, "returns"], [157, "returns"], [158, "returns"], [159, "returns"], [161, "returns"], [162, "returns"], [170, "returns"], [172, "returns"], [174, "returns"], [175, "returns"], [176, "returns"], [177, "returns"], [178, "returns"], [179, "returns"], [186, "returns"], [249, "returns"], [251, "returns"], [254, "returns"], [256, "returns"], [257, "returns"], [258, "returns"], [259, "returns"], [260, "returns"], [263, "returns"], [264, "returns"], [265, "returns"], [266, "returns"], [267, "returns"], [268, "returns"], [269, "returns"], [270, "returns"], [271, "returns"], [272, "returns"], [273, "returns"], [274, "returns"], [275, "returns"], [276, "returns"], [277, "returns"], [278, "returns"], [279, "returns"], [280, "returns"], [281, "returns"], [282, "returns"], [284, "returns"], [285, "returns"], [286, "returns"], [287, "returns"], [288, "returns"], [289, "returns"], [290, "returns"], [291, "returns"], [292, "returns"], [293, "returns"], [294, "returns"], [295, "returns"], [296, "returns"], [297, "returns"], [298, "returns"], [299, "returns"], [300, "returns"], [301, "returns"], [302, "returns"], [303, "returns"], [304, "returns"], [305, "returns"], [306, "returns"], [307, "returns"], [308, "returns"], [309, "returns"], [310, "returns"], [311, "returns"], [312, "returns"], [314, "returns"], [315, "returns"], [316, "returns"], [317, "returns"], [318, "returns"], [319, "returns"], [320, "returns"], [321, "returns"], [322, "returns"], [323, "returns"]], "SENet": [[81, null]], "SKNet": [[91, null]], "See Also": [[236, "see-also"]], "Selective Kernel": [[171, null]], "Squeeze-and-Excitation": [[171, null]], "Summary Table": [[106, "summary-table"]], "Tensor Generating Functions": [[283, null]], "Tensor Operations": [[283, null]], "Tensor Utilites": [[313, null]], "Type Definitions": [[253, "type-definitions"]], "Unary Functions": [[283, null]], "Usage": [[4, "usage"], [40, "usage"], [41, "usage"], [42, "usage"], [43, "usage"], [107, "usage"], [162, "usage"], [249, "usage"], [250, "usage"], [251, "usage"], [314, "usage"], [324, "usage"], [325, "usage"], [335, "usage"]], "Use another Tensor as input": [[309, null]], "Using DataLoader with ConcatDataset": [[1, null]], "Using the ASGD Optimizer": [[237, null]], "Using the Adadelta Optimizer": [[238, null]], "Using the Adagrad Optimizer": [[239, null]], "Using the Adam Optimizer": [[240, null]], "Using the AdamW Optimizer": [[241, null]], "Using the Adamax Optimizer": [[242, null]], "Using the NAdam Optimizer": [[243, null]], "Using the RAdam Optimizer": [[244, null]], "Using the RMSprop Optimizer": [[245, null]], "Using the Rprop Optimizer": [[246, null]], "Using the SGD Optimizer": [[247, null]], "Utility Functions": [[136, null], [160, null]], "VGGNet": [[96, null]], "Vision Layers": [[203, null], [233, null]], "Weight Initializations": [[173, null]], "Why Use Type Aliases?": [[253, null]], "Xception": [[101, null]], "ZFNet": [[103, null]], "activation Functions": [[136, null]], "alexnet": [[24, null]], "data.ConcatDataset": [[0, null]], "data.DataLoader": [[1, null]], "data.Dataset": [[2, null]], "densenet_121": [[26, null]], "densenet_169": [[27, null]], "densenet_201": [[28, null]], "densenet_264": [[29, null]], "efficientnet_b0": [[32, null]], "efficientnet_b1": [[33, null]], "efficientnet_b2": [[34, null]], "efficientnet_b3": [[35, null]], "efficientnet_b4": [[36, null]], "efficientnet_b5": [[37, null]], "efficientnet_b6": [[38, null]], "efficientnet_b7": [[39, null]], "efficientnet_v2_l": [[40, null]], "efficientnet_v2_m": [[41, null]], "efficientnet_v2_s": [[42, null]], "efficientnet_v2_xl": [[43, null]], "inception_resnet_v1": [[49, null]], "inception_resnet_v2": [[50, null]], "inception_v1": [[45, null]], "inception_v3": [[46, null]], "inception_v4": [[47, null]], "lenet_1": [[53, null]], "lenet_4": [[54, null]], "lenet_5": [[55, null]], "lucid.Tensor": [[262, null]], "lucid.abs": [[284, null]], "lucid.add": [[263, null]], "lucid.arange": [[274, null]], "lucid.arccos": [[285, null]], "lucid.arcsin": [[286, null]], "lucid.arctan": [[287, null]], "lucid.clip": [[288, null]], "lucid.concatenate": [[310, null]], "lucid.cos": [[289, null]], "lucid.cosh": [[290, null]], "lucid.cube": [[291, null]], "lucid.data": [[3, null]], "lucid.datasets": [[4, null]], "lucid.diag": [[275, null]], "lucid.div": [[264, null]], "lucid.dot": [[265, null]], "lucid.empty": [[276, null]], "lucid.empty_like": [[277, null]], "lucid.exp": [[292, null]], "lucid.eye": [[278, null]], "lucid.flatten": [[311, null]], "lucid.grad_enabled": [[249, null]], "lucid.hstack": [[312, null]], "lucid.inner": [[266, null]], "lucid.linalg": [[11, null]], "lucid.linalg.cholesky": [[12, null]], "lucid.linalg.det": [[13, null]], "lucid.linalg.eig": [[14, null]], "lucid.linalg.inv": [[16, null]], "lucid.linalg.matrix_power": [[17, null]], "lucid.linalg.norm": [[18, null]], "lucid.linalg.pinv": [[19, null]], "lucid.linalg.qr": [[20, null]], "lucid.linalg.solve": [[21, null]], "lucid.linalg.svd": [[22, null]], "lucid.log": [[293, null]], "lucid.matmul": [[267, null]], "lucid.max": [[294, null]], "lucid.maximum": [[268, null]], "lucid.mean": [[295, null]], "lucid.meshgrid": [[314, null]], "lucid.min": [[296, null]], "lucid.minimum": [[269, null]], "lucid.models": [[105, null]], "lucid.mul": [[270, null]], "lucid.newaxis": [[250, null]], "lucid.nn": [[234, null]], "lucid.nn.functional": [[136, null]], "lucid.no_grad": [[251, null]], "lucid.ones": [[279, null]], "lucid.ones_like": [[280, null]], "lucid.optim": [[236, null]], "lucid.outer": [[271, null]], "lucid.pad": [[315, null]], "lucid.power": [[272, null]], "lucid.random": [[261, null]], "lucid.random.bernoulli": [[254, null]], "lucid.random.rand": [[256, null]], "lucid.random.randint": [[257, null]], "lucid.random.randn": [[258, null]], "lucid.random.seed": [[259, null]], "lucid.random.uniform": [[260, null]], "lucid.ravel": [[316, null]], "lucid.reciprocal": [[297, null]], "lucid.register_model": [[252, null]], "lucid.repeat": [[317, null]], "lucid.reshape": [[318, null]], "lucid.sign": [[298, null]], "lucid.sin": [[299, null]], "lucid.sinh": [[300, null]], "lucid.sqrt": [[301, null]], "lucid.square": [[302, null]], "lucid.squeeze": [[319, null]], "lucid.stack": [[320, null]], "lucid.sub": [[273, null]], "lucid.sum": [[303, null]], "lucid.tan": [[304, null]], "lucid.tanh": [[305, null]], "lucid.tensor": [[309, null]], "lucid.tile": [[321, null]], "lucid.trace": [[306, null]], "lucid.transforms": [[335, null]], "lucid.transpose": [[307, null]], "lucid.types": [[253, null]], "lucid.unsqueeze": [[322, null]], "lucid.var": [[308, null]], "lucid.vstack": [[323, null]], "lucid.zeros": [[281, null]], "lucid.zeros_like": [[282, null]], "mobilenet": [[59, null]], "mobilenet_v2": [[60, null]], "mobilenet_v3_large": [[61, null]], "mobilenet_v3_small": [[62, null]], "models.summarize": [[106, null]], "nn.AdaptiveAvgPool1d": [[222, null]], "nn.AdaptiveAvgPool2d": [[223, null]], "nn.AdaptiveAvgPool3d": [[224, null]], "nn.AlphaDropout": [[197, null]], "nn.AvgPool1d": [[225, null]], "nn.AvgPool2d": [[226, null]], "nn.AvgPool3d": [[227, null]], "nn.BCELoss": [[208, null]], "nn.BatchNorm1d": [[214, null]], "nn.BatchNorm2d": [[215, null]], "nn.BatchNorm3d": [[216, null]], "nn.Bilinear": [[204, null]], "nn.Buffer": [[107, null]], "nn.Conv1d": [[193, null]], "nn.Conv2d": [[194, null]], "nn.Conv3d": [[195, null]], "nn.ConvBNReLU1d": [[163, null]], "nn.ConvBNReLU2d": [[164, null]], "nn.ConvBNReLU3d": [[165, null]], "nn.CrossEntropyLoss": [[209, null]], "nn.DepthSeparableConv1d": [[166, null]], "nn.DepthSeparableConv2d": [[167, null]], "nn.DepthSeparableConv3d": [[168, null]], "nn.Dropout": [[198, null]], "nn.Dropout1d": [[199, null]], "nn.Dropout2d": [[200, null]], "nn.Dropout3d": [[201, null]], "nn.ELU": [[180, null]], "nn.GELU": [[181, null]], "nn.HardSigmoid": [[182, null]], "nn.HardSwish": [[183, null]], "nn.HuberLoss": [[210, null]], "nn.Identity": [[205, null]], "nn.InstanceNorm1d": [[217, null]], "nn.InstanceNorm2d": [[218, null]], "nn.InstanceNorm3d": [[219, null]], "nn.LayerNorm": [[220, null]], "nn.LeakyReLU": [[184, null]], "nn.Linear": [[206, null]], "nn.MSELoss": [[211, null]], "nn.MaxPool1d": [[228, null]], "nn.MaxPool2d": [[229, null]], "nn.MaxPool3d": [[230, null]], "nn.Module": [[108, null]], "nn.ModuleDict": [[110, null]], "nn.ModuleList": [[111, null]], "nn.NLLLoss": [[212, null]], "nn.Parameter": [[109, null]], "nn.ParameterDict": [[112, null]], "nn.ParameterList": [[113, null]], "nn.ReLU": [[185, null]], "nn.ReLU6": [[186, null]], "nn.SELU": [[187, null]], "nn.SEModule": [[169, null]], "nn.SelectiveKernel": [[170, null]], "nn.Sequential": [[114, null]], "nn.Sigmoid": [[188, null]], "nn.Softmax": [[189, null]], "nn.Swish": [[190, null]], "nn.Tanh": [[191, null]], "nn.Upsample": [[232, null]], "nn.functional.adaptive_avg_pool1d": [[150, null]], "nn.functional.adaptive_avg_pool2d": [[151, null]], "nn.functional.adaptive_avg_pool3d": [[152, null]], "nn.functional.alpha_dropout": [[130, null]], "nn.functional.avg_pool1d": [[153, null]], "nn.functional.avg_pool2d": [[154, null]], "nn.functional.avg_pool3d": [[155, null]], "nn.functional.batch_norm": [[146, null]], "nn.functional.bilinear": [[137, null]], "nn.functional.binary_cross_entropy": [[140, null]], "nn.functional.conv1d": [[125, null]], "nn.functional.conv2d": [[126, null]], "nn.functional.conv3d": [[127, null]], "nn.functional.cross_entropy": [[141, null]], "nn.functional.dropout": [[131, null]], "nn.functional.dropout1d": [[132, null]], "nn.functional.dropout2d": [[133, null]], "nn.functional.dropout3d": [[134, null]], "nn.functional.elu": [[116, null]], "nn.functional.gelu": [[117, null]], "nn.functional.huber_loss": [[142, null]], "nn.functional.instance_norm": [[148, null]], "nn.functional.interpolate": [[161, null]], "nn.functional.layer_norm": [[149, null]], "nn.functional.leaky_relu": [[119, null]], "nn.functional.linear": [[139, null]], "nn.functional.max_pool1d": [[157, null]], "nn.functional.max_pool2d": [[158, null]], "nn.functional.max_pool3d": [[159, null]], "nn.functional.mse_loss": [[144, null]], "nn.functional.nll_loss": [[145, null]], "nn.functional.relu": [[120, null]], "nn.functional.rotate": [[162, null]], "nn.functional.selu": [[121, null]], "nn.functional.sigmoid": [[122, null]], "nn.functional.softmax": [[123, null]], "nn.functional.tanh": [[124, null]], "nn.functional.unfold": [[129, null]], "nn.init.constant": [[172, null]], "nn.init.kaiming_normal": [[174, null]], "nn.init.kaiming_uniform": [[175, null]], "nn.init.normal": [[176, null]], "nn.init.uniform": [[177, null]], "nn.init.xavier_normal": [[178, null]], "nn.init.xavier_uniform": [[179, null]], "optim.ASGD": [[237, null]], "optim.Adadelta": [[238, null]], "optim.Adagrad": [[239, null]], "optim.Adam": [[240, null]], "optim.AdamW": [[241, null]], "optim.Adamax": [[242, null]], "optim.NAdam": [[243, null]], "optim.Optimizer": [[235, null]], "optim.RAdam": [[244, null]], "optim.RMSprop": [[245, null]], "optim.Rprop": [[246, null]], "optim.SGD": [[247, null]], "resnet_1001": [[64, null]], "resnet_101": [[65, null]], "resnet_152": [[66, null]], "resnet_18": [[67, null]], "resnet_200": [[68, null]], "resnet_269": [[69, null]], "resnet_34": [[70, null]], "resnet_50": [[71, null]], "resnext_101_32x16d": [[75, null]], "resnext_101_32x32d": [[76, null]], "resnext_101_32x4d": [[77, null]], "resnext_101_32x8d": [[78, null]], "resnext_101_64x4d": [[79, null]], "resnext_50_32x4d": [[80, null]], "se_resnet_101": [[82, null]], "se_resnet_152": [[83, null]], "se_resnet_18": [[84, null]], "se_resnet_34": [[85, null]], "se_resnet_50": [[86, null]], "se_resnext_101_32x4d": [[87, null]], "se_resnext_101_32x8d": [[88, null]], "se_resnext_101_64x4d": [[89, null]], "se_resnext_50_32x4d": [[90, null]], "sk_resnet_18": [[92, null]], "sk_resnet_34": [[93, null]], "sk_resnet_50": [[94, null]], "sk_resnext_50_32x4d": [[95, null]], "transforms.CenterCrop": [[326, null]], "transforms.Compose": [[324, null]], "transforms.Normalize": [[327, null]], "transforms.RandomCrop": [[328, null]], "transforms.RandomGrayscale": [[329, null]], "transforms.RandomHorizontalFlip": [[330, null]], "transforms.RandomRotation": [[331, null]], "transforms.RandomVerticalFlip": [[332, null]], "transforms.Resize": [[333, null]], "transforms.ToTensor": [[325, null]], "vggnet_11": [[97, null]], "vggnet_13": [[98, null]], "vggnet_16": [[99, null]], "vggnet_19": [[100, null]], "wide_resnet_101": [[72, null]], "wide_resnet_50": [[73, null]], "xception": [[102, null]], "zfnet": [[104, null]]}, "docnames": ["data/ConcatDataset", "data/DataLoader", "data/Dataset", "data/data", "datasets/datasets", "datasets/image/CIFAR10", "datasets/image/CIFAR100", "datasets/image/FashionMNIST", "datasets/image/MNIST", "datasets/image/index", "index", "linalg/linalg", "linalg/operations/cholesky", "linalg/operations/det", "linalg/operations/eig", "linalg/operations/index", "linalg/operations/inv", "linalg/operations/matrix_power", "linalg/operations/norm", "linalg/operations/pinv", "linalg/operations/qr", "linalg/operations/solve", "linalg/operations/svd", "models/conv/alex/AlexNet", "models/conv/alex/alexnet", "models/conv/dense/DenseNet", "models/conv/dense/densenet_121", "models/conv/dense/densenet_169", "models/conv/dense/densenet_201", "models/conv/dense/densenet_264", "models/conv/efficient/EfficientNet", "models/conv/efficient/EfficientNet_V2", "models/conv/efficient/efficientnet_b0", "models/conv/efficient/efficientnet_b1", "models/conv/efficient/efficientnet_b2", "models/conv/efficient/efficientnet_b3", "models/conv/efficient/efficientnet_b4", "models/conv/efficient/efficientnet_b5", "models/conv/efficient/efficientnet_b6", "models/conv/efficient/efficientnet_b7", "models/conv/efficient/efficientnet_v2_l", "models/conv/efficient/efficientnet_v2_m", "models/conv/efficient/efficientnet_v2_s", "models/conv/efficient/efficientnet_v2_xl", "models/conv/inception/Inception", "models/conv/inception/inception_v1", "models/conv/inception/inception_v3", "models/conv/inception/inception_v4", "models/conv/inception_res/InceptionResNet", "models/conv/inception_res/inception_resnet_v1", "models/conv/inception_res/inception_resnet_v2", "models/conv/index", "models/conv/lenet/LeNet", "models/conv/lenet/lenet_1", "models/conv/lenet/lenet_4", "models/conv/lenet/lenet_5", "models/conv/mobile/MobileNet", "models/conv/mobile/MobileNet_V2", "models/conv/mobile/MobileNet_V3", "models/conv/mobile/mobilenet", "models/conv/mobile/mobilenet_v2", "models/conv/mobile/mobilenet_v3_large", "models/conv/mobile/mobilenet_v3_small", "models/conv/resnet/ResNet", "models/conv/resnet/resnet_1001", "models/conv/resnet/resnet_101", "models/conv/resnet/resnet_152", "models/conv/resnet/resnet_18", "models/conv/resnet/resnet_200", "models/conv/resnet/resnet_269", "models/conv/resnet/resnet_34", "models/conv/resnet/resnet_50", "models/conv/resnet/wide_resnet_101", "models/conv/resnet/wide_resnet_50", "models/conv/resnext/ResNeXt", "models/conv/resnext/resnext_101_32x16d", "models/conv/resnext/resnext_101_32x32d", "models/conv/resnext/resnext_101_32x4d", "models/conv/resnext/resnext_101_32x8d", "models/conv/resnext/resnext_101_64x4d", "models/conv/resnext/resnext_50_32x4d", "models/conv/senet/SENet", "models/conv/senet/se_resnet_101", "models/conv/senet/se_resnet_152", "models/conv/senet/se_resnet_18", "models/conv/senet/se_resnet_34", "models/conv/senet/se_resnet_50", "models/conv/senet/se_resnext_101_32x4d", "models/conv/senet/se_resnext_101_32x8d", "models/conv/senet/se_resnext_101_64x4d", "models/conv/senet/se_resnext_50_32x4d", "models/conv/sknet/SKNet", "models/conv/sknet/sk_resnet_18", "models/conv/sknet/sk_resnet_34", "models/conv/sknet/sk_resnet_50", "models/conv/sknet/sk_resnext_50_32x4d", "models/conv/vgg/VGGNet", "models/conv/vgg/vggnet_11", "models/conv/vgg/vggnet_13", "models/conv/vgg/vggnet_16", "models/conv/vgg/vggnet_19", "models/conv/xception/Xception", "models/conv/xception/xception", "models/conv/zfnet/ZFNet", "models/conv/zfnet/zfnet", "models/models", "models/summarize", "nn/Buffer", "nn/Module", "nn/Parameter", "nn/containers/ModuleDict", "nn/containers/ModuleList", "nn/containers/ParameterDict", "nn/containers/ParameterList", "nn/containers/Sequential", "nn/containers/index", "nn/functions/activation/elu", "nn/functions/activation/gelu", "nn/functions/activation/index", "nn/functions/activation/leaky_relu", "nn/functions/activation/relu", "nn/functions/activation/selu", "nn/functions/activation/sigmoid", "nn/functions/activation/softmax", "nn/functions/activation/tanh", "nn/functions/conv/conv1d", "nn/functions/conv/conv2d", "nn/functions/conv/conv3d", "nn/functions/conv/index", "nn/functions/conv/unfold", "nn/functions/drop/alpha_dropout", "nn/functions/drop/dropout", "nn/functions/drop/dropout1d", "nn/functions/drop/dropout2d", "nn/functions/drop/dropout3d", "nn/functions/drop/index", "nn/functions/index", "nn/functions/linear/bilinear", "nn/functions/linear/index", "nn/functions/linear/linear", "nn/functions/loss/binary_cross_entropy", "nn/functions/loss/cross_entropy", "nn/functions/loss/huber_loss", "nn/functions/loss/index", "nn/functions/loss/mse_loss", "nn/functions/loss/nll_loss", "nn/functions/norm/batch_norm", "nn/functions/norm/index", "nn/functions/norm/instance_norm", "nn/functions/norm/layer_norm", "nn/functions/pool/adaptive_avg_pool1d", "nn/functions/pool/adaptive_avg_pool2d", "nn/functions/pool/adaptive_avg_pool3d", "nn/functions/pool/avg_pool1d", "nn/functions/pool/avg_pool2d", "nn/functions/pool/avg_pool3d", "nn/functions/pool/index", "nn/functions/pool/max_pool1d", "nn/functions/pool/max_pool2d", "nn/functions/pool/max_pool3d", "nn/functions/util/index", "nn/functions/util/interpolate", "nn/functions/util/rotate", "nn/fused/ConvBNReLU1d", "nn/fused/ConvBNReLU2d", "nn/fused/ConvBNReLU3d", "nn/fused/DepthSeparableConv1d", "nn/fused/DepthSeparableConv2d", "nn/fused/DepthSeparableConv3d", "nn/fused/SEModule", "nn/fused/SelectiveKernel", "nn/fused/index", "nn/init/constant", "nn/init/index", "nn/init/kaiming_normal", "nn/init/kaiming_uniform", "nn/init/normal", "nn/init/uniform", "nn/init/xavier_normal", "nn/init/xavier_uniform", "nn/modules/activation/ELU", "nn/modules/activation/GELU", "nn/modules/activation/HardSigmoid", "nn/modules/activation/HardSwish", "nn/modules/activation/LeakyReLU", "nn/modules/activation/ReLU", "nn/modules/activation/ReLU6", "nn/modules/activation/SELU", "nn/modules/activation/Sigmoid", "nn/modules/activation/Softmax", "nn/modules/activation/Swish", "nn/modules/activation/Tanh", "nn/modules/activation/index", "nn/modules/conv/Conv1d", "nn/modules/conv/Conv2d", "nn/modules/conv/Conv3d", "nn/modules/conv/index", "nn/modules/drop/AlphaDropout", "nn/modules/drop/Dropout", "nn/modules/drop/Dropout1d", "nn/modules/drop/Dropout2d", "nn/modules/drop/Dropout3d", "nn/modules/drop/index", "nn/modules/index", "nn/modules/linear/Bilinear", "nn/modules/linear/Identity", "nn/modules/linear/Linear", "nn/modules/linear/index", "nn/modules/loss/BCELoss", "nn/modules/loss/CrossEntropyLoss", "nn/modules/loss/HuberLoss", "nn/modules/loss/MSELoss", "nn/modules/loss/NLLLoss", "nn/modules/loss/index", "nn/modules/norm/BatchNorm1d", "nn/modules/norm/BatchNorm2d", "nn/modules/norm/BatchNorm3d", "nn/modules/norm/InstanceNorm1d", "nn/modules/norm/InstanceNorm2d", "nn/modules/norm/InstanceNorm3d", "nn/modules/norm/LayerNorm", "nn/modules/norm/index", "nn/modules/pool/AdaptiveAvgPool1d", "nn/modules/pool/AdaptiveAvgPool2d", "nn/modules/pool/AdaptiveAvgPool3d", "nn/modules/pool/AvgPool1d", "nn/modules/pool/AvgPool2d", "nn/modules/pool/AvgPool3d", "nn/modules/pool/MaxPool1d", "nn/modules/pool/MaxPool2d", "nn/modules/pool/MaxPool3d", "nn/modules/pool/index", "nn/modules/vision/Upsample", "nn/modules/vision/index", "nn/nn", "optim/Optimizer", "optim/optim", "optim/optimizers/ASGD", "optim/optimizers/Adadelta", "optim/optimizers/Adagrad", "optim/optimizers/Adam", "optim/optimizers/AdamW", "optim/optimizers/Adamax", "optim/optimizers/NAdam", "optim/optimizers/RAdam", "optim/optimizers/RMSprop", "optim/optimizers/Rprop", "optim/optimizers/SGD", "optim/optimizers/index", "others/grad_enabled", "others/newaxis", "others/no_grad", "others/register_model", "others/types", "random/functions/bernoulli", "random/functions/index", "random/functions/rand", "random/functions/randint", "random/functions/randn", "random/functions/seed", "random/functions/uniform", "random/random", "tensor/Tensor_", "tensor/operations/bfunc/add", "tensor/operations/bfunc/div", "tensor/operations/bfunc/dot", "tensor/operations/bfunc/inner", "tensor/operations/bfunc/matmul", "tensor/operations/bfunc/maximum", "tensor/operations/bfunc/minimum", "tensor/operations/bfunc/mul", "tensor/operations/bfunc/outer", "tensor/operations/bfunc/power", "tensor/operations/bfunc/sub", "tensor/operations/gfunc/arange", "tensor/operations/gfunc/diag", "tensor/operations/gfunc/empty", "tensor/operations/gfunc/empty_like", "tensor/operations/gfunc/eye", "tensor/operations/gfunc/ones", "tensor/operations/gfunc/ones_like", "tensor/operations/gfunc/zeros", "tensor/operations/gfunc/zeros_like", "tensor/operations/index", "tensor/operations/ufunc/abs", "tensor/operations/ufunc/arccos", "tensor/operations/ufunc/arcsin", "tensor/operations/ufunc/arctan", "tensor/operations/ufunc/clip", "tensor/operations/ufunc/cos", "tensor/operations/ufunc/cosh", "tensor/operations/ufunc/cube", "tensor/operations/ufunc/exp", "tensor/operations/ufunc/log", "tensor/operations/ufunc/max", "tensor/operations/ufunc/mean", "tensor/operations/ufunc/min", "tensor/operations/ufunc/reciprocal", "tensor/operations/ufunc/sign", "tensor/operations/ufunc/sin", "tensor/operations/ufunc/sinh", "tensor/operations/ufunc/sqrt", "tensor/operations/ufunc/square", "tensor/operations/ufunc/sum", "tensor/operations/ufunc/tan", "tensor/operations/ufunc/tanh", "tensor/operations/ufunc/trace", "tensor/operations/ufunc/transpose", "tensor/operations/ufunc/var", "tensor/tensor", "tensor/utilities/concatenate", "tensor/utilities/flatten", "tensor/utilities/hstack", "tensor/utilities/index", "tensor/utilities/meshgrid", "tensor/utilities/pad", "tensor/utilities/ravel", "tensor/utilities/repeat", "tensor/utilities/reshape", "tensor/utilities/squeeze", "tensor/utilities/stack", "tensor/utilities/tile", "tensor/utilities/unsqueeze", "tensor/utilities/vstack", "transforms/Compose", "transforms/ToTensor", "transforms/image/CenterCrop", "transforms/image/Normalize", "transforms/image/RandomCrop", "transforms/image/RandomGrayscale", "transforms/image/RandomHorizontalFlip", "transforms/image/RandomRotation", "transforms/image/RandomVerticalFlip", "transforms/image/Resize", "transforms/image/index", "transforms/transforms"], "envversion": {"sphinx": 64, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2}, "filenames": ["data/ConcatDataset.rst", "data/DataLoader.rst", "data/Dataset.rst", "data/data.rst", "datasets/datasets.rst", "datasets/image/CIFAR10.rst", "datasets/image/CIFAR100.rst", "datasets/image/FashionMNIST.rst", "datasets/image/MNIST.rst", "datasets/image/index.rst", "index.rst", "linalg/linalg.rst", "linalg/operations/cholesky.rst", "linalg/operations/det.rst", "linalg/operations/eig.rst", "linalg/operations/index.rst", "linalg/operations/inv.rst", "linalg/operations/matrix_power.rst", "linalg/operations/norm.rst", "linalg/operations/pinv.rst", "linalg/operations/qr.rst", "linalg/operations/solve.rst", "linalg/operations/svd.rst", "models/conv/alex/AlexNet.rst", "models/conv/alex/alexnet.rst", "models/conv/dense/DenseNet.rst", "models/conv/dense/densenet_121.rst", "models/conv/dense/densenet_169.rst", "models/conv/dense/densenet_201.rst", "models/conv/dense/densenet_264.rst", "models/conv/efficient/EfficientNet.rst", "models/conv/efficient/EfficientNet_V2.rst", "models/conv/efficient/efficientnet_b0.rst", "models/conv/efficient/efficientnet_b1.rst", "models/conv/efficient/efficientnet_b2.rst", "models/conv/efficient/efficientnet_b3.rst", "models/conv/efficient/efficientnet_b4.rst", "models/conv/efficient/efficientnet_b5.rst", "models/conv/efficient/efficientnet_b6.rst", "models/conv/efficient/efficientnet_b7.rst", "models/conv/efficient/efficientnet_v2_l.rst", "models/conv/efficient/efficientnet_v2_m.rst", "models/conv/efficient/efficientnet_v2_s.rst", "models/conv/efficient/efficientnet_v2_xl.rst", "models/conv/inception/Inception.rst", "models/conv/inception/inception_v1.rst", "models/conv/inception/inception_v3.rst", "models/conv/inception/inception_v4.rst", "models/conv/inception_res/InceptionResNet.rst", "models/conv/inception_res/inception_resnet_v1.rst", "models/conv/inception_res/inception_resnet_v2.rst", "models/conv/index.rst", "models/conv/lenet/LeNet.rst", "models/conv/lenet/lenet_1.rst", "models/conv/lenet/lenet_4.rst", "models/conv/lenet/lenet_5.rst", "models/conv/mobile/MobileNet.rst", "models/conv/mobile/MobileNet_V2.rst", "models/conv/mobile/MobileNet_V3.rst", "models/conv/mobile/mobilenet.rst", "models/conv/mobile/mobilenet_v2.rst", "models/conv/mobile/mobilenet_v3_large.rst", "models/conv/mobile/mobilenet_v3_small.rst", "models/conv/resnet/ResNet.rst", "models/conv/resnet/resnet_1001.rst", "models/conv/resnet/resnet_101.rst", "models/conv/resnet/resnet_152.rst", "models/conv/resnet/resnet_18.rst", "models/conv/resnet/resnet_200.rst", "models/conv/resnet/resnet_269.rst", "models/conv/resnet/resnet_34.rst", "models/conv/resnet/resnet_50.rst", "models/conv/resnet/wide_resnet_101.rst", "models/conv/resnet/wide_resnet_50.rst", "models/conv/resnext/ResNeXt.rst", "models/conv/resnext/resnext_101_32x16d.rst", "models/conv/resnext/resnext_101_32x32d.rst", "models/conv/resnext/resnext_101_32x4d.rst", "models/conv/resnext/resnext_101_32x8d.rst", "models/conv/resnext/resnext_101_64x4d.rst", "models/conv/resnext/resnext_50_32x4d.rst", "models/conv/senet/SENet.rst", "models/conv/senet/se_resnet_101.rst", "models/conv/senet/se_resnet_152.rst", "models/conv/senet/se_resnet_18.rst", "models/conv/senet/se_resnet_34.rst", "models/conv/senet/se_resnet_50.rst", "models/conv/senet/se_resnext_101_32x4d.rst", "models/conv/senet/se_resnext_101_32x8d.rst", "models/conv/senet/se_resnext_101_64x4d.rst", "models/conv/senet/se_resnext_50_32x4d.rst", "models/conv/sknet/SKNet.rst", "models/conv/sknet/sk_resnet_18.rst", "models/conv/sknet/sk_resnet_34.rst", "models/conv/sknet/sk_resnet_50.rst", "models/conv/sknet/sk_resnext_50_32x4d.rst", "models/conv/vgg/VGGNet.rst", "models/conv/vgg/vggnet_11.rst", "models/conv/vgg/vggnet_13.rst", "models/conv/vgg/vggnet_16.rst", "models/conv/vgg/vggnet_19.rst", "models/conv/xception/Xception.rst", "models/conv/xception/xception.rst", "models/conv/zfnet/ZFNet.rst", "models/conv/zfnet/zfnet.rst", "models/models.rst", "models/summarize.rst", "nn/Buffer.rst", "nn/Module.rst", "nn/Parameter.rst", "nn/containers/ModuleDict.rst", "nn/containers/ModuleList.rst", "nn/containers/ParameterDict.rst", "nn/containers/ParameterList.rst", "nn/containers/Sequential.rst", "nn/containers/index.rst", "nn/functions/activation/elu.rst", "nn/functions/activation/gelu.rst", "nn/functions/activation/index.rst", "nn/functions/activation/leaky_relu.rst", "nn/functions/activation/relu.rst", "nn/functions/activation/selu.rst", "nn/functions/activation/sigmoid.rst", "nn/functions/activation/softmax.rst", "nn/functions/activation/tanh.rst", "nn/functions/conv/conv1d.rst", "nn/functions/conv/conv2d.rst", "nn/functions/conv/conv3d.rst", "nn/functions/conv/index.rst", "nn/functions/conv/unfold.rst", "nn/functions/drop/alpha_dropout.rst", "nn/functions/drop/dropout.rst", "nn/functions/drop/dropout1d.rst", "nn/functions/drop/dropout2d.rst", "nn/functions/drop/dropout3d.rst", "nn/functions/drop/index.rst", "nn/functions/index.rst", "nn/functions/linear/bilinear.rst", "nn/functions/linear/index.rst", "nn/functions/linear/linear.rst", "nn/functions/loss/binary_cross_entropy.rst", "nn/functions/loss/cross_entropy.rst", "nn/functions/loss/huber_loss.rst", "nn/functions/loss/index.rst", "nn/functions/loss/mse_loss.rst", "nn/functions/loss/nll_loss.rst", "nn/functions/norm/batch_norm.rst", "nn/functions/norm/index.rst", "nn/functions/norm/instance_norm.rst", "nn/functions/norm/layer_norm.rst", "nn/functions/pool/adaptive_avg_pool1d.rst", "nn/functions/pool/adaptive_avg_pool2d.rst", "nn/functions/pool/adaptive_avg_pool3d.rst", "nn/functions/pool/avg_pool1d.rst", "nn/functions/pool/avg_pool2d.rst", "nn/functions/pool/avg_pool3d.rst", "nn/functions/pool/index.rst", "nn/functions/pool/max_pool1d.rst", "nn/functions/pool/max_pool2d.rst", "nn/functions/pool/max_pool3d.rst", "nn/functions/util/index.rst", "nn/functions/util/interpolate.rst", "nn/functions/util/rotate.rst", "nn/fused/ConvBNReLU1d.rst", "nn/fused/ConvBNReLU2d.rst", "nn/fused/ConvBNReLU3d.rst", "nn/fused/DepthSeparableConv1d.rst", "nn/fused/DepthSeparableConv2d.rst", "nn/fused/DepthSeparableConv3d.rst", "nn/fused/SEModule.rst", "nn/fused/SelectiveKernel.rst", "nn/fused/index.rst", "nn/init/constant.rst", "nn/init/index.rst", "nn/init/kaiming_normal.rst", "nn/init/kaiming_uniform.rst", "nn/init/normal.rst", "nn/init/uniform.rst", "nn/init/xavier_normal.rst", "nn/init/xavier_uniform.rst", "nn/modules/activation/ELU.rst", "nn/modules/activation/GELU.rst", "nn/modules/activation/HardSigmoid.rst", "nn/modules/activation/HardSwish.rst", "nn/modules/activation/LeakyReLU.rst", "nn/modules/activation/ReLU.rst", "nn/modules/activation/ReLU6.rst", "nn/modules/activation/SELU.rst", "nn/modules/activation/Sigmoid.rst", "nn/modules/activation/Softmax.rst", "nn/modules/activation/Swish.rst", "nn/modules/activation/Tanh.rst", "nn/modules/activation/index.rst", "nn/modules/conv/Conv1d.rst", "nn/modules/conv/Conv2d.rst", "nn/modules/conv/Conv3d.rst", "nn/modules/conv/index.rst", "nn/modules/drop/AlphaDropout.rst", "nn/modules/drop/Dropout.rst", "nn/modules/drop/Dropout1d.rst", "nn/modules/drop/Dropout2d.rst", "nn/modules/drop/Dropout3d.rst", "nn/modules/drop/index.rst", "nn/modules/index.rst", "nn/modules/linear/Bilinear.rst", "nn/modules/linear/Identity.rst", "nn/modules/linear/Linear.rst", "nn/modules/linear/index.rst", "nn/modules/loss/BCELoss.rst", "nn/modules/loss/CrossEntropyLoss.rst", "nn/modules/loss/HuberLoss.rst", "nn/modules/loss/MSELoss.rst", "nn/modules/loss/NLLLoss.rst", "nn/modules/loss/index.rst", "nn/modules/norm/BatchNorm1d.rst", "nn/modules/norm/BatchNorm2d.rst", "nn/modules/norm/BatchNorm3d.rst", "nn/modules/norm/InstanceNorm1d.rst", "nn/modules/norm/InstanceNorm2d.rst", "nn/modules/norm/InstanceNorm3d.rst", "nn/modules/norm/LayerNorm.rst", "nn/modules/norm/index.rst", "nn/modules/pool/AdaptiveAvgPool1d.rst", "nn/modules/pool/AdaptiveAvgPool2d.rst", "nn/modules/pool/AdaptiveAvgPool3d.rst", "nn/modules/pool/AvgPool1d.rst", "nn/modules/pool/AvgPool2d.rst", "nn/modules/pool/AvgPool3d.rst", "nn/modules/pool/MaxPool1d.rst", "nn/modules/pool/MaxPool2d.rst", "nn/modules/pool/MaxPool3d.rst", "nn/modules/pool/index.rst", "nn/modules/vision/Upsample.rst", "nn/modules/vision/index.rst", "nn/nn.rst", "optim/Optimizer.rst", "optim/optim.rst", "optim/optimizers/ASGD.rst", "optim/optimizers/Adadelta.rst", "optim/optimizers/Adagrad.rst", "optim/optimizers/Adam.rst", "optim/optimizers/AdamW.rst", "optim/optimizers/Adamax.rst", "optim/optimizers/NAdam.rst", "optim/optimizers/RAdam.rst", "optim/optimizers/RMSprop.rst", "optim/optimizers/Rprop.rst", "optim/optimizers/SGD.rst", "optim/optimizers/index.rst", "others/grad_enabled.rst", "others/newaxis.rst", "others/no_grad.rst", "others/register_model.rst", "others/types.rst", "random/functions/bernoulli.rst", "random/functions/index.rst", "random/functions/rand.rst", "random/functions/randint.rst", "random/functions/randn.rst", "random/functions/seed.rst", "random/functions/uniform.rst", "random/random.rst", "tensor/Tensor_.rst", "tensor/operations/bfunc/add.rst", "tensor/operations/bfunc/div.rst", "tensor/operations/bfunc/dot.rst", "tensor/operations/bfunc/inner.rst", "tensor/operations/bfunc/matmul.rst", "tensor/operations/bfunc/maximum.rst", "tensor/operations/bfunc/minimum.rst", "tensor/operations/bfunc/mul.rst", "tensor/operations/bfunc/outer.rst", "tensor/operations/bfunc/power.rst", "tensor/operations/bfunc/sub.rst", "tensor/operations/gfunc/arange.rst", "tensor/operations/gfunc/diag.rst", "tensor/operations/gfunc/empty.rst", "tensor/operations/gfunc/empty_like.rst", "tensor/operations/gfunc/eye.rst", "tensor/operations/gfunc/ones.rst", "tensor/operations/gfunc/ones_like.rst", "tensor/operations/gfunc/zeros.rst", "tensor/operations/gfunc/zeros_like.rst", "tensor/operations/index.rst", "tensor/operations/ufunc/abs.rst", "tensor/operations/ufunc/arccos.rst", "tensor/operations/ufunc/arcsin.rst", "tensor/operations/ufunc/arctan.rst", "tensor/operations/ufunc/clip.rst", "tensor/operations/ufunc/cos.rst", "tensor/operations/ufunc/cosh.rst", "tensor/operations/ufunc/cube.rst", "tensor/operations/ufunc/exp.rst", "tensor/operations/ufunc/log.rst", "tensor/operations/ufunc/max.rst", "tensor/operations/ufunc/mean.rst", "tensor/operations/ufunc/min.rst", "tensor/operations/ufunc/reciprocal.rst", "tensor/operations/ufunc/sign.rst", "tensor/operations/ufunc/sin.rst", "tensor/operations/ufunc/sinh.rst", "tensor/operations/ufunc/sqrt.rst", "tensor/operations/ufunc/square.rst", "tensor/operations/ufunc/sum.rst", "tensor/operations/ufunc/tan.rst", "tensor/operations/ufunc/tanh.rst", "tensor/operations/ufunc/trace.rst", "tensor/operations/ufunc/transpose.rst", "tensor/operations/ufunc/var.rst", "tensor/tensor.rst", "tensor/utilities/concatenate.rst", "tensor/utilities/flatten.rst", "tensor/utilities/hstack.rst", "tensor/utilities/index.rst", "tensor/utilities/meshgrid.rst", "tensor/utilities/pad.rst", "tensor/utilities/ravel.rst", "tensor/utilities/repeat.rst", "tensor/utilities/reshape.rst", "tensor/utilities/squeeze.rst", "tensor/utilities/stack.rst", "tensor/utilities/tile.rst", "tensor/utilities/unsqueeze.rst", "tensor/utilities/vstack.rst", "transforms/Compose.rst", "transforms/ToTensor.rst", "transforms/image/CenterCrop.rst", "transforms/image/Normalize.rst", "transforms/image/RandomCrop.rst", "transforms/image/RandomGrayscale.rst", "transforms/image/RandomHorizontalFlip.rst", "transforms/image/RandomRotation.rst", "transforms/image/RandomVerticalFlip.rst", "transforms/image/Resize.rst", "transforms/image/index.rst", "transforms/transforms.rst"], "indexentries": {"abs() (in module lucid)": [[284, "lucid.abs", false]], "adadelta (class in lucid.optim)": [[238, "lucid.optim.Adadelta", false]], "adagrad (class in lucid.optim)": [[239, "lucid.optim.Adagrad", false]], "adam (class in lucid.optim)": [[240, "lucid.optim.Adam", false]], "adamax (class in lucid.optim)": [[242, "lucid.optim.Adamax", false]], "adamw (class in lucid.optim)": [[241, "lucid.optim.AdamW", false]], "adaptive_avg_pool1d() (in module lucid.nn.functional)": [[150, "lucid.nn.functional.adaptive_avg_pool1d", false]], "adaptive_avg_pool2d() (in module lucid.nn.functional)": [[151, "lucid.nn.functional.adaptive_avg_pool2d", false]], "adaptive_avg_pool3d() (in module lucid.nn.functional)": [[152, "lucid.nn.functional.adaptive_avg_pool3d", false]], "adaptiveavgpool1d (class in lucid.nn)": [[222, "lucid.nn.AdaptiveAvgPool1d", false]], "adaptiveavgpool2d (class in lucid.nn)": [[223, "lucid.nn.AdaptiveAvgPool2d", false]], "adaptiveavgpool3d (class in lucid.nn)": [[224, "lucid.nn.AdaptiveAvgPool3d", false]], "add() (in module lucid)": [[263, "lucid.add", false]], "alexnet (class in lucid.models)": [[23, "lucid.models.AlexNet", false]], "alexnet() (in module lucid.models)": [[24, "lucid.models.alexnet", false]], "alpha_dropout() (in module lucid.nn.functional)": [[130, "lucid.nn.functional.alpha_dropout", false]], "alphadropout (class in lucid.nn)": [[197, "lucid.nn.AlphaDropout", false]], "arange() (in module lucid)": [[274, "lucid.arange", false]], "arccos() (in module lucid)": [[285, "lucid.arccos", false]], "arcsin() (in module lucid)": [[286, "lucid.arcsin", false]], "arctan() (in module lucid)": [[287, "lucid.arctan", false]], "asgd (class in lucid.optim)": [[237, "lucid.optim.ASGD", false]], "avg_pool1d() (in module lucid.nn.functional)": [[153, "lucid.nn.functional.avg_pool1d", false]], "avg_pool2d() (in module lucid.nn.functional)": [[154, "lucid.nn.functional.avg_pool2d", false]], "avg_pool3d() (in module lucid.nn.functional)": [[155, "lucid.nn.functional.avg_pool3d", false]], "avgpool1d (class in lucid.nn)": [[225, "lucid.nn.AvgPool1d", false]], "avgpool2d (class in lucid.nn)": [[226, "lucid.nn.AvgPool2d", false]], "avgpool3d (class in lucid.nn)": [[227, "lucid.nn.AvgPool3d", false]], "batch_norm() (in module lucid.nn.functional)": [[146, "lucid.nn.functional.batch_norm", false]], "batchnorm1d (class in lucid.nn)": [[214, "lucid.nn.BatchNorm1d", false]], "batchnorm2d (class in lucid.nn)": [[215, "lucid.nn.BatchNorm2d", false]], "batchnorm3d (class in lucid.nn)": [[216, "lucid.nn.BatchNorm3d", false]], "bceloss (class in lucid.nn)": [[208, "lucid.nn.BCELoss", false]], "bernoulli() (in module lucid.random)": [[254, "lucid.random.bernoulli", false]], "bilinear (class in lucid.nn)": [[204, "lucid.nn.Bilinear", false]], "bilinear() (in module lucid.nn.functional)": [[137, "lucid.nn.functional.bilinear", false]], "binary_cross_entropy() (in module lucid.nn.functional)": [[140, "lucid.nn.functional.binary_cross_entropy", false]], "buffer (class in lucid.nn)": [[107, "lucid.nn.Buffer", false]], "centercrop (class in lucid.transforms)": [[326, "lucid.transforms.CenterCrop", false]], "cholesky() (in module lucid.linalg)": [[12, "lucid.linalg.cholesky", false]], "cifar10 (class in lucid.datasets)": [[5, "lucid.datasets.CIFAR10", false]], "cifar100 (class in lucid.datasets)": [[6, "lucid.datasets.CIFAR100", false]], "clip() (in module lucid)": [[288, "lucid.clip", false]], "compose (class in lucid.transforms)": [[324, "lucid.transforms.Compose", false]], "concatdataset (class in lucid.data)": [[0, "lucid.data.ConcatDataset", false]], "concatenate() (in module lucid)": [[310, "lucid.concatenate", false]], "constant() (in module lucid.nn.init)": [[172, "lucid.nn.init.constant", false]], "conv1d (class in lucid.nn)": [[193, "lucid.nn.Conv1d", false]], "conv1d() (in module lucid.nn.functional)": [[125, "lucid.nn.functional.conv1d", false]], "conv2d (class in lucid.nn)": [[194, "lucid.nn.Conv2d", false]], "conv2d() (in module lucid.nn.functional)": [[126, "lucid.nn.functional.conv2d", false]], "conv3d (class in lucid.nn)": [[195, "lucid.nn.Conv3d", false]], "conv3d() (in module lucid.nn.functional)": [[127, "lucid.nn.functional.conv3d", false]], "convbnrelu1d (class in lucid.nn)": [[163, "lucid.nn.ConvBNReLU1d", false]], "convbnrelu2d (class in lucid.nn)": [[164, "lucid.nn.ConvBNReLU2d", false]], "convbnrelu3d (class in lucid.nn)": [[165, "lucid.nn.ConvBNReLU3d", false]], "cos() (in module lucid)": [[289, "lucid.cos", false]], "cosh() (in module lucid)": [[290, "lucid.cosh", false]], "cross_entropy() (in module lucid.nn.functional)": [[141, "lucid.nn.functional.cross_entropy", false]], "crossentropyloss (class in lucid.nn)": [[209, "lucid.nn.CrossEntropyLoss", false]], "cube() (in module lucid)": [[291, "lucid.cube", false]], "dataloader (class in lucid.data)": [[1, "lucid.data.DataLoader", false]], "dataset (class in lucid.data)": [[2, "lucid.data.Dataset", false]], "densenet (class in lucid.models)": [[25, "lucid.models.DenseNet", false]], "densenet_121() (in module lucid.models)": [[26, "lucid.models.densenet_121", false]], "densenet_169() (in module lucid.models)": [[27, "lucid.models.densenet_169", false]], "densenet_201() (in module lucid.models)": [[28, "lucid.models.densenet_201", false]], "densenet_264() (in module lucid.models)": [[29, "lucid.models.densenet_264", false]], "depthseparableconv1d (class in lucid.nn)": [[166, "lucid.nn.DepthSeparableConv1d", false]], "depthseparableconv2d (class in lucid.nn)": [[167, "lucid.nn.DepthSeparableConv2d", false]], "depthseparableconv3d (class in lucid.nn)": [[168, "lucid.nn.DepthSeparableConv3d", false]], "det() (in module lucid.linalg)": [[13, "lucid.linalg.det", false]], "diag() (in module lucid)": [[275, "lucid.diag", false]], "div() (in module lucid)": [[264, "lucid.div", false]], "dot() (in module lucid)": [[265, "lucid.dot", false]], "dropout (class in lucid.nn)": [[198, "lucid.nn.Dropout", false]], "dropout() (in module lucid.nn.functional)": [[131, "lucid.nn.functional.dropout", false]], "dropout1d (class in lucid.nn)": [[199, "lucid.nn.Dropout1d", false]], "dropout1d() (in module lucid.nn.functional)": [[132, "lucid.nn.functional.dropout1d", false]], "dropout2d (class in lucid.nn)": [[200, "lucid.nn.Dropout2d", false]], "dropout2d() (in module lucid.nn.functional)": [[133, "lucid.nn.functional.dropout2d", false]], "dropout3d (class in lucid.nn)": [[201, "lucid.nn.Dropout3d", false]], "dropout3d() (in module lucid.nn.functional)": [[134, "lucid.nn.functional.dropout3d", false]], "efficientnet (class in lucid.models)": [[30, "lucid.models.EfficientNet", false]], "efficientnet_b0() (in module lucid.models)": [[32, "lucid.models.efficientnet_b0", false]], "efficientnet_b1() (in module lucid.models)": [[33, "lucid.models.efficientnet_b1", false]], "efficientnet_b2() (in module lucid.models)": [[34, "lucid.models.efficientnet_b2", false]], "efficientnet_b3() (in module lucid.models)": [[35, "lucid.models.efficientnet_b3", false]], "efficientnet_b4() (in module lucid.models)": [[36, "lucid.models.efficientnet_b4", false]], "efficientnet_b5() (in module lucid.models)": [[37, "lucid.models.efficientnet_b5", false]], "efficientnet_b6() (in module lucid.models)": [[38, "lucid.models.efficientnet_b6", false]], "efficientnet_b7() (in module lucid.models)": [[39, "lucid.models.efficientnet_b7", false]], "efficientnet_v2 (class in lucid.models)": [[31, "lucid.models.EfficientNet_V2", false]], "efficientnet_v2_l() (in module lucid.models)": [[40, "lucid.models.efficientnet_v2_l", false]], "efficientnet_v2_m() (in module lucid.models)": [[41, "lucid.models.efficientnet_v2_m", false]], "efficientnet_v2_s() (in module lucid.models)": [[42, "lucid.models.efficientnet_v2_s", false]], "efficientnet_v2_xl() (in module lucid.models)": [[43, "lucid.models.efficientnet_v2_xl", false]], "eig() (in module lucid.linalg)": [[14, "lucid.linalg.eig", false]], "elu (class in lucid.nn)": [[180, "lucid.nn.ELU", false]], "elu() (in module lucid.nn.functional)": [[116, "lucid.nn.functional.elu", false]], "empty() (in module lucid)": [[276, "lucid.empty", false]], "empty_like() (in module lucid)": [[277, "lucid.empty_like", false]], "exp() (in module lucid)": [[292, "lucid.exp", false]], "eye() (in module lucid)": [[278, "lucid.eye", false]], "fashionmnist (class in lucid.datasets)": [[7, "lucid.datasets.FashionMNIST", false]], "flatten() (in module lucid)": [[311, "lucid.flatten", false]], "gelu (class in lucid.nn)": [[181, "lucid.nn.GELU", false]], "gelu() (in module lucid.nn.functional)": [[117, "lucid.nn.functional.gelu", false]], "grad_enabled() (in module lucid)": [[249, "lucid.grad_enabled", false]], "hardsigmoid (class in lucid.nn)": [[182, "lucid.nn.HardSigmoid", false]], "hardswish (class in lucid.nn)": [[183, "lucid.nn.HardSwish", false]], "hstack() (in module lucid)": [[312, "lucid.hstack", false]], "huber_loss() (in module lucid.nn.functional)": [[142, "lucid.nn.functional.huber_loss", false]], "huberloss (class in lucid.nn)": [[210, "lucid.nn.HuberLoss", false]], "identity (class in lucid.nn)": [[205, "lucid.nn.Identity", false]], "inception (class in lucid.models)": [[44, "lucid.models.Inception", false]], "inception_resnet_v1() (in module lucid.models)": [[49, "lucid.models.inception_resnet_v1", false]], "inception_resnet_v2() (in module lucid.models)": [[50, "lucid.models.inception_resnet_v2", false]], "inception_v1() (in module lucid.models)": [[45, "lucid.models.inception_v1", false]], "inception_v3() (in module lucid.models)": [[46, "lucid.models.inception_v3", false]], "inception_v4() (in module lucid.models)": [[47, "lucid.models.inception_v4", false]], "inceptionresnet (class in lucid.models)": [[48, "lucid.models.InceptionResNet", false]], "inner() (in module lucid)": [[266, "lucid.inner", false]], "instance_norm() (in module lucid.nn.functional)": [[148, "lucid.nn.functional.instance_norm", false]], "instancenorm1d (class in lucid.nn)": [[217, "lucid.nn.InstanceNorm1d", false]], "instancenorm2d (class in lucid.nn)": [[218, "lucid.nn.InstanceNorm2d", false]], "instancenorm3d (class in lucid.nn)": [[219, "lucid.nn.InstanceNorm3d", false]], "interpolate() (in module lucid.nn.functional)": [[161, "lucid.nn.functional.interpolate", false]], "inv() (in module lucid.linalg)": [[16, "lucid.linalg.inv", false]], "kaiming_normal() (in module lucid.nn.init)": [[174, "lucid.nn.init.kaiming_normal", false]], "kaiming_uniform() (in module lucid.nn.init)": [[175, "lucid.nn.init.kaiming_uniform", false]], "layer_norm() (in module lucid.nn.functional)": [[149, "lucid.nn.functional.layer_norm", false]], "layernorm (class in lucid.nn)": [[220, "lucid.nn.LayerNorm", false]], "leaky_relu() (in module lucid.nn.functional)": [[119, "lucid.nn.functional.leaky_relu", false]], "leakyrelu (class in lucid.nn)": [[184, "lucid.nn.LeakyReLU", false]], "lenet (class in lucid.models)": [[52, "lucid.models.LeNet", false]], "lenet_1() (in module lucid.models)": [[53, "lucid.models.lenet_1", false]], "lenet_4() (in module lucid.models)": [[54, "lucid.models.lenet_4", false]], "lenet_5() (in module lucid.models)": [[55, "lucid.models.lenet_5", false]], "linear (class in lucid.nn)": [[206, "lucid.nn.Linear", false]], "linear() (in module lucid.nn.functional)": [[139, "lucid.nn.functional.linear", false]], "log() (in module lucid)": [[293, "lucid.log", false]], "lucid": [[10, "module-lucid", false]], "matmul() (in module lucid)": [[267, "lucid.matmul", false]], "matrix_power() (in module lucid.linalg)": [[17, "lucid.linalg.matrix_power", false]], "max() (in module lucid)": [[294, "lucid.max", false]], "max_pool1d() (in module lucid.nn.functional)": [[157, "lucid.nn.functional.max_pool1d", false]], "max_pool2d() (in module lucid.nn.functional)": [[158, "lucid.nn.functional.max_pool2d", false]], "max_pool3d() (in module lucid.nn.functional)": [[159, "lucid.nn.functional.max_pool3d", false]], "maximum() (in module lucid)": [[268, "lucid.maximum", false]], "maxpool1d (class in lucid.nn)": [[228, "lucid.nn.MaxPool1d", false]], "maxpool2d (class in lucid.nn)": [[229, "lucid.nn.MaxPool2d", false]], "maxpool3d (class in lucid.nn)": [[230, "lucid.nn.MaxPool3d", false]], "mean() (in module lucid)": [[295, "lucid.mean", false]], "meshgrid() (in module lucid)": [[314, "lucid.meshgrid", false]], "min() (in module lucid)": [[296, "lucid.min", false]], "minimum() (in module lucid)": [[269, "lucid.minimum", false]], "mnist (class in lucid.datasets)": [[8, "lucid.datasets.MNIST", false]], "mobilenet (class in lucid.models)": [[56, "lucid.models.MobileNet", false]], "mobilenet() (in module lucid.models)": [[59, "lucid.models.mobilenet", false]], "mobilenet_v2 (class in lucid.models)": [[57, "lucid.models.MobileNet_V2", false]], "mobilenet_v2() (in module lucid.models)": [[60, "lucid.models.mobilenet_v2", false]], "mobilenet_v3 (class in lucid.models)": [[58, "lucid.models.MobileNet_V3", false]], "mobilenet_v3_large() (in module lucid.models)": [[61, "lucid.models.mobilenet_v3_large", false]], "mobilenet_v3_small() (in module lucid.models)": [[62, "lucid.models.mobilenet_v3_small", false]], "module": [[10, "module-lucid", false]], "module (class in lucid.nn)": [[108, "lucid.nn.Module", false]], "moduledict (class in lucid.nn)": [[110, "lucid.nn.ModuleDict", false]], "modulelist (class in lucid.nn)": [[111, "lucid.nn.ModuleList", false]], "mse_loss() (in module lucid.nn.functional)": [[144, "lucid.nn.functional.mse_loss", false]], "mseloss (class in lucid.nn)": [[211, "lucid.nn.MSELoss", false]], "mul() (in module lucid)": [[270, "lucid.mul", false]], "nadam (class in lucid.optim)": [[243, "lucid.optim.NAdam", false]], "nll_loss() (in module lucid.nn.functional)": [[145, "lucid.nn.functional.nll_loss", false]], "nllloss (class in lucid.nn)": [[212, "lucid.nn.NLLLoss", false]], "no_grad() (in module lucid)": [[251, "lucid.no_grad", false]], "norm() (in module lucid.linalg)": [[18, "lucid.linalg.norm", false]], "normal() (in module lucid.nn.init)": [[176, "lucid.nn.init.normal", false]], "normalize (class in lucid.transforms)": [[327, "lucid.transforms.Normalize", false]], "ones() (in module lucid)": [[279, "lucid.ones", false]], "ones_like() (in module lucid)": [[280, "lucid.ones_like", false]], "optimizer (class in lucid.optim)": [[235, "lucid.optim.Optimizer", false]], "outer() (in module lucid)": [[271, "lucid.outer", false]], "pad() (in module lucid)": [[315, "lucid.pad", false]], "parameter (class in lucid.nn)": [[109, "lucid.nn.Parameter", false]], "parameterdict (class in lucid.nn)": [[112, "lucid.nn.ParameterDict", false]], "parameterlist (class in lucid.nn)": [[113, "lucid.nn.ParameterList", false]], "pinv() (in module lucid.linalg)": [[19, "lucid.linalg.pinv", false]], "power() (in module lucid)": [[272, "lucid.power", false]], "qr() (in module lucid.linalg)": [[20, "lucid.linalg.qr", false]], "radam (class in lucid.optim)": [[244, "lucid.optim.RAdam", false]], "rand() (in module lucid.random)": [[256, "lucid.random.rand", false]], "randint() (in module lucid.random)": [[257, "lucid.random.randint", false]], "randn() (in module lucid.random)": [[258, "lucid.random.randn", false]], "randomcrop (class in lucid.transforms)": [[328, "lucid.transforms.RandomCrop", false]], "randomgrayscale (class in lucid.transforms)": [[329, "lucid.transforms.RandomGrayscale", false]], "randomhorizontalflip (class in lucid.transforms)": [[330, "lucid.transforms.RandomHorizontalFlip", false]], "randomrotation (class in lucid.transforms)": [[331, "lucid.transforms.RandomRotation", false]], "randomverticalflip (class in lucid.transforms)": [[332, "lucid.transforms.RandomVerticalFlip", false]], "ravel() (in module lucid)": [[316, "lucid.ravel", false]], "reciprocal() (in module lucid)": [[297, "lucid.reciprocal", false]], "register_model() (in module lucid)": [[252, "lucid.register_model", false]], "relu (class in lucid.nn)": [[185, "lucid.nn.ReLU", false]], "relu() (in module lucid.nn.functional)": [[120, "lucid.nn.functional.relu", false]], "relu6 (class in lucid.nn)": [[186, "lucid.nn.ReLU6", false]], "repeat() (in module lucid)": [[317, "lucid.repeat", false]], "reshape() (in module lucid)": [[318, "lucid.reshape", false]], "resize (class in lucid.transforms)": [[333, "lucid.transforms.Resize", false]], "resnet (class in lucid.models)": [[63, "lucid.models.ResNet", false]], "resnet_1001() (in module lucid.models)": [[64, "lucid.models.resnet_1001", false]], "resnet_101() (in module lucid.models)": [[65, "lucid.models.resnet_101", false]], "resnet_152() (in module lucid.models)": [[66, "lucid.models.resnet_152", false]], "resnet_18() (in module lucid.models)": [[67, "lucid.models.resnet_18", false]], "resnet_200() (in module lucid.models)": [[68, "lucid.models.resnet_200", false]], "resnet_269() (in module lucid.models)": [[69, "lucid.models.resnet_269", false]], "resnet_34() (in module lucid.models)": [[70, "lucid.models.resnet_34", false]], "resnet_50() (in module lucid.models)": [[71, "lucid.models.resnet_50", false]], "resnext (class in lucid.models)": [[74, "lucid.models.ResNeXt", false]], "resnext_101_32x16d() (in module lucid.models)": [[75, "lucid.models.resnext_101_32x16d", false]], "resnext_101_32x32d() (in module lucid.models)": [[76, "lucid.models.resnext_101_32x32d", false]], "resnext_101_32x4d() (in module lucid.models)": [[77, "lucid.models.resnext_101_32x4d", false]], "resnext_101_32x8d() (in module lucid.models)": [[78, "lucid.models.resnext_101_32x8d", false]], "resnext_101_64x4d() (in module lucid.models)": [[79, "lucid.models.resnext_101_64x4d", false]], "resnext_50_32x4d() (in module lucid.models)": [[80, "lucid.models.resnext_50_32x4d", false]], "rmsprop (class in lucid.optim)": [[245, "lucid.optim.RMSprop", false]], "rotate() (in module lucid.nn.functional)": [[162, "lucid.nn.functional.rotate", false]], "rprop (class in lucid.optim)": [[246, "lucid.optim.Rprop", false]], "se_resnet_101() (in module lucid.models)": [[82, "lucid.models.se_resnet_101", false]], "se_resnet_152() (in module lucid.models)": [[83, "lucid.models.se_resnet_152", false]], "se_resnet_18() (in module lucid.models)": [[84, "lucid.models.se_resnet_18", false]], "se_resnet_34() (in module lucid.models)": [[85, "lucid.models.se_resnet_34", false]], "se_resnet_50() (in module lucid.models)": [[86, "lucid.models.se_resnet_50", false]], "se_resnext_101_32x4d() (in module lucid.models)": [[87, "lucid.models.se_resnext_101_32x4d", false]], "se_resnext_101_32x8d() (in module lucid.models)": [[88, "lucid.models.se_resnext_101_32x8d", false]], "se_resnext_101_64x4d() (in module lucid.models)": [[89, "lucid.models.se_resnext_101_64x4d", false]], "se_resnext_50_32x4d() (in module lucid.models)": [[90, "lucid.models.se_resnext_50_32x4d", false]], "seed() (in module lucid.random)": [[259, "lucid.random.seed", false]], "selectivekernel (class in lucid.nn)": [[170, "lucid.nn.SelectiveKernel", false]], "selu (class in lucid.nn)": [[187, "lucid.nn.SELU", false]], "selu() (in module lucid.nn.functional)": [[121, "lucid.nn.functional.selu", false]], "semodule (class in lucid.nn)": [[169, "lucid.nn.SEModule", false]], "senet (class in lucid.models)": [[81, "lucid.models.SENet", false]], "sequential (class in lucid.nn)": [[114, "lucid.nn.Sequential", false]], "sgd (class in lucid.optim)": [[247, "lucid.optim.SGD", false]], "sigmoid (class in lucid.nn)": [[188, "lucid.nn.Sigmoid", false]], "sigmoid() (in module lucid.nn.functional)": [[122, "lucid.nn.functional.sigmoid", false]], "sign() (in module lucid)": [[298, "lucid.sign", false]], "sin() (in module lucid)": [[299, "lucid.sin", false]], "sinh() (in module lucid)": [[300, "lucid.sinh", false]], "sk_resnet_18() (in module lucid.models)": [[92, "lucid.models.sk_resnet_18", false]], "sk_resnet_34() (in module lucid.models)": [[93, "lucid.models.sk_resnet_34", false]], "sk_resnet_50() (in module lucid.models)": [[94, "lucid.models.sk_resnet_50", false]], "sk_resnext_50_32x4d() (in module lucid.models)": [[95, "lucid.models.sk_resnext_50_32x4d", false]], "sknet (class in lucid.models)": [[91, "lucid.models.SKNet", false]], "softmax (class in lucid.nn)": [[189, "lucid.nn.Softmax", false]], "softmax() (in module lucid.nn.functional)": [[123, "lucid.nn.functional.softmax", false]], "solve() (in module lucid.linalg)": [[21, "lucid.linalg.solve", false]], "sqrt() (in module lucid)": [[301, "lucid.sqrt", false]], "square() (in module lucid)": [[302, "lucid.square", false]], "squeeze() (in module lucid)": [[319, "lucid.squeeze", false]], "stack() (in module lucid)": [[320, "lucid.stack", false]], "sub() (in module lucid)": [[273, "lucid.sub", false]], "sum() (in module lucid)": [[303, "lucid.sum", false]], "summarize() (in module lucid.models)": [[106, "lucid.models.summarize", false]], "svd() (in module lucid.linalg)": [[22, "lucid.linalg.svd", false]], "swish (class in lucid.nn)": [[190, "lucid.nn.Swish", false]], "tan() (in module lucid)": [[304, "lucid.tan", false]], "tanh (class in lucid.nn)": [[191, "lucid.nn.Tanh", false]], "tanh() (in module lucid)": [[305, "lucid.tanh", false]], "tanh() (in module lucid.nn.functional)": [[124, "lucid.nn.functional.tanh", false]], "tensor (class in lucid)": [[262, "lucid.Tensor", false]], "tensor() (in module lucid)": [[309, "lucid.tensor", false]], "tile() (in module lucid)": [[321, "lucid.tile", false]], "totensor (class in lucid.transforms)": [[325, "lucid.transforms.ToTensor", false]], "trace() (in module lucid)": [[306, "lucid.trace", false]], "transpose() (in module lucid)": [[307, "lucid.transpose", false]], "unfold() (in module lucid.nn.functional)": [[129, "lucid.nn.functional.unfold", false]], "uniform() (in module lucid.nn.init)": [[177, "lucid.nn.init.uniform", false]], "uniform() (in module lucid.random)": [[260, "lucid.random.uniform", false]], "unsqueeze() (in module lucid)": [[322, "lucid.unsqueeze", false]], "upsample (class in lucid.nn)": [[232, "lucid.nn.Upsample", false]], "var() (in module lucid)": [[308, "lucid.var", false]], "vggnet (class in lucid.models)": [[96, "lucid.models.VGGNet", false]], "vggnet_11() (in module lucid.models)": [[97, "lucid.models.vggnet_11", false]], "vggnet_13() (in module lucid.models)": [[98, "lucid.models.vggnet_13", false]], "vggnet_16() (in module lucid.models)": [[99, "lucid.models.vggnet_16", false]], "vggnet_19() (in module lucid.models)": [[100, "lucid.models.vggnet_19", false]], "vstack() (in module lucid)": [[323, "lucid.vstack", false]], "wide_resnet_101() (in module lucid.models)": [[72, "lucid.models.wide_resnet_101", false]], "wide_resnet_50() (in module lucid.models)": [[73, "lucid.models.wide_resnet_50", false]], "xavier_normal() (in module lucid.nn.init)": [[178, "lucid.nn.init.xavier_normal", false]], "xavier_uniform() (in module lucid.nn.init)": [[179, "lucid.nn.init.xavier_uniform", false]], "xception (class in lucid.models)": [[101, "lucid.models.Xception", false]], "xception() (in module lucid.models)": [[102, "lucid.models.xception", false]], "zeros() (in module lucid)": [[281, "lucid.zeros", false]], "zeros_like() (in module lucid)": [[282, "lucid.zeros_like", false]], "zfnet (class in lucid.models)": [[103, "lucid.models.ZFNet", false]], "zfnet() (in module lucid.models)": [[104, "lucid.models.zfnet", false]]}, "objects": {"": [[10, 0, 0, "-", "lucid"]], "lucid": [[262, 1, 1, "", "Tensor"], [284, 2, 1, "", "abs"], [263, 2, 1, "", "add"], [274, 2, 1, "", "arange"], [285, 2, 1, "", "arccos"], [286, 2, 1, "", "arcsin"], [287, 2, 1, "", "arctan"], [288, 2, 1, "", "clip"], [310, 2, 1, "", "concatenate"], [289, 2, 1, "", "cos"], [290, 2, 1, "", "cosh"], [291, 2, 1, "", "cube"], [275, 2, 1, "", "diag"], [264, 2, 1, "", "div"], [265, 2, 1, "", "dot"], [276, 2, 1, "", "empty"], [277, 2, 1, "", "empty_like"], [292, 2, 1, "", "exp"], [278, 2, 1, "", "eye"], [311, 2, 1, "", "flatten"], [249, 2, 1, "", "grad_enabled"], [312, 2, 1, "", "hstack"], [266, 2, 1, "", "inner"], [293, 2, 1, "", "log"], [267, 2, 1, "", "matmul"], [294, 2, 1, "", "max"], [268, 2, 1, "", "maximum"], [295, 2, 1, "", "mean"], [314, 2, 1, "", "meshgrid"], [296, 2, 1, "", "min"], [269, 2, 1, "", "minimum"], [270, 2, 1, "", "mul"], [251, 2, 1, "", "no_grad"], [279, 2, 1, "", "ones"], [280, 2, 1, "", "ones_like"], [271, 2, 1, "", "outer"], [315, 2, 1, "", "pad"], [272, 2, 1, "", "power"], [316, 2, 1, "", "ravel"], [297, 2, 1, "", "reciprocal"], [252, 2, 1, "", "register_model"], [317, 2, 1, "", "repeat"], [318, 2, 1, "", "reshape"], [298, 2, 1, "", "sign"], [299, 2, 1, "", "sin"], [300, 2, 1, "", "sinh"], [301, 2, 1, "", "sqrt"], [302, 2, 1, "", "square"], [319, 2, 1, "", "squeeze"], [320, 2, 1, "", "stack"], [273, 2, 1, "", "sub"], [303, 2, 1, "", "sum"], [304, 2, 1, "", "tan"], [305, 2, 1, "", "tanh"], [309, 2, 1, "", "tensor"], [321, 2, 1, "", "tile"], [306, 2, 1, "", "trace"], [307, 2, 1, "", "transpose"], [322, 2, 1, "", "unsqueeze"], [308, 2, 1, "", "var"], [323, 2, 1, "", "vstack"], [281, 2, 1, "", "zeros"], [282, 2, 1, "", "zeros_like"]], "lucid.data": [[0, 1, 1, "", "ConcatDataset"], [1, 1, 1, "", "DataLoader"], [2, 1, 1, "", "Dataset"]], "lucid.datasets": [[5, 1, 1, "", "CIFAR10"], [6, 1, 1, "", "CIFAR100"], [7, 1, 1, "", "FashionMNIST"], [8, 1, 1, "", "MNIST"]], "lucid.linalg": [[12, 2, 1, "", "cholesky"], [13, 2, 1, "", "det"], [14, 2, 1, "", "eig"], [16, 2, 1, "", "inv"], [17, 2, 1, "", "matrix_power"], [18, 2, 1, "", "norm"], [19, 2, 1, "", "pinv"], [20, 2, 1, "", "qr"], [21, 2, 1, "", "solve"], [22, 2, 1, "", "svd"]], "lucid.models": [[23, 1, 1, "", "AlexNet"], [25, 1, 1, "", "DenseNet"], [30, 1, 1, "", "EfficientNet"], [31, 1, 1, "", "EfficientNet_V2"], [44, 1, 1, "", "Inception"], [48, 1, 1, "", "InceptionResNet"], [52, 1, 1, "", "LeNet"], [56, 1, 1, "", "MobileNet"], [57, 1, 1, "", "MobileNet_V2"], [58, 1, 1, "", "MobileNet_V3"], [74, 1, 1, "", "ResNeXt"], [63, 1, 1, "", "ResNet"], [81, 1, 1, "", "SENet"], [91, 1, 1, "", "SKNet"], [96, 1, 1, "", "VGGNet"], [101, 1, 1, "", "Xception"], [103, 1, 1, "", "ZFNet"], [24, 2, 1, "", "alexnet"], [26, 2, 1, "", "densenet_121"], [27, 2, 1, "", "densenet_169"], [28, 2, 1, "", "densenet_201"], [29, 2, 1, "", "densenet_264"], [32, 2, 1, "", "efficientnet_b0"], [33, 2, 1, "", "efficientnet_b1"], [34, 2, 1, "", "efficientnet_b2"], [35, 2, 1, "", "efficientnet_b3"], [36, 2, 1, "", "efficientnet_b4"], [37, 2, 1, "", "efficientnet_b5"], [38, 2, 1, "", "efficientnet_b6"], [39, 2, 1, "", "efficientnet_b7"], [40, 2, 1, "", "efficientnet_v2_l"], [41, 2, 1, "", "efficientnet_v2_m"], [42, 2, 1, "", "efficientnet_v2_s"], [43, 2, 1, "", "efficientnet_v2_xl"], [49, 2, 1, "", "inception_resnet_v1"], [50, 2, 1, "", "inception_resnet_v2"], [45, 2, 1, "", "inception_v1"], [46, 2, 1, "", "inception_v3"], [47, 2, 1, "", "inception_v4"], [53, 2, 1, "", "lenet_1"], [54, 2, 1, "", "lenet_4"], [55, 2, 1, "", "lenet_5"], [59, 2, 1, "", "mobilenet"], [60, 2, 1, "", "mobilenet_v2"], [61, 2, 1, "", "mobilenet_v3_large"], [62, 2, 1, "", "mobilenet_v3_small"], [64, 2, 1, "", "resnet_1001"], [65, 2, 1, "", "resnet_101"], [66, 2, 1, "", "resnet_152"], [67, 2, 1, "", "resnet_18"], [68, 2, 1, "", "resnet_200"], [69, 2, 1, "", "resnet_269"], [70, 2, 1, "", "resnet_34"], [71, 2, 1, "", "resnet_50"], [75, 2, 1, "", "resnext_101_32x16d"], [76, 2, 1, "", "resnext_101_32x32d"], [77, 2, 1, "", "resnext_101_32x4d"], [78, 2, 1, "", "resnext_101_32x8d"], [79, 2, 1, "", "resnext_101_64x4d"], [80, 2, 1, "", "resnext_50_32x4d"], [82, 2, 1, "", "se_resnet_101"], [83, 2, 1, "", "se_resnet_152"], [84, 2, 1, "", "se_resnet_18"], [85, 2, 1, "", "se_resnet_34"], [86, 2, 1, "", "se_resnet_50"], [87, 2, 1, "", "se_resnext_101_32x4d"], [88, 2, 1, "", "se_resnext_101_32x8d"], [89, 2, 1, "", "se_resnext_101_64x4d"], [90, 2, 1, "", "se_resnext_50_32x4d"], [92, 2, 1, "", "sk_resnet_18"], [93, 2, 1, "", "sk_resnet_34"], [94, 2, 1, "", "sk_resnet_50"], [95, 2, 1, "", "sk_resnext_50_32x4d"], [106, 2, 1, "", "summarize"], [97, 2, 1, "", "vggnet_11"], [98, 2, 1, "", "vggnet_13"], [99, 2, 1, "", "vggnet_16"], [100, 2, 1, "", "vggnet_19"], [72, 2, 1, "", "wide_resnet_101"], [73, 2, 1, "", "wide_resnet_50"], [102, 2, 1, "", "xception"], [104, 2, 1, "", "zfnet"]], "lucid.nn": [[222, 1, 1, "", "AdaptiveAvgPool1d"], [223, 1, 1, "", "AdaptiveAvgPool2d"], [224, 1, 1, "", "AdaptiveAvgPool3d"], [197, 1, 1, "", "AlphaDropout"], [225, 1, 1, "", "AvgPool1d"], [226, 1, 1, "", "AvgPool2d"], [227, 1, 1, "", "AvgPool3d"], [208, 1, 1, "", "BCELoss"], [214, 1, 1, "", "BatchNorm1d"], [215, 1, 1, "", "BatchNorm2d"], [216, 1, 1, "", "BatchNorm3d"], [204, 1, 1, "", "Bilinear"], [107, 1, 1, "", "Buffer"], [193, 1, 1, "", "Conv1d"], [194, 1, 1, "", "Conv2d"], [195, 1, 1, "", "Conv3d"], [163, 1, 1, "", "ConvBNReLU1d"], [164, 1, 1, "", "ConvBNReLU2d"], [165, 1, 1, "", "ConvBNReLU3d"], [209, 1, 1, "", "CrossEntropyLoss"], [166, 1, 1, "", "DepthSeparableConv1d"], [167, 1, 1, "", "DepthSeparableConv2d"], [168, 1, 1, "", "DepthSeparableConv3d"], [198, 1, 1, "", "Dropout"], [199, 1, 1, "", "Dropout1d"], [200, 1, 1, "", "Dropout2d"], [201, 1, 1, "", "Dropout3d"], [180, 1, 1, "", "ELU"], [181, 1, 1, "", "GELU"], [182, 1, 1, "", "HardSigmoid"], [183, 1, 1, "", "HardSwish"], [210, 1, 1, "", "HuberLoss"], [205, 1, 1, "", "Identity"], [217, 1, 1, "", "InstanceNorm1d"], [218, 1, 1, "", "InstanceNorm2d"], [219, 1, 1, "", "InstanceNorm3d"], [220, 1, 1, "", "LayerNorm"], [184, 1, 1, "", "LeakyReLU"], [206, 1, 1, "", "Linear"], [211, 1, 1, "", "MSELoss"], [228, 1, 1, "", "MaxPool1d"], [229, 1, 1, "", "MaxPool2d"], [230, 1, 1, "", "MaxPool3d"], [108, 1, 1, "", "Module"], [110, 1, 1, "", "ModuleDict"], [111, 1, 1, "", "ModuleList"], [212, 1, 1, "", "NLLLoss"], [109, 1, 1, "", "Parameter"], [112, 1, 1, "", "ParameterDict"], [113, 1, 1, "", "ParameterList"], [185, 1, 1, "", "ReLU"], [186, 1, 1, "", "ReLU6"], [187, 1, 1, "", "SELU"], [169, 1, 1, "", "SEModule"], [170, 1, 1, "", "SelectiveKernel"], [114, 1, 1, "", "Sequential"], [188, 1, 1, "", "Sigmoid"], [189, 1, 1, "", "Softmax"], [190, 1, 1, "", "Swish"], [191, 1, 1, "", "Tanh"], [232, 1, 1, "", "Upsample"]], "lucid.nn.functional": [[150, 2, 1, "", "adaptive_avg_pool1d"], [151, 2, 1, "", "adaptive_avg_pool2d"], [152, 2, 1, "", "adaptive_avg_pool3d"], [130, 2, 1, "", "alpha_dropout"], [153, 2, 1, "", "avg_pool1d"], [154, 2, 1, "", "avg_pool2d"], [155, 2, 1, "", "avg_pool3d"], [146, 2, 1, "", "batch_norm"], [137, 2, 1, "", "bilinear"], [140, 2, 1, "", "binary_cross_entropy"], [125, 2, 1, "", "conv1d"], [126, 2, 1, "", "conv2d"], [127, 2, 1, "", "conv3d"], [141, 2, 1, "", "cross_entropy"], [131, 2, 1, "", "dropout"], [132, 2, 1, "", "dropout1d"], [133, 2, 1, "", "dropout2d"], [134, 2, 1, "", "dropout3d"], [116, 2, 1, "", "elu"], [117, 2, 1, "", "gelu"], [142, 2, 1, "", "huber_loss"], [148, 2, 1, "", "instance_norm"], [161, 2, 1, "", "interpolate"], [149, 2, 1, "", "layer_norm"], [119, 2, 1, "", "leaky_relu"], [139, 2, 1, "", "linear"], [157, 2, 1, "", "max_pool1d"], [158, 2, 1, "", "max_pool2d"], [159, 2, 1, "", "max_pool3d"], [144, 2, 1, "", "mse_loss"], [145, 2, 1, "", "nll_loss"], [120, 2, 1, "", "relu"], [162, 2, 1, "", "rotate"], [121, 2, 1, "", "selu"], [122, 2, 1, "", "sigmoid"], [123, 2, 1, "", "softmax"], [124, 2, 1, "", "tanh"], [129, 2, 1, "", "unfold"]], "lucid.nn.init": [[172, 2, 1, "", "constant"], [174, 2, 1, "", "kaiming_normal"], [175, 2, 1, "", "kaiming_uniform"], [176, 2, 1, "", "normal"], [177, 2, 1, "", "uniform"], [178, 2, 1, "", "xavier_normal"], [179, 2, 1, "", "xavier_uniform"]], "lucid.optim": [[237, 1, 1, "", "ASGD"], [238, 1, 1, "", "Adadelta"], [239, 1, 1, "", "Adagrad"], [240, 1, 1, "", "Adam"], [241, 1, 1, "", "AdamW"], [242, 1, 1, "", "Adamax"], [243, 1, 1, "", "NAdam"], [235, 1, 1, "", "Optimizer"], [244, 1, 1, "", "RAdam"], [245, 1, 1, "", "RMSprop"], [246, 1, 1, "", "Rprop"], [247, 1, 1, "", "SGD"]], "lucid.random": [[254, 2, 1, "", "bernoulli"], [256, 2, 1, "", "rand"], [257, 2, 1, "", "randint"], [258, 2, 1, "", "randn"], [259, 2, 1, "", "seed"], [260, 2, 1, "", "uniform"]], "lucid.transforms": [[326, 1, 1, "", "CenterCrop"], [324, 1, 1, "", "Compose"], [327, 1, 1, "", "Normalize"], [328, 1, 1, "", "RandomCrop"], [329, 1, 1, "", "RandomGrayscale"], [330, 1, 1, "", "RandomHorizontalFlip"], [331, 1, 1, "", "RandomRotation"], [332, 1, 1, "", "RandomVerticalFlip"], [333, 1, 1, "", "Resize"], [325, 1, 1, "", "ToTensor"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:function"}, "terms": {"": [3, 10, 11, 17, 19, 22, 42, 61, 62, 105, 106, 107, 108, 109, 110, 112, 113, 114, 150, 151, 152, 170, 209, 212, 222, 223, 224, 225, 228, 229, 234, 235, 236, 250, 252, 267, 275, 293, 295, 303, 306, 308, 309, 319, 325, 327, 335], "0": [0, 1, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 30, 31, 40, 41, 42, 43, 46, 48, 52, 59, 81, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 281, 282, 284, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 297, 298, 299, 300, 303, 304, 305, 307, 308, 309, 310, 312, 315, 316, 317, 319, 320, 322, 323, 324, 326, 327, 328, 329, 330, 331, 332, 333, 335], "000": [5, 6, 7, 8, 276, 277], "0000": [209, 210, 212], "0001": 237, "000e": [276, 277], "001": [237, 240, 241, 243, 244, 247], "002": [242, 243], "004": 243, "005": 184, "008": [59, 105], "01": [119, 184, 235, 236, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247], "01051757": 258, "013": [28, 105], "016": [64, 105], "0205": 209, "0217": 209, "0227": 209, "024": [86, 105], "026": [75, 105], "028": [80, 105], "0299": 209, "032": [40, 71, 105], "044715": [117, 181], "0450": 209, "0451": 209, "046": [38, 105], "047": [98, 105], "04719755": 285, "0474259": 122, "048": [88, 105], "0480": 209, "04861": 105, "05": [146, 148, 149, 163, 164, 165, 184, 214, 215, 216, 217, 218, 219, 220], "0507": [121, 187], "06": [238, 246], "069": [69, 105], "07": [140, 141, 208, 209], "0700": 209, "0706508": 191, "071": [64, 105], "0721": 209, "073": [94, 105], "07722396": 190, "0794": 212, "08": [240, 241, 242, 243, 244, 245], "0802": 212, "08333333": 19, "085537": 292, "088": [86, 105], "0900": [189, 209], "096": [102, 105], "0986": [123, 189], "09861229": 293, "0992": 209, "1": [0, 1, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 48, 52, 53, 54, 55, 58, 59, 60, 61, 62, 81, 87, 88, 89, 90, 91, 95, 96, 101, 103, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 253, 254, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 279, 280, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335], "10": [0, 1, 2, 3, 5, 6, 7, 23, 24, 25, 52, 53, 54, 55, 96, 103, 104, 105, 106, 110, 111, 114, 126, 127, 137, 139, 150, 193, 194, 195, 200, 201, 204, 206, 215, 216, 218, 222, 226, 227, 229, 239, 252, 257, 260, 261, 264, 267, 270, 271, 287, 303, 326, 328, 329, 331], "100": [6, 24, 40, 41, 42, 43, 97, 98, 99, 100, 105, 252, 335], "1000": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104], "1000000": 237, "1001": [64, 105, 209], "1003": 209, "1007": 105, "10096": 105, "101": [65, 72, 75, 76, 77, 78, 79, 82, 87, 88, 89, 105], "10106": 105, "1014": 121, "102": [69, 105], "1025": [111, 114], "1026": [111, 114], "1027": [111, 114], "10499": 122, "1050": 188, "1054": 212, "1056": [111, 114], "10590": 105, "108": [41, 105], "1097": 105, "11": [67, 84, 96, 97, 105, 137, 193, 194, 195, 200, 204, 215, 216, 218, 226, 227, 229, 267, 326, 327, 328, 329, 331], "1105": 105, "1109": 105, "111": [34, 105], "1111": 208, "112": 61, "1134": 137, "114b": 329, "119": 137, "1192": [122, 123, 189], "12": [25, 26, 27, 28, 29, 35, 53, 54, 105, 112, 137, 152, 193, 194, 195, 200, 201, 204, 215, 216, 218, 224, 226, 227, 229, 267, 271, 272, 326, 328, 329, 331], "120": [40, 52, 55, 61, 62, 105], "121": [25, 26, 105], "123": [174, 175, 176, 177, 178, 179, 259, 260], "124": [174, 175, 178, 179], "125": 227, "1250": 210, "1251": 105, "1258": 105, "126": [72, 105], "128": [38, 49, 63, 72, 73, 96, 105, 114, 170, 324, 335], "1280": 58, "128x128": [324, 335], "13": [45, 96, 98, 105, 137, 193, 194, 195, 204, 216, 226, 227, 229, 267, 326, 328, 329, 331], "1314": 105, "132": [97, 105], "1324": 105, "133": [98, 105], "136": [42, 105], "138": [99, 105], "14": [27, 105, 193, 194, 195, 200, 201, 204, 216, 226, 227, 229, 253, 267, 271, 326, 328, 329, 331], "1409": 105, "143": [100, 105], "144": 62, "145": 137, "149": [27, 64, 105], "15": [0, 137, 193, 194, 195, 204, 216, 226, 227, 229, 267, 271, 306, 326, 328, 329, 331, 335], "1513": 212, "152": [66, 83, 105], "155": 267, "1556": 105, "1588": [117, 181], "16": [25, 26, 52, 55, 58, 61, 62, 75, 81, 96, 99, 105, 111, 112, 114, 151, 152, 163, 164, 165, 169, 170, 193, 194, 195, 200, 201, 204, 215, 216, 223, 224, 226, 227, 229, 234, 267, 271, 301, 326, 328, 329, 331], "160": [61, 65, 105], "16227766": 20, "16425": 212, "1643": 208, "166": 267, "167": 183, "169": [25, 27, 105], "17": [193, 194, 195, 204, 216, 227, 266, 326, 328, 329, 331], "170": 137, "1704": 105, "17520119": 300, "177": [77, 105], "18": [54, 67, 84, 92, 105, 193, 194, 195, 200, 204, 216, 227, 270, 271, 326, 328, 329, 331], "1800": 209, "184": 61, "18877099": 190, "19": [36, 96, 100, 105, 126, 127, 137, 194, 195, 216, 265, 267], "192": [53, 54, 66, 105], "194": [75, 105], "1966": [123, 188, 189], "198": [61, 105], "1998": [105, 209], "1_53": 105, "1d": [125, 150, 153, 157, 163, 166, 214, 217, 222, 260, 267, 275, 306, 314, 315, 316, 317, 321], "1e": [140, 141, 146, 148, 149, 163, 164, 165, 208, 209, 214, 215, 216, 217, 218, 219, 220, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "1e6": 237, "1st": [23, 103], "2": [1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 30, 31, 40, 41, 42, 43, 53, 54, 55, 58, 61, 62, 67, 84, 92, 103, 105, 106, 107, 108, 109, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 170, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 253, 254, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 279, 280, 281, 282, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335], "20": [0, 5, 6, 7, 8, 28, 105, 110, 111, 114, 194, 195, 200, 216, 271, 292], "200": [61, 68, 105], "201": [28, 105], "2011": 169, "2012": 105, "2014": 105, "2015": 105, "2016": 105, "2017": 105, "2018": [105, 169], "2019": 105, "2021": 105, "2023": 169, "2039": 212, "204": 195, "21": [42, 70, 85, 105, 112, 137, 194, 195, 216, 271], "210": [43, 105], "211": 267, "22": [49, 102, 105, 137, 194, 195, 200, 216, 265, 267], "221": [43, 105], "2231": [209, 212], "224": [23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 59, 60, 63, 73, 75, 76, 77, 78, 79, 80, 87, 88, 89, 90, 92, 93, 94, 95, 96, 103, 105], "2247": [214, 215, 216, 217, 218, 219, 220], "224x224": [30, 45, 87, 88, 89, 90, 95], "226": 267, "22752314": 258, "2278": 105, "23": [65, 72, 75, 76, 77, 78, 79, 82, 194, 195, 216], "232": [59, 89, 105], "2324": [105, 187], "234": [174, 175, 176, 177, 178, 179, 260], "235": [35, 105], "238": [62, 105], "23840584": 190, "24": [25, 26, 58, 61, 62, 68, 137, 151, 194, 195, 200, 216, 223, 271], "240": [61, 62, 100, 105], "240x240": 30, "2424": [123, 189], "2447": 189, "246": [53, 105], "25": [0, 71, 80, 92, 105, 122, 188, 195, 211, 216, 226, 227, 264, 297, 308], "2500": [208, 210, 212], "2512": 180, "2547": 187, "256": [63, 96], "26": [112, 139, 195, 206, 216, 271], "260": 105, "260x260": 30, "26325684": 258, "264": [29, 105], "2689": [123, 188, 189], "26894142": 190, "269": [69, 105], "27": [90, 105, 137, 193, 195, 216, 291], "272": [79, 105], "274": [95, 105], "276": [174, 175, 178, 179], "28": [53, 54, 86, 105, 137, 195, 271], "288": 62, "289": [32, 105], "28x28": [7, 8, 53, 54], "29": [95, 105, 195], "299": [101, 105], "299r": 329, "299x299": [46, 47, 49, 50], "2_i": [217, 218, 219], "2d": [126, 133, 151, 154, 158, 164, 167, 215, 218, 223, 267, 275, 278, 306, 311, 314, 315, 317, 321, 331], "2e": 242, "2nd": [23, 103], "2x2": [129, 326, 328], "3": [1, 2, 3, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 53, 58, 59, 60, 61, 62, 63, 64, 65, 66, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 101, 103, 105, 107, 108, 109, 111, 112, 113, 114, 117, 122, 123, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 139, 142, 144, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 288, 290, 291, 292, 293, 294, 295, 296, 300, 301, 302, 303, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333], "30": [37, 46, 69, 105, 111, 162, 195, 331], "300": 105, "300x300": 30, "302": [41, 105], "3026": 212, "30823025": 190, "31": [137, 195, 267], "310": [276, 277], "31622777": 20, "319": 105, "32": [25, 27, 28, 55, 75, 76, 77, 78, 80, 105, 111, 114, 137, 139, 151, 163, 164, 165, 169, 170, 194, 195, 206, 223, 234, 265, 266, 271], "321": [174, 175, 178, 179], "326": [82, 105], "32x16d": 105, "32x32": [5, 6, 52, 55], "32x32d": 105, "32x4d": [87, 90, 95, 105], "32x8d": [88, 105], "33": [29, 105, 111, 114, 139, 195, 206], "33333333": 19, "336": [78, 97, 105], "337": [29, 105], "34": [70, 85, 93, 105, 111, 114, 137, 195, 267, 271], "342": [174, 175, 178, 179], "344": [36, 105], "345": [174, 175, 176, 177, 178, 179, 260], "35": [50, 105, 111, 114, 195], "352": [45, 105], "355": [39, 105], "3567": [208, 212], "357": [99, 104, 105], "36": [66, 68, 83, 195], "3679": [116, 121, 180], "368": [92, 94, 105], "36th": 105, "37": 193, "370": [34, 105], "372": 137, "375": 211, "3750": 210, "37754067": 190, "378": [54, 105], "380": 105, "380x380": 30, "38344152": 256, "38629436": 293, "389056": 292, "38th": 105, "392": [46, 105], "393": [37, 45, 105], "3935": 180, "3d": [127, 134, 152, 155, 159, 165, 168, 195, 216, 219, 224], "3x3": [105, 261], "4": [0, 1, 2, 3, 11, 12, 13, 14, 16, 18, 19, 20, 25, 30, 52, 53, 54, 59, 63, 65, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 85, 86, 93, 94, 105, 106, 112, 114, 125, 126, 127, 129, 132, 133, 134, 137, 139, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 166, 167, 168, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 237, 240, 244, 245, 247, 250, 253, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 280, 282, 288, 293, 294, 295, 296, 297, 299, 301, 302, 303, 304, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 320, 321, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333], "40": [47, 58, 61, 62, 105], "400": 55, "4044": 208, "4076": 209, "4096": [23, 103], "41421356": 12, "416": [69, 87, 105], "41666667": 19, "41808962": 258, "419974": 124, "4199743": 191, "42": [137, 169, 253, 261], "421": [174, 175, 178, 179], "423": [174, 175, 176, 177], "42718872": 20, "4278": 105, "4284": 105, "4286": 208, "43": [38, 105, 265, 267], "432": [37, 105], "4323": 180, "4375": 210, "43758721": 256, "44": [65, 77, 105], "440": [42, 105], "4472136": 14, "448": [39, 105], "4495": [216, 219], "45": [93, 105, 137, 162, 331], "4510": 105, "4520": 105, "4545": 197, "455": [79, 105], "456": 105, "456x456": 30, "468": [76, 105], "4700": 105, "4708": 105, "47112767": 287, "472": [76, 105], "48": [25, 28, 29, 62, 69, 87, 105, 139, 206], "480": [27, 61, 105], "481": [61, 105], "49": [82, 105], "4979": 180, "4x4": 333, "5": [1, 2, 10, 11, 16, 17, 18, 19, 23, 30, 32, 46, 52, 53, 54, 55, 58, 61, 62, 91, 92, 93, 94, 103, 105, 106, 108, 109, 110, 111, 112, 114, 117, 122, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 139, 142, 144, 146, 148, 149, 150, 153, 154, 161, 163, 164, 165, 170, 172, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 225, 226, 227, 229, 230, 246, 250, 253, 254, 257, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 277, 278, 280, 282, 284, 285, 286, 294, 295, 296, 297, 298, 303, 306, 307, 308, 309, 312, 314, 318, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335], "50": [5, 6, 63, 71, 73, 80, 86, 90, 94, 95, 105, 139, 206, 246, 265, 267, 329, 330, 332, 335], "5000": [208, 210, 212], "504": [60, 105], "510": 105, "5108": 212, "512": [50, 63, 67, 93, 105], "519": 105, "52359878": 286, "528": 105, "528x528": 30, "53": [137, 266], "530": [76, 105], "536": [35, 105], "537": [62, 105], "543": [174, 175, 176, 177, 178, 179, 260], "54308063": 290, "544": [99, 105], "545": 272, "5455": 197, "549": [65, 105], "55": [41, 105], "557": [71, 105], "559": [90, 105], "560": [33, 105], "563": [174, 175, 178, 179], "568": [43, 105], "569": [88, 105], "57": [94, 105, 137], "57079633": [285, 286], "57366333": 259, "576": 62, "586": [47, 105], "587g": 329, "592": [84, 105], "5987": 105, "5995": 105, "5th": [23, 103], "6": [11, 19, 23, 25, 26, 27, 28, 29, 30, 52, 55, 63, 70, 71, 73, 80, 85, 86, 93, 94, 103, 112, 113, 125, 126, 127, 129, 134, 137, 139, 150, 175, 179, 182, 186, 193, 194, 195, 198, 199, 200, 201, 204, 206, 208, 214, 215, 216, 217, 218, 219, 220, 222, 226, 227, 229, 230, 238, 246, 250, 253, 260, 263, 264, 265, 266, 267, 270, 271, 272, 273, 274, 275, 276, 277, 280, 282, 294, 295, 296, 303, 306, 307, 308, 309, 312, 317, 318, 323, 325, 326, 327, 328, 329, 331, 333], "60": [5, 6, 66, 105], "600": [30, 105], "600x600": 30, "6052": 212, "6065": 180, "608": [104, 105], "61": [24, 55, 105], "6105": 105, "6114": 105, "6124": [214, 215, 216, 217, 218, 219, 220], "617": [40, 105], "62": [104, 105, 137], "62686041": 300, "630": 105, "6321": [116, 180], "63245553": 20, "636": [32, 105], "64": [25, 29, 58, 61, 63, 68, 79, 91, 96, 105, 111, 114, 137, 169, 170], "640": [36, 105], "645": 105, "64589411": 256, "647": [92, 105], "64x4d": [89, 105], "654": [174, 175, 176, 177, 178, 179, 260], "657": [174, 175, 178, 179], "6590": [123, 189], "66": [39, 83, 105], "6652": 189, "66666667": 19, "6667": 208, "667": [100, 105], "6682": 208, "669": [68, 105], "67": 267, "672": [61, 70, 105], "67326": 187, "6733": 121, "678": [174, 175, 176, 177, 178, 179], "68811989": 258, "689": [67, 105], "69314718": 293, "696": [72, 105], "7": [18, 26, 33, 96, 105, 112, 125, 126, 127, 129, 134, 137, 139, 140, 141, 150, 170, 181, 186, 187, 188, 191, 193, 194, 195, 200, 201, 204, 206, 208, 209, 211, 215, 216, 218, 219, 222, 226, 227, 229, 230, 253, 254, 257, 260, 263, 265, 266, 267, 271, 273, 275, 292, 295, 303, 306, 307, 308, 321, 325, 326, 327, 328, 329, 331, 333], "70": [7, 8], "7001": 209, "704": [29, 77, 105], "706": [55, 105], "70710678": [14, 299], "7132": 105, "7141": 105, "7147": 212, "7182818": 292, "72": [58, 61, 62], "726791": 105, "7311": [123, 188, 189], "739": [49, 105], "74": 267, "75": [139, 206, 211, 237], "7581": 121, "760": [95, 105], "76159416": [190, 305], "7616": [124, 191], "76219569": 290, "7635": 187, "770": 105, "772": 272, "778": [84, 105], "78": [73, 105], "78357324": 258, "78539816": 287, "791": [78, 105], "79172504": 256, "792": [75, 105], "795": [33, 105], "797": [70, 105], "7x7": 103, "8": [17, 21, 25, 30, 63, 66, 69, 75, 76, 77, 78, 79, 80, 83, 92, 93, 94, 106, 111, 112, 114, 125, 126, 127, 129, 134, 137, 139, 140, 150, 151, 152, 163, 164, 165, 169, 181, 182, 187, 188, 191, 193, 194, 195, 198, 199, 200, 201, 204, 206, 208, 211, 215, 216, 218, 219, 222, 223, 224, 226, 227, 229, 230, 240, 241, 242, 243, 244, 245, 253, 254, 257, 264, 265, 266, 267, 271, 272, 274, 275, 291, 295, 303, 306, 307, 308, 325, 326, 327, 328, 329, 331, 333], "80": [5, 6, 7, 8, 61], "8005": 209, "808": [66, 105], "817": [46, 105], "818": 105, "8182": 197, "82": 137, "821": [83, 105], "83": [79, 105], "833": 105, "84": [52, 54, 55], "840": [24, 105], "8413": [117, 181], "847": [50, 105], "848": [83, 98, 105], "856": [26, 105], "85772238": 190, "8584": 187, "86": 105, "862": [102, 105], "863": [97, 105], "864": [68, 105], "868": [85, 105], "872": [60, 82, 105], "876": [174, 175, 178, 179, 260], "88": [62, 78, 89, 105], "8808": [123, 188, 189], "886": [72, 105], "887": 272, "891773": 256, "89442719": 14, "895": [93, 105], "896": [90, 105], "9": [0, 1, 3, 8, 21, 34, 105, 126, 129, 137, 139, 150, 193, 194, 195, 200, 204, 206, 208, 215, 216, 218, 222, 226, 227, 229, 237, 238, 240, 241, 242, 243, 244, 245, 247, 253, 254, 257, 260, 263, 267, 271, 272, 273, 275, 301, 302, 325, 326, 327, 328, 329, 331], "904": [80, 105], "90709145": 259, "9091": 197, "9120": 212, "9163": 212, "928": [28, 105], "93": [88, 105], "94": 64, "9486833": 20, "949e": [276, 277], "9526": 122, "9545": 181, "955": [87, 105], "958": [85, 105], "96": 62, "960": 61, "96366276": 256, "9640": 191, "96402758": 305, "973": [73, 105], "978": [26, 105], "984": [47, 89, 105], "99": 245, "9957": 212, "99734545": 259, "999": [0, 240, 241, 242, 243, 244], "A": [1, 3, 5, 6, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 31, 48, 52, 56, 63, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 93, 94, 96, 97, 98, 99, 100, 105, 108, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 137, 139, 140, 141, 145, 146, 148, 149, 161, 170, 197, 198, 199, 200, 201, 208, 209, 212, 214, 215, 216, 217, 218, 219, 220, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 253, 254, 256, 257, 258, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 331], "As": 259, "At": 232, "Be": 0, "By": [0, 2, 3, 10, 64, 65, 66, 67, 68, 69, 70, 71, 109, 162, 234, 244, 250, 254, 256, 257, 258, 260, 325, 335], "For": [2, 3, 4, 10, 12, 13, 14, 16, 17, 18, 19, 21, 114, 116, 117, 119, 120, 121, 122, 124, 137, 139, 161, 174, 175, 178, 179, 187, 193, 194, 195, 204, 206, 214, 215, 216, 217, 218, 219, 234, 236, 259, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 292, 293, 294, 295, 296, 299, 301, 303, 306, 307, 308, 315, 317, 319, 321, 322, 335], "If": [0, 1, 2, 5, 6, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 63, 106, 108, 110, 111, 112, 113, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 134, 137, 139, 146, 148, 151, 152, 161, 162, 163, 164, 165, 166, 167, 168, 170, 174, 175, 193, 194, 195, 204, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 232, 235, 240, 241, 245, 246, 252, 254, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 329, 330, 332, 333], "In": [3, 10, 19, 125, 126, 127, 209, 212, 249, 250, 251, 324, 335], "It": [1, 2, 3, 7, 10, 19, 20, 21, 23, 26, 27, 28, 29, 44, 45, 46, 52, 53, 54, 55, 57, 58, 59, 63, 64, 65, 66, 67, 68, 69, 70, 71, 84, 96, 102, 105, 108, 110, 111, 112, 113, 114, 134, 137, 161, 162, 163, 164, 165, 169, 181, 182, 185, 186, 191, 204, 205, 208, 209, 210, 211, 212, 222, 223, 224, 232, 234, 235, 236, 237, 243, 245, 246, 247, 250, 259, 263, 264, 265, 268, 269, 270, 272, 273, 294, 296, 310, 312, 314, 315, 316, 317, 318, 319, 320, 321, 323, 324, 325], "Its": [21, 261], "Near": 19, "No": 129, "Not": 205, "One": [53, 335], "The": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335], "There": 318, "These": [4, 10, 11, 14, 17, 20, 22, 40, 41, 42, 43, 72, 73, 92, 93, 94, 102, 105, 197, 198, 199, 200, 201, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 246, 253, 261, 335], "To": [3, 105, 236, 254, 258, 261, 276, 277, 314, 335], "With": [3, 129, 325, 335], "_": [17, 110, 111, 113, 114, 116, 117, 119, 120, 121, 122, 124, 139, 161, 215, 216, 217, 218, 219, 225, 226, 227, 228, 229, 230, 237, 238, 240, 241, 242, 243, 245, 247, 265, 266, 267, 271, 306, 307, 326, 327, 328, 330, 331, 332], "_1": [14, 110, 111, 112, 113, 114, 137, 204, 271, 310, 312, 323], "_2": [14, 110, 111, 112, 113, 114, 137, 204, 271, 310, 312, 323], "__call__": [1, 108], "__getitem__": [0, 2, 3, 5, 6, 7, 8], "__init__": [0, 1, 2, 3, 10, 23, 30, 31, 44, 48, 52, 56, 57, 58, 96, 103, 106, 107, 108, 109, 110, 111, 112, 113, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 204, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 252, 262, 324, 325], "__iter__": [0, 1], "__len__": [0, 1, 2, 3, 5, 6, 7, 8], "__repr__": 235, "__setattr__": 108, "_activ": 123, "_arraylik": [253, 275, 277, 280, 282], "_arraylikeint": 315, "_arrayorscalar": [107, 109, 253, 254, 262, 309], "_base_activ": 52, "_base_dtyp": [274, 276, 279, 281], "_c": 327, "_decai": 243, "_fanmod": [174, 175], "_grad_en": [249, 251], "_i": [14, 18, 123, 137, 189, 211, 214, 220, 225, 228, 265, 266, 268, 269, 271, 272, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 317, 319, 322, 323], "_in": [174, 175, 178, 179], "_interpolatetyp": 232, "_j": [123, 189, 225, 228, 271, 295, 303, 307, 308], "_k": 320, "_left": 161, "_make_lay": 96, "_modul": 108, "_n": [14, 110, 111, 112, 113, 114, 310, 312, 323], "_numpyarrai": 253, "_out": [174, 175, 178, 179, 317, 321], "_p": 18, "_pad": 315, "_paddingstr": [163, 164, 165, 166, 167, 168, 193, 194, 195], "_paramet": 108, "_reductiontyp": [140, 141, 142, 144, 145, 208, 209, 210, 211, 212], "_right": 161, "_scalar": [172, 176, 177, 178, 179, 253, 274, 288], "_seresnetbottleneck": [82, 83, 86], "_seresnetmodul": [84, 85], "_shapelik": [106, 149, 220, 253, 257, 279, 281, 318, 319, 322], "_size": [150, 151, 152], "_skresnetmodul": [92, 93, 94], "_slope": 184, "_statedict": 235, "_t": [244, 245], "_tensor": [107, 109, 275, 309], "_tensorop": 262, "_u": 19, "_v": 19, "_valu": [288, 315], "_width": 315, "a_i": [268, 269, 272], "aaai": 105, "ab": 283, "abc": [2, 235], "abil": [10, 105, 335], "about": [10, 106], "abov": [10, 249, 251, 259, 275, 278], "absolut": [17, 18, 142, 242, 284], "abstract": [2, 3, 234, 235, 236, 237, 245, 247], "abstractmethod": 235, "acceler": [105, 187, 214, 215, 216, 237, 243, 245, 247], "accept": [205, 256, 262], "access": [0, 2, 3, 4, 5, 6, 7, 8, 75, 76, 77, 78, 79, 80, 107, 109, 110, 111, 112, 113, 114, 318], "accord": [161, 193, 194, 195, 204, 206, 209, 212, 238, 239, 240, 241, 242, 243, 244, 307], "accordingli": 13, "account": [17, 19, 20, 190], "accumul": [237, 238, 239, 263, 264, 268, 269, 270, 273], "accur": 83, "accuraci": [40, 41, 42, 43, 56, 57, 58, 86, 105], "achiev": [74, 75, 76, 77, 78, 79, 80, 105, 125, 126, 127, 150, 222, 223, 224, 243, 330, 332], "across": [0, 5, 6, 59, 107, 111, 114, 149, 150, 151, 152, 178, 179, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 253, 254, 256, 257, 258, 259, 260, 261, 276, 277, 295, 308], "act": 241, "activ": [10, 23, 52, 61, 62, 64, 68, 69, 81, 96, 103, 105, 110, 114, 116, 117, 119, 120, 121, 122, 123, 124, 130, 163, 164, 165, 169, 170, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 197, 198, 199, 200, 201, 208, 209, 212, 214, 215, 216, 220, 294, 296], "actual": [109, 208, 209, 211, 212, 262, 328], "ad": [25, 58, 63, 108, 110, 111, 112, 113, 114, 125, 126, 127, 137, 139, 140, 141, 146, 148, 149, 153, 154, 155, 157, 158, 159, 163, 164, 165, 193, 194, 195, 208, 209, 214, 215, 216, 217, 218, 219, 220, 225, 226, 227, 228, 229, 230, 238, 239, 240, 241, 242, 243, 244, 245, 252, 322, 335], "adadelta": 248, "adagrad": [238, 248], "adam": [105, 241, 242, 243, 244, 248], "adamax": 248, "adamw": 248, "adapt": [23, 44, 52, 82, 84, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 103, 105, 150, 151, 152, 169, 170, 222, 223, 224, 238, 239, 240, 243, 244, 245, 246], "adaptive_avg_pool1d": [136, 156, 222], "adaptive_avg_pool2d": [136, 156, 223], "adaptive_avg_pool3d": [136, 156, 224], "adaptiveavgpool1d": [203, 231], "adaptiveavgpool2d": [23, 81, 96, 103, 203, 231], "adaptiveavgpool3d": [203, 231], "add": [4, 108, 110, 111, 114, 137, 139, 193, 194, 195, 204, 206, 220, 235, 237, 240, 245, 247, 250, 283, 315, 322], "add_modul": [108, 114], "add_param_group": 235, "addit": [4, 10, 17, 24, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 100, 102, 104, 108, 111, 114, 137, 139, 146, 148, 204, 206, 214, 215, 216, 217, 218, 219, 237, 243, 250, 261, 263, 320], "addition": 243, "address": [209, 212, 240, 241, 244], "adjust": [49, 56, 58, 59, 87, 88, 89, 90, 91, 95, 150, 151, 152, 170, 197, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 236, 240, 244, 245, 246, 312, 323], "advanc": [3, 19, 31, 57, 68, 105, 111, 114, 125, 126, 127, 150, 151, 152, 222, 223, 224, 234, 237], "advantag": [50, 251], "affect": [249, 316, 319, 324], "affin": [163, 164, 165, 214, 215, 216, 217, 218, 219, 220, 331], "after": [17, 23, 61, 62, 103, 109, 110, 111, 112, 113, 114, 134, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 194, 195, 197, 198, 199, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 220, 225, 226, 227, 228, 229, 230, 241, 251, 262, 263, 264, 268, 269, 270, 272, 273, 315, 325], "afterward": 251, "aggreg": [105, 170, 271, 317, 321], "aim": [4, 10], "al": [45, 105], "alex": [5, 6, 105], "alexnet": [51, 103, 105], "algebra": [10, 11, 278], "algorithm": [7, 10, 17, 19, 20, 235, 236, 261], "align": [21, 161, 232, 266, 267], "align_corn": [161, 232], "all": [0, 3, 4, 10, 20, 30, 105, 108, 110, 111, 112, 113, 114, 126, 127, 150, 151, 152, 154, 155, 158, 159, 161, 164, 165, 170, 184, 185, 195, 222, 223, 224, 226, 227, 230, 234, 235, 236, 237, 240, 245, 246, 247, 272, 294, 295, 296, 303, 306, 308, 310, 311, 312, 317, 319, 320, 321, 323, 326, 327, 335], "allevi": [105, 116], "alloc": [276, 277], "allow": [0, 1, 3, 4, 10, 19, 20, 50, 52, 61, 62, 63, 74, 87, 88, 89, 90, 91, 95, 105, 109, 110, 111, 112, 113, 114, 116, 119, 120, 123, 127, 129, 162, 170, 180, 181, 184, 187, 188, 189, 191, 193, 194, 195, 232, 234, 238, 239, 250, 274, 279, 281, 282, 307, 309, 314, 324, 325, 335], "along": [123, 161, 170, 189, 266, 267, 271, 294, 295, 296, 303, 306, 308, 310, 312, 314, 317, 320, 321, 322, 323, 330, 332], "alongsid": 107, "alpha": [116, 119, 121, 130, 180, 187, 197, 237, 245], "alpha_dropout": [135, 136, 197], "alphadropout": [202, 203], "alphadropoutmodel": 197, "alreadi": 252, "also": [106, 116, 117, 119, 120, 121, 122, 124, 137, 139, 161, 243, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 277, 281, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 305, 310, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323], "alter": [114, 318], "altern": [1, 181, 238, 267], "alwai": [109, 316, 329, 330, 332], "among": [46, 170], "amount": [125, 126, 127, 153, 154, 155, 157, 158, 159, 166, 167, 168, 243], "amsgrad": [240, 241], "an": [0, 1, 3, 10, 14, 16, 17, 19, 20, 22, 24, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 52, 53, 54, 55, 57, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 102, 103, 104, 105, 106, 108, 110, 111, 112, 113, 114, 117, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 151, 152, 161, 162, 166, 167, 168, 170, 178, 179, 180, 186, 188, 193, 194, 195, 197, 198, 199, 200, 201, 204, 206, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 235, 236, 237, 240, 243, 245, 251, 252, 253, 262, 267, 275, 278, 288, 295, 303, 308, 310, 317, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335], "analog": [317, 321], "analysi": [4, 169, 193, 194, 195, 219, 225, 227, 228, 230], "andreetto": 105, "andrew": 105, "angl": [162, 331], "ani": [0, 1, 2, 3, 17, 19, 24, 63, 91, 102, 104, 107, 108, 109, 110, 112, 113, 116, 117, 119, 120, 121, 122, 124, 130, 131, 137, 139, 146, 148, 188, 220, 234, 235, 249, 251, 252, 259, 262, 274, 275, 276, 278, 279, 280, 281, 282, 294, 296, 307, 309, 310, 311, 312, 315, 317, 320, 321, 322, 323, 324, 335], "anoth": [113, 273, 280, 282, 325, 335], "api": [4, 222, 223, 224, 335], "appear": 235, "append": [111, 113, 114], "appli": [2, 4, 5, 6, 7, 8, 10, 17, 23, 30, 31, 74, 91, 101, 103, 105, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 127, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 144, 145, 163, 164, 165, 169, 170, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 197, 198, 199, 200, 201, 204, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 237, 238, 239, 241, 242, 243, 244, 267, 315, 317, 324, 327, 329, 330, 331, 332, 333, 335], "applic": [4, 19, 25, 49, 50, 56, 57, 58, 60, 61, 62, 105, 125, 148, 193, 194, 195, 204, 206, 261, 274, 281, 315, 333], "approach": [3, 48, 114, 241], "appropri": [19, 58, 61, 62, 105, 108, 112, 114, 193, 194, 195, 197, 198, 199, 209, 226, 227, 249, 251], "approx": 121, "approxim": [19, 117, 181, 182, 183, 226, 229], "ar": [1, 2, 3, 4, 10, 13, 14, 16, 17, 19, 20, 21, 22, 40, 41, 42, 43, 44, 45, 46, 105, 107, 108, 109, 110, 111, 112, 113, 114, 123, 125, 126, 127, 129, 137, 139, 151, 152, 161, 166, 167, 168, 169, 170, 174, 175, 177, 178, 179, 182, 189, 193, 194, 195, 197, 198, 199, 200, 201, 204, 206, 209, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 237, 240, 241, 243, 244, 245, 246, 247, 249, 251, 252, 253, 256, 257, 258, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 284, 288, 292, 294, 295, 296, 297, 298, 303, 306, 307, 310, 314, 317, 318, 321, 324, 325, 326, 328, 329, 333, 335], "arang": 283, "arbitrari": [111, 205, 276, 277, 288, 293, 295, 299, 301, 303, 307, 308], "arcco": 283, "arch": 252, "architectur": [24, 25, 26, 27, 28, 29, 30, 31, 44, 45, 46, 47, 48, 49, 50, 52, 56, 57, 58, 60, 61, 62, 63, 74, 75, 76, 77, 78, 79, 80, 81, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 104, 105, 106, 110, 111, 112, 113, 114, 117, 169, 182, 183, 185, 190, 204, 205, 234, 252], "arcsin": 283, "arctan": 283, "area": [161, 232], "arg": [108, 205, 252, 276], "argument": [3, 4, 24, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 100, 102, 104, 108, 114, 205, 256, 276, 307], "around": [14, 162, 191], "arr": [253, 310, 312, 320, 323], "arrai": [10, 107, 109, 250, 253, 262, 267, 275, 280, 282, 309, 316, 317, 325, 335], "art": 105, "artifici": 105, "arxiv": 105, "asarrai": 253, "asgd": 248, "aspect": 333, "assign": [108, 110, 112, 114, 161, 209, 212], "assist": [44, 45, 46], "associ": [112, 113], "assum": [0, 1, 235, 236, 249], "attempt": [110, 114], "attent": [91, 113, 137, 169], "attribut": 108, "audio": 193, "augment": [3, 4, 84, 162, 261, 317, 321, 324, 328, 329, 330, 331, 332, 335], "autodiff": 10, "autograd": 234, "automat": [4, 10, 109, 110, 111, 112, 113, 234, 254, 256, 257, 258, 260, 262, 276, 277, 282, 314, 325], "auxiliari": [44, 45, 46, 107], "avail": [4, 5, 6, 7, 8, 10], "averag": [23, 53, 54, 55, 63, 74, 81, 91, 96, 103, 107, 150, 151, 152, 153, 154, 155, 161, 169, 170, 211, 222, 223, 224, 225, 226, 227, 237, 238, 240, 245, 295], "avg_down": 63, "avg_pool": [225, 226, 227], "avg_pool1d": [136, 156], "avg_pool2d": [136, 156], "avg_pool3d": [136, 156], "avgpool": [23, 81, 96, 103, 170], "avgpool1d": [203, 231], "avgpool1dmodel": 225, "avgpool2d": [203, 231], "avgpool2dmodel": 226, "avgpool3d": [203, 231], "avgpool3dmodel": 227, "avoid": [2, 3, 19, 31, 112, 251], "ax": [11, 250, 294, 295, 296, 303, 307, 308, 317, 319, 321], "axi": [123, 189, 266, 267, 294, 295, 296, 303, 308, 310, 312, 314, 315, 317, 319, 320, 321, 322, 323, 330, 332], "b": [11, 21, 105, 137, 139, 177, 193, 194, 195, 204, 206, 250, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 310, 312, 320, 323, 329], "b0": [30, 32, 105], "b1": [30, 33, 105], "b2": [30, 34, 105], "b3": [30, 35, 105], "b4": [30, 36, 105], "b5": [30, 37, 105], "b6": [30, 38, 105], "b7": [30, 39, 105], "b_i": [268, 269, 272], "back": [161, 226, 227, 252, 266, 271, 317, 321], "backbon": [92, 93, 94], "backpropag": [10, 13, 14, 16, 17, 19, 20, 22, 105, 107, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 137, 139, 161, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 225, 226, 227, 228, 229, 230, 234, 251, 258, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 292, 294, 296, 309, 315, 317, 321, 325], "backward": [10, 107, 109, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 262, 325], "balanc": [31, 40, 41, 42, 43, 58, 75, 76, 77, 78, 79, 80, 105, 210], "bar": 237, "base": [3, 11, 16, 17, 20, 21, 25, 44, 45, 46, 47, 48, 49, 50, 52, 74, 75, 76, 77, 78, 79, 80, 91, 96, 101, 105, 108, 110, 111, 112, 113, 129, 137, 150, 151, 152, 170, 197, 209, 210, 222, 223, 224, 234, 235, 236, 237, 241, 245, 246, 247, 254, 263, 264, 268, 269, 270, 272, 273, 282, 292, 293, 294, 296, 307, 314, 315, 328, 329, 330, 331, 332], "base_width": [72, 73, 74, 91], "basic": [10, 23, 63, 75, 76, 77, 78, 79, 80, 92, 93, 94, 101, 103, 106, 125, 126, 127, 150, 151, 152, 163, 164, 165, 166, 167, 168, 169, 174, 175, 178, 179, 222, 223, 224, 326, 327, 328, 329, 330, 331, 332, 333], "basicblock": [63, 67, 70], "batch": [1, 2, 3, 11, 17, 20, 22, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 45, 46, 47, 49, 50, 81, 87, 88, 89, 90, 95, 125, 126, 127, 129, 132, 133, 134, 137, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 193, 194, 195, 204, 206, 208, 209, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 230, 244, 267, 326, 327, 328, 329, 331, 333], "batch_norm": [136, 147, 214, 215, 216], "batch_norm1": 114, "batch_norm2": 114, "batch_siz": [1, 2, 3, 101, 170], "batchnorm": [163, 164, 165], "batchnorm1d": [163, 203, 221], "batchnorm1dmodel": 214, "batchnorm2d": [114, 164, 203, 221], "batchnorm2dmodel": 215, "batchnorm3d": [165, 203, 221], "batchnorm3dmodel": 216, "bceloss": [203, 213], "becaus": [2, 257], "becom": [18, 108, 238, 246], "been": 190, "befor": [17, 81, 106, 109, 237, 243, 251, 259, 315, 327, 335], "begin": [1, 18, 116, 119, 120, 121, 180, 182, 183, 184, 185, 187, 210, 211, 212, 225, 226, 227, 228, 229, 230, 244, 246, 250, 261, 268, 269, 271, 284, 288, 294, 296, 298, 315], "behav": [210, 306], "behavior": [105, 111, 114, 249, 261, 267, 277, 335], "being": [113, 162, 197, 198, 199, 200, 201, 244, 249, 251, 310, 312, 323], "belong": 0, "below": [20, 45, 46, 47, 49, 50, 52, 53, 54, 55, 267, 275, 278], "benchmark": [5, 6, 7, 8], "benefici": 114, "benefit": [116, 234, 243, 253], "bernoulli": [197, 198, 199, 200, 201, 255], "best": [174, 175, 178, 179], "beta": [214, 215, 216, 217, 218, 219, 220, 240, 241, 242, 243, 244], "beta1": [240, 241, 242, 243, 244], "beta2": [240, 241, 242, 243, 244], "beta_1": [240, 241, 242, 243, 244], "beta_2": [240, 241, 242, 243, 244], "better": [16, 103, 105, 117, 174, 175, 178, 179, 190, 217, 218, 219, 234, 241, 243, 245, 327], "between": [40, 41, 42, 43, 75, 76, 77, 78, 79, 80, 105, 108, 125, 126, 127, 129, 137, 142, 163, 164, 165, 166, 167, 168, 170, 186, 193, 194, 195, 197, 198, 199, 200, 201, 204, 208, 209, 210, 211, 212, 237, 245, 246, 247, 261, 263, 264, 267, 270, 273, 274, 308, 329, 330, 332, 333], "beyond": [10, 111], "bia": [125, 126, 127, 137, 139, 146, 148, 149, 163, 164, 165, 166, 167, 168, 193, 194, 195, 204, 206, 214, 215, 216, 217, 218, 219, 220, 240, 241, 242, 243, 244], "bias": [193, 194, 195, 206, 220, 234], "bias1": 112, "bias2": 112, "big": [166, 167, 168], "bilinear": [136, 138, 161, 203, 207, 232], "bilinearmodel": 204, "binari": [122, 140, 188, 197, 198, 199, 200, 201, 208], "binary_cross_entropi": [136, 143], "block": [25, 26, 27, 28, 29, 30, 31, 48, 57, 58, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 105, 108, 129, 163, 164, 165, 170, 193, 194, 195, 251], "block1": [106, 234], "block2": [106, 234], "block_arg": [63, 81], "block_cfg": 31, "block_config": 25, "blue": 329, "bmatrix": 271, "bn": [163, 164, 165], "bn_affin": [163, 164, 165], "bool": [1, 5, 6, 7, 8, 22, 30, 44, 45, 46, 63, 106, 108, 109, 130, 131, 132, 133, 134, 146, 148, 161, 163, 164, 165, 166, 167, 168, 193, 194, 195, 204, 206, 214, 215, 216, 217, 218, 219, 220, 232, 240, 241, 245, 249, 254, 256, 257, 258, 260, 262, 274, 275, 276, 277, 278, 279, 280, 281, 282, 294, 295, 296, 303, 308, 309, 325], "both": [125, 139, 151, 153, 157, 163, 181, 190, 193, 194, 223, 225, 226, 228, 229, 232, 265, 266, 267, 271, 275, 314, 333], "bottleneck": [25, 57, 58, 60, 63, 64, 65, 66, 68, 69, 71, 72, 73, 74, 105, 169], "bottleneck_cfg": 58, "bottom": 161, "bound": [175, 177, 179, 246, 260], "box": 4, "branch": [44, 45, 46, 105, 170], "break": 234, "brief": 335, "bright": 335, "broadcast": [200, 201, 295, 303, 308, 318, 322], "buffer": [237, 243, 245, 247], "build": [10, 31, 50, 58, 63, 64, 65, 66, 67, 68, 69, 70, 71, 74, 91, 92, 93, 94, 105, 108, 111, 114, 234, 335], "built": [3, 10, 64, 68, 69, 114, 234], "burg": 8, "c": [5, 6, 8, 63, 75, 76, 77, 78, 79, 80, 92, 93, 94, 105, 129, 132, 133, 134, 141, 145, 146, 148, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 169, 200, 201, 209, 212, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 250, 312, 323, 327], "c_": [193, 194, 195], "c_in": [125, 126, 127, 163, 164, 165], "c_out": [125, 126, 127], "calcul": [0, 1, 10, 11, 109, 232, 238, 239, 242, 243, 244, 251, 257, 262], "calculu": [12, 19], "call": [1, 108, 249, 252, 263, 264, 267, 268, 269, 270, 272, 273], "callabl": [235, 252, 324], "can": [0, 2, 3, 4, 10, 12, 14, 16, 17, 19, 20, 22, 30, 58, 63, 72, 73, 87, 88, 89, 90, 101, 102, 105, 106, 107, 109, 110, 111, 112, 113, 114, 119, 125, 126, 127, 162, 170, 181, 184, 186, 191, 193, 194, 195, 217, 218, 219, 226, 227, 228, 229, 230, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 250, 251, 253, 260, 261, 262, 267, 276, 277, 278, 279, 281, 282, 295, 303, 308, 312, 314, 315, 317, 318, 321, 322, 323, 324, 325, 328, 330, 331, 332, 335], "cannot": [13, 14, 16, 17, 20, 21, 22, 254], "cap": 186, "capabl": [10, 274, 275, 278, 279, 280, 281, 282], "capac": [56, 72, 73, 74, 75, 76, 77, 78, 79, 80, 87, 88, 89, 90, 95, 105], "captur": [91, 105, 129, 193, 194, 195, 204], "cardin": [74, 75, 76, 77, 78, 79, 80, 91, 105], "care": 251, "cartesian": 314, "case": [3, 18, 52, 58, 59, 116, 119, 120, 121, 180, 182, 183, 184, 185, 187, 210, 211, 212, 225, 226, 227, 228, 229, 230, 234, 239, 244, 246, 250, 268, 269, 284, 288, 294, 296, 298, 315, 335], "categori": [7, 64, 65, 66, 67, 68, 69, 70, 71], "caus": [3, 19, 237, 245, 247], "cautiou": 0, "cdot": [12, 13, 16, 17, 18, 21, 116, 117, 119, 121, 122, 125, 126, 127, 137, 139, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 169, 178, 179, 181, 182, 183, 188, 190, 197, 204, 206, 208, 209, 210, 212, 214, 215, 216, 217, 218, 219, 220, 238, 239, 240, 241, 242, 243, 244, 246, 265, 266, 267, 270, 272], "center": [162, 191, 245, 326, 335], "centercrop": [334, 335], "central": 253, "certain": [13, 117, 137, 190, 204, 240, 241, 249, 294, 296], "cfg": [61, 62], "chain": [16, 17, 114, 324, 335], "challeng": [7, 105], "cham": 105, "chanc": [329, 330, 332], "chang": [142, 210, 246, 250, 251, 252, 316, 318, 322, 329, 335], "channel": [25, 30, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 74, 75, 76, 77, 78, 79, 80, 85, 87, 88, 89, 90, 95, 96, 101, 105, 125, 126, 127, 129, 132, 133, 134, 146, 148, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 193, 194, 195, 200, 201, 214, 215, 216, 217, 218, 219, 222, 225, 226, 227, 228, 229, 230, 327, 329, 333], "character": [72, 73], "check": [249, 326, 328], "checkpoint": 236, "chen": 105, "choic": 314, "choleski": 15, "chollet": 105, "choos": 105, "chosen": 197, "christian": 105, "christoph": 8, "chu": 105, "cifar": [5, 6], "cifar10": 9, "cifar100": 9, "cifar100_train": 6, "cifar10_train": 5, "clariti": 253, "class": [3, 4, 10, 24, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 53, 54, 55, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 100, 102, 104, 106, 123, 141, 145, 234, 236, 252, 275, 278, 309, 335], "classic": 55, "classif": [4, 5, 6, 7, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 122, 123, 140, 141, 145, 188, 189, 208, 209, 212], "classifi": [23, 44, 45, 46, 52, 53, 54, 55, 63, 74, 91, 96, 101, 103], "cleaner": [1, 251, 267], "clear": [109, 262, 276, 277], "clearli": 253, "clf_in_featur": 52, "clf_layer": 52, "clip": [162, 182, 186, 246, 283], "clockwis": 162, "close": [16, 19, 187, 208, 245], "closer": 180, "closur": [235, 236], "cloth": 7, "cnn": 105, "co": [283, 299], "code": [17, 110, 112, 114, 249, 251, 253, 261], "coeffici": [21, 30, 161, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247], "col": 129, "collect": [4, 11, 105, 110, 111, 113, 114, 236], "color": [329, 335], "colorjitt": 335, "column": [13, 14, 16, 20, 21, 22, 106, 129, 278, 312, 314], "com": [7, 8], "combin": [1, 3, 47, 48, 49, 95, 105, 111, 114, 116, 117, 163, 164, 165, 169, 170, 181, 209, 234, 243, 244, 295, 303, 308, 310, 335], "combined_dataset": [0, 1], "common": [129, 162, 236, 335], "commonli": [10, 56, 57, 58, 59, 60, 61, 62, 117, 122, 123, 124, 125, 127, 137, 144, 146, 148, 162, 169, 178, 179, 182, 183, 186, 189, 195, 208, 211, 212, 225, 226, 227, 228, 229, 230, 250, 253, 279, 319, 325, 326, 327, 328, 330, 331, 332, 335], "compar": [72, 73, 103, 105, 261, 320], "compat": [4, 11, 91, 205, 220, 234, 250, 261, 325, 335], "complex": [2, 3, 10, 14, 50, 63, 66, 69, 70, 83, 85, 106, 110, 111, 114, 120, 185, 228, 230, 234, 236, 335], "compon": [19, 44, 45, 46, 47, 48, 49, 50, 108, 111, 236, 262, 335], "compos": [5, 6, 7, 8, 101, 193, 194, 195, 225, 226, 227, 228, 229, 230, 234, 335], "compound": 31, "comprehens": 3, "compris": [72, 73], "comput": [10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 56, 58, 61, 62, 63, 74, 75, 76, 77, 78, 79, 80, 81, 87, 88, 89, 90, 95, 105, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 129, 137, 139, 140, 141, 142, 144, 145, 146, 148, 150, 151, 152, 161, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 225, 226, 227, 228, 229, 230, 234, 235, 236, 237, 245, 249, 250, 251, 253, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 284, 285, 286, 287, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 314, 315, 317, 321, 325, 335], "computation": [3, 19, 64, 182, 183], "compute_loss": [236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "concaten": [0, 125, 126, 127, 312, 313, 320, 323], "concept": [10, 19, 57, 105], "condit": [12, 13, 16], "confer": 105, "config": 96, "configur": [24, 25, 26, 27, 28, 29, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 58, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 102, 104, 113, 163, 164, 165], "conjunct": [129, 212], "connect": [23, 25, 26, 27, 28, 29, 30, 31, 47, 48, 49, 50, 52, 53, 54, 55, 63, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 93, 94, 96, 101, 103, 105, 139, 169, 170, 193, 194, 195, 206], "consecut": 96, "consid": [3, 16, 19, 25, 114, 174, 175, 178, 179, 234, 246, 249, 276, 277, 335], "consider": 19, "consist": [2, 4, 7, 23, 53, 54, 55, 63, 107, 150, 151, 152, 170, 222, 223, 224, 253, 259, 261, 315, 326, 333, 335], "consistent_tensor": 261, "consol": 106, "constant": [140, 141, 146, 148, 149, 173, 187, 208, 209, 214, 215, 216, 217, 218, 219, 220, 238, 239, 240, 241, 242, 243, 244, 245, 253, 315], "constant_pad": 315, "constraint": [1, 56, 58, 170], "construct": [10, 26, 27, 28, 29, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 92, 93, 94, 97, 98, 99, 100, 111, 234, 275, 317, 321], "constructor": [26, 27, 28, 29, 40, 41, 42, 43, 59, 60, 61, 62, 72, 73, 87, 88, 89, 90, 95, 97, 98, 99, 100], "contain": [1, 5, 6, 7, 8, 13, 14, 19, 20, 21, 22, 48, 52, 63, 74, 75, 76, 77, 78, 79, 80, 81, 91, 96, 106, 108, 110, 111, 112, 113, 114, 123, 129, 137, 139, 140, 141, 145, 161, 208, 209, 212, 235, 263, 264, 265, 266, 268, 269, 270, 271, 273, 274, 277, 284, 285, 286, 287, 289, 290, 291, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 311, 314], "content": 162, "context": [249, 251], "contextmanag": 251, "contigu": 316, "continu": [184, 258], "contrast": [217, 218, 219, 335], "contribut": [161, 197, 198, 199, 200, 201, 225, 228, 229, 230, 237, 243, 306], "control": [74, 170, 180, 210, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 261, 325, 335], "conv": [48, 81, 163, 164, 165, 215, 216], "conv1": [53, 54, 55, 114, 193, 194, 195, 225, 226, 227, 228, 229, 230], "conv1d": [128, 136, 163, 166, 196, 203, 225, 228], "conv1dmodel": 193, "conv2": [53, 54, 55, 114, 193, 194, 195], "conv2d": [111, 114, 128, 136, 164, 167, 196, 203, 215, 226, 229, 234], "conv2dmodel": 194, "conv3d": [128, 136, 165, 168, 196, 203, 216, 227, 230], "conv3dmodel": 195, "conv_bia": [163, 164, 165], "conv_config": 96, "conv_lay": [52, 111], "convblock": 234, "convbnrelu1d": 171, "convbnrelu2d": 171, "convbnrelu3d": 171, "conveni": [4, 24, 104], "convent": 267, "converg": [19, 191, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 327], "convers": [209, 212, 329, 335], "convert": [5, 6, 7, 8, 96, 107, 109, 123, 189, 262, 314, 324, 325, 329, 335], "convnetwork": 111, "convolut": [23, 24, 25, 30, 32, 33, 34, 35, 36, 37, 38, 39, 45, 46, 48, 52, 53, 54, 55, 56, 58, 61, 62, 63, 74, 75, 76, 77, 78, 79, 80, 81, 87, 88, 89, 90, 91, 95, 96, 101, 103, 104, 105, 111, 125, 126, 127, 129, 163, 164, 165, 166, 167, 168, 169, 170, 193, 194, 195, 226, 227, 229, 230, 315], "convolv": [125, 126, 127, 193, 194, 195], "coordin": 314, "core": [0, 1, 2, 3, 108, 234, 235, 262, 335], "corinna": 8, "corner": [161, 232, 326, 328], "correct": [110, 209, 212, 240, 241, 242, 243, 244, 325], "correctli": [19, 108, 110, 111, 112, 113, 114, 209, 212, 261], "correspond": [0, 1, 2, 5, 6, 7, 8, 14, 59, 61, 62, 72, 73, 92, 93, 94, 110, 112, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 137, 139, 161, 182, 185, 189, 204, 206, 214, 215, 216, 217, 218, 219, 226, 227, 237, 245, 247, 254, 265, 266, 268, 269, 272, 292, 293, 299, 301, 312, 315, 317, 321, 323], "cort": 8, "cosh": [283, 300, 305], "cosin": [285, 289, 290, 299], "cost": [56, 58, 74, 105, 166, 167, 168], "could": 108, "count": [105, 106, 310], "counterclockwis": [162, 331], "cover": [11, 125, 126, 127], "coverag": [150, 151, 152], "creat": [2, 3, 10, 23, 24, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 53, 54, 55, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 111, 114, 170, 186, 234, 250, 252, 261, 274, 278, 279, 280, 281, 282, 314, 320, 324, 335], "creation": [40, 41, 42, 43, 111, 114, 335], "criterion": [208, 209, 210, 211, 212], "critic": [19, 236, 261], "crop": [326, 328, 335], "cross": [140, 141, 208, 209], "cross_entropi": [136, 143], "crossentropyloss": [203, 213], "cube": 283, "cumul": [117, 181], "current": [108, 237, 240, 246, 249], "custom": [4, 10, 23, 24, 25, 32, 33, 34, 35, 36, 37, 38, 39, 49, 50, 52, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 96, 102, 103, 104, 107, 110, 111, 112, 113, 114, 162, 163, 164, 165, 180, 184, 234, 261, 278], "custom_config": 96, "custom_lenet": 52, "customiz": 335, "custommodul": 107, "customnetwork": 110, "customparametermodel": [112, 113], "cvpr": 105, "d": [105, 127, 134, 152, 155, 159, 165, 216, 219, 220, 224, 227, 230, 250, 275, 331], "d_": [127, 152, 155, 159, 195, 224, 227, 230], "d_1": 220, "d_2": 220, "d_n": 220, "d_out": [127, 155, 159], "dampen": [237, 245, 247], "data": [4, 5, 6, 7, 8, 10, 17, 107, 109, 113, 124, 125, 127, 129, 133, 134, 139, 162, 163, 164, 165, 170, 185, 191, 193, 194, 195, 206, 219, 225, 227, 230, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 253, 261, 262, 263, 264, 270, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 309, 315, 316, 317, 318, 319, 321, 324, 325, 328, 329, 330, 331, 332, 335], "databas": 8, "dataload": [2, 3], "dataset": [3, 5, 6, 7, 8, 40, 41, 42, 43, 53, 54, 55, 56, 63, 64, 65, 66, 67, 68, 69, 70, 71, 162, 239, 251, 324, 326, 335], "dataset1": [0, 1], "dataset2": [0, 1], "ddot": 271, "debug": [106, 114, 249, 259, 335], "decai": [237, 238, 239, 240, 241, 242, 243, 244, 245, 247], "decompos": [12, 20, 22], "decomposit": [11, 12, 16, 19, 20, 22], "decor": [75, 76, 77, 78, 79, 80, 252], "decoupl": [105, 238, 239, 241, 242, 243, 244], "decreas": [240, 241, 246], "deep": [1, 3, 4, 10, 48, 63, 64, 65, 66, 68, 69, 75, 76, 77, 78, 79, 80, 82, 83, 86, 105, 146, 181, 187, 234, 261, 324, 325, 335], "deeper": [10, 45, 47, 50, 63, 70, 105, 187], "def": [0, 1, 2, 3, 10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 204, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 253, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325], "default": [1, 5, 6, 7, 8, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 116, 119, 123, 125, 126, 127, 130, 131, 132, 133, 134, 140, 141, 142, 144, 145, 146, 148, 149, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 179, 180, 184, 189, 193, 194, 195, 197, 198, 199, 200, 201, 204, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 225, 226, 227, 228, 229, 230, 232, 235, 236, 243, 249, 254, 256, 257, 258, 260, 262, 274, 275, 276, 277, 278, 279, 280, 281, 282, 294, 295, 296, 303, 307, 308, 309, 310, 312, 314, 315, 317, 320, 323, 325, 329, 330, 332], "defin": [1, 3, 4, 10, 25, 31, 44, 45, 46, 47, 48, 49, 50, 52, 58, 63, 81, 92, 93, 94, 96, 110, 111, 112, 113, 114, 181, 183, 186, 190, 208, 209, 210, 211, 212, 225, 232, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 253, 257, 258, 272, 277, 288, 307, 324, 335], "definit": [10, 12, 163, 164, 165, 335], "degre": [162, 331, 335], "delai": 237, "delta": [123, 142, 189, 210, 238], "delta_": [123, 189], "demonstr": [10, 11, 87, 88, 89, 90, 95, 105, 234, 253], "denomin": [146, 148, 149, 163, 164, 165, 214, 215, 216, 217, 218, 219, 220, 238, 239, 240, 241, 242, 243, 244, 245, 264], "denot": [17, 188, 193, 194, 195, 197, 198, 199, 200, 201, 307], "dens": [10, 25, 26, 27, 28, 29, 105, 239], "dense1": 10, "dense2": 10, "densenet": [26, 27, 28, 29, 51, 105, 169], "densenet_121": 105, "densenet_169": 105, "densenet_201": 105, "densenet_264": 105, "densiti": [117, 181], "depend": [10, 17, 18, 58, 113, 140, 141, 142, 144, 145, 161, 193, 265, 275, 294, 296, 317, 321, 328, 329, 333], "depth": [30, 31, 105, 111, 127, 134, 152, 155, 159, 195, 216, 219, 224, 227, 230], "depth_coef": 30, "depthseparableconv1d": 171, "depthseparableconv2d": 171, "depthseparableconv3d": 171, "depthwis": [56, 101, 105, 125, 126, 127, 166, 167, 168], "depthwise_separ": [166, 167, 168], "der": 105, "deriv": [19, 20, 123, 150, 151, 152, 181, 189, 191, 193, 194, 195, 204, 206, 252], "descend": 22, "descent": [10, 237, 247], "describ": [13, 14], "descript": 335, "deseri": 107, "design": [3, 4, 10, 11, 23, 24, 40, 41, 42, 43, 45, 46, 47, 53, 54, 55, 58, 64, 65, 66, 67, 68, 69, 70, 71, 82, 85, 101, 104, 105, 109, 111, 112, 113, 114, 116, 121, 187, 197, 234, 253, 335], "desir": [102, 107, 150, 151, 152, 222, 223, 224, 232, 307, 309], "destin": 108, "det": [11, 15], "det_a": 13, "detail": [10, 106, 236, 261, 267], "detect": 105, "determin": [0, 10, 11, 12, 13, 52, 72, 73, 150, 151, 152, 174, 175, 178, 179, 193, 194, 195, 222, 223, 224, 226, 227, 229, 230, 245, 249, 254, 256, 257, 258, 260, 276, 277, 326, 328], "determinist": 162, "develop": [10, 234, 261, 335], "deviat": [174, 176, 178, 324, 327, 335], "devic": [57, 58], "diag": [19, 283], "diagon": [19, 20, 22, 275, 278, 306], "diagonaliz": 14, "dict": [24, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 52, 59, 60, 61, 62, 63, 72, 73, 75, 76, 77, 78, 79, 80, 81, 87, 88, 89, 90, 92, 93, 94, 95, 102, 104, 108, 110, 112, 205, 235], "dictionari": [52, 108, 109, 110, 112, 114, 235], "differ": [0, 17, 44, 52, 58, 87, 88, 89, 90, 95, 111, 114, 123, 137, 161, 170, 189, 204, 211, 236, 250, 259, 261, 273, 282, 308, 319, 335], "differenti": [10, 12, 21, 181, 234, 254, 256, 257, 258, 260, 262, 274, 276, 277, 279, 281], "digit": [7, 8, 55, 105], "dilat": [125, 126, 127, 163, 164, 165, 166, 167, 168, 193, 194, 195], "dilation_height": 129, "dilation_width": 129, "dim": [209, 212], "dimens": [13, 14, 16, 17, 20, 21, 22, 23, 63, 74, 91, 96, 103, 105, 109, 123, 137, 139, 146, 148, 149, 151, 152, 161, 169, 170, 189, 193, 194, 195, 214, 215, 216, 217, 218, 219, 220, 223, 224, 226, 227, 228, 229, 230, 232, 250, 253, 256, 260, 262, 266, 276, 294, 295, 296, 303, 306, 307, 308, 310, 312, 315, 317, 319, 320, 321, 322, 323, 326, 328, 333], "dimension": [17, 19, 20, 22, 125, 126, 127, 153, 154, 155, 157, 158, 159, 170, 193, 194, 195, 199, 200, 201, 214, 215, 216, 217, 218, 219, 225, 226, 227, 228, 229, 230, 250, 266, 267, 271, 275, 292, 295, 303, 306, 308, 311, 316, 317, 319, 321], "diminish": 239, "direct": [14, 208, 209, 210, 211, 212, 237, 245, 246, 247], "directli": [40, 41, 42, 43, 105, 110, 111, 112, 113, 161, 232, 238, 239, 241, 242, 243, 244, 259, 261, 309, 335], "directori": [3, 4, 5, 6, 7, 8], "disabl": [249, 251], "discontinu": 298, "discrep": [208, 209, 212], "discret": [254, 257, 261], "disk": 3, "displai": [24, 104, 106], "distribut": [117, 123, 161, 174, 175, 176, 177, 178, 179, 181, 189, 193, 194, 195, 197, 198, 199, 200, 201, 204, 206, 209, 212, 225, 226, 227, 254, 256, 257, 258, 260, 261, 295, 303, 306, 308, 320, 327, 329, 330, 331, 332], "div": 283, "divers": [162, 330, 332, 335], "diversifi": 335, "divid": [1, 19, 111, 114, 123, 125, 126, 127, 189, 208, 209, 210, 211, 212, 264, 327], "divis": [10, 19, 125, 126, 127, 197, 198, 199, 200, 201, 238, 239, 240, 241, 242, 243, 244, 245, 264], "do": [19, 21, 107, 110, 111, 112, 113, 130, 131, 132, 133, 234, 244, 249, 282, 306, 315], "document": [4, 10, 105, 236, 253, 261], "doe": [10, 17, 18, 19, 20, 22, 106, 107, 110, 111, 112, 113, 114, 179, 240, 241, 246, 249, 251, 254, 256, 257, 258, 259, 260, 274, 275, 276, 277, 278, 279, 280, 281, 282, 318], "doesn": 251, "doi": 105, "domain": 4, "don": 251, "dot": [14, 17, 110, 111, 112, 113, 114, 220, 228, 229, 230, 266, 271, 283, 310, 312, 320, 323], "down": [3, 234, 333], "download": [4, 5, 6, 7, 8], "drawback": 116, "drawn": [256, 257, 258, 260, 261, 331], "drop": [197, 198, 199, 200, 201], "drop_path_r": 31, "dropout": [23, 30, 31, 40, 41, 42, 43, 46, 96, 103, 105, 117, 130, 132, 133, 134, 197, 199, 200, 201], "dropout1d": [135, 136, 202, 203], "dropout1dmodel": 199, "dropout2d": [135, 136, 202, 203], "dropout3d": [135, 136, 202, 203], "dropout_prob": 46, "dropoutmodel": 198, "dtype": [107, 109, 262, 274, 275, 276, 277, 278, 279, 280, 281, 282, 309, 325], "due": [17, 19, 25, 125, 126, 185, 331], "dummi": 106, "duplic": [110, 112], "dure": [3, 10, 13, 14, 16, 19, 20, 22, 31, 44, 45, 46, 63, 105, 107, 108, 109, 110, 111, 112, 113, 114, 123, 130, 131, 132, 133, 134, 146, 148, 162, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 225, 226, 227, 228, 229, 230, 232, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 249, 251, 262, 263, 294, 295, 296, 303, 308, 325, 328, 331, 335], "dy": [119, 184], "dynam": [0, 2, 3, 91, 95, 105, 108, 111, 112, 113, 114, 150, 151, 152, 170, 220, 222, 223, 224, 239, 244, 249], "dynamicnetwork": 111, "e": [0, 13, 14, 16, 17, 20, 22, 30, 32, 33, 34, 35, 36, 37, 38, 39, 45, 46, 47, 49, 50, 52, 53, 54, 55, 96, 107, 123, 170, 188, 189, 190, 197, 209, 235, 238, 245, 246, 278, 290, 292, 293, 300, 305, 306, 310, 329], "each": [1, 2, 3, 4, 14, 17, 19, 20, 22, 23, 25, 31, 52, 56, 58, 59, 61, 62, 63, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 93, 94, 96, 103, 105, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 137, 139, 146, 148, 150, 151, 152, 169, 170, 182, 185, 189, 193, 194, 195, 197, 198, 199, 200, 201, 204, 206, 208, 209, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234, 238, 239, 240, 241, 242, 243, 244, 245, 246, 254, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 295, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 310, 312, 314, 315, 317, 320, 321, 323, 324, 325, 326, 327, 328, 329, 331, 333, 335], "earli": 244, "eas": [4, 10], "easi": [2, 3, 4, 10, 75, 76, 77, 78, 79, 80, 109, 110, 112], "easier": [3, 110, 111, 114], "easili": [4, 109, 113, 335], "eccv": 105, "economi": 22, "edg": [58, 315], "edu": [5, 6], "educ": [10, 105], "effect": [105, 110, 111, 112, 113, 114, 123, 125, 126, 127, 129, 180, 181, 185, 188, 189, 191, 214, 215, 216, 217, 218, 219, 220, 232, 249, 250, 251, 312, 323], "effici": [1, 2, 3, 5, 6, 7, 8, 10, 11, 16, 21, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 49, 50, 57, 58, 60, 61, 62, 74, 75, 76, 77, 78, 79, 80, 87, 88, 89, 90, 95, 101, 105, 129, 166, 167, 168, 182, 183, 186, 209, 234, 251], "efficientnet": [31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 51, 105], "efficientnet_b0": 105, "efficientnet_b1": 105, "efficientnet_b2": 105, "efficientnet_b3": 105, "efficientnet_b4": 105, "efficientnet_b5": 105, "efficientnet_b6": 105, "efficientnet_b7": 105, "efficientnet_v2": [40, 41, 42, 43], "efficientnet_v2_": 105, "efficientnet_v2_l": 105, "efficientnet_v2_m": 105, "efficientnet_v2_xl": 105, "efficientnetv2": 105, "eig": 15, "eigenvalu": [14, 20], "eigenvector": 14, "eigval": 14, "eigvec": 14, "either": [139, 232, 253, 254, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 309, 314], "element": [0, 19, 20, 46, 109, 113, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 163, 164, 165, 166, 167, 168, 169, 182, 183, 185, 189, 190, 193, 194, 195, 197, 198, 199, 200, 201, 208, 209, 210, 211, 212, 220, 225, 226, 227, 228, 229, 230, 250, 254, 262, 263, 264, 267, 268, 269, 270, 271, 272, 273, 274, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 308, 311, 314, 315, 317, 318, 319, 321], "elementwise_affin": 220, "elsewher": [228, 229, 230, 278], "elu": [118, 136, 192, 203], "elumodel": 180, "embed": [56, 57, 58, 60, 61, 62], "emploi": 31, "empti": [108, 114, 283], "empty_lik": 283, "enabl": [0, 1, 2, 3, 10, 17, 22, 30, 49, 91, 92, 93, 94, 105, 108, 109, 110, 111, 112, 113, 185, 193, 194, 195, 204, 206, 234, 236, 249, 251, 254, 256, 257, 258, 260, 262, 324], "encapsul": [234, 262], "encod": [209, 212], "encompass": 30, "encourag": [198, 199, 200, 201, 208, 209, 212, 240], "end": [18, 116, 119, 120, 121, 180, 182, 183, 184, 185, 187, 210, 211, 212, 225, 226, 227, 228, 229, 230, 244, 246, 268, 269, 271, 274, 284, 288, 294, 296, 298, 310, 315, 335], "enforc": [108, 110, 112], "engin": 19, "enhanc": [46, 47, 49, 50, 54, 57, 72, 73, 87, 88, 89, 90, 95, 103, 104, 105, 110, 112, 170, 186, 335], "ensur": [3, 5, 6, 7, 8, 19, 20, 21, 31, 40, 41, 42, 43, 107, 108, 109, 110, 111, 112, 113, 114, 123, 150, 151, 152, 163, 164, 165, 184, 189, 197, 198, 199, 200, 201, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 226, 227, 228, 229, 230, 234, 235, 237, 238, 240, 241, 243, 244, 245, 246, 247, 249, 250, 251, 253, 254, 256, 257, 258, 259, 260, 261, 272, 295, 303, 308, 315, 325, 326, 327, 328, 329, 333, 335], "enter": 251, "entir": [3, 132, 133, 134, 200, 201, 261], "entri": [31, 52, 61, 62, 319], "entropi": [140, 141, 208, 209], "environ": [10, 61, 62], "ep": [140, 141, 146, 148, 149, 163, 164, 165, 208, 209, 214, 215, 216, 217, 218, 219, 220, 238, 239, 240, 241, 242, 243, 244, 245], "epoch": [1, 3], "epsilon": [208, 209, 214, 215, 216, 217, 218, 219, 220, 238, 239, 240, 241, 242, 243, 244, 245], "equal": [17, 161, 225, 226, 227, 326, 328], "equat": [14, 19, 21], "equival": [267, 306, 316], "error": [0, 3, 14, 16, 31, 108, 111, 112, 113, 114, 117, 142, 144, 181, 208, 209, 210, 211, 234, 235, 251, 253], "especi": [3, 110, 112, 113, 188, 250, 251, 253, 259, 324, 325, 329, 335], "essenti": [1, 3, 10, 11, 17, 19, 48, 126, 129, 234, 259, 261, 294, 324, 325, 329, 335], "estim": [211, 240, 241, 242, 243, 244, 245], "et": [45, 105], "eta": 246, "eta_": 246, "etc": [25, 31, 208, 232, 325], "euclidean": 18, "european": 105, "evalu": [108, 146, 148, 197, 198, 199, 200, 201, 214, 215, 216, 217, 218, 219, 335], "even": [238, 251, 274, 275, 278, 279, 280, 281, 282], "evenli": [150, 151, 152, 222, 223, 224, 274], "everi": [1, 335], "everywher": 298, "exact": [108, 111, 307, 329, 331], "exactli": 114, "exampl": [4, 267], "excel": 47, "except": [0, 298, 310, 312, 323], "excit": [30, 58, 61, 62, 81, 84, 87, 88, 89, 90, 105, 169], "exclus": [257, 260, 274], "exdb": 8, "execut": [111, 251], "exist": [21, 110, 112, 114, 252, 310], "exit": 251, "exp": [116, 121, 122, 124, 180, 187, 283], "expand": [4, 129, 317, 321], "expans": [61, 62], "expansion_factor": 58, "expect": [12, 111, 114, 197, 198, 199, 200, 201, 220, 234, 253], "expens": 3, "experi": [10, 259, 261, 335], "experiment": 261, "explan": [17, 19, 23, 96, 103, 150, 151, 152, 222, 223, 224, 237], "explicit": 114, "explicitli": [105, 110, 112], "explod": [187, 214, 215, 216], "explor": [234, 261], "expon": [17, 272], "exponenti": [116, 121, 123, 180, 187, 189, 197, 240, 241, 242, 243, 244, 292], "extend": [4, 74, 91], "extens": [105, 236], "extern": [4, 10], "extra": 43, "extract": [44, 48, 63, 74, 91, 101, 105, 129, 195, 225, 227, 252, 275, 294, 296, 326, 328], "extractor": [52, 53, 54, 55, 101], "extrem": [19, 64, 105], "ey": 283, "f": [1, 4, 5, 6, 7, 8, 10, 105, 112, 113, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 186, 189], "f_1": 169, "f_2": 169, "facilit": [44, 110, 114, 123, 189, 193, 194, 195, 234, 236, 327, 335], "factor": [30, 46, 116, 125, 126, 127, 129, 169, 178, 179, 232, 237, 244, 245, 246, 247, 253], "factori": 102, "failur": [110, 111, 112, 113, 234], "fals": [1, 5, 6, 7, 8, 22, 30, 61, 62, 63, 106, 107, 108, 109, 130, 131, 132, 133, 134, 146, 148, 161, 172, 174, 175, 176, 177, 178, 179, 193, 194, 195, 204, 206, 232, 240, 241, 245, 249, 254, 256, 257, 258, 260, 262, 274, 275, 276, 277, 278, 279, 280, 281, 282, 294, 295, 296, 303, 308, 309, 325], "famili": [105, 252], "fan": [174, 175, 178, 179], "fan_in": [174, 175], "fan_out": [174, 175], "fashion": 7, "fashion_train": 7, "fashionmnist": 9, "fast": 244, "faster": [105, 239, 243, 251], "fc": [48, 63, 74, 81, 91, 111, 169, 194, 195, 225, 226, 227, 228, 229, 230], "fc1": [54, 55, 106, 110, 114, 181, 182, 183, 185, 186, 187, 188, 190, 191, 206], "fc2": [54, 55, 106, 110, 114, 181, 182, 183, 185, 187, 188, 190, 191, 206], "fc3": 55, "featur": [3, 23, 25, 44, 47, 48, 52, 53, 54, 55, 63, 74, 75, 76, 77, 78, 79, 80, 82, 84, 85, 91, 92, 93, 94, 96, 101, 103, 104, 105, 137, 139, 146, 163, 164, 165, 169, 170, 195, 198, 199, 200, 201, 204, 206, 214, 215, 216, 217, 218, 219, 220, 225, 226, 227, 228, 229, 230, 234, 239], "feature_extractor": 52, "fed": [3, 335], "feed": [3, 262, 335], "feedforward": 106, "fergu": [103, 105], "fetch": 0, "few": 106, "fewer": [1, 105], "field": [5, 6, 8, 91, 95, 105, 170], "file": [3, 252], "fill": [172, 176, 177, 256, 257, 258, 260, 279, 280, 281, 282], "filter": [31, 103, 105, 125, 126, 127, 129, 163, 164, 165, 194, 195], "filter_height": 129, "filter_s": 129, "filter_width": 129, "final": [25, 26, 27, 28, 29, 30, 31, 44, 45, 46, 47, 48, 49, 50, 58, 63, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 93, 94, 110, 111, 112, 113, 114, 170, 324, 335], "find": [21, 294, 296], "fine": [169, 335], "finish": 251, "first": [5, 6, 7, 8, 14, 52, 103, 106, 111, 112, 137, 169, 204, 240, 241, 242, 243, 244, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 314, 323, 324, 325, 335], "fit": 234, "fix": [111, 315], "flatten": [48, 52, 114, 129, 271, 313, 316, 317], "flexibl": [1, 3, 4, 10, 44, 48, 49, 50, 52, 59, 63, 87, 88, 89, 90, 95, 96, 101, 105, 110, 111, 112, 113, 114, 232, 234, 236, 253, 279, 280, 325, 335], "flip": [330, 332, 335], "float": [2, 5, 6, 7, 8, 30, 31, 46, 56, 59, 107, 109, 116, 119, 130, 131, 132, 133, 134, 140, 141, 142, 146, 148, 149, 162, 163, 164, 165, 172, 176, 177, 178, 179, 180, 184, 197, 198, 199, 200, 201, 208, 209, 210, 214, 215, 216, 217, 218, 219, 220, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 253, 254, 260, 262, 274, 277, 288, 309, 327, 329, 330, 331, 332], "float32": [107, 109, 262, 274, 275, 278, 279, 281, 309, 325], "float64": [282, 309, 325], "flow": [47, 48, 81, 105, 114, 179, 181, 188, 191, 193, 194, 195, 204, 206, 249], "fly": [2, 3], "fname": 3, "focu": 10, "focus": 10, "follow": [0, 10, 11, 14, 20, 21, 22, 23, 26, 27, 28, 29, 30, 61, 62, 87, 88, 89, 90, 95, 96, 101, 103, 106, 116, 117, 119, 120, 121, 122, 123, 124, 137, 139, 161, 163, 164, 165, 166, 167, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 252, 253, 261, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 294, 296, 314, 318, 326, 327, 328, 329, 330, 331, 332, 335], "form": [20, 170, 271, 314, 317, 321, 335], "format": [2, 3, 5, 6, 7, 8, 106, 209, 212, 325], "formul": 117, "formula": [14, 22, 123, 150, 151, 152, 189, 190, 210, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 267, 308, 329], "forward": [10, 23, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 75, 76, 77, 78, 79, 80, 87, 88, 89, 90, 92, 93, 94, 95, 96, 103, 106, 107, 108, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "found": 10, "foundat": [48, 81, 108, 234, 236, 262], "four": [26, 27, 28, 29, 315], "frac": [12, 13, 14, 16, 17, 18, 19, 21, 22, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 137, 139, 150, 151, 152, 153, 154, 155, 157, 158, 159, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 225, 226, 227, 228, 229, 230, 238, 239, 240, 241, 242, 243, 244, 245, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 327], "frame": 134, "framework": [4, 10, 105, 209, 212, 214, 215, 216, 217, 218, 219, 235, 236, 335], "frequent": [209, 212], "from": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 17, 19, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 48, 58, 59, 60, 61, 62, 63, 75, 76, 77, 78, 79, 80, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 100, 106, 107, 108, 109, 110, 111, 112, 113, 114, 129, 137, 146, 148, 161, 163, 164, 165, 169, 170, 172, 174, 175, 176, 177, 178, 179, 186, 193, 194, 195, 197, 198, 199, 200, 201, 204, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 225, 226, 227, 234, 235, 237, 238, 239, 241, 242, 243, 244, 245, 246, 247, 250, 251, 252, 253, 254, 256, 257, 258, 260, 261, 262, 267, 268, 269, 273, 275, 294, 295, 296, 303, 308, 310, 312, 314, 317, 319, 320, 321, 323, 326, 327, 328, 329, 330, 331, 332, 335], "full": [22, 59, 61, 62], "full_matric": 22, "fulli": [4, 11, 23, 25, 26, 27, 28, 29, 30, 31, 48, 52, 53, 54, 55, 63, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 93, 94, 96, 101, 103, 105, 139, 169, 170, 206, 261], "func": 252, "function": [3, 4, 5, 6, 7, 8, 10, 11, 108, 110, 111, 112, 113, 114, 163, 164, 165, 169, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 197, 198, 199, 200, 201, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 234, 236, 253, 261, 324, 335], "fundament": [10, 139, 206, 325], "further": [10, 31, 32, 33, 34, 35, 36, 37, 38, 39, 58, 59, 60, 61, 62, 261, 295, 303, 308], "fuse": 91, "fusion": [92, 93, 94], "futur": 205, "g": [0, 13, 14, 17, 20, 22, 30, 32, 33, 34, 35, 36, 37, 38, 39, 45, 46, 47, 49, 50, 52, 53, 54, 55, 96, 105, 169, 170, 197, 235, 238, 245, 310, 329], "g_": 239, "g_t": 245, "gain": [178, 179], "gamma": [214, 215, 216, 217, 218, 219, 220], "gap": [63, 74, 91, 169], "gaussian": [117, 181], "gelu": [118, 136, 192, 203], "gelunetwork": 181, "gener": [19, 106, 162, 197, 198, 199, 200, 201, 218, 241, 243, 244, 251, 254, 256, 257, 258, 259, 260, 261, 266, 274, 276, 277, 314, 328, 329, 330, 332, 335], "geoffrei": [5, 6], "get": [5, 6, 7, 8], "github": 7, "give": [10, 237, 245], "given": [13, 14, 17, 19, 20, 22, 129, 208, 209, 212, 235, 249, 254, 280, 282, 324, 329, 330, 332, 335], "global": [0, 30, 63, 74, 81, 91, 169, 249, 251, 259, 261], "go": [45, 105], "goal": [208, 209, 212], "googlenet": [45, 105], "gpu": 105, "grad": [107, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 129, 137, 139, 161, 166, 167, 168, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 225, 226, 227, 228, 229, 230, 235, 236, 254, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 330, 332, 333], "grad_output": 17, "gradient": [10, 11, 47, 48, 105, 107, 109, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 254, 256, 257, 258, 260, 274, 275, 276, 277, 278, 279, 280, 281, 282, 309, 325], "grain": 169, "graph": [10, 179, 262, 274, 275, 278, 279, 280, 281, 282, 325], "grayscal": [7, 8, 52, 53, 54, 55, 329, 335], "greater": 288, "green": 329, "grid": 314, "groundbreak": 105, "group": [74, 75, 76, 77, 78, 79, 80, 87, 88, 89, 90, 91, 95, 105, 111, 125, 126, 127, 163, 164, 165, 170, 193, 194, 195, 235, 236], "group1": 111, "group2": 111, "groupedconvblock": 74, "growth_rat": [25, 26, 27, 28, 29], "guarante": 259, "h": [63, 75, 76, 77, 78, 79, 80, 92, 93, 94, 105, 126, 127, 129, 133, 134, 151, 152, 154, 155, 158, 159, 161, 162, 164, 165, 169, 215, 216, 218, 219, 223, 224, 227, 230, 326, 328], "h_": [126, 127, 151, 152, 154, 155, 158, 159, 161, 194, 195, 223, 224, 226, 227, 229, 230], "h_out": [126, 127, 154, 155, 158, 159], "h_stack": 312, "ha": [0, 14, 106, 114, 125, 126, 127, 163, 164, 165, 186, 190, 208, 209, 214, 215, 216, 217, 218, 219, 220, 232, 235, 236, 267, 306, 310, 312, 320, 323, 329], "half": 301, "han": 7, "hand": 21, "handl": [0, 3, 10, 19, 108, 110, 111, 112, 113, 114, 209, 212, 234, 236, 251], "handwritten": [7, 8, 55], "hard": [61, 62, 183], "hard_sigmoid": 182, "hardsigmoid": [183, 192, 203], "hardswish": [192, 203], "hardwar": 10, "hat": [240, 241, 242, 243, 244], "have": [0, 1, 13, 14, 16, 19, 20, 22, 109, 111, 113, 114, 126, 127, 179, 234, 278, 279, 280, 281, 282, 294, 296, 310, 312, 314, 319, 320, 323, 327, 333], "he": 105, "head": [58, 101], "height": [101, 126, 127, 129, 133, 134, 151, 152, 154, 155, 158, 159, 161, 162, 170, 194, 195, 215, 216, 218, 219, 223, 224, 226, 227, 229, 230, 232, 326, 328, 333], "help": [10, 46, 119, 121, 134, 180, 184, 186, 187, 191, 214, 215, 216, 225, 226, 228, 229, 237, 240, 241, 243, 249, 250, 251, 253], "henc": 318, "here": [3, 12, 108, 137, 234, 236, 250, 251, 253, 261, 324, 325, 335], "hidden": [23, 103, 111], "hidden_s": 111, "hierarch": [111, 114, 234], "hierarchi": 194, "hierarchicalnetwork": 111, "high": [10, 40, 41, 42, 43, 58, 71, 86, 95, 257, 260], "higher": [31, 56, 74, 209, 212, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 266, 267, 271, 292], "highest": 257, "highli": [60, 105], "highlight": [169, 228, 229, 230], "hint": 253, "hinton": [5, 6], "histor": 239, "histori": [254, 256, 257, 258, 260, 274, 275, 276, 277, 278, 279, 280, 281, 282], "hold": [110, 111, 112, 113], "horizont": [312, 320, 330, 335], "hot": [209, 212], "how": [2, 3, 10, 87, 88, 89, 90, 95, 111, 114, 234, 253, 335], "howard": 105, "howev": [107, 179], "hstack": 313, "html": [5, 6], "http": [5, 6, 7, 8], "hu": [105, 169], "huang": 105, "huber": [142, 210], "huber_loss": [136, 143], "huberloss": [203, 213], "huberregressionmodel": 210, "hue": 335, "hyperbol": [124, 191, 290, 300, 305], "hyperparamet": [63, 74, 102, 235, 237], "i": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 31, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 285, 286, 287, 288, 289, 290, 292, 293, 294, 295, 296, 298, 299, 300, 301, 303, 304, 305, 306, 307, 308, 309, 310, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335], "iccv": 105, "idea": 105, "ideal": [10, 56, 114], "ident": [16, 17, 105, 162, 203, 207, 259, 261, 278, 318], "identifi": 112, "idx": [2, 3], "ieee": [105, 169], "ii": 306, "ij": [123, 161, 189, 265, 266, 267, 271, 314], "ik": [265, 266, 267], "ill": [13, 19], "ilsvrc": 105, "imag": [3, 4, 5, 6, 7, 8, 23, 24, 26, 27, 28, 29, 31, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 63, 64, 65, 66, 67, 68, 69, 70, 71, 82, 83, 84, 85, 86, 87, 88, 89, 90, 95, 104, 105, 126, 148, 162, 164, 169, 194, 218, 314, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335], "image_dir": 3, "image_path": 3, "imagedataset": 3, "imageio": 3, "imagenet": [26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 56, 57, 58, 59, 60, 61, 62, 72, 73, 87, 88, 89, 90, 95, 105], "imbal": [209, 212], "impact": [105, 243], "implement": [2, 3, 10, 19, 23, 25, 30, 44, 45, 46, 47, 49, 50, 52, 56, 57, 58, 63, 72, 73, 75, 76, 77, 78, 79, 80, 81, 101, 103, 105, 108, 129, 166, 167, 168, 170, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 312, 323, 329], "impli": [193, 194], "import": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 72, 73, 75, 76, 77, 78, 79, 80, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 131, 134, 137, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335], "improp": [111, 114, 261], "improv": [31, 45, 46, 47, 48, 50, 63, 74, 87, 88, 89, 90, 91, 103, 105, 146, 162, 169, 181, 187, 191, 237, 238, 239, 240, 241, 242, 243, 244, 245, 253, 328, 331, 335], "imread": 3, "in1_featur": [137, 204], "in2_featur": [137, 204], "in_channel": [63, 111, 114, 163, 164, 165, 166, 167, 168, 169, 170, 193, 194, 195, 215, 216, 225, 226, 227, 228, 229, 230, 234], "in_featur": [110, 111, 114, 139, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 194, 195, 197, 198, 199, 204, 206, 208, 209, 210, 211, 212, 214, 217, 220, 225, 226, 227, 228, 229, 230], "incept": [45, 46, 47, 48, 49, 50, 51, 105], "inception_resnet_v1": 105, "inception_resnet_v2": 105, "inception_v1": 105, "inception_v3": 105, "inception_v4": 105, "inceptionresnet": [49, 50], "includ": [3, 4, 7, 10, 11, 17, 18, 23, 44, 45, 46, 49, 52, 63, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 96, 102, 103, 106, 108, 109, 111, 113, 114, 161, 163, 164, 165, 166, 167, 168, 232, 234, 235, 236, 243, 253, 261, 267, 315], "inclus": [109, 112, 257, 260], "incom": [139, 206], "incomplet": 2, "incompletedataset": 2, "incorpor": [22, 60, 74, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 105, 181], "increas": [56, 74, 75, 76, 77, 78, 79, 80, 91, 125, 126, 127, 129, 162, 239, 246, 250, 312, 323, 329, 330, 332, 335], "independ": [111, 125, 126, 127, 197, 198, 199, 200, 201, 220, 267, 277, 327, 329, 331, 333], "index": [0, 2, 5, 6, 7, 8, 250, 274, 275, 278, 314, 318], "indexerror": 0, "indic": [0, 1, 96, 106, 109, 111, 113, 114, 141, 145, 209, 212, 225, 249, 262, 326, 328], "individu": [3, 111, 114, 210, 220, 236, 239, 246], "induc": [121, 187], "inf": 304, "infer": [87, 88, 89, 90, 95, 111, 114, 251], "infin": [20, 22, 242], "inform": [10, 105, 106, 107, 169, 236, 238, 251], "infti": [18, 244], "inherit": [1, 237, 245, 247], "init": 173, "initi": [1, 25, 48, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 91, 92, 93, 94, 97, 98, 99, 100, 102, 107, 109, 110, 111, 112, 113, 114, 170, 172, 174, 175, 176, 177, 178, 179, 193, 194, 195, 204, 206, 208, 209, 210, 211, 212, 214, 215, 216, 220, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 256, 259, 260, 261, 274, 278, 279, 280, 281, 282, 309], "initial_accumulator_valu": 239, "inner": [10, 265, 283], "innov": 58, "input": [10, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 74, 87, 88, 89, 90, 91, 95, 101, 103, 105, 106, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 253, 261, 262, 263, 265, 266, 267, 271, 275, 277, 280, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335], "input1": 204, "input2": 204, "input_": [23, 103, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 222, 223, 224], "input_1": 137, "input_2": 137, "input_data": [180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 220, 225, 226, 227, 228, 229, 230], "input_s": [111, 113, 189, 209, 212], "input_shap": 106, "input_tensor": [10, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 75, 76, 77, 78, 79, 80, 87, 88, 89, 90, 92, 93, 94, 95, 96, 101, 107, 110, 111, 112, 113, 114, 123, 166, 167, 168, 169, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 225, 226, 227, 228, 229, 230, 232, 234, 326, 327, 328, 329, 330, 331, 332, 333], "insid": [3, 249, 251], "insight": [10, 105], "inspect": [108, 109, 114, 235], "instabl": [19, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247], "instal": 10, "instanc": [0, 1, 10, 24, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 53, 54, 55, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 102, 104, 106, 108, 109, 110, 112, 113, 114, 148, 186, 217, 218, 219, 220, 235, 252, 309, 317, 321, 335], "instance_norm": [136, 147, 217, 218, 219], "instancenorm1d": [203, 221], "instancenorm1dmodel": 217, "instancenorm2d": [203, 221], "instancenorm3d": [203, 221], "instanti": [2, 30, 40, 41, 42, 43, 87, 88, 89, 90, 95, 252], "instead": [10, 106, 110, 111, 112, 113, 114, 174, 175, 178, 179, 240, 241, 242, 251, 253, 276, 277], "int": [0, 1, 2, 5, 6, 7, 8, 17, 18, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 123, 125, 126, 127, 129, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 176, 177, 178, 179, 189, 193, 194, 195, 204, 206, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 240, 241, 242, 243, 244, 246, 252, 254, 256, 257, 258, 259, 260, 262, 274, 275, 276, 278, 279, 281, 288, 294, 295, 296, 303, 307, 308, 309, 310, 315, 317, 318, 319, 320, 321, 322, 326, 328, 333], "integ": [1, 3, 17, 81, 96, 125, 126, 127, 151, 152, 193, 194, 195, 220, 223, 224, 226, 227, 228, 229, 230, 253, 257, 258, 260, 261, 276, 279, 281, 295, 303, 307, 308, 315, 317, 318, 321], "integr": [1, 2, 4, 5, 6, 7, 8, 11, 105, 109, 111, 113, 114, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 204, 206, 225, 226, 227, 228, 229, 230], "intellig": [105, 169], "intend": [107, 112, 113], "intens": [19, 25, 64, 327, 329], "intent": 253, "interact": [137, 204, 234, 261], "interdepend": 105, "interfac": [2, 108, 111, 236], "interfer": [249, 251], "intermedi": [19, 169], "intern": [64, 65, 66, 67, 68, 69, 70, 71, 82, 83, 84, 85, 86, 105, 110, 111, 112, 113, 114, 209, 212, 234, 326, 327, 328, 329, 330, 331, 332, 333], "interpol": [136, 160, 232, 333], "interpret": [105, 123, 189, 253, 310], "interv": [256, 260, 274], "introduc": [31, 45, 46, 56, 57, 58, 74, 105, 120, 169, 181, 185, 186, 188, 191, 197, 198, 199, 200, 201, 328, 331, 335], "introspect": 114, "intuit": [10, 110, 112, 234, 335], "inv": 15, "inv_a": 16, "invari": [226, 229], "invers": [10, 13, 16, 17, 19, 239, 285, 286, 287], "invert": [13, 16, 17, 21, 57, 58, 60, 105], "invok": 252, "involv": [12, 13, 14, 16, 19, 20, 22, 91, 116, 117, 119, 120, 121, 122, 124, 137, 139, 161, 193, 194, 195, 204, 206, 253, 254, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 282, 292, 293, 294, 296, 299, 301, 314, 315, 317, 321], "is_leaf": 262, "issu": [3, 187, 214, 215, 216, 240, 241], "item": [7, 211], "iter": [0, 1, 2, 3, 107, 108, 111, 113, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 274], "ith": [123, 189], "its": [4, 17, 19, 23, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 82, 83, 84, 85, 86, 92, 93, 94, 103, 105, 106, 107, 110, 111, 112, 113, 125, 126, 127, 129, 162, 170, 179, 181, 185, 190, 228, 229, 230, 234, 235, 238, 246, 249, 250, 251, 252, 274, 276, 277, 281, 294, 296, 309, 318, 327, 330, 332, 335], "itself": [12, 17, 110, 111, 112, 113], "j": [8, 123, 169, 189, 214, 215, 216, 217, 218, 219, 225, 226, 228, 229, 314, 320, 326, 328], "jie": 105, "jk": 266, "join": [3, 310], "json": 252, "k": [17, 105, 125, 193, 209, 215, 216, 218, 219, 225, 228, 229, 265, 266, 275, 278, 310], "k_d": [127, 195, 227, 230], "k_h": [126, 127, 194, 195, 226, 227, 230], "k_w": [126, 127, 194, 195, 226, 227, 230], "kaim": [105, 174, 175, 178, 179], "kaiming_norm": 173, "kaiming_uniform": 173, "kalenichenko": 105, "karen": 105, "kashif": 7, "keep": [108, 185, 238, 251, 318], "keep_grad": [109, 254, 256, 257, 258, 260, 262, 274, 275, 276, 277, 278, 279, 280, 281, 282, 309, 325], "keep_var": 108, "keepdim": [294, 295, 296, 303, 308], "kei": [105, 108, 110, 112, 114, 235], "kept": [295, 303, 308], "kernel": [52, 53, 54, 55, 61, 62, 91, 92, 93, 94, 95, 103, 105, 125, 126, 127, 129, 150, 151, 152, 153, 154, 155, 157, 158, 159, 163, 164, 165, 166, 167, 168, 170, 193, 194, 195, 222, 223, 224, 226, 227, 230], "kernel_s": [58, 61, 62, 91, 92, 93, 94, 111, 114, 153, 154, 155, 157, 158, 159, 163, 164, 165, 166, 167, 168, 170, 193, 194, 195, 215, 216, 225, 226, 227, 228, 229, 230], "keyerror": 108, "keyword": [24, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 100, 104, 108, 205], "kj": [265, 267], "known": 105, "kriz": [5, 6], "krizhevski": [5, 6, 105], "kroneck": [123, 189], "kwarg": [24, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 53, 54, 55, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 100, 102, 104, 108, 205, 252], "l": [12, 19, 40, 105, 125, 132, 150, 153, 157, 163, 169, 197, 198, 199, 200, 201, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222], "l2": [237, 238, 239, 240, 241, 242, 243, 244, 245, 247], "l_": [125, 150, 153, 157, 193, 222, 225, 228], "l_out": [125, 153, 157], "label": [4, 5, 6, 7, 8, 46, 208, 209, 212], "lambd": 237, "lambda": [14, 121, 187, 237, 241], "lambda_1": 14, "lambda_2": 14, "lambda_i": 14, "lambda_n": 14, "languag": [4, 193, 204, 225, 228], "larg": [0, 3, 19, 25, 40, 43, 58, 61, 64, 65, 66, 69, 82, 83, 105, 166, 167, 168, 186, 210, 234, 237, 240, 241, 242, 245, 246, 247, 251], "larger": [30, 31, 63, 91, 110, 112, 125, 126, 127, 129, 237, 268, 315, 326, 328, 333], "largest": 294, "last": [1, 123, 149, 189, 266, 267, 310, 330, 332], "last_channel": 58, "latest": 4, "layer": [10, 23, 25, 26, 27, 28, 29, 30, 31, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 58, 59, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 91, 92, 93, 94, 96, 97, 98, 99, 100, 103, 105, 106, 108, 110, 111, 114, 123, 139, 146, 148, 149, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 178, 179, 189, 193, 194, 195, 204, 205, 206, 212, 220, 225, 226, 227, 228, 229, 230, 234, 261, 315, 325], "layer1": 252, "layer2": 252, "layer_group": 111, "layer_norm": [136, 147, 220], "layer_sequ": [111, 114], "layernorm": [203, 221], "layernormmodel": 220, "le": 105, "lead": [111, 114, 181, 217, 218, 219, 220, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 261], "leaf": 262, "leaki": [119, 184], "leaky_relu": [118, 136, 184], "leakyrelu": [192, 203], "learn": [1, 3, 4, 7, 8, 10, 17, 19, 31, 74, 75, 76, 77, 78, 79, 80, 103, 104, 105, 110, 111, 112, 113, 120, 123, 169, 180, 184, 185, 189, 193, 194, 195, 198, 199, 200, 201, 204, 206, 234, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 259, 324, 325, 335], "learnabl": [107, 108, 109, 146, 148, 149, 163, 164, 165, 193, 194, 195, 204, 206, 214, 215, 216, 217, 218, 219, 220, 234], "least": [19, 20, 22, 232, 306], "lecun": [8, 105], "left": [17, 18, 19, 22, 117, 123, 181, 189, 208, 209, 210, 212, 214, 215, 216, 217, 218, 219, 220, 228, 229, 230, 326, 328], "leftarrow": 243, "len": [0, 1, 2, 3, 314], "lenet": [51, 53, 54, 55, 105], "lenet_1": 105, "lenet_4": 105, "lenet_5": 105, "length": [111, 125, 132, 150, 153, 157, 193, 205, 214, 217, 222, 225, 228, 315, 327], "leq": [182, 183, 210, 244, 272, 288], "lerp": 161, "less": [0, 116, 119, 142, 180, 184, 209, 210, 212, 288], "let": 14, "level": [10, 48], "leverag": [21, 47, 50, 75, 76, 77, 78, 79, 80, 101, 105, 170, 234], "li": 105, "librari": [3, 10, 11, 108, 234, 235, 236, 252, 253, 261, 262, 335], "lie": 254, "lightweight": [10, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 57, 61, 62, 67, 84, 170, 183, 186], "like": [10, 31, 48, 75, 76, 77, 78, 79, 80, 92, 93, 94, 105, 107, 108, 111, 114, 125, 178, 179, 187, 197, 214, 215, 216, 217, 218, 219, 249, 250, 253, 309, 325, 335], "likelihood": [145, 209, 212], "limit": [61, 62, 106, 186, 238, 288], "linalg": [10, 15], "linalgerror": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22], "linear": [10, 11, 12, 19, 20, 21, 57, 60, 81, 105, 106, 110, 111, 112, 114, 116, 117, 119, 120, 121, 174, 175, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 194, 195, 197, 198, 199, 204, 205, 208, 209, 210, 211, 212, 214, 217, 220, 225, 226, 227, 228, 229, 230, 252, 278], "linearli": 210, "list": [0, 1, 31, 52, 58, 63, 74, 81, 91, 96, 106, 107, 109, 110, 111, 112, 113, 149, 170, 205, 220, 235, 253, 254, 256, 257, 258, 260, 262, 275, 276, 277, 279, 280, 281, 282, 307, 318, 319, 322, 324], "listdir": 3, "liter": [63, 140, 141, 142, 144, 145, 161, 163, 164, 165, 166, 167, 168, 170, 174, 175, 193, 194, 195, 208, 209, 210, 211, 212, 232, 314], "liu": 105, "ln": 272, "load": [3, 4, 5, 6, 7, 8, 107, 108, 109, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 252], "load_state_dict": [108, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "loader": [1, 2, 3], "local": [105, 129, 193], "locat": [105, 161], "log": [145, 208, 209, 212, 283], "log_softmax": 212, "logarithm": [272, 292, 293], "logic": [3, 222, 223, 224, 234, 235], "logit": [23, 103, 123, 189, 209], "logsoftmax": [209, 212], "long": [243, 307], "loop": [1, 111, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "loss": [10, 19, 110, 111, 112, 113, 114, 123, 140, 141, 142, 144, 145, 180, 181, 184, 185, 187, 188, 189, 191, 197, 198, 199, 200, 201, 205, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "low": [10, 48, 57, 61, 62, 257, 260], "lower": [12, 56, 177, 237, 245, 246, 247, 260], "lowest": 257, "lr": [235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "lu": 16, "lucid": [0, 1, 2, 5, 6, 7, 8, 15, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 255, 283, 313, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333], "m": [41, 96, 105, 110, 111, 114, 226, 227, 229, 230, 240, 241, 242, 243, 244, 278], "m_": [240, 241, 242, 243, 244], "m_t": [243, 244], "maaten": 105, "machin": [3, 7, 8, 10, 19, 105, 169, 240, 250, 259], "magnitud": [245, 246, 335], "mai": [3, 10, 14, 16, 19, 111, 113, 162, 210, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 251, 261, 329, 335], "main": [10, 20, 48, 111, 275, 278], "maintain": [19, 40, 41, 42, 43, 56, 74, 75, 76, 77, 78, 79, 80, 87, 88, 89, 90, 95, 105, 107, 108, 110, 111, 112, 114, 121, 174, 175, 178, 179, 180, 181, 187, 197, 198, 199, 200, 201, 214, 215, 216, 217, 218, 219, 240, 245, 326, 329, 333], "make": [1, 3, 10, 44, 48, 52, 57, 60, 61, 62, 63, 105, 111, 114, 188, 209, 210, 220, 226, 229, 234, 239, 240, 241, 242, 250, 252, 261, 262, 267, 314, 324, 335], "manag": [10, 108, 110, 111, 112, 113, 114, 234, 236, 249, 251, 252, 261], "manhattan": 18, "mani": 106, "manipul": [10, 110, 112, 335], "manner": [111, 114], "manual": [140, 141, 145, 208, 209, 212, 251], "map": [63, 74, 84, 91, 105, 108, 122, 124, 169, 188, 191], "mask": [107, 197, 198, 199, 200, 201], "match": [21, 108, 111, 114, 140, 142, 144, 149, 163, 164, 165, 235, 292, 317, 318, 321, 322, 327, 335], "math": [289, 299, 304], "mathbf": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 101, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 137, 139, 161, 166, 167, 168, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 225, 226, 227, 228, 229, 230, 265, 266, 267, 271, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333], "mathcal": [174, 176, 178, 197, 198, 199, 200, 201, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220], "mathemat": [16, 163, 164, 165, 328, 330, 331, 332], "mathrm": 19, "matmul": 283, "matric": [11, 13, 14, 16, 19, 21, 22, 265, 266, 267, 278, 314], "matrix": [10, 11, 12, 13, 14, 16, 17, 19, 20, 21, 22, 129, 137, 205, 206, 234, 265, 314], "matrix_pow": 15, "matthew": 105, "max": [18, 81, 96, 120, 157, 158, 159, 182, 183, 185, 186, 228, 229, 230, 242, 268, 283, 288], "max_pool": [228, 229, 230], "max_pool1d": [136, 156], "max_pool2d": [136, 156], "max_pool3d": [136, 156], "max_valu": 288, "maxim": 3, "maximum": [18, 185, 186, 228, 229, 230, 240, 242, 283, 288, 294, 331], "maxpool": [23, 103], "maxpool1d": [203, 231], "maxpool1dmodel": 228, "maxpool2d": [111, 114, 194, 203, 231], "maxpool2dmodel": 229, "maxpool3d": [195, 203, 231], "maxpool3dmodel": 230, "mean": [5, 6, 7, 8, 20, 106, 107, 121, 125, 126, 127, 130, 140, 141, 142, 144, 145, 146, 148, 163, 164, 165, 176, 180, 181, 182, 184, 185, 187, 188, 191, 195, 197, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 240, 241, 242, 243, 244, 245, 249, 258, 283, 288, 292, 293, 294, 296, 299, 301, 303, 306, 307, 308, 324, 327, 335], "meaning": [114, 253], "measur": [208, 209, 211, 212], "mechan": [10, 81, 91, 95, 113, 137], "medium": 41, "membership": 208, "memori": [2, 3, 25, 251, 276, 277], "meshgrid": 313, "method": [3, 10, 11, 16, 31, 81, 101, 102, 110, 111, 112, 113, 114, 140, 141, 142, 144, 145, 174, 175, 178, 179, 208, 209, 210, 211, 212, 232, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 261], "mid_channel": [61, 62], "middl": 250, "might": 234, "min": [182, 183, 186, 269, 283, 288], "min_valu": 288, "mind": [0, 3, 10, 111, 114, 251], "mingx": 105, "mini": 1, "minim": [4, 10, 58, 114, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 236], "minimalist": 10, "minimum": [283, 288, 296], "minu": 188, "mirror": [280, 282], "mismatch": [31, 108, 234, 235], "miss": [108, 234], "mitig": [119, 180, 184, 187, 214, 215, 216], "mlp": 170, "mnist": [4, 7, 9, 53, 54], "mnist_train": [4, 8], "mobil": [56, 57, 58, 60, 61, 62, 105], "mobilenet": [51, 57, 58, 60, 61, 62, 105, 186], "mobilenet_v2": 105, "mobilenet_v3": [61, 62], "mobilenet_v3_larg": 105, "mobilenet_v3_smal": 105, "mobilenetv2": [57, 105], "mobilenetv3": [58, 61, 62, 105], "mode": [10, 134, 146, 148, 161, 174, 175, 197, 198, 199, 200, 201, 232, 315], "model": [1, 3, 4, 10, 17, 20, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 107, 108, 109, 110, 111, 112, 113, 114, 123, 162, 163, 164, 165, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 220, 225, 226, 227, 228, 229, 230, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 261, 324, 325, 335], "model_b0": 30, "model_b7": 30, "moder": 85, "modern": 105, "modif": [102, 114, 251], "modifi": [24, 63, 101, 104, 110, 111, 112, 113, 172, 174, 175, 176, 177, 178, 179, 197, 249, 251, 259, 312, 323], "modul": [5, 6, 7, 8, 10, 23, 24, 30, 31, 44, 47, 48, 49, 50, 52, 56, 57, 58, 63, 74, 81, 91, 96, 101, 103, 104, 105, 106, 107, 109, 110, 111, 112, 113, 114, 163, 164, 165, 166, 167, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 252, 253, 261, 325, 335], "modular": [3, 10, 105, 108, 111, 114, 234, 335], "moduledict": [111, 112, 114, 115], "modulelist": [113, 114, 115], "moment": [240, 241, 242, 243, 244], "momentum": [146, 148, 163, 164, 165, 214, 215, 216, 217, 218, 219, 237, 243, 245, 247], "momentum_decai": 243, "monoton": 190, "moor": 19, "more": [3, 4, 7, 10, 14, 63, 70, 110, 111, 114, 166, 167, 168, 180, 198, 199, 200, 201, 234, 235, 236, 237, 238, 241, 242, 245, 246, 247, 258, 267, 306, 320, 335], "most": [11, 105, 229, 325, 326, 335], "move": [237, 245], "mse": [142, 144, 210, 211], "mse_loss": [136, 143], "mseloss": [203, 213], "mu": [176, 214, 215, 216, 217, 218, 219, 220, 308], "mu_c": 327, "mu_i": [217, 218, 219], "much": 335, "mul": 283, "multi": [3, 4, 49, 91, 92, 93, 94, 105, 123, 141, 145, 170, 189, 209, 212, 295, 303, 308], "multidimension": [256, 260, 276], "multipl": [1, 3, 10, 11, 17, 21, 23, 63, 81, 95, 112, 113, 114, 129, 161, 162, 169, 170, 197, 198, 199, 200, 201, 209, 212, 234, 250, 254, 256, 257, 258, 260, 265, 270, 276, 277, 324, 329, 335], "multipli": [17, 59, 113, 139, 206, 232, 246, 270, 271], "must": [0, 1, 3, 12, 13, 14, 16, 17, 20, 21, 22, 106, 108, 110, 111, 112, 113, 114, 149, 197, 198, 199, 200, 201, 212, 232, 235, 251, 254, 306, 310, 312, 315, 317, 318, 320, 321, 323, 326, 327, 328, 329, 330, 332], "my_simple_model": 252, "mymodel": [108, 109, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "myoptim": [235, 236], "n": [17, 18, 63, 75, 76, 77, 78, 79, 80, 92, 93, 94, 105, 110, 111, 114, 125, 126, 127, 129, 132, 133, 134, 137, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 169, 174, 176, 178, 193, 194, 195, 200, 201, 204, 206, 208, 209, 211, 212, 214, 215, 216, 217, 218, 219, 222, 223, 224, 225, 226, 227, 228, 229, 230, 278, 295, 306, 308], "n1": 18, "nabla_": [238, 239, 240, 241, 242, 243, 244, 246], "nabla_t": 244, "nadam": 248, "nair": [5, 6], "name": [105, 106, 108, 110, 112, 114, 252, 253], "nan": [20, 22], "natur": [19, 105, 193, 204, 225, 228, 272, 292, 293], "ndarrai": [107, 109, 253, 254, 262, 275, 277, 280, 282, 309], "ndim": [20, 22, 109, 262], "ne": 17, "nearest": [161, 232], "necessari": [4, 5, 6, 7, 8, 19, 251, 312, 323], "need": [2, 4, 111, 112, 113, 123, 204, 234, 251, 276, 277, 324, 325, 335], "neg": [17, 19, 22, 116, 145, 162, 180, 184, 185, 187, 209, 212, 246, 310], "negative_slop": [119, 184], "neglect": 113, "neighbor": 161, "neq": 18, "nest": [106, 111, 114, 234], "nestedmodel": 106, "nesterov": 243, "net": [103, 105], "network": [3, 4, 10, 23, 24, 25, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 47, 48, 55, 56, 59, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 81, 82, 83, 84, 85, 86, 91, 96, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 120, 121, 122, 123, 124, 125, 126, 127, 137, 139, 146, 162, 169, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 220, 225, 226, 227, 228, 229, 230, 234, 235, 236, 237, 245, 247, 260, 261, 262, 274, 279, 281, 294, 296, 315, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335], "neural": [3, 4, 10, 23, 24, 30, 32, 33, 34, 35, 36, 37, 38, 39, 48, 55, 104, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 117, 120, 121, 122, 123, 124, 125, 126, 127, 137, 139, 146, 162, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 220, 225, 226, 227, 228, 229, 230, 234, 235, 236, 237, 245, 247, 260, 261, 262, 274, 279, 281, 294, 296, 315, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335], "neuralnetwork": [182, 183, 185, 190], "neuron": 184, "never": 329, "new": [108, 109, 116, 117, 119, 120, 121, 122, 124, 137, 139, 161, 170, 174, 175, 176, 177, 178, 179, 235, 252, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 277, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 307, 309, 310, 312, 315, 317, 318, 320, 321, 322, 323], "next": [114, 324], "nll": 145, "nll_loss": [136, 143], "nllloss": [203, 213], "nn": [5, 6, 7, 8, 10, 23, 25, 30, 31, 44, 48, 52, 56, 57, 58, 63, 74, 81, 87, 88, 89, 90, 91, 95, 96, 103, 106, 115, 118, 128, 135, 138, 143, 147, 156, 160, 171, 173, 192, 196, 202, 203, 207, 213, 221, 231, 233, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 252, 325, 335], "no_grad": 249, "node": 262, "nois": [22, 261], "non": [14, 17, 19, 22, 113, 117, 119, 120, 174, 175, 180, 181, 182, 184, 185, 186, 187, 188, 190, 191, 197, 198, 199, 200, 201, 240, 241, 251, 272, 288], "none": [0, 1, 2, 5, 6, 7, 8, 30, 31, 44, 48, 52, 56, 57, 58, 63, 101, 106, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 137, 139, 140, 141, 142, 144, 145, 146, 148, 149, 162, 163, 164, 165, 166, 167, 168, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 225, 226, 227, 228, 229, 230, 232, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 250, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 276, 277, 278, 280, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 330, 332, 333], "norm": [11, 15, 242], "normal": [5, 6, 7, 8, 81, 117, 121, 123, 124, 146, 148, 149, 163, 164, 165, 173, 174, 178, 181, 187, 189, 197, 214, 215, 216, 217, 218, 219, 220, 245, 258, 261, 324, 334, 335], "normalized_shap": [149, 220], "note": [125, 197], "noth": [130, 131, 132, 133], "notimplementederror": [2, 108, 235], "notin": 288, "nov": 105, "novel": [7, 105], "np": [63, 75, 76, 77, 78, 79, 80, 92, 93, 94, 107, 109, 169, 209, 212, 253, 262, 267, 274, 275, 278, 279, 281, 282, 293, 309, 325], "npy": [5, 6, 7, 8], "num_class": [23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 189, 209, 212], "num_featur": [114, 163, 164, 165, 214, 215, 216, 217, 218, 219], "num_init_featur": [25, 26, 27, 28, 29], "num_paramet": 113, "number": [0, 1, 2, 5, 6, 7, 8, 13, 14, 16, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 105, 106, 109, 111, 113, 114, 125, 126, 127, 129, 132, 133, 134, 137, 139, 141, 145, 146, 148, 150, 151, 152, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 178, 179, 188, 193, 194, 195, 204, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 226, 227, 228, 229, 230, 237, 256, 259, 260, 262, 272, 274, 276, 278, 294, 295, 296, 307, 308, 310, 312, 315, 317, 318, 319, 321, 323, 327, 329, 330, 332, 335], "numer": [16, 19, 140, 141, 146, 148, 149, 163, 164, 165, 186, 208, 209, 214, 215, 216, 217, 218, 219, 220, 238, 239, 240, 241, 242, 243, 244, 245, 253, 264, 274, 279, 281], "numpi": [10, 107, 109, 209, 212, 253, 262, 267, 275, 278, 293, 306, 309, 315, 317, 321, 325, 335], "o": [3, 227, 230, 279, 280], "object": [1, 3, 11, 91, 105, 108, 112, 113, 211, 234, 251, 263, 264, 268, 269, 270, 273, 309], "observ": 240, "obtain": 1, "occur": [162, 251, 252, 310], "occurr": 17, "odot": [197, 198, 199, 200, 201], "off": 249, "offer": [4, 10, 234, 236, 261, 335], "offset": 278, "often": [17, 72, 73, 125, 126, 127, 129, 209, 212, 274, 281, 325, 329, 333, 335], "older": 243, "onc": 251, "one": [0, 87, 88, 89, 90, 95, 113, 114, 123, 125, 139, 153, 157, 163, 164, 165, 187, 188, 189, 193, 199, 209, 212, 214, 217, 225, 228, 232, 235, 250, 253, 258, 273, 280, 294, 296, 311, 316, 320, 325], "ones": [137, 139, 193, 194, 195, 206, 214, 215, 216, 217, 218, 219, 220, 234, 278, 280, 283], "ones_lik": 283, "onli": [10, 106, 161, 182, 185, 197, 198, 199, 200, 201, 208, 209, 212, 214, 215, 216, 217, 218, 219, 220, 228, 229, 230, 246, 249, 274, 288, 294, 296, 306, 315, 316, 318, 319], "onto": [20, 22], "openml": [5, 6, 7, 8], "oper": [3, 10, 11, 16, 19, 81, 82, 83, 84, 85, 86, 107, 108, 111, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 129, 134, 137, 139, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234, 249, 250, 251, 253, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 276, 277, 279, 281, 292, 293, 294, 295, 296, 299, 301, 303, 306, 308, 310, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 327, 333], "operatornam": [17, 19], "opposit": 237, "optim": [3, 10, 11, 17, 19, 20, 22, 25, 31, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 57, 58, 61, 62, 105, 107, 109, 112, 113, 129, 193, 194, 195, 234, 251], "optimizer_st": [235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "option": [1, 5, 6, 7, 8, 18, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 49, 50, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 116, 119, 123, 126, 127, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 144, 145, 146, 148, 149, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 176, 177, 178, 179, 180, 184, 189, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 225, 226, 227, 228, 229, 230, 232, 235, 237, 245, 247, 254, 256, 257, 258, 260, 262, 274, 275, 276, 277, 278, 279, 280, 281, 282, 294, 295, 296, 303, 307, 308, 309, 310, 314, 317, 319, 320, 325, 329, 330, 332], "ord": 18, "order": [1, 3, 18, 22, 110, 111, 112, 113, 114, 307, 324], "ordered_dict": 114, "ordereddict": [108, 110, 111, 114], "organ": [110, 111, 112, 114, 252], "orient": 335, "origin": [46, 55, 130, 162, 169, 191, 315, 316, 317, 318, 321, 322, 333], "orthogon": [19, 20, 22], "orthonorm": 20, "oscil": [237, 245, 247], "other": [2, 3, 10, 16, 46, 50, 52, 55, 107, 108, 111, 114, 174, 175, 197, 234, 235, 249, 251, 261, 262, 274, 276, 279, 281, 306, 314, 335], "otherwis": [64, 65, 66, 67, 68, 69, 70, 71, 82, 83, 84, 85, 86, 116, 119, 120, 121, 123, 180, 182, 183, 184, 185, 187, 189, 198, 199, 200, 201, 210, 225, 226, 227, 228, 229, 230, 235, 246, 252, 268, 269, 294, 296], "otim": [19, 137, 204], "out": [0, 3, 4, 116, 117, 119, 120, 121, 122, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 139, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 174, 175, 178, 179, 193, 194, 195, 197, 198, 199, 200, 201, 222, 223, 224, 225, 226, 227, 228, 229, 230, 237, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323], "out_channel": [52, 58, 61, 62, 111, 114, 163, 164, 165, 166, 167, 168, 170, 193, 194, 195, 215, 216, 225, 226, 227, 228, 229, 230, 234], "out_featur": [110, 111, 114, 137, 139, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 194, 195, 197, 198, 199, 204, 206, 208, 209, 210, 211, 212, 214, 217, 220, 225, 226, 227, 228, 229, 230], "outcom": [329, 330, 332], "outer": 283, "outlier": [142, 210], "output": [0, 1, 2, 10, 17, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 130, 131, 132, 133, 134, 137, 139, 150, 151, 152, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 253, 254, 257, 258, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 275, 277, 278, 279, 281, 282, 292, 293, 294, 295, 296, 299, 301, 303, 306, 307, 308, 314, 315, 317, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333], "output_height": 129, "output_lay": [111, 114], "output_s": [111, 150, 151, 152, 222, 223, 224], "output_width": 129, "outsid": 0, "over": [0, 1, 2, 3, 11, 57, 91, 103, 108, 111, 113, 123, 150, 151, 152, 169, 189, 193, 194, 195, 209, 212, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 237, 238, 239, 240, 241, 256, 260, 294, 295, 296, 303, 306, 308, 329, 330, 332], "overal": 101, "overdetermin": 19, "overfit": [1, 23, 103, 131, 134, 198, 199, 200, 201, 237, 240, 245, 247], "overhead": [58, 169], "overli": 186, "overrid": [2, 3], "overridden": [108, 235], "overwrit": [110, 112], "own": [4, 110, 111, 112, 113, 125, 126, 127, 179, 234, 327], "p": [18, 19, 30, 109, 112, 113, 130, 131, 132, 133, 134, 197, 198, 199, 200, 201, 225, 228, 229, 329, 330, 332, 335], "p_d": [227, 230], "p_h": [226, 227, 230], "p_w": [226, 227, 230], "packag": [2, 3, 4, 11, 105, 234, 236, 252, 259, 261, 325, 335], "pad": [52, 111, 114, 125, 126, 127, 129, 150, 151, 152, 153, 154, 155, 157, 158, 159, 163, 164, 165, 166, 167, 168, 170, 193, 194, 195, 215, 216, 222, 223, 224, 225, 226, 227, 228, 229, 230, 313], "pad_after_dim1": 315, "pad_after_dim2": 315, "pad_before_dim1": 315, "pad_before_dim2": 315, "pad_width": 315, "padding_height": 129, "padding_width": 129, "pair": 137, "pang": 105, "paper": 45, "parallel": [1, 3, 91, 105], "param": [108, 109, 112, 113, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "param1": 108, "param_dict": 112, "param_group": [235, 236], "param_groups_setup": 235, "param_list": 113, "param_s": 252, "paramet": [0, 2, 10, 53, 54, 55, 105, 108, 234, 235, 236, 253, 261, 335], "parameterdict": 115, "parameterlist": 115, "parent": 234, "part": [107, 108, 179, 234, 249, 251, 261, 274, 275, 278, 279, 280, 281, 282, 325, 335], "partial": [12, 13, 14, 16, 17, 18, 19, 21, 22, 116, 117, 119, 120, 121, 122, 123, 124, 137, 139, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 225, 226, 227, 228, 229, 230, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323], "particip": [109, 325], "particular": [110, 112], "particularli": [10, 19, 57, 75, 76, 77, 78, 79, 80, 111, 112, 113, 114, 123, 139, 163, 164, 165, 166, 167, 168, 189, 206, 209, 212, 217, 218, 219, 220, 241, 249, 252, 324], "pass": [2, 10, 19, 23, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 72, 73, 74, 75, 76, 77, 78, 79, 80, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 103, 106, 108, 109, 110, 111, 112, 113, 114, 161, 163, 164, 165, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 220, 225, 226, 227, 228, 229, 230, 234, 253, 262, 295, 303, 306, 307, 308, 310, 312, 316, 318, 319, 323, 325, 335], "past": [237, 238, 240, 245], "patch": [129, 226], "path": [3, 5, 6, 7, 8], "pathwai": 105, "pattern": [105, 120, 169, 185, 193, 194, 195], "penal": [237, 245, 247], "penalti": [238, 239, 240, 241, 242, 243, 244], "penros": 19, "per": [1, 58, 75, 76, 77, 78, 79, 80, 92, 93, 94, 150, 217, 218, 219, 220, 222], "perform": [3, 10, 11, 12, 19, 23, 31, 40, 41, 42, 43, 48, 49, 50, 52, 53, 54, 55, 58, 59, 60, 71, 87, 88, 89, 90, 91, 96, 103, 105, 108, 109, 113, 117, 125, 126, 127, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 166, 167, 168, 169, 170, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 235, 249, 251, 259, 261, 263, 264, 267, 270, 273, 292, 294, 296, 303, 307, 324, 326, 328, 333, 335], "permut": 307, "persist": [107, 254, 256, 257, 258, 260, 276, 277], "perturb": [14, 21, 22, 335], "phi": [117, 181], "pi": [117, 181, 289, 299, 304], "piecewis": [182, 183], "pil": [325, 335], "pinv": 15, "pioneer": 105, "pipelin": [5, 6, 7, 8, 261, 324, 325, 327], "pixel": [5, 6, 7, 8, 161, 232, 327, 329], "place": [172, 174, 175, 176, 177, 178, 179], "placehold": [108, 205], "plai": [253, 261], "plot": 314, "point": [4, 162, 249], "pointwis": [166, 167, 168], "pool": [23, 52, 53, 54, 55, 63, 74, 81, 91, 96, 103, 105, 150, 151, 152, 153, 154, 155, 157, 158, 159, 169, 170, 194, 195, 222, 223, 224, 225, 226, 227, 228, 229, 230, 294, 296], "pool1": 114, "pool2": 114, "poorli": 16, "popul": 108, "popular": [4, 105], "portion": 335, "pose": 19, "posit": [1, 12, 17, 108, 114, 162, 180, 184, 185, 187, 225, 226, 227, 228, 229, 230, 246, 250, 272, 317, 321, 328], "possibl": [10, 335], "potenti": [19, 205, 245, 319], "power": [10, 17, 57, 61, 62, 105, 169, 250, 251, 283, 324, 325, 335], "pp": 105, "practic": [19, 209, 212], "practition": 335, "pre": [40, 41, 42, 43, 64, 68, 69], "preactbottleneck": [64, 68, 69], "preced": [105, 109, 232, 262], "preconfigur": [32, 33, 34, 35, 36, 37, 38, 39, 49, 50], "predefin": [4, 105, 111, 187], "predict": [101, 208, 209, 211, 212], "prefix": [108, 252], "prepar": [3, 250, 315, 317, 321, 325, 335], "prepend": 108, "preprint": 105, "preprocess": [3, 4, 129, 162, 261, 324, 325, 335], "present": [208, 209, 210, 212, 214, 215, 216, 217, 218, 219, 220, 226], "preserv": [130, 162, 197, 274, 275, 278, 279, 280, 281, 282, 295, 303, 308], "preset": 4, "prevent": [1, 110, 111, 112, 113, 114, 131, 134, 186, 198, 199, 200, 201, 208, 209, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 251], "previou": [105, 237, 246, 251], "previous": 240, "primari": [10, 253], "primarili": 114, "print": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 249, 250, 251, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 327, 328, 329, 330, 331, 332, 333], "priorit": [61, 62, 170, 182], "prob": 254, "probabilist": 261, "probabl": [30, 46, 117, 123, 130, 131, 132, 133, 134, 140, 181, 189, 197, 198, 199, 200, 201, 208, 209, 212, 254, 329, 330, 332, 335], "problem": [19, 20, 22, 105, 119, 180, 184, 244], "proceed": 105, "process": [2, 3, 4, 17, 20, 22, 23, 49, 63, 91, 102, 103, 105, 113, 125, 126, 127, 148, 162, 163, 164, 165, 169, 170, 187, 191, 193, 195, 204, 214, 215, 216, 217, 218, 219, 220, 225, 227, 228, 230, 237, 253, 314, 325, 326, 327, 328, 333, 335], "produc": [23, 103, 106, 150, 151, 152, 169, 193, 194, 195, 222, 223, 224, 259, 261], "product": [10, 20, 22, 183, 188, 190, 204, 220, 234, 265, 266, 270, 271], "program": [249, 261], "progress": [31, 239], "project": [20, 22], "projector": 19, "promin": [225, 227, 228, 229, 230], "promot": [114, 209, 212, 234], "propag": [13, 14, 16, 19, 20, 21, 22, 105, 108, 114, 137, 139, 161, 169, 226, 227, 245, 246, 254, 265, 266, 267, 271, 294, 296, 314, 315, 318, 322], "properli": [0, 113, 123, 189, 234], "properti": [11, 13, 16, 17, 117, 121, 130, 181, 187, 197, 239, 244], "proport": [5, 6, 7, 8, 308], "proportion": 333, "provid": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 11, 24, 44, 45, 46, 48, 52, 63, 96, 101, 102, 104, 105, 108, 110, 111, 112, 113, 117, 139, 151, 152, 162, 208, 209, 210, 212, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 245, 247, 249, 251, 253, 259, 261, 262, 267, 274, 280, 294, 296, 307, 309, 317, 319, 321, 335], "pseudo": [16, 19], "purpos": [256, 260, 274, 279, 281], "python": 253, "pytorch": 309, "q": [20, 105], "qr": 15, "quad": [19, 208, 209, 210, 211, 212, 228, 229, 230, 263, 264, 268, 269, 270, 273, 326], "quadrat": 210, "quoc": 105, "quotient": 264, "r": [20, 105, 329, 330, 331, 332], "r_t": 244, "radam": 248, "rais": [0, 1, 2, 108, 234, 235, 272], "rand": [255, 261], "randint": [255, 261], "randn": [23, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 59, 60, 63, 75, 76, 77, 78, 79, 80, 87, 88, 89, 90, 92, 93, 94, 95, 96, 101, 103, 166, 167, 168, 169, 170, 234, 255, 259, 261], "random": [1, 2, 3, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 59, 60, 63, 75, 76, 77, 78, 79, 80, 87, 88, 89, 90, 92, 93, 94, 95, 101, 166, 167, 168, 169, 170, 328, 329, 330, 331, 332, 335], "random_integ": 261, "random_tensor": 261, "randomcrop": [334, 335], "randomgrayscal": [334, 335], "randomhorizontalflip": [334, 335], "randomli": [1, 130, 131, 132, 133, 134, 162, 197, 198, 199, 200, 201, 328, 329, 330, 331, 332, 335], "randomnoisedataset": [0, 1, 2], "randomrot": [334, 335], "randomverticalflip": 334, "rang": [0, 1, 11, 63, 71, 105, 113, 122, 124, 125, 126, 141, 145, 179, 186, 188, 191, 237, 245, 247, 254, 257, 285, 286, 288, 327, 331, 335], "rank": 19, "rasul": 7, "rate": [30, 31, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "rather": [7, 112, 113, 241, 318], "ratio": [30, 81, 169, 170, 333], "ravel": 313, "raw": [123, 189, 209, 253], "re": [109, 251], "readabl": [110, 111, 112, 114, 234, 253], "readi": [3, 10, 87, 88, 89, 90, 95, 105], "real": [19, 22, 57, 188], "rearrang": 129, "recalibr": [82, 84, 85, 87, 88, 89, 90, 105, 169], "receiv": [228, 229, 230, 315], "recent": 245, "recept": [91, 95, 105, 170], "reciproc": [19, 283, 293, 301], "recognit": [55, 105, 194], "rectangular": 278, "rectif": 244, "rectifi": [119, 120, 184, 185, 244], "recurr": [111, 220], "recurs": [106, 108], "red": 329, "reduc": [23, 56, 63, 74, 91, 96, 103, 105, 166, 167, 168, 169, 214, 215, 216, 217, 218, 219, 225, 226, 227, 228, 229, 230, 243, 246, 251, 253, 294, 295, 296, 303, 308, 329], "reduct": [22, 30, 81, 140, 141, 142, 144, 145, 169, 170, 208, 209, 210, 211, 212, 294, 296], "reevalu": 235, "refer": [4, 10, 108, 261, 275, 278, 310], "reflect": 249, "regardless": [19, 316], "region": [127, 150, 151, 152, 161, 182, 223, 224, 315, 326, 335], "regist": [72, 73, 75, 76, 77, 78, 79, 80, 102, 107, 108, 109, 113, 234, 252], "register_buff": 107, "register_model": [24, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 53, 54, 55, 59, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 92, 93, 94, 97, 98, 99, 100, 102, 104], "register_paramet": 108, "registr": [108, 234], "registri": [75, 76, 77, 78, 79, 80, 252], "registry_path": 252, "regress": [4, 144, 210, 211], "regular": [19, 23, 30, 31, 46, 103, 134, 198, 199, 200, 201, 237, 238, 239, 242, 243, 244, 245, 247], "relat": [251, 278, 279], "relationship": 333, "relev": [161, 237, 245, 247], "reli": 251, "reliabl": [5, 6, 7, 8], "reliant": [198, 199, 200, 201], "relu": [10, 23, 81, 96, 103, 105, 106, 110, 111, 112, 114, 116, 118, 119, 136, 163, 164, 165, 169, 170, 174, 175, 178, 179, 180, 184, 186, 190, 192, 193, 194, 195, 203, 204, 205, 206], "relu1": 114, "relu2": 114, "relu3": 114, "relu6": [192, 203], "remain": [5, 6, 7, 8, 107, 149, 197, 198, 199, 200, 201, 246], "rememb": 261, "remov": [252, 319], "rep": 321, "repeat": [313, 314, 321], "repetit": [317, 321], "replac": [7, 261, 329], "repres": [7, 16, 18, 22, 52, 108, 109, 114, 137, 139, 146, 148, 149, 193, 194, 195, 204, 206, 209, 212, 220, 235, 236, 237, 243, 244, 245, 246, 247, 253, 254, 263, 264, 270, 273, 275, 295, 306, 307, 308, 314, 326, 328, 330, 331, 332, 333], "represent": [72, 73, 75, 76, 77, 78, 79, 80, 87, 88, 89, 90, 91, 95, 105, 169, 226, 229, 235], "reproduc": [254, 256, 257, 258, 259, 260, 261, 335], "requir": [2, 3, 4, 10, 58, 75, 76, 77, 78, 79, 80, 91, 107, 110, 114, 116, 117, 119, 120, 121, 122, 124, 137, 139, 161, 169, 170, 179, 205, 209, 212, 234, 249, 251, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 305, 310, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 326, 333], "requires_grad": [107, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 129, 137, 139, 161, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 225, 226, 227, 228, 229, 230, 232, 234, 254, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325], "rescal": [140, 141, 145, 208, 209, 212], "research": 234, "reset": [109, 259, 262], "reshap": [10, 81, 139, 194, 195, 232, 250, 253, 313, 316], "residu": [47, 48, 49, 50, 57, 58, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 82, 83, 84, 85, 86, 105], "residualblock": 63, "resili": 246, "resiz": [161, 324, 334, 335], "resnet": [48, 49, 50, 51, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 82, 83, 84, 85, 86, 91, 92, 93, 94, 105, 169], "resnet_1001": 105, "resnet_101": 105, "resnet_152": 105, "resnet_18": 105, "resnet_200": 105, "resnet_269": 105, "resnet_34": 105, "resnet_50": 105, "resnet_arg": 91, "resnext": [51, 75, 76, 77, 78, 79, 80, 87, 88, 89, 90, 95, 105], "resnext_101_32x16d": 105, "resnext_101_32x32d": 105, "resnext_101_32x4d": 105, "resnext_101_32x8d": 105, "resnext_101_64x4d": 105, "resnext_50_32x4d": 105, "resolut": [30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 87, 88, 89, 90, 95, 105], "resourc": [58, 61, 62, 105, 251], "respect": [12, 13, 14, 16, 17, 18, 19, 20, 22, 52, 96, 107, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 137, 139, 161, 170, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 225, 226, 227, 228, 229, 230, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 288, 292, 293, 294, 295, 296, 299, 301, 303, 306, 307, 308, 314, 315, 317, 321, 329], "respons": [87, 88, 89, 90, 105, 110, 236], "restor": [169, 251], "restructur": 318, "result": [12, 16, 17, 19, 105, 108, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 137, 139, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 170, 182, 186, 189, 234, 235, 249, 251, 254, 256, 257, 258, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 296, 297, 298, 299, 300, 301, 302, 304, 305, 306, 309, 310, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325, 328, 329, 335], "resum": 236, "retain": [109, 262, 274, 281, 294, 295, 296, 303, 308, 325], "retent": 325, "rethink": 105, "retriev": [0, 2, 110, 112, 113], "return": [0, 1, 2, 3, 5, 6, 7, 8, 10, 48, 52, 81, 107, 108, 110, 111, 112, 113, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 220, 225, 226, 227, 228, 229, 230, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 252, 253, 324, 335], "reus": [105, 325], "reusabl": [114, 234, 324], "revers": [10, 114, 307, 330, 332], "revert": 251, "revolution": 105, "rgb": [5, 6, 45, 46, 47, 49, 50], "rho": 238, "rho_": 244, "rho_t": 244, "right": [17, 18, 19, 21, 22, 117, 123, 181, 189, 208, 209, 210, 212, 214, 215, 216, 217, 218, 219, 220, 228, 229, 230, 326], "risk": 253, "rmsprop": 248, "rob": 105, "robust": [162, 197, 198, 199, 200, 201, 210, 234, 238, 328, 329, 331, 335], "roland": 7, "role": [253, 261, 335], "root": [4, 5, 6, 7, 8, 239, 245, 301], "rotat": [136, 160, 331, 335], "rotated_imag": 162, "rout": [228, 229, 230], "routin": 10, "row": [13, 14, 16, 21, 139, 278, 314, 323], "rprop": 248, "rule": [16, 17, 250, 263, 264, 268, 269, 270, 272, 273], "run": [10, 107, 146, 148, 163, 164, 165, 214, 215, 216, 217, 218, 219, 238, 251, 259, 261], "running_mean": [107, 146, 148, 214, 215, 216, 217, 218, 219], "running_var": [146, 148, 214, 215, 216, 217, 218, 219], "runtim": [31, 111, 114, 234], "s_": 246, "s_d": [227, 230], "s_h": [226, 227, 230], "s_w": [226, 227, 230], "sain": 105, "same": [13, 14, 16, 17, 21, 123, 130, 131, 132, 133, 134, 146, 148, 149, 151, 152, 162, 163, 164, 165, 166, 167, 168, 170, 186, 193, 194, 195, 197, 198, 199, 200, 201, 205, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 246, 254, 259, 261, 267, 277, 280, 282, 292, 294, 295, 296, 310, 312, 316, 318, 319, 320, 323, 327], "sampl": [0, 1, 2, 3, 5, 6, 7, 8, 10, 40, 41, 42, 43, 45, 46, 47, 49, 50, 52, 53, 54, 55, 59, 60, 87, 88, 89, 90, 95, 150, 151, 152, 174, 175, 176, 177, 178, 179, 197, 198, 199, 200, 201, 204, 206, 209, 212, 220, 222, 223, 224, 254, 258, 261, 326, 328, 330, 331, 332, 333], "sandler": 105, "satisfi": [12, 14, 21], "satur": [180, 335], "save": [2, 107, 109, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252], "scalabl": [3, 30, 75, 76, 77, 78, 79, 80, 101, 105, 234], "scalar": [13, 18, 140, 141, 142, 144, 145, 253, 254], "scale": [14, 19, 25, 30, 31, 49, 53, 54, 55, 56, 59, 64, 65, 66, 69, 82, 83, 91, 92, 93, 94, 105, 116, 121, 123, 146, 148, 149, 169, 170, 178, 179, 180, 182, 184, 187, 188, 189, 191, 197, 198, 199, 200, 201, 209, 214, 215, 216, 217, 218, 219, 220, 232, 237, 239, 240, 241, 253, 261, 308, 333], "scale_factor": 232, "scenario": [112, 113, 220, 241, 242, 325, 329], "schedul": 237, "scientif": 250, "score": [63, 74, 91, 123, 209], "scratch": 10, "script": 261, "se": [30, 82, 83, 84, 85, 86, 87, 88, 89, 90, 105], "se_resnet_101": 105, "se_resnet_152": 105, "se_resnet_18": 105, "se_resnet_34": 105, "se_resnet_50": 105, "se_resnext_101_32x4d": 105, "se_resnext_101_32x8d": 105, "se_resnext_101_64x4d": 105, "se_resnext_50_32x4d": 105, "se_scal": 30, "seamless": [0, 1, 3, 4, 234, 261], "seamlessli": [3, 4, 11, 109, 111, 114, 234, 253, 335], "search": 105, "second": [14, 111, 112, 137, 169, 204, 240, 241, 242, 243, 244, 250, 263, 265, 266, 267, 268, 269, 270, 271, 272, 273, 312, 314, 332], "section": 267, "see": [10, 267], "seed": [254, 255, 256, 257, 258, 260, 261, 335], "seen": 238, "select": [91, 92, 93, 94, 95, 105, 161, 169, 170, 228, 230, 303], "selectivekernel": 171, "self": [0, 1, 2, 3, 10, 23, 30, 31, 44, 48, 52, 56, 57, 58, 81, 96, 103, 106, 107, 108, 109, 110, 111, 112, 113, 121, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 204, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 252, 314, 324, 325], "selu": [118, 130, 136, 192, 197, 203], "selunetwork": 187, "semodul": 171, "senet": [51, 82, 83, 84, 85, 86, 87, 88, 89, 90, 105], "sensit": [142, 210, 214, 215, 216], "sentiment": 4, "separ": [0, 56, 101, 105, 125, 126, 127, 166, 167, 168, 217, 218, 219], "sequenc": [17, 63, 74, 91, 110, 112, 125, 274, 310, 312, 315, 317, 320, 321, 323, 324], "sequenti": [23, 48, 52, 81, 96, 101, 103, 106, 110, 111, 115, 125, 163, 164, 165, 205, 324, 335], "seri": [44, 53, 54, 91, 125, 163, 193, 225, 228], "serial": [107, 108, 236], "serv": [3, 7, 25, 48, 81, 96, 108, 110, 111, 112, 113, 114, 234, 246, 325], "set": [3, 4, 5, 6, 7, 8, 72, 73, 87, 88, 89, 90, 95, 106, 109, 113, 125, 126, 127, 184, 185, 187, 193, 194, 195, 197, 200, 201, 204, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 235, 240, 241, 245, 254, 256, 257, 258, 259, 260, 261, 262, 274, 276, 277, 281, 282, 288, 294, 296, 309, 325, 329, 335], "setup": [4, 10, 75, 76, 77, 78, 79, 80], "sever": [19, 193, 194, 195, 225, 226, 227, 228, 229, 230, 251, 324, 335], "sgd": [10, 237, 244, 248], "sgn": 18, "shape": [3, 4, 5, 6, 7, 8, 10, 13, 14, 16, 17, 19, 23, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 48, 52, 58, 61, 62, 63, 75, 76, 77, 78, 79, 80, 81, 87, 88, 89, 90, 92, 93, 94, 95, 96, 101, 103, 105, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 169, 170, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 234, 250, 253, 254, 256, 257, 258, 260, 261, 262, 265, 276, 277, 278, 279, 280, 281, 282, 288, 293, 294, 295, 296, 299, 301, 303, 307, 308, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 323, 326, 327, 328, 329, 330, 331, 332, 333, 335], "shapelik": 257, "share": 105, "shen": 169, "shift": [146, 148, 149, 182, 214, 215, 216, 217, 218, 219, 220], "shorthand": 267, "should": [52, 107, 251, 254, 256, 257, 258, 260, 276, 277, 285, 286, 306, 315, 324], "show": [249, 252], "showcas": 10, "shown": [190, 259], "shrink": 238, "shuffl": [1, 2, 3], "side": [21, 111, 114, 125, 126, 127, 153, 154, 155, 157, 158, 159, 163, 164, 165, 193, 194, 195, 225, 226, 227, 228, 229, 230, 251], "sigma": [19, 169, 174, 176, 178, 188, 190, 214, 215, 216, 217, 218, 219, 220, 307], "sigma_c": 327, "sigma_i": 19, "sigmoid": [118, 136, 169, 174, 175, 178, 179, 182, 183, 190, 192, 203, 208], "sigmoidnetwork": 188, "sign": [17, 210, 246, 283], "signal": [163, 193, 194, 195, 214, 217, 225, 226, 227, 228, 229, 230], "signific": 251, "significantli": [57, 74, 105, 169, 324], "sim": [197, 198, 199, 200, 201], "similar": [10, 174, 175, 267, 293, 309, 315], "similarli": [22, 306], "simonyan": 105, "simpl": [3, 4, 10, 106, 114, 125, 126, 127, 137, 139, 153, 154, 155, 157, 158, 159, 181, 182, 183, 185, 186, 187, 188, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 225, 226, 227, 228, 229, 230, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 265, 266, 271, 324], "simplebinaryclassificationmodel": 208, "simpleclassificationmodel": [209, 212], "simplegelumodel": 181, "simplehardsigmoidmodel": 182, "simplehardswishmodel": 183, "simpleleakyrelumodel": 184, "simplemodel": [10, 106, 186, 206, 252], "simpleregressionmodel": 211, "simplerelumodel": 185, "simpleselumodel": 187, "simplesigmoidmodel": 188, "simpleswishmodel": 190, "simpletanhmodel": 191, "simpli": [249, 306, 307, 318], "simplic": [105, 182, 185], "simplifi": [4, 40, 41, 42, 43, 53, 102, 114, 163, 164, 165], "simul": [106, 335], "simultan": 162, "sin": [283, 289], "sinc": [17, 20, 110, 111, 112, 113, 125, 126, 127, 179, 249, 251, 254, 258, 314, 335], "sine": [286, 299, 300], "singl": [0, 4, 17, 20, 22, 63, 123, 163, 164, 165, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 209, 220, 226, 227, 228, 229, 230, 235, 253, 260, 276, 310, 319, 327, 329, 335], "singleton": 220, "singular": [13, 16, 17, 19, 21, 22], "sinh": [283, 290, 305], "size": [0, 1, 2, 3, 22, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 41, 52, 53, 54, 55, 59, 61, 62, 63, 91, 103, 105, 106, 109, 111, 125, 126, 127, 129, 132, 133, 134, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 193, 194, 195, 204, 206, 208, 209, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 252, 257, 260, 261, 262, 294, 295, 296, 303, 308, 310, 312, 319, 322, 323, 326, 328, 333, 335], "sk": [91, 92, 93, 94, 95, 105, 170], "sk_resnet_18": 105, "sk_resnet_34": 105, "sk_resnet_50": 105, "sk_resnext_50_32x4d": 105, "skblock": 91, "skip": [105, 251], "sknet": [51, 92, 93, 94, 95, 105], "slice": [137, 306], "slide": [129, 225, 227, 228, 230], "slight": 169, "slightli": 335, "slope": [119, 180, 184], "slow": [3, 244], "small": [19, 40, 41, 42, 43, 53, 54, 55, 58, 61, 62, 105, 119, 140, 141, 146, 148, 149, 184, 187, 208, 209, 210, 214, 215, 216, 217, 218, 219, 220, 226, 229, 238, 239, 240, 241, 242, 243, 244, 245, 246], "smaller": [40, 41, 42, 43, 103, 105, 111, 114, 234, 239, 240, 269, 326, 328, 333], "smallest": 296, "smooth": [46, 117, 180, 181, 190, 237, 245, 335], "smoother": 237, "so": [110, 111, 112, 113, 162, 234, 244, 276, 277, 324], "softmax": [118, 136, 170, 192, 203, 209], "softmaxmodel": 189, "solut": [19, 21], "solv": [11, 12, 15, 19, 20, 22], "solver": 11, "some": [116, 131, 162, 197, 198, 199, 214, 215, 216, 217, 218, 219, 239, 240, 241, 251, 253], "sometim": 250, "sophist": [111, 114], "sourc": 261, "space": [14, 20, 22, 125, 126, 127, 129, 150, 151, 152, 163, 164, 165, 166, 167, 168, 193, 194, 195, 222, 223, 224, 274, 335], "span": 4, "spars": [239, 240], "spatial": [23, 63, 74, 91, 96, 103, 105, 164, 169, 194, 195, 214, 215, 216, 217, 218, 219, 220, 226, 227, 228, 229, 230, 232, 314], "spatial_dim": 169, "spatio": 195, "special": [0, 1, 10, 19, 107, 108, 109, 197, 261], "specif": [4, 10, 26, 27, 28, 29, 40, 41, 42, 43, 48, 56, 72, 73, 110, 111, 112, 113, 114, 170, 179, 197, 198, 199, 200, 201, 217, 218, 219, 234, 235, 249, 261, 276, 294, 296, 317, 321], "specifi": [0, 1, 2, 3, 4, 5, 6, 7, 8, 10, 18, 24, 25, 31, 52, 59, 60, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 91, 93, 94, 96, 97, 98, 99, 100, 102, 104, 106, 111, 123, 129, 134, 140, 141, 142, 144, 145, 149, 150, 151, 152, 161, 162, 169, 189, 193, 194, 195, 208, 209, 210, 211, 212, 220, 222, 223, 224, 226, 227, 228, 229, 230, 232, 235, 253, 256, 257, 258, 259, 260, 272, 274, 275, 276, 277, 278, 279, 281, 282, 288, 294, 295, 296, 303, 307, 308, 309, 310, 312, 315, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 331, 333, 335], "speech": 217, "speed": [61, 62, 182, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247], "split": [4, 310, 312, 323], "springer": 105, "sqrt": [117, 174, 175, 178, 179, 181, 214, 215, 216, 217, 218, 219, 220, 238, 239, 240, 241, 243, 244, 245, 283, 285, 286], "squar": [1, 3, 12, 13, 14, 16, 17, 19, 20, 21, 22, 142, 144, 210, 211, 238, 239, 240, 245, 283, 301], "squaredataset": [0, 1, 2, 3], "squeez": [30, 58, 61, 62, 81, 84, 87, 88, 89, 90, 105, 169, 313], "stabil": [16, 19, 105, 140, 141, 146, 148, 149, 163, 164, 165, 186, 208, 209, 214, 215, 216, 217, 218, 219, 220, 237, 238, 239, 240, 241, 242, 243, 244, 245, 327], "stabl": [174, 175, 178, 179, 197, 209, 237, 241, 242, 245, 246, 247], "stack": [114, 170, 312, 313, 323, 335], "stage": [63, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 91, 92, 93, 94], "stage1": 81, "stage2": 81, "stage3": 81, "stage4": 81, "standalon": 186, "standard": [63, 72, 73, 117, 119, 166, 167, 168, 174, 176, 178, 180, 181, 184, 197, 246, 258, 261, 267, 324, 327, 335], "start": [1, 3, 237, 239, 246, 274, 326, 328], "state": [105, 107, 108, 109, 111, 114, 235, 249, 251, 259], "state_dict": [108, 109, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "static": 114, "statist": [19, 130, 146, 148], "std": [5, 6, 7, 8, 176, 324, 327, 335], "stem": [48, 63, 74, 91], "stem_typ": 63, "stem_width": 63, "step": [109, 129, 170, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 274, 324, 325], "step_siz": 246, "still": 238, "stochast": [10, 30, 31, 237, 247], "stochastic_depth": 30, "stop": 274, "storag": [110, 112, 262], "store": [2, 4, 5, 6, 7, 8, 63, 74, 91, 107, 108, 109, 110, 111, 112, 113, 169, 222, 223, 224, 251, 262, 326, 327, 328, 329, 330, 331, 332, 333], "str": [5, 6, 7, 8, 63, 96, 108, 110, 112, 114, 140, 141, 142, 144, 145, 161, 232, 235, 252, 314], "straightforward": [247, 249, 263], "strategi": 236, "streamlin": [2, 3], "strict": [108, 235], "stride": [31, 52, 53, 54, 55, 58, 61, 62, 111, 114, 125, 126, 127, 129, 150, 151, 152, 153, 154, 155, 157, 158, 159, 163, 164, 165, 166, 167, 168, 170, 193, 194, 195, 222, 223, 224, 225, 226, 227, 228, 229, 230], "stride_height": 129, "stride_width": 129, "string": [108, 110, 112, 114, 193, 194, 195, 235], "structur": [0, 10, 20, 31, 58, 101, 107, 108, 111, 234, 235, 252, 253, 278, 325], "style": [48, 148, 217, 218, 314], "sub": [110, 111, 112, 113, 114, 234, 283, 326, 328], "sub_tensor": 262, "subclass": [1, 2, 3, 10, 108, 109, 110, 234, 235], "sublay": 106, "submodul": [106, 108, 234], "subsequ": [111, 114, 179, 261], "subset": [198, 199], "subtract": [10, 273, 327], "suffer": 239, "suit": [26, 27, 28, 29, 46, 56, 91, 174, 175, 178, 179], "suitabl": [32, 33, 34, 35, 36, 37, 38, 39, 48, 53, 54, 55, 57, 61, 62, 63, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 83, 84, 86, 105, 210, 239, 240, 256], "sum": [18, 110, 111, 112, 113, 114, 123, 140, 141, 142, 144, 145, 170, 189, 208, 209, 210, 211, 212, 239, 263, 266, 271, 283, 306, 308, 310, 312, 314, 317, 321, 323], "sum_": [17, 123, 189, 208, 209, 211, 212, 214, 215, 216, 217, 218, 219, 220, 225, 226, 227, 265, 266, 295, 303, 306, 308, 314, 317], "sum_i": [18, 271], "sum_j": 271, "sum_k": 267, "summar": [30, 72, 73, 101, 225, 226, 227], "summari": [72, 73, 87, 88, 89, 90, 95], "summat": 17, "sun": 169, "super": [10, 106, 107, 108, 109, 110, 111, 112, 113, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 204, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 220, 225, 226, 227, 228, 229, 230, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 252], "support": [1, 3, 4, 10, 11, 17, 18, 19, 20, 22, 59, 63, 110, 111, 112, 113, 114, 161, 162, 232, 234, 236, 243, 261, 262, 263, 264, 267, 268, 269, 270, 272, 273, 275, 278, 288, 293, 295, 299, 301, 303, 306, 307, 308, 310, 314, 318, 325, 335], "suppos": 335, "sure": [234, 335], "svd": [15, 19], "swish": [61, 62, 192, 203], "symmetr": [12, 150, 151, 152, 178, 179, 191], "syntax": [1, 267], "system": [11, 12, 19, 20, 21, 105, 249, 314], "systemat": [105, 335], "szegedi": [45, 105], "t": [19, 105, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 262, 267, 309, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335], "t0": 237, "t1": 309, "t2": 309, "tabl": 30, "tabular": 4, "tailor": [4, 58, 234, 335], "take": [20, 225, 226, 227, 228, 229, 230, 232, 251, 324], "taken": 306, "tan": [105, 283], "tangent": [124, 191, 287, 304, 305], "tanh": [52, 111, 114, 117, 118, 136, 174, 175, 178, 179, 181, 192, 203, 283], "tanhnetwork": 191, "target": [5, 6, 7, 8, 114, 140, 141, 142, 144, 145, 150, 151, 152, 161, 208, 209, 210, 211, 212, 222, 223, 224, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 326, 328, 333], "target_tensor": [208, 209, 210, 211, 212], "target_transform": [5, 6, 7, 8], "task": [4, 10, 11, 23, 24, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 53, 54, 55, 56, 57, 58, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 95, 101, 105, 122, 123, 126, 137, 140, 141, 144, 145, 169, 170, 188, 189, 193, 194, 195, 208, 209, 210, 211, 212, 217, 218, 219, 225, 227, 228, 230, 240, 250, 261, 278, 335], "techniqu": [12, 16, 31, 103, 146, 197, 198, 199, 200, 201, 217, 218, 219, 236, 333, 335], "tempor": [193, 195, 227, 230], "temporarili": 251, "tensor": [2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 40, 41, 42, 43, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 75, 76, 77, 78, 79, 80, 81, 92, 93, 94, 96, 101, 103, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 249, 251, 253, 254, 256, 257, 258, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335], "term": [19, 137, 163, 164, 165, 166, 167, 168, 237, 241, 243, 244, 245, 247], "test": [4, 5, 6, 7, 8], "test_backward": 106, "test_siz": [5, 6, 7, 8], "text": [4, 13, 17, 18, 63, 74, 91, 92, 93, 94, 101, 110, 116, 119, 120, 121, 123, 125, 126, 127, 150, 151, 152, 153, 154, 155, 157, 158, 159, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 178, 179, 180, 182, 183, 184, 185, 186, 187, 189, 190, 193, 194, 195, 197, 198, 199, 200, 201, 208, 209, 210, 211, 212, 225, 226, 227, 228, 229, 230, 237, 239, 240, 241, 242, 243, 244, 245, 246, 247, 257, 263, 264, 266, 268, 269, 270, 272, 273, 284, 288, 294, 295, 296, 298, 303, 308, 310, 312, 315, 316, 317, 318, 319, 321, 322, 323, 326, 327, 328, 330, 331, 332], "th": [137, 208, 209, 211, 212, 217, 218, 219, 268, 269, 272], "than": [0, 1, 7, 112, 113, 116, 119, 142, 166, 167, 168, 180, 184, 190, 210, 235, 241, 288, 306, 315, 320, 326, 328, 333], "thei": [0, 10, 22, 105, 107, 111, 113, 114, 253, 314, 318, 326, 328, 335], "them": [3, 108, 113, 129, 237, 250, 310, 320, 324, 327, 335], "therebi": [197, 226, 227, 229, 230], "theta": [237, 238, 331], "theta_": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "theta_t": [244, 245], "thi": [0, 1, 2, 3, 5, 6, 7, 8, 10, 13, 14, 16, 17, 18, 19, 20, 21, 22, 25, 26, 27, 28, 29, 45, 46, 47, 48, 49, 50, 52, 56, 57, 58, 60, 61, 62, 63, 72, 73, 74, 75, 76, 77, 78, 79, 80, 87, 88, 89, 90, 91, 92, 93, 94, 95, 101, 105, 106, 107, 109, 111, 112, 113, 114, 120, 122, 123, 124, 125, 126, 127, 129, 137, 139, 150, 161, 162, 166, 167, 168, 169, 170, 174, 175, 178, 179, 180, 181, 182, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 212, 214, 215, 216, 217, 218, 219, 220, 222, 225, 226, 227, 228, 229, 230, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 257, 258, 259, 261, 262, 266, 267, 271, 274, 276, 279, 280, 281, 282, 288, 292, 293, 294, 295, 296, 299, 301, 303, 306, 307, 308, 309, 315, 317, 318, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335], "thing": 251, "those": [10, 53, 54, 55, 113, 179], "three": [22, 55, 127, 152, 155, 159, 163, 164, 165, 195, 201, 216, 219, 224, 227, 230], "threshold": [19, 142, 210], "through": [0, 3, 4, 10, 14, 19, 20, 22, 23, 44, 48, 52, 64, 65, 66, 67, 68, 69, 70, 71, 74, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 92, 93, 94, 102, 103, 110, 111, 114, 137, 139, 161, 169, 170, 180, 181, 182, 183, 184, 185, 187, 188, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 214, 215, 216, 217, 220, 225, 226, 227, 228, 229, 230, 254, 258, 265, 266, 271, 314, 316, 318, 319, 322, 335], "throughout": [121, 325], "tile": 313, "time": [0, 3, 17, 53, 54, 55, 57, 125, 163, 184, 187, 193, 225, 226, 227, 228, 229, 230, 237, 238, 239, 240, 241, 245, 247, 251, 317, 321], "to_tensor": [5, 6, 7, 8], "togeth": [114, 324, 335], "too": 246, "tool": [3, 10, 234, 250, 261, 324, 335], "top": [12, 13, 14, 20, 22, 137, 139, 161, 193, 194, 195, 204, 206, 326, 328], "torch": [96, 309], "toronto": [5, 6], "total": [0, 1, 2, 5, 6, 7, 8, 24, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 53, 54, 55, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 100, 102, 104, 106, 109, 262, 318], "totensor": [324, 335], "trace": [11, 283], "track": [10, 163, 164, 165, 214, 215, 216, 217, 218, 219, 234, 249, 251, 254, 256, 257, 258, 260, 274, 275, 276, 277, 278, 279, 280, 281, 282, 309, 325], "track_running_stat": [163, 164, 165, 214, 215, 216, 217, 218, 219], "tradit": [7, 238, 239, 242, 243, 244], "trail": 149, "train": [1, 2, 3, 4, 5, 6, 7, 8, 10, 31, 44, 45, 46, 87, 88, 89, 90, 95, 105, 106, 107, 108, 111, 113, 114, 123, 130, 131, 132, 133, 134, 146, 148, 162, 181, 184, 187, 188, 189, 191, 197, 198, 199, 200, 201, 214, 215, 216, 217, 218, 219, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 324, 327, 328, 329, 330, 331, 332, 335], "trainabl": [106, 214, 215, 216, 217, 218, 219, 234], "transact": 169, "transfer": [148, 217, 218], "transform": [2, 4, 5, 6, 7, 8, 10, 14, 105, 112, 137, 139, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 250, 314], "transform_pipelin": [324, 335], "transformed_imag": [324, 335], "transit": [25, 210], "translat": [226, 229], "transpos": [10, 12, 283], "treat": [0, 107, 220, 234], "triangular": [12, 20], "true": [1, 2, 3, 4, 5, 6, 7, 8, 22, 44, 45, 46, 61, 62, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 129, 130, 131, 132, 133, 134, 137, 139, 146, 148, 161, 163, 164, 165, 166, 167, 168, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 225, 226, 227, 228, 229, 230, 232, 234, 235, 240, 241, 245, 249, 254, 256, 257, 258, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 312, 315, 316, 317, 318, 319, 320, 321, 322, 323, 325], "truncat": 106, "truncate_from": 106, "try": 0, "tune": 335, "tupl": [2, 3, 5, 6, 7, 8, 14, 20, 22, 25, 63, 106, 108, 109, 125, 126, 127, 129, 149, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 193, 194, 195, 205, 220, 223, 224, 225, 226, 227, 228, 229, 230, 232, 240, 241, 242, 243, 244, 246, 253, 256, 257, 258, 260, 262, 276, 279, 281, 294, 295, 296, 303, 308, 310, 312, 314, 315, 318, 319, 320, 322, 323, 326, 327, 328, 333], "twice": 315, "two": [10, 13, 14, 16, 17, 19, 20, 22, 53, 54, 55, 58, 92, 96, 125, 126, 127, 137, 154, 158, 169, 170, 194, 200, 204, 215, 218, 226, 229, 240, 241, 242, 243, 244, 246, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 306, 314], "type": [52, 63, 81, 91, 107, 108, 109, 137, 204, 262, 274, 275, 276, 277, 278, 279, 280, 281, 282, 309, 314, 325], "typeerror": [0, 1, 2, 108, 235], "typic": [11, 63, 74, 91, 107, 123, 130, 162, 169, 186, 187, 189, 212, 214, 215, 216, 217, 218, 219, 236, 237, 245, 247, 251, 253, 322, 325, 327, 331, 333, 335], "u": [19, 22, 175, 177, 179], "u_": 242, "ultra": 69, "unchang": [107, 134, 180, 184, 185, 187, 197, 198, 199, 200, 201, 205, 316, 319], "undefin": 272, "under": [75, 76, 77, 78, 79, 80, 234], "underbrac": 17, "underdetermin": 19, "undergo": 335, "underli": [0, 10, 40, 41, 42, 43, 45, 46, 47, 49, 50, 309, 312, 316, 318, 323], "understand": [10, 103, 105, 106, 114, 335], "unexpect": [108, 111, 114, 261], "unfold": [128, 136], "unifi": 0, "uniform": [173, 175, 179, 193, 194, 195, 204, 206, 255, 256, 257, 261, 329, 330, 331, 332], "uniformli": [256, 260], "uniniti": [276, 277], "unintend": 251, "union": 96, "uniqu": [12, 19, 21, 110, 112], "unit": [23, 52, 103, 116, 117, 119, 120, 121, 174, 175, 178, 179, 180, 181, 184, 185, 187, 197], "unless": [64, 65, 66, 67, 68, 69, 70, 71, 82, 83, 84, 85, 86, 262], "unlik": [107, 110, 111, 112, 113, 119, 180, 184, 197, 220, 238, 239, 241, 242, 243, 244, 246], "unnecessari": 251, "unpad": 315, "unseen": 335, "unsqueez": 313, "unstabl": 16, "up": [235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 331, 333], "updat": [4, 107, 113, 114, 197, 198, 199, 200, 201, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251], "upon": [46, 58, 105, 110, 111, 112, 113], "upper": [20, 177, 246, 260], "upsampl": [203, 233], "us": [0, 2, 3, 4, 5, 6, 7, 8, 10, 11, 12, 14, 16, 17, 19, 20, 22, 25, 30, 31, 44, 45, 46, 47, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 81, 82, 83, 84, 85, 86, 91, 92, 93, 94, 105, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 137, 139, 144, 146, 148, 151, 152, 161, 162, 163, 164, 165, 169, 170, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 249, 250, 251, 252, 254, 256, 257, 258, 260, 261, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 292, 294, 295, 296, 303, 308, 314, 315, 317, 319, 321, 322, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335], "usag": [3, 11, 25, 101, 111, 114, 166, 167, 168, 235, 236, 326, 327, 328, 329, 330, 331, 332, 333], "use_aux": [44, 45, 46], "use_h": [61, 62], "use_s": [61, 62], "user": [1, 2, 3, 4, 10, 110, 111, 112, 113, 234, 239, 324, 325, 335], "usual": 209, "util": [3, 10, 11, 92, 93, 94, 112, 113, 234, 261], "v": [14, 19, 22, 105, 240, 241, 243, 244, 275], "v1": [44, 45, 48, 49, 50, 56, 57, 105], "v2": [31, 40, 41, 42, 43, 48, 50, 51, 57, 58, 60, 105], "v3": [44, 46, 47, 51, 58, 61, 62, 105], "v4": [44, 47, 105], "v_": [237, 240, 241, 243, 244, 245, 247], "v_stack": 323, "v_t": [244, 245], "val": 172, "valid": [163, 164, 165, 166, 167, 168, 170, 193, 194, 195, 307], "valu": [10, 13, 17, 18, 19, 22, 56, 72, 73, 106, 108, 110, 112, 114, 116, 119, 122, 123, 124, 125, 126, 127, 129, 140, 141, 142, 144, 145, 146, 148, 149, 150, 161, 162, 163, 164, 165, 169, 172, 174, 175, 176, 177, 178, 179, 180, 184, 185, 186, 187, 188, 191, 197, 198, 199, 200, 201, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 225, 226, 227, 228, 229, 230, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 253, 254, 256, 257, 258, 259, 260, 261, 274, 275, 276, 277, 278, 284, 285, 286, 288, 291, 292, 293, 294, 296, 298, 299, 301, 302, 310, 315, 316, 318, 322, 327, 329, 330, 332], "valuabl": 261, "valueerror": [1, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 235], "van": 105, "vanish": [105, 180, 187, 214, 215, 216], "var": 283, "vari": [91, 111, 113, 150, 161, 222, 331], "variabl": [108, 114, 150, 151, 152, 205, 222, 223, 224, 234, 249, 251, 256, 276, 328, 331], "varianc": [121, 130, 146, 148, 163, 164, 165, 174, 175, 178, 179, 187, 197, 214, 215, 216, 217, 218, 219, 220, 240, 241, 242, 243, 244, 258, 308, 331, 335], "variant": [25, 26, 27, 28, 29, 30, 31, 40, 41, 42, 43, 58, 61, 62, 72, 73, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 240, 241, 242], "variat": [166, 167, 168, 217, 218, 219, 328, 335], "varieti": [4, 48, 261, 335], "variou": [7, 25, 44, 49, 50, 52, 59, 105, 185, 236, 261, 294, 296, 315, 325], "vasudevan": 105, "vdot": 271, "vector": [14, 19, 20, 21, 22, 137, 139, 204, 206, 265, 266, 267, 271], "veloc": [237, 245, 247], "veri": [19, 66, 68, 105, 238], "versa": 246, "versatil": [261, 314], "version": [22, 44, 48, 52, 53, 54, 245, 271, 329], "vertic": [320, 323, 332], "vgg": 96, "vggnet": [51, 97, 98, 99, 100, 105], "vggnet_11": 105, "vggnet_13": 105, "vggnet_16": 105, "vggnet_19": 105, "via": [3, 4, 91], "vice": 246, "video": [127, 134, 165, 195, 219, 227, 230], "view": [48, 52, 111, 226, 227, 228, 229, 230, 318], "vinod": [5, 6], "vision": [56, 57, 60, 63, 105, 126, 194, 204, 335], "visual": [103, 105], "vol": 105, "vollgraf": 7, "volumetr": [127, 134, 165, 195, 219, 227, 230], "vstack": 313, "w": [63, 75, 76, 77, 78, 79, 80, 92, 93, 94, 105, 126, 127, 129, 133, 134, 137, 139, 151, 152, 154, 155, 158, 159, 161, 162, 164, 165, 169, 193, 194, 195, 204, 206, 215, 216, 218, 219, 223, 224, 227, 230, 326, 328], "w_": [126, 127, 151, 152, 154, 155, 158, 159, 161, 194, 195, 223, 224, 226, 227, 229, 230], "w_out": [126, 127, 154, 155, 158, 159], "wa": [45, 197, 198, 199, 200, 201, 251], "wai": [1, 24, 104, 249, 251, 318], "wang": 105, "want": [0, 10, 324, 326], "warn": [110, 112], "we": [3, 10, 250, 314], "weight": [64, 65, 66, 67, 68, 69, 70, 71, 82, 83, 84, 85, 86, 105, 125, 126, 127, 137, 139, 140, 141, 145, 146, 148, 149, 161, 169, 170, 174, 175, 178, 179, 193, 194, 195, 197, 198, 199, 200, 201, 204, 206, 208, 209, 212, 214, 215, 216, 217, 218, 219, 220, 234, 237, 238, 239, 240, 241, 242, 243, 244, 245, 247, 256, 261], "weight1": 112, "weight2": 112, "weight_decai": [237, 238, 239, 240, 241, 242, 243, 244, 245, 247], "weinberg": 105, "well": [26, 27, 28, 29, 31, 46, 91, 174, 175], "were": 114, "weyand": 105, "what": 251, "when": [0, 1, 3, 10, 17, 30, 108, 111, 113, 114, 116, 119, 125, 126, 127, 180, 205, 214, 215, 216, 217, 218, 219, 232, 235, 238, 246, 249, 251, 252, 253, 261, 272, 324, 326], "where": [3, 4, 5, 6, 7, 8, 13, 14, 16, 17, 18, 19, 20, 22, 61, 62, 101, 105, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 132, 133, 134, 137, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 169, 170, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 225, 226, 227, 228, 229, 230, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 253, 261, 263, 264, 268, 269, 270, 272, 273, 276, 277, 288, 292, 293, 294, 295, 296, 299, 301, 303, 306, 307, 308, 310, 315, 317, 321, 324, 325, 326, 327, 328, 329, 330, 331, 332], "whether": [1, 13, 30, 44, 45, 46, 61, 62, 108, 109, 174, 175, 245, 249, 254, 256, 257, 258, 260, 262, 276, 277, 294, 295, 296, 303, 308], "which": [0, 7, 10, 13, 14, 16, 17, 18, 19, 20, 22, 31, 47, 50, 56, 57, 59, 87, 88, 89, 90, 91, 95, 97, 98, 99, 100, 105, 108, 110, 112, 114, 119, 123, 142, 162, 166, 167, 168, 170, 180, 181, 184, 186, 189, 191, 197, 210, 212, 214, 215, 216, 217, 218, 219, 220, 240, 241, 243, 245, 249, 251, 253, 256, 257, 260, 285, 286, 287, 288, 289, 290, 293, 294, 295, 296, 297, 299, 300, 301, 303, 304, 305, 306, 308, 310, 317, 318, 320, 322, 325, 326, 328, 329, 330, 331, 332, 333, 335], "while": [10, 40, 41, 42, 43, 50, 56, 74, 75, 76, 77, 78, 79, 80, 87, 88, 89, 90, 95, 105, 111, 114, 130, 181, 185, 186, 234, 237, 238, 240, 241, 242, 243, 244, 245, 246, 247, 251, 318, 320, 329, 335], "who": [10, 110, 111, 112, 113], "whose": [22, 277, 280, 282, 284, 288, 292, 298], "wide": [4, 5, 6, 8, 11, 19, 63, 71, 72, 73, 105, 120, 185, 193, 194, 209], "wide_resnet_101": 105, "wide_resnet_50": 105, "wider": [72, 73, 125, 126], "wideresnet": 105, "width": [30, 31, 56, 59, 72, 73, 74, 75, 76, 77, 78, 79, 80, 91, 101, 105, 126, 127, 129, 133, 134, 151, 152, 154, 155, 158, 159, 161, 162, 170, 194, 195, 215, 216, 218, 219, 223, 224, 226, 227, 229, 230, 232, 326, 328, 333], "width_coef": 30, "width_multipli": [56, 59], "window": [153, 154, 155, 157, 158, 159, 225, 226, 227, 228, 229, 230, 238, 294, 296], "wise": [85, 87, 88, 89, 90, 105, 116, 117, 119, 120, 121, 122, 123, 124, 163, 164, 165, 169, 183, 189, 190, 197, 198, 199, 200, 201, 234, 250, 263, 264, 267, 268, 269, 270, 272, 273, 284, 285, 286, 287, 288, 289, 290, 291, 293, 297, 298, 299, 300, 301, 302, 304, 305, 306, 312, 323], "within": [2, 105, 106, 107, 110, 111, 112, 113, 114, 124, 161, 162, 179, 181, 182, 183, 185, 187, 188, 190, 191, 193, 194, 195, 197, 198, 199, 205, 208, 209, 210, 211, 212, 214, 215, 216, 217, 220, 225, 226, 227, 228, 229, 230, 236, 251, 274, 288, 331, 335], "without": [10, 74, 110, 111, 112, 137, 139, 193, 194, 195, 204, 206, 249, 252, 294, 316, 318, 322], "won": 251, "work": [1, 2, 3, 10, 12, 250, 253], "workflow": [261, 335], "workload": 10, "wrap": [3, 234, 251, 309], "wrapper": 234, "www": [5, 6], "x": [10, 11, 21, 48, 52, 81, 96, 101, 105, 106, 107, 108, 110, 111, 112, 113, 114, 123, 137, 139, 162, 166, 167, 168, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 225, 226, 227, 228, 229, 230, 234, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 254, 256, 257, 258, 260, 276, 277, 292, 314, 326, 327, 328, 329, 330, 331, 332, 333], "x1": 204, "x2": 204, "x_": [209, 212, 314], "x_c": [209, 212], "x_i": 208, "x_k": 209, "xavier": [174, 175, 178, 179], "xavier_norm": 173, "xavier_uniform": 173, "xception": [51, 105], "xiao": 7, "xie": 105, "xl": [43, 105], "xy": 314, "x\u2081": 204, "x\u2082": 204, "y": [101, 105, 110, 111, 112, 113, 114, 162, 166, 167, 168, 180, 181, 182, 183, 184, 185, 187, 188, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 225, 226, 227, 228, 229, 230, 254, 256, 257, 258, 260, 276, 277, 314, 329], "y_": [209, 212, 314], "y_c": [209, 212], "y_i": 208, "yann": [8, 105], "yet": [10, 250], "yield": [0, 1, 108, 251], "you": [0, 58, 106, 111, 113, 114, 234, 236, 249, 251, 261, 276, 277, 278, 282, 307, 309, 324, 326, 335], "your": [58, 234, 236, 249, 251, 261, 335], "z": [105, 277, 281, 282], "zalandoresearch": 7, "zeiler": [103, 105], "zero": [17, 19, 20, 46, 106, 116, 119, 125, 126, 127, 130, 131, 132, 133, 134, 153, 154, 155, 157, 158, 159, 172, 174, 175, 176, 177, 178, 179, 180, 182, 184, 185, 187, 193, 194, 195, 197, 198, 199, 200, 201, 220, 225, 226, 227, 228, 229, 230, 234, 235, 238, 239, 240, 241, 242, 243, 244, 245, 276, 277, 278, 282, 283, 288, 298, 315], "zero_grad": [109, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 262], "zeros_lik": [277, 283], "zfnet": [51, 105], "zhang": 105, "zhmoginov": 105, "zhu": 105, "zisserman": 105, "\u03c3\u1d62": 19}, "titles": ["data.ConcatDataset", "data.DataLoader", "data.Dataset", "lucid.data", "lucid.datasets", "CIFAR10", "CIFAR100", "FashionMNIST", "MNIST", "Image Datasets", "Lucid", "lucid.linalg", "lucid.linalg.cholesky", "lucid.linalg.det", "lucid.linalg.eig", "Linear Algebra Operations", "lucid.linalg.inv", "lucid.linalg.matrix_power", "lucid.linalg.norm", "lucid.linalg.pinv", "lucid.linalg.qr", "lucid.linalg.solve", "lucid.linalg.svd", "AlexNet", "alexnet", "DenseNet", "densenet_121", "densenet_169", "densenet_201", "densenet_264", "EfficientNet", "EfficientNet_V2", "efficientnet_b0", "efficientnet_b1", "efficientnet_b2", "efficientnet_b3", "efficientnet_b4", "efficientnet_b5", "efficientnet_b6", "efficientnet_b7", "efficientnet_v2_l", "efficientnet_v2_m", "efficientnet_v2_s", "efficientnet_v2_xl", "Inception", "inception_v1", "inception_v3", "inception_v4", "InceptionResNet", "inception_resnet_v1", "inception_resnet_v2", "ConvNets", "LeNet", "lenet_1", "lenet_4", "lenet_5", "MobileNet", "MobileNet_V2", "MobileNet_V3", "mobilenet", "mobilenet_v2", "mobilenet_v3_large", "mobilenet_v3_small", "ResNet", "resnet_1001", "resnet_101", "resnet_152", "resnet_18", "resnet_200", "resnet_269", "resnet_34", "resnet_50", "wide_resnet_101", "wide_resnet_50", "ResNeXt", "resnext_101_32x16d", "resnext_101_32x32d", "resnext_101_32x4d", "resnext_101_32x8d", "resnext_101_64x4d", "resnext_50_32x4d", "SENet", "se_resnet_101", "se_resnet_152", "se_resnet_18", "se_resnet_34", "se_resnet_50", "se_resnext_101_32x4d", "se_resnext_101_32x8d", "se_resnext_101_64x4d", "se_resnext_50_32x4d", "SKNet", "sk_resnet_18", "sk_resnet_34", "sk_resnet_50", "sk_resnext_50_32x4d", "VGGNet", "vggnet_11", "vggnet_13", "vggnet_16", "vggnet_19", "Xception", "xception", "ZFNet", "zfnet", "lucid.models", "models.summarize", "nn.Buffer", "nn.Module", "nn.Parameter", "nn.ModuleDict", "nn.ModuleList", "nn.ParameterDict", "nn.ParameterList", "nn.Sequential", "Containers", "nn.functional.elu", "nn.functional.gelu", "Activation Functions", "nn.functional.leaky_relu", "nn.functional.relu", "nn.functional.selu", "nn.functional.sigmoid", "nn.functional.softmax", "nn.functional.tanh", "nn.functional.conv1d", "nn.functional.conv2d", "nn.functional.conv3d", "Convolution Functions", "nn.functional.unfold", "nn.functional.alpha_dropout", "nn.functional.dropout", "nn.functional.dropout1d", "nn.functional.dropout2d", "nn.functional.dropout3d", "Dropout Functions", "lucid.nn.functional", "nn.functional.bilinear", "Linear Functions", "nn.functional.linear", "nn.functional.binary_cross_entropy", "nn.functional.cross_entropy", "nn.functional.huber_loss", "Loss Functions", "nn.functional.mse_loss", "nn.functional.nll_loss", "nn.functional.batch_norm", "Normalization Functions", "nn.functional.instance_norm", "nn.functional.layer_norm", "nn.functional.adaptive_avg_pool1d", "nn.functional.adaptive_avg_pool2d", "nn.functional.adaptive_avg_pool3d", "nn.functional.avg_pool1d", "nn.functional.avg_pool2d", "nn.functional.avg_pool3d", "Pooling Functions", "nn.functional.max_pool1d", "nn.functional.max_pool2d", "nn.functional.max_pool3d", "Utility Functions", "nn.functional.interpolate", "nn.functional.rotate", "nn.ConvBNReLU1d", "nn.ConvBNReLU2d", "nn.ConvBNReLU3d", "nn.DepthSeparableConv1d", "nn.DepthSeparableConv2d", "nn.DepthSeparableConv3d", "nn.SEModule", "nn.SelectiveKernel", "Fused Layers", "nn.init.constant", "Weight Initializations", "nn.init.kaiming_normal", "nn.init.kaiming_uniform", "nn.init.normal", "nn.init.uniform", "nn.init.xavier_normal", "nn.init.xavier_uniform", "nn.ELU", "nn.GELU", "nn.HardSigmoid", "nn.HardSwish", "nn.LeakyReLU", "nn.ReLU", "nn.ReLU6", "nn.SELU", "nn.Sigmoid", "nn.Softmax", "nn.Swish", "nn.Tanh", "Activation Layers", "nn.Conv1d", "nn.Conv2d", "nn.Conv3d", "Convolution Layers", "nn.AlphaDropout", "nn.Dropout", "nn.Dropout1d", "nn.Dropout2d", "nn.Dropout3d", "Dropout Layers", "Modules", "nn.Bilinear", "nn.Identity", "nn.Linear", "Linear Layers", "nn.BCELoss", "nn.CrossEntropyLoss", "nn.HuberLoss", "nn.MSELoss", "nn.NLLLoss", "Loss Layers", "nn.BatchNorm1d", "nn.BatchNorm2d", "nn.BatchNorm3d", "nn.InstanceNorm1d", "nn.InstanceNorm2d", "nn.InstanceNorm3d", "nn.LayerNorm", "Normalization Layers", "nn.AdaptiveAvgPool1d", "nn.AdaptiveAvgPool2d", "nn.AdaptiveAvgPool3d", "nn.AvgPool1d", "nn.AvgPool2d", "nn.AvgPool3d", "nn.MaxPool1d", "nn.MaxPool2d", "nn.MaxPool3d", "Pooling Layers", "nn.Upsample", "Vision Layers", "lucid.nn", "optim.Optimizer", "lucid.optim", "optim.ASGD", "optim.Adadelta", "optim.Adagrad", "optim.Adam", "optim.AdamW", "optim.Adamax", "optim.NAdam", "optim.RAdam", "optim.RMSprop", "optim.Rprop", "optim.SGD", "Optimizers", "lucid.grad_enabled", "lucid.newaxis", "lucid.no_grad", "lucid.register_model", "lucid.types", "lucid.random.bernoulli", "Random Number Generations", "lucid.random.rand", "lucid.random.randint", "lucid.random.randn", "lucid.random.seed", "lucid.random.uniform", "lucid.random", "lucid.Tensor", "lucid.add", "lucid.div", "lucid.dot", "lucid.inner", "lucid.matmul", "lucid.maximum", "lucid.minimum", "lucid.mul", "lucid.outer", "lucid.power", "lucid.sub", "lucid.arange", "lucid.diag", "lucid.empty", "lucid.empty_like", "lucid.eye", "lucid.ones", "lucid.ones_like", "lucid.zeros", "lucid.zeros_like", "Tensor Operations", "lucid.abs", "lucid.arccos", "lucid.arcsin", "lucid.arctan", "lucid.clip", "lucid.cos", "lucid.cosh", "lucid.cube", "lucid.exp", "lucid.log", "lucid.max", "lucid.mean", "lucid.min", "lucid.reciprocal", "lucid.sign", "lucid.sin", "lucid.sinh", "lucid.sqrt", "lucid.square", "lucid.sum", "lucid.tan", "lucid.tanh", "lucid.trace", "lucid.transpose", "lucid.var", "lucid.tensor", "lucid.concatenate", "lucid.flatten", "lucid.hstack", "Tensor Utilites", "lucid.meshgrid", "lucid.pad", "lucid.ravel", "lucid.repeat", "lucid.reshape", "lucid.squeeze", "lucid.stack", "lucid.tile", "lucid.unsqueeze", "lucid.vstack", "transforms.Compose", "transforms.ToTensor", "transforms.CenterCrop", "transforms.Normalize", "transforms.RandomCrop", "transforms.RandomGrayscale", "transforms.RandomHorizontalFlip", "transforms.RandomRotation", "transforms.RandomVerticalFlip", "transforms.Resize", "Image Transformations", "lucid.transforms"], "titleterms": {"1": 250, "1d": 250, "2": 250, "2d": 250, "3": 250, "It": [249, 251], "ab": 284, "activ": [118, 136, 192, 203], "ad": 250, "adadelta": 238, "adagrad": 239, "adam": 240, "adamax": 242, "adamw": 241, "adaptive_avg_pool1d": 150, "adaptive_avg_pool2d": 151, "adaptive_avg_pool3d": 152, "adaptiveavgpool1d": 222, "adaptiveavgpool2d": 223, "adaptiveavgpool3d": 224, "add": 263, "addit": 19, "admonit": 253, "advanc": [129, 335], "alexnet": [23, 24], "algebra": 15, "algorithm": [237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "alias": 253, "align": 250, "alpha_dropout": 130, "alphadropout": 197, "also": 236, "anoth": 309, "arang": 274, "arcco": 285, "architectur": [23, 53, 54, 55, 72, 73, 103], "arcsin": 286, "arctan": 287, "asgd": 237, "attent": 170, "attribut": [5, 6, 7, 8, 23, 48, 52, 63, 74, 81, 91, 96, 101, 103, 107, 109, 110, 111, 112, 113, 114, 163, 164, 165, 166, 167, 168, 169, 180, 181, 184, 185, 187, 188, 189, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 262, 326, 327, 328, 329, 330, 331, 332, 333], "avg_pool1d": 153, "avg_pool2d": 154, "avg_pool3d": 155, "avgpool1d": 225, "avgpool2d": 226, "avgpool3d": 227, "axi": 250, "backpropag": 262, "backwardbatch_norm": 146, "batchnorm": 171, "batchnorm1d": 214, "batchnorm2d": 215, "batchnorm3d": 216, "bceloss": 208, "behavior": [150, 151, 152, 222, 223, 224], "benefit": 251, "bernoulli": 254, "bilinear": [137, 204], "binari": 283, "binary_cross_entropi": 140, "bottleneck": [61, 62], "broadcast": 250, "buffer": 107, "calcul": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 63, 74, 81, 91, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 129, 137, 139, 150, 151, 152, 161, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333], "captur": 252, "case": 253, "centercrop": 326, "choleski": 12, "cifar10": 5, "cifar100": 6, "class": [0, 1, 2, 5, 6, 7, 8, 23, 25, 30, 31, 44, 48, 52, 56, 57, 58, 63, 74, 81, 91, 96, 101, 103, 107, 108, 109, 110, 111, 112, 113, 114, 163, 164, 165, 166, 167, 168, 169, 170, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 262, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333], "clip": 288, "co": 289, "combin": 0, "compon": [3, 10, 234], "compos": 324, "concatdataset": [0, 1], "concaten": 310, "conclus": [3, 10, 234, 249, 250, 251, 261, 325, 335], "configur": [30, 61, 62], "constant": 172, "contain": 115, "conv": 171, "conv1d": [125, 193], "conv2d": [126, 194], "conv3d": [127, 195], "convbnrelu1d": 163, "convbnrelu2d": 164, "convbnrelu3d": 165, "convnet": [51, 105], "convolut": [128, 136, 171, 196, 203], "core": 10, "cosh": 290, "creat": [109, 262, 309], "cross_entropi": 141, "crossentropyloss": 209, "cube": 291, "custom": [1, 2, 3, 108, 235, 236, 335], "data": [0, 1, 2, 3], "dataload": 1, "dataset": [0, 1, 2, 4, 9], "defin": [2, 108, 235, 236], "definit": 253, "densenet": 25, "densenet_121": 26, "densenet_169": 27, "densenet_201": 28, "densenet_264": 29, "depthseparableconv1d": 166, "depthseparableconv2d": 167, "depthseparableconv3d": 168, "depthwis": 171, "descript": [75, 76, 77, 78, 79, 80, 92, 93, 94, 252], "det": 13, "detail": [19, 72, 73], "diag": 275, "dilat": 129, "div": 264, "dot": 265, "dropout": [131, 135, 136, 198, 202, 203], "dropout1d": [132, 199], "dropout2d": [133, 200], "dropout3d": [134, 201], "efficientnet": 30, "efficientnet_b0": 32, "efficientnet_b1": 33, "efficientnet_b2": 34, "efficientnet_b3": 35, "efficientnet_b4": 36, "efficientnet_b5": 37, "efficientnet_b6": 38, "efficientnet_b7": 39, "efficientnet_v2": 31, "efficientnet_v2_": 42, "efficientnet_v2_l": 40, "efficientnet_v2_m": 41, "efficientnet_v2_xl": 43, "eig": 14, "elu": [116, 180], "empti": 276, "empty_lik": 277, "exampl": [0, 1, 2, 3, 5, 6, 7, 8, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 52, 53, 54, 55, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234, 235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 335], "excit": 171, "exp": 292, "ey": 278, "fashionmnist": 7, "featur": [4, 10, 11, 87, 88, 89, 90, 95, 236, 261, 335], "flatten": 311, "forward": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 63, 74, 81, 91, 101, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 129, 137, 139, 150, 151, 152, 161, 163, 164, 165, 166, 167, 168, 169, 170, 174, 175, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 326, 327, 328, 329, 330, 331, 332, 333], "from": 309, "function": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 53, 54, 55, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 100, 102, 104, 106, 116, 117, 118, 119, 120, 121, 122, 123, 124, 125, 126, 127, 128, 129, 130, 131, 132, 133, 134, 135, 136, 137, 138, 139, 140, 141, 142, 143, 144, 145, 146, 147, 148, 149, 150, 151, 152, 153, 154, 155, 156, 157, 158, 159, 160, 161, 162, 172, 174, 175, 176, 177, 178, 179, 249, 251, 252, 254, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 283, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323], "fuse": 171, "futur": 4, "gelu": [117, 181], "gener": [255, 283], "get": 236, "grad_en": 249, "gradient": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 137, 139, 161, 169, 179, 180, 181, 182, 183, 184, 185, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 225, 226, 227, 228, 229, 230, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 310, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323], "guidelin": 253, "hardsigmoid": 182, "hardswish": 183, "how": [249, 251], "hstack": 312, "huber_loss": 142, "huberloss": 210, "ident": 205, "imag": [9, 334], "incept": 44, "inception_resnet_v1": 49, "inception_resnet_v2": 50, "inception_v1": 45, "inception_v3": 46, "inception_v4": 47, "inceptionresnet": 48, "index": 262, "init": [172, 174, 175, 176, 177, 178, 179], "initi": 173, "inner": 266, "input": 309, "inspect": [236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "instance_norm": 148, "instancenorm1d": 217, "instancenorm2d": 218, "instancenorm3d": 219, "integr": [3, 234, 261, 335], "interpol": 161, "inv": 16, "iter": 262, "kaiming_norm": 174, "kaiming_uniform": 175, "kei": [3, 4, 10, 87, 88, 89, 90, 95, 234, 236, 261, 335], "kernel": 171, "layer": [171, 192, 196, 202, 203, 207, 213, 221, 231, 233], "layer_norm": 149, "layernorm": 220, "leaky_relu": 119, "leakyrelu": 184, "learn": 261, "lenet": 52, "lenet_1": 53, "lenet_4": 54, "lenet_5": 55, "limit": 10, "linalg": [11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22], "linear": [15, 136, 138, 139, 203, 206, 207], "list": 309, "load": 1, "log": 293, "loss": [136, 143, 203, 213], "lucid": [3, 4, 10, 11, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 105, 136, 234, 236, 249, 250, 251, 252, 253, 254, 256, 257, 258, 259, 260, 261, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 335], "matmul": 267, "matrix": 267, "matrix_pow": 17, "max": 294, "max_pool1d": 157, "max_pool2d": 158, "max_pool3d": 159, "maximum": 268, "maxpool1d": 228, "maxpool2d": 229, "maxpool3d": 230, "mean": 295, "mechan": 170, "meshgrid": 314, "metadata": 252, "method": [0, 1, 2, 5, 6, 7, 8, 48, 52, 96, 108, 109, 235, 262], "min": 296, "minimum": 269, "mnist": 8, "mobilenet": [56, 59], "mobilenet_v2": [57, 60], "mobilenet_v3": 58, "mobilenet_v3_larg": 61, "mobilenet_v3_smal": 62, "model": [105, 106, 234], "modul": [108, 203], "moduledict": 110, "modulelist": 111, "more": 261, "mse_loss": 144, "mseloss": 211, "mul": 270, "multipl": [0, 267], "nadam": 243, "new": 250, "newaxi": 250, "nll_loss": 145, "nllloss": 212, "nn": [107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 136, 137, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 234], "no_grad": 251, "norm": 18, "normal": [136, 147, 176, 203, 221, 327], "note": 10, "number": 255, "ones": 279, "ones_lik": 280, "oper": [15, 267, 283], "optim": [235, 236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 248], "organ": 234, "outer": 271, "overview": [3, 4, 10, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 64, 65, 66, 67, 68, 69, 70, 71, 82, 83, 84, 85, 86, 234, 236, 261, 335], "pad": 315, "paramet": [1, 5, 6, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 184, 185, 187, 188, 189, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 251, 252, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333], "parameterdict": 112, "parameterlist": 113, "pass": 101, "perform": 262, "pinv": 19, "pipelin": [3, 335], "pitfal": [249, 251], "pool": [136, 156, 203, 231], "potenti": [249, 251], "power": 272, "properti": [109, 262], "qr": 20, "radam": 244, "rais": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22], "rand": 256, "randint": 257, "randn": 258, "random": [254, 255, 256, 257, 258, 259, 260, 261], "randomcrop": 328, "randomgrayscal": 329, "randomhorizontalflip": 330, "randomrot": 331, "randomverticalflip": 332, "ravel": 316, "reciproc": 297, "refer": [5, 6, 7, 8, 169, 236], "register_model": 252, "relu": [120, 171, 185], "relu6": 186, "repeat": 317, "reshap": 318, "resiz": 333, "resnet": 63, "resnet_1001": 64, "resnet_101": 65, "resnet_152": 66, "resnet_18": 67, "resnet_200": 68, "resnet_269": 69, "resnet_34": 70, "resnet_50": 71, "resnext": 74, "resnext_101_32x16d": 75, "resnext_101_32x32d": 76, "resnext_101_32x4d": 77, "resnext_101_32x8d": 78, "resnext_101_64x4d": 79, "resnext_50_32x4d": 80, "return": [12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 24, 26, 27, 28, 29, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 45, 46, 47, 49, 50, 53, 54, 55, 59, 60, 61, 62, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 75, 76, 77, 78, 79, 80, 82, 83, 84, 85, 86, 87, 88, 89, 90, 92, 93, 94, 95, 97, 98, 99, 100, 102, 104, 106, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 170, 172, 174, 175, 176, 177, 178, 179, 186, 249, 251, 254, 256, 257, 258, 259, 260, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323], "rmsprop": 245, "rotat": 162, "rprop": 246, "rule": 267, "se_resnet_101": 82, "se_resnet_152": 83, "se_resnet_18": 84, "se_resnet_34": 85, "se_resnet_50": 86, "se_resnext_101_32x4d": 87, "se_resnext_101_32x8d": 88, "se_resnext_101_64x4d": 89, "se_resnext_50_32x4d": 90, "see": 236, "seed": 259, "select": 171, "selectivekernel": 170, "selu": [121, 187], "semodul": 169, "senet": 81, "separ": 171, "sequenti": 114, "sgd": 247, "sigmoid": [122, 188], "sign": 298, "signatur": [0, 1, 2, 5, 6, 7, 8, 12, 13, 14, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43, 44, 45, 46, 47, 48, 49, 50, 52, 53, 54, 55, 56, 57, 58, 59, 60, 61, 62, 63, 64, 65, 66, 67, 68, 69, 70, 71, 72, 73, 74, 75, 76, 77, 78, 79, 80, 81, 82, 83, 84, 85, 86, 87, 88, 89, 90, 91, 92, 93, 94, 95, 96, 97, 98, 99, 100, 101, 102, 103, 104, 106, 107, 108, 109, 110, 111, 112, 113, 114, 116, 117, 119, 120, 121, 122, 123, 124, 125, 126, 127, 129, 130, 131, 132, 133, 134, 137, 139, 140, 141, 142, 144, 145, 146, 148, 149, 150, 151, 152, 153, 154, 155, 157, 158, 159, 161, 162, 163, 164, 165, 166, 167, 168, 169, 170, 172, 174, 175, 176, 177, 178, 179, 180, 181, 182, 183, 184, 185, 186, 187, 188, 189, 190, 191, 193, 194, 195, 197, 198, 199, 200, 201, 204, 205, 206, 208, 209, 210, 211, 212, 214, 215, 216, 217, 218, 219, 220, 222, 223, 224, 225, 226, 227, 228, 229, 230, 232, 235, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 249, 251, 252, 254, 256, 257, 258, 259, 260, 262, 263, 264, 265, 266, 267, 268, 269, 270, 271, 272, 273, 274, 275, 276, 277, 278, 279, 280, 281, 282, 284, 285, 286, 287, 288, 289, 290, 291, 292, 293, 294, 295, 296, 297, 298, 299, 300, 301, 302, 303, 304, 305, 306, 307, 308, 309, 310, 311, 312, 314, 315, 316, 317, 318, 319, 320, 321, 322, 323, 324, 325, 326, 327, 328, 329, 330, 331, 332, 333], "sin": 299, "sinh": 300, "sk_resnet_18": 92, "sk_resnet_34": 93, "sk_resnet_50": 94, "sk_resnext_50_32x4d": 95, "sknet": 91, "slice": 262, "softmax": [123, 189], "solv": 21, "sqrt": 301, "squar": 302, "squeez": [171, 319], "stack": 320, "start": 236, "state": [236, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247], "sub": 273, "sum": 303, "summar": 106, "summari": 106, "svd": 22, "swish": 190, "tabl": 106, "tan": 304, "tanh": [124, 191, 305], "tensor": [250, 262, 283, 309, 313], "through": 262, "tile": 321, "totensor": 325, "trace": 306, "track": 262, "transform": [324, 325, 326, 327, 328, 329, 330, 331, 332, 333, 334, 335], "transpos": 307, "type": 253, "unari": 283, "unfold": 129, "uniform": [177, 260], "unsqueez": 322, "upsampl": 232, "us": [1, 237, 238, 239, 240, 241, 242, 243, 244, 245, 246, 247, 253, 309], "usag": [4, 10, 40, 41, 42, 43, 45, 46, 47, 49, 50, 52, 53, 54, 55, 87, 88, 89, 90, 95, 107, 162, 249, 250, 251, 253, 314, 324, 325, 335], "util": [136, 160], "utilit": 313, "var": 308, "vggnet": 96, "vggnet_11": 97, "vggnet_13": 98, "vggnet_16": 99, "vggnet_19": 100, "vision": [203, 233], "vstack": 323, "weight": 173, "why": 253, "wide_resnet_101": 72, "wide_resnet_50": 73, "work": [4, 249, 251], "xavier_norm": 178, "xavier_uniform": 179, "xception": [101, 102], "zero": 281, "zeros_lik": 282, "zfnet": [103, 104]}})